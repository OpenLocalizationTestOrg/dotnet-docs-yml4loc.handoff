### YamlMime:ManagedReference
items:
- uid: Microsoft.VisualBasic.CompilerServices.Operators
  commentId: T:Microsoft.VisualBasic.CompilerServices.Operators
  id: Operators
  children:
  - Microsoft.VisualBasic.CompilerServices.Operators.AddObject(System.Object,System.Object)
  - Microsoft.VisualBasic.CompilerServices.Operators.AndObject(System.Object,System.Object)
  - Microsoft.VisualBasic.CompilerServices.Operators.CompareObject(System.Object,System.Object,System.Boolean)
  - Microsoft.VisualBasic.CompilerServices.Operators.CompareObjectEqual(System.Object,System.Object,System.Boolean)
  - Microsoft.VisualBasic.CompilerServices.Operators.CompareObjectGreater(System.Object,System.Object,System.Boolean)
  - Microsoft.VisualBasic.CompilerServices.Operators.CompareObjectGreaterEqual(System.Object,System.Object,System.Boolean)
  - Microsoft.VisualBasic.CompilerServices.Operators.CompareObjectLess(System.Object,System.Object,System.Boolean)
  - Microsoft.VisualBasic.CompilerServices.Operators.CompareObjectLessEqual(System.Object,System.Object,System.Boolean)
  - Microsoft.VisualBasic.CompilerServices.Operators.CompareObjectNotEqual(System.Object,System.Object,System.Boolean)
  - Microsoft.VisualBasic.CompilerServices.Operators.CompareString(System.String,System.String,System.Boolean)
  - Microsoft.VisualBasic.CompilerServices.Operators.ConcatenateObject(System.Object,System.Object)
  - Microsoft.VisualBasic.CompilerServices.Operators.ConditionalCompareObjectEqual(System.Object,System.Object,System.Boolean)
  - Microsoft.VisualBasic.CompilerServices.Operators.ConditionalCompareObjectGreater(System.Object,System.Object,System.Boolean)
  - Microsoft.VisualBasic.CompilerServices.Operators.ConditionalCompareObjectGreaterEqual(System.Object,System.Object,System.Boolean)
  - Microsoft.VisualBasic.CompilerServices.Operators.ConditionalCompareObjectLess(System.Object,System.Object,System.Boolean)
  - Microsoft.VisualBasic.CompilerServices.Operators.ConditionalCompareObjectLessEqual(System.Object,System.Object,System.Boolean)
  - Microsoft.VisualBasic.CompilerServices.Operators.ConditionalCompareObjectNotEqual(System.Object,System.Object,System.Boolean)
  - Microsoft.VisualBasic.CompilerServices.Operators.DivideObject(System.Object,System.Object)
  - Microsoft.VisualBasic.CompilerServices.Operators.ExponentObject(System.Object,System.Object)
  - Microsoft.VisualBasic.CompilerServices.Operators.FallbackInvokeUserDefinedOperator(System.Object,System.Object[])
  - Microsoft.VisualBasic.CompilerServices.Operators.IntDivideObject(System.Object,System.Object)
  - Microsoft.VisualBasic.CompilerServices.Operators.LeftShiftObject(System.Object,System.Object)
  - Microsoft.VisualBasic.CompilerServices.Operators.LikeObject(System.Object,System.Object,Microsoft.VisualBasic.CompareMethod)
  - Microsoft.VisualBasic.CompilerServices.Operators.LikeString(System.String,System.String,Microsoft.VisualBasic.CompareMethod)
  - Microsoft.VisualBasic.CompilerServices.Operators.ModObject(System.Object,System.Object)
  - Microsoft.VisualBasic.CompilerServices.Operators.MultiplyObject(System.Object,System.Object)
  - Microsoft.VisualBasic.CompilerServices.Operators.NegateObject(System.Object)
  - Microsoft.VisualBasic.CompilerServices.Operators.NotObject(System.Object)
  - Microsoft.VisualBasic.CompilerServices.Operators.OrObject(System.Object,System.Object)
  - Microsoft.VisualBasic.CompilerServices.Operators.PlusObject(System.Object)
  - Microsoft.VisualBasic.CompilerServices.Operators.RightShiftObject(System.Object,System.Object)
  - Microsoft.VisualBasic.CompilerServices.Operators.SubtractObject(System.Object,System.Object)
  - Microsoft.VisualBasic.CompilerServices.Operators.XorObject(System.Object,System.Object)
  langs:
  - csharp
  name: Operators
  nameWithType: Operators
  fullName: Microsoft.VisualBasic.CompilerServices.Operators
  type: Class
  assemblies:
  - Microsoft.VisualBasic
  namespace: Microsoft.VisualBasic.CompilerServices
  summary: Provides late-bound math operators, such as <xref href="Microsoft.VisualBasic.CompilerServices.Operators.AddObject(System.Object,System.Object)"></xref> and <xref href="Microsoft.VisualBasic.CompilerServices.Operators.CompareObject(System.Object,System.Object,System.Boolean)"></xref>, which the Visual Basic compiler uses internally.
  remarks: This class supports the Visual Basic compiler and is not intended to be used directly from your code.
  syntax:
    content: public sealed class Operators
  inheritance:
  - System.Object
  implements: []
  inheritedMembers:
  - System.Object.Equals(System.Object)
  - System.Object.Equals(System.Object,System.Object)
  - System.Object.GetHashCode
  - System.Object.GetType
  - System.Object.MemberwiseClone
  - System.Object.ReferenceEquals(System.Object,System.Object)
  - System.Object.ToString
  attributes: []
  version:
  - netcore-1.0
  - netcore-1.1
  - netcore-2.0
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  monikers:
  - netcore-1.0
  - netcore-1.1
  - netcore-2.0
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  internal_use_only: true
  content_git_url: https://github.com/dotnet/docs/blob/master/xml/Microsoft.VisualBasic.CompilerServices/Operators.xml
  author: stevehoag
  ms.author: shoag
  manager: wpickett
- uid: Microsoft.VisualBasic.CompilerServices.Operators.AddObject(System.Object,System.Object)
  commentId: M:Microsoft.VisualBasic.CompilerServices.Operators.AddObject(System.Object,System.Object)
  id: AddObject(System.Object,System.Object)
  parent: Microsoft.VisualBasic.CompilerServices.Operators
  langs:
  - csharp
  name: AddObject(Object, Object)
  nameWithType: Operators.AddObject(Object, Object)
  fullName: Operators.AddObject(Object, Object)
  type: Method
  assemblies:
  - Microsoft.VisualBasic
  namespace: Microsoft.VisualBasic.CompilerServices
  summary: Represents the Visual Basic addition (+) operator.
  remarks: This class supports the Visual Basic compiler and is not intended to be used directly from your code.
  syntax:
    content: public static object AddObject (object Left, object Right);
    parameters:
    - id: Left
      type: System.Object
      description: Required. Any numeric expression.
    - id: Right
      type: System.Object
      description: Required. Any numeric expression.
    return:
      type: System.Object
      description: The sum of <code>Left</code> and <code>Right</code>.
  overload: Microsoft.VisualBasic.CompilerServices.Operators.AddObject*
  exceptions: []
  version:
  - netcore-1.0
  - netcore-1.1
  - netcore-2.0
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  monikers:
  - netcore-1.0
  - netcore-1.1
  - netcore-2.0
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  internal_use_only: true
  content_git_url: https://github.com/dotnet/docs/blob/master/xml/Microsoft.VisualBasic.CompilerServices/Operators.xml
  author: stevehoag
  ms.author: shoag
  manager: wpickett
- uid: Microsoft.VisualBasic.CompilerServices.Operators.AndObject(System.Object,System.Object)
  commentId: M:Microsoft.VisualBasic.CompilerServices.Operators.AndObject(System.Object,System.Object)
  id: AndObject(System.Object,System.Object)
  parent: Microsoft.VisualBasic.CompilerServices.Operators
  langs:
  - csharp
  name: AndObject(Object, Object)
  nameWithType: Operators.AndObject(Object, Object)
  fullName: Operators.AndObject(Object, Object)
  type: Method
  assemblies:
  - Microsoft.VisualBasic
  namespace: Microsoft.VisualBasic.CompilerServices
  summary: Represents the Visual Basic `And` operator.
  remarks: This class supports the Visual Basic compiler and is not intended to be used directly from your code.
  syntax:
    content: public static object AndObject (object Left, object Right);
    parameters:
    - id: Left
      type: System.Object
      description: Required. Any `Boolean` or numeric expression.
    - id: Right
      type: System.Object
      description: Required. Any `Boolean` or numeric expression.
    return:
      type: System.Object
      description: For `Boolean` operations, `True` if both <code>Left</code> and <code>Right</code> evaluate to `True`; otherwise, `False`. For bitwise operations, 1 if both <code>Left</code> and <code>Right</code> evaluate to 1; otherwise, 0.
  overload: Microsoft.VisualBasic.CompilerServices.Operators.AndObject*
  exceptions: []
  version:
  - netcore-1.0
  - netcore-1.1
  - netcore-2.0
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  monikers:
  - netcore-1.0
  - netcore-1.1
  - netcore-2.0
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  internal_use_only: true
  content_git_url: https://github.com/dotnet/docs/blob/master/xml/Microsoft.VisualBasic.CompilerServices/Operators.xml
  author: stevehoag
  ms.author: shoag
  manager: wpickett
- uid: Microsoft.VisualBasic.CompilerServices.Operators.CompareObject(System.Object,System.Object,System.Boolean)
  commentId: M:Microsoft.VisualBasic.CompilerServices.Operators.CompareObject(System.Object,System.Object,System.Boolean)
  id: CompareObject(System.Object,System.Object,System.Boolean)
  parent: Microsoft.VisualBasic.CompilerServices.Operators
  langs:
  - csharp
  name: CompareObject(Object, Object, Boolean)
  nameWithType: Operators.CompareObject(Object, Object, Boolean)
  fullName: Operators.CompareObject(Object, Object, Boolean)
  type: Method
  assemblies:
  - Microsoft.VisualBasic
  namespace: Microsoft.VisualBasic.CompilerServices
  summary: Represents Visual Basic comparison operators.
  remarks: This class supports the Visual Basic compiler and is not intended to be used directly from your code.
  syntax:
    content: public static int CompareObject (object Left, object Right, bool TextCompare);
    parameters:
    - id: Left
      type: System.Object
      description: Required. Any expression.
    - id: Right
      type: System.Object
      description: Required. Any expression.
    - id: TextCompare
      type: System.Boolean
      description: Required. `True` to perform a case-insensitive string comparison; otherwise, `False`.
    return:
      type: System.Int32
      description: "<table><thead><tr><th> Value  \n  \n </th><th> Condition  \n  \n </th></tr></thead><tbody><tr><td> -1  \n  \n </td><td>\n          <code>Left</code> is less than <code>Right</code>.  \n  \n </td></tr><tr><td> 0  \n  \n </td><td>\n          <code>Left</code> and <code>Right</code> are equal.  \n  \n </td></tr><tr><td> 1  \n  \n </td><td>\n          <code>Left</code> is greater than <code>Right</code>.  \n  \n </td></tr></tbody></table>"
  overload: Microsoft.VisualBasic.CompilerServices.Operators.CompareObject*
  exceptions: []
  version:
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  monikers:
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  internal_use_only: true
  content_git_url: https://github.com/dotnet/docs/blob/master/xml/Microsoft.VisualBasic.CompilerServices/Operators.xml
  author: stevehoag
  ms.author: shoag
  manager: wpickett
- uid: Microsoft.VisualBasic.CompilerServices.Operators.CompareObjectEqual(System.Object,System.Object,System.Boolean)
  commentId: M:Microsoft.VisualBasic.CompilerServices.Operators.CompareObjectEqual(System.Object,System.Object,System.Boolean)
  id: CompareObjectEqual(System.Object,System.Object,System.Boolean)
  parent: Microsoft.VisualBasic.CompilerServices.Operators
  langs:
  - csharp
  name: CompareObjectEqual(Object, Object, Boolean)
  nameWithType: Operators.CompareObjectEqual(Object, Object, Boolean)
  fullName: Operators.CompareObjectEqual(Object, Object, Boolean)
  type: Method
  assemblies:
  - Microsoft.VisualBasic
  namespace: Microsoft.VisualBasic.CompilerServices
  summary: Represents the Visual Basic equal (=) operator.
  remarks: This class supports the Visual Basic compiler and is not intended to be used directly from your code.
  syntax:
    content: public static object CompareObjectEqual (object Left, object Right, bool TextCompare);
    parameters:
    - id: Left
      type: System.Object
      description: Required. Any expression.
    - id: Right
      type: System.Object
      description: Required. Any expression.
    - id: TextCompare
      type: System.Boolean
      description: Required. `True` to perform a case-insensitive string comparison; otherwise, `False`.
    return:
      type: System.Object
      description: '`True` if <code>Left</code> and <code>Right</code> are equal; otherwise, `False`.'
  overload: Microsoft.VisualBasic.CompilerServices.Operators.CompareObjectEqual*
  exceptions: []
  version:
  - netcore-1.0
  - netcore-1.1
  - netcore-2.0
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  monikers:
  - netcore-1.0
  - netcore-1.1
  - netcore-2.0
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  internal_use_only: true
  content_git_url: https://github.com/dotnet/docs/blob/master/xml/Microsoft.VisualBasic.CompilerServices/Operators.xml
  author: stevehoag
  ms.author: shoag
  manager: wpickett
- uid: Microsoft.VisualBasic.CompilerServices.Operators.CompareObjectGreater(System.Object,System.Object,System.Boolean)
  commentId: M:Microsoft.VisualBasic.CompilerServices.Operators.CompareObjectGreater(System.Object,System.Object,System.Boolean)
  id: CompareObjectGreater(System.Object,System.Object,System.Boolean)
  parent: Microsoft.VisualBasic.CompilerServices.Operators
  langs:
  - csharp
  name: CompareObjectGreater(Object, Object, Boolean)
  nameWithType: Operators.CompareObjectGreater(Object, Object, Boolean)
  fullName: Operators.CompareObjectGreater(Object, Object, Boolean)
  type: Method
  assemblies:
  - Microsoft.VisualBasic
  namespace: Microsoft.VisualBasic.CompilerServices
  summary: Represents the Visual Basic greater-than (>) operator.
  remarks: This class supports the Visual Basic compiler and is not intended to be used directly from your code.
  syntax:
    content: public static object CompareObjectGreater (object Left, object Right, bool TextCompare);
    parameters:
    - id: Left
      type: System.Object
      description: Required. Any expression.
    - id: Right
      type: System.Object
      description: Required. Any expression.
    - id: TextCompare
      type: System.Boolean
      description: Required. `True` to perform a case-insensitive string comparison; otherwise, `False`.
    return:
      type: System.Object
      description: '`True` if <code>Left</code> is greater than <code>Right</code>; otherwise, `False`.'
  overload: Microsoft.VisualBasic.CompilerServices.Operators.CompareObjectGreater*
  exceptions: []
  version:
  - netcore-1.0
  - netcore-1.1
  - netcore-2.0
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  monikers:
  - netcore-1.0
  - netcore-1.1
  - netcore-2.0
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  internal_use_only: true
  content_git_url: https://github.com/dotnet/docs/blob/master/xml/Microsoft.VisualBasic.CompilerServices/Operators.xml
  author: stevehoag
  ms.author: shoag
  manager: wpickett
- uid: Microsoft.VisualBasic.CompilerServices.Operators.CompareObjectGreaterEqual(System.Object,System.Object,System.Boolean)
  commentId: M:Microsoft.VisualBasic.CompilerServices.Operators.CompareObjectGreaterEqual(System.Object,System.Object,System.Boolean)
  id: CompareObjectGreaterEqual(System.Object,System.Object,System.Boolean)
  parent: Microsoft.VisualBasic.CompilerServices.Operators
  langs:
  - csharp
  name: CompareObjectGreaterEqual(Object, Object, Boolean)
  nameWithType: Operators.CompareObjectGreaterEqual(Object, Object, Boolean)
  fullName: Operators.CompareObjectGreaterEqual(Object, Object, Boolean)
  type: Method
  assemblies:
  - Microsoft.VisualBasic
  namespace: Microsoft.VisualBasic.CompilerServices
  summary: Represents the Visual Basic greater-than or equal-to (>=) operator.
  remarks: This class supports the Visual Basic compiler and is not intended to be used directly from your code.
  syntax:
    content: public static object CompareObjectGreaterEqual (object Left, object Right, bool TextCompare);
    parameters:
    - id: Left
      type: System.Object
      description: Required. Any expression.
    - id: Right
      type: System.Object
      description: Required. Any expression.
    - id: TextCompare
      type: System.Boolean
      description: Required. `True` to perform a case-insensitive string comparison; otherwise, `False`.
    return:
      type: System.Object
      description: '`True` if <code>Left</code> is greater than or equal to <code>Right</code>; otherwise, `False`.'
  overload: Microsoft.VisualBasic.CompilerServices.Operators.CompareObjectGreaterEqual*
  exceptions: []
  version:
  - netcore-1.0
  - netcore-1.1
  - netcore-2.0
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  monikers:
  - netcore-1.0
  - netcore-1.1
  - netcore-2.0
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  internal_use_only: true
  content_git_url: https://github.com/dotnet/docs/blob/master/xml/Microsoft.VisualBasic.CompilerServices/Operators.xml
  author: stevehoag
  ms.author: shoag
  manager: wpickett
- uid: Microsoft.VisualBasic.CompilerServices.Operators.CompareObjectLess(System.Object,System.Object,System.Boolean)
  commentId: M:Microsoft.VisualBasic.CompilerServices.Operators.CompareObjectLess(System.Object,System.Object,System.Boolean)
  id: CompareObjectLess(System.Object,System.Object,System.Boolean)
  parent: Microsoft.VisualBasic.CompilerServices.Operators
  langs:
  - csharp
  name: CompareObjectLess(Object, Object, Boolean)
  nameWithType: Operators.CompareObjectLess(Object, Object, Boolean)
  fullName: Operators.CompareObjectLess(Object, Object, Boolean)
  type: Method
  assemblies:
  - Microsoft.VisualBasic
  namespace: Microsoft.VisualBasic.CompilerServices
  summary: Represents the Visual Basic less-than (<) operator.
  remarks: This class supports the Visual Basic compiler and is not intended to be used directly from your code.
  syntax:
    content: public static object CompareObjectLess (object Left, object Right, bool TextCompare);
    parameters:
    - id: Left
      type: System.Object
      description: Required. Any expression.
    - id: Right
      type: System.Object
      description: Required. Any expression.
    - id: TextCompare
      type: System.Boolean
      description: Required. `True` to perform a case-insensitive string comparison; otherwise, `False`.
    return:
      type: System.Object
      description: '`True` if <code>Left</code> is less than <code>Right</code>; otherwise, `False`.'
  overload: Microsoft.VisualBasic.CompilerServices.Operators.CompareObjectLess*
  exceptions: []
  version:
  - netcore-1.0
  - netcore-1.1
  - netcore-2.0
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  monikers:
  - netcore-1.0
  - netcore-1.1
  - netcore-2.0
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  internal_use_only: true
  content_git_url: https://github.com/dotnet/docs/blob/master/xml/Microsoft.VisualBasic.CompilerServices/Operators.xml
  author: stevehoag
  ms.author: shoag
  manager: wpickett
- uid: Microsoft.VisualBasic.CompilerServices.Operators.CompareObjectLessEqual(System.Object,System.Object,System.Boolean)
  commentId: M:Microsoft.VisualBasic.CompilerServices.Operators.CompareObjectLessEqual(System.Object,System.Object,System.Boolean)
  id: CompareObjectLessEqual(System.Object,System.Object,System.Boolean)
  parent: Microsoft.VisualBasic.CompilerServices.Operators
  langs:
  - csharp
  name: CompareObjectLessEqual(Object, Object, Boolean)
  nameWithType: Operators.CompareObjectLessEqual(Object, Object, Boolean)
  fullName: Operators.CompareObjectLessEqual(Object, Object, Boolean)
  type: Method
  assemblies:
  - Microsoft.VisualBasic
  namespace: Microsoft.VisualBasic.CompilerServices
  summary: Represents the Visual Basic less-than or equal-to (<=) operator.
  remarks: This class supports the Visual Basic compiler and is not intended to be used directly from your code.
  syntax:
    content: public static object CompareObjectLessEqual (object Left, object Right, bool TextCompare);
    parameters:
    - id: Left
      type: System.Object
      description: Required. Any expression.
    - id: Right
      type: System.Object
      description: Required. Any expression.
    - id: TextCompare
      type: System.Boolean
      description: Required. `True` to perform a case-insensitive string comparison; otherwise, `False`.
    return:
      type: System.Object
      description: '`True` if <code>Left</code> is less than or equal to <code>Right</code>; otherwise, `False`.'
  overload: Microsoft.VisualBasic.CompilerServices.Operators.CompareObjectLessEqual*
  exceptions: []
  version:
  - netcore-1.0
  - netcore-1.1
  - netcore-2.0
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  monikers:
  - netcore-1.0
  - netcore-1.1
  - netcore-2.0
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  internal_use_only: true
  content_git_url: https://github.com/dotnet/docs/blob/master/xml/Microsoft.VisualBasic.CompilerServices/Operators.xml
  author: stevehoag
  ms.author: shoag
  manager: wpickett
- uid: Microsoft.VisualBasic.CompilerServices.Operators.CompareObjectNotEqual(System.Object,System.Object,System.Boolean)
  commentId: M:Microsoft.VisualBasic.CompilerServices.Operators.CompareObjectNotEqual(System.Object,System.Object,System.Boolean)
  id: CompareObjectNotEqual(System.Object,System.Object,System.Boolean)
  parent: Microsoft.VisualBasic.CompilerServices.Operators
  langs:
  - csharp
  name: CompareObjectNotEqual(Object, Object, Boolean)
  nameWithType: Operators.CompareObjectNotEqual(Object, Object, Boolean)
  fullName: Operators.CompareObjectNotEqual(Object, Object, Boolean)
  type: Method
  assemblies:
  - Microsoft.VisualBasic
  namespace: Microsoft.VisualBasic.CompilerServices
  summary: Represents the Visual Basic not-equal (<>) operator.
  remarks: This class supports the Visual Basic compiler and is not intended to be used directly from your code.
  syntax:
    content: public static object CompareObjectNotEqual (object Left, object Right, bool TextCompare);
    parameters:
    - id: Left
      type: System.Object
      description: Required. Any expression.
    - id: Right
      type: System.Object
      description: Required. Any expression.
    - id: TextCompare
      type: System.Boolean
      description: Required. `True` to perform a case-insensitive string comparison; otherwise, `False`.
    return:
      type: System.Object
      description: '`True` if <code>Left</code> is not equal to <code>Right</code>; otherwise, `False`.'
  overload: Microsoft.VisualBasic.CompilerServices.Operators.CompareObjectNotEqual*
  exceptions: []
  version:
  - netcore-1.0
  - netcore-1.1
  - netcore-2.0
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  monikers:
  - netcore-1.0
  - netcore-1.1
  - netcore-2.0
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  internal_use_only: true
  content_git_url: https://github.com/dotnet/docs/blob/master/xml/Microsoft.VisualBasic.CompilerServices/Operators.xml
  author: stevehoag
  ms.author: shoag
  manager: wpickett
- uid: Microsoft.VisualBasic.CompilerServices.Operators.CompareString(System.String,System.String,System.Boolean)
  commentId: M:Microsoft.VisualBasic.CompilerServices.Operators.CompareString(System.String,System.String,System.Boolean)
  id: CompareString(System.String,System.String,System.Boolean)
  parent: Microsoft.VisualBasic.CompilerServices.Operators
  langs:
  - csharp
  name: CompareString(String, String, Boolean)
  nameWithType: Operators.CompareString(String, String, Boolean)
  fullName: Operators.CompareString(String, String, Boolean)
  type: Method
  assemblies:
  - Microsoft.VisualBasic
  namespace: Microsoft.VisualBasic.CompilerServices
  summary: Performs binary or text string comparison when given two strings.
  remarks: "This class supports the Visual Basic compiler and is not intended to be used directly from your code.  \n  \n When the Visual Basic equality operator is used to compare two strings, it passes the strings to the <xref:Microsoft.VisualBasic.CompilerServices.Operators.CompareString%2A> method along with a value of `False` for the `TextCompare` argument. This performs a case-sensitive comparison that is either ordinal or based on the current culture, depending on the value of the  statement."
  syntax:
    content: public static int CompareString (string Left, string Right, bool TextCompare);
    parameters:
    - id: Left
      type: System.String
      description: Required. Any `String` expression.
    - id: Right
      type: System.String
      description: Required. Any `String` expression.
    - id: TextCompare
      type: System.Boolean
      description: Required. `True` to perform a case-insensitive string comparison; otherwise, `False`.
    return:
      type: System.Int32
      description: "<table><thead><tr><th> Value  \n  \n </th><th> Condition  \n  \n </th></tr></thead><tbody><tr><td> -1  \n  \n </td><td>\n          <code>Left</code> is less than <code>Right</code>.  \n  \n </td></tr><tr><td> 0  \n  \n </td><td>\n          <code>Left</code> is equal to <code>Right</code>.  \n  \n </td></tr><tr><td> 1  \n  \n </td><td>\n          <code>Left</code> is greater than <code>Right</code>.  \n  \n </td></tr></tbody></table>"
  overload: Microsoft.VisualBasic.CompilerServices.Operators.CompareString*
  exceptions: []
  version:
  - netcore-1.0
  - netcore-1.1
  - netcore-2.0
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  monikers:
  - netcore-1.0
  - netcore-1.1
  - netcore-2.0
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  internal_use_only: true
  content_git_url: https://github.com/dotnet/docs/blob/master/xml/Microsoft.VisualBasic.CompilerServices/Operators.xml
  author: stevehoag
  ms.author: shoag
  manager: wpickett
- uid: Microsoft.VisualBasic.CompilerServices.Operators.ConcatenateObject(System.Object,System.Object)
  commentId: M:Microsoft.VisualBasic.CompilerServices.Operators.ConcatenateObject(System.Object,System.Object)
  id: ConcatenateObject(System.Object,System.Object)
  parent: Microsoft.VisualBasic.CompilerServices.Operators
  langs:
  - csharp
  name: ConcatenateObject(Object, Object)
  nameWithType: Operators.ConcatenateObject(Object, Object)
  fullName: Operators.ConcatenateObject(Object, Object)
  type: Method
  assemblies:
  - Microsoft.VisualBasic
  namespace: Microsoft.VisualBasic.CompilerServices
  summary: Represents the Visual Basic concatenation (&) operator.
  remarks: This class supports the Visual Basic compiler and is not intended to be used directly from your code.
  syntax:
    content: public static object ConcatenateObject (object Left, object Right);
    parameters:
    - id: Left
      type: System.Object
      description: Required. Any expression.
    - id: Right
      type: System.Object
      description: Required. Any expression.
    return:
      type: System.Object
      description: A string representing the concatenation of <code>Left</code> and <code>Right</code>.
  overload: Microsoft.VisualBasic.CompilerServices.Operators.ConcatenateObject*
  exceptions: []
  version:
  - netcore-1.0
  - netcore-1.1
  - netcore-2.0
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  monikers:
  - netcore-1.0
  - netcore-1.1
  - netcore-2.0
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  internal_use_only: true
  content_git_url: https://github.com/dotnet/docs/blob/master/xml/Microsoft.VisualBasic.CompilerServices/Operators.xml
  author: stevehoag
  ms.author: shoag
  manager: wpickett
- uid: Microsoft.VisualBasic.CompilerServices.Operators.ConditionalCompareObjectEqual(System.Object,System.Object,System.Boolean)
  commentId: M:Microsoft.VisualBasic.CompilerServices.Operators.ConditionalCompareObjectEqual(System.Object,System.Object,System.Boolean)
  id: ConditionalCompareObjectEqual(System.Object,System.Object,System.Boolean)
  parent: Microsoft.VisualBasic.CompilerServices.Operators
  langs:
  - csharp
  name: ConditionalCompareObjectEqual(Object, Object, Boolean)
  nameWithType: Operators.ConditionalCompareObjectEqual(Object, Object, Boolean)
  fullName: Operators.ConditionalCompareObjectEqual(Object, Object, Boolean)
  type: Method
  assemblies:
  - Microsoft.VisualBasic
  namespace: Microsoft.VisualBasic.CompilerServices
  summary: Represents the overloaded Visual Basic equals (=) operator.
  remarks: This class supports the Visual Basic compiler and is not intended to be used directly from your code.
  syntax:
    content: public static bool ConditionalCompareObjectEqual (object Left, object Right, bool TextCompare);
    parameters:
    - id: Left
      type: System.Object
      description: Required. Any expression.
    - id: Right
      type: System.Object
      description: Required. Any expression.
    - id: TextCompare
      type: System.Boolean
      description: Required. `True` to perform a case-insensitive string comparison; otherwise, `False`.
    return:
      type: System.Boolean
      description: The result of the overloaded equals operator. `False` if operator overloading is not supported.
  overload: Microsoft.VisualBasic.CompilerServices.Operators.ConditionalCompareObjectEqual*
  exceptions: []
  version:
  - netcore-1.0
  - netcore-1.1
  - netcore-2.0
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  monikers:
  - netcore-1.0
  - netcore-1.1
  - netcore-2.0
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  internal_use_only: true
  content_git_url: https://github.com/dotnet/docs/blob/master/xml/Microsoft.VisualBasic.CompilerServices/Operators.xml
  author: stevehoag
  ms.author: shoag
  manager: wpickett
- uid: Microsoft.VisualBasic.CompilerServices.Operators.ConditionalCompareObjectGreater(System.Object,System.Object,System.Boolean)
  commentId: M:Microsoft.VisualBasic.CompilerServices.Operators.ConditionalCompareObjectGreater(System.Object,System.Object,System.Boolean)
  id: ConditionalCompareObjectGreater(System.Object,System.Object,System.Boolean)
  parent: Microsoft.VisualBasic.CompilerServices.Operators
  langs:
  - csharp
  name: ConditionalCompareObjectGreater(Object, Object, Boolean)
  nameWithType: Operators.ConditionalCompareObjectGreater(Object, Object, Boolean)
  fullName: Operators.ConditionalCompareObjectGreater(Object, Object, Boolean)
  type: Method
  assemblies:
  - Microsoft.VisualBasic
  namespace: Microsoft.VisualBasic.CompilerServices
  summary: Represents the overloaded Visual Basic greater-than (>) operator.
  remarks: This class supports the Visual Basic compiler and is not intended to be used directly from your code.
  syntax:
    content: public static bool ConditionalCompareObjectGreater (object Left, object Right, bool TextCompare);
    parameters:
    - id: Left
      type: System.Object
      description: Required. Any expression.
    - id: Right
      type: System.Object
      description: Required. Any expression.
    - id: TextCompare
      type: System.Boolean
      description: Required. `True` to perform a case-insensitive string comparison; otherwise, `False`.
    return:
      type: System.Boolean
      description: The result of the overloaded greater-than operator. `False` if operator overloading is not supported.
  overload: Microsoft.VisualBasic.CompilerServices.Operators.ConditionalCompareObjectGreater*
  exceptions: []
  version:
  - netcore-1.0
  - netcore-1.1
  - netcore-2.0
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  monikers:
  - netcore-1.0
  - netcore-1.1
  - netcore-2.0
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  internal_use_only: true
  content_git_url: https://github.com/dotnet/docs/blob/master/xml/Microsoft.VisualBasic.CompilerServices/Operators.xml
  author: stevehoag
  ms.author: shoag
  manager: wpickett
- uid: Microsoft.VisualBasic.CompilerServices.Operators.ConditionalCompareObjectGreaterEqual(System.Object,System.Object,System.Boolean)
  commentId: M:Microsoft.VisualBasic.CompilerServices.Operators.ConditionalCompareObjectGreaterEqual(System.Object,System.Object,System.Boolean)
  id: ConditionalCompareObjectGreaterEqual(System.Object,System.Object,System.Boolean)
  parent: Microsoft.VisualBasic.CompilerServices.Operators
  langs:
  - csharp
  name: ConditionalCompareObjectGreaterEqual(Object, Object, Boolean)
  nameWithType: Operators.ConditionalCompareObjectGreaterEqual(Object, Object, Boolean)
  fullName: Operators.ConditionalCompareObjectGreaterEqual(Object, Object, Boolean)
  type: Method
  assemblies:
  - Microsoft.VisualBasic
  namespace: Microsoft.VisualBasic.CompilerServices
  summary: Represents the overloaded Visual Basic greater-than or equal-to (>=) operator.
  remarks: This class supports the Visual Basic compiler and is not intended to be used directly from your code.
  syntax:
    content: public static bool ConditionalCompareObjectGreaterEqual (object Left, object Right, bool TextCompare);
    parameters:
    - id: Left
      type: System.Object
      description: Required. Any expression.
    - id: Right
      type: System.Object
      description: Required. Any expression.
    - id: TextCompare
      type: System.Boolean
      description: Required. `True` to perform a case-insensitive string comparison; otherwise, `False`.
    return:
      type: System.Boolean
      description: The result of the overloaded greater-than or equal-to operator. `False` if operator overloading is not supported.
  overload: Microsoft.VisualBasic.CompilerServices.Operators.ConditionalCompareObjectGreaterEqual*
  exceptions: []
  version:
  - netcore-1.0
  - netcore-1.1
  - netcore-2.0
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  monikers:
  - netcore-1.0
  - netcore-1.1
  - netcore-2.0
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  internal_use_only: true
  content_git_url: https://github.com/dotnet/docs/blob/master/xml/Microsoft.VisualBasic.CompilerServices/Operators.xml
  author: stevehoag
  ms.author: shoag
  manager: wpickett
- uid: Microsoft.VisualBasic.CompilerServices.Operators.ConditionalCompareObjectLess(System.Object,System.Object,System.Boolean)
  commentId: M:Microsoft.VisualBasic.CompilerServices.Operators.ConditionalCompareObjectLess(System.Object,System.Object,System.Boolean)
  id: ConditionalCompareObjectLess(System.Object,System.Object,System.Boolean)
  parent: Microsoft.VisualBasic.CompilerServices.Operators
  langs:
  - csharp
  name: ConditionalCompareObjectLess(Object, Object, Boolean)
  nameWithType: Operators.ConditionalCompareObjectLess(Object, Object, Boolean)
  fullName: Operators.ConditionalCompareObjectLess(Object, Object, Boolean)
  type: Method
  assemblies:
  - Microsoft.VisualBasic
  namespace: Microsoft.VisualBasic.CompilerServices
  summary: Represents the overloaded Visual Basic less-than (<) operator.
  remarks: This class supports the Visual Basic compiler and is not intended to be used directly from your code.
  syntax:
    content: public static bool ConditionalCompareObjectLess (object Left, object Right, bool TextCompare);
    parameters:
    - id: Left
      type: System.Object
      description: Required. Any expression.
    - id: Right
      type: System.Object
      description: Required. Any expression.
    - id: TextCompare
      type: System.Boolean
      description: Required. `True` to perform a case-insensitive string comparison; otherwise, `False`.
    return:
      type: System.Boolean
      description: The result of the overloaded less-than operator. `False` if operator overloading is not supported.
  overload: Microsoft.VisualBasic.CompilerServices.Operators.ConditionalCompareObjectLess*
  exceptions: []
  version:
  - netcore-1.0
  - netcore-1.1
  - netcore-2.0
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  monikers:
  - netcore-1.0
  - netcore-1.1
  - netcore-2.0
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  internal_use_only: true
  content_git_url: https://github.com/dotnet/docs/blob/master/xml/Microsoft.VisualBasic.CompilerServices/Operators.xml
  author: stevehoag
  ms.author: shoag
  manager: wpickett
- uid: Microsoft.VisualBasic.CompilerServices.Operators.ConditionalCompareObjectLessEqual(System.Object,System.Object,System.Boolean)
  commentId: M:Microsoft.VisualBasic.CompilerServices.Operators.ConditionalCompareObjectLessEqual(System.Object,System.Object,System.Boolean)
  id: ConditionalCompareObjectLessEqual(System.Object,System.Object,System.Boolean)
  parent: Microsoft.VisualBasic.CompilerServices.Operators
  langs:
  - csharp
  name: ConditionalCompareObjectLessEqual(Object, Object, Boolean)
  nameWithType: Operators.ConditionalCompareObjectLessEqual(Object, Object, Boolean)
  fullName: Operators.ConditionalCompareObjectLessEqual(Object, Object, Boolean)
  type: Method
  assemblies:
  - Microsoft.VisualBasic
  namespace: Microsoft.VisualBasic.CompilerServices
  summary: Represents the overloaded Visual Basic less-than or equal-to (<=) operator.
  remarks: This class supports the Visual Basic compiler and is not intended to be used directly from your code.
  syntax:
    content: public static bool ConditionalCompareObjectLessEqual (object Left, object Right, bool TextCompare);
    parameters:
    - id: Left
      type: System.Object
      description: Required. Any expression.
    - id: Right
      type: System.Object
      description: Required. Any expression.
    - id: TextCompare
      type: System.Boolean
      description: Required. `True` to perform a case-insensitive string comparison; otherwise, `False`.
    return:
      type: System.Boolean
      description: The result of the overloaded less-than or equal-to operator. `False` if operator overloading is not supported.
  overload: Microsoft.VisualBasic.CompilerServices.Operators.ConditionalCompareObjectLessEqual*
  exceptions: []
  version:
  - netcore-1.0
  - netcore-1.1
  - netcore-2.0
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  monikers:
  - netcore-1.0
  - netcore-1.1
  - netcore-2.0
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  internal_use_only: true
  content_git_url: https://github.com/dotnet/docs/blob/master/xml/Microsoft.VisualBasic.CompilerServices/Operators.xml
  author: stevehoag
  ms.author: shoag
  manager: wpickett
- uid: Microsoft.VisualBasic.CompilerServices.Operators.ConditionalCompareObjectNotEqual(System.Object,System.Object,System.Boolean)
  commentId: M:Microsoft.VisualBasic.CompilerServices.Operators.ConditionalCompareObjectNotEqual(System.Object,System.Object,System.Boolean)
  id: ConditionalCompareObjectNotEqual(System.Object,System.Object,System.Boolean)
  parent: Microsoft.VisualBasic.CompilerServices.Operators
  langs:
  - csharp
  name: ConditionalCompareObjectNotEqual(Object, Object, Boolean)
  nameWithType: Operators.ConditionalCompareObjectNotEqual(Object, Object, Boolean)
  fullName: Operators.ConditionalCompareObjectNotEqual(Object, Object, Boolean)
  type: Method
  assemblies:
  - Microsoft.VisualBasic
  namespace: Microsoft.VisualBasic.CompilerServices
  summary: Represents the overloaded Visual Basic not-equal (<>) operator.
  remarks: This class supports the Visual Basic compiler and is not intended to be used directly from your code.
  syntax:
    content: public static bool ConditionalCompareObjectNotEqual (object Left, object Right, bool TextCompare);
    parameters:
    - id: Left
      type: System.Object
      description: Required. Any expression.
    - id: Right
      type: System.Object
      description: Required. Any expression.
    - id: TextCompare
      type: System.Boolean
      description: Required. `True` to perform a case-insensitive string comparison; otherwise, `False`.
    return:
      type: System.Boolean
      description: The result of the overloaded not-equal operator. `False` if operator overloading is not supported.
  overload: Microsoft.VisualBasic.CompilerServices.Operators.ConditionalCompareObjectNotEqual*
  exceptions: []
  version:
  - netcore-1.0
  - netcore-1.1
  - netcore-2.0
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  monikers:
  - netcore-1.0
  - netcore-1.1
  - netcore-2.0
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  internal_use_only: true
  content_git_url: https://github.com/dotnet/docs/blob/master/xml/Microsoft.VisualBasic.CompilerServices/Operators.xml
  author: stevehoag
  ms.author: shoag
  manager: wpickett
- uid: Microsoft.VisualBasic.CompilerServices.Operators.DivideObject(System.Object,System.Object)
  commentId: M:Microsoft.VisualBasic.CompilerServices.Operators.DivideObject(System.Object,System.Object)
  id: DivideObject(System.Object,System.Object)
  parent: Microsoft.VisualBasic.CompilerServices.Operators
  langs:
  - csharp
  name: DivideObject(Object, Object)
  nameWithType: Operators.DivideObject(Object, Object)
  fullName: Operators.DivideObject(Object, Object)
  type: Method
  assemblies:
  - Microsoft.VisualBasic
  namespace: Microsoft.VisualBasic.CompilerServices
  summary: Represents the Visual Basic division (/) operator.
  remarks: This class supports the Visual Basic compiler and is not intended to be used directly from your code.
  syntax:
    content: public static object DivideObject (object Left, object Right);
    parameters:
    - id: Left
      type: System.Object
      description: Required. Any numeric expression.
    - id: Right
      type: System.Object
      description: Required. Any numeric expression.
    return:
      type: System.Object
      description: The full quotient of <code>Left</code> divided by <code>Right</code>, including any remainder.
  overload: Microsoft.VisualBasic.CompilerServices.Operators.DivideObject*
  exceptions: []
  version:
  - netcore-1.0
  - netcore-1.1
  - netcore-2.0
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  monikers:
  - netcore-1.0
  - netcore-1.1
  - netcore-2.0
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  internal_use_only: true
  content_git_url: https://github.com/dotnet/docs/blob/master/xml/Microsoft.VisualBasic.CompilerServices/Operators.xml
  author: stevehoag
  ms.author: shoag
  manager: wpickett
- uid: Microsoft.VisualBasic.CompilerServices.Operators.ExponentObject(System.Object,System.Object)
  commentId: M:Microsoft.VisualBasic.CompilerServices.Operators.ExponentObject(System.Object,System.Object)
  id: ExponentObject(System.Object,System.Object)
  parent: Microsoft.VisualBasic.CompilerServices.Operators
  langs:
  - csharp
  name: ExponentObject(Object, Object)
  nameWithType: Operators.ExponentObject(Object, Object)
  fullName: Operators.ExponentObject(Object, Object)
  type: Method
  assemblies:
  - Microsoft.VisualBasic
  namespace: Microsoft.VisualBasic.CompilerServices
  summary: Represents the Visual Basic exponent (^) operator.
  remarks: This class supports the Visual Basic compiler and is not intended to be used directly from your code.
  syntax:
    content: public static object ExponentObject (object Left, object Right);
    parameters:
    - id: Left
      type: System.Object
      description: Required. Any numeric expression.
    - id: Right
      type: System.Object
      description: Required. Any numeric expression.
    return:
      type: System.Object
      description: The result of <code>Left</code> raised to the power of <code>Right</code>.
  overload: Microsoft.VisualBasic.CompilerServices.Operators.ExponentObject*
  exceptions: []
  version:
  - netcore-1.0
  - netcore-1.1
  - netcore-2.0
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  monikers:
  - netcore-1.0
  - netcore-1.1
  - netcore-2.0
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  internal_use_only: true
  content_git_url: https://github.com/dotnet/docs/blob/master/xml/Microsoft.VisualBasic.CompilerServices/Operators.xml
  author: stevehoag
  ms.author: shoag
  manager: wpickett
- uid: Microsoft.VisualBasic.CompilerServices.Operators.FallbackInvokeUserDefinedOperator(System.Object,System.Object[])
  commentId: M:Microsoft.VisualBasic.CompilerServices.Operators.FallbackInvokeUserDefinedOperator(System.Object,System.Object[])
  id: FallbackInvokeUserDefinedOperator(System.Object,System.Object[])
  parent: Microsoft.VisualBasic.CompilerServices.Operators
  langs:
  - csharp
  name: FallbackInvokeUserDefinedOperator(Object, Object[])
  nameWithType: Operators.FallbackInvokeUserDefinedOperator(Object, Object[])
  fullName: Operators.FallbackInvokeUserDefinedOperator(Object, Object[])
  type: Method
  assemblies:
  - Microsoft.VisualBasic
  namespace: Microsoft.VisualBasic.CompilerServices
  summary: Executes a late-bound evaluation of a user-defined operator. This helper method is not meant to be called directly from your code.
  syntax:
    content: >-
      [System.Obsolete("do not use this method", true)]

      public static object FallbackInvokeUserDefinedOperator (object vbOp, object[] Arguments);
    parameters:
    - id: vbOp
      type: System.Object
      description: The user-defined operator.
    - id: Arguments
      type: System.Object[]
      description: Argument values to pass to the user-defined operator.
    return:
      type: System.Object
      description: The result returned from the user-defined operator.
  overload: Microsoft.VisualBasic.CompilerServices.Operators.FallbackInvokeUserDefinedOperator*
  exceptions: []
  attributes:
  - type: System.ObsoleteAttribute
  version:
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  monikers:
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  internal_use_only: true
  content_git_url: https://github.com/dotnet/docs/blob/master/xml/Microsoft.VisualBasic.CompilerServices/Operators.xml
  author: stevehoag
  ms.author: shoag
  manager: wpickett
- uid: Microsoft.VisualBasic.CompilerServices.Operators.IntDivideObject(System.Object,System.Object)
  commentId: M:Microsoft.VisualBasic.CompilerServices.Operators.IntDivideObject(System.Object,System.Object)
  id: IntDivideObject(System.Object,System.Object)
  parent: Microsoft.VisualBasic.CompilerServices.Operators
  langs:
  - csharp
  name: IntDivideObject(Object, Object)
  nameWithType: Operators.IntDivideObject(Object, Object)
  fullName: Operators.IntDivideObject(Object, Object)
  type: Method
  assemblies:
  - Microsoft.VisualBasic
  namespace: Microsoft.VisualBasic.CompilerServices
  summary: Represents the Visual Basic integer division (\\) operator.
  remarks: This class supports the Visual Basic compiler and is not intended to be used directly from your code.
  syntax:
    content: public static object IntDivideObject (object Left, object Right);
    parameters:
    - id: Left
      type: System.Object
      description: Required. Any numeric expression.
    - id: Right
      type: System.Object
      description: Required. Any numeric expression.
    return:
      type: System.Object
      description: The integer quotient of <code>Left</code> divided by <code>Right</code>, which discards any remainder and retains only the integer portion.
  overload: Microsoft.VisualBasic.CompilerServices.Operators.IntDivideObject*
  exceptions: []
  version:
  - netcore-1.0
  - netcore-1.1
  - netcore-2.0
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  monikers:
  - netcore-1.0
  - netcore-1.1
  - netcore-2.0
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  internal_use_only: true
  content_git_url: https://github.com/dotnet/docs/blob/master/xml/Microsoft.VisualBasic.CompilerServices/Operators.xml
  author: stevehoag
  ms.author: shoag
  manager: wpickett
- uid: Microsoft.VisualBasic.CompilerServices.Operators.LeftShiftObject(System.Object,System.Object)
  commentId: M:Microsoft.VisualBasic.CompilerServices.Operators.LeftShiftObject(System.Object,System.Object)
  id: LeftShiftObject(System.Object,System.Object)
  parent: Microsoft.VisualBasic.CompilerServices.Operators
  langs:
  - csharp
  name: LeftShiftObject(Object, Object)
  nameWithType: Operators.LeftShiftObject(Object, Object)
  fullName: Operators.LeftShiftObject(Object, Object)
  type: Method
  assemblies:
  - Microsoft.VisualBasic
  namespace: Microsoft.VisualBasic.CompilerServices
  summary: Represents the Visual Basic arithmetic left shift (<<) operator.
  remarks: This class supports the Visual Basic compiler and is not intended to be used directly from your code.
  syntax:
    content: public static object LeftShiftObject (object Operand, object Amount);
    parameters:
    - id: Operand
      type: System.Object
      description: Required. Integral numeric expression. The bit pattern to be shifted. The data type must be an integral type (`SByte`, `Byte`, `Short`, `UShort`, `Integer`, `UInteger`, `Long`, or `ULong`).
    - id: Amount
      type: System.Object
      description: Required. Numeric expression. The number of bits to shift the bit pattern. The data type must be `Integer` or widen to `Integer`.
    return:
      type: System.Object
      description: An integral numeric value. The result of shifting the bit pattern. The data type is the same as that of <code>Operand</code>.
  overload: Microsoft.VisualBasic.CompilerServices.Operators.LeftShiftObject*
  exceptions: []
  version:
  - netcore-1.0
  - netcore-1.1
  - netcore-2.0
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  monikers:
  - netcore-1.0
  - netcore-1.1
  - netcore-2.0
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  internal_use_only: true
  content_git_url: https://github.com/dotnet/docs/blob/master/xml/Microsoft.VisualBasic.CompilerServices/Operators.xml
  author: stevehoag
  ms.author: shoag
  manager: wpickett
- uid: Microsoft.VisualBasic.CompilerServices.Operators.LikeObject(System.Object,System.Object,Microsoft.VisualBasic.CompareMethod)
  commentId: M:Microsoft.VisualBasic.CompilerServices.Operators.LikeObject(System.Object,System.Object,Microsoft.VisualBasic.CompareMethod)
  id: LikeObject(System.Object,System.Object,Microsoft.VisualBasic.CompareMethod)
  parent: Microsoft.VisualBasic.CompilerServices.Operators
  langs:
  - csharp
  name: LikeObject(Object, Object, CompareMethod)
  nameWithType: Operators.LikeObject(Object, Object, CompareMethod)
  fullName: Operators.LikeObject(Object, Object, CompareMethod)
  type: Method
  assemblies:
  - Microsoft.VisualBasic
  namespace: Microsoft.VisualBasic.CompilerServices
  summary: Represents the Visual Basic `Like` operator.
  remarks: This class supports the Visual Basic compiler and is not intended to be used directly from your code.
  syntax:
    content: public static object LikeObject (object Source, object Pattern, Microsoft.VisualBasic.CompareMethod CompareOption);
    parameters:
    - id: Source
      type: System.Object
      description: Required. Any expression.
    - id: Pattern
      type: System.Object
      description: Required. Any string expression conforming to the pattern-matching conventions described in Like Operator.
    - id: CompareOption
      type: Microsoft.VisualBasic.CompareMethod
      description: Required. A <xref href="Microsoft.VisualBasic.CompareMethod"></xref> value that specifies that the operation use either text or binary comparison.
    return:
      type: System.Object
      description: '`True` if the string representation of the value in <code>Source</code> satisfies the pattern that is contained in <code>Pattern</code>; otherwise, `False`. `True` if both <code>Source</code> and <code>Pattern</code> are `Nothing`.'
  overload: Microsoft.VisualBasic.CompilerServices.Operators.LikeObject*
  exceptions: []
  version:
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  monikers:
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  internal_use_only: true
  content_git_url: https://github.com/dotnet/docs/blob/master/xml/Microsoft.VisualBasic.CompilerServices/Operators.xml
  author: stevehoag
  ms.author: shoag
  manager: wpickett
- uid: Microsoft.VisualBasic.CompilerServices.Operators.LikeString(System.String,System.String,Microsoft.VisualBasic.CompareMethod)
  commentId: M:Microsoft.VisualBasic.CompilerServices.Operators.LikeString(System.String,System.String,Microsoft.VisualBasic.CompareMethod)
  id: LikeString(System.String,System.String,Microsoft.VisualBasic.CompareMethod)
  parent: Microsoft.VisualBasic.CompilerServices.Operators
  langs:
  - csharp
  name: LikeString(String, String, CompareMethod)
  nameWithType: Operators.LikeString(String, String, CompareMethod)
  fullName: Operators.LikeString(String, String, CompareMethod)
  type: Method
  assemblies:
  - Microsoft.VisualBasic
  namespace: Microsoft.VisualBasic.CompilerServices
  summary: Represents the Visual Basic `Like` operator.
  remarks: This class supports the Visual Basic compiler and is not intended to be used directly from your code.
  syntax:
    content: public static bool LikeString (string Source, string Pattern, Microsoft.VisualBasic.CompareMethod CompareOption);
    parameters:
    - id: Source
      type: System.String
      description: Required. Any `String` expression.
    - id: Pattern
      type: System.String
      description: Required. Any `String` expression conforming to the pattern-matching conventions described in Like Operator.
    - id: CompareOption
      type: Microsoft.VisualBasic.CompareMethod
      description: Required. A <xref href="Microsoft.VisualBasic.CompareMethod"></xref> value that specifies that the operation use either text or binary comparison.
    return:
      type: System.Boolean
      description: '`True` if the value in <code>Source</code> satisfies the pattern that is contained in <code>Pattern</code>; otherwise, `False`. `True` if both <code>Source</code> and <code>Pattern</code> are empty.'
  overload: Microsoft.VisualBasic.CompilerServices.Operators.LikeString*
  exceptions: []
  version:
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  monikers:
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  internal_use_only: true
  content_git_url: https://github.com/dotnet/docs/blob/master/xml/Microsoft.VisualBasic.CompilerServices/Operators.xml
  author: stevehoag
  ms.author: shoag
  manager: wpickett
- uid: Microsoft.VisualBasic.CompilerServices.Operators.ModObject(System.Object,System.Object)
  commentId: M:Microsoft.VisualBasic.CompilerServices.Operators.ModObject(System.Object,System.Object)
  id: ModObject(System.Object,System.Object)
  parent: Microsoft.VisualBasic.CompilerServices.Operators
  langs:
  - csharp
  name: ModObject(Object, Object)
  nameWithType: Operators.ModObject(Object, Object)
  fullName: Operators.ModObject(Object, Object)
  type: Method
  assemblies:
  - Microsoft.VisualBasic
  namespace: Microsoft.VisualBasic.CompilerServices
  summary: Represents the Visual Basic `Mod` operator.
  remarks: This class supports the Visual Basic compiler and is not intended to be used directly from your code.
  syntax:
    content: public static object ModObject (object Left, object Right);
    parameters:
    - id: Left
      type: System.Object
      description: Required. Any numeric expression.
    - id: Right
      type: System.Object
      description: Required. Any numeric expression.
    return:
      type: System.Object
      description: The remainder after <code>Left</code> is divided by <code>Right</code>.
  overload: Microsoft.VisualBasic.CompilerServices.Operators.ModObject*
  exceptions: []
  version:
  - netcore-1.0
  - netcore-1.1
  - netcore-2.0
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  monikers:
  - netcore-1.0
  - netcore-1.1
  - netcore-2.0
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  internal_use_only: true
  content_git_url: https://github.com/dotnet/docs/blob/master/xml/Microsoft.VisualBasic.CompilerServices/Operators.xml
  author: stevehoag
  ms.author: shoag
  manager: wpickett
- uid: Microsoft.VisualBasic.CompilerServices.Operators.MultiplyObject(System.Object,System.Object)
  commentId: M:Microsoft.VisualBasic.CompilerServices.Operators.MultiplyObject(System.Object,System.Object)
  id: MultiplyObject(System.Object,System.Object)
  parent: Microsoft.VisualBasic.CompilerServices.Operators
  langs:
  - csharp
  name: MultiplyObject(Object, Object)
  nameWithType: Operators.MultiplyObject(Object, Object)
  fullName: Operators.MultiplyObject(Object, Object)
  type: Method
  assemblies:
  - Microsoft.VisualBasic
  namespace: Microsoft.VisualBasic.CompilerServices
  summary: Represents the Visual Basic multiply (*) operator.
  remarks: This class supports the Visual Basic compiler and is not intended to be used directly from your code.
  syntax:
    content: public static object MultiplyObject (object Left, object Right);
    parameters:
    - id: Left
      type: System.Object
      description: Required. Any numeric expression.
    - id: Right
      type: System.Object
      description: Required. Any numeric expression.
    return:
      type: System.Object
      description: The product of <code>Left</code> and <code>Right</code>.
  overload: Microsoft.VisualBasic.CompilerServices.Operators.MultiplyObject*
  exceptions: []
  version:
  - netcore-1.0
  - netcore-1.1
  - netcore-2.0
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  monikers:
  - netcore-1.0
  - netcore-1.1
  - netcore-2.0
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  internal_use_only: true
  content_git_url: https://github.com/dotnet/docs/blob/master/xml/Microsoft.VisualBasic.CompilerServices/Operators.xml
  author: stevehoag
  ms.author: shoag
  manager: wpickett
- uid: Microsoft.VisualBasic.CompilerServices.Operators.NegateObject(System.Object)
  commentId: M:Microsoft.VisualBasic.CompilerServices.Operators.NegateObject(System.Object)
  id: NegateObject(System.Object)
  parent: Microsoft.VisualBasic.CompilerServices.Operators
  langs:
  - csharp
  name: NegateObject(Object)
  nameWithType: Operators.NegateObject(Object)
  fullName: Operators.NegateObject(Object)
  type: Method
  assemblies:
  - Microsoft.VisualBasic
  namespace: Microsoft.VisualBasic.CompilerServices
  summary: Represents the Visual Basic unary minus (–) operator.
  remarks: This class supports the Visual Basic compiler and is not intended to be used directly from your code.
  syntax:
    content: public static object NegateObject (object Operand);
    parameters:
    - id: Operand
      type: System.Object
      description: Required. Any numeric expression.
    return:
      type: System.Object
      description: The negative value of <code>Operand</code>.
  overload: Microsoft.VisualBasic.CompilerServices.Operators.NegateObject*
  exceptions: []
  version:
  - netcore-1.0
  - netcore-1.1
  - netcore-2.0
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  monikers:
  - netcore-1.0
  - netcore-1.1
  - netcore-2.0
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  internal_use_only: true
  content_git_url: https://github.com/dotnet/docs/blob/master/xml/Microsoft.VisualBasic.CompilerServices/Operators.xml
  author: stevehoag
  ms.author: shoag
  manager: wpickett
- uid: Microsoft.VisualBasic.CompilerServices.Operators.NotObject(System.Object)
  commentId: M:Microsoft.VisualBasic.CompilerServices.Operators.NotObject(System.Object)
  id: NotObject(System.Object)
  parent: Microsoft.VisualBasic.CompilerServices.Operators
  langs:
  - csharp
  name: NotObject(Object)
  nameWithType: Operators.NotObject(Object)
  fullName: Operators.NotObject(Object)
  type: Method
  assemblies:
  - Microsoft.VisualBasic
  namespace: Microsoft.VisualBasic.CompilerServices
  summary: Represents the Visual Basic `Not` operator.
  remarks: This class supports the Visual Basic compiler and is not intended to be used directly from your code.
  syntax:
    content: public static object NotObject (object Operand);
    parameters:
    - id: Operand
      type: System.Object
      description: Required. Any `Boolean` or numeric expression.
    return:
      type: System.Object
      description: For `Boolean` operations, `False` if <code>Operand</code> is `True`; otherwise, `True`. For bitwise operations, 1 if <code>Operand</code> is 0; otherwise, 0.
  overload: Microsoft.VisualBasic.CompilerServices.Operators.NotObject*
  exceptions: []
  version:
  - netcore-1.0
  - netcore-1.1
  - netcore-2.0
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  monikers:
  - netcore-1.0
  - netcore-1.1
  - netcore-2.0
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  internal_use_only: true
  content_git_url: https://github.com/dotnet/docs/blob/master/xml/Microsoft.VisualBasic.CompilerServices/Operators.xml
  author: stevehoag
  ms.author: shoag
  manager: wpickett
- uid: Microsoft.VisualBasic.CompilerServices.Operators.OrObject(System.Object,System.Object)
  commentId: M:Microsoft.VisualBasic.CompilerServices.Operators.OrObject(System.Object,System.Object)
  id: OrObject(System.Object,System.Object)
  parent: Microsoft.VisualBasic.CompilerServices.Operators
  langs:
  - csharp
  name: OrObject(Object, Object)
  nameWithType: Operators.OrObject(Object, Object)
  fullName: Operators.OrObject(Object, Object)
  type: Method
  assemblies:
  - Microsoft.VisualBasic
  namespace: Microsoft.VisualBasic.CompilerServices
  summary: Represents the Visual Basic `Or` operator.
  remarks: This class supports the Visual Basic compiler and is not intended to be used directly from your code.
  syntax:
    content: public static object OrObject (object Left, object Right);
    parameters:
    - id: Left
      type: System.Object
      description: Required. Any `Boolean` or numeric expression.
    - id: Right
      type: System.Object
      description: Required. Any `Boolean` or numeric expression.
    return:
      type: System.Object
      description: For `Boolean` operations, `False` if both <code>Left</code> and <code>Right</code> evaluate to `False`; otherwise, `True`. For bitwise operations, 0 if both <code>Left</code> and <code>Right</code> evaluate to 0; otherwise, 1.
  overload: Microsoft.VisualBasic.CompilerServices.Operators.OrObject*
  exceptions: []
  version:
  - netcore-1.0
  - netcore-1.1
  - netcore-2.0
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  monikers:
  - netcore-1.0
  - netcore-1.1
  - netcore-2.0
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  internal_use_only: true
  content_git_url: https://github.com/dotnet/docs/blob/master/xml/Microsoft.VisualBasic.CompilerServices/Operators.xml
  author: stevehoag
  ms.author: shoag
  manager: wpickett
- uid: Microsoft.VisualBasic.CompilerServices.Operators.PlusObject(System.Object)
  commentId: M:Microsoft.VisualBasic.CompilerServices.Operators.PlusObject(System.Object)
  id: PlusObject(System.Object)
  parent: Microsoft.VisualBasic.CompilerServices.Operators
  langs:
  - csharp
  name: PlusObject(Object)
  nameWithType: Operators.PlusObject(Object)
  fullName: Operators.PlusObject(Object)
  type: Method
  assemblies:
  - Microsoft.VisualBasic
  namespace: Microsoft.VisualBasic.CompilerServices
  summary: Represents the Visual Basic unary plus (+) operator.
  remarks: This class supports the Visual Basic compiler and is not intended to be used directly from your code.
  syntax:
    content: public static object PlusObject (object Operand);
    parameters:
    - id: Operand
      type: System.Object
      description: Required. Any numeric expression.
    return:
      type: System.Object
      description: The value of <code>Operand</code>. (The sign of the <code>Operand</code> is unchanged.)
  overload: Microsoft.VisualBasic.CompilerServices.Operators.PlusObject*
  exceptions: []
  version:
  - netcore-1.0
  - netcore-1.1
  - netcore-2.0
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  monikers:
  - netcore-1.0
  - netcore-1.1
  - netcore-2.0
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  internal_use_only: true
  content_git_url: https://github.com/dotnet/docs/blob/master/xml/Microsoft.VisualBasic.CompilerServices/Operators.xml
  author: stevehoag
  ms.author: shoag
  manager: wpickett
- uid: Microsoft.VisualBasic.CompilerServices.Operators.RightShiftObject(System.Object,System.Object)
  commentId: M:Microsoft.VisualBasic.CompilerServices.Operators.RightShiftObject(System.Object,System.Object)
  id: RightShiftObject(System.Object,System.Object)
  parent: Microsoft.VisualBasic.CompilerServices.Operators
  langs:
  - csharp
  name: RightShiftObject(Object, Object)
  nameWithType: Operators.RightShiftObject(Object, Object)
  fullName: Operators.RightShiftObject(Object, Object)
  type: Method
  assemblies:
  - Microsoft.VisualBasic
  namespace: Microsoft.VisualBasic.CompilerServices
  summary: Represents the Visual Basic arithmetic right shift (>>) operator.
  remarks: This class supports the Visual Basic compiler and is not intended to be used directly from your code.
  syntax:
    content: public static object RightShiftObject (object Operand, object Amount);
    parameters:
    - id: Operand
      type: System.Object
      description: Required. Integral numeric expression. The bit pattern to be shifted. The data type must be an integral type (`SByte`, `Byte`, `Short`, `UShort`, `Integer`, `UInteger`, `Long`, or `ULong`).
    - id: Amount
      type: System.Object
      description: Required. Numeric expression. The number of bits to shift the bit pattern. The data type must be `Integer` or widen to `Integer`.
    return:
      type: System.Object
      description: An integral numeric value. The result of shifting the bit pattern. The data type is the same as that of <code>Operand</code>.
  overload: Microsoft.VisualBasic.CompilerServices.Operators.RightShiftObject*
  exceptions: []
  version:
  - netcore-1.0
  - netcore-1.1
  - netcore-2.0
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  monikers:
  - netcore-1.0
  - netcore-1.1
  - netcore-2.0
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  internal_use_only: true
  content_git_url: https://github.com/dotnet/docs/blob/master/xml/Microsoft.VisualBasic.CompilerServices/Operators.xml
  author: stevehoag
  ms.author: shoag
  manager: wpickett
- uid: Microsoft.VisualBasic.CompilerServices.Operators.SubtractObject(System.Object,System.Object)
  commentId: M:Microsoft.VisualBasic.CompilerServices.Operators.SubtractObject(System.Object,System.Object)
  id: SubtractObject(System.Object,System.Object)
  parent: Microsoft.VisualBasic.CompilerServices.Operators
  langs:
  - csharp
  name: SubtractObject(Object, Object)
  nameWithType: Operators.SubtractObject(Object, Object)
  fullName: Operators.SubtractObject(Object, Object)
  type: Method
  assemblies:
  - Microsoft.VisualBasic
  namespace: Microsoft.VisualBasic.CompilerServices
  summary: Represents the Visual Basic subtraction (–) operator.
  remarks: This class supports the Visual Basic compiler and is not intended to be used directly from your code.
  syntax:
    content: public static object SubtractObject (object Left, object Right);
    parameters:
    - id: Left
      type: System.Object
      description: Required. Any numeric expression.
    - id: Right
      type: System.Object
      description: Required. Any numeric expression.
    return:
      type: System.Object
      description: The difference between <code>Left</code> and <code>Right</code>.
  overload: Microsoft.VisualBasic.CompilerServices.Operators.SubtractObject*
  exceptions: []
  version:
  - netcore-1.0
  - netcore-1.1
  - netcore-2.0
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  monikers:
  - netcore-1.0
  - netcore-1.1
  - netcore-2.0
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  internal_use_only: true
  content_git_url: https://github.com/dotnet/docs/blob/master/xml/Microsoft.VisualBasic.CompilerServices/Operators.xml
  author: stevehoag
  ms.author: shoag
  manager: wpickett
- uid: Microsoft.VisualBasic.CompilerServices.Operators.XorObject(System.Object,System.Object)
  commentId: M:Microsoft.VisualBasic.CompilerServices.Operators.XorObject(System.Object,System.Object)
  id: XorObject(System.Object,System.Object)
  parent: Microsoft.VisualBasic.CompilerServices.Operators
  langs:
  - csharp
  name: XorObject(Object, Object)
  nameWithType: Operators.XorObject(Object, Object)
  fullName: Operators.XorObject(Object, Object)
  type: Method
  assemblies:
  - Microsoft.VisualBasic
  namespace: Microsoft.VisualBasic.CompilerServices
  summary: Represents the Visual Basic `Xor` operator.
  remarks: This class supports the Visual Basic compiler and is not intended to be used directly from your code.
  syntax:
    content: public static object XorObject (object Left, object Right);
    parameters:
    - id: Left
      type: System.Object
      description: Required. Any `Boolean` or numeric expression.
    - id: Right
      type: System.Object
      description: Required. Any `Boolean` or numeric expression.
    return:
      type: System.Object
      description: A `Boolean` or numeric value. For a `Boolean` comparison, the return value is the logical exclusion (exclusive logical disjunction) of two `Boolean` values. For bitwise (numeric) operations, the return value is a numeric value that represents the bitwise exclusion (exclusive bitwise disjunction) of two numeric bit patterns. For more information, see [Xor Operator](~/docs/visual-basic/language-reference/operators/xor-operator.md).
  overload: Microsoft.VisualBasic.CompilerServices.Operators.XorObject*
  exceptions: []
  version:
  - netcore-1.0
  - netcore-1.1
  - netcore-2.0
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  monikers:
  - netcore-1.0
  - netcore-1.1
  - netcore-2.0
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  internal_use_only: true
  content_git_url: https://github.com/dotnet/docs/blob/master/xml/Microsoft.VisualBasic.CompilerServices/Operators.xml
  author: stevehoag
  ms.author: shoag
  manager: wpickett
references:
- uid: System.Object
  parent: System
  isExternal: false
  name: Object
  nameWithType: Object
  fullName: System.Object
- uid: Microsoft.VisualBasic.CompilerServices.Operators.AddObject(System.Object,System.Object)
  parent: Microsoft.VisualBasic.CompilerServices.Operators
  isExternal: false
  name: AddObject(Object, Object)
  nameWithType: Operators.AddObject(Object, Object)
  fullName: Operators.AddObject(Object, Object)
- uid: Microsoft.VisualBasic.CompilerServices.Operators.AndObject(System.Object,System.Object)
  parent: Microsoft.VisualBasic.CompilerServices.Operators
  isExternal: false
  name: AndObject(Object, Object)
  nameWithType: Operators.AndObject(Object, Object)
  fullName: Operators.AndObject(Object, Object)
- uid: Microsoft.VisualBasic.CompilerServices.Operators.CompareObject(System.Object,System.Object,System.Boolean)
  parent: Microsoft.VisualBasic.CompilerServices.Operators
  isExternal: false
  name: CompareObject(Object, Object, Boolean)
  nameWithType: Operators.CompareObject(Object, Object, Boolean)
  fullName: Operators.CompareObject(Object, Object, Boolean)
- uid: System.Int32
  parent: System
  isExternal: false
  name: Int32
  nameWithType: Int32
  fullName: System.Int32
- uid: System.Boolean
  parent: System
  isExternal: false
  name: Boolean
  nameWithType: Boolean
  fullName: System.Boolean
- uid: Microsoft.VisualBasic.CompilerServices.Operators.CompareObjectEqual(System.Object,System.Object,System.Boolean)
  parent: Microsoft.VisualBasic.CompilerServices.Operators
  isExternal: false
  name: CompareObjectEqual(Object, Object, Boolean)
  nameWithType: Operators.CompareObjectEqual(Object, Object, Boolean)
  fullName: Operators.CompareObjectEqual(Object, Object, Boolean)
- uid: Microsoft.VisualBasic.CompilerServices.Operators.CompareObjectGreater(System.Object,System.Object,System.Boolean)
  parent: Microsoft.VisualBasic.CompilerServices.Operators
  isExternal: false
  name: CompareObjectGreater(Object, Object, Boolean)
  nameWithType: Operators.CompareObjectGreater(Object, Object, Boolean)
  fullName: Operators.CompareObjectGreater(Object, Object, Boolean)
- uid: Microsoft.VisualBasic.CompilerServices.Operators.CompareObjectGreaterEqual(System.Object,System.Object,System.Boolean)
  parent: Microsoft.VisualBasic.CompilerServices.Operators
  isExternal: false
  name: CompareObjectGreaterEqual(Object, Object, Boolean)
  nameWithType: Operators.CompareObjectGreaterEqual(Object, Object, Boolean)
  fullName: Operators.CompareObjectGreaterEqual(Object, Object, Boolean)
- uid: Microsoft.VisualBasic.CompilerServices.Operators.CompareObjectLess(System.Object,System.Object,System.Boolean)
  parent: Microsoft.VisualBasic.CompilerServices.Operators
  isExternal: false
  name: CompareObjectLess(Object, Object, Boolean)
  nameWithType: Operators.CompareObjectLess(Object, Object, Boolean)
  fullName: Operators.CompareObjectLess(Object, Object, Boolean)
- uid: Microsoft.VisualBasic.CompilerServices.Operators.CompareObjectLessEqual(System.Object,System.Object,System.Boolean)
  parent: Microsoft.VisualBasic.CompilerServices.Operators
  isExternal: false
  name: CompareObjectLessEqual(Object, Object, Boolean)
  nameWithType: Operators.CompareObjectLessEqual(Object, Object, Boolean)
  fullName: Operators.CompareObjectLessEqual(Object, Object, Boolean)
- uid: Microsoft.VisualBasic.CompilerServices.Operators.CompareObjectNotEqual(System.Object,System.Object,System.Boolean)
  parent: Microsoft.VisualBasic.CompilerServices.Operators
  isExternal: false
  name: CompareObjectNotEqual(Object, Object, Boolean)
  nameWithType: Operators.CompareObjectNotEqual(Object, Object, Boolean)
  fullName: Operators.CompareObjectNotEqual(Object, Object, Boolean)
- uid: Microsoft.VisualBasic.CompilerServices.Operators.CompareString(System.String,System.String,System.Boolean)
  parent: Microsoft.VisualBasic.CompilerServices.Operators
  isExternal: false
  name: CompareString(String, String, Boolean)
  nameWithType: Operators.CompareString(String, String, Boolean)
  fullName: Operators.CompareString(String, String, Boolean)
- uid: System.String
  parent: System
  isExternal: false
  name: String
  nameWithType: String
  fullName: System.String
- uid: Microsoft.VisualBasic.CompilerServices.Operators.ConcatenateObject(System.Object,System.Object)
  parent: Microsoft.VisualBasic.CompilerServices.Operators
  isExternal: false
  name: ConcatenateObject(Object, Object)
  nameWithType: Operators.ConcatenateObject(Object, Object)
  fullName: Operators.ConcatenateObject(Object, Object)
- uid: Microsoft.VisualBasic.CompilerServices.Operators.ConditionalCompareObjectEqual(System.Object,System.Object,System.Boolean)
  parent: Microsoft.VisualBasic.CompilerServices.Operators
  isExternal: false
  name: ConditionalCompareObjectEqual(Object, Object, Boolean)
  nameWithType: Operators.ConditionalCompareObjectEqual(Object, Object, Boolean)
  fullName: Operators.ConditionalCompareObjectEqual(Object, Object, Boolean)
- uid: Microsoft.VisualBasic.CompilerServices.Operators.ConditionalCompareObjectGreater(System.Object,System.Object,System.Boolean)
  parent: Microsoft.VisualBasic.CompilerServices.Operators
  isExternal: false
  name: ConditionalCompareObjectGreater(Object, Object, Boolean)
  nameWithType: Operators.ConditionalCompareObjectGreater(Object, Object, Boolean)
  fullName: Operators.ConditionalCompareObjectGreater(Object, Object, Boolean)
- uid: Microsoft.VisualBasic.CompilerServices.Operators.ConditionalCompareObjectGreaterEqual(System.Object,System.Object,System.Boolean)
  parent: Microsoft.VisualBasic.CompilerServices.Operators
  isExternal: false
  name: ConditionalCompareObjectGreaterEqual(Object, Object, Boolean)
  nameWithType: Operators.ConditionalCompareObjectGreaterEqual(Object, Object, Boolean)
  fullName: Operators.ConditionalCompareObjectGreaterEqual(Object, Object, Boolean)
- uid: Microsoft.VisualBasic.CompilerServices.Operators.ConditionalCompareObjectLess(System.Object,System.Object,System.Boolean)
  parent: Microsoft.VisualBasic.CompilerServices.Operators
  isExternal: false
  name: ConditionalCompareObjectLess(Object, Object, Boolean)
  nameWithType: Operators.ConditionalCompareObjectLess(Object, Object, Boolean)
  fullName: Operators.ConditionalCompareObjectLess(Object, Object, Boolean)
- uid: Microsoft.VisualBasic.CompilerServices.Operators.ConditionalCompareObjectLessEqual(System.Object,System.Object,System.Boolean)
  parent: Microsoft.VisualBasic.CompilerServices.Operators
  isExternal: false
  name: ConditionalCompareObjectLessEqual(Object, Object, Boolean)
  nameWithType: Operators.ConditionalCompareObjectLessEqual(Object, Object, Boolean)
  fullName: Operators.ConditionalCompareObjectLessEqual(Object, Object, Boolean)
- uid: Microsoft.VisualBasic.CompilerServices.Operators.ConditionalCompareObjectNotEqual(System.Object,System.Object,System.Boolean)
  parent: Microsoft.VisualBasic.CompilerServices.Operators
  isExternal: false
  name: ConditionalCompareObjectNotEqual(Object, Object, Boolean)
  nameWithType: Operators.ConditionalCompareObjectNotEqual(Object, Object, Boolean)
  fullName: Operators.ConditionalCompareObjectNotEqual(Object, Object, Boolean)
- uid: Microsoft.VisualBasic.CompilerServices.Operators.DivideObject(System.Object,System.Object)
  parent: Microsoft.VisualBasic.CompilerServices.Operators
  isExternal: false
  name: DivideObject(Object, Object)
  nameWithType: Operators.DivideObject(Object, Object)
  fullName: Operators.DivideObject(Object, Object)
- uid: Microsoft.VisualBasic.CompilerServices.Operators.ExponentObject(System.Object,System.Object)
  parent: Microsoft.VisualBasic.CompilerServices.Operators
  isExternal: false
  name: ExponentObject(Object, Object)
  nameWithType: Operators.ExponentObject(Object, Object)
  fullName: Operators.ExponentObject(Object, Object)
- uid: Microsoft.VisualBasic.CompilerServices.Operators.FallbackInvokeUserDefinedOperator(System.Object,System.Object[])
  parent: Microsoft.VisualBasic.CompilerServices.Operators
  isExternal: false
  name: FallbackInvokeUserDefinedOperator(Object, Object[])
  nameWithType: Operators.FallbackInvokeUserDefinedOperator(Object, Object[])
  fullName: Operators.FallbackInvokeUserDefinedOperator(Object, Object[])
- uid: System.Object[]
  parent: System
  isExternal: false
  name: Object[]
  nameWithType: Object[]
  fullName: System.Object[]
  spec.csharp:
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
  - name: '[]'
    nameWithType: '[]'
    fullName: '[]'
- uid: Microsoft.VisualBasic.CompilerServices.Operators.IntDivideObject(System.Object,System.Object)
  parent: Microsoft.VisualBasic.CompilerServices.Operators
  isExternal: false
  name: IntDivideObject(Object, Object)
  nameWithType: Operators.IntDivideObject(Object, Object)
  fullName: Operators.IntDivideObject(Object, Object)
- uid: Microsoft.VisualBasic.CompilerServices.Operators.LeftShiftObject(System.Object,System.Object)
  parent: Microsoft.VisualBasic.CompilerServices.Operators
  isExternal: false
  name: LeftShiftObject(Object, Object)
  nameWithType: Operators.LeftShiftObject(Object, Object)
  fullName: Operators.LeftShiftObject(Object, Object)
- uid: Microsoft.VisualBasic.CompilerServices.Operators.LikeObject(System.Object,System.Object,Microsoft.VisualBasic.CompareMethod)
  parent: Microsoft.VisualBasic.CompilerServices.Operators
  isExternal: false
  name: LikeObject(Object, Object, CompareMethod)
  nameWithType: Operators.LikeObject(Object, Object, CompareMethod)
  fullName: Operators.LikeObject(Object, Object, CompareMethod)
- uid: Microsoft.VisualBasic.CompareMethod
  parent: Microsoft.VisualBasic
  isExternal: false
  name: CompareMethod
  nameWithType: CompareMethod
  fullName: Microsoft.VisualBasic.CompareMethod
- uid: Microsoft.VisualBasic.CompilerServices.Operators.LikeString(System.String,System.String,Microsoft.VisualBasic.CompareMethod)
  parent: Microsoft.VisualBasic.CompilerServices.Operators
  isExternal: false
  name: LikeString(String, String, CompareMethod)
  nameWithType: Operators.LikeString(String, String, CompareMethod)
  fullName: Operators.LikeString(String, String, CompareMethod)
- uid: Microsoft.VisualBasic.CompilerServices.Operators.ModObject(System.Object,System.Object)
  parent: Microsoft.VisualBasic.CompilerServices.Operators
  isExternal: false
  name: ModObject(Object, Object)
  nameWithType: Operators.ModObject(Object, Object)
  fullName: Operators.ModObject(Object, Object)
- uid: Microsoft.VisualBasic.CompilerServices.Operators.MultiplyObject(System.Object,System.Object)
  parent: Microsoft.VisualBasic.CompilerServices.Operators
  isExternal: false
  name: MultiplyObject(Object, Object)
  nameWithType: Operators.MultiplyObject(Object, Object)
  fullName: Operators.MultiplyObject(Object, Object)
- uid: Microsoft.VisualBasic.CompilerServices.Operators.NegateObject(System.Object)
  parent: Microsoft.VisualBasic.CompilerServices.Operators
  isExternal: false
  name: NegateObject(Object)
  nameWithType: Operators.NegateObject(Object)
  fullName: Operators.NegateObject(Object)
- uid: Microsoft.VisualBasic.CompilerServices.Operators.NotObject(System.Object)
  parent: Microsoft.VisualBasic.CompilerServices.Operators
  isExternal: false
  name: NotObject(Object)
  nameWithType: Operators.NotObject(Object)
  fullName: Operators.NotObject(Object)
- uid: Microsoft.VisualBasic.CompilerServices.Operators.OrObject(System.Object,System.Object)
  parent: Microsoft.VisualBasic.CompilerServices.Operators
  isExternal: false
  name: OrObject(Object, Object)
  nameWithType: Operators.OrObject(Object, Object)
  fullName: Operators.OrObject(Object, Object)
- uid: Microsoft.VisualBasic.CompilerServices.Operators.PlusObject(System.Object)
  parent: Microsoft.VisualBasic.CompilerServices.Operators
  isExternal: false
  name: PlusObject(Object)
  nameWithType: Operators.PlusObject(Object)
  fullName: Operators.PlusObject(Object)
- uid: Microsoft.VisualBasic.CompilerServices.Operators.RightShiftObject(System.Object,System.Object)
  parent: Microsoft.VisualBasic.CompilerServices.Operators
  isExternal: false
  name: RightShiftObject(Object, Object)
  nameWithType: Operators.RightShiftObject(Object, Object)
  fullName: Operators.RightShiftObject(Object, Object)
- uid: Microsoft.VisualBasic.CompilerServices.Operators.SubtractObject(System.Object,System.Object)
  parent: Microsoft.VisualBasic.CompilerServices.Operators
  isExternal: false
  name: SubtractObject(Object, Object)
  nameWithType: Operators.SubtractObject(Object, Object)
  fullName: Operators.SubtractObject(Object, Object)
- uid: Microsoft.VisualBasic.CompilerServices.Operators.XorObject(System.Object,System.Object)
  parent: Microsoft.VisualBasic.CompilerServices.Operators
  isExternal: false
  name: XorObject(Object, Object)
  nameWithType: Operators.XorObject(Object, Object)
  fullName: Operators.XorObject(Object, Object)
- uid: Microsoft.VisualBasic.CompilerServices.Operators.AddObject*
  parent: Microsoft.VisualBasic.CompilerServices.Operators
  isExternal: false
  name: AddObject
  nameWithType: Operators.AddObject
  fullName: Operators.AddObject
  monikers:
  - netcore-1.0
  - netcore-1.1
  - netcore-2.0
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  content_git_url: https://github.com/dotnet/docs/blob/master/xml/Microsoft.VisualBasic.CompilerServices/Operators.xml
- uid: Microsoft.VisualBasic.CompilerServices.Operators.AndObject*
  parent: Microsoft.VisualBasic.CompilerServices.Operators
  isExternal: false
  name: AndObject
  nameWithType: Operators.AndObject
  fullName: Operators.AndObject
  monikers:
  - netcore-1.0
  - netcore-1.1
  - netcore-2.0
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  content_git_url: https://github.com/dotnet/docs/blob/master/xml/Microsoft.VisualBasic.CompilerServices/Operators.xml
- uid: Microsoft.VisualBasic.CompilerServices.Operators.CompareObject*
  parent: Microsoft.VisualBasic.CompilerServices.Operators
  isExternal: false
  name: CompareObject
  nameWithType: Operators.CompareObject
  fullName: Operators.CompareObject
  monikers:
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  content_git_url: https://github.com/dotnet/docs/blob/master/xml/Microsoft.VisualBasic.CompilerServices/Operators.xml
- uid: Microsoft.VisualBasic.CompilerServices.Operators.CompareObjectEqual*
  parent: Microsoft.VisualBasic.CompilerServices.Operators
  isExternal: false
  name: CompareObjectEqual
  nameWithType: Operators.CompareObjectEqual
  fullName: Operators.CompareObjectEqual
  monikers:
  - netcore-1.0
  - netcore-1.1
  - netcore-2.0
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  content_git_url: https://github.com/dotnet/docs/blob/master/xml/Microsoft.VisualBasic.CompilerServices/Operators.xml
- uid: Microsoft.VisualBasic.CompilerServices.Operators.CompareObjectGreater*
  parent: Microsoft.VisualBasic.CompilerServices.Operators
  isExternal: false
  name: CompareObjectGreater
  nameWithType: Operators.CompareObjectGreater
  fullName: Operators.CompareObjectGreater
  monikers:
  - netcore-1.0
  - netcore-1.1
  - netcore-2.0
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  content_git_url: https://github.com/dotnet/docs/blob/master/xml/Microsoft.VisualBasic.CompilerServices/Operators.xml
- uid: Microsoft.VisualBasic.CompilerServices.Operators.CompareObjectGreaterEqual*
  parent: Microsoft.VisualBasic.CompilerServices.Operators
  isExternal: false
  name: CompareObjectGreaterEqual
  nameWithType: Operators.CompareObjectGreaterEqual
  fullName: Operators.CompareObjectGreaterEqual
  monikers:
  - netcore-1.0
  - netcore-1.1
  - netcore-2.0
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  content_git_url: https://github.com/dotnet/docs/blob/master/xml/Microsoft.VisualBasic.CompilerServices/Operators.xml
- uid: Microsoft.VisualBasic.CompilerServices.Operators.CompareObjectLess*
  parent: Microsoft.VisualBasic.CompilerServices.Operators
  isExternal: false
  name: CompareObjectLess
  nameWithType: Operators.CompareObjectLess
  fullName: Operators.CompareObjectLess
  monikers:
  - netcore-1.0
  - netcore-1.1
  - netcore-2.0
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  content_git_url: https://github.com/dotnet/docs/blob/master/xml/Microsoft.VisualBasic.CompilerServices/Operators.xml
- uid: Microsoft.VisualBasic.CompilerServices.Operators.CompareObjectLessEqual*
  parent: Microsoft.VisualBasic.CompilerServices.Operators
  isExternal: false
  name: CompareObjectLessEqual
  nameWithType: Operators.CompareObjectLessEqual
  fullName: Operators.CompareObjectLessEqual
  monikers:
  - netcore-1.0
  - netcore-1.1
  - netcore-2.0
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  content_git_url: https://github.com/dotnet/docs/blob/master/xml/Microsoft.VisualBasic.CompilerServices/Operators.xml
- uid: Microsoft.VisualBasic.CompilerServices.Operators.CompareObjectNotEqual*
  parent: Microsoft.VisualBasic.CompilerServices.Operators
  isExternal: false
  name: CompareObjectNotEqual
  nameWithType: Operators.CompareObjectNotEqual
  fullName: Operators.CompareObjectNotEqual
  monikers:
  - netcore-1.0
  - netcore-1.1
  - netcore-2.0
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  content_git_url: https://github.com/dotnet/docs/blob/master/xml/Microsoft.VisualBasic.CompilerServices/Operators.xml
- uid: Microsoft.VisualBasic.CompilerServices.Operators.CompareString*
  parent: Microsoft.VisualBasic.CompilerServices.Operators
  isExternal: false
  name: CompareString
  nameWithType: Operators.CompareString
  fullName: Operators.CompareString
  monikers:
  - netcore-1.0
  - netcore-1.1
  - netcore-2.0
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  content_git_url: https://github.com/dotnet/docs/blob/master/xml/Microsoft.VisualBasic.CompilerServices/Operators.xml
- uid: Microsoft.VisualBasic.CompilerServices.Operators.ConcatenateObject*
  parent: Microsoft.VisualBasic.CompilerServices.Operators
  isExternal: false
  name: ConcatenateObject
  nameWithType: Operators.ConcatenateObject
  fullName: Operators.ConcatenateObject
  monikers:
  - netcore-1.0
  - netcore-1.1
  - netcore-2.0
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  content_git_url: https://github.com/dotnet/docs/blob/master/xml/Microsoft.VisualBasic.CompilerServices/Operators.xml
- uid: Microsoft.VisualBasic.CompilerServices.Operators.ConditionalCompareObjectEqual*
  parent: Microsoft.VisualBasic.CompilerServices.Operators
  isExternal: false
  name: ConditionalCompareObjectEqual
  nameWithType: Operators.ConditionalCompareObjectEqual
  fullName: Operators.ConditionalCompareObjectEqual
  monikers:
  - netcore-1.0
  - netcore-1.1
  - netcore-2.0
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  content_git_url: https://github.com/dotnet/docs/blob/master/xml/Microsoft.VisualBasic.CompilerServices/Operators.xml
- uid: Microsoft.VisualBasic.CompilerServices.Operators.ConditionalCompareObjectGreater*
  parent: Microsoft.VisualBasic.CompilerServices.Operators
  isExternal: false
  name: ConditionalCompareObjectGreater
  nameWithType: Operators.ConditionalCompareObjectGreater
  fullName: Operators.ConditionalCompareObjectGreater
  monikers:
  - netcore-1.0
  - netcore-1.1
  - netcore-2.0
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  content_git_url: https://github.com/dotnet/docs/blob/master/xml/Microsoft.VisualBasic.CompilerServices/Operators.xml
- uid: Microsoft.VisualBasic.CompilerServices.Operators.ConditionalCompareObjectGreaterEqual*
  parent: Microsoft.VisualBasic.CompilerServices.Operators
  isExternal: false
  name: ConditionalCompareObjectGreaterEqual
  nameWithType: Operators.ConditionalCompareObjectGreaterEqual
  fullName: Operators.ConditionalCompareObjectGreaterEqual
  monikers:
  - netcore-1.0
  - netcore-1.1
  - netcore-2.0
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  content_git_url: https://github.com/dotnet/docs/blob/master/xml/Microsoft.VisualBasic.CompilerServices/Operators.xml
- uid: Microsoft.VisualBasic.CompilerServices.Operators.ConditionalCompareObjectLess*
  parent: Microsoft.VisualBasic.CompilerServices.Operators
  isExternal: false
  name: ConditionalCompareObjectLess
  nameWithType: Operators.ConditionalCompareObjectLess
  fullName: Operators.ConditionalCompareObjectLess
  monikers:
  - netcore-1.0
  - netcore-1.1
  - netcore-2.0
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  content_git_url: https://github.com/dotnet/docs/blob/master/xml/Microsoft.VisualBasic.CompilerServices/Operators.xml
- uid: Microsoft.VisualBasic.CompilerServices.Operators.ConditionalCompareObjectLessEqual*
  parent: Microsoft.VisualBasic.CompilerServices.Operators
  isExternal: false
  name: ConditionalCompareObjectLessEqual
  nameWithType: Operators.ConditionalCompareObjectLessEqual
  fullName: Operators.ConditionalCompareObjectLessEqual
  monikers:
  - netcore-1.0
  - netcore-1.1
  - netcore-2.0
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  content_git_url: https://github.com/dotnet/docs/blob/master/xml/Microsoft.VisualBasic.CompilerServices/Operators.xml
- uid: Microsoft.VisualBasic.CompilerServices.Operators.ConditionalCompareObjectNotEqual*
  parent: Microsoft.VisualBasic.CompilerServices.Operators
  isExternal: false
  name: ConditionalCompareObjectNotEqual
  nameWithType: Operators.ConditionalCompareObjectNotEqual
  fullName: Operators.ConditionalCompareObjectNotEqual
  monikers:
  - netcore-1.0
  - netcore-1.1
  - netcore-2.0
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  content_git_url: https://github.com/dotnet/docs/blob/master/xml/Microsoft.VisualBasic.CompilerServices/Operators.xml
- uid: Microsoft.VisualBasic.CompilerServices.Operators.DivideObject*
  parent: Microsoft.VisualBasic.CompilerServices.Operators
  isExternal: false
  name: DivideObject
  nameWithType: Operators.DivideObject
  fullName: Operators.DivideObject
  monikers:
  - netcore-1.0
  - netcore-1.1
  - netcore-2.0
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  content_git_url: https://github.com/dotnet/docs/blob/master/xml/Microsoft.VisualBasic.CompilerServices/Operators.xml
- uid: Microsoft.VisualBasic.CompilerServices.Operators.ExponentObject*
  parent: Microsoft.VisualBasic.CompilerServices.Operators
  isExternal: false
  name: ExponentObject
  nameWithType: Operators.ExponentObject
  fullName: Operators.ExponentObject
  monikers:
  - netcore-1.0
  - netcore-1.1
  - netcore-2.0
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  content_git_url: https://github.com/dotnet/docs/blob/master/xml/Microsoft.VisualBasic.CompilerServices/Operators.xml
- uid: Microsoft.VisualBasic.CompilerServices.Operators.FallbackInvokeUserDefinedOperator*
  parent: Microsoft.VisualBasic.CompilerServices.Operators
  isExternal: false
  name: FallbackInvokeUserDefinedOperator
  nameWithType: Operators.FallbackInvokeUserDefinedOperator
  fullName: Operators.FallbackInvokeUserDefinedOperator
  monikers:
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  content_git_url: https://github.com/dotnet/docs/blob/master/xml/Microsoft.VisualBasic.CompilerServices/Operators.xml
- uid: Microsoft.VisualBasic.CompilerServices.Operators.IntDivideObject*
  parent: Microsoft.VisualBasic.CompilerServices.Operators
  isExternal: false
  name: IntDivideObject
  nameWithType: Operators.IntDivideObject
  fullName: Operators.IntDivideObject
  monikers:
  - netcore-1.0
  - netcore-1.1
  - netcore-2.0
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  content_git_url: https://github.com/dotnet/docs/blob/master/xml/Microsoft.VisualBasic.CompilerServices/Operators.xml
- uid: Microsoft.VisualBasic.CompilerServices.Operators.LeftShiftObject*
  parent: Microsoft.VisualBasic.CompilerServices.Operators
  isExternal: false
  name: LeftShiftObject
  nameWithType: Operators.LeftShiftObject
  fullName: Operators.LeftShiftObject
  monikers:
  - netcore-1.0
  - netcore-1.1
  - netcore-2.0
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  content_git_url: https://github.com/dotnet/docs/blob/master/xml/Microsoft.VisualBasic.CompilerServices/Operators.xml
- uid: Microsoft.VisualBasic.CompilerServices.Operators.LikeObject*
  parent: Microsoft.VisualBasic.CompilerServices.Operators
  isExternal: false
  name: LikeObject
  nameWithType: Operators.LikeObject
  fullName: Operators.LikeObject
  monikers:
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  content_git_url: https://github.com/dotnet/docs/blob/master/xml/Microsoft.VisualBasic.CompilerServices/Operators.xml
- uid: Microsoft.VisualBasic.CompilerServices.Operators.LikeString*
  parent: Microsoft.VisualBasic.CompilerServices.Operators
  isExternal: false
  name: LikeString
  nameWithType: Operators.LikeString
  fullName: Operators.LikeString
  monikers:
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  content_git_url: https://github.com/dotnet/docs/blob/master/xml/Microsoft.VisualBasic.CompilerServices/Operators.xml
- uid: Microsoft.VisualBasic.CompilerServices.Operators.ModObject*
  parent: Microsoft.VisualBasic.CompilerServices.Operators
  isExternal: false
  name: ModObject
  nameWithType: Operators.ModObject
  fullName: Operators.ModObject
  monikers:
  - netcore-1.0
  - netcore-1.1
  - netcore-2.0
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  content_git_url: https://github.com/dotnet/docs/blob/master/xml/Microsoft.VisualBasic.CompilerServices/Operators.xml
- uid: Microsoft.VisualBasic.CompilerServices.Operators.MultiplyObject*
  parent: Microsoft.VisualBasic.CompilerServices.Operators
  isExternal: false
  name: MultiplyObject
  nameWithType: Operators.MultiplyObject
  fullName: Operators.MultiplyObject
  monikers:
  - netcore-1.0
  - netcore-1.1
  - netcore-2.0
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  content_git_url: https://github.com/dotnet/docs/blob/master/xml/Microsoft.VisualBasic.CompilerServices/Operators.xml
- uid: Microsoft.VisualBasic.CompilerServices.Operators.NegateObject*
  parent: Microsoft.VisualBasic.CompilerServices.Operators
  isExternal: false
  name: NegateObject
  nameWithType: Operators.NegateObject
  fullName: Operators.NegateObject
  monikers:
  - netcore-1.0
  - netcore-1.1
  - netcore-2.0
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  content_git_url: https://github.com/dotnet/docs/blob/master/xml/Microsoft.VisualBasic.CompilerServices/Operators.xml
- uid: Microsoft.VisualBasic.CompilerServices.Operators.NotObject*
  parent: Microsoft.VisualBasic.CompilerServices.Operators
  isExternal: false
  name: NotObject
  nameWithType: Operators.NotObject
  fullName: Operators.NotObject
  monikers:
  - netcore-1.0
  - netcore-1.1
  - netcore-2.0
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  content_git_url: https://github.com/dotnet/docs/blob/master/xml/Microsoft.VisualBasic.CompilerServices/Operators.xml
- uid: Microsoft.VisualBasic.CompilerServices.Operators.OrObject*
  parent: Microsoft.VisualBasic.CompilerServices.Operators
  isExternal: false
  name: OrObject
  nameWithType: Operators.OrObject
  fullName: Operators.OrObject
  monikers:
  - netcore-1.0
  - netcore-1.1
  - netcore-2.0
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  content_git_url: https://github.com/dotnet/docs/blob/master/xml/Microsoft.VisualBasic.CompilerServices/Operators.xml
- uid: Microsoft.VisualBasic.CompilerServices.Operators.PlusObject*
  parent: Microsoft.VisualBasic.CompilerServices.Operators
  isExternal: false
  name: PlusObject
  nameWithType: Operators.PlusObject
  fullName: Operators.PlusObject
  monikers:
  - netcore-1.0
  - netcore-1.1
  - netcore-2.0
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  content_git_url: https://github.com/dotnet/docs/blob/master/xml/Microsoft.VisualBasic.CompilerServices/Operators.xml
- uid: Microsoft.VisualBasic.CompilerServices.Operators.RightShiftObject*
  parent: Microsoft.VisualBasic.CompilerServices.Operators
  isExternal: false
  name: RightShiftObject
  nameWithType: Operators.RightShiftObject
  fullName: Operators.RightShiftObject
  monikers:
  - netcore-1.0
  - netcore-1.1
  - netcore-2.0
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  content_git_url: https://github.com/dotnet/docs/blob/master/xml/Microsoft.VisualBasic.CompilerServices/Operators.xml
- uid: Microsoft.VisualBasic.CompilerServices.Operators.SubtractObject*
  parent: Microsoft.VisualBasic.CompilerServices.Operators
  isExternal: false
  name: SubtractObject
  nameWithType: Operators.SubtractObject
  fullName: Operators.SubtractObject
  monikers:
  - netcore-1.0
  - netcore-1.1
  - netcore-2.0
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  content_git_url: https://github.com/dotnet/docs/blob/master/xml/Microsoft.VisualBasic.CompilerServices/Operators.xml
- uid: Microsoft.VisualBasic.CompilerServices.Operators.XorObject*
  parent: Microsoft.VisualBasic.CompilerServices.Operators
  isExternal: false
  name: XorObject
  nameWithType: Operators.XorObject
  fullName: Operators.XorObject
  monikers:
  - netcore-1.0
  - netcore-1.1
  - netcore-2.0
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  content_git_url: https://github.com/dotnet/docs/blob/master/xml/Microsoft.VisualBasic.CompilerServices/Operators.xml
- uid: System.Object.Equals(System.Object)
  parent: System.Object
  isExternal: false
  name: Equals(Object)
  nameWithType: Object.Equals(Object)
  fullName: Object.Equals(Object)
- uid: System.Object.Equals(System.Object,System.Object)
  parent: System.Object
  isExternal: false
  name: Equals(Object, Object)
  nameWithType: Object.Equals(Object, Object)
  fullName: Object.Equals(Object, Object)
- uid: System.Object.GetHashCode
  parent: System.Object
  isExternal: false
  name: GetHashCode()
  nameWithType: Object.GetHashCode()
  fullName: Object.GetHashCode()
- uid: System.Object.GetType
  parent: System.Object
  isExternal: false
  name: GetType()
  nameWithType: Object.GetType()
  fullName: Object.GetType()
- uid: System.Object.MemberwiseClone
  parent: System.Object
  isExternal: false
  name: MemberwiseClone()
  nameWithType: Object.MemberwiseClone()
  fullName: Object.MemberwiseClone()
- uid: System.Object.ReferenceEquals(System.Object,System.Object)
  parent: System.Object
  isExternal: false
  name: ReferenceEquals(Object, Object)
  nameWithType: Object.ReferenceEquals(Object, Object)
  fullName: Object.ReferenceEquals(Object, Object)
- uid: System.Object.ToString
  parent: System.Object
  isExternal: false
  name: ToString()
  nameWithType: Object.ToString()
  fullName: Object.ToString()
