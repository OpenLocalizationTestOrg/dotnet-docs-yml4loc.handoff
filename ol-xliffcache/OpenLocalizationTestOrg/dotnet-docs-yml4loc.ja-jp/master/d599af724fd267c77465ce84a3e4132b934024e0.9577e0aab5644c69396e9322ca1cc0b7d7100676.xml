{"nodes":[{"content":"Provides an interface that enables a designer to access and filter the dictionaries of a <xref href=\"System.ComponentModel.TypeDescriptor\"></xref> that stores the property, attribute, and event descriptors that a component designer can expose to the design-time environment.","nodes":[{"pos":[0,274],"content":"Provides an interface that enables a designer to access and filter the dictionaries of a <ph id=\"ph1\">&lt;xref href=\"System.ComponentModel.TypeDescriptor\"&gt;&lt;/xref&gt;</ph> that stores the property, attribute, and event descriptors that a component designer can expose to the design-time environment.","source":"Provides an interface that enables a designer to access and filter the dictionaries of a <xref href=\"System.ComponentModel.TypeDescriptor\"></xref> that stores the property, attribute, and event descriptors that a component designer can expose to the design-time environment."}],"pos":[1068,1343],"yaml":true},{"content":"<xref:System.ComponentModel.Design.IDesignerFilter> enables a designer to filter the set of property, attribute, and event descriptors that its associated component exposes through a <xref:System.ComponentModel.TypeDescriptor>. The methods of this interface whose names begin with `Pre` are called immediately before the methods whose names begin with `Post`.  \n  \n If you want to add attribute, event, or property descriptors, use a <xref:System.ComponentModel.Design.IDesignerFilter.PreFilterAttributes%2A>, <xref:System.ComponentModel.Design.IDesignerFilter.PreFilterEvents%2A>, or <xref:System.ComponentModel.Design.IDesignerFilter.PreFilterProperties%2A> method.  \n  \n If you want to change or remove attribute, event, or property descriptors, use a <xref:System.ComponentModel.Design.IDesignerFilter.PostFilterAttributes%2A>, <xref:System.ComponentModel.Design.IDesignerFilter.PostFilterEvents%2A>, or <xref:System.ComponentModel.Design.IDesignerFilter.PostFilterProperties%2A> method.","nodes":[{"pos":[0,359],"content":"<xref:System.ComponentModel.Design.IDesignerFilter> enables a designer to filter the set of property, attribute, and event descriptors that its associated component exposes through a <xref:System.ComponentModel.TypeDescriptor>. The methods of this interface whose names begin with `Pre` are called immediately before the methods whose names begin with `Post`.","nodes":[{"content":"<ph id=\"ph1\">&lt;xref:System.ComponentModel.Design.IDesignerFilter&gt;</ph> enables a designer to filter the set of property, attribute, and event descriptors that its associated component exposes through a <ph id=\"ph2\">&lt;xref:System.ComponentModel.TypeDescriptor&gt;</ph>.","pos":[0,227],"source":"<xref:System.ComponentModel.Design.IDesignerFilter> enables a designer to filter the set of property, attribute, and event descriptors that its associated component exposes through a <xref:System.ComponentModel.TypeDescriptor>."},{"content":"The methods of this interface whose names begin with <ph id=\"ph1\">`Pre`</ph> are called immediately before the methods whose names begin with <ph id=\"ph2\">`Post`</ph>.","pos":[228,359],"source":" The methods of this interface whose names begin with `Pre` are called immediately before the methods whose names begin with `Post`."}]},{"pos":[366,667],"content":"If you want to add attribute, event, or property descriptors, use a <xref:System.ComponentModel.Design.IDesignerFilter.PreFilterAttributes%2A>, <xref:System.ComponentModel.Design.IDesignerFilter.PreFilterEvents%2A>, or <xref:System.ComponentModel.Design.IDesignerFilter.PreFilterProperties%2A> method.","nodes":[{"content":"If you want to add attribute, event, or property descriptors, use a <ph id=\"ph1\">&lt;xref:System.ComponentModel.Design.IDesignerFilter.PreFilterAttributes%2A&gt;</ph>, <ph id=\"ph2\">&lt;xref:System.ComponentModel.Design.IDesignerFilter.PreFilterEvents%2A&gt;</ph>, or <ph id=\"ph3\">&lt;xref:System.ComponentModel.Design.IDesignerFilter.PreFilterProperties%2A&gt;</ph> method.","pos":[0,301],"source":"If you want to add attribute, event, or property descriptors, use a <xref:System.ComponentModel.Design.IDesignerFilter.PreFilterAttributes%2A>, <xref:System.ComponentModel.Design.IDesignerFilter.PreFilterEvents%2A>, or <xref:System.ComponentModel.Design.IDesignerFilter.PreFilterProperties%2A> method."}]},{"pos":[674,991],"content":"If you want to change or remove attribute, event, or property descriptors, use a <xref:System.ComponentModel.Design.IDesignerFilter.PostFilterAttributes%2A>, <xref:System.ComponentModel.Design.IDesignerFilter.PostFilterEvents%2A>, or <xref:System.ComponentModel.Design.IDesignerFilter.PostFilterProperties%2A> method.","nodes":[{"content":"If you want to change or remove attribute, event, or property descriptors, use a <ph id=\"ph1\">&lt;xref:System.ComponentModel.Design.IDesignerFilter.PostFilterAttributes%2A&gt;</ph>, <ph id=\"ph2\">&lt;xref:System.ComponentModel.Design.IDesignerFilter.PostFilterEvents%2A&gt;</ph>, or <ph id=\"ph3\">&lt;xref:System.ComponentModel.Design.IDesignerFilter.PostFilterProperties%2A&gt;</ph> method.","pos":[0,317],"source":"If you want to change or remove attribute, event, or property descriptors, use a <xref:System.ComponentModel.Design.IDesignerFilter.PostFilterAttributes%2A>, <xref:System.ComponentModel.Design.IDesignerFilter.PostFilterEvents%2A>, or <xref:System.ComponentModel.Design.IDesignerFilter.PostFilterProperties%2A> method."}]}],"pos":[1354,2352],"yaml":true,"extradata":"MT"},{"content":"When overridden in a derived class, allows a designer to change or remove items from the set of attributes that it exposes through a <xref href=\"System.ComponentModel.TypeDescriptor\"></xref>.","nodes":[{"pos":[0,191],"content":"When overridden in a derived class, allows a designer to change or remove items from the set of attributes that it exposes through a <ph id=\"ph1\">&lt;xref href=\"System.ComponentModel.TypeDescriptor\"&gt;&lt;/xref&gt;</ph>.","source":"When overridden in a derived class, allows a designer to change or remove items from the set of attributes that it exposes through a <xref href=\"System.ComponentModel.TypeDescriptor\"></xref>."}],"pos":[4898,5090],"yaml":true},{"content":"This method provides a way to change or remove items within the dictionary of attributes that the associated component of the designer implementing this interface exposes through a <xref:System.ComponentModel.TypeDescriptor>.  \n  \n The keys in the dictionary of attributes are the type IDs of the attributes. The objects are of type <xref:System.Attribute>. This method is called immediately after <xref:System.ComponentModel.Design.IDesignerFilter.PreFilterAttributes%2A>.  \n  \n The type ID of an attribute can be any object. By default, <xref:System.Attribute> returns its <xref:System.Type> as the value of its <xref:System.Attribute.TypeId%2A> property. You can check the <xref:System.Attribute.TypeId%2A> of an attribute in the dictionary for equivalence with a known <xref:System.Attribute.TypeId%2A> for an attribute to identify it, or use <xref:System.Reflection> to identify the attribute object itself.  \n  \n When an attribute that has the same <xref:System.Attribute.TypeId%2A> as an existing or inherited attribute is added to a component, the new attribute replaces the old attribute. For many attributes, a new attribute of the same type will replace any previous attribute of the type. However, some types of attributes return a <xref:System.Attribute.TypeId%2A> that distinguishes the attribute selectively. For example, in order to provide different types of simultaneously active designers for a type, such as an <xref:System.ComponentModel.Design.IRootDesigner> and an <xref:System.ComponentModel.Design.IDesigner>, the <xref:System.ComponentModel.DesignerAttribute> class returns a <xref:System.Attribute.TypeId%2A> that uniquely identifies both the attribute and the base designer type. The <xref:System.ComponentModel.DesignerAttribute> constructor allows you to specify the base designer type of the designer in addition to its specific type, and <xref:System.ComponentModel.DesignerAttribute> returns a <xref:System.Attribute.TypeId%2A> that reflects this. Therefore when you add a new <xref:System.ComponentModel.DesignerAttribute> with a base designer type of the same type as the base designer type of an existing <xref:System.ComponentModel.DesignerAttribute>, the old attribute is replaced with the new attribute.","nodes":[{"pos":[0,225],"content":"This method provides a way to change or remove items within the dictionary of attributes that the associated component of the designer implementing this interface exposes through a <xref:System.ComponentModel.TypeDescriptor>.","nodes":[{"content":"This method provides a way to change or remove items within the dictionary of attributes that the associated component of the designer implementing this interface exposes through a <ph id=\"ph1\">&lt;xref:System.ComponentModel.TypeDescriptor&gt;</ph>.","pos":[0,225],"source":"This method provides a way to change or remove items within the dictionary of attributes that the associated component of the designer implementing this interface exposes through a <xref:System.ComponentModel.TypeDescriptor>."}]},{"pos":[232,473],"content":"The keys in the dictionary of attributes are the type IDs of the attributes. The objects are of type <xref:System.Attribute>. This method is called immediately after <xref:System.ComponentModel.Design.IDesignerFilter.PreFilterAttributes%2A>.","nodes":[{"content":"The keys in the dictionary of attributes are the type IDs of the attributes. The objects are of type <xref:System.Attribute>. This method is called immediately after <xref:System.ComponentModel.Design.IDesignerFilter.PreFilterAttributes%2A>.","pos":[0,241],"nodes":[{"content":"The keys in the dictionary of attributes are the type IDs of the attributes.","pos":[0,76]},{"content":"The objects are of type <ph id=\"ph1\">&lt;xref:System.Attribute&gt;</ph>.","pos":[77,125],"source":" The objects are of type <xref:System.Attribute>."},{"content":"This method is called immediately after <ph id=\"ph1\">&lt;xref:System.ComponentModel.Design.IDesignerFilter.PreFilterAttributes%2A&gt;</ph>.","pos":[126,241],"source":" This method is called immediately after <xref:System.ComponentModel.Design.IDesignerFilter.PreFilterAttributes%2A>."}]}]},{"pos":[480,912],"content":"The type ID of an attribute can be any object. By default, <xref:System.Attribute> returns its <xref:System.Type> as the value of its <xref:System.Attribute.TypeId%2A> property. You can check the <xref:System.Attribute.TypeId%2A> of an attribute in the dictionary for equivalence with a known <xref:System.Attribute.TypeId%2A> for an attribute to identify it, or use <xref:System.Reflection> to identify the attribute object itself.","nodes":[{"content":"The type ID of an attribute can be any object. By default, <xref:System.Attribute> returns its <xref:System.Type> as the value of its <xref:System.Attribute.TypeId%2A> property. You can check the <xref:System.Attribute.TypeId%2A> of an attribute in the dictionary for equivalence with a known <xref:System.Attribute.TypeId%2A> for an attribute to identify it, or use <xref:System.Reflection> to identify the attribute object itself.","pos":[0,432],"nodes":[{"content":"The type ID of an attribute can be any object.","pos":[0,46]},{"content":"By default, <ph id=\"ph1\">&lt;xref:System.Attribute&gt;</ph> returns its <ph id=\"ph2\">&lt;xref:System.Type&gt;</ph> as the value of its <ph id=\"ph3\">&lt;xref:System.Attribute.TypeId%2A&gt;</ph> property.","pos":[47,177],"source":" By default, <xref:System.Attribute> returns its <xref:System.Type> as the value of its <xref:System.Attribute.TypeId%2A> property."},{"content":"You can check the <ph id=\"ph1\">&lt;xref:System.Attribute.TypeId%2A&gt;</ph> of an attribute in the dictionary for equivalence with a known <ph id=\"ph2\">&lt;xref:System.Attribute.TypeId%2A&gt;</ph> for an attribute to identify it, or use <ph id=\"ph3\">&lt;xref:System.Reflection&gt;</ph> to identify the attribute object itself.","pos":[178,432],"source":" You can check the <xref:System.Attribute.TypeId%2A> of an attribute in the dictionary for equivalence with a known <xref:System.Attribute.TypeId%2A> for an attribute to identify it, or use <xref:System.Reflection> to identify the attribute object itself."}]}]},{"pos":[919,2242],"content":"When an attribute that has the same <xref:System.Attribute.TypeId%2A> as an existing or inherited attribute is added to a component, the new attribute replaces the old attribute. For many attributes, a new attribute of the same type will replace any previous attribute of the type. However, some types of attributes return a <xref:System.Attribute.TypeId%2A> that distinguishes the attribute selectively. For example, in order to provide different types of simultaneously active designers for a type, such as an <xref:System.ComponentModel.Design.IRootDesigner> and an <xref:System.ComponentModel.Design.IDesigner>, the <xref:System.ComponentModel.DesignerAttribute> class returns a <xref:System.Attribute.TypeId%2A> that uniquely identifies both the attribute and the base designer type. The <xref:System.ComponentModel.DesignerAttribute> constructor allows you to specify the base designer type of the designer in addition to its specific type, and <xref:System.ComponentModel.DesignerAttribute> returns a <xref:System.Attribute.TypeId%2A> that reflects this. Therefore when you add a new <xref:System.ComponentModel.DesignerAttribute> with a base designer type of the same type as the base designer type of an existing <xref:System.ComponentModel.DesignerAttribute>, the old attribute is replaced with the new attribute.","nodes":[{"content":"When an attribute that has the same <xref:System.Attribute.TypeId%2A> as an existing or inherited attribute is added to a component, the new attribute replaces the old attribute. For many attributes, a new attribute of the same type will replace any previous attribute of the type. However, some types of attributes return a <xref:System.Attribute.TypeId%2A> that distinguishes the attribute selectively. For example, in order to provide different types of simultaneously active designers for a type, such as an <xref:System.ComponentModel.Design.IRootDesigner> and an <xref:System.ComponentModel.Design.IDesigner>, the <xref:System.ComponentModel.DesignerAttribute> class returns a <xref:System.Attribute.TypeId%2A> that uniquely identifies both the attribute and the base designer type. The <xref:System.ComponentModel.DesignerAttribute> constructor allows you to specify the base designer type of the designer in addition to its specific type, and <xref:System.ComponentModel.DesignerAttribute> returns a <xref:System.Attribute.TypeId%2A> that reflects this. Therefore when you add a new <xref:System.ComponentModel.DesignerAttribute> with a base designer type of the same type as the base designer type of an existing <xref:System.ComponentModel.DesignerAttribute>, the old attribute is replaced with the new attribute.","pos":[0,1323],"nodes":[{"content":"When an attribute that has the same <ph id=\"ph1\">&lt;xref:System.Attribute.TypeId%2A&gt;</ph> as an existing or inherited attribute is added to a component, the new attribute replaces the old attribute.","pos":[0,178],"source":"When an attribute that has the same <xref:System.Attribute.TypeId%2A> as an existing or inherited attribute is added to a component, the new attribute replaces the old attribute."},{"content":"For many attributes, a new attribute of the same type will replace any previous attribute of the type.","pos":[179,281]},{"content":"However, some types of attributes return a <ph id=\"ph1\">&lt;xref:System.Attribute.TypeId%2A&gt;</ph> that distinguishes the attribute selectively.","pos":[282,404],"source":" However, some types of attributes return a <xref:System.Attribute.TypeId%2A> that distinguishes the attribute selectively."},{"content":"For example, in order to provide different types of simultaneously active designers for a type, such as an <ph id=\"ph1\">&lt;xref:System.ComponentModel.Design.IRootDesigner&gt;</ph> and an <ph id=\"ph2\">&lt;xref:System.ComponentModel.Design.IDesigner&gt;</ph>, the <ph id=\"ph3\">&lt;xref:System.ComponentModel.DesignerAttribute&gt;</ph> class returns a <ph id=\"ph4\">&lt;xref:System.Attribute.TypeId%2A&gt;</ph> that uniquely identifies both the attribute and the base designer type.","pos":[405,788],"source":" For example, in order to provide different types of simultaneously active designers for a type, such as an <xref:System.ComponentModel.Design.IRootDesigner> and an <xref:System.ComponentModel.Design.IDesigner>, the <xref:System.ComponentModel.DesignerAttribute> class returns a <xref:System.Attribute.TypeId%2A> that uniquely identifies both the attribute and the base designer type."},{"content":"The <ph id=\"ph1\">&lt;xref:System.ComponentModel.DesignerAttribute&gt;</ph> constructor allows you to specify the base designer type of the designer in addition to its specific type, and <ph id=\"ph2\">&lt;xref:System.ComponentModel.DesignerAttribute&gt;</ph> returns a <ph id=\"ph3\">&lt;xref:System.Attribute.TypeId%2A&gt;</ph> that reflects this.","pos":[789,1061],"source":" The <xref:System.ComponentModel.DesignerAttribute> constructor allows you to specify the base designer type of the designer in addition to its specific type, and <xref:System.ComponentModel.DesignerAttribute> returns a <xref:System.Attribute.TypeId%2A> that reflects this."},{"content":"Therefore when you add a new <ph id=\"ph1\">&lt;xref:System.ComponentModel.DesignerAttribute&gt;</ph> with a base designer type of the same type as the base designer type of an existing <ph id=\"ph2\">&lt;xref:System.ComponentModel.DesignerAttribute&gt;</ph>, the old attribute is replaced with the new attribute.","pos":[1062,1323],"source":" Therefore when you add a new <xref:System.ComponentModel.DesignerAttribute> with a base designer type of the same type as the base designer type of an existing <xref:System.ComponentModel.DesignerAttribute>, the old attribute is replaced with the new attribute."}]}]}],"pos":[5101,7352],"yaml":true,"extradata":"MT"},{"content":"The <xref href=\"System.Attribute\"></xref> objects for the class of the component. The keys in the dictionary of attributes are the <xref href=\"System.Attribute.TypeId\"></xref> values of the attributes.","nodes":[{"pos":[0,201],"content":"The <xref href=\"System.Attribute\"></xref> objects for the class of the component. The keys in the dictionary of attributes are the <xref href=\"System.Attribute.TypeId\"></xref> values of the attributes.","nodes":[{"content":"The <ph id=\"ph1\">&lt;xref href=\"System.Attribute\"&gt;&lt;/xref&gt;</ph> objects for the class of the component.","pos":[0,81],"source":"The <xref href=\"System.Attribute\"></xref> objects for the class of the component."},{"content":"The keys in the dictionary of attributes are the <ph id=\"ph1\">&lt;xref href=\"System.Attribute.TypeId\"&gt;&lt;/xref&gt;</ph> values of the attributes.","pos":[82,201],"source":" The keys in the dictionary of attributes are the <xref href=\"System.Attribute.TypeId\"></xref> values of the attributes."}]}],"pos":[7552,7754],"yaml":true},{"content":"When overridden in a derived class, allows a designer to change or remove items from the set of events that it exposes through a <xref href=\"System.ComponentModel.TypeDescriptor\"></xref>.","nodes":[{"pos":[0,187],"content":"When overridden in a derived class, allows a designer to change or remove items from the set of events that it exposes through a <ph id=\"ph1\">&lt;xref href=\"System.ComponentModel.TypeDescriptor\"&gt;&lt;/xref&gt;</ph>.","source":"When overridden in a derived class, allows a designer to change or remove items from the set of events that it exposes through a <xref href=\"System.ComponentModel.TypeDescriptor\"></xref>."}],"pos":[9237,9425],"yaml":true},{"content":"This method provides a way to change or remove items within the dictionary of events that are exposed through a <xref:System.ComponentModel.TypeDescriptor>.  \n  \n The keys in the dictionary of events are the names of the events. The objects are of type <xref:System.ComponentModel.EventDescriptor>. This method is called immediately after <xref:System.ComponentModel.Design.IDesignerFilter.PreFilterEvents%2A>.","nodes":[{"pos":[0,156],"content":"This method provides a way to change or remove items within the dictionary of events that are exposed through a <xref:System.ComponentModel.TypeDescriptor>.","nodes":[{"content":"This method provides a way to change or remove items within the dictionary of events that are exposed through a <ph id=\"ph1\">&lt;xref:System.ComponentModel.TypeDescriptor&gt;</ph>.","pos":[0,156],"source":"This method provides a way to change or remove items within the dictionary of events that are exposed through a <xref:System.ComponentModel.TypeDescriptor>."}]},{"pos":[163,410],"content":"The keys in the dictionary of events are the names of the events. The objects are of type <xref:System.ComponentModel.EventDescriptor>. This method is called immediately after <xref:System.ComponentModel.Design.IDesignerFilter.PreFilterEvents%2A>.","nodes":[{"content":"The keys in the dictionary of events are the names of the events. The objects are of type <xref:System.ComponentModel.EventDescriptor>. This method is called immediately after <xref:System.ComponentModel.Design.IDesignerFilter.PreFilterEvents%2A>.","pos":[0,247],"nodes":[{"content":"The keys in the dictionary of events are the names of the events.","pos":[0,65]},{"content":"The objects are of type <ph id=\"ph1\">&lt;xref:System.ComponentModel.EventDescriptor&gt;</ph>.","pos":[66,135],"source":" The objects are of type <xref:System.ComponentModel.EventDescriptor>."},{"content":"This method is called immediately after <ph id=\"ph1\">&lt;xref:System.ComponentModel.Design.IDesignerFilter.PreFilterEvents%2A&gt;</ph>.","pos":[136,247],"source":" This method is called immediately after <xref:System.ComponentModel.Design.IDesignerFilter.PreFilterEvents%2A>."}]}]}],"pos":[9436,9851],"yaml":true,"extradata":"MT"},{"content":"The <xref href=\"System.ComponentModel.EventDescriptor\"></xref> objects that represent the events of the class of the component. The keys in the dictionary of events are event names.","nodes":[{"pos":[0,181],"content":"The <xref href=\"System.ComponentModel.EventDescriptor\"></xref> objects that represent the events of the class of the component. The keys in the dictionary of events are event names.","nodes":[{"content":"The <ph id=\"ph1\">&lt;xref href=\"System.ComponentModel.EventDescriptor\"&gt;&lt;/xref&gt;</ph> objects that represent the events of the class of the component.","pos":[0,127],"source":"The <xref href=\"System.ComponentModel.EventDescriptor\"></xref> objects that represent the events of the class of the component."},{"content":"The keys in the dictionary of events are event names.","pos":[128,181]}]}],"pos":[10039,10221],"yaml":true},{"content":"When overridden in a derived class, allows a designer to change or remove items from the set of properties that it exposes through a <xref href=\"System.ComponentModel.TypeDescriptor\"></xref>.","nodes":[{"pos":[0,191],"content":"When overridden in a derived class, allows a designer to change or remove items from the set of properties that it exposes through a <ph id=\"ph1\">&lt;xref href=\"System.ComponentModel.TypeDescriptor\"&gt;&lt;/xref&gt;</ph>.","source":"When overridden in a derived class, allows a designer to change or remove items from the set of properties that it exposes through a <xref href=\"System.ComponentModel.TypeDescriptor\"></xref>."}],"pos":[11724,11916],"yaml":true},{"content":"This method provides a way to change or remove items within the dictionary of properties that are exposed through a <xref:System.ComponentModel.TypeDescriptor>.  \n  \n The keys in the dictionary of properties are the names of the properties. The objects are of type <xref:System.ComponentModel.PropertyDescriptor>. This method is called immediately after <xref:System.ComponentModel.Design.IDesignerFilter.PreFilterProperties%2A>.","nodes":[{"pos":[0,160],"content":"This method provides a way to change or remove items within the dictionary of properties that are exposed through a <xref:System.ComponentModel.TypeDescriptor>.","nodes":[{"content":"This method provides a way to change or remove items within the dictionary of properties that are exposed through a <ph id=\"ph1\">&lt;xref:System.ComponentModel.TypeDescriptor&gt;</ph>.","pos":[0,160],"source":"This method provides a way to change or remove items within the dictionary of properties that are exposed through a <xref:System.ComponentModel.TypeDescriptor>."}]},{"pos":[167,429],"content":"The keys in the dictionary of properties are the names of the properties. The objects are of type <xref:System.ComponentModel.PropertyDescriptor>. This method is called immediately after <xref:System.ComponentModel.Design.IDesignerFilter.PreFilterProperties%2A>.","nodes":[{"content":"The keys in the dictionary of properties are the names of the properties. The objects are of type <xref:System.ComponentModel.PropertyDescriptor>. This method is called immediately after <xref:System.ComponentModel.Design.IDesignerFilter.PreFilterProperties%2A>.","pos":[0,262],"nodes":[{"content":"The keys in the dictionary of properties are the names of the properties.","pos":[0,73]},{"content":"The objects are of type <ph id=\"ph1\">&lt;xref:System.ComponentModel.PropertyDescriptor&gt;</ph>.","pos":[74,146],"source":" The objects are of type <xref:System.ComponentModel.PropertyDescriptor>."},{"content":"This method is called immediately after <ph id=\"ph1\">&lt;xref:System.ComponentModel.Design.IDesignerFilter.PreFilterProperties%2A&gt;</ph>.","pos":[147,262],"source":" This method is called immediately after <xref:System.ComponentModel.Design.IDesignerFilter.PreFilterProperties%2A>."}]}]}],"pos":[11927,12361],"yaml":true,"extradata":"MT"},{"content":"The <xref href=\"System.ComponentModel.PropertyDescriptor\"></xref> objects that represent the properties of the class of the component. The keys in the dictionary of properties are property names.","nodes":[{"pos":[0,195],"content":"The <xref href=\"System.ComponentModel.PropertyDescriptor\"></xref> objects that represent the properties of the class of the component. The keys in the dictionary of properties are property names.","nodes":[{"content":"The <ph id=\"ph1\">&lt;xref href=\"System.ComponentModel.PropertyDescriptor\"&gt;&lt;/xref&gt;</ph> objects that represent the properties of the class of the component.","pos":[0,134],"source":"The <xref href=\"System.ComponentModel.PropertyDescriptor\"></xref> objects that represent the properties of the class of the component."},{"content":"The keys in the dictionary of properties are property names.","pos":[135,195]}]}],"pos":[12561,12757],"yaml":true},{"content":"When overridden in a derived class, allows a designer to add items to the set of attributes that it exposes through a <xref href=\"System.ComponentModel.TypeDescriptor\"></xref>.","nodes":[{"pos":[0,176],"content":"When overridden in a derived class, allows a designer to add items to the set of attributes that it exposes through a <ph id=\"ph1\">&lt;xref href=\"System.ComponentModel.TypeDescriptor\"&gt;&lt;/xref&gt;</ph>.","source":"When overridden in a derived class, allows a designer to add items to the set of attributes that it exposes through a <xref href=\"System.ComponentModel.TypeDescriptor\"></xref>."}],"pos":[14258,14435],"yaml":true},{"content":"This method provides a way to add items to the dictionary of attributes that the associated component of the designer implementing this interface exposes through a <xref:System.ComponentModel.TypeDescriptor>.  \n  \n The keys in the dictionary of attributes are the type IDs of the attributes. The objects are of type <xref:System.Attribute>. This method is called immediately before <xref:System.ComponentModel.Design.IDesignerFilter.PostFilterAttributes%2A>.  \n  \n The type ID of an attribute can be any object. By default, <xref:System.Attribute> returns its <xref:System.Type> as the value of its <xref:System.Attribute.TypeId%2A> property. You can check the <xref:System.Attribute.TypeId%2A> of an attribute in the dictionary for equivalence with a known <xref:System.Attribute.TypeId%2A> for an attribute to identify it, or use <xref:System.Reflection> to identify the attribute object itself.  \n  \n When an attribute that has the same <xref:System.Attribute.TypeId%2A> as an existing or inherited attribute is added to a component, the new attribute replaces the old attribute. For many attributes, a new attribute of the same type will replace any previous attribute of the type. However, some types of attributes return a <xref:System.Attribute.TypeId%2A> that distinguishes the attribute selectively. For example, in order to provide different types of simultaneously active designers for a type, such as an <xref:System.ComponentModel.Design.IRootDesigner> and an <xref:System.ComponentModel.Design.IDesigner>, the <xref:System.ComponentModel.DesignerAttribute> class returns a <xref:System.Attribute.TypeId%2A> that uniquely identifies both the attribute and the base designer type. The <xref:System.ComponentModel.DesignerAttribute> constructor allows you to specify the base designer type of the designer in addition to its specific type, and <xref:System.ComponentModel.DesignerAttribute> returns a <xref:System.Attribute.TypeId%2A> that reflects this. Therefore when you add a new <xref:System.ComponentModel.DesignerAttribute> with a base designer type of the same type as the base designer type of an existing <xref:System.ComponentModel.DesignerAttribute>, the old attribute is replaced with the new attribute.","nodes":[{"pos":[0,208],"content":"This method provides a way to add items to the dictionary of attributes that the associated component of the designer implementing this interface exposes through a <xref:System.ComponentModel.TypeDescriptor>.","nodes":[{"content":"This method provides a way to add items to the dictionary of attributes that the associated component of the designer implementing this interface exposes through a <ph id=\"ph1\">&lt;xref:System.ComponentModel.TypeDescriptor&gt;</ph>.","pos":[0,208],"source":"This method provides a way to add items to the dictionary of attributes that the associated component of the designer implementing this interface exposes through a <xref:System.ComponentModel.TypeDescriptor>."}]},{"pos":[215,458],"content":"The keys in the dictionary of attributes are the type IDs of the attributes. The objects are of type <xref:System.Attribute>. This method is called immediately before <xref:System.ComponentModel.Design.IDesignerFilter.PostFilterAttributes%2A>.","nodes":[{"content":"The keys in the dictionary of attributes are the type IDs of the attributes. The objects are of type <xref:System.Attribute>. This method is called immediately before <xref:System.ComponentModel.Design.IDesignerFilter.PostFilterAttributes%2A>.","pos":[0,243],"nodes":[{"content":"The keys in the dictionary of attributes are the type IDs of the attributes.","pos":[0,76]},{"content":"The objects are of type <ph id=\"ph1\">&lt;xref:System.Attribute&gt;</ph>.","pos":[77,125],"source":" The objects are of type <xref:System.Attribute>."},{"content":"This method is called immediately before <ph id=\"ph1\">&lt;xref:System.ComponentModel.Design.IDesignerFilter.PostFilterAttributes%2A&gt;</ph>.","pos":[126,243],"source":" This method is called immediately before <xref:System.ComponentModel.Design.IDesignerFilter.PostFilterAttributes%2A>."}]}]},{"pos":[465,897],"content":"The type ID of an attribute can be any object. By default, <xref:System.Attribute> returns its <xref:System.Type> as the value of its <xref:System.Attribute.TypeId%2A> property. You can check the <xref:System.Attribute.TypeId%2A> of an attribute in the dictionary for equivalence with a known <xref:System.Attribute.TypeId%2A> for an attribute to identify it, or use <xref:System.Reflection> to identify the attribute object itself.","nodes":[{"content":"The type ID of an attribute can be any object. By default, <xref:System.Attribute> returns its <xref:System.Type> as the value of its <xref:System.Attribute.TypeId%2A> property. You can check the <xref:System.Attribute.TypeId%2A> of an attribute in the dictionary for equivalence with a known <xref:System.Attribute.TypeId%2A> for an attribute to identify it, or use <xref:System.Reflection> to identify the attribute object itself.","pos":[0,432],"nodes":[{"content":"The type ID of an attribute can be any object.","pos":[0,46]},{"content":"By default, <ph id=\"ph1\">&lt;xref:System.Attribute&gt;</ph> returns its <ph id=\"ph2\">&lt;xref:System.Type&gt;</ph> as the value of its <ph id=\"ph3\">&lt;xref:System.Attribute.TypeId%2A&gt;</ph> property.","pos":[47,177],"source":" By default, <xref:System.Attribute> returns its <xref:System.Type> as the value of its <xref:System.Attribute.TypeId%2A> property."},{"content":"You can check the <ph id=\"ph1\">&lt;xref:System.Attribute.TypeId%2A&gt;</ph> of an attribute in the dictionary for equivalence with a known <ph id=\"ph2\">&lt;xref:System.Attribute.TypeId%2A&gt;</ph> for an attribute to identify it, or use <ph id=\"ph3\">&lt;xref:System.Reflection&gt;</ph> to identify the attribute object itself.","pos":[178,432],"source":" You can check the <xref:System.Attribute.TypeId%2A> of an attribute in the dictionary for equivalence with a known <xref:System.Attribute.TypeId%2A> for an attribute to identify it, or use <xref:System.Reflection> to identify the attribute object itself."}]}]},{"pos":[904,2227],"content":"When an attribute that has the same <xref:System.Attribute.TypeId%2A> as an existing or inherited attribute is added to a component, the new attribute replaces the old attribute. For many attributes, a new attribute of the same type will replace any previous attribute of the type. However, some types of attributes return a <xref:System.Attribute.TypeId%2A> that distinguishes the attribute selectively. For example, in order to provide different types of simultaneously active designers for a type, such as an <xref:System.ComponentModel.Design.IRootDesigner> and an <xref:System.ComponentModel.Design.IDesigner>, the <xref:System.ComponentModel.DesignerAttribute> class returns a <xref:System.Attribute.TypeId%2A> that uniquely identifies both the attribute and the base designer type. The <xref:System.ComponentModel.DesignerAttribute> constructor allows you to specify the base designer type of the designer in addition to its specific type, and <xref:System.ComponentModel.DesignerAttribute> returns a <xref:System.Attribute.TypeId%2A> that reflects this. Therefore when you add a new <xref:System.ComponentModel.DesignerAttribute> with a base designer type of the same type as the base designer type of an existing <xref:System.ComponentModel.DesignerAttribute>, the old attribute is replaced with the new attribute.","nodes":[{"content":"When an attribute that has the same <xref:System.Attribute.TypeId%2A> as an existing or inherited attribute is added to a component, the new attribute replaces the old attribute. For many attributes, a new attribute of the same type will replace any previous attribute of the type. However, some types of attributes return a <xref:System.Attribute.TypeId%2A> that distinguishes the attribute selectively. For example, in order to provide different types of simultaneously active designers for a type, such as an <xref:System.ComponentModel.Design.IRootDesigner> and an <xref:System.ComponentModel.Design.IDesigner>, the <xref:System.ComponentModel.DesignerAttribute> class returns a <xref:System.Attribute.TypeId%2A> that uniquely identifies both the attribute and the base designer type. The <xref:System.ComponentModel.DesignerAttribute> constructor allows you to specify the base designer type of the designer in addition to its specific type, and <xref:System.ComponentModel.DesignerAttribute> returns a <xref:System.Attribute.TypeId%2A> that reflects this. Therefore when you add a new <xref:System.ComponentModel.DesignerAttribute> with a base designer type of the same type as the base designer type of an existing <xref:System.ComponentModel.DesignerAttribute>, the old attribute is replaced with the new attribute.","pos":[0,1323],"nodes":[{"content":"When an attribute that has the same <ph id=\"ph1\">&lt;xref:System.Attribute.TypeId%2A&gt;</ph> as an existing or inherited attribute is added to a component, the new attribute replaces the old attribute.","pos":[0,178],"source":"When an attribute that has the same <xref:System.Attribute.TypeId%2A> as an existing or inherited attribute is added to a component, the new attribute replaces the old attribute."},{"content":"For many attributes, a new attribute of the same type will replace any previous attribute of the type.","pos":[179,281]},{"content":"However, some types of attributes return a <ph id=\"ph1\">&lt;xref:System.Attribute.TypeId%2A&gt;</ph> that distinguishes the attribute selectively.","pos":[282,404],"source":" However, some types of attributes return a <xref:System.Attribute.TypeId%2A> that distinguishes the attribute selectively."},{"content":"For example, in order to provide different types of simultaneously active designers for a type, such as an <ph id=\"ph1\">&lt;xref:System.ComponentModel.Design.IRootDesigner&gt;</ph> and an <ph id=\"ph2\">&lt;xref:System.ComponentModel.Design.IDesigner&gt;</ph>, the <ph id=\"ph3\">&lt;xref:System.ComponentModel.DesignerAttribute&gt;</ph> class returns a <ph id=\"ph4\">&lt;xref:System.Attribute.TypeId%2A&gt;</ph> that uniquely identifies both the attribute and the base designer type.","pos":[405,788],"source":" For example, in order to provide different types of simultaneously active designers for a type, such as an <xref:System.ComponentModel.Design.IRootDesigner> and an <xref:System.ComponentModel.Design.IDesigner>, the <xref:System.ComponentModel.DesignerAttribute> class returns a <xref:System.Attribute.TypeId%2A> that uniquely identifies both the attribute and the base designer type."},{"content":"The <ph id=\"ph1\">&lt;xref:System.ComponentModel.DesignerAttribute&gt;</ph> constructor allows you to specify the base designer type of the designer in addition to its specific type, and <ph id=\"ph2\">&lt;xref:System.ComponentModel.DesignerAttribute&gt;</ph> returns a <ph id=\"ph3\">&lt;xref:System.Attribute.TypeId%2A&gt;</ph> that reflects this.","pos":[789,1061],"source":" The <xref:System.ComponentModel.DesignerAttribute> constructor allows you to specify the base designer type of the designer in addition to its specific type, and <xref:System.ComponentModel.DesignerAttribute> returns a <xref:System.Attribute.TypeId%2A> that reflects this."},{"content":"Therefore when you add a new <ph id=\"ph1\">&lt;xref:System.ComponentModel.DesignerAttribute&gt;</ph> with a base designer type of the same type as the base designer type of an existing <ph id=\"ph2\">&lt;xref:System.ComponentModel.DesignerAttribute&gt;</ph>, the old attribute is replaced with the new attribute.","pos":[1062,1323],"source":" Therefore when you add a new <xref:System.ComponentModel.DesignerAttribute> with a base designer type of the same type as the base designer type of an existing <xref:System.ComponentModel.DesignerAttribute>, the old attribute is replaced with the new attribute."}]}]}],"pos":[14446,16682],"yaml":true,"extradata":"MT"},{"content":"The <xref href=\"System.Attribute\"></xref> objects for the class of the component. The keys in the dictionary of attributes are the <xref href=\"System.Attribute.TypeId\"></xref> values of the attributes.","nodes":[{"pos":[0,201],"content":"The <xref href=\"System.Attribute\"></xref> objects for the class of the component. The keys in the dictionary of attributes are the <xref href=\"System.Attribute.TypeId\"></xref> values of the attributes.","nodes":[{"content":"The <ph id=\"ph1\">&lt;xref href=\"System.Attribute\"&gt;&lt;/xref&gt;</ph> objects for the class of the component.","pos":[0,81],"source":"The <xref href=\"System.Attribute\"></xref> objects for the class of the component."},{"content":"The keys in the dictionary of attributes are the <ph id=\"ph1\">&lt;xref href=\"System.Attribute.TypeId\"&gt;&lt;/xref&gt;</ph> values of the attributes.","pos":[82,201],"source":" The keys in the dictionary of attributes are the <xref href=\"System.Attribute.TypeId\"></xref> values of the attributes."}]}],"pos":[16881,17083],"yaml":true},{"content":"When overridden in a derived class, allows a designer to add items to the set of events that it exposes through a <xref href=\"System.ComponentModel.TypeDescriptor\"></xref>.","nodes":[{"pos":[0,172],"content":"When overridden in a derived class, allows a designer to add items to the set of events that it exposes through a <ph id=\"ph1\">&lt;xref href=\"System.ComponentModel.TypeDescriptor\"&gt;&lt;/xref&gt;</ph>.","source":"When overridden in a derived class, allows a designer to add items to the set of events that it exposes through a <xref href=\"System.ComponentModel.TypeDescriptor\"></xref>."}],"pos":[18559,18732],"yaml":true},{"content":"This method provides a way to add items to the dictionary of events that a designer exposes through a <xref:System.ComponentModel.TypeDescriptor>.  \n  \n The keys in the dictionary of events are the names of the events. The objects are of type <xref:System.ComponentModel.EventDescriptor>. This method is called immediately before <xref:System.ComponentModel.Design.IDesignerFilter.PostFilterEvents%2A>.","nodes":[{"pos":[0,146],"content":"This method provides a way to add items to the dictionary of events that a designer exposes through a <xref:System.ComponentModel.TypeDescriptor>.","nodes":[{"content":"This method provides a way to add items to the dictionary of events that a designer exposes through a <ph id=\"ph1\">&lt;xref:System.ComponentModel.TypeDescriptor&gt;</ph>.","pos":[0,146],"source":"This method provides a way to add items to the dictionary of events that a designer exposes through a <xref:System.ComponentModel.TypeDescriptor>."}]},{"pos":[153,402],"content":"The keys in the dictionary of events are the names of the events. The objects are of type <xref:System.ComponentModel.EventDescriptor>. This method is called immediately before <xref:System.ComponentModel.Design.IDesignerFilter.PostFilterEvents%2A>.","nodes":[{"content":"The keys in the dictionary of events are the names of the events. The objects are of type <xref:System.ComponentModel.EventDescriptor>. This method is called immediately before <xref:System.ComponentModel.Design.IDesignerFilter.PostFilterEvents%2A>.","pos":[0,249],"nodes":[{"content":"The keys in the dictionary of events are the names of the events.","pos":[0,65]},{"content":"The objects are of type <ph id=\"ph1\">&lt;xref:System.ComponentModel.EventDescriptor&gt;</ph>.","pos":[66,135],"source":" The objects are of type <xref:System.ComponentModel.EventDescriptor>."},{"content":"This method is called immediately before <ph id=\"ph1\">&lt;xref:System.ComponentModel.Design.IDesignerFilter.PostFilterEvents%2A&gt;</ph>.","pos":[136,249],"source":" This method is called immediately before <xref:System.ComponentModel.Design.IDesignerFilter.PostFilterEvents%2A>."}]}]}],"pos":[18743,19150],"yaml":true,"extradata":"MT"},{"content":"The <xref href=\"System.ComponentModel.EventDescriptor\"></xref> objects that represent the events of the class of the component. The keys in the dictionary of events are event names.","nodes":[{"pos":[0,181],"content":"The <xref href=\"System.ComponentModel.EventDescriptor\"></xref> objects that represent the events of the class of the component. The keys in the dictionary of events are event names.","nodes":[{"content":"The <ph id=\"ph1\">&lt;xref href=\"System.ComponentModel.EventDescriptor\"&gt;&lt;/xref&gt;</ph> objects that represent the events of the class of the component.","pos":[0,127],"source":"The <xref href=\"System.ComponentModel.EventDescriptor\"></xref> objects that represent the events of the class of the component."},{"content":"The keys in the dictionary of events are event names.","pos":[128,181]}]}],"pos":[19337,19519],"yaml":true},{"content":"When overridden in a derived class, allows a designer to add items to the set of properties that it exposes through a <xref href=\"System.ComponentModel.TypeDescriptor\"></xref>.","nodes":[{"pos":[0,176],"content":"When overridden in a derived class, allows a designer to add items to the set of properties that it exposes through a <ph id=\"ph1\">&lt;xref href=\"System.ComponentModel.TypeDescriptor\"&gt;&lt;/xref&gt;</ph>.","source":"When overridden in a derived class, allows a designer to add items to the set of properties that it exposes through a <xref href=\"System.ComponentModel.TypeDescriptor\"></xref>."}],"pos":[21015,21192],"yaml":true},{"content":"This method provides a way to add items to the dictionary of properties that a designer exposes through a <xref:System.ComponentModel.TypeDescriptor>.  \n  \n The keys in the dictionary of properties are the names of the properties. The objects are of type <xref:System.ComponentModel.PropertyDescriptor>. This method is called immediately before <xref:System.ComponentModel.Design.IDesignerFilter.PostFilterProperties%2A>.","nodes":[{"pos":[0,150],"content":"This method provides a way to add items to the dictionary of properties that a designer exposes through a <xref:System.ComponentModel.TypeDescriptor>.","nodes":[{"content":"This method provides a way to add items to the dictionary of properties that a designer exposes through a <ph id=\"ph1\">&lt;xref:System.ComponentModel.TypeDescriptor&gt;</ph>.","pos":[0,150],"source":"This method provides a way to add items to the dictionary of properties that a designer exposes through a <xref:System.ComponentModel.TypeDescriptor>."}]},{"pos":[157,421],"content":"The keys in the dictionary of properties are the names of the properties. The objects are of type <xref:System.ComponentModel.PropertyDescriptor>. This method is called immediately before <xref:System.ComponentModel.Design.IDesignerFilter.PostFilterProperties%2A>.","nodes":[{"content":"The keys in the dictionary of properties are the names of the properties. The objects are of type <xref:System.ComponentModel.PropertyDescriptor>. This method is called immediately before <xref:System.ComponentModel.Design.IDesignerFilter.PostFilterProperties%2A>.","pos":[0,264],"nodes":[{"content":"The keys in the dictionary of properties are the names of the properties.","pos":[0,73]},{"content":"The objects are of type <ph id=\"ph1\">&lt;xref:System.ComponentModel.PropertyDescriptor&gt;</ph>.","pos":[74,146],"source":" The objects are of type <xref:System.ComponentModel.PropertyDescriptor>."},{"content":"This method is called immediately before <ph id=\"ph1\">&lt;xref:System.ComponentModel.Design.IDesignerFilter.PostFilterProperties%2A&gt;</ph>.","pos":[147,264],"source":" This method is called immediately before <xref:System.ComponentModel.Design.IDesignerFilter.PostFilterProperties%2A>."}]}]}],"pos":[21203,21629],"yaml":true,"extradata":"MT"},{"content":"The <xref href=\"System.ComponentModel.PropertyDescriptor\"></xref> objects that represent the properties of the class of the component. The keys in the dictionary of properties are property names.","nodes":[{"pos":[0,195],"content":"The <xref href=\"System.ComponentModel.PropertyDescriptor\"></xref> objects that represent the properties of the class of the component. The keys in the dictionary of properties are property names.","nodes":[{"content":"The <ph id=\"ph1\">&lt;xref href=\"System.ComponentModel.PropertyDescriptor\"&gt;&lt;/xref&gt;</ph> objects that represent the properties of the class of the component.","pos":[0,134],"source":"The <xref href=\"System.ComponentModel.PropertyDescriptor\"></xref> objects that represent the properties of the class of the component."},{"content":"The keys in the dictionary of properties are property names.","pos":[135,195]}]}],"pos":[21828,22024],"yaml":true}],"content":"### YamlMime:ManagedReference\nitems:\n- uid: System.ComponentModel.Design.IDesignerFilter\n  commentId: T:System.ComponentModel.Design.IDesignerFilter\n  id: IDesignerFilter\n  children:\n  - System.ComponentModel.Design.IDesignerFilter.PostFilterAttributes(System.Collections.IDictionary)\n  - System.ComponentModel.Design.IDesignerFilter.PostFilterEvents(System.Collections.IDictionary)\n  - System.ComponentModel.Design.IDesignerFilter.PostFilterProperties(System.Collections.IDictionary)\n  - System.ComponentModel.Design.IDesignerFilter.PreFilterAttributes(System.Collections.IDictionary)\n  - System.ComponentModel.Design.IDesignerFilter.PreFilterEvents(System.Collections.IDictionary)\n  - System.ComponentModel.Design.IDesignerFilter.PreFilterProperties(System.Collections.IDictionary)\n  langs:\n  - csharp\n  name: IDesignerFilter\n  nameWithType: IDesignerFilter\n  fullName: System.ComponentModel.Design.IDesignerFilter\n  type: Interface\n  assemblies:\n  - System\n  - netstandard\n  - System.ComponentModel.TypeConverter\n  namespace: System.ComponentModel.Design\n  summary: Provides an interface that enables a designer to access and filter the dictionaries of a <xref href=\"System.ComponentModel.TypeDescriptor\"></xref> that stores the property, attribute, and event descriptors that a component designer can expose to the design-time environment.\n  remarks: \"<xref:System.ComponentModel.Design.IDesignerFilter> enables a designer to filter the set of property, attribute, and event descriptors that its associated component exposes through a <xref:System.ComponentModel.TypeDescriptor>. The methods of this interface whose names begin with `Pre` are called immediately before the methods whose names begin with `Post`.  \\n  \\n If you want to add attribute, event, or property descriptors, use a <xref:System.ComponentModel.Design.IDesignerFilter.PreFilterAttributes%2A>, <xref:System.ComponentModel.Design.IDesignerFilter.PreFilterEvents%2A>, or <xref:System.ComponentModel.Design.IDesignerFilter.PreFilterProperties%2A> method.  \\n  \\n If you want to change or remove attribute, event, or property descriptors, use a <xref:System.ComponentModel.Design.IDesignerFilter.PostFilterAttributes%2A>, <xref:System.ComponentModel.Design.IDesignerFilter.PostFilterEvents%2A>, or <xref:System.ComponentModel.Design.IDesignerFilter.PostFilterProperties%2A> method.\"\n  example:\n  - \"The following example demonstrates an override of <xref:System.ComponentModel.Design.IDesignerFilter.PreFilterProperties%2A> that adds a property of the designer to the Properties window when the designer's control is selected at design time. See the example for the <xref:System.Windows.Forms.Design.ControlDesigner> class for a complete designer example that uses the <xref:System.ComponentModel.Design.IDesignerFilter> interface.  \\n  \\n [!code-cpp[ControlDesignerExample#2](~/samples/snippets/cpp/VS_Snippets_Winforms/ControlDesignerExample/CPP/controldesignerexample.cpp#2)]\\n [!code-csharp[ControlDesignerExample#2](~/samples/snippets/csharp/VS_Snippets_Winforms/ControlDesignerExample/CS/controldesignerexample.cs#2)]\\n [!code-vb[ControlDesignerExample#2](~/samples/snippets/visualbasic/VS_Snippets_Winforms/ControlDesignerExample/VB/controldesignerexample.vb#2)]\"\n  syntax:\n    content: public interface IDesignerFilter\n  derivedClasses:\n  - System.ComponentModel.Design.ComponentDesigner\n  - System.Web.UI.Design.WebFormsRootDesigner\n  - System.Workflow.ComponentModel.Design.ActivityDesigner\n  implements: []\n  version:\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - netstandard-2.0\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  monikers:\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - netstandard-2.0\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.ComponentModel.Design/IDesignerFilter.xml\n  ms.technology:\n  - dotnet-standard\n  author: stevehoag\n  ms.author: shoag\n  manager: wpickett\n- uid: System.ComponentModel.Design.IDesignerFilter.PostFilterAttributes(System.Collections.IDictionary)\n  commentId: M:System.ComponentModel.Design.IDesignerFilter.PostFilterAttributes(System.Collections.IDictionary)\n  id: PostFilterAttributes(System.Collections.IDictionary)\n  parent: System.ComponentModel.Design.IDesignerFilter\n  langs:\n  - csharp\n  name: PostFilterAttributes(IDictionary)\n  nameWithType: IDesignerFilter.PostFilterAttributes(IDictionary)\n  fullName: IDesignerFilter.PostFilterAttributes(IDictionary)\n  type: Method\n  assemblies:\n  - System\n  - netstandard\n  - System.ComponentModel.TypeConverter\n  namespace: System.ComponentModel.Design\n  summary: When overridden in a derived class, allows a designer to change or remove items from the set of attributes that it exposes through a <xref href=\"System.ComponentModel.TypeDescriptor\"></xref>.\n  remarks: \"This method provides a way to change or remove items within the dictionary of attributes that the associated component of the designer implementing this interface exposes through a <xref:System.ComponentModel.TypeDescriptor>.  \\n  \\n The keys in the dictionary of attributes are the type IDs of the attributes. The objects are of type <xref:System.Attribute>. This method is called immediately after <xref:System.ComponentModel.Design.IDesignerFilter.PreFilterAttributes%2A>.  \\n  \\n The type ID of an attribute can be any object. By default, <xref:System.Attribute> returns its <xref:System.Type> as the value of its <xref:System.Attribute.TypeId%2A> property. You can check the <xref:System.Attribute.TypeId%2A> of an attribute in the dictionary for equivalence with a known <xref:System.Attribute.TypeId%2A> for an attribute to identify it, or use <xref:System.Reflection> to identify the attribute object itself.  \\n  \\n When an attribute that has the same <xref:System.Attribute.TypeId%2A> as an existing or inherited attribute is added to a component, the new attribute replaces the old attribute. For many attributes, a new attribute of the same type will replace any previous attribute of the type. However, some types of attributes return a <xref:System.Attribute.TypeId%2A> that distinguishes the attribute selectively. For example, in order to provide different types of simultaneously active designers for a type, such as an <xref:System.ComponentModel.Design.IRootDesigner> and an <xref:System.ComponentModel.Design.IDesigner>, the <xref:System.ComponentModel.DesignerAttribute> class returns a <xref:System.Attribute.TypeId%2A> that uniquely identifies both the attribute and the base designer type. The <xref:System.ComponentModel.DesignerAttribute> constructor allows you to specify the base designer type of the designer in addition to its specific type, and <xref:System.ComponentModel.DesignerAttribute> returns a <xref:System.Attribute.TypeId%2A> that reflects this. Therefore when you add a new <xref:System.ComponentModel.DesignerAttribute> with a base designer type of the same type as the base designer type of an existing <xref:System.ComponentModel.DesignerAttribute>, the old attribute is replaced with the new attribute.\"\n  syntax:\n    content: public void PostFilterAttributes (System.Collections.IDictionary attributes);\n    parameters:\n    - id: attributes\n      type: System.Collections.IDictionary\n      description: The <xref href=\"System.Attribute\"></xref> objects for the class of the component. The keys in the dictionary of attributes are the <xref href=\"System.Attribute.TypeId\"></xref> values of the attributes.\n  overload: System.ComponentModel.Design.IDesignerFilter.PostFilterAttributes*\n  exceptions: []\n  version:\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - netstandard-2.0\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  monikers:\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - netstandard-2.0\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.ComponentModel.Design/IDesignerFilter.xml\n  ms.technology:\n  - dotnet-standard\n  author: stevehoag\n  ms.author: shoag\n  manager: wpickett\n- uid: System.ComponentModel.Design.IDesignerFilter.PostFilterEvents(System.Collections.IDictionary)\n  commentId: M:System.ComponentModel.Design.IDesignerFilter.PostFilterEvents(System.Collections.IDictionary)\n  id: PostFilterEvents(System.Collections.IDictionary)\n  parent: System.ComponentModel.Design.IDesignerFilter\n  langs:\n  - csharp\n  name: PostFilterEvents(IDictionary)\n  nameWithType: IDesignerFilter.PostFilterEvents(IDictionary)\n  fullName: IDesignerFilter.PostFilterEvents(IDictionary)\n  type: Method\n  assemblies:\n  - System\n  - netstandard\n  - System.ComponentModel.TypeConverter\n  namespace: System.ComponentModel.Design\n  summary: When overridden in a derived class, allows a designer to change or remove items from the set of events that it exposes through a <xref href=\"System.ComponentModel.TypeDescriptor\"></xref>.\n  remarks: \"This method provides a way to change or remove items within the dictionary of events that are exposed through a <xref:System.ComponentModel.TypeDescriptor>.  \\n  \\n The keys in the dictionary of events are the names of the events. The objects are of type <xref:System.ComponentModel.EventDescriptor>. This method is called immediately after <xref:System.ComponentModel.Design.IDesignerFilter.PreFilterEvents%2A>.\"\n  syntax:\n    content: public void PostFilterEvents (System.Collections.IDictionary events);\n    parameters:\n    - id: events\n      type: System.Collections.IDictionary\n      description: The <xref href=\"System.ComponentModel.EventDescriptor\"></xref> objects that represent the events of the class of the component. The keys in the dictionary of events are event names.\n  overload: System.ComponentModel.Design.IDesignerFilter.PostFilterEvents*\n  exceptions: []\n  version:\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - netstandard-2.0\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  monikers:\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - netstandard-2.0\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.ComponentModel.Design/IDesignerFilter.xml\n  ms.technology:\n  - dotnet-standard\n  author: stevehoag\n  ms.author: shoag\n  manager: wpickett\n- uid: System.ComponentModel.Design.IDesignerFilter.PostFilterProperties(System.Collections.IDictionary)\n  commentId: M:System.ComponentModel.Design.IDesignerFilter.PostFilterProperties(System.Collections.IDictionary)\n  id: PostFilterProperties(System.Collections.IDictionary)\n  parent: System.ComponentModel.Design.IDesignerFilter\n  langs:\n  - csharp\n  name: PostFilterProperties(IDictionary)\n  nameWithType: IDesignerFilter.PostFilterProperties(IDictionary)\n  fullName: IDesignerFilter.PostFilterProperties(IDictionary)\n  type: Method\n  assemblies:\n  - System\n  - netstandard\n  - System.ComponentModel.TypeConverter\n  namespace: System.ComponentModel.Design\n  summary: When overridden in a derived class, allows a designer to change or remove items from the set of properties that it exposes through a <xref href=\"System.ComponentModel.TypeDescriptor\"></xref>.\n  remarks: \"This method provides a way to change or remove items within the dictionary of properties that are exposed through a <xref:System.ComponentModel.TypeDescriptor>.  \\n  \\n The keys in the dictionary of properties are the names of the properties. The objects are of type <xref:System.ComponentModel.PropertyDescriptor>. This method is called immediately after <xref:System.ComponentModel.Design.IDesignerFilter.PreFilterProperties%2A>.\"\n  syntax:\n    content: public void PostFilterProperties (System.Collections.IDictionary properties);\n    parameters:\n    - id: properties\n      type: System.Collections.IDictionary\n      description: The <xref href=\"System.ComponentModel.PropertyDescriptor\"></xref> objects that represent the properties of the class of the component. The keys in the dictionary of properties are property names.\n  overload: System.ComponentModel.Design.IDesignerFilter.PostFilterProperties*\n  exceptions: []\n  version:\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - netstandard-2.0\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  monikers:\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - netstandard-2.0\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.ComponentModel.Design/IDesignerFilter.xml\n  ms.technology:\n  - dotnet-standard\n  author: stevehoag\n  ms.author: shoag\n  manager: wpickett\n- uid: System.ComponentModel.Design.IDesignerFilter.PreFilterAttributes(System.Collections.IDictionary)\n  commentId: M:System.ComponentModel.Design.IDesignerFilter.PreFilterAttributes(System.Collections.IDictionary)\n  id: PreFilterAttributes(System.Collections.IDictionary)\n  parent: System.ComponentModel.Design.IDesignerFilter\n  langs:\n  - csharp\n  name: PreFilterAttributes(IDictionary)\n  nameWithType: IDesignerFilter.PreFilterAttributes(IDictionary)\n  fullName: IDesignerFilter.PreFilterAttributes(IDictionary)\n  type: Method\n  assemblies:\n  - System\n  - netstandard\n  - System.ComponentModel.TypeConverter\n  namespace: System.ComponentModel.Design\n  summary: When overridden in a derived class, allows a designer to add items to the set of attributes that it exposes through a <xref href=\"System.ComponentModel.TypeDescriptor\"></xref>.\n  remarks: \"This method provides a way to add items to the dictionary of attributes that the associated component of the designer implementing this interface exposes through a <xref:System.ComponentModel.TypeDescriptor>.  \\n  \\n The keys in the dictionary of attributes are the type IDs of the attributes. The objects are of type <xref:System.Attribute>. This method is called immediately before <xref:System.ComponentModel.Design.IDesignerFilter.PostFilterAttributes%2A>.  \\n  \\n The type ID of an attribute can be any object. By default, <xref:System.Attribute> returns its <xref:System.Type> as the value of its <xref:System.Attribute.TypeId%2A> property. You can check the <xref:System.Attribute.TypeId%2A> of an attribute in the dictionary for equivalence with a known <xref:System.Attribute.TypeId%2A> for an attribute to identify it, or use <xref:System.Reflection> to identify the attribute object itself.  \\n  \\n When an attribute that has the same <xref:System.Attribute.TypeId%2A> as an existing or inherited attribute is added to a component, the new attribute replaces the old attribute. For many attributes, a new attribute of the same type will replace any previous attribute of the type. However, some types of attributes return a <xref:System.Attribute.TypeId%2A> that distinguishes the attribute selectively. For example, in order to provide different types of simultaneously active designers for a type, such as an <xref:System.ComponentModel.Design.IRootDesigner> and an <xref:System.ComponentModel.Design.IDesigner>, the <xref:System.ComponentModel.DesignerAttribute> class returns a <xref:System.Attribute.TypeId%2A> that uniquely identifies both the attribute and the base designer type. The <xref:System.ComponentModel.DesignerAttribute> constructor allows you to specify the base designer type of the designer in addition to its specific type, and <xref:System.ComponentModel.DesignerAttribute> returns a <xref:System.Attribute.TypeId%2A> that reflects this. Therefore when you add a new <xref:System.ComponentModel.DesignerAttribute> with a base designer type of the same type as the base designer type of an existing <xref:System.ComponentModel.DesignerAttribute>, the old attribute is replaced with the new attribute.\"\n  syntax:\n    content: public void PreFilterAttributes (System.Collections.IDictionary attributes);\n    parameters:\n    - id: attributes\n      type: System.Collections.IDictionary\n      description: The <xref href=\"System.Attribute\"></xref> objects for the class of the component. The keys in the dictionary of attributes are the <xref href=\"System.Attribute.TypeId\"></xref> values of the attributes.\n  overload: System.ComponentModel.Design.IDesignerFilter.PreFilterAttributes*\n  exceptions: []\n  version:\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - netstandard-2.0\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  monikers:\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - netstandard-2.0\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.ComponentModel.Design/IDesignerFilter.xml\n  ms.technology:\n  - dotnet-standard\n  author: stevehoag\n  ms.author: shoag\n  manager: wpickett\n- uid: System.ComponentModel.Design.IDesignerFilter.PreFilterEvents(System.Collections.IDictionary)\n  commentId: M:System.ComponentModel.Design.IDesignerFilter.PreFilterEvents(System.Collections.IDictionary)\n  id: PreFilterEvents(System.Collections.IDictionary)\n  parent: System.ComponentModel.Design.IDesignerFilter\n  langs:\n  - csharp\n  name: PreFilterEvents(IDictionary)\n  nameWithType: IDesignerFilter.PreFilterEvents(IDictionary)\n  fullName: IDesignerFilter.PreFilterEvents(IDictionary)\n  type: Method\n  assemblies:\n  - System\n  - netstandard\n  - System.ComponentModel.TypeConverter\n  namespace: System.ComponentModel.Design\n  summary: When overridden in a derived class, allows a designer to add items to the set of events that it exposes through a <xref href=\"System.ComponentModel.TypeDescriptor\"></xref>.\n  remarks: \"This method provides a way to add items to the dictionary of events that a designer exposes through a <xref:System.ComponentModel.TypeDescriptor>.  \\n  \\n The keys in the dictionary of events are the names of the events. The objects are of type <xref:System.ComponentModel.EventDescriptor>. This method is called immediately before <xref:System.ComponentModel.Design.IDesignerFilter.PostFilterEvents%2A>.\"\n  syntax:\n    content: public void PreFilterEvents (System.Collections.IDictionary events);\n    parameters:\n    - id: events\n      type: System.Collections.IDictionary\n      description: The <xref href=\"System.ComponentModel.EventDescriptor\"></xref> objects that represent the events of the class of the component. The keys in the dictionary of events are event names.\n  overload: System.ComponentModel.Design.IDesignerFilter.PreFilterEvents*\n  exceptions: []\n  version:\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - netstandard-2.0\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  monikers:\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - netstandard-2.0\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.ComponentModel.Design/IDesignerFilter.xml\n  ms.technology:\n  - dotnet-standard\n  author: stevehoag\n  ms.author: shoag\n  manager: wpickett\n- uid: System.ComponentModel.Design.IDesignerFilter.PreFilterProperties(System.Collections.IDictionary)\n  commentId: M:System.ComponentModel.Design.IDesignerFilter.PreFilterProperties(System.Collections.IDictionary)\n  id: PreFilterProperties(System.Collections.IDictionary)\n  parent: System.ComponentModel.Design.IDesignerFilter\n  langs:\n  - csharp\n  name: PreFilterProperties(IDictionary)\n  nameWithType: IDesignerFilter.PreFilterProperties(IDictionary)\n  fullName: IDesignerFilter.PreFilterProperties(IDictionary)\n  type: Method\n  assemblies:\n  - System\n  - netstandard\n  - System.ComponentModel.TypeConverter\n  namespace: System.ComponentModel.Design\n  summary: When overridden in a derived class, allows a designer to add items to the set of properties that it exposes through a <xref href=\"System.ComponentModel.TypeDescriptor\"></xref>.\n  remarks: \"This method provides a way to add items to the dictionary of properties that a designer exposes through a <xref:System.ComponentModel.TypeDescriptor>.  \\n  \\n The keys in the dictionary of properties are the names of the properties. The objects are of type <xref:System.ComponentModel.PropertyDescriptor>. This method is called immediately before <xref:System.ComponentModel.Design.IDesignerFilter.PostFilterProperties%2A>.\"\n  syntax:\n    content: public void PreFilterProperties (System.Collections.IDictionary properties);\n    parameters:\n    - id: properties\n      type: System.Collections.IDictionary\n      description: The <xref href=\"System.ComponentModel.PropertyDescriptor\"></xref> objects that represent the properties of the class of the component. The keys in the dictionary of properties are property names.\n  overload: System.ComponentModel.Design.IDesignerFilter.PreFilterProperties*\n  exceptions: []\n  version:\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - netstandard-2.0\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  monikers:\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - netstandard-2.0\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.ComponentModel.Design/IDesignerFilter.xml\n  ms.technology:\n  - dotnet-standard\n  author: stevehoag\n  ms.author: shoag\n  manager: wpickett\nreferences:\n- uid: System.ComponentModel.Design.IDesignerFilter.PostFilterAttributes(System.Collections.IDictionary)\n  parent: System.ComponentModel.Design.IDesignerFilter\n  isExternal: false\n  name: PostFilterAttributes(IDictionary)\n  nameWithType: IDesignerFilter.PostFilterAttributes(IDictionary)\n  fullName: IDesignerFilter.PostFilterAttributes(IDictionary)\n- uid: System.Collections.IDictionary\n  parent: System.Collections\n  isExternal: false\n  name: IDictionary\n  nameWithType: IDictionary\n  fullName: System.Collections.IDictionary\n- uid: System.ComponentModel.Design.IDesignerFilter.PostFilterEvents(System.Collections.IDictionary)\n  parent: System.ComponentModel.Design.IDesignerFilter\n  isExternal: false\n  name: PostFilterEvents(IDictionary)\n  nameWithType: IDesignerFilter.PostFilterEvents(IDictionary)\n  fullName: IDesignerFilter.PostFilterEvents(IDictionary)\n- uid: System.ComponentModel.Design.IDesignerFilter.PostFilterProperties(System.Collections.IDictionary)\n  parent: System.ComponentModel.Design.IDesignerFilter\n  isExternal: false\n  name: PostFilterProperties(IDictionary)\n  nameWithType: IDesignerFilter.PostFilterProperties(IDictionary)\n  fullName: IDesignerFilter.PostFilterProperties(IDictionary)\n- uid: System.ComponentModel.Design.IDesignerFilter.PreFilterAttributes(System.Collections.IDictionary)\n  parent: System.ComponentModel.Design.IDesignerFilter\n  isExternal: false\n  name: PreFilterAttributes(IDictionary)\n  nameWithType: IDesignerFilter.PreFilterAttributes(IDictionary)\n  fullName: IDesignerFilter.PreFilterAttributes(IDictionary)\n- uid: System.ComponentModel.Design.IDesignerFilter.PreFilterEvents(System.Collections.IDictionary)\n  parent: System.ComponentModel.Design.IDesignerFilter\n  isExternal: false\n  name: PreFilterEvents(IDictionary)\n  nameWithType: IDesignerFilter.PreFilterEvents(IDictionary)\n  fullName: IDesignerFilter.PreFilterEvents(IDictionary)\n- uid: System.ComponentModel.Design.IDesignerFilter.PreFilterProperties(System.Collections.IDictionary)\n  parent: System.ComponentModel.Design.IDesignerFilter\n  isExternal: false\n  name: PreFilterProperties(IDictionary)\n  nameWithType: IDesignerFilter.PreFilterProperties(IDictionary)\n  fullName: IDesignerFilter.PreFilterProperties(IDictionary)\n- uid: System.ComponentModel.Design.IDesignerFilter.PostFilterAttributes*\n  parent: System.ComponentModel.Design.IDesignerFilter\n  isExternal: false\n  name: PostFilterAttributes\n  nameWithType: IDesignerFilter.PostFilterAttributes\n  fullName: IDesignerFilter.PostFilterAttributes\n  monikers:\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - netstandard-2.0\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.ComponentModel.Design/IDesignerFilter.xml\n- uid: System.ComponentModel.Design.IDesignerFilter.PostFilterEvents*\n  parent: System.ComponentModel.Design.IDesignerFilter\n  isExternal: false\n  name: PostFilterEvents\n  nameWithType: IDesignerFilter.PostFilterEvents\n  fullName: IDesignerFilter.PostFilterEvents\n  monikers:\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - netstandard-2.0\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.ComponentModel.Design/IDesignerFilter.xml\n- uid: System.ComponentModel.Design.IDesignerFilter.PostFilterProperties*\n  parent: System.ComponentModel.Design.IDesignerFilter\n  isExternal: false\n  name: PostFilterProperties\n  nameWithType: IDesignerFilter.PostFilterProperties\n  fullName: IDesignerFilter.PostFilterProperties\n  monikers:\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - netstandard-2.0\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.ComponentModel.Design/IDesignerFilter.xml\n- uid: System.ComponentModel.Design.IDesignerFilter.PreFilterAttributes*\n  parent: System.ComponentModel.Design.IDesignerFilter\n  isExternal: false\n  name: PreFilterAttributes\n  nameWithType: IDesignerFilter.PreFilterAttributes\n  fullName: IDesignerFilter.PreFilterAttributes\n  monikers:\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - netstandard-2.0\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.ComponentModel.Design/IDesignerFilter.xml\n- uid: System.ComponentModel.Design.IDesignerFilter.PreFilterEvents*\n  parent: System.ComponentModel.Design.IDesignerFilter\n  isExternal: false\n  name: PreFilterEvents\n  nameWithType: IDesignerFilter.PreFilterEvents\n  fullName: IDesignerFilter.PreFilterEvents\n  monikers:\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - netstandard-2.0\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.ComponentModel.Design/IDesignerFilter.xml\n- uid: System.ComponentModel.Design.IDesignerFilter.PreFilterProperties*\n  parent: System.ComponentModel.Design.IDesignerFilter\n  isExternal: false\n  name: PreFilterProperties\n  nameWithType: IDesignerFilter.PreFilterProperties\n  fullName: IDesignerFilter.PreFilterProperties\n  monikers:\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - netstandard-2.0\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.ComponentModel.Design/IDesignerFilter.xml\n"}