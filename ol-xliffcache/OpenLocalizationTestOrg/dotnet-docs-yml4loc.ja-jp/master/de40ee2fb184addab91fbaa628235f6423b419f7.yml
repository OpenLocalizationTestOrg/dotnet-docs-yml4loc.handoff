### YamlMime:ManagedReference
items:
- uid: System.Security.AccessControl.QualifiedAce
  commentId: T:System.Security.AccessControl.QualifiedAce
  id: QualifiedAce
  children:
  - System.Security.AccessControl.QualifiedAce.AceQualifier
  - System.Security.AccessControl.QualifiedAce.GetOpaque
  - System.Security.AccessControl.QualifiedAce.IsCallback
  - System.Security.AccessControl.QualifiedAce.OpaqueLength
  - System.Security.AccessControl.QualifiedAce.SetOpaque(System.Byte[])
  langs:
  - csharp
  name: QualifiedAce
  nameWithType: QualifiedAce
  fullName: System.Security.AccessControl.QualifiedAce
  type: Class
  assemblies:
  - System.Security.AccessControl
  - mscorlib
  namespace: System.Security.AccessControl
  summary: Represents an Access Control Entry (ACE) that contains a qualifier. The qualifier, represented by an <xref href="System.Security.AccessControl.AceQualifier"></xref> object, specifies whether the ACE allows access, denies access, causes system audits, or causes system alarms. The <xref href="System.Security.AccessControl.QualifiedAce"></xref> class is the abstract base class for the <xref href="System.Security.AccessControl.CommonAce"></xref> and <xref href="System.Security.AccessControl.ObjectAce"></xref> classes.
  syntax:
    content: 'public abstract class QualifiedAce : System.Security.AccessControl.KnownAce'
  inheritance:
  - System.Object
  - System.Security.AccessControl.GenericAce
  - System.Security.AccessControl.KnownAce
  derivedClasses:
  - System.Security.AccessControl.CommonAce
  - System.Security.AccessControl.ObjectAce
  implements: []
  inheritedMembers:
  - System.Object.Equals(System.Object,System.Object)
  - System.Object.GetType
  - System.Object.MemberwiseClone
  - System.Object.ReferenceEquals(System.Object,System.Object)
  - System.Object.ToString
  - System.Security.AccessControl.GenericAce.AceFlags
  - System.Security.AccessControl.GenericAce.AceType
  - System.Security.AccessControl.GenericAce.AuditFlags
  - System.Security.AccessControl.GenericAce.BinaryLength
  - System.Security.AccessControl.GenericAce.Copy
  - System.Security.AccessControl.GenericAce.CreateFromBinaryForm(System.Byte[],System.Int32)
  - System.Security.AccessControl.GenericAce.Equals(System.Object)
  - System.Security.AccessControl.GenericAce.GetBinaryForm(System.Byte[],System.Int32)
  - System.Security.AccessControl.GenericAce.GetHashCode
  - System.Security.AccessControl.GenericAce.InheritanceFlags
  - System.Security.AccessControl.GenericAce.IsInherited
  - System.Security.AccessControl.GenericAce.op_Equality(System.Security.AccessControl.GenericAce,System.Security.AccessControl.GenericAce)
  - System.Security.AccessControl.GenericAce.op_Inequality(System.Security.AccessControl.GenericAce,System.Security.AccessControl.GenericAce)
  - System.Security.AccessControl.GenericAce.PropagationFlags
  - System.Security.AccessControl.KnownAce.AccessMask
  - System.Security.AccessControl.KnownAce.SecurityIdentifier
  version:
  - netcore-1.0
  - netcore-1.1
  - netcore-2.0
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  - xamarinandroid-7.1
  - xamarinios-10.8
  - xamarinmac-3.0
  monikers:
  - netcore-1.0
  - netcore-1.1
  - netcore-2.0
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  - xamarinandroid-7.1
  - xamarinios-10.8
  - xamarinmac-3.0
  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Security.AccessControl/QualifiedAce.xml
  ms.technology:
  - dotnet-standard
  author: mairaw
  ms.author: mairaw
  manager: wpickett
- uid: System.Security.AccessControl.QualifiedAce.AceQualifier
  commentId: P:System.Security.AccessControl.QualifiedAce.AceQualifier
  id: AceQualifier
  parent: System.Security.AccessControl.QualifiedAce
  langs:
  - csharp
  name: AceQualifier
  nameWithType: QualifiedAce.AceQualifier
  fullName: QualifiedAce.AceQualifier
  type: Property
  assemblies:
  - System.Security.AccessControl
  - mscorlib
  namespace: System.Security.AccessControl
  summary: Gets a value that specifies whether the ACE allows access, denies access, causes system audits, or causes system alarms.
  syntax:
    content: public System.Security.AccessControl.AceQualifier AceQualifier { get; }
    return:
      type: System.Security.AccessControl.AceQualifier
      description: A value that specifies whether the ACE allows access, denies access, causes system audits, or causes system alarms.
  overload: System.Security.AccessControl.QualifiedAce.AceQualifier*
  exceptions: []
  version:
  - netcore-1.0
  - netcore-1.1
  - netcore-2.0
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  - xamarinandroid-7.1
  - xamarinios-10.8
  - xamarinmac-3.0
  monikers:
  - netcore-1.0
  - netcore-1.1
  - netcore-2.0
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  - xamarinandroid-7.1
  - xamarinios-10.8
  - xamarinmac-3.0
  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Security.AccessControl/QualifiedAce.xml
  ms.technology:
  - dotnet-standard
  author: mairaw
  ms.author: mairaw
  manager: wpickett
- uid: System.Security.AccessControl.QualifiedAce.GetOpaque
  commentId: M:System.Security.AccessControl.QualifiedAce.GetOpaque
  id: GetOpaque
  parent: System.Security.AccessControl.QualifiedAce
  langs:
  - csharp
  name: GetOpaque()
  nameWithType: QualifiedAce.GetOpaque()
  fullName: QualifiedAce.GetOpaque()
  type: Method
  assemblies:
  - System.Security.AccessControl
  - mscorlib
  namespace: System.Security.AccessControl
  summary: Returns the opaque callback data associated with this <xref href="System.Security.AccessControl.QualifiedAce"></xref> object.
  remarks: Opaque callback data is present only in callback Access Control Entries (ACEs).
  syntax:
    content: public byte[] GetOpaque ();
    parameters: []
    return:
      type: System.Byte[]
      description: An array of byte values that represents the opaque callback data associated with this <xref href="System.Security.AccessControl.QualifiedAce"></xref> object.
  overload: System.Security.AccessControl.QualifiedAce.GetOpaque*
  exceptions: []
  version:
  - netcore-1.0
  - netcore-1.1
  - netcore-2.0
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  - xamarinandroid-7.1
  - xamarinios-10.8
  - xamarinmac-3.0
  monikers:
  - netcore-1.0
  - netcore-1.1
  - netcore-2.0
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  - xamarinandroid-7.1
  - xamarinios-10.8
  - xamarinmac-3.0
  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Security.AccessControl/QualifiedAce.xml
  ms.technology:
  - dotnet-standard
  author: mairaw
  ms.author: mairaw
  manager: wpickett
- uid: System.Security.AccessControl.QualifiedAce.IsCallback
  commentId: P:System.Security.AccessControl.QualifiedAce.IsCallback
  id: IsCallback
  parent: System.Security.AccessControl.QualifiedAce
  langs:
  - csharp
  name: IsCallback
  nameWithType: QualifiedAce.IsCallback
  fullName: QualifiedAce.IsCallback
  type: Property
  assemblies:
  - System.Security.AccessControl
  - mscorlib
  namespace: System.Security.AccessControl
  summary: Specifies whether this <xref href="System.Security.AccessControl.QualifiedAce"></xref> object contains callback data.
  syntax:
    content: public bool IsCallback { get; }
    return:
      type: System.Boolean
      description: '`true` if this <xref href="System.Security.AccessControl.QualifiedAce"></xref> object contains callback data; otherwise, false.'
  overload: System.Security.AccessControl.QualifiedAce.IsCallback*
  exceptions: []
  version:
  - netcore-1.0
  - netcore-1.1
  - netcore-2.0
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  - xamarinandroid-7.1
  - xamarinios-10.8
  - xamarinmac-3.0
  monikers:
  - netcore-1.0
  - netcore-1.1
  - netcore-2.0
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  - xamarinandroid-7.1
  - xamarinios-10.8
  - xamarinmac-3.0
  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Security.AccessControl/QualifiedAce.xml
  ms.technology:
  - dotnet-standard
  author: mairaw
  ms.author: mairaw
  manager: wpickett
- uid: System.Security.AccessControl.QualifiedAce.OpaqueLength
  commentId: P:System.Security.AccessControl.QualifiedAce.OpaqueLength
  id: OpaqueLength
  parent: System.Security.AccessControl.QualifiedAce
  langs:
  - csharp
  name: OpaqueLength
  nameWithType: QualifiedAce.OpaqueLength
  fullName: QualifiedAce.OpaqueLength
  type: Property
  assemblies:
  - System.Security.AccessControl
  - mscorlib
  namespace: System.Security.AccessControl
  summary: Gets the length of the opaque callback data associated with this <xref href="System.Security.AccessControl.QualifiedAce"></xref> object. This property is valid only for callback Access Control Entries (ACEs).
  syntax:
    content: public int OpaqueLength { get; }
    return:
      type: System.Int32
      description: The length of the opaque callback data.
  overload: System.Security.AccessControl.QualifiedAce.OpaqueLength*
  exceptions: []
  version:
  - netcore-1.0
  - netcore-1.1
  - netcore-2.0
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  - xamarinandroid-7.1
  - xamarinios-10.8
  - xamarinmac-3.0
  monikers:
  - netcore-1.0
  - netcore-1.1
  - netcore-2.0
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  - xamarinandroid-7.1
  - xamarinios-10.8
  - xamarinmac-3.0
  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Security.AccessControl/QualifiedAce.xml
  ms.technology:
  - dotnet-standard
  author: mairaw
  ms.author: mairaw
  manager: wpickett
- uid: System.Security.AccessControl.QualifiedAce.SetOpaque(System.Byte[])
  commentId: M:System.Security.AccessControl.QualifiedAce.SetOpaque(System.Byte[])
  id: SetOpaque(System.Byte[])
  parent: System.Security.AccessControl.QualifiedAce
  langs:
  - csharp
  name: SetOpaque(Byte[])
  nameWithType: QualifiedAce.SetOpaque(Byte[])
  fullName: QualifiedAce.SetOpaque(Byte[])
  type: Method
  assemblies:
  - System.Security.AccessControl
  - mscorlib
  namespace: System.Security.AccessControl
  summary: Sets the opaque callback data associated with this <xref href="System.Security.AccessControl.QualifiedAce"></xref> object.
  remarks: Opaque callback data is present only in callback Access Control Entries (ACEs).
  syntax:
    content: public void SetOpaque (byte[] opaque);
    parameters:
    - id: opaque
      type: System.Byte[]
      description: An array of byte values that represents the opaque callback data for this <xref href="System.Security.AccessControl.QualifiedAce"></xref> object.
  overload: System.Security.AccessControl.QualifiedAce.SetOpaque*
  exceptions: []
  version:
  - netcore-1.0
  - netcore-1.1
  - netcore-2.0
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  - xamarinandroid-7.1
  - xamarinios-10.8
  - xamarinmac-3.0
  monikers:
  - netcore-1.0
  - netcore-1.1
  - netcore-2.0
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  - xamarinandroid-7.1
  - xamarinios-10.8
  - xamarinmac-3.0
  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Security.AccessControl/QualifiedAce.xml
  ms.technology:
  - dotnet-standard
  author: mairaw
  ms.author: mairaw
  manager: wpickett
references:
- uid: System.Security.AccessControl.KnownAce
  parent: System.Security.AccessControl
  isExternal: false
  name: KnownAce
  nameWithType: KnownAce
  fullName: System.Security.AccessControl.KnownAce
- uid: System.Security.AccessControl.QualifiedAce.AceQualifier
  parent: System.Security.AccessControl.QualifiedAce
  isExternal: false
  name: AceQualifier
  nameWithType: QualifiedAce.AceQualifier
  fullName: QualifiedAce.AceQualifier
- uid: System.Security.AccessControl.AceQualifier
  parent: System.Security.AccessControl
  isExternal: false
  name: AceQualifier
  nameWithType: AceQualifier
  fullName: System.Security.AccessControl.AceQualifier
- uid: System.Security.AccessControl.QualifiedAce.GetOpaque
  parent: System.Security.AccessControl.QualifiedAce
  isExternal: false
  name: GetOpaque()
  nameWithType: QualifiedAce.GetOpaque()
  fullName: QualifiedAce.GetOpaque()
- uid: System.Byte
  name: Byte
  nameWithType: Byte
  fullName: System.Byte
- uid: System.Byte[]
  parent: System
  isExternal: false
  name: Byte[]
  nameWithType: Byte[]
  fullName: System.Byte[]
  spec.csharp:
  - uid: System.Byte
    name: Byte
    nameWithType: Byte
    fullName: System.Byte
  - name: '[]'
    nameWithType: '[]'
    fullName: '[]'
- uid: System.Security.AccessControl.QualifiedAce.IsCallback
  parent: System.Security.AccessControl.QualifiedAce
  isExternal: false
  name: IsCallback
  nameWithType: QualifiedAce.IsCallback
  fullName: QualifiedAce.IsCallback
- uid: System.Boolean
  parent: System
  isExternal: false
  name: Boolean
  nameWithType: Boolean
  fullName: System.Boolean
- uid: System.Security.AccessControl.QualifiedAce.OpaqueLength
  parent: System.Security.AccessControl.QualifiedAce
  isExternal: false
  name: OpaqueLength
  nameWithType: QualifiedAce.OpaqueLength
  fullName: QualifiedAce.OpaqueLength
- uid: System.Int32
  parent: System
  isExternal: false
  name: Int32
  nameWithType: Int32
  fullName: System.Int32
- uid: System.Security.AccessControl.QualifiedAce.SetOpaque(System.Byte[])
  parent: System.Security.AccessControl.QualifiedAce
  isExternal: false
  name: SetOpaque(Byte[])
  nameWithType: QualifiedAce.SetOpaque(Byte[])
  fullName: QualifiedAce.SetOpaque(Byte[])
- uid: System.Security.AccessControl.QualifiedAce.AceQualifier*
  parent: System.Security.AccessControl.QualifiedAce
  isExternal: false
  name: AceQualifier
  nameWithType: QualifiedAce.AceQualifier
  fullName: QualifiedAce.AceQualifier
  monikers:
  - netcore-1.0
  - netcore-1.1
  - netcore-2.0
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  - xamarinandroid-7.1
  - xamarinios-10.8
  - xamarinmac-3.0
  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Security.AccessControl/QualifiedAce.xml
- uid: System.Security.AccessControl.QualifiedAce.GetOpaque*
  parent: System.Security.AccessControl.QualifiedAce
  isExternal: false
  name: GetOpaque
  nameWithType: QualifiedAce.GetOpaque
  fullName: QualifiedAce.GetOpaque
  monikers:
  - netcore-1.0
  - netcore-1.1
  - netcore-2.0
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  - xamarinandroid-7.1
  - xamarinios-10.8
  - xamarinmac-3.0
  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Security.AccessControl/QualifiedAce.xml
- uid: System.Security.AccessControl.QualifiedAce.IsCallback*
  parent: System.Security.AccessControl.QualifiedAce
  isExternal: false
  name: IsCallback
  nameWithType: QualifiedAce.IsCallback
  fullName: QualifiedAce.IsCallback
  monikers:
  - netcore-1.0
  - netcore-1.1
  - netcore-2.0
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  - xamarinandroid-7.1
  - xamarinios-10.8
  - xamarinmac-3.0
  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Security.AccessControl/QualifiedAce.xml
- uid: System.Security.AccessControl.QualifiedAce.OpaqueLength*
  parent: System.Security.AccessControl.QualifiedAce
  isExternal: false
  name: OpaqueLength
  nameWithType: QualifiedAce.OpaqueLength
  fullName: QualifiedAce.OpaqueLength
  monikers:
  - netcore-1.0
  - netcore-1.1
  - netcore-2.0
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  - xamarinandroid-7.1
  - xamarinios-10.8
  - xamarinmac-3.0
  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Security.AccessControl/QualifiedAce.xml
- uid: System.Security.AccessControl.QualifiedAce.SetOpaque*
  parent: System.Security.AccessControl.QualifiedAce
  isExternal: false
  name: SetOpaque
  nameWithType: QualifiedAce.SetOpaque
  fullName: QualifiedAce.SetOpaque
  monikers:
  - netcore-1.0
  - netcore-1.1
  - netcore-2.0
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  - xamarinandroid-7.1
  - xamarinios-10.8
  - xamarinmac-3.0
  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Security.AccessControl/QualifiedAce.xml
- uid: System.Security.AccessControl.GenericAce.Equals(System.Object)
  parent: System.Security.AccessControl.GenericAce
  isExternal: false
  name: Equals(Object)
  nameWithType: GenericAce.Equals(Object)
  fullName: GenericAce.Equals(Object)
- uid: System.Object.Equals(System.Object,System.Object)
  parent: System.Object
  isExternal: false
  name: Equals(Object, Object)
  nameWithType: Object.Equals(Object, Object)
  fullName: Object.Equals(Object, Object)
- uid: System.Security.AccessControl.GenericAce.GetHashCode
  parent: System.Security.AccessControl.GenericAce
  isExternal: false
  name: GetHashCode()
  nameWithType: GenericAce.GetHashCode()
  fullName: GenericAce.GetHashCode()
- uid: System.Object.GetType
  parent: System.Object
  isExternal: false
  name: GetType()
  nameWithType: Object.GetType()
  fullName: Object.GetType()
- uid: System.Object.MemberwiseClone
  parent: System.Object
  isExternal: false
  name: MemberwiseClone()
  nameWithType: Object.MemberwiseClone()
  fullName: Object.MemberwiseClone()
- uid: System.Object.ReferenceEquals(System.Object,System.Object)
  parent: System.Object
  isExternal: false
  name: ReferenceEquals(Object, Object)
  nameWithType: Object.ReferenceEquals(Object, Object)
  fullName: Object.ReferenceEquals(Object, Object)
- uid: System.Object.ToString
  parent: System.Object
  isExternal: false
  name: ToString()
  nameWithType: Object.ToString()
  fullName: Object.ToString()
- uid: System.Security.AccessControl.GenericAce.AceFlags
  parent: System.Security.AccessControl.GenericAce
  isExternal: false
  name: AceFlags
  nameWithType: GenericAce.AceFlags
  fullName: GenericAce.AceFlags
- uid: System.Security.AccessControl.GenericAce.AceType
  parent: System.Security.AccessControl.GenericAce
  isExternal: false
  name: AceType
  nameWithType: GenericAce.AceType
  fullName: GenericAce.AceType
- uid: System.Security.AccessControl.GenericAce.AuditFlags
  parent: System.Security.AccessControl.GenericAce
  isExternal: false
  name: AuditFlags
  nameWithType: GenericAce.AuditFlags
  fullName: GenericAce.AuditFlags
- uid: System.Security.AccessControl.GenericAce.BinaryLength
  parent: System.Security.AccessControl.GenericAce
  isExternal: false
  name: BinaryLength
  nameWithType: GenericAce.BinaryLength
  fullName: GenericAce.BinaryLength
- uid: System.Security.AccessControl.GenericAce.Copy
  parent: System.Security.AccessControl.GenericAce
  isExternal: false
  name: Copy()
  nameWithType: GenericAce.Copy()
  fullName: GenericAce.Copy()
- uid: System.Security.AccessControl.GenericAce.CreateFromBinaryForm(System.Byte[],System.Int32)
  parent: System.Security.AccessControl.GenericAce
  isExternal: false
  name: CreateFromBinaryForm(Byte[], Int32)
  nameWithType: GenericAce.CreateFromBinaryForm(Byte[], Int32)
  fullName: GenericAce.CreateFromBinaryForm(Byte[], Int32)
- uid: System.Security.AccessControl.GenericAce.GetBinaryForm(System.Byte[],System.Int32)
  parent: System.Security.AccessControl.GenericAce
  isExternal: false
  name: GetBinaryForm(Byte[], Int32)
  nameWithType: GenericAce.GetBinaryForm(Byte[], Int32)
  fullName: GenericAce.GetBinaryForm(Byte[], Int32)
- uid: System.Security.AccessControl.GenericAce.InheritanceFlags
  parent: System.Security.AccessControl.GenericAce
  isExternal: false
  name: InheritanceFlags
  nameWithType: GenericAce.InheritanceFlags
  fullName: GenericAce.InheritanceFlags
- uid: System.Security.AccessControl.GenericAce.IsInherited
  parent: System.Security.AccessControl.GenericAce
  isExternal: false
  name: IsInherited
  nameWithType: GenericAce.IsInherited
  fullName: GenericAce.IsInherited
- uid: System.Security.AccessControl.GenericAce.op_Equality(System.Security.AccessControl.GenericAce,System.Security.AccessControl.GenericAce)
  parent: System.Security.AccessControl.GenericAce
  isExternal: false
  name: op_Equality(GenericAce, GenericAce)
  nameWithType: GenericAce.op_Equality(GenericAce, GenericAce)
  fullName: GenericAce.op_Equality(GenericAce, GenericAce)
- uid: System.Security.AccessControl.GenericAce.op_Inequality(System.Security.AccessControl.GenericAce,System.Security.AccessControl.GenericAce)
  parent: System.Security.AccessControl.GenericAce
  isExternal: false
  name: op_Inequality(GenericAce, GenericAce)
  nameWithType: GenericAce.op_Inequality(GenericAce, GenericAce)
  fullName: GenericAce.op_Inequality(GenericAce, GenericAce)
- uid: System.Security.AccessControl.GenericAce.PropagationFlags
  parent: System.Security.AccessControl.GenericAce
  isExternal: false
  name: PropagationFlags
  nameWithType: GenericAce.PropagationFlags
  fullName: GenericAce.PropagationFlags
- uid: System.Security.AccessControl.KnownAce.AccessMask
  parent: System.Security.AccessControl.KnownAce
  isExternal: false
  name: AccessMask
  nameWithType: KnownAce.AccessMask
  fullName: KnownAce.AccessMask
- uid: System.Security.AccessControl.KnownAce.SecurityIdentifier
  parent: System.Security.AccessControl.KnownAce
  isExternal: false
  name: SecurityIdentifier
  nameWithType: KnownAce.SecurityIdentifier
  fullName: KnownAce.SecurityIdentifier
