### YamlMime:ManagedReference
items:
- uid: System.ServiceModel.Dispatcher.IOperationInvoker
  commentId: T:System.ServiceModel.Dispatcher.IOperationInvoker
  id: IOperationInvoker
  children:
  - System.ServiceModel.Dispatcher.IOperationInvoker.AllocateInputs
  - System.ServiceModel.Dispatcher.IOperationInvoker.Invoke(System.Object,System.Object[],System.Object[]@)
  - System.ServiceModel.Dispatcher.IOperationInvoker.InvokeBegin(System.Object,System.Object[],System.AsyncCallback,System.Object)
  - System.ServiceModel.Dispatcher.IOperationInvoker.InvokeEnd(System.Object,System.Object[]@,System.IAsyncResult)
  - System.ServiceModel.Dispatcher.IOperationInvoker.IsSynchronous
  langs:
  - csharp
  name: IOperationInvoker
  nameWithType: IOperationInvoker
  fullName: System.ServiceModel.Dispatcher.IOperationInvoker
  type: Interface
  assemblies:
  - System.ServiceModel
  namespace: System.ServiceModel.Dispatcher
  summary: Declares methods that take an object and an array of parameters extracted from a message, invoke a method on that object with those parameters, and return the method's return value and output parameters.
  remarks: Implement the <xref:System.ServiceModel.Dispatcher.IOperationInvoker> interface to control the conversion from an untyped object and array of parameters to a strongly-typed method call on that object. It has a synchronous <xref:System.ServiceModel.Dispatcher.IOperationInvoker.Invoke%2A> method, which takes an instance and set of inputs of type object and returns an object and a set of outputs of type object. It also has a <xref:System.ServiceModel.Dispatcher.IOperationInvoker.InvokeBegin%2A> and <xref:System.ServiceModel.Dispatcher.IOperationInvoker.InvokeEnd%2A> variant.  The <xref:System.ServiceModel.Dispatcher.IOperationInvoker.IsSynchronous%2A> property specifies whether the synchronous or asynchronous method should be used.
  syntax:
    content: public interface IOperationInvoker
  implements: []
  version:
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  - xamarinmac-3.0
  monikers:
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  - xamarinmac-3.0
  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.ServiceModel.Dispatcher/IOperationInvoker.xml
  ms.technology:
  - dotnet-standard
  author: Erikre
  ms.author: erikre
  manager: erikre
- uid: System.ServiceModel.Dispatcher.IOperationInvoker.AllocateInputs
  commentId: M:System.ServiceModel.Dispatcher.IOperationInvoker.AllocateInputs
  id: AllocateInputs
  parent: System.ServiceModel.Dispatcher.IOperationInvoker
  langs:
  - csharp
  name: AllocateInputs()
  nameWithType: IOperationInvoker.AllocateInputs()
  fullName: IOperationInvoker.AllocateInputs()
  type: Method
  assemblies:
  - System.ServiceModel
  namespace: System.ServiceModel.Dispatcher
  summary: Returns an <xref href="System.Array"></xref> of parameter objects.
  remarks: Implement this to return an array of parameters for the operation. This array is filled by the formatter and passed back to the invoker when <xref:System.ServiceModel.Dispatcher.IOperationInvoker.Invoke%2A> is called.
  syntax:
    content: public object[] AllocateInputs ();
    parameters: []
    return:
      type: System.Object[]
      description: The parameters that are to be used as arguments to the operation.
  overload: System.ServiceModel.Dispatcher.IOperationInvoker.AllocateInputs*
  exceptions: []
  version:
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  - xamarinmac-3.0
  monikers:
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  - xamarinmac-3.0
  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.ServiceModel.Dispatcher/IOperationInvoker.xml
  ms.technology:
  - dotnet-standard
  author: Erikre
  ms.author: erikre
  manager: erikre
- uid: System.ServiceModel.Dispatcher.IOperationInvoker.Invoke(System.Object,System.Object[],System.Object[]@)
  commentId: M:System.ServiceModel.Dispatcher.IOperationInvoker.Invoke(System.Object,System.Object[],System.Object[]@)
  id: Invoke(System.Object,System.Object[],System.Object[]@)
  parent: System.ServiceModel.Dispatcher.IOperationInvoker
  langs:
  - csharp
  name: Invoke(Object, Object[], Object[])
  nameWithType: IOperationInvoker.Invoke(Object, Object[], Object[])
  fullName: IOperationInvoker.Invoke(Object, Object[], Object[])
  type: Method
  assemblies:
  - System.ServiceModel
  namespace: System.ServiceModel.Dispatcher
  summary: Returns an object and a set of output objects from an instance and set of input objects.
  syntax:
    content: public object Invoke (object instance, object[] inputs, out object[] outputs);
    parameters:
    - id: instance
      type: System.Object
      description: The object to be invoked.
    - id: inputs
      type: System.Object[]
      description: The inputs to the method.
    - id: outputs
      type: System.Object[]
      description: The outputs from the method.
    return:
      type: System.Object
      description: The return value.
  overload: System.ServiceModel.Dispatcher.IOperationInvoker.Invoke*
  exceptions: []
  version:
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  - xamarinmac-3.0
  monikers:
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  - xamarinmac-3.0
  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.ServiceModel.Dispatcher/IOperationInvoker.xml
  ms.technology:
  - dotnet-standard
  author: Erikre
  ms.author: erikre
  manager: erikre
- uid: System.ServiceModel.Dispatcher.IOperationInvoker.InvokeBegin(System.Object,System.Object[],System.AsyncCallback,System.Object)
  commentId: M:System.ServiceModel.Dispatcher.IOperationInvoker.InvokeBegin(System.Object,System.Object[],System.AsyncCallback,System.Object)
  id: InvokeBegin(System.Object,System.Object[],System.AsyncCallback,System.Object)
  parent: System.ServiceModel.Dispatcher.IOperationInvoker
  langs:
  - csharp
  name: InvokeBegin(Object, Object[], AsyncCallback, Object)
  nameWithType: IOperationInvoker.InvokeBegin(Object, Object[], AsyncCallback, Object)
  fullName: IOperationInvoker.InvokeBegin(Object, Object[], AsyncCallback, Object)
  type: Method
  assemblies:
  - System.ServiceModel
  namespace: System.ServiceModel.Dispatcher
  summary: An asynchronous implementation of the <xref href="System.ServiceModel.Dispatcher.IOperationInvoker.Invoke(System.Object,System.Object[],System.Object[]@)"></xref> method.
  syntax:
    content: public IAsyncResult InvokeBegin (object instance, object[] inputs, AsyncCallback callback, object state);
    parameters:
    - id: instance
      type: System.Object
      description: The object to be invoked.
    - id: inputs
      type: System.Object[]
      description: The inputs to the method.
    - id: callback
      type: System.AsyncCallback
      description: The asynchronous callback object.
    - id: state
      type: System.Object
      description: Associated state data.
    return:
      type: System.IAsyncResult
      description: A <xref href="System.IAsyncResult"></xref> used to complete the asynchronous call.
  overload: System.ServiceModel.Dispatcher.IOperationInvoker.InvokeBegin*
  exceptions: []
  version:
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  - xamarinmac-3.0
  monikers:
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  - xamarinmac-3.0
  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.ServiceModel.Dispatcher/IOperationInvoker.xml
  ms.technology:
  - dotnet-standard
  author: Erikre
  ms.author: erikre
  manager: erikre
- uid: System.ServiceModel.Dispatcher.IOperationInvoker.InvokeEnd(System.Object,System.Object[]@,System.IAsyncResult)
  commentId: M:System.ServiceModel.Dispatcher.IOperationInvoker.InvokeEnd(System.Object,System.Object[]@,System.IAsyncResult)
  id: InvokeEnd(System.Object,System.Object[]@,System.IAsyncResult)
  parent: System.ServiceModel.Dispatcher.IOperationInvoker
  langs:
  - csharp
  name: InvokeEnd(Object, Object[], IAsyncResult)
  nameWithType: IOperationInvoker.InvokeEnd(Object, Object[], IAsyncResult)
  fullName: IOperationInvoker.InvokeEnd(Object, Object[], IAsyncResult)
  type: Method
  assemblies:
  - System.ServiceModel
  namespace: System.ServiceModel.Dispatcher
  summary: The asynchronous end method.
  syntax:
    content: public object InvokeEnd (object instance, out object[] outputs, IAsyncResult result);
    parameters:
    - id: instance
      type: System.Object
      description: The object invoked.
    - id: outputs
      type: System.Object[]
      description: The outputs from the method.
    - id: result
      type: System.IAsyncResult
      description: The <xref href="System.IAsyncResult"></xref> object.
    return:
      type: System.Object
      description: The return value.
  overload: System.ServiceModel.Dispatcher.IOperationInvoker.InvokeEnd*
  exceptions: []
  version:
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  - xamarinmac-3.0
  monikers:
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  - xamarinmac-3.0
  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.ServiceModel.Dispatcher/IOperationInvoker.xml
  ms.technology:
  - dotnet-standard
  author: Erikre
  ms.author: erikre
  manager: erikre
- uid: System.ServiceModel.Dispatcher.IOperationInvoker.IsSynchronous
  commentId: P:System.ServiceModel.Dispatcher.IOperationInvoker.IsSynchronous
  id: IsSynchronous
  parent: System.ServiceModel.Dispatcher.IOperationInvoker
  langs:
  - csharp
  name: IsSynchronous
  nameWithType: IOperationInvoker.IsSynchronous
  fullName: IOperationInvoker.IsSynchronous
  type: Property
  assemblies:
  - System.ServiceModel
  namespace: System.ServiceModel.Dispatcher
  summary: Gets a value that specifies whether the <xref href="System.ServiceModel.Dispatcher.IOperationInvoker.Invoke(System.Object,System.Object[],System.Object[]@)"></xref> or <xref href="System.ServiceModel.Dispatcher.IOperationInvoker.InvokeBegin(System.Object,System.Object[],System.AsyncCallback,System.Object)"></xref> method is called by the dispatcher.
  remarks: The default invoker dispatches messages to the synchronous operation by default. This value is cached by the dispatcher and therefore should not change over the lifetime of the object that implements <xref:System.ServiceModel.Dispatcher.IOperationInvoker>.
  syntax:
    content: public bool IsSynchronous { get; }
    return:
      type: System.Boolean
      description: '`true` if the dispatcher invokes the synchronous operation; otherwise, `false`.'
  overload: System.ServiceModel.Dispatcher.IOperationInvoker.IsSynchronous*
  exceptions: []
  version:
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  - xamarinmac-3.0
  monikers:
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  - xamarinmac-3.0
  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.ServiceModel.Dispatcher/IOperationInvoker.xml
  ms.technology:
  - dotnet-standard
  author: Erikre
  ms.author: erikre
  manager: erikre
references:
- uid: System.ServiceModel.Dispatcher.IOperationInvoker.AllocateInputs
  parent: System.ServiceModel.Dispatcher.IOperationInvoker
  isExternal: false
  name: AllocateInputs()
  nameWithType: IOperationInvoker.AllocateInputs()
  fullName: IOperationInvoker.AllocateInputs()
- uid: System.Object
  name: Object
  nameWithType: Object
  fullName: System.Object
- uid: System.Object[]
  parent: System
  isExternal: false
  name: Object[]
  nameWithType: Object[]
  fullName: System.Object[]
  spec.csharp:
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
  - name: '[]'
    nameWithType: '[]'
    fullName: '[]'
- uid: System.ServiceModel.Dispatcher.IOperationInvoker.Invoke(System.Object,System.Object[],System.Object[]@)
  parent: System.ServiceModel.Dispatcher.IOperationInvoker
  isExternal: false
  name: Invoke(Object, Object[], Object[])
  nameWithType: IOperationInvoker.Invoke(Object, Object[], Object[])
  fullName: IOperationInvoker.Invoke(Object, Object[], Object[])
- uid: System.ServiceModel.Dispatcher.IOperationInvoker.InvokeBegin(System.Object,System.Object[],System.AsyncCallback,System.Object)
  parent: System.ServiceModel.Dispatcher.IOperationInvoker
  isExternal: false
  name: InvokeBegin(Object, Object[], AsyncCallback, Object)
  nameWithType: IOperationInvoker.InvokeBegin(Object, Object[], AsyncCallback, Object)
  fullName: IOperationInvoker.InvokeBegin(Object, Object[], AsyncCallback, Object)
- uid: System.IAsyncResult
  parent: System
  isExternal: false
  name: IAsyncResult
  nameWithType: IAsyncResult
  fullName: System.IAsyncResult
- uid: System.AsyncCallback
  parent: System
  isExternal: false
  name: AsyncCallback
  nameWithType: AsyncCallback
  fullName: System.AsyncCallback
- uid: System.ServiceModel.Dispatcher.IOperationInvoker.InvokeEnd(System.Object,System.Object[]@,System.IAsyncResult)
  parent: System.ServiceModel.Dispatcher.IOperationInvoker
  isExternal: false
  name: InvokeEnd(Object, Object[], IAsyncResult)
  nameWithType: IOperationInvoker.InvokeEnd(Object, Object[], IAsyncResult)
  fullName: IOperationInvoker.InvokeEnd(Object, Object[], IAsyncResult)
- uid: System.ServiceModel.Dispatcher.IOperationInvoker.IsSynchronous
  parent: System.ServiceModel.Dispatcher.IOperationInvoker
  isExternal: false
  name: IsSynchronous
  nameWithType: IOperationInvoker.IsSynchronous
  fullName: IOperationInvoker.IsSynchronous
- uid: System.Boolean
  parent: System
  isExternal: false
  name: Boolean
  nameWithType: Boolean
  fullName: System.Boolean
- uid: System.ServiceModel.Dispatcher.IOperationInvoker.AllocateInputs*
  parent: System.ServiceModel.Dispatcher.IOperationInvoker
  isExternal: false
  name: AllocateInputs
  nameWithType: IOperationInvoker.AllocateInputs
  fullName: IOperationInvoker.AllocateInputs
  monikers:
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  - xamarinmac-3.0
  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.ServiceModel.Dispatcher/IOperationInvoker.xml
- uid: System.ServiceModel.Dispatcher.IOperationInvoker.Invoke*
  parent: System.ServiceModel.Dispatcher.IOperationInvoker
  isExternal: false
  name: Invoke
  nameWithType: IOperationInvoker.Invoke
  fullName: IOperationInvoker.Invoke
  monikers:
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  - xamarinmac-3.0
  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.ServiceModel.Dispatcher/IOperationInvoker.xml
- uid: System.ServiceModel.Dispatcher.IOperationInvoker.InvokeBegin*
  parent: System.ServiceModel.Dispatcher.IOperationInvoker
  isExternal: false
  name: InvokeBegin
  nameWithType: IOperationInvoker.InvokeBegin
  fullName: IOperationInvoker.InvokeBegin
  monikers:
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  - xamarinmac-3.0
  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.ServiceModel.Dispatcher/IOperationInvoker.xml
- uid: System.ServiceModel.Dispatcher.IOperationInvoker.InvokeEnd*
  parent: System.ServiceModel.Dispatcher.IOperationInvoker
  isExternal: false
  name: InvokeEnd
  nameWithType: IOperationInvoker.InvokeEnd
  fullName: IOperationInvoker.InvokeEnd
  monikers:
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  - xamarinmac-3.0
  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.ServiceModel.Dispatcher/IOperationInvoker.xml
- uid: System.ServiceModel.Dispatcher.IOperationInvoker.IsSynchronous*
  parent: System.ServiceModel.Dispatcher.IOperationInvoker
  isExternal: false
  name: IsSynchronous
  nameWithType: IOperationInvoker.IsSynchronous
  fullName: IOperationInvoker.IsSynchronous
  monikers:
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  - xamarinmac-3.0
  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.ServiceModel.Dispatcher/IOperationInvoker.xml
