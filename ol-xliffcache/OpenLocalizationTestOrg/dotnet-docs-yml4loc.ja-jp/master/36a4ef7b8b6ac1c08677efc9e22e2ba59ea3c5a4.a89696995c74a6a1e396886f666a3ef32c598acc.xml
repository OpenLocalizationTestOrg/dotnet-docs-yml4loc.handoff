{"nodes":[{"content":"Represents a collection of the <xref href=\"System.String\"></xref> keys of a collection.","nodes":[{"pos":[0,87],"content":"Represents a collection of the <ph id=\"ph1\">&lt;xref href=\"System.String\"&gt;&lt;/xref&gt;</ph> keys of a collection.","source":"Represents a collection of the <xref href=\"System.String\"></xref> keys of a collection."}],"pos":[1343,1431],"yaml":true},{"content":"Gets the number of keys in the <xref href=\"System.Collections.Specialized.NameObjectCollectionBase.KeysCollection\"></xref>.","nodes":[{"pos":[0,123],"content":"Gets the number of keys in the <ph id=\"ph1\">&lt;xref href=\"System.Collections.Specialized.NameObjectCollectionBase.KeysCollection\"&gt;&lt;/xref&gt;</ph>.","source":"Gets the number of keys in the <xref href=\"System.Collections.Specialized.NameObjectCollectionBase.KeysCollection\"></xref>."}],"pos":[3621,3745],"yaml":true},{"content":"Retrieving the value of this property is an O(1) operation.","nodes":[{"pos":[0,59],"content":"Retrieving the value of this property is an O(1) operation.","nodes":[{"content":"Retrieving the value of this property is an O(1) operation.","pos":[0,59]}]}],"pos":[3756,3816],"yaml":true,"extradata":"MT"},{"content":"The number of keys in the <xref href=\"System.Collections.Specialized.NameObjectCollectionBase.KeysCollection\"></xref>.","nodes":[{"pos":[0,118],"content":"The number of keys in the <ph id=\"ph1\">&lt;xref href=\"System.Collections.Specialized.NameObjectCollectionBase.KeysCollection\"&gt;&lt;/xref&gt;</ph>.","source":"The number of keys in the <xref href=\"System.Collections.Specialized.NameObjectCollectionBase.KeysCollection\"></xref>."}],"pos":[3921,4040],"yaml":true},{"content":"Gets the key at the specified index of the collection.","nodes":[{"pos":[0,54],"content":"Gets the key at the specified index of the collection.","nodes":[{"content":"Gets the key at the specified index of the collection.","pos":[0,54]}]}],"pos":[5595,5650],"yaml":true},{"content":"This method is an O(1) operation.","nodes":[{"pos":[0,33],"content":"This method is an O(1) operation.","nodes":[{"content":"This method is an O(1) operation.","pos":[0,33]}]}],"pos":[5661,5695],"yaml":true,"extradata":"MT"},{"content":"The zero-based index of the key to get from the collection.","nodes":[{"pos":[0,59],"content":"The zero-based index of the key to get from the collection.","nodes":[{"content":"The zero-based index of the key to get from the collection.","pos":[0,59]}]}],"pos":[5833,5893],"yaml":true},{"content":"A <xref href=\"System.String\"></xref> that contains the key at the specified index of the collection.","nodes":[{"pos":[0,100],"content":"A <ph id=\"ph1\">&lt;xref href=\"System.String\"&gt;&lt;/xref&gt;</ph> that contains the key at the specified index of the collection.","source":"A <xref href=\"System.String\"></xref> that contains the key at the specified index of the collection."}],"pos":[5950,6051],"yaml":true},{"content":"<code>index</code> is outside the valid range of indexes for the collection.","nodes":[{"pos":[0,76],"content":"<ph id=\"ph1\">&lt;code&gt;index&lt;/code&gt;</ph> is outside the valid range of indexes for the collection.","source":"<code>index</code> is outside the valid range of indexes for the collection."}],"pos":[6267,6344],"yaml":true},{"content":"Returns an enumerator that iterates through the <xref href=\"System.Collections.Specialized.NameObjectCollectionBase.KeysCollection\"></xref>.","nodes":[{"pos":[0,140],"content":"Returns an enumerator that iterates through the <ph id=\"ph1\">&lt;xref href=\"System.Collections.Specialized.NameObjectCollectionBase.KeysCollection\"&gt;&lt;/xref&gt;</ph>.","source":"Returns an enumerator that iterates through the <xref href=\"System.Collections.Specialized.NameObjectCollectionBase.KeysCollection\"></xref>."}],"pos":[7795,7936],"yaml":true},{"content":"This enumerator returns the keys of the collection as strings.  \n  \n The `foreach` statement of the C# language (`for each` in Visual Basic) hides the complexity of the enumerators.  Therefore, using `foreach` is recommended, instead of directly manipulating the enumerator.  \n  \n Enumerators can be used to read the data in the collection, but they cannot be used to modify the underlying collection.  \n  \n Initially, the enumerator is positioned before the first element in the collection. <xref:System.Collections.IEnumerator.Reset%2A> also brings the enumerator back to this position.  At this position, <xref:System.Collections.IEnumerator.Current%2A> is undefined. Therefore, you must call <xref:System.Collections.IEnumerator.MoveNext%2A> to advance the enumerator to the first element of the collection before reading the value of <xref:System.Collections.IEnumerator.Current%2A>.  \n  \n <xref:System.Collections.IEnumerator.Current%2A> returns the same object until either <xref:System.Collections.IEnumerator.MoveNext%2A> or <xref:System.Collections.IEnumerator.Reset%2A> is called. <xref:System.Collections.IEnumerator.MoveNext%2A> sets <xref:System.Collections.IEnumerator.Current%2A> to the next element.  \n  \n If <xref:System.Collections.IEnumerator.MoveNext%2A> passes the end of the collection, the enumerator is positioned after the last element in the collection and <xref:System.Collections.IEnumerator.MoveNext%2A> returns `false`. When the enumerator is at this position, subsequent calls to <xref:System.Collections.IEnumerator.MoveNext%2A> also return `false`. If the last call to <xref:System.Collections.IEnumerator.MoveNext%2A> returned `false`, <xref:System.Collections.IEnumerator.Current%2A> is undefined. To set <xref:System.Collections.IEnumerator.Current%2A> to the first element of the collection again, you can call <xref:System.Collections.IEnumerator.Reset%2A> followed by <xref:System.Collections.IEnumerator.MoveNext%2A>.  \n  \n An enumerator remains valid as long as the collection remains unchanged. If changes are made to the collection, such as adding, modifying, or deleting elements, the enumerator is irrecoverably invalidated and its behavior is undefined.  \n  \n The enumerator does not have exclusive access to the collection; therefore, enumerating through a collection is intrinsically not a thread-safe procedure.  To guarantee thread safety during enumeration, you can lock the collection during the entire enumeration.  To allow the collection to be accessed by multiple threads for reading and writing, you must implement your own synchronization.  \n  \n This method is an O(1) operation.","nodes":[{"pos":[0,62],"content":"This enumerator returns the keys of the collection as strings.","nodes":[{"content":"This enumerator returns the keys of the collection as strings.","pos":[0,62]}]},{"pos":[69,274],"content":"The `foreach` statement of the C# language (`for each` in Visual Basic) hides the complexity of the enumerators.  Therefore, using `foreach` is recommended, instead of directly manipulating the enumerator.","nodes":[{"content":"The <ph id=\"ph1\">`foreach`</ph> statement of the C# language (<ph id=\"ph2\">`for each`</ph> in Visual Basic) hides the complexity of the enumerators.","pos":[0,112],"source":"The `foreach` statement of the C# language (`for each` in Visual Basic) hides the complexity of the enumerators."},{"content":"Therefore, using <ph id=\"ph1\">`foreach`</ph> is recommended, instead of directly manipulating the enumerator.","pos":[114,205],"source":"  Therefore, using `foreach` is recommended, instead of directly manipulating the enumerator."}]},{"pos":[281,401],"content":"Enumerators can be used to read the data in the collection, but they cannot be used to modify the underlying collection.","nodes":[{"content":"Enumerators can be used to read the data in the collection, but they cannot be used to modify the underlying collection.","pos":[0,120]}]},{"pos":[408,888],"content":"Initially, the enumerator is positioned before the first element in the collection. <xref:System.Collections.IEnumerator.Reset%2A> also brings the enumerator back to this position.  At this position, <xref:System.Collections.IEnumerator.Current%2A> is undefined. Therefore, you must call <xref:System.Collections.IEnumerator.MoveNext%2A> to advance the enumerator to the first element of the collection before reading the value of <xref:System.Collections.IEnumerator.Current%2A>.","nodes":[{"content":"Initially, the enumerator is positioned before the first element in the collection. <xref:System.Collections.IEnumerator.Reset%2A> also brings the enumerator back to this position.  At this position, <xref:System.Collections.IEnumerator.Current%2A> is undefined. Therefore, you must call <xref:System.Collections.IEnumerator.MoveNext%2A> to advance the enumerator to the first element of the collection before reading the value of <xref:System.Collections.IEnumerator.Current%2A>.","pos":[0,480],"nodes":[{"content":"Initially, the enumerator is positioned before the first element in the collection.","pos":[0,83]},{"content":"<ph id=\"ph1\">&lt;xref:System.Collections.IEnumerator.Reset%2A&gt;</ph> also brings the enumerator back to this position.","pos":[84,180],"source":" <xref:System.Collections.IEnumerator.Reset%2A> also brings the enumerator back to this position."},{"content":"At this position, <ph id=\"ph1\">&lt;xref:System.Collections.IEnumerator.Current%2A&gt;</ph> is undefined.","pos":[182,262],"source":"  At this position, <xref:System.Collections.IEnumerator.Current%2A> is undefined."},{"content":"Therefore, you must call <ph id=\"ph1\">&lt;xref:System.Collections.IEnumerator.MoveNext%2A&gt;</ph> to advance the enumerator to the first element of the collection before reading the value of <ph id=\"ph2\">&lt;xref:System.Collections.IEnumerator.Current%2A&gt;</ph>.","pos":[263,480],"source":" Therefore, you must call <xref:System.Collections.IEnumerator.MoveNext%2A> to advance the enumerator to the first element of the collection before reading the value of <xref:System.Collections.IEnumerator.Current%2A>."}]}]},{"pos":[895,1216],"content":"<xref:System.Collections.IEnumerator.Current%2A> returns the same object until either <xref:System.Collections.IEnumerator.MoveNext%2A> or <xref:System.Collections.IEnumerator.Reset%2A> is called. <xref:System.Collections.IEnumerator.MoveNext%2A> sets <xref:System.Collections.IEnumerator.Current%2A> to the next element.","nodes":[{"content":"<xref:System.Collections.IEnumerator.Current%2A> returns the same object until either <xref:System.Collections.IEnumerator.MoveNext%2A> or <xref:System.Collections.IEnumerator.Reset%2A> is called. <xref:System.Collections.IEnumerator.MoveNext%2A> sets <xref:System.Collections.IEnumerator.Current%2A> to the next element.","pos":[0,321],"nodes":[{"content":"<ph id=\"ph1\">&lt;xref:System.Collections.IEnumerator.Current%2A&gt;</ph> returns the same object until either <ph id=\"ph2\">&lt;xref:System.Collections.IEnumerator.MoveNext%2A&gt;</ph> or <ph id=\"ph3\">&lt;xref:System.Collections.IEnumerator.Reset%2A&gt;</ph> is called.","pos":[0,196],"source":"<xref:System.Collections.IEnumerator.Current%2A> returns the same object until either <xref:System.Collections.IEnumerator.MoveNext%2A> or <xref:System.Collections.IEnumerator.Reset%2A> is called."},{"content":"<ph id=\"ph1\">&lt;xref:System.Collections.IEnumerator.MoveNext%2A&gt;</ph> sets <ph id=\"ph2\">&lt;xref:System.Collections.IEnumerator.Current%2A&gt;</ph> to the next element.","pos":[197,321],"source":" <xref:System.Collections.IEnumerator.MoveNext%2A> sets <xref:System.Collections.IEnumerator.Current%2A> to the next element."}]}]},{"pos":[1223,1958],"content":"If <xref:System.Collections.IEnumerator.MoveNext%2A> passes the end of the collection, the enumerator is positioned after the last element in the collection and <xref:System.Collections.IEnumerator.MoveNext%2A> returns `false`. When the enumerator is at this position, subsequent calls to <xref:System.Collections.IEnumerator.MoveNext%2A> also return `false`. If the last call to <xref:System.Collections.IEnumerator.MoveNext%2A> returned `false`, <xref:System.Collections.IEnumerator.Current%2A> is undefined. To set <xref:System.Collections.IEnumerator.Current%2A> to the first element of the collection again, you can call <xref:System.Collections.IEnumerator.Reset%2A> followed by <xref:System.Collections.IEnumerator.MoveNext%2A>.","nodes":[{"content":"If <ph id=\"ph1\">&lt;xref:System.Collections.IEnumerator.MoveNext%2A&gt;</ph> passes the end of the collection, the enumerator is positioned after the last element in the collection and <ph id=\"ph2\">&lt;xref:System.Collections.IEnumerator.MoveNext%2A&gt;</ph> returns <ph id=\"ph3\">`false`</ph>.","pos":[0,227],"source":"If <xref:System.Collections.IEnumerator.MoveNext%2A> passes the end of the collection, the enumerator is positioned after the last element in the collection and <xref:System.Collections.IEnumerator.MoveNext%2A> returns `false`."},{"content":"When the enumerator is at this position, subsequent calls to <ph id=\"ph1\">&lt;xref:System.Collections.IEnumerator.MoveNext%2A&gt;</ph> also return <ph id=\"ph2\">`false`</ph>.","pos":[228,359],"source":" When the enumerator is at this position, subsequent calls to <xref:System.Collections.IEnumerator.MoveNext%2A> also return `false`."},{"content":"If the last call to <ph id=\"ph1\">&lt;xref:System.Collections.IEnumerator.MoveNext%2A&gt;</ph> returned <ph id=\"ph2\">`false`</ph>, <ph id=\"ph3\">&lt;xref:System.Collections.IEnumerator.Current%2A&gt;</ph> is undefined.","pos":[360,510],"source":" If the last call to <xref:System.Collections.IEnumerator.MoveNext%2A> returned `false`, <xref:System.Collections.IEnumerator.Current%2A> is undefined."},{"content":"To set <ph id=\"ph1\">&lt;xref:System.Collections.IEnumerator.Current%2A&gt;</ph> to the first element of the collection again, you can call <ph id=\"ph2\">&lt;xref:System.Collections.IEnumerator.Reset%2A&gt;</ph> followed by <ph id=\"ph3\">&lt;xref:System.Collections.IEnumerator.MoveNext%2A&gt;</ph>.","pos":[511,735],"source":" To set <xref:System.Collections.IEnumerator.Current%2A> to the first element of the collection again, you can call <xref:System.Collections.IEnumerator.Reset%2A> followed by <xref:System.Collections.IEnumerator.MoveNext%2A>."}]},{"pos":[1965,2200],"content":"An enumerator remains valid as long as the collection remains unchanged. If changes are made to the collection, such as adding, modifying, or deleting elements, the enumerator is irrecoverably invalidated and its behavior is undefined.","nodes":[{"content":"An enumerator remains valid as long as the collection remains unchanged. If changes are made to the collection, such as adding, modifying, or deleting elements, the enumerator is irrecoverably invalidated and its behavior is undefined.","pos":[0,235],"nodes":[{"content":"An enumerator remains valid as long as the collection remains unchanged.","pos":[0,72]},{"content":"If changes are made to the collection, such as adding, modifying, or deleting elements, the enumerator is irrecoverably invalidated and its behavior is undefined.","pos":[73,235]}]}]},{"pos":[2207,2598],"content":"The enumerator does not have exclusive access to the collection; therefore, enumerating through a collection is intrinsically not a thread-safe procedure.  To guarantee thread safety during enumeration, you can lock the collection during the entire enumeration.  To allow the collection to be accessed by multiple threads for reading and writing, you must implement your own synchronization.","nodes":[{"content":"The enumerator does not have exclusive access to the collection; therefore, enumerating through a collection is intrinsically not a thread-safe procedure.  To guarantee thread safety during enumeration, you can lock the collection during the entire enumeration.  To allow the collection to be accessed by multiple threads for reading and writing, you must implement your own synchronization.","pos":[0,391],"nodes":[{"content":"The enumerator does not have exclusive access to the collection; therefore, enumerating through a collection is intrinsically not a thread-safe procedure.","pos":[0,154]},{"content":"To guarantee thread safety during enumeration, you can lock the collection during the entire enumeration.","pos":[156,261]},{"content":"To allow the collection to be accessed by multiple threads for reading and writing, you must implement your own synchronization.","pos":[263,391]}]}]},{"pos":[2605,2638],"content":"This method is an O(1) operation.","nodes":[{"content":"This method is an O(1) operation.","pos":[0,33]}]}],"pos":[7947,10604],"yaml":true,"extradata":"MT"},{"content":"An <xref href=\"System.Collections.IEnumerator\"></xref> for the <xref href=\"System.Collections.Specialized.NameObjectCollectionBase.KeysCollection\"></xref>.","nodes":[{"pos":[0,155],"content":"An <ph id=\"ph1\">&lt;xref href=\"System.Collections.IEnumerator\"&gt;&lt;/xref&gt;</ph> for the <ph id=\"ph2\">&lt;xref href=\"System.Collections.Specialized.NameObjectCollectionBase.KeysCollection\"&gt;&lt;/xref&gt;</ph>.","source":"An <xref href=\"System.Collections.IEnumerator\"></xref> for the <xref href=\"System.Collections.Specialized.NameObjectCollectionBase.KeysCollection\"></xref>."}],"pos":[10776,10932],"yaml":true},{"content":"Gets the entry at the specified index of the collection.","nodes":[{"pos":[0,56],"content":"Gets the entry at the specified index of the collection.","nodes":[{"content":"Gets the entry at the specified index of the collection.","pos":[0,56]}]}],"pos":[12503,12560],"yaml":true},{"content":"This property provides the ability to access a specific element in the collection by using the following syntax: `myCollection[index]` (In Visual Basic, `myCollection(index)`).  \n  \n The C# language uses the  keyword to define the indexers instead of implementing the <xref:System.Collections.Specialized.NameObjectCollectionBase.KeysCollection.Item%2A> property. Visual Basic implements <xref:System.Collections.Specialized.NameObjectCollectionBase.KeysCollection.Item%2A> as a default property, which provides the same indexing functionality.  \n  \n Retrieving the value of this property is an O(1) operation; setting the property is also an O(1) operation.","nodes":[{"pos":[0,176],"content":"This property provides the ability to access a specific element in the collection by using the following syntax: <ph id=\"ph1\">`myCollection[index]`</ph> (In Visual Basic, <ph id=\"ph2\">`myCollection(index)`</ph>).","source":"This property provides the ability to access a specific element in the collection by using the following syntax: `myCollection[index]` (In Visual Basic, `myCollection(index)`)."},{"pos":[183,544],"content":"The C# language uses the  keyword to define the indexers instead of implementing the <xref:System.Collections.Specialized.NameObjectCollectionBase.KeysCollection.Item%2A> property. Visual Basic implements <xref:System.Collections.Specialized.NameObjectCollectionBase.KeysCollection.Item%2A> as a default property, which provides the same indexing functionality.","nodes":[{"content":"The C# language uses the  keyword to define the indexers instead of implementing the <xref:System.Collections.Specialized.NameObjectCollectionBase.KeysCollection.Item%2A> property. Visual Basic implements <xref:System.Collections.Specialized.NameObjectCollectionBase.KeysCollection.Item%2A> as a default property, which provides the same indexing functionality.","pos":[0,361],"nodes":[{"content":"The C# language uses the  keyword to define the indexers instead of implementing the <ph id=\"ph1\">&lt;xref:System.Collections.Specialized.NameObjectCollectionBase.KeysCollection.Item%2A&gt;</ph> property.","pos":[0,180],"source":"The C# language uses the  keyword to define the indexers instead of implementing the <xref:System.Collections.Specialized.NameObjectCollectionBase.KeysCollection.Item%2A> property."},{"content":"Visual Basic implements <ph id=\"ph1\">&lt;xref:System.Collections.Specialized.NameObjectCollectionBase.KeysCollection.Item%2A&gt;</ph> as a default property, which provides the same indexing functionality.","pos":[181,361],"source":" Visual Basic implements <xref:System.Collections.Specialized.NameObjectCollectionBase.KeysCollection.Item%2A> as a default property, which provides the same indexing functionality."}]}]},{"pos":[551,658],"content":"Retrieving the value of this property is an O(1) operation; setting the property is also an O(1) operation.","nodes":[{"content":"Retrieving the value of this property is an O(1) operation; setting the property is also an O(1) operation.","pos":[0,107]}]}],"pos":[12571,13236],"yaml":true,"extradata":"MT"},{"content":"The zero-based index of the entry to locate in the collection.","nodes":[{"pos":[0,62],"content":"The zero-based index of the entry to locate in the collection.","nodes":[{"content":"The zero-based index of the entry to locate in the collection.","pos":[0,62]}]}],"pos":[13374,13437],"yaml":true},{"content":"The <xref href=\"System.String\"></xref> key of the entry at the specified index of the collection.","nodes":[{"pos":[0,97],"content":"The <ph id=\"ph1\">&lt;xref href=\"System.String\"&gt;&lt;/xref&gt;</ph> key of the entry at the specified index of the collection.","source":"The <xref href=\"System.String\"></xref> key of the entry at the specified index of the collection."}],"pos":[13494,13592],"yaml":true},{"content":"<code>index</code> is outside the valid range of indexes for the collection.","nodes":[{"pos":[0,76],"content":"<ph id=\"ph1\">&lt;code&gt;index&lt;/code&gt;</ph> is outside the valid range of indexes for the collection.","source":"<code>index</code> is outside the valid range of indexes for the collection."}],"pos":[13809,13886],"yaml":true},{"content":"Copies the entire <xref href=\"System.Collections.Specialized.NameObjectCollectionBase.KeysCollection\"></xref> to a compatible one-dimensional <xref href=\"System.Array\"></xref>, starting at the specified index of the target array.","nodes":[{"pos":[0,229],"content":"Copies the entire <ph id=\"ph1\">&lt;xref href=\"System.Collections.Specialized.NameObjectCollectionBase.KeysCollection\"&gt;&lt;/xref&gt;</ph> to a compatible one-dimensional <ph id=\"ph2\">&lt;xref href=\"System.Array\"&gt;&lt;/xref&gt;</ph>, starting at the specified index of the target array.","source":"Copies the entire <xref href=\"System.Collections.Specialized.NameObjectCollectionBase.KeysCollection\"></xref> to a compatible one-dimensional <xref href=\"System.Array\"></xref>, starting at the specified index of the target array."}],"pos":[15555,15785],"yaml":true},{"content":"The specified array must be of a compatible type.  \n  \n This method uses <xref:System.Array.Copy%2A?displayProperty=fullName> to copy the elements.  \n  \n This method is an O(`n`) operation, where `n` is <xref:System.Collections.Specialized.NameObjectCollectionBase.KeysCollection.Count%2A>.","nodes":[{"pos":[0,49],"content":"The specified array must be of a compatible type.","nodes":[{"content":"The specified array must be of a compatible type.","pos":[0,49]}]},{"pos":[56,147],"content":"This method uses <xref:System.Array.Copy%2A?displayProperty=fullName> to copy the elements.","nodes":[{"content":"This method uses <ph id=\"ph1\">&lt;xref:System.Array.Copy%2A?displayProperty=fullName&gt;</ph> to copy the elements.","pos":[0,91],"source":"This method uses <xref:System.Array.Copy%2A?displayProperty=fullName> to copy the elements."}]},{"pos":[154,290],"content":"This method is an O(<ph id=\"ph1\">`n`</ph>) operation, where <ph id=\"ph2\">`n`</ph> is <ph id=\"ph3\">&lt;xref:System.Collections.Specialized.NameObjectCollectionBase.KeysCollection.Count%2A&gt;</ph>.","source":"This method is an O(`n`) operation, where `n` is <xref:System.Collections.Specialized.NameObjectCollectionBase.KeysCollection.Count%2A>."}],"pos":[15796,16093],"yaml":true,"extradata":"MT"},{"content":"The one-dimensional <xref href=\"System.Array\"></xref> that is the destination of the elements copied from <xref href=\"System.Collections.Specialized.NameObjectCollectionBase.KeysCollection\"></xref>. The <xref href=\"System.Array\"></xref> must have zero-based indexing.","nodes":[{"pos":[0,267],"content":"The one-dimensional <xref href=\"System.Array\"></xref> that is the destination of the elements copied from <xref href=\"System.Collections.Specialized.NameObjectCollectionBase.KeysCollection\"></xref>. The <xref href=\"System.Array\"></xref> must have zero-based indexing.","nodes":[{"content":"The one-dimensional <ph id=\"ph1\">&lt;xref href=\"System.Array\"&gt;&lt;/xref&gt;</ph> that is the destination of the elements copied from <ph id=\"ph2\">&lt;xref href=\"System.Collections.Specialized.NameObjectCollectionBase.KeysCollection\"&gt;&lt;/xref&gt;</ph>.","pos":[0,198],"source":"The one-dimensional <xref href=\"System.Array\"></xref> that is the destination of the elements copied from <xref href=\"System.Collections.Specialized.NameObjectCollectionBase.KeysCollection\"></xref>."},{"content":"The <ph id=\"ph1\">&lt;xref href=\"System.Array\"&gt;&lt;/xref&gt;</ph> must have zero-based indexing.","pos":[199,267],"source":" The <xref href=\"System.Array\"></xref> must have zero-based indexing."}]}],"pos":[16242,16510],"yaml":true},{"content":"The zero-based index in <code>array</code> at which copying begins.","nodes":[{"pos":[0,67],"content":"The zero-based index in <bpt id=\"p1\">&lt;code&gt;</bpt><ph id=\"ph1\">array</ph><ept id=\"p1\">&lt;/code&gt;</ept> at which copying begins.","source":"The zero-based index in <code>array</code> at which copying begins."}],"pos":[16570,16638],"yaml":true},{"content":"<code>array</code> is `null`.","nodes":[{"pos":[0,29],"content":"<ph id=\"ph1\">&lt;code&gt;array&lt;/code&gt;</ph> is <ph id=\"ph2\">`null`</ph>.","source":"<code>array</code> is `null`."}],"pos":[16876,16906],"yaml":true},{"content":"<code>index</code> is less than zero.","nodes":[{"pos":[0,37],"content":"<ph id=\"ph1\">&lt;code&gt;index&lt;/code&gt;</ph> is less than zero.","source":"<code>index</code> is less than zero."}],"pos":[17020,17058],"yaml":true},{"content":"<code>array</code> is multidimensional.  \n  \n -or-  \n  \n The number of elements in the source <xref href=\"System.Collections.Specialized.NameObjectCollectionBase.KeysCollection\"></xref> is greater than the available space from <code>index</code> to the end of the destination <code>array</code>.","nodes":[{"pos":[0,39],"content":"<ph id=\"ph1\">&lt;code&gt;array&lt;/code&gt;</ph> is multidimensional.","source":"<code>array</code> is multidimensional."},{"pos":[46,50],"content":"-or-","nodes":[{"content":"-or-","pos":[0,4]}]},{"pos":[57,295],"content":"The number of elements in the source <ph id=\"ph1\">&lt;xref href=\"System.Collections.Specialized.NameObjectCollectionBase.KeysCollection\"&gt;&lt;/xref&gt;</ph> is greater than the available space from <bpt id=\"p1\">&lt;code&gt;</bpt><ph id=\"ph2\">index</ph><ept id=\"p1\">&lt;/code&gt;</ept> to the end of the destination <bpt id=\"p2\">&lt;code&gt;</bpt><ph id=\"ph3\">array</ph><ept id=\"p2\">&lt;/code&gt;</ept>.","source":"The number of elements in the source <xref href=\"System.Collections.Specialized.NameObjectCollectionBase.KeysCollection\"></xref> is greater than the available space from <code>index</code> to the end of the destination <code>array</code>."}],"pos":[17152,17456],"yaml":true},{"content":"The type of the source <xref href=\"System.Collections.Specialized.NameObjectCollectionBase.KeysCollection\"></xref> cannot be cast automatically to the type of the destination <code>array</code>.","nodes":[{"pos":[0,194],"content":"The type of the source <ph id=\"ph1\">&lt;xref href=\"System.Collections.Specialized.NameObjectCollectionBase.KeysCollection\"&gt;&lt;/xref&gt;</ph> cannot be cast automatically to the type of the destination <bpt id=\"p1\">&lt;code&gt;</bpt><ph id=\"ph2\">array</ph><ept id=\"p1\">&lt;/code&gt;</ept>.","source":"The type of the source <xref href=\"System.Collections.Specialized.NameObjectCollectionBase.KeysCollection\"></xref> cannot be cast automatically to the type of the destination <code>array</code>."}],"pos":[17556,17751],"yaml":true},{"content":"Gets a value indicating whether access to the <xref href=\"System.Collections.Specialized.NameObjectCollectionBase.KeysCollection\"></xref> is synchronized (thread safe).","nodes":[{"pos":[0,168],"content":"Gets a value indicating whether access to the <ph id=\"ph1\">&lt;xref href=\"System.Collections.Specialized.NameObjectCollectionBase.KeysCollection\"&gt;&lt;/xref&gt;</ph> is synchronized (thread safe).","source":"Gets a value indicating whether access to the <xref href=\"System.Collections.Specialized.NameObjectCollectionBase.KeysCollection\"></xref> is synchronized (thread safe)."}],"pos":[19347,19516],"yaml":true},{"content":"Derived classes can provide their own synchronized version of the <xref:System.Collections.Specialized.NameObjectCollectionBase.KeysCollection> using the <xref:System.Collections.ICollection.SyncRoot%2A> property. The synchronizing code must perform operations on the <xref:System.Collections.ICollection.SyncRoot%2A> of the <xref:System.Collections.Specialized.NameObjectCollectionBase.KeysCollection>, not directly on the <xref:System.Collections.Specialized.NameObjectCollectionBase.KeysCollection>. This ensures proper operation of collections that are derived from other objects. Specifically, it maintains proper synchronization with other threads that might be simultaneously modifying the <xref:System.Collections.Specialized.NameObjectCollectionBase.KeysCollection> object.  \n  \n Enumerating through a collection is intrinsically not a thread-safe procedure. Even when a collection is synchronized, other threads can still modify the collection, which causes the enumerator to throw an exception. To guarantee thread safety during enumeration, you can either lock the collection during the entire enumeration or catch the exceptions resulting from changes made by other threads.","nodes":[{"pos":[0,782],"content":"Derived classes can provide their own synchronized version of the <xref:System.Collections.Specialized.NameObjectCollectionBase.KeysCollection> using the <xref:System.Collections.ICollection.SyncRoot%2A> property. The synchronizing code must perform operations on the <xref:System.Collections.ICollection.SyncRoot%2A> of the <xref:System.Collections.Specialized.NameObjectCollectionBase.KeysCollection>, not directly on the <xref:System.Collections.Specialized.NameObjectCollectionBase.KeysCollection>. This ensures proper operation of collections that are derived from other objects. Specifically, it maintains proper synchronization with other threads that might be simultaneously modifying the <xref:System.Collections.Specialized.NameObjectCollectionBase.KeysCollection> object.","nodes":[{"content":"Derived classes can provide their own synchronized version of the <xref:System.Collections.Specialized.NameObjectCollectionBase.KeysCollection> using the <xref:System.Collections.ICollection.SyncRoot%2A> property. The synchronizing code must perform operations on the <xref:System.Collections.ICollection.SyncRoot%2A> of the <xref:System.Collections.Specialized.NameObjectCollectionBase.KeysCollection>, not directly on the <xref:System.Collections.Specialized.NameObjectCollectionBase.KeysCollection>. This ensures proper operation of collections that are derived from other objects. Specifically, it maintains proper synchronization with other threads that might be simultaneously modifying the <xref:System.Collections.Specialized.NameObjectCollectionBase.KeysCollection> object.","pos":[0,782],"nodes":[{"content":"Derived classes can provide their own synchronized version of the <ph id=\"ph1\">&lt;xref:System.Collections.Specialized.NameObjectCollectionBase.KeysCollection&gt;</ph> using the <ph id=\"ph2\">&lt;xref:System.Collections.ICollection.SyncRoot%2A&gt;</ph> property.","pos":[0,213],"source":"Derived classes can provide their own synchronized version of the <xref:System.Collections.Specialized.NameObjectCollectionBase.KeysCollection> using the <xref:System.Collections.ICollection.SyncRoot%2A> property."},{"content":"The synchronizing code must perform operations on the <ph id=\"ph1\">&lt;xref:System.Collections.ICollection.SyncRoot%2A&gt;</ph> of the <ph id=\"ph2\">&lt;xref:System.Collections.Specialized.NameObjectCollectionBase.KeysCollection&gt;</ph>, not directly on the <ph id=\"ph3\">&lt;xref:System.Collections.Specialized.NameObjectCollectionBase.KeysCollection&gt;</ph>.","pos":[214,502],"source":" The synchronizing code must perform operations on the <xref:System.Collections.ICollection.SyncRoot%2A> of the <xref:System.Collections.Specialized.NameObjectCollectionBase.KeysCollection>, not directly on the <xref:System.Collections.Specialized.NameObjectCollectionBase.KeysCollection>."},{"content":"This ensures proper operation of collections that are derived from other objects.","pos":[503,584]},{"content":"Specifically, it maintains proper synchronization with other threads that might be simultaneously modifying the <ph id=\"ph1\">&lt;xref:System.Collections.Specialized.NameObjectCollectionBase.KeysCollection&gt;</ph> object.","pos":[585,782],"source":" Specifically, it maintains proper synchronization with other threads that might be simultaneously modifying the <xref:System.Collections.Specialized.NameObjectCollectionBase.KeysCollection> object."}]}]},{"pos":[789,1187],"content":"Enumerating through a collection is intrinsically not a thread-safe procedure. Even when a collection is synchronized, other threads can still modify the collection, which causes the enumerator to throw an exception. To guarantee thread safety during enumeration, you can either lock the collection during the entire enumeration or catch the exceptions resulting from changes made by other threads.","nodes":[{"content":"Enumerating through a collection is intrinsically not a thread-safe procedure. Even when a collection is synchronized, other threads can still modify the collection, which causes the enumerator to throw an exception. To guarantee thread safety during enumeration, you can either lock the collection during the entire enumeration or catch the exceptions resulting from changes made by other threads.","pos":[0,398],"nodes":[{"content":"Enumerating through a collection is intrinsically not a thread-safe procedure.","pos":[0,78]},{"content":"Even when a collection is synchronized, other threads can still modify the collection, which causes the enumerator to throw an exception.","pos":[79,216]},{"content":"To guarantee thread safety during enumeration, you can either lock the collection during the entire enumeration or catch the exceptions resulting from changes made by other threads.","pos":[217,398]}]}]}],"pos":[19527,20719],"yaml":true,"extradata":"MT"},{"content":"`true` if access to the <xref href=\"System.Collections.Specialized.NameObjectCollectionBase.KeysCollection\"></xref> is synchronized (thread safe); otherwise, `false`. The default is `false`.","nodes":[{"pos":[0,190],"content":"`true` if access to the <xref href=\"System.Collections.Specialized.NameObjectCollectionBase.KeysCollection\"></xref> is synchronized (thread safe); otherwise, `false`. The default is `false`.","nodes":[{"content":"<ph id=\"ph1\">`true`</ph> if access to the <ph id=\"ph2\">&lt;xref href=\"System.Collections.Specialized.NameObjectCollectionBase.KeysCollection\"&gt;&lt;/xref&gt;</ph> is synchronized (thread safe); otherwise, <ph id=\"ph3\">`false`</ph>.","pos":[0,166],"source":"`true` if access to the <xref href=\"System.Collections.Specialized.NameObjectCollectionBase.KeysCollection\"></xref> is synchronized (thread safe); otherwise, `false`."},{"content":"The default is <ph id=\"ph1\">`false`</ph>.","pos":[167,190],"source":" The default is `false`."}]}],"pos":[21780,21973],"yaml":true},{"content":"Gets an object that can be used to synchronize access to the <xref href=\"System.Collections.Specialized.NameObjectCollectionBase.KeysCollection\"></xref>.","nodes":[{"pos":[0,153],"content":"Gets an object that can be used to synchronize access to the <ph id=\"ph1\">&lt;xref href=\"System.Collections.Specialized.NameObjectCollectionBase.KeysCollection\"&gt;&lt;/xref&gt;</ph>.","source":"Gets an object that can be used to synchronize access to the <xref href=\"System.Collections.Specialized.NameObjectCollectionBase.KeysCollection\"></xref>."}],"pos":[23643,23797],"yaml":true},{"content":"Derived classes can provide their own synchronized version of the <xref:System.Collections.Specialized.NameObjectCollectionBase.KeysCollection> using the <xref:System.Collections.ICollection.SyncRoot%2A> property. The synchronizing code must perform operations on the <xref:System.Collections.ICollection.SyncRoot%2A> of the <xref:System.Collections.Specialized.NameObjectCollectionBase.KeysCollection>, not directly on the <xref:System.Collections.Specialized.NameObjectCollectionBase.KeysCollection>. This ensures proper operation of collections that are derived from other objects. Specifically, it maintains proper synchronization with other threads that might be simultaneously modifying the <xref:System.Collections.Specialized.NameObjectCollectionBase.KeysCollection> object.  \n  \n Enumerating through a collection is intrinsically not a thread-safe procedure. Even when a collection is synchronized, other threads can still modify the collection, which causes the enumerator to throw an exception. To guarantee thread safety during enumeration, you can either lock the collection during the entire enumeration or catch the exceptions resulting from changes made by other threads.","nodes":[{"pos":[0,782],"content":"Derived classes can provide their own synchronized version of the <xref:System.Collections.Specialized.NameObjectCollectionBase.KeysCollection> using the <xref:System.Collections.ICollection.SyncRoot%2A> property. The synchronizing code must perform operations on the <xref:System.Collections.ICollection.SyncRoot%2A> of the <xref:System.Collections.Specialized.NameObjectCollectionBase.KeysCollection>, not directly on the <xref:System.Collections.Specialized.NameObjectCollectionBase.KeysCollection>. This ensures proper operation of collections that are derived from other objects. Specifically, it maintains proper synchronization with other threads that might be simultaneously modifying the <xref:System.Collections.Specialized.NameObjectCollectionBase.KeysCollection> object.","nodes":[{"content":"Derived classes can provide their own synchronized version of the <xref:System.Collections.Specialized.NameObjectCollectionBase.KeysCollection> using the <xref:System.Collections.ICollection.SyncRoot%2A> property. The synchronizing code must perform operations on the <xref:System.Collections.ICollection.SyncRoot%2A> of the <xref:System.Collections.Specialized.NameObjectCollectionBase.KeysCollection>, not directly on the <xref:System.Collections.Specialized.NameObjectCollectionBase.KeysCollection>. This ensures proper operation of collections that are derived from other objects. Specifically, it maintains proper synchronization with other threads that might be simultaneously modifying the <xref:System.Collections.Specialized.NameObjectCollectionBase.KeysCollection> object.","pos":[0,782],"nodes":[{"content":"Derived classes can provide their own synchronized version of the <ph id=\"ph1\">&lt;xref:System.Collections.Specialized.NameObjectCollectionBase.KeysCollection&gt;</ph> using the <ph id=\"ph2\">&lt;xref:System.Collections.ICollection.SyncRoot%2A&gt;</ph> property.","pos":[0,213],"source":"Derived classes can provide their own synchronized version of the <xref:System.Collections.Specialized.NameObjectCollectionBase.KeysCollection> using the <xref:System.Collections.ICollection.SyncRoot%2A> property."},{"content":"The synchronizing code must perform operations on the <ph id=\"ph1\">&lt;xref:System.Collections.ICollection.SyncRoot%2A&gt;</ph> of the <ph id=\"ph2\">&lt;xref:System.Collections.Specialized.NameObjectCollectionBase.KeysCollection&gt;</ph>, not directly on the <ph id=\"ph3\">&lt;xref:System.Collections.Specialized.NameObjectCollectionBase.KeysCollection&gt;</ph>.","pos":[214,502],"source":" The synchronizing code must perform operations on the <xref:System.Collections.ICollection.SyncRoot%2A> of the <xref:System.Collections.Specialized.NameObjectCollectionBase.KeysCollection>, not directly on the <xref:System.Collections.Specialized.NameObjectCollectionBase.KeysCollection>."},{"content":"This ensures proper operation of collections that are derived from other objects.","pos":[503,584]},{"content":"Specifically, it maintains proper synchronization with other threads that might be simultaneously modifying the <ph id=\"ph1\">&lt;xref:System.Collections.Specialized.NameObjectCollectionBase.KeysCollection&gt;</ph> object.","pos":[585,782],"source":" Specifically, it maintains proper synchronization with other threads that might be simultaneously modifying the <xref:System.Collections.Specialized.NameObjectCollectionBase.KeysCollection> object."}]}]},{"pos":[789,1187],"content":"Enumerating through a collection is intrinsically not a thread-safe procedure. Even when a collection is synchronized, other threads can still modify the collection, which causes the enumerator to throw an exception. To guarantee thread safety during enumeration, you can either lock the collection during the entire enumeration or catch the exceptions resulting from changes made by other threads.","nodes":[{"content":"Enumerating through a collection is intrinsically not a thread-safe procedure. Even when a collection is synchronized, other threads can still modify the collection, which causes the enumerator to throw an exception. To guarantee thread safety during enumeration, you can either lock the collection during the entire enumeration or catch the exceptions resulting from changes made by other threads.","pos":[0,398],"nodes":[{"content":"Enumerating through a collection is intrinsically not a thread-safe procedure.","pos":[0,78]},{"content":"Even when a collection is synchronized, other threads can still modify the collection, which causes the enumerator to throw an exception.","pos":[79,216]},{"content":"To guarantee thread safety during enumeration, you can either lock the collection during the entire enumeration or catch the exceptions resulting from changes made by other threads.","pos":[217,398]}]}]}],"pos":[23808,25000],"yaml":true,"extradata":"MT"},{"content":"An object that can be used to synchronize access to the <xref href=\"System.Collections.Specialized.NameObjectCollectionBase.KeysCollection\"></xref>.","nodes":[{"pos":[0,148],"content":"An object that can be used to synchronize access to the <ph id=\"ph1\">&lt;xref href=\"System.Collections.Specialized.NameObjectCollectionBase.KeysCollection\"&gt;&lt;/xref&gt;</ph>.","source":"An object that can be used to synchronize access to the <xref href=\"System.Collections.Specialized.NameObjectCollectionBase.KeysCollection\"></xref>."}],"pos":[26056,26205],"yaml":true}],"content":"### YamlMime:ManagedReference\nitems:\n- uid: System.Collections.Specialized.NameObjectCollectionBase.KeysCollection\n  commentId: T:System.Collections.Specialized.NameObjectCollectionBase.KeysCollection\n  id: NameObjectCollectionBase.KeysCollection\n  children:\n  - System.Collections.Specialized.NameObjectCollectionBase.KeysCollection.Count\n  - System.Collections.Specialized.NameObjectCollectionBase.KeysCollection.Get(System.Int32)\n  - System.Collections.Specialized.NameObjectCollectionBase.KeysCollection.GetEnumerator\n  - System.Collections.Specialized.NameObjectCollectionBase.KeysCollection.Item(System.Int32)\n  - System.Collections.Specialized.NameObjectCollectionBase.KeysCollection.System#Collections#ICollection#CopyTo(System.Array,System.Int32)\n  - System.Collections.Specialized.NameObjectCollectionBase.KeysCollection.System#Collections#ICollection#IsSynchronized\n  - System.Collections.Specialized.NameObjectCollectionBase.KeysCollection.System#Collections#ICollection#SyncRoot\n  langs:\n  - csharp\n  name: NameObjectCollectionBase.KeysCollection\n  nameWithType: NameObjectCollectionBase.KeysCollection\n  fullName: System.Collections.Specialized.NameObjectCollectionBase.KeysCollection\n  type: Class\n  assemblies:\n  - System.Collections.Specialized\n  - System\n  - netstandard\n  namespace: System.Collections.Specialized\n  summary: Represents a collection of the <xref href=\"System.String\"></xref> keys of a collection.\n  syntax:\n    content: 'public class NameObjectCollectionBase.KeysCollection : System.Collections.ICollection'\n  inheritance:\n  - System.Object\n  implements:\n  - System.Collections.ICollection\n  inheritedMembers:\n  - System.Object.Equals(System.Object)\n  - System.Object.Equals(System.Object,System.Object)\n  - System.Object.GetHashCode\n  - System.Object.GetType\n  - System.Object.MemberwiseClone\n  - System.Object.ReferenceEquals(System.Object,System.Object)\n  - System.Object.ToString\n  extensionMethods:\n  - System.Linq.Enumerable.Cast``1(System.Collections.IEnumerable)\n  - System.Linq.Enumerable.OfType``1(System.Collections.IEnumerable)\n  - System.Linq.ParallelEnumerable.AsParallel(System.Collections.IEnumerable)\n  - System.Linq.Queryable.AsQueryable(System.Collections.IEnumerable)\n  version:\n  - netcore-1.0\n  - netcore-1.1\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - netstandard-2.0\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  monikers:\n  - netcore-1.0\n  - netcore-1.1\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - netstandard-2.0\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Collections.Specialized/NameObjectCollectionBase+KeysCollection.xml\n  ms.technology:\n  - dotnet-standard\n  author: mairaw\n  ms.author: mairaw\n  manager: wpickett\n- uid: System.Collections.Specialized.NameObjectCollectionBase.KeysCollection.Count\n  commentId: P:System.Collections.Specialized.NameObjectCollectionBase.KeysCollection.Count\n  id: Count\n  parent: System.Collections.Specialized.NameObjectCollectionBase.KeysCollection\n  langs:\n  - csharp\n  name: Count\n  nameWithType: NameObjectCollectionBase.KeysCollection.Count\n  fullName: NameObjectCollectionBase.KeysCollection.Count\n  type: Property\n  assemblies:\n  - System.Collections.Specialized\n  - System\n  - netstandard\n  namespace: System.Collections.Specialized\n  summary: Gets the number of keys in the <xref href=\"System.Collections.Specialized.NameObjectCollectionBase.KeysCollection\"></xref>.\n  remarks: Retrieving the value of this property is an O(1) operation.\n  syntax:\n    content: public int Count { get; }\n    return:\n      type: System.Int32\n      description: The number of keys in the <xref href=\"System.Collections.Specialized.NameObjectCollectionBase.KeysCollection\"></xref>.\n  overload: System.Collections.Specialized.NameObjectCollectionBase.KeysCollection.Count*\n  exceptions: []\n  version:\n  - netcore-1.0\n  - netcore-1.1\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - netstandard-2.0\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  monikers:\n  - netcore-1.0\n  - netcore-1.1\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - netstandard-2.0\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Collections.Specialized/NameObjectCollectionBase+KeysCollection.xml\n  ms.technology:\n  - dotnet-standard\n  author: mairaw\n  ms.author: mairaw\n  manager: wpickett\n- uid: System.Collections.Specialized.NameObjectCollectionBase.KeysCollection.Get(System.Int32)\n  commentId: M:System.Collections.Specialized.NameObjectCollectionBase.KeysCollection.Get(System.Int32)\n  id: Get(System.Int32)\n  parent: System.Collections.Specialized.NameObjectCollectionBase.KeysCollection\n  langs:\n  - csharp\n  name: Get(Int32)\n  nameWithType: NameObjectCollectionBase.KeysCollection.Get(Int32)\n  fullName: NameObjectCollectionBase.KeysCollection.Get(Int32)\n  type: Method\n  assemblies:\n  - System.Collections.Specialized\n  - System\n  - netstandard\n  namespace: System.Collections.Specialized\n  summary: Gets the key at the specified index of the collection.\n  remarks: This method is an O(1) operation.\n  syntax:\n    content: public virtual string Get (int index);\n    parameters:\n    - id: index\n      type: System.Int32\n      description: The zero-based index of the key to get from the collection.\n    return:\n      type: System.String\n      description: A <xref href=\"System.String\"></xref> that contains the key at the specified index of the collection.\n  overload: System.Collections.Specialized.NameObjectCollectionBase.KeysCollection.Get*\n  exceptions:\n  - type: System.ArgumentOutOfRangeException\n    commentId: T:System.ArgumentOutOfRangeException\n    description: <code>index</code> is outside the valid range of indexes for the collection.\n  version:\n  - netcore-1.0\n  - netcore-1.1\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - netstandard-2.0\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  monikers:\n  - netcore-1.0\n  - netcore-1.1\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - netstandard-2.0\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Collections.Specialized/NameObjectCollectionBase+KeysCollection.xml\n  ms.technology:\n  - dotnet-standard\n  author: mairaw\n  ms.author: mairaw\n  manager: wpickett\n- uid: System.Collections.Specialized.NameObjectCollectionBase.KeysCollection.GetEnumerator\n  commentId: M:System.Collections.Specialized.NameObjectCollectionBase.KeysCollection.GetEnumerator\n  id: GetEnumerator\n  parent: System.Collections.Specialized.NameObjectCollectionBase.KeysCollection\n  langs:\n  - csharp\n  name: GetEnumerator()\n  nameWithType: NameObjectCollectionBase.KeysCollection.GetEnumerator()\n  fullName: NameObjectCollectionBase.KeysCollection.GetEnumerator()\n  type: Method\n  assemblies:\n  - System.Collections.Specialized\n  - System\n  - netstandard\n  namespace: System.Collections.Specialized\n  summary: Returns an enumerator that iterates through the <xref href=\"System.Collections.Specialized.NameObjectCollectionBase.KeysCollection\"></xref>.\n  remarks: \"This enumerator returns the keys of the collection as strings.  \\n  \\n The `foreach` statement of the C# language (`for each` in Visual Basic) hides the complexity of the enumerators.  Therefore, using `foreach` is recommended, instead of directly manipulating the enumerator.  \\n  \\n Enumerators can be used to read the data in the collection, but they cannot be used to modify the underlying collection.  \\n  \\n Initially, the enumerator is positioned before the first element in the collection. <xref:System.Collections.IEnumerator.Reset%2A> also brings the enumerator back to this position.  At this position, <xref:System.Collections.IEnumerator.Current%2A> is undefined. Therefore, you must call <xref:System.Collections.IEnumerator.MoveNext%2A> to advance the enumerator to the first element of the collection before reading the value of <xref:System.Collections.IEnumerator.Current%2A>.  \\n  \\n <xref:System.Collections.IEnumerator.Current%2A> returns the same object until either <xref:System.Collections.IEnumerator.MoveNext%2A> or <xref:System.Collections.IEnumerator.Reset%2A> is called. <xref:System.Collections.IEnumerator.MoveNext%2A> sets <xref:System.Collections.IEnumerator.Current%2A> to the next element.  \\n  \\n If <xref:System.Collections.IEnumerator.MoveNext%2A> passes the end of the collection, the enumerator is positioned after the last element in the collection and <xref:System.Collections.IEnumerator.MoveNext%2A> returns `false`. When the enumerator is at this position, subsequent calls to <xref:System.Collections.IEnumerator.MoveNext%2A> also return `false`. If the last call to <xref:System.Collections.IEnumerator.MoveNext%2A> returned `false`, <xref:System.Collections.IEnumerator.Current%2A> is undefined. To set <xref:System.Collections.IEnumerator.Current%2A> to the first element of the collection again, you can call <xref:System.Collections.IEnumerator.Reset%2A> followed by <xref:System.Collections.IEnumerator.MoveNext%2A>.  \\n  \\n An enumerator remains valid as long as the collection remains unchanged. If changes are made to the collection, such as adding, modifying, or deleting elements, the enumerator is irrecoverably invalidated and its behavior is undefined.  \\n  \\n The enumerator does not have exclusive access to the collection; therefore, enumerating through a collection is intrinsically not a thread-safe procedure.  To guarantee thread safety during enumeration, you can lock the collection during the entire enumeration.  To allow the collection to be accessed by multiple threads for reading and writing, you must implement your own synchronization.  \\n  \\n This method is an O(1) operation.\"\n  syntax:\n    content: public System.Collections.IEnumerator GetEnumerator ();\n    parameters: []\n    return:\n      type: System.Collections.IEnumerator\n      description: An <xref href=\"System.Collections.IEnumerator\"></xref> for the <xref href=\"System.Collections.Specialized.NameObjectCollectionBase.KeysCollection\"></xref>.\n  overload: System.Collections.Specialized.NameObjectCollectionBase.KeysCollection.GetEnumerator*\n  exceptions: []\n  version:\n  - netcore-1.0\n  - netcore-1.1\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - netstandard-2.0\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  monikers:\n  - netcore-1.0\n  - netcore-1.1\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - netstandard-2.0\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Collections.Specialized/NameObjectCollectionBase+KeysCollection.xml\n  ms.technology:\n  - dotnet-standard\n  author: mairaw\n  ms.author: mairaw\n  manager: wpickett\n- uid: System.Collections.Specialized.NameObjectCollectionBase.KeysCollection.Item(System.Int32)\n  commentId: P:System.Collections.Specialized.NameObjectCollectionBase.KeysCollection.Item(System.Int32)\n  id: Item(System.Int32)\n  parent: System.Collections.Specialized.NameObjectCollectionBase.KeysCollection\n  langs:\n  - csharp\n  name: Item(Int32)\n  nameWithType: NameObjectCollectionBase.KeysCollection.Item(Int32)\n  fullName: NameObjectCollectionBase.KeysCollection.Item(Int32)\n  type: Property\n  assemblies:\n  - System.Collections.Specialized\n  - System\n  - netstandard\n  namespace: System.Collections.Specialized\n  summary: Gets the entry at the specified index of the collection.\n  remarks: \"This property provides the ability to access a specific element in the collection by using the following syntax: `myCollection[index]` (In Visual Basic, `myCollection(index)`).  \\n  \\n The C# language uses the  keyword to define the indexers instead of implementing the <xref:System.Collections.Specialized.NameObjectCollectionBase.KeysCollection.Item%2A> property. Visual Basic implements <xref:System.Collections.Specialized.NameObjectCollectionBase.KeysCollection.Item%2A> as a default property, which provides the same indexing functionality.  \\n  \\n Retrieving the value of this property is an O(1) operation; setting the property is also an O(1) operation.\"\n  syntax:\n    content: public string this[int index] { get; }\n    parameters:\n    - id: index\n      type: System.Int32\n      description: The zero-based index of the entry to locate in the collection.\n    return:\n      type: System.String\n      description: The <xref href=\"System.String\"></xref> key of the entry at the specified index of the collection.\n  overload: System.Collections.Specialized.NameObjectCollectionBase.KeysCollection.Item*\n  exceptions:\n  - type: System.ArgumentOutOfRangeException\n    commentId: T:System.ArgumentOutOfRangeException\n    description: <code>index</code> is outside the valid range of indexes for the collection.\n  version:\n  - netcore-1.0\n  - netcore-1.1\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - netstandard-2.0\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  monikers:\n  - netcore-1.0\n  - netcore-1.1\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - netstandard-2.0\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Collections.Specialized/NameObjectCollectionBase+KeysCollection.xml\n  ms.technology:\n  - dotnet-standard\n  author: mairaw\n  ms.author: mairaw\n  manager: wpickett\n- uid: System.Collections.Specialized.NameObjectCollectionBase.KeysCollection.System#Collections#ICollection#CopyTo(System.Array,System.Int32)\n  commentId: M:System.Collections.Specialized.NameObjectCollectionBase.KeysCollection.System#Collections#ICollection#CopyTo(System.Array,System.Int32)\n  id: System#Collections#ICollection#CopyTo(System.Array,System.Int32)\n  isEii: true\n  parent: System.Collections.Specialized.NameObjectCollectionBase.KeysCollection\n  langs:\n  - csharp\n  name: ICollection.CopyTo(Array, Int32)\n  nameWithType: NameObjectCollectionBase.KeysCollection.ICollection.CopyTo(Array, Int32)\n  fullName: NameObjectCollectionBase.KeysCollection.ICollection.CopyTo(Array, Int32)\n  type: Method\n  assemblies:\n  - System.Collections.Specialized\n  - System\n  - netstandard\n  namespace: System.Collections.Specialized\n  summary: Copies the entire <xref href=\"System.Collections.Specialized.NameObjectCollectionBase.KeysCollection\"></xref> to a compatible one-dimensional <xref href=\"System.Array\"></xref>, starting at the specified index of the target array.\n  remarks: \"The specified array must be of a compatible type.  \\n  \\n This method uses <xref:System.Array.Copy%2A?displayProperty=fullName> to copy the elements.  \\n  \\n This method is an O(`n`) operation, where `n` is <xref:System.Collections.Specialized.NameObjectCollectionBase.KeysCollection.Count%2A>.\"\n  syntax:\n    content: void ICollection.CopyTo (Array array, int index);\n    parameters:\n    - id: array\n      type: System.Array\n      description: The one-dimensional <xref href=\"System.Array\"></xref> that is the destination of the elements copied from <xref href=\"System.Collections.Specialized.NameObjectCollectionBase.KeysCollection\"></xref>. The <xref href=\"System.Array\"></xref> must have zero-based indexing.\n    - id: index\n      type: System.Int32\n      description: The zero-based index in <code>array</code> at which copying begins.\n  overload: System.Collections.Specialized.NameObjectCollectionBase.KeysCollection.System#Collections#ICollection#CopyTo*\n  exceptions:\n  - type: System.ArgumentNullException\n    commentId: T:System.ArgumentNullException\n    description: <code>array</code> is `null`.\n  - type: System.ArgumentOutOfRangeException\n    commentId: T:System.ArgumentOutOfRangeException\n    description: <code>index</code> is less than zero.\n  - type: System.ArgumentException\n    commentId: T:System.ArgumentException\n    description: \"<code>array</code> is multidimensional.  \\n  \\n -or-  \\n  \\n The number of elements in the source <xref href=\\\"System.Collections.Specialized.NameObjectCollectionBase.KeysCollection\\\"></xref> is greater than the available space from <code>index</code> to the end of the destination <code>array</code>.\"\n  - type: System.InvalidCastException\n    commentId: T:System.InvalidCastException\n    description: The type of the source <xref href=\"System.Collections.Specialized.NameObjectCollectionBase.KeysCollection\"></xref> cannot be cast automatically to the type of the destination <code>array</code>.\n  version:\n  - netcore-1.0\n  - netcore-1.1\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - netstandard-2.0\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  monikers:\n  - netcore-1.0\n  - netcore-1.1\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - netstandard-2.0\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Collections.Specialized/NameObjectCollectionBase+KeysCollection.xml\n  ms.technology:\n  - dotnet-standard\n  author: mairaw\n  ms.author: mairaw\n  manager: wpickett\n- uid: System.Collections.Specialized.NameObjectCollectionBase.KeysCollection.System#Collections#ICollection#IsSynchronized\n  commentId: P:System.Collections.Specialized.NameObjectCollectionBase.KeysCollection.System#Collections#ICollection#IsSynchronized\n  id: System#Collections#ICollection#IsSynchronized\n  isEii: true\n  parent: System.Collections.Specialized.NameObjectCollectionBase.KeysCollection\n  langs:\n  - csharp\n  name: ICollection.IsSynchronized\n  nameWithType: NameObjectCollectionBase.KeysCollection.ICollection.IsSynchronized\n  fullName: NameObjectCollectionBase.KeysCollection.ICollection.IsSynchronized\n  type: Property\n  assemblies:\n  - System.Collections.Specialized\n  - System\n  - netstandard\n  namespace: System.Collections.Specialized\n  summary: Gets a value indicating whether access to the <xref href=\"System.Collections.Specialized.NameObjectCollectionBase.KeysCollection\"></xref> is synchronized (thread safe).\n  remarks: \"Derived classes can provide their own synchronized version of the <xref:System.Collections.Specialized.NameObjectCollectionBase.KeysCollection> using the <xref:System.Collections.ICollection.SyncRoot%2A> property. The synchronizing code must perform operations on the <xref:System.Collections.ICollection.SyncRoot%2A> of the <xref:System.Collections.Specialized.NameObjectCollectionBase.KeysCollection>, not directly on the <xref:System.Collections.Specialized.NameObjectCollectionBase.KeysCollection>. This ensures proper operation of collections that are derived from other objects. Specifically, it maintains proper synchronization with other threads that might be simultaneously modifying the <xref:System.Collections.Specialized.NameObjectCollectionBase.KeysCollection> object.  \\n  \\n Enumerating through a collection is intrinsically not a thread-safe procedure. Even when a collection is synchronized, other threads can still modify the collection, which causes the enumerator to throw an exception. To guarantee thread safety during enumeration, you can either lock the collection during the entire enumeration or catch the exceptions resulting from changes made by other threads.\"\n  example:\n  - \"The following code example shows how to lock the collection using the <xref:System.Collections.ICollection.SyncRoot%2A> during the entire enumeration.  \\n  \\n [!code-cpp[System.Collections.Specialized.NameObjectCollectionBase.KeysCollection#1](~/samples/snippets/cpp/VS_Snippets_CLR_System/system.collections.specialized.nameobjectcollectionbase.keyscollection/cpp/source.cpp#1)]\\n [!code-csharp[System.Collections.Specialized.NameObjectCollectionBase.KeysCollection#1](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.collections.specialized.nameobjectcollectionbase.keyscollection/cs/source.cs#1)]\\n [!code-vb[System.Collections.Specialized.NameObjectCollectionBase.KeysCollection#1](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.collections.specialized.nameobjectcollectionbase.keyscollection/vb/source.vb#1)]  \\n  \\n Retrieving the value of this property is an O(1) operation.\"\n  syntax:\n    content: bool System.Collections.ICollection.IsSynchronized { get; }\n    return:\n      type: System.Boolean\n      description: '`true` if access to the <xref href=\"System.Collections.Specialized.NameObjectCollectionBase.KeysCollection\"></xref> is synchronized (thread safe); otherwise, `false`. The default is `false`.'\n  overload: System.Collections.Specialized.NameObjectCollectionBase.KeysCollection.System#Collections#ICollection#IsSynchronized*\n  exceptions: []\n  version:\n  - netcore-1.0\n  - netcore-1.1\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - netstandard-2.0\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  monikers:\n  - netcore-1.0\n  - netcore-1.1\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - netstandard-2.0\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Collections.Specialized/NameObjectCollectionBase+KeysCollection.xml\n  author: mairaw\n  ms.author: mairaw\n  manager: wpickett\n- uid: System.Collections.Specialized.NameObjectCollectionBase.KeysCollection.System#Collections#ICollection#SyncRoot\n  commentId: P:System.Collections.Specialized.NameObjectCollectionBase.KeysCollection.System#Collections#ICollection#SyncRoot\n  id: System#Collections#ICollection#SyncRoot\n  isEii: true\n  parent: System.Collections.Specialized.NameObjectCollectionBase.KeysCollection\n  langs:\n  - csharp\n  name: ICollection.SyncRoot\n  nameWithType: NameObjectCollectionBase.KeysCollection.ICollection.SyncRoot\n  fullName: NameObjectCollectionBase.KeysCollection.ICollection.SyncRoot\n  type: Property\n  assemblies:\n  - System.Collections.Specialized\n  - System\n  - netstandard\n  namespace: System.Collections.Specialized\n  summary: Gets an object that can be used to synchronize access to the <xref href=\"System.Collections.Specialized.NameObjectCollectionBase.KeysCollection\"></xref>.\n  remarks: \"Derived classes can provide their own synchronized version of the <xref:System.Collections.Specialized.NameObjectCollectionBase.KeysCollection> using the <xref:System.Collections.ICollection.SyncRoot%2A> property. The synchronizing code must perform operations on the <xref:System.Collections.ICollection.SyncRoot%2A> of the <xref:System.Collections.Specialized.NameObjectCollectionBase.KeysCollection>, not directly on the <xref:System.Collections.Specialized.NameObjectCollectionBase.KeysCollection>. This ensures proper operation of collections that are derived from other objects. Specifically, it maintains proper synchronization with other threads that might be simultaneously modifying the <xref:System.Collections.Specialized.NameObjectCollectionBase.KeysCollection> object.  \\n  \\n Enumerating through a collection is intrinsically not a thread-safe procedure. Even when a collection is synchronized, other threads can still modify the collection, which causes the enumerator to throw an exception. To guarantee thread safety during enumeration, you can either lock the collection during the entire enumeration or catch the exceptions resulting from changes made by other threads.\"\n  example:\n  - \"The following code example shows how to lock the collection using the <xref:System.Collections.ICollection.SyncRoot%2A> during the entire enumeration.  \\n  \\n [!code-cpp[System.Collections.Specialized.NameObjectCollectionBase.KeysCollection#1](~/samples/snippets/cpp/VS_Snippets_CLR_System/system.collections.specialized.nameobjectcollectionbase.keyscollection/cpp/source.cpp#1)]\\n [!code-csharp[System.Collections.Specialized.NameObjectCollectionBase.KeysCollection#1](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.collections.specialized.nameobjectcollectionbase.keyscollection/cs/source.cs#1)]\\n [!code-vb[System.Collections.Specialized.NameObjectCollectionBase.KeysCollection#1](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.collections.specialized.nameobjectcollectionbase.keyscollection/vb/source.vb#1)]  \\n  \\n Retrieving the value of this property is an O(1) operation.\"\n  syntax:\n    content: object System.Collections.ICollection.SyncRoot { get; }\n    return:\n      type: System.Object\n      description: An object that can be used to synchronize access to the <xref href=\"System.Collections.Specialized.NameObjectCollectionBase.KeysCollection\"></xref>.\n  overload: System.Collections.Specialized.NameObjectCollectionBase.KeysCollection.System#Collections#ICollection#SyncRoot*\n  exceptions: []\n  version:\n  - netcore-1.0\n  - netcore-1.1\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - netstandard-2.0\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  monikers:\n  - netcore-1.0\n  - netcore-1.1\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - netstandard-2.0\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Collections.Specialized/NameObjectCollectionBase+KeysCollection.xml\n  author: mairaw\n  ms.author: mairaw\n  manager: wpickett\nreferences:\n- uid: System.Object\n  parent: System\n  isExternal: false\n  name: Object\n  nameWithType: Object\n  fullName: System.Object\n- uid: System.ArgumentOutOfRangeException\n  parent: System\n  isExternal: false\n  name: ArgumentOutOfRangeException\n  nameWithType: ArgumentOutOfRangeException\n  fullName: System.ArgumentOutOfRangeException\n- uid: System.ArgumentNullException\n  parent: System\n  isExternal: false\n  name: ArgumentNullException\n  nameWithType: ArgumentNullException\n  fullName: System.ArgumentNullException\n- uid: System.ArgumentException\n  parent: System\n  isExternal: false\n  name: ArgumentException\n  nameWithType: ArgumentException\n  fullName: System.ArgumentException\n- uid: System.InvalidCastException\n  parent: System\n  isExternal: false\n  name: InvalidCastException\n  nameWithType: InvalidCastException\n  fullName: System.InvalidCastException\n- uid: System.Collections.Specialized.NameObjectCollectionBase.KeysCollection.Count\n  parent: System.Collections.Specialized.NameObjectCollectionBase.KeysCollection\n  isExternal: false\n  name: Count\n  nameWithType: NameObjectCollectionBase.KeysCollection.Count\n  fullName: NameObjectCollectionBase.KeysCollection.Count\n- uid: System.Int32\n  parent: System\n  isExternal: false\n  name: Int32\n  nameWithType: Int32\n  fullName: System.Int32\n- uid: System.Collections.Specialized.NameObjectCollectionBase.KeysCollection.Get(System.Int32)\n  parent: System.Collections.Specialized.NameObjectCollectionBase.KeysCollection\n  isExternal: false\n  name: Get(Int32)\n  nameWithType: NameObjectCollectionBase.KeysCollection.Get(Int32)\n  fullName: NameObjectCollectionBase.KeysCollection.Get(Int32)\n- uid: System.String\n  parent: System\n  isExternal: false\n  name: String\n  nameWithType: String\n  fullName: System.String\n- uid: System.Collections.Specialized.NameObjectCollectionBase.KeysCollection.GetEnumerator\n  parent: System.Collections.Specialized.NameObjectCollectionBase.KeysCollection\n  isExternal: false\n  name: GetEnumerator()\n  nameWithType: NameObjectCollectionBase.KeysCollection.GetEnumerator()\n  fullName: NameObjectCollectionBase.KeysCollection.GetEnumerator()\n- uid: System.Collections.IEnumerator\n  parent: System.Collections\n  isExternal: false\n  name: IEnumerator\n  nameWithType: IEnumerator\n  fullName: System.Collections.IEnumerator\n- uid: System.Collections.Specialized.NameObjectCollectionBase.KeysCollection.Item(System.Int32)\n  parent: System.Collections.Specialized.NameObjectCollectionBase.KeysCollection\n  isExternal: false\n  name: Item(Int32)\n  nameWithType: NameObjectCollectionBase.KeysCollection.Item(Int32)\n  fullName: NameObjectCollectionBase.KeysCollection.Item(Int32)\n- uid: System.Collections.Specialized.NameObjectCollectionBase.KeysCollection.System#Collections#ICollection#CopyTo(System.Array,System.Int32)\n  parent: System.Collections.Specialized.NameObjectCollectionBase.KeysCollection\n  isExternal: false\n  name: ICollection.CopyTo(Array, Int32)\n  nameWithType: NameObjectCollectionBase.KeysCollection.ICollection.CopyTo(Array, Int32)\n  fullName: NameObjectCollectionBase.KeysCollection.ICollection.CopyTo(Array, Int32)\n- uid: System.Array\n  parent: System\n  isExternal: false\n  name: Array\n  nameWithType: Array\n  fullName: System.Array\n- uid: System.Collections.Specialized.NameObjectCollectionBase.KeysCollection.System#Collections#ICollection#IsSynchronized\n  parent: System.Collections.Specialized.NameObjectCollectionBase.KeysCollection\n  isExternal: false\n  name: ICollection.IsSynchronized\n  nameWithType: NameObjectCollectionBase.KeysCollection.ICollection.IsSynchronized\n  fullName: NameObjectCollectionBase.KeysCollection.ICollection.IsSynchronized\n- uid: System.Boolean\n  parent: System\n  isExternal: false\n  name: Boolean\n  nameWithType: Boolean\n  fullName: System.Boolean\n- uid: System.Collections.Specialized.NameObjectCollectionBase.KeysCollection.System#Collections#ICollection#SyncRoot\n  parent: System.Collections.Specialized.NameObjectCollectionBase.KeysCollection\n  isExternal: false\n  name: ICollection.SyncRoot\n  nameWithType: NameObjectCollectionBase.KeysCollection.ICollection.SyncRoot\n  fullName: NameObjectCollectionBase.KeysCollection.ICollection.SyncRoot\n- uid: System.Collections.Specialized.NameObjectCollectionBase.KeysCollection.Count*\n  parent: System.Collections.Specialized.NameObjectCollectionBase.KeysCollection\n  isExternal: false\n  name: Count\n  nameWithType: NameObjectCollectionBase.KeysCollection.Count\n  fullName: NameObjectCollectionBase.KeysCollection.Count\n  monikers:\n  - netcore-1.0\n  - netcore-1.1\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - netstandard-2.0\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Collections.Specialized/NameObjectCollectionBase+KeysCollection.xml\n- uid: System.Collections.Specialized.NameObjectCollectionBase.KeysCollection.Get*\n  parent: System.Collections.Specialized.NameObjectCollectionBase.KeysCollection\n  isExternal: false\n  name: Get\n  nameWithType: NameObjectCollectionBase.KeysCollection.Get\n  fullName: NameObjectCollectionBase.KeysCollection.Get\n  monikers:\n  - netcore-1.0\n  - netcore-1.1\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - netstandard-2.0\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Collections.Specialized/NameObjectCollectionBase+KeysCollection.xml\n- uid: System.Collections.Specialized.NameObjectCollectionBase.KeysCollection.GetEnumerator*\n  parent: System.Collections.Specialized.NameObjectCollectionBase.KeysCollection\n  isExternal: false\n  name: GetEnumerator\n  nameWithType: NameObjectCollectionBase.KeysCollection.GetEnumerator\n  fullName: NameObjectCollectionBase.KeysCollection.GetEnumerator\n  monikers:\n  - netcore-1.0\n  - netcore-1.1\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - netstandard-2.0\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Collections.Specialized/NameObjectCollectionBase+KeysCollection.xml\n- uid: System.Collections.Specialized.NameObjectCollectionBase.KeysCollection.Item*\n  parent: System.Collections.Specialized.NameObjectCollectionBase.KeysCollection\n  isExternal: false\n  name: Item\n  nameWithType: NameObjectCollectionBase.KeysCollection.Item\n  fullName: NameObjectCollectionBase.KeysCollection.Item\n  monikers:\n  - netcore-1.0\n  - netcore-1.1\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - netstandard-2.0\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Collections.Specialized/NameObjectCollectionBase+KeysCollection.xml\n- uid: System.Collections.Specialized.NameObjectCollectionBase.KeysCollection.System#Collections#ICollection#CopyTo*\n  parent: System.Collections.Specialized.NameObjectCollectionBase.KeysCollection\n  isExternal: false\n  name: System.Collections.ICollection.CopyTo\n  nameWithType: NameObjectCollectionBase.KeysCollection.System.Collections.ICollection.CopyTo\n  fullName: NameObjectCollectionBase.KeysCollection.System.Collections.ICollection.CopyTo\n  monikers:\n  - netcore-1.0\n  - netcore-1.1\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - netstandard-2.0\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Collections.Specialized/NameObjectCollectionBase+KeysCollection.xml\n- uid: System.Collections.Specialized.NameObjectCollectionBase.KeysCollection.System#Collections#ICollection#IsSynchronized*\n  parent: System.Collections.Specialized.NameObjectCollectionBase.KeysCollection\n  isExternal: false\n  name: System.Collections.ICollection.IsSynchronized\n  nameWithType: NameObjectCollectionBase.KeysCollection.System.Collections.ICollection.IsSynchronized\n  fullName: NameObjectCollectionBase.KeysCollection.System.Collections.ICollection.IsSynchronized\n  monikers:\n  - netcore-1.0\n  - netcore-1.1\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - netstandard-2.0\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Collections.Specialized/NameObjectCollectionBase+KeysCollection.xml\n- uid: System.Collections.Specialized.NameObjectCollectionBase.KeysCollection.System#Collections#ICollection#SyncRoot*\n  parent: System.Collections.Specialized.NameObjectCollectionBase.KeysCollection\n  isExternal: false\n  name: System.Collections.ICollection.SyncRoot\n  nameWithType: NameObjectCollectionBase.KeysCollection.System.Collections.ICollection.SyncRoot\n  fullName: NameObjectCollectionBase.KeysCollection.System.Collections.ICollection.SyncRoot\n  monikers:\n  - netcore-1.0\n  - netcore-1.1\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - netstandard-2.0\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Collections.Specialized/NameObjectCollectionBase+KeysCollection.xml\n- uid: System.Object.Equals(System.Object)\n  parent: System.Object\n  isExternal: false\n  name: Equals(Object)\n  nameWithType: Object.Equals(Object)\n  fullName: Object.Equals(Object)\n- uid: System.Object.Equals(System.Object,System.Object)\n  parent: System.Object\n  isExternal: false\n  name: Equals(Object, Object)\n  nameWithType: Object.Equals(Object, Object)\n  fullName: Object.Equals(Object, Object)\n- uid: System.Object.GetHashCode\n  parent: System.Object\n  isExternal: false\n  name: GetHashCode()\n  nameWithType: Object.GetHashCode()\n  fullName: Object.GetHashCode()\n- uid: System.Object.GetType\n  parent: System.Object\n  isExternal: false\n  name: GetType()\n  nameWithType: Object.GetType()\n  fullName: Object.GetType()\n- uid: System.Object.MemberwiseClone\n  parent: System.Object\n  isExternal: false\n  name: MemberwiseClone()\n  nameWithType: Object.MemberwiseClone()\n  fullName: Object.MemberwiseClone()\n- uid: System.Object.ReferenceEquals(System.Object,System.Object)\n  parent: System.Object\n  isExternal: false\n  name: ReferenceEquals(Object, Object)\n  nameWithType: Object.ReferenceEquals(Object, Object)\n  fullName: Object.ReferenceEquals(Object, Object)\n- uid: System.Object.ToString\n  parent: System.Object\n  isExternal: false\n  name: ToString()\n  nameWithType: Object.ToString()\n  fullName: Object.ToString()\n- uid: System.Linq.Enumerable.Cast``1(System.Collections.IEnumerable)\n  parent: System.Linq.Enumerable\n  isExternal: false\n  name: Cast<TResult>(IEnumerable)\n  nameWithType: Enumerable.Cast<TResult>(IEnumerable)\n  fullName: Enumerable.Cast<TResult>(IEnumerable)\n- uid: System.Linq.Enumerable.OfType``1(System.Collections.IEnumerable)\n  parent: System.Linq.Enumerable\n  isExternal: false\n  name: OfType<TResult>(IEnumerable)\n  nameWithType: Enumerable.OfType<TResult>(IEnumerable)\n  fullName: Enumerable.OfType<TResult>(IEnumerable)\n- uid: System.Linq.ParallelEnumerable.AsParallel(System.Collections.IEnumerable)\n  parent: System.Linq.ParallelEnumerable\n  isExternal: false\n  name: AsParallel(IEnumerable)\n  nameWithType: ParallelEnumerable.AsParallel(IEnumerable)\n  fullName: ParallelEnumerable.AsParallel(IEnumerable)\n- uid: System.Linq.Queryable.AsQueryable(System.Collections.IEnumerable)\n  parent: System.Linq.Queryable\n  isExternal: false\n  name: AsQueryable(IEnumerable)\n  nameWithType: Queryable.AsQueryable(IEnumerable)\n  fullName: Queryable.AsQueryable(IEnumerable)\n- uid: System.Collections.ICollection\n  parent: System.Collections\n  isExternal: false\n  name: ICollection\n  nameWithType: ICollection\n  fullName: System.Collections.ICollection\n"}