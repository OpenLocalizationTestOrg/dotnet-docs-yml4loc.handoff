### YamlMime:ManagedReference
items:
- uid: System.Security.Permissions.SecurityPermissionAttribute
  commentId: T:System.Security.Permissions.SecurityPermissionAttribute
  id: SecurityPermissionAttribute
  children:
  - System.Security.Permissions.SecurityPermissionAttribute.#ctor(System.Security.Permissions.SecurityAction)
  - System.Security.Permissions.SecurityPermissionAttribute.Assertion
  - System.Security.Permissions.SecurityPermissionAttribute.BindingRedirects
  - System.Security.Permissions.SecurityPermissionAttribute.ControlAppDomain
  - System.Security.Permissions.SecurityPermissionAttribute.ControlDomainPolicy
  - System.Security.Permissions.SecurityPermissionAttribute.ControlEvidence
  - System.Security.Permissions.SecurityPermissionAttribute.ControlPolicy
  - System.Security.Permissions.SecurityPermissionAttribute.ControlPrincipal
  - System.Security.Permissions.SecurityPermissionAttribute.ControlThread
  - System.Security.Permissions.SecurityPermissionAttribute.CreatePermission
  - System.Security.Permissions.SecurityPermissionAttribute.Execution
  - System.Security.Permissions.SecurityPermissionAttribute.Flags
  - System.Security.Permissions.SecurityPermissionAttribute.Infrastructure
  - System.Security.Permissions.SecurityPermissionAttribute.RemotingConfiguration
  - System.Security.Permissions.SecurityPermissionAttribute.SerializationFormatter
  - System.Security.Permissions.SecurityPermissionAttribute.SkipVerification
  - System.Security.Permissions.SecurityPermissionAttribute.UnmanagedCode
  langs:
  - csharp
  name: SecurityPermissionAttribute
  nameWithType: SecurityPermissionAttribute
  fullName: System.Security.Permissions.SecurityPermissionAttribute
  type: Class
  assemblies:
  - mscorlib
  - netstandard
  - System.Runtime.Extensions
  namespace: System.Security.Permissions
  summary: Allows security actions for <xref href="System.Security.Permissions.SecurityPermission"></xref> to be applied to code using declarative security. This class cannot be inherited.
  remarks: "The scope of the declaration that is allowed depends on the <xref:System.Security.Permissions.SecurityAction> that is used.  \n  \n The security information declared by a security attribute is stored in the metadata of the attribute target and is accessed by the system at run time. Security attributes are used only for declarative security. For imperative security, use the corresponding permission class.  \n  \n When you use the <xref:System.Security.Permissions.SecurityPermissionAttribute> class, follow the security action with the permission(s) that are being requested. Each security permission that can be requested, as defined in the <xref:System.Security.Permissions.SecurityPermissionFlag> enumeration, has a corresponding property in the <xref:System.Security.Permissions.SecurityPermissionAttribute> class. For example, to demand the ability to access unmanaged code, follow the demand statement with the property setting that is being requested, as follows: `SecurityPermissionAttribute(SecurityAction.Demand, UnmanagedCode=true)`.  \n  \n> [!NOTE]\n>  An exception to the equivalence between the <xref:System.Security.Permissions.SecurityPermissionFlag> enumeration and the <xref:System.Security.Permissions.SecurityPermissionAttribute> properties is that the <xref:System.Security.Permissions.SecurityPermissionFlag.AllFlags> enumeration value is represented by the <xref:System.Security.Permissions.SecurityAttribute.Unrestricted%2A> property (inherited from the <xref:System.Security.Permissions.SecurityAttribute> class). To demand all security permissions, specify `Unrestricted=true`."
  syntax:
    content: >-
      [System.AttributeUsage(System.AttributeTargets.Assembly | System.AttributeTargets.Class | System.AttributeTargets.Struct | System.AttributeTargets.Constructor | System.AttributeTargets.Method, AllowMultiple=true, Inherited=false)]

      [System.Runtime.InteropServices.ComVisible(true)]

      public sealed class SecurityPermissionAttribute : System.Security.Permissions.CodeAccessSecurityAttribute
  inheritance:
  - System.Object
  - System.Attribute
  - System.Security.Permissions.SecurityAttribute
  - System.Security.Permissions.CodeAccessSecurityAttribute
  implements: []
  inheritedMembers:
  - System.Attribute.Equals(System.Object)
  - System.Attribute.GetCustomAttribute(System.Reflection.Assembly,System.Type)
  - System.Attribute.GetCustomAttribute(System.Reflection.Assembly,System.Type,System.Boolean)
  - System.Attribute.GetCustomAttribute(System.Reflection.MemberInfo,System.Type)
  - System.Attribute.GetCustomAttribute(System.Reflection.MemberInfo,System.Type,System.Boolean)
  - System.Attribute.GetCustomAttribute(System.Reflection.Module,System.Type)
  - System.Attribute.GetCustomAttribute(System.Reflection.Module,System.Type,System.Boolean)
  - System.Attribute.GetCustomAttribute(System.Reflection.ParameterInfo,System.Type)
  - System.Attribute.GetCustomAttribute(System.Reflection.ParameterInfo,System.Type,System.Boolean)
  - System.Attribute.GetCustomAttributes(System.Reflection.Assembly)
  - System.Attribute.GetCustomAttributes(System.Reflection.Assembly,System.Boolean)
  - System.Attribute.GetCustomAttributes(System.Reflection.Assembly,System.Type)
  - System.Attribute.GetCustomAttributes(System.Reflection.Assembly,System.Type,System.Boolean)
  - System.Attribute.GetCustomAttributes(System.Reflection.MemberInfo)
  - System.Attribute.GetCustomAttributes(System.Reflection.MemberInfo,System.Boolean)
  - System.Attribute.GetCustomAttributes(System.Reflection.MemberInfo,System.Type)
  - System.Attribute.GetCustomAttributes(System.Reflection.MemberInfo,System.Type,System.Boolean)
  - System.Attribute.GetCustomAttributes(System.Reflection.Module)
  - System.Attribute.GetCustomAttributes(System.Reflection.Module,System.Boolean)
  - System.Attribute.GetCustomAttributes(System.Reflection.Module,System.Type)
  - System.Attribute.GetCustomAttributes(System.Reflection.Module,System.Type,System.Boolean)
  - System.Attribute.GetCustomAttributes(System.Reflection.ParameterInfo)
  - System.Attribute.GetCustomAttributes(System.Reflection.ParameterInfo,System.Boolean)
  - System.Attribute.GetCustomAttributes(System.Reflection.ParameterInfo,System.Type)
  - System.Attribute.GetCustomAttributes(System.Reflection.ParameterInfo,System.Type,System.Boolean)
  - System.Attribute.GetHashCode
  - System.Attribute.IsDefaultAttribute
  - System.Attribute.IsDefined(System.Reflection.Assembly,System.Type)
  - System.Attribute.IsDefined(System.Reflection.Assembly,System.Type,System.Boolean)
  - System.Attribute.IsDefined(System.Reflection.MemberInfo,System.Type)
  - System.Attribute.IsDefined(System.Reflection.MemberInfo,System.Type,System.Boolean)
  - System.Attribute.IsDefined(System.Reflection.Module,System.Type)
  - System.Attribute.IsDefined(System.Reflection.Module,System.Type,System.Boolean)
  - System.Attribute.IsDefined(System.Reflection.ParameterInfo,System.Type)
  - System.Attribute.IsDefined(System.Reflection.ParameterInfo,System.Type,System.Boolean)
  - System.Attribute.Match(System.Object)
  - System.Attribute.System#Runtime#InteropServices#_Attribute#GetIDsOfNames(System.Guid@,System.IntPtr,System.UInt32,System.UInt32,System.IntPtr)
  - System.Attribute.System#Runtime#InteropServices#_Attribute#GetTypeInfo(System.UInt32,System.UInt32,System.IntPtr)
  - System.Attribute.System#Runtime#InteropServices#_Attribute#GetTypeInfoCount(System.UInt32@)
  - System.Attribute.System#Runtime#InteropServices#_Attribute#Invoke(System.UInt32,System.Guid@,System.UInt32,System.Int16,System.IntPtr,System.IntPtr,System.IntPtr,System.IntPtr)
  - System.Attribute.TypeId
  - System.Object.Equals(System.Object,System.Object)
  - System.Object.GetType
  - System.Object.MemberwiseClone
  - System.Object.ReferenceEquals(System.Object,System.Object)
  - System.Object.ToString
  - System.Security.Permissions.SecurityAttribute.Action
  - System.Security.Permissions.SecurityAttribute.Unrestricted
  attributes:
  - type: System.AttributeUsageAttribute
  - type: System.Runtime.InteropServices.ComVisibleAttribute
  version:
  - netcore-2.0
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  - netstandard-2.0
  - xamarinandroid-7.1
  - xamarinios-10.8
  - xamarinmac-3.0
  monikers:
  - netcore-2.0
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  - netstandard-2.0
  - xamarinandroid-7.1
  - xamarinios-10.8
  - xamarinmac-3.0
  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Security.Permissions/SecurityPermissionAttribute.xml
  ms.technology:
  - dotnet-standard
  author: mairaw
  ms.author: mairaw
  manager: wpickett
- uid: System.Security.Permissions.SecurityPermissionAttribute.#ctor(System.Security.Permissions.SecurityAction)
  commentId: M:System.Security.Permissions.SecurityPermissionAttribute.#ctor(System.Security.Permissions.SecurityAction)
  id: '#ctor(System.Security.Permissions.SecurityAction)'
  parent: System.Security.Permissions.SecurityPermissionAttribute
  langs:
  - csharp
  name: SecurityPermissionAttribute(SecurityAction)
  nameWithType: SecurityPermissionAttribute.SecurityPermissionAttribute(SecurityAction)
  fullName: SecurityPermissionAttribute.SecurityPermissionAttribute(SecurityAction)
  type: Constructor
  assemblies:
  - mscorlib
  - netstandard
  - System.Runtime.Extensions
  namespace: System.Security.Permissions
  summary: Initializes a new instance of the <xref href="System.Security.Permissions.SecurityPermissionAttribute"></xref> class with the specified <xref href="System.Security.Permissions.SecurityAction"></xref>.
  syntax:
    content: public SecurityPermissionAttribute (System.Security.Permissions.SecurityAction action);
    parameters:
    - id: action
      type: System.Security.Permissions.SecurityAction
      description: One of the <xref href="System.Security.Permissions.SecurityAction"></xref> values.
  overload: System.Security.Permissions.SecurityPermissionAttribute.#ctor*
  exceptions: []
  version:
  - netcore-2.0
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  - netstandard-2.0
  - xamarinandroid-7.1
  - xamarinios-10.8
  - xamarinmac-3.0
  monikers:
  - netcore-2.0
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  - netstandard-2.0
  - xamarinandroid-7.1
  - xamarinios-10.8
  - xamarinmac-3.0
  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Security.Permissions/SecurityPermissionAttribute.xml
  ms.technology:
  - dotnet-standard
  author: mairaw
  ms.author: mairaw
  manager: wpickett
- uid: System.Security.Permissions.SecurityPermissionAttribute.Assertion
  commentId: P:System.Security.Permissions.SecurityPermissionAttribute.Assertion
  id: Assertion
  parent: System.Security.Permissions.SecurityPermissionAttribute
  langs:
  - csharp
  name: Assertion
  nameWithType: SecurityPermissionAttribute.Assertion
  fullName: SecurityPermissionAttribute.Assertion
  type: Property
  assemblies:
  - mscorlib
  - netstandard
  - System.Runtime.Extensions
  namespace: System.Security.Permissions
  summary: Gets or sets a value indicating whether permission to assert that all this code's callers have the requisite permission for the operation is declared.
  syntax:
    content: public bool Assertion { get; set; }
    return:
      type: System.Boolean
      description: '`true` if permission to assert is declared; otherwise, `false`.'
  overload: System.Security.Permissions.SecurityPermissionAttribute.Assertion*
  exceptions: []
  version:
  - netcore-2.0
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  - netstandard-2.0
  - xamarinandroid-7.1
  - xamarinios-10.8
  - xamarinmac-3.0
  monikers:
  - netcore-2.0
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  - netstandard-2.0
  - xamarinandroid-7.1
  - xamarinios-10.8
  - xamarinmac-3.0
  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Security.Permissions/SecurityPermissionAttribute.xml
  ms.technology:
  - dotnet-standard
  author: mairaw
  ms.author: mairaw
  manager: wpickett
- uid: System.Security.Permissions.SecurityPermissionAttribute.BindingRedirects
  commentId: P:System.Security.Permissions.SecurityPermissionAttribute.BindingRedirects
  id: BindingRedirects
  parent: System.Security.Permissions.SecurityPermissionAttribute
  langs:
  - csharp
  name: BindingRedirects
  nameWithType: SecurityPermissionAttribute.BindingRedirects
  fullName: SecurityPermissionAttribute.BindingRedirects
  type: Property
  assemblies:
  - mscorlib
  - netstandard
  - System.Runtime.Extensions
  namespace: System.Security.Permissions
  summary: Gets or sets a value that indicates whether code has permission to perform binding redirection in the application configuration file.
  remarks: This permission allows redirection of .NET Framework assemblies that have been unified, as well as other assemblies found outside the .NET Framework.
  syntax:
    content: public bool BindingRedirects { get; set; }
    return:
      type: System.Boolean
      description: '`true` if code can perform binding redirects; otherwise, `false`.'
  overload: System.Security.Permissions.SecurityPermissionAttribute.BindingRedirects*
  exceptions: []
  version:
  - netcore-2.0
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  - netstandard-2.0
  - xamarinandroid-7.1
  - xamarinios-10.8
  - xamarinmac-3.0
  monikers:
  - netcore-2.0
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  - netstandard-2.0
  - xamarinandroid-7.1
  - xamarinios-10.8
  - xamarinmac-3.0
  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Security.Permissions/SecurityPermissionAttribute.xml
  ms.technology:
  - dotnet-standard
  author: mairaw
  ms.author: mairaw
  manager: wpickett
- uid: System.Security.Permissions.SecurityPermissionAttribute.ControlAppDomain
  commentId: P:System.Security.Permissions.SecurityPermissionAttribute.ControlAppDomain
  id: ControlAppDomain
  parent: System.Security.Permissions.SecurityPermissionAttribute
  langs:
  - csharp
  name: ControlAppDomain
  nameWithType: SecurityPermissionAttribute.ControlAppDomain
  fullName: SecurityPermissionAttribute.ControlAppDomain
  type: Property
  assemblies:
  - mscorlib
  - netstandard
  - System.Runtime.Extensions
  namespace: System.Security.Permissions
  summary: Gets or sets a value indicating whether permission to manipulate <xref href="System.AppDomain"></xref> is declared.
  syntax:
    content: public bool ControlAppDomain { get; set; }
    return:
      type: System.Boolean
      description: '`true` if permission to manipulate <xref href="System.AppDomain"></xref> is declared; otherwise, `false`.'
  overload: System.Security.Permissions.SecurityPermissionAttribute.ControlAppDomain*
  exceptions: []
  version:
  - netcore-2.0
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  - netstandard-2.0
  - xamarinandroid-7.1
  - xamarinios-10.8
  - xamarinmac-3.0
  monikers:
  - netcore-2.0
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  - netstandard-2.0
  - xamarinandroid-7.1
  - xamarinios-10.8
  - xamarinmac-3.0
  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Security.Permissions/SecurityPermissionAttribute.xml
  ms.technology:
  - dotnet-standard
  author: mairaw
  ms.author: mairaw
  manager: wpickett
- uid: System.Security.Permissions.SecurityPermissionAttribute.ControlDomainPolicy
  commentId: P:System.Security.Permissions.SecurityPermissionAttribute.ControlDomainPolicy
  id: ControlDomainPolicy
  parent: System.Security.Permissions.SecurityPermissionAttribute
  langs:
  - csharp
  name: ControlDomainPolicy
  nameWithType: SecurityPermissionAttribute.ControlDomainPolicy
  fullName: SecurityPermissionAttribute.ControlDomainPolicy
  type: Property
  assemblies:
  - mscorlib
  - netstandard
  - System.Runtime.Extensions
  namespace: System.Security.Permissions
  summary: Gets or sets a value indicating whether permission to alter or manipulate domain security policy is declared.
  syntax:
    content: public bool ControlDomainPolicy { get; set; }
    return:
      type: System.Boolean
      description: '`true` if permission to alter or manipulate security policy in an application domain is declared; otherwise, `false`.'
  overload: System.Security.Permissions.SecurityPermissionAttribute.ControlDomainPolicy*
  exceptions: []
  version:
  - netcore-2.0
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  - netstandard-2.0
  - xamarinandroid-7.1
  - xamarinios-10.8
  - xamarinmac-3.0
  monikers:
  - netcore-2.0
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  - netstandard-2.0
  - xamarinandroid-7.1
  - xamarinios-10.8
  - xamarinmac-3.0
  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Security.Permissions/SecurityPermissionAttribute.xml
  ms.technology:
  - dotnet-standard
  author: mairaw
  ms.author: mairaw
  manager: wpickett
- uid: System.Security.Permissions.SecurityPermissionAttribute.ControlEvidence
  commentId: P:System.Security.Permissions.SecurityPermissionAttribute.ControlEvidence
  id: ControlEvidence
  parent: System.Security.Permissions.SecurityPermissionAttribute
  langs:
  - csharp
  name: ControlEvidence
  nameWithType: SecurityPermissionAttribute.ControlEvidence
  fullName: SecurityPermissionAttribute.ControlEvidence
  type: Property
  assemblies:
  - mscorlib
  - netstandard
  - System.Runtime.Extensions
  namespace: System.Security.Permissions
  summary: Gets or sets a value indicating whether permission to alter or manipulate evidence is declared.
  syntax:
    content: public bool ControlEvidence { get; set; }
    return:
      type: System.Boolean
      description: '`true` if the ability to alter or manipulate evidence is declared; otherwise, `false`.'
  overload: System.Security.Permissions.SecurityPermissionAttribute.ControlEvidence*
  exceptions: []
  version:
  - netcore-2.0
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  - netstandard-2.0
  - xamarinandroid-7.1
  - xamarinios-10.8
  - xamarinmac-3.0
  monikers:
  - netcore-2.0
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  - netstandard-2.0
  - xamarinandroid-7.1
  - xamarinios-10.8
  - xamarinmac-3.0
  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Security.Permissions/SecurityPermissionAttribute.xml
  ms.technology:
  - dotnet-standard
  author: mairaw
  ms.author: mairaw
  manager: wpickett
- uid: System.Security.Permissions.SecurityPermissionAttribute.ControlPolicy
  commentId: P:System.Security.Permissions.SecurityPermissionAttribute.ControlPolicy
  id: ControlPolicy
  parent: System.Security.Permissions.SecurityPermissionAttribute
  langs:
  - csharp
  name: ControlPolicy
  nameWithType: SecurityPermissionAttribute.ControlPolicy
  fullName: SecurityPermissionAttribute.ControlPolicy
  type: Property
  assemblies:
  - mscorlib
  - netstandard
  - System.Runtime.Extensions
  namespace: System.Security.Permissions
  summary: Gets or sets a value indicating whether permission to view and manipulate security policy is declared.
  syntax:
    content: public bool ControlPolicy { get; set; }
    return:
      type: System.Boolean
      description: '`true` if permission to manipulate security policy is declared; otherwise, `false`.'
  overload: System.Security.Permissions.SecurityPermissionAttribute.ControlPolicy*
  exceptions: []
  version:
  - netcore-2.0
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  - netstandard-2.0
  - xamarinandroid-7.1
  - xamarinios-10.8
  - xamarinmac-3.0
  monikers:
  - netcore-2.0
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  - netstandard-2.0
  - xamarinandroid-7.1
  - xamarinios-10.8
  - xamarinmac-3.0
  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Security.Permissions/SecurityPermissionAttribute.xml
  ms.technology:
  - dotnet-standard
  author: mairaw
  ms.author: mairaw
  manager: wpickett
- uid: System.Security.Permissions.SecurityPermissionAttribute.ControlPrincipal
  commentId: P:System.Security.Permissions.SecurityPermissionAttribute.ControlPrincipal
  id: ControlPrincipal
  parent: System.Security.Permissions.SecurityPermissionAttribute
  langs:
  - csharp
  name: ControlPrincipal
  nameWithType: SecurityPermissionAttribute.ControlPrincipal
  fullName: SecurityPermissionAttribute.ControlPrincipal
  type: Property
  assemblies:
  - mscorlib
  - netstandard
  - System.Runtime.Extensions
  namespace: System.Security.Permissions
  summary: Gets or sets a value indicating whether permission to manipulate the current principal is declared.
  syntax:
    content: public bool ControlPrincipal { get; set; }
    return:
      type: System.Boolean
      description: '`true` if permission to manipulate the current principal is declared; otherwise, `false`.'
  overload: System.Security.Permissions.SecurityPermissionAttribute.ControlPrincipal*
  exceptions: []
  version:
  - netcore-2.0
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  - netstandard-2.0
  - xamarinandroid-7.1
  - xamarinios-10.8
  - xamarinmac-3.0
  monikers:
  - netcore-2.0
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  - netstandard-2.0
  - xamarinandroid-7.1
  - xamarinios-10.8
  - xamarinmac-3.0
  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Security.Permissions/SecurityPermissionAttribute.xml
  ms.technology:
  - dotnet-standard
  author: mairaw
  ms.author: mairaw
  manager: wpickett
- uid: System.Security.Permissions.SecurityPermissionAttribute.ControlThread
  commentId: P:System.Security.Permissions.SecurityPermissionAttribute.ControlThread
  id: ControlThread
  parent: System.Security.Permissions.SecurityPermissionAttribute
  langs:
  - csharp
  name: ControlThread
  nameWithType: SecurityPermissionAttribute.ControlThread
  fullName: SecurityPermissionAttribute.ControlThread
  type: Property
  assemblies:
  - mscorlib
  - netstandard
  - System.Runtime.Extensions
  namespace: System.Security.Permissions
  summary: Gets or sets a value indicating whether permission to manipulate threads is declared.
  remarks: For more information, see <xref:System.Threading.Thread>.
  syntax:
    content: public bool ControlThread { get; set; }
    return:
      type: System.Boolean
      description: '`true` if permission to manipulate threads is declared; otherwise, `false`.'
  overload: System.Security.Permissions.SecurityPermissionAttribute.ControlThread*
  exceptions: []
  version:
  - netcore-2.0
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  - netstandard-2.0
  - xamarinandroid-7.1
  - xamarinios-10.8
  - xamarinmac-3.0
  monikers:
  - netcore-2.0
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  - netstandard-2.0
  - xamarinandroid-7.1
  - xamarinios-10.8
  - xamarinmac-3.0
  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Security.Permissions/SecurityPermissionAttribute.xml
  ms.technology:
  - dotnet-standard
  author: mairaw
  ms.author: mairaw
  manager: wpickett
- uid: System.Security.Permissions.SecurityPermissionAttribute.CreatePermission
  commentId: M:System.Security.Permissions.SecurityPermissionAttribute.CreatePermission
  id: CreatePermission
  parent: System.Security.Permissions.SecurityPermissionAttribute
  langs:
  - csharp
  name: CreatePermission()
  nameWithType: SecurityPermissionAttribute.CreatePermission()
  fullName: SecurityPermissionAttribute.CreatePermission()
  type: Method
  assemblies:
  - mscorlib
  - netstandard
  - System.Runtime.Extensions
  namespace: System.Security.Permissions
  summary: Creates and returns a new <xref href="System.Security.Permissions.SecurityPermission"></xref>.
  remarks: "This method should only be called by the security system, never by application code.  \n  \n At compile time, attributes convert security declarations to a serialized form in metadata. Declarative security data in metadata is created from the permission that this method returns that corresponds to this attribute."
  syntax:
    content: public override System.Security.IPermission CreatePermission ();
    parameters: []
    return:
      type: System.Security.IPermission
      description: A <xref href="System.Security.Permissions.SecurityPermission"></xref> that corresponds to this attribute.
  overload: System.Security.Permissions.SecurityPermissionAttribute.CreatePermission*
  exceptions: []
  version:
  - netcore-2.0
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  - netstandard-2.0
  - xamarinandroid-7.1
  - xamarinios-10.8
  - xamarinmac-3.0
  monikers:
  - netcore-2.0
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  - netstandard-2.0
  - xamarinandroid-7.1
  - xamarinios-10.8
  - xamarinmac-3.0
  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Security.Permissions/SecurityPermissionAttribute.xml
  ms.technology:
  - dotnet-standard
  author: mairaw
  ms.author: mairaw
  manager: wpickett
- uid: System.Security.Permissions.SecurityPermissionAttribute.Execution
  commentId: P:System.Security.Permissions.SecurityPermissionAttribute.Execution
  id: Execution
  parent: System.Security.Permissions.SecurityPermissionAttribute
  langs:
  - csharp
  name: Execution
  nameWithType: SecurityPermissionAttribute.Execution
  fullName: SecurityPermissionAttribute.Execution
  type: Property
  assemblies:
  - mscorlib
  - netstandard
  - System.Runtime.Extensions
  namespace: System.Security.Permissions
  summary: Gets or sets a value indicating whether permission to execute code is declared.
  remarks: A demand for <xref:System.Security.Permissions.SecurityPermissionFlag.Execution> permission at the assembly level is ignored. If an assembly has the right to execute, <xref:System.Security.Permissions.SecurityPermissionFlag.Execution> permission is automatically granted, and setting the <xref:System.Security.Permissions.SecurityPermissionAttribute.Execution%2A> property to either `true` or `false` has no effect.
  syntax:
    content: public bool Execution { get; set; }
    return:
      type: System.Boolean
      description: '`true` if permission to execute code is declared; otherwise, `false`.'
  overload: System.Security.Permissions.SecurityPermissionAttribute.Execution*
  exceptions: []
  version:
  - netcore-2.0
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  - netstandard-2.0
  - xamarinandroid-7.1
  - xamarinios-10.8
  - xamarinmac-3.0
  monikers:
  - netcore-2.0
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  - netstandard-2.0
  - xamarinandroid-7.1
  - xamarinios-10.8
  - xamarinmac-3.0
  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Security.Permissions/SecurityPermissionAttribute.xml
  ms.technology:
  - dotnet-standard
  author: mairaw
  ms.author: mairaw
  manager: wpickett
- uid: System.Security.Permissions.SecurityPermissionAttribute.Flags
  commentId: P:System.Security.Permissions.SecurityPermissionAttribute.Flags
  id: Flags
  parent: System.Security.Permissions.SecurityPermissionAttribute
  langs:
  - csharp
  name: Flags
  nameWithType: SecurityPermissionAttribute.Flags
  fullName: SecurityPermissionAttribute.Flags
  type: Property
  assemblies:
  - mscorlib
  - netstandard
  - System.Runtime.Extensions
  namespace: System.Security.Permissions
  summary: Gets or sets all permission flags comprising the <xref href="System.Security.Permissions.SecurityPermission"></xref> permissions.
  syntax:
    content: public System.Security.Permissions.SecurityPermissionFlag Flags { get; set; }
    return:
      type: System.Security.Permissions.SecurityPermissionFlag
      description: One or more of the <xref href="System.Security.Permissions.SecurityPermissionFlag"></xref> values combined using a bitwise OR.
  overload: System.Security.Permissions.SecurityPermissionAttribute.Flags*
  exceptions:
  - type: System.ArgumentException
    commentId: T:System.ArgumentException
    description: An attempt is made to set this property to an invalid value. See <xref href="System.Security.Permissions.SecurityPermissionFlag"></xref> for the valid values.
  version:
  - netcore-2.0
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  - netstandard-2.0
  - xamarinandroid-7.1
  - xamarinios-10.8
  - xamarinmac-3.0
  monikers:
  - netcore-2.0
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  - netstandard-2.0
  - xamarinandroid-7.1
  - xamarinios-10.8
  - xamarinmac-3.0
  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Security.Permissions/SecurityPermissionAttribute.xml
  ms.technology:
  - dotnet-standard
  author: mairaw
  ms.author: mairaw
  manager: wpickett
- uid: System.Security.Permissions.SecurityPermissionAttribute.Infrastructure
  commentId: P:System.Security.Permissions.SecurityPermissionAttribute.Infrastructure
  id: Infrastructure
  parent: System.Security.Permissions.SecurityPermissionAttribute
  langs:
  - csharp
  name: Infrastructure
  nameWithType: SecurityPermissionAttribute.Infrastructure
  fullName: SecurityPermissionAttribute.Infrastructure
  type: Property
  assemblies:
  - mscorlib
  - netstandard
  - System.Runtime.Extensions
  namespace: System.Security.Permissions
  summary: Gets or sets a value indicating whether code can plug into the common language runtime infrastructure, such as adding Remoting Context Sinks, Envoy Sinks and Dynamic Sinks.
  syntax:
    content: >-
      [System.Runtime.InteropServices.ComVisible(true)]

      public bool Infrastructure { get; set; }
    return:
      type: System.Boolean
      description: '`true` if code can plug into the common language runtime infrastructure; otherwise, `false`.'
  overload: System.Security.Permissions.SecurityPermissionAttribute.Infrastructure*
  exceptions: []
  attributes:
  - type: System.Runtime.InteropServices.ComVisibleAttribute
  version:
  - netcore-2.0
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  - netstandard-2.0
  - xamarinandroid-7.1
  - xamarinios-10.8
  - xamarinmac-3.0
  monikers:
  - netcore-2.0
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  - netstandard-2.0
  - xamarinandroid-7.1
  - xamarinios-10.8
  - xamarinmac-3.0
  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Security.Permissions/SecurityPermissionAttribute.xml
  ms.technology:
  - dotnet-standard
  author: mairaw
  ms.author: mairaw
  manager: wpickett
- uid: System.Security.Permissions.SecurityPermissionAttribute.RemotingConfiguration
  commentId: P:System.Security.Permissions.SecurityPermissionAttribute.RemotingConfiguration
  id: RemotingConfiguration
  parent: System.Security.Permissions.SecurityPermissionAttribute
  langs:
  - csharp
  name: RemotingConfiguration
  nameWithType: SecurityPermissionAttribute.RemotingConfiguration
  fullName: SecurityPermissionAttribute.RemotingConfiguration
  type: Property
  assemblies:
  - mscorlib
  - netstandard
  - System.Runtime.Extensions
  namespace: System.Security.Permissions
  summary: Gets or sets a value indicating whether code can configure remoting types and channels.
  syntax:
    content: public bool RemotingConfiguration { get; set; }
    return:
      type: System.Boolean
      description: '`true` if code can configure remoting types and channels; otherwise, `false`.'
  overload: System.Security.Permissions.SecurityPermissionAttribute.RemotingConfiguration*
  exceptions: []
  version:
  - netcore-2.0
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  - netstandard-2.0
  - xamarinandroid-7.1
  - xamarinios-10.8
  - xamarinmac-3.0
  monikers:
  - netcore-2.0
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  - netstandard-2.0
  - xamarinandroid-7.1
  - xamarinios-10.8
  - xamarinmac-3.0
  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Security.Permissions/SecurityPermissionAttribute.xml
  ms.technology:
  - dotnet-standard
  author: mairaw
  ms.author: mairaw
  manager: wpickett
- uid: System.Security.Permissions.SecurityPermissionAttribute.SerializationFormatter
  commentId: P:System.Security.Permissions.SecurityPermissionAttribute.SerializationFormatter
  id: SerializationFormatter
  parent: System.Security.Permissions.SecurityPermissionAttribute
  langs:
  - csharp
  name: SerializationFormatter
  nameWithType: SecurityPermissionAttribute.SerializationFormatter
  fullName: SecurityPermissionAttribute.SerializationFormatter
  type: Property
  assemblies:
  - mscorlib
  - netstandard
  - System.Runtime.Extensions
  namespace: System.Security.Permissions
  summary: Gets or sets a value indicating whether code can use a serialization formatter to serialize or deserialize an object.
  syntax:
    content: public bool SerializationFormatter { get; set; }
    return:
      type: System.Boolean
      description: '`true` if code can use a serialization formatter to serialize or deserialize an object; otherwise, `false`.'
  overload: System.Security.Permissions.SecurityPermissionAttribute.SerializationFormatter*
  exceptions: []
  version:
  - netcore-2.0
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  - netstandard-2.0
  - xamarinandroid-7.1
  - xamarinios-10.8
  - xamarinmac-3.0
  monikers:
  - netcore-2.0
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  - netstandard-2.0
  - xamarinandroid-7.1
  - xamarinios-10.8
  - xamarinmac-3.0
  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Security.Permissions/SecurityPermissionAttribute.xml
  ms.technology:
  - dotnet-standard
  author: mairaw
  ms.author: mairaw
  manager: wpickett
- uid: System.Security.Permissions.SecurityPermissionAttribute.SkipVerification
  commentId: P:System.Security.Permissions.SecurityPermissionAttribute.SkipVerification
  id: SkipVerification
  parent: System.Security.Permissions.SecurityPermissionAttribute
  langs:
  - csharp
  name: SkipVerification
  nameWithType: SecurityPermissionAttribute.SkipVerification
  fullName: SecurityPermissionAttribute.SkipVerification
  type: Property
  assemblies:
  - mscorlib
  - netstandard
  - System.Runtime.Extensions
  namespace: System.Security.Permissions
  summary: Gets or sets a value indicating whether permission to bypass code verification is declared.
  remarks: >-
    > [!CAUTION]

    >  This is a powerful permission that should be granted only to highly trusted code.
  syntax:
    content: public bool SkipVerification { get; set; }
    return:
      type: System.Boolean
      description: '`true` if permission to bypass code verification is declared; otherwise, `false`.'
  overload: System.Security.Permissions.SecurityPermissionAttribute.SkipVerification*
  exceptions: []
  version:
  - netcore-2.0
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  - netstandard-2.0
  - xamarinandroid-7.1
  - xamarinios-10.8
  - xamarinmac-3.0
  monikers:
  - netcore-2.0
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  - netstandard-2.0
  - xamarinandroid-7.1
  - xamarinios-10.8
  - xamarinmac-3.0
  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Security.Permissions/SecurityPermissionAttribute.xml
  ms.technology:
  - dotnet-standard
  author: mairaw
  ms.author: mairaw
  manager: wpickett
- uid: System.Security.Permissions.SecurityPermissionAttribute.UnmanagedCode
  commentId: P:System.Security.Permissions.SecurityPermissionAttribute.UnmanagedCode
  id: UnmanagedCode
  parent: System.Security.Permissions.SecurityPermissionAttribute
  langs:
  - csharp
  name: UnmanagedCode
  nameWithType: SecurityPermissionAttribute.UnmanagedCode
  fullName: SecurityPermissionAttribute.UnmanagedCode
  type: Property
  assemblies:
  - mscorlib
  - netstandard
  - System.Runtime.Extensions
  namespace: System.Security.Permissions
  summary: Gets or sets a value indicating whether permission to call unmanaged code is declared.
  syntax:
    content: public bool UnmanagedCode { get; set; }
    return:
      type: System.Boolean
      description: '`true` if permission to call unmanaged code is declared; otherwise, `false`.'
  overload: System.Security.Permissions.SecurityPermissionAttribute.UnmanagedCode*
  exceptions: []
  version:
  - netcore-2.0
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  - netstandard-2.0
  - xamarinandroid-7.1
  - xamarinios-10.8
  - xamarinmac-3.0
  monikers:
  - netcore-2.0
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  - netstandard-2.0
  - xamarinandroid-7.1
  - xamarinios-10.8
  - xamarinmac-3.0
  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Security.Permissions/SecurityPermissionAttribute.xml
  ms.technology:
  - dotnet-standard
  author: mairaw
  ms.author: mairaw
  manager: wpickett
references:
- uid: System.Security.Permissions.CodeAccessSecurityAttribute
  parent: System.Security.Permissions
  isExternal: false
  name: CodeAccessSecurityAttribute
  nameWithType: CodeAccessSecurityAttribute
  fullName: System.Security.Permissions.CodeAccessSecurityAttribute
- uid: System.ArgumentException
  parent: System
  isExternal: false
  name: ArgumentException
  nameWithType: ArgumentException
  fullName: System.ArgumentException
- uid: System.Security.Permissions.SecurityPermissionAttribute.#ctor(System.Security.Permissions.SecurityAction)
  parent: System.Security.Permissions.SecurityPermissionAttribute
  isExternal: false
  name: SecurityPermissionAttribute(SecurityAction)
  nameWithType: SecurityPermissionAttribute.SecurityPermissionAttribute(SecurityAction)
  fullName: SecurityPermissionAttribute.SecurityPermissionAttribute(SecurityAction)
- uid: System.Security.Permissions.SecurityAction
  parent: System.Security.Permissions
  isExternal: false
  name: SecurityAction
  nameWithType: SecurityAction
  fullName: System.Security.Permissions.SecurityAction
- uid: System.Security.Permissions.SecurityPermissionAttribute.Assertion
  parent: System.Security.Permissions.SecurityPermissionAttribute
  isExternal: false
  name: Assertion
  nameWithType: SecurityPermissionAttribute.Assertion
  fullName: SecurityPermissionAttribute.Assertion
- uid: System.Boolean
  parent: System
  isExternal: false
  name: Boolean
  nameWithType: Boolean
  fullName: System.Boolean
- uid: System.Security.Permissions.SecurityPermissionAttribute.BindingRedirects
  parent: System.Security.Permissions.SecurityPermissionAttribute
  isExternal: false
  name: BindingRedirects
  nameWithType: SecurityPermissionAttribute.BindingRedirects
  fullName: SecurityPermissionAttribute.BindingRedirects
- uid: System.Security.Permissions.SecurityPermissionAttribute.ControlAppDomain
  parent: System.Security.Permissions.SecurityPermissionAttribute
  isExternal: false
  name: ControlAppDomain
  nameWithType: SecurityPermissionAttribute.ControlAppDomain
  fullName: SecurityPermissionAttribute.ControlAppDomain
- uid: System.Security.Permissions.SecurityPermissionAttribute.ControlDomainPolicy
  parent: System.Security.Permissions.SecurityPermissionAttribute
  isExternal: false
  name: ControlDomainPolicy
  nameWithType: SecurityPermissionAttribute.ControlDomainPolicy
  fullName: SecurityPermissionAttribute.ControlDomainPolicy
- uid: System.Security.Permissions.SecurityPermissionAttribute.ControlEvidence
  parent: System.Security.Permissions.SecurityPermissionAttribute
  isExternal: false
  name: ControlEvidence
  nameWithType: SecurityPermissionAttribute.ControlEvidence
  fullName: SecurityPermissionAttribute.ControlEvidence
- uid: System.Security.Permissions.SecurityPermissionAttribute.ControlPolicy
  parent: System.Security.Permissions.SecurityPermissionAttribute
  isExternal: false
  name: ControlPolicy
  nameWithType: SecurityPermissionAttribute.ControlPolicy
  fullName: SecurityPermissionAttribute.ControlPolicy
- uid: System.Security.Permissions.SecurityPermissionAttribute.ControlPrincipal
  parent: System.Security.Permissions.SecurityPermissionAttribute
  isExternal: false
  name: ControlPrincipal
  nameWithType: SecurityPermissionAttribute.ControlPrincipal
  fullName: SecurityPermissionAttribute.ControlPrincipal
- uid: System.Security.Permissions.SecurityPermissionAttribute.ControlThread
  parent: System.Security.Permissions.SecurityPermissionAttribute
  isExternal: false
  name: ControlThread
  nameWithType: SecurityPermissionAttribute.ControlThread
  fullName: SecurityPermissionAttribute.ControlThread
- uid: System.Security.Permissions.SecurityPermissionAttribute.CreatePermission
  parent: System.Security.Permissions.SecurityPermissionAttribute
  isExternal: false
  name: CreatePermission()
  nameWithType: SecurityPermissionAttribute.CreatePermission()
  fullName: SecurityPermissionAttribute.CreatePermission()
- uid: System.Security.IPermission
  parent: System.Security
  isExternal: false
  name: IPermission
  nameWithType: IPermission
  fullName: System.Security.IPermission
- uid: System.Security.Permissions.SecurityPermissionAttribute.Execution
  parent: System.Security.Permissions.SecurityPermissionAttribute
  isExternal: false
  name: Execution
  nameWithType: SecurityPermissionAttribute.Execution
  fullName: SecurityPermissionAttribute.Execution
- uid: System.Security.Permissions.SecurityPermissionAttribute.Flags
  parent: System.Security.Permissions.SecurityPermissionAttribute
  isExternal: false
  name: Flags
  nameWithType: SecurityPermissionAttribute.Flags
  fullName: SecurityPermissionAttribute.Flags
- uid: System.Security.Permissions.SecurityPermissionFlag
  parent: System.Security.Permissions
  isExternal: false
  name: SecurityPermissionFlag
  nameWithType: SecurityPermissionFlag
  fullName: System.Security.Permissions.SecurityPermissionFlag
- uid: System.Security.Permissions.SecurityPermissionAttribute.Infrastructure
  parent: System.Security.Permissions.SecurityPermissionAttribute
  isExternal: false
  name: Infrastructure
  nameWithType: SecurityPermissionAttribute.Infrastructure
  fullName: SecurityPermissionAttribute.Infrastructure
- uid: System.Security.Permissions.SecurityPermissionAttribute.RemotingConfiguration
  parent: System.Security.Permissions.SecurityPermissionAttribute
  isExternal: false
  name: RemotingConfiguration
  nameWithType: SecurityPermissionAttribute.RemotingConfiguration
  fullName: SecurityPermissionAttribute.RemotingConfiguration
- uid: System.Security.Permissions.SecurityPermissionAttribute.SerializationFormatter
  parent: System.Security.Permissions.SecurityPermissionAttribute
  isExternal: false
  name: SerializationFormatter
  nameWithType: SecurityPermissionAttribute.SerializationFormatter
  fullName: SecurityPermissionAttribute.SerializationFormatter
- uid: System.Security.Permissions.SecurityPermissionAttribute.SkipVerification
  parent: System.Security.Permissions.SecurityPermissionAttribute
  isExternal: false
  name: SkipVerification
  nameWithType: SecurityPermissionAttribute.SkipVerification
  fullName: SecurityPermissionAttribute.SkipVerification
- uid: System.Security.Permissions.SecurityPermissionAttribute.UnmanagedCode
  parent: System.Security.Permissions.SecurityPermissionAttribute
  isExternal: false
  name: UnmanagedCode
  nameWithType: SecurityPermissionAttribute.UnmanagedCode
  fullName: SecurityPermissionAttribute.UnmanagedCode
- uid: System.Security.Permissions.SecurityPermissionAttribute.#ctor*
  parent: System.Security.Permissions.SecurityPermissionAttribute
  isExternal: false
  name: SecurityPermissionAttribute
  nameWithType: SecurityPermissionAttribute.SecurityPermissionAttribute
  fullName: SecurityPermissionAttribute.SecurityPermissionAttribute
  monikers:
  - netcore-2.0
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  - netstandard-2.0
  - xamarinandroid-7.1
  - xamarinios-10.8
  - xamarinmac-3.0
  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Security.Permissions/SecurityPermissionAttribute.xml
- uid: System.Security.Permissions.SecurityPermissionAttribute.Assertion*
  parent: System.Security.Permissions.SecurityPermissionAttribute
  isExternal: false
  name: Assertion
  nameWithType: SecurityPermissionAttribute.Assertion
  fullName: SecurityPermissionAttribute.Assertion
  monikers:
  - netcore-2.0
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  - netstandard-2.0
  - xamarinandroid-7.1
  - xamarinios-10.8
  - xamarinmac-3.0
  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Security.Permissions/SecurityPermissionAttribute.xml
- uid: System.Security.Permissions.SecurityPermissionAttribute.BindingRedirects*
  parent: System.Security.Permissions.SecurityPermissionAttribute
  isExternal: false
  name: BindingRedirects
  nameWithType: SecurityPermissionAttribute.BindingRedirects
  fullName: SecurityPermissionAttribute.BindingRedirects
  monikers:
  - netcore-2.0
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  - netstandard-2.0
  - xamarinandroid-7.1
  - xamarinios-10.8
  - xamarinmac-3.0
  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Security.Permissions/SecurityPermissionAttribute.xml
- uid: System.Security.Permissions.SecurityPermissionAttribute.ControlAppDomain*
  parent: System.Security.Permissions.SecurityPermissionAttribute
  isExternal: false
  name: ControlAppDomain
  nameWithType: SecurityPermissionAttribute.ControlAppDomain
  fullName: SecurityPermissionAttribute.ControlAppDomain
  monikers:
  - netcore-2.0
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  - netstandard-2.0
  - xamarinandroid-7.1
  - xamarinios-10.8
  - xamarinmac-3.0
  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Security.Permissions/SecurityPermissionAttribute.xml
- uid: System.Security.Permissions.SecurityPermissionAttribute.ControlDomainPolicy*
  parent: System.Security.Permissions.SecurityPermissionAttribute
  isExternal: false
  name: ControlDomainPolicy
  nameWithType: SecurityPermissionAttribute.ControlDomainPolicy
  fullName: SecurityPermissionAttribute.ControlDomainPolicy
  monikers:
  - netcore-2.0
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  - netstandard-2.0
  - xamarinandroid-7.1
  - xamarinios-10.8
  - xamarinmac-3.0
  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Security.Permissions/SecurityPermissionAttribute.xml
- uid: System.Security.Permissions.SecurityPermissionAttribute.ControlEvidence*
  parent: System.Security.Permissions.SecurityPermissionAttribute
  isExternal: false
  name: ControlEvidence
  nameWithType: SecurityPermissionAttribute.ControlEvidence
  fullName: SecurityPermissionAttribute.ControlEvidence
  monikers:
  - netcore-2.0
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  - netstandard-2.0
  - xamarinandroid-7.1
  - xamarinios-10.8
  - xamarinmac-3.0
  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Security.Permissions/SecurityPermissionAttribute.xml
- uid: System.Security.Permissions.SecurityPermissionAttribute.ControlPolicy*
  parent: System.Security.Permissions.SecurityPermissionAttribute
  isExternal: false
  name: ControlPolicy
  nameWithType: SecurityPermissionAttribute.ControlPolicy
  fullName: SecurityPermissionAttribute.ControlPolicy
  monikers:
  - netcore-2.0
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  - netstandard-2.0
  - xamarinandroid-7.1
  - xamarinios-10.8
  - xamarinmac-3.0
  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Security.Permissions/SecurityPermissionAttribute.xml
- uid: System.Security.Permissions.SecurityPermissionAttribute.ControlPrincipal*
  parent: System.Security.Permissions.SecurityPermissionAttribute
  isExternal: false
  name: ControlPrincipal
  nameWithType: SecurityPermissionAttribute.ControlPrincipal
  fullName: SecurityPermissionAttribute.ControlPrincipal
  monikers:
  - netcore-2.0
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  - netstandard-2.0
  - xamarinandroid-7.1
  - xamarinios-10.8
  - xamarinmac-3.0
  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Security.Permissions/SecurityPermissionAttribute.xml
- uid: System.Security.Permissions.SecurityPermissionAttribute.ControlThread*
  parent: System.Security.Permissions.SecurityPermissionAttribute
  isExternal: false
  name: ControlThread
  nameWithType: SecurityPermissionAttribute.ControlThread
  fullName: SecurityPermissionAttribute.ControlThread
  monikers:
  - netcore-2.0
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  - netstandard-2.0
  - xamarinandroid-7.1
  - xamarinios-10.8
  - xamarinmac-3.0
  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Security.Permissions/SecurityPermissionAttribute.xml
- uid: System.Security.Permissions.SecurityPermissionAttribute.CreatePermission*
  parent: System.Security.Permissions.SecurityPermissionAttribute
  isExternal: false
  name: CreatePermission
  nameWithType: SecurityPermissionAttribute.CreatePermission
  fullName: SecurityPermissionAttribute.CreatePermission
  monikers:
  - netcore-2.0
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  - netstandard-2.0
  - xamarinandroid-7.1
  - xamarinios-10.8
  - xamarinmac-3.0
  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Security.Permissions/SecurityPermissionAttribute.xml
- uid: System.Security.Permissions.SecurityPermissionAttribute.Execution*
  parent: System.Security.Permissions.SecurityPermissionAttribute
  isExternal: false
  name: Execution
  nameWithType: SecurityPermissionAttribute.Execution
  fullName: SecurityPermissionAttribute.Execution
  monikers:
  - netcore-2.0
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  - netstandard-2.0
  - xamarinandroid-7.1
  - xamarinios-10.8
  - xamarinmac-3.0
  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Security.Permissions/SecurityPermissionAttribute.xml
- uid: System.Security.Permissions.SecurityPermissionAttribute.Flags*
  parent: System.Security.Permissions.SecurityPermissionAttribute
  isExternal: false
  name: Flags
  nameWithType: SecurityPermissionAttribute.Flags
  fullName: SecurityPermissionAttribute.Flags
  monikers:
  - netcore-2.0
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  - netstandard-2.0
  - xamarinandroid-7.1
  - xamarinios-10.8
  - xamarinmac-3.0
  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Security.Permissions/SecurityPermissionAttribute.xml
- uid: System.Security.Permissions.SecurityPermissionAttribute.Infrastructure*
  parent: System.Security.Permissions.SecurityPermissionAttribute
  isExternal: false
  name: Infrastructure
  nameWithType: SecurityPermissionAttribute.Infrastructure
  fullName: SecurityPermissionAttribute.Infrastructure
  monikers:
  - netcore-2.0
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  - netstandard-2.0
  - xamarinandroid-7.1
  - xamarinios-10.8
  - xamarinmac-3.0
  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Security.Permissions/SecurityPermissionAttribute.xml
- uid: System.Security.Permissions.SecurityPermissionAttribute.RemotingConfiguration*
  parent: System.Security.Permissions.SecurityPermissionAttribute
  isExternal: false
  name: RemotingConfiguration
  nameWithType: SecurityPermissionAttribute.RemotingConfiguration
  fullName: SecurityPermissionAttribute.RemotingConfiguration
  monikers:
  - netcore-2.0
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  - netstandard-2.0
  - xamarinandroid-7.1
  - xamarinios-10.8
  - xamarinmac-3.0
  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Security.Permissions/SecurityPermissionAttribute.xml
- uid: System.Security.Permissions.SecurityPermissionAttribute.SerializationFormatter*
  parent: System.Security.Permissions.SecurityPermissionAttribute
  isExternal: false
  name: SerializationFormatter
  nameWithType: SecurityPermissionAttribute.SerializationFormatter
  fullName: SecurityPermissionAttribute.SerializationFormatter
  monikers:
  - netcore-2.0
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  - netstandard-2.0
  - xamarinandroid-7.1
  - xamarinios-10.8
  - xamarinmac-3.0
  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Security.Permissions/SecurityPermissionAttribute.xml
- uid: System.Security.Permissions.SecurityPermissionAttribute.SkipVerification*
  parent: System.Security.Permissions.SecurityPermissionAttribute
  isExternal: false
  name: SkipVerification
  nameWithType: SecurityPermissionAttribute.SkipVerification
  fullName: SecurityPermissionAttribute.SkipVerification
  monikers:
  - netcore-2.0
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  - netstandard-2.0
  - xamarinandroid-7.1
  - xamarinios-10.8
  - xamarinmac-3.0
  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Security.Permissions/SecurityPermissionAttribute.xml
- uid: System.Security.Permissions.SecurityPermissionAttribute.UnmanagedCode*
  parent: System.Security.Permissions.SecurityPermissionAttribute
  isExternal: false
  name: UnmanagedCode
  nameWithType: SecurityPermissionAttribute.UnmanagedCode
  fullName: SecurityPermissionAttribute.UnmanagedCode
  monikers:
  - netcore-2.0
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  - netstandard-2.0
  - xamarinandroid-7.1
  - xamarinios-10.8
  - xamarinmac-3.0
  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Security.Permissions/SecurityPermissionAttribute.xml
- uid: System.Attribute.Equals(System.Object)
  parent: System.Attribute
  isExternal: false
  name: Equals(Object)
  nameWithType: Attribute.Equals(Object)
  fullName: Attribute.Equals(Object)
- uid: System.Object.Equals(System.Object,System.Object)
  parent: System.Object
  isExternal: false
  name: Equals(Object, Object)
  nameWithType: Object.Equals(Object, Object)
  fullName: Object.Equals(Object, Object)
- uid: System.Attribute.GetHashCode
  parent: System.Attribute
  isExternal: false
  name: GetHashCode()
  nameWithType: Attribute.GetHashCode()
  fullName: Attribute.GetHashCode()
- uid: System.Object.GetType
  parent: System.Object
  isExternal: false
  name: GetType()
  nameWithType: Object.GetType()
  fullName: Object.GetType()
- uid: System.Object.MemberwiseClone
  parent: System.Object
  isExternal: false
  name: MemberwiseClone()
  nameWithType: Object.MemberwiseClone()
  fullName: Object.MemberwiseClone()
- uid: System.Object.ReferenceEquals(System.Object,System.Object)
  parent: System.Object
  isExternal: false
  name: ReferenceEquals(Object, Object)
  nameWithType: Object.ReferenceEquals(Object, Object)
  fullName: Object.ReferenceEquals(Object, Object)
- uid: System.Object.ToString
  parent: System.Object
  isExternal: false
  name: ToString()
  nameWithType: Object.ToString()
  fullName: Object.ToString()
- uid: System.Attribute.GetCustomAttribute(System.Reflection.ParameterInfo,System.Type,System.Boolean)
  parent: System.Attribute
  isExternal: false
  name: GetCustomAttribute(ParameterInfo, Type, Boolean)
  nameWithType: Attribute.GetCustomAttribute(ParameterInfo, Type, Boolean)
  fullName: Attribute.GetCustomAttribute(ParameterInfo, Type, Boolean)
- uid: System.Attribute.GetCustomAttribute(System.Reflection.MemberInfo,System.Type,System.Boolean)
  parent: System.Attribute
  isExternal: false
  name: GetCustomAttribute(MemberInfo, Type, Boolean)
  nameWithType: Attribute.GetCustomAttribute(MemberInfo, Type, Boolean)
  fullName: Attribute.GetCustomAttribute(MemberInfo, Type, Boolean)
- uid: System.Attribute.GetCustomAttribute(System.Reflection.Assembly,System.Type,System.Boolean)
  parent: System.Attribute
  isExternal: false
  name: GetCustomAttribute(Assembly, Type, Boolean)
  nameWithType: Attribute.GetCustomAttribute(Assembly, Type, Boolean)
  fullName: Attribute.GetCustomAttribute(Assembly, Type, Boolean)
- uid: System.Attribute.GetCustomAttribute(System.Reflection.Module,System.Type,System.Boolean)
  parent: System.Attribute
  isExternal: false
  name: GetCustomAttribute(Module, Type, Boolean)
  nameWithType: Attribute.GetCustomAttribute(Module, Type, Boolean)
  fullName: Attribute.GetCustomAttribute(Module, Type, Boolean)
- uid: System.Attribute.GetCustomAttribute(System.Reflection.Module,System.Type)
  parent: System.Attribute
  isExternal: false
  name: GetCustomAttribute(Module, Type)
  nameWithType: Attribute.GetCustomAttribute(Module, Type)
  fullName: Attribute.GetCustomAttribute(Module, Type)
- uid: System.Attribute.GetCustomAttribute(System.Reflection.MemberInfo,System.Type)
  parent: System.Attribute
  isExternal: false
  name: GetCustomAttribute(MemberInfo, Type)
  nameWithType: Attribute.GetCustomAttribute(MemberInfo, Type)
  fullName: Attribute.GetCustomAttribute(MemberInfo, Type)
- uid: System.Attribute.GetCustomAttribute(System.Reflection.Assembly,System.Type)
  parent: System.Attribute
  isExternal: false
  name: GetCustomAttribute(Assembly, Type)
  nameWithType: Attribute.GetCustomAttribute(Assembly, Type)
  fullName: Attribute.GetCustomAttribute(Assembly, Type)
- uid: System.Attribute.GetCustomAttribute(System.Reflection.ParameterInfo,System.Type)
  parent: System.Attribute
  isExternal: false
  name: GetCustomAttribute(ParameterInfo, Type)
  nameWithType: Attribute.GetCustomAttribute(ParameterInfo, Type)
  fullName: Attribute.GetCustomAttribute(ParameterInfo, Type)
- uid: System.Attribute.GetCustomAttributes(System.Reflection.Module,System.Type)
  parent: System.Attribute
  isExternal: false
  name: GetCustomAttributes(Module, Type)
  nameWithType: Attribute.GetCustomAttributes(Module, Type)
  fullName: Attribute.GetCustomAttributes(Module, Type)
- uid: System.Attribute.GetCustomAttributes(System.Reflection.ParameterInfo,System.Type,System.Boolean)
  parent: System.Attribute
  isExternal: false
  name: GetCustomAttributes(ParameterInfo, Type, Boolean)
  nameWithType: Attribute.GetCustomAttributes(ParameterInfo, Type, Boolean)
  fullName: Attribute.GetCustomAttributes(ParameterInfo, Type, Boolean)
- uid: System.Attribute.GetCustomAttributes(System.Reflection.Module,System.Type,System.Boolean)
  parent: System.Attribute
  isExternal: false
  name: GetCustomAttributes(Module, Type, Boolean)
  nameWithType: Attribute.GetCustomAttributes(Module, Type, Boolean)
  fullName: Attribute.GetCustomAttributes(Module, Type, Boolean)
- uid: System.Attribute.GetCustomAttributes(System.Reflection.MemberInfo,System.Type,System.Boolean)
  parent: System.Attribute
  isExternal: false
  name: GetCustomAttributes(MemberInfo, Type, Boolean)
  nameWithType: Attribute.GetCustomAttributes(MemberInfo, Type, Boolean)
  fullName: Attribute.GetCustomAttributes(MemberInfo, Type, Boolean)
- uid: System.Attribute.GetCustomAttributes(System.Reflection.Assembly,System.Type,System.Boolean)
  parent: System.Attribute
  isExternal: false
  name: GetCustomAttributes(Assembly, Type, Boolean)
  nameWithType: Attribute.GetCustomAttributes(Assembly, Type, Boolean)
  fullName: Attribute.GetCustomAttributes(Assembly, Type, Boolean)
- uid: System.Attribute.GetCustomAttributes(System.Reflection.ParameterInfo,System.Type)
  parent: System.Attribute
  isExternal: false
  name: GetCustomAttributes(ParameterInfo, Type)
  nameWithType: Attribute.GetCustomAttributes(ParameterInfo, Type)
  fullName: Attribute.GetCustomAttributes(ParameterInfo, Type)
- uid: System.Attribute.GetCustomAttributes(System.Reflection.Module,System.Boolean)
  parent: System.Attribute
  isExternal: false
  name: GetCustomAttributes(Module, Boolean)
  nameWithType: Attribute.GetCustomAttributes(Module, Boolean)
  fullName: Attribute.GetCustomAttributes(Module, Boolean)
- uid: System.Attribute.GetCustomAttributes(System.Reflection.ParameterInfo,System.Boolean)
  parent: System.Attribute
  isExternal: false
  name: GetCustomAttributes(ParameterInfo, Boolean)
  nameWithType: Attribute.GetCustomAttributes(ParameterInfo, Boolean)
  fullName: Attribute.GetCustomAttributes(ParameterInfo, Boolean)
- uid: System.Attribute.GetCustomAttributes(System.Reflection.MemberInfo,System.Boolean)
  parent: System.Attribute
  isExternal: false
  name: GetCustomAttributes(MemberInfo, Boolean)
  nameWithType: Attribute.GetCustomAttributes(MemberInfo, Boolean)
  fullName: Attribute.GetCustomAttributes(MemberInfo, Boolean)
- uid: System.Attribute.GetCustomAttributes(System.Reflection.Assembly,System.Type)
  parent: System.Attribute
  isExternal: false
  name: GetCustomAttributes(Assembly, Type)
  nameWithType: Attribute.GetCustomAttributes(Assembly, Type)
  fullName: Attribute.GetCustomAttributes(Assembly, Type)
- uid: System.Attribute.GetCustomAttributes(System.Reflection.Assembly,System.Boolean)
  parent: System.Attribute
  isExternal: false
  name: GetCustomAttributes(Assembly, Boolean)
  nameWithType: Attribute.GetCustomAttributes(Assembly, Boolean)
  fullName: Attribute.GetCustomAttributes(Assembly, Boolean)
- uid: System.Attribute.GetCustomAttributes(System.Reflection.ParameterInfo)
  parent: System.Attribute
  isExternal: false
  name: GetCustomAttributes(ParameterInfo)
  nameWithType: Attribute.GetCustomAttributes(ParameterInfo)
  fullName: Attribute.GetCustomAttributes(ParameterInfo)
- uid: System.Attribute.GetCustomAttributes(System.Reflection.Module)
  parent: System.Attribute
  isExternal: false
  name: GetCustomAttributes(Module)
  nameWithType: Attribute.GetCustomAttributes(Module)
  fullName: Attribute.GetCustomAttributes(Module)
- uid: System.Attribute.GetCustomAttributes(System.Reflection.MemberInfo)
  parent: System.Attribute
  isExternal: false
  name: GetCustomAttributes(MemberInfo)
  nameWithType: Attribute.GetCustomAttributes(MemberInfo)
  fullName: Attribute.GetCustomAttributes(MemberInfo)
- uid: System.Attribute.GetCustomAttributes(System.Reflection.Assembly)
  parent: System.Attribute
  isExternal: false
  name: GetCustomAttributes(Assembly)
  nameWithType: Attribute.GetCustomAttributes(Assembly)
  fullName: Attribute.GetCustomAttributes(Assembly)
- uid: System.Attribute.GetCustomAttributes(System.Reflection.MemberInfo,System.Type)
  parent: System.Attribute
  isExternal: false
  name: GetCustomAttributes(MemberInfo, Type)
  nameWithType: Attribute.GetCustomAttributes(MemberInfo, Type)
  fullName: Attribute.GetCustomAttributes(MemberInfo, Type)
- uid: System.Attribute.IsDefaultAttribute
  parent: System.Attribute
  isExternal: false
  name: IsDefaultAttribute()
  nameWithType: Attribute.IsDefaultAttribute()
  fullName: Attribute.IsDefaultAttribute()
- uid: System.Attribute.IsDefined(System.Reflection.ParameterInfo,System.Type,System.Boolean)
  parent: System.Attribute
  isExternal: false
  name: IsDefined(ParameterInfo, Type, Boolean)
  nameWithType: Attribute.IsDefined(ParameterInfo, Type, Boolean)
  fullName: Attribute.IsDefined(ParameterInfo, Type, Boolean)
- uid: System.Attribute.IsDefined(System.Reflection.Module,System.Type,System.Boolean)
  parent: System.Attribute
  isExternal: false
  name: IsDefined(Module, Type, Boolean)
  nameWithType: Attribute.IsDefined(Module, Type, Boolean)
  fullName: Attribute.IsDefined(Module, Type, Boolean)
- uid: System.Attribute.IsDefined(System.Reflection.MemberInfo,System.Type,System.Boolean)
  parent: System.Attribute
  isExternal: false
  name: IsDefined(MemberInfo, Type, Boolean)
  nameWithType: Attribute.IsDefined(MemberInfo, Type, Boolean)
  fullName: Attribute.IsDefined(MemberInfo, Type, Boolean)
- uid: System.Attribute.IsDefined(System.Reflection.Assembly,System.Type,System.Boolean)
  parent: System.Attribute
  isExternal: false
  name: IsDefined(Assembly, Type, Boolean)
  nameWithType: Attribute.IsDefined(Assembly, Type, Boolean)
  fullName: Attribute.IsDefined(Assembly, Type, Boolean)
- uid: System.Attribute.IsDefined(System.Reflection.MemberInfo,System.Type)
  parent: System.Attribute
  isExternal: false
  name: IsDefined(MemberInfo, Type)
  nameWithType: Attribute.IsDefined(MemberInfo, Type)
  fullName: Attribute.IsDefined(MemberInfo, Type)
- uid: System.Attribute.IsDefined(System.Reflection.Module,System.Type)
  parent: System.Attribute
  isExternal: false
  name: IsDefined(Module, Type)
  nameWithType: Attribute.IsDefined(Module, Type)
  fullName: Attribute.IsDefined(Module, Type)
- uid: System.Attribute.IsDefined(System.Reflection.Assembly,System.Type)
  parent: System.Attribute
  isExternal: false
  name: IsDefined(Assembly, Type)
  nameWithType: Attribute.IsDefined(Assembly, Type)
  fullName: Attribute.IsDefined(Assembly, Type)
- uid: System.Attribute.IsDefined(System.Reflection.ParameterInfo,System.Type)
  parent: System.Attribute
  isExternal: false
  name: IsDefined(ParameterInfo, Type)
  nameWithType: Attribute.IsDefined(ParameterInfo, Type)
  fullName: Attribute.IsDefined(ParameterInfo, Type)
- uid: System.Attribute.Match(System.Object)
  parent: System.Attribute
  isExternal: false
  name: Match(Object)
  nameWithType: Attribute.Match(Object)
  fullName: Attribute.Match(Object)
- uid: System.Attribute.TypeId
  parent: System.Attribute
  isExternal: false
  name: TypeId
  nameWithType: Attribute.TypeId
  fullName: Attribute.TypeId
- uid: System.Attribute.System#Runtime#InteropServices#_Attribute#GetIDsOfNames(System.Guid@,System.IntPtr,System.UInt32,System.UInt32,System.IntPtr)
  parent: System.Attribute
  isExternal: false
  name: _Attribute.GetIDsOfNames(Guid, IntPtr, UInt32, UInt32, IntPtr)
  nameWithType: Attribute._Attribute.GetIDsOfNames(Guid, IntPtr, UInt32, UInt32, IntPtr)
  fullName: Attribute._Attribute.GetIDsOfNames(Guid, IntPtr, UInt32, UInt32, IntPtr)
- uid: System.Attribute.System#Runtime#InteropServices#_Attribute#GetTypeInfo(System.UInt32,System.UInt32,System.IntPtr)
  parent: System.Attribute
  isExternal: false
  name: _Attribute.GetTypeInfo(UInt32, UInt32, IntPtr)
  nameWithType: Attribute._Attribute.GetTypeInfo(UInt32, UInt32, IntPtr)
  fullName: Attribute._Attribute.GetTypeInfo(UInt32, UInt32, IntPtr)
- uid: System.Attribute.System#Runtime#InteropServices#_Attribute#GetTypeInfoCount(System.UInt32@)
  parent: System.Attribute
  isExternal: false
  name: _Attribute.GetTypeInfoCount(UInt32)
  nameWithType: Attribute._Attribute.GetTypeInfoCount(UInt32)
  fullName: Attribute._Attribute.GetTypeInfoCount(UInt32)
- uid: System.Attribute.System#Runtime#InteropServices#_Attribute#Invoke(System.UInt32,System.Guid@,System.UInt32,System.Int16,System.IntPtr,System.IntPtr,System.IntPtr,System.IntPtr)
  parent: System.Attribute
  isExternal: false
  name: _Attribute.Invoke(UInt32, Guid, UInt32, Int16, IntPtr, IntPtr, IntPtr, IntPtr)
  nameWithType: Attribute._Attribute.Invoke(UInt32, Guid, UInt32, Int16, IntPtr, IntPtr, IntPtr, IntPtr)
  fullName: Attribute._Attribute.Invoke(UInt32, Guid, UInt32, Int16, IntPtr, IntPtr, IntPtr, IntPtr)
- uid: System.Security.Permissions.SecurityAttribute.Action
  parent: System.Security.Permissions.SecurityAttribute
  isExternal: false
  name: Action
  nameWithType: SecurityAttribute.Action
  fullName: SecurityAttribute.Action
- uid: System.Security.Permissions.SecurityAttribute.Unrestricted
  parent: System.Security.Permissions.SecurityAttribute
  isExternal: false
  name: Unrestricted
  nameWithType: SecurityAttribute.Unrestricted
  fullName: SecurityAttribute.Unrestricted
