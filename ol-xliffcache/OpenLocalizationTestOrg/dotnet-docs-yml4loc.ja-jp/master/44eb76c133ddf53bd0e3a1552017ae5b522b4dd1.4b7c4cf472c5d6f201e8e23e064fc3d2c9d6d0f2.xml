{"nodes":[{"content":"The exception that is thrown when there is an attempt to divide an integral or <xref href=\"System.Decimal\"></xref> value by zero.","nodes":[{"pos":[0,129],"content":"The exception that is thrown when there is an attempt to divide an integral or <ph id=\"ph1\">&lt;xref href=\"System.Decimal\"&gt;&lt;/xref&gt;</ph> value by zero.","source":"The exception that is thrown when there is an attempt to divide an integral or <xref href=\"System.Decimal\"></xref> value by zero."}],"pos":[689,819],"yaml":true},{"content":"Trying to divide an integer or <xref:System.Decimal> number by zero throws a <xref:System.DivideByZeroException> exception. To prevent the exception, ensure that the denominator in a division operation with integer or <xref:System.Decimal> values is non-zero.  \n  \n Dividing a floating-point value by zero doesn't throw an exception; it results in positive infinity, negative infinity, or not a number (NaN), according to the rules of IEEE 754 arithmetic. Because the following example uses floating-point division rather than integer division, the operation does not throw a <xref:System.DivideByZeroException> exception.  \n  \n [!code-csharp[System.DivideByZeroException.Class#2](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.dividebyzeroexception.class/cs/exception2.cs#2)]\n [!code-vb[System.DivideByZeroException.Class#2](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.dividebyzeroexception.class/vb/exception2.vb#2)]  \n  \n For more information, see <xref:System.Single> and <xref:System.Double>.  \n  \n The following Microsoft intermediate language (MSIL) instructions throw <xref:System.DivideByZeroException>:  \n  \n-   div  \n  \n-   div.un  \n  \n-   rem  \n  \n-   rem.un  \n  \n <xref:System.DivideByZeroException> uses the HRESULT COR_E_DIVIDEBYZERO, which has the value 0x80020012.  \n  \n For a list of initial property values for an instance of <xref:System.DivideByZeroException>, see the <xref:System.DivideByZeroException.%23ctor%2A> constructors.","nodes":[{"pos":[0,259],"content":"Trying to divide an integer or <xref:System.Decimal> number by zero throws a <xref:System.DivideByZeroException> exception. To prevent the exception, ensure that the denominator in a division operation with integer or <xref:System.Decimal> values is non-zero.","nodes":[{"content":"Trying to divide an integer or <xref:System.Decimal> number by zero throws a <xref:System.DivideByZeroException> exception. To prevent the exception, ensure that the denominator in a division operation with integer or <xref:System.Decimal> values is non-zero.","pos":[0,259],"nodes":[{"content":"Trying to divide an integer or <ph id=\"ph1\">&lt;xref:System.Decimal&gt;</ph> number by zero throws a <ph id=\"ph2\">&lt;xref:System.DivideByZeroException&gt;</ph> exception.","pos":[0,123],"source":"Trying to divide an integer or <xref:System.Decimal> number by zero throws a <xref:System.DivideByZeroException> exception."},{"content":"To prevent the exception, ensure that the denominator in a division operation with integer or <ph id=\"ph1\">&lt;xref:System.Decimal&gt;</ph> values is non-zero.","pos":[124,259],"source":" To prevent the exception, ensure that the denominator in a division operation with integer or <xref:System.Decimal> values is non-zero."}]}]},{"pos":[266,622],"content":"Dividing a floating-point value by zero doesn't throw an exception; it results in positive infinity, negative infinity, or not a number (NaN), according to the rules of IEEE 754 arithmetic. Because the following example uses floating-point division rather than integer division, the operation does not throw a <xref:System.DivideByZeroException> exception.","nodes":[{"content":"Dividing a floating-point value by zero doesn't throw an exception; it results in positive infinity, negative infinity, or not a number (NaN), according to the rules of IEEE 754 arithmetic. Because the following example uses floating-point division rather than integer division, the operation does not throw a <xref:System.DivideByZeroException> exception.","pos":[0,356],"nodes":[{"content":"Dividing a floating-point value by zero doesn't throw an exception; it results in positive infinity, negative infinity, or not a number (NaN), according to the rules of IEEE 754 arithmetic.","pos":[0,189]},{"content":"Because the following example uses floating-point division rather than integer division, the operation does not throw a <ph id=\"ph1\">&lt;xref:System.DivideByZeroException&gt;</ph> exception.","pos":[190,356],"source":" Because the following example uses floating-point division rather than integer division, the operation does not throw a <xref:System.DivideByZeroException> exception."}]}]},{"pos":[629,944],"content":"<bpt id=\"p1\">[!code-csharp</bpt><bpt id=\"p2\">[</bpt>System.DivideByZeroException.Class#2<ept id=\"p2\">](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.dividebyzeroexception.class/cs/exception2.cs#2)</ept><ept id=\"p1\">]</ept> <bpt id=\"p3\">[!code-vb</bpt><bpt id=\"p4\">[</bpt>System.DivideByZeroException.Class#2<ept id=\"p4\">](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.dividebyzeroexception.class/vb/exception2.vb#2)</ept><ept id=\"p3\">]</ept>","source":"[!code-csharp[System.DivideByZeroException.Class#2](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.dividebyzeroexception.class/cs/exception2.cs#2)]\n [!code-vb[System.DivideByZeroException.Class#2](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.dividebyzeroexception.class/vb/exception2.vb#2)]"},{"pos":[951,1023],"content":"For more information, see <xref:System.Single> and <xref:System.Double>.","nodes":[{"content":"For more information, see <ph id=\"ph1\">&lt;xref:System.Single&gt;</ph> and <ph id=\"ph2\">&lt;xref:System.Double&gt;</ph>.","pos":[0,72],"source":"For more information, see <xref:System.Single> and <xref:System.Double>."}]},{"pos":[1030,1138],"content":"The following Microsoft intermediate language (MSIL) instructions throw <xref:System.DivideByZeroException>:","nodes":[{"content":"The following Microsoft intermediate language (MSIL) instructions throw <ph id=\"ph1\">&lt;xref:System.DivideByZeroException&gt;</ph>:","pos":[0,108],"source":"The following Microsoft intermediate language (MSIL) instructions throw <xref:System.DivideByZeroException>:"}]},{"pos":[1148,1151],"content":"div","nodes":[{"content":"div","pos":[0,3]}]},{"pos":[1161,1167],"content":"div.un","nodes":[{"content":"div.un","pos":[0,6]}]},{"pos":[1177,1180],"content":"rem","nodes":[{"content":"rem","pos":[0,3]}]},{"pos":[1190,1196],"content":"rem.un","nodes":[{"content":"rem.un","pos":[0,6]}]},{"pos":[1203,1307],"content":"<xref:System.DivideByZeroException> uses the HRESULT COR_E_DIVIDEBYZERO, which has the value 0x80020012.","nodes":[{"content":"<ph id=\"ph1\">&lt;xref:System.DivideByZeroException&gt;</ph> uses the HRESULT COR_E_DIVIDEBYZERO, which has the value 0x80020012.","pos":[0,104],"source":"<xref:System.DivideByZeroException> uses the HRESULT COR_E_DIVIDEBYZERO, which has the value 0x80020012."}]},{"pos":[1314,1476],"content":"For a list of initial property values for an instance of <xref:System.DivideByZeroException>, see the <xref:System.DivideByZeroException.%23ctor%2A> constructors.","nodes":[{"content":"For a list of initial property values for an instance of <ph id=\"ph1\">&lt;xref:System.DivideByZeroException&gt;</ph>, see the <ph id=\"ph2\">&lt;xref:System.DivideByZeroException.%23ctor%2A&gt;</ph> constructors.","pos":[0,162],"source":"For a list of initial property values for an instance of <xref:System.DivideByZeroException>, see the <xref:System.DivideByZeroException.%23ctor%2A> constructors."}]}],"pos":[830,2330],"yaml":true,"extradata":"MT"},{"content":"Initializes a new instance of the <xref href=\"System.DivideByZeroException\"></xref> class.","nodes":[{"pos":[0,90],"content":"Initializes a new instance of the <ph id=\"ph1\">&lt;xref href=\"System.DivideByZeroException\"&gt;&lt;/xref&gt;</ph> class.","source":"Initializes a new instance of the <xref href=\"System.DivideByZeroException\"></xref> class."}],"pos":[5344,5435],"yaml":true},{"content":"This constructor initializes the <xref:System.Exception.Message%2A> property of the new instance to a system-supplied message that describes the error, such as \"Attempted to divide by zero.\" This message takes into account the current system culture.  \n  \n The following table shows the initial property values for an instance of <xref:System.DivideByZeroException>.  \n  \n|Property|Value|  \n|--------------|-----------|  \n|<xref:System.Exception.InnerException%2A>|A null reference (`Nothing` in Visual Basic).|  \n|<xref:System.Exception.Message%2A>|The localized error message string.|","nodes":[{"pos":[0,250],"content":"This constructor initializes the <xref:System.Exception.Message%2A> property of the new instance to a system-supplied message that describes the error, such as \"Attempted to divide by zero.\" This message takes into account the current system culture.","nodes":[{"content":"This constructor initializes the <xref:System.Exception.Message%2A> property of the new instance to a system-supplied message that describes the error, such as \"Attempted to divide by zero.\" This message takes into account the current system culture.","pos":[0,250],"nodes":[{"content":"This constructor initializes the <ph id=\"ph1\">&lt;xref:System.Exception.Message%2A&gt;</ph> property of the new instance to a system-supplied message that describes the error, such as \"Attempted to divide by zero.\"","pos":[0,190],"source":"This constructor initializes the <xref:System.Exception.Message%2A> property of the new instance to a system-supplied message that describes the error, such as \"Attempted to divide by zero.\""},{"content":"This message takes into account the current system culture.","pos":[191,250]}]}]},{"pos":[257,366],"content":"The following table shows the initial property values for an instance of <xref:System.DivideByZeroException>.","nodes":[{"content":"The following table shows the initial property values for an instance of <ph id=\"ph1\">&lt;xref:System.DivideByZeroException&gt;</ph>.","pos":[0,109],"source":"The following table shows the initial property values for an instance of <xref:System.DivideByZeroException>."}]},{"pos":[373,381],"content":"Property","nodes":[{"content":"Property","pos":[0,8]}]},{"pos":[382,387],"content":"Value","nodes":[{"content":"Value","pos":[0,5]}]},{"pos":[423,464],"content":"<xref:System.Exception.InnerException%2A>","nodes":[]},{"pos":[465,510],"content":"A null reference (<ph id=\"ph1\">`Nothing`</ph> in Visual Basic).","source":"A null reference (`Nothing` in Visual Basic)."},{"pos":[515,549],"content":"<xref:System.Exception.Message%2A>","nodes":[]},{"pos":[550,585],"content":"The localized error message string.","nodes":[{"content":"The localized error message string.","pos":[0,35]}]}],"pos":[5446,6044],"yaml":true,"extradata":"MT"},{"content":"Initializes a new instance of the <xref href=\"System.DivideByZeroException\"></xref> class with a specified error message.","nodes":[{"pos":[0,121],"content":"Initializes a new instance of the <ph id=\"ph1\">&lt;xref href=\"System.DivideByZeroException\"&gt;&lt;/xref&gt;</ph> class with a specified error message.","source":"Initializes a new instance of the <xref href=\"System.DivideByZeroException\"></xref> class with a specified error message."}],"pos":[7746,7868],"yaml":true},{"content":"The content of `message` is intended to be understood by humans. The caller of this constructor is required to ensure that this string has been localized for the current system culture.  \n  \n The following table shows the initial property values for an instance of <xref:System.DivideByZeroException>.  \n  \n|Property|Value|  \n|--------------|-----------|  \n|<xref:System.Exception.InnerException%2A>|A null reference (`Nothing` in Visual Basic).|  \n|<xref:System.Exception.Message%2A>|The error message string.|","nodes":[{"pos":[0,185],"content":"The content of `message` is intended to be understood by humans. The caller of this constructor is required to ensure that this string has been localized for the current system culture.","nodes":[{"content":"The content of <ph id=\"ph1\">`message`</ph> is intended to be understood by humans.","pos":[0,64],"source":"The content of `message` is intended to be understood by humans."},{"content":"The caller of this constructor is required to ensure that this string has been localized for the current system culture.","pos":[65,185]}]},{"pos":[192,301],"content":"The following table shows the initial property values for an instance of <xref:System.DivideByZeroException>.","nodes":[{"content":"The following table shows the initial property values for an instance of <ph id=\"ph1\">&lt;xref:System.DivideByZeroException&gt;</ph>.","pos":[0,109],"source":"The following table shows the initial property values for an instance of <xref:System.DivideByZeroException>."}]},{"pos":[308,316],"content":"Property","nodes":[{"content":"Property","pos":[0,8]}]},{"pos":[317,322],"content":"Value","nodes":[{"content":"Value","pos":[0,5]}]},{"pos":[358,399],"content":"<xref:System.Exception.InnerException%2A>","nodes":[]},{"pos":[400,445],"content":"A null reference (<ph id=\"ph1\">`Nothing`</ph> in Visual Basic).","source":"A null reference (`Nothing` in Visual Basic)."},{"pos":[450,484],"content":"<xref:System.Exception.Message%2A>","nodes":[]},{"pos":[485,510],"content":"The error message string.","nodes":[{"content":"The error message string.","pos":[0,25]}]}],"pos":[7879,8400],"yaml":true,"extradata":"MT"},{"content":"A <xref href=\"System.String\"></xref> that describes the error.","nodes":[{"pos":[0,62],"content":"A <ph id=\"ph1\">&lt;xref href=\"System.String\"&gt;&lt;/xref&gt;</ph> that describes the error.","source":"A <xref href=\"System.String\"></xref> that describes the error."}],"pos":[8549,8612],"yaml":true},{"content":"Initializes a new instance of the <xref href=\"System.DivideByZeroException\"></xref> class with serialized data.","nodes":[{"pos":[0,111],"content":"Initializes a new instance of the <ph id=\"ph1\">&lt;xref href=\"System.DivideByZeroException\"&gt;&lt;/xref&gt;</ph> class with serialized data.","source":"Initializes a new instance of the <xref href=\"System.DivideByZeroException\"></xref> class with serialized data."}],"pos":[10563,10675],"yaml":true},{"content":"This constructor is called during deserialization to reconstitute the exception object transmitted over a stream.","nodes":[{"pos":[0,113],"content":"This constructor is called during deserialization to reconstitute the exception object transmitted over a stream.","nodes":[{"content":"This constructor is called during deserialization to reconstitute the exception object transmitted over a stream.","pos":[0,113]}]}],"pos":[10686,10800],"yaml":true,"extradata":"MT"},{"content":"The object that holds the serialized object data.","nodes":[{"pos":[0,49],"content":"The object that holds the serialized object data.","nodes":[{"content":"The object that holds the serialized object data.","pos":[0,49]}]}],"pos":[11074,11124],"yaml":true},{"content":"The contextual information about the source or destination.","nodes":[{"pos":[0,59],"content":"The contextual information about the source or destination.","nodes":[{"content":"The contextual information about the source or destination.","pos":[0,59]}]}],"pos":[11219,11279],"yaml":true},{"content":"Initializes a new instance of the <xref href=\"System.DivideByZeroException\"></xref> class with a specified error message and a reference to the inner exception that is the cause of this exception.","nodes":[{"pos":[0,196],"content":"Initializes a new instance of the <ph id=\"ph1\">&lt;xref href=\"System.DivideByZeroException\"&gt;&lt;/xref&gt;</ph> class with a specified error message and a reference to the inner exception that is the cause of this exception.","source":"Initializes a new instance of the <xref href=\"System.DivideByZeroException\"></xref> class with a specified error message and a reference to the inner exception that is the cause of this exception."}],"pos":[12646,12843],"yaml":true},{"content":"An exception that is thrown as a direct result of a previous exception should include a reference to the previous exception in the <xref:System.Exception.InnerException%2A> property. The <xref:System.Exception.InnerException%2A> property returns the same value that is passed into the constructor, or `null` if the <xref:System.Exception.InnerException%2A> property does not supply the inner exception value to the constructor.  \n  \n The following table shows the initial property values for an instance of <xref:System.DivideByZeroException>.  \n  \n|Property Type|Condition|  \n|-------------------|---------------|  \n|<xref:System.Exception.InnerException%2A>|The inner exception reference.|  \n|<xref:System.Exception.Message%2A>|The error message string.|","nodes":[{"pos":[0,427],"content":"An exception that is thrown as a direct result of a previous exception should include a reference to the previous exception in the <xref:System.Exception.InnerException%2A> property. The <xref:System.Exception.InnerException%2A> property returns the same value that is passed into the constructor, or `null` if the <xref:System.Exception.InnerException%2A> property does not supply the inner exception value to the constructor.","nodes":[{"content":"An exception that is thrown as a direct result of a previous exception should include a reference to the previous exception in the <ph id=\"ph1\">&lt;xref:System.Exception.InnerException%2A&gt;</ph> property.","pos":[0,182],"source":"An exception that is thrown as a direct result of a previous exception should include a reference to the previous exception in the <xref:System.Exception.InnerException%2A> property."},{"content":"The <ph id=\"ph1\">&lt;xref:System.Exception.InnerException%2A&gt;</ph> property returns the same value that is passed into the constructor, or <ph id=\"ph2\">`null`</ph> if the <ph id=\"ph3\">&lt;xref:System.Exception.InnerException%2A&gt;</ph> property does not supply the inner exception value to the constructor.","pos":[183,427],"source":" The <xref:System.Exception.InnerException%2A> property returns the same value that is passed into the constructor, or `null` if the <xref:System.Exception.InnerException%2A> property does not supply the inner exception value to the constructor."}]},{"pos":[434,543],"content":"The following table shows the initial property values for an instance of <xref:System.DivideByZeroException>.","nodes":[{"content":"The following table shows the initial property values for an instance of <ph id=\"ph1\">&lt;xref:System.DivideByZeroException&gt;</ph>.","pos":[0,109],"source":"The following table shows the initial property values for an instance of <xref:System.DivideByZeroException>."}]},{"pos":[550,563],"content":"Property Type","nodes":[{"content":"Property Type","pos":[0,13]}]},{"pos":[564,573],"content":"Condition","nodes":[{"content":"Condition","pos":[0,9]}]},{"pos":[618,659],"content":"<xref:System.Exception.InnerException%2A>","nodes":[]},{"pos":[660,690],"content":"The inner exception reference.","nodes":[{"content":"The inner exception reference.","pos":[0,30]}]},{"pos":[695,729],"content":"<xref:System.Exception.Message%2A>","nodes":[]},{"pos":[730,755],"content":"The error message string.","nodes":[{"content":"The error message string.","pos":[0,25]}]}],"pos":[12854,13620],"yaml":true,"extradata":"MT"},{"content":"The error message that explains the reason for the exception.","nodes":[{"pos":[0,61],"content":"The error message that explains the reason for the exception.","nodes":[{"content":"The error message that explains the reason for the exception.","pos":[0,61]}]}],"pos":[13795,13857],"yaml":true},{"content":"The exception that is the cause of the current exception. If the <code>innerException</code> parameter is not `null`, the current exception is raised in a `catch` block that handles the inner exception.","nodes":[{"pos":[0,202],"content":"The exception that is the cause of the current exception. If the <code>innerException</code> parameter is not `null`, the current exception is raised in a `catch` block that handles the inner exception.","nodes":[{"content":"The exception that is the cause of the current exception.","pos":[0,57]},{"content":"If the <bpt id=\"p1\">&lt;code&gt;</bpt><ph id=\"ph1\">innerException</ph><ept id=\"p1\">&lt;/code&gt;</ept> parameter is not <ph id=\"ph2\">`null`</ph>, the current exception is raised in a <ph id=\"ph3\">`catch`</ph> block that handles the inner exception.","pos":[58,202],"source":" If the <code>innerException</code> parameter is not `null`, the current exception is raised in a `catch` block that handles the inner exception."}]}],"pos":[13930,14133],"yaml":true}],"content":"### YamlMime:ManagedReference\nitems:\n- uid: System.DivideByZeroException\n  commentId: T:System.DivideByZeroException\n  id: DivideByZeroException\n  children:\n  - System.DivideByZeroException.#ctor\n  - System.DivideByZeroException.#ctor(System.String)\n  - System.DivideByZeroException.#ctor(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)\n  - System.DivideByZeroException.#ctor(System.String,System.Exception)\n  langs:\n  - csharp\n  name: DivideByZeroException\n  nameWithType: DivideByZeroException\n  fullName: System.DivideByZeroException\n  type: Class\n  assemblies:\n  - System.Runtime\n  - mscorlib\n  - netstandard\n  namespace: System\n  summary: The exception that is thrown when there is an attempt to divide an integral or <xref href=\"System.Decimal\"></xref> value by zero.\n  remarks: \"Trying to divide an integer or <xref:System.Decimal> number by zero throws a <xref:System.DivideByZeroException> exception. To prevent the exception, ensure that the denominator in a division operation with integer or <xref:System.Decimal> values is non-zero.  \\n  \\n Dividing a floating-point value by zero doesn't throw an exception; it results in positive infinity, negative infinity, or not a number (NaN), according to the rules of IEEE 754 arithmetic. Because the following example uses floating-point division rather than integer division, the operation does not throw a <xref:System.DivideByZeroException> exception.  \\n  \\n [!code-csharp[System.DivideByZeroException.Class#2](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.dividebyzeroexception.class/cs/exception2.cs#2)]\\n [!code-vb[System.DivideByZeroException.Class#2](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.dividebyzeroexception.class/vb/exception2.vb#2)]  \\n  \\n For more information, see <xref:System.Single> and <xref:System.Double>.  \\n  \\n The following Microsoft intermediate language (MSIL) instructions throw <xref:System.DivideByZeroException>:  \\n  \\n-   div  \\n  \\n-   div.un  \\n  \\n-   rem  \\n  \\n-   rem.un  \\n  \\n <xref:System.DivideByZeroException> uses the HRESULT COR_E_DIVIDEBYZERO, which has the value 0x80020012.  \\n  \\n For a list of initial property values for an instance of <xref:System.DivideByZeroException>, see the <xref:System.DivideByZeroException.%23ctor%2A> constructors.\"\n  example:\n  - \"The following example handles a <xref:System.DivideByZeroException> exception in integer division.  \\n  \\n [!code-csharp[System.DivideByZeroException.Class#1](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.dividebyzeroexception.class/cs/exception1.cs#1)]\\n [!code-vb[System.DivideByZeroException.Class#1](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.dividebyzeroexception.class/vb/exception1.vb#1)]\"\n  syntax:\n    content: >-\n      [System.Runtime.InteropServices.ComVisible(true)]\n\n      public class DivideByZeroException : ArithmeticException\n  inheritance:\n  - System.Object\n  - System.Exception\n  - System.ArithmeticException\n  implements: []\n  inheritedMembers:\n  - System.Exception.Data\n  - System.Exception.GetBaseException\n  - System.Exception.GetObjectData(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)\n  - System.Exception.GetType\n  - System.Exception.HelpLink\n  - System.Exception.HResult\n  - System.Exception.InnerException\n  - System.Exception.Message\n  - System.Exception.SerializeObjectState\n  - System.Exception.Source\n  - System.Exception.StackTrace\n  - System.Exception.TargetSite\n  - System.Exception.ToString\n  - System.Object.Equals(System.Object)\n  - System.Object.Equals(System.Object,System.Object)\n  - System.Object.GetHashCode\n  - System.Object.MemberwiseClone\n  - System.Object.ReferenceEquals(System.Object,System.Object)\n  attributes:\n  - type: System.Runtime.InteropServices.ComVisibleAttribute\n  version:\n  - netcore-1.0\n  - netcore-1.1\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - netstandard-1.0\n  - netstandard-1.1\n  - netstandard-1.2\n  - netstandard-1.3\n  - netstandard-1.4\n  - netstandard-1.5\n  - netstandard-1.6\n  - netstandard-2.0\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  monikers:\n  - netcore-1.0\n  - netcore-1.1\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - netstandard-1.0\n  - netstandard-1.1\n  - netstandard-1.2\n  - netstandard-1.3\n  - netstandard-1.4\n  - netstandard-1.5\n  - netstandard-1.6\n  - netstandard-2.0\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System/DivideByZeroException.xml\n  ms.technology:\n  - dotnet-standard\n  author: rpetrusha\n  ms.author: ronpet\n  manager: wpickett\n- uid: System.DivideByZeroException.#ctor\n  commentId: M:System.DivideByZeroException.#ctor\n  id: '#ctor'\n  parent: System.DivideByZeroException\n  langs:\n  - csharp\n  name: DivideByZeroException()\n  nameWithType: DivideByZeroException.DivideByZeroException()\n  fullName: DivideByZeroException.DivideByZeroException()\n  type: Constructor\n  assemblies:\n  - System.Runtime\n  - mscorlib\n  - netstandard\n  namespace: System\n  summary: Initializes a new instance of the <xref href=\"System.DivideByZeroException\"></xref> class.\n  remarks: \"This constructor initializes the <xref:System.Exception.Message%2A> property of the new instance to a system-supplied message that describes the error, such as \\\"Attempted to divide by zero.\\\" This message takes into account the current system culture.  \\n  \\n The following table shows the initial property values for an instance of <xref:System.DivideByZeroException>.  \\n  \\n|Property|Value|  \\n|--------------|-----------|  \\n|<xref:System.Exception.InnerException%2A>|A null reference (`Nothing` in Visual Basic).|  \\n|<xref:System.Exception.Message%2A>|The localized error message string.|\"\n  syntax:\n    content: public DivideByZeroException ();\n    parameters: []\n  overload: System.DivideByZeroException.#ctor*\n  exceptions: []\n  version:\n  - netcore-1.0\n  - netcore-1.1\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - netstandard-1.0\n  - netstandard-1.1\n  - netstandard-1.2\n  - netstandard-1.3\n  - netstandard-1.4\n  - netstandard-1.5\n  - netstandard-1.6\n  - netstandard-2.0\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  monikers:\n  - netcore-1.0\n  - netcore-1.1\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - netstandard-1.0\n  - netstandard-1.1\n  - netstandard-1.2\n  - netstandard-1.3\n  - netstandard-1.4\n  - netstandard-1.5\n  - netstandard-1.6\n  - netstandard-2.0\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System/DivideByZeroException.xml\n  ms.technology:\n  - dotnet-standard\n  author: rpetrusha\n  ms.author: ronpet\n  manager: wpickett\n- uid: System.DivideByZeroException.#ctor(System.String)\n  commentId: M:System.DivideByZeroException.#ctor(System.String)\n  id: '#ctor(System.String)'\n  parent: System.DivideByZeroException\n  langs:\n  - csharp\n  name: DivideByZeroException(String)\n  nameWithType: DivideByZeroException.DivideByZeroException(String)\n  fullName: DivideByZeroException.DivideByZeroException(String)\n  type: Constructor\n  assemblies:\n  - System.Runtime\n  - mscorlib\n  - netstandard\n  namespace: System\n  summary: Initializes a new instance of the <xref href=\"System.DivideByZeroException\"></xref> class with a specified error message.\n  remarks: \"The content of `message` is intended to be understood by humans. The caller of this constructor is required to ensure that this string has been localized for the current system culture.  \\n  \\n The following table shows the initial property values for an instance of <xref:System.DivideByZeroException>.  \\n  \\n|Property|Value|  \\n|--------------|-----------|  \\n|<xref:System.Exception.InnerException%2A>|A null reference (`Nothing` in Visual Basic).|  \\n|<xref:System.Exception.Message%2A>|The error message string.|\"\n  syntax:\n    content: public DivideByZeroException (string message);\n    parameters:\n    - id: message\n      type: System.String\n      description: A <xref href=\"System.String\"></xref> that describes the error.\n  overload: System.DivideByZeroException.#ctor*\n  exceptions: []\n  version:\n  - netcore-1.0\n  - netcore-1.1\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - netstandard-1.0\n  - netstandard-1.1\n  - netstandard-1.2\n  - netstandard-1.3\n  - netstandard-1.4\n  - netstandard-1.5\n  - netstandard-1.6\n  - netstandard-2.0\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  monikers:\n  - netcore-1.0\n  - netcore-1.1\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - netstandard-1.0\n  - netstandard-1.1\n  - netstandard-1.2\n  - netstandard-1.3\n  - netstandard-1.4\n  - netstandard-1.5\n  - netstandard-1.6\n  - netstandard-2.0\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System/DivideByZeroException.xml\n  ms.technology:\n  - dotnet-standard\n  author: rpetrusha\n  ms.author: ronpet\n  manager: wpickett\n- uid: System.DivideByZeroException.#ctor(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)\n  commentId: M:System.DivideByZeroException.#ctor(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)\n  id: '#ctor(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)'\n  parent: System.DivideByZeroException\n  langs:\n  - csharp\n  name: DivideByZeroException(SerializationInfo, StreamingContext)\n  nameWithType: DivideByZeroException.DivideByZeroException(SerializationInfo, StreamingContext)\n  fullName: DivideByZeroException.DivideByZeroException(SerializationInfo, StreamingContext)\n  type: Constructor\n  assemblies:\n  - mscorlib\n  - netstandard\n  - System.Runtime\n  namespace: System\n  summary: Initializes a new instance of the <xref href=\"System.DivideByZeroException\"></xref> class with serialized data.\n  remarks: This constructor is called during deserialization to reconstitute the exception object transmitted over a stream.\n  syntax:\n    content: protected DivideByZeroException (System.Runtime.Serialization.SerializationInfo info, System.Runtime.Serialization.StreamingContext context);\n    parameters:\n    - id: info\n      type: System.Runtime.Serialization.SerializationInfo\n      description: The object that holds the serialized object data.\n    - id: context\n      type: System.Runtime.Serialization.StreamingContext\n      description: The contextual information about the source or destination.\n  overload: System.DivideByZeroException.#ctor*\n  exceptions: []\n  version:\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - netstandard-2.0\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  monikers:\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - netstandard-2.0\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System/DivideByZeroException.xml\n  ms.technology:\n  - dotnet-standard\n  author: rpetrusha\n  ms.author: ronpet\n  manager: wpickett\n- uid: System.DivideByZeroException.#ctor(System.String,System.Exception)\n  commentId: M:System.DivideByZeroException.#ctor(System.String,System.Exception)\n  id: '#ctor(System.String,System.Exception)'\n  parent: System.DivideByZeroException\n  langs:\n  - csharp\n  name: DivideByZeroException(String, Exception)\n  nameWithType: DivideByZeroException.DivideByZeroException(String, Exception)\n  fullName: DivideByZeroException.DivideByZeroException(String, Exception)\n  type: Constructor\n  assemblies:\n  - System.Runtime\n  - mscorlib\n  - netstandard\n  namespace: System\n  summary: Initializes a new instance of the <xref href=\"System.DivideByZeroException\"></xref> class with a specified error message and a reference to the inner exception that is the cause of this exception.\n  remarks: \"An exception that is thrown as a direct result of a previous exception should include a reference to the previous exception in the <xref:System.Exception.InnerException%2A> property. The <xref:System.Exception.InnerException%2A> property returns the same value that is passed into the constructor, or `null` if the <xref:System.Exception.InnerException%2A> property does not supply the inner exception value to the constructor.  \\n  \\n The following table shows the initial property values for an instance of <xref:System.DivideByZeroException>.  \\n  \\n|Property Type|Condition|  \\n|-------------------|---------------|  \\n|<xref:System.Exception.InnerException%2A>|The inner exception reference.|  \\n|<xref:System.Exception.Message%2A>|The error message string.|\"\n  syntax:\n    content: public DivideByZeroException (string message, Exception innerException);\n    parameters:\n    - id: message\n      type: System.String\n      description: The error message that explains the reason for the exception.\n    - id: innerException\n      type: System.Exception\n      description: The exception that is the cause of the current exception. If the <code>innerException</code> parameter is not `null`, the current exception is raised in a `catch` block that handles the inner exception.\n  overload: System.DivideByZeroException.#ctor*\n  exceptions: []\n  version:\n  - netcore-1.0\n  - netcore-1.1\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - netstandard-1.0\n  - netstandard-1.1\n  - netstandard-1.2\n  - netstandard-1.3\n  - netstandard-1.4\n  - netstandard-1.5\n  - netstandard-1.6\n  - netstandard-2.0\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  monikers:\n  - netcore-1.0\n  - netcore-1.1\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - netstandard-1.0\n  - netstandard-1.1\n  - netstandard-1.2\n  - netstandard-1.3\n  - netstandard-1.4\n  - netstandard-1.5\n  - netstandard-1.6\n  - netstandard-2.0\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System/DivideByZeroException.xml\n  ms.technology:\n  - dotnet-standard\n  author: rpetrusha\n  ms.author: ronpet\n  manager: wpickett\nreferences:\n- uid: System.ArithmeticException\n  parent: System\n  isExternal: false\n  name: ArithmeticException\n  nameWithType: ArithmeticException\n  fullName: System.ArithmeticException\n- uid: System.DivideByZeroException.#ctor\n  parent: System.DivideByZeroException\n  isExternal: false\n  name: DivideByZeroException()\n  nameWithType: DivideByZeroException.DivideByZeroException()\n  fullName: DivideByZeroException.DivideByZeroException()\n- uid: System.DivideByZeroException.#ctor(System.String)\n  parent: System.DivideByZeroException\n  isExternal: false\n  name: DivideByZeroException(String)\n  nameWithType: DivideByZeroException.DivideByZeroException(String)\n  fullName: DivideByZeroException.DivideByZeroException(String)\n- uid: System.String\n  parent: System\n  isExternal: false\n  name: String\n  nameWithType: String\n  fullName: System.String\n- uid: System.DivideByZeroException.#ctor(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)\n  parent: System.DivideByZeroException\n  isExternal: false\n  name: DivideByZeroException(SerializationInfo, StreamingContext)\n  nameWithType: DivideByZeroException.DivideByZeroException(SerializationInfo, StreamingContext)\n  fullName: DivideByZeroException.DivideByZeroException(SerializationInfo, StreamingContext)\n- uid: System.Runtime.Serialization.SerializationInfo\n  parent: System.Runtime.Serialization\n  isExternal: false\n  name: SerializationInfo\n  nameWithType: SerializationInfo\n  fullName: System.Runtime.Serialization.SerializationInfo\n- uid: System.Runtime.Serialization.StreamingContext\n  parent: System.Runtime.Serialization\n  isExternal: false\n  name: StreamingContext\n  nameWithType: StreamingContext\n  fullName: System.Runtime.Serialization.StreamingContext\n- uid: System.DivideByZeroException.#ctor(System.String,System.Exception)\n  parent: System.DivideByZeroException\n  isExternal: false\n  name: DivideByZeroException(String, Exception)\n  nameWithType: DivideByZeroException.DivideByZeroException(String, Exception)\n  fullName: DivideByZeroException.DivideByZeroException(String, Exception)\n- uid: System.Exception\n  parent: System\n  isExternal: false\n  name: Exception\n  nameWithType: Exception\n  fullName: System.Exception\n- uid: System.DivideByZeroException.#ctor*\n  parent: System.DivideByZeroException\n  isExternal: false\n  name: DivideByZeroException\n  nameWithType: DivideByZeroException.DivideByZeroException\n  fullName: DivideByZeroException.DivideByZeroException\n  monikers:\n  - netcore-1.0\n  - netcore-1.1\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - netstandard-1.0\n  - netstandard-1.1\n  - netstandard-1.2\n  - netstandard-1.3\n  - netstandard-1.4\n  - netstandard-1.5\n  - netstandard-1.6\n  - netstandard-2.0\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System/DivideByZeroException.xml\n- uid: System.Object.Equals(System.Object)\n  parent: System.Object\n  isExternal: false\n  name: Equals(Object)\n  nameWithType: Object.Equals(Object)\n  fullName: Object.Equals(Object)\n- uid: System.Object.Equals(System.Object,System.Object)\n  parent: System.Object\n  isExternal: false\n  name: Equals(Object, Object)\n  nameWithType: Object.Equals(Object, Object)\n  fullName: Object.Equals(Object, Object)\n- uid: System.Object.GetHashCode\n  parent: System.Object\n  isExternal: false\n  name: GetHashCode()\n  nameWithType: Object.GetHashCode()\n  fullName: Object.GetHashCode()\n- uid: System.Exception.GetType\n  parent: System.Exception\n  isExternal: false\n  name: GetType()\n  nameWithType: Exception.GetType()\n  fullName: Exception.GetType()\n- uid: System.Object.MemberwiseClone\n  parent: System.Object\n  isExternal: false\n  name: MemberwiseClone()\n  nameWithType: Object.MemberwiseClone()\n  fullName: Object.MemberwiseClone()\n- uid: System.Object.ReferenceEquals(System.Object,System.Object)\n  parent: System.Object\n  isExternal: false\n  name: ReferenceEquals(Object, Object)\n  nameWithType: Object.ReferenceEquals(Object, Object)\n  fullName: Object.ReferenceEquals(Object, Object)\n- uid: System.Exception.ToString\n  parent: System.Exception\n  isExternal: false\n  name: ToString()\n  nameWithType: Exception.ToString()\n  fullName: Exception.ToString()\n- uid: System.Exception.Data\n  parent: System.Exception\n  isExternal: false\n  name: Data\n  nameWithType: Exception.Data\n  fullName: Exception.Data\n- uid: System.Exception.GetBaseException\n  parent: System.Exception\n  isExternal: false\n  name: GetBaseException()\n  nameWithType: Exception.GetBaseException()\n  fullName: Exception.GetBaseException()\n- uid: System.Exception.GetObjectData(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)\n  parent: System.Exception\n  isExternal: false\n  name: GetObjectData(SerializationInfo, StreamingContext)\n  nameWithType: Exception.GetObjectData(SerializationInfo, StreamingContext)\n  fullName: Exception.GetObjectData(SerializationInfo, StreamingContext)\n- uid: System.Exception.HelpLink\n  parent: System.Exception\n  isExternal: false\n  name: HelpLink\n  nameWithType: Exception.HelpLink\n  fullName: Exception.HelpLink\n- uid: System.Exception.HResult\n  parent: System.Exception\n  isExternal: false\n  name: HResult\n  nameWithType: Exception.HResult\n  fullName: Exception.HResult\n- uid: System.Exception.InnerException\n  parent: System.Exception\n  isExternal: false\n  name: InnerException\n  nameWithType: Exception.InnerException\n  fullName: Exception.InnerException\n- uid: System.Exception.Message\n  parent: System.Exception\n  isExternal: false\n  name: Message\n  nameWithType: Exception.Message\n  fullName: Exception.Message\n- uid: System.Exception.SerializeObjectState\n  parent: System.Exception\n  isExternal: false\n  name: SerializeObjectState\n  nameWithType: Exception.SerializeObjectState\n  fullName: Exception.SerializeObjectState\n- uid: System.Exception.Source\n  parent: System.Exception\n  isExternal: false\n  name: Source\n  nameWithType: Exception.Source\n  fullName: Exception.Source\n- uid: System.Exception.StackTrace\n  parent: System.Exception\n  isExternal: false\n  name: StackTrace\n  nameWithType: Exception.StackTrace\n  fullName: Exception.StackTrace\n- uid: System.Exception.TargetSite\n  parent: System.Exception\n  isExternal: false\n  name: TargetSite\n  nameWithType: Exception.TargetSite\n  fullName: Exception.TargetSite\n"}