{"nodes":[{"content":"Provides a type converter for <xref href=\"System.Windows.PropertyPath\"></xref> objects.","nodes":[{"pos":[0,87],"content":"Provides a type converter for <ph id=\"ph1\">&lt;xref href=\"System.Windows.PropertyPath\"&gt;&lt;/xref&gt;</ph> objects.","source":"Provides a type converter for <xref href=\"System.Windows.PropertyPath\"></xref> objects."}],"pos":[977,1065],"yaml":true},{"content":"A <xref:System.Windows.PropertyPath> is used to specify type and property paths to objects involved in a binding, or for storyboard target property paths.  \n  \n<a name=\"XAMLTextUsage_PropertyPathConverter\"></a>   \n## XAML Text Usage","nodes":[{"pos":[0,154],"content":"A <xref:System.Windows.PropertyPath> is used to specify type and property paths to objects involved in a binding, or for storyboard target property paths.","nodes":[{"content":"A <ph id=\"ph1\">&lt;xref:System.Windows.PropertyPath&gt;</ph> is used to specify type and property paths to objects involved in a binding, or for storyboard target property paths.","pos":[0,154],"source":"A <xref:System.Windows.PropertyPath> is used to specify type and property paths to objects involved in a binding, or for storyboard target property paths."}]},{"pos":[217,232],"content":"XAML Text Usage","linkify":"XAML Text Usage","nodes":[{"content":"XAML Text Usage","pos":[0,15]}]}],"pos":[1076,1316],"yaml":true,"extradata":"MT"},{"content":"Initializes a new instance of the <xref href=\"System.Windows.PropertyPathConverter\"></xref> class.","nodes":[{"pos":[0,98],"content":"Initializes a new instance of the <ph id=\"ph1\">&lt;xref href=\"System.Windows.PropertyPathConverter\"&gt;&lt;/xref&gt;</ph> class.","source":"Initializes a new instance of the <xref href=\"System.Windows.PropertyPathConverter\"></xref> class."}],"pos":[6017,6116],"yaml":true},{"content":"Returns whether this converter can convert an object of one type to the <xref href=\"System.Windows.PropertyPath\"></xref> type.","nodes":[{"pos":[0,126],"content":"Returns whether this converter can convert an object of one type to the <ph id=\"ph1\">&lt;xref href=\"System.Windows.PropertyPath\"&gt;&lt;/xref&gt;</ph> type.","source":"Returns whether this converter can convert an object of one type to the <xref href=\"System.Windows.PropertyPath\"></xref> type."}],"pos":[7470,7597],"yaml":true},{"content":"An <xref href=\"System.ComponentModel.ITypeDescriptorContext\"></xref> that provides a format context.","nodes":[{"pos":[0,100],"content":"An <ph id=\"ph1\">&lt;xref href=\"System.ComponentModel.ITypeDescriptorContext\"&gt;&lt;/xref&gt;</ph> that provides a format context.","source":"An <xref href=\"System.ComponentModel.ITypeDescriptorContext\"></xref> that provides a format context."}],"pos":[7867,7968],"yaml":true},{"content":"A <xref href=\"System.Type\"></xref> that represents the type you want to convert from.","nodes":[{"pos":[0,85],"content":"A <ph id=\"ph1\">&lt;xref href=\"System.Type\"&gt;&lt;/xref&gt;</ph> that represents the type you want to convert from.","source":"A <xref href=\"System.Type\"></xref> that represents the type you want to convert from."}],"pos":[8032,8118],"yaml":true},{"content":"`true` if <code>sourceType</code> is type <xref href=\"System.String\"></xref>; otherwise, `false`.","nodes":[{"pos":[0,97],"content":"<ph id=\"ph1\">`true`</ph> if <bpt id=\"p1\">&lt;code&gt;</bpt><ph id=\"ph2\">sourceType</ph><ept id=\"p1\">&lt;/code&gt;</ept> is type <ph id=\"ph3\">&lt;xref href=\"System.String\"&gt;&lt;/xref&gt;</ph>; otherwise, <ph id=\"ph4\">`false`</ph>.","source":"`true` if <code>sourceType</code> is type <xref href=\"System.String\"></xref>; otherwise, `false`."}],"pos":[8176,8276],"yaml":true},{"content":"Returns whether this converter can convert the object to the <xref href=\"System.Windows.PropertyPath\"></xref> type.","nodes":[{"pos":[0,115],"content":"Returns whether this converter can convert the object to the <ph id=\"ph1\">&lt;xref href=\"System.Windows.PropertyPath\"&gt;&lt;/xref&gt;</ph> type.","source":"Returns whether this converter can convert the object to the <xref href=\"System.Windows.PropertyPath\"></xref> type."}],"pos":[9574,9690],"yaml":true},{"content":"An <xref href=\"System.ComponentModel.ITypeDescriptorContext\"></xref> that provides a format context.","nodes":[{"pos":[0,100],"content":"An <ph id=\"ph1\">&lt;xref href=\"System.ComponentModel.ITypeDescriptorContext\"&gt;&lt;/xref&gt;</ph> that provides a format context.","source":"An <xref href=\"System.ComponentModel.ITypeDescriptorContext\"></xref> that provides a format context."}],"pos":[9963,10064],"yaml":true},{"content":"A <xref href=\"System.Type\"></xref> that represents the type you want to convert to.","nodes":[{"pos":[0,83],"content":"A <ph id=\"ph1\">&lt;xref href=\"System.Type\"&gt;&lt;/xref&gt;</ph> that represents the type you want to convert to.","source":"A <xref href=\"System.Type\"></xref> that represents the type you want to convert to."}],"pos":[10133,10217],"yaml":true},{"content":"`true` if <code>destinationType</code> is type <xref href=\"System.String\"></xref>; otherwise, `false`.","nodes":[{"pos":[0,102],"content":"<ph id=\"ph1\">`true`</ph> if <bpt id=\"p1\">&lt;code&gt;</bpt><ph id=\"ph2\">destinationType</ph><ept id=\"p1\">&lt;/code&gt;</ept> is type <ph id=\"ph3\">&lt;xref href=\"System.String\"&gt;&lt;/xref&gt;</ph>; otherwise, <ph id=\"ph4\">`false`</ph>.","source":"`true` if <code>destinationType</code> is type <xref href=\"System.String\"></xref>; otherwise, `false`."}],"pos":[10275,10380],"yaml":true},{"content":"Converts the specified value to the <xref href=\"System.Windows.PropertyPath\"></xref> type.","nodes":[{"pos":[0,90],"content":"Converts the specified value to the <ph id=\"ph1\">&lt;xref href=\"System.Windows.PropertyPath\"&gt;&lt;/xref&gt;</ph> type.","source":"Converts the specified value to the <xref href=\"System.Windows.PropertyPath\"></xref> type."}],"pos":[11820,11911],"yaml":true},{"content":"An <xref href=\"System.ComponentModel.ITypeDescriptorContext\"></xref> that provides a format context.","nodes":[{"pos":[0,100],"content":"An <ph id=\"ph1\">&lt;xref href=\"System.ComponentModel.ITypeDescriptorContext\"&gt;&lt;/xref&gt;</ph> that provides a format context.","source":"An <xref href=\"System.ComponentModel.ITypeDescriptorContext\"></xref> that provides a format context."}],"pos":[12224,12325],"yaml":true},{"content":"The <xref href=\"System.Globalization.CultureInfo\"></xref> to use as the current culture.","nodes":[{"pos":[0,88],"content":"The <ph id=\"ph1\">&lt;xref href=\"System.Globalization.CultureInfo\"&gt;&lt;/xref&gt;</ph> to use as the current culture.","source":"The <xref href=\"System.Globalization.CultureInfo\"></xref> to use as the current culture."}],"pos":[12411,12500],"yaml":true},{"content":"The object to convert to a <xref href=\"System.Windows.PropertyPath\"></xref>. This is expected to be a string.","nodes":[{"pos":[0,109],"content":"The object to convert to a <xref href=\"System.Windows.PropertyPath\"></xref>. This is expected to be a string.","nodes":[{"content":"The object to convert to a <ph id=\"ph1\">&lt;xref href=\"System.Windows.PropertyPath\"&gt;&lt;/xref&gt;</ph>.","pos":[0,76],"source":"The object to convert to a <xref href=\"System.Windows.PropertyPath\"></xref>."},{"content":"This is expected to be a string.","pos":[77,109]}]}],"pos":[12562,12672],"yaml":true},{"content":"The converted <xref href=\"System.Windows.PropertyPath\"></xref>.","nodes":[{"pos":[0,63],"content":"The converted <ph id=\"ph1\">&lt;xref href=\"System.Windows.PropertyPath\"&gt;&lt;/xref&gt;</ph>.","source":"The converted <xref href=\"System.Windows.PropertyPath\"></xref>."}],"pos":[12729,12793],"yaml":true},{"content":"The <code>source</code> was provided as `null.`","nodes":[{"pos":[0,47],"content":"The <bpt id=\"p1\">&lt;code&gt;</bpt><ph id=\"ph1\">source</ph><ept id=\"p1\">&lt;/code&gt;</ept> was provided as <ph id=\"ph2\">`null.`</ph>","source":"The <code>source</code> was provided as `null.`"}],"pos":[12971,13019],"yaml":true},{"content":"The <code>source</code> was not `null`, but was not of the expected <xref href=\"System.String\"></xref> type.","nodes":[{"pos":[0,108],"content":"The <bpt id=\"p1\">&lt;code&gt;</bpt><ph id=\"ph1\">source</ph><ept id=\"p1\">&lt;/code&gt;</ept> was not <ph id=\"ph2\">`null`</ph>, but was not of the expected <ph id=\"ph3\">&lt;xref href=\"System.String\"&gt;&lt;/xref&gt;</ph> type.","source":"The <code>source</code> was not `null`, but was not of the expected <xref href=\"System.String\"></xref> type."}],"pos":[13113,13222],"yaml":true},{"content":"Converts the specified value object to the <xref href=\"System.Windows.PropertyPath\"></xref> type.","nodes":[{"pos":[0,97],"content":"Converts the specified value object to the <ph id=\"ph1\">&lt;xref href=\"System.Windows.PropertyPath\"&gt;&lt;/xref&gt;</ph> type.","source":"Converts the specified value object to the <xref href=\"System.Windows.PropertyPath\"></xref> type."}],"pos":[14602,14700],"yaml":true},{"content":"An <xref href=\"System.ComponentModel.ITypeDescriptorContext\"></xref> that provides a format context.","nodes":[{"pos":[0,100],"content":"An <ph id=\"ph1\">&lt;xref href=\"System.ComponentModel.ITypeDescriptorContext\"&gt;&lt;/xref&gt;</ph> that provides a format context.","source":"An <xref href=\"System.ComponentModel.ITypeDescriptorContext\"></xref> that provides a format context."}],"pos":[15032,15133],"yaml":true},{"content":"The <xref href=\"System.Globalization.CultureInfo\"></xref> to use as the current culture.","nodes":[{"pos":[0,88],"content":"The <ph id=\"ph1\">&lt;xref href=\"System.Globalization.CultureInfo\"&gt;&lt;/xref&gt;</ph> to use as the current culture.","source":"The <xref href=\"System.Globalization.CultureInfo\"></xref> to use as the current culture."}],"pos":[15219,15308],"yaml":true},{"content":"The <xref href=\"System.Windows.PropertyPath\"></xref> to convert.","nodes":[{"pos":[0,64],"content":"The <ph id=\"ph1\">&lt;xref href=\"System.Windows.PropertyPath\"&gt;&lt;/xref&gt;</ph> to convert.","source":"The <xref href=\"System.Windows.PropertyPath\"></xref> to convert."}],"pos":[15369,15434],"yaml":true},{"content":"The destination type. This is expected to be the <xref href=\"System.String\"></xref> type.","nodes":[{"pos":[0,89],"content":"The destination type. This is expected to be the <xref href=\"System.String\"></xref> type.","nodes":[{"content":"The destination type.","pos":[0,21]},{"content":"This is expected to be the <ph id=\"ph1\">&lt;xref href=\"System.String\"&gt;&lt;/xref&gt;</ph> type.","pos":[22,89],"source":" This is expected to be the <xref href=\"System.String\"></xref> type."}]}],"pos":[15503,15593],"yaml":true},{"content":"The converted destination <xref href=\"System.String\"></xref>.","nodes":[{"pos":[0,61],"content":"The converted destination <ph id=\"ph1\">&lt;xref href=\"System.String\"&gt;&lt;/xref&gt;</ph>.","source":"The converted destination <xref href=\"System.String\"></xref>."}],"pos":[15650,15712],"yaml":true},{"content":"The <code>value</code> was provided as `null`.","nodes":[{"pos":[0,46],"content":"The <bpt id=\"p1\">&lt;code&gt;</bpt><ph id=\"ph1\">value</ph><ept id=\"p1\">&lt;/code&gt;</ept> was provided as <ph id=\"ph2\">`null`</ph>.","source":"The <code>value</code> was provided as `null`."}],"pos":[15888,15935],"yaml":true},{"content":"The <code>value</code> was not `null`, but was not of the expected <xref href=\"System.Windows.PropertyPath\"></xref> type.  \n  \n \\- or -  \n  \n The <code>destinationType</code> was not the <xref href=\"System.String\"></xref> type.","nodes":[{"pos":[0,121],"content":"The <bpt id=\"p1\">&lt;code&gt;</bpt><ph id=\"ph1\">value</ph><ept id=\"p1\">&lt;/code&gt;</ept> was not <ph id=\"ph2\">`null`</ph>, but was not of the expected <ph id=\"ph3\">&lt;xref href=\"System.Windows.PropertyPath\"&gt;&lt;/xref&gt;</ph> type.","source":"The <code>value</code> was not `null`, but was not of the expected <xref href=\"System.Windows.PropertyPath\"></xref> type."},{"pos":[128,135],"content":"\\- or -","nodes":[{"content":"<ph id=\"ph1\">\\-</ph> or -","pos":[0,7],"source":"\\- or -"}]},{"pos":[142,227],"content":"The <bpt id=\"p1\">&lt;code&gt;</bpt><ph id=\"ph1\">destinationType</ph><ept id=\"p1\">&lt;/code&gt;</ept> was not the <ph id=\"ph2\">&lt;xref href=\"System.String\"&gt;&lt;/xref&gt;</ph> type.","source":"The <code>destinationType</code> was not the <xref href=\"System.String\"></xref> type."}],"pos":[16029,16268],"yaml":true}],"content":"### YamlMime:ManagedReference\nitems:\n- uid: System.Windows.PropertyPathConverter\n  commentId: T:System.Windows.PropertyPathConverter\n  id: PropertyPathConverter\n  children:\n  - System.Windows.PropertyPathConverter.#ctor\n  - System.Windows.PropertyPathConverter.CanConvertFrom(System.ComponentModel.ITypeDescriptorContext,System.Type)\n  - System.Windows.PropertyPathConverter.CanConvertTo(System.ComponentModel.ITypeDescriptorContext,System.Type)\n  - System.Windows.PropertyPathConverter.ConvertFrom(System.ComponentModel.ITypeDescriptorContext,System.Globalization.CultureInfo,System.Object)\n  - System.Windows.PropertyPathConverter.ConvertTo(System.ComponentModel.ITypeDescriptorContext,System.Globalization.CultureInfo,System.Object,System.Type)\n  langs:\n  - csharp\n  name: PropertyPathConverter\n  nameWithType: PropertyPathConverter\n  fullName: System.Windows.PropertyPathConverter\n  type: Class\n  assemblies:\n  - PresentationFramework\n  namespace: System.Windows\n  summary: Provides a type converter for <xref href=\"System.Windows.PropertyPath\"></xref> objects.\n  remarks: \"A <xref:System.Windows.PropertyPath> is used to specify type and property paths to objects involved in a binding, or for storyboard target property paths.  \\n  \\n<a name=\\\"XAMLTextUsage_PropertyPathConverter\\\"></a>   \\n## XAML Text Usage\"\n  syntax:\n    content: 'public sealed class PropertyPathConverter : System.ComponentModel.TypeConverter'\n  inheritance:\n  - System.Object\n  - System.ComponentModel.TypeConverter\n  implements: []\n  inheritedMembers:\n  - System.ComponentModel.TypeConverter.CanConvertFrom(System.Type)\n  - System.ComponentModel.TypeConverter.CanConvertTo(System.Type)\n  - System.ComponentModel.TypeConverter.ConvertFrom(System.Object)\n  - System.ComponentModel.TypeConverter.ConvertFromInvariantString(System.ComponentModel.ITypeDescriptorContext,System.String)\n  - System.ComponentModel.TypeConverter.ConvertFromInvariantString(System.String)\n  - System.ComponentModel.TypeConverter.ConvertFromString(System.ComponentModel.ITypeDescriptorContext,System.Globalization.CultureInfo,System.String)\n  - System.ComponentModel.TypeConverter.ConvertFromString(System.ComponentModel.ITypeDescriptorContext,System.String)\n  - System.ComponentModel.TypeConverter.ConvertFromString(System.String)\n  - System.ComponentModel.TypeConverter.ConvertTo(System.Object,System.Type)\n  - System.ComponentModel.TypeConverter.ConvertToInvariantString(System.ComponentModel.ITypeDescriptorContext,System.Object)\n  - System.ComponentModel.TypeConverter.ConvertToInvariantString(System.Object)\n  - System.ComponentModel.TypeConverter.ConvertToString(System.ComponentModel.ITypeDescriptorContext,System.Globalization.CultureInfo,System.Object)\n  - System.ComponentModel.TypeConverter.ConvertToString(System.ComponentModel.ITypeDescriptorContext,System.Object)\n  - System.ComponentModel.TypeConverter.ConvertToString(System.Object)\n  - System.ComponentModel.TypeConverter.CreateInstance(System.Collections.IDictionary)\n  - System.ComponentModel.TypeConverter.CreateInstance(System.ComponentModel.ITypeDescriptorContext,System.Collections.IDictionary)\n  - System.ComponentModel.TypeConverter.GetConvertFromException(System.Object)\n  - System.ComponentModel.TypeConverter.GetConvertToException(System.Object,System.Type)\n  - System.ComponentModel.TypeConverter.GetCreateInstanceSupported\n  - System.ComponentModel.TypeConverter.GetCreateInstanceSupported(System.ComponentModel.ITypeDescriptorContext)\n  - System.ComponentModel.TypeConverter.GetProperties(System.ComponentModel.ITypeDescriptorContext,System.Object)\n  - System.ComponentModel.TypeConverter.GetProperties(System.ComponentModel.ITypeDescriptorContext,System.Object,System.Attribute[])\n  - System.ComponentModel.TypeConverter.GetProperties(System.Object)\n  - System.ComponentModel.TypeConverter.GetPropertiesSupported\n  - System.ComponentModel.TypeConverter.GetPropertiesSupported(System.ComponentModel.ITypeDescriptorContext)\n  - System.ComponentModel.TypeConverter.GetStandardValues\n  - System.ComponentModel.TypeConverter.GetStandardValues(System.ComponentModel.ITypeDescriptorContext)\n  - System.ComponentModel.TypeConverter.GetStandardValuesExclusive\n  - System.ComponentModel.TypeConverter.GetStandardValuesExclusive(System.ComponentModel.ITypeDescriptorContext)\n  - System.ComponentModel.TypeConverter.GetStandardValuesSupported\n  - System.ComponentModel.TypeConverter.GetStandardValuesSupported(System.ComponentModel.ITypeDescriptorContext)\n  - System.ComponentModel.TypeConverter.IsValid(System.ComponentModel.ITypeDescriptorContext,System.Object)\n  - System.ComponentModel.TypeConverter.IsValid(System.Object)\n  - System.ComponentModel.TypeConverter.SortProperties(System.ComponentModel.PropertyDescriptorCollection,System.String[])\n  - System.Object.Equals(System.Object)\n  - System.Object.Equals(System.Object,System.Object)\n  - System.Object.GetHashCode\n  - System.Object.GetType\n  - System.Object.MemberwiseClone\n  - System.Object.ReferenceEquals(System.Object,System.Object)\n  - System.Object.ToString\n  version:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Windows/PropertyPathConverter.xml\n  ms.technology:\n  - dotnet-wpf\n  author: stevehoag\n  ms.author: shoag\n  manager: wpickett\n- uid: System.Windows.PropertyPathConverter.#ctor\n  commentId: M:System.Windows.PropertyPathConverter.#ctor\n  id: '#ctor'\n  parent: System.Windows.PropertyPathConverter\n  langs:\n  - csharp\n  name: PropertyPathConverter()\n  nameWithType: PropertyPathConverter.PropertyPathConverter()\n  fullName: PropertyPathConverter.PropertyPathConverter()\n  type: Constructor\n  assemblies:\n  - PresentationFramework\n  namespace: System.Windows\n  summary: Initializes a new instance of the <xref href=\"System.Windows.PropertyPathConverter\"></xref> class.\n  syntax:\n    content: public PropertyPathConverter ();\n    parameters: []\n  overload: System.Windows.PropertyPathConverter.#ctor*\n  exceptions: []\n  version:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Windows/PropertyPathConverter.xml\n  ms.technology:\n  - dotnet-wpf\n  ms.author: kempb\n  manager: ghogen\n- uid: System.Windows.PropertyPathConverter.CanConvertFrom(System.ComponentModel.ITypeDescriptorContext,System.Type)\n  commentId: M:System.Windows.PropertyPathConverter.CanConvertFrom(System.ComponentModel.ITypeDescriptorContext,System.Type)\n  id: CanConvertFrom(System.ComponentModel.ITypeDescriptorContext,System.Type)\n  parent: System.Windows.PropertyPathConverter\n  langs:\n  - csharp\n  name: CanConvertFrom(ITypeDescriptorContext, Type)\n  nameWithType: PropertyPathConverter.CanConvertFrom(ITypeDescriptorContext, Type)\n  fullName: PropertyPathConverter.CanConvertFrom(ITypeDescriptorContext, Type)\n  type: Method\n  assemblies:\n  - PresentationFramework\n  namespace: System.Windows\n  summary: Returns whether this converter can convert an object of one type to the <xref href=\"System.Windows.PropertyPath\"></xref> type.\n  syntax:\n    content: public override bool CanConvertFrom (System.ComponentModel.ITypeDescriptorContext typeDescriptorContext, Type sourceType);\n    parameters:\n    - id: typeDescriptorContext\n      type: System.ComponentModel.ITypeDescriptorContext\n      description: An <xref href=\"System.ComponentModel.ITypeDescriptorContext\"></xref> that provides a format context.\n    - id: sourceType\n      type: System.Type\n      description: A <xref href=\"System.Type\"></xref> that represents the type you want to convert from.\n    return:\n      type: System.Boolean\n      description: '`true` if <code>sourceType</code> is type <xref href=\"System.String\"></xref>; otherwise, `false`.'\n  overload: System.Windows.PropertyPathConverter.CanConvertFrom*\n  exceptions: []\n  version:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Windows/PropertyPathConverter.xml\n  ms.technology:\n  - dotnet-wpf\n  author: stevehoag\n  ms.author: shoag\n  manager: wpickett\n- uid: System.Windows.PropertyPathConverter.CanConvertTo(System.ComponentModel.ITypeDescriptorContext,System.Type)\n  commentId: M:System.Windows.PropertyPathConverter.CanConvertTo(System.ComponentModel.ITypeDescriptorContext,System.Type)\n  id: CanConvertTo(System.ComponentModel.ITypeDescriptorContext,System.Type)\n  parent: System.Windows.PropertyPathConverter\n  langs:\n  - csharp\n  name: CanConvertTo(ITypeDescriptorContext, Type)\n  nameWithType: PropertyPathConverter.CanConvertTo(ITypeDescriptorContext, Type)\n  fullName: PropertyPathConverter.CanConvertTo(ITypeDescriptorContext, Type)\n  type: Method\n  assemblies:\n  - PresentationFramework\n  namespace: System.Windows\n  summary: Returns whether this converter can convert the object to the <xref href=\"System.Windows.PropertyPath\"></xref> type.\n  syntax:\n    content: public override bool CanConvertTo (System.ComponentModel.ITypeDescriptorContext typeDescriptorContext, Type destinationType);\n    parameters:\n    - id: typeDescriptorContext\n      type: System.ComponentModel.ITypeDescriptorContext\n      description: An <xref href=\"System.ComponentModel.ITypeDescriptorContext\"></xref> that provides a format context.\n    - id: destinationType\n      type: System.Type\n      description: A <xref href=\"System.Type\"></xref> that represents the type you want to convert to.\n    return:\n      type: System.Boolean\n      description: '`true` if <code>destinationType</code> is type <xref href=\"System.String\"></xref>; otherwise, `false`.'\n  overload: System.Windows.PropertyPathConverter.CanConvertTo*\n  exceptions: []\n  version:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Windows/PropertyPathConverter.xml\n  ms.technology:\n  - dotnet-wpf\n  author: stevehoag\n  ms.author: shoag\n  manager: wpickett\n- uid: System.Windows.PropertyPathConverter.ConvertFrom(System.ComponentModel.ITypeDescriptorContext,System.Globalization.CultureInfo,System.Object)\n  commentId: M:System.Windows.PropertyPathConverter.ConvertFrom(System.ComponentModel.ITypeDescriptorContext,System.Globalization.CultureInfo,System.Object)\n  id: ConvertFrom(System.ComponentModel.ITypeDescriptorContext,System.Globalization.CultureInfo,System.Object)\n  parent: System.Windows.PropertyPathConverter\n  langs:\n  - csharp\n  name: ConvertFrom(ITypeDescriptorContext, CultureInfo, Object)\n  nameWithType: PropertyPathConverter.ConvertFrom(ITypeDescriptorContext, CultureInfo, Object)\n  fullName: PropertyPathConverter.ConvertFrom(ITypeDescriptorContext, CultureInfo, Object)\n  type: Method\n  assemblies:\n  - PresentationFramework\n  namespace: System.Windows\n  summary: Converts the specified value to the <xref href=\"System.Windows.PropertyPath\"></xref> type.\n  syntax:\n    content: public override object ConvertFrom (System.ComponentModel.ITypeDescriptorContext typeDescriptorContext, System.Globalization.CultureInfo cultureInfo, object source);\n    parameters:\n    - id: typeDescriptorContext\n      type: System.ComponentModel.ITypeDescriptorContext\n      description: An <xref href=\"System.ComponentModel.ITypeDescriptorContext\"></xref> that provides a format context.\n    - id: cultureInfo\n      type: System.Globalization.CultureInfo\n      description: The <xref href=\"System.Globalization.CultureInfo\"></xref> to use as the current culture.\n    - id: source\n      type: System.Object\n      description: The object to convert to a <xref href=\"System.Windows.PropertyPath\"></xref>. This is expected to be a string.\n    return:\n      type: System.Object\n      description: The converted <xref href=\"System.Windows.PropertyPath\"></xref>.\n  overload: System.Windows.PropertyPathConverter.ConvertFrom*\n  exceptions:\n  - type: System.ArgumentNullException\n    commentId: T:System.ArgumentNullException\n    description: The <code>source</code> was provided as `null.`\n  - type: System.ArgumentException\n    commentId: T:System.ArgumentException\n    description: The <code>source</code> was not `null`, but was not of the expected <xref href=\"System.String\"></xref> type.\n  version:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Windows/PropertyPathConverter.xml\n  ms.technology:\n  - dotnet-wpf\n  ms.author: kempb\n  manager: ghogen\n- uid: System.Windows.PropertyPathConverter.ConvertTo(System.ComponentModel.ITypeDescriptorContext,System.Globalization.CultureInfo,System.Object,System.Type)\n  commentId: M:System.Windows.PropertyPathConverter.ConvertTo(System.ComponentModel.ITypeDescriptorContext,System.Globalization.CultureInfo,System.Object,System.Type)\n  id: ConvertTo(System.ComponentModel.ITypeDescriptorContext,System.Globalization.CultureInfo,System.Object,System.Type)\n  parent: System.Windows.PropertyPathConverter\n  langs:\n  - csharp\n  name: ConvertTo(ITypeDescriptorContext, CultureInfo, Object, Type)\n  nameWithType: PropertyPathConverter.ConvertTo(ITypeDescriptorContext, CultureInfo, Object, Type)\n  fullName: PropertyPathConverter.ConvertTo(ITypeDescriptorContext, CultureInfo, Object, Type)\n  type: Method\n  assemblies:\n  - PresentationFramework\n  namespace: System.Windows\n  summary: Converts the specified value object to the <xref href=\"System.Windows.PropertyPath\"></xref> type.\n  syntax:\n    content: public override object ConvertTo (System.ComponentModel.ITypeDescriptorContext typeDescriptorContext, System.Globalization.CultureInfo cultureInfo, object value, Type destinationType);\n    parameters:\n    - id: typeDescriptorContext\n      type: System.ComponentModel.ITypeDescriptorContext\n      description: An <xref href=\"System.ComponentModel.ITypeDescriptorContext\"></xref> that provides a format context.\n    - id: cultureInfo\n      type: System.Globalization.CultureInfo\n      description: The <xref href=\"System.Globalization.CultureInfo\"></xref> to use as the current culture.\n    - id: value\n      type: System.Object\n      description: The <xref href=\"System.Windows.PropertyPath\"></xref> to convert.\n    - id: destinationType\n      type: System.Type\n      description: The destination type. This is expected to be the <xref href=\"System.String\"></xref> type.\n    return:\n      type: System.Object\n      description: The converted destination <xref href=\"System.String\"></xref>.\n  overload: System.Windows.PropertyPathConverter.ConvertTo*\n  exceptions:\n  - type: System.ArgumentNullException\n    commentId: T:System.ArgumentNullException\n    description: The <code>value</code> was provided as `null`.\n  - type: System.ArgumentException\n    commentId: T:System.ArgumentException\n    description: \"The <code>value</code> was not `null`, but was not of the expected <xref href=\\\"System.Windows.PropertyPath\\\"></xref> type.  \\n  \\n \\\\- or -  \\n  \\n The <code>destinationType</code> was not the <xref href=\\\"System.String\\\"></xref> type.\"\n  version:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Windows/PropertyPathConverter.xml\n  ms.technology:\n  - dotnet-wpf\n  author: stevehoag\n  ms.author: shoag\n  manager: wpickett\nreferences:\n- uid: System.ComponentModel.TypeConverter\n  parent: System.ComponentModel\n  isExternal: false\n  name: TypeConverter\n  nameWithType: TypeConverter\n  fullName: System.ComponentModel.TypeConverter\n- uid: System.ArgumentNullException\n  parent: System\n  isExternal: false\n  name: ArgumentNullException\n  nameWithType: ArgumentNullException\n  fullName: System.ArgumentNullException\n- uid: System.ArgumentException\n  parent: System\n  isExternal: false\n  name: ArgumentException\n  nameWithType: ArgumentException\n  fullName: System.ArgumentException\n- uid: System.Windows.PropertyPathConverter.#ctor\n  parent: System.Windows.PropertyPathConverter\n  isExternal: false\n  name: PropertyPathConverter()\n  nameWithType: PropertyPathConverter.PropertyPathConverter()\n  fullName: PropertyPathConverter.PropertyPathConverter()\n- uid: System.Windows.PropertyPathConverter.CanConvertFrom(System.ComponentModel.ITypeDescriptorContext,System.Type)\n  parent: System.Windows.PropertyPathConverter\n  isExternal: false\n  name: CanConvertFrom(ITypeDescriptorContext, Type)\n  nameWithType: PropertyPathConverter.CanConvertFrom(ITypeDescriptorContext, Type)\n  fullName: PropertyPathConverter.CanConvertFrom(ITypeDescriptorContext, Type)\n- uid: System.Boolean\n  parent: System\n  isExternal: false\n  name: Boolean\n  nameWithType: Boolean\n  fullName: System.Boolean\n- uid: System.ComponentModel.ITypeDescriptorContext\n  parent: System.ComponentModel\n  isExternal: false\n  name: ITypeDescriptorContext\n  nameWithType: ITypeDescriptorContext\n  fullName: System.ComponentModel.ITypeDescriptorContext\n- uid: System.Type\n  parent: System\n  isExternal: false\n  name: Type\n  nameWithType: Type\n  fullName: System.Type\n- uid: System.Windows.PropertyPathConverter.CanConvertTo(System.ComponentModel.ITypeDescriptorContext,System.Type)\n  parent: System.Windows.PropertyPathConverter\n  isExternal: false\n  name: CanConvertTo(ITypeDescriptorContext, Type)\n  nameWithType: PropertyPathConverter.CanConvertTo(ITypeDescriptorContext, Type)\n  fullName: PropertyPathConverter.CanConvertTo(ITypeDescriptorContext, Type)\n- uid: System.Windows.PropertyPathConverter.ConvertFrom(System.ComponentModel.ITypeDescriptorContext,System.Globalization.CultureInfo,System.Object)\n  parent: System.Windows.PropertyPathConverter\n  isExternal: false\n  name: ConvertFrom(ITypeDescriptorContext, CultureInfo, Object)\n  nameWithType: PropertyPathConverter.ConvertFrom(ITypeDescriptorContext, CultureInfo, Object)\n  fullName: PropertyPathConverter.ConvertFrom(ITypeDescriptorContext, CultureInfo, Object)\n- uid: System.Object\n  parent: System\n  isExternal: false\n  name: Object\n  nameWithType: Object\n  fullName: System.Object\n- uid: System.Globalization.CultureInfo\n  parent: System.Globalization\n  isExternal: false\n  name: CultureInfo\n  nameWithType: CultureInfo\n  fullName: System.Globalization.CultureInfo\n- uid: System.Windows.PropertyPathConverter.ConvertTo(System.ComponentModel.ITypeDescriptorContext,System.Globalization.CultureInfo,System.Object,System.Type)\n  parent: System.Windows.PropertyPathConverter\n  isExternal: false\n  name: ConvertTo(ITypeDescriptorContext, CultureInfo, Object, Type)\n  nameWithType: PropertyPathConverter.ConvertTo(ITypeDescriptorContext, CultureInfo, Object, Type)\n  fullName: PropertyPathConverter.ConvertTo(ITypeDescriptorContext, CultureInfo, Object, Type)\n- uid: System.Windows.PropertyPathConverter.#ctor*\n  parent: System.Windows.PropertyPathConverter\n  isExternal: false\n  name: PropertyPathConverter\n  nameWithType: PropertyPathConverter.PropertyPathConverter\n  fullName: PropertyPathConverter.PropertyPathConverter\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Windows/PropertyPathConverter.xml\n- uid: System.Windows.PropertyPathConverter.CanConvertFrom*\n  parent: System.Windows.PropertyPathConverter\n  isExternal: false\n  name: CanConvertFrom\n  nameWithType: PropertyPathConverter.CanConvertFrom\n  fullName: PropertyPathConverter.CanConvertFrom\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Windows/PropertyPathConverter.xml\n- uid: System.Windows.PropertyPathConverter.CanConvertTo*\n  parent: System.Windows.PropertyPathConverter\n  isExternal: false\n  name: CanConvertTo\n  nameWithType: PropertyPathConverter.CanConvertTo\n  fullName: PropertyPathConverter.CanConvertTo\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Windows/PropertyPathConverter.xml\n- uid: System.Windows.PropertyPathConverter.ConvertFrom*\n  parent: System.Windows.PropertyPathConverter\n  isExternal: false\n  name: ConvertFrom\n  nameWithType: PropertyPathConverter.ConvertFrom\n  fullName: PropertyPathConverter.ConvertFrom\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Windows/PropertyPathConverter.xml\n- uid: System.Windows.PropertyPathConverter.ConvertTo*\n  parent: System.Windows.PropertyPathConverter\n  isExternal: false\n  name: ConvertTo\n  nameWithType: PropertyPathConverter.ConvertTo\n  fullName: PropertyPathConverter.ConvertTo\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Windows/PropertyPathConverter.xml\n- uid: System.Object.Equals(System.Object)\n  parent: System.Object\n  isExternal: false\n  name: Equals(Object)\n  nameWithType: Object.Equals(Object)\n  fullName: Object.Equals(Object)\n- uid: System.Object.Equals(System.Object,System.Object)\n  parent: System.Object\n  isExternal: false\n  name: Equals(Object, Object)\n  nameWithType: Object.Equals(Object, Object)\n  fullName: Object.Equals(Object, Object)\n- uid: System.Object.GetHashCode\n  parent: System.Object\n  isExternal: false\n  name: GetHashCode()\n  nameWithType: Object.GetHashCode()\n  fullName: Object.GetHashCode()\n- uid: System.Object.GetType\n  parent: System.Object\n  isExternal: false\n  name: GetType()\n  nameWithType: Object.GetType()\n  fullName: Object.GetType()\n- uid: System.Object.MemberwiseClone\n  parent: System.Object\n  isExternal: false\n  name: MemberwiseClone()\n  nameWithType: Object.MemberwiseClone()\n  fullName: Object.MemberwiseClone()\n- uid: System.Object.ReferenceEquals(System.Object,System.Object)\n  parent: System.Object\n  isExternal: false\n  name: ReferenceEquals(Object, Object)\n  nameWithType: Object.ReferenceEquals(Object, Object)\n  fullName: Object.ReferenceEquals(Object, Object)\n- uid: System.Object.ToString\n  parent: System.Object\n  isExternal: false\n  name: ToString()\n  nameWithType: Object.ToString()\n  fullName: Object.ToString()\n- uid: System.ComponentModel.TypeConverter.CanConvertFrom(System.Type)\n  parent: System.ComponentModel.TypeConverter\n  isExternal: false\n  name: CanConvertFrom(Type)\n  nameWithType: TypeConverter.CanConvertFrom(Type)\n  fullName: TypeConverter.CanConvertFrom(Type)\n- uid: System.ComponentModel.TypeConverter.CanConvertTo(System.Type)\n  parent: System.ComponentModel.TypeConverter\n  isExternal: false\n  name: CanConvertTo(Type)\n  nameWithType: TypeConverter.CanConvertTo(Type)\n  fullName: TypeConverter.CanConvertTo(Type)\n- uid: System.ComponentModel.TypeConverter.ConvertFrom(System.Object)\n  parent: System.ComponentModel.TypeConverter\n  isExternal: false\n  name: ConvertFrom(Object)\n  nameWithType: TypeConverter.ConvertFrom(Object)\n  fullName: TypeConverter.ConvertFrom(Object)\n- uid: System.ComponentModel.TypeConverter.ConvertFromInvariantString(System.String)\n  parent: System.ComponentModel.TypeConverter\n  isExternal: false\n  name: ConvertFromInvariantString(String)\n  nameWithType: TypeConverter.ConvertFromInvariantString(String)\n  fullName: TypeConverter.ConvertFromInvariantString(String)\n- uid: System.ComponentModel.TypeConverter.ConvertFromInvariantString(System.ComponentModel.ITypeDescriptorContext,System.String)\n  parent: System.ComponentModel.TypeConverter\n  isExternal: false\n  name: ConvertFromInvariantString(ITypeDescriptorContext, String)\n  nameWithType: TypeConverter.ConvertFromInvariantString(ITypeDescriptorContext, String)\n  fullName: TypeConverter.ConvertFromInvariantString(ITypeDescriptorContext, String)\n- uid: System.ComponentModel.TypeConverter.ConvertFromString(System.ComponentModel.ITypeDescriptorContext,System.Globalization.CultureInfo,System.String)\n  parent: System.ComponentModel.TypeConverter\n  isExternal: false\n  name: ConvertFromString(ITypeDescriptorContext, CultureInfo, String)\n  nameWithType: TypeConverter.ConvertFromString(ITypeDescriptorContext, CultureInfo, String)\n  fullName: TypeConverter.ConvertFromString(ITypeDescriptorContext, CultureInfo, String)\n- uid: System.ComponentModel.TypeConverter.ConvertFromString(System.String)\n  parent: System.ComponentModel.TypeConverter\n  isExternal: false\n  name: ConvertFromString(String)\n  nameWithType: TypeConverter.ConvertFromString(String)\n  fullName: TypeConverter.ConvertFromString(String)\n- uid: System.ComponentModel.TypeConverter.ConvertFromString(System.ComponentModel.ITypeDescriptorContext,System.String)\n  parent: System.ComponentModel.TypeConverter\n  isExternal: false\n  name: ConvertFromString(ITypeDescriptorContext, String)\n  nameWithType: TypeConverter.ConvertFromString(ITypeDescriptorContext, String)\n  fullName: TypeConverter.ConvertFromString(ITypeDescriptorContext, String)\n- uid: System.ComponentModel.TypeConverter.ConvertTo(System.Object,System.Type)\n  parent: System.ComponentModel.TypeConverter\n  isExternal: false\n  name: ConvertTo(Object, Type)\n  nameWithType: TypeConverter.ConvertTo(Object, Type)\n  fullName: TypeConverter.ConvertTo(Object, Type)\n- uid: System.ComponentModel.TypeConverter.ConvertToInvariantString(System.Object)\n  parent: System.ComponentModel.TypeConverter\n  isExternal: false\n  name: ConvertToInvariantString(Object)\n  nameWithType: TypeConverter.ConvertToInvariantString(Object)\n  fullName: TypeConverter.ConvertToInvariantString(Object)\n- uid: System.ComponentModel.TypeConverter.ConvertToInvariantString(System.ComponentModel.ITypeDescriptorContext,System.Object)\n  parent: System.ComponentModel.TypeConverter\n  isExternal: false\n  name: ConvertToInvariantString(ITypeDescriptorContext, Object)\n  nameWithType: TypeConverter.ConvertToInvariantString(ITypeDescriptorContext, Object)\n  fullName: TypeConverter.ConvertToInvariantString(ITypeDescriptorContext, Object)\n- uid: System.ComponentModel.TypeConverter.ConvertToString(System.ComponentModel.ITypeDescriptorContext,System.Globalization.CultureInfo,System.Object)\n  parent: System.ComponentModel.TypeConverter\n  isExternal: false\n  name: ConvertToString(ITypeDescriptorContext, CultureInfo, Object)\n  nameWithType: TypeConverter.ConvertToString(ITypeDescriptorContext, CultureInfo, Object)\n  fullName: TypeConverter.ConvertToString(ITypeDescriptorContext, CultureInfo, Object)\n- uid: System.ComponentModel.TypeConverter.ConvertToString(System.Object)\n  parent: System.ComponentModel.TypeConverter\n  isExternal: false\n  name: ConvertToString(Object)\n  nameWithType: TypeConverter.ConvertToString(Object)\n  fullName: TypeConverter.ConvertToString(Object)\n- uid: System.ComponentModel.TypeConverter.ConvertToString(System.ComponentModel.ITypeDescriptorContext,System.Object)\n  parent: System.ComponentModel.TypeConverter\n  isExternal: false\n  name: ConvertToString(ITypeDescriptorContext, Object)\n  nameWithType: TypeConverter.ConvertToString(ITypeDescriptorContext, Object)\n  fullName: TypeConverter.ConvertToString(ITypeDescriptorContext, Object)\n- uid: System.ComponentModel.TypeConverter.CreateInstance(System.ComponentModel.ITypeDescriptorContext,System.Collections.IDictionary)\n  parent: System.ComponentModel.TypeConverter\n  isExternal: false\n  name: CreateInstance(ITypeDescriptorContext, IDictionary)\n  nameWithType: TypeConverter.CreateInstance(ITypeDescriptorContext, IDictionary)\n  fullName: TypeConverter.CreateInstance(ITypeDescriptorContext, IDictionary)\n- uid: System.ComponentModel.TypeConverter.CreateInstance(System.Collections.IDictionary)\n  parent: System.ComponentModel.TypeConverter\n  isExternal: false\n  name: CreateInstance(IDictionary)\n  nameWithType: TypeConverter.CreateInstance(IDictionary)\n  fullName: TypeConverter.CreateInstance(IDictionary)\n- uid: System.ComponentModel.TypeConverter.GetConvertFromException(System.Object)\n  parent: System.ComponentModel.TypeConverter\n  isExternal: false\n  name: GetConvertFromException(Object)\n  nameWithType: TypeConverter.GetConvertFromException(Object)\n  fullName: TypeConverter.GetConvertFromException(Object)\n- uid: System.ComponentModel.TypeConverter.GetConvertToException(System.Object,System.Type)\n  parent: System.ComponentModel.TypeConverter\n  isExternal: false\n  name: GetConvertToException(Object, Type)\n  nameWithType: TypeConverter.GetConvertToException(Object, Type)\n  fullName: TypeConverter.GetConvertToException(Object, Type)\n- uid: System.ComponentModel.TypeConverter.GetCreateInstanceSupported\n  parent: System.ComponentModel.TypeConverter\n  isExternal: false\n  name: GetCreateInstanceSupported()\n  nameWithType: TypeConverter.GetCreateInstanceSupported()\n  fullName: TypeConverter.GetCreateInstanceSupported()\n- uid: System.ComponentModel.TypeConverter.GetCreateInstanceSupported(System.ComponentModel.ITypeDescriptorContext)\n  parent: System.ComponentModel.TypeConverter\n  isExternal: false\n  name: GetCreateInstanceSupported(ITypeDescriptorContext)\n  nameWithType: TypeConverter.GetCreateInstanceSupported(ITypeDescriptorContext)\n  fullName: TypeConverter.GetCreateInstanceSupported(ITypeDescriptorContext)\n- uid: System.ComponentModel.TypeConverter.GetProperties(System.Object)\n  parent: System.ComponentModel.TypeConverter\n  isExternal: false\n  name: GetProperties(Object)\n  nameWithType: TypeConverter.GetProperties(Object)\n  fullName: TypeConverter.GetProperties(Object)\n- uid: System.ComponentModel.TypeConverter.GetProperties(System.ComponentModel.ITypeDescriptorContext,System.Object)\n  parent: System.ComponentModel.TypeConverter\n  isExternal: false\n  name: GetProperties(ITypeDescriptorContext, Object)\n  nameWithType: TypeConverter.GetProperties(ITypeDescriptorContext, Object)\n  fullName: TypeConverter.GetProperties(ITypeDescriptorContext, Object)\n- uid: System.ComponentModel.TypeConverter.GetProperties(System.ComponentModel.ITypeDescriptorContext,System.Object,System.Attribute[])\n  parent: System.ComponentModel.TypeConverter\n  isExternal: false\n  name: GetProperties(ITypeDescriptorContext, Object, Attribute[])\n  nameWithType: TypeConverter.GetProperties(ITypeDescriptorContext, Object, Attribute[])\n  fullName: TypeConverter.GetProperties(ITypeDescriptorContext, Object, Attribute[])\n- uid: System.ComponentModel.TypeConverter.GetPropertiesSupported(System.ComponentModel.ITypeDescriptorContext)\n  parent: System.ComponentModel.TypeConverter\n  isExternal: false\n  name: GetPropertiesSupported(ITypeDescriptorContext)\n  nameWithType: TypeConverter.GetPropertiesSupported(ITypeDescriptorContext)\n  fullName: TypeConverter.GetPropertiesSupported(ITypeDescriptorContext)\n- uid: System.ComponentModel.TypeConverter.GetPropertiesSupported\n  parent: System.ComponentModel.TypeConverter\n  isExternal: false\n  name: GetPropertiesSupported()\n  nameWithType: TypeConverter.GetPropertiesSupported()\n  fullName: TypeConverter.GetPropertiesSupported()\n- uid: System.ComponentModel.TypeConverter.GetStandardValues\n  parent: System.ComponentModel.TypeConverter\n  isExternal: false\n  name: GetStandardValues()\n  nameWithType: TypeConverter.GetStandardValues()\n  fullName: TypeConverter.GetStandardValues()\n- uid: System.ComponentModel.TypeConverter.GetStandardValues(System.ComponentModel.ITypeDescriptorContext)\n  parent: System.ComponentModel.TypeConverter\n  isExternal: false\n  name: GetStandardValues(ITypeDescriptorContext)\n  nameWithType: TypeConverter.GetStandardValues(ITypeDescriptorContext)\n  fullName: TypeConverter.GetStandardValues(ITypeDescriptorContext)\n- uid: System.ComponentModel.TypeConverter.GetStandardValuesExclusive\n  parent: System.ComponentModel.TypeConverter\n  isExternal: false\n  name: GetStandardValuesExclusive()\n  nameWithType: TypeConverter.GetStandardValuesExclusive()\n  fullName: TypeConverter.GetStandardValuesExclusive()\n- uid: System.ComponentModel.TypeConverter.GetStandardValuesExclusive(System.ComponentModel.ITypeDescriptorContext)\n  parent: System.ComponentModel.TypeConverter\n  isExternal: false\n  name: GetStandardValuesExclusive(ITypeDescriptorContext)\n  nameWithType: TypeConverter.GetStandardValuesExclusive(ITypeDescriptorContext)\n  fullName: TypeConverter.GetStandardValuesExclusive(ITypeDescriptorContext)\n- uid: System.ComponentModel.TypeConverter.GetStandardValuesSupported\n  parent: System.ComponentModel.TypeConverter\n  isExternal: false\n  name: GetStandardValuesSupported()\n  nameWithType: TypeConverter.GetStandardValuesSupported()\n  fullName: TypeConverter.GetStandardValuesSupported()\n- uid: System.ComponentModel.TypeConverter.GetStandardValuesSupported(System.ComponentModel.ITypeDescriptorContext)\n  parent: System.ComponentModel.TypeConverter\n  isExternal: false\n  name: GetStandardValuesSupported(ITypeDescriptorContext)\n  nameWithType: TypeConverter.GetStandardValuesSupported(ITypeDescriptorContext)\n  fullName: TypeConverter.GetStandardValuesSupported(ITypeDescriptorContext)\n- uid: System.ComponentModel.TypeConverter.IsValid(System.ComponentModel.ITypeDescriptorContext,System.Object)\n  parent: System.ComponentModel.TypeConverter\n  isExternal: false\n  name: IsValid(ITypeDescriptorContext, Object)\n  nameWithType: TypeConverter.IsValid(ITypeDescriptorContext, Object)\n  fullName: TypeConverter.IsValid(ITypeDescriptorContext, Object)\n- uid: System.ComponentModel.TypeConverter.IsValid(System.Object)\n  parent: System.ComponentModel.TypeConverter\n  isExternal: false\n  name: IsValid(Object)\n  nameWithType: TypeConverter.IsValid(Object)\n  fullName: TypeConverter.IsValid(Object)\n- uid: System.ComponentModel.TypeConverter.SortProperties(System.ComponentModel.PropertyDescriptorCollection,System.String[])\n  parent: System.ComponentModel.TypeConverter\n  isExternal: false\n  name: SortProperties(PropertyDescriptorCollection, String[])\n  nameWithType: TypeConverter.SortProperties(PropertyDescriptorCollection, String[])\n  fullName: TypeConverter.SortProperties(PropertyDescriptorCollection, String[])\n"}