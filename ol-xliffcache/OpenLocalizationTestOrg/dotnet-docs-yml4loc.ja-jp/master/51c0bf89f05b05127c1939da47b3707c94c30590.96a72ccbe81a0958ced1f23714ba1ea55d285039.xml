{"nodes":[{"content":"This class converts a parameter value to and from a JavaScript Object Notation (JSON).","nodes":[{"pos":[0,86],"content":"This class converts a parameter value to and from a JavaScript Object Notation (JSON).","nodes":[{"content":"This class converts a parameter value to and from a JavaScript Object Notation (JSON).","pos":[0,86]}]}],"pos":[852,939],"yaml":true},{"content":"Parameters can be specified in a JSON query string within a URL. This class controls how JSON query string parameters are mapped to and from a service operation's parameters when the <xref:System.ServiceModel.Description.WebScriptEnablingBehavior> is used to process HTTP requests from browser-based ASP.NET AJAX clients.  \n  \n This class is used internally by the [!INCLUDE[indigo1](~/includes/indigo1-md.md)]<xref:System.ServiceModel.Description.WebScriptEnablingBehavior> class for endpoints configured to accept HTTP GET/POST requests with parameters encoded in the URI query string. This class is used to convert between CLR objects and the individual operation request parameter values in the URI query string. Unlike its base type, this class supports values of both primitive and complex types.  \n  \n <xref:System.ServiceModel.Dispatcher.JsonQueryStringConverter> derives from <xref:System.ServiceModel.Dispatcher.QueryStringConverter> and supports the following types:  \n  \n-   <xref:System.Byte>  \n  \n-   <xref:System.SByte>  \n  \n-   <xref:System.Int16>  \n  \n-   <xref:System.Int32>  \n  \n-   <xref:System.Int64>  \n  \n-   <xref:System.UInt16>  \n  \n-   <xref:System.UInt32>  \n  \n-   <xref:System.UInt64>  \n  \n-   <xref:System.Single>  \n  \n-   <xref:System.Double>  \n  \n-   <xref:System.Char>  \n  \n-   <xref:System.Decimal>  \n  \n-   <xref:System.Boolean>  \n  \n-   <xref:System.String>  \n  \n-   <xref:System.DateTime>  \n  \n-   <xref:System.TimeSpan>  \n  \n-   <xref:System.Guid>  \n  \n-   An <xref:System.Array> of type <xref:System.Byte>  \n  \n-   <xref:System.Uri>  \n  \n-   <xref:System.Object>  \n  \n Unlike its base type, this converter can handle any type adhering to the Data Contract model. The converter overrides <xref:System.ServiceModel.Dispatcher.QueryStringConverter.ConvertValueToString%28System.Object%2CSystem.Type%29> so that each parameter is serialized to JSON using the default <xref:System.Runtime.Serialization.Json.DataContractJsonSerializer> and a JSON XML Writer configured to use the UTF-8 encoding. `null` parameters are returned as `null`.","nodes":[{"pos":[0,321],"content":"Parameters can be specified in a JSON query string within a URL. This class controls how JSON query string parameters are mapped to and from a service operation's parameters when the <xref:System.ServiceModel.Description.WebScriptEnablingBehavior> is used to process HTTP requests from browser-based ASP.NET AJAX clients.","nodes":[{"content":"Parameters can be specified in a JSON query string within a URL. This class controls how JSON query string parameters are mapped to and from a service operation's parameters when the <xref:System.ServiceModel.Description.WebScriptEnablingBehavior> is used to process HTTP requests from browser-based ASP.NET AJAX clients.","pos":[0,321],"nodes":[{"content":"Parameters can be specified in a JSON query string within a URL.","pos":[0,64]},{"content":"This class controls how JSON query string parameters are mapped to and from a service operation's parameters when the <ph id=\"ph1\">&lt;xref:System.ServiceModel.Description.WebScriptEnablingBehavior&gt;</ph> is used to process HTTP requests from browser-based ASP.NET AJAX clients.","pos":[65,321],"source":" This class controls how JSON query string parameters are mapped to and from a service operation's parameters when the <xref:System.ServiceModel.Description.WebScriptEnablingBehavior> is used to process HTTP requests from browser-based ASP.NET AJAX clients."}]}]},{"pos":[328,802],"content":"This class is used internally by the [!INCLUDE[indigo1](~/includes/indigo1-md.md)]<xref:System.ServiceModel.Description.WebScriptEnablingBehavior> class for endpoints configured to accept HTTP GET/POST requests with parameters encoded in the URI query string. This class is used to convert between CLR objects and the individual operation request parameter values in the URI query string. Unlike its base type, this class supports values of both primitive and complex types.","nodes":[{"content":"This class is used internally by the <ph id=\"ph1\">[!INCLUDE[indigo1](~/includes/indigo1-md.md)]</ph><ph id=\"ph2\">&lt;xref:System.ServiceModel.Description.WebScriptEnablingBehavior&gt;</ph> class for endpoints configured to accept HTTP GET/POST requests with parameters encoded in the URI query string.","pos":[0,259],"source":"This class is used internally by the [!INCLUDE[indigo1](~/includes/indigo1-md.md)]<xref:System.ServiceModel.Description.WebScriptEnablingBehavior> class for endpoints configured to accept HTTP GET/POST requests with parameters encoded in the URI query string."},{"content":"This class is used to convert between CLR objects and the individual operation request parameter values in the URI query string.","pos":[260,388]},{"content":"Unlike its base type, this class supports values of both primitive and complex types.","pos":[389,474]}]},{"pos":[809,977],"content":"<xref:System.ServiceModel.Dispatcher.JsonQueryStringConverter> derives from <xref:System.ServiceModel.Dispatcher.QueryStringConverter> and supports the following types:","nodes":[{"content":"<ph id=\"ph1\">&lt;xref:System.ServiceModel.Dispatcher.JsonQueryStringConverter&gt;</ph> derives from <ph id=\"ph2\">&lt;xref:System.ServiceModel.Dispatcher.QueryStringConverter&gt;</ph> and supports the following types:","pos":[0,168],"source":"<xref:System.ServiceModel.Dispatcher.JsonQueryStringConverter> derives from <xref:System.ServiceModel.Dispatcher.QueryStringConverter> and supports the following types:"}]},{"pos":[987,1005],"content":"<xref:System.Byte>","nodes":[]},{"pos":[1015,1034],"content":"<xref:System.SByte>","nodes":[]},{"pos":[1044,1063],"content":"<xref:System.Int16>","nodes":[]},{"pos":[1073,1092],"content":"<xref:System.Int32>","nodes":[]},{"pos":[1102,1121],"content":"<xref:System.Int64>","nodes":[]},{"pos":[1131,1151],"content":"<xref:System.UInt16>","nodes":[]},{"pos":[1161,1181],"content":"<xref:System.UInt32>","nodes":[]},{"pos":[1191,1211],"content":"<xref:System.UInt64>","nodes":[]},{"pos":[1221,1241],"content":"<xref:System.Single>","nodes":[]},{"pos":[1251,1271],"content":"<xref:System.Double>","nodes":[]},{"pos":[1281,1299],"content":"<xref:System.Char>","nodes":[]},{"pos":[1309,1330],"content":"<xref:System.Decimal>","nodes":[]},{"pos":[1340,1361],"content":"<xref:System.Boolean>","nodes":[]},{"pos":[1371,1391],"content":"<xref:System.String>","nodes":[]},{"pos":[1401,1423],"content":"<xref:System.DateTime>","nodes":[]},{"pos":[1433,1455],"content":"<xref:System.TimeSpan>","nodes":[]},{"pos":[1465,1483],"content":"<xref:System.Guid>","nodes":[]},{"pos":[1493,1542],"content":"An <xref:System.Array> of type <xref:System.Byte>","nodes":[{"content":"An <ph id=\"ph1\">&lt;xref:System.Array&gt;</ph> of type <ph id=\"ph2\">&lt;xref:System.Byte&gt;</ph>","pos":[0,49],"source":"An <xref:System.Array> of type <xref:System.Byte>"}]},{"pos":[1552,1569],"content":"<xref:System.Uri>","nodes":[]},{"pos":[1579,1599],"content":"<xref:System.Object>","nodes":[]},{"pos":[1606,2069],"content":"Unlike its base type, this converter can handle any type adhering to the Data Contract model. The converter overrides <xref:System.ServiceModel.Dispatcher.QueryStringConverter.ConvertValueToString%28System.Object%2CSystem.Type%29> so that each parameter is serialized to JSON using the default <xref:System.Runtime.Serialization.Json.DataContractJsonSerializer> and a JSON XML Writer configured to use the UTF-8 encoding. `null` parameters are returned as `null`.","nodes":[{"content":"Unlike its base type, this converter can handle any type adhering to the Data Contract model.","pos":[0,93]},{"content":"The converter overrides <ph id=\"ph1\">&lt;xref:System.ServiceModel.Dispatcher.QueryStringConverter.ConvertValueToString%28System.Object%2CSystem.Type%29&gt;</ph> so that each parameter is serialized to JSON using the default <ph id=\"ph2\">&lt;xref:System.Runtime.Serialization.Json.DataContractJsonSerializer&gt;</ph> and a JSON XML Writer configured to use the UTF-8 encoding.","pos":[94,421],"source":" The converter overrides <xref:System.ServiceModel.Dispatcher.QueryStringConverter.ConvertValueToString%28System.Object%2CSystem.Type%29> so that each parameter is serialized to JSON using the default <xref:System.Runtime.Serialization.Json.DataContractJsonSerializer> and a JSON XML Writer configured to use the UTF-8 encoding."},{"content":"<ph id=\"ph1\">`null`</ph> parameters are returned as <ph id=\"ph2\">`null`</ph>.","pos":[422,463],"source":"`null` parameters are returned as `null`."}]}],"pos":[950,3068],"yaml":true,"extradata":"MT"},{"content":"Initializes a new instance of the <xref href=\"System.ServiceModel.Dispatcher.JsonQueryStringConverter\"></xref> class.","nodes":[{"pos":[0,117],"content":"Initializes a new instance of the <ph id=\"ph1\">&lt;xref href=\"System.ServiceModel.Dispatcher.JsonQueryStringConverter\"&gt;&lt;/xref&gt;</ph> class.","source":"Initializes a new instance of the <xref href=\"System.ServiceModel.Dispatcher.JsonQueryStringConverter\"></xref> class."}],"pos":[4790,4908],"yaml":true},{"content":"Gets a value that indicates whether a Common Language Runtime (CLR) type specified is a known type that can be serialized and deserialized.","nodes":[{"pos":[0,139],"content":"Gets a value that indicates whether a Common Language Runtime (CLR) type specified is a known type that can be serialized and deserialized.","nodes":[{"content":"Gets a value that indicates whether a Common Language Runtime (CLR) type specified is a known type that can be serialized and deserialized.","pos":[0,139]}]}],"pos":[6300,6440],"yaml":true},{"content":"This checks whether a CLR type can be used in a JSON query string. The CLR types that can be used in such a string are just those that are supported by <xref:System.Runtime.Serialization.DataContractSerializer>.","nodes":[{"pos":[0,211],"content":"This checks whether a CLR type can be used in a JSON query string. The CLR types that can be used in such a string are just those that are supported by <xref:System.Runtime.Serialization.DataContractSerializer>.","nodes":[{"content":"This checks whether a CLR type can be used in a JSON query string. The CLR types that can be used in such a string are just those that are supported by <xref:System.Runtime.Serialization.DataContractSerializer>.","pos":[0,211],"nodes":[{"content":"This checks whether a CLR type can be used in a JSON query string.","pos":[0,66]},{"content":"The CLR types that can be used in such a string are just those that are supported by <ph id=\"ph1\">&lt;xref:System.Runtime.Serialization.DataContractSerializer&gt;</ph>.","pos":[67,211],"source":" The CLR types that can be used in such a string are just those that are supported by <xref:System.Runtime.Serialization.DataContractSerializer>."}]}]}],"pos":[6451,6663],"yaml":true,"extradata":"MT"},{"content":"The <xref href=\"System.Type\"></xref> to verify.","nodes":[{"pos":[0,47],"content":"The <ph id=\"ph1\">&lt;xref href=\"System.Type\"&gt;&lt;/xref&gt;</ph> to verify.","source":"The <xref href=\"System.Type\"></xref> to verify."}],"pos":[6805,6853],"yaml":true},{"content":"`true` if the type can be serialized; otherwise `false`.","nodes":[{"pos":[0,56],"content":"<ph id=\"ph1\">`true`</ph> if the type can be serialized; otherwise <ph id=\"ph2\">`false`</ph>.","source":"`true` if the type can be serialized; otherwise `false`."}],"pos":[6911,6970],"yaml":true},{"content":"The <code>type</code> is `null`.","nodes":[{"pos":[0,32],"content":"The <bpt id=\"p1\">&lt;code&gt;</bpt><ph id=\"ph1\">type</ph><ept id=\"p1\">&lt;/code&gt;</ept> is <ph id=\"ph2\">`null`</ph>.","source":"The <code>type</code> is `null`."}],"pos":[7166,7199],"yaml":true},{"content":"Deserializes a JavaScript Object Notation (JSON) query string parameter to a specified Common Language Runtime (CLR) type.","nodes":[{"pos":[0,122],"content":"Deserializes a JavaScript Object Notation (JSON) query string parameter to a specified Common Language Runtime (CLR) type.","nodes":[{"content":"Deserializes a JavaScript Object Notation (JSON) query string parameter to a specified Common Language Runtime (CLR) type.","pos":[0,122]}]}],"pos":[8547,8670],"yaml":true},{"content":"The JSON form of the parameter value.","nodes":[{"pos":[0,37],"content":"The JSON form of the parameter value.","nodes":[{"content":"The JSON form of the parameter value.","pos":[0,37]}]}],"pos":[8858,8896],"yaml":true},{"content":"The <xref href=\"System.Type\"></xref> to deserialize the parameter to.","nodes":[{"pos":[0,69],"content":"The <ph id=\"ph1\">&lt;xref href=\"System.Type\"&gt;&lt;/xref&gt;</ph> to deserialize the parameter to.","source":"The <xref href=\"System.Type\"></xref> to deserialize the parameter to."}],"pos":[8963,9033],"yaml":true},{"content":"An instance of the CLR type to which the parameter value was converted.","nodes":[{"pos":[0,71],"content":"An instance of the CLR type to which the parameter value was converted.","nodes":[{"content":"An instance of the CLR type to which the parameter value was converted.","pos":[0,71]}]}],"pos":[9090,9162],"yaml":true},{"content":"Serializes a Common Language Runtime (CLR) parameter type to a JavaScript Object Notation (JSON) representation.","nodes":[{"pos":[0,112],"content":"Serializes a Common Language Runtime (CLR) parameter type to a JavaScript Object Notation (JSON) representation.","nodes":[{"content":"Serializes a Common Language Runtime (CLR) parameter type to a JavaScript Object Notation (JSON) representation.","pos":[0,112]}]}],"pos":[10617,10730],"yaml":true},{"content":"The converter overrides <xref:System.ServiceModel.Dispatcher.QueryStringConverter.ConvertValueToString%28System.Object%2CSystem.Type%29> so that each parameter is serialized to JSON using the default <xref:System.Runtime.Serialization.Json.DataContractJsonSerializer> and a JSON XML Writer configured to use the UTF-8 encoding. Unlike its base type, this converter can handle any type adhering to the Data Contract model.","nodes":[{"pos":[0,421],"content":"The converter overrides <xref:System.ServiceModel.Dispatcher.QueryStringConverter.ConvertValueToString%28System.Object%2CSystem.Type%29> so that each parameter is serialized to JSON using the default <xref:System.Runtime.Serialization.Json.DataContractJsonSerializer> and a JSON XML Writer configured to use the UTF-8 encoding. Unlike its base type, this converter can handle any type adhering to the Data Contract model.","nodes":[{"content":"The converter overrides <xref:System.ServiceModel.Dispatcher.QueryStringConverter.ConvertValueToString%28System.Object%2CSystem.Type%29> so that each parameter is serialized to JSON using the default <xref:System.Runtime.Serialization.Json.DataContractJsonSerializer> and a JSON XML Writer configured to use the UTF-8 encoding. Unlike its base type, this converter can handle any type adhering to the Data Contract model.","pos":[0,421],"nodes":[{"content":"The converter overrides <ph id=\"ph1\">&lt;xref:System.ServiceModel.Dispatcher.QueryStringConverter.ConvertValueToString%28System.Object%2CSystem.Type%29&gt;</ph> so that each parameter is serialized to JSON using the default <ph id=\"ph2\">&lt;xref:System.Runtime.Serialization.Json.DataContractJsonSerializer&gt;</ph> and a JSON XML Writer configured to use the UTF-8 encoding.","pos":[0,327],"source":"The converter overrides <xref:System.ServiceModel.Dispatcher.QueryStringConverter.ConvertValueToString%28System.Object%2CSystem.Type%29> so that each parameter is serialized to JSON using the default <xref:System.Runtime.Serialization.Json.DataContractJsonSerializer> and a JSON XML Writer configured to use the UTF-8 encoding."},{"content":"Unlike its base type, this converter can handle any type adhering to the Data Contract model.","pos":[328,421]}]}]}],"pos":[10741,11163],"yaml":true,"extradata":"MT"},{"content":"The parameter value to convert.","nodes":[{"pos":[0,31],"content":"The parameter value to convert.","nodes":[{"content":"The parameter value to convert.","pos":[0,31]}]}],"pos":[11764,11796],"yaml":true},{"content":"The <xref href=\"System.Type\"></xref> of the parameter to serialize.","nodes":[{"pos":[0,67],"content":"The <ph id=\"ph1\">&lt;xref href=\"System.Type\"&gt;&lt;/xref&gt;</ph> of the parameter to serialize.","source":"The <xref href=\"System.Type\"></xref> of the parameter to serialize."}],"pos":[11863,11931],"yaml":true},{"content":"The JSON query string parameter serialization of the CLR type. `null` is returned if the parameter is `null`.","nodes":[{"pos":[0,109],"content":"The JSON query string parameter serialization of the CLR type. `null` is returned if the parameter is `null`.","nodes":[{"content":"The JSON query string parameter serialization of the CLR type.","pos":[0,62]},{"content":"<ph id=\"ph1\">`null`</ph> is returned if the parameter is <ph id=\"ph2\">`null`</ph>.","pos":[63,109],"source":"`null` is returned if the parameter is `null`."}]}],"pos":[11988,12098],"yaml":true}],"content":"### YamlMime:ManagedReference\nitems:\n- uid: System.ServiceModel.Dispatcher.JsonQueryStringConverter\n  commentId: T:System.ServiceModel.Dispatcher.JsonQueryStringConverter\n  id: JsonQueryStringConverter\n  children:\n  - System.ServiceModel.Dispatcher.JsonQueryStringConverter.#ctor\n  - System.ServiceModel.Dispatcher.JsonQueryStringConverter.CanConvert(System.Type)\n  - System.ServiceModel.Dispatcher.JsonQueryStringConverter.ConvertStringToValue(System.String,System.Type)\n  - System.ServiceModel.Dispatcher.JsonQueryStringConverter.ConvertValueToString(System.Object,System.Type)\n  langs:\n  - csharp\n  name: JsonQueryStringConverter\n  nameWithType: JsonQueryStringConverter\n  fullName: System.ServiceModel.Dispatcher.JsonQueryStringConverter\n  type: Class\n  assemblies:\n  - System.ServiceModel.Web\n  namespace: System.ServiceModel.Dispatcher\n  summary: This class converts a parameter value to and from a JavaScript Object Notation (JSON).\n  remarks: \"Parameters can be specified in a JSON query string within a URL. This class controls how JSON query string parameters are mapped to and from a service operation's parameters when the <xref:System.ServiceModel.Description.WebScriptEnablingBehavior> is used to process HTTP requests from browser-based ASP.NET AJAX clients.  \\n  \\n This class is used internally by the [!INCLUDE[indigo1](~/includes/indigo1-md.md)]<xref:System.ServiceModel.Description.WebScriptEnablingBehavior> class for endpoints configured to accept HTTP GET/POST requests with parameters encoded in the URI query string. This class is used to convert between CLR objects and the individual operation request parameter values in the URI query string. Unlike its base type, this class supports values of both primitive and complex types.  \\n  \\n <xref:System.ServiceModel.Dispatcher.JsonQueryStringConverter> derives from <xref:System.ServiceModel.Dispatcher.QueryStringConverter> and supports the following types:  \\n  \\n-   <xref:System.Byte>  \\n  \\n-   <xref:System.SByte>  \\n  \\n-   <xref:System.Int16>  \\n  \\n-   <xref:System.Int32>  \\n  \\n-   <xref:System.Int64>  \\n  \\n-   <xref:System.UInt16>  \\n  \\n-   <xref:System.UInt32>  \\n  \\n-   <xref:System.UInt64>  \\n  \\n-   <xref:System.Single>  \\n  \\n-   <xref:System.Double>  \\n  \\n-   <xref:System.Char>  \\n  \\n-   <xref:System.Decimal>  \\n  \\n-   <xref:System.Boolean>  \\n  \\n-   <xref:System.String>  \\n  \\n-   <xref:System.DateTime>  \\n  \\n-   <xref:System.TimeSpan>  \\n  \\n-   <xref:System.Guid>  \\n  \\n-   An <xref:System.Array> of type <xref:System.Byte>  \\n  \\n-   <xref:System.Uri>  \\n  \\n-   <xref:System.Object>  \\n  \\n Unlike its base type, this converter can handle any type adhering to the Data Contract model. The converter overrides <xref:System.ServiceModel.Dispatcher.QueryStringConverter.ConvertValueToString%28System.Object%2CSystem.Type%29> so that each parameter is serialized to JSON using the default <xref:System.Runtime.Serialization.Json.DataContractJsonSerializer> and a JSON XML Writer configured to use the UTF-8 encoding. `null` parameters are returned as `null`.\"\n  syntax:\n    content: 'public class JsonQueryStringConverter : System.ServiceModel.Dispatcher.QueryStringConverter'\n  inheritance:\n  - System.Object\n  - System.ServiceModel.Dispatcher.QueryStringConverter\n  implements: []\n  inheritedMembers:\n  - System.Object.Equals(System.Object)\n  - System.Object.Equals(System.Object,System.Object)\n  - System.Object.GetHashCode\n  - System.Object.GetType\n  - System.Object.MemberwiseClone\n  - System.Object.ReferenceEquals(System.Object,System.Object)\n  - System.Object.ToString\n  version:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.ServiceModel.Dispatcher/JsonQueryStringConverter.xml\n  ms.technology:\n  - dotnet-standard\n  author: Erikre\n  ms.author: erikre\n  manager: erikre\n- uid: System.ServiceModel.Dispatcher.JsonQueryStringConverter.#ctor\n  commentId: M:System.ServiceModel.Dispatcher.JsonQueryStringConverter.#ctor\n  id: '#ctor'\n  parent: System.ServiceModel.Dispatcher.JsonQueryStringConverter\n  langs:\n  - csharp\n  name: JsonQueryStringConverter()\n  nameWithType: JsonQueryStringConverter.JsonQueryStringConverter()\n  fullName: JsonQueryStringConverter.JsonQueryStringConverter()\n  type: Constructor\n  assemblies:\n  - System.ServiceModel.Web\n  namespace: System.ServiceModel.Dispatcher\n  summary: Initializes a new instance of the <xref href=\"System.ServiceModel.Dispatcher.JsonQueryStringConverter\"></xref> class.\n  syntax:\n    content: public JsonQueryStringConverter ();\n    parameters: []\n  overload: System.ServiceModel.Dispatcher.JsonQueryStringConverter.#ctor*\n  exceptions: []\n  version:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.ServiceModel.Dispatcher/JsonQueryStringConverter.xml\n  ms.technology:\n  - dotnet-standard\n  author: Erikre\n  ms.author: erikre\n  manager: erikre\n- uid: System.ServiceModel.Dispatcher.JsonQueryStringConverter.CanConvert(System.Type)\n  commentId: M:System.ServiceModel.Dispatcher.JsonQueryStringConverter.CanConvert(System.Type)\n  id: CanConvert(System.Type)\n  parent: System.ServiceModel.Dispatcher.JsonQueryStringConverter\n  langs:\n  - csharp\n  name: CanConvert(Type)\n  nameWithType: JsonQueryStringConverter.CanConvert(Type)\n  fullName: JsonQueryStringConverter.CanConvert(Type)\n  type: Method\n  assemblies:\n  - System.ServiceModel.Web\n  namespace: System.ServiceModel.Dispatcher\n  summary: Gets a value that indicates whether a Common Language Runtime (CLR) type specified is a known type that can be serialized and deserialized.\n  remarks: This checks whether a CLR type can be used in a JSON query string. The CLR types that can be used in such a string are just those that are supported by <xref:System.Runtime.Serialization.DataContractSerializer>.\n  syntax:\n    content: public override bool CanConvert (Type type);\n    parameters:\n    - id: type\n      type: System.Type\n      description: The <xref href=\"System.Type\"></xref> to verify.\n    return:\n      type: System.Boolean\n      description: '`true` if the type can be serialized; otherwise `false`.'\n  overload: System.ServiceModel.Dispatcher.JsonQueryStringConverter.CanConvert*\n  exceptions:\n  - type: System.ArgumentNullException\n    commentId: T:System.ArgumentNullException\n    description: The <code>type</code> is `null`.\n  version:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.ServiceModel.Dispatcher/JsonQueryStringConverter.xml\n  ms.technology:\n  - dotnet-standard\n  author: Erikre\n  ms.author: erikre\n  manager: erikre\n- uid: System.ServiceModel.Dispatcher.JsonQueryStringConverter.ConvertStringToValue(System.String,System.Type)\n  commentId: M:System.ServiceModel.Dispatcher.JsonQueryStringConverter.ConvertStringToValue(System.String,System.Type)\n  id: ConvertStringToValue(System.String,System.Type)\n  parent: System.ServiceModel.Dispatcher.JsonQueryStringConverter\n  langs:\n  - csharp\n  name: ConvertStringToValue(String, Type)\n  nameWithType: JsonQueryStringConverter.ConvertStringToValue(String, Type)\n  fullName: JsonQueryStringConverter.ConvertStringToValue(String, Type)\n  type: Method\n  assemblies:\n  - System.ServiceModel.Web\n  namespace: System.ServiceModel.Dispatcher\n  summary: Deserializes a JavaScript Object Notation (JSON) query string parameter to a specified Common Language Runtime (CLR) type.\n  syntax:\n    content: public override object ConvertStringToValue (string parameter, Type parameterType);\n    parameters:\n    - id: parameter\n      type: System.String\n      description: The JSON form of the parameter value.\n    - id: parameterType\n      type: System.Type\n      description: The <xref href=\"System.Type\"></xref> to deserialize the parameter to.\n    return:\n      type: System.Object\n      description: An instance of the CLR type to which the parameter value was converted.\n  overload: System.ServiceModel.Dispatcher.JsonQueryStringConverter.ConvertStringToValue*\n  exceptions: []\n  version:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.ServiceModel.Dispatcher/JsonQueryStringConverter.xml\n  ms.technology:\n  - dotnet-standard\n  author: Erikre\n  ms.author: erikre\n  manager: erikre\n- uid: System.ServiceModel.Dispatcher.JsonQueryStringConverter.ConvertValueToString(System.Object,System.Type)\n  commentId: M:System.ServiceModel.Dispatcher.JsonQueryStringConverter.ConvertValueToString(System.Object,System.Type)\n  id: ConvertValueToString(System.Object,System.Type)\n  parent: System.ServiceModel.Dispatcher.JsonQueryStringConverter\n  langs:\n  - csharp\n  name: ConvertValueToString(Object, Type)\n  nameWithType: JsonQueryStringConverter.ConvertValueToString(Object, Type)\n  fullName: JsonQueryStringConverter.ConvertValueToString(Object, Type)\n  type: Method\n  assemblies:\n  - System.ServiceModel.Web\n  namespace: System.ServiceModel.Dispatcher\n  summary: Serializes a Common Language Runtime (CLR) parameter type to a JavaScript Object Notation (JSON) representation.\n  remarks: The converter overrides <xref:System.ServiceModel.Dispatcher.QueryStringConverter.ConvertValueToString%28System.Object%2CSystem.Type%29> so that each parameter is serialized to JSON using the default <xref:System.Runtime.Serialization.Json.DataContractJsonSerializer> and a JSON XML Writer configured to use the UTF-8 encoding. Unlike its base type, this converter can handle any type adhering to the Data Contract model.\n  example:\n  - \"Consider the following operation.  \\n  \\n```  \\n[WebGet]  \\n[OperationContract] public int GetOptionQuote(string ticker, DateTime dte, Option opt);  \\n```  \\n  \\n This operation produces a URL that is a URL-encoded version of the following.  \\n  \\n```  \\nhttp://localhost/quote.svc/GetOptionQuote?ticker=\\\"MSFT\\\"&dte=\\\"\\\\/Date(50067823)\\\\/\\\"&opt={\\\"type\\\":\\\"call\\\",\\\"strikePrice\\\":\\\"35\\\"}  \\n```\"\n  syntax:\n    content: public override string ConvertValueToString (object parameter, Type parameterType);\n    parameters:\n    - id: parameter\n      type: System.Object\n      description: The parameter value to convert.\n    - id: parameterType\n      type: System.Type\n      description: The <xref href=\"System.Type\"></xref> of the parameter to serialize.\n    return:\n      type: System.String\n      description: The JSON query string parameter serialization of the CLR type. `null` is returned if the parameter is `null`.\n  overload: System.ServiceModel.Dispatcher.JsonQueryStringConverter.ConvertValueToString*\n  exceptions: []\n  version:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.ServiceModel.Dispatcher/JsonQueryStringConverter.xml\n  ms.technology:\n  - dotnet-standard\n  author: Erikre\n  ms.author: erikre\n  manager: erikre\nreferences:\n- uid: System.ServiceModel.Dispatcher.QueryStringConverter\n  parent: System.ServiceModel.Dispatcher\n  isExternal: false\n  name: QueryStringConverter\n  nameWithType: QueryStringConverter\n  fullName: System.ServiceModel.Dispatcher.QueryStringConverter\n- uid: System.ArgumentNullException\n  parent: System\n  isExternal: false\n  name: ArgumentNullException\n  nameWithType: ArgumentNullException\n  fullName: System.ArgumentNullException\n- uid: System.ServiceModel.Dispatcher.JsonQueryStringConverter.#ctor\n  parent: System.ServiceModel.Dispatcher.JsonQueryStringConverter\n  isExternal: false\n  name: JsonQueryStringConverter()\n  nameWithType: JsonQueryStringConverter.JsonQueryStringConverter()\n  fullName: JsonQueryStringConverter.JsonQueryStringConverter()\n- uid: System.ServiceModel.Dispatcher.JsonQueryStringConverter.CanConvert(System.Type)\n  parent: System.ServiceModel.Dispatcher.JsonQueryStringConverter\n  isExternal: false\n  name: CanConvert(Type)\n  nameWithType: JsonQueryStringConverter.CanConvert(Type)\n  fullName: JsonQueryStringConverter.CanConvert(Type)\n- uid: System.Boolean\n  parent: System\n  isExternal: false\n  name: Boolean\n  nameWithType: Boolean\n  fullName: System.Boolean\n- uid: System.Type\n  parent: System\n  isExternal: false\n  name: Type\n  nameWithType: Type\n  fullName: System.Type\n- uid: System.ServiceModel.Dispatcher.JsonQueryStringConverter.ConvertStringToValue(System.String,System.Type)\n  parent: System.ServiceModel.Dispatcher.JsonQueryStringConverter\n  isExternal: false\n  name: ConvertStringToValue(String, Type)\n  nameWithType: JsonQueryStringConverter.ConvertStringToValue(String, Type)\n  fullName: JsonQueryStringConverter.ConvertStringToValue(String, Type)\n- uid: System.Object\n  parent: System\n  isExternal: false\n  name: Object\n  nameWithType: Object\n  fullName: System.Object\n- uid: System.String\n  parent: System\n  isExternal: false\n  name: String\n  nameWithType: String\n  fullName: System.String\n- uid: System.ServiceModel.Dispatcher.JsonQueryStringConverter.ConvertValueToString(System.Object,System.Type)\n  parent: System.ServiceModel.Dispatcher.JsonQueryStringConverter\n  isExternal: false\n  name: ConvertValueToString(Object, Type)\n  nameWithType: JsonQueryStringConverter.ConvertValueToString(Object, Type)\n  fullName: JsonQueryStringConverter.ConvertValueToString(Object, Type)\n- uid: System.ServiceModel.Dispatcher.JsonQueryStringConverter.#ctor*\n  parent: System.ServiceModel.Dispatcher.JsonQueryStringConverter\n  isExternal: false\n  name: JsonQueryStringConverter\n  nameWithType: JsonQueryStringConverter.JsonQueryStringConverter\n  fullName: JsonQueryStringConverter.JsonQueryStringConverter\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.ServiceModel.Dispatcher/JsonQueryStringConverter.xml\n- uid: System.ServiceModel.Dispatcher.JsonQueryStringConverter.CanConvert*\n  parent: System.ServiceModel.Dispatcher.JsonQueryStringConverter\n  isExternal: false\n  name: CanConvert\n  nameWithType: JsonQueryStringConverter.CanConvert\n  fullName: JsonQueryStringConverter.CanConvert\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.ServiceModel.Dispatcher/JsonQueryStringConverter.xml\n- uid: System.ServiceModel.Dispatcher.JsonQueryStringConverter.ConvertStringToValue*\n  parent: System.ServiceModel.Dispatcher.JsonQueryStringConverter\n  isExternal: false\n  name: ConvertStringToValue\n  nameWithType: JsonQueryStringConverter.ConvertStringToValue\n  fullName: JsonQueryStringConverter.ConvertStringToValue\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.ServiceModel.Dispatcher/JsonQueryStringConverter.xml\n- uid: System.ServiceModel.Dispatcher.JsonQueryStringConverter.ConvertValueToString*\n  parent: System.ServiceModel.Dispatcher.JsonQueryStringConverter\n  isExternal: false\n  name: ConvertValueToString\n  nameWithType: JsonQueryStringConverter.ConvertValueToString\n  fullName: JsonQueryStringConverter.ConvertValueToString\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.ServiceModel.Dispatcher/JsonQueryStringConverter.xml\n- uid: System.Object.Equals(System.Object)\n  parent: System.Object\n  isExternal: false\n  name: Equals(Object)\n  nameWithType: Object.Equals(Object)\n  fullName: Object.Equals(Object)\n- uid: System.Object.Equals(System.Object,System.Object)\n  parent: System.Object\n  isExternal: false\n  name: Equals(Object, Object)\n  nameWithType: Object.Equals(Object, Object)\n  fullName: Object.Equals(Object, Object)\n- uid: System.Object.GetHashCode\n  parent: System.Object\n  isExternal: false\n  name: GetHashCode()\n  nameWithType: Object.GetHashCode()\n  fullName: Object.GetHashCode()\n- uid: System.Object.GetType\n  parent: System.Object\n  isExternal: false\n  name: GetType()\n  nameWithType: Object.GetType()\n  fullName: Object.GetType()\n- uid: System.Object.MemberwiseClone\n  parent: System.Object\n  isExternal: false\n  name: MemberwiseClone()\n  nameWithType: Object.MemberwiseClone()\n  fullName: Object.MemberwiseClone()\n- uid: System.Object.ReferenceEquals(System.Object,System.Object)\n  parent: System.Object\n  isExternal: false\n  name: ReferenceEquals(Object, Object)\n  nameWithType: Object.ReferenceEquals(Object, Object)\n  fullName: Object.ReferenceEquals(Object, Object)\n- uid: System.Object.ToString\n  parent: System.Object\n  isExternal: false\n  name: ToString()\n  nameWithType: Object.ToString()\n  fullName: Object.ToString()\n"}