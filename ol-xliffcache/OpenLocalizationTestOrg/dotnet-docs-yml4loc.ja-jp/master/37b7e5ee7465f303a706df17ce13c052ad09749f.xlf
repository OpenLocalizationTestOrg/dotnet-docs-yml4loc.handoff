<?xml version="1.0"?>
<xliff version="1.2" xmlns="urn:oasis:names:tc:xliff:document:1.2" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:schemaLocation="urn:oasis:names:tc:xliff:document:1.2 xliff-core-1.2-transitional.xsd">
  <file datatype="xml" original="markdown" source-language="en-US" target-language="ja-jp">
    <header>
      <tool tool-id="mdxliff" tool-name="mdxliff" tool-version="1.0-fdd610b" tool-company="Microsoft" />
      <xliffext:olfilehash xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">37b7e5ee7465f303a706df17ce13c052ad09749f</xliffext:olfilehash>
      <xliffext:olfilepath xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">System.Globalization.CompareOptions.yml</xliffext:olfilepath>
      <xliffext:oltranslationpriority xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">net47</xliffext:oltranslationpriority>
      <xliffext:oltranslationtype xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">Human Translation</xliffext:oltranslationtype>
      <xliffext:olskeletonhash xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">8f0e9b2156e54567d726320971c8090b491ad53d</xliffext:olskeletonhash>
      <xliffext:olxliffhash xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">e805404e5fe7d282a0fbfd2dd7e196b965206aa3</xliffext:olxliffhash>
    </header>
    <body>
      <group id="content" extype="content">
        <trans-unit id="101" translate="yes" xml:space="preserve">
          <source>Defines the string comparison options to use with <ph id="ph1">&lt;xref href="System.Globalization.CompareInfo"&gt;&lt;/xref&gt;</ph>.</source>
        </trans-unit>
        <trans-unit id="102" translate="yes" xml:space="preserve" extradata="MT">
          <source>These options denote case sensitivity or necessity to ignore types of characters.</source>
        </trans-unit>
        <trans-unit id="103" translate="yes" xml:space="preserve" extradata="MT">
          <source>The .NET Framework uses three distinct ways of sorting: word sort, string sort, and ordinal sort.</source>
        </trans-unit>
        <trans-unit id="104" translate="yes" xml:space="preserve" extradata="MT">
          <source>Word sort performs a culture-sensitive comparison of strings.</source>
        </trans-unit>
        <trans-unit id="105" translate="yes" xml:space="preserve" extradata="MT">
          <source>Certain nonalphanumeric characters might have special weights assigned to them.</source>
        </trans-unit>
        <trans-unit id="106" translate="yes" xml:space="preserve" extradata="MT">
          <source>For example, the hyphen ("-") might have a very small weight assigned to it so that "coop" and "co-op" appear next to each other in a sorted list.</source>
        </trans-unit>
        <trans-unit id="107" translate="yes" xml:space="preserve" extradata="MT">
          <source>String sort is similar to word sort, except that there are no special cases.</source>
        </trans-unit>
        <trans-unit id="108" translate="yes" xml:space="preserve" extradata="MT">
          <source>Therefore, all nonalphanumeric symbols come before all alphanumeric characters.</source>
        </trans-unit>
        <trans-unit id="109" translate="yes" xml:space="preserve" extradata="MT">
          <source>Ordinal sort compares strings based on the Unicode values of each element of the string.</source>
        </trans-unit>
        <trans-unit id="110" translate="yes" xml:space="preserve" extradata="MT">
          <source>The StringSort value can only be used with <ph id="ph1">&lt;xref:System.Globalization.CompareInfo.Compare%2A?displayProperty=fullName&gt;</ph> and <ph id="ph2">&lt;xref:System.Globalization.CompareInfo.GetSortKey%2A?displayProperty=fullName&gt;</ph>.</source>
        </trans-unit>
        <trans-unit id="111" translate="yes" xml:space="preserve" extradata="MT">
          <source><ph id="ph1">&lt;xref:System.ArgumentException&gt;</ph> is thrown if the StringSort value is used with <ph id="ph2">&lt;xref:System.Globalization.CompareInfo.IsPrefix%2A?displayProperty=fullName&gt;</ph>, <ph id="ph3">&lt;xref:System.Globalization.CompareInfo.IsSuffix%2A?displayProperty=fullName&gt;</ph>, <ph id="ph4">&lt;xref:System.Globalization.CompareInfo.IndexOf%2A?displayProperty=fullName&gt;</ph>, or <ph id="ph5">&lt;xref:System.Globalization.CompareInfo.LastIndexOf%2A?displayProperty=fullName&gt;</ph>.</source>
        </trans-unit>
        <trans-unit id="112" translate="yes" xml:space="preserve" extradata="MT">
          <source>When possible, the application should use string comparison methods that accept a <ph id="ph1">&lt;xref:System.Globalization.CompareOptions&gt;</ph> value to specify the kind of comparison expected.</source>
        </trans-unit>
        <trans-unit id="113" translate="yes" xml:space="preserve" extradata="MT">
          <source>As a general rule, user-facing comparisons are best served by the use of linguistic options (using the current culture), while security comparisons should specify Ordinal or OrdinalIgnoreCase.</source>
        </trans-unit>
        <trans-unit id="114" translate="yes" xml:space="preserve">
          <source>Indicates that the string comparison must ignore case.</source>
        </trans-unit>
        <trans-unit id="115" translate="yes" xml:space="preserve">
          <source>Indicates that the string comparison must ignore the Kana type.</source>
        </trans-unit>
        <trans-unit id="116" translate="yes" xml:space="preserve">
          <source>Kana type refers to Japanese hiragana and katakana characters, which represent phonetic sounds in the Japanese language.</source>
        </trans-unit>
        <trans-unit id="117" translate="yes" xml:space="preserve">
          <source>Hiragana is used for native Japanese expressions and words, while katakana is used for words borrowed from other languages, such as "computer" or "Internet".</source>
        </trans-unit>
        <trans-unit id="118" translate="yes" xml:space="preserve">
          <source>A phonetic sound can be expressed in both hiragana and katakana.</source>
        </trans-unit>
        <trans-unit id="119" translate="yes" xml:space="preserve">
          <source>If this value is selected, the hiragana character for one sound is considered equal to the katakana character for the same sound.</source>
        </trans-unit>
        <trans-unit id="120" translate="yes" xml:space="preserve">
          <source>Indicates that the string comparison must ignore nonspacing combining characters, such as diacritics.</source>
        </trans-unit>
        <trans-unit id="121" translate="yes" xml:space="preserve">
          <source>The <bpt id="p1">[</bpt>Unicode Standard<ept id="p1">](http://go.microsoft.com/fwlink/?linkid=37123)</ept> defines combining characters as characters that are combined with base characters to produce a new character.</source>
        </trans-unit>
        <trans-unit id="122" translate="yes" xml:space="preserve">
          <source>Nonspacing combining characters do not occupy a spacing position by themselves when rendered.</source>
        </trans-unit>
        <trans-unit id="123" translate="yes" xml:space="preserve">
          <source>Indicates that the string comparison must ignore symbols, such as white-space characters, punctuation, currency symbols, the percent sign, mathematical symbols, the ampersand, and so on.</source>
        </trans-unit>
        <trans-unit id="124" translate="yes" xml:space="preserve">
          <source>Indicates that the string comparison must ignore the character width.</source>
        </trans-unit>
        <trans-unit id="125" translate="yes" xml:space="preserve">
          <source>For example, Japanese katakana characters can be written as full-width or half-width.</source>
        </trans-unit>
        <trans-unit id="126" translate="yes" xml:space="preserve">
          <source>If this value is selected, the katakana characters written as full-width are considered equal to the same characters written as half-width.</source>
        </trans-unit>
        <trans-unit id="127" translate="yes" xml:space="preserve">
          <source>Indicates the default option settings for string comparisons.</source>
        </trans-unit>
        <trans-unit id="128" translate="yes" xml:space="preserve">
          <source>Indicates that the string comparison must use successive Unicode UTF-16 encoded values of the string (code unit by code unit comparison), leading to a fast comparison but one that is culture-insensitive.</source>
        </trans-unit>
        <trans-unit id="129" translate="yes" xml:space="preserve">
          <source>A string starting with a code unit XXXX16 comes before a string starting with YYYY16, if XXXX16 is less than YYYY16.</source>
        </trans-unit>
        <trans-unit id="130" translate="yes" xml:space="preserve">
          <source>This value cannot be combined with other <ph id="ph1">&lt;xref href="System.Globalization.CompareOptions"&gt;&lt;/xref&gt;</ph> values and must be used alone.</source>
        </trans-unit>
        <trans-unit id="131" translate="yes" xml:space="preserve">
          <source>String comparison must ignore case, then perform an ordinal comparison.</source>
        </trans-unit>
        <trans-unit id="132" translate="yes" xml:space="preserve">
          <source>This technique is equivalent to converting the string to uppercase using the invariant culture and then performing an ordinal comparison on the result.</source>
        </trans-unit>
        <trans-unit id="133" translate="yes" xml:space="preserve">
          <source>Indicates that the string comparison must use the string sort algorithm.</source>
        </trans-unit>
        <trans-unit id="134" translate="yes" xml:space="preserve">
          <source>In a string sort, the hyphen and the apostrophe, as well as other nonalphanumeric symbols, come before alphanumeric characters.</source>
        </trans-unit>
      </group>
    </body>
  </file>
</xliff>