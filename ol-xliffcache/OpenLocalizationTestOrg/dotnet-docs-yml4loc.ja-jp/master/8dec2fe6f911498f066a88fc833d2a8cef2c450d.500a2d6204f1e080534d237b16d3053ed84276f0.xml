{"nodes":[{"content":"Supports a simple iteration over the <xref href=\"System.Data.Metadata.Edm.ReadOnlyMetadataCollection`1\"></xref> collection.","nodes":[{"pos":[0,123],"content":"Supports a simple iteration over the <ph id=\"ph1\">&lt;xref href=\"System.Data.Metadata.Edm.ReadOnlyMetadataCollection`1\"&gt;&lt;/xref&gt;</ph> collection.","source":"Supports a simple iteration over the <xref href=\"System.Data.Metadata.Edm.ReadOnlyMetadataCollection`1\"></xref> collection."}],"pos":[966,1090],"yaml":true},{"content":"Gets the member at the current position.","nodes":[{"pos":[0,40],"content":"Gets the member at the current position.","nodes":[{"content":"Gets the member at the current position.","pos":[0,40]}]}],"pos":[2493,2534],"yaml":true},{"content":"The member at the current position.","nodes":[{"pos":[0,35],"content":"The member at the current position.","nodes":[{"content":"The member at the current position.","pos":[0,35]}]}],"pos":[2628,2664],"yaml":true},{"content":"Disposes of this enumerator.","nodes":[{"pos":[0,28],"content":"Disposes of this enumerator.","nodes":[{"content":"Disposes of this enumerator.","pos":[0,28]}]}],"pos":[3859,3888],"yaml":true},{"content":"Moves to the next member in the collection of type <xref href=\"System.Data.Metadata.Edm.ReadOnlyMetadataCollection`1.Enumerator\"></xref>.","nodes":[{"pos":[0,137],"content":"Moves to the next member in the collection of type <ph id=\"ph1\">&lt;xref href=\"System.Data.Metadata.Edm.ReadOnlyMetadataCollection`1.Enumerator\"&gt;&lt;/xref&gt;</ph>.","source":"Moves to the next member in the collection of type <xref href=\"System.Data.Metadata.Edm.ReadOnlyMetadataCollection`1.Enumerator\"></xref>."}],"pos":[5155,5293],"yaml":true},{"content":"`true` if the enumerator is moved in the collection of type <xref href=\"System.Data.Metadata.Edm.ReadOnlyMetadataCollection`1.EnumeratortaCollection\"></xref>; otherwise, `false`.","nodes":[{"pos":[0,178],"content":"<ph id=\"ph1\">`true`</ph> if the enumerator is moved in the collection of type <ph id=\"ph2\">&lt;xref href=\"System.Data.Metadata.Edm.ReadOnlyMetadataCollection`1.EnumeratortaCollection\"&gt;&lt;/xref&gt;</ph>; otherwise, <ph id=\"ph3\">`false`</ph>.","source":"`true` if the enumerator is moved in the collection of type <xref href=\"System.Data.Metadata.Edm.ReadOnlyMetadataCollection`1.EnumeratortaCollection\"></xref>; otherwise, `false`."}],"pos":[5418,5599],"yaml":true},{"content":"Positions the enumerator before the first position in the collection of type <xref href=\"System.Data.Metadata.Edm.ReadOnlyMetadataCollection`1\"></xref>.","nodes":[{"pos":[0,152],"content":"Positions the enumerator before the first position in the collection of type <ph id=\"ph1\">&lt;xref href=\"System.Data.Metadata.Edm.ReadOnlyMetadataCollection`1\"&gt;&lt;/xref&gt;</ph>.","source":"Positions the enumerator before the first position in the collection of type <xref href=\"System.Data.Metadata.Edm.ReadOnlyMetadataCollection`1\"></xref>."}],"pos":[6783,6936],"yaml":true},{"content":"Gets the member at the current position.","nodes":[{"pos":[0,40],"content":"Gets the member at the current position.","nodes":[{"content":"Gets the member at the current position.","pos":[0,40]}]}],"pos":[8332,8373],"yaml":true},{"content":"The member at the current position.","nodes":[{"pos":[0,35],"content":"The member at the current position.","nodes":[{"content":"The member at the current position.","pos":[0,35]}]}],"pos":[8508,8544],"yaml":true}],"content":"### YamlMime:ManagedReference\nitems:\n- uid: System.Data.Metadata.Edm.ReadOnlyMetadataCollection`1.Enumerator\n  commentId: T:System.Data.Metadata.Edm.ReadOnlyMetadataCollection`1.Enumerator\n  id: ReadOnlyMetadataCollection`1.Enumerator\n  children:\n  - System.Data.Metadata.Edm.ReadOnlyMetadataCollection`1.Enumerator.Current\n  - System.Data.Metadata.Edm.ReadOnlyMetadataCollection`1.Enumerator.Dispose\n  - System.Data.Metadata.Edm.ReadOnlyMetadataCollection`1.Enumerator.MoveNext\n  - System.Data.Metadata.Edm.ReadOnlyMetadataCollection`1.Enumerator.Reset\n  - System.Data.Metadata.Edm.ReadOnlyMetadataCollection`1.Enumerator.System#Collections#IEnumerator#Current\n  langs:\n  - csharp\n  name: ReadOnlyMetadataCollection<T>.Enumerator\n  nameWithType: ReadOnlyMetadataCollection<T>.Enumerator\n  fullName: System.Data.Metadata.Edm.ReadOnlyMetadataCollection<T>.Enumerator\n  type: Struct\n  assemblies:\n  - System.Data.Entity\n  namespace: System.Data.Metadata.Edm\n  summary: Supports a simple iteration over the <xref href=\"System.Data.Metadata.Edm.ReadOnlyMetadataCollection`1\"></xref> collection.\n  syntax:\n    content: 'public struct ReadOnlyMetadataCollection<T>.Enumerator : System.Collections.Generic.IEnumerator<T> where T : MetadataItem'\n    typeParameters:\n    - id: T\n      description: ''\n  inheritance:\n  - System.Object\n  - System.ValueType\n  implements:\n  - System.Collections.Generic.IEnumerator{T}\n  version:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Data.Metadata.Edm/ReadOnlyMetadataCollection`1+Enumerator.xml\n  ms.technology:\n  - dotnet-ado\n  author: JennieHubbard\n  ms.author: jhubbard\n  manager: jhubbard\n- uid: System.Data.Metadata.Edm.ReadOnlyMetadataCollection`1.Enumerator.Current\n  commentId: P:System.Data.Metadata.Edm.ReadOnlyMetadataCollection`1.Enumerator.Current\n  id: Current\n  parent: System.Data.Metadata.Edm.ReadOnlyMetadataCollection`1.Enumerator\n  langs:\n  - csharp\n  name: Current\n  nameWithType: ReadOnlyMetadataCollection<T>.Enumerator.Current\n  fullName: ReadOnlyMetadataCollection<T>.Enumerator.Current\n  type: Property\n  assemblies:\n  - System.Data.Entity\n  namespace: System.Data.Metadata.Edm\n  summary: Gets the member at the current position.\n  syntax:\n    content: public T Current { get; }\n    return:\n      type: T\n      description: The member at the current position.\n  overload: System.Data.Metadata.Edm.ReadOnlyMetadataCollection`1.Enumerator.Current*\n  exceptions: []\n  version:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Data.Metadata.Edm/ReadOnlyMetadataCollection`1+Enumerator.xml\n  ms.technology:\n  - dotnet-ado\n  author: JennieHubbard\n  ms.author: jhubbard\n  manager: jhubbard\n- uid: System.Data.Metadata.Edm.ReadOnlyMetadataCollection`1.Enumerator.Dispose\n  commentId: M:System.Data.Metadata.Edm.ReadOnlyMetadataCollection`1.Enumerator.Dispose\n  id: Dispose\n  parent: System.Data.Metadata.Edm.ReadOnlyMetadataCollection`1.Enumerator\n  langs:\n  - csharp\n  name: Dispose()\n  nameWithType: ReadOnlyMetadataCollection<T>.Enumerator.Dispose()\n  fullName: ReadOnlyMetadataCollection<T>.Enumerator.Dispose()\n  type: Method\n  assemblies:\n  - System.Data.Entity\n  namespace: System.Data.Metadata.Edm\n  summary: Disposes of this enumerator.\n  syntax:\n    content: public void Dispose ();\n    parameters: []\n  overload: System.Data.Metadata.Edm.ReadOnlyMetadataCollection`1.Enumerator.Dispose*\n  exceptions: []\n  version:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Data.Metadata.Edm/ReadOnlyMetadataCollection`1+Enumerator.xml\n  ms.technology:\n  - dotnet-ado\n  author: JennieHubbard\n  ms.author: jhubbard\n  manager: jhubbard\n- uid: System.Data.Metadata.Edm.ReadOnlyMetadataCollection`1.Enumerator.MoveNext\n  commentId: M:System.Data.Metadata.Edm.ReadOnlyMetadataCollection`1.Enumerator.MoveNext\n  id: MoveNext\n  parent: System.Data.Metadata.Edm.ReadOnlyMetadataCollection`1.Enumerator\n  langs:\n  - csharp\n  name: MoveNext()\n  nameWithType: ReadOnlyMetadataCollection<T>.Enumerator.MoveNext()\n  fullName: ReadOnlyMetadataCollection<T>.Enumerator.MoveNext()\n  type: Method\n  assemblies:\n  - System.Data.Entity\n  namespace: System.Data.Metadata.Edm\n  summary: Moves to the next member in the collection of type <xref href=\"System.Data.Metadata.Edm.ReadOnlyMetadataCollection`1.Enumerator\"></xref>.\n  syntax:\n    content: public bool MoveNext ();\n    parameters: []\n    return:\n      type: System.Boolean\n      description: '`true` if the enumerator is moved in the collection of type <xref href=\"System.Data.Metadata.Edm.ReadOnlyMetadataCollection`1.EnumeratortaCollection\"></xref>; otherwise, `false`.'\n  overload: System.Data.Metadata.Edm.ReadOnlyMetadataCollection`1.Enumerator.MoveNext*\n  exceptions: []\n  version:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Data.Metadata.Edm/ReadOnlyMetadataCollection`1+Enumerator.xml\n  ms.technology:\n  - dotnet-ado\n  author: JennieHubbard\n  ms.author: jhubbard\n  manager: jhubbard\n- uid: System.Data.Metadata.Edm.ReadOnlyMetadataCollection`1.Enumerator.Reset\n  commentId: M:System.Data.Metadata.Edm.ReadOnlyMetadataCollection`1.Enumerator.Reset\n  id: Reset\n  parent: System.Data.Metadata.Edm.ReadOnlyMetadataCollection`1.Enumerator\n  langs:\n  - csharp\n  name: Reset()\n  nameWithType: ReadOnlyMetadataCollection<T>.Enumerator.Reset()\n  fullName: ReadOnlyMetadataCollection<T>.Enumerator.Reset()\n  type: Method\n  assemblies:\n  - System.Data.Entity\n  namespace: System.Data.Metadata.Edm\n  summary: Positions the enumerator before the first position in the collection of type <xref href=\"System.Data.Metadata.Edm.ReadOnlyMetadataCollection`1\"></xref>.\n  syntax:\n    content: public void Reset ();\n    parameters: []\n  overload: System.Data.Metadata.Edm.ReadOnlyMetadataCollection`1.Enumerator.Reset*\n  exceptions: []\n  version:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Data.Metadata.Edm/ReadOnlyMetadataCollection`1+Enumerator.xml\n  ms.technology:\n  - dotnet-ado\n  author: JennieHubbard\n  ms.author: jhubbard\n  manager: jhubbard\n- uid: System.Data.Metadata.Edm.ReadOnlyMetadataCollection`1.Enumerator.System#Collections#IEnumerator#Current\n  commentId: P:System.Data.Metadata.Edm.ReadOnlyMetadataCollection`1.Enumerator.System#Collections#IEnumerator#Current\n  id: System#Collections#IEnumerator#Current\n  isEii: true\n  parent: System.Data.Metadata.Edm.ReadOnlyMetadataCollection`1.Enumerator\n  langs:\n  - csharp\n  name: IEnumerator.Current\n  nameWithType: ReadOnlyMetadataCollection<T>.Enumerator.IEnumerator.Current\n  fullName: ReadOnlyMetadataCollection<T>.Enumerator.IEnumerator.Current\n  type: Property\n  assemblies:\n  - System.Data.Entity\n  namespace: System.Data.Metadata.Edm\n  summary: Gets the member at the current position.\n  syntax:\n    content: object System.Collections.IEnumerator.Current { get; }\n    return:\n      type: System.Object\n      description: The member at the current position.\n  overload: System.Data.Metadata.Edm.ReadOnlyMetadataCollection`1.Enumerator.System#Collections#IEnumerator#Current*\n  exceptions: []\n  version:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Data.Metadata.Edm/ReadOnlyMetadataCollection`1+Enumerator.xml\n  author: JennieHubbard\n  ms.author: jhubbard\n  manager: jhubbard\nreferences:\n- uid: System.ValueType\n  parent: System\n  isExternal: false\n  name: ValueType\n  nameWithType: ValueType\n  fullName: System.ValueType\n- uid: System.Data.Metadata.Edm.ReadOnlyMetadataCollection`1.Enumerator.Current\n  parent: System.Data.Metadata.Edm.ReadOnlyMetadataCollection`1.Enumerator\n  isExternal: false\n  name: Current\n  nameWithType: ReadOnlyMetadataCollection<T>.Enumerator.Current\n  fullName: ReadOnlyMetadataCollection<T>.Enumerator.Current\n- uid: T\n  isExternal: true\n  name: T\n  nameWithType: T\n  fullName: T\n- uid: System.Data.Metadata.Edm.ReadOnlyMetadataCollection`1.Enumerator.Dispose\n  parent: System.Data.Metadata.Edm.ReadOnlyMetadataCollection`1.Enumerator\n  isExternal: false\n  name: Dispose()\n  nameWithType: ReadOnlyMetadataCollection<T>.Enumerator.Dispose()\n  fullName: ReadOnlyMetadataCollection<T>.Enumerator.Dispose()\n- uid: System.Data.Metadata.Edm.ReadOnlyMetadataCollection`1.Enumerator.MoveNext\n  parent: System.Data.Metadata.Edm.ReadOnlyMetadataCollection`1.Enumerator\n  isExternal: false\n  name: MoveNext()\n  nameWithType: ReadOnlyMetadataCollection<T>.Enumerator.MoveNext()\n  fullName: ReadOnlyMetadataCollection<T>.Enumerator.MoveNext()\n- uid: System.Boolean\n  parent: System\n  isExternal: false\n  name: Boolean\n  nameWithType: Boolean\n  fullName: System.Boolean\n- uid: System.Data.Metadata.Edm.ReadOnlyMetadataCollection`1.Enumerator.Reset\n  parent: System.Data.Metadata.Edm.ReadOnlyMetadataCollection`1.Enumerator\n  isExternal: false\n  name: Reset()\n  nameWithType: ReadOnlyMetadataCollection<T>.Enumerator.Reset()\n  fullName: ReadOnlyMetadataCollection<T>.Enumerator.Reset()\n- uid: System.Data.Metadata.Edm.ReadOnlyMetadataCollection`1.Enumerator.System#Collections#IEnumerator#Current\n  parent: System.Data.Metadata.Edm.ReadOnlyMetadataCollection`1.Enumerator\n  isExternal: false\n  name: IEnumerator.Current\n  nameWithType: ReadOnlyMetadataCollection<T>.Enumerator.IEnumerator.Current\n  fullName: ReadOnlyMetadataCollection<T>.Enumerator.IEnumerator.Current\n- uid: System.Object\n  parent: System\n  isExternal: false\n  name: Object\n  nameWithType: Object\n  fullName: System.Object\n- uid: System.Data.Metadata.Edm.ReadOnlyMetadataCollection`1.Enumerator.Current*\n  parent: System.Data.Metadata.Edm.ReadOnlyMetadataCollection`1.Enumerator\n  isExternal: false\n  name: Current\n  nameWithType: ReadOnlyMetadataCollection<T>.Enumerator.Current\n  fullName: ReadOnlyMetadataCollection<T>.Enumerator.Current\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Data.Metadata.Edm/ReadOnlyMetadataCollection`1+Enumerator.xml\n- uid: System.Data.Metadata.Edm.ReadOnlyMetadataCollection`1.Enumerator.Dispose*\n  parent: System.Data.Metadata.Edm.ReadOnlyMetadataCollection`1.Enumerator\n  isExternal: false\n  name: Dispose\n  nameWithType: ReadOnlyMetadataCollection<T>.Enumerator.Dispose\n  fullName: ReadOnlyMetadataCollection<T>.Enumerator.Dispose\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Data.Metadata.Edm/ReadOnlyMetadataCollection`1+Enumerator.xml\n- uid: System.Data.Metadata.Edm.ReadOnlyMetadataCollection`1.Enumerator.MoveNext*\n  parent: System.Data.Metadata.Edm.ReadOnlyMetadataCollection`1.Enumerator\n  isExternal: false\n  name: MoveNext\n  nameWithType: ReadOnlyMetadataCollection<T>.Enumerator.MoveNext\n  fullName: ReadOnlyMetadataCollection<T>.Enumerator.MoveNext\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Data.Metadata.Edm/ReadOnlyMetadataCollection`1+Enumerator.xml\n- uid: System.Data.Metadata.Edm.ReadOnlyMetadataCollection`1.Enumerator.Reset*\n  parent: System.Data.Metadata.Edm.ReadOnlyMetadataCollection`1.Enumerator\n  isExternal: false\n  name: Reset\n  nameWithType: ReadOnlyMetadataCollection<T>.Enumerator.Reset\n  fullName: ReadOnlyMetadataCollection<T>.Enumerator.Reset\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Data.Metadata.Edm/ReadOnlyMetadataCollection`1+Enumerator.xml\n- uid: System.Data.Metadata.Edm.ReadOnlyMetadataCollection`1.Enumerator.System#Collections#IEnumerator#Current*\n  parent: System.Data.Metadata.Edm.ReadOnlyMetadataCollection`1.Enumerator\n  isExternal: false\n  name: System.Collections.IEnumerator.Current\n  nameWithType: ReadOnlyMetadataCollection<T>.Enumerator.System.Collections.IEnumerator.Current\n  fullName: ReadOnlyMetadataCollection<T>.Enumerator.System.Collections.IEnumerator.Current\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Data.Metadata.Edm/ReadOnlyMetadataCollection`1+Enumerator.xml\n- uid: System.Collections.Generic.IEnumerator`1\n  parent: System.Collections.Generic\n  isExternal: false\n  name: IEnumerator<T>\n  nameWithType: IEnumerator<T>\n  fullName: System.Collections.Generic.IEnumerator<T>\n"}