{"nodes":[{"content":"Manages ASP.NET application domains for an ASP.NET hosting application.","nodes":[{"pos":[0,71],"content":"Manages ASP.NET application domains for an ASP.NET hosting application.","nodes":[{"content":"Manages ASP.NET application domains for an ASP.NET hosting application.","pos":[0,71]}]}],"pos":[1551,1623],"yaml":true},{"content":"The <xref:System.Web.Hosting.ApplicationManager> object provides lifetime management of objects in the hosting environment for an ASP.NET application. It is responsible for:  \n  \n-   Activating and initializing ASP.NET applications.  \n  \n-   Managing the application lifetime and the lifetime of objects registered in the application.  \n  \n-   Exposing objects used by the hosting environment to process ASP.NET application requests.  \n  \n-   Providing a list of applications running in the hosting process at any given moment.","nodes":[{"pos":[0,173],"content":"The <xref:System.Web.Hosting.ApplicationManager> object provides lifetime management of objects in the hosting environment for an ASP.NET application. It is responsible for:","nodes":[{"content":"The <xref:System.Web.Hosting.ApplicationManager> object provides lifetime management of objects in the hosting environment for an ASP.NET application. It is responsible for:","pos":[0,173],"nodes":[{"content":"The <ph id=\"ph1\">&lt;xref:System.Web.Hosting.ApplicationManager&gt;</ph> object provides lifetime management of objects in the hosting environment for an ASP.NET application.","pos":[0,150],"source":"The <xref:System.Web.Hosting.ApplicationManager> object provides lifetime management of objects in the hosting environment for an ASP.NET application."},{"content":"It is responsible for:","pos":[151,173]}]}]},{"pos":[183,232],"content":"Activating and initializing ASP.NET applications.","nodes":[{"content":"Activating and initializing ASP.NET applications.","pos":[0,49]}]},{"pos":[242,334],"content":"Managing the application lifetime and the lifetime of objects registered in the application.","nodes":[{"content":"Managing the application lifetime and the lifetime of objects registered in the application.","pos":[0,92]}]},{"pos":[344,433],"content":"Exposing objects used by the hosting environment to process ASP.NET application requests.","nodes":[{"content":"Exposing objects used by the hosting environment to process ASP.NET application requests.","pos":[0,89]}]},{"pos":[443,527],"content":"Providing a list of applications running in the hosting process at any given moment.","nodes":[{"content":"Providing a list of applications running in the hosting process at any given moment.","pos":[0,84]}]}],"pos":[1634,2172],"yaml":true,"extradata":"MT"},{"content":"Shuts down all application domains.","nodes":[{"pos":[0,35],"content":"Shuts down all application domains.","nodes":[{"content":"Shuts down all application domains.","pos":[0,35]}]}],"pos":[3691,3727],"yaml":true},{"content":"If a call to the <xref:System.Web.Hosting.ApplicationManager.Close%2A> method reduces the reference count of applications using the application manager to 0, the <xref:System.Web.Hosting.ApplicationManager.Close%2A> method calls the <xref:System.Web.Hosting.ApplicationManager.ShutdownAll%2A> method.","nodes":[{"pos":[0,300],"content":"If a call to the <xref:System.Web.Hosting.ApplicationManager.Close%2A> method reduces the reference count of applications using the application manager to 0, the <xref:System.Web.Hosting.ApplicationManager.Close%2A> method calls the <xref:System.Web.Hosting.ApplicationManager.ShutdownAll%2A> method.","nodes":[{"content":"If a call to the <ph id=\"ph1\">&lt;xref:System.Web.Hosting.ApplicationManager.Close%2A&gt;</ph> method reduces the reference count of applications using the application manager to 0, the <ph id=\"ph2\">&lt;xref:System.Web.Hosting.ApplicationManager.Close%2A&gt;</ph> method calls the <ph id=\"ph3\">&lt;xref:System.Web.Hosting.ApplicationManager.ShutdownAll%2A&gt;</ph> method.","pos":[0,300],"source":"If a call to the <xref:System.Web.Hosting.ApplicationManager.Close%2A> method reduces the reference count of applications using the application manager to 0, the <xref:System.Web.Hosting.ApplicationManager.Close%2A> method calls the <xref:System.Web.Hosting.ApplicationManager.ShutdownAll%2A> method."}]}],"pos":[3738,4039],"yaml":true,"extradata":"MT"},{"content":"Creates an object for the specified application domain, based on type.","nodes":[{"pos":[0,70],"content":"Creates an object for the specified application domain, based on type.","nodes":[{"content":"Creates an object for the specified application domain, based on type.","pos":[0,70]}]}],"pos":[5325,5396],"yaml":true},{"content":"<xref:System.Web.Hosting.ApplicationManager.CreateObject%2A> is introduced in the .NET Framework version 3.5.  For more information, see [Versions and Dependencies](~/docs/framework/migration-guide/versions-and-dependencies.md).","nodes":[{"pos":[0,228],"content":"<xref:System.Web.Hosting.ApplicationManager.CreateObject%2A> is introduced in the .NET Framework version 3.5.  For more information, see [Versions and Dependencies](~/docs/framework/migration-guide/versions-and-dependencies.md).","nodes":[{"content":"<ph id=\"ph1\">&lt;xref:System.Web.Hosting.ApplicationManager.CreateObject%2A&gt;</ph> is introduced in the .NET Framework version 3.5.","pos":[0,109],"source":"<xref:System.Web.Hosting.ApplicationManager.CreateObject%2A> is introduced in the .NET Framework version 3.5."},{"content":"For more information, see <bpt id=\"p1\">[</bpt>Versions and Dependencies<ept id=\"p1\">](~/docs/framework/migration-guide/versions-and-dependencies.md)</ept>.","pos":[111,228],"source":"  For more information, see [Versions and Dependencies](~/docs/framework/migration-guide/versions-and-dependencies.md)."}]}],"pos":[5407,5636],"yaml":true,"extradata":"MT"},{"content":"An <xref href=\"System.Web.Hosting.IApplicationHost\"></xref> object.","nodes":[{"pos":[0,67],"content":"An <ph id=\"ph1\">&lt;xref href=\"System.Web.Hosting.IApplicationHost\"&gt;&lt;/xref&gt;</ph> object.","source":"An <xref href=\"System.Web.Hosting.IApplicationHost\"></xref> object."}],"pos":[5875,5943],"yaml":true},{"content":"The type of the object to create.","nodes":[{"pos":[0,33],"content":"The type of the object to create.","nodes":[{"content":"The type of the object to create.","pos":[0,33]}]}],"pos":[6001,6035],"yaml":true},{"content":"A new object of the type specified in <code>type</code>.","nodes":[{"pos":[0,56],"content":"A new object of the type specified in <bpt id=\"p1\">&lt;code&gt;</bpt><ph id=\"ph1\">type</ph><ept id=\"p1\">&lt;/code&gt;</ept>.","source":"A new object of the type specified in <code>type</code>."}],"pos":[6115,6172],"yaml":true},{"content":"A physical path for the application does not exist.","nodes":[{"pos":[0,51],"content":"A physical path for the application does not exist.","nodes":[{"content":"A physical path for the application does not exist.","pos":[0,51]}]}],"pos":[6344,6396],"yaml":true},{"content":"<code>appHost</code> is `null`.  \n  \n \\- or -  \n  \n <code>type</code> is `null`.","nodes":[{"pos":[0,31],"content":"<ph id=\"ph1\">&lt;code&gt;appHost&lt;/code&gt;</ph> is <ph id=\"ph2\">`null`</ph>.","source":"<code>appHost</code> is `null`."},{"pos":[38,45],"content":"\\- or -","nodes":[{"content":"<ph id=\"ph1\">\\-</ph> or -","pos":[0,7],"source":"\\- or -"}]},{"pos":[52,80],"content":"<ph id=\"ph1\">&lt;code&gt;type&lt;/code&gt;</ph> is <ph id=\"ph2\">`null`</ph>.","source":"<code>type</code> is `null`."}],"pos":[6498,6586],"yaml":true},{"content":"Creates an object for the specified application domain based on type, virtual and physical paths, and a Boolean value indicating failure behavior when an object of the specified type already exists.","nodes":[{"pos":[0,198],"content":"Creates an object for the specified application domain based on type, virtual and physical paths, and a Boolean value indicating failure behavior when an object of the specified type already exists.","nodes":[{"content":"Creates an object for the specified application domain based on type, virtual and physical paths, and a Boolean value indicating failure behavior when an object of the specified type already exists.","pos":[0,198]}]}],"pos":[7842,8041],"yaml":true},{"content":"The <xref:System.Web.Hosting.ApplicationManager.CreateObject%2A> method is used to create and register objects in the application. Only one object of each type can be created. If you need to create multiple objects of the same type, you must implement an object factory. For more information, see the code example in this topic.  \n  \n Each application, identified by a unique application identifier, runs in its own application domain. The <xref:System.Web.Hosting.ApplicationManager.CreateObject%2A> method creates an object of the specified type in the application domain of the application specified in the `appID` parameter. If an application domain does not exist for the specified application, one is created before the object is created.  \n  \n The `failIfExists` parameter controls the behavior of the <xref:System.Web.Hosting.ApplicationManager.CreateObject%2A> method when an object of the specified type already exists in the application. When `failIfExists` is `true`, the <xref:System.Web.Hosting.ApplicationManager.CreateObject%2A> method throws an <xref:System.InvalidOperationException> exception.  \n  \n When `failIfExists` is `false`, the <xref:System.Web.Hosting.ApplicationManager.CreateObject%2A> method returns the existing registered object of the specified type.  \n  \n The <xref:System.Web.Hosting.ApplicationManager.CreateObject%2A> method calls the overload that takes an additional `throwOnError` parameter with `throwOnError` set to `false`.","nodes":[{"pos":[0,328],"content":"The <xref:System.Web.Hosting.ApplicationManager.CreateObject%2A> method is used to create and register objects in the application. Only one object of each type can be created. If you need to create multiple objects of the same type, you must implement an object factory. For more information, see the code example in this topic.","nodes":[{"content":"The <xref:System.Web.Hosting.ApplicationManager.CreateObject%2A> method is used to create and register objects in the application. Only one object of each type can be created. If you need to create multiple objects of the same type, you must implement an object factory. For more information, see the code example in this topic.","pos":[0,328],"nodes":[{"content":"The <ph id=\"ph1\">&lt;xref:System.Web.Hosting.ApplicationManager.CreateObject%2A&gt;</ph> method is used to create and register objects in the application.","pos":[0,130],"source":"The <xref:System.Web.Hosting.ApplicationManager.CreateObject%2A> method is used to create and register objects in the application."},{"content":"Only one object of each type can be created.","pos":[131,175]},{"content":"If you need to create multiple objects of the same type, you must implement an object factory.","pos":[176,270]},{"content":"For more information, see the code example in this topic.","pos":[271,328]}]}]},{"pos":[335,744],"content":"Each application, identified by a unique application identifier, runs in its own application domain. The <xref:System.Web.Hosting.ApplicationManager.CreateObject%2A> method creates an object of the specified type in the application domain of the application specified in the `appID` parameter. If an application domain does not exist for the specified application, one is created before the object is created.","nodes":[{"content":"Each application, identified by a unique application identifier, runs in its own application domain.","pos":[0,100]},{"content":"The <ph id=\"ph1\">&lt;xref:System.Web.Hosting.ApplicationManager.CreateObject%2A&gt;</ph> method creates an object of the specified type in the application domain of the application specified in the <ph id=\"ph2\">`appID`</ph> parameter.","pos":[101,293],"source":" The <xref:System.Web.Hosting.ApplicationManager.CreateObject%2A> method creates an object of the specified type in the application domain of the application specified in the `appID` parameter."},{"content":"If an application domain does not exist for the specified application, one is created before the object is created.","pos":[294,409]}]},{"pos":[751,1112],"content":"The `failIfExists` parameter controls the behavior of the <xref:System.Web.Hosting.ApplicationManager.CreateObject%2A> method when an object of the specified type already exists in the application. When `failIfExists` is `true`, the <xref:System.Web.Hosting.ApplicationManager.CreateObject%2A> method throws an <xref:System.InvalidOperationException> exception.","nodes":[{"content":"The <ph id=\"ph1\">`failIfExists`</ph> parameter controls the behavior of the <ph id=\"ph2\">&lt;xref:System.Web.Hosting.ApplicationManager.CreateObject%2A&gt;</ph> method when an object of the specified type already exists in the application.","pos":[0,197],"source":"The `failIfExists` parameter controls the behavior of the <xref:System.Web.Hosting.ApplicationManager.CreateObject%2A> method when an object of the specified type already exists in the application."},{"content":"When <ph id=\"ph1\">`failIfExists`</ph> is <ph id=\"ph2\">`true`</ph>, the <ph id=\"ph3\">&lt;xref:System.Web.Hosting.ApplicationManager.CreateObject%2A&gt;</ph> method throws an <ph id=\"ph4\">&lt;xref:System.InvalidOperationException&gt;</ph> exception.","pos":[198,361],"source":" When `failIfExists` is `true`, the <xref:System.Web.Hosting.ApplicationManager.CreateObject%2A> method throws an <xref:System.InvalidOperationException> exception."}]},{"pos":[1119,1284],"content":"When <ph id=\"ph1\">`failIfExists`</ph> is <ph id=\"ph2\">`false`</ph>, the <ph id=\"ph3\">&lt;xref:System.Web.Hosting.ApplicationManager.CreateObject%2A&gt;</ph> method returns the existing registered object of the specified type.","source":"When `failIfExists` is `false`, the <xref:System.Web.Hosting.ApplicationManager.CreateObject%2A> method returns the existing registered object of the specified type."},{"pos":[1291,1467],"content":"The <ph id=\"ph1\">&lt;xref:System.Web.Hosting.ApplicationManager.CreateObject%2A&gt;</ph> method calls the overload that takes an additional <ph id=\"ph2\">`throwOnError`</ph> parameter with <ph id=\"ph3\">`throwOnError`</ph> set to <ph id=\"ph4\">`false`</ph>.","source":"The <xref:System.Web.Hosting.ApplicationManager.CreateObject%2A> method calls the overload that takes an additional `throwOnError` parameter with `throwOnError` set to `false`."}],"pos":[8052,9530],"yaml":true,"extradata":"MT"},{"content":"The unique identifier for the application that owns the object.","nodes":[{"pos":[0,63],"content":"The unique identifier for the application that owns the object.","nodes":[{"content":"The unique identifier for the application that owns the object.","pos":[0,63]}]}],"pos":[10530,10594],"yaml":true},{"content":"The type of the object to create.","nodes":[{"pos":[0,33],"content":"The type of the object to create.","nodes":[{"content":"The type of the object to create.","pos":[0,33]}]}],"pos":[10652,10686],"yaml":true},{"content":"The virtual path to the application.","nodes":[{"pos":[0,36],"content":"The virtual path to the application.","nodes":[{"content":"The virtual path to the application.","pos":[0,36]}]}],"pos":[10753,10790],"yaml":true},{"content":"The physical path to the application.","nodes":[{"pos":[0,37],"content":"The physical path to the application.","nodes":[{"content":"The physical path to the application.","pos":[0,37]}]}],"pos":[10858,10896],"yaml":true},{"content":"`true` to throw an exception if an object of the specified type is currently registered; `false` to return the existing registered object of the specified type.","nodes":[{"pos":[0,160],"content":"<ph id=\"ph1\">`true`</ph> to throw an exception if an object of the specified type is currently registered; <ph id=\"ph2\">`false`</ph> to return the existing registered object of the specified type.","source":"`true` to throw an exception if an object of the specified type is currently registered; `false` to return the existing registered object of the specified type."}],"pos":[10965,11128],"yaml":true},{"content":"A new object of the specified <code>type</code>.","nodes":[{"pos":[0,48],"content":"A new object of the specified <bpt id=\"p1\">&lt;code&gt;</bpt><ph id=\"ph1\">type</ph><ept id=\"p1\">&lt;/code&gt;</ept>.","source":"A new object of the specified <code>type</code>."}],"pos":[11208,11257],"yaml":true},{"content":"<code>physicalPath</code> is `null`  \n  \n \\- or -  \n  \n <code>physicalPath</code> is not a valid application path.  \n  \n \\- or -  \n  \n <code>type</code> does not implement the <xref href=\"System.Web.Hosting.IRegisteredObject\"></xref> interface.","nodes":[{"pos":[0,35],"content":"<ph id=\"ph1\">&lt;code&gt;physicalPath&lt;/code&gt;</ph> is <ph id=\"ph2\">`null`</ph>","source":"<code>physicalPath</code> is `null`"},{"pos":[42,49],"content":"\\- or -","nodes":[{"content":"<ph id=\"ph1\">\\-</ph> or -","pos":[0,7],"source":"\\- or -"}]},{"pos":[56,114],"content":"<ph id=\"ph1\">&lt;code&gt;physicalPath&lt;/code&gt;</ph> is not a valid application path.","source":"<code>physicalPath</code> is not a valid application path."},{"pos":[121,128],"content":"\\- or -","nodes":[{"content":"<ph id=\"ph1\">\\-</ph> or -","pos":[0,7],"source":"\\- or -"}]},{"pos":[135,244],"content":"<ph id=\"ph1\">&lt;code&gt;type&lt;/code&gt;</ph> does not implement the <ph id=\"ph2\">&lt;xref href=\"System.Web.Hosting.IRegisteredObject\"&gt;&lt;/xref&gt;</ph> interface.","source":"<code>type</code> does not implement the <xref href=\"System.Web.Hosting.IRegisteredObject\"></xref> interface."}],"pos":[11429,11688],"yaml":true},{"content":"<code>appID</code> is `null`.  \n  \n \\- or -  \n  \n <code>type</code> is `null`.","nodes":[{"pos":[0,29],"content":"<ph id=\"ph1\">&lt;code&gt;appID&lt;/code&gt;</ph> is <ph id=\"ph2\">`null`</ph>.","source":"<code>appID</code> is `null`."},{"pos":[36,43],"content":"\\- or -","nodes":[{"content":"<ph id=\"ph1\">\\-</ph> or -","pos":[0,7],"source":"\\- or -"}]},{"pos":[50,78],"content":"<ph id=\"ph1\">&lt;code&gt;type&lt;/code&gt;</ph> is <ph id=\"ph2\">`null`</ph>.","source":"<code>type</code> is `null`."}],"pos":[11790,11876],"yaml":true},{"content":"<code>failIfExists</code> is `true` and an object of the specified type is already registered.","nodes":[{"pos":[0,94],"content":"<ph id=\"ph1\">&lt;code&gt;failIfExists&lt;/code&gt;</ph> is <ph id=\"ph2\">`true`</ph> and an object of the specified type is already registered.","source":"<code>failIfExists</code> is `true` and an object of the specified type is already registered."}],"pos":[11986,12081],"yaml":true},{"content":"Creates an object for the specified application domain based on type, virtual and physical paths, a Boolean value indicating failure behavior when an object of the specified type already exists, and a Boolean value indicating whether hosting initialization error exceptions are thrown.","nodes":[{"pos":[0,285],"content":"Creates an object for the specified application domain based on type, virtual and physical paths, a Boolean value indicating failure behavior when an object of the specified type already exists, and a Boolean value indicating whether hosting initialization error exceptions are thrown.","nodes":[{"content":"Creates an object for the specified application domain based on type, virtual and physical paths, a Boolean value indicating failure behavior when an object of the specified type already exists, and a Boolean value indicating whether hosting initialization error exceptions are thrown.","pos":[0,285]}]}],"pos":[13409,13695],"yaml":true},{"content":"This overload of the <xref:System.Web.Hosting.ApplicationManager.CreateObject%2A> method provides the `throwOnError` parameter, which allows you to control whether hosting initialization exceptions are thrown. The overload of the <xref:System.Web.Hosting.ApplicationManager.CreateObject%2A> method that does not provide `throwOnError` calls this overload with the parameter set to `false`.","nodes":[{"pos":[0,389],"content":"This overload of the <xref:System.Web.Hosting.ApplicationManager.CreateObject%2A> method provides the `throwOnError` parameter, which allows you to control whether hosting initialization exceptions are thrown. The overload of the <xref:System.Web.Hosting.ApplicationManager.CreateObject%2A> method that does not provide `throwOnError` calls this overload with the parameter set to `false`.","nodes":[{"content":"This overload of the <ph id=\"ph1\">&lt;xref:System.Web.Hosting.ApplicationManager.CreateObject%2A&gt;</ph> method provides the <ph id=\"ph2\">`throwOnError`</ph> parameter, which allows you to control whether hosting initialization exceptions are thrown.","pos":[0,209],"source":"This overload of the <xref:System.Web.Hosting.ApplicationManager.CreateObject%2A> method provides the `throwOnError` parameter, which allows you to control whether hosting initialization exceptions are thrown."},{"content":"The overload of the <ph id=\"ph1\">&lt;xref:System.Web.Hosting.ApplicationManager.CreateObject%2A&gt;</ph> method that does not provide <ph id=\"ph2\">`throwOnError`</ph> calls this overload with the parameter set to <ph id=\"ph3\">`false`</ph>.","pos":[210,389],"source":" The overload of the <xref:System.Web.Hosting.ApplicationManager.CreateObject%2A> method that does not provide `throwOnError` calls this overload with the parameter set to `false`."}]}],"pos":[13706,14096],"yaml":true,"extradata":"MT"},{"content":"The unique identifier for the application that owns the object.","nodes":[{"pos":[0,63],"content":"The unique identifier for the application that owns the object.","nodes":[{"content":"The unique identifier for the application that owns the object.","pos":[0,63]}]}],"pos":[14359,14423],"yaml":true},{"content":"The type of the object to create.","nodes":[{"pos":[0,33],"content":"The type of the object to create.","nodes":[{"content":"The type of the object to create.","pos":[0,33]}]}],"pos":[14481,14515],"yaml":true},{"content":"The virtual path to the application.","nodes":[{"pos":[0,36],"content":"The virtual path to the application.","nodes":[{"content":"The virtual path to the application.","pos":[0,36]}]}],"pos":[14582,14619],"yaml":true},{"content":"The physical path to the application.","nodes":[{"pos":[0,37],"content":"The physical path to the application.","nodes":[{"content":"The physical path to the application.","pos":[0,37]}]}],"pos":[14687,14725],"yaml":true},{"content":"`true` to throw an exception if an object of the specified type is currently registered; `false` to return the existing registered object of the specified type.","nodes":[{"pos":[0,160],"content":"<ph id=\"ph1\">`true`</ph> to throw an exception if an object of the specified type is currently registered; <ph id=\"ph2\">`false`</ph> to return the existing registered object of the specified type.","source":"`true` to throw an exception if an object of the specified type is currently registered; `false` to return the existing registered object of the specified type."}],"pos":[14794,14957],"yaml":true},{"content":"`true` to throw exceptions for hosting initialization errors; `false` to not throw hosting initialization exceptions.","nodes":[{"pos":[0,117],"content":"<ph id=\"ph1\">`true`</ph> to throw exceptions for hosting initialization errors; <ph id=\"ph2\">`false`</ph> to not throw hosting initialization exceptions.","source":"`true` to throw exceptions for hosting initialization errors; `false` to not throw hosting initialization exceptions."}],"pos":[15026,15146],"yaml":true},{"content":"A new object of the specified <code>type</code>.","nodes":[{"pos":[0,48],"content":"A new object of the specified <bpt id=\"p1\">&lt;code&gt;</bpt><ph id=\"ph1\">type</ph><ept id=\"p1\">&lt;/code&gt;</ept>.","source":"A new object of the specified <code>type</code>."}],"pos":[15226,15275],"yaml":true},{"content":"<code>physicalPath</code> is `null`  \n  \n \\- or -  \n  \n <code>physicalPath</code> is not a valid application path.  \n  \n \\- or -  \n  \n <code>type</code> does not implement the <xref href=\"System.Web.Hosting.IRegisteredObject\"></xref> interface.","nodes":[{"pos":[0,35],"content":"<ph id=\"ph1\">&lt;code&gt;physicalPath&lt;/code&gt;</ph> is <ph id=\"ph2\">`null`</ph>","source":"<code>physicalPath</code> is `null`"},{"pos":[42,49],"content":"\\- or -","nodes":[{"content":"<ph id=\"ph1\">\\-</ph> or -","pos":[0,7],"source":"\\- or -"}]},{"pos":[56,114],"content":"<ph id=\"ph1\">&lt;code&gt;physicalPath&lt;/code&gt;</ph> is not a valid application path.","source":"<code>physicalPath</code> is not a valid application path."},{"pos":[121,128],"content":"\\- or -","nodes":[{"content":"<ph id=\"ph1\">\\-</ph> or -","pos":[0,7],"source":"\\- or -"}]},{"pos":[135,244],"content":"<ph id=\"ph1\">&lt;code&gt;type&lt;/code&gt;</ph> does not implement the <ph id=\"ph2\">&lt;xref href=\"System.Web.Hosting.IRegisteredObject\"&gt;&lt;/xref&gt;</ph> interface.","source":"<code>type</code> does not implement the <xref href=\"System.Web.Hosting.IRegisteredObject\"></xref> interface."}],"pos":[15447,15706],"yaml":true},{"content":"<code>appID</code> is `null`.  \n  \n \\- or -  \n  \n <code>type</code> is `null`.","nodes":[{"pos":[0,29],"content":"<ph id=\"ph1\">&lt;code&gt;appID&lt;/code&gt;</ph> is <ph id=\"ph2\">`null`</ph>.","source":"<code>appID</code> is `null`."},{"pos":[36,43],"content":"\\- or -","nodes":[{"content":"<ph id=\"ph1\">\\-</ph> or -","pos":[0,7],"source":"\\- or -"}]},{"pos":[50,78],"content":"<ph id=\"ph1\">&lt;code&gt;type&lt;/code&gt;</ph> is <ph id=\"ph2\">`null`</ph>.","source":"<code>type</code> is `null`."}],"pos":[15808,15894],"yaml":true},{"content":"<code>failIfExists</code> is `true` and an object of the specified type is already registered.","nodes":[{"pos":[0,94],"content":"<ph id=\"ph1\">&lt;code&gt;failIfExists&lt;/code&gt;</ph> is <ph id=\"ph2\">`true`</ph> and an object of the specified type is already registered.","source":"<code>failIfExists</code> is `true` and an object of the specified type is already registered."}],"pos":[16004,16099],"yaml":true},{"content":"Gets the application domain of the specified application.","nodes":[{"pos":[0,57],"content":"Gets the application domain of the specified application.","nodes":[{"content":"Gets the application domain of the specified application.","pos":[0,57]}]}],"pos":[17097,17155],"yaml":true},{"content":"The unique identifier for the application.","nodes":[{"pos":[0,42],"content":"The unique identifier for the application.","nodes":[{"content":"The unique identifier for the application.","pos":[0,42]}]}],"pos":[17301,17344],"yaml":true},{"content":"The application domain of the application.","nodes":[{"pos":[0,42],"content":"The application domain of the application.","nodes":[{"content":"The application domain of the application.","pos":[0,42]}]}],"pos":[17404,17447],"yaml":true},{"content":"Gets the application domain of an application using the specified host.","nodes":[{"pos":[0,71],"content":"Gets the application domain of an application using the specified host.","nodes":[{"content":"Gets the application domain of an application using the specified host.","pos":[0,71]}]}],"pos":[18622,18694],"yaml":true},{"content":"The host to get the application domain for.","nodes":[{"pos":[0,43],"content":"The host to get the application domain for.","nodes":[{"content":"The host to get the application domain for.","pos":[0,43]}]}],"pos":[18895,18939],"yaml":true},{"content":"The application domain of the application.","nodes":[{"pos":[0,42],"content":"The application domain of the application.","nodes":[{"content":"The application domain of the application.","pos":[0,42]}]}],"pos":[18999,19042],"yaml":true},{"content":"Returns the single instance of the <xref href=\"System.Web.Hosting.ApplicationManager\"></xref> object associated with this ASP.NET host process.","nodes":[{"pos":[0,143],"content":"Returns the single instance of the <ph id=\"ph1\">&lt;xref href=\"System.Web.Hosting.ApplicationManager\"&gt;&lt;/xref&gt;</ph> object associated with this ASP.NET host process.","source":"Returns the single instance of the <xref href=\"System.Web.Hosting.ApplicationManager\"></xref> object associated with this ASP.NET host process."}],"pos":[20112,20256],"yaml":true},{"content":"Only one instance of the <xref:System.Web.Hosting.ApplicationManager> object is created by an ASP.NET host process in the default application domain. If an instance of the <xref:System.Web.Hosting.ApplicationManager> class is not available, the <xref:System.Web.Hosting.ApplicationManager.GetApplicationManager%2A> method first creates an instance of the <xref:System.Web.Hosting.ApplicationManager> class and then returns the newly created object. If an instance of the <xref:System.Web.Hosting.ApplicationManager> class was previously created, the <xref:System.Web.Hosting.ApplicationManager.GetApplicationManager%2A> method returns the existing object.","nodes":[{"pos":[0,655],"content":"Only one instance of the <xref:System.Web.Hosting.ApplicationManager> object is created by an ASP.NET host process in the default application domain. If an instance of the <xref:System.Web.Hosting.ApplicationManager> class is not available, the <xref:System.Web.Hosting.ApplicationManager.GetApplicationManager%2A> method first creates an instance of the <xref:System.Web.Hosting.ApplicationManager> class and then returns the newly created object. If an instance of the <xref:System.Web.Hosting.ApplicationManager> class was previously created, the <xref:System.Web.Hosting.ApplicationManager.GetApplicationManager%2A> method returns the existing object.","nodes":[{"content":"Only one instance of the <xref:System.Web.Hosting.ApplicationManager> object is created by an ASP.NET host process in the default application domain. If an instance of the <xref:System.Web.Hosting.ApplicationManager> class is not available, the <xref:System.Web.Hosting.ApplicationManager.GetApplicationManager%2A> method first creates an instance of the <xref:System.Web.Hosting.ApplicationManager> class and then returns the newly created object. If an instance of the <xref:System.Web.Hosting.ApplicationManager> class was previously created, the <xref:System.Web.Hosting.ApplicationManager.GetApplicationManager%2A> method returns the existing object.","pos":[0,655],"nodes":[{"content":"Only one instance of the <ph id=\"ph1\">&lt;xref:System.Web.Hosting.ApplicationManager&gt;</ph> object is created by an ASP.NET host process in the default application domain.","pos":[0,149],"source":"Only one instance of the <xref:System.Web.Hosting.ApplicationManager> object is created by an ASP.NET host process in the default application domain."},{"content":"If an instance of the <ph id=\"ph1\">&lt;xref:System.Web.Hosting.ApplicationManager&gt;</ph> class is not available, the <ph id=\"ph2\">&lt;xref:System.Web.Hosting.ApplicationManager.GetApplicationManager%2A&gt;</ph> method first creates an instance of the <ph id=\"ph3\">&lt;xref:System.Web.Hosting.ApplicationManager&gt;</ph> class and then returns the newly created object.","pos":[150,448],"source":" If an instance of the <xref:System.Web.Hosting.ApplicationManager> class is not available, the <xref:System.Web.Hosting.ApplicationManager.GetApplicationManager%2A> method first creates an instance of the <xref:System.Web.Hosting.ApplicationManager> class and then returns the newly created object."},{"content":"If an instance of the <ph id=\"ph1\">&lt;xref:System.Web.Hosting.ApplicationManager&gt;</ph> class was previously created, the <ph id=\"ph2\">&lt;xref:System.Web.Hosting.ApplicationManager.GetApplicationManager%2A&gt;</ph> method returns the existing object.","pos":[449,655],"source":" If an instance of the <xref:System.Web.Hosting.ApplicationManager> class was previously created, the <xref:System.Web.Hosting.ApplicationManager.GetApplicationManager%2A> method returns the existing object."}]}]}],"pos":[20267,20923],"yaml":true,"extradata":"MT"},{"content":"The single instance of the <xref href=\"System.Web.Hosting.ApplicationManager\"></xref> object associated with the ASP.NET host process that is running.","nodes":[{"pos":[0,150],"content":"The single instance of the <ph id=\"ph1\">&lt;xref href=\"System.Web.Hosting.ApplicationManager\"&gt;&lt;/xref&gt;</ph> object associated with the ASP.NET host process that is running.","source":"The single instance of the <xref href=\"System.Web.Hosting.ApplicationManager\"></xref> object associated with the ASP.NET host process that is running."}],"pos":[21764,21915],"yaml":true},{"content":"Returns the registered object of the specified type from the specified application.","nodes":[{"pos":[0,83],"content":"Returns the registered object of the specified type from the specified application.","nodes":[{"content":"Returns the registered object of the specified type from the specified application.","pos":[0,83]}]}],"pos":[23039,23123],"yaml":true},{"content":"The unique identifier for the application that owns the object.","nodes":[{"pos":[0,63],"content":"The unique identifier for the application that owns the object.","nodes":[{"content":"The unique identifier for the application that owns the object.","pos":[0,63]}]}],"pos":[23304,23368],"yaml":true},{"content":"The type of the object to return.","nodes":[{"pos":[0,33],"content":"The type of the object to return.","nodes":[{"content":"The type of the object to return.","pos":[0,33]}]}],"pos":[23426,23460],"yaml":true},{"content":"The registered object of the specified type; or `null` if the type has not been registered through a call to the <xref href=\"System.Web.Hosting.ApplicationManager.CreateObject(System.String,System.Type,System.String,System.String,System.Boolean)\"></xref> method.","nodes":[{"pos":[0,262],"content":"The registered object of the specified type; or <ph id=\"ph1\">`null`</ph> if the type has not been registered through a call to the <ph id=\"ph2\">&lt;xref href=\"System.Web.Hosting.ApplicationManager.CreateObject(System.String,System.Type,System.String,System.String,System.Boolean)\"&gt;&lt;/xref&gt;</ph> method.","source":"The registered object of the specified type; or `null` if the type has not been registered through a call to the <xref href=\"System.Web.Hosting.ApplicationManager.CreateObject(System.String,System.Type,System.String,System.String,System.Boolean)\"></xref> method."}],"pos":[23540,23803],"yaml":true},{"content":"<code>appId</code> is `null`.  \n  \n —or—  \n  \n <code>type</code> is `null`.","nodes":[{"pos":[0,29],"content":"<ph id=\"ph1\">&lt;code&gt;appId&lt;/code&gt;</ph> is <ph id=\"ph2\">`null`</ph>.","source":"<code>appId</code> is `null`."},{"pos":[36,40],"content":"—or—","nodes":[{"content":"—or—","pos":[0,4]}]},{"pos":[47,75],"content":"<ph id=\"ph1\">&lt;code&gt;type&lt;/code&gt;</ph> is <ph id=\"ph2\">`null`</ph>.","source":"<code>type</code> is `null`."}],"pos":[23980,24062],"yaml":true},{"content":"Returns a snapshot of running applications.","nodes":[{"pos":[0,43],"content":"Returns a snapshot of running applications.","nodes":[{"content":"Returns a snapshot of running applications.","pos":[0,43]}]}],"pos":[25057,25101],"yaml":true},{"content":"An array of <xref href=\"System.Web.Hosting.ApplicationInfo\"></xref> objects that contain information about the applications managed by this <xref href=\"System.Web.Hosting.ApplicationManager\"></xref> instance.","nodes":[{"pos":[0,208],"content":"An array of <ph id=\"ph1\">&lt;xref href=\"System.Web.Hosting.ApplicationInfo\"&gt;&lt;/xref&gt;</ph> objects that contain information about the applications managed by this <ph id=\"ph2\">&lt;xref href=\"System.Web.Hosting.ApplicationManager\"&gt;&lt;/xref&gt;</ph> instance.","source":"An array of <xref href=\"System.Web.Hosting.ApplicationInfo\"></xref> objects that contain information about the applications managed by this <xref href=\"System.Web.Hosting.ApplicationManager\"></xref> instance."}],"pos":[25971,26180],"yaml":true},{"content":"Gives the application domain an infinite lifetime by preventing a lease from being created.","nodes":[{"pos":[0,91],"content":"Gives the application domain an infinite lifetime by preventing a lease from being created.","nodes":[{"content":"Gives the application domain an infinite lifetime by preventing a lease from being created.","pos":[0,91]}]}],"pos":[27284,27376],"yaml":true},{"content":"This method overrides the <xref:System.MarshalByRefObject.InitializeLifetimeService%2A> method in its base class. It always returns `null` and thereby prevents a lease from being created that would limit the application domain's lifetime.","nodes":[{"pos":[0,238],"content":"This method overrides the <xref:System.MarshalByRefObject.InitializeLifetimeService%2A> method in its base class. It always returns `null` and thereby prevents a lease from being created that would limit the application domain's lifetime.","nodes":[{"content":"This method overrides the <ph id=\"ph1\">&lt;xref:System.MarshalByRefObject.InitializeLifetimeService%2A&gt;</ph> method in its base class.","pos":[0,113],"source":"This method overrides the <xref:System.MarshalByRefObject.InitializeLifetimeService%2A> method in its base class."},{"content":"It always returns <ph id=\"ph1\">`null`</ph> and thereby prevents a lease from being created that would limit the application domain's lifetime.","pos":[114,238],"source":" It always returns `null` and thereby prevents a lease from being created that would limit the application domain's lifetime."}]}],"pos":[27387,27626],"yaml":true,"extradata":"MT"},{"content":"Always `null`.","nodes":[{"pos":[0,14],"content":"Always <ph id=\"ph1\">`null`</ph>.","source":"Always `null`."}],"pos":[27778,27793],"yaml":true},{"content":"Returns a value indicating whether all applications hosted by the process are idle and not processing requests.","nodes":[{"pos":[0,111],"content":"Returns a value indicating whether all applications hosted by the process are idle and not processing requests.","nodes":[{"content":"Returns a value indicating whether all applications hosted by the process are idle and not processing requests.","pos":[0,111]}]}],"pos":[28786,28898],"yaml":true},{"content":"The <xref:System.Web.Hosting.ApplicationManager.IsIdle%2A> method returns `true` if all applications hosted by the process are idle.","nodes":[{"pos":[0,132],"content":"The <ph id=\"ph1\">&lt;xref:System.Web.Hosting.ApplicationManager.IsIdle%2A&gt;</ph> method returns <ph id=\"ph2\">`true`</ph> if all applications hosted by the process are idle.","source":"The <xref:System.Web.Hosting.ApplicationManager.IsIdle%2A> method returns `true` if all applications hosted by the process are idle."}],"pos":[28909,29042],"yaml":true,"extradata":"MT"},{"content":"`true` if all applications in the process are idle; otherwise, `false`.","nodes":[{"pos":[0,71],"content":"<ph id=\"ph1\">`true`</ph> if all applications in the process are idle; otherwise, <ph id=\"ph2\">`false`</ph>.","source":"`true` if all applications in the process are idle; otherwise, `false`."}],"pos":[29165,29239],"yaml":true},{"content":"Makes a thread-safe increment to the user reference count of the application manager instance.","nodes":[{"pos":[0,94],"content":"Makes a thread-safe increment to the user reference count of the application manager instance.","nodes":[{"content":"Makes a thread-safe increment to the user reference count of the application manager instance.","pos":[0,94]}]}],"pos":[30201,30296],"yaml":true},{"content":"Unloads all application resources.","nodes":[{"pos":[0,34],"content":"Unloads all application resources.","nodes":[{"content":"Unloads all application resources.","pos":[0,34]}]}],"pos":[31361,31396],"yaml":true},{"content":"Calling the <xref:System.Web.Hosting.ApplicationManager.ShutdownAll%2A> method is equivalent to calling the <xref:System.Web.Hosting.HostingEnvironment.InitiateShutdown%2A?displayProperty=fullName> method in all application domains managed by this <xref:System.Web.Hosting.ApplicationManager> instance; however, the <xref:System.Web.Hosting.ApplicationManager.ShutdownAll%2A> method can be called from outside the managed application domains.","nodes":[{"pos":[0,442],"content":"Calling the <xref:System.Web.Hosting.ApplicationManager.ShutdownAll%2A> method is equivalent to calling the <xref:System.Web.Hosting.HostingEnvironment.InitiateShutdown%2A?displayProperty=fullName> method in all application domains managed by this <xref:System.Web.Hosting.ApplicationManager> instance; however, the <xref:System.Web.Hosting.ApplicationManager.ShutdownAll%2A> method can be called from outside the managed application domains.","nodes":[{"content":"Calling the <ph id=\"ph1\">&lt;xref:System.Web.Hosting.ApplicationManager.ShutdownAll%2A&gt;</ph> method is equivalent to calling the <ph id=\"ph2\">&lt;xref:System.Web.Hosting.HostingEnvironment.InitiateShutdown%2A?displayProperty=fullName&gt;</ph> method in all application domains managed by this <ph id=\"ph3\">&lt;xref:System.Web.Hosting.ApplicationManager&gt;</ph> instance; however, the <ph id=\"ph4\">&lt;xref:System.Web.Hosting.ApplicationManager.ShutdownAll%2A&gt;</ph> method can be called from outside the managed application domains.","pos":[0,442],"source":"Calling the <xref:System.Web.Hosting.ApplicationManager.ShutdownAll%2A> method is equivalent to calling the <xref:System.Web.Hosting.HostingEnvironment.InitiateShutdown%2A?displayProperty=fullName> method in all application domains managed by this <xref:System.Web.Hosting.ApplicationManager> instance; however, the <xref:System.Web.Hosting.ApplicationManager.ShutdownAll%2A> method can be called from outside the managed application domains."}]}],"pos":[31407,31850],"yaml":true,"extradata":"MT"},{"content":"Unloads the specified application.","nodes":[{"pos":[0,34],"content":"Unloads the specified application.","nodes":[{"content":"Unloads the specified application.","pos":[0,34]}]}],"pos":[33040,33075],"yaml":true},{"content":"Calling the <xref:System.Web.Hosting.ApplicationManager.ShutdownApplication%2A> method is equivalent to calling the <xref:System.Web.Hosting.HostingEnvironment.InitiateShutdown%2A?displayProperty=fullName> method for a specific application domain; however, the <xref:System.Web.Hosting.ApplicationManager.ShutdownApplication%2A> method can be called from outside managed application domains.","nodes":[{"pos":[0,391],"content":"Calling the <xref:System.Web.Hosting.ApplicationManager.ShutdownApplication%2A> method is equivalent to calling the <xref:System.Web.Hosting.HostingEnvironment.InitiateShutdown%2A?displayProperty=fullName> method for a specific application domain; however, the <xref:System.Web.Hosting.ApplicationManager.ShutdownApplication%2A> method can be called from outside managed application domains.","nodes":[{"content":"Calling the <ph id=\"ph1\">&lt;xref:System.Web.Hosting.ApplicationManager.ShutdownApplication%2A&gt;</ph> method is equivalent to calling the <ph id=\"ph2\">&lt;xref:System.Web.Hosting.HostingEnvironment.InitiateShutdown%2A?displayProperty=fullName&gt;</ph> method for a specific application domain; however, the <ph id=\"ph3\">&lt;xref:System.Web.Hosting.ApplicationManager.ShutdownApplication%2A&gt;</ph> method can be called from outside managed application domains.","pos":[0,391],"source":"Calling the <xref:System.Web.Hosting.ApplicationManager.ShutdownApplication%2A> method is equivalent to calling the <xref:System.Web.Hosting.HostingEnvironment.InitiateShutdown%2A?displayProperty=fullName> method for a specific application domain; however, the <xref:System.Web.Hosting.ApplicationManager.ShutdownApplication%2A> method can be called from outside managed application domains."}]}],"pos":[33086,33478],"yaml":true,"extradata":"MT"},{"content":"The unique identifier of the application to unload.","nodes":[{"pos":[0,51],"content":"The unique identifier of the application to unload.","nodes":[{"content":"The unique identifier of the application to unload.","pos":[0,51]}]}],"pos":[33626,33678],"yaml":true},{"content":"<code>appId</code> is `null`.","nodes":[{"pos":[0,29],"content":"<ph id=\"ph1\">&lt;code&gt;appId&lt;/code&gt;</ph> is <ph id=\"ph2\">`null`</ph>.","source":"<code>appId</code> is `null`."}],"pos":[33865,33895],"yaml":true},{"content":"Removes the specified object from the list of registered objects in an application. If the object to be removed is the last remaining object in the list of registered objects in an application, the application is unloaded.","nodes":[{"pos":[0,222],"content":"Removes the specified object from the list of registered objects in an application. If the object to be removed is the last remaining object in the list of registered objects in an application, the application is unloaded.","nodes":[{"content":"Removes the specified object from the list of registered objects in an application. If the object to be removed is the last remaining object in the list of registered objects in an application, the application is unloaded.","pos":[0,222],"nodes":[{"content":"Removes the specified object from the list of registered objects in an application.","pos":[0,83]},{"content":"If the object to be removed is the last remaining object in the list of registered objects in an application, the application is unloaded.","pos":[84,222]}]}]}],"pos":[34935,35158],"yaml":true},{"content":"The unique identifier for the application that owns the object.","nodes":[{"pos":[0,63],"content":"The unique identifier for the application that owns the object.","nodes":[{"content":"The unique identifier for the application that owns the object.","pos":[0,63]}]}],"pos":[35308,35372],"yaml":true},{"content":"The type of the object to unload.","nodes":[{"pos":[0,33],"content":"The type of the object to unload.","nodes":[{"content":"The type of the object to unload.","pos":[0,33]}]}],"pos":[35430,35464],"yaml":true},{"content":"<code>appId</code> is `null`.  \n  \n \\- or -  \n  \n <code>type</code> is `null`.","nodes":[{"pos":[0,29],"content":"<ph id=\"ph1\">&lt;code&gt;appId&lt;/code&gt;</ph> is <ph id=\"ph2\">`null`</ph>.","source":"<code>appId</code> is `null`."},{"pos":[36,43],"content":"\\- or -","nodes":[{"content":"<ph id=\"ph1\">\\-</ph> or -","pos":[0,7],"source":"\\- or -"}]},{"pos":[50,78],"content":"<ph id=\"ph1\">&lt;code&gt;type&lt;/code&gt;</ph> is <ph id=\"ph2\">`null`</ph>.","source":"<code>type</code> is `null`."}],"pos":[35642,35728],"yaml":true}],"content":"### YamlMime:ManagedReference\nitems:\n- uid: System.Web.Hosting.ApplicationManager\n  commentId: T:System.Web.Hosting.ApplicationManager\n  id: ApplicationManager\n  children:\n  - System.Web.Hosting.ApplicationManager.Close\n  - System.Web.Hosting.ApplicationManager.CreateObject(System.Web.Hosting.IApplicationHost,System.Type)\n  - System.Web.Hosting.ApplicationManager.CreateObject(System.String,System.Type,System.String,System.String,System.Boolean)\n  - System.Web.Hosting.ApplicationManager.CreateObject(System.String,System.Type,System.String,System.String,System.Boolean,System.Boolean)\n  - System.Web.Hosting.ApplicationManager.GetAppDomain(System.String)\n  - System.Web.Hosting.ApplicationManager.GetAppDomain(System.Web.Hosting.IApplicationHost)\n  - System.Web.Hosting.ApplicationManager.GetApplicationManager\n  - System.Web.Hosting.ApplicationManager.GetObject(System.String,System.Type)\n  - System.Web.Hosting.ApplicationManager.GetRunningApplications\n  - System.Web.Hosting.ApplicationManager.InitializeLifetimeService\n  - System.Web.Hosting.ApplicationManager.IsIdle\n  - System.Web.Hosting.ApplicationManager.Open\n  - System.Web.Hosting.ApplicationManager.ShutdownAll\n  - System.Web.Hosting.ApplicationManager.ShutdownApplication(System.String)\n  - System.Web.Hosting.ApplicationManager.StopObject(System.String,System.Type)\n  langs:\n  - csharp\n  name: ApplicationManager\n  nameWithType: ApplicationManager\n  fullName: System.Web.Hosting.ApplicationManager\n  type: Class\n  assemblies:\n  - System.Web\n  namespace: System.Web.Hosting\n  summary: Manages ASP.NET application domains for an ASP.NET hosting application.\n  remarks: \"The <xref:System.Web.Hosting.ApplicationManager> object provides lifetime management of objects in the hosting environment for an ASP.NET application. It is responsible for:  \\n  \\n-   Activating and initializing ASP.NET applications.  \\n  \\n-   Managing the application lifetime and the lifetime of objects registered in the application.  \\n  \\n-   Exposing objects used by the hosting environment to process ASP.NET application requests.  \\n  \\n-   Providing a list of applications running in the hosting process at any given moment.\"\n  syntax:\n    content: 'public sealed class ApplicationManager : MarshalByRefObject'\n  inheritance:\n  - System.Object\n  - System.MarshalByRefObject\n  implements: []\n  inheritedMembers:\n  - System.MarshalByRefObject.CreateObjRef(System.Type)\n  - System.MarshalByRefObject.GetLifetimeService\n  - System.MarshalByRefObject.MemberwiseClone(System.Boolean)\n  - System.Object.Equals(System.Object)\n  - System.Object.Equals(System.Object,System.Object)\n  - System.Object.GetHashCode\n  - System.Object.GetType\n  - System.Object.MemberwiseClone\n  - System.Object.ReferenceEquals(System.Object,System.Object)\n  - System.Object.ToString\n  version:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Web.Hosting/ApplicationManager.xml\n  ms.technology:\n  - dotnet-webforms\n  ms.author: riande\n  manager: wpickett\n- uid: System.Web.Hosting.ApplicationManager.Close\n  commentId: M:System.Web.Hosting.ApplicationManager.Close\n  id: Close\n  parent: System.Web.Hosting.ApplicationManager\n  langs:\n  - csharp\n  name: Close()\n  nameWithType: ApplicationManager.Close()\n  fullName: ApplicationManager.Close()\n  type: Method\n  assemblies:\n  - System.Web\n  namespace: System.Web.Hosting\n  summary: Shuts down all application domains.\n  remarks: If a call to the <xref:System.Web.Hosting.ApplicationManager.Close%2A> method reduces the reference count of applications using the application manager to 0, the <xref:System.Web.Hosting.ApplicationManager.Close%2A> method calls the <xref:System.Web.Hosting.ApplicationManager.ShutdownAll%2A> method.\n  syntax:\n    content: public void Close ();\n    parameters: []\n  overload: System.Web.Hosting.ApplicationManager.Close*\n  exceptions: []\n  version:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Web.Hosting/ApplicationManager.xml\n  ms.technology:\n  - dotnet-webforms\n  ms.author: riande\n  manager: wpickett\n- uid: System.Web.Hosting.ApplicationManager.CreateObject(System.Web.Hosting.IApplicationHost,System.Type)\n  commentId: M:System.Web.Hosting.ApplicationManager.CreateObject(System.Web.Hosting.IApplicationHost,System.Type)\n  id: CreateObject(System.Web.Hosting.IApplicationHost,System.Type)\n  parent: System.Web.Hosting.ApplicationManager\n  langs:\n  - csharp\n  name: CreateObject(IApplicationHost, Type)\n  nameWithType: ApplicationManager.CreateObject(IApplicationHost, Type)\n  fullName: ApplicationManager.CreateObject(IApplicationHost, Type)\n  type: Method\n  assemblies:\n  - System.Web\n  namespace: System.Web.Hosting\n  summary: Creates an object for the specified application domain, based on type.\n  remarks: <xref:System.Web.Hosting.ApplicationManager.CreateObject%2A> is introduced in the .NET Framework version 3.5.  For more information, see [Versions and Dependencies](~/docs/framework/migration-guide/versions-and-dependencies.md).\n  syntax:\n    content: public System.Web.Hosting.IRegisteredObject CreateObject (System.Web.Hosting.IApplicationHost appHost, Type type);\n    parameters:\n    - id: appHost\n      type: System.Web.Hosting.IApplicationHost\n      description: An <xref href=\"System.Web.Hosting.IApplicationHost\"></xref> object.\n    - id: type\n      type: System.Type\n      description: The type of the object to create.\n    return:\n      type: System.Web.Hosting.IRegisteredObject\n      description: A new object of the type specified in <code>type</code>.\n  overload: System.Web.Hosting.ApplicationManager.CreateObject*\n  exceptions:\n  - type: System.ArgumentException\n    commentId: T:System.ArgumentException\n    description: A physical path for the application does not exist.\n  - type: System.ArgumentNullException\n    commentId: T:System.ArgumentNullException\n    description: \"<code>appHost</code> is `null`.  \\n  \\n \\\\- or -  \\n  \\n <code>type</code> is `null`.\"\n  version:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Web.Hosting/ApplicationManager.xml\n  ms.technology:\n  - dotnet-webforms\n  ms.author: riande\n  manager: wpickett\n- uid: System.Web.Hosting.ApplicationManager.CreateObject(System.String,System.Type,System.String,System.String,System.Boolean)\n  commentId: M:System.Web.Hosting.ApplicationManager.CreateObject(System.String,System.Type,System.String,System.String,System.Boolean)\n  id: CreateObject(System.String,System.Type,System.String,System.String,System.Boolean)\n  parent: System.Web.Hosting.ApplicationManager\n  langs:\n  - csharp\n  name: CreateObject(String, Type, String, String, Boolean)\n  nameWithType: ApplicationManager.CreateObject(String, Type, String, String, Boolean)\n  fullName: ApplicationManager.CreateObject(String, Type, String, String, Boolean)\n  type: Method\n  assemblies:\n  - System.Web\n  namespace: System.Web.Hosting\n  summary: Creates an object for the specified application domain based on type, virtual and physical paths, and a Boolean value indicating failure behavior when an object of the specified type already exists.\n  remarks: \"The <xref:System.Web.Hosting.ApplicationManager.CreateObject%2A> method is used to create and register objects in the application. Only one object of each type can be created. If you need to create multiple objects of the same type, you must implement an object factory. For more information, see the code example in this topic.  \\n  \\n Each application, identified by a unique application identifier, runs in its own application domain. The <xref:System.Web.Hosting.ApplicationManager.CreateObject%2A> method creates an object of the specified type in the application domain of the application specified in the `appID` parameter. If an application domain does not exist for the specified application, one is created before the object is created.  \\n  \\n The `failIfExists` parameter controls the behavior of the <xref:System.Web.Hosting.ApplicationManager.CreateObject%2A> method when an object of the specified type already exists in the application. When `failIfExists` is `true`, the <xref:System.Web.Hosting.ApplicationManager.CreateObject%2A> method throws an <xref:System.InvalidOperationException> exception.  \\n  \\n When `failIfExists` is `false`, the <xref:System.Web.Hosting.ApplicationManager.CreateObject%2A> method returns the existing registered object of the specified type.  \\n  \\n The <xref:System.Web.Hosting.ApplicationManager.CreateObject%2A> method calls the overload that takes an additional `throwOnError` parameter with `throwOnError` set to `false`.\"\n  example:\n  - \"The following code example is an implementation of the object-factory design pattern for registered objects. Using the factory pattern enables you to register multiple instances of an object. The example contains two objects: `SampleComponent`, which is the object the application will use multiple instances of, and `SampleComponentFactory`, which manages a list of `SampleComponent` instances.  \\n  \\n [!code-csharp[System.Web.Hosting.ApplicationManager#1](~/samples/snippets/csharp/VS_Snippets_WebNet/System.Web.Hosting.ApplicationManager/CS/appManagercs.aspx.cs#1)]\\n [!code-vb[System.Web.Hosting.ApplicationManager#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/System.Web.Hosting.ApplicationManager/VB/appManagervb.aspx.vb#1)]\"\n  syntax:\n    content: public System.Web.Hosting.IRegisteredObject CreateObject (string appId, Type type, string virtualPath, string physicalPath, bool failIfExists);\n    parameters:\n    - id: appId\n      type: System.String\n      description: The unique identifier for the application that owns the object.\n    - id: type\n      type: System.Type\n      description: The type of the object to create.\n    - id: virtualPath\n      type: System.String\n      description: The virtual path to the application.\n    - id: physicalPath\n      type: System.String\n      description: The physical path to the application.\n    - id: failIfExists\n      type: System.Boolean\n      description: '`true` to throw an exception if an object of the specified type is currently registered; `false` to return the existing registered object of the specified type.'\n    return:\n      type: System.Web.Hosting.IRegisteredObject\n      description: A new object of the specified <code>type</code>.\n  overload: System.Web.Hosting.ApplicationManager.CreateObject*\n  exceptions:\n  - type: System.ArgumentException\n    commentId: T:System.ArgumentException\n    description: \"<code>physicalPath</code> is `null`  \\n  \\n \\\\- or -  \\n  \\n <code>physicalPath</code> is not a valid application path.  \\n  \\n \\\\- or -  \\n  \\n <code>type</code> does not implement the <xref href=\\\"System.Web.Hosting.IRegisteredObject\\\"></xref> interface.\"\n  - type: System.ArgumentNullException\n    commentId: T:System.ArgumentNullException\n    description: \"<code>appID</code> is `null`.  \\n  \\n \\\\- or -  \\n  \\n <code>type</code> is `null`.\"\n  - type: System.InvalidOperationException\n    commentId: T:System.InvalidOperationException\n    description: <code>failIfExists</code> is `true` and an object of the specified type is already registered.\n  version:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Web.Hosting/ApplicationManager.xml\n  ms.technology:\n  - dotnet-webforms\n  ms.author: riande\n  manager: wpickett\n- uid: System.Web.Hosting.ApplicationManager.CreateObject(System.String,System.Type,System.String,System.String,System.Boolean,System.Boolean)\n  commentId: M:System.Web.Hosting.ApplicationManager.CreateObject(System.String,System.Type,System.String,System.String,System.Boolean,System.Boolean)\n  id: CreateObject(System.String,System.Type,System.String,System.String,System.Boolean,System.Boolean)\n  parent: System.Web.Hosting.ApplicationManager\n  langs:\n  - csharp\n  name: CreateObject(String, Type, String, String, Boolean, Boolean)\n  nameWithType: ApplicationManager.CreateObject(String, Type, String, String, Boolean, Boolean)\n  fullName: ApplicationManager.CreateObject(String, Type, String, String, Boolean, Boolean)\n  type: Method\n  assemblies:\n  - System.Web\n  namespace: System.Web.Hosting\n  summary: Creates an object for the specified application domain based on type, virtual and physical paths, a Boolean value indicating failure behavior when an object of the specified type already exists, and a Boolean value indicating whether hosting initialization error exceptions are thrown.\n  remarks: This overload of the <xref:System.Web.Hosting.ApplicationManager.CreateObject%2A> method provides the `throwOnError` parameter, which allows you to control whether hosting initialization exceptions are thrown. The overload of the <xref:System.Web.Hosting.ApplicationManager.CreateObject%2A> method that does not provide `throwOnError` calls this overload with the parameter set to `false`.\n  syntax:\n    content: public System.Web.Hosting.IRegisteredObject CreateObject (string appId, Type type, string virtualPath, string physicalPath, bool failIfExists, bool throwOnError);\n    parameters:\n    - id: appId\n      type: System.String\n      description: The unique identifier for the application that owns the object.\n    - id: type\n      type: System.Type\n      description: The type of the object to create.\n    - id: virtualPath\n      type: System.String\n      description: The virtual path to the application.\n    - id: physicalPath\n      type: System.String\n      description: The physical path to the application.\n    - id: failIfExists\n      type: System.Boolean\n      description: '`true` to throw an exception if an object of the specified type is currently registered; `false` to return the existing registered object of the specified type.'\n    - id: throwOnError\n      type: System.Boolean\n      description: '`true` to throw exceptions for hosting initialization errors; `false` to not throw hosting initialization exceptions.'\n    return:\n      type: System.Web.Hosting.IRegisteredObject\n      description: A new object of the specified <code>type</code>.\n  overload: System.Web.Hosting.ApplicationManager.CreateObject*\n  exceptions:\n  - type: System.ArgumentException\n    commentId: T:System.ArgumentException\n    description: \"<code>physicalPath</code> is `null`  \\n  \\n \\\\- or -  \\n  \\n <code>physicalPath</code> is not a valid application path.  \\n  \\n \\\\- or -  \\n  \\n <code>type</code> does not implement the <xref href=\\\"System.Web.Hosting.IRegisteredObject\\\"></xref> interface.\"\n  - type: System.ArgumentNullException\n    commentId: T:System.ArgumentNullException\n    description: \"<code>appID</code> is `null`.  \\n  \\n \\\\- or -  \\n  \\n <code>type</code> is `null`.\"\n  - type: System.InvalidOperationException\n    commentId: T:System.InvalidOperationException\n    description: <code>failIfExists</code> is `true` and an object of the specified type is already registered.\n  version:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Web.Hosting/ApplicationManager.xml\n  ms.technology:\n  - dotnet-webforms\n  ms.author: riande\n  manager: wpickett\n- uid: System.Web.Hosting.ApplicationManager.GetAppDomain(System.String)\n  commentId: M:System.Web.Hosting.ApplicationManager.GetAppDomain(System.String)\n  id: GetAppDomain(System.String)\n  parent: System.Web.Hosting.ApplicationManager\n  langs:\n  - csharp\n  name: GetAppDomain(String)\n  nameWithType: ApplicationManager.GetAppDomain(String)\n  fullName: ApplicationManager.GetAppDomain(String)\n  type: Method\n  assemblies:\n  - System.Web\n  namespace: System.Web.Hosting\n  summary: Gets the application domain of the specified application.\n  syntax:\n    content: public AppDomain GetAppDomain (string appId);\n    parameters:\n    - id: appId\n      type: System.String\n      description: The unique identifier for the application.\n    return:\n      type: System.AppDomain\n      description: The application domain of the application.\n  overload: System.Web.Hosting.ApplicationManager.GetAppDomain*\n  exceptions: []\n  version:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Web.Hosting/ApplicationManager.xml\n  ms.technology:\n  - dotnet-webforms\n  ms.author: riande\n  manager: wpickett\n- uid: System.Web.Hosting.ApplicationManager.GetAppDomain(System.Web.Hosting.IApplicationHost)\n  commentId: M:System.Web.Hosting.ApplicationManager.GetAppDomain(System.Web.Hosting.IApplicationHost)\n  id: GetAppDomain(System.Web.Hosting.IApplicationHost)\n  parent: System.Web.Hosting.ApplicationManager\n  langs:\n  - csharp\n  name: GetAppDomain(IApplicationHost)\n  nameWithType: ApplicationManager.GetAppDomain(IApplicationHost)\n  fullName: ApplicationManager.GetAppDomain(IApplicationHost)\n  type: Method\n  assemblies:\n  - System.Web\n  namespace: System.Web.Hosting\n  summary: Gets the application domain of an application using the specified host.\n  syntax:\n    content: public AppDomain GetAppDomain (System.Web.Hosting.IApplicationHost appHost);\n    parameters:\n    - id: appHost\n      type: System.Web.Hosting.IApplicationHost\n      description: The host to get the application domain for.\n    return:\n      type: System.AppDomain\n      description: The application domain of the application.\n  overload: System.Web.Hosting.ApplicationManager.GetAppDomain*\n  exceptions: []\n  version:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Web.Hosting/ApplicationManager.xml\n  ms.technology:\n  - dotnet-webforms\n  ms.author: riande\n  manager: wpickett\n- uid: System.Web.Hosting.ApplicationManager.GetApplicationManager\n  commentId: M:System.Web.Hosting.ApplicationManager.GetApplicationManager\n  id: GetApplicationManager\n  parent: System.Web.Hosting.ApplicationManager\n  langs:\n  - csharp\n  name: GetApplicationManager()\n  nameWithType: ApplicationManager.GetApplicationManager()\n  fullName: ApplicationManager.GetApplicationManager()\n  type: Method\n  assemblies:\n  - System.Web\n  namespace: System.Web.Hosting\n  summary: Returns the single instance of the <xref href=\"System.Web.Hosting.ApplicationManager\"></xref> object associated with this ASP.NET host process.\n  remarks: Only one instance of the <xref:System.Web.Hosting.ApplicationManager> object is created by an ASP.NET host process in the default application domain. If an instance of the <xref:System.Web.Hosting.ApplicationManager> class is not available, the <xref:System.Web.Hosting.ApplicationManager.GetApplicationManager%2A> method first creates an instance of the <xref:System.Web.Hosting.ApplicationManager> class and then returns the newly created object. If an instance of the <xref:System.Web.Hosting.ApplicationManager> class was previously created, the <xref:System.Web.Hosting.ApplicationManager.GetApplicationManager%2A> method returns the existing object.\n  example:\n  - \"The following code example uses the <xref:System.Web.Hosting.ApplicationManager.GetApplicationManager%2A> method to retrieve the <xref:System.Web.Hosting.ApplicationManager> instance for a Web application.  \\n  \\n <!-- TODO: review snippet reference [!code-csharp[System.Web.Hosting.ApplicationInfo#1](~/samples/snippets/csharp/VS_Snippets_WebNet/System.Web.Hosting.ApplicationInfo/CS/applicationInfocs.aspx#1)]  -->\\n <!-- TODO: review snippet reference [!code-vb[System.Web.Hosting.ApplicationInfo#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/System.Web.Hosting.ApplicationInfo/VB/applicationInfovb.aspx#1)]  -->\"\n  syntax:\n    content: public static System.Web.Hosting.ApplicationManager GetApplicationManager ();\n    parameters: []\n    return:\n      type: System.Web.Hosting.ApplicationManager\n      description: The single instance of the <xref href=\"System.Web.Hosting.ApplicationManager\"></xref> object associated with the ASP.NET host process that is running.\n  overload: System.Web.Hosting.ApplicationManager.GetApplicationManager*\n  exceptions: []\n  version:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Web.Hosting/ApplicationManager.xml\n  ms.technology:\n  - dotnet-webforms\n  ms.author: riande\n  manager: wpickett\n- uid: System.Web.Hosting.ApplicationManager.GetObject(System.String,System.Type)\n  commentId: M:System.Web.Hosting.ApplicationManager.GetObject(System.String,System.Type)\n  id: GetObject(System.String,System.Type)\n  parent: System.Web.Hosting.ApplicationManager\n  langs:\n  - csharp\n  name: GetObject(String, Type)\n  nameWithType: ApplicationManager.GetObject(String, Type)\n  fullName: ApplicationManager.GetObject(String, Type)\n  type: Method\n  assemblies:\n  - System.Web\n  namespace: System.Web.Hosting\n  summary: Returns the registered object of the specified type from the specified application.\n  syntax:\n    content: public System.Web.Hosting.IRegisteredObject GetObject (string appId, Type type);\n    parameters:\n    - id: appId\n      type: System.String\n      description: The unique identifier for the application that owns the object.\n    - id: type\n      type: System.Type\n      description: The type of the object to return.\n    return:\n      type: System.Web.Hosting.IRegisteredObject\n      description: The registered object of the specified type; or `null` if the type has not been registered through a call to the <xref href=\"System.Web.Hosting.ApplicationManager.CreateObject(System.String,System.Type,System.String,System.String,System.Boolean)\"></xref> method.\n  overload: System.Web.Hosting.ApplicationManager.GetObject*\n  exceptions:\n  - type: System.ArgumentNullException\n    commentId: T:System.ArgumentNullException\n    description: \"<code>appId</code> is `null`.  \\n  \\n —or—  \\n  \\n <code>type</code> is `null`.\"\n  version:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Web.Hosting/ApplicationManager.xml\n  ms.technology:\n  - dotnet-webforms\n  ms.author: riande\n  manager: wpickett\n- uid: System.Web.Hosting.ApplicationManager.GetRunningApplications\n  commentId: M:System.Web.Hosting.ApplicationManager.GetRunningApplications\n  id: GetRunningApplications\n  parent: System.Web.Hosting.ApplicationManager\n  langs:\n  - csharp\n  name: GetRunningApplications()\n  nameWithType: ApplicationManager.GetRunningApplications()\n  fullName: ApplicationManager.GetRunningApplications()\n  type: Method\n  assemblies:\n  - System.Web\n  namespace: System.Web.Hosting\n  summary: Returns a snapshot of running applications.\n  remarks: ''\n  example:\n  - \"The following code example uses the <xref:System.Web.Hosting.ApplicationManager.GetRunningApplications%2A> method to display information about the applications managed by an <xref:System.Web.Hosting.ApplicationManager> instance.  \\n  \\n <!-- TODO: review snippet reference [!code-csharp[System.Web.Hosting.ApplicationInfo#1](~/samples/snippets/csharp/VS_Snippets_WebNet/System.Web.Hosting.ApplicationInfo/CS/applicationInfocs.aspx#1)]  -->\\n <!-- TODO: review snippet reference [!code-vb[System.Web.Hosting.ApplicationInfo#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/System.Web.Hosting.ApplicationInfo/VB/applicationInfovb.aspx#1)]  -->\"\n  syntax:\n    content: public System.Web.Hosting.ApplicationInfo[] GetRunningApplications ();\n    parameters: []\n    return:\n      type: System.Web.Hosting.ApplicationInfo[]\n      description: An array of <xref href=\"System.Web.Hosting.ApplicationInfo\"></xref> objects that contain information about the applications managed by this <xref href=\"System.Web.Hosting.ApplicationManager\"></xref> instance.\n  overload: System.Web.Hosting.ApplicationManager.GetRunningApplications*\n  exceptions: []\n  version:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Web.Hosting/ApplicationManager.xml\n  ms.technology:\n  - dotnet-webforms\n  ms.author: riande\n  manager: wpickett\n- uid: System.Web.Hosting.ApplicationManager.InitializeLifetimeService\n  commentId: M:System.Web.Hosting.ApplicationManager.InitializeLifetimeService\n  id: InitializeLifetimeService\n  parent: System.Web.Hosting.ApplicationManager\n  langs:\n  - csharp\n  name: InitializeLifetimeService()\n  nameWithType: ApplicationManager.InitializeLifetimeService()\n  fullName: ApplicationManager.InitializeLifetimeService()\n  type: Method\n  assemblies:\n  - System.Web\n  namespace: System.Web.Hosting\n  summary: Gives the application domain an infinite lifetime by preventing a lease from being created.\n  remarks: This method overrides the <xref:System.MarshalByRefObject.InitializeLifetimeService%2A> method in its base class. It always returns `null` and thereby prevents a lease from being created that would limit the application domain's lifetime.\n  syntax:\n    content: public override object InitializeLifetimeService ();\n    parameters: []\n    return:\n      type: System.Object\n      description: Always `null`.\n  overload: System.Web.Hosting.ApplicationManager.InitializeLifetimeService*\n  exceptions: []\n  version:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Web.Hosting/ApplicationManager.xml\n  ms.technology:\n  - dotnet-webforms\n  ms.author: riande\n  manager: wpickett\n- uid: System.Web.Hosting.ApplicationManager.IsIdle\n  commentId: M:System.Web.Hosting.ApplicationManager.IsIdle\n  id: IsIdle\n  parent: System.Web.Hosting.ApplicationManager\n  langs:\n  - csharp\n  name: IsIdle()\n  nameWithType: ApplicationManager.IsIdle()\n  fullName: ApplicationManager.IsIdle()\n  type: Method\n  assemblies:\n  - System.Web\n  namespace: System.Web.Hosting\n  summary: Returns a value indicating whether all applications hosted by the process are idle and not processing requests.\n  remarks: The <xref:System.Web.Hosting.ApplicationManager.IsIdle%2A> method returns `true` if all applications hosted by the process are idle.\n  syntax:\n    content: public bool IsIdle ();\n    parameters: []\n    return:\n      type: System.Boolean\n      description: '`true` if all applications in the process are idle; otherwise, `false`.'\n  overload: System.Web.Hosting.ApplicationManager.IsIdle*\n  exceptions: []\n  version:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Web.Hosting/ApplicationManager.xml\n  ms.technology:\n  - dotnet-webforms\n  ms.author: riande\n  manager: wpickett\n- uid: System.Web.Hosting.ApplicationManager.Open\n  commentId: M:System.Web.Hosting.ApplicationManager.Open\n  id: Open\n  parent: System.Web.Hosting.ApplicationManager\n  langs:\n  - csharp\n  name: Open()\n  nameWithType: ApplicationManager.Open()\n  fullName: ApplicationManager.Open()\n  type: Method\n  assemblies:\n  - System.Web\n  namespace: System.Web.Hosting\n  summary: Makes a thread-safe increment to the user reference count of the application manager instance.\n  syntax:\n    content: public void Open ();\n    parameters: []\n  overload: System.Web.Hosting.ApplicationManager.Open*\n  exceptions: []\n  version:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Web.Hosting/ApplicationManager.xml\n  ms.technology:\n  - dotnet-webforms\n  ms.author: riande\n  manager: wpickett\n- uid: System.Web.Hosting.ApplicationManager.ShutdownAll\n  commentId: M:System.Web.Hosting.ApplicationManager.ShutdownAll\n  id: ShutdownAll\n  parent: System.Web.Hosting.ApplicationManager\n  langs:\n  - csharp\n  name: ShutdownAll()\n  nameWithType: ApplicationManager.ShutdownAll()\n  fullName: ApplicationManager.ShutdownAll()\n  type: Method\n  assemblies:\n  - System.Web\n  namespace: System.Web.Hosting\n  summary: Unloads all application resources.\n  remarks: Calling the <xref:System.Web.Hosting.ApplicationManager.ShutdownAll%2A> method is equivalent to calling the <xref:System.Web.Hosting.HostingEnvironment.InitiateShutdown%2A?displayProperty=fullName> method in all application domains managed by this <xref:System.Web.Hosting.ApplicationManager> instance; however, the <xref:System.Web.Hosting.ApplicationManager.ShutdownAll%2A> method can be called from outside the managed application domains.\n  syntax:\n    content: public void ShutdownAll ();\n    parameters: []\n  overload: System.Web.Hosting.ApplicationManager.ShutdownAll*\n  exceptions: []\n  version:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Web.Hosting/ApplicationManager.xml\n  ms.technology:\n  - dotnet-webforms\n  ms.author: riande\n  manager: wpickett\n- uid: System.Web.Hosting.ApplicationManager.ShutdownApplication(System.String)\n  commentId: M:System.Web.Hosting.ApplicationManager.ShutdownApplication(System.String)\n  id: ShutdownApplication(System.String)\n  parent: System.Web.Hosting.ApplicationManager\n  langs:\n  - csharp\n  name: ShutdownApplication(String)\n  nameWithType: ApplicationManager.ShutdownApplication(String)\n  fullName: ApplicationManager.ShutdownApplication(String)\n  type: Method\n  assemblies:\n  - System.Web\n  namespace: System.Web.Hosting\n  summary: Unloads the specified application.\n  remarks: Calling the <xref:System.Web.Hosting.ApplicationManager.ShutdownApplication%2A> method is equivalent to calling the <xref:System.Web.Hosting.HostingEnvironment.InitiateShutdown%2A?displayProperty=fullName> method for a specific application domain; however, the <xref:System.Web.Hosting.ApplicationManager.ShutdownApplication%2A> method can be called from outside managed application domains.\n  syntax:\n    content: public void ShutdownApplication (string appId);\n    parameters:\n    - id: appId\n      type: System.String\n      description: The unique identifier of the application to unload.\n  overload: System.Web.Hosting.ApplicationManager.ShutdownApplication*\n  exceptions:\n  - type: System.ArgumentNullException\n    commentId: T:System.ArgumentNullException\n    description: <code>appId</code> is `null`.\n  version:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Web.Hosting/ApplicationManager.xml\n  ms.technology:\n  - dotnet-webforms\n  ms.author: riande\n  manager: wpickett\n- uid: System.Web.Hosting.ApplicationManager.StopObject(System.String,System.Type)\n  commentId: M:System.Web.Hosting.ApplicationManager.StopObject(System.String,System.Type)\n  id: StopObject(System.String,System.Type)\n  parent: System.Web.Hosting.ApplicationManager\n  langs:\n  - csharp\n  name: StopObject(String, Type)\n  nameWithType: ApplicationManager.StopObject(String, Type)\n  fullName: ApplicationManager.StopObject(String, Type)\n  type: Method\n  assemblies:\n  - System.Web\n  namespace: System.Web.Hosting\n  summary: Removes the specified object from the list of registered objects in an application. If the object to be removed is the last remaining object in the list of registered objects in an application, the application is unloaded.\n  syntax:\n    content: public void StopObject (string appId, Type type);\n    parameters:\n    - id: appId\n      type: System.String\n      description: The unique identifier for the application that owns the object.\n    - id: type\n      type: System.Type\n      description: The type of the object to unload.\n  overload: System.Web.Hosting.ApplicationManager.StopObject*\n  exceptions:\n  - type: System.ArgumentNullException\n    commentId: T:System.ArgumentNullException\n    description: \"<code>appId</code> is `null`.  \\n  \\n \\\\- or -  \\n  \\n <code>type</code> is `null`.\"\n  version:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Web.Hosting/ApplicationManager.xml\n  ms.technology:\n  - dotnet-webforms\n  ms.author: riande\n  manager: wpickett\nreferences:\n- uid: System.MarshalByRefObject\n  parent: System\n  isExternal: false\n  name: MarshalByRefObject\n  nameWithType: MarshalByRefObject\n  fullName: System.MarshalByRefObject\n- uid: System.ArgumentException\n  parent: System\n  isExternal: false\n  name: ArgumentException\n  nameWithType: ArgumentException\n  fullName: System.ArgumentException\n- uid: System.ArgumentNullException\n  parent: System\n  isExternal: false\n  name: ArgumentNullException\n  nameWithType: ArgumentNullException\n  fullName: System.ArgumentNullException\n- uid: System.InvalidOperationException\n  parent: System\n  isExternal: false\n  name: InvalidOperationException\n  nameWithType: InvalidOperationException\n  fullName: System.InvalidOperationException\n- uid: System.Web.Hosting.ApplicationManager.Close\n  parent: System.Web.Hosting.ApplicationManager\n  isExternal: false\n  name: Close()\n  nameWithType: ApplicationManager.Close()\n  fullName: ApplicationManager.Close()\n- uid: System.Web.Hosting.ApplicationManager.CreateObject(System.Web.Hosting.IApplicationHost,System.Type)\n  parent: System.Web.Hosting.ApplicationManager\n  isExternal: false\n  name: CreateObject(IApplicationHost, Type)\n  nameWithType: ApplicationManager.CreateObject(IApplicationHost, Type)\n  fullName: ApplicationManager.CreateObject(IApplicationHost, Type)\n- uid: System.Web.Hosting.IRegisteredObject\n  parent: System.Web.Hosting\n  isExternal: false\n  name: IRegisteredObject\n  nameWithType: IRegisteredObject\n  fullName: System.Web.Hosting.IRegisteredObject\n- uid: System.Web.Hosting.IApplicationHost\n  parent: System.Web.Hosting\n  isExternal: false\n  name: IApplicationHost\n  nameWithType: IApplicationHost\n  fullName: System.Web.Hosting.IApplicationHost\n- uid: System.Type\n  parent: System\n  isExternal: false\n  name: Type\n  nameWithType: Type\n  fullName: System.Type\n- uid: System.Web.Hosting.ApplicationManager.CreateObject(System.String,System.Type,System.String,System.String,System.Boolean)\n  parent: System.Web.Hosting.ApplicationManager\n  isExternal: false\n  name: CreateObject(String, Type, String, String, Boolean)\n  nameWithType: ApplicationManager.CreateObject(String, Type, String, String, Boolean)\n  fullName: ApplicationManager.CreateObject(String, Type, String, String, Boolean)\n- uid: System.String\n  parent: System\n  isExternal: false\n  name: String\n  nameWithType: String\n  fullName: System.String\n- uid: System.Boolean\n  parent: System\n  isExternal: false\n  name: Boolean\n  nameWithType: Boolean\n  fullName: System.Boolean\n- uid: System.Web.Hosting.ApplicationManager.CreateObject(System.String,System.Type,System.String,System.String,System.Boolean,System.Boolean)\n  parent: System.Web.Hosting.ApplicationManager\n  isExternal: false\n  name: CreateObject(String, Type, String, String, Boolean, Boolean)\n  nameWithType: ApplicationManager.CreateObject(String, Type, String, String, Boolean, Boolean)\n  fullName: ApplicationManager.CreateObject(String, Type, String, String, Boolean, Boolean)\n- uid: System.Web.Hosting.ApplicationManager.GetAppDomain(System.String)\n  parent: System.Web.Hosting.ApplicationManager\n  isExternal: false\n  name: GetAppDomain(String)\n  nameWithType: ApplicationManager.GetAppDomain(String)\n  fullName: ApplicationManager.GetAppDomain(String)\n- uid: System.AppDomain\n  parent: System\n  isExternal: false\n  name: AppDomain\n  nameWithType: AppDomain\n  fullName: System.AppDomain\n- uid: System.Web.Hosting.ApplicationManager.GetAppDomain(System.Web.Hosting.IApplicationHost)\n  parent: System.Web.Hosting.ApplicationManager\n  isExternal: false\n  name: GetAppDomain(IApplicationHost)\n  nameWithType: ApplicationManager.GetAppDomain(IApplicationHost)\n  fullName: ApplicationManager.GetAppDomain(IApplicationHost)\n- uid: System.Web.Hosting.ApplicationManager.GetApplicationManager\n  parent: System.Web.Hosting.ApplicationManager\n  isExternal: false\n  name: GetApplicationManager()\n  nameWithType: ApplicationManager.GetApplicationManager()\n  fullName: ApplicationManager.GetApplicationManager()\n- uid: System.Web.Hosting.ApplicationManager\n  parent: System.Web.Hosting\n  isExternal: false\n  name: ApplicationManager\n  nameWithType: ApplicationManager\n  fullName: System.Web.Hosting.ApplicationManager\n- uid: System.Web.Hosting.ApplicationManager.GetObject(System.String,System.Type)\n  parent: System.Web.Hosting.ApplicationManager\n  isExternal: false\n  name: GetObject(String, Type)\n  nameWithType: ApplicationManager.GetObject(String, Type)\n  fullName: ApplicationManager.GetObject(String, Type)\n- uid: System.Web.Hosting.ApplicationManager.GetRunningApplications\n  parent: System.Web.Hosting.ApplicationManager\n  isExternal: false\n  name: GetRunningApplications()\n  nameWithType: ApplicationManager.GetRunningApplications()\n  fullName: ApplicationManager.GetRunningApplications()\n- uid: System.Web.Hosting.ApplicationInfo\n  name: ApplicationInfo\n  nameWithType: ApplicationInfo\n  fullName: System.Web.Hosting.ApplicationInfo\n- uid: System.Web.Hosting.ApplicationInfo[]\n  parent: System.Web.Hosting\n  isExternal: false\n  name: ApplicationInfo[]\n  nameWithType: ApplicationInfo[]\n  fullName: System.Web.Hosting.ApplicationInfo[]\n  spec.csharp:\n  - uid: System.Web.Hosting.ApplicationInfo\n    name: ApplicationInfo\n    nameWithType: ApplicationInfo\n    fullName: System.Web.Hosting.ApplicationInfo\n  - name: '[]'\n    nameWithType: '[]'\n    fullName: '[]'\n- uid: System.Web.Hosting.ApplicationManager.InitializeLifetimeService\n  parent: System.Web.Hosting.ApplicationManager\n  isExternal: false\n  name: InitializeLifetimeService()\n  nameWithType: ApplicationManager.InitializeLifetimeService()\n  fullName: ApplicationManager.InitializeLifetimeService()\n- uid: System.Object\n  parent: System\n  isExternal: false\n  name: Object\n  nameWithType: Object\n  fullName: System.Object\n- uid: System.Web.Hosting.ApplicationManager.IsIdle\n  parent: System.Web.Hosting.ApplicationManager\n  isExternal: false\n  name: IsIdle()\n  nameWithType: ApplicationManager.IsIdle()\n  fullName: ApplicationManager.IsIdle()\n- uid: System.Web.Hosting.ApplicationManager.Open\n  parent: System.Web.Hosting.ApplicationManager\n  isExternal: false\n  name: Open()\n  nameWithType: ApplicationManager.Open()\n  fullName: ApplicationManager.Open()\n- uid: System.Web.Hosting.ApplicationManager.ShutdownAll\n  parent: System.Web.Hosting.ApplicationManager\n  isExternal: false\n  name: ShutdownAll()\n  nameWithType: ApplicationManager.ShutdownAll()\n  fullName: ApplicationManager.ShutdownAll()\n- uid: System.Web.Hosting.ApplicationManager.ShutdownApplication(System.String)\n  parent: System.Web.Hosting.ApplicationManager\n  isExternal: false\n  name: ShutdownApplication(String)\n  nameWithType: ApplicationManager.ShutdownApplication(String)\n  fullName: ApplicationManager.ShutdownApplication(String)\n- uid: System.Web.Hosting.ApplicationManager.StopObject(System.String,System.Type)\n  parent: System.Web.Hosting.ApplicationManager\n  isExternal: false\n  name: StopObject(String, Type)\n  nameWithType: ApplicationManager.StopObject(String, Type)\n  fullName: ApplicationManager.StopObject(String, Type)\n- uid: System.Web.Hosting.ApplicationManager.Close*\n  parent: System.Web.Hosting.ApplicationManager\n  isExternal: false\n  name: Close\n  nameWithType: ApplicationManager.Close\n  fullName: ApplicationManager.Close\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Web.Hosting/ApplicationManager.xml\n- uid: System.Web.Hosting.ApplicationManager.CreateObject*\n  parent: System.Web.Hosting.ApplicationManager\n  isExternal: false\n  name: CreateObject\n  nameWithType: ApplicationManager.CreateObject\n  fullName: ApplicationManager.CreateObject\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Web.Hosting/ApplicationManager.xml\n- uid: System.Web.Hosting.ApplicationManager.GetAppDomain*\n  parent: System.Web.Hosting.ApplicationManager\n  isExternal: false\n  name: GetAppDomain\n  nameWithType: ApplicationManager.GetAppDomain\n  fullName: ApplicationManager.GetAppDomain\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Web.Hosting/ApplicationManager.xml\n- uid: System.Web.Hosting.ApplicationManager.GetApplicationManager*\n  parent: System.Web.Hosting.ApplicationManager\n  isExternal: false\n  name: GetApplicationManager\n  nameWithType: ApplicationManager.GetApplicationManager\n  fullName: ApplicationManager.GetApplicationManager\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Web.Hosting/ApplicationManager.xml\n- uid: System.Web.Hosting.ApplicationManager.GetObject*\n  parent: System.Web.Hosting.ApplicationManager\n  isExternal: false\n  name: GetObject\n  nameWithType: ApplicationManager.GetObject\n  fullName: ApplicationManager.GetObject\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Web.Hosting/ApplicationManager.xml\n- uid: System.Web.Hosting.ApplicationManager.GetRunningApplications*\n  parent: System.Web.Hosting.ApplicationManager\n  isExternal: false\n  name: GetRunningApplications\n  nameWithType: ApplicationManager.GetRunningApplications\n  fullName: ApplicationManager.GetRunningApplications\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Web.Hosting/ApplicationManager.xml\n- uid: System.Web.Hosting.ApplicationManager.InitializeLifetimeService*\n  parent: System.Web.Hosting.ApplicationManager\n  isExternal: false\n  name: InitializeLifetimeService\n  nameWithType: ApplicationManager.InitializeLifetimeService\n  fullName: ApplicationManager.InitializeLifetimeService\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Web.Hosting/ApplicationManager.xml\n- uid: System.Web.Hosting.ApplicationManager.IsIdle*\n  parent: System.Web.Hosting.ApplicationManager\n  isExternal: false\n  name: IsIdle\n  nameWithType: ApplicationManager.IsIdle\n  fullName: ApplicationManager.IsIdle\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Web.Hosting/ApplicationManager.xml\n- uid: System.Web.Hosting.ApplicationManager.Open*\n  parent: System.Web.Hosting.ApplicationManager\n  isExternal: false\n  name: Open\n  nameWithType: ApplicationManager.Open\n  fullName: ApplicationManager.Open\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Web.Hosting/ApplicationManager.xml\n- uid: System.Web.Hosting.ApplicationManager.ShutdownAll*\n  parent: System.Web.Hosting.ApplicationManager\n  isExternal: false\n  name: ShutdownAll\n  nameWithType: ApplicationManager.ShutdownAll\n  fullName: ApplicationManager.ShutdownAll\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Web.Hosting/ApplicationManager.xml\n- uid: System.Web.Hosting.ApplicationManager.ShutdownApplication*\n  parent: System.Web.Hosting.ApplicationManager\n  isExternal: false\n  name: ShutdownApplication\n  nameWithType: ApplicationManager.ShutdownApplication\n  fullName: ApplicationManager.ShutdownApplication\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Web.Hosting/ApplicationManager.xml\n- uid: System.Web.Hosting.ApplicationManager.StopObject*\n  parent: System.Web.Hosting.ApplicationManager\n  isExternal: false\n  name: StopObject\n  nameWithType: ApplicationManager.StopObject\n  fullName: ApplicationManager.StopObject\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Web.Hosting/ApplicationManager.xml\n- uid: System.Object.Equals(System.Object)\n  parent: System.Object\n  isExternal: false\n  name: Equals(Object)\n  nameWithType: Object.Equals(Object)\n  fullName: Object.Equals(Object)\n- uid: System.Object.Equals(System.Object,System.Object)\n  parent: System.Object\n  isExternal: false\n  name: Equals(Object, Object)\n  nameWithType: Object.Equals(Object, Object)\n  fullName: Object.Equals(Object, Object)\n- uid: System.Object.GetHashCode\n  parent: System.Object\n  isExternal: false\n  name: GetHashCode()\n  nameWithType: Object.GetHashCode()\n  fullName: Object.GetHashCode()\n- uid: System.Object.GetType\n  parent: System.Object\n  isExternal: false\n  name: GetType()\n  nameWithType: Object.GetType()\n  fullName: Object.GetType()\n- uid: System.Object.MemberwiseClone\n  parent: System.Object\n  isExternal: false\n  name: MemberwiseClone()\n  nameWithType: Object.MemberwiseClone()\n  fullName: Object.MemberwiseClone()\n- uid: System.Object.ReferenceEquals(System.Object,System.Object)\n  parent: System.Object\n  isExternal: false\n  name: ReferenceEquals(Object, Object)\n  nameWithType: Object.ReferenceEquals(Object, Object)\n  fullName: Object.ReferenceEquals(Object, Object)\n- uid: System.Object.ToString\n  parent: System.Object\n  isExternal: false\n  name: ToString()\n  nameWithType: Object.ToString()\n  fullName: Object.ToString()\n- uid: System.MarshalByRefObject.CreateObjRef(System.Type)\n  parent: System.MarshalByRefObject\n  isExternal: false\n  name: CreateObjRef(Type)\n  nameWithType: MarshalByRefObject.CreateObjRef(Type)\n  fullName: MarshalByRefObject.CreateObjRef(Type)\n- uid: System.MarshalByRefObject.GetLifetimeService\n  parent: System.MarshalByRefObject\n  isExternal: false\n  name: GetLifetimeService()\n  nameWithType: MarshalByRefObject.GetLifetimeService()\n  fullName: MarshalByRefObject.GetLifetimeService()\n- uid: System.MarshalByRefObject.MemberwiseClone(System.Boolean)\n  parent: System.MarshalByRefObject\n  isExternal: false\n  name: MemberwiseClone(Boolean)\n  nameWithType: MarshalByRefObject.MemberwiseClone(Boolean)\n  fullName: MarshalByRefObject.MemberwiseClone(Boolean)\n"}