<?xml version="1.0"?>
<xliff version="1.2" xmlns="urn:oasis:names:tc:xliff:document:1.2" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:schemaLocation="urn:oasis:names:tc:xliff:document:1.2 xliff-core-1.2-transitional.xsd">
  <file datatype="xml" original="markdown" source-language="en-US" target-language="ja-jp">
    <header>
      <tool tool-id="mdxliff" tool-name="mdxliff" tool-version="1.0-fdd610b" tool-company="Microsoft" />
      <xliffext:olfilehash xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">64370abb8c00d8ef05c0b9c83004e8c847f2353d</xliffext:olfilehash>
      <xliffext:olfilepath xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">System.Security.AccessControl.CommonAcl.yml</xliffext:olfilepath>
      <xliffext:oltranslationpriority xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">net47</xliffext:oltranslationpriority>
      <xliffext:oltranslationtype xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">Human Translation</xliffext:oltranslationtype>
      <xliffext:olskeletonhash xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">cf73755142dd25de7a106fc140e411e55f3499ca</xliffext:olskeletonhash>
      <xliffext:olxliffhash xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">388093fd7414693bbf2beda5681641c071109c3b</xliffext:olxliffhash>
    </header>
    <body>
      <group id="content" extype="content">
        <trans-unit id="101" translate="yes" xml:space="preserve">
          <source>Represents an access control list (ACL) and is the base class for the <ph id="ph1">&lt;xref href="System.Security.AccessControl.DiscretionaryAcl"&gt;&lt;/xref&gt;</ph> and <ph id="ph2">&lt;xref href="System.Security.AccessControl.SystemAcl"&gt;&lt;/xref&gt;</ph> classes.</source>
        </trans-unit>
        <trans-unit id="102" translate="yes" xml:space="preserve" extradata="MT">
          <source>Certain combinations of inheritance and access mask flags are meaningless:</source>
        </trans-unit>
        <trans-unit id="103" translate="yes" xml:space="preserve" extradata="MT">
          <source>Any access control entry (ACE) with a zero-access mask is removed.</source>
        </trans-unit>
        <trans-unit id="104" translate="yes" xml:space="preserve" extradata="MT">
          <source>Inherit-only ACEs inside object ACLs are removed.</source>
        </trans-unit>
        <trans-unit id="105" translate="yes" xml:space="preserve" extradata="MT">
          <source><ph id="ph1">&lt;xref:System.Security.AccessControl.PropagationFlags.InheritOnly&gt;</ph>, <ph id="ph2">&lt;xref:System.Security.AccessControl.PropagationFlags.NoPropagateInherit&gt;</ph>, <ph id="ph3">&lt;xref:System.Security.AccessControl.InheritanceFlags.ContainerInherit&gt;</ph>, and <ph id="ph4">&lt;xref:System.Security.AccessControl.InheritanceFlags.ObjectInherit&gt;</ph> flags on all ACEs in leaf object ACLs are cleared.</source>
        </trans-unit>
        <trans-unit id="106" translate="yes" xml:space="preserve" extradata="MT">
          <source>ACEs that have an <ph id="ph1">&lt;xref:System.Security.AccessControl.PropagationFlags.InheritOnly&gt;</ph> flag in the absence of the <ph id="ph2">&lt;xref:System.Security.AccessControl.InheritanceFlags.ContainerInherit&gt;</ph> or <ph id="ph3">&lt;xref:System.Security.AccessControl.InheritanceFlags.ObjectInherit&gt;</ph> flag are meaningless; they are removed.</source>
        </trans-unit>
        <trans-unit id="107" translate="yes" xml:space="preserve" extradata="MT">
          <source>The <ph id="ph1">&lt;xref:System.Security.AccessControl.PropagationFlags.NoPropagateInherit&gt;</ph> flag in the absence of the <ph id="ph2">&lt;xref:System.Security.AccessControl.InheritanceFlags.ContainerInherit&gt;</ph> or <ph id="ph3">&lt;xref:System.Security.AccessControl.InheritanceFlags.ObjectInherit&gt;</ph> flag can be removed.</source>
        </trans-unit>
        <trans-unit id="108" translate="yes" xml:space="preserve" extradata="MT">
          <source>ACEs that have an <ph id="ph1">&lt;xref:System.Security.AccessControl.AuditFlags&gt;</ph> value of <ph id="ph2">&lt;xref:System.Security.AccessControl.AuditFlags.Success&gt;</ph> or <ph id="ph3">&lt;xref:System.Security.AccessControl.AuditFlags.Failure&gt;</ph> in discretionary access control lists (DACLs) are removed.</source>
        </trans-unit>
        <trans-unit id="109" translate="yes" xml:space="preserve" extradata="MT">
          <source>Any audit ACE that does not specify either <ph id="ph1">&lt;xref:System.Security.AccessControl.AuditFlags.Success&gt;</ph> or <ph id="ph2">&lt;xref:System.Security.AccessControl.AuditFlags.Failure&gt;</ph> is removed.</source>
        </trans-unit>
        <trans-unit id="110" translate="yes" xml:space="preserve" extradata="MT">
          <source>On DACLs, SystemAudit and SystemAlarm ACEs are removed.</source>
        </trans-unit>
        <trans-unit id="111" translate="yes" xml:space="preserve" extradata="MT">
          <source>On system access control lists (SACLs), AccessAllowed and AccessDenied ACEs are removed.</source>
        </trans-unit>
        <trans-unit id="112" translate="yes" xml:space="preserve" extradata="MT">
          <source>Canonical order is maintained according to the following algorithm:</source>
        </trans-unit>
        <trans-unit id="113" translate="yes" xml:space="preserve" extradata="MT">
          <source>Explicit ACEs take precedence over inherited ACEs; this rule applies to both DACLs and SACLs.</source>
        </trans-unit>
        <trans-unit id="114" translate="yes" xml:space="preserve" extradata="MT">
          <source>In DACLs, among the explicit ACEs, ACEs that deny access take precedence over ACEs that allow access.</source>
        </trans-unit>
        <trans-unit id="115" translate="yes" xml:space="preserve" extradata="MT">
          <source>For directory object ACLs, the nonobject ACEs come before object ACEs.</source>
        </trans-unit>
        <trans-unit id="116" translate="yes" xml:space="preserve" extradata="MT">
          <source>All common ACEs take precedence over noncommon ACEs.</source>
        </trans-unit>
        <trans-unit id="117" translate="yes" xml:space="preserve" extradata="MT">
          <source>Inherited ACEs maintain their relative order after canonicity.</source>
        </trans-unit>
        <trans-unit id="118" translate="yes" xml:space="preserve" extradata="MT">
          <source>Unrecognized and custom ACEs are disallowed in both DACLs and SACLs.</source>
        </trans-unit>
        <trans-unit id="119" translate="yes" xml:space="preserve" extradata="MT">
          <source>Within contiguous ranges (explicit AccessDenied and AccessAllowed ACEs on DACLs, all explicit ACEs on SACLs), the ACEs are sorted by using the <ph id="ph1">&lt;xref:System.Security.Principal.SecurityIdentifier.CompareTo%2A&gt;</ph> methods of the <ph id="ph2">&lt;xref:System.Security.Principal.SecurityIdentifier&gt;</ph> objects associated with the ACEs.</source>
        </trans-unit>
        <trans-unit id="120" translate="yes" xml:space="preserve" extradata="MT">
          <source>Adjacent ACEs are combined, if appropriate.</source>
        </trans-unit>
        <trans-unit id="121" translate="yes" xml:space="preserve" extradata="MT">
          <source>This reduces the size of the ACL without affecting the access control semantics it grants.</source>
        </trans-unit>
        <trans-unit id="122" translate="yes" xml:space="preserve">
          <source>Gets the length, in bytes, of the binary representation of the current <ph id="ph1">&lt;xref href="System.Security.AccessControl.CommonAcl"&gt;&lt;/xref&gt;</ph> object.</source>
        </trans-unit>
        <trans-unit id="123" translate="yes" xml:space="preserve">
          <source>This length should be used before marshaling the access control list (ACL) into a binary array by using the <ph id="ph1">&lt;xref href="System.Security.AccessControl.CommonAcl.GetBinaryForm(System.Byte[],System.Int32)"&gt;&lt;/xref&gt;</ph> method.</source>
        </trans-unit>
        <trans-unit id="124" translate="yes" xml:space="preserve">
          <source>The length, in bytes, of the binary representation of the current <ph id="ph1">&lt;xref href="System.Security.AccessControl.CommonAcl"&gt;&lt;/xref&gt;</ph> object.</source>
        </trans-unit>
        <trans-unit id="125" translate="yes" xml:space="preserve">
          <source>Gets the number of access control entries (ACEs) in the current <ph id="ph1">&lt;xref href="System.Security.AccessControl.CommonAcl"&gt;&lt;/xref&gt;</ph> object.</source>
        </trans-unit>
        <trans-unit id="126" translate="yes" xml:space="preserve">
          <source>The number of ACEs in the current <ph id="ph1">&lt;xref href="System.Security.AccessControl.CommonAcl"&gt;&lt;/xref&gt;</ph> object.</source>
        </trans-unit>
        <trans-unit id="127" translate="yes" xml:space="preserve">
          <source>Marshals the contents of the <ph id="ph1">&lt;xref href="System.Security.AccessControl.CommonAcl"&gt;&lt;/xref&gt;</ph> object into the specified byte array beginning at the specified offset.</source>
        </trans-unit>
        <trans-unit id="128" translate="yes" xml:space="preserve">
          <source>The byte array into which the contents of the <ph id="ph1">&lt;xref href="System.Security.AccessControl.CommonAcl"&gt;&lt;/xref&gt;</ph> is marshaled.</source>
        </trans-unit>
        <trans-unit id="129" translate="yes" xml:space="preserve">
          <source>The offset at which to start marshaling.</source>
        </trans-unit>
        <trans-unit id="130" translate="yes" xml:space="preserve">
          <source>Gets a Boolean value that specifies whether the access control entries (ACEs) in the current <ph id="ph1">&lt;xref href="System.Security.AccessControl.CommonAcl"&gt;&lt;/xref&gt;</ph> object are in canonical order.</source>
        </trans-unit>
        <trans-unit id="131" translate="yes" xml:space="preserve">
          <source><ph id="ph1">`true`</ph> if the ACEs in the current <ph id="ph2">&lt;xref href="System.Security.AccessControl.CommonAcl"&gt;&lt;/xref&gt;</ph> object are in canonical order; otherwise, <ph id="ph3">`false`</ph>.</source>
        </trans-unit>
        <trans-unit id="132" translate="yes" xml:space="preserve">
          <source>Sets whether the <ph id="ph1">&lt;xref href="System.Security.AccessControl.CommonAcl"&gt;&lt;/xref&gt;</ph> object is a container.</source>
        </trans-unit>
        <trans-unit id="133" translate="yes" xml:space="preserve">
          <source><ph id="ph1">`true`</ph> if the current <ph id="ph2">&lt;xref href="System.Security.AccessControl.CommonAcl"&gt;&lt;/xref&gt;</ph> object is a container.</source>
        </trans-unit>
        <trans-unit id="134" translate="yes" xml:space="preserve">
          <source>Sets whether the current <ph id="ph1">&lt;xref href="System.Security.AccessControl.CommonAcl"&gt;&lt;/xref&gt;</ph> object is a directory object access control list (ACL).</source>
        </trans-unit>
        <trans-unit id="135" translate="yes" xml:space="preserve">
          <source><ph id="ph1">`true`</ph> if the current <ph id="ph2">&lt;xref href="System.Security.AccessControl.CommonAcl"&gt;&lt;/xref&gt;</ph> object is a directory object ACL.</source>
        </trans-unit>
        <trans-unit id="136" translate="yes" xml:space="preserve">
          <source>Gets or sets the <ph id="ph1">&lt;xref href="System.Security.AccessControl.CommonAce"&gt;&lt;/xref&gt;</ph> at the specified index.</source>
        </trans-unit>
        <trans-unit id="137" translate="yes" xml:space="preserve">
          <source>The zero-based index of the <ph id="ph1">&lt;xref href="System.Security.AccessControl.CommonAce"&gt;&lt;/xref&gt;</ph> to get or set.</source>
        </trans-unit>
        <trans-unit id="138" translate="yes" xml:space="preserve">
          <source>The <ph id="ph1">&lt;xref href="System.Security.AccessControl.CommonAce"&gt;&lt;/xref&gt;</ph> at the specified index.</source>
        </trans-unit>
        <trans-unit id="139" translate="yes" xml:space="preserve">
          <source>Removes all access control entries (ACEs) contained by this <ph id="ph1">&lt;xref href="System.Security.AccessControl.CommonAcl"&gt;&lt;/xref&gt;</ph> object that are associated with the specified <ph id="ph2">&lt;xref href="System.Security.Principal.SecurityIdentifier"&gt;&lt;/xref&gt;</ph> object.</source>
        </trans-unit>
        <trans-unit id="140" translate="yes" xml:space="preserve">
          <source>The <ph id="ph1">&lt;xref href="System.Security.Principal.SecurityIdentifier"&gt;&lt;/xref&gt;</ph> object to check for.</source>
        </trans-unit>
        <trans-unit id="141" translate="yes" xml:space="preserve">
          <source>Removes all inherited access control entries (ACEs) from this <ph id="ph1">&lt;xref href="System.Security.AccessControl.CommonAcl"&gt;&lt;/xref&gt;</ph> object.</source>
        </trans-unit>
        <trans-unit id="142" translate="yes" xml:space="preserve">
          <source>Gets the revision level of the <ph id="ph1">&lt;xref href="System.Security.AccessControl.CommonAcl"&gt;&lt;/xref&gt;</ph>.</source>
        </trans-unit>
        <trans-unit id="143" translate="yes" xml:space="preserve">
          <source>A byte value that specifies the revision level of the <ph id="ph1">&lt;xref href="System.Security.AccessControl.CommonAcl"&gt;&lt;/xref&gt;</ph>.</source>
        </trans-unit>
      </group>
    </body>
  </file>
</xliff>