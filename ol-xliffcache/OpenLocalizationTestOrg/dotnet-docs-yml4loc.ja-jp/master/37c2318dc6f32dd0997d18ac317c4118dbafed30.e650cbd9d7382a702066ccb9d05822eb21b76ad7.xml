{"nodes":[{"content":"Defines a message inspector object that can be added to the <xref href=\"System.ServiceModel.Dispatcher.ClientRuntime.MessageInspectors\"></xref> collection to view or modify messages.","nodes":[{"pos":[0,182],"content":"Defines a message inspector object that can be added to the <ph id=\"ph1\">&lt;xref href=\"System.ServiceModel.Dispatcher.ClientRuntime.MessageInspectors\"&gt;&lt;/xref&gt;</ph> collection to view or modify messages.","source":"Defines a message inspector object that can be added to the <xref href=\"System.ServiceModel.Dispatcher.ClientRuntime.MessageInspectors\"></xref> collection to view or modify messages."}],"pos":[761,944],"yaml":true},{"content":"Implement the <xref:System.ServiceModel.Dispatcher.IClientMessageInspector> interface and add it to the <xref:System.ServiceModel.Dispatcher.ClientRuntime.MessageInspectors%2A> collection to inspect or modify messages as they pass through a [!INCLUDE[indigo2](~/includes/indigo2-md.md)] client object. For details, see <xref:System.ServiceModel.Dispatcher.ClientRuntime>.","nodes":[{"pos":[0,371],"content":"Implement the <xref:System.ServiceModel.Dispatcher.IClientMessageInspector> interface and add it to the <xref:System.ServiceModel.Dispatcher.ClientRuntime.MessageInspectors%2A> collection to inspect or modify messages as they pass through a [!INCLUDE[indigo2](~/includes/indigo2-md.md)] client object. For details, see <xref:System.ServiceModel.Dispatcher.ClientRuntime>.","nodes":[{"content":"Implement the <ph id=\"ph1\">&lt;xref:System.ServiceModel.Dispatcher.IClientMessageInspector&gt;</ph> interface and add it to the <ph id=\"ph2\">&lt;xref:System.ServiceModel.Dispatcher.ClientRuntime.MessageInspectors%2A&gt;</ph> collection to inspect or modify messages as they pass through a <ph id=\"ph3\">[!INCLUDE[indigo2](~/includes/indigo2-md.md)]</ph> client object.","pos":[0,301],"source":"Implement the <xref:System.ServiceModel.Dispatcher.IClientMessageInspector> interface and add it to the <xref:System.ServiceModel.Dispatcher.ClientRuntime.MessageInspectors%2A> collection to inspect or modify messages as they pass through a [!INCLUDE[indigo2](~/includes/indigo2-md.md)] client object."},{"content":"For details, see <ph id=\"ph1\">&lt;xref:System.ServiceModel.Dispatcher.ClientRuntime&gt;</ph>.","pos":[302,371],"source":" For details, see <xref:System.ServiceModel.Dispatcher.ClientRuntime>."}]}],"pos":[955,1327],"yaml":true,"extradata":"MT"},{"content":"Enables inspection or modification of a message after a reply message is received but prior to passing it back to the client application.","nodes":[{"pos":[0,137],"content":"Enables inspection or modification of a message after a reply message is received but prior to passing it back to the client application.","nodes":[{"content":"Enables inspection or modification of a message after a reply message is received but prior to passing it back to the client application.","pos":[0,137]}]}],"pos":[3885,4023],"yaml":true},{"content":"Implement <xref:System.ServiceModel.Dispatcher.IClientMessageInspector.AfterReceiveReply%2A> to inspect or modify a reply message after it has been received by the [!INCLUDE[indigo2](~/includes/indigo2-md.md)] client object but before it is deserialized into objects that are returned to the client application.  \n  \n The `correlationState` is the object returned by the user when <xref:System.ServiceModel.Dispatcher.IClientMessageInspector.BeforeSendRequest%2A> is called for this message. The best practice is to make this a <xref:System.Guid?displayProperty=fullName> to ensure that no two `correlationState` objects are the same.","nodes":[{"pos":[0,311],"content":"Implement <ph id=\"ph1\">&lt;xref:System.ServiceModel.Dispatcher.IClientMessageInspector.AfterReceiveReply%2A&gt;</ph> to inspect or modify a reply message after it has been received by the <ph id=\"ph2\">[!INCLUDE[indigo2](~/includes/indigo2-md.md)]</ph> client object but before it is deserialized into objects that are returned to the client application.","source":"Implement <xref:System.ServiceModel.Dispatcher.IClientMessageInspector.AfterReceiveReply%2A> to inspect or modify a reply message after it has been received by the [!INCLUDE[indigo2](~/includes/indigo2-md.md)] client object but before it is deserialized into objects that are returned to the client application."},{"pos":[318,634],"content":"The `correlationState` is the object returned by the user when <xref:System.ServiceModel.Dispatcher.IClientMessageInspector.BeforeSendRequest%2A> is called for this message. The best practice is to make this a <xref:System.Guid?displayProperty=fullName> to ensure that no two `correlationState` objects are the same.","nodes":[{"content":"The <ph id=\"ph1\">`correlationState`</ph> is the object returned by the user when <ph id=\"ph2\">&lt;xref:System.ServiceModel.Dispatcher.IClientMessageInspector.BeforeSendRequest%2A&gt;</ph> is called for this message.","pos":[0,173],"source":"The `correlationState` is the object returned by the user when <xref:System.ServiceModel.Dispatcher.IClientMessageInspector.BeforeSendRequest%2A> is called for this message."},{"content":"The best practice is to make this a <ph id=\"ph1\">&lt;xref:System.Guid?displayProperty=fullName&gt;</ph> to ensure that no two <ph id=\"ph2\">`correlationState`</ph> objects are the same.","pos":[174,316],"source":" The best practice is to make this a <xref:System.Guid?displayProperty=fullName> to ensure that no two `correlationState` objects are the same."}]}],"pos":[4034,4673],"yaml":true,"extradata":"MT"},{"content":"The message to be transformed into types and handed back to the client application.","nodes":[{"pos":[0,83],"content":"The message to be transformed into types and handed back to the client application.","nodes":[{"content":"The message to be transformed into types and handed back to the client application.","pos":[0,83]}]}],"pos":[5971,6055],"yaml":true},{"content":"Correlation state data.","nodes":[{"pos":[0,23],"content":"Correlation state data.","nodes":[{"content":"Correlation state data.","pos":[0,23]}]}],"pos":[6127,6151],"yaml":true},{"content":"Enables inspection or modification of a message before a request message is sent to a service.","nodes":[{"pos":[0,94],"content":"Enables inspection or modification of a message before a request message is sent to a service.","nodes":[{"content":"Enables inspection or modification of a message before a request message is sent to a service.","pos":[0,94]}]}],"pos":[7748,7843],"yaml":true},{"content":"Implement the <xref:System.ServiceModel.Dispatcher.IClientMessageInspector.BeforeSendRequest%2A> to inspect or modify a request message before it is sent.","nodes":[{"pos":[0,154],"content":"Implement the <xref:System.ServiceModel.Dispatcher.IClientMessageInspector.BeforeSendRequest%2A> to inspect or modify a request message before it is sent.","nodes":[{"content":"Implement the <ph id=\"ph1\">&lt;xref:System.ServiceModel.Dispatcher.IClientMessageInspector.BeforeSendRequest%2A&gt;</ph> to inspect or modify a request message before it is sent.","pos":[0,154],"source":"Implement the <xref:System.ServiceModel.Dispatcher.IClientMessageInspector.BeforeSendRequest%2A> to inspect or modify a request message before it is sent."}]}],"pos":[7854,8009],"yaml":true,"extradata":"MT"},{"content":"The message to be sent to the service.","nodes":[{"pos":[0,38],"content":"The message to be sent to the service.","nodes":[{"content":"The message to be sent to the service.","pos":[0,38]}]}],"pos":[9332,9371],"yaml":true},{"content":"The [!INCLUDE[indigo2](~/includes/indigo2-md.md)] client object channel.","nodes":[{"pos":[0,72],"content":"The <ph id=\"ph1\">[!INCLUDE[indigo2](~/includes/indigo2-md.md)]</ph> client object channel.","source":"The [!INCLUDE[indigo2](~/includes/indigo2-md.md)] client object channel."}],"pos":[9455,9528],"yaml":true},{"content":"The object that is returned as the <code>correlationState</code> argument of the <xref href=\"System.ServiceModel.Dispatcher.IClientMessageInspector.AfterReceiveReply(System.ServiceModel.Channels.Message@,System.Object)\"></xref> method. This is `null` if no correlation state is used.  \n  \n The best practice is to make this a <xref href=\"System.Guid\"></xref> to ensure that no two <code>correlationState</code> objects are the same.","nodes":[{"pos":[0,283],"content":"The object that is returned as the <code>correlationState</code> argument of the <xref href=\"System.ServiceModel.Dispatcher.IClientMessageInspector.AfterReceiveReply(System.ServiceModel.Channels.Message@,System.Object)\"></xref> method. This is `null` if no correlation state is used.","nodes":[{"content":"The object that is returned as the <bpt id=\"p1\">&lt;code&gt;</bpt><ph id=\"ph1\">correlationState</ph><ept id=\"p1\">&lt;/code&gt;</ept> argument of the <ph id=\"ph2\">&lt;xref href=\"System.ServiceModel.Dispatcher.IClientMessageInspector.AfterReceiveReply(System.ServiceModel.Channels.Message@,System.Object)\"&gt;&lt;/xref&gt;</ph> method.","pos":[0,235],"source":"The object that is returned as the <code>correlationState</code> argument of the <xref href=\"System.ServiceModel.Dispatcher.IClientMessageInspector.AfterReceiveReply(System.ServiceModel.Channels.Message@,System.Object)\"></xref> method."},{"content":"This is <ph id=\"ph1\">`null`</ph> if no correlation state is used.","pos":[236,283],"source":" This is `null` if no correlation state is used."}]},{"pos":[290,432],"content":"The best practice is to make this a <ph id=\"ph1\">&lt;xref href=\"System.Guid\"&gt;&lt;/xref&gt;</ph> to ensure that no two <bpt id=\"p1\">&lt;code&gt;</bpt><ph id=\"ph2\">correlationState</ph><ept id=\"p1\">&lt;/code&gt;</ept> objects are the same.","source":"The best practice is to make this a <xref href=\"System.Guid\"></xref> to ensure that no two <code>correlationState</code> objects are the same."}],"pos":[9585,10026],"yaml":true}],"content":"### YamlMime:ManagedReference\nitems:\n- uid: System.ServiceModel.Dispatcher.IClientMessageInspector\n  commentId: T:System.ServiceModel.Dispatcher.IClientMessageInspector\n  id: IClientMessageInspector\n  children:\n  - System.ServiceModel.Dispatcher.IClientMessageInspector.AfterReceiveReply(System.ServiceModel.Channels.Message@,System.Object)\n  - System.ServiceModel.Dispatcher.IClientMessageInspector.BeforeSendRequest(System.ServiceModel.Channels.Message@,System.ServiceModel.IClientChannel)\n  langs:\n  - csharp\n  name: IClientMessageInspector\n  nameWithType: IClientMessageInspector\n  fullName: System.ServiceModel.Dispatcher.IClientMessageInspector\n  type: Interface\n  assemblies:\n  - System.ServiceModel\n  namespace: System.ServiceModel.Dispatcher\n  summary: Defines a message inspector object that can be added to the <xref href=\"System.ServiceModel.Dispatcher.ClientRuntime.MessageInspectors\"></xref> collection to view or modify messages.\n  remarks: Implement the <xref:System.ServiceModel.Dispatcher.IClientMessageInspector> interface and add it to the <xref:System.ServiceModel.Dispatcher.ClientRuntime.MessageInspectors%2A> collection to inspect or modify messages as they pass through a [!INCLUDE[indigo2](~/includes/indigo2-md.md)] client object. For details, see <xref:System.ServiceModel.Dispatcher.ClientRuntime>.\n  example:\n  - \"The following code example shows an implementation that writes strings to the console when the implementation is called.  \\n  \\n [!code-csharp[Interceptors#1](~/samples/snippets/csharp/VS_Snippets_CFX/interceptors/cs/interceptors.cs#1)]\\n [!code-vb[Interceptors#1](~/samples/snippets/visualbasic/VS_Snippets_CFX/interceptors/vb/interceptors.vb#1)]  \\n  \\n The following code example shows how to use an <xref:System.ServiceModel.Description.IEndpointBehavior?displayProperty=fullName> to insert the client message inspector in the client endpoint.  \\n  \\n [!code-csharp[Interceptors#2](~/samples/snippets/csharp/VS_Snippets_CFX/interceptors/cs/insertingbehaviors.cs#2)]\\n [!code-vb[Interceptors#2](~/samples/snippets/visualbasic/VS_Snippets_CFX/interceptors/vb/insertingbehaviors.vb#2)]  \\n  \\n Finally, the following code example shows how to modify the client configuration file to use the endpoint behavior with a particular endpoint.  \\n  \\n [!code-xml[Interceptors#3](~/samples/snippets/csharp/VS_Snippets_CFX/interceptors/cs/client.exe.config#3)]\"\n  syntax:\n    content: public interface IClientMessageInspector\n  implements: []\n  version:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.ServiceModel.Dispatcher/IClientMessageInspector.xml\n  ms.technology:\n  - dotnet-standard\n  author: Erikre\n  ms.author: erikre\n  manager: erikre\n- uid: System.ServiceModel.Dispatcher.IClientMessageInspector.AfterReceiveReply(System.ServiceModel.Channels.Message@,System.Object)\n  commentId: M:System.ServiceModel.Dispatcher.IClientMessageInspector.AfterReceiveReply(System.ServiceModel.Channels.Message@,System.Object)\n  id: AfterReceiveReply(System.ServiceModel.Channels.Message@,System.Object)\n  parent: System.ServiceModel.Dispatcher.IClientMessageInspector\n  langs:\n  - csharp\n  name: AfterReceiveReply(Message, Object)\n  nameWithType: IClientMessageInspector.AfterReceiveReply(Message, Object)\n  fullName: IClientMessageInspector.AfterReceiveReply(Message, Object)\n  type: Method\n  assemblies:\n  - System.ServiceModel\n  namespace: System.ServiceModel.Dispatcher\n  summary: Enables inspection or modification of a message after a reply message is received but prior to passing it back to the client application.\n  remarks: \"Implement <xref:System.ServiceModel.Dispatcher.IClientMessageInspector.AfterReceiveReply%2A> to inspect or modify a reply message after it has been received by the [!INCLUDE[indigo2](~/includes/indigo2-md.md)] client object but before it is deserialized into objects that are returned to the client application.  \\n  \\n The `correlationState` is the object returned by the user when <xref:System.ServiceModel.Dispatcher.IClientMessageInspector.BeforeSendRequest%2A> is called for this message. The best practice is to make this a <xref:System.Guid?displayProperty=fullName> to ensure that no two `correlationState` objects are the same.\"\n  example:\n  - \"The following code example shows an implementation that writes strings to the console when the implementation is called.  \\n  \\n [!code-csharp[Interceptors#1](~/samples/snippets/csharp/VS_Snippets_CFX/interceptors/cs/interceptors.cs#1)]\\n [!code-vb[Interceptors#1](~/samples/snippets/visualbasic/VS_Snippets_CFX/interceptors/vb/interceptors.vb#1)]  \\n  \\n The following code example shows how to use an <xref:System.ServiceModel.Description.IEndpointBehavior?displayProperty=fullName> to insert the client message inspector in the client endpoint.  \\n  \\n [!code-csharp[Interceptors#2](~/samples/snippets/csharp/VS_Snippets_CFX/interceptors/cs/insertingbehaviors.cs#2)]\\n [!code-vb[Interceptors#2](~/samples/snippets/visualbasic/VS_Snippets_CFX/interceptors/vb/insertingbehaviors.vb#2)]  \\n  \\n Finally, the following code example shows how to modify the client configuration file to use the endpoint behavior with a particular endpoint.  \\n  \\n [!code-xml[Interceptors#3](~/samples/snippets/csharp/VS_Snippets_CFX/interceptors/cs/client.exe.config#3)]\"\n  syntax:\n    content: public void AfterReceiveReply (ref System.ServiceModel.Channels.Message reply, object correlationState);\n    parameters:\n    - id: reply\n      type: System.ServiceModel.Channels.Message\n      description: The message to be transformed into types and handed back to the client application.\n    - id: correlationState\n      type: System.Object\n      description: Correlation state data.\n  overload: System.ServiceModel.Dispatcher.IClientMessageInspector.AfterReceiveReply*\n  exceptions: []\n  version:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.ServiceModel.Dispatcher/IClientMessageInspector.xml\n  ms.technology:\n  - dotnet-standard\n  author: Erikre\n  ms.author: erikre\n  manager: erikre\n- uid: System.ServiceModel.Dispatcher.IClientMessageInspector.BeforeSendRequest(System.ServiceModel.Channels.Message@,System.ServiceModel.IClientChannel)\n  commentId: M:System.ServiceModel.Dispatcher.IClientMessageInspector.BeforeSendRequest(System.ServiceModel.Channels.Message@,System.ServiceModel.IClientChannel)\n  id: BeforeSendRequest(System.ServiceModel.Channels.Message@,System.ServiceModel.IClientChannel)\n  parent: System.ServiceModel.Dispatcher.IClientMessageInspector\n  langs:\n  - csharp\n  name: BeforeSendRequest(Message, IClientChannel)\n  nameWithType: IClientMessageInspector.BeforeSendRequest(Message, IClientChannel)\n  fullName: IClientMessageInspector.BeforeSendRequest(Message, IClientChannel)\n  type: Method\n  assemblies:\n  - System.ServiceModel\n  namespace: System.ServiceModel.Dispatcher\n  summary: Enables inspection or modification of a message before a request message is sent to a service.\n  remarks: Implement the <xref:System.ServiceModel.Dispatcher.IClientMessageInspector.BeforeSendRequest%2A> to inspect or modify a request message before it is sent.\n  example:\n  - \"The following code example shows an implementation that writes strings to the console when the implementation is called.  \\n  \\n [!code-csharp[Interceptors#1](~/samples/snippets/csharp/VS_Snippets_CFX/interceptors/cs/interceptors.cs#1)]\\n [!code-vb[Interceptors#1](~/samples/snippets/visualbasic/VS_Snippets_CFX/interceptors/vb/interceptors.vb#1)]  \\n  \\n The following code example shows how to use an <xref:System.ServiceModel.Description.IEndpointBehavior?displayProperty=fullName> to insert the client message inspector in the client endpoint.  \\n  \\n [!code-csharp[Interceptors#2](~/samples/snippets/csharp/VS_Snippets_CFX/interceptors/cs/insertingbehaviors.cs#2)]\\n [!code-vb[Interceptors#2](~/samples/snippets/visualbasic/VS_Snippets_CFX/interceptors/vb/insertingbehaviors.vb#2)]  \\n  \\n Finally, the following code example shows how to modify the client configuration file to use the endpoint behavior with a particular endpoint.  \\n  \\n [!code-xml[Interceptors#3](~/samples/snippets/csharp/VS_Snippets_CFX/interceptors/cs/client.exe.config#3)]\"\n  syntax:\n    content: public object BeforeSendRequest (ref System.ServiceModel.Channels.Message request, System.ServiceModel.IClientChannel channel);\n    parameters:\n    - id: request\n      type: System.ServiceModel.Channels.Message\n      description: The message to be sent to the service.\n    - id: channel\n      type: System.ServiceModel.IClientChannel\n      description: The [!INCLUDE[indigo2](~/includes/indigo2-md.md)] client object channel.\n    return:\n      type: System.Object\n      description: \"The object that is returned as the <code>correlationState</code> argument of the <xref href=\\\"System.ServiceModel.Dispatcher.IClientMessageInspector.AfterReceiveReply(System.ServiceModel.Channels.Message@,System.Object)\\\"></xref> method. This is `null` if no correlation state is used.  \\n  \\n The best practice is to make this a <xref href=\\\"System.Guid\\\"></xref> to ensure that no two <code>correlationState</code> objects are the same.\"\n  overload: System.ServiceModel.Dispatcher.IClientMessageInspector.BeforeSendRequest*\n  exceptions: []\n  version:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.ServiceModel.Dispatcher/IClientMessageInspector.xml\n  ms.technology:\n  - dotnet-standard\n  author: Erikre\n  ms.author: erikre\n  manager: erikre\nreferences:\n- uid: System.ServiceModel.Dispatcher.IClientMessageInspector.AfterReceiveReply(System.ServiceModel.Channels.Message@,System.Object)\n  parent: System.ServiceModel.Dispatcher.IClientMessageInspector\n  isExternal: false\n  name: AfterReceiveReply(Message, Object)\n  nameWithType: IClientMessageInspector.AfterReceiveReply(Message, Object)\n  fullName: IClientMessageInspector.AfterReceiveReply(Message, Object)\n- uid: System.ServiceModel.Channels.Message\n  parent: System.ServiceModel.Channels\n  isExternal: false\n  name: Message\n  nameWithType: Message\n  fullName: System.ServiceModel.Channels.Message\n- uid: System.Object\n  parent: System\n  isExternal: false\n  name: Object\n  nameWithType: Object\n  fullName: System.Object\n- uid: System.ServiceModel.Dispatcher.IClientMessageInspector.BeforeSendRequest(System.ServiceModel.Channels.Message@,System.ServiceModel.IClientChannel)\n  parent: System.ServiceModel.Dispatcher.IClientMessageInspector\n  isExternal: false\n  name: BeforeSendRequest(Message, IClientChannel)\n  nameWithType: IClientMessageInspector.BeforeSendRequest(Message, IClientChannel)\n  fullName: IClientMessageInspector.BeforeSendRequest(Message, IClientChannel)\n- uid: System.ServiceModel.IClientChannel\n  parent: System.ServiceModel\n  isExternal: false\n  name: IClientChannel\n  nameWithType: IClientChannel\n  fullName: System.ServiceModel.IClientChannel\n- uid: System.ServiceModel.Dispatcher.IClientMessageInspector.AfterReceiveReply*\n  parent: System.ServiceModel.Dispatcher.IClientMessageInspector\n  isExternal: false\n  name: AfterReceiveReply\n  nameWithType: IClientMessageInspector.AfterReceiveReply\n  fullName: IClientMessageInspector.AfterReceiveReply\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.ServiceModel.Dispatcher/IClientMessageInspector.xml\n- uid: System.ServiceModel.Dispatcher.IClientMessageInspector.BeforeSendRequest*\n  parent: System.ServiceModel.Dispatcher.IClientMessageInspector\n  isExternal: false\n  name: BeforeSendRequest\n  nameWithType: IClientMessageInspector.BeforeSendRequest\n  fullName: IClientMessageInspector.BeforeSendRequest\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.ServiceModel.Dispatcher/IClientMessageInspector.xml\n"}