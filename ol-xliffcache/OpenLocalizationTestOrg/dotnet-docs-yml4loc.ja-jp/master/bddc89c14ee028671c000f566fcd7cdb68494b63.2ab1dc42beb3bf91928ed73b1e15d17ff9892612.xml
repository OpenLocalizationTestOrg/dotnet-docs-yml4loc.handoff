{"nodes":[{"content":"Represents an <xref href=\"System.Activities.Argument\"></xref> used as an r-value in an expression.","nodes":[{"pos":[0,98],"content":"Represents an <ph id=\"ph1\">&lt;xref href=\"System.Activities.Argument\"&gt;&lt;/xref&gt;</ph> used as an r-value in an expression.","source":"Represents an <xref href=\"System.Activities.Argument\"></xref> used as an r-value in an expression."}],"pos":[846,945],"yaml":true},{"content":"The type of the value returned by the <xref href=\"System.Activities.Expressions.ArgumentValue`1\"></xref>.","nodes":[{"pos":[0,105],"content":"The type of the value returned by the <ph id=\"ph1\">&lt;xref href=\"System.Activities.Expressions.ArgumentValue`1\"&gt;&lt;/xref&gt;</ph>.","source":"The type of the value returned by the <xref href=\"System.Activities.Expressions.ArgumentValue`1\"></xref>."}],"pos":[1118,1224],"yaml":true},{"content":"Initializes a new instance of the <xref href=\"System.Activities.Expressions.ArgumentValue`1\"></xref> class.","nodes":[{"pos":[0,107],"content":"Initializes a new instance of the <ph id=\"ph1\">&lt;xref href=\"System.Activities.Expressions.ArgumentValue`1\"&gt;&lt;/xref&gt;</ph> class.","source":"Initializes a new instance of the <xref href=\"System.Activities.Expressions.ArgumentValue`1\"></xref> class."}],"pos":[4018,4126],"yaml":true},{"content":"Initializes a new instance of the <xref href=\"System.Activities.Expressions.ArgumentValue`1\"></xref> class with the specified argument name.","nodes":[{"pos":[0,140],"content":"Initializes a new instance of the <ph id=\"ph1\">&lt;xref href=\"System.Activities.Expressions.ArgumentValue`1\"&gt;&lt;/xref&gt;</ph> class with the specified argument name.","source":"Initializes a new instance of the <xref href=\"System.Activities.Expressions.ArgumentValue`1\"></xref> class with the specified argument name."}],"pos":[5332,5473],"yaml":true},{"content":"The argument name.","nodes":[{"pos":[0,18],"content":"The argument name.","nodes":[{"content":"The argument name.","pos":[0,18]}]}],"pos":[5624,5643],"yaml":true},{"content":"Gets or sets the name of the argument whose value is to be returned.","nodes":[{"pos":[0,68],"content":"Gets or sets the name of the argument whose value is to be returned.","nodes":[{"content":"Gets or sets the name of the argument whose value is to be returned.","pos":[0,68]}]}],"pos":[6717,6786],"yaml":true},{"content":"The argument name.","nodes":[{"pos":[0,18],"content":"The argument name.","nodes":[{"content":"The argument name.","pos":[0,18]}]}],"pos":[6907,6926],"yaml":true},{"content":"Gets the location reference of the argument value.","nodes":[{"pos":[0,50],"content":"Gets the location reference of the argument value.","nodes":[{"content":"Gets the location reference of the argument value.","pos":[0,50]}]}],"pos":[9426,9477],"yaml":true},{"content":"The location reference of the argument value.","nodes":[{"pos":[0,45],"content":"The location reference of the argument value.","nodes":[{"content":"The location reference of the argument value.","pos":[0,45]}]}],"pos":[9658,9704],"yaml":true},{"content":"A <xref href=\"System.String\"></xref> representation of the <xref href=\"System.Activities.Expressions.ArgumentValue`1\"></xref>.","nodes":[{"pos":[0,126],"content":"A <ph id=\"ph1\">&lt;xref href=\"System.String\"&gt;&lt;/xref&gt;</ph> representation of the <ph id=\"ph2\">&lt;xref href=\"System.Activities.Expressions.ArgumentValue`1\"&gt;&lt;/xref&gt;</ph>.","source":"A <xref href=\"System.String\"></xref> representation of the <xref href=\"System.Activities.Expressions.ArgumentValue`1\"></xref>."}],"pos":[10770,10897],"yaml":true},{"content":"The argument name, if the <xref href=\"System.Activities.Expressions.ArgumentValue`1.ArgumentName\"></xref> has been set; otherwise the activity ID and name.","nodes":[{"pos":[0,155],"content":"The argument name, if the <ph id=\"ph1\">&lt;xref href=\"System.Activities.Expressions.ArgumentValue`1.ArgumentName\"&gt;&lt;/xref&gt;</ph> has been set; otherwise the activity ID and name.","source":"The argument name, if the <xref href=\"System.Activities.Expressions.ArgumentValue`1.ArgumentName\"></xref> has been set; otherwise the activity ID and name."}],"pos":[11032,11188],"yaml":true}],"content":"### YamlMime:ManagedReference\nitems:\n- uid: System.Activities.Expressions.ArgumentValue`1\n  commentId: T:System.Activities.Expressions.ArgumentValue`1\n  id: ArgumentValue`1\n  children:\n  - System.Activities.Expressions.ArgumentValue`1.#ctor\n  - System.Activities.Expressions.ArgumentValue`1.#ctor(System.String)\n  - System.Activities.Expressions.ArgumentValue`1.ArgumentName\n  - System.Activities.Expressions.ArgumentValue`1.CacheMetadata(System.Activities.CodeActivityMetadata)\n  - System.Activities.Expressions.ArgumentValue`1.LocationReference\n  - System.Activities.Expressions.ArgumentValue`1.ToString\n  langs:\n  - csharp\n  name: ArgumentValue<T>\n  nameWithType: ArgumentValue<T>\n  fullName: System.Activities.Expressions.ArgumentValue<T>\n  type: Class\n  assemblies:\n  - System.Activities\n  namespace: System.Activities.Expressions\n  summary: Represents an <xref href=\"System.Activities.Argument\"></xref> used as an r-value in an expression.\n  syntax:\n    content: 'public sealed class ArgumentValue<T> : System.Activities.Expressions.EnvironmentLocationValue<T>'\n    typeParameters:\n    - id: T\n      description: The type of the value returned by the <xref href=\"System.Activities.Expressions.ArgumentValue`1\"></xref>.\n  inheritance:\n  - System.Object\n  - System.Activities.Activity\n  - System.Activities.ActivityWithResult\n  - System.Activities.Activity`1\n  - System.Activities.CodeActivity`1\n  - System.Activities.Expressions.EnvironmentLocationValue`1\n  implements: []\n  inheritedMembers:\n  - System.Activities.Activity.CacheId\n  - System.Activities.Activity.Constraints\n  - System.Activities.Activity.DisplayName\n  - System.Activities.Activity.Id\n  - System.Activities.Activity.ShouldSerializeDisplayName\n  - System.Activities.Activity`1.FromValue(`0)\n  - System.Activities.Activity`1.FromVariable(System.Activities.Variable)\n  - System.Activities.Activity`1.FromVariable(System.Activities.Variable{`0})\n  - System.Activities.Activity`1.op_Implicit(System.Activities.Variable to System.Activities.Activity{TResult})\n  - System.Activities.Activity`1.op_Implicit(System.Activities.Variable{TResult} to System.Activities.Activity{TResult})\n  - System.Activities.Activity`1.op_Implicit(TResult to System.Activities.Activity{TResult})\n  - System.Activities.Activity`1.Result\n  - System.Activities.ActivityWithResult.ResultType\n  - System.Activities.CodeActivity`1.CacheMetadata(System.Activities.ActivityMetadata)\n  - System.Activities.CodeActivity`1.Implementation\n  - System.Activities.CodeActivity`1.ImplementationVersion\n  - System.Activities.CodeActivity`1.OnCreateDynamicUpdateMap(System.Activities.DynamicUpdate.UpdateMapMetadata,System.Activities.Activity)\n  - System.Activities.Expressions.EnvironmentLocationValue`1.Execute(System.Activities.CodeActivityContext)\n  - System.Object.Equals(System.Object)\n  - System.Object.Equals(System.Object,System.Object)\n  - System.Object.GetHashCode\n  - System.Object.GetType\n  - System.Object.MemberwiseClone\n  - System.Object.ReferenceEquals(System.Object,System.Object)\n  version:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Activities.Expressions/ArgumentValue`1.xml\n  ms.technology:\n  - dotnet-standard\n  author: Erikre\n  ms.author: erikre\n  manager: erikre\n- uid: System.Activities.Expressions.ArgumentValue`1.#ctor\n  commentId: M:System.Activities.Expressions.ArgumentValue`1.#ctor\n  id: '#ctor'\n  parent: System.Activities.Expressions.ArgumentValue`1\n  langs:\n  - csharp\n  name: ArgumentValue<T>()\n  nameWithType: ArgumentValue<T>.ArgumentValue<T>()\n  fullName: ArgumentValue<T>.ArgumentValue<T>()\n  type: Constructor\n  assemblies:\n  - System.Activities\n  namespace: System.Activities.Expressions\n  summary: Initializes a new instance of the <xref href=\"System.Activities.Expressions.ArgumentValue`1\"></xref> class.\n  syntax:\n    content: public ArgumentValue ();\n    parameters: []\n  overload: System.Activities.Expressions.ArgumentValue`1.#ctor*\n  exceptions: []\n  version:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Activities.Expressions/ArgumentValue`1.xml\n  ms.technology:\n  - dotnet-standard\n  author: Erikre\n  ms.author: erikre\n  manager: erikre\n- uid: System.Activities.Expressions.ArgumentValue`1.#ctor(System.String)\n  commentId: M:System.Activities.Expressions.ArgumentValue`1.#ctor(System.String)\n  id: '#ctor(System.String)'\n  parent: System.Activities.Expressions.ArgumentValue`1\n  langs:\n  - csharp\n  name: ArgumentValue<T>(String)\n  nameWithType: ArgumentValue<T>.ArgumentValue<T>(String)\n  fullName: ArgumentValue<T>.ArgumentValue<T>(String)\n  type: Constructor\n  assemblies:\n  - System.Activities\n  namespace: System.Activities.Expressions\n  summary: Initializes a new instance of the <xref href=\"System.Activities.Expressions.ArgumentValue`1\"></xref> class with the specified argument name.\n  syntax:\n    content: public ArgumentValue (string argumentName);\n    parameters:\n    - id: argumentName\n      type: System.String\n      description: The argument name.\n  overload: System.Activities.Expressions.ArgumentValue`1.#ctor*\n  exceptions: []\n  version:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Activities.Expressions/ArgumentValue`1.xml\n  ms.technology:\n  - dotnet-standard\n  author: Erikre\n  ms.author: erikre\n  manager: erikre\n- uid: System.Activities.Expressions.ArgumentValue`1.ArgumentName\n  commentId: P:System.Activities.Expressions.ArgumentValue`1.ArgumentName\n  id: ArgumentName\n  parent: System.Activities.Expressions.ArgumentValue`1\n  langs:\n  - csharp\n  name: ArgumentName\n  nameWithType: ArgumentValue<T>.ArgumentName\n  fullName: ArgumentValue<T>.ArgumentName\n  type: Property\n  assemblies:\n  - System.Activities\n  namespace: System.Activities.Expressions\n  summary: Gets or sets the name of the argument whose value is to be returned.\n  syntax:\n    content: public string ArgumentName { get; set; }\n    return:\n      type: System.String\n      description: The argument name.\n  overload: System.Activities.Expressions.ArgumentValue`1.ArgumentName*\n  exceptions: []\n  version:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Activities.Expressions/ArgumentValue`1.xml\n  ms.technology:\n  - dotnet-standard\n  author: Erikre\n  ms.author: erikre\n  manager: erikre\n- uid: System.Activities.Expressions.ArgumentValue`1.CacheMetadata(System.Activities.CodeActivityMetadata)\n  commentId: M:System.Activities.Expressions.ArgumentValue`1.CacheMetadata(System.Activities.CodeActivityMetadata)\n  id: CacheMetadata(System.Activities.CodeActivityMetadata)\n  parent: System.Activities.Expressions.ArgumentValue`1\n  langs:\n  - csharp\n  name: CacheMetadata(CodeActivityMetadata)\n  nameWithType: ArgumentValue<T>.CacheMetadata(CodeActivityMetadata)\n  fullName: ArgumentValue<T>.CacheMetadata(CodeActivityMetadata)\n  type: Method\n  assemblies:\n  - System.Activities\n  namespace: System.Activities.Expressions\n  syntax:\n    content: protected override void CacheMetadata (System.Activities.CodeActivityMetadata metadata);\n    parameters:\n    - id: metadata\n      type: System.Activities.CodeActivityMetadata\n      description: ''\n  overload: System.Activities.Expressions.ArgumentValue`1.CacheMetadata*\n  exceptions: []\n  version:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Activities.Expressions/ArgumentValue`1.xml\n- uid: System.Activities.Expressions.ArgumentValue`1.LocationReference\n  commentId: P:System.Activities.Expressions.ArgumentValue`1.LocationReference\n  id: LocationReference\n  parent: System.Activities.Expressions.ArgumentValue`1\n  langs:\n  - csharp\n  name: LocationReference\n  nameWithType: ArgumentValue<T>.LocationReference\n  fullName: ArgumentValue<T>.LocationReference\n  type: Property\n  assemblies:\n  - System.Activities\n  namespace: System.Activities.Expressions\n  summary: Gets the location reference of the argument value.\n  syntax:\n    content: public override System.Activities.LocationReference LocationReference { get; }\n    return:\n      type: System.Activities.LocationReference\n      description: The location reference of the argument value.\n  overload: System.Activities.Expressions.ArgumentValue`1.LocationReference*\n  exceptions: []\n  version:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Activities.Expressions/ArgumentValue`1.xml\n  ms.technology:\n  - dotnet-standard\n  author: Erikre\n  ms.author: erikre\n  manager: erikre\n- uid: System.Activities.Expressions.ArgumentValue`1.ToString\n  commentId: M:System.Activities.Expressions.ArgumentValue`1.ToString\n  id: ToString\n  parent: System.Activities.Expressions.ArgumentValue`1\n  langs:\n  - csharp\n  name: ToString()\n  nameWithType: ArgumentValue<T>.ToString()\n  fullName: ArgumentValue<T>.ToString()\n  type: Method\n  assemblies:\n  - System.Activities\n  namespace: System.Activities.Expressions\n  summary: A <xref href=\"System.String\"></xref> representation of the <xref href=\"System.Activities.Expressions.ArgumentValue`1\"></xref>.\n  syntax:\n    content: public override string ToString ();\n    parameters: []\n    return:\n      type: System.String\n      description: The argument name, if the <xref href=\"System.Activities.Expressions.ArgumentValue`1.ArgumentName\"></xref> has been set; otherwise the activity ID and name.\n  overload: System.Activities.Expressions.ArgumentValue`1.ToString*\n  exceptions: []\n  version:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Activities.Expressions/ArgumentValue`1.xml\n  ms.technology:\n  - dotnet-standard\n  author: Erikre\n  ms.author: erikre\n  manager: erikre\nreferences:\n- uid: System.Activities.Expressions.EnvironmentLocationValue`1\n  parent: System.Activities.Expressions\n  isExternal: false\n  name: EnvironmentLocationValue<T>\n  nameWithType: EnvironmentLocationValue<T>\n  fullName: System.Activities.Expressions.EnvironmentLocationValue<T>\n- uid: System.Activities.Expressions.ArgumentValue`1.#ctor\n  parent: System.Activities.Expressions.ArgumentValue`1\n  isExternal: false\n  name: ArgumentValue<T>()\n  nameWithType: ArgumentValue<T>.ArgumentValue<T>()\n  fullName: ArgumentValue<T>.ArgumentValue<T>()\n- uid: System.Activities.Expressions.ArgumentValue`1.#ctor(System.String)\n  parent: System.Activities.Expressions.ArgumentValue`1\n  isExternal: false\n  name: ArgumentValue<T>(String)\n  nameWithType: ArgumentValue<T>.ArgumentValue<T>(String)\n  fullName: ArgumentValue<T>.ArgumentValue<T>(String)\n- uid: System.String\n  parent: System\n  isExternal: false\n  name: String\n  nameWithType: String\n  fullName: System.String\n- uid: System.Activities.Expressions.ArgumentValue`1.ArgumentName\n  parent: System.Activities.Expressions.ArgumentValue`1\n  isExternal: false\n  name: ArgumentName\n  nameWithType: ArgumentValue<T>.ArgumentName\n  fullName: ArgumentValue<T>.ArgumentName\n- uid: System.Activities.Expressions.ArgumentValue`1.CacheMetadata(System.Activities.CodeActivityMetadata)\n  parent: System.Activities.Expressions.ArgumentValue`1\n  isExternal: false\n  name: CacheMetadata(CodeActivityMetadata)\n  nameWithType: ArgumentValue<T>.CacheMetadata(CodeActivityMetadata)\n  fullName: ArgumentValue<T>.CacheMetadata(CodeActivityMetadata)\n- uid: System.Activities.CodeActivityMetadata\n  parent: System.Activities\n  isExternal: false\n  name: CodeActivityMetadata\n  nameWithType: CodeActivityMetadata\n  fullName: System.Activities.CodeActivityMetadata\n- uid: System.Activities.Expressions.ArgumentValue`1.LocationReference\n  parent: System.Activities.Expressions.ArgumentValue`1\n  isExternal: false\n  name: LocationReference\n  nameWithType: ArgumentValue<T>.LocationReference\n  fullName: ArgumentValue<T>.LocationReference\n- uid: System.Activities.LocationReference\n  parent: System.Activities\n  isExternal: false\n  name: LocationReference\n  nameWithType: LocationReference\n  fullName: System.Activities.LocationReference\n- uid: System.Activities.Expressions.ArgumentValue`1.ToString\n  parent: System.Activities.Expressions.ArgumentValue`1\n  isExternal: false\n  name: ToString()\n  nameWithType: ArgumentValue<T>.ToString()\n  fullName: ArgumentValue<T>.ToString()\n- uid: System.Activities.Expressions.ArgumentValue`1.#ctor*\n  parent: System.Activities.Expressions.ArgumentValue`1\n  isExternal: false\n  name: ArgumentValue<T>\n  nameWithType: ArgumentValue<T>.ArgumentValue<T>\n  fullName: ArgumentValue<T>.ArgumentValue<T>\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Activities.Expressions/ArgumentValue`1.xml\n- uid: System.Activities.Expressions.ArgumentValue`1.ArgumentName*\n  parent: System.Activities.Expressions.ArgumentValue`1\n  isExternal: false\n  name: ArgumentName\n  nameWithType: ArgumentValue<T>.ArgumentName\n  fullName: ArgumentValue<T>.ArgumentName\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Activities.Expressions/ArgumentValue`1.xml\n- uid: System.Activities.Expressions.ArgumentValue`1.CacheMetadata*\n  parent: System.Activities.Expressions.ArgumentValue`1\n  isExternal: false\n  name: CacheMetadata\n  nameWithType: ArgumentValue<T>.CacheMetadata\n  fullName: ArgumentValue<T>.CacheMetadata\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Activities.Expressions/ArgumentValue`1.xml\n- uid: System.Activities.Expressions.ArgumentValue`1.LocationReference*\n  parent: System.Activities.Expressions.ArgumentValue`1\n  isExternal: false\n  name: LocationReference\n  nameWithType: ArgumentValue<T>.LocationReference\n  fullName: ArgumentValue<T>.LocationReference\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Activities.Expressions/ArgumentValue`1.xml\n- uid: System.Activities.Expressions.ArgumentValue`1.ToString*\n  parent: System.Activities.Expressions.ArgumentValue`1\n  isExternal: false\n  name: ToString\n  nameWithType: ArgumentValue<T>.ToString\n  fullName: ArgumentValue<T>.ToString\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Activities.Expressions/ArgumentValue`1.xml\n- uid: System.Object.Equals(System.Object)\n  parent: System.Object\n  isExternal: false\n  name: Equals(Object)\n  nameWithType: Object.Equals(Object)\n  fullName: Object.Equals(Object)\n- uid: System.Object.Equals(System.Object,System.Object)\n  parent: System.Object\n  isExternal: false\n  name: Equals(Object, Object)\n  nameWithType: Object.Equals(Object, Object)\n  fullName: Object.Equals(Object, Object)\n- uid: System.Object.GetHashCode\n  parent: System.Object\n  isExternal: false\n  name: GetHashCode()\n  nameWithType: Object.GetHashCode()\n  fullName: Object.GetHashCode()\n- uid: System.Object.GetType\n  parent: System.Object\n  isExternal: false\n  name: GetType()\n  nameWithType: Object.GetType()\n  fullName: Object.GetType()\n- uid: System.Object.MemberwiseClone\n  parent: System.Object\n  isExternal: false\n  name: MemberwiseClone()\n  nameWithType: Object.MemberwiseClone()\n  fullName: Object.MemberwiseClone()\n- uid: System.Object.ReferenceEquals(System.Object,System.Object)\n  parent: System.Object\n  isExternal: false\n  name: ReferenceEquals(Object, Object)\n  nameWithType: Object.ReferenceEquals(Object, Object)\n  fullName: Object.ReferenceEquals(Object, Object)\n- uid: System.Activities.Activity.CacheId\n  parent: System.Activities.Activity\n  isExternal: false\n  name: CacheId\n  nameWithType: Activity.CacheId\n  fullName: Activity.CacheId\n- uid: System.Activities.CodeActivity`1.CacheMetadata(System.Activities.ActivityMetadata)\n  parent: System.Activities.CodeActivity`1\n  isExternal: false\n  name: CacheMetadata(ActivityMetadata)\n  nameWithType: CodeActivity<TResult>.CacheMetadata(ActivityMetadata)\n  fullName: CodeActivity<TResult>.CacheMetadata(ActivityMetadata)\n- uid: System.Activities.Activity.Constraints\n  parent: System.Activities.Activity\n  isExternal: false\n  name: Constraints\n  nameWithType: Activity.Constraints\n  fullName: Activity.Constraints\n- uid: System.Activities.Activity.DisplayName\n  parent: System.Activities.Activity\n  isExternal: false\n  name: DisplayName\n  nameWithType: Activity.DisplayName\n  fullName: Activity.DisplayName\n- uid: System.Activities.Activity.Id\n  parent: System.Activities.Activity\n  isExternal: false\n  name: Id\n  nameWithType: Activity.Id\n  fullName: Activity.Id\n- uid: System.Activities.CodeActivity`1.Implementation\n  parent: System.Activities.CodeActivity`1\n  isExternal: false\n  name: Implementation\n  nameWithType: CodeActivity<TResult>.Implementation\n  fullName: CodeActivity<TResult>.Implementation\n- uid: System.Activities.CodeActivity`1.ImplementationVersion\n  parent: System.Activities.CodeActivity`1\n  isExternal: false\n  name: ImplementationVersion\n  nameWithType: CodeActivity<TResult>.ImplementationVersion\n  fullName: CodeActivity<TResult>.ImplementationVersion\n- uid: System.Activities.CodeActivity`1.OnCreateDynamicUpdateMap(System.Activities.DynamicUpdate.UpdateMapMetadata,System.Activities.Activity)\n  parent: System.Activities.CodeActivity`1\n  isExternal: false\n  name: OnCreateDynamicUpdateMap(UpdateMapMetadata, Activity)\n  nameWithType: CodeActivity<TResult>.OnCreateDynamicUpdateMap(UpdateMapMetadata, Activity)\n  fullName: CodeActivity<TResult>.OnCreateDynamicUpdateMap(UpdateMapMetadata, Activity)\n- uid: System.Activities.Activity.ShouldSerializeDisplayName\n  parent: System.Activities.Activity\n  isExternal: false\n  name: ShouldSerializeDisplayName()\n  nameWithType: Activity.ShouldSerializeDisplayName()\n  fullName: Activity.ShouldSerializeDisplayName()\n- uid: System.Activities.Activity`1.Result\n  parent: System.Activities.Activity`1\n  isExternal: false\n  name: Result\n  nameWithType: Activity<TResult>.Result\n  fullName: Activity<TResult>.Result\n- uid: System.Activities.ActivityWithResult.ResultType\n  parent: System.Activities.ActivityWithResult\n  isExternal: false\n  name: ResultType\n  nameWithType: ActivityWithResult.ResultType\n  fullName: ActivityWithResult.ResultType\n- uid: System.Activities.Activity`1.FromValue(`0)\n  parent: System.Activities.Activity`1\n  isExternal: false\n  name: FromValue(TResult)\n  nameWithType: Activity<TResult>.FromValue(TResult)\n  fullName: Activity<TResult>.FromValue(TResult)\n- uid: System.Activities.Activity`1.FromVariable(System.Activities.Variable)\n  parent: System.Activities.Activity`1\n  isExternal: false\n  name: FromVariable(Variable)\n  nameWithType: Activity<TResult>.FromVariable(Variable)\n  fullName: Activity<TResult>.FromVariable(Variable)\n- uid: System.Activities.Activity`1.FromVariable(System.Activities.Variable{`0})\n  parent: System.Activities.Activity`1\n  isExternal: false\n  name: FromVariable(Variable<TResult>)\n  nameWithType: Activity<TResult>.FromVariable(Variable<TResult>)\n  fullName: Activity<TResult>.FromVariable(Variable<TResult>)\n- uid: System.Activities.Activity`1.op_Implicit(System.Activities.Variable to System.Activities.Activity{TResult})\n  parent: System.Activities.Activity`1\n  isExternal: false\n  name: op_Implicit(Variable to Activity<TResult>)\n  nameWithType: Activity<TResult>.op_Implicit(Variable to Activity<TResult>)\n  fullName: Activity<TResult>.op_Implicit(Variable to Activity<TResult>)\n- uid: System.Activities.Activity`1.op_Implicit(System.Activities.Variable{TResult} to System.Activities.Activity{TResult})\n  parent: System.Activities.Activity`1\n  isExternal: false\n  name: op_Implicit(Variable<TResult> to Activity<TResult>)\n  nameWithType: Activity<TResult>.op_Implicit(Variable<TResult> to Activity<TResult>)\n  fullName: Activity<TResult>.op_Implicit(Variable<TResult> to Activity<TResult>)\n- uid: System.Activities.Activity`1.op_Implicit(TResult to System.Activities.Activity{TResult})\n  parent: System.Activities.Activity`1\n  isExternal: false\n  name: op_Implicit(TResult to Activity<TResult>)\n  nameWithType: Activity<TResult>.op_Implicit(TResult to Activity<TResult>)\n  fullName: Activity<TResult>.op_Implicit(TResult to Activity<TResult>)\n- uid: System.Activities.Expressions.EnvironmentLocationValue`1.Execute(System.Activities.CodeActivityContext)\n  parent: System.Activities.Expressions.EnvironmentLocationValue`1\n  isExternal: false\n  name: Execute(CodeActivityContext)\n  nameWithType: EnvironmentLocationValue<T>.Execute(CodeActivityContext)\n  fullName: EnvironmentLocationValue<T>.Execute(CodeActivityContext)\n"}