{"nodes":[{"content":"Throws <xref href=\"System.Text.DecoderFallbackException\"></xref> when an encoded input byte sequence cannot be converted to a decoded output character. This class cannot be inherited.","nodes":[{"pos":[0,183],"content":"Throws <xref href=\"System.Text.DecoderFallbackException\"></xref> when an encoded input byte sequence cannot be converted to a decoded output character. This class cannot be inherited.","nodes":[{"content":"Throws <ph id=\"ph1\">&lt;xref href=\"System.Text.DecoderFallbackException\"&gt;&lt;/xref&gt;</ph> when an encoded input byte sequence cannot be converted to a decoded output character.","pos":[0,151],"source":"Throws <xref href=\"System.Text.DecoderFallbackException\"></xref> when an encoded input byte sequence cannot be converted to a decoded output character."},{"content":"This class cannot be inherited.","pos":[152,183]}]}],"pos":[779,963],"yaml":true},{"content":"A common reason for an encoding or decoding operation to fail is if the underlying encoding class does not provide a mapping between a character and an equivalent byte sequence. If the input byte sequence cannot be converted to an output character, the decoding operation calls the <xref:System.Text.DecoderExceptionFallbackBuffer.Fallback%2A> method, which throws <xref:System.Text.DecoderFallbackException>.  \n  \n The <xref:System.Text.DecoderFallbackBuffer?displayProperty=fullName> class, which represents a data buffer used in a decoding operation, is the base class for the <xref:System.Text.DecoderExceptionFallbackBuffer> class. However, instead of a data buffer, the <xref:System.Text.DecoderExceptionFallbackBuffer> class represents a standard behavior in which an exception is thrown if a decoding operation fails. No actual data buffer exists, and the members designed to manipulate such a buffer do no significant work.","nodes":[{"pos":[0,409],"content":"A common reason for an encoding or decoding operation to fail is if the underlying encoding class does not provide a mapping between a character and an equivalent byte sequence. If the input byte sequence cannot be converted to an output character, the decoding operation calls the <xref:System.Text.DecoderExceptionFallbackBuffer.Fallback%2A> method, which throws <xref:System.Text.DecoderFallbackException>.","nodes":[{"content":"A common reason for an encoding or decoding operation to fail is if the underlying encoding class does not provide a mapping between a character and an equivalent byte sequence. If the input byte sequence cannot be converted to an output character, the decoding operation calls the <xref:System.Text.DecoderExceptionFallbackBuffer.Fallback%2A> method, which throws <xref:System.Text.DecoderFallbackException>.","pos":[0,409],"nodes":[{"content":"A common reason for an encoding or decoding operation to fail is if the underlying encoding class does not provide a mapping between a character and an equivalent byte sequence.","pos":[0,177]},{"content":"If the input byte sequence cannot be converted to an output character, the decoding operation calls the <ph id=\"ph1\">&lt;xref:System.Text.DecoderExceptionFallbackBuffer.Fallback%2A&gt;</ph> method, which throws <ph id=\"ph2\">&lt;xref:System.Text.DecoderFallbackException&gt;</ph>.","pos":[178,409],"source":" If the input byte sequence cannot be converted to an output character, the decoding operation calls the <xref:System.Text.DecoderExceptionFallbackBuffer.Fallback%2A> method, which throws <xref:System.Text.DecoderFallbackException>."}]}]},{"pos":[416,932],"content":"The <xref:System.Text.DecoderFallbackBuffer?displayProperty=fullName> class, which represents a data buffer used in a decoding operation, is the base class for the <xref:System.Text.DecoderExceptionFallbackBuffer> class. However, instead of a data buffer, the <xref:System.Text.DecoderExceptionFallbackBuffer> class represents a standard behavior in which an exception is thrown if a decoding operation fails. No actual data buffer exists, and the members designed to manipulate such a buffer do no significant work.","nodes":[{"content":"The <xref:System.Text.DecoderFallbackBuffer?displayProperty=fullName> class, which represents a data buffer used in a decoding operation, is the base class for the <xref:System.Text.DecoderExceptionFallbackBuffer> class. However, instead of a data buffer, the <xref:System.Text.DecoderExceptionFallbackBuffer> class represents a standard behavior in which an exception is thrown if a decoding operation fails. No actual data buffer exists, and the members designed to manipulate such a buffer do no significant work.","pos":[0,516],"nodes":[{"content":"The <ph id=\"ph1\">&lt;xref:System.Text.DecoderFallbackBuffer?displayProperty=fullName&gt;</ph> class, which represents a data buffer used in a decoding operation, is the base class for the <ph id=\"ph2\">&lt;xref:System.Text.DecoderExceptionFallbackBuffer&gt;</ph> class.","pos":[0,220],"source":"The <xref:System.Text.DecoderFallbackBuffer?displayProperty=fullName> class, which represents a data buffer used in a decoding operation, is the base class for the <xref:System.Text.DecoderExceptionFallbackBuffer> class."},{"content":"However, instead of a data buffer, the <ph id=\"ph1\">&lt;xref:System.Text.DecoderExceptionFallbackBuffer&gt;</ph> class represents a standard behavior in which an exception is thrown if a decoding operation fails.","pos":[221,409],"source":" However, instead of a data buffer, the <xref:System.Text.DecoderExceptionFallbackBuffer> class represents a standard behavior in which an exception is thrown if a decoding operation fails."},{"content":"No actual data buffer exists, and the members designed to manipulate such a buffer do no significant work.","pos":[410,516]}]}]}],"pos":[974,1911],"yaml":true,"extradata":"MT"},{"content":"Initializes a new instance of the <xref href=\"System.Text.DecoderExceptionFallbackBuffer\"></xref> class.","nodes":[{"pos":[0,104],"content":"Initializes a new instance of the <ph id=\"ph1\">&lt;xref href=\"System.Text.DecoderExceptionFallbackBuffer\"&gt;&lt;/xref&gt;</ph> class.","source":"Initializes a new instance of the <xref href=\"System.Text.DecoderExceptionFallbackBuffer\"></xref> class."}],"pos":[3710,3815],"yaml":true},{"content":"Throws <xref href=\"System.Text.DecoderFallbackException\"></xref> when the input byte sequence cannot be decoded. The nominal return value is not used.","nodes":[{"pos":[0,150],"content":"Throws <xref href=\"System.Text.DecoderFallbackException\"></xref> when the input byte sequence cannot be decoded. The nominal return value is not used.","nodes":[{"content":"Throws <ph id=\"ph1\">&lt;xref href=\"System.Text.DecoderFallbackException\"&gt;&lt;/xref&gt;</ph> when the input byte sequence cannot be decoded.","pos":[0,112],"source":"Throws <xref href=\"System.Text.DecoderFallbackException\"></xref> when the input byte sequence cannot be decoded."},{"content":"The nominal return value is not used.","pos":[113,150]}]}],"pos":[5298,5449],"yaml":true},{"content":"The <xref:System.Text.Encoding.GetBytes%2A> and <xref:System.Text.Decoder.Convert%2A> methods call <xref:System.Text.DecoderExceptionFallbackBuffer.Fallback%2A> if they encounter an unknown byte in their input. In response, the <xref:System.Text.DecoderExceptionFallbackBuffer.Fallback%2A> method always throws <xref:System.Text.DecoderFallbackException> and displays the input data. The <xref:System.Text.DecoderExceptionFallbackBuffer.Fallback%2A> method nominally indicates whether an exception is thrown if an input byte sequence cannot be decoded.","nodes":[{"pos":[0,552],"content":"The <xref:System.Text.Encoding.GetBytes%2A> and <xref:System.Text.Decoder.Convert%2A> methods call <xref:System.Text.DecoderExceptionFallbackBuffer.Fallback%2A> if they encounter an unknown byte in their input. In response, the <xref:System.Text.DecoderExceptionFallbackBuffer.Fallback%2A> method always throws <xref:System.Text.DecoderFallbackException> and displays the input data. The <xref:System.Text.DecoderExceptionFallbackBuffer.Fallback%2A> method nominally indicates whether an exception is thrown if an input byte sequence cannot be decoded.","nodes":[{"content":"The <xref:System.Text.Encoding.GetBytes%2A> and <xref:System.Text.Decoder.Convert%2A> methods call <xref:System.Text.DecoderExceptionFallbackBuffer.Fallback%2A> if they encounter an unknown byte in their input. In response, the <xref:System.Text.DecoderExceptionFallbackBuffer.Fallback%2A> method always throws <xref:System.Text.DecoderFallbackException> and displays the input data. The <xref:System.Text.DecoderExceptionFallbackBuffer.Fallback%2A> method nominally indicates whether an exception is thrown if an input byte sequence cannot be decoded.","pos":[0,552],"nodes":[{"content":"The <ph id=\"ph1\">&lt;xref:System.Text.Encoding.GetBytes%2A&gt;</ph> and <ph id=\"ph2\">&lt;xref:System.Text.Decoder.Convert%2A&gt;</ph> methods call <ph id=\"ph3\">&lt;xref:System.Text.DecoderExceptionFallbackBuffer.Fallback%2A&gt;</ph> if they encounter an unknown byte in their input.","pos":[0,210],"source":"The <xref:System.Text.Encoding.GetBytes%2A> and <xref:System.Text.Decoder.Convert%2A> methods call <xref:System.Text.DecoderExceptionFallbackBuffer.Fallback%2A> if they encounter an unknown byte in their input."},{"content":"In response, the <ph id=\"ph1\">&lt;xref:System.Text.DecoderExceptionFallbackBuffer.Fallback%2A&gt;</ph> method always throws <ph id=\"ph2\">&lt;xref:System.Text.DecoderFallbackException&gt;</ph> and displays the input data.","pos":[211,383],"source":" In response, the <xref:System.Text.DecoderExceptionFallbackBuffer.Fallback%2A> method always throws <xref:System.Text.DecoderFallbackException> and displays the input data."},{"content":"The <ph id=\"ph1\">&lt;xref:System.Text.DecoderExceptionFallbackBuffer.Fallback%2A&gt;</ph> method nominally indicates whether an exception is thrown if an input byte sequence cannot be decoded.","pos":[384,552],"source":" The <xref:System.Text.DecoderExceptionFallbackBuffer.Fallback%2A> method nominally indicates whether an exception is thrown if an input byte sequence cannot be decoded."}]}]}],"pos":[5460,6013],"yaml":true,"extradata":"MT"},{"content":"An input array of bytes.","nodes":[{"pos":[0,24],"content":"An input array of bytes.","nodes":[{"content":"An input array of bytes.","pos":[0,24]}]}],"pos":[6184,6209],"yaml":true},{"content":"The index position of a byte in the input.","nodes":[{"pos":[0,42],"content":"The index position of a byte in the input.","nodes":[{"content":"The index position of a byte in the input.","pos":[0,42]}]}],"pos":[6269,6312],"yaml":true},{"content":"None. No value is returned because the <xref href=\"System.Text.DecoderExceptionFallbackBuffer.Fallback(System.Byte[],System.Int32)\"></xref> method always throws an exception.  \n  \n The nominal return value is `true`. A return value is defined, although it is unchanging, because this method implements an abstract method.","nodes":[{"pos":[0,174],"content":"None. No value is returned because the <xref href=\"System.Text.DecoderExceptionFallbackBuffer.Fallback(System.Byte[],System.Int32)\"></xref> method always throws an exception.","nodes":[{"content":"None.","pos":[0,5]},{"content":"No value is returned because the <ph id=\"ph1\">&lt;xref href=\"System.Text.DecoderExceptionFallbackBuffer.Fallback(System.Byte[],System.Int32)\"&gt;&lt;/xref&gt;</ph> method always throws an exception.","pos":[6,174],"source":" No value is returned because the <xref href=\"System.Text.DecoderExceptionFallbackBuffer.Fallback(System.Byte[],System.Int32)\"></xref> method always throws an exception."}]},{"pos":[181,321],"content":"The nominal return value is `true`. A return value is defined, although it is unchanging, because this method implements an abstract method.","nodes":[{"content":"The nominal return value is <ph id=\"ph1\">`true`</ph>.","pos":[0,35],"source":"The nominal return value is `true`."},{"content":"A return value is defined, although it is unchanging, because this method implements an abstract method.","pos":[36,140]}]}],"pos":[6370,6698],"yaml":true},{"content":"This method always throws an exception that reports the value and index position of the input byte that cannot be decoded.","nodes":[{"pos":[0,122],"content":"This method always throws an exception that reports the value and index position of the input byte that cannot be decoded.","nodes":[{"content":"This method always throws an exception that reports the value and index position of the input byte that cannot be decoded.","pos":[0,122]}]}],"pos":[6895,7018],"yaml":true},{"content":"Retrieves the next character in the exception data buffer.","nodes":[{"pos":[0,58],"content":"Retrieves the next character in the exception data buffer.","nodes":[{"content":"Retrieves the next character in the exception data buffer.","pos":[0,58]}]}],"pos":[8233,8292],"yaml":true},{"content":"Because <xref:System.Text.DecoderExceptionFallbackBuffer> has no actual exception data buffer, the <xref:System.Text.DecoderExceptionFallbackBuffer.GetNextChar%2A> method always returns the Unicode NULL character.","nodes":[{"pos":[0,213],"content":"Because <xref:System.Text.DecoderExceptionFallbackBuffer> has no actual exception data buffer, the <xref:System.Text.DecoderExceptionFallbackBuffer.GetNextChar%2A> method always returns the Unicode NULL character.","nodes":[{"content":"Because <ph id=\"ph1\">&lt;xref:System.Text.DecoderExceptionFallbackBuffer&gt;</ph> has no actual exception data buffer, the <ph id=\"ph2\">&lt;xref:System.Text.DecoderExceptionFallbackBuffer.GetNextChar%2A&gt;</ph> method always returns the Unicode NULL character.","pos":[0,213],"source":"Because <xref:System.Text.DecoderExceptionFallbackBuffer> has no actual exception data buffer, the <xref:System.Text.DecoderExceptionFallbackBuffer.GetNextChar%2A> method always returns the Unicode NULL character."}]}],"pos":[8303,8517],"yaml":true,"extradata":"MT"},{"content":"The return value is always the Unicode character NULL (U+0000).  \n  \n A return value is defined, although it is unchanging, because this method implements an abstract method.","nodes":[{"pos":[0,63],"content":"The return value is always the Unicode character NULL (U+0000).","nodes":[{"content":"The return value is always the Unicode character NULL (U+0000).","pos":[0,63]}]},{"pos":[70,174],"content":"A return value is defined, although it is unchanging, because this method implements an abstract method.","nodes":[{"content":"A return value is defined, although it is unchanging, because this method implements an abstract method.","pos":[0,104]}]}],"pos":[8651,8830],"yaml":true},{"content":"Causes the next call to <xref href=\"System.Text.DecoderExceptionFallbackBuffer.GetNextChar\"></xref> to access the exception data buffer character position that is prior to the current position.","nodes":[{"pos":[0,193],"content":"Causes the next call to <ph id=\"ph1\">&lt;xref href=\"System.Text.DecoderExceptionFallbackBuffer.GetNextChar\"&gt;&lt;/xref&gt;</ph> to access the exception data buffer character position that is prior to the current position.","source":"Causes the next call to <xref href=\"System.Text.DecoderExceptionFallbackBuffer.GetNextChar\"></xref> to access the exception data buffer character position that is prior to the current position."}],"pos":[10136,10330],"yaml":true},{"content":"Because <xref:System.Text.DecoderExceptionFallbackBuffer> has no actual exception data buffer, the <xref:System.Text.DecoderExceptionFallbackBuffer.MovePrevious%2A> method always returns `false`.","nodes":[{"pos":[0,195],"content":"Because <ph id=\"ph1\">&lt;xref:System.Text.DecoderExceptionFallbackBuffer&gt;</ph> has no actual exception data buffer, the <ph id=\"ph2\">&lt;xref:System.Text.DecoderExceptionFallbackBuffer.MovePrevious%2A&gt;</ph> method always returns <ph id=\"ph3\">`false`</ph>.","source":"Because <xref:System.Text.DecoderExceptionFallbackBuffer> has no actual exception data buffer, the <xref:System.Text.DecoderExceptionFallbackBuffer.MovePrevious%2A> method always returns `false`."}],"pos":[10341,10537],"yaml":true,"extradata":"MT"},{"content":"The return value is always `false`.  \n  \n A return value is defined, although it is unchanging, because this method implements an abstract method.","nodes":[{"pos":[0,35],"content":"The return value is always <ph id=\"ph1\">`false`</ph>.","source":"The return value is always `false`."},{"pos":[42,146],"content":"A return value is defined, although it is unchanging, because this method implements an abstract method.","nodes":[{"content":"A return value is defined, although it is unchanging, because this method implements an abstract method.","pos":[0,104]}]}],"pos":[10675,10826],"yaml":true},{"content":"Gets the number of characters in the current <xref href=\"System.Text.DecoderExceptionFallbackBuffer\"></xref> object that remain to be processed.","nodes":[{"pos":[0,144],"content":"Gets the number of characters in the current <ph id=\"ph1\">&lt;xref href=\"System.Text.DecoderExceptionFallbackBuffer\"&gt;&lt;/xref&gt;</ph> object that remain to be processed.","source":"Gets the number of characters in the current <xref href=\"System.Text.DecoderExceptionFallbackBuffer\"></xref> object that remain to be processed."}],"pos":[12111,12256],"yaml":true},{"content":"Because <xref:System.Text.DecoderExceptionFallbackBuffer> has no actual exception data buffer, the <xref:System.Text.DecoderExceptionFallbackBuffer.Remaining%2A> property always returns zero.","nodes":[{"pos":[0,191],"content":"Because <xref:System.Text.DecoderExceptionFallbackBuffer> has no actual exception data buffer, the <xref:System.Text.DecoderExceptionFallbackBuffer.Remaining%2A> property always returns zero.","nodes":[{"content":"Because <ph id=\"ph1\">&lt;xref:System.Text.DecoderExceptionFallbackBuffer&gt;</ph> has no actual exception data buffer, the <ph id=\"ph2\">&lt;xref:System.Text.DecoderExceptionFallbackBuffer.Remaining%2A&gt;</ph> property always returns zero.","pos":[0,191],"source":"Because <xref:System.Text.DecoderExceptionFallbackBuffer> has no actual exception data buffer, the <xref:System.Text.DecoderExceptionFallbackBuffer.Remaining%2A> property always returns zero."}]}],"pos":[12267,12459],"yaml":true,"extradata":"MT"},{"content":"The return value is always zero.  \n  \n A return value is defined, although it is unchanging, because this method implements an abstract method.","nodes":[{"pos":[0,32],"content":"The return value is always zero.","nodes":[{"content":"The return value is always zero.","pos":[0,32]}]},{"pos":[39,143],"content":"A return value is defined, although it is unchanging, because this method implements an abstract method.","nodes":[{"content":"A return value is defined, although it is unchanging, because this method implements an abstract method.","pos":[0,104]}]}],"pos":[12577,12725],"yaml":true}],"content":"### YamlMime:ManagedReference\nitems:\n- uid: System.Text.DecoderExceptionFallbackBuffer\n  commentId: T:System.Text.DecoderExceptionFallbackBuffer\n  id: DecoderExceptionFallbackBuffer\n  children:\n  - System.Text.DecoderExceptionFallbackBuffer.#ctor\n  - System.Text.DecoderExceptionFallbackBuffer.Fallback(System.Byte[],System.Int32)\n  - System.Text.DecoderExceptionFallbackBuffer.GetNextChar\n  - System.Text.DecoderExceptionFallbackBuffer.MovePrevious\n  - System.Text.DecoderExceptionFallbackBuffer.Remaining\n  langs:\n  - csharp\n  name: DecoderExceptionFallbackBuffer\n  nameWithType: DecoderExceptionFallbackBuffer\n  fullName: System.Text.DecoderExceptionFallbackBuffer\n  type: Class\n  assemblies:\n  - mscorlib\n  - netstandard\n  - System.Runtime\n  namespace: System.Text\n  summary: Throws <xref href=\"System.Text.DecoderFallbackException\"></xref> when an encoded input byte sequence cannot be converted to a decoded output character. This class cannot be inherited.\n  remarks: \"A common reason for an encoding or decoding operation to fail is if the underlying encoding class does not provide a mapping between a character and an equivalent byte sequence. If the input byte sequence cannot be converted to an output character, the decoding operation calls the <xref:System.Text.DecoderExceptionFallbackBuffer.Fallback%2A> method, which throws <xref:System.Text.DecoderFallbackException>.  \\n  \\n The <xref:System.Text.DecoderFallbackBuffer?displayProperty=fullName> class, which represents a data buffer used in a decoding operation, is the base class for the <xref:System.Text.DecoderExceptionFallbackBuffer> class. However, instead of a data buffer, the <xref:System.Text.DecoderExceptionFallbackBuffer> class represents a standard behavior in which an exception is thrown if a decoding operation fails. No actual data buffer exists, and the members designed to manipulate such a buffer do no significant work.\"\n  syntax:\n    content: 'public sealed class DecoderExceptionFallbackBuffer : System.Text.DecoderFallbackBuffer'\n  inheritance:\n  - System.Object\n  - System.Text.DecoderFallbackBuffer\n  implements: []\n  inheritedMembers:\n  - System.Object.Equals(System.Object)\n  - System.Object.Equals(System.Object,System.Object)\n  - System.Object.GetHashCode\n  - System.Object.GetType\n  - System.Object.MemberwiseClone\n  - System.Object.ReferenceEquals(System.Object,System.Object)\n  - System.Object.ToString\n  - System.Text.DecoderFallbackBuffer.Reset\n  version:\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - netstandard-2.0\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  monikers:\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - netstandard-2.0\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Text/DecoderExceptionFallbackBuffer.xml\n  ms.technology:\n  - dotnet-standard\n  author: rpetrusha\n  ms.author: ronpet\n  manager: wpickett\n- uid: System.Text.DecoderExceptionFallbackBuffer.#ctor\n  commentId: M:System.Text.DecoderExceptionFallbackBuffer.#ctor\n  id: '#ctor'\n  parent: System.Text.DecoderExceptionFallbackBuffer\n  langs:\n  - csharp\n  name: DecoderExceptionFallbackBuffer()\n  nameWithType: DecoderExceptionFallbackBuffer.DecoderExceptionFallbackBuffer()\n  fullName: DecoderExceptionFallbackBuffer.DecoderExceptionFallbackBuffer()\n  type: Constructor\n  assemblies:\n  - mscorlib\n  - netstandard\n  - System.Runtime\n  namespace: System.Text\n  summary: Initializes a new instance of the <xref href=\"System.Text.DecoderExceptionFallbackBuffer\"></xref> class.\n  syntax:\n    content: public DecoderExceptionFallbackBuffer ();\n    parameters: []\n  overload: System.Text.DecoderExceptionFallbackBuffer.#ctor*\n  exceptions: []\n  version:\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - netstandard-2.0\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  monikers:\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - netstandard-2.0\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Text/DecoderExceptionFallbackBuffer.xml\n  ms.technology:\n  - dotnet-standard\n  author: rpetrusha\n  ms.author: ronpet\n  manager: wpickett\n- uid: System.Text.DecoderExceptionFallbackBuffer.Fallback(System.Byte[],System.Int32)\n  commentId: M:System.Text.DecoderExceptionFallbackBuffer.Fallback(System.Byte[],System.Int32)\n  id: Fallback(System.Byte[],System.Int32)\n  parent: System.Text.DecoderExceptionFallbackBuffer\n  langs:\n  - csharp\n  name: Fallback(Byte[], Int32)\n  nameWithType: DecoderExceptionFallbackBuffer.Fallback(Byte[], Int32)\n  fullName: DecoderExceptionFallbackBuffer.Fallback(Byte[], Int32)\n  type: Method\n  assemblies:\n  - mscorlib\n  - netstandard\n  - System.Runtime\n  namespace: System.Text\n  summary: Throws <xref href=\"System.Text.DecoderFallbackException\"></xref> when the input byte sequence cannot be decoded. The nominal return value is not used.\n  remarks: The <xref:System.Text.Encoding.GetBytes%2A> and <xref:System.Text.Decoder.Convert%2A> methods call <xref:System.Text.DecoderExceptionFallbackBuffer.Fallback%2A> if they encounter an unknown byte in their input. In response, the <xref:System.Text.DecoderExceptionFallbackBuffer.Fallback%2A> method always throws <xref:System.Text.DecoderFallbackException> and displays the input data. The <xref:System.Text.DecoderExceptionFallbackBuffer.Fallback%2A> method nominally indicates whether an exception is thrown if an input byte sequence cannot be decoded.\n  syntax:\n    content: public override bool Fallback (byte[] bytesUnknown, int index);\n    parameters:\n    - id: bytesUnknown\n      type: System.Byte[]\n      description: An input array of bytes.\n    - id: index\n      type: System.Int32\n      description: The index position of a byte in the input.\n    return:\n      type: System.Boolean\n      description: \"None. No value is returned because the <xref href=\\\"System.Text.DecoderExceptionFallbackBuffer.Fallback(System.Byte[],System.Int32)\\\"></xref> method always throws an exception.  \\n  \\n The nominal return value is `true`. A return value is defined, although it is unchanging, because this method implements an abstract method.\"\n  overload: System.Text.DecoderExceptionFallbackBuffer.Fallback*\n  exceptions:\n  - type: System.Text.DecoderFallbackException\n    commentId: T:System.Text.DecoderFallbackException\n    description: This method always throws an exception that reports the value and index position of the input byte that cannot be decoded.\n  version:\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - netstandard-2.0\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  monikers:\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - netstandard-2.0\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Text/DecoderExceptionFallbackBuffer.xml\n  ms.technology:\n  - dotnet-standard\n  author: rpetrusha\n  ms.author: ronpet\n  manager: wpickett\n- uid: System.Text.DecoderExceptionFallbackBuffer.GetNextChar\n  commentId: M:System.Text.DecoderExceptionFallbackBuffer.GetNextChar\n  id: GetNextChar\n  parent: System.Text.DecoderExceptionFallbackBuffer\n  langs:\n  - csharp\n  name: GetNextChar()\n  nameWithType: DecoderExceptionFallbackBuffer.GetNextChar()\n  fullName: DecoderExceptionFallbackBuffer.GetNextChar()\n  type: Method\n  assemblies:\n  - mscorlib\n  - netstandard\n  - System.Runtime\n  namespace: System.Text\n  summary: Retrieves the next character in the exception data buffer.\n  remarks: Because <xref:System.Text.DecoderExceptionFallbackBuffer> has no actual exception data buffer, the <xref:System.Text.DecoderExceptionFallbackBuffer.GetNextChar%2A> method always returns the Unicode NULL character.\n  syntax:\n    content: public override char GetNextChar ();\n    parameters: []\n    return:\n      type: System.Char\n      description: \"The return value is always the Unicode character NULL (U+0000).  \\n  \\n A return value is defined, although it is unchanging, because this method implements an abstract method.\"\n  overload: System.Text.DecoderExceptionFallbackBuffer.GetNextChar*\n  exceptions: []\n  version:\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - netstandard-2.0\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  monikers:\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - netstandard-2.0\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Text/DecoderExceptionFallbackBuffer.xml\n  ms.technology:\n  - dotnet-standard\n  author: rpetrusha\n  ms.author: ronpet\n  manager: wpickett\n- uid: System.Text.DecoderExceptionFallbackBuffer.MovePrevious\n  commentId: M:System.Text.DecoderExceptionFallbackBuffer.MovePrevious\n  id: MovePrevious\n  parent: System.Text.DecoderExceptionFallbackBuffer\n  langs:\n  - csharp\n  name: MovePrevious()\n  nameWithType: DecoderExceptionFallbackBuffer.MovePrevious()\n  fullName: DecoderExceptionFallbackBuffer.MovePrevious()\n  type: Method\n  assemblies:\n  - mscorlib\n  - netstandard\n  - System.Runtime\n  namespace: System.Text\n  summary: Causes the next call to <xref href=\"System.Text.DecoderExceptionFallbackBuffer.GetNextChar\"></xref> to access the exception data buffer character position that is prior to the current position.\n  remarks: Because <xref:System.Text.DecoderExceptionFallbackBuffer> has no actual exception data buffer, the <xref:System.Text.DecoderExceptionFallbackBuffer.MovePrevious%2A> method always returns `false`.\n  syntax:\n    content: public override bool MovePrevious ();\n    parameters: []\n    return:\n      type: System.Boolean\n      description: \"The return value is always `false`.  \\n  \\n A return value is defined, although it is unchanging, because this method implements an abstract method.\"\n  overload: System.Text.DecoderExceptionFallbackBuffer.MovePrevious*\n  exceptions: []\n  version:\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - netstandard-2.0\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  monikers:\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - netstandard-2.0\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Text/DecoderExceptionFallbackBuffer.xml\n  ms.technology:\n  - dotnet-standard\n  author: rpetrusha\n  ms.author: ronpet\n  manager: wpickett\n- uid: System.Text.DecoderExceptionFallbackBuffer.Remaining\n  commentId: P:System.Text.DecoderExceptionFallbackBuffer.Remaining\n  id: Remaining\n  parent: System.Text.DecoderExceptionFallbackBuffer\n  langs:\n  - csharp\n  name: Remaining\n  nameWithType: DecoderExceptionFallbackBuffer.Remaining\n  fullName: DecoderExceptionFallbackBuffer.Remaining\n  type: Property\n  assemblies:\n  - mscorlib\n  - netstandard\n  - System.Runtime\n  namespace: System.Text\n  summary: Gets the number of characters in the current <xref href=\"System.Text.DecoderExceptionFallbackBuffer\"></xref> object that remain to be processed.\n  remarks: Because <xref:System.Text.DecoderExceptionFallbackBuffer> has no actual exception data buffer, the <xref:System.Text.DecoderExceptionFallbackBuffer.Remaining%2A> property always returns zero.\n  syntax:\n    content: public override int Remaining { get; }\n    return:\n      type: System.Int32\n      description: \"The return value is always zero.  \\n  \\n A return value is defined, although it is unchanging, because this method implements an abstract method.\"\n  overload: System.Text.DecoderExceptionFallbackBuffer.Remaining*\n  exceptions: []\n  version:\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - netstandard-2.0\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  monikers:\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - netstandard-2.0\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Text/DecoderExceptionFallbackBuffer.xml\n  ms.technology:\n  - dotnet-standard\n  author: rpetrusha\n  ms.author: ronpet\n  manager: wpickett\nreferences:\n- uid: System.Text.DecoderFallbackBuffer\n  parent: System.Text\n  isExternal: false\n  name: DecoderFallbackBuffer\n  nameWithType: DecoderFallbackBuffer\n  fullName: System.Text.DecoderFallbackBuffer\n- uid: System.Text.DecoderFallbackException\n  parent: System.Text\n  isExternal: false\n  name: DecoderFallbackException\n  nameWithType: DecoderFallbackException\n  fullName: System.Text.DecoderFallbackException\n- uid: System.Text.DecoderExceptionFallbackBuffer.#ctor\n  parent: System.Text.DecoderExceptionFallbackBuffer\n  isExternal: false\n  name: DecoderExceptionFallbackBuffer()\n  nameWithType: DecoderExceptionFallbackBuffer.DecoderExceptionFallbackBuffer()\n  fullName: DecoderExceptionFallbackBuffer.DecoderExceptionFallbackBuffer()\n- uid: System.Text.DecoderExceptionFallbackBuffer.Fallback(System.Byte[],System.Int32)\n  parent: System.Text.DecoderExceptionFallbackBuffer\n  isExternal: false\n  name: Fallback(Byte[], Int32)\n  nameWithType: DecoderExceptionFallbackBuffer.Fallback(Byte[], Int32)\n  fullName: DecoderExceptionFallbackBuffer.Fallback(Byte[], Int32)\n- uid: System.Boolean\n  parent: System\n  isExternal: false\n  name: Boolean\n  nameWithType: Boolean\n  fullName: System.Boolean\n- uid: System.Byte\n  name: Byte\n  nameWithType: Byte\n  fullName: System.Byte\n- uid: System.Byte[]\n  parent: System\n  isExternal: false\n  name: Byte[]\n  nameWithType: Byte[]\n  fullName: System.Byte[]\n  spec.csharp:\n  - uid: System.Byte\n    name: Byte\n    nameWithType: Byte\n    fullName: System.Byte\n  - name: '[]'\n    nameWithType: '[]'\n    fullName: '[]'\n- uid: System.Int32\n  parent: System\n  isExternal: false\n  name: Int32\n  nameWithType: Int32\n  fullName: System.Int32\n- uid: System.Text.DecoderExceptionFallbackBuffer.GetNextChar\n  parent: System.Text.DecoderExceptionFallbackBuffer\n  isExternal: false\n  name: GetNextChar()\n  nameWithType: DecoderExceptionFallbackBuffer.GetNextChar()\n  fullName: DecoderExceptionFallbackBuffer.GetNextChar()\n- uid: System.Char\n  parent: System\n  isExternal: false\n  name: Char\n  nameWithType: Char\n  fullName: System.Char\n- uid: System.Text.DecoderExceptionFallbackBuffer.MovePrevious\n  parent: System.Text.DecoderExceptionFallbackBuffer\n  isExternal: false\n  name: MovePrevious()\n  nameWithType: DecoderExceptionFallbackBuffer.MovePrevious()\n  fullName: DecoderExceptionFallbackBuffer.MovePrevious()\n- uid: System.Text.DecoderExceptionFallbackBuffer.Remaining\n  parent: System.Text.DecoderExceptionFallbackBuffer\n  isExternal: false\n  name: Remaining\n  nameWithType: DecoderExceptionFallbackBuffer.Remaining\n  fullName: DecoderExceptionFallbackBuffer.Remaining\n- uid: System.Text.DecoderExceptionFallbackBuffer.#ctor*\n  parent: System.Text.DecoderExceptionFallbackBuffer\n  isExternal: false\n  name: DecoderExceptionFallbackBuffer\n  nameWithType: DecoderExceptionFallbackBuffer.DecoderExceptionFallbackBuffer\n  fullName: DecoderExceptionFallbackBuffer.DecoderExceptionFallbackBuffer\n  monikers:\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - netstandard-2.0\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Text/DecoderExceptionFallbackBuffer.xml\n- uid: System.Text.DecoderExceptionFallbackBuffer.Fallback*\n  parent: System.Text.DecoderExceptionFallbackBuffer\n  isExternal: false\n  name: Fallback\n  nameWithType: DecoderExceptionFallbackBuffer.Fallback\n  fullName: DecoderExceptionFallbackBuffer.Fallback\n  monikers:\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - netstandard-2.0\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Text/DecoderExceptionFallbackBuffer.xml\n- uid: System.Text.DecoderExceptionFallbackBuffer.GetNextChar*\n  parent: System.Text.DecoderExceptionFallbackBuffer\n  isExternal: false\n  name: GetNextChar\n  nameWithType: DecoderExceptionFallbackBuffer.GetNextChar\n  fullName: DecoderExceptionFallbackBuffer.GetNextChar\n  monikers:\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - netstandard-2.0\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Text/DecoderExceptionFallbackBuffer.xml\n- uid: System.Text.DecoderExceptionFallbackBuffer.MovePrevious*\n  parent: System.Text.DecoderExceptionFallbackBuffer\n  isExternal: false\n  name: MovePrevious\n  nameWithType: DecoderExceptionFallbackBuffer.MovePrevious\n  fullName: DecoderExceptionFallbackBuffer.MovePrevious\n  monikers:\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - netstandard-2.0\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Text/DecoderExceptionFallbackBuffer.xml\n- uid: System.Text.DecoderExceptionFallbackBuffer.Remaining*\n  parent: System.Text.DecoderExceptionFallbackBuffer\n  isExternal: false\n  name: Remaining\n  nameWithType: DecoderExceptionFallbackBuffer.Remaining\n  fullName: DecoderExceptionFallbackBuffer.Remaining\n  monikers:\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - netstandard-2.0\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Text/DecoderExceptionFallbackBuffer.xml\n- uid: System.Object.Equals(System.Object)\n  parent: System.Object\n  isExternal: false\n  name: Equals(Object)\n  nameWithType: Object.Equals(Object)\n  fullName: Object.Equals(Object)\n- uid: System.Object.Equals(System.Object,System.Object)\n  parent: System.Object\n  isExternal: false\n  name: Equals(Object, Object)\n  nameWithType: Object.Equals(Object, Object)\n  fullName: Object.Equals(Object, Object)\n- uid: System.Object.GetHashCode\n  parent: System.Object\n  isExternal: false\n  name: GetHashCode()\n  nameWithType: Object.GetHashCode()\n  fullName: Object.GetHashCode()\n- uid: System.Object.GetType\n  parent: System.Object\n  isExternal: false\n  name: GetType()\n  nameWithType: Object.GetType()\n  fullName: Object.GetType()\n- uid: System.Object.MemberwiseClone\n  parent: System.Object\n  isExternal: false\n  name: MemberwiseClone()\n  nameWithType: Object.MemberwiseClone()\n  fullName: Object.MemberwiseClone()\n- uid: System.Object.ReferenceEquals(System.Object,System.Object)\n  parent: System.Object\n  isExternal: false\n  name: ReferenceEquals(Object, Object)\n  nameWithType: Object.ReferenceEquals(Object, Object)\n  fullName: Object.ReferenceEquals(Object, Object)\n- uid: System.Object.ToString\n  parent: System.Object\n  isExternal: false\n  name: ToString()\n  nameWithType: Object.ToString()\n  fullName: Object.ToString()\n- uid: System.Text.DecoderFallbackBuffer.Reset\n  parent: System.Text.DecoderFallbackBuffer\n  isExternal: false\n  name: Reset()\n  nameWithType: DecoderFallbackBuffer.Reset()\n  fullName: DecoderFallbackBuffer.Reset()\n"}