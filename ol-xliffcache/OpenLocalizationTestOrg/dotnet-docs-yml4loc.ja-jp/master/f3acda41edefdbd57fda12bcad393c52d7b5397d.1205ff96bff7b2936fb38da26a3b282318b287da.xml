{"nodes":[{"content":"Verifies that the user has permission to access the file requested. This class cannot be inherited.","nodes":[{"pos":[0,99],"content":"Verifies that the user has permission to access the file requested. This class cannot be inherited.","nodes":[{"content":"Verifies that the user has permission to access the file requested. This class cannot be inherited.","pos":[0,99],"nodes":[{"content":"Verifies that the user has permission to access the file requested.","pos":[0,67]},{"content":"This class cannot be inherited.","pos":[68,99]}]}]}],"pos":[728,828],"yaml":true},{"content":"This module provides authorization services against file-system access-control lists (ACLs). When the `mode` attribute of the [authentication Element (ASP.NET Settings Schema)](http://msdn.microsoft.com/en-us/27bc0ba9-f23a-45f3-ae42-dbe7916e3ee2) configuration element is set to `Windows` so that the <xref:System.Web.Security.WindowsAuthenticationModule> is being used for the application, the <xref:System.Web.Security.FileAuthorizationModule> module ensures that the requesting user is allowed read or write access to the resource, depending on the request verb, before executing the request. For more information, see the <xref:System.Web.Security.FileAuthorizationModule.CheckFileAccessForUser%2A> method.","nodes":[{"pos":[0,710],"content":"This module provides authorization services against file-system access-control lists (ACLs). When the `mode` attribute of the [authentication Element (ASP.NET Settings Schema)](http://msdn.microsoft.com/en-us/27bc0ba9-f23a-45f3-ae42-dbe7916e3ee2) configuration element is set to `Windows` so that the <xref:System.Web.Security.WindowsAuthenticationModule> is being used for the application, the <xref:System.Web.Security.FileAuthorizationModule> module ensures that the requesting user is allowed read or write access to the resource, depending on the request verb, before executing the request. For more information, see the <xref:System.Web.Security.FileAuthorizationModule.CheckFileAccessForUser%2A> method.","nodes":[{"content":"This module provides authorization services against file-system access-control lists (ACLs).","pos":[0,92]},{"content":"When the <ph id=\"ph1\">`mode`</ph> attribute of the <bpt id=\"p1\">[</bpt>authentication Element (ASP.NET Settings Schema)<ept id=\"p1\">](http://msdn.microsoft.com/en-us/27bc0ba9-f23a-45f3-ae42-dbe7916e3ee2)</ept> configuration element is set to <ph id=\"ph2\">`Windows`</ph> so that the <ph id=\"ph3\">&lt;xref:System.Web.Security.WindowsAuthenticationModule&gt;</ph> is being used for the application, the <ph id=\"ph4\">&lt;xref:System.Web.Security.FileAuthorizationModule&gt;</ph> module ensures that the requesting user is allowed read or write access to the resource, depending on the request verb, before executing the request.","pos":[93,595],"source":" When the `mode` attribute of the [authentication Element (ASP.NET Settings Schema)](http://msdn.microsoft.com/en-us/27bc0ba9-f23a-45f3-ae42-dbe7916e3ee2) configuration element is set to `Windows` so that the <xref:System.Web.Security.WindowsAuthenticationModule> is being used for the application, the <xref:System.Web.Security.FileAuthorizationModule> module ensures that the requesting user is allowed read or write access to the resource, depending on the request verb, before executing the request."},{"content":"For more information, see the <ph id=\"ph1\">&lt;xref:System.Web.Security.FileAuthorizationModule.CheckFileAccessForUser%2A&gt;</ph> method.","pos":[596,710],"source":" For more information, see the <xref:System.Web.Security.FileAuthorizationModule.CheckFileAccessForUser%2A> method."}]}],"pos":[839,1550],"yaml":true,"extradata":"MT"},{"content":"Creates an instance of the <xref href=\"System.Web.Security.FileAuthorizationModule\"></xref> class.","nodes":[{"pos":[0,98],"content":"Creates an instance of the <ph id=\"ph1\">&lt;xref href=\"System.Web.Security.FileAuthorizationModule\"&gt;&lt;/xref&gt;</ph> class.","source":"Creates an instance of the <xref href=\"System.Web.Security.FileAuthorizationModule\"></xref> class."}],"pos":[3022,3121],"yaml":true},{"content":"This constructor is not intended to be called from application code.  \n  \n ASP.NET calls this constructor to create an instance of the <xref:System.Web.Security.FileAuthorizationModule> class. After calling the constructor, it calls the <xref:System.Web.Security.FileAuthorizationModule.Init%2A> method to initialize the new <xref:System.Web.Security.FileAuthorizationModule> object.","nodes":[{"pos":[0,68],"content":"This constructor is not intended to be called from application code.","nodes":[{"content":"This constructor is not intended to be called from application code.","pos":[0,68]}]},{"pos":[75,383],"content":"ASP.NET calls this constructor to create an instance of the <xref:System.Web.Security.FileAuthorizationModule> class. After calling the constructor, it calls the <xref:System.Web.Security.FileAuthorizationModule.Init%2A> method to initialize the new <xref:System.Web.Security.FileAuthorizationModule> object.","nodes":[{"content":"ASP.NET calls this constructor to create an instance of the <xref:System.Web.Security.FileAuthorizationModule> class. After calling the constructor, it calls the <xref:System.Web.Security.FileAuthorizationModule.Init%2A> method to initialize the new <xref:System.Web.Security.FileAuthorizationModule> object.","pos":[0,308],"nodes":[{"content":"ASP.NET calls this constructor to create an instance of the <ph id=\"ph1\">&lt;xref:System.Web.Security.FileAuthorizationModule&gt;</ph> class.","pos":[0,117],"source":"ASP.NET calls this constructor to create an instance of the <xref:System.Web.Security.FileAuthorizationModule> class."},{"content":"After calling the constructor, it calls the <ph id=\"ph1\">&lt;xref:System.Web.Security.FileAuthorizationModule.Init%2A&gt;</ph> method to initialize the new <ph id=\"ph2\">&lt;xref:System.Web.Security.FileAuthorizationModule&gt;</ph> object.","pos":[118,308],"source":" After calling the constructor, it calls the <xref:System.Web.Security.FileAuthorizationModule.Init%2A> method to initialize the new <xref:System.Web.Security.FileAuthorizationModule> object."}]}]}],"pos":[3132,3520],"yaml":true,"extradata":"MT"},{"content":"Determines whether the user has access to the requested file.","nodes":[{"pos":[0,61],"content":"Determines whether the user has access to the requested file.","nodes":[{"content":"Determines whether the user has access to the requested file.","pos":[0,61]}]}],"pos":[4923,4985],"yaml":true},{"content":"The <xref:System.Web.Security.FileAuthorizationModule.CheckFileAccessForUser%2A> method checks to see whether the current user, represented by a Windows access token, is granted access to the requested file in the file-system access-control lists (ACLs). The virtual path is mapped to the physical file-system path before the check is made.  \n  \n If the HTTP verb used to make the request is `GET`, `POST`, or `HEAD`, the <xref:System.Web.Security.FileAuthorizationModule.CheckFileAccessForUser%2A> method checks for read access to the file. If any other verb is used, the <xref:System.Web.Security.FileAuthorizationModule.CheckFileAccessForUser%2A> method checks for read/write permission to the file.  \n  \n **Security Note** If the <xref:System.Web.Security.FileAuthorizationModule> module is not defined in the `httpModules` configuration section for the application, the <xref:System.Web.Security.FileAuthorizationModule> module always returns `true`.","nodes":[{"pos":[0,340],"content":"The <xref:System.Web.Security.FileAuthorizationModule.CheckFileAccessForUser%2A> method checks to see whether the current user, represented by a Windows access token, is granted access to the requested file in the file-system access-control lists (ACLs). The virtual path is mapped to the physical file-system path before the check is made.","nodes":[{"content":"The <xref:System.Web.Security.FileAuthorizationModule.CheckFileAccessForUser%2A> method checks to see whether the current user, represented by a Windows access token, is granted access to the requested file in the file-system access-control lists (ACLs). The virtual path is mapped to the physical file-system path before the check is made.","pos":[0,340],"nodes":[{"content":"The <ph id=\"ph1\">&lt;xref:System.Web.Security.FileAuthorizationModule.CheckFileAccessForUser%2A&gt;</ph> method checks to see whether the current user, represented by a Windows access token, is granted access to the requested file in the file-system access-control lists (ACLs).","pos":[0,254],"source":"The <xref:System.Web.Security.FileAuthorizationModule.CheckFileAccessForUser%2A> method checks to see whether the current user, represented by a Windows access token, is granted access to the requested file in the file-system access-control lists (ACLs)."},{"content":"The virtual path is mapped to the physical file-system path before the check is made.","pos":[255,340]}]}]},{"pos":[347,702],"content":"If the HTTP verb used to make the request is `GET`, `POST`, or `HEAD`, the <xref:System.Web.Security.FileAuthorizationModule.CheckFileAccessForUser%2A> method checks for read access to the file. If any other verb is used, the <xref:System.Web.Security.FileAuthorizationModule.CheckFileAccessForUser%2A> method checks for read/write permission to the file.","nodes":[{"content":"If the HTTP verb used to make the request is <ph id=\"ph1\">`GET`</ph>, <ph id=\"ph2\">`POST`</ph>, or <ph id=\"ph3\">`HEAD`</ph>, the <ph id=\"ph4\">&lt;xref:System.Web.Security.FileAuthorizationModule.CheckFileAccessForUser%2A&gt;</ph> method checks for read access to the file.","pos":[0,194],"source":"If the HTTP verb used to make the request is `GET`, `POST`, or `HEAD`, the <xref:System.Web.Security.FileAuthorizationModule.CheckFileAccessForUser%2A> method checks for read access to the file."},{"content":"If any other verb is used, the <ph id=\"ph1\">&lt;xref:System.Web.Security.FileAuthorizationModule.CheckFileAccessForUser%2A&gt;</ph> method checks for read/write permission to the file.","pos":[195,355],"source":" If any other verb is used, the <xref:System.Web.Security.FileAuthorizationModule.CheckFileAccessForUser%2A> method checks for read/write permission to the file."}]},{"pos":[709,955],"content":"<bpt id=\"p1\">**</bpt>Security Note<ept id=\"p1\">**</ept> If the <ph id=\"ph1\">&lt;xref:System.Web.Security.FileAuthorizationModule&gt;</ph> module is not defined in the <ph id=\"ph2\">`httpModules`</ph> configuration section for the application, the <ph id=\"ph3\">&lt;xref:System.Web.Security.FileAuthorizationModule&gt;</ph> module always returns <ph id=\"ph4\">`true`</ph>.","source":"**Security Note** If the <xref:System.Web.Security.FileAuthorizationModule> module is not defined in the `httpModules` configuration section for the application, the <xref:System.Web.Security.FileAuthorizationModule> module always returns `true`."}],"pos":[4996,5958],"yaml":true,"extradata":"MT"},{"content":"The virtual path to the file.","nodes":[{"pos":[0,29],"content":"The virtual path to the file.","nodes":[{"content":"The virtual path to the file.","pos":[0,29]}]}],"pos":[6155,6185],"yaml":true},{"content":"A Windows access token representing the user.","nodes":[{"pos":[0,45],"content":"A Windows access token representing the user.","nodes":[{"content":"A Windows access token representing the user.","pos":[0,45]}]}],"pos":[6246,6292],"yaml":true},{"content":"The HTTP verb used to make the request.","nodes":[{"pos":[0,39],"content":"The HTTP verb used to make the request.","nodes":[{"content":"The HTTP verb used to make the request.","pos":[0,39]}]}],"pos":[6352,6392],"yaml":true},{"content":"`true` if the current Windows user represented by <code>token</code> has access to the file using the specified HTTP verb or if the <xref href=\"System.Web.Security.FileAuthorizationModule\"></xref> module is not defined in the application's configuration file; otherwise, `false`.","nodes":[{"pos":[0,279],"content":"<ph id=\"ph1\">`true`</ph> if the current Windows user represented by <bpt id=\"p1\">&lt;code&gt;</bpt><ph id=\"ph2\">token</ph><ept id=\"p1\">&lt;/code&gt;</ept> has access to the file using the specified HTTP verb or if the <ph id=\"ph3\">&lt;xref href=\"System.Web.Security.FileAuthorizationModule\"&gt;&lt;/xref&gt;</ph> module is not defined in the application's configuration file; otherwise, <ph id=\"ph4\">`false`</ph>.","source":"`true` if the current Windows user represented by <code>token</code> has access to the file using the specified HTTP verb or if the <xref href=\"System.Web.Security.FileAuthorizationModule\"></xref> module is not defined in the application's configuration file; otherwise, `false`."}],"pos":[6450,6734],"yaml":true},{"content":"<code>virtualPath</code> is `null`.  \n  \n -or-  \n  \n <code>token</code> is <xref href=\"System.IntPtr.Zero\"></xref>.  \n  \n -or-  \n  \n <code>verb</code> is `null`.","nodes":[{"pos":[0,35],"content":"<ph id=\"ph1\">&lt;code&gt;virtualPath&lt;/code&gt;</ph> is <ph id=\"ph2\">`null`</ph>.","source":"<code>virtualPath</code> is `null`."},{"pos":[42,46],"content":"-or-","nodes":[{"content":"-or-","pos":[0,4]}]},{"pos":[53,115],"content":"<ph id=\"ph1\">&lt;code&gt;token&lt;/code&gt;</ph> is <ph id=\"ph2\">&lt;xref href=\"System.IntPtr.Zero\"&gt;&lt;/xref&gt;</ph>.","source":"<code>token</code> is <xref href=\"System.IntPtr.Zero\"></xref>."},{"pos":[122,126],"content":"-or-","nodes":[{"content":"-or-","pos":[0,4]}]},{"pos":[133,161],"content":"<ph id=\"ph1\">&lt;code&gt;verb&lt;/code&gt;</ph> is <ph id=\"ph2\">`null`</ph>.","source":"<code>verb</code> is `null`."}],"pos":[6930,7104],"yaml":true},{"content":"<code>virtualPath</code> is not in the application directory structure of the Web application.","nodes":[{"pos":[0,94],"content":"<ph id=\"ph1\">&lt;code&gt;virtualPath&lt;/code&gt;</ph> is not in the application directory structure of the Web application.","source":"<code>virtualPath</code> is not in the application directory structure of the Web application."}],"pos":[7198,7293],"yaml":true},{"content":"The file specified by <code>virtualPath</code> does not exist.","nodes":[{"pos":[0,62],"content":"The file specified by <bpt id=\"p1\">&lt;code&gt;</bpt><ph id=\"ph1\">virtualPath</ph><ept id=\"p1\">&lt;/code&gt;</ept> does not exist.","source":"The file specified by <code>virtualPath</code> does not exist."}],"pos":[7401,7464],"yaml":true},{"content":"Releases all resources, other than memory, used by the <xref href=\"System.Web.Security.FileAuthorizationModule\"></xref>.","nodes":[{"pos":[0,120],"content":"Releases all resources, other than memory, used by the <ph id=\"ph1\">&lt;xref href=\"System.Web.Security.FileAuthorizationModule\"&gt;&lt;/xref&gt;</ph>.","source":"Releases all resources, other than memory, used by the <xref href=\"System.Web.Security.FileAuthorizationModule\"></xref>."}],"pos":[8425,8546],"yaml":true},{"content":"This method is not intended to be called from application code.","nodes":[{"pos":[0,63],"content":"This method is not intended to be called from application code.","nodes":[{"content":"This method is not intended to be called from application code.","pos":[0,63]}]}],"pos":[8557,8621],"yaml":true,"extradata":"MT"},{"content":"Initializes the <xref href=\"System.Web.Security.FileAuthorizationModule\"></xref> object.","nodes":[{"pos":[0,88],"content":"Initializes the <ph id=\"ph1\">&lt;xref href=\"System.Web.Security.FileAuthorizationModule\"&gt;&lt;/xref&gt;</ph> object.","source":"Initializes the <xref href=\"System.Web.Security.FileAuthorizationModule\"></xref> object."}],"pos":[9841,9930],"yaml":true},{"content":"This method is not intended to be called from application code.  \n  \n The <xref:System.Web.Security.FileAuthorizationModule.Init%2A> method ensures that the <xref:System.Web.Security.FileAuthorizationModule> is included in the processing of the <xref:System.Web.HttpApplication.AuthorizeRequest> event.","nodes":[{"pos":[0,63],"content":"This method is not intended to be called from application code.","nodes":[{"content":"This method is not intended to be called from application code.","pos":[0,63]}]},{"pos":[70,302],"content":"The <xref:System.Web.Security.FileAuthorizationModule.Init%2A> method ensures that the <xref:System.Web.Security.FileAuthorizationModule> is included in the processing of the <xref:System.Web.HttpApplication.AuthorizeRequest> event.","nodes":[{"content":"The <ph id=\"ph1\">&lt;xref:System.Web.Security.FileAuthorizationModule.Init%2A&gt;</ph> method ensures that the <ph id=\"ph2\">&lt;xref:System.Web.Security.FileAuthorizationModule&gt;</ph> is included in the processing of the <ph id=\"ph3\">&lt;xref:System.Web.HttpApplication.AuthorizeRequest&gt;</ph> event.","pos":[0,232],"source":"The <xref:System.Web.Security.FileAuthorizationModule.Init%2A> method ensures that the <xref:System.Web.Security.FileAuthorizationModule> is included in the processing of the <xref:System.Web.HttpApplication.AuthorizeRequest> event."}]}],"pos":[9941,10248],"yaml":true,"extradata":"MT"},{"content":"The current <xref href=\"System.Web.HttpApplication\"></xref> instance.","nodes":[{"pos":[0,69],"content":"The current <ph id=\"ph1\">&lt;xref href=\"System.Web.HttpApplication\"&gt;&lt;/xref&gt;</ph> instance.","source":"The current <xref href=\"System.Web.HttpApplication\"></xref> instance."}],"pos":[10410,10480],"yaml":true}],"content":"### YamlMime:ManagedReference\nitems:\n- uid: System.Web.Security.FileAuthorizationModule\n  commentId: T:System.Web.Security.FileAuthorizationModule\n  id: FileAuthorizationModule\n  children:\n  - System.Web.Security.FileAuthorizationModule.#ctor\n  - System.Web.Security.FileAuthorizationModule.CheckFileAccessForUser(System.String,System.IntPtr,System.String)\n  - System.Web.Security.FileAuthorizationModule.Dispose\n  - System.Web.Security.FileAuthorizationModule.Init(System.Web.HttpApplication)\n  langs:\n  - csharp\n  name: FileAuthorizationModule\n  nameWithType: FileAuthorizationModule\n  fullName: System.Web.Security.FileAuthorizationModule\n  type: Class\n  assemblies:\n  - System.Web\n  namespace: System.Web.Security\n  summary: Verifies that the user has permission to access the file requested. This class cannot be inherited.\n  remarks: This module provides authorization services against file-system access-control lists (ACLs). When the `mode` attribute of the [authentication Element (ASP.NET Settings Schema)](http://msdn.microsoft.com/en-us/27bc0ba9-f23a-45f3-ae42-dbe7916e3ee2) configuration element is set to `Windows` so that the <xref:System.Web.Security.WindowsAuthenticationModule> is being used for the application, the <xref:System.Web.Security.FileAuthorizationModule> module ensures that the requesting user is allowed read or write access to the resource, depending on the request verb, before executing the request. For more information, see the <xref:System.Web.Security.FileAuthorizationModule.CheckFileAccessForUser%2A> method.\n  syntax:\n    content: 'public sealed class FileAuthorizationModule : System.Web.IHttpModule'\n  inheritance:\n  - System.Object\n  implements:\n  - System.Web.IHttpModule\n  inheritedMembers:\n  - System.Object.Equals(System.Object)\n  - System.Object.Equals(System.Object,System.Object)\n  - System.Object.GetHashCode\n  - System.Object.GetType\n  - System.Object.MemberwiseClone\n  - System.Object.ReferenceEquals(System.Object,System.Object)\n  - System.Object.ToString\n  version:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Web.Security/FileAuthorizationModule.xml\n  ms.technology:\n  - dotnet-webforms\n  author: tdykstra\n  ms.author: tdykstra\n  manager: wpickett\n- uid: System.Web.Security.FileAuthorizationModule.#ctor\n  commentId: M:System.Web.Security.FileAuthorizationModule.#ctor\n  id: '#ctor'\n  parent: System.Web.Security.FileAuthorizationModule\n  langs:\n  - csharp\n  name: FileAuthorizationModule()\n  nameWithType: FileAuthorizationModule.FileAuthorizationModule()\n  fullName: FileAuthorizationModule.FileAuthorizationModule()\n  type: Constructor\n  assemblies:\n  - System.Web\n  namespace: System.Web.Security\n  summary: Creates an instance of the <xref href=\"System.Web.Security.FileAuthorizationModule\"></xref> class.\n  remarks: \"This constructor is not intended to be called from application code.  \\n  \\n ASP.NET calls this constructor to create an instance of the <xref:System.Web.Security.FileAuthorizationModule> class. After calling the constructor, it calls the <xref:System.Web.Security.FileAuthorizationModule.Init%2A> method to initialize the new <xref:System.Web.Security.FileAuthorizationModule> object.\"\n  syntax:\n    content: public FileAuthorizationModule ();\n    parameters: []\n  overload: System.Web.Security.FileAuthorizationModule.#ctor*\n  exceptions: []\n  version:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Web.Security/FileAuthorizationModule.xml\n  ms.technology:\n  - dotnet-webforms\n  author: tdykstra\n  ms.author: tdykstra\n  manager: wpickett\n- uid: System.Web.Security.FileAuthorizationModule.CheckFileAccessForUser(System.String,System.IntPtr,System.String)\n  commentId: M:System.Web.Security.FileAuthorizationModule.CheckFileAccessForUser(System.String,System.IntPtr,System.String)\n  id: CheckFileAccessForUser(System.String,System.IntPtr,System.String)\n  parent: System.Web.Security.FileAuthorizationModule\n  langs:\n  - csharp\n  name: CheckFileAccessForUser(String, IntPtr, String)\n  nameWithType: FileAuthorizationModule.CheckFileAccessForUser(String, IntPtr, String)\n  fullName: FileAuthorizationModule.CheckFileAccessForUser(String, IntPtr, String)\n  type: Method\n  assemblies:\n  - System.Web\n  namespace: System.Web.Security\n  summary: Determines whether the user has access to the requested file.\n  remarks: \"The <xref:System.Web.Security.FileAuthorizationModule.CheckFileAccessForUser%2A> method checks to see whether the current user, represented by a Windows access token, is granted access to the requested file in the file-system access-control lists (ACLs). The virtual path is mapped to the physical file-system path before the check is made.  \\n  \\n If the HTTP verb used to make the request is `GET`, `POST`, or `HEAD`, the <xref:System.Web.Security.FileAuthorizationModule.CheckFileAccessForUser%2A> method checks for read access to the file. If any other verb is used, the <xref:System.Web.Security.FileAuthorizationModule.CheckFileAccessForUser%2A> method checks for read/write permission to the file.  \\n  \\n **Security Note** If the <xref:System.Web.Security.FileAuthorizationModule> module is not defined in the `httpModules` configuration section for the application, the <xref:System.Web.Security.FileAuthorizationModule> module always returns `true`.\"\n  syntax:\n    content: public static bool CheckFileAccessForUser (string virtualPath, IntPtr token, string verb);\n    parameters:\n    - id: virtualPath\n      type: System.String\n      description: The virtual path to the file.\n    - id: token\n      type: System.IntPtr\n      description: A Windows access token representing the user.\n    - id: verb\n      type: System.String\n      description: The HTTP verb used to make the request.\n    return:\n      type: System.Boolean\n      description: \"`true` if the current Windows user represented by <code>token</code> has access to the file using the specified HTTP verb or if the <xref href=\\\"System.Web.Security.FileAuthorizationModule\\\"></xref> module is not defined in the application's configuration file; otherwise, `false`.\"\n  overload: System.Web.Security.FileAuthorizationModule.CheckFileAccessForUser*\n  exceptions:\n  - type: System.ArgumentNullException\n    commentId: T:System.ArgumentNullException\n    description: \"<code>virtualPath</code> is `null`.  \\n  \\n -or-  \\n  \\n <code>token</code> is <xref href=\\\"System.IntPtr.Zero\\\"></xref>.  \\n  \\n -or-  \\n  \\n <code>verb</code> is `null`.\"\n  - type: System.ArgumentException\n    commentId: T:System.ArgumentException\n    description: <code>virtualPath</code> is not in the application directory structure of the Web application.\n  - type: System.IO.FileNotFoundException\n    commentId: T:System.IO.FileNotFoundException\n    description: The file specified by <code>virtualPath</code> does not exist.\n  version:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Web.Security/FileAuthorizationModule.xml\n  ms.technology:\n  - dotnet-webforms\n  author: tdykstra\n  ms.author: tdykstra\n  manager: wpickett\n- uid: System.Web.Security.FileAuthorizationModule.Dispose\n  commentId: M:System.Web.Security.FileAuthorizationModule.Dispose\n  id: Dispose\n  parent: System.Web.Security.FileAuthorizationModule\n  langs:\n  - csharp\n  name: Dispose()\n  nameWithType: FileAuthorizationModule.Dispose()\n  fullName: FileAuthorizationModule.Dispose()\n  type: Method\n  assemblies:\n  - System.Web\n  namespace: System.Web.Security\n  summary: Releases all resources, other than memory, used by the <xref href=\"System.Web.Security.FileAuthorizationModule\"></xref>.\n  remarks: This method is not intended to be called from application code.\n  syntax:\n    content: public void Dispose ();\n    parameters: []\n  overload: System.Web.Security.FileAuthorizationModule.Dispose*\n  exceptions: []\n  version:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Web.Security/FileAuthorizationModule.xml\n  ms.technology:\n  - dotnet-webforms\n  author: tdykstra\n  ms.author: tdykstra\n  manager: wpickett\n- uid: System.Web.Security.FileAuthorizationModule.Init(System.Web.HttpApplication)\n  commentId: M:System.Web.Security.FileAuthorizationModule.Init(System.Web.HttpApplication)\n  id: Init(System.Web.HttpApplication)\n  parent: System.Web.Security.FileAuthorizationModule\n  langs:\n  - csharp\n  name: Init(HttpApplication)\n  nameWithType: FileAuthorizationModule.Init(HttpApplication)\n  fullName: FileAuthorizationModule.Init(HttpApplication)\n  type: Method\n  assemblies:\n  - System.Web\n  namespace: System.Web.Security\n  summary: Initializes the <xref href=\"System.Web.Security.FileAuthorizationModule\"></xref> object.\n  remarks: \"This method is not intended to be called from application code.  \\n  \\n The <xref:System.Web.Security.FileAuthorizationModule.Init%2A> method ensures that the <xref:System.Web.Security.FileAuthorizationModule> is included in the processing of the <xref:System.Web.HttpApplication.AuthorizeRequest> event.\"\n  syntax:\n    content: public void Init (System.Web.HttpApplication app);\n    parameters:\n    - id: app\n      type: System.Web.HttpApplication\n      description: The current <xref href=\"System.Web.HttpApplication\"></xref> instance.\n  overload: System.Web.Security.FileAuthorizationModule.Init*\n  exceptions: []\n  version:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Web.Security/FileAuthorizationModule.xml\n  ms.technology:\n  - dotnet-webforms\n  author: tdykstra\n  ms.author: tdykstra\n  manager: wpickett\nreferences:\n- uid: System.Object\n  parent: System\n  isExternal: false\n  name: Object\n  nameWithType: Object\n  fullName: System.Object\n- uid: System.ArgumentNullException\n  parent: System\n  isExternal: false\n  name: ArgumentNullException\n  nameWithType: ArgumentNullException\n  fullName: System.ArgumentNullException\n- uid: System.ArgumentException\n  parent: System\n  isExternal: false\n  name: ArgumentException\n  nameWithType: ArgumentException\n  fullName: System.ArgumentException\n- uid: System.IO.FileNotFoundException\n  parent: System.IO\n  isExternal: false\n  name: FileNotFoundException\n  nameWithType: FileNotFoundException\n  fullName: System.IO.FileNotFoundException\n- uid: System.Web.Security.FileAuthorizationModule.#ctor\n  parent: System.Web.Security.FileAuthorizationModule\n  isExternal: false\n  name: FileAuthorizationModule()\n  nameWithType: FileAuthorizationModule.FileAuthorizationModule()\n  fullName: FileAuthorizationModule.FileAuthorizationModule()\n- uid: System.Web.Security.FileAuthorizationModule.CheckFileAccessForUser(System.String,System.IntPtr,System.String)\n  parent: System.Web.Security.FileAuthorizationModule\n  isExternal: false\n  name: CheckFileAccessForUser(String, IntPtr, String)\n  nameWithType: FileAuthorizationModule.CheckFileAccessForUser(String, IntPtr, String)\n  fullName: FileAuthorizationModule.CheckFileAccessForUser(String, IntPtr, String)\n- uid: System.Boolean\n  parent: System\n  isExternal: false\n  name: Boolean\n  nameWithType: Boolean\n  fullName: System.Boolean\n- uid: System.String\n  parent: System\n  isExternal: false\n  name: String\n  nameWithType: String\n  fullName: System.String\n- uid: System.IntPtr\n  parent: System\n  isExternal: false\n  name: IntPtr\n  nameWithType: IntPtr\n  fullName: System.IntPtr\n- uid: System.Web.Security.FileAuthorizationModule.Dispose\n  parent: System.Web.Security.FileAuthorizationModule\n  isExternal: false\n  name: Dispose()\n  nameWithType: FileAuthorizationModule.Dispose()\n  fullName: FileAuthorizationModule.Dispose()\n- uid: System.Web.Security.FileAuthorizationModule.Init(System.Web.HttpApplication)\n  parent: System.Web.Security.FileAuthorizationModule\n  isExternal: false\n  name: Init(HttpApplication)\n  nameWithType: FileAuthorizationModule.Init(HttpApplication)\n  fullName: FileAuthorizationModule.Init(HttpApplication)\n- uid: System.Web.HttpApplication\n  parent: System.Web\n  isExternal: false\n  name: HttpApplication\n  nameWithType: HttpApplication\n  fullName: System.Web.HttpApplication\n- uid: System.Web.Security.FileAuthorizationModule.#ctor*\n  parent: System.Web.Security.FileAuthorizationModule\n  isExternal: false\n  name: FileAuthorizationModule\n  nameWithType: FileAuthorizationModule.FileAuthorizationModule\n  fullName: FileAuthorizationModule.FileAuthorizationModule\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Web.Security/FileAuthorizationModule.xml\n- uid: System.Web.Security.FileAuthorizationModule.CheckFileAccessForUser*\n  parent: System.Web.Security.FileAuthorizationModule\n  isExternal: false\n  name: CheckFileAccessForUser\n  nameWithType: FileAuthorizationModule.CheckFileAccessForUser\n  fullName: FileAuthorizationModule.CheckFileAccessForUser\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Web.Security/FileAuthorizationModule.xml\n- uid: System.Web.Security.FileAuthorizationModule.Dispose*\n  parent: System.Web.Security.FileAuthorizationModule\n  isExternal: false\n  name: Dispose\n  nameWithType: FileAuthorizationModule.Dispose\n  fullName: FileAuthorizationModule.Dispose\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Web.Security/FileAuthorizationModule.xml\n- uid: System.Web.Security.FileAuthorizationModule.Init*\n  parent: System.Web.Security.FileAuthorizationModule\n  isExternal: false\n  name: Init\n  nameWithType: FileAuthorizationModule.Init\n  fullName: FileAuthorizationModule.Init\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Web.Security/FileAuthorizationModule.xml\n- uid: System.Object.Equals(System.Object)\n  parent: System.Object\n  isExternal: false\n  name: Equals(Object)\n  nameWithType: Object.Equals(Object)\n  fullName: Object.Equals(Object)\n- uid: System.Object.Equals(System.Object,System.Object)\n  parent: System.Object\n  isExternal: false\n  name: Equals(Object, Object)\n  nameWithType: Object.Equals(Object, Object)\n  fullName: Object.Equals(Object, Object)\n- uid: System.Object.GetHashCode\n  parent: System.Object\n  isExternal: false\n  name: GetHashCode()\n  nameWithType: Object.GetHashCode()\n  fullName: Object.GetHashCode()\n- uid: System.Object.GetType\n  parent: System.Object\n  isExternal: false\n  name: GetType()\n  nameWithType: Object.GetType()\n  fullName: Object.GetType()\n- uid: System.Object.MemberwiseClone\n  parent: System.Object\n  isExternal: false\n  name: MemberwiseClone()\n  nameWithType: Object.MemberwiseClone()\n  fullName: Object.MemberwiseClone()\n- uid: System.Object.ReferenceEquals(System.Object,System.Object)\n  parent: System.Object\n  isExternal: false\n  name: ReferenceEquals(Object, Object)\n  nameWithType: Object.ReferenceEquals(Object, Object)\n  fullName: Object.ReferenceEquals(Object, Object)\n- uid: System.Object.ToString\n  parent: System.Object\n  isExternal: false\n  name: ToString()\n  nameWithType: Object.ToString()\n  fullName: Object.ToString()\n- uid: System.Web.IHttpModule\n  parent: System.Web\n  isExternal: false\n  name: IHttpModule\n  nameWithType: IHttpModule\n  fullName: System.Web.IHttpModule\n"}