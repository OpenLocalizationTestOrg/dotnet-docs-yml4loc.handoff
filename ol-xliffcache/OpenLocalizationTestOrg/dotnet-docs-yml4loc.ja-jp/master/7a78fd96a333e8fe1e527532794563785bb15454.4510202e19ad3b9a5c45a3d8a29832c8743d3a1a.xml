{"nodes":[{"content":"Enables comparisons between an isolated store and an application domain and assembly's evidence.","nodes":[{"pos":[0,96],"content":"Enables comparisons between an isolated store and an application domain and assembly's evidence.","nodes":[{"content":"Enables comparisons between an isolated store and an application domain and assembly's evidence.","pos":[0,96]}]}],"pos":[594,691],"yaml":true},{"content":"Isolated storage uses evidence about an assembly in order to identify it and provide it with a unique file storage location. When an assembly requests a store, its evidence (as presented by the host that loaded it) is processed and compared with the evidence used to create the existing stores. This determines if you need to create a new store or if one already exists for the assembly in question. Due to the comparison technique used, pieces of evidence that are functionally equivalent might not result in a true comparison if the serialized forms are not identical. When implementing custom evidence, consider whether this is the case for your evidence class and, if so, implement <xref:System.IO.IsolatedStorage.INormalizeForIsolatedStorage>. For evidence that implements this interface, the <xref:System.IO.IsolatedStorage.INormalizeForIsolatedStorage.Normalize%2A> method is called and comparisons are based on the normalized copy of the object returned by that method.","nodes":[{"pos":[0,977],"content":"Isolated storage uses evidence about an assembly in order to identify it and provide it with a unique file storage location. When an assembly requests a store, its evidence (as presented by the host that loaded it) is processed and compared with the evidence used to create the existing stores. This determines if you need to create a new store or if one already exists for the assembly in question. Due to the comparison technique used, pieces of evidence that are functionally equivalent might not result in a true comparison if the serialized forms are not identical. When implementing custom evidence, consider whether this is the case for your evidence class and, if so, implement <xref:System.IO.IsolatedStorage.INormalizeForIsolatedStorage>. For evidence that implements this interface, the <xref:System.IO.IsolatedStorage.INormalizeForIsolatedStorage.Normalize%2A> method is called and comparisons are based on the normalized copy of the object returned by that method.","nodes":[{"content":"Isolated storage uses evidence about an assembly in order to identify it and provide it with a unique file storage location. When an assembly requests a store, its evidence (as presented by the host that loaded it) is processed and compared with the evidence used to create the existing stores. This determines if you need to create a new store or if one already exists for the assembly in question. Due to the comparison technique used, pieces of evidence that are functionally equivalent might not result in a true comparison if the serialized forms are not identical. When implementing custom evidence, consider whether this is the case for your evidence class and, if so, implement <xref:System.IO.IsolatedStorage.INormalizeForIsolatedStorage>. For evidence that implements this interface, the <xref:System.IO.IsolatedStorage.INormalizeForIsolatedStorage.Normalize%2A> method is called and comparisons are based on the normalized copy of the object returned by that method.","pos":[0,977],"nodes":[{"content":"Isolated storage uses evidence about an assembly in order to identify it and provide it with a unique file storage location.","pos":[0,124]},{"content":"When an assembly requests a store, its evidence (as presented by the host that loaded it) is processed and compared with the evidence used to create the existing stores.","pos":[125,294]},{"content":"This determines if you need to create a new store or if one already exists for the assembly in question.","pos":[295,399]},{"content":"Due to the comparison technique used, pieces of evidence that are functionally equivalent might not result in a true comparison if the serialized forms are not identical.","pos":[400,570]},{"content":"When implementing custom evidence, consider whether this is the case for your evidence class and, if so, implement <ph id=\"ph1\">&lt;xref:System.IO.IsolatedStorage.INormalizeForIsolatedStorage&gt;</ph>.","pos":[571,748],"source":" When implementing custom evidence, consider whether this is the case for your evidence class and, if so, implement <xref:System.IO.IsolatedStorage.INormalizeForIsolatedStorage>."},{"content":"For evidence that implements this interface, the <ph id=\"ph1\">&lt;xref:System.IO.IsolatedStorage.INormalizeForIsolatedStorage.Normalize%2A&gt;</ph> method is called and comparisons are based on the normalized copy of the object returned by that method.","pos":[749,977],"source":" For evidence that implements this interface, the <xref:System.IO.IsolatedStorage.INormalizeForIsolatedStorage.Normalize%2A> method is called and comparisons are based on the normalized copy of the object returned by that method."}]}]}],"pos":[702,1680],"yaml":true,"extradata":"MT"},{"content":"When overridden in a derived class, returns a normalized copy of the object on which it is called.","nodes":[{"pos":[0,98],"content":"When overridden in a derived class, returns a normalized copy of the object on which it is called.","nodes":[{"content":"When overridden in a derived class, returns a normalized copy of the object on which it is called.","pos":[0,98]}]}],"pos":[3176,3275],"yaml":true},{"content":"A normalized object that represents the instance on which this method was called. This instance can be a string, stream, or any serializable object.","nodes":[{"pos":[0,148],"content":"A normalized object that represents the instance on which this method was called. This instance can be a string, stream, or any serializable object.","nodes":[{"content":"A normalized object that represents the instance on which this method was called. This instance can be a string, stream, or any serializable object.","pos":[0,148],"nodes":[{"content":"A normalized object that represents the instance on which this method was called.","pos":[0,81]},{"content":"This instance can be a string, stream, or any serializable object.","pos":[82,148]}]}]}],"pos":[3402,3551],"yaml":true}],"content":"### YamlMime:ManagedReference\nitems:\n- uid: System.IO.IsolatedStorage.INormalizeForIsolatedStorage\n  commentId: T:System.IO.IsolatedStorage.INormalizeForIsolatedStorage\n  id: INormalizeForIsolatedStorage\n  children:\n  - System.IO.IsolatedStorage.INormalizeForIsolatedStorage.Normalize\n  langs:\n  - csharp\n  name: INormalizeForIsolatedStorage\n  nameWithType: INormalizeForIsolatedStorage\n  fullName: System.IO.IsolatedStorage.INormalizeForIsolatedStorage\n  type: Interface\n  assemblies:\n  - mscorlib\n  - netstandard\n  - System.IO.IsolatedStorage\n  namespace: System.IO.IsolatedStorage\n  summary: Enables comparisons between an isolated store and an application domain and assembly's evidence.\n  remarks: Isolated storage uses evidence about an assembly in order to identify it and provide it with a unique file storage location. When an assembly requests a store, its evidence (as presented by the host that loaded it) is processed and compared with the evidence used to create the existing stores. This determines if you need to create a new store or if one already exists for the assembly in question. Due to the comparison technique used, pieces of evidence that are functionally equivalent might not result in a true comparison if the serialized forms are not identical. When implementing custom evidence, consider whether this is the case for your evidence class and, if so, implement <xref:System.IO.IsolatedStorage.INormalizeForIsolatedStorage>. For evidence that implements this interface, the <xref:System.IO.IsolatedStorage.INormalizeForIsolatedStorage.Normalize%2A> method is called and comparisons are based on the normalized copy of the object returned by that method.\n  syntax:\n    content: >-\n      [System.Runtime.InteropServices.ComVisible(true)]\n\n      public interface INormalizeForIsolatedStorage\n  implements: []\n  attributes:\n  - type: System.Runtime.InteropServices.ComVisibleAttribute\n  version:\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - netstandard-2.0\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  monikers:\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - netstandard-2.0\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.IO.IsolatedStorage/INormalizeForIsolatedStorage.xml\n  ms.technology:\n  - dotnet-standard\n  author: mairaw\n  ms.author: mairaw\n  manager: wpickett\n- uid: System.IO.IsolatedStorage.INormalizeForIsolatedStorage.Normalize\n  commentId: M:System.IO.IsolatedStorage.INormalizeForIsolatedStorage.Normalize\n  id: Normalize\n  parent: System.IO.IsolatedStorage.INormalizeForIsolatedStorage\n  langs:\n  - csharp\n  name: Normalize()\n  nameWithType: INormalizeForIsolatedStorage.Normalize()\n  fullName: INormalizeForIsolatedStorage.Normalize()\n  type: Method\n  assemblies:\n  - mscorlib\n  - netstandard\n  - System.IO.IsolatedStorage\n  namespace: System.IO.IsolatedStorage\n  summary: When overridden in a derived class, returns a normalized copy of the object on which it is called.\n  syntax:\n    content: public object Normalize ();\n    parameters: []\n    return:\n      type: System.Object\n      description: A normalized object that represents the instance on which this method was called. This instance can be a string, stream, or any serializable object.\n  overload: System.IO.IsolatedStorage.INormalizeForIsolatedStorage.Normalize*\n  exceptions: []\n  version:\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - netstandard-2.0\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  monikers:\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - netstandard-2.0\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.IO.IsolatedStorage/INormalizeForIsolatedStorage.xml\n  ms.technology:\n  - dotnet-standard\n  author: mairaw\n  ms.author: mairaw\n  manager: wpickett\nreferences:\n- uid: System.IO.IsolatedStorage.INormalizeForIsolatedStorage.Normalize\n  parent: System.IO.IsolatedStorage.INormalizeForIsolatedStorage\n  isExternal: false\n  name: Normalize()\n  nameWithType: INormalizeForIsolatedStorage.Normalize()\n  fullName: INormalizeForIsolatedStorage.Normalize()\n- uid: System.Object\n  parent: System\n  isExternal: false\n  name: Object\n  nameWithType: Object\n  fullName: System.Object\n- uid: System.IO.IsolatedStorage.INormalizeForIsolatedStorage.Normalize*\n  parent: System.IO.IsolatedStorage.INormalizeForIsolatedStorage\n  isExternal: false\n  name: Normalize\n  nameWithType: INormalizeForIsolatedStorage.Normalize\n  fullName: INormalizeForIsolatedStorage.Normalize\n  monikers:\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - netstandard-2.0\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.IO.IsolatedStorage/INormalizeForIsolatedStorage.xml\n"}