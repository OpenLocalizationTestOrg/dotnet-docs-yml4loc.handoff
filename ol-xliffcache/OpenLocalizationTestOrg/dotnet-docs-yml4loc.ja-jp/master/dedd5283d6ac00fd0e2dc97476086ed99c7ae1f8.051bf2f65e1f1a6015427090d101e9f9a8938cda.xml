{"nodes":[{"content":"Enables setting message-level security properties on the <xref href=\"System.ServiceModel.NetMsmqBinding\"></xref> binding.","nodes":[{"pos":[0,121],"content":"Enables setting message-level security properties on the <ph id=\"ph1\">&lt;xref href=\"System.ServiceModel.NetMsmqBinding\"&gt;&lt;/xref&gt;</ph> binding.","source":"Enables setting message-level security properties on the <xref href=\"System.ServiceModel.NetMsmqBinding\"></xref> binding."}],"pos":[859,981],"yaml":true},{"content":"Initializes a new instance of the <xref href=\"System.ServiceModel.Configuration.MessageSecurityOverMsmqElement\"></xref> class.","nodes":[{"pos":[0,126],"content":"Initializes a new instance of the <ph id=\"ph1\">&lt;xref href=\"System.ServiceModel.Configuration.MessageSecurityOverMsmqElement\"&gt;&lt;/xref&gt;</ph> class.","source":"Initializes a new instance of the <xref href=\"System.ServiceModel.Configuration.MessageSecurityOverMsmqElement\"></xref> class."}],"pos":[5486,5613],"yaml":true},{"content":"Specifies the algorithm suite used for security messages at the SOAP level.","nodes":[{"pos":[0,75],"content":"Specifies the algorithm suite used for security messages at the SOAP level.","nodes":[{"content":"Specifies the algorithm suite used for security messages at the SOAP level.","pos":[0,75]}]}],"pos":[6912,6988],"yaml":true},{"content":"<xref:System.ServiceModel.Security.SecurityAlgorithmSuite> defines a variety of algorithms, such as Canonicalization, Digest, KeyWrap, Signature, Encryption, and KeyDerivation. This property is most relevant when working with a platform that uses a set of algorithms different than the default. You should be aware of the strengths and weaknesses of the relevant algorithms when making modifications to this property.","nodes":[{"pos":[0,417],"content":"<xref:System.ServiceModel.Security.SecurityAlgorithmSuite> defines a variety of algorithms, such as Canonicalization, Digest, KeyWrap, Signature, Encryption, and KeyDerivation. This property is most relevant when working with a platform that uses a set of algorithms different than the default. You should be aware of the strengths and weaknesses of the relevant algorithms when making modifications to this property.","nodes":[{"content":"<xref:System.ServiceModel.Security.SecurityAlgorithmSuite> defines a variety of algorithms, such as Canonicalization, Digest, KeyWrap, Signature, Encryption, and KeyDerivation. This property is most relevant when working with a platform that uses a set of algorithms different than the default. You should be aware of the strengths and weaknesses of the relevant algorithms when making modifications to this property.","pos":[0,417],"nodes":[{"content":"<ph id=\"ph1\">&lt;xref:System.ServiceModel.Security.SecurityAlgorithmSuite&gt;</ph> defines a variety of algorithms, such as Canonicalization, Digest, KeyWrap, Signature, Encryption, and KeyDerivation.","pos":[0,176],"source":"<xref:System.ServiceModel.Security.SecurityAlgorithmSuite> defines a variety of algorithms, such as Canonicalization, Digest, KeyWrap, Signature, Encryption, and KeyDerivation."},{"content":"This property is most relevant when working with a platform that uses a set of algorithms different than the default.","pos":[177,294]},{"content":"You should be aware of the strengths and weaknesses of the relevant algorithms when making modifications to this property.","pos":[295,417]}]}]}],"pos":[6999,7417],"yaml":true,"extradata":"MT"},{"content":"The <xref href=\"System.ServiceModel.Security.SecurityAlgorithmSuite\"></xref> setting for messages sent over the <xref href=\"System.ServiceModel.NetMsmqBinding\"></xref> binding.","nodes":[{"pos":[0,176],"content":"The <ph id=\"ph1\">&lt;xref href=\"System.ServiceModel.Security.SecurityAlgorithmSuite\"&gt;&lt;/xref&gt;</ph> setting for messages sent over the <ph id=\"ph2\">&lt;xref href=\"System.ServiceModel.NetMsmqBinding\"&gt;&lt;/xref&gt;</ph> binding.","source":"The <xref href=\"System.ServiceModel.Security.SecurityAlgorithmSuite\"></xref> setting for messages sent over the <xref href=\"System.ServiceModel.NetMsmqBinding\"></xref> binding."}],"pos":[7871,8048],"yaml":true},{"content":"Gets or sets the <xref href=\"System.ServiceModel.MessageCredentialType\"></xref> security setting for messages sent over the MSMQ transport.","nodes":[{"pos":[0,139],"content":"Gets or sets the <ph id=\"ph1\">&lt;xref href=\"System.ServiceModel.MessageCredentialType\"&gt;&lt;/xref&gt;</ph> security setting for messages sent over the MSMQ transport.","source":"Gets or sets the <xref href=\"System.ServiceModel.MessageCredentialType\"></xref> security setting for messages sent over the MSMQ transport."}],"pos":[9439,9579],"yaml":true},{"content":"This property can be set to one of the following values:  \n  \n-   None: This allows the service to interact with anonymous clients. Neither the service nor the client requires a credential.  \n  \n-   Windows: This enables the SOAP exchanges to be under the authenticated context of a Windows credential. This always performs Kerberos-based authentication.  \n  \n-   UserName: This enables the service to require that the client be authenticated using a UserName credential. This credential needs to be specified using <xref:System.ServiceModel.Description.ClientCredentials> class.  \n  \n    > [!NOTE]\n    >  [!INCLUDE[indigo2](~/includes/indigo2-md.md)] does not support sending a password digest or deriving keys using password and using such keys for message security. As such, [!INCLUDE[indigo2](~/includes/indigo2-md.md)] enforces that the exchange is secured when using UserName credentials. This mode requires that the service certificate be specified on the client side using ClientCredential behavior and serviceCertificate.  \n  \n-   Certificate: This enables the service to require that the client be authenticated using a certificate. The client credential in this case needs to be specified using the <xref:System.ServiceModel.Description.ClientCredentials> class or ClientCredentials behavior. The service credential in this case needs to be specified using the <xref:System.ServiceModel.Description.ClientCredentials> class or ClientCredentials behavior by specifying the serviceCertificate.  \n  \n-   CardSpace: This allows the service to require that the client be authenticated using a [!INCLUDE[infocard1](~/includes/infocard1-md.md)]. The serviceCertiifcate must be provisioned in the ClientCredential behavior.  \n  \n The Certificate credential for the `MessageSecurityOverMsmq` is relevant only when the security mode is set to `Both` or `Message`.","nodes":[{"pos":[0,56],"content":"This property can be set to one of the following values:","nodes":[{"content":"This property can be set to one of the following values:","pos":[0,56]}]},{"pos":[66,189],"content":"None: This allows the service to interact with anonymous clients. Neither the service nor the client requires a credential.","nodes":[{"content":"None: This allows the service to interact with anonymous clients. Neither the service nor the client requires a credential.","pos":[0,123],"nodes":[{"content":"None: This allows the service to interact with anonymous clients.","pos":[0,65]},{"content":"Neither the service nor the client requires a credential.","pos":[66,123]}]}]},{"pos":[199,354],"content":"Windows: This enables the SOAP exchanges to be under the authenticated context of a Windows credential. This always performs Kerberos-based authentication.","nodes":[{"content":"Windows: This enables the SOAP exchanges to be under the authenticated context of a Windows credential. This always performs Kerberos-based authentication.","pos":[0,155],"nodes":[{"content":"Windows: This enables the SOAP exchanges to be under the authenticated context of a Windows credential.","pos":[0,103]},{"content":"This always performs Kerberos-based authentication.","pos":[104,155]}]}]},{"pos":[364,579],"content":"UserName: This enables the service to require that the client be authenticated using a UserName credential. This credential needs to be specified using <xref:System.ServiceModel.Description.ClientCredentials> class.","nodes":[{"content":"UserName: This enables the service to require that the client be authenticated using a UserName credential. This credential needs to be specified using <xref:System.ServiceModel.Description.ClientCredentials> class.","pos":[0,215],"nodes":[{"content":"UserName: This enables the service to require that the client be authenticated using a UserName credential.","pos":[0,107]},{"content":"This credential needs to be specified using <ph id=\"ph1\">&lt;xref:System.ServiceModel.Description.ClientCredentials&gt;</ph> class.","pos":[108,215],"source":" This credential needs to be specified using <xref:System.ServiceModel.Description.ClientCredentials> class."}]}]},{"pos":[591,1030],"content":"[!NOTE]\n[!INCLUDE[indigo2](~/includes/indigo2-md.md)] does not support sending a password digest or deriving keys using password and using such keys for message security. As such, [!INCLUDE[indigo2](~/includes/indigo2-md.md)] enforces that the exchange is secured when using UserName credentials. This mode requires that the service certificate be specified on the client side using ClientCredential behavior and serviceCertificate.","leadings":["","    >  "],"nodes":[{"content":"[!INCLUDE[indigo2](~/includes/indigo2-md.md)] does not support sending a password digest or deriving keys using password and using such keys for message security. As such, [!INCLUDE[indigo2](~/includes/indigo2-md.md)] enforces that the exchange is secured when using UserName credentials. This mode requires that the service certificate be specified on the client side using ClientCredential behavior and serviceCertificate.","pos":[8,432],"nodes":[{"content":"<ph id=\"ph1\">[!INCLUDE[indigo2](~/includes/indigo2-md.md)]</ph> does not support sending a password digest or deriving keys using password and using such keys for message security.","pos":[0,162],"source":"[!INCLUDE[indigo2](~/includes/indigo2-md.md)] does not support sending a password digest or deriving keys using password and using such keys for message security."},{"content":"As such, <ph id=\"ph1\">[!INCLUDE[indigo2](~/includes/indigo2-md.md)]</ph> enforces that the exchange is secured when using UserName credentials.","pos":[163,288],"source":" As such, [!INCLUDE[indigo2](~/includes/indigo2-md.md)] enforces that the exchange is secured when using UserName credentials."},{"content":"This mode requires that the service certificate be specified on the client side using ClientCredential behavior and serviceCertificate.","pos":[289,424]}]}]},{"pos":[1040,1502],"content":"Certificate: This enables the service to require that the client be authenticated using a certificate. The client credential in this case needs to be specified using the <xref:System.ServiceModel.Description.ClientCredentials> class or ClientCredentials behavior. The service credential in this case needs to be specified using the <xref:System.ServiceModel.Description.ClientCredentials> class or ClientCredentials behavior by specifying the serviceCertificate.","nodes":[{"content":"Certificate: This enables the service to require that the client be authenticated using a certificate. The client credential in this case needs to be specified using the <xref:System.ServiceModel.Description.ClientCredentials> class or ClientCredentials behavior. The service credential in this case needs to be specified using the <xref:System.ServiceModel.Description.ClientCredentials> class or ClientCredentials behavior by specifying the serviceCertificate.","pos":[0,462],"nodes":[{"content":"Certificate: This enables the service to require that the client be authenticated using a certificate.","pos":[0,102]},{"content":"The client credential in this case needs to be specified using the <ph id=\"ph1\">&lt;xref:System.ServiceModel.Description.ClientCredentials&gt;</ph> class or ClientCredentials behavior.","pos":[103,263],"source":" The client credential in this case needs to be specified using the <xref:System.ServiceModel.Description.ClientCredentials> class or ClientCredentials behavior."},{"content":"The service credential in this case needs to be specified using the <ph id=\"ph1\">&lt;xref:System.ServiceModel.Description.ClientCredentials&gt;</ph> class or ClientCredentials behavior by specifying the serviceCertificate.","pos":[264,462],"source":" The service credential in this case needs to be specified using the <xref:System.ServiceModel.Description.ClientCredentials> class or ClientCredentials behavior by specifying the serviceCertificate."}]}]},{"pos":[1512,1726],"content":"CardSpace: This allows the service to require that the client be authenticated using a [!INCLUDE[infocard1](~/includes/infocard1-md.md)]. The serviceCertiifcate must be provisioned in the ClientCredential behavior.","nodes":[{"content":"CardSpace: This allows the service to require that the client be authenticated using a <ph id=\"ph1\">[!INCLUDE[infocard1](~/includes/infocard1-md.md)]</ph>.","pos":[0,137],"source":"CardSpace: This allows the service to require that the client be authenticated using a [!INCLUDE[infocard1](~/includes/infocard1-md.md)]."},{"content":"The serviceCertiifcate must be provisioned in the ClientCredential behavior.","pos":[138,214]}]},{"pos":[1733,1864],"content":"The Certificate credential for the <ph id=\"ph1\">`MessageSecurityOverMsmq`</ph> is relevant only when the security mode is set to <ph id=\"ph2\">`Both`</ph> or <ph id=\"ph3\">`Message`</ph>.","source":"The Certificate credential for the `MessageSecurityOverMsmq` is relevant only when the security mode is set to `Both` or `Message`."}],"pos":[9590,11472],"yaml":true,"extradata":"MT"},{"content":"The <xref href=\"System.ServiceModel.MessageCredentialType\"></xref> security setting for messages sent over the MSMQ transport.","nodes":[{"pos":[0,126],"content":"The <ph id=\"ph1\">&lt;xref href=\"System.ServiceModel.MessageCredentialType\"&gt;&lt;/xref&gt;</ph> security setting for messages sent over the MSMQ transport.","source":"The <xref href=\"System.ServiceModel.MessageCredentialType\"></xref> security setting for messages sent over the MSMQ transport."}],"pos":[11798,11925],"yaml":true}],"content":"### YamlMime:ManagedReference\nitems:\n- uid: System.ServiceModel.Configuration.MessageSecurityOverMsmqElement\n  commentId: T:System.ServiceModel.Configuration.MessageSecurityOverMsmqElement\n  id: MessageSecurityOverMsmqElement\n  children:\n  - System.ServiceModel.Configuration.MessageSecurityOverMsmqElement.#ctor\n  - System.ServiceModel.Configuration.MessageSecurityOverMsmqElement.AlgorithmSuite\n  - System.ServiceModel.Configuration.MessageSecurityOverMsmqElement.ClientCredentialType\n  - System.ServiceModel.Configuration.MessageSecurityOverMsmqElement.Properties\n  langs:\n  - csharp\n  name: MessageSecurityOverMsmqElement\n  nameWithType: MessageSecurityOverMsmqElement\n  fullName: System.ServiceModel.Configuration.MessageSecurityOverMsmqElement\n  type: Class\n  assemblies:\n  - System.ServiceModel\n  namespace: System.ServiceModel.Configuration\n  summary: Enables setting message-level security properties on the <xref href=\"System.ServiceModel.NetMsmqBinding\"></xref> binding.\n  syntax:\n    content: 'public sealed class MessageSecurityOverMsmqElement : System.ServiceModel.Configuration.ServiceModelConfigurationElement'\n  inheritance:\n  - System.Object\n  - System.Configuration.ConfigurationElement\n  - System.ServiceModel.Configuration.ServiceModelConfigurationElement\n  implements: []\n  inheritedMembers:\n  - System.Configuration.ConfigurationElement.CurrentConfiguration\n  - System.Configuration.ConfigurationElement.DeserializeElement(System.Xml.XmlReader,System.Boolean)\n  - System.Configuration.ConfigurationElement.ElementInformation\n  - System.Configuration.ConfigurationElement.ElementProperty\n  - System.Configuration.ConfigurationElement.Equals(System.Object)\n  - System.Configuration.ConfigurationElement.EvaluationContext\n  - System.Configuration.ConfigurationElement.GetHashCode\n  - System.Configuration.ConfigurationElement.GetTransformedAssemblyString(System.String)\n  - System.Configuration.ConfigurationElement.GetTransformedTypeString(System.String)\n  - System.Configuration.ConfigurationElement.HasContext\n  - System.Configuration.ConfigurationElement.Init\n  - System.Configuration.ConfigurationElement.InitializeDefault\n  - System.Configuration.ConfigurationElement.IsModified\n  - System.Configuration.ConfigurationElement.IsReadOnly\n  - System.Configuration.ConfigurationElement.Item(System.Configuration.ConfigurationProperty)\n  - System.Configuration.ConfigurationElement.Item(System.String)\n  - System.Configuration.ConfigurationElement.ListErrors(System.Collections.IList)\n  - System.Configuration.ConfigurationElement.LockAllAttributesExcept\n  - System.Configuration.ConfigurationElement.LockAllElementsExcept\n  - System.Configuration.ConfigurationElement.LockAttributes\n  - System.Configuration.ConfigurationElement.LockElements\n  - System.Configuration.ConfigurationElement.LockItem\n  - System.Configuration.ConfigurationElement.OnDeserializeUnrecognizedAttribute(System.String,System.String)\n  - System.Configuration.ConfigurationElement.OnDeserializeUnrecognizedElement(System.String,System.Xml.XmlReader)\n  - System.Configuration.ConfigurationElement.OnRequiredPropertyNotFound(System.String)\n  - System.Configuration.ConfigurationElement.PostDeserialize\n  - System.Configuration.ConfigurationElement.PreSerialize(System.Xml.XmlWriter)\n  - System.Configuration.ConfigurationElement.Reset(System.Configuration.ConfigurationElement)\n  - System.Configuration.ConfigurationElement.ResetModified\n  - System.Configuration.ConfigurationElement.SerializeElement(System.Xml.XmlWriter,System.Boolean)\n  - System.Configuration.ConfigurationElement.SerializeToXmlElement(System.Xml.XmlWriter,System.String)\n  - System.Configuration.ConfigurationElement.SetPropertyValue(System.Configuration.ConfigurationProperty,System.Object,System.Boolean)\n  - System.Configuration.ConfigurationElement.SetReadOnly\n  - System.Configuration.ConfigurationElement.Unmerge(System.Configuration.ConfigurationElement,System.Configuration.ConfigurationElement,System.Configuration.ConfigurationSaveMode)\n  - System.Object.Equals(System.Object,System.Object)\n  - System.Object.GetType\n  - System.Object.MemberwiseClone\n  - System.Object.ReferenceEquals(System.Object,System.Object)\n  - System.Object.ToString\n  - System.ServiceModel.Configuration.ServiceModelConfigurationElement.SetPropertyValueIfNotDefaultValue``1(System.String,``0)\n  version:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.ServiceModel.Configuration/MessageSecurityOverMsmqElement.xml\n  ms.technology:\n  - dotnet-standard\n  author: Erikre\n  ms.author: erikre\n  manager: erikre\n- uid: System.ServiceModel.Configuration.MessageSecurityOverMsmqElement.#ctor\n  commentId: M:System.ServiceModel.Configuration.MessageSecurityOverMsmqElement.#ctor\n  id: '#ctor'\n  parent: System.ServiceModel.Configuration.MessageSecurityOverMsmqElement\n  langs:\n  - csharp\n  name: MessageSecurityOverMsmqElement()\n  nameWithType: MessageSecurityOverMsmqElement.MessageSecurityOverMsmqElement()\n  fullName: MessageSecurityOverMsmqElement.MessageSecurityOverMsmqElement()\n  type: Constructor\n  assemblies:\n  - System.ServiceModel\n  namespace: System.ServiceModel.Configuration\n  summary: Initializes a new instance of the <xref href=\"System.ServiceModel.Configuration.MessageSecurityOverMsmqElement\"></xref> class.\n  syntax:\n    content: public MessageSecurityOverMsmqElement ();\n    parameters: []\n  overload: System.ServiceModel.Configuration.MessageSecurityOverMsmqElement.#ctor*\n  exceptions: []\n  version:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.ServiceModel.Configuration/MessageSecurityOverMsmqElement.xml\n  ms.technology:\n  - dotnet-standard\n  author: Erikre\n  ms.author: erikre\n  manager: erikre\n- uid: System.ServiceModel.Configuration.MessageSecurityOverMsmqElement.AlgorithmSuite\n  commentId: P:System.ServiceModel.Configuration.MessageSecurityOverMsmqElement.AlgorithmSuite\n  id: AlgorithmSuite\n  parent: System.ServiceModel.Configuration.MessageSecurityOverMsmqElement\n  langs:\n  - csharp\n  name: AlgorithmSuite\n  nameWithType: MessageSecurityOverMsmqElement.AlgorithmSuite\n  fullName: MessageSecurityOverMsmqElement.AlgorithmSuite\n  type: Property\n  assemblies:\n  - System.ServiceModel\n  namespace: System.ServiceModel.Configuration\n  summary: Specifies the algorithm suite used for security messages at the SOAP level.\n  remarks: <xref:System.ServiceModel.Security.SecurityAlgorithmSuite> defines a variety of algorithms, such as Canonicalization, Digest, KeyWrap, Signature, Encryption, and KeyDerivation. This property is most relevant when working with a platform that uses a set of algorithms different than the default. You should be aware of the strengths and weaknesses of the relevant algorithms when making modifications to this property.\n  syntax:\n    content: >-\n      [System.ComponentModel.TypeConverter(typeof(System.ServiceModel.Configuration.SecurityAlgorithmSuiteConverter))]\n\n      [System.Configuration.ConfigurationProperty(\"algorithmSuite\", DefaultValue=Mono.Cecil.CustomAttributeArgument)]\n\n      public System.ServiceModel.Security.SecurityAlgorithmSuite AlgorithmSuite { get; set; }\n    return:\n      type: System.ServiceModel.Security.SecurityAlgorithmSuite\n      description: The <xref href=\"System.ServiceModel.Security.SecurityAlgorithmSuite\"></xref> setting for messages sent over the <xref href=\"System.ServiceModel.NetMsmqBinding\"></xref> binding.\n  overload: System.ServiceModel.Configuration.MessageSecurityOverMsmqElement.AlgorithmSuite*\n  exceptions: []\n  attributes:\n  - type: System.ComponentModel.TypeConverterAttribute\n  - type: System.Configuration.ConfigurationPropertyAttribute\n  version:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.ServiceModel.Configuration/MessageSecurityOverMsmqElement.xml\n  ms.technology:\n  - dotnet-standard\n  author: Erikre\n  ms.author: erikre\n  manager: erikre\n- uid: System.ServiceModel.Configuration.MessageSecurityOverMsmqElement.ClientCredentialType\n  commentId: P:System.ServiceModel.Configuration.MessageSecurityOverMsmqElement.ClientCredentialType\n  id: ClientCredentialType\n  parent: System.ServiceModel.Configuration.MessageSecurityOverMsmqElement\n  langs:\n  - csharp\n  name: ClientCredentialType\n  nameWithType: MessageSecurityOverMsmqElement.ClientCredentialType\n  fullName: MessageSecurityOverMsmqElement.ClientCredentialType\n  type: Property\n  assemblies:\n  - System.ServiceModel\n  namespace: System.ServiceModel.Configuration\n  summary: Gets or sets the <xref href=\"System.ServiceModel.MessageCredentialType\"></xref> security setting for messages sent over the MSMQ transport.\n  remarks: \"This property can be set to one of the following values:  \\n  \\n-   None: This allows the service to interact with anonymous clients. Neither the service nor the client requires a credential.  \\n  \\n-   Windows: This enables the SOAP exchanges to be under the authenticated context of a Windows credential. This always performs Kerberos-based authentication.  \\n  \\n-   UserName: This enables the service to require that the client be authenticated using a UserName credential. This credential needs to be specified using <xref:System.ServiceModel.Description.ClientCredentials> class.  \\n  \\n    > [!NOTE]\\n    >  [!INCLUDE[indigo2](~/includes/indigo2-md.md)] does not support sending a password digest or deriving keys using password and using such keys for message security. As such, [!INCLUDE[indigo2](~/includes/indigo2-md.md)] enforces that the exchange is secured when using UserName credentials. This mode requires that the service certificate be specified on the client side using ClientCredential behavior and serviceCertificate.  \\n  \\n-   Certificate: This enables the service to require that the client be authenticated using a certificate. The client credential in this case needs to be specified using the <xref:System.ServiceModel.Description.ClientCredentials> class or ClientCredentials behavior. The service credential in this case needs to be specified using the <xref:System.ServiceModel.Description.ClientCredentials> class or ClientCredentials behavior by specifying the serviceCertificate.  \\n  \\n-   CardSpace: This allows the service to require that the client be authenticated using a [!INCLUDE[infocard1](~/includes/infocard1-md.md)]. The serviceCertiifcate must be provisioned in the ClientCredential behavior.  \\n  \\n The Certificate credential for the `MessageSecurityOverMsmq` is relevant only when the security mode is set to `Both` or `Message`.\"\n  syntax:\n    content: >-\n      [System.Configuration.ConfigurationProperty(\"clientCredentialType\", DefaultValue=Mono.Cecil.CustomAttributeArgument)]\n\n      public System.ServiceModel.MessageCredentialType ClientCredentialType { get; set; }\n    return:\n      type: System.ServiceModel.MessageCredentialType\n      description: The <xref href=\"System.ServiceModel.MessageCredentialType\"></xref> security setting for messages sent over the MSMQ transport.\n  overload: System.ServiceModel.Configuration.MessageSecurityOverMsmqElement.ClientCredentialType*\n  exceptions: []\n  attributes:\n  - type: System.Configuration.ConfigurationPropertyAttribute\n  version:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.ServiceModel.Configuration/MessageSecurityOverMsmqElement.xml\n  ms.technology:\n  - dotnet-standard\n  author: Erikre\n  ms.author: erikre\n  manager: erikre\n- uid: System.ServiceModel.Configuration.MessageSecurityOverMsmqElement.Properties\n  commentId: P:System.ServiceModel.Configuration.MessageSecurityOverMsmqElement.Properties\n  id: Properties\n  parent: System.ServiceModel.Configuration.MessageSecurityOverMsmqElement\n  langs:\n  - csharp\n  name: Properties\n  nameWithType: MessageSecurityOverMsmqElement.Properties\n  fullName: MessageSecurityOverMsmqElement.Properties\n  type: Property\n  assemblies:\n  - System.ServiceModel\n  namespace: System.ServiceModel.Configuration\n  syntax:\n    content: protected override System.Configuration.ConfigurationPropertyCollection Properties { get; }\n    return:\n      type: System.Configuration.ConfigurationPropertyCollection\n      description: ''\n  overload: System.ServiceModel.Configuration.MessageSecurityOverMsmqElement.Properties*\n  exceptions: []\n  version:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.ServiceModel.Configuration/MessageSecurityOverMsmqElement.xml\nreferences:\n- uid: System.ServiceModel.Configuration.ServiceModelConfigurationElement\n  parent: System.ServiceModel.Configuration\n  isExternal: false\n  name: ServiceModelConfigurationElement\n  nameWithType: ServiceModelConfigurationElement\n  fullName: System.ServiceModel.Configuration.ServiceModelConfigurationElement\n- uid: System.ServiceModel.Configuration.MessageSecurityOverMsmqElement.#ctor\n  parent: System.ServiceModel.Configuration.MessageSecurityOverMsmqElement\n  isExternal: false\n  name: MessageSecurityOverMsmqElement()\n  nameWithType: MessageSecurityOverMsmqElement.MessageSecurityOverMsmqElement()\n  fullName: MessageSecurityOverMsmqElement.MessageSecurityOverMsmqElement()\n- uid: System.ServiceModel.Configuration.MessageSecurityOverMsmqElement.AlgorithmSuite\n  parent: System.ServiceModel.Configuration.MessageSecurityOverMsmqElement\n  isExternal: false\n  name: AlgorithmSuite\n  nameWithType: MessageSecurityOverMsmqElement.AlgorithmSuite\n  fullName: MessageSecurityOverMsmqElement.AlgorithmSuite\n- uid: System.ServiceModel.Security.SecurityAlgorithmSuite\n  parent: System.ServiceModel.Security\n  isExternal: false\n  name: SecurityAlgorithmSuite\n  nameWithType: SecurityAlgorithmSuite\n  fullName: System.ServiceModel.Security.SecurityAlgorithmSuite\n- uid: System.ServiceModel.Configuration.MessageSecurityOverMsmqElement.ClientCredentialType\n  parent: System.ServiceModel.Configuration.MessageSecurityOverMsmqElement\n  isExternal: false\n  name: ClientCredentialType\n  nameWithType: MessageSecurityOverMsmqElement.ClientCredentialType\n  fullName: MessageSecurityOverMsmqElement.ClientCredentialType\n- uid: System.ServiceModel.MessageCredentialType\n  parent: System.ServiceModel\n  isExternal: false\n  name: MessageCredentialType\n  nameWithType: MessageCredentialType\n  fullName: System.ServiceModel.MessageCredentialType\n- uid: System.ServiceModel.Configuration.MessageSecurityOverMsmqElement.Properties\n  parent: System.ServiceModel.Configuration.MessageSecurityOverMsmqElement\n  isExternal: false\n  name: Properties\n  nameWithType: MessageSecurityOverMsmqElement.Properties\n  fullName: MessageSecurityOverMsmqElement.Properties\n- uid: System.Configuration.ConfigurationPropertyCollection\n  parent: System.Configuration\n  isExternal: false\n  name: ConfigurationPropertyCollection\n  nameWithType: ConfigurationPropertyCollection\n  fullName: System.Configuration.ConfigurationPropertyCollection\n- uid: System.ServiceModel.Configuration.MessageSecurityOverMsmqElement.#ctor*\n  parent: System.ServiceModel.Configuration.MessageSecurityOverMsmqElement\n  isExternal: false\n  name: MessageSecurityOverMsmqElement\n  nameWithType: MessageSecurityOverMsmqElement.MessageSecurityOverMsmqElement\n  fullName: MessageSecurityOverMsmqElement.MessageSecurityOverMsmqElement\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.ServiceModel.Configuration/MessageSecurityOverMsmqElement.xml\n- uid: System.ServiceModel.Configuration.MessageSecurityOverMsmqElement.AlgorithmSuite*\n  parent: System.ServiceModel.Configuration.MessageSecurityOverMsmqElement\n  isExternal: false\n  name: AlgorithmSuite\n  nameWithType: MessageSecurityOverMsmqElement.AlgorithmSuite\n  fullName: MessageSecurityOverMsmqElement.AlgorithmSuite\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.ServiceModel.Configuration/MessageSecurityOverMsmqElement.xml\n- uid: System.ServiceModel.Configuration.MessageSecurityOverMsmqElement.ClientCredentialType*\n  parent: System.ServiceModel.Configuration.MessageSecurityOverMsmqElement\n  isExternal: false\n  name: ClientCredentialType\n  nameWithType: MessageSecurityOverMsmqElement.ClientCredentialType\n  fullName: MessageSecurityOverMsmqElement.ClientCredentialType\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.ServiceModel.Configuration/MessageSecurityOverMsmqElement.xml\n- uid: System.ServiceModel.Configuration.MessageSecurityOverMsmqElement.Properties*\n  parent: System.ServiceModel.Configuration.MessageSecurityOverMsmqElement\n  isExternal: false\n  name: Properties\n  nameWithType: MessageSecurityOverMsmqElement.Properties\n  fullName: MessageSecurityOverMsmqElement.Properties\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.ServiceModel.Configuration/MessageSecurityOverMsmqElement.xml\n- uid: System.Configuration.ConfigurationElement.Equals(System.Object)\n  parent: System.Configuration.ConfigurationElement\n  isExternal: false\n  name: Equals(Object)\n  nameWithType: ConfigurationElement.Equals(Object)\n  fullName: ConfigurationElement.Equals(Object)\n- uid: System.Object.Equals(System.Object,System.Object)\n  parent: System.Object\n  isExternal: false\n  name: Equals(Object, Object)\n  nameWithType: Object.Equals(Object, Object)\n  fullName: Object.Equals(Object, Object)\n- uid: System.Configuration.ConfigurationElement.GetHashCode\n  parent: System.Configuration.ConfigurationElement\n  isExternal: false\n  name: GetHashCode()\n  nameWithType: ConfigurationElement.GetHashCode()\n  fullName: ConfigurationElement.GetHashCode()\n- uid: System.Object.GetType\n  parent: System.Object\n  isExternal: false\n  name: GetType()\n  nameWithType: Object.GetType()\n  fullName: Object.GetType()\n- uid: System.Object.MemberwiseClone\n  parent: System.Object\n  isExternal: false\n  name: MemberwiseClone()\n  nameWithType: Object.MemberwiseClone()\n  fullName: Object.MemberwiseClone()\n- uid: System.Object.ReferenceEquals(System.Object,System.Object)\n  parent: System.Object\n  isExternal: false\n  name: ReferenceEquals(Object, Object)\n  nameWithType: Object.ReferenceEquals(Object, Object)\n  fullName: Object.ReferenceEquals(Object, Object)\n- uid: System.Object.ToString\n  parent: System.Object\n  isExternal: false\n  name: ToString()\n  nameWithType: Object.ToString()\n  fullName: Object.ToString()\n- uid: System.Configuration.ConfigurationElement.CurrentConfiguration\n  parent: System.Configuration.ConfigurationElement\n  isExternal: false\n  name: CurrentConfiguration\n  nameWithType: ConfigurationElement.CurrentConfiguration\n  fullName: ConfigurationElement.CurrentConfiguration\n- uid: System.Configuration.ConfigurationElement.DeserializeElement(System.Xml.XmlReader,System.Boolean)\n  parent: System.Configuration.ConfigurationElement\n  isExternal: false\n  name: DeserializeElement(XmlReader, Boolean)\n  nameWithType: ConfigurationElement.DeserializeElement(XmlReader, Boolean)\n  fullName: ConfigurationElement.DeserializeElement(XmlReader, Boolean)\n- uid: System.Configuration.ConfigurationElement.ElementInformation\n  parent: System.Configuration.ConfigurationElement\n  isExternal: false\n  name: ElementInformation\n  nameWithType: ConfigurationElement.ElementInformation\n  fullName: ConfigurationElement.ElementInformation\n- uid: System.Configuration.ConfigurationElement.ElementProperty\n  parent: System.Configuration.ConfigurationElement\n  isExternal: false\n  name: ElementProperty\n  nameWithType: ConfigurationElement.ElementProperty\n  fullName: ConfigurationElement.ElementProperty\n- uid: System.Configuration.ConfigurationElement.EvaluationContext\n  parent: System.Configuration.ConfigurationElement\n  isExternal: false\n  name: EvaluationContext\n  nameWithType: ConfigurationElement.EvaluationContext\n  fullName: ConfigurationElement.EvaluationContext\n- uid: System.Configuration.ConfigurationElement.GetTransformedAssemblyString(System.String)\n  parent: System.Configuration.ConfigurationElement\n  isExternal: false\n  name: GetTransformedAssemblyString(String)\n  nameWithType: ConfigurationElement.GetTransformedAssemblyString(String)\n  fullName: ConfigurationElement.GetTransformedAssemblyString(String)\n- uid: System.Configuration.ConfigurationElement.GetTransformedTypeString(System.String)\n  parent: System.Configuration.ConfigurationElement\n  isExternal: false\n  name: GetTransformedTypeString(String)\n  nameWithType: ConfigurationElement.GetTransformedTypeString(String)\n  fullName: ConfigurationElement.GetTransformedTypeString(String)\n- uid: System.Configuration.ConfigurationElement.HasContext\n  parent: System.Configuration.ConfigurationElement\n  isExternal: false\n  name: HasContext\n  nameWithType: ConfigurationElement.HasContext\n  fullName: ConfigurationElement.HasContext\n- uid: System.Configuration.ConfigurationElement.Init\n  parent: System.Configuration.ConfigurationElement\n  isExternal: false\n  name: Init()\n  nameWithType: ConfigurationElement.Init()\n  fullName: ConfigurationElement.Init()\n- uid: System.Configuration.ConfigurationElement.InitializeDefault\n  parent: System.Configuration.ConfigurationElement\n  isExternal: false\n  name: InitializeDefault()\n  nameWithType: ConfigurationElement.InitializeDefault()\n  fullName: ConfigurationElement.InitializeDefault()\n- uid: System.Configuration.ConfigurationElement.IsModified\n  parent: System.Configuration.ConfigurationElement\n  isExternal: false\n  name: IsModified()\n  nameWithType: ConfigurationElement.IsModified()\n  fullName: ConfigurationElement.IsModified()\n- uid: System.Configuration.ConfigurationElement.IsReadOnly\n  parent: System.Configuration.ConfigurationElement\n  isExternal: false\n  name: IsReadOnly()\n  nameWithType: ConfigurationElement.IsReadOnly()\n  fullName: ConfigurationElement.IsReadOnly()\n- uid: System.Configuration.ConfigurationElement.Item(System.Configuration.ConfigurationProperty)\n  parent: System.Configuration.ConfigurationElement\n  isExternal: false\n  name: Item(ConfigurationProperty)\n  nameWithType: ConfigurationElement.Item(ConfigurationProperty)\n  fullName: ConfigurationElement.Item(ConfigurationProperty)\n- uid: System.Configuration.ConfigurationElement.Item(System.String)\n  parent: System.Configuration.ConfigurationElement\n  isExternal: false\n  name: Item(String)\n  nameWithType: ConfigurationElement.Item(String)\n  fullName: ConfigurationElement.Item(String)\n- uid: System.Configuration.ConfigurationElement.ListErrors(System.Collections.IList)\n  parent: System.Configuration.ConfigurationElement\n  isExternal: false\n  name: ListErrors(IList)\n  nameWithType: ConfigurationElement.ListErrors(IList)\n  fullName: ConfigurationElement.ListErrors(IList)\n- uid: System.Configuration.ConfigurationElement.LockAllAttributesExcept\n  parent: System.Configuration.ConfigurationElement\n  isExternal: false\n  name: LockAllAttributesExcept\n  nameWithType: ConfigurationElement.LockAllAttributesExcept\n  fullName: ConfigurationElement.LockAllAttributesExcept\n- uid: System.Configuration.ConfigurationElement.LockAllElementsExcept\n  parent: System.Configuration.ConfigurationElement\n  isExternal: false\n  name: LockAllElementsExcept\n  nameWithType: ConfigurationElement.LockAllElementsExcept\n  fullName: ConfigurationElement.LockAllElementsExcept\n- uid: System.Configuration.ConfigurationElement.LockAttributes\n  parent: System.Configuration.ConfigurationElement\n  isExternal: false\n  name: LockAttributes\n  nameWithType: ConfigurationElement.LockAttributes\n  fullName: ConfigurationElement.LockAttributes\n- uid: System.Configuration.ConfigurationElement.LockElements\n  parent: System.Configuration.ConfigurationElement\n  isExternal: false\n  name: LockElements\n  nameWithType: ConfigurationElement.LockElements\n  fullName: ConfigurationElement.LockElements\n- uid: System.Configuration.ConfigurationElement.LockItem\n  parent: System.Configuration.ConfigurationElement\n  isExternal: false\n  name: LockItem\n  nameWithType: ConfigurationElement.LockItem\n  fullName: ConfigurationElement.LockItem\n- uid: System.Configuration.ConfigurationElement.OnDeserializeUnrecognizedAttribute(System.String,System.String)\n  parent: System.Configuration.ConfigurationElement\n  isExternal: false\n  name: OnDeserializeUnrecognizedAttribute(String, String)\n  nameWithType: ConfigurationElement.OnDeserializeUnrecognizedAttribute(String, String)\n  fullName: ConfigurationElement.OnDeserializeUnrecognizedAttribute(String, String)\n- uid: System.Configuration.ConfigurationElement.OnDeserializeUnrecognizedElement(System.String,System.Xml.XmlReader)\n  parent: System.Configuration.ConfigurationElement\n  isExternal: false\n  name: OnDeserializeUnrecognizedElement(String, XmlReader)\n  nameWithType: ConfigurationElement.OnDeserializeUnrecognizedElement(String, XmlReader)\n  fullName: ConfigurationElement.OnDeserializeUnrecognizedElement(String, XmlReader)\n- uid: System.Configuration.ConfigurationElement.OnRequiredPropertyNotFound(System.String)\n  parent: System.Configuration.ConfigurationElement\n  isExternal: false\n  name: OnRequiredPropertyNotFound(String)\n  nameWithType: ConfigurationElement.OnRequiredPropertyNotFound(String)\n  fullName: ConfigurationElement.OnRequiredPropertyNotFound(String)\n- uid: System.Configuration.ConfigurationElement.PostDeserialize\n  parent: System.Configuration.ConfigurationElement\n  isExternal: false\n  name: PostDeserialize()\n  nameWithType: ConfigurationElement.PostDeserialize()\n  fullName: ConfigurationElement.PostDeserialize()\n- uid: System.Configuration.ConfigurationElement.PreSerialize(System.Xml.XmlWriter)\n  parent: System.Configuration.ConfigurationElement\n  isExternal: false\n  name: PreSerialize(XmlWriter)\n  nameWithType: ConfigurationElement.PreSerialize(XmlWriter)\n  fullName: ConfigurationElement.PreSerialize(XmlWriter)\n- uid: System.Configuration.ConfigurationElement.Reset(System.Configuration.ConfigurationElement)\n  parent: System.Configuration.ConfigurationElement\n  isExternal: false\n  name: Reset(ConfigurationElement)\n  nameWithType: ConfigurationElement.Reset(ConfigurationElement)\n  fullName: ConfigurationElement.Reset(ConfigurationElement)\n- uid: System.Configuration.ConfigurationElement.ResetModified\n  parent: System.Configuration.ConfigurationElement\n  isExternal: false\n  name: ResetModified()\n  nameWithType: ConfigurationElement.ResetModified()\n  fullName: ConfigurationElement.ResetModified()\n- uid: System.Configuration.ConfigurationElement.SerializeElement(System.Xml.XmlWriter,System.Boolean)\n  parent: System.Configuration.ConfigurationElement\n  isExternal: false\n  name: SerializeElement(XmlWriter, Boolean)\n  nameWithType: ConfigurationElement.SerializeElement(XmlWriter, Boolean)\n  fullName: ConfigurationElement.SerializeElement(XmlWriter, Boolean)\n- uid: System.Configuration.ConfigurationElement.SerializeToXmlElement(System.Xml.XmlWriter,System.String)\n  parent: System.Configuration.ConfigurationElement\n  isExternal: false\n  name: SerializeToXmlElement(XmlWriter, String)\n  nameWithType: ConfigurationElement.SerializeToXmlElement(XmlWriter, String)\n  fullName: ConfigurationElement.SerializeToXmlElement(XmlWriter, String)\n- uid: System.Configuration.ConfigurationElement.SetPropertyValue(System.Configuration.ConfigurationProperty,System.Object,System.Boolean)\n  parent: System.Configuration.ConfigurationElement\n  isExternal: false\n  name: SetPropertyValue(ConfigurationProperty, Object, Boolean)\n  nameWithType: ConfigurationElement.SetPropertyValue(ConfigurationProperty, Object, Boolean)\n  fullName: ConfigurationElement.SetPropertyValue(ConfigurationProperty, Object, Boolean)\n- uid: System.Configuration.ConfigurationElement.SetReadOnly\n  parent: System.Configuration.ConfigurationElement\n  isExternal: false\n  name: SetReadOnly()\n  nameWithType: ConfigurationElement.SetReadOnly()\n  fullName: ConfigurationElement.SetReadOnly()\n- uid: System.Configuration.ConfigurationElement.Unmerge(System.Configuration.ConfigurationElement,System.Configuration.ConfigurationElement,System.Configuration.ConfigurationSaveMode)\n  parent: System.Configuration.ConfigurationElement\n  isExternal: false\n  name: Unmerge(ConfigurationElement, ConfigurationElement, ConfigurationSaveMode)\n  nameWithType: ConfigurationElement.Unmerge(ConfigurationElement, ConfigurationElement, ConfigurationSaveMode)\n  fullName: ConfigurationElement.Unmerge(ConfigurationElement, ConfigurationElement, ConfigurationSaveMode)\n- uid: System.ServiceModel.Configuration.ServiceModelConfigurationElement.SetPropertyValueIfNotDefaultValue``1(System.String,``0)\n  parent: System.ServiceModel.Configuration.ServiceModelConfigurationElement\n  isExternal: false\n  name: SetPropertyValueIfNotDefaultValue<T>(String, T)\n  nameWithType: ServiceModelConfigurationElement.SetPropertyValueIfNotDefaultValue<T>(String, T)\n  fullName: ServiceModelConfigurationElement.SetPropertyValueIfNotDefaultValue<T>(String, T)\n"}