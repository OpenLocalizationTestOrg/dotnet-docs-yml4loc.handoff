### YamlMime:ManagedReference
items:
- uid: System.Net.NetworkInformation.IPGlobalProperties
  commentId: T:System.Net.NetworkInformation.IPGlobalProperties
  id: IPGlobalProperties
  children:
  - System.Net.NetworkInformation.IPGlobalProperties.#ctor
  - System.Net.NetworkInformation.IPGlobalProperties.BeginGetUnicastAddresses(System.AsyncCallback,System.Object)
  - System.Net.NetworkInformation.IPGlobalProperties.DhcpScopeName
  - System.Net.NetworkInformation.IPGlobalProperties.DomainName
  - System.Net.NetworkInformation.IPGlobalProperties.EndGetUnicastAddresses(System.IAsyncResult)
  - System.Net.NetworkInformation.IPGlobalProperties.GetActiveTcpConnections
  - System.Net.NetworkInformation.IPGlobalProperties.GetActiveTcpListeners
  - System.Net.NetworkInformation.IPGlobalProperties.GetActiveUdpListeners
  - System.Net.NetworkInformation.IPGlobalProperties.GetIcmpV4Statistics
  - System.Net.NetworkInformation.IPGlobalProperties.GetIcmpV6Statistics
  - System.Net.NetworkInformation.IPGlobalProperties.GetIPGlobalProperties
  - System.Net.NetworkInformation.IPGlobalProperties.GetIPv4GlobalStatistics
  - System.Net.NetworkInformation.IPGlobalProperties.GetIPv6GlobalStatistics
  - System.Net.NetworkInformation.IPGlobalProperties.GetTcpIPv4Statistics
  - System.Net.NetworkInformation.IPGlobalProperties.GetTcpIPv6Statistics
  - System.Net.NetworkInformation.IPGlobalProperties.GetUdpIPv4Statistics
  - System.Net.NetworkInformation.IPGlobalProperties.GetUdpIPv6Statistics
  - System.Net.NetworkInformation.IPGlobalProperties.GetUnicastAddresses
  - System.Net.NetworkInformation.IPGlobalProperties.GetUnicastAddressesAsync
  - System.Net.NetworkInformation.IPGlobalProperties.HostName
  - System.Net.NetworkInformation.IPGlobalProperties.IsWinsProxy
  - System.Net.NetworkInformation.IPGlobalProperties.NodeType
  langs:
  - csharp
  name: IPGlobalProperties
  nameWithType: IPGlobalProperties
  fullName: System.Net.NetworkInformation.IPGlobalProperties
  type: Class
  assemblies:
  - System.Net.NetworkInformation
  - System
  - netstandard
  namespace: System.Net.NetworkInformation
  summary: Provides information about the network connectivity of the local computer.
  remarks: "This class provides configuration and statistical information about the local computer's network interfaces and network connections.  \n  \n The information provided by this class is similar to that provided by the Internet Protocol Helper API functions. For information about the Internet Protocol Helper, see the documentation in the MSDN Library."
  example:
  - "The following code example displays information about the local computer using an instance of this class.  \n  \n [!code-cpp[NclNetInfo2#15](~/samples/snippets/cpp/VS_Snippets_Remoting/NCLNetInfo2/CPP/networkexamples.cpp#15)]\n [!code-csharp[NclNetInfo2#15](~/samples/snippets/csharp/VS_Snippets_Remoting/NCLNetInfo2/CS/networkexamples.cs#15)]\n [!code-vb[NclNetInfo2#15](~/samples/snippets/visualbasic/VS_Snippets_Remoting/NCLNetInfo2/VB/networkexamples.vb#15)]"
  syntax:
    content: public abstract class IPGlobalProperties
  inheritance:
  - System.Object
  implements: []
  inheritedMembers:
  - System.Object.Equals(System.Object)
  - System.Object.Equals(System.Object,System.Object)
  - System.Object.GetHashCode
  - System.Object.GetType
  - System.Object.MemberwiseClone
  - System.Object.ReferenceEquals(System.Object,System.Object)
  - System.Object.ToString
  version:
  - netcore-1.0
  - netcore-1.1
  - netcore-2.0
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  - netstandard-2.0
  - xamarinandroid-7.1
  - xamarinios-10.8
  - xamarinmac-3.0
  monikers:
  - netcore-1.0
  - netcore-1.1
  - netcore-2.0
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  - netstandard-2.0
  - xamarinandroid-7.1
  - xamarinios-10.8
  - xamarinmac-3.0
  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Net.NetworkInformation/IPGlobalProperties.xml
  ms.author: bobdel
  manager: markl
- uid: System.Net.NetworkInformation.IPGlobalProperties.#ctor
  commentId: M:System.Net.NetworkInformation.IPGlobalProperties.#ctor
  id: '#ctor'
  parent: System.Net.NetworkInformation.IPGlobalProperties
  langs:
  - csharp
  name: IPGlobalProperties()
  nameWithType: IPGlobalProperties.IPGlobalProperties()
  fullName: IPGlobalProperties.IPGlobalProperties()
  type: Constructor
  assemblies:
  - System.Net.NetworkInformation
  - System
  - netstandard
  namespace: System.Net.NetworkInformation
  summary: Initializes a new instance of the <xref href="System.Net.NetworkInformation.IPGlobalProperties"></xref> class.
  remarks: This constructor can be called only by classes derived from <xref:System.Net.NetworkInformation.IPGlobalProperties>.
  syntax:
    content: protected IPGlobalProperties ();
    parameters: []
  overload: System.Net.NetworkInformation.IPGlobalProperties.#ctor*
  exceptions: []
  version:
  - netcore-1.0
  - netcore-1.1
  - netcore-2.0
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  - netstandard-2.0
  - xamarinandroid-7.1
  - xamarinios-10.8
  - xamarinmac-3.0
  monikers:
  - netcore-1.0
  - netcore-1.1
  - netcore-2.0
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  - netstandard-2.0
  - xamarinandroid-7.1
  - xamarinios-10.8
  - xamarinmac-3.0
  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Net.NetworkInformation/IPGlobalProperties.xml
  ms.author: bobdel
  manager: markl
- uid: System.Net.NetworkInformation.IPGlobalProperties.BeginGetUnicastAddresses(System.AsyncCallback,System.Object)
  commentId: M:System.Net.NetworkInformation.IPGlobalProperties.BeginGetUnicastAddresses(System.AsyncCallback,System.Object)
  id: BeginGetUnicastAddresses(System.AsyncCallback,System.Object)
  parent: System.Net.NetworkInformation.IPGlobalProperties
  langs:
  - csharp
  name: BeginGetUnicastAddresses(AsyncCallback, Object)
  nameWithType: IPGlobalProperties.BeginGetUnicastAddresses(AsyncCallback, Object)
  fullName: IPGlobalProperties.BeginGetUnicastAddresses(AsyncCallback, Object)
  type: Method
  assemblies:
  - System
  - netstandard
  - System.Net.NetworkInformation
  namespace: System.Net.NetworkInformation
  summary: Begins an asynchronous request to retrieve the stable unicast IP address table on the local computer.
  remarks: "In order to support outbound connections or to accept incoming connections on a Teredo interface, applications need to ensure that the Teredo interface is up and ready for use. This is because Teredo can go into a dormant state when not used for some period of time.  \n  \n The <xref:System.Net.NetworkInformation.IPGlobalProperties.BeginGetUnicastAddresses%2A> method allows an application to asynchronously retrieve the list of stable unicast IP addresses. The <xref:System.Net.IPAddress.IsIPv6Teredo%2A?displayProperty=fullName> property can be used to determine if an IP address is an IPv6 Teredo address with the prefix of 2001::/32.  \n  \n The <xref:System.Net.NetworkInformation.IPGlobalProperties.BeginGetUnicastAddresses%2A> method also returns non-Teredo addresses and provides a more convenient way to obtain the unicast IP addresses for a system than enumerating all the <xref:System.Net.NetworkInformation.NetworkInterface?displayProperty=fullName> objects on a local computer and querying the associated IP addresses."
  syntax:
    content: public virtual IAsyncResult BeginGetUnicastAddresses (AsyncCallback callback, object state);
    parameters:
    - id: callback
      type: System.AsyncCallback
      description: The <xref href="System.AsyncCallback"></xref> delegate.
    - id: state
      type: System.Object
      description: An object that contains state information for this request.
    return:
      type: System.IAsyncResult
      description: An <xref href="System.IAsyncResult"></xref> that references the asynchronous request.
  overload: System.Net.NetworkInformation.IPGlobalProperties.BeginGetUnicastAddresses*
  exceptions:
  - type: System.NotImplementedException
    commentId: T:System.NotImplementedException
    description: This method is not implemented on the platform. This method uses the native `NotifyStableUnicastIpAddressTable` function that is supported on Windows Vista and later.
  - type: System.ComponentModel.Win32Exception
    commentId: T:System.ComponentModel.Win32Exception
    description: The call to the native `NotifyStableUnicastIpAddressTable` function failed.
  version:
  - netcore-2.0
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  - netstandard-2.0
  - xamarinandroid-7.1
  - xamarinios-10.8
  - xamarinmac-3.0
  monikers:
  - netcore-2.0
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  - netstandard-2.0
  - xamarinandroid-7.1
  - xamarinios-10.8
  - xamarinmac-3.0
  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Net.NetworkInformation/IPGlobalProperties.xml
  ms.author: bobdel
  manager: markl
- uid: System.Net.NetworkInformation.IPGlobalProperties.DhcpScopeName
  commentId: P:System.Net.NetworkInformation.IPGlobalProperties.DhcpScopeName
  id: DhcpScopeName
  parent: System.Net.NetworkInformation.IPGlobalProperties
  langs:
  - csharp
  name: DhcpScopeName
  nameWithType: IPGlobalProperties.DhcpScopeName
  fullName: IPGlobalProperties.DhcpScopeName
  type: Property
  assemblies:
  - System.Net.NetworkInformation
  - System
  - netstandard
  namespace: System.Net.NetworkInformation
  summary: Gets the Dynamic Host Configuration Protocol (DHCP) scope name.
  remarks: A DHCP scope is an administrative grouping of networked computers that are on the same subnet.
  example:
  - "The following code example displays network information for the local computer.  \n  \n [!code-cpp[NCLNetInfoReport#15](~/samples/snippets/cpp/VS_Snippets_Remoting/NCLNetInfoReport/CPP/netinfo.cpp#15)]\n [!code-csharp[NCLNetInfoReport#15](~/samples/snippets/csharp/VS_Snippets_Remoting/NCLNetInfoReport/CS/netinfo.cs#15)]"
  syntax:
    content: public abstract string DhcpScopeName { get; }
    return:
      type: System.String
      description: A <xref href="System.String"></xref> instance that contains the computer's DHCP scope name.
  overload: System.Net.NetworkInformation.IPGlobalProperties.DhcpScopeName*
  exceptions:
  - type: System.Net.NetworkInformation.NetworkInformationException
    commentId: T:System.Net.NetworkInformation.NetworkInformationException
    description: A Win32 function call failed.
  version:
  - netcore-1.0
  - netcore-1.1
  - netcore-2.0
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  - netstandard-2.0
  - xamarinandroid-7.1
  - xamarinios-10.8
  - xamarinmac-3.0
  monikers:
  - netcore-1.0
  - netcore-1.1
  - netcore-2.0
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  - netstandard-2.0
  - xamarinandroid-7.1
  - xamarinios-10.8
  - xamarinmac-3.0
  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Net.NetworkInformation/IPGlobalProperties.xml
  ms.author: bobdel
  manager: markl
- uid: System.Net.NetworkInformation.IPGlobalProperties.DomainName
  commentId: P:System.Net.NetworkInformation.IPGlobalProperties.DomainName
  id: DomainName
  parent: System.Net.NetworkInformation.IPGlobalProperties
  langs:
  - csharp
  name: DomainName
  nameWithType: IPGlobalProperties.DomainName
  fullName: IPGlobalProperties.DomainName
  type: Property
  assemblies:
  - System.Net.NetworkInformation
  - System
  - netstandard
  namespace: System.Net.NetworkInformation
  summary: Gets the domain in which the local computer is registered.
  remarks: ''
  example:
  - "The following code example displays network information for the local computer.  \n  \n [!code-cpp[NCLNetInfoReport#15](~/samples/snippets/cpp/VS_Snippets_Remoting/NCLNetInfoReport/CPP/netinfo.cpp#15)]\n [!code-csharp[NCLNetInfoReport#15](~/samples/snippets/csharp/VS_Snippets_Remoting/NCLNetInfoReport/CS/netinfo.cs#15)]"
  syntax:
    content: public abstract string DomainName { get; }
    return:
      type: System.String
      description: A <xref href="System.String"></xref> instance that contains the computer's domain name. If the computer does not belong to a domain, returns <xref href="System.String.Empty"></xref>.
  overload: System.Net.NetworkInformation.IPGlobalProperties.DomainName*
  exceptions:
  - type: System.Net.NetworkInformation.NetworkInformationException
    commentId: T:System.Net.NetworkInformation.NetworkInformationException
    description: A Win32 function call failed.
  version:
  - netcore-1.0
  - netcore-1.1
  - netcore-2.0
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  - netstandard-2.0
  - xamarinandroid-7.1
  - xamarinios-10.8
  - xamarinmac-3.0
  monikers:
  - netcore-1.0
  - netcore-1.1
  - netcore-2.0
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  - netstandard-2.0
  - xamarinandroid-7.1
  - xamarinios-10.8
  - xamarinmac-3.0
  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Net.NetworkInformation/IPGlobalProperties.xml
  ms.author: bobdel
  manager: markl
- uid: System.Net.NetworkInformation.IPGlobalProperties.EndGetUnicastAddresses(System.IAsyncResult)
  commentId: M:System.Net.NetworkInformation.IPGlobalProperties.EndGetUnicastAddresses(System.IAsyncResult)
  id: EndGetUnicastAddresses(System.IAsyncResult)
  parent: System.Net.NetworkInformation.IPGlobalProperties
  langs:
  - csharp
  name: EndGetUnicastAddresses(IAsyncResult)
  nameWithType: IPGlobalProperties.EndGetUnicastAddresses(IAsyncResult)
  fullName: IPGlobalProperties.EndGetUnicastAddresses(IAsyncResult)
  type: Method
  assemblies:
  - System
  - netstandard
  - System.Net.NetworkInformation
  namespace: System.Net.NetworkInformation
  summary: Ends a pending asynchronous request to retrieve the stable unicast IP address table on the local computer.
  remarks: "In order to support outbound connections or to accept incoming connections on a Teredo interface, applications need to ensure that the Teredo interface is up and ready for use. This is because Teredo can go into a dormant state when not used for some period of time.  \n  \n The <xref:System.Net.NetworkInformation.IPGlobalProperties.BeginGetUnicastAddresses%2A> method allows an application to asynchronously retrieve the list of stable unicast IP addresses. The <xref:System.Net.IPAddress.IsIPv6Teredo%2A?displayProperty=fullName> property can be used to determine if an IP address is an IPv6 Teredo address with the prefix of 2001::/32.  \n  \n The <xref:System.Net.NetworkInformation.IPGlobalProperties.EndGetUnicastAddresses%2A> method ends a pending asynchronous request to retrieve the stable unicast IP address table.  \n  \n The <xref:System.Net.NetworkInformation.IPGlobalProperties.BeginGetUnicastAddresses%2A> method also returns non-Teredo addresses and provides a more convenient way to obtain the unicast IP addresses for a system than enumerating all the <xref:System.Net.NetworkInformation.NetworkInterface?displayProperty=fullName> objects on a local computer and querying the associated IP addresses."
  syntax:
    content: public virtual System.Net.NetworkInformation.UnicastIPAddressInformationCollection EndGetUnicastAddresses (IAsyncResult asyncResult);
    parameters:
    - id: asyncResult
      type: System.IAsyncResult
      description: An <xref href="System.IAsyncResult"></xref> that references the asynchronous request.
    return:
      type: System.Net.NetworkInformation.UnicastIPAddressInformationCollection
      description: An <xref href="System.IAsyncResult"></xref> that stores state information and any user defined data for this asynchronous operation.
  overload: System.Net.NetworkInformation.IPGlobalProperties.EndGetUnicastAddresses*
  exceptions:
  - type: System.Net.NetworkInformation.NetworkInformationException
    commentId: T:System.Net.NetworkInformation.NetworkInformationException
    description: The call to the native `GetAdaptersAddresses` function failed.
  - type: System.NotImplementedException
    commentId: T:System.NotImplementedException
    description: This method is not implemented on the platform. This method uses the native `NotifyStableUnicastIpAddressTable` function that is supported on Windows Vista and later.
  - type: System.Security.SecurityException
    commentId: T:System.Security.SecurityException
    description: The caller does not have necessary <xref href="System.Net.NetworkInformation.NetworkInformationAccess.Read"></xref> permission.
  version:
  - netcore-2.0
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  - netstandard-2.0
  - xamarinandroid-7.1
  - xamarinios-10.8
  - xamarinmac-3.0
  monikers:
  - netcore-2.0
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  - netstandard-2.0
  - xamarinandroid-7.1
  - xamarinios-10.8
  - xamarinmac-3.0
  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Net.NetworkInformation/IPGlobalProperties.xml
  ms.author: bobdel
  manager: markl
- uid: System.Net.NetworkInformation.IPGlobalProperties.GetActiveTcpConnections
  commentId: M:System.Net.NetworkInformation.IPGlobalProperties.GetActiveTcpConnections
  id: GetActiveTcpConnections
  parent: System.Net.NetworkInformation.IPGlobalProperties
  langs:
  - csharp
  name: GetActiveTcpConnections()
  nameWithType: IPGlobalProperties.GetActiveTcpConnections()
  fullName: IPGlobalProperties.GetActiveTcpConnections()
  type: Method
  assemblies:
  - System.Net.NetworkInformation
  - System
  - netstandard
  namespace: System.Net.NetworkInformation
  summary: Returns information about the Internet Protocol version 4 (IPv4) and IPv6 Transmission Control Protocol (TCP) connections on the local computer.
  remarks: "The objects returned by this method include connections in all TCP states except the <xref:System.Net.NetworkInformation.TcpState.Listen> state. You can check the state of a connection by calling <xref:System.Net.NetworkInformation.TcpConnectionInformation.State%2A>.  \n  \n The TCP protocol is defined in IETF RFC 793. Note that the objects returned by this method reflect the connections as of the time the array is created. This information is not updated dynamically."
  example:
  - "The following example displays endpoint information for active TCP connections.  \n  \n [!code-cpp[NCLNetInfoReport#17](~/samples/snippets/cpp/VS_Snippets_Remoting/NCLNetInfoReport/CPP/netinfo.cpp#17)]\n [!code-csharp[NCLNetInfoReport#17](~/samples/snippets/csharp/VS_Snippets_Remoting/NCLNetInfoReport/CS/netinfo.cs#17)]"
  syntax:
    content: public abstract System.Net.NetworkInformation.TcpConnectionInformation[] GetActiveTcpConnections ();
    parameters: []
    return:
      type: System.Net.NetworkInformation.TcpConnectionInformation[]
      description: A <xref href="System.Net.NetworkInformation.TcpConnectionInformation"></xref> array that contains objects that describe the active TCP connections, or an empty array if no active TCP connections are detected.
  overload: System.Net.NetworkInformation.IPGlobalProperties.GetActiveTcpConnections*
  exceptions:
  - type: System.Net.NetworkInformation.NetworkInformationException
    commentId: T:System.Net.NetworkInformation.NetworkInformationException
    description: The Win32 function `GetTcpTable` failed.
  version:
  - netcore-1.0
  - netcore-1.1
  - netcore-2.0
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  - netstandard-2.0
  - xamarinandroid-7.1
  - xamarinios-10.8
  - xamarinmac-3.0
  monikers:
  - netcore-1.0
  - netcore-1.1
  - netcore-2.0
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  - netstandard-2.0
  - xamarinandroid-7.1
  - xamarinios-10.8
  - xamarinmac-3.0
  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Net.NetworkInformation/IPGlobalProperties.xml
  ms.author: bobdel
  manager: markl
- uid: System.Net.NetworkInformation.IPGlobalProperties.GetActiveTcpListeners
  commentId: M:System.Net.NetworkInformation.IPGlobalProperties.GetActiveTcpListeners
  id: GetActiveTcpListeners
  parent: System.Net.NetworkInformation.IPGlobalProperties
  langs:
  - csharp
  name: GetActiveTcpListeners()
  nameWithType: IPGlobalProperties.GetActiveTcpListeners()
  fullName: IPGlobalProperties.GetActiveTcpListeners()
  type: Method
  assemblies:
  - System.Net.NetworkInformation
  - System
  - netstandard
  namespace: System.Net.NetworkInformation
  summary: Returns endpoint information about the Internet Protocol version 4 (IPv4) and IPv6 Transmission Control Protocol (TCP) listeners on the local computer.
  remarks: "The objects returned by this method include listeners in all TCP states except the <xref:System.Net.NetworkInformation.TcpState.Listen> state.  \n  \n The TCP protocol is defined in IETF RFC 793. Note that the objects returned by this method reflect the connections as of the time the array is created. This information is not updated dynamically."
  example:
  - "The following code example displays endpoint information for active TCP listeners.  \n  \n [!code-cpp[NCLNetInfoReport#18](~/samples/snippets/cpp/VS_Snippets_Remoting/NCLNetInfoReport/CPP/netinfo.cpp#18)]\n [!code-csharp[NCLNetInfoReport#18](~/samples/snippets/csharp/VS_Snippets_Remoting/NCLNetInfoReport/CS/netinfo.cs#18)]"
  syntax:
    content: public abstract System.Net.IPEndPoint[] GetActiveTcpListeners ();
    parameters: []
    return:
      type: System.Net.IPEndPoint[]
      description: A <xref href="System.Net.IPEndPoint"></xref> array that contains objects that describe the active TCP listeners, or an empty array, if no active TCP listeners are detected.
  overload: System.Net.NetworkInformation.IPGlobalProperties.GetActiveTcpListeners*
  exceptions:
  - type: System.Net.NetworkInformation.NetworkInformationException
    commentId: T:System.Net.NetworkInformation.NetworkInformationException
    description: The Win32 function `GetTcpTable` failed.
  version:
  - netcore-1.0
  - netcore-1.1
  - netcore-2.0
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  - netstandard-2.0
  - xamarinandroid-7.1
  - xamarinios-10.8
  - xamarinmac-3.0
  monikers:
  - netcore-1.0
  - netcore-1.1
  - netcore-2.0
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  - netstandard-2.0
  - xamarinandroid-7.1
  - xamarinios-10.8
  - xamarinmac-3.0
  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Net.NetworkInformation/IPGlobalProperties.xml
  ms.author: bobdel
  manager: markl
- uid: System.Net.NetworkInformation.IPGlobalProperties.GetActiveUdpListeners
  commentId: M:System.Net.NetworkInformation.IPGlobalProperties.GetActiveUdpListeners
  id: GetActiveUdpListeners
  parent: System.Net.NetworkInformation.IPGlobalProperties
  langs:
  - csharp
  name: GetActiveUdpListeners()
  nameWithType: IPGlobalProperties.GetActiveUdpListeners()
  fullName: IPGlobalProperties.GetActiveUdpListeners()
  type: Method
  assemblies:
  - System.Net.NetworkInformation
  - System
  - netstandard
  namespace: System.Net.NetworkInformation
  summary: Returns information about the Internet Protocol version 4 (IPv4) and IPv6 User Datagram Protocol (UDP) listeners on the local computer.
  remarks: "UDP is a connectionless transport layer protocol that is responsible for sending and receiving datagrams. It is defined in IETF RFC 768.  \n  \n A UDP listener is an open socket that waits for and receives UDP datagrams. Because UDP is a connectionless protocol, the listener does not maintain a connection to a remote endpoint."
  example:
  - "The following example displays the active UDP listeners.  \n  \n [!code-cpp[NCLNetInfoReport#19](~/samples/snippets/cpp/VS_Snippets_Remoting/NCLNetInfoReport/CPP/netinfo.cpp#19)]\n [!code-csharp[NCLNetInfoReport#19](~/samples/snippets/csharp/VS_Snippets_Remoting/NCLNetInfoReport/CS/netinfo.cs#19)]"
  syntax:
    content: public abstract System.Net.IPEndPoint[] GetActiveUdpListeners ();
    parameters: []
    return:
      type: System.Net.IPEndPoint[]
      description: An <xref href="System.Net.IPEndPoint"></xref> array that contains objects that describe the UDP listeners, or an empty array if no UDP listeners are detected.
  overload: System.Net.NetworkInformation.IPGlobalProperties.GetActiveUdpListeners*
  exceptions:
  - type: System.Net.NetworkInformation.NetworkInformationException
    commentId: T:System.Net.NetworkInformation.NetworkInformationException
    description: The call to the Win32 function `GetUdpTable` failed.
  version:
  - netcore-1.0
  - netcore-1.1
  - netcore-2.0
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  - netstandard-2.0
  - xamarinandroid-7.1
  - xamarinios-10.8
  - xamarinmac-3.0
  monikers:
  - netcore-1.0
  - netcore-1.1
  - netcore-2.0
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  - netstandard-2.0
  - xamarinandroid-7.1
  - xamarinios-10.8
  - xamarinmac-3.0
  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Net.NetworkInformation/IPGlobalProperties.xml
  ms.author: bobdel
  manager: markl
- uid: System.Net.NetworkInformation.IPGlobalProperties.GetIcmpV4Statistics
  commentId: M:System.Net.NetworkInformation.IPGlobalProperties.GetIcmpV4Statistics
  id: GetIcmpV4Statistics
  parent: System.Net.NetworkInformation.IPGlobalProperties
  langs:
  - csharp
  name: GetIcmpV4Statistics()
  nameWithType: IPGlobalProperties.GetIcmpV4Statistics()
  fullName: IPGlobalProperties.GetIcmpV4Statistics()
  type: Method
  assemblies:
  - System.Net.NetworkInformation
  - System
  - netstandard
  namespace: System.Net.NetworkInformation
  summary: Provides Internet Control Message Protocol (ICMP) version 4 statistical data for the local computer.
  remarks: "ICMP is a set of messages for use with Internet Protocol version 4 (IPv4). ICMP is used by IPv4 nodes to report errors encountered in processing data packets and to perform other Internet layer functions. ICMP version 4 is defined in IETF RFC 792.  \n  \n For details on the ICMP version 4 traffic statistics that are available to applications, see the <xref:System.Net.NetworkInformation.IcmpV4Statistics> class documentation. Note that the <xref:System.Net.NetworkInformation.IcmpV4Statistics> object returned by this method reflects the statistics as of the time the object is created. This information is not updated dynamically."
  example:
  - "The following example displays the current ICMPv4 statistics.  \n  \n [!code-cpp[NCLNetInfoReport#6](~/samples/snippets/cpp/VS_Snippets_Remoting/NCLNetInfoReport/CPP/netinfo.cpp#6)]\n [!code-csharp[NCLNetInfoReport#6](~/samples/snippets/csharp/VS_Snippets_Remoting/NCLNetInfoReport/CS/netinfo.cs#6)]"
  syntax:
    content: public abstract System.Net.NetworkInformation.IcmpV4Statistics GetIcmpV4Statistics ();
    parameters: []
    return:
      type: System.Net.NetworkInformation.IcmpV4Statistics
      description: An <xref href="System.Net.NetworkInformation.IcmpV4Statistics"></xref> object that provides ICMP version 4 traffic statistics for the local computer.
  overload: System.Net.NetworkInformation.IPGlobalProperties.GetIcmpV4Statistics*
  exceptions:
  - type: System.Net.NetworkInformation.NetworkInformationException
    commentId: T:System.Net.NetworkInformation.NetworkInformationException
    description: The Win32 function `GetIcmpStatistics` failed.
  version:
  - netcore-1.0
  - netcore-1.1
  - netcore-2.0
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  - netstandard-2.0
  - xamarinandroid-7.1
  - xamarinios-10.8
  - xamarinmac-3.0
  monikers:
  - netcore-1.0
  - netcore-1.1
  - netcore-2.0
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  - netstandard-2.0
  - xamarinandroid-7.1
  - xamarinios-10.8
  - xamarinmac-3.0
  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Net.NetworkInformation/IPGlobalProperties.xml
  ms.author: bobdel
  manager: markl
- uid: System.Net.NetworkInformation.IPGlobalProperties.GetIcmpV6Statistics
  commentId: M:System.Net.NetworkInformation.IPGlobalProperties.GetIcmpV6Statistics
  id: GetIcmpV6Statistics
  parent: System.Net.NetworkInformation.IPGlobalProperties
  langs:
  - csharp
  name: GetIcmpV6Statistics()
  nameWithType: IPGlobalProperties.GetIcmpV6Statistics()
  fullName: IPGlobalProperties.GetIcmpV6Statistics()
  type: Method
  assemblies:
  - System.Net.NetworkInformation
  - System
  - netstandard
  namespace: System.Net.NetworkInformation
  summary: Provides Internet Control Message Protocol (ICMP) version 6 statistical data for the local computer.
  remarks: "ICMP version 6 is a set of messages for use with Internet Protocol version 6 (IPv6). ICMP is used by IPv6 nodes to report errors encountered in processing data packets and to perform other Internet layer functions. ICMP version 6 is defined in IETF RFC 1885.  \n  \n The IPv6 protocol is not supported for computers with Windows 2000 or earlier operating systems.  \n  \n For details on the ICMP version 6 traffic statistics available to applications, see the <xref:System.Net.NetworkInformation.IcmpV6Statistics> class documentation. Note that the <xref:System.Net.NetworkInformation.IcmpV6Statistics> object returned by this method reflects the statistics as of the time the object is created. This information is not updated dynamically."
  example:
  - "The following example displays the current ICMPv6 statistics.  \n  \n [!code-cpp[NCLNetInfoReport#7](~/samples/snippets/cpp/VS_Snippets_Remoting/NCLNetInfoReport/CPP/netinfo.cpp#7)]\n [!code-csharp[NCLNetInfoReport#7](~/samples/snippets/csharp/VS_Snippets_Remoting/NCLNetInfoReport/CS/netinfo.cs#7)]"
  syntax:
    content: public abstract System.Net.NetworkInformation.IcmpV6Statistics GetIcmpV6Statistics ();
    parameters: []
    return:
      type: System.Net.NetworkInformation.IcmpV6Statistics
      description: An <xref href="System.Net.NetworkInformation.IcmpV6Statistics"></xref> object that provides ICMP version 6 traffic statistics for the local computer.
  overload: System.Net.NetworkInformation.IPGlobalProperties.GetIcmpV6Statistics*
  exceptions:
  - type: System.Net.NetworkInformation.NetworkInformationException
    commentId: T:System.Net.NetworkInformation.NetworkInformationException
    description: The Win32 function `GetIcmpStatisticsEx` failed.
  - type: System.PlatformNotSupportedException
    commentId: T:System.PlatformNotSupportedException
    description: The local computer's operating system is not Windows XP or later.
  version:
  - netcore-1.0
  - netcore-1.1
  - netcore-2.0
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  - netstandard-2.0
  - xamarinandroid-7.1
  - xamarinios-10.8
  - xamarinmac-3.0
  monikers:
  - netcore-1.0
  - netcore-1.1
  - netcore-2.0
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  - netstandard-2.0
  - xamarinandroid-7.1
  - xamarinios-10.8
  - xamarinmac-3.0
  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Net.NetworkInformation/IPGlobalProperties.xml
  ms.author: bobdel
  manager: markl
- uid: System.Net.NetworkInformation.IPGlobalProperties.GetIPGlobalProperties
  commentId: M:System.Net.NetworkInformation.IPGlobalProperties.GetIPGlobalProperties
  id: GetIPGlobalProperties
  parent: System.Net.NetworkInformation.IPGlobalProperties
  langs:
  - csharp
  name: GetIPGlobalProperties()
  nameWithType: IPGlobalProperties.GetIPGlobalProperties()
  fullName: IPGlobalProperties.GetIPGlobalProperties()
  type: Method
  assemblies:
  - System.Net.NetworkInformation
  - System
  - netstandard
  namespace: System.Net.NetworkInformation
  summary: Gets an object that provides information about the local computer's network connectivity and traffic statistics.
  remarks: The object returned by this method is a system-supplied type that derives from the <xref:System.Net.NetworkInformation.IPGlobalProperties> class.
  example:
  - "The following code example displays information about the local computer.  \n  \n [!code-cpp[NCLNetInfoReport#15](~/samples/snippets/cpp/VS_Snippets_Remoting/NCLNetInfoReport/CPP/netinfo.cpp#15)]\n [!code-csharp[NCLNetInfoReport#15](~/samples/snippets/csharp/VS_Snippets_Remoting/NCLNetInfoReport/CS/netinfo.cs#15)]"
  syntax:
    content: public static System.Net.NetworkInformation.IPGlobalProperties GetIPGlobalProperties ();
    parameters: []
    return:
      type: System.Net.NetworkInformation.IPGlobalProperties
      description: A <xref href="System.Net.NetworkInformation.IPGlobalProperties"></xref> object that contains information about the local computer.
  overload: System.Net.NetworkInformation.IPGlobalProperties.GetIPGlobalProperties*
  exceptions: []
  version:
  - netcore-1.0
  - netcore-1.1
  - netcore-2.0
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  - netstandard-2.0
  - xamarinandroid-7.1
  - xamarinios-10.8
  - xamarinmac-3.0
  monikers:
  - netcore-1.0
  - netcore-1.1
  - netcore-2.0
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  - netstandard-2.0
  - xamarinandroid-7.1
  - xamarinios-10.8
  - xamarinmac-3.0
  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Net.NetworkInformation/IPGlobalProperties.xml
  ms.author: bobdel
  manager: markl
- uid: System.Net.NetworkInformation.IPGlobalProperties.GetIPv4GlobalStatistics
  commentId: M:System.Net.NetworkInformation.IPGlobalProperties.GetIPv4GlobalStatistics
  id: GetIPv4GlobalStatistics
  parent: System.Net.NetworkInformation.IPGlobalProperties
  langs:
  - csharp
  name: GetIPv4GlobalStatistics()
  nameWithType: IPGlobalProperties.GetIPv4GlobalStatistics()
  fullName: IPGlobalProperties.GetIPv4GlobalStatistics()
  type: Method
  assemblies:
  - System.Net.NetworkInformation
  - System
  - netstandard
  namespace: System.Net.NetworkInformation
  summary: Provides Internet Protocol version 4 (IPv4) statistical data for the local computer.
  remarks: "IPv4 is a network layer protocol that is responsible for routing data packets from its source computer to its destination.  \n  \n For details on the IP traffic statistics available to applications, see the <xref:System.Net.NetworkInformation.IPGlobalStatistics> class documentation. Note that the object returned by this method reflects the statistics as of the time the <xref:System.Net.NetworkInformation.IPGlobalStatistics> object is created. This information is not updated dynamically."
  example:
  - "The following code example displays IP statistics for the local computer.  \n  \n [!code-cpp[NCLNetInfoReport#1](~/samples/snippets/cpp/VS_Snippets_Remoting/NCLNetInfoReport/CPP/netinfo.cpp#1)]\n [!code-csharp[NCLNetInfoReport#1](~/samples/snippets/csharp/VS_Snippets_Remoting/NCLNetInfoReport/CS/netinfo.cs#1)]"
  syntax:
    content: public abstract System.Net.NetworkInformation.IPGlobalStatistics GetIPv4GlobalStatistics ();
    parameters: []
    return:
      type: System.Net.NetworkInformation.IPGlobalStatistics
      description: An <xref href="System.Net.NetworkInformation.IPGlobalStatistics"></xref> object that provides IPv4 traffic statistics for the local computer.
  overload: System.Net.NetworkInformation.IPGlobalProperties.GetIPv4GlobalStatistics*
  exceptions:
  - type: System.Net.NetworkInformation.NetworkInformationException
    commentId: T:System.Net.NetworkInformation.NetworkInformationException
    description: The call to the Win32 function `GetIpStatistics` failed.
  version:
  - netcore-1.0
  - netcore-1.1
  - netcore-2.0
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  - netstandard-2.0
  - xamarinandroid-7.1
  - xamarinios-10.8
  - xamarinmac-3.0
  monikers:
  - netcore-1.0
  - netcore-1.1
  - netcore-2.0
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  - netstandard-2.0
  - xamarinandroid-7.1
  - xamarinios-10.8
  - xamarinmac-3.0
  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Net.NetworkInformation/IPGlobalProperties.xml
  ms.author: bobdel
  manager: markl
- uid: System.Net.NetworkInformation.IPGlobalProperties.GetIPv6GlobalStatistics
  commentId: M:System.Net.NetworkInformation.IPGlobalProperties.GetIPv6GlobalStatistics
  id: GetIPv6GlobalStatistics
  parent: System.Net.NetworkInformation.IPGlobalProperties
  langs:
  - csharp
  name: GetIPv6GlobalStatistics()
  nameWithType: IPGlobalProperties.GetIPv6GlobalStatistics()
  fullName: IPGlobalProperties.GetIPv6GlobalStatistics()
  type: Method
  assemblies:
  - System.Net.NetworkInformation
  - System
  - netstandard
  namespace: System.Net.NetworkInformation
  summary: Provides Internet Protocol version 6 (IPv6) statistical data for the local computer.
  remarks: "IPv6 is a network layer protocol responsible for routing data packets from its source computer to its destination. The IPv6 protocol is not supported on computers with Windows 2000 or earlier operating systems.  \n  \n For details on the IP traffic statistics available to applications, see the <xref:System.Net.NetworkInformation.IPGlobalStatistics> class documentation. Note that the object returned by this method reflects the statistics as of the time the <xref:System.Net.NetworkInformation.IPGlobalStatistics> object is created. This information is not updated dynamically."
  example:
  - "The following code example displays IP statistics for the local computer.  \n  \n [!code-cpp[NCLNetInfoReport#1](~/samples/snippets/cpp/VS_Snippets_Remoting/NCLNetInfoReport/CPP/netinfo.cpp#1)]\n [!code-csharp[NCLNetInfoReport#1](~/samples/snippets/csharp/VS_Snippets_Remoting/NCLNetInfoReport/CS/netinfo.cs#1)]"
  syntax:
    content: public abstract System.Net.NetworkInformation.IPGlobalStatistics GetIPv6GlobalStatistics ();
    parameters: []
    return:
      type: System.Net.NetworkInformation.IPGlobalStatistics
      description: An <xref href="System.Net.NetworkInformation.IPGlobalStatistics"></xref> object that provides IPv6 traffic statistics for the local computer.
  overload: System.Net.NetworkInformation.IPGlobalProperties.GetIPv6GlobalStatistics*
  exceptions:
  - type: System.Net.NetworkInformation.NetworkInformationException
    commentId: T:System.Net.NetworkInformation.NetworkInformationException
    description: The call to the Win32 function `GetIpStatistics` failed.
  - type: System.PlatformNotSupportedException
    commentId: T:System.PlatformNotSupportedException
    description: The local computer is not running an operating system that supports IPv6.
  version:
  - netcore-1.0
  - netcore-1.1
  - netcore-2.0
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  - netstandard-2.0
  - xamarinandroid-7.1
  - xamarinios-10.8
  - xamarinmac-3.0
  monikers:
  - netcore-1.0
  - netcore-1.1
  - netcore-2.0
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  - netstandard-2.0
  - xamarinandroid-7.1
  - xamarinios-10.8
  - xamarinmac-3.0
  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Net.NetworkInformation/IPGlobalProperties.xml
  ms.author: bobdel
  manager: markl
- uid: System.Net.NetworkInformation.IPGlobalProperties.GetTcpIPv4Statistics
  commentId: M:System.Net.NetworkInformation.IPGlobalProperties.GetTcpIPv4Statistics
  id: GetTcpIPv4Statistics
  parent: System.Net.NetworkInformation.IPGlobalProperties
  langs:
  - csharp
  name: GetTcpIPv4Statistics()
  nameWithType: IPGlobalProperties.GetTcpIPv4Statistics()
  fullName: IPGlobalProperties.GetTcpIPv4Statistics()
  type: Method
  assemblies:
  - System.Net.NetworkInformation
  - System
  - netstandard
  namespace: System.Net.NetworkInformation
  summary: Provides Transmission Control Protocol/Internet Protocol version 4 (TCP/IPv4) statistical data for the local computer.
  remarks: "TCP is a transport layer protocol that is responsible for reliably sending and receiving data packets. It is defined in IETF RFC 793.  \n  \n For details on the TCP traffic statistics available to applications, see the <xref:System.Net.NetworkInformation.TcpStatistics> class documentation. Note that the object returned by this method reflects the statistics as of the time the <xref:System.Net.NetworkInformation.TcpStatistics> object is created. This information is not updated dynamically."
  example:
  - "The following example displays the TCP/IP statistics for the local computer.  \n  \n [!code-cpp[NCLNetInfoReport#2](~/samples/snippets/cpp/VS_Snippets_Remoting/NCLNetInfoReport/CPP/netinfo.cpp#2)]\n [!code-csharp[NCLNetInfoReport#2](~/samples/snippets/csharp/VS_Snippets_Remoting/NCLNetInfoReport/CS/netinfo.cs#2)]"
  syntax:
    content: public abstract System.Net.NetworkInformation.TcpStatistics GetTcpIPv4Statistics ();
    parameters: []
    return:
      type: System.Net.NetworkInformation.TcpStatistics
      description: A <xref href="System.Net.NetworkInformation.TcpStatistics"></xref> object that provides TCP/IPv4 traffic statistics for the local computer.
  overload: System.Net.NetworkInformation.IPGlobalProperties.GetTcpIPv4Statistics*
  exceptions:
  - type: System.Net.NetworkInformation.NetworkInformationException
    commentId: T:System.Net.NetworkInformation.NetworkInformationException
    description: The call to the Win32 function `GetTcpStatistics` failed.
  version:
  - netcore-1.0
  - netcore-1.1
  - netcore-2.0
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  - netstandard-2.0
  - xamarinandroid-7.1
  - xamarinios-10.8
  - xamarinmac-3.0
  monikers:
  - netcore-1.0
  - netcore-1.1
  - netcore-2.0
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  - netstandard-2.0
  - xamarinandroid-7.1
  - xamarinios-10.8
  - xamarinmac-3.0
  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Net.NetworkInformation/IPGlobalProperties.xml
  ms.author: bobdel
  manager: markl
- uid: System.Net.NetworkInformation.IPGlobalProperties.GetTcpIPv6Statistics
  commentId: M:System.Net.NetworkInformation.IPGlobalProperties.GetTcpIPv6Statistics
  id: GetTcpIPv6Statistics
  parent: System.Net.NetworkInformation.IPGlobalProperties
  langs:
  - csharp
  name: GetTcpIPv6Statistics()
  nameWithType: IPGlobalProperties.GetTcpIPv6Statistics()
  fullName: IPGlobalProperties.GetTcpIPv6Statistics()
  type: Method
  assemblies:
  - System.Net.NetworkInformation
  - System
  - netstandard
  namespace: System.Net.NetworkInformation
  summary: Provides Transmission Control Protocol/Internet Protocol version 6 (TCP/IPv6) statistical data for the local computer.
  remarks: "TCP is a transport layer protocol responsible for reliably sending and receiving data packets. It is defined in IETF RFC 793.  \n  \n For details on the TCP traffic statistics that are available to applications, see the <xref:System.Net.NetworkInformation.TcpStatistics> class documentation. Note that the object returned by this method reflects the statistics as of the time the <xref:System.Net.NetworkInformation.TcpStatistics> object is created. This information is not updated dynamically."
  example:
  - "The following example displays the TCP/IP statistics for the local computer.  \n  \n [!code-cpp[NCLNetInfoReport#2](~/samples/snippets/cpp/VS_Snippets_Remoting/NCLNetInfoReport/CPP/netinfo.cpp#2)]\n [!code-csharp[NCLNetInfoReport#2](~/samples/snippets/csharp/VS_Snippets_Remoting/NCLNetInfoReport/CS/netinfo.cs#2)]"
  syntax:
    content: public abstract System.Net.NetworkInformation.TcpStatistics GetTcpIPv6Statistics ();
    parameters: []
    return:
      type: System.Net.NetworkInformation.TcpStatistics
      description: A <xref href="System.Net.NetworkInformation.TcpStatistics"></xref> object that provides TCP/IPv6 traffic statistics for the local computer.
  overload: System.Net.NetworkInformation.IPGlobalProperties.GetTcpIPv6Statistics*
  exceptions:
  - type: System.Net.NetworkInformation.NetworkInformationException
    commentId: T:System.Net.NetworkInformation.NetworkInformationException
    description: The call to the Win32 function `GetTcpStatistics` failed.
  - type: System.PlatformNotSupportedException
    commentId: T:System.PlatformNotSupportedException
    description: The local computer is not running an operating system that supports IPv6.
  version:
  - netcore-1.0
  - netcore-1.1
  - netcore-2.0
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  - netstandard-2.0
  - xamarinandroid-7.1
  - xamarinios-10.8
  - xamarinmac-3.0
  monikers:
  - netcore-1.0
  - netcore-1.1
  - netcore-2.0
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  - netstandard-2.0
  - xamarinandroid-7.1
  - xamarinios-10.8
  - xamarinmac-3.0
  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Net.NetworkInformation/IPGlobalProperties.xml
  ms.author: bobdel
  manager: markl
- uid: System.Net.NetworkInformation.IPGlobalProperties.GetUdpIPv4Statistics
  commentId: M:System.Net.NetworkInformation.IPGlobalProperties.GetUdpIPv4Statistics
  id: GetUdpIPv4Statistics
  parent: System.Net.NetworkInformation.IPGlobalProperties
  langs:
  - csharp
  name: GetUdpIPv4Statistics()
  nameWithType: IPGlobalProperties.GetUdpIPv4Statistics()
  fullName: IPGlobalProperties.GetUdpIPv4Statistics()
  type: Method
  assemblies:
  - System.Net.NetworkInformation
  - System
  - netstandard
  namespace: System.Net.NetworkInformation
  summary: Provides User Datagram Protocol/Internet Protocol version 4 (UDP/IPv4) statistical data for the local computer.
  remarks: "UDP is a connectionless transport layer protocol that is responsible for sending and receiving datagrams. It is defined in IETF RFC 768.  \n  \n For details on the UDP traffic statistics that are available to applications, see the <xref:System.Net.NetworkInformation.UdpStatistics> class documentation. Note that the object returned by this method reflects the statistics as of the time the <xref:System.Net.NetworkInformation.UdpStatistics> object is created. This information is not updated dynamically."
  example:
  - "The following example displays the UDP/IP statistics for the local computer.  \n  \n [!code-cpp[NCLNetInfoReport#3](~/samples/snippets/cpp/VS_Snippets_Remoting/NCLNetInfoReport/CPP/netinfo.cpp#3)]\n [!code-csharp[NCLNetInfoReport#3](~/samples/snippets/csharp/VS_Snippets_Remoting/NCLNetInfoReport/CS/netinfo.cs#3)]"
  syntax:
    content: public abstract System.Net.NetworkInformation.UdpStatistics GetUdpIPv4Statistics ();
    parameters: []
    return:
      type: System.Net.NetworkInformation.UdpStatistics
      description: A <xref href="System.Net.NetworkInformation.UdpStatistics"></xref> object that provides UDP/IPv4 traffic statistics for the local computer.
  overload: System.Net.NetworkInformation.IPGlobalProperties.GetUdpIPv4Statistics*
  exceptions:
  - type: System.Net.NetworkInformation.NetworkInformationException
    commentId: T:System.Net.NetworkInformation.NetworkInformationException
    description: The call to the Win32 function GetUdpStatistics failed.
  version:
  - netcore-1.0
  - netcore-1.1
  - netcore-2.0
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  - netstandard-2.0
  - xamarinandroid-7.1
  - xamarinios-10.8
  - xamarinmac-3.0
  monikers:
  - netcore-1.0
  - netcore-1.1
  - netcore-2.0
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  - netstandard-2.0
  - xamarinandroid-7.1
  - xamarinios-10.8
  - xamarinmac-3.0
  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Net.NetworkInformation/IPGlobalProperties.xml
  ms.author: bobdel
  manager: markl
- uid: System.Net.NetworkInformation.IPGlobalProperties.GetUdpIPv6Statistics
  commentId: M:System.Net.NetworkInformation.IPGlobalProperties.GetUdpIPv6Statistics
  id: GetUdpIPv6Statistics
  parent: System.Net.NetworkInformation.IPGlobalProperties
  langs:
  - csharp
  name: GetUdpIPv6Statistics()
  nameWithType: IPGlobalProperties.GetUdpIPv6Statistics()
  fullName: IPGlobalProperties.GetUdpIPv6Statistics()
  type: Method
  assemblies:
  - System.Net.NetworkInformation
  - System
  - netstandard
  namespace: System.Net.NetworkInformation
  summary: Provides User Datagram Protocol/Internet Protocol version 6 (UDP/IPv6) statistical data for the local computer.
  remarks: "UDP is a connectionless transport layer protocol that is responsible for sending and receiving datagrams. It is defined in IETF RFC 768.  \n  \n For details on the UDP traffic statistics that are available to applications, see the <xref:System.Net.NetworkInformation.UdpStatistics> class documentation. Note that the object returned by this method reflects the statistics as of the time the <xref:System.Net.NetworkInformation.UdpStatistics> object is created. This information is not updated dynamically."
  example:
  - "The following example displays the UDP/IP statistics for the local computer.  \n  \n [!code-cpp[NCLNetInfoReport#3](~/samples/snippets/cpp/VS_Snippets_Remoting/NCLNetInfoReport/CPP/netinfo.cpp#3)]\n [!code-csharp[NCLNetInfoReport#3](~/samples/snippets/csharp/VS_Snippets_Remoting/NCLNetInfoReport/CS/netinfo.cs#3)]"
  syntax:
    content: public abstract System.Net.NetworkInformation.UdpStatistics GetUdpIPv6Statistics ();
    parameters: []
    return:
      type: System.Net.NetworkInformation.UdpStatistics
      description: A <xref href="System.Net.NetworkInformation.UdpStatistics"></xref> object that provides UDP/IPv6 traffic statistics for the local computer.
  overload: System.Net.NetworkInformation.IPGlobalProperties.GetUdpIPv6Statistics*
  exceptions:
  - type: System.Net.NetworkInformation.NetworkInformationException
    commentId: T:System.Net.NetworkInformation.NetworkInformationException
    description: The call to the Win32 function `GetUdpStatistics` failed.
  - type: System.PlatformNotSupportedException
    commentId: T:System.PlatformNotSupportedException
    description: The local computer is not running an operating system that supports IPv6.
  version:
  - netcore-1.0
  - netcore-1.1
  - netcore-2.0
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  - netstandard-2.0
  - xamarinandroid-7.1
  - xamarinios-10.8
  - xamarinmac-3.0
  monikers:
  - netcore-1.0
  - netcore-1.1
  - netcore-2.0
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  - netstandard-2.0
  - xamarinandroid-7.1
  - xamarinios-10.8
  - xamarinmac-3.0
  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Net.NetworkInformation/IPGlobalProperties.xml
  ms.author: bobdel
  manager: markl
- uid: System.Net.NetworkInformation.IPGlobalProperties.GetUnicastAddresses
  commentId: M:System.Net.NetworkInformation.IPGlobalProperties.GetUnicastAddresses
  id: GetUnicastAddresses
  parent: System.Net.NetworkInformation.IPGlobalProperties
  langs:
  - csharp
  name: GetUnicastAddresses()
  nameWithType: IPGlobalProperties.GetUnicastAddresses()
  fullName: IPGlobalProperties.GetUnicastAddresses()
  type: Method
  assemblies:
  - System
  - netstandard
  - System.Net.NetworkInformation
  namespace: System.Net.NetworkInformation
  summary: Retrieves the stable unicast IP address table on the local computer.
  remarks: "In order to support outbound connections or to accept incoming connections on a Teredo interface, applications need to ensure that the Teredo interface is up and ready for use. This is because Teredo can go into a dormant state when not used for some period of time.  \n  \n The <xref:System.Net.NetworkInformation.IPGlobalProperties.GetUnicastAddresses%2A> method will allow an application to retrieve the list of stable unicast IP addresses. The <xref:System.Net.IPAddress.IsIPv6Teredo%2A?displayProperty=fullName> property can be used to determine if an IP address is an IPv6 Teredo address with the prefix of 2001::/32.  \n  \n The <xref:System.Net.NetworkInformation.IPGlobalProperties.GetUnicastAddresses%2A> method also returns non-Teredo addresses and provides a more convenient way to obtain the unicast IP addresses for a system than enumerating all the <xref:System.Net.NetworkInformation.NetworkInterface?displayProperty=fullName> objects on a local computer and querying the associated IP addresses."
  syntax:
    content: public virtual System.Net.NetworkInformation.UnicastIPAddressInformationCollection GetUnicastAddresses ();
    parameters: []
    return:
      type: System.Net.NetworkInformation.UnicastIPAddressInformationCollection
      description: A <xref href="System.Net.NetworkInformation.UnicastIPAddressInformationCollection"></xref> that contains a list of stable unicast IP addresses on the local computer.
  overload: System.Net.NetworkInformation.IPGlobalProperties.GetUnicastAddresses*
  exceptions:
  - type: System.Net.NetworkInformation.NetworkInformationException
    commentId: T:System.Net.NetworkInformation.NetworkInformationException
    description: The call to the native `GetAdaptersAddresses` function failed.
  - type: System.NotImplementedException
    commentId: T:System.NotImplementedException
    description: This method is not implemented on the platform. This method uses the native `NotifyStableUnicastIpAddressTable` function that is supported on Windows Vista and later.
  - type: System.Security.SecurityException
    commentId: T:System.Security.SecurityException
    description: The caller does not have necessary <xref href="System.Net.NetworkInformation.NetworkInformationAccess.Read"></xref> permission.
  - type: System.ComponentModel.Win32Exception
    commentId: T:System.ComponentModel.Win32Exception
    description: The call to the native `NotifyStableUnicastIpAddressTable` function failed.
  version:
  - netcore-2.0
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  - netstandard-2.0
  - xamarinandroid-7.1
  - xamarinios-10.8
  - xamarinmac-3.0
  monikers:
  - netcore-2.0
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  - netstandard-2.0
  - xamarinandroid-7.1
  - xamarinios-10.8
  - xamarinmac-3.0
  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Net.NetworkInformation/IPGlobalProperties.xml
  ms.author: bobdel
  manager: markl
- uid: System.Net.NetworkInformation.IPGlobalProperties.GetUnicastAddressesAsync
  commentId: M:System.Net.NetworkInformation.IPGlobalProperties.GetUnicastAddressesAsync
  id: GetUnicastAddressesAsync
  parent: System.Net.NetworkInformation.IPGlobalProperties
  langs:
  - csharp
  name: GetUnicastAddressesAsync()
  nameWithType: IPGlobalProperties.GetUnicastAddressesAsync()
  fullName: IPGlobalProperties.GetUnicastAddressesAsync()
  type: Method
  assemblies:
  - System.Net.NetworkInformation
  - System
  - netstandard
  namespace: System.Net.NetworkInformation
  summary: Retrieves the stable unicast IP address table on the local computer as an asynchronous operation.
  remarks: "In order to support outbound connections or to accept incoming connections on a Teredo interface, applications need to ensure that the Teredo interface is up and ready for use. This is because Teredo can go into a dormant state when not used for some period of time.  \n  \n The <xref:System.Net.NetworkInformation.IPGlobalProperties.GetUnicastAddressesAsync%2A> method will allow an application to retrieve the list of stable unicast IP addresses as asynchronous operation. The <xref:System.Net.IPAddress.IsIPv6Teredo%2A?displayProperty=fullName> property can be used to determine if an IP address is an IPv6 Teredo address with the prefix of 2001::/32.  \n  \n The <xref:System.Net.NetworkInformation.IPGlobalProperties.GetUnicastAddresses%2A> method also returns non-Teredo addresses and provides a more convenient way to obtain the unicast IP addresses for a system than enumerating all the <xref:System.Net.NetworkInformation.NetworkInterface?displayProperty=fullName> objects on a local computer and querying the associated IP addresses."
  syntax:
    content: public virtual System.Threading.Tasks.Task<System.Net.NetworkInformation.UnicastIPAddressInformationCollection> GetUnicastAddressesAsync ();
    parameters: []
    return:
      type: System.Threading.Tasks.Task{System.Net.NetworkInformation.UnicastIPAddressInformationCollection}
      description: "Returns <xref href=\"System.Threading.Tasks.Task`1\"></xref>.  \n  \n The task object representing the asynchronous operation."
  overload: System.Net.NetworkInformation.IPGlobalProperties.GetUnicastAddressesAsync*
  exceptions:
  - type: System.Net.NetworkInformation.NetworkInformationException
    commentId: T:System.Net.NetworkInformation.NetworkInformationException
    description: The call to the native `GetAdaptersAddresses` function failed.
  - type: System.Security.SecurityException
    commentId: T:System.Security.SecurityException
    description: The caller does not have necessary <xref href="System.Net.NetworkInformation.NetworkInformationAccess.Read"></xref> permission.
  - type: System.ComponentModel.Win32Exception
    commentId: T:System.ComponentModel.Win32Exception
    description: The call to the native `NotifyStableUnicastIpAddressTable` function failed.
  version:
  - netcore-1.0
  - netcore-1.1
  - netcore-2.0
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  - netstandard-2.0
  - xamarinandroid-7.1
  - xamarinios-10.8
  - xamarinmac-3.0
  monikers:
  - netcore-1.0
  - netcore-1.1
  - netcore-2.0
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  - netstandard-2.0
  - xamarinandroid-7.1
  - xamarinios-10.8
  - xamarinmac-3.0
  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Net.NetworkInformation/IPGlobalProperties.xml
  ms.author: bobdel
  manager: markl
- uid: System.Net.NetworkInformation.IPGlobalProperties.HostName
  commentId: P:System.Net.NetworkInformation.IPGlobalProperties.HostName
  id: HostName
  parent: System.Net.NetworkInformation.IPGlobalProperties
  langs:
  - csharp
  name: HostName
  nameWithType: IPGlobalProperties.HostName
  fullName: IPGlobalProperties.HostName
  type: Property
  assemblies:
  - System.Net.NetworkInformation
  - System
  - netstandard
  namespace: System.Net.NetworkInformation
  summary: Gets the host name for the local computer.
  remarks: "This property calls into the native IP Helper function, GetNetworkParams, which returns a FIXED_INFO structure that contains the NetBIOS host name string. The host name string is truncated when it exceeds 15 characters.  \n  \n A computer's NetBIOS name must be unique within a network and is not fully qualified by the domain name."
  example:
  - "The following code example displays network information for the local computer.  \n  \n [!code-cpp[NCLNetInfoReport#15](~/samples/snippets/cpp/VS_Snippets_Remoting/NCLNetInfoReport/CPP/netinfo.cpp#15)]\n [!code-csharp[NCLNetInfoReport#15](~/samples/snippets/csharp/VS_Snippets_Remoting/NCLNetInfoReport/CS/netinfo.cs#15)]"
  syntax:
    content: public abstract string HostName { get; }
    return:
      type: System.String
      description: A <xref href="System.String"></xref> instance that contains the computer's NetBIOS name.
  overload: System.Net.NetworkInformation.IPGlobalProperties.HostName*
  exceptions:
  - type: System.Net.NetworkInformation.NetworkInformationException
    commentId: T:System.Net.NetworkInformation.NetworkInformationException
    description: A Win32 function call failed.
  version:
  - netcore-1.0
  - netcore-1.1
  - netcore-2.0
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  - netstandard-2.0
  - xamarinandroid-7.1
  - xamarinios-10.8
  - xamarinmac-3.0
  monikers:
  - netcore-1.0
  - netcore-1.1
  - netcore-2.0
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  - netstandard-2.0
  - xamarinandroid-7.1
  - xamarinios-10.8
  - xamarinmac-3.0
  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Net.NetworkInformation/IPGlobalProperties.xml
  ms.author: bobdel
  manager: markl
- uid: System.Net.NetworkInformation.IPGlobalProperties.IsWinsProxy
  commentId: P:System.Net.NetworkInformation.IPGlobalProperties.IsWinsProxy
  id: IsWinsProxy
  parent: System.Net.NetworkInformation.IPGlobalProperties
  langs:
  - csharp
  name: IsWinsProxy
  nameWithType: IPGlobalProperties.IsWinsProxy
  fullName: IPGlobalProperties.IsWinsProxy
  type: Property
  assemblies:
  - System.Net.NetworkInformation
  - System
  - netstandard
  namespace: System.Net.NetworkInformation
  summary: Gets a <xref href="System.Boolean"></xref> value that specifies whether the local computer is acting as a Windows Internet Name Service (WINS) proxy.
  remarks: WINS provides a distributed database for registering and querying dynamic NetBIOS names to IP address mappings.
  example:
  - "The following code example displays network information for the local computer.  \n  \n [!code-cpp[NCLNetInfoReport#15](~/samples/snippets/cpp/VS_Snippets_Remoting/NCLNetInfoReport/CPP/netinfo.cpp#15)]\n [!code-csharp[NCLNetInfoReport#15](~/samples/snippets/csharp/VS_Snippets_Remoting/NCLNetInfoReport/CS/netinfo.cs#15)]"
  syntax:
    content: public abstract bool IsWinsProxy { get; }
    return:
      type: System.Boolean
      description: '`true` if the local computer is a WINS proxy; otherwise, `false`.'
  overload: System.Net.NetworkInformation.IPGlobalProperties.IsWinsProxy*
  exceptions:
  - type: System.Net.NetworkInformation.NetworkInformationException
    commentId: T:System.Net.NetworkInformation.NetworkInformationException
    description: A Win32 function call failed.
  version:
  - netcore-1.0
  - netcore-1.1
  - netcore-2.0
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  - netstandard-2.0
  - xamarinandroid-7.1
  - xamarinios-10.8
  - xamarinmac-3.0
  monikers:
  - netcore-1.0
  - netcore-1.1
  - netcore-2.0
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  - netstandard-2.0
  - xamarinandroid-7.1
  - xamarinios-10.8
  - xamarinmac-3.0
  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Net.NetworkInformation/IPGlobalProperties.xml
  ms.author: bobdel
  manager: markl
- uid: System.Net.NetworkInformation.IPGlobalProperties.NodeType
  commentId: P:System.Net.NetworkInformation.IPGlobalProperties.NodeType
  id: NodeType
  parent: System.Net.NetworkInformation.IPGlobalProperties
  langs:
  - csharp
  name: NodeType
  nameWithType: IPGlobalProperties.NodeType
  fullName: IPGlobalProperties.NodeType
  type: Property
  assemblies:
  - System.Net.NetworkInformation
  - System
  - netstandard
  namespace: System.Net.NetworkInformation
  summary: Gets the Network Basic Input/Output System (NetBIOS) node type of the local computer.
  remarks: The node type determines the way in which NetBIOS names are resolved to IP addresses. For additional information, see the <xref:System.Net.NetworkInformation.NetBiosNodeType> class overview.
  example:
  - "The following code example displays network information for the local computer.  \n  \n [!code-cpp[NCLNetInfoReport#15](~/samples/snippets/cpp/VS_Snippets_Remoting/NCLNetInfoReport/CPP/netinfo.cpp#15)]\n [!code-csharp[NCLNetInfoReport#15](~/samples/snippets/csharp/VS_Snippets_Remoting/NCLNetInfoReport/CS/netinfo.cs#15)]"
  syntax:
    content: public abstract System.Net.NetworkInformation.NetBiosNodeType NodeType { get; }
    return:
      type: System.Net.NetworkInformation.NetBiosNodeType
      description: A <xref href="System.Net.NetworkInformation.NetBiosNodeType"></xref> value.
  overload: System.Net.NetworkInformation.IPGlobalProperties.NodeType*
  exceptions:
  - type: System.Net.NetworkInformation.NetworkInformationException
    commentId: T:System.Net.NetworkInformation.NetworkInformationException
    description: A Win32 function call failed.
  version:
  - netcore-1.0
  - netcore-1.1
  - netcore-2.0
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  - netstandard-2.0
  - xamarinandroid-7.1
  - xamarinios-10.8
  - xamarinmac-3.0
  monikers:
  - netcore-1.0
  - netcore-1.1
  - netcore-2.0
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  - netstandard-2.0
  - xamarinandroid-7.1
  - xamarinios-10.8
  - xamarinmac-3.0
  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Net.NetworkInformation/IPGlobalProperties.xml
  ms.author: bobdel
  manager: markl
references:
- uid: System.Object
  parent: System
  isExternal: false
  name: Object
  nameWithType: Object
  fullName: System.Object
- uid: System.NotImplementedException
  parent: System
  isExternal: false
  name: NotImplementedException
  nameWithType: NotImplementedException
  fullName: System.NotImplementedException
- uid: System.ComponentModel.Win32Exception
  parent: System.ComponentModel
  isExternal: false
  name: Win32Exception
  nameWithType: Win32Exception
  fullName: System.ComponentModel.Win32Exception
- uid: System.Net.NetworkInformation.NetworkInformationException
  parent: System.Net.NetworkInformation
  isExternal: false
  name: NetworkInformationException
  nameWithType: NetworkInformationException
  fullName: System.Net.NetworkInformation.NetworkInformationException
- uid: System.Security.SecurityException
  parent: System.Security
  isExternal: false
  name: SecurityException
  nameWithType: SecurityException
  fullName: System.Security.SecurityException
- uid: System.PlatformNotSupportedException
  parent: System
  isExternal: false
  name: PlatformNotSupportedException
  nameWithType: PlatformNotSupportedException
  fullName: System.PlatformNotSupportedException
- uid: System.Net.NetworkInformation.IPGlobalProperties.#ctor
  parent: System.Net.NetworkInformation.IPGlobalProperties
  isExternal: false
  name: IPGlobalProperties()
  nameWithType: IPGlobalProperties.IPGlobalProperties()
  fullName: IPGlobalProperties.IPGlobalProperties()
- uid: System.Net.NetworkInformation.IPGlobalProperties.BeginGetUnicastAddresses(System.AsyncCallback,System.Object)
  parent: System.Net.NetworkInformation.IPGlobalProperties
  isExternal: false
  name: BeginGetUnicastAddresses(AsyncCallback, Object)
  nameWithType: IPGlobalProperties.BeginGetUnicastAddresses(AsyncCallback, Object)
  fullName: IPGlobalProperties.BeginGetUnicastAddresses(AsyncCallback, Object)
- uid: System.IAsyncResult
  parent: System
  isExternal: false
  name: IAsyncResult
  nameWithType: IAsyncResult
  fullName: System.IAsyncResult
- uid: System.AsyncCallback
  parent: System
  isExternal: false
  name: AsyncCallback
  nameWithType: AsyncCallback
  fullName: System.AsyncCallback
- uid: System.Net.NetworkInformation.IPGlobalProperties.DhcpScopeName
  parent: System.Net.NetworkInformation.IPGlobalProperties
  isExternal: false
  name: DhcpScopeName
  nameWithType: IPGlobalProperties.DhcpScopeName
  fullName: IPGlobalProperties.DhcpScopeName
- uid: System.String
  parent: System
  isExternal: false
  name: String
  nameWithType: String
  fullName: System.String
- uid: System.Net.NetworkInformation.IPGlobalProperties.DomainName
  parent: System.Net.NetworkInformation.IPGlobalProperties
  isExternal: false
  name: DomainName
  nameWithType: IPGlobalProperties.DomainName
  fullName: IPGlobalProperties.DomainName
- uid: System.Net.NetworkInformation.IPGlobalProperties.EndGetUnicastAddresses(System.IAsyncResult)
  parent: System.Net.NetworkInformation.IPGlobalProperties
  isExternal: false
  name: EndGetUnicastAddresses(IAsyncResult)
  nameWithType: IPGlobalProperties.EndGetUnicastAddresses(IAsyncResult)
  fullName: IPGlobalProperties.EndGetUnicastAddresses(IAsyncResult)
- uid: System.Net.NetworkInformation.UnicastIPAddressInformationCollection
  parent: System.Net.NetworkInformation
  isExternal: false
  name: UnicastIPAddressInformationCollection
  nameWithType: UnicastIPAddressInformationCollection
  fullName: System.Net.NetworkInformation.UnicastIPAddressInformationCollection
- uid: System.Net.NetworkInformation.IPGlobalProperties.GetActiveTcpConnections
  parent: System.Net.NetworkInformation.IPGlobalProperties
  isExternal: false
  name: GetActiveTcpConnections()
  nameWithType: IPGlobalProperties.GetActiveTcpConnections()
  fullName: IPGlobalProperties.GetActiveTcpConnections()
- uid: System.Net.NetworkInformation.TcpConnectionInformation
  name: TcpConnectionInformation
  nameWithType: TcpConnectionInformation
  fullName: System.Net.NetworkInformation.TcpConnectionInformation
- uid: System.Net.NetworkInformation.TcpConnectionInformation[]
  parent: System.Net.NetworkInformation
  isExternal: false
  name: TcpConnectionInformation[]
  nameWithType: TcpConnectionInformation[]
  fullName: System.Net.NetworkInformation.TcpConnectionInformation[]
  spec.csharp:
  - uid: System.Net.NetworkInformation.TcpConnectionInformation
    name: TcpConnectionInformation
    nameWithType: TcpConnectionInformation
    fullName: System.Net.NetworkInformation.TcpConnectionInformation
  - name: '[]'
    nameWithType: '[]'
    fullName: '[]'
- uid: System.Net.NetworkInformation.IPGlobalProperties.GetActiveTcpListeners
  parent: System.Net.NetworkInformation.IPGlobalProperties
  isExternal: false
  name: GetActiveTcpListeners()
  nameWithType: IPGlobalProperties.GetActiveTcpListeners()
  fullName: IPGlobalProperties.GetActiveTcpListeners()
- uid: System.Net.IPEndPoint
  name: IPEndPoint
  nameWithType: IPEndPoint
  fullName: System.Net.IPEndPoint
- uid: System.Net.IPEndPoint[]
  parent: System.Net
  isExternal: false
  name: IPEndPoint[]
  nameWithType: IPEndPoint[]
  fullName: System.Net.IPEndPoint[]
  spec.csharp:
  - uid: System.Net.IPEndPoint
    name: IPEndPoint
    nameWithType: IPEndPoint
    fullName: System.Net.IPEndPoint
  - name: '[]'
    nameWithType: '[]'
    fullName: '[]'
- uid: System.Net.NetworkInformation.IPGlobalProperties.GetActiveUdpListeners
  parent: System.Net.NetworkInformation.IPGlobalProperties
  isExternal: false
  name: GetActiveUdpListeners()
  nameWithType: IPGlobalProperties.GetActiveUdpListeners()
  fullName: IPGlobalProperties.GetActiveUdpListeners()
- uid: System.Net.NetworkInformation.IPGlobalProperties.GetIcmpV4Statistics
  parent: System.Net.NetworkInformation.IPGlobalProperties
  isExternal: false
  name: GetIcmpV4Statistics()
  nameWithType: IPGlobalProperties.GetIcmpV4Statistics()
  fullName: IPGlobalProperties.GetIcmpV4Statistics()
- uid: System.Net.NetworkInformation.IcmpV4Statistics
  parent: System.Net.NetworkInformation
  isExternal: false
  name: IcmpV4Statistics
  nameWithType: IcmpV4Statistics
  fullName: System.Net.NetworkInformation.IcmpV4Statistics
- uid: System.Net.NetworkInformation.IPGlobalProperties.GetIcmpV6Statistics
  parent: System.Net.NetworkInformation.IPGlobalProperties
  isExternal: false
  name: GetIcmpV6Statistics()
  nameWithType: IPGlobalProperties.GetIcmpV6Statistics()
  fullName: IPGlobalProperties.GetIcmpV6Statistics()
- uid: System.Net.NetworkInformation.IcmpV6Statistics
  parent: System.Net.NetworkInformation
  isExternal: false
  name: IcmpV6Statistics
  nameWithType: IcmpV6Statistics
  fullName: System.Net.NetworkInformation.IcmpV6Statistics
- uid: System.Net.NetworkInformation.IPGlobalProperties.GetIPGlobalProperties
  parent: System.Net.NetworkInformation.IPGlobalProperties
  isExternal: false
  name: GetIPGlobalProperties()
  nameWithType: IPGlobalProperties.GetIPGlobalProperties()
  fullName: IPGlobalProperties.GetIPGlobalProperties()
- uid: System.Net.NetworkInformation.IPGlobalProperties
  parent: System.Net.NetworkInformation
  isExternal: false
  name: IPGlobalProperties
  nameWithType: IPGlobalProperties
  fullName: System.Net.NetworkInformation.IPGlobalProperties
- uid: System.Net.NetworkInformation.IPGlobalProperties.GetIPv4GlobalStatistics
  parent: System.Net.NetworkInformation.IPGlobalProperties
  isExternal: false
  name: GetIPv4GlobalStatistics()
  nameWithType: IPGlobalProperties.GetIPv4GlobalStatistics()
  fullName: IPGlobalProperties.GetIPv4GlobalStatistics()
- uid: System.Net.NetworkInformation.IPGlobalStatistics
  parent: System.Net.NetworkInformation
  isExternal: false
  name: IPGlobalStatistics
  nameWithType: IPGlobalStatistics
  fullName: System.Net.NetworkInformation.IPGlobalStatistics
- uid: System.Net.NetworkInformation.IPGlobalProperties.GetIPv6GlobalStatistics
  parent: System.Net.NetworkInformation.IPGlobalProperties
  isExternal: false
  name: GetIPv6GlobalStatistics()
  nameWithType: IPGlobalProperties.GetIPv6GlobalStatistics()
  fullName: IPGlobalProperties.GetIPv6GlobalStatistics()
- uid: System.Net.NetworkInformation.IPGlobalProperties.GetTcpIPv4Statistics
  parent: System.Net.NetworkInformation.IPGlobalProperties
  isExternal: false
  name: GetTcpIPv4Statistics()
  nameWithType: IPGlobalProperties.GetTcpIPv4Statistics()
  fullName: IPGlobalProperties.GetTcpIPv4Statistics()
- uid: System.Net.NetworkInformation.TcpStatistics
  parent: System.Net.NetworkInformation
  isExternal: false
  name: TcpStatistics
  nameWithType: TcpStatistics
  fullName: System.Net.NetworkInformation.TcpStatistics
- uid: System.Net.NetworkInformation.IPGlobalProperties.GetTcpIPv6Statistics
  parent: System.Net.NetworkInformation.IPGlobalProperties
  isExternal: false
  name: GetTcpIPv6Statistics()
  nameWithType: IPGlobalProperties.GetTcpIPv6Statistics()
  fullName: IPGlobalProperties.GetTcpIPv6Statistics()
- uid: System.Net.NetworkInformation.IPGlobalProperties.GetUdpIPv4Statistics
  parent: System.Net.NetworkInformation.IPGlobalProperties
  isExternal: false
  name: GetUdpIPv4Statistics()
  nameWithType: IPGlobalProperties.GetUdpIPv4Statistics()
  fullName: IPGlobalProperties.GetUdpIPv4Statistics()
- uid: System.Net.NetworkInformation.UdpStatistics
  parent: System.Net.NetworkInformation
  isExternal: false
  name: UdpStatistics
  nameWithType: UdpStatistics
  fullName: System.Net.NetworkInformation.UdpStatistics
- uid: System.Net.NetworkInformation.IPGlobalProperties.GetUdpIPv6Statistics
  parent: System.Net.NetworkInformation.IPGlobalProperties
  isExternal: false
  name: GetUdpIPv6Statistics()
  nameWithType: IPGlobalProperties.GetUdpIPv6Statistics()
  fullName: IPGlobalProperties.GetUdpIPv6Statistics()
- uid: System.Net.NetworkInformation.IPGlobalProperties.GetUnicastAddresses
  parent: System.Net.NetworkInformation.IPGlobalProperties
  isExternal: false
  name: GetUnicastAddresses()
  nameWithType: IPGlobalProperties.GetUnicastAddresses()
  fullName: IPGlobalProperties.GetUnicastAddresses()
- uid: System.Net.NetworkInformation.IPGlobalProperties.GetUnicastAddressesAsync
  parent: System.Net.NetworkInformation.IPGlobalProperties
  isExternal: false
  name: GetUnicastAddressesAsync()
  nameWithType: IPGlobalProperties.GetUnicastAddressesAsync()
  fullName: IPGlobalProperties.GetUnicastAddressesAsync()
- uid: System.Threading.Tasks.Task`1
  name: Task<TResult>
  nameWithType: Task<TResult>
  fullName: System.Threading.Tasks.Task<TResult>
- uid: System.Threading.Tasks.Task{System.Net.NetworkInformation.UnicastIPAddressInformationCollection}
  parent: System.Threading.Tasks
  isExternal: false
  name: Task<UnicastIPAddressInformationCollection>
  nameWithType: Task<UnicastIPAddressInformationCollection>
  fullName: System.Threading.Tasks.Task<System.Net.NetworkInformation.UnicastIPAddressInformationCollection>
  spec.csharp:
  - uid: System.Threading.Tasks.Task`1
    name: Task
    nameWithType: Task
    fullName: System.Threading.Tasks.Task
  - name: <
    nameWithType: <
    fullName: <
  - uid: System.Net.NetworkInformation.UnicastIPAddressInformationCollection
    name: UnicastIPAddressInformationCollection
    nameWithType: UnicastIPAddressInformationCollection
    fullName: System.Net.NetworkInformation.UnicastIPAddressInformationCollection
  - name: '>'
    nameWithType: '>'
    fullName: '>'
- uid: System.Net.NetworkInformation.IPGlobalProperties.HostName
  parent: System.Net.NetworkInformation.IPGlobalProperties
  isExternal: false
  name: HostName
  nameWithType: IPGlobalProperties.HostName
  fullName: IPGlobalProperties.HostName
- uid: System.Net.NetworkInformation.IPGlobalProperties.IsWinsProxy
  parent: System.Net.NetworkInformation.IPGlobalProperties
  isExternal: false
  name: IsWinsProxy
  nameWithType: IPGlobalProperties.IsWinsProxy
  fullName: IPGlobalProperties.IsWinsProxy
- uid: System.Boolean
  parent: System
  isExternal: false
  name: Boolean
  nameWithType: Boolean
  fullName: System.Boolean
- uid: System.Net.NetworkInformation.IPGlobalProperties.NodeType
  parent: System.Net.NetworkInformation.IPGlobalProperties
  isExternal: false
  name: NodeType
  nameWithType: IPGlobalProperties.NodeType
  fullName: IPGlobalProperties.NodeType
- uid: System.Net.NetworkInformation.NetBiosNodeType
  parent: System.Net.NetworkInformation
  isExternal: false
  name: NetBiosNodeType
  nameWithType: NetBiosNodeType
  fullName: System.Net.NetworkInformation.NetBiosNodeType
- uid: System.Net.NetworkInformation.IPGlobalProperties.#ctor*
  parent: System.Net.NetworkInformation.IPGlobalProperties
  isExternal: false
  name: IPGlobalProperties
  nameWithType: IPGlobalProperties.IPGlobalProperties
  fullName: IPGlobalProperties.IPGlobalProperties
  monikers:
  - netcore-1.0
  - netcore-1.1
  - netcore-2.0
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  - netstandard-2.0
  - xamarinandroid-7.1
  - xamarinios-10.8
  - xamarinmac-3.0
  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Net.NetworkInformation/IPGlobalProperties.xml
- uid: System.Net.NetworkInformation.IPGlobalProperties.BeginGetUnicastAddresses*
  parent: System.Net.NetworkInformation.IPGlobalProperties
  isExternal: false
  name: BeginGetUnicastAddresses
  nameWithType: IPGlobalProperties.BeginGetUnicastAddresses
  fullName: IPGlobalProperties.BeginGetUnicastAddresses
  monikers:
  - netcore-2.0
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  - netstandard-2.0
  - xamarinandroid-7.1
  - xamarinios-10.8
  - xamarinmac-3.0
  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Net.NetworkInformation/IPGlobalProperties.xml
- uid: System.Net.NetworkInformation.IPGlobalProperties.DhcpScopeName*
  parent: System.Net.NetworkInformation.IPGlobalProperties
  isExternal: false
  name: DhcpScopeName
  nameWithType: IPGlobalProperties.DhcpScopeName
  fullName: IPGlobalProperties.DhcpScopeName
  monikers:
  - netcore-1.0
  - netcore-1.1
  - netcore-2.0
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  - netstandard-2.0
  - xamarinandroid-7.1
  - xamarinios-10.8
  - xamarinmac-3.0
  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Net.NetworkInformation/IPGlobalProperties.xml
- uid: System.Net.NetworkInformation.IPGlobalProperties.DomainName*
  parent: System.Net.NetworkInformation.IPGlobalProperties
  isExternal: false
  name: DomainName
  nameWithType: IPGlobalProperties.DomainName
  fullName: IPGlobalProperties.DomainName
  monikers:
  - netcore-1.0
  - netcore-1.1
  - netcore-2.0
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  - netstandard-2.0
  - xamarinandroid-7.1
  - xamarinios-10.8
  - xamarinmac-3.0
  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Net.NetworkInformation/IPGlobalProperties.xml
- uid: System.Net.NetworkInformation.IPGlobalProperties.EndGetUnicastAddresses*
  parent: System.Net.NetworkInformation.IPGlobalProperties
  isExternal: false
  name: EndGetUnicastAddresses
  nameWithType: IPGlobalProperties.EndGetUnicastAddresses
  fullName: IPGlobalProperties.EndGetUnicastAddresses
  monikers:
  - netcore-2.0
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  - netstandard-2.0
  - xamarinandroid-7.1
  - xamarinios-10.8
  - xamarinmac-3.0
  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Net.NetworkInformation/IPGlobalProperties.xml
- uid: System.Net.NetworkInformation.IPGlobalProperties.GetActiveTcpConnections*
  parent: System.Net.NetworkInformation.IPGlobalProperties
  isExternal: false
  name: GetActiveTcpConnections
  nameWithType: IPGlobalProperties.GetActiveTcpConnections
  fullName: IPGlobalProperties.GetActiveTcpConnections
  monikers:
  - netcore-1.0
  - netcore-1.1
  - netcore-2.0
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  - netstandard-2.0
  - xamarinandroid-7.1
  - xamarinios-10.8
  - xamarinmac-3.0
  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Net.NetworkInformation/IPGlobalProperties.xml
- uid: System.Net.NetworkInformation.IPGlobalProperties.GetActiveTcpListeners*
  parent: System.Net.NetworkInformation.IPGlobalProperties
  isExternal: false
  name: GetActiveTcpListeners
  nameWithType: IPGlobalProperties.GetActiveTcpListeners
  fullName: IPGlobalProperties.GetActiveTcpListeners
  monikers:
  - netcore-1.0
  - netcore-1.1
  - netcore-2.0
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  - netstandard-2.0
  - xamarinandroid-7.1
  - xamarinios-10.8
  - xamarinmac-3.0
  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Net.NetworkInformation/IPGlobalProperties.xml
- uid: System.Net.NetworkInformation.IPGlobalProperties.GetActiveUdpListeners*
  parent: System.Net.NetworkInformation.IPGlobalProperties
  isExternal: false
  name: GetActiveUdpListeners
  nameWithType: IPGlobalProperties.GetActiveUdpListeners
  fullName: IPGlobalProperties.GetActiveUdpListeners
  monikers:
  - netcore-1.0
  - netcore-1.1
  - netcore-2.0
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  - netstandard-2.0
  - xamarinandroid-7.1
  - xamarinios-10.8
  - xamarinmac-3.0
  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Net.NetworkInformation/IPGlobalProperties.xml
- uid: System.Net.NetworkInformation.IPGlobalProperties.GetIcmpV4Statistics*
  parent: System.Net.NetworkInformation.IPGlobalProperties
  isExternal: false
  name: GetIcmpV4Statistics
  nameWithType: IPGlobalProperties.GetIcmpV4Statistics
  fullName: IPGlobalProperties.GetIcmpV4Statistics
  monikers:
  - netcore-1.0
  - netcore-1.1
  - netcore-2.0
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  - netstandard-2.0
  - xamarinandroid-7.1
  - xamarinios-10.8
  - xamarinmac-3.0
  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Net.NetworkInformation/IPGlobalProperties.xml
- uid: System.Net.NetworkInformation.IPGlobalProperties.GetIcmpV6Statistics*
  parent: System.Net.NetworkInformation.IPGlobalProperties
  isExternal: false
  name: GetIcmpV6Statistics
  nameWithType: IPGlobalProperties.GetIcmpV6Statistics
  fullName: IPGlobalProperties.GetIcmpV6Statistics
  monikers:
  - netcore-1.0
  - netcore-1.1
  - netcore-2.0
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  - netstandard-2.0
  - xamarinandroid-7.1
  - xamarinios-10.8
  - xamarinmac-3.0
  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Net.NetworkInformation/IPGlobalProperties.xml
- uid: System.Net.NetworkInformation.IPGlobalProperties.GetIPGlobalProperties*
  parent: System.Net.NetworkInformation.IPGlobalProperties
  isExternal: false
  name: GetIPGlobalProperties
  nameWithType: IPGlobalProperties.GetIPGlobalProperties
  fullName: IPGlobalProperties.GetIPGlobalProperties
  monikers:
  - netcore-1.0
  - netcore-1.1
  - netcore-2.0
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  - netstandard-2.0
  - xamarinandroid-7.1
  - xamarinios-10.8
  - xamarinmac-3.0
  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Net.NetworkInformation/IPGlobalProperties.xml
- uid: System.Net.NetworkInformation.IPGlobalProperties.GetIPv4GlobalStatistics*
  parent: System.Net.NetworkInformation.IPGlobalProperties
  isExternal: false
  name: GetIPv4GlobalStatistics
  nameWithType: IPGlobalProperties.GetIPv4GlobalStatistics
  fullName: IPGlobalProperties.GetIPv4GlobalStatistics
  monikers:
  - netcore-1.0
  - netcore-1.1
  - netcore-2.0
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  - netstandard-2.0
  - xamarinandroid-7.1
  - xamarinios-10.8
  - xamarinmac-3.0
  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Net.NetworkInformation/IPGlobalProperties.xml
- uid: System.Net.NetworkInformation.IPGlobalProperties.GetIPv6GlobalStatistics*
  parent: System.Net.NetworkInformation.IPGlobalProperties
  isExternal: false
  name: GetIPv6GlobalStatistics
  nameWithType: IPGlobalProperties.GetIPv6GlobalStatistics
  fullName: IPGlobalProperties.GetIPv6GlobalStatistics
  monikers:
  - netcore-1.0
  - netcore-1.1
  - netcore-2.0
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  - netstandard-2.0
  - xamarinandroid-7.1
  - xamarinios-10.8
  - xamarinmac-3.0
  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Net.NetworkInformation/IPGlobalProperties.xml
- uid: System.Net.NetworkInformation.IPGlobalProperties.GetTcpIPv4Statistics*
  parent: System.Net.NetworkInformation.IPGlobalProperties
  isExternal: false
  name: GetTcpIPv4Statistics
  nameWithType: IPGlobalProperties.GetTcpIPv4Statistics
  fullName: IPGlobalProperties.GetTcpIPv4Statistics
  monikers:
  - netcore-1.0
  - netcore-1.1
  - netcore-2.0
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  - netstandard-2.0
  - xamarinandroid-7.1
  - xamarinios-10.8
  - xamarinmac-3.0
  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Net.NetworkInformation/IPGlobalProperties.xml
- uid: System.Net.NetworkInformation.IPGlobalProperties.GetTcpIPv6Statistics*
  parent: System.Net.NetworkInformation.IPGlobalProperties
  isExternal: false
  name: GetTcpIPv6Statistics
  nameWithType: IPGlobalProperties.GetTcpIPv6Statistics
  fullName: IPGlobalProperties.GetTcpIPv6Statistics
  monikers:
  - netcore-1.0
  - netcore-1.1
  - netcore-2.0
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  - netstandard-2.0
  - xamarinandroid-7.1
  - xamarinios-10.8
  - xamarinmac-3.0
  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Net.NetworkInformation/IPGlobalProperties.xml
- uid: System.Net.NetworkInformation.IPGlobalProperties.GetUdpIPv4Statistics*
  parent: System.Net.NetworkInformation.IPGlobalProperties
  isExternal: false
  name: GetUdpIPv4Statistics
  nameWithType: IPGlobalProperties.GetUdpIPv4Statistics
  fullName: IPGlobalProperties.GetUdpIPv4Statistics
  monikers:
  - netcore-1.0
  - netcore-1.1
  - netcore-2.0
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  - netstandard-2.0
  - xamarinandroid-7.1
  - xamarinios-10.8
  - xamarinmac-3.0
  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Net.NetworkInformation/IPGlobalProperties.xml
- uid: System.Net.NetworkInformation.IPGlobalProperties.GetUdpIPv6Statistics*
  parent: System.Net.NetworkInformation.IPGlobalProperties
  isExternal: false
  name: GetUdpIPv6Statistics
  nameWithType: IPGlobalProperties.GetUdpIPv6Statistics
  fullName: IPGlobalProperties.GetUdpIPv6Statistics
  monikers:
  - netcore-1.0
  - netcore-1.1
  - netcore-2.0
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  - netstandard-2.0
  - xamarinandroid-7.1
  - xamarinios-10.8
  - xamarinmac-3.0
  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Net.NetworkInformation/IPGlobalProperties.xml
- uid: System.Net.NetworkInformation.IPGlobalProperties.GetUnicastAddresses*
  parent: System.Net.NetworkInformation.IPGlobalProperties
  isExternal: false
  name: GetUnicastAddresses
  nameWithType: IPGlobalProperties.GetUnicastAddresses
  fullName: IPGlobalProperties.GetUnicastAddresses
  monikers:
  - netcore-2.0
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  - netstandard-2.0
  - xamarinandroid-7.1
  - xamarinios-10.8
  - xamarinmac-3.0
  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Net.NetworkInformation/IPGlobalProperties.xml
- uid: System.Net.NetworkInformation.IPGlobalProperties.GetUnicastAddressesAsync*
  parent: System.Net.NetworkInformation.IPGlobalProperties
  isExternal: false
  name: GetUnicastAddressesAsync
  nameWithType: IPGlobalProperties.GetUnicastAddressesAsync
  fullName: IPGlobalProperties.GetUnicastAddressesAsync
  monikers:
  - netcore-1.0
  - netcore-1.1
  - netcore-2.0
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  - netstandard-2.0
  - xamarinandroid-7.1
  - xamarinios-10.8
  - xamarinmac-3.0
  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Net.NetworkInformation/IPGlobalProperties.xml
- uid: System.Net.NetworkInformation.IPGlobalProperties.HostName*
  parent: System.Net.NetworkInformation.IPGlobalProperties
  isExternal: false
  name: HostName
  nameWithType: IPGlobalProperties.HostName
  fullName: IPGlobalProperties.HostName
  monikers:
  - netcore-1.0
  - netcore-1.1
  - netcore-2.0
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  - netstandard-2.0
  - xamarinandroid-7.1
  - xamarinios-10.8
  - xamarinmac-3.0
  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Net.NetworkInformation/IPGlobalProperties.xml
- uid: System.Net.NetworkInformation.IPGlobalProperties.IsWinsProxy*
  parent: System.Net.NetworkInformation.IPGlobalProperties
  isExternal: false
  name: IsWinsProxy
  nameWithType: IPGlobalProperties.IsWinsProxy
  fullName: IPGlobalProperties.IsWinsProxy
  monikers:
  - netcore-1.0
  - netcore-1.1
  - netcore-2.0
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  - netstandard-2.0
  - xamarinandroid-7.1
  - xamarinios-10.8
  - xamarinmac-3.0
  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Net.NetworkInformation/IPGlobalProperties.xml
- uid: System.Net.NetworkInformation.IPGlobalProperties.NodeType*
  parent: System.Net.NetworkInformation.IPGlobalProperties
  isExternal: false
  name: NodeType
  nameWithType: IPGlobalProperties.NodeType
  fullName: IPGlobalProperties.NodeType
  monikers:
  - netcore-1.0
  - netcore-1.1
  - netcore-2.0
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  - netstandard-2.0
  - xamarinandroid-7.1
  - xamarinios-10.8
  - xamarinmac-3.0
  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Net.NetworkInformation/IPGlobalProperties.xml
- uid: System.Object.Equals(System.Object)
  parent: System.Object
  isExternal: false
  name: Equals(Object)
  nameWithType: Object.Equals(Object)
  fullName: Object.Equals(Object)
- uid: System.Object.Equals(System.Object,System.Object)
  parent: System.Object
  isExternal: false
  name: Equals(Object, Object)
  nameWithType: Object.Equals(Object, Object)
  fullName: Object.Equals(Object, Object)
- uid: System.Object.GetHashCode
  parent: System.Object
  isExternal: false
  name: GetHashCode()
  nameWithType: Object.GetHashCode()
  fullName: Object.GetHashCode()
- uid: System.Object.GetType
  parent: System.Object
  isExternal: false
  name: GetType()
  nameWithType: Object.GetType()
  fullName: Object.GetType()
- uid: System.Object.MemberwiseClone
  parent: System.Object
  isExternal: false
  name: MemberwiseClone()
  nameWithType: Object.MemberwiseClone()
  fullName: Object.MemberwiseClone()
- uid: System.Object.ReferenceEquals(System.Object,System.Object)
  parent: System.Object
  isExternal: false
  name: ReferenceEquals(Object, Object)
  nameWithType: Object.ReferenceEquals(Object, Object)
  fullName: Object.ReferenceEquals(Object, Object)
- uid: System.Object.ToString
  parent: System.Object
  isExternal: false
  name: ToString()
  nameWithType: Object.ToString()
  fullName: Object.ToString()
