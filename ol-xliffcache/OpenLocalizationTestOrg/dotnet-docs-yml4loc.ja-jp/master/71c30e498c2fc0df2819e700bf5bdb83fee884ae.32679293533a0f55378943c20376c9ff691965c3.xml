{"nodes":[{"content":"Represents a signed rights managed publish license.","nodes":[{"pos":[0,51],"content":"Represents a signed rights managed publish license.","nodes":[{"content":"Represents a signed rights managed publish license.","pos":[0,51]}]}],"pos":[1211,1263],"yaml":true},{"content":"<xref:System.Security.RightsManagement.PublishLicense> defines security data about rights, users, and other security-related information.  The license defines how a specific user on a specific computer can use specified rights managed content.  \n  \n The publishing process begins with the document author, who defines rights information in an <xref:System.Security.RightsManagement.UnsignedPublishLicense>.  Next, the author creates a signed <xref:System.Security.RightsManagement.PublishLicense> by calling the <xref:System.Security.RightsManagement.UnsignedPublishLicense.Sign%2A> method of the <xref:System.Security.RightsManagement.UnsignedPublishLicense>.  The serialized form of the signed <xref:System.Security.RightsManagement.PublishLicense> can then be provided to end users who can use it to acquire a <xref:System.Security.RightsManagement.UseLicense> by calling the <xref:System.Security.RightsManagement.PublishLicense.AcquireUseLicense%2A> method of the <xref:System.Security.RightsManagement.PublishLicense>.  The returned <xref:System.Security.RightsManagement.UseLicense> then allows the client application to exercise the rights that were granted to the user.  \n  \n As with other <xref:System.Security.RightsManagement> types, <xref:System.Security.RightsManagement.PublishLicense> is only usable in full trust applications.","nodes":[{"pos":[0,243],"content":"<xref:System.Security.RightsManagement.PublishLicense> defines security data about rights, users, and other security-related information.  The license defines how a specific user on a specific computer can use specified rights managed content.","nodes":[{"content":"<xref:System.Security.RightsManagement.PublishLicense> defines security data about rights, users, and other security-related information.  The license defines how a specific user on a specific computer can use specified rights managed content.","pos":[0,243],"nodes":[{"content":"<ph id=\"ph1\">&lt;xref:System.Security.RightsManagement.PublishLicense&gt;</ph> defines security data about rights, users, and other security-related information.","pos":[0,137],"source":"<xref:System.Security.RightsManagement.PublishLicense> defines security data about rights, users, and other security-related information."},{"content":"The license defines how a specific user on a specific computer can use specified rights managed content.","pos":[139,243]}]}]},{"pos":[250,1178],"content":"The publishing process begins with the document author, who defines rights information in an <xref:System.Security.RightsManagement.UnsignedPublishLicense>.  Next, the author creates a signed <xref:System.Security.RightsManagement.PublishLicense> by calling the <xref:System.Security.RightsManagement.UnsignedPublishLicense.Sign%2A> method of the <xref:System.Security.RightsManagement.UnsignedPublishLicense>.  The serialized form of the signed <xref:System.Security.RightsManagement.PublishLicense> can then be provided to end users who can use it to acquire a <xref:System.Security.RightsManagement.UseLicense> by calling the <xref:System.Security.RightsManagement.PublishLicense.AcquireUseLicense%2A> method of the <xref:System.Security.RightsManagement.PublishLicense>.  The returned <xref:System.Security.RightsManagement.UseLicense> then allows the client application to exercise the rights that were granted to the user.","nodes":[{"content":"The publishing process begins with the document author, who defines rights information in an <xref:System.Security.RightsManagement.UnsignedPublishLicense>.  Next, the author creates a signed <xref:System.Security.RightsManagement.PublishLicense> by calling the <xref:System.Security.RightsManagement.UnsignedPublishLicense.Sign%2A> method of the <xref:System.Security.RightsManagement.UnsignedPublishLicense>.  The serialized form of the signed <xref:System.Security.RightsManagement.PublishLicense> can then be provided to end users who can use it to acquire a <xref:System.Security.RightsManagement.UseLicense> by calling the <xref:System.Security.RightsManagement.PublishLicense.AcquireUseLicense%2A> method of the <xref:System.Security.RightsManagement.PublishLicense>.  The returned <xref:System.Security.RightsManagement.UseLicense> then allows the client application to exercise the rights that were granted to the user.","pos":[0,928],"nodes":[{"content":"The publishing process begins with the document author, who defines rights information in an <ph id=\"ph1\">&lt;xref:System.Security.RightsManagement.UnsignedPublishLicense&gt;</ph>.","pos":[0,156],"source":"The publishing process begins with the document author, who defines rights information in an <xref:System.Security.RightsManagement.UnsignedPublishLicense>."},{"content":"Next, the author creates a signed <ph id=\"ph1\">&lt;xref:System.Security.RightsManagement.PublishLicense&gt;</ph> by calling the <ph id=\"ph2\">&lt;xref:System.Security.RightsManagement.UnsignedPublishLicense.Sign%2A&gt;</ph> method of the <ph id=\"ph3\">&lt;xref:System.Security.RightsManagement.UnsignedPublishLicense&gt;</ph>.","pos":[158,410],"source":"  Next, the author creates a signed <xref:System.Security.RightsManagement.PublishLicense> by calling the <xref:System.Security.RightsManagement.UnsignedPublishLicense.Sign%2A> method of the <xref:System.Security.RightsManagement.UnsignedPublishLicense>."},{"content":"The serialized form of the signed <ph id=\"ph1\">&lt;xref:System.Security.RightsManagement.PublishLicense&gt;</ph> can then be provided to end users who can use it to acquire a <ph id=\"ph2\">&lt;xref:System.Security.RightsManagement.UseLicense&gt;</ph> by calling the <ph id=\"ph3\">&lt;xref:System.Security.RightsManagement.PublishLicense.AcquireUseLicense%2A&gt;</ph> method of the <ph id=\"ph4\">&lt;xref:System.Security.RightsManagement.PublishLicense&gt;</ph>.","pos":[412,774],"source":"  The serialized form of the signed <xref:System.Security.RightsManagement.PublishLicense> can then be provided to end users who can use it to acquire a <xref:System.Security.RightsManagement.UseLicense> by calling the <xref:System.Security.RightsManagement.PublishLicense.AcquireUseLicense%2A> method of the <xref:System.Security.RightsManagement.PublishLicense>."},{"content":"The returned <ph id=\"ph1\">&lt;xref:System.Security.RightsManagement.UseLicense&gt;</ph> then allows the client application to exercise the rights that were granted to the user.","pos":[776,928],"source":"  The returned <xref:System.Security.RightsManagement.UseLicense> then allows the client application to exercise the rights that were granted to the user."}]}]},{"pos":[1185,1343],"content":"As with other <xref:System.Security.RightsManagement> types, <xref:System.Security.RightsManagement.PublishLicense> is only usable in full trust applications.","nodes":[{"content":"As with other <ph id=\"ph1\">&lt;xref:System.Security.RightsManagement&gt;</ph> types, <ph id=\"ph2\">&lt;xref:System.Security.RightsManagement.PublishLicense&gt;</ph> is only usable in full trust applications.","pos":[0,158],"source":"As with other <xref:System.Security.RightsManagement> types, <xref:System.Security.RightsManagement.PublishLicense> is only usable in full trust applications."}]}],"pos":[1274,2624],"yaml":true,"extradata":"MT"},{"content":"Initializes a new instance of the <xref href=\"System.Security.RightsManagement.PublishLicense\"></xref> class from a specified serialized and signed <xref href=\"System.Security.RightsManagement.PublishLicense\"></xref>.","nodes":[{"pos":[0,217],"content":"Initializes a new instance of the <ph id=\"ph1\">&lt;xref href=\"System.Security.RightsManagement.PublishLicense\"&gt;&lt;/xref&gt;</ph> class from a specified serialized and signed <ph id=\"ph2\">&lt;xref href=\"System.Security.RightsManagement.PublishLicense\"&gt;&lt;/xref&gt;</ph>.","source":"Initializes a new instance of the <xref href=\"System.Security.RightsManagement.PublishLicense\"></xref> class from a specified serialized and signed <xref href=\"System.Security.RightsManagement.PublishLicense\"></xref>."}],"pos":[4783,5001],"yaml":true},{"content":"A signed and serialized publish license.","nodes":[{"pos":[0,40],"content":"A signed and serialized publish license.","nodes":[{"content":"A signed and serialized publish license.","pos":[0,40]}]}],"pos":[5169,5210],"yaml":true},{"content":"<code>signedPublishLicense</code> is `null`.","nodes":[{"pos":[0,44],"content":"<ph id=\"ph1\">&lt;code&gt;signedPublishLicense&lt;/code&gt;</ph> is <ph id=\"ph2\">`null`</ph>.","source":"<code>signedPublishLicense</code> is `null`."}],"pos":[5393,5438],"yaml":true},{"content":"The license is invalid.","nodes":[{"pos":[0,23],"content":"The license is invalid.","nodes":[{"content":"The license is invalid.","pos":[0,23]}]}],"pos":[5600,5624],"yaml":true},{"content":"Attempts to acquire a <xref href=\"System.Security.RightsManagement.UseLicense\"></xref> for a user or user group in a specified <xref href=\"System.Security.RightsManagement.SecureEnvironment\"></xref>.","nodes":[{"pos":[0,199],"content":"Attempts to acquire a <ph id=\"ph1\">&lt;xref href=\"System.Security.RightsManagement.UseLicense\"&gt;&lt;/xref&gt;</ph> for a user or user group in a specified <ph id=\"ph2\">&lt;xref href=\"System.Security.RightsManagement.SecureEnvironment\"&gt;&lt;/xref&gt;</ph>.","source":"Attempts to acquire a <xref href=\"System.Security.RightsManagement.UseLicense\"></xref> for a user or user group in a specified <xref href=\"System.Security.RightsManagement.SecureEnvironment\"></xref>."}],"pos":[6862,7062],"yaml":true},{"content":"The secure environment for license activation and binding.","nodes":[{"pos":[0,58],"content":"The secure environment for license activation and binding.","nodes":[{"content":"The secure environment for license activation and binding.","pos":[0,58]}]}],"pos":[7352,7411],"yaml":true},{"content":"The <xref href=\"System.Security.RightsManagement.UseLicense\"></xref> for a user or user group in the specified <code>secureEnvironment</code>.","nodes":[{"pos":[0,142],"content":"The <ph id=\"ph1\">&lt;xref href=\"System.Security.RightsManagement.UseLicense\"&gt;&lt;/xref&gt;</ph> for a user or user group in the specified <bpt id=\"p1\">&lt;code&gt;</bpt><ph id=\"ph2\">secureEnvironment</ph><ept id=\"p1\">&lt;/code&gt;</ept>.","source":"The <xref href=\"System.Security.RightsManagement.UseLicense\"></xref> for a user or user group in the specified <code>secureEnvironment</code>."}],"pos":[7498,7641],"yaml":true},{"content":"<code>secureEnvironment</code> is `null`.","nodes":[{"pos":[0,41],"content":"<ph id=\"ph1\">&lt;code&gt;secureEnvironment&lt;/code&gt;</ph> is <ph id=\"ph2\">`null`</ph>.","source":"<code>secureEnvironment</code> is `null`."}],"pos":[7836,7878],"yaml":true},{"content":"The authentication failed.","nodes":[{"pos":[0,26],"content":"The authentication failed.","nodes":[{"content":"The authentication failed.","pos":[0,26]}]}],"pos":[8040,8067],"yaml":true},{"content":"Attempts to acquire a <xref href=\"System.Security.RightsManagement.UseLicense\"></xref> for a user or user group in a specified <xref href=\"System.Security.RightsManagement.SecureEnvironment\"></xref>.","nodes":[{"pos":[0,199],"content":"Attempts to acquire a <ph id=\"ph1\">&lt;xref href=\"System.Security.RightsManagement.UseLicense\"&gt;&lt;/xref&gt;</ph> for a user or user group in a specified <ph id=\"ph2\">&lt;xref href=\"System.Security.RightsManagement.SecureEnvironment\"&gt;&lt;/xref&gt;</ph>.","source":"Attempts to acquire a <xref href=\"System.Security.RightsManagement.UseLicense\"></xref> for a user or user group in a specified <xref href=\"System.Security.RightsManagement.SecureEnvironment\"></xref>."}],"pos":[9329,9529],"yaml":true},{"content":"The <xref:System.Security.RightsManagement.PublishLicense.AcquireUseLicenseNoUI%2A> method suppresses the Windows network authentication dialog box. If the license request is denied because the user does not have permission, <xref:System.Security.RightsManagement.PublishLicense.AcquireUseLicenseNoUI%2A> prevents the network authentication dialog box from displaying. Use silent acquisition when attempting to obtain licenses in a background task or in a non-user interface that might display confusing dialog boxes.","nodes":[{"pos":[0,517],"content":"The <xref:System.Security.RightsManagement.PublishLicense.AcquireUseLicenseNoUI%2A> method suppresses the Windows network authentication dialog box. If the license request is denied because the user does not have permission, <xref:System.Security.RightsManagement.PublishLicense.AcquireUseLicenseNoUI%2A> prevents the network authentication dialog box from displaying. Use silent acquisition when attempting to obtain licenses in a background task or in a non-user interface that might display confusing dialog boxes.","nodes":[{"content":"The <xref:System.Security.RightsManagement.PublishLicense.AcquireUseLicenseNoUI%2A> method suppresses the Windows network authentication dialog box. If the license request is denied because the user does not have permission, <xref:System.Security.RightsManagement.PublishLicense.AcquireUseLicenseNoUI%2A> prevents the network authentication dialog box from displaying. Use silent acquisition when attempting to obtain licenses in a background task or in a non-user interface that might display confusing dialog boxes.","pos":[0,517],"nodes":[{"content":"The <ph id=\"ph1\">&lt;xref:System.Security.RightsManagement.PublishLicense.AcquireUseLicenseNoUI%2A&gt;</ph> method suppresses the Windows network authentication dialog box.","pos":[0,148],"source":"The <xref:System.Security.RightsManagement.PublishLicense.AcquireUseLicenseNoUI%2A> method suppresses the Windows network authentication dialog box."},{"content":"If the license request is denied because the user does not have permission, <ph id=\"ph1\">&lt;xref:System.Security.RightsManagement.PublishLicense.AcquireUseLicenseNoUI%2A&gt;</ph> prevents the network authentication dialog box from displaying.","pos":[149,368],"source":" If the license request is denied because the user does not have permission, <xref:System.Security.RightsManagement.PublishLicense.AcquireUseLicenseNoUI%2A> prevents the network authentication dialog box from displaying."},{"content":"Use silent acquisition when attempting to obtain licenses in a background task or in a non-user interface that might display confusing dialog boxes.","pos":[369,517]}]}]}],"pos":[9540,10058],"yaml":true,"extradata":"MT"},{"content":"The secure environment for license activation and binding.","nodes":[{"pos":[0,58],"content":"The secure environment for license activation and binding.","nodes":[{"content":"The secure environment for license activation and binding.","pos":[0,58]}]}],"pos":[10352,10411],"yaml":true},{"content":"The <xref href=\"System.Security.RightsManagement.UseLicense\"></xref> for a user or user group in the specified <code>secureEnvironment</code>.","nodes":[{"pos":[0,142],"content":"The <ph id=\"ph1\">&lt;xref href=\"System.Security.RightsManagement.UseLicense\"&gt;&lt;/xref&gt;</ph> for a user or user group in the specified <bpt id=\"p1\">&lt;code&gt;</bpt><ph id=\"ph2\">secureEnvironment</ph><ept id=\"p1\">&lt;/code&gt;</ept>.","source":"The <xref href=\"System.Security.RightsManagement.UseLicense\"></xref> for a user or user group in the specified <code>secureEnvironment</code>."}],"pos":[10498,10641],"yaml":true},{"content":"<code>secureEnvironment</code> is `null`.","nodes":[{"pos":[0,41],"content":"<ph id=\"ph1\">&lt;code&gt;secureEnvironment&lt;/code&gt;</ph> is <ph id=\"ph2\">`null`</ph>.","source":"<code>secureEnvironment</code> is `null`."}],"pos":[10840,10882],"yaml":true},{"content":"The authentication failed.","nodes":[{"pos":[0,26],"content":"The authentication failed.","nodes":[{"content":"The authentication failed.","pos":[0,26]}]}],"pos":[11044,11071],"yaml":true},{"content":"Gets the publisher-created content identifier.","nodes":[{"pos":[0,46],"content":"Gets the publisher-created content identifier.","nodes":[{"content":"Gets the publisher-created content identifier.","pos":[0,46]}]}],"pos":[12050,12097],"yaml":true},{"content":"Publishers create a <xref:System.Security.RightsManagement.UnsignedPublishLicense.ContentId%2A> to identify the protected content.","nodes":[{"pos":[0,130],"content":"Publishers create a <xref:System.Security.RightsManagement.UnsignedPublishLicense.ContentId%2A> to identify the protected content.","nodes":[{"content":"Publishers create a <ph id=\"ph1\">&lt;xref:System.Security.RightsManagement.UnsignedPublishLicense.ContentId%2A&gt;</ph> to identify the protected content.","pos":[0,130],"source":"Publishers create a <xref:System.Security.RightsManagement.UnsignedPublishLicense.ContentId%2A> to identify the protected content."}]}],"pos":[12108,12239],"yaml":true,"extradata":"MT"},{"content":"The publisher-created content identifier.","nodes":[{"pos":[0,41],"content":"The publisher-created content identifier.","nodes":[{"content":"The publisher-created content identifier.","pos":[0,41]}]}],"pos":[12348,12390],"yaml":true},{"content":"Returns a decrypted <xref href=\"System.Security.RightsManagement.UnsignedPublishLicense\"></xref> version of this signed <xref href=\"System.Security.RightsManagement.PublishLicense\"></xref>.","nodes":[{"pos":[0,189],"content":"Returns a decrypted <ph id=\"ph1\">&lt;xref href=\"System.Security.RightsManagement.UnsignedPublishLicense\"&gt;&lt;/xref&gt;</ph> version of this signed <ph id=\"ph2\">&lt;xref href=\"System.Security.RightsManagement.PublishLicense\"&gt;&lt;/xref&gt;</ph>.","source":"Returns a decrypted <xref href=\"System.Security.RightsManagement.UnsignedPublishLicense\"></xref> version of this signed <xref href=\"System.Security.RightsManagement.PublishLicense\"></xref>."}],"pos":[13770,13960],"yaml":true},{"content":"The <xref:System.Security.RightsManagement.PublishLicense.DecryptUnsignedPublishLicense%2A> method allows the license owner and users who were granted <xref:System.Security.RightsManagement.ContentRight.ViewRightsData> to extract the original information that was encrypted when the <xref:System.Security.RightsManagement.PublishLicense> was created.","nodes":[{"pos":[0,350],"content":"The <xref:System.Security.RightsManagement.PublishLicense.DecryptUnsignedPublishLicense%2A> method allows the license owner and users who were granted <xref:System.Security.RightsManagement.ContentRight.ViewRightsData> to extract the original information that was encrypted when the <xref:System.Security.RightsManagement.PublishLicense> was created.","nodes":[{"content":"The <ph id=\"ph1\">&lt;xref:System.Security.RightsManagement.PublishLicense.DecryptUnsignedPublishLicense%2A&gt;</ph> method allows the license owner and users who were granted <ph id=\"ph2\">&lt;xref:System.Security.RightsManagement.ContentRight.ViewRightsData&gt;</ph> to extract the original information that was encrypted when the <ph id=\"ph3\">&lt;xref:System.Security.RightsManagement.PublishLicense&gt;</ph> was created.","pos":[0,350],"source":"The <xref:System.Security.RightsManagement.PublishLicense.DecryptUnsignedPublishLicense%2A> method allows the license owner and users who were granted <xref:System.Security.RightsManagement.ContentRight.ViewRightsData> to extract the original information that was encrypted when the <xref:System.Security.RightsManagement.PublishLicense> was created."}]}],"pos":[13971,14322],"yaml":true,"extradata":"MT"},{"content":"The rights management service to use for decrypting the license.","nodes":[{"pos":[0,64],"content":"The rights management service to use for decrypting the license.","nodes":[{"content":"The rights management service to use for decrypting the license.","pos":[0,64]}]}],"pos":[14624,14689],"yaml":true},{"content":"A decrypted, unsigned version of this license.","nodes":[{"pos":[0,46],"content":"A decrypted, unsigned version of this license.","nodes":[{"content":"A decrypted, unsigned version of this license.","pos":[0,46]}]}],"pos":[14788,14835],"yaml":true},{"content":"<code>cryptoProvider</code> is `null`.","nodes":[{"pos":[0,38],"content":"<ph id=\"ph1\">&lt;code&gt;cryptoProvider&lt;/code&gt;</ph> is <ph id=\"ph2\">`null`</ph>.","source":"<code>cryptoProvider</code> is `null`."}],"pos":[15042,15081],"yaml":true},{"content":"Gets the contact name for the author or publisher of the content.","nodes":[{"pos":[0,65],"content":"Gets the contact name for the author or publisher of the content.","nodes":[{"content":"Gets the contact name for the author or publisher of the content.","pos":[0,65]}]}],"pos":[16102,16168],"yaml":true},{"content":"The string returned by the <xref:System.Security.RightsManagement.PublishLicense.ReferralInfoName%2A> property is not encrypted and can be accessed even when the user does not yet have a <xref:System.Security.RightsManagement.UseLicense>.  The returned string permits users to contact the publisher to request a <xref:System.Security.RightsManagement.UseLicense>.","nodes":[{"pos":[0,363],"content":"The string returned by the <xref:System.Security.RightsManagement.PublishLicense.ReferralInfoName%2A> property is not encrypted and can be accessed even when the user does not yet have a <xref:System.Security.RightsManagement.UseLicense>.  The returned string permits users to contact the publisher to request a <xref:System.Security.RightsManagement.UseLicense>.","nodes":[{"content":"The string returned by the <xref:System.Security.RightsManagement.PublishLicense.ReferralInfoName%2A> property is not encrypted and can be accessed even when the user does not yet have a <xref:System.Security.RightsManagement.UseLicense>.  The returned string permits users to contact the publisher to request a <xref:System.Security.RightsManagement.UseLicense>.","pos":[0,363],"nodes":[{"content":"The string returned by the <ph id=\"ph1\">&lt;xref:System.Security.RightsManagement.PublishLicense.ReferralInfoName%2A&gt;</ph> property is not encrypted and can be accessed even when the user does not yet have a <ph id=\"ph2\">&lt;xref:System.Security.RightsManagement.UseLicense&gt;</ph>.","pos":[0,238],"source":"The string returned by the <xref:System.Security.RightsManagement.PublishLicense.ReferralInfoName%2A> property is not encrypted and can be accessed even when the user does not yet have a <xref:System.Security.RightsManagement.UseLicense>."},{"content":"The returned string permits users to contact the publisher to request a <ph id=\"ph1\">&lt;xref:System.Security.RightsManagement.UseLicense&gt;</ph>.","pos":[240,363],"source":"  The returned string permits users to contact the publisher to request a <xref:System.Security.RightsManagement.UseLicense>."}]}]}],"pos":[16179,16543],"yaml":true,"extradata":"MT"},{"content":"The contact name for the author or publisher of the content.","nodes":[{"pos":[0,60],"content":"The contact name for the author or publisher of the content.","nodes":[{"content":"The contact name for the author or publisher of the content.","pos":[0,60]}]}],"pos":[16663,16724],"yaml":true},{"content":"Gets the contact [!INCLUDE[TLA2#tla_uri](~/includes/tla2sharptla-uri-md.md)] for the author or publisher of the content.","nodes":[{"pos":[0,120],"content":"Gets the contact <ph id=\"ph1\">[!INCLUDE[TLA2#tla_uri](~/includes/tla2sharptla-uri-md.md)]</ph> for the author or publisher of the content.","source":"Gets the contact [!INCLUDE[TLA2#tla_uri](~/includes/tla2sharptla-uri-md.md)] for the author or publisher of the content."}],"pos":[17834,17955],"yaml":true},{"content":"The string returned by the <xref:System.Security.RightsManagement.PublishLicense.ReferralInfoUri%2A> property is not encrypted and can be accessed even when the user does not yet have a <xref:System.Security.RightsManagement.UseLicense>.  The returned string permits users to contact the publisher to request a <xref:System.Security.RightsManagement.UseLicense>.","nodes":[{"pos":[0,362],"content":"The string returned by the <xref:System.Security.RightsManagement.PublishLicense.ReferralInfoUri%2A> property is not encrypted and can be accessed even when the user does not yet have a <xref:System.Security.RightsManagement.UseLicense>.  The returned string permits users to contact the publisher to request a <xref:System.Security.RightsManagement.UseLicense>.","nodes":[{"content":"The string returned by the <xref:System.Security.RightsManagement.PublishLicense.ReferralInfoUri%2A> property is not encrypted and can be accessed even when the user does not yet have a <xref:System.Security.RightsManagement.UseLicense>.  The returned string permits users to contact the publisher to request a <xref:System.Security.RightsManagement.UseLicense>.","pos":[0,362],"nodes":[{"content":"The string returned by the <ph id=\"ph1\">&lt;xref:System.Security.RightsManagement.PublishLicense.ReferralInfoUri%2A&gt;</ph> property is not encrypted and can be accessed even when the user does not yet have a <ph id=\"ph2\">&lt;xref:System.Security.RightsManagement.UseLicense&gt;</ph>.","pos":[0,237],"source":"The string returned by the <xref:System.Security.RightsManagement.PublishLicense.ReferralInfoUri%2A> property is not encrypted and can be accessed even when the user does not yet have a <xref:System.Security.RightsManagement.UseLicense>."},{"content":"The returned string permits users to contact the publisher to request a <ph id=\"ph1\">&lt;xref:System.Security.RightsManagement.UseLicense&gt;</ph>.","pos":[239,362],"source":"  The returned string permits users to contact the publisher to request a <xref:System.Security.RightsManagement.UseLicense>."}]}]}],"pos":[17966,18329],"yaml":true,"extradata":"MT"},{"content":"The contact [!INCLUDE[TLA#tla_uri](~/includes/tlasharptla-uri-md.md)] for the author or publisher of the content.","nodes":[{"pos":[0,113],"content":"The contact <ph id=\"ph1\">[!INCLUDE[TLA#tla_uri](~/includes/tlasharptla-uri-md.md)]</ph> for the author or publisher of the content.","source":"The contact [!INCLUDE[TLA#tla_uri](~/includes/tlasharptla-uri-md.md)] for the author or publisher of the content."}],"pos":[18442,18556],"yaml":true},{"content":"Returns the serialized [!INCLUDE[TLA2#tla_xrml](~/includes/tla2sharptla-xrml-md.md)] string that was used to create this license.","nodes":[{"pos":[0,129],"content":"Returns the serialized <ph id=\"ph1\">[!INCLUDE[TLA2#tla_xrml](~/includes/tla2sharptla-xrml-md.md)]</ph> string that was used to create this license.","source":"Returns the serialized [!INCLUDE[TLA2#tla_xrml](~/includes/tla2sharptla-xrml-md.md)] string that was used to create this license."}],"pos":[19627,19757],"yaml":true},{"content":"The serialized [!INCLUDE[TLA#tla_xrml](~/includes/tlasharptla-xrml-md.md)] string that was used to create this license.","nodes":[{"pos":[0,119],"content":"The serialized <ph id=\"ph1\">[!INCLUDE[TLA#tla_xrml](~/includes/tlasharptla-xrml-md.md)]</ph> string that was used to create this license.","source":"The serialized [!INCLUDE[TLA#tla_xrml](~/includes/tlasharptla-xrml-md.md)] string that was used to create this license."}],"pos":[19892,20012],"yaml":true},{"content":"Gets the [!INCLUDE[TLA2#tla_uri](~/includes/tla2sharptla-uri-md.md)] to use for acquiring a <xref href=\"System.Security.RightsManagement.UseLicense\"></xref>.","nodes":[{"pos":[0,157],"content":"Gets the <ph id=\"ph1\">[!INCLUDE[TLA2#tla_uri](~/includes/tla2sharptla-uri-md.md)]</ph> to use for acquiring a <ph id=\"ph2\">&lt;xref href=\"System.Security.RightsManagement.UseLicense\"&gt;&lt;/xref&gt;</ph>.","source":"Gets the [!INCLUDE[TLA2#tla_uri](~/includes/tla2sharptla-uri-md.md)] to use for acquiring a <xref href=\"System.Security.RightsManagement.UseLicense\"></xref>."}],"pos":[21168,21326],"yaml":true},{"content":"The <xref:System.Security.RightsManagement.PublishLicense.UseLicenseAcquisitionUrl%2A> property is used by the <xref:System.Security.RightsManagement.PublishLicense.AcquireUseLicense%2A> method when a user acquires a <xref:System.Security.RightsManagement.UseLicense>.","nodes":[{"pos":[0,268],"content":"The <xref:System.Security.RightsManagement.PublishLicense.UseLicenseAcquisitionUrl%2A> property is used by the <xref:System.Security.RightsManagement.PublishLicense.AcquireUseLicense%2A> method when a user acquires a <xref:System.Security.RightsManagement.UseLicense>.","nodes":[{"content":"The <ph id=\"ph1\">&lt;xref:System.Security.RightsManagement.PublishLicense.UseLicenseAcquisitionUrl%2A&gt;</ph> property is used by the <ph id=\"ph2\">&lt;xref:System.Security.RightsManagement.PublishLicense.AcquireUseLicense%2A&gt;</ph> method when a user acquires a <ph id=\"ph3\">&lt;xref:System.Security.RightsManagement.UseLicense&gt;</ph>.","pos":[0,268],"source":"The <xref:System.Security.RightsManagement.PublishLicense.UseLicenseAcquisitionUrl%2A> property is used by the <xref:System.Security.RightsManagement.PublishLicense.AcquireUseLicense%2A> method when a user acquires a <xref:System.Security.RightsManagement.UseLicense>."}]}],"pos":[21337,21606],"yaml":true,"extradata":"MT"},{"content":"The [!INCLUDE[TLA2#tla_uri](~/includes/tla2sharptla-uri-md.md)] to use for acquiring a <xref href=\"System.Security.RightsManagement.UseLicense\"></xref>.","nodes":[{"pos":[0,152],"content":"The <ph id=\"ph1\">[!INCLUDE[TLA2#tla_uri](~/includes/tla2sharptla-uri-md.md)]</ph> to use for acquiring a <ph id=\"ph2\">&lt;xref href=\"System.Security.RightsManagement.UseLicense\"&gt;&lt;/xref&gt;</ph>.","source":"The [!INCLUDE[TLA2#tla_uri](~/includes/tla2sharptla-uri-md.md)] to use for acquiring a <xref href=\"System.Security.RightsManagement.UseLicense\"></xref>."}],"pos":[21728,21881],"yaml":true}],"content":"### YamlMime:ManagedReference\nitems:\n- uid: System.Security.RightsManagement.PublishLicense\n  commentId: T:System.Security.RightsManagement.PublishLicense\n  id: PublishLicense\n  children:\n  - System.Security.RightsManagement.PublishLicense.#ctor(System.String)\n  - System.Security.RightsManagement.PublishLicense.AcquireUseLicense(System.Security.RightsManagement.SecureEnvironment)\n  - System.Security.RightsManagement.PublishLicense.AcquireUseLicenseNoUI(System.Security.RightsManagement.SecureEnvironment)\n  - System.Security.RightsManagement.PublishLicense.ContentId\n  - System.Security.RightsManagement.PublishLicense.DecryptUnsignedPublishLicense(System.Security.RightsManagement.CryptoProvider)\n  - System.Security.RightsManagement.PublishLicense.ReferralInfoName\n  - System.Security.RightsManagement.PublishLicense.ReferralInfoUri\n  - System.Security.RightsManagement.PublishLicense.ToString\n  - System.Security.RightsManagement.PublishLicense.UseLicenseAcquisitionUrl\n  langs:\n  - csharp\n  name: PublishLicense\n  nameWithType: PublishLicense\n  fullName: System.Security.RightsManagement.PublishLicense\n  type: Class\n  assemblies:\n  - WindowsBase\n  namespace: System.Security.RightsManagement\n  summary: Represents a signed rights managed publish license.\n  remarks: \"<xref:System.Security.RightsManagement.PublishLicense> defines security data about rights, users, and other security-related information.  The license defines how a specific user on a specific computer can use specified rights managed content.  \\n  \\n The publishing process begins with the document author, who defines rights information in an <xref:System.Security.RightsManagement.UnsignedPublishLicense>.  Next, the author creates a signed <xref:System.Security.RightsManagement.PublishLicense> by calling the <xref:System.Security.RightsManagement.UnsignedPublishLicense.Sign%2A> method of the <xref:System.Security.RightsManagement.UnsignedPublishLicense>.  The serialized form of the signed <xref:System.Security.RightsManagement.PublishLicense> can then be provided to end users who can use it to acquire a <xref:System.Security.RightsManagement.UseLicense> by calling the <xref:System.Security.RightsManagement.PublishLicense.AcquireUseLicense%2A> method of the <xref:System.Security.RightsManagement.PublishLicense>.  The returned <xref:System.Security.RightsManagement.UseLicense> then allows the client application to exercise the rights that were granted to the user.  \\n  \\n As with other <xref:System.Security.RightsManagement> types, <xref:System.Security.RightsManagement.PublishLicense> is only usable in full trust applications.\"\n  example:\n  - \"The following example shows how to initialize a <xref:System.Security.RightsManagement.PublishLicense> by using the <xref:System.Security.RightsManagement.UnsignedPublishLicense.Sign%2A> method.  \\n  \\n [!code-csharp[RightsManagedPackagePublish#RmPkgPubEncrypt](~/samples/snippets/csharp/VS_Snippets_Wpf/RightsManagedPackagePublish/CSharp/Window1.xaml.cs#rmpkgpubencrypt)]\\n [!code-vb[RightsManagedPackagePublish#RmPkgPubEncrypt](~/samples/snippets/visualbasic/VS_Snippets_Wpf/RightsManagedPackagePublish/visualbasic/window1.xaml.vb#rmpkgpubencrypt)]\"\n  syntax:\n    content: >-\n      [System.Security.SecurityCritical(System.Security.SecurityCriticalScope.Everything)]\n\n      public class PublishLicense\n  inheritance:\n  - System.Object\n  implements: []\n  inheritedMembers:\n  - System.Object.Equals(System.Object)\n  - System.Object.Equals(System.Object,System.Object)\n  - System.Object.GetHashCode\n  - System.Object.GetType\n  - System.Object.MemberwiseClone\n  - System.Object.ReferenceEquals(System.Object,System.Object)\n  attributes:\n  - type: System.Security.SecurityCriticalAttribute\n  version:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Security.RightsManagement/PublishLicense.xml\n  ms.technology:\n  - dotnet-standard\n  author: stevehoag\n  ms.author: shoag\n  manager: wpickett\n- uid: System.Security.RightsManagement.PublishLicense.#ctor(System.String)\n  commentId: M:System.Security.RightsManagement.PublishLicense.#ctor(System.String)\n  id: '#ctor(System.String)'\n  parent: System.Security.RightsManagement.PublishLicense\n  langs:\n  - csharp\n  name: PublishLicense(String)\n  nameWithType: PublishLicense.PublishLicense(String)\n  fullName: PublishLicense.PublishLicense(String)\n  type: Constructor\n  assemblies:\n  - WindowsBase\n  namespace: System.Security.RightsManagement\n  summary: Initializes a new instance of the <xref href=\"System.Security.RightsManagement.PublishLicense\"></xref> class from a specified serialized and signed <xref href=\"System.Security.RightsManagement.PublishLicense\"></xref>.\n  syntax:\n    content: public PublishLicense (string signedPublishLicense);\n    parameters:\n    - id: signedPublishLicense\n      type: System.String\n      description: A signed and serialized publish license.\n  overload: System.Security.RightsManagement.PublishLicense.#ctor*\n  exceptions:\n  - type: System.ArgumentNullException\n    commentId: T:System.ArgumentNullException\n    description: <code>signedPublishLicense</code> is `null`.\n  - type: System.Security.RightsManagement.RightsManagementException\n    commentId: T:System.Security.RightsManagement.RightsManagementException\n    description: The license is invalid.\n  version:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Security.RightsManagement/PublishLicense.xml\n  ms.technology:\n  - dotnet-standard\n  author: stevehoag\n  ms.author: shoag\n  manager: wpickett\n- uid: System.Security.RightsManagement.PublishLicense.AcquireUseLicense(System.Security.RightsManagement.SecureEnvironment)\n  commentId: M:System.Security.RightsManagement.PublishLicense.AcquireUseLicense(System.Security.RightsManagement.SecureEnvironment)\n  id: AcquireUseLicense(System.Security.RightsManagement.SecureEnvironment)\n  parent: System.Security.RightsManagement.PublishLicense\n  langs:\n  - csharp\n  name: AcquireUseLicense(SecureEnvironment)\n  nameWithType: PublishLicense.AcquireUseLicense(SecureEnvironment)\n  fullName: PublishLicense.AcquireUseLicense(SecureEnvironment)\n  type: Method\n  assemblies:\n  - WindowsBase\n  namespace: System.Security.RightsManagement\n  summary: Attempts to acquire a <xref href=\"System.Security.RightsManagement.UseLicense\"></xref> for a user or user group in a specified <xref href=\"System.Security.RightsManagement.SecureEnvironment\"></xref>.\n  syntax:\n    content: public System.Security.RightsManagement.UseLicense AcquireUseLicense (System.Security.RightsManagement.SecureEnvironment secureEnvironment);\n    parameters:\n    - id: secureEnvironment\n      type: System.Security.RightsManagement.SecureEnvironment\n      description: The secure environment for license activation and binding.\n    return:\n      type: System.Security.RightsManagement.UseLicense\n      description: The <xref href=\"System.Security.RightsManagement.UseLicense\"></xref> for a user or user group in the specified <code>secureEnvironment</code>.\n  overload: System.Security.RightsManagement.PublishLicense.AcquireUseLicense*\n  exceptions:\n  - type: System.ArgumentNullException\n    commentId: T:System.ArgumentNullException\n    description: <code>secureEnvironment</code> is `null`.\n  - type: System.Security.RightsManagement.RightsManagementException\n    commentId: T:System.Security.RightsManagement.RightsManagementException\n    description: The authentication failed.\n  version:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Security.RightsManagement/PublishLicense.xml\n  ms.technology:\n  - dotnet-standard\n  author: stevehoag\n  ms.author: shoag\n  manager: wpickett\n- uid: System.Security.RightsManagement.PublishLicense.AcquireUseLicenseNoUI(System.Security.RightsManagement.SecureEnvironment)\n  commentId: M:System.Security.RightsManagement.PublishLicense.AcquireUseLicenseNoUI(System.Security.RightsManagement.SecureEnvironment)\n  id: AcquireUseLicenseNoUI(System.Security.RightsManagement.SecureEnvironment)\n  parent: System.Security.RightsManagement.PublishLicense\n  langs:\n  - csharp\n  name: AcquireUseLicenseNoUI(SecureEnvironment)\n  nameWithType: PublishLicense.AcquireUseLicenseNoUI(SecureEnvironment)\n  fullName: PublishLicense.AcquireUseLicenseNoUI(SecureEnvironment)\n  type: Method\n  assemblies:\n  - WindowsBase\n  namespace: System.Security.RightsManagement\n  summary: Attempts to acquire a <xref href=\"System.Security.RightsManagement.UseLicense\"></xref> for a user or user group in a specified <xref href=\"System.Security.RightsManagement.SecureEnvironment\"></xref>.\n  remarks: The <xref:System.Security.RightsManagement.PublishLicense.AcquireUseLicenseNoUI%2A> method suppresses the Windows network authentication dialog box. If the license request is denied because the user does not have permission, <xref:System.Security.RightsManagement.PublishLicense.AcquireUseLicenseNoUI%2A> prevents the network authentication dialog box from displaying. Use silent acquisition when attempting to obtain licenses in a background task or in a non-user interface that might display confusing dialog boxes.\n  syntax:\n    content: public System.Security.RightsManagement.UseLicense AcquireUseLicenseNoUI (System.Security.RightsManagement.SecureEnvironment secureEnvironment);\n    parameters:\n    - id: secureEnvironment\n      type: System.Security.RightsManagement.SecureEnvironment\n      description: The secure environment for license activation and binding.\n    return:\n      type: System.Security.RightsManagement.UseLicense\n      description: The <xref href=\"System.Security.RightsManagement.UseLicense\"></xref> for a user or user group in the specified <code>secureEnvironment</code>.\n  overload: System.Security.RightsManagement.PublishLicense.AcquireUseLicenseNoUI*\n  exceptions:\n  - type: System.ArgumentNullException\n    commentId: T:System.ArgumentNullException\n    description: <code>secureEnvironment</code> is `null`.\n  - type: System.Security.RightsManagement.RightsManagementException\n    commentId: T:System.Security.RightsManagement.RightsManagementException\n    description: The authentication failed.\n  version:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Security.RightsManagement/PublishLicense.xml\n  ms.technology:\n  - dotnet-standard\n  author: stevehoag\n  ms.author: shoag\n  manager: wpickett\n- uid: System.Security.RightsManagement.PublishLicense.ContentId\n  commentId: P:System.Security.RightsManagement.PublishLicense.ContentId\n  id: ContentId\n  parent: System.Security.RightsManagement.PublishLicense\n  langs:\n  - csharp\n  name: ContentId\n  nameWithType: PublishLicense.ContentId\n  fullName: PublishLicense.ContentId\n  type: Property\n  assemblies:\n  - WindowsBase\n  namespace: System.Security.RightsManagement\n  summary: Gets the publisher-created content identifier.\n  remarks: Publishers create a <xref:System.Security.RightsManagement.UnsignedPublishLicense.ContentId%2A> to identify the protected content.\n  syntax:\n    content: public Guid ContentId { get; }\n    return:\n      type: System.Guid\n      description: The publisher-created content identifier.\n  overload: System.Security.RightsManagement.PublishLicense.ContentId*\n  exceptions: []\n  version:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Security.RightsManagement/PublishLicense.xml\n  ms.technology:\n  - dotnet-standard\n  author: stevehoag\n  ms.author: shoag\n  manager: wpickett\n- uid: System.Security.RightsManagement.PublishLicense.DecryptUnsignedPublishLicense(System.Security.RightsManagement.CryptoProvider)\n  commentId: M:System.Security.RightsManagement.PublishLicense.DecryptUnsignedPublishLicense(System.Security.RightsManagement.CryptoProvider)\n  id: DecryptUnsignedPublishLicense(System.Security.RightsManagement.CryptoProvider)\n  parent: System.Security.RightsManagement.PublishLicense\n  langs:\n  - csharp\n  name: DecryptUnsignedPublishLicense(CryptoProvider)\n  nameWithType: PublishLicense.DecryptUnsignedPublishLicense(CryptoProvider)\n  fullName: PublishLicense.DecryptUnsignedPublishLicense(CryptoProvider)\n  type: Method\n  assemblies:\n  - WindowsBase\n  namespace: System.Security.RightsManagement\n  summary: Returns a decrypted <xref href=\"System.Security.RightsManagement.UnsignedPublishLicense\"></xref> version of this signed <xref href=\"System.Security.RightsManagement.PublishLicense\"></xref>.\n  remarks: The <xref:System.Security.RightsManagement.PublishLicense.DecryptUnsignedPublishLicense%2A> method allows the license owner and users who were granted <xref:System.Security.RightsManagement.ContentRight.ViewRightsData> to extract the original information that was encrypted when the <xref:System.Security.RightsManagement.PublishLicense> was created.\n  syntax:\n    content: public System.Security.RightsManagement.UnsignedPublishLicense DecryptUnsignedPublishLicense (System.Security.RightsManagement.CryptoProvider cryptoProvider);\n    parameters:\n    - id: cryptoProvider\n      type: System.Security.RightsManagement.CryptoProvider\n      description: The rights management service to use for decrypting the license.\n    return:\n      type: System.Security.RightsManagement.UnsignedPublishLicense\n      description: A decrypted, unsigned version of this license.\n  overload: System.Security.RightsManagement.PublishLicense.DecryptUnsignedPublishLicense*\n  exceptions:\n  - type: System.ArgumentNullException\n    commentId: T:System.ArgumentNullException\n    description: <code>cryptoProvider</code> is `null`.\n  version:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Security.RightsManagement/PublishLicense.xml\n  ms.technology:\n  - dotnet-standard\n  author: stevehoag\n  ms.author: shoag\n  manager: wpickett\n- uid: System.Security.RightsManagement.PublishLicense.ReferralInfoName\n  commentId: P:System.Security.RightsManagement.PublishLicense.ReferralInfoName\n  id: ReferralInfoName\n  parent: System.Security.RightsManagement.PublishLicense\n  langs:\n  - csharp\n  name: ReferralInfoName\n  nameWithType: PublishLicense.ReferralInfoName\n  fullName: PublishLicense.ReferralInfoName\n  type: Property\n  assemblies:\n  - WindowsBase\n  namespace: System.Security.RightsManagement\n  summary: Gets the contact name for the author or publisher of the content.\n  remarks: The string returned by the <xref:System.Security.RightsManagement.PublishLicense.ReferralInfoName%2A> property is not encrypted and can be accessed even when the user does not yet have a <xref:System.Security.RightsManagement.UseLicense>.  The returned string permits users to contact the publisher to request a <xref:System.Security.RightsManagement.UseLicense>.\n  syntax:\n    content: public string ReferralInfoName { get; }\n    return:\n      type: System.String\n      description: The contact name for the author or publisher of the content.\n  overload: System.Security.RightsManagement.PublishLicense.ReferralInfoName*\n  exceptions: []\n  version:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Security.RightsManagement/PublishLicense.xml\n  ms.technology:\n  - dotnet-standard\n  author: stevehoag\n  ms.author: shoag\n  manager: wpickett\n- uid: System.Security.RightsManagement.PublishLicense.ReferralInfoUri\n  commentId: P:System.Security.RightsManagement.PublishLicense.ReferralInfoUri\n  id: ReferralInfoUri\n  parent: System.Security.RightsManagement.PublishLicense\n  langs:\n  - csharp\n  name: ReferralInfoUri\n  nameWithType: PublishLicense.ReferralInfoUri\n  fullName: PublishLicense.ReferralInfoUri\n  type: Property\n  assemblies:\n  - WindowsBase\n  namespace: System.Security.RightsManagement\n  summary: Gets the contact [!INCLUDE[TLA2#tla_uri](~/includes/tla2sharptla-uri-md.md)] for the author or publisher of the content.\n  remarks: The string returned by the <xref:System.Security.RightsManagement.PublishLicense.ReferralInfoUri%2A> property is not encrypted and can be accessed even when the user does not yet have a <xref:System.Security.RightsManagement.UseLicense>.  The returned string permits users to contact the publisher to request a <xref:System.Security.RightsManagement.UseLicense>.\n  syntax:\n    content: public Uri ReferralInfoUri { get; }\n    return:\n      type: System.Uri\n      description: The contact [!INCLUDE[TLA#tla_uri](~/includes/tlasharptla-uri-md.md)] for the author or publisher of the content.\n  overload: System.Security.RightsManagement.PublishLicense.ReferralInfoUri*\n  exceptions: []\n  version:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Security.RightsManagement/PublishLicense.xml\n  ms.technology:\n  - dotnet-standard\n  author: stevehoag\n  ms.author: shoag\n  manager: wpickett\n- uid: System.Security.RightsManagement.PublishLicense.ToString\n  commentId: M:System.Security.RightsManagement.PublishLicense.ToString\n  id: ToString\n  parent: System.Security.RightsManagement.PublishLicense\n  langs:\n  - csharp\n  name: ToString()\n  nameWithType: PublishLicense.ToString()\n  fullName: PublishLicense.ToString()\n  type: Method\n  assemblies:\n  - WindowsBase\n  namespace: System.Security.RightsManagement\n  summary: Returns the serialized [!INCLUDE[TLA2#tla_xrml](~/includes/tla2sharptla-xrml-md.md)] string that was used to create this license.\n  syntax:\n    content: public override string ToString ();\n    parameters: []\n    return:\n      type: System.String\n      description: The serialized [!INCLUDE[TLA#tla_xrml](~/includes/tlasharptla-xrml-md.md)] string that was used to create this license.\n  overload: System.Security.RightsManagement.PublishLicense.ToString*\n  exceptions: []\n  version:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Security.RightsManagement/PublishLicense.xml\n  ms.technology:\n  - dotnet-standard\n  author: stevehoag\n  ms.author: shoag\n  manager: wpickett\n- uid: System.Security.RightsManagement.PublishLicense.UseLicenseAcquisitionUrl\n  commentId: P:System.Security.RightsManagement.PublishLicense.UseLicenseAcquisitionUrl\n  id: UseLicenseAcquisitionUrl\n  parent: System.Security.RightsManagement.PublishLicense\n  langs:\n  - csharp\n  name: UseLicenseAcquisitionUrl\n  nameWithType: PublishLicense.UseLicenseAcquisitionUrl\n  fullName: PublishLicense.UseLicenseAcquisitionUrl\n  type: Property\n  assemblies:\n  - WindowsBase\n  namespace: System.Security.RightsManagement\n  summary: Gets the [!INCLUDE[TLA2#tla_uri](~/includes/tla2sharptla-uri-md.md)] to use for acquiring a <xref href=\"System.Security.RightsManagement.UseLicense\"></xref>.\n  remarks: The <xref:System.Security.RightsManagement.PublishLicense.UseLicenseAcquisitionUrl%2A> property is used by the <xref:System.Security.RightsManagement.PublishLicense.AcquireUseLicense%2A> method when a user acquires a <xref:System.Security.RightsManagement.UseLicense>.\n  syntax:\n    content: public Uri UseLicenseAcquisitionUrl { get; }\n    return:\n      type: System.Uri\n      description: The [!INCLUDE[TLA2#tla_uri](~/includes/tla2sharptla-uri-md.md)] to use for acquiring a <xref href=\"System.Security.RightsManagement.UseLicense\"></xref>.\n  overload: System.Security.RightsManagement.PublishLicense.UseLicenseAcquisitionUrl*\n  exceptions: []\n  version:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Security.RightsManagement/PublishLicense.xml\n  ms.technology:\n  - dotnet-standard\n  author: stevehoag\n  ms.author: shoag\n  manager: wpickett\nreferences:\n- uid: System.Object\n  parent: System\n  isExternal: false\n  name: Object\n  nameWithType: Object\n  fullName: System.Object\n- uid: System.ArgumentNullException\n  parent: System\n  isExternal: false\n  name: ArgumentNullException\n  nameWithType: ArgumentNullException\n  fullName: System.ArgumentNullException\n- uid: System.Security.RightsManagement.RightsManagementException\n  parent: System.Security.RightsManagement\n  isExternal: false\n  name: RightsManagementException\n  nameWithType: RightsManagementException\n  fullName: System.Security.RightsManagement.RightsManagementException\n- uid: System.Security.RightsManagement.PublishLicense.#ctor(System.String)\n  parent: System.Security.RightsManagement.PublishLicense\n  isExternal: false\n  name: PublishLicense(String)\n  nameWithType: PublishLicense.PublishLicense(String)\n  fullName: PublishLicense.PublishLicense(String)\n- uid: System.String\n  parent: System\n  isExternal: false\n  name: String\n  nameWithType: String\n  fullName: System.String\n- uid: System.Security.RightsManagement.PublishLicense.AcquireUseLicense(System.Security.RightsManagement.SecureEnvironment)\n  parent: System.Security.RightsManagement.PublishLicense\n  isExternal: false\n  name: AcquireUseLicense(SecureEnvironment)\n  nameWithType: PublishLicense.AcquireUseLicense(SecureEnvironment)\n  fullName: PublishLicense.AcquireUseLicense(SecureEnvironment)\n- uid: System.Security.RightsManagement.UseLicense\n  parent: System.Security.RightsManagement\n  isExternal: false\n  name: UseLicense\n  nameWithType: UseLicense\n  fullName: System.Security.RightsManagement.UseLicense\n- uid: System.Security.RightsManagement.SecureEnvironment\n  parent: System.Security.RightsManagement\n  isExternal: false\n  name: SecureEnvironment\n  nameWithType: SecureEnvironment\n  fullName: System.Security.RightsManagement.SecureEnvironment\n- uid: System.Security.RightsManagement.PublishLicense.AcquireUseLicenseNoUI(System.Security.RightsManagement.SecureEnvironment)\n  parent: System.Security.RightsManagement.PublishLicense\n  isExternal: false\n  name: AcquireUseLicenseNoUI(SecureEnvironment)\n  nameWithType: PublishLicense.AcquireUseLicenseNoUI(SecureEnvironment)\n  fullName: PublishLicense.AcquireUseLicenseNoUI(SecureEnvironment)\n- uid: System.Security.RightsManagement.PublishLicense.ContentId\n  parent: System.Security.RightsManagement.PublishLicense\n  isExternal: false\n  name: ContentId\n  nameWithType: PublishLicense.ContentId\n  fullName: PublishLicense.ContentId\n- uid: System.Guid\n  parent: System\n  isExternal: false\n  name: Guid\n  nameWithType: Guid\n  fullName: System.Guid\n- uid: System.Security.RightsManagement.PublishLicense.DecryptUnsignedPublishLicense(System.Security.RightsManagement.CryptoProvider)\n  parent: System.Security.RightsManagement.PublishLicense\n  isExternal: false\n  name: DecryptUnsignedPublishLicense(CryptoProvider)\n  nameWithType: PublishLicense.DecryptUnsignedPublishLicense(CryptoProvider)\n  fullName: PublishLicense.DecryptUnsignedPublishLicense(CryptoProvider)\n- uid: System.Security.RightsManagement.UnsignedPublishLicense\n  parent: System.Security.RightsManagement\n  isExternal: false\n  name: UnsignedPublishLicense\n  nameWithType: UnsignedPublishLicense\n  fullName: System.Security.RightsManagement.UnsignedPublishLicense\n- uid: System.Security.RightsManagement.CryptoProvider\n  parent: System.Security.RightsManagement\n  isExternal: false\n  name: CryptoProvider\n  nameWithType: CryptoProvider\n  fullName: System.Security.RightsManagement.CryptoProvider\n- uid: System.Security.RightsManagement.PublishLicense.ReferralInfoName\n  parent: System.Security.RightsManagement.PublishLicense\n  isExternal: false\n  name: ReferralInfoName\n  nameWithType: PublishLicense.ReferralInfoName\n  fullName: PublishLicense.ReferralInfoName\n- uid: System.Security.RightsManagement.PublishLicense.ReferralInfoUri\n  parent: System.Security.RightsManagement.PublishLicense\n  isExternal: false\n  name: ReferralInfoUri\n  nameWithType: PublishLicense.ReferralInfoUri\n  fullName: PublishLicense.ReferralInfoUri\n- uid: System.Uri\n  parent: System\n  isExternal: false\n  name: Uri\n  nameWithType: Uri\n  fullName: System.Uri\n- uid: System.Security.RightsManagement.PublishLicense.ToString\n  parent: System.Security.RightsManagement.PublishLicense\n  isExternal: false\n  name: ToString()\n  nameWithType: PublishLicense.ToString()\n  fullName: PublishLicense.ToString()\n- uid: System.Security.RightsManagement.PublishLicense.UseLicenseAcquisitionUrl\n  parent: System.Security.RightsManagement.PublishLicense\n  isExternal: false\n  name: UseLicenseAcquisitionUrl\n  nameWithType: PublishLicense.UseLicenseAcquisitionUrl\n  fullName: PublishLicense.UseLicenseAcquisitionUrl\n- uid: System.Security.RightsManagement.PublishLicense.#ctor*\n  parent: System.Security.RightsManagement.PublishLicense\n  isExternal: false\n  name: PublishLicense\n  nameWithType: PublishLicense.PublishLicense\n  fullName: PublishLicense.PublishLicense\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Security.RightsManagement/PublishLicense.xml\n- uid: System.Security.RightsManagement.PublishLicense.AcquireUseLicense*\n  parent: System.Security.RightsManagement.PublishLicense\n  isExternal: false\n  name: AcquireUseLicense\n  nameWithType: PublishLicense.AcquireUseLicense\n  fullName: PublishLicense.AcquireUseLicense\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Security.RightsManagement/PublishLicense.xml\n- uid: System.Security.RightsManagement.PublishLicense.AcquireUseLicenseNoUI*\n  parent: System.Security.RightsManagement.PublishLicense\n  isExternal: false\n  name: AcquireUseLicenseNoUI\n  nameWithType: PublishLicense.AcquireUseLicenseNoUI\n  fullName: PublishLicense.AcquireUseLicenseNoUI\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Security.RightsManagement/PublishLicense.xml\n- uid: System.Security.RightsManagement.PublishLicense.ContentId*\n  parent: System.Security.RightsManagement.PublishLicense\n  isExternal: false\n  name: ContentId\n  nameWithType: PublishLicense.ContentId\n  fullName: PublishLicense.ContentId\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Security.RightsManagement/PublishLicense.xml\n- uid: System.Security.RightsManagement.PublishLicense.DecryptUnsignedPublishLicense*\n  parent: System.Security.RightsManagement.PublishLicense\n  isExternal: false\n  name: DecryptUnsignedPublishLicense\n  nameWithType: PublishLicense.DecryptUnsignedPublishLicense\n  fullName: PublishLicense.DecryptUnsignedPublishLicense\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Security.RightsManagement/PublishLicense.xml\n- uid: System.Security.RightsManagement.PublishLicense.ReferralInfoName*\n  parent: System.Security.RightsManagement.PublishLicense\n  isExternal: false\n  name: ReferralInfoName\n  nameWithType: PublishLicense.ReferralInfoName\n  fullName: PublishLicense.ReferralInfoName\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Security.RightsManagement/PublishLicense.xml\n- uid: System.Security.RightsManagement.PublishLicense.ReferralInfoUri*\n  parent: System.Security.RightsManagement.PublishLicense\n  isExternal: false\n  name: ReferralInfoUri\n  nameWithType: PublishLicense.ReferralInfoUri\n  fullName: PublishLicense.ReferralInfoUri\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Security.RightsManagement/PublishLicense.xml\n- uid: System.Security.RightsManagement.PublishLicense.ToString*\n  parent: System.Security.RightsManagement.PublishLicense\n  isExternal: false\n  name: ToString\n  nameWithType: PublishLicense.ToString\n  fullName: PublishLicense.ToString\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Security.RightsManagement/PublishLicense.xml\n- uid: System.Security.RightsManagement.PublishLicense.UseLicenseAcquisitionUrl*\n  parent: System.Security.RightsManagement.PublishLicense\n  isExternal: false\n  name: UseLicenseAcquisitionUrl\n  nameWithType: PublishLicense.UseLicenseAcquisitionUrl\n  fullName: PublishLicense.UseLicenseAcquisitionUrl\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Security.RightsManagement/PublishLicense.xml\n- uid: System.Object.Equals(System.Object)\n  parent: System.Object\n  isExternal: false\n  name: Equals(Object)\n  nameWithType: Object.Equals(Object)\n  fullName: Object.Equals(Object)\n- uid: System.Object.Equals(System.Object,System.Object)\n  parent: System.Object\n  isExternal: false\n  name: Equals(Object, Object)\n  nameWithType: Object.Equals(Object, Object)\n  fullName: Object.Equals(Object, Object)\n- uid: System.Object.GetHashCode\n  parent: System.Object\n  isExternal: false\n  name: GetHashCode()\n  nameWithType: Object.GetHashCode()\n  fullName: Object.GetHashCode()\n- uid: System.Object.GetType\n  parent: System.Object\n  isExternal: false\n  name: GetType()\n  nameWithType: Object.GetType()\n  fullName: Object.GetType()\n- uid: System.Object.MemberwiseClone\n  parent: System.Object\n  isExternal: false\n  name: MemberwiseClone()\n  nameWithType: Object.MemberwiseClone()\n  fullName: Object.MemberwiseClone()\n- uid: System.Object.ReferenceEquals(System.Object,System.Object)\n  parent: System.Object\n  isExternal: false\n  name: ReferenceEquals(Object, Object)\n  nameWithType: Object.ReferenceEquals(Object, Object)\n  fullName: Object.ReferenceEquals(Object, Object)\n"}