{"nodes":[{"content":"An editing scope represents a collection of changes to the <xref href=\"System.Activities.Presentation.Model.ModelItem\"></xref> tree that can be committed or rolled back as one atomic unit of work.","nodes":[{"pos":[0,196],"content":"An editing scope represents a collection of changes to the <ph id=\"ph1\">&lt;xref href=\"System.Activities.Presentation.Model.ModelItem\"&gt;&lt;/xref&gt;</ph> tree that can be committed or rolled back as one atomic unit of work.","source":"An editing scope represents a collection of changes to the <xref href=\"System.Activities.Presentation.Model.ModelItem\"></xref> tree that can be committed or rolled back as one atomic unit of work."}],"pos":[875,1072],"yaml":true},{"content":"This is useful for batching together a set of changes to multiple <xref:System.Activities.Presentation.Model.ModelItem> objects. As an example, in the messaging activities, the changes made from the raised dialogs will impact multiple property values. However, as all of the changes come from the raised dialog, the changes need to be considered as a batch and undone as a single unit of work. For more details on usage, see the Editing Scope sample","nodes":[{"pos":[0,449],"content":"This is useful for batching together a set of changes to multiple <xref:System.Activities.Presentation.Model.ModelItem> objects. As an example, in the messaging activities, the changes made from the raised dialogs will impact multiple property values. However, as all of the changes come from the raised dialog, the changes need to be considered as a batch and undone as a single unit of work. For more details on usage, see the Editing Scope sample","nodes":[{"content":"This is useful for batching together a set of changes to multiple <xref:System.Activities.Presentation.Model.ModelItem> objects. As an example, in the messaging activities, the changes made from the raised dialogs will impact multiple property values. However, as all of the changes come from the raised dialog, the changes need to be considered as a batch and undone as a single unit of work. For more details on usage, see the Editing Scope sample","pos":[0,449],"nodes":[{"content":"This is useful for batching together a set of changes to multiple <ph id=\"ph1\">&lt;xref:System.Activities.Presentation.Model.ModelItem&gt;</ph> objects.","pos":[0,128],"source":"This is useful for batching together a set of changes to multiple <xref:System.Activities.Presentation.Model.ModelItem> objects."},{"content":"As an example, in the messaging activities, the changes made from the raised dialogs will impact multiple property values.","pos":[129,251]},{"content":"However, as all of the changes come from the raised dialog, the changes need to be considered as a batch and undone as a single unit of work.","pos":[252,393]},{"content":"For more details on usage, see the Editing Scope sample","pos":[394,449]}]}]}],"pos":[1083,1533],"yaml":true,"extradata":"MT"},{"content":"Determines whether the current editing scope instance can complete.","nodes":[{"pos":[0,67],"content":"Determines whether the current editing scope instance can complete.","nodes":[{"content":"Determines whether the current editing scope instance can complete.","pos":[0,67]}]}],"pos":[3417,3485],"yaml":true},{"content":"`true` if the editing scope can complete; otherwise, `false`.","nodes":[{"pos":[0,61],"content":"<ph id=\"ph1\">`true`</ph> if the editing scope can complete; otherwise, <ph id=\"ph2\">`false`</ph>.","source":"`true` if the editing scope can complete; otherwise, `false`."}],"pos":[3625,3689],"yaml":true},{"content":"Gets a list of changes.","nodes":[{"pos":[0,23],"content":"Gets a list of changes.","nodes":[{"content":"Gets a list of changes.","pos":[0,23]}]}],"pos":[4771,4795],"yaml":true},{"content":"Returns a <xref href=\"System.Collections.Generic.List`1\"></xref> that contains the changes.","nodes":[{"pos":[0,91],"content":"Returns a <ph id=\"ph1\">&lt;xref href=\"System.Collections.Generic.List`1\"&gt;&lt;/xref&gt;</ph> that contains the changes.","source":"Returns a <xref href=\"System.Collections.Generic.List`1\"></xref> that contains the changes."}],"pos":[5039,5131],"yaml":true},{"content":"Gets  a Boolean that specifies whether changes have been applied to the editing scope.","nodes":[{"pos":[0,86],"content":"Gets  a Boolean that specifies whether changes have been applied to the editing scope.","nodes":[{"content":"Gets  a Boolean that specifies whether changes have been applied to the editing scope.","pos":[0,86]}]}],"pos":[6281,6368],"yaml":true},{"content":"`true` if changes have been applied to the editing scope; otherwise, `false`..","nodes":[{"pos":[0,78],"content":"<ph id=\"ph1\">`true`</ph> if changes have been applied to the editing scope; otherwise, <ph id=\"ph2\">`false`</ph>..","source":"`true` if changes have been applied to the editing scope; otherwise, `false`.."}],"pos":[6490,6571],"yaml":true},{"content":"Raises the Complete event.","nodes":[{"pos":[0,26],"content":"Raises the Complete event.","nodes":[{"content":"Raises the Complete event.","pos":[0,26]}]}],"pos":[7683,7710],"yaml":true},{"content":"Handles the specified exception.","nodes":[{"pos":[0,32],"content":"Handles the specified exception.","nodes":[{"content":"Handles the specified exception.","pos":[0,32]}]}],"pos":[8981,9014],"yaml":true},{"content":"The exception to handle.","nodes":[{"pos":[0,24],"content":"The exception to handle.","nodes":[{"content":"The exception to handle.","pos":[0,24]}]}],"pos":[9164,9189],"yaml":true},{"content":"`true` if the exception is handled; otherwise, `false`.","nodes":[{"pos":[0,55],"content":"<ph id=\"ph1\">`true`</ph> if the exception is handled; otherwise, <ph id=\"ph2\">`false`</ph>.","source":"`true` if the exception is handled; otherwise, `false`."}],"pos":[9247,9305],"yaml":true},{"content":"Raises the Revert event.","nodes":[{"pos":[0,24],"content":"Raises the Revert event.","nodes":[{"content":"Raises the Revert event.","pos":[0,24]}]}],"pos":[10466,10491],"yaml":true},{"content":"Not used in this implementation.","nodes":[{"pos":[0,32],"content":"Not used in this implementation.","nodes":[{"content":"Not used in this implementation.","pos":[0,32]}]}],"pos":[10649,10682],"yaml":true}],"content":"### YamlMime:ManagedReference\nitems:\n- uid: System.Activities.Presentation.Model.EditingScope\n  commentId: T:System.Activities.Presentation.Model.EditingScope\n  id: EditingScope\n  children:\n  - System.Activities.Presentation.Model.EditingScope.CanComplete\n  - System.Activities.Presentation.Model.EditingScope.Changes\n  - System.Activities.Presentation.Model.EditingScope.HasEffectiveChanges\n  - System.Activities.Presentation.Model.EditingScope.OnComplete\n  - System.Activities.Presentation.Model.EditingScope.OnException(System.Exception)\n  - System.Activities.Presentation.Model.EditingScope.OnRevert(System.Boolean)\n  langs:\n  - csharp\n  name: EditingScope\n  nameWithType: EditingScope\n  fullName: System.Activities.Presentation.Model.EditingScope\n  type: Class\n  assemblies:\n  - System.Activities.Presentation\n  namespace: System.Activities.Presentation.Model\n  summary: An editing scope represents a collection of changes to the <xref href=\"System.Activities.Presentation.Model.ModelItem\"></xref> tree that can be committed or rolled back as one atomic unit of work.\n  remarks: This is useful for batching together a set of changes to multiple <xref:System.Activities.Presentation.Model.ModelItem> objects. As an example, in the messaging activities, the changes made from the raised dialogs will impact multiple property values. However, as all of the changes come from the raised dialog, the changes need to be considered as a batch and undone as a single unit of work. For more details on usage, see the Editing Scope sample\n  syntax:\n    content: 'public class EditingScope : System.Activities.Presentation.Model.ModelEditingScope'\n  inheritance:\n  - System.Object\n  - System.Activities.Presentation.Model.ModelEditingScope\n  implements: []\n  inheritedMembers:\n  - System.Activities.Presentation.Model.ModelEditingScope.Complete\n  - System.Activities.Presentation.Model.ModelEditingScope.Description\n  - System.Activities.Presentation.Model.ModelEditingScope.Dispose\n  - System.Activities.Presentation.Model.ModelEditingScope.Dispose(System.Boolean)\n  - System.Activities.Presentation.Model.ModelEditingScope.Revert\n  - System.Object.Equals(System.Object)\n  - System.Object.Equals(System.Object,System.Object)\n  - System.Object.GetHashCode\n  - System.Object.GetType\n  - System.Object.MemberwiseClone\n  - System.Object.ReferenceEquals(System.Object,System.Object)\n  - System.Object.ToString\n  version:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Activities.Presentation.Model/EditingScope.xml\n  ms.technology:\n  - dotnet-standard\n  author: Erikre\n  ms.author: erikre\n  manager: erikre\n- uid: System.Activities.Presentation.Model.EditingScope.CanComplete\n  commentId: M:System.Activities.Presentation.Model.EditingScope.CanComplete\n  id: CanComplete\n  parent: System.Activities.Presentation.Model.EditingScope\n  langs:\n  - csharp\n  name: CanComplete()\n  nameWithType: EditingScope.CanComplete()\n  fullName: EditingScope.CanComplete()\n  type: Method\n  assemblies:\n  - System.Activities.Presentation\n  namespace: System.Activities.Presentation.Model\n  summary: Determines whether the current editing scope instance can complete.\n  syntax:\n    content: protected override bool CanComplete ();\n    parameters: []\n    return:\n      type: System.Boolean\n      description: '`true` if the editing scope can complete; otherwise, `false`.'\n  overload: System.Activities.Presentation.Model.EditingScope.CanComplete*\n  exceptions: []\n  version:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Activities.Presentation.Model/EditingScope.xml\n  ms.technology:\n  - dotnet-standard\n  author: Erikre\n  ms.author: erikre\n  manager: erikre\n- uid: System.Activities.Presentation.Model.EditingScope.Changes\n  commentId: P:System.Activities.Presentation.Model.EditingScope.Changes\n  id: Changes\n  parent: System.Activities.Presentation.Model.EditingScope\n  langs:\n  - csharp\n  name: Changes\n  nameWithType: EditingScope.Changes\n  fullName: EditingScope.Changes\n  type: Property\n  assemblies:\n  - System.Activities.Presentation\n  namespace: System.Activities.Presentation.Model\n  summary: Gets a list of changes.\n  syntax:\n    content: public System.Collections.Generic.List<System.Activities.Presentation.Model.Change> Changes { get; }\n    return:\n      type: System.Collections.Generic.List{System.Activities.Presentation.Model.Change}\n      description: Returns a <xref href=\"System.Collections.Generic.List`1\"></xref> that contains the changes.\n  overload: System.Activities.Presentation.Model.EditingScope.Changes*\n  exceptions: []\n  version:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Activities.Presentation.Model/EditingScope.xml\n  ms.technology:\n  - dotnet-standard\n  author: Erikre\n  ms.author: erikre\n  manager: erikre\n- uid: System.Activities.Presentation.Model.EditingScope.HasEffectiveChanges\n  commentId: P:System.Activities.Presentation.Model.EditingScope.HasEffectiveChanges\n  id: HasEffectiveChanges\n  parent: System.Activities.Presentation.Model.EditingScope\n  langs:\n  - csharp\n  name: HasEffectiveChanges\n  nameWithType: EditingScope.HasEffectiveChanges\n  fullName: EditingScope.HasEffectiveChanges\n  type: Property\n  assemblies:\n  - System.Activities.Presentation\n  namespace: System.Activities.Presentation.Model\n  summary: Gets  a Boolean that specifies whether changes have been applied to the editing scope.\n  syntax:\n    content: public bool HasEffectiveChanges { get; }\n    return:\n      type: System.Boolean\n      description: '`true` if changes have been applied to the editing scope; otherwise, `false`..'\n  overload: System.Activities.Presentation.Model.EditingScope.HasEffectiveChanges*\n  exceptions: []\n  version:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Activities.Presentation.Model/EditingScope.xml\n  ms.technology:\n  - dotnet-standard\n  author: Erikre\n  ms.author: erikre\n  manager: erikre\n- uid: System.Activities.Presentation.Model.EditingScope.OnComplete\n  commentId: M:System.Activities.Presentation.Model.EditingScope.OnComplete\n  id: OnComplete\n  parent: System.Activities.Presentation.Model.EditingScope\n  langs:\n  - csharp\n  name: OnComplete()\n  nameWithType: EditingScope.OnComplete()\n  fullName: EditingScope.OnComplete()\n  type: Method\n  assemblies:\n  - System.Activities.Presentation\n  namespace: System.Activities.Presentation.Model\n  summary: Raises the Complete event.\n  syntax:\n    content: protected override void OnComplete ();\n    parameters: []\n  overload: System.Activities.Presentation.Model.EditingScope.OnComplete*\n  exceptions: []\n  version:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Activities.Presentation.Model/EditingScope.xml\n  ms.technology:\n  - dotnet-standard\n  author: Erikre\n  ms.author: erikre\n  manager: erikre\n- uid: System.Activities.Presentation.Model.EditingScope.OnException(System.Exception)\n  commentId: M:System.Activities.Presentation.Model.EditingScope.OnException(System.Exception)\n  id: OnException(System.Exception)\n  parent: System.Activities.Presentation.Model.EditingScope\n  langs:\n  - csharp\n  name: OnException(Exception)\n  nameWithType: EditingScope.OnException(Exception)\n  fullName: EditingScope.OnException(Exception)\n  type: Method\n  assemblies:\n  - System.Activities.Presentation\n  namespace: System.Activities.Presentation.Model\n  summary: Handles the specified exception.\n  syntax:\n    content: protected override bool OnException (Exception e);\n    parameters:\n    - id: e\n      type: System.Exception\n      description: The exception to handle.\n    return:\n      type: System.Boolean\n      description: '`true` if the exception is handled; otherwise, `false`.'\n  overload: System.Activities.Presentation.Model.EditingScope.OnException*\n  exceptions: []\n  version:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Activities.Presentation.Model/EditingScope.xml\n  ms.technology:\n  - dotnet-standard\n  author: Erikre\n  ms.author: erikre\n  manager: erikre\n- uid: System.Activities.Presentation.Model.EditingScope.OnRevert(System.Boolean)\n  commentId: M:System.Activities.Presentation.Model.EditingScope.OnRevert(System.Boolean)\n  id: OnRevert(System.Boolean)\n  parent: System.Activities.Presentation.Model.EditingScope\n  langs:\n  - csharp\n  name: OnRevert(Boolean)\n  nameWithType: EditingScope.OnRevert(Boolean)\n  fullName: EditingScope.OnRevert(Boolean)\n  type: Method\n  assemblies:\n  - System.Activities.Presentation\n  namespace: System.Activities.Presentation.Model\n  summary: Raises the Revert event.\n  syntax:\n    content: protected override void OnRevert (bool finalizing);\n    parameters:\n    - id: finalizing\n      type: System.Boolean\n      description: Not used in this implementation.\n  overload: System.Activities.Presentation.Model.EditingScope.OnRevert*\n  exceptions: []\n  version:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Activities.Presentation.Model/EditingScope.xml\n  ms.technology:\n  - dotnet-standard\n  author: Erikre\n  ms.author: erikre\n  manager: erikre\nreferences:\n- uid: System.Activities.Presentation.Model.ModelEditingScope\n  parent: System.Activities.Presentation.Model\n  isExternal: false\n  name: ModelEditingScope\n  nameWithType: ModelEditingScope\n  fullName: System.Activities.Presentation.Model.ModelEditingScope\n- uid: System.Activities.Presentation.Model.EditingScope.CanComplete\n  parent: System.Activities.Presentation.Model.EditingScope\n  isExternal: false\n  name: CanComplete()\n  nameWithType: EditingScope.CanComplete()\n  fullName: EditingScope.CanComplete()\n- uid: System.Boolean\n  parent: System\n  isExternal: false\n  name: Boolean\n  nameWithType: Boolean\n  fullName: System.Boolean\n- uid: System.Activities.Presentation.Model.EditingScope.Changes\n  parent: System.Activities.Presentation.Model.EditingScope\n  isExternal: false\n  name: Changes\n  nameWithType: EditingScope.Changes\n  fullName: EditingScope.Changes\n- uid: System.Collections.Generic.List`1\n  name: List<T>\n  nameWithType: List<T>\n  fullName: System.Collections.Generic.List<T>\n- uid: System.Activities.Presentation.Model.Change\n  name: Change\n  nameWithType: Change\n  fullName: System.Activities.Presentation.Model.Change\n- uid: System.Collections.Generic.List{System.Activities.Presentation.Model.Change}\n  parent: System.Collections.Generic\n  isExternal: false\n  name: List<Change>\n  nameWithType: List<Change>\n  fullName: System.Collections.Generic.List<System.Activities.Presentation.Model.Change>\n  spec.csharp:\n  - uid: System.Collections.Generic.List`1\n    name: List\n    nameWithType: List\n    fullName: System.Collections.Generic.List\n  - name: <\n    nameWithType: <\n    fullName: <\n  - uid: System.Activities.Presentation.Model.Change\n    name: Change\n    nameWithType: Change\n    fullName: System.Activities.Presentation.Model.Change\n  - name: '>'\n    nameWithType: '>'\n    fullName: '>'\n- uid: System.Activities.Presentation.Model.EditingScope.HasEffectiveChanges\n  parent: System.Activities.Presentation.Model.EditingScope\n  isExternal: false\n  name: HasEffectiveChanges\n  nameWithType: EditingScope.HasEffectiveChanges\n  fullName: EditingScope.HasEffectiveChanges\n- uid: System.Activities.Presentation.Model.EditingScope.OnComplete\n  parent: System.Activities.Presentation.Model.EditingScope\n  isExternal: false\n  name: OnComplete()\n  nameWithType: EditingScope.OnComplete()\n  fullName: EditingScope.OnComplete()\n- uid: System.Activities.Presentation.Model.EditingScope.OnException(System.Exception)\n  parent: System.Activities.Presentation.Model.EditingScope\n  isExternal: false\n  name: OnException(Exception)\n  nameWithType: EditingScope.OnException(Exception)\n  fullName: EditingScope.OnException(Exception)\n- uid: System.Exception\n  parent: System\n  isExternal: false\n  name: Exception\n  nameWithType: Exception\n  fullName: System.Exception\n- uid: System.Activities.Presentation.Model.EditingScope.OnRevert(System.Boolean)\n  parent: System.Activities.Presentation.Model.EditingScope\n  isExternal: false\n  name: OnRevert(Boolean)\n  nameWithType: EditingScope.OnRevert(Boolean)\n  fullName: EditingScope.OnRevert(Boolean)\n- uid: System.Activities.Presentation.Model.EditingScope.CanComplete*\n  parent: System.Activities.Presentation.Model.EditingScope\n  isExternal: false\n  name: CanComplete\n  nameWithType: EditingScope.CanComplete\n  fullName: EditingScope.CanComplete\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Activities.Presentation.Model/EditingScope.xml\n- uid: System.Activities.Presentation.Model.EditingScope.Changes*\n  parent: System.Activities.Presentation.Model.EditingScope\n  isExternal: false\n  name: Changes\n  nameWithType: EditingScope.Changes\n  fullName: EditingScope.Changes\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Activities.Presentation.Model/EditingScope.xml\n- uid: System.Activities.Presentation.Model.EditingScope.HasEffectiveChanges*\n  parent: System.Activities.Presentation.Model.EditingScope\n  isExternal: false\n  name: HasEffectiveChanges\n  nameWithType: EditingScope.HasEffectiveChanges\n  fullName: EditingScope.HasEffectiveChanges\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Activities.Presentation.Model/EditingScope.xml\n- uid: System.Activities.Presentation.Model.EditingScope.OnComplete*\n  parent: System.Activities.Presentation.Model.EditingScope\n  isExternal: false\n  name: OnComplete\n  nameWithType: EditingScope.OnComplete\n  fullName: EditingScope.OnComplete\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Activities.Presentation.Model/EditingScope.xml\n- uid: System.Activities.Presentation.Model.EditingScope.OnException*\n  parent: System.Activities.Presentation.Model.EditingScope\n  isExternal: false\n  name: OnException\n  nameWithType: EditingScope.OnException\n  fullName: EditingScope.OnException\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Activities.Presentation.Model/EditingScope.xml\n- uid: System.Activities.Presentation.Model.EditingScope.OnRevert*\n  parent: System.Activities.Presentation.Model.EditingScope\n  isExternal: false\n  name: OnRevert\n  nameWithType: EditingScope.OnRevert\n  fullName: EditingScope.OnRevert\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Activities.Presentation.Model/EditingScope.xml\n- uid: System.Object.Equals(System.Object)\n  parent: System.Object\n  isExternal: false\n  name: Equals(Object)\n  nameWithType: Object.Equals(Object)\n  fullName: Object.Equals(Object)\n- uid: System.Object.Equals(System.Object,System.Object)\n  parent: System.Object\n  isExternal: false\n  name: Equals(Object, Object)\n  nameWithType: Object.Equals(Object, Object)\n  fullName: Object.Equals(Object, Object)\n- uid: System.Object.GetHashCode\n  parent: System.Object\n  isExternal: false\n  name: GetHashCode()\n  nameWithType: Object.GetHashCode()\n  fullName: Object.GetHashCode()\n- uid: System.Object.GetType\n  parent: System.Object\n  isExternal: false\n  name: GetType()\n  nameWithType: Object.GetType()\n  fullName: Object.GetType()\n- uid: System.Object.MemberwiseClone\n  parent: System.Object\n  isExternal: false\n  name: MemberwiseClone()\n  nameWithType: Object.MemberwiseClone()\n  fullName: Object.MemberwiseClone()\n- uid: System.Object.ReferenceEquals(System.Object,System.Object)\n  parent: System.Object\n  isExternal: false\n  name: ReferenceEquals(Object, Object)\n  nameWithType: Object.ReferenceEquals(Object, Object)\n  fullName: Object.ReferenceEquals(Object, Object)\n- uid: System.Object.ToString\n  parent: System.Object\n  isExternal: false\n  name: ToString()\n  nameWithType: Object.ToString()\n  fullName: Object.ToString()\n- uid: System.Activities.Presentation.Model.ModelEditingScope.Complete\n  parent: System.Activities.Presentation.Model.ModelEditingScope\n  isExternal: false\n  name: Complete()\n  nameWithType: ModelEditingScope.Complete()\n  fullName: ModelEditingScope.Complete()\n- uid: System.Activities.Presentation.Model.ModelEditingScope.Description\n  parent: System.Activities.Presentation.Model.ModelEditingScope\n  isExternal: false\n  name: Description\n  nameWithType: ModelEditingScope.Description\n  fullName: ModelEditingScope.Description\n- uid: System.Activities.Presentation.Model.ModelEditingScope.Dispose\n  parent: System.Activities.Presentation.Model.ModelEditingScope\n  isExternal: false\n  name: Dispose()\n  nameWithType: ModelEditingScope.Dispose()\n  fullName: ModelEditingScope.Dispose()\n- uid: System.Activities.Presentation.Model.ModelEditingScope.Dispose(System.Boolean)\n  parent: System.Activities.Presentation.Model.ModelEditingScope\n  isExternal: false\n  name: Dispose(Boolean)\n  nameWithType: ModelEditingScope.Dispose(Boolean)\n  fullName: ModelEditingScope.Dispose(Boolean)\n- uid: System.Activities.Presentation.Model.ModelEditingScope.Revert\n  parent: System.Activities.Presentation.Model.ModelEditingScope\n  isExternal: false\n  name: Revert()\n  nameWithType: ModelEditingScope.Revert()\n  fullName: ModelEditingScope.Revert()\n"}