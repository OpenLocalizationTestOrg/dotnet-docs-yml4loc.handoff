### YamlMime:ManagedReference
items:
- uid: System.ComponentModel.License
  commentId: T:System.ComponentModel.License
  id: License
  children:
  - System.ComponentModel.License.#ctor
  - System.ComponentModel.License.Dispose
  - System.ComponentModel.License.LicenseKey
  langs:
  - csharp
  name: License
  nameWithType: License
  fullName: System.ComponentModel.License
  type: Class
  assemblies:
  - System
  - netstandard
  - System.ComponentModel.TypeConverter
  namespace: System.ComponentModel
  summary: Provides the `abstract` base class for all licenses. A license is granted to a specific instance of a component.
  remarks: All components must call <xref:System.ComponentModel.License.Dispose%2A> for the licenses they grant when the component is disposed or finalized.
  syntax:
    content: 'public abstract class License : IDisposable'
  inheritance:
  - System.Object
  implements:
  - System.IDisposable
  inheritedMembers:
  - System.Object.Equals(System.Object)
  - System.Object.Equals(System.Object,System.Object)
  - System.Object.GetHashCode
  - System.Object.GetType
  - System.Object.MemberwiseClone
  - System.Object.ReferenceEquals(System.Object,System.Object)
  - System.Object.ToString
  version:
  - netcore-2.0
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  - netstandard-2.0
  - xamarinandroid-7.1
  - xamarinios-10.8
  - xamarinmac-3.0
  monikers:
  - netcore-2.0
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  - netstandard-2.0
  - xamarinandroid-7.1
  - xamarinios-10.8
  - xamarinmac-3.0
  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.ComponentModel/License.xml
  ms.technology:
  - dotnet-standard
  author: stevehoag
  ms.author: shoag
  manager: wpickett
- uid: System.ComponentModel.License.#ctor
  commentId: M:System.ComponentModel.License.#ctor
  id: '#ctor'
  parent: System.ComponentModel.License
  langs:
  - csharp
  name: License()
  nameWithType: License.License()
  fullName: License.License()
  type: Constructor
  assemblies:
  - System
  - netstandard
  - System.ComponentModel.TypeConverter
  namespace: System.ComponentModel
  summary: Initializes a new instance of the <xref href="System.ComponentModel.License"></xref> class.
  syntax:
    content: protected License ();
    parameters: []
  overload: System.ComponentModel.License.#ctor*
  exceptions: []
  version:
  - netcore-2.0
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  - netstandard-2.0
  - xamarinandroid-7.1
  - xamarinios-10.8
  - xamarinmac-3.0
  monikers:
  - netcore-2.0
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  - netstandard-2.0
  - xamarinandroid-7.1
  - xamarinios-10.8
  - xamarinmac-3.0
  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.ComponentModel/License.xml
  ms.technology:
  - dotnet-standard
  author: stevehoag
  ms.author: shoag
  manager: wpickett
- uid: System.ComponentModel.License.Dispose
  commentId: M:System.ComponentModel.License.Dispose
  id: Dispose
  parent: System.ComponentModel.License
  langs:
  - csharp
  name: Dispose()
  nameWithType: License.Dispose()
  fullName: License.Dispose()
  type: Method
  assemblies:
  - System
  - netstandard
  - System.ComponentModel.TypeConverter
  namespace: System.ComponentModel
  summary: When overridden in a derived class, disposes of the resources used by the license.
  remarks: "All components must call <xref:System.ComponentModel.License.Dispose%2A> for the licenses that they grant when the component is disposed of or finalized.  \n  \n A <xref:System.ComponentModel.LicenseProvider> can use the licenses it grants to track its usage.  \n  \n Call <xref:System.ComponentModel.License.Dispose%2A> when you are finished using the <xref:System.ComponentModel.License>. The <xref:System.ComponentModel.License.Dispose%2A> method leaves the <xref:System.ComponentModel.License> in an unusable state. After calling <xref:System.ComponentModel.License.Dispose%2A>, you must release all references to the <xref:System.ComponentModel.License> so the memory it was occupying can be reclaimed by garbage collection.  \n  \n> [!NOTE]\n>  Always call <xref:System.ComponentModel.License.Dispose%2A> before you release your last reference to the <xref:System.ComponentModel.License>. Otherwise, the resources the <xref:System.ComponentModel.License> is using will not be freed until garbage collection calls the <xref:System.ComponentModel.License> object's destructor."
  syntax:
    content: public abstract void Dispose ();
    parameters: []
  overload: System.ComponentModel.License.Dispose*
  exceptions: []
  version:
  - netcore-2.0
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  - netstandard-2.0
  - xamarinandroid-7.1
  - xamarinios-10.8
  - xamarinmac-3.0
  monikers:
  - netcore-2.0
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  - netstandard-2.0
  - xamarinandroid-7.1
  - xamarinios-10.8
  - xamarinmac-3.0
  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.ComponentModel/License.xml
  ms.technology:
  - dotnet-standard
  author: stevehoag
  ms.author: shoag
  manager: wpickett
- uid: System.ComponentModel.License.LicenseKey
  commentId: P:System.ComponentModel.License.LicenseKey
  id: LicenseKey
  parent: System.ComponentModel.License
  langs:
  - csharp
  name: LicenseKey
  nameWithType: License.LicenseKey
  fullName: License.LicenseKey
  type: Property
  assemblies:
  - System
  - netstandard
  - System.ComponentModel.TypeConverter
  namespace: System.ComponentModel
  summary: When overridden in a derived class, gets the license key granted to this component.
  remarks: A <xref:System.ComponentModel.LicenseProvider> can use any Unicode character string as a license key. The <xref:System.ComponentModel.License.LicenseKey%2A> should be treated as an opaque cookie, that is, a cookie with a deliberately hidden internal structure.
  syntax:
    content: public abstract string LicenseKey { get; }
    return:
      type: System.String
      description: A license key granted to this component.
  overload: System.ComponentModel.License.LicenseKey*
  exceptions: []
  version:
  - netcore-2.0
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  - netstandard-2.0
  - xamarinandroid-7.1
  - xamarinios-10.8
  - xamarinmac-3.0
  monikers:
  - netcore-2.0
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  - netstandard-2.0
  - xamarinandroid-7.1
  - xamarinios-10.8
  - xamarinmac-3.0
  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.ComponentModel/License.xml
  ms.technology:
  - dotnet-standard
  author: stevehoag
  ms.author: shoag
  manager: wpickett
references:
- uid: System.Object
  parent: System
  isExternal: false
  name: Object
  nameWithType: Object
  fullName: System.Object
- uid: System.ComponentModel.License.#ctor
  parent: System.ComponentModel.License
  isExternal: false
  name: License()
  nameWithType: License.License()
  fullName: License.License()
- uid: System.ComponentModel.License.Dispose
  parent: System.ComponentModel.License
  isExternal: false
  name: Dispose()
  nameWithType: License.Dispose()
  fullName: License.Dispose()
- uid: System.ComponentModel.License.LicenseKey
  parent: System.ComponentModel.License
  isExternal: false
  name: LicenseKey
  nameWithType: License.LicenseKey
  fullName: License.LicenseKey
- uid: System.String
  parent: System
  isExternal: false
  name: String
  nameWithType: String
  fullName: System.String
- uid: System.ComponentModel.License.#ctor*
  parent: System.ComponentModel.License
  isExternal: false
  name: License
  nameWithType: License.License
  fullName: License.License
  monikers:
  - netcore-2.0
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  - netstandard-2.0
  - xamarinandroid-7.1
  - xamarinios-10.8
  - xamarinmac-3.0
  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.ComponentModel/License.xml
- uid: System.ComponentModel.License.Dispose*
  parent: System.ComponentModel.License
  isExternal: false
  name: Dispose
  nameWithType: License.Dispose
  fullName: License.Dispose
  monikers:
  - netcore-2.0
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  - netstandard-2.0
  - xamarinandroid-7.1
  - xamarinios-10.8
  - xamarinmac-3.0
  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.ComponentModel/License.xml
- uid: System.ComponentModel.License.LicenseKey*
  parent: System.ComponentModel.License
  isExternal: false
  name: LicenseKey
  nameWithType: License.LicenseKey
  fullName: License.LicenseKey
  monikers:
  - netcore-2.0
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  - netstandard-2.0
  - xamarinandroid-7.1
  - xamarinios-10.8
  - xamarinmac-3.0
  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.ComponentModel/License.xml
- uid: System.Object.Equals(System.Object)
  parent: System.Object
  isExternal: false
  name: Equals(Object)
  nameWithType: Object.Equals(Object)
  fullName: Object.Equals(Object)
- uid: System.Object.Equals(System.Object,System.Object)
  parent: System.Object
  isExternal: false
  name: Equals(Object, Object)
  nameWithType: Object.Equals(Object, Object)
  fullName: Object.Equals(Object, Object)
- uid: System.Object.GetHashCode
  parent: System.Object
  isExternal: false
  name: GetHashCode()
  nameWithType: Object.GetHashCode()
  fullName: Object.GetHashCode()
- uid: System.Object.GetType
  parent: System.Object
  isExternal: false
  name: GetType()
  nameWithType: Object.GetType()
  fullName: Object.GetType()
- uid: System.Object.MemberwiseClone
  parent: System.Object
  isExternal: false
  name: MemberwiseClone()
  nameWithType: Object.MemberwiseClone()
  fullName: Object.MemberwiseClone()
- uid: System.Object.ReferenceEquals(System.Object,System.Object)
  parent: System.Object
  isExternal: false
  name: ReferenceEquals(Object, Object)
  nameWithType: Object.ReferenceEquals(Object, Object)
  fullName: Object.ReferenceEquals(Object, Object)
- uid: System.Object.ToString
  parent: System.Object
  isExternal: false
  name: ToString()
  nameWithType: Object.ToString()
  fullName: Object.ToString()
- uid: System.IDisposable
  parent: System
  isExternal: false
  name: IDisposable
  nameWithType: IDisposable
  fullName: System.IDisposable
