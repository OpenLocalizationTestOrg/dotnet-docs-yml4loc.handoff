{"nodes":[{"content":"Provides data for the <xref href=\"System.Xml.XmlDocument.NodeChanged\"></xref>, <xref href=\"System.Xml.XmlDocument.NodeChanging\"></xref>, <xref href=\"System.Xml.XmlDocument.NodeInserted\"></xref>, <xref href=\"System.Xml.XmlDocument.NodeInserting\"></xref>, <xref href=\"System.Xml.XmlDocument.NodeRemoved\"></xref> and <xref href=\"System.Xml.XmlDocument.NodeRemoving\"></xref> events.","nodes":[{"pos":[0,378],"content":"Provides data for the <ph id=\"ph1\">&lt;xref href=\"System.Xml.XmlDocument.NodeChanged\"&gt;&lt;/xref&gt;</ph>, <ph id=\"ph2\">&lt;xref href=\"System.Xml.XmlDocument.NodeChanging\"&gt;&lt;/xref&gt;</ph>, <ph id=\"ph3\">&lt;xref href=\"System.Xml.XmlDocument.NodeInserted\"&gt;&lt;/xref&gt;</ph>, <ph id=\"ph4\">&lt;xref href=\"System.Xml.XmlDocument.NodeInserting\"&gt;&lt;/xref&gt;</ph>, <ph id=\"ph5\">&lt;xref href=\"System.Xml.XmlDocument.NodeRemoved\"&gt;&lt;/xref&gt;</ph> and <ph id=\"ph6\">&lt;xref href=\"System.Xml.XmlDocument.NodeRemoving\"&gt;&lt;/xref&gt;</ph> events.","source":"Provides data for the <xref href=\"System.Xml.XmlDocument.NodeChanged\"></xref>, <xref href=\"System.Xml.XmlDocument.NodeChanging\"></xref>, <xref href=\"System.Xml.XmlDocument.NodeInserted\"></xref>, <xref href=\"System.Xml.XmlDocument.NodeInserting\"></xref>, <xref href=\"System.Xml.XmlDocument.NodeRemoved\"></xref> and <xref href=\"System.Xml.XmlDocument.NodeRemoving\"></xref> events."}],"pos":[905,1284],"yaml":true},{"content":"The following C# code shows how to use the event handler.  \n  \n```  \n//Add a new event handler.  \nXmlDocument doc = new XmlDocument();  \ndoc.NodeInserted += new XmlNodeChangedEventHandler(NodeInsertedHandler);  \n//Define the event handler.  \nvoid NodeInsertedHandler(Object src, XmlNodeChangedEventArgs args)  \n{  \n Console.WriteLine(\"Node \" + args.Node.Name + \" inserted!!\");  \n}  \n```  \n  \n> [!NOTE]\n>  If an operation is comprised of multiple actions, it results in multiple events. For example, an <xref:System.Xml.XmlNode.AppendChild%2A> call may have to remove the node being appended from its previous parent. In this case you will see a `NodeRemoved` event followed by a `NodeInserted` event.","nodes":[{"pos":[0,57],"content":"The following C# code shows how to use the event handler.","nodes":[{"content":"The following C# code shows how to use the event handler.","pos":[0,57]}]},{"pos":[394,700],"content":"[!NOTE]\n If an operation is comprised of multiple actions, it results in multiple events. For example, an <xref:System.Xml.XmlNode.AppendChild%2A> call may have to remove the node being appended from its previous parent. In this case you will see a `NodeRemoved` event followed by a `NodeInserted` event.","leadings":["","> "],"nodes":[{"content":" If an operation is comprised of multiple actions, it results in multiple events. For example, an <xref:System.Xml.XmlNode.AppendChild%2A> call may have to remove the node being appended from its previous parent. In this case you will see a `NodeRemoved` event followed by a `NodeInserted` event.","pos":[8,304],"nodes":[{"content":"If an operation is comprised of multiple actions, it results in multiple events.","pos":[1,81]},{"content":"For example, an <ph id=\"ph1\">&lt;xref:System.Xml.XmlNode.AppendChild%2A&gt;</ph> call may have to remove the node being appended from its previous parent.","pos":[82,212],"source":" For example, an <xref:System.Xml.XmlNode.AppendChild%2A> call may have to remove the node being appended from its previous parent."},{"content":"In this case you will see a <ph id=\"ph1\">`NodeRemoved`</ph> event followed by a <ph id=\"ph2\">`NodeInserted`</ph> event.","pos":[213,296],"source":" In this case you will see a `NodeRemoved` event followed by a `NodeInserted` event."}]}]}],"pos":[1295,2016],"yaml":true,"extradata":"MT"},{"content":"Initializes a new instance of the <xref href=\"System.Xml.XmlNodeChangedEventArgs\"></xref> class.","nodes":[{"pos":[0,96],"content":"Initializes a new instance of the <ph id=\"ph1\">&lt;xref href=\"System.Xml.XmlNodeChangedEventArgs\"&gt;&lt;/xref&gt;</ph> class.","source":"Initializes a new instance of the <xref href=\"System.Xml.XmlNodeChangedEventArgs\"></xref> class."}],"pos":[4317,4414],"yaml":true},{"content":"The <xref href=\"System.Xml.XmlNode\"></xref> that generated the event.","nodes":[{"pos":[0,69],"content":"The <ph id=\"ph1\">&lt;xref href=\"System.Xml.XmlNode\"&gt;&lt;/xref&gt;</ph> that generated the event.","source":"The <xref href=\"System.Xml.XmlNode\"></xref> that generated the event."}],"pos":[4710,4780],"yaml":true},{"content":"The old parent <xref href=\"System.Xml.XmlNode\"></xref> of the <xref href=\"System.Xml.XmlNode\"></xref> that generated the event.","nodes":[{"pos":[0,127],"content":"The old parent <ph id=\"ph1\">&lt;xref href=\"System.Xml.XmlNode\"&gt;&lt;/xref&gt;</ph> of the <ph id=\"ph2\">&lt;xref href=\"System.Xml.XmlNode\"&gt;&lt;/xref&gt;</ph> that generated the event.","source":"The old parent <xref href=\"System.Xml.XmlNode\"></xref> of the <xref href=\"System.Xml.XmlNode\"></xref> that generated the event."}],"pos":[4850,4978],"yaml":true},{"content":"The new parent <xref href=\"System.Xml.XmlNode\"></xref> of the <xref href=\"System.Xml.XmlNode\"></xref> that generated the event.","nodes":[{"pos":[0,127],"content":"The new parent <ph id=\"ph1\">&lt;xref href=\"System.Xml.XmlNode\"&gt;&lt;/xref&gt;</ph> of the <ph id=\"ph2\">&lt;xref href=\"System.Xml.XmlNode\"&gt;&lt;/xref&gt;</ph> that generated the event.","source":"The new parent <xref href=\"System.Xml.XmlNode\"></xref> of the <xref href=\"System.Xml.XmlNode\"></xref> that generated the event."}],"pos":[5048,5176],"yaml":true},{"content":"The old value of the <xref href=\"System.Xml.XmlNode\"></xref> that generated the event.","nodes":[{"pos":[0,86],"content":"The old value of the <ph id=\"ph1\">&lt;xref href=\"System.Xml.XmlNode\"&gt;&lt;/xref&gt;</ph> that generated the event.","source":"The old value of the <xref href=\"System.Xml.XmlNode\"></xref> that generated the event."}],"pos":[5240,5327],"yaml":true},{"content":"The new value of the <xref href=\"System.Xml.XmlNode\"></xref> that generated the event.","nodes":[{"pos":[0,86],"content":"The new value of the <ph id=\"ph1\">&lt;xref href=\"System.Xml.XmlNode\"&gt;&lt;/xref&gt;</ph> that generated the event.","source":"The new value of the <xref href=\"System.Xml.XmlNode\"></xref> that generated the event."}],"pos":[5391,5478],"yaml":true},{"content":"The <xref href=\"System.Xml.XmlNodeChangedAction\"></xref>.","nodes":[{"pos":[0,57],"content":"The <ph id=\"ph1\">&lt;xref href=\"System.Xml.XmlNodeChangedAction\"&gt;&lt;/xref&gt;</ph>.","source":"The <xref href=\"System.Xml.XmlNodeChangedAction\"></xref>."}],"pos":[5558,5616],"yaml":true},{"content":"Gets a value indicating what type of node change event is occurring.","nodes":[{"pos":[0,68],"content":"Gets a value indicating what type of node change event is occurring.","nodes":[{"content":"Gets a value indicating what type of node change event is occurring.","pos":[0,68]}]}],"pos":[6920,6989],"yaml":true},{"content":"An `XmlNodeChangedAction` value describing the node change event.  \n  \n <table><thead><tr><th> XmlNodeChangedAction Value  \n  \n </th><th> Description  \n  \n </th></tr></thead><tbody><tr><td> Insert  \n  \n </td><td> A node has been or will be inserted.  \n  \n </td></tr><tr><td> Remove  \n  \n </td><td> A node has been or will be removed.  \n  \n </td></tr><tr><td> Change  \n  \n </td><td> A node has been or will be changed.  \n  \n </td></tr></tbody></table><block subset=\"none\" type=\"note\"><p>  \n The `Action` value does not differentiate between when the event occurred (before or after). You can create separate event handlers to handle both instances.  \n  \n</p></block>","nodes":[{"pos":[0,65],"content":"An <ph id=\"ph1\">`XmlNodeChangedAction`</ph> value describing the node change event.","source":"An `XmlNodeChangedAction` value describing the node change event."},{"pos":[72,666],"content":"<table><thead><tr><th> XmlNodeChangedAction Value  \n  \n </th><th> Description  \n  \n </th></tr></thead><tbody><tr><td> Insert  \n  \n </td><td> A node has been or will be inserted.  \n  \n </td></tr><tr><td> Remove  \n  \n </td><td> A node has been or will be removed.  \n  \n </td></tr><tr><td> Change  \n  \n </td><td> A node has been or will be changed.  \n  \n </td></tr></tbody></table><block subset=\"none\" type=\"note\"><p>  \n The `Action` value does not differentiate between when the event occurred (before or after). You can create separate event handlers to handle both instances.  \n  \n</p></block>","nodes":[{"content":"XmlNodeChangedAction Value","pos":[23,54],"source":" XmlNodeChangedAction Value  \n  \n "},{"content":"Description","pos":[66,82],"source":" Description  \n  \n "},{"content":"Insert","pos":[118,129],"source":" Insert  \n  \n "},{"content":" A node has been or will be inserted.  \n  \n ","pos":[140,184],"nodes":[{"content":"A node has been or will be inserted.","pos":[1,37]}]},{"content":"Remove","pos":[203,214],"source":" Remove  \n  \n "},{"content":" A node has been or will be removed.  \n  \n ","pos":[225,268],"nodes":[{"content":"A node has been or will be removed.","pos":[1,36]}]},{"content":"Change","pos":[287,298],"source":" Change  \n  \n "},{"content":" A node has been or will be changed.  \n  \n ","pos":[309,352],"nodes":[{"content":"A node has been or will be changed.","pos":[1,36]}]},{"content":"  \n The `Action` value does not differentiate between when the event occurred (before or after). You can create separate event handlers to handle both instances.  \n  \n","pos":[414,581],"nodes":[{"content":"The <ph id=\"ph1\">`Action`</ph> value does not differentiate between when the event occurred (before or after).","pos":[1,96],"source":"  \n The `Action` value does not differentiate between when the event occurred (before or after)."},{"content":"You can create separate event handlers to handle both instances.","pos":[97,161]}]}]}],"pos":[7142,7835],"yaml":true},{"content":"Gets the value of the <xref href=\"System.Xml.XmlNode.ParentNode\"></xref> after the operation completes.","nodes":[{"pos":[0,103],"content":"Gets the value of the <ph id=\"ph1\">&lt;xref href=\"System.Xml.XmlNode.ParentNode\"&gt;&lt;/xref&gt;</ph> after the operation completes.","source":"Gets the value of the <xref href=\"System.Xml.XmlNode.ParentNode\"></xref> after the operation completes."}],"pos":[9158,9262],"yaml":true},{"content":"The value of the `ParentNode` after the operation completes. This property returns `null` if the node is being removed.  \n  \n <block subset=\"none\" type=\"note\"><p>  \n For attribute nodes this property returns the <xref href=\"System.Xml.XmlAttribute.OwnerElement\"></xref>.  \n  \n</p></block>","nodes":[{"pos":[0,119],"content":"The value of the `ParentNode` after the operation completes. This property returns `null` if the node is being removed.","nodes":[{"content":"The value of the <ph id=\"ph1\">`ParentNode`</ph> after the operation completes.","pos":[0,60],"source":"The value of the `ParentNode` after the operation completes."},{"content":"This property returns <ph id=\"ph1\">`null`</ph> if the node is being removed.","pos":[61,119],"source":" This property returns `null` if the node is being removed."}]},{"pos":[126,270],"content":"<block subset=\"none\" type=\"note\"><p>  \n For attribute nodes this property returns the <xref href=\"System.Xml.XmlAttribute.OwnerElement\"></xref>.","nodes":[{"content":"For attribute nodes this property returns the <ph id=\"ph1\">&lt;xref href=\"System.Xml.XmlAttribute.OwnerElement\"&gt;&lt;/xref&gt;</ph>.","pos":[40,144],"source":" For attribute nodes this property returns the <xref href=\"System.Xml.XmlAttribute.OwnerElement\"></xref>."}]},{"pos":[276,288],"content":"</p></block>","nodes":[]}],"pos":[9392,9694],"yaml":true},{"content":"Gets the new value of the node.","nodes":[{"pos":[0,31],"content":"Gets the new value of the node.","nodes":[{"content":"Gets the new value of the node.","pos":[0,31]}]}],"pos":[11014,11046],"yaml":true},{"content":"The new value of the node. This property returns `null` if the node is neither an attribute nor a text node, or if the node is being removed.  \n  \n If called in a <xref href=\"System.Xml.XmlDocument.NodeChanging\"></xref> event, `NewValue` returns the value of the node if the change is successful. If called in a <xref href=\"System.Xml.XmlDocument.NodeChanged\"></xref> event, `NewValue` returns the current value of the node.","nodes":[{"pos":[0,141],"content":"The new value of the node. This property returns `null` if the node is neither an attribute nor a text node, or if the node is being removed.","nodes":[{"content":"The new value of the node.","pos":[0,26]},{"content":"This property returns <ph id=\"ph1\">`null`</ph> if the node is neither an attribute nor a text node, or if the node is being removed.","pos":[27,141],"source":" This property returns `null` if the node is neither an attribute nor a text node, or if the node is being removed."}]},{"pos":[148,424],"content":"If called in a <xref href=\"System.Xml.XmlDocument.NodeChanging\"></xref> event, `NewValue` returns the value of the node if the change is successful. If called in a <xref href=\"System.Xml.XmlDocument.NodeChanged\"></xref> event, `NewValue` returns the current value of the node.","nodes":[{"content":"If called in a <ph id=\"ph1\">&lt;xref href=\"System.Xml.XmlDocument.NodeChanging\"&gt;&lt;/xref&gt;</ph> event, <ph id=\"ph2\">`NewValue`</ph> returns the value of the node if the change is successful.","pos":[0,148],"source":"If called in a <xref href=\"System.Xml.XmlDocument.NodeChanging\"></xref> event, `NewValue` returns the value of the node if the change is successful."},{"content":"If called in a <ph id=\"ph1\">&lt;xref href=\"System.Xml.XmlDocument.NodeChanged\"&gt;&lt;/xref&gt;</ph> event, <ph id=\"ph2\">`NewValue`</ph> returns the current value of the node.","pos":[149,276],"source":" If called in a <xref href=\"System.Xml.XmlDocument.NodeChanged\"></xref> event, `NewValue` returns the current value of the node."}]}],"pos":[11158,11591],"yaml":true},{"content":"Gets the <xref href=\"System.Xml.XmlNode\"></xref> that is being added, removed or changed.","nodes":[{"pos":[0,89],"content":"Gets the <ph id=\"ph1\">&lt;xref href=\"System.Xml.XmlNode\"&gt;&lt;/xref&gt;</ph> that is being added, removed or changed.","source":"Gets the <xref href=\"System.Xml.XmlNode\"></xref> that is being added, removed or changed."}],"pos":[12886,12976],"yaml":true},{"content":"The `XmlNode` that is being added, removed or changed; this property never returns `null`.","nodes":[{"pos":[0,90],"content":"The <ph id=\"ph1\">`XmlNode`</ph> that is being added, removed or changed; this property never returns <ph id=\"ph2\">`null`</ph>.","source":"The `XmlNode` that is being added, removed or changed; this property never returns `null`."}],"pos":[13101,13192],"yaml":true},{"content":"Gets the value of the <xref href=\"System.Xml.XmlNode.ParentNode\"></xref> before the operation began.","nodes":[{"pos":[0,100],"content":"Gets the value of the <ph id=\"ph1\">&lt;xref href=\"System.Xml.XmlNode.ParentNode\"&gt;&lt;/xref&gt;</ph> before the operation began.","source":"Gets the value of the <xref href=\"System.Xml.XmlNode.ParentNode\"></xref> before the operation began."}],"pos":[14513,14614],"yaml":true},{"content":"The value of the `ParentNode` before the operation began. This property returns `null` if the node did not have a parent.  \n  \n <block subset=\"none\" type=\"note\"><p>  \n For attribute nodes this property returns the <xref href=\"System.Xml.XmlAttribute.OwnerElement\"></xref>.  \n  \n</p></block>","nodes":[{"pos":[0,121],"content":"The value of the `ParentNode` before the operation began. This property returns `null` if the node did not have a parent.","nodes":[{"content":"The value of the <ph id=\"ph1\">`ParentNode`</ph> before the operation began.","pos":[0,57],"source":"The value of the `ParentNode` before the operation began."},{"content":"This property returns <ph id=\"ph1\">`null`</ph> if the node did not have a parent.","pos":[58,121],"source":" This property returns `null` if the node did not have a parent."}]},{"pos":[128,272],"content":"<block subset=\"none\" type=\"note\"><p>  \n For attribute nodes this property returns the <xref href=\"System.Xml.XmlAttribute.OwnerElement\"></xref>.","nodes":[{"content":"For attribute nodes this property returns the <ph id=\"ph1\">&lt;xref href=\"System.Xml.XmlAttribute.OwnerElement\"&gt;&lt;/xref&gt;</ph>.","pos":[40,144],"source":" For attribute nodes this property returns the <xref href=\"System.Xml.XmlAttribute.OwnerElement\"></xref>."}]},{"pos":[278,290],"content":"</p></block>","nodes":[]}],"pos":[14744,15048],"yaml":true},{"content":"Gets the original value of the node.","nodes":[{"pos":[0,36],"content":"Gets the original value of the node.","nodes":[{"content":"Gets the original value of the node.","pos":[0,36]}]}],"pos":[16368,16405],"yaml":true},{"content":"The original value of the node. This property returns `null` if the node is neither an attribute nor a text node, or if the node is being inserted.  \n  \n If called in a <xref href=\"System.Xml.XmlDocument.NodeChanging\"></xref> event, `OldValue` returns the current value of the node that will be replaced if the change is successful. If called in a <xref href=\"System.Xml.XmlDocument.NodeChanged\"></xref> event, `OldValue` returns the value of node prior to the change.","nodes":[{"pos":[0,147],"content":"The original value of the node. This property returns `null` if the node is neither an attribute nor a text node, or if the node is being inserted.","nodes":[{"content":"The original value of the node.","pos":[0,31]},{"content":"This property returns <ph id=\"ph1\">`null`</ph> if the node is neither an attribute nor a text node, or if the node is being inserted.","pos":[32,147],"source":" This property returns `null` if the node is neither an attribute nor a text node, or if the node is being inserted."}]},{"pos":[154,468],"content":"If called in a <xref href=\"System.Xml.XmlDocument.NodeChanging\"></xref> event, `OldValue` returns the current value of the node that will be replaced if the change is successful. If called in a <xref href=\"System.Xml.XmlDocument.NodeChanged\"></xref> event, `OldValue` returns the value of node prior to the change.","nodes":[{"content":"If called in a <ph id=\"ph1\">&lt;xref href=\"System.Xml.XmlDocument.NodeChanging\"&gt;&lt;/xref&gt;</ph> event, <ph id=\"ph2\">`OldValue`</ph> returns the current value of the node that will be replaced if the change is successful.","pos":[0,178],"source":"If called in a <xref href=\"System.Xml.XmlDocument.NodeChanging\"></xref> event, `OldValue` returns the current value of the node that will be replaced if the change is successful."},{"content":"If called in a <ph id=\"ph1\">&lt;xref href=\"System.Xml.XmlDocument.NodeChanged\"&gt;&lt;/xref&gt;</ph> event, <ph id=\"ph2\">`OldValue`</ph> returns the value of node prior to the change.","pos":[179,314],"source":" If called in a <xref href=\"System.Xml.XmlDocument.NodeChanged\"></xref> event, `OldValue` returns the value of node prior to the change."}]}],"pos":[16517,16994],"yaml":true}],"content":"### YamlMime:ManagedReference\nitems:\n- uid: System.Xml.XmlNodeChangedEventArgs\n  commentId: T:System.Xml.XmlNodeChangedEventArgs\n  id: XmlNodeChangedEventArgs\n  children:\n  - System.Xml.XmlNodeChangedEventArgs.#ctor(System.Xml.XmlNode,System.Xml.XmlNode,System.Xml.XmlNode,System.String,System.String,System.Xml.XmlNodeChangedAction)\n  - System.Xml.XmlNodeChangedEventArgs.Action\n  - System.Xml.XmlNodeChangedEventArgs.NewParent\n  - System.Xml.XmlNodeChangedEventArgs.NewValue\n  - System.Xml.XmlNodeChangedEventArgs.Node\n  - System.Xml.XmlNodeChangedEventArgs.OldParent\n  - System.Xml.XmlNodeChangedEventArgs.OldValue\n  langs:\n  - csharp\n  name: XmlNodeChangedEventArgs\n  nameWithType: XmlNodeChangedEventArgs\n  fullName: System.Xml.XmlNodeChangedEventArgs\n  type: Class\n  assemblies:\n  - System.Xml.XmlDocument\n  - System.Xml\n  - netstandard\n  - System.Xml.ReaderWriter\n  namespace: System.Xml\n  summary: Provides data for the <xref href=\"System.Xml.XmlDocument.NodeChanged\"></xref>, <xref href=\"System.Xml.XmlDocument.NodeChanging\"></xref>, <xref href=\"System.Xml.XmlDocument.NodeInserted\"></xref>, <xref href=\"System.Xml.XmlDocument.NodeInserting\"></xref>, <xref href=\"System.Xml.XmlDocument.NodeRemoved\"></xref> and <xref href=\"System.Xml.XmlDocument.NodeRemoving\"></xref> events.\n  remarks: \"The following C# code shows how to use the event handler.  \\n  \\n```  \\n//Add a new event handler.  \\nXmlDocument doc = new XmlDocument();  \\ndoc.NodeInserted += new XmlNodeChangedEventHandler(NodeInsertedHandler);  \\n//Define the event handler.  \\nvoid NodeInsertedHandler(Object src, XmlNodeChangedEventArgs args)  \\n{  \\n Console.WriteLine(\\\"Node \\\" + args.Node.Name + \\\" inserted!!\\\");  \\n}  \\n```  \\n  \\n> [!NOTE]\\n>  If an operation is comprised of multiple actions, it results in multiple events. For example, an <xref:System.Xml.XmlNode.AppendChild%2A> call may have to remove the node being appended from its previous parent. In this case you will see a `NodeRemoved` event followed by a `NodeInserted` event.\"\n  syntax:\n    content: 'public class XmlNodeChangedEventArgs : EventArgs'\n  inheritance:\n  - System.Object\n  - System.EventArgs\n  implements: []\n  inheritedMembers:\n  - System.EventArgs.Empty\n  - System.Object.Equals(System.Object)\n  - System.Object.Equals(System.Object,System.Object)\n  - System.Object.GetHashCode\n  - System.Object.GetType\n  - System.Object.MemberwiseClone\n  - System.Object.ReferenceEquals(System.Object,System.Object)\n  - System.Object.ToString\n  version:\n  - netcore-1.0\n  - netcore-1.1\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - netstandard-2.0\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  monikers:\n  - netcore-1.0\n  - netcore-1.1\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - netstandard-2.0\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Xml/XmlNodeChangedEventArgs.xml\n  ms.technology:\n  - dotnet-standard\n  author: mairaw\n  ms.author: mairaw\n  manager: wpickett\n- uid: System.Xml.XmlNodeChangedEventArgs.#ctor(System.Xml.XmlNode,System.Xml.XmlNode,System.Xml.XmlNode,System.String,System.String,System.Xml.XmlNodeChangedAction)\n  commentId: M:System.Xml.XmlNodeChangedEventArgs.#ctor(System.Xml.XmlNode,System.Xml.XmlNode,System.Xml.XmlNode,System.String,System.String,System.Xml.XmlNodeChangedAction)\n  id: '#ctor(System.Xml.XmlNode,System.Xml.XmlNode,System.Xml.XmlNode,System.String,System.String,System.Xml.XmlNodeChangedAction)'\n  parent: System.Xml.XmlNodeChangedEventArgs\n  langs:\n  - csharp\n  name: XmlNodeChangedEventArgs(XmlNode, XmlNode, XmlNode, String, String, XmlNodeChangedAction)\n  nameWithType: XmlNodeChangedEventArgs.XmlNodeChangedEventArgs(XmlNode, XmlNode, XmlNode, String, String, XmlNodeChangedAction)\n  fullName: XmlNodeChangedEventArgs.XmlNodeChangedEventArgs(XmlNode, XmlNode, XmlNode, String, String, XmlNodeChangedAction)\n  type: Constructor\n  assemblies:\n  - System.Xml.XmlDocument\n  - System.Xml\n  - netstandard\n  - System.Xml.ReaderWriter\n  namespace: System.Xml\n  summary: Initializes a new instance of the <xref href=\"System.Xml.XmlNodeChangedEventArgs\"></xref> class.\n  syntax:\n    content: public XmlNodeChangedEventArgs (System.Xml.XmlNode node, System.Xml.XmlNode oldParent, System.Xml.XmlNode newParent, string oldValue, string newValue, System.Xml.XmlNodeChangedAction action);\n    parameters:\n    - id: node\n      type: System.Xml.XmlNode\n      description: The <xref href=\"System.Xml.XmlNode\"></xref> that generated the event.\n    - id: oldParent\n      type: System.Xml.XmlNode\n      description: The old parent <xref href=\"System.Xml.XmlNode\"></xref> of the <xref href=\"System.Xml.XmlNode\"></xref> that generated the event.\n    - id: newParent\n      type: System.Xml.XmlNode\n      description: The new parent <xref href=\"System.Xml.XmlNode\"></xref> of the <xref href=\"System.Xml.XmlNode\"></xref> that generated the event.\n    - id: oldValue\n      type: System.String\n      description: The old value of the <xref href=\"System.Xml.XmlNode\"></xref> that generated the event.\n    - id: newValue\n      type: System.String\n      description: The new value of the <xref href=\"System.Xml.XmlNode\"></xref> that generated the event.\n    - id: action\n      type: System.Xml.XmlNodeChangedAction\n      description: The <xref href=\"System.Xml.XmlNodeChangedAction\"></xref>.\n  overload: System.Xml.XmlNodeChangedEventArgs.#ctor*\n  exceptions: []\n  version:\n  - netcore-1.0\n  - netcore-1.1\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - netstandard-2.0\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  monikers:\n  - netcore-1.0\n  - netcore-1.1\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - netstandard-2.0\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Xml/XmlNodeChangedEventArgs.xml\n  ms.technology:\n  - dotnet-standard\n  author: mairaw\n  ms.author: mairaw\n  manager: wpickett\n- uid: System.Xml.XmlNodeChangedEventArgs.Action\n  commentId: P:System.Xml.XmlNodeChangedEventArgs.Action\n  id: Action\n  parent: System.Xml.XmlNodeChangedEventArgs\n  langs:\n  - csharp\n  name: Action\n  nameWithType: XmlNodeChangedEventArgs.Action\n  fullName: XmlNodeChangedEventArgs.Action\n  type: Property\n  assemblies:\n  - System.Xml.XmlDocument\n  - System.Xml\n  - netstandard\n  - System.Xml.ReaderWriter\n  namespace: System.Xml\n  summary: Gets a value indicating what type of node change event is occurring.\n  syntax:\n    content: public System.Xml.XmlNodeChangedAction Action { get; }\n    return:\n      type: System.Xml.XmlNodeChangedAction\n      description: \"An `XmlNodeChangedAction` value describing the node change event.  \\n  \\n <table><thead><tr><th> XmlNodeChangedAction Value  \\n  \\n </th><th> Description  \\n  \\n </th></tr></thead><tbody><tr><td> Insert  \\n  \\n </td><td> A node has been or will be inserted.  \\n  \\n </td></tr><tr><td> Remove  \\n  \\n </td><td> A node has been or will be removed.  \\n  \\n </td></tr><tr><td> Change  \\n  \\n </td><td> A node has been or will be changed.  \\n  \\n </td></tr></tbody></table><block subset=\\\"none\\\" type=\\\"note\\\"><p>  \\n The `Action` value does not differentiate between when the event occurred (before or after). You can create separate event handlers to handle both instances.  \\n  \\n</p></block>\"\n  overload: System.Xml.XmlNodeChangedEventArgs.Action*\n  exceptions: []\n  version:\n  - netcore-1.0\n  - netcore-1.1\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - netstandard-2.0\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  monikers:\n  - netcore-1.0\n  - netcore-1.1\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - netstandard-2.0\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Xml/XmlNodeChangedEventArgs.xml\n  ms.technology:\n  - dotnet-standard\n  author: mairaw\n  ms.author: mairaw\n  manager: wpickett\n- uid: System.Xml.XmlNodeChangedEventArgs.NewParent\n  commentId: P:System.Xml.XmlNodeChangedEventArgs.NewParent\n  id: NewParent\n  parent: System.Xml.XmlNodeChangedEventArgs\n  langs:\n  - csharp\n  name: NewParent\n  nameWithType: XmlNodeChangedEventArgs.NewParent\n  fullName: XmlNodeChangedEventArgs.NewParent\n  type: Property\n  assemblies:\n  - System.Xml.XmlDocument\n  - System.Xml\n  - netstandard\n  - System.Xml.ReaderWriter\n  namespace: System.Xml\n  summary: Gets the value of the <xref href=\"System.Xml.XmlNode.ParentNode\"></xref> after the operation completes.\n  syntax:\n    content: public System.Xml.XmlNode NewParent { get; }\n    return:\n      type: System.Xml.XmlNode\n      description: \"The value of the `ParentNode` after the operation completes. This property returns `null` if the node is being removed.  \\n  \\n <block subset=\\\"none\\\" type=\\\"note\\\"><p>  \\n For attribute nodes this property returns the <xref href=\\\"System.Xml.XmlAttribute.OwnerElement\\\"></xref>.  \\n  \\n</p></block>\"\n  overload: System.Xml.XmlNodeChangedEventArgs.NewParent*\n  exceptions: []\n  version:\n  - netcore-1.0\n  - netcore-1.1\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - netstandard-2.0\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  monikers:\n  - netcore-1.0\n  - netcore-1.1\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - netstandard-2.0\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Xml/XmlNodeChangedEventArgs.xml\n  ms.technology:\n  - dotnet-standard\n  author: mairaw\n  ms.author: mairaw\n  manager: wpickett\n- uid: System.Xml.XmlNodeChangedEventArgs.NewValue\n  commentId: P:System.Xml.XmlNodeChangedEventArgs.NewValue\n  id: NewValue\n  parent: System.Xml.XmlNodeChangedEventArgs\n  langs:\n  - csharp\n  name: NewValue\n  nameWithType: XmlNodeChangedEventArgs.NewValue\n  fullName: XmlNodeChangedEventArgs.NewValue\n  type: Property\n  assemblies:\n  - System.Xml.XmlDocument\n  - System.Xml\n  - netstandard\n  - System.Xml.ReaderWriter\n  namespace: System.Xml\n  summary: Gets the new value of the node.\n  syntax:\n    content: public string NewValue { get; }\n    return:\n      type: System.String\n      description: \"The new value of the node. This property returns `null` if the node is neither an attribute nor a text node, or if the node is being removed.  \\n  \\n If called in a <xref href=\\\"System.Xml.XmlDocument.NodeChanging\\\"></xref> event, `NewValue` returns the value of the node if the change is successful. If called in a <xref href=\\\"System.Xml.XmlDocument.NodeChanged\\\"></xref> event, `NewValue` returns the current value of the node.\"\n  overload: System.Xml.XmlNodeChangedEventArgs.NewValue*\n  exceptions: []\n  version:\n  - netcore-1.0\n  - netcore-1.1\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - netstandard-2.0\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  monikers:\n  - netcore-1.0\n  - netcore-1.1\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - netstandard-2.0\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Xml/XmlNodeChangedEventArgs.xml\n  ms.technology:\n  - dotnet-standard\n  author: mairaw\n  ms.author: mairaw\n  manager: wpickett\n- uid: System.Xml.XmlNodeChangedEventArgs.Node\n  commentId: P:System.Xml.XmlNodeChangedEventArgs.Node\n  id: Node\n  parent: System.Xml.XmlNodeChangedEventArgs\n  langs:\n  - csharp\n  name: Node\n  nameWithType: XmlNodeChangedEventArgs.Node\n  fullName: XmlNodeChangedEventArgs.Node\n  type: Property\n  assemblies:\n  - System.Xml.XmlDocument\n  - System.Xml\n  - netstandard\n  - System.Xml.ReaderWriter\n  namespace: System.Xml\n  summary: Gets the <xref href=\"System.Xml.XmlNode\"></xref> that is being added, removed or changed.\n  syntax:\n    content: public System.Xml.XmlNode Node { get; }\n    return:\n      type: System.Xml.XmlNode\n      description: The `XmlNode` that is being added, removed or changed; this property never returns `null`.\n  overload: System.Xml.XmlNodeChangedEventArgs.Node*\n  exceptions: []\n  version:\n  - netcore-1.0\n  - netcore-1.1\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - netstandard-2.0\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  monikers:\n  - netcore-1.0\n  - netcore-1.1\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - netstandard-2.0\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Xml/XmlNodeChangedEventArgs.xml\n  ms.technology:\n  - dotnet-standard\n  author: mairaw\n  ms.author: mairaw\n  manager: wpickett\n- uid: System.Xml.XmlNodeChangedEventArgs.OldParent\n  commentId: P:System.Xml.XmlNodeChangedEventArgs.OldParent\n  id: OldParent\n  parent: System.Xml.XmlNodeChangedEventArgs\n  langs:\n  - csharp\n  name: OldParent\n  nameWithType: XmlNodeChangedEventArgs.OldParent\n  fullName: XmlNodeChangedEventArgs.OldParent\n  type: Property\n  assemblies:\n  - System.Xml.XmlDocument\n  - System.Xml\n  - netstandard\n  - System.Xml.ReaderWriter\n  namespace: System.Xml\n  summary: Gets the value of the <xref href=\"System.Xml.XmlNode.ParentNode\"></xref> before the operation began.\n  syntax:\n    content: public System.Xml.XmlNode OldParent { get; }\n    return:\n      type: System.Xml.XmlNode\n      description: \"The value of the `ParentNode` before the operation began. This property returns `null` if the node did not have a parent.  \\n  \\n <block subset=\\\"none\\\" type=\\\"note\\\"><p>  \\n For attribute nodes this property returns the <xref href=\\\"System.Xml.XmlAttribute.OwnerElement\\\"></xref>.  \\n  \\n</p></block>\"\n  overload: System.Xml.XmlNodeChangedEventArgs.OldParent*\n  exceptions: []\n  version:\n  - netcore-1.0\n  - netcore-1.1\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - netstandard-2.0\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  monikers:\n  - netcore-1.0\n  - netcore-1.1\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - netstandard-2.0\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Xml/XmlNodeChangedEventArgs.xml\n  ms.technology:\n  - dotnet-standard\n  author: mairaw\n  ms.author: mairaw\n  manager: wpickett\n- uid: System.Xml.XmlNodeChangedEventArgs.OldValue\n  commentId: P:System.Xml.XmlNodeChangedEventArgs.OldValue\n  id: OldValue\n  parent: System.Xml.XmlNodeChangedEventArgs\n  langs:\n  - csharp\n  name: OldValue\n  nameWithType: XmlNodeChangedEventArgs.OldValue\n  fullName: XmlNodeChangedEventArgs.OldValue\n  type: Property\n  assemblies:\n  - System.Xml.XmlDocument\n  - System.Xml\n  - netstandard\n  - System.Xml.ReaderWriter\n  namespace: System.Xml\n  summary: Gets the original value of the node.\n  syntax:\n    content: public string OldValue { get; }\n    return:\n      type: System.String\n      description: \"The original value of the node. This property returns `null` if the node is neither an attribute nor a text node, or if the node is being inserted.  \\n  \\n If called in a <xref href=\\\"System.Xml.XmlDocument.NodeChanging\\\"></xref> event, `OldValue` returns the current value of the node that will be replaced if the change is successful. If called in a <xref href=\\\"System.Xml.XmlDocument.NodeChanged\\\"></xref> event, `OldValue` returns the value of node prior to the change.\"\n  overload: System.Xml.XmlNodeChangedEventArgs.OldValue*\n  exceptions: []\n  version:\n  - netcore-1.0\n  - netcore-1.1\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - netstandard-2.0\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  monikers:\n  - netcore-1.0\n  - netcore-1.1\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - netstandard-2.0\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Xml/XmlNodeChangedEventArgs.xml\n  ms.technology:\n  - dotnet-standard\n  author: mairaw\n  ms.author: mairaw\n  manager: wpickett\nreferences:\n- uid: System.EventArgs\n  parent: System\n  isExternal: false\n  name: EventArgs\n  nameWithType: EventArgs\n  fullName: System.EventArgs\n- uid: System.Xml.XmlNodeChangedEventArgs.#ctor(System.Xml.XmlNode,System.Xml.XmlNode,System.Xml.XmlNode,System.String,System.String,System.Xml.XmlNodeChangedAction)\n  parent: System.Xml.XmlNodeChangedEventArgs\n  isExternal: false\n  name: XmlNodeChangedEventArgs(XmlNode, XmlNode, XmlNode, String, String, XmlNodeChangedAction)\n  nameWithType: XmlNodeChangedEventArgs.XmlNodeChangedEventArgs(XmlNode, XmlNode, XmlNode, String, String, XmlNodeChangedAction)\n  fullName: XmlNodeChangedEventArgs.XmlNodeChangedEventArgs(XmlNode, XmlNode, XmlNode, String, String, XmlNodeChangedAction)\n- uid: System.Xml.XmlNode\n  parent: System.Xml\n  isExternal: false\n  name: XmlNode\n  nameWithType: XmlNode\n  fullName: System.Xml.XmlNode\n- uid: System.String\n  parent: System\n  isExternal: false\n  name: String\n  nameWithType: String\n  fullName: System.String\n- uid: System.Xml.XmlNodeChangedAction\n  parent: System.Xml\n  isExternal: false\n  name: XmlNodeChangedAction\n  nameWithType: XmlNodeChangedAction\n  fullName: System.Xml.XmlNodeChangedAction\n- uid: System.Xml.XmlNodeChangedEventArgs.Action\n  parent: System.Xml.XmlNodeChangedEventArgs\n  isExternal: false\n  name: Action\n  nameWithType: XmlNodeChangedEventArgs.Action\n  fullName: XmlNodeChangedEventArgs.Action\n- uid: System.Xml.XmlNodeChangedEventArgs.NewParent\n  parent: System.Xml.XmlNodeChangedEventArgs\n  isExternal: false\n  name: NewParent\n  nameWithType: XmlNodeChangedEventArgs.NewParent\n  fullName: XmlNodeChangedEventArgs.NewParent\n- uid: System.Xml.XmlNodeChangedEventArgs.NewValue\n  parent: System.Xml.XmlNodeChangedEventArgs\n  isExternal: false\n  name: NewValue\n  nameWithType: XmlNodeChangedEventArgs.NewValue\n  fullName: XmlNodeChangedEventArgs.NewValue\n- uid: System.Xml.XmlNodeChangedEventArgs.Node\n  parent: System.Xml.XmlNodeChangedEventArgs\n  isExternal: false\n  name: Node\n  nameWithType: XmlNodeChangedEventArgs.Node\n  fullName: XmlNodeChangedEventArgs.Node\n- uid: System.Xml.XmlNodeChangedEventArgs.OldParent\n  parent: System.Xml.XmlNodeChangedEventArgs\n  isExternal: false\n  name: OldParent\n  nameWithType: XmlNodeChangedEventArgs.OldParent\n  fullName: XmlNodeChangedEventArgs.OldParent\n- uid: System.Xml.XmlNodeChangedEventArgs.OldValue\n  parent: System.Xml.XmlNodeChangedEventArgs\n  isExternal: false\n  name: OldValue\n  nameWithType: XmlNodeChangedEventArgs.OldValue\n  fullName: XmlNodeChangedEventArgs.OldValue\n- uid: System.Xml.XmlNodeChangedEventArgs.#ctor*\n  parent: System.Xml.XmlNodeChangedEventArgs\n  isExternal: false\n  name: XmlNodeChangedEventArgs\n  nameWithType: XmlNodeChangedEventArgs.XmlNodeChangedEventArgs\n  fullName: XmlNodeChangedEventArgs.XmlNodeChangedEventArgs\n  monikers:\n  - netcore-1.0\n  - netcore-1.1\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - netstandard-2.0\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Xml/XmlNodeChangedEventArgs.xml\n- uid: System.Xml.XmlNodeChangedEventArgs.Action*\n  parent: System.Xml.XmlNodeChangedEventArgs\n  isExternal: false\n  name: Action\n  nameWithType: XmlNodeChangedEventArgs.Action\n  fullName: XmlNodeChangedEventArgs.Action\n  monikers:\n  - netcore-1.0\n  - netcore-1.1\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - netstandard-2.0\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Xml/XmlNodeChangedEventArgs.xml\n- uid: System.Xml.XmlNodeChangedEventArgs.NewParent*\n  parent: System.Xml.XmlNodeChangedEventArgs\n  isExternal: false\n  name: NewParent\n  nameWithType: XmlNodeChangedEventArgs.NewParent\n  fullName: XmlNodeChangedEventArgs.NewParent\n  monikers:\n  - netcore-1.0\n  - netcore-1.1\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - netstandard-2.0\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Xml/XmlNodeChangedEventArgs.xml\n- uid: System.Xml.XmlNodeChangedEventArgs.NewValue*\n  parent: System.Xml.XmlNodeChangedEventArgs\n  isExternal: false\n  name: NewValue\n  nameWithType: XmlNodeChangedEventArgs.NewValue\n  fullName: XmlNodeChangedEventArgs.NewValue\n  monikers:\n  - netcore-1.0\n  - netcore-1.1\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - netstandard-2.0\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Xml/XmlNodeChangedEventArgs.xml\n- uid: System.Xml.XmlNodeChangedEventArgs.Node*\n  parent: System.Xml.XmlNodeChangedEventArgs\n  isExternal: false\n  name: Node\n  nameWithType: XmlNodeChangedEventArgs.Node\n  fullName: XmlNodeChangedEventArgs.Node\n  monikers:\n  - netcore-1.0\n  - netcore-1.1\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - netstandard-2.0\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Xml/XmlNodeChangedEventArgs.xml\n- uid: System.Xml.XmlNodeChangedEventArgs.OldParent*\n  parent: System.Xml.XmlNodeChangedEventArgs\n  isExternal: false\n  name: OldParent\n  nameWithType: XmlNodeChangedEventArgs.OldParent\n  fullName: XmlNodeChangedEventArgs.OldParent\n  monikers:\n  - netcore-1.0\n  - netcore-1.1\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - netstandard-2.0\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Xml/XmlNodeChangedEventArgs.xml\n- uid: System.Xml.XmlNodeChangedEventArgs.OldValue*\n  parent: System.Xml.XmlNodeChangedEventArgs\n  isExternal: false\n  name: OldValue\n  nameWithType: XmlNodeChangedEventArgs.OldValue\n  fullName: XmlNodeChangedEventArgs.OldValue\n  monikers:\n  - netcore-1.0\n  - netcore-1.1\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - netstandard-2.0\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Xml/XmlNodeChangedEventArgs.xml\n- uid: System.Object.Equals(System.Object)\n  parent: System.Object\n  isExternal: false\n  name: Equals(Object)\n  nameWithType: Object.Equals(Object)\n  fullName: Object.Equals(Object)\n- uid: System.Object.Equals(System.Object,System.Object)\n  parent: System.Object\n  isExternal: false\n  name: Equals(Object, Object)\n  nameWithType: Object.Equals(Object, Object)\n  fullName: Object.Equals(Object, Object)\n- uid: System.Object.GetHashCode\n  parent: System.Object\n  isExternal: false\n  name: GetHashCode()\n  nameWithType: Object.GetHashCode()\n  fullName: Object.GetHashCode()\n- uid: System.Object.GetType\n  parent: System.Object\n  isExternal: false\n  name: GetType()\n  nameWithType: Object.GetType()\n  fullName: Object.GetType()\n- uid: System.Object.MemberwiseClone\n  parent: System.Object\n  isExternal: false\n  name: MemberwiseClone()\n  nameWithType: Object.MemberwiseClone()\n  fullName: Object.MemberwiseClone()\n- uid: System.Object.ReferenceEquals(System.Object,System.Object)\n  parent: System.Object\n  isExternal: false\n  name: ReferenceEquals(Object, Object)\n  nameWithType: Object.ReferenceEquals(Object, Object)\n  fullName: Object.ReferenceEquals(Object, Object)\n- uid: System.Object.ToString\n  parent: System.Object\n  isExternal: false\n  name: ToString()\n  nameWithType: Object.ToString()\n  fullName: Object.ToString()\n- uid: System.EventArgs.Empty\n  parent: System.EventArgs\n  isExternal: false\n  name: Empty\n  nameWithType: EventArgs.Empty\n  fullName: EventArgs.Empty\n"}