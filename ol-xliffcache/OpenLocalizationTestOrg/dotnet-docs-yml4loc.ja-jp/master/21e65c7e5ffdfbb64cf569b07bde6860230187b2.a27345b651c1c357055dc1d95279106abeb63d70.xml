{"nodes":[{"content":"Represents time in divisions, such as weeks, months, and years.","nodes":[{"pos":[0,63],"content":"Represents time in divisions, such as weeks, months, and years.","nodes":[{"content":"Represents time in divisions, such as weeks, months, and years.","pos":[0,63]}]}],"pos":[3687,3751],"yaml":true},{"content":"A calendar divides time into units, such as weeks, months, and years. The number, length, and start of the divisions vary in each calendar.  \n  \n> [!NOTE]\n>  For information about using the calendar classes in the .NET Framework, see [Working with Calendars](~/docs/standard/datetime/working-with-calendars.md).  \n  \n Any moment in time can be represented as a set of numeric values using a particular calendar. For example, a vernal equinox occurred at (1999, 3, 20, 8, 46, 0, 0.0) in the Gregorian calendar, that is, March 20, 1999 C.E. at 8:46:00:0.0. An implementation of <xref:System.Globalization.Calendar> can map any date in the range of a specific calendar to a similar set of numeric values, and <xref:System.DateTime> can map such sets of numeric values to a textual representation using information from <xref:System.Globalization.Calendar> and <xref:System.Globalization.DateTimeFormatInfo>. The textual representation can be culture-sensitive, for example, \"8:46 AM March 20th 1999 AD\" for the en-US culture, or culture-insensitive, for example, \"1999-03-20T08:46:00\" in ISO 8601 format.  \n  \n A <xref:System.Globalization.Calendar> implementation can define one or more eras. The <xref:System.Globalization.Calendar> class identifies the eras as enumerated integers, where the current era (<xref:System.Globalization.Calendar.CurrentEra>) has the value 0.  \n  \n To make up for the difference between the calendar year and the actual time that the earth rotates around the sun or the actual time that the moon rotates around the earth, a leap year has a different number of days from a standard calendar year. Each <xref:System.Globalization.Calendar> implementation defines leap years differently.  \n  \n For consistency, the first unit in each interval (the first month, for example) is assigned the value 1.  \n  \n The <xref:System.Globalization> namespace includes the following <xref:System.Globalization.Calendar> implementations:  \n  \n-   <xref:System.Globalization.ChineseLunisolarCalendar>  \n  \n-   <xref:System.Globalization.EastAsianLunisolarCalendar>  \n  \n-   <xref:System.Globalization.GregorianCalendar>  \n  \n-   <xref:System.Globalization.HebrewCalendar>  \n  \n-   <xref:System.Globalization.HijriCalendar>  \n  \n-   <xref:System.Globalization.JapaneseCalendar>  \n  \n-   <xref:System.Globalization.JapaneseLunisolarCalendar>  \n  \n-   <xref:System.Globalization.JulianCalendar>  \n  \n-   <xref:System.Globalization.KoreanCalendar>  \n  \n-   <xref:System.Globalization.KoreanLunisolarCalendar>  \n  \n-   <xref:System.Globalization.PersianCalendar>  \n  \n-   <xref:System.Globalization.TaiwanCalendar>  \n  \n-   <xref:System.Globalization.TaiwanLunisolarCalendar>  \n  \n-   <xref:System.Globalization.ThaiBuddhistCalendar>  \n  \n-   <xref:System.Globalization.UmAlQuraCalendar>","nodes":[{"pos":[0,139],"content":"A calendar divides time into units, such as weeks, months, and years. The number, length, and start of the divisions vary in each calendar.","nodes":[{"content":"A calendar divides time into units, such as weeks, months, and years. The number, length, and start of the divisions vary in each calendar.","pos":[0,139],"nodes":[{"content":"A calendar divides time into units, such as weeks, months, and years.","pos":[0,69]},{"content":"The number, length, and start of the divisions vary in each calendar.","pos":[70,139]}]}]},{"pos":[147,311],"content":"[!NOTE]\n For information about using the calendar classes in the .NET Framework, see [Working with Calendars](~/docs/standard/datetime/working-with-calendars.md).","leadings":["","> "],"nodes":[{"content":"For information about using the calendar classes in the .NET Framework, see <bpt id=\"p1\">[</bpt>Working with Calendars<ept id=\"p1\">](~/docs/standard/datetime/working-with-calendars.md)</ept>.","pos":[9,162],"source":" For information about using the calendar classes in the .NET Framework, see [Working with Calendars](~/docs/standard/datetime/working-with-calendars.md)."}]},{"pos":[318,1101],"content":"Any moment in time can be represented as a set of numeric values using a particular calendar. For example, a vernal equinox occurred at (1999, 3, 20, 8, 46, 0, 0.0) in the Gregorian calendar, that is, March 20, 1999 C.E. at 8:46:00:0.0. An implementation of <xref:System.Globalization.Calendar> can map any date in the range of a specific calendar to a similar set of numeric values, and <xref:System.DateTime> can map such sets of numeric values to a textual representation using information from <xref:System.Globalization.Calendar> and <xref:System.Globalization.DateTimeFormatInfo>. The textual representation can be culture-sensitive, for example, \"8:46 AM March 20th 1999 AD\" for the en-US culture, or culture-insensitive, for example, \"1999-03-20T08:46:00\" in ISO 8601 format.","nodes":[{"content":"Any moment in time can be represented as a set of numeric values using a particular calendar. For example, a vernal equinox occurred at (1999, 3, 20, 8, 46, 0, 0.0) in the Gregorian calendar, that is, March 20, 1999 C.E. at 8:46:00:0.0. An implementation of <xref:System.Globalization.Calendar> can map any date in the range of a specific calendar to a similar set of numeric values, and <xref:System.DateTime> can map such sets of numeric values to a textual representation using information from <xref:System.Globalization.Calendar> and <xref:System.Globalization.DateTimeFormatInfo>. The textual representation can be culture-sensitive, for example, \"8:46 AM March 20th 1999 AD\" for the en-US culture, or culture-insensitive, for example, \"1999-03-20T08:46:00\" in ISO 8601 format.","pos":[0,783],"nodes":[{"content":"Any moment in time can be represented as a set of numeric values using a particular calendar.","pos":[0,93]},{"content":"For example, a vernal equinox occurred at (1999, 3, 20, 8, 46, 0, 0.0) in the Gregorian calendar, that is, March 20, 1999 C.E.","pos":[94,220]},{"content":"at 8:46:00:0.0.","pos":[221,236]},{"content":"An implementation of <ph id=\"ph1\">&lt;xref:System.Globalization.Calendar&gt;</ph> can map any date in the range of a specific calendar to a similar set of numeric values, and <ph id=\"ph2\">&lt;xref:System.DateTime&gt;</ph> can map such sets of numeric values to a textual representation using information from <ph id=\"ph3\">&lt;xref:System.Globalization.Calendar&gt;</ph> and <ph id=\"ph4\">&lt;xref:System.Globalization.DateTimeFormatInfo&gt;</ph>.","pos":[237,586],"source":" An implementation of <xref:System.Globalization.Calendar> can map any date in the range of a specific calendar to a similar set of numeric values, and <xref:System.DateTime> can map such sets of numeric values to a textual representation using information from <xref:System.Globalization.Calendar> and <xref:System.Globalization.DateTimeFormatInfo>."},{"content":"The textual representation can be culture-sensitive, for example, \"8:46 AM March 20th 1999 AD\" for the en-US culture, or culture-insensitive, for example, \"1999-03-20T08:46:00\" in ISO 8601 format.","pos":[587,783]}]}]},{"pos":[1108,1370],"content":"A <xref:System.Globalization.Calendar> implementation can define one or more eras. The <xref:System.Globalization.Calendar> class identifies the eras as enumerated integers, where the current era (<xref:System.Globalization.Calendar.CurrentEra>) has the value 0.","nodes":[{"content":"A <xref:System.Globalization.Calendar> implementation can define one or more eras. The <xref:System.Globalization.Calendar> class identifies the eras as enumerated integers, where the current era (<xref:System.Globalization.Calendar.CurrentEra>) has the value 0.","pos":[0,262],"nodes":[{"content":"A <ph id=\"ph1\">&lt;xref:System.Globalization.Calendar&gt;</ph> implementation can define one or more eras.","pos":[0,82],"source":"A <xref:System.Globalization.Calendar> implementation can define one or more eras."},{"content":"The <ph id=\"ph1\">&lt;xref:System.Globalization.Calendar&gt;</ph> class identifies the eras as enumerated integers, where the current era (<ph id=\"ph2\">&lt;xref:System.Globalization.Calendar.CurrentEra&gt;</ph>) has the value 0.","pos":[83,262],"source":" The <xref:System.Globalization.Calendar> class identifies the eras as enumerated integers, where the current era (<xref:System.Globalization.Calendar.CurrentEra>) has the value 0."}]}]},{"pos":[1377,1712],"content":"To make up for the difference between the calendar year and the actual time that the earth rotates around the sun or the actual time that the moon rotates around the earth, a leap year has a different number of days from a standard calendar year. Each <xref:System.Globalization.Calendar> implementation defines leap years differently.","nodes":[{"content":"To make up for the difference between the calendar year and the actual time that the earth rotates around the sun or the actual time that the moon rotates around the earth, a leap year has a different number of days from a standard calendar year. Each <xref:System.Globalization.Calendar> implementation defines leap years differently.","pos":[0,335],"nodes":[{"content":"To make up for the difference between the calendar year and the actual time that the earth rotates around the sun or the actual time that the moon rotates around the earth, a leap year has a different number of days from a standard calendar year.","pos":[0,246]},{"content":"Each <ph id=\"ph1\">&lt;xref:System.Globalization.Calendar&gt;</ph> implementation defines leap years differently.","pos":[247,335],"source":" Each <xref:System.Globalization.Calendar> implementation defines leap years differently."}]}]},{"pos":[1719,1823],"content":"For consistency, the first unit in each interval (the first month, for example) is assigned the value 1.","nodes":[{"content":"For consistency, the first unit in each interval (the first month, for example) is assigned the value 1.","pos":[0,104]}]},{"pos":[1830,1948],"content":"The <xref:System.Globalization> namespace includes the following <xref:System.Globalization.Calendar> implementations:","nodes":[{"content":"The <ph id=\"ph1\">&lt;xref:System.Globalization&gt;</ph> namespace includes the following <ph id=\"ph2\">&lt;xref:System.Globalization.Calendar&gt;</ph> implementations:","pos":[0,118],"source":"The <xref:System.Globalization> namespace includes the following <xref:System.Globalization.Calendar> implementations:"}]},{"pos":[1958,2010],"content":"<xref:System.Globalization.ChineseLunisolarCalendar>","nodes":[]},{"pos":[2020,2074],"content":"<xref:System.Globalization.EastAsianLunisolarCalendar>","nodes":[]},{"pos":[2084,2129],"content":"<xref:System.Globalization.GregorianCalendar>","nodes":[]},{"pos":[2139,2181],"content":"<xref:System.Globalization.HebrewCalendar>","nodes":[]},{"pos":[2191,2232],"content":"<xref:System.Globalization.HijriCalendar>","nodes":[]},{"pos":[2242,2286],"content":"<xref:System.Globalization.JapaneseCalendar>","nodes":[]},{"pos":[2296,2349],"content":"<xref:System.Globalization.JapaneseLunisolarCalendar>","nodes":[]},{"pos":[2359,2401],"content":"<xref:System.Globalization.JulianCalendar>","nodes":[]},{"pos":[2411,2453],"content":"<xref:System.Globalization.KoreanCalendar>","nodes":[]},{"pos":[2463,2514],"content":"<xref:System.Globalization.KoreanLunisolarCalendar>","nodes":[]},{"pos":[2524,2567],"content":"<xref:System.Globalization.PersianCalendar>","nodes":[]},{"pos":[2577,2619],"content":"<xref:System.Globalization.TaiwanCalendar>","nodes":[]},{"pos":[2629,2680],"content":"<xref:System.Globalization.TaiwanLunisolarCalendar>","nodes":[]},{"pos":[2690,2738],"content":"<xref:System.Globalization.ThaiBuddhistCalendar>","nodes":[]},{"pos":[2748,2792],"content":"<xref:System.Globalization.UmAlQuraCalendar>","nodes":[]}],"pos":[3762,6604],"yaml":true,"extradata":"MT"},{"content":"Initializes a new instance of the <xref href=\"System.Globalization.Calendar\"></xref> class.","nodes":[{"pos":[0,91],"content":"Initializes a new instance of the <ph id=\"ph1\">&lt;xref href=\"System.Globalization.Calendar\"&gt;&lt;/xref&gt;</ph> class.","source":"Initializes a new instance of the <xref href=\"System.Globalization.Calendar\"></xref> class."}],"pos":[9659,9751],"yaml":true},{"content":"Returns a <xref href=\"System.DateTime\"></xref> that is the specified number of days away from the specified <xref href=\"System.DateTime\"></xref>.","nodes":[{"pos":[0,145],"content":"Returns a <ph id=\"ph1\">&lt;xref href=\"System.DateTime\"&gt;&lt;/xref&gt;</ph> that is the specified number of days away from the specified <ph id=\"ph2\">&lt;xref href=\"System.DateTime\"&gt;&lt;/xref&gt;</ph>.","source":"Returns a <xref href=\"System.DateTime\"></xref> that is the specified number of days away from the specified <xref href=\"System.DateTime\"></xref>."}],"pos":[12023,12169],"yaml":true},{"content":"The `days` value is added to the specified <xref:System.DateTime>. If `days` is negative, the resulting <xref:System.DateTime> is earlier than the specified <xref:System.DateTime>.  \n  \n The month part of the resulting <xref:System.DateTime> is affected if the resulting day is outside the month of the specified <xref:System.DateTime>. The year part of the resulting <xref:System.DateTime> is affected if the resulting month is outside the year of the specified <xref:System.DateTime>. The era part of the resulting <xref:System.DateTime> is affected if the resulting year is outside the era of the specified <xref:System.DateTime>. The time-of-day part of the resulting <xref:System.DateTime> remains the same as the specified <xref:System.DateTime>.  \n  \n The<xref:System.DateTime.Kind%2A> property of the returned <xref:System.DateTime> value always equals <xref:System.DateTimeKind?displayProperty=fullName>. You can preserve the <xref:System.DateTime.Kind%2A> property of the `time` parameter by calling the <xref:System.DateTime.SpecifyKind%2A?displayProperty=fullName> method, as the following example shows.  \n  \n [!code-csharp[System.Globalization.Calendar.AddMethods#1](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.globalization.calendar.addmethods/cs/add1.cs#1)]\n [!code-vb[System.Globalization.Calendar.AddMethods#1](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.globalization.calendar.addmethods/vb/add1.vb#1)]","nodes":[{"pos":[0,180],"content":"The `days` value is added to the specified <xref:System.DateTime>. If `days` is negative, the resulting <xref:System.DateTime> is earlier than the specified <xref:System.DateTime>.","nodes":[{"content":"The <ph id=\"ph1\">`days`</ph> value is added to the specified <ph id=\"ph2\">&lt;xref:System.DateTime&gt;</ph>.","pos":[0,66],"source":"The `days` value is added to the specified <xref:System.DateTime>."},{"content":"If <ph id=\"ph1\">`days`</ph> is negative, the resulting <ph id=\"ph2\">&lt;xref:System.DateTime&gt;</ph> is earlier than the specified <ph id=\"ph3\">&lt;xref:System.DateTime&gt;</ph>.","pos":[67,180],"source":" If `days` is negative, the resulting <xref:System.DateTime> is earlier than the specified <xref:System.DateTime>."}]},{"pos":[187,752],"content":"The month part of the resulting <xref:System.DateTime> is affected if the resulting day is outside the month of the specified <xref:System.DateTime>. The year part of the resulting <xref:System.DateTime> is affected if the resulting month is outside the year of the specified <xref:System.DateTime>. The era part of the resulting <xref:System.DateTime> is affected if the resulting year is outside the era of the specified <xref:System.DateTime>. The time-of-day part of the resulting <xref:System.DateTime> remains the same as the specified <xref:System.DateTime>.","nodes":[{"content":"The month part of the resulting <xref:System.DateTime> is affected if the resulting day is outside the month of the specified <xref:System.DateTime>. The year part of the resulting <xref:System.DateTime> is affected if the resulting month is outside the year of the specified <xref:System.DateTime>. The era part of the resulting <xref:System.DateTime> is affected if the resulting year is outside the era of the specified <xref:System.DateTime>. The time-of-day part of the resulting <xref:System.DateTime> remains the same as the specified <xref:System.DateTime>.","pos":[0,565],"nodes":[{"content":"The month part of the resulting <ph id=\"ph1\">&lt;xref:System.DateTime&gt;</ph> is affected if the resulting day is outside the month of the specified <ph id=\"ph2\">&lt;xref:System.DateTime&gt;</ph>.","pos":[0,149],"source":"The month part of the resulting <xref:System.DateTime> is affected if the resulting day is outside the month of the specified <xref:System.DateTime>."},{"content":"The year part of the resulting <ph id=\"ph1\">&lt;xref:System.DateTime&gt;</ph> is affected if the resulting month is outside the year of the specified <ph id=\"ph2\">&lt;xref:System.DateTime&gt;</ph>.","pos":[150,299],"source":" The year part of the resulting <xref:System.DateTime> is affected if the resulting month is outside the year of the specified <xref:System.DateTime>."},{"content":"The era part of the resulting <ph id=\"ph1\">&lt;xref:System.DateTime&gt;</ph> is affected if the resulting year is outside the era of the specified <ph id=\"ph2\">&lt;xref:System.DateTime&gt;</ph>.","pos":[300,446],"source":" The era part of the resulting <xref:System.DateTime> is affected if the resulting year is outside the era of the specified <xref:System.DateTime>."},{"content":"The time-of-day part of the resulting <ph id=\"ph1\">&lt;xref:System.DateTime&gt;</ph> remains the same as the specified <ph id=\"ph2\">&lt;xref:System.DateTime&gt;</ph>.","pos":[447,565],"source":" The time-of-day part of the resulting <xref:System.DateTime> remains the same as the specified <xref:System.DateTime>."}]}]},{"pos":[759,1116],"content":"The<xref:System.DateTime.Kind%2A> property of the returned <xref:System.DateTime> value always equals <xref:System.DateTimeKind?displayProperty=fullName>. You can preserve the <xref:System.DateTime.Kind%2A> property of the `time` parameter by calling the <xref:System.DateTime.SpecifyKind%2A?displayProperty=fullName> method, as the following example shows.","nodes":[{"content":"The<ph id=\"ph1\">&lt;xref:System.DateTime.Kind%2A&gt;</ph> property of the returned <ph id=\"ph2\">&lt;xref:System.DateTime&gt;</ph> value always equals <ph id=\"ph3\">&lt;xref:System.DateTimeKind?displayProperty=fullName&gt;</ph>.","pos":[0,154],"source":"The<xref:System.DateTime.Kind%2A> property of the returned <xref:System.DateTime> value always equals <xref:System.DateTimeKind?displayProperty=fullName>."},{"content":"You can preserve the <ph id=\"ph1\">&lt;xref:System.DateTime.Kind%2A&gt;</ph> property of the <ph id=\"ph2\">`time`</ph> parameter by calling the <ph id=\"ph3\">&lt;xref:System.DateTime.SpecifyKind%2A?displayProperty=fullName&gt;</ph> method, as the following example shows.","pos":[155,357],"source":" You can preserve the <xref:System.DateTime.Kind%2A> property of the `time` parameter by calling the <xref:System.DateTime.SpecifyKind%2A?displayProperty=fullName> method, as the following example shows."}]},{"pos":[1123,1450],"content":"<bpt id=\"p1\">[!code-csharp</bpt><bpt id=\"p2\">[</bpt>System.Globalization.Calendar.AddMethods#1<ept id=\"p2\">](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.globalization.calendar.addmethods/cs/add1.cs#1)</ept><ept id=\"p1\">]</ept> <bpt id=\"p3\">[!code-vb</bpt><bpt id=\"p4\">[</bpt>System.Globalization.Calendar.AddMethods#1<ept id=\"p4\">](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.globalization.calendar.addmethods/vb/add1.vb#1)</ept><ept id=\"p3\">]</ept>","source":"[!code-csharp[System.Globalization.Calendar.AddMethods#1](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.globalization.calendar.addmethods/cs/add1.cs#1)]\n [!code-vb[System.Globalization.Calendar.AddMethods#1](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.globalization.calendar.addmethods/vb/add1.vb#1)]"}],"pos":[12180,13640],"yaml":true,"extradata":"MT"},{"content":"The <xref href=\"System.DateTime\"></xref> to which to add days.","nodes":[{"pos":[0,62],"content":"The <ph id=\"ph1\">&lt;xref href=\"System.DateTime\"&gt;&lt;/xref&gt;</ph> to which to add days.","source":"The <xref href=\"System.DateTime\"></xref> to which to add days."}],"pos":[14364,14427],"yaml":true},{"content":"The number of days to add.","nodes":[{"pos":[0,26],"content":"The number of days to add.","nodes":[{"content":"The number of days to add.","pos":[0,26]}]}],"pos":[14486,14513],"yaml":true},{"content":"The <xref href=\"System.DateTime\"></xref> that results from adding the specified number of days to the specified <xref href=\"System.DateTime\"></xref>.","nodes":[{"pos":[0,149],"content":"The <ph id=\"ph1\">&lt;xref href=\"System.DateTime\"&gt;&lt;/xref&gt;</ph> that results from adding the specified number of days to the specified <ph id=\"ph2\">&lt;xref href=\"System.DateTime\"&gt;&lt;/xref&gt;</ph>.","source":"The <xref href=\"System.DateTime\"></xref> that results from adding the specified number of days to the specified <xref href=\"System.DateTime\"></xref>."}],"pos":[14572,14722],"yaml":true},{"content":"The resulting <xref href=\"System.DateTime\"></xref> is outside the supported range of this calendar.","nodes":[{"pos":[0,99],"content":"The resulting <ph id=\"ph1\">&lt;xref href=\"System.DateTime\"&gt;&lt;/xref&gt;</ph> is outside the supported range of this calendar.","source":"The resulting <xref href=\"System.DateTime\"></xref> is outside the supported range of this calendar."}],"pos":[14881,14981],"yaml":true},{"content":"<code>days</code> is outside the supported range of the <xref href=\"System.DateTime\"></xref> return value.","nodes":[{"pos":[0,106],"content":"<ph id=\"ph1\">&lt;code&gt;days&lt;/code&gt;</ph> is outside the supported range of the <ph id=\"ph2\">&lt;xref href=\"System.DateTime\"&gt;&lt;/xref&gt;</ph> return value.","source":"<code>days</code> is outside the supported range of the <xref href=\"System.DateTime\"></xref> return value."}],"pos":[15095,15202],"yaml":true},{"content":"Returns a <xref href=\"System.DateTime\"></xref> that is the specified number of hours away from the specified <xref href=\"System.DateTime\"></xref>.","nodes":[{"pos":[0,146],"content":"Returns a <ph id=\"ph1\">&lt;xref href=\"System.DateTime\"&gt;&lt;/xref&gt;</ph> that is the specified number of hours away from the specified <ph id=\"ph2\">&lt;xref href=\"System.DateTime\"&gt;&lt;/xref&gt;</ph>.","source":"Returns a <xref href=\"System.DateTime\"></xref> that is the specified number of hours away from the specified <xref href=\"System.DateTime\"></xref>."}],"pos":[16776,16923],"yaml":true},{"content":"The `hours` value is added to the specified <xref:System.DateTime>. If `hours` is negative, the resulting <xref:System.DateTime> is earlier than the specified <xref:System.DateTime>.  \n  \n The day part of the resulting <xref:System.DateTime> is affected if the resulting time is outside the day of the specified <xref:System.DateTime>. The month part of the resulting <xref:System.DateTime> is affected if the resulting day is outside the month of the specified <xref:System.DateTime>. The year part of the resulting <xref:System.DateTime> is affected if the resulting month is outside the year of the specified <xref:System.DateTime>. The era part of the resulting <xref:System.DateTime> is affected if the resulting year is outside the era of the specified <xref:System.DateTime>.  \n  \n The<xref:System.DateTime.Kind%2A> property of the returned <xref:System.DateTime> value always equals <xref:System.DateTimeKind?displayProperty=fullName>. You can preserve the <xref:System.DateTime.Kind%2A> property of the `time` parameter by calling the <xref:System.DateTime.SpecifyKind%2A?displayProperty=fullName> method, as the following example shows.  \n  \n [!code-csharp[System.Globalization.Calendar.AddMethods#2](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.globalization.calendar.addmethods/cs/add1.cs#2)]\n [!code-vb[System.Globalization.Calendar.AddMethods#2](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.globalization.calendar.addmethods/vb/add1.vb#2)]","nodes":[{"pos":[0,182],"content":"The `hours` value is added to the specified <xref:System.DateTime>. If `hours` is negative, the resulting <xref:System.DateTime> is earlier than the specified <xref:System.DateTime>.","nodes":[{"content":"The <ph id=\"ph1\">`hours`</ph> value is added to the specified <ph id=\"ph2\">&lt;xref:System.DateTime&gt;</ph>.","pos":[0,67],"source":"The `hours` value is added to the specified <xref:System.DateTime>."},{"content":"If <ph id=\"ph1\">`hours`</ph> is negative, the resulting <ph id=\"ph2\">&lt;xref:System.DateTime&gt;</ph> is earlier than the specified <ph id=\"ph3\">&lt;xref:System.DateTime&gt;</ph>.","pos":[68,182],"source":" If `hours` is negative, the resulting <xref:System.DateTime> is earlier than the specified <xref:System.DateTime>."}]},{"pos":[189,782],"content":"The day part of the resulting <xref:System.DateTime> is affected if the resulting time is outside the day of the specified <xref:System.DateTime>. The month part of the resulting <xref:System.DateTime> is affected if the resulting day is outside the month of the specified <xref:System.DateTime>. The year part of the resulting <xref:System.DateTime> is affected if the resulting month is outside the year of the specified <xref:System.DateTime>. The era part of the resulting <xref:System.DateTime> is affected if the resulting year is outside the era of the specified <xref:System.DateTime>.","nodes":[{"content":"The day part of the resulting <xref:System.DateTime> is affected if the resulting time is outside the day of the specified <xref:System.DateTime>. The month part of the resulting <xref:System.DateTime> is affected if the resulting day is outside the month of the specified <xref:System.DateTime>. The year part of the resulting <xref:System.DateTime> is affected if the resulting month is outside the year of the specified <xref:System.DateTime>. The era part of the resulting <xref:System.DateTime> is affected if the resulting year is outside the era of the specified <xref:System.DateTime>.","pos":[0,593],"nodes":[{"content":"The day part of the resulting <ph id=\"ph1\">&lt;xref:System.DateTime&gt;</ph> is affected if the resulting time is outside the day of the specified <ph id=\"ph2\">&lt;xref:System.DateTime&gt;</ph>.","pos":[0,146],"source":"The day part of the resulting <xref:System.DateTime> is affected if the resulting time is outside the day of the specified <xref:System.DateTime>."},{"content":"The month part of the resulting <ph id=\"ph1\">&lt;xref:System.DateTime&gt;</ph> is affected if the resulting day is outside the month of the specified <ph id=\"ph2\">&lt;xref:System.DateTime&gt;</ph>.","pos":[147,296],"source":" The month part of the resulting <xref:System.DateTime> is affected if the resulting day is outside the month of the specified <xref:System.DateTime>."},{"content":"The year part of the resulting <ph id=\"ph1\">&lt;xref:System.DateTime&gt;</ph> is affected if the resulting month is outside the year of the specified <ph id=\"ph2\">&lt;xref:System.DateTime&gt;</ph>.","pos":[297,446],"source":" The year part of the resulting <xref:System.DateTime> is affected if the resulting month is outside the year of the specified <xref:System.DateTime>."},{"content":"The era part of the resulting <ph id=\"ph1\">&lt;xref:System.DateTime&gt;</ph> is affected if the resulting year is outside the era of the specified <ph id=\"ph2\">&lt;xref:System.DateTime&gt;</ph>.","pos":[447,593],"source":" The era part of the resulting <xref:System.DateTime> is affected if the resulting year is outside the era of the specified <xref:System.DateTime>."}]}]},{"pos":[789,1146],"content":"The<xref:System.DateTime.Kind%2A> property of the returned <xref:System.DateTime> value always equals <xref:System.DateTimeKind?displayProperty=fullName>. You can preserve the <xref:System.DateTime.Kind%2A> property of the `time` parameter by calling the <xref:System.DateTime.SpecifyKind%2A?displayProperty=fullName> method, as the following example shows.","nodes":[{"content":"The<ph id=\"ph1\">&lt;xref:System.DateTime.Kind%2A&gt;</ph> property of the returned <ph id=\"ph2\">&lt;xref:System.DateTime&gt;</ph> value always equals <ph id=\"ph3\">&lt;xref:System.DateTimeKind?displayProperty=fullName&gt;</ph>.","pos":[0,154],"source":"The<xref:System.DateTime.Kind%2A> property of the returned <xref:System.DateTime> value always equals <xref:System.DateTimeKind?displayProperty=fullName>."},{"content":"You can preserve the <ph id=\"ph1\">&lt;xref:System.DateTime.Kind%2A&gt;</ph> property of the <ph id=\"ph2\">`time`</ph> parameter by calling the <ph id=\"ph3\">&lt;xref:System.DateTime.SpecifyKind%2A?displayProperty=fullName&gt;</ph> method, as the following example shows.","pos":[155,357],"source":" You can preserve the <xref:System.DateTime.Kind%2A> property of the `time` parameter by calling the <xref:System.DateTime.SpecifyKind%2A?displayProperty=fullName> method, as the following example shows."}]},{"pos":[1153,1480],"content":"<bpt id=\"p1\">[!code-csharp</bpt><bpt id=\"p2\">[</bpt>System.Globalization.Calendar.AddMethods#2<ept id=\"p2\">](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.globalization.calendar.addmethods/cs/add1.cs#2)</ept><ept id=\"p1\">]</ept> <bpt id=\"p3\">[!code-vb</bpt><bpt id=\"p4\">[</bpt>System.Globalization.Calendar.AddMethods#2<ept id=\"p4\">](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.globalization.calendar.addmethods/vb/add1.vb#2)</ept><ept id=\"p3\">]</ept>","source":"[!code-csharp[System.Globalization.Calendar.AddMethods#2](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.globalization.calendar.addmethods/cs/add1.cs#2)]\n [!code-vb[System.Globalization.Calendar.AddMethods#2](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.globalization.calendar.addmethods/vb/add1.vb#2)]"}],"pos":[16934,18424],"yaml":true,"extradata":"MT"},{"content":"The <xref href=\"System.DateTime\"></xref> to which to add hours.","nodes":[{"pos":[0,63],"content":"The <ph id=\"ph1\">&lt;xref href=\"System.DateTime\"&gt;&lt;/xref&gt;</ph> to which to add hours.","source":"The <xref href=\"System.DateTime\"></xref> to which to add hours."}],"pos":[19150,19214],"yaml":true},{"content":"The number of hours to add.","nodes":[{"pos":[0,27],"content":"The number of hours to add.","nodes":[{"content":"The number of hours to add.","pos":[0,27]}]}],"pos":[19274,19302],"yaml":true},{"content":"The <xref href=\"System.DateTime\"></xref> that results from adding the specified number of hours to the specified <xref href=\"System.DateTime\"></xref>.","nodes":[{"pos":[0,150],"content":"The <ph id=\"ph1\">&lt;xref href=\"System.DateTime\"&gt;&lt;/xref&gt;</ph> that results from adding the specified number of hours to the specified <ph id=\"ph2\">&lt;xref href=\"System.DateTime\"&gt;&lt;/xref&gt;</ph>.","source":"The <xref href=\"System.DateTime\"></xref> that results from adding the specified number of hours to the specified <xref href=\"System.DateTime\"></xref>."}],"pos":[19361,19512],"yaml":true},{"content":"The resulting <xref href=\"System.DateTime\"></xref> is outside the supported range of this calendar.","nodes":[{"pos":[0,99],"content":"The resulting <ph id=\"ph1\">&lt;xref href=\"System.DateTime\"&gt;&lt;/xref&gt;</ph> is outside the supported range of this calendar.","source":"The resulting <xref href=\"System.DateTime\"></xref> is outside the supported range of this calendar."}],"pos":[19672,19772],"yaml":true},{"content":"<code>hours</code> is outside the supported range of the <xref href=\"System.DateTime\"></xref> return value.","nodes":[{"pos":[0,107],"content":"<ph id=\"ph1\">&lt;code&gt;hours&lt;/code&gt;</ph> is outside the supported range of the <ph id=\"ph2\">&lt;xref href=\"System.DateTime\"&gt;&lt;/xref&gt;</ph> return value.","source":"<code>hours</code> is outside the supported range of the <xref href=\"System.DateTime\"></xref> return value."}],"pos":[19886,19994],"yaml":true},{"content":"Returns a <xref href=\"System.DateTime\"></xref> that is the specified number of milliseconds away from the specified <xref href=\"System.DateTime\"></xref>.","nodes":[{"pos":[0,153],"content":"Returns a <ph id=\"ph1\">&lt;xref href=\"System.DateTime\"&gt;&lt;/xref&gt;</ph> that is the specified number of milliseconds away from the specified <ph id=\"ph2\">&lt;xref href=\"System.DateTime\"&gt;&lt;/xref&gt;</ph>.","source":"Returns a <xref href=\"System.DateTime\"></xref> that is the specified number of milliseconds away from the specified <xref href=\"System.DateTime\"></xref>."}],"pos":[21616,21770],"yaml":true},{"content":"The `milliseconds` value is rounded to the nearest integer before it is added to the specified <xref:System.DateTime>. If `milliseconds` is negative, the resulting <xref:System.DateTime> is earlier than the specified <xref:System.DateTime>.  \n  \n The day part of the resulting <xref:System.DateTime> is affected if the resulting time is outside the day of the specified <xref:System.DateTime>. The month part of the resulting <xref:System.DateTime> is affected if the resulting day is outside the month of the specified <xref:System.DateTime>. The year part of the resulting <xref:System.DateTime> is affected if the resulting month is outside the year of the specified <xref:System.DateTime>. The era part of the resulting <xref:System.DateTime> is affected if the resulting year is outside the era of the specified <xref:System.DateTime>.  \n  \n The<xref:System.DateTime.Kind%2A> property of the returned <xref:System.DateTime> value always equals <xref:System.DateTimeKind?displayProperty=fullName>. You can preserve the <xref:System.DateTime.Kind%2A> property of the `time` parameter by calling the <xref:System.DateTime.SpecifyKind%2A?displayProperty=fullName> method, as the following example shows.  \n  \n [!code-csharp[System.Globalization.Calendar.AddMethods#3](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.globalization.calendar.addmethods/cs/add1.cs#3)]\n [!code-vb[System.Globalization.Calendar.AddMethods#3](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.globalization.calendar.addmethods/vb/add1.vb#3)]","nodes":[{"pos":[0,240],"content":"The `milliseconds` value is rounded to the nearest integer before it is added to the specified <xref:System.DateTime>. If `milliseconds` is negative, the resulting <xref:System.DateTime> is earlier than the specified <xref:System.DateTime>.","nodes":[{"content":"The <ph id=\"ph1\">`milliseconds`</ph> value is rounded to the nearest integer before it is added to the specified <ph id=\"ph2\">&lt;xref:System.DateTime&gt;</ph>.","pos":[0,118],"source":"The `milliseconds` value is rounded to the nearest integer before it is added to the specified <xref:System.DateTime>."},{"content":"If <ph id=\"ph1\">`milliseconds`</ph> is negative, the resulting <ph id=\"ph2\">&lt;xref:System.DateTime&gt;</ph> is earlier than the specified <ph id=\"ph3\">&lt;xref:System.DateTime&gt;</ph>.","pos":[119,240],"source":" If `milliseconds` is negative, the resulting <xref:System.DateTime> is earlier than the specified <xref:System.DateTime>."}]},{"pos":[247,840],"content":"The day part of the resulting <xref:System.DateTime> is affected if the resulting time is outside the day of the specified <xref:System.DateTime>. The month part of the resulting <xref:System.DateTime> is affected if the resulting day is outside the month of the specified <xref:System.DateTime>. The year part of the resulting <xref:System.DateTime> is affected if the resulting month is outside the year of the specified <xref:System.DateTime>. The era part of the resulting <xref:System.DateTime> is affected if the resulting year is outside the era of the specified <xref:System.DateTime>.","nodes":[{"content":"The day part of the resulting <xref:System.DateTime> is affected if the resulting time is outside the day of the specified <xref:System.DateTime>. The month part of the resulting <xref:System.DateTime> is affected if the resulting day is outside the month of the specified <xref:System.DateTime>. The year part of the resulting <xref:System.DateTime> is affected if the resulting month is outside the year of the specified <xref:System.DateTime>. The era part of the resulting <xref:System.DateTime> is affected if the resulting year is outside the era of the specified <xref:System.DateTime>.","pos":[0,593],"nodes":[{"content":"The day part of the resulting <ph id=\"ph1\">&lt;xref:System.DateTime&gt;</ph> is affected if the resulting time is outside the day of the specified <ph id=\"ph2\">&lt;xref:System.DateTime&gt;</ph>.","pos":[0,146],"source":"The day part of the resulting <xref:System.DateTime> is affected if the resulting time is outside the day of the specified <xref:System.DateTime>."},{"content":"The month part of the resulting <ph id=\"ph1\">&lt;xref:System.DateTime&gt;</ph> is affected if the resulting day is outside the month of the specified <ph id=\"ph2\">&lt;xref:System.DateTime&gt;</ph>.","pos":[147,296],"source":" The month part of the resulting <xref:System.DateTime> is affected if the resulting day is outside the month of the specified <xref:System.DateTime>."},{"content":"The year part of the resulting <ph id=\"ph1\">&lt;xref:System.DateTime&gt;</ph> is affected if the resulting month is outside the year of the specified <ph id=\"ph2\">&lt;xref:System.DateTime&gt;</ph>.","pos":[297,446],"source":" The year part of the resulting <xref:System.DateTime> is affected if the resulting month is outside the year of the specified <xref:System.DateTime>."},{"content":"The era part of the resulting <ph id=\"ph1\">&lt;xref:System.DateTime&gt;</ph> is affected if the resulting year is outside the era of the specified <ph id=\"ph2\">&lt;xref:System.DateTime&gt;</ph>.","pos":[447,593],"source":" The era part of the resulting <xref:System.DateTime> is affected if the resulting year is outside the era of the specified <xref:System.DateTime>."}]}]},{"pos":[847,1204],"content":"The<xref:System.DateTime.Kind%2A> property of the returned <xref:System.DateTime> value always equals <xref:System.DateTimeKind?displayProperty=fullName>. You can preserve the <xref:System.DateTime.Kind%2A> property of the `time` parameter by calling the <xref:System.DateTime.SpecifyKind%2A?displayProperty=fullName> method, as the following example shows.","nodes":[{"content":"The<ph id=\"ph1\">&lt;xref:System.DateTime.Kind%2A&gt;</ph> property of the returned <ph id=\"ph2\">&lt;xref:System.DateTime&gt;</ph> value always equals <ph id=\"ph3\">&lt;xref:System.DateTimeKind?displayProperty=fullName&gt;</ph>.","pos":[0,154],"source":"The<xref:System.DateTime.Kind%2A> property of the returned <xref:System.DateTime> value always equals <xref:System.DateTimeKind?displayProperty=fullName>."},{"content":"You can preserve the <ph id=\"ph1\">&lt;xref:System.DateTime.Kind%2A&gt;</ph> property of the <ph id=\"ph2\">`time`</ph> parameter by calling the <ph id=\"ph3\">&lt;xref:System.DateTime.SpecifyKind%2A?displayProperty=fullName&gt;</ph> method, as the following example shows.","pos":[155,357],"source":" You can preserve the <xref:System.DateTime.Kind%2A> property of the `time` parameter by calling the <xref:System.DateTime.SpecifyKind%2A?displayProperty=fullName> method, as the following example shows."}]},{"pos":[1211,1538],"content":"<bpt id=\"p1\">[!code-csharp</bpt><bpt id=\"p2\">[</bpt>System.Globalization.Calendar.AddMethods#3<ept id=\"p2\">](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.globalization.calendar.addmethods/cs/add1.cs#3)</ept><ept id=\"p1\">]</ept> <bpt id=\"p3\">[!code-vb</bpt><bpt id=\"p4\">[</bpt>System.Globalization.Calendar.AddMethods#3<ept id=\"p4\">](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.globalization.calendar.addmethods/vb/add1.vb#3)</ept><ept id=\"p3\">]</ept>","source":"[!code-csharp[System.Globalization.Calendar.AddMethods#3](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.globalization.calendar.addmethods/cs/add1.cs#3)]\n [!code-vb[System.Globalization.Calendar.AddMethods#3](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.globalization.calendar.addmethods/vb/add1.vb#3)]"}],"pos":[21781,23329],"yaml":true,"extradata":"MT"},{"content":"The <xref href=\"System.DateTime\"></xref> to add milliseconds to.","nodes":[{"pos":[0,64],"content":"The <ph id=\"ph1\">&lt;xref href=\"System.DateTime\"&gt;&lt;/xref&gt;</ph> to add milliseconds to.","source":"The <xref href=\"System.DateTime\"></xref> to add milliseconds to."}],"pos":[24072,24137],"yaml":true},{"content":"The number of milliseconds to add.","nodes":[{"pos":[0,34],"content":"The number of milliseconds to add.","nodes":[{"content":"The number of milliseconds to add.","pos":[0,34]}]}],"pos":[24205,24240],"yaml":true},{"content":"The <xref href=\"System.DateTime\"></xref> that results from adding the specified number of milliseconds to the specified <xref href=\"System.DateTime\"></xref>.","nodes":[{"pos":[0,157],"content":"The <ph id=\"ph1\">&lt;xref href=\"System.DateTime\"&gt;&lt;/xref&gt;</ph> that results from adding the specified number of milliseconds to the specified <ph id=\"ph2\">&lt;xref href=\"System.DateTime\"&gt;&lt;/xref&gt;</ph>.","source":"The <xref href=\"System.DateTime\"></xref> that results from adding the specified number of milliseconds to the specified <xref href=\"System.DateTime\"></xref>."}],"pos":[24299,24457],"yaml":true},{"content":"The resulting <xref href=\"System.DateTime\"></xref> is outside the supported range of this calendar.","nodes":[{"pos":[0,99],"content":"The resulting <ph id=\"ph1\">&lt;xref href=\"System.DateTime\"&gt;&lt;/xref&gt;</ph> is outside the supported range of this calendar.","source":"The resulting <xref href=\"System.DateTime\"></xref> is outside the supported range of this calendar."}],"pos":[24624,24724],"yaml":true},{"content":"<code>milliseconds</code> is outside the supported range of the <xref href=\"System.DateTime\"></xref> return value.","nodes":[{"pos":[0,114],"content":"<ph id=\"ph1\">&lt;code&gt;milliseconds&lt;/code&gt;</ph> is outside the supported range of the <ph id=\"ph2\">&lt;xref href=\"System.DateTime\"&gt;&lt;/xref&gt;</ph> return value.","source":"<code>milliseconds</code> is outside the supported range of the <xref href=\"System.DateTime\"></xref> return value."}],"pos":[24838,24953],"yaml":true},{"content":"Returns a <xref href=\"System.DateTime\"></xref> that is the specified number of minutes away from the specified <xref href=\"System.DateTime\"></xref>.","nodes":[{"pos":[0,148],"content":"Returns a <ph id=\"ph1\">&lt;xref href=\"System.DateTime\"&gt;&lt;/xref&gt;</ph> that is the specified number of minutes away from the specified <ph id=\"ph2\">&lt;xref href=\"System.DateTime\"&gt;&lt;/xref&gt;</ph>.","source":"Returns a <xref href=\"System.DateTime\"></xref> that is the specified number of minutes away from the specified <xref href=\"System.DateTime\"></xref>."}],"pos":[26539,26688],"yaml":true},{"content":"The `minutes` value is added to the specified <xref:System.DateTime>. If `minutes` is negative, the resulting <xref:System.DateTime> is earlier than the specified <xref:System.DateTime>.  \n  \n The day part of the resulting <xref:System.DateTime> is affected if the resulting time is outside the day of the specified <xref:System.DateTime>. The month part of the resulting <xref:System.DateTime> is affected if the resulting day is outside the month of the specified <xref:System.DateTime>. The year part of the resulting <xref:System.DateTime> is affected if the resulting month is outside the year of the specified <xref:System.DateTime>. The era part of the resulting <xref:System.DateTime> is affected if the resulting year is outside the era of the specified <xref:System.DateTime>.  \n  \n The<xref:System.DateTime.Kind%2A> property of the returned <xref:System.DateTime> value always equals <xref:System.DateTimeKind?displayProperty=fullName>. You can preserve the <xref:System.DateTime.Kind%2A> property of the `time` parameter by calling the <xref:System.DateTime.SpecifyKind%2A?displayProperty=fullName> method, as the following example shows.  \n  \n [!code-csharp[System.Globalization.Calendar.AddMethods#4](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.globalization.calendar.addmethods/cs/add1.cs#4)]\n [!code-vb[System.Globalization.Calendar.AddMethods#4](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.globalization.calendar.addmethods/vb/add1.vb#4)]","nodes":[{"pos":[0,186],"content":"The `minutes` value is added to the specified <xref:System.DateTime>. If `minutes` is negative, the resulting <xref:System.DateTime> is earlier than the specified <xref:System.DateTime>.","nodes":[{"content":"The <ph id=\"ph1\">`minutes`</ph> value is added to the specified <ph id=\"ph2\">&lt;xref:System.DateTime&gt;</ph>.","pos":[0,69],"source":"The `minutes` value is added to the specified <xref:System.DateTime>."},{"content":"If <ph id=\"ph1\">`minutes`</ph> is negative, the resulting <ph id=\"ph2\">&lt;xref:System.DateTime&gt;</ph> is earlier than the specified <ph id=\"ph3\">&lt;xref:System.DateTime&gt;</ph>.","pos":[70,186],"source":" If `minutes` is negative, the resulting <xref:System.DateTime> is earlier than the specified <xref:System.DateTime>."}]},{"pos":[193,786],"content":"The day part of the resulting <xref:System.DateTime> is affected if the resulting time is outside the day of the specified <xref:System.DateTime>. The month part of the resulting <xref:System.DateTime> is affected if the resulting day is outside the month of the specified <xref:System.DateTime>. The year part of the resulting <xref:System.DateTime> is affected if the resulting month is outside the year of the specified <xref:System.DateTime>. The era part of the resulting <xref:System.DateTime> is affected if the resulting year is outside the era of the specified <xref:System.DateTime>.","nodes":[{"content":"The day part of the resulting <xref:System.DateTime> is affected if the resulting time is outside the day of the specified <xref:System.DateTime>. The month part of the resulting <xref:System.DateTime> is affected if the resulting day is outside the month of the specified <xref:System.DateTime>. The year part of the resulting <xref:System.DateTime> is affected if the resulting month is outside the year of the specified <xref:System.DateTime>. The era part of the resulting <xref:System.DateTime> is affected if the resulting year is outside the era of the specified <xref:System.DateTime>.","pos":[0,593],"nodes":[{"content":"The day part of the resulting <ph id=\"ph1\">&lt;xref:System.DateTime&gt;</ph> is affected if the resulting time is outside the day of the specified <ph id=\"ph2\">&lt;xref:System.DateTime&gt;</ph>.","pos":[0,146],"source":"The day part of the resulting <xref:System.DateTime> is affected if the resulting time is outside the day of the specified <xref:System.DateTime>."},{"content":"The month part of the resulting <ph id=\"ph1\">&lt;xref:System.DateTime&gt;</ph> is affected if the resulting day is outside the month of the specified <ph id=\"ph2\">&lt;xref:System.DateTime&gt;</ph>.","pos":[147,296],"source":" The month part of the resulting <xref:System.DateTime> is affected if the resulting day is outside the month of the specified <xref:System.DateTime>."},{"content":"The year part of the resulting <ph id=\"ph1\">&lt;xref:System.DateTime&gt;</ph> is affected if the resulting month is outside the year of the specified <ph id=\"ph2\">&lt;xref:System.DateTime&gt;</ph>.","pos":[297,446],"source":" The year part of the resulting <xref:System.DateTime> is affected if the resulting month is outside the year of the specified <xref:System.DateTime>."},{"content":"The era part of the resulting <ph id=\"ph1\">&lt;xref:System.DateTime&gt;</ph> is affected if the resulting year is outside the era of the specified <ph id=\"ph2\">&lt;xref:System.DateTime&gt;</ph>.","pos":[447,593],"source":" The era part of the resulting <xref:System.DateTime> is affected if the resulting year is outside the era of the specified <xref:System.DateTime>."}]}]},{"pos":[793,1150],"content":"The<xref:System.DateTime.Kind%2A> property of the returned <xref:System.DateTime> value always equals <xref:System.DateTimeKind?displayProperty=fullName>. You can preserve the <xref:System.DateTime.Kind%2A> property of the `time` parameter by calling the <xref:System.DateTime.SpecifyKind%2A?displayProperty=fullName> method, as the following example shows.","nodes":[{"content":"The<ph id=\"ph1\">&lt;xref:System.DateTime.Kind%2A&gt;</ph> property of the returned <ph id=\"ph2\">&lt;xref:System.DateTime&gt;</ph> value always equals <ph id=\"ph3\">&lt;xref:System.DateTimeKind?displayProperty=fullName&gt;</ph>.","pos":[0,154],"source":"The<xref:System.DateTime.Kind%2A> property of the returned <xref:System.DateTime> value always equals <xref:System.DateTimeKind?displayProperty=fullName>."},{"content":"You can preserve the <ph id=\"ph1\">&lt;xref:System.DateTime.Kind%2A&gt;</ph> property of the <ph id=\"ph2\">`time`</ph> parameter by calling the <ph id=\"ph3\">&lt;xref:System.DateTime.SpecifyKind%2A?displayProperty=fullName&gt;</ph> method, as the following example shows.","pos":[155,357],"source":" You can preserve the <xref:System.DateTime.Kind%2A> property of the `time` parameter by calling the <xref:System.DateTime.SpecifyKind%2A?displayProperty=fullName> method, as the following example shows."}]},{"pos":[1157,1484],"content":"<bpt id=\"p1\">[!code-csharp</bpt><bpt id=\"p2\">[</bpt>System.Globalization.Calendar.AddMethods#4<ept id=\"p2\">](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.globalization.calendar.addmethods/cs/add1.cs#4)</ept><ept id=\"p1\">]</ept> <bpt id=\"p3\">[!code-vb</bpt><bpt id=\"p4\">[</bpt>System.Globalization.Calendar.AddMethods#4<ept id=\"p4\">](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.globalization.calendar.addmethods/vb/add1.vb#4)</ept><ept id=\"p3\">]</ept>","source":"[!code-csharp[System.Globalization.Calendar.AddMethods#4](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.globalization.calendar.addmethods/cs/add1.cs#4)]\n [!code-vb[System.Globalization.Calendar.AddMethods#4](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.globalization.calendar.addmethods/vb/add1.vb#4)]"}],"pos":[26699,28193],"yaml":true,"extradata":"MT"},{"content":"The <xref href=\"System.DateTime\"></xref> to which to add minutes.","nodes":[{"pos":[0,65],"content":"The <ph id=\"ph1\">&lt;xref href=\"System.DateTime\"&gt;&lt;/xref&gt;</ph> to which to add minutes.","source":"The <xref href=\"System.DateTime\"></xref> to which to add minutes."}],"pos":[28923,28989],"yaml":true},{"content":"The number of minutes to add.","nodes":[{"pos":[0,29],"content":"The number of minutes to add.","nodes":[{"content":"The number of minutes to add.","pos":[0,29]}]}],"pos":[29051,29081],"yaml":true},{"content":"The <xref href=\"System.DateTime\"></xref> that results from adding the specified number of minutes to the specified <xref href=\"System.DateTime\"></xref>.","nodes":[{"pos":[0,152],"content":"The <ph id=\"ph1\">&lt;xref href=\"System.DateTime\"&gt;&lt;/xref&gt;</ph> that results from adding the specified number of minutes to the specified <ph id=\"ph2\">&lt;xref href=\"System.DateTime\"&gt;&lt;/xref&gt;</ph>.","source":"The <xref href=\"System.DateTime\"></xref> that results from adding the specified number of minutes to the specified <xref href=\"System.DateTime\"></xref>."}],"pos":[29140,29293],"yaml":true},{"content":"The resulting <xref href=\"System.DateTime\"></xref> is outside the supported range of this calendar.","nodes":[{"pos":[0,99],"content":"The resulting <ph id=\"ph1\">&lt;xref href=\"System.DateTime\"&gt;&lt;/xref&gt;</ph> is outside the supported range of this calendar.","source":"The resulting <xref href=\"System.DateTime\"></xref> is outside the supported range of this calendar."}],"pos":[29455,29555],"yaml":true},{"content":"<code>minutes</code> is outside the supported range of the <xref href=\"System.DateTime\"></xref> return value.","nodes":[{"pos":[0,109],"content":"<ph id=\"ph1\">&lt;code&gt;minutes&lt;/code&gt;</ph> is outside the supported range of the <ph id=\"ph2\">&lt;xref href=\"System.DateTime\"&gt;&lt;/xref&gt;</ph> return value.","source":"<code>minutes</code> is outside the supported range of the <xref href=\"System.DateTime\"></xref> return value."}],"pos":[29669,29779],"yaml":true},{"content":"When overridden in a derived class, returns a <xref href=\"System.DateTime\"></xref> that is the specified number of months away from the specified <xref href=\"System.DateTime\"></xref>.","nodes":[{"pos":[0,183],"content":"When overridden in a derived class, returns a <ph id=\"ph1\">&lt;xref href=\"System.DateTime\"&gt;&lt;/xref&gt;</ph> that is the specified number of months away from the specified <ph id=\"ph2\">&lt;xref href=\"System.DateTime\"&gt;&lt;/xref&gt;</ph>.","source":"When overridden in a derived class, returns a <xref href=\"System.DateTime\"></xref> that is the specified number of months away from the specified <xref href=\"System.DateTime\"></xref>."}],"pos":[31359,31543],"yaml":true},{"content":"The `months` value is added to the specified <xref:System.DateTime>. If `months` is negative, the resulting <xref:System.DateTime> is earlier than the specified <xref:System.DateTime>.  \n  \n The day part of the resulting <xref:System.DateTime> is affected if the resulting day is not a valid day in the resulting month of the resulting year. It is changed to the last valid day in the resulting month of the resulting year. The year part of the resulting <xref:System.DateTime> is affected if the resulting month is outside the year of the specified <xref:System.DateTime>. The era part of the resulting <xref:System.DateTime> is affected if the resulting year is outside the era of the specified <xref:System.DateTime>. The time-of-day part of the resulting <xref:System.DateTime> remains the same as the specified <xref:System.DateTime>.  \n  \n For example, suppose that the current calendar has 12 months, where the fourth month has 30 days and the tenth month has 31 days. If the specified month is the tenth month, the specified day is the 31st day of that month, and the value of the `months` parameter is 6, the resulting year is one more than the specified year, the resulting month is the fourth month, and the resulting day is the 30th day, which is the last day of the resulting month.  \n  \n If the value of the `months` parameter is negative, the resulting <xref:System.DateTime> is earlier than the specified <xref:System.DateTime>.  \n  \n The<xref:System.DateTime.Kind%2A> property of the returned <xref:System.DateTime> value always equals <xref:System.DateTimeKind?displayProperty=fullName>. You can preserve the <xref:System.DateTime.Kind%2A> property of the `time` parameter by calling the <xref:System.DateTime.SpecifyKind%2A?displayProperty=fullName> method, as the following example shows.  \n  \n [!code-csharp[System.Globalization.Calendar.AddMethods#5](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.globalization.calendar.addmethods/cs/add1.cs#5)]\n [!code-vb[System.Globalization.Calendar.AddMethods#5](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.globalization.calendar.addmethods/vb/add1.vb#5)]","nodes":[{"pos":[0,184],"content":"The `months` value is added to the specified <xref:System.DateTime>. If `months` is negative, the resulting <xref:System.DateTime> is earlier than the specified <xref:System.DateTime>.","nodes":[{"content":"The <ph id=\"ph1\">`months`</ph> value is added to the specified <ph id=\"ph2\">&lt;xref:System.DateTime&gt;</ph>.","pos":[0,68],"source":"The `months` value is added to the specified <xref:System.DateTime>."},{"content":"If <ph id=\"ph1\">`months`</ph> is negative, the resulting <ph id=\"ph2\">&lt;xref:System.DateTime&gt;</ph> is earlier than the specified <ph id=\"ph3\">&lt;xref:System.DateTime&gt;</ph>.","pos":[69,184],"source":" If `months` is negative, the resulting <xref:System.DateTime> is earlier than the specified <xref:System.DateTime>."}]},{"pos":[191,839],"content":"The day part of the resulting <xref:System.DateTime> is affected if the resulting day is not a valid day in the resulting month of the resulting year. It is changed to the last valid day in the resulting month of the resulting year. The year part of the resulting <xref:System.DateTime> is affected if the resulting month is outside the year of the specified <xref:System.DateTime>. The era part of the resulting <xref:System.DateTime> is affected if the resulting year is outside the era of the specified <xref:System.DateTime>. The time-of-day part of the resulting <xref:System.DateTime> remains the same as the specified <xref:System.DateTime>.","nodes":[{"content":"The day part of the resulting <xref:System.DateTime> is affected if the resulting day is not a valid day in the resulting month of the resulting year. It is changed to the last valid day in the resulting month of the resulting year. The year part of the resulting <xref:System.DateTime> is affected if the resulting month is outside the year of the specified <xref:System.DateTime>. The era part of the resulting <xref:System.DateTime> is affected if the resulting year is outside the era of the specified <xref:System.DateTime>. The time-of-day part of the resulting <xref:System.DateTime> remains the same as the specified <xref:System.DateTime>.","pos":[0,648],"nodes":[{"content":"The day part of the resulting <ph id=\"ph1\">&lt;xref:System.DateTime&gt;</ph> is affected if the resulting day is not a valid day in the resulting month of the resulting year.","pos":[0,150],"source":"The day part of the resulting <xref:System.DateTime> is affected if the resulting day is not a valid day in the resulting month of the resulting year."},{"content":"It is changed to the last valid day in the resulting month of the resulting year.","pos":[151,232]},{"content":"The year part of the resulting <ph id=\"ph1\">&lt;xref:System.DateTime&gt;</ph> is affected if the resulting month is outside the year of the specified <ph id=\"ph2\">&lt;xref:System.DateTime&gt;</ph>.","pos":[233,382],"source":" The year part of the resulting <xref:System.DateTime> is affected if the resulting month is outside the year of the specified <xref:System.DateTime>."},{"content":"The era part of the resulting <ph id=\"ph1\">&lt;xref:System.DateTime&gt;</ph> is affected if the resulting year is outside the era of the specified <ph id=\"ph2\">&lt;xref:System.DateTime&gt;</ph>.","pos":[383,529],"source":" The era part of the resulting <xref:System.DateTime> is affected if the resulting year is outside the era of the specified <xref:System.DateTime>."},{"content":"The time-of-day part of the resulting <ph id=\"ph1\">&lt;xref:System.DateTime&gt;</ph> remains the same as the specified <ph id=\"ph2\">&lt;xref:System.DateTime&gt;</ph>.","pos":[530,648],"source":" The time-of-day part of the resulting <xref:System.DateTime> remains the same as the specified <xref:System.DateTime>."}]}]},{"pos":[846,1295],"content":"For example, suppose that the current calendar has 12 months, where the fourth month has 30 days and the tenth month has 31 days. If the specified month is the tenth month, the specified day is the 31st day of that month, and the value of the `months` parameter is 6, the resulting year is one more than the specified year, the resulting month is the fourth month, and the resulting day is the 30th day, which is the last day of the resulting month.","nodes":[{"content":"For example, suppose that the current calendar has 12 months, where the fourth month has 30 days and the tenth month has 31 days.","pos":[0,129]},{"content":"If the specified month is the tenth month, the specified day is the 31st day of that month, and the value of the <ph id=\"ph1\">`months`</ph> parameter is 6, the resulting year is one more than the specified year, the resulting month is the fourth month, and the resulting day is the 30th day, which is the last day of the resulting month.","pos":[130,449],"source":" If the specified month is the tenth month, the specified day is the 31st day of that month, and the value of the `months` parameter is 6, the resulting year is one more than the specified year, the resulting month is the fourth month, and the resulting day is the 30th day, which is the last day of the resulting month."}]},{"pos":[1302,1444],"content":"If the value of the <ph id=\"ph1\">`months`</ph> parameter is negative, the resulting <ph id=\"ph2\">&lt;xref:System.DateTime&gt;</ph> is earlier than the specified <ph id=\"ph3\">&lt;xref:System.DateTime&gt;</ph>.","source":"If the value of the `months` parameter is negative, the resulting <xref:System.DateTime> is earlier than the specified <xref:System.DateTime>."},{"pos":[1451,1808],"content":"The<xref:System.DateTime.Kind%2A> property of the returned <xref:System.DateTime> value always equals <xref:System.DateTimeKind?displayProperty=fullName>. You can preserve the <xref:System.DateTime.Kind%2A> property of the `time` parameter by calling the <xref:System.DateTime.SpecifyKind%2A?displayProperty=fullName> method, as the following example shows.","nodes":[{"content":"The<ph id=\"ph1\">&lt;xref:System.DateTime.Kind%2A&gt;</ph> property of the returned <ph id=\"ph2\">&lt;xref:System.DateTime&gt;</ph> value always equals <ph id=\"ph3\">&lt;xref:System.DateTimeKind?displayProperty=fullName&gt;</ph>.","pos":[0,154],"source":"The<xref:System.DateTime.Kind%2A> property of the returned <xref:System.DateTime> value always equals <xref:System.DateTimeKind?displayProperty=fullName>."},{"content":"You can preserve the <ph id=\"ph1\">&lt;xref:System.DateTime.Kind%2A&gt;</ph> property of the <ph id=\"ph2\">`time`</ph> parameter by calling the <ph id=\"ph3\">&lt;xref:System.DateTime.SpecifyKind%2A?displayProperty=fullName&gt;</ph> method, as the following example shows.","pos":[155,357],"source":" You can preserve the <xref:System.DateTime.Kind%2A> property of the `time` parameter by calling the <xref:System.DateTime.SpecifyKind%2A?displayProperty=fullName> method, as the following example shows."}]},{"pos":[1815,2142],"content":"<bpt id=\"p1\">[!code-csharp</bpt><bpt id=\"p2\">[</bpt>System.Globalization.Calendar.AddMethods#5<ept id=\"p2\">](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.globalization.calendar.addmethods/cs/add1.cs#5)</ept><ept id=\"p1\">]</ept> <bpt id=\"p3\">[!code-vb</bpt><bpt id=\"p4\">[</bpt>System.Globalization.Calendar.AddMethods#5<ept id=\"p4\">](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.globalization.calendar.addmethods/vb/add1.vb#5)</ept><ept id=\"p3\">]</ept>","source":"[!code-csharp[System.Globalization.Calendar.AddMethods#5](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.globalization.calendar.addmethods/cs/add1.cs#5)]\n [!code-vb[System.Globalization.Calendar.AddMethods#5](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.globalization.calendar.addmethods/vb/add1.vb#5)]"}],"pos":[31554,33710],"yaml":true,"extradata":"MT"},{"content":"The <xref href=\"System.DateTime\"></xref> to which to add months.","nodes":[{"pos":[0,64],"content":"The <ph id=\"ph1\">&lt;xref href=\"System.DateTime\"&gt;&lt;/xref&gt;</ph> to which to add months.","source":"The <xref href=\"System.DateTime\"></xref> to which to add months."}],"pos":[34439,34504],"yaml":true},{"content":"The number of months to add.","nodes":[{"pos":[0,28],"content":"The number of months to add.","nodes":[{"content":"The number of months to add.","pos":[0,28]}]}],"pos":[34565,34594],"yaml":true},{"content":"The <xref href=\"System.DateTime\"></xref> that results from adding the specified number of months to the specified <xref href=\"System.DateTime\"></xref>.","nodes":[{"pos":[0,151],"content":"The <ph id=\"ph1\">&lt;xref href=\"System.DateTime\"&gt;&lt;/xref&gt;</ph> that results from adding the specified number of months to the specified <ph id=\"ph2\">&lt;xref href=\"System.DateTime\"&gt;&lt;/xref&gt;</ph>.","source":"The <xref href=\"System.DateTime\"></xref> that results from adding the specified number of months to the specified <xref href=\"System.DateTime\"></xref>."}],"pos":[34653,34805],"yaml":true},{"content":"The resulting <xref href=\"System.DateTime\"></xref> is outside the supported range of this calendar.","nodes":[{"pos":[0,99],"content":"The resulting <ph id=\"ph1\">&lt;xref href=\"System.DateTime\"&gt;&lt;/xref&gt;</ph> is outside the supported range of this calendar.","source":"The resulting <xref href=\"System.DateTime\"></xref> is outside the supported range of this calendar."}],"pos":[34966,35066],"yaml":true},{"content":"<code>months</code> is outside the supported range of the <xref href=\"System.DateTime\"></xref> return value.","nodes":[{"pos":[0,108],"content":"<ph id=\"ph1\">&lt;code&gt;months&lt;/code&gt;</ph> is outside the supported range of the <ph id=\"ph2\">&lt;xref href=\"System.DateTime\"&gt;&lt;/xref&gt;</ph> return value.","source":"<code>months</code> is outside the supported range of the <xref href=\"System.DateTime\"></xref> return value."}],"pos":[35180,35289],"yaml":true},{"content":"Returns a <xref href=\"System.DateTime\"></xref> that is the specified number of seconds away from the specified <xref href=\"System.DateTime\"></xref>.","nodes":[{"pos":[0,148],"content":"Returns a <ph id=\"ph1\">&lt;xref href=\"System.DateTime\"&gt;&lt;/xref&gt;</ph> that is the specified number of seconds away from the specified <ph id=\"ph2\">&lt;xref href=\"System.DateTime\"&gt;&lt;/xref&gt;</ph>.","source":"Returns a <xref href=\"System.DateTime\"></xref> that is the specified number of seconds away from the specified <xref href=\"System.DateTime\"></xref>."}],"pos":[36875,37024],"yaml":true},{"content":"The `seconds` value is added to the specified <xref:System.DateTime>. If `seconds` is negative, the resulting <xref:System.DateTime> is earlier than the specified <xref:System.DateTime>.  \n  \n The day part of the resulting <xref:System.DateTime> is affected if the resulting time is outside the day of the specified <xref:System.DateTime>. The month part of the resulting <xref:System.DateTime> is affected if the resulting day is outside the month of the specified <xref:System.DateTime>. The year part of the resulting <xref:System.DateTime> is affected if the resulting month is outside the year of the specified <xref:System.DateTime>. The era part of the resulting <xref:System.DateTime> is affected if the resulting year is outside the era of the specified <xref:System.DateTime>.  \n  \n The<xref:System.DateTime.Kind%2A> property of the returned <xref:System.DateTime> value always equals <xref:System.DateTimeKind?displayProperty=fullName>. You can preserve the <xref:System.DateTime.Kind%2A> property of the `time` parameter by calling the <xref:System.DateTime.SpecifyKind%2A?displayProperty=fullName> method, as the following example shows.  \n  \n [!code-csharp[System.Globalization.Calendar.AddMethods#6](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.globalization.calendar.addmethods/cs/add1.cs#6)]\n [!code-vb[System.Globalization.Calendar.AddMethods#6](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.globalization.calendar.addmethods/vb/add1.vb#6)]","nodes":[{"pos":[0,186],"content":"The `seconds` value is added to the specified <xref:System.DateTime>. If `seconds` is negative, the resulting <xref:System.DateTime> is earlier than the specified <xref:System.DateTime>.","nodes":[{"content":"The <ph id=\"ph1\">`seconds`</ph> value is added to the specified <ph id=\"ph2\">&lt;xref:System.DateTime&gt;</ph>.","pos":[0,69],"source":"The `seconds` value is added to the specified <xref:System.DateTime>."},{"content":"If <ph id=\"ph1\">`seconds`</ph> is negative, the resulting <ph id=\"ph2\">&lt;xref:System.DateTime&gt;</ph> is earlier than the specified <ph id=\"ph3\">&lt;xref:System.DateTime&gt;</ph>.","pos":[70,186],"source":" If `seconds` is negative, the resulting <xref:System.DateTime> is earlier than the specified <xref:System.DateTime>."}]},{"pos":[193,786],"content":"The day part of the resulting <xref:System.DateTime> is affected if the resulting time is outside the day of the specified <xref:System.DateTime>. The month part of the resulting <xref:System.DateTime> is affected if the resulting day is outside the month of the specified <xref:System.DateTime>. The year part of the resulting <xref:System.DateTime> is affected if the resulting month is outside the year of the specified <xref:System.DateTime>. The era part of the resulting <xref:System.DateTime> is affected if the resulting year is outside the era of the specified <xref:System.DateTime>.","nodes":[{"content":"The day part of the resulting <xref:System.DateTime> is affected if the resulting time is outside the day of the specified <xref:System.DateTime>. The month part of the resulting <xref:System.DateTime> is affected if the resulting day is outside the month of the specified <xref:System.DateTime>. The year part of the resulting <xref:System.DateTime> is affected if the resulting month is outside the year of the specified <xref:System.DateTime>. The era part of the resulting <xref:System.DateTime> is affected if the resulting year is outside the era of the specified <xref:System.DateTime>.","pos":[0,593],"nodes":[{"content":"The day part of the resulting <ph id=\"ph1\">&lt;xref:System.DateTime&gt;</ph> is affected if the resulting time is outside the day of the specified <ph id=\"ph2\">&lt;xref:System.DateTime&gt;</ph>.","pos":[0,146],"source":"The day part of the resulting <xref:System.DateTime> is affected if the resulting time is outside the day of the specified <xref:System.DateTime>."},{"content":"The month part of the resulting <ph id=\"ph1\">&lt;xref:System.DateTime&gt;</ph> is affected if the resulting day is outside the month of the specified <ph id=\"ph2\">&lt;xref:System.DateTime&gt;</ph>.","pos":[147,296],"source":" The month part of the resulting <xref:System.DateTime> is affected if the resulting day is outside the month of the specified <xref:System.DateTime>."},{"content":"The year part of the resulting <ph id=\"ph1\">&lt;xref:System.DateTime&gt;</ph> is affected if the resulting month is outside the year of the specified <ph id=\"ph2\">&lt;xref:System.DateTime&gt;</ph>.","pos":[297,446],"source":" The year part of the resulting <xref:System.DateTime> is affected if the resulting month is outside the year of the specified <xref:System.DateTime>."},{"content":"The era part of the resulting <ph id=\"ph1\">&lt;xref:System.DateTime&gt;</ph> is affected if the resulting year is outside the era of the specified <ph id=\"ph2\">&lt;xref:System.DateTime&gt;</ph>.","pos":[447,593],"source":" The era part of the resulting <xref:System.DateTime> is affected if the resulting year is outside the era of the specified <xref:System.DateTime>."}]}]},{"pos":[793,1150],"content":"The<xref:System.DateTime.Kind%2A> property of the returned <xref:System.DateTime> value always equals <xref:System.DateTimeKind?displayProperty=fullName>. You can preserve the <xref:System.DateTime.Kind%2A> property of the `time` parameter by calling the <xref:System.DateTime.SpecifyKind%2A?displayProperty=fullName> method, as the following example shows.","nodes":[{"content":"The<ph id=\"ph1\">&lt;xref:System.DateTime.Kind%2A&gt;</ph> property of the returned <ph id=\"ph2\">&lt;xref:System.DateTime&gt;</ph> value always equals <ph id=\"ph3\">&lt;xref:System.DateTimeKind?displayProperty=fullName&gt;</ph>.","pos":[0,154],"source":"The<xref:System.DateTime.Kind%2A> property of the returned <xref:System.DateTime> value always equals <xref:System.DateTimeKind?displayProperty=fullName>."},{"content":"You can preserve the <ph id=\"ph1\">&lt;xref:System.DateTime.Kind%2A&gt;</ph> property of the <ph id=\"ph2\">`time`</ph> parameter by calling the <ph id=\"ph3\">&lt;xref:System.DateTime.SpecifyKind%2A?displayProperty=fullName&gt;</ph> method, as the following example shows.","pos":[155,357],"source":" You can preserve the <xref:System.DateTime.Kind%2A> property of the `time` parameter by calling the <xref:System.DateTime.SpecifyKind%2A?displayProperty=fullName> method, as the following example shows."}]},{"pos":[1157,1484],"content":"<bpt id=\"p1\">[!code-csharp</bpt><bpt id=\"p2\">[</bpt>System.Globalization.Calendar.AddMethods#6<ept id=\"p2\">](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.globalization.calendar.addmethods/cs/add1.cs#6)</ept><ept id=\"p1\">]</ept> <bpt id=\"p3\">[!code-vb</bpt><bpt id=\"p4\">[</bpt>System.Globalization.Calendar.AddMethods#6<ept id=\"p4\">](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.globalization.calendar.addmethods/vb/add1.vb#6)</ept><ept id=\"p3\">]</ept>","source":"[!code-csharp[System.Globalization.Calendar.AddMethods#6](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.globalization.calendar.addmethods/cs/add1.cs#6)]\n [!code-vb[System.Globalization.Calendar.AddMethods#6](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.globalization.calendar.addmethods/vb/add1.vb#6)]"}],"pos":[37035,38529],"yaml":true,"extradata":"MT"},{"content":"The <xref href=\"System.DateTime\"></xref> to which to add seconds.","nodes":[{"pos":[0,65],"content":"The <ph id=\"ph1\">&lt;xref href=\"System.DateTime\"&gt;&lt;/xref&gt;</ph> to which to add seconds.","source":"The <xref href=\"System.DateTime\"></xref> to which to add seconds."}],"pos":[39259,39325],"yaml":true},{"content":"The number of seconds to add.","nodes":[{"pos":[0,29],"content":"The number of seconds to add.","nodes":[{"content":"The number of seconds to add.","pos":[0,29]}]}],"pos":[39387,39417],"yaml":true},{"content":"The <xref href=\"System.DateTime\"></xref> that results from adding the specified number of seconds to the specified <xref href=\"System.DateTime\"></xref>.","nodes":[{"pos":[0,152],"content":"The <ph id=\"ph1\">&lt;xref href=\"System.DateTime\"&gt;&lt;/xref&gt;</ph> that results from adding the specified number of seconds to the specified <ph id=\"ph2\">&lt;xref href=\"System.DateTime\"&gt;&lt;/xref&gt;</ph>.","source":"The <xref href=\"System.DateTime\"></xref> that results from adding the specified number of seconds to the specified <xref href=\"System.DateTime\"></xref>."}],"pos":[39476,39629],"yaml":true},{"content":"The resulting <xref href=\"System.DateTime\"></xref> is outside the supported range of this calendar.","nodes":[{"pos":[0,99],"content":"The resulting <ph id=\"ph1\">&lt;xref href=\"System.DateTime\"&gt;&lt;/xref&gt;</ph> is outside the supported range of this calendar.","source":"The resulting <xref href=\"System.DateTime\"></xref> is outside the supported range of this calendar."}],"pos":[39791,39891],"yaml":true},{"content":"<code>seconds</code> is outside the supported range of the <xref href=\"System.DateTime\"></xref> return value.","nodes":[{"pos":[0,109],"content":"<ph id=\"ph1\">&lt;code&gt;seconds&lt;/code&gt;</ph> is outside the supported range of the <ph id=\"ph2\">&lt;xref href=\"System.DateTime\"&gt;&lt;/xref&gt;</ph> return value.","source":"<code>seconds</code> is outside the supported range of the <xref href=\"System.DateTime\"></xref> return value."}],"pos":[40005,40115],"yaml":true},{"content":"Returns a <xref href=\"System.DateTime\"></xref> that is the specified number of weeks away from the specified <xref href=\"System.DateTime\"></xref>.","nodes":[{"pos":[0,146],"content":"Returns a <ph id=\"ph1\">&lt;xref href=\"System.DateTime\"&gt;&lt;/xref&gt;</ph> that is the specified number of weeks away from the specified <ph id=\"ph2\">&lt;xref href=\"System.DateTime\"&gt;&lt;/xref&gt;</ph>.","source":"Returns a <xref href=\"System.DateTime\"></xref> that is the specified number of weeks away from the specified <xref href=\"System.DateTime\"></xref>."}],"pos":[41689,41836],"yaml":true},{"content":"The `weeks` value is added to the specified <xref:System.DateTime>. If `weeks` is negative, the resulting <xref:System.DateTime> is earlier than the specified <xref:System.DateTime>.  \n  \n The month part of the resulting <xref:System.DateTime> is affected if the resulting day is outside the month of the specified <xref:System.DateTime>. The year part of the resulting <xref:System.DateTime> is affected if the resulting month is outside the year of the specified <xref:System.DateTime>. The era part of the resulting <xref:System.DateTime> is affected if the resulting year is outside the era of the specified <xref:System.DateTime>. The time-of-day part of the resulting <xref:System.DateTime> remains the same as the specified <xref:System.DateTime>.  \n  \n In all .NET Framework classes derived from the <xref:System.Globalization.Calendar> class, a week is defined as seven days.  \n  \n The<xref:System.DateTime.Kind%2A> property of the returned <xref:System.DateTime> value always equals <xref:System.DateTimeKind?displayProperty=fullName>. You can preserve the <xref:System.DateTime.Kind%2A> property of the `time` parameter by calling the <xref:System.DateTime.SpecifyKind%2A?displayProperty=fullName> method, as the following example shows.  \n  \n [!code-csharp[System.Globalization.Calendar.AddMethods#7](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.globalization.calendar.addmethods/cs/add1.cs#7)]\n [!code-vb[System.Globalization.Calendar.AddMethods#7](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.globalization.calendar.addmethods/vb/add1.vb#7)]","nodes":[{"pos":[0,182],"content":"The `weeks` value is added to the specified <xref:System.DateTime>. If `weeks` is negative, the resulting <xref:System.DateTime> is earlier than the specified <xref:System.DateTime>.","nodes":[{"content":"The <ph id=\"ph1\">`weeks`</ph> value is added to the specified <ph id=\"ph2\">&lt;xref:System.DateTime&gt;</ph>.","pos":[0,67],"source":"The `weeks` value is added to the specified <xref:System.DateTime>."},{"content":"If <ph id=\"ph1\">`weeks`</ph> is negative, the resulting <ph id=\"ph2\">&lt;xref:System.DateTime&gt;</ph> is earlier than the specified <ph id=\"ph3\">&lt;xref:System.DateTime&gt;</ph>.","pos":[68,182],"source":" If `weeks` is negative, the resulting <xref:System.DateTime> is earlier than the specified <xref:System.DateTime>."}]},{"pos":[189,754],"content":"The month part of the resulting <xref:System.DateTime> is affected if the resulting day is outside the month of the specified <xref:System.DateTime>. The year part of the resulting <xref:System.DateTime> is affected if the resulting month is outside the year of the specified <xref:System.DateTime>. The era part of the resulting <xref:System.DateTime> is affected if the resulting year is outside the era of the specified <xref:System.DateTime>. The time-of-day part of the resulting <xref:System.DateTime> remains the same as the specified <xref:System.DateTime>.","nodes":[{"content":"The month part of the resulting <xref:System.DateTime> is affected if the resulting day is outside the month of the specified <xref:System.DateTime>. The year part of the resulting <xref:System.DateTime> is affected if the resulting month is outside the year of the specified <xref:System.DateTime>. The era part of the resulting <xref:System.DateTime> is affected if the resulting year is outside the era of the specified <xref:System.DateTime>. The time-of-day part of the resulting <xref:System.DateTime> remains the same as the specified <xref:System.DateTime>.","pos":[0,565],"nodes":[{"content":"The month part of the resulting <ph id=\"ph1\">&lt;xref:System.DateTime&gt;</ph> is affected if the resulting day is outside the month of the specified <ph id=\"ph2\">&lt;xref:System.DateTime&gt;</ph>.","pos":[0,149],"source":"The month part of the resulting <xref:System.DateTime> is affected if the resulting day is outside the month of the specified <xref:System.DateTime>."},{"content":"The year part of the resulting <ph id=\"ph1\">&lt;xref:System.DateTime&gt;</ph> is affected if the resulting month is outside the year of the specified <ph id=\"ph2\">&lt;xref:System.DateTime&gt;</ph>.","pos":[150,299],"source":" The year part of the resulting <xref:System.DateTime> is affected if the resulting month is outside the year of the specified <xref:System.DateTime>."},{"content":"The era part of the resulting <ph id=\"ph1\">&lt;xref:System.DateTime&gt;</ph> is affected if the resulting year is outside the era of the specified <ph id=\"ph2\">&lt;xref:System.DateTime&gt;</ph>.","pos":[300,446],"source":" The era part of the resulting <xref:System.DateTime> is affected if the resulting year is outside the era of the specified <xref:System.DateTime>."},{"content":"The time-of-day part of the resulting <ph id=\"ph1\">&lt;xref:System.DateTime&gt;</ph> remains the same as the specified <ph id=\"ph2\">&lt;xref:System.DateTime&gt;</ph>.","pos":[447,565],"source":" The time-of-day part of the resulting <xref:System.DateTime> remains the same as the specified <xref:System.DateTime>."}]}]},{"pos":[761,884],"content":"In all .NET Framework classes derived from the <xref:System.Globalization.Calendar> class, a week is defined as seven days.","nodes":[{"content":"In all .NET Framework classes derived from the <ph id=\"ph1\">&lt;xref:System.Globalization.Calendar&gt;</ph> class, a week is defined as seven days.","pos":[0,123],"source":"In all .NET Framework classes derived from the <xref:System.Globalization.Calendar> class, a week is defined as seven days."}]},{"pos":[891,1248],"content":"The<xref:System.DateTime.Kind%2A> property of the returned <xref:System.DateTime> value always equals <xref:System.DateTimeKind?displayProperty=fullName>. You can preserve the <xref:System.DateTime.Kind%2A> property of the `time` parameter by calling the <xref:System.DateTime.SpecifyKind%2A?displayProperty=fullName> method, as the following example shows.","nodes":[{"content":"The<ph id=\"ph1\">&lt;xref:System.DateTime.Kind%2A&gt;</ph> property of the returned <ph id=\"ph2\">&lt;xref:System.DateTime&gt;</ph> value always equals <ph id=\"ph3\">&lt;xref:System.DateTimeKind?displayProperty=fullName&gt;</ph>.","pos":[0,154],"source":"The<xref:System.DateTime.Kind%2A> property of the returned <xref:System.DateTime> value always equals <xref:System.DateTimeKind?displayProperty=fullName>."},{"content":"You can preserve the <ph id=\"ph1\">&lt;xref:System.DateTime.Kind%2A&gt;</ph> property of the <ph id=\"ph2\">`time`</ph> parameter by calling the <ph id=\"ph3\">&lt;xref:System.DateTime.SpecifyKind%2A?displayProperty=fullName&gt;</ph> method, as the following example shows.","pos":[155,357],"source":" You can preserve the <xref:System.DateTime.Kind%2A> property of the `time` parameter by calling the <xref:System.DateTime.SpecifyKind%2A?displayProperty=fullName> method, as the following example shows."}]},{"pos":[1255,1582],"content":"<bpt id=\"p1\">[!code-csharp</bpt><bpt id=\"p2\">[</bpt>System.Globalization.Calendar.AddMethods#7<ept id=\"p2\">](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.globalization.calendar.addmethods/cs/add1.cs#7)</ept><ept id=\"p1\">]</ept> <bpt id=\"p3\">[!code-vb</bpt><bpt id=\"p4\">[</bpt>System.Globalization.Calendar.AddMethods#7<ept id=\"p4\">](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.globalization.calendar.addmethods/vb/add1.vb#7)</ept><ept id=\"p3\">]</ept>","source":"[!code-csharp[System.Globalization.Calendar.AddMethods#7](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.globalization.calendar.addmethods/cs/add1.cs#7)]\n [!code-vb[System.Globalization.Calendar.AddMethods#7](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.globalization.calendar.addmethods/vb/add1.vb#7)]"}],"pos":[41847,43441],"yaml":true,"extradata":"MT"},{"content":"The <xref href=\"System.DateTime\"></xref> to which to add weeks.","nodes":[{"pos":[0,63],"content":"The <ph id=\"ph1\">&lt;xref href=\"System.DateTime\"&gt;&lt;/xref&gt;</ph> to which to add weeks.","source":"The <xref href=\"System.DateTime\"></xref> to which to add weeks."}],"pos":[44167,44231],"yaml":true},{"content":"The number of weeks to add.","nodes":[{"pos":[0,27],"content":"The number of weeks to add.","nodes":[{"content":"The number of weeks to add.","pos":[0,27]}]}],"pos":[44291,44319],"yaml":true},{"content":"The <xref href=\"System.DateTime\"></xref> that results from adding the specified number of weeks to the specified <xref href=\"System.DateTime\"></xref>.","nodes":[{"pos":[0,150],"content":"The <ph id=\"ph1\">&lt;xref href=\"System.DateTime\"&gt;&lt;/xref&gt;</ph> that results from adding the specified number of weeks to the specified <ph id=\"ph2\">&lt;xref href=\"System.DateTime\"&gt;&lt;/xref&gt;</ph>.","source":"The <xref href=\"System.DateTime\"></xref> that results from adding the specified number of weeks to the specified <xref href=\"System.DateTime\"></xref>."}],"pos":[44378,44529],"yaml":true},{"content":"The resulting <xref href=\"System.DateTime\"></xref> is outside the supported range of this calendar.","nodes":[{"pos":[0,99],"content":"The resulting <ph id=\"ph1\">&lt;xref href=\"System.DateTime\"&gt;&lt;/xref&gt;</ph> is outside the supported range of this calendar.","source":"The resulting <xref href=\"System.DateTime\"></xref> is outside the supported range of this calendar."}],"pos":[44689,44789],"yaml":true},{"content":"<code>weeks</code> is outside the supported range of the <xref href=\"System.DateTime\"></xref> return value.","nodes":[{"pos":[0,107],"content":"<ph id=\"ph1\">&lt;code&gt;weeks&lt;/code&gt;</ph> is outside the supported range of the <ph id=\"ph2\">&lt;xref href=\"System.DateTime\"&gt;&lt;/xref&gt;</ph> return value.","source":"<code>weeks</code> is outside the supported range of the <xref href=\"System.DateTime\"></xref> return value."}],"pos":[44903,45011],"yaml":true},{"content":"When overridden in a derived class, returns a <xref href=\"System.DateTime\"></xref> that is the specified number of years away from the specified <xref href=\"System.DateTime\"></xref>.","nodes":[{"pos":[0,182],"content":"When overridden in a derived class, returns a <ph id=\"ph1\">&lt;xref href=\"System.DateTime\"&gt;&lt;/xref&gt;</ph> that is the specified number of years away from the specified <ph id=\"ph2\">&lt;xref href=\"System.DateTime\"&gt;&lt;/xref&gt;</ph>.","source":"When overridden in a derived class, returns a <xref href=\"System.DateTime\"></xref> that is the specified number of years away from the specified <xref href=\"System.DateTime\"></xref>."}],"pos":[46585,46768],"yaml":true},{"content":"The `years` value is added to the specified <xref:System.DateTime>. If `years` is negative, the resulting <xref:System.DateTime> is earlier than the specified <xref:System.DateTime>.  \n  \n The day part of the resulting <xref:System.DateTime> is affected if the resulting day is not a valid day in the resulting month of the resulting year. It is changed to the last valid day in the resulting month of the resulting year. The month part of the resulting <xref:System.DateTime> is affected if the resulting month is not a valid month in the resulting year. It is changed to the last valid month in the resulting year. The era part of the resulting <xref:System.DateTime> is affected if the resulting year is outside the era of the specified <xref:System.DateTime>. The time-of-day part of the resulting <xref:System.DateTime> remains the same as the specified <xref:System.DateTime>.  \n  \n For example, in the Gregorian calendar, February has 28 days, except during a leap year when it has 29 days. If the specified date is the 29th day of February in a leap year and the value of `years` is 1, the resulting date is the 28th day of February in the following year.  \n  \n If `years` is negative, the resulting <xref:System.DateTime> is earlier than the specified <xref:System.DateTime>.  \n  \n The<xref:System.DateTime.Kind%2A> property of the returned <xref:System.DateTime> value always equals <xref:System.DateTimeKind?displayProperty=fullName>. You can preserve the <xref:System.DateTime.Kind%2A> property of the `time` parameter by calling the <xref:System.DateTime.SpecifyKind%2A?displayProperty=fullName> method, as the following example shows.  \n  \n [!code-csharp[System.Globalization.Calendar.AddMethods#8](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.globalization.calendar.addmethods/cs/add1.cs#8)]\n [!code-vb[System.Globalization.Calendar.AddMethods#8](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.globalization.calendar.addmethods/vb/add1.vb#8)]","nodes":[{"pos":[0,182],"content":"The `years` value is added to the specified <xref:System.DateTime>. If `years` is negative, the resulting <xref:System.DateTime> is earlier than the specified <xref:System.DateTime>.","nodes":[{"content":"The <ph id=\"ph1\">`years`</ph> value is added to the specified <ph id=\"ph2\">&lt;xref:System.DateTime&gt;</ph>.","pos":[0,67],"source":"The `years` value is added to the specified <xref:System.DateTime>."},{"content":"If <ph id=\"ph1\">`years`</ph> is negative, the resulting <ph id=\"ph2\">&lt;xref:System.DateTime&gt;</ph> is earlier than the specified <ph id=\"ph3\">&lt;xref:System.DateTime&gt;</ph>.","pos":[68,182],"source":" If `years` is negative, the resulting <xref:System.DateTime> is earlier than the specified <xref:System.DateTime>."}]},{"pos":[189,882],"content":"The day part of the resulting <xref:System.DateTime> is affected if the resulting day is not a valid day in the resulting month of the resulting year. It is changed to the last valid day in the resulting month of the resulting year. The month part of the resulting <xref:System.DateTime> is affected if the resulting month is not a valid month in the resulting year. It is changed to the last valid month in the resulting year. The era part of the resulting <xref:System.DateTime> is affected if the resulting year is outside the era of the specified <xref:System.DateTime>. The time-of-day part of the resulting <xref:System.DateTime> remains the same as the specified <xref:System.DateTime>.","nodes":[{"content":"The day part of the resulting <xref:System.DateTime> is affected if the resulting day is not a valid day in the resulting month of the resulting year. It is changed to the last valid day in the resulting month of the resulting year. The month part of the resulting <xref:System.DateTime> is affected if the resulting month is not a valid month in the resulting year. It is changed to the last valid month in the resulting year. The era part of the resulting <xref:System.DateTime> is affected if the resulting year is outside the era of the specified <xref:System.DateTime>. The time-of-day part of the resulting <xref:System.DateTime> remains the same as the specified <xref:System.DateTime>.","pos":[0,693],"nodes":[{"content":"The day part of the resulting <ph id=\"ph1\">&lt;xref:System.DateTime&gt;</ph> is affected if the resulting day is not a valid day in the resulting month of the resulting year.","pos":[0,150],"source":"The day part of the resulting <xref:System.DateTime> is affected if the resulting day is not a valid day in the resulting month of the resulting year."},{"content":"It is changed to the last valid day in the resulting month of the resulting year.","pos":[151,232]},{"content":"The month part of the resulting <ph id=\"ph1\">&lt;xref:System.DateTime&gt;</ph> is affected if the resulting month is not a valid month in the resulting year.","pos":[233,366],"source":" The month part of the resulting <xref:System.DateTime> is affected if the resulting month is not a valid month in the resulting year."},{"content":"It is changed to the last valid month in the resulting year.","pos":[367,427]},{"content":"The era part of the resulting <ph id=\"ph1\">&lt;xref:System.DateTime&gt;</ph> is affected if the resulting year is outside the era of the specified <ph id=\"ph2\">&lt;xref:System.DateTime&gt;</ph>.","pos":[428,574],"source":" The era part of the resulting <xref:System.DateTime> is affected if the resulting year is outside the era of the specified <xref:System.DateTime>."},{"content":"The time-of-day part of the resulting <ph id=\"ph1\">&lt;xref:System.DateTime&gt;</ph> remains the same as the specified <ph id=\"ph2\">&lt;xref:System.DateTime&gt;</ph>.","pos":[575,693],"source":" The time-of-day part of the resulting <xref:System.DateTime> remains the same as the specified <xref:System.DateTime>."}]}]},{"pos":[889,1163],"content":"For example, in the Gregorian calendar, February has 28 days, except during a leap year when it has 29 days. If the specified date is the 29th day of February in a leap year and the value of `years` is 1, the resulting date is the 28th day of February in the following year.","nodes":[{"content":"For example, in the Gregorian calendar, February has 28 days, except during a leap year when it has 29 days.","pos":[0,108]},{"content":"If the specified date is the 29th day of February in a leap year and the value of <ph id=\"ph1\">`years`</ph> is 1, the resulting date is the 28th day of February in the following year.","pos":[109,274],"source":" If the specified date is the 29th day of February in a leap year and the value of `years` is 1, the resulting date is the 28th day of February in the following year."}]},{"pos":[1170,1284],"content":"If <ph id=\"ph1\">`years`</ph> is negative, the resulting <ph id=\"ph2\">&lt;xref:System.DateTime&gt;</ph> is earlier than the specified <ph id=\"ph3\">&lt;xref:System.DateTime&gt;</ph>.","source":"If `years` is negative, the resulting <xref:System.DateTime> is earlier than the specified <xref:System.DateTime>."},{"pos":[1291,1648],"content":"The<xref:System.DateTime.Kind%2A> property of the returned <xref:System.DateTime> value always equals <xref:System.DateTimeKind?displayProperty=fullName>. You can preserve the <xref:System.DateTime.Kind%2A> property of the `time` parameter by calling the <xref:System.DateTime.SpecifyKind%2A?displayProperty=fullName> method, as the following example shows.","nodes":[{"content":"The<ph id=\"ph1\">&lt;xref:System.DateTime.Kind%2A&gt;</ph> property of the returned <ph id=\"ph2\">&lt;xref:System.DateTime&gt;</ph> value always equals <ph id=\"ph3\">&lt;xref:System.DateTimeKind?displayProperty=fullName&gt;</ph>.","pos":[0,154],"source":"The<xref:System.DateTime.Kind%2A> property of the returned <xref:System.DateTime> value always equals <xref:System.DateTimeKind?displayProperty=fullName>."},{"content":"You can preserve the <ph id=\"ph1\">&lt;xref:System.DateTime.Kind%2A&gt;</ph> property of the <ph id=\"ph2\">`time`</ph> parameter by calling the <ph id=\"ph3\">&lt;xref:System.DateTime.SpecifyKind%2A?displayProperty=fullName&gt;</ph> method, as the following example shows.","pos":[155,357],"source":" You can preserve the <xref:System.DateTime.Kind%2A> property of the `time` parameter by calling the <xref:System.DateTime.SpecifyKind%2A?displayProperty=fullName> method, as the following example shows."}]},{"pos":[1655,1982],"content":"<bpt id=\"p1\">[!code-csharp</bpt><bpt id=\"p2\">[</bpt>System.Globalization.Calendar.AddMethods#8<ept id=\"p2\">](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.globalization.calendar.addmethods/cs/add1.cs#8)</ept><ept id=\"p1\">]</ept> <bpt id=\"p3\">[!code-vb</bpt><bpt id=\"p4\">[</bpt>System.Globalization.Calendar.AddMethods#8<ept id=\"p4\">](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.globalization.calendar.addmethods/vb/add1.vb#8)</ept><ept id=\"p3\">]</ept>","source":"[!code-csharp[System.Globalization.Calendar.AddMethods#8](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.globalization.calendar.addmethods/cs/add1.cs#8)]\n [!code-vb[System.Globalization.Calendar.AddMethods#8](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.globalization.calendar.addmethods/vb/add1.vb#8)]"}],"pos":[46779,48775],"yaml":true,"extradata":"MT"},{"content":"The <xref href=\"System.DateTime\"></xref> to which to add years.","nodes":[{"pos":[0,63],"content":"The <ph id=\"ph1\">&lt;xref href=\"System.DateTime\"&gt;&lt;/xref&gt;</ph> to which to add years.","source":"The <xref href=\"System.DateTime\"></xref> to which to add years."}],"pos":[49502,49566],"yaml":true},{"content":"The number of years to add.","nodes":[{"pos":[0,27],"content":"The number of years to add.","nodes":[{"content":"The number of years to add.","pos":[0,27]}]}],"pos":[49626,49654],"yaml":true},{"content":"The <xref href=\"System.DateTime\"></xref> that results from adding the specified number of years to the specified <xref href=\"System.DateTime\"></xref>.","nodes":[{"pos":[0,150],"content":"The <ph id=\"ph1\">&lt;xref href=\"System.DateTime\"&gt;&lt;/xref&gt;</ph> that results from adding the specified number of years to the specified <ph id=\"ph2\">&lt;xref href=\"System.DateTime\"&gt;&lt;/xref&gt;</ph>.","source":"The <xref href=\"System.DateTime\"></xref> that results from adding the specified number of years to the specified <xref href=\"System.DateTime\"></xref>."}],"pos":[49713,49864],"yaml":true},{"content":"The resulting <xref href=\"System.DateTime\"></xref> is outside the supported range of this calendar.","nodes":[{"pos":[0,99],"content":"The resulting <ph id=\"ph1\">&lt;xref href=\"System.DateTime\"&gt;&lt;/xref&gt;</ph> is outside the supported range of this calendar.","source":"The resulting <xref href=\"System.DateTime\"></xref> is outside the supported range of this calendar."}],"pos":[50024,50124],"yaml":true},{"content":"<code>years</code> is outside the supported range of the <xref href=\"System.DateTime\"></xref> return value.","nodes":[{"pos":[0,107],"content":"<ph id=\"ph1\">&lt;code&gt;years&lt;/code&gt;</ph> is outside the supported range of the <ph id=\"ph2\">&lt;xref href=\"System.DateTime\"&gt;&lt;/xref&gt;</ph> return value.","source":"<code>years</code> is outside the supported range of the <xref href=\"System.DateTime\"></xref> return value."}],"pos":[50238,50346],"yaml":true},{"content":"Gets a value indicating whether the current calendar is solar-based, lunar-based, or a combination of both.","nodes":[{"pos":[0,107],"content":"Gets a value indicating whether the current calendar is solar-based, lunar-based, or a combination of both.","nodes":[{"content":"Gets a value indicating whether the current calendar is solar-based, lunar-based, or a combination of both.","pos":[0,107]}]}],"pos":[51786,51894],"yaml":true},{"content":"One of the <xref href=\"System.Globalization.CalendarAlgorithmType\"></xref> values.","nodes":[{"pos":[0,82],"content":"One of the <ph id=\"ph1\">&lt;xref href=\"System.Globalization.CalendarAlgorithmType\"&gt;&lt;/xref&gt;</ph> values.","source":"One of the <xref href=\"System.Globalization.CalendarAlgorithmType\"></xref> values."}],"pos":[52773,52856],"yaml":true},{"content":"Creates a new object that is a copy of the current <xref href=\"System.Globalization.Calendar\"></xref> object.","nodes":[{"pos":[0,109],"content":"Creates a new object that is a copy of the current <ph id=\"ph1\">&lt;xref href=\"System.Globalization.Calendar\"&gt;&lt;/xref&gt;</ph> object.","source":"Creates a new object that is a copy of the current <xref href=\"System.Globalization.Calendar\"></xref> object."}],"pos":[54097,54207],"yaml":true},{"content":"The new memberwise clone is not read-only.","nodes":[{"pos":[0,42],"content":"The new memberwise clone is not read-only.","nodes":[{"content":"The new memberwise clone is not read-only.","pos":[0,42]}]}],"pos":[54218,54261],"yaml":true,"extradata":"MT"},{"content":"A new instance of <xref href=\"System.Object\"></xref> that is the memberwise clone of the current <xref href=\"System.Globalization.Calendar\"></xref> object.","nodes":[{"pos":[0,155],"content":"A new instance of <ph id=\"ph1\">&lt;xref href=\"System.Object\"&gt;&lt;/xref&gt;</ph> that is the memberwise clone of the current <ph id=\"ph2\">&lt;xref href=\"System.Globalization.Calendar\"&gt;&lt;/xref&gt;</ph> object.","source":"A new instance of <xref href=\"System.Object\"></xref> that is the memberwise clone of the current <xref href=\"System.Globalization.Calendar\"></xref> object."}],"pos":[54459,54615],"yaml":true},{"content":"Represents the current era of the current calendar.","nodes":[{"pos":[0,51],"content":"Represents the current era of the current calendar.","nodes":[{"content":"Represents the current era of the current calendar.","pos":[0,51]}]}],"pos":[55896,55948],"yaml":true},{"content":"The <xref:System.Globalization.Calendar.CurrentEra> field represents the index of the current era in the <xref:System.Globalization.Calendar.Eras%2A> array. Because eras are arranged in reverse chronological order (from the current era to earlier eras), this field is a constant that has a value of 0.","nodes":[{"pos":[0,301],"content":"The <xref:System.Globalization.Calendar.CurrentEra> field represents the index of the current era in the <xref:System.Globalization.Calendar.Eras%2A> array. Because eras are arranged in reverse chronological order (from the current era to earlier eras), this field is a constant that has a value of 0.","nodes":[{"content":"The <xref:System.Globalization.Calendar.CurrentEra> field represents the index of the current era in the <xref:System.Globalization.Calendar.Eras%2A> array. Because eras are arranged in reverse chronological order (from the current era to earlier eras), this field is a constant that has a value of 0.","pos":[0,301],"nodes":[{"content":"The <ph id=\"ph1\">&lt;xref:System.Globalization.Calendar.CurrentEra&gt;</ph> field represents the index of the current era in the <ph id=\"ph2\">&lt;xref:System.Globalization.Calendar.Eras%2A&gt;</ph> array.","pos":[0,156],"source":"The <xref:System.Globalization.Calendar.CurrentEra> field represents the index of the current era in the <xref:System.Globalization.Calendar.Eras%2A> array."},{"content":"Because eras are arranged in reverse chronological order (from the current era to earlier eras), this field is a constant that has a value of 0.","pos":[157,301]}]}]}],"pos":[55959,56261],"yaml":true,"extradata":"MT"},{"content":"Gets the number of days in the year that precedes the year that is specified by the <xref href=\"System.Globalization.Calendar.MinSupportedDateTime\"></xref> property.","nodes":[{"pos":[0,165],"content":"Gets the number of days in the year that precedes the year that is specified by the <ph id=\"ph1\">&lt;xref href=\"System.Globalization.Calendar.MinSupportedDateTime\"&gt;&lt;/xref&gt;</ph> property.","source":"Gets the number of days in the year that precedes the year that is specified by the <xref href=\"System.Globalization.Calendar.MinSupportedDateTime\"></xref> property."}],"pos":[57947,58113],"yaml":true},{"content":"This property returns a constant value of 365. Note that the property value can be overridden by classes derived from the <xref:System.Globalization.Calendar> class.","nodes":[{"pos":[0,165],"content":"This property returns a constant value of 365. Note that the property value can be overridden by classes derived from the <xref:System.Globalization.Calendar> class.","nodes":[{"content":"This property returns a constant value of 365. Note that the property value can be overridden by classes derived from the <xref:System.Globalization.Calendar> class.","pos":[0,165],"nodes":[{"content":"This property returns a constant value of 365.","pos":[0,46]},{"content":"Note that the property value can be overridden by classes derived from the <ph id=\"ph1\">&lt;xref:System.Globalization.Calendar&gt;</ph> class.","pos":[47,165],"source":" Note that the property value can be overridden by classes derived from the <xref:System.Globalization.Calendar> class."}]}]}],"pos":[58124,58290],"yaml":true,"extradata":"MT"},{"content":"The number of days in the year that precedes the year specified by <xref href=\"System.Globalization.Calendar.MinSupportedDateTime\"></xref>.","nodes":[{"pos":[0,139],"content":"The number of days in the year that precedes the year specified by <ph id=\"ph1\">&lt;xref href=\"System.Globalization.Calendar.MinSupportedDateTime\"&gt;&lt;/xref&gt;</ph>.","source":"The number of days in the year that precedes the year specified by <xref href=\"System.Globalization.Calendar.MinSupportedDateTime\"></xref>."}],"pos":[58433,58573],"yaml":true},{"content":"When overridden in a derived class, gets the list of eras in the current calendar.","nodes":[{"pos":[0,82],"content":"When overridden in a derived class, gets the list of eras in the current calendar.","nodes":[{"content":"When overridden in a derived class, gets the list of eras in the current calendar.","pos":[0,82]}]}],"pos":[59773,59856],"yaml":true},{"content":"The eras are in reverse chronological order, with the current era as the first element of the array, and the oldest era as the last element of the array. For example, the value of the current era in <xref:System.Globalization.JapaneseCalendar> is 4, which is the first element of the array.","nodes":[{"pos":[0,290],"content":"The eras are in reverse chronological order, with the current era as the first element of the array, and the oldest era as the last element of the array. For example, the value of the current era in <xref:System.Globalization.JapaneseCalendar> is 4, which is the first element of the array.","nodes":[{"content":"The eras are in reverse chronological order, with the current era as the first element of the array, and the oldest era as the last element of the array. For example, the value of the current era in <xref:System.Globalization.JapaneseCalendar> is 4, which is the first element of the array.","pos":[0,290],"nodes":[{"content":"The eras are in reverse chronological order, with the current era as the first element of the array, and the oldest era as the last element of the array.","pos":[0,153]},{"content":"For example, the value of the current era in <ph id=\"ph1\">&lt;xref:System.Globalization.JapaneseCalendar&gt;</ph> is 4, which is the first element of the array.","pos":[154,290],"source":" For example, the value of the current era in <xref:System.Globalization.JapaneseCalendar> is 4, which is the first element of the array."}]}]}],"pos":[59867,60158],"yaml":true,"extradata":"MT"},{"content":"An array of integers that represents the eras in the current calendar.","nodes":[{"pos":[0,70],"content":"An array of integers that represents the eras in the current calendar.","nodes":[{"content":"An array of integers that represents the eras in the current calendar.","pos":[0,70]}]}],"pos":[61010,61081],"yaml":true},{"content":"When overridden in a derived class, returns the day of the month in the specified <xref href=\"System.DateTime\"></xref>.","nodes":[{"pos":[0,119],"content":"When overridden in a derived class, returns the day of the month in the specified <ph id=\"ph1\">&lt;xref href=\"System.DateTime\"&gt;&lt;/xref&gt;</ph>.","source":"When overridden in a derived class, returns the day of the month in the specified <xref href=\"System.DateTime\"></xref>."}],"pos":[62690,62810],"yaml":true},{"content":"The <xref href=\"System.DateTime\"></xref> to read.","nodes":[{"pos":[0,49],"content":"The <ph id=\"ph1\">&lt;xref href=\"System.DateTime\"&gt;&lt;/xref&gt;</ph> to read.","source":"The <xref href=\"System.DateTime\"></xref> to read."}],"pos":[63540,63590],"yaml":true},{"content":"A positive integer that represents the day of the month in the <code>time</code> parameter.","nodes":[{"pos":[0,91],"content":"A positive integer that represents the day of the month in the <bpt id=\"p1\">&lt;code&gt;</bpt><ph id=\"ph1\">time</ph><ept id=\"p1\">&lt;/code&gt;</ept> parameter.","source":"A positive integer that represents the day of the month in the <code>time</code> parameter."}],"pos":[63646,63738],"yaml":true},{"content":"When overridden in a derived class, returns the day of the week in the specified <xref href=\"System.DateTime\"></xref>.","nodes":[{"pos":[0,118],"content":"When overridden in a derived class, returns the day of the week in the specified <ph id=\"ph1\">&lt;xref href=\"System.DateTime\"&gt;&lt;/xref&gt;</ph>.","source":"When overridden in a derived class, returns the day of the week in the specified <xref href=\"System.DateTime\"></xref>."}],"pos":[65350,65469],"yaml":true},{"content":"The <xref:System.DayOfWeek> values are Sunday, Monday, Tuesday, Wednesday, Thursday, Friday, and Saturday.","nodes":[{"pos":[0,106],"content":"The <xref:System.DayOfWeek> values are Sunday, Monday, Tuesday, Wednesday, Thursday, Friday, and Saturday.","nodes":[{"content":"The <ph id=\"ph1\">&lt;xref:System.DayOfWeek&gt;</ph> values are Sunday, Monday, Tuesday, Wednesday, Thursday, Friday, and Saturday.","pos":[0,106],"source":"The <xref:System.DayOfWeek> values are Sunday, Monday, Tuesday, Wednesday, Thursday, Friday, and Saturday."}]}],"pos":[65480,65587],"yaml":true,"extradata":"MT"},{"content":"The <xref href=\"System.DateTime\"></xref> to read.","nodes":[{"pos":[0,49],"content":"The <ph id=\"ph1\">&lt;xref href=\"System.DateTime\"&gt;&lt;/xref&gt;</ph> to read.","source":"The <xref href=\"System.DateTime\"></xref> to read."}],"pos":[66308,66358],"yaml":true},{"content":"A <xref href=\"System.DayOfWeek\"></xref> value that represents the day of the week in the <code>time</code> parameter.","nodes":[{"pos":[0,117],"content":"A <ph id=\"ph1\">&lt;xref href=\"System.DayOfWeek\"&gt;&lt;/xref&gt;</ph> value that represents the day of the week in the <bpt id=\"p1\">&lt;code&gt;</bpt><ph id=\"ph2\">time</ph><ept id=\"p1\">&lt;/code&gt;</ept> parameter.","source":"A <xref href=\"System.DayOfWeek\"></xref> value that represents the day of the week in the <code>time</code> parameter."}],"pos":[66418,66536],"yaml":true},{"content":"When overridden in a derived class, returns the day of the year in the specified <xref href=\"System.DateTime\"></xref>.","nodes":[{"pos":[0,118],"content":"When overridden in a derived class, returns the day of the year in the specified <ph id=\"ph1\">&lt;xref href=\"System.DateTime\"&gt;&lt;/xref&gt;</ph>.","source":"When overridden in a derived class, returns the day of the year in the specified <xref href=\"System.DateTime\"></xref>."}],"pos":[68147,68266],"yaml":true},{"content":"The day of the year is defined as the number of days from the first day of the year. For example, in <xref:System.Globalization.GregorianCalendar>, <xref:System.Globalization.Calendar.GetDayOfYear%2A> for January 1 returns 1, and <xref:System.Globalization.Calendar.GetDayOfYear%2A> for December 31 returns 365 in a common year or 366 in a leap year.","nodes":[{"pos":[0,350],"content":"The day of the year is defined as the number of days from the first day of the year. For example, in <xref:System.Globalization.GregorianCalendar>, <xref:System.Globalization.Calendar.GetDayOfYear%2A> for January 1 returns 1, and <xref:System.Globalization.Calendar.GetDayOfYear%2A> for December 31 returns 365 in a common year or 366 in a leap year.","nodes":[{"content":"The day of the year is defined as the number of days from the first day of the year. For example, in <xref:System.Globalization.GregorianCalendar>, <xref:System.Globalization.Calendar.GetDayOfYear%2A> for January 1 returns 1, and <xref:System.Globalization.Calendar.GetDayOfYear%2A> for December 31 returns 365 in a common year or 366 in a leap year.","pos":[0,350],"nodes":[{"content":"The day of the year is defined as the number of days from the first day of the year.","pos":[0,84]},{"content":"For example, in <ph id=\"ph1\">&lt;xref:System.Globalization.GregorianCalendar&gt;</ph>, <ph id=\"ph2\">&lt;xref:System.Globalization.Calendar.GetDayOfYear%2A&gt;</ph> for January 1 returns 1, and <ph id=\"ph3\">&lt;xref:System.Globalization.Calendar.GetDayOfYear%2A&gt;</ph> for December 31 returns 365 in a common year or 366 in a leap year.","pos":[85,350],"source":" For example, in <xref:System.Globalization.GregorianCalendar>, <xref:System.Globalization.Calendar.GetDayOfYear%2A> for January 1 returns 1, and <xref:System.Globalization.Calendar.GetDayOfYear%2A> for December 31 returns 365 in a common year or 366 in a leap year."}]}]}],"pos":[68277,68628],"yaml":true,"extradata":"MT"},{"content":"The <xref href=\"System.DateTime\"></xref> to read.","nodes":[{"pos":[0,49],"content":"The <ph id=\"ph1\">&lt;xref href=\"System.DateTime\"&gt;&lt;/xref&gt;</ph> to read.","source":"The <xref href=\"System.DateTime\"></xref> to read."}],"pos":[69343,69393],"yaml":true},{"content":"A positive integer that represents the day of the year in the <code>time</code> parameter.","nodes":[{"pos":[0,90],"content":"A positive integer that represents the day of the year in the <bpt id=\"p1\">&lt;code&gt;</bpt><ph id=\"ph1\">time</ph><ept id=\"p1\">&lt;/code&gt;</ept> parameter.","source":"A positive integer that represents the day of the year in the <code>time</code> parameter."}],"pos":[69449,69540],"yaml":true},{"content":"Returns the number of days in the specified month and year of the current era.","nodes":[{"pos":[0,78],"content":"Returns the number of days in the specified month and year of the current era.","nodes":[{"content":"Returns the number of days in the specified month and year of the current era.","pos":[0,78]}]}],"pos":[71205,71284],"yaml":true},{"content":"For example, in <xref:System.Globalization.GregorianCalendar>, <xref:System.Globalization.Calendar.GetDaysInMonth%2A> for February returns 28 in a common year or 29 in a leap year.","nodes":[{"pos":[0,180],"content":"For example, in <xref:System.Globalization.GregorianCalendar>, <xref:System.Globalization.Calendar.GetDaysInMonth%2A> for February returns 28 in a common year or 29 in a leap year.","nodes":[{"content":"For example, in <ph id=\"ph1\">&lt;xref:System.Globalization.GregorianCalendar&gt;</ph>, <ph id=\"ph2\">&lt;xref:System.Globalization.Calendar.GetDaysInMonth%2A&gt;</ph> for February returns 28 in a common year or 29 in a leap year.","pos":[0,180],"source":"For example, in <xref:System.Globalization.GregorianCalendar>, <xref:System.Globalization.Calendar.GetDaysInMonth%2A> for February returns 28 in a common year or 29 in a leap year."}]}],"pos":[71295,71476],"yaml":true,"extradata":"MT"},{"content":"An integer that represents the year.","nodes":[{"pos":[0,36],"content":"An integer that represents the year.","nodes":[{"content":"An integer that represents the year.","pos":[0,36]}]}],"pos":[72277,72314],"yaml":true},{"content":"A positive integer that represents the month.","nodes":[{"pos":[0,45],"content":"A positive integer that represents the month.","nodes":[{"content":"A positive integer that represents the month.","pos":[0,45]}]}],"pos":[72374,72420],"yaml":true},{"content":"The number of days in the specified month in the specified year in the current era.","nodes":[{"pos":[0,83],"content":"The number of days in the specified month in the specified year in the current era.","nodes":[{"content":"The number of days in the specified month in the specified year in the current era.","pos":[0,83]}]}],"pos":[72476,72560],"yaml":true},{"content":"<code>year</code> is outside the range supported by the calendar.  \n  \n -or-  \n  \n <code>month</code> is outside the range supported by the calendar.","nodes":[{"pos":[0,65],"content":"<ph id=\"ph1\">&lt;code&gt;year&lt;/code&gt;</ph> is outside the range supported by the calendar.","source":"<code>year</code> is outside the range supported by the calendar."},{"pos":[72,76],"content":"-or-","nodes":[{"content":"-or-","pos":[0,4]}]},{"pos":[83,149],"content":"<ph id=\"ph1\">&lt;code&gt;month&lt;/code&gt;</ph> is outside the range supported by the calendar.","source":"<code>month</code> is outside the range supported by the calendar."}],"pos":[72746,72902],"yaml":true},{"content":"When overridden in a derived class, returns the number of days in the specified month, year, and era.","nodes":[{"pos":[0,101],"content":"When overridden in a derived class, returns the number of days in the specified month, year, and era.","nodes":[{"content":"When overridden in a derived class, returns the number of days in the specified month, year, and era.","pos":[0,101]}]}],"pos":[74554,74656],"yaml":true},{"content":"For example, in <xref:System.Globalization.GregorianCalendar>, <xref:System.Globalization.Calendar.GetDaysInMonth%2A> for February returns 28 in a common year or 29 in a leap year.","nodes":[{"pos":[0,180],"content":"For example, in <xref:System.Globalization.GregorianCalendar>, <xref:System.Globalization.Calendar.GetDaysInMonth%2A> for February returns 28 in a common year or 29 in a leap year.","nodes":[{"content":"For example, in <ph id=\"ph1\">&lt;xref:System.Globalization.GregorianCalendar&gt;</ph>, <ph id=\"ph2\">&lt;xref:System.Globalization.Calendar.GetDaysInMonth%2A&gt;</ph> for February returns 28 in a common year or 29 in a leap year.","pos":[0,180],"source":"For example, in <xref:System.Globalization.GregorianCalendar>, <xref:System.Globalization.Calendar.GetDaysInMonth%2A> for February returns 28 in a common year or 29 in a leap year."}]}],"pos":[74667,74848],"yaml":true,"extradata":"MT"},{"content":"An integer that represents the year.","nodes":[{"pos":[0,36],"content":"An integer that represents the year.","nodes":[{"content":"An integer that represents the year.","pos":[0,36]}]}],"pos":[75013,75050],"yaml":true},{"content":"A positive integer that represents the month.","nodes":[{"pos":[0,45],"content":"A positive integer that represents the month.","nodes":[{"content":"A positive integer that represents the month.","pos":[0,45]}]}],"pos":[75110,75156],"yaml":true},{"content":"An integer that represents the era.","nodes":[{"pos":[0,35],"content":"An integer that represents the era.","nodes":[{"content":"An integer that represents the era.","pos":[0,35]}]}],"pos":[75214,75250],"yaml":true},{"content":"The number of days in the specified month in the specified year in the specified era.","nodes":[{"pos":[0,85],"content":"The number of days in the specified month in the specified year in the specified era.","nodes":[{"content":"The number of days in the specified month in the specified year in the specified era.","pos":[0,85]}]}],"pos":[75306,75392],"yaml":true},{"content":"<code>year</code> is outside the range supported by the calendar.  \n  \n -or-  \n  \n <code>month</code> is outside the range supported by the calendar.  \n  \n -or-  \n  \n <code>era</code> is outside the range supported by the calendar.","nodes":[{"pos":[0,65],"content":"<ph id=\"ph1\">&lt;code&gt;year&lt;/code&gt;</ph> is outside the range supported by the calendar.","source":"<code>year</code> is outside the range supported by the calendar."},{"pos":[72,76],"content":"-or-","nodes":[{"content":"-or-","pos":[0,4]}]},{"pos":[83,149],"content":"<ph id=\"ph1\">&lt;code&gt;month&lt;/code&gt;</ph> is outside the range supported by the calendar.","source":"<code>month</code> is outside the range supported by the calendar."},{"pos":[156,160],"content":"-or-","nodes":[{"content":"-or-","pos":[0,4]}]},{"pos":[167,231],"content":"<ph id=\"ph1\">&lt;code&gt;era&lt;/code&gt;</ph> is outside the range supported by the calendar.","source":"<code>era</code> is outside the range supported by the calendar."}],"pos":[75578,75820],"yaml":true},{"content":"Returns the number of days in the specified year of the current era.","nodes":[{"pos":[0,68],"content":"Returns the number of days in the specified year of the current era.","nodes":[{"content":"Returns the number of days in the specified year of the current era.","pos":[0,68]}]}],"pos":[77346,77415],"yaml":true},{"content":"For example, in <xref:System.Globalization.GregorianCalendar>, <xref:System.Globalization.Calendar.GetDaysInYear%2A> returns 365 for a common year or 366 for a leap year.","nodes":[{"pos":[0,170],"content":"For example, in <xref:System.Globalization.GregorianCalendar>, <xref:System.Globalization.Calendar.GetDaysInYear%2A> returns 365 for a common year or 366 for a leap year.","nodes":[{"content":"For example, in <ph id=\"ph1\">&lt;xref:System.Globalization.GregorianCalendar&gt;</ph>, <ph id=\"ph2\">&lt;xref:System.Globalization.Calendar.GetDaysInYear%2A&gt;</ph> returns 365 for a common year or 366 for a leap year.","pos":[0,170],"source":"For example, in <xref:System.Globalization.GregorianCalendar>, <xref:System.Globalization.Calendar.GetDaysInYear%2A> returns 365 for a common year or 366 for a leap year."}]}],"pos":[77426,77597],"yaml":true,"extradata":"MT"},{"content":"An integer that represents the year.","nodes":[{"pos":[0,36],"content":"An integer that represents the year.","nodes":[{"content":"An integer that represents the year.","pos":[0,36]}]}],"pos":[78386,78423],"yaml":true},{"content":"The number of days in the specified year in the current era.","nodes":[{"pos":[0,60],"content":"The number of days in the specified year in the current era.","nodes":[{"content":"The number of days in the specified year in the current era.","pos":[0,60]}]}],"pos":[78479,78540],"yaml":true},{"content":"<code>year</code> is outside the range supported by the calendar.","nodes":[{"pos":[0,65],"content":"<ph id=\"ph1\">&lt;code&gt;year&lt;/code&gt;</ph> is outside the range supported by the calendar.","source":"<code>year</code> is outside the range supported by the calendar."}],"pos":[78725,78791],"yaml":true},{"content":"When overridden in a derived class, returns the number of days in the specified year and era.","nodes":[{"pos":[0,93],"content":"When overridden in a derived class, returns the number of days in the specified year and era.","nodes":[{"content":"When overridden in a derived class, returns the number of days in the specified year and era.","pos":[0,93]}]}],"pos":[80377,80471],"yaml":true},{"content":"For example, in <xref:System.Globalization.GregorianCalendar>, <xref:System.Globalization.Calendar.GetDaysInYear%2A> returns 365 for a common year or 366 for a leap year.","nodes":[{"pos":[0,170],"content":"For example, in <xref:System.Globalization.GregorianCalendar>, <xref:System.Globalization.Calendar.GetDaysInYear%2A> returns 365 for a common year or 366 for a leap year.","nodes":[{"content":"For example, in <ph id=\"ph1\">&lt;xref:System.Globalization.GregorianCalendar&gt;</ph>, <ph id=\"ph2\">&lt;xref:System.Globalization.Calendar.GetDaysInYear%2A&gt;</ph> returns 365 for a common year or 366 for a leap year.","pos":[0,170],"source":"For example, in <xref:System.Globalization.GregorianCalendar>, <xref:System.Globalization.Calendar.GetDaysInYear%2A> returns 365 for a common year or 366 for a leap year."}]}],"pos":[80482,80653],"yaml":true,"extradata":"MT"},{"content":"An integer that represents the year.","nodes":[{"pos":[0,36],"content":"An integer that represents the year.","nodes":[{"content":"An integer that represents the year.","pos":[0,36]}]}],"pos":[80806,80843],"yaml":true},{"content":"An integer that represents the era.","nodes":[{"pos":[0,35],"content":"An integer that represents the era.","nodes":[{"content":"An integer that represents the era.","pos":[0,35]}]}],"pos":[80901,80937],"yaml":true},{"content":"The number of days in the specified year in the specified era.","nodes":[{"pos":[0,62],"content":"The number of days in the specified year in the specified era.","nodes":[{"content":"The number of days in the specified year in the specified era.","pos":[0,62]}]}],"pos":[80993,81056],"yaml":true},{"content":"<code>year</code> is outside the range supported by the calendar.  \n  \n -or-  \n  \n <code>era</code> is outside the range supported by the calendar.","nodes":[{"pos":[0,65],"content":"<ph id=\"ph1\">&lt;code&gt;year&lt;/code&gt;</ph> is outside the range supported by the calendar.","source":"<code>year</code> is outside the range supported by the calendar."},{"pos":[72,76],"content":"-or-","nodes":[{"content":"-or-","pos":[0,4]}]},{"pos":[83,147],"content":"<ph id=\"ph1\">&lt;code&gt;era&lt;/code&gt;</ph> is outside the range supported by the calendar.","source":"<code>era</code> is outside the range supported by the calendar."}],"pos":[81241,81395],"yaml":true},{"content":"When overridden in a derived class, returns the era in the specified <xref href=\"System.DateTime\"></xref>.","nodes":[{"pos":[0,106],"content":"When overridden in a derived class, returns the era in the specified <ph id=\"ph1\">&lt;xref href=\"System.DateTime\"&gt;&lt;/xref&gt;</ph>.","source":"When overridden in a derived class, returns the era in the specified <xref href=\"System.DateTime\"></xref>."}],"pos":[82897,83004],"yaml":true},{"content":"The <xref href=\"System.DateTime\"></xref> to read.","nodes":[{"pos":[0,49],"content":"The <ph id=\"ph1\">&lt;xref href=\"System.DateTime\"&gt;&lt;/xref&gt;</ph> to read.","source":"The <xref href=\"System.DateTime\"></xref> to read."}],"pos":[83727,83777],"yaml":true},{"content":"An integer that represents the era in <code>time</code>.","nodes":[{"pos":[0,56],"content":"An integer that represents the era in <bpt id=\"p1\">&lt;code&gt;</bpt><ph id=\"ph1\">time</ph><ept id=\"p1\">&lt;/code&gt;</ept>.","source":"An integer that represents the era in <code>time</code>."}],"pos":[83833,83890],"yaml":true},{"content":"Returns the hours value in the specified <xref href=\"System.DateTime\"></xref>.","nodes":[{"pos":[0,78],"content":"Returns the hours value in the specified <ph id=\"ph1\">&lt;xref href=\"System.DateTime\"&gt;&lt;/xref&gt;</ph>.","source":"Returns the hours value in the specified <xref href=\"System.DateTime\"></xref>."}],"pos":[85465,85544],"yaml":true},{"content":"The <xref href=\"System.DateTime\"></xref> to read.","nodes":[{"pos":[0,49],"content":"The <ph id=\"ph1\">&lt;xref href=\"System.DateTime\"&gt;&lt;/xref&gt;</ph> to read.","source":"The <xref href=\"System.DateTime\"></xref> to read."}],"pos":[86267,86317],"yaml":true},{"content":"An integer from 0 to 23 that represents the hour in <code>time</code>.","nodes":[{"pos":[0,70],"content":"An integer from 0 to 23 that represents the hour in <bpt id=\"p1\">&lt;code&gt;</bpt><ph id=\"ph1\">time</ph><ept id=\"p1\">&lt;/code&gt;</ept>.","source":"An integer from 0 to 23 that represents the hour in <code>time</code>."}],"pos":[86373,86444],"yaml":true},{"content":"Calculates the leap month for a specified year and era.","nodes":[{"pos":[0,55],"content":"Calculates the leap month for a specified year and era.","nodes":[{"content":"Calculates the leap month for a specified year and era.","pos":[0,55]}]}],"pos":[88092,88148],"yaml":true},{"content":"In a calendar that supports the notion of a leap month, the leap month can occur either after a particular month or after any month in a year. For example, the <xref:System.Globalization.EastAsianLunisolarCalendar.GetMonth%28System.DateTime%29> method returns a number between 1 and 13 that indicates the month associated with a specified date. If there is a leap month between the eighth and ninth months of the year, the <xref:System.Globalization.EastAsianLunisolarCalendar.GetMonth%28System.DateTime%29> method returns 8 for the eighth month, 9 for the leap eighth month, and 10 for the ninth month.","nodes":[{"pos":[0,603],"content":"In a calendar that supports the notion of a leap month, the leap month can occur either after a particular month or after any month in a year. For example, the <xref:System.Globalization.EastAsianLunisolarCalendar.GetMonth%28System.DateTime%29> method returns a number between 1 and 13 that indicates the month associated with a specified date. If there is a leap month between the eighth and ninth months of the year, the <xref:System.Globalization.EastAsianLunisolarCalendar.GetMonth%28System.DateTime%29> method returns 8 for the eighth month, 9 for the leap eighth month, and 10 for the ninth month.","nodes":[{"content":"In a calendar that supports the notion of a leap month, the leap month can occur either after a particular month or after any month in a year. For example, the <xref:System.Globalization.EastAsianLunisolarCalendar.GetMonth%28System.DateTime%29> method returns a number between 1 and 13 that indicates the month associated with a specified date. If there is a leap month between the eighth and ninth months of the year, the <xref:System.Globalization.EastAsianLunisolarCalendar.GetMonth%28System.DateTime%29> method returns 8 for the eighth month, 9 for the leap eighth month, and 10 for the ninth month.","pos":[0,603],"nodes":[{"content":"In a calendar that supports the notion of a leap month, the leap month can occur either after a particular month or after any month in a year.","pos":[0,142]},{"content":"For example, the <ph id=\"ph1\">&lt;xref:System.Globalization.EastAsianLunisolarCalendar.GetMonth%28System.DateTime%29&gt;</ph> method returns a number between 1 and 13 that indicates the month associated with a specified date.","pos":[143,344],"source":" For example, the <xref:System.Globalization.EastAsianLunisolarCalendar.GetMonth%28System.DateTime%29> method returns a number between 1 and 13 that indicates the month associated with a specified date."},{"content":"If there is a leap month between the eighth and ninth months of the year, the <ph id=\"ph1\">&lt;xref:System.Globalization.EastAsianLunisolarCalendar.GetMonth%28System.DateTime%29&gt;</ph> method returns 8 for the eighth month, 9 for the leap eighth month, and 10 for the ninth month.","pos":[345,603],"source":" If there is a leap month between the eighth and ninth months of the year, the <xref:System.Globalization.EastAsianLunisolarCalendar.GetMonth%28System.DateTime%29> method returns 8 for the eighth month, 9 for the leap eighth month, and 10 for the ninth month."}]}]}],"pos":[88159,88763],"yaml":true,"extradata":"MT"},{"content":"A year.","nodes":[{"pos":[0,7],"content":"A year.","nodes":[{"content":"A year.","pos":[0,7]}]}],"pos":[88981,88989],"yaml":true},{"content":"An era.","nodes":[{"pos":[0,7],"content":"An era.","nodes":[{"content":"An era.","pos":[0,7]}]}],"pos":[89047,89055],"yaml":true},{"content":"A positive integer that indicates the leap month in the specified year and era.  \n  \n -or-  \n  \n Zero if this calendar does not support a leap month or if the <code>year</code> and <code>era</code> parameters do not specify a leap year.","nodes":[{"pos":[0,79],"content":"A positive integer that indicates the leap month in the specified year and era.","nodes":[{"content":"A positive integer that indicates the leap month in the specified year and era.","pos":[0,79]}]},{"pos":[86,90],"content":"-or-","nodes":[{"content":"-or-","pos":[0,4]}]},{"pos":[97,236],"content":"Zero if this calendar does not support a leap month or if the <bpt id=\"p1\">&lt;code&gt;</bpt><ph id=\"ph1\">year</ph><ept id=\"p1\">&lt;/code&gt;</ept> and <bpt id=\"p2\">&lt;code&gt;</bpt><ph id=\"ph2\">era</ph><ept id=\"p2\">&lt;/code&gt;</ept> parameters do not specify a leap year.","source":"Zero if this calendar does not support a leap month or if the <code>year</code> and <code>era</code> parameters do not specify a leap year."}],"pos":[89111,89354],"yaml":true},{"content":"Calculates the leap month for a specified year.","nodes":[{"pos":[0,47],"content":"Calculates the leap month for a specified year.","nodes":[{"content":"Calculates the leap month for a specified year.","pos":[0,47]}]}],"pos":[90997,91045],"yaml":true},{"content":"In a calendar that supports the notion of a leap month, the leap month can occur either after a particular month or after any month in a year. For example, the <xref:System.Globalization.EastAsianLunisolarCalendar.GetMonth%28System.DateTime%29> method returns a number between 1 and 13 that indicates the month associated with a specified date. If there is a leap month between the eighth and ninth months of the year, the <xref:System.Globalization.EastAsianLunisolarCalendar.GetMonth%28System.DateTime%29> method returns 8 for the eighth month, 9 for the leap eighth month, and 10 for the ninth month.","nodes":[{"pos":[0,603],"content":"In a calendar that supports the notion of a leap month, the leap month can occur either after a particular month or after any month in a year. For example, the <xref:System.Globalization.EastAsianLunisolarCalendar.GetMonth%28System.DateTime%29> method returns a number between 1 and 13 that indicates the month associated with a specified date. If there is a leap month between the eighth and ninth months of the year, the <xref:System.Globalization.EastAsianLunisolarCalendar.GetMonth%28System.DateTime%29> method returns 8 for the eighth month, 9 for the leap eighth month, and 10 for the ninth month.","nodes":[{"content":"In a calendar that supports the notion of a leap month, the leap month can occur either after a particular month or after any month in a year. For example, the <xref:System.Globalization.EastAsianLunisolarCalendar.GetMonth%28System.DateTime%29> method returns a number between 1 and 13 that indicates the month associated with a specified date. If there is a leap month between the eighth and ninth months of the year, the <xref:System.Globalization.EastAsianLunisolarCalendar.GetMonth%28System.DateTime%29> method returns 8 for the eighth month, 9 for the leap eighth month, and 10 for the ninth month.","pos":[0,603],"nodes":[{"content":"In a calendar that supports the notion of a leap month, the leap month can occur either after a particular month or after any month in a year.","pos":[0,142]},{"content":"For example, the <ph id=\"ph1\">&lt;xref:System.Globalization.EastAsianLunisolarCalendar.GetMonth%28System.DateTime%29&gt;</ph> method returns a number between 1 and 13 that indicates the month associated with a specified date.","pos":[143,344],"source":" For example, the <xref:System.Globalization.EastAsianLunisolarCalendar.GetMonth%28System.DateTime%29> method returns a number between 1 and 13 that indicates the month associated with a specified date."},{"content":"If there is a leap month between the eighth and ninth months of the year, the <ph id=\"ph1\">&lt;xref:System.Globalization.EastAsianLunisolarCalendar.GetMonth%28System.DateTime%29&gt;</ph> method returns 8 for the eighth month, 9 for the leap eighth month, and 10 for the ninth month.","pos":[345,603],"source":" If there is a leap month between the eighth and ninth months of the year, the <xref:System.Globalization.EastAsianLunisolarCalendar.GetMonth%28System.DateTime%29> method returns 8 for the eighth month, 9 for the leap eighth month, and 10 for the ninth month."}]}]}],"pos":[91056,91660],"yaml":true,"extradata":"MT"},{"content":"A year.","nodes":[{"pos":[0,7],"content":"A year.","nodes":[{"content":"A year.","pos":[0,7]}]}],"pos":[91869,91877],"yaml":true},{"content":"A positive integer that indicates the leap month in the specified year.  \n  \n -or-  \n  \n Zero if this calendar does not support a leap month or if the <code>year</code> parameter does not represent a leap year.","nodes":[{"pos":[0,71],"content":"A positive integer that indicates the leap month in the specified year.","nodes":[{"content":"A positive integer that indicates the leap month in the specified year.","pos":[0,71]}]},{"pos":[78,82],"content":"-or-","nodes":[{"content":"-or-","pos":[0,4]}]},{"pos":[89,210],"content":"Zero if this calendar does not support a leap month or if the <bpt id=\"p1\">&lt;code&gt;</bpt><ph id=\"ph1\">year</ph><ept id=\"p1\">&lt;/code&gt;</ept> parameter does not represent a leap year.","source":"Zero if this calendar does not support a leap month or if the <code>year</code> parameter does not represent a leap year."}],"pos":[91933,92150],"yaml":true},{"content":"Returns the milliseconds value in the specified <xref href=\"System.DateTime\"></xref>.","nodes":[{"pos":[0,85],"content":"Returns the milliseconds value in the specified <ph id=\"ph1\">&lt;xref href=\"System.DateTime\"&gt;&lt;/xref&gt;</ph>.","source":"Returns the milliseconds value in the specified <xref href=\"System.DateTime\"></xref>."}],"pos":[93550,93636],"yaml":true},{"content":"The <xref href=\"System.DateTime\"></xref> to read.","nodes":[{"pos":[0,49],"content":"The <ph id=\"ph1\">&lt;xref href=\"System.DateTime\"&gt;&lt;/xref&gt;</ph> to read.","source":"The <xref href=\"System.DateTime\"></xref> to read."}],"pos":[94370,94420],"yaml":true},{"content":"A double-precision floating-point number from 0 to 999 that represents the milliseconds in the <code>time</code> parameter.","nodes":[{"pos":[0,123],"content":"A double-precision floating-point number from 0 to 999 that represents the milliseconds in the <bpt id=\"p1\">&lt;code&gt;</bpt><ph id=\"ph1\">time</ph><ept id=\"p1\">&lt;/code&gt;</ept> parameter.","source":"A double-precision floating-point number from 0 to 999 that represents the milliseconds in the <code>time</code> parameter."}],"pos":[94477,94601],"yaml":true},{"content":"Returns the minutes value in the specified <xref href=\"System.DateTime\"></xref>.","nodes":[{"pos":[0,80],"content":"Returns the minutes value in the specified <ph id=\"ph1\">&lt;xref href=\"System.DateTime\"&gt;&lt;/xref&gt;</ph>.","source":"Returns the minutes value in the specified <xref href=\"System.DateTime\"></xref>."}],"pos":[96197,96278],"yaml":true},{"content":"The <xref href=\"System.DateTime\"></xref> to read.","nodes":[{"pos":[0,49],"content":"The <ph id=\"ph1\">&lt;xref href=\"System.DateTime\"&gt;&lt;/xref&gt;</ph> to read.","source":"The <xref href=\"System.DateTime\"></xref> to read."}],"pos":[97003,97053],"yaml":true},{"content":"An integer from 0 to 59 that represents the minutes in <code>time</code>.","nodes":[{"pos":[0,73],"content":"An integer from 0 to 59 that represents the minutes in <bpt id=\"p1\">&lt;code&gt;</bpt><ph id=\"ph1\">time</ph><ept id=\"p1\">&lt;/code&gt;</ept>.","source":"An integer from 0 to 59 that represents the minutes in <code>time</code>."}],"pos":[97109,97183],"yaml":true},{"content":"When overridden in a derived class, returns the month in the specified <xref href=\"System.DateTime\"></xref>.","nodes":[{"pos":[0,108],"content":"When overridden in a derived class, returns the month in the specified <ph id=\"ph1\">&lt;xref href=\"System.DateTime\"&gt;&lt;/xref&gt;</ph>.","source":"When overridden in a derived class, returns the month in the specified <xref href=\"System.DateTime\"></xref>."}],"pos":[98767,98876],"yaml":true},{"content":"For example, in <xref:System.Globalization.HebrewCalendar>, <xref:System.Globalization.Calendar.GetMonth%2A> for Tishrei returns 1, and <xref:System.Globalization.Calendar.GetMonth%2A> for Elul returns 12 in a common year or 13 in a leap year.","nodes":[{"pos":[0,243],"content":"For example, in <xref:System.Globalization.HebrewCalendar>, <xref:System.Globalization.Calendar.GetMonth%2A> for Tishrei returns 1, and <xref:System.Globalization.Calendar.GetMonth%2A> for Elul returns 12 in a common year or 13 in a leap year.","nodes":[{"content":"For example, in <ph id=\"ph1\">&lt;xref:System.Globalization.HebrewCalendar&gt;</ph>, <ph id=\"ph2\">&lt;xref:System.Globalization.Calendar.GetMonth%2A&gt;</ph> for Tishrei returns 1, and <ph id=\"ph3\">&lt;xref:System.Globalization.Calendar.GetMonth%2A&gt;</ph> for Elul returns 12 in a common year or 13 in a leap year.","pos":[0,243],"source":"For example, in <xref:System.Globalization.HebrewCalendar>, <xref:System.Globalization.Calendar.GetMonth%2A> for Tishrei returns 1, and <xref:System.Globalization.Calendar.GetMonth%2A> for Elul returns 12 in a common year or 13 in a leap year."}]}],"pos":[98887,99131],"yaml":true,"extradata":"MT"},{"content":"The <xref href=\"System.DateTime\"></xref> to read.","nodes":[{"pos":[0,49],"content":"The <ph id=\"ph1\">&lt;xref href=\"System.DateTime\"&gt;&lt;/xref&gt;</ph> to read.","source":"The <xref href=\"System.DateTime\"></xref> to read."}],"pos":[99842,99892],"yaml":true},{"content":"A positive integer that represents the month in <code>time</code>.","nodes":[{"pos":[0,66],"content":"A positive integer that represents the month in <bpt id=\"p1\">&lt;code&gt;</bpt><ph id=\"ph1\">time</ph><ept id=\"p1\">&lt;/code&gt;</ept>.","source":"A positive integer that represents the month in <code>time</code>."}],"pos":[99948,100015],"yaml":true},{"content":"Returns the number of months in the specified year in the current era.","nodes":[{"pos":[0,70],"content":"Returns the number of months in the specified year in the current era.","nodes":[{"content":"Returns the number of months in the specified year in the current era.","pos":[0,70]}]}],"pos":[101622,101693],"yaml":true},{"content":"For example, in <xref:System.Globalization.HebrewCalendar>, <xref:System.Globalization.Calendar.GetMonthsInYear%2A> returns 12 for a common year or 13 for a leap year.","nodes":[{"pos":[0,167],"content":"For example, in <xref:System.Globalization.HebrewCalendar>, <xref:System.Globalization.Calendar.GetMonthsInYear%2A> returns 12 for a common year or 13 for a leap year.","nodes":[{"content":"For example, in <ph id=\"ph1\">&lt;xref:System.Globalization.HebrewCalendar&gt;</ph>, <ph id=\"ph2\">&lt;xref:System.Globalization.Calendar.GetMonthsInYear%2A&gt;</ph> returns 12 for a common year or 13 for a leap year.","pos":[0,167],"source":"For example, in <xref:System.Globalization.HebrewCalendar>, <xref:System.Globalization.Calendar.GetMonthsInYear%2A> returns 12 for a common year or 13 for a leap year."}]}],"pos":[101704,101872],"yaml":true,"extradata":"MT"},{"content":"An integer that represents the year.","nodes":[{"pos":[0,36],"content":"An integer that represents the year.","nodes":[{"content":"An integer that represents the year.","pos":[0,36]}]}],"pos":[102663,102700],"yaml":true},{"content":"The number of months in the specified year in the current era.","nodes":[{"pos":[0,62],"content":"The number of months in the specified year in the current era.","nodes":[{"content":"The number of months in the specified year in the current era.","pos":[0,62]}]}],"pos":[102756,102819],"yaml":true},{"content":"<code>year</code> is outside the range supported by the calendar.","nodes":[{"pos":[0,65],"content":"<ph id=\"ph1\">&lt;code&gt;year&lt;/code&gt;</ph> is outside the range supported by the calendar.","source":"<code>year</code> is outside the range supported by the calendar."}],"pos":[103006,103072],"yaml":true},{"content":"When overridden in a derived class, returns the number of months in the specified year in the specified era.","nodes":[{"pos":[0,108],"content":"When overridden in a derived class, returns the number of months in the specified year in the specified era.","nodes":[{"content":"When overridden in a derived class, returns the number of months in the specified year in the specified era.","pos":[0,108]}]}],"pos":[104670,104779],"yaml":true},{"content":"For example, in <xref:System.Globalization.HebrewCalendar>, <xref:System.Globalization.Calendar.GetMonthsInYear%2A> returns 12 for a common year or 13 for a leap year.","nodes":[{"pos":[0,167],"content":"For example, in <xref:System.Globalization.HebrewCalendar>, <xref:System.Globalization.Calendar.GetMonthsInYear%2A> returns 12 for a common year or 13 for a leap year.","nodes":[{"content":"For example, in <ph id=\"ph1\">&lt;xref:System.Globalization.HebrewCalendar&gt;</ph>, <ph id=\"ph2\">&lt;xref:System.Globalization.Calendar.GetMonthsInYear%2A&gt;</ph> returns 12 for a common year or 13 for a leap year.","pos":[0,167],"source":"For example, in <xref:System.Globalization.HebrewCalendar>, <xref:System.Globalization.Calendar.GetMonthsInYear%2A> returns 12 for a common year or 13 for a leap year."}]}],"pos":[104790,104958],"yaml":true,"extradata":"MT"},{"content":"An integer that represents the year.","nodes":[{"pos":[0,36],"content":"An integer that represents the year.","nodes":[{"content":"An integer that represents the year.","pos":[0,36]}]}],"pos":[105113,105150],"yaml":true},{"content":"An integer that represents the era.","nodes":[{"pos":[0,35],"content":"An integer that represents the era.","nodes":[{"content":"An integer that represents the era.","pos":[0,35]}]}],"pos":[105208,105244],"yaml":true},{"content":"The number of months in the specified year in the specified era.","nodes":[{"pos":[0,64],"content":"The number of months in the specified year in the specified era.","nodes":[{"content":"The number of months in the specified year in the specified era.","pos":[0,64]}]}],"pos":[105300,105365],"yaml":true},{"content":"<code>year</code> is outside the range supported by the calendar.  \n  \n -or-  \n  \n <code>era</code> is outside the range supported by the calendar.","nodes":[{"pos":[0,65],"content":"<ph id=\"ph1\">&lt;code&gt;year&lt;/code&gt;</ph> is outside the range supported by the calendar.","source":"<code>year</code> is outside the range supported by the calendar."},{"pos":[72,76],"content":"-or-","nodes":[{"content":"-or-","pos":[0,4]}]},{"pos":[83,147],"content":"<ph id=\"ph1\">&lt;code&gt;era&lt;/code&gt;</ph> is outside the range supported by the calendar.","source":"<code>era</code> is outside the range supported by the calendar."}],"pos":[105552,105706],"yaml":true},{"content":"Returns the seconds value in the specified <xref href=\"System.DateTime\"></xref>.","nodes":[{"pos":[0,80],"content":"Returns the seconds value in the specified <ph id=\"ph1\">&lt;xref href=\"System.DateTime\"&gt;&lt;/xref&gt;</ph>.","source":"Returns the seconds value in the specified <xref href=\"System.DateTime\"></xref>."}],"pos":[107226,107307],"yaml":true},{"content":"The <xref href=\"System.DateTime\"></xref> to read.","nodes":[{"pos":[0,49],"content":"The <ph id=\"ph1\">&lt;xref href=\"System.DateTime\"&gt;&lt;/xref&gt;</ph> to read.","source":"The <xref href=\"System.DateTime\"></xref> to read."}],"pos":[108032,108082],"yaml":true},{"content":"An integer from 0 to 59 that represents the seconds in <code>time</code>.","nodes":[{"pos":[0,73],"content":"An integer from 0 to 59 that represents the seconds in <bpt id=\"p1\">&lt;code&gt;</bpt><ph id=\"ph1\">time</ph><ept id=\"p1\">&lt;/code&gt;</ept>.","source":"An integer from 0 to 59 that represents the seconds in <code>time</code>."}],"pos":[108138,108212],"yaml":true},{"content":"Returns the week of the year that includes the date in the specified <xref href=\"System.DateTime\"></xref> value.","nodes":[{"pos":[0,112],"content":"Returns the week of the year that includes the date in the specified <ph id=\"ph1\">&lt;xref href=\"System.DateTime\"&gt;&lt;/xref&gt;</ph> value.","source":"Returns the week of the year that includes the date in the specified <xref href=\"System.DateTime\"></xref> value."}],"pos":[110078,110191],"yaml":true},{"content":"This method can be used to determine the number of weeks in the year by setting `time` to the last day of the year.  \n  \n The <xref:System.Globalization.DateTimeFormatInfo> object for a particular culture that uses the calendar indicated by the <xref:System.Globalization.DateTimeFormatInfo.Calendar%2A?displayProperty=fullName> property includes the following culture-specific values that can be used for the `rule` and `firstDayOfWeek` parameters:  \n  \n-   The <xref:System.Globalization.DateTimeFormatInfo.FirstDayOfWeek%2A?displayProperty=fullName> property contains the default first day of the week that can be used for the `firstDayOfWeek` parameter.  \n  \n-   The <xref:System.Globalization.DateTimeFormatInfo.CalendarWeekRule%2A?displayProperty=fullName> property contains the default calendar week rule that can be used for the `rule` parameter.  \n  \n The following example uses the current culture's <xref:System.Globalization.DateTimeFormatInfo> object to determine that January 1, 2011 is in the first week of the year in the Gregorian calendar.  \n  \n [!code-csharp[System.Globalization.Calendar.GetWeekOfYear#2](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.Globalization.Calendar.GetWeekOfYear/CS/getweekofyearex1.cs#2)]\n [!code-vb[System.Globalization.Calendar.GetWeekOfYear#2](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.Globalization.Calendar.GetWeekOfYear/VB/getweekofyearex1.vb#2)]  \n  \n For some calendars, a call to the <xref:System.Globalization.Calendar.GetWeekOfYear%2A> method throws an <xref:System.ArgumentOutOfRangeException> for particular combinations of `rule` and `firstDayOfWeek` values even if `time` is greater than the date returned by that calendar's <xref:System.Globalization.Calendar.MinSupportedDateTime%2A> property. The following table lists the affected calendars, the specific `rule` values, and the range of the earliest supported `time` values. The specific minimum <xref:System.DateTime> value depends on the value of the `firstDayOfWeek` parameter.  \n  \n|Calendar|CalendarWeekRule value|Gregorian date (M/dd/yyyy)|Date in calendar (M/dd/yyyy)|  \n|--------------|----------------------------|------------------------------------|--------------------------------------|  \n|<xref:System.Globalization.ChineseLunisolarCalendar>|<xref:System.Globalization.CalendarWeekRule.FirstFullWeek>|2/19/1901 to 2/25/1901|1/1/1901 to 1/7/1901|  \n|<xref:System.Globalization.ChineseLunisolarCalendar>|<xref:System.Globalization.CalendarWeekRule.FirstFourDayWeek>|2/19/1901 to 2/22/1901|1/01/1901 to 1/04/1901|  \n|<xref:System.Globalization.HebrewCalendar>|<xref:System.Globalization.CalendarWeekRule.FirstDay>|9/17/1583|1/01/5344|  \n|<xref:System.Globalization.HebrewCalendar>|<xref:System.Globalization.CalendarWeekRule.FirstFullWeek>|9/17/1583 to 9/23/1583|1/01/5344 to 1/07/5344|  \n|<xref:System.Globalization.HebrewCalendar>|<xref:System.Globalization.CalendarWeekRule.FirstFourDayWeek>|9/17/1583 to 9/20/1583|1/01/5344 to 1/04/5344|  \n|<xref:System.Globalization.HijriCalendar>|<xref:System.Globalization.CalendarWeekRule.FirstFullWeek>|7/18/0622 to 7/24/0622|1/01/0001 to 1/07/0001|  \n|<xref:System.Globalization.HijriCalendar>|<xref:System.Globalization.CalendarWeekRule.FirstFourDayWeek>|7/18/0622 to 7/21/0622|1/01/0001 to 1/04/0001|  \n|<xref:System.Globalization.JapaneseLunisolarCalendar>|<xref:System.Globalization.CalendarWeekRule.FirstFullWeek>|1/28/1960 to 2/03/1960|1/01/35 to 1/07/0035|  \n|<xref:System.Globalization.JapaneseLunisolarCalendar>|<xref:System.Globalization.CalendarWeekRule.FirstFourDayWeek>|1/28/1960 to 1/31/1960|1/01/0035 to 1/04/0035|  \n|<xref:System.Globalization.JulianCalendar>|<xref:System.Globalization.CalendarWeekRule.FirstFullWeek>|1/01/0001 to 1/05/0001|1/03/0001 to 1/07/0001|  \n|<xref:System.Globalization.JulianCalendar>|<xref:System.Globalization.CalendarWeekRule.FirstFourDayWeek>|1/01/0001 to 1/02/0001|1/03/0001 to 1/04/0001|  \n|<xref:System.Globalization.KoreanLunisolarCalendar>|<xref:System.Globalization.CalendarWeekRule.FirstFullWeek>|2/14/0918 to 2/20/0918|1/01/0918 to 1/07/0918|  \n|<xref:System.Globalization.KoreanLunisolarCalendar>|<xref:System.Globalization.CalendarWeekRule.FirstFourDayWeek>|2/14/0918 to 2/17/0918|1/01/0918 to 1/04/0918|  \n|<xref:System.Globalization.PersianCalendar>|<xref:System.Globalization.CalendarWeekRule.FirstFullWeek>|3/21/0622 to 3/27/0622|1/01/0001 to 1/07/0001|  \n|<xref:System.Globalization.PersianCalendar>|<xref:System.Globalization.CalendarWeekRule.FirstFourDayWeek>|3/21/0622 to 3/24/0622|1/01/0001 to 1/04/0001|  \n|<xref:System.Globalization.TaiwanLunisolarCalendar>|<xref:System.Globalization.CalendarWeekRule.FirstFullWeek>|2/18/1912 to 2/24/1912|1/01/0001 to 1/07/0001|  \n|<xref:System.Globalization.TaiwanLunisolarCalendar>|<xref:System.Globalization.CalendarWeekRule.FirstFourDayWeek>|2/18/1912 to 2/21/1912|1/01/0001 to 1/04/0001|  \n|<xref:System.Globalization.UmAlQuraCalendar>|<xref:System.Globalization.CalendarWeekRule.FirstFullWeek>|4/30/1900 to 5/06/1900|1/01/1318 to 1/07/1318|  \n|<xref:System.Globalization.UmAlQuraCalendar>|<xref:System.Globalization.CalendarWeekRule.FirstFourDayWeek>|4/30/1900 to 5/03/1900|1/01/1318 to 1/04/1318|","nodes":[{"pos":[0,115],"content":"This method can be used to determine the number of weeks in the year by setting <ph id=\"ph1\">`time`</ph> to the last day of the year.","source":"This method can be used to determine the number of weeks in the year by setting `time` to the last day of the year."},{"pos":[122,449],"content":"The <ph id=\"ph1\">&lt;xref:System.Globalization.DateTimeFormatInfo&gt;</ph> object for a particular culture that uses the calendar indicated by the <ph id=\"ph2\">&lt;xref:System.Globalization.DateTimeFormatInfo.Calendar%2A?displayProperty=fullName&gt;</ph> property includes the following culture-specific values that can be used for the <ph id=\"ph3\">`rule`</ph> and <ph id=\"ph4\">`firstDayOfWeek`</ph> parameters:","source":"The <xref:System.Globalization.DateTimeFormatInfo> object for a particular culture that uses the calendar indicated by the <xref:System.Globalization.DateTimeFormatInfo.Calendar%2A?displayProperty=fullName> property includes the following culture-specific values that can be used for the `rule` and `firstDayOfWeek` parameters:"},{"pos":[459,657],"content":"The <ph id=\"ph1\">&lt;xref:System.Globalization.DateTimeFormatInfo.FirstDayOfWeek%2A?displayProperty=fullName&gt;</ph> property contains the default first day of the week that can be used for the <ph id=\"ph2\">`firstDayOfWeek`</ph> parameter.","source":"The <xref:System.Globalization.DateTimeFormatInfo.FirstDayOfWeek%2A?displayProperty=fullName> property contains the default first day of the week that can be used for the `firstDayOfWeek` parameter."},{"pos":[667,854],"content":"The <ph id=\"ph1\">&lt;xref:System.Globalization.DateTimeFormatInfo.CalendarWeekRule%2A?displayProperty=fullName&gt;</ph> property contains the default calendar week rule that can be used for the <ph id=\"ph2\">`rule`</ph> parameter.","source":"The <xref:System.Globalization.DateTimeFormatInfo.CalendarWeekRule%2A?displayProperty=fullName> property contains the default calendar week rule that can be used for the `rule` parameter."},{"pos":[861,1057],"content":"The following example uses the current culture's <xref:System.Globalization.DateTimeFormatInfo> object to determine that January 1, 2011 is in the first week of the year in the Gregorian calendar.","nodes":[{"content":"The following example uses the current culture's <ph id=\"ph1\">&lt;xref:System.Globalization.DateTimeFormatInfo&gt;</ph> object to determine that January 1, 2011 is in the first week of the year in the Gregorian calendar.","pos":[0,196],"source":"The following example uses the current culture's <xref:System.Globalization.DateTimeFormatInfo> object to determine that January 1, 2011 is in the first week of the year in the Gregorian calendar."}]},{"pos":[1064,1427],"content":"<bpt id=\"p1\">[!code-csharp</bpt><bpt id=\"p2\">[</bpt>System.Globalization.Calendar.GetWeekOfYear#2<ept id=\"p2\">](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.Globalization.Calendar.GetWeekOfYear/CS/getweekofyearex1.cs#2)</ept><ept id=\"p1\">]</ept> <bpt id=\"p3\">[!code-vb</bpt><bpt id=\"p4\">[</bpt>System.Globalization.Calendar.GetWeekOfYear#2<ept id=\"p4\">](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.Globalization.Calendar.GetWeekOfYear/VB/getweekofyearex1.vb#2)</ept><ept id=\"p3\">]</ept>","leadings":[""," "],"source":"[!code-csharp[System.Globalization.Calendar.GetWeekOfYear#2](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.Globalization.Calendar.GetWeekOfYear/CS/getweekofyearex1.cs#2)]\n[!code-vb[System.Globalization.Calendar.GetWeekOfYear#2](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.Globalization.Calendar.GetWeekOfYear/VB/getweekofyearex1.vb#2)]"},{"pos":[1434,2024],"content":"For some calendars, a call to the <xref:System.Globalization.Calendar.GetWeekOfYear%2A> method throws an <xref:System.ArgumentOutOfRangeException> for particular combinations of `rule` and `firstDayOfWeek` values even if `time` is greater than the date returned by that calendar's <xref:System.Globalization.Calendar.MinSupportedDateTime%2A> property. The following table lists the affected calendars, the specific `rule` values, and the range of the earliest supported `time` values. The specific minimum <xref:System.DateTime> value depends on the value of the `firstDayOfWeek` parameter.","nodes":[{"content":"For some calendars, a call to the <ph id=\"ph1\">&lt;xref:System.Globalization.Calendar.GetWeekOfYear%2A&gt;</ph> method throws an <ph id=\"ph2\">&lt;xref:System.ArgumentOutOfRangeException&gt;</ph> for particular combinations of <ph id=\"ph3\">`rule`</ph> and <ph id=\"ph4\">`firstDayOfWeek`</ph> values even if <ph id=\"ph5\">`time`</ph> is greater than the date returned by that calendar's <ph id=\"ph6\">&lt;xref:System.Globalization.Calendar.MinSupportedDateTime%2A&gt;</ph> property.","pos":[0,351],"source":"For some calendars, a call to the <xref:System.Globalization.Calendar.GetWeekOfYear%2A> method throws an <xref:System.ArgumentOutOfRangeException> for particular combinations of `rule` and `firstDayOfWeek` values even if `time` is greater than the date returned by that calendar's <xref:System.Globalization.Calendar.MinSupportedDateTime%2A> property."},{"content":"The following table lists the affected calendars, the specific <ph id=\"ph1\">`rule`</ph> values, and the range of the earliest supported <ph id=\"ph2\">`time`</ph> values.","pos":[352,484],"source":" The following table lists the affected calendars, the specific `rule` values, and the range of the earliest supported `time` values."},{"content":"The specific minimum <ph id=\"ph1\">&lt;xref:System.DateTime&gt;</ph> value depends on the value of the <ph id=\"ph2\">`firstDayOfWeek`</ph> parameter.","pos":[485,590],"source":" The specific minimum <xref:System.DateTime> value depends on the value of the `firstDayOfWeek` parameter."}]},{"pos":[2031,2039],"content":"Calendar","nodes":[{"content":"Calendar","pos":[0,8]}]},{"pos":[2040,2062],"content":"CalendarWeekRule value","nodes":[{"content":"CalendarWeekRule value","pos":[0,22]}]},{"pos":[2063,2089],"content":"Gregorian date (M/dd/yyyy)","nodes":[{"content":"Gregorian date (M/dd/yyyy)","pos":[0,26]}]},{"pos":[2090,2118],"content":"Date in calendar (M/dd/yyyy)","nodes":[{"content":"Date in calendar (M/dd/yyyy)","pos":[0,28]}]},{"pos":[2247,2299],"content":"<xref:System.Globalization.ChineseLunisolarCalendar>","nodes":[]},{"pos":[2300,2358],"content":"<xref:System.Globalization.CalendarWeekRule.FirstFullWeek>","nodes":[]},{"pos":[2359,2381],"content":"2/19/1901 to 2/25/1901","nodes":[{"content":"2/19/1901 to 2/25/1901","pos":[0,22]}]},{"pos":[2382,2402],"content":"1/1/1901 to 1/7/1901","nodes":[{"content":"1/1/1901 to 1/7/1901","pos":[0,20]}]},{"pos":[2407,2459],"content":"<xref:System.Globalization.ChineseLunisolarCalendar>","nodes":[]},{"pos":[2460,2521],"content":"<xref:System.Globalization.CalendarWeekRule.FirstFourDayWeek>","nodes":[]},{"pos":[2522,2544],"content":"2/19/1901 to 2/22/1901","nodes":[{"content":"2/19/1901 to 2/22/1901","pos":[0,22]}]},{"pos":[2545,2567],"content":"1/01/1901 to 1/04/1901","nodes":[{"content":"1/01/1901 to 1/04/1901","pos":[0,22]}]},{"pos":[2572,2614],"content":"<xref:System.Globalization.HebrewCalendar>","nodes":[]},{"pos":[2615,2668],"content":"<xref:System.Globalization.CalendarWeekRule.FirstDay>","nodes":[]},{"pos":[2669,2678],"content":"9/17/1583","nodes":[{"content":"9/17/1583","pos":[0,9]}]},{"pos":[2679,2688],"content":"1/01/5344","nodes":[{"content":"1/01/5344","pos":[0,9]}]},{"pos":[2693,2735],"content":"<xref:System.Globalization.HebrewCalendar>","nodes":[]},{"pos":[2736,2794],"content":"<xref:System.Globalization.CalendarWeekRule.FirstFullWeek>","nodes":[]},{"pos":[2795,2817],"content":"9/17/1583 to 9/23/1583","nodes":[{"content":"9/17/1583 to 9/23/1583","pos":[0,22]}]},{"pos":[2818,2840],"content":"1/01/5344 to 1/07/5344","nodes":[{"content":"1/01/5344 to 1/07/5344","pos":[0,22]}]},{"pos":[2845,2887],"content":"<xref:System.Globalization.HebrewCalendar>","nodes":[]},{"pos":[2888,2949],"content":"<xref:System.Globalization.CalendarWeekRule.FirstFourDayWeek>","nodes":[]},{"pos":[2950,2972],"content":"9/17/1583 to 9/20/1583","nodes":[{"content":"9/17/1583 to 9/20/1583","pos":[0,22]}]},{"pos":[2973,2995],"content":"1/01/5344 to 1/04/5344","nodes":[{"content":"1/01/5344 to 1/04/5344","pos":[0,22]}]},{"pos":[3000,3041],"content":"<xref:System.Globalization.HijriCalendar>","nodes":[]},{"pos":[3042,3100],"content":"<xref:System.Globalization.CalendarWeekRule.FirstFullWeek>","nodes":[]},{"pos":[3101,3123],"content":"7/18/0622 to 7/24/0622","nodes":[{"content":"7/18/0622 to 7/24/0622","pos":[0,22]}]},{"pos":[3124,3146],"content":"1/01/0001 to 1/07/0001","nodes":[{"content":"1/01/0001 to 1/07/0001","pos":[0,22]}]},{"pos":[3151,3192],"content":"<xref:System.Globalization.HijriCalendar>","nodes":[]},{"pos":[3193,3254],"content":"<xref:System.Globalization.CalendarWeekRule.FirstFourDayWeek>","nodes":[]},{"pos":[3255,3277],"content":"7/18/0622 to 7/21/0622","nodes":[{"content":"7/18/0622 to 7/21/0622","pos":[0,22]}]},{"pos":[3278,3300],"content":"1/01/0001 to 1/04/0001","nodes":[{"content":"1/01/0001 to 1/04/0001","pos":[0,22]}]},{"pos":[3305,3358],"content":"<xref:System.Globalization.JapaneseLunisolarCalendar>","nodes":[]},{"pos":[3359,3417],"content":"<xref:System.Globalization.CalendarWeekRule.FirstFullWeek>","nodes":[]},{"pos":[3418,3440],"content":"1/28/1960 to 2/03/1960","nodes":[{"content":"1/28/1960 to 2/03/1960","pos":[0,22]}]},{"pos":[3441,3461],"content":"1/01/35 to 1/07/0035","nodes":[{"content":"1/01/35 to 1/07/0035","pos":[0,20]}]},{"pos":[3466,3519],"content":"<xref:System.Globalization.JapaneseLunisolarCalendar>","nodes":[]},{"pos":[3520,3581],"content":"<xref:System.Globalization.CalendarWeekRule.FirstFourDayWeek>","nodes":[]},{"pos":[3582,3604],"content":"1/28/1960 to 1/31/1960","nodes":[{"content":"1/28/1960 to 1/31/1960","pos":[0,22]}]},{"pos":[3605,3627],"content":"1/01/0035 to 1/04/0035","nodes":[{"content":"1/01/0035 to 1/04/0035","pos":[0,22]}]},{"pos":[3632,3674],"content":"<xref:System.Globalization.JulianCalendar>","nodes":[]},{"pos":[3675,3733],"content":"<xref:System.Globalization.CalendarWeekRule.FirstFullWeek>","nodes":[]},{"pos":[3734,3756],"content":"1/01/0001 to 1/05/0001","nodes":[{"content":"1/01/0001 to 1/05/0001","pos":[0,22]}]},{"pos":[3757,3779],"content":"1/03/0001 to 1/07/0001","nodes":[{"content":"1/03/0001 to 1/07/0001","pos":[0,22]}]},{"pos":[3784,3826],"content":"<xref:System.Globalization.JulianCalendar>","nodes":[]},{"pos":[3827,3888],"content":"<xref:System.Globalization.CalendarWeekRule.FirstFourDayWeek>","nodes":[]},{"pos":[3889,3911],"content":"1/01/0001 to 1/02/0001","nodes":[{"content":"1/01/0001 to 1/02/0001","pos":[0,22]}]},{"pos":[3912,3934],"content":"1/03/0001 to 1/04/0001","nodes":[{"content":"1/03/0001 to 1/04/0001","pos":[0,22]}]},{"pos":[3939,3990],"content":"<xref:System.Globalization.KoreanLunisolarCalendar>","nodes":[]},{"pos":[3991,4049],"content":"<xref:System.Globalization.CalendarWeekRule.FirstFullWeek>","nodes":[]},{"pos":[4050,4072],"content":"2/14/0918 to 2/20/0918","nodes":[{"content":"2/14/0918 to 2/20/0918","pos":[0,22]}]},{"pos":[4073,4095],"content":"1/01/0918 to 1/07/0918","nodes":[{"content":"1/01/0918 to 1/07/0918","pos":[0,22]}]},{"pos":[4100,4151],"content":"<xref:System.Globalization.KoreanLunisolarCalendar>","nodes":[]},{"pos":[4152,4213],"content":"<xref:System.Globalization.CalendarWeekRule.FirstFourDayWeek>","nodes":[]},{"pos":[4214,4236],"content":"2/14/0918 to 2/17/0918","nodes":[{"content":"2/14/0918 to 2/17/0918","pos":[0,22]}]},{"pos":[4237,4259],"content":"1/01/0918 to 1/04/0918","nodes":[{"content":"1/01/0918 to 1/04/0918","pos":[0,22]}]},{"pos":[4264,4307],"content":"<xref:System.Globalization.PersianCalendar>","nodes":[]},{"pos":[4308,4366],"content":"<xref:System.Globalization.CalendarWeekRule.FirstFullWeek>","nodes":[]},{"pos":[4367,4389],"content":"3/21/0622 to 3/27/0622","nodes":[{"content":"3/21/0622 to 3/27/0622","pos":[0,22]}]},{"pos":[4390,4412],"content":"1/01/0001 to 1/07/0001","nodes":[{"content":"1/01/0001 to 1/07/0001","pos":[0,22]}]},{"pos":[4417,4460],"content":"<xref:System.Globalization.PersianCalendar>","nodes":[]},{"pos":[4461,4522],"content":"<xref:System.Globalization.CalendarWeekRule.FirstFourDayWeek>","nodes":[]},{"pos":[4523,4545],"content":"3/21/0622 to 3/24/0622","nodes":[{"content":"3/21/0622 to 3/24/0622","pos":[0,22]}]},{"pos":[4546,4568],"content":"1/01/0001 to 1/04/0001","nodes":[{"content":"1/01/0001 to 1/04/0001","pos":[0,22]}]},{"pos":[4573,4624],"content":"<xref:System.Globalization.TaiwanLunisolarCalendar>","nodes":[]},{"pos":[4625,4683],"content":"<xref:System.Globalization.CalendarWeekRule.FirstFullWeek>","nodes":[]},{"pos":[4684,4706],"content":"2/18/1912 to 2/24/1912","nodes":[{"content":"2/18/1912 to 2/24/1912","pos":[0,22]}]},{"pos":[4707,4729],"content":"1/01/0001 to 1/07/0001","nodes":[{"content":"1/01/0001 to 1/07/0001","pos":[0,22]}]},{"pos":[4734,4785],"content":"<xref:System.Globalization.TaiwanLunisolarCalendar>","nodes":[]},{"pos":[4786,4847],"content":"<xref:System.Globalization.CalendarWeekRule.FirstFourDayWeek>","nodes":[]},{"pos":[4848,4870],"content":"2/18/1912 to 2/21/1912","nodes":[{"content":"2/18/1912 to 2/21/1912","pos":[0,22]}]},{"pos":[4871,4893],"content":"1/01/0001 to 1/04/0001","nodes":[{"content":"1/01/0001 to 1/04/0001","pos":[0,22]}]},{"pos":[4898,4942],"content":"<xref:System.Globalization.UmAlQuraCalendar>","nodes":[]},{"pos":[4943,5001],"content":"<xref:System.Globalization.CalendarWeekRule.FirstFullWeek>","nodes":[]},{"pos":[5002,5024],"content":"4/30/1900 to 5/06/1900","nodes":[{"content":"4/30/1900 to 5/06/1900","pos":[0,22]}]},{"pos":[5025,5047],"content":"1/01/1318 to 1/07/1318","nodes":[{"content":"1/01/1318 to 1/07/1318","pos":[0,22]}]},{"pos":[5052,5096],"content":"<xref:System.Globalization.UmAlQuraCalendar>","nodes":[]},{"pos":[5097,5158],"content":"<xref:System.Globalization.CalendarWeekRule.FirstFourDayWeek>","nodes":[]},{"pos":[5159,5181],"content":"4/30/1900 to 5/03/1900","nodes":[{"content":"4/30/1900 to 5/03/1900","pos":[0,22]}]},{"pos":[5182,5204],"content":"1/01/1318 to 1/04/1318","nodes":[{"content":"1/01/1318 to 1/04/1318","pos":[0,22]}]}],"pos":[110202,115445],"yaml":true,"extradata":"MT"},{"content":"A date and time value.","nodes":[{"pos":[0,22],"content":"A date and time value.","nodes":[{"content":"A date and time value.","pos":[0,22]}]}],"pos":[116677,116700],"yaml":true},{"content":"An enumeration value that defines a calendar week.","nodes":[{"pos":[0,50],"content":"An enumeration value that defines a calendar week.","nodes":[{"content":"An enumeration value that defines a calendar week.","pos":[0,50]}]}],"pos":[116784,116835],"yaml":true},{"content":"An enumeration value that represents the first day of the week.","nodes":[{"pos":[0,63],"content":"An enumeration value that represents the first day of the week.","nodes":[{"content":"An enumeration value that represents the first day of the week.","pos":[0,63]}]}],"pos":[116908,116972],"yaml":true},{"content":"A positive integer that represents the week of the year that includes the date in the <code>time</code> parameter.","nodes":[{"pos":[0,114],"content":"A positive integer that represents the week of the year that includes the date in the <bpt id=\"p1\">&lt;code&gt;</bpt><ph id=\"ph1\">time</ph><ept id=\"p1\">&lt;/code&gt;</ept> parameter.","source":"A positive integer that represents the week of the year that includes the date in the <code>time</code> parameter."}],"pos":[117028,117143],"yaml":true},{"content":"<code>time</code> is earlier than <xref href=\"System.Globalization.Calendar.MinSupportedDateTime\"></xref> or later than <xref href=\"System.Globalization.Calendar.MaxSupportedDateTime\"></xref>.  \n  \n -or-  \n  \n <code>firstDayOfWeek</code> is not a valid <xref href=\"System.DayOfWeek\"></xref> value.  \n  \n -or-  \n  \n <code>rule</code> is not a valid <xref href=\"System.Globalization.CalendarWeekRule\"></xref> value.","nodes":[{"pos":[0,192],"content":"<ph id=\"ph1\">&lt;code&gt;time&lt;/code&gt;</ph> is earlier than <ph id=\"ph2\">&lt;xref href=\"System.Globalization.Calendar.MinSupportedDateTime\"&gt;&lt;/xref&gt;</ph> or later than <ph id=\"ph3\">&lt;xref href=\"System.Globalization.Calendar.MaxSupportedDateTime\"&gt;&lt;/xref&gt;</ph>.","source":"<code>time</code> is earlier than <xref href=\"System.Globalization.Calendar.MinSupportedDateTime\"></xref> or later than <xref href=\"System.Globalization.Calendar.MaxSupportedDateTime\"></xref>."},{"pos":[199,203],"content":"-or-","nodes":[{"content":"-or-","pos":[0,4]}]},{"pos":[210,297],"content":"<ph id=\"ph1\">&lt;code&gt;firstDayOfWeek&lt;/code&gt;</ph> is not a valid <ph id=\"ph2\">&lt;xref href=\"System.DayOfWeek\"&gt;&lt;/xref&gt;</ph> value.","source":"<code>firstDayOfWeek</code> is not a valid <xref href=\"System.DayOfWeek\"></xref> value."},{"pos":[304,308],"content":"-or-","nodes":[{"content":"-or-","pos":[0,4]}]},{"pos":[315,413],"content":"<ph id=\"ph1\">&lt;code&gt;rule&lt;/code&gt;</ph> is not a valid <ph id=\"ph2\">&lt;xref href=\"System.Globalization.CalendarWeekRule\"&gt;&lt;/xref&gt;</ph> value.","source":"<code>rule</code> is not a valid <xref href=\"System.Globalization.CalendarWeekRule\"></xref> value."}],"pos":[117328,117760],"yaml":true},{"content":"When overridden in a derived class, returns the year in the specified <xref href=\"System.DateTime\"></xref>.","nodes":[{"pos":[0,107],"content":"When overridden in a derived class, returns the year in the specified <ph id=\"ph1\">&lt;xref href=\"System.DateTime\"&gt;&lt;/xref&gt;</ph>.","source":"When overridden in a derived class, returns the year in the specified <xref href=\"System.DateTime\"></xref>."}],"pos":[119268,119376],"yaml":true},{"content":"The <xref href=\"System.DateTime\"></xref> to read.","nodes":[{"pos":[0,49],"content":"The <ph id=\"ph1\">&lt;xref href=\"System.DateTime\"&gt;&lt;/xref&gt;</ph> to read.","source":"The <xref href=\"System.DateTime\"></xref> to read."}],"pos":[120100,120150],"yaml":true},{"content":"An integer that represents the year in <code>time</code>.","nodes":[{"pos":[0,57],"content":"An integer that represents the year in <bpt id=\"p1\">&lt;code&gt;</bpt><ph id=\"ph1\">time</ph><ept id=\"p1\">&lt;/code&gt;</ept>.","source":"An integer that represents the year in <code>time</code>."}],"pos":[120206,120264],"yaml":true},{"content":"Determines whether the specified date in the current era is a leap day.","nodes":[{"pos":[0,71],"content":"Determines whether the specified date in the current era is a leap day.","nodes":[{"content":"Determines whether the specified date in the current era is a leap day.","pos":[0,71]}]}],"pos":[121954,122026],"yaml":true},{"content":"To make up for the difference between the calendar year and the actual time that the earth rotates around the sun or the actual time that the moon rotates around the earth, a leap year has a different number of days from a standard calendar year. Each <xref:System.Globalization.Calendar> implementation defines leap years differently.  \n  \n A leap day is a day that occurs only in a leap year. For example, in the Gregorian calendar, the 29th day of February is the only leap day.","nodes":[{"pos":[0,335],"content":"To make up for the difference between the calendar year and the actual time that the earth rotates around the sun or the actual time that the moon rotates around the earth, a leap year has a different number of days from a standard calendar year. Each <xref:System.Globalization.Calendar> implementation defines leap years differently.","nodes":[{"content":"To make up for the difference between the calendar year and the actual time that the earth rotates around the sun or the actual time that the moon rotates around the earth, a leap year has a different number of days from a standard calendar year. Each <xref:System.Globalization.Calendar> implementation defines leap years differently.","pos":[0,335],"nodes":[{"content":"To make up for the difference between the calendar year and the actual time that the earth rotates around the sun or the actual time that the moon rotates around the earth, a leap year has a different number of days from a standard calendar year.","pos":[0,246]},{"content":"Each <ph id=\"ph1\">&lt;xref:System.Globalization.Calendar&gt;</ph> implementation defines leap years differently.","pos":[247,335],"source":" Each <xref:System.Globalization.Calendar> implementation defines leap years differently."}]}]},{"pos":[342,481],"content":"A leap day is a day that occurs only in a leap year. For example, in the Gregorian calendar, the 29th day of February is the only leap day.","nodes":[{"content":"A leap day is a day that occurs only in a leap year. For example, in the Gregorian calendar, the 29th day of February is the only leap day.","pos":[0,139],"nodes":[{"content":"A leap day is a day that occurs only in a leap year.","pos":[0,52]},{"content":"For example, in the Gregorian calendar, the 29th day of February is the only leap day.","pos":[53,139]}]}]}],"pos":[122037,122523],"yaml":true,"extradata":"MT"},{"content":"An integer that represents the year.","nodes":[{"pos":[0,36],"content":"An integer that represents the year.","nodes":[{"content":"An integer that represents the year.","pos":[0,36]}]}],"pos":[123329,123366],"yaml":true},{"content":"A positive integer that represents the month.","nodes":[{"pos":[0,45],"content":"A positive integer that represents the month.","nodes":[{"content":"A positive integer that represents the month.","pos":[0,45]}]}],"pos":[123426,123472],"yaml":true},{"content":"A positive integer that represents the day.","nodes":[{"pos":[0,43],"content":"A positive integer that represents the day.","nodes":[{"content":"A positive integer that represents the day.","pos":[0,43]}]}],"pos":[123530,123574],"yaml":true},{"content":"`true` if the specified day is a leap day; otherwise, `false`.","nodes":[{"pos":[0,62],"content":"<ph id=\"ph1\">`true`</ph> if the specified day is a leap day; otherwise, <ph id=\"ph2\">`false`</ph>.","source":"`true` if the specified day is a leap day; otherwise, `false`."}],"pos":[123632,123697],"yaml":true},{"content":"<code>year</code> is outside the range supported by the calendar.  \n  \n -or-  \n  \n <code>month</code> is outside the range supported by the calendar.  \n  \n -or-  \n  \n <code>day</code> is outside the range supported by the calendar.","nodes":[{"pos":[0,65],"content":"<ph id=\"ph1\">&lt;code&gt;year&lt;/code&gt;</ph> is outside the range supported by the calendar.","source":"<code>year</code> is outside the range supported by the calendar."},{"pos":[72,76],"content":"-or-","nodes":[{"content":"-or-","pos":[0,4]}]},{"pos":[83,149],"content":"<ph id=\"ph1\">&lt;code&gt;month&lt;/code&gt;</ph> is outside the range supported by the calendar.","source":"<code>month</code> is outside the range supported by the calendar."},{"pos":[156,160],"content":"-or-","nodes":[{"content":"-or-","pos":[0,4]}]},{"pos":[167,231],"content":"<ph id=\"ph1\">&lt;code&gt;day&lt;/code&gt;</ph> is outside the range supported by the calendar.","source":"<code>day</code> is outside the range supported by the calendar."}],"pos":[123878,124120],"yaml":true},{"content":"When overridden in a derived class, determines whether the specified date in the specified era is a leap day.","nodes":[{"pos":[0,109],"content":"When overridden in a derived class, determines whether the specified date in the specified era is a leap day.","nodes":[{"content":"When overridden in a derived class, determines whether the specified date in the specified era is a leap day.","pos":[0,109]}]}],"pos":[125802,125912],"yaml":true},{"content":"To make up for the difference between the calendar year and the actual time that the earth rotates around the sun or the actual time that the moon rotates around the earth, a leap year has a different number of days from a standard calendar year. Each <xref:System.Globalization.Calendar> implementation defines leap years differently.  \n  \n A leap day is a day that occurs only in a leap year. For example, in the Gregorian calendar, the 29th day of February is the only leap day.","nodes":[{"pos":[0,335],"content":"To make up for the difference between the calendar year and the actual time that the earth rotates around the sun or the actual time that the moon rotates around the earth, a leap year has a different number of days from a standard calendar year. Each <xref:System.Globalization.Calendar> implementation defines leap years differently.","nodes":[{"content":"To make up for the difference between the calendar year and the actual time that the earth rotates around the sun or the actual time that the moon rotates around the earth, a leap year has a different number of days from a standard calendar year. Each <xref:System.Globalization.Calendar> implementation defines leap years differently.","pos":[0,335],"nodes":[{"content":"To make up for the difference between the calendar year and the actual time that the earth rotates around the sun or the actual time that the moon rotates around the earth, a leap year has a different number of days from a standard calendar year.","pos":[0,246]},{"content":"Each <ph id=\"ph1\">&lt;xref:System.Globalization.Calendar&gt;</ph> implementation defines leap years differently.","pos":[247,335],"source":" Each <xref:System.Globalization.Calendar> implementation defines leap years differently."}]}]},{"pos":[342,481],"content":"A leap day is a day that occurs only in a leap year. For example, in the Gregorian calendar, the 29th day of February is the only leap day.","nodes":[{"content":"A leap day is a day that occurs only in a leap year. For example, in the Gregorian calendar, the 29th day of February is the only leap day.","pos":[0,139],"nodes":[{"content":"A leap day is a day that occurs only in a leap year.","pos":[0,52]},{"content":"For example, in the Gregorian calendar, the 29th day of February is the only leap day.","pos":[53,139]}]}]}],"pos":[125923,126409],"yaml":true,"extradata":"MT"},{"content":"An integer that represents the year.","nodes":[{"pos":[0,36],"content":"An integer that represents the year.","nodes":[{"content":"An integer that represents the year.","pos":[0,36]}]}],"pos":[126579,126616],"yaml":true},{"content":"A positive integer that represents the month.","nodes":[{"pos":[0,45],"content":"A positive integer that represents the month.","nodes":[{"content":"A positive integer that represents the month.","pos":[0,45]}]}],"pos":[126676,126722],"yaml":true},{"content":"A positive integer that represents the day.","nodes":[{"pos":[0,43],"content":"A positive integer that represents the day.","nodes":[{"content":"A positive integer that represents the day.","pos":[0,43]}]}],"pos":[126780,126824],"yaml":true},{"content":"An integer that represents the era.","nodes":[{"pos":[0,35],"content":"An integer that represents the era.","nodes":[{"content":"An integer that represents the era.","pos":[0,35]}]}],"pos":[126882,126918],"yaml":true},{"content":"`true` if the specified day is a leap day; otherwise, `false`.","nodes":[{"pos":[0,62],"content":"<ph id=\"ph1\">`true`</ph> if the specified day is a leap day; otherwise, <ph id=\"ph2\">`false`</ph>.","source":"`true` if the specified day is a leap day; otherwise, `false`."}],"pos":[126976,127041],"yaml":true},{"content":"<code>year</code> is outside the range supported by the calendar.  \n  \n -or-  \n  \n <code>month</code> is outside the range supported by the calendar.  \n  \n -or-  \n  \n <code>day</code> is outside the range supported by the calendar.  \n  \n -or-  \n  \n <code>era</code> is outside the range supported by the calendar.","nodes":[{"pos":[0,65],"content":"<ph id=\"ph1\">&lt;code&gt;year&lt;/code&gt;</ph> is outside the range supported by the calendar.","source":"<code>year</code> is outside the range supported by the calendar."},{"pos":[72,76],"content":"-or-","nodes":[{"content":"-or-","pos":[0,4]}]},{"pos":[83,149],"content":"<ph id=\"ph1\">&lt;code&gt;month&lt;/code&gt;</ph> is outside the range supported by the calendar.","source":"<code>month</code> is outside the range supported by the calendar."},{"pos":[156,160],"content":"-or-","nodes":[{"content":"-or-","pos":[0,4]}]},{"pos":[167,231],"content":"<ph id=\"ph1\">&lt;code&gt;day&lt;/code&gt;</ph> is outside the range supported by the calendar.","source":"<code>day</code> is outside the range supported by the calendar."},{"pos":[238,242],"content":"-or-","nodes":[{"content":"-or-","pos":[0,4]}]},{"pos":[249,313],"content":"<ph id=\"ph1\">&lt;code&gt;era&lt;/code&gt;</ph> is outside the range supported by the calendar.","source":"<code>era</code> is outside the range supported by the calendar."}],"pos":[127222,127550],"yaml":true},{"content":"When overridden in a derived class, determines whether the specified month in the specified year in the specified era is a leap month.","nodes":[{"pos":[0,134],"content":"When overridden in a derived class, determines whether the specified month in the specified year in the specified era is a leap month.","nodes":[{"content":"When overridden in a derived class, determines whether the specified month in the specified year in the specified era is a leap month.","pos":[0,134]}]}],"pos":[129184,129319],"yaml":true},{"content":"To make up for the difference between the calendar year and the actual time that the earth rotates around the sun or the actual time that the moon rotates around the earth, a leap year has a different number of days from a standard calendar year. Each <xref:System.Globalization.Calendar> implementation defines leap years differently.  \n  \n A leap month is an entire month that occurs only in a leap year. For example, in the Hebrew calendar, Adar Beit is the only leap month.","nodes":[{"pos":[0,335],"content":"To make up for the difference between the calendar year and the actual time that the earth rotates around the sun or the actual time that the moon rotates around the earth, a leap year has a different number of days from a standard calendar year. Each <xref:System.Globalization.Calendar> implementation defines leap years differently.","nodes":[{"content":"To make up for the difference between the calendar year and the actual time that the earth rotates around the sun or the actual time that the moon rotates around the earth, a leap year has a different number of days from a standard calendar year. Each <xref:System.Globalization.Calendar> implementation defines leap years differently.","pos":[0,335],"nodes":[{"content":"To make up for the difference between the calendar year and the actual time that the earth rotates around the sun or the actual time that the moon rotates around the earth, a leap year has a different number of days from a standard calendar year.","pos":[0,246]},{"content":"Each <ph id=\"ph1\">&lt;xref:System.Globalization.Calendar&gt;</ph> implementation defines leap years differently.","pos":[247,335],"source":" Each <xref:System.Globalization.Calendar> implementation defines leap years differently."}]}]},{"pos":[342,477],"content":"A leap month is an entire month that occurs only in a leap year. For example, in the Hebrew calendar, Adar Beit is the only leap month.","nodes":[{"content":"A leap month is an entire month that occurs only in a leap year. For example, in the Hebrew calendar, Adar Beit is the only leap month.","pos":[0,135],"nodes":[{"content":"A leap month is an entire month that occurs only in a leap year.","pos":[0,64]},{"content":"For example, in the Hebrew calendar, Adar Beit is the only leap month.","pos":[65,135]}]}]}],"pos":[129330,129812],"yaml":true,"extradata":"MT"},{"content":"An integer that represents the year.","nodes":[{"pos":[0,36],"content":"An integer that represents the year.","nodes":[{"content":"An integer that represents the year.","pos":[0,36]}]}],"pos":[129975,130012],"yaml":true},{"content":"A positive integer that represents the month.","nodes":[{"pos":[0,45],"content":"A positive integer that represents the month.","nodes":[{"content":"A positive integer that represents the month.","pos":[0,45]}]}],"pos":[130072,130118],"yaml":true},{"content":"An integer that represents the era.","nodes":[{"pos":[0,35],"content":"An integer that represents the era.","nodes":[{"content":"An integer that represents the era.","pos":[0,35]}]}],"pos":[130176,130212],"yaml":true},{"content":"`true` if the specified month is a leap month; otherwise, `false`.","nodes":[{"pos":[0,66],"content":"<ph id=\"ph1\">`true`</ph> if the specified month is a leap month; otherwise, <ph id=\"ph2\">`false`</ph>.","source":"`true` if the specified month is a leap month; otherwise, `false`."}],"pos":[130270,130339],"yaml":true},{"content":"<code>year</code> is outside the range supported by the calendar.  \n  \n -or-  \n  \n <code>month</code> is outside the range supported by the calendar.  \n  \n -or-  \n  \n <code>era</code> is outside the range supported by the calendar.","nodes":[{"pos":[0,65],"content":"<ph id=\"ph1\">&lt;code&gt;year&lt;/code&gt;</ph> is outside the range supported by the calendar.","source":"<code>year</code> is outside the range supported by the calendar."},{"pos":[72,76],"content":"-or-","nodes":[{"content":"-or-","pos":[0,4]}]},{"pos":[83,149],"content":"<ph id=\"ph1\">&lt;code&gt;month&lt;/code&gt;</ph> is outside the range supported by the calendar.","source":"<code>month</code> is outside the range supported by the calendar."},{"pos":[156,160],"content":"-or-","nodes":[{"content":"-or-","pos":[0,4]}]},{"pos":[167,231],"content":"<ph id=\"ph1\">&lt;code&gt;era&lt;/code&gt;</ph> is outside the range supported by the calendar.","source":"<code>era</code> is outside the range supported by the calendar."}],"pos":[130522,130764],"yaml":true},{"content":"Determines whether the specified month in the specified year in the current era is a leap month.","nodes":[{"pos":[0,96],"content":"Determines whether the specified month in the specified year in the current era is a leap month.","nodes":[{"content":"Determines whether the specified month in the specified year in the current era is a leap month.","pos":[0,96]}]}],"pos":[132338,132435],"yaml":true},{"content":"To make up for the difference between the calendar year and the actual time that the earth rotates around the sun or the actual time that the moon rotates around the earth, a leap year has a different number of days from a standard calendar year. Each <xref:System.Globalization.Calendar> implementation defines leap years differently.  \n  \n A leap month is an entire month that occurs only in a leap year. For example, in the Hebrew calendar, Adar Beit is the only leap month.","nodes":[{"pos":[0,335],"content":"To make up for the difference between the calendar year and the actual time that the earth rotates around the sun or the actual time that the moon rotates around the earth, a leap year has a different number of days from a standard calendar year. Each <xref:System.Globalization.Calendar> implementation defines leap years differently.","nodes":[{"content":"To make up for the difference between the calendar year and the actual time that the earth rotates around the sun or the actual time that the moon rotates around the earth, a leap year has a different number of days from a standard calendar year. Each <xref:System.Globalization.Calendar> implementation defines leap years differently.","pos":[0,335],"nodes":[{"content":"To make up for the difference between the calendar year and the actual time that the earth rotates around the sun or the actual time that the moon rotates around the earth, a leap year has a different number of days from a standard calendar year.","pos":[0,246]},{"content":"Each <ph id=\"ph1\">&lt;xref:System.Globalization.Calendar&gt;</ph> implementation defines leap years differently.","pos":[247,335],"source":" Each <xref:System.Globalization.Calendar> implementation defines leap years differently."}]}]},{"pos":[342,477],"content":"A leap month is an entire month that occurs only in a leap year. For example, in the Hebrew calendar, Adar Beit is the only leap month.","nodes":[{"content":"A leap month is an entire month that occurs only in a leap year. For example, in the Hebrew calendar, Adar Beit is the only leap month.","pos":[0,135],"nodes":[{"content":"A leap month is an entire month that occurs only in a leap year.","pos":[0,64]},{"content":"For example, in the Hebrew calendar, Adar Beit is the only leap month.","pos":[65,135]}]}]}],"pos":[132446,132928],"yaml":true,"extradata":"MT"},{"content":"An integer that represents the year.","nodes":[{"pos":[0,36],"content":"An integer that represents the year.","nodes":[{"content":"An integer that represents the year.","pos":[0,36]}]}],"pos":[133727,133764],"yaml":true},{"content":"A positive integer that represents the month.","nodes":[{"pos":[0,45],"content":"A positive integer that represents the month.","nodes":[{"content":"A positive integer that represents the month.","pos":[0,45]}]}],"pos":[133824,133870],"yaml":true},{"content":"`true` if the specified month is a leap month; otherwise, `false`.","nodes":[{"pos":[0,66],"content":"<ph id=\"ph1\">`true`</ph> if the specified month is a leap month; otherwise, <ph id=\"ph2\">`false`</ph>.","source":"`true` if the specified month is a leap month; otherwise, `false`."}],"pos":[133928,133997],"yaml":true},{"content":"<code>year</code> is outside the range supported by the calendar.  \n  \n -or-  \n  \n <code>month</code> is outside the range supported by the calendar.","nodes":[{"pos":[0,65],"content":"<ph id=\"ph1\">&lt;code&gt;year&lt;/code&gt;</ph> is outside the range supported by the calendar.","source":"<code>year</code> is outside the range supported by the calendar."},{"pos":[72,76],"content":"-or-","nodes":[{"content":"-or-","pos":[0,4]}]},{"pos":[83,149],"content":"<ph id=\"ph1\">&lt;code&gt;month&lt;/code&gt;</ph> is outside the range supported by the calendar.","source":"<code>month</code> is outside the range supported by the calendar."}],"pos":[134180,134336],"yaml":true},{"content":"Determines whether the specified year in the current era is a leap year.","nodes":[{"pos":[0,72],"content":"Determines whether the specified year in the current era is a leap year.","nodes":[{"content":"Determines whether the specified year in the current era is a leap year.","pos":[0,72]}]}],"pos":[135844,135917],"yaml":true},{"content":"To make up for the difference between the calendar year and the actual time that the earth rotates around the sun or the actual time that the moon rotates around the earth, a leap year has a different number of days from a standard calendar year. Each <xref:System.Globalization.Calendar> implementation defines leap years differently.","nodes":[{"pos":[0,335],"content":"To make up for the difference between the calendar year and the actual time that the earth rotates around the sun or the actual time that the moon rotates around the earth, a leap year has a different number of days from a standard calendar year. Each <xref:System.Globalization.Calendar> implementation defines leap years differently.","nodes":[{"content":"To make up for the difference between the calendar year and the actual time that the earth rotates around the sun or the actual time that the moon rotates around the earth, a leap year has a different number of days from a standard calendar year. Each <xref:System.Globalization.Calendar> implementation defines leap years differently.","pos":[0,335],"nodes":[{"content":"To make up for the difference between the calendar year and the actual time that the earth rotates around the sun or the actual time that the moon rotates around the earth, a leap year has a different number of days from a standard calendar year.","pos":[0,246]},{"content":"Each <ph id=\"ph1\">&lt;xref:System.Globalization.Calendar&gt;</ph> implementation defines leap years differently.","pos":[247,335],"source":" Each <xref:System.Globalization.Calendar> implementation defines leap years differently."}]}]}],"pos":[135928,136264],"yaml":true,"extradata":"MT"},{"content":"An integer that represents the year.","nodes":[{"pos":[0,36],"content":"An integer that represents the year.","nodes":[{"content":"An integer that represents the year.","pos":[0,36]}]}],"pos":[137051,137088],"yaml":true},{"content":"`true` if the specified year is a leap year; otherwise, `false`.","nodes":[{"pos":[0,64],"content":"<ph id=\"ph1\">`true`</ph> if the specified year is a leap year; otherwise, <ph id=\"ph2\">`false`</ph>.","source":"`true` if the specified year is a leap year; otherwise, `false`."}],"pos":[137146,137213],"yaml":true},{"content":"<code>year</code> is outside the range supported by the calendar.","nodes":[{"pos":[0,65],"content":"<ph id=\"ph1\">&lt;code&gt;year&lt;/code&gt;</ph> is outside the range supported by the calendar.","source":"<code>year</code> is outside the range supported by the calendar."}],"pos":[137395,137461],"yaml":true},{"content":"When overridden in a derived class, determines whether the specified year in the specified era is a leap year.","nodes":[{"pos":[0,110],"content":"When overridden in a derived class, determines whether the specified year in the specified era is a leap year.","nodes":[{"content":"When overridden in a derived class, determines whether the specified year in the specified era is a leap year.","pos":[0,110]}]}],"pos":[139029,139140],"yaml":true},{"content":"To make up for the difference between the calendar year and the actual time that the earth rotates around the sun or the actual time that the moon rotates around the earth, a leap year has a different number of days from a standard calendar year. Each <xref:System.Globalization.Calendar> implementation defines leap years differently.","nodes":[{"pos":[0,335],"content":"To make up for the difference between the calendar year and the actual time that the earth rotates around the sun or the actual time that the moon rotates around the earth, a leap year has a different number of days from a standard calendar year. Each <xref:System.Globalization.Calendar> implementation defines leap years differently.","nodes":[{"content":"To make up for the difference between the calendar year and the actual time that the earth rotates around the sun or the actual time that the moon rotates around the earth, a leap year has a different number of days from a standard calendar year. Each <xref:System.Globalization.Calendar> implementation defines leap years differently.","pos":[0,335],"nodes":[{"content":"To make up for the difference between the calendar year and the actual time that the earth rotates around the sun or the actual time that the moon rotates around the earth, a leap year has a different number of days from a standard calendar year.","pos":[0,246]},{"content":"Each <ph id=\"ph1\">&lt;xref:System.Globalization.Calendar&gt;</ph> implementation defines leap years differently.","pos":[247,335],"source":" Each <xref:System.Globalization.Calendar> implementation defines leap years differently."}]}]}],"pos":[139151,139487],"yaml":true,"extradata":"MT"},{"content":"An integer that represents the year.","nodes":[{"pos":[0,36],"content":"An integer that represents the year.","nodes":[{"content":"An integer that represents the year.","pos":[0,36]}]}],"pos":[139638,139675],"yaml":true},{"content":"An integer that represents the era.","nodes":[{"pos":[0,35],"content":"An integer that represents the era.","nodes":[{"content":"An integer that represents the era.","pos":[0,35]}]}],"pos":[139733,139769],"yaml":true},{"content":"`true` if the specified year is a leap year; otherwise, `false`.","nodes":[{"pos":[0,64],"content":"<ph id=\"ph1\">`true`</ph> if the specified year is a leap year; otherwise, <ph id=\"ph2\">`false`</ph>.","source":"`true` if the specified year is a leap year; otherwise, `false`."}],"pos":[139827,139894],"yaml":true},{"content":"<code>year</code> is outside the range supported by the calendar.  \n  \n -or-  \n  \n <code>era</code> is outside the range supported by the calendar.","nodes":[{"pos":[0,65],"content":"<ph id=\"ph1\">&lt;code&gt;year&lt;/code&gt;</ph> is outside the range supported by the calendar.","source":"<code>year</code> is outside the range supported by the calendar."},{"pos":[72,76],"content":"-or-","nodes":[{"content":"-or-","pos":[0,4]}]},{"pos":[83,147],"content":"<ph id=\"ph1\">&lt;code&gt;era&lt;/code&gt;</ph> is outside the range supported by the calendar.","source":"<code>era</code> is outside the range supported by the calendar."}],"pos":[140076,140230],"yaml":true},{"content":"Gets a value indicating whether this <xref href=\"System.Globalization.Calendar\"></xref> object is read-only.","nodes":[{"pos":[0,108],"content":"Gets a value indicating whether this <ph id=\"ph1\">&lt;xref href=\"System.Globalization.Calendar\"&gt;&lt;/xref&gt;</ph> object is read-only.","source":"Gets a value indicating whether this <xref href=\"System.Globalization.Calendar\"></xref> object is read-only."}],"pos":[141677,141786],"yaml":true},{"content":"`true` if this <xref href=\"System.Globalization.Calendar\"></xref> object is read-only; otherwise, `false`.","nodes":[{"pos":[0,106],"content":"<ph id=\"ph1\">`true`</ph> if this <ph id=\"ph2\">&lt;xref href=\"System.Globalization.Calendar\"&gt;&lt;/xref&gt;</ph> object is read-only; otherwise, <ph id=\"ph3\">`false`</ph>.","source":"`true` if this <xref href=\"System.Globalization.Calendar\"></xref> object is read-only; otherwise, `false`."}],"pos":[141966,142075],"yaml":true},{"content":"Gets the latest date and time supported by this <xref href=\"System.Globalization.Calendar\"></xref> object.","nodes":[{"pos":[0,106],"content":"Gets the latest date and time supported by this <ph id=\"ph1\">&lt;xref href=\"System.Globalization.Calendar\"&gt;&lt;/xref&gt;</ph> object.","source":"Gets the latest date and time supported by this <xref href=\"System.Globalization.Calendar\"></xref> object."}],"pos":[143728,143835],"yaml":true},{"content":"The latest date and time supported by this calendar. The default is <xref href=\"System.DateTime.MaxValue\"></xref>.","nodes":[{"pos":[0,114],"content":"The latest date and time supported by this calendar. The default is <xref href=\"System.DateTime.MaxValue\"></xref>.","nodes":[{"content":"The latest date and time supported by this calendar.","pos":[0,52]},{"content":"The default is <ph id=\"ph1\">&lt;xref href=\"System.DateTime.MaxValue\"&gt;&lt;/xref&gt;</ph>.","pos":[53,114],"source":" The default is <xref href=\"System.DateTime.MaxValue\"></xref>."}]}],"pos":[144038,144153],"yaml":true},{"content":"Gets the earliest date and time supported by this <xref href=\"System.Globalization.Calendar\"></xref> object.","nodes":[{"pos":[0,108],"content":"Gets the earliest date and time supported by this <ph id=\"ph1\">&lt;xref href=\"System.Globalization.Calendar\"&gt;&lt;/xref&gt;</ph> object.","source":"Gets the earliest date and time supported by this <xref href=\"System.Globalization.Calendar\"></xref> object."}],"pos":[145816,145925],"yaml":true},{"content":"The earliest date and time supported by this calendar. The default is <xref href=\"System.DateTime.MinValue\"></xref>.","nodes":[{"pos":[0,116],"content":"The earliest date and time supported by this calendar. The default is <xref href=\"System.DateTime.MinValue\"></xref>.","nodes":[{"content":"The earliest date and time supported by this calendar.","pos":[0,54]},{"content":"The default is <ph id=\"ph1\">&lt;xref href=\"System.DateTime.MinValue\"&gt;&lt;/xref&gt;</ph>.","pos":[55,116],"source":" The default is <xref href=\"System.DateTime.MinValue\"></xref>."}]}],"pos":[146128,146245],"yaml":true},{"content":"Returns a read-only version of the specified <xref href=\"System.Globalization.Calendar\"></xref> object.","nodes":[{"pos":[0,103],"content":"Returns a read-only version of the specified <ph id=\"ph1\">&lt;xref href=\"System.Globalization.Calendar\"&gt;&lt;/xref&gt;</ph> object.","source":"Returns a read-only version of the specified <xref href=\"System.Globalization.Calendar\"></xref> object."}],"pos":[147932,148036],"yaml":true},{"content":"A <xref href=\"System.Globalization.Calendar\"></xref> object.","nodes":[{"pos":[0,60],"content":"A <ph id=\"ph1\">&lt;xref href=\"System.Globalization.Calendar\"&gt;&lt;/xref&gt;</ph> object.","source":"A <xref href=\"System.Globalization.Calendar\"></xref> object."}],"pos":[148317,148378],"yaml":true},{"content":"The <xref href=\"System.Globalization.Calendar\"></xref> object specified by the <code>calendar</code> parameter, if <code>calendar</code> is read-only.  \n  \n -or-  \n  \n A read-only memberwise clone of the <xref href=\"System.Globalization.Calendar\"></xref> object specified by <code>calendar</code>, if <code>calendar</code> is not read-only.","nodes":[{"pos":[0,150],"content":"The <ph id=\"ph1\">&lt;xref href=\"System.Globalization.Calendar\"&gt;&lt;/xref&gt;</ph> object specified by the <bpt id=\"p1\">&lt;code&gt;</bpt><ph id=\"ph2\">calendar</ph><ept id=\"p1\">&lt;/code&gt;</ept> parameter, if <bpt id=\"p2\">&lt;code&gt;</bpt><ph id=\"ph3\">calendar</ph><ept id=\"p2\">&lt;/code&gt;</ept> is read-only.","source":"The <xref href=\"System.Globalization.Calendar\"></xref> object specified by the <code>calendar</code> parameter, if <code>calendar</code> is read-only."},{"pos":[157,161],"content":"-or-","nodes":[{"content":"-or-","pos":[0,4]}]},{"pos":[168,340],"content":"A read-only memberwise clone of the <ph id=\"ph1\">&lt;xref href=\"System.Globalization.Calendar\"&gt;&lt;/xref&gt;</ph> object specified by <bpt id=\"p1\">&lt;code&gt;</bpt><ph id=\"ph2\">calendar</ph><ept id=\"p1\">&lt;/code&gt;</ept>, if <bpt id=\"p2\">&lt;code&gt;</bpt><ph id=\"ph3\">calendar</ph><ept id=\"p2\">&lt;/code&gt;</ept> is not read-only.","source":"A read-only memberwise clone of the <xref href=\"System.Globalization.Calendar\"></xref> object specified by <code>calendar</code>, if <code>calendar</code> is not read-only."}],"pos":[148451,148802],"yaml":true},{"content":"<code>calendar</code> is `null`.","nodes":[{"pos":[0,32],"content":"<ph id=\"ph1\">&lt;code&gt;calendar&lt;/code&gt;</ph> is <ph id=\"ph2\">`null`</ph>.","source":"<code>calendar</code> is `null`."}],"pos":[148970,149003],"yaml":true},{"content":"Returns a <xref href=\"System.DateTime\"></xref> that is set to the specified date and time in the current era.","nodes":[{"pos":[0,109],"content":"Returns a <ph id=\"ph1\">&lt;xref href=\"System.DateTime\"&gt;&lt;/xref&gt;</ph> that is set to the specified date and time in the current era.","source":"Returns a <xref href=\"System.DateTime\"></xref> that is set to the specified date and time in the current era."}],"pos":[150642,150752],"yaml":true},{"content":"An integer that represents the year.","nodes":[{"pos":[0,36],"content":"An integer that represents the year.","nodes":[{"content":"An integer that represents the year.","pos":[0,36]}]}],"pos":[150968,151005],"yaml":true},{"content":"A positive integer that represents the month.","nodes":[{"pos":[0,45],"content":"A positive integer that represents the month.","nodes":[{"content":"A positive integer that represents the month.","pos":[0,45]}]}],"pos":[151065,151111],"yaml":true},{"content":"A positive integer that represents the day.","nodes":[{"pos":[0,43],"content":"A positive integer that represents the day.","nodes":[{"content":"A positive integer that represents the day.","pos":[0,43]}]}],"pos":[151169,151213],"yaml":true},{"content":"An integer from 0 to 23 that represents the hour.","nodes":[{"pos":[0,49],"content":"An integer from 0 to 23 that represents the hour.","nodes":[{"content":"An integer from 0 to 23 that represents the hour.","pos":[0,49]}]}],"pos":[151272,151322],"yaml":true},{"content":"An integer from 0 to 59 that represents the minute.","nodes":[{"pos":[0,51],"content":"An integer from 0 to 59 that represents the minute.","nodes":[{"content":"An integer from 0 to 59 that represents the minute.","pos":[0,51]}]}],"pos":[151383,151435],"yaml":true},{"content":"An integer from 0 to 59 that represents the second.","nodes":[{"pos":[0,51],"content":"An integer from 0 to 59 that represents the second.","nodes":[{"content":"An integer from 0 to 59 that represents the second.","pos":[0,51]}]}],"pos":[151496,151548],"yaml":true},{"content":"An integer from 0 to 999 that represents the millisecond.","nodes":[{"pos":[0,57],"content":"An integer from 0 to 999 that represents the millisecond.","nodes":[{"content":"An integer from 0 to 999 that represents the millisecond.","pos":[0,57]}]}],"pos":[151614,151672],"yaml":true},{"content":"The <xref href=\"System.DateTime\"></xref> that is set to the specified date and time in the current era.","nodes":[{"pos":[0,103],"content":"The <ph id=\"ph1\">&lt;xref href=\"System.DateTime\"&gt;&lt;/xref&gt;</ph> that is set to the specified date and time in the current era.","source":"The <xref href=\"System.DateTime\"></xref> that is set to the specified date and time in the current era."}],"pos":[151731,151835],"yaml":true},{"content":"<code>year</code> is outside the range supported by the calendar.  \n  \n -or-  \n  \n <code>month</code> is outside the range supported by the calendar.  \n  \n -or-  \n  \n <code>day</code> is outside the range supported by the calendar.  \n  \n -or-  \n  \n <code>hour</code> is less than zero or greater than 23.  \n  \n -or-  \n  \n <code>minute</code> is less than zero or greater than 59.  \n  \n -or-  \n  \n <code>second</code> is less than zero or greater than 59.  \n  \n -or-  \n  \n <code>millisecond</code> is less than zero or greater than 999.","nodes":[{"pos":[0,65],"content":"<ph id=\"ph1\">&lt;code&gt;year&lt;/code&gt;</ph> is outside the range supported by the calendar.","source":"<code>year</code> is outside the range supported by the calendar."},{"pos":[72,76],"content":"-or-","nodes":[{"content":"-or-","pos":[0,4]}]},{"pos":[83,149],"content":"<ph id=\"ph1\">&lt;code&gt;month&lt;/code&gt;</ph> is outside the range supported by the calendar.","source":"<code>month</code> is outside the range supported by the calendar."},{"pos":[156,160],"content":"-or-","nodes":[{"content":"-or-","pos":[0,4]}]},{"pos":[167,231],"content":"<ph id=\"ph1\">&lt;code&gt;day&lt;/code&gt;</ph> is outside the range supported by the calendar.","source":"<code>day</code> is outside the range supported by the calendar."},{"pos":[238,242],"content":"-or-","nodes":[{"content":"-or-","pos":[0,4]}]},{"pos":[249,304],"content":"<ph id=\"ph1\">&lt;code&gt;hour&lt;/code&gt;</ph> is less than zero or greater than 23.","source":"<code>hour</code> is less than zero or greater than 23."},{"pos":[311,315],"content":"-or-","nodes":[{"content":"-or-","pos":[0,4]}]},{"pos":[322,379],"content":"<ph id=\"ph1\">&lt;code&gt;minute&lt;/code&gt;</ph> is less than zero or greater than 59.","source":"<code>minute</code> is less than zero or greater than 59."},{"pos":[386,390],"content":"-or-","nodes":[{"content":"-or-","pos":[0,4]}]},{"pos":[397,454],"content":"<ph id=\"ph1\">&lt;code&gt;second&lt;/code&gt;</ph> is less than zero or greater than 59.","source":"<code>second</code> is less than zero or greater than 59."},{"pos":[461,465],"content":"-or-","nodes":[{"content":"-or-","pos":[0,4]}]},{"pos":[472,535],"content":"<ph id=\"ph1\">&lt;code&gt;millisecond&lt;/code&gt;</ph> is less than zero or greater than 999.","source":"<code>millisecond</code> is less than zero or greater than 999."}],"pos":[152017,152579],"yaml":true},{"content":"When overridden in a derived class, returns a <xref href=\"System.DateTime\"></xref> that is set to the specified date and time in the specified era.","nodes":[{"pos":[0,147],"content":"When overridden in a derived class, returns a <ph id=\"ph1\">&lt;xref href=\"System.DateTime\"&gt;&lt;/xref&gt;</ph> that is set to the specified date and time in the specified era.","source":"When overridden in a derived class, returns a <xref href=\"System.DateTime\"></xref> that is set to the specified date and time in the specified era."}],"pos":[154507,154655],"yaml":true},{"content":"The <xref:System.Globalization.Calendar.ToDateTime%2A> method is useful because it can convert any date in the current calendar to a Gregorian calendar date. The Gregorian date can subsequently be used, for example, to compare dates in different calendars or create an equivalent date in a particular calendar.","nodes":[{"pos":[0,310],"content":"The <xref:System.Globalization.Calendar.ToDateTime%2A> method is useful because it can convert any date in the current calendar to a Gregorian calendar date. The Gregorian date can subsequently be used, for example, to compare dates in different calendars or create an equivalent date in a particular calendar.","nodes":[{"content":"The <xref:System.Globalization.Calendar.ToDateTime%2A> method is useful because it can convert any date in the current calendar to a Gregorian calendar date. The Gregorian date can subsequently be used, for example, to compare dates in different calendars or create an equivalent date in a particular calendar.","pos":[0,310],"nodes":[{"content":"The <ph id=\"ph1\">&lt;xref:System.Globalization.Calendar.ToDateTime%2A&gt;</ph> method is useful because it can convert any date in the current calendar to a Gregorian calendar date.","pos":[0,157],"source":"The <xref:System.Globalization.Calendar.ToDateTime%2A> method is useful because it can convert any date in the current calendar to a Gregorian calendar date."},{"content":"The Gregorian date can subsequently be used, for example, to compare dates in different calendars or create an equivalent date in a particular calendar.","pos":[158,310]}]}]}],"pos":[154666,154977],"yaml":true,"extradata":"MT"},{"content":"An integer that represents the year.","nodes":[{"pos":[0,36],"content":"An integer that represents the year.","nodes":[{"content":"An integer that represents the year.","pos":[0,36]}]}],"pos":[155203,155240],"yaml":true},{"content":"A positive integer that represents the month.","nodes":[{"pos":[0,45],"content":"A positive integer that represents the month.","nodes":[{"content":"A positive integer that represents the month.","pos":[0,45]}]}],"pos":[155300,155346],"yaml":true},{"content":"A positive integer that represents the day.","nodes":[{"pos":[0,43],"content":"A positive integer that represents the day.","nodes":[{"content":"A positive integer that represents the day.","pos":[0,43]}]}],"pos":[155404,155448],"yaml":true},{"content":"An integer from 0 to 23 that represents the hour.","nodes":[{"pos":[0,49],"content":"An integer from 0 to 23 that represents the hour.","nodes":[{"content":"An integer from 0 to 23 that represents the hour.","pos":[0,49]}]}],"pos":[155507,155557],"yaml":true},{"content":"An integer from 0 to 59 that represents the minute.","nodes":[{"pos":[0,51],"content":"An integer from 0 to 59 that represents the minute.","nodes":[{"content":"An integer from 0 to 59 that represents the minute.","pos":[0,51]}]}],"pos":[155618,155670],"yaml":true},{"content":"An integer from 0 to 59 that represents the second.","nodes":[{"pos":[0,51],"content":"An integer from 0 to 59 that represents the second.","nodes":[{"content":"An integer from 0 to 59 that represents the second.","pos":[0,51]}]}],"pos":[155731,155783],"yaml":true},{"content":"An integer from 0 to 999 that represents the millisecond.","nodes":[{"pos":[0,57],"content":"An integer from 0 to 999 that represents the millisecond.","nodes":[{"content":"An integer from 0 to 999 that represents the millisecond.","pos":[0,57]}]}],"pos":[155849,155907],"yaml":true},{"content":"An integer that represents the era.","nodes":[{"pos":[0,35],"content":"An integer that represents the era.","nodes":[{"content":"An integer that represents the era.","pos":[0,35]}]}],"pos":[155965,156001],"yaml":true},{"content":"The <xref href=\"System.DateTime\"></xref> that is set to the specified date and time in the current era.","nodes":[{"pos":[0,103],"content":"The <ph id=\"ph1\">&lt;xref href=\"System.DateTime\"&gt;&lt;/xref&gt;</ph> that is set to the specified date and time in the current era.","source":"The <xref href=\"System.DateTime\"></xref> that is set to the specified date and time in the current era."}],"pos":[156060,156164],"yaml":true},{"content":"<code>year</code> is outside the range supported by the calendar.  \n  \n -or-  \n  \n <code>month</code> is outside the range supported by the calendar.  \n  \n -or-  \n  \n <code>day</code> is outside the range supported by the calendar.  \n  \n -or-  \n  \n <code>hour</code> is less than zero or greater than 23.  \n  \n -or-  \n  \n <code>minute</code> is less than zero or greater than 59.  \n  \n -or-  \n  \n <code>second</code> is less than zero or greater than 59.  \n  \n -or-  \n  \n <code>millisecond</code> is less than zero or greater than 999.  \n  \n -or-  \n  \n <code>era</code> is outside the range supported by the calendar.","nodes":[{"pos":[0,65],"content":"<ph id=\"ph1\">&lt;code&gt;year&lt;/code&gt;</ph> is outside the range supported by the calendar.","source":"<code>year</code> is outside the range supported by the calendar."},{"pos":[72,76],"content":"-or-","nodes":[{"content":"-or-","pos":[0,4]}]},{"pos":[83,149],"content":"<ph id=\"ph1\">&lt;code&gt;month&lt;/code&gt;</ph> is outside the range supported by the calendar.","source":"<code>month</code> is outside the range supported by the calendar."},{"pos":[156,160],"content":"-or-","nodes":[{"content":"-or-","pos":[0,4]}]},{"pos":[167,231],"content":"<ph id=\"ph1\">&lt;code&gt;day&lt;/code&gt;</ph> is outside the range supported by the calendar.","source":"<code>day</code> is outside the range supported by the calendar."},{"pos":[238,242],"content":"-or-","nodes":[{"content":"-or-","pos":[0,4]}]},{"pos":[249,304],"content":"<ph id=\"ph1\">&lt;code&gt;hour&lt;/code&gt;</ph> is less than zero or greater than 23.","source":"<code>hour</code> is less than zero or greater than 23."},{"pos":[311,315],"content":"-or-","nodes":[{"content":"-or-","pos":[0,4]}]},{"pos":[322,379],"content":"<ph id=\"ph1\">&lt;code&gt;minute&lt;/code&gt;</ph> is less than zero or greater than 59.","source":"<code>minute</code> is less than zero or greater than 59."},{"pos":[386,390],"content":"-or-","nodes":[{"content":"-or-","pos":[0,4]}]},{"pos":[397,454],"content":"<ph id=\"ph1\">&lt;code&gt;second&lt;/code&gt;</ph> is less than zero or greater than 59.","source":"<code>second</code> is less than zero or greater than 59."},{"pos":[461,465],"content":"-or-","nodes":[{"content":"-or-","pos":[0,4]}]},{"pos":[472,535],"content":"<ph id=\"ph1\">&lt;code&gt;millisecond&lt;/code&gt;</ph> is less than zero or greater than 999.","source":"<code>millisecond</code> is less than zero or greater than 999."},{"pos":[542,546],"content":"-or-","nodes":[{"content":"-or-","pos":[0,4]}]},{"pos":[553,617],"content":"<ph id=\"ph1\">&lt;code&gt;era&lt;/code&gt;</ph> is outside the range supported by the calendar.","source":"<code>era</code> is outside the range supported by the calendar."}],"pos":[156346,156994],"yaml":true},{"content":"Converts the specified year to a four-digit year by using the <xref href=\"System.Globalization.Calendar.TwoDigitYearMax\"></xref> property to determine the appropriate century.","nodes":[{"pos":[0,175],"content":"Converts the specified year to a four-digit year by using the <ph id=\"ph1\">&lt;xref href=\"System.Globalization.Calendar.TwoDigitYearMax\"&gt;&lt;/xref&gt;</ph> property to determine the appropriate century.","source":"Converts the specified year to a four-digit year by using the <xref href=\"System.Globalization.Calendar.TwoDigitYearMax\"></xref> property to determine the appropriate century."}],"pos":[158532,158708],"yaml":true},{"content":"<xref:System.Globalization.Calendar.TwoDigitYearMax%2A> is the last year in the 100-year range that can be represented by a two-digit year. The century is determined by finding the sole occurrence of the two-digit `year` within that 100-year range. For example, if <xref:System.Globalization.Calendar.TwoDigitYearMax%2A> is set to 2029, the 100-year range is from 1930 to 2029. Therefore, a 2-digit value of 30 is interpreted as 1930, while a 2-digit value of 29 is interpreted as 2029.  \n  \n If `year` is greater than or equal to 100, the value of `year` is returned unchanged.  \n  \n <xref:System.Globalization.Calendar.ToFourDigitYear%2A> supports either a two-digit year or a four-digit year. Passing a two-digit year value (less than 100) causes the method to convert the value to a four-digit value according to the <xref:System.Globalization.Calendar.TwoDigitYearMax%2A> value representing the appropriate century. If the application supplies a four-digit year value that is within the supported calendar range to <xref:System.Globalization.Calendar.ToFourDigitYear%2A>, the method returns the actual input value. If the application supplies a four-digit value that is outside the supported calendar range, or if it supplies a negative value, the method throws an exception.","nodes":[{"pos":[0,486],"content":"<xref:System.Globalization.Calendar.TwoDigitYearMax%2A> is the last year in the 100-year range that can be represented by a two-digit year. The century is determined by finding the sole occurrence of the two-digit `year` within that 100-year range. For example, if <xref:System.Globalization.Calendar.TwoDigitYearMax%2A> is set to 2029, the 100-year range is from 1930 to 2029. Therefore, a 2-digit value of 30 is interpreted as 1930, while a 2-digit value of 29 is interpreted as 2029.","nodes":[{"content":"<ph id=\"ph1\">&lt;xref:System.Globalization.Calendar.TwoDigitYearMax%2A&gt;</ph> is the last year in the 100-year range that can be represented by a two-digit year.","pos":[0,139],"source":"<xref:System.Globalization.Calendar.TwoDigitYearMax%2A> is the last year in the 100-year range that can be represented by a two-digit year."},{"content":"The century is determined by finding the sole occurrence of the two-digit <ph id=\"ph1\">`year`</ph> within that 100-year range.","pos":[140,248],"source":" The century is determined by finding the sole occurrence of the two-digit `year` within that 100-year range."},{"content":"For example, if <ph id=\"ph1\">&lt;xref:System.Globalization.Calendar.TwoDigitYearMax%2A&gt;</ph> is set to 2029, the 100-year range is from 1930 to 2029.","pos":[249,377],"source":" For example, if <xref:System.Globalization.Calendar.TwoDigitYearMax%2A> is set to 2029, the 100-year range is from 1930 to 2029."},{"content":"Therefore, a 2-digit value of 30 is interpreted as 1930, while a 2-digit value of 29 is interpreted as 2029.","pos":[378,486]}]},{"pos":[493,578],"content":"If <ph id=\"ph1\">`year`</ph> is greater than or equal to 100, the value of <ph id=\"ph2\">`year`</ph> is returned unchanged.","source":"If `year` is greater than or equal to 100, the value of `year` is returned unchanged."},{"pos":[585,1280],"content":"<xref:System.Globalization.Calendar.ToFourDigitYear%2A> supports either a two-digit year or a four-digit year. Passing a two-digit year value (less than 100) causes the method to convert the value to a four-digit value according to the <xref:System.Globalization.Calendar.TwoDigitYearMax%2A> value representing the appropriate century. If the application supplies a four-digit year value that is within the supported calendar range to <xref:System.Globalization.Calendar.ToFourDigitYear%2A>, the method returns the actual input value. If the application supplies a four-digit value that is outside the supported calendar range, or if it supplies a negative value, the method throws an exception.","nodes":[{"content":"<xref:System.Globalization.Calendar.ToFourDigitYear%2A> supports either a two-digit year or a four-digit year. Passing a two-digit year value (less than 100) causes the method to convert the value to a four-digit value according to the <xref:System.Globalization.Calendar.TwoDigitYearMax%2A> value representing the appropriate century. If the application supplies a four-digit year value that is within the supported calendar range to <xref:System.Globalization.Calendar.ToFourDigitYear%2A>, the method returns the actual input value. If the application supplies a four-digit value that is outside the supported calendar range, or if it supplies a negative value, the method throws an exception.","pos":[0,695],"nodes":[{"content":"<ph id=\"ph1\">&lt;xref:System.Globalization.Calendar.ToFourDigitYear%2A&gt;</ph> supports either a two-digit year or a four-digit year.","pos":[0,110],"source":"<xref:System.Globalization.Calendar.ToFourDigitYear%2A> supports either a two-digit year or a four-digit year."},{"content":"Passing a two-digit year value (less than 100) causes the method to convert the value to a four-digit value according to the <ph id=\"ph1\">&lt;xref:System.Globalization.Calendar.TwoDigitYearMax%2A&gt;</ph> value representing the appropriate century.","pos":[111,335],"source":" Passing a two-digit year value (less than 100) causes the method to convert the value to a four-digit value according to the <xref:System.Globalization.Calendar.TwoDigitYearMax%2A> value representing the appropriate century."},{"content":"If the application supplies a four-digit year value that is within the supported calendar range to <ph id=\"ph1\">&lt;xref:System.Globalization.Calendar.ToFourDigitYear%2A&gt;</ph>, the method returns the actual input value.","pos":[336,534],"source":" If the application supplies a four-digit year value that is within the supported calendar range to <xref:System.Globalization.Calendar.ToFourDigitYear%2A>, the method returns the actual input value."},{"content":"If the application supplies a four-digit value that is outside the supported calendar range, or if it supplies a negative value, the method throws an exception.","pos":[535,695]}]}]}],"pos":[158719,160006],"yaml":true,"extradata":"MT"},{"content":"A two-digit or four-digit integer that represents the year to convert.","nodes":[{"pos":[0,70],"content":"A two-digit or four-digit integer that represents the year to convert.","nodes":[{"content":"A two-digit or four-digit integer that represents the year to convert.","pos":[0,70]}]}],"pos":[160151,160222],"yaml":true},{"content":"An integer that contains the four-digit representation of <code>year</code>.","nodes":[{"pos":[0,76],"content":"An integer that contains the four-digit representation of <bpt id=\"p1\">&lt;code&gt;</bpt><ph id=\"ph1\">year</ph><ept id=\"p1\">&lt;/code&gt;</ept>.","source":"An integer that contains the four-digit representation of <code>year</code>."}],"pos":[160278,160355],"yaml":true},{"content":"<code>year</code> is outside the range supported by the calendar.","nodes":[{"pos":[0,65],"content":"<ph id=\"ph1\">&lt;code&gt;year&lt;/code&gt;</ph> is outside the range supported by the calendar.","source":"<code>year</code> is outside the range supported by the calendar."}],"pos":[160542,160608],"yaml":true},{"content":"Gets or sets the last year of a 100-year range that can be represented by a 2-digit year.","nodes":[{"pos":[0,89],"content":"Gets or sets the last year of a 100-year range that can be represented by a 2-digit year.","nodes":[{"content":"Gets or sets the last year of a 100-year range that can be represented by a 2-digit year.","pos":[0,89]}]}],"pos":[162085,162175],"yaml":true},{"content":"This property allows a 2-digit year to be properly translated to a 4-digit year. For example, if this property is set to 2029, the 100-year range is from 1930 to 2029. Therefore, a 2-digit value of 30 is interpreted as 1930, while a 2-digit value of 29 is interpreted as 2029.  \n  \n The initial value of this property is derived from the settings in the regional and language options portion of Control Panel. However, that information can change during the life of the <xref:System.AppDomain>. The <xref:System.Globalization.Calendar> class does not detect changes in the system settings automatically. If the calendar is not supported in the regional and language options, the initial value of this property is the default value defined by the <xref:System.Globalization.Calendar> class.  \n  \n Your application should set this value to 99 to indicate that 2-digit years are to be taken literally. For example, if this property is set to 99, the 100-year range is from 0 (not a valid value for most calendars) to 99. Therefore, a 2-digit value of 30 is interpreted as 30.","nodes":[{"pos":[0,276],"content":"This property allows a 2-digit year to be properly translated to a 4-digit year. For example, if this property is set to 2029, the 100-year range is from 1930 to 2029. Therefore, a 2-digit value of 30 is interpreted as 1930, while a 2-digit value of 29 is interpreted as 2029.","nodes":[{"content":"This property allows a 2-digit year to be properly translated to a 4-digit year. For example, if this property is set to 2029, the 100-year range is from 1930 to 2029. Therefore, a 2-digit value of 30 is interpreted as 1930, while a 2-digit value of 29 is interpreted as 2029.","pos":[0,276],"nodes":[{"content":"This property allows a 2-digit year to be properly translated to a 4-digit year.","pos":[0,80]},{"content":"For example, if this property is set to 2029, the 100-year range is from 1930 to 2029.","pos":[81,167]},{"content":"Therefore, a 2-digit value of 30 is interpreted as 1930, while a 2-digit value of 29 is interpreted as 2029.","pos":[168,276]}]}]},{"pos":[283,789],"content":"The initial value of this property is derived from the settings in the regional and language options portion of Control Panel. However, that information can change during the life of the <xref:System.AppDomain>. The <xref:System.Globalization.Calendar> class does not detect changes in the system settings automatically. If the calendar is not supported in the regional and language options, the initial value of this property is the default value defined by the <xref:System.Globalization.Calendar> class.","nodes":[{"content":"The initial value of this property is derived from the settings in the regional and language options portion of Control Panel. However, that information can change during the life of the <xref:System.AppDomain>. The <xref:System.Globalization.Calendar> class does not detect changes in the system settings automatically. If the calendar is not supported in the regional and language options, the initial value of this property is the default value defined by the <xref:System.Globalization.Calendar> class.","pos":[0,506],"nodes":[{"content":"The initial value of this property is derived from the settings in the regional and language options portion of Control Panel.","pos":[0,126]},{"content":"However, that information can change during the life of the <ph id=\"ph1\">&lt;xref:System.AppDomain&gt;</ph>.","pos":[127,211],"source":" However, that information can change during the life of the <xref:System.AppDomain>."},{"content":"The <ph id=\"ph1\">&lt;xref:System.Globalization.Calendar&gt;</ph> class does not detect changes in the system settings automatically.","pos":[212,320],"source":" The <xref:System.Globalization.Calendar> class does not detect changes in the system settings automatically."},{"content":"If the calendar is not supported in the regional and language options, the initial value of this property is the default value defined by the <ph id=\"ph1\">&lt;xref:System.Globalization.Calendar&gt;</ph> class.","pos":[321,506],"source":" If the calendar is not supported in the regional and language options, the initial value of this property is the default value defined by the <xref:System.Globalization.Calendar> class."}]}]},{"pos":[796,1072],"content":"Your application should set this value to 99 to indicate that 2-digit years are to be taken literally. For example, if this property is set to 99, the 100-year range is from 0 (not a valid value for most calendars) to 99. Therefore, a 2-digit value of 30 is interpreted as 30.","nodes":[{"content":"Your application should set this value to 99 to indicate that 2-digit years are to be taken literally. For example, if this property is set to 99, the 100-year range is from 0 (not a valid value for most calendars) to 99. Therefore, a 2-digit value of 30 is interpreted as 30.","pos":[0,276],"nodes":[{"content":"Your application should set this value to 99 to indicate that 2-digit years are to be taken literally.","pos":[0,102]},{"content":"For example, if this property is set to 99, the 100-year range is from 0 (not a valid value for most calendars) to 99.","pos":[103,221]},{"content":"Therefore, a 2-digit value of 30 is interpreted as 30.","pos":[222,276]}]}]}],"pos":[162186,163265],"yaml":true,"extradata":"MT"},{"content":"The last year of a 100-year range that can be represented by a 2-digit year.","nodes":[{"pos":[0,76],"content":"The last year of a 100-year range that can be represented by a 2-digit year.","nodes":[{"content":"The last year of a 100-year range that can be represented by a 2-digit year.","pos":[0,76]}]}],"pos":[163393,163470],"yaml":true},{"content":"The current <xref href=\"System.Globalization.Calendar\"></xref> object is read-only.","nodes":[{"pos":[0,83],"content":"The current <ph id=\"ph1\">&lt;xref href=\"System.Globalization.Calendar\"&gt;&lt;/xref&gt;</ph> object is read-only.","source":"The current <xref href=\"System.Globalization.Calendar\"></xref> object is read-only."}],"pos":[163653,163737],"yaml":true}],"content":"### YamlMime:ManagedReference\nitems:\n- uid: System.Globalization.Calendar\n  commentId: T:System.Globalization.Calendar\n  id: Calendar\n  children:\n  - System.Globalization.Calendar.#ctor\n  - System.Globalization.Calendar.AddDays(System.DateTime,System.Int32)\n  - System.Globalization.Calendar.AddHours(System.DateTime,System.Int32)\n  - System.Globalization.Calendar.AddMilliseconds(System.DateTime,System.Double)\n  - System.Globalization.Calendar.AddMinutes(System.DateTime,System.Int32)\n  - System.Globalization.Calendar.AddMonths(System.DateTime,System.Int32)\n  - System.Globalization.Calendar.AddSeconds(System.DateTime,System.Int32)\n  - System.Globalization.Calendar.AddWeeks(System.DateTime,System.Int32)\n  - System.Globalization.Calendar.AddYears(System.DateTime,System.Int32)\n  - System.Globalization.Calendar.AlgorithmType\n  - System.Globalization.Calendar.Clone\n  - System.Globalization.Calendar.CurrentEra\n  - System.Globalization.Calendar.DaysInYearBeforeMinSupportedYear\n  - System.Globalization.Calendar.Eras\n  - System.Globalization.Calendar.GetDayOfMonth(System.DateTime)\n  - System.Globalization.Calendar.GetDayOfWeek(System.DateTime)\n  - System.Globalization.Calendar.GetDayOfYear(System.DateTime)\n  - System.Globalization.Calendar.GetDaysInMonth(System.Int32,System.Int32)\n  - System.Globalization.Calendar.GetDaysInMonth(System.Int32,System.Int32,System.Int32)\n  - System.Globalization.Calendar.GetDaysInYear(System.Int32)\n  - System.Globalization.Calendar.GetDaysInYear(System.Int32,System.Int32)\n  - System.Globalization.Calendar.GetEra(System.DateTime)\n  - System.Globalization.Calendar.GetHour(System.DateTime)\n  - System.Globalization.Calendar.GetLeapMonth(System.Int32,System.Int32)\n  - System.Globalization.Calendar.GetLeapMonth(System.Int32)\n  - System.Globalization.Calendar.GetMilliseconds(System.DateTime)\n  - System.Globalization.Calendar.GetMinute(System.DateTime)\n  - System.Globalization.Calendar.GetMonth(System.DateTime)\n  - System.Globalization.Calendar.GetMonthsInYear(System.Int32)\n  - System.Globalization.Calendar.GetMonthsInYear(System.Int32,System.Int32)\n  - System.Globalization.Calendar.GetSecond(System.DateTime)\n  - System.Globalization.Calendar.GetWeekOfYear(System.DateTime,System.Globalization.CalendarWeekRule,System.DayOfWeek)\n  - System.Globalization.Calendar.GetYear(System.DateTime)\n  - System.Globalization.Calendar.IsLeapDay(System.Int32,System.Int32,System.Int32)\n  - System.Globalization.Calendar.IsLeapDay(System.Int32,System.Int32,System.Int32,System.Int32)\n  - System.Globalization.Calendar.IsLeapMonth(System.Int32,System.Int32,System.Int32)\n  - System.Globalization.Calendar.IsLeapMonth(System.Int32,System.Int32)\n  - System.Globalization.Calendar.IsLeapYear(System.Int32)\n  - System.Globalization.Calendar.IsLeapYear(System.Int32,System.Int32)\n  - System.Globalization.Calendar.IsReadOnly\n  - System.Globalization.Calendar.MaxSupportedDateTime\n  - System.Globalization.Calendar.MinSupportedDateTime\n  - System.Globalization.Calendar.ReadOnly(System.Globalization.Calendar)\n  - System.Globalization.Calendar.ToDateTime(System.Int32,System.Int32,System.Int32,System.Int32,System.Int32,System.Int32,System.Int32)\n  - System.Globalization.Calendar.ToDateTime(System.Int32,System.Int32,System.Int32,System.Int32,System.Int32,System.Int32,System.Int32,System.Int32)\n  - System.Globalization.Calendar.ToFourDigitYear(System.Int32)\n  - System.Globalization.Calendar.TwoDigitYearMax\n  langs:\n  - csharp\n  name: Calendar\n  nameWithType: Calendar\n  fullName: System.Globalization.Calendar\n  type: Class\n  assemblies:\n  - System.Globalization\n  - mscorlib\n  - netstandard\n  - System.Runtime\n  namespace: System.Globalization\n  summary: Represents time in divisions, such as weeks, months, and years.\n  remarks: \"A calendar divides time into units, such as weeks, months, and years. The number, length, and start of the divisions vary in each calendar.  \\n  \\n> [!NOTE]\\n>  For information about using the calendar classes in the .NET Framework, see [Working with Calendars](~/docs/standard/datetime/working-with-calendars.md).  \\n  \\n Any moment in time can be represented as a set of numeric values using a particular calendar. For example, a vernal equinox occurred at (1999, 3, 20, 8, 46, 0, 0.0) in the Gregorian calendar, that is, March 20, 1999 C.E. at 8:46:00:0.0. An implementation of <xref:System.Globalization.Calendar> can map any date in the range of a specific calendar to a similar set of numeric values, and <xref:System.DateTime> can map such sets of numeric values to a textual representation using information from <xref:System.Globalization.Calendar> and <xref:System.Globalization.DateTimeFormatInfo>. The textual representation can be culture-sensitive, for example, \\\"8:46 AM March 20th 1999 AD\\\" for the en-US culture, or culture-insensitive, for example, \\\"1999-03-20T08:46:00\\\" in ISO 8601 format.  \\n  \\n A <xref:System.Globalization.Calendar> implementation can define one or more eras. The <xref:System.Globalization.Calendar> class identifies the eras as enumerated integers, where the current era (<xref:System.Globalization.Calendar.CurrentEra>) has the value 0.  \\n  \\n To make up for the difference between the calendar year and the actual time that the earth rotates around the sun or the actual time that the moon rotates around the earth, a leap year has a different number of days from a standard calendar year. Each <xref:System.Globalization.Calendar> implementation defines leap years differently.  \\n  \\n For consistency, the first unit in each interval (the first month, for example) is assigned the value 1.  \\n  \\n The <xref:System.Globalization> namespace includes the following <xref:System.Globalization.Calendar> implementations:  \\n  \\n-   <xref:System.Globalization.ChineseLunisolarCalendar>  \\n  \\n-   <xref:System.Globalization.EastAsianLunisolarCalendar>  \\n  \\n-   <xref:System.Globalization.GregorianCalendar>  \\n  \\n-   <xref:System.Globalization.HebrewCalendar>  \\n  \\n-   <xref:System.Globalization.HijriCalendar>  \\n  \\n-   <xref:System.Globalization.JapaneseCalendar>  \\n  \\n-   <xref:System.Globalization.JapaneseLunisolarCalendar>  \\n  \\n-   <xref:System.Globalization.JulianCalendar>  \\n  \\n-   <xref:System.Globalization.KoreanCalendar>  \\n  \\n-   <xref:System.Globalization.KoreanLunisolarCalendar>  \\n  \\n-   <xref:System.Globalization.PersianCalendar>  \\n  \\n-   <xref:System.Globalization.TaiwanCalendar>  \\n  \\n-   <xref:System.Globalization.TaiwanLunisolarCalendar>  \\n  \\n-   <xref:System.Globalization.ThaiBuddhistCalendar>  \\n  \\n-   <xref:System.Globalization.UmAlQuraCalendar>\"\n  example:\n  - \"The following code example demonstrates the members of the <xref:System.Globalization.Calendar> class.  \\n  \\n [!code-cpp[System.Globalization.Calendar#1](~/samples/snippets/cpp/VS_Snippets_CLR_System/system.Globalization.Calendar/CPP/calendar.cpp#1)]\\n [!code-csharp[System.Globalization.Calendar#1](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.Globalization.Calendar/CS/calendar.cs#1)]\\n [!code-vb[System.Globalization.Calendar#1](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.Globalization.Calendar/VB/calendar.vb#1)]\"\n  syntax:\n    content: >-\n      [System.Runtime.InteropServices.ComVisible(true)]\n\n      public abstract class Calendar : ICloneable\n  inheritance:\n  - System.Object\n  derivedClasses:\n  - System.Globalization.EastAsianLunisolarCalendar\n  - System.Globalization.GregorianCalendar\n  - System.Globalization.HebrewCalendar\n  - System.Globalization.HijriCalendar\n  - System.Globalization.JapaneseCalendar\n  - System.Globalization.JulianCalendar\n  - System.Globalization.KoreanCalendar\n  - System.Globalization.PersianCalendar\n  - System.Globalization.TaiwanCalendar\n  - System.Globalization.ThaiBuddhistCalendar\n  - System.Globalization.UmAlQuraCalendar\n  implements:\n  - System.ICloneable\n  inheritedMembers:\n  - System.Object.Equals(System.Object)\n  - System.Object.Equals(System.Object,System.Object)\n  - System.Object.GetHashCode\n  - System.Object.GetType\n  - System.Object.MemberwiseClone\n  - System.Object.ReferenceEquals(System.Object,System.Object)\n  - System.Object.ToString\n  attributes:\n  - type: System.Runtime.InteropServices.ComVisibleAttribute\n  version:\n  - netcore-1.0\n  - netcore-1.1\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - netstandard-1.0\n  - netstandard-1.1\n  - netstandard-1.2\n  - netstandard-1.3\n  - netstandard-1.4\n  - netstandard-1.6\n  - netstandard-2.0\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  monikers:\n  - netcore-1.0\n  - netcore-1.1\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - netstandard-1.0\n  - netstandard-1.1\n  - netstandard-1.2\n  - netstandard-1.3\n  - netstandard-1.4\n  - netstandard-1.6\n  - netstandard-2.0\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Globalization/Calendar.xml\n  ms.technology:\n  - dotnet-standard\n  author: rpetrusha\n  ms.author: ronpet\n  manager: wpickett\n- uid: System.Globalization.Calendar.#ctor\n  commentId: M:System.Globalization.Calendar.#ctor\n  id: '#ctor'\n  parent: System.Globalization.Calendar\n  langs:\n  - csharp\n  name: Calendar()\n  nameWithType: Calendar.Calendar()\n  fullName: Calendar.Calendar()\n  type: Constructor\n  assemblies:\n  - System.Globalization\n  - mscorlib\n  - netstandard\n  - System.Runtime\n  namespace: System.Globalization\n  summary: Initializes a new instance of the <xref href=\"System.Globalization.Calendar\"></xref> class.\n  remarks: ''\n  example:\n  - \"The following example demonstrates the members of the <xref:System.Globalization.Calendar> class.  \\n  \\n [!code-cpp[System.Globalization.Calendar#1](~/samples/snippets/cpp/VS_Snippets_CLR_System/system.Globalization.Calendar/CPP/calendar.cpp#1)]\\n [!code-csharp[System.Globalization.Calendar#1](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.Globalization.Calendar/CS/calendar.cs#1)]\\n [!code-vb[System.Globalization.Calendar#1](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.Globalization.Calendar/VB/calendar.vb#1)]\"\n  syntax:\n    content: protected Calendar ();\n    parameters: []\n  overload: System.Globalization.Calendar.#ctor*\n  exceptions: []\n  version:\n  - netcore-1.0\n  - netcore-1.1\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - netstandard-1.0\n  - netstandard-1.1\n  - netstandard-1.2\n  - netstandard-1.3\n  - netstandard-1.4\n  - netstandard-1.6\n  - netstandard-2.0\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  monikers:\n  - netcore-1.0\n  - netcore-1.1\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - netstandard-1.0\n  - netstandard-1.1\n  - netstandard-1.2\n  - netstandard-1.3\n  - netstandard-1.4\n  - netstandard-1.6\n  - netstandard-2.0\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Globalization/Calendar.xml\n  ms.technology:\n  - dotnet-standard\n  author: rpetrusha\n  ms.author: ronpet\n  manager: wpickett\n- uid: System.Globalization.Calendar.AddDays(System.DateTime,System.Int32)\n  commentId: M:System.Globalization.Calendar.AddDays(System.DateTime,System.Int32)\n  id: AddDays(System.DateTime,System.Int32)\n  parent: System.Globalization.Calendar\n  langs:\n  - csharp\n  name: AddDays(DateTime, Int32)\n  nameWithType: Calendar.AddDays(DateTime, Int32)\n  fullName: Calendar.AddDays(DateTime, Int32)\n  type: Method\n  assemblies:\n  - System.Globalization\n  - mscorlib\n  - netstandard\n  - System.Runtime\n  namespace: System.Globalization\n  summary: Returns a <xref href=\"System.DateTime\"></xref> that is the specified number of days away from the specified <xref href=\"System.DateTime\"></xref>.\n  remarks: \"The `days` value is added to the specified <xref:System.DateTime>. If `days` is negative, the resulting <xref:System.DateTime> is earlier than the specified <xref:System.DateTime>.  \\n  \\n The month part of the resulting <xref:System.DateTime> is affected if the resulting day is outside the month of the specified <xref:System.DateTime>. The year part of the resulting <xref:System.DateTime> is affected if the resulting month is outside the year of the specified <xref:System.DateTime>. The era part of the resulting <xref:System.DateTime> is affected if the resulting year is outside the era of the specified <xref:System.DateTime>. The time-of-day part of the resulting <xref:System.DateTime> remains the same as the specified <xref:System.DateTime>.  \\n  \\n The<xref:System.DateTime.Kind%2A> property of the returned <xref:System.DateTime> value always equals <xref:System.DateTimeKind?displayProperty=fullName>. You can preserve the <xref:System.DateTime.Kind%2A> property of the `time` parameter by calling the <xref:System.DateTime.SpecifyKind%2A?displayProperty=fullName> method, as the following example shows.  \\n  \\n [!code-csharp[System.Globalization.Calendar.AddMethods#1](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.globalization.calendar.addmethods/cs/add1.cs#1)]\\n [!code-vb[System.Globalization.Calendar.AddMethods#1](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.globalization.calendar.addmethods/vb/add1.vb#1)]\"\n  example:\n  - \"The following code example demonstrates the members of the <xref:System.Globalization.Calendar> class.  \\n  \\n [!code-cpp[System.Globalization.Calendar#1](~/samples/snippets/cpp/VS_Snippets_CLR_System/system.Globalization.Calendar/CPP/calendar.cpp#1)]\\n [!code-csharp[System.Globalization.Calendar#1](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.Globalization.Calendar/CS/calendar.cs#1)]\\n [!code-vb[System.Globalization.Calendar#1](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.Globalization.Calendar/VB/calendar.vb#1)]\"\n  syntax:\n    content: public virtual DateTime AddDays (DateTime time, int days);\n    parameters:\n    - id: time\n      type: System.DateTime\n      description: The <xref href=\"System.DateTime\"></xref> to which to add days.\n    - id: days\n      type: System.Int32\n      description: The number of days to add.\n    return:\n      type: System.DateTime\n      description: The <xref href=\"System.DateTime\"></xref> that results from adding the specified number of days to the specified <xref href=\"System.DateTime\"></xref>.\n  overload: System.Globalization.Calendar.AddDays*\n  exceptions:\n  - type: System.ArgumentException\n    commentId: T:System.ArgumentException\n    description: The resulting <xref href=\"System.DateTime\"></xref> is outside the supported range of this calendar.\n  - type: System.ArgumentOutOfRangeException\n    commentId: T:System.ArgumentOutOfRangeException\n    description: <code>days</code> is outside the supported range of the <xref href=\"System.DateTime\"></xref> return value.\n  version:\n  - netcore-1.0\n  - netcore-1.1\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - netstandard-1.0\n  - netstandard-1.1\n  - netstandard-1.2\n  - netstandard-1.3\n  - netstandard-1.4\n  - netstandard-1.6\n  - netstandard-2.0\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  monikers:\n  - netcore-1.0\n  - netcore-1.1\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - netstandard-1.0\n  - netstandard-1.1\n  - netstandard-1.2\n  - netstandard-1.3\n  - netstandard-1.4\n  - netstandard-1.6\n  - netstandard-2.0\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Globalization/Calendar.xml\n  ms.technology:\n  - dotnet-standard\n  author: rpetrusha\n  ms.author: ronpet\n  manager: wpickett\n- uid: System.Globalization.Calendar.AddHours(System.DateTime,System.Int32)\n  commentId: M:System.Globalization.Calendar.AddHours(System.DateTime,System.Int32)\n  id: AddHours(System.DateTime,System.Int32)\n  parent: System.Globalization.Calendar\n  langs:\n  - csharp\n  name: AddHours(DateTime, Int32)\n  nameWithType: Calendar.AddHours(DateTime, Int32)\n  fullName: Calendar.AddHours(DateTime, Int32)\n  type: Method\n  assemblies:\n  - System.Globalization\n  - mscorlib\n  - netstandard\n  - System.Runtime\n  namespace: System.Globalization\n  summary: Returns a <xref href=\"System.DateTime\"></xref> that is the specified number of hours away from the specified <xref href=\"System.DateTime\"></xref>.\n  remarks: \"The `hours` value is added to the specified <xref:System.DateTime>. If `hours` is negative, the resulting <xref:System.DateTime> is earlier than the specified <xref:System.DateTime>.  \\n  \\n The day part of the resulting <xref:System.DateTime> is affected if the resulting time is outside the day of the specified <xref:System.DateTime>. The month part of the resulting <xref:System.DateTime> is affected if the resulting day is outside the month of the specified <xref:System.DateTime>. The year part of the resulting <xref:System.DateTime> is affected if the resulting month is outside the year of the specified <xref:System.DateTime>. The era part of the resulting <xref:System.DateTime> is affected if the resulting year is outside the era of the specified <xref:System.DateTime>.  \\n  \\n The<xref:System.DateTime.Kind%2A> property of the returned <xref:System.DateTime> value always equals <xref:System.DateTimeKind?displayProperty=fullName>. You can preserve the <xref:System.DateTime.Kind%2A> property of the `time` parameter by calling the <xref:System.DateTime.SpecifyKind%2A?displayProperty=fullName> method, as the following example shows.  \\n  \\n [!code-csharp[System.Globalization.Calendar.AddMethods#2](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.globalization.calendar.addmethods/cs/add1.cs#2)]\\n [!code-vb[System.Globalization.Calendar.AddMethods#2](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.globalization.calendar.addmethods/vb/add1.vb#2)]\"\n  example:\n  - \"The following code example demonstrates the members of the <xref:System.Globalization.Calendar> class.  \\n  \\n [!code-cpp[System.Globalization.Calendar#1](~/samples/snippets/cpp/VS_Snippets_CLR_System/system.Globalization.Calendar/CPP/calendar.cpp#1)]\\n [!code-csharp[System.Globalization.Calendar#1](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.Globalization.Calendar/CS/calendar.cs#1)]\\n [!code-vb[System.Globalization.Calendar#1](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.Globalization.Calendar/VB/calendar.vb#1)]\"\n  syntax:\n    content: public virtual DateTime AddHours (DateTime time, int hours);\n    parameters:\n    - id: time\n      type: System.DateTime\n      description: The <xref href=\"System.DateTime\"></xref> to which to add hours.\n    - id: hours\n      type: System.Int32\n      description: The number of hours to add.\n    return:\n      type: System.DateTime\n      description: The <xref href=\"System.DateTime\"></xref> that results from adding the specified number of hours to the specified <xref href=\"System.DateTime\"></xref>.\n  overload: System.Globalization.Calendar.AddHours*\n  exceptions:\n  - type: System.ArgumentException\n    commentId: T:System.ArgumentException\n    description: The resulting <xref href=\"System.DateTime\"></xref> is outside the supported range of this calendar.\n  - type: System.ArgumentOutOfRangeException\n    commentId: T:System.ArgumentOutOfRangeException\n    description: <code>hours</code> is outside the supported range of the <xref href=\"System.DateTime\"></xref> return value.\n  version:\n  - netcore-1.0\n  - netcore-1.1\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - netstandard-1.0\n  - netstandard-1.1\n  - netstandard-1.2\n  - netstandard-1.3\n  - netstandard-1.4\n  - netstandard-1.6\n  - netstandard-2.0\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  monikers:\n  - netcore-1.0\n  - netcore-1.1\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - netstandard-1.0\n  - netstandard-1.1\n  - netstandard-1.2\n  - netstandard-1.3\n  - netstandard-1.4\n  - netstandard-1.6\n  - netstandard-2.0\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Globalization/Calendar.xml\n  ms.technology:\n  - dotnet-standard\n  author: rpetrusha\n  ms.author: ronpet\n  manager: wpickett\n- uid: System.Globalization.Calendar.AddMilliseconds(System.DateTime,System.Double)\n  commentId: M:System.Globalization.Calendar.AddMilliseconds(System.DateTime,System.Double)\n  id: AddMilliseconds(System.DateTime,System.Double)\n  parent: System.Globalization.Calendar\n  langs:\n  - csharp\n  name: AddMilliseconds(DateTime, Double)\n  nameWithType: Calendar.AddMilliseconds(DateTime, Double)\n  fullName: Calendar.AddMilliseconds(DateTime, Double)\n  type: Method\n  assemblies:\n  - System.Globalization\n  - mscorlib\n  - netstandard\n  - System.Runtime\n  namespace: System.Globalization\n  summary: Returns a <xref href=\"System.DateTime\"></xref> that is the specified number of milliseconds away from the specified <xref href=\"System.DateTime\"></xref>.\n  remarks: \"The `milliseconds` value is rounded to the nearest integer before it is added to the specified <xref:System.DateTime>. If `milliseconds` is negative, the resulting <xref:System.DateTime> is earlier than the specified <xref:System.DateTime>.  \\n  \\n The day part of the resulting <xref:System.DateTime> is affected if the resulting time is outside the day of the specified <xref:System.DateTime>. The month part of the resulting <xref:System.DateTime> is affected if the resulting day is outside the month of the specified <xref:System.DateTime>. The year part of the resulting <xref:System.DateTime> is affected if the resulting month is outside the year of the specified <xref:System.DateTime>. The era part of the resulting <xref:System.DateTime> is affected if the resulting year is outside the era of the specified <xref:System.DateTime>.  \\n  \\n The<xref:System.DateTime.Kind%2A> property of the returned <xref:System.DateTime> value always equals <xref:System.DateTimeKind?displayProperty=fullName>. You can preserve the <xref:System.DateTime.Kind%2A> property of the `time` parameter by calling the <xref:System.DateTime.SpecifyKind%2A?displayProperty=fullName> method, as the following example shows.  \\n  \\n [!code-csharp[System.Globalization.Calendar.AddMethods#3](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.globalization.calendar.addmethods/cs/add1.cs#3)]\\n [!code-vb[System.Globalization.Calendar.AddMethods#3](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.globalization.calendar.addmethods/vb/add1.vb#3)]\"\n  example:\n  - \"The following code example demonstrates the members of the <xref:System.Globalization.Calendar> class.  \\n  \\n [!code-cpp[System.Globalization.Calendar#1](~/samples/snippets/cpp/VS_Snippets_CLR_System/system.Globalization.Calendar/CPP/calendar.cpp#1)]\\n [!code-csharp[System.Globalization.Calendar#1](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.Globalization.Calendar/CS/calendar.cs#1)]\\n [!code-vb[System.Globalization.Calendar#1](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.Globalization.Calendar/VB/calendar.vb#1)]\"\n  syntax:\n    content: public virtual DateTime AddMilliseconds (DateTime time, double milliseconds);\n    parameters:\n    - id: time\n      type: System.DateTime\n      description: The <xref href=\"System.DateTime\"></xref> to add milliseconds to.\n    - id: milliseconds\n      type: System.Double\n      description: The number of milliseconds to add.\n    return:\n      type: System.DateTime\n      description: The <xref href=\"System.DateTime\"></xref> that results from adding the specified number of milliseconds to the specified <xref href=\"System.DateTime\"></xref>.\n  overload: System.Globalization.Calendar.AddMilliseconds*\n  exceptions:\n  - type: System.ArgumentException\n    commentId: T:System.ArgumentException\n    description: The resulting <xref href=\"System.DateTime\"></xref> is outside the supported range of this calendar.\n  - type: System.ArgumentOutOfRangeException\n    commentId: T:System.ArgumentOutOfRangeException\n    description: <code>milliseconds</code> is outside the supported range of the <xref href=\"System.DateTime\"></xref> return value.\n  version:\n  - netcore-1.0\n  - netcore-1.1\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - netstandard-1.0\n  - netstandard-1.1\n  - netstandard-1.2\n  - netstandard-1.3\n  - netstandard-1.4\n  - netstandard-1.6\n  - netstandard-2.0\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  monikers:\n  - netcore-1.0\n  - netcore-1.1\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - netstandard-1.0\n  - netstandard-1.1\n  - netstandard-1.2\n  - netstandard-1.3\n  - netstandard-1.4\n  - netstandard-1.6\n  - netstandard-2.0\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Globalization/Calendar.xml\n  ms.technology:\n  - dotnet-standard\n  author: rpetrusha\n  ms.author: ronpet\n  manager: wpickett\n- uid: System.Globalization.Calendar.AddMinutes(System.DateTime,System.Int32)\n  commentId: M:System.Globalization.Calendar.AddMinutes(System.DateTime,System.Int32)\n  id: AddMinutes(System.DateTime,System.Int32)\n  parent: System.Globalization.Calendar\n  langs:\n  - csharp\n  name: AddMinutes(DateTime, Int32)\n  nameWithType: Calendar.AddMinutes(DateTime, Int32)\n  fullName: Calendar.AddMinutes(DateTime, Int32)\n  type: Method\n  assemblies:\n  - System.Globalization\n  - mscorlib\n  - netstandard\n  - System.Runtime\n  namespace: System.Globalization\n  summary: Returns a <xref href=\"System.DateTime\"></xref> that is the specified number of minutes away from the specified <xref href=\"System.DateTime\"></xref>.\n  remarks: \"The `minutes` value is added to the specified <xref:System.DateTime>. If `minutes` is negative, the resulting <xref:System.DateTime> is earlier than the specified <xref:System.DateTime>.  \\n  \\n The day part of the resulting <xref:System.DateTime> is affected if the resulting time is outside the day of the specified <xref:System.DateTime>. The month part of the resulting <xref:System.DateTime> is affected if the resulting day is outside the month of the specified <xref:System.DateTime>. The year part of the resulting <xref:System.DateTime> is affected if the resulting month is outside the year of the specified <xref:System.DateTime>. The era part of the resulting <xref:System.DateTime> is affected if the resulting year is outside the era of the specified <xref:System.DateTime>.  \\n  \\n The<xref:System.DateTime.Kind%2A> property of the returned <xref:System.DateTime> value always equals <xref:System.DateTimeKind?displayProperty=fullName>. You can preserve the <xref:System.DateTime.Kind%2A> property of the `time` parameter by calling the <xref:System.DateTime.SpecifyKind%2A?displayProperty=fullName> method, as the following example shows.  \\n  \\n [!code-csharp[System.Globalization.Calendar.AddMethods#4](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.globalization.calendar.addmethods/cs/add1.cs#4)]\\n [!code-vb[System.Globalization.Calendar.AddMethods#4](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.globalization.calendar.addmethods/vb/add1.vb#4)]\"\n  example:\n  - \"The following code example demonstrates the members of the <xref:System.Globalization.Calendar> class.  \\n  \\n [!code-cpp[System.Globalization.Calendar#1](~/samples/snippets/cpp/VS_Snippets_CLR_System/system.Globalization.Calendar/CPP/calendar.cpp#1)]\\n [!code-csharp[System.Globalization.Calendar#1](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.Globalization.Calendar/CS/calendar.cs#1)]\\n [!code-vb[System.Globalization.Calendar#1](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.Globalization.Calendar/VB/calendar.vb#1)]\"\n  syntax:\n    content: public virtual DateTime AddMinutes (DateTime time, int minutes);\n    parameters:\n    - id: time\n      type: System.DateTime\n      description: The <xref href=\"System.DateTime\"></xref> to which to add minutes.\n    - id: minutes\n      type: System.Int32\n      description: The number of minutes to add.\n    return:\n      type: System.DateTime\n      description: The <xref href=\"System.DateTime\"></xref> that results from adding the specified number of minutes to the specified <xref href=\"System.DateTime\"></xref>.\n  overload: System.Globalization.Calendar.AddMinutes*\n  exceptions:\n  - type: System.ArgumentException\n    commentId: T:System.ArgumentException\n    description: The resulting <xref href=\"System.DateTime\"></xref> is outside the supported range of this calendar.\n  - type: System.ArgumentOutOfRangeException\n    commentId: T:System.ArgumentOutOfRangeException\n    description: <code>minutes</code> is outside the supported range of the <xref href=\"System.DateTime\"></xref> return value.\n  version:\n  - netcore-1.0\n  - netcore-1.1\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - netstandard-1.0\n  - netstandard-1.1\n  - netstandard-1.2\n  - netstandard-1.3\n  - netstandard-1.4\n  - netstandard-1.6\n  - netstandard-2.0\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  monikers:\n  - netcore-1.0\n  - netcore-1.1\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - netstandard-1.0\n  - netstandard-1.1\n  - netstandard-1.2\n  - netstandard-1.3\n  - netstandard-1.4\n  - netstandard-1.6\n  - netstandard-2.0\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Globalization/Calendar.xml\n  ms.technology:\n  - dotnet-standard\n  author: rpetrusha\n  ms.author: ronpet\n  manager: wpickett\n- uid: System.Globalization.Calendar.AddMonths(System.DateTime,System.Int32)\n  commentId: M:System.Globalization.Calendar.AddMonths(System.DateTime,System.Int32)\n  id: AddMonths(System.DateTime,System.Int32)\n  parent: System.Globalization.Calendar\n  langs:\n  - csharp\n  name: AddMonths(DateTime, Int32)\n  nameWithType: Calendar.AddMonths(DateTime, Int32)\n  fullName: Calendar.AddMonths(DateTime, Int32)\n  type: Method\n  assemblies:\n  - System.Globalization\n  - mscorlib\n  - netstandard\n  - System.Runtime\n  namespace: System.Globalization\n  summary: When overridden in a derived class, returns a <xref href=\"System.DateTime\"></xref> that is the specified number of months away from the specified <xref href=\"System.DateTime\"></xref>.\n  remarks: \"The `months` value is added to the specified <xref:System.DateTime>. If `months` is negative, the resulting <xref:System.DateTime> is earlier than the specified <xref:System.DateTime>.  \\n  \\n The day part of the resulting <xref:System.DateTime> is affected if the resulting day is not a valid day in the resulting month of the resulting year. It is changed to the last valid day in the resulting month of the resulting year. The year part of the resulting <xref:System.DateTime> is affected if the resulting month is outside the year of the specified <xref:System.DateTime>. The era part of the resulting <xref:System.DateTime> is affected if the resulting year is outside the era of the specified <xref:System.DateTime>. The time-of-day part of the resulting <xref:System.DateTime> remains the same as the specified <xref:System.DateTime>.  \\n  \\n For example, suppose that the current calendar has 12 months, where the fourth month has 30 days and the tenth month has 31 days. If the specified month is the tenth month, the specified day is the 31st day of that month, and the value of the `months` parameter is 6, the resulting year is one more than the specified year, the resulting month is the fourth month, and the resulting day is the 30th day, which is the last day of the resulting month.  \\n  \\n If the value of the `months` parameter is negative, the resulting <xref:System.DateTime> is earlier than the specified <xref:System.DateTime>.  \\n  \\n The<xref:System.DateTime.Kind%2A> property of the returned <xref:System.DateTime> value always equals <xref:System.DateTimeKind?displayProperty=fullName>. You can preserve the <xref:System.DateTime.Kind%2A> property of the `time` parameter by calling the <xref:System.DateTime.SpecifyKind%2A?displayProperty=fullName> method, as the following example shows.  \\n  \\n [!code-csharp[System.Globalization.Calendar.AddMethods#5](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.globalization.calendar.addmethods/cs/add1.cs#5)]\\n [!code-vb[System.Globalization.Calendar.AddMethods#5](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.globalization.calendar.addmethods/vb/add1.vb#5)]\"\n  example:\n  - \"The following code example demonstrates the members of the <xref:System.Globalization.Calendar> class.  \\n  \\n [!code-cpp[System.Globalization.Calendar#1](~/samples/snippets/cpp/VS_Snippets_CLR_System/system.Globalization.Calendar/CPP/calendar.cpp#1)]\\n [!code-csharp[System.Globalization.Calendar#1](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.Globalization.Calendar/CS/calendar.cs#1)]\\n [!code-vb[System.Globalization.Calendar#1](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.Globalization.Calendar/VB/calendar.vb#1)]\"\n  syntax:\n    content: public abstract DateTime AddMonths (DateTime time, int months);\n    parameters:\n    - id: time\n      type: System.DateTime\n      description: The <xref href=\"System.DateTime\"></xref> to which to add months.\n    - id: months\n      type: System.Int32\n      description: The number of months to add.\n    return:\n      type: System.DateTime\n      description: The <xref href=\"System.DateTime\"></xref> that results from adding the specified number of months to the specified <xref href=\"System.DateTime\"></xref>.\n  overload: System.Globalization.Calendar.AddMonths*\n  exceptions:\n  - type: System.ArgumentException\n    commentId: T:System.ArgumentException\n    description: The resulting <xref href=\"System.DateTime\"></xref> is outside the supported range of this calendar.\n  - type: System.ArgumentOutOfRangeException\n    commentId: T:System.ArgumentOutOfRangeException\n    description: <code>months</code> is outside the supported range of the <xref href=\"System.DateTime\"></xref> return value.\n  version:\n  - netcore-1.0\n  - netcore-1.1\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - netstandard-1.0\n  - netstandard-1.1\n  - netstandard-1.2\n  - netstandard-1.3\n  - netstandard-1.4\n  - netstandard-1.6\n  - netstandard-2.0\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  monikers:\n  - netcore-1.0\n  - netcore-1.1\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - netstandard-1.0\n  - netstandard-1.1\n  - netstandard-1.2\n  - netstandard-1.3\n  - netstandard-1.4\n  - netstandard-1.6\n  - netstandard-2.0\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Globalization/Calendar.xml\n  ms.technology:\n  - dotnet-standard\n  author: rpetrusha\n  ms.author: ronpet\n  manager: wpickett\n- uid: System.Globalization.Calendar.AddSeconds(System.DateTime,System.Int32)\n  commentId: M:System.Globalization.Calendar.AddSeconds(System.DateTime,System.Int32)\n  id: AddSeconds(System.DateTime,System.Int32)\n  parent: System.Globalization.Calendar\n  langs:\n  - csharp\n  name: AddSeconds(DateTime, Int32)\n  nameWithType: Calendar.AddSeconds(DateTime, Int32)\n  fullName: Calendar.AddSeconds(DateTime, Int32)\n  type: Method\n  assemblies:\n  - System.Globalization\n  - mscorlib\n  - netstandard\n  - System.Runtime\n  namespace: System.Globalization\n  summary: Returns a <xref href=\"System.DateTime\"></xref> that is the specified number of seconds away from the specified <xref href=\"System.DateTime\"></xref>.\n  remarks: \"The `seconds` value is added to the specified <xref:System.DateTime>. If `seconds` is negative, the resulting <xref:System.DateTime> is earlier than the specified <xref:System.DateTime>.  \\n  \\n The day part of the resulting <xref:System.DateTime> is affected if the resulting time is outside the day of the specified <xref:System.DateTime>. The month part of the resulting <xref:System.DateTime> is affected if the resulting day is outside the month of the specified <xref:System.DateTime>. The year part of the resulting <xref:System.DateTime> is affected if the resulting month is outside the year of the specified <xref:System.DateTime>. The era part of the resulting <xref:System.DateTime> is affected if the resulting year is outside the era of the specified <xref:System.DateTime>.  \\n  \\n The<xref:System.DateTime.Kind%2A> property of the returned <xref:System.DateTime> value always equals <xref:System.DateTimeKind?displayProperty=fullName>. You can preserve the <xref:System.DateTime.Kind%2A> property of the `time` parameter by calling the <xref:System.DateTime.SpecifyKind%2A?displayProperty=fullName> method, as the following example shows.  \\n  \\n [!code-csharp[System.Globalization.Calendar.AddMethods#6](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.globalization.calendar.addmethods/cs/add1.cs#6)]\\n [!code-vb[System.Globalization.Calendar.AddMethods#6](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.globalization.calendar.addmethods/vb/add1.vb#6)]\"\n  example:\n  - \"The following code example demonstrates the members of the <xref:System.Globalization.Calendar> class.  \\n  \\n [!code-cpp[System.Globalization.Calendar#1](~/samples/snippets/cpp/VS_Snippets_CLR_System/system.Globalization.Calendar/CPP/calendar.cpp#1)]\\n [!code-csharp[System.Globalization.Calendar#1](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.Globalization.Calendar/CS/calendar.cs#1)]\\n [!code-vb[System.Globalization.Calendar#1](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.Globalization.Calendar/VB/calendar.vb#1)]\"\n  syntax:\n    content: public virtual DateTime AddSeconds (DateTime time, int seconds);\n    parameters:\n    - id: time\n      type: System.DateTime\n      description: The <xref href=\"System.DateTime\"></xref> to which to add seconds.\n    - id: seconds\n      type: System.Int32\n      description: The number of seconds to add.\n    return:\n      type: System.DateTime\n      description: The <xref href=\"System.DateTime\"></xref> that results from adding the specified number of seconds to the specified <xref href=\"System.DateTime\"></xref>.\n  overload: System.Globalization.Calendar.AddSeconds*\n  exceptions:\n  - type: System.ArgumentException\n    commentId: T:System.ArgumentException\n    description: The resulting <xref href=\"System.DateTime\"></xref> is outside the supported range of this calendar.\n  - type: System.ArgumentOutOfRangeException\n    commentId: T:System.ArgumentOutOfRangeException\n    description: <code>seconds</code> is outside the supported range of the <xref href=\"System.DateTime\"></xref> return value.\n  version:\n  - netcore-1.0\n  - netcore-1.1\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - netstandard-1.0\n  - netstandard-1.1\n  - netstandard-1.2\n  - netstandard-1.3\n  - netstandard-1.4\n  - netstandard-1.6\n  - netstandard-2.0\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  monikers:\n  - netcore-1.0\n  - netcore-1.1\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - netstandard-1.0\n  - netstandard-1.1\n  - netstandard-1.2\n  - netstandard-1.3\n  - netstandard-1.4\n  - netstandard-1.6\n  - netstandard-2.0\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Globalization/Calendar.xml\n  ms.technology:\n  - dotnet-standard\n  author: rpetrusha\n  ms.author: ronpet\n  manager: wpickett\n- uid: System.Globalization.Calendar.AddWeeks(System.DateTime,System.Int32)\n  commentId: M:System.Globalization.Calendar.AddWeeks(System.DateTime,System.Int32)\n  id: AddWeeks(System.DateTime,System.Int32)\n  parent: System.Globalization.Calendar\n  langs:\n  - csharp\n  name: AddWeeks(DateTime, Int32)\n  nameWithType: Calendar.AddWeeks(DateTime, Int32)\n  fullName: Calendar.AddWeeks(DateTime, Int32)\n  type: Method\n  assemblies:\n  - System.Globalization\n  - mscorlib\n  - netstandard\n  - System.Runtime\n  namespace: System.Globalization\n  summary: Returns a <xref href=\"System.DateTime\"></xref> that is the specified number of weeks away from the specified <xref href=\"System.DateTime\"></xref>.\n  remarks: \"The `weeks` value is added to the specified <xref:System.DateTime>. If `weeks` is negative, the resulting <xref:System.DateTime> is earlier than the specified <xref:System.DateTime>.  \\n  \\n The month part of the resulting <xref:System.DateTime> is affected if the resulting day is outside the month of the specified <xref:System.DateTime>. The year part of the resulting <xref:System.DateTime> is affected if the resulting month is outside the year of the specified <xref:System.DateTime>. The era part of the resulting <xref:System.DateTime> is affected if the resulting year is outside the era of the specified <xref:System.DateTime>. The time-of-day part of the resulting <xref:System.DateTime> remains the same as the specified <xref:System.DateTime>.  \\n  \\n In all .NET Framework classes derived from the <xref:System.Globalization.Calendar> class, a week is defined as seven days.  \\n  \\n The<xref:System.DateTime.Kind%2A> property of the returned <xref:System.DateTime> value always equals <xref:System.DateTimeKind?displayProperty=fullName>. You can preserve the <xref:System.DateTime.Kind%2A> property of the `time` parameter by calling the <xref:System.DateTime.SpecifyKind%2A?displayProperty=fullName> method, as the following example shows.  \\n  \\n [!code-csharp[System.Globalization.Calendar.AddMethods#7](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.globalization.calendar.addmethods/cs/add1.cs#7)]\\n [!code-vb[System.Globalization.Calendar.AddMethods#7](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.globalization.calendar.addmethods/vb/add1.vb#7)]\"\n  example:\n  - \"The following code example demonstrates the members of the <xref:System.Globalization.Calendar> class.  \\n  \\n [!code-cpp[System.Globalization.Calendar#1](~/samples/snippets/cpp/VS_Snippets_CLR_System/system.Globalization.Calendar/CPP/calendar.cpp#1)]\\n [!code-csharp[System.Globalization.Calendar#1](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.Globalization.Calendar/CS/calendar.cs#1)]\\n [!code-vb[System.Globalization.Calendar#1](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.Globalization.Calendar/VB/calendar.vb#1)]\"\n  syntax:\n    content: public virtual DateTime AddWeeks (DateTime time, int weeks);\n    parameters:\n    - id: time\n      type: System.DateTime\n      description: The <xref href=\"System.DateTime\"></xref> to which to add weeks.\n    - id: weeks\n      type: System.Int32\n      description: The number of weeks to add.\n    return:\n      type: System.DateTime\n      description: The <xref href=\"System.DateTime\"></xref> that results from adding the specified number of weeks to the specified <xref href=\"System.DateTime\"></xref>.\n  overload: System.Globalization.Calendar.AddWeeks*\n  exceptions:\n  - type: System.ArgumentException\n    commentId: T:System.ArgumentException\n    description: The resulting <xref href=\"System.DateTime\"></xref> is outside the supported range of this calendar.\n  - type: System.ArgumentOutOfRangeException\n    commentId: T:System.ArgumentOutOfRangeException\n    description: <code>weeks</code> is outside the supported range of the <xref href=\"System.DateTime\"></xref> return value.\n  version:\n  - netcore-1.0\n  - netcore-1.1\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - netstandard-1.0\n  - netstandard-1.1\n  - netstandard-1.2\n  - netstandard-1.3\n  - netstandard-1.4\n  - netstandard-1.6\n  - netstandard-2.0\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  monikers:\n  - netcore-1.0\n  - netcore-1.1\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - netstandard-1.0\n  - netstandard-1.1\n  - netstandard-1.2\n  - netstandard-1.3\n  - netstandard-1.4\n  - netstandard-1.6\n  - netstandard-2.0\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Globalization/Calendar.xml\n  ms.technology:\n  - dotnet-standard\n  author: rpetrusha\n  ms.author: ronpet\n  manager: wpickett\n- uid: System.Globalization.Calendar.AddYears(System.DateTime,System.Int32)\n  commentId: M:System.Globalization.Calendar.AddYears(System.DateTime,System.Int32)\n  id: AddYears(System.DateTime,System.Int32)\n  parent: System.Globalization.Calendar\n  langs:\n  - csharp\n  name: AddYears(DateTime, Int32)\n  nameWithType: Calendar.AddYears(DateTime, Int32)\n  fullName: Calendar.AddYears(DateTime, Int32)\n  type: Method\n  assemblies:\n  - System.Globalization\n  - mscorlib\n  - netstandard\n  - System.Runtime\n  namespace: System.Globalization\n  summary: When overridden in a derived class, returns a <xref href=\"System.DateTime\"></xref> that is the specified number of years away from the specified <xref href=\"System.DateTime\"></xref>.\n  remarks: \"The `years` value is added to the specified <xref:System.DateTime>. If `years` is negative, the resulting <xref:System.DateTime> is earlier than the specified <xref:System.DateTime>.  \\n  \\n The day part of the resulting <xref:System.DateTime> is affected if the resulting day is not a valid day in the resulting month of the resulting year. It is changed to the last valid day in the resulting month of the resulting year. The month part of the resulting <xref:System.DateTime> is affected if the resulting month is not a valid month in the resulting year. It is changed to the last valid month in the resulting year. The era part of the resulting <xref:System.DateTime> is affected if the resulting year is outside the era of the specified <xref:System.DateTime>. The time-of-day part of the resulting <xref:System.DateTime> remains the same as the specified <xref:System.DateTime>.  \\n  \\n For example, in the Gregorian calendar, February has 28 days, except during a leap year when it has 29 days. If the specified date is the 29th day of February in a leap year and the value of `years` is 1, the resulting date is the 28th day of February in the following year.  \\n  \\n If `years` is negative, the resulting <xref:System.DateTime> is earlier than the specified <xref:System.DateTime>.  \\n  \\n The<xref:System.DateTime.Kind%2A> property of the returned <xref:System.DateTime> value always equals <xref:System.DateTimeKind?displayProperty=fullName>. You can preserve the <xref:System.DateTime.Kind%2A> property of the `time` parameter by calling the <xref:System.DateTime.SpecifyKind%2A?displayProperty=fullName> method, as the following example shows.  \\n  \\n [!code-csharp[System.Globalization.Calendar.AddMethods#8](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.globalization.calendar.addmethods/cs/add1.cs#8)]\\n [!code-vb[System.Globalization.Calendar.AddMethods#8](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.globalization.calendar.addmethods/vb/add1.vb#8)]\"\n  example:\n  - \"The following code example demonstrates the members of the <xref:System.Globalization.Calendar> class.  \\n  \\n [!code-cpp[System.Globalization.Calendar#1](~/samples/snippets/cpp/VS_Snippets_CLR_System/system.Globalization.Calendar/CPP/calendar.cpp#1)]\\n [!code-csharp[System.Globalization.Calendar#1](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.Globalization.Calendar/CS/calendar.cs#1)]\\n [!code-vb[System.Globalization.Calendar#1](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.Globalization.Calendar/VB/calendar.vb#1)]\"\n  syntax:\n    content: public abstract DateTime AddYears (DateTime time, int years);\n    parameters:\n    - id: time\n      type: System.DateTime\n      description: The <xref href=\"System.DateTime\"></xref> to which to add years.\n    - id: years\n      type: System.Int32\n      description: The number of years to add.\n    return:\n      type: System.DateTime\n      description: The <xref href=\"System.DateTime\"></xref> that results from adding the specified number of years to the specified <xref href=\"System.DateTime\"></xref>.\n  overload: System.Globalization.Calendar.AddYears*\n  exceptions:\n  - type: System.ArgumentException\n    commentId: T:System.ArgumentException\n    description: The resulting <xref href=\"System.DateTime\"></xref> is outside the supported range of this calendar.\n  - type: System.ArgumentOutOfRangeException\n    commentId: T:System.ArgumentOutOfRangeException\n    description: <code>years</code> is outside the supported range of the <xref href=\"System.DateTime\"></xref> return value.\n  version:\n  - netcore-1.0\n  - netcore-1.1\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - netstandard-1.0\n  - netstandard-1.1\n  - netstandard-1.2\n  - netstandard-1.3\n  - netstandard-1.4\n  - netstandard-1.6\n  - netstandard-2.0\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  monikers:\n  - netcore-1.0\n  - netcore-1.1\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - netstandard-1.0\n  - netstandard-1.1\n  - netstandard-1.2\n  - netstandard-1.3\n  - netstandard-1.4\n  - netstandard-1.6\n  - netstandard-2.0\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Globalization/Calendar.xml\n  ms.technology:\n  - dotnet-standard\n  author: rpetrusha\n  ms.author: ronpet\n  manager: wpickett\n- uid: System.Globalization.Calendar.AlgorithmType\n  commentId: P:System.Globalization.Calendar.AlgorithmType\n  id: AlgorithmType\n  parent: System.Globalization.Calendar\n  langs:\n  - csharp\n  name: AlgorithmType\n  nameWithType: Calendar.AlgorithmType\n  fullName: Calendar.AlgorithmType\n  type: Property\n  assemblies:\n  - mscorlib\n  - netstandard\n  - System.Runtime\n  namespace: System.Globalization\n  summary: Gets a value indicating whether the current calendar is solar-based, lunar-based, or a combination of both.\n  remarks: ''\n  example:\n  - \"The following example uses reflection to instantiate each <xref:System.Globalization.Calendar> type found in the .NET Framework and displays the value of its <xref:System.Globalization.Calendar.AlgorithmType%2A> property.  \\n  \\n [!code-csharp[System.Globalization.Calendar.AlgorithmType#1](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.globalization.calendar.algorithmtype/cs/algorithmtype1.cs#1)]\\n [!code-vb[System.Globalization.Calendar.AlgorithmType#1](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.globalization.calendar.algorithmtype/vb/algorithmtype1.vb#1)]\"\n  syntax:\n    content: >-\n      [System.Runtime.InteropServices.ComVisible(false)]\n\n      public virtual System.Globalization.CalendarAlgorithmType AlgorithmType { get; }\n    return:\n      type: System.Globalization.CalendarAlgorithmType\n      description: One of the <xref href=\"System.Globalization.CalendarAlgorithmType\"></xref> values.\n  overload: System.Globalization.Calendar.AlgorithmType*\n  exceptions: []\n  attributes:\n  - type: System.Runtime.InteropServices.ComVisibleAttribute\n  version:\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - netstandard-2.0\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  monikers:\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - netstandard-2.0\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Globalization/Calendar.xml\n  ms.technology:\n  - dotnet-standard\n  author: rpetrusha\n  ms.author: ronpet\n  manager: wpickett\n- uid: System.Globalization.Calendar.Clone\n  commentId: M:System.Globalization.Calendar.Clone\n  id: Clone\n  parent: System.Globalization.Calendar\n  langs:\n  - csharp\n  name: Clone()\n  nameWithType: Calendar.Clone()\n  fullName: Calendar.Clone()\n  type: Method\n  assemblies:\n  - mscorlib\n  - netstandard\n  - System.Runtime\n  namespace: System.Globalization\n  summary: Creates a new object that is a copy of the current <xref href=\"System.Globalization.Calendar\"></xref> object.\n  remarks: The new memberwise clone is not read-only.\n  syntax:\n    content: >-\n      [System.Runtime.InteropServices.ComVisible(false)]\n\n      public virtual object Clone ();\n    parameters: []\n    return:\n      type: System.Object\n      description: A new instance of <xref href=\"System.Object\"></xref> that is the memberwise clone of the current <xref href=\"System.Globalization.Calendar\"></xref> object.\n  overload: System.Globalization.Calendar.Clone*\n  exceptions: []\n  attributes:\n  - type: System.Runtime.InteropServices.ComVisibleAttribute\n  version:\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - netstandard-2.0\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  monikers:\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - netstandard-2.0\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Globalization/Calendar.xml\n  ms.technology:\n  - dotnet-standard\n  author: rpetrusha\n  ms.author: ronpet\n  manager: wpickett\n- uid: System.Globalization.Calendar.CurrentEra\n  commentId: F:System.Globalization.Calendar.CurrentEra\n  id: CurrentEra\n  parent: System.Globalization.Calendar\n  langs:\n  - csharp\n  name: CurrentEra\n  nameWithType: Calendar.CurrentEra\n  fullName: Calendar.CurrentEra\n  type: Field\n  assemblies:\n  - System.Globalization\n  - mscorlib\n  - netstandard\n  - System.Runtime\n  namespace: System.Globalization\n  summary: Represents the current era of the current calendar.\n  remarks: The <xref:System.Globalization.Calendar.CurrentEra> field represents the index of the current era in the <xref:System.Globalization.Calendar.Eras%2A> array. Because eras are arranged in reverse chronological order (from the current era to earlier eras), this field is a constant that has a value of 0.\n  syntax:\n    content: public const int CurrentEra = 0;\n    return:\n      type: System.Int32\n      description: ''\n  exceptions: []\n  version:\n  - netcore-1.0\n  - netcore-1.1\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - netstandard-1.0\n  - netstandard-1.1\n  - netstandard-1.2\n  - netstandard-1.3\n  - netstandard-1.4\n  - netstandard-1.6\n  - netstandard-2.0\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  monikers:\n  - netcore-1.0\n  - netcore-1.1\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - netstandard-1.0\n  - netstandard-1.1\n  - netstandard-1.2\n  - netstandard-1.3\n  - netstandard-1.4\n  - netstandard-1.6\n  - netstandard-2.0\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Globalization/Calendar.xml\n  ms.technology:\n  - dotnet-standard\n  author: rpetrusha\n  ms.author: ronpet\n  manager: wpickett\n- uid: System.Globalization.Calendar.DaysInYearBeforeMinSupportedYear\n  commentId: P:System.Globalization.Calendar.DaysInYearBeforeMinSupportedYear\n  id: DaysInYearBeforeMinSupportedYear\n  parent: System.Globalization.Calendar\n  langs:\n  - csharp\n  name: DaysInYearBeforeMinSupportedYear\n  nameWithType: Calendar.DaysInYearBeforeMinSupportedYear\n  fullName: Calendar.DaysInYearBeforeMinSupportedYear\n  type: Property\n  assemblies:\n  - mscorlib\n  - netstandard\n  - System.Runtime\n  namespace: System.Globalization\n  summary: Gets the number of days in the year that precedes the year that is specified by the <xref href=\"System.Globalization.Calendar.MinSupportedDateTime\"></xref> property.\n  remarks: This property returns a constant value of 365. Note that the property value can be overridden by classes derived from the <xref:System.Globalization.Calendar> class.\n  syntax:\n    content: protected virtual int DaysInYearBeforeMinSupportedYear { get; }\n    return:\n      type: System.Int32\n      description: The number of days in the year that precedes the year specified by <xref href=\"System.Globalization.Calendar.MinSupportedDateTime\"></xref>.\n  overload: System.Globalization.Calendar.DaysInYearBeforeMinSupportedYear*\n  exceptions: []\n  version:\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - netstandard-2.0\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  monikers:\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - netstandard-2.0\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Globalization/Calendar.xml\n  ms.technology:\n  - dotnet-standard\n  author: rpetrusha\n  ms.author: ronpet\n  manager: wpickett\n- uid: System.Globalization.Calendar.Eras\n  commentId: P:System.Globalization.Calendar.Eras\n  id: Eras\n  parent: System.Globalization.Calendar\n  langs:\n  - csharp\n  name: Eras\n  nameWithType: Calendar.Eras\n  fullName: Calendar.Eras\n  type: Property\n  assemblies:\n  - System.Globalization\n  - mscorlib\n  - netstandard\n  - System.Runtime\n  namespace: System.Globalization\n  summary: When overridden in a derived class, gets the list of eras in the current calendar.\n  remarks: The eras are in reverse chronological order, with the current era as the first element of the array, and the oldest era as the last element of the array. For example, the value of the current era in <xref:System.Globalization.JapaneseCalendar> is 4, which is the first element of the array.\n  example:\n  - \"The following code example displays the values contained in <xref:System.Globalization.JapaneseCalendar.Eras%2A?displayProperty=fullName>.  \\n  \\n [!code-cpp[System.Globalization.JapaneseCalendar.Eras#1](~/samples/snippets/cpp/VS_Snippets_CLR_System/system.Globalization.JapaneseCalendar.Eras/CPP/yslin_japanesecalendar_eras.cpp#1)]\\n [!code-csharp[System.Globalization.JapaneseCalendar.Eras#1](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.Globalization.JapaneseCalendar.Eras/CS/yslin_japanesecalendar_eras.cs#1)]\\n [!code-vb[System.Globalization.JapaneseCalendar.Eras#1](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.Globalization.JapaneseCalendar.Eras/VB/yslin_japanesecalendar_eras.vb#1)]\"\n  syntax:\n    content: public abstract int[] Eras { get; }\n    return:\n      type: System.Int32[]\n      description: An array of integers that represents the eras in the current calendar.\n  overload: System.Globalization.Calendar.Eras*\n  exceptions: []\n  version:\n  - netcore-1.0\n  - netcore-1.1\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - netstandard-1.0\n  - netstandard-1.1\n  - netstandard-1.2\n  - netstandard-1.3\n  - netstandard-1.4\n  - netstandard-1.6\n  - netstandard-2.0\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  monikers:\n  - netcore-1.0\n  - netcore-1.1\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - netstandard-1.0\n  - netstandard-1.1\n  - netstandard-1.2\n  - netstandard-1.3\n  - netstandard-1.4\n  - netstandard-1.6\n  - netstandard-2.0\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Globalization/Calendar.xml\n  ms.technology:\n  - dotnet-standard\n  author: rpetrusha\n  ms.author: ronpet\n  manager: wpickett\n- uid: System.Globalization.Calendar.GetDayOfMonth(System.DateTime)\n  commentId: M:System.Globalization.Calendar.GetDayOfMonth(System.DateTime)\n  id: GetDayOfMonth(System.DateTime)\n  parent: System.Globalization.Calendar\n  langs:\n  - csharp\n  name: GetDayOfMonth(DateTime)\n  nameWithType: Calendar.GetDayOfMonth(DateTime)\n  fullName: Calendar.GetDayOfMonth(DateTime)\n  type: Method\n  assemblies:\n  - System.Globalization\n  - mscorlib\n  - netstandard\n  - System.Runtime\n  namespace: System.Globalization\n  summary: When overridden in a derived class, returns the day of the month in the specified <xref href=\"System.DateTime\"></xref>.\n  remarks: ''\n  example:\n  - \"The following code example demonstrates the members of the <xref:System.Globalization.Calendar> class.  \\n  \\n [!code-cpp[System.Globalization.Calendar#1](~/samples/snippets/cpp/VS_Snippets_CLR_System/system.Globalization.Calendar/CPP/calendar.cpp#1)]\\n [!code-csharp[System.Globalization.Calendar#1](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.Globalization.Calendar/CS/calendar.cs#1)]\\n [!code-vb[System.Globalization.Calendar#1](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.Globalization.Calendar/VB/calendar.vb#1)]\"\n  syntax:\n    content: public abstract int GetDayOfMonth (DateTime time);\n    parameters:\n    - id: time\n      type: System.DateTime\n      description: The <xref href=\"System.DateTime\"></xref> to read.\n    return:\n      type: System.Int32\n      description: A positive integer that represents the day of the month in the <code>time</code> parameter.\n  overload: System.Globalization.Calendar.GetDayOfMonth*\n  exceptions: []\n  version:\n  - netcore-1.0\n  - netcore-1.1\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - netstandard-1.0\n  - netstandard-1.1\n  - netstandard-1.2\n  - netstandard-1.3\n  - netstandard-1.4\n  - netstandard-1.6\n  - netstandard-2.0\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  monikers:\n  - netcore-1.0\n  - netcore-1.1\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - netstandard-1.0\n  - netstandard-1.1\n  - netstandard-1.2\n  - netstandard-1.3\n  - netstandard-1.4\n  - netstandard-1.6\n  - netstandard-2.0\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Globalization/Calendar.xml\n  ms.technology:\n  - dotnet-standard\n  author: rpetrusha\n  ms.author: ronpet\n  manager: wpickett\n- uid: System.Globalization.Calendar.GetDayOfWeek(System.DateTime)\n  commentId: M:System.Globalization.Calendar.GetDayOfWeek(System.DateTime)\n  id: GetDayOfWeek(System.DateTime)\n  parent: System.Globalization.Calendar\n  langs:\n  - csharp\n  name: GetDayOfWeek(DateTime)\n  nameWithType: Calendar.GetDayOfWeek(DateTime)\n  fullName: Calendar.GetDayOfWeek(DateTime)\n  type: Method\n  assemblies:\n  - System.Globalization\n  - mscorlib\n  - netstandard\n  - System.Runtime\n  namespace: System.Globalization\n  summary: When overridden in a derived class, returns the day of the week in the specified <xref href=\"System.DateTime\"></xref>.\n  remarks: The <xref:System.DayOfWeek> values are Sunday, Monday, Tuesday, Wednesday, Thursday, Friday, and Saturday.\n  example:\n  - \"The following code example demonstrates the members of the <xref:System.Globalization.Calendar> class.  \\n  \\n [!code-cpp[System.Globalization.Calendar#1](~/samples/snippets/cpp/VS_Snippets_CLR_System/system.Globalization.Calendar/CPP/calendar.cpp#1)]\\n [!code-csharp[System.Globalization.Calendar#1](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.Globalization.Calendar/CS/calendar.cs#1)]\\n [!code-vb[System.Globalization.Calendar#1](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.Globalization.Calendar/VB/calendar.vb#1)]\"\n  syntax:\n    content: public abstract DayOfWeek GetDayOfWeek (DateTime time);\n    parameters:\n    - id: time\n      type: System.DateTime\n      description: The <xref href=\"System.DateTime\"></xref> to read.\n    return:\n      type: System.DayOfWeek\n      description: A <xref href=\"System.DayOfWeek\"></xref> value that represents the day of the week in the <code>time</code> parameter.\n  overload: System.Globalization.Calendar.GetDayOfWeek*\n  exceptions: []\n  version:\n  - netcore-1.0\n  - netcore-1.1\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - netstandard-1.0\n  - netstandard-1.1\n  - netstandard-1.2\n  - netstandard-1.3\n  - netstandard-1.4\n  - netstandard-1.6\n  - netstandard-2.0\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  monikers:\n  - netcore-1.0\n  - netcore-1.1\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - netstandard-1.0\n  - netstandard-1.1\n  - netstandard-1.2\n  - netstandard-1.3\n  - netstandard-1.4\n  - netstandard-1.6\n  - netstandard-2.0\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Globalization/Calendar.xml\n  ms.technology:\n  - dotnet-standard\n  author: rpetrusha\n  ms.author: ronpet\n  manager: wpickett\n- uid: System.Globalization.Calendar.GetDayOfYear(System.DateTime)\n  commentId: M:System.Globalization.Calendar.GetDayOfYear(System.DateTime)\n  id: GetDayOfYear(System.DateTime)\n  parent: System.Globalization.Calendar\n  langs:\n  - csharp\n  name: GetDayOfYear(DateTime)\n  nameWithType: Calendar.GetDayOfYear(DateTime)\n  fullName: Calendar.GetDayOfYear(DateTime)\n  type: Method\n  assemblies:\n  - System.Globalization\n  - mscorlib\n  - netstandard\n  - System.Runtime\n  namespace: System.Globalization\n  summary: When overridden in a derived class, returns the day of the year in the specified <xref href=\"System.DateTime\"></xref>.\n  remarks: The day of the year is defined as the number of days from the first day of the year. For example, in <xref:System.Globalization.GregorianCalendar>, <xref:System.Globalization.Calendar.GetDayOfYear%2A> for January 1 returns 1, and <xref:System.Globalization.Calendar.GetDayOfYear%2A> for December 31 returns 365 in a common year or 366 in a leap year.\n  example:\n  - \"The following code example demonstrates the members of the <xref:System.Globalization.Calendar> class.  \\n  \\n [!code-cpp[System.Globalization.Calendar#1](~/samples/snippets/cpp/VS_Snippets_CLR_System/system.Globalization.Calendar/CPP/calendar.cpp#1)]\\n [!code-csharp[System.Globalization.Calendar#1](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.Globalization.Calendar/CS/calendar.cs#1)]\\n [!code-vb[System.Globalization.Calendar#1](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.Globalization.Calendar/VB/calendar.vb#1)]\"\n  syntax:\n    content: public abstract int GetDayOfYear (DateTime time);\n    parameters:\n    - id: time\n      type: System.DateTime\n      description: The <xref href=\"System.DateTime\"></xref> to read.\n    return:\n      type: System.Int32\n      description: A positive integer that represents the day of the year in the <code>time</code> parameter.\n  overload: System.Globalization.Calendar.GetDayOfYear*\n  exceptions: []\n  version:\n  - netcore-1.0\n  - netcore-1.1\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - netstandard-1.0\n  - netstandard-1.1\n  - netstandard-1.2\n  - netstandard-1.3\n  - netstandard-1.4\n  - netstandard-1.6\n  - netstandard-2.0\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  monikers:\n  - netcore-1.0\n  - netcore-1.1\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - netstandard-1.0\n  - netstandard-1.1\n  - netstandard-1.2\n  - netstandard-1.3\n  - netstandard-1.4\n  - netstandard-1.6\n  - netstandard-2.0\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Globalization/Calendar.xml\n  ms.technology:\n  - dotnet-standard\n  author: rpetrusha\n  ms.author: ronpet\n  manager: wpickett\n- uid: System.Globalization.Calendar.GetDaysInMonth(System.Int32,System.Int32)\n  commentId: M:System.Globalization.Calendar.GetDaysInMonth(System.Int32,System.Int32)\n  id: GetDaysInMonth(System.Int32,System.Int32)\n  parent: System.Globalization.Calendar\n  langs:\n  - csharp\n  name: GetDaysInMonth(Int32, Int32)\n  nameWithType: Calendar.GetDaysInMonth(Int32, Int32)\n  fullName: Calendar.GetDaysInMonth(Int32, Int32)\n  type: Method\n  assemblies:\n  - System.Globalization\n  - mscorlib\n  - netstandard\n  - System.Runtime\n  namespace: System.Globalization\n  summary: Returns the number of days in the specified month and year of the current era.\n  remarks: For example, in <xref:System.Globalization.GregorianCalendar>, <xref:System.Globalization.Calendar.GetDaysInMonth%2A> for February returns 28 in a common year or 29 in a leap year.\n  example:\n  - \"The following code example compares different implementations of the <xref:System.Globalization.Calendar> class.  \\n  \\n [!code-cpp[System.Globalization.Calendar_Compare#1](~/samples/snippets/cpp/VS_Snippets_CLR_System/system.Globalization.Calendar_Compare/CPP/calendar_compare.cpp#1)]\\n [!code-csharp[System.Globalization.Calendar_Compare#1](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.Globalization.Calendar_Compare/CS/calendar_compare.cs#1)]\\n [!code-vb[System.Globalization.Calendar_Compare#1](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.Globalization.Calendar_Compare/VB/calendar_compare.vb#1)]\"\n  syntax:\n    content: public virtual int GetDaysInMonth (int year, int month);\n    parameters:\n    - id: year\n      type: System.Int32\n      description: An integer that represents the year.\n    - id: month\n      type: System.Int32\n      description: A positive integer that represents the month.\n    return:\n      type: System.Int32\n      description: The number of days in the specified month in the specified year in the current era.\n  overload: System.Globalization.Calendar.GetDaysInMonth*\n  exceptions:\n  - type: System.ArgumentOutOfRangeException\n    commentId: T:System.ArgumentOutOfRangeException\n    description: \"<code>year</code> is outside the range supported by the calendar.  \\n  \\n -or-  \\n  \\n <code>month</code> is outside the range supported by the calendar.\"\n  version:\n  - netcore-1.0\n  - netcore-1.1\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - netstandard-1.0\n  - netstandard-1.1\n  - netstandard-1.2\n  - netstandard-1.3\n  - netstandard-1.4\n  - netstandard-1.6\n  - netstandard-2.0\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  monikers:\n  - netcore-1.0\n  - netcore-1.1\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - netstandard-1.0\n  - netstandard-1.1\n  - netstandard-1.2\n  - netstandard-1.3\n  - netstandard-1.4\n  - netstandard-1.6\n  - netstandard-2.0\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Globalization/Calendar.xml\n  ms.technology:\n  - dotnet-standard\n  author: rpetrusha\n  ms.author: ronpet\n  manager: wpickett\n- uid: System.Globalization.Calendar.GetDaysInMonth(System.Int32,System.Int32,System.Int32)\n  commentId: M:System.Globalization.Calendar.GetDaysInMonth(System.Int32,System.Int32,System.Int32)\n  id: GetDaysInMonth(System.Int32,System.Int32,System.Int32)\n  parent: System.Globalization.Calendar\n  langs:\n  - csharp\n  name: GetDaysInMonth(Int32, Int32, Int32)\n  nameWithType: Calendar.GetDaysInMonth(Int32, Int32, Int32)\n  fullName: Calendar.GetDaysInMonth(Int32, Int32, Int32)\n  type: Method\n  assemblies:\n  - System.Globalization\n  - mscorlib\n  - netstandard\n  - System.Runtime\n  namespace: System.Globalization\n  summary: When overridden in a derived class, returns the number of days in the specified month, year, and era.\n  remarks: For example, in <xref:System.Globalization.GregorianCalendar>, <xref:System.Globalization.Calendar.GetDaysInMonth%2A> for February returns 28 in a common year or 29 in a leap year.\n  syntax:\n    content: public abstract int GetDaysInMonth (int year, int month, int era);\n    parameters:\n    - id: year\n      type: System.Int32\n      description: An integer that represents the year.\n    - id: month\n      type: System.Int32\n      description: A positive integer that represents the month.\n    - id: era\n      type: System.Int32\n      description: An integer that represents the era.\n    return:\n      type: System.Int32\n      description: The number of days in the specified month in the specified year in the specified era.\n  overload: System.Globalization.Calendar.GetDaysInMonth*\n  exceptions:\n  - type: System.ArgumentOutOfRangeException\n    commentId: T:System.ArgumentOutOfRangeException\n    description: \"<code>year</code> is outside the range supported by the calendar.  \\n  \\n -or-  \\n  \\n <code>month</code> is outside the range supported by the calendar.  \\n  \\n -or-  \\n  \\n <code>era</code> is outside the range supported by the calendar.\"\n  version:\n  - netcore-1.0\n  - netcore-1.1\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - netstandard-1.0\n  - netstandard-1.1\n  - netstandard-1.2\n  - netstandard-1.3\n  - netstandard-1.4\n  - netstandard-1.6\n  - netstandard-2.0\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  monikers:\n  - netcore-1.0\n  - netcore-1.1\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - netstandard-1.0\n  - netstandard-1.1\n  - netstandard-1.2\n  - netstandard-1.3\n  - netstandard-1.4\n  - netstandard-1.6\n  - netstandard-2.0\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Globalization/Calendar.xml\n  ms.technology:\n  - dotnet-standard\n  author: rpetrusha\n  ms.author: ronpet\n  manager: wpickett\n- uid: System.Globalization.Calendar.GetDaysInYear(System.Int32)\n  commentId: M:System.Globalization.Calendar.GetDaysInYear(System.Int32)\n  id: GetDaysInYear(System.Int32)\n  parent: System.Globalization.Calendar\n  langs:\n  - csharp\n  name: GetDaysInYear(Int32)\n  nameWithType: Calendar.GetDaysInYear(Int32)\n  fullName: Calendar.GetDaysInYear(Int32)\n  type: Method\n  assemblies:\n  - System.Globalization\n  - mscorlib\n  - netstandard\n  - System.Runtime\n  namespace: System.Globalization\n  summary: Returns the number of days in the specified year of the current era.\n  remarks: For example, in <xref:System.Globalization.GregorianCalendar>, <xref:System.Globalization.Calendar.GetDaysInYear%2A> returns 365 for a common year or 366 for a leap year.\n  example:\n  - \"The following code example compares different implementations of the <xref:System.Globalization.Calendar> class.  \\n  \\n [!code-cpp[System.Globalization.Calendar_Compare#1](~/samples/snippets/cpp/VS_Snippets_CLR_System/system.Globalization.Calendar_Compare/CPP/calendar_compare.cpp#1)]\\n [!code-csharp[System.Globalization.Calendar_Compare#1](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.Globalization.Calendar_Compare/CS/calendar_compare.cs#1)]\\n [!code-vb[System.Globalization.Calendar_Compare#1](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.Globalization.Calendar_Compare/VB/calendar_compare.vb#1)]\"\n  syntax:\n    content: public virtual int GetDaysInYear (int year);\n    parameters:\n    - id: year\n      type: System.Int32\n      description: An integer that represents the year.\n    return:\n      type: System.Int32\n      description: The number of days in the specified year in the current era.\n  overload: System.Globalization.Calendar.GetDaysInYear*\n  exceptions:\n  - type: System.ArgumentOutOfRangeException\n    commentId: T:System.ArgumentOutOfRangeException\n    description: <code>year</code> is outside the range supported by the calendar.\n  version:\n  - netcore-1.0\n  - netcore-1.1\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - netstandard-1.0\n  - netstandard-1.1\n  - netstandard-1.2\n  - netstandard-1.3\n  - netstandard-1.4\n  - netstandard-1.6\n  - netstandard-2.0\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  monikers:\n  - netcore-1.0\n  - netcore-1.1\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - netstandard-1.0\n  - netstandard-1.1\n  - netstandard-1.2\n  - netstandard-1.3\n  - netstandard-1.4\n  - netstandard-1.6\n  - netstandard-2.0\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Globalization/Calendar.xml\n  ms.technology:\n  - dotnet-standard\n  author: rpetrusha\n  ms.author: ronpet\n  manager: wpickett\n- uid: System.Globalization.Calendar.GetDaysInYear(System.Int32,System.Int32)\n  commentId: M:System.Globalization.Calendar.GetDaysInYear(System.Int32,System.Int32)\n  id: GetDaysInYear(System.Int32,System.Int32)\n  parent: System.Globalization.Calendar\n  langs:\n  - csharp\n  name: GetDaysInYear(Int32, Int32)\n  nameWithType: Calendar.GetDaysInYear(Int32, Int32)\n  fullName: Calendar.GetDaysInYear(Int32, Int32)\n  type: Method\n  assemblies:\n  - System.Globalization\n  - mscorlib\n  - netstandard\n  - System.Runtime\n  namespace: System.Globalization\n  summary: When overridden in a derived class, returns the number of days in the specified year and era.\n  remarks: For example, in <xref:System.Globalization.GregorianCalendar>, <xref:System.Globalization.Calendar.GetDaysInYear%2A> returns 365 for a common year or 366 for a leap year.\n  syntax:\n    content: public abstract int GetDaysInYear (int year, int era);\n    parameters:\n    - id: year\n      type: System.Int32\n      description: An integer that represents the year.\n    - id: era\n      type: System.Int32\n      description: An integer that represents the era.\n    return:\n      type: System.Int32\n      description: The number of days in the specified year in the specified era.\n  overload: System.Globalization.Calendar.GetDaysInYear*\n  exceptions:\n  - type: System.ArgumentOutOfRangeException\n    commentId: T:System.ArgumentOutOfRangeException\n    description: \"<code>year</code> is outside the range supported by the calendar.  \\n  \\n -or-  \\n  \\n <code>era</code> is outside the range supported by the calendar.\"\n  version:\n  - netcore-1.0\n  - netcore-1.1\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - netstandard-1.0\n  - netstandard-1.1\n  - netstandard-1.2\n  - netstandard-1.3\n  - netstandard-1.4\n  - netstandard-1.6\n  - netstandard-2.0\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  monikers:\n  - netcore-1.0\n  - netcore-1.1\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - netstandard-1.0\n  - netstandard-1.1\n  - netstandard-1.2\n  - netstandard-1.3\n  - netstandard-1.4\n  - netstandard-1.6\n  - netstandard-2.0\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Globalization/Calendar.xml\n  ms.technology:\n  - dotnet-standard\n  author: rpetrusha\n  ms.author: ronpet\n  manager: wpickett\n- uid: System.Globalization.Calendar.GetEra(System.DateTime)\n  commentId: M:System.Globalization.Calendar.GetEra(System.DateTime)\n  id: GetEra(System.DateTime)\n  parent: System.Globalization.Calendar\n  langs:\n  - csharp\n  name: GetEra(DateTime)\n  nameWithType: Calendar.GetEra(DateTime)\n  fullName: Calendar.GetEra(DateTime)\n  type: Method\n  assemblies:\n  - System.Globalization\n  - mscorlib\n  - netstandard\n  - System.Runtime\n  namespace: System.Globalization\n  summary: When overridden in a derived class, returns the era in the specified <xref href=\"System.DateTime\"></xref>.\n  remarks: ''\n  example:\n  - \"The following code example demonstrates the members of the <xref:System.Globalization.Calendar> class.  \\n  \\n [!code-cpp[System.Globalization.Calendar#1](~/samples/snippets/cpp/VS_Snippets_CLR_System/system.Globalization.Calendar/CPP/calendar.cpp#1)]\\n [!code-csharp[System.Globalization.Calendar#1](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.Globalization.Calendar/CS/calendar.cs#1)]\\n [!code-vb[System.Globalization.Calendar#1](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.Globalization.Calendar/VB/calendar.vb#1)]\"\n  syntax:\n    content: public abstract int GetEra (DateTime time);\n    parameters:\n    - id: time\n      type: System.DateTime\n      description: The <xref href=\"System.DateTime\"></xref> to read.\n    return:\n      type: System.Int32\n      description: An integer that represents the era in <code>time</code>.\n  overload: System.Globalization.Calendar.GetEra*\n  exceptions: []\n  version:\n  - netcore-1.0\n  - netcore-1.1\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - netstandard-1.0\n  - netstandard-1.1\n  - netstandard-1.2\n  - netstandard-1.3\n  - netstandard-1.4\n  - netstandard-1.6\n  - netstandard-2.0\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  monikers:\n  - netcore-1.0\n  - netcore-1.1\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - netstandard-1.0\n  - netstandard-1.1\n  - netstandard-1.2\n  - netstandard-1.3\n  - netstandard-1.4\n  - netstandard-1.6\n  - netstandard-2.0\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Globalization/Calendar.xml\n  ms.technology:\n  - dotnet-standard\n  author: rpetrusha\n  ms.author: ronpet\n  manager: wpickett\n- uid: System.Globalization.Calendar.GetHour(System.DateTime)\n  commentId: M:System.Globalization.Calendar.GetHour(System.DateTime)\n  id: GetHour(System.DateTime)\n  parent: System.Globalization.Calendar\n  langs:\n  - csharp\n  name: GetHour(DateTime)\n  nameWithType: Calendar.GetHour(DateTime)\n  fullName: Calendar.GetHour(DateTime)\n  type: Method\n  assemblies:\n  - System.Globalization\n  - mscorlib\n  - netstandard\n  - System.Runtime\n  namespace: System.Globalization\n  summary: Returns the hours value in the specified <xref href=\"System.DateTime\"></xref>.\n  remarks: ''\n  example:\n  - \"The following code example demonstrates the members of the <xref:System.Globalization.Calendar> class.  \\n  \\n [!code-cpp[System.Globalization.Calendar#1](~/samples/snippets/cpp/VS_Snippets_CLR_System/system.Globalization.Calendar/CPP/calendar.cpp#1)]\\n [!code-csharp[System.Globalization.Calendar#1](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.Globalization.Calendar/CS/calendar.cs#1)]\\n [!code-vb[System.Globalization.Calendar#1](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.Globalization.Calendar/VB/calendar.vb#1)]\"\n  syntax:\n    content: public virtual int GetHour (DateTime time);\n    parameters:\n    - id: time\n      type: System.DateTime\n      description: The <xref href=\"System.DateTime\"></xref> to read.\n    return:\n      type: System.Int32\n      description: An integer from 0 to 23 that represents the hour in <code>time</code>.\n  overload: System.Globalization.Calendar.GetHour*\n  exceptions: []\n  version:\n  - netcore-1.0\n  - netcore-1.1\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - netstandard-1.0\n  - netstandard-1.1\n  - netstandard-1.2\n  - netstandard-1.3\n  - netstandard-1.4\n  - netstandard-1.6\n  - netstandard-2.0\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  monikers:\n  - netcore-1.0\n  - netcore-1.1\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - netstandard-1.0\n  - netstandard-1.1\n  - netstandard-1.2\n  - netstandard-1.3\n  - netstandard-1.4\n  - netstandard-1.6\n  - netstandard-2.0\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Globalization/Calendar.xml\n  ms.technology:\n  - dotnet-standard\n  author: rpetrusha\n  ms.author: ronpet\n  manager: wpickett\n- uid: System.Globalization.Calendar.GetLeapMonth(System.Int32,System.Int32)\n  commentId: M:System.Globalization.Calendar.GetLeapMonth(System.Int32,System.Int32)\n  id: GetLeapMonth(System.Int32,System.Int32)\n  parent: System.Globalization.Calendar\n  langs:\n  - csharp\n  name: GetLeapMonth(Int32, Int32)\n  nameWithType: Calendar.GetLeapMonth(Int32, Int32)\n  fullName: Calendar.GetLeapMonth(Int32, Int32)\n  type: Method\n  assemblies:\n  - System.Globalization\n  - mscorlib\n  - netstandard\n  - System.Runtime\n  namespace: System.Globalization\n  summary: Calculates the leap month for a specified year and era.\n  remarks: In a calendar that supports the notion of a leap month, the leap month can occur either after a particular month or after any month in a year. For example, the <xref:System.Globalization.EastAsianLunisolarCalendar.GetMonth%28System.DateTime%29> method returns a number between 1 and 13 that indicates the month associated with a specified date. If there is a leap month between the eighth and ninth months of the year, the <xref:System.Globalization.EastAsianLunisolarCalendar.GetMonth%28System.DateTime%29> method returns 8 for the eighth month, 9 for the leap eighth month, and 10 for the ninth month.\n  syntax:\n    content: >-\n      [System.Runtime.InteropServices.ComVisible(false)]\n\n      public virtual int GetLeapMonth (int year, int era);\n    parameters:\n    - id: year\n      type: System.Int32\n      description: A year.\n    - id: era\n      type: System.Int32\n      description: An era.\n    return:\n      type: System.Int32\n      description: \"A positive integer that indicates the leap month in the specified year and era.  \\n  \\n -or-  \\n  \\n Zero if this calendar does not support a leap month or if the <code>year</code> and <code>era</code> parameters do not specify a leap year.\"\n  overload: System.Globalization.Calendar.GetLeapMonth*\n  exceptions: []\n  attributes:\n  - type: System.Runtime.InteropServices.ComVisibleAttribute\n  version:\n  - netcore-1.0\n  - netcore-1.1\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - netstandard-1.0\n  - netstandard-1.1\n  - netstandard-1.2\n  - netstandard-1.3\n  - netstandard-1.4\n  - netstandard-1.6\n  - netstandard-2.0\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  monikers:\n  - netcore-1.0\n  - netcore-1.1\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - netstandard-1.0\n  - netstandard-1.1\n  - netstandard-1.2\n  - netstandard-1.3\n  - netstandard-1.4\n  - netstandard-1.6\n  - netstandard-2.0\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Globalization/Calendar.xml\n  ms.technology:\n  - dotnet-standard\n  author: rpetrusha\n  ms.author: ronpet\n  manager: wpickett\n- uid: System.Globalization.Calendar.GetLeapMonth(System.Int32)\n  commentId: M:System.Globalization.Calendar.GetLeapMonth(System.Int32)\n  id: GetLeapMonth(System.Int32)\n  parent: System.Globalization.Calendar\n  langs:\n  - csharp\n  name: GetLeapMonth(Int32)\n  nameWithType: Calendar.GetLeapMonth(Int32)\n  fullName: Calendar.GetLeapMonth(Int32)\n  type: Method\n  assemblies:\n  - mscorlib\n  - netstandard\n  - System.Runtime\n  namespace: System.Globalization\n  summary: Calculates the leap month for a specified year.\n  remarks: In a calendar that supports the notion of a leap month, the leap month can occur either after a particular month or after any month in a year. For example, the <xref:System.Globalization.EastAsianLunisolarCalendar.GetMonth%28System.DateTime%29> method returns a number between 1 and 13 that indicates the month associated with a specified date. If there is a leap month between the eighth and ninth months of the year, the <xref:System.Globalization.EastAsianLunisolarCalendar.GetMonth%28System.DateTime%29> method returns 8 for the eighth month, 9 for the leap eighth month, and 10 for the ninth month.\n  syntax:\n    content: >-\n      [System.Runtime.InteropServices.ComVisible(false)]\n\n      public virtual int GetLeapMonth (int year);\n    parameters:\n    - id: year\n      type: System.Int32\n      description: A year.\n    return:\n      type: System.Int32\n      description: \"A positive integer that indicates the leap month in the specified year.  \\n  \\n -or-  \\n  \\n Zero if this calendar does not support a leap month or if the <code>year</code> parameter does not represent a leap year.\"\n  overload: System.Globalization.Calendar.GetLeapMonth*\n  exceptions: []\n  attributes:\n  - type: System.Runtime.InteropServices.ComVisibleAttribute\n  version:\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - netstandard-2.0\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  monikers:\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - netstandard-2.0\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Globalization/Calendar.xml\n  ms.technology:\n  - dotnet-standard\n  author: rpetrusha\n  ms.author: ronpet\n  manager: wpickett\n- uid: System.Globalization.Calendar.GetMilliseconds(System.DateTime)\n  commentId: M:System.Globalization.Calendar.GetMilliseconds(System.DateTime)\n  id: GetMilliseconds(System.DateTime)\n  parent: System.Globalization.Calendar\n  langs:\n  - csharp\n  name: GetMilliseconds(DateTime)\n  nameWithType: Calendar.GetMilliseconds(DateTime)\n  fullName: Calendar.GetMilliseconds(DateTime)\n  type: Method\n  assemblies:\n  - System.Globalization\n  - mscorlib\n  - netstandard\n  - System.Runtime\n  namespace: System.Globalization\n  summary: Returns the milliseconds value in the specified <xref href=\"System.DateTime\"></xref>.\n  remarks: ''\n  example:\n  - \"The following code example demonstrates the members of the <xref:System.Globalization.Calendar> class.  \\n  \\n [!code-cpp[System.Globalization.Calendar#1](~/samples/snippets/cpp/VS_Snippets_CLR_System/system.Globalization.Calendar/CPP/calendar.cpp#1)]\\n [!code-csharp[System.Globalization.Calendar#1](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.Globalization.Calendar/CS/calendar.cs#1)]\\n [!code-vb[System.Globalization.Calendar#1](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.Globalization.Calendar/VB/calendar.vb#1)]\"\n  syntax:\n    content: public virtual double GetMilliseconds (DateTime time);\n    parameters:\n    - id: time\n      type: System.DateTime\n      description: The <xref href=\"System.DateTime\"></xref> to read.\n    return:\n      type: System.Double\n      description: A double-precision floating-point number from 0 to 999 that represents the milliseconds in the <code>time</code> parameter.\n  overload: System.Globalization.Calendar.GetMilliseconds*\n  exceptions: []\n  version:\n  - netcore-1.0\n  - netcore-1.1\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - netstandard-1.0\n  - netstandard-1.1\n  - netstandard-1.2\n  - netstandard-1.3\n  - netstandard-1.4\n  - netstandard-1.6\n  - netstandard-2.0\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  monikers:\n  - netcore-1.0\n  - netcore-1.1\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - netstandard-1.0\n  - netstandard-1.1\n  - netstandard-1.2\n  - netstandard-1.3\n  - netstandard-1.4\n  - netstandard-1.6\n  - netstandard-2.0\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Globalization/Calendar.xml\n  ms.technology:\n  - dotnet-standard\n  author: rpetrusha\n  ms.author: ronpet\n  manager: wpickett\n- uid: System.Globalization.Calendar.GetMinute(System.DateTime)\n  commentId: M:System.Globalization.Calendar.GetMinute(System.DateTime)\n  id: GetMinute(System.DateTime)\n  parent: System.Globalization.Calendar\n  langs:\n  - csharp\n  name: GetMinute(DateTime)\n  nameWithType: Calendar.GetMinute(DateTime)\n  fullName: Calendar.GetMinute(DateTime)\n  type: Method\n  assemblies:\n  - System.Globalization\n  - mscorlib\n  - netstandard\n  - System.Runtime\n  namespace: System.Globalization\n  summary: Returns the minutes value in the specified <xref href=\"System.DateTime\"></xref>.\n  remarks: ''\n  example:\n  - \"The following code example demonstrates the members of the <xref:System.Globalization.Calendar> class.  \\n  \\n [!code-cpp[System.Globalization.Calendar#1](~/samples/snippets/cpp/VS_Snippets_CLR_System/system.Globalization.Calendar/CPP/calendar.cpp#1)]\\n [!code-csharp[System.Globalization.Calendar#1](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.Globalization.Calendar/CS/calendar.cs#1)]\\n [!code-vb[System.Globalization.Calendar#1](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.Globalization.Calendar/VB/calendar.vb#1)]\"\n  syntax:\n    content: public virtual int GetMinute (DateTime time);\n    parameters:\n    - id: time\n      type: System.DateTime\n      description: The <xref href=\"System.DateTime\"></xref> to read.\n    return:\n      type: System.Int32\n      description: An integer from 0 to 59 that represents the minutes in <code>time</code>.\n  overload: System.Globalization.Calendar.GetMinute*\n  exceptions: []\n  version:\n  - netcore-1.0\n  - netcore-1.1\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - netstandard-1.0\n  - netstandard-1.1\n  - netstandard-1.2\n  - netstandard-1.3\n  - netstandard-1.4\n  - netstandard-1.6\n  - netstandard-2.0\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  monikers:\n  - netcore-1.0\n  - netcore-1.1\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - netstandard-1.0\n  - netstandard-1.1\n  - netstandard-1.2\n  - netstandard-1.3\n  - netstandard-1.4\n  - netstandard-1.6\n  - netstandard-2.0\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Globalization/Calendar.xml\n  ms.technology:\n  - dotnet-standard\n  author: rpetrusha\n  ms.author: ronpet\n  manager: wpickett\n- uid: System.Globalization.Calendar.GetMonth(System.DateTime)\n  commentId: M:System.Globalization.Calendar.GetMonth(System.DateTime)\n  id: GetMonth(System.DateTime)\n  parent: System.Globalization.Calendar\n  langs:\n  - csharp\n  name: GetMonth(DateTime)\n  nameWithType: Calendar.GetMonth(DateTime)\n  fullName: Calendar.GetMonth(DateTime)\n  type: Method\n  assemblies:\n  - System.Globalization\n  - mscorlib\n  - netstandard\n  - System.Runtime\n  namespace: System.Globalization\n  summary: When overridden in a derived class, returns the month in the specified <xref href=\"System.DateTime\"></xref>.\n  remarks: For example, in <xref:System.Globalization.HebrewCalendar>, <xref:System.Globalization.Calendar.GetMonth%2A> for Tishrei returns 1, and <xref:System.Globalization.Calendar.GetMonth%2A> for Elul returns 12 in a common year or 13 in a leap year.\n  example:\n  - \"The following code example demonstrates the members of the <xref:System.Globalization.Calendar> class.  \\n  \\n [!code-cpp[System.Globalization.Calendar#1](~/samples/snippets/cpp/VS_Snippets_CLR_System/system.Globalization.Calendar/CPP/calendar.cpp#1)]\\n [!code-csharp[System.Globalization.Calendar#1](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.Globalization.Calendar/CS/calendar.cs#1)]\\n [!code-vb[System.Globalization.Calendar#1](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.Globalization.Calendar/VB/calendar.vb#1)]\"\n  syntax:\n    content: public abstract int GetMonth (DateTime time);\n    parameters:\n    - id: time\n      type: System.DateTime\n      description: The <xref href=\"System.DateTime\"></xref> to read.\n    return:\n      type: System.Int32\n      description: A positive integer that represents the month in <code>time</code>.\n  overload: System.Globalization.Calendar.GetMonth*\n  exceptions: []\n  version:\n  - netcore-1.0\n  - netcore-1.1\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - netstandard-1.0\n  - netstandard-1.1\n  - netstandard-1.2\n  - netstandard-1.3\n  - netstandard-1.4\n  - netstandard-1.6\n  - netstandard-2.0\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  monikers:\n  - netcore-1.0\n  - netcore-1.1\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - netstandard-1.0\n  - netstandard-1.1\n  - netstandard-1.2\n  - netstandard-1.3\n  - netstandard-1.4\n  - netstandard-1.6\n  - netstandard-2.0\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Globalization/Calendar.xml\n  ms.technology:\n  - dotnet-standard\n  author: rpetrusha\n  ms.author: ronpet\n  manager: wpickett\n- uid: System.Globalization.Calendar.GetMonthsInYear(System.Int32)\n  commentId: M:System.Globalization.Calendar.GetMonthsInYear(System.Int32)\n  id: GetMonthsInYear(System.Int32)\n  parent: System.Globalization.Calendar\n  langs:\n  - csharp\n  name: GetMonthsInYear(Int32)\n  nameWithType: Calendar.GetMonthsInYear(Int32)\n  fullName: Calendar.GetMonthsInYear(Int32)\n  type: Method\n  assemblies:\n  - System.Globalization\n  - mscorlib\n  - netstandard\n  - System.Runtime\n  namespace: System.Globalization\n  summary: Returns the number of months in the specified year in the current era.\n  remarks: For example, in <xref:System.Globalization.HebrewCalendar>, <xref:System.Globalization.Calendar.GetMonthsInYear%2A> returns 12 for a common year or 13 for a leap year.\n  example:\n  - \"The following code example compares different implementations of the <xref:System.Globalization.Calendar> class.  \\n  \\n [!code-cpp[System.Globalization.Calendar_Compare#1](~/samples/snippets/cpp/VS_Snippets_CLR_System/system.Globalization.Calendar_Compare/CPP/calendar_compare.cpp#1)]\\n [!code-csharp[System.Globalization.Calendar_Compare#1](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.Globalization.Calendar_Compare/CS/calendar_compare.cs#1)]\\n [!code-vb[System.Globalization.Calendar_Compare#1](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.Globalization.Calendar_Compare/VB/calendar_compare.vb#1)]\"\n  syntax:\n    content: public virtual int GetMonthsInYear (int year);\n    parameters:\n    - id: year\n      type: System.Int32\n      description: An integer that represents the year.\n    return:\n      type: System.Int32\n      description: The number of months in the specified year in the current era.\n  overload: System.Globalization.Calendar.GetMonthsInYear*\n  exceptions:\n  - type: System.ArgumentOutOfRangeException\n    commentId: T:System.ArgumentOutOfRangeException\n    description: <code>year</code> is outside the range supported by the calendar.\n  version:\n  - netcore-1.0\n  - netcore-1.1\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - netstandard-1.0\n  - netstandard-1.1\n  - netstandard-1.2\n  - netstandard-1.3\n  - netstandard-1.4\n  - netstandard-1.6\n  - netstandard-2.0\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  monikers:\n  - netcore-1.0\n  - netcore-1.1\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - netstandard-1.0\n  - netstandard-1.1\n  - netstandard-1.2\n  - netstandard-1.3\n  - netstandard-1.4\n  - netstandard-1.6\n  - netstandard-2.0\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Globalization/Calendar.xml\n  ms.technology:\n  - dotnet-standard\n  author: rpetrusha\n  ms.author: ronpet\n  manager: wpickett\n- uid: System.Globalization.Calendar.GetMonthsInYear(System.Int32,System.Int32)\n  commentId: M:System.Globalization.Calendar.GetMonthsInYear(System.Int32,System.Int32)\n  id: GetMonthsInYear(System.Int32,System.Int32)\n  parent: System.Globalization.Calendar\n  langs:\n  - csharp\n  name: GetMonthsInYear(Int32, Int32)\n  nameWithType: Calendar.GetMonthsInYear(Int32, Int32)\n  fullName: Calendar.GetMonthsInYear(Int32, Int32)\n  type: Method\n  assemblies:\n  - System.Globalization\n  - mscorlib\n  - netstandard\n  - System.Runtime\n  namespace: System.Globalization\n  summary: When overridden in a derived class, returns the number of months in the specified year in the specified era.\n  remarks: For example, in <xref:System.Globalization.HebrewCalendar>, <xref:System.Globalization.Calendar.GetMonthsInYear%2A> returns 12 for a common year or 13 for a leap year.\n  syntax:\n    content: public abstract int GetMonthsInYear (int year, int era);\n    parameters:\n    - id: year\n      type: System.Int32\n      description: An integer that represents the year.\n    - id: era\n      type: System.Int32\n      description: An integer that represents the era.\n    return:\n      type: System.Int32\n      description: The number of months in the specified year in the specified era.\n  overload: System.Globalization.Calendar.GetMonthsInYear*\n  exceptions:\n  - type: System.ArgumentOutOfRangeException\n    commentId: T:System.ArgumentOutOfRangeException\n    description: \"<code>year</code> is outside the range supported by the calendar.  \\n  \\n -or-  \\n  \\n <code>era</code> is outside the range supported by the calendar.\"\n  version:\n  - netcore-1.0\n  - netcore-1.1\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - netstandard-1.0\n  - netstandard-1.1\n  - netstandard-1.2\n  - netstandard-1.3\n  - netstandard-1.4\n  - netstandard-1.6\n  - netstandard-2.0\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  monikers:\n  - netcore-1.0\n  - netcore-1.1\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - netstandard-1.0\n  - netstandard-1.1\n  - netstandard-1.2\n  - netstandard-1.3\n  - netstandard-1.4\n  - netstandard-1.6\n  - netstandard-2.0\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Globalization/Calendar.xml\n  ms.technology:\n  - dotnet-standard\n  author: rpetrusha\n  ms.author: ronpet\n  manager: wpickett\n- uid: System.Globalization.Calendar.GetSecond(System.DateTime)\n  commentId: M:System.Globalization.Calendar.GetSecond(System.DateTime)\n  id: GetSecond(System.DateTime)\n  parent: System.Globalization.Calendar\n  langs:\n  - csharp\n  name: GetSecond(DateTime)\n  nameWithType: Calendar.GetSecond(DateTime)\n  fullName: Calendar.GetSecond(DateTime)\n  type: Method\n  assemblies:\n  - System.Globalization\n  - mscorlib\n  - netstandard\n  - System.Runtime\n  namespace: System.Globalization\n  summary: Returns the seconds value in the specified <xref href=\"System.DateTime\"></xref>.\n  remarks: ''\n  example:\n  - \"The following code example demonstrates the members of the <xref:System.Globalization.Calendar> class.  \\n  \\n [!code-cpp[System.Globalization.Calendar#1](~/samples/snippets/cpp/VS_Snippets_CLR_System/system.Globalization.Calendar/CPP/calendar.cpp#1)]\\n [!code-csharp[System.Globalization.Calendar#1](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.Globalization.Calendar/CS/calendar.cs#1)]\\n [!code-vb[System.Globalization.Calendar#1](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.Globalization.Calendar/VB/calendar.vb#1)]\"\n  syntax:\n    content: public virtual int GetSecond (DateTime time);\n    parameters:\n    - id: time\n      type: System.DateTime\n      description: The <xref href=\"System.DateTime\"></xref> to read.\n    return:\n      type: System.Int32\n      description: An integer from 0 to 59 that represents the seconds in <code>time</code>.\n  overload: System.Globalization.Calendar.GetSecond*\n  exceptions: []\n  version:\n  - netcore-1.0\n  - netcore-1.1\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - netstandard-1.0\n  - netstandard-1.1\n  - netstandard-1.2\n  - netstandard-1.3\n  - netstandard-1.4\n  - netstandard-1.6\n  - netstandard-2.0\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  monikers:\n  - netcore-1.0\n  - netcore-1.1\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - netstandard-1.0\n  - netstandard-1.1\n  - netstandard-1.2\n  - netstandard-1.3\n  - netstandard-1.4\n  - netstandard-1.6\n  - netstandard-2.0\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Globalization/Calendar.xml\n  ms.technology:\n  - dotnet-standard\n  author: rpetrusha\n  ms.author: ronpet\n  manager: wpickett\n- uid: System.Globalization.Calendar.GetWeekOfYear(System.DateTime,System.Globalization.CalendarWeekRule,System.DayOfWeek)\n  commentId: M:System.Globalization.Calendar.GetWeekOfYear(System.DateTime,System.Globalization.CalendarWeekRule,System.DayOfWeek)\n  id: GetWeekOfYear(System.DateTime,System.Globalization.CalendarWeekRule,System.DayOfWeek)\n  parent: System.Globalization.Calendar\n  langs:\n  - csharp\n  name: GetWeekOfYear(DateTime, CalendarWeekRule, DayOfWeek)\n  nameWithType: Calendar.GetWeekOfYear(DateTime, CalendarWeekRule, DayOfWeek)\n  fullName: Calendar.GetWeekOfYear(DateTime, CalendarWeekRule, DayOfWeek)\n  type: Method\n  assemblies:\n  - System.Globalization\n  - mscorlib\n  - netstandard\n  - System.Runtime\n  namespace: System.Globalization\n  summary: Returns the week of the year that includes the date in the specified <xref href=\"System.DateTime\"></xref> value.\n  remarks: \"This method can be used to determine the number of weeks in the year by setting `time` to the last day of the year.  \\n  \\n The <xref:System.Globalization.DateTimeFormatInfo> object for a particular culture that uses the calendar indicated by the <xref:System.Globalization.DateTimeFormatInfo.Calendar%2A?displayProperty=fullName> property includes the following culture-specific values that can be used for the `rule` and `firstDayOfWeek` parameters:  \\n  \\n-   The <xref:System.Globalization.DateTimeFormatInfo.FirstDayOfWeek%2A?displayProperty=fullName> property contains the default first day of the week that can be used for the `firstDayOfWeek` parameter.  \\n  \\n-   The <xref:System.Globalization.DateTimeFormatInfo.CalendarWeekRule%2A?displayProperty=fullName> property contains the default calendar week rule that can be used for the `rule` parameter.  \\n  \\n The following example uses the current culture's <xref:System.Globalization.DateTimeFormatInfo> object to determine that January 1, 2011 is in the first week of the year in the Gregorian calendar.  \\n  \\n [!code-csharp[System.Globalization.Calendar.GetWeekOfYear#2](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.Globalization.Calendar.GetWeekOfYear/CS/getweekofyearex1.cs#2)]\\n [!code-vb[System.Globalization.Calendar.GetWeekOfYear#2](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.Globalization.Calendar.GetWeekOfYear/VB/getweekofyearex1.vb#2)]  \\n  \\n For some calendars, a call to the <xref:System.Globalization.Calendar.GetWeekOfYear%2A> method throws an <xref:System.ArgumentOutOfRangeException> for particular combinations of `rule` and `firstDayOfWeek` values even if `time` is greater than the date returned by that calendar's <xref:System.Globalization.Calendar.MinSupportedDateTime%2A> property. The following table lists the affected calendars, the specific `rule` values, and the range of the earliest supported `time` values. The specific minimum <xref:System.DateTime> value depends on the value of the `firstDayOfWeek` parameter.  \\n  \\n|Calendar|CalendarWeekRule value|Gregorian date (M/dd/yyyy)|Date in calendar (M/dd/yyyy)|  \\n|--------------|----------------------------|------------------------------------|--------------------------------------|  \\n|<xref:System.Globalization.ChineseLunisolarCalendar>|<xref:System.Globalization.CalendarWeekRule.FirstFullWeek>|2/19/1901 to 2/25/1901|1/1/1901 to 1/7/1901|  \\n|<xref:System.Globalization.ChineseLunisolarCalendar>|<xref:System.Globalization.CalendarWeekRule.FirstFourDayWeek>|2/19/1901 to 2/22/1901|1/01/1901 to 1/04/1901|  \\n|<xref:System.Globalization.HebrewCalendar>|<xref:System.Globalization.CalendarWeekRule.FirstDay>|9/17/1583|1/01/5344|  \\n|<xref:System.Globalization.HebrewCalendar>|<xref:System.Globalization.CalendarWeekRule.FirstFullWeek>|9/17/1583 to 9/23/1583|1/01/5344 to 1/07/5344|  \\n|<xref:System.Globalization.HebrewCalendar>|<xref:System.Globalization.CalendarWeekRule.FirstFourDayWeek>|9/17/1583 to 9/20/1583|1/01/5344 to 1/04/5344|  \\n|<xref:System.Globalization.HijriCalendar>|<xref:System.Globalization.CalendarWeekRule.FirstFullWeek>|7/18/0622 to 7/24/0622|1/01/0001 to 1/07/0001|  \\n|<xref:System.Globalization.HijriCalendar>|<xref:System.Globalization.CalendarWeekRule.FirstFourDayWeek>|7/18/0622 to 7/21/0622|1/01/0001 to 1/04/0001|  \\n|<xref:System.Globalization.JapaneseLunisolarCalendar>|<xref:System.Globalization.CalendarWeekRule.FirstFullWeek>|1/28/1960 to 2/03/1960|1/01/35 to 1/07/0035|  \\n|<xref:System.Globalization.JapaneseLunisolarCalendar>|<xref:System.Globalization.CalendarWeekRule.FirstFourDayWeek>|1/28/1960 to 1/31/1960|1/01/0035 to 1/04/0035|  \\n|<xref:System.Globalization.JulianCalendar>|<xref:System.Globalization.CalendarWeekRule.FirstFullWeek>|1/01/0001 to 1/05/0001|1/03/0001 to 1/07/0001|  \\n|<xref:System.Globalization.JulianCalendar>|<xref:System.Globalization.CalendarWeekRule.FirstFourDayWeek>|1/01/0001 to 1/02/0001|1/03/0001 to 1/04/0001|  \\n|<xref:System.Globalization.KoreanLunisolarCalendar>|<xref:System.Globalization.CalendarWeekRule.FirstFullWeek>|2/14/0918 to 2/20/0918|1/01/0918 to 1/07/0918|  \\n|<xref:System.Globalization.KoreanLunisolarCalendar>|<xref:System.Globalization.CalendarWeekRule.FirstFourDayWeek>|2/14/0918 to 2/17/0918|1/01/0918 to 1/04/0918|  \\n|<xref:System.Globalization.PersianCalendar>|<xref:System.Globalization.CalendarWeekRule.FirstFullWeek>|3/21/0622 to 3/27/0622|1/01/0001 to 1/07/0001|  \\n|<xref:System.Globalization.PersianCalendar>|<xref:System.Globalization.CalendarWeekRule.FirstFourDayWeek>|3/21/0622 to 3/24/0622|1/01/0001 to 1/04/0001|  \\n|<xref:System.Globalization.TaiwanLunisolarCalendar>|<xref:System.Globalization.CalendarWeekRule.FirstFullWeek>|2/18/1912 to 2/24/1912|1/01/0001 to 1/07/0001|  \\n|<xref:System.Globalization.TaiwanLunisolarCalendar>|<xref:System.Globalization.CalendarWeekRule.FirstFourDayWeek>|2/18/1912 to 2/21/1912|1/01/0001 to 1/04/0001|  \\n|<xref:System.Globalization.UmAlQuraCalendar>|<xref:System.Globalization.CalendarWeekRule.FirstFullWeek>|4/30/1900 to 5/06/1900|1/01/1318 to 1/07/1318|  \\n|<xref:System.Globalization.UmAlQuraCalendar>|<xref:System.Globalization.CalendarWeekRule.FirstFourDayWeek>|4/30/1900 to 5/03/1900|1/01/1318 to 1/04/1318|\"\n  example:\n  - \"The following code example shows how the result of <xref:System.Globalization.Calendar.GetWeekOfYear%2A> varies depending on the <xref:System.Globalization.DateTimeFormatInfo.FirstDayOfWeek%2A> and the <xref:System.Globalization.CalendarWeekRule> used. If the specified date is the last day of the year, <xref:System.Globalization.Calendar.GetWeekOfYear%2A> returns the total number of weeks in that year.  \\n  \\n [!code-cpp[System.Globalization.Calendar.GetWeekOfYear#1](~/samples/snippets/cpp/VS_Snippets_CLR_System/system.Globalization.Calendar.GetWeekOfYear/CPP/yslin_calendar_getweekofyear.cpp#1)]\\n [!code-csharp[System.Globalization.Calendar.GetWeekOfYear#1](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.Globalization.Calendar.GetWeekOfYear/CS/yslin_calendar_getweekofyear.cs#1)]\\n [!code-vb[System.Globalization.Calendar.GetWeekOfYear#1](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.Globalization.Calendar.GetWeekOfYear/VB/yslin_calendar_getweekofyear.vb#1)]\"\n  syntax:\n    content: public virtual int GetWeekOfYear (DateTime time, System.Globalization.CalendarWeekRule rule, DayOfWeek firstDayOfWeek);\n    parameters:\n    - id: time\n      type: System.DateTime\n      description: A date and time value.\n    - id: rule\n      type: System.Globalization.CalendarWeekRule\n      description: An enumeration value that defines a calendar week.\n    - id: firstDayOfWeek\n      type: System.DayOfWeek\n      description: An enumeration value that represents the first day of the week.\n    return:\n      type: System.Int32\n      description: A positive integer that represents the week of the year that includes the date in the <code>time</code> parameter.\n  overload: System.Globalization.Calendar.GetWeekOfYear*\n  exceptions:\n  - type: System.ArgumentOutOfRangeException\n    commentId: T:System.ArgumentOutOfRangeException\n    description: \"<code>time</code> is earlier than <xref href=\\\"System.Globalization.Calendar.MinSupportedDateTime\\\"></xref> or later than <xref href=\\\"System.Globalization.Calendar.MaxSupportedDateTime\\\"></xref>.  \\n  \\n -or-  \\n  \\n <code>firstDayOfWeek</code> is not a valid <xref href=\\\"System.DayOfWeek\\\"></xref> value.  \\n  \\n -or-  \\n  \\n <code>rule</code> is not a valid <xref href=\\\"System.Globalization.CalendarWeekRule\\\"></xref> value.\"\n  version:\n  - netcore-1.0\n  - netcore-1.1\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - netstandard-1.0\n  - netstandard-1.1\n  - netstandard-1.2\n  - netstandard-1.3\n  - netstandard-1.4\n  - netstandard-1.6\n  - netstandard-2.0\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  monikers:\n  - netcore-1.0\n  - netcore-1.1\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - netstandard-1.0\n  - netstandard-1.1\n  - netstandard-1.2\n  - netstandard-1.3\n  - netstandard-1.4\n  - netstandard-1.6\n  - netstandard-2.0\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Globalization/Calendar.xml\n  ms.technology:\n  - dotnet-standard\n  author: rpetrusha\n  ms.author: ronpet\n  manager: wpickett\n- uid: System.Globalization.Calendar.GetYear(System.DateTime)\n  commentId: M:System.Globalization.Calendar.GetYear(System.DateTime)\n  id: GetYear(System.DateTime)\n  parent: System.Globalization.Calendar\n  langs:\n  - csharp\n  name: GetYear(DateTime)\n  nameWithType: Calendar.GetYear(DateTime)\n  fullName: Calendar.GetYear(DateTime)\n  type: Method\n  assemblies:\n  - System.Globalization\n  - mscorlib\n  - netstandard\n  - System.Runtime\n  namespace: System.Globalization\n  summary: When overridden in a derived class, returns the year in the specified <xref href=\"System.DateTime\"></xref>.\n  remarks: ''\n  example:\n  - \"The following code example demonstrates the members of the <xref:System.Globalization.Calendar> class.  \\n  \\n [!code-cpp[System.Globalization.Calendar#1](~/samples/snippets/cpp/VS_Snippets_CLR_System/system.Globalization.Calendar/CPP/calendar.cpp#1)]\\n [!code-csharp[System.Globalization.Calendar#1](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.Globalization.Calendar/CS/calendar.cs#1)]\\n [!code-vb[System.Globalization.Calendar#1](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.Globalization.Calendar/VB/calendar.vb#1)]\"\n  syntax:\n    content: public abstract int GetYear (DateTime time);\n    parameters:\n    - id: time\n      type: System.DateTime\n      description: The <xref href=\"System.DateTime\"></xref> to read.\n    return:\n      type: System.Int32\n      description: An integer that represents the year in <code>time</code>.\n  overload: System.Globalization.Calendar.GetYear*\n  exceptions: []\n  version:\n  - netcore-1.0\n  - netcore-1.1\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - netstandard-1.0\n  - netstandard-1.1\n  - netstandard-1.2\n  - netstandard-1.3\n  - netstandard-1.4\n  - netstandard-1.6\n  - netstandard-2.0\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  monikers:\n  - netcore-1.0\n  - netcore-1.1\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - netstandard-1.0\n  - netstandard-1.1\n  - netstandard-1.2\n  - netstandard-1.3\n  - netstandard-1.4\n  - netstandard-1.6\n  - netstandard-2.0\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Globalization/Calendar.xml\n  ms.technology:\n  - dotnet-standard\n  author: rpetrusha\n  ms.author: ronpet\n  manager: wpickett\n- uid: System.Globalization.Calendar.IsLeapDay(System.Int32,System.Int32,System.Int32)\n  commentId: M:System.Globalization.Calendar.IsLeapDay(System.Int32,System.Int32,System.Int32)\n  id: IsLeapDay(System.Int32,System.Int32,System.Int32)\n  parent: System.Globalization.Calendar\n  langs:\n  - csharp\n  name: IsLeapDay(Int32, Int32, Int32)\n  nameWithType: Calendar.IsLeapDay(Int32, Int32, Int32)\n  fullName: Calendar.IsLeapDay(Int32, Int32, Int32)\n  type: Method\n  assemblies:\n  - System.Globalization\n  - mscorlib\n  - netstandard\n  - System.Runtime\n  namespace: System.Globalization\n  summary: Determines whether the specified date in the current era is a leap day.\n  remarks: \"To make up for the difference between the calendar year and the actual time that the earth rotates around the sun or the actual time that the moon rotates around the earth, a leap year has a different number of days from a standard calendar year. Each <xref:System.Globalization.Calendar> implementation defines leap years differently.  \\n  \\n A leap day is a day that occurs only in a leap year. For example, in the Gregorian calendar, the 29th day of February is the only leap day.\"\n  example:\n  - \"The following code example compares different implementations of the <xref:System.Globalization.Calendar> class.  \\n  \\n [!code-cpp[System.Globalization.Calendar_Compare#1](~/samples/snippets/cpp/VS_Snippets_CLR_System/system.Globalization.Calendar_Compare/CPP/calendar_compare.cpp#1)]\\n [!code-csharp[System.Globalization.Calendar_Compare#1](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.Globalization.Calendar_Compare/CS/calendar_compare.cs#1)]\\n [!code-vb[System.Globalization.Calendar_Compare#1](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.Globalization.Calendar_Compare/VB/calendar_compare.vb#1)]\"\n  syntax:\n    content: public virtual bool IsLeapDay (int year, int month, int day);\n    parameters:\n    - id: year\n      type: System.Int32\n      description: An integer that represents the year.\n    - id: month\n      type: System.Int32\n      description: A positive integer that represents the month.\n    - id: day\n      type: System.Int32\n      description: A positive integer that represents the day.\n    return:\n      type: System.Boolean\n      description: '`true` if the specified day is a leap day; otherwise, `false`.'\n  overload: System.Globalization.Calendar.IsLeapDay*\n  exceptions:\n  - type: System.ArgumentOutOfRangeException\n    commentId: T:System.ArgumentOutOfRangeException\n    description: \"<code>year</code> is outside the range supported by the calendar.  \\n  \\n -or-  \\n  \\n <code>month</code> is outside the range supported by the calendar.  \\n  \\n -or-  \\n  \\n <code>day</code> is outside the range supported by the calendar.\"\n  version:\n  - netcore-1.0\n  - netcore-1.1\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - netstandard-1.0\n  - netstandard-1.1\n  - netstandard-1.2\n  - netstandard-1.3\n  - netstandard-1.4\n  - netstandard-1.6\n  - netstandard-2.0\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  monikers:\n  - netcore-1.0\n  - netcore-1.1\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - netstandard-1.0\n  - netstandard-1.1\n  - netstandard-1.2\n  - netstandard-1.3\n  - netstandard-1.4\n  - netstandard-1.6\n  - netstandard-2.0\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Globalization/Calendar.xml\n  ms.technology:\n  - dotnet-standard\n  author: rpetrusha\n  ms.author: ronpet\n  manager: wpickett\n- uid: System.Globalization.Calendar.IsLeapDay(System.Int32,System.Int32,System.Int32,System.Int32)\n  commentId: M:System.Globalization.Calendar.IsLeapDay(System.Int32,System.Int32,System.Int32,System.Int32)\n  id: IsLeapDay(System.Int32,System.Int32,System.Int32,System.Int32)\n  parent: System.Globalization.Calendar\n  langs:\n  - csharp\n  name: IsLeapDay(Int32, Int32, Int32, Int32)\n  nameWithType: Calendar.IsLeapDay(Int32, Int32, Int32, Int32)\n  fullName: Calendar.IsLeapDay(Int32, Int32, Int32, Int32)\n  type: Method\n  assemblies:\n  - System.Globalization\n  - mscorlib\n  - netstandard\n  - System.Runtime\n  namespace: System.Globalization\n  summary: When overridden in a derived class, determines whether the specified date in the specified era is a leap day.\n  remarks: \"To make up for the difference between the calendar year and the actual time that the earth rotates around the sun or the actual time that the moon rotates around the earth, a leap year has a different number of days from a standard calendar year. Each <xref:System.Globalization.Calendar> implementation defines leap years differently.  \\n  \\n A leap day is a day that occurs only in a leap year. For example, in the Gregorian calendar, the 29th day of February is the only leap day.\"\n  syntax:\n    content: public abstract bool IsLeapDay (int year, int month, int day, int era);\n    parameters:\n    - id: year\n      type: System.Int32\n      description: An integer that represents the year.\n    - id: month\n      type: System.Int32\n      description: A positive integer that represents the month.\n    - id: day\n      type: System.Int32\n      description: A positive integer that represents the day.\n    - id: era\n      type: System.Int32\n      description: An integer that represents the era.\n    return:\n      type: System.Boolean\n      description: '`true` if the specified day is a leap day; otherwise, `false`.'\n  overload: System.Globalization.Calendar.IsLeapDay*\n  exceptions:\n  - type: System.ArgumentOutOfRangeException\n    commentId: T:System.ArgumentOutOfRangeException\n    description: \"<code>year</code> is outside the range supported by the calendar.  \\n  \\n -or-  \\n  \\n <code>month</code> is outside the range supported by the calendar.  \\n  \\n -or-  \\n  \\n <code>day</code> is outside the range supported by the calendar.  \\n  \\n -or-  \\n  \\n <code>era</code> is outside the range supported by the calendar.\"\n  version:\n  - netcore-1.0\n  - netcore-1.1\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - netstandard-1.0\n  - netstandard-1.1\n  - netstandard-1.2\n  - netstandard-1.3\n  - netstandard-1.4\n  - netstandard-1.6\n  - netstandard-2.0\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  monikers:\n  - netcore-1.0\n  - netcore-1.1\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - netstandard-1.0\n  - netstandard-1.1\n  - netstandard-1.2\n  - netstandard-1.3\n  - netstandard-1.4\n  - netstandard-1.6\n  - netstandard-2.0\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Globalization/Calendar.xml\n  ms.technology:\n  - dotnet-standard\n  author: rpetrusha\n  ms.author: ronpet\n  manager: wpickett\n- uid: System.Globalization.Calendar.IsLeapMonth(System.Int32,System.Int32,System.Int32)\n  commentId: M:System.Globalization.Calendar.IsLeapMonth(System.Int32,System.Int32,System.Int32)\n  id: IsLeapMonth(System.Int32,System.Int32,System.Int32)\n  parent: System.Globalization.Calendar\n  langs:\n  - csharp\n  name: IsLeapMonth(Int32, Int32, Int32)\n  nameWithType: Calendar.IsLeapMonth(Int32, Int32, Int32)\n  fullName: Calendar.IsLeapMonth(Int32, Int32, Int32)\n  type: Method\n  assemblies:\n  - System.Globalization\n  - mscorlib\n  - netstandard\n  - System.Runtime\n  namespace: System.Globalization\n  summary: When overridden in a derived class, determines whether the specified month in the specified year in the specified era is a leap month.\n  remarks: \"To make up for the difference between the calendar year and the actual time that the earth rotates around the sun or the actual time that the moon rotates around the earth, a leap year has a different number of days from a standard calendar year. Each <xref:System.Globalization.Calendar> implementation defines leap years differently.  \\n  \\n A leap month is an entire month that occurs only in a leap year. For example, in the Hebrew calendar, Adar Beit is the only leap month.\"\n  syntax:\n    content: public abstract bool IsLeapMonth (int year, int month, int era);\n    parameters:\n    - id: year\n      type: System.Int32\n      description: An integer that represents the year.\n    - id: month\n      type: System.Int32\n      description: A positive integer that represents the month.\n    - id: era\n      type: System.Int32\n      description: An integer that represents the era.\n    return:\n      type: System.Boolean\n      description: '`true` if the specified month is a leap month; otherwise, `false`.'\n  overload: System.Globalization.Calendar.IsLeapMonth*\n  exceptions:\n  - type: System.ArgumentOutOfRangeException\n    commentId: T:System.ArgumentOutOfRangeException\n    description: \"<code>year</code> is outside the range supported by the calendar.  \\n  \\n -or-  \\n  \\n <code>month</code> is outside the range supported by the calendar.  \\n  \\n -or-  \\n  \\n <code>era</code> is outside the range supported by the calendar.\"\n  version:\n  - netcore-1.0\n  - netcore-1.1\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - netstandard-1.0\n  - netstandard-1.1\n  - netstandard-1.2\n  - netstandard-1.3\n  - netstandard-1.4\n  - netstandard-1.6\n  - netstandard-2.0\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  monikers:\n  - netcore-1.0\n  - netcore-1.1\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - netstandard-1.0\n  - netstandard-1.1\n  - netstandard-1.2\n  - netstandard-1.3\n  - netstandard-1.4\n  - netstandard-1.6\n  - netstandard-2.0\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Globalization/Calendar.xml\n  ms.technology:\n  - dotnet-standard\n  author: rpetrusha\n  ms.author: ronpet\n  manager: wpickett\n- uid: System.Globalization.Calendar.IsLeapMonth(System.Int32,System.Int32)\n  commentId: M:System.Globalization.Calendar.IsLeapMonth(System.Int32,System.Int32)\n  id: IsLeapMonth(System.Int32,System.Int32)\n  parent: System.Globalization.Calendar\n  langs:\n  - csharp\n  name: IsLeapMonth(Int32, Int32)\n  nameWithType: Calendar.IsLeapMonth(Int32, Int32)\n  fullName: Calendar.IsLeapMonth(Int32, Int32)\n  type: Method\n  assemblies:\n  - System.Globalization\n  - mscorlib\n  - netstandard\n  - System.Runtime\n  namespace: System.Globalization\n  summary: Determines whether the specified month in the specified year in the current era is a leap month.\n  remarks: \"To make up for the difference between the calendar year and the actual time that the earth rotates around the sun or the actual time that the moon rotates around the earth, a leap year has a different number of days from a standard calendar year. Each <xref:System.Globalization.Calendar> implementation defines leap years differently.  \\n  \\n A leap month is an entire month that occurs only in a leap year. For example, in the Hebrew calendar, Adar Beit is the only leap month.\"\n  example:\n  - \"The following code example compares different implementations of the <xref:System.Globalization.Calendar> class.  \\n  \\n [!code-cpp[System.Globalization.Calendar_Compare#1](~/samples/snippets/cpp/VS_Snippets_CLR_System/system.Globalization.Calendar_Compare/CPP/calendar_compare.cpp#1)]\\n [!code-csharp[System.Globalization.Calendar_Compare#1](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.Globalization.Calendar_Compare/CS/calendar_compare.cs#1)]\\n [!code-vb[System.Globalization.Calendar_Compare#1](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.Globalization.Calendar_Compare/VB/calendar_compare.vb#1)]\"\n  syntax:\n    content: public virtual bool IsLeapMonth (int year, int month);\n    parameters:\n    - id: year\n      type: System.Int32\n      description: An integer that represents the year.\n    - id: month\n      type: System.Int32\n      description: A positive integer that represents the month.\n    return:\n      type: System.Boolean\n      description: '`true` if the specified month is a leap month; otherwise, `false`.'\n  overload: System.Globalization.Calendar.IsLeapMonth*\n  exceptions:\n  - type: System.ArgumentOutOfRangeException\n    commentId: T:System.ArgumentOutOfRangeException\n    description: \"<code>year</code> is outside the range supported by the calendar.  \\n  \\n -or-  \\n  \\n <code>month</code> is outside the range supported by the calendar.\"\n  version:\n  - netcore-1.0\n  - netcore-1.1\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - netstandard-1.0\n  - netstandard-1.1\n  - netstandard-1.2\n  - netstandard-1.3\n  - netstandard-1.4\n  - netstandard-1.6\n  - netstandard-2.0\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  monikers:\n  - netcore-1.0\n  - netcore-1.1\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - netstandard-1.0\n  - netstandard-1.1\n  - netstandard-1.2\n  - netstandard-1.3\n  - netstandard-1.4\n  - netstandard-1.6\n  - netstandard-2.0\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Globalization/Calendar.xml\n  ms.technology:\n  - dotnet-standard\n  author: rpetrusha\n  ms.author: ronpet\n  manager: wpickett\n- uid: System.Globalization.Calendar.IsLeapYear(System.Int32)\n  commentId: M:System.Globalization.Calendar.IsLeapYear(System.Int32)\n  id: IsLeapYear(System.Int32)\n  parent: System.Globalization.Calendar\n  langs:\n  - csharp\n  name: IsLeapYear(Int32)\n  nameWithType: Calendar.IsLeapYear(Int32)\n  fullName: Calendar.IsLeapYear(Int32)\n  type: Method\n  assemblies:\n  - System.Globalization\n  - mscorlib\n  - netstandard\n  - System.Runtime\n  namespace: System.Globalization\n  summary: Determines whether the specified year in the current era is a leap year.\n  remarks: To make up for the difference between the calendar year and the actual time that the earth rotates around the sun or the actual time that the moon rotates around the earth, a leap year has a different number of days from a standard calendar year. Each <xref:System.Globalization.Calendar> implementation defines leap years differently.\n  example:\n  - \"The following code example compares different implementations of the <xref:System.Globalization.Calendar> class.  \\n  \\n [!code-cpp[System.Globalization.Calendar_Compare#1](~/samples/snippets/cpp/VS_Snippets_CLR_System/system.Globalization.Calendar_Compare/CPP/calendar_compare.cpp#1)]\\n [!code-csharp[System.Globalization.Calendar_Compare#1](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.Globalization.Calendar_Compare/CS/calendar_compare.cs#1)]\\n [!code-vb[System.Globalization.Calendar_Compare#1](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.Globalization.Calendar_Compare/VB/calendar_compare.vb#1)]\"\n  syntax:\n    content: public virtual bool IsLeapYear (int year);\n    parameters:\n    - id: year\n      type: System.Int32\n      description: An integer that represents the year.\n    return:\n      type: System.Boolean\n      description: '`true` if the specified year is a leap year; otherwise, `false`.'\n  overload: System.Globalization.Calendar.IsLeapYear*\n  exceptions:\n  - type: System.ArgumentOutOfRangeException\n    commentId: T:System.ArgumentOutOfRangeException\n    description: <code>year</code> is outside the range supported by the calendar.\n  version:\n  - netcore-1.0\n  - netcore-1.1\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - netstandard-1.0\n  - netstandard-1.1\n  - netstandard-1.2\n  - netstandard-1.3\n  - netstandard-1.4\n  - netstandard-1.6\n  - netstandard-2.0\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  monikers:\n  - netcore-1.0\n  - netcore-1.1\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - netstandard-1.0\n  - netstandard-1.1\n  - netstandard-1.2\n  - netstandard-1.3\n  - netstandard-1.4\n  - netstandard-1.6\n  - netstandard-2.0\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Globalization/Calendar.xml\n  ms.technology:\n  - dotnet-standard\n  author: rpetrusha\n  ms.author: ronpet\n  manager: wpickett\n- uid: System.Globalization.Calendar.IsLeapYear(System.Int32,System.Int32)\n  commentId: M:System.Globalization.Calendar.IsLeapYear(System.Int32,System.Int32)\n  id: IsLeapYear(System.Int32,System.Int32)\n  parent: System.Globalization.Calendar\n  langs:\n  - csharp\n  name: IsLeapYear(Int32, Int32)\n  nameWithType: Calendar.IsLeapYear(Int32, Int32)\n  fullName: Calendar.IsLeapYear(Int32, Int32)\n  type: Method\n  assemblies:\n  - System.Globalization\n  - mscorlib\n  - netstandard\n  - System.Runtime\n  namespace: System.Globalization\n  summary: When overridden in a derived class, determines whether the specified year in the specified era is a leap year.\n  remarks: To make up for the difference between the calendar year and the actual time that the earth rotates around the sun or the actual time that the moon rotates around the earth, a leap year has a different number of days from a standard calendar year. Each <xref:System.Globalization.Calendar> implementation defines leap years differently.\n  syntax:\n    content: public abstract bool IsLeapYear (int year, int era);\n    parameters:\n    - id: year\n      type: System.Int32\n      description: An integer that represents the year.\n    - id: era\n      type: System.Int32\n      description: An integer that represents the era.\n    return:\n      type: System.Boolean\n      description: '`true` if the specified year is a leap year; otherwise, `false`.'\n  overload: System.Globalization.Calendar.IsLeapYear*\n  exceptions:\n  - type: System.ArgumentOutOfRangeException\n    commentId: T:System.ArgumentOutOfRangeException\n    description: \"<code>year</code> is outside the range supported by the calendar.  \\n  \\n -or-  \\n  \\n <code>era</code> is outside the range supported by the calendar.\"\n  version:\n  - netcore-1.0\n  - netcore-1.1\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - netstandard-1.0\n  - netstandard-1.1\n  - netstandard-1.2\n  - netstandard-1.3\n  - netstandard-1.4\n  - netstandard-1.6\n  - netstandard-2.0\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  monikers:\n  - netcore-1.0\n  - netcore-1.1\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - netstandard-1.0\n  - netstandard-1.1\n  - netstandard-1.2\n  - netstandard-1.3\n  - netstandard-1.4\n  - netstandard-1.6\n  - netstandard-2.0\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Globalization/Calendar.xml\n  ms.technology:\n  - dotnet-standard\n  author: rpetrusha\n  ms.author: ronpet\n  manager: wpickett\n- uid: System.Globalization.Calendar.IsReadOnly\n  commentId: P:System.Globalization.Calendar.IsReadOnly\n  id: IsReadOnly\n  parent: System.Globalization.Calendar\n  langs:\n  - csharp\n  name: IsReadOnly\n  nameWithType: Calendar.IsReadOnly\n  fullName: Calendar.IsReadOnly\n  type: Property\n  assemblies:\n  - System.Globalization\n  - mscorlib\n  - netstandard\n  - System.Runtime\n  namespace: System.Globalization\n  summary: Gets a value indicating whether this <xref href=\"System.Globalization.Calendar\"></xref> object is read-only.\n  syntax:\n    content: >-\n      [System.Runtime.InteropServices.ComVisible(false)]\n\n      public bool IsReadOnly { get; }\n    return:\n      type: System.Boolean\n      description: '`true` if this <xref href=\"System.Globalization.Calendar\"></xref> object is read-only; otherwise, `false`.'\n  overload: System.Globalization.Calendar.IsReadOnly*\n  exceptions: []\n  attributes:\n  - type: System.Runtime.InteropServices.ComVisibleAttribute\n  version:\n  - netcore-1.0\n  - netcore-1.1\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - netstandard-1.0\n  - netstandard-1.1\n  - netstandard-1.2\n  - netstandard-1.3\n  - netstandard-1.4\n  - netstandard-1.6\n  - netstandard-2.0\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  monikers:\n  - netcore-1.0\n  - netcore-1.1\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - netstandard-1.0\n  - netstandard-1.1\n  - netstandard-1.2\n  - netstandard-1.3\n  - netstandard-1.4\n  - netstandard-1.6\n  - netstandard-2.0\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Globalization/Calendar.xml\n  ms.technology:\n  - dotnet-standard\n  author: rpetrusha\n  ms.author: ronpet\n  manager: wpickett\n- uid: System.Globalization.Calendar.MaxSupportedDateTime\n  commentId: P:System.Globalization.Calendar.MaxSupportedDateTime\n  id: MaxSupportedDateTime\n  parent: System.Globalization.Calendar\n  langs:\n  - csharp\n  name: MaxSupportedDateTime\n  nameWithType: Calendar.MaxSupportedDateTime\n  fullName: Calendar.MaxSupportedDateTime\n  type: Property\n  assemblies:\n  - System.Globalization\n  - mscorlib\n  - netstandard\n  - System.Runtime\n  namespace: System.Globalization\n  summary: Gets the latest date and time supported by this <xref href=\"System.Globalization.Calendar\"></xref> object.\n  syntax:\n    content: >-\n      [System.Runtime.InteropServices.ComVisible(false)]\n\n      public virtual DateTime MaxSupportedDateTime { get; }\n    return:\n      type: System.DateTime\n      description: The latest date and time supported by this calendar. The default is <xref href=\"System.DateTime.MaxValue\"></xref>.\n  overload: System.Globalization.Calendar.MaxSupportedDateTime*\n  exceptions: []\n  attributes:\n  - type: System.Runtime.InteropServices.ComVisibleAttribute\n  version:\n  - netcore-1.0\n  - netcore-1.1\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - netstandard-1.0\n  - netstandard-1.1\n  - netstandard-1.2\n  - netstandard-1.3\n  - netstandard-1.4\n  - netstandard-1.6\n  - netstandard-2.0\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  monikers:\n  - netcore-1.0\n  - netcore-1.1\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - netstandard-1.0\n  - netstandard-1.1\n  - netstandard-1.2\n  - netstandard-1.3\n  - netstandard-1.4\n  - netstandard-1.6\n  - netstandard-2.0\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Globalization/Calendar.xml\n  ms.technology:\n  - dotnet-standard\n  author: rpetrusha\n  ms.author: ronpet\n  manager: wpickett\n- uid: System.Globalization.Calendar.MinSupportedDateTime\n  commentId: P:System.Globalization.Calendar.MinSupportedDateTime\n  id: MinSupportedDateTime\n  parent: System.Globalization.Calendar\n  langs:\n  - csharp\n  name: MinSupportedDateTime\n  nameWithType: Calendar.MinSupportedDateTime\n  fullName: Calendar.MinSupportedDateTime\n  type: Property\n  assemblies:\n  - System.Globalization\n  - mscorlib\n  - netstandard\n  - System.Runtime\n  namespace: System.Globalization\n  summary: Gets the earliest date and time supported by this <xref href=\"System.Globalization.Calendar\"></xref> object.\n  syntax:\n    content: >-\n      [System.Runtime.InteropServices.ComVisible(false)]\n\n      public virtual DateTime MinSupportedDateTime { get; }\n    return:\n      type: System.DateTime\n      description: The earliest date and time supported by this calendar. The default is <xref href=\"System.DateTime.MinValue\"></xref>.\n  overload: System.Globalization.Calendar.MinSupportedDateTime*\n  exceptions: []\n  attributes:\n  - type: System.Runtime.InteropServices.ComVisibleAttribute\n  version:\n  - netcore-1.0\n  - netcore-1.1\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - netstandard-1.0\n  - netstandard-1.1\n  - netstandard-1.2\n  - netstandard-1.3\n  - netstandard-1.4\n  - netstandard-1.6\n  - netstandard-2.0\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  monikers:\n  - netcore-1.0\n  - netcore-1.1\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - netstandard-1.0\n  - netstandard-1.1\n  - netstandard-1.2\n  - netstandard-1.3\n  - netstandard-1.4\n  - netstandard-1.6\n  - netstandard-2.0\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Globalization/Calendar.xml\n  ms.technology:\n  - dotnet-standard\n  author: rpetrusha\n  ms.author: ronpet\n  manager: wpickett\n- uid: System.Globalization.Calendar.ReadOnly(System.Globalization.Calendar)\n  commentId: M:System.Globalization.Calendar.ReadOnly(System.Globalization.Calendar)\n  id: ReadOnly(System.Globalization.Calendar)\n  parent: System.Globalization.Calendar\n  langs:\n  - csharp\n  name: ReadOnly(Calendar)\n  nameWithType: Calendar.ReadOnly(Calendar)\n  fullName: Calendar.ReadOnly(Calendar)\n  type: Method\n  assemblies:\n  - mscorlib\n  - netstandard\n  - System.Runtime\n  namespace: System.Globalization\n  summary: Returns a read-only version of the specified <xref href=\"System.Globalization.Calendar\"></xref> object.\n  syntax:\n    content: >-\n      [System.Runtime.InteropServices.ComVisible(false)]\n\n      public static System.Globalization.Calendar ReadOnly (System.Globalization.Calendar calendar);\n    parameters:\n    - id: calendar\n      type: System.Globalization.Calendar\n      description: A <xref href=\"System.Globalization.Calendar\"></xref> object.\n    return:\n      type: System.Globalization.Calendar\n      description: \"The <xref href=\\\"System.Globalization.Calendar\\\"></xref> object specified by the <code>calendar</code> parameter, if <code>calendar</code> is read-only.  \\n  \\n -or-  \\n  \\n A read-only memberwise clone of the <xref href=\\\"System.Globalization.Calendar\\\"></xref> object specified by <code>calendar</code>, if <code>calendar</code> is not read-only.\"\n  overload: System.Globalization.Calendar.ReadOnly*\n  exceptions:\n  - type: System.ArgumentNullException\n    commentId: T:System.ArgumentNullException\n    description: <code>calendar</code> is `null`.\n  attributes:\n  - type: System.Runtime.InteropServices.ComVisibleAttribute\n  version:\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - netstandard-2.0\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  monikers:\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - netstandard-2.0\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Globalization/Calendar.xml\n  ms.technology:\n  - dotnet-standard\n  author: rpetrusha\n  ms.author: ronpet\n  manager: wpickett\n- uid: System.Globalization.Calendar.ToDateTime(System.Int32,System.Int32,System.Int32,System.Int32,System.Int32,System.Int32,System.Int32)\n  commentId: M:System.Globalization.Calendar.ToDateTime(System.Int32,System.Int32,System.Int32,System.Int32,System.Int32,System.Int32,System.Int32)\n  id: ToDateTime(System.Int32,System.Int32,System.Int32,System.Int32,System.Int32,System.Int32,System.Int32)\n  parent: System.Globalization.Calendar\n  langs:\n  - csharp\n  name: ToDateTime(Int32, Int32, Int32, Int32, Int32, Int32, Int32)\n  nameWithType: Calendar.ToDateTime(Int32, Int32, Int32, Int32, Int32, Int32, Int32)\n  fullName: Calendar.ToDateTime(Int32, Int32, Int32, Int32, Int32, Int32, Int32)\n  type: Method\n  assemblies:\n  - System.Globalization\n  - mscorlib\n  - netstandard\n  - System.Runtime\n  namespace: System.Globalization\n  summary: Returns a <xref href=\"System.DateTime\"></xref> that is set to the specified date and time in the current era.\n  syntax:\n    content: public virtual DateTime ToDateTime (int year, int month, int day, int hour, int minute, int second, int millisecond);\n    parameters:\n    - id: year\n      type: System.Int32\n      description: An integer that represents the year.\n    - id: month\n      type: System.Int32\n      description: A positive integer that represents the month.\n    - id: day\n      type: System.Int32\n      description: A positive integer that represents the day.\n    - id: hour\n      type: System.Int32\n      description: An integer from 0 to 23 that represents the hour.\n    - id: minute\n      type: System.Int32\n      description: An integer from 0 to 59 that represents the minute.\n    - id: second\n      type: System.Int32\n      description: An integer from 0 to 59 that represents the second.\n    - id: millisecond\n      type: System.Int32\n      description: An integer from 0 to 999 that represents the millisecond.\n    return:\n      type: System.DateTime\n      description: The <xref href=\"System.DateTime\"></xref> that is set to the specified date and time in the current era.\n  overload: System.Globalization.Calendar.ToDateTime*\n  exceptions:\n  - type: System.ArgumentOutOfRangeException\n    commentId: T:System.ArgumentOutOfRangeException\n    description: \"<code>year</code> is outside the range supported by the calendar.  \\n  \\n -or-  \\n  \\n <code>month</code> is outside the range supported by the calendar.  \\n  \\n -or-  \\n  \\n <code>day</code> is outside the range supported by the calendar.  \\n  \\n -or-  \\n  \\n <code>hour</code> is less than zero or greater than 23.  \\n  \\n -or-  \\n  \\n <code>minute</code> is less than zero or greater than 59.  \\n  \\n -or-  \\n  \\n <code>second</code> is less than zero or greater than 59.  \\n  \\n -or-  \\n  \\n <code>millisecond</code> is less than zero or greater than 999.\"\n  version:\n  - netcore-1.0\n  - netcore-1.1\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - netstandard-1.0\n  - netstandard-1.1\n  - netstandard-1.2\n  - netstandard-1.3\n  - netstandard-1.4\n  - netstandard-1.6\n  - netstandard-2.0\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  monikers:\n  - netcore-1.0\n  - netcore-1.1\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - netstandard-1.0\n  - netstandard-1.1\n  - netstandard-1.2\n  - netstandard-1.3\n  - netstandard-1.4\n  - netstandard-1.6\n  - netstandard-2.0\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Globalization/Calendar.xml\n  ms.technology:\n  - dotnet-standard\n  author: rpetrusha\n  ms.author: ronpet\n  manager: wpickett\n- uid: System.Globalization.Calendar.ToDateTime(System.Int32,System.Int32,System.Int32,System.Int32,System.Int32,System.Int32,System.Int32,System.Int32)\n  commentId: M:System.Globalization.Calendar.ToDateTime(System.Int32,System.Int32,System.Int32,System.Int32,System.Int32,System.Int32,System.Int32,System.Int32)\n  id: ToDateTime(System.Int32,System.Int32,System.Int32,System.Int32,System.Int32,System.Int32,System.Int32,System.Int32)\n  parent: System.Globalization.Calendar\n  langs:\n  - csharp\n  name: ToDateTime(Int32, Int32, Int32, Int32, Int32, Int32, Int32, Int32)\n  nameWithType: Calendar.ToDateTime(Int32, Int32, Int32, Int32, Int32, Int32, Int32, Int32)\n  fullName: Calendar.ToDateTime(Int32, Int32, Int32, Int32, Int32, Int32, Int32, Int32)\n  type: Method\n  assemblies:\n  - System.Globalization\n  - mscorlib\n  - netstandard\n  - System.Runtime\n  namespace: System.Globalization\n  summary: When overridden in a derived class, returns a <xref href=\"System.DateTime\"></xref> that is set to the specified date and time in the specified era.\n  remarks: The <xref:System.Globalization.Calendar.ToDateTime%2A> method is useful because it can convert any date in the current calendar to a Gregorian calendar date. The Gregorian date can subsequently be used, for example, to compare dates in different calendars or create an equivalent date in a particular calendar.\n  syntax:\n    content: public abstract DateTime ToDateTime (int year, int month, int day, int hour, int minute, int second, int millisecond, int era);\n    parameters:\n    - id: year\n      type: System.Int32\n      description: An integer that represents the year.\n    - id: month\n      type: System.Int32\n      description: A positive integer that represents the month.\n    - id: day\n      type: System.Int32\n      description: A positive integer that represents the day.\n    - id: hour\n      type: System.Int32\n      description: An integer from 0 to 23 that represents the hour.\n    - id: minute\n      type: System.Int32\n      description: An integer from 0 to 59 that represents the minute.\n    - id: second\n      type: System.Int32\n      description: An integer from 0 to 59 that represents the second.\n    - id: millisecond\n      type: System.Int32\n      description: An integer from 0 to 999 that represents the millisecond.\n    - id: era\n      type: System.Int32\n      description: An integer that represents the era.\n    return:\n      type: System.DateTime\n      description: The <xref href=\"System.DateTime\"></xref> that is set to the specified date and time in the current era.\n  overload: System.Globalization.Calendar.ToDateTime*\n  exceptions:\n  - type: System.ArgumentOutOfRangeException\n    commentId: T:System.ArgumentOutOfRangeException\n    description: \"<code>year</code> is outside the range supported by the calendar.  \\n  \\n -or-  \\n  \\n <code>month</code> is outside the range supported by the calendar.  \\n  \\n -or-  \\n  \\n <code>day</code> is outside the range supported by the calendar.  \\n  \\n -or-  \\n  \\n <code>hour</code> is less than zero or greater than 23.  \\n  \\n -or-  \\n  \\n <code>minute</code> is less than zero or greater than 59.  \\n  \\n -or-  \\n  \\n <code>second</code> is less than zero or greater than 59.  \\n  \\n -or-  \\n  \\n <code>millisecond</code> is less than zero or greater than 999.  \\n  \\n -or-  \\n  \\n <code>era</code> is outside the range supported by the calendar.\"\n  version:\n  - netcore-1.0\n  - netcore-1.1\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - netstandard-1.0\n  - netstandard-1.1\n  - netstandard-1.2\n  - netstandard-1.3\n  - netstandard-1.4\n  - netstandard-1.6\n  - netstandard-2.0\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  monikers:\n  - netcore-1.0\n  - netcore-1.1\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - netstandard-1.0\n  - netstandard-1.1\n  - netstandard-1.2\n  - netstandard-1.3\n  - netstandard-1.4\n  - netstandard-1.6\n  - netstandard-2.0\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Globalization/Calendar.xml\n  ms.technology:\n  - dotnet-standard\n  author: rpetrusha\n  ms.author: ronpet\n  manager: wpickett\n- uid: System.Globalization.Calendar.ToFourDigitYear(System.Int32)\n  commentId: M:System.Globalization.Calendar.ToFourDigitYear(System.Int32)\n  id: ToFourDigitYear(System.Int32)\n  parent: System.Globalization.Calendar\n  langs:\n  - csharp\n  name: ToFourDigitYear(Int32)\n  nameWithType: Calendar.ToFourDigitYear(Int32)\n  fullName: Calendar.ToFourDigitYear(Int32)\n  type: Method\n  assemblies:\n  - System.Globalization\n  - mscorlib\n  - netstandard\n  - System.Runtime\n  namespace: System.Globalization\n  summary: Converts the specified year to a four-digit year by using the <xref href=\"System.Globalization.Calendar.TwoDigitYearMax\"></xref> property to determine the appropriate century.\n  remarks: \"<xref:System.Globalization.Calendar.TwoDigitYearMax%2A> is the last year in the 100-year range that can be represented by a two-digit year. The century is determined by finding the sole occurrence of the two-digit `year` within that 100-year range. For example, if <xref:System.Globalization.Calendar.TwoDigitYearMax%2A> is set to 2029, the 100-year range is from 1930 to 2029. Therefore, a 2-digit value of 30 is interpreted as 1930, while a 2-digit value of 29 is interpreted as 2029.  \\n  \\n If `year` is greater than or equal to 100, the value of `year` is returned unchanged.  \\n  \\n <xref:System.Globalization.Calendar.ToFourDigitYear%2A> supports either a two-digit year or a four-digit year. Passing a two-digit year value (less than 100) causes the method to convert the value to a four-digit value according to the <xref:System.Globalization.Calendar.TwoDigitYearMax%2A> value representing the appropriate century. If the application supplies a four-digit year value that is within the supported calendar range to <xref:System.Globalization.Calendar.ToFourDigitYear%2A>, the method returns the actual input value. If the application supplies a four-digit value that is outside the supported calendar range, or if it supplies a negative value, the method throws an exception.\"\n  syntax:\n    content: public virtual int ToFourDigitYear (int year);\n    parameters:\n    - id: year\n      type: System.Int32\n      description: A two-digit or four-digit integer that represents the year to convert.\n    return:\n      type: System.Int32\n      description: An integer that contains the four-digit representation of <code>year</code>.\n  overload: System.Globalization.Calendar.ToFourDigitYear*\n  exceptions:\n  - type: System.ArgumentOutOfRangeException\n    commentId: T:System.ArgumentOutOfRangeException\n    description: <code>year</code> is outside the range supported by the calendar.\n  version:\n  - netcore-1.0\n  - netcore-1.1\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - netstandard-1.0\n  - netstandard-1.1\n  - netstandard-1.2\n  - netstandard-1.3\n  - netstandard-1.4\n  - netstandard-1.6\n  - netstandard-2.0\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  monikers:\n  - netcore-1.0\n  - netcore-1.1\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - netstandard-1.0\n  - netstandard-1.1\n  - netstandard-1.2\n  - netstandard-1.3\n  - netstandard-1.4\n  - netstandard-1.6\n  - netstandard-2.0\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Globalization/Calendar.xml\n  ms.technology:\n  - dotnet-standard\n  author: rpetrusha\n  ms.author: ronpet\n  manager: wpickett\n- uid: System.Globalization.Calendar.TwoDigitYearMax\n  commentId: P:System.Globalization.Calendar.TwoDigitYearMax\n  id: TwoDigitYearMax\n  parent: System.Globalization.Calendar\n  langs:\n  - csharp\n  name: TwoDigitYearMax\n  nameWithType: Calendar.TwoDigitYearMax\n  fullName: Calendar.TwoDigitYearMax\n  type: Property\n  assemblies:\n  - System.Globalization\n  - mscorlib\n  - netstandard\n  - System.Runtime\n  namespace: System.Globalization\n  summary: Gets or sets the last year of a 100-year range that can be represented by a 2-digit year.\n  remarks: \"This property allows a 2-digit year to be properly translated to a 4-digit year. For example, if this property is set to 2029, the 100-year range is from 1930 to 2029. Therefore, a 2-digit value of 30 is interpreted as 1930, while a 2-digit value of 29 is interpreted as 2029.  \\n  \\n The initial value of this property is derived from the settings in the regional and language options portion of Control Panel. However, that information can change during the life of the <xref:System.AppDomain>. The <xref:System.Globalization.Calendar> class does not detect changes in the system settings automatically. If the calendar is not supported in the regional and language options, the initial value of this property is the default value defined by the <xref:System.Globalization.Calendar> class.  \\n  \\n Your application should set this value to 99 to indicate that 2-digit years are to be taken literally. For example, if this property is set to 99, the 100-year range is from 0 (not a valid value for most calendars) to 99. Therefore, a 2-digit value of 30 is interpreted as 30.\"\n  syntax:\n    content: public virtual int TwoDigitYearMax { get; set; }\n    return:\n      type: System.Int32\n      description: The last year of a 100-year range that can be represented by a 2-digit year.\n  overload: System.Globalization.Calendar.TwoDigitYearMax*\n  exceptions:\n  - type: System.InvalidOperationException\n    commentId: T:System.InvalidOperationException\n    description: The current <xref href=\"System.Globalization.Calendar\"></xref> object is read-only.\n  version:\n  - netcore-1.0\n  - netcore-1.1\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - netstandard-1.0\n  - netstandard-1.1\n  - netstandard-1.2\n  - netstandard-1.3\n  - netstandard-1.4\n  - netstandard-1.6\n  - netstandard-2.0\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  monikers:\n  - netcore-1.0\n  - netcore-1.1\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - netstandard-1.0\n  - netstandard-1.1\n  - netstandard-1.2\n  - netstandard-1.3\n  - netstandard-1.4\n  - netstandard-1.6\n  - netstandard-2.0\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Globalization/Calendar.xml\n  ms.technology:\n  - dotnet-standard\n  author: rpetrusha\n  ms.author: ronpet\n  manager: wpickett\nreferences:\n- uid: System.Object\n  parent: System\n  isExternal: false\n  name: Object\n  nameWithType: Object\n  fullName: System.Object\n- uid: System.ArgumentException\n  parent: System\n  isExternal: false\n  name: ArgumentException\n  nameWithType: ArgumentException\n  fullName: System.ArgumentException\n- uid: System.ArgumentOutOfRangeException\n  parent: System\n  isExternal: false\n  name: ArgumentOutOfRangeException\n  nameWithType: ArgumentOutOfRangeException\n  fullName: System.ArgumentOutOfRangeException\n- uid: System.ArgumentNullException\n  parent: System\n  isExternal: false\n  name: ArgumentNullException\n  nameWithType: ArgumentNullException\n  fullName: System.ArgumentNullException\n- uid: System.InvalidOperationException\n  parent: System\n  isExternal: false\n  name: InvalidOperationException\n  nameWithType: InvalidOperationException\n  fullName: System.InvalidOperationException\n- uid: System.Globalization.Calendar.#ctor\n  parent: System.Globalization.Calendar\n  isExternal: false\n  name: Calendar()\n  nameWithType: Calendar.Calendar()\n  fullName: Calendar.Calendar()\n- uid: System.Globalization.Calendar.AddDays(System.DateTime,System.Int32)\n  parent: System.Globalization.Calendar\n  isExternal: false\n  name: AddDays(DateTime, Int32)\n  nameWithType: Calendar.AddDays(DateTime, Int32)\n  fullName: Calendar.AddDays(DateTime, Int32)\n- uid: System.DateTime\n  parent: System\n  isExternal: false\n  name: DateTime\n  nameWithType: DateTime\n  fullName: System.DateTime\n- uid: System.Int32\n  parent: System\n  isExternal: false\n  name: Int32\n  nameWithType: Int32\n  fullName: System.Int32\n- uid: System.Globalization.Calendar.AddHours(System.DateTime,System.Int32)\n  parent: System.Globalization.Calendar\n  isExternal: false\n  name: AddHours(DateTime, Int32)\n  nameWithType: Calendar.AddHours(DateTime, Int32)\n  fullName: Calendar.AddHours(DateTime, Int32)\n- uid: System.Globalization.Calendar.AddMilliseconds(System.DateTime,System.Double)\n  parent: System.Globalization.Calendar\n  isExternal: false\n  name: AddMilliseconds(DateTime, Double)\n  nameWithType: Calendar.AddMilliseconds(DateTime, Double)\n  fullName: Calendar.AddMilliseconds(DateTime, Double)\n- uid: System.Double\n  parent: System\n  isExternal: false\n  name: Double\n  nameWithType: Double\n  fullName: System.Double\n- uid: System.Globalization.Calendar.AddMinutes(System.DateTime,System.Int32)\n  parent: System.Globalization.Calendar\n  isExternal: false\n  name: AddMinutes(DateTime, Int32)\n  nameWithType: Calendar.AddMinutes(DateTime, Int32)\n  fullName: Calendar.AddMinutes(DateTime, Int32)\n- uid: System.Globalization.Calendar.AddMonths(System.DateTime,System.Int32)\n  parent: System.Globalization.Calendar\n  isExternal: false\n  name: AddMonths(DateTime, Int32)\n  nameWithType: Calendar.AddMonths(DateTime, Int32)\n  fullName: Calendar.AddMonths(DateTime, Int32)\n- uid: System.Globalization.Calendar.AddSeconds(System.DateTime,System.Int32)\n  parent: System.Globalization.Calendar\n  isExternal: false\n  name: AddSeconds(DateTime, Int32)\n  nameWithType: Calendar.AddSeconds(DateTime, Int32)\n  fullName: Calendar.AddSeconds(DateTime, Int32)\n- uid: System.Globalization.Calendar.AddWeeks(System.DateTime,System.Int32)\n  parent: System.Globalization.Calendar\n  isExternal: false\n  name: AddWeeks(DateTime, Int32)\n  nameWithType: Calendar.AddWeeks(DateTime, Int32)\n  fullName: Calendar.AddWeeks(DateTime, Int32)\n- uid: System.Globalization.Calendar.AddYears(System.DateTime,System.Int32)\n  parent: System.Globalization.Calendar\n  isExternal: false\n  name: AddYears(DateTime, Int32)\n  nameWithType: Calendar.AddYears(DateTime, Int32)\n  fullName: Calendar.AddYears(DateTime, Int32)\n- uid: System.Globalization.Calendar.AlgorithmType\n  parent: System.Globalization.Calendar\n  isExternal: false\n  name: AlgorithmType\n  nameWithType: Calendar.AlgorithmType\n  fullName: Calendar.AlgorithmType\n- uid: System.Globalization.CalendarAlgorithmType\n  parent: System.Globalization\n  isExternal: false\n  name: CalendarAlgorithmType\n  nameWithType: CalendarAlgorithmType\n  fullName: System.Globalization.CalendarAlgorithmType\n- uid: System.Globalization.Calendar.Clone\n  parent: System.Globalization.Calendar\n  isExternal: false\n  name: Clone()\n  nameWithType: Calendar.Clone()\n  fullName: Calendar.Clone()\n- uid: System.Globalization.Calendar.CurrentEra\n  parent: System.Globalization.Calendar\n  isExternal: false\n  name: CurrentEra\n  nameWithType: Calendar.CurrentEra\n  fullName: Calendar.CurrentEra\n- uid: System.Globalization.Calendar.DaysInYearBeforeMinSupportedYear\n  parent: System.Globalization.Calendar\n  isExternal: false\n  name: DaysInYearBeforeMinSupportedYear\n  nameWithType: Calendar.DaysInYearBeforeMinSupportedYear\n  fullName: Calendar.DaysInYearBeforeMinSupportedYear\n- uid: System.Globalization.Calendar.Eras\n  parent: System.Globalization.Calendar\n  isExternal: false\n  name: Eras\n  nameWithType: Calendar.Eras\n  fullName: Calendar.Eras\n- uid: System.Int32[]\n  parent: System\n  isExternal: false\n  name: Int32[]\n  nameWithType: Int32[]\n  fullName: System.Int32[]\n  spec.csharp:\n  - uid: System.Int32\n    name: Int32\n    nameWithType: Int32\n    fullName: System.Int32\n  - name: '[]'\n    nameWithType: '[]'\n    fullName: '[]'\n- uid: System.Globalization.Calendar.GetDayOfMonth(System.DateTime)\n  parent: System.Globalization.Calendar\n  isExternal: false\n  name: GetDayOfMonth(DateTime)\n  nameWithType: Calendar.GetDayOfMonth(DateTime)\n  fullName: Calendar.GetDayOfMonth(DateTime)\n- uid: System.Globalization.Calendar.GetDayOfWeek(System.DateTime)\n  parent: System.Globalization.Calendar\n  isExternal: false\n  name: GetDayOfWeek(DateTime)\n  nameWithType: Calendar.GetDayOfWeek(DateTime)\n  fullName: Calendar.GetDayOfWeek(DateTime)\n- uid: System.DayOfWeek\n  parent: System\n  isExternal: false\n  name: DayOfWeek\n  nameWithType: DayOfWeek\n  fullName: System.DayOfWeek\n- uid: System.Globalization.Calendar.GetDayOfYear(System.DateTime)\n  parent: System.Globalization.Calendar\n  isExternal: false\n  name: GetDayOfYear(DateTime)\n  nameWithType: Calendar.GetDayOfYear(DateTime)\n  fullName: Calendar.GetDayOfYear(DateTime)\n- uid: System.Globalization.Calendar.GetDaysInMonth(System.Int32,System.Int32)\n  parent: System.Globalization.Calendar\n  isExternal: false\n  name: GetDaysInMonth(Int32, Int32)\n  nameWithType: Calendar.GetDaysInMonth(Int32, Int32)\n  fullName: Calendar.GetDaysInMonth(Int32, Int32)\n- uid: System.Globalization.Calendar.GetDaysInMonth(System.Int32,System.Int32,System.Int32)\n  parent: System.Globalization.Calendar\n  isExternal: false\n  name: GetDaysInMonth(Int32, Int32, Int32)\n  nameWithType: Calendar.GetDaysInMonth(Int32, Int32, Int32)\n  fullName: Calendar.GetDaysInMonth(Int32, Int32, Int32)\n- uid: System.Globalization.Calendar.GetDaysInYear(System.Int32)\n  parent: System.Globalization.Calendar\n  isExternal: false\n  name: GetDaysInYear(Int32)\n  nameWithType: Calendar.GetDaysInYear(Int32)\n  fullName: Calendar.GetDaysInYear(Int32)\n- uid: System.Globalization.Calendar.GetDaysInYear(System.Int32,System.Int32)\n  parent: System.Globalization.Calendar\n  isExternal: false\n  name: GetDaysInYear(Int32, Int32)\n  nameWithType: Calendar.GetDaysInYear(Int32, Int32)\n  fullName: Calendar.GetDaysInYear(Int32, Int32)\n- uid: System.Globalization.Calendar.GetEra(System.DateTime)\n  parent: System.Globalization.Calendar\n  isExternal: false\n  name: GetEra(DateTime)\n  nameWithType: Calendar.GetEra(DateTime)\n  fullName: Calendar.GetEra(DateTime)\n- uid: System.Globalization.Calendar.GetHour(System.DateTime)\n  parent: System.Globalization.Calendar\n  isExternal: false\n  name: GetHour(DateTime)\n  nameWithType: Calendar.GetHour(DateTime)\n  fullName: Calendar.GetHour(DateTime)\n- uid: System.Globalization.Calendar.GetLeapMonth(System.Int32,System.Int32)\n  parent: System.Globalization.Calendar\n  isExternal: false\n  name: GetLeapMonth(Int32, Int32)\n  nameWithType: Calendar.GetLeapMonth(Int32, Int32)\n  fullName: Calendar.GetLeapMonth(Int32, Int32)\n- uid: System.Globalization.Calendar.GetLeapMonth(System.Int32)\n  parent: System.Globalization.Calendar\n  isExternal: false\n  name: GetLeapMonth(Int32)\n  nameWithType: Calendar.GetLeapMonth(Int32)\n  fullName: Calendar.GetLeapMonth(Int32)\n- uid: System.Globalization.Calendar.GetMilliseconds(System.DateTime)\n  parent: System.Globalization.Calendar\n  isExternal: false\n  name: GetMilliseconds(DateTime)\n  nameWithType: Calendar.GetMilliseconds(DateTime)\n  fullName: Calendar.GetMilliseconds(DateTime)\n- uid: System.Globalization.Calendar.GetMinute(System.DateTime)\n  parent: System.Globalization.Calendar\n  isExternal: false\n  name: GetMinute(DateTime)\n  nameWithType: Calendar.GetMinute(DateTime)\n  fullName: Calendar.GetMinute(DateTime)\n- uid: System.Globalization.Calendar.GetMonth(System.DateTime)\n  parent: System.Globalization.Calendar\n  isExternal: false\n  name: GetMonth(DateTime)\n  nameWithType: Calendar.GetMonth(DateTime)\n  fullName: Calendar.GetMonth(DateTime)\n- uid: System.Globalization.Calendar.GetMonthsInYear(System.Int32)\n  parent: System.Globalization.Calendar\n  isExternal: false\n  name: GetMonthsInYear(Int32)\n  nameWithType: Calendar.GetMonthsInYear(Int32)\n  fullName: Calendar.GetMonthsInYear(Int32)\n- uid: System.Globalization.Calendar.GetMonthsInYear(System.Int32,System.Int32)\n  parent: System.Globalization.Calendar\n  isExternal: false\n  name: GetMonthsInYear(Int32, Int32)\n  nameWithType: Calendar.GetMonthsInYear(Int32, Int32)\n  fullName: Calendar.GetMonthsInYear(Int32, Int32)\n- uid: System.Globalization.Calendar.GetSecond(System.DateTime)\n  parent: System.Globalization.Calendar\n  isExternal: false\n  name: GetSecond(DateTime)\n  nameWithType: Calendar.GetSecond(DateTime)\n  fullName: Calendar.GetSecond(DateTime)\n- uid: System.Globalization.Calendar.GetWeekOfYear(System.DateTime,System.Globalization.CalendarWeekRule,System.DayOfWeek)\n  parent: System.Globalization.Calendar\n  isExternal: false\n  name: GetWeekOfYear(DateTime, CalendarWeekRule, DayOfWeek)\n  nameWithType: Calendar.GetWeekOfYear(DateTime, CalendarWeekRule, DayOfWeek)\n  fullName: Calendar.GetWeekOfYear(DateTime, CalendarWeekRule, DayOfWeek)\n- uid: System.Globalization.CalendarWeekRule\n  parent: System.Globalization\n  isExternal: false\n  name: CalendarWeekRule\n  nameWithType: CalendarWeekRule\n  fullName: System.Globalization.CalendarWeekRule\n- uid: System.Globalization.Calendar.GetYear(System.DateTime)\n  parent: System.Globalization.Calendar\n  isExternal: false\n  name: GetYear(DateTime)\n  nameWithType: Calendar.GetYear(DateTime)\n  fullName: Calendar.GetYear(DateTime)\n- uid: System.Globalization.Calendar.IsLeapDay(System.Int32,System.Int32,System.Int32)\n  parent: System.Globalization.Calendar\n  isExternal: false\n  name: IsLeapDay(Int32, Int32, Int32)\n  nameWithType: Calendar.IsLeapDay(Int32, Int32, Int32)\n  fullName: Calendar.IsLeapDay(Int32, Int32, Int32)\n- uid: System.Boolean\n  parent: System\n  isExternal: false\n  name: Boolean\n  nameWithType: Boolean\n  fullName: System.Boolean\n- uid: System.Globalization.Calendar.IsLeapDay(System.Int32,System.Int32,System.Int32,System.Int32)\n  parent: System.Globalization.Calendar\n  isExternal: false\n  name: IsLeapDay(Int32, Int32, Int32, Int32)\n  nameWithType: Calendar.IsLeapDay(Int32, Int32, Int32, Int32)\n  fullName: Calendar.IsLeapDay(Int32, Int32, Int32, Int32)\n- uid: System.Globalization.Calendar.IsLeapMonth(System.Int32,System.Int32,System.Int32)\n  parent: System.Globalization.Calendar\n  isExternal: false\n  name: IsLeapMonth(Int32, Int32, Int32)\n  nameWithType: Calendar.IsLeapMonth(Int32, Int32, Int32)\n  fullName: Calendar.IsLeapMonth(Int32, Int32, Int32)\n- uid: System.Globalization.Calendar.IsLeapMonth(System.Int32,System.Int32)\n  parent: System.Globalization.Calendar\n  isExternal: false\n  name: IsLeapMonth(Int32, Int32)\n  nameWithType: Calendar.IsLeapMonth(Int32, Int32)\n  fullName: Calendar.IsLeapMonth(Int32, Int32)\n- uid: System.Globalization.Calendar.IsLeapYear(System.Int32)\n  parent: System.Globalization.Calendar\n  isExternal: false\n  name: IsLeapYear(Int32)\n  nameWithType: Calendar.IsLeapYear(Int32)\n  fullName: Calendar.IsLeapYear(Int32)\n- uid: System.Globalization.Calendar.IsLeapYear(System.Int32,System.Int32)\n  parent: System.Globalization.Calendar\n  isExternal: false\n  name: IsLeapYear(Int32, Int32)\n  nameWithType: Calendar.IsLeapYear(Int32, Int32)\n  fullName: Calendar.IsLeapYear(Int32, Int32)\n- uid: System.Globalization.Calendar.IsReadOnly\n  parent: System.Globalization.Calendar\n  isExternal: false\n  name: IsReadOnly\n  nameWithType: Calendar.IsReadOnly\n  fullName: Calendar.IsReadOnly\n- uid: System.Globalization.Calendar.MaxSupportedDateTime\n  parent: System.Globalization.Calendar\n  isExternal: false\n  name: MaxSupportedDateTime\n  nameWithType: Calendar.MaxSupportedDateTime\n  fullName: Calendar.MaxSupportedDateTime\n- uid: System.Globalization.Calendar.MinSupportedDateTime\n  parent: System.Globalization.Calendar\n  isExternal: false\n  name: MinSupportedDateTime\n  nameWithType: Calendar.MinSupportedDateTime\n  fullName: Calendar.MinSupportedDateTime\n- uid: System.Globalization.Calendar.ReadOnly(System.Globalization.Calendar)\n  parent: System.Globalization.Calendar\n  isExternal: false\n  name: ReadOnly(Calendar)\n  nameWithType: Calendar.ReadOnly(Calendar)\n  fullName: Calendar.ReadOnly(Calendar)\n- uid: System.Globalization.Calendar\n  parent: System.Globalization\n  isExternal: false\n  name: Calendar\n  nameWithType: Calendar\n  fullName: System.Globalization.Calendar\n- uid: System.Globalization.Calendar.ToDateTime(System.Int32,System.Int32,System.Int32,System.Int32,System.Int32,System.Int32,System.Int32)\n  parent: System.Globalization.Calendar\n  isExternal: false\n  name: ToDateTime(Int32, Int32, Int32, Int32, Int32, Int32, Int32)\n  nameWithType: Calendar.ToDateTime(Int32, Int32, Int32, Int32, Int32, Int32, Int32)\n  fullName: Calendar.ToDateTime(Int32, Int32, Int32, Int32, Int32, Int32, Int32)\n- uid: System.Globalization.Calendar.ToDateTime(System.Int32,System.Int32,System.Int32,System.Int32,System.Int32,System.Int32,System.Int32,System.Int32)\n  parent: System.Globalization.Calendar\n  isExternal: false\n  name: ToDateTime(Int32, Int32, Int32, Int32, Int32, Int32, Int32, Int32)\n  nameWithType: Calendar.ToDateTime(Int32, Int32, Int32, Int32, Int32, Int32, Int32, Int32)\n  fullName: Calendar.ToDateTime(Int32, Int32, Int32, Int32, Int32, Int32, Int32, Int32)\n- uid: System.Globalization.Calendar.ToFourDigitYear(System.Int32)\n  parent: System.Globalization.Calendar\n  isExternal: false\n  name: ToFourDigitYear(Int32)\n  nameWithType: Calendar.ToFourDigitYear(Int32)\n  fullName: Calendar.ToFourDigitYear(Int32)\n- uid: System.Globalization.Calendar.TwoDigitYearMax\n  parent: System.Globalization.Calendar\n  isExternal: false\n  name: TwoDigitYearMax\n  nameWithType: Calendar.TwoDigitYearMax\n  fullName: Calendar.TwoDigitYearMax\n- uid: System.Globalization.Calendar.#ctor*\n  parent: System.Globalization.Calendar\n  isExternal: false\n  name: Calendar\n  nameWithType: Calendar.Calendar\n  fullName: Calendar.Calendar\n  monikers:\n  - netcore-1.0\n  - netcore-1.1\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - netstandard-1.0\n  - netstandard-1.1\n  - netstandard-1.2\n  - netstandard-1.3\n  - netstandard-1.4\n  - netstandard-1.6\n  - netstandard-2.0\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Globalization/Calendar.xml\n- uid: System.Globalization.Calendar.AddDays*\n  parent: System.Globalization.Calendar\n  isExternal: false\n  name: AddDays\n  nameWithType: Calendar.AddDays\n  fullName: Calendar.AddDays\n  monikers:\n  - netcore-1.0\n  - netcore-1.1\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - netstandard-1.0\n  - netstandard-1.1\n  - netstandard-1.2\n  - netstandard-1.3\n  - netstandard-1.4\n  - netstandard-1.6\n  - netstandard-2.0\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Globalization/Calendar.xml\n- uid: System.Globalization.Calendar.AddHours*\n  parent: System.Globalization.Calendar\n  isExternal: false\n  name: AddHours\n  nameWithType: Calendar.AddHours\n  fullName: Calendar.AddHours\n  monikers:\n  - netcore-1.0\n  - netcore-1.1\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - netstandard-1.0\n  - netstandard-1.1\n  - netstandard-1.2\n  - netstandard-1.3\n  - netstandard-1.4\n  - netstandard-1.6\n  - netstandard-2.0\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Globalization/Calendar.xml\n- uid: System.Globalization.Calendar.AddMilliseconds*\n  parent: System.Globalization.Calendar\n  isExternal: false\n  name: AddMilliseconds\n  nameWithType: Calendar.AddMilliseconds\n  fullName: Calendar.AddMilliseconds\n  monikers:\n  - netcore-1.0\n  - netcore-1.1\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - netstandard-1.0\n  - netstandard-1.1\n  - netstandard-1.2\n  - netstandard-1.3\n  - netstandard-1.4\n  - netstandard-1.6\n  - netstandard-2.0\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Globalization/Calendar.xml\n- uid: System.Globalization.Calendar.AddMinutes*\n  parent: System.Globalization.Calendar\n  isExternal: false\n  name: AddMinutes\n  nameWithType: Calendar.AddMinutes\n  fullName: Calendar.AddMinutes\n  monikers:\n  - netcore-1.0\n  - netcore-1.1\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - netstandard-1.0\n  - netstandard-1.1\n  - netstandard-1.2\n  - netstandard-1.3\n  - netstandard-1.4\n  - netstandard-1.6\n  - netstandard-2.0\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Globalization/Calendar.xml\n- uid: System.Globalization.Calendar.AddMonths*\n  parent: System.Globalization.Calendar\n  isExternal: false\n  name: AddMonths\n  nameWithType: Calendar.AddMonths\n  fullName: Calendar.AddMonths\n  monikers:\n  - netcore-1.0\n  - netcore-1.1\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - netstandard-1.0\n  - netstandard-1.1\n  - netstandard-1.2\n  - netstandard-1.3\n  - netstandard-1.4\n  - netstandard-1.6\n  - netstandard-2.0\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Globalization/Calendar.xml\n- uid: System.Globalization.Calendar.AddSeconds*\n  parent: System.Globalization.Calendar\n  isExternal: false\n  name: AddSeconds\n  nameWithType: Calendar.AddSeconds\n  fullName: Calendar.AddSeconds\n  monikers:\n  - netcore-1.0\n  - netcore-1.1\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - netstandard-1.0\n  - netstandard-1.1\n  - netstandard-1.2\n  - netstandard-1.3\n  - netstandard-1.4\n  - netstandard-1.6\n  - netstandard-2.0\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Globalization/Calendar.xml\n- uid: System.Globalization.Calendar.AddWeeks*\n  parent: System.Globalization.Calendar\n  isExternal: false\n  name: AddWeeks\n  nameWithType: Calendar.AddWeeks\n  fullName: Calendar.AddWeeks\n  monikers:\n  - netcore-1.0\n  - netcore-1.1\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - netstandard-1.0\n  - netstandard-1.1\n  - netstandard-1.2\n  - netstandard-1.3\n  - netstandard-1.4\n  - netstandard-1.6\n  - netstandard-2.0\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Globalization/Calendar.xml\n- uid: System.Globalization.Calendar.AddYears*\n  parent: System.Globalization.Calendar\n  isExternal: false\n  name: AddYears\n  nameWithType: Calendar.AddYears\n  fullName: Calendar.AddYears\n  monikers:\n  - netcore-1.0\n  - netcore-1.1\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - netstandard-1.0\n  - netstandard-1.1\n  - netstandard-1.2\n  - netstandard-1.3\n  - netstandard-1.4\n  - netstandard-1.6\n  - netstandard-2.0\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Globalization/Calendar.xml\n- uid: System.Globalization.Calendar.AlgorithmType*\n  parent: System.Globalization.Calendar\n  isExternal: false\n  name: AlgorithmType\n  nameWithType: Calendar.AlgorithmType\n  fullName: Calendar.AlgorithmType\n  monikers:\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - netstandard-2.0\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Globalization/Calendar.xml\n- uid: System.Globalization.Calendar.Clone*\n  parent: System.Globalization.Calendar\n  isExternal: false\n  name: Clone\n  nameWithType: Calendar.Clone\n  fullName: Calendar.Clone\n  monikers:\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - netstandard-2.0\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Globalization/Calendar.xml\n- uid: System.Globalization.Calendar.DaysInYearBeforeMinSupportedYear*\n  parent: System.Globalization.Calendar\n  isExternal: false\n  name: DaysInYearBeforeMinSupportedYear\n  nameWithType: Calendar.DaysInYearBeforeMinSupportedYear\n  fullName: Calendar.DaysInYearBeforeMinSupportedYear\n  monikers:\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - netstandard-2.0\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Globalization/Calendar.xml\n- uid: System.Globalization.Calendar.Eras*\n  parent: System.Globalization.Calendar\n  isExternal: false\n  name: Eras\n  nameWithType: Calendar.Eras\n  fullName: Calendar.Eras\n  monikers:\n  - netcore-1.0\n  - netcore-1.1\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - netstandard-1.0\n  - netstandard-1.1\n  - netstandard-1.2\n  - netstandard-1.3\n  - netstandard-1.4\n  - netstandard-1.6\n  - netstandard-2.0\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Globalization/Calendar.xml\n- uid: System.Globalization.Calendar.GetDayOfMonth*\n  parent: System.Globalization.Calendar\n  isExternal: false\n  name: GetDayOfMonth\n  nameWithType: Calendar.GetDayOfMonth\n  fullName: Calendar.GetDayOfMonth\n  monikers:\n  - netcore-1.0\n  - netcore-1.1\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - netstandard-1.0\n  - netstandard-1.1\n  - netstandard-1.2\n  - netstandard-1.3\n  - netstandard-1.4\n  - netstandard-1.6\n  - netstandard-2.0\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Globalization/Calendar.xml\n- uid: System.Globalization.Calendar.GetDayOfWeek*\n  parent: System.Globalization.Calendar\n  isExternal: false\n  name: GetDayOfWeek\n  nameWithType: Calendar.GetDayOfWeek\n  fullName: Calendar.GetDayOfWeek\n  monikers:\n  - netcore-1.0\n  - netcore-1.1\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - netstandard-1.0\n  - netstandard-1.1\n  - netstandard-1.2\n  - netstandard-1.3\n  - netstandard-1.4\n  - netstandard-1.6\n  - netstandard-2.0\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Globalization/Calendar.xml\n- uid: System.Globalization.Calendar.GetDayOfYear*\n  parent: System.Globalization.Calendar\n  isExternal: false\n  name: GetDayOfYear\n  nameWithType: Calendar.GetDayOfYear\n  fullName: Calendar.GetDayOfYear\n  monikers:\n  - netcore-1.0\n  - netcore-1.1\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - netstandard-1.0\n  - netstandard-1.1\n  - netstandard-1.2\n  - netstandard-1.3\n  - netstandard-1.4\n  - netstandard-1.6\n  - netstandard-2.0\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Globalization/Calendar.xml\n- uid: System.Globalization.Calendar.GetDaysInMonth*\n  parent: System.Globalization.Calendar\n  isExternal: false\n  name: GetDaysInMonth\n  nameWithType: Calendar.GetDaysInMonth\n  fullName: Calendar.GetDaysInMonth\n  monikers:\n  - netcore-1.0\n  - netcore-1.1\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - netstandard-1.0\n  - netstandard-1.1\n  - netstandard-1.2\n  - netstandard-1.3\n  - netstandard-1.4\n  - netstandard-1.6\n  - netstandard-2.0\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Globalization/Calendar.xml\n- uid: System.Globalization.Calendar.GetDaysInYear*\n  parent: System.Globalization.Calendar\n  isExternal: false\n  name: GetDaysInYear\n  nameWithType: Calendar.GetDaysInYear\n  fullName: Calendar.GetDaysInYear\n  monikers:\n  - netcore-1.0\n  - netcore-1.1\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - netstandard-1.0\n  - netstandard-1.1\n  - netstandard-1.2\n  - netstandard-1.3\n  - netstandard-1.4\n  - netstandard-1.6\n  - netstandard-2.0\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Globalization/Calendar.xml\n- uid: System.Globalization.Calendar.GetEra*\n  parent: System.Globalization.Calendar\n  isExternal: false\n  name: GetEra\n  nameWithType: Calendar.GetEra\n  fullName: Calendar.GetEra\n  monikers:\n  - netcore-1.0\n  - netcore-1.1\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - netstandard-1.0\n  - netstandard-1.1\n  - netstandard-1.2\n  - netstandard-1.3\n  - netstandard-1.4\n  - netstandard-1.6\n  - netstandard-2.0\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Globalization/Calendar.xml\n- uid: System.Globalization.Calendar.GetHour*\n  parent: System.Globalization.Calendar\n  isExternal: false\n  name: GetHour\n  nameWithType: Calendar.GetHour\n  fullName: Calendar.GetHour\n  monikers:\n  - netcore-1.0\n  - netcore-1.1\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - netstandard-1.0\n  - netstandard-1.1\n  - netstandard-1.2\n  - netstandard-1.3\n  - netstandard-1.4\n  - netstandard-1.6\n  - netstandard-2.0\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Globalization/Calendar.xml\n- uid: System.Globalization.Calendar.GetLeapMonth*\n  parent: System.Globalization.Calendar\n  isExternal: false\n  name: GetLeapMonth\n  nameWithType: Calendar.GetLeapMonth\n  fullName: Calendar.GetLeapMonth\n  monikers:\n  - netcore-1.0\n  - netcore-1.1\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - netstandard-1.0\n  - netstandard-1.1\n  - netstandard-1.2\n  - netstandard-1.3\n  - netstandard-1.4\n  - netstandard-1.6\n  - netstandard-2.0\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Globalization/Calendar.xml\n- uid: System.Globalization.Calendar.GetMilliseconds*\n  parent: System.Globalization.Calendar\n  isExternal: false\n  name: GetMilliseconds\n  nameWithType: Calendar.GetMilliseconds\n  fullName: Calendar.GetMilliseconds\n  monikers:\n  - netcore-1.0\n  - netcore-1.1\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - netstandard-1.0\n  - netstandard-1.1\n  - netstandard-1.2\n  - netstandard-1.3\n  - netstandard-1.4\n  - netstandard-1.6\n  - netstandard-2.0\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Globalization/Calendar.xml\n- uid: System.Globalization.Calendar.GetMinute*\n  parent: System.Globalization.Calendar\n  isExternal: false\n  name: GetMinute\n  nameWithType: Calendar.GetMinute\n  fullName: Calendar.GetMinute\n  monikers:\n  - netcore-1.0\n  - netcore-1.1\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - netstandard-1.0\n  - netstandard-1.1\n  - netstandard-1.2\n  - netstandard-1.3\n  - netstandard-1.4\n  - netstandard-1.6\n  - netstandard-2.0\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Globalization/Calendar.xml\n- uid: System.Globalization.Calendar.GetMonth*\n  parent: System.Globalization.Calendar\n  isExternal: false\n  name: GetMonth\n  nameWithType: Calendar.GetMonth\n  fullName: Calendar.GetMonth\n  monikers:\n  - netcore-1.0\n  - netcore-1.1\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - netstandard-1.0\n  - netstandard-1.1\n  - netstandard-1.2\n  - netstandard-1.3\n  - netstandard-1.4\n  - netstandard-1.6\n  - netstandard-2.0\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Globalization/Calendar.xml\n- uid: System.Globalization.Calendar.GetMonthsInYear*\n  parent: System.Globalization.Calendar\n  isExternal: false\n  name: GetMonthsInYear\n  nameWithType: Calendar.GetMonthsInYear\n  fullName: Calendar.GetMonthsInYear\n  monikers:\n  - netcore-1.0\n  - netcore-1.1\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - netstandard-1.0\n  - netstandard-1.1\n  - netstandard-1.2\n  - netstandard-1.3\n  - netstandard-1.4\n  - netstandard-1.6\n  - netstandard-2.0\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Globalization/Calendar.xml\n- uid: System.Globalization.Calendar.GetSecond*\n  parent: System.Globalization.Calendar\n  isExternal: false\n  name: GetSecond\n  nameWithType: Calendar.GetSecond\n  fullName: Calendar.GetSecond\n  monikers:\n  - netcore-1.0\n  - netcore-1.1\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - netstandard-1.0\n  - netstandard-1.1\n  - netstandard-1.2\n  - netstandard-1.3\n  - netstandard-1.4\n  - netstandard-1.6\n  - netstandard-2.0\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Globalization/Calendar.xml\n- uid: System.Globalization.Calendar.GetWeekOfYear*\n  parent: System.Globalization.Calendar\n  isExternal: false\n  name: GetWeekOfYear\n  nameWithType: Calendar.GetWeekOfYear\n  fullName: Calendar.GetWeekOfYear\n  monikers:\n  - netcore-1.0\n  - netcore-1.1\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - netstandard-1.0\n  - netstandard-1.1\n  - netstandard-1.2\n  - netstandard-1.3\n  - netstandard-1.4\n  - netstandard-1.6\n  - netstandard-2.0\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Globalization/Calendar.xml\n- uid: System.Globalization.Calendar.GetYear*\n  parent: System.Globalization.Calendar\n  isExternal: false\n  name: GetYear\n  nameWithType: Calendar.GetYear\n  fullName: Calendar.GetYear\n  monikers:\n  - netcore-1.0\n  - netcore-1.1\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - netstandard-1.0\n  - netstandard-1.1\n  - netstandard-1.2\n  - netstandard-1.3\n  - netstandard-1.4\n  - netstandard-1.6\n  - netstandard-2.0\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Globalization/Calendar.xml\n- uid: System.Globalization.Calendar.IsLeapDay*\n  parent: System.Globalization.Calendar\n  isExternal: false\n  name: IsLeapDay\n  nameWithType: Calendar.IsLeapDay\n  fullName: Calendar.IsLeapDay\n  monikers:\n  - netcore-1.0\n  - netcore-1.1\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - netstandard-1.0\n  - netstandard-1.1\n  - netstandard-1.2\n  - netstandard-1.3\n  - netstandard-1.4\n  - netstandard-1.6\n  - netstandard-2.0\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Globalization/Calendar.xml\n- uid: System.Globalization.Calendar.IsLeapMonth*\n  parent: System.Globalization.Calendar\n  isExternal: false\n  name: IsLeapMonth\n  nameWithType: Calendar.IsLeapMonth\n  fullName: Calendar.IsLeapMonth\n  monikers:\n  - netcore-1.0\n  - netcore-1.1\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - netstandard-1.0\n  - netstandard-1.1\n  - netstandard-1.2\n  - netstandard-1.3\n  - netstandard-1.4\n  - netstandard-1.6\n  - netstandard-2.0\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Globalization/Calendar.xml\n- uid: System.Globalization.Calendar.IsLeapYear*\n  parent: System.Globalization.Calendar\n  isExternal: false\n  name: IsLeapYear\n  nameWithType: Calendar.IsLeapYear\n  fullName: Calendar.IsLeapYear\n  monikers:\n  - netcore-1.0\n  - netcore-1.1\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - netstandard-1.0\n  - netstandard-1.1\n  - netstandard-1.2\n  - netstandard-1.3\n  - netstandard-1.4\n  - netstandard-1.6\n  - netstandard-2.0\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Globalization/Calendar.xml\n- uid: System.Globalization.Calendar.IsReadOnly*\n  parent: System.Globalization.Calendar\n  isExternal: false\n  name: IsReadOnly\n  nameWithType: Calendar.IsReadOnly\n  fullName: Calendar.IsReadOnly\n  monikers:\n  - netcore-1.0\n  - netcore-1.1\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - netstandard-1.0\n  - netstandard-1.1\n  - netstandard-1.2\n  - netstandard-1.3\n  - netstandard-1.4\n  - netstandard-1.6\n  - netstandard-2.0\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Globalization/Calendar.xml\n- uid: System.Globalization.Calendar.MaxSupportedDateTime*\n  parent: System.Globalization.Calendar\n  isExternal: false\n  name: MaxSupportedDateTime\n  nameWithType: Calendar.MaxSupportedDateTime\n  fullName: Calendar.MaxSupportedDateTime\n  monikers:\n  - netcore-1.0\n  - netcore-1.1\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - netstandard-1.0\n  - netstandard-1.1\n  - netstandard-1.2\n  - netstandard-1.3\n  - netstandard-1.4\n  - netstandard-1.6\n  - netstandard-2.0\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Globalization/Calendar.xml\n- uid: System.Globalization.Calendar.MinSupportedDateTime*\n  parent: System.Globalization.Calendar\n  isExternal: false\n  name: MinSupportedDateTime\n  nameWithType: Calendar.MinSupportedDateTime\n  fullName: Calendar.MinSupportedDateTime\n  monikers:\n  - netcore-1.0\n  - netcore-1.1\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - netstandard-1.0\n  - netstandard-1.1\n  - netstandard-1.2\n  - netstandard-1.3\n  - netstandard-1.4\n  - netstandard-1.6\n  - netstandard-2.0\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Globalization/Calendar.xml\n- uid: System.Globalization.Calendar.ReadOnly*\n  parent: System.Globalization.Calendar\n  isExternal: false\n  name: ReadOnly\n  nameWithType: Calendar.ReadOnly\n  fullName: Calendar.ReadOnly\n  monikers:\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - netstandard-2.0\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Globalization/Calendar.xml\n- uid: System.Globalization.Calendar.ToDateTime*\n  parent: System.Globalization.Calendar\n  isExternal: false\n  name: ToDateTime\n  nameWithType: Calendar.ToDateTime\n  fullName: Calendar.ToDateTime\n  monikers:\n  - netcore-1.0\n  - netcore-1.1\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - netstandard-1.0\n  - netstandard-1.1\n  - netstandard-1.2\n  - netstandard-1.3\n  - netstandard-1.4\n  - netstandard-1.6\n  - netstandard-2.0\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Globalization/Calendar.xml\n- uid: System.Globalization.Calendar.ToFourDigitYear*\n  parent: System.Globalization.Calendar\n  isExternal: false\n  name: ToFourDigitYear\n  nameWithType: Calendar.ToFourDigitYear\n  fullName: Calendar.ToFourDigitYear\n  monikers:\n  - netcore-1.0\n  - netcore-1.1\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - netstandard-1.0\n  - netstandard-1.1\n  - netstandard-1.2\n  - netstandard-1.3\n  - netstandard-1.4\n  - netstandard-1.6\n  - netstandard-2.0\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Globalization/Calendar.xml\n- uid: System.Globalization.Calendar.TwoDigitYearMax*\n  parent: System.Globalization.Calendar\n  isExternal: false\n  name: TwoDigitYearMax\n  nameWithType: Calendar.TwoDigitYearMax\n  fullName: Calendar.TwoDigitYearMax\n  monikers:\n  - netcore-1.0\n  - netcore-1.1\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - netstandard-1.0\n  - netstandard-1.1\n  - netstandard-1.2\n  - netstandard-1.3\n  - netstandard-1.4\n  - netstandard-1.6\n  - netstandard-2.0\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Globalization/Calendar.xml\n- uid: System.Object.Equals(System.Object)\n  parent: System.Object\n  isExternal: false\n  name: Equals(Object)\n  nameWithType: Object.Equals(Object)\n  fullName: Object.Equals(Object)\n- uid: System.Object.Equals(System.Object,System.Object)\n  parent: System.Object\n  isExternal: false\n  name: Equals(Object, Object)\n  nameWithType: Object.Equals(Object, Object)\n  fullName: Object.Equals(Object, Object)\n- uid: System.Object.GetHashCode\n  parent: System.Object\n  isExternal: false\n  name: GetHashCode()\n  nameWithType: Object.GetHashCode()\n  fullName: Object.GetHashCode()\n- uid: System.Object.GetType\n  parent: System.Object\n  isExternal: false\n  name: GetType()\n  nameWithType: Object.GetType()\n  fullName: Object.GetType()\n- uid: System.Object.MemberwiseClone\n  parent: System.Object\n  isExternal: false\n  name: MemberwiseClone()\n  nameWithType: Object.MemberwiseClone()\n  fullName: Object.MemberwiseClone()\n- uid: System.Object.ReferenceEquals(System.Object,System.Object)\n  parent: System.Object\n  isExternal: false\n  name: ReferenceEquals(Object, Object)\n  nameWithType: Object.ReferenceEquals(Object, Object)\n  fullName: Object.ReferenceEquals(Object, Object)\n- uid: System.Object.ToString\n  parent: System.Object\n  isExternal: false\n  name: ToString()\n  nameWithType: Object.ToString()\n  fullName: Object.ToString()\n- uid: System.ICloneable\n  parent: System\n  isExternal: false\n  name: ICloneable\n  nameWithType: ICloneable\n  fullName: System.ICloneable\n"}