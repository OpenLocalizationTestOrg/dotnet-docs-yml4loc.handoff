{"nodes":[{"content":"Serves as the base class for all classes that represent an ASP.NET route.","nodes":[{"pos":[0,73],"content":"Serves as the base class for all classes that represent an ASP.NET route.","nodes":[{"content":"Serves as the base class for all classes that represent an ASP.NET route.","pos":[0,73]}]}],"pos":[623,697],"yaml":true},{"content":"The <xref:System.Web.Routing.RouteBase> class enables you to create customized classes for defining routes in your application. Typically, you will use the <xref:System.Web.Routing.Route> class when you define routes. The <xref:System.Web.Routing.Route> class derives from the <xref:System.Web.Routing.RouteBase> class. However, if you want to provide different functionality than what is provided by the <xref:System.Web.Routing.Route> class, you create a class that derives from <xref:System.Web.Routing.RouteBase> and implement the properties and methods that you need.","nodes":[{"pos":[0,572],"content":"The <xref:System.Web.Routing.RouteBase> class enables you to create customized classes for defining routes in your application. Typically, you will use the <xref:System.Web.Routing.Route> class when you define routes. The <xref:System.Web.Routing.Route> class derives from the <xref:System.Web.Routing.RouteBase> class. However, if you want to provide different functionality than what is provided by the <xref:System.Web.Routing.Route> class, you create a class that derives from <xref:System.Web.Routing.RouteBase> and implement the properties and methods that you need.","nodes":[{"content":"The <xref:System.Web.Routing.RouteBase> class enables you to create customized classes for defining routes in your application. Typically, you will use the <xref:System.Web.Routing.Route> class when you define routes. The <xref:System.Web.Routing.Route> class derives from the <xref:System.Web.Routing.RouteBase> class. However, if you want to provide different functionality than what is provided by the <xref:System.Web.Routing.Route> class, you create a class that derives from <xref:System.Web.Routing.RouteBase> and implement the properties and methods that you need.","pos":[0,572],"nodes":[{"content":"The <ph id=\"ph1\">&lt;xref:System.Web.Routing.RouteBase&gt;</ph> class enables you to create customized classes for defining routes in your application.","pos":[0,127],"source":"The <xref:System.Web.Routing.RouteBase> class enables you to create customized classes for defining routes in your application."},{"content":"Typically, you will use the <ph id=\"ph1\">&lt;xref:System.Web.Routing.Route&gt;</ph> class when you define routes.","pos":[128,217],"source":" Typically, you will use the <xref:System.Web.Routing.Route> class when you define routes."},{"content":"The <ph id=\"ph1\">&lt;xref:System.Web.Routing.Route&gt;</ph> class derives from the <ph id=\"ph2\">&lt;xref:System.Web.Routing.RouteBase&gt;</ph> class.","pos":[218,319],"source":" The <xref:System.Web.Routing.Route> class derives from the <xref:System.Web.Routing.RouteBase> class."},{"content":"However, if you want to provide different functionality than what is provided by the <ph id=\"ph1\">&lt;xref:System.Web.Routing.Route&gt;</ph> class, you create a class that derives from <ph id=\"ph2\">&lt;xref:System.Web.Routing.RouteBase&gt;</ph> and implement the properties and methods that you need.","pos":[320,572],"source":" However, if you want to provide different functionality than what is provided by the <xref:System.Web.Routing.Route> class, you create a class that derives from <xref:System.Web.Routing.RouteBase> and implement the properties and methods that you need."}]}]}],"pos":[708,1281],"yaml":true,"extradata":"MT"},{"content":"Initializes the class for use by an inherited class instance. This constructor can only be called by an inherited class.","nodes":[{"pos":[0,120],"content":"Initializes the class for use by an inherited class instance. This constructor can only be called by an inherited class.","nodes":[{"content":"Initializes the class for use by an inherited class instance. This constructor can only be called by an inherited class.","pos":[0,120],"nodes":[{"content":"Initializes the class for use by an inherited class instance.","pos":[0,61]},{"content":"This constructor can only be called by an inherited class.","pos":[62,120]}]}]}],"pos":[2623,2744],"yaml":true},{"content":"When overridden in a derived class, returns route information about the request.","nodes":[{"pos":[0,80],"content":"When overridden in a derived class, returns route information about the request.","nodes":[{"content":"When overridden in a derived class, returns route information about the request.","pos":[0,80]}]}],"pos":[3906,3987],"yaml":true},{"content":"An object that encapsulates information about the HTTP request.","nodes":[{"pos":[0,63],"content":"An object that encapsulates information about the HTTP request.","nodes":[{"content":"An object that encapsulates information about the HTTP request.","pos":[0,63]}]}],"pos":[4206,4270],"yaml":true},{"content":"An object that contains the values from the route definition if the route matches the current request, or `null` if the route does not match the request.","nodes":[{"pos":[0,153],"content":"An object that contains the values from the route definition if the route matches the current request, or <ph id=\"ph1\">`null`</ph> if the route does not match the request.","source":"An object that contains the values from the route definition if the route matches the current request, or `null` if the route does not match the request."}],"pos":[4342,4496],"yaml":true},{"content":"When overridden in a derived class, checks whether the route matches the specified values, and if so, generates a URL and retrieves information about the route.","nodes":[{"pos":[0,160],"content":"When overridden in a derived class, checks whether the route matches the specified values, and if so, generates a URL and retrieves information about the route.","nodes":[{"content":"When overridden in a derived class, checks whether the route matches the specified values, and if so, generates a URL and retrieves information about the route.","pos":[0,160]}]}],"pos":[5815,5976],"yaml":true},{"content":"To generate a URL, you use the <xref:System.Web.Routing.RouteCollection.GetVirtualPath%2A> method of the <xref:System.Web.Routing.RouteCollection> class. That method calls the <xref:System.Web.Routing.RouteBase.GetVirtualPath%2A> method for each route in the collection to determine whether that route matches the values in `values` and can therefore generate the URL.","nodes":[{"pos":[0,368],"content":"To generate a URL, you use the <xref:System.Web.Routing.RouteCollection.GetVirtualPath%2A> method of the <xref:System.Web.Routing.RouteCollection> class. That method calls the <xref:System.Web.Routing.RouteBase.GetVirtualPath%2A> method for each route in the collection to determine whether that route matches the values in `values` and can therefore generate the URL.","nodes":[{"content":"To generate a URL, you use the <ph id=\"ph1\">&lt;xref:System.Web.Routing.RouteCollection.GetVirtualPath%2A&gt;</ph> method of the <ph id=\"ph2\">&lt;xref:System.Web.Routing.RouteCollection&gt;</ph> class.","pos":[0,153],"source":"To generate a URL, you use the <xref:System.Web.Routing.RouteCollection.GetVirtualPath%2A> method of the <xref:System.Web.Routing.RouteCollection> class."},{"content":"That method calls the <ph id=\"ph1\">&lt;xref:System.Web.Routing.RouteBase.GetVirtualPath%2A&gt;</ph> method for each route in the collection to determine whether that route matches the values in <ph id=\"ph2\">`values`</ph> and can therefore generate the URL.","pos":[154,368],"source":" That method calls the <xref:System.Web.Routing.RouteBase.GetVirtualPath%2A> method for each route in the collection to determine whether that route matches the values in `values` and can therefore generate the URL."}]}],"pos":[5987,6356],"yaml":true,"extradata":"MT"},{"content":"An object that encapsulates information about the requested route.","nodes":[{"pos":[0,66],"content":"An object that encapsulates information about the requested route.","nodes":[{"content":"An object that encapsulates information about the requested route.","pos":[0,66]}]}],"pos":[6651,6718],"yaml":true},{"content":"An object that contains the parameters for a route.","nodes":[{"pos":[0,51],"content":"An object that contains the parameters for a route.","nodes":[{"content":"An object that contains the parameters for a route.","pos":[0,51]}]}],"pos":[6806,6858],"yaml":true},{"content":"An object that contains the generated URL and information about the route, or `null` if the route does not match <code>values</code>.","nodes":[{"pos":[0,133],"content":"An object that contains the generated URL and information about the route, or <ph id=\"ph1\">`null`</ph> if the route does not match <bpt id=\"p1\">&lt;code&gt;</bpt><ph id=\"ph2\">values</ph><ept id=\"p1\">&lt;/code&gt;</ept>.","source":"An object that contains the generated URL and information about the route, or `null` if the route does not match <code>values</code>."}],"pos":[6936,7070],"yaml":true},{"content":"Gets or sets a value that indicates whether ASP.NET routing should handle URLs that match an existing file.","nodes":[{"pos":[0,107],"content":"Gets or sets a value that indicates whether ASP.NET routing should handle URLs that match an existing file.","nodes":[{"content":"Gets or sets a value that indicates whether ASP.NET routing should handle URLs that match an existing file.","pos":[0,107]}]}],"pos":[8078,8186],"yaml":true},{"content":"`true` if ASP.NET routing handles all requests, even those that match an existing file; otherwise, `false`. The default value is `false`.","nodes":[{"pos":[0,137],"content":"`true` if ASP.NET routing handles all requests, even those that match an existing file; otherwise, `false`. The default value is `false`.","nodes":[{"content":"<ph id=\"ph1\">`true`</ph> if ASP.NET routing handles all requests, even those that match an existing file; otherwise, <ph id=\"ph2\">`false`</ph>.","pos":[0,107],"source":"`true` if ASP.NET routing handles all requests, even those that match an existing file; otherwise, `false`."},{"content":"The default value is <ph id=\"ph1\">`false`</ph>.","pos":[108,137],"source":" The default value is `false`."}]}],"pos":[8312,8452],"yaml":true}],"content":"### YamlMime:ManagedReference\nitems:\n- uid: System.Web.Routing.RouteBase\n  commentId: T:System.Web.Routing.RouteBase\n  id: RouteBase\n  children:\n  - System.Web.Routing.RouteBase.#ctor\n  - System.Web.Routing.RouteBase.GetRouteData(System.Web.HttpContextBase)\n  - System.Web.Routing.RouteBase.GetVirtualPath(System.Web.Routing.RequestContext,System.Web.Routing.RouteValueDictionary)\n  - System.Web.Routing.RouteBase.RouteExistingFiles\n  langs:\n  - csharp\n  name: RouteBase\n  nameWithType: RouteBase\n  fullName: System.Web.Routing.RouteBase\n  type: Class\n  assemblies:\n  - System.Web\n  namespace: System.Web.Routing\n  summary: Serves as the base class for all classes that represent an ASP.NET route.\n  remarks: The <xref:System.Web.Routing.RouteBase> class enables you to create customized classes for defining routes in your application. Typically, you will use the <xref:System.Web.Routing.Route> class when you define routes. The <xref:System.Web.Routing.Route> class derives from the <xref:System.Web.Routing.RouteBase> class. However, if you want to provide different functionality than what is provided by the <xref:System.Web.Routing.Route> class, you create a class that derives from <xref:System.Web.Routing.RouteBase> and implement the properties and methods that you need.\n  syntax:\n    content: public abstract class RouteBase\n  inheritance:\n  - System.Object\n  derivedClasses:\n  - System.Web.Routing.Route\n  implements: []\n  inheritedMembers:\n  - System.Object.Equals(System.Object)\n  - System.Object.Equals(System.Object,System.Object)\n  - System.Object.GetHashCode\n  - System.Object.GetType\n  - System.Object.MemberwiseClone\n  - System.Object.ReferenceEquals(System.Object,System.Object)\n  - System.Object.ToString\n  attributes: []\n  version:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Web.Routing/RouteBase.xml\n  ms.technology:\n  - dotnet-webforms\n  author: tdykstra\n  ms.author: tdykstra\n  manager: wpickett\n- uid: System.Web.Routing.RouteBase.#ctor\n  commentId: M:System.Web.Routing.RouteBase.#ctor\n  id: '#ctor'\n  parent: System.Web.Routing.RouteBase\n  langs:\n  - csharp\n  name: RouteBase()\n  nameWithType: RouteBase.RouteBase()\n  fullName: RouteBase.RouteBase()\n  type: Constructor\n  assemblies:\n  - System.Web\n  namespace: System.Web.Routing\n  summary: Initializes the class for use by an inherited class instance. This constructor can only be called by an inherited class.\n  syntax:\n    content: protected RouteBase ();\n    parameters: []\n  overload: System.Web.Routing.RouteBase.#ctor*\n  exceptions: []\n  version:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Web.Routing/RouteBase.xml\n  ms.technology:\n  - dotnet-webforms\n  author: tdykstra\n  ms.author: tdykstra\n  manager: wpickett\n- uid: System.Web.Routing.RouteBase.GetRouteData(System.Web.HttpContextBase)\n  commentId: M:System.Web.Routing.RouteBase.GetRouteData(System.Web.HttpContextBase)\n  id: GetRouteData(System.Web.HttpContextBase)\n  parent: System.Web.Routing.RouteBase\n  langs:\n  - csharp\n  name: GetRouteData(HttpContextBase)\n  nameWithType: RouteBase.GetRouteData(HttpContextBase)\n  fullName: RouteBase.GetRouteData(HttpContextBase)\n  type: Method\n  assemblies:\n  - System.Web\n  namespace: System.Web.Routing\n  summary: When overridden in a derived class, returns route information about the request.\n  syntax:\n    content: public abstract System.Web.Routing.RouteData GetRouteData (System.Web.HttpContextBase httpContext);\n    parameters:\n    - id: httpContext\n      type: System.Web.HttpContextBase\n      description: An object that encapsulates information about the HTTP request.\n    return:\n      type: System.Web.Routing.RouteData\n      description: An object that contains the values from the route definition if the route matches the current request, or `null` if the route does not match the request.\n  overload: System.Web.Routing.RouteBase.GetRouteData*\n  exceptions: []\n  version:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Web.Routing/RouteBase.xml\n  ms.technology:\n  - dotnet-webforms\n  author: tdykstra\n  ms.author: tdykstra\n  manager: wpickett\n- uid: System.Web.Routing.RouteBase.GetVirtualPath(System.Web.Routing.RequestContext,System.Web.Routing.RouteValueDictionary)\n  commentId: M:System.Web.Routing.RouteBase.GetVirtualPath(System.Web.Routing.RequestContext,System.Web.Routing.RouteValueDictionary)\n  id: GetVirtualPath(System.Web.Routing.RequestContext,System.Web.Routing.RouteValueDictionary)\n  parent: System.Web.Routing.RouteBase\n  langs:\n  - csharp\n  name: GetVirtualPath(RequestContext, RouteValueDictionary)\n  nameWithType: RouteBase.GetVirtualPath(RequestContext, RouteValueDictionary)\n  fullName: RouteBase.GetVirtualPath(RequestContext, RouteValueDictionary)\n  type: Method\n  assemblies:\n  - System.Web\n  namespace: System.Web.Routing\n  summary: When overridden in a derived class, checks whether the route matches the specified values, and if so, generates a URL and retrieves information about the route.\n  remarks: To generate a URL, you use the <xref:System.Web.Routing.RouteCollection.GetVirtualPath%2A> method of the <xref:System.Web.Routing.RouteCollection> class. That method calls the <xref:System.Web.Routing.RouteBase.GetVirtualPath%2A> method for each route in the collection to determine whether that route matches the values in `values` and can therefore generate the URL.\n  syntax:\n    content: public abstract System.Web.Routing.VirtualPathData GetVirtualPath (System.Web.Routing.RequestContext requestContext, System.Web.Routing.RouteValueDictionary values);\n    parameters:\n    - id: requestContext\n      type: System.Web.Routing.RequestContext\n      description: An object that encapsulates information about the requested route.\n    - id: values\n      type: System.Web.Routing.RouteValueDictionary\n      description: An object that contains the parameters for a route.\n    return:\n      type: System.Web.Routing.VirtualPathData\n      description: An object that contains the generated URL and information about the route, or `null` if the route does not match <code>values</code>.\n  overload: System.Web.Routing.RouteBase.GetVirtualPath*\n  exceptions: []\n  version:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Web.Routing/RouteBase.xml\n  ms.technology:\n  - dotnet-webforms\n  author: tdykstra\n  ms.author: tdykstra\n  manager: wpickett\n- uid: System.Web.Routing.RouteBase.RouteExistingFiles\n  commentId: P:System.Web.Routing.RouteBase.RouteExistingFiles\n  id: RouteExistingFiles\n  parent: System.Web.Routing.RouteBase\n  langs:\n  - csharp\n  name: RouteExistingFiles\n  nameWithType: RouteBase.RouteExistingFiles\n  fullName: RouteBase.RouteExistingFiles\n  type: Property\n  assemblies:\n  - System.Web\n  namespace: System.Web.Routing\n  summary: Gets or sets a value that indicates whether ASP.NET routing should handle URLs that match an existing file.\n  syntax:\n    content: public bool RouteExistingFiles { get; set; }\n    return:\n      type: System.Boolean\n      description: '`true` if ASP.NET routing handles all requests, even those that match an existing file; otherwise, `false`. The default value is `false`.'\n  overload: System.Web.Routing.RouteBase.RouteExistingFiles*\n  exceptions: []\n  version:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Web.Routing/RouteBase.xml\n  ms.technology:\n  - dotnet-webforms\n  author: tdykstra\n  ms.author: tdykstra\n  manager: wpickett\nreferences:\n- uid: System.Object\n  parent: System\n  isExternal: false\n  name: Object\n  nameWithType: Object\n  fullName: System.Object\n- uid: System.Web.Routing.RouteBase.#ctor\n  parent: System.Web.Routing.RouteBase\n  isExternal: false\n  name: RouteBase()\n  nameWithType: RouteBase.RouteBase()\n  fullName: RouteBase.RouteBase()\n- uid: System.Web.Routing.RouteBase.GetRouteData(System.Web.HttpContextBase)\n  parent: System.Web.Routing.RouteBase\n  isExternal: false\n  name: GetRouteData(HttpContextBase)\n  nameWithType: RouteBase.GetRouteData(HttpContextBase)\n  fullName: RouteBase.GetRouteData(HttpContextBase)\n- uid: System.Web.Routing.RouteData\n  parent: System.Web.Routing\n  isExternal: false\n  name: RouteData\n  nameWithType: RouteData\n  fullName: System.Web.Routing.RouteData\n- uid: System.Web.HttpContextBase\n  parent: System.Web\n  isExternal: false\n  name: HttpContextBase\n  nameWithType: HttpContextBase\n  fullName: System.Web.HttpContextBase\n- uid: System.Web.Routing.RouteBase.GetVirtualPath(System.Web.Routing.RequestContext,System.Web.Routing.RouteValueDictionary)\n  parent: System.Web.Routing.RouteBase\n  isExternal: false\n  name: GetVirtualPath(RequestContext, RouteValueDictionary)\n  nameWithType: RouteBase.GetVirtualPath(RequestContext, RouteValueDictionary)\n  fullName: RouteBase.GetVirtualPath(RequestContext, RouteValueDictionary)\n- uid: System.Web.Routing.VirtualPathData\n  parent: System.Web.Routing\n  isExternal: false\n  name: VirtualPathData\n  nameWithType: VirtualPathData\n  fullName: System.Web.Routing.VirtualPathData\n- uid: System.Web.Routing.RequestContext\n  parent: System.Web.Routing\n  isExternal: false\n  name: RequestContext\n  nameWithType: RequestContext\n  fullName: System.Web.Routing.RequestContext\n- uid: System.Web.Routing.RouteValueDictionary\n  parent: System.Web.Routing\n  isExternal: false\n  name: RouteValueDictionary\n  nameWithType: RouteValueDictionary\n  fullName: System.Web.Routing.RouteValueDictionary\n- uid: System.Web.Routing.RouteBase.RouteExistingFiles\n  parent: System.Web.Routing.RouteBase\n  isExternal: false\n  name: RouteExistingFiles\n  nameWithType: RouteBase.RouteExistingFiles\n  fullName: RouteBase.RouteExistingFiles\n- uid: System.Boolean\n  parent: System\n  isExternal: false\n  name: Boolean\n  nameWithType: Boolean\n  fullName: System.Boolean\n- uid: System.Web.Routing.RouteBase.#ctor*\n  parent: System.Web.Routing.RouteBase\n  isExternal: false\n  name: RouteBase\n  nameWithType: RouteBase.RouteBase\n  fullName: RouteBase.RouteBase\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Web.Routing/RouteBase.xml\n- uid: System.Web.Routing.RouteBase.GetRouteData*\n  parent: System.Web.Routing.RouteBase\n  isExternal: false\n  name: GetRouteData\n  nameWithType: RouteBase.GetRouteData\n  fullName: RouteBase.GetRouteData\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Web.Routing/RouteBase.xml\n- uid: System.Web.Routing.RouteBase.GetVirtualPath*\n  parent: System.Web.Routing.RouteBase\n  isExternal: false\n  name: GetVirtualPath\n  nameWithType: RouteBase.GetVirtualPath\n  fullName: RouteBase.GetVirtualPath\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Web.Routing/RouteBase.xml\n- uid: System.Web.Routing.RouteBase.RouteExistingFiles*\n  parent: System.Web.Routing.RouteBase\n  isExternal: false\n  name: RouteExistingFiles\n  nameWithType: RouteBase.RouteExistingFiles\n  fullName: RouteBase.RouteExistingFiles\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Web.Routing/RouteBase.xml\n- uid: System.Object.Equals(System.Object)\n  parent: System.Object\n  isExternal: false\n  name: Equals(Object)\n  nameWithType: Object.Equals(Object)\n  fullName: Object.Equals(Object)\n- uid: System.Object.Equals(System.Object,System.Object)\n  parent: System.Object\n  isExternal: false\n  name: Equals(Object, Object)\n  nameWithType: Object.Equals(Object, Object)\n  fullName: Object.Equals(Object, Object)\n- uid: System.Object.GetHashCode\n  parent: System.Object\n  isExternal: false\n  name: GetHashCode()\n  nameWithType: Object.GetHashCode()\n  fullName: Object.GetHashCode()\n- uid: System.Object.GetType\n  parent: System.Object\n  isExternal: false\n  name: GetType()\n  nameWithType: Object.GetType()\n  fullName: Object.GetType()\n- uid: System.Object.MemberwiseClone\n  parent: System.Object\n  isExternal: false\n  name: MemberwiseClone()\n  nameWithType: Object.MemberwiseClone()\n  fullName: Object.MemberwiseClone()\n- uid: System.Object.ReferenceEquals(System.Object,System.Object)\n  parent: System.Object\n  isExternal: false\n  name: ReferenceEquals(Object, Object)\n  nameWithType: Object.ReferenceEquals(Object, Object)\n  fullName: Object.ReferenceEquals(Object, Object)\n- uid: System.Object.ToString\n  parent: System.Object\n  isExternal: false\n  name: ToString()\n  nameWithType: Object.ToString()\n  fullName: Object.ToString()\n"}