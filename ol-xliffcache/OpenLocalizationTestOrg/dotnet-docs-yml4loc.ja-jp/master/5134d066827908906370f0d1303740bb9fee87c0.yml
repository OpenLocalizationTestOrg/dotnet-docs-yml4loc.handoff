### YamlMime:ManagedReference
items:
- uid: System.Xml.XmlReader
  commentId: T:System.Xml.XmlReader
  id: XmlReader
  children:
  - System.Xml.XmlReader.#ctor
  - System.Xml.XmlReader.AttributeCount
  - System.Xml.XmlReader.BaseURI
  - System.Xml.XmlReader.CanReadBinaryContent
  - System.Xml.XmlReader.CanReadValueChunk
  - System.Xml.XmlReader.CanResolveEntity
  - System.Xml.XmlReader.Close
  - System.Xml.XmlReader.Create(System.String,System.Xml.XmlReaderSettings,System.Xml.XmlParserContext)
  - System.Xml.XmlReader.Create(System.IO.TextReader,System.Xml.XmlReaderSettings,System.Xml.XmlParserContext)
  - System.Xml.XmlReader.Create(System.IO.TextReader,System.Xml.XmlReaderSettings,System.String)
  - System.Xml.XmlReader.Create(System.IO.Stream,System.Xml.XmlReaderSettings,System.String)
  - System.Xml.XmlReader.Create(System.Xml.XmlReader,System.Xml.XmlReaderSettings)
  - System.Xml.XmlReader.Create(System.IO.Stream,System.Xml.XmlReaderSettings,System.Xml.XmlParserContext)
  - System.Xml.XmlReader.Create(System.IO.TextReader,System.Xml.XmlReaderSettings)
  - System.Xml.XmlReader.Create(System.IO.Stream,System.Xml.XmlReaderSettings)
  - System.Xml.XmlReader.Create(System.String,System.Xml.XmlReaderSettings)
  - System.Xml.XmlReader.Create(System.String)
  - System.Xml.XmlReader.Create(System.IO.TextReader)
  - System.Xml.XmlReader.Create(System.IO.Stream)
  - System.Xml.XmlReader.Depth
  - System.Xml.XmlReader.Dispose
  - System.Xml.XmlReader.Dispose(System.Boolean)
  - System.Xml.XmlReader.EOF
  - System.Xml.XmlReader.GetAttribute(System.Int32)
  - System.Xml.XmlReader.GetAttribute(System.String)
  - System.Xml.XmlReader.GetAttribute(System.String,System.String)
  - System.Xml.XmlReader.GetValueAsync
  - System.Xml.XmlReader.HasAttributes
  - System.Xml.XmlReader.HasValue
  - System.Xml.XmlReader.IsDefault
  - System.Xml.XmlReader.IsEmptyElement
  - System.Xml.XmlReader.IsName(System.String)
  - System.Xml.XmlReader.IsNameToken(System.String)
  - System.Xml.XmlReader.IsStartElement
  - System.Xml.XmlReader.IsStartElement(System.String)
  - System.Xml.XmlReader.IsStartElement(System.String,System.String)
  - System.Xml.XmlReader.Item(System.Int32)
  - System.Xml.XmlReader.Item(System.String)
  - System.Xml.XmlReader.Item(System.String,System.String)
  - System.Xml.XmlReader.LocalName
  - System.Xml.XmlReader.LookupNamespace(System.String)
  - System.Xml.XmlReader.MoveToAttribute(System.Int32)
  - System.Xml.XmlReader.MoveToAttribute(System.String)
  - System.Xml.XmlReader.MoveToAttribute(System.String,System.String)
  - System.Xml.XmlReader.MoveToContent
  - System.Xml.XmlReader.MoveToContentAsync
  - System.Xml.XmlReader.MoveToElement
  - System.Xml.XmlReader.MoveToFirstAttribute
  - System.Xml.XmlReader.MoveToNextAttribute
  - System.Xml.XmlReader.Name
  - System.Xml.XmlReader.NamespaceURI
  - System.Xml.XmlReader.NameTable
  - System.Xml.XmlReader.NodeType
  - System.Xml.XmlReader.Prefix
  - System.Xml.XmlReader.QuoteChar
  - System.Xml.XmlReader.Read
  - System.Xml.XmlReader.ReadAsync
  - System.Xml.XmlReader.ReadAttributeValue
  - System.Xml.XmlReader.ReadContentAs(System.Type,System.Xml.IXmlNamespaceResolver)
  - System.Xml.XmlReader.ReadContentAsAsync(System.Type,System.Xml.IXmlNamespaceResolver)
  - System.Xml.XmlReader.ReadContentAsBase64(System.Byte[],System.Int32,System.Int32)
  - System.Xml.XmlReader.ReadContentAsBase64Async(System.Byte[],System.Int32,System.Int32)
  - System.Xml.XmlReader.ReadContentAsBinHex(System.Byte[],System.Int32,System.Int32)
  - System.Xml.XmlReader.ReadContentAsBinHexAsync(System.Byte[],System.Int32,System.Int32)
  - System.Xml.XmlReader.ReadContentAsBoolean
  - System.Xml.XmlReader.ReadContentAsDateTime
  - System.Xml.XmlReader.ReadContentAsDateTimeOffset
  - System.Xml.XmlReader.ReadContentAsDecimal
  - System.Xml.XmlReader.ReadContentAsDouble
  - System.Xml.XmlReader.ReadContentAsFloat
  - System.Xml.XmlReader.ReadContentAsInt
  - System.Xml.XmlReader.ReadContentAsLong
  - System.Xml.XmlReader.ReadContentAsObject
  - System.Xml.XmlReader.ReadContentAsObjectAsync
  - System.Xml.XmlReader.ReadContentAsString
  - System.Xml.XmlReader.ReadContentAsStringAsync
  - System.Xml.XmlReader.ReadElementContentAs(System.Type,System.Xml.IXmlNamespaceResolver)
  - System.Xml.XmlReader.ReadElementContentAs(System.Type,System.Xml.IXmlNamespaceResolver,System.String,System.String)
  - System.Xml.XmlReader.ReadElementContentAsAsync(System.Type,System.Xml.IXmlNamespaceResolver)
  - System.Xml.XmlReader.ReadElementContentAsBase64(System.Byte[],System.Int32,System.Int32)
  - System.Xml.XmlReader.ReadElementContentAsBase64Async(System.Byte[],System.Int32,System.Int32)
  - System.Xml.XmlReader.ReadElementContentAsBinHex(System.Byte[],System.Int32,System.Int32)
  - System.Xml.XmlReader.ReadElementContentAsBinHexAsync(System.Byte[],System.Int32,System.Int32)
  - System.Xml.XmlReader.ReadElementContentAsBoolean(System.String,System.String)
  - System.Xml.XmlReader.ReadElementContentAsBoolean
  - System.Xml.XmlReader.ReadElementContentAsDateTime
  - System.Xml.XmlReader.ReadElementContentAsDateTime(System.String,System.String)
  - System.Xml.XmlReader.ReadElementContentAsDecimal
  - System.Xml.XmlReader.ReadElementContentAsDecimal(System.String,System.String)
  - System.Xml.XmlReader.ReadElementContentAsDouble
  - System.Xml.XmlReader.ReadElementContentAsDouble(System.String,System.String)
  - System.Xml.XmlReader.ReadElementContentAsFloat
  - System.Xml.XmlReader.ReadElementContentAsFloat(System.String,System.String)
  - System.Xml.XmlReader.ReadElementContentAsInt
  - System.Xml.XmlReader.ReadElementContentAsInt(System.String,System.String)
  - System.Xml.XmlReader.ReadElementContentAsLong
  - System.Xml.XmlReader.ReadElementContentAsLong(System.String,System.String)
  - System.Xml.XmlReader.ReadElementContentAsObject
  - System.Xml.XmlReader.ReadElementContentAsObject(System.String,System.String)
  - System.Xml.XmlReader.ReadElementContentAsObjectAsync
  - System.Xml.XmlReader.ReadElementContentAsString(System.String,System.String)
  - System.Xml.XmlReader.ReadElementContentAsString
  - System.Xml.XmlReader.ReadElementContentAsStringAsync
  - System.Xml.XmlReader.ReadElementString
  - System.Xml.XmlReader.ReadElementString(System.String)
  - System.Xml.XmlReader.ReadElementString(System.String,System.String)
  - System.Xml.XmlReader.ReadEndElement
  - System.Xml.XmlReader.ReadInnerXml
  - System.Xml.XmlReader.ReadInnerXmlAsync
  - System.Xml.XmlReader.ReadOuterXml
  - System.Xml.XmlReader.ReadOuterXmlAsync
  - System.Xml.XmlReader.ReadStartElement
  - System.Xml.XmlReader.ReadStartElement(System.String)
  - System.Xml.XmlReader.ReadStartElement(System.String,System.String)
  - System.Xml.XmlReader.ReadState
  - System.Xml.XmlReader.ReadString
  - System.Xml.XmlReader.ReadSubtree
  - System.Xml.XmlReader.ReadToDescendant(System.String,System.String)
  - System.Xml.XmlReader.ReadToDescendant(System.String)
  - System.Xml.XmlReader.ReadToFollowing(System.String)
  - System.Xml.XmlReader.ReadToFollowing(System.String,System.String)
  - System.Xml.XmlReader.ReadToNextSibling(System.String)
  - System.Xml.XmlReader.ReadToNextSibling(System.String,System.String)
  - System.Xml.XmlReader.ReadValueChunk(System.Char[],System.Int32,System.Int32)
  - System.Xml.XmlReader.ReadValueChunkAsync(System.Char[],System.Int32,System.Int32)
  - System.Xml.XmlReader.ResolveEntity
  - System.Xml.XmlReader.SchemaInfo
  - System.Xml.XmlReader.Settings
  - System.Xml.XmlReader.Skip
  - System.Xml.XmlReader.SkipAsync
  - System.Xml.XmlReader.Value
  - System.Xml.XmlReader.ValueType
  - System.Xml.XmlReader.XmlLang
  - System.Xml.XmlReader.XmlSpace
  langs:
  - csharp
  name: XmlReader
  nameWithType: XmlReader
  fullName: System.Xml.XmlReader
  type: Class
  assemblies:
  - System.Xml.ReaderWriter
  - System.Xml
  - netstandard
  namespace: System.Xml
  summary: Represents a reader that provides fast, noncached, forward-only access to XML data.
  remarks: "> [!NOTE]\n>  To view the .NET Framework source code for this type, see the [Reference Source](http://referencesource.microsoft.com/#System.Xml/Xml/System/Xml/Core/XmlReader.cs#086471e5cca0825f). You can browse through the source code online, download the reference for offline viewing, and step through the sources (including patches and updates) during debugging; see [instructions](http://referencesource.microsoft.com/).  \n  \n <xref:System.Xml.XmlReader> provides forward-only, read-only access to XML data in adocument or stream. This class conforms to the W3C [Extensible Markup Language (XML) 1.0 (fourth edition)](http://www.w3.org/TR/2006/REC-xml-20060816/) and the [Namespaces in XML 1.0 (third edition)](http://www.w3.org/TR/REC-xml-names/) recommendations.  \n  \n <xref:System.Xml.XmlReader>methods let you move through XML data and read the contents of a node. The properties of the class reflect the value of the current node, which is where the reader is positioned.The <xref:System.Xml.XmlReader.ReadState%2A> property value indicates the current state of the XML reader. For example, the property is set to <xref:System.Xml.ReadState.Initial> by the <xref:System.Xml.XmlReader.Read%2A?displayProperty=fullName> method and <xref:System.Xml.ReadState.Closed> by the <xref:System.Xml.XmlReader.Close%2A?displayProperty=fullName> method. <xref:System.Xml.XmlReader> also provides data conformance checks and validation against a DTD or schema.  \n  \n <xref:System.Xml.XmlReader>uses a pull model to retrieve data. This model:  \n  \n-   Simplifies state management by a natural, top-down procedural refinement.  \n  \n-   Supports multiple input streams and layering.  \n  \n-   Enables the client to give the parser a buffer into which the string is directly written, and thus avoids the necessity of an extra string copy.  \n  \n-   Supports selective processing. The client can skip items and process those that are of interest to the application. You can also set properties in advance to manage how the XML stream is processed (for example, normalization).  \n  \n In this section:  \n  \n [Creating an XML reader](#xmlreader_create)   \n [Validating XML data](#xmlreader_validate)   \n [Data conformance](#xmlreader_data)   \n [Navigating through nodes](#xmlreader_nodes)   \n [Reading XML elements](#xmlreader_elements)   \n [Reading XML attributes](#xmlreader_attributes)   \n [Reading XML content](#xmlreader_content)   \n [Converting to CLR types](#xmlreader_clr)   \n [Asynchronous programming](#xmlreader_async)   \n [Security considerations](#xmlreader_security)  \n  \n<a name=\"xmlreader_create\"></a>   \n## Creating an XML reader  \n Use the <xref:System.Xml.XmlReader.Create%2A> method to create an <xref:System.Xml.XmlReader>instance.  \n  \n Although the .NET Framework provides concrete implementations of the <xref:System.Xml.XmlReader> class, such as the <xref:System.Xml.XmlTextReader>, <xref:System.Xml.XmlNodeReader>, and the <xref:System.Xml.XmlValidatingReader> classes, we recommend that you use the specialized classes only in these scenarios:  \n  \n-   When you want to readan XML DOM subtree from an <xref:System.Xml.XmlNode> object, use the <xref:System.Xml.XmlNodeReader> class. (However, this class doesn't support DTD or schema validation.)  \n  \n-   If you must expand entities on request, you don't want your text content normalized, or you don't want default attributes returned, use the <xref:System.Xml.XmlTextReader> class.  \n  \n To specify the set of features you want to enable on the XML reader, pass an <xref:System.Xml.XmlReaderSettings?displayProperty=fullName> object to the <xref:System.Xml.XmlReader.Create%2A> method. You can use a single <xref:System.Xml.XmlReaderSettings?displayProperty=fullName> object to create multiple readers with the same functionality, or modify the <xref:System.Xml.XmlReaderSettings?displayProperty=fullName>object to create a new reader with a different set of features. You can also easily add features to an existing reader.  \n  \n If you don't use a<xref:System.Xml.XmlReaderSettings?displayProperty=fullName>object, default settings are used. See the <xref:System.Xml.XmlReader.Create%2A> reference page for details.  \n  \n <xref:System.Xml.XmlReader> throws an <xref:System.Xml.XmlException> on XML parse errors. After an exception is thrown, the state of the reader is not predictable. For example, the reported node type may be different from the actual node type of the current node. Use the <xref:System.Xml.XmlReader.ReadState%2A> property to check whether the reader is in error state.  \n  \n<a name=\"xmlreader_validate\"></a>   \n## Validating XML data  \n To define the structure of an XML document and its element relationships, data types, and content constraints, you use a document type definition (DTD) or XML Schema definition language (XSD) schema. An XML document is considered to be well formed if it meets all the syntactical requirements defined by the [W3C XML 1.0 Recommendation](http://www.w3.org/TR/2006/REC-xml-20060816/). It's considered valid if it's well formed and also conforms to the constraints defined by its DTD or schema. (See the [W3C XML Schema Part 1: Structures](http://www.w3.org/TR/xmlschema-1/) and the [W3C XML Schema Part 2: Datatypes](http://www.w3.org/TR/xmlschema-2/)recommendations.) Therefore, although all valid XML documents are well formed, not all well-formed XML documents are valid.  \n  \n You can validate the data against a DTD, an inline XSD Schema, or an XSD Schema stored in an <xref:System.Xml.Schema.XmlSchemaSet> object (a cache); these scenarios are described on the <xref:System.Xml.XmlReader.Create%2A> reference page. <xref:System.Xml.XmlReader> doesn't support XML-Data Reduced (XDR) schema validation.  \n  \n You use the following settings on the <xref:System.Xml.XmlReaderSettings> class to specify what type of validation, if any, the<xref:System.Xml.XmlReader> instance supports.  \n  \n|Use this <xref:System.Xml.XmlReaderSettings> member|To specify|  \n|-----------------------------------------------------------------------------------------------------------------------------------------------------------|----------------|  \n|<xref:System.Xml.XmlReaderSettings.DtdProcessing%2A> property|Whether to allow DTD processing. The default is to disallow DTD processing.|  \n|<xref:System.Xml.XmlReaderSettings.ValidationType%2A> property|Whether the reader should validate data, and what type of validation to perform (DTD or schema). The default is no data validation.|  \n|<xref:System.Xml.XmlReaderSettings.ValidationEventHandler> event|An event handler for receiving information about validation events. If an event handler is not provided, an <xref:System.Xml.XmlException> is thrown on the first validation error.|  \n|<xref:System.Xml.XmlReaderSettings.ValidationFlags%2A> property|Additional validation options through the <xref:System.Xml.Schema.XmlSchemaValidationFlags> enumeration members:<br /><br /> -   `AllowXmlAttributes`-- Allow XML attributes (`xml:*`) in instance documents even when they're not defined in the schema. The attributes are validated based on their data type.See the <xref:System.Xml.Schema.XmlSchemaValidationFlags> reference page for  the setting to use in specific scenarios. (Disabled by default.)<br />-   `ProcessIdentityConstraints` --Process identity constraints (`xs:ID`, `xs:IDREF`, `xs:key`, `xs:keyref`, `xs:unique`) encountered during validation. (Enabled by default.)<br />-   `ProcessSchemaLocation` --Process schemas specified by the `xsi:schemaLocation` or `xsi:noNamespaceSchemaLocation` attribute. (Enabled by default.)<br />-   `ProcessInlineSchema`-- Process inline XML Schemas during validation. (Disabled by default.)<br />-   `ReportValidationWarnings`--Report events if a validation warning occurs. A warning is typically issued when there is no DTD or XML Schema to validate a particular element or attribute against. The <xref:System.Xml.XmlReaderSettings.ValidationEventHandler> is used for notification. (Disabled by default.)|  \n|<xref:System.Xml.XmlReaderSettings.Schemas%2A>|The <xref:System.Xml.Schema.XmlSchemaSet> to use for validation.|  \n|<xref:System.Xml.XmlReaderSettings.XmlResolver%2A> property|The <xref:System.Xml.XmlResolver>for  resolving and accessing external resources. This can include external entities such as DTD and schemas, and any `xs:include` or `xs:import` elements contained in the XML Schema. If you don't specify an <xref:System.Xml.XmlResolver>, the <xref:System.Xml.XmlReader> uses a default <xref:System.Xml.XmlUrlResolver> with no user credentials.|  \n  \n<a name=\"xmlreader_data\"></a>   \n## Data conformance  \n XML readers that are created by the <xref:System.Xml.XmlReader.Create%2A> methodmeet the following compliance requirements by default:  \n  \n-   New lines and attribute value are normalized according to the W3C [XML 1.0 Recommendation](http://www.w3.org/TR/2006/REC-xml-20060816/).  \n  \n-   All entities are automatically expanded.  \n  \n-   Default attributes declared in the document type definition are always added even when the reader doesn't validate.  \n  \n-   Declaration of XML prefix mapped to the correct XML namespace URI is allowed.  \n  \n-   The notation names in a single `NotationType` attribute declaration and`NmTokens` in a single `Enumeration` attribute declarationare distinct.  \n  \n Use these <xref:System.Xml.XmlReaderSettings> properties to specify the type of conformance checks you want to enable:  \n  \n|Use this <xref:System.Xml.XmlReaderSettings> property|To|Default|  \n|-------------------------------------------------------------------------------------------------------------------------------------------------------------|--------|-------------|  \n|<xref:System.Xml.XmlReaderSettings.CheckCharacters%2A> property|Enable or disable checks for the following:<br /><br /> -   Characters are within the range of legal XML characters, as defined by the [2.2 Characters](http://www.w3.org/TR/2006/REC-xml-20060816/#charsets) section of the W3C XML 1.0 Recommendation.<br />-   All XML names are valid, as defined by the [2.3 Common Syntactic Constructs](http://www.w3.org/TR/2006/REC-xml-20060816/#NT-Name) section of the W3C XML 1.0 Recommendation.<br /><br /> When this property is set to `true` (default), an <xref:System.Xml.XmlException> exception is thrown if the XML file contains illegal characters or invalid XML names (for example, an element name starts with a number).|Character and name checking is enabled.<br /><br /> Setting <xref:System.Xml.XmlReaderSettings.CheckCharacters%2A> to `false` turns off character checking for character entity references. If the reader is processing text data, it always checks that XML names are valid, regardless of this setting. **Note:**  The XML 1.0 recommendation requires document-level conformance when a DTD is present. Therefore, if the reader is configured to support <xref:System.Xml.ConformanceLevel?displayProperty=fullName>, but the XML data contains a document type definition (DTD), an <xref:System.Xml.XmlException> is thrown.|  \n|<xref:System.Xml.XmlReaderSettings.ConformanceLevel%2A> property|Choose the level of conformance to enforce:<br /><br /> -   <xref:System.Xml.ConformanceLevel.Document>. Conforms to the rules for a [well-formed XML 1.0 document](http://www.w3.org/TR/2006/REC-xml-20060816/#sec-well-formed).<br />-   <xref:System.Xml.ConformanceLevel.Fragment>. Conforms to the rules for a well-formed document fragment that can be consumed as an [external parsed entity](http://www.w3.org/TR/2006/REC-xml-20060816/#wf-entities).<br />-   <xref:System.Xml.ConformanceLevel.Auto>. Conforms to the level decided by the reader.<br /><br /> If the data isn't in conformance, an <xref:System.Xml.XmlException> exception is thrown.|<xref:System.Xml.ConformanceLevel.Document>|  \n  \n<a name=\"xmlreader_nodes\"></a>   \n## Navigating through nodes  \n The current node is the XML node on which the XML reader is currently positioned. All <xref:System.Xml.XmlReader>methods perform operations in relation to this node, and all <xref:System.Xml.XmlReader>properties reflect the value of the current node.  \n  \n The following methods make it easy to navigate through nodes and parse data.  \n  \n|Use this <xref:System.Xml.XmlReaderSettings> method|To|  \n|-----------------------------------------------------------------------------------------------------------------------------------------------------------|--------|  \n|<xref:System.Xml.XmlReader.Read%2A>|Read the first node, and advance through the stream one node at a time. Such calls are typically performed inside a `while` loop.<br /><br /> Use the <xref:System.Xml.XmlReader.NodeType%2A> property to get the type (for example, attribute, comment, element, and so on) of the current node.|  \n|<xref:System.Xml.XmlReader.Skip%2A>|Skip the children of the current node and move to the next node.|  \n|<xref:System.Xml.XmlReader.MoveToContent%2A> and <xref:System.Xml.XmlReader.MoveToContentAsync%2A>|Skip non-content nodes and move to the next content node or to the end of the file.<br /><br /> Non-content nodes include <xref:System.Xml.XmlNodeType.ProcessingInstruction>, <xref:System.Xml.XmlNodeType.DocumentType>, <xref:System.Xml.XmlNodeType.Comment>, <xref:System.Xml.XmlNodeType.Whitespace>, and <xref:System.Xml.XmlNodeType.SignificantWhitespace>.<br /><br /> Content nodes include non-white space text, <xref:System.Xml.XmlNodeType.CDATA>, <xref:System.Xml.XmlNodeType.EntityReference> , and<xref:System.Xml.XmlNodeType.EndEntity>.|  \n|<xref:System.Xml.XmlReader.ReadSubtree%2A>|Read an element and all its children, and return a new <xref:System.Xml.XmlReader> instance set to <xref:System.Xml.ReadState?displayProperty=fullName>.<br /><br /> This method is useful for creating boundaries around XML elements; for example, if you want to pass data to another component for processing and you want to limit how much of your data the component can access.|  \n  \n See the <xref:System.Xml.XmlReader.Read%2A?displayProperty=fullName> reference page for an example of navigating through a text stream one node at a time and displaying the type of each node.  \n  \n The following sections describe how you can read specific types of data, such as elements, attributes, and typed data.  \n  \n<a name=\"xmlreader_elements\"></a>   \n## Reading XML elements  \n The following table lists the methods and properties that the <xref:System.Xml.XmlReader> class provides for processing elements. After the <xref:System.Xml.XmlReader> is positioned on an element, the node properties, such as <xref:System.Xml.XmlReader.Name%2A>, reflect the element values. In addition to the members described below, any of the general methods and properties of the <xref:System.Xml.XmlReader> class can also be used to process elements. For example, you can use the <xref:System.Xml.XmlReader.ReadInnerXml%2A> method to read the contents of an element.  \n  \n> [!NOTE]\n>  See section 3.1 of the [W3C XML 1.0 Recommendation](http://www.w3.org/TR/2006/REC-xml-20060816/#sec-starttags) for definitions of start tags, end tags, and empty element tags.  \n  \n|Use this <xref:System.Xml.XmlReader> member|To|  \n|---------------------------------------------------------------------------------------------------------------------------------------------------|--------|  \n|<xref:System.Xml.XmlReader.IsStartElement%2A> method|Check if the current node is a start tag or an empty element tag.|  \n|<xref:System.Xml.XmlReader.ReadStartElement%2A> method|Check that the current node is an element and advance the reader to the next node (calls <xref:System.Xml.XmlReader.IsStartElement%2A> followed by <xref:System.Xml.XmlReader.Read%2A>).|  \n|<xref:System.Xml.XmlReader.ReadEndElement%2A> method|Check that the current node is an end tag and advance the reader to the next node.|  \n|<xref:System.Xml.XmlReader.ReadElementString%2A> method|Read a text-only element.|  \n|<xref:System.Xml.XmlReader.ReadToDescendant%2A> method|Advance the XML reader to the next descendant (child) element that has the specified name.|  \n|<xref:System.Xml.XmlReader.ReadToNextSibling%2A> method|Advance the XML reader to the next sibling element that has the specified name.|  \n|<xref:System.Xml.XmlReader.IsEmptyElement%2A> property|Check if the current element has an end element tag. For example:<br /><br /> -   `<item num=\"123\"/>` (<xref:System.Xml.XmlReader.IsEmptyElement%2A> is `true`.)<br />-   `<item num=\"123\"> </item>` (<xref:System.Xml.XmlReader.IsEmptyElement%2A> is `false`, although the element's content is empty.)|  \n  \n For an example of reading the text content of elements, see the <xref:System.Xml.XmlReader.ReadString%2A> method. The following example processes elements by using a `while` loop.  \n  \n [!code-csharp[XmlReaderBasic#10](~/samples/snippets/csharp/VS_Snippets_Data/XmlReaderBasic/CS/XmlReader_Basic.cs#10)]\n [!code-vb[XmlReaderBasic#10](~/samples/snippets/visualbasic/VS_Snippets_Data/XmlReaderBasic/VB/xmlreader_basic.vb#10)]  \n  \n<a name=\"xmlreader_attributes\"></a>   \n## Reading XML attributes  \n XML attributes are most commonly found on elements, but they're also allowed on XML declaration and document type nodes.  \n  \n When positioned on an element node, the <xref:System.Xml.XmlReader.MoveToAttribute%2A> method lets you go through the attribute list of the element. Note that after <xref:System.Xml.XmlReader.MoveToAttribute%2A> has been called, node properties such as <xref:System.Xml.XmlReader.Name%2A>, <xref:System.Xml.XmlReader.NamespaceURI%2A>, and <xref:System.Xml.XmlReader.Prefix%2A> reflect the properties of that attribute, not the properties of the element the attribute belongs to.  \n  \n The <xref:System.Xml.XmlReader> class provides these methods and properties to read and process attributes on elements.  \n  \n|Use this <xref:System.Xml.XmlReader> member|To|  \n|---------------------------------------------------------------------------------------------------------------------------------------------------|--------|  \n|<xref:System.Xml.XmlReader.HasAttributes%2A> property|Check whether the current node has any attributes.|  \n|<xref:System.Xml.XmlReader.AttributeCount%2A> property|Get the number of attributes on the current element.|  \n|<xref:System.Xml.XmlReader.MoveToFirstAttribute%2A> method|Move to the first attribute in an element.|  \n|<xref:System.Xml.XmlReader.MoveToNextAttribute%2A> method|Move to the next attribute in an element.|  \n|<xref:System.Xml.XmlReader.MoveToAttribute%2A> method|Move to a specified attribute.|  \n|<xref:System.Xml.XmlReader.GetAttribute%2A> method or <xref:System.Xml.XmlReader.Item%2A> property|Get the value of a specified attribute.|  \n|<xref:System.Xml.XmlReader.IsDefault%2A> property|Check whether the current node is an attribute that was generated from the default value defined in the DTD or schema.|  \n|<xref:System.Xml.XmlReader.MoveToElement%2A> method|Move to the element that owns the current attribute. Use this method to return to an element after navigating through its attributes.|  \n|<xref:System.Xml.XmlReader.ReadAttributeValue%2A> method|Parse the attribute value into one or more `Text`, `EntityReference`, or `EndEntity` nodes.|  \n  \n Any of the general <xref:System.Xml.XmlReader> methods and properties can also be used to process attributes. For example, after the <xref:System.Xml.XmlReader> is positioned on an attribute, the <xref:System.Xml.XmlReader.Name%2A> and <xref:System.Xml.XmlReader.Value%2A> properties reflect the values of the attribute. You can also use any of the content `Read` methods to get the value of the attribute.  \n  \n This example uses the <xref:System.Xml.XmlReader.AttributeCount%2A> property to navigate through all the attributes on an element.  \n  \n [!code-csharp[XmlReaderBasic#1](~/samples/snippets/csharp/VS_Snippets_Data/XmlReaderBasic/CS/XmlReader_Basic.cs#1)]\n [!code-vb[XmlReaderBasic#1](~/samples/snippets/visualbasic/VS_Snippets_Data/XmlReaderBasic/VB/xmlreader_basic.vb#1)]  \n  \n This example uses the <xref:System.Xml.XmlReader.MoveToNextAttribute%2A> method in a `while` loop to navigate through the attributes.  \n  \n [!code-csharp[XmlReaderBasic#6](~/samples/snippets/csharp/VS_Snippets_Data/XmlReaderBasic/CS/XmlReader_Basic.cs#6)]\n [!code-vb[XmlReaderBasic#6](~/samples/snippets/visualbasic/VS_Snippets_Data/XmlReaderBasic/VB/xmlreader_basic.vb#6)]  \n  \n **Reading attributes on XML declaration nodes**  \n  \n When the XML reader is positioned on an XML declaration node, the <xref:System.Xml.XmlReader.Value%2A> property returns the version, standalone, and encoding information as a single string. <xref:System.Xml.XmlReader> objects created by the <xref:System.Xml.XmlReader.Create%2A> method, the <xref:System.Xml.XmlTextReader> class, and the <xref:System.Xml.XmlValidatingReader>class expose the version, standalone, and encoding items as attributes.  \n  \n **Reading attributes on document type nodes**  \n  \n When the XML reader is positioned on a document type node, the <xref:System.Xml.XmlReader.GetAttribute%2A> method and <xref:System.Xml.XmlReader.Item%2A> property can be used to return the values for the SYSTEM and PUBLIC literals. For example, calling `reader.GetAttribute(\"PUBLIC\")` returns the PUBLIC value.  \n  \n **Reading attributes on processing instruction nodes**  \n  \n When the <xref:System.Xml.XmlReader> is positioned on a processing instruction node, the <xref:System.Xml.XmlReader.Value%2A> property returns the entire text content. Items in the processing instruction node aren't treated as attributes. They can't be read with the <xref:System.Xml.XmlReader.GetAttribute%2A> or <xref:System.Xml.XmlReader.MoveToAttribute%2A> method.  \n  \n<a name=\"xmlreader_content\"></a>   \n## Reading XML content  \n The XMLReader class includes the following members that read content from an XML file and return the content as string values. (To return CLR types, see the [next section](#xmlreader_clr).)  \n  \n|Use this <xref:System.Xml.XmlReader> member|To|  \n|---------------------------------------------------------------------------------------------------------------------------------------------------|--------|  \n|<xref:System.Xml.XmlReader.Value%2A> property|Get the text content of the current node. The value returned depends on the node type; see the <xref:System.Xml.XmlReader.Value%2A> reference page for details.|  \n|<xref:System.Xml.XmlReader.ReadString%2A> method|Get the content of an element or text node as a string. This method stops on processing instructions and comments.<br /><br /> For details on how this method handles specific node types, see the <xref:System.Xml.XmlReader.ReadString%2A> reference page.|  \n|<xref:System.Xml.XmlReader.ReadInnerXml%2A> and <xref:System.Xml.XmlReader.ReadInnerXmlAsync%2A> methods|Get all the content of the current node, including the markup, but excluding start and end tags. For example, for:<br /><br /> `<node>this<child id=\"123\"/></node>`<br /><br /> <xref:System.Xml.XmlReader.ReadInnerXml%2A> returns:<br /><br /> `this<child id=\"123\"/>`|  \n|<xref:System.Xml.XmlReader.ReadOuterXml%2A> and <xref:System.Xml.XmlReader.ReadOuterXmlAsync%2A> methods|Get all the content of the current node and its children, including markup and start/end tags. For example, for:<br /><br /> `<node>this<child id=\"123\"/></node>`<br /><br /> <xref:System.Xml.XmlReader.ReadOuterXml%2A> returns:<br /><br /> `<node>this<child id=\"123\"/></node>`|  \n  \n<a name=\"xmlreader_clr\"></a>   \n## Converting to CLR types  \n You can use the members of the <xref:System.Xml.XmlReader> class (listed in the following table) to read XML data and return values as common language runtime (CLR) types instead of strings. These members enable you to get values in the representation that is most appropriate for your coding task without having to manually parse or convert string values.  \n  \n-   The **ReadElementContentAs** methods can only be called on element node types. These methods cannot be used on elements that contain child elements or mixed content. When called, the <xref:System.Xml.XmlReader> object reads the start tag, reads the element content, and then moves past the end element tag. Processing instructions and comments are ignored and entities are expanded.  \n  \n-   The **ReadContentAs**methods read the text content at the current reader position, and if the XML data doesn't have any schema or data type information associated with it, convert the text content to the requested return type. Text, white space, significant white space and CDATA sections are concatenated. Comments and processing instructions are skipped, and entity references are automatically resolved.  \n  \n The <xref:System.Xml.XmlReader> class uses the rules defined by the [W3C XML Schema Part 2: Datatypes](http://www.w3.org/TR/xmlschema-2/)recommendation.  \n  \n|Use this <xref:System.Xml.XmlReader>method|To return this CLR type|  \n|--------------------------------------------------------------------------------------------------------------------------------------------------|-----------------------------|  \n|<xref:System.Xml.XmlReader.ReadContentAsBoolean%2A> and <xref:System.Xml.XmlReader.ReadElementContentAsBoolean%2A>|<xref:System.Boolean>|  \n|<xref:System.Xml.XmlReader.ReadContentAsDateTime%2A> and <xref:System.Xml.XmlReader.ReadElementContentAsDateTime%2A>|<xref:System.DateTime>|  \n|<xref:System.Xml.XmlReader.ReadContentAsDouble%2A> and <xref:System.Xml.XmlReader.ReadElementContentAsDouble%2A>|<xref:System.Double>|  \n|<xref:System.Xml.XmlReader.ReadContentAsLong%2A> and <xref:System.Xml.XmlReader.ReadElementContentAsLong%2A>|<xref:System.Int64>|  \n|<xref:System.Xml.XmlReader.ReadContentAsInt%2A> and <xref:System.Xml.XmlReader.ReadElementContentAsInt%2A>|<xref:System.Int32>|  \n|<xref:System.Xml.XmlReader.ReadContentAsString%2A> and <xref:System.Xml.XmlReader.ReadElementContentAsString%2A>|<xref:System.String>|  \n|<xref:System.Xml.XmlReader.ReadContentAs%2A> and <xref:System.Xml.XmlReader.ReadElementContentAs%2A>|The type you specify with the `returnType` parameter|  \n|<xref:System.Xml.XmlReader.ReadContentAsObject%2A> and <xref:System.Xml.XmlReader.ReadElementContentAsObject%2A>|The most appropriate type, as specified by the <xref:System.Xml.XmlReader.ValueType%2A?displayProperty=fullName> property. See [Type Support in the System.Xml Classes](~/docs/standard/data/xml/type-support-in-the-system-xml-classes.md) for mapping information.|  \n  \n If an element can't easily be converted to a CLR type because of its format, you can use a schema mapping to ensure a successful conversion. The following example uses an .xsd file to convert the `hire-date` element to the `xs:date` type, and then uses the <xref:System.Xml.XmlReader.ReadElementContentAsDateTime%2A> method to return the element as a <xref:System.DateTime> object.  \n  \n **Input (hireDate.xml):**  \n  \n [!code-xml[XmlReader.ReadElementContentAs#9](~/samples/snippets/xml/VS_Snippets_Data/XmlReader.ReadElementContentAs/XML/hireDate.xml#9)]  \n  \n **Schema (hireDate.xsd):**  \n  \n [!code-xml[XmlReader.ReadElementContentAs#10](~/samples/snippets/xml/VS_Snippets_Data/XmlReader.ReadElementContentAs/XML/hireDate.xsd#10)]  \n  \n **Code:**  \n  \n [!code-csharp[XmlReader.ReadElementContentAs#13](~/samples/snippets/csharp/VS_Snippets_Data/XmlReader.ReadElementContentAs/CS/readElementContentAs.cs#13)]\n [!code-vb[XmlReader.ReadElementContentAs#13](~/samples/snippets/visualbasic/VS_Snippets_Data/XmlReader.ReadElementContentAs/VB/readElementContentAs.vb#13)]  \n  \n **Output:**  \n  \n```  \nSix Month Review Date:  7/8/2003 12:00:00 AM  \n```  \n  \n<a name=\"xmlreader_async\"></a>   \n## Asynchronous programming  \n Most of the <xref:System.Xml.XmlReader> methods have asynchronous counterparts that have \"Async\" at the end of their method names. For example, the asynchronous equivalent of <xref:System.Xml.XmlReader.ReadContentAsObject%2A> is <xref:System.Xml.XmlReader.ReadContentAsObjectAsync%2A>.  \n  \n The following methods can be used with asynchronous method calls:  \n  \n-   <xref:System.Xml.XmlReader.GetAttribute%2A>  \n  \n-   <xref:System.Xml.XmlReader.MoveToAttribute%2A>  \n  \n-   <xref:System.Xml.XmlReader.MoveToFirstAttribute%2A>  \n  \n-   <xref:System.Xml.XmlReader.MoveToNextAttribute%2A>  \n  \n-   <xref:System.Xml.XmlReader.MoveToElement%2A>  \n  \n-   <xref:System.Xml.XmlReader.ReadAttributeValue%2A>  \n  \n-   <xref:System.Xml.XmlReader.ReadSubtree%2A>  \n  \n-   <xref:System.Xml.XmlReader.ResolveEntity%2A>  \n  \n The following sections describe asynchronous usage for methods that don't have asynchronous counterparts.  \n  \n **ReadStartElement method**  \n  \n [!code-csharp[System.Xml.XmlReader.Class#1](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.xml.xmlreader.class/cs/program.cs#1)]\n [!code-vb[System.Xml.XmlReader.Class#1](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.xml.xmlreader.class/vb/module1.vb#1)]  \n  \n **ReadEndElement method**  \n  \n [!code-csharp[System.Xml.XmlReader.Class#2](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.xml.xmlreader.class/cs/program.cs#2)]\n [!code-vb[System.Xml.XmlReader.Class#2](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.xml.xmlreader.class/vb/module1.vb#2)]  \n  \n **ReadToNextSibling method**  \n  \n [!code-csharp[System.Xml.XmlReader.Class#3](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.xml.xmlreader.class/cs/program.cs#3)]\n [!code-vb[System.Xml.XmlReader.Class#3](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.xml.xmlreader.class/vb/module1.vb#3)]  \n  \n **ReadToFollowing method**  \n  \n [!code-csharp[System.Xml.XmlReader.Class#4](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.xml.xmlreader.class/cs/program.cs#4)]\n [!code-vb[System.Xml.XmlReader.Class#4](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.xml.xmlreader.class/vb/module1.vb#4)]  \n  \n **ReadToDescendant method**  \n  \n [!code-csharp[System.Xml.XmlReader.Class#5](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.xml.xmlreader.class/cs/program.cs#5)]\n [!code-vb[System.Xml.XmlReader.Class#5](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.xml.xmlreader.class/vb/module1.vb#5)]  \n  \n<a name=\"xmlreader_security\"></a>   \n## Security considerations  \n Consider the following when working with the <xref:System.Xml.XmlReader> class:  \n  \n-   Exceptions thrown from the <xref:System.Xml.XmlReader> can disclose path information that you might not want bubbled up to your app. Your app must catch exceptions and process them appropriately.  \n  \n-   Do not enable DTD processing if you're concerned about denial of service issues or if you're dealing with untrusted sources. DTD processing is disabled by default for <xref:System.Xml.XmlReader> objects created by the <xref:System.Xml.XmlReader.Create%2A> method.  \n  \n     If you have DTD processing enabled, you can use the <xref:System.Xml.XmlSecureResolver> to restrict the resources that the <xref:System.Xml.XmlReader> can access. You can also design your app so that the XML processing is memory and time constrained. For example, you can configure time-out limits in your ASP.NET app.  \n  \n-   XML data can include references to external resources such as a schema file. By default, external resources are resolved by using an <xref:System.Xml.XmlUrlResolver> object with no user credentials. You can secure this further by doing one of the following:  \n  \n    -   Restrict the resources that the <xref:System.Xml.XmlReader> can access by setting the <xref:System.Xml.XmlReaderSettings.XmlResolver%2A?displayProperty=fullName> property to an <xref:System.Xml.XmlSecureResolver> object.  \n  \n    -   Do not allow the <xref:System.Xml.XmlReader> to open any external resources by setting the <xref:System.Xml.XmlReaderSettings.XmlResolver%2A?displayProperty=fullName> property to `null`.  \n  \n-   The <xref:System.Xml.Schema.XmlSchemaValidationFlags.ProcessInlineSchema> and <xref:System.Xml.Schema.XmlSchemaValidationFlags.ProcessSchemaLocation> validation flags of an <xref:System.Xml.XmlReaderSettings> object aren't set by default. This helps to protect the <xref:System.Xml.XmlReader> against schema-based attacks when it is processing XML data from an untrusted source. When these flags are set, the <xref:System.Xml.XmlReaderSettings.XmlResolver%2A> of the <xref:System.Xml.XmlReaderSettings> object is used to resolve schema locations encountered in the instance document in the <xref:System.Xml.XmlReader>. If the <xref:System.Xml.XmlReaderSettings.XmlResolver%2A> property is set to `null`, schema locations aren't resolved even if the <xref:System.Xml.Schema.XmlSchemaValidationFlags.ProcessInlineSchema> and <xref:System.Xml.Schema.XmlSchemaValidationFlags.ProcessSchemaLocation> validation flags are set.  \n  \n     Schemas added during validation add new types and can change the validation outcome of the document being validated. As a result, external schemas should only be resolved from trusted sources.  \n  \n     We recommend disabling the <xref:System.Xml.Schema.XmlSchemaValidationFlags.ProcessIdentityConstraints> flag when validating untrusted, large XML documents in high availability scenarios against a schema that has identity constraints over a large part of the document. This flag is enabled by default.  \n  \n-   XML data can contain a large number of attributes, namespace declarations, nested elements and so on that require a substantial amount of time to process. To limit the size of the input that is sent to the <xref:System.Xml.XmlReader>, you can:  \n  \n    -   Limit the size of the document by setting the <xref:System.Xml.XmlReaderSettings.MaxCharactersInDocument%2A> property.  \n  \n    -   Limit the number of characters that result from expanding entities by setting the <xref:System.Xml.XmlReaderSettings.MaxCharactersFromEntities%2A> property.  \n  \n    -   Create a custom `IStream` implementation for the <xref:System.Xml.XmlReader>.  \n  \n-   The <xref:System.Xml.XmlReader.ReadValueChunk%2A> method can be used to handle large streams of data. This method reads a small number of characters at a time instead of allocating a single string for the whole value.  \n  \n-   When reading an XML document with a large number of unique local names, namespaces, or prefixes, a problem can occur. If you are using a class that derives from <xref:System.Xml.XmlReader>, and you call the <xref:System.Xml.XmlReader.LocalName%2A>, <xref:System.Xml.XmlReader.Prefix%2A>, or <xref:System.Xml.XmlReader.NamespaceURI%2A> property for each item, the returned string is added to a <xref:System.Xml.NameTable>. The collection held by the <xref:System.Xml.NameTable> never decreases in size, creating a virtual memory leak of the string handles. One mitigation for this is to derive from the <xref:System.Xml.NameTable> class and enforce a maximum size quota. (There is no way to prevent the use of a <xref:System.Xml.NameTable>, or to switch the <xref:System.Xml.NameTable> when it is full). Another mitigation is to avoid using the properties mentioned and instead use the <xref:System.Xml.XmlReader.MoveToAttribute%2A> method with the <xref:System.Xml.XmlReader.IsStartElement%2A> method where possible; those methods don't return strings and thus avoid the problem of overfilling the <xref:System.Xml.NameTable> collection.  \n  \n-   <xref:System.Xml.XmlReaderSettings> objects can contain sensitive information such as user credentials. An untrusted component could use the <xref:System.Xml.XmlReaderSettings> object and its user credentials to create <xref:System.Xml.XmlReader> objects to read data. Be careful when caching <xref:System.Xml.XmlReaderSettings> objects, or when passing the <xref:System.Xml.XmlReaderSettings> object from one component to another.  \n  \n-   Do not accept supporting components, such as <xref:System.Xml.NameTable>, <xref:System.Xml.XmlNamespaceManager>, and <xref:System.Xml.XmlResolver> objects, from an untrusted source."
  example:
  - "The following example code shows how to use the asynchronous APIto parse XML.  \n  \n [!code-csharp[System.Xml.XmlReader.Class#6](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.xml.xmlreader.class/cs/program.cs#6)]\n [!code-vb[System.Xml.XmlReader.Class#6](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.xml.xmlreader.class/vb/module1.vb#6)]"
  syntax:
    content: 'public abstract class XmlReader : IDisposable'
  inheritance:
  - System.Object
  derivedClasses:
  - System.Xml.XmlDictionaryReader
  - System.Xml.XmlNodeReader
  - System.Xml.XmlTextReader
  - System.Xml.XmlValidatingReader
  implements:
  - System.IDisposable
  inheritedMembers:
  - System.Object.Equals(System.Object)
  - System.Object.Equals(System.Object,System.Object)
  - System.Object.GetHashCode
  - System.Object.GetType
  - System.Object.MemberwiseClone
  - System.Object.ReferenceEquals(System.Object,System.Object)
  - System.Object.ToString
  attributes: []
  version:
  - netcore-1.0
  - netcore-1.1
  - netcore-2.0
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  - netstandard-1.0
  - netstandard-1.1
  - netstandard-1.2
  - netstandard-1.3
  - netstandard-1.4
  - netstandard-1.6
  - netstandard-2.0
  - xamarinandroid-7.1
  - xamarinios-10.8
  - xamarinmac-3.0
  monikers:
  - netcore-1.0
  - netcore-1.1
  - netcore-2.0
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  - netstandard-1.0
  - netstandard-1.1
  - netstandard-1.2
  - netstandard-1.3
  - netstandard-1.4
  - netstandard-1.6
  - netstandard-2.0
  - xamarinandroid-7.1
  - xamarinios-10.8
  - xamarinmac-3.0
  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Xml/XmlReader.xml
  ms.technology:
  - dotnet-standard
  author: mairaw
  ms.author: mairaw
  manager: wpickett
- uid: System.Xml.XmlReader.#ctor
  commentId: M:System.Xml.XmlReader.#ctor
  id: '#ctor'
  parent: System.Xml.XmlReader
  langs:
  - csharp
  name: XmlReader()
  nameWithType: XmlReader.XmlReader()
  fullName: XmlReader.XmlReader()
  type: Constructor
  assemblies:
  - System.Xml.ReaderWriter
  - System.Xml
  - netstandard
  namespace: System.Xml
  summary: Initializes a new instance of the `XmlReader` class.
  remarks: This constructor is called by derived class constructors to initialize state in this type.
  syntax:
    content: protected XmlReader ();
    parameters: []
  overload: System.Xml.XmlReader.#ctor*
  exceptions: []
  version:
  - netcore-1.0
  - netcore-1.1
  - netcore-2.0
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  - netstandard-1.0
  - netstandard-1.1
  - netstandard-1.2
  - netstandard-1.3
  - netstandard-1.4
  - netstandard-1.6
  - netstandard-2.0
  - xamarinandroid-7.1
  - xamarinios-10.8
  - xamarinmac-3.0
  monikers:
  - netcore-1.0
  - netcore-1.1
  - netcore-2.0
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  - netstandard-1.0
  - netstandard-1.1
  - netstandard-1.2
  - netstandard-1.3
  - netstandard-1.4
  - netstandard-1.6
  - netstandard-2.0
  - xamarinandroid-7.1
  - xamarinios-10.8
  - xamarinmac-3.0
  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Xml/XmlReader.xml
  ms.technology:
  - dotnet-standard
  author: mairaw
  ms.author: mairaw
  manager: wpickett
- uid: System.Xml.XmlReader.AttributeCount
  commentId: P:System.Xml.XmlReader.AttributeCount
  id: AttributeCount
  parent: System.Xml.XmlReader
  langs:
  - csharp
  name: AttributeCount
  nameWithType: XmlReader.AttributeCount
  fullName: XmlReader.AttributeCount
  type: Property
  assemblies:
  - System.Xml.ReaderWriter
  - System.Xml
  - netstandard
  namespace: System.Xml
  summary: When overridden in a derived class, gets the number of attributes on the current node.
  remarks: This property is relevant to `Element`, `DocumentType` and `XmlDeclaration` nodes only. (Other node types do not have attributes.)
  example:
  - "The following example displays all attributes on the current node.  \n  \n [!code-csharp[XmlReaderBasic#1](~/samples/snippets/csharp/VS_Snippets_Data/XmlReaderBasic/CS/XmlReader_Basic.cs#1)]\n [!code-vb[XmlReaderBasic#1](~/samples/snippets/visualbasic/VS_Snippets_Data/XmlReaderBasic/VB/xmlreader_basic.vb#1)]"
  syntax:
    content: public abstract int AttributeCount { get; }
    return:
      type: System.Int32
      description: The number of attributes on the current node.
  overload: System.Xml.XmlReader.AttributeCount*
  exceptions:
  - type: System.InvalidOperationException
    commentId: T:System.InvalidOperationException
    description: An <xref href="System.Xml.XmlReader"></xref> method was called before a previous asynchronous operation finished. In this case, <xref href="System.InvalidOperationException"></xref> is thrown with the message "An asynchronous operation is already in progress."
  version:
  - netcore-1.0
  - netcore-1.1
  - netcore-2.0
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  - netstandard-1.0
  - netstandard-1.1
  - netstandard-1.2
  - netstandard-1.3
  - netstandard-1.4
  - netstandard-1.6
  - netstandard-2.0
  - xamarinandroid-7.1
  - xamarinios-10.8
  - xamarinmac-3.0
  monikers:
  - netcore-1.0
  - netcore-1.1
  - netcore-2.0
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  - netstandard-1.0
  - netstandard-1.1
  - netstandard-1.2
  - netstandard-1.3
  - netstandard-1.4
  - netstandard-1.6
  - netstandard-2.0
  - xamarinandroid-7.1
  - xamarinios-10.8
  - xamarinmac-3.0
  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Xml/XmlReader.xml
  ms.technology:
  - dotnet-standard
  author: mairaw
  ms.author: mairaw
  manager: wpickett
- uid: System.Xml.XmlReader.BaseURI
  commentId: P:System.Xml.XmlReader.BaseURI
  id: BaseURI
  parent: System.Xml.XmlReader
  langs:
  - csharp
  name: BaseURI
  nameWithType: XmlReader.BaseURI
  fullName: XmlReader.BaseURI
  type: Property
  assemblies:
  - System.Xml.ReaderWriter
  - System.Xml
  - netstandard
  namespace: System.Xml
  summary: When overridden in a derived class, gets the base URI of the current node.
  remarks: A networked XML document is comprised of chunks of data aggregated using various W3C standard inclusion mechanisms and therefore contains nodes that come from different places. DTD entities are an example of this, but this is not limited to DTDs. The base URI tells you where these nodes came from. If there is no base URI for the nodes being returned (for example, they were parsed from an in-memory string), `String.Empty` is returned.
  syntax:
    content: public abstract string BaseURI { get; }
    return:
      type: System.String
      description: The base URI of the current node.
  overload: System.Xml.XmlReader.BaseURI*
  exceptions:
  - type: System.InvalidOperationException
    commentId: T:System.InvalidOperationException
    description: An <xref href="System.Xml.XmlReader"></xref> method was called before a previous asynchronous operation finished. In this case, <xref href="System.InvalidOperationException"></xref> is thrown with the message "An asynchronous operation is already in progress."
  version:
  - netcore-1.0
  - netcore-1.1
  - netcore-2.0
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  - netstandard-1.0
  - netstandard-1.1
  - netstandard-1.2
  - netstandard-1.3
  - netstandard-1.4
  - netstandard-1.6
  - netstandard-2.0
  - xamarinandroid-7.1
  - xamarinios-10.8
  - xamarinmac-3.0
  monikers:
  - netcore-1.0
  - netcore-1.1
  - netcore-2.0
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  - netstandard-1.0
  - netstandard-1.1
  - netstandard-1.2
  - netstandard-1.3
  - netstandard-1.4
  - netstandard-1.6
  - netstandard-2.0
  - xamarinandroid-7.1
  - xamarinios-10.8
  - xamarinmac-3.0
  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Xml/XmlReader.xml
  ms.technology:
  - dotnet-standard
  author: mairaw
  ms.author: mairaw
  manager: wpickett
- uid: System.Xml.XmlReader.CanReadBinaryContent
  commentId: P:System.Xml.XmlReader.CanReadBinaryContent
  id: CanReadBinaryContent
  parent: System.Xml.XmlReader
  langs:
  - csharp
  name: CanReadBinaryContent
  nameWithType: XmlReader.CanReadBinaryContent
  fullName: XmlReader.CanReadBinaryContent
  type: Property
  assemblies:
  - System.Xml.ReaderWriter
  - System.Xml
  - netstandard
  namespace: System.Xml
  summary: Gets a value indicating whether the <xref href="System.Xml.XmlReader"></xref> implements the binary content read methods.
  remarks: "The binary content read methods include the <xref:System.Xml.XmlReader.ReadContentAsBase64%2A>, <xref:System.Xml.XmlReader.ReadContentAsBinHex%2A>, <xref:System.Xml.XmlReader.ReadElementContentAsBase64%2A>, and <xref:System.Xml.XmlReader.ReadElementContentAsBinHex%2A> methods. If this property returns `false` a <xref:System.NotSupportedException> is returned when any of the binary read methods is called.  \n  \n All Microsoft .NET Framework implementations of the <xref:System.Xml.XmlReader> class return `true` for this property."
  syntax:
    content: public virtual bool CanReadBinaryContent { get; }
    return:
      type: System.Boolean
      description: '`true` if the binary content read methods are implemented; otherwise `false`.'
  overload: System.Xml.XmlReader.CanReadBinaryContent*
  exceptions:
  - type: System.InvalidOperationException
    commentId: T:System.InvalidOperationException
    description: An <xref href="System.Xml.XmlReader"></xref> method was called before a previous asynchronous operation finished. In this case, <xref href="System.InvalidOperationException"></xref> is thrown with the message "An asynchronous operation is already in progress."
  version:
  - netcore-1.0
  - netcore-1.1
  - netcore-2.0
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  - netstandard-1.0
  - netstandard-1.1
  - netstandard-1.2
  - netstandard-1.3
  - netstandard-1.4
  - netstandard-1.6
  - netstandard-2.0
  - xamarinandroid-7.1
  - xamarinios-10.8
  - xamarinmac-3.0
  monikers:
  - netcore-1.0
  - netcore-1.1
  - netcore-2.0
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  - netstandard-1.0
  - netstandard-1.1
  - netstandard-1.2
  - netstandard-1.3
  - netstandard-1.4
  - netstandard-1.6
  - netstandard-2.0
  - xamarinandroid-7.1
  - xamarinios-10.8
  - xamarinmac-3.0
  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Xml/XmlReader.xml
  ms.technology:
  - dotnet-standard
  author: mairaw
  ms.author: mairaw
  manager: wpickett
- uid: System.Xml.XmlReader.CanReadValueChunk
  commentId: P:System.Xml.XmlReader.CanReadValueChunk
  id: CanReadValueChunk
  parent: System.Xml.XmlReader
  langs:
  - csharp
  name: CanReadValueChunk
  nameWithType: XmlReader.CanReadValueChunk
  fullName: XmlReader.CanReadValueChunk
  type: Property
  assemblies:
  - System.Xml.ReaderWriter
  - System.Xml
  - netstandard
  namespace: System.Xml
  summary: Gets a value indicating whether the <xref href="System.Xml.XmlReader"></xref> implements the <xref href="System.Xml.XmlReader.ReadValueChunk(System.Char[],System.Int32,System.Int32)"></xref> method.
  remarks: "Text parsing <xref:System.Xml.XmlReader> objects that were created from the static <xref:System.Xml.XmlReader.Create%2A> method always return `true`. All other Microsoft .NET Framework implementations of the <xref:System.Xml.XmlReader> class, including the <xref:System.Xml.XmlTextReader> class, return `false`.  \n  \n If this property returns `false` a <xref:System.NotSupportedException> is returned when the <xref:System.Xml.XmlReader.ReadValueChunk%2A> method is called."
  syntax:
    content: public virtual bool CanReadValueChunk { get; }
    return:
      type: System.Boolean
      description: '`true` if the <xref href="System.Xml.XmlReader"></xref> implements the <xref href="System.Xml.XmlReader.ReadValueChunk(System.Char[],System.Int32,System.Int32)"></xref> method; otherwise `false`.'
  overload: System.Xml.XmlReader.CanReadValueChunk*
  exceptions:
  - type: System.InvalidOperationException
    commentId: T:System.InvalidOperationException
    description: An <xref href="System.Xml.XmlReader"></xref> method was called before a previous asynchronous operation finished. In this case, <xref href="System.InvalidOperationException"></xref> is thrown with the message "An asynchronous operation is already in progress."
  version:
  - netcore-1.0
  - netcore-1.1
  - netcore-2.0
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  - netstandard-1.0
  - netstandard-1.1
  - netstandard-1.2
  - netstandard-1.3
  - netstandard-1.4
  - netstandard-1.6
  - netstandard-2.0
  - xamarinandroid-7.1
  - xamarinios-10.8
  - xamarinmac-3.0
  monikers:
  - netcore-1.0
  - netcore-1.1
  - netcore-2.0
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  - netstandard-1.0
  - netstandard-1.1
  - netstandard-1.2
  - netstandard-1.3
  - netstandard-1.4
  - netstandard-1.6
  - netstandard-2.0
  - xamarinandroid-7.1
  - xamarinios-10.8
  - xamarinmac-3.0
  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Xml/XmlReader.xml
  ms.technology:
  - dotnet-standard
  author: mairaw
  ms.author: mairaw
  manager: wpickett
- uid: System.Xml.XmlReader.CanResolveEntity
  commentId: P:System.Xml.XmlReader.CanResolveEntity
  id: CanResolveEntity
  parent: System.Xml.XmlReader
  langs:
  - csharp
  name: CanResolveEntity
  nameWithType: XmlReader.CanResolveEntity
  fullName: XmlReader.CanResolveEntity
  type: Property
  assemblies:
  - System.Xml.ReaderWriter
  - System.Xml
  - netstandard
  namespace: System.Xml
  summary: Gets a value indicating whether this reader can parse and resolve entities.
  remarks: This property always returns `false` for implementations of <xref:System.Xml.XmlReader> that do not support DTD information. In this case, calling <xref:System.Xml.XmlReader.ResolveEntity%2A> throws an exception.
  syntax:
    content: public virtual bool CanResolveEntity { get; }
    return:
      type: System.Boolean
      description: '`true` if the reader can parse and resolve entities; otherwise, `false`.'
  overload: System.Xml.XmlReader.CanResolveEntity*
  exceptions:
  - type: System.InvalidOperationException
    commentId: T:System.InvalidOperationException
    description: An <xref href="System.Xml.XmlReader"></xref> method was called before a previous asynchronous operation finished. In this case, <xref href="System.InvalidOperationException"></xref> is thrown with the message "An asynchronous operation is already in progress."
  version:
  - netcore-1.0
  - netcore-1.1
  - netcore-2.0
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  - netstandard-1.0
  - netstandard-1.1
  - netstandard-1.2
  - netstandard-1.3
  - netstandard-1.4
  - netstandard-1.6
  - netstandard-2.0
  - xamarinandroid-7.1
  - xamarinios-10.8
  - xamarinmac-3.0
  monikers:
  - netcore-1.0
  - netcore-1.1
  - netcore-2.0
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  - netstandard-1.0
  - netstandard-1.1
  - netstandard-1.2
  - netstandard-1.3
  - netstandard-1.4
  - netstandard-1.6
  - netstandard-2.0
  - xamarinandroid-7.1
  - xamarinios-10.8
  - xamarinmac-3.0
  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Xml/XmlReader.xml
  ms.technology:
  - dotnet-standard
  author: mairaw
  ms.author: mairaw
  manager: wpickett
- uid: System.Xml.XmlReader.Close
  commentId: M:System.Xml.XmlReader.Close
  id: Close
  parent: System.Xml.XmlReader
  langs:
  - csharp
  name: Close()
  nameWithType: XmlReader.Close()
  fullName: XmlReader.Close()
  type: Method
  assemblies:
  - System.Xml
  - netstandard
  - System.Xml.ReaderWriter
  namespace: System.Xml
  summary: When overridden in a derived class, changes the <xref href="System.Xml.XmlReader.ReadState"></xref> to <xref href="System.Xml.ReadState.Closed"></xref>.
  remarks: This method also releases any resources held during reading. If <xref:System.Xml.XmlReader.Close%2A> has already been called, no action is performed.
  syntax:
    content: public virtual void Close ();
    parameters: []
  overload: System.Xml.XmlReader.Close*
  exceptions:
  - type: System.InvalidOperationException
    commentId: T:System.InvalidOperationException
    description: An <xref href="System.Xml.XmlReader"></xref> method was called before a previous asynchronous operation finished. In this case, <xref href="System.InvalidOperationException"></xref> is thrown with the message "An asynchronous operation is already in progress."
  version:
  - netcore-2.0
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  - netstandard-2.0
  - xamarinandroid-7.1
  - xamarinios-10.8
  - xamarinmac-3.0
  monikers:
  - netcore-2.0
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  - netstandard-2.0
  - xamarinandroid-7.1
  - xamarinios-10.8
  - xamarinmac-3.0
  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Xml/XmlReader.xml
  ms.technology:
  - dotnet-standard
  author: mairaw
  ms.author: mairaw
  manager: wpickett
- uid: System.Xml.XmlReader.Create(System.String,System.Xml.XmlReaderSettings,System.Xml.XmlParserContext)
  commentId: M:System.Xml.XmlReader.Create(System.String,System.Xml.XmlReaderSettings,System.Xml.XmlParserContext)
  id: Create(System.String,System.Xml.XmlReaderSettings,System.Xml.XmlParserContext)
  parent: System.Xml.XmlReader
  langs:
  - csharp
  name: Create(String, XmlReaderSettings, XmlParserContext)
  nameWithType: XmlReader.Create(String, XmlReaderSettings, XmlParserContext)
  fullName: XmlReader.Create(String, XmlReaderSettings, XmlParserContext)
  type: Method
  assemblies:
  - System.Xml
  - netstandard
  - System.Xml.ReaderWriter
  namespace: System.Xml
  summary: Creates a new <xref href="System.Xml.XmlReader"></xref> instance by using the specified URI, settings, and context information for parsing.
  remarks: "By default an <xref:System.Xml.XmlUrlResolver> with no credentials is used to access any external resources such as a document type definition (DTD), entities, schemas, and so on.  \n  \n> [!IMPORTANT]\n>  Starting with the .NET Framework 4.5.2, no default <xref:System.Xml.XmlUrlResolver> is provided. If your solution targets the .NET Framework 4.5.2 or later versions, specify an <xref:System.Xml.XmlResolver> using the <xref:System.Xml.XmlReaderSettings.XmlResolver%2A?displayProperty=fullName> property.  \n  \n This means that the <xref:System.Xml.XmlReader> can access any locations that does not require authentication. If the external resource is located on a network resource that requires authentication, use the <xref:System.Xml.XmlReaderSettings.XmlResolver%2A?displayProperty=fullName> property to specify an <xref:System.Xml.XmlResolver> with the necessary credentials.  \n  \n> [!IMPORTANT]\n>  You can restrict the resources that the <xref:System.Xml.XmlReader> can access by setting the <xref:System.Xml.XmlReaderSettings.XmlResolver%2A> property to an <xref:System.Xml.XmlSecureResolver> object.  \n  \n The created <xref:System.Xml.XmlReader> object expands entity references and performs XML normalization of new line characters."
  syntax:
    content: public static System.Xml.XmlReader Create (string inputUri, System.Xml.XmlReaderSettings settings, System.Xml.XmlParserContext inputContext);
    parameters:
    - id: inputUri
      type: System.String
      description: The URI for the file containing the XML data. The <xref href="System.Xml.XmlResolver"></xref> object on the <xref href="System.Xml.XmlReaderSettings"></xref> object is used to convert the path to a canonical data representation. If <xref href="System.Xml.XmlReaderSettings.XmlResolver"></xref> is `null`, a new <xref href="System.Xml.XmlUrlResolver"></xref> object is used.
    - id: settings
      type: System.Xml.XmlReaderSettings
      description: The settings for the new <xref href="System.Xml.XmlReader"></xref> instance. This value can be `null`.
    - id: inputContext
      type: System.Xml.XmlParserContext
      description: "The context information required to parse the XML fragment. The context information can include the <xref href=\"System.Xml.XmlNameTable\"></xref> to use, encoding, namespace scope, the current <code>xml:lang</code> and <code>xml:space</code> scope, base URI, and document type definition.  \n  \n This value can be `null`."
    return:
      type: System.Xml.XmlReader
      description: An object that is used to read the XML data in the stream.
  overload: System.Xml.XmlReader.Create*
  exceptions:
  - type: System.ArgumentNullException
    commentId: T:System.ArgumentNullException
    description: The `inputUri` value is `null`.
  - type: System.Security.SecurityException
    commentId: T:System.Security.SecurityException
    description: The <xref href="System.Xml.XmlReader"></xref> does not have sufficient permissions to access the location of the XML data.
  - type: System.ArgumentException
    commentId: T:System.ArgumentException
    description: The <xref href="System.Xml.XmlReaderSettings.NameTable"></xref> and <xref href="System.Xml.XmlParserContext.NameTable"></xref> properties both contain values. (Only one of these `NameTable` properties can be set and used).
  - type: System.IO.FileNotFoundException
    commentId: T:System.IO.FileNotFoundException
    description: The file specified by the URI cannot be found.
  - type: System.UriFormatException
    commentId: T:System.UriFormatException
    description: The URI format is not correct.
  version:
  - netcore-2.0
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  - netstandard-2.0
  - xamarinandroid-7.1
  - xamarinios-10.8
  - xamarinmac-3.0
  monikers:
  - netcore-2.0
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  - netstandard-2.0
  - xamarinandroid-7.1
  - xamarinios-10.8
  - xamarinmac-3.0
  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Xml/XmlReader.xml
  ms.technology:
  - dotnet-standard
  author: mairaw
  ms.author: mairaw
  manager: wpickett
- uid: System.Xml.XmlReader.Create(System.IO.TextReader,System.Xml.XmlReaderSettings,System.Xml.XmlParserContext)
  commentId: M:System.Xml.XmlReader.Create(System.IO.TextReader,System.Xml.XmlReaderSettings,System.Xml.XmlParserContext)
  id: Create(System.IO.TextReader,System.Xml.XmlReaderSettings,System.Xml.XmlParserContext)
  parent: System.Xml.XmlReader
  langs:
  - csharp
  name: Create(TextReader, XmlReaderSettings, XmlParserContext)
  nameWithType: XmlReader.Create(TextReader, XmlReaderSettings, XmlParserContext)
  fullName: XmlReader.Create(TextReader, XmlReaderSettings, XmlParserContext)
  type: Method
  assemblies:
  - System.Xml.ReaderWriter
  - System.Xml
  - netstandard
  namespace: System.Xml
  summary: Creates a new <xref href="System.Xml.XmlReader"></xref> instance by using the specified text reader, settings, and context information for parsing.
  remarks: "By default an <xref:System.Xml.XmlUrlResolver> with no credentials is used to access any external resources such as a document type definition (DTD), entities, schemas, and so on.  \n  \n> [!IMPORTANT]\n>  Starting with the .NET Framework 4.5.2, no default <xref:System.Xml.XmlUrlResolver> is provided. If your solution targets the .NET Framework 4.5.2 or later versions, specify an <xref:System.Xml.XmlResolver> using the <xref:System.Xml.XmlReaderSettings.XmlResolver%2A?displayProperty=fullName> property.  \n  \n If the external resource is located on a network resource that requires authentication, use the <xref:System.Xml.XmlReaderSettings.XmlResolver%2A?displayProperty=fullName> property to specify an <xref:System.Xml.XmlResolver> with the necessary credentials.  \n  \n> [!IMPORTANT]\n>  You can use one of the following methods to control which resources the <xref:System.Xml.XmlReader> can access:  \n>   \n>  -   Restrict the resources that the <xref:System.Xml.XmlReader> can access by setting the <xref:System.Xml.XmlReaderSettings.XmlResolver%2A> property to an <xref:System.Xml.XmlSecureResolver> object.  \n>   \n>  -or-  \n>   \n>  -   Do not allow the <xref:System.Xml.XmlReader> to open any external resources by setting the <xref:System.Xml.XmlReaderSettings.XmlResolver%2A> property to `null`.  \n  \n The created <xref:System.Xml.XmlReader> object expands entity references and performs XML normalization of new line characters."
  example:
  - "The following example creates an <xref:System.Xml.XmlReader> object that reads an XML fragment.  \n  \n [!code-csharp[XmlReader.Create#1](~/samples/snippets/csharp/VS_Snippets_Data/XmlReader.Create/CS/XmlReader_Create.cs#1)]\n [!code-vb[XmlReader.Create#1](~/samples/snippets/visualbasic/VS_Snippets_Data/XmlReader.Create/VB/XmlReader_Create.vb#1)]"
  syntax:
    content: public static System.Xml.XmlReader Create (System.IO.TextReader input, System.Xml.XmlReaderSettings settings, System.Xml.XmlParserContext inputContext);
    parameters:
    - id: input
      type: System.IO.TextReader
      description: The text reader from which to read the XML data. A text reader returns a stream of Unicode characters, so the encoding specified in the XML declaration isn't used by the XML reader to decode the data stream.
    - id: settings
      type: System.Xml.XmlReaderSettings
      description: The settings for the new <xref href="System.Xml.XmlReader"></xref> instance. This value can be `null`.
    - id: inputContext
      type: System.Xml.XmlParserContext
      description: "The context information required to parse the XML fragment. The context information can include the <xref href=\"System.Xml.XmlNameTable\"></xref> to use, encoding, namespace scope, the current <code>xml:lang</code> and <code>xml:space</code> scope, base URI, and document type definition.  \n  \n This value can be `null`."
    return:
      type: System.Xml.XmlReader
      description: An object that is used to read the XML data in the stream.
  overload: System.Xml.XmlReader.Create*
  exceptions:
  - type: System.ArgumentNullException
    commentId: T:System.ArgumentNullException
    description: The <code>input</code> value is `null`.
  - type: System.ArgumentException
    commentId: T:System.ArgumentException
    description: The <xref href="System.Xml.XmlReaderSettings.NameTable"></xref> and <xref href="System.Xml.XmlParserContext.NameTable"></xref> properties both contain values. (Only one of these `NameTable` properties can be set and used).
  version:
  - netcore-1.0
  - netcore-1.1
  - netcore-2.0
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  - netstandard-1.0
  - netstandard-1.1
  - netstandard-1.2
  - netstandard-1.3
  - netstandard-1.4
  - netstandard-1.6
  - netstandard-2.0
  - xamarinandroid-7.1
  - xamarinios-10.8
  - xamarinmac-3.0
  monikers:
  - netcore-1.0
  - netcore-1.1
  - netcore-2.0
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  - netstandard-1.0
  - netstandard-1.1
  - netstandard-1.2
  - netstandard-1.3
  - netstandard-1.4
  - netstandard-1.6
  - netstandard-2.0
  - xamarinandroid-7.1
  - xamarinios-10.8
  - xamarinmac-3.0
  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Xml/XmlReader.xml
  ms.technology:
  - dotnet-standard
  author: mairaw
  ms.author: mairaw
  manager: wpickett
- uid: System.Xml.XmlReader.Create(System.IO.TextReader,System.Xml.XmlReaderSettings,System.String)
  commentId: M:System.Xml.XmlReader.Create(System.IO.TextReader,System.Xml.XmlReaderSettings,System.String)
  id: Create(System.IO.TextReader,System.Xml.XmlReaderSettings,System.String)
  parent: System.Xml.XmlReader
  langs:
  - csharp
  name: Create(TextReader, XmlReaderSettings, String)
  nameWithType: XmlReader.Create(TextReader, XmlReaderSettings, String)
  fullName: XmlReader.Create(TextReader, XmlReaderSettings, String)
  type: Method
  assemblies:
  - System.Xml
  - netstandard
  - System.Xml.ReaderWriter
  namespace: System.Xml
  summary: Creates a new <xref href="System.Xml.XmlReader"></xref> instance by using the specified text reader, settings, and base URI.
  remarks: "By default an <xref:System.Xml.XmlUrlResolver> with no credentials is used to access any external resources such as a document type definition (DTD), entities, schemas, and so on.  \n  \n> [!IMPORTANT]\n>  Starting with the .NET Framework 4.5.2, no default <xref:System.Xml.XmlUrlResolver> is provided. If your solution targets the .NET Framework 4.5.2 or later versions, specify an <xref:System.Xml.XmlResolver> using the <xref:System.Xml.XmlReaderSettings.XmlResolver%2A?displayProperty=fullName> property.  \n  \n If the external resource is located on a network resource that requires authentication, use the <xref:System.Xml.XmlReaderSettings.XmlResolver%2A?displayProperty=fullName> property to specify an <xref:System.Xml.XmlResolver> with the necessary credentials.  \n  \n> [!IMPORTANT]\n>  You can use one of the following methods to control which resources the <xref:System.Xml.XmlReader> can access:  \n>   \n>  -   Restrict the resources that the <xref:System.Xml.XmlReader> can access by setting the <xref:System.Xml.XmlReaderSettings.XmlResolver%2A> property to an <xref:System.Xml.XmlSecureResolver> object.  \n>   \n>  -or-  \n>   \n>  -   Do not allow the <xref:System.Xml.XmlReader> to open any external resources by setting the <xref:System.Xml.XmlReaderSettings.XmlResolver%2A> property to `null`.  \n  \n The created <xref:System.Xml.XmlReader> object expands entity references and performs XML normalization of new line characters."
  syntax:
    content: public static System.Xml.XmlReader Create (System.IO.TextReader input, System.Xml.XmlReaderSettings settings, string baseUri);
    parameters:
    - id: input
      type: System.IO.TextReader
      description: The text reader from which to read the XML data. A text reader returns a stream of Unicode characters, so the encoding specified in the XML declaration isn't used by the <xref href="System.Xml.XmlReader"></xref> to decode the data stream.
    - id: settings
      type: System.Xml.XmlReaderSettings
      description: The settings for the new <xref href="System.Xml.XmlReader"></xref> instance. This value can be `null`.
    - id: baseUri
      type: System.String
      description: "The base URI for the entity or document being read. This value can be `null`.  \n  \n **Security Note** The base URI is used to resolve the relative URI of the XML document. Do not use a base URI from an untrusted source."
    return:
      type: System.Xml.XmlReader
      description: An object that is used to read the XML data in the stream.
  overload: System.Xml.XmlReader.Create*
  exceptions:
  - type: System.ArgumentNullException
    commentId: T:System.ArgumentNullException
    description: The <code>input</code> value is `null`.
  version:
  - netcore-2.0
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  - netstandard-2.0
  - xamarinandroid-7.1
  - xamarinios-10.8
  - xamarinmac-3.0
  monikers:
  - netcore-2.0
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  - netstandard-2.0
  - xamarinandroid-7.1
  - xamarinios-10.8
  - xamarinmac-3.0
  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Xml/XmlReader.xml
  ms.technology:
  - dotnet-standard
  author: mairaw
  ms.author: mairaw
  manager: wpickett
- uid: System.Xml.XmlReader.Create(System.IO.Stream,System.Xml.XmlReaderSettings,System.String)
  commentId: M:System.Xml.XmlReader.Create(System.IO.Stream,System.Xml.XmlReaderSettings,System.String)
  id: Create(System.IO.Stream,System.Xml.XmlReaderSettings,System.String)
  parent: System.Xml.XmlReader
  langs:
  - csharp
  name: Create(Stream, XmlReaderSettings, String)
  nameWithType: XmlReader.Create(Stream, XmlReaderSettings, String)
  fullName: XmlReader.Create(Stream, XmlReaderSettings, String)
  type: Method
  assemblies:
  - System.Xml
  - netstandard
  - System.Xml.ReaderWriter
  namespace: System.Xml
  summary: Creates a new <xref href="System.Xml.XmlReader"></xref> instance using the specified stream, base URI, and settings.
  remarks: "By default an <xref:System.Xml.XmlUrlResolver> with no credentials is used to access any external resources such as a document type definition (DTD), entities, schemas, and so on.  \n  \n> [!IMPORTANT]\n>  Starting with the .NET Framework 4.5.2, no default <xref:System.Xml.XmlUrlResolver> is provided. If your solution targets the .NET Framework 4.5.2 or later versions, specify an <xref:System.Xml.XmlResolver> using the <xref:System.Xml.XmlReaderSettings.XmlResolver%2A?displayProperty=fullName> property.  \n  \n If the external resource is located on a network resource that requires authentication, use the <xref:System.Xml.XmlReaderSettings.XmlResolver%2A?displayProperty=fullName> property to specify an <xref:System.Xml.XmlResolver> with the necessary credentials.  \n  \n> [!IMPORTANT]\n>  You can use one of the following methods to control which resources the <xref:System.Xml.XmlReader> can access:  \n>   \n>  -   Restrict the resources that the <xref:System.Xml.XmlReader> can access by setting the <xref:System.Xml.XmlReaderSettings.XmlResolver%2A> property to an <xref:System.Xml.XmlSecureResolver> object.  \n>   \n>  -or-  \n>   \n>  -   Do not allow the <xref:System.Xml.XmlReader> to open any external resources by setting the <xref:System.Xml.XmlReaderSettings.XmlResolver%2A> property to `null`.  \n  \n The created <xref:System.Xml.XmlReader> object expands entity references and performs XML normalization of new line characters."
  syntax:
    content: public static System.Xml.XmlReader Create (System.IO.Stream input, System.Xml.XmlReaderSettings settings, string baseUri);
    parameters:
    - id: input
      type: System.IO.Stream
      description: "The stream that contains the XML data.  \n  \n The <xref href=\"System.Xml.XmlReader\"></xref> scans the first bytes of the stream looking for a byte order mark or other sign of encoding. When encoding is determined, the encoding is used to continue reading the stream, and processing continues parsing the input as a stream of (Unicode) characters."
    - id: settings
      type: System.Xml.XmlReaderSettings
      description: The settings for the new <xref href="System.Xml.XmlReader"></xref> instance. This value can be `null`.
    - id: baseUri
      type: System.String
      description: "The base URI for the entity or document being read. This value can be `null`.  \n  \n **Security Note** The base URI is used to resolve the relative URI of the XML document. Do not use a base URI from an untrusted source."
    return:
      type: System.Xml.XmlReader
      description: An object that is used to read the XML data in the stream.
  overload: System.Xml.XmlReader.Create*
  exceptions:
  - type: System.ArgumentNullException
    commentId: T:System.ArgumentNullException
    description: The <code>input</code> value is `null`.
  version:
  - netcore-2.0
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  - netstandard-2.0
  - xamarinandroid-7.1
  - xamarinios-10.8
  - xamarinmac-3.0
  monikers:
  - netcore-2.0
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  - netstandard-2.0
  - xamarinandroid-7.1
  - xamarinios-10.8
  - xamarinmac-3.0
  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Xml/XmlReader.xml
  ms.technology:
  - dotnet-standard
  author: mairaw
  ms.author: mairaw
  manager: wpickett
- uid: System.Xml.XmlReader.Create(System.Xml.XmlReader,System.Xml.XmlReaderSettings)
  commentId: M:System.Xml.XmlReader.Create(System.Xml.XmlReader,System.Xml.XmlReaderSettings)
  id: Create(System.Xml.XmlReader,System.Xml.XmlReaderSettings)
  parent: System.Xml.XmlReader
  langs:
  - csharp
  name: Create(XmlReader, XmlReaderSettings)
  nameWithType: XmlReader.Create(XmlReader, XmlReaderSettings)
  fullName: XmlReader.Create(XmlReader, XmlReaderSettings)
  type: Method
  assemblies:
  - System.Xml.ReaderWriter
  - System.Xml
  - netstandard
  namespace: System.Xml
  summary: Creates a new <xref href="System.Xml.XmlReader"></xref> instance by using the specified XML reader and settings.
  remarks: "This method allows you add additional features to an underlying <xref:System.Xml.XmlReader> object. The underlying <xref:System.Xml.XmlReader> object can be another <xref:System.Xml.XmlReader> object created by the <xref:System.Xml.XmlReader.Create%2A> method, or an <xref:System.Xml.XmlReader> object created using one of the concrete <xref:System.Xml.XmlReader> implementations.  \n  \n A default <xref:System.Xml.XmlUrlResolver> with no credentials is used to access any external resources such as a schema.  \n  \n> [!IMPORTANT]\n>  Starting with the .NET Framework 4.5.2, no default <xref:System.Xml.XmlUrlResolver> is provided. If your solution targets the .NET Framework 4.5.2 or later versions, specify an <xref:System.Xml.XmlResolver> using the <xref:System.Xml.XmlReaderSettings.XmlResolver%2A?displayProperty=fullName> property.  \n  \n If the external resource is located on a network resource that requires authentication, specify an <xref:System.Xml.XmlResolver> with the necessary credentials using the <xref:System.Xml.XmlReaderSettings.XmlResolver%2A?displayProperty=fullName> property.  \n  \n> [!IMPORTANT]\n>  You can use one of the following methods to control which resources the <xref:System.Xml.XmlReader> can access:  \n>   \n>  -   Restrict the resources that the <xref:System.Xml.XmlReader> can access by setting the <xref:System.Xml.XmlReaderSettings.XmlResolver%2A> property to an <xref:System.Xml.XmlSecureResolver> object.  \n>   \n>  -or-  \n>   \n>  -   Do not allow the <xref:System.Xml.XmlReader> to open any external resources by setting the <xref:System.Xml.XmlReaderSettings.XmlResolver%2A> property to `null`.  \n  \n The created <xref:System.Xml.XmlReader> object expands entity references and performs XML normalization of new line characters."
  example:
  - "The following example creates a validating <xref:System.Xml.XmlReader> object that is wrapped around an <xref:System.Xml.XmlNodeReader> object.  \n  \n [!code-csharp[XmlReader.Create#5](~/samples/snippets/csharp/VS_Snippets_Data/XmlReader.Create/CS/XmlReader_Create.cs#5)]\n [!code-vb[XmlReader.Create#5](~/samples/snippets/visualbasic/VS_Snippets_Data/XmlReader.Create/VB/XmlReader_Create.vb#5)]"
  syntax:
    content: public static System.Xml.XmlReader Create (System.Xml.XmlReader reader, System.Xml.XmlReaderSettings settings);
    parameters:
    - id: reader
      type: System.Xml.XmlReader
      description: The object that you want to use as the underlying XML reader.
    - id: settings
      type: System.Xml.XmlReaderSettings
      description: "The settings for the new <xref href=\"System.Xml.XmlReader\"></xref> instance.  \n  \n The conformance level of the <xref href=\"System.Xml.XmlReaderSettings\"></xref> object must either match the conformance level of the underlying reader, or it must be set to <xref href=\"System.Xml.ConformanceLevel.Auto\"></xref>."
    return:
      type: System.Xml.XmlReader
      description: An object that is wrapped around the specified <xref href="System.Xml.XmlReader"></xref> object.
  overload: System.Xml.XmlReader.Create*
  exceptions:
  - type: System.ArgumentNullException
    commentId: T:System.ArgumentNullException
    description: The <code>reader</code> value is `null`.
  - type: System.InvalidOperationException
    commentId: T:System.InvalidOperationException
    description: "If the <xref href=\"System.Xml.XmlReaderSettings\"></xref> object specifies a conformance level that is not consistent with conformance level of the underlying reader.  \n  \n -or-  \n  \n The underlying <xref href=\"System.Xml.XmlReader\"></xref> is in an <xref href=\"System.Xml.ReadState.Error\"></xref> or <xref href=\"System.Xml.ReadState.Closed\"></xref> state."
  version:
  - netcore-1.0
  - netcore-1.1
  - netcore-2.0
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  - netstandard-1.0
  - netstandard-1.1
  - netstandard-1.2
  - netstandard-1.3
  - netstandard-1.4
  - netstandard-1.6
  - netstandard-2.0
  - xamarinandroid-7.1
  - xamarinios-10.8
  - xamarinmac-3.0
  monikers:
  - netcore-1.0
  - netcore-1.1
  - netcore-2.0
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  - netstandard-1.0
  - netstandard-1.1
  - netstandard-1.2
  - netstandard-1.3
  - netstandard-1.4
  - netstandard-1.6
  - netstandard-2.0
  - xamarinandroid-7.1
  - xamarinios-10.8
  - xamarinmac-3.0
  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Xml/XmlReader.xml
  ms.technology:
  - dotnet-standard
  author: mairaw
  ms.author: mairaw
  manager: wpickett
- uid: System.Xml.XmlReader.Create(System.IO.Stream,System.Xml.XmlReaderSettings,System.Xml.XmlParserContext)
  commentId: M:System.Xml.XmlReader.Create(System.IO.Stream,System.Xml.XmlReaderSettings,System.Xml.XmlParserContext)
  id: Create(System.IO.Stream,System.Xml.XmlReaderSettings,System.Xml.XmlParserContext)
  parent: System.Xml.XmlReader
  langs:
  - csharp
  name: Create(Stream, XmlReaderSettings, XmlParserContext)
  nameWithType: XmlReader.Create(Stream, XmlReaderSettings, XmlParserContext)
  fullName: XmlReader.Create(Stream, XmlReaderSettings, XmlParserContext)
  type: Method
  assemblies:
  - System.Xml.ReaderWriter
  - System.Xml
  - netstandard
  namespace: System.Xml
  summary: Creates a new <xref href="System.Xml.XmlReader"></xref> instance using the specified stream, settings, and context information for parsing.
  remarks: "By default an <xref:System.Xml.XmlUrlResolver> with no credentials is used to access any external resources such as a document type definition (DTD), entities, schemas, and so on.  \n  \n> [!IMPORTANT]\n>  Starting with the .NET Framework 4.5.2, no default <xref:System.Xml.XmlUrlResolver> is provided. If your solution targets the .NET Framework 4.5.2 or later versions, specify an <xref:System.Xml.XmlResolver> using the <xref:System.Xml.XmlReaderSettings.XmlResolver%2A?displayProperty=fullName> property.  \n  \n If the external resource is located on a network resource that requires authentication, use the <xref:System.Xml.XmlReaderSettings.XmlResolver%2A?displayProperty=fullName> property to specify an <xref:System.Xml.XmlResolver> with the necessary credentials.  \n  \n> [!IMPORTANT]\n>  You can use one of the following methods to control which resources the <xref:System.Xml.XmlReader> can access:  \n>   \n>  -   Restrict the resources that the <xref:System.Xml.XmlReader> can access by setting the <xref:System.Xml.XmlReaderSettings.XmlResolver%2A> property to an <xref:System.Xml.XmlSecureResolver> object.  \n>   \n>  -or-  \n>   \n>  -   Do not allow the <xref:System.Xml.XmlReader> to open any external resources by setting the <xref:System.Xml.XmlReaderSettings.XmlResolver%2A> property to `null`.  \n  \n The created <xref:System.Xml.XmlReader> object expands entity references and performs XML normalization of new line characters."
  syntax:
    content: public static System.Xml.XmlReader Create (System.IO.Stream input, System.Xml.XmlReaderSettings settings, System.Xml.XmlParserContext inputContext);
    parameters:
    - id: input
      type: System.IO.Stream
      description: "The stream that contains the XML data.  \n  \n The <xref href=\"System.Xml.XmlReader\"></xref> scans the first bytes of the stream looking for a byte order mark or other sign of encoding. When encoding is determined, the encoding is used to continue reading the stream, and processing continues parsing the input as a stream of (Unicode) characters."
    - id: settings
      type: System.Xml.XmlReaderSettings
      description: The settings for the new <xref href="System.Xml.XmlReader"></xref> instance. This value can be `null`.
    - id: inputContext
      type: System.Xml.XmlParserContext
      description: "The context information required to parse the XML fragment. The context information can include the <xref href=\"System.Xml.XmlNameTable\"></xref> to use, encoding, namespace scope, the current <code>xml:lang</code> and <code>xml:space</code> scope, base URI, and document type definition.  \n  \n This value can be `null`."
    return:
      type: System.Xml.XmlReader
      description: An object that is used to read the XML data in the stream.
  overload: System.Xml.XmlReader.Create*
  exceptions:
  - type: System.ArgumentNullException
    commentId: T:System.ArgumentNullException
    description: The <code>input</code> value is `null`.
  version:
  - netcore-1.0
  - netcore-1.1
  - netcore-2.0
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  - netstandard-1.0
  - netstandard-1.1
  - netstandard-1.2
  - netstandard-1.3
  - netstandard-1.4
  - netstandard-1.6
  - netstandard-2.0
  - xamarinandroid-7.1
  - xamarinios-10.8
  - xamarinmac-3.0
  monikers:
  - netcore-1.0
  - netcore-1.1
  - netcore-2.0
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  - netstandard-1.0
  - netstandard-1.1
  - netstandard-1.2
  - netstandard-1.3
  - netstandard-1.4
  - netstandard-1.6
  - netstandard-2.0
  - xamarinandroid-7.1
  - xamarinios-10.8
  - xamarinmac-3.0
  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Xml/XmlReader.xml
  ms.technology:
  - dotnet-standard
  author: mairaw
  ms.author: mairaw
  manager: wpickett
- uid: System.Xml.XmlReader.Create(System.IO.TextReader,System.Xml.XmlReaderSettings)
  commentId: M:System.Xml.XmlReader.Create(System.IO.TextReader,System.Xml.XmlReaderSettings)
  id: Create(System.IO.TextReader,System.Xml.XmlReaderSettings)
  parent: System.Xml.XmlReader
  langs:
  - csharp
  name: Create(TextReader, XmlReaderSettings)
  nameWithType: XmlReader.Create(TextReader, XmlReaderSettings)
  fullName: XmlReader.Create(TextReader, XmlReaderSettings)
  type: Method
  assemblies:
  - System.Xml.ReaderWriter
  - System.Xml
  - netstandard
  namespace: System.Xml
  summary: Creates a new <xref href="System.Xml.XmlReader"></xref> instance by using the specified text reader and settings.
  remarks: "By default an <xref:System.Xml.XmlUrlResolver> with no credentials is used to access any external resources such as a document type definition (DTD), entities, schemas, and so on.  \n  \n> [!IMPORTANT]\n>  Starting with the .NET Framework 4.5.2, no default <xref:System.Xml.XmlUrlResolver> is provided. If your solution targets the .NET Framework 4.5.2 or later versions, specify an <xref:System.Xml.XmlResolver> using the <xref:System.Xml.XmlReaderSettings.XmlResolver%2A?displayProperty=fullName> property.  \n  \n If the external resource is located on a network resource that requires authentication, use the <xref:System.Xml.XmlReaderSettings.XmlResolver%2A?displayProperty=fullName> property to specify an <xref:System.Xml.XmlResolver> with the necessary credentials.  \n  \n> [!IMPORTANT]\n>  You can use one of the following methods to control which resources the <xref:System.Xml.XmlReader> can access:  \n>   \n>  -   Restrict the resources that the <xref:System.Xml.XmlReader> can access by setting the <xref:System.Xml.XmlReaderSettings.XmlResolver%2A> property to an <xref:System.Xml.XmlSecureResolver> object.  \n>   \n>  -or-  \n>   \n>  -   Do not allow the <xref:System.Xml.XmlReader> to open any external resources by setting the <xref:System.Xml.XmlReaderSettings.XmlResolver%2A> property to `null`.  \n  \n The created <xref:System.Xml.XmlReader> object expands entity references and performs XML normalization of new line characters."
  syntax:
    content: public static System.Xml.XmlReader Create (System.IO.TextReader input, System.Xml.XmlReaderSettings settings);
    parameters:
    - id: input
      type: System.IO.TextReader
      description: The text reader from which to read the XML data. A text reader returns a stream of Unicode characters, so the encoding specified in the XML declaration isn't used by the XML reader to decode the data stream.
    - id: settings
      type: System.Xml.XmlReaderSettings
      description: The settings for the new <xref href="System.Xml.XmlReader"></xref>. This value can be `null`.
    return:
      type: System.Xml.XmlReader
      description: An object that is used to read the XML data in the stream.
  overload: System.Xml.XmlReader.Create*
  exceptions:
  - type: System.ArgumentNullException
    commentId: T:System.ArgumentNullException
    description: The <code>input</code> value is `null`.
  version:
  - netcore-1.0
  - netcore-1.1
  - netcore-2.0
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  - netstandard-1.0
  - netstandard-1.1
  - netstandard-1.2
  - netstandard-1.3
  - netstandard-1.4
  - netstandard-1.6
  - netstandard-2.0
  - xamarinandroid-7.1
  - xamarinios-10.8
  - xamarinmac-3.0
  monikers:
  - netcore-1.0
  - netcore-1.1
  - netcore-2.0
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  - netstandard-1.0
  - netstandard-1.1
  - netstandard-1.2
  - netstandard-1.3
  - netstandard-1.4
  - netstandard-1.6
  - netstandard-2.0
  - xamarinandroid-7.1
  - xamarinios-10.8
  - xamarinmac-3.0
  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Xml/XmlReader.xml
  ms.technology:
  - dotnet-standard
  author: mairaw
  ms.author: mairaw
  manager: wpickett
- uid: System.Xml.XmlReader.Create(System.IO.Stream,System.Xml.XmlReaderSettings)
  commentId: M:System.Xml.XmlReader.Create(System.IO.Stream,System.Xml.XmlReaderSettings)
  id: Create(System.IO.Stream,System.Xml.XmlReaderSettings)
  parent: System.Xml.XmlReader
  langs:
  - csharp
  name: Create(Stream, XmlReaderSettings)
  nameWithType: XmlReader.Create(Stream, XmlReaderSettings)
  fullName: XmlReader.Create(Stream, XmlReaderSettings)
  type: Method
  assemblies:
  - System.Xml.ReaderWriter
  - System.Xml
  - netstandard
  namespace: System.Xml
  summary: Creates a new <xref href="System.Xml.XmlReader"></xref> instance with the specified stream and settings.
  remarks: "By default an <xref:System.Xml.XmlUrlResolver> with no credentials is used to access any external resources such as a document type definition (DTD), entities, schemas, and so on.  \n  \n> [!IMPORTANT]\n>  Starting with the .NET Framework 4.5.2, no default <xref:System.Xml.XmlUrlResolver> is provided. If your solution targets the .NET Framework 4.5.2 or later versions, specify an <xref:System.Xml.XmlResolver> using the <xref:System.Xml.XmlReaderSettings.XmlResolver%2A?displayProperty=fullName> property.  \n  \n If the external resource is located on a network resource that requires authentication, use the <xref:System.Xml.XmlReaderSettings.XmlResolver%2A?displayProperty=fullName> property to specify an <xref:System.Xml.XmlResolver> with the necessary credentials.  \n  \n> [!IMPORTANT]\n>  You can use one of the following methods to control which resources the <xref:System.Xml.XmlReader> can access:  \n>   \n>  -   Restrict the resources that the <xref:System.Xml.XmlReader> can access by setting the <xref:System.Xml.XmlReaderSettings.XmlResolver%2A> property to an <xref:System.Xml.XmlSecureResolver> object.  \n>   \n>  -or-  \n>   \n>  -   Do not allow the <xref:System.Xml.XmlReader> to open any external resources by setting the <xref:System.Xml.XmlReaderSettings.XmlResolver%2A> property to `null`.  \n  \n The created <xref:System.Xml.XmlReader> object expands entity references and performs XML normalization of new line characters."
  syntax:
    content: public static System.Xml.XmlReader Create (System.IO.Stream input, System.Xml.XmlReaderSettings settings);
    parameters:
    - id: input
      type: System.IO.Stream
      description: "The stream that contains the XML data.  \n  \n The <xref href=\"System.Xml.XmlReader\"></xref> scans the first bytes of the stream looking for a byte order mark or other sign of encoding. When encoding is determined, the encoding is used to continue reading the stream, and processing continues parsing the input as a stream of (Unicode) characters."
    - id: settings
      type: System.Xml.XmlReaderSettings
      description: The settings for the new <xref href="System.Xml.XmlReader"></xref> instance. This value can be `null`.
    return:
      type: System.Xml.XmlReader
      description: An object that is used to read the XML data in the stream.
  overload: System.Xml.XmlReader.Create*
  exceptions:
  - type: System.ArgumentNullException
    commentId: T:System.ArgumentNullException
    description: The <code>input</code> value is `null`.
  version:
  - netcore-1.0
  - netcore-1.1
  - netcore-2.0
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  - netstandard-1.0
  - netstandard-1.1
  - netstandard-1.2
  - netstandard-1.3
  - netstandard-1.4
  - netstandard-1.6
  - netstandard-2.0
  - xamarinandroid-7.1
  - xamarinios-10.8
  - xamarinmac-3.0
  monikers:
  - netcore-1.0
  - netcore-1.1
  - netcore-2.0
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  - netstandard-1.0
  - netstandard-1.1
  - netstandard-1.2
  - netstandard-1.3
  - netstandard-1.4
  - netstandard-1.6
  - netstandard-2.0
  - xamarinandroid-7.1
  - xamarinios-10.8
  - xamarinmac-3.0
  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Xml/XmlReader.xml
  ms.technology:
  - dotnet-standard
  author: mairaw
  ms.author: mairaw
  manager: wpickett
- uid: System.Xml.XmlReader.Create(System.String,System.Xml.XmlReaderSettings)
  commentId: M:System.Xml.XmlReader.Create(System.String,System.Xml.XmlReaderSettings)
  id: Create(System.String,System.Xml.XmlReaderSettings)
  parent: System.Xml.XmlReader
  langs:
  - csharp
  name: Create(String, XmlReaderSettings)
  nameWithType: XmlReader.Create(String, XmlReaderSettings)
  fullName: XmlReader.Create(String, XmlReaderSettings)
  type: Method
  assemblies:
  - System.Xml.ReaderWriter
  - System.Xml
  - netstandard
  namespace: System.Xml
  summary: Creates a new <xref href="System.Xml.XmlReader"></xref> instance by using the specified URI and settings.
  remarks: "By default an <xref:System.Xml.XmlUrlResolver> with no credentials is used to access any external resources such as a document type definition (DTD), entities, schemas, and so on.  \n  \n> [!IMPORTANT]\n>  Starting with the .NET Framework 4.5.2, no default <xref:System.Xml.XmlUrlResolver> is provided. If your solution targets the .NET Framework 4.5.2 or later versions, specify an <xref:System.Xml.XmlResolver> using the <xref:System.Xml.XmlReaderSettings.XmlResolver%2A?displayProperty=fullName> property.  \n  \n This means that the <xref:System.Xml.XmlReader> can access any locations that does not require authentication. If the external resource is located on a network resource that requires authentication, use the <xref:System.Xml.XmlReaderSettings.XmlResolver%2A?displayProperty=fullName> property to specify an <xref:System.Xml.XmlResolver> with the necessary credentials.  \n  \n> [!IMPORTANT]\n>  You can restrict the resources that the <xref:System.Xml.XmlReader> can access by setting the <xref:System.Xml.XmlReaderSettings.XmlResolver%2A> property to an <xref:System.Xml.XmlSecureResolver> object.  \n  \n The created <xref:System.Xml.XmlReader> object expands entity references and performs XML normalization of new line characters."
  example:
  - "The following example creates an <xref:System.Xml.XmlReader> object that supports document type definition (DTD) validation.  \n  \n [!code-csharp[XmlReader.Create#3](~/samples/snippets/csharp/VS_Snippets_Data/XmlReader.Create/CS/XmlReader_Create.cs#3)]\n [!code-vb[XmlReader.Create#3](~/samples/snippets/visualbasic/VS_Snippets_Data/XmlReader.Create/VB/XmlReader_Create.vb#3)]"
  syntax:
    content: public static System.Xml.XmlReader Create (string inputUri, System.Xml.XmlReaderSettings settings);
    parameters:
    - id: inputUri
      type: System.String
      description: The URI for the file containing the XML data. The <xref href="System.Xml.XmlResolver"></xref> object on the <xref href="System.Xml.XmlReaderSettings"></xref> object is used to convert the path to a canonical data representation. If <xref href="System.Xml.XmlReaderSettings.XmlResolver"></xref> is `null`, a new <xref href="System.Xml.XmlUrlResolver"></xref> object is used.
    - id: settings
      type: System.Xml.XmlReaderSettings
      description: The settings for the new <xref href="System.Xml.XmlReader"></xref> instance. This value can be `null`.
    return:
      type: System.Xml.XmlReader
      description: An object that is used to read the XML data in the stream.
  overload: System.Xml.XmlReader.Create*
  exceptions:
  - type: System.ArgumentNullException
    commentId: T:System.ArgumentNullException
    description: The <code>inputUri</code> value is `null`.
  - type: System.IO.FileNotFoundException
    commentId: T:System.IO.FileNotFoundException
    description: The file specified by the URI cannot be found.
  - type: System.UriFormatException
    commentId: T:System.UriFormatException
    description: "<block subset=\"none\" type=\"note\">\n      <p>  \n In the [.NET for Windows Store apps](http://go.microsoft.com/fwlink/?LinkID=247912) or the [Portable Class Library](~/docs/standard/cross-platform/cross-platform-development-with-the-portable-class-library.md), catch the base class exception, <xref href=\"System.FormatException\"></xref>, instead.  \n  \n</p>\n    </block>  \n  \n The URI format is not correct."
  version:
  - netcore-1.0
  - netcore-1.1
  - netcore-2.0
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  - netstandard-1.0
  - netstandard-1.1
  - netstandard-1.2
  - netstandard-1.3
  - netstandard-1.4
  - netstandard-1.6
  - netstandard-2.0
  - xamarinandroid-7.1
  - xamarinios-10.8
  - xamarinmac-3.0
  monikers:
  - netcore-1.0
  - netcore-1.1
  - netcore-2.0
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  - netstandard-1.0
  - netstandard-1.1
  - netstandard-1.2
  - netstandard-1.3
  - netstandard-1.4
  - netstandard-1.6
  - netstandard-2.0
  - xamarinandroid-7.1
  - xamarinios-10.8
  - xamarinmac-3.0
  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Xml/XmlReader.xml
  ms.technology:
  - dotnet-standard
  author: mairaw
  ms.author: mairaw
  manager: wpickett
- uid: System.Xml.XmlReader.Create(System.String)
  commentId: M:System.Xml.XmlReader.Create(System.String)
  id: Create(System.String)
  parent: System.Xml.XmlReader
  langs:
  - csharp
  name: Create(String)
  nameWithType: XmlReader.Create(String)
  fullName: XmlReader.Create(String)
  type: Method
  assemblies:
  - System.Xml.ReaderWriter
  - System.Xml
  - netstandard
  namespace: System.Xml
  summary: Creates a new <xref href="System.Xml.XmlReader"></xref> instance with specified URI.
  remarks: "An <xref:System.Xml.XmlReaderSettings> object with default settings is used to create the reader. If you wish to specify the features to support on the created reader, use the overload that takes an <xref:System.Xml.XmlReaderSettings> object as one of its arguments, and pass in an <xref:System.Xml.XmlReaderSettings> object with the correct settings.  \n  \n A default <xref:System.Xml.XmlUrlResolver> with no credentials is used to access any external resources such as a document type definition (DTD), entities, schemas, and so on.  \n  \n> [!IMPORTANT]\n>  Starting with the .NET Framework 4.5.2, no default <xref:System.Xml.XmlUrlResolver> is provided. If your solution targets the .NET Framework 4.5.2 or later versions, specify an <xref:System.Xml.XmlResolver> using the <xref:System.Xml.XmlReaderSettings.XmlResolver%2A?displayProperty=fullName> property.  \n  \n If the external resource is located on a network resource that requires authentication, specify an <xref:System.Xml.XmlResolver> with the necessary credentials using the <xref:System.Xml.XmlReaderSettings.XmlResolver%2A?displayProperty=fullName> property.  \n  \n The created <xref:System.Xml.XmlReader> object expands entity references and performs XML normalization of new line characters."
  example:
  - "The following example creates an <xref:System.Xml.XmlReader> object that reads XML data file specified by the URI.  \n  \n [!code-csharp[XmlReader.Create#6](~/samples/snippets/csharp/VS_Snippets_Data/XmlReader.Create/CS/XmlReader_Create.cs#6)]\n [!code-vb[XmlReader.Create#6](~/samples/snippets/visualbasic/VS_Snippets_Data/XmlReader.Create/VB/XmlReader_Create.vb#6)]"
  syntax:
    content: public static System.Xml.XmlReader Create (string inputUri);
    parameters:
    - id: inputUri
      type: System.String
      description: The URI for the file that contains the XML data. The <xref href="System.Xml.XmlUrlResolver"></xref> class is used to convert the path to a canonical data representation.
    return:
      type: System.Xml.XmlReader
      description: An object that is used to read the XML data in the stream.
  overload: System.Xml.XmlReader.Create*
  exceptions:
  - type: System.ArgumentNullException
    commentId: T:System.ArgumentNullException
    description: The <code>inputUri</code> value is `null`.
  - type: System.Security.SecurityException
    commentId: T:System.Security.SecurityException
    description: The <xref href="System.Xml.XmlReader"></xref> does not have sufficient permissions to access the location of the XML data.
  - type: System.IO.FileNotFoundException
    commentId: T:System.IO.FileNotFoundException
    description: The file identified by the URI does not exist.
  - type: System.UriFormatException
    commentId: T:System.UriFormatException
    description: "<block subset=\"none\" type=\"note\">\n      <p>  \n In the [.NET for Windows Store apps](http://go.microsoft.com/fwlink/?LinkID=247912) or the [Portable Class Library](~/docs/standard/cross-platform/cross-platform-development-with-the-portable-class-library.md), catch the base class exception, <xref href=\"System.FormatException\"></xref>, instead.  \n  \n</p>\n    </block>  \n  \n The URI format is not correct."
  version:
  - netcore-1.0
  - netcore-1.1
  - netcore-2.0
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  - netstandard-1.0
  - netstandard-1.1
  - netstandard-1.2
  - netstandard-1.3
  - netstandard-1.4
  - netstandard-1.6
  - netstandard-2.0
  - xamarinandroid-7.1
  - xamarinios-10.8
  - xamarinmac-3.0
  monikers:
  - netcore-1.0
  - netcore-1.1
  - netcore-2.0
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  - netstandard-1.0
  - netstandard-1.1
  - netstandard-1.2
  - netstandard-1.3
  - netstandard-1.4
  - netstandard-1.6
  - netstandard-2.0
  - xamarinandroid-7.1
  - xamarinios-10.8
  - xamarinmac-3.0
  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Xml/XmlReader.xml
  ms.technology:
  - dotnet-standard
  author: mairaw
  ms.author: mairaw
  manager: wpickett
- uid: System.Xml.XmlReader.Create(System.IO.TextReader)
  commentId: M:System.Xml.XmlReader.Create(System.IO.TextReader)
  id: Create(System.IO.TextReader)
  parent: System.Xml.XmlReader
  langs:
  - csharp
  name: Create(TextReader)
  nameWithType: XmlReader.Create(TextReader)
  fullName: XmlReader.Create(TextReader)
  type: Method
  assemblies:
  - System.Xml.ReaderWriter
  - System.Xml
  - netstandard
  namespace: System.Xml
  summary: Creates a new <xref href="System.Xml.XmlReader"></xref> instance by using the specified text reader.
  remarks: "An <xref:System.Xml.XmlReaderSettings> object with default settings is used to create the reader. If you wish to specify the features to support on the created reader, use the overload that takes an <xref:System.Xml.XmlReaderSettings> object as one of its arguments, and pass in an <xref:System.Xml.XmlReaderSettings> object with the correct settings.  \n  \n A default <xref:System.Xml.XmlUrlResolver> with no credentials is used to access any external resources such as a document type definition (DTD), entities, schemas, and so on.  \n  \n> [!IMPORTANT]\n>  Starting with the .NET Framework 4.5.2, no default <xref:System.Xml.XmlUrlResolver> is provided. If your solution targets the .NET Framework 4.5.2 or later versions, specify an <xref:System.Xml.XmlResolver> using the <xref:System.Xml.XmlReaderSettings.XmlResolver%2A?displayProperty=fullName> property.  \n  \n If the external resource is located on a network resource that requires authentication, specify an <xref:System.Xml.XmlResolver>with the necessary credentials using the <xref:System.Xml.XmlReaderSettings.XmlResolver%2A?displayProperty=fullName> property.  \n  \n The created <xref:System.Xml.XmlReader> object expands entity references and performs XML normalization of new line characters."
  example:
  - "The following example uses the <xref:System.IO.StringReader> class to read an XML string.  \n  \n [!code-csharp[XmlReader.Create#7](~/samples/snippets/csharp/VS_Snippets_Data/XmlReader.Create/CS/XmlReader_Create.cs#7)]\n [!code-vb[XmlReader.Create#7](~/samples/snippets/visualbasic/VS_Snippets_Data/XmlReader.Create/VB/XmlReader_Create.vb#7)]"
  syntax:
    content: public static System.Xml.XmlReader Create (System.IO.TextReader input);
    parameters:
    - id: input
      type: System.IO.TextReader
      description: The text reader from which to read the XML data. A text reader returns a stream of Unicode characters, so the encoding specified in the XML declaration is not used by the XML reader to decode the data stream.
    return:
      type: System.Xml.XmlReader
      description: An object that is used to read the XML data in the stream.
  overload: System.Xml.XmlReader.Create*
  exceptions:
  - type: System.ArgumentNullException
    commentId: T:System.ArgumentNullException
    description: The <code>input</code> value is `null`.
  version:
  - netcore-1.0
  - netcore-1.1
  - netcore-2.0
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  - netstandard-1.0
  - netstandard-1.1
  - netstandard-1.2
  - netstandard-1.3
  - netstandard-1.4
  - netstandard-1.6
  - netstandard-2.0
  - xamarinandroid-7.1
  - xamarinios-10.8
  - xamarinmac-3.0
  monikers:
  - netcore-1.0
  - netcore-1.1
  - netcore-2.0
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  - netstandard-1.0
  - netstandard-1.1
  - netstandard-1.2
  - netstandard-1.3
  - netstandard-1.4
  - netstandard-1.6
  - netstandard-2.0
  - xamarinandroid-7.1
  - xamarinios-10.8
  - xamarinmac-3.0
  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Xml/XmlReader.xml
  ms.technology:
  - dotnet-standard
  author: mairaw
  ms.author: mairaw
  manager: wpickett
- uid: System.Xml.XmlReader.Create(System.IO.Stream)
  commentId: M:System.Xml.XmlReader.Create(System.IO.Stream)
  id: Create(System.IO.Stream)
  parent: System.Xml.XmlReader
  langs:
  - csharp
  name: Create(Stream)
  nameWithType: XmlReader.Create(Stream)
  fullName: XmlReader.Create(Stream)
  type: Method
  assemblies:
  - System.Xml.ReaderWriter
  - System.Xml
  - netstandard
  namespace: System.Xml
  summary: Creates a new <xref href="System.Xml.XmlReader"></xref> instance using the specified stream with default settings.
  remarks: "An <xref:System.Xml.XmlReaderSettings> object with default settings is used to create the reader. If you wish to specify the features to support on the created reader, use the overload that takes an <xref:System.Xml.XmlReaderSettings> object as one of its arguments, and pass in an <xref:System.Xml.XmlReaderSettings> object with the correct settings.  \n  \n A default <xref:System.Xml.XmlUrlResolver> with no credentials is used to access any external resources such as a document type definition (DTD), entities, schemas, and so on.  \n  \n> [!IMPORTANT]\n>  Starting with the .NET Framework 4.5.2, no default <xref:System.Xml.XmlUrlResolver> is provided. If your solution targets the .NET Framework 4.5.2 or later versions, specify an <xref:System.Xml.XmlResolver> using the <xref:System.Xml.XmlReaderSettings.XmlResolver%2A?displayProperty=fullName> property.  \n  \n If the external resource is located on a network resource that requires authentication, specify an <xref:System.Xml.XmlResolver> with the necessary credentials using the <xref:System.Xml.XmlReaderSettings.XmlResolver%2A?displayProperty=fullName> property.  \n  \n The created <xref:System.Xml.XmlReader> object expands entity references and performs XML normalization of new line characters."
  example:
  - "The following example creates an <xref:System.Xml.XmlReader> object that reads from a <xref:System.IO.FileStream>.  \n  \n [!code-csharp[XmlReader.Create#8](~/samples/snippets/csharp/VS_Snippets_Data/XmlReader.Create/CS/XmlReader_Create.cs#8)]\n [!code-vb[XmlReader.Create#8](~/samples/snippets/visualbasic/VS_Snippets_Data/XmlReader.Create/VB/XmlReader_Create.vb#8)]"
  syntax:
    content: public static System.Xml.XmlReader Create (System.IO.Stream input);
    parameters:
    - id: input
      type: System.IO.Stream
      description: "The stream that contains the XML data.  \n  \n The <xref href=\"System.Xml.XmlReader\"></xref> scans the first bytes of the stream looking for a byte order mark or other sign of encoding. When encoding is determined, the encoding is used to continue reading the stream, and processing continues parsing the input as a stream of (Unicode) characters."
    return:
      type: System.Xml.XmlReader
      description: An object that is used to read the XML data in the stream.
  overload: System.Xml.XmlReader.Create*
  exceptions:
  - type: System.ArgumentNullException
    commentId: T:System.ArgumentNullException
    description: The <code>input</code> value is `null`.
  - type: System.Security.SecurityException
    commentId: T:System.Security.SecurityException
    description: The <xref href="System.Xml.XmlReader"></xref> does not have sufficient permissions to access the location of the XML data.
  version:
  - netcore-1.0
  - netcore-1.1
  - netcore-2.0
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  - netstandard-1.0
  - netstandard-1.1
  - netstandard-1.2
  - netstandard-1.3
  - netstandard-1.4
  - netstandard-1.6
  - netstandard-2.0
  - xamarinandroid-7.1
  - xamarinios-10.8
  - xamarinmac-3.0
  monikers:
  - netcore-1.0
  - netcore-1.1
  - netcore-2.0
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  - netstandard-1.0
  - netstandard-1.1
  - netstandard-1.2
  - netstandard-1.3
  - netstandard-1.4
  - netstandard-1.6
  - netstandard-2.0
  - xamarinandroid-7.1
  - xamarinios-10.8
  - xamarinmac-3.0
  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Xml/XmlReader.xml
  ms.technology:
  - dotnet-standard
  author: mairaw
  ms.author: mairaw
  manager: wpickett
- uid: System.Xml.XmlReader.Depth
  commentId: P:System.Xml.XmlReader.Depth
  id: Depth
  parent: System.Xml.XmlReader
  langs:
  - csharp
  name: Depth
  nameWithType: XmlReader.Depth
  fullName: XmlReader.Depth
  type: Property
  assemblies:
  - System.Xml.ReaderWriter
  - System.Xml
  - netstandard
  namespace: System.Xml
  summary: When overridden in a derived class, gets the depth of the current node in the XML document.
  remarks: ''
  example:
  - See <xref:System.Xml.XmlTextReader.Depth%2A> (in the `XmlTextReader` class) for an example using this property.
  syntax:
    content: public abstract int Depth { get; }
    return:
      type: System.Int32
      description: The depth of the current node in the XML document.
  overload: System.Xml.XmlReader.Depth*
  exceptions:
  - type: System.InvalidOperationException
    commentId: T:System.InvalidOperationException
    description: An <xref href="System.Xml.XmlReader"></xref> method was called before a previous asynchronous operation finished. In this case, <xref href="System.InvalidOperationException"></xref> is thrown with the message "An asynchronous operation is already in progress."
  version:
  - netcore-1.0
  - netcore-1.1
  - netcore-2.0
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  - netstandard-1.0
  - netstandard-1.1
  - netstandard-1.2
  - netstandard-1.3
  - netstandard-1.4
  - netstandard-1.6
  - netstandard-2.0
  - xamarinandroid-7.1
  - xamarinios-10.8
  - xamarinmac-3.0
  monikers:
  - netcore-1.0
  - netcore-1.1
  - netcore-2.0
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  - netstandard-1.0
  - netstandard-1.1
  - netstandard-1.2
  - netstandard-1.3
  - netstandard-1.4
  - netstandard-1.6
  - netstandard-2.0
  - xamarinandroid-7.1
  - xamarinios-10.8
  - xamarinmac-3.0
  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Xml/XmlReader.xml
  ms.technology:
  - dotnet-standard
  author: mairaw
  ms.author: mairaw
  manager: wpickett
- uid: System.Xml.XmlReader.Dispose
  commentId: M:System.Xml.XmlReader.Dispose
  id: Dispose
  parent: System.Xml.XmlReader
  langs:
  - csharp
  name: Dispose()
  nameWithType: XmlReader.Dispose()
  fullName: XmlReader.Dispose()
  type: Method
  assemblies:
  - System.Xml.ReaderWriter
  - System.Xml
  - netstandard
  namespace: System.Xml
  summary: Releases all resources used by the current instance of the <xref href="System.Xml.XmlReader"></xref> class.
  syntax:
    content: public void Dispose ();
    parameters: []
  overload: System.Xml.XmlReader.Dispose*
  exceptions:
  - type: System.InvalidOperationException
    commentId: T:System.InvalidOperationException
    description: An <xref href="System.Xml.XmlReader"></xref> method was called before a previous asynchronous operation finished. In this case, <xref href="System.InvalidOperationException"></xref> is thrown with the message "An asynchronous operation is already in progress."
  version:
  - netcore-1.0
  - netcore-1.1
  - netcore-2.0
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  - netstandard-1.0
  - netstandard-1.1
  - netstandard-1.2
  - netstandard-1.3
  - netstandard-1.4
  - netstandard-1.6
  - netstandard-2.0
  - xamarinandroid-7.1
  - xamarinios-10.8
  - xamarinmac-3.0
  monikers:
  - netcore-1.0
  - netcore-1.1
  - netcore-2.0
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  - netstandard-1.0
  - netstandard-1.1
  - netstandard-1.2
  - netstandard-1.3
  - netstandard-1.4
  - netstandard-1.6
  - netstandard-2.0
  - xamarinandroid-7.1
  - xamarinios-10.8
  - xamarinmac-3.0
  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Xml/XmlReader.xml
  ms.technology:
  - dotnet-standard
  author: mairaw
  ms.author: mairaw
  manager: wpickett
- uid: System.Xml.XmlReader.Dispose(System.Boolean)
  commentId: M:System.Xml.XmlReader.Dispose(System.Boolean)
  id: Dispose(System.Boolean)
  parent: System.Xml.XmlReader
  langs:
  - csharp
  name: Dispose(Boolean)
  nameWithType: XmlReader.Dispose(Boolean)
  fullName: XmlReader.Dispose(Boolean)
  type: Method
  assemblies:
  - System.Xml.ReaderWriter
  - System.Xml
  - netstandard
  namespace: System.Xml
  summary: Releases the unmanaged resources used by the <xref href="System.Xml.XmlReader"></xref> and optionally releases the managed resources.
  syntax:
    content: protected virtual void Dispose (bool disposing);
    parameters:
    - id: disposing
      type: System.Boolean
      description: '`true` to release both managed and unmanaged resources; `false` to release only unmanaged resources.'
  overload: System.Xml.XmlReader.Dispose*
  exceptions:
  - type: System.InvalidOperationException
    commentId: T:System.InvalidOperationException
    description: An <xref href="System.Xml.XmlReader"></xref> method was called before a previous asynchronous operation finished. In this case, <xref href="System.InvalidOperationException"></xref> is thrown with the message "An asynchronous operation is already in progress."
  version:
  - netcore-1.0
  - netcore-1.1
  - netcore-2.0
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  - netstandard-1.0
  - netstandard-1.1
  - netstandard-1.2
  - netstandard-1.3
  - netstandard-1.4
  - netstandard-1.6
  - netstandard-2.0
  - xamarinandroid-7.1
  - xamarinios-10.8
  - xamarinmac-3.0
  monikers:
  - netcore-1.0
  - netcore-1.1
  - netcore-2.0
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  - netstandard-1.0
  - netstandard-1.1
  - netstandard-1.2
  - netstandard-1.3
  - netstandard-1.4
  - netstandard-1.6
  - netstandard-2.0
  - xamarinandroid-7.1
  - xamarinios-10.8
  - xamarinmac-3.0
  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Xml/XmlReader.xml
  ms.technology:
  - dotnet-standard
  author: mairaw
  ms.author: mairaw
  manager: wpickett
- uid: System.Xml.XmlReader.EOF
  commentId: P:System.Xml.XmlReader.EOF
  id: EOF
  parent: System.Xml.XmlReader
  langs:
  - csharp
  name: EOF
  nameWithType: XmlReader.EOF
  fullName: XmlReader.EOF
  type: Property
  assemblies:
  - System.Xml.ReaderWriter
  - System.Xml
  - netstandard
  namespace: System.Xml
  summary: When overridden in a derived class, gets a value indicating whether the reader is positioned at the end of the stream.
  syntax:
    content: public abstract bool EOF { get; }
    return:
      type: System.Boolean
      description: '`true` if the reader is positioned at the end of the stream; otherwise, `false`.'
  overload: System.Xml.XmlReader.EOF*
  exceptions:
  - type: System.InvalidOperationException
    commentId: T:System.InvalidOperationException
    description: An <xref href="System.Xml.XmlReader"></xref> method was called before a previous asynchronous operation finished. In this case, <xref href="System.InvalidOperationException"></xref> is thrown with the message "An asynchronous operation is already in progress."
  version:
  - netcore-1.0
  - netcore-1.1
  - netcore-2.0
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  - netstandard-1.0
  - netstandard-1.1
  - netstandard-1.2
  - netstandard-1.3
  - netstandard-1.4
  - netstandard-1.6
  - netstandard-2.0
  - xamarinandroid-7.1
  - xamarinios-10.8
  - xamarinmac-3.0
  monikers:
  - netcore-1.0
  - netcore-1.1
  - netcore-2.0
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  - netstandard-1.0
  - netstandard-1.1
  - netstandard-1.2
  - netstandard-1.3
  - netstandard-1.4
  - netstandard-1.6
  - netstandard-2.0
  - xamarinandroid-7.1
  - xamarinios-10.8
  - xamarinmac-3.0
  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Xml/XmlReader.xml
  ms.technology:
  - dotnet-standard
  author: mairaw
  ms.author: mairaw
  manager: wpickett
- uid: System.Xml.XmlReader.GetAttribute(System.Int32)
  commentId: M:System.Xml.XmlReader.GetAttribute(System.Int32)
  id: GetAttribute(System.Int32)
  parent: System.Xml.XmlReader
  langs:
  - csharp
  name: GetAttribute(Int32)
  nameWithType: XmlReader.GetAttribute(Int32)
  fullName: XmlReader.GetAttribute(Int32)
  type: Method
  assemblies:
  - System.Xml.ReaderWriter
  - System.Xml
  - netstandard
  namespace: System.Xml
  summary: When overridden in a derived class, gets the value of the attribute with the specified index.
  remarks: ''
  example:
  - "The following example gets the value of the third attribute.  \n  \n [!code-csharp[XmlReaderBasic#2](~/samples/snippets/csharp/VS_Snippets_Data/XmlReaderBasic/CS/XmlReader_Basic.cs#2)]\n [!code-vb[XmlReaderBasic#2](~/samples/snippets/visualbasic/VS_Snippets_Data/XmlReaderBasic/VB/xmlreader_basic.vb#2)]"
  syntax:
    content: public abstract string GetAttribute (int i);
    parameters:
    - id: i
      type: System.Int32
      description: The index of the attribute. The index is zero-based. (The first attribute has index 0.)
    return:
      type: System.String
      description: The value of the specified attribute. This method does not move the reader.
  overload: System.Xml.XmlReader.GetAttribute*
  exceptions:
  - type: System.ArgumentOutOfRangeException
    commentId: T:System.ArgumentOutOfRangeException
    description: <code>i</code> is out of range. It must be non-negative and less than the size of the attribute collection.
  - type: System.InvalidOperationException
    commentId: T:System.InvalidOperationException
    description: An <xref href="System.Xml.XmlReader"></xref> method was called before a previous asynchronous operation finished. In this case, <xref href="System.InvalidOperationException"></xref> is thrown with the message "An asynchronous operation is already in progress."
  version:
  - netcore-1.0
  - netcore-1.1
  - netcore-2.0
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  - netstandard-1.0
  - netstandard-1.1
  - netstandard-1.2
  - netstandard-1.3
  - netstandard-1.4
  - netstandard-1.6
  - netstandard-2.0
  - xamarinandroid-7.1
  - xamarinios-10.8
  - xamarinmac-3.0
  monikers:
  - netcore-1.0
  - netcore-1.1
  - netcore-2.0
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  - netstandard-1.0
  - netstandard-1.1
  - netstandard-1.2
  - netstandard-1.3
  - netstandard-1.4
  - netstandard-1.6
  - netstandard-2.0
  - xamarinandroid-7.1
  - xamarinios-10.8
  - xamarinmac-3.0
  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Xml/XmlReader.xml
  ms.technology:
  - dotnet-standard
  author: mairaw
  ms.author: mairaw
  manager: wpickett
- uid: System.Xml.XmlReader.GetAttribute(System.String)
  commentId: M:System.Xml.XmlReader.GetAttribute(System.String)
  id: GetAttribute(System.String)
  parent: System.Xml.XmlReader
  langs:
  - csharp
  name: GetAttribute(String)
  nameWithType: XmlReader.GetAttribute(String)
  fullName: XmlReader.GetAttribute(String)
  type: Method
  assemblies:
  - System.Xml.ReaderWriter
  - System.Xml
  - netstandard
  namespace: System.Xml
  summary: When overridden in a derived class, gets the value of the attribute with the specified <xref href="System.Xml.XmlReader.Name"></xref>.
  remarks: "This method does not move the reader.  \n  \n If the reader is positioned on a `DocumentType` node, this method can be used to get the PUBLIC and SYSTEM literals, for example, `reader.GetAttribute(\"PUBLIC\")`"
  example:
  - "The following example gets the value of the ISBN attribute.  \n  \n [!code-csharp[XmlReaderBasic#3](~/samples/snippets/csharp/VS_Snippets_Data/XmlReaderBasic/CS/XmlReader_Basic.cs#3)]\n [!code-vb[XmlReaderBasic#3](~/samples/snippets/visualbasic/VS_Snippets_Data/XmlReaderBasic/VB/xmlreader_basic.vb#3)]"
  syntax:
    content: public abstract string GetAttribute (string name);
    parameters:
    - id: name
      type: System.String
      description: The qualified name of the attribute.
    return:
      type: System.String
      description: The value of the specified attribute. If the attribute is not found or the value is `String.Empty`, `null` is returned.
  overload: System.Xml.XmlReader.GetAttribute*
  exceptions:
  - type: System.ArgumentNullException
    commentId: T:System.ArgumentNullException
    description: <code>name</code> is `null`.
  - type: System.InvalidOperationException
    commentId: T:System.InvalidOperationException
    description: An <xref href="System.Xml.XmlReader"></xref> method was called before a previous asynchronous operation finished. In this case, <xref href="System.InvalidOperationException"></xref> is thrown with the message "An asynchronous operation is already in progress."
  version:
  - netcore-1.0
  - netcore-1.1
  - netcore-2.0
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  - netstandard-1.0
  - netstandard-1.1
  - netstandard-1.2
  - netstandard-1.3
  - netstandard-1.4
  - netstandard-1.6
  - netstandard-2.0
  - xamarinandroid-7.1
  - xamarinios-10.8
  - xamarinmac-3.0
  monikers:
  - netcore-1.0
  - netcore-1.1
  - netcore-2.0
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  - netstandard-1.0
  - netstandard-1.1
  - netstandard-1.2
  - netstandard-1.3
  - netstandard-1.4
  - netstandard-1.6
  - netstandard-2.0
  - xamarinandroid-7.1
  - xamarinios-10.8
  - xamarinmac-3.0
  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Xml/XmlReader.xml
  ms.technology:
  - dotnet-standard
  author: mairaw
  ms.author: mairaw
  manager: wpickett
- uid: System.Xml.XmlReader.GetAttribute(System.String,System.String)
  commentId: M:System.Xml.XmlReader.GetAttribute(System.String,System.String)
  id: GetAttribute(System.String,System.String)
  parent: System.Xml.XmlReader
  langs:
  - csharp
  name: GetAttribute(String, String)
  nameWithType: XmlReader.GetAttribute(String, String)
  fullName: XmlReader.GetAttribute(String, String)
  type: Method
  assemblies:
  - System.Xml.ReaderWriter
  - System.Xml
  - netstandard
  namespace: System.Xml
  summary: When overridden in a derived class, gets the value of the attribute with the specified <xref href="System.Xml.XmlReader.LocalName"></xref> and <xref href="System.Xml.XmlReader.NamespaceURI"></xref>.
  remarks: "The following XML contains an attribute in a specific namespace:  \n  \n```  \n<test xmlns:dt=\"urn:datatypes\" dt:type=\"int\"/>  \n```  \n  \n You can lookup the `dt:type` attribute using one argument (prefix and local name) or two arguments (local name and namespace URI):  \n  \n```  \nString dt = reader.GetAttribute(\"dt:type\");  \nString dt2 = reader.GetAttribute(\"type\",\"urn:datatypes\");  \n```  \n  \n To lookup the `xmlns:dt` attribute, use one of the following arguments:  \n  \n```  \nString dt3 = reader.GetAttribute(\"xmlns:dt\");  \nString dt4 = reader.GetAttribute(\"dt\",http://www.w3.org/2000/xmlns/);  \n```  \n  \n You can also get this information using the <xref:System.Xml.XmlReader.Prefix%2A> property."
  syntax:
    content: public abstract string GetAttribute (string name, string namespaceURI);
    parameters:
    - id: name
      type: System.String
      description: The local name of the attribute.
    - id: namespaceURI
      type: System.String
      description: The namespace URI of the attribute.
    return:
      type: System.String
      description: The value of the specified attribute. If the attribute is not found or the value is `String.Empty`, `null` is returned. This method does not move the reader.
  overload: System.Xml.XmlReader.GetAttribute*
  exceptions:
  - type: System.ArgumentNullException
    commentId: T:System.ArgumentNullException
    description: <code>name</code> is `null`.
  - type: System.InvalidOperationException
    commentId: T:System.InvalidOperationException
    description: An <xref href="System.Xml.XmlReader"></xref> method was called before a previous asynchronous operation finished. In this case, <xref href="System.InvalidOperationException"></xref> is thrown with the message "An asynchronous operation is already in progress."
  version:
  - netcore-1.0
  - netcore-1.1
  - netcore-2.0
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  - netstandard-1.0
  - netstandard-1.1
  - netstandard-1.2
  - netstandard-1.3
  - netstandard-1.4
  - netstandard-1.6
  - netstandard-2.0
  - xamarinandroid-7.1
  - xamarinios-10.8
  - xamarinmac-3.0
  monikers:
  - netcore-1.0
  - netcore-1.1
  - netcore-2.0
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  - netstandard-1.0
  - netstandard-1.1
  - netstandard-1.2
  - netstandard-1.3
  - netstandard-1.4
  - netstandard-1.6
  - netstandard-2.0
  - xamarinandroid-7.1
  - xamarinios-10.8
  - xamarinmac-3.0
  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Xml/XmlReader.xml
  ms.technology:
  - dotnet-standard
  author: mairaw
  ms.author: mairaw
  manager: wpickett
- uid: System.Xml.XmlReader.GetValueAsync
  commentId: M:System.Xml.XmlReader.GetValueAsync
  id: GetValueAsync
  parent: System.Xml.XmlReader
  langs:
  - csharp
  name: GetValueAsync()
  nameWithType: XmlReader.GetValueAsync()
  fullName: XmlReader.GetValueAsync()
  type: Method
  assemblies:
  - System.Xml.ReaderWriter
  - System.Xml
  - netstandard
  namespace: System.Xml
  summary: Asynchronously gets the value of the current node.
  remarks: To use this method, you must set the <xref:System.Xml.XmlReaderSettings.Async%2A> flag to `true`.
  syntax:
    content: public virtual System.Threading.Tasks.Task<string> GetValueAsync ();
    parameters: []
    return:
      type: System.Threading.Tasks.Task{System.String}
      description: The value of the current node.
  overload: System.Xml.XmlReader.GetValueAsync*
  exceptions:
  - type: System.InvalidOperationException
    commentId: T:System.InvalidOperationException
    description: An <xref href="System.Xml.XmlReader"></xref> asynchronous method was called without setting the <xref href="System.Xml.XmlReaderSettings.Async"></xref> flag to `true`. In this case, <xref href="System.InvalidOperationException"></xref> is thrown with the message "Set XmlReaderSettings.Async to true if you want to use Async Methods."
  version:
  - netcore-1.0
  - netcore-1.1
  - netcore-2.0
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  - netstandard-1.0
  - netstandard-1.1
  - netstandard-1.2
  - netstandard-1.3
  - netstandard-1.4
  - netstandard-1.6
  - netstandard-2.0
  - xamarinandroid-7.1
  - xamarinios-10.8
  - xamarinmac-3.0
  monikers:
  - netcore-1.0
  - netcore-1.1
  - netcore-2.0
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  - netstandard-1.0
  - netstandard-1.1
  - netstandard-1.2
  - netstandard-1.3
  - netstandard-1.4
  - netstandard-1.6
  - netstandard-2.0
  - xamarinandroid-7.1
  - xamarinios-10.8
  - xamarinmac-3.0
  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Xml/XmlReader.xml
  ms.technology:
  - dotnet-standard
  author: mairaw
  ms.author: mairaw
  manager: wpickett
- uid: System.Xml.XmlReader.HasAttributes
  commentId: P:System.Xml.XmlReader.HasAttributes
  id: HasAttributes
  parent: System.Xml.XmlReader
  langs:
  - csharp
  name: HasAttributes
  nameWithType: XmlReader.HasAttributes
  fullName: XmlReader.HasAttributes
  type: Property
  assemblies:
  - System.Xml.ReaderWriter
  - System.Xml
  - netstandard
  namespace: System.Xml
  summary: Gets a value indicating whether the current node has any attributes.
  remarks: ''
  example:
  - "The following example displays all attributes on the current node.  \n  \n [!code-csharp[XmlReaderBasic#6](~/samples/snippets/csharp/VS_Snippets_Data/XmlReaderBasic/CS/XmlReader_Basic.cs#6)]\n [!code-vb[XmlReaderBasic#6](~/samples/snippets/visualbasic/VS_Snippets_Data/XmlReaderBasic/VB/xmlreader_basic.vb#6)]"
  syntax:
    content: public virtual bool HasAttributes { get; }
    return:
      type: System.Boolean
      description: '`true` if the current node has attributes; otherwise, `false`.'
  overload: System.Xml.XmlReader.HasAttributes*
  exceptions:
  - type: System.InvalidOperationException
    commentId: T:System.InvalidOperationException
    description: An <xref href="System.Xml.XmlReader"></xref> method was called before a previous asynchronous operation finished. In this case, <xref href="System.InvalidOperationException"></xref> is thrown with the message "An asynchronous operation is already in progress."
  version:
  - netcore-1.0
  - netcore-1.1
  - netcore-2.0
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  - netstandard-1.0
  - netstandard-1.1
  - netstandard-1.2
  - netstandard-1.3
  - netstandard-1.4
  - netstandard-1.6
  - netstandard-2.0
  - xamarinandroid-7.1
  - xamarinios-10.8
  - xamarinmac-3.0
  monikers:
  - netcore-1.0
  - netcore-1.1
  - netcore-2.0
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  - netstandard-1.0
  - netstandard-1.1
  - netstandard-1.2
  - netstandard-1.3
  - netstandard-1.4
  - netstandard-1.6
  - netstandard-2.0
  - xamarinandroid-7.1
  - xamarinios-10.8
  - xamarinmac-3.0
  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Xml/XmlReader.xml
  ms.technology:
  - dotnet-standard
  author: mairaw
  ms.author: mairaw
  manager: wpickett
- uid: System.Xml.XmlReader.HasValue
  commentId: P:System.Xml.XmlReader.HasValue
  id: HasValue
  parent: System.Xml.XmlReader
  langs:
  - csharp
  name: HasValue
  nameWithType: XmlReader.HasValue
  fullName: XmlReader.HasValue
  type: Property
  assemblies:
  - System.Xml.ReaderWriter
  - System.Xml
  - netstandard
  namespace: System.Xml
  summary: When overridden in a derived class, gets a value indicating whether the current node can have a <xref href="System.Xml.XmlReader.Value"></xref>.
  remarks: "The following table lists node types that have a value to return.  \n  \n|Node Type|Value|  \n|---------------|-----------|  \n|`Attribute`|The value of the attribute.|  \n|`CDATA`|The content of the CDATA section.|  \n|`Comment`|The content of the comment.|  \n|`DocumentType`|The internal subset.|  \n|`ProcessingInstruction`|The entire content, excluding the target.|  \n|`SignificantWhitespace`|The white space between markup in a mixed content model.|  \n|`Text`|The content of the text node.|  \n|`Whitespace`|The white space between markup.|  \n|`XmlDeclaration`|The content of the declaration.|"
  example:
  - See <xref:System.Xml.XmlTextReader.HasValue%2A> (in the `XmlTextReader` class) for a sample using this method.
  syntax:
    content: public virtual bool HasValue { get; }
    return:
      type: System.Boolean
      description: '`true` if the node on which the reader is currently positioned can have a `Value`; otherwise, `false`. If `false`, the node has a value of `String.Empty`.'
  overload: System.Xml.XmlReader.HasValue*
  exceptions:
  - type: System.InvalidOperationException
    commentId: T:System.InvalidOperationException
    description: An <xref href="System.Xml.XmlReader"></xref> method was called before a previous asynchronous operation finished. In this case, <xref href="System.InvalidOperationException"></xref> is thrown with the message "An asynchronous operation is already in progress."
  version:
  - netcore-1.0
  - netcore-1.1
  - netcore-2.0
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  - netstandard-1.0
  - netstandard-1.1
  - netstandard-1.2
  - netstandard-1.3
  - netstandard-1.4
  - netstandard-1.6
  - netstandard-2.0
  - xamarinandroid-7.1
  - xamarinios-10.8
  - xamarinmac-3.0
  monikers:
  - netcore-1.0
  - netcore-1.1
  - netcore-2.0
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  - netstandard-1.0
  - netstandard-1.1
  - netstandard-1.2
  - netstandard-1.3
  - netstandard-1.4
  - netstandard-1.6
  - netstandard-2.0
  - xamarinandroid-7.1
  - xamarinios-10.8
  - xamarinmac-3.0
  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Xml/XmlReader.xml
  ms.technology:
  - dotnet-standard
  author: mairaw
  ms.author: mairaw
  manager: wpickett
- uid: System.Xml.XmlReader.IsDefault
  commentId: P:System.Xml.XmlReader.IsDefault
  id: IsDefault
  parent: System.Xml.XmlReader
  langs:
  - csharp
  name: IsDefault
  nameWithType: XmlReader.IsDefault
  fullName: XmlReader.IsDefault
  type: Property
  assemblies:
  - System.Xml.ReaderWriter
  - System.Xml
  - netstandard
  namespace: System.Xml
  summary: When overridden in a derived class, gets a value indicating whether the current node is an attribute that was generated from the default value defined in the DTD or schema.
  remarks: '`IsDefault` always returns `false` for implementations of `XmlReader` that do not support schema or DTD information. This property applies only to an attribute node.'
  example:
  - "The following example displays all attributes on the root element.  \n  \n```  \nusing System;  \nusing System.IO;  \nusing System.Xml;  \n  \npublic class Sample   \n{  \n  public static void Main(){  \n  \n    // Create the reader.  \n    XmlReader reader = XmlReader.Create(\"book4.xml\");  \n  \n    reader.MoveToContent();  \n  \n    // Display each of the attribute nodes, including default attributes.  \n    while (reader.MoveToNextAttribute()){  \n        if (reader.IsDefault)  \n          Console.Write(\"(default attribute) \");  \n        Console.WriteLine(\"{0} = {1}\", reader.Name, reader.Value);    \n    }             \n  \n    //Close the reader.  \n    reader.Close();       \n  \n  }  \n} // End class  \n```  \n  \n The example uses the following files as input.  \n  \n `book4.xml`  \n  \n```  \n<!DOCTYPE book SYSTEM 'book.dtd'>  \n<book ISBN = '1-861001-57-5'>  \n  <title>Pride And Prejudice</title>  \n  <price>19.95</price>  \n</book>  \n```  \n  \n `book.dtd`  \n  \n```  \n<!ELEMENT book (title,price)>   \n<!ATTLIST book   \n   genre CDATA \"novel\"  \n   ISBN CDATA #REQUIRED>  \n<!ELEMENT title (#PCDATA)>  \n<!ELEMENT price (#PCDATA)>  \n```"
  syntax:
    content: public virtual bool IsDefault { get; }
    return:
      type: System.Boolean
      description: '`true` if the current node is an attribute whose value was generated from the default value defined in the DTD or schema; `false` if the attribute value was explicitly set.'
  overload: System.Xml.XmlReader.IsDefault*
  exceptions:
  - type: System.InvalidOperationException
    commentId: T:System.InvalidOperationException
    description: An <xref href="System.Xml.XmlReader"></xref> method was called before a previous asynchronous operation finished. In this case, <xref href="System.InvalidOperationException"></xref> is thrown with the message "An asynchronous operation is already in progress."
  version:
  - netcore-1.0
  - netcore-1.1
  - netcore-2.0
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  - netstandard-1.0
  - netstandard-1.1
  - netstandard-1.2
  - netstandard-1.3
  - netstandard-1.4
  - netstandard-1.6
  - netstandard-2.0
  - xamarinandroid-7.1
  - xamarinios-10.8
  - xamarinmac-3.0
  monikers:
  - netcore-1.0
  - netcore-1.1
  - netcore-2.0
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  - netstandard-1.0
  - netstandard-1.1
  - netstandard-1.2
  - netstandard-1.3
  - netstandard-1.4
  - netstandard-1.6
  - netstandard-2.0
  - xamarinandroid-7.1
  - xamarinios-10.8
  - xamarinmac-3.0
  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Xml/XmlReader.xml
  ms.technology:
  - dotnet-standard
  author: mairaw
  ms.author: mairaw
  manager: wpickett
- uid: System.Xml.XmlReader.IsEmptyElement
  commentId: P:System.Xml.XmlReader.IsEmptyElement
  id: IsEmptyElement
  parent: System.Xml.XmlReader
  langs:
  - csharp
  name: IsEmptyElement
  nameWithType: XmlReader.IsEmptyElement
  fullName: XmlReader.IsEmptyElement
  type: Property
  assemblies:
  - System.Xml.ReaderWriter
  - System.Xml
  - netstandard
  namespace: System.Xml
  summary: When overridden in a derived class, gets a value indicating whether the current node is an empty element (for example, <code><MyElement/></code>).
  remarks: "This property enables you to determine the difference between the following:  \n  \n `<item num=\"123\"/>` (`IsEmptyElement` is `true`).  \n  \n `<item num=\"123\"></item>` (`IsEmptyElement` is `false`, although element content is empty).  \n  \n A corresponding `EndElement` node is not generated for empty elements.  \n  \n If default content has been added to an element due to schema validation, `IsEmptyElement` still returns `true`. It has no bearing on whether or not the element has a default value. In other words, `IsEmptyElement` simply reports whether or not the element in the source document had an end element tag."
  example:
  - "The following example displays the text content of each element.  \n  \n [!code-csharp[XmlReaderBasic#10](~/samples/snippets/csharp/VS_Snippets_Data/XmlReaderBasic/CS/XmlReader_Basic.cs#10)]\n [!code-vb[XmlReaderBasic#10](~/samples/snippets/visualbasic/VS_Snippets_Data/XmlReaderBasic/VB/xmlreader_basic.vb#10)]  \n  \n The example uses the file, `elems.xml`, as input.  \n  \n [!code-xml[XML_Core_Files#3](~/samples/snippets/xml/VS_Snippets_Data/XML_Core_Files/XML/elems.xml#3)]"
  syntax:
    content: public abstract bool IsEmptyElement { get; }
    return:
      type: System.Boolean
      description: '`true` if the current node is an element (<xref href="System.Xml.XmlReader.NodeType"></xref> equals `XmlNodeType.Element`) that ends with <code>/></code>; otherwise, `false`.'
  overload: System.Xml.XmlReader.IsEmptyElement*
  exceptions:
  - type: System.InvalidOperationException
    commentId: T:System.InvalidOperationException
    description: An <xref href="System.Xml.XmlReader"></xref> method was called before a previous asynchronous operation finished. In this case, <xref href="System.InvalidOperationException"></xref> is thrown with the message "An asynchronous operation is already in progress."
  version:
  - netcore-1.0
  - netcore-1.1
  - netcore-2.0
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  - netstandard-1.0
  - netstandard-1.1
  - netstandard-1.2
  - netstandard-1.3
  - netstandard-1.4
  - netstandard-1.6
  - netstandard-2.0
  - xamarinandroid-7.1
  - xamarinios-10.8
  - xamarinmac-3.0
  monikers:
  - netcore-1.0
  - netcore-1.1
  - netcore-2.0
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  - netstandard-1.0
  - netstandard-1.1
  - netstandard-1.2
  - netstandard-1.3
  - netstandard-1.4
  - netstandard-1.6
  - netstandard-2.0
  - xamarinandroid-7.1
  - xamarinios-10.8
  - xamarinmac-3.0
  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Xml/XmlReader.xml
  ms.technology:
  - dotnet-standard
  author: mairaw
  ms.author: mairaw
  manager: wpickett
- uid: System.Xml.XmlReader.IsName(System.String)
  commentId: M:System.Xml.XmlReader.IsName(System.String)
  id: IsName(System.String)
  parent: System.Xml.XmlReader
  langs:
  - csharp
  name: IsName(String)
  nameWithType: XmlReader.IsName(String)
  fullName: XmlReader.IsName(String)
  type: Method
  assemblies:
  - System.Xml.ReaderWriter
  - System.Xml
  - netstandard
  namespace: System.Xml
  summary: Returns a value indicating whether the string argument is a valid XML name.
  remarks: This method uses the [W3C XML 1.0 Recommendation](http://go.microsoft.com/fwlink/?LinkId=49863) to determine whether the name is valid.
  syntax:
    content: public static bool IsName (string str);
    parameters:
    - id: str
      type: System.String
      description: The name to validate.
    return:
      type: System.Boolean
      description: '`true` if the name is valid; otherwise, `false`.'
  overload: System.Xml.XmlReader.IsName*
  exceptions:
  - type: System.ArgumentNullException
    commentId: T:System.ArgumentNullException
    description: The <code>str</code> value is `null`.
  version:
  - netcore-1.0
  - netcore-1.1
  - netcore-2.0
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  - netstandard-1.0
  - netstandard-1.1
  - netstandard-1.2
  - netstandard-1.3
  - netstandard-1.4
  - netstandard-1.6
  - netstandard-2.0
  - xamarinandroid-7.1
  - xamarinios-10.8
  - xamarinmac-3.0
  monikers:
  - netcore-1.0
  - netcore-1.1
  - netcore-2.0
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  - netstandard-1.0
  - netstandard-1.1
  - netstandard-1.2
  - netstandard-1.3
  - netstandard-1.4
  - netstandard-1.6
  - netstandard-2.0
  - xamarinandroid-7.1
  - xamarinios-10.8
  - xamarinmac-3.0
  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Xml/XmlReader.xml
  ms.technology:
  - dotnet-standard
  author: mairaw
  ms.author: mairaw
  manager: wpickett
- uid: System.Xml.XmlReader.IsNameToken(System.String)
  commentId: M:System.Xml.XmlReader.IsNameToken(System.String)
  id: IsNameToken(System.String)
  parent: System.Xml.XmlReader
  langs:
  - csharp
  name: IsNameToken(String)
  nameWithType: XmlReader.IsNameToken(String)
  fullName: XmlReader.IsNameToken(String)
  type: Method
  assemblies:
  - System.Xml.ReaderWriter
  - System.Xml
  - netstandard
  namespace: System.Xml
  summary: Returns a value indicating whether or not the string argument is a valid XML name token.
  remarks: This method uses the [W3C XML 1.0 Recommendation](http://go.microsoft.com/fwlink/?LinkId=49863) to determine whether the name token is valid.
  syntax:
    content: public static bool IsNameToken (string str);
    parameters:
    - id: str
      type: System.String
      description: The name token to validate.
    return:
      type: System.Boolean
      description: '`true` if it is a valid name token; otherwise `false`.'
  overload: System.Xml.XmlReader.IsNameToken*
  exceptions:
  - type: System.ArgumentNullException
    commentId: T:System.ArgumentNullException
    description: The <code>str</code> value is `null`.
  version:
  - netcore-1.0
  - netcore-1.1
  - netcore-2.0
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  - netstandard-1.0
  - netstandard-1.1
  - netstandard-1.2
  - netstandard-1.3
  - netstandard-1.4
  - netstandard-1.6
  - netstandard-2.0
  - xamarinandroid-7.1
  - xamarinios-10.8
  - xamarinmac-3.0
  monikers:
  - netcore-1.0
  - netcore-1.1
  - netcore-2.0
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  - netstandard-1.0
  - netstandard-1.1
  - netstandard-1.2
  - netstandard-1.3
  - netstandard-1.4
  - netstandard-1.6
  - netstandard-2.0
  - xamarinandroid-7.1
  - xamarinios-10.8
  - xamarinmac-3.0
  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Xml/XmlReader.xml
  ms.technology:
  - dotnet-standard
  author: mairaw
  ms.author: mairaw
  manager: wpickett
- uid: System.Xml.XmlReader.IsStartElement
  commentId: M:System.Xml.XmlReader.IsStartElement
  id: IsStartElement
  parent: System.Xml.XmlReader
  langs:
  - csharp
  name: IsStartElement()
  nameWithType: XmlReader.IsStartElement()
  fullName: XmlReader.IsStartElement()
  type: Method
  assemblies:
  - System.Xml.ReaderWriter
  - System.Xml
  - netstandard
  namespace: System.Xml
  summary: Calls <xref href="System.Xml.XmlReader.MoveToContent"></xref> and tests if the current content node is a start tag or empty element tag.
  remarks: This method skips white space, comments, and processing instructions until the reader is positioned on a content node. The method then tests if the current node is an element.
  example:
  - "The following example displays the text content of each element.  \n  \n [!code-csharp[XmlReaderBasic#10](~/samples/snippets/csharp/VS_Snippets_Data/XmlReaderBasic/CS/XmlReader_Basic.cs#10)]\n [!code-vb[XmlReaderBasic#10](~/samples/snippets/visualbasic/VS_Snippets_Data/XmlReaderBasic/VB/xmlreader_basic.vb#10)]  \n  \n The example uses the file, `elems.xml`, as input.  \n  \n [!code-xml[XML_Core_Files#3](~/samples/snippets/xml/VS_Snippets_Data/XML_Core_Files/XML/elems.xml#3)]"
  syntax:
    content: public virtual bool IsStartElement ();
    parameters: []
    return:
      type: System.Boolean
      description: '`true` if <xref href="System.Xml.XmlReader.MoveToContent"></xref> finds a start tag or empty element tag; `false` if a node type other than `XmlNodeType.Element` was found.'
  overload: System.Xml.XmlReader.IsStartElement*
  exceptions:
  - type: System.Xml.XmlException
    commentId: T:System.Xml.XmlException
    description: Incorrect XML is encountered in the input stream.
  - type: System.InvalidOperationException
    commentId: T:System.InvalidOperationException
    description: An <xref href="System.Xml.XmlReader"></xref> method was called before a previous asynchronous operation finished. In this case, <xref href="System.InvalidOperationException"></xref> is thrown with the message "An asynchronous operation is already in progress."
  version:
  - netcore-1.0
  - netcore-1.1
  - netcore-2.0
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  - netstandard-1.0
  - netstandard-1.1
  - netstandard-1.2
  - netstandard-1.3
  - netstandard-1.4
  - netstandard-1.6
  - netstandard-2.0
  - xamarinandroid-7.1
  - xamarinios-10.8
  - xamarinmac-3.0
  monikers:
  - netcore-1.0
  - netcore-1.1
  - netcore-2.0
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  - netstandard-1.0
  - netstandard-1.1
  - netstandard-1.2
  - netstandard-1.3
  - netstandard-1.4
  - netstandard-1.6
  - netstandard-2.0
  - xamarinandroid-7.1
  - xamarinios-10.8
  - xamarinmac-3.0
  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Xml/XmlReader.xml
  ms.technology:
  - dotnet-standard
  author: mairaw
  ms.author: mairaw
  manager: wpickett
- uid: System.Xml.XmlReader.IsStartElement(System.String)
  commentId: M:System.Xml.XmlReader.IsStartElement(System.String)
  id: IsStartElement(System.String)
  parent: System.Xml.XmlReader
  langs:
  - csharp
  name: IsStartElement(String)
  nameWithType: XmlReader.IsStartElement(String)
  fullName: XmlReader.IsStartElement(String)
  type: Method
  assemblies:
  - System.Xml.ReaderWriter
  - System.Xml
  - netstandard
  namespace: System.Xml
  summary: Calls <xref href="System.Xml.XmlReader.MoveToContent"></xref> and tests if the current content node is a start tag or empty element tag and if the <xref href="System.Xml.XmlReader.Name"></xref> property of the element found matches the given argument.
  remarks: This method skips white space, comments, and processing instructions until the reader is positioned on a content node. The method then tests if the current node is an element.
  example:
  - "The following example displays each price element.  \n  \n [!code-csharp[XmlReaderBasic#17](~/samples/snippets/csharp/VS_Snippets_Data/XmlReaderBasic/CS/XmlReader_Basic.cs#17)]\n [!code-vb[XmlReaderBasic#17](~/samples/snippets/visualbasic/VS_Snippets_Data/XmlReaderBasic/VB/xmlreader_basic.vb#17)]"
  syntax:
    content: public virtual bool IsStartElement (string name);
    parameters:
    - id: name
      type: System.String
      description: The string matched against the `Name` property of the element found.
    return:
      type: System.Boolean
      description: '`true` if the resulting node is an element and the `Name` property matches the specified string. `false` if a node type other than `XmlNodeType.Element` was found or if the element `Name` property does not match the specified string.'
  overload: System.Xml.XmlReader.IsStartElement*
  exceptions:
  - type: System.Xml.XmlException
    commentId: T:System.Xml.XmlException
    description: Incorrect XML is encountered in the input stream.
  - type: System.InvalidOperationException
    commentId: T:System.InvalidOperationException
    description: An <xref href="System.Xml.XmlReader"></xref> method was called before a previous asynchronous operation finished. In this case, <xref href="System.InvalidOperationException"></xref> is thrown with the message "An asynchronous operation is already in progress."
  version:
  - netcore-1.0
  - netcore-1.1
  - netcore-2.0
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  - netstandard-1.0
  - netstandard-1.1
  - netstandard-1.2
  - netstandard-1.3
  - netstandard-1.4
  - netstandard-1.6
  - netstandard-2.0
  - xamarinandroid-7.1
  - xamarinios-10.8
  - xamarinmac-3.0
  monikers:
  - netcore-1.0
  - netcore-1.1
  - netcore-2.0
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  - netstandard-1.0
  - netstandard-1.1
  - netstandard-1.2
  - netstandard-1.3
  - netstandard-1.4
  - netstandard-1.6
  - netstandard-2.0
  - xamarinandroid-7.1
  - xamarinios-10.8
  - xamarinmac-3.0
  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Xml/XmlReader.xml
  ms.technology:
  - dotnet-standard
  author: mairaw
  ms.author: mairaw
  manager: wpickett
- uid: System.Xml.XmlReader.IsStartElement(System.String,System.String)
  commentId: M:System.Xml.XmlReader.IsStartElement(System.String,System.String)
  id: IsStartElement(System.String,System.String)
  parent: System.Xml.XmlReader
  langs:
  - csharp
  name: IsStartElement(String, String)
  nameWithType: XmlReader.IsStartElement(String, String)
  fullName: XmlReader.IsStartElement(String, String)
  type: Method
  assemblies:
  - System.Xml.ReaderWriter
  - System.Xml
  - netstandard
  namespace: System.Xml
  summary: Calls <xref href="System.Xml.XmlReader.MoveToContent"></xref> and tests if the current content node is a start tag or empty element tag and if the <xref href="System.Xml.XmlReader.LocalName"></xref> and <xref href="System.Xml.XmlReader.NamespaceURI"></xref> properties of the element found match the given strings.
  remarks: This method skips white space, comments, and processing instructions until the reader is positioned on a content node. The method then tests if the current node is an element.
  syntax:
    content: public virtual bool IsStartElement (string localname, string ns);
    parameters:
    - id: localname
      type: System.String
      description: The string to match against the `LocalName` property of the element found.
    - id: ns
      type: System.String
      description: The string to match against the `NamespaceURI` property of the element found.
    return:
      type: System.Boolean
      description: '`true` if the resulting node is an element. `false` if a node type other than `XmlNodeType.Element` was found or if the `LocalName` and `NamespaceURI` properties of the element do not match the specified strings.'
  overload: System.Xml.XmlReader.IsStartElement*
  exceptions:
  - type: System.Xml.XmlException
    commentId: T:System.Xml.XmlException
    description: Incorrect XML is encountered in the input stream.
  - type: System.InvalidOperationException
    commentId: T:System.InvalidOperationException
    description: An <xref href="System.Xml.XmlReader"></xref> method was called before a previous asynchronous operation finished. In this case, <xref href="System.InvalidOperationException"></xref> is thrown with the message "An asynchronous operation is already in progress."
  version:
  - netcore-1.0
  - netcore-1.1
  - netcore-2.0
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  - netstandard-1.0
  - netstandard-1.1
  - netstandard-1.2
  - netstandard-1.3
  - netstandard-1.4
  - netstandard-1.6
  - netstandard-2.0
  - xamarinandroid-7.1
  - xamarinios-10.8
  - xamarinmac-3.0
  monikers:
  - netcore-1.0
  - netcore-1.1
  - netcore-2.0
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  - netstandard-1.0
  - netstandard-1.1
  - netstandard-1.2
  - netstandard-1.3
  - netstandard-1.4
  - netstandard-1.6
  - netstandard-2.0
  - xamarinandroid-7.1
  - xamarinios-10.8
  - xamarinmac-3.0
  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Xml/XmlReader.xml
  ms.technology:
  - dotnet-standard
  author: mairaw
  ms.author: mairaw
  manager: wpickett
- uid: System.Xml.XmlReader.Item(System.Int32)
  commentId: P:System.Xml.XmlReader.Item(System.Int32)
  id: Item(System.Int32)
  parent: System.Xml.XmlReader
  langs:
  - csharp
  name: Item(Int32)
  nameWithType: XmlReader.Item(Int32)
  fullName: XmlReader.Item(Int32)
  type: Property
  assemblies:
  - System.Xml.ReaderWriter
  - System.Xml
  - netstandard
  namespace: System.Xml
  summary: When overridden in a derived class, gets the value of the attribute with the specified index.
  remarks: This property does not move the reader.
  example:
  - "The following example displays all attributes on the current node.  \n  \n [!code-csharp[XmlReaderBasic#1](~/samples/snippets/csharp/VS_Snippets_Data/XmlReaderBasic/CS/XmlReader_Basic.cs#1)]\n [!code-vb[XmlReaderBasic#1](~/samples/snippets/visualbasic/VS_Snippets_Data/XmlReaderBasic/VB/xmlreader_basic.vb#1)]"
  syntax:
    content: public virtual string this[int i] { get; }
    parameters:
    - id: i
      type: System.Int32
      description: The index of the attribute.
    return:
      type: System.String
      description: The value of the specified attribute.
  overload: System.Xml.XmlReader.Item*
  exceptions:
  - type: System.InvalidOperationException
    commentId: T:System.InvalidOperationException
    description: An <xref href="System.Xml.XmlReader"></xref> method was called before a previous asynchronous operation finished. In this case, <xref href="System.InvalidOperationException"></xref> is thrown with the message "An asynchronous operation is already in progress."
  version:
  - netcore-1.0
  - netcore-1.1
  - netcore-2.0
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  - netstandard-1.0
  - netstandard-1.1
  - netstandard-1.2
  - netstandard-1.3
  - netstandard-1.4
  - netstandard-1.6
  - netstandard-2.0
  - xamarinandroid-7.1
  - xamarinios-10.8
  - xamarinmac-3.0
  monikers:
  - netcore-1.0
  - netcore-1.1
  - netcore-2.0
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  - netstandard-1.0
  - netstandard-1.1
  - netstandard-1.2
  - netstandard-1.3
  - netstandard-1.4
  - netstandard-1.6
  - netstandard-2.0
  - xamarinandroid-7.1
  - xamarinios-10.8
  - xamarinmac-3.0
  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Xml/XmlReader.xml
  ms.technology:
  - dotnet-standard
  author: mairaw
  ms.author: mairaw
  manager: wpickett
- uid: System.Xml.XmlReader.Item(System.String)
  commentId: P:System.Xml.XmlReader.Item(System.String)
  id: Item(System.String)
  parent: System.Xml.XmlReader
  langs:
  - csharp
  name: Item(String)
  nameWithType: XmlReader.Item(String)
  fullName: XmlReader.Item(String)
  type: Property
  assemblies:
  - System.Xml.ReaderWriter
  - System.Xml
  - netstandard
  namespace: System.Xml
  summary: When overridden in a derived class, gets the value of the attribute with the specified <xref href="System.Xml.XmlReader.Name"></xref>.
  remarks: "This property does not move the reader.  \n  \n If the reader is positioned on a `DocumentType` node, this method can be used to get the PUBLIC and SYSTEM literals, for example, `reader[\"PUBLIC\"]`"
  example:
  - "The following example gets the value of the ISBN attribute.  \n  \n [!code-csharp[XmlReaderBasic#7](~/samples/snippets/csharp/VS_Snippets_Data/XmlReaderBasic/CS/XmlReader_Basic.cs#7)]\n [!code-vb[XmlReaderBasic#7](~/samples/snippets/visualbasic/VS_Snippets_Data/XmlReaderBasic/VB/xmlreader_basic.vb#7)]"
  syntax:
    content: public virtual string this[string name] { get; }
    parameters:
    - id: name
      type: System.String
      description: The qualified name of the attribute.
    return:
      type: System.String
      description: The value of the specified attribute. If the attribute is not found, `null` is returned.
  overload: System.Xml.XmlReader.Item*
  exceptions:
  - type: System.InvalidOperationException
    commentId: T:System.InvalidOperationException
    description: An <xref href="System.Xml.XmlReader"></xref> method was called before a previous asynchronous operation finished. In this case, <xref href="System.InvalidOperationException"></xref> is thrown with the message "An asynchronous operation is already in progress."
  version:
  - netcore-1.0
  - netcore-1.1
  - netcore-2.0
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  - netstandard-1.0
  - netstandard-1.1
  - netstandard-1.2
  - netstandard-1.3
  - netstandard-1.4
  - netstandard-1.6
  - netstandard-2.0
  - xamarinandroid-7.1
  - xamarinios-10.8
  - xamarinmac-3.0
  monikers:
  - netcore-1.0
  - netcore-1.1
  - netcore-2.0
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  - netstandard-1.0
  - netstandard-1.1
  - netstandard-1.2
  - netstandard-1.3
  - netstandard-1.4
  - netstandard-1.6
  - netstandard-2.0
  - xamarinandroid-7.1
  - xamarinios-10.8
  - xamarinmac-3.0
  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Xml/XmlReader.xml
  ms.technology:
  - dotnet-standard
  author: mairaw
  ms.author: mairaw
  manager: wpickett
- uid: System.Xml.XmlReader.Item(System.String,System.String)
  commentId: P:System.Xml.XmlReader.Item(System.String,System.String)
  id: Item(System.String,System.String)
  parent: System.Xml.XmlReader
  langs:
  - csharp
  name: Item(String, String)
  nameWithType: XmlReader.Item(String, String)
  fullName: XmlReader.Item(String, String)
  type: Property
  assemblies:
  - System.Xml.ReaderWriter
  - System.Xml
  - netstandard
  namespace: System.Xml
  summary: When overridden in a derived class, gets the value of the attribute with the specified <xref href="System.Xml.XmlReader.LocalName"></xref> and <xref href="System.Xml.XmlReader.NamespaceURI"></xref>.
  remarks: This property does not move the reader.
  syntax:
    content: public virtual string this[string name, string namespaceURI] { get; }
    parameters:
    - id: name
      type: System.String
      description: The local name of the attribute.
    - id: namespaceURI
      type: System.String
      description: The namespace URI of the attribute.
    return:
      type: System.String
      description: The value of the specified attribute. If the attribute is not found, `null` is returned.
  overload: System.Xml.XmlReader.Item*
  exceptions:
  - type: System.InvalidOperationException
    commentId: T:System.InvalidOperationException
    description: An <xref href="System.Xml.XmlReader"></xref> method was called before a previous asynchronous operation finished. In this case, <xref href="System.InvalidOperationException"></xref> is thrown with the message "An asynchronous operation is already in progress."
  version:
  - netcore-1.0
  - netcore-1.1
  - netcore-2.0
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  - netstandard-1.0
  - netstandard-1.1
  - netstandard-1.2
  - netstandard-1.3
  - netstandard-1.4
  - netstandard-1.6
  - netstandard-2.0
  - xamarinandroid-7.1
  - xamarinios-10.8
  - xamarinmac-3.0
  monikers:
  - netcore-1.0
  - netcore-1.1
  - netcore-2.0
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  - netstandard-1.0
  - netstandard-1.1
  - netstandard-1.2
  - netstandard-1.3
  - netstandard-1.4
  - netstandard-1.6
  - netstandard-2.0
  - xamarinandroid-7.1
  - xamarinios-10.8
  - xamarinmac-3.0
  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Xml/XmlReader.xml
  ms.technology:
  - dotnet-standard
  author: mairaw
  ms.author: mairaw
  manager: wpickett
- uid: System.Xml.XmlReader.LocalName
  commentId: P:System.Xml.XmlReader.LocalName
  id: LocalName
  parent: System.Xml.XmlReader
  langs:
  - csharp
  name: LocalName
  nameWithType: XmlReader.LocalName
  fullName: XmlReader.LocalName
  type: Property
  assemblies:
  - System.Xml.ReaderWriter
  - System.Xml
  - netstandard
  namespace: System.Xml
  summary: When overridden in a derived class, gets the local name of the current node.
  remarks: ''
  example:
  - "The following example displays the local name of each node, and, if they exist, the prefix and namespace URI.  \n  \n [!code-csharp[XmlReaderBasic#9](~/samples/snippets/csharp/VS_Snippets_Data/XmlReaderBasic/CS/XmlReader_Basic.cs#9)]\n [!code-vb[XmlReaderBasic#9](~/samples/snippets/visualbasic/VS_Snippets_Data/XmlReaderBasic/VB/xmlreader_basic.vb#9)]  \n  \n The example uses the file, book2.xml, as input.  \n  \n [!code-xml[XML_Core_Files#5](~/samples/snippets/xml/VS_Snippets_Data/XML_Core_Files/XML/book2.xml#5)]"
  syntax:
    content: public abstract string LocalName { get; }
    return:
      type: System.String
      description: "The name of the current node with the prefix removed. For example, `LocalName` is `book` for the element <code><bk:book></code>.  \n  \n For node types that do not have a name (like `Text`, `Comment`, and so on), this property returns `String.Empty`."
  overload: System.Xml.XmlReader.LocalName*
  exceptions:
  - type: System.InvalidOperationException
    commentId: T:System.InvalidOperationException
    description: An <xref href="System.Xml.XmlReader"></xref> method was called before a previous asynchronous operation finished. In this case, <xref href="System.InvalidOperationException"></xref> is thrown with the message "An asynchronous operation is already in progress."
  version:
  - netcore-1.0
  - netcore-1.1
  - netcore-2.0
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  - netstandard-1.0
  - netstandard-1.1
  - netstandard-1.2
  - netstandard-1.3
  - netstandard-1.4
  - netstandard-1.6
  - netstandard-2.0
  - xamarinandroid-7.1
  - xamarinios-10.8
  - xamarinmac-3.0
  monikers:
  - netcore-1.0
  - netcore-1.1
  - netcore-2.0
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  - netstandard-1.0
  - netstandard-1.1
  - netstandard-1.2
  - netstandard-1.3
  - netstandard-1.4
  - netstandard-1.6
  - netstandard-2.0
  - xamarinandroid-7.1
  - xamarinios-10.8
  - xamarinmac-3.0
  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Xml/XmlReader.xml
  ms.technology:
  - dotnet-standard
  author: mairaw
  ms.author: mairaw
  manager: wpickett
- uid: System.Xml.XmlReader.LookupNamespace(System.String)
  commentId: M:System.Xml.XmlReader.LookupNamespace(System.String)
  id: LookupNamespace(System.String)
  parent: System.Xml.XmlReader
  langs:
  - csharp
  name: LookupNamespace(String)
  nameWithType: XmlReader.LookupNamespace(String)
  fullName: XmlReader.LookupNamespace(String)
  type: Method
  assemblies:
  - System.Xml.ReaderWriter
  - System.Xml
  - netstandard
  namespace: System.Xml
  summary: When overridden in a derived class, resolves a namespace prefix in the current element's scope.
  remarks: "In the following XML string, if the reader is positioned on the `href` attribute, the prefix `a` is resolved by calling `reader.LookupNamespace(\"a\")`. The returned string is `urn:456`.  \n  \n```  \n<root xmlns:a=\"urn:456\">  \n  <item>  \n  <ref href=\"a:b\"/>  \n  </item>  \n </root>  \n```"
  syntax:
    content: public abstract string LookupNamespace (string prefix);
    parameters:
    - id: prefix
      type: System.String
      description: The prefix whose namespace URI you want to resolve. To match the default namespace, pass an empty string.
    return:
      type: System.String
      description: The namespace URI to which the prefix maps or `null` if no matching prefix is found.
  overload: System.Xml.XmlReader.LookupNamespace*
  exceptions:
  - type: System.InvalidOperationException
    commentId: T:System.InvalidOperationException
    description: An <xref href="System.Xml.XmlReader"></xref> method was called before a previous asynchronous operation finished. In this case, <xref href="System.InvalidOperationException"></xref> is thrown with the message "An asynchronous operation is already in progress."
  version:
  - netcore-1.0
  - netcore-1.1
  - netcore-2.0
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  - netstandard-1.0
  - netstandard-1.1
  - netstandard-1.2
  - netstandard-1.3
  - netstandard-1.4
  - netstandard-1.6
  - netstandard-2.0
  - xamarinandroid-7.1
  - xamarinios-10.8
  - xamarinmac-3.0
  monikers:
  - netcore-1.0
  - netcore-1.1
  - netcore-2.0
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  - netstandard-1.0
  - netstandard-1.1
  - netstandard-1.2
  - netstandard-1.3
  - netstandard-1.4
  - netstandard-1.6
  - netstandard-2.0
  - xamarinandroid-7.1
  - xamarinios-10.8
  - xamarinmac-3.0
  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Xml/XmlReader.xml
  ms.technology:
  - dotnet-standard
  author: mairaw
  ms.author: mairaw
  manager: wpickett
- uid: System.Xml.XmlReader.MoveToAttribute(System.Int32)
  commentId: M:System.Xml.XmlReader.MoveToAttribute(System.Int32)
  id: MoveToAttribute(System.Int32)
  parent: System.Xml.XmlReader
  langs:
  - csharp
  name: MoveToAttribute(Int32)
  nameWithType: XmlReader.MoveToAttribute(Int32)
  fullName: XmlReader.MoveToAttribute(Int32)
  type: Method
  assemblies:
  - System.Xml.ReaderWriter
  - System.Xml
  - netstandard
  namespace: System.Xml
  summary: When overridden in a derived class, moves to the attribute with the specified index.
  remarks: ''
  example:
  - "The following example displays all attributes on the current node.  \n  \n [!code-csharp[XmlReaderBasic#4](~/samples/snippets/csharp/VS_Snippets_Data/XmlReaderBasic/CS/XmlReader_Basic.cs#4)]\n [!code-vb[XmlReaderBasic#4](~/samples/snippets/visualbasic/VS_Snippets_Data/XmlReaderBasic/VB/xmlreader_basic.vb#4)]"
  syntax:
    content: public virtual void MoveToAttribute (int i);
    parameters:
    - id: i
      type: System.Int32
      description: The index of the attribute.
  overload: System.Xml.XmlReader.MoveToAttribute*
  exceptions:
  - type: System.InvalidOperationException
    commentId: T:System.InvalidOperationException
    description: An <xref href="System.Xml.XmlReader"></xref> method was called before a previous asynchronous operation finished. In this case, <xref href="System.InvalidOperationException"></xref> is thrown with the message "An asynchronous operation is already in progress."
  - type: System.ArgumentOutOfRangeException
    commentId: T:System.ArgumentOutOfRangeException
    description: The parameter has a negative value.
  version:
  - netcore-1.0
  - netcore-1.1
  - netcore-2.0
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  - netstandard-1.0
  - netstandard-1.1
  - netstandard-1.2
  - netstandard-1.3
  - netstandard-1.4
  - netstandard-1.6
  - netstandard-2.0
  - xamarinandroid-7.1
  - xamarinios-10.8
  - xamarinmac-3.0
  monikers:
  - netcore-1.0
  - netcore-1.1
  - netcore-2.0
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  - netstandard-1.0
  - netstandard-1.1
  - netstandard-1.2
  - netstandard-1.3
  - netstandard-1.4
  - netstandard-1.6
  - netstandard-2.0
  - xamarinandroid-7.1
  - xamarinios-10.8
  - xamarinmac-3.0
  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Xml/XmlReader.xml
  ms.technology:
  - dotnet-standard
  author: mairaw
  ms.author: mairaw
  manager: wpickett
- uid: System.Xml.XmlReader.MoveToAttribute(System.String)
  commentId: M:System.Xml.XmlReader.MoveToAttribute(System.String)
  id: MoveToAttribute(System.String)
  parent: System.Xml.XmlReader
  langs:
  - csharp
  name: MoveToAttribute(String)
  nameWithType: XmlReader.MoveToAttribute(String)
  fullName: XmlReader.MoveToAttribute(String)
  type: Method
  assemblies:
  - System.Xml.ReaderWriter
  - System.Xml
  - netstandard
  namespace: System.Xml
  summary: When overridden in a derived class, moves to the attribute with the specified <xref href="System.Xml.XmlReader.Name"></xref>.
  remarks: After calling `MoveToAttribute`, the <xref:System.Xml.XmlReader.Name%2A>, <xref:System.Xml.XmlReader.NamespaceURI%2A>, and <xref:System.Xml.XmlReader.Prefix%2A> properties reflect the properties of that attribute.
  syntax:
    content: public abstract bool MoveToAttribute (string name);
    parameters:
    - id: name
      type: System.String
      description: The qualified name of the attribute.
    return:
      type: System.Boolean
      description: "`true` if the attribute is found; otherwise, `false`. If `false`, the reader's position does not change."
  overload: System.Xml.XmlReader.MoveToAttribute*
  exceptions:
  - type: System.InvalidOperationException
    commentId: T:System.InvalidOperationException
    description: An <xref href="System.Xml.XmlReader"></xref> method was called before a previous asynchronous operation finished. In this case, <xref href="System.InvalidOperationException"></xref> is thrown with the message "An asynchronous operation is already in progress."
  - type: System.ArgumentException
    commentId: T:System.ArgumentException
    description: The parameter is an empty string.
  version:
  - netcore-1.0
  - netcore-1.1
  - netcore-2.0
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  - netstandard-1.0
  - netstandard-1.1
  - netstandard-1.2
  - netstandard-1.3
  - netstandard-1.4
  - netstandard-1.6
  - netstandard-2.0
  - xamarinandroid-7.1
  - xamarinios-10.8
  - xamarinmac-3.0
  monikers:
  - netcore-1.0
  - netcore-1.1
  - netcore-2.0
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  - netstandard-1.0
  - netstandard-1.1
  - netstandard-1.2
  - netstandard-1.3
  - netstandard-1.4
  - netstandard-1.6
  - netstandard-2.0
  - xamarinandroid-7.1
  - xamarinios-10.8
  - xamarinmac-3.0
  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Xml/XmlReader.xml
  ms.technology:
  - dotnet-standard
  author: mairaw
  ms.author: mairaw
  manager: wpickett
- uid: System.Xml.XmlReader.MoveToAttribute(System.String,System.String)
  commentId: M:System.Xml.XmlReader.MoveToAttribute(System.String,System.String)
  id: MoveToAttribute(System.String,System.String)
  parent: System.Xml.XmlReader
  langs:
  - csharp
  name: MoveToAttribute(String, String)
  nameWithType: XmlReader.MoveToAttribute(String, String)
  fullName: XmlReader.MoveToAttribute(String, String)
  type: Method
  assemblies:
  - System.Xml.ReaderWriter
  - System.Xml
  - netstandard
  namespace: System.Xml
  summary: When overridden in a derived class, moves to the attribute with the specified <xref href="System.Xml.XmlReader.LocalName"></xref> and <xref href="System.Xml.XmlReader.NamespaceURI"></xref>.
  remarks: After calling `MoveToAttribute`, the <xref:System.Xml.XmlReader.Name%2A>, <xref:System.Xml.XmlReader.NamespaceURI%2A>, and <xref:System.Xml.XmlReader.Prefix%2A> properties reflect the properties of that attribute.
  syntax:
    content: public abstract bool MoveToAttribute (string name, string ns);
    parameters:
    - id: name
      type: System.String
      description: The local name of the attribute.
    - id: ns
      type: System.String
      description: The namespace URI of the attribute.
    return:
      type: System.Boolean
      description: "`true` if the attribute is found; otherwise, `false`. If `false`, the reader's position does not change."
  overload: System.Xml.XmlReader.MoveToAttribute*
  exceptions:
  - type: System.InvalidOperationException
    commentId: T:System.InvalidOperationException
    description: An <xref href="System.Xml.XmlReader"></xref> method was called before a previous asynchronous operation finished. In this case, <xref href="System.InvalidOperationException"></xref> is thrown with the message "An asynchronous operation is already in progress."
  - type: System.ArgumentNullException
    commentId: T:System.ArgumentNullException
    description: Both parameter values are `null`.
  version:
  - netcore-1.0
  - netcore-1.1
  - netcore-2.0
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  - netstandard-1.0
  - netstandard-1.1
  - netstandard-1.2
  - netstandard-1.3
  - netstandard-1.4
  - netstandard-1.6
  - netstandard-2.0
  - xamarinandroid-7.1
  - xamarinios-10.8
  - xamarinmac-3.0
  monikers:
  - netcore-1.0
  - netcore-1.1
  - netcore-2.0
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  - netstandard-1.0
  - netstandard-1.1
  - netstandard-1.2
  - netstandard-1.3
  - netstandard-1.4
  - netstandard-1.6
  - netstandard-2.0
  - xamarinandroid-7.1
  - xamarinios-10.8
  - xamarinmac-3.0
  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Xml/XmlReader.xml
  ms.technology:
  - dotnet-standard
  author: mairaw
  ms.author: mairaw
  manager: wpickett
- uid: System.Xml.XmlReader.MoveToContent
  commentId: M:System.Xml.XmlReader.MoveToContent
  id: MoveToContent
  parent: System.Xml.XmlReader
  langs:
  - csharp
  name: MoveToContent()
  nameWithType: XmlReader.MoveToContent()
  fullName: XmlReader.MoveToContent()
  type: Method
  assemblies:
  - System.Xml.ReaderWriter
  - System.Xml
  - netstandard
  namespace: System.Xml
  summary: 'Checks whether the current node is a content (non-white space text, `CDATA`, `Element`, `EndElement`, `EntityReference`, or `EndEntity`) node. If the node is not a content node, the reader skips ahead to the next content node or end of file. It skips over nodes of the following type: `ProcessingInstruction`, `DocumentType`, `Comment`, `Whitespace`, or `SignificantWhitespace`.'
  remarks: "If the current node is an attribute node, this method moves the reader back to the element that owns the attribute.  \n  \n For the asynchronous version of this method, see <xref:System.Xml.XmlReader.MoveToContentAsync%2A>."
  example:
  - "This is useful when you want to write code that can skip over random XML markup without breaking. For example, suppose you have the following code:  \n  \n [!code-cpp[Classic WebData XmlReader.MoveToContent Example#1](~/samples/snippets/cpp/VS_Snippets_Data/Classic WebData XmlReader.MoveToContent Example/CPP/source.cpp#1)]\n [!code-csharp[Classic WebData XmlReader.MoveToContent Example#1](~/samples/snippets/csharp/VS_Snippets_Data/Classic WebData XmlReader.MoveToContent Example/CS/source.cs#1)]\n [!code-vb[Classic WebData XmlReader.MoveToContent Example#1](~/samples/snippets/visualbasic/VS_Snippets_Data/Classic WebData XmlReader.MoveToContent Example/VB/source.vb#1)]  \n  \n This code can handle the following inputs without breaking:  \n  \n```  \n<price>123.4</price>  \n```  \n  \n and  \n  \n```  \n<?xml version=\"1.0\"><!DOCTYPE price SYSTEM  \n  \"abc\"><price>123.4</price>  \n```  \n  \n and  \n  \n```  \n<?xml version=\"1.0\"><!DOCTYPE price SYSTEM \"abc\"  \n  [<!ENTTIY p  \n  \"123.4\">]><price>&p;</price>  \n```  \n  \n and  \n  \n```  \n<!-- some test comment --><?processing  \n  instruction?><price>123.4</price>  \n```"
  syntax:
    content: public virtual System.Xml.XmlNodeType MoveToContent ();
    parameters: []
    return:
      type: System.Xml.XmlNodeType
      description: The <xref href="System.Xml.XmlReader.NodeType"></xref> of the current node found by the method or `XmlNodeType.None` if the reader has reached the end of the input stream.
  overload: System.Xml.XmlReader.MoveToContent*
  exceptions:
  - type: System.Xml.XmlException
    commentId: T:System.Xml.XmlException
    description: Incorrect XML encountered in the input stream.
  - type: System.InvalidOperationException
    commentId: T:System.InvalidOperationException
    description: An <xref href="System.Xml.XmlReader"></xref> method was called before a previous asynchronous operation finished. In this case, <xref href="System.InvalidOperationException"></xref> is thrown with the message "An asynchronous operation is already in progress."
  version:
  - netcore-1.0
  - netcore-1.1
  - netcore-2.0
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  - netstandard-1.0
  - netstandard-1.1
  - netstandard-1.2
  - netstandard-1.3
  - netstandard-1.4
  - netstandard-1.6
  - netstandard-2.0
  - xamarinandroid-7.1
  - xamarinios-10.8
  - xamarinmac-3.0
  monikers:
  - netcore-1.0
  - netcore-1.1
  - netcore-2.0
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  - netstandard-1.0
  - netstandard-1.1
  - netstandard-1.2
  - netstandard-1.3
  - netstandard-1.4
  - netstandard-1.6
  - netstandard-2.0
  - xamarinandroid-7.1
  - xamarinios-10.8
  - xamarinmac-3.0
  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Xml/XmlReader.xml
  ms.technology:
  - dotnet-standard
  author: mairaw
  ms.author: mairaw
  manager: wpickett
- uid: System.Xml.XmlReader.MoveToContentAsync
  commentId: M:System.Xml.XmlReader.MoveToContentAsync
  id: MoveToContentAsync
  parent: System.Xml.XmlReader
  langs:
  - csharp
  name: MoveToContentAsync()
  nameWithType: XmlReader.MoveToContentAsync()
  fullName: XmlReader.MoveToContentAsync()
  type: Method
  assemblies:
  - System.Xml.ReaderWriter
  - System.Xml
  - netstandard
  namespace: System.Xml
  summary: Asynchronously checks whether the current node is a content node. If the node is not a content node, the reader skips ahead to the next content node or end of file.
  remarks: This is the asynchronous version of <xref:System.Xml.XmlReader.MoveToContent%2A>, with the same functionality. To use this method, you must set the <xref:System.Xml.XmlReaderSettings.Async%2A> flag to `true`.
  syntax:
    content: public virtual System.Threading.Tasks.Task<System.Xml.XmlNodeType> MoveToContentAsync ();
    parameters: []
    return:
      type: System.Threading.Tasks.Task{System.Xml.XmlNodeType}
      description: The <xref href="System.Xml.XmlReader.NodeType"></xref> of the current node found by the method or `XmlNodeType.None` if the reader has reached the end of the input stream.
  overload: System.Xml.XmlReader.MoveToContentAsync*
  exceptions:
  - type: System.InvalidOperationException
    commentId: T:System.InvalidOperationException
    description: An <xref href="System.Xml.XmlReader"></xref> asynchronous method was called without setting the <xref href="System.Xml.XmlReaderSettings.Async"></xref> flag to `true`. In this case, <xref href="System.InvalidOperationException"></xref> is thrown with the message "Set XmlReaderSettings.Async to true if you want to use Async Methods."
  attributes: []
  version:
  - netcore-1.0
  - netcore-1.1
  - netcore-2.0
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  - netstandard-1.0
  - netstandard-1.1
  - netstandard-1.2
  - netstandard-1.3
  - netstandard-1.4
  - netstandard-1.6
  - netstandard-2.0
  - xamarinandroid-7.1
  - xamarinios-10.8
  - xamarinmac-3.0
  monikers:
  - netcore-1.0
  - netcore-1.1
  - netcore-2.0
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  - netstandard-1.0
  - netstandard-1.1
  - netstandard-1.2
  - netstandard-1.3
  - netstandard-1.4
  - netstandard-1.6
  - netstandard-2.0
  - xamarinandroid-7.1
  - xamarinios-10.8
  - xamarinmac-3.0
  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Xml/XmlReader.xml
  ms.technology:
  - dotnet-standard
  author: mairaw
  ms.author: mairaw
  manager: wpickett
- uid: System.Xml.XmlReader.MoveToElement
  commentId: M:System.Xml.XmlReader.MoveToElement
  id: MoveToElement
  parent: System.Xml.XmlReader
  langs:
  - csharp
  name: MoveToElement()
  nameWithType: XmlReader.MoveToElement()
  fullName: XmlReader.MoveToElement()
  type: Method
  assemblies:
  - System.Xml.ReaderWriter
  - System.Xml
  - netstandard
  namespace: System.Xml
  summary: When overridden in a derived class, moves to the element that contains the current attribute node.
  remarks: 'Use this method to return to an element after navigating through its attributes. This method moves the reader to one of the following node types: `Element`, `DocumentType`, or `XmlDeclaration`.'
  example:
  - "The following example displays all attributes on the current node.  \n  \n [!code-csharp[XmlReaderBasic#4](~/samples/snippets/csharp/VS_Snippets_Data/XmlReaderBasic/CS/XmlReader_Basic.cs#4)]\n [!code-vb[XmlReaderBasic#4](~/samples/snippets/visualbasic/VS_Snippets_Data/XmlReaderBasic/VB/xmlreader_basic.vb#4)]"
  syntax:
    content: public abstract bool MoveToElement ();
    parameters: []
    return:
      type: System.Boolean
      description: '`true` if the reader is positioned on an attribute (the reader moves to the element that owns the attribute); `false` if the reader is not positioned on an attribute (the position of the reader does not change).'
  overload: System.Xml.XmlReader.MoveToElement*
  exceptions:
  - type: System.InvalidOperationException
    commentId: T:System.InvalidOperationException
    description: An <xref href="System.Xml.XmlReader"></xref> method was called before a previous asynchronous operation finished. In this case, <xref href="System.InvalidOperationException"></xref> is thrown with the message "An asynchronous operation is already in progress."
  version:
  - netcore-1.0
  - netcore-1.1
  - netcore-2.0
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  - netstandard-1.0
  - netstandard-1.1
  - netstandard-1.2
  - netstandard-1.3
  - netstandard-1.4
  - netstandard-1.6
  - netstandard-2.0
  - xamarinandroid-7.1
  - xamarinios-10.8
  - xamarinmac-3.0
  monikers:
  - netcore-1.0
  - netcore-1.1
  - netcore-2.0
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  - netstandard-1.0
  - netstandard-1.1
  - netstandard-1.2
  - netstandard-1.3
  - netstandard-1.4
  - netstandard-1.6
  - netstandard-2.0
  - xamarinandroid-7.1
  - xamarinios-10.8
  - xamarinmac-3.0
  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Xml/XmlReader.xml
  ms.technology:
  - dotnet-standard
  author: mairaw
  ms.author: mairaw
  manager: wpickett
- uid: System.Xml.XmlReader.MoveToFirstAttribute
  commentId: M:System.Xml.XmlReader.MoveToFirstAttribute
  id: MoveToFirstAttribute
  parent: System.Xml.XmlReader
  langs:
  - csharp
  name: MoveToFirstAttribute()
  nameWithType: XmlReader.MoveToFirstAttribute()
  fullName: XmlReader.MoveToFirstAttribute()
  type: Method
  assemblies:
  - System.Xml.ReaderWriter
  - System.Xml
  - netstandard
  namespace: System.Xml
  summary: When overridden in a derived class, moves to the first attribute.
  remarks: ''
  example:
  - "The following example gets the value of the first attribute.  \n  \n [!code-csharp[XmlReaderBasic#5](~/samples/snippets/csharp/VS_Snippets_Data/XmlReaderBasic/CS/XmlReader_Basic.cs#5)]\n [!code-vb[XmlReaderBasic#5](~/samples/snippets/visualbasic/VS_Snippets_Data/XmlReaderBasic/VB/xmlreader_basic.vb#5)]"
  syntax:
    content: public abstract bool MoveToFirstAttribute ();
    parameters: []
    return:
      type: System.Boolean
      description: '`true` if an attribute exists (the reader moves to the first attribute); otherwise, `false` (the position of the reader does not change).'
  overload: System.Xml.XmlReader.MoveToFirstAttribute*
  exceptions:
  - type: System.InvalidOperationException
    commentId: T:System.InvalidOperationException
    description: An <xref href="System.Xml.XmlReader"></xref> method was called before a previous asynchronous operation finished. In this case, <xref href="System.InvalidOperationException"></xref> is thrown with the message "An asynchronous operation is already in progress."
  version:
  - netcore-1.0
  - netcore-1.1
  - netcore-2.0
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  - netstandard-1.0
  - netstandard-1.1
  - netstandard-1.2
  - netstandard-1.3
  - netstandard-1.4
  - netstandard-1.6
  - netstandard-2.0
  - xamarinandroid-7.1
  - xamarinios-10.8
  - xamarinmac-3.0
  monikers:
  - netcore-1.0
  - netcore-1.1
  - netcore-2.0
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  - netstandard-1.0
  - netstandard-1.1
  - netstandard-1.2
  - netstandard-1.3
  - netstandard-1.4
  - netstandard-1.6
  - netstandard-2.0
  - xamarinandroid-7.1
  - xamarinios-10.8
  - xamarinmac-3.0
  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Xml/XmlReader.xml
  ms.technology:
  - dotnet-standard
  author: mairaw
  ms.author: mairaw
  manager: wpickett
- uid: System.Xml.XmlReader.MoveToNextAttribute
  commentId: M:System.Xml.XmlReader.MoveToNextAttribute
  id: MoveToNextAttribute
  parent: System.Xml.XmlReader
  langs:
  - csharp
  name: MoveToNextAttribute()
  nameWithType: XmlReader.MoveToNextAttribute()
  fullName: XmlReader.MoveToNextAttribute()
  type: Method
  assemblies:
  - System.Xml.ReaderWriter
  - System.Xml
  - netstandard
  namespace: System.Xml
  summary: When overridden in a derived class, moves to the next attribute.
  remarks: If the current node is an element node, this method is equivalent to <xref:System.Xml.XmlReader.MoveToFirstAttribute%2A>. If `MoveToNextAttribute` returns `true`, the reader moves to the next attribute; otherwise, the position of the reader does not change.
  example:
  - "The following example displays all attributes on the current node.  \n  \n [!code-csharp[XmlReaderBasic#6](~/samples/snippets/csharp/VS_Snippets_Data/XmlReaderBasic/CS/XmlReader_Basic.cs#6)]\n [!code-vb[XmlReaderBasic#6](~/samples/snippets/visualbasic/VS_Snippets_Data/XmlReaderBasic/VB/xmlreader_basic.vb#6)]"
  syntax:
    content: public abstract bool MoveToNextAttribute ();
    parameters: []
    return:
      type: System.Boolean
      description: '`true` if there is a next attribute; `false` if there are no more attributes.'
  overload: System.Xml.XmlReader.MoveToNextAttribute*
  exceptions:
  - type: System.InvalidOperationException
    commentId: T:System.InvalidOperationException
    description: An <xref href="System.Xml.XmlReader"></xref> method was called before a previous asynchronous operation finished. In this case, <xref href="System.InvalidOperationException"></xref> is thrown with the message "An asynchronous operation is already in progress."
  version:
  - netcore-1.0
  - netcore-1.1
  - netcore-2.0
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  - netstandard-1.0
  - netstandard-1.1
  - netstandard-1.2
  - netstandard-1.3
  - netstandard-1.4
  - netstandard-1.6
  - netstandard-2.0
  - xamarinandroid-7.1
  - xamarinios-10.8
  - xamarinmac-3.0
  monikers:
  - netcore-1.0
  - netcore-1.1
  - netcore-2.0
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  - netstandard-1.0
  - netstandard-1.1
  - netstandard-1.2
  - netstandard-1.3
  - netstandard-1.4
  - netstandard-1.6
  - netstandard-2.0
  - xamarinandroid-7.1
  - xamarinios-10.8
  - xamarinmac-3.0
  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Xml/XmlReader.xml
  ms.technology:
  - dotnet-standard
  author: mairaw
  ms.author: mairaw
  manager: wpickett
- uid: System.Xml.XmlReader.Name
  commentId: P:System.Xml.XmlReader.Name
  id: Name
  parent: System.Xml.XmlReader
  langs:
  - csharp
  name: Name
  nameWithType: XmlReader.Name
  fullName: XmlReader.Name
  type: Property
  assemblies:
  - System.Xml.ReaderWriter
  - System.Xml
  - netstandard
  namespace: System.Xml
  summary: When overridden in a derived class, gets the qualified name of the current node.
  remarks: ''
  example:
  - "The following example reads an XML file and displays each of the nodes.  \n  \n [!code-csharp[XmlReaderBasic#8](~/samples/snippets/csharp/VS_Snippets_Data/XmlReaderBasic/CS/XmlReader_Basic.cs#8)]\n [!code-vb[XmlReaderBasic#8](~/samples/snippets/visualbasic/VS_Snippets_Data/XmlReaderBasic/VB/xmlreader_basic.vb#8)]  \n  \n The sample uses the `items.xml` file.  \n  \n [!code-xml[XML_Core_Files#2](~/samples/snippets/xml/VS_Snippets_Data/XML_Core_Files/XML/items.xml#2)]"
  syntax:
    content: public virtual string Name { get; }
    return:
      type: System.String
      description: "The qualified name of the current node. For example, `Name` is `bk:book` for the element <code><bk:book></code>.  \n  \n The name returned is dependent on the <xref href=\"System.Xml.XmlReader.NodeType\"></xref> of the node. The following node types return the listed values. All other node types return an empty string.  \n  \n <table><thead><tr><th> Node type  \n  \n </th><th> Name  \n  \n </th></tr></thead><tbody><tr><td>`Attribute`</td><td> The name of the attribute.  \n  \n </td></tr><tr><td>`DocumentType`</td><td> The document type name.  \n  \n </td></tr><tr><td>`Element`</td><td> The tag name.  \n  \n </td></tr><tr><td>`EntityReference`</td><td> The name of the entity referenced.  \n  \n </td></tr><tr><td>`ProcessingInstruction`</td><td> The target of the processing instruction.  \n  \n </td></tr><tr><td>`XmlDeclaration`</td><td> The literal string `xml`.  \n  \n </td></tr></tbody></table>"
  overload: System.Xml.XmlReader.Name*
  exceptions:
  - type: System.InvalidOperationException
    commentId: T:System.InvalidOperationException
    description: An <xref href="System.Xml.XmlReader"></xref> method was called before a previous asynchronous operation finished. In this case, <xref href="System.InvalidOperationException"></xref> is thrown with the message "An asynchronous operation is already in progress."
  version:
  - netcore-1.0
  - netcore-1.1
  - netcore-2.0
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  - netstandard-1.0
  - netstandard-1.1
  - netstandard-1.2
  - netstandard-1.3
  - netstandard-1.4
  - netstandard-1.6
  - netstandard-2.0
  - xamarinandroid-7.1
  - xamarinios-10.8
  - xamarinmac-3.0
  monikers:
  - netcore-1.0
  - netcore-1.1
  - netcore-2.0
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  - netstandard-1.0
  - netstandard-1.1
  - netstandard-1.2
  - netstandard-1.3
  - netstandard-1.4
  - netstandard-1.6
  - netstandard-2.0
  - xamarinandroid-7.1
  - xamarinios-10.8
  - xamarinmac-3.0
  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Xml/XmlReader.xml
  ms.technology:
  - dotnet-standard
  author: mairaw
  ms.author: mairaw
  manager: wpickett
- uid: System.Xml.XmlReader.NamespaceURI
  commentId: P:System.Xml.XmlReader.NamespaceURI
  id: NamespaceURI
  parent: System.Xml.XmlReader
  langs:
  - csharp
  name: NamespaceURI
  nameWithType: XmlReader.NamespaceURI
  fullName: XmlReader.NamespaceURI
  type: Property
  assemblies:
  - System.Xml.ReaderWriter
  - System.Xml
  - netstandard
  namespace: System.Xml
  summary: When overridden in a derived class, gets the namespace URI (as defined in the W3C Namespace specification) of the node on which the reader is positioned.
  remarks: This property is relevant to `Element` and `Attribute` nodes only.
  example:
  - "The following example displays the local name of each node, and, if they exist, the prefix and namespace URI.  \n  \n [!code-csharp[XmlReaderBasic#9](~/samples/snippets/csharp/VS_Snippets_Data/XmlReaderBasic/CS/XmlReader_Basic.cs#9)]\n [!code-vb[XmlReaderBasic#9](~/samples/snippets/visualbasic/VS_Snippets_Data/XmlReaderBasic/VB/xmlreader_basic.vb#9)]  \n  \n The example uses the file, book2.xml, as input.  \n  \n [!code-xml[XML_Core_Files#5](~/samples/snippets/xml/VS_Snippets_Data/XML_Core_Files/XML/book2.xml#5)]"
  syntax:
    content: public abstract string NamespaceURI { get; }
    return:
      type: System.String
      description: The namespace URI of the current node; otherwise an empty string.
  overload: System.Xml.XmlReader.NamespaceURI*
  exceptions:
  - type: System.InvalidOperationException
    commentId: T:System.InvalidOperationException
    description: An <xref href="System.Xml.XmlReader"></xref> method was called before a previous asynchronous operation finished. In this case, <xref href="System.InvalidOperationException"></xref> is thrown with the message "An asynchronous operation is already in progress."
  version:
  - netcore-1.0
  - netcore-1.1
  - netcore-2.0
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  - netstandard-1.0
  - netstandard-1.1
  - netstandard-1.2
  - netstandard-1.3
  - netstandard-1.4
  - netstandard-1.6
  - netstandard-2.0
  - xamarinandroid-7.1
  - xamarinios-10.8
  - xamarinmac-3.0
  monikers:
  - netcore-1.0
  - netcore-1.1
  - netcore-2.0
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  - netstandard-1.0
  - netstandard-1.1
  - netstandard-1.2
  - netstandard-1.3
  - netstandard-1.4
  - netstandard-1.6
  - netstandard-2.0
  - xamarinandroid-7.1
  - xamarinios-10.8
  - xamarinmac-3.0
  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Xml/XmlReader.xml
  ms.technology:
  - dotnet-standard
  author: mairaw
  ms.author: mairaw
  manager: wpickett
- uid: System.Xml.XmlReader.NameTable
  commentId: P:System.Xml.XmlReader.NameTable
  id: NameTable
  parent: System.Xml.XmlReader
  langs:
  - csharp
  name: NameTable
  nameWithType: XmlReader.NameTable
  fullName: XmlReader.NameTable
  type: Property
  assemblies:
  - System.Xml.ReaderWriter
  - System.Xml
  - netstandard
  namespace: System.Xml
  summary: When overridden in a derived class, gets the <xref href="System.Xml.XmlNameTable"></xref> associated with this implementation.
  remarks: All node and attribute names returned from <xref:System.Xml.XmlReader> are atomized using the `NameTable`. When the same name is returned multiple times (for example, `Customer`), then the same `String` object will be returned for that name. This makes it possible for you to write efficient code that does object comparisons on these strings instead of expensive string comparisons.
  syntax:
    content: public abstract System.Xml.XmlNameTable NameTable { get; }
    return:
      type: System.Xml.XmlNameTable
      description: The `XmlNameTable` enabling you to get the atomized version of a string within the node.
  overload: System.Xml.XmlReader.NameTable*
  exceptions:
  - type: System.InvalidOperationException
    commentId: T:System.InvalidOperationException
    description: An <xref href="System.Xml.XmlReader"></xref> method was called before a previous asynchronous operation finished. In this case, <xref href="System.InvalidOperationException"></xref> is thrown with the message "An asynchronous operation is already in progress."
  version:
  - netcore-1.0
  - netcore-1.1
  - netcore-2.0
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  - netstandard-1.0
  - netstandard-1.1
  - netstandard-1.2
  - netstandard-1.3
  - netstandard-1.4
  - netstandard-1.6
  - netstandard-2.0
  - xamarinandroid-7.1
  - xamarinios-10.8
  - xamarinmac-3.0
  monikers:
  - netcore-1.0
  - netcore-1.1
  - netcore-2.0
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  - netstandard-1.0
  - netstandard-1.1
  - netstandard-1.2
  - netstandard-1.3
  - netstandard-1.4
  - netstandard-1.6
  - netstandard-2.0
  - xamarinandroid-7.1
  - xamarinios-10.8
  - xamarinmac-3.0
  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Xml/XmlReader.xml
  ms.technology:
  - dotnet-standard
  author: mairaw
  ms.author: mairaw
  manager: wpickett
- uid: System.Xml.XmlReader.NodeType
  commentId: P:System.Xml.XmlReader.NodeType
  id: NodeType
  parent: System.Xml.XmlReader
  langs:
  - csharp
  name: NodeType
  nameWithType: XmlReader.NodeType
  fullName: XmlReader.NodeType
  type: Property
  assemblies:
  - System.Xml.ReaderWriter
  - System.Xml
  - netstandard
  namespace: System.Xml
  summary: When overridden in a derived class, gets the type of the current node.
  remarks: ''
  example:
  - "The following example reads an XML file and displays each of the nodes.  \n  \n [!code-csharp[XmlReaderBasic#8](~/samples/snippets/csharp/VS_Snippets_Data/XmlReaderBasic/CS/XmlReader_Basic.cs#8)]\n [!code-vb[XmlReaderBasic#8](~/samples/snippets/visualbasic/VS_Snippets_Data/XmlReaderBasic/VB/xmlreader_basic.vb#8)]  \n  \n The sample uses the `items.xml` file.  \n  \n [!code-xml[XML_Core_Files#2](~/samples/snippets/xml/VS_Snippets_Data/XML_Core_Files/XML/items.xml#2)]"
  syntax:
    content: public abstract System.Xml.XmlNodeType NodeType { get; }
    return:
      type: System.Xml.XmlNodeType
      description: One of the enumeration values that specify the type of the current node.
  overload: System.Xml.XmlReader.NodeType*
  exceptions:
  - type: System.InvalidOperationException
    commentId: T:System.InvalidOperationException
    description: An <xref href="System.Xml.XmlReader"></xref> method was called before a previous asynchronous operation finished. In this case, <xref href="System.InvalidOperationException"></xref> is thrown with the message "An asynchronous operation is already in progress."
  version:
  - netcore-1.0
  - netcore-1.1
  - netcore-2.0
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  - netstandard-1.0
  - netstandard-1.1
  - netstandard-1.2
  - netstandard-1.3
  - netstandard-1.4
  - netstandard-1.6
  - netstandard-2.0
  - xamarinandroid-7.1
  - xamarinios-10.8
  - xamarinmac-3.0
  monikers:
  - netcore-1.0
  - netcore-1.1
  - netcore-2.0
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  - netstandard-1.0
  - netstandard-1.1
  - netstandard-1.2
  - netstandard-1.3
  - netstandard-1.4
  - netstandard-1.6
  - netstandard-2.0
  - xamarinandroid-7.1
  - xamarinios-10.8
  - xamarinmac-3.0
  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Xml/XmlReader.xml
  ms.technology:
  - dotnet-standard
  author: mairaw
  ms.author: mairaw
  manager: wpickett
- uid: System.Xml.XmlReader.Prefix
  commentId: P:System.Xml.XmlReader.Prefix
  id: Prefix
  parent: System.Xml.XmlReader
  langs:
  - csharp
  name: Prefix
  nameWithType: XmlReader.Prefix
  fullName: XmlReader.Prefix
  type: Property
  assemblies:
  - System.Xml.ReaderWriter
  - System.Xml
  - netstandard
  namespace: System.Xml
  summary: When overridden in a derived class, gets the namespace prefix associated with the current node.
  remarks: ''
  example:
  - "The following example displays the local name of each node, and, if they exist, the prefix and namespace URI.  \n  \n [!code-csharp[XmlReaderBasic#9](~/samples/snippets/csharp/VS_Snippets_Data/XmlReaderBasic/CS/XmlReader_Basic.cs#9)]\n [!code-vb[XmlReaderBasic#9](~/samples/snippets/visualbasic/VS_Snippets_Data/XmlReaderBasic/VB/xmlreader_basic.vb#9)]  \n  \n The example uses the file, book2.xml, as input.  \n  \n [!code-xml[XML_Core_Files#5](~/samples/snippets/xml/VS_Snippets_Data/XML_Core_Files/XML/book2.xml#5)]"
  syntax:
    content: public abstract string Prefix { get; }
    return:
      type: System.String
      description: The namespace prefix associated with the current node.
  overload: System.Xml.XmlReader.Prefix*
  exceptions:
  - type: System.InvalidOperationException
    commentId: T:System.InvalidOperationException
    description: An <xref href="System.Xml.XmlReader"></xref> method was called before a previous asynchronous operation finished. In this case, <xref href="System.InvalidOperationException"></xref> is thrown with the message "An asynchronous operation is already in progress."
  version:
  - netcore-1.0
  - netcore-1.1
  - netcore-2.0
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  - netstandard-1.0
  - netstandard-1.1
  - netstandard-1.2
  - netstandard-1.3
  - netstandard-1.4
  - netstandard-1.6
  - netstandard-2.0
  - xamarinandroid-7.1
  - xamarinios-10.8
  - xamarinmac-3.0
  monikers:
  - netcore-1.0
  - netcore-1.1
  - netcore-2.0
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  - netstandard-1.0
  - netstandard-1.1
  - netstandard-1.2
  - netstandard-1.3
  - netstandard-1.4
  - netstandard-1.6
  - netstandard-2.0
  - xamarinandroid-7.1
  - xamarinios-10.8
  - xamarinmac-3.0
  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Xml/XmlReader.xml
  ms.technology:
  - dotnet-standard
  author: mairaw
  ms.author: mairaw
  manager: wpickett
- uid: System.Xml.XmlReader.QuoteChar
  commentId: P:System.Xml.XmlReader.QuoteChar
  id: QuoteChar
  parent: System.Xml.XmlReader
  langs:
  - csharp
  name: QuoteChar
  nameWithType: XmlReader.QuoteChar
  fullName: XmlReader.QuoteChar
  type: Property
  assemblies:
  - System.Xml
  - netstandard
  - System.Xml.ReaderWriter
  namespace: System.Xml
  summary: When overridden in a derived class, gets the quotation mark character used to enclose the value of an attribute node.
  remarks: This property applies only to an attribute node.
  syntax:
    content: public virtual char QuoteChar { get; }
    return:
      type: System.Char
      description: The quotation mark character (" or ') used to enclose the value of an attribute node.
  overload: System.Xml.XmlReader.QuoteChar*
  exceptions:
  - type: System.InvalidOperationException
    commentId: T:System.InvalidOperationException
    description: An <xref href="System.Xml.XmlReader"></xref> method was called before a previous asynchronous operation finished. In this case, <xref href="System.InvalidOperationException"></xref> is thrown with the message "An asynchronous operation is already in progress."
  version:
  - netcore-2.0
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  - netstandard-2.0
  - xamarinandroid-7.1
  - xamarinios-10.8
  - xamarinmac-3.0
  monikers:
  - netcore-2.0
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  - netstandard-2.0
  - xamarinandroid-7.1
  - xamarinios-10.8
  - xamarinmac-3.0
  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Xml/XmlReader.xml
  ms.technology:
  - dotnet-standard
  author: mairaw
  ms.author: mairaw
  manager: wpickett
- uid: System.Xml.XmlReader.Read
  commentId: M:System.Xml.XmlReader.Read
  id: Read
  parent: System.Xml.XmlReader
  langs:
  - csharp
  name: Read()
  nameWithType: XmlReader.Read()
  fullName: XmlReader.Read()
  type: Method
  assemblies:
  - System.Xml.ReaderWriter
  - System.Xml
  - netstandard
  namespace: System.Xml
  summary: When overridden in a derived class, reads the next node from the stream.
  remarks: "When an <xref:System.Xml.XmlReader> is first created and initialized, there is no information available. You must call <xref:System.Xml.XmlReader.Read%2A> to read the first node. The <xref:System.Xml.XmlReader.Read%2A> method sets the state of the XML reader to initiate <xref:System.Xml.ReadState> and moves through the XML file sequentially until it reaches the end of the file, at which point the method returns a value of `false`.  \n  \n This method requires at least four bytes from the data stream in order to begin parsing. If fewer than four bytes are returned and there is no more data in the stream, the method returns `false`. If there is more data in the stream, the method will block parsing until receipt of the fourth byte.  \n  \n For the asynchronous version of this method, see <xref:System.Xml.XmlReader.ReadAsync%2A>."
  example:
  - "The following example reads an XML file and displays each of the nodes.  \n  \n [!code-csharp[XmlReaderBasic#8](~/samples/snippets/csharp/VS_Snippets_Data/XmlReaderBasic/CS/XmlReader_Basic.cs#8)]\n [!code-vb[XmlReaderBasic#8](~/samples/snippets/visualbasic/VS_Snippets_Data/XmlReaderBasic/VB/xmlreader_basic.vb#8)]  \n  \n The sample uses the `items.xml` file.  \n  \n [!code-xml[XML_Core_Files#2](~/samples/snippets/xml/VS_Snippets_Data/XML_Core_Files/XML/items.xml#2)]  \n  \n **Output:**  \n  \n```  \n<Item>Test with an entity: 123</Item><Item>Test with a child element <more> stuff</Item><Item>Test with a CDATA section <![CDATA[<456>]]> def</Item><Item>Test with a char entity: A</Item><!-- Fourteen chars in this element.--><Item>1234567890ABCD</Item></Items>  \n```"
  syntax:
    content: public abstract bool Read ();
    parameters: []
    return:
      type: System.Boolean
      description: '`true` if the next node was read successfully; otherwise, `false`.'
  overload: System.Xml.XmlReader.Read*
  exceptions:
  - type: System.Xml.XmlException
    commentId: T:System.Xml.XmlException
    description: An error occurred while parsing the XML.
  - type: System.InvalidOperationException
    commentId: T:System.InvalidOperationException
    description: An <xref href="System.Xml.XmlReader"></xref> method was called before a previous asynchronous operation finished. In this case, <xref href="System.InvalidOperationException"></xref> is thrown with the message "An asynchronous operation is already in progress."
  version:
  - netcore-1.0
  - netcore-1.1
  - netcore-2.0
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  - netstandard-1.0
  - netstandard-1.1
  - netstandard-1.2
  - netstandard-1.3
  - netstandard-1.4
  - netstandard-1.6
  - netstandard-2.0
  - xamarinandroid-7.1
  - xamarinios-10.8
  - xamarinmac-3.0
  monikers:
  - netcore-1.0
  - netcore-1.1
  - netcore-2.0
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  - netstandard-1.0
  - netstandard-1.1
  - netstandard-1.2
  - netstandard-1.3
  - netstandard-1.4
  - netstandard-1.6
  - netstandard-2.0
  - xamarinandroid-7.1
  - xamarinios-10.8
  - xamarinmac-3.0
  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Xml/XmlReader.xml
  ms.technology:
  - dotnet-standard
  author: mairaw
  ms.author: mairaw
  manager: wpickett
- uid: System.Xml.XmlReader.ReadAsync
  commentId: M:System.Xml.XmlReader.ReadAsync
  id: ReadAsync
  parent: System.Xml.XmlReader
  langs:
  - csharp
  name: ReadAsync()
  nameWithType: XmlReader.ReadAsync()
  fullName: XmlReader.ReadAsync()
  type: Method
  assemblies:
  - System.Xml.ReaderWriter
  - System.Xml
  - netstandard
  namespace: System.Xml
  summary: Asynchronously reads the next node from the stream.
  remarks: This is the asynchronous version of <xref:System.Xml.XmlReader.Read%2A>, with the same functionality. To use this method, you must set the <xref:System.Xml.XmlReaderSettings.Async%2A> flag to `true`.
  syntax:
    content: public virtual System.Threading.Tasks.Task<bool> ReadAsync ();
    parameters: []
    return:
      type: System.Threading.Tasks.Task{System.Boolean}
      description: '`true` if the next node was read successfully; `false` if there are no more nodes to read.'
  overload: System.Xml.XmlReader.ReadAsync*
  exceptions:
  - type: System.InvalidOperationException
    commentId: T:System.InvalidOperationException
    description: An <xref href="System.Xml.XmlReader"></xref> asynchronous method was called without setting the <xref href="System.Xml.XmlReaderSettings.Async"></xref> flag to `true`. In this case, <xref href="System.InvalidOperationException"></xref> is thrown with the message "Set XmlReaderSettings.Async to true if you want to use Async Methods."
  version:
  - netcore-1.0
  - netcore-1.1
  - netcore-2.0
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  - netstandard-1.0
  - netstandard-1.1
  - netstandard-1.2
  - netstandard-1.3
  - netstandard-1.4
  - netstandard-1.6
  - netstandard-2.0
  - xamarinandroid-7.1
  - xamarinios-10.8
  - xamarinmac-3.0
  monikers:
  - netcore-1.0
  - netcore-1.1
  - netcore-2.0
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  - netstandard-1.0
  - netstandard-1.1
  - netstandard-1.2
  - netstandard-1.3
  - netstandard-1.4
  - netstandard-1.6
  - netstandard-2.0
  - xamarinandroid-7.1
  - xamarinios-10.8
  - xamarinmac-3.0
  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Xml/XmlReader.xml
  ms.technology:
  - dotnet-standard
  author: mairaw
  ms.author: mairaw
  manager: wpickett
- uid: System.Xml.XmlReader.ReadAttributeValue
  commentId: M:System.Xml.XmlReader.ReadAttributeValue
  id: ReadAttributeValue
  parent: System.Xml.XmlReader
  langs:
  - csharp
  name: ReadAttributeValue()
  nameWithType: XmlReader.ReadAttributeValue()
  fullName: XmlReader.ReadAttributeValue()
  type: Method
  assemblies:
  - System.Xml.ReaderWriter
  - System.Xml
  - netstandard
  namespace: System.Xml
  summary: When overridden in a derived class, parses the attribute value into one or more `Text`, `EntityReference`, or `EndEntity` nodes.
  remarks: Use this method after calling <xref:System.Xml.XmlReader.MoveToAttribute%2A> to read through the text or entity reference nodes that make up the attribute value. The <xref:System.Xml.XmlReader.Depth%2A> of the attribute value nodes is one plus the depth of the attribute node; it increments and decrements by one when you step into and out of general entity references.
  syntax:
    content: public abstract bool ReadAttributeValue ();
    parameters: []
    return:
      type: System.Boolean
      description: "`true` if there are nodes to return.  \n  \n `false` if the reader is not positioned on an attribute node when the initial call is made or if all the attribute values have been read.  \n  \n An empty attribute, such as, <code>misc=\"\"</code>, returns `true` with a single node with a value of `String.Empty`."
  overload: System.Xml.XmlReader.ReadAttributeValue*
  exceptions:
  - type: System.InvalidOperationException
    commentId: T:System.InvalidOperationException
    description: An <xref href="System.Xml.XmlReader"></xref> method was called before a previous asynchronous operation finished. In this case, <xref href="System.InvalidOperationException"></xref> is thrown with the message "An asynchronous operation is already in progress."
  version:
  - netcore-1.0
  - netcore-1.1
  - netcore-2.0
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  - netstandard-1.0
  - netstandard-1.1
  - netstandard-1.2
  - netstandard-1.3
  - netstandard-1.4
  - netstandard-1.6
  - netstandard-2.0
  - xamarinandroid-7.1
  - xamarinios-10.8
  - xamarinmac-3.0
  monikers:
  - netcore-1.0
  - netcore-1.1
  - netcore-2.0
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  - netstandard-1.0
  - netstandard-1.1
  - netstandard-1.2
  - netstandard-1.3
  - netstandard-1.4
  - netstandard-1.6
  - netstandard-2.0
  - xamarinandroid-7.1
  - xamarinios-10.8
  - xamarinmac-3.0
  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Xml/XmlReader.xml
  ms.technology:
  - dotnet-standard
  author: mairaw
  ms.author: mairaw
  manager: wpickett
- uid: System.Xml.XmlReader.ReadContentAs(System.Type,System.Xml.IXmlNamespaceResolver)
  commentId: M:System.Xml.XmlReader.ReadContentAs(System.Type,System.Xml.IXmlNamespaceResolver)
  id: ReadContentAs(System.Type,System.Xml.IXmlNamespaceResolver)
  parent: System.Xml.XmlReader
  langs:
  - csharp
  name: ReadContentAs(Type, IXmlNamespaceResolver)
  nameWithType: XmlReader.ReadContentAs(Type, IXmlNamespaceResolver)
  fullName: XmlReader.ReadContentAs(Type, IXmlNamespaceResolver)
  type: Method
  assemblies:
  - System.Xml.ReaderWriter
  - System.Xml
  - netstandard
  namespace: System.Xml
  summary: Reads the content as an object of the type specified.
  remarks: "This method reads the text content at the current reader position and converts it to the requested return type. Text, white space, significant white space and CDATA sections are concatenated. Comments and processing instructions are skipped and entity references are automatically resolved.  \n  \n This method is used to read, convert if necessary, and return atomic value items from the current node content. If the input type is a valid mappings for the type of the current node then an instance of the target type containing the value of the current node is returned. See the Remarks section in the<xref:System.Xml.XmlReader> referencepage for a list of the default mappings.  \n  \n For example, if you had the following XML text:  \n  \n```  \n<elem>123 <!-- comment --> <?pi my_text?> 456 <?pi another_pi?></elem>  \n```  \n  \n If the data is typed and a string array is supplied to the <xref:System.Xml.XmlReader.ReadContentAs%2A> method call, then the integer values are converted from strings according to the list of valid CLR type mappings.  \n  \n If the data is untyped and a string array is supplied to the <xref:System.Xml.XmlReader.ReadContentAs%2A> method call, then the content is parsed into separate strings. An array containing two strings is returned with the values \"123\" and \"456\". The spaces are not preserved from the content.  \n  \n In general when reading untyped data the content is parsed according to the supplied type. For example, if an integer array is supplied to the <xref:System.Xml.XmlReader.ReadContentAs%2A> method call then the string is parsed into an array of integers {123,456}.  \n  \n In the following example the XML text is not separated by spaces  \n  \n```  \n<elem>123<!-- comment --><?pi my_text?>456789<?pi another_pi?></elem>  \n```  \n  \n If the content is untyped and a string array is supplied to the <xref:System.Xml.XmlReader.ReadContentAs%2A> method call then an array containing one concatenated string is returned with the value \"123456789\".  \n  \n The following table describes how this method treats each node type.  \n  \n|XmlNodeType|Return value|Reader behavior|  \n|-----------------|------------------|---------------------|  \n|`Text`<br /><br /> `CDATA`<br /><br /> `Whitespace`<br /><br /> `SignificantWhitespace`<br /><br /> `EntityReference`<br /><br /> `EndEntity`|Concatenated content of text, CDATA, white space and significant white space nodes converted to the requested type.|Moves to the next start element or end element tag. Entity references are automatically expanded.|  \n|`Attribute`|Same as calling `XmlConvert.ToXxx` on the attribute value.|The reader remains in the current position.|  \n|`Comment`<br /><br /> `ProcessingInstruction`|Ignores the processing instruction (PI) or comment and reads the concatenated text content that follows the PI or comment.|Moves to the next start element or end element tag. Entity references are automatically expanded.|  \n|`EndElement`|An empty string.|The reader remains in the current position.|  \n|`Element`<br /><br /> `XmlDeclaration`<br /><br /> `None`<br /><br /> `Document`<br /><br /> `DocumentType`<br /><br /> `Notation`<br /><br /> `Entity`<br /><br /> `DocumentFragment`|An <xref:System.InvalidOperationException> is thrown.|Undefined, although typically the reader remains in the current position.|  \n  \n For more information, see the Remarks section of the <xref:System.Xml.XmlReader> reference page and the [W3C XML Schema Part 2: Datatypes](http://go.microsoft.com/fwlink/?LinkId=4871) recommendation.  \n  \n For the asynchronous version of this method, see <xref:System.Xml.XmlReader.ReadContentAsAsync%2A>."
  example:
  - "The following example uses the <xref:System.Xml.XmlReader.ReadContentAs%2A> method to return the contents of the colors element into an array of string objects.  \n  \n [!code-csharp[XmlReader.ReadContentAs#2](~/samples/snippets/csharp/VS_Snippets_Data/XmlReader.ReadContentAs/CS/readContentAs.cs#2)]\n [!code-vb[XmlReader.ReadContentAs#2](~/samples/snippets/visualbasic/VS_Snippets_Data/XmlReader.ReadContentAs/VB/readContentAs.vb#2)]  \n  \n The example uses the `dataFile_2.xml` file as input.  \n  \n [!code-xml[XmlReader.ReadContentAs#3](~/samples/snippets/xml/VS_Snippets_Data/XmlReader.ReadContentAs/XML/dataFile_2.xml#3)]"
  syntax:
    content: public virtual object ReadContentAs (Type returnType, System.Xml.IXmlNamespaceResolver namespaceResolver);
    parameters:
    - id: returnType
      type: System.Type
      description: "The type of the value to be returned.  \n  \n **Note** With the release of the .NET Framework 3.5, the value of the <code>returnType</code> parameter can now be the <xref href=\"System.DateTimeOffset\"></xref> type."
    - id: namespaceResolver
      type: System.Xml.IXmlNamespaceResolver
      description: "An <xref href=\"System.Xml.IXmlNamespaceResolver\"></xref> object that is used to resolve any namespace prefixes related to type conversion. For example, this can be used when converting an <xref href=\"System.Xml.XmlQualifiedName\"></xref> object to an <code>xs:string</code>.  \n  \n This value can be `null`."
    return:
      type: System.Object
      description: The concatenated text content or attribute value converted to the requested type.
  overload: System.Xml.XmlReader.ReadContentAs*
  exceptions:
  - type: System.FormatException
    commentId: T:System.FormatException
    description: The content is not in the correct format for the target type.
  - type: System.InvalidCastException
    commentId: T:System.InvalidCastException
    description: The attempted cast is not valid.
  - type: System.ArgumentNullException
    commentId: T:System.ArgumentNullException
    description: The <code>returnType</code> value is `null`.
  - type: System.InvalidOperationException
    commentId: T:System.InvalidOperationException
    description: An <xref href="System.Xml.XmlReader"></xref> method was called before a previous asynchronous operation finished. In this case, <xref href="System.InvalidOperationException"></xref> is thrown with the message "An asynchronous operation is already in progress."
  - type: System.OverflowException
    commentId: T:System.OverflowException
    description: Read `Decimal.MaxValue`.
  version:
  - netcore-1.0
  - netcore-1.1
  - netcore-2.0
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  - netstandard-1.0
  - netstandard-1.1
  - netstandard-1.2
  - netstandard-1.3
  - netstandard-1.4
  - netstandard-1.6
  - netstandard-2.0
  - xamarinandroid-7.1
  - xamarinios-10.8
  - xamarinmac-3.0
  monikers:
  - netcore-1.0
  - netcore-1.1
  - netcore-2.0
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  - netstandard-1.0
  - netstandard-1.1
  - netstandard-1.2
  - netstandard-1.3
  - netstandard-1.4
  - netstandard-1.6
  - netstandard-2.0
  - xamarinandroid-7.1
  - xamarinios-10.8
  - xamarinmac-3.0
  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Xml/XmlReader.xml
  ms.technology:
  - dotnet-standard
  author: mairaw
  ms.author: mairaw
  manager: wpickett
- uid: System.Xml.XmlReader.ReadContentAsAsync(System.Type,System.Xml.IXmlNamespaceResolver)
  commentId: M:System.Xml.XmlReader.ReadContentAsAsync(System.Type,System.Xml.IXmlNamespaceResolver)
  id: ReadContentAsAsync(System.Type,System.Xml.IXmlNamespaceResolver)
  parent: System.Xml.XmlReader
  langs:
  - csharp
  name: ReadContentAsAsync(Type, IXmlNamespaceResolver)
  nameWithType: XmlReader.ReadContentAsAsync(Type, IXmlNamespaceResolver)
  fullName: XmlReader.ReadContentAsAsync(Type, IXmlNamespaceResolver)
  type: Method
  assemblies:
  - System.Xml.ReaderWriter
  - System.Xml
  - netstandard
  namespace: System.Xml
  summary: Asynchronously reads the content as an object of the type specified.
  remarks: This is the asynchronous version of <xref:System.Xml.XmlReader.ReadContentAs%2A>, with the same functionality. To use this method, you must set the <xref:System.Xml.XmlReaderSettings.Async%2A> flag to `true`.
  syntax:
    content: public virtual System.Threading.Tasks.Task<object> ReadContentAsAsync (Type returnType, System.Xml.IXmlNamespaceResolver namespaceResolver);
    parameters:
    - id: returnType
      type: System.Type
      description: The type of the value to be returned.
    - id: namespaceResolver
      type: System.Xml.IXmlNamespaceResolver
      description: An <xref href="System.Xml.IXmlNamespaceResolver"></xref> object that is used to resolve any namespace prefixes related to type conversion.
    return:
      type: System.Threading.Tasks.Task{System.Object}
      description: The concatenated text content or attribute value converted to the requested type.
  overload: System.Xml.XmlReader.ReadContentAsAsync*
  exceptions:
  - type: System.InvalidOperationException
    commentId: T:System.InvalidOperationException
    description: An <xref href="System.Xml.XmlReader"></xref> asynchronous method was called without setting the <xref href="System.Xml.XmlReaderSettings.Async"></xref> flag to `true`. In this case, <xref href="System.InvalidOperationException"></xref> is thrown with the message "Set XmlReaderSettings.Async to true if you want to use Async Methods."
  attributes: []
  version:
  - netcore-1.0
  - netcore-1.1
  - netcore-2.0
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  - netstandard-1.0
  - netstandard-1.1
  - netstandard-1.2
  - netstandard-1.3
  - netstandard-1.4
  - netstandard-1.6
  - netstandard-2.0
  - xamarinandroid-7.1
  - xamarinios-10.8
  - xamarinmac-3.0
  monikers:
  - netcore-1.0
  - netcore-1.1
  - netcore-2.0
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  - netstandard-1.0
  - netstandard-1.1
  - netstandard-1.2
  - netstandard-1.3
  - netstandard-1.4
  - netstandard-1.6
  - netstandard-2.0
  - xamarinandroid-7.1
  - xamarinios-10.8
  - xamarinmac-3.0
  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Xml/XmlReader.xml
  ms.technology:
  - dotnet-standard
  author: mairaw
  ms.author: mairaw
  manager: wpickett
- uid: System.Xml.XmlReader.ReadContentAsBase64(System.Byte[],System.Int32,System.Int32)
  commentId: M:System.Xml.XmlReader.ReadContentAsBase64(System.Byte[],System.Int32,System.Int32)
  id: ReadContentAsBase64(System.Byte[],System.Int32,System.Int32)
  parent: System.Xml.XmlReader
  langs:
  - csharp
  name: ReadContentAsBase64(Byte[], Int32, Int32)
  nameWithType: XmlReader.ReadContentAsBase64(Byte[], Int32, Int32)
  fullName: XmlReader.ReadContentAsBase64(Byte[], Int32, Int32)
  type: Method
  assemblies:
  - System.Xml.ReaderWriter
  - System.Xml
  - netstandard
  namespace: System.Xml
  summary: Reads the content and returns the Base64 decoded binary bytes.
  remarks: "This method streams the content, decodes the `Base64` content, and returns the decoded binary bytes (for example, an inline `Base64` encoded GIF image) into the buffer. This method can be called successively to read large streams of embedded text. For more information, see RFC 1521, \"MIME (Multipurpose Internet Mail Extensions) Part One: Mechanisms for Specifying and Describing the Format of Internet Message Bodies\". You can obtain RFCs from the [Request for Comments Web site](http://go.microsoft.com/fwlink/?LinkId=37119).  \n  \n> [!NOTE]\n>  You should not access any of the reader properties between calls to the <xref:System.Xml.XmlReader.ReadContentAsBase64%2A> method until the method returns the value `0`.  \n  \n This method has the following behavior:  \n  \n-   <xref:System.Xml.XmlReader.ReadContentAsBase64%2A> returns the value `0` when it has reached the end of the byte stream it was operating on. The reader is positioned on the first non-content node.  \n  \n-   If you ask for fewer, or the exact number of, bytes than are left in the stream the reader remains in its current position.  \n  \n-   <xref:System.Xml.XmlReader.ReadContentAsBase64%2A> is not supported on the following XML node types: `Element`, `XmlDeclaration`, `None`, `Document`, `DocumentType`, `Notation`, `Entity`, `DocumentFragment`.  \n  \n For the asynchronous version of this method, see <xref:System.Xml.XmlReader.ReadContentAsBase64Async%2A>."
  syntax:
    content: public virtual int ReadContentAsBase64 (byte[] buffer, int index, int count);
    parameters:
    - id: buffer
      type: System.Byte[]
      description: The buffer into which to copy the resulting text. This value cannot be `null`.
    - id: index
      type: System.Int32
      description: The offset into the buffer where to start copying the result.
    - id: count
      type: System.Int32
      description: The maximum number of bytes to copy into the buffer. The actual number of bytes copied is returned from this method.
    return:
      type: System.Int32
      description: The number of bytes written to the buffer.
  overload: System.Xml.XmlReader.ReadContentAsBase64*
  exceptions:
  - type: System.ArgumentNullException
    commentId: T:System.ArgumentNullException
    description: The <code>buffer</code> value is `null`.
  - type: System.InvalidOperationException
    commentId: T:System.InvalidOperationException
    description: An <xref href="System.Xml.XmlReader"></xref> method was called before a previous asynchronous operation finished. In this case, <xref href="System.InvalidOperationException"></xref> is thrown with the message "An asynchronous operation is already in progress."
  - type: System.ArgumentOutOfRangeException
    commentId: T:System.ArgumentOutOfRangeException
    description: The index into the buffer or index + count is larger than the allocated buffer size.
  - type: System.NotSupportedException
    commentId: T:System.NotSupportedException
    description: The <xref href="System.Xml.XmlReader"></xref> implementation does not support this method.
  version:
  - netcore-1.0
  - netcore-1.1
  - netcore-2.0
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  - netstandard-1.0
  - netstandard-1.1
  - netstandard-1.2
  - netstandard-1.3
  - netstandard-1.4
  - netstandard-1.6
  - netstandard-2.0
  - xamarinandroid-7.1
  - xamarinios-10.8
  - xamarinmac-3.0
  monikers:
  - netcore-1.0
  - netcore-1.1
  - netcore-2.0
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  - netstandard-1.0
  - netstandard-1.1
  - netstandard-1.2
  - netstandard-1.3
  - netstandard-1.4
  - netstandard-1.6
  - netstandard-2.0
  - xamarinandroid-7.1
  - xamarinios-10.8
  - xamarinmac-3.0
  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Xml/XmlReader.xml
  ms.technology:
  - dotnet-standard
  author: mairaw
  ms.author: mairaw
  manager: wpickett
- uid: System.Xml.XmlReader.ReadContentAsBase64Async(System.Byte[],System.Int32,System.Int32)
  commentId: M:System.Xml.XmlReader.ReadContentAsBase64Async(System.Byte[],System.Int32,System.Int32)
  id: ReadContentAsBase64Async(System.Byte[],System.Int32,System.Int32)
  parent: System.Xml.XmlReader
  langs:
  - csharp
  name: ReadContentAsBase64Async(Byte[], Int32, Int32)
  nameWithType: XmlReader.ReadContentAsBase64Async(Byte[], Int32, Int32)
  fullName: XmlReader.ReadContentAsBase64Async(Byte[], Int32, Int32)
  type: Method
  assemblies:
  - System.Xml.ReaderWriter
  - System.Xml
  - netstandard
  namespace: System.Xml
  summary: Asynchronously reads the content and returns the Base64 decoded binary bytes.
  remarks: This is the asynchronous version of <xref:System.Xml.XmlReader.ReadContentAsBase64%2A>, with the same functionality. To use this method, you must set the <xref:System.Xml.XmlReaderSettings.Async%2A> flag to `true`.
  syntax:
    content: public virtual System.Threading.Tasks.Task<int> ReadContentAsBase64Async (byte[] buffer, int index, int count);
    parameters:
    - id: buffer
      type: System.Byte[]
      description: The buffer into which to copy the resulting text. This value cannot be `null`.
    - id: index
      type: System.Int32
      description: The offset into the buffer where to start copying the result.
    - id: count
      type: System.Int32
      description: The maximum number of bytes to copy into the buffer. The actual number of bytes copied is returned from this method.
    return:
      type: System.Threading.Tasks.Task{System.Int32}
      description: The number of bytes written to the buffer.
  overload: System.Xml.XmlReader.ReadContentAsBase64Async*
  exceptions:
  - type: System.InvalidOperationException
    commentId: T:System.InvalidOperationException
    description: An <xref href="System.Xml.XmlReader"></xref> asynchronous method was called without setting the <xref href="System.Xml.XmlReaderSettings.Async"></xref> flag to `true`. In this case, <xref href="System.InvalidOperationException"></xref> is thrown with the message "Set XmlReaderSettings.Async to true if you want to use Async Methods."
  version:
  - netcore-1.0
  - netcore-1.1
  - netcore-2.0
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  - netstandard-1.0
  - netstandard-1.1
  - netstandard-1.2
  - netstandard-1.3
  - netstandard-1.4
  - netstandard-1.6
  - netstandard-2.0
  - xamarinandroid-7.1
  - xamarinios-10.8
  - xamarinmac-3.0
  monikers:
  - netcore-1.0
  - netcore-1.1
  - netcore-2.0
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  - netstandard-1.0
  - netstandard-1.1
  - netstandard-1.2
  - netstandard-1.3
  - netstandard-1.4
  - netstandard-1.6
  - netstandard-2.0
  - xamarinandroid-7.1
  - xamarinios-10.8
  - xamarinmac-3.0
  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Xml/XmlReader.xml
  ms.technology:
  - dotnet-standard
  author: mairaw
  ms.author: mairaw
  manager: wpickett
- uid: System.Xml.XmlReader.ReadContentAsBinHex(System.Byte[],System.Int32,System.Int32)
  commentId: M:System.Xml.XmlReader.ReadContentAsBinHex(System.Byte[],System.Int32,System.Int32)
  id: ReadContentAsBinHex(System.Byte[],System.Int32,System.Int32)
  parent: System.Xml.XmlReader
  langs:
  - csharp
  name: ReadContentAsBinHex(Byte[], Int32, Int32)
  nameWithType: XmlReader.ReadContentAsBinHex(Byte[], Int32, Int32)
  fullName: XmlReader.ReadContentAsBinHex(Byte[], Int32, Int32)
  type: Method
  assemblies:
  - System.Xml.ReaderWriter
  - System.Xml
  - netstandard
  namespace: System.Xml
  summary: Reads the content and returns the `BinHex` decoded binary bytes.
  remarks: "This method streams the content, decodes the `BinHex` content, and returns the decoded binary bytes (for example, an inline `BinHex` encoded GIF image) into the buffer. This method can be called successively to read large streams of embedded text.  \n  \n> [!NOTE]\n>  You should not access any of the reader properties between calls to the <xref:System.Xml.XmlReader.ReadContentAsBinHex%2A> method until the method returns the value `0`.  \n  \n This method has the following behavior:  \n  \n-   <xref:System.Xml.XmlReader.ReadContentAsBinHex%2A> returns the value `0` when it has reached the end of the byte stream it was operating on. The reader is positioned on the first non-content node.  \n  \n-   If you ask for fewer, or the exact number, of bytes than are left in the stream the reader remains in its current position.  \n  \n-   <xref:System.Xml.XmlReader.ReadContentAsBinHex%2A> is not supported on the following XML node types: `Element`, `XmlDeclaration`, `None`, `Document`, `DocumentType`, `Notation, Entity`, `DocumentFragment`.  \n  \n For the asynchronous version of this method, see <xref:System.Xml.XmlReader.ReadContentAsBinHexAsync%2A>."
  syntax:
    content: public virtual int ReadContentAsBinHex (byte[] buffer, int index, int count);
    parameters:
    - id: buffer
      type: System.Byte[]
      description: The buffer into which to copy the resulting text. This value cannot be `null`.
    - id: index
      type: System.Int32
      description: The offset into the buffer where to start copying the result.
    - id: count
      type: System.Int32
      description: The maximum number of bytes to copy into the buffer. The actual number of bytes copied is returned from this method.
    return:
      type: System.Int32
      description: The number of bytes written to the buffer.
  overload: System.Xml.XmlReader.ReadContentAsBinHex*
  exceptions:
  - type: System.ArgumentNullException
    commentId: T:System.ArgumentNullException
    description: The <code>buffer</code> value is `null`.
  - type: System.InvalidOperationException
    commentId: T:System.InvalidOperationException
    description: An <xref href="System.Xml.XmlReader"></xref> method was called before a previous asynchronous operation finished. In this case, <xref href="System.InvalidOperationException"></xref> is thrown with the message "An asynchronous operation is already in progress."
  - type: System.ArgumentOutOfRangeException
    commentId: T:System.ArgumentOutOfRangeException
    description: The index into the buffer or index + count is larger than the allocated buffer size.
  - type: System.NotSupportedException
    commentId: T:System.NotSupportedException
    description: The <xref href="System.Xml.XmlReader"></xref> implementation does not support this method.
  version:
  - netcore-1.0
  - netcore-1.1
  - netcore-2.0
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  - netstandard-1.0
  - netstandard-1.1
  - netstandard-1.2
  - netstandard-1.3
  - netstandard-1.4
  - netstandard-1.6
  - netstandard-2.0
  - xamarinandroid-7.1
  - xamarinios-10.8
  - xamarinmac-3.0
  monikers:
  - netcore-1.0
  - netcore-1.1
  - netcore-2.0
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  - netstandard-1.0
  - netstandard-1.1
  - netstandard-1.2
  - netstandard-1.3
  - netstandard-1.4
  - netstandard-1.6
  - netstandard-2.0
  - xamarinandroid-7.1
  - xamarinios-10.8
  - xamarinmac-3.0
  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Xml/XmlReader.xml
  ms.technology:
  - dotnet-standard
  author: mairaw
  ms.author: mairaw
  manager: wpickett
- uid: System.Xml.XmlReader.ReadContentAsBinHexAsync(System.Byte[],System.Int32,System.Int32)
  commentId: M:System.Xml.XmlReader.ReadContentAsBinHexAsync(System.Byte[],System.Int32,System.Int32)
  id: ReadContentAsBinHexAsync(System.Byte[],System.Int32,System.Int32)
  parent: System.Xml.XmlReader
  langs:
  - csharp
  name: ReadContentAsBinHexAsync(Byte[], Int32, Int32)
  nameWithType: XmlReader.ReadContentAsBinHexAsync(Byte[], Int32, Int32)
  fullName: XmlReader.ReadContentAsBinHexAsync(Byte[], Int32, Int32)
  type: Method
  assemblies:
  - System.Xml.ReaderWriter
  - System.Xml
  - netstandard
  namespace: System.Xml
  summary: Asynchronously reads the content and returns the `BinHex` decoded binary bytes.
  remarks: This is the asynchronous version of <xref:System.Xml.XmlReader.ReadContentAsBinHex%2A>, with the same functionality. To use this method, you must set the <xref:System.Xml.XmlReaderSettings.Async%2A> flag to `true`.
  syntax:
    content: public virtual System.Threading.Tasks.Task<int> ReadContentAsBinHexAsync (byte[] buffer, int index, int count);
    parameters:
    - id: buffer
      type: System.Byte[]
      description: The buffer into which to copy the resulting text. This value cannot be `null`.
    - id: index
      type: System.Int32
      description: The offset into the buffer where to start copying the result.
    - id: count
      type: System.Int32
      description: The maximum number of bytes to copy into the buffer. The actual number of bytes copied is returned from this method.
    return:
      type: System.Threading.Tasks.Task{System.Int32}
      description: The number of bytes written to the buffer.
  overload: System.Xml.XmlReader.ReadContentAsBinHexAsync*
  exceptions:
  - type: System.InvalidOperationException
    commentId: T:System.InvalidOperationException
    description: An <xref href="System.Xml.XmlReader"></xref> asynchronous method was called without setting the <xref href="System.Xml.XmlReaderSettings.Async"></xref> flag to `true`. In this case, <xref href="System.InvalidOperationException"></xref> is thrown with the message "Set XmlReaderSettings.Async to true if you want to use Async Methods."
  version:
  - netcore-1.0
  - netcore-1.1
  - netcore-2.0
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  - netstandard-1.0
  - netstandard-1.1
  - netstandard-1.2
  - netstandard-1.3
  - netstandard-1.4
  - netstandard-1.6
  - netstandard-2.0
  - xamarinandroid-7.1
  - xamarinios-10.8
  - xamarinmac-3.0
  monikers:
  - netcore-1.0
  - netcore-1.1
  - netcore-2.0
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  - netstandard-1.0
  - netstandard-1.1
  - netstandard-1.2
  - netstandard-1.3
  - netstandard-1.4
  - netstandard-1.6
  - netstandard-2.0
  - xamarinandroid-7.1
  - xamarinios-10.8
  - xamarinmac-3.0
  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Xml/XmlReader.xml
  ms.technology:
  - dotnet-standard
  author: mairaw
  ms.author: mairaw
  manager: wpickett
- uid: System.Xml.XmlReader.ReadContentAsBoolean
  commentId: M:System.Xml.XmlReader.ReadContentAsBoolean
  id: ReadContentAsBoolean
  parent: System.Xml.XmlReader
  langs:
  - csharp
  name: ReadContentAsBoolean()
  nameWithType: XmlReader.ReadContentAsBoolean()
  fullName: XmlReader.ReadContentAsBoolean()
  type: Method
  assemblies:
  - System.Xml.ReaderWriter
  - System.Xml
  - netstandard
  namespace: System.Xml
  summary: Reads the text content at the current position as a `Boolean`.
  remarks: "This method concatenates text, white space, significant white space, and CDATA sections, and skips any comments or processing instructions. Entity references are automatically resolved.  \n  \n If the content is typed `xsd:boolean`, the reader returns an unboxed <xref:System.Boolean> object. If the content is not typed `xsd:boolean`, the reader attempts to convert it to a <xref:System.Boolean> object according to the rules defined by the [W3C XML Schema Part 2: Datatypes](http://go.microsoft.com/fwlink/?LinkId=4871) recommendation.  \n  \n The following table describes how this method treats each node type.  \n  \n|XmlNodeType|Return value|Reader behavior|  \n|-----------------|------------------|---------------------|  \n|`Text`<br /><br /> `CDATA`<br /><br /> `Whitespace`<br /><br /> `SignificantWhitespace`<br /><br /> `EntityReference`<br /><br /> `EndEntity`|Concatenated content of text, CDATA, white space and significant white space nodes converted to the requested type.|Moves to the next start element or end element tag. Entity references are automatically expanded.|  \n|`Attribute`|Same as calling `XmlConvert.ToXxx` on the attribute value.|The reader remains in the current position.|  \n|`Comment`<br /><br /> `ProcessingInstruction`|Ignores the processing instruction (PI) or comment and reads the concatenated text content that follows the PI or comment.|Moves to the next start element or end element tag. Entity references are automatically expanded.|  \n|`EndElement`|An empty string.|The reader remains in the current position.|  \n|`Element`<br /><br /> `XmlDeclaration`<br /><br /> `None`<br /><br /> `Document`<br /><br /> `DocumentType`<br /><br /> `Notation`<br /><br /> `Entity`<br /><br /> `DocumentFragment`|An <xref:System.InvalidOperationException> is thrown.|Undefined, although typically the reader remains in the current position.|  \n  \n For more information, see the <xref:System.Xml.XmlReader>reference page and the [W3C XML Schema Part 2: Datatypes](http://go.microsoft.com/fwlink/?LinkId=4871) recommendation."
  example:
  - "The following example uses the <xref:System.Xml.XmlReader.ReadContentAsBoolean%2A> method to read the attribute as a B`oolean` value.  \n  \n [!code-csharp[XmlReader.ReadContentAs#1](~/samples/snippets/csharp/VS_Snippets_Data/XmlReader.ReadContentAs/CS/readContentAs.cs#1)]\n [!code-vb[XmlReader.ReadContentAs#1](~/samples/snippets/visualbasic/VS_Snippets_Data/XmlReader.ReadContentAs/VB/readContentAs.vb#1)]  \n  \n The example uses the `dataFile_2.xml` file as input.  \n  \n [!code-xml[XmlReader.ReadContentAs#3](~/samples/snippets/xml/VS_Snippets_Data/XmlReader.ReadContentAs/XML/dataFile_2.xml#3)]"
  syntax:
    content: public virtual bool ReadContentAsBoolean ();
    parameters: []
    return:
      type: System.Boolean
      description: The text content as a <xref href="System.Boolean"></xref> object.
  overload: System.Xml.XmlReader.ReadContentAsBoolean*
  exceptions:
  - type: System.InvalidCastException
    commentId: T:System.InvalidCastException
    description: The attempted cast is not valid.
  - type: System.FormatException
    commentId: T:System.FormatException
    description: The string format is not valid.
  - type: System.InvalidOperationException
    commentId: T:System.InvalidOperationException
    description: An <xref href="System.Xml.XmlReader"></xref> method was called before a previous asynchronous operation finished. In this case, <xref href="System.InvalidOperationException"></xref> is thrown with the message "An asynchronous operation is already in progress."
  version:
  - netcore-1.0
  - netcore-1.1
  - netcore-2.0
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  - netstandard-1.0
  - netstandard-1.1
  - netstandard-1.2
  - netstandard-1.3
  - netstandard-1.4
  - netstandard-1.6
  - netstandard-2.0
  - xamarinandroid-7.1
  - xamarinios-10.8
  - xamarinmac-3.0
  monikers:
  - netcore-1.0
  - netcore-1.1
  - netcore-2.0
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  - netstandard-1.0
  - netstandard-1.1
  - netstandard-1.2
  - netstandard-1.3
  - netstandard-1.4
  - netstandard-1.6
  - netstandard-2.0
  - xamarinandroid-7.1
  - xamarinios-10.8
  - xamarinmac-3.0
  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Xml/XmlReader.xml
  ms.technology:
  - dotnet-standard
  author: mairaw
  ms.author: mairaw
  manager: wpickett
- uid: System.Xml.XmlReader.ReadContentAsDateTime
  commentId: M:System.Xml.XmlReader.ReadContentAsDateTime
  id: ReadContentAsDateTime
  parent: System.Xml.XmlReader
  langs:
  - csharp
  name: ReadContentAsDateTime()
  nameWithType: XmlReader.ReadContentAsDateTime()
  fullName: XmlReader.ReadContentAsDateTime()
  type: Method
  assemblies:
  - System.Xml
  - netstandard
  - System.Xml.ReaderWriter
  namespace: System.Xml
  summary: Reads the text content at the current position as a <xref href="System.DateTime"></xref> object.
  remarks: "This method concatenates text, white space, significant white space, and CDATA sections, and skips any comments or processing instructions. Entity references are automatically resolved.  \n  \n If the content is typed `xsd:dateTime`, the reader returns an unboxed <xref:System.DateTime> object. If the content is not typed `xsd:dateTime`, the reader attempts to convert it to a <xref:System.DateTime> object according to the rules defined by the [W3C XML Schema Part 2: Datatypes](http://go.microsoft.com/fwlink/?LinkId=4871) recommendation.  \n  \n> [!NOTE]\n>  You cannot rely on the <xref:System.DateTime.Year%2A?displayProperty=fullName> value when the content is typed as `xsd:gMonthDay`. <xref:System.Xml.XmlReader> always sets the <xref:System.DateTime.Year%2A?displayProperty=fullName> value to 1904 in this case.  \n  \n The following table describes how this method treats each node type.  \n  \n|XmlNodeType|Return value|Reader behavior|  \n|-----------------|------------------|---------------------|  \n|`Text`<br /><br /> `CDATA`<br /><br /> `Whitespace`<br /><br /> `SignificantWhitespace`<br /><br /> `EntityReference`<br /><br /> `EndEntity`|Concatenated content of text, CDATA, white space and significant white space nodes converted to the requested type.|Moves to the next start element or end element tag. Entity references are automatically expanded.|  \n|`Attribute`|Same as calling `XmlConvert.ToXxx` on the attribute value.|The reader remains in the current position.|  \n|`Comment`<br /><br /> `ProcessingInstruction`|Ignores the processing instruction (PI) or comment and reads the concatenated text content that follows the PI or comment.|Moves to the next start element or end element tag. Entity references are automatically expanded.|  \n|`EndElement`|An empty string.|The reader remains in the current position.|  \n|`Element`<br /><br /> `XmlDeclaration`<br /><br /> `None`<br /><br /> `Document`<br /><br /> `DocumentType`<br /><br /> `Notation`<br /><br /> `Entity`<br /><br /> `DocumentFragment`|An <xref:System.InvalidOperationException> is thrown.|Undefined, although typically the reader remains in the current position.|  \n  \n For more information, see the <xref:System.Xml.XmlReader>reference page and the [W3C XML Schema Part 2: Datatypes](http://go.microsoft.com/fwlink/?LinkId=4871) recommendation."
  syntax:
    content: public virtual DateTime ReadContentAsDateTime ();
    parameters: []
    return:
      type: System.DateTime
      description: The text content as a <xref href="System.DateTime"></xref> object.
  overload: System.Xml.XmlReader.ReadContentAsDateTime*
  exceptions:
  - type: System.InvalidCastException
    commentId: T:System.InvalidCastException
    description: The attempted cast is not valid.
  - type: System.FormatException
    commentId: T:System.FormatException
    description: The string format is not valid.
  - type: System.InvalidOperationException
    commentId: T:System.InvalidOperationException
    description: An <xref href="System.Xml.XmlReader"></xref> method was called before a previous asynchronous operation finished. In this case, <xref href="System.InvalidOperationException"></xref> is thrown with the message "An asynchronous operation is already in progress."
  version:
  - netcore-2.0
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  - netstandard-2.0
  - xamarinandroid-7.1
  - xamarinios-10.8
  - xamarinmac-3.0
  monikers:
  - netcore-2.0
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  - netstandard-2.0
  - xamarinandroid-7.1
  - xamarinios-10.8
  - xamarinmac-3.0
  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Xml/XmlReader.xml
  ms.technology:
  - dotnet-standard
  author: mairaw
  ms.author: mairaw
  manager: wpickett
- uid: System.Xml.XmlReader.ReadContentAsDateTimeOffset
  commentId: M:System.Xml.XmlReader.ReadContentAsDateTimeOffset
  id: ReadContentAsDateTimeOffset
  parent: System.Xml.XmlReader
  langs:
  - csharp
  name: ReadContentAsDateTimeOffset()
  nameWithType: XmlReader.ReadContentAsDateTimeOffset()
  fullName: XmlReader.ReadContentAsDateTimeOffset()
  type: Method
  assemblies:
  - System.Xml.ReaderWriter
  - System.Xml
  - netstandard
  namespace: System.Xml
  summary: Reads the text content at the current position as a <xref href="System.DateTimeOffset"></xref> object.
  syntax:
    content: public virtual DateTimeOffset ReadContentAsDateTimeOffset ();
    parameters: []
    return:
      type: System.DateTimeOffset
      description: The text content as a <xref href="System.DateTimeOffset"></xref> object.
  overload: System.Xml.XmlReader.ReadContentAsDateTimeOffset*
  exceptions:
  - type: System.InvalidOperationException
    commentId: T:System.InvalidOperationException
    description: An <xref href="System.Xml.XmlReader"></xref> method was called before a previous asynchronous operation finished. In this case, <xref href="System.InvalidOperationException"></xref> is thrown with the message "An asynchronous operation is already in progress."
  version:
  - netcore-1.0
  - netcore-1.1
  - netcore-2.0
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  - netstandard-1.0
  - netstandard-1.1
  - netstandard-1.2
  - netstandard-1.3
  - netstandard-1.4
  - netstandard-1.6
  - netstandard-2.0
  - xamarinandroid-7.1
  - xamarinios-10.8
  - xamarinmac-3.0
  monikers:
  - netcore-1.0
  - netcore-1.1
  - netcore-2.0
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  - netstandard-1.0
  - netstandard-1.1
  - netstandard-1.2
  - netstandard-1.3
  - netstandard-1.4
  - netstandard-1.6
  - netstandard-2.0
  - xamarinandroid-7.1
  - xamarinios-10.8
  - xamarinmac-3.0
  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Xml/XmlReader.xml
  ms.technology:
  - dotnet-standard
  author: mairaw
  ms.author: mairaw
  manager: wpickett
- uid: System.Xml.XmlReader.ReadContentAsDecimal
  commentId: M:System.Xml.XmlReader.ReadContentAsDecimal
  id: ReadContentAsDecimal
  parent: System.Xml.XmlReader
  langs:
  - csharp
  name: ReadContentAsDecimal()
  nameWithType: XmlReader.ReadContentAsDecimal()
  fullName: XmlReader.ReadContentAsDecimal()
  type: Method
  assemblies:
  - System.Xml.ReaderWriter
  - System.Xml
  - netstandard
  namespace: System.Xml
  summary: Reads the text content at the current position as a <xref href="System.Decimal"></xref> object.
  remarks: "This method concatenates text, white space, significant white space, and CDATA sections, and skips any comments or processing instructions. Entity references are automatically resolved.  \n  \n If the content is typed `xsd:decimal`, the reader returns an unboxed <xref:System.Decimal> object. If the content is not typed `xsd:decimal`, the reader attempts to convert it to a <xref:System.Decimal> object according to the rules defined by the [W3C XML Schema Part 2: Datatypes](http://go.microsoft.com/fwlink/?LinkId=4871) recommendation.  \n  \n The following table describes how this method treats each node type.  \n  \n|XmlNodeType|Return value|Reader behavior|  \n|-----------------|------------------|---------------------|  \n|`Text`<br /><br /> `CDATA`<br /><br /> `Whitespace`<br /><br /> `SignificantWhitespace`<br /><br /> `EntityReference`<br /><br /> `EndEntity`|Concatenated content of text, CDATA, white space and significant white space nodes converted to the requested type.|Moves to the next start element or end element tag. Entity references are automatically expanded.|  \n|`Attribute`|Same as calling `XmlConvert.ToXxx` on the attribute value.|The reader remains in the current position.|  \n|`Comment`<br /><br /> `ProcessingInstruction`|Ignores the processing instruction (PI) or comment and reads the concatenated text content that follows the PI or comment.|Moves to the next start element or end element tag. Entity references are automatically expanded.|  \n|`EndElement`|An empty string.|The reader remains in the current position.|  \n|`Element`<br /><br /> `XmlDeclaration`<br /><br /> `None`<br /><br /> `Document`<br /><br /> `DocumentType`<br /><br /> `Notation`<br /><br /> `Entity`<br /><br /> `DocumentFragment`|An <xref:System.InvalidOperationException> is thrown.|Undefined, although typically the reader remains in the current position.|  \n  \n For more information, see the <xref:System.Xml.XmlReader>reference page and the [W3C XML Schema Part 2: Datatypes](http://go.microsoft.com/fwlink/?LinkId=4871) recommendation."
  syntax:
    content: public virtual decimal ReadContentAsDecimal ();
    parameters: []
    return:
      type: System.Decimal
      description: The text content at the current position as a <xref href="System.Decimal"></xref> object.
  overload: System.Xml.XmlReader.ReadContentAsDecimal*
  exceptions:
  - type: System.InvalidCastException
    commentId: T:System.InvalidCastException
    description: The attempted cast is not valid.
  - type: System.FormatException
    commentId: T:System.FormatException
    description: The string format is not valid.
  - type: System.InvalidOperationException
    commentId: T:System.InvalidOperationException
    description: An <xref href="System.Xml.XmlReader"></xref> method was called before a previous asynchronous operation finished. In this case, <xref href="System.InvalidOperationException"></xref> is thrown with the message "An asynchronous operation is already in progress."
  version:
  - netcore-1.0
  - netcore-1.1
  - netcore-2.0
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  - netstandard-1.0
  - netstandard-1.1
  - netstandard-1.2
  - netstandard-1.3
  - netstandard-1.4
  - netstandard-1.6
  - netstandard-2.0
  - xamarinandroid-7.1
  - xamarinios-10.8
  - xamarinmac-3.0
  monikers:
  - netcore-1.0
  - netcore-1.1
  - netcore-2.0
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  - netstandard-1.0
  - netstandard-1.1
  - netstandard-1.2
  - netstandard-1.3
  - netstandard-1.4
  - netstandard-1.6
  - netstandard-2.0
  - xamarinandroid-7.1
  - xamarinios-10.8
  - xamarinmac-3.0
  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Xml/XmlReader.xml
  ms.technology:
  - dotnet-standard
  author: mairaw
  ms.author: mairaw
  manager: wpickett
- uid: System.Xml.XmlReader.ReadContentAsDouble
  commentId: M:System.Xml.XmlReader.ReadContentAsDouble
  id: ReadContentAsDouble
  parent: System.Xml.XmlReader
  langs:
  - csharp
  name: ReadContentAsDouble()
  nameWithType: XmlReader.ReadContentAsDouble()
  fullName: XmlReader.ReadContentAsDouble()
  type: Method
  assemblies:
  - System.Xml.ReaderWriter
  - System.Xml
  - netstandard
  namespace: System.Xml
  summary: Reads the text content at the current position as a double-precision floating-point number.
  remarks: "This method concatenates text, white space, significant white space, and CDATA sections, and skips any comments or processing instructions. Entity references are automatically resolved.  \n  \n If the content is typed `xsd:double`, the reader returns a double-precision floating-point number. If the content is not typed `xsd:double`, the reader attempts to convert it to a double-precision floating-point number according to the rules defined by the [W3C XML Schema Part 2: Datatypes](http://go.microsoft.com/fwlink/?LinkId=4871) recommendation.  \n  \n The following table describes how this method treats each node type.  \n  \n|XmlNodeType|Return value|Reader behavior|  \n|-----------------|------------------|---------------------|  \n|`Text`<br /><br /> `CDATA`<br /><br /> `Whitespace`<br /><br /> `SignificantWhitespace`<br /><br /> `EntityReference`<br /><br /> `EndEntity`|Concatenated content of text, CDATA, white space and significant white space nodes converted to the requested type.|Moves to the next start element or end element tag. Entity references are automatically expanded.|  \n|`Attribute`|Same as calling `XmlConvert.ToXxx` on the attribute value.|The reader remains in the current position.|  \n|`Comment`<br /><br /> `ProcessingInstruction`|Ignores the processing instruction (PI) or comment and reads the concatenated text content that follows the PI or comment.|Moves to the next start element or end element tag. Entity references are automatically expanded.|  \n|`EndElement`|An empty string.|The reader remains in the current position.|  \n|`Element`<br /><br /> `XmlDeclaration`<br /><br /> `None`<br /><br /> `Document`<br /><br /> `DocumentType`<br /><br /> `Notation`<br /><br /> `Entity`<br /><br /> `DocumentFragment`|An <xref:System.InvalidOperationException> is thrown.|Undefined, although typically the reader remains in the current position.|  \n  \n For more information, see the <xref:System.Xml.XmlReader>reference page and the [W3C XML Schema Part 2: Datatypes](http://go.microsoft.com/fwlink/?LinkId=4871) recommendation."
  syntax:
    content: public virtual double ReadContentAsDouble ();
    parameters: []
    return:
      type: System.Double
      description: The text content as a double-precision floating-point number.
  overload: System.Xml.XmlReader.ReadContentAsDouble*
  exceptions:
  - type: System.InvalidCastException
    commentId: T:System.InvalidCastException
    description: The attempted cast is not valid.
  - type: System.FormatException
    commentId: T:System.FormatException
    description: The string format is not valid.
  - type: System.InvalidOperationException
    commentId: T:System.InvalidOperationException
    description: An <xref href="System.Xml.XmlReader"></xref> method was called before a previous asynchronous operation finished. In this case, <xref href="System.InvalidOperationException"></xref> is thrown with the message "An asynchronous operation is already in progress."
  version:
  - netcore-1.0
  - netcore-1.1
  - netcore-2.0
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  - netstandard-1.0
  - netstandard-1.1
  - netstandard-1.2
  - netstandard-1.3
  - netstandard-1.4
  - netstandard-1.6
  - netstandard-2.0
  - xamarinandroid-7.1
  - xamarinios-10.8
  - xamarinmac-3.0
  monikers:
  - netcore-1.0
  - netcore-1.1
  - netcore-2.0
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  - netstandard-1.0
  - netstandard-1.1
  - netstandard-1.2
  - netstandard-1.3
  - netstandard-1.4
  - netstandard-1.6
  - netstandard-2.0
  - xamarinandroid-7.1
  - xamarinios-10.8
  - xamarinmac-3.0
  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Xml/XmlReader.xml
  ms.technology:
  - dotnet-standard
  author: mairaw
  ms.author: mairaw
  manager: wpickett
- uid: System.Xml.XmlReader.ReadContentAsFloat
  commentId: M:System.Xml.XmlReader.ReadContentAsFloat
  id: ReadContentAsFloat
  parent: System.Xml.XmlReader
  langs:
  - csharp
  name: ReadContentAsFloat()
  nameWithType: XmlReader.ReadContentAsFloat()
  fullName: XmlReader.ReadContentAsFloat()
  type: Method
  assemblies:
  - System.Xml.ReaderWriter
  - System.Xml
  - netstandard
  namespace: System.Xml
  summary: Reads the text content at the current position as a single-precision floating point number.
  remarks: "This method concatenates text, white space, significant white space, and CDATA sections, and skips any comments or processing instructions. Entity references are automatically resolved.  \n  \n If the content is typed `xsd:float`, the reader returns an unboxed a single-precision floating point number. If the content is not typed `xsd:float`, the reader attempts to convert it to a single-precision floating point number according to the rules defined by the [W3C XML Schema Part 2: Datatypes](http://go.microsoft.com/fwlink/?LinkId=4871) recommendation.  \n  \n The following table describes how this method treats each node type.  \n  \n|XmlNodeType|Return value|Reader behavior|  \n|-----------------|------------------|---------------------|  \n|`Text`<br /><br /> `CDATA`<br /><br /> `Whitespace`<br /><br /> `SignificantWhitespace`<br /><br /> `EntityReference`<br /><br /> `EndEntity`|Concatenated content of text, CDATA, white space and significant white space nodes converted to the requested type.|Moves to the next start element or end element tag. Entity references are automatically expanded.|  \n|`Attribute`|Same as calling `XmlConvert.ToXxx` on the attribute value.|The reader remains in the current position.|  \n|`Comment`<br /><br /> `ProcessingInstruction`|Ignores the processing instruction (PI) or comment and reads the concatenated text content that follows the PI or comment.|Moves to the next start element or end element tag. Entity references are automatically expanded.|  \n|`EndElement`|An empty string.|The reader remains in the current position.|  \n|`Element`<br /><br /> `XmlDeclaration`<br /><br /> `None`<br /><br /> `Document`<br /><br /> `DocumentType`<br /><br /> `Notation`<br /><br /> `Entity`<br /><br /> `DocumentFragment`|An <xref:System.InvalidOperationException> is thrown.|Undefined, although typically the reader remains in the current position.|  \n  \n For more information, see the Remarks section of the <xref:System.Xml.XmlReader>reference page and the [W3C XML Schema Part 2: Datatypes](http://go.microsoft.com/fwlink/?LinkId=4871) recommendation."
  syntax:
    content: public virtual float ReadContentAsFloat ();
    parameters: []
    return:
      type: System.Single
      description: The text content at the current position as a single-precision floating point number.
  overload: System.Xml.XmlReader.ReadContentAsFloat*
  exceptions:
  - type: System.InvalidCastException
    commentId: T:System.InvalidCastException
    description: The attempted cast is not valid.
  - type: System.FormatException
    commentId: T:System.FormatException
    description: The string format is not valid.
  - type: System.InvalidOperationException
    commentId: T:System.InvalidOperationException
    description: An <xref href="System.Xml.XmlReader"></xref> method was called before a previous asynchronous operation finished. In this case, <xref href="System.InvalidOperationException"></xref> is thrown with the message "An asynchronous operation is already in progress."
  version:
  - netcore-1.0
  - netcore-1.1
  - netcore-2.0
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  - netstandard-1.0
  - netstandard-1.1
  - netstandard-1.2
  - netstandard-1.3
  - netstandard-1.4
  - netstandard-1.6
  - netstandard-2.0
  - xamarinandroid-7.1
  - xamarinios-10.8
  - xamarinmac-3.0
  monikers:
  - netcore-1.0
  - netcore-1.1
  - netcore-2.0
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  - netstandard-1.0
  - netstandard-1.1
  - netstandard-1.2
  - netstandard-1.3
  - netstandard-1.4
  - netstandard-1.6
  - netstandard-2.0
  - xamarinandroid-7.1
  - xamarinios-10.8
  - xamarinmac-3.0
  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Xml/XmlReader.xml
  ms.technology:
  - dotnet-standard
  author: mairaw
  ms.author: mairaw
  manager: wpickett
- uid: System.Xml.XmlReader.ReadContentAsInt
  commentId: M:System.Xml.XmlReader.ReadContentAsInt
  id: ReadContentAsInt
  parent: System.Xml.XmlReader
  langs:
  - csharp
  name: ReadContentAsInt()
  nameWithType: XmlReader.ReadContentAsInt()
  fullName: XmlReader.ReadContentAsInt()
  type: Method
  assemblies:
  - System.Xml.ReaderWriter
  - System.Xml
  - netstandard
  namespace: System.Xml
  summary: Reads the text content at the current position as a 32-bit signed integer.
  remarks: "This method concatenates text, white space, significant white space, and CDATA sections, and skips any comments or processing instructions. Entity references are automatically resolved.  \n  \n If the content is typed `xsd:integer`, the reader returns an unboxed 32-bit signed integer. If the content is not typed `xsd:integer`, the reader attempts to convert it to a 32-bit signed integer according to the rules defined by the [W3C XML Schema Part 2: Datatypes](http://go.microsoft.com/fwlink/?LinkId=4871) recommendation.  \n  \n The following table describes how this method treats each node type.  \n  \n|XmlNodeType|Return value|Reader behavior|  \n|-----------------|------------------|---------------------|  \n|`Text`<br /><br /> `CDATA`<br /><br /> `Whitespace`<br /><br /> `SignificantWhitespace`<br /><br /> `EntityReference`<br /><br /> `EndEntity`|Concatenated content of text, CDATA, white space and significant white space nodes converted to the requested type.|Moves to the next start element or end element tag. Entity references are automatically expanded.|  \n|`Attribute`|Same as calling `XmlConvert.ToXxx` on the attribute value.|The reader remains in the current position.|  \n|`Comment`<br /><br /> `ProcessingInstruction`|Ignores the processing instruction (PI) or comment and reads the concatenated text content that follows the PI or comment.|Moves to the next start element or end element tag. Entity references are automatically expanded.|  \n|`EndElement`|An empty string.|The reader remains in the current position.|  \n|`Element`<br /><br /> `XmlDeclaration`<br /><br /> `None`<br /><br /> `Document`<br /><br /> `DocumentType`<br /><br /> `Notation`<br /><br /> `Entity`<br /><br /> `DocumentFragment`|An <xref:System.InvalidOperationException> is thrown.|Undefined, although typically the reader remains in the current position.|  \n  \n For more information, see the Remarks section of the <xref:System.Xml.XmlReader>reference page and the [W3C XML Schema Part 2: Datatypes](http://go.microsoft.com/fwlink/?LinkId=4871) recommendation."
  syntax:
    content: public virtual int ReadContentAsInt ();
    parameters: []
    return:
      type: System.Int32
      description: The text content as a 32-bit signed integer.
  overload: System.Xml.XmlReader.ReadContentAsInt*
  exceptions:
  - type: System.InvalidCastException
    commentId: T:System.InvalidCastException
    description: The attempted cast is not valid.
  - type: System.FormatException
    commentId: T:System.FormatException
    description: The string format is not valid.
  - type: System.InvalidOperationException
    commentId: T:System.InvalidOperationException
    description: An <xref href="System.Xml.XmlReader"></xref> method was called before a previous asynchronous operation finished. In this case, <xref href="System.InvalidOperationException"></xref> is thrown with the message "An asynchronous operation is already in progress."
  version:
  - netcore-1.0
  - netcore-1.1
  - netcore-2.0
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  - netstandard-1.0
  - netstandard-1.1
  - netstandard-1.2
  - netstandard-1.3
  - netstandard-1.4
  - netstandard-1.6
  - netstandard-2.0
  - xamarinandroid-7.1
  - xamarinios-10.8
  - xamarinmac-3.0
  monikers:
  - netcore-1.0
  - netcore-1.1
  - netcore-2.0
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  - netstandard-1.0
  - netstandard-1.1
  - netstandard-1.2
  - netstandard-1.3
  - netstandard-1.4
  - netstandard-1.6
  - netstandard-2.0
  - xamarinandroid-7.1
  - xamarinios-10.8
  - xamarinmac-3.0
  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Xml/XmlReader.xml
  ms.technology:
  - dotnet-standard
  author: mairaw
  ms.author: mairaw
  manager: wpickett
- uid: System.Xml.XmlReader.ReadContentAsLong
  commentId: M:System.Xml.XmlReader.ReadContentAsLong
  id: ReadContentAsLong
  parent: System.Xml.XmlReader
  langs:
  - csharp
  name: ReadContentAsLong()
  nameWithType: XmlReader.ReadContentAsLong()
  fullName: XmlReader.ReadContentAsLong()
  type: Method
  assemblies:
  - System.Xml.ReaderWriter
  - System.Xml
  - netstandard
  namespace: System.Xml
  summary: Reads the text content at the current position as a 64-bit signed integer.
  remarks: "This method concatenates text, white space, significant white space, and CDATA sections, and skips any comments or processing instructions. Entity references are automatically resolved.  \n  \n If the content is typed `xsd:long`, the reader returns an unboxed 64-bit signed integer. If the content is not typed `xsd:long`, the reader attempts to convert it to a 64-bit signed integer according to the rules defined by the [W3C XML Schema Part 2: Datatypes](http://go.microsoft.com/fwlink/?LinkId=4871) recommendation.  \n  \n The following table describes this method treats each node type.  \n  \n|XmlNodeType|Return value|Reader behavior|  \n|-----------------|------------------|---------------------|  \n|`Text`<br /><br /> `CDATA`<br /><br /> `Whitespace`<br /><br /> `SignificantWhitespace`<br /><br /> `EntityReference`<br /><br /> `EndEntity`|Concatenated content of text, CDATA, white space and significant white space nodes converted to the requested type.|Moves to the next start element or end element tag. Entity references are automatically expanded.|  \n|`Attribute`|Same as `XmlConvert.ToXxx` on attribute value.|The reader remains in the current position|  \n|`Comment`<br /><br /> `ProcessingInstruction`|Ignores the processing instruction (PI) or comment and reads the concatenated text content that follows the PI or comment.|Moves to the next start element or end element tag. Entity references are automatically expanded.|  \n|`EndElement`|An empty string.|The reader remains in the current position.|  \n|`Element`<br /><br /> `XmlDeclaration`<br /><br /> `None`<br /><br /> `Document`<br /><br /> `DocumentType`<br /><br /> `Notation`<br /><br /> `Entity`<br /><br /> `DocumentFragment`|An <xref:System.InvalidOperationException> is thrown.|Undefined, although typically the reader remains in the current position.|  \n  \n For more information, see the Remarks section of the <xref:System.Xml.XmlReader>reference page."
  syntax:
    content: public virtual long ReadContentAsLong ();
    parameters: []
    return:
      type: System.Int64
      description: The text content as a 64-bit signed integer.
  overload: System.Xml.XmlReader.ReadContentAsLong*
  exceptions:
  - type: System.InvalidCastException
    commentId: T:System.InvalidCastException
    description: The attempted cast is not valid.
  - type: System.FormatException
    commentId: T:System.FormatException
    description: The string format is not valid.
  - type: System.InvalidOperationException
    commentId: T:System.InvalidOperationException
    description: An <xref href="System.Xml.XmlReader"></xref> method was called before a previous asynchronous operation finished. In this case, <xref href="System.InvalidOperationException"></xref> is thrown with the message "An asynchronous operation is already in progress."
  version:
  - netcore-1.0
  - netcore-1.1
  - netcore-2.0
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  - netstandard-1.0
  - netstandard-1.1
  - netstandard-1.2
  - netstandard-1.3
  - netstandard-1.4
  - netstandard-1.6
  - netstandard-2.0
  - xamarinandroid-7.1
  - xamarinios-10.8
  - xamarinmac-3.0
  monikers:
  - netcore-1.0
  - netcore-1.1
  - netcore-2.0
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  - netstandard-1.0
  - netstandard-1.1
  - netstandard-1.2
  - netstandard-1.3
  - netstandard-1.4
  - netstandard-1.6
  - netstandard-2.0
  - xamarinandroid-7.1
  - xamarinios-10.8
  - xamarinmac-3.0
  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Xml/XmlReader.xml
  ms.technology:
  - dotnet-standard
  author: mairaw
  ms.author: mairaw
  manager: wpickett
- uid: System.Xml.XmlReader.ReadContentAsObject
  commentId: M:System.Xml.XmlReader.ReadContentAsObject
  id: ReadContentAsObject
  parent: System.Xml.XmlReader
  langs:
  - csharp
  name: ReadContentAsObject()
  nameWithType: XmlReader.ReadContentAsObject()
  fullName: XmlReader.ReadContentAsObject()
  type: Method
  assemblies:
  - System.Xml.ReaderWriter
  - System.Xml
  - netstandard
  namespace: System.Xml
  summary: Reads the text content at the current position as an <xref href="System.Object"></xref>.
  remarks: "This method concatenates text, white space, significant white space, and CDATA sections, and skips any comments or processing instructions. Entity references are automatically resolved.  \n  \n If the content is typed, the reader returns a boxed CLR of the most appropriate type, specified by the <xref:System.Xml.XmlReader.ValueType%2A> property. If the content is a list type, the reader returns an array of boxed objects of the appropriate type.  \n  \n> [!NOTE]\n>  If a validation error occurs while parsing the content and the reader is an <xref:System.Xml.XmlReader> object created by the <xref:System.Xml.XmlReader.Create%2A> method, the reader returns the content as a string. In other words when a validation error or warning occurs, the content is considered to be untyped.  \n  \n If the content is not typed, the reader returns the content as a string.  \n  \n The following table describes how this method treats each node type.  \n  \n|XmlNodeType|Return value|Reader behavior|  \n|-----------------|------------------|---------------------|  \n|`Text`<br /><br /> `CDATA`<br /><br /> `Whitespace`<br /><br /> `SignificantWhitespace`<br /><br /> `EntityReference`<br /><br /> `EndEntity`|Concatenated content of text, CDATA, white space and significant white space nodes converted to the requested type.|Moves to the next start element or end element tag. Entity references are automatically expanded.|  \n|`Attribute`|Same as calling `XmlConvert.ToXxx` on the attribute value.|The reader remains in the current position|  \n|`Comment`<br /><br /> `ProcessingInstruction`|Ignores the processing instruction (PI) or comment and reads the concatenated text content that follows the PI or comment.|Moves to the next start element or end element tag. Entity references are automatically expanded.|  \n|`EndElement`|The value of the element if the reader is a schema validating reader (<xref:System.Xml.XmlReaderSettings.ValidationType%2A> is set to <xref:System.Xml.ValidationType.Schema>); otherwise an empty string.|The reader remains in the current position.|  \n|`Element`<br /><br /> `XmlDeclaration`<br /><br /> `None`<br /><br /> `Document`<br /><br /> `DocumentType`<br /><br /> `Notation`<br /><br /> `Entity`<br /><br /> `DocumentFragment`|An <xref:System.InvalidOperationException> is thrown.|Undefined, although typically the reader remains in the current position.|  \n  \n For more information, see the Remarks section of the <xref:System.Xml.XmlReader> reference page and the [W3C XML Schema Part 2: Datatypes](http://go.microsoft.com/fwlink/?LinkId=4871) recommendation.  \n  \n For the asynchronous version of this method, see <xref:System.Xml.XmlReader.ReadContentAsObjectAsync%2A>."
  syntax:
    content: public virtual object ReadContentAsObject ();
    parameters: []
    return:
      type: System.Object
      description: The text content as the most appropriate common language runtime (CLR) object.
  overload: System.Xml.XmlReader.ReadContentAsObject*
  exceptions:
  - type: System.InvalidCastException
    commentId: T:System.InvalidCastException
    description: The attempted cast is not valid.
  - type: System.FormatException
    commentId: T:System.FormatException
    description: The string format is not valid.
  - type: System.InvalidOperationException
    commentId: T:System.InvalidOperationException
    description: An <xref href="System.Xml.XmlReader"></xref> method was called before a previous asynchronous operation finished. In this case, <xref href="System.InvalidOperationException"></xref> is thrown with the message "An asynchronous operation is already in progress."
  version:
  - netcore-1.0
  - netcore-1.1
  - netcore-2.0
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  - netstandard-1.0
  - netstandard-1.1
  - netstandard-1.2
  - netstandard-1.3
  - netstandard-1.4
  - netstandard-1.6
  - netstandard-2.0
  - xamarinandroid-7.1
  - xamarinios-10.8
  - xamarinmac-3.0
  monikers:
  - netcore-1.0
  - netcore-1.1
  - netcore-2.0
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  - netstandard-1.0
  - netstandard-1.1
  - netstandard-1.2
  - netstandard-1.3
  - netstandard-1.4
  - netstandard-1.6
  - netstandard-2.0
  - xamarinandroid-7.1
  - xamarinios-10.8
  - xamarinmac-3.0
  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Xml/XmlReader.xml
  ms.technology:
  - dotnet-standard
  author: mairaw
  ms.author: mairaw
  manager: wpickett
- uid: System.Xml.XmlReader.ReadContentAsObjectAsync
  commentId: M:System.Xml.XmlReader.ReadContentAsObjectAsync
  id: ReadContentAsObjectAsync
  parent: System.Xml.XmlReader
  langs:
  - csharp
  name: ReadContentAsObjectAsync()
  nameWithType: XmlReader.ReadContentAsObjectAsync()
  fullName: XmlReader.ReadContentAsObjectAsync()
  type: Method
  assemblies:
  - System.Xml.ReaderWriter
  - System.Xml
  - netstandard
  namespace: System.Xml
  summary: Asynchronously reads the text content at the current position as an <xref href="System.Object"></xref>.
  remarks: This is the asynchronous version of <xref:System.Xml.XmlReader.ReadContentAsObject%2A>, with the same functionality. To use this method, you must set the <xref:System.Xml.XmlReaderSettings.Async%2A> flag to `true`.
  syntax:
    content: public virtual System.Threading.Tasks.Task<object> ReadContentAsObjectAsync ();
    parameters: []
    return:
      type: System.Threading.Tasks.Task{System.Object}
      description: The text content as the most appropriate common language runtime (CLR) object.
  overload: System.Xml.XmlReader.ReadContentAsObjectAsync*
  exceptions:
  - type: System.InvalidOperationException
    commentId: T:System.InvalidOperationException
    description: An <xref href="System.Xml.XmlReader"></xref> asynchronous method was called without setting the <xref href="System.Xml.XmlReaderSettings.Async"></xref> flag to `true`. In this case, <xref href="System.InvalidOperationException"></xref> is thrown with the message "Set XmlReaderSettings.Async to true if you want to use Async Methods."
  attributes: []
  version:
  - netcore-1.0
  - netcore-1.1
  - netcore-2.0
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  - netstandard-1.0
  - netstandard-1.1
  - netstandard-1.2
  - netstandard-1.3
  - netstandard-1.4
  - netstandard-1.6
  - netstandard-2.0
  - xamarinandroid-7.1
  - xamarinios-10.8
  - xamarinmac-3.0
  monikers:
  - netcore-1.0
  - netcore-1.1
  - netcore-2.0
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  - netstandard-1.0
  - netstandard-1.1
  - netstandard-1.2
  - netstandard-1.3
  - netstandard-1.4
  - netstandard-1.6
  - netstandard-2.0
  - xamarinandroid-7.1
  - xamarinios-10.8
  - xamarinmac-3.0
  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Xml/XmlReader.xml
  ms.technology:
  - dotnet-standard
  author: mairaw
  ms.author: mairaw
  manager: wpickett
- uid: System.Xml.XmlReader.ReadContentAsString
  commentId: M:System.Xml.XmlReader.ReadContentAsString
  id: ReadContentAsString
  parent: System.Xml.XmlReader
  langs:
  - csharp
  name: ReadContentAsString()
  nameWithType: XmlReader.ReadContentAsString()
  fullName: XmlReader.ReadContentAsString()
  type: Method
  assemblies:
  - System.Xml.ReaderWriter
  - System.Xml
  - netstandard
  namespace: System.Xml
  summary: Reads the text content at the current position as a <xref href="System.String"></xref> object.
  remarks: "This method concatenates text, white space, significant white space, and CDATA sections, and skips any comments or processing instructions. Entity references are automatically resolved.  \n  \n This method can be used convert typed values to a string, or to read the text content while skipping comments and processing instructions.  \n  \n The following table describes how this method treats each node type.  \n  \n|XmlNodeType|Return value|Reader behavior|  \n|-----------------|------------------|---------------------|  \n|`Text`<br /><br /> `CDATA`<br /><br /> `Whitespace`<br /><br /> `SignificantWhitespace`<br /><br /> `EntityReference`<br /><br /> `EndEntity`|Concatenated content of text, CDATA, white space and significant white space nodes converted to the requested type.|Moves to the next start element or end element tag. Entity references are automatically expanded.|  \n|`Attribute`|Same as calling `XmlConvert.ToXxx` on the attribute value.|The reader remains in the current position.|  \n|`Comment`<br /><br /> `ProcessingInstruction`|Ignores the processing instruction (PI) or comment and reads the concatenated text content that follows the PI or comment.|Moves to the next start element or end element tag. Entity references are automatically expanded.|  \n|`EndElement`|An empty string.|The reader remains in the current position.|  \n|`Element`<br /><br /> `XmlDeclaration`<br /><br /> `None`<br /><br /> `Document`<br /><br /> `DocumentType`<br /><br /> `Notation`<br /><br /> `Entity`<br /><br /> `DocumentFragment`|An <xref:System.InvalidOperationException> is thrown.|Undefined, although typically the reader remains in the current position.|  \n  \n For more information, see the Remarks section of the <xref:System.Xml.XmlReader> reference page and the [W3C XML Schema Part 2: Datatypes](http://go.microsoft.com/fwlink/?LinkId=4871) recommendation.  \n  \n For the asynchronous version of this method, see <xref:System.Xml.XmlReader.ReadContentAsStringAsync%2A>."
  syntax:
    content: public virtual string ReadContentAsString ();
    parameters: []
    return:
      type: System.String
      description: The text content as a <xref href="System.String"></xref> object.
  overload: System.Xml.XmlReader.ReadContentAsString*
  exceptions:
  - type: System.InvalidCastException
    commentId: T:System.InvalidCastException
    description: The attempted cast is not valid.
  - type: System.FormatException
    commentId: T:System.FormatException
    description: The string format is not valid.
  - type: System.InvalidOperationException
    commentId: T:System.InvalidOperationException
    description: An <xref href="System.Xml.XmlReader"></xref> method was called before a previous asynchronous operation finished. In this case, <xref href="System.InvalidOperationException"></xref> is thrown with the message "An asynchronous operation is already in progress."
  version:
  - netcore-1.0
  - netcore-1.1
  - netcore-2.0
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  - netstandard-1.0
  - netstandard-1.1
  - netstandard-1.2
  - netstandard-1.3
  - netstandard-1.4
  - netstandard-1.6
  - netstandard-2.0
  - xamarinandroid-7.1
  - xamarinios-10.8
  - xamarinmac-3.0
  monikers:
  - netcore-1.0
  - netcore-1.1
  - netcore-2.0
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  - netstandard-1.0
  - netstandard-1.1
  - netstandard-1.2
  - netstandard-1.3
  - netstandard-1.4
  - netstandard-1.6
  - netstandard-2.0
  - xamarinandroid-7.1
  - xamarinios-10.8
  - xamarinmac-3.0
  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Xml/XmlReader.xml
  ms.technology:
  - dotnet-standard
  author: mairaw
  ms.author: mairaw
  manager: wpickett
- uid: System.Xml.XmlReader.ReadContentAsStringAsync
  commentId: M:System.Xml.XmlReader.ReadContentAsStringAsync
  id: ReadContentAsStringAsync
  parent: System.Xml.XmlReader
  langs:
  - csharp
  name: ReadContentAsStringAsync()
  nameWithType: XmlReader.ReadContentAsStringAsync()
  fullName: XmlReader.ReadContentAsStringAsync()
  type: Method
  assemblies:
  - System.Xml.ReaderWriter
  - System.Xml
  - netstandard
  namespace: System.Xml
  summary: Asynchronously reads the text content at the current position as a <xref href="System.String"></xref> object.
  remarks: This is the asynchronous version of <xref:System.Xml.XmlReader.ReadContentAsString%2A>, with the same functionality. To use this method, you must set the <xref:System.Xml.XmlReaderSettings.Async%2A> flag to `true`.
  syntax:
    content: public virtual System.Threading.Tasks.Task<string> ReadContentAsStringAsync ();
    parameters: []
    return:
      type: System.Threading.Tasks.Task{System.String}
      description: The text content as a <xref href="System.String"></xref> object.
  overload: System.Xml.XmlReader.ReadContentAsStringAsync*
  exceptions:
  - type: System.InvalidOperationException
    commentId: T:System.InvalidOperationException
    description: An <xref href="System.Xml.XmlReader"></xref> asynchronous method was called without setting the <xref href="System.Xml.XmlReaderSettings.Async"></xref> flag to `true`. In this case, <xref href="System.InvalidOperationException"></xref> is thrown with the message "Set XmlReaderSettings.Async to true if you want to use Async Methods."
  version:
  - netcore-1.0
  - netcore-1.1
  - netcore-2.0
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  - netstandard-1.0
  - netstandard-1.1
  - netstandard-1.2
  - netstandard-1.3
  - netstandard-1.4
  - netstandard-1.6
  - netstandard-2.0
  - xamarinandroid-7.1
  - xamarinios-10.8
  - xamarinmac-3.0
  monikers:
  - netcore-1.0
  - netcore-1.1
  - netcore-2.0
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  - netstandard-1.0
  - netstandard-1.1
  - netstandard-1.2
  - netstandard-1.3
  - netstandard-1.4
  - netstandard-1.6
  - netstandard-2.0
  - xamarinandroid-7.1
  - xamarinios-10.8
  - xamarinmac-3.0
  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Xml/XmlReader.xml
  ms.technology:
  - dotnet-standard
  author: mairaw
  ms.author: mairaw
  manager: wpickett
- uid: System.Xml.XmlReader.ReadElementContentAs(System.Type,System.Xml.IXmlNamespaceResolver)
  commentId: M:System.Xml.XmlReader.ReadElementContentAs(System.Type,System.Xml.IXmlNamespaceResolver)
  id: ReadElementContentAs(System.Type,System.Xml.IXmlNamespaceResolver)
  parent: System.Xml.XmlReader
  langs:
  - csharp
  name: ReadElementContentAs(Type, IXmlNamespaceResolver)
  nameWithType: XmlReader.ReadElementContentAs(Type, IXmlNamespaceResolver)
  fullName: XmlReader.ReadElementContentAs(Type, IXmlNamespaceResolver)
  type: Method
  assemblies:
  - System.Xml.ReaderWriter
  - System.Xml
  - netstandard
  namespace: System.Xml
  summary: Reads the element content as the requested type.
  remarks: "This method reads the start tag, the contents of the element, and moves the reader past the end element tag. It expands entities and ignores processing instructions and comments. The element can only contain simple content. That is, it cannot have child elements.  \n  \n For more information, see the Remarks section of the <xref:System.Xml.XmlReader> reference page and the [W3C XML Schema Part 2: Datatypes](http://go.microsoft.com/fwlink/?LinkId=4871) recommendation.  \n  \n For the asynchronous version of this method, see <xref:System.Xml.XmlReader.ReadElementContentAsAsync%2A>."
  example:
  - "The following example uses the <xref:System.Xml.XmlReader.ReadElementContentAs%2A> method to read the content of the `date` node.  \n  \n [!code-csharp[XmlReader.ReadElementContentAs#5](~/samples/snippets/csharp/VS_Snippets_Data/XmlReader.ReadElementContentAs/CS/readElementContentAs.cs#5)]\n [!code-vb[XmlReader.ReadElementContentAs#5](~/samples/snippets/visualbasic/VS_Snippets_Data/XmlReader.ReadElementContentAs/VB/readElementContentAs.vb#5)]  \n  \n The example uses the `dataFile.xml` file as input.  \n  \n [!code-xml[XmlReader.ReadElementContentAs#8](~/samples/snippets/xml/VS_Snippets_Data/XmlReader.ReadElementContentAs/XML/dataFile.xml#8)]"
  syntax:
    content: public virtual object ReadElementContentAs (Type returnType, System.Xml.IXmlNamespaceResolver namespaceResolver);
    parameters:
    - id: returnType
      type: System.Type
      description: "The type of the value to be returned.  \n  \n **Note** With the release of the .NET Framework 3.5, the value of the <code>returnType</code> parameter can now be the <xref href=\"System.DateTimeOffset\"></xref> type."
    - id: namespaceResolver
      type: System.Xml.IXmlNamespaceResolver
      description: An <xref href="System.Xml.IXmlNamespaceResolver"></xref> object that is used to resolve any namespace prefixes related to type conversion.
    return:
      type: System.Object
      description: The element content converted to the requested typed object.
  overload: System.Xml.XmlReader.ReadElementContentAs*
  exceptions:
  - type: System.InvalidOperationException
    commentId: T:System.InvalidOperationException
    description: An <xref href="System.Xml.XmlReader"></xref> method was called before a previous asynchronous operation finished. In this case, <xref href="System.InvalidOperationException"></xref> is thrown with the message "An asynchronous operation is already in progress."
  - type: System.Xml.XmlException
    commentId: T:System.Xml.XmlException
    description: "The current element contains child elements.  \n  \n -or-  \n  \n The element content cannot be converted to the requested type."
  - type: System.ArgumentNullException
    commentId: T:System.ArgumentNullException
    description: The method is called with `null` arguments.
  - type: System.OverflowException
    commentId: T:System.OverflowException
    description: Read `Decimal.MaxValue`.
  version:
  - netcore-1.0
  - netcore-1.1
  - netcore-2.0
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  - netstandard-1.0
  - netstandard-1.1
  - netstandard-1.2
  - netstandard-1.3
  - netstandard-1.4
  - netstandard-1.6
  - netstandard-2.0
  - xamarinandroid-7.1
  - xamarinios-10.8
  - xamarinmac-3.0
  monikers:
  - netcore-1.0
  - netcore-1.1
  - netcore-2.0
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  - netstandard-1.0
  - netstandard-1.1
  - netstandard-1.2
  - netstandard-1.3
  - netstandard-1.4
  - netstandard-1.6
  - netstandard-2.0
  - xamarinandroid-7.1
  - xamarinios-10.8
  - xamarinmac-3.0
  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Xml/XmlReader.xml
  ms.technology:
  - dotnet-standard
  author: mairaw
  ms.author: mairaw
  manager: wpickett
- uid: System.Xml.XmlReader.ReadElementContentAs(System.Type,System.Xml.IXmlNamespaceResolver,System.String,System.String)
  commentId: M:System.Xml.XmlReader.ReadElementContentAs(System.Type,System.Xml.IXmlNamespaceResolver,System.String,System.String)
  id: ReadElementContentAs(System.Type,System.Xml.IXmlNamespaceResolver,System.String,System.String)
  parent: System.Xml.XmlReader
  langs:
  - csharp
  name: ReadElementContentAs(Type, IXmlNamespaceResolver, String, String)
  nameWithType: XmlReader.ReadElementContentAs(Type, IXmlNamespaceResolver, String, String)
  fullName: XmlReader.ReadElementContentAs(Type, IXmlNamespaceResolver, String, String)
  type: Method
  assemblies:
  - System.Xml.ReaderWriter
  - System.Xml
  - netstandard
  namespace: System.Xml
  summary: Checks that the specified local name and namespace URI matches that of the current element, then reads the element content as the requested type.
  remarks: "This method reads the start tag, the contents of the element, and moves the reader past the end element tag. It expands entities and ignores processing instructions and comments. The element can only contain simple content. That is, it cannot have child elements.  \n  \n For more information, see the Remarks section of the <xref:System.Xml.XmlReader> reference page and the [W3C XML Schema Part 2: Datatypes](http://go.microsoft.com/fwlink/?LinkId=4871) recommendation."
  syntax:
    content: public virtual object ReadElementContentAs (Type returnType, System.Xml.IXmlNamespaceResolver namespaceResolver, string localName, string namespaceURI);
    parameters:
    - id: returnType
      type: System.Type
      description: "The type of the value to be returned.  \n  \n **Note** With the release of the .NET Framework 3.5, the value of the <code>returnType</code> parameter can now be the <xref href=\"System.DateTimeOffset\"></xref> type."
    - id: namespaceResolver
      type: System.Xml.IXmlNamespaceResolver
      description: An <xref href="System.Xml.IXmlNamespaceResolver"></xref> object that is used to resolve any namespace prefixes related to type conversion.
    - id: localName
      type: System.String
      description: The local name of the element.
    - id: namespaceURI
      type: System.String
      description: The namespace URI of the element.
    return:
      type: System.Object
      description: The element content converted to the requested typed object.
  overload: System.Xml.XmlReader.ReadElementContentAs*
  exceptions:
  - type: System.InvalidOperationException
    commentId: T:System.InvalidOperationException
    description: An <xref href="System.Xml.XmlReader"></xref> method was called before a previous asynchronous operation finished. In this case, <xref href="System.InvalidOperationException"></xref> is thrown with the message "An asynchronous operation is already in progress."
  - type: System.Xml.XmlException
    commentId: T:System.Xml.XmlException
    description: "The current element contains child elements.  \n  \n -or-  \n  \n The element content cannot be converted to the requested type."
  - type: System.ArgumentNullException
    commentId: T:System.ArgumentNullException
    description: The method is called with `null` arguments.
  - type: System.ArgumentException
    commentId: T:System.ArgumentException
    description: The specified local name and namespace URI do not match that of the current element being read.
  - type: System.OverflowException
    commentId: T:System.OverflowException
    description: Read `Decimal.MaxValue`.
  version:
  - netcore-1.0
  - netcore-1.1
  - netcore-2.0
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  - netstandard-1.0
  - netstandard-1.1
  - netstandard-1.2
  - netstandard-1.3
  - netstandard-1.4
  - netstandard-1.6
  - netstandard-2.0
  - xamarinandroid-7.1
  - xamarinios-10.8
  - xamarinmac-3.0
  monikers:
  - netcore-1.0
  - netcore-1.1
  - netcore-2.0
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  - netstandard-1.0
  - netstandard-1.1
  - netstandard-1.2
  - netstandard-1.3
  - netstandard-1.4
  - netstandard-1.6
  - netstandard-2.0
  - xamarinandroid-7.1
  - xamarinios-10.8
  - xamarinmac-3.0
  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Xml/XmlReader.xml
  ms.technology:
  - dotnet-standard
  author: mairaw
  ms.author: mairaw
  manager: wpickett
- uid: System.Xml.XmlReader.ReadElementContentAsAsync(System.Type,System.Xml.IXmlNamespaceResolver)
  commentId: M:System.Xml.XmlReader.ReadElementContentAsAsync(System.Type,System.Xml.IXmlNamespaceResolver)
  id: ReadElementContentAsAsync(System.Type,System.Xml.IXmlNamespaceResolver)
  parent: System.Xml.XmlReader
  langs:
  - csharp
  name: ReadElementContentAsAsync(Type, IXmlNamespaceResolver)
  nameWithType: XmlReader.ReadElementContentAsAsync(Type, IXmlNamespaceResolver)
  fullName: XmlReader.ReadElementContentAsAsync(Type, IXmlNamespaceResolver)
  type: Method
  assemblies:
  - System.Xml.ReaderWriter
  - System.Xml
  - netstandard
  namespace: System.Xml
  summary: Asynchronously reads the element content as the requested type.
  remarks: This is the asynchronous version of <xref:System.Xml.XmlReader.ReadElementContentAs%2A>, with the same functionality. To use this method, you must set the <xref:System.Xml.XmlReaderSettings.Async%2A> flag to `true`.
  syntax:
    content: public virtual System.Threading.Tasks.Task<object> ReadElementContentAsAsync (Type returnType, System.Xml.IXmlNamespaceResolver namespaceResolver);
    parameters:
    - id: returnType
      type: System.Type
      description: The type of the value to be returned.
    - id: namespaceResolver
      type: System.Xml.IXmlNamespaceResolver
      description: An <xref href="System.Xml.IXmlNamespaceResolver"></xref> object that is used to resolve any namespace prefixes related to type conversion.
    return:
      type: System.Threading.Tasks.Task{System.Object}
      description: The element content converted to the requested typed object.
  overload: System.Xml.XmlReader.ReadElementContentAsAsync*
  exceptions:
  - type: System.InvalidOperationException
    commentId: T:System.InvalidOperationException
    description: An <xref href="System.Xml.XmlReader"></xref> asynchronous method was called without setting the <xref href="System.Xml.XmlReaderSettings.Async"></xref> flag to `true`. In this case, <xref href="System.InvalidOperationException"></xref> is thrown with the message "Set XmlReaderSettings.Async to true if you want to use Async Methods."
  attributes: []
  version:
  - netcore-1.0
  - netcore-1.1
  - netcore-2.0
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  - netstandard-1.0
  - netstandard-1.1
  - netstandard-1.2
  - netstandard-1.3
  - netstandard-1.4
  - netstandard-1.6
  - netstandard-2.0
  - xamarinandroid-7.1
  - xamarinios-10.8
  - xamarinmac-3.0
  monikers:
  - netcore-1.0
  - netcore-1.1
  - netcore-2.0
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  - netstandard-1.0
  - netstandard-1.1
  - netstandard-1.2
  - netstandard-1.3
  - netstandard-1.4
  - netstandard-1.6
  - netstandard-2.0
  - xamarinandroid-7.1
  - xamarinios-10.8
  - xamarinmac-3.0
  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Xml/XmlReader.xml
  ms.technology:
  - dotnet-standard
  author: mairaw
  ms.author: mairaw
  manager: wpickett
- uid: System.Xml.XmlReader.ReadElementContentAsBase64(System.Byte[],System.Int32,System.Int32)
  commentId: M:System.Xml.XmlReader.ReadElementContentAsBase64(System.Byte[],System.Int32,System.Int32)
  id: ReadElementContentAsBase64(System.Byte[],System.Int32,System.Int32)
  parent: System.Xml.XmlReader
  langs:
  - csharp
  name: ReadElementContentAsBase64(Byte[], Int32, Int32)
  nameWithType: XmlReader.ReadElementContentAsBase64(Byte[], Int32, Int32)
  fullName: XmlReader.ReadElementContentAsBase64(Byte[], Int32, Int32)
  type: Method
  assemblies:
  - System.Xml.ReaderWriter
  - System.Xml
  - netstandard
  namespace: System.Xml
  summary: Reads the element and decodes the `Base64` content.
  remarks: "This method reads the element content, decodes it using `Base64` encoding, and returns the decoded binary bytes (for example, an inline `Base64`-encoded GIF image) into the buffer. For more information, see RFC 1521, \"MIME (Multipurpose Internet Mail Extensions) Part One: Mechanisms for Specifying and Describing the Format of Internet Message Bodies\". You can obtain RFCs from the [Request for Comments Web site](http://go.microsoft.com/fwlink/?LinkId=37119).  \n  \n <xref:System.Xml.XmlReader.ReadElementContentAsBase64%2A> can only read simple-content elements. The element can contain text, white space, significant white space, CDATA sections, comments and processing instructions. It can also contain entity references, which are automatically expanded. The element cannot have child elements.  \n  \n This method is very similar to the <xref:System.Xml.XmlReader.ReadContentAsBase64%2A> method except that it can only be called on element node types.  \n  \n If the `count` value is higher than the number of bytes in the document, or if it is equal to the number of bytes in the document, the <xref:System.Xml.XmlReader> reads all the remaining bytes in the document and returns the number of bytes read. The next <xref:System.Xml.XmlReader> method call returns a zero and moves the reader to the node following the `EndElement`.  \n  \n If you call <xref:System.Xml.XmlReader.Read%2A> before all of the element content is consumed, the reader may behave as if the first content was consumed and then the <xref:System.Xml.XmlReader.Read%2A> method was called. This means that the reader will read all the text until the end element is encountered. It will then read the end tag node, read the next node, and then position itself on the next subsequent node.  \n  \n For the asynchronous version of this method, see <xref:System.Xml.XmlReader.ReadElementContentAsBase64Async%2A>."
  example:
  - "The following example reads an inline `Base64` encoded image. The `Base64` data is embedded within the `<image>` element. A <xref:System.IO.BinaryWriter> is used to create a new binary data file.  \n  \n [!code-csharp[XmlReader_Read_Write_Binary#4](~/samples/snippets/csharp/VS_Snippets_Data/XmlReader_Read_Write_Binary/CS/readBinary.cs#4)]\n [!code-vb[XmlReader_Read_Write_Binary#4](~/samples/snippets/visualbasic/VS_Snippets_Data/XmlReader_Read_Write_Binary/VB/readBinary.vb#4)]"
  syntax:
    content: public virtual int ReadElementContentAsBase64 (byte[] buffer, int index, int count);
    parameters:
    - id: buffer
      type: System.Byte[]
      description: The buffer into which to copy the resulting text. This value cannot be `null`.
    - id: index
      type: System.Int32
      description: The offset into the buffer where to start copying the result.
    - id: count
      type: System.Int32
      description: The maximum number of bytes to copy into the buffer. The actual number of bytes copied is returned from this method.
    return:
      type: System.Int32
      description: The number of bytes written to the buffer.
  overload: System.Xml.XmlReader.ReadElementContentAsBase64*
  exceptions:
  - type: System.ArgumentNullException
    commentId: T:System.ArgumentNullException
    description: The <code>buffer</code> value is `null`.
  - type: System.InvalidOperationException
    commentId: T:System.InvalidOperationException
    description: An <xref href="System.Xml.XmlReader"></xref> method was called before a previous asynchronous operation finished. In this case, <xref href="System.InvalidOperationException"></xref> is thrown with the message "An asynchronous operation is already in progress."
  - type: System.ArgumentOutOfRangeException
    commentId: T:System.ArgumentOutOfRangeException
    description: The index into the buffer or index + count is larger than the allocated buffer size.
  - type: System.NotSupportedException
    commentId: T:System.NotSupportedException
    description: The <xref href="System.Xml.XmlReader"></xref> implementation does not support this method.
  - type: System.Xml.XmlException
    commentId: T:System.Xml.XmlException
    description: The element contains mixed-content.
  - type: System.FormatException
    commentId: T:System.FormatException
    description: The content cannot be converted to the requested type.
  version:
  - netcore-1.0
  - netcore-1.1
  - netcore-2.0
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  - netstandard-1.0
  - netstandard-1.1
  - netstandard-1.2
  - netstandard-1.3
  - netstandard-1.4
  - netstandard-1.6
  - netstandard-2.0
  - xamarinandroid-7.1
  - xamarinios-10.8
  - xamarinmac-3.0
  monikers:
  - netcore-1.0
  - netcore-1.1
  - netcore-2.0
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  - netstandard-1.0
  - netstandard-1.1
  - netstandard-1.2
  - netstandard-1.3
  - netstandard-1.4
  - netstandard-1.6
  - netstandard-2.0
  - xamarinandroid-7.1
  - xamarinios-10.8
  - xamarinmac-3.0
  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Xml/XmlReader.xml
  ms.technology:
  - dotnet-standard
  author: mairaw
  ms.author: mairaw
  manager: wpickett
- uid: System.Xml.XmlReader.ReadElementContentAsBase64Async(System.Byte[],System.Int32,System.Int32)
  commentId: M:System.Xml.XmlReader.ReadElementContentAsBase64Async(System.Byte[],System.Int32,System.Int32)
  id: ReadElementContentAsBase64Async(System.Byte[],System.Int32,System.Int32)
  parent: System.Xml.XmlReader
  langs:
  - csharp
  name: ReadElementContentAsBase64Async(Byte[], Int32, Int32)
  nameWithType: XmlReader.ReadElementContentAsBase64Async(Byte[], Int32, Int32)
  fullName: XmlReader.ReadElementContentAsBase64Async(Byte[], Int32, Int32)
  type: Method
  assemblies:
  - System.Xml.ReaderWriter
  - System.Xml
  - netstandard
  namespace: System.Xml
  summary: Asynchronously reads the element and decodes the `Base64` content.
  remarks: This is the asynchronous version of <xref:System.Xml.XmlReader.ReadElementContentAsBase64%2A>, with the same functionality. To use this method, you must set the <xref:System.Xml.XmlReaderSettings.Async%2A> flag to `true`.
  syntax:
    content: public virtual System.Threading.Tasks.Task<int> ReadElementContentAsBase64Async (byte[] buffer, int index, int count);
    parameters:
    - id: buffer
      type: System.Byte[]
      description: The buffer into which to copy the resulting text. This value cannot be `null`.
    - id: index
      type: System.Int32
      description: The offset into the buffer where to start copying the result.
    - id: count
      type: System.Int32
      description: The maximum number of bytes to copy into the buffer. The actual number of bytes copied is returned from this method.
    return:
      type: System.Threading.Tasks.Task{System.Int32}
      description: The number of bytes written to the buffer.
  overload: System.Xml.XmlReader.ReadElementContentAsBase64Async*
  exceptions:
  - type: System.InvalidOperationException
    commentId: T:System.InvalidOperationException
    description: An <xref href="System.Xml.XmlReader"></xref> asynchronous method was called without setting the <xref href="System.Xml.XmlReaderSettings.Async"></xref> flag to `true`. In this case, <xref href="System.InvalidOperationException"></xref> is thrown with the message "Set XmlReaderSettings.Async to true if you want to use Async Methods."
  version:
  - netcore-1.0
  - netcore-1.1
  - netcore-2.0
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  - netstandard-1.0
  - netstandard-1.1
  - netstandard-1.2
  - netstandard-1.3
  - netstandard-1.4
  - netstandard-1.6
  - netstandard-2.0
  - xamarinandroid-7.1
  - xamarinios-10.8
  - xamarinmac-3.0
  monikers:
  - netcore-1.0
  - netcore-1.1
  - netcore-2.0
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  - netstandard-1.0
  - netstandard-1.1
  - netstandard-1.2
  - netstandard-1.3
  - netstandard-1.4
  - netstandard-1.6
  - netstandard-2.0
  - xamarinandroid-7.1
  - xamarinios-10.8
  - xamarinmac-3.0
  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Xml/XmlReader.xml
  ms.technology:
  - dotnet-standard
  author: mairaw
  ms.author: mairaw
  manager: wpickett
- uid: System.Xml.XmlReader.ReadElementContentAsBinHex(System.Byte[],System.Int32,System.Int32)
  commentId: M:System.Xml.XmlReader.ReadElementContentAsBinHex(System.Byte[],System.Int32,System.Int32)
  id: ReadElementContentAsBinHex(System.Byte[],System.Int32,System.Int32)
  parent: System.Xml.XmlReader
  langs:
  - csharp
  name: ReadElementContentAsBinHex(Byte[], Int32, Int32)
  nameWithType: XmlReader.ReadElementContentAsBinHex(Byte[], Int32, Int32)
  fullName: XmlReader.ReadElementContentAsBinHex(Byte[], Int32, Int32)
  type: Method
  assemblies:
  - System.Xml.ReaderWriter
  - System.Xml
  - netstandard
  namespace: System.Xml
  summary: Reads the element and decodes the `BinHex` content.
  remarks: "This method reads the element content, decodes it using `BinHex` encoding, and returns the decoded binary bytes (for example, an inline `BinHex`-encoded GIF image) into the buffer.  \n  \n This method can only read simple-content elements. The element can contain text, white space, significant white space, CDATA sections, comments and processing instructions. It can also contain entity references, which are automatically expanded. The element cannot have child elements.  \n  \n This method is very similar to the <xref:System.Xml.XmlReader.ReadContentAsBinHex%2A> method except that it can only be called on element node types.  \n  \n If the `count` value is higher than the number of bytes in the document, or if it is equal to the number of bytes in the document, the <xref:System.Xml.XmlReader> reads all the remaining bytes in the document and returns the number of bytes read. The next <xref:System.Xml.XmlReader> method call returns a zero and moves the reader to the node following the `EndElement`.  \n  \n If you call <xref:System.Xml.XmlReader.Read%2A> before all of the element content is consumed, the reader may behave as if the first content was consumed and then the <xref:System.Xml.XmlReader.Read%2A> method was called. This means that the reader will read all the text until the end element is encountered. It will then read the end tag node, read the next node, and then position itself on the next subsequent node.  \n  \n For the asynchronous version of this method, see <xref:System.Xml.XmlReader.ReadElementContentAsBinHexAsync%2A>."
  example:
  - "The following example reads an inline `BinHex` encoded image. The `BinHex` data is embedded within the `<image>` element. A <xref:System.IO.BinaryWriter> is used to create a new binary data file.  \n  \n [!code-csharp[XmlReader_Read_Write_Binary#2](~/samples/snippets/csharp/VS_Snippets_Data/XmlReader_Read_Write_Binary/CS/readBinary.cs#2)]\n [!code-vb[XmlReader_Read_Write_Binary#2](~/samples/snippets/visualbasic/VS_Snippets_Data/XmlReader_Read_Write_Binary/VB/readBinary.vb#2)]"
  syntax:
    content: public virtual int ReadElementContentAsBinHex (byte[] buffer, int index, int count);
    parameters:
    - id: buffer
      type: System.Byte[]
      description: The buffer into which to copy the resulting text. This value cannot be `null`.
    - id: index
      type: System.Int32
      description: The offset into the buffer where to start copying the result.
    - id: count
      type: System.Int32
      description: The maximum number of bytes to copy into the buffer. The actual number of bytes copied is returned from this method.
    return:
      type: System.Int32
      description: The number of bytes written to the buffer.
  overload: System.Xml.XmlReader.ReadElementContentAsBinHex*
  exceptions:
  - type: System.ArgumentNullException
    commentId: T:System.ArgumentNullException
    description: The <code>buffer</code> value is `null`.
  - type: System.InvalidOperationException
    commentId: T:System.InvalidOperationException
    description: An <xref href="System.Xml.XmlReader"></xref> method was called before a previous asynchronous operation finished. In this case, <xref href="System.InvalidOperationException"></xref> is thrown with the message "An asynchronous operation is already in progress."
  - type: System.ArgumentOutOfRangeException
    commentId: T:System.ArgumentOutOfRangeException
    description: The index into the buffer or index + count is larger than the allocated buffer size.
  - type: System.NotSupportedException
    commentId: T:System.NotSupportedException
    description: The <xref href="System.Xml.XmlReader"></xref> implementation does not support this method.
  - type: System.Xml.XmlException
    commentId: T:System.Xml.XmlException
    description: The element contains mixed-content.
  - type: System.FormatException
    commentId: T:System.FormatException
    description: The content cannot be converted to the requested type.
  version:
  - netcore-1.0
  - netcore-1.1
  - netcore-2.0
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  - netstandard-1.0
  - netstandard-1.1
  - netstandard-1.2
  - netstandard-1.3
  - netstandard-1.4
  - netstandard-1.6
  - netstandard-2.0
  - xamarinandroid-7.1
  - xamarinios-10.8
  - xamarinmac-3.0
  monikers:
  - netcore-1.0
  - netcore-1.1
  - netcore-2.0
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  - netstandard-1.0
  - netstandard-1.1
  - netstandard-1.2
  - netstandard-1.3
  - netstandard-1.4
  - netstandard-1.6
  - netstandard-2.0
  - xamarinandroid-7.1
  - xamarinios-10.8
  - xamarinmac-3.0
  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Xml/XmlReader.xml
  ms.technology:
  - dotnet-standard
  author: mairaw
  ms.author: mairaw
  manager: wpickett
- uid: System.Xml.XmlReader.ReadElementContentAsBinHexAsync(System.Byte[],System.Int32,System.Int32)
  commentId: M:System.Xml.XmlReader.ReadElementContentAsBinHexAsync(System.Byte[],System.Int32,System.Int32)
  id: ReadElementContentAsBinHexAsync(System.Byte[],System.Int32,System.Int32)
  parent: System.Xml.XmlReader
  langs:
  - csharp
  name: ReadElementContentAsBinHexAsync(Byte[], Int32, Int32)
  nameWithType: XmlReader.ReadElementContentAsBinHexAsync(Byte[], Int32, Int32)
  fullName: XmlReader.ReadElementContentAsBinHexAsync(Byte[], Int32, Int32)
  type: Method
  assemblies:
  - System.Xml.ReaderWriter
  - System.Xml
  - netstandard
  namespace: System.Xml
  summary: Asynchronously reads the element and decodes the `BinHex` content.
  remarks: This is the asynchronous version of <xref:System.Xml.XmlReader.ReadElementContentAsBinHex%2A>, with the same functionality. To use this method, you must set the <xref:System.Xml.XmlReaderSettings.Async%2A> flag to `true`.
  syntax:
    content: public virtual System.Threading.Tasks.Task<int> ReadElementContentAsBinHexAsync (byte[] buffer, int index, int count);
    parameters:
    - id: buffer
      type: System.Byte[]
      description: The buffer into which to copy the resulting text. This value cannot be `null`.
    - id: index
      type: System.Int32
      description: The offset into the buffer where to start copying the result.
    - id: count
      type: System.Int32
      description: The maximum number of bytes to copy into the buffer. The actual number of bytes copied is returned from this method.
    return:
      type: System.Threading.Tasks.Task{System.Int32}
      description: The number of bytes written to the buffer.
  overload: System.Xml.XmlReader.ReadElementContentAsBinHexAsync*
  exceptions:
  - type: System.InvalidOperationException
    commentId: T:System.InvalidOperationException
    description: An <xref href="System.Xml.XmlReader"></xref> asynchronous method was called without setting the <xref href="System.Xml.XmlReaderSettings.Async"></xref> flag to `true`. In this case, <xref href="System.InvalidOperationException"></xref> is thrown with the message "Set XmlReaderSettings.Async to true if you want to use Async Methods."
  version:
  - netcore-1.0
  - netcore-1.1
  - netcore-2.0
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  - netstandard-1.0
  - netstandard-1.1
  - netstandard-1.2
  - netstandard-1.3
  - netstandard-1.4
  - netstandard-1.6
  - netstandard-2.0
  - xamarinandroid-7.1
  - xamarinios-10.8
  - xamarinmac-3.0
  monikers:
  - netcore-1.0
  - netcore-1.1
  - netcore-2.0
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  - netstandard-1.0
  - netstandard-1.1
  - netstandard-1.2
  - netstandard-1.3
  - netstandard-1.4
  - netstandard-1.6
  - netstandard-2.0
  - xamarinandroid-7.1
  - xamarinios-10.8
  - xamarinmac-3.0
  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Xml/XmlReader.xml
  ms.technology:
  - dotnet-standard
  author: mairaw
  ms.author: mairaw
  manager: wpickett
- uid: System.Xml.XmlReader.ReadElementContentAsBoolean(System.String,System.String)
  commentId: M:System.Xml.XmlReader.ReadElementContentAsBoolean(System.String,System.String)
  id: ReadElementContentAsBoolean(System.String,System.String)
  parent: System.Xml.XmlReader
  langs:
  - csharp
  name: ReadElementContentAsBoolean(String, String)
  nameWithType: XmlReader.ReadElementContentAsBoolean(String, String)
  fullName: XmlReader.ReadElementContentAsBoolean(String, String)
  type: Method
  assemblies:
  - System.Xml.ReaderWriter
  - System.Xml
  - netstandard
  namespace: System.Xml
  summary: Checks that the specified local name and namespace URI matches that of the current element, then reads the current element and returns the contents as a <xref href="System.Boolean"></xref> object.
  remarks: "This method reads the start tag, the contents of the element, and moves the reader past the end element tag. It expands entities and ignores processing instructions and comments. The element can only contain simple content. That is, it cannot have child elements.  \n  \n If the content is typed `xsd:boolean`, the reader returns an unboxed <xref:System.Boolean> object. If the content is not typed `xsd:boolean`, the reader attempts to convert it to a <xref:System.Boolean> object according to the rules defined by the [W3C XML Schema Part 2: Datatypes](http://go.microsoft.com/fwlink/?LinkId=4871) recommendation.  \n  \n For more information, see the Remarks section of the <xref:System.Xml.XmlReader> reference page."
  syntax:
    content: public virtual bool ReadElementContentAsBoolean (string localName, string namespaceURI);
    parameters:
    - id: localName
      type: System.String
      description: The local name of the element.
    - id: namespaceURI
      type: System.String
      description: The namespace URI of the element.
    return:
      type: System.Boolean
      description: The element content as a <xref href="System.Boolean"></xref> object.
  overload: System.Xml.XmlReader.ReadElementContentAsBoolean*
  exceptions:
  - type: System.InvalidOperationException
    commentId: T:System.InvalidOperationException
    description: An <xref href="System.Xml.XmlReader"></xref> method was called before a previous asynchronous operation finished. In this case, <xref href="System.InvalidOperationException"></xref> is thrown with the message "An asynchronous operation is already in progress."
  - type: System.Xml.XmlException
    commentId: T:System.Xml.XmlException
    description: "The current element contains child elements.  \n  \n -or-  \n  \n The element content cannot be converted to the requested type."
  - type: System.ArgumentNullException
    commentId: T:System.ArgumentNullException
    description: The method is called with `null` arguments.
  - type: System.ArgumentException
    commentId: T:System.ArgumentException
    description: The specified local name and namespace URI do not match that of the current element being read.
  version:
  - netcore-1.0
  - netcore-1.1
  - netcore-2.0
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  - netstandard-1.0
  - netstandard-1.1
  - netstandard-1.2
  - netstandard-1.3
  - netstandard-1.4
  - netstandard-1.6
  - netstandard-2.0
  - xamarinandroid-7.1
  - xamarinios-10.8
  - xamarinmac-3.0
  monikers:
  - netcore-1.0
  - netcore-1.1
  - netcore-2.0
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  - netstandard-1.0
  - netstandard-1.1
  - netstandard-1.2
  - netstandard-1.3
  - netstandard-1.4
  - netstandard-1.6
  - netstandard-2.0
  - xamarinandroid-7.1
  - xamarinios-10.8
  - xamarinmac-3.0
  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Xml/XmlReader.xml
  ms.technology:
  - dotnet-standard
  author: mairaw
  ms.author: mairaw
  manager: wpickett
- uid: System.Xml.XmlReader.ReadElementContentAsBoolean
  commentId: M:System.Xml.XmlReader.ReadElementContentAsBoolean
  id: ReadElementContentAsBoolean
  parent: System.Xml.XmlReader
  langs:
  - csharp
  name: ReadElementContentAsBoolean()
  nameWithType: XmlReader.ReadElementContentAsBoolean()
  fullName: XmlReader.ReadElementContentAsBoolean()
  type: Method
  assemblies:
  - System.Xml.ReaderWriter
  - System.Xml
  - netstandard
  namespace: System.Xml
  summary: Reads the current element and returns the contents as a <xref href="System.Boolean"></xref> object.
  remarks: "This method reads the start tag, the contents of the element, and moves the reader past the end element tag. It expands entities and ignores processing instructions and comments. The element can only contain simple content. That is, it cannot have child elements.  \n  \n If the element content is typed `xsd:boolean`, the reader returns an unboxed <xref:System.Boolean> object. If the content is not typed `xsd:boolean`, the reader attempts to convert it to a <xref:System.Boolean> object according to the rules defined by the [W3C XML Schema Part 2: Datatypes](http://go.microsoft.com/fwlink/?LinkId=4871) recommendation.  \n  \n For more information, see the Remarks section of the <xref:System.Xml.XmlReader> reference page."
  syntax:
    content: public virtual bool ReadElementContentAsBoolean ();
    parameters: []
    return:
      type: System.Boolean
      description: The element content as a <xref href="System.Boolean"></xref> object.
  overload: System.Xml.XmlReader.ReadElementContentAsBoolean*
  exceptions:
  - type: System.InvalidOperationException
    commentId: T:System.InvalidOperationException
    description: An <xref href="System.Xml.XmlReader"></xref> method was called before a previous asynchronous operation finished. In this case, <xref href="System.InvalidOperationException"></xref> is thrown with the message "An asynchronous operation is already in progress."
  - type: System.Xml.XmlException
    commentId: T:System.Xml.XmlException
    description: "The current element contains child elements.  \n  \n -or-  \n  \n The element content cannot be converted to a <xref href=\"System.Boolean\"></xref> object."
  - type: System.ArgumentNullException
    commentId: T:System.ArgumentNullException
    description: The method is called with `null` arguments.
  version:
  - netcore-1.0
  - netcore-1.1
  - netcore-2.0
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  - netstandard-1.0
  - netstandard-1.1
  - netstandard-1.2
  - netstandard-1.3
  - netstandard-1.4
  - netstandard-1.6
  - netstandard-2.0
  - xamarinandroid-7.1
  - xamarinios-10.8
  - xamarinmac-3.0
  monikers:
  - netcore-1.0
  - netcore-1.1
  - netcore-2.0
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  - netstandard-1.0
  - netstandard-1.1
  - netstandard-1.2
  - netstandard-1.3
  - netstandard-1.4
  - netstandard-1.6
  - netstandard-2.0
  - xamarinandroid-7.1
  - xamarinios-10.8
  - xamarinmac-3.0
  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Xml/XmlReader.xml
  ms.technology:
  - dotnet-standard
  author: mairaw
  ms.author: mairaw
  manager: wpickett
- uid: System.Xml.XmlReader.ReadElementContentAsDateTime
  commentId: M:System.Xml.XmlReader.ReadElementContentAsDateTime
  id: ReadElementContentAsDateTime
  parent: System.Xml.XmlReader
  langs:
  - csharp
  name: ReadElementContentAsDateTime()
  nameWithType: XmlReader.ReadElementContentAsDateTime()
  fullName: XmlReader.ReadElementContentAsDateTime()
  type: Method
  assemblies:
  - System.Xml
  - netstandard
  - System.Xml.ReaderWriter
  namespace: System.Xml
  summary: Reads the current element and returns the contents as a <xref href="System.DateTime"></xref> object.
  remarks: "This method reads the start tag, the contents of the element, and moves the reader past the end element tag. It expands entities and ignores processing instructions and comments. The element can only contain simple content. That is, it cannot have child elements.  \n  \n If the content is typed `xsd:dateTime`, the reader returns an unboxed <xref:System.DateTime> object. If the content is not typed `xsd:dateTime`, the reader attempts to convert it to a <xref:System.DateTime> object according to the rules defined by the [W3C XML Schema Part 2: Datatypes](http://go.microsoft.com/fwlink/?LinkId=4871) recommendation.  \n  \n> [!NOTE]\n>  You cannot rely on the <xref:System.DateTime.Year%2A?displayProperty=fullName> value when the content is typed as `xsd:gMonthDay`. <xref:System.Xml.XmlReader> always sets the <xref:System.DateTime.Year%2A?displayProperty=fullName> value to 1904 in this case.  \n  \n For more information, see the Remarks section of the <xref:System.Xml.XmlReader> reference page."
  example:
  - "The following example uses the <xref:System.Xml.XmlReader.ReadElementContentAsDateTime%2A> method to read the content of the `date` element.  \n  \n [!code-csharp[XmlReader.ReadElementContentAs#4](~/samples/snippets/csharp/VS_Snippets_Data/XmlReader.ReadElementContentAs/CS/readElementContentAs.cs#4)]\n [!code-vb[XmlReader.ReadElementContentAs#4](~/samples/snippets/visualbasic/VS_Snippets_Data/XmlReader.ReadElementContentAs/VB/readElementContentAs.vb#4)]  \n  \n The example uses the `dataFile.xml` file as input.  \n  \n [!code-xml[XmlReader.ReadElementContentAs#8](~/samples/snippets/xml/VS_Snippets_Data/XmlReader.ReadElementContentAs/XML/dataFile.xml#8)]"
  syntax:
    content: public virtual DateTime ReadElementContentAsDateTime ();
    parameters: []
    return:
      type: System.DateTime
      description: The element content as a <xref href="System.DateTime"></xref> object.
  overload: System.Xml.XmlReader.ReadElementContentAsDateTime*
  exceptions:
  - type: System.InvalidOperationException
    commentId: T:System.InvalidOperationException
    description: An <xref href="System.Xml.XmlReader"></xref> method was called before a previous asynchronous operation finished. In this case, <xref href="System.InvalidOperationException"></xref> is thrown with the message "An asynchronous operation is already in progress."
  - type: System.Xml.XmlException
    commentId: T:System.Xml.XmlException
    description: "The current element contains child elements.  \n  \n -or-  \n  \n The element content cannot be converted to a <xref href=\"System.DateTime\"></xref> object."
  - type: System.ArgumentNullException
    commentId: T:System.ArgumentNullException
    description: The method is called with `null` arguments.
  version:
  - netcore-2.0
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  - netstandard-2.0
  - xamarinandroid-7.1
  - xamarinios-10.8
  - xamarinmac-3.0
  monikers:
  - netcore-2.0
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  - netstandard-2.0
  - xamarinandroid-7.1
  - xamarinios-10.8
  - xamarinmac-3.0
  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Xml/XmlReader.xml
  ms.technology:
  - dotnet-standard
  author: mairaw
  ms.author: mairaw
  manager: wpickett
- uid: System.Xml.XmlReader.ReadElementContentAsDateTime(System.String,System.String)
  commentId: M:System.Xml.XmlReader.ReadElementContentAsDateTime(System.String,System.String)
  id: ReadElementContentAsDateTime(System.String,System.String)
  parent: System.Xml.XmlReader
  langs:
  - csharp
  name: ReadElementContentAsDateTime(String, String)
  nameWithType: XmlReader.ReadElementContentAsDateTime(String, String)
  fullName: XmlReader.ReadElementContentAsDateTime(String, String)
  type: Method
  assemblies:
  - System.Xml
  - netstandard
  - System.Xml.ReaderWriter
  namespace: System.Xml
  summary: Checks that the specified local name and namespace URI matches that of the current element, then reads the current element and returns the contents as a <xref href="System.DateTime"></xref> object.
  remarks: "This method reads the start tag, the contents of the element, and moves the reader past the end element tag. It expands entities and ignores processing instructions and comments. The element can only contain simple content. That is, it cannot have child elements.  \n  \n If the content is typed `xsd:dateTime`, the reader returns an unboxed <xref:System.DateTime> object. If the content is not typed `xsd:dateTime`, the reader attempts to convert it to a <xref:System.DateTime> object according to the rules defined by the [W3C XML Schema Part 2: Datatypes](http://go.microsoft.com/fwlink/?LinkId=4871) recommendation.  \n  \n> [!NOTE]\n>  You cannot rely on the <xref:System.DateTime.Year%2A?displayProperty=fullName> value when the content is typed as `xsd:gMonthDay`. <xref:System.Xml.XmlReader> always sets the <xref:System.DateTime.Year%2A?displayProperty=fullName> value to 1904 in this case.  \n  \n For more information, see the Remarks section of the <xref:System.Xml.XmlReader> reference page."
  syntax:
    content: public virtual DateTime ReadElementContentAsDateTime (string localName, string namespaceURI);
    parameters:
    - id: localName
      type: System.String
      description: The local name of the element.
    - id: namespaceURI
      type: System.String
      description: The namespace URI of the element.
    return:
      type: System.DateTime
      description: The element contents as a <xref href="System.DateTime"></xref> object.
  overload: System.Xml.XmlReader.ReadElementContentAsDateTime*
  exceptions:
  - type: System.InvalidOperationException
    commentId: T:System.InvalidOperationException
    description: An <xref href="System.Xml.XmlReader"></xref> method was called before a previous asynchronous operation finished. In this case, <xref href="System.InvalidOperationException"></xref> is thrown with the message "An asynchronous operation is already in progress."
  - type: System.Xml.XmlException
    commentId: T:System.Xml.XmlException
    description: "The current element contains child elements.  \n  \n -or-  \n  \n The element content cannot be converted to the requested type."
  - type: System.ArgumentNullException
    commentId: T:System.ArgumentNullException
    description: The method is called with `null` arguments.
  - type: System.ArgumentException
    commentId: T:System.ArgumentException
    description: The specified local name and namespace URI do not match that of the current element being read.
  version:
  - netcore-2.0
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  - netstandard-2.0
  - xamarinandroid-7.1
  - xamarinios-10.8
  - xamarinmac-3.0
  monikers:
  - netcore-2.0
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  - netstandard-2.0
  - xamarinandroid-7.1
  - xamarinios-10.8
  - xamarinmac-3.0
  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Xml/XmlReader.xml
  ms.technology:
  - dotnet-standard
  author: mairaw
  ms.author: mairaw
  manager: wpickett
- uid: System.Xml.XmlReader.ReadElementContentAsDecimal
  commentId: M:System.Xml.XmlReader.ReadElementContentAsDecimal
  id: ReadElementContentAsDecimal
  parent: System.Xml.XmlReader
  langs:
  - csharp
  name: ReadElementContentAsDecimal()
  nameWithType: XmlReader.ReadElementContentAsDecimal()
  fullName: XmlReader.ReadElementContentAsDecimal()
  type: Method
  assemblies:
  - System.Xml.ReaderWriter
  - System.Xml
  - netstandard
  namespace: System.Xml
  summary: Reads the current element and returns the contents as a <xref href="System.Decimal"></xref> object.
  remarks: "This method reads the start tag, the contents of the element, and moves the reader past the end element tag. It expands entities and ignores processing instructions and comments. The element can only contain simple content. That is, it cannot have child elements.  \n  \n The reader attempts to convert the element content to an <xref:System.Decimal> object according to the rules defined by the [W3C XML Schema Part 2: Datatypes](http://go.microsoft.com/fwlink/?LinkId=4871) recommendation.  \n  \n For more information, see the Remarks section of the <xref:System.Xml.XmlReader> reference page."
  syntax:
    content: public virtual decimal ReadElementContentAsDecimal ();
    parameters: []
    return:
      type: System.Decimal
      description: The element content as a <xref href="System.Decimal"></xref> object.
  overload: System.Xml.XmlReader.ReadElementContentAsDecimal*
  exceptions:
  - type: System.InvalidOperationException
    commentId: T:System.InvalidOperationException
    description: An <xref href="System.Xml.XmlReader"></xref> method was called before a previous asynchronous operation finished. In this case, <xref href="System.InvalidOperationException"></xref> is thrown with the message "An asynchronous operation is already in progress."
  - type: System.Xml.XmlException
    commentId: T:System.Xml.XmlException
    description: "The current element contains child elements.  \n  \n -or-  \n  \n The element content cannot be converted to a <xref href=\"System.Decimal\"></xref>."
  - type: System.ArgumentNullException
    commentId: T:System.ArgumentNullException
    description: The method is called with `null` arguments.
  version:
  - netcore-1.0
  - netcore-1.1
  - netcore-2.0
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  - netstandard-1.0
  - netstandard-1.1
  - netstandard-1.2
  - netstandard-1.3
  - netstandard-1.4
  - netstandard-1.6
  - netstandard-2.0
  - xamarinandroid-7.1
  - xamarinios-10.8
  - xamarinmac-3.0
  monikers:
  - netcore-1.0
  - netcore-1.1
  - netcore-2.0
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  - netstandard-1.0
  - netstandard-1.1
  - netstandard-1.2
  - netstandard-1.3
  - netstandard-1.4
  - netstandard-1.6
  - netstandard-2.0
  - xamarinandroid-7.1
  - xamarinios-10.8
  - xamarinmac-3.0
  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Xml/XmlReader.xml
  ms.technology:
  - dotnet-standard
  author: mairaw
  ms.author: mairaw
  manager: wpickett
- uid: System.Xml.XmlReader.ReadElementContentAsDecimal(System.String,System.String)
  commentId: M:System.Xml.XmlReader.ReadElementContentAsDecimal(System.String,System.String)
  id: ReadElementContentAsDecimal(System.String,System.String)
  parent: System.Xml.XmlReader
  langs:
  - csharp
  name: ReadElementContentAsDecimal(String, String)
  nameWithType: XmlReader.ReadElementContentAsDecimal(String, String)
  fullName: XmlReader.ReadElementContentAsDecimal(String, String)
  type: Method
  assemblies:
  - System.Xml.ReaderWriter
  - System.Xml
  - netstandard
  namespace: System.Xml
  summary: Checks that the specified local name and namespace URI matches that of the current element, then reads the current element and returns the contents as a <xref href="System.Decimal"></xref> object.
  remarks: "This method reads the start tag, the contents of the element, and moves the reader past the end element tag. It expands entities and ignores processing instructions and comments. The element can only contain simple content. That is, it cannot have child elements.  \n  \n The reader attempts to convert the element content to an <xref:System.Decimal> object according to the rules defined by the [W3C XML Schema Part 2: Datatypes](http://go.microsoft.com/fwlink/?LinkId=4871) recommendation.  \n  \n For more information, see the Remarks section of the <xref:System.Xml.XmlReader> reference page."
  syntax:
    content: public virtual decimal ReadElementContentAsDecimal (string localName, string namespaceURI);
    parameters:
    - id: localName
      type: System.String
      description: The local name of the element.
    - id: namespaceURI
      type: System.String
      description: The namespace URI of the element.
    return:
      type: System.Decimal
      description: The element content as a <xref href="System.Decimal"></xref> object.
  overload: System.Xml.XmlReader.ReadElementContentAsDecimal*
  exceptions:
  - type: System.InvalidOperationException
    commentId: T:System.InvalidOperationException
    description: An <xref href="System.Xml.XmlReader"></xref> method was called before a previous asynchronous operation finished. In this case, <xref href="System.InvalidOperationException"></xref> is thrown with the message "An asynchronous operation is already in progress."
  - type: System.Xml.XmlException
    commentId: T:System.Xml.XmlException
    description: "The current element contains child elements.  \n  \n -or-  \n  \n The element content cannot be converted to a <xref href=\"System.Decimal\"></xref>."
  - type: System.ArgumentNullException
    commentId: T:System.ArgumentNullException
    description: The method is called with `null` arguments.
  - type: System.ArgumentException
    commentId: T:System.ArgumentException
    description: The specified local name and namespace URI do not match that of the current element being read.
  version:
  - netcore-1.0
  - netcore-1.1
  - netcore-2.0
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  - netstandard-1.0
  - netstandard-1.1
  - netstandard-1.2
  - netstandard-1.3
  - netstandard-1.4
  - netstandard-1.6
  - netstandard-2.0
  - xamarinandroid-7.1
  - xamarinios-10.8
  - xamarinmac-3.0
  monikers:
  - netcore-1.0
  - netcore-1.1
  - netcore-2.0
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  - netstandard-1.0
  - netstandard-1.1
  - netstandard-1.2
  - netstandard-1.3
  - netstandard-1.4
  - netstandard-1.6
  - netstandard-2.0
  - xamarinandroid-7.1
  - xamarinios-10.8
  - xamarinmac-3.0
  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Xml/XmlReader.xml
  ms.technology:
  - dotnet-standard
  author: mairaw
  ms.author: mairaw
  manager: wpickett
- uid: System.Xml.XmlReader.ReadElementContentAsDouble
  commentId: M:System.Xml.XmlReader.ReadElementContentAsDouble
  id: ReadElementContentAsDouble
  parent: System.Xml.XmlReader
  langs:
  - csharp
  name: ReadElementContentAsDouble()
  nameWithType: XmlReader.ReadElementContentAsDouble()
  fullName: XmlReader.ReadElementContentAsDouble()
  type: Method
  assemblies:
  - System.Xml.ReaderWriter
  - System.Xml
  - netstandard
  namespace: System.Xml
  summary: Reads the current element and returns the contents as a double-precision floating-point number.
  remarks: "This method reads the start tag, the contents of the element, and moves the reader past the end element tag. It expands entities and ignores processing instructions and comments. The element can only contain simple content. That is, it cannot have child elements.  \n  \n If the content is typed `xsd:double`, the reader returns a double-precision floating-point number. If the content is not typed `xsd:double`, the reader attempts to convert it to a double-precision floating-point number according to the rules defined by the [W3C XML Schema Part 2: Datatypes](http://go.microsoft.com/fwlink/?LinkId=4871) recommendation.  \n  \n For more information, see the Remarks section of the <xref:System.Xml.XmlReader> reference page."
  example:
  - "The following example uses the method to return the element content as a double-precision floating-point number.  \n  \n [!code-csharp[XmlReader.ReadElementContentAs#7](~/samples/snippets/csharp/VS_Snippets_Data/XmlReader.ReadElementContentAs/CS/readElementContentAs.cs#7)]\n [!code-vb[XmlReader.ReadElementContentAs#7](~/samples/snippets/visualbasic/VS_Snippets_Data/XmlReader.ReadElementContentAs/VB/readElementContentAs.vb#7)]  \n  \n The example uses the `dataFile.xml` file as input.  \n  \n [!code-xml[XmlReader.ReadElementContentAs#8](~/samples/snippets/xml/VS_Snippets_Data/XmlReader.ReadElementContentAs/XML/dataFile.xml#8)]"
  syntax:
    content: public virtual double ReadElementContentAsDouble ();
    parameters: []
    return:
      type: System.Double
      description: The element content as a double-precision floating-point number.
  overload: System.Xml.XmlReader.ReadElementContentAsDouble*
  exceptions:
  - type: System.InvalidOperationException
    commentId: T:System.InvalidOperationException
    description: An <xref href="System.Xml.XmlReader"></xref> method was called before a previous asynchronous operation finished. In this case, <xref href="System.InvalidOperationException"></xref> is thrown with the message "An asynchronous operation is already in progress."
  - type: System.Xml.XmlException
    commentId: T:System.Xml.XmlException
    description: "The current element contains child elements.  \n  \n -or-  \n  \n The element content cannot be converted to a double-precision floating-point number."
  - type: System.ArgumentNullException
    commentId: T:System.ArgumentNullException
    description: The method is called with `null` arguments.
  version:
  - netcore-1.0
  - netcore-1.1
  - netcore-2.0
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  - netstandard-1.0
  - netstandard-1.1
  - netstandard-1.2
  - netstandard-1.3
  - netstandard-1.4
  - netstandard-1.6
  - netstandard-2.0
  - xamarinandroid-7.1
  - xamarinios-10.8
  - xamarinmac-3.0
  monikers:
  - netcore-1.0
  - netcore-1.1
  - netcore-2.0
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  - netstandard-1.0
  - netstandard-1.1
  - netstandard-1.2
  - netstandard-1.3
  - netstandard-1.4
  - netstandard-1.6
  - netstandard-2.0
  - xamarinandroid-7.1
  - xamarinios-10.8
  - xamarinmac-3.0
  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Xml/XmlReader.xml
  ms.technology:
  - dotnet-standard
  author: mairaw
  ms.author: mairaw
  manager: wpickett
- uid: System.Xml.XmlReader.ReadElementContentAsDouble(System.String,System.String)
  commentId: M:System.Xml.XmlReader.ReadElementContentAsDouble(System.String,System.String)
  id: ReadElementContentAsDouble(System.String,System.String)
  parent: System.Xml.XmlReader
  langs:
  - csharp
  name: ReadElementContentAsDouble(String, String)
  nameWithType: XmlReader.ReadElementContentAsDouble(String, String)
  fullName: XmlReader.ReadElementContentAsDouble(String, String)
  type: Method
  assemblies:
  - System.Xml.ReaderWriter
  - System.Xml
  - netstandard
  namespace: System.Xml
  summary: Checks that the specified local name and namespace URI matches that of the current element, then reads the current element and returns the contents as a double-precision floating-point number.
  remarks: "This method reads the start tag, the contents of the element, and moves the reader past the end element tag. It expands entities and ignores processing instructions and comments. The element can only contain simple content. That is, it cannot have child elements.  \n  \n If the content is typed `xsd:double`, the reader returns a double-precision floating-point number. If the content is not typed `xsd:double`, the reader attempts to convert it to a double-precision floating-point number according to the rules defined by the [W3C XML Schema Part 2: Datatypes](http://go.microsoft.com/fwlink/?LinkId=4871) recommendation.  \n  \n For more information, see the Remarks section of the <xref:System.Xml.XmlReader> reference page."
  syntax:
    content: public virtual double ReadElementContentAsDouble (string localName, string namespaceURI);
    parameters:
    - id: localName
      type: System.String
      description: The local name of the element.
    - id: namespaceURI
      type: System.String
      description: The namespace URI of the element.
    return:
      type: System.Double
      description: The element content as a double-precision floating-point number.
  overload: System.Xml.XmlReader.ReadElementContentAsDouble*
  exceptions:
  - type: System.InvalidOperationException
    commentId: T:System.InvalidOperationException
    description: An <xref href="System.Xml.XmlReader"></xref> method was called before a previous asynchronous operation finished. In this case, <xref href="System.InvalidOperationException"></xref> is thrown with the message "An asynchronous operation is already in progress."
  - type: System.Xml.XmlException
    commentId: T:System.Xml.XmlException
    description: "The current element contains child elements.  \n  \n -or-  \n  \n The element content cannot be converted to the requested type."
  - type: System.ArgumentNullException
    commentId: T:System.ArgumentNullException
    description: The method is called with `null` arguments.
  - type: System.ArgumentException
    commentId: T:System.ArgumentException
    description: The specified local name and namespace URI do not match that of the current element being read.
  version:
  - netcore-1.0
  - netcore-1.1
  - netcore-2.0
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  - netstandard-1.0
  - netstandard-1.1
  - netstandard-1.2
  - netstandard-1.3
  - netstandard-1.4
  - netstandard-1.6
  - netstandard-2.0
  - xamarinandroid-7.1
  - xamarinios-10.8
  - xamarinmac-3.0
  monikers:
  - netcore-1.0
  - netcore-1.1
  - netcore-2.0
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  - netstandard-1.0
  - netstandard-1.1
  - netstandard-1.2
  - netstandard-1.3
  - netstandard-1.4
  - netstandard-1.6
  - netstandard-2.0
  - xamarinandroid-7.1
  - xamarinios-10.8
  - xamarinmac-3.0
  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Xml/XmlReader.xml
  ms.technology:
  - dotnet-standard
  author: mairaw
  ms.author: mairaw
  manager: wpickett
- uid: System.Xml.XmlReader.ReadElementContentAsFloat
  commentId: M:System.Xml.XmlReader.ReadElementContentAsFloat
  id: ReadElementContentAsFloat
  parent: System.Xml.XmlReader
  langs:
  - csharp
  name: ReadElementContentAsFloat()
  nameWithType: XmlReader.ReadElementContentAsFloat()
  fullName: XmlReader.ReadElementContentAsFloat()
  type: Method
  assemblies:
  - System.Xml.ReaderWriter
  - System.Xml
  - netstandard
  namespace: System.Xml
  summary: Reads the current element and returns the contents as single-precision floating-point number.
  remarks: "This method reads the start tag, the contents of the element, and moves the reader past the end element tag. It expands entities and ignores processing instructions and comments. The element can only contain simple content. That is, it cannot have child elements.  \n  \n The reader attempts to convert the element content to a single-precision floating point number according to the rules defined by the [W3C XML Schema Part 2: Datatypes](http://go.microsoft.com/fwlink/?LinkId=4871) recommendation.  \n  \n For more information, see the Remarks section of the <xref:System.Xml.XmlReader> reference page."
  syntax:
    content: public virtual float ReadElementContentAsFloat ();
    parameters: []
    return:
      type: System.Single
      description: The element content as a single-precision floating point number.
  overload: System.Xml.XmlReader.ReadElementContentAsFloat*
  exceptions:
  - type: System.InvalidOperationException
    commentId: T:System.InvalidOperationException
    description: An <xref href="System.Xml.XmlReader"></xref> method was called before a previous asynchronous operation finished. In this case, <xref href="System.InvalidOperationException"></xref> is thrown with the message "An asynchronous operation is already in progress."
  - type: System.Xml.XmlException
    commentId: T:System.Xml.XmlException
    description: "The current element contains child elements.  \n  \n -or-  \n  \n The element content cannot be converted to a single-precision floating-point number."
  - type: System.ArgumentNullException
    commentId: T:System.ArgumentNullException
    description: The method is called with `null` arguments.
  version:
  - netcore-1.0
  - netcore-1.1
  - netcore-2.0
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  - netstandard-1.0
  - netstandard-1.1
  - netstandard-1.2
  - netstandard-1.3
  - netstandard-1.4
  - netstandard-1.6
  - netstandard-2.0
  - xamarinandroid-7.1
  - xamarinios-10.8
  - xamarinmac-3.0
  monikers:
  - netcore-1.0
  - netcore-1.1
  - netcore-2.0
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  - netstandard-1.0
  - netstandard-1.1
  - netstandard-1.2
  - netstandard-1.3
  - netstandard-1.4
  - netstandard-1.6
  - netstandard-2.0
  - xamarinandroid-7.1
  - xamarinios-10.8
  - xamarinmac-3.0
  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Xml/XmlReader.xml
  ms.technology:
  - dotnet-standard
  author: mairaw
  ms.author: mairaw
  manager: wpickett
- uid: System.Xml.XmlReader.ReadElementContentAsFloat(System.String,System.String)
  commentId: M:System.Xml.XmlReader.ReadElementContentAsFloat(System.String,System.String)
  id: ReadElementContentAsFloat(System.String,System.String)
  parent: System.Xml.XmlReader
  langs:
  - csharp
  name: ReadElementContentAsFloat(String, String)
  nameWithType: XmlReader.ReadElementContentAsFloat(String, String)
  fullName: XmlReader.ReadElementContentAsFloat(String, String)
  type: Method
  assemblies:
  - System.Xml.ReaderWriter
  - System.Xml
  - netstandard
  namespace: System.Xml
  summary: Checks that the specified local name and namespace URI matches that of the current element, then reads the current element and returns the contents as a single-precision floating-point number.
  remarks: "This method reads the start tag, the contents of the element, and moves the reader past the end element tag. It expands entities and ignores processing instructions and comments. The element can only contain simple content. That is, it cannot have child elements.  \n  \n The reader attempts to convert the element content to a single-precision floating point number according to the rules defined by the [W3C XML Schema Part 2: Datatypes](http://go.microsoft.com/fwlink/?LinkId=4871) recommendation.  \n  \n For more information, see the Remarks section of the <xref:System.Xml.XmlReader> reference page."
  syntax:
    content: public virtual float ReadElementContentAsFloat (string localName, string namespaceURI);
    parameters:
    - id: localName
      type: System.String
      description: The local name of the element.
    - id: namespaceURI
      type: System.String
      description: The namespace URI of the element.
    return:
      type: System.Single
      description: The element content as a single-precision floating point number.
  overload: System.Xml.XmlReader.ReadElementContentAsFloat*
  exceptions:
  - type: System.InvalidOperationException
    commentId: T:System.InvalidOperationException
    description: An <xref href="System.Xml.XmlReader"></xref> method was called before a previous asynchronous operation finished. In this case, <xref href="System.InvalidOperationException"></xref> is thrown with the message "An asynchronous operation is already in progress."
  - type: System.Xml.XmlException
    commentId: T:System.Xml.XmlException
    description: "The current element contains child elements.  \n  \n -or-  \n  \n The element content cannot be converted to a single-precision floating-point number."
  - type: System.ArgumentNullException
    commentId: T:System.ArgumentNullException
    description: The method is called with `null` arguments.
  - type: System.ArgumentException
    commentId: T:System.ArgumentException
    description: The specified local name and namespace URI do not match that of the current element being read.
  version:
  - netcore-1.0
  - netcore-1.1
  - netcore-2.0
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  - netstandard-1.0
  - netstandard-1.1
  - netstandard-1.2
  - netstandard-1.3
  - netstandard-1.4
  - netstandard-1.6
  - netstandard-2.0
  - xamarinandroid-7.1
  - xamarinios-10.8
  - xamarinmac-3.0
  monikers:
  - netcore-1.0
  - netcore-1.1
  - netcore-2.0
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  - netstandard-1.0
  - netstandard-1.1
  - netstandard-1.2
  - netstandard-1.3
  - netstandard-1.4
  - netstandard-1.6
  - netstandard-2.0
  - xamarinandroid-7.1
  - xamarinios-10.8
  - xamarinmac-3.0
  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Xml/XmlReader.xml
  ms.technology:
  - dotnet-standard
  author: mairaw
  ms.author: mairaw
  manager: wpickett
- uid: System.Xml.XmlReader.ReadElementContentAsInt
  commentId: M:System.Xml.XmlReader.ReadElementContentAsInt
  id: ReadElementContentAsInt
  parent: System.Xml.XmlReader
  langs:
  - csharp
  name: ReadElementContentAsInt()
  nameWithType: XmlReader.ReadElementContentAsInt()
  fullName: XmlReader.ReadElementContentAsInt()
  type: Method
  assemblies:
  - System.Xml.ReaderWriter
  - System.Xml
  - netstandard
  namespace: System.Xml
  summary: Reads the current element and returns the contents as a 32-bit signed integer.
  remarks: "This method reads the start tag, the contents of the element, and moves the reader past the end element tag. It expands entities and ignores processing instructions and comments. The element can only contain simple content. That is, it cannot have child elements.  \n  \n If the content is typed `xsd:integer`, the reader returns an unboxed 32-bit signed integer. If the content is not typed `xsd:integer`, the reader attempts to convert it to a 32-bit signed integer according to the rules defined by the [W3C XML Schema Part 2: Datatypes](http://go.microsoft.com/fwlink/?LinkId=4871) recommendation.  \n  \n For more information, see the Remarks section of the <xref:System.Xml.XmlReader> reference page."
  syntax:
    content: public virtual int ReadElementContentAsInt ();
    parameters: []
    return:
      type: System.Int32
      description: The element content as a 32-bit signed integer.
  overload: System.Xml.XmlReader.ReadElementContentAsInt*
  exceptions:
  - type: System.InvalidOperationException
    commentId: T:System.InvalidOperationException
    description: An <xref href="System.Xml.XmlReader"></xref> method was called before a previous asynchronous operation finished. In this case, <xref href="System.InvalidOperationException"></xref> is thrown with the message "An asynchronous operation is already in progress."
  - type: System.Xml.XmlException
    commentId: T:System.Xml.XmlException
    description: "The current element contains child elements.  \n  \n -or-  \n  \n The element content cannot be converted to a 32-bit signed integer."
  - type: System.ArgumentNullException
    commentId: T:System.ArgumentNullException
    description: The method is called with `null` arguments.
  version:
  - netcore-1.0
  - netcore-1.1
  - netcore-2.0
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  - netstandard-1.0
  - netstandard-1.1
  - netstandard-1.2
  - netstandard-1.3
  - netstandard-1.4
  - netstandard-1.6
  - netstandard-2.0
  - xamarinandroid-7.1
  - xamarinios-10.8
  - xamarinmac-3.0
  monikers:
  - netcore-1.0
  - netcore-1.1
  - netcore-2.0
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  - netstandard-1.0
  - netstandard-1.1
  - netstandard-1.2
  - netstandard-1.3
  - netstandard-1.4
  - netstandard-1.6
  - netstandard-2.0
  - xamarinandroid-7.1
  - xamarinios-10.8
  - xamarinmac-3.0
  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Xml/XmlReader.xml
  ms.technology:
  - dotnet-standard
  author: mairaw
  ms.author: mairaw
  manager: wpickett
- uid: System.Xml.XmlReader.ReadElementContentAsInt(System.String,System.String)
  commentId: M:System.Xml.XmlReader.ReadElementContentAsInt(System.String,System.String)
  id: ReadElementContentAsInt(System.String,System.String)
  parent: System.Xml.XmlReader
  langs:
  - csharp
  name: ReadElementContentAsInt(String, String)
  nameWithType: XmlReader.ReadElementContentAsInt(String, String)
  fullName: XmlReader.ReadElementContentAsInt(String, String)
  type: Method
  assemblies:
  - System.Xml.ReaderWriter
  - System.Xml
  - netstandard
  namespace: System.Xml
  summary: Checks that the specified local name and namespace URI matches that of the current element, then reads the current element and returns the contents as a 32-bit signed integer.
  remarks: "This method reads the start tag, the contents of the element, and moves the reader past the end element tag. It expands entities and ignores processing instructions and comments. The element can only contain simple content. That is, it cannot have child elements.  \n  \n If the content is typed `xsd:integer`, the reader returns an unboxed 32-bit signed integer. If the content is not typed `xsd:integer`, the reader attempts to convert it to a 32-bit signed integer according to the rules defined by the [W3C XML Schema Part 2: Datatypes](http://go.microsoft.com/fwlink/?LinkId=4871) recommendation.  \n  \n For more information, see the Remarks section of the <xref:System.Xml.XmlReader> reference page."
  syntax:
    content: public virtual int ReadElementContentAsInt (string localName, string namespaceURI);
    parameters:
    - id: localName
      type: System.String
      description: The local name of the element.
    - id: namespaceURI
      type: System.String
      description: The namespace URI of the element.
    return:
      type: System.Int32
      description: The element content as a 32-bit signed integer.
  overload: System.Xml.XmlReader.ReadElementContentAsInt*
  exceptions:
  - type: System.InvalidOperationException
    commentId: T:System.InvalidOperationException
    description: An <xref href="System.Xml.XmlReader"></xref> method was called before a previous asynchronous operation finished. In this case, <xref href="System.InvalidOperationException"></xref> is thrown with the message "An asynchronous operation is already in progress."
  - type: System.Xml.XmlException
    commentId: T:System.Xml.XmlException
    description: "The current element contains child elements.  \n  \n -or-  \n  \n The element content cannot be converted to a 32-bit signed integer."
  - type: System.ArgumentNullException
    commentId: T:System.ArgumentNullException
    description: The method is called with `null` arguments.
  - type: System.ArgumentException
    commentId: T:System.ArgumentException
    description: The specified local name and namespace URI do not match that of the current element being read.
  version:
  - netcore-1.0
  - netcore-1.1
  - netcore-2.0
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  - netstandard-1.0
  - netstandard-1.1
  - netstandard-1.2
  - netstandard-1.3
  - netstandard-1.4
  - netstandard-1.6
  - netstandard-2.0
  - xamarinandroid-7.1
  - xamarinios-10.8
  - xamarinmac-3.0
  monikers:
  - netcore-1.0
  - netcore-1.1
  - netcore-2.0
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  - netstandard-1.0
  - netstandard-1.1
  - netstandard-1.2
  - netstandard-1.3
  - netstandard-1.4
  - netstandard-1.6
  - netstandard-2.0
  - xamarinandroid-7.1
  - xamarinios-10.8
  - xamarinmac-3.0
  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Xml/XmlReader.xml
  ms.technology:
  - dotnet-standard
  author: mairaw
  ms.author: mairaw
  manager: wpickett
- uid: System.Xml.XmlReader.ReadElementContentAsLong
  commentId: M:System.Xml.XmlReader.ReadElementContentAsLong
  id: ReadElementContentAsLong
  parent: System.Xml.XmlReader
  langs:
  - csharp
  name: ReadElementContentAsLong()
  nameWithType: XmlReader.ReadElementContentAsLong()
  fullName: XmlReader.ReadElementContentAsLong()
  type: Method
  assemblies:
  - System.Xml.ReaderWriter
  - System.Xml
  - netstandard
  namespace: System.Xml
  summary: Reads the current element and returns the contents as a 64-bit signed integer.
  remarks: "This method reads the start tag, the contents of the element, and moves the reader past the end element tag. It expands entities and ignores processing instructions and comments. The element can only contain simple content. That is, it cannot have child elements.  \n  \n If the content is typed `xsd:long`, the reader returns an unboxed 64-bit signed integer. If the content is not typed `xsd:long`, the reader attempts to convert it to a 64-bit signed integer according to the rules defined by the [W3C XML Schema Part 2: Datatypes](http://go.microsoft.com/fwlink/?LinkId=4871) recommendation.  \n  \n For more information, see the Remarks section of the <xref:System.Xml.XmlReader> reference page."
  example:
  - "The following example uses the <xref:System.Xml.XmlReader.ReadElementContentAsLong%2A> method to read the content of the `longValue` element.  \n  \n [!code-csharp[XmlReader.ReadElementContentAs#3](~/samples/snippets/csharp/VS_Snippets_Data/XmlReader.ReadElementContentAs/CS/readElementContentAs.cs#3)]\n [!code-vb[XmlReader.ReadElementContentAs#3](~/samples/snippets/visualbasic/VS_Snippets_Data/XmlReader.ReadElementContentAs/VB/readElementContentAs.vb#3)]  \n  \n The example uses the `dataFile.xml` file as input.  \n  \n [!code-xml[XmlReader.ReadElementContentAs#8](~/samples/snippets/xml/VS_Snippets_Data/XmlReader.ReadElementContentAs/XML/dataFile.xml#8)]"
  syntax:
    content: public virtual long ReadElementContentAsLong ();
    parameters: []
    return:
      type: System.Int64
      description: The element content as a 64-bit signed integer.
  overload: System.Xml.XmlReader.ReadElementContentAsLong*
  exceptions:
  - type: System.InvalidOperationException
    commentId: T:System.InvalidOperationException
    description: An <xref href="System.Xml.XmlReader"></xref> method was called before a previous asynchronous operation finished. In this case, <xref href="System.InvalidOperationException"></xref> is thrown with the message "An asynchronous operation is already in progress."
  - type: System.Xml.XmlException
    commentId: T:System.Xml.XmlException
    description: "The current element contains child elements.  \n  \n -or-  \n  \n The element content cannot be converted to a 64-bit signed integer."
  - type: System.ArgumentNullException
    commentId: T:System.ArgumentNullException
    description: The method is called with `null` arguments.
  version:
  - netcore-1.0
  - netcore-1.1
  - netcore-2.0
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  - netstandard-1.0
  - netstandard-1.1
  - netstandard-1.2
  - netstandard-1.3
  - netstandard-1.4
  - netstandard-1.6
  - netstandard-2.0
  - xamarinandroid-7.1
  - xamarinios-10.8
  - xamarinmac-3.0
  monikers:
  - netcore-1.0
  - netcore-1.1
  - netcore-2.0
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  - netstandard-1.0
  - netstandard-1.1
  - netstandard-1.2
  - netstandard-1.3
  - netstandard-1.4
  - netstandard-1.6
  - netstandard-2.0
  - xamarinandroid-7.1
  - xamarinios-10.8
  - xamarinmac-3.0
  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Xml/XmlReader.xml
  ms.technology:
  - dotnet-standard
  author: mairaw
  ms.author: mairaw
  manager: wpickett
- uid: System.Xml.XmlReader.ReadElementContentAsLong(System.String,System.String)
  commentId: M:System.Xml.XmlReader.ReadElementContentAsLong(System.String,System.String)
  id: ReadElementContentAsLong(System.String,System.String)
  parent: System.Xml.XmlReader
  langs:
  - csharp
  name: ReadElementContentAsLong(String, String)
  nameWithType: XmlReader.ReadElementContentAsLong(String, String)
  fullName: XmlReader.ReadElementContentAsLong(String, String)
  type: Method
  assemblies:
  - System.Xml.ReaderWriter
  - System.Xml
  - netstandard
  namespace: System.Xml
  summary: Checks that the specified local name and namespace URI matches that of the current element, then reads the current element and returns the contents as a 64-bit signed integer.
  remarks: "This method reads the start tag, the contents of the element, and moves the reader past the end element tag. It expands entities and ignores processing instructions and comments. The element can only contain simple content. That is, it cannot have child elements.  \n  \n If the content is typed `xsd:long`, the reader returns an unboxed 64-bit signed integer. If the content is not typed `xsd:long`, the reader attempts to convert it to a 64-bit signed integer according to the rules defined by the [W3C XML Schema Part 2: Datatypes](http://go.microsoft.com/fwlink/?LinkId=4871) recommendation.  \n  \n For more information, see the Remarks section of the <xref:System.Xml.XmlReader> reference page."
  syntax:
    content: public virtual long ReadElementContentAsLong (string localName, string namespaceURI);
    parameters:
    - id: localName
      type: System.String
      description: The local name of the element.
    - id: namespaceURI
      type: System.String
      description: The namespace URI of the element.
    return:
      type: System.Int64
      description: The element content as a 64-bit signed integer.
  overload: System.Xml.XmlReader.ReadElementContentAsLong*
  exceptions:
  - type: System.InvalidOperationException
    commentId: T:System.InvalidOperationException
    description: An <xref href="System.Xml.XmlReader"></xref> method was called before a previous asynchronous operation finished. In this case, <xref href="System.InvalidOperationException"></xref> is thrown with the message "An asynchronous operation is already in progress."
  - type: System.Xml.XmlException
    commentId: T:System.Xml.XmlException
    description: "The current element contains child elements.  \n  \n -or-  \n  \n The element content cannot be converted to a 64-bit signed integer."
  - type: System.ArgumentNullException
    commentId: T:System.ArgumentNullException
    description: The method is called with `null` arguments.
  - type: System.ArgumentException
    commentId: T:System.ArgumentException
    description: The specified local name and namespace URI do not match that of the current element being read.
  version:
  - netcore-1.0
  - netcore-1.1
  - netcore-2.0
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  - netstandard-1.0
  - netstandard-1.1
  - netstandard-1.2
  - netstandard-1.3
  - netstandard-1.4
  - netstandard-1.6
  - netstandard-2.0
  - xamarinandroid-7.1
  - xamarinios-10.8
  - xamarinmac-3.0
  monikers:
  - netcore-1.0
  - netcore-1.1
  - netcore-2.0
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  - netstandard-1.0
  - netstandard-1.1
  - netstandard-1.2
  - netstandard-1.3
  - netstandard-1.4
  - netstandard-1.6
  - netstandard-2.0
  - xamarinandroid-7.1
  - xamarinios-10.8
  - xamarinmac-3.0
  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Xml/XmlReader.xml
  ms.technology:
  - dotnet-standard
  author: mairaw
  ms.author: mairaw
  manager: wpickett
- uid: System.Xml.XmlReader.ReadElementContentAsObject
  commentId: M:System.Xml.XmlReader.ReadElementContentAsObject
  id: ReadElementContentAsObject
  parent: System.Xml.XmlReader
  langs:
  - csharp
  name: ReadElementContentAsObject()
  nameWithType: XmlReader.ReadElementContentAsObject()
  fullName: XmlReader.ReadElementContentAsObject()
  type: Method
  assemblies:
  - System.Xml.ReaderWriter
  - System.Xml
  - netstandard
  namespace: System.Xml
  summary: Reads the current element and returns the contents as an <xref href="System.Object"></xref>.
  remarks: "This method reads the start tag, the contents of the element, and moves the reader past the end element tag. It expands entities and ignores processing instructions and comments. The element can only contain simple content. That is, it cannot have child elements.  \n  \n For more information, see the Remarks section of the <xref:System.Xml.XmlReader> reference page and the [W3C XML Schema Part 2: Datatypes](http://go.microsoft.com/fwlink/?LinkId=4871) recommendation.  \n  \n For the asynchronous version of this method, see <xref:System.Xml.XmlReader.ReadElementContentAsObjectAsync%2A>."
  example:
  - "The following example uses the method to read the content of the `price` node. The reader uses the information in the schema to map the content to the correct data type.  \n  \n [!code-csharp[XmlReader.ReadElementContentAs#6](~/samples/snippets/csharp/VS_Snippets_Data/XmlReader.ReadElementContentAs/CS/readElementContentAs.cs#6)]\n [!code-vb[XmlReader.ReadElementContentAs#6](~/samples/snippets/visualbasic/VS_Snippets_Data/XmlReader.ReadElementContentAs/VB/readElementContentAs.vb#6)]  \n  \n The example uses the following two files as input.  \n  \n `item.xml`  \n  \n [!code-xml[XmlReader.ReadElementContentAs#11](~/samples/snippets/xml/VS_Snippets_Data/XmlReader.ReadElementContentAs/XML/item.xml#11)]  \n  \n `item.xsd`  \n  \n [!code-xml[XmlReader.ReadElementContentAs#12](~/samples/snippets/xml/VS_Snippets_Data/XmlReader.ReadElementContentAs/XML/item.xsd#12)]"
  syntax:
    content: public virtual object ReadElementContentAsObject ();
    parameters: []
    return:
      type: System.Object
      description: A boxed common language runtime (CLR) object of the most appropriate type. The <xref href="System.Xml.XmlReader.ValueType"></xref> property determines the appropriate CLR type. If the content is typed as a list type, this method returns an array of boxed objects of the appropriate type.
  overload: System.Xml.XmlReader.ReadElementContentAsObject*
  exceptions:
  - type: System.InvalidOperationException
    commentId: T:System.InvalidOperationException
    description: An <xref href="System.Xml.XmlReader"></xref> method was called before a previous asynchronous operation finished. In this case, <xref href="System.InvalidOperationException"></xref> is thrown with the message "An asynchronous operation is already in progress."
  - type: System.Xml.XmlException
    commentId: T:System.Xml.XmlException
    description: "The current element contains child elements.  \n  \n -or-  \n  \n The element content cannot be converted to the requested type"
  - type: System.ArgumentNullException
    commentId: T:System.ArgumentNullException
    description: The method is called with `null` arguments.
  version:
  - netcore-1.0
  - netcore-1.1
  - netcore-2.0
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  - netstandard-1.0
  - netstandard-1.1
  - netstandard-1.2
  - netstandard-1.3
  - netstandard-1.4
  - netstandard-1.6
  - netstandard-2.0
  - xamarinandroid-7.1
  - xamarinios-10.8
  - xamarinmac-3.0
  monikers:
  - netcore-1.0
  - netcore-1.1
  - netcore-2.0
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  - netstandard-1.0
  - netstandard-1.1
  - netstandard-1.2
  - netstandard-1.3
  - netstandard-1.4
  - netstandard-1.6
  - netstandard-2.0
  - xamarinandroid-7.1
  - xamarinios-10.8
  - xamarinmac-3.0
  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Xml/XmlReader.xml
  ms.technology:
  - dotnet-standard
  author: mairaw
  ms.author: mairaw
  manager: wpickett
- uid: System.Xml.XmlReader.ReadElementContentAsObject(System.String,System.String)
  commentId: M:System.Xml.XmlReader.ReadElementContentAsObject(System.String,System.String)
  id: ReadElementContentAsObject(System.String,System.String)
  parent: System.Xml.XmlReader
  langs:
  - csharp
  name: ReadElementContentAsObject(String, String)
  nameWithType: XmlReader.ReadElementContentAsObject(String, String)
  fullName: XmlReader.ReadElementContentAsObject(String, String)
  type: Method
  assemblies:
  - System.Xml.ReaderWriter
  - System.Xml
  - netstandard
  namespace: System.Xml
  summary: Checks that the specified local name and namespace URI matches that of the current element, then reads the current element and returns the contents as an <xref href="System.Object"></xref>.
  remarks: "This method reads the start tag, the contents of the element, and moves the reader past the end element tag. It expands entities and ignores processing instructions and comments. The element can only contain simple content. That is, it cannot have child elements.  \n  \n For more information, see the Remarks section of the <xref:System.Xml.XmlReader> reference page and the [W3C XML Schema Part 2: Datatypes](http://go.microsoft.com/fwlink/?LinkId=4871) recommendation."
  syntax:
    content: public virtual object ReadElementContentAsObject (string localName, string namespaceURI);
    parameters:
    - id: localName
      type: System.String
      description: The local name of the element.
    - id: namespaceURI
      type: System.String
      description: The namespace URI of the element.
    return:
      type: System.Object
      description: A boxed common language runtime (CLR) object of the most appropriate type. The <xref href="System.Xml.XmlReader.ValueType"></xref> property determines the appropriate CLR type. If the content is typed as a list type, this method returns an array of boxed objects of the appropriate type.
  overload: System.Xml.XmlReader.ReadElementContentAsObject*
  exceptions:
  - type: System.InvalidOperationException
    commentId: T:System.InvalidOperationException
    description: An <xref href="System.Xml.XmlReader"></xref> method was called before a previous asynchronous operation finished. In this case, <xref href="System.InvalidOperationException"></xref> is thrown with the message "An asynchronous operation is already in progress."
  - type: System.Xml.XmlException
    commentId: T:System.Xml.XmlException
    description: "The current element contains child elements.  \n  \n -or-  \n  \n The element content cannot be converted to the requested type."
  - type: System.ArgumentNullException
    commentId: T:System.ArgumentNullException
    description: The method is called with `null` arguments.
  - type: System.ArgumentException
    commentId: T:System.ArgumentException
    description: The specified local name and namespace URI do not match that of the current element being read.
  version:
  - netcore-1.0
  - netcore-1.1
  - netcore-2.0
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  - netstandard-1.0
  - netstandard-1.1
  - netstandard-1.2
  - netstandard-1.3
  - netstandard-1.4
  - netstandard-1.6
  - netstandard-2.0
  - xamarinandroid-7.1
  - xamarinios-10.8
  - xamarinmac-3.0
  monikers:
  - netcore-1.0
  - netcore-1.1
  - netcore-2.0
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  - netstandard-1.0
  - netstandard-1.1
  - netstandard-1.2
  - netstandard-1.3
  - netstandard-1.4
  - netstandard-1.6
  - netstandard-2.0
  - xamarinandroid-7.1
  - xamarinios-10.8
  - xamarinmac-3.0
  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Xml/XmlReader.xml
  ms.technology:
  - dotnet-standard
  author: mairaw
  ms.author: mairaw
  manager: wpickett
- uid: System.Xml.XmlReader.ReadElementContentAsObjectAsync
  commentId: M:System.Xml.XmlReader.ReadElementContentAsObjectAsync
  id: ReadElementContentAsObjectAsync
  parent: System.Xml.XmlReader
  langs:
  - csharp
  name: ReadElementContentAsObjectAsync()
  nameWithType: XmlReader.ReadElementContentAsObjectAsync()
  fullName: XmlReader.ReadElementContentAsObjectAsync()
  type: Method
  assemblies:
  - System.Xml.ReaderWriter
  - System.Xml
  - netstandard
  namespace: System.Xml
  summary: Asynchronously reads the current element and returns the contents as an <xref href="System.Object"></xref>.
  remarks: This is the asynchronous version of <xref:System.Xml.XmlReader.ReadElementContentAsObject%2A>, with the same functionality. To use this method, you must set the <xref:System.Xml.XmlReaderSettings.Async%2A> flag to `true`.
  syntax:
    content: public virtual System.Threading.Tasks.Task<object> ReadElementContentAsObjectAsync ();
    parameters: []
    return:
      type: System.Threading.Tasks.Task{System.Object}
      description: A boxed common language runtime (CLR) object of the most appropriate type. The <xref href="System.Xml.XmlReader.ValueType"></xref> property determines the appropriate CLR type. If the content is typed as a list type, this method returns an array of boxed objects of the appropriate type.
  overload: System.Xml.XmlReader.ReadElementContentAsObjectAsync*
  exceptions:
  - type: System.InvalidOperationException
    commentId: T:System.InvalidOperationException
    description: An <xref href="System.Xml.XmlReader"></xref> asynchronous method was called without setting the <xref href="System.Xml.XmlReaderSettings.Async"></xref> flag to `true`. In this case, <xref href="System.InvalidOperationException"></xref> is thrown with the message "Set XmlReaderSettings.Async to true if you want to use Async Methods."
  attributes: []
  version:
  - netcore-1.0
  - netcore-1.1
  - netcore-2.0
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  - netstandard-1.0
  - netstandard-1.1
  - netstandard-1.2
  - netstandard-1.3
  - netstandard-1.4
  - netstandard-1.6
  - netstandard-2.0
  - xamarinandroid-7.1
  - xamarinios-10.8
  - xamarinmac-3.0
  monikers:
  - netcore-1.0
  - netcore-1.1
  - netcore-2.0
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  - netstandard-1.0
  - netstandard-1.1
  - netstandard-1.2
  - netstandard-1.3
  - netstandard-1.4
  - netstandard-1.6
  - netstandard-2.0
  - xamarinandroid-7.1
  - xamarinios-10.8
  - xamarinmac-3.0
  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Xml/XmlReader.xml
  ms.technology:
  - dotnet-standard
  author: mairaw
  ms.author: mairaw
  manager: wpickett
- uid: System.Xml.XmlReader.ReadElementContentAsString(System.String,System.String)
  commentId: M:System.Xml.XmlReader.ReadElementContentAsString(System.String,System.String)
  id: ReadElementContentAsString(System.String,System.String)
  parent: System.Xml.XmlReader
  langs:
  - csharp
  name: ReadElementContentAsString(String, String)
  nameWithType: XmlReader.ReadElementContentAsString(String, String)
  fullName: XmlReader.ReadElementContentAsString(String, String)
  type: Method
  assemblies:
  - System.Xml.ReaderWriter
  - System.Xml
  - netstandard
  namespace: System.Xml
  summary: Checks that the specified local name and namespace URI matches that of the current element, then reads the current element and returns the contents as a <xref href="System.String"></xref> object.
  remarks: "This method reads the start tag, the contents of the element, and moves the reader past the end element tag. It expands entities and ignores processing instructions and comments. The element can only contain simple content. That is, it cannot have child elements.  \n  \n For more information, see the Remarks section of the <xref:System.Xml.XmlReader> reference page and the [W3C XML Schema Part 2: Datatypes](http://go.microsoft.com/fwlink/?LinkId=4871) recommendation."
  example:
  - "The following example reads the `stringValue` element and returns the text content (ignoring the comment and processing instruction).  \n  \n [!code-csharp[XmlReader.ReadElementContentAs#2](~/samples/snippets/csharp/VS_Snippets_Data/XmlReader.ReadElementContentAs/CS/readElementContentAs.cs#2)]\n [!code-vb[XmlReader.ReadElementContentAs#2](~/samples/snippets/visualbasic/VS_Snippets_Data/XmlReader.ReadElementContentAs/VB/readElementContentAs.vb#2)]  \n  \n The example uses the `dataFile.xml` file as input.  \n  \n [!code-xml[XmlReader.ReadElementContentAs#8](~/samples/snippets/xml/VS_Snippets_Data/XmlReader.ReadElementContentAs/XML/dataFile.xml#8)]"
  syntax:
    content: public virtual string ReadElementContentAsString (string localName, string namespaceURI);
    parameters:
    - id: localName
      type: System.String
      description: The local name of the element.
    - id: namespaceURI
      type: System.String
      description: The namespace URI of the element.
    return:
      type: System.String
      description: The element content as a <xref href="System.String"></xref> object.
  overload: System.Xml.XmlReader.ReadElementContentAsString*
  exceptions:
  - type: System.InvalidOperationException
    commentId: T:System.InvalidOperationException
    description: An <xref href="System.Xml.XmlReader"></xref> method was called before a previous asynchronous operation finished. In this case, <xref href="System.InvalidOperationException"></xref> is thrown with the message "An asynchronous operation is already in progress."
  - type: System.Xml.XmlException
    commentId: T:System.Xml.XmlException
    description: "The current element contains child elements.  \n  \n -or-  \n  \n The element content cannot be converted to a <xref href=\"System.String\"></xref> object."
  - type: System.ArgumentNullException
    commentId: T:System.ArgumentNullException
    description: The method is called with `null` arguments.
  - type: System.ArgumentException
    commentId: T:System.ArgumentException
    description: The specified local name and namespace URI do not match that of the current element being read.
  version:
  - netcore-1.0
  - netcore-1.1
  - netcore-2.0
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  - netstandard-1.0
  - netstandard-1.1
  - netstandard-1.2
  - netstandard-1.3
  - netstandard-1.4
  - netstandard-1.6
  - netstandard-2.0
  - xamarinandroid-7.1
  - xamarinios-10.8
  - xamarinmac-3.0
  monikers:
  - netcore-1.0
  - netcore-1.1
  - netcore-2.0
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  - netstandard-1.0
  - netstandard-1.1
  - netstandard-1.2
  - netstandard-1.3
  - netstandard-1.4
  - netstandard-1.6
  - netstandard-2.0
  - xamarinandroid-7.1
  - xamarinios-10.8
  - xamarinmac-3.0
  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Xml/XmlReader.xml
  ms.technology:
  - dotnet-standard
  author: mairaw
  ms.author: mairaw
  manager: wpickett
- uid: System.Xml.XmlReader.ReadElementContentAsString
  commentId: M:System.Xml.XmlReader.ReadElementContentAsString
  id: ReadElementContentAsString
  parent: System.Xml.XmlReader
  langs:
  - csharp
  name: ReadElementContentAsString()
  nameWithType: XmlReader.ReadElementContentAsString()
  fullName: XmlReader.ReadElementContentAsString()
  type: Method
  assemblies:
  - System.Xml.ReaderWriter
  - System.Xml
  - netstandard
  namespace: System.Xml
  summary: Reads the current element and returns the contents as a <xref href="System.String"></xref> object.
  remarks: "This method reads the start tag, the contents of the element, and moves the reader past the end element tag. It expands entities and ignores processing instructions and comments. The element can only contain simple content. That is, it cannot have child elements.  \n  \n For more information, see the Remarks section of the <xref:System.Xml.XmlReader> reference page and the [W3C XML Schema Part 2: Datatypes](http://go.microsoft.com/fwlink/?LinkId=4871) recommendation.  \n  \n For the asynchronous version of this method, see <xref:System.Xml.XmlReader.ReadElementContentAsStringAsync%2A>."
  example:
  - "The following example reads the `stringValue` element and returns the text content (ignoring the comment and processing instruction).  \n  \n [!code-csharp[XmlReader.ReadElementContentAs#1](~/samples/snippets/csharp/VS_Snippets_Data/XmlReader.ReadElementContentAs/CS/readElementContentAs.cs#1)]\n [!code-vb[XmlReader.ReadElementContentAs#1](~/samples/snippets/visualbasic/VS_Snippets_Data/XmlReader.ReadElementContentAs/VB/readElementContentAs.vb#1)]  \n  \n The example uses the `dataFile.xml` file as input.  \n  \n [!code-xml[XmlReader.ReadElementContentAs#8](~/samples/snippets/xml/VS_Snippets_Data/XmlReader.ReadElementContentAs/XML/dataFile.xml#8)]"
  syntax:
    content: public virtual string ReadElementContentAsString ();
    parameters: []
    return:
      type: System.String
      description: The element content as a <xref href="System.String"></xref> object.
  overload: System.Xml.XmlReader.ReadElementContentAsString*
  exceptions:
  - type: System.InvalidOperationException
    commentId: T:System.InvalidOperationException
    description: An <xref href="System.Xml.XmlReader"></xref> method was called before a previous asynchronous operation finished. In this case, <xref href="System.InvalidOperationException"></xref> is thrown with the message "An asynchronous operation is already in progress."
  - type: System.Xml.XmlException
    commentId: T:System.Xml.XmlException
    description: "The current element contains child elements.  \n  \n -or-  \n  \n The element content cannot be converted to a <xref href=\"System.String\"></xref> object."
  - type: System.ArgumentNullException
    commentId: T:System.ArgumentNullException
    description: The method is called with `null` arguments.
  version:
  - netcore-1.0
  - netcore-1.1
  - netcore-2.0
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  - netstandard-1.0
  - netstandard-1.1
  - netstandard-1.2
  - netstandard-1.3
  - netstandard-1.4
  - netstandard-1.6
  - netstandard-2.0
  - xamarinandroid-7.1
  - xamarinios-10.8
  - xamarinmac-3.0
  monikers:
  - netcore-1.0
  - netcore-1.1
  - netcore-2.0
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  - netstandard-1.0
  - netstandard-1.1
  - netstandard-1.2
  - netstandard-1.3
  - netstandard-1.4
  - netstandard-1.6
  - netstandard-2.0
  - xamarinandroid-7.1
  - xamarinios-10.8
  - xamarinmac-3.0
  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Xml/XmlReader.xml
  ms.technology:
  - dotnet-standard
  author: mairaw
  ms.author: mairaw
  manager: wpickett
- uid: System.Xml.XmlReader.ReadElementContentAsStringAsync
  commentId: M:System.Xml.XmlReader.ReadElementContentAsStringAsync
  id: ReadElementContentAsStringAsync
  parent: System.Xml.XmlReader
  langs:
  - csharp
  name: ReadElementContentAsStringAsync()
  nameWithType: XmlReader.ReadElementContentAsStringAsync()
  fullName: XmlReader.ReadElementContentAsStringAsync()
  type: Method
  assemblies:
  - System.Xml.ReaderWriter
  - System.Xml
  - netstandard
  namespace: System.Xml
  summary: Asynchronously reads the current element and returns the contents as a <xref href="System.String"></xref> object.
  remarks: This is the asynchronous version of <xref:System.Xml.XmlReader.ReadElementContentAsString%2A>, with the same functionality. To use this method, you must set the <xref:System.Xml.XmlReaderSettings.Async%2A> flag to `true`.
  syntax:
    content: public virtual System.Threading.Tasks.Task<string> ReadElementContentAsStringAsync ();
    parameters: []
    return:
      type: System.Threading.Tasks.Task{System.String}
      description: The element content as a <xref href="System.String"></xref> object.
  overload: System.Xml.XmlReader.ReadElementContentAsStringAsync*
  exceptions:
  - type: System.InvalidOperationException
    commentId: T:System.InvalidOperationException
    description: An <xref href="System.Xml.XmlReader"></xref> asynchronous method was called without setting the <xref href="System.Xml.XmlReaderSettings.Async"></xref> flag to `true`. In this case, <xref href="System.InvalidOperationException"></xref> is thrown with the message "Set XmlReaderSettings.Async to true if you want to use Async Methods."
  attributes: []
  version:
  - netcore-1.0
  - netcore-1.1
  - netcore-2.0
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  - netstandard-1.0
  - netstandard-1.1
  - netstandard-1.2
  - netstandard-1.3
  - netstandard-1.4
  - netstandard-1.6
  - netstandard-2.0
  - xamarinandroid-7.1
  - xamarinios-10.8
  - xamarinmac-3.0
  monikers:
  - netcore-1.0
  - netcore-1.1
  - netcore-2.0
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  - netstandard-1.0
  - netstandard-1.1
  - netstandard-1.2
  - netstandard-1.3
  - netstandard-1.4
  - netstandard-1.6
  - netstandard-2.0
  - xamarinandroid-7.1
  - xamarinios-10.8
  - xamarinmac-3.0
  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Xml/XmlReader.xml
  ms.technology:
  - dotnet-standard
  author: mairaw
  ms.author: mairaw
  manager: wpickett
- uid: System.Xml.XmlReader.ReadElementString
  commentId: M:System.Xml.XmlReader.ReadElementString
  id: ReadElementString
  parent: System.Xml.XmlReader
  langs:
  - csharp
  name: ReadElementString()
  nameWithType: XmlReader.ReadElementString()
  fullName: XmlReader.ReadElementString()
  type: Method
  assemblies:
  - System.Xml
  - netstandard
  - System.Xml.ReaderWriter
  namespace: System.Xml
  summary: Reads a text-only element. However, we recommend that you use the <xref href="System.Xml.XmlReader.ReadElementContentAsString"></xref> method instead, because it provides a more straightforward way to handle this operation.
  remarks: We recommend that you use the <xref:System.Xml.XmlReader.ReadElementContentAsString> method to read a text element.
  syntax:
    content: public virtual string ReadElementString ();
    parameters: []
    return:
      type: System.String
      description: The text contained in the element that was read. An empty string if the element is empty.
  overload: System.Xml.XmlReader.ReadElementString*
  exceptions:
  - type: System.Xml.XmlException
    commentId: T:System.Xml.XmlException
    description: The next content node is not a start tag; or the element found does not contain a simple text value.
  - type: System.InvalidOperationException
    commentId: T:System.InvalidOperationException
    description: An <xref href="System.Xml.XmlReader"></xref> method was called before a previous asynchronous operation finished. In this case, <xref href="System.InvalidOperationException"></xref> is thrown with the message "An asynchronous operation is already in progress."
  attributes: []
  version:
  - netcore-2.0
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  - netstandard-2.0
  - xamarinandroid-7.1
  - xamarinios-10.8
  - xamarinmac-3.0
  monikers:
  - netcore-2.0
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  - netstandard-2.0
  - xamarinandroid-7.1
  - xamarinios-10.8
  - xamarinmac-3.0
  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Xml/XmlReader.xml
  ms.technology:
  - dotnet-standard
  author: mairaw
  ms.author: mairaw
  manager: wpickett
- uid: System.Xml.XmlReader.ReadElementString(System.String)
  commentId: M:System.Xml.XmlReader.ReadElementString(System.String)
  id: ReadElementString(System.String)
  parent: System.Xml.XmlReader
  langs:
  - csharp
  name: ReadElementString(String)
  nameWithType: XmlReader.ReadElementString(String)
  fullName: XmlReader.ReadElementString(String)
  type: Method
  assemblies:
  - System.Xml
  - netstandard
  - System.Xml.ReaderWriter
  namespace: System.Xml
  summary: Checks that the <xref href="System.Xml.XmlReader.Name"></xref> property of the element found matches the given string before reading a text-only element. However, we recommend that you use the <xref href="System.Xml.XmlReader.ReadElementContentAsString"></xref> method instead, because it provides a more straightforward way to handle this operation.
  remarks: We recommend that you use the <xref:System.Xml.XmlReader.ReadElementContentAsString> method to read a text element.
  syntax:
    content: public virtual string ReadElementString (string name);
    parameters:
    - id: name
      type: System.String
      description: The name to check.
    return:
      type: System.String
      description: The text contained in the element that was read. An empty string if the element is empty.
  overload: System.Xml.XmlReader.ReadElementString*
  exceptions:
  - type: System.Xml.XmlException
    commentId: T:System.Xml.XmlException
    description: If the next content node is not a start tag; if the element `Name` does not match the given argument; or if the element found does not contain a simple text value.
  - type: System.InvalidOperationException
    commentId: T:System.InvalidOperationException
    description: An <xref href="System.Xml.XmlReader"></xref> method was called before a previous asynchronous operation finished. In this case, <xref href="System.InvalidOperationException"></xref> is thrown with the message "An asynchronous operation is already in progress."
  attributes: []
  version:
  - netcore-2.0
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  - netstandard-2.0
  - xamarinandroid-7.1
  - xamarinios-10.8
  - xamarinmac-3.0
  monikers:
  - netcore-2.0
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  - netstandard-2.0
  - xamarinandroid-7.1
  - xamarinios-10.8
  - xamarinmac-3.0
  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Xml/XmlReader.xml
  ms.technology:
  - dotnet-standard
  author: mairaw
  ms.author: mairaw
  manager: wpickett
- uid: System.Xml.XmlReader.ReadElementString(System.String,System.String)
  commentId: M:System.Xml.XmlReader.ReadElementString(System.String,System.String)
  id: ReadElementString(System.String,System.String)
  parent: System.Xml.XmlReader
  langs:
  - csharp
  name: ReadElementString(String, String)
  nameWithType: XmlReader.ReadElementString(String, String)
  fullName: XmlReader.ReadElementString(String, String)
  type: Method
  assemblies:
  - System.Xml
  - netstandard
  - System.Xml.ReaderWriter
  namespace: System.Xml
  summary: Checks that the <xref href="System.Xml.XmlReader.LocalName"></xref> and <xref href="System.Xml.XmlReader.NamespaceURI"></xref> properties of the element found matches the given strings before reading a text-only element. However, we recommend that you use the <xref href="System.Xml.XmlReader.ReadElementContentAsString(System.String,System.String)"></xref> method instead, because it provides a more straightforward way to handle this operation.
  remarks: We recommend that you use the <xref:System.Xml.XmlReader.ReadElementContentAsString%28System.String%2CSystem.String%29> method to read a text element.
  syntax:
    content: public virtual string ReadElementString (string localname, string ns);
    parameters:
    - id: localname
      type: System.String
      description: The local name to check.
    - id: ns
      type: System.String
      description: The namespace URI to check.
    return:
      type: System.String
      description: The text contained in the element that was read. An empty string if the element is empty.
  overload: System.Xml.XmlReader.ReadElementString*
  exceptions:
  - type: System.Xml.XmlException
    commentId: T:System.Xml.XmlException
    description: If the next content node is not a start tag; if the element `LocalName` or `NamespaceURI` do not match the given arguments; or if the element found does not contain a simple text value.
  - type: System.InvalidOperationException
    commentId: T:System.InvalidOperationException
    description: An <xref href="System.Xml.XmlReader"></xref> method was called before a previous asynchronous operation finished. In this case, <xref href="System.InvalidOperationException"></xref> is thrown with the message "An asynchronous operation is already in progress."
  attributes: []
  version:
  - netcore-2.0
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  - netstandard-2.0
  - xamarinandroid-7.1
  - xamarinios-10.8
  - xamarinmac-3.0
  monikers:
  - netcore-2.0
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  - netstandard-2.0
  - xamarinandroid-7.1
  - xamarinios-10.8
  - xamarinmac-3.0
  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Xml/XmlReader.xml
  ms.technology:
  - dotnet-standard
  author: mairaw
  ms.author: mairaw
  manager: wpickett
- uid: System.Xml.XmlReader.ReadEndElement
  commentId: M:System.Xml.XmlReader.ReadEndElement
  id: ReadEndElement
  parent: System.Xml.XmlReader
  langs:
  - csharp
  name: ReadEndElement()
  nameWithType: XmlReader.ReadEndElement()
  fullName: XmlReader.ReadEndElement()
  type: Method
  assemblies:
  - System.Xml.ReaderWriter
  - System.Xml
  - netstandard
  namespace: System.Xml
  summary: Checks that the current content node is an end tag and advances the reader to the next node.
  remarks: ''
  example:
  - "The following example displays the text content of each element.  \n  \n [!code-csharp[XmlReaderBasic#11](~/samples/snippets/csharp/VS_Snippets_Data/XmlReaderBasic/CS/XmlReader_Basic.cs#11)]\n [!code-vb[XmlReaderBasic#11](~/samples/snippets/visualbasic/VS_Snippets_Data/XmlReaderBasic/VB/xmlreader_basic.vb#11)]  \n  \n The example uses the `book3.xml` file.  \n  \n [!code-xml[XML_Core_Files#6](~/samples/snippets/xml/VS_Snippets_Data/XML_Core_Files/XML/book3.xml#6)]"
  syntax:
    content: public virtual void ReadEndElement ();
    parameters: []
  overload: System.Xml.XmlReader.ReadEndElement*
  exceptions:
  - type: System.Xml.XmlException
    commentId: T:System.Xml.XmlException
    description: The current node is not an end tag or if incorrect XML is encountered in the input stream.
  - type: System.InvalidOperationException
    commentId: T:System.InvalidOperationException
    description: An <xref href="System.Xml.XmlReader"></xref> method was called before a previous asynchronous operation finished. In this case, <xref href="System.InvalidOperationException"></xref> is thrown with the message "An asynchronous operation is already in progress."
  version:
  - netcore-1.0
  - netcore-1.1
  - netcore-2.0
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  - netstandard-1.0
  - netstandard-1.1
  - netstandard-1.2
  - netstandard-1.3
  - netstandard-1.4
  - netstandard-1.6
  - netstandard-2.0
  - xamarinandroid-7.1
  - xamarinios-10.8
  - xamarinmac-3.0
  monikers:
  - netcore-1.0
  - netcore-1.1
  - netcore-2.0
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  - netstandard-1.0
  - netstandard-1.1
  - netstandard-1.2
  - netstandard-1.3
  - netstandard-1.4
  - netstandard-1.6
  - netstandard-2.0
  - xamarinandroid-7.1
  - xamarinios-10.8
  - xamarinmac-3.0
  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Xml/XmlReader.xml
  ms.technology:
  - dotnet-standard
  author: mairaw
  ms.author: mairaw
  manager: wpickett
- uid: System.Xml.XmlReader.ReadInnerXml
  commentId: M:System.Xml.XmlReader.ReadInnerXml
  id: ReadInnerXml
  parent: System.Xml.XmlReader
  langs:
  - csharp
  name: ReadInnerXml()
  nameWithType: XmlReader.ReadInnerXml()
  fullName: XmlReader.ReadInnerXml()
  type: Method
  assemblies:
  - System.Xml.ReaderWriter
  - System.Xml
  - netstandard
  namespace: System.Xml
  summary: When overridden in a derived class, reads all the content, including markup, as a string.
  remarks: "This method returns all the content of the current node including the markup. The current node (start tag) and corresponding end node (end tag) are not returned. For example, if you had the following:  \n  \n```  \n<node>  \n this <child id=\"123\"/>  \n</node>  \n```  \n  \n `ReadInnerXml` returns `this <child id=\"123\"/>`  \n  \n This method handles element and attribute nodes in the following manner:  \n  \n|Node type|Position before the call|XML fragment|Return value|Position after the call|  \n|---------------|------------------------------|------------------|------------------|-----------------------------|  \n|`Element`|On the `item1` start tag.|\\<item1>text1\\</item1>\\<item2>text2\\</item2>|text1|On the `item2` start tag.|  \n|`Attribute`|On the `attr1` attribute node.|\\<item attr1=\"val1\" attr2=\"val2\">text\\</item>|val1|Remains on the `attr1` attribute node.|  \n  \n If the reader is positioned on a leaf node, calling `ReadInnerXml` is equivalent to calling <xref:System.Xml.XmlReader.Read%2A>. The method returns `String.Empty` (except for attribute nodes, in which case the value of the attribute is returned).  \n  \n This method checks for well-formed XML. If `ReadInnerXml` is called from an <xref:System.Xml.XmlValidatingReader>, this method also validates the content returned.  \n  \n As implemented in the <xref:System.Xml.XmlNodeReader>, <xref:System.Xml.XmlTextReader> and `XmlValidatingReader` classes the `ReadOuterXml` method is namespace aware.  \n  \n For the asynchronous version of this method, see <xref:System.Xml.XmlReader.ReadInnerXmlAsync%2A>."
  example:
  - "The following example compares the `ReadInnerXml` and <xref:System.Xml.XmlReader.ReadOuterXml%2A> methods.  \n  \n [!code-csharp[XmlReaderBasic#12](~/samples/snippets/csharp/VS_Snippets_Data/XmlReaderBasic/CS/XmlReader_Basic.cs#12)]\n [!code-vb[XmlReaderBasic#12](~/samples/snippets/visualbasic/VS_Snippets_Data/XmlReaderBasic/VB/xmlreader_basic.vb#12)]  \n  \n The example uses `2books.xml` file as input.  \n  \n [!code-xml[XML_Core_Files#7](~/samples/snippets/xml/VS_Snippets_Data/XML_Core_Files/XML/2books.xml#7)]"
  syntax:
    content: public virtual string ReadInnerXml ();
    parameters: []
    return:
      type: System.String
      description: "All the XML content, including markup, in the current node. If the current node has no children, an empty string is returned.  \n  \n If the current node is neither an element nor attribute, an empty string is returned."
  overload: System.Xml.XmlReader.ReadInnerXml*
  exceptions:
  - type: System.Xml.XmlException
    commentId: T:System.Xml.XmlException
    description: The XML was not well-formed, or an error occurred while parsing the XML.
  - type: System.InvalidOperationException
    commentId: T:System.InvalidOperationException
    description: An <xref href="System.Xml.XmlReader"></xref> method was called before a previous asynchronous operation finished. In this case, <xref href="System.InvalidOperationException"></xref> is thrown with the message "An asynchronous operation is already in progress."
  version:
  - netcore-1.0
  - netcore-1.1
  - netcore-2.0
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  - netstandard-1.0
  - netstandard-1.1
  - netstandard-1.2
  - netstandard-1.3
  - netstandard-1.4
  - netstandard-1.6
  - netstandard-2.0
  - xamarinandroid-7.1
  - xamarinios-10.8
  - xamarinmac-3.0
  monikers:
  - netcore-1.0
  - netcore-1.1
  - netcore-2.0
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  - netstandard-1.0
  - netstandard-1.1
  - netstandard-1.2
  - netstandard-1.3
  - netstandard-1.4
  - netstandard-1.6
  - netstandard-2.0
  - xamarinandroid-7.1
  - xamarinios-10.8
  - xamarinmac-3.0
  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Xml/XmlReader.xml
  ms.technology:
  - dotnet-standard
  author: mairaw
  ms.author: mairaw
  manager: wpickett
- uid: System.Xml.XmlReader.ReadInnerXmlAsync
  commentId: M:System.Xml.XmlReader.ReadInnerXmlAsync
  id: ReadInnerXmlAsync
  parent: System.Xml.XmlReader
  langs:
  - csharp
  name: ReadInnerXmlAsync()
  nameWithType: XmlReader.ReadInnerXmlAsync()
  fullName: XmlReader.ReadInnerXmlAsync()
  type: Method
  assemblies:
  - System.Xml.ReaderWriter
  - System.Xml
  - netstandard
  namespace: System.Xml
  summary: Asynchronously reads all the content, including markup, as a string.
  remarks: This is the asynchronous version of <xref:System.Xml.XmlReader.ReadInnerXml%2A>, with the same functionality. To use this method, you must set the <xref:System.Xml.XmlReaderSettings.Async%2A> flag to `true`.
  syntax:
    content: public virtual System.Threading.Tasks.Task<string> ReadInnerXmlAsync ();
    parameters: []
    return:
      type: System.Threading.Tasks.Task{System.String}
      description: All the XML content, including markup, in the current node. If the current node has no children, an empty string is returned.
  overload: System.Xml.XmlReader.ReadInnerXmlAsync*
  exceptions:
  - type: System.InvalidOperationException
    commentId: T:System.InvalidOperationException
    description: An <xref href="System.Xml.XmlReader"></xref> asynchronous method was called without setting the <xref href="System.Xml.XmlReaderSettings.Async"></xref> flag to `true`. In this case, <xref href="System.InvalidOperationException"></xref> is thrown with the message "Set XmlReaderSettings.Async to true if you want to use Async Methods."
  attributes: []
  version:
  - netcore-1.0
  - netcore-1.1
  - netcore-2.0
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  - netstandard-1.0
  - netstandard-1.1
  - netstandard-1.2
  - netstandard-1.3
  - netstandard-1.4
  - netstandard-1.6
  - netstandard-2.0
  - xamarinandroid-7.1
  - xamarinios-10.8
  - xamarinmac-3.0
  monikers:
  - netcore-1.0
  - netcore-1.1
  - netcore-2.0
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  - netstandard-1.0
  - netstandard-1.1
  - netstandard-1.2
  - netstandard-1.3
  - netstandard-1.4
  - netstandard-1.6
  - netstandard-2.0
  - xamarinandroid-7.1
  - xamarinios-10.8
  - xamarinmac-3.0
  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Xml/XmlReader.xml
  ms.technology:
  - dotnet-standard
  author: mairaw
  ms.author: mairaw
  manager: wpickett
- uid: System.Xml.XmlReader.ReadOuterXml
  commentId: M:System.Xml.XmlReader.ReadOuterXml
  id: ReadOuterXml
  parent: System.Xml.XmlReader
  langs:
  - csharp
  name: ReadOuterXml()
  nameWithType: XmlReader.ReadOuterXml()
  fullName: XmlReader.ReadOuterXml()
  type: Method
  assemblies:
  - System.Xml.ReaderWriter
  - System.Xml
  - netstandard
  namespace: System.Xml
  summary: When overridden in a derived class, reads the content, including markup, representing this node and all its children.
  remarks: "This method is similar to <xref:System.Xml.XmlReader.ReadInnerXml%2A> except it also returns the start and end tags.  \n  \n This method handles element and attribute nodes in the following manner:  \n  \n|Node type|Position before the call|XML fragment|Return value|Position After the Call|  \n|---------------|------------------------------|------------------|------------------|-----------------------------|  \n|`Element`|On the `item1` start tag.|\\<item1>text1\\</item1>\\<item2>text2\\</item2>|\\<item1>text1\\</item1>|On the `item2` start tag.|  \n|`Attribute`|On the `attr1` attribute node.|\\<item attr1=\"val1\" attr2=\"val2\">text\\</item>|attr1=\"val1\"|Remains on the `attr1` attribute node.|  \n  \n If the reader is positioned on a leaf node, calling `ReadOuterXml` is equivalent to calling <xref:System.Xml.XmlReader.Read%2A>. The method returns `String.Empty` (except for attribute nodes, in which case the attribute markup is returned).  \n  \n This method checks for well-formed XML. If `ReadOuterXml` is called from an <xref:System.Xml.XmlValidatingReader>, this method also validates the content returned  \n  \n As implemented in the <xref:System.Xml.XmlNodeReader>, <xref:System.Xml.XmlTextReader> and `XmlValidatingReader` classes the `ReadOuterXml` method is namespace aware. Given the following XML text `<A xmlns:S=\"urn:1\"><S:B>hello</S:B></A>`, if the reader were positioned on the `S:B` start tag, `ReadOuterXml` returns `<S:B xmlns:S=\"urn:1\">hello<S:B/>`.  \n  \n For the asynchronous version of this method, see <xref:System.Xml.XmlReader.ReadOuterXmlAsync%2A>."
  example:
  - "The following example compares the `ReadInnerXml` and `ReadOuterXml` methods.  \n  \n [!code-csharp[XmlReaderBasic#12](~/samples/snippets/csharp/VS_Snippets_Data/XmlReaderBasic/CS/XmlReader_Basic.cs#12)]\n [!code-vb[XmlReaderBasic#12](~/samples/snippets/visualbasic/VS_Snippets_Data/XmlReaderBasic/VB/xmlreader_basic.vb#12)]  \n  \n The example uses `2books.xml` file as input.  \n  \n [!code-xml[XML_Core_Files#7](~/samples/snippets/xml/VS_Snippets_Data/XML_Core_Files/XML/2books.xml#7)]"
  syntax:
    content: public virtual string ReadOuterXml ();
    parameters: []
    return:
      type: System.String
      description: If the reader is positioned on an element or an attribute node, this method returns all the XML content, including markup, of the current node and all its children; otherwise, it returns an empty string.
  overload: System.Xml.XmlReader.ReadOuterXml*
  exceptions:
  - type: System.Xml.XmlException
    commentId: T:System.Xml.XmlException
    description: The XML was not well-formed, or an error occurred while parsing the XML.
  - type: System.InvalidOperationException
    commentId: T:System.InvalidOperationException
    description: An <xref href="System.Xml.XmlReader"></xref> method was called before a previous asynchronous operation finished. In this case, <xref href="System.InvalidOperationException"></xref> is thrown with the message "An asynchronous operation is already in progress."
  version:
  - netcore-1.0
  - netcore-1.1
  - netcore-2.0
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  - netstandard-1.0
  - netstandard-1.1
  - netstandard-1.2
  - netstandard-1.3
  - netstandard-1.4
  - netstandard-1.6
  - netstandard-2.0
  - xamarinandroid-7.1
  - xamarinios-10.8
  - xamarinmac-3.0
  monikers:
  - netcore-1.0
  - netcore-1.1
  - netcore-2.0
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  - netstandard-1.0
  - netstandard-1.1
  - netstandard-1.2
  - netstandard-1.3
  - netstandard-1.4
  - netstandard-1.6
  - netstandard-2.0
  - xamarinandroid-7.1
  - xamarinios-10.8
  - xamarinmac-3.0
  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Xml/XmlReader.xml
  ms.technology:
  - dotnet-standard
  author: mairaw
  ms.author: mairaw
  manager: wpickett
- uid: System.Xml.XmlReader.ReadOuterXmlAsync
  commentId: M:System.Xml.XmlReader.ReadOuterXmlAsync
  id: ReadOuterXmlAsync
  parent: System.Xml.XmlReader
  langs:
  - csharp
  name: ReadOuterXmlAsync()
  nameWithType: XmlReader.ReadOuterXmlAsync()
  fullName: XmlReader.ReadOuterXmlAsync()
  type: Method
  assemblies:
  - System.Xml.ReaderWriter
  - System.Xml
  - netstandard
  namespace: System.Xml
  summary: Asynchronously reads the content, including markup, representing this node and all its children.
  remarks: This is the asynchronous version of <xref:System.Xml.XmlReader.ReadOuterXml%2A>, with the same functionality. To use this method, you must set the <xref:System.Xml.XmlReaderSettings.Async%2A> flag to `true`.
  syntax:
    content: public virtual System.Threading.Tasks.Task<string> ReadOuterXmlAsync ();
    parameters: []
    return:
      type: System.Threading.Tasks.Task{System.String}
      description: If the reader is positioned on an element or an attribute node, this method returns all the XML content, including markup, of the current node and all its children; otherwise, it returns an empty string.
  overload: System.Xml.XmlReader.ReadOuterXmlAsync*
  exceptions:
  - type: System.InvalidOperationException
    commentId: T:System.InvalidOperationException
    description: An <xref href="System.Xml.XmlReader"></xref> asynchronous method was called without setting the <xref href="System.Xml.XmlReaderSettings.Async"></xref> flag to `true`. In this case, <xref href="System.InvalidOperationException"></xref> is thrown with the message "Set XmlReaderSettings.Async to true if you want to use Async Methods."
  attributes: []
  version:
  - netcore-1.0
  - netcore-1.1
  - netcore-2.0
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  - netstandard-1.0
  - netstandard-1.1
  - netstandard-1.2
  - netstandard-1.3
  - netstandard-1.4
  - netstandard-1.6
  - netstandard-2.0
  - xamarinandroid-7.1
  - xamarinios-10.8
  - xamarinmac-3.0
  monikers:
  - netcore-1.0
  - netcore-1.1
  - netcore-2.0
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  - netstandard-1.0
  - netstandard-1.1
  - netstandard-1.2
  - netstandard-1.3
  - netstandard-1.4
  - netstandard-1.6
  - netstandard-2.0
  - xamarinandroid-7.1
  - xamarinios-10.8
  - xamarinmac-3.0
  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Xml/XmlReader.xml
  ms.technology:
  - dotnet-standard
  author: mairaw
  ms.author: mairaw
  manager: wpickett
- uid: System.Xml.XmlReader.ReadStartElement
  commentId: M:System.Xml.XmlReader.ReadStartElement
  id: ReadStartElement
  parent: System.Xml.XmlReader
  langs:
  - csharp
  name: ReadStartElement()
  nameWithType: XmlReader.ReadStartElement()
  fullName: XmlReader.ReadStartElement()
  type: Method
  assemblies:
  - System.Xml.ReaderWriter
  - System.Xml
  - netstandard
  namespace: System.Xml
  summary: Checks that the current node is an element and advances the reader to the next node.
  remarks: This method calls <xref:System.Xml.XmlReader.IsStartElement%2A> followed by <xref:System.Xml.XmlReader.Read%2A> to position you on the content of that element found in the input stream.
  syntax:
    content: public virtual void ReadStartElement ();
    parameters: []
  overload: System.Xml.XmlReader.ReadStartElement*
  exceptions:
  - type: System.Xml.XmlException
    commentId: T:System.Xml.XmlException
    description: Incorrect XML was encountered in the input stream.
  - type: System.InvalidOperationException
    commentId: T:System.InvalidOperationException
    description: An <xref href="System.Xml.XmlReader"></xref> method was called before a previous asynchronous operation finished. In this case, <xref href="System.InvalidOperationException"></xref> is thrown with the message "An asynchronous operation is already in progress."
  version:
  - netcore-1.0
  - netcore-1.1
  - netcore-2.0
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  - netstandard-1.0
  - netstandard-1.1
  - netstandard-1.2
  - netstandard-1.3
  - netstandard-1.4
  - netstandard-1.6
  - netstandard-2.0
  - xamarinandroid-7.1
  - xamarinios-10.8
  - xamarinmac-3.0
  monikers:
  - netcore-1.0
  - netcore-1.1
  - netcore-2.0
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  - netstandard-1.0
  - netstandard-1.1
  - netstandard-1.2
  - netstandard-1.3
  - netstandard-1.4
  - netstandard-1.6
  - netstandard-2.0
  - xamarinandroid-7.1
  - xamarinios-10.8
  - xamarinmac-3.0
  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Xml/XmlReader.xml
  ms.technology:
  - dotnet-standard
  author: mairaw
  ms.author: mairaw
  manager: wpickett
- uid: System.Xml.XmlReader.ReadStartElement(System.String)
  commentId: M:System.Xml.XmlReader.ReadStartElement(System.String)
  id: ReadStartElement(System.String)
  parent: System.Xml.XmlReader
  langs:
  - csharp
  name: ReadStartElement(String)
  nameWithType: XmlReader.ReadStartElement(String)
  fullName: XmlReader.ReadStartElement(String)
  type: Method
  assemblies:
  - System.Xml.ReaderWriter
  - System.Xml
  - netstandard
  namespace: System.Xml
  summary: Checks that the current content node is an element with the given <xref href="System.Xml.XmlReader.Name"></xref> and advances the reader to the next node.
  remarks: A call to this method corresponds to a call to <xref:System.Xml.XmlReader.IsStartElement%2A> followed by a call to <xref:System.Xml.XmlReader.Read%2A>.
  example:
  - "The following example displays the text content of each element.  \n  \n [!code-csharp[XmlReaderBasic#11](~/samples/snippets/csharp/VS_Snippets_Data/XmlReaderBasic/CS/XmlReader_Basic.cs#11)]\n [!code-vb[XmlReaderBasic#11](~/samples/snippets/visualbasic/VS_Snippets_Data/XmlReaderBasic/VB/xmlreader_basic.vb#11)]  \n  \n The example uses the `book3.xml` file.  \n  \n [!code-xml[XML_Core_Files#6](~/samples/snippets/xml/VS_Snippets_Data/XML_Core_Files/XML/book3.xml#6)]"
  syntax:
    content: public virtual void ReadStartElement (string name);
    parameters:
    - id: name
      type: System.String
      description: The qualified name of the element.
  overload: System.Xml.XmlReader.ReadStartElement*
  exceptions:
  - type: System.Xml.XmlException
    commentId: T:System.Xml.XmlException
    description: "Incorrect XML was encountered in the input stream.  \n  \n -or-  \n  \n The <xref href=\"System.Xml.XmlReader.Name\"></xref> of the element does not match the given <code>name</code>."
  - type: System.InvalidOperationException
    commentId: T:System.InvalidOperationException
    description: An <xref href="System.Xml.XmlReader"></xref> method was called before a previous asynchronous operation finished. In this case, <xref href="System.InvalidOperationException"></xref> is thrown with the message "An asynchronous operation is already in progress."
  version:
  - netcore-1.0
  - netcore-1.1
  - netcore-2.0
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  - netstandard-1.0
  - netstandard-1.1
  - netstandard-1.2
  - netstandard-1.3
  - netstandard-1.4
  - netstandard-1.6
  - netstandard-2.0
  - xamarinandroid-7.1
  - xamarinios-10.8
  - xamarinmac-3.0
  monikers:
  - netcore-1.0
  - netcore-1.1
  - netcore-2.0
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  - netstandard-1.0
  - netstandard-1.1
  - netstandard-1.2
  - netstandard-1.3
  - netstandard-1.4
  - netstandard-1.6
  - netstandard-2.0
  - xamarinandroid-7.1
  - xamarinios-10.8
  - xamarinmac-3.0
  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Xml/XmlReader.xml
  ms.technology:
  - dotnet-standard
  author: mairaw
  ms.author: mairaw
  manager: wpickett
- uid: System.Xml.XmlReader.ReadStartElement(System.String,System.String)
  commentId: M:System.Xml.XmlReader.ReadStartElement(System.String,System.String)
  id: ReadStartElement(System.String,System.String)
  parent: System.Xml.XmlReader
  langs:
  - csharp
  name: ReadStartElement(String, String)
  nameWithType: XmlReader.ReadStartElement(String, String)
  fullName: XmlReader.ReadStartElement(String, String)
  type: Method
  assemblies:
  - System.Xml.ReaderWriter
  - System.Xml
  - netstandard
  namespace: System.Xml
  summary: Checks that the current content node is an element with the given <xref href="System.Xml.XmlReader.LocalName"></xref> and <xref href="System.Xml.XmlReader.NamespaceURI"></xref> and advances the reader to the next node.
  remarks: A call to this method corresponds to a call to <xref:System.Xml.XmlReader.IsStartElement%2A> followed by a call to <xref:System.Xml.XmlReader.Read%2A>.
  syntax:
    content: public virtual void ReadStartElement (string localname, string ns);
    parameters:
    - id: localname
      type: System.String
      description: The local name of the element.
    - id: ns
      type: System.String
      description: The namespace URI of the element.
  overload: System.Xml.XmlReader.ReadStartElement*
  exceptions:
  - type: System.Xml.XmlException
    commentId: T:System.Xml.XmlException
    description: "Incorrect XML was encountered in the input stream.  \n  \n -or-  \n  \n The <xref href=\"System.Xml.XmlReader.LocalName\"></xref> and <xref href=\"System.Xml.XmlReader.NamespaceURI\"></xref> properties of the element found do not match the given arguments."
  - type: System.InvalidOperationException
    commentId: T:System.InvalidOperationException
    description: An <xref href="System.Xml.XmlReader"></xref> method was called before a previous asynchronous operation finished. In this case, <xref href="System.InvalidOperationException"></xref> is thrown with the message "An asynchronous operation is already in progress."
  version:
  - netcore-1.0
  - netcore-1.1
  - netcore-2.0
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  - netstandard-1.0
  - netstandard-1.1
  - netstandard-1.2
  - netstandard-1.3
  - netstandard-1.4
  - netstandard-1.6
  - netstandard-2.0
  - xamarinandroid-7.1
  - xamarinios-10.8
  - xamarinmac-3.0
  monikers:
  - netcore-1.0
  - netcore-1.1
  - netcore-2.0
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  - netstandard-1.0
  - netstandard-1.1
  - netstandard-1.2
  - netstandard-1.3
  - netstandard-1.4
  - netstandard-1.6
  - netstandard-2.0
  - xamarinandroid-7.1
  - xamarinios-10.8
  - xamarinmac-3.0
  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Xml/XmlReader.xml
  ms.technology:
  - dotnet-standard
  author: mairaw
  ms.author: mairaw
  manager: wpickett
- uid: System.Xml.XmlReader.ReadState
  commentId: P:System.Xml.XmlReader.ReadState
  id: ReadState
  parent: System.Xml.XmlReader
  langs:
  - csharp
  name: ReadState
  nameWithType: XmlReader.ReadState
  fullName: XmlReader.ReadState
  type: Property
  assemblies:
  - System.Xml.ReaderWriter
  - System.Xml
  - netstandard
  namespace: System.Xml
  summary: When overridden in a derived class, gets the state of the reader.
  remarks: "The <xref:System.Xml.XmlReader.ReadState%2A>property has one of the following values:  \n  \n-   <xref:System.Xml.ReadState.Initial>, when the <xref:System.Xml.XmlReader.Read%2A?displayProperty=fullName>method is called.  \n  \n-   <xref:System.Xml.ReadState.Interactive>, when the <xref:System.Xml.XmlReader.Read%2A?displayProperty=fullName> method has been called, and additional methods may be called on the reader.  \n  \n-   <xref:System.Xml.ReadState.EndOfFile>, when the end of the XML document has been reached successfully.  \n  \n-   <xref:System.Xml.ReadState.Closed>, when the <xref:System.Xml.XmlReader.Close%2A?displayProperty=fullName> method is called.  \n  \n-   <xref:System.Xml.ReadState.Error>, when an error is preventing the read operation from continuing."
  syntax:
    content: public abstract System.Xml.ReadState ReadState { get; }
    return:
      type: System.Xml.ReadState
      description: One of the enumeration values that specifies the state of the reader.
  overload: System.Xml.XmlReader.ReadState*
  exceptions:
  - type: System.InvalidOperationException
    commentId: T:System.InvalidOperationException
    description: An <xref href="System.Xml.XmlReader"></xref> method was called before a previous asynchronous operation finished. In this case, <xref href="System.InvalidOperationException"></xref> is thrown with the message "An asynchronous operation is already in progress."
  version:
  - netcore-1.0
  - netcore-1.1
  - netcore-2.0
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  - netstandard-1.0
  - netstandard-1.1
  - netstandard-1.2
  - netstandard-1.3
  - netstandard-1.4
  - netstandard-1.6
  - netstandard-2.0
  - xamarinandroid-7.1
  - xamarinios-10.8
  - xamarinmac-3.0
  monikers:
  - netcore-1.0
  - netcore-1.1
  - netcore-2.0
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  - netstandard-1.0
  - netstandard-1.1
  - netstandard-1.2
  - netstandard-1.3
  - netstandard-1.4
  - netstandard-1.6
  - netstandard-2.0
  - xamarinandroid-7.1
  - xamarinios-10.8
  - xamarinmac-3.0
  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Xml/XmlReader.xml
  ms.technology:
  - dotnet-standard
  author: mairaw
  ms.author: mairaw
  manager: wpickett
- uid: System.Xml.XmlReader.ReadString
  commentId: M:System.Xml.XmlReader.ReadString
  id: ReadString
  parent: System.Xml.XmlReader
  langs:
  - csharp
  name: ReadString()
  nameWithType: XmlReader.ReadString()
  fullName: XmlReader.ReadString()
  type: Method
  assemblies:
  - System.Xml
  - netstandard
  - System.Xml.ReaderWriter
  namespace: System.Xml
  summary: When overridden in a derived class, reads the contents of an element or text node as a string. However, we recommend that you use the <xref href="System.Xml.XmlReader.ReadElementContentAsString*"></xref> method instead, because it provides a more straightforward way to handle this operation.
  remarks: We recommend that you use the <xref:System.Xml.XmlReader.ReadElementContentAsString%2A> method to read the contents of an element or text node as a string.
  syntax:
    content: public virtual string ReadString ();
    parameters: []
    return:
      type: System.String
      description: The contents of the element or an empty string.
  overload: System.Xml.XmlReader.ReadString*
  exceptions:
  - type: System.Xml.XmlException
    commentId: T:System.Xml.XmlException
    description: An error occurred while parsing the XML.
  - type: System.InvalidOperationException
    commentId: T:System.InvalidOperationException
    description: An <xref href="System.Xml.XmlReader"></xref> method was called before a previous asynchronous operation finished. In this case, <xref href="System.InvalidOperationException"></xref> is thrown with the message "An asynchronous operation is already in progress."
  attributes: []
  version:
  - netcore-2.0
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  - netstandard-2.0
  - xamarinandroid-7.1
  - xamarinios-10.8
  - xamarinmac-3.0
  monikers:
  - netcore-2.0
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  - netstandard-2.0
  - xamarinandroid-7.1
  - xamarinios-10.8
  - xamarinmac-3.0
  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Xml/XmlReader.xml
  ms.technology:
  - dotnet-standard
  author: mairaw
  ms.author: mairaw
  manager: wpickett
- uid: System.Xml.XmlReader.ReadSubtree
  commentId: M:System.Xml.XmlReader.ReadSubtree
  id: ReadSubtree
  parent: System.Xml.XmlReader
  langs:
  - csharp
  name: ReadSubtree()
  nameWithType: XmlReader.ReadSubtree()
  fullName: XmlReader.ReadSubtree()
  type: Method
  assemblies:
  - System.Xml.ReaderWriter
  - System.Xml
  - netstandard
  namespace: System.Xml
  summary: Returns a new `XmlReader` instance that can be used to read the current node, and all its descendants.
  remarks: "<xref:System.Xml.XmlReader.ReadSubtree%2A> can be called only on element nodes. When the entire sub-tree has been read, calls to the <xref:System.Xml.XmlReader.Read%2A> method returns `false`. When the new XML reader has been closed, the original readeris positioned on the `EndElement` node of the sub-tree. Thus, if you called the <xref:System.Xml.XmlReader.ReadSubtree%2A> method on the start tag of the book element, after the sub-tree has been read and the new XML reader has been closed, the original XML reader is positioned on the end tag of the book element.  \n  \n You should not perform any operations on the original reader until the new reader has been closed. This action is not supported and can result in unpredictable behavior.  \n  \n> [!NOTE]\n>  The <xref:System.Xml.XmlReader.ReadSubtree%2A> method isn't intended for creatingcopies of the XML data that you can work with independently. It's designedto create a boundary around an XML element. This is useful if you want to pass data to another component for processing and you wish to limit how much of your data the component can access. When you pass an XML reader returned by the <xref:System.Xml.XmlReader.ReadSubtree%2A> method to another application, the application can access only that XML element, not the entire XML document."
  example:
  - "The following example shows how to use the <xref:System.Xml.XmlReader.ReadSubtree%2A> method.  \n  \n [!code-csharp[XmlReaderBasic#13](~/samples/snippets/csharp/VS_Snippets_Data/XmlReaderBasic/CS/XmlReader_Basic.cs#13)]\n [!code-vb[XmlReaderBasic#13](~/samples/snippets/visualbasic/VS_Snippets_Data/XmlReaderBasic/VB/xmlreader_basic.vb#13)]  \n  \n Use the following XML data to run the examples in this topic:  \n  \n```  \n<?xml version=\"1.0\" encoding=\"utf-8\" ?>  \n<Books>  \n  <Book>  \n    <Title>A Brief History of Time</Title>  \n  </Book>  \n  <Book>  \n    <Title>Principle Of Relativity</Title>  \n  </Book>  \n  <Book>  \n    <Title>Victory of Reason</Title>  \n  </Book>  \n  <Book>  \n    <Title>The Unicorn that did not Fail</Title>  \n  </Book>  \n  <Book>  \n    <Title>Rational Ontology</Title>  \n  </Book>  \n  <Book>  \n    <Title>The Meaning of Pizza</Title>  \n  </Book>  \n</Books>  \n  \n```"
  syntax:
    content: public virtual System.Xml.XmlReader ReadSubtree ();
    parameters: []
    return:
      type: System.Xml.XmlReader
      description: A new XML reader instance set to <xref href="System.Xml.ReadState.Initial"></xref>. Calling the <xref href="System.Xml.XmlReader.Read"></xref> method positions the new reader on the node that was current before the call to the <xref href="System.Xml.XmlReader.ReadSubtree"></xref> method.
  overload: System.Xml.XmlReader.ReadSubtree*
  exceptions:
  - type: System.InvalidOperationException
    commentId: T:System.InvalidOperationException
    description: An <xref href="System.Xml.XmlReader"></xref> method was called before a previous asynchronous operation finished. In this case, <xref href="System.InvalidOperationException"></xref> is thrown with the message "An asynchronous operation is already in progress."
  version:
  - netcore-1.0
  - netcore-1.1
  - netcore-2.0
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  - netstandard-1.0
  - netstandard-1.1
  - netstandard-1.2
  - netstandard-1.3
  - netstandard-1.4
  - netstandard-1.6
  - netstandard-2.0
  - xamarinandroid-7.1
  - xamarinios-10.8
  - xamarinmac-3.0
  monikers:
  - netcore-1.0
  - netcore-1.1
  - netcore-2.0
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  - netstandard-1.0
  - netstandard-1.1
  - netstandard-1.2
  - netstandard-1.3
  - netstandard-1.4
  - netstandard-1.6
  - netstandard-2.0
  - xamarinandroid-7.1
  - xamarinios-10.8
  - xamarinmac-3.0
  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Xml/XmlReader.xml
  ms.technology:
  - dotnet-standard
  author: mairaw
  ms.author: mairaw
  manager: wpickett
- uid: System.Xml.XmlReader.ReadToDescendant(System.String,System.String)
  commentId: M:System.Xml.XmlReader.ReadToDescendant(System.String,System.String)
  id: ReadToDescendant(System.String,System.String)
  parent: System.Xml.XmlReader
  langs:
  - csharp
  name: ReadToDescendant(String, String)
  nameWithType: XmlReader.ReadToDescendant(String, String)
  fullName: XmlReader.ReadToDescendant(String, String)
  type: Method
  assemblies:
  - System.Xml.ReaderWriter
  - System.Xml
  - netstandard
  namespace: System.Xml
  summary: Advances the <xref href="System.Xml.XmlReader"></xref> to the next descendant element with the specified local name and namespace URI.
  syntax:
    content: public virtual bool ReadToDescendant (string localName, string namespaceURI);
    parameters:
    - id: localName
      type: System.String
      description: The local name of the element you wish to move to.
    - id: namespaceURI
      type: System.String
      description: The namespace URI of the element you wish to move to.
    return:
      type: System.Boolean
      description: "`true` if a matching descendant element is found; otherwise `false`. If a matching child element is not found, the <xref href=\"System.Xml.XmlReader\"></xref> is positioned on the end tag (<xref href=\"System.Xml.XmlReader.NodeType\"></xref> is `XmlNodeType.EndElement`) of the element.  \n  \n If the <xref href=\"System.Xml.XmlReader\"></xref> is not positioned on an element when <xref href=\"System.Xml.XmlReader.ReadToDescendant(System.String,System.String)\"></xref> was called, this method returns `false` and the position of the <xref href=\"System.Xml.XmlReader\"></xref> is not changed."
  overload: System.Xml.XmlReader.ReadToDescendant*
  exceptions:
  - type: System.InvalidOperationException
    commentId: T:System.InvalidOperationException
    description: An <xref href="System.Xml.XmlReader"></xref> method was called before a previous asynchronous operation finished. In this case, <xref href="System.InvalidOperationException"></xref> is thrown with the message "An asynchronous operation is already in progress."
  - type: System.ArgumentNullException
    commentId: T:System.ArgumentNullException
    description: Both parameter values are `null`.
  version:
  - netcore-1.0
  - netcore-1.1
  - netcore-2.0
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  - netstandard-1.0
  - netstandard-1.1
  - netstandard-1.2
  - netstandard-1.3
  - netstandard-1.4
  - netstandard-1.6
  - netstandard-2.0
  - xamarinandroid-7.1
  - xamarinios-10.8
  - xamarinmac-3.0
  monikers:
  - netcore-1.0
  - netcore-1.1
  - netcore-2.0
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  - netstandard-1.0
  - netstandard-1.1
  - netstandard-1.2
  - netstandard-1.3
  - netstandard-1.4
  - netstandard-1.6
  - netstandard-2.0
  - xamarinandroid-7.1
  - xamarinios-10.8
  - xamarinmac-3.0
  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Xml/XmlReader.xml
  ms.technology:
  - dotnet-standard
  author: mairaw
  ms.author: mairaw
  manager: wpickett
- uid: System.Xml.XmlReader.ReadToDescendant(System.String)
  commentId: M:System.Xml.XmlReader.ReadToDescendant(System.String)
  id: ReadToDescendant(System.String)
  parent: System.Xml.XmlReader
  langs:
  - csharp
  name: ReadToDescendant(String)
  nameWithType: XmlReader.ReadToDescendant(String)
  fullName: XmlReader.ReadToDescendant(String)
  type: Method
  assemblies:
  - System.Xml.ReaderWriter
  - System.Xml
  - netstandard
  namespace: System.Xml
  summary: Advances the <xref href="System.Xml.XmlReader"></xref> to the next descendant element with the specified qualified name.
  remarks: ''
  example:
  - "The following example parses the second book node.  \n  \n [!code-csharp[XmlReaderBasic#14](~/samples/snippets/csharp/VS_Snippets_Data/XmlReaderBasic/CS/XmlReader_Basic.cs#14)]\n [!code-vb[XmlReaderBasic#14](~/samples/snippets/visualbasic/VS_Snippets_Data/XmlReaderBasic/VB/xmlreader_basic.vb#14)]  \n  \n The example uses the file, `2books.xml`, as input.  \n  \n [!code-xml[XML_Core_Files#7](~/samples/snippets/xml/VS_Snippets_Data/XML_Core_Files/XML/2books.xml#7)]"
  syntax:
    content: public virtual bool ReadToDescendant (string name);
    parameters:
    - id: name
      type: System.String
      description: The qualified name of the element you wish to move to.
    return:
      type: System.Boolean
      description: "`true` if a matching descendant element is found; otherwise `false`. If a matching child element is not found, the <xref href=\"System.Xml.XmlReader\"></xref> is positioned on the end tag (<xref href=\"System.Xml.XmlReader.NodeType\"></xref> is `XmlNodeType.EndElement`) of the element.  \n  \n If the <xref href=\"System.Xml.XmlReader\"></xref> is not positioned on an element when <xref href=\"System.Xml.XmlReader.ReadToDescendant(System.String)\"></xref> was called, this method returns `false` and the position of the <xref href=\"System.Xml.XmlReader\"></xref> is not changed."
  overload: System.Xml.XmlReader.ReadToDescendant*
  exceptions:
  - type: System.InvalidOperationException
    commentId: T:System.InvalidOperationException
    description: An <xref href="System.Xml.XmlReader"></xref> method was called before a previous asynchronous operation finished. In this case, <xref href="System.InvalidOperationException"></xref> is thrown with the message "An asynchronous operation is already in progress."
  - type: System.ArgumentException
    commentId: T:System.ArgumentException
    description: The parameter is an empty string.
  version:
  - netcore-1.0
  - netcore-1.1
  - netcore-2.0
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  - netstandard-1.0
  - netstandard-1.1
  - netstandard-1.2
  - netstandard-1.3
  - netstandard-1.4
  - netstandard-1.6
  - netstandard-2.0
  - xamarinandroid-7.1
  - xamarinios-10.8
  - xamarinmac-3.0
  monikers:
  - netcore-1.0
  - netcore-1.1
  - netcore-2.0
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  - netstandard-1.0
  - netstandard-1.1
  - netstandard-1.2
  - netstandard-1.3
  - netstandard-1.4
  - netstandard-1.6
  - netstandard-2.0
  - xamarinandroid-7.1
  - xamarinios-10.8
  - xamarinmac-3.0
  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Xml/XmlReader.xml
  ms.technology:
  - dotnet-standard
  author: mairaw
  ms.author: mairaw
  manager: wpickett
- uid: System.Xml.XmlReader.ReadToFollowing(System.String)
  commentId: M:System.Xml.XmlReader.ReadToFollowing(System.String)
  id: ReadToFollowing(System.String)
  parent: System.Xml.XmlReader
  langs:
  - csharp
  name: ReadToFollowing(String)
  nameWithType: XmlReader.ReadToFollowing(String)
  fullName: XmlReader.ReadToFollowing(String)
  type: Method
  assemblies:
  - System.Xml.ReaderWriter
  - System.Xml
  - netstandard
  namespace: System.Xml
  summary: Reads until an element with the specified qualified name is found.
  remarks: "This method is functionally equivalent executing the `following::name` XPath expression from the current node. It provides a quick way to find a named element in the XML document. It advances the reader to the next following element that matches the specified name and returns `true` if a matching element is found. Using the example below, the reader would read to the first instance of the specified element while reading forward.  \n  \n```xml  \n<!--\"sample.xml\"-->  \n<?xmlversion=\"1.0\">  \n   <items>  \n      <item xmls=\"urn:1\"/>  \n   </items>  \n</xml>  \n  \n```  \n  \n```csharp  \nXmlTextReader reader = newXmlTextReader(\"sample.xml\");  \n  \nreader.ReadToFollowing(\"item\");  \n  \n```  \n  \n This method can be called on all node types."
  syntax:
    content: public virtual bool ReadToFollowing (string name);
    parameters:
    - id: name
      type: System.String
      description: The qualified name of the element.
    return:
      type: System.Boolean
      description: '`true` if a matching element is found; otherwise `false` and the <xref href="System.Xml.XmlReader"></xref> is in an end of file state.'
  overload: System.Xml.XmlReader.ReadToFollowing*
  exceptions:
  - type: System.InvalidOperationException
    commentId: T:System.InvalidOperationException
    description: An <xref href="System.Xml.XmlReader"></xref> method was called before a previous asynchronous operation finished. In this case, <xref href="System.InvalidOperationException"></xref> is thrown with the message "An asynchronous operation is already in progress."
  - type: System.ArgumentException
    commentId: T:System.ArgumentException
    description: The parameter is an empty string.
  version:
  - netcore-1.0
  - netcore-1.1
  - netcore-2.0
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  - netstandard-1.0
  - netstandard-1.1
  - netstandard-1.2
  - netstandard-1.3
  - netstandard-1.4
  - netstandard-1.6
  - netstandard-2.0
  - xamarinandroid-7.1
  - xamarinios-10.8
  - xamarinmac-3.0
  monikers:
  - netcore-1.0
  - netcore-1.1
  - netcore-2.0
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  - netstandard-1.0
  - netstandard-1.1
  - netstandard-1.2
  - netstandard-1.3
  - netstandard-1.4
  - netstandard-1.6
  - netstandard-2.0
  - xamarinandroid-7.1
  - xamarinios-10.8
  - xamarinmac-3.0
  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Xml/XmlReader.xml
  ms.technology:
  - dotnet-standard
  author: mairaw
  ms.author: mairaw
  manager: wpickett
- uid: System.Xml.XmlReader.ReadToFollowing(System.String,System.String)
  commentId: M:System.Xml.XmlReader.ReadToFollowing(System.String,System.String)
  id: ReadToFollowing(System.String,System.String)
  parent: System.Xml.XmlReader
  langs:
  - csharp
  name: ReadToFollowing(String, String)
  nameWithType: XmlReader.ReadToFollowing(String, String)
  fullName: XmlReader.ReadToFollowing(String, String)
  type: Method
  assemblies:
  - System.Xml.ReaderWriter
  - System.Xml
  - netstandard
  namespace: System.Xml
  summary: Reads until an element with the specified local name and namespace URI is found.
  remarks: "This method is functionally equivalent executing the `following::name` XPath expression from the current node. It provides a quick way to find a named element in the XML document. It advances the reader to the next following element that matches the specified name and returns `true` if a matching element is found.  \n  \n```xml  \n<!--\"sample.xml\"-->  \n<?xmlversion=\"1.0\">  \n   <items>  \n      <item xmls=\"urn:1\"/>  \n   </items>  \n</xml>  \n  \n```  \n  \n```csharp  \nXmlTextReader reader = newXmlTextReader(\"sample.xml\");  \n  \nreader.ReadToFollowing(\"item\", \"urn:1\");  \n  \n```  \n  \n This method can be called on all node types."
  syntax:
    content: public virtual bool ReadToFollowing (string localName, string namespaceURI);
    parameters:
    - id: localName
      type: System.String
      description: The local name of the element.
    - id: namespaceURI
      type: System.String
      description: The namespace URI of the element.
    return:
      type: System.Boolean
      description: '`true` if a matching element is found; otherwise `false` and the <xref href="System.Xml.XmlReader"></xref> is in an end of file state.'
  overload: System.Xml.XmlReader.ReadToFollowing*
  exceptions:
  - type: System.InvalidOperationException
    commentId: T:System.InvalidOperationException
    description: An <xref href="System.Xml.XmlReader"></xref> method was called before a previous asynchronous operation finished. In this case, <xref href="System.InvalidOperationException"></xref> is thrown with the message "An asynchronous operation is already in progress."
  - type: System.ArgumentNullException
    commentId: T:System.ArgumentNullException
    description: Both parameter values are `null`.
  version:
  - netcore-1.0
  - netcore-1.1
  - netcore-2.0
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  - netstandard-1.0
  - netstandard-1.1
  - netstandard-1.2
  - netstandard-1.3
  - netstandard-1.4
  - netstandard-1.6
  - netstandard-2.0
  - xamarinandroid-7.1
  - xamarinios-10.8
  - xamarinmac-3.0
  monikers:
  - netcore-1.0
  - netcore-1.1
  - netcore-2.0
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  - netstandard-1.0
  - netstandard-1.1
  - netstandard-1.2
  - netstandard-1.3
  - netstandard-1.4
  - netstandard-1.6
  - netstandard-2.0
  - xamarinandroid-7.1
  - xamarinios-10.8
  - xamarinmac-3.0
  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Xml/XmlReader.xml
  ms.technology:
  - dotnet-standard
  author: mairaw
  ms.author: mairaw
  manager: wpickett
- uid: System.Xml.XmlReader.ReadToNextSibling(System.String)
  commentId: M:System.Xml.XmlReader.ReadToNextSibling(System.String)
  id: ReadToNextSibling(System.String)
  parent: System.Xml.XmlReader
  langs:
  - csharp
  name: ReadToNextSibling(String)
  nameWithType: XmlReader.ReadToNextSibling(String)
  fullName: XmlReader.ReadToNextSibling(String)
  type: Method
  assemblies:
  - System.Xml.ReaderWriter
  - System.Xml
  - netstandard
  namespace: System.Xml
  summary: Advances the `XmlReader` to the next sibling element with the specified qualified name.
  remarks: >-
    > [!NOTE]

    >  Do not call <xref:System.Xml.XmlReader.ReadToNextSibling%2A> when the `XmlReader` is an initial state (<xref:System.Xml.XmlReader.ReadState%2A> is <xref:System.Xml.ReadState.Initial>). You can call <xref:System.Xml.XmlReader.Read%2A> to advance the `XmlReader` and then call the <xref:System.Xml.XmlReader.ReadToNextSibling%2A> method.
  example:
  - "The following example reads the ISBN attribute on each book node.  \n  \n [!code-csharp[XmlReaderBasic#15](~/samples/snippets/csharp/VS_Snippets_Data/XmlReaderBasic/CS/XmlReader_Basic.cs#15)]\n [!code-vb[XmlReaderBasic#15](~/samples/snippets/visualbasic/VS_Snippets_Data/XmlReaderBasic/VB/xmlreader_basic.vb#15)]"
  syntax:
    content: public virtual bool ReadToNextSibling (string name);
    parameters:
    - id: name
      type: System.String
      description: The qualified name of the sibling element you wish to move to.
    return:
      type: System.Boolean
      description: '`true` if a matching sibling element is found; otherwise `false`. If a matching sibling element is not found, the `XmlReader` is positioned on the end tag (<xref href="System.Xml.XmlReader.NodeType"></xref> is `XmlNodeType.EndElement`) of the parent element.'
  overload: System.Xml.XmlReader.ReadToNextSibling*
  exceptions:
  - type: System.InvalidOperationException
    commentId: T:System.InvalidOperationException
    description: An <xref href="System.Xml.XmlReader"></xref> method was called before a previous asynchronous operation finished. In this case, <xref href="System.InvalidOperationException"></xref> is thrown with the message "An asynchronous operation is already in progress."
  - type: System.ArgumentException
    commentId: T:System.ArgumentException
    description: The parameter is an empty string.
  version:
  - netcore-1.0
  - netcore-1.1
  - netcore-2.0
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  - netstandard-1.0
  - netstandard-1.1
  - netstandard-1.2
  - netstandard-1.3
  - netstandard-1.4
  - netstandard-1.6
  - netstandard-2.0
  - xamarinandroid-7.1
  - xamarinios-10.8
  - xamarinmac-3.0
  monikers:
  - netcore-1.0
  - netcore-1.1
  - netcore-2.0
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  - netstandard-1.0
  - netstandard-1.1
  - netstandard-1.2
  - netstandard-1.3
  - netstandard-1.4
  - netstandard-1.6
  - netstandard-2.0
  - xamarinandroid-7.1
  - xamarinios-10.8
  - xamarinmac-3.0
  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Xml/XmlReader.xml
  ms.technology:
  - dotnet-standard
  author: mairaw
  ms.author: mairaw
  manager: wpickett
- uid: System.Xml.XmlReader.ReadToNextSibling(System.String,System.String)
  commentId: M:System.Xml.XmlReader.ReadToNextSibling(System.String,System.String)
  id: ReadToNextSibling(System.String,System.String)
  parent: System.Xml.XmlReader
  langs:
  - csharp
  name: ReadToNextSibling(String, String)
  nameWithType: XmlReader.ReadToNextSibling(String, String)
  fullName: XmlReader.ReadToNextSibling(String, String)
  type: Method
  assemblies:
  - System.Xml.ReaderWriter
  - System.Xml
  - netstandard
  namespace: System.Xml
  summary: Advances the `XmlReader` to the next sibling element with the specified local name and namespace URI.
  remarks: >-
    > [!NOTE]

    >  Do not call <xref:System.Xml.XmlReader.ReadToNextSibling%2A> when the `XmlReader` is an initial state (<xref:System.Xml.XmlReader.ReadState%2A> is <xref:System.Xml.ReadState.Initial>). You can call <xref:System.Xml.XmlReader.Read%2A> to advance the `XmlReader` and then call the <xref:System.Xml.XmlReader.ReadToNextSibling%2A> method.
  syntax:
    content: public virtual bool ReadToNextSibling (string localName, string namespaceURI);
    parameters:
    - id: localName
      type: System.String
      description: The local name of the sibling element you wish to move to.
    - id: namespaceURI
      type: System.String
      description: The namespace URI of the sibling element you wish to move to.
    return:
      type: System.Boolean
      description: '`true` if a matching sibling element is found; otherwise, `false`. If a matching sibling element is not found, the `XmlReader` is positioned on the end tag (<xref href="System.Xml.XmlReader.NodeType"></xref> is `XmlNodeType.EndElement`) of the parent element.'
  overload: System.Xml.XmlReader.ReadToNextSibling*
  exceptions:
  - type: System.InvalidOperationException
    commentId: T:System.InvalidOperationException
    description: An <xref href="System.Xml.XmlReader"></xref> method was called before a previous asynchronous operation finished. In this case, <xref href="System.InvalidOperationException"></xref> is thrown with the message "An asynchronous operation is already in progress."
  - type: System.ArgumentNullException
    commentId: T:System.ArgumentNullException
    description: Both parameter values are `null`.
  version:
  - netcore-1.0
  - netcore-1.1
  - netcore-2.0
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  - netstandard-1.0
  - netstandard-1.1
  - netstandard-1.2
  - netstandard-1.3
  - netstandard-1.4
  - netstandard-1.6
  - netstandard-2.0
  - xamarinandroid-7.1
  - xamarinios-10.8
  - xamarinmac-3.0
  monikers:
  - netcore-1.0
  - netcore-1.1
  - netcore-2.0
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  - netstandard-1.0
  - netstandard-1.1
  - netstandard-1.2
  - netstandard-1.3
  - netstandard-1.4
  - netstandard-1.6
  - netstandard-2.0
  - xamarinandroid-7.1
  - xamarinios-10.8
  - xamarinmac-3.0
  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Xml/XmlReader.xml
  ms.technology:
  - dotnet-standard
  author: mairaw
  ms.author: mairaw
  manager: wpickett
- uid: System.Xml.XmlReader.ReadValueChunk(System.Char[],System.Int32,System.Int32)
  commentId: M:System.Xml.XmlReader.ReadValueChunk(System.Char[],System.Int32,System.Int32)
  id: ReadValueChunk(System.Char[],System.Int32,System.Int32)
  parent: System.Xml.XmlReader
  langs:
  - csharp
  name: ReadValueChunk(Char[], Int32, Int32)
  nameWithType: XmlReader.ReadValueChunk(Char[], Int32, Int32)
  fullName: XmlReader.ReadValueChunk(Char[], Int32, Int32)
  type: Method
  assemblies:
  - System.Xml.ReaderWriter
  - System.Xml
  - netstandard
  namespace: System.Xml
  summary: Reads large streams of text embedded in an XML document.
  remarks: "This method enables reading of very large streams of text embedded in an XML document in a streaming fashion, that is, a small number of characters at a time instead of allocating a single string for the whole value. This method can be called on any node that has a value (<xref:System.Xml.XmlReader.HasValue%2A> is `true`), however actual streaming of the node value only occurs when called on a text, white space and significant white space nodes. Other node type values are cached, including attributes and CDATA nodes.  \n  \n This method returns only the content of the <xref:System.Xml.XmlReader.Value%2A> property and does not move the <xref:System.Xml.XmlReader>.  \n  \n This method reads the specified number of characters (`count`) of the node value into a character buffer (`buffer`) at a specified offset (`index`) and returns the number of characters written to the buffer. It returns the `0` when it has reached the end of the value. It cannot be restarted to read through the value again.  \n  \n In between calls to <xref:System.Xml.XmlReader.ReadValueChunk%2A> the <xref:System.Xml.XmlReader> properties do no change except for the <xref:System.Xml.XmlReader.Value%2A> property. When the <xref:System.Xml.XmlReader.Value%2A> property is accessed it may either return a partial value (with characters not yet returned by <xref:System.Xml.XmlReader.ReadValueChunk%2A>) or a full value depending on the implementation. All the <xref:System.Xml.XmlReader> implementations in the <xref:System.Xml> namespace return a partial value for the <xref:System.Xml.XmlReader.Value%2A> property implementation.  \n  \n Any Read method can be called in between calls to <xref:System.Xml.XmlReader.ReadValueChunk%2A>. If this occurs, the <xref:System.Xml.XmlReader> moves to the next <xref:System.Xml.XmlNodeType> in the stream and any characters not yet returned are skipped.  \n  \n There may be a case when <xref:System.Xml.XmlReader.ReadValueChunk%2A> returns less than the requested number of characters. For example, if you had a 200-character long value with a surrogate pair at positions 127 and 128 and you called <xref:System.Xml.XmlReader.ReadValueChunk%2A> with a 128-character buffer, the method call would return 127 characters instead of the requested 128. The surrogate pair would then be returned in the next <xref:System.Xml.XmlReader.ReadValueChunk%2A> call. In this case, <xref:System.Xml.XmlReader.ReadValueChunk%2A> did not return the requested 128 characters because doing so would have resulted in an incomplete surrogate pair at the end of the buffer.  \n  \n For the asynchronous version of this method, see <xref:System.Xml.XmlReader.ReadValueChunkAsync%2A>."
  syntax:
    content: public virtual int ReadValueChunk (char[] buffer, int index, int count);
    parameters:
    - id: buffer
      type: System.Char[]
      description: The array of characters that serves as the buffer to which the text contents are written. This value cannot be `null`.
    - id: index
      type: System.Int32
      description: The offset within the buffer where the <xref href="System.Xml.XmlReader"></xref> can start to copy the results.
    - id: count
      type: System.Int32
      description: The maximum number of characters to copy into the buffer. The actual number of characters copied is returned from this method.
    return:
      type: System.Int32
      description: The number of characters read into the buffer. The value zero is returned when there is no more text content.
  overload: System.Xml.XmlReader.ReadValueChunk*
  exceptions:
  - type: System.InvalidOperationException
    commentId: T:System.InvalidOperationException
    description: An <xref href="System.Xml.XmlReader"></xref> method was called before a previous asynchronous operation finished. In this case, <xref href="System.InvalidOperationException"></xref> is thrown with the message "An asynchronous operation is already in progress."
  - type: System.ArgumentNullException
    commentId: T:System.ArgumentNullException
    description: The <code>buffer</code> value is `null`.
  - type: System.ArgumentOutOfRangeException
    commentId: T:System.ArgumentOutOfRangeException
    description: The index into the buffer, or index + count is larger than the allocated buffer size.
  - type: System.NotSupportedException
    commentId: T:System.NotSupportedException
    description: The <xref href="System.Xml.XmlReader"></xref> implementation does not support this method.
  - type: System.Xml.XmlException
    commentId: T:System.Xml.XmlException
    description: The XML data is not well-formed.
  version:
  - netcore-1.0
  - netcore-1.1
  - netcore-2.0
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  - netstandard-1.0
  - netstandard-1.1
  - netstandard-1.2
  - netstandard-1.3
  - netstandard-1.4
  - netstandard-1.6
  - netstandard-2.0
  - xamarinandroid-7.1
  - xamarinios-10.8
  - xamarinmac-3.0
  monikers:
  - netcore-1.0
  - netcore-1.1
  - netcore-2.0
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  - netstandard-1.0
  - netstandard-1.1
  - netstandard-1.2
  - netstandard-1.3
  - netstandard-1.4
  - netstandard-1.6
  - netstandard-2.0
  - xamarinandroid-7.1
  - xamarinios-10.8
  - xamarinmac-3.0
  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Xml/XmlReader.xml
  ms.technology:
  - dotnet-standard
  author: mairaw
  ms.author: mairaw
  manager: wpickett
- uid: System.Xml.XmlReader.ReadValueChunkAsync(System.Char[],System.Int32,System.Int32)
  commentId: M:System.Xml.XmlReader.ReadValueChunkAsync(System.Char[],System.Int32,System.Int32)
  id: ReadValueChunkAsync(System.Char[],System.Int32,System.Int32)
  parent: System.Xml.XmlReader
  langs:
  - csharp
  name: ReadValueChunkAsync(Char[], Int32, Int32)
  nameWithType: XmlReader.ReadValueChunkAsync(Char[], Int32, Int32)
  fullName: XmlReader.ReadValueChunkAsync(Char[], Int32, Int32)
  type: Method
  assemblies:
  - System.Xml.ReaderWriter
  - System.Xml
  - netstandard
  namespace: System.Xml
  summary: Asynchronously reads large streams of text embedded in an XML document.
  remarks: This is the asynchronous version of <xref:System.Xml.XmlReader.ReadValueChunk%2A>, with the same functionality. To use this method, you must set the <xref:System.Xml.XmlReaderSettings.Async%2A> flag to `true`.
  syntax:
    content: public virtual System.Threading.Tasks.Task<int> ReadValueChunkAsync (char[] buffer, int index, int count);
    parameters:
    - id: buffer
      type: System.Char[]
      description: The array of characters that serves as the buffer to which the text contents are written. This value cannot be `null`.
    - id: index
      type: System.Int32
      description: The offset within the buffer where the <xref href="System.Xml.XmlReader"></xref> can start to copy the results.
    - id: count
      type: System.Int32
      description: The maximum number of characters to copy into the buffer. The actual number of characters copied is returned from this method.
    return:
      type: System.Threading.Tasks.Task{System.Int32}
      description: The number of characters read into the buffer. The value zero is returned when there is no more text content.
  overload: System.Xml.XmlReader.ReadValueChunkAsync*
  exceptions:
  - type: System.InvalidOperationException
    commentId: T:System.InvalidOperationException
    description: An <xref href="System.Xml.XmlReader"></xref> asynchronous method was called without setting the <xref href="System.Xml.XmlReaderSettings.Async"></xref> flag to `true`. In this case, <xref href="System.InvalidOperationException"></xref> is thrown with the message "Set XmlReaderSettings.Async to true if you want to use Async Methods."
  version:
  - netcore-1.0
  - netcore-1.1
  - netcore-2.0
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  - netstandard-1.0
  - netstandard-1.1
  - netstandard-1.2
  - netstandard-1.3
  - netstandard-1.4
  - netstandard-1.6
  - netstandard-2.0
  - xamarinandroid-7.1
  - xamarinios-10.8
  - xamarinmac-3.0
  monikers:
  - netcore-1.0
  - netcore-1.1
  - netcore-2.0
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  - netstandard-1.0
  - netstandard-1.1
  - netstandard-1.2
  - netstandard-1.3
  - netstandard-1.4
  - netstandard-1.6
  - netstandard-2.0
  - xamarinandroid-7.1
  - xamarinios-10.8
  - xamarinmac-3.0
  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Xml/XmlReader.xml
  ms.technology:
  - dotnet-standard
  author: mairaw
  ms.author: mairaw
  manager: wpickett
- uid: System.Xml.XmlReader.ResolveEntity
  commentId: M:System.Xml.XmlReader.ResolveEntity
  id: ResolveEntity
  parent: System.Xml.XmlReader
  langs:
  - csharp
  name: ResolveEntity()
  nameWithType: XmlReader.ResolveEntity()
  fullName: XmlReader.ResolveEntity()
  type: Method
  assemblies:
  - System.Xml.ReaderWriter
  - System.Xml
  - netstandard
  namespace: System.Xml
  summary: When overridden in a derived class, resolves the entity reference for `EntityReference` nodes.
  remarks: "If the reader is positioned on an `EntityReference` node (`XmlNodeType.EntityReference`), if <xref:System.Xml.XmlReader.Read%2A> is called after calling this method, the entity replacement text is parsed. When the entity replacement text is finished, an `EndEntity` node is returned to close the entity reference scope.  \n  \n> [!NOTE]\n>  After calling this method, if the entity is part of an attribute value, you must call <xref:System.Xml.XmlReader.ReadAttributeValue%2A> to step into the entity."
  syntax:
    content: public abstract void ResolveEntity ();
    parameters: []
  overload: System.Xml.XmlReader.ResolveEntity*
  exceptions:
  - type: System.InvalidOperationException
    commentId: T:System.InvalidOperationException
    description: An <xref href="System.Xml.XmlReader"></xref> method was called before a previous asynchronous operation finished. In this case, <xref href="System.InvalidOperationException"></xref> is thrown with the message "An asynchronous operation is already in progress."
  version:
  - netcore-1.0
  - netcore-1.1
  - netcore-2.0
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  - netstandard-1.0
  - netstandard-1.1
  - netstandard-1.2
  - netstandard-1.3
  - netstandard-1.4
  - netstandard-1.6
  - netstandard-2.0
  - xamarinandroid-7.1
  - xamarinios-10.8
  - xamarinmac-3.0
  monikers:
  - netcore-1.0
  - netcore-1.1
  - netcore-2.0
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  - netstandard-1.0
  - netstandard-1.1
  - netstandard-1.2
  - netstandard-1.3
  - netstandard-1.4
  - netstandard-1.6
  - netstandard-2.0
  - xamarinandroid-7.1
  - xamarinios-10.8
  - xamarinmac-3.0
  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Xml/XmlReader.xml
  ms.technology:
  - dotnet-standard
  author: mairaw
  ms.author: mairaw
  manager: wpickett
- uid: System.Xml.XmlReader.SchemaInfo
  commentId: P:System.Xml.XmlReader.SchemaInfo
  id: SchemaInfo
  parent: System.Xml.XmlReader
  langs:
  - csharp
  name: SchemaInfo
  nameWithType: XmlReader.SchemaInfo
  fullName: XmlReader.SchemaInfo
  type: Property
  assemblies:
  - System.Xml
  - netstandard
  - System.Xml.ReaderWriter
  namespace: System.Xml
  summary: Gets the schema information that has been assigned to the current node as a result of schema validation.
  remarks: The <xref:System.Xml.Schema.IXmlSchemaInfo> interface exposes a subset of the Post Schema Validation Infoset (PSVI) associated with an XML node.
  syntax:
    content: public virtual System.Xml.Schema.IXmlSchemaInfo SchemaInfo { get; }
    return:
      type: System.Xml.Schema.IXmlSchemaInfo
      description: "An <xref href=\"System.Xml.Schema.IXmlSchemaInfo\"></xref> object containing the schema information for the current node. Schema information can be set on elements, attributes, or on text nodes with a non-null <xref href=\"System.Xml.XmlReader.ValueType\"></xref> (typed values).  \n  \n If the current node is not one of the above node types, or if the `XmlReader` instance does not report schema information, this property returns `null`.  \n  \n If this property is called from an <xref href=\"System.Xml.XmlTextReader\"></xref> or an <xref href=\"System.Xml.XmlValidatingReader\"></xref> object, this property always returns `null`. These `XmlReader` implementations do not expose schema information through the `SchemaInfo` property.  \n  \n <block subset=\"none\" type=\"note\"><p>  \n If you have to get the post-schema-validation information set (PSVI) for an element, position the reader on the end tag of the element, rather than on the start tag. You get the PSVI through the `SchemaInfo` property of a reader. The validating reader that is created through <xref href=\"System.Xml.XmlReader.Create*\"></xref> with the <xref href=\"System.Xml.XmlReaderSettings.ValidationType\"></xref> property set to <xref href=\"System.Xml.ValidationType.Schema\"></xref> has complete PSVI for an element only when the reader is positioned on the end tag of an element.  \n  \n</p></block>"
  overload: System.Xml.XmlReader.SchemaInfo*
  exceptions:
  - type: System.InvalidOperationException
    commentId: T:System.InvalidOperationException
    description: An <xref href="System.Xml.XmlReader"></xref> method was called before a previous asynchronous operation finished. In this case, <xref href="System.InvalidOperationException"></xref> is thrown with the message "An asynchronous operation is already in progress."
  version:
  - netcore-2.0
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  - netstandard-2.0
  - xamarinandroid-7.1
  - xamarinios-10.8
  - xamarinmac-3.0
  monikers:
  - netcore-2.0
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  - netstandard-2.0
  - xamarinandroid-7.1
  - xamarinios-10.8
  - xamarinmac-3.0
  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Xml/XmlReader.xml
  ms.technology:
  - dotnet-standard
  author: mairaw
  ms.author: mairaw
  manager: wpickett
- uid: System.Xml.XmlReader.Settings
  commentId: P:System.Xml.XmlReader.Settings
  id: Settings
  parent: System.Xml.XmlReader
  langs:
  - csharp
  name: Settings
  nameWithType: XmlReader.Settings
  fullName: XmlReader.Settings
  type: Property
  assemblies:
  - System.Xml.ReaderWriter
  - System.Xml
  - netstandard
  namespace: System.Xml
  summary: Gets the <xref href="System.Xml.XmlReaderSettings"></xref> object used to create this <xref href="System.Xml.XmlReader"></xref> instance.
  remarks: "> [!IMPORTANT]\n>  The <xref:System.Xml.XmlReaderSettings> object can contain sensitive information such as user credentials. Applications must be careful when caching this object or passing it to another component.  \n  \n The <xref:System.Xml.XmlReaderSettings> class is used to specify the set of features to support on the created reader instance. The <xref:System.Xml.XmlReaderSettings> object returned by this property cannot be modified. Any attempt to change individual settings results in an exception being thrown."
  syntax:
    content: public virtual System.Xml.XmlReaderSettings Settings { get; }
    return:
      type: System.Xml.XmlReaderSettings
      description: The <xref href="System.Xml.XmlReaderSettings"></xref> object used to create this reader instance. If this reader was not created using the <xref href="System.Xml.XmlReader.Create*"></xref> method, this property returns `null`.
  overload: System.Xml.XmlReader.Settings*
  exceptions:
  - type: System.InvalidOperationException
    commentId: T:System.InvalidOperationException
    description: An <xref href="System.Xml.XmlReader"></xref> method was called before a previous asynchronous operation finished. In this case, <xref href="System.InvalidOperationException"></xref> is thrown with the message "An asynchronous operation is already in progress."
  version:
  - netcore-1.0
  - netcore-1.1
  - netcore-2.0
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  - netstandard-1.0
  - netstandard-1.1
  - netstandard-1.2
  - netstandard-1.3
  - netstandard-1.4
  - netstandard-1.6
  - netstandard-2.0
  - xamarinandroid-7.1
  - xamarinios-10.8
  - xamarinmac-3.0
  monikers:
  - netcore-1.0
  - netcore-1.1
  - netcore-2.0
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  - netstandard-1.0
  - netstandard-1.1
  - netstandard-1.2
  - netstandard-1.3
  - netstandard-1.4
  - netstandard-1.6
  - netstandard-2.0
  - xamarinandroid-7.1
  - xamarinios-10.8
  - xamarinmac-3.0
  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Xml/XmlReader.xml
  ms.technology:
  - dotnet-standard
  author: mairaw
  ms.author: mairaw
  manager: wpickett
- uid: System.Xml.XmlReader.Skip
  commentId: M:System.Xml.XmlReader.Skip
  id: Skip
  parent: System.Xml.XmlReader
  langs:
  - csharp
  name: Skip()
  nameWithType: XmlReader.Skip()
  fullName: XmlReader.Skip()
  type: Method
  assemblies:
  - System.Xml.ReaderWriter
  - System.Xml
  - netstandard
  namespace: System.Xml
  summary: Skips the children of the current node.
  remarks: "In the following XML input if the reader is positioned on the `<a>` node or any of its attributes, calling `Skip` positions the reader to the `<b>` node.  \n  \n If the reader is positioned on a leaf node already (such as the `<x>` node or the text node `abc`), calling `Skip` is the same as calling <xref:System.Xml.XmlReader.Read%2A>.  \n  \n```  \n<a name=\"bob\" age=\"123\">  \n <x/>abc<y/>  \n</a>  \n<b>  \n...  \n</b>  \n```  \n  \n This method checks for well-formed XML.  \n  \n If the reader is an <xref:System.Xml.XmlValidatingReader>, this method also validates the skipped content.  \n  \n The `XmlReader` implementation determines whether or not the `Skip` method will expand external entities. The following table describes whether the external entities are expanded for the various types of `XmlReader` objects.  \n  \n|Type of XmlReader|Expands external entities|  \n|-----------------------|-------------------------------|  \n|<xref:System.Xml.XmlTextReader>|No.|  \n|<xref:System.Xml.XmlReader> instance created by the <xref:System.Xml.XmlReader.Create%2A> method that is reading text data.|No.|  \n|<xref:System.Xml.XmlReader> instance created by the <xref:System.Xml.XmlReader.Create%2A> method that is reading binary data.|Not applicable.|  \n|A schema validating <xref:System.Xml.XmlReader> instance created by the <xref:System.Xml.XmlReader.Create%2A> method.|Yes.|  \n|<xref:System.Xml.XmlValidatingReader>|Yes.|  \n|<xref:System.Xml.XmlReader> instance returned by a <xref:System.Xml.XPath.XPathNavigator> object.|Not applicable.|  \n|<xref:System.Xml.XmlNodeReader>|No.|  \n|<xref:System.Xml.XmlReader> instance wrapped around another <xref:System.Xml.XmlReader> instance.|Depends on the implementation of the underlying <xref:System.Xml.XmlReader>. (The `Skip` method on the underlying <xref:System.Xml.XmlReader> is called).|  \n  \n For the asynchronous version of this method, see <xref:System.Xml.XmlReader.SkipAsync%2A>."
  example:
  - "The following example parses an XML file starting on the second book node.  \n  \n [!code-csharp[XmlReaderBasic#14](~/samples/snippets/csharp/VS_Snippets_Data/XmlReaderBasic/CS/XmlReader_Basic.cs#14)]\n [!code-vb[XmlReaderBasic#14](~/samples/snippets/visualbasic/VS_Snippets_Data/XmlReaderBasic/VB/xmlreader_basic.vb#14)]  \n  \n The example uses the file, `2books.xml`, as input.  \n  \n [!code-xml[XML_Core_Files#7](~/samples/snippets/xml/VS_Snippets_Data/XML_Core_Files/XML/2books.xml#7)]"
  syntax:
    content: public virtual void Skip ();
    parameters: []
  overload: System.Xml.XmlReader.Skip*
  exceptions:
  - type: System.InvalidOperationException
    commentId: T:System.InvalidOperationException
    description: An <xref href="System.Xml.XmlReader"></xref> method was called before a previous asynchronous operation finished. In this case, <xref href="System.InvalidOperationException"></xref> is thrown with the message "An asynchronous operation is already in progress."
  version:
  - netcore-1.0
  - netcore-1.1
  - netcore-2.0
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  - netstandard-1.0
  - netstandard-1.1
  - netstandard-1.2
  - netstandard-1.3
  - netstandard-1.4
  - netstandard-1.6
  - netstandard-2.0
  - xamarinandroid-7.1
  - xamarinios-10.8
  - xamarinmac-3.0
  monikers:
  - netcore-1.0
  - netcore-1.1
  - netcore-2.0
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  - netstandard-1.0
  - netstandard-1.1
  - netstandard-1.2
  - netstandard-1.3
  - netstandard-1.4
  - netstandard-1.6
  - netstandard-2.0
  - xamarinandroid-7.1
  - xamarinios-10.8
  - xamarinmac-3.0
  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Xml/XmlReader.xml
  ms.technology:
  - dotnet-standard
  author: mairaw
  ms.author: mairaw
  manager: wpickett
- uid: System.Xml.XmlReader.SkipAsync
  commentId: M:System.Xml.XmlReader.SkipAsync
  id: SkipAsync
  parent: System.Xml.XmlReader
  langs:
  - csharp
  name: SkipAsync()
  nameWithType: XmlReader.SkipAsync()
  fullName: XmlReader.SkipAsync()
  type: Method
  assemblies:
  - System.Xml.ReaderWriter
  - System.Xml
  - netstandard
  namespace: System.Xml
  summary: Asynchronously skips the children of the current node.
  remarks: This is the asynchronous version of <xref:System.Xml.XmlReader.Skip%2A>, with the same functionality. To use this method, you must set the <xref:System.Xml.XmlReaderSettings.Async%2A> flag to `true`.
  syntax:
    content: public virtual System.Threading.Tasks.Task SkipAsync ();
    parameters: []
    return:
      type: System.Threading.Tasks.Task
      description: The current node.
  overload: System.Xml.XmlReader.SkipAsync*
  exceptions:
  - type: System.InvalidOperationException
    commentId: T:System.InvalidOperationException
    description: An <xref href="System.Xml.XmlReader"></xref> asynchronous method was called without setting the <xref href="System.Xml.XmlReaderSettings.Async"></xref> flag to `true`. In this case, <xref href="System.InvalidOperationException"></xref> is thrown with the message "Set XmlReaderSettings.Async to true if you want to use Async Methods."
  version:
  - netcore-1.0
  - netcore-1.1
  - netcore-2.0
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  - netstandard-1.0
  - netstandard-1.1
  - netstandard-1.2
  - netstandard-1.3
  - netstandard-1.4
  - netstandard-1.6
  - netstandard-2.0
  - xamarinandroid-7.1
  - xamarinios-10.8
  - xamarinmac-3.0
  monikers:
  - netcore-1.0
  - netcore-1.1
  - netcore-2.0
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  - netstandard-1.0
  - netstandard-1.1
  - netstandard-1.2
  - netstandard-1.3
  - netstandard-1.4
  - netstandard-1.6
  - netstandard-2.0
  - xamarinandroid-7.1
  - xamarinios-10.8
  - xamarinmac-3.0
  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Xml/XmlReader.xml
  ms.technology:
  - dotnet-standard
  author: mairaw
  ms.author: mairaw
  manager: wpickett
- uid: System.Xml.XmlReader.Value
  commentId: P:System.Xml.XmlReader.Value
  id: Value
  parent: System.Xml.XmlReader
  langs:
  - csharp
  name: Value
  nameWithType: XmlReader.Value
  fullName: XmlReader.Value
  type: Property
  assemblies:
  - System.Xml.ReaderWriter
  - System.Xml
  - netstandard
  namespace: System.Xml
  summary: When overridden in a derived class, gets the text value of the current node.
  remarks: For the asynchronous version of this property, see the <xref:System.Xml.XmlReader.GetValueAsync%2A> method.
  example:
  - "The following example reads an XML file and displays each of the nodes.  \n  \n [!code-csharp[XmlReaderBasic#8](~/samples/snippets/csharp/VS_Snippets_Data/XmlReaderBasic/CS/XmlReader_Basic.cs#8)]\n [!code-vb[XmlReaderBasic#8](~/samples/snippets/visualbasic/VS_Snippets_Data/XmlReaderBasic/VB/xmlreader_basic.vb#8)]  \n  \n The sample uses the `items.xml` file.  \n  \n [!code-xml[XML_Core_Files#2](~/samples/snippets/xml/VS_Snippets_Data/XML_Core_Files/XML/items.xml#2)]"
  syntax:
    content: public abstract string Value { get; }
    return:
      type: System.String
      description: "The value returned depends on the <xref href=\"System.Xml.XmlReader.NodeType\"></xref> of the node. The following table lists node types that have a value to return. All other node types return `String.Empty`.  \n  \n <table><thead><tr><th> Node type  \n  \n </th><th> Value  \n  \n </th></tr></thead><tbody><tr><td>`Attribute`</td><td> The value of the attribute.  \n  \n </td></tr><tr><td>`CDATA`</td><td> The content of the CDATA section.  \n  \n </td></tr><tr><td>`Comment`</td><td> The content of the comment.  \n  \n </td></tr><tr><td>`DocumentType`</td><td> The internal subset.  \n  \n </td></tr><tr><td>`ProcessingInstruction`</td><td> The entire content, excluding the target.  \n  \n </td></tr><tr><td>`SignificantWhitespace`</td><td> The white space between markup in a mixed content model.  \n  \n </td></tr><tr><td>`Text`</td><td> The content of the text node.  \n  \n </td></tr><tr><td>`Whitespace`</td><td> The white space between markup.  \n  \n </td></tr><tr><td>`XmlDeclaration`</td><td> The content of the declaration.  \n  \n </td></tr></tbody></table>"
  overload: System.Xml.XmlReader.Value*
  exceptions:
  - type: System.InvalidOperationException
    commentId: T:System.InvalidOperationException
    description: An <xref href="System.Xml.XmlReader"></xref> method was called before a previous asynchronous operation finished. In this case, <xref href="System.InvalidOperationException"></xref> is thrown with the message "An asynchronous operation is already in progress."
  version:
  - netcore-1.0
  - netcore-1.1
  - netcore-2.0
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  - netstandard-1.0
  - netstandard-1.1
  - netstandard-1.2
  - netstandard-1.3
  - netstandard-1.4
  - netstandard-1.6
  - netstandard-2.0
  - xamarinandroid-7.1
  - xamarinios-10.8
  - xamarinmac-3.0
  monikers:
  - netcore-1.0
  - netcore-1.1
  - netcore-2.0
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  - netstandard-1.0
  - netstandard-1.1
  - netstandard-1.2
  - netstandard-1.3
  - netstandard-1.4
  - netstandard-1.6
  - netstandard-2.0
  - xamarinandroid-7.1
  - xamarinios-10.8
  - xamarinmac-3.0
  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Xml/XmlReader.xml
  ms.technology:
  - dotnet-standard
  author: mairaw
  ms.author: mairaw
  manager: wpickett
- uid: System.Xml.XmlReader.ValueType
  commentId: P:System.Xml.XmlReader.ValueType
  id: ValueType
  parent: System.Xml.XmlReader
  langs:
  - csharp
  name: ValueType
  nameWithType: XmlReader.ValueType
  fullName: XmlReader.ValueType
  type: Property
  assemblies:
  - System.Xml.ReaderWriter
  - System.Xml
  - netstandard
  namespace: System.Xml
  summary: Gets The Common Language Runtime (CLR) type for the current node.
  remarks: "See [Type Support in the System.Xml Classes](~/docs/standard/data/xml/type-support-in-the-system-xml-classes.md) for a list of the default mappings.  \n  \n An element of type `xs:int` has a `ValueType` of `System.Int32` by default. However, the `ValueType` could be one of the valid types that can be mapped to `xs:int`, such as `System.Int16` or `System.Double`.  \n  \n If a node is un-typed, or if the node is an element that contains mixed content, the node value is mapped to the `System.String` type."
  syntax:
    content: public virtual Type ValueType { get; }
    return:
      type: System.Type
      description: The CLR type that corresponds to the typed value of the node. The default is `System.String`.
  overload: System.Xml.XmlReader.ValueType*
  exceptions:
  - type: System.InvalidOperationException
    commentId: T:System.InvalidOperationException
    description: An <xref href="System.Xml.XmlReader"></xref> method was called before a previous asynchronous operation finished. In this case, <xref href="System.InvalidOperationException"></xref> is thrown with the message "An asynchronous operation is already in progress."
  version:
  - netcore-1.0
  - netcore-1.1
  - netcore-2.0
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  - netstandard-1.0
  - netstandard-1.1
  - netstandard-1.2
  - netstandard-1.3
  - netstandard-1.4
  - netstandard-1.6
  - netstandard-2.0
  - xamarinandroid-7.1
  - xamarinios-10.8
  - xamarinmac-3.0
  monikers:
  - netcore-1.0
  - netcore-1.1
  - netcore-2.0
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  - netstandard-1.0
  - netstandard-1.1
  - netstandard-1.2
  - netstandard-1.3
  - netstandard-1.4
  - netstandard-1.6
  - netstandard-2.0
  - xamarinandroid-7.1
  - xamarinios-10.8
  - xamarinmac-3.0
  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Xml/XmlReader.xml
  ms.technology:
  - dotnet-standard
  author: mairaw
  ms.author: mairaw
  manager: wpickett
- uid: System.Xml.XmlReader.XmlLang
  commentId: P:System.Xml.XmlReader.XmlLang
  id: XmlLang
  parent: System.Xml.XmlReader
  langs:
  - csharp
  name: XmlLang
  nameWithType: XmlReader.XmlLang
  fullName: XmlReader.XmlLang
  type: Property
  assemblies:
  - System.Xml.ReaderWriter
  - System.Xml
  - netstandard
  namespace: System.Xml
  summary: When overridden in a derived class, gets the current `xml:lang` scope.
  remarks: "This property represents the `xml:lang` scope within which the current node resides. For example, here is an XML fragment with `xml:lang` set to US English in the root element:  \n  \n```  \n<root xml:lang=\"en-us\">   \n<name>Fred</name>   \n</root>   \n```  \n  \n When the reader is positioned on the `name` element, you can use this property to find that it is in the scope of a US English `xml:lang` attribute."
  example:
  - See <xref:System.Xml.XmlTextReader.XmlLang%2A?displayProperty=fullName> for an example of using this property.
  syntax:
    content: public virtual string XmlLang { get; }
    return:
      type: System.String
      description: The current `xml:lang` scope.
  overload: System.Xml.XmlReader.XmlLang*
  exceptions:
  - type: System.InvalidOperationException
    commentId: T:System.InvalidOperationException
    description: An <xref href="System.Xml.XmlReader"></xref> method was called before a previous asynchronous operation finished. In this case, <xref href="System.InvalidOperationException"></xref> is thrown with the message "An asynchronous operation is already in progress."
  version:
  - netcore-1.0
  - netcore-1.1
  - netcore-2.0
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  - netstandard-1.0
  - netstandard-1.1
  - netstandard-1.2
  - netstandard-1.3
  - netstandard-1.4
  - netstandard-1.6
  - netstandard-2.0
  - xamarinandroid-7.1
  - xamarinios-10.8
  - xamarinmac-3.0
  monikers:
  - netcore-1.0
  - netcore-1.1
  - netcore-2.0
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  - netstandard-1.0
  - netstandard-1.1
  - netstandard-1.2
  - netstandard-1.3
  - netstandard-1.4
  - netstandard-1.6
  - netstandard-2.0
  - xamarinandroid-7.1
  - xamarinios-10.8
  - xamarinmac-3.0
  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Xml/XmlReader.xml
  ms.technology:
  - dotnet-standard
  author: mairaw
  ms.author: mairaw
  manager: wpickett
- uid: System.Xml.XmlReader.XmlSpace
  commentId: P:System.Xml.XmlReader.XmlSpace
  id: XmlSpace
  parent: System.Xml.XmlReader
  langs:
  - csharp
  name: XmlSpace
  nameWithType: XmlReader.XmlSpace
  fullName: XmlReader.XmlSpace
  type: Property
  assemblies:
  - System.Xml.ReaderWriter
  - System.Xml
  - netstandard
  namespace: System.Xml
  summary: When overridden in a derived class, gets the current `xml:space` scope.
  remarks: ''
  example:
  - See <xref:System.Xml.XmlTextReader.XmlSpace%2A> (in the `XmlTextReader` class) for an example using this property.
  syntax:
    content: public virtual System.Xml.XmlSpace XmlSpace { get; }
    return:
      type: System.Xml.XmlSpace
      description: One of the <xref href="System.Xml.XmlSpace"></xref> values. If no `xml:space` scope exists, this property defaults to `XmlSpace.None`.
  overload: System.Xml.XmlReader.XmlSpace*
  exceptions:
  - type: System.InvalidOperationException
    commentId: T:System.InvalidOperationException
    description: An <xref href="System.Xml.XmlReader"></xref> method was called before a previous asynchronous operation finished. In this case, <xref href="System.InvalidOperationException"></xref> is thrown with the message "An asynchronous operation is already in progress."
  version:
  - netcore-1.0
  - netcore-1.1
  - netcore-2.0
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  - netstandard-1.0
  - netstandard-1.1
  - netstandard-1.2
  - netstandard-1.3
  - netstandard-1.4
  - netstandard-1.6
  - netstandard-2.0
  - xamarinandroid-7.1
  - xamarinios-10.8
  - xamarinmac-3.0
  monikers:
  - netcore-1.0
  - netcore-1.1
  - netcore-2.0
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  - netstandard-1.0
  - netstandard-1.1
  - netstandard-1.2
  - netstandard-1.3
  - netstandard-1.4
  - netstandard-1.6
  - netstandard-2.0
  - xamarinandroid-7.1
  - xamarinios-10.8
  - xamarinmac-3.0
  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Xml/XmlReader.xml
  ms.technology:
  - dotnet-standard
  author: mairaw
  ms.author: mairaw
  manager: wpickett
references:
- uid: System.Object
  parent: System
  isExternal: false
  name: Object
  nameWithType: Object
  fullName: System.Object
- uid: System.InvalidOperationException
  parent: System
  isExternal: false
  name: InvalidOperationException
  nameWithType: InvalidOperationException
  fullName: System.InvalidOperationException
- uid: System.ArgumentNullException
  parent: System
  isExternal: false
  name: ArgumentNullException
  nameWithType: ArgumentNullException
  fullName: System.ArgumentNullException
- uid: System.Security.SecurityException
  parent: System.Security
  isExternal: false
  name: SecurityException
  nameWithType: SecurityException
  fullName: System.Security.SecurityException
- uid: System.ArgumentException
  parent: System
  isExternal: false
  name: ArgumentException
  nameWithType: ArgumentException
  fullName: System.ArgumentException
- uid: System.IO.FileNotFoundException
  parent: System.IO
  isExternal: false
  name: FileNotFoundException
  nameWithType: FileNotFoundException
  fullName: System.IO.FileNotFoundException
- uid: System.UriFormatException
  parent: System
  isExternal: false
  name: UriFormatException
  nameWithType: UriFormatException
  fullName: System.UriFormatException
- uid: System.ArgumentOutOfRangeException
  parent: System
  isExternal: false
  name: ArgumentOutOfRangeException
  nameWithType: ArgumentOutOfRangeException
  fullName: System.ArgumentOutOfRangeException
- uid: System.Xml.XmlException
  parent: System.Xml
  isExternal: false
  name: XmlException
  nameWithType: XmlException
  fullName: System.Xml.XmlException
- uid: System.FormatException
  parent: System
  isExternal: false
  name: FormatException
  nameWithType: FormatException
  fullName: System.FormatException
- uid: System.InvalidCastException
  parent: System
  isExternal: false
  name: InvalidCastException
  nameWithType: InvalidCastException
  fullName: System.InvalidCastException
- uid: System.OverflowException
  parent: System
  isExternal: false
  name: OverflowException
  nameWithType: OverflowException
  fullName: System.OverflowException
- uid: System.NotSupportedException
  parent: System
  isExternal: false
  name: NotSupportedException
  nameWithType: NotSupportedException
  fullName: System.NotSupportedException
- uid: System.Xml.XmlReader.#ctor
  parent: System.Xml.XmlReader
  isExternal: false
  name: XmlReader()
  nameWithType: XmlReader.XmlReader()
  fullName: XmlReader.XmlReader()
- uid: System.Xml.XmlReader.AttributeCount
  parent: System.Xml.XmlReader
  isExternal: false
  name: AttributeCount
  nameWithType: XmlReader.AttributeCount
  fullName: XmlReader.AttributeCount
- uid: System.Int32
  parent: System
  isExternal: false
  name: Int32
  nameWithType: Int32
  fullName: System.Int32
- uid: System.Xml.XmlReader.BaseURI
  parent: System.Xml.XmlReader
  isExternal: false
  name: BaseURI
  nameWithType: XmlReader.BaseURI
  fullName: XmlReader.BaseURI
- uid: System.String
  parent: System
  isExternal: false
  name: String
  nameWithType: String
  fullName: System.String
- uid: System.Xml.XmlReader.CanReadBinaryContent
  parent: System.Xml.XmlReader
  isExternal: false
  name: CanReadBinaryContent
  nameWithType: XmlReader.CanReadBinaryContent
  fullName: XmlReader.CanReadBinaryContent
- uid: System.Boolean
  parent: System
  isExternal: false
  name: Boolean
  nameWithType: Boolean
  fullName: System.Boolean
- uid: System.Xml.XmlReader.CanReadValueChunk
  parent: System.Xml.XmlReader
  isExternal: false
  name: CanReadValueChunk
  nameWithType: XmlReader.CanReadValueChunk
  fullName: XmlReader.CanReadValueChunk
- uid: System.Xml.XmlReader.CanResolveEntity
  parent: System.Xml.XmlReader
  isExternal: false
  name: CanResolveEntity
  nameWithType: XmlReader.CanResolveEntity
  fullName: XmlReader.CanResolveEntity
- uid: System.Xml.XmlReader.Close
  parent: System.Xml.XmlReader
  isExternal: false
  name: Close()
  nameWithType: XmlReader.Close()
  fullName: XmlReader.Close()
- uid: System.Xml.XmlReader.Create(System.String,System.Xml.XmlReaderSettings,System.Xml.XmlParserContext)
  parent: System.Xml.XmlReader
  isExternal: false
  name: Create(String, XmlReaderSettings, XmlParserContext)
  nameWithType: XmlReader.Create(String, XmlReaderSettings, XmlParserContext)
  fullName: XmlReader.Create(String, XmlReaderSettings, XmlParserContext)
- uid: System.Xml.XmlReader
  parent: System.Xml
  isExternal: false
  name: XmlReader
  nameWithType: XmlReader
  fullName: System.Xml.XmlReader
- uid: System.Xml.XmlReaderSettings
  parent: System.Xml
  isExternal: false
  name: XmlReaderSettings
  nameWithType: XmlReaderSettings
  fullName: System.Xml.XmlReaderSettings
- uid: System.Xml.XmlParserContext
  parent: System.Xml
  isExternal: false
  name: XmlParserContext
  nameWithType: XmlParserContext
  fullName: System.Xml.XmlParserContext
- uid: System.Xml.XmlReader.Create(System.IO.TextReader,System.Xml.XmlReaderSettings,System.Xml.XmlParserContext)
  parent: System.Xml.XmlReader
  isExternal: false
  name: Create(TextReader, XmlReaderSettings, XmlParserContext)
  nameWithType: XmlReader.Create(TextReader, XmlReaderSettings, XmlParserContext)
  fullName: XmlReader.Create(TextReader, XmlReaderSettings, XmlParserContext)
- uid: System.IO.TextReader
  parent: System.IO
  isExternal: false
  name: TextReader
  nameWithType: TextReader
  fullName: System.IO.TextReader
- uid: System.Xml.XmlReader.Create(System.IO.TextReader,System.Xml.XmlReaderSettings,System.String)
  parent: System.Xml.XmlReader
  isExternal: false
  name: Create(TextReader, XmlReaderSettings, String)
  nameWithType: XmlReader.Create(TextReader, XmlReaderSettings, String)
  fullName: XmlReader.Create(TextReader, XmlReaderSettings, String)
- uid: System.Xml.XmlReader.Create(System.IO.Stream,System.Xml.XmlReaderSettings,System.String)
  parent: System.Xml.XmlReader
  isExternal: false
  name: Create(Stream, XmlReaderSettings, String)
  nameWithType: XmlReader.Create(Stream, XmlReaderSettings, String)
  fullName: XmlReader.Create(Stream, XmlReaderSettings, String)
- uid: System.IO.Stream
  parent: System.IO
  isExternal: false
  name: Stream
  nameWithType: Stream
  fullName: System.IO.Stream
- uid: System.Xml.XmlReader.Create(System.Xml.XmlReader,System.Xml.XmlReaderSettings)
  parent: System.Xml.XmlReader
  isExternal: false
  name: Create(XmlReader, XmlReaderSettings)
  nameWithType: XmlReader.Create(XmlReader, XmlReaderSettings)
  fullName: XmlReader.Create(XmlReader, XmlReaderSettings)
- uid: System.Xml.XmlReader.Create(System.IO.Stream,System.Xml.XmlReaderSettings,System.Xml.XmlParserContext)
  parent: System.Xml.XmlReader
  isExternal: false
  name: Create(Stream, XmlReaderSettings, XmlParserContext)
  nameWithType: XmlReader.Create(Stream, XmlReaderSettings, XmlParserContext)
  fullName: XmlReader.Create(Stream, XmlReaderSettings, XmlParserContext)
- uid: System.Xml.XmlReader.Create(System.IO.TextReader,System.Xml.XmlReaderSettings)
  parent: System.Xml.XmlReader
  isExternal: false
  name: Create(TextReader, XmlReaderSettings)
  nameWithType: XmlReader.Create(TextReader, XmlReaderSettings)
  fullName: XmlReader.Create(TextReader, XmlReaderSettings)
- uid: System.Xml.XmlReader.Create(System.IO.Stream,System.Xml.XmlReaderSettings)
  parent: System.Xml.XmlReader
  isExternal: false
  name: Create(Stream, XmlReaderSettings)
  nameWithType: XmlReader.Create(Stream, XmlReaderSettings)
  fullName: XmlReader.Create(Stream, XmlReaderSettings)
- uid: System.Xml.XmlReader.Create(System.String,System.Xml.XmlReaderSettings)
  parent: System.Xml.XmlReader
  isExternal: false
  name: Create(String, XmlReaderSettings)
  nameWithType: XmlReader.Create(String, XmlReaderSettings)
  fullName: XmlReader.Create(String, XmlReaderSettings)
- uid: System.Xml.XmlReader.Create(System.String)
  parent: System.Xml.XmlReader
  isExternal: false
  name: Create(String)
  nameWithType: XmlReader.Create(String)
  fullName: XmlReader.Create(String)
- uid: System.Xml.XmlReader.Create(System.IO.TextReader)
  parent: System.Xml.XmlReader
  isExternal: false
  name: Create(TextReader)
  nameWithType: XmlReader.Create(TextReader)
  fullName: XmlReader.Create(TextReader)
- uid: System.Xml.XmlReader.Create(System.IO.Stream)
  parent: System.Xml.XmlReader
  isExternal: false
  name: Create(Stream)
  nameWithType: XmlReader.Create(Stream)
  fullName: XmlReader.Create(Stream)
- uid: System.Xml.XmlReader.Depth
  parent: System.Xml.XmlReader
  isExternal: false
  name: Depth
  nameWithType: XmlReader.Depth
  fullName: XmlReader.Depth
- uid: System.Xml.XmlReader.Dispose
  parent: System.Xml.XmlReader
  isExternal: false
  name: Dispose()
  nameWithType: XmlReader.Dispose()
  fullName: XmlReader.Dispose()
- uid: System.Xml.XmlReader.Dispose(System.Boolean)
  parent: System.Xml.XmlReader
  isExternal: false
  name: Dispose(Boolean)
  nameWithType: XmlReader.Dispose(Boolean)
  fullName: XmlReader.Dispose(Boolean)
- uid: System.Xml.XmlReader.EOF
  parent: System.Xml.XmlReader
  isExternal: false
  name: EOF
  nameWithType: XmlReader.EOF
  fullName: XmlReader.EOF
- uid: System.Xml.XmlReader.GetAttribute(System.Int32)
  parent: System.Xml.XmlReader
  isExternal: false
  name: GetAttribute(Int32)
  nameWithType: XmlReader.GetAttribute(Int32)
  fullName: XmlReader.GetAttribute(Int32)
- uid: System.Xml.XmlReader.GetAttribute(System.String)
  parent: System.Xml.XmlReader
  isExternal: false
  name: GetAttribute(String)
  nameWithType: XmlReader.GetAttribute(String)
  fullName: XmlReader.GetAttribute(String)
- uid: System.Xml.XmlReader.GetAttribute(System.String,System.String)
  parent: System.Xml.XmlReader
  isExternal: false
  name: GetAttribute(String, String)
  nameWithType: XmlReader.GetAttribute(String, String)
  fullName: XmlReader.GetAttribute(String, String)
- uid: System.Xml.XmlReader.GetValueAsync
  parent: System.Xml.XmlReader
  isExternal: false
  name: GetValueAsync()
  nameWithType: XmlReader.GetValueAsync()
  fullName: XmlReader.GetValueAsync()
- uid: System.Threading.Tasks.Task`1
  name: Task<TResult>
  nameWithType: Task<TResult>
  fullName: System.Threading.Tasks.Task<TResult>
- uid: System.Threading.Tasks.Task{System.String}
  parent: System.Threading.Tasks
  isExternal: false
  name: Task<String>
  nameWithType: Task<String>
  fullName: System.Threading.Tasks.Task<System.String>
  spec.csharp:
  - uid: System.Threading.Tasks.Task`1
    name: Task
    nameWithType: Task
    fullName: System.Threading.Tasks.Task
  - name: <
    nameWithType: <
    fullName: <
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
  - name: '>'
    nameWithType: '>'
    fullName: '>'
- uid: System.Xml.XmlReader.HasAttributes
  parent: System.Xml.XmlReader
  isExternal: false
  name: HasAttributes
  nameWithType: XmlReader.HasAttributes
  fullName: XmlReader.HasAttributes
- uid: System.Xml.XmlReader.HasValue
  parent: System.Xml.XmlReader
  isExternal: false
  name: HasValue
  nameWithType: XmlReader.HasValue
  fullName: XmlReader.HasValue
- uid: System.Xml.XmlReader.IsDefault
  parent: System.Xml.XmlReader
  isExternal: false
  name: IsDefault
  nameWithType: XmlReader.IsDefault
  fullName: XmlReader.IsDefault
- uid: System.Xml.XmlReader.IsEmptyElement
  parent: System.Xml.XmlReader
  isExternal: false
  name: IsEmptyElement
  nameWithType: XmlReader.IsEmptyElement
  fullName: XmlReader.IsEmptyElement
- uid: System.Xml.XmlReader.IsName(System.String)
  parent: System.Xml.XmlReader
  isExternal: false
  name: IsName(String)
  nameWithType: XmlReader.IsName(String)
  fullName: XmlReader.IsName(String)
- uid: System.Xml.XmlReader.IsNameToken(System.String)
  parent: System.Xml.XmlReader
  isExternal: false
  name: IsNameToken(String)
  nameWithType: XmlReader.IsNameToken(String)
  fullName: XmlReader.IsNameToken(String)
- uid: System.Xml.XmlReader.IsStartElement
  parent: System.Xml.XmlReader
  isExternal: false
  name: IsStartElement()
  nameWithType: XmlReader.IsStartElement()
  fullName: XmlReader.IsStartElement()
- uid: System.Xml.XmlReader.IsStartElement(System.String)
  parent: System.Xml.XmlReader
  isExternal: false
  name: IsStartElement(String)
  nameWithType: XmlReader.IsStartElement(String)
  fullName: XmlReader.IsStartElement(String)
- uid: System.Xml.XmlReader.IsStartElement(System.String,System.String)
  parent: System.Xml.XmlReader
  isExternal: false
  name: IsStartElement(String, String)
  nameWithType: XmlReader.IsStartElement(String, String)
  fullName: XmlReader.IsStartElement(String, String)
- uid: System.Xml.XmlReader.Item(System.Int32)
  parent: System.Xml.XmlReader
  isExternal: false
  name: Item(Int32)
  nameWithType: XmlReader.Item(Int32)
  fullName: XmlReader.Item(Int32)
- uid: System.Xml.XmlReader.Item(System.String)
  parent: System.Xml.XmlReader
  isExternal: false
  name: Item(String)
  nameWithType: XmlReader.Item(String)
  fullName: XmlReader.Item(String)
- uid: System.Xml.XmlReader.Item(System.String,System.String)
  parent: System.Xml.XmlReader
  isExternal: false
  name: Item(String, String)
  nameWithType: XmlReader.Item(String, String)
  fullName: XmlReader.Item(String, String)
- uid: System.Xml.XmlReader.LocalName
  parent: System.Xml.XmlReader
  isExternal: false
  name: LocalName
  nameWithType: XmlReader.LocalName
  fullName: XmlReader.LocalName
- uid: System.Xml.XmlReader.LookupNamespace(System.String)
  parent: System.Xml.XmlReader
  isExternal: false
  name: LookupNamespace(String)
  nameWithType: XmlReader.LookupNamespace(String)
  fullName: XmlReader.LookupNamespace(String)
- uid: System.Xml.XmlReader.MoveToAttribute(System.Int32)
  parent: System.Xml.XmlReader
  isExternal: false
  name: MoveToAttribute(Int32)
  nameWithType: XmlReader.MoveToAttribute(Int32)
  fullName: XmlReader.MoveToAttribute(Int32)
- uid: System.Xml.XmlReader.MoveToAttribute(System.String)
  parent: System.Xml.XmlReader
  isExternal: false
  name: MoveToAttribute(String)
  nameWithType: XmlReader.MoveToAttribute(String)
  fullName: XmlReader.MoveToAttribute(String)
- uid: System.Xml.XmlReader.MoveToAttribute(System.String,System.String)
  parent: System.Xml.XmlReader
  isExternal: false
  name: MoveToAttribute(String, String)
  nameWithType: XmlReader.MoveToAttribute(String, String)
  fullName: XmlReader.MoveToAttribute(String, String)
- uid: System.Xml.XmlReader.MoveToContent
  parent: System.Xml.XmlReader
  isExternal: false
  name: MoveToContent()
  nameWithType: XmlReader.MoveToContent()
  fullName: XmlReader.MoveToContent()
- uid: System.Xml.XmlNodeType
  parent: System.Xml
  isExternal: false
  name: XmlNodeType
  nameWithType: XmlNodeType
  fullName: System.Xml.XmlNodeType
- uid: System.Xml.XmlReader.MoveToContentAsync
  parent: System.Xml.XmlReader
  isExternal: false
  name: MoveToContentAsync()
  nameWithType: XmlReader.MoveToContentAsync()
  fullName: XmlReader.MoveToContentAsync()
- uid: System.Threading.Tasks.Task{System.Xml.XmlNodeType}
  parent: System.Threading.Tasks
  isExternal: false
  name: Task<XmlNodeType>
  nameWithType: Task<XmlNodeType>
  fullName: System.Threading.Tasks.Task<System.Xml.XmlNodeType>
  spec.csharp:
  - uid: System.Threading.Tasks.Task`1
    name: Task
    nameWithType: Task
    fullName: System.Threading.Tasks.Task
  - name: <
    nameWithType: <
    fullName: <
  - uid: System.Xml.XmlNodeType
    name: XmlNodeType
    nameWithType: XmlNodeType
    fullName: System.Xml.XmlNodeType
  - name: '>'
    nameWithType: '>'
    fullName: '>'
- uid: System.Xml.XmlReader.MoveToElement
  parent: System.Xml.XmlReader
  isExternal: false
  name: MoveToElement()
  nameWithType: XmlReader.MoveToElement()
  fullName: XmlReader.MoveToElement()
- uid: System.Xml.XmlReader.MoveToFirstAttribute
  parent: System.Xml.XmlReader
  isExternal: false
  name: MoveToFirstAttribute()
  nameWithType: XmlReader.MoveToFirstAttribute()
  fullName: XmlReader.MoveToFirstAttribute()
- uid: System.Xml.XmlReader.MoveToNextAttribute
  parent: System.Xml.XmlReader
  isExternal: false
  name: MoveToNextAttribute()
  nameWithType: XmlReader.MoveToNextAttribute()
  fullName: XmlReader.MoveToNextAttribute()
- uid: System.Xml.XmlReader.Name
  parent: System.Xml.XmlReader
  isExternal: false
  name: Name
  nameWithType: XmlReader.Name
  fullName: XmlReader.Name
- uid: System.Xml.XmlReader.NamespaceURI
  parent: System.Xml.XmlReader
  isExternal: false
  name: NamespaceURI
  nameWithType: XmlReader.NamespaceURI
  fullName: XmlReader.NamespaceURI
- uid: System.Xml.XmlReader.NameTable
  parent: System.Xml.XmlReader
  isExternal: false
  name: NameTable
  nameWithType: XmlReader.NameTable
  fullName: XmlReader.NameTable
- uid: System.Xml.XmlNameTable
  parent: System.Xml
  isExternal: false
  name: XmlNameTable
  nameWithType: XmlNameTable
  fullName: System.Xml.XmlNameTable
- uid: System.Xml.XmlReader.NodeType
  parent: System.Xml.XmlReader
  isExternal: false
  name: NodeType
  nameWithType: XmlReader.NodeType
  fullName: XmlReader.NodeType
- uid: System.Xml.XmlReader.Prefix
  parent: System.Xml.XmlReader
  isExternal: false
  name: Prefix
  nameWithType: XmlReader.Prefix
  fullName: XmlReader.Prefix
- uid: System.Xml.XmlReader.QuoteChar
  parent: System.Xml.XmlReader
  isExternal: false
  name: QuoteChar
  nameWithType: XmlReader.QuoteChar
  fullName: XmlReader.QuoteChar
- uid: System.Char
  parent: System
  isExternal: false
  name: Char
  nameWithType: Char
  fullName: System.Char
- uid: System.Xml.XmlReader.Read
  parent: System.Xml.XmlReader
  isExternal: false
  name: Read()
  nameWithType: XmlReader.Read()
  fullName: XmlReader.Read()
- uid: System.Xml.XmlReader.ReadAsync
  parent: System.Xml.XmlReader
  isExternal: false
  name: ReadAsync()
  nameWithType: XmlReader.ReadAsync()
  fullName: XmlReader.ReadAsync()
- uid: System.Threading.Tasks.Task{System.Boolean}
  parent: System.Threading.Tasks
  isExternal: false
  name: Task<Boolean>
  nameWithType: Task<Boolean>
  fullName: System.Threading.Tasks.Task<System.Boolean>
  spec.csharp:
  - uid: System.Threading.Tasks.Task`1
    name: Task
    nameWithType: Task
    fullName: System.Threading.Tasks.Task
  - name: <
    nameWithType: <
    fullName: <
  - uid: System.Boolean
    name: Boolean
    nameWithType: Boolean
    fullName: System.Boolean
  - name: '>'
    nameWithType: '>'
    fullName: '>'
- uid: System.Xml.XmlReader.ReadAttributeValue
  parent: System.Xml.XmlReader
  isExternal: false
  name: ReadAttributeValue()
  nameWithType: XmlReader.ReadAttributeValue()
  fullName: XmlReader.ReadAttributeValue()
- uid: System.Xml.XmlReader.ReadContentAs(System.Type,System.Xml.IXmlNamespaceResolver)
  parent: System.Xml.XmlReader
  isExternal: false
  name: ReadContentAs(Type, IXmlNamespaceResolver)
  nameWithType: XmlReader.ReadContentAs(Type, IXmlNamespaceResolver)
  fullName: XmlReader.ReadContentAs(Type, IXmlNamespaceResolver)
- uid: System.Type
  parent: System
  isExternal: false
  name: Type
  nameWithType: Type
  fullName: System.Type
- uid: System.Xml.IXmlNamespaceResolver
  parent: System.Xml
  isExternal: false
  name: IXmlNamespaceResolver
  nameWithType: IXmlNamespaceResolver
  fullName: System.Xml.IXmlNamespaceResolver
- uid: System.Xml.XmlReader.ReadContentAsAsync(System.Type,System.Xml.IXmlNamespaceResolver)
  parent: System.Xml.XmlReader
  isExternal: false
  name: ReadContentAsAsync(Type, IXmlNamespaceResolver)
  nameWithType: XmlReader.ReadContentAsAsync(Type, IXmlNamespaceResolver)
  fullName: XmlReader.ReadContentAsAsync(Type, IXmlNamespaceResolver)
- uid: System.Threading.Tasks.Task{System.Object}
  parent: System.Threading.Tasks
  isExternal: false
  name: Task<Object>
  nameWithType: Task<Object>
  fullName: System.Threading.Tasks.Task<System.Object>
  spec.csharp:
  - uid: System.Threading.Tasks.Task`1
    name: Task
    nameWithType: Task
    fullName: System.Threading.Tasks.Task
  - name: <
    nameWithType: <
    fullName: <
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
  - name: '>'
    nameWithType: '>'
    fullName: '>'
- uid: System.Xml.XmlReader.ReadContentAsBase64(System.Byte[],System.Int32,System.Int32)
  parent: System.Xml.XmlReader
  isExternal: false
  name: ReadContentAsBase64(Byte[], Int32, Int32)
  nameWithType: XmlReader.ReadContentAsBase64(Byte[], Int32, Int32)
  fullName: XmlReader.ReadContentAsBase64(Byte[], Int32, Int32)
- uid: System.Byte
  name: Byte
  nameWithType: Byte
  fullName: System.Byte
- uid: System.Byte[]
  parent: System
  isExternal: false
  name: Byte[]
  nameWithType: Byte[]
  fullName: System.Byte[]
  spec.csharp:
  - uid: System.Byte
    name: Byte
    nameWithType: Byte
    fullName: System.Byte
  - name: '[]'
    nameWithType: '[]'
    fullName: '[]'
- uid: System.Xml.XmlReader.ReadContentAsBase64Async(System.Byte[],System.Int32,System.Int32)
  parent: System.Xml.XmlReader
  isExternal: false
  name: ReadContentAsBase64Async(Byte[], Int32, Int32)
  nameWithType: XmlReader.ReadContentAsBase64Async(Byte[], Int32, Int32)
  fullName: XmlReader.ReadContentAsBase64Async(Byte[], Int32, Int32)
- uid: System.Threading.Tasks.Task{System.Int32}
  parent: System.Threading.Tasks
  isExternal: false
  name: Task<Int32>
  nameWithType: Task<Int32>
  fullName: System.Threading.Tasks.Task<System.Int32>
  spec.csharp:
  - uid: System.Threading.Tasks.Task`1
    name: Task
    nameWithType: Task
    fullName: System.Threading.Tasks.Task
  - name: <
    nameWithType: <
    fullName: <
  - uid: System.Int32
    name: Int32
    nameWithType: Int32
    fullName: System.Int32
  - name: '>'
    nameWithType: '>'
    fullName: '>'
- uid: System.Xml.XmlReader.ReadContentAsBinHex(System.Byte[],System.Int32,System.Int32)
  parent: System.Xml.XmlReader
  isExternal: false
  name: ReadContentAsBinHex(Byte[], Int32, Int32)
  nameWithType: XmlReader.ReadContentAsBinHex(Byte[], Int32, Int32)
  fullName: XmlReader.ReadContentAsBinHex(Byte[], Int32, Int32)
- uid: System.Xml.XmlReader.ReadContentAsBinHexAsync(System.Byte[],System.Int32,System.Int32)
  parent: System.Xml.XmlReader
  isExternal: false
  name: ReadContentAsBinHexAsync(Byte[], Int32, Int32)
  nameWithType: XmlReader.ReadContentAsBinHexAsync(Byte[], Int32, Int32)
  fullName: XmlReader.ReadContentAsBinHexAsync(Byte[], Int32, Int32)
- uid: System.Xml.XmlReader.ReadContentAsBoolean
  parent: System.Xml.XmlReader
  isExternal: false
  name: ReadContentAsBoolean()
  nameWithType: XmlReader.ReadContentAsBoolean()
  fullName: XmlReader.ReadContentAsBoolean()
- uid: System.Xml.XmlReader.ReadContentAsDateTime
  parent: System.Xml.XmlReader
  isExternal: false
  name: ReadContentAsDateTime()
  nameWithType: XmlReader.ReadContentAsDateTime()
  fullName: XmlReader.ReadContentAsDateTime()
- uid: System.DateTime
  parent: System
  isExternal: false
  name: DateTime
  nameWithType: DateTime
  fullName: System.DateTime
- uid: System.Xml.XmlReader.ReadContentAsDateTimeOffset
  parent: System.Xml.XmlReader
  isExternal: false
  name: ReadContentAsDateTimeOffset()
  nameWithType: XmlReader.ReadContentAsDateTimeOffset()
  fullName: XmlReader.ReadContentAsDateTimeOffset()
- uid: System.DateTimeOffset
  parent: System
  isExternal: false
  name: DateTimeOffset
  nameWithType: DateTimeOffset
  fullName: System.DateTimeOffset
- uid: System.Xml.XmlReader.ReadContentAsDecimal
  parent: System.Xml.XmlReader
  isExternal: false
  name: ReadContentAsDecimal()
  nameWithType: XmlReader.ReadContentAsDecimal()
  fullName: XmlReader.ReadContentAsDecimal()
- uid: System.Decimal
  parent: System
  isExternal: false
  name: Decimal
  nameWithType: Decimal
  fullName: System.Decimal
- uid: System.Xml.XmlReader.ReadContentAsDouble
  parent: System.Xml.XmlReader
  isExternal: false
  name: ReadContentAsDouble()
  nameWithType: XmlReader.ReadContentAsDouble()
  fullName: XmlReader.ReadContentAsDouble()
- uid: System.Double
  parent: System
  isExternal: false
  name: Double
  nameWithType: Double
  fullName: System.Double
- uid: System.Xml.XmlReader.ReadContentAsFloat
  parent: System.Xml.XmlReader
  isExternal: false
  name: ReadContentAsFloat()
  nameWithType: XmlReader.ReadContentAsFloat()
  fullName: XmlReader.ReadContentAsFloat()
- uid: System.Single
  parent: System
  isExternal: false
  name: Single
  nameWithType: Single
  fullName: System.Single
- uid: System.Xml.XmlReader.ReadContentAsInt
  parent: System.Xml.XmlReader
  isExternal: false
  name: ReadContentAsInt()
  nameWithType: XmlReader.ReadContentAsInt()
  fullName: XmlReader.ReadContentAsInt()
- uid: System.Xml.XmlReader.ReadContentAsLong
  parent: System.Xml.XmlReader
  isExternal: false
  name: ReadContentAsLong()
  nameWithType: XmlReader.ReadContentAsLong()
  fullName: XmlReader.ReadContentAsLong()
- uid: System.Int64
  parent: System
  isExternal: false
  name: Int64
  nameWithType: Int64
  fullName: System.Int64
- uid: System.Xml.XmlReader.ReadContentAsObject
  parent: System.Xml.XmlReader
  isExternal: false
  name: ReadContentAsObject()
  nameWithType: XmlReader.ReadContentAsObject()
  fullName: XmlReader.ReadContentAsObject()
- uid: System.Xml.XmlReader.ReadContentAsObjectAsync
  parent: System.Xml.XmlReader
  isExternal: false
  name: ReadContentAsObjectAsync()
  nameWithType: XmlReader.ReadContentAsObjectAsync()
  fullName: XmlReader.ReadContentAsObjectAsync()
- uid: System.Xml.XmlReader.ReadContentAsString
  parent: System.Xml.XmlReader
  isExternal: false
  name: ReadContentAsString()
  nameWithType: XmlReader.ReadContentAsString()
  fullName: XmlReader.ReadContentAsString()
- uid: System.Xml.XmlReader.ReadContentAsStringAsync
  parent: System.Xml.XmlReader
  isExternal: false
  name: ReadContentAsStringAsync()
  nameWithType: XmlReader.ReadContentAsStringAsync()
  fullName: XmlReader.ReadContentAsStringAsync()
- uid: System.Xml.XmlReader.ReadElementContentAs(System.Type,System.Xml.IXmlNamespaceResolver)
  parent: System.Xml.XmlReader
  isExternal: false
  name: ReadElementContentAs(Type, IXmlNamespaceResolver)
  nameWithType: XmlReader.ReadElementContentAs(Type, IXmlNamespaceResolver)
  fullName: XmlReader.ReadElementContentAs(Type, IXmlNamespaceResolver)
- uid: System.Xml.XmlReader.ReadElementContentAs(System.Type,System.Xml.IXmlNamespaceResolver,System.String,System.String)
  parent: System.Xml.XmlReader
  isExternal: false
  name: ReadElementContentAs(Type, IXmlNamespaceResolver, String, String)
  nameWithType: XmlReader.ReadElementContentAs(Type, IXmlNamespaceResolver, String, String)
  fullName: XmlReader.ReadElementContentAs(Type, IXmlNamespaceResolver, String, String)
- uid: System.Xml.XmlReader.ReadElementContentAsAsync(System.Type,System.Xml.IXmlNamespaceResolver)
  parent: System.Xml.XmlReader
  isExternal: false
  name: ReadElementContentAsAsync(Type, IXmlNamespaceResolver)
  nameWithType: XmlReader.ReadElementContentAsAsync(Type, IXmlNamespaceResolver)
  fullName: XmlReader.ReadElementContentAsAsync(Type, IXmlNamespaceResolver)
- uid: System.Xml.XmlReader.ReadElementContentAsBase64(System.Byte[],System.Int32,System.Int32)
  parent: System.Xml.XmlReader
  isExternal: false
  name: ReadElementContentAsBase64(Byte[], Int32, Int32)
  nameWithType: XmlReader.ReadElementContentAsBase64(Byte[], Int32, Int32)
  fullName: XmlReader.ReadElementContentAsBase64(Byte[], Int32, Int32)
- uid: System.Xml.XmlReader.ReadElementContentAsBase64Async(System.Byte[],System.Int32,System.Int32)
  parent: System.Xml.XmlReader
  isExternal: false
  name: ReadElementContentAsBase64Async(Byte[], Int32, Int32)
  nameWithType: XmlReader.ReadElementContentAsBase64Async(Byte[], Int32, Int32)
  fullName: XmlReader.ReadElementContentAsBase64Async(Byte[], Int32, Int32)
- uid: System.Xml.XmlReader.ReadElementContentAsBinHex(System.Byte[],System.Int32,System.Int32)
  parent: System.Xml.XmlReader
  isExternal: false
  name: ReadElementContentAsBinHex(Byte[], Int32, Int32)
  nameWithType: XmlReader.ReadElementContentAsBinHex(Byte[], Int32, Int32)
  fullName: XmlReader.ReadElementContentAsBinHex(Byte[], Int32, Int32)
- uid: System.Xml.XmlReader.ReadElementContentAsBinHexAsync(System.Byte[],System.Int32,System.Int32)
  parent: System.Xml.XmlReader
  isExternal: false
  name: ReadElementContentAsBinHexAsync(Byte[], Int32, Int32)
  nameWithType: XmlReader.ReadElementContentAsBinHexAsync(Byte[], Int32, Int32)
  fullName: XmlReader.ReadElementContentAsBinHexAsync(Byte[], Int32, Int32)
- uid: System.Xml.XmlReader.ReadElementContentAsBoolean(System.String,System.String)
  parent: System.Xml.XmlReader
  isExternal: false
  name: ReadElementContentAsBoolean(String, String)
  nameWithType: XmlReader.ReadElementContentAsBoolean(String, String)
  fullName: XmlReader.ReadElementContentAsBoolean(String, String)
- uid: System.Xml.XmlReader.ReadElementContentAsBoolean
  parent: System.Xml.XmlReader
  isExternal: false
  name: ReadElementContentAsBoolean()
  nameWithType: XmlReader.ReadElementContentAsBoolean()
  fullName: XmlReader.ReadElementContentAsBoolean()
- uid: System.Xml.XmlReader.ReadElementContentAsDateTime
  parent: System.Xml.XmlReader
  isExternal: false
  name: ReadElementContentAsDateTime()
  nameWithType: XmlReader.ReadElementContentAsDateTime()
  fullName: XmlReader.ReadElementContentAsDateTime()
- uid: System.Xml.XmlReader.ReadElementContentAsDateTime(System.String,System.String)
  parent: System.Xml.XmlReader
  isExternal: false
  name: ReadElementContentAsDateTime(String, String)
  nameWithType: XmlReader.ReadElementContentAsDateTime(String, String)
  fullName: XmlReader.ReadElementContentAsDateTime(String, String)
- uid: System.Xml.XmlReader.ReadElementContentAsDecimal
  parent: System.Xml.XmlReader
  isExternal: false
  name: ReadElementContentAsDecimal()
  nameWithType: XmlReader.ReadElementContentAsDecimal()
  fullName: XmlReader.ReadElementContentAsDecimal()
- uid: System.Xml.XmlReader.ReadElementContentAsDecimal(System.String,System.String)
  parent: System.Xml.XmlReader
  isExternal: false
  name: ReadElementContentAsDecimal(String, String)
  nameWithType: XmlReader.ReadElementContentAsDecimal(String, String)
  fullName: XmlReader.ReadElementContentAsDecimal(String, String)
- uid: System.Xml.XmlReader.ReadElementContentAsDouble
  parent: System.Xml.XmlReader
  isExternal: false
  name: ReadElementContentAsDouble()
  nameWithType: XmlReader.ReadElementContentAsDouble()
  fullName: XmlReader.ReadElementContentAsDouble()
- uid: System.Xml.XmlReader.ReadElementContentAsDouble(System.String,System.String)
  parent: System.Xml.XmlReader
  isExternal: false
  name: ReadElementContentAsDouble(String, String)
  nameWithType: XmlReader.ReadElementContentAsDouble(String, String)
  fullName: XmlReader.ReadElementContentAsDouble(String, String)
- uid: System.Xml.XmlReader.ReadElementContentAsFloat
  parent: System.Xml.XmlReader
  isExternal: false
  name: ReadElementContentAsFloat()
  nameWithType: XmlReader.ReadElementContentAsFloat()
  fullName: XmlReader.ReadElementContentAsFloat()
- uid: System.Xml.XmlReader.ReadElementContentAsFloat(System.String,System.String)
  parent: System.Xml.XmlReader
  isExternal: false
  name: ReadElementContentAsFloat(String, String)
  nameWithType: XmlReader.ReadElementContentAsFloat(String, String)
  fullName: XmlReader.ReadElementContentAsFloat(String, String)
- uid: System.Xml.XmlReader.ReadElementContentAsInt
  parent: System.Xml.XmlReader
  isExternal: false
  name: ReadElementContentAsInt()
  nameWithType: XmlReader.ReadElementContentAsInt()
  fullName: XmlReader.ReadElementContentAsInt()
- uid: System.Xml.XmlReader.ReadElementContentAsInt(System.String,System.String)
  parent: System.Xml.XmlReader
  isExternal: false
  name: ReadElementContentAsInt(String, String)
  nameWithType: XmlReader.ReadElementContentAsInt(String, String)
  fullName: XmlReader.ReadElementContentAsInt(String, String)
- uid: System.Xml.XmlReader.ReadElementContentAsLong
  parent: System.Xml.XmlReader
  isExternal: false
  name: ReadElementContentAsLong()
  nameWithType: XmlReader.ReadElementContentAsLong()
  fullName: XmlReader.ReadElementContentAsLong()
- uid: System.Xml.XmlReader.ReadElementContentAsLong(System.String,System.String)
  parent: System.Xml.XmlReader
  isExternal: false
  name: ReadElementContentAsLong(String, String)
  nameWithType: XmlReader.ReadElementContentAsLong(String, String)
  fullName: XmlReader.ReadElementContentAsLong(String, String)
- uid: System.Xml.XmlReader.ReadElementContentAsObject
  parent: System.Xml.XmlReader
  isExternal: false
  name: ReadElementContentAsObject()
  nameWithType: XmlReader.ReadElementContentAsObject()
  fullName: XmlReader.ReadElementContentAsObject()
- uid: System.Xml.XmlReader.ReadElementContentAsObject(System.String,System.String)
  parent: System.Xml.XmlReader
  isExternal: false
  name: ReadElementContentAsObject(String, String)
  nameWithType: XmlReader.ReadElementContentAsObject(String, String)
  fullName: XmlReader.ReadElementContentAsObject(String, String)
- uid: System.Xml.XmlReader.ReadElementContentAsObjectAsync
  parent: System.Xml.XmlReader
  isExternal: false
  name: ReadElementContentAsObjectAsync()
  nameWithType: XmlReader.ReadElementContentAsObjectAsync()
  fullName: XmlReader.ReadElementContentAsObjectAsync()
- uid: System.Xml.XmlReader.ReadElementContentAsString(System.String,System.String)
  parent: System.Xml.XmlReader
  isExternal: false
  name: ReadElementContentAsString(String, String)
  nameWithType: XmlReader.ReadElementContentAsString(String, String)
  fullName: XmlReader.ReadElementContentAsString(String, String)
- uid: System.Xml.XmlReader.ReadElementContentAsString
  parent: System.Xml.XmlReader
  isExternal: false
  name: ReadElementContentAsString()
  nameWithType: XmlReader.ReadElementContentAsString()
  fullName: XmlReader.ReadElementContentAsString()
- uid: System.Xml.XmlReader.ReadElementContentAsStringAsync
  parent: System.Xml.XmlReader
  isExternal: false
  name: ReadElementContentAsStringAsync()
  nameWithType: XmlReader.ReadElementContentAsStringAsync()
  fullName: XmlReader.ReadElementContentAsStringAsync()
- uid: System.Xml.XmlReader.ReadElementString
  parent: System.Xml.XmlReader
  isExternal: false
  name: ReadElementString()
  nameWithType: XmlReader.ReadElementString()
  fullName: XmlReader.ReadElementString()
- uid: System.Xml.XmlReader.ReadElementString(System.String)
  parent: System.Xml.XmlReader
  isExternal: false
  name: ReadElementString(String)
  nameWithType: XmlReader.ReadElementString(String)
  fullName: XmlReader.ReadElementString(String)
- uid: System.Xml.XmlReader.ReadElementString(System.String,System.String)
  parent: System.Xml.XmlReader
  isExternal: false
  name: ReadElementString(String, String)
  nameWithType: XmlReader.ReadElementString(String, String)
  fullName: XmlReader.ReadElementString(String, String)
- uid: System.Xml.XmlReader.ReadEndElement
  parent: System.Xml.XmlReader
  isExternal: false
  name: ReadEndElement()
  nameWithType: XmlReader.ReadEndElement()
  fullName: XmlReader.ReadEndElement()
- uid: System.Xml.XmlReader.ReadInnerXml
  parent: System.Xml.XmlReader
  isExternal: false
  name: ReadInnerXml()
  nameWithType: XmlReader.ReadInnerXml()
  fullName: XmlReader.ReadInnerXml()
- uid: System.Xml.XmlReader.ReadInnerXmlAsync
  parent: System.Xml.XmlReader
  isExternal: false
  name: ReadInnerXmlAsync()
  nameWithType: XmlReader.ReadInnerXmlAsync()
  fullName: XmlReader.ReadInnerXmlAsync()
- uid: System.Xml.XmlReader.ReadOuterXml
  parent: System.Xml.XmlReader
  isExternal: false
  name: ReadOuterXml()
  nameWithType: XmlReader.ReadOuterXml()
  fullName: XmlReader.ReadOuterXml()
- uid: System.Xml.XmlReader.ReadOuterXmlAsync
  parent: System.Xml.XmlReader
  isExternal: false
  name: ReadOuterXmlAsync()
  nameWithType: XmlReader.ReadOuterXmlAsync()
  fullName: XmlReader.ReadOuterXmlAsync()
- uid: System.Xml.XmlReader.ReadStartElement
  parent: System.Xml.XmlReader
  isExternal: false
  name: ReadStartElement()
  nameWithType: XmlReader.ReadStartElement()
  fullName: XmlReader.ReadStartElement()
- uid: System.Xml.XmlReader.ReadStartElement(System.String)
  parent: System.Xml.XmlReader
  isExternal: false
  name: ReadStartElement(String)
  nameWithType: XmlReader.ReadStartElement(String)
  fullName: XmlReader.ReadStartElement(String)
- uid: System.Xml.XmlReader.ReadStartElement(System.String,System.String)
  parent: System.Xml.XmlReader
  isExternal: false
  name: ReadStartElement(String, String)
  nameWithType: XmlReader.ReadStartElement(String, String)
  fullName: XmlReader.ReadStartElement(String, String)
- uid: System.Xml.XmlReader.ReadState
  parent: System.Xml.XmlReader
  isExternal: false
  name: ReadState
  nameWithType: XmlReader.ReadState
  fullName: XmlReader.ReadState
- uid: System.Xml.ReadState
  parent: System.Xml
  isExternal: false
  name: ReadState
  nameWithType: ReadState
  fullName: System.Xml.ReadState
- uid: System.Xml.XmlReader.ReadString
  parent: System.Xml.XmlReader
  isExternal: false
  name: ReadString()
  nameWithType: XmlReader.ReadString()
  fullName: XmlReader.ReadString()
- uid: System.Xml.XmlReader.ReadSubtree
  parent: System.Xml.XmlReader
  isExternal: false
  name: ReadSubtree()
  nameWithType: XmlReader.ReadSubtree()
  fullName: XmlReader.ReadSubtree()
- uid: System.Xml.XmlReader.ReadToDescendant(System.String,System.String)
  parent: System.Xml.XmlReader
  isExternal: false
  name: ReadToDescendant(String, String)
  nameWithType: XmlReader.ReadToDescendant(String, String)
  fullName: XmlReader.ReadToDescendant(String, String)
- uid: System.Xml.XmlReader.ReadToDescendant(System.String)
  parent: System.Xml.XmlReader
  isExternal: false
  name: ReadToDescendant(String)
  nameWithType: XmlReader.ReadToDescendant(String)
  fullName: XmlReader.ReadToDescendant(String)
- uid: System.Xml.XmlReader.ReadToFollowing(System.String)
  parent: System.Xml.XmlReader
  isExternal: false
  name: ReadToFollowing(String)
  nameWithType: XmlReader.ReadToFollowing(String)
  fullName: XmlReader.ReadToFollowing(String)
- uid: System.Xml.XmlReader.ReadToFollowing(System.String,System.String)
  parent: System.Xml.XmlReader
  isExternal: false
  name: ReadToFollowing(String, String)
  nameWithType: XmlReader.ReadToFollowing(String, String)
  fullName: XmlReader.ReadToFollowing(String, String)
- uid: System.Xml.XmlReader.ReadToNextSibling(System.String)
  parent: System.Xml.XmlReader
  isExternal: false
  name: ReadToNextSibling(String)
  nameWithType: XmlReader.ReadToNextSibling(String)
  fullName: XmlReader.ReadToNextSibling(String)
- uid: System.Xml.XmlReader.ReadToNextSibling(System.String,System.String)
  parent: System.Xml.XmlReader
  isExternal: false
  name: ReadToNextSibling(String, String)
  nameWithType: XmlReader.ReadToNextSibling(String, String)
  fullName: XmlReader.ReadToNextSibling(String, String)
- uid: System.Xml.XmlReader.ReadValueChunk(System.Char[],System.Int32,System.Int32)
  parent: System.Xml.XmlReader
  isExternal: false
  name: ReadValueChunk(Char[], Int32, Int32)
  nameWithType: XmlReader.ReadValueChunk(Char[], Int32, Int32)
  fullName: XmlReader.ReadValueChunk(Char[], Int32, Int32)
- uid: System.Char[]
  parent: System
  isExternal: false
  name: Char[]
  nameWithType: Char[]
  fullName: System.Char[]
  spec.csharp:
  - uid: System.Char
    name: Char
    nameWithType: Char
    fullName: System.Char
  - name: '[]'
    nameWithType: '[]'
    fullName: '[]'
- uid: System.Xml.XmlReader.ReadValueChunkAsync(System.Char[],System.Int32,System.Int32)
  parent: System.Xml.XmlReader
  isExternal: false
  name: ReadValueChunkAsync(Char[], Int32, Int32)
  nameWithType: XmlReader.ReadValueChunkAsync(Char[], Int32, Int32)
  fullName: XmlReader.ReadValueChunkAsync(Char[], Int32, Int32)
- uid: System.Xml.XmlReader.ResolveEntity
  parent: System.Xml.XmlReader
  isExternal: false
  name: ResolveEntity()
  nameWithType: XmlReader.ResolveEntity()
  fullName: XmlReader.ResolveEntity()
- uid: System.Xml.XmlReader.SchemaInfo
  parent: System.Xml.XmlReader
  isExternal: false
  name: SchemaInfo
  nameWithType: XmlReader.SchemaInfo
  fullName: XmlReader.SchemaInfo
- uid: System.Xml.Schema.IXmlSchemaInfo
  parent: System.Xml.Schema
  isExternal: false
  name: IXmlSchemaInfo
  nameWithType: IXmlSchemaInfo
  fullName: System.Xml.Schema.IXmlSchemaInfo
- uid: System.Xml.XmlReader.Settings
  parent: System.Xml.XmlReader
  isExternal: false
  name: Settings
  nameWithType: XmlReader.Settings
  fullName: XmlReader.Settings
- uid: System.Xml.XmlReader.Skip
  parent: System.Xml.XmlReader
  isExternal: false
  name: Skip()
  nameWithType: XmlReader.Skip()
  fullName: XmlReader.Skip()
- uid: System.Xml.XmlReader.SkipAsync
  parent: System.Xml.XmlReader
  isExternal: false
  name: SkipAsync()
  nameWithType: XmlReader.SkipAsync()
  fullName: XmlReader.SkipAsync()
- uid: System.Threading.Tasks.Task
  parent: System.Threading.Tasks
  isExternal: false
  name: Task
  nameWithType: Task
  fullName: System.Threading.Tasks.Task
- uid: System.Xml.XmlReader.Value
  parent: System.Xml.XmlReader
  isExternal: false
  name: Value
  nameWithType: XmlReader.Value
  fullName: XmlReader.Value
- uid: System.Xml.XmlReader.ValueType
  parent: System.Xml.XmlReader
  isExternal: false
  name: ValueType
  nameWithType: XmlReader.ValueType
  fullName: XmlReader.ValueType
- uid: System.Xml.XmlReader.XmlLang
  parent: System.Xml.XmlReader
  isExternal: false
  name: XmlLang
  nameWithType: XmlReader.XmlLang
  fullName: XmlReader.XmlLang
- uid: System.Xml.XmlReader.XmlSpace
  parent: System.Xml.XmlReader
  isExternal: false
  name: XmlSpace
  nameWithType: XmlReader.XmlSpace
  fullName: XmlReader.XmlSpace
- uid: System.Xml.XmlSpace
  parent: System.Xml
  isExternal: false
  name: XmlSpace
  nameWithType: XmlSpace
  fullName: System.Xml.XmlSpace
- uid: System.Xml.XmlReader.Create*
  parent: System.Xml.XmlReader
  isExternal: false
  name: Create
  nameWithType: XmlReader.Create
  fullName: XmlReader.Create
  monikers:
  - netcore-2.0
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  - netstandard-2.0
  - xamarinandroid-7.1
  - xamarinios-10.8
  - xamarinmac-3.0
  - netcore-1.0
  - netcore-1.1
  - netstandard-1.0
  - netstandard-1.1
  - netstandard-1.2
  - netstandard-1.3
  - netstandard-1.4
  - netstandard-1.6
  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Xml/XmlReader.xml
- uid: System.Xml.XmlReader.ReadElementString*
  parent: System.Xml.XmlReader
  isExternal: false
  name: ReadElementString
  nameWithType: XmlReader.ReadElementString
  fullName: XmlReader.ReadElementString
  monikers:
  - netcore-2.0
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  - netstandard-2.0
  - xamarinandroid-7.1
  - xamarinios-10.8
  - xamarinmac-3.0
  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Xml/XmlReader.xml
- uid: System.Xml.XmlReader.#ctor*
  parent: System.Xml.XmlReader
  isExternal: false
  name: XmlReader
  nameWithType: XmlReader.XmlReader
  fullName: XmlReader.XmlReader
  monikers:
  - netcore-1.0
  - netcore-1.1
  - netcore-2.0
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  - netstandard-1.0
  - netstandard-1.1
  - netstandard-1.2
  - netstandard-1.3
  - netstandard-1.4
  - netstandard-1.6
  - netstandard-2.0
  - xamarinandroid-7.1
  - xamarinios-10.8
  - xamarinmac-3.0
  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Xml/XmlReader.xml
- uid: System.Xml.XmlReader.AttributeCount*
  parent: System.Xml.XmlReader
  isExternal: false
  name: AttributeCount
  nameWithType: XmlReader.AttributeCount
  fullName: XmlReader.AttributeCount
  monikers:
  - netcore-1.0
  - netcore-1.1
  - netcore-2.0
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  - netstandard-1.0
  - netstandard-1.1
  - netstandard-1.2
  - netstandard-1.3
  - netstandard-1.4
  - netstandard-1.6
  - netstandard-2.0
  - xamarinandroid-7.1
  - xamarinios-10.8
  - xamarinmac-3.0
  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Xml/XmlReader.xml
- uid: System.Xml.XmlReader.BaseURI*
  parent: System.Xml.XmlReader
  isExternal: false
  name: BaseURI
  nameWithType: XmlReader.BaseURI
  fullName: XmlReader.BaseURI
  monikers:
  - netcore-1.0
  - netcore-1.1
  - netcore-2.0
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  - netstandard-1.0
  - netstandard-1.1
  - netstandard-1.2
  - netstandard-1.3
  - netstandard-1.4
  - netstandard-1.6
  - netstandard-2.0
  - xamarinandroid-7.1
  - xamarinios-10.8
  - xamarinmac-3.0
  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Xml/XmlReader.xml
- uid: System.Xml.XmlReader.CanReadBinaryContent*
  parent: System.Xml.XmlReader
  isExternal: false
  name: CanReadBinaryContent
  nameWithType: XmlReader.CanReadBinaryContent
  fullName: XmlReader.CanReadBinaryContent
  monikers:
  - netcore-1.0
  - netcore-1.1
  - netcore-2.0
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  - netstandard-1.0
  - netstandard-1.1
  - netstandard-1.2
  - netstandard-1.3
  - netstandard-1.4
  - netstandard-1.6
  - netstandard-2.0
  - xamarinandroid-7.1
  - xamarinios-10.8
  - xamarinmac-3.0
  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Xml/XmlReader.xml
- uid: System.Xml.XmlReader.CanReadValueChunk*
  parent: System.Xml.XmlReader
  isExternal: false
  name: CanReadValueChunk
  nameWithType: XmlReader.CanReadValueChunk
  fullName: XmlReader.CanReadValueChunk
  monikers:
  - netcore-1.0
  - netcore-1.1
  - netcore-2.0
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  - netstandard-1.0
  - netstandard-1.1
  - netstandard-1.2
  - netstandard-1.3
  - netstandard-1.4
  - netstandard-1.6
  - netstandard-2.0
  - xamarinandroid-7.1
  - xamarinios-10.8
  - xamarinmac-3.0
  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Xml/XmlReader.xml
- uid: System.Xml.XmlReader.CanResolveEntity*
  parent: System.Xml.XmlReader
  isExternal: false
  name: CanResolveEntity
  nameWithType: XmlReader.CanResolveEntity
  fullName: XmlReader.CanResolveEntity
  monikers:
  - netcore-1.0
  - netcore-1.1
  - netcore-2.0
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  - netstandard-1.0
  - netstandard-1.1
  - netstandard-1.2
  - netstandard-1.3
  - netstandard-1.4
  - netstandard-1.6
  - netstandard-2.0
  - xamarinandroid-7.1
  - xamarinios-10.8
  - xamarinmac-3.0
  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Xml/XmlReader.xml
- uid: System.Xml.XmlReader.Close*
  parent: System.Xml.XmlReader
  isExternal: false
  name: Close
  nameWithType: XmlReader.Close
  fullName: XmlReader.Close
  monikers:
  - netcore-2.0
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  - netstandard-2.0
  - xamarinandroid-7.1
  - xamarinios-10.8
  - xamarinmac-3.0
  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Xml/XmlReader.xml
- uid: System.Xml.XmlReader.Depth*
  parent: System.Xml.XmlReader
  isExternal: false
  name: Depth
  nameWithType: XmlReader.Depth
  fullName: XmlReader.Depth
  monikers:
  - netcore-1.0
  - netcore-1.1
  - netcore-2.0
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  - netstandard-1.0
  - netstandard-1.1
  - netstandard-1.2
  - netstandard-1.3
  - netstandard-1.4
  - netstandard-1.6
  - netstandard-2.0
  - xamarinandroid-7.1
  - xamarinios-10.8
  - xamarinmac-3.0
  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Xml/XmlReader.xml
- uid: System.Xml.XmlReader.Dispose*
  parent: System.Xml.XmlReader
  isExternal: false
  name: Dispose
  nameWithType: XmlReader.Dispose
  fullName: XmlReader.Dispose
  monikers:
  - netcore-1.0
  - netcore-1.1
  - netcore-2.0
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  - netstandard-1.0
  - netstandard-1.1
  - netstandard-1.2
  - netstandard-1.3
  - netstandard-1.4
  - netstandard-1.6
  - netstandard-2.0
  - xamarinandroid-7.1
  - xamarinios-10.8
  - xamarinmac-3.0
  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Xml/XmlReader.xml
- uid: System.Xml.XmlReader.EOF*
  parent: System.Xml.XmlReader
  isExternal: false
  name: EOF
  nameWithType: XmlReader.EOF
  fullName: XmlReader.EOF
  monikers:
  - netcore-1.0
  - netcore-1.1
  - netcore-2.0
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  - netstandard-1.0
  - netstandard-1.1
  - netstandard-1.2
  - netstandard-1.3
  - netstandard-1.4
  - netstandard-1.6
  - netstandard-2.0
  - xamarinandroid-7.1
  - xamarinios-10.8
  - xamarinmac-3.0
  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Xml/XmlReader.xml
- uid: System.Xml.XmlReader.GetAttribute*
  parent: System.Xml.XmlReader
  isExternal: false
  name: GetAttribute
  nameWithType: XmlReader.GetAttribute
  fullName: XmlReader.GetAttribute
  monikers:
  - netcore-1.0
  - netcore-1.1
  - netcore-2.0
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  - netstandard-1.0
  - netstandard-1.1
  - netstandard-1.2
  - netstandard-1.3
  - netstandard-1.4
  - netstandard-1.6
  - netstandard-2.0
  - xamarinandroid-7.1
  - xamarinios-10.8
  - xamarinmac-3.0
  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Xml/XmlReader.xml
- uid: System.Xml.XmlReader.GetValueAsync*
  parent: System.Xml.XmlReader
  isExternal: false
  name: GetValueAsync
  nameWithType: XmlReader.GetValueAsync
  fullName: XmlReader.GetValueAsync
  monikers:
  - netcore-1.0
  - netcore-1.1
  - netcore-2.0
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  - netstandard-1.0
  - netstandard-1.1
  - netstandard-1.2
  - netstandard-1.3
  - netstandard-1.4
  - netstandard-1.6
  - netstandard-2.0
  - xamarinandroid-7.1
  - xamarinios-10.8
  - xamarinmac-3.0
  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Xml/XmlReader.xml
- uid: System.Xml.XmlReader.HasAttributes*
  parent: System.Xml.XmlReader
  isExternal: false
  name: HasAttributes
  nameWithType: XmlReader.HasAttributes
  fullName: XmlReader.HasAttributes
  monikers:
  - netcore-1.0
  - netcore-1.1
  - netcore-2.0
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  - netstandard-1.0
  - netstandard-1.1
  - netstandard-1.2
  - netstandard-1.3
  - netstandard-1.4
  - netstandard-1.6
  - netstandard-2.0
  - xamarinandroid-7.1
  - xamarinios-10.8
  - xamarinmac-3.0
  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Xml/XmlReader.xml
- uid: System.Xml.XmlReader.HasValue*
  parent: System.Xml.XmlReader
  isExternal: false
  name: HasValue
  nameWithType: XmlReader.HasValue
  fullName: XmlReader.HasValue
  monikers:
  - netcore-1.0
  - netcore-1.1
  - netcore-2.0
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  - netstandard-1.0
  - netstandard-1.1
  - netstandard-1.2
  - netstandard-1.3
  - netstandard-1.4
  - netstandard-1.6
  - netstandard-2.0
  - xamarinandroid-7.1
  - xamarinios-10.8
  - xamarinmac-3.0
  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Xml/XmlReader.xml
- uid: System.Xml.XmlReader.IsDefault*
  parent: System.Xml.XmlReader
  isExternal: false
  name: IsDefault
  nameWithType: XmlReader.IsDefault
  fullName: XmlReader.IsDefault
  monikers:
  - netcore-1.0
  - netcore-1.1
  - netcore-2.0
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  - netstandard-1.0
  - netstandard-1.1
  - netstandard-1.2
  - netstandard-1.3
  - netstandard-1.4
  - netstandard-1.6
  - netstandard-2.0
  - xamarinandroid-7.1
  - xamarinios-10.8
  - xamarinmac-3.0
  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Xml/XmlReader.xml
- uid: System.Xml.XmlReader.IsEmptyElement*
  parent: System.Xml.XmlReader
  isExternal: false
  name: IsEmptyElement
  nameWithType: XmlReader.IsEmptyElement
  fullName: XmlReader.IsEmptyElement
  monikers:
  - netcore-1.0
  - netcore-1.1
  - netcore-2.0
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  - netstandard-1.0
  - netstandard-1.1
  - netstandard-1.2
  - netstandard-1.3
  - netstandard-1.4
  - netstandard-1.6
  - netstandard-2.0
  - xamarinandroid-7.1
  - xamarinios-10.8
  - xamarinmac-3.0
  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Xml/XmlReader.xml
- uid: System.Xml.XmlReader.IsName*
  parent: System.Xml.XmlReader
  isExternal: false
  name: IsName
  nameWithType: XmlReader.IsName
  fullName: XmlReader.IsName
  monikers:
  - netcore-1.0
  - netcore-1.1
  - netcore-2.0
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  - netstandard-1.0
  - netstandard-1.1
  - netstandard-1.2
  - netstandard-1.3
  - netstandard-1.4
  - netstandard-1.6
  - netstandard-2.0
  - xamarinandroid-7.1
  - xamarinios-10.8
  - xamarinmac-3.0
  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Xml/XmlReader.xml
- uid: System.Xml.XmlReader.IsNameToken*
  parent: System.Xml.XmlReader
  isExternal: false
  name: IsNameToken
  nameWithType: XmlReader.IsNameToken
  fullName: XmlReader.IsNameToken
  monikers:
  - netcore-1.0
  - netcore-1.1
  - netcore-2.0
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  - netstandard-1.0
  - netstandard-1.1
  - netstandard-1.2
  - netstandard-1.3
  - netstandard-1.4
  - netstandard-1.6
  - netstandard-2.0
  - xamarinandroid-7.1
  - xamarinios-10.8
  - xamarinmac-3.0
  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Xml/XmlReader.xml
- uid: System.Xml.XmlReader.IsStartElement*
  parent: System.Xml.XmlReader
  isExternal: false
  name: IsStartElement
  nameWithType: XmlReader.IsStartElement
  fullName: XmlReader.IsStartElement
  monikers:
  - netcore-1.0
  - netcore-1.1
  - netcore-2.0
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  - netstandard-1.0
  - netstandard-1.1
  - netstandard-1.2
  - netstandard-1.3
  - netstandard-1.4
  - netstandard-1.6
  - netstandard-2.0
  - xamarinandroid-7.1
  - xamarinios-10.8
  - xamarinmac-3.0
  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Xml/XmlReader.xml
- uid: System.Xml.XmlReader.Item*
  parent: System.Xml.XmlReader
  isExternal: false
  name: Item
  nameWithType: XmlReader.Item
  fullName: XmlReader.Item
  monikers:
  - netcore-1.0
  - netcore-1.1
  - netcore-2.0
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  - netstandard-1.0
  - netstandard-1.1
  - netstandard-1.2
  - netstandard-1.3
  - netstandard-1.4
  - netstandard-1.6
  - netstandard-2.0
  - xamarinandroid-7.1
  - xamarinios-10.8
  - xamarinmac-3.0
  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Xml/XmlReader.xml
- uid: System.Xml.XmlReader.LocalName*
  parent: System.Xml.XmlReader
  isExternal: false
  name: LocalName
  nameWithType: XmlReader.LocalName
  fullName: XmlReader.LocalName
  monikers:
  - netcore-1.0
  - netcore-1.1
  - netcore-2.0
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  - netstandard-1.0
  - netstandard-1.1
  - netstandard-1.2
  - netstandard-1.3
  - netstandard-1.4
  - netstandard-1.6
  - netstandard-2.0
  - xamarinandroid-7.1
  - xamarinios-10.8
  - xamarinmac-3.0
  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Xml/XmlReader.xml
- uid: System.Xml.XmlReader.LookupNamespace*
  parent: System.Xml.XmlReader
  isExternal: false
  name: LookupNamespace
  nameWithType: XmlReader.LookupNamespace
  fullName: XmlReader.LookupNamespace
  monikers:
  - netcore-1.0
  - netcore-1.1
  - netcore-2.0
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  - netstandard-1.0
  - netstandard-1.1
  - netstandard-1.2
  - netstandard-1.3
  - netstandard-1.4
  - netstandard-1.6
  - netstandard-2.0
  - xamarinandroid-7.1
  - xamarinios-10.8
  - xamarinmac-3.0
  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Xml/XmlReader.xml
- uid: System.Xml.XmlReader.MoveToAttribute*
  parent: System.Xml.XmlReader
  isExternal: false
  name: MoveToAttribute
  nameWithType: XmlReader.MoveToAttribute
  fullName: XmlReader.MoveToAttribute
  monikers:
  - netcore-1.0
  - netcore-1.1
  - netcore-2.0
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  - netstandard-1.0
  - netstandard-1.1
  - netstandard-1.2
  - netstandard-1.3
  - netstandard-1.4
  - netstandard-1.6
  - netstandard-2.0
  - xamarinandroid-7.1
  - xamarinios-10.8
  - xamarinmac-3.0
  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Xml/XmlReader.xml
- uid: System.Xml.XmlReader.MoveToContent*
  parent: System.Xml.XmlReader
  isExternal: false
  name: MoveToContent
  nameWithType: XmlReader.MoveToContent
  fullName: XmlReader.MoveToContent
  monikers:
  - netcore-1.0
  - netcore-1.1
  - netcore-2.0
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  - netstandard-1.0
  - netstandard-1.1
  - netstandard-1.2
  - netstandard-1.3
  - netstandard-1.4
  - netstandard-1.6
  - netstandard-2.0
  - xamarinandroid-7.1
  - xamarinios-10.8
  - xamarinmac-3.0
  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Xml/XmlReader.xml
- uid: System.Xml.XmlReader.MoveToContentAsync*
  parent: System.Xml.XmlReader
  isExternal: false
  name: MoveToContentAsync
  nameWithType: XmlReader.MoveToContentAsync
  fullName: XmlReader.MoveToContentAsync
  monikers:
  - netcore-1.0
  - netcore-1.1
  - netcore-2.0
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  - netstandard-1.0
  - netstandard-1.1
  - netstandard-1.2
  - netstandard-1.3
  - netstandard-1.4
  - netstandard-1.6
  - netstandard-2.0
  - xamarinandroid-7.1
  - xamarinios-10.8
  - xamarinmac-3.0
  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Xml/XmlReader.xml
- uid: System.Xml.XmlReader.MoveToElement*
  parent: System.Xml.XmlReader
  isExternal: false
  name: MoveToElement
  nameWithType: XmlReader.MoveToElement
  fullName: XmlReader.MoveToElement
  monikers:
  - netcore-1.0
  - netcore-1.1
  - netcore-2.0
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  - netstandard-1.0
  - netstandard-1.1
  - netstandard-1.2
  - netstandard-1.3
  - netstandard-1.4
  - netstandard-1.6
  - netstandard-2.0
  - xamarinandroid-7.1
  - xamarinios-10.8
  - xamarinmac-3.0
  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Xml/XmlReader.xml
- uid: System.Xml.XmlReader.MoveToFirstAttribute*
  parent: System.Xml.XmlReader
  isExternal: false
  name: MoveToFirstAttribute
  nameWithType: XmlReader.MoveToFirstAttribute
  fullName: XmlReader.MoveToFirstAttribute
  monikers:
  - netcore-1.0
  - netcore-1.1
  - netcore-2.0
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  - netstandard-1.0
  - netstandard-1.1
  - netstandard-1.2
  - netstandard-1.3
  - netstandard-1.4
  - netstandard-1.6
  - netstandard-2.0
  - xamarinandroid-7.1
  - xamarinios-10.8
  - xamarinmac-3.0
  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Xml/XmlReader.xml
- uid: System.Xml.XmlReader.MoveToNextAttribute*
  parent: System.Xml.XmlReader
  isExternal: false
  name: MoveToNextAttribute
  nameWithType: XmlReader.MoveToNextAttribute
  fullName: XmlReader.MoveToNextAttribute
  monikers:
  - netcore-1.0
  - netcore-1.1
  - netcore-2.0
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  - netstandard-1.0
  - netstandard-1.1
  - netstandard-1.2
  - netstandard-1.3
  - netstandard-1.4
  - netstandard-1.6
  - netstandard-2.0
  - xamarinandroid-7.1
  - xamarinios-10.8
  - xamarinmac-3.0
  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Xml/XmlReader.xml
- uid: System.Xml.XmlReader.Name*
  parent: System.Xml.XmlReader
  isExternal: false
  name: Name
  nameWithType: XmlReader.Name
  fullName: XmlReader.Name
  monikers:
  - netcore-1.0
  - netcore-1.1
  - netcore-2.0
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  - netstandard-1.0
  - netstandard-1.1
  - netstandard-1.2
  - netstandard-1.3
  - netstandard-1.4
  - netstandard-1.6
  - netstandard-2.0
  - xamarinandroid-7.1
  - xamarinios-10.8
  - xamarinmac-3.0
  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Xml/XmlReader.xml
- uid: System.Xml.XmlReader.NamespaceURI*
  parent: System.Xml.XmlReader
  isExternal: false
  name: NamespaceURI
  nameWithType: XmlReader.NamespaceURI
  fullName: XmlReader.NamespaceURI
  monikers:
  - netcore-1.0
  - netcore-1.1
  - netcore-2.0
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  - netstandard-1.0
  - netstandard-1.1
  - netstandard-1.2
  - netstandard-1.3
  - netstandard-1.4
  - netstandard-1.6
  - netstandard-2.0
  - xamarinandroid-7.1
  - xamarinios-10.8
  - xamarinmac-3.0
  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Xml/XmlReader.xml
- uid: System.Xml.XmlReader.NameTable*
  parent: System.Xml.XmlReader
  isExternal: false
  name: NameTable
  nameWithType: XmlReader.NameTable
  fullName: XmlReader.NameTable
  monikers:
  - netcore-1.0
  - netcore-1.1
  - netcore-2.0
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  - netstandard-1.0
  - netstandard-1.1
  - netstandard-1.2
  - netstandard-1.3
  - netstandard-1.4
  - netstandard-1.6
  - netstandard-2.0
  - xamarinandroid-7.1
  - xamarinios-10.8
  - xamarinmac-3.0
  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Xml/XmlReader.xml
- uid: System.Xml.XmlReader.NodeType*
  parent: System.Xml.XmlReader
  isExternal: false
  name: NodeType
  nameWithType: XmlReader.NodeType
  fullName: XmlReader.NodeType
  monikers:
  - netcore-1.0
  - netcore-1.1
  - netcore-2.0
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  - netstandard-1.0
  - netstandard-1.1
  - netstandard-1.2
  - netstandard-1.3
  - netstandard-1.4
  - netstandard-1.6
  - netstandard-2.0
  - xamarinandroid-7.1
  - xamarinios-10.8
  - xamarinmac-3.0
  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Xml/XmlReader.xml
- uid: System.Xml.XmlReader.Prefix*
  parent: System.Xml.XmlReader
  isExternal: false
  name: Prefix
  nameWithType: XmlReader.Prefix
  fullName: XmlReader.Prefix
  monikers:
  - netcore-1.0
  - netcore-1.1
  - netcore-2.0
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  - netstandard-1.0
  - netstandard-1.1
  - netstandard-1.2
  - netstandard-1.3
  - netstandard-1.4
  - netstandard-1.6
  - netstandard-2.0
  - xamarinandroid-7.1
  - xamarinios-10.8
  - xamarinmac-3.0
  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Xml/XmlReader.xml
- uid: System.Xml.XmlReader.QuoteChar*
  parent: System.Xml.XmlReader
  isExternal: false
  name: QuoteChar
  nameWithType: XmlReader.QuoteChar
  fullName: XmlReader.QuoteChar
  monikers:
  - netcore-2.0
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  - netstandard-2.0
  - xamarinandroid-7.1
  - xamarinios-10.8
  - xamarinmac-3.0
  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Xml/XmlReader.xml
- uid: System.Xml.XmlReader.Read*
  parent: System.Xml.XmlReader
  isExternal: false
  name: Read
  nameWithType: XmlReader.Read
  fullName: XmlReader.Read
  monikers:
  - netcore-1.0
  - netcore-1.1
  - netcore-2.0
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  - netstandard-1.0
  - netstandard-1.1
  - netstandard-1.2
  - netstandard-1.3
  - netstandard-1.4
  - netstandard-1.6
  - netstandard-2.0
  - xamarinandroid-7.1
  - xamarinios-10.8
  - xamarinmac-3.0
  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Xml/XmlReader.xml
- uid: System.Xml.XmlReader.ReadAsync*
  parent: System.Xml.XmlReader
  isExternal: false
  name: ReadAsync
  nameWithType: XmlReader.ReadAsync
  fullName: XmlReader.ReadAsync
  monikers:
  - netcore-1.0
  - netcore-1.1
  - netcore-2.0
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  - netstandard-1.0
  - netstandard-1.1
  - netstandard-1.2
  - netstandard-1.3
  - netstandard-1.4
  - netstandard-1.6
  - netstandard-2.0
  - xamarinandroid-7.1
  - xamarinios-10.8
  - xamarinmac-3.0
  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Xml/XmlReader.xml
- uid: System.Xml.XmlReader.ReadAttributeValue*
  parent: System.Xml.XmlReader
  isExternal: false
  name: ReadAttributeValue
  nameWithType: XmlReader.ReadAttributeValue
  fullName: XmlReader.ReadAttributeValue
  monikers:
  - netcore-1.0
  - netcore-1.1
  - netcore-2.0
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  - netstandard-1.0
  - netstandard-1.1
  - netstandard-1.2
  - netstandard-1.3
  - netstandard-1.4
  - netstandard-1.6
  - netstandard-2.0
  - xamarinandroid-7.1
  - xamarinios-10.8
  - xamarinmac-3.0
  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Xml/XmlReader.xml
- uid: System.Xml.XmlReader.ReadContentAs*
  parent: System.Xml.XmlReader
  isExternal: false
  name: ReadContentAs
  nameWithType: XmlReader.ReadContentAs
  fullName: XmlReader.ReadContentAs
  monikers:
  - netcore-1.0
  - netcore-1.1
  - netcore-2.0
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  - netstandard-1.0
  - netstandard-1.1
  - netstandard-1.2
  - netstandard-1.3
  - netstandard-1.4
  - netstandard-1.6
  - netstandard-2.0
  - xamarinandroid-7.1
  - xamarinios-10.8
  - xamarinmac-3.0
  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Xml/XmlReader.xml
- uid: System.Xml.XmlReader.ReadContentAsAsync*
  parent: System.Xml.XmlReader
  isExternal: false
  name: ReadContentAsAsync
  nameWithType: XmlReader.ReadContentAsAsync
  fullName: XmlReader.ReadContentAsAsync
  monikers:
  - netcore-1.0
  - netcore-1.1
  - netcore-2.0
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  - netstandard-1.0
  - netstandard-1.1
  - netstandard-1.2
  - netstandard-1.3
  - netstandard-1.4
  - netstandard-1.6
  - netstandard-2.0
  - xamarinandroid-7.1
  - xamarinios-10.8
  - xamarinmac-3.0
  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Xml/XmlReader.xml
- uid: System.Xml.XmlReader.ReadContentAsBase64*
  parent: System.Xml.XmlReader
  isExternal: false
  name: ReadContentAsBase64
  nameWithType: XmlReader.ReadContentAsBase64
  fullName: XmlReader.ReadContentAsBase64
  monikers:
  - netcore-1.0
  - netcore-1.1
  - netcore-2.0
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  - netstandard-1.0
  - netstandard-1.1
  - netstandard-1.2
  - netstandard-1.3
  - netstandard-1.4
  - netstandard-1.6
  - netstandard-2.0
  - xamarinandroid-7.1
  - xamarinios-10.8
  - xamarinmac-3.0
  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Xml/XmlReader.xml
- uid: System.Xml.XmlReader.ReadContentAsBase64Async*
  parent: System.Xml.XmlReader
  isExternal: false
  name: ReadContentAsBase64Async
  nameWithType: XmlReader.ReadContentAsBase64Async
  fullName: XmlReader.ReadContentAsBase64Async
  monikers:
  - netcore-1.0
  - netcore-1.1
  - netcore-2.0
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  - netstandard-1.0
  - netstandard-1.1
  - netstandard-1.2
  - netstandard-1.3
  - netstandard-1.4
  - netstandard-1.6
  - netstandard-2.0
  - xamarinandroid-7.1
  - xamarinios-10.8
  - xamarinmac-3.0
  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Xml/XmlReader.xml
- uid: System.Xml.XmlReader.ReadContentAsBinHex*
  parent: System.Xml.XmlReader
  isExternal: false
  name: ReadContentAsBinHex
  nameWithType: XmlReader.ReadContentAsBinHex
  fullName: XmlReader.ReadContentAsBinHex
  monikers:
  - netcore-1.0
  - netcore-1.1
  - netcore-2.0
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  - netstandard-1.0
  - netstandard-1.1
  - netstandard-1.2
  - netstandard-1.3
  - netstandard-1.4
  - netstandard-1.6
  - netstandard-2.0
  - xamarinandroid-7.1
  - xamarinios-10.8
  - xamarinmac-3.0
  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Xml/XmlReader.xml
- uid: System.Xml.XmlReader.ReadContentAsBinHexAsync*
  parent: System.Xml.XmlReader
  isExternal: false
  name: ReadContentAsBinHexAsync
  nameWithType: XmlReader.ReadContentAsBinHexAsync
  fullName: XmlReader.ReadContentAsBinHexAsync
  monikers:
  - netcore-1.0
  - netcore-1.1
  - netcore-2.0
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  - netstandard-1.0
  - netstandard-1.1
  - netstandard-1.2
  - netstandard-1.3
  - netstandard-1.4
  - netstandard-1.6
  - netstandard-2.0
  - xamarinandroid-7.1
  - xamarinios-10.8
  - xamarinmac-3.0
  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Xml/XmlReader.xml
- uid: System.Xml.XmlReader.ReadContentAsBoolean*
  parent: System.Xml.XmlReader
  isExternal: false
  name: ReadContentAsBoolean
  nameWithType: XmlReader.ReadContentAsBoolean
  fullName: XmlReader.ReadContentAsBoolean
  monikers:
  - netcore-1.0
  - netcore-1.1
  - netcore-2.0
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  - netstandard-1.0
  - netstandard-1.1
  - netstandard-1.2
  - netstandard-1.3
  - netstandard-1.4
  - netstandard-1.6
  - netstandard-2.0
  - xamarinandroid-7.1
  - xamarinios-10.8
  - xamarinmac-3.0
  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Xml/XmlReader.xml
- uid: System.Xml.XmlReader.ReadContentAsDateTime*
  parent: System.Xml.XmlReader
  isExternal: false
  name: ReadContentAsDateTime
  nameWithType: XmlReader.ReadContentAsDateTime
  fullName: XmlReader.ReadContentAsDateTime
  monikers:
  - netcore-2.0
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  - netstandard-2.0
  - xamarinandroid-7.1
  - xamarinios-10.8
  - xamarinmac-3.0
  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Xml/XmlReader.xml
- uid: System.Xml.XmlReader.ReadContentAsDateTimeOffset*
  parent: System.Xml.XmlReader
  isExternal: false
  name: ReadContentAsDateTimeOffset
  nameWithType: XmlReader.ReadContentAsDateTimeOffset
  fullName: XmlReader.ReadContentAsDateTimeOffset
  monikers:
  - netcore-1.0
  - netcore-1.1
  - netcore-2.0
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  - netstandard-1.0
  - netstandard-1.1
  - netstandard-1.2
  - netstandard-1.3
  - netstandard-1.4
  - netstandard-1.6
  - netstandard-2.0
  - xamarinandroid-7.1
  - xamarinios-10.8
  - xamarinmac-3.0
  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Xml/XmlReader.xml
- uid: System.Xml.XmlReader.ReadContentAsDecimal*
  parent: System.Xml.XmlReader
  isExternal: false
  name: ReadContentAsDecimal
  nameWithType: XmlReader.ReadContentAsDecimal
  fullName: XmlReader.ReadContentAsDecimal
  monikers:
  - netcore-1.0
  - netcore-1.1
  - netcore-2.0
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  - netstandard-1.0
  - netstandard-1.1
  - netstandard-1.2
  - netstandard-1.3
  - netstandard-1.4
  - netstandard-1.6
  - netstandard-2.0
  - xamarinandroid-7.1
  - xamarinios-10.8
  - xamarinmac-3.0
  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Xml/XmlReader.xml
- uid: System.Xml.XmlReader.ReadContentAsDouble*
  parent: System.Xml.XmlReader
  isExternal: false
  name: ReadContentAsDouble
  nameWithType: XmlReader.ReadContentAsDouble
  fullName: XmlReader.ReadContentAsDouble
  monikers:
  - netcore-1.0
  - netcore-1.1
  - netcore-2.0
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  - netstandard-1.0
  - netstandard-1.1
  - netstandard-1.2
  - netstandard-1.3
  - netstandard-1.4
  - netstandard-1.6
  - netstandard-2.0
  - xamarinandroid-7.1
  - xamarinios-10.8
  - xamarinmac-3.0
  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Xml/XmlReader.xml
- uid: System.Xml.XmlReader.ReadContentAsFloat*
  parent: System.Xml.XmlReader
  isExternal: false
  name: ReadContentAsFloat
  nameWithType: XmlReader.ReadContentAsFloat
  fullName: XmlReader.ReadContentAsFloat
  monikers:
  - netcore-1.0
  - netcore-1.1
  - netcore-2.0
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  - netstandard-1.0
  - netstandard-1.1
  - netstandard-1.2
  - netstandard-1.3
  - netstandard-1.4
  - netstandard-1.6
  - netstandard-2.0
  - xamarinandroid-7.1
  - xamarinios-10.8
  - xamarinmac-3.0
  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Xml/XmlReader.xml
- uid: System.Xml.XmlReader.ReadContentAsInt*
  parent: System.Xml.XmlReader
  isExternal: false
  name: ReadContentAsInt
  nameWithType: XmlReader.ReadContentAsInt
  fullName: XmlReader.ReadContentAsInt
  monikers:
  - netcore-1.0
  - netcore-1.1
  - netcore-2.0
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  - netstandard-1.0
  - netstandard-1.1
  - netstandard-1.2
  - netstandard-1.3
  - netstandard-1.4
  - netstandard-1.6
  - netstandard-2.0
  - xamarinandroid-7.1
  - xamarinios-10.8
  - xamarinmac-3.0
  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Xml/XmlReader.xml
- uid: System.Xml.XmlReader.ReadContentAsLong*
  parent: System.Xml.XmlReader
  isExternal: false
  name: ReadContentAsLong
  nameWithType: XmlReader.ReadContentAsLong
  fullName: XmlReader.ReadContentAsLong
  monikers:
  - netcore-1.0
  - netcore-1.1
  - netcore-2.0
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  - netstandard-1.0
  - netstandard-1.1
  - netstandard-1.2
  - netstandard-1.3
  - netstandard-1.4
  - netstandard-1.6
  - netstandard-2.0
  - xamarinandroid-7.1
  - xamarinios-10.8
  - xamarinmac-3.0
  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Xml/XmlReader.xml
- uid: System.Xml.XmlReader.ReadContentAsObject*
  parent: System.Xml.XmlReader
  isExternal: false
  name: ReadContentAsObject
  nameWithType: XmlReader.ReadContentAsObject
  fullName: XmlReader.ReadContentAsObject
  monikers:
  - netcore-1.0
  - netcore-1.1
  - netcore-2.0
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  - netstandard-1.0
  - netstandard-1.1
  - netstandard-1.2
  - netstandard-1.3
  - netstandard-1.4
  - netstandard-1.6
  - netstandard-2.0
  - xamarinandroid-7.1
  - xamarinios-10.8
  - xamarinmac-3.0
  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Xml/XmlReader.xml
- uid: System.Xml.XmlReader.ReadContentAsObjectAsync*
  parent: System.Xml.XmlReader
  isExternal: false
  name: ReadContentAsObjectAsync
  nameWithType: XmlReader.ReadContentAsObjectAsync
  fullName: XmlReader.ReadContentAsObjectAsync
  monikers:
  - netcore-1.0
  - netcore-1.1
  - netcore-2.0
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  - netstandard-1.0
  - netstandard-1.1
  - netstandard-1.2
  - netstandard-1.3
  - netstandard-1.4
  - netstandard-1.6
  - netstandard-2.0
  - xamarinandroid-7.1
  - xamarinios-10.8
  - xamarinmac-3.0
  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Xml/XmlReader.xml
- uid: System.Xml.XmlReader.ReadContentAsString*
  parent: System.Xml.XmlReader
  isExternal: false
  name: ReadContentAsString
  nameWithType: XmlReader.ReadContentAsString
  fullName: XmlReader.ReadContentAsString
  monikers:
  - netcore-1.0
  - netcore-1.1
  - netcore-2.0
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  - netstandard-1.0
  - netstandard-1.1
  - netstandard-1.2
  - netstandard-1.3
  - netstandard-1.4
  - netstandard-1.6
  - netstandard-2.0
  - xamarinandroid-7.1
  - xamarinios-10.8
  - xamarinmac-3.0
  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Xml/XmlReader.xml
- uid: System.Xml.XmlReader.ReadContentAsStringAsync*
  parent: System.Xml.XmlReader
  isExternal: false
  name: ReadContentAsStringAsync
  nameWithType: XmlReader.ReadContentAsStringAsync
  fullName: XmlReader.ReadContentAsStringAsync
  monikers:
  - netcore-1.0
  - netcore-1.1
  - netcore-2.0
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  - netstandard-1.0
  - netstandard-1.1
  - netstandard-1.2
  - netstandard-1.3
  - netstandard-1.4
  - netstandard-1.6
  - netstandard-2.0
  - xamarinandroid-7.1
  - xamarinios-10.8
  - xamarinmac-3.0
  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Xml/XmlReader.xml
- uid: System.Xml.XmlReader.ReadElementContentAs*
  parent: System.Xml.XmlReader
  isExternal: false
  name: ReadElementContentAs
  nameWithType: XmlReader.ReadElementContentAs
  fullName: XmlReader.ReadElementContentAs
  monikers:
  - netcore-1.0
  - netcore-1.1
  - netcore-2.0
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  - netstandard-1.0
  - netstandard-1.1
  - netstandard-1.2
  - netstandard-1.3
  - netstandard-1.4
  - netstandard-1.6
  - netstandard-2.0
  - xamarinandroid-7.1
  - xamarinios-10.8
  - xamarinmac-3.0
  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Xml/XmlReader.xml
- uid: System.Xml.XmlReader.ReadElementContentAsAsync*
  parent: System.Xml.XmlReader
  isExternal: false
  name: ReadElementContentAsAsync
  nameWithType: XmlReader.ReadElementContentAsAsync
  fullName: XmlReader.ReadElementContentAsAsync
  monikers:
  - netcore-1.0
  - netcore-1.1
  - netcore-2.0
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  - netstandard-1.0
  - netstandard-1.1
  - netstandard-1.2
  - netstandard-1.3
  - netstandard-1.4
  - netstandard-1.6
  - netstandard-2.0
  - xamarinandroid-7.1
  - xamarinios-10.8
  - xamarinmac-3.0
  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Xml/XmlReader.xml
- uid: System.Xml.XmlReader.ReadElementContentAsBase64*
  parent: System.Xml.XmlReader
  isExternal: false
  name: ReadElementContentAsBase64
  nameWithType: XmlReader.ReadElementContentAsBase64
  fullName: XmlReader.ReadElementContentAsBase64
  monikers:
  - netcore-1.0
  - netcore-1.1
  - netcore-2.0
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  - netstandard-1.0
  - netstandard-1.1
  - netstandard-1.2
  - netstandard-1.3
  - netstandard-1.4
  - netstandard-1.6
  - netstandard-2.0
  - xamarinandroid-7.1
  - xamarinios-10.8
  - xamarinmac-3.0
  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Xml/XmlReader.xml
- uid: System.Xml.XmlReader.ReadElementContentAsBase64Async*
  parent: System.Xml.XmlReader
  isExternal: false
  name: ReadElementContentAsBase64Async
  nameWithType: XmlReader.ReadElementContentAsBase64Async
  fullName: XmlReader.ReadElementContentAsBase64Async
  monikers:
  - netcore-1.0
  - netcore-1.1
  - netcore-2.0
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  - netstandard-1.0
  - netstandard-1.1
  - netstandard-1.2
  - netstandard-1.3
  - netstandard-1.4
  - netstandard-1.6
  - netstandard-2.0
  - xamarinandroid-7.1
  - xamarinios-10.8
  - xamarinmac-3.0
  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Xml/XmlReader.xml
- uid: System.Xml.XmlReader.ReadElementContentAsBinHex*
  parent: System.Xml.XmlReader
  isExternal: false
  name: ReadElementContentAsBinHex
  nameWithType: XmlReader.ReadElementContentAsBinHex
  fullName: XmlReader.ReadElementContentAsBinHex
  monikers:
  - netcore-1.0
  - netcore-1.1
  - netcore-2.0
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  - netstandard-1.0
  - netstandard-1.1
  - netstandard-1.2
  - netstandard-1.3
  - netstandard-1.4
  - netstandard-1.6
  - netstandard-2.0
  - xamarinandroid-7.1
  - xamarinios-10.8
  - xamarinmac-3.0
  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Xml/XmlReader.xml
- uid: System.Xml.XmlReader.ReadElementContentAsBinHexAsync*
  parent: System.Xml.XmlReader
  isExternal: false
  name: ReadElementContentAsBinHexAsync
  nameWithType: XmlReader.ReadElementContentAsBinHexAsync
  fullName: XmlReader.ReadElementContentAsBinHexAsync
  monikers:
  - netcore-1.0
  - netcore-1.1
  - netcore-2.0
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  - netstandard-1.0
  - netstandard-1.1
  - netstandard-1.2
  - netstandard-1.3
  - netstandard-1.4
  - netstandard-1.6
  - netstandard-2.0
  - xamarinandroid-7.1
  - xamarinios-10.8
  - xamarinmac-3.0
  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Xml/XmlReader.xml
- uid: System.Xml.XmlReader.ReadElementContentAsBoolean*
  parent: System.Xml.XmlReader
  isExternal: false
  name: ReadElementContentAsBoolean
  nameWithType: XmlReader.ReadElementContentAsBoolean
  fullName: XmlReader.ReadElementContentAsBoolean
  monikers:
  - netcore-1.0
  - netcore-1.1
  - netcore-2.0
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  - netstandard-1.0
  - netstandard-1.1
  - netstandard-1.2
  - netstandard-1.3
  - netstandard-1.4
  - netstandard-1.6
  - netstandard-2.0
  - xamarinandroid-7.1
  - xamarinios-10.8
  - xamarinmac-3.0
  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Xml/XmlReader.xml
- uid: System.Xml.XmlReader.ReadElementContentAsDateTime*
  parent: System.Xml.XmlReader
  isExternal: false
  name: ReadElementContentAsDateTime
  nameWithType: XmlReader.ReadElementContentAsDateTime
  fullName: XmlReader.ReadElementContentAsDateTime
  monikers:
  - netcore-2.0
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  - netstandard-2.0
  - xamarinandroid-7.1
  - xamarinios-10.8
  - xamarinmac-3.0
  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Xml/XmlReader.xml
- uid: System.Xml.XmlReader.ReadElementContentAsDecimal*
  parent: System.Xml.XmlReader
  isExternal: false
  name: ReadElementContentAsDecimal
  nameWithType: XmlReader.ReadElementContentAsDecimal
  fullName: XmlReader.ReadElementContentAsDecimal
  monikers:
  - netcore-1.0
  - netcore-1.1
  - netcore-2.0
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  - netstandard-1.0
  - netstandard-1.1
  - netstandard-1.2
  - netstandard-1.3
  - netstandard-1.4
  - netstandard-1.6
  - netstandard-2.0
  - xamarinandroid-7.1
  - xamarinios-10.8
  - xamarinmac-3.0
  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Xml/XmlReader.xml
- uid: System.Xml.XmlReader.ReadElementContentAsDouble*
  parent: System.Xml.XmlReader
  isExternal: false
  name: ReadElementContentAsDouble
  nameWithType: XmlReader.ReadElementContentAsDouble
  fullName: XmlReader.ReadElementContentAsDouble
  monikers:
  - netcore-1.0
  - netcore-1.1
  - netcore-2.0
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  - netstandard-1.0
  - netstandard-1.1
  - netstandard-1.2
  - netstandard-1.3
  - netstandard-1.4
  - netstandard-1.6
  - netstandard-2.0
  - xamarinandroid-7.1
  - xamarinios-10.8
  - xamarinmac-3.0
  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Xml/XmlReader.xml
- uid: System.Xml.XmlReader.ReadElementContentAsFloat*
  parent: System.Xml.XmlReader
  isExternal: false
  name: ReadElementContentAsFloat
  nameWithType: XmlReader.ReadElementContentAsFloat
  fullName: XmlReader.ReadElementContentAsFloat
  monikers:
  - netcore-1.0
  - netcore-1.1
  - netcore-2.0
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  - netstandard-1.0
  - netstandard-1.1
  - netstandard-1.2
  - netstandard-1.3
  - netstandard-1.4
  - netstandard-1.6
  - netstandard-2.0
  - xamarinandroid-7.1
  - xamarinios-10.8
  - xamarinmac-3.0
  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Xml/XmlReader.xml
- uid: System.Xml.XmlReader.ReadElementContentAsInt*
  parent: System.Xml.XmlReader
  isExternal: false
  name: ReadElementContentAsInt
  nameWithType: XmlReader.ReadElementContentAsInt
  fullName: XmlReader.ReadElementContentAsInt
  monikers:
  - netcore-1.0
  - netcore-1.1
  - netcore-2.0
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  - netstandard-1.0
  - netstandard-1.1
  - netstandard-1.2
  - netstandard-1.3
  - netstandard-1.4
  - netstandard-1.6
  - netstandard-2.0
  - xamarinandroid-7.1
  - xamarinios-10.8
  - xamarinmac-3.0
  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Xml/XmlReader.xml
- uid: System.Xml.XmlReader.ReadElementContentAsLong*
  parent: System.Xml.XmlReader
  isExternal: false
  name: ReadElementContentAsLong
  nameWithType: XmlReader.ReadElementContentAsLong
  fullName: XmlReader.ReadElementContentAsLong
  monikers:
  - netcore-1.0
  - netcore-1.1
  - netcore-2.0
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  - netstandard-1.0
  - netstandard-1.1
  - netstandard-1.2
  - netstandard-1.3
  - netstandard-1.4
  - netstandard-1.6
  - netstandard-2.0
  - xamarinandroid-7.1
  - xamarinios-10.8
  - xamarinmac-3.0
  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Xml/XmlReader.xml
- uid: System.Xml.XmlReader.ReadElementContentAsObject*
  parent: System.Xml.XmlReader
  isExternal: false
  name: ReadElementContentAsObject
  nameWithType: XmlReader.ReadElementContentAsObject
  fullName: XmlReader.ReadElementContentAsObject
  monikers:
  - netcore-1.0
  - netcore-1.1
  - netcore-2.0
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  - netstandard-1.0
  - netstandard-1.1
  - netstandard-1.2
  - netstandard-1.3
  - netstandard-1.4
  - netstandard-1.6
  - netstandard-2.0
  - xamarinandroid-7.1
  - xamarinios-10.8
  - xamarinmac-3.0
  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Xml/XmlReader.xml
- uid: System.Xml.XmlReader.ReadElementContentAsObjectAsync*
  parent: System.Xml.XmlReader
  isExternal: false
  name: ReadElementContentAsObjectAsync
  nameWithType: XmlReader.ReadElementContentAsObjectAsync
  fullName: XmlReader.ReadElementContentAsObjectAsync
  monikers:
  - netcore-1.0
  - netcore-1.1
  - netcore-2.0
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  - netstandard-1.0
  - netstandard-1.1
  - netstandard-1.2
  - netstandard-1.3
  - netstandard-1.4
  - netstandard-1.6
  - netstandard-2.0
  - xamarinandroid-7.1
  - xamarinios-10.8
  - xamarinmac-3.0
  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Xml/XmlReader.xml
- uid: System.Xml.XmlReader.ReadElementContentAsString*
  parent: System.Xml.XmlReader
  isExternal: false
  name: ReadElementContentAsString
  nameWithType: XmlReader.ReadElementContentAsString
  fullName: XmlReader.ReadElementContentAsString
  monikers:
  - netcore-1.0
  - netcore-1.1
  - netcore-2.0
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  - netstandard-1.0
  - netstandard-1.1
  - netstandard-1.2
  - netstandard-1.3
  - netstandard-1.4
  - netstandard-1.6
  - netstandard-2.0
  - xamarinandroid-7.1
  - xamarinios-10.8
  - xamarinmac-3.0
  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Xml/XmlReader.xml
- uid: System.Xml.XmlReader.ReadElementContentAsStringAsync*
  parent: System.Xml.XmlReader
  isExternal: false
  name: ReadElementContentAsStringAsync
  nameWithType: XmlReader.ReadElementContentAsStringAsync
  fullName: XmlReader.ReadElementContentAsStringAsync
  monikers:
  - netcore-1.0
  - netcore-1.1
  - netcore-2.0
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  - netstandard-1.0
  - netstandard-1.1
  - netstandard-1.2
  - netstandard-1.3
  - netstandard-1.4
  - netstandard-1.6
  - netstandard-2.0
  - xamarinandroid-7.1
  - xamarinios-10.8
  - xamarinmac-3.0
  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Xml/XmlReader.xml
- uid: System.Xml.XmlReader.ReadEndElement*
  parent: System.Xml.XmlReader
  isExternal: false
  name: ReadEndElement
  nameWithType: XmlReader.ReadEndElement
  fullName: XmlReader.ReadEndElement
  monikers:
  - netcore-1.0
  - netcore-1.1
  - netcore-2.0
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  - netstandard-1.0
  - netstandard-1.1
  - netstandard-1.2
  - netstandard-1.3
  - netstandard-1.4
  - netstandard-1.6
  - netstandard-2.0
  - xamarinandroid-7.1
  - xamarinios-10.8
  - xamarinmac-3.0
  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Xml/XmlReader.xml
- uid: System.Xml.XmlReader.ReadInnerXml*
  parent: System.Xml.XmlReader
  isExternal: false
  name: ReadInnerXml
  nameWithType: XmlReader.ReadInnerXml
  fullName: XmlReader.ReadInnerXml
  monikers:
  - netcore-1.0
  - netcore-1.1
  - netcore-2.0
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  - netstandard-1.0
  - netstandard-1.1
  - netstandard-1.2
  - netstandard-1.3
  - netstandard-1.4
  - netstandard-1.6
  - netstandard-2.0
  - xamarinandroid-7.1
  - xamarinios-10.8
  - xamarinmac-3.0
  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Xml/XmlReader.xml
- uid: System.Xml.XmlReader.ReadInnerXmlAsync*
  parent: System.Xml.XmlReader
  isExternal: false
  name: ReadInnerXmlAsync
  nameWithType: XmlReader.ReadInnerXmlAsync
  fullName: XmlReader.ReadInnerXmlAsync
  monikers:
  - netcore-1.0
  - netcore-1.1
  - netcore-2.0
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  - netstandard-1.0
  - netstandard-1.1
  - netstandard-1.2
  - netstandard-1.3
  - netstandard-1.4
  - netstandard-1.6
  - netstandard-2.0
  - xamarinandroid-7.1
  - xamarinios-10.8
  - xamarinmac-3.0
  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Xml/XmlReader.xml
- uid: System.Xml.XmlReader.ReadOuterXml*
  parent: System.Xml.XmlReader
  isExternal: false
  name: ReadOuterXml
  nameWithType: XmlReader.ReadOuterXml
  fullName: XmlReader.ReadOuterXml
  monikers:
  - netcore-1.0
  - netcore-1.1
  - netcore-2.0
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  - netstandard-1.0
  - netstandard-1.1
  - netstandard-1.2
  - netstandard-1.3
  - netstandard-1.4
  - netstandard-1.6
  - netstandard-2.0
  - xamarinandroid-7.1
  - xamarinios-10.8
  - xamarinmac-3.0
  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Xml/XmlReader.xml
- uid: System.Xml.XmlReader.ReadOuterXmlAsync*
  parent: System.Xml.XmlReader
  isExternal: false
  name: ReadOuterXmlAsync
  nameWithType: XmlReader.ReadOuterXmlAsync
  fullName: XmlReader.ReadOuterXmlAsync
  monikers:
  - netcore-1.0
  - netcore-1.1
  - netcore-2.0
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  - netstandard-1.0
  - netstandard-1.1
  - netstandard-1.2
  - netstandard-1.3
  - netstandard-1.4
  - netstandard-1.6
  - netstandard-2.0
  - xamarinandroid-7.1
  - xamarinios-10.8
  - xamarinmac-3.0
  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Xml/XmlReader.xml
- uid: System.Xml.XmlReader.ReadStartElement*
  parent: System.Xml.XmlReader
  isExternal: false
  name: ReadStartElement
  nameWithType: XmlReader.ReadStartElement
  fullName: XmlReader.ReadStartElement
  monikers:
  - netcore-1.0
  - netcore-1.1
  - netcore-2.0
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  - netstandard-1.0
  - netstandard-1.1
  - netstandard-1.2
  - netstandard-1.3
  - netstandard-1.4
  - netstandard-1.6
  - netstandard-2.0
  - xamarinandroid-7.1
  - xamarinios-10.8
  - xamarinmac-3.0
  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Xml/XmlReader.xml
- uid: System.Xml.XmlReader.ReadState*
  parent: System.Xml.XmlReader
  isExternal: false
  name: ReadState
  nameWithType: XmlReader.ReadState
  fullName: XmlReader.ReadState
  monikers:
  - netcore-1.0
  - netcore-1.1
  - netcore-2.0
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  - netstandard-1.0
  - netstandard-1.1
  - netstandard-1.2
  - netstandard-1.3
  - netstandard-1.4
  - netstandard-1.6
  - netstandard-2.0
  - xamarinandroid-7.1
  - xamarinios-10.8
  - xamarinmac-3.0
  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Xml/XmlReader.xml
- uid: System.Xml.XmlReader.ReadString*
  parent: System.Xml.XmlReader
  isExternal: false
  name: ReadString
  nameWithType: XmlReader.ReadString
  fullName: XmlReader.ReadString
  monikers:
  - netcore-2.0
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  - netstandard-2.0
  - xamarinandroid-7.1
  - xamarinios-10.8
  - xamarinmac-3.0
  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Xml/XmlReader.xml
- uid: System.Xml.XmlReader.ReadSubtree*
  parent: System.Xml.XmlReader
  isExternal: false
  name: ReadSubtree
  nameWithType: XmlReader.ReadSubtree
  fullName: XmlReader.ReadSubtree
  monikers:
  - netcore-1.0
  - netcore-1.1
  - netcore-2.0
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  - netstandard-1.0
  - netstandard-1.1
  - netstandard-1.2
  - netstandard-1.3
  - netstandard-1.4
  - netstandard-1.6
  - netstandard-2.0
  - xamarinandroid-7.1
  - xamarinios-10.8
  - xamarinmac-3.0
  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Xml/XmlReader.xml
- uid: System.Xml.XmlReader.ReadToDescendant*
  parent: System.Xml.XmlReader
  isExternal: false
  name: ReadToDescendant
  nameWithType: XmlReader.ReadToDescendant
  fullName: XmlReader.ReadToDescendant
  monikers:
  - netcore-1.0
  - netcore-1.1
  - netcore-2.0
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  - netstandard-1.0
  - netstandard-1.1
  - netstandard-1.2
  - netstandard-1.3
  - netstandard-1.4
  - netstandard-1.6
  - netstandard-2.0
  - xamarinandroid-7.1
  - xamarinios-10.8
  - xamarinmac-3.0
  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Xml/XmlReader.xml
- uid: System.Xml.XmlReader.ReadToFollowing*
  parent: System.Xml.XmlReader
  isExternal: false
  name: ReadToFollowing
  nameWithType: XmlReader.ReadToFollowing
  fullName: XmlReader.ReadToFollowing
  monikers:
  - netcore-1.0
  - netcore-1.1
  - netcore-2.0
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  - netstandard-1.0
  - netstandard-1.1
  - netstandard-1.2
  - netstandard-1.3
  - netstandard-1.4
  - netstandard-1.6
  - netstandard-2.0
  - xamarinandroid-7.1
  - xamarinios-10.8
  - xamarinmac-3.0
  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Xml/XmlReader.xml
- uid: System.Xml.XmlReader.ReadToNextSibling*
  parent: System.Xml.XmlReader
  isExternal: false
  name: ReadToNextSibling
  nameWithType: XmlReader.ReadToNextSibling
  fullName: XmlReader.ReadToNextSibling
  monikers:
  - netcore-1.0
  - netcore-1.1
  - netcore-2.0
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  - netstandard-1.0
  - netstandard-1.1
  - netstandard-1.2
  - netstandard-1.3
  - netstandard-1.4
  - netstandard-1.6
  - netstandard-2.0
  - xamarinandroid-7.1
  - xamarinios-10.8
  - xamarinmac-3.0
  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Xml/XmlReader.xml
- uid: System.Xml.XmlReader.ReadValueChunk*
  parent: System.Xml.XmlReader
  isExternal: false
  name: ReadValueChunk
  nameWithType: XmlReader.ReadValueChunk
  fullName: XmlReader.ReadValueChunk
  monikers:
  - netcore-1.0
  - netcore-1.1
  - netcore-2.0
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  - netstandard-1.0
  - netstandard-1.1
  - netstandard-1.2
  - netstandard-1.3
  - netstandard-1.4
  - netstandard-1.6
  - netstandard-2.0
  - xamarinandroid-7.1
  - xamarinios-10.8
  - xamarinmac-3.0
  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Xml/XmlReader.xml
- uid: System.Xml.XmlReader.ReadValueChunkAsync*
  parent: System.Xml.XmlReader
  isExternal: false
  name: ReadValueChunkAsync
  nameWithType: XmlReader.ReadValueChunkAsync
  fullName: XmlReader.ReadValueChunkAsync
  monikers:
  - netcore-1.0
  - netcore-1.1
  - netcore-2.0
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  - netstandard-1.0
  - netstandard-1.1
  - netstandard-1.2
  - netstandard-1.3
  - netstandard-1.4
  - netstandard-1.6
  - netstandard-2.0
  - xamarinandroid-7.1
  - xamarinios-10.8
  - xamarinmac-3.0
  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Xml/XmlReader.xml
- uid: System.Xml.XmlReader.ResolveEntity*
  parent: System.Xml.XmlReader
  isExternal: false
  name: ResolveEntity
  nameWithType: XmlReader.ResolveEntity
  fullName: XmlReader.ResolveEntity
  monikers:
  - netcore-1.0
  - netcore-1.1
  - netcore-2.0
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  - netstandard-1.0
  - netstandard-1.1
  - netstandard-1.2
  - netstandard-1.3
  - netstandard-1.4
  - netstandard-1.6
  - netstandard-2.0
  - xamarinandroid-7.1
  - xamarinios-10.8
  - xamarinmac-3.0
  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Xml/XmlReader.xml
- uid: System.Xml.XmlReader.SchemaInfo*
  parent: System.Xml.XmlReader
  isExternal: false
  name: SchemaInfo
  nameWithType: XmlReader.SchemaInfo
  fullName: XmlReader.SchemaInfo
  monikers:
  - netcore-2.0
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  - netstandard-2.0
  - xamarinandroid-7.1
  - xamarinios-10.8
  - xamarinmac-3.0
  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Xml/XmlReader.xml
- uid: System.Xml.XmlReader.Settings*
  parent: System.Xml.XmlReader
  isExternal: false
  name: Settings
  nameWithType: XmlReader.Settings
  fullName: XmlReader.Settings
  monikers:
  - netcore-1.0
  - netcore-1.1
  - netcore-2.0
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  - netstandard-1.0
  - netstandard-1.1
  - netstandard-1.2
  - netstandard-1.3
  - netstandard-1.4
  - netstandard-1.6
  - netstandard-2.0
  - xamarinandroid-7.1
  - xamarinios-10.8
  - xamarinmac-3.0
  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Xml/XmlReader.xml
- uid: System.Xml.XmlReader.Skip*
  parent: System.Xml.XmlReader
  isExternal: false
  name: Skip
  nameWithType: XmlReader.Skip
  fullName: XmlReader.Skip
  monikers:
  - netcore-1.0
  - netcore-1.1
  - netcore-2.0
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  - netstandard-1.0
  - netstandard-1.1
  - netstandard-1.2
  - netstandard-1.3
  - netstandard-1.4
  - netstandard-1.6
  - netstandard-2.0
  - xamarinandroid-7.1
  - xamarinios-10.8
  - xamarinmac-3.0
  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Xml/XmlReader.xml
- uid: System.Xml.XmlReader.SkipAsync*
  parent: System.Xml.XmlReader
  isExternal: false
  name: SkipAsync
  nameWithType: XmlReader.SkipAsync
  fullName: XmlReader.SkipAsync
  monikers:
  - netcore-1.0
  - netcore-1.1
  - netcore-2.0
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  - netstandard-1.0
  - netstandard-1.1
  - netstandard-1.2
  - netstandard-1.3
  - netstandard-1.4
  - netstandard-1.6
  - netstandard-2.0
  - xamarinandroid-7.1
  - xamarinios-10.8
  - xamarinmac-3.0
  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Xml/XmlReader.xml
- uid: System.Xml.XmlReader.Value*
  parent: System.Xml.XmlReader
  isExternal: false
  name: Value
  nameWithType: XmlReader.Value
  fullName: XmlReader.Value
  monikers:
  - netcore-1.0
  - netcore-1.1
  - netcore-2.0
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  - netstandard-1.0
  - netstandard-1.1
  - netstandard-1.2
  - netstandard-1.3
  - netstandard-1.4
  - netstandard-1.6
  - netstandard-2.0
  - xamarinandroid-7.1
  - xamarinios-10.8
  - xamarinmac-3.0
  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Xml/XmlReader.xml
- uid: System.Xml.XmlReader.ValueType*
  parent: System.Xml.XmlReader
  isExternal: false
  name: ValueType
  nameWithType: XmlReader.ValueType
  fullName: XmlReader.ValueType
  monikers:
  - netcore-1.0
  - netcore-1.1
  - netcore-2.0
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  - netstandard-1.0
  - netstandard-1.1
  - netstandard-1.2
  - netstandard-1.3
  - netstandard-1.4
  - netstandard-1.6
  - netstandard-2.0
  - xamarinandroid-7.1
  - xamarinios-10.8
  - xamarinmac-3.0
  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Xml/XmlReader.xml
- uid: System.Xml.XmlReader.XmlLang*
  parent: System.Xml.XmlReader
  isExternal: false
  name: XmlLang
  nameWithType: XmlReader.XmlLang
  fullName: XmlReader.XmlLang
  monikers:
  - netcore-1.0
  - netcore-1.1
  - netcore-2.0
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  - netstandard-1.0
  - netstandard-1.1
  - netstandard-1.2
  - netstandard-1.3
  - netstandard-1.4
  - netstandard-1.6
  - netstandard-2.0
  - xamarinandroid-7.1
  - xamarinios-10.8
  - xamarinmac-3.0
  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Xml/XmlReader.xml
- uid: System.Xml.XmlReader.XmlSpace*
  parent: System.Xml.XmlReader
  isExternal: false
  name: XmlSpace
  nameWithType: XmlReader.XmlSpace
  fullName: XmlReader.XmlSpace
  monikers:
  - netcore-1.0
  - netcore-1.1
  - netcore-2.0
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  - netstandard-1.0
  - netstandard-1.1
  - netstandard-1.2
  - netstandard-1.3
  - netstandard-1.4
  - netstandard-1.6
  - netstandard-2.0
  - xamarinandroid-7.1
  - xamarinios-10.8
  - xamarinmac-3.0
  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Xml/XmlReader.xml
- uid: System.Object.Equals(System.Object)
  parent: System.Object
  isExternal: false
  name: Equals(Object)
  nameWithType: Object.Equals(Object)
  fullName: Object.Equals(Object)
- uid: System.Object.Equals(System.Object,System.Object)
  parent: System.Object
  isExternal: false
  name: Equals(Object, Object)
  nameWithType: Object.Equals(Object, Object)
  fullName: Object.Equals(Object, Object)
- uid: System.Object.GetHashCode
  parent: System.Object
  isExternal: false
  name: GetHashCode()
  nameWithType: Object.GetHashCode()
  fullName: Object.GetHashCode()
- uid: System.Object.GetType
  parent: System.Object
  isExternal: false
  name: GetType()
  nameWithType: Object.GetType()
  fullName: Object.GetType()
- uid: System.Object.MemberwiseClone
  parent: System.Object
  isExternal: false
  name: MemberwiseClone()
  nameWithType: Object.MemberwiseClone()
  fullName: Object.MemberwiseClone()
- uid: System.Object.ReferenceEquals(System.Object,System.Object)
  parent: System.Object
  isExternal: false
  name: ReferenceEquals(Object, Object)
  nameWithType: Object.ReferenceEquals(Object, Object)
  fullName: Object.ReferenceEquals(Object, Object)
- uid: System.Object.ToString
  parent: System.Object
  isExternal: false
  name: ToString()
  nameWithType: Object.ToString()
  fullName: Object.ToString()
- uid: System.IDisposable
  parent: System
  isExternal: false
  name: IDisposable
  nameWithType: IDisposable
  fullName: System.IDisposable
