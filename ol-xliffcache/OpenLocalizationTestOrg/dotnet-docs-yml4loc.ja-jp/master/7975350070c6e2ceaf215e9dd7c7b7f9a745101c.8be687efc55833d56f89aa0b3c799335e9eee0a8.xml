{"nodes":[{"content":"An activity that executes all child activities simultaneously and asynchronously.","nodes":[{"pos":[0,81],"content":"An activity that executes all child activities simultaneously and asynchronously.","nodes":[{"content":"An activity that executes all child activities simultaneously and asynchronously.","pos":[0,81]}]}],"pos":[1145,1227],"yaml":true},{"content":"A <xref:System.Activities.Statements.Parallel> activity operates by simultaneously scheduling each <xref:System.Activities.Activity> in its <xref:System.Activities.Statements.Parallel.Branches%2A> collection at the start. It completes when all of its <xref:System.Activities.Statements.Parallel.Branches%2A> complete or when its <xref:System.Activities.Statements.Parallel.CompletionCondition%2A> property evaluates to `true`. While all the <xref:System.Activities.Activity> objects run asynchronously, they do not execute on separate threads, so each successive activity only executes when the previously scheduled activity completes or goes idle. If none of the child activities of this activity go idle, this activity execute in the same way that a <xref:System.Activities.Statements.Sequence> activity does.","nodes":[{"pos":[0,811],"content":"A <xref:System.Activities.Statements.Parallel> activity operates by simultaneously scheduling each <xref:System.Activities.Activity> in its <xref:System.Activities.Statements.Parallel.Branches%2A> collection at the start. It completes when all of its <xref:System.Activities.Statements.Parallel.Branches%2A> complete or when its <xref:System.Activities.Statements.Parallel.CompletionCondition%2A> property evaluates to `true`. While all the <xref:System.Activities.Activity> objects run asynchronously, they do not execute on separate threads, so each successive activity only executes when the previously scheduled activity completes or goes idle. If none of the child activities of this activity go idle, this activity execute in the same way that a <xref:System.Activities.Statements.Sequence> activity does.","nodes":[{"content":"A <ph id=\"ph1\">&lt;xref:System.Activities.Statements.Parallel&gt;</ph> activity operates by simultaneously scheduling each <ph id=\"ph2\">&lt;xref:System.Activities.Activity&gt;</ph> in its <ph id=\"ph3\">&lt;xref:System.Activities.Statements.Parallel.Branches%2A&gt;</ph> collection at the start.","pos":[0,221],"source":"A <xref:System.Activities.Statements.Parallel> activity operates by simultaneously scheduling each <xref:System.Activities.Activity> in its <xref:System.Activities.Statements.Parallel.Branches%2A> collection at the start."},{"content":"It completes when all of its <ph id=\"ph1\">&lt;xref:System.Activities.Statements.Parallel.Branches%2A&gt;</ph> complete or when its <ph id=\"ph2\">&lt;xref:System.Activities.Statements.Parallel.CompletionCondition%2A&gt;</ph> property evaluates to <ph id=\"ph3\">`true`</ph>.","pos":[222,426],"source":" It completes when all of its <xref:System.Activities.Statements.Parallel.Branches%2A> complete or when its <xref:System.Activities.Statements.Parallel.CompletionCondition%2A> property evaluates to `true`."},{"content":"While all the <ph id=\"ph1\">&lt;xref:System.Activities.Activity&gt;</ph> objects run asynchronously, they do not execute on separate threads, so each successive activity only executes when the previously scheduled activity completes or goes idle.","pos":[427,648],"source":" While all the <xref:System.Activities.Activity> objects run asynchronously, they do not execute on separate threads, so each successive activity only executes when the previously scheduled activity completes or goes idle."},{"content":"If none of the child activities of this activity go idle, this activity execute in the same way that a <ph id=\"ph1\">&lt;xref:System.Activities.Statements.Sequence&gt;</ph> activity does.","pos":[649,811],"source":" If none of the child activities of this activity go idle, this activity execute in the same way that a <xref:System.Activities.Statements.Sequence> activity does."}]}],"pos":[1238,2050],"yaml":true,"extradata":"MT"},{"content":"Creates a new instance of the <xref href=\"System.Activities.Statements.Parallel\"></xref> activity.","nodes":[{"pos":[0,98],"content":"Creates a new instance of the <ph id=\"ph1\">&lt;xref href=\"System.Activities.Statements.Parallel\"&gt;&lt;/xref&gt;</ph> activity.","source":"Creates a new instance of the <xref href=\"System.Activities.Statements.Parallel\"></xref> activity."}],"pos":[4764,4863],"yaml":true},{"content":"The child elements to be executed in parallel.","nodes":[{"pos":[0,46],"content":"The child elements to be executed in parallel.","nodes":[{"content":"The child elements to be executed in parallel.","pos":[0,46]}]}],"pos":[6379,6426],"yaml":true},{"content":"The elements.","nodes":[{"pos":[0,13],"content":"The elements.","nodes":[{"content":"The elements.","pos":[0,13]}]}],"pos":[7215,7229],"yaml":true},{"content":"Evaluates after any branch completes.","nodes":[{"pos":[0,37],"content":"Evaluates after any branch completes.","nodes":[{"content":"Evaluates after any branch completes.","pos":[0,37]}]}],"pos":[10986,11024],"yaml":true},{"content":"If this property evaluates to `true`, then the other scheduled elements in the <xref:System.Activities.Statements.Parallel.Branches%2A> collection are canceled. If this property is not set, all <xref:System.Activities.Activity> objects in the <xref:System.Activities.Statements.Parallel.Branches%2A> collection execute until completion.","nodes":[{"pos":[0,336],"content":"If this property evaluates to `true`, then the other scheduled elements in the <xref:System.Activities.Statements.Parallel.Branches%2A> collection are canceled. If this property is not set, all <xref:System.Activities.Activity> objects in the <xref:System.Activities.Statements.Parallel.Branches%2A> collection execute until completion.","nodes":[{"content":"If this property evaluates to <ph id=\"ph1\">`true`</ph>, then the other scheduled elements in the <ph id=\"ph2\">&lt;xref:System.Activities.Statements.Parallel.Branches%2A&gt;</ph> collection are canceled.","pos":[0,160],"source":"If this property evaluates to `true`, then the other scheduled elements in the <xref:System.Activities.Statements.Parallel.Branches%2A> collection are canceled."},{"content":"If this property is not set, all <ph id=\"ph1\">&lt;xref:System.Activities.Activity&gt;</ph> objects in the <ph id=\"ph2\">&lt;xref:System.Activities.Statements.Parallel.Branches%2A&gt;</ph> collection execute until completion.","pos":[161,336],"source":" If this property is not set, all <xref:System.Activities.Activity> objects in the <xref:System.Activities.Statements.Parallel.Branches%2A> collection execute until completion."}]}],"pos":[11035,11372],"yaml":true,"extradata":"MT"},{"content":"The completion expression.","nodes":[{"pos":[0,26],"content":"The completion expression.","nodes":[{"content":"The completion expression.","pos":[0,26]}]}],"pos":[12100,12127],"yaml":true},{"content":"The collection of contained variables.","nodes":[{"pos":[0,38],"content":"The collection of contained variables.","nodes":[{"content":"The collection of contained variables.","pos":[0,38]}]}],"pos":[17793,17832],"yaml":true},{"content":"The contained variables.","nodes":[{"pos":[0,24],"content":"The contained variables.","nodes":[{"content":"The contained variables.","pos":[0,24]}]}],"pos":[18064,18089],"yaml":true}],"content":"### YamlMime:ManagedReference\nitems:\n- uid: System.Activities.Statements.Parallel\n  commentId: T:System.Activities.Statements.Parallel\n  id: Parallel\n  children:\n  - System.Activities.Statements.Parallel.#ctor\n  - System.Activities.Statements.Parallel.Branches\n  - System.Activities.Statements.Parallel.CacheMetadata(System.Activities.NativeActivityMetadata)\n  - System.Activities.Statements.Parallel.Cancel(System.Activities.NativeActivityContext)\n  - System.Activities.Statements.Parallel.CompletionCondition\n  - System.Activities.Statements.Parallel.Execute(System.Activities.NativeActivityContext)\n  - System.Activities.Statements.Parallel.OnCreateDynamicUpdateMap(System.Activities.DynamicUpdate.NativeActivityUpdateMapMetadata,System.Activities.Activity)\n  - System.Activities.Statements.Parallel.UpdateInstance(System.Activities.DynamicUpdate.NativeActivityUpdateContext)\n  - System.Activities.Statements.Parallel.Variables\n  langs:\n  - csharp\n  name: Parallel\n  nameWithType: Parallel\n  fullName: System.Activities.Statements.Parallel\n  type: Class\n  assemblies:\n  - System.Activities\n  namespace: System.Activities.Statements\n  summary: An activity that executes all child activities simultaneously and asynchronously.\n  remarks: A <xref:System.Activities.Statements.Parallel> activity operates by simultaneously scheduling each <xref:System.Activities.Activity> in its <xref:System.Activities.Statements.Parallel.Branches%2A> collection at the start. It completes when all of its <xref:System.Activities.Statements.Parallel.Branches%2A> complete or when its <xref:System.Activities.Statements.Parallel.CompletionCondition%2A> property evaluates to `true`. While all the <xref:System.Activities.Activity> objects run asynchronously, they do not execute on separate threads, so each successive activity only executes when the previously scheduled activity completes or goes idle. If none of the child activities of this activity go idle, this activity execute in the same way that a <xref:System.Activities.Statements.Sequence> activity does.\n  example:\n  - \"The following code sample demonstrates creating a <xref:System.Activities.Statements.Parallel> activity. This example is from the [Cancellation Handler on Compensable Activity](~/docs/framework/windows-workflow-foundation/samples/cancellation-handler-on-compensable-activity.md) sample.  \\n  \\n [!code-csharp[wfs_CompensationCancellation#1](~/samples/snippets/csharp/VS_Snippets_CFX/wfs_compensationcancellation/cs/program.cs#1)]\"\n  syntax:\n    content: >-\n      [System.Windows.Markup.ContentProperty(\"Branches\")]\n\n      public sealed class Parallel : System.Activities.NativeActivity\n  inheritance:\n  - System.Object\n  - System.Activities.Activity\n  - System.Activities.NativeActivity\n  implements: []\n  inheritedMembers:\n  - System.Activities.Activity.CacheId\n  - System.Activities.Activity.Constraints\n  - System.Activities.Activity.DisplayName\n  - System.Activities.Activity.Id\n  - System.Activities.Activity.ShouldSerializeDisplayName\n  - System.Activities.Activity.ToString\n  - System.Activities.NativeActivity.Abort(System.Activities.NativeActivityAbortContext)\n  - System.Activities.NativeActivity.CacheMetadata(System.Activities.ActivityMetadata)\n  - System.Activities.NativeActivity.CanInduceIdle\n  - System.Activities.NativeActivity.Implementation\n  - System.Activities.NativeActivity.ImplementationVersion\n  - System.Activities.NativeActivity.OnCreateDynamicUpdateMap(System.Activities.DynamicUpdate.UpdateMapMetadata,System.Activities.Activity)\n  - System.Object.Equals(System.Object)\n  - System.Object.Equals(System.Object,System.Object)\n  - System.Object.GetHashCode\n  - System.Object.GetType\n  - System.Object.MemberwiseClone\n  - System.Object.ReferenceEquals(System.Object,System.Object)\n  attributes:\n  - type: System.Windows.Markup.ContentPropertyAttribute\n  version:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Activities.Statements/Parallel.xml\n  ms.technology:\n  - dotnet-standard\n  author: Erikre\n  ms.author: erikre\n  manager: erikre\n- uid: System.Activities.Statements.Parallel.#ctor\n  commentId: M:System.Activities.Statements.Parallel.#ctor\n  id: '#ctor'\n  parent: System.Activities.Statements.Parallel\n  langs:\n  - csharp\n  name: Parallel()\n  nameWithType: Parallel.Parallel()\n  fullName: Parallel.Parallel()\n  type: Constructor\n  assemblies:\n  - System.Activities\n  namespace: System.Activities.Statements\n  summary: Creates a new instance of the <xref href=\"System.Activities.Statements.Parallel\"></xref> activity.\n  remarks: ''\n  example:\n  - \"The following code sample demonstrates creating a <xref:System.Activities.Statements.Parallel> activity. This example is from the [Cancellation Handler on Compensable Activity](~/docs/framework/windows-workflow-foundation/samples/cancellation-handler-on-compensable-activity.md) sample.  \\n  \\n [!code-csharp[wfs_CompensationCancellation#1](~/samples/snippets/csharp/VS_Snippets_CFX/wfs_compensationcancellation/cs/program.cs#1)]\"\n  syntax:\n    content: public Parallel ();\n    parameters: []\n  overload: System.Activities.Statements.Parallel.#ctor*\n  exceptions: []\n  version:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Activities.Statements/Parallel.xml\n  ms.technology:\n  - dotnet-standard\n  author: Erikre\n  ms.author: erikre\n  manager: erikre\n- uid: System.Activities.Statements.Parallel.Branches\n  commentId: P:System.Activities.Statements.Parallel.Branches\n  id: Branches\n  parent: System.Activities.Statements.Parallel\n  langs:\n  - csharp\n  name: Branches\n  nameWithType: Parallel.Branches\n  fullName: Parallel.Branches\n  type: Property\n  assemblies:\n  - System.Activities\n  namespace: System.Activities.Statements\n  summary: The child elements to be executed in parallel.\n  remarks: ''\n  example:\n  - \"The following code sample demonstrates setting the Branches property of a <xref:System.Activities.Statements.Parallel> activity. This example is from the [Cancellation Handler on Compensable Activity](~/docs/framework/windows-workflow-foundation/samples/cancellation-handler-on-compensable-activity.md) sample.  \\n  \\n [!code-csharp[wfs_CompensationCancellation#1](~/samples/snippets/csharp/VS_Snippets_CFX/wfs_compensationcancellation/cs/program.cs#1)]\"\n  syntax:\n    content: >-\n      [System.Windows.Markup.DependsOn(\"CompletionCondition\")]\n\n      public System.Collections.ObjectModel.Collection<System.Activities.Activity> Branches { get; }\n    return:\n      type: System.Collections.ObjectModel.Collection{System.Activities.Activity}\n      description: The elements.\n  overload: System.Activities.Statements.Parallel.Branches*\n  exceptions: []\n  attributes:\n  - type: System.Windows.Markup.DependsOnAttribute\n  version:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Activities.Statements/Parallel.xml\n  ms.technology:\n  - dotnet-standard\n  author: Erikre\n  ms.author: erikre\n  manager: erikre\n- uid: System.Activities.Statements.Parallel.CacheMetadata(System.Activities.NativeActivityMetadata)\n  commentId: M:System.Activities.Statements.Parallel.CacheMetadata(System.Activities.NativeActivityMetadata)\n  id: CacheMetadata(System.Activities.NativeActivityMetadata)\n  parent: System.Activities.Statements.Parallel\n  langs:\n  - csharp\n  name: CacheMetadata(NativeActivityMetadata)\n  nameWithType: Parallel.CacheMetadata(NativeActivityMetadata)\n  fullName: Parallel.CacheMetadata(NativeActivityMetadata)\n  type: Method\n  assemblies:\n  - System.Activities\n  namespace: System.Activities.Statements\n  syntax:\n    content: protected override void CacheMetadata (System.Activities.NativeActivityMetadata metadata);\n    parameters:\n    - id: metadata\n      type: System.Activities.NativeActivityMetadata\n      description: ''\n  overload: System.Activities.Statements.Parallel.CacheMetadata*\n  exceptions: []\n  version:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Activities.Statements/Parallel.xml\n- uid: System.Activities.Statements.Parallel.Cancel(System.Activities.NativeActivityContext)\n  commentId: M:System.Activities.Statements.Parallel.Cancel(System.Activities.NativeActivityContext)\n  id: Cancel(System.Activities.NativeActivityContext)\n  parent: System.Activities.Statements.Parallel\n  langs:\n  - csharp\n  name: Cancel(NativeActivityContext)\n  nameWithType: Parallel.Cancel(NativeActivityContext)\n  fullName: Parallel.Cancel(NativeActivityContext)\n  type: Method\n  assemblies:\n  - System.Activities\n  namespace: System.Activities.Statements\n  syntax:\n    content: protected override void Cancel (System.Activities.NativeActivityContext context);\n    parameters:\n    - id: context\n      type: System.Activities.NativeActivityContext\n      description: ''\n  overload: System.Activities.Statements.Parallel.Cancel*\n  exceptions: []\n  version:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Activities.Statements/Parallel.xml\n- uid: System.Activities.Statements.Parallel.CompletionCondition\n  commentId: P:System.Activities.Statements.Parallel.CompletionCondition\n  id: CompletionCondition\n  parent: System.Activities.Statements.Parallel\n  langs:\n  - csharp\n  name: CompletionCondition\n  nameWithType: Parallel.CompletionCondition\n  fullName: Parallel.CompletionCondition\n  type: Property\n  assemblies:\n  - System.Activities\n  namespace: System.Activities.Statements\n  summary: Evaluates after any branch completes.\n  remarks: If this property evaluates to `true`, then the other scheduled elements in the <xref:System.Activities.Statements.Parallel.Branches%2A> collection are canceled. If this property is not set, all <xref:System.Activities.Activity> objects in the <xref:System.Activities.Statements.Parallel.Branches%2A> collection execute until completion.\n  example:\n  - \"The following code sample demonstrates setting the CompletionCondition property of a <xref:System.Activities.Statements.Parallel> activity. This example is from the [Cancellation Handler on Compensable Activity](~/docs/framework/windows-workflow-foundation/samples/cancellation-handler-on-compensable-activity.md) sample.  \\n  \\n [!code-csharp[wfs_CompensationCancellation#1](~/samples/snippets/csharp/VS_Snippets_CFX/wfs_compensationcancellation/cs/program.cs#1)]\"\n  syntax:\n    content: >-\n      [System.Windows.Markup.DependsOn(\"Variables\")]\n\n      public System.Activities.Activity<bool> CompletionCondition { get; set; }\n    return:\n      type: System.Activities.Activity{System.Boolean}\n      description: The completion expression.\n  overload: System.Activities.Statements.Parallel.CompletionCondition*\n  exceptions: []\n  attributes:\n  - type: System.Windows.Markup.DependsOnAttribute\n  version:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Activities.Statements/Parallel.xml\n  ms.technology:\n  - dotnet-standard\n  author: Erikre\n  ms.author: erikre\n  manager: erikre\n- uid: System.Activities.Statements.Parallel.Execute(System.Activities.NativeActivityContext)\n  commentId: M:System.Activities.Statements.Parallel.Execute(System.Activities.NativeActivityContext)\n  id: Execute(System.Activities.NativeActivityContext)\n  parent: System.Activities.Statements.Parallel\n  langs:\n  - csharp\n  name: Execute(NativeActivityContext)\n  nameWithType: Parallel.Execute(NativeActivityContext)\n  fullName: Parallel.Execute(NativeActivityContext)\n  type: Method\n  assemblies:\n  - System.Activities\n  namespace: System.Activities.Statements\n  syntax:\n    content: protected override void Execute (System.Activities.NativeActivityContext context);\n    parameters:\n    - id: context\n      type: System.Activities.NativeActivityContext\n      description: ''\n  overload: System.Activities.Statements.Parallel.Execute*\n  exceptions: []\n  version:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Activities.Statements/Parallel.xml\n- uid: System.Activities.Statements.Parallel.OnCreateDynamicUpdateMap(System.Activities.DynamicUpdate.NativeActivityUpdateMapMetadata,System.Activities.Activity)\n  commentId: M:System.Activities.Statements.Parallel.OnCreateDynamicUpdateMap(System.Activities.DynamicUpdate.NativeActivityUpdateMapMetadata,System.Activities.Activity)\n  id: OnCreateDynamicUpdateMap(System.Activities.DynamicUpdate.NativeActivityUpdateMapMetadata,System.Activities.Activity)\n  parent: System.Activities.Statements.Parallel\n  langs:\n  - csharp\n  name: OnCreateDynamicUpdateMap(NativeActivityUpdateMapMetadata, Activity)\n  nameWithType: Parallel.OnCreateDynamicUpdateMap(NativeActivityUpdateMapMetadata, Activity)\n  fullName: Parallel.OnCreateDynamicUpdateMap(NativeActivityUpdateMapMetadata, Activity)\n  type: Method\n  assemblies:\n  - System.Activities\n  namespace: System.Activities.Statements\n  syntax:\n    content: protected override void OnCreateDynamicUpdateMap (System.Activities.DynamicUpdate.NativeActivityUpdateMapMetadata metadata, System.Activities.Activity originalActivity);\n    parameters:\n    - id: metadata\n      type: System.Activities.DynamicUpdate.NativeActivityUpdateMapMetadata\n      description: ''\n    - id: originalActivity\n      type: System.Activities.Activity\n      description: ''\n  overload: System.Activities.Statements.Parallel.OnCreateDynamicUpdateMap*\n  exceptions: []\n  version:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Activities.Statements/Parallel.xml\n- uid: System.Activities.Statements.Parallel.UpdateInstance(System.Activities.DynamicUpdate.NativeActivityUpdateContext)\n  commentId: M:System.Activities.Statements.Parallel.UpdateInstance(System.Activities.DynamicUpdate.NativeActivityUpdateContext)\n  id: UpdateInstance(System.Activities.DynamicUpdate.NativeActivityUpdateContext)\n  parent: System.Activities.Statements.Parallel\n  langs:\n  - csharp\n  name: UpdateInstance(NativeActivityUpdateContext)\n  nameWithType: Parallel.UpdateInstance(NativeActivityUpdateContext)\n  fullName: Parallel.UpdateInstance(NativeActivityUpdateContext)\n  type: Method\n  assemblies:\n  - System.Activities\n  namespace: System.Activities.Statements\n  syntax:\n    content: protected override void UpdateInstance (System.Activities.DynamicUpdate.NativeActivityUpdateContext updateContext);\n    parameters:\n    - id: updateContext\n      type: System.Activities.DynamicUpdate.NativeActivityUpdateContext\n      description: ''\n  overload: System.Activities.Statements.Parallel.UpdateInstance*\n  exceptions: []\n  version:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Activities.Statements/Parallel.xml\n- uid: System.Activities.Statements.Parallel.Variables\n  commentId: P:System.Activities.Statements.Parallel.Variables\n  id: Variables\n  parent: System.Activities.Statements.Parallel\n  langs:\n  - csharp\n  name: Variables\n  nameWithType: Parallel.Variables\n  fullName: Parallel.Variables\n  type: Property\n  assemblies:\n  - System.Activities\n  namespace: System.Activities.Statements\n  summary: The collection of contained variables.\n  syntax:\n    content: public System.Collections.ObjectModel.Collection<System.Activities.Variable> Variables { get; }\n    return:\n      type: System.Collections.ObjectModel.Collection{System.Activities.Variable}\n      description: The contained variables.\n  overload: System.Activities.Statements.Parallel.Variables*\n  exceptions: []\n  version:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Activities.Statements/Parallel.xml\n  ms.technology:\n  - dotnet-standard\n  author: Erikre\n  ms.author: erikre\n  manager: erikre\nreferences:\n- uid: System.Activities.NativeActivity\n  parent: System.Activities\n  isExternal: false\n  name: NativeActivity\n  nameWithType: NativeActivity\n  fullName: System.Activities.NativeActivity\n- uid: System.Activities.Statements.Parallel.#ctor\n  parent: System.Activities.Statements.Parallel\n  isExternal: false\n  name: Parallel()\n  nameWithType: Parallel.Parallel()\n  fullName: Parallel.Parallel()\n- uid: System.Activities.Statements.Parallel.Branches\n  parent: System.Activities.Statements.Parallel\n  isExternal: false\n  name: Branches\n  nameWithType: Parallel.Branches\n  fullName: Parallel.Branches\n- uid: System.Collections.ObjectModel.Collection`1\n  name: Collection<T>\n  nameWithType: Collection<T>\n  fullName: System.Collections.ObjectModel.Collection<T>\n- uid: System.Activities.Activity\n  name: Activity\n  nameWithType: Activity\n  fullName: System.Activities.Activity\n- uid: System.Collections.ObjectModel.Collection{System.Activities.Activity}\n  parent: System.Collections.ObjectModel\n  isExternal: false\n  name: Collection<Activity>\n  nameWithType: Collection<Activity>\n  fullName: System.Collections.ObjectModel.Collection<System.Activities.Activity>\n  spec.csharp:\n  - uid: System.Collections.ObjectModel.Collection`1\n    name: Collection\n    nameWithType: Collection\n    fullName: System.Collections.ObjectModel.Collection\n  - name: <\n    nameWithType: <\n    fullName: <\n  - uid: System.Activities.Activity\n    name: Activity\n    nameWithType: Activity\n    fullName: System.Activities.Activity\n  - name: '>'\n    nameWithType: '>'\n    fullName: '>'\n- uid: System.Activities.Statements.Parallel.CacheMetadata(System.Activities.NativeActivityMetadata)\n  parent: System.Activities.Statements.Parallel\n  isExternal: false\n  name: CacheMetadata(NativeActivityMetadata)\n  nameWithType: Parallel.CacheMetadata(NativeActivityMetadata)\n  fullName: Parallel.CacheMetadata(NativeActivityMetadata)\n- uid: System.Activities.NativeActivityMetadata\n  parent: System.Activities\n  isExternal: false\n  name: NativeActivityMetadata\n  nameWithType: NativeActivityMetadata\n  fullName: System.Activities.NativeActivityMetadata\n- uid: System.Activities.Statements.Parallel.Cancel(System.Activities.NativeActivityContext)\n  parent: System.Activities.Statements.Parallel\n  isExternal: false\n  name: Cancel(NativeActivityContext)\n  nameWithType: Parallel.Cancel(NativeActivityContext)\n  fullName: Parallel.Cancel(NativeActivityContext)\n- uid: System.Activities.NativeActivityContext\n  parent: System.Activities\n  isExternal: false\n  name: NativeActivityContext\n  nameWithType: NativeActivityContext\n  fullName: System.Activities.NativeActivityContext\n- uid: System.Activities.Statements.Parallel.CompletionCondition\n  parent: System.Activities.Statements.Parallel\n  isExternal: false\n  name: CompletionCondition\n  nameWithType: Parallel.CompletionCondition\n  fullName: Parallel.CompletionCondition\n- uid: System.Activities.Activity`1\n  name: Activity<TResult>\n  nameWithType: Activity<TResult>\n  fullName: System.Activities.Activity<TResult>\n- uid: System.Boolean\n  name: Boolean\n  nameWithType: Boolean\n  fullName: System.Boolean\n- uid: System.Activities.Activity{System.Boolean}\n  parent: System.Activities\n  isExternal: false\n  name: Activity<Boolean>\n  nameWithType: Activity<Boolean>\n  fullName: System.Activities.Activity<System.Boolean>\n  spec.csharp:\n  - uid: System.Activities.Activity`1\n    name: Activity\n    nameWithType: Activity\n    fullName: System.Activities.Activity\n  - name: <\n    nameWithType: <\n    fullName: <\n  - uid: System.Boolean\n    name: Boolean\n    nameWithType: Boolean\n    fullName: System.Boolean\n  - name: '>'\n    nameWithType: '>'\n    fullName: '>'\n- uid: System.Activities.Statements.Parallel.Execute(System.Activities.NativeActivityContext)\n  parent: System.Activities.Statements.Parallel\n  isExternal: false\n  name: Execute(NativeActivityContext)\n  nameWithType: Parallel.Execute(NativeActivityContext)\n  fullName: Parallel.Execute(NativeActivityContext)\n- uid: System.Activities.Statements.Parallel.OnCreateDynamicUpdateMap(System.Activities.DynamicUpdate.NativeActivityUpdateMapMetadata,System.Activities.Activity)\n  parent: System.Activities.Statements.Parallel\n  isExternal: false\n  name: OnCreateDynamicUpdateMap(NativeActivityUpdateMapMetadata, Activity)\n  nameWithType: Parallel.OnCreateDynamicUpdateMap(NativeActivityUpdateMapMetadata, Activity)\n  fullName: Parallel.OnCreateDynamicUpdateMap(NativeActivityUpdateMapMetadata, Activity)\n- uid: System.Activities.DynamicUpdate.NativeActivityUpdateMapMetadata\n  parent: System.Activities.DynamicUpdate\n  isExternal: false\n  name: NativeActivityUpdateMapMetadata\n  nameWithType: NativeActivityUpdateMapMetadata\n  fullName: System.Activities.DynamicUpdate.NativeActivityUpdateMapMetadata\n- uid: System.Activities.Statements.Parallel.UpdateInstance(System.Activities.DynamicUpdate.NativeActivityUpdateContext)\n  parent: System.Activities.Statements.Parallel\n  isExternal: false\n  name: UpdateInstance(NativeActivityUpdateContext)\n  nameWithType: Parallel.UpdateInstance(NativeActivityUpdateContext)\n  fullName: Parallel.UpdateInstance(NativeActivityUpdateContext)\n- uid: System.Activities.DynamicUpdate.NativeActivityUpdateContext\n  parent: System.Activities.DynamicUpdate\n  isExternal: false\n  name: NativeActivityUpdateContext\n  nameWithType: NativeActivityUpdateContext\n  fullName: System.Activities.DynamicUpdate.NativeActivityUpdateContext\n- uid: System.Activities.Statements.Parallel.Variables\n  parent: System.Activities.Statements.Parallel\n  isExternal: false\n  name: Variables\n  nameWithType: Parallel.Variables\n  fullName: Parallel.Variables\n- uid: System.Activities.Variable\n  name: Variable\n  nameWithType: Variable\n  fullName: System.Activities.Variable\n- uid: System.Collections.ObjectModel.Collection{System.Activities.Variable}\n  parent: System.Collections.ObjectModel\n  isExternal: false\n  name: Collection<Variable>\n  nameWithType: Collection<Variable>\n  fullName: System.Collections.ObjectModel.Collection<System.Activities.Variable>\n  spec.csharp:\n  - uid: System.Collections.ObjectModel.Collection`1\n    name: Collection\n    nameWithType: Collection\n    fullName: System.Collections.ObjectModel.Collection\n  - name: <\n    nameWithType: <\n    fullName: <\n  - uid: System.Activities.Variable\n    name: Variable\n    nameWithType: Variable\n    fullName: System.Activities.Variable\n  - name: '>'\n    nameWithType: '>'\n    fullName: '>'\n- uid: System.Activities.Statements.Parallel.#ctor*\n  parent: System.Activities.Statements.Parallel\n  isExternal: false\n  name: Parallel\n  nameWithType: Parallel.Parallel\n  fullName: Parallel.Parallel\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Activities.Statements/Parallel.xml\n- uid: System.Activities.Statements.Parallel.Branches*\n  parent: System.Activities.Statements.Parallel\n  isExternal: false\n  name: Branches\n  nameWithType: Parallel.Branches\n  fullName: Parallel.Branches\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Activities.Statements/Parallel.xml\n- uid: System.Activities.Statements.Parallel.CacheMetadata*\n  parent: System.Activities.Statements.Parallel\n  isExternal: false\n  name: CacheMetadata\n  nameWithType: Parallel.CacheMetadata\n  fullName: Parallel.CacheMetadata\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Activities.Statements/Parallel.xml\n- uid: System.Activities.Statements.Parallel.Cancel*\n  parent: System.Activities.Statements.Parallel\n  isExternal: false\n  name: Cancel\n  nameWithType: Parallel.Cancel\n  fullName: Parallel.Cancel\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Activities.Statements/Parallel.xml\n- uid: System.Activities.Statements.Parallel.CompletionCondition*\n  parent: System.Activities.Statements.Parallel\n  isExternal: false\n  name: CompletionCondition\n  nameWithType: Parallel.CompletionCondition\n  fullName: Parallel.CompletionCondition\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Activities.Statements/Parallel.xml\n- uid: System.Activities.Statements.Parallel.Execute*\n  parent: System.Activities.Statements.Parallel\n  isExternal: false\n  name: Execute\n  nameWithType: Parallel.Execute\n  fullName: Parallel.Execute\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Activities.Statements/Parallel.xml\n- uid: System.Activities.Statements.Parallel.OnCreateDynamicUpdateMap*\n  parent: System.Activities.Statements.Parallel\n  isExternal: false\n  name: OnCreateDynamicUpdateMap\n  nameWithType: Parallel.OnCreateDynamicUpdateMap\n  fullName: Parallel.OnCreateDynamicUpdateMap\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Activities.Statements/Parallel.xml\n- uid: System.Activities.Statements.Parallel.UpdateInstance*\n  parent: System.Activities.Statements.Parallel\n  isExternal: false\n  name: UpdateInstance\n  nameWithType: Parallel.UpdateInstance\n  fullName: Parallel.UpdateInstance\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Activities.Statements/Parallel.xml\n- uid: System.Activities.Statements.Parallel.Variables*\n  parent: System.Activities.Statements.Parallel\n  isExternal: false\n  name: Variables\n  nameWithType: Parallel.Variables\n  fullName: Parallel.Variables\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Activities.Statements/Parallel.xml\n- uid: System.Object.Equals(System.Object)\n  parent: System.Object\n  isExternal: false\n  name: Equals(Object)\n  nameWithType: Object.Equals(Object)\n  fullName: Object.Equals(Object)\n- uid: System.Object.Equals(System.Object,System.Object)\n  parent: System.Object\n  isExternal: false\n  name: Equals(Object, Object)\n  nameWithType: Object.Equals(Object, Object)\n  fullName: Object.Equals(Object, Object)\n- uid: System.Object.GetHashCode\n  parent: System.Object\n  isExternal: false\n  name: GetHashCode()\n  nameWithType: Object.GetHashCode()\n  fullName: Object.GetHashCode()\n- uid: System.Object.GetType\n  parent: System.Object\n  isExternal: false\n  name: GetType()\n  nameWithType: Object.GetType()\n  fullName: Object.GetType()\n- uid: System.Object.MemberwiseClone\n  parent: System.Object\n  isExternal: false\n  name: MemberwiseClone()\n  nameWithType: Object.MemberwiseClone()\n  fullName: Object.MemberwiseClone()\n- uid: System.Object.ReferenceEquals(System.Object,System.Object)\n  parent: System.Object\n  isExternal: false\n  name: ReferenceEquals(Object, Object)\n  nameWithType: Object.ReferenceEquals(Object, Object)\n  fullName: Object.ReferenceEquals(Object, Object)\n- uid: System.Activities.Activity.ToString\n  parent: System.Activities.Activity\n  isExternal: false\n  name: ToString()\n  nameWithType: Activity.ToString()\n  fullName: Activity.ToString()\n- uid: System.Activities.Activity.CacheId\n  parent: System.Activities.Activity\n  isExternal: false\n  name: CacheId\n  nameWithType: Activity.CacheId\n  fullName: Activity.CacheId\n- uid: System.Activities.NativeActivity.CacheMetadata(System.Activities.ActivityMetadata)\n  parent: System.Activities.NativeActivity\n  isExternal: false\n  name: CacheMetadata(ActivityMetadata)\n  nameWithType: NativeActivity.CacheMetadata(ActivityMetadata)\n  fullName: NativeActivity.CacheMetadata(ActivityMetadata)\n- uid: System.Activities.Activity.Constraints\n  parent: System.Activities.Activity\n  isExternal: false\n  name: Constraints\n  nameWithType: Activity.Constraints\n  fullName: Activity.Constraints\n- uid: System.Activities.Activity.DisplayName\n  parent: System.Activities.Activity\n  isExternal: false\n  name: DisplayName\n  nameWithType: Activity.DisplayName\n  fullName: Activity.DisplayName\n- uid: System.Activities.Activity.Id\n  parent: System.Activities.Activity\n  isExternal: false\n  name: Id\n  nameWithType: Activity.Id\n  fullName: Activity.Id\n- uid: System.Activities.NativeActivity.Implementation\n  parent: System.Activities.NativeActivity\n  isExternal: false\n  name: Implementation\n  nameWithType: NativeActivity.Implementation\n  fullName: NativeActivity.Implementation\n- uid: System.Activities.NativeActivity.ImplementationVersion\n  parent: System.Activities.NativeActivity\n  isExternal: false\n  name: ImplementationVersion\n  nameWithType: NativeActivity.ImplementationVersion\n  fullName: NativeActivity.ImplementationVersion\n- uid: System.Activities.NativeActivity.OnCreateDynamicUpdateMap(System.Activities.DynamicUpdate.UpdateMapMetadata,System.Activities.Activity)\n  parent: System.Activities.NativeActivity\n  isExternal: false\n  name: OnCreateDynamicUpdateMap(UpdateMapMetadata, Activity)\n  nameWithType: NativeActivity.OnCreateDynamicUpdateMap(UpdateMapMetadata, Activity)\n  fullName: NativeActivity.OnCreateDynamicUpdateMap(UpdateMapMetadata, Activity)\n- uid: System.Activities.Activity.ShouldSerializeDisplayName\n  parent: System.Activities.Activity\n  isExternal: false\n  name: ShouldSerializeDisplayName()\n  nameWithType: Activity.ShouldSerializeDisplayName()\n  fullName: Activity.ShouldSerializeDisplayName()\n- uid: System.Activities.NativeActivity.Abort(System.Activities.NativeActivityAbortContext)\n  parent: System.Activities.NativeActivity\n  isExternal: false\n  name: Abort(NativeActivityAbortContext)\n  nameWithType: NativeActivity.Abort(NativeActivityAbortContext)\n  fullName: NativeActivity.Abort(NativeActivityAbortContext)\n- uid: System.Activities.NativeActivity.CanInduceIdle\n  parent: System.Activities.NativeActivity\n  isExternal: false\n  name: CanInduceIdle\n  nameWithType: NativeActivity.CanInduceIdle\n  fullName: NativeActivity.CanInduceIdle\n"}