{"nodes":[{"content":"Represents a <xref href=\"System.Activities.Presentation.ContextItem\"></xref> that is published in the editing context and that indicates whether the Windows Workflow Foundation designer is in a read-only state.","nodes":[{"pos":[0,210],"content":"Represents a <ph id=\"ph1\">&lt;xref href=\"System.Activities.Presentation.ContextItem\"&gt;&lt;/xref&gt;</ph> that is published in the editing context and that indicates whether the Windows Workflow Foundation designer is in a read-only state.","source":"Represents a <xref href=\"System.Activities.Presentation.ContextItem\"></xref> that is published in the editing context and that indicates whether the Windows Workflow Foundation designer is in a read-only state."}],"pos":[656,867],"yaml":true},{"content":"Visual elements can bind to this property in order to provide different behavior in a read-only state (such as the <xref:System.Activities.Presentation.View.ExpressionTextBox> disallowing edits and setting the state to \"Disabled\"). If a hosting application would like to set the designer to a read-only state, this <xref:System.Activities.Presentation.ContextItem> can be retrieved and can be set to `false`.","nodes":[{"pos":[0,408],"content":"Visual elements can bind to this property in order to provide different behavior in a read-only state (such as the <xref:System.Activities.Presentation.View.ExpressionTextBox> disallowing edits and setting the state to \"Disabled\"). If a hosting application would like to set the designer to a read-only state, this <xref:System.Activities.Presentation.ContextItem> can be retrieved and can be set to `false`.","nodes":[{"content":"Visual elements can bind to this property in order to provide different behavior in a read-only state (such as the <ph id=\"ph1\">&lt;xref:System.Activities.Presentation.View.ExpressionTextBox&gt;</ph> disallowing edits and setting the state to \"Disabled\").","pos":[0,231],"source":"Visual elements can bind to this property in order to provide different behavior in a read-only state (such as the <xref:System.Activities.Presentation.View.ExpressionTextBox> disallowing edits and setting the state to \"Disabled\")."},{"content":"If a hosting application would like to set the designer to a read-only state, this <ph id=\"ph1\">&lt;xref:System.Activities.Presentation.ContextItem&gt;</ph> can be retrieved and can be set to <ph id=\"ph2\">`false`</ph>.","pos":[232,408],"source":" If a hosting application would like to set the designer to a read-only state, this <xref:System.Activities.Presentation.ContextItem> can be retrieved and can be set to `false`."}]}],"pos":[878,1287],"yaml":true,"extradata":"MT"},{"content":"Initializes a new instance of the <xref href=\"System.Activities.Presentation.Hosting.ReadOnlyState\"></xref> class.","nodes":[{"pos":[0,114],"content":"Initializes a new instance of the <ph id=\"ph1\">&lt;xref href=\"System.Activities.Presentation.Hosting.ReadOnlyState\"&gt;&lt;/xref&gt;</ph> class.","source":"Initializes a new instance of the <xref href=\"System.Activities.Presentation.Hosting.ReadOnlyState\"></xref> class."}],"pos":[2962,3077],"yaml":true},{"content":"Gets a value that indicates whether the object is read-only.","nodes":[{"pos":[0,60],"content":"Gets a value that indicates whether the object is read-only.","nodes":[{"content":"Gets a value that indicates whether the object is read-only.","pos":[0,60]}]}],"pos":[4257,4318],"yaml":true},{"content":"`true` if the object is read-only; otherwise, `false`.","nodes":[{"pos":[0,54],"content":"<ph id=\"ph1\">`true`</ph> if the object is read-only; otherwise, <ph id=\"ph2\">`false`</ph>.","source":"`true` if the object is read-only; otherwise, `false`."}],"pos":[4436,4493],"yaml":true},{"content":"Gets the type of the current object.","nodes":[{"pos":[0,36],"content":"Gets the type of the current object.","nodes":[{"content":"Gets the type of the current object.","pos":[0,36]}]}],"pos":[5599,5636],"yaml":true},{"content":"Returns <xref href=\"System.Type\"></xref>.","nodes":[{"pos":[0,41],"content":"Returns <ph id=\"ph1\">&lt;xref href=\"System.Type\"&gt;&lt;/xref&gt;</ph>.","source":"Returns <xref href=\"System.Type\"></xref>."}],"pos":[5753,5795],"yaml":true}],"content":"### YamlMime:ManagedReference\nitems:\n- uid: System.Activities.Presentation.Hosting.ReadOnlyState\n  commentId: T:System.Activities.Presentation.Hosting.ReadOnlyState\n  id: ReadOnlyState\n  children:\n  - System.Activities.Presentation.Hosting.ReadOnlyState.#ctor\n  - System.Activities.Presentation.Hosting.ReadOnlyState.IsReadOnly\n  - System.Activities.Presentation.Hosting.ReadOnlyState.ItemType\n  langs:\n  - csharp\n  name: ReadOnlyState\n  nameWithType: ReadOnlyState\n  fullName: System.Activities.Presentation.Hosting.ReadOnlyState\n  type: Class\n  assemblies:\n  - System.Activities.Presentation\n  namespace: System.Activities.Presentation.Hosting\n  summary: Represents a <xref href=\"System.Activities.Presentation.ContextItem\"></xref> that is published in the editing context and that indicates whether the Windows Workflow Foundation designer is in a read-only state.\n  remarks: Visual elements can bind to this property in order to provide different behavior in a read-only state (such as the <xref:System.Activities.Presentation.View.ExpressionTextBox> disallowing edits and setting the state to \"Disabled\"). If a hosting application would like to set the designer to a read-only state, this <xref:System.Activities.Presentation.ContextItem> can be retrieved and can be set to `false`.\n  syntax:\n    content: 'public sealed class ReadOnlyState : System.Activities.Presentation.ContextItem'\n  inheritance:\n  - System.Object\n  - System.Activities.Presentation.ContextItem\n  implements: []\n  inheritedMembers:\n  - System.Activities.Presentation.ContextItem.OnItemChanged(System.Activities.Presentation.EditingContext,System.Activities.Presentation.ContextItem)\n  - System.Object.Equals(System.Object)\n  - System.Object.Equals(System.Object,System.Object)\n  - System.Object.GetHashCode\n  - System.Object.GetType\n  - System.Object.MemberwiseClone\n  - System.Object.ReferenceEquals(System.Object,System.Object)\n  - System.Object.ToString\n  version:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Activities.Presentation.Hosting/ReadOnlyState.xml\n  ms.technology:\n  - dotnet-standard\n  author: Erikre\n  ms.author: erikre\n  manager: erikre\n- uid: System.Activities.Presentation.Hosting.ReadOnlyState.#ctor\n  commentId: M:System.Activities.Presentation.Hosting.ReadOnlyState.#ctor\n  id: '#ctor'\n  parent: System.Activities.Presentation.Hosting.ReadOnlyState\n  langs:\n  - csharp\n  name: ReadOnlyState()\n  nameWithType: ReadOnlyState.ReadOnlyState()\n  fullName: ReadOnlyState.ReadOnlyState()\n  type: Constructor\n  assemblies:\n  - System.Activities.Presentation\n  namespace: System.Activities.Presentation.Hosting\n  summary: Initializes a new instance of the <xref href=\"System.Activities.Presentation.Hosting.ReadOnlyState\"></xref> class.\n  syntax:\n    content: public ReadOnlyState ();\n    parameters: []\n  overload: System.Activities.Presentation.Hosting.ReadOnlyState.#ctor*\n  exceptions: []\n  version:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Activities.Presentation.Hosting/ReadOnlyState.xml\n  ms.technology:\n  - dotnet-standard\n  author: Erikre\n  ms.author: erikre\n  manager: erikre\n- uid: System.Activities.Presentation.Hosting.ReadOnlyState.IsReadOnly\n  commentId: P:System.Activities.Presentation.Hosting.ReadOnlyState.IsReadOnly\n  id: IsReadOnly\n  parent: System.Activities.Presentation.Hosting.ReadOnlyState\n  langs:\n  - csharp\n  name: IsReadOnly\n  nameWithType: ReadOnlyState.IsReadOnly\n  fullName: ReadOnlyState.IsReadOnly\n  type: Property\n  assemblies:\n  - System.Activities.Presentation\n  namespace: System.Activities.Presentation.Hosting\n  summary: Gets a value that indicates whether the object is read-only.\n  syntax:\n    content: public bool IsReadOnly { get; set; }\n    return:\n      type: System.Boolean\n      description: '`true` if the object is read-only; otherwise, `false`.'\n  overload: System.Activities.Presentation.Hosting.ReadOnlyState.IsReadOnly*\n  exceptions: []\n  version:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Activities.Presentation.Hosting/ReadOnlyState.xml\n  ms.technology:\n  - dotnet-standard\n  author: Erikre\n  ms.author: erikre\n  manager: erikre\n- uid: System.Activities.Presentation.Hosting.ReadOnlyState.ItemType\n  commentId: P:System.Activities.Presentation.Hosting.ReadOnlyState.ItemType\n  id: ItemType\n  parent: System.Activities.Presentation.Hosting.ReadOnlyState\n  langs:\n  - csharp\n  name: ItemType\n  nameWithType: ReadOnlyState.ItemType\n  fullName: ReadOnlyState.ItemType\n  type: Property\n  assemblies:\n  - System.Activities.Presentation\n  namespace: System.Activities.Presentation.Hosting\n  summary: Gets the type of the current object.\n  syntax:\n    content: public override Type ItemType { get; }\n    return:\n      type: System.Type\n      description: Returns <xref href=\"System.Type\"></xref>.\n  overload: System.Activities.Presentation.Hosting.ReadOnlyState.ItemType*\n  exceptions: []\n  version:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Activities.Presentation.Hosting/ReadOnlyState.xml\n  ms.technology:\n  - dotnet-standard\n  author: Erikre\n  ms.author: erikre\n  manager: erikre\nreferences:\n- uid: System.Activities.Presentation.ContextItem\n  parent: System.Activities.Presentation\n  isExternal: false\n  name: ContextItem\n  nameWithType: ContextItem\n  fullName: System.Activities.Presentation.ContextItem\n- uid: System.Activities.Presentation.Hosting.ReadOnlyState.#ctor\n  parent: System.Activities.Presentation.Hosting.ReadOnlyState\n  isExternal: false\n  name: ReadOnlyState()\n  nameWithType: ReadOnlyState.ReadOnlyState()\n  fullName: ReadOnlyState.ReadOnlyState()\n- uid: System.Activities.Presentation.Hosting.ReadOnlyState.IsReadOnly\n  parent: System.Activities.Presentation.Hosting.ReadOnlyState\n  isExternal: false\n  name: IsReadOnly\n  nameWithType: ReadOnlyState.IsReadOnly\n  fullName: ReadOnlyState.IsReadOnly\n- uid: System.Boolean\n  parent: System\n  isExternal: false\n  name: Boolean\n  nameWithType: Boolean\n  fullName: System.Boolean\n- uid: System.Activities.Presentation.Hosting.ReadOnlyState.ItemType\n  parent: System.Activities.Presentation.Hosting.ReadOnlyState\n  isExternal: false\n  name: ItemType\n  nameWithType: ReadOnlyState.ItemType\n  fullName: ReadOnlyState.ItemType\n- uid: System.Type\n  parent: System\n  isExternal: false\n  name: Type\n  nameWithType: Type\n  fullName: System.Type\n- uid: System.Activities.Presentation.Hosting.ReadOnlyState.#ctor*\n  parent: System.Activities.Presentation.Hosting.ReadOnlyState\n  isExternal: false\n  name: ReadOnlyState\n  nameWithType: ReadOnlyState.ReadOnlyState\n  fullName: ReadOnlyState.ReadOnlyState\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Activities.Presentation.Hosting/ReadOnlyState.xml\n- uid: System.Activities.Presentation.Hosting.ReadOnlyState.IsReadOnly*\n  parent: System.Activities.Presentation.Hosting.ReadOnlyState\n  isExternal: false\n  name: IsReadOnly\n  nameWithType: ReadOnlyState.IsReadOnly\n  fullName: ReadOnlyState.IsReadOnly\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Activities.Presentation.Hosting/ReadOnlyState.xml\n- uid: System.Activities.Presentation.Hosting.ReadOnlyState.ItemType*\n  parent: System.Activities.Presentation.Hosting.ReadOnlyState\n  isExternal: false\n  name: ItemType\n  nameWithType: ReadOnlyState.ItemType\n  fullName: ReadOnlyState.ItemType\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Activities.Presentation.Hosting/ReadOnlyState.xml\n- uid: System.Object.Equals(System.Object)\n  parent: System.Object\n  isExternal: false\n  name: Equals(Object)\n  nameWithType: Object.Equals(Object)\n  fullName: Object.Equals(Object)\n- uid: System.Object.Equals(System.Object,System.Object)\n  parent: System.Object\n  isExternal: false\n  name: Equals(Object, Object)\n  nameWithType: Object.Equals(Object, Object)\n  fullName: Object.Equals(Object, Object)\n- uid: System.Object.GetHashCode\n  parent: System.Object\n  isExternal: false\n  name: GetHashCode()\n  nameWithType: Object.GetHashCode()\n  fullName: Object.GetHashCode()\n- uid: System.Object.GetType\n  parent: System.Object\n  isExternal: false\n  name: GetType()\n  nameWithType: Object.GetType()\n  fullName: Object.GetType()\n- uid: System.Object.MemberwiseClone\n  parent: System.Object\n  isExternal: false\n  name: MemberwiseClone()\n  nameWithType: Object.MemberwiseClone()\n  fullName: Object.MemberwiseClone()\n- uid: System.Object.ReferenceEquals(System.Object,System.Object)\n  parent: System.Object\n  isExternal: false\n  name: ReferenceEquals(Object, Object)\n  nameWithType: Object.ReferenceEquals(Object, Object)\n  fullName: Object.ReferenceEquals(Object, Object)\n- uid: System.Object.ToString\n  parent: System.Object\n  isExternal: false\n  name: ToString()\n  nameWithType: Object.ToString()\n  fullName: Object.ToString()\n- uid: System.Activities.Presentation.ContextItem.OnItemChanged(System.Activities.Presentation.EditingContext,System.Activities.Presentation.ContextItem)\n  parent: System.Activities.Presentation.ContextItem\n  isExternal: false\n  name: OnItemChanged(EditingContext, ContextItem)\n  nameWithType: ContextItem.OnItemChanged(EditingContext, ContextItem)\n  fullName: ContextItem.OnItemChanged(EditingContext, ContextItem)\n"}