{"nodes":[{"content":"Specifies all the hash algorithms used for hashing files and for generating the strong name.","nodes":[{"pos":[0,92],"content":"Specifies all the hash algorithms used for hashing files and for generating the strong name.","nodes":[{"content":"Specifies all the hash algorithms used for hashing files and for generating the strong name.","pos":[0,92]}]}],"pos":[874,967],"yaml":true},{"content":"A `hash function``H` is a transformation that takes an input `m` and returns a fixed-size string, which is called the hash value `h` (that is, `h` = `H` (`m`)). Hash functions with just this property have a variety of general computational uses, but when employed in cryptography, the hash functions are usually chosen to have some additional properties.  \n  \n The basic requirements for a cryptographic hash function are:  \n  \n-   The input can be of any length.  \n  \n-   The output has a fixed length.  \n  \n-   `H` (`x)` is relatively easy to compute for any given x.  \n  \n-   `H` (`x`) is one-way.  \n  \n-   `H` (`x`) is collision-free.  \n  \n The hash value represents concisely the longer message or document from which it was computed; this value is called the message digest. You can think of a message digest as a digital fingerprint of the larger document. Examples of well-known hash functions are MD2 and and SHA.","nodes":[{"pos":[0,354],"content":"A `hash function``H` is a transformation that takes an input `m` and returns a fixed-size string, which is called the hash value `h` (that is, `h` = `H` (`m`)). Hash functions with just this property have a variety of general computational uses, but when employed in cryptography, the hash functions are usually chosen to have some additional properties.","nodes":[{"content":"A <ph id=\"ph1\">`hash function``H`</ph> is a transformation that takes an input <ph id=\"ph2\">`m`</ph> and returns a fixed-size string, which is called the hash value <ph id=\"ph3\">`h`</ph> (that is, <ph id=\"ph4\">`h`</ph><ph id=\"ph5\"> = </ph><ph id=\"ph6\">`H`</ph> (<ph id=\"ph7\">`m`</ph>)).","pos":[0,160],"source":"A `hash function``H` is a transformation that takes an input `m` and returns a fixed-size string, which is called the hash value `h` (that is, `h` = `H` (`m`))."},{"content":"Hash functions with just this property have a variety of general computational uses, but when employed in cryptography, the hash functions are usually chosen to have some additional properties.","pos":[161,354]}]},{"pos":[361,422],"content":"The basic requirements for a cryptographic hash function are:","nodes":[{"content":"The basic requirements for a cryptographic hash function are:","pos":[0,61]}]},{"pos":[432,463],"content":"The input can be of any length.","nodes":[{"content":"The input can be of any length.","pos":[0,31]}]},{"pos":[473,503],"content":"The output has a fixed length.","nodes":[{"content":"The output has a fixed length.","pos":[0,30]}]},{"pos":[513,569],"content":"<ph id=\"ph1\">`H`</ph> (<ph id=\"ph2\">`x)`</ph> is relatively easy to compute for any given x.","source":"`H` (`x)` is relatively easy to compute for any given x."},{"pos":[579,600],"content":"<ph id=\"ph1\">`H`</ph> (<ph id=\"ph2\">`x`</ph>) is one-way.","source":"`H` (`x`) is one-way."},{"pos":[610,638],"content":"<ph id=\"ph1\">`H`</ph> (<ph id=\"ph2\">`x`</ph>) is collision-free.","source":"`H` (`x`) is collision-free."},{"pos":[645,922],"content":"The hash value represents concisely the longer message or document from which it was computed; this value is called the message digest. You can think of a message digest as a digital fingerprint of the larger document. Examples of well-known hash functions are MD2 and and SHA.","nodes":[{"content":"The hash value represents concisely the longer message or document from which it was computed; this value is called the message digest. You can think of a message digest as a digital fingerprint of the larger document. Examples of well-known hash functions are MD2 and and SHA.","pos":[0,277],"nodes":[{"content":"The hash value represents concisely the longer message or document from which it was computed; this value is called the message digest.","pos":[0,135]},{"content":"You can think of a message digest as a digital fingerprint of the larger document.","pos":[136,218]},{"content":"Examples of well-known hash functions are MD2 and and SHA.","pos":[219,277]}]}]}],"pos":[978,1917],"yaml":true,"extradata":"MT"},{"content":"Retrieves the MD5 message-digest algorithm. MD5 was developed by Rivest in 1991. It is basically MD4 with safety-belts and while it is slightly slower than MD4, it helps provide more security. The algorithm consists of four distinct rounds, which has a slightly different design from that of MD4. Message-digest size, as well as padding requirements, remain the same.","nodes":[{"pos":[0,367],"content":"Retrieves the MD5 message-digest algorithm. MD5 was developed by Rivest in 1991. It is basically MD4 with safety-belts and while it is slightly slower than MD4, it helps provide more security. The algorithm consists of four distinct rounds, which has a slightly different design from that of MD4. Message-digest size, as well as padding requirements, remain the same.","nodes":[{"content":"Retrieves the MD5 message-digest algorithm. MD5 was developed by Rivest in 1991. It is basically MD4 with safety-belts and while it is slightly slower than MD4, it helps provide more security. The algorithm consists of four distinct rounds, which has a slightly different design from that of MD4. Message-digest size, as well as padding requirements, remain the same.","pos":[0,367],"nodes":[{"content":"Retrieves the MD5 message-digest algorithm.","pos":[0,43]},{"content":"MD5 was developed by Rivest in 1991.","pos":[44,80]},{"content":"It is basically MD4 with safety-belts and while it is slightly slower than MD4, it helps provide more security.","pos":[81,192]},{"content":"The algorithm consists of four distinct rounds, which has a slightly different design from that of MD4.","pos":[193,296]},{"content":"Message-digest size, as well as padding requirements, remain the same.","pos":[297,367]}]}]}],"pos":[3391,3759],"yaml":true},{"content":"A mask indicating that there is no hash algorithm. If you specify `None` for a multi-module assembly, the common language runtime defaults to the SHA1 algorithm, since multi-module assemblies need to generate a hash.","nodes":[{"pos":[0,216],"content":"A mask indicating that there is no hash algorithm. If you specify `None` for a multi-module assembly, the common language runtime defaults to the SHA1 algorithm, since multi-module assemblies need to generate a hash.","nodes":[{"content":"A mask indicating that there is no hash algorithm.","pos":[0,50]},{"content":"If you specify <ph id=\"ph1\">`None`</ph> for a multi-module assembly, the common language runtime defaults to the SHA1 algorithm, since multi-module assemblies need to generate a hash.","pos":[51,216],"source":" If you specify `None` for a multi-module assembly, the common language runtime defaults to the SHA1 algorithm, since multi-module assemblies need to generate a hash."}]}],"pos":[5018,5235],"yaml":true},{"content":"A mask used to retrieve a revision of the Secure Hash Algorithm that corrects an unpublished flaw in SHA.","nodes":[{"pos":[0,105],"content":"A mask used to retrieve a revision of the Secure Hash Algorithm that corrects an unpublished flaw in SHA.","nodes":[{"content":"A mask used to retrieve a revision of the Secure Hash Algorithm that corrects an unpublished flaw in SHA.","pos":[0,105]}]}],"pos":[6495,6601],"yaml":true},{"content":"A mask used to retrieve a version of the Secure Hash Algorithm with a hash size of 256 bits.","nodes":[{"pos":[0,92],"content":"A mask used to retrieve a version of the Secure Hash Algorithm with a hash size of 256 bits.","nodes":[{"content":"A mask used to retrieve a version of the Secure Hash Algorithm with a hash size of 256 bits.","pos":[0,92]}]}],"pos":[7873,7966],"yaml":true},{"content":"A mask used to retrieve a version of the Secure Hash Algorithm with a hash size of 384 bits.","nodes":[{"pos":[0,92],"content":"A mask used to retrieve a version of the Secure Hash Algorithm with a hash size of 384 bits.","nodes":[{"content":"A mask used to retrieve a version of the Secure Hash Algorithm with a hash size of 384 bits.","pos":[0,92]}]}],"pos":[9240,9333],"yaml":true},{"content":"A mask used to retrieve a version of the Secure Hash Algorithm with a hash size of 512 bits.","nodes":[{"pos":[0,92],"content":"A mask used to retrieve a version of the Secure Hash Algorithm with a hash size of 512 bits.","nodes":[{"content":"A mask used to retrieve a version of the Secure Hash Algorithm with a hash size of 512 bits.","pos":[0,92]}]}],"pos":[10607,10700],"yaml":true}],"content":"### YamlMime:ManagedReference\nitems:\n- uid: System.Configuration.Assemblies.AssemblyHashAlgorithm\n  commentId: T:System.Configuration.Assemblies.AssemblyHashAlgorithm\n  id: AssemblyHashAlgorithm\n  children:\n  - System.Configuration.Assemblies.AssemblyHashAlgorithm.MD5\n  - System.Configuration.Assemblies.AssemblyHashAlgorithm.None\n  - System.Configuration.Assemblies.AssemblyHashAlgorithm.SHA1\n  - System.Configuration.Assemblies.AssemblyHashAlgorithm.SHA256\n  - System.Configuration.Assemblies.AssemblyHashAlgorithm.SHA384\n  - System.Configuration.Assemblies.AssemblyHashAlgorithm.SHA512\n  langs:\n  - csharp\n  name: AssemblyHashAlgorithm\n  nameWithType: AssemblyHashAlgorithm\n  fullName: System.Configuration.Assemblies.AssemblyHashAlgorithm\n  type: Enum\n  assemblies:\n  - mscorlib\n  - netstandard\n  - System.Runtime\n  namespace: System.Configuration.Assemblies\n  summary: Specifies all the hash algorithms used for hashing files and for generating the strong name.\n  remarks: \"A `hash function``H` is a transformation that takes an input `m` and returns a fixed-size string, which is called the hash value `h` (that is, `h` = `H` (`m`)). Hash functions with just this property have a variety of general computational uses, but when employed in cryptography, the hash functions are usually chosen to have some additional properties.  \\n  \\n The basic requirements for a cryptographic hash function are:  \\n  \\n-   The input can be of any length.  \\n  \\n-   The output has a fixed length.  \\n  \\n-   `H` (`x)` is relatively easy to compute for any given x.  \\n  \\n-   `H` (`x`) is one-way.  \\n  \\n-   `H` (`x`) is collision-free.  \\n  \\n The hash value represents concisely the longer message or document from which it was computed; this value is called the message digest. You can think of a message digest as a digital fingerprint of the larger document. Examples of well-known hash functions are MD2 and and SHA.\"\n  syntax:\n    content: >-\n      [System.Runtime.InteropServices.ComVisible(true)]\n\n      public enum AssemblyHashAlgorithm\n  inheritance:\n  - System.Object\n  - System.ValueType\n  - System.Enum\n  attributes:\n  - type: System.Runtime.InteropServices.ComVisibleAttribute\n  version:\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - netstandard-2.0\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  monikers:\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - netstandard-2.0\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Configuration.Assemblies/AssemblyHashAlgorithm.xml\n  ms.technology:\n  - dotnet-standard\n  author: rpetrusha\n  ms.author: ronpet\n  manager: wpickett\n- uid: System.Configuration.Assemblies.AssemblyHashAlgorithm.MD5\n  commentId: F:System.Configuration.Assemblies.AssemblyHashAlgorithm.MD5\n  id: MD5\n  parent: System.Configuration.Assemblies.AssemblyHashAlgorithm\n  langs:\n  - csharp\n  name: MD5\n  nameWithType: AssemblyHashAlgorithm.MD5\n  fullName: AssemblyHashAlgorithm.MD5\n  type: Field\n  assemblies:\n  - mscorlib\n  - netstandard\n  - System.Runtime\n  namespace: System.Configuration.Assemblies\n  summary: Retrieves the MD5 message-digest algorithm. MD5 was developed by Rivest in 1991. It is basically MD4 with safety-belts and while it is slightly slower than MD4, it helps provide more security. The algorithm consists of four distinct rounds, which has a slightly different design from that of MD4. Message-digest size, as well as padding requirements, remain the same.\n  syntax:\n    content: MD5\n    return:\n      type: System.Configuration.Assemblies.AssemblyHashAlgorithm\n      description: ''\n  exceptions: []\n  version:\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - netstandard-2.0\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  monikers:\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - netstandard-2.0\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Configuration.Assemblies/AssemblyHashAlgorithm.xml\n- uid: System.Configuration.Assemblies.AssemblyHashAlgorithm.None\n  commentId: F:System.Configuration.Assemblies.AssemblyHashAlgorithm.None\n  id: None\n  parent: System.Configuration.Assemblies.AssemblyHashAlgorithm\n  langs:\n  - csharp\n  name: None\n  nameWithType: AssemblyHashAlgorithm.None\n  fullName: AssemblyHashAlgorithm.None\n  type: Field\n  assemblies:\n  - mscorlib\n  - netstandard\n  - System.Runtime\n  namespace: System.Configuration.Assemblies\n  summary: A mask indicating that there is no hash algorithm. If you specify `None` for a multi-module assembly, the common language runtime defaults to the SHA1 algorithm, since multi-module assemblies need to generate a hash.\n  syntax:\n    content: None\n    return:\n      type: System.Configuration.Assemblies.AssemblyHashAlgorithm\n      description: ''\n  exceptions: []\n  version:\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - netstandard-2.0\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  monikers:\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - netstandard-2.0\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Configuration.Assemblies/AssemblyHashAlgorithm.xml\n- uid: System.Configuration.Assemblies.AssemblyHashAlgorithm.SHA1\n  commentId: F:System.Configuration.Assemblies.AssemblyHashAlgorithm.SHA1\n  id: SHA1\n  parent: System.Configuration.Assemblies.AssemblyHashAlgorithm\n  langs:\n  - csharp\n  name: SHA1\n  nameWithType: AssemblyHashAlgorithm.SHA1\n  fullName: AssemblyHashAlgorithm.SHA1\n  type: Field\n  assemblies:\n  - mscorlib\n  - netstandard\n  - System.Runtime\n  namespace: System.Configuration.Assemblies\n  summary: A mask used to retrieve a revision of the Secure Hash Algorithm that corrects an unpublished flaw in SHA.\n  syntax:\n    content: SHA1\n    return:\n      type: System.Configuration.Assemblies.AssemblyHashAlgorithm\n      description: ''\n  exceptions: []\n  version:\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - netstandard-2.0\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  monikers:\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - netstandard-2.0\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Configuration.Assemblies/AssemblyHashAlgorithm.xml\n- uid: System.Configuration.Assemblies.AssemblyHashAlgorithm.SHA256\n  commentId: F:System.Configuration.Assemblies.AssemblyHashAlgorithm.SHA256\n  id: SHA256\n  parent: System.Configuration.Assemblies.AssemblyHashAlgorithm\n  langs:\n  - csharp\n  name: SHA256\n  nameWithType: AssemblyHashAlgorithm.SHA256\n  fullName: AssemblyHashAlgorithm.SHA256\n  type: Field\n  assemblies:\n  - mscorlib\n  - netstandard\n  - System.Runtime\n  namespace: System.Configuration.Assemblies\n  summary: A mask used to retrieve a version of the Secure Hash Algorithm with a hash size of 256 bits.\n  syntax:\n    content: SHA256\n    return:\n      type: System.Configuration.Assemblies.AssemblyHashAlgorithm\n      description: ''\n  exceptions: []\n  version:\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - netstandard-2.0\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  monikers:\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - netstandard-2.0\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Configuration.Assemblies/AssemblyHashAlgorithm.xml\n- uid: System.Configuration.Assemblies.AssemblyHashAlgorithm.SHA384\n  commentId: F:System.Configuration.Assemblies.AssemblyHashAlgorithm.SHA384\n  id: SHA384\n  parent: System.Configuration.Assemblies.AssemblyHashAlgorithm\n  langs:\n  - csharp\n  name: SHA384\n  nameWithType: AssemblyHashAlgorithm.SHA384\n  fullName: AssemblyHashAlgorithm.SHA384\n  type: Field\n  assemblies:\n  - mscorlib\n  - netstandard\n  - System.Runtime\n  namespace: System.Configuration.Assemblies\n  summary: A mask used to retrieve a version of the Secure Hash Algorithm with a hash size of 384 bits.\n  syntax:\n    content: SHA384\n    return:\n      type: System.Configuration.Assemblies.AssemblyHashAlgorithm\n      description: ''\n  exceptions: []\n  version:\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - netstandard-2.0\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  monikers:\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - netstandard-2.0\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Configuration.Assemblies/AssemblyHashAlgorithm.xml\n- uid: System.Configuration.Assemblies.AssemblyHashAlgorithm.SHA512\n  commentId: F:System.Configuration.Assemblies.AssemblyHashAlgorithm.SHA512\n  id: SHA512\n  parent: System.Configuration.Assemblies.AssemblyHashAlgorithm\n  langs:\n  - csharp\n  name: SHA512\n  nameWithType: AssemblyHashAlgorithm.SHA512\n  fullName: AssemblyHashAlgorithm.SHA512\n  type: Field\n  assemblies:\n  - mscorlib\n  - netstandard\n  - System.Runtime\n  namespace: System.Configuration.Assemblies\n  summary: A mask used to retrieve a version of the Secure Hash Algorithm with a hash size of 512 bits.\n  syntax:\n    content: SHA512\n    return:\n      type: System.Configuration.Assemblies.AssemblyHashAlgorithm\n      description: ''\n  exceptions: []\n  version:\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - netstandard-2.0\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  monikers:\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - netstandard-2.0\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Configuration.Assemblies/AssemblyHashAlgorithm.xml\nreferences:\n- uid: System.Enum\n  parent: System\n  isExternal: false\n  name: Enum\n  nameWithType: Enum\n  fullName: System.Enum\n- uid: System.Configuration.Assemblies.AssemblyHashAlgorithm.MD5\n  parent: System.Configuration.Assemblies.AssemblyHashAlgorithm\n  isExternal: false\n  name: MD5\n  nameWithType: AssemblyHashAlgorithm.MD5\n  fullName: AssemblyHashAlgorithm.MD5\n- uid: System.Configuration.Assemblies.AssemblyHashAlgorithm\n  parent: System.Configuration.Assemblies\n  isExternal: false\n  name: AssemblyHashAlgorithm\n  nameWithType: AssemblyHashAlgorithm\n  fullName: System.Configuration.Assemblies.AssemblyHashAlgorithm\n- uid: System.Configuration.Assemblies.AssemblyHashAlgorithm.None\n  parent: System.Configuration.Assemblies.AssemblyHashAlgorithm\n  isExternal: false\n  name: None\n  nameWithType: AssemblyHashAlgorithm.None\n  fullName: AssemblyHashAlgorithm.None\n- uid: System.Configuration.Assemblies.AssemblyHashAlgorithm.SHA1\n  parent: System.Configuration.Assemblies.AssemblyHashAlgorithm\n  isExternal: false\n  name: SHA1\n  nameWithType: AssemblyHashAlgorithm.SHA1\n  fullName: AssemblyHashAlgorithm.SHA1\n- uid: System.Configuration.Assemblies.AssemblyHashAlgorithm.SHA256\n  parent: System.Configuration.Assemblies.AssemblyHashAlgorithm\n  isExternal: false\n  name: SHA256\n  nameWithType: AssemblyHashAlgorithm.SHA256\n  fullName: AssemblyHashAlgorithm.SHA256\n- uid: System.Configuration.Assemblies.AssemblyHashAlgorithm.SHA384\n  parent: System.Configuration.Assemblies.AssemblyHashAlgorithm\n  isExternal: false\n  name: SHA384\n  nameWithType: AssemblyHashAlgorithm.SHA384\n  fullName: AssemblyHashAlgorithm.SHA384\n- uid: System.Configuration.Assemblies.AssemblyHashAlgorithm.SHA512\n  parent: System.Configuration.Assemblies.AssemblyHashAlgorithm\n  isExternal: false\n  name: SHA512\n  nameWithType: AssemblyHashAlgorithm.SHA512\n  fullName: AssemblyHashAlgorithm.SHA512\n"}