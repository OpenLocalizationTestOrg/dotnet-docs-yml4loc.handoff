{"nodes":[{"content":"Manages a collection of <xref href=\"System.ComponentModel.Design.DesignSurface\"></xref> objects.","nodes":[{"pos":[0,96],"content":"Manages a collection of <ph id=\"ph1\">&lt;xref href=\"System.ComponentModel.Design.DesignSurface\"&gt;&lt;/xref&gt;</ph> objects.","source":"Manages a collection of <xref href=\"System.ComponentModel.Design.DesignSurface\"></xref> objects."}],"pos":[1600,1697],"yaml":true},{"content":"The <xref:System.ComponentModel.Design.DesignSurfaceManager> class is designed to be a container of <xref:System.ComponentModel.Design.DesignSurface> objects. It provides common services that handle event routing between designers, property windows, and other global objects. Using <xref:System.ComponentModel.Design.DesignSurfaceManager> is optional, but it is recommended if you intend to have several designer windows.  \n  \n The <xref:System.ComponentModel.Design.DesignSurfaceManager> class provides several design-time services automatically. You can override each of these services by replacing them in the protected <xref:System.ComponentModel.Design.DesignSurfaceManager.ServiceContainer%2A> property. To replace a service, override the constructor, call base, and make any changes through the protected <xref:System.ComponentModel.Design.DesignSurfaceManager.ServiceContainer%2A> property. All services added to the service container that implement the <xref:System.IDisposable> interface are disposed when the design surface manager is disposed. The <xref:System.ComponentModel.Design.DesignSurfaceManager> class provides the <xref:System.ComponentModel.Design.IDesignerEventService> interface as the default service. <xref:System.ComponentModel.Design.IDesignerEventService> provides a global eventing mechanism for designer events. With this mechanism, an application is informed when a designer becomes active. The service provides a collection of designers and a single place where global objects, such as the Properties window, can monitor selection change events.","nodes":[{"pos":[0,421],"content":"The <xref:System.ComponentModel.Design.DesignSurfaceManager> class is designed to be a container of <xref:System.ComponentModel.Design.DesignSurface> objects. It provides common services that handle event routing between designers, property windows, and other global objects. Using <xref:System.ComponentModel.Design.DesignSurfaceManager> is optional, but it is recommended if you intend to have several designer windows.","nodes":[{"content":"The <xref:System.ComponentModel.Design.DesignSurfaceManager> class is designed to be a container of <xref:System.ComponentModel.Design.DesignSurface> objects. It provides common services that handle event routing between designers, property windows, and other global objects. Using <xref:System.ComponentModel.Design.DesignSurfaceManager> is optional, but it is recommended if you intend to have several designer windows.","pos":[0,421],"nodes":[{"content":"The <ph id=\"ph1\">&lt;xref:System.ComponentModel.Design.DesignSurfaceManager&gt;</ph> class is designed to be a container of <ph id=\"ph2\">&lt;xref:System.ComponentModel.Design.DesignSurface&gt;</ph> objects.","pos":[0,158],"source":"The <xref:System.ComponentModel.Design.DesignSurfaceManager> class is designed to be a container of <xref:System.ComponentModel.Design.DesignSurface> objects."},{"content":"It provides common services that handle event routing between designers, property windows, and other global objects.","pos":[159,275]},{"content":"Using <ph id=\"ph1\">&lt;xref:System.ComponentModel.Design.DesignSurfaceManager&gt;</ph> is optional, but it is recommended if you intend to have several designer windows.","pos":[276,421],"source":" Using <xref:System.ComponentModel.Design.DesignSurfaceManager> is optional, but it is recommended if you intend to have several designer windows."}]}]},{"pos":[428,1579],"content":"The <xref:System.ComponentModel.Design.DesignSurfaceManager> class provides several design-time services automatically. You can override each of these services by replacing them in the protected <xref:System.ComponentModel.Design.DesignSurfaceManager.ServiceContainer%2A> property. To replace a service, override the constructor, call base, and make any changes through the protected <xref:System.ComponentModel.Design.DesignSurfaceManager.ServiceContainer%2A> property. All services added to the service container that implement the <xref:System.IDisposable> interface are disposed when the design surface manager is disposed. The <xref:System.ComponentModel.Design.DesignSurfaceManager> class provides the <xref:System.ComponentModel.Design.IDesignerEventService> interface as the default service. <xref:System.ComponentModel.Design.IDesignerEventService> provides a global eventing mechanism for designer events. With this mechanism, an application is informed when a designer becomes active. The service provides a collection of designers and a single place where global objects, such as the Properties window, can monitor selection change events.","nodes":[{"content":"The <xref:System.ComponentModel.Design.DesignSurfaceManager> class provides several design-time services automatically. You can override each of these services by replacing them in the protected <xref:System.ComponentModel.Design.DesignSurfaceManager.ServiceContainer%2A> property. To replace a service, override the constructor, call base, and make any changes through the protected <xref:System.ComponentModel.Design.DesignSurfaceManager.ServiceContainer%2A> property. All services added to the service container that implement the <xref:System.IDisposable> interface are disposed when the design surface manager is disposed. The <xref:System.ComponentModel.Design.DesignSurfaceManager> class provides the <xref:System.ComponentModel.Design.IDesignerEventService> interface as the default service. <xref:System.ComponentModel.Design.IDesignerEventService> provides a global eventing mechanism for designer events. With this mechanism, an application is informed when a designer becomes active. The service provides a collection of designers and a single place where global objects, such as the Properties window, can monitor selection change events.","pos":[0,1151],"nodes":[{"content":"The <ph id=\"ph1\">&lt;xref:System.ComponentModel.Design.DesignSurfaceManager&gt;</ph> class provides several design-time services automatically.","pos":[0,119],"source":"The <xref:System.ComponentModel.Design.DesignSurfaceManager> class provides several design-time services automatically."},{"content":"You can override each of these services by replacing them in the protected <ph id=\"ph1\">&lt;xref:System.ComponentModel.Design.DesignSurfaceManager.ServiceContainer%2A&gt;</ph> property.","pos":[120,281],"source":" You can override each of these services by replacing them in the protected <xref:System.ComponentModel.Design.DesignSurfaceManager.ServiceContainer%2A> property."},{"content":"To replace a service, override the constructor, call base, and make any changes through the protected <ph id=\"ph1\">&lt;xref:System.ComponentModel.Design.DesignSurfaceManager.ServiceContainer%2A&gt;</ph> property.","pos":[282,470],"source":" To replace a service, override the constructor, call base, and make any changes through the protected <xref:System.ComponentModel.Design.DesignSurfaceManager.ServiceContainer%2A> property."},{"content":"All services added to the service container that implement the <ph id=\"ph1\">&lt;xref:System.IDisposable&gt;</ph> interface are disposed when the design surface manager is disposed.","pos":[471,627],"source":" All services added to the service container that implement the <xref:System.IDisposable> interface are disposed when the design surface manager is disposed."},{"content":"The <ph id=\"ph1\">&lt;xref:System.ComponentModel.Design.DesignSurfaceManager&gt;</ph> class provides the <ph id=\"ph2\">&lt;xref:System.ComponentModel.Design.IDesignerEventService&gt;</ph> interface as the default service.","pos":[628,799],"source":" The <xref:System.ComponentModel.Design.DesignSurfaceManager> class provides the <xref:System.ComponentModel.Design.IDesignerEventService> interface as the default service."},{"content":"<ph id=\"ph1\">&lt;xref:System.ComponentModel.Design.IDesignerEventService&gt;</ph> provides a global eventing mechanism for designer events.","pos":[800,915],"source":" <xref:System.ComponentModel.Design.IDesignerEventService> provides a global eventing mechanism for designer events."},{"content":"With this mechanism, an application is informed when a designer becomes active.","pos":[916,995]},{"content":"The service provides a collection of designers and a single place where global objects, such as the Properties window, can monitor selection change events.","pos":[996,1151]}]}]}],"pos":[1708,3292],"yaml":true,"extradata":"MT"},{"content":"Initializes a new instance of the <xref href=\"System.ComponentModel.Design.DesignSurfaceManager\"></xref> class.","nodes":[{"pos":[0,111],"content":"Initializes a new instance of the <ph id=\"ph1\">&lt;xref href=\"System.ComponentModel.Design.DesignSurfaceManager\"&gt;&lt;/xref&gt;</ph> class.","source":"Initializes a new instance of the <xref href=\"System.ComponentModel.Design.DesignSurfaceManager\"></xref> class."}],"pos":[4919,5031],"yaml":true},{"content":"Initializes a new instance of the <xref href=\"System.ComponentModel.Design.DesignSurfaceManager\"></xref> class.","nodes":[{"pos":[0,111],"content":"Initializes a new instance of the <ph id=\"ph1\">&lt;xref href=\"System.ComponentModel.Design.DesignSurfaceManager\"&gt;&lt;/xref&gt;</ph> class.","source":"Initializes a new instance of the <xref href=\"System.ComponentModel.Design.DesignSurfaceManager\"></xref> class."}],"pos":[6343,6455],"yaml":true},{"content":"A parent service provider. Service requests are forwarded to this provider if they cannot be resolved by the design surface manager.","nodes":[{"pos":[0,132],"content":"A parent service provider. Service requests are forwarded to this provider if they cannot be resolved by the design surface manager.","nodes":[{"content":"A parent service provider. Service requests are forwarded to this provider if they cannot be resolved by the design surface manager.","pos":[0,132],"nodes":[{"content":"A parent service provider.","pos":[0,26]},{"content":"Service requests are forwarded to this provider if they cannot be resolved by the design surface manager.","pos":[27,132]}]}]}],"pos":[6637,6770],"yaml":true},{"content":"Gets or sets the active designer.","nodes":[{"pos":[0,33],"content":"Gets or sets the active designer.","nodes":[{"content":"Gets or sets the active designer.","pos":[0,33]}]}],"pos":[7913,7947],"yaml":true},{"content":"The <xref:System.ComponentModel.Design.DesignSurfaceManager.ActiveDesignSurface%2A> property should be set by the designer's user interface whenever a designer becomes the active window. The default implementation of this property works with the default implementation of the <xref:System.ComponentModel.Design.IDesignerEventService> interface to notify interested parties that a new designer is now active. If you provide your own implementation of <xref:System.ComponentModel.Design.IDesignerEventService>, you should override this property to notify your service appropriately. This property can be set to `null`, indicating that no designer is active.","nodes":[{"pos":[0,655],"content":"The <xref:System.ComponentModel.Design.DesignSurfaceManager.ActiveDesignSurface%2A> property should be set by the designer's user interface whenever a designer becomes the active window. The default implementation of this property works with the default implementation of the <xref:System.ComponentModel.Design.IDesignerEventService> interface to notify interested parties that a new designer is now active. If you provide your own implementation of <xref:System.ComponentModel.Design.IDesignerEventService>, you should override this property to notify your service appropriately. This property can be set to `null`, indicating that no designer is active.","nodes":[{"content":"The <ph id=\"ph1\">&lt;xref:System.ComponentModel.Design.DesignSurfaceManager.ActiveDesignSurface%2A&gt;</ph> property should be set by the designer's user interface whenever a designer becomes the active window.","pos":[0,186],"source":"The <xref:System.ComponentModel.Design.DesignSurfaceManager.ActiveDesignSurface%2A> property should be set by the designer's user interface whenever a designer becomes the active window."},{"content":"The default implementation of this property works with the default implementation of the <ph id=\"ph1\">&lt;xref:System.ComponentModel.Design.IDesignerEventService&gt;</ph> interface to notify interested parties that a new designer is now active.","pos":[187,407],"source":" The default implementation of this property works with the default implementation of the <xref:System.ComponentModel.Design.IDesignerEventService> interface to notify interested parties that a new designer is now active."},{"content":"If you provide your own implementation of <ph id=\"ph1\">&lt;xref:System.ComponentModel.Design.IDesignerEventService&gt;</ph>, you should override this property to notify your service appropriately.","pos":[408,580],"source":" If you provide your own implementation of <xref:System.ComponentModel.Design.IDesignerEventService>, you should override this property to notify your service appropriately."},{"content":"This property can be set to <ph id=\"ph1\">`null`</ph>, indicating that no designer is active.","pos":[581,655],"source":" This property can be set to `null`, indicating that no designer is active."}]}],"pos":[7958,8614],"yaml":true,"extradata":"MT"},{"content":"The active designer.","nodes":[{"pos":[0,20],"content":"The active designer.","nodes":[{"content":"The active designer.","pos":[0,20]}]}],"pos":[8815,8836],"yaml":true},{"content":"Occurs when the currently active designer changes.","nodes":[{"pos":[0,50],"content":"Occurs when the currently active designer changes.","nodes":[{"content":"Occurs when the currently active designer changes.","pos":[0,50]}]}],"pos":[10032,10083],"yaml":true},{"content":"Creates an instance of a design surface.","nodes":[{"pos":[0,40],"content":"Creates an instance of a design surface.","nodes":[{"content":"Creates an instance of a design surface.","pos":[0,40]}]}],"pos":[11407,11448],"yaml":true},{"content":"A new design surface instance.","nodes":[{"pos":[0,30],"content":"A new design surface instance.","nodes":[{"content":"A new design surface instance.","pos":[0,30]}]}],"pos":[11650,11681],"yaml":true},{"content":"Creates an instance of a design surface.","nodes":[{"pos":[0,40],"content":"Creates an instance of a design surface.","nodes":[{"content":"Creates an instance of a design surface.","pos":[0,40]}]}],"pos":[12965,13006],"yaml":true},{"content":"If you want to conveniently add additional per-designer services, use the `parentProvider` parameter to provide a service provider for this design surface. The <xref:System.ComponentModel.Design.DesignSurfaceManager.CreateDesignSurface%2A> method creates a merged service provider that can satisfy service requests from both the given service provider as well as the <xref:System.ComponentModel.Design.DesignSurfaceManager> itself. The <xref:System.ComponentModel.Design.DesignSurfaceManager.CreateDesignSurface%2A> method then passes this service provider into the <xref:System.ComponentModel.Design.DesignSurfaceManager.CreateDesignSurfaceCore%2A> method.  \n  \n After <xref:System.ComponentModel.Design.DesignSurfaceManager.CreateDesignSurfaceCore%2A> returns the design surface, the <xref:System.ComponentModel.Design.DesignSurfaceManager.CreateDesignSurface%2A> method tries to obtain the <xref:System.ComponentModel.Design.IDesignerEventService>. If it is present, and if it is the instance of the service that <xref:System.ComponentModel.Design.DesignSurfaceManager> provided by default, the <xref:System.ComponentModel.Design.DesignSurfaceManager.CreateDesignSurface%2A> method raises the <xref:System.ComponentModel.Design.IDesignerEventService.DesignerCreated> event.","nodes":[{"pos":[0,657],"content":"If you want to conveniently add additional per-designer services, use the `parentProvider` parameter to provide a service provider for this design surface. The <xref:System.ComponentModel.Design.DesignSurfaceManager.CreateDesignSurface%2A> method creates a merged service provider that can satisfy service requests from both the given service provider as well as the <xref:System.ComponentModel.Design.DesignSurfaceManager> itself. The <xref:System.ComponentModel.Design.DesignSurfaceManager.CreateDesignSurface%2A> method then passes this service provider into the <xref:System.ComponentModel.Design.DesignSurfaceManager.CreateDesignSurfaceCore%2A> method.","nodes":[{"content":"If you want to conveniently add additional per-designer services, use the <ph id=\"ph1\">`parentProvider`</ph> parameter to provide a service provider for this design surface.","pos":[0,155],"source":"If you want to conveniently add additional per-designer services, use the `parentProvider` parameter to provide a service provider for this design surface."},{"content":"The <ph id=\"ph1\">&lt;xref:System.ComponentModel.Design.DesignSurfaceManager.CreateDesignSurface%2A&gt;</ph> method creates a merged service provider that can satisfy service requests from both the given service provider as well as the <ph id=\"ph2\">&lt;xref:System.ComponentModel.Design.DesignSurfaceManager&gt;</ph> itself.","pos":[156,431],"source":" The <xref:System.ComponentModel.Design.DesignSurfaceManager.CreateDesignSurface%2A> method creates a merged service provider that can satisfy service requests from both the given service provider as well as the <xref:System.ComponentModel.Design.DesignSurfaceManager> itself."},{"content":"The <ph id=\"ph1\">&lt;xref:System.ComponentModel.Design.DesignSurfaceManager.CreateDesignSurface%2A&gt;</ph> method then passes this service provider into the <ph id=\"ph2\">&lt;xref:System.ComponentModel.Design.DesignSurfaceManager.CreateDesignSurfaceCore%2A&gt;</ph> method.","pos":[432,657],"source":" The <xref:System.ComponentModel.Design.DesignSurfaceManager.CreateDesignSurface%2A> method then passes this service provider into the <xref:System.ComponentModel.Design.DesignSurfaceManager.CreateDesignSurfaceCore%2A> method."}]},{"pos":[664,1276],"content":"After <xref:System.ComponentModel.Design.DesignSurfaceManager.CreateDesignSurfaceCore%2A> returns the design surface, the <xref:System.ComponentModel.Design.DesignSurfaceManager.CreateDesignSurface%2A> method tries to obtain the <xref:System.ComponentModel.Design.IDesignerEventService>. If it is present, and if it is the instance of the service that <xref:System.ComponentModel.Design.DesignSurfaceManager> provided by default, the <xref:System.ComponentModel.Design.DesignSurfaceManager.CreateDesignSurface%2A> method raises the <xref:System.ComponentModel.Design.IDesignerEventService.DesignerCreated> event.","nodes":[{"content":"After <xref:System.ComponentModel.Design.DesignSurfaceManager.CreateDesignSurfaceCore%2A> returns the design surface, the <xref:System.ComponentModel.Design.DesignSurfaceManager.CreateDesignSurface%2A> method tries to obtain the <xref:System.ComponentModel.Design.IDesignerEventService>. If it is present, and if it is the instance of the service that <xref:System.ComponentModel.Design.DesignSurfaceManager> provided by default, the <xref:System.ComponentModel.Design.DesignSurfaceManager.CreateDesignSurface%2A> method raises the <xref:System.ComponentModel.Design.IDesignerEventService.DesignerCreated> event.","pos":[0,612],"nodes":[{"content":"After <ph id=\"ph1\">&lt;xref:System.ComponentModel.Design.DesignSurfaceManager.CreateDesignSurfaceCore%2A&gt;</ph> returns the design surface, the <ph id=\"ph2\">&lt;xref:System.ComponentModel.Design.DesignSurfaceManager.CreateDesignSurface%2A&gt;</ph> method tries to obtain the <ph id=\"ph3\">&lt;xref:System.ComponentModel.Design.IDesignerEventService&gt;</ph>.","pos":[0,287],"source":"After <xref:System.ComponentModel.Design.DesignSurfaceManager.CreateDesignSurfaceCore%2A> returns the design surface, the <xref:System.ComponentModel.Design.DesignSurfaceManager.CreateDesignSurface%2A> method tries to obtain the <xref:System.ComponentModel.Design.IDesignerEventService>."},{"content":"If it is present, and if it is the instance of the service that <ph id=\"ph1\">&lt;xref:System.ComponentModel.Design.DesignSurfaceManager&gt;</ph> provided by default, the <ph id=\"ph2\">&lt;xref:System.ComponentModel.Design.DesignSurfaceManager.CreateDesignSurface%2A&gt;</ph> method raises the <ph id=\"ph3\">&lt;xref:System.ComponentModel.Design.IDesignerEventService.DesignerCreated&gt;</ph> event.","pos":[288,612],"source":" If it is present, and if it is the instance of the service that <xref:System.ComponentModel.Design.DesignSurfaceManager> provided by default, the <xref:System.ComponentModel.Design.DesignSurfaceManager.CreateDesignSurface%2A> method raises the <xref:System.ComponentModel.Design.IDesignerEventService.DesignerCreated> event."}]}]}],"pos":[13017,14298],"yaml":true,"extradata":"MT"},{"content":"A parent service provider. A new merged service provider will be created that will first ask this provider for a service, and then delegate any failures to the design surface manager object. This merged provider will be passed into the <xref href=\"System.ComponentModel.Design.DesignSurfaceManager.CreateDesignSurfaceCore(System.IServiceProvider)\"></xref> method.","nodes":[{"pos":[0,363],"content":"A parent service provider. A new merged service provider will be created that will first ask this provider for a service, and then delegate any failures to the design surface manager object. This merged provider will be passed into the <xref href=\"System.ComponentModel.Design.DesignSurfaceManager.CreateDesignSurfaceCore(System.IServiceProvider)\"></xref> method.","nodes":[{"content":"A parent service provider.","pos":[0,26]},{"content":"A new merged service provider will be created that will first ask this provider for a service, and then delegate any failures to the design surface manager object.","pos":[27,190]},{"content":"This merged provider will be passed into the <ph id=\"ph1\">&lt;xref href=\"System.ComponentModel.Design.DesignSurfaceManager.CreateDesignSurfaceCore(System.IServiceProvider)\"&gt;&lt;/xref&gt;</ph> method.","pos":[191,363],"source":" This merged provider will be passed into the <xref href=\"System.ComponentModel.Design.DesignSurfaceManager.CreateDesignSurfaceCore(System.IServiceProvider)\"></xref> method."}]}],"pos":[14522,14886],"yaml":true},{"content":"A new design surface instance.","nodes":[{"pos":[0,30],"content":"A new design surface instance.","nodes":[{"content":"A new design surface instance.","pos":[0,30]}]}],"pos":[14972,15003],"yaml":true},{"content":"<code>parentProvider</code> is `null`.","nodes":[{"pos":[0,38],"content":"<ph id=\"ph1\">&lt;code&gt;parentProvider&lt;/code&gt;</ph> is <ph id=\"ph2\">`null`</ph>.","source":"<code>parentProvider</code> is `null`."}],"pos":[15202,15241],"yaml":true},{"content":"Implementation that creates the design surface.","nodes":[{"pos":[0,47],"content":"Implementation that creates the design surface.","nodes":[{"content":"Implementation that creates the design surface.","pos":[0,47]}]}],"pos":[16449,16497],"yaml":true},{"content":"The <xref:System.ComponentModel.Design.DesignSurfaceManager.CreateDesignSurfaceCore%2A> method is called by both <xref:System.ComponentModel.Design.DesignSurfaceManager.CreateDesignSurface%2A> methods. It is the implementation that actually creates the design surface. The default implementation just returns a new <xref:System.ComponentModel.Design.DesignSurface>. You may override this method to provide a custom object that derives from the <xref:System.ComponentModel.Design.DesignSurface> class.","nodes":[{"pos":[0,500],"content":"The <xref:System.ComponentModel.Design.DesignSurfaceManager.CreateDesignSurfaceCore%2A> method is called by both <xref:System.ComponentModel.Design.DesignSurfaceManager.CreateDesignSurface%2A> methods. It is the implementation that actually creates the design surface. The default implementation just returns a new <xref:System.ComponentModel.Design.DesignSurface>. You may override this method to provide a custom object that derives from the <xref:System.ComponentModel.Design.DesignSurface> class.","nodes":[{"content":"The <xref:System.ComponentModel.Design.DesignSurfaceManager.CreateDesignSurfaceCore%2A> method is called by both <xref:System.ComponentModel.Design.DesignSurfaceManager.CreateDesignSurface%2A> methods. It is the implementation that actually creates the design surface. The default implementation just returns a new <xref:System.ComponentModel.Design.DesignSurface>. You may override this method to provide a custom object that derives from the <xref:System.ComponentModel.Design.DesignSurface> class.","pos":[0,500],"nodes":[{"content":"The <ph id=\"ph1\">&lt;xref:System.ComponentModel.Design.DesignSurfaceManager.CreateDesignSurfaceCore%2A&gt;</ph> method is called by both <ph id=\"ph2\">&lt;xref:System.ComponentModel.Design.DesignSurfaceManager.CreateDesignSurface%2A&gt;</ph> methods.","pos":[0,201],"source":"The <xref:System.ComponentModel.Design.DesignSurfaceManager.CreateDesignSurfaceCore%2A> method is called by both <xref:System.ComponentModel.Design.DesignSurfaceManager.CreateDesignSurface%2A> methods."},{"content":"It is the implementation that actually creates the design surface.","pos":[202,268]},{"content":"The default implementation just returns a new <ph id=\"ph1\">&lt;xref:System.ComponentModel.Design.DesignSurface&gt;</ph>.","pos":[269,365],"source":" The default implementation just returns a new <xref:System.ComponentModel.Design.DesignSurface>."},{"content":"You may override this method to provide a custom object that derives from the <ph id=\"ph1\">&lt;xref:System.ComponentModel.Design.DesignSurface&gt;</ph> class.","pos":[366,500],"source":" You may override this method to provide a custom object that derives from the <xref:System.ComponentModel.Design.DesignSurface> class."}]}]}],"pos":[16508,17009],"yaml":true,"extradata":"MT"},{"content":"A service provider to pass to the design surface. This is either an instance of <xref href=\"System.ComponentModel.Design.DesignSurfaceManager\"></xref> or an object that implements <xref href=\"System.IServiceProvider\"></xref>, and represents a merge between the service provider of the <xref href=\"System.ComponentModel.Design.DesignSurfaceManager\"></xref> class and an externally passed provider.","nodes":[{"pos":[0,396],"content":"A service provider to pass to the design surface. This is either an instance of <xref href=\"System.ComponentModel.Design.DesignSurfaceManager\"></xref> or an object that implements <xref href=\"System.IServiceProvider\"></xref>, and represents a merge between the service provider of the <xref href=\"System.ComponentModel.Design.DesignSurfaceManager\"></xref> class and an externally passed provider.","nodes":[{"content":"A service provider to pass to the design surface.","pos":[0,49]},{"content":"This is either an instance of <ph id=\"ph1\">&lt;xref href=\"System.ComponentModel.Design.DesignSurfaceManager\"&gt;&lt;/xref&gt;</ph> or an object that implements <ph id=\"ph2\">&lt;xref href=\"System.IServiceProvider\"&gt;&lt;/xref&gt;</ph>, and represents a merge between the service provider of the <ph id=\"ph3\">&lt;xref href=\"System.ComponentModel.Design.DesignSurfaceManager\"&gt;&lt;/xref&gt;</ph> class and an externally passed provider.","pos":[50,396],"source":" This is either an instance of <xref href=\"System.ComponentModel.Design.DesignSurfaceManager\"></xref> or an object that implements <xref href=\"System.IServiceProvider\"></xref>, and represents a merge between the service provider of the <xref href=\"System.ComponentModel.Design.DesignSurfaceManager\"></xref> class and an externally passed provider."}]}],"pos":[17248,17645],"yaml":true},{"content":"A new design surface instance.","nodes":[{"pos":[0,30],"content":"A new design surface instance.","nodes":[{"content":"A new design surface instance.","pos":[0,30]}]}],"pos":[17731,17762],"yaml":true},{"content":"Occurs when a designer is created.","nodes":[{"pos":[0,34],"content":"Occurs when a designer is created.","nodes":[{"content":"Occurs when a designer is created.","pos":[0,34]}]}],"pos":[18926,18961],"yaml":true},{"content":"Occurs when a designer is disposed.","nodes":[{"pos":[0,35],"content":"Occurs when a designer is disposed.","nodes":[{"content":"Occurs when a designer is disposed.","pos":[0,35]}]}],"pos":[20258,20294],"yaml":true},{"content":"Gets a collection of design surfaces.","nodes":[{"pos":[0,37],"content":"Gets a collection of design surfaces.","nodes":[{"content":"Gets a collection of design surfaces.","pos":[0,37]}]}],"pos":[21553,21591],"yaml":true},{"content":"The <xref:System.ComponentModel.Design.DesignSurfaceManager.DesignSurfaces%2A> property is implemented directly on top of <xref:System.ComponentModel.Design.IDesignerEventService>, so if you provide your own implementation of that service, this property uses your implementation.","nodes":[{"pos":[0,279],"content":"The <xref:System.ComponentModel.Design.DesignSurfaceManager.DesignSurfaces%2A> property is implemented directly on top of <xref:System.ComponentModel.Design.IDesignerEventService>, so if you provide your own implementation of that service, this property uses your implementation.","nodes":[{"content":"The <ph id=\"ph1\">&lt;xref:System.ComponentModel.Design.DesignSurfaceManager.DesignSurfaces%2A&gt;</ph> property is implemented directly on top of <ph id=\"ph2\">&lt;xref:System.ComponentModel.Design.IDesignerEventService&gt;</ph>, so if you provide your own implementation of that service, this property uses your implementation.","pos":[0,279],"source":"The <xref:System.ComponentModel.Design.DesignSurfaceManager.DesignSurfaces%2A> property is implemented directly on top of <xref:System.ComponentModel.Design.IDesignerEventService>, so if you provide your own implementation of that service, this property uses your implementation."}]}],"pos":[21602,21882],"yaml":true,"extradata":"MT"},{"content":"A collection of design surfaces that are currently hosted by the design surface manager.","nodes":[{"pos":[0,88],"content":"A collection of design surfaces that are currently hosted by the design surface manager.","nodes":[{"content":"A collection of design surfaces that are currently hosted by the design surface manager.","pos":[0,88]}]}],"pos":[22085,22174],"yaml":true},{"content":"Releases the resources used by the <xref href=\"System.ComponentModel.Design.DesignSurfaceManager\"></xref>.","nodes":[{"pos":[0,106],"content":"Releases the resources used by the <ph id=\"ph1\">&lt;xref href=\"System.ComponentModel.Design.DesignSurfaceManager\"&gt;&lt;/xref&gt;</ph>.","source":"Releases the resources used by the <xref href=\"System.ComponentModel.Design.DesignSurfaceManager\"></xref>."}],"pos":[23258,23365],"yaml":true},{"content":"The public <xref:System.ComponentModel.Design.DesignSurfaceManager.Dispose%2A> method follows the standard <xref:System.IDisposable> pattern. Calling this method destroys the design surface manager. It also disposes the service container, which causes all services that implement <xref:System.IDisposable> to also be disposed. The protected version of this method is `virtual` and follows the normal <xref:System.IDisposable> pattern.  \n  \n> [!NOTE]\n>  Because <xref:System.ComponentModel.Design.DesignSurfaceManager> does not have any native code to clean up, it does not have a finalizer that calls <xref:System.ComponentModel.Design.DesignSurfaceManager.Dispose%2A>. If you need to call <xref:System.ComponentModel.Design.DesignSurfaceManager.Dispose%2A>, you must add a finalizer yourself.","nodes":[{"pos":[0,434],"content":"The public <xref:System.ComponentModel.Design.DesignSurfaceManager.Dispose%2A> method follows the standard <xref:System.IDisposable> pattern. Calling this method destroys the design surface manager. It also disposes the service container, which causes all services that implement <xref:System.IDisposable> to also be disposed. The protected version of this method is `virtual` and follows the normal <xref:System.IDisposable> pattern.","nodes":[{"content":"The public <ph id=\"ph1\">&lt;xref:System.ComponentModel.Design.DesignSurfaceManager.Dispose%2A&gt;</ph> method follows the standard <ph id=\"ph2\">&lt;xref:System.IDisposable&gt;</ph> pattern.","pos":[0,141],"source":"The public <xref:System.ComponentModel.Design.DesignSurfaceManager.Dispose%2A> method follows the standard <xref:System.IDisposable> pattern."},{"content":"Calling this method destroys the design surface manager.","pos":[142,198]},{"content":"It also disposes the service container, which causes all services that implement <ph id=\"ph1\">&lt;xref:System.IDisposable&gt;</ph> to also be disposed.","pos":[199,326],"source":" It also disposes the service container, which causes all services that implement <xref:System.IDisposable> to also be disposed."},{"content":"The protected version of this method is <ph id=\"ph1\">`virtual`</ph> and follows the normal <ph id=\"ph2\">&lt;xref:System.IDisposable&gt;</ph> pattern.","pos":[327,434],"source":" The protected version of this method is `virtual` and follows the normal <xref:System.IDisposable> pattern."}]},{"pos":[442,793],"content":"[!NOTE]\n Because <xref:System.ComponentModel.Design.DesignSurfaceManager> does not have any native code to clean up, it does not have a finalizer that calls <xref:System.ComponentModel.Design.DesignSurfaceManager.Dispose%2A>. If you need to call <xref:System.ComponentModel.Design.DesignSurfaceManager.Dispose%2A>, you must add a finalizer yourself.","leadings":["","> "],"nodes":[{"content":" Because <xref:System.ComponentModel.Design.DesignSurfaceManager> does not have any native code to clean up, it does not have a finalizer that calls <xref:System.ComponentModel.Design.DesignSurfaceManager.Dispose%2A>. If you need to call <xref:System.ComponentModel.Design.DesignSurfaceManager.Dispose%2A>, you must add a finalizer yourself.","pos":[8,349],"nodes":[{"content":"Because <ph id=\"ph1\">&lt;xref:System.ComponentModel.Design.DesignSurfaceManager&gt;</ph> does not have any native code to clean up, it does not have a finalizer that calls <ph id=\"ph2\">&lt;xref:System.ComponentModel.Design.DesignSurfaceManager.Dispose%2A&gt;</ph>.","pos":[1,217],"source":" Because <xref:System.ComponentModel.Design.DesignSurfaceManager> does not have any native code to clean up, it does not have a finalizer that calls <xref:System.ComponentModel.Design.DesignSurfaceManager.Dispose%2A>."},{"content":"If you need to call <ph id=\"ph1\">&lt;xref:System.ComponentModel.Design.DesignSurfaceManager.Dispose%2A&gt;</ph>, you must add a finalizer yourself.","pos":[218,341],"source":" If you need to call <xref:System.ComponentModel.Design.DesignSurfaceManager.Dispose%2A>, you must add a finalizer yourself."}]}]}],"pos":[23376,24175],"yaml":true,"extradata":"MT"},{"content":"Releases the unmanaged resources used by the <xref href=\"System.ComponentModel.Design.DesignSurfaceManager\"></xref> and optionally releases the managed resources.","nodes":[{"pos":[0,162],"content":"Releases the unmanaged resources used by the <ph id=\"ph1\">&lt;xref href=\"System.ComponentModel.Design.DesignSurfaceManager\"&gt;&lt;/xref&gt;</ph> and optionally releases the managed resources.","source":"Releases the unmanaged resources used by the <xref href=\"System.ComponentModel.Design.DesignSurfaceManager\"></xref> and optionally releases the managed resources."}],"pos":[25387,25550],"yaml":true},{"content":"The public <xref:System.ComponentModel.Design.DesignSurfaceManager.Dispose%2A> method follows the standard <xref:System.IDisposable> pattern. Calling this method destroys the design surface manager. It also disposes the service container, which causes all services that implement <xref:System.IDisposable> to also be disposed. The protected version of this method is `virtual` and follows the normal <xref:System.IDisposable> pattern.  \n  \n> [!NOTE]\n>  Because <xref:System.ComponentModel.Design.DesignSurfaceManager> does not have any native code to clean up, it does not have a finalizer that calls <xref:System.ComponentModel.Design.DesignSurfaceManager.Dispose%2A>. If you need to call <xref:System.ComponentModel.Design.DesignSurfaceManager.Dispose%2A>, you must add a finalizer yourself.  \n  \n This method is called by the public `Dispose()` method and the <xref:System.Object.Finalize%2A> method. `Dispose()` invokes the protected `Dispose(Boolean)` method with the `disposing` parameter set to `true`. <xref:System.Object.Finalize%2A> invokes `Dispose` with `disposing` set to `false`.  \n  \n When the `disposing` parameter is true, this method releases all resources held by any managed objects that this <xref:System.ComponentModel.Design.DesignSurfaceManager> references. This method invokes the `Dispose()` method of each referenced object.","nodes":[{"pos":[0,434],"content":"The public <xref:System.ComponentModel.Design.DesignSurfaceManager.Dispose%2A> method follows the standard <xref:System.IDisposable> pattern. Calling this method destroys the design surface manager. It also disposes the service container, which causes all services that implement <xref:System.IDisposable> to also be disposed. The protected version of this method is `virtual` and follows the normal <xref:System.IDisposable> pattern.","nodes":[{"content":"The public <ph id=\"ph1\">&lt;xref:System.ComponentModel.Design.DesignSurfaceManager.Dispose%2A&gt;</ph> method follows the standard <ph id=\"ph2\">&lt;xref:System.IDisposable&gt;</ph> pattern.","pos":[0,141],"source":"The public <xref:System.ComponentModel.Design.DesignSurfaceManager.Dispose%2A> method follows the standard <xref:System.IDisposable> pattern."},{"content":"Calling this method destroys the design surface manager.","pos":[142,198]},{"content":"It also disposes the service container, which causes all services that implement <ph id=\"ph1\">&lt;xref:System.IDisposable&gt;</ph> to also be disposed.","pos":[199,326],"source":" It also disposes the service container, which causes all services that implement <xref:System.IDisposable> to also be disposed."},{"content":"The protected version of this method is <ph id=\"ph1\">`virtual`</ph> and follows the normal <ph id=\"ph2\">&lt;xref:System.IDisposable&gt;</ph> pattern.","pos":[327,434],"source":" The protected version of this method is `virtual` and follows the normal <xref:System.IDisposable> pattern."}]},{"pos":[442,793],"content":"[!NOTE]\n Because <xref:System.ComponentModel.Design.DesignSurfaceManager> does not have any native code to clean up, it does not have a finalizer that calls <xref:System.ComponentModel.Design.DesignSurfaceManager.Dispose%2A>. If you need to call <xref:System.ComponentModel.Design.DesignSurfaceManager.Dispose%2A>, you must add a finalizer yourself.","leadings":["","> "],"nodes":[{"content":" Because <xref:System.ComponentModel.Design.DesignSurfaceManager> does not have any native code to clean up, it does not have a finalizer that calls <xref:System.ComponentModel.Design.DesignSurfaceManager.Dispose%2A>. If you need to call <xref:System.ComponentModel.Design.DesignSurfaceManager.Dispose%2A>, you must add a finalizer yourself.","pos":[8,349],"nodes":[{"content":"Because <ph id=\"ph1\">&lt;xref:System.ComponentModel.Design.DesignSurfaceManager&gt;</ph> does not have any native code to clean up, it does not have a finalizer that calls <ph id=\"ph2\">&lt;xref:System.ComponentModel.Design.DesignSurfaceManager.Dispose%2A&gt;</ph>.","pos":[1,217],"source":" Because <xref:System.ComponentModel.Design.DesignSurfaceManager> does not have any native code to clean up, it does not have a finalizer that calls <xref:System.ComponentModel.Design.DesignSurfaceManager.Dispose%2A>."},{"content":"If you need to call <ph id=\"ph1\">&lt;xref:System.ComponentModel.Design.DesignSurfaceManager.Dispose%2A&gt;</ph>, you must add a finalizer yourself.","pos":[218,341],"source":" If you need to call <xref:System.ComponentModel.Design.DesignSurfaceManager.Dispose%2A>, you must add a finalizer yourself."}]}]},{"pos":[800,1093],"content":"This method is called by the public `Dispose()` method and the <xref:System.Object.Finalize%2A> method. `Dispose()` invokes the protected `Dispose(Boolean)` method with the `disposing` parameter set to `true`. <xref:System.Object.Finalize%2A> invokes `Dispose` with `disposing` set to `false`.","nodes":[{"content":"This method is called by the public <ph id=\"ph1\">`Dispose()`</ph> method and the <ph id=\"ph2\">&lt;xref:System.Object.Finalize%2A&gt;</ph> method.","pos":[0,103],"source":"This method is called by the public `Dispose()` method and the <xref:System.Object.Finalize%2A> method."},{"content":"<ph id=\"ph1\">`Dispose()`</ph> invokes the protected <ph id=\"ph2\">`Dispose(Boolean)`</ph> method with the <ph id=\"ph3\">`disposing`</ph> parameter set to <ph id=\"ph4\">`true`</ph>.","pos":[104,209],"source":"`Dispose()` invokes the protected `Dispose(Boolean)` method with the `disposing` parameter set to `true`."},{"content":"<ph id=\"ph1\">&lt;xref:System.Object.Finalize%2A&gt;</ph> invokes <ph id=\"ph2\">`Dispose`</ph> with <ph id=\"ph3\">`disposing`</ph> set to <ph id=\"ph4\">`false`</ph>.","pos":[210,293],"source":" <xref:System.Object.Finalize%2A> invokes `Dispose` with `disposing` set to `false`."}]},{"pos":[1100,1351],"content":"When the `disposing` parameter is true, this method releases all resources held by any managed objects that this <xref:System.ComponentModel.Design.DesignSurfaceManager> references. This method invokes the `Dispose()` method of each referenced object.","nodes":[{"content":"When the <ph id=\"ph1\">`disposing`</ph> parameter is true, this method releases all resources held by any managed objects that this <ph id=\"ph2\">&lt;xref:System.ComponentModel.Design.DesignSurfaceManager&gt;</ph> references.","pos":[0,181],"source":"When the `disposing` parameter is true, this method releases all resources held by any managed objects that this <xref:System.ComponentModel.Design.DesignSurfaceManager> references."},{"content":"This method invokes the <ph id=\"ph1\">`Dispose()`</ph> method of each referenced object.","pos":[182,251],"source":" This method invokes the `Dispose()` method of each referenced object."}]}],"pos":[25561,26922],"yaml":true,"extradata":"MT"},{"content":"`true` to release both managed and unmanaged resources; `false` to release only unmanaged resources.","nodes":[{"pos":[0,100],"content":"<ph id=\"ph1\">`true`</ph> to release both managed and unmanaged resources; <ph id=\"ph2\">`false`</ph> to release only unmanaged resources.","source":"`true` to release both managed and unmanaged resources; `false` to release only unmanaged resources."}],"pos":[27076,27179],"yaml":true},{"content":"Gets a service in the design surface manager’s service container.","nodes":[{"pos":[0,65],"content":"Gets a service in the design surface manager’s service container.","nodes":[{"content":"Gets a service in the design surface manager’s service container.","pos":[0,65]}]}],"pos":[28325,28391],"yaml":true},{"content":"The <xref:System.ComponentModel.Design.DesignSurfaceManager.GetService%2A> method forwards to any service provider that was given to the design surface manager at construction time.","nodes":[{"pos":[0,181],"content":"The <xref:System.ComponentModel.Design.DesignSurfaceManager.GetService%2A> method forwards to any service provider that was given to the design surface manager at construction time.","nodes":[{"content":"The <ph id=\"ph1\">&lt;xref:System.ComponentModel.Design.DesignSurfaceManager.GetService%2A&gt;</ph> method forwards to any service provider that was given to the design surface manager at construction time.","pos":[0,181],"source":"The <xref:System.ComponentModel.Design.DesignSurfaceManager.GetService%2A> method forwards to any service provider that was given to the design surface manager at construction time."}]}],"pos":[28402,28584],"yaml":true,"extradata":"MT"},{"content":"The service type to retrieve.","nodes":[{"pos":[0,29],"content":"The service type to retrieve.","nodes":[{"content":"The service type to retrieve.","pos":[0,29]}]}],"pos":[28733,28763],"yaml":true},{"content":"An object that implements, or is a derived class of, the given service type; otherwise, `null` if the service does not exist in the service container.","nodes":[{"pos":[0,150],"content":"An object that implements, or is a derived class of, the given service type; otherwise, <ph id=\"ph1\">`null`</ph> if the service does not exist in the service container.","source":"An object that implements, or is a derived class of, the given service type; otherwise, `null` if the service does not exist in the service container."}],"pos":[28820,28971],"yaml":true},{"content":"Occurs when the global selection changes.","nodes":[{"pos":[0,41],"content":"Occurs when the global selection changes.","nodes":[{"content":"Occurs when the global selection changes.","pos":[0,41]}]}],"pos":[30098,30140],"yaml":true},{"content":"This event is raised when the active designer's selection of component set changes. This is mapped through the <xref:System.ComponentModel.Design.IDesignerEventService> interface.","nodes":[{"pos":[0,179],"content":"This event is raised when the active designer's selection of component set changes. This is mapped through the <xref:System.ComponentModel.Design.IDesignerEventService> interface.","nodes":[{"content":"This event is raised when the active designer's selection of component set changes. This is mapped through the <xref:System.ComponentModel.Design.IDesignerEventService> interface.","pos":[0,179],"nodes":[{"content":"This event is raised when the active designer's selection of component set changes.","pos":[0,83]},{"content":"This is mapped through the <ph id=\"ph1\">&lt;xref:System.ComponentModel.Design.IDesignerEventService&gt;</ph> interface.","pos":[84,179],"source":" This is mapped through the <xref:System.ComponentModel.Design.IDesignerEventService> interface."}]}]}],"pos":[30151,30331],"yaml":true,"extradata":"MT"},{"content":"Gets the design surface manager's <xref href=\"System.ComponentModel.Design.DesignSurfaceManager.ServiceContainer\"></xref>.","nodes":[{"pos":[0,122],"content":"Gets the design surface manager's <ph id=\"ph1\">&lt;xref href=\"System.ComponentModel.Design.DesignSurfaceManager.ServiceContainer\"&gt;&lt;/xref&gt;</ph>.","source":"Gets the design surface manager's <xref href=\"System.ComponentModel.Design.DesignSurfaceManager.ServiceContainer\"></xref>."}],"pos":[31520,31643],"yaml":true},{"content":"The design surface manager's <xref href=\"System.ComponentModel.Design.DesignSurfaceManager.ServiceContainer\"></xref>.","nodes":[{"pos":[0,117],"content":"The design surface manager's <ph id=\"ph1\">&lt;xref href=\"System.ComponentModel.Design.DesignSurfaceManager.ServiceContainer\"&gt;&lt;/xref&gt;</ph>.","source":"The design surface manager's <xref href=\"System.ComponentModel.Design.DesignSurfaceManager.ServiceContainer\"></xref>."}],"pos":[31837,31955],"yaml":true}],"content":"### YamlMime:ManagedReference\nitems:\n- uid: System.ComponentModel.Design.DesignSurfaceManager\n  commentId: T:System.ComponentModel.Design.DesignSurfaceManager\n  id: DesignSurfaceManager\n  children:\n  - System.ComponentModel.Design.DesignSurfaceManager.#ctor\n  - System.ComponentModel.Design.DesignSurfaceManager.#ctor(System.IServiceProvider)\n  - System.ComponentModel.Design.DesignSurfaceManager.ActiveDesignSurface\n  - System.ComponentModel.Design.DesignSurfaceManager.ActiveDesignSurfaceChanged\n  - System.ComponentModel.Design.DesignSurfaceManager.CreateDesignSurface\n  - System.ComponentModel.Design.DesignSurfaceManager.CreateDesignSurface(System.IServiceProvider)\n  - System.ComponentModel.Design.DesignSurfaceManager.CreateDesignSurfaceCore(System.IServiceProvider)\n  - System.ComponentModel.Design.DesignSurfaceManager.DesignSurfaceCreated\n  - System.ComponentModel.Design.DesignSurfaceManager.DesignSurfaceDisposed\n  - System.ComponentModel.Design.DesignSurfaceManager.DesignSurfaces\n  - System.ComponentModel.Design.DesignSurfaceManager.Dispose\n  - System.ComponentModel.Design.DesignSurfaceManager.Dispose(System.Boolean)\n  - System.ComponentModel.Design.DesignSurfaceManager.GetService(System.Type)\n  - System.ComponentModel.Design.DesignSurfaceManager.SelectionChanged\n  - System.ComponentModel.Design.DesignSurfaceManager.ServiceContainer\n  langs:\n  - csharp\n  name: DesignSurfaceManager\n  nameWithType: DesignSurfaceManager\n  fullName: System.ComponentModel.Design.DesignSurfaceManager\n  type: Class\n  assemblies:\n  - System.Design\n  namespace: System.ComponentModel.Design\n  summary: Manages a collection of <xref href=\"System.ComponentModel.Design.DesignSurface\"></xref> objects.\n  remarks: \"The <xref:System.ComponentModel.Design.DesignSurfaceManager> class is designed to be a container of <xref:System.ComponentModel.Design.DesignSurface> objects. It provides common services that handle event routing between designers, property windows, and other global objects. Using <xref:System.ComponentModel.Design.DesignSurfaceManager> is optional, but it is recommended if you intend to have several designer windows.  \\n  \\n The <xref:System.ComponentModel.Design.DesignSurfaceManager> class provides several design-time services automatically. You can override each of these services by replacing them in the protected <xref:System.ComponentModel.Design.DesignSurfaceManager.ServiceContainer%2A> property. To replace a service, override the constructor, call base, and make any changes through the protected <xref:System.ComponentModel.Design.DesignSurfaceManager.ServiceContainer%2A> property. All services added to the service container that implement the <xref:System.IDisposable> interface are disposed when the design surface manager is disposed. The <xref:System.ComponentModel.Design.DesignSurfaceManager> class provides the <xref:System.ComponentModel.Design.IDesignerEventService> interface as the default service. <xref:System.ComponentModel.Design.IDesignerEventService> provides a global eventing mechanism for designer events. With this mechanism, an application is informed when a designer becomes active. The service provides a collection of designers and a single place where global objects, such as the Properties window, can monitor selection change events.\"\n  syntax:\n    content: >-\n      [System.Security.SecurityCritical]\n\n      public class DesignSurfaceManager : IDisposable, IServiceProvider\n  inheritance:\n  - System.Object\n  implements:\n  - System.IDisposable\n  - System.IServiceProvider\n  inheritedMembers:\n  - System.Object.Equals(System.Object)\n  - System.Object.Equals(System.Object,System.Object)\n  - System.Object.GetHashCode\n  - System.Object.GetType\n  - System.Object.MemberwiseClone\n  - System.Object.ReferenceEquals(System.Object,System.Object)\n  - System.Object.ToString\n  attributes:\n  - type: System.Security.SecurityCriticalAttribute\n  version:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.ComponentModel.Design/DesignSurfaceManager.xml\n  ms.technology:\n  - dotnet-standard\n  author: stevehoag\n  ms.author: shoag\n  manager: wpickett\n- uid: System.ComponentModel.Design.DesignSurfaceManager.#ctor\n  commentId: M:System.ComponentModel.Design.DesignSurfaceManager.#ctor\n  id: '#ctor'\n  parent: System.ComponentModel.Design.DesignSurfaceManager\n  langs:\n  - csharp\n  name: DesignSurfaceManager()\n  nameWithType: DesignSurfaceManager.DesignSurfaceManager()\n  fullName: DesignSurfaceManager.DesignSurfaceManager()\n  type: Constructor\n  assemblies:\n  - System.Design\n  namespace: System.ComponentModel.Design\n  summary: Initializes a new instance of the <xref href=\"System.ComponentModel.Design.DesignSurfaceManager\"></xref> class.\n  syntax:\n    content: public DesignSurfaceManager ();\n    parameters: []\n  overload: System.ComponentModel.Design.DesignSurfaceManager.#ctor*\n  exceptions: []\n  version:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.ComponentModel.Design/DesignSurfaceManager.xml\n  ms.technology:\n  - dotnet-standard\n  author: stevehoag\n  ms.author: shoag\n  manager: wpickett\n- uid: System.ComponentModel.Design.DesignSurfaceManager.#ctor(System.IServiceProvider)\n  commentId: M:System.ComponentModel.Design.DesignSurfaceManager.#ctor(System.IServiceProvider)\n  id: '#ctor(System.IServiceProvider)'\n  parent: System.ComponentModel.Design.DesignSurfaceManager\n  langs:\n  - csharp\n  name: DesignSurfaceManager(IServiceProvider)\n  nameWithType: DesignSurfaceManager.DesignSurfaceManager(IServiceProvider)\n  fullName: DesignSurfaceManager.DesignSurfaceManager(IServiceProvider)\n  type: Constructor\n  assemblies:\n  - System.Design\n  namespace: System.ComponentModel.Design\n  summary: Initializes a new instance of the <xref href=\"System.ComponentModel.Design.DesignSurfaceManager\"></xref> class.\n  syntax:\n    content: public DesignSurfaceManager (IServiceProvider parentProvider);\n    parameters:\n    - id: parentProvider\n      type: System.IServiceProvider\n      description: A parent service provider. Service requests are forwarded to this provider if they cannot be resolved by the design surface manager.\n  overload: System.ComponentModel.Design.DesignSurfaceManager.#ctor*\n  exceptions: []\n  version:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.ComponentModel.Design/DesignSurfaceManager.xml\n  ms.technology:\n  - dotnet-standard\n  author: stevehoag\n  ms.author: shoag\n  manager: wpickett\n- uid: System.ComponentModel.Design.DesignSurfaceManager.ActiveDesignSurface\n  commentId: P:System.ComponentModel.Design.DesignSurfaceManager.ActiveDesignSurface\n  id: ActiveDesignSurface\n  parent: System.ComponentModel.Design.DesignSurfaceManager\n  langs:\n  - csharp\n  name: ActiveDesignSurface\n  nameWithType: DesignSurfaceManager.ActiveDesignSurface\n  fullName: DesignSurfaceManager.ActiveDesignSurface\n  type: Property\n  assemblies:\n  - System.Design\n  namespace: System.ComponentModel.Design\n  summary: Gets or sets the active designer.\n  remarks: The <xref:System.ComponentModel.Design.DesignSurfaceManager.ActiveDesignSurface%2A> property should be set by the designer's user interface whenever a designer becomes the active window. The default implementation of this property works with the default implementation of the <xref:System.ComponentModel.Design.IDesignerEventService> interface to notify interested parties that a new designer is now active. If you provide your own implementation of <xref:System.ComponentModel.Design.IDesignerEventService>, you should override this property to notify your service appropriately. This property can be set to `null`, indicating that no designer is active.\n  syntax:\n    content: public virtual System.ComponentModel.Design.DesignSurface ActiveDesignSurface { get; set; }\n    return:\n      type: System.ComponentModel.Design.DesignSurface\n      description: The active designer.\n  overload: System.ComponentModel.Design.DesignSurfaceManager.ActiveDesignSurface*\n  exceptions: []\n  version:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.ComponentModel.Design/DesignSurfaceManager.xml\n  ms.technology:\n  - dotnet-standard\n  author: stevehoag\n  ms.author: shoag\n  manager: wpickett\n- uid: System.ComponentModel.Design.DesignSurfaceManager.ActiveDesignSurfaceChanged\n  commentId: E:System.ComponentModel.Design.DesignSurfaceManager.ActiveDesignSurfaceChanged\n  id: ActiveDesignSurfaceChanged\n  parent: System.ComponentModel.Design.DesignSurfaceManager\n  langs:\n  - csharp\n  name: ActiveDesignSurfaceChanged\n  nameWithType: DesignSurfaceManager.ActiveDesignSurfaceChanged\n  fullName: DesignSurfaceManager.ActiveDesignSurfaceChanged\n  type: Event\n  assemblies:\n  - System.Design\n  namespace: System.ComponentModel.Design\n  summary: Occurs when the currently active designer changes.\n  syntax:\n    content: public event System.ComponentModel.Design.ActiveDesignSurfaceChangedEventHandler ActiveDesignSurfaceChanged;\n    return:\n      type: System.ComponentModel.Design.ActiveDesignSurfaceChangedEventHandler\n      description: ''\n  exceptions: []\n  version:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.ComponentModel.Design/DesignSurfaceManager.xml\n  ms.technology:\n  - dotnet-standard\n  author: stevehoag\n  ms.author: shoag\n  manager: wpickett\n- uid: System.ComponentModel.Design.DesignSurfaceManager.CreateDesignSurface\n  commentId: M:System.ComponentModel.Design.DesignSurfaceManager.CreateDesignSurface\n  id: CreateDesignSurface\n  parent: System.ComponentModel.Design.DesignSurfaceManager\n  langs:\n  - csharp\n  name: CreateDesignSurface()\n  nameWithType: DesignSurfaceManager.CreateDesignSurface()\n  fullName: DesignSurfaceManager.CreateDesignSurface()\n  type: Method\n  assemblies:\n  - System.Design\n  namespace: System.ComponentModel.Design\n  summary: Creates an instance of a design surface.\n  syntax:\n    content: public System.ComponentModel.Design.DesignSurface CreateDesignSurface ();\n    parameters: []\n    return:\n      type: System.ComponentModel.Design.DesignSurface\n      description: A new design surface instance.\n  overload: System.ComponentModel.Design.DesignSurfaceManager.CreateDesignSurface*\n  exceptions: []\n  version:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.ComponentModel.Design/DesignSurfaceManager.xml\n  ms.technology:\n  - dotnet-standard\n  author: stevehoag\n  ms.author: shoag\n  manager: wpickett\n- uid: System.ComponentModel.Design.DesignSurfaceManager.CreateDesignSurface(System.IServiceProvider)\n  commentId: M:System.ComponentModel.Design.DesignSurfaceManager.CreateDesignSurface(System.IServiceProvider)\n  id: CreateDesignSurface(System.IServiceProvider)\n  parent: System.ComponentModel.Design.DesignSurfaceManager\n  langs:\n  - csharp\n  name: CreateDesignSurface(IServiceProvider)\n  nameWithType: DesignSurfaceManager.CreateDesignSurface(IServiceProvider)\n  fullName: DesignSurfaceManager.CreateDesignSurface(IServiceProvider)\n  type: Method\n  assemblies:\n  - System.Design\n  namespace: System.ComponentModel.Design\n  summary: Creates an instance of a design surface.\n  remarks: \"If you want to conveniently add additional per-designer services, use the `parentProvider` parameter to provide a service provider for this design surface. The <xref:System.ComponentModel.Design.DesignSurfaceManager.CreateDesignSurface%2A> method creates a merged service provider that can satisfy service requests from both the given service provider as well as the <xref:System.ComponentModel.Design.DesignSurfaceManager> itself. The <xref:System.ComponentModel.Design.DesignSurfaceManager.CreateDesignSurface%2A> method then passes this service provider into the <xref:System.ComponentModel.Design.DesignSurfaceManager.CreateDesignSurfaceCore%2A> method.  \\n  \\n After <xref:System.ComponentModel.Design.DesignSurfaceManager.CreateDesignSurfaceCore%2A> returns the design surface, the <xref:System.ComponentModel.Design.DesignSurfaceManager.CreateDesignSurface%2A> method tries to obtain the <xref:System.ComponentModel.Design.IDesignerEventService>. If it is present, and if it is the instance of the service that <xref:System.ComponentModel.Design.DesignSurfaceManager> provided by default, the <xref:System.ComponentModel.Design.DesignSurfaceManager.CreateDesignSurface%2A> method raises the <xref:System.ComponentModel.Design.IDesignerEventService.DesignerCreated> event.\"\n  syntax:\n    content: public System.ComponentModel.Design.DesignSurface CreateDesignSurface (IServiceProvider parentProvider);\n    parameters:\n    - id: parentProvider\n      type: System.IServiceProvider\n      description: A parent service provider. A new merged service provider will be created that will first ask this provider for a service, and then delegate any failures to the design surface manager object. This merged provider will be passed into the <xref href=\"System.ComponentModel.Design.DesignSurfaceManager.CreateDesignSurfaceCore(System.IServiceProvider)\"></xref> method.\n    return:\n      type: System.ComponentModel.Design.DesignSurface\n      description: A new design surface instance.\n  overload: System.ComponentModel.Design.DesignSurfaceManager.CreateDesignSurface*\n  exceptions:\n  - type: System.ArgumentNullException\n    commentId: T:System.ArgumentNullException\n    description: <code>parentProvider</code> is `null`.\n  version:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.ComponentModel.Design/DesignSurfaceManager.xml\n  ms.technology:\n  - dotnet-standard\n  author: stevehoag\n  ms.author: shoag\n  manager: wpickett\n- uid: System.ComponentModel.Design.DesignSurfaceManager.CreateDesignSurfaceCore(System.IServiceProvider)\n  commentId: M:System.ComponentModel.Design.DesignSurfaceManager.CreateDesignSurfaceCore(System.IServiceProvider)\n  id: CreateDesignSurfaceCore(System.IServiceProvider)\n  parent: System.ComponentModel.Design.DesignSurfaceManager\n  langs:\n  - csharp\n  name: CreateDesignSurfaceCore(IServiceProvider)\n  nameWithType: DesignSurfaceManager.CreateDesignSurfaceCore(IServiceProvider)\n  fullName: DesignSurfaceManager.CreateDesignSurfaceCore(IServiceProvider)\n  type: Method\n  assemblies:\n  - System.Design\n  namespace: System.ComponentModel.Design\n  summary: Implementation that creates the design surface.\n  remarks: The <xref:System.ComponentModel.Design.DesignSurfaceManager.CreateDesignSurfaceCore%2A> method is called by both <xref:System.ComponentModel.Design.DesignSurfaceManager.CreateDesignSurface%2A> methods. It is the implementation that actually creates the design surface. The default implementation just returns a new <xref:System.ComponentModel.Design.DesignSurface>. You may override this method to provide a custom object that derives from the <xref:System.ComponentModel.Design.DesignSurface> class.\n  syntax:\n    content: protected virtual System.ComponentModel.Design.DesignSurface CreateDesignSurfaceCore (IServiceProvider parentProvider);\n    parameters:\n    - id: parentProvider\n      type: System.IServiceProvider\n      description: A service provider to pass to the design surface. This is either an instance of <xref href=\"System.ComponentModel.Design.DesignSurfaceManager\"></xref> or an object that implements <xref href=\"System.IServiceProvider\"></xref>, and represents a merge between the service provider of the <xref href=\"System.ComponentModel.Design.DesignSurfaceManager\"></xref> class and an externally passed provider.\n    return:\n      type: System.ComponentModel.Design.DesignSurface\n      description: A new design surface instance.\n  overload: System.ComponentModel.Design.DesignSurfaceManager.CreateDesignSurfaceCore*\n  exceptions: []\n  version:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.ComponentModel.Design/DesignSurfaceManager.xml\n  ms.technology:\n  - dotnet-standard\n  author: stevehoag\n  ms.author: shoag\n  manager: wpickett\n- uid: System.ComponentModel.Design.DesignSurfaceManager.DesignSurfaceCreated\n  commentId: E:System.ComponentModel.Design.DesignSurfaceManager.DesignSurfaceCreated\n  id: DesignSurfaceCreated\n  parent: System.ComponentModel.Design.DesignSurfaceManager\n  langs:\n  - csharp\n  name: DesignSurfaceCreated\n  nameWithType: DesignSurfaceManager.DesignSurfaceCreated\n  fullName: DesignSurfaceManager.DesignSurfaceCreated\n  type: Event\n  assemblies:\n  - System.Design\n  namespace: System.ComponentModel.Design\n  summary: Occurs when a designer is created.\n  syntax:\n    content: public event System.ComponentModel.Design.DesignSurfaceEventHandler DesignSurfaceCreated;\n    return:\n      type: System.ComponentModel.Design.DesignSurfaceEventHandler\n      description: ''\n  exceptions: []\n  version:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.ComponentModel.Design/DesignSurfaceManager.xml\n  ms.technology:\n  - dotnet-standard\n  author: stevehoag\n  ms.author: shoag\n  manager: wpickett\n- uid: System.ComponentModel.Design.DesignSurfaceManager.DesignSurfaceDisposed\n  commentId: E:System.ComponentModel.Design.DesignSurfaceManager.DesignSurfaceDisposed\n  id: DesignSurfaceDisposed\n  parent: System.ComponentModel.Design.DesignSurfaceManager\n  langs:\n  - csharp\n  name: DesignSurfaceDisposed\n  nameWithType: DesignSurfaceManager.DesignSurfaceDisposed\n  fullName: DesignSurfaceManager.DesignSurfaceDisposed\n  type: Event\n  assemblies:\n  - System.Design\n  namespace: System.ComponentModel.Design\n  summary: Occurs when a designer is disposed.\n  syntax:\n    content: public event System.ComponentModel.Design.DesignSurfaceEventHandler DesignSurfaceDisposed;\n    return:\n      type: System.ComponentModel.Design.DesignSurfaceEventHandler\n      description: ''\n  exceptions: []\n  version:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.ComponentModel.Design/DesignSurfaceManager.xml\n  ms.technology:\n  - dotnet-standard\n  author: stevehoag\n  ms.author: shoag\n  manager: wpickett\n- uid: System.ComponentModel.Design.DesignSurfaceManager.DesignSurfaces\n  commentId: P:System.ComponentModel.Design.DesignSurfaceManager.DesignSurfaces\n  id: DesignSurfaces\n  parent: System.ComponentModel.Design.DesignSurfaceManager\n  langs:\n  - csharp\n  name: DesignSurfaces\n  nameWithType: DesignSurfaceManager.DesignSurfaces\n  fullName: DesignSurfaceManager.DesignSurfaces\n  type: Property\n  assemblies:\n  - System.Design\n  namespace: System.ComponentModel.Design\n  summary: Gets a collection of design surfaces.\n  remarks: The <xref:System.ComponentModel.Design.DesignSurfaceManager.DesignSurfaces%2A> property is implemented directly on top of <xref:System.ComponentModel.Design.IDesignerEventService>, so if you provide your own implementation of that service, this property uses your implementation.\n  syntax:\n    content: public System.ComponentModel.Design.DesignSurfaceCollection DesignSurfaces { get; }\n    return:\n      type: System.ComponentModel.Design.DesignSurfaceCollection\n      description: A collection of design surfaces that are currently hosted by the design surface manager.\n  overload: System.ComponentModel.Design.DesignSurfaceManager.DesignSurfaces*\n  exceptions: []\n  version:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.ComponentModel.Design/DesignSurfaceManager.xml\n  ms.technology:\n  - dotnet-standard\n  author: stevehoag\n  ms.author: shoag\n  manager: wpickett\n- uid: System.ComponentModel.Design.DesignSurfaceManager.Dispose\n  commentId: M:System.ComponentModel.Design.DesignSurfaceManager.Dispose\n  id: Dispose\n  parent: System.ComponentModel.Design.DesignSurfaceManager\n  langs:\n  - csharp\n  name: Dispose()\n  nameWithType: DesignSurfaceManager.Dispose()\n  fullName: DesignSurfaceManager.Dispose()\n  type: Method\n  assemblies:\n  - System.Design\n  namespace: System.ComponentModel.Design\n  summary: Releases the resources used by the <xref href=\"System.ComponentModel.Design.DesignSurfaceManager\"></xref>.\n  remarks: \"The public <xref:System.ComponentModel.Design.DesignSurfaceManager.Dispose%2A> method follows the standard <xref:System.IDisposable> pattern. Calling this method destroys the design surface manager. It also disposes the service container, which causes all services that implement <xref:System.IDisposable> to also be disposed. The protected version of this method is `virtual` and follows the normal <xref:System.IDisposable> pattern.  \\n  \\n> [!NOTE]\\n>  Because <xref:System.ComponentModel.Design.DesignSurfaceManager> does not have any native code to clean up, it does not have a finalizer that calls <xref:System.ComponentModel.Design.DesignSurfaceManager.Dispose%2A>. If you need to call <xref:System.ComponentModel.Design.DesignSurfaceManager.Dispose%2A>, you must add a finalizer yourself.\"\n  syntax:\n    content: public void Dispose ();\n    parameters: []\n  overload: System.ComponentModel.Design.DesignSurfaceManager.Dispose*\n  exceptions: []\n  version:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.ComponentModel.Design/DesignSurfaceManager.xml\n  ms.technology:\n  - dotnet-standard\n  author: stevehoag\n  ms.author: shoag\n  manager: wpickett\n- uid: System.ComponentModel.Design.DesignSurfaceManager.Dispose(System.Boolean)\n  commentId: M:System.ComponentModel.Design.DesignSurfaceManager.Dispose(System.Boolean)\n  id: Dispose(System.Boolean)\n  parent: System.ComponentModel.Design.DesignSurfaceManager\n  langs:\n  - csharp\n  name: Dispose(Boolean)\n  nameWithType: DesignSurfaceManager.Dispose(Boolean)\n  fullName: DesignSurfaceManager.Dispose(Boolean)\n  type: Method\n  assemblies:\n  - System.Design\n  namespace: System.ComponentModel.Design\n  summary: Releases the unmanaged resources used by the <xref href=\"System.ComponentModel.Design.DesignSurfaceManager\"></xref> and optionally releases the managed resources.\n  remarks: \"The public <xref:System.ComponentModel.Design.DesignSurfaceManager.Dispose%2A> method follows the standard <xref:System.IDisposable> pattern. Calling this method destroys the design surface manager. It also disposes the service container, which causes all services that implement <xref:System.IDisposable> to also be disposed. The protected version of this method is `virtual` and follows the normal <xref:System.IDisposable> pattern.  \\n  \\n> [!NOTE]\\n>  Because <xref:System.ComponentModel.Design.DesignSurfaceManager> does not have any native code to clean up, it does not have a finalizer that calls <xref:System.ComponentModel.Design.DesignSurfaceManager.Dispose%2A>. If you need to call <xref:System.ComponentModel.Design.DesignSurfaceManager.Dispose%2A>, you must add a finalizer yourself.  \\n  \\n This method is called by the public `Dispose()` method and the <xref:System.Object.Finalize%2A> method. `Dispose()` invokes the protected `Dispose(Boolean)` method with the `disposing` parameter set to `true`. <xref:System.Object.Finalize%2A> invokes `Dispose` with `disposing` set to `false`.  \\n  \\n When the `disposing` parameter is true, this method releases all resources held by any managed objects that this <xref:System.ComponentModel.Design.DesignSurfaceManager> references. This method invokes the `Dispose()` method of each referenced object.\"\n  syntax:\n    content: protected virtual void Dispose (bool disposing);\n    parameters:\n    - id: disposing\n      type: System.Boolean\n      description: '`true` to release both managed and unmanaged resources; `false` to release only unmanaged resources.'\n  overload: System.ComponentModel.Design.DesignSurfaceManager.Dispose*\n  exceptions: []\n  version:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.ComponentModel.Design/DesignSurfaceManager.xml\n  ms.technology:\n  - dotnet-standard\n  author: stevehoag\n  ms.author: shoag\n  manager: wpickett\n- uid: System.ComponentModel.Design.DesignSurfaceManager.GetService(System.Type)\n  commentId: M:System.ComponentModel.Design.DesignSurfaceManager.GetService(System.Type)\n  id: GetService(System.Type)\n  parent: System.ComponentModel.Design.DesignSurfaceManager\n  langs:\n  - csharp\n  name: GetService(Type)\n  nameWithType: DesignSurfaceManager.GetService(Type)\n  fullName: DesignSurfaceManager.GetService(Type)\n  type: Method\n  assemblies:\n  - System.Design\n  namespace: System.ComponentModel.Design\n  summary: Gets a service in the design surface manager’s service container.\n  remarks: The <xref:System.ComponentModel.Design.DesignSurfaceManager.GetService%2A> method forwards to any service provider that was given to the design surface manager at construction time.\n  syntax:\n    content: public object GetService (Type serviceType);\n    parameters:\n    - id: serviceType\n      type: System.Type\n      description: The service type to retrieve.\n    return:\n      type: System.Object\n      description: An object that implements, or is a derived class of, the given service type; otherwise, `null` if the service does not exist in the service container.\n  overload: System.ComponentModel.Design.DesignSurfaceManager.GetService*\n  exceptions: []\n  version:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.ComponentModel.Design/DesignSurfaceManager.xml\n  ms.technology:\n  - dotnet-standard\n  author: stevehoag\n  ms.author: shoag\n  manager: wpickett\n- uid: System.ComponentModel.Design.DesignSurfaceManager.SelectionChanged\n  commentId: E:System.ComponentModel.Design.DesignSurfaceManager.SelectionChanged\n  id: SelectionChanged\n  parent: System.ComponentModel.Design.DesignSurfaceManager\n  langs:\n  - csharp\n  name: SelectionChanged\n  nameWithType: DesignSurfaceManager.SelectionChanged\n  fullName: DesignSurfaceManager.SelectionChanged\n  type: Event\n  assemblies:\n  - System.Design\n  namespace: System.ComponentModel.Design\n  summary: Occurs when the global selection changes.\n  remarks: This event is raised when the active designer's selection of component set changes. This is mapped through the <xref:System.ComponentModel.Design.IDesignerEventService> interface.\n  syntax:\n    content: public event EventHandler SelectionChanged;\n    return:\n      type: System.EventHandler\n      description: ''\n  exceptions: []\n  version:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.ComponentModel.Design/DesignSurfaceManager.xml\n  ms.technology:\n  - dotnet-standard\n  author: stevehoag\n  ms.author: shoag\n  manager: wpickett\n- uid: System.ComponentModel.Design.DesignSurfaceManager.ServiceContainer\n  commentId: P:System.ComponentModel.Design.DesignSurfaceManager.ServiceContainer\n  id: ServiceContainer\n  parent: System.ComponentModel.Design.DesignSurfaceManager\n  langs:\n  - csharp\n  name: ServiceContainer\n  nameWithType: DesignSurfaceManager.ServiceContainer\n  fullName: DesignSurfaceManager.ServiceContainer\n  type: Property\n  assemblies:\n  - System.Design\n  namespace: System.ComponentModel.Design\n  summary: Gets the design surface manager's <xref href=\"System.ComponentModel.Design.DesignSurfaceManager.ServiceContainer\"></xref>.\n  syntax:\n    content: protected System.ComponentModel.Design.ServiceContainer ServiceContainer { get; }\n    return:\n      type: System.ComponentModel.Design.ServiceContainer\n      description: The design surface manager's <xref href=\"System.ComponentModel.Design.DesignSurfaceManager.ServiceContainer\"></xref>.\n  overload: System.ComponentModel.Design.DesignSurfaceManager.ServiceContainer*\n  exceptions: []\n  version:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.ComponentModel.Design/DesignSurfaceManager.xml\n  ms.technology:\n  - dotnet-standard\n  author: stevehoag\n  ms.author: shoag\n  manager: wpickett\nreferences:\n- uid: System.Object\n  parent: System\n  isExternal: false\n  name: Object\n  nameWithType: Object\n  fullName: System.Object\n- uid: System.ArgumentNullException\n  parent: System\n  isExternal: false\n  name: ArgumentNullException\n  nameWithType: ArgumentNullException\n  fullName: System.ArgumentNullException\n- uid: System.ComponentModel.Design.DesignSurfaceManager.#ctor\n  parent: System.ComponentModel.Design.DesignSurfaceManager\n  isExternal: false\n  name: DesignSurfaceManager()\n  nameWithType: DesignSurfaceManager.DesignSurfaceManager()\n  fullName: DesignSurfaceManager.DesignSurfaceManager()\n- uid: System.ComponentModel.Design.DesignSurfaceManager.#ctor(System.IServiceProvider)\n  parent: System.ComponentModel.Design.DesignSurfaceManager\n  isExternal: false\n  name: DesignSurfaceManager(IServiceProvider)\n  nameWithType: DesignSurfaceManager.DesignSurfaceManager(IServiceProvider)\n  fullName: DesignSurfaceManager.DesignSurfaceManager(IServiceProvider)\n- uid: System.IServiceProvider\n  parent: System\n  isExternal: false\n  name: IServiceProvider\n  nameWithType: IServiceProvider\n  fullName: System.IServiceProvider\n- uid: System.ComponentModel.Design.DesignSurfaceManager.ActiveDesignSurface\n  parent: System.ComponentModel.Design.DesignSurfaceManager\n  isExternal: false\n  name: ActiveDesignSurface\n  nameWithType: DesignSurfaceManager.ActiveDesignSurface\n  fullName: DesignSurfaceManager.ActiveDesignSurface\n- uid: System.ComponentModel.Design.DesignSurface\n  parent: System.ComponentModel.Design\n  isExternal: false\n  name: DesignSurface\n  nameWithType: DesignSurface\n  fullName: System.ComponentModel.Design.DesignSurface\n- uid: System.ComponentModel.Design.DesignSurfaceManager.ActiveDesignSurfaceChanged\n  parent: System.ComponentModel.Design.DesignSurfaceManager\n  isExternal: false\n  name: ActiveDesignSurfaceChanged\n  nameWithType: DesignSurfaceManager.ActiveDesignSurfaceChanged\n  fullName: DesignSurfaceManager.ActiveDesignSurfaceChanged\n- uid: System.ComponentModel.Design.ActiveDesignSurfaceChangedEventHandler\n  parent: System.ComponentModel.Design\n  isExternal: false\n  name: ActiveDesignSurfaceChangedEventHandler\n  nameWithType: ActiveDesignSurfaceChangedEventHandler\n  fullName: System.ComponentModel.Design.ActiveDesignSurfaceChangedEventHandler\n- uid: System.ComponentModel.Design.DesignSurfaceManager.CreateDesignSurface\n  parent: System.ComponentModel.Design.DesignSurfaceManager\n  isExternal: false\n  name: CreateDesignSurface()\n  nameWithType: DesignSurfaceManager.CreateDesignSurface()\n  fullName: DesignSurfaceManager.CreateDesignSurface()\n- uid: System.ComponentModel.Design.DesignSurfaceManager.CreateDesignSurface(System.IServiceProvider)\n  parent: System.ComponentModel.Design.DesignSurfaceManager\n  isExternal: false\n  name: CreateDesignSurface(IServiceProvider)\n  nameWithType: DesignSurfaceManager.CreateDesignSurface(IServiceProvider)\n  fullName: DesignSurfaceManager.CreateDesignSurface(IServiceProvider)\n- uid: System.ComponentModel.Design.DesignSurfaceManager.CreateDesignSurfaceCore(System.IServiceProvider)\n  parent: System.ComponentModel.Design.DesignSurfaceManager\n  isExternal: false\n  name: CreateDesignSurfaceCore(IServiceProvider)\n  nameWithType: DesignSurfaceManager.CreateDesignSurfaceCore(IServiceProvider)\n  fullName: DesignSurfaceManager.CreateDesignSurfaceCore(IServiceProvider)\n- uid: System.ComponentModel.Design.DesignSurfaceManager.DesignSurfaceCreated\n  parent: System.ComponentModel.Design.DesignSurfaceManager\n  isExternal: false\n  name: DesignSurfaceCreated\n  nameWithType: DesignSurfaceManager.DesignSurfaceCreated\n  fullName: DesignSurfaceManager.DesignSurfaceCreated\n- uid: System.ComponentModel.Design.DesignSurfaceEventHandler\n  parent: System.ComponentModel.Design\n  isExternal: false\n  name: DesignSurfaceEventHandler\n  nameWithType: DesignSurfaceEventHandler\n  fullName: System.ComponentModel.Design.DesignSurfaceEventHandler\n- uid: System.ComponentModel.Design.DesignSurfaceManager.DesignSurfaceDisposed\n  parent: System.ComponentModel.Design.DesignSurfaceManager\n  isExternal: false\n  name: DesignSurfaceDisposed\n  nameWithType: DesignSurfaceManager.DesignSurfaceDisposed\n  fullName: DesignSurfaceManager.DesignSurfaceDisposed\n- uid: System.ComponentModel.Design.DesignSurfaceManager.DesignSurfaces\n  parent: System.ComponentModel.Design.DesignSurfaceManager\n  isExternal: false\n  name: DesignSurfaces\n  nameWithType: DesignSurfaceManager.DesignSurfaces\n  fullName: DesignSurfaceManager.DesignSurfaces\n- uid: System.ComponentModel.Design.DesignSurfaceCollection\n  parent: System.ComponentModel.Design\n  isExternal: false\n  name: DesignSurfaceCollection\n  nameWithType: DesignSurfaceCollection\n  fullName: System.ComponentModel.Design.DesignSurfaceCollection\n- uid: System.ComponentModel.Design.DesignSurfaceManager.Dispose\n  parent: System.ComponentModel.Design.DesignSurfaceManager\n  isExternal: false\n  name: Dispose()\n  nameWithType: DesignSurfaceManager.Dispose()\n  fullName: DesignSurfaceManager.Dispose()\n- uid: System.ComponentModel.Design.DesignSurfaceManager.Dispose(System.Boolean)\n  parent: System.ComponentModel.Design.DesignSurfaceManager\n  isExternal: false\n  name: Dispose(Boolean)\n  nameWithType: DesignSurfaceManager.Dispose(Boolean)\n  fullName: DesignSurfaceManager.Dispose(Boolean)\n- uid: System.Boolean\n  parent: System\n  isExternal: false\n  name: Boolean\n  nameWithType: Boolean\n  fullName: System.Boolean\n- uid: System.ComponentModel.Design.DesignSurfaceManager.GetService(System.Type)\n  parent: System.ComponentModel.Design.DesignSurfaceManager\n  isExternal: false\n  name: GetService(Type)\n  nameWithType: DesignSurfaceManager.GetService(Type)\n  fullName: DesignSurfaceManager.GetService(Type)\n- uid: System.Type\n  parent: System\n  isExternal: false\n  name: Type\n  nameWithType: Type\n  fullName: System.Type\n- uid: System.ComponentModel.Design.DesignSurfaceManager.SelectionChanged\n  parent: System.ComponentModel.Design.DesignSurfaceManager\n  isExternal: false\n  name: SelectionChanged\n  nameWithType: DesignSurfaceManager.SelectionChanged\n  fullName: DesignSurfaceManager.SelectionChanged\n- uid: System.EventHandler\n  parent: System\n  isExternal: false\n  name: EventHandler\n  nameWithType: EventHandler\n  fullName: System.EventHandler\n- uid: System.ComponentModel.Design.DesignSurfaceManager.ServiceContainer\n  parent: System.ComponentModel.Design.DesignSurfaceManager\n  isExternal: false\n  name: ServiceContainer\n  nameWithType: DesignSurfaceManager.ServiceContainer\n  fullName: DesignSurfaceManager.ServiceContainer\n- uid: System.ComponentModel.Design.ServiceContainer\n  parent: System.ComponentModel.Design\n  isExternal: false\n  name: ServiceContainer\n  nameWithType: ServiceContainer\n  fullName: System.ComponentModel.Design.ServiceContainer\n- uid: System.ComponentModel.Design.DesignSurfaceManager.#ctor*\n  parent: System.ComponentModel.Design.DesignSurfaceManager\n  isExternal: false\n  name: DesignSurfaceManager\n  nameWithType: DesignSurfaceManager.DesignSurfaceManager\n  fullName: DesignSurfaceManager.DesignSurfaceManager\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.ComponentModel.Design/DesignSurfaceManager.xml\n- uid: System.ComponentModel.Design.DesignSurfaceManager.ActiveDesignSurface*\n  parent: System.ComponentModel.Design.DesignSurfaceManager\n  isExternal: false\n  name: ActiveDesignSurface\n  nameWithType: DesignSurfaceManager.ActiveDesignSurface\n  fullName: DesignSurfaceManager.ActiveDesignSurface\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.ComponentModel.Design/DesignSurfaceManager.xml\n- uid: System.ComponentModel.Design.DesignSurfaceManager.CreateDesignSurface*\n  parent: System.ComponentModel.Design.DesignSurfaceManager\n  isExternal: false\n  name: CreateDesignSurface\n  nameWithType: DesignSurfaceManager.CreateDesignSurface\n  fullName: DesignSurfaceManager.CreateDesignSurface\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.ComponentModel.Design/DesignSurfaceManager.xml\n- uid: System.ComponentModel.Design.DesignSurfaceManager.CreateDesignSurfaceCore*\n  parent: System.ComponentModel.Design.DesignSurfaceManager\n  isExternal: false\n  name: CreateDesignSurfaceCore\n  nameWithType: DesignSurfaceManager.CreateDesignSurfaceCore\n  fullName: DesignSurfaceManager.CreateDesignSurfaceCore\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.ComponentModel.Design/DesignSurfaceManager.xml\n- uid: System.ComponentModel.Design.DesignSurfaceManager.DesignSurfaces*\n  parent: System.ComponentModel.Design.DesignSurfaceManager\n  isExternal: false\n  name: DesignSurfaces\n  nameWithType: DesignSurfaceManager.DesignSurfaces\n  fullName: DesignSurfaceManager.DesignSurfaces\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.ComponentModel.Design/DesignSurfaceManager.xml\n- uid: System.ComponentModel.Design.DesignSurfaceManager.Dispose*\n  parent: System.ComponentModel.Design.DesignSurfaceManager\n  isExternal: false\n  name: Dispose\n  nameWithType: DesignSurfaceManager.Dispose\n  fullName: DesignSurfaceManager.Dispose\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.ComponentModel.Design/DesignSurfaceManager.xml\n- uid: System.ComponentModel.Design.DesignSurfaceManager.GetService*\n  parent: System.ComponentModel.Design.DesignSurfaceManager\n  isExternal: false\n  name: GetService\n  nameWithType: DesignSurfaceManager.GetService\n  fullName: DesignSurfaceManager.GetService\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.ComponentModel.Design/DesignSurfaceManager.xml\n- uid: System.ComponentModel.Design.DesignSurfaceManager.ServiceContainer*\n  parent: System.ComponentModel.Design.DesignSurfaceManager\n  isExternal: false\n  name: ServiceContainer\n  nameWithType: DesignSurfaceManager.ServiceContainer\n  fullName: DesignSurfaceManager.ServiceContainer\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.ComponentModel.Design/DesignSurfaceManager.xml\n- uid: System.Object.Equals(System.Object)\n  parent: System.Object\n  isExternal: false\n  name: Equals(Object)\n  nameWithType: Object.Equals(Object)\n  fullName: Object.Equals(Object)\n- uid: System.Object.Equals(System.Object,System.Object)\n  parent: System.Object\n  isExternal: false\n  name: Equals(Object, Object)\n  nameWithType: Object.Equals(Object, Object)\n  fullName: Object.Equals(Object, Object)\n- uid: System.Object.GetHashCode\n  parent: System.Object\n  isExternal: false\n  name: GetHashCode()\n  nameWithType: Object.GetHashCode()\n  fullName: Object.GetHashCode()\n- uid: System.Object.GetType\n  parent: System.Object\n  isExternal: false\n  name: GetType()\n  nameWithType: Object.GetType()\n  fullName: Object.GetType()\n- uid: System.Object.MemberwiseClone\n  parent: System.Object\n  isExternal: false\n  name: MemberwiseClone()\n  nameWithType: Object.MemberwiseClone()\n  fullName: Object.MemberwiseClone()\n- uid: System.Object.ReferenceEquals(System.Object,System.Object)\n  parent: System.Object\n  isExternal: false\n  name: ReferenceEquals(Object, Object)\n  nameWithType: Object.ReferenceEquals(Object, Object)\n  fullName: Object.ReferenceEquals(Object, Object)\n- uid: System.Object.ToString\n  parent: System.Object\n  isExternal: false\n  name: ToString()\n  nameWithType: Object.ToString()\n  fullName: Object.ToString()\n- uid: System.IDisposable\n  parent: System\n  isExternal: false\n  name: IDisposable\n  nameWithType: IDisposable\n  fullName: System.IDisposable\n"}