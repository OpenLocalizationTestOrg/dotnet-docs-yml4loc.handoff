{"nodes":[{"content":"Specifies properties of algorithms. This is an `abstract` class.","nodes":[{"pos":[0,64],"content":"Specifies properties of algorithms. This is an `abstract` class.","nodes":[{"content":"Specifies properties of algorithms.","pos":[0,35]},{"content":"This is an <ph id=\"ph1\">`abstract`</ph> class.","pos":[36,64],"source":" This is an `abstract` class."}]}],"pos":[3776,3841],"yaml":true},{"content":"Instances of this class are used to specify the cryptographic characteristics of the algorithms used when securing messages.  \n  \n This class is used by derived classes to instantiate security algorithm suites, and contains properties that describe the security algorithms. For example, the `wsBasicHttp` binding uses an internal derived class to specify the properties of its security algorithms.","nodes":[{"pos":[0,124],"content":"Instances of this class are used to specify the cryptographic characteristics of the algorithms used when securing messages.","nodes":[{"content":"Instances of this class are used to specify the cryptographic characteristics of the algorithms used when securing messages.","pos":[0,124]}]},{"pos":[131,397],"content":"This class is used by derived classes to instantiate security algorithm suites, and contains properties that describe the security algorithms. For example, the `wsBasicHttp` binding uses an internal derived class to specify the properties of its security algorithms.","nodes":[{"content":"This class is used by derived classes to instantiate security algorithm suites, and contains properties that describe the security algorithms.","pos":[0,142]},{"content":"For example, the <ph id=\"ph1\">`wsBasicHttp`</ph> binding uses an internal derived class to specify the properties of its security algorithms.","pos":[143,266],"source":" For example, the `wsBasicHttp` binding uses an internal derived class to specify the properties of its security algorithms."}]}],"pos":[3852,4254],"yaml":true,"extradata":"MT"},{"content":"Initializes a new instance of the <xref href=\"System.ServiceModel.Security.SecurityAlgorithmSuite\"></xref> class.","nodes":[{"pos":[0,113],"content":"Initializes a new instance of the <ph id=\"ph1\">&lt;xref href=\"System.ServiceModel.Security.SecurityAlgorithmSuite\"&gt;&lt;/xref&gt;</ph> class.","source":"Initializes a new instance of the <xref href=\"System.ServiceModel.Security.SecurityAlgorithmSuite\"></xref> class."}],"pos":[6028,6142],"yaml":true},{"content":"The instances of this class consist of static properties and read-only properties, so the constructor does not initialize any properties.","nodes":[{"pos":[0,137],"content":"The instances of this class consist of static properties and read-only properties, so the constructor does not initialize any properties.","nodes":[{"content":"The instances of this class consist of static properties and read-only properties, so the constructor does not initialize any properties.","pos":[0,137]}]}],"pos":[6153,6291],"yaml":true,"extradata":"MT"},{"content":"Gets the Basic128 algorithm suite.","nodes":[{"pos":[0,34],"content":"Gets the Basic128 algorithm suite.","nodes":[{"content":"Gets the Basic128 algorithm suite.","pos":[0,34]}]}],"pos":[7501,7536],"yaml":true},{"content":"By default, AES-128 is used as the encryption algorithm.","nodes":[{"pos":[0,56],"content":"By default, AES-128 is used as the encryption algorithm.","nodes":[{"content":"By default, AES-128 is used as the encryption algorithm.","pos":[0,56]}]}],"pos":[7547,7604],"yaml":true,"extradata":"MT"},{"content":"The 128-bit Basic <xref href=\"System.ServiceModel.Security.SecurityAlgorithmSuite\"></xref>.","nodes":[{"pos":[0,91],"content":"The 128-bit Basic <ph id=\"ph1\">&lt;xref href=\"System.ServiceModel.Security.SecurityAlgorithmSuite\"&gt;&lt;/xref&gt;</ph>.","source":"The 128-bit Basic <xref href=\"System.ServiceModel.Security.SecurityAlgorithmSuite\"></xref>."}],"pos":[7806,7898],"yaml":true},{"content":"Gets an algorithm suite that uses RSA15 as the key wrap algorithm and 128-bit Basic as the message encryption algorithm.","nodes":[{"pos":[0,120],"content":"Gets an algorithm suite that uses RSA15 as the key wrap algorithm and 128-bit Basic as the message encryption algorithm.","nodes":[{"content":"Gets an algorithm suite that uses RSA15 as the key wrap algorithm and 128-bit Basic as the message encryption algorithm.","pos":[0,120]}]}],"pos":[9062,9183],"yaml":true},{"content":"The <xref:System.ServiceModel.Security.SecurityAlgorithmSuite> returned is actually an internal subclass that overrides some of the properties specifying default values as well as some of the methods.","nodes":[{"pos":[0,200],"content":"The <xref:System.ServiceModel.Security.SecurityAlgorithmSuite> returned is actually an internal subclass that overrides some of the properties specifying default values as well as some of the methods.","nodes":[{"content":"The <ph id=\"ph1\">&lt;xref:System.ServiceModel.Security.SecurityAlgorithmSuite&gt;</ph> returned is actually an internal subclass that overrides some of the properties specifying default values as well as some of the methods.","pos":[0,200],"source":"The <xref:System.ServiceModel.Security.SecurityAlgorithmSuite> returned is actually an internal subclass that overrides some of the properties specifying default values as well as some of the methods."}]}],"pos":[9194,9395],"yaml":true,"extradata":"MT"},{"content":"An algorithm suite that uses RSA15 as the key wrap algorithm and 128-bit Basic as the message encryption algorithm.","nodes":[{"pos":[0,115],"content":"An algorithm suite that uses RSA15 as the key wrap algorithm and 128-bit Basic as the message encryption algorithm.","nodes":[{"content":"An algorithm suite that uses RSA15 as the key wrap algorithm and 128-bit Basic as the message encryption algorithm.","pos":[0,115]}]}],"pos":[9602,9718],"yaml":true},{"content":"Gets an algorithm suite that uses SHA256 for the signature digest and 128-bit Basic as the message encryption algorithm.","nodes":[{"pos":[0,120],"content":"Gets an algorithm suite that uses SHA256 for the signature digest and 128-bit Basic as the message encryption algorithm.","nodes":[{"content":"Gets an algorithm suite that uses SHA256 for the signature digest and 128-bit Basic as the message encryption algorithm.","pos":[0,120]}]}],"pos":[10893,11014],"yaml":true},{"content":"The <xref:System.ServiceModel.Security.SecurityAlgorithmSuite> returned is actually an internal subclass that overrides some of the properties specifying default values as well as some of the methods.","nodes":[{"pos":[0,200],"content":"The <xref:System.ServiceModel.Security.SecurityAlgorithmSuite> returned is actually an internal subclass that overrides some of the properties specifying default values as well as some of the methods.","nodes":[{"content":"The <ph id=\"ph1\">&lt;xref:System.ServiceModel.Security.SecurityAlgorithmSuite&gt;</ph> returned is actually an internal subclass that overrides some of the properties specifying default values as well as some of the methods.","pos":[0,200],"source":"The <xref:System.ServiceModel.Security.SecurityAlgorithmSuite> returned is actually an internal subclass that overrides some of the properties specifying default values as well as some of the methods."}]}],"pos":[11025,11226],"yaml":true,"extradata":"MT"},{"content":"An algorithm suite that uses SHA256 for the signature digest and 128-bit Basic as the message encryption algorithm.","nodes":[{"pos":[0,115],"content":"An algorithm suite that uses SHA256 for the signature digest and 128-bit Basic as the message encryption algorithm.","nodes":[{"content":"An algorithm suite that uses SHA256 for the signature digest and 128-bit Basic as the message encryption algorithm.","pos":[0,115]}]}],"pos":[11434,11550],"yaml":true},{"content":"Gets an algorithm suite that uses RSA15 as the key wrap algorithm, SHA256 for the signature digest, and 128-bit Basic as the message encryption algorithm.","nodes":[{"pos":[0,154],"content":"Gets an algorithm suite that uses RSA15 as the key wrap algorithm, SHA256 for the signature digest, and 128-bit Basic as the message encryption algorithm.","nodes":[{"content":"Gets an algorithm suite that uses RSA15 as the key wrap algorithm, SHA256 for the signature digest, and 128-bit Basic as the message encryption algorithm.","pos":[0,154]}]}],"pos":[12756,12911],"yaml":true},{"content":"The <xref:System.ServiceModel.Security.SecurityAlgorithmSuite> returned is actually an internal subclass that overrides some of the properties specifying default values as well as some of the methods.","nodes":[{"pos":[0,200],"content":"The <xref:System.ServiceModel.Security.SecurityAlgorithmSuite> returned is actually an internal subclass that overrides some of the properties specifying default values as well as some of the methods.","nodes":[{"content":"The <ph id=\"ph1\">&lt;xref:System.ServiceModel.Security.SecurityAlgorithmSuite&gt;</ph> returned is actually an internal subclass that overrides some of the properties specifying default values as well as some of the methods.","pos":[0,200],"source":"The <xref:System.ServiceModel.Security.SecurityAlgorithmSuite> returned is actually an internal subclass that overrides some of the properties specifying default values as well as some of the methods."}]}],"pos":[12922,13123],"yaml":true,"extradata":"MT"},{"content":"An algorithm suite that uses RSA15 as the key wrap algorithm, SHA256 for the signature digest, and 128-bit Basic as the message encryption algorithm.","nodes":[{"pos":[0,149],"content":"An algorithm suite that uses RSA15 as the key wrap algorithm, SHA256 for the signature digest, and 128-bit Basic as the message encryption algorithm.","nodes":[{"content":"An algorithm suite that uses RSA15 as the key wrap algorithm, SHA256 for the signature digest, and 128-bit Basic as the message encryption algorithm.","pos":[0,149]}]}],"pos":[13336,13486],"yaml":true},{"content":"Gets an algorithm suite that uses 192-bit Basic as the message encryption algorithm.","nodes":[{"pos":[0,84],"content":"Gets an algorithm suite that uses 192-bit Basic as the message encryption algorithm.","nodes":[{"content":"Gets an algorithm suite that uses 192-bit Basic as the message encryption algorithm.","pos":[0,84]}]}],"pos":[14631,14716],"yaml":true},{"content":"By default, AES-192 is used as the encryption algorithm.","nodes":[{"pos":[0,56],"content":"By default, AES-192 is used as the encryption algorithm.","nodes":[{"content":"By default, AES-192 is used as the encryption algorithm.","pos":[0,56]}]}],"pos":[14727,14784],"yaml":true,"extradata":"MT"},{"content":"An algorithm suite that uses 192-bit Basic as the message encryption algorithm.","nodes":[{"pos":[0,79],"content":"An algorithm suite that uses 192-bit Basic as the message encryption algorithm.","nodes":[{"content":"An algorithm suite that uses 192-bit Basic as the message encryption algorithm.","pos":[0,79]}]}],"pos":[14986,15066],"yaml":true},{"content":"Gets an algorithm suite that uses RSA15 as the key wrap algorithm and 192-bit Basic as the message encryption algorithm.","nodes":[{"pos":[0,120],"content":"Gets an algorithm suite that uses RSA15 as the key wrap algorithm and 192-bit Basic as the message encryption algorithm.","nodes":[{"content":"Gets an algorithm suite that uses RSA15 as the key wrap algorithm and 192-bit Basic as the message encryption algorithm.","pos":[0,120]}]}],"pos":[16230,16351],"yaml":true},{"content":"The <xref:System.ServiceModel.Security.SecurityAlgorithmSuite> returned is actually an internal subclass that overrides some of the properties specifying default values as well as some of the methods.","nodes":[{"pos":[0,200],"content":"The <xref:System.ServiceModel.Security.SecurityAlgorithmSuite> returned is actually an internal subclass that overrides some of the properties specifying default values as well as some of the methods.","nodes":[{"content":"The <ph id=\"ph1\">&lt;xref:System.ServiceModel.Security.SecurityAlgorithmSuite&gt;</ph> returned is actually an internal subclass that overrides some of the properties specifying default values as well as some of the methods.","pos":[0,200],"source":"The <xref:System.ServiceModel.Security.SecurityAlgorithmSuite> returned is actually an internal subclass that overrides some of the properties specifying default values as well as some of the methods."}]}],"pos":[16362,16563],"yaml":true,"extradata":"MT"},{"content":"An algorithm suite that uses RSA15 as the key wrap algorithm and 192-bit Basic as the message encryption algorithm.","nodes":[{"pos":[0,115],"content":"An algorithm suite that uses RSA15 as the key wrap algorithm and 192-bit Basic as the message encryption algorithm.","nodes":[{"content":"An algorithm suite that uses RSA15 as the key wrap algorithm and 192-bit Basic as the message encryption algorithm.","pos":[0,115]}]}],"pos":[16770,16886],"yaml":true},{"content":"Gets an algorithm suite which uses SHA256 for the signature digest and 192-bit Basic as the message encryption algorithm.","nodes":[{"pos":[0,121],"content":"Gets an algorithm suite which uses SHA256 for the signature digest and 192-bit Basic as the message encryption algorithm.","nodes":[{"content":"Gets an algorithm suite which uses SHA256 for the signature digest and 192-bit Basic as the message encryption algorithm.","pos":[0,121]}]}],"pos":[18061,18183],"yaml":true},{"content":"The <xref:System.ServiceModel.Security.SecurityAlgorithmSuite> returned is actually an internal subclass that overrides some of the properties specifying default values as well as some of the methods.","nodes":[{"pos":[0,200],"content":"The <xref:System.ServiceModel.Security.SecurityAlgorithmSuite> returned is actually an internal subclass that overrides some of the properties specifying default values as well as some of the methods.","nodes":[{"content":"The <ph id=\"ph1\">&lt;xref:System.ServiceModel.Security.SecurityAlgorithmSuite&gt;</ph> returned is actually an internal subclass that overrides some of the properties specifying default values as well as some of the methods.","pos":[0,200],"source":"The <xref:System.ServiceModel.Security.SecurityAlgorithmSuite> returned is actually an internal subclass that overrides some of the properties specifying default values as well as some of the methods."}]}],"pos":[18194,18395],"yaml":true,"extradata":"MT"},{"content":"An algorithm suite which uses SHA256 for the signature digest and 192-bit Basic as the message encryption algorithm.","nodes":[{"pos":[0,116],"content":"An algorithm suite which uses SHA256 for the signature digest and 192-bit Basic as the message encryption algorithm.","nodes":[{"content":"An algorithm suite which uses SHA256 for the signature digest and 192-bit Basic as the message encryption algorithm.","pos":[0,116]}]}],"pos":[18603,18720],"yaml":true},{"content":"Gets an algorithm suite that uses RSA15 as the key wrap algorithm, SHA256 for the signature digest, and 192-bit Basic as the message encryption algorithm.","nodes":[{"pos":[0,154],"content":"Gets an algorithm suite that uses RSA15 as the key wrap algorithm, SHA256 for the signature digest, and 192-bit Basic as the message encryption algorithm.","nodes":[{"content":"Gets an algorithm suite that uses RSA15 as the key wrap algorithm, SHA256 for the signature digest, and 192-bit Basic as the message encryption algorithm.","pos":[0,154]}]}],"pos":[19926,20081],"yaml":true},{"content":"The <xref:System.ServiceModel.Security.SecurityAlgorithmSuite> returned is actually an internal subclass that overrides some of the properties specifying default values as well as some of the methods.","nodes":[{"pos":[0,200],"content":"The <xref:System.ServiceModel.Security.SecurityAlgorithmSuite> returned is actually an internal subclass that overrides some of the properties specifying default values as well as some of the methods.","nodes":[{"content":"The <ph id=\"ph1\">&lt;xref:System.ServiceModel.Security.SecurityAlgorithmSuite&gt;</ph> returned is actually an internal subclass that overrides some of the properties specifying default values as well as some of the methods.","pos":[0,200],"source":"The <xref:System.ServiceModel.Security.SecurityAlgorithmSuite> returned is actually an internal subclass that overrides some of the properties specifying default values as well as some of the methods."}]}],"pos":[20092,20293],"yaml":true,"extradata":"MT"},{"content":"An algorithm suite that uses RSA15 as the key wrap algorithm, SHA256 for the signature digest, and 192-bit Basic as the message encryption algorithm.","nodes":[{"pos":[0,149],"content":"An algorithm suite that uses RSA15 as the key wrap algorithm, SHA256 for the signature digest, and 192-bit Basic as the message encryption algorithm.","nodes":[{"content":"An algorithm suite that uses RSA15 as the key wrap algorithm, SHA256 for the signature digest, and 192-bit Basic as the message encryption algorithm.","pos":[0,149]}]}],"pos":[20506,20656],"yaml":true},{"content":"Gets an algorithm suite that uses 256-bit Basic as the message encryption algorithm.","nodes":[{"pos":[0,84],"content":"Gets an algorithm suite that uses 256-bit Basic as the message encryption algorithm.","nodes":[{"content":"Gets an algorithm suite that uses 256-bit Basic as the message encryption algorithm.","pos":[0,84]}]}],"pos":[21801,21886],"yaml":true},{"content":"By default, AES-256 is used for the encryption algorithm.","nodes":[{"pos":[0,57],"content":"By default, AES-256 is used for the encryption algorithm.","nodes":[{"content":"By default, AES-256 is used for the encryption algorithm.","pos":[0,57]}]}],"pos":[21897,21955],"yaml":true,"extradata":"MT"},{"content":"An algorithm suite that uses 256-bit Basic as the message encryption algorithm.","nodes":[{"pos":[0,79],"content":"An algorithm suite that uses 256-bit Basic as the message encryption algorithm.","nodes":[{"content":"An algorithm suite that uses 256-bit Basic as the message encryption algorithm.","pos":[0,79]}]}],"pos":[22548,22628],"yaml":true},{"content":"Gets an algorithm suite that uses RSA15 as the key wrap algorithm and 256-bit Basic as the message encryption algorithm.","nodes":[{"pos":[0,120],"content":"Gets an algorithm suite that uses RSA15 as the key wrap algorithm and 256-bit Basic as the message encryption algorithm.","nodes":[{"content":"Gets an algorithm suite that uses RSA15 as the key wrap algorithm and 256-bit Basic as the message encryption algorithm.","pos":[0,120]}]}],"pos":[23792,23913],"yaml":true},{"content":"The <xref:System.ServiceModel.Security.SecurityAlgorithmSuite> returned is actually an internal subclass that overrides some of the properties specifying default values as well as some of the methods.","nodes":[{"pos":[0,200],"content":"The <xref:System.ServiceModel.Security.SecurityAlgorithmSuite> returned is actually an internal subclass that overrides some of the properties specifying default values as well as some of the methods.","nodes":[{"content":"The <ph id=\"ph1\">&lt;xref:System.ServiceModel.Security.SecurityAlgorithmSuite&gt;</ph> returned is actually an internal subclass that overrides some of the properties specifying default values as well as some of the methods.","pos":[0,200],"source":"The <xref:System.ServiceModel.Security.SecurityAlgorithmSuite> returned is actually an internal subclass that overrides some of the properties specifying default values as well as some of the methods."}]}],"pos":[23924,24125],"yaml":true,"extradata":"MT"},{"content":"An algorithm suite that uses RSA15 as the key wrap algorithm and 256-bit Basic as the message encryption algorithm.","nodes":[{"pos":[0,115],"content":"An algorithm suite that uses RSA15 as the key wrap algorithm and 256-bit Basic as the message encryption algorithm.","nodes":[{"content":"An algorithm suite that uses RSA15 as the key wrap algorithm and 256-bit Basic as the message encryption algorithm.","pos":[0,115]}]}],"pos":[24332,24448],"yaml":true},{"content":"Gets an algorithm suite that uses SHA256 for the signature digest and 256-bit Basic as the message encryption algorithm.","nodes":[{"pos":[0,120],"content":"Gets an algorithm suite that uses SHA256 for the signature digest and 256-bit Basic as the message encryption algorithm.","nodes":[{"content":"Gets an algorithm suite that uses SHA256 for the signature digest and 256-bit Basic as the message encryption algorithm.","pos":[0,120]}]}],"pos":[25623,25744],"yaml":true},{"content":"The <xref:System.ServiceModel.Security.SecurityAlgorithmSuite> returned is actually an internal subclass that overrides some of the properties specifying default values as well as some of the methods.","nodes":[{"pos":[0,200],"content":"The <xref:System.ServiceModel.Security.SecurityAlgorithmSuite> returned is actually an internal subclass that overrides some of the properties specifying default values as well as some of the methods.","nodes":[{"content":"The <ph id=\"ph1\">&lt;xref:System.ServiceModel.Security.SecurityAlgorithmSuite&gt;</ph> returned is actually an internal subclass that overrides some of the properties specifying default values as well as some of the methods.","pos":[0,200],"source":"The <xref:System.ServiceModel.Security.SecurityAlgorithmSuite> returned is actually an internal subclass that overrides some of the properties specifying default values as well as some of the methods."}]}],"pos":[25755,25956],"yaml":true,"extradata":"MT"},{"content":"An algorithm suite that uses SHA256 for the signature digest and 256-bit Basic as the message encryption algorithm.","nodes":[{"pos":[0,115],"content":"An algorithm suite that uses SHA256 for the signature digest and 256-bit Basic as the message encryption algorithm.","nodes":[{"content":"An algorithm suite that uses SHA256 for the signature digest and 256-bit Basic as the message encryption algorithm.","pos":[0,115]}]}],"pos":[26164,26280],"yaml":true},{"content":"Gets an algorithm suite that uses RSA15 as the key wrap algorithm, SHA256 for the signature digest, and 256-bit Basic as the message encryption algorithm.","nodes":[{"pos":[0,154],"content":"Gets an algorithm suite that uses RSA15 as the key wrap algorithm, SHA256 for the signature digest, and 256-bit Basic as the message encryption algorithm.","nodes":[{"content":"Gets an algorithm suite that uses RSA15 as the key wrap algorithm, SHA256 for the signature digest, and 256-bit Basic as the message encryption algorithm.","pos":[0,154]}]}],"pos":[27486,27641],"yaml":true},{"content":"The <xref:System.ServiceModel.Security.SecurityAlgorithmSuite> returned is actually an internal subclass that overrides some of the properties specifying default values as well as some of the methods.","nodes":[{"pos":[0,200],"content":"The <xref:System.ServiceModel.Security.SecurityAlgorithmSuite> returned is actually an internal subclass that overrides some of the properties specifying default values as well as some of the methods.","nodes":[{"content":"The <ph id=\"ph1\">&lt;xref:System.ServiceModel.Security.SecurityAlgorithmSuite&gt;</ph> returned is actually an internal subclass that overrides some of the properties specifying default values as well as some of the methods.","pos":[0,200],"source":"The <xref:System.ServiceModel.Security.SecurityAlgorithmSuite> returned is actually an internal subclass that overrides some of the properties specifying default values as well as some of the methods."}]}],"pos":[27652,27853],"yaml":true,"extradata":"MT"},{"content":"An algorithm suite that uses RSA15 as the key wrap algorithm, SHA256 for the signature digest, and 256-bit Basic as the message encryption algorithm.","nodes":[{"pos":[0,149],"content":"An algorithm suite that uses RSA15 as the key wrap algorithm, SHA256 for the signature digest, and 256-bit Basic as the message encryption algorithm.","nodes":[{"content":"An algorithm suite that uses RSA15 as the key wrap algorithm, SHA256 for the signature digest, and 256-bit Basic as the message encryption algorithm.","pos":[0,149]}]}],"pos":[28066,28216],"yaml":true},{"content":"Gets the default algorithm suite.","nodes":[{"pos":[0,33],"content":"Gets the default algorithm suite.","nodes":[{"content":"Gets the default algorithm suite.","pos":[0,33]}]}],"pos":[29355,29389],"yaml":true},{"content":"The <xref:System.ServiceModel.Security.SecurityAlgorithmSuite> returned is actually an internal subclass that overrides the properties specifying default values as well as the methods.","nodes":[{"pos":[0,184],"content":"The <xref:System.ServiceModel.Security.SecurityAlgorithmSuite> returned is actually an internal subclass that overrides the properties specifying default values as well as the methods.","nodes":[{"content":"The <ph id=\"ph1\">&lt;xref:System.ServiceModel.Security.SecurityAlgorithmSuite&gt;</ph> returned is actually an internal subclass that overrides the properties specifying default values as well as the methods.","pos":[0,184],"source":"The <xref:System.ServiceModel.Security.SecurityAlgorithmSuite> returned is actually an internal subclass that overrides the properties specifying default values as well as the methods."}]}],"pos":[29400,29585],"yaml":true,"extradata":"MT"},{"content":"The default <xref href=\"System.ServiceModel.Security.SecurityAlgorithmSuite\"></xref> is <xref href=\"System.ServiceModel.Security.SecurityAlgorithmSuite.Basic256\"></xref>, which specifies 256-bit Advanced Encryption Standard (AES) as the symmetric encryption algorithm.","nodes":[{"pos":[0,268],"content":"The default <ph id=\"ph1\">&lt;xref href=\"System.ServiceModel.Security.SecurityAlgorithmSuite\"&gt;&lt;/xref&gt;</ph> is <ph id=\"ph2\">&lt;xref href=\"System.ServiceModel.Security.SecurityAlgorithmSuite.Basic256\"&gt;&lt;/xref&gt;</ph>, which specifies 256-bit Advanced Encryption Standard (AES) as the symmetric encryption algorithm.","source":"The default <xref href=\"System.ServiceModel.Security.SecurityAlgorithmSuite\"></xref> is <xref href=\"System.ServiceModel.Security.SecurityAlgorithmSuite.Basic256\"></xref>, which specifies 256-bit Advanced Encryption Standard (AES) as the symmetric encryption algorithm."}],"pos":[29786,30055],"yaml":true},{"content":"Gets the default asymmetric key wrap algorithm as a string.","nodes":[{"pos":[0,59],"content":"Gets the default asymmetric key wrap algorithm as a string.","nodes":[{"content":"Gets the default asymmetric key wrap algorithm as a string.","pos":[0,59]}]}],"pos":[31338,31398],"yaml":true},{"content":"When overridden, provides a string value that will be used for comparison in the <xref:System.ServiceModel.Security.SecurityAlgorithmSuite.IsAsymmetricKeyWrapAlgorithmSupported%2A> method.","nodes":[{"pos":[0,188],"content":"When overridden, provides a string value that will be used for comparison in the <xref:System.ServiceModel.Security.SecurityAlgorithmSuite.IsAsymmetricKeyWrapAlgorithmSupported%2A> method.","nodes":[{"content":"When overridden, provides a string value that will be used for comparison in the <ph id=\"ph1\">&lt;xref:System.ServiceModel.Security.SecurityAlgorithmSuite.IsAsymmetricKeyWrapAlgorithmSupported%2A&gt;</ph> method.","pos":[0,188],"source":"When overridden, provides a string value that will be used for comparison in the <xref:System.ServiceModel.Security.SecurityAlgorithmSuite.IsAsymmetricKeyWrapAlgorithmSupported%2A> method."}]}],"pos":[31409,31598],"yaml":true,"extradata":"MT"},{"content":"The default asymmetric key wrap algorithm.","nodes":[{"pos":[0,42],"content":"The default asymmetric key wrap algorithm.","nodes":[{"content":"The default asymmetric key wrap algorithm.","pos":[0,42]}]}],"pos":[31744,31787],"yaml":true},{"content":"Gets the default asymmetric signature algorithm as a string.","nodes":[{"pos":[0,60],"content":"Gets the default asymmetric signature algorithm as a string.","nodes":[{"content":"Gets the default asymmetric signature algorithm as a string.","pos":[0,60]}]}],"pos":[33108,33169],"yaml":true},{"content":"When overridden, provides a string value that will be used for comparison in the <xref:System.ServiceModel.Security.SecurityAlgorithmSuite.IsAsymmetricSignatureAlgorithmSupported%2A> method.","nodes":[{"pos":[0,190],"content":"When overridden, provides a string value that will be used for comparison in the <xref:System.ServiceModel.Security.SecurityAlgorithmSuite.IsAsymmetricSignatureAlgorithmSupported%2A> method.","nodes":[{"content":"When overridden, provides a string value that will be used for comparison in the <ph id=\"ph1\">&lt;xref:System.ServiceModel.Security.SecurityAlgorithmSuite.IsAsymmetricSignatureAlgorithmSupported%2A&gt;</ph> method.","pos":[0,190],"source":"When overridden, provides a string value that will be used for comparison in the <xref:System.ServiceModel.Security.SecurityAlgorithmSuite.IsAsymmetricSignatureAlgorithmSupported%2A> method."}]}],"pos":[33180,33371],"yaml":true,"extradata":"MT"},{"content":"The default asymmetric signature algorithm.","nodes":[{"pos":[0,43],"content":"The default asymmetric signature algorithm.","nodes":[{"content":"The default asymmetric signature algorithm.","pos":[0,43]}]}],"pos":[33519,33563],"yaml":true},{"content":"Gets the default canonicalization algorithm as a string.","nodes":[{"pos":[0,56],"content":"Gets the default canonicalization algorithm as a string.","nodes":[{"content":"Gets the default canonicalization algorithm as a string.","pos":[0,56]}]}],"pos":[34868,34925],"yaml":true},{"content":"When overridden, provides a string value that will be used for comparison in the method <xref:System.ServiceModel.Security.SecurityAlgorithmSuite.IsCanonicalizationAlgorithmSupported%2A>.","nodes":[{"pos":[0,187],"content":"When overridden, provides a string value that will be used for comparison in the method <xref:System.ServiceModel.Security.SecurityAlgorithmSuite.IsCanonicalizationAlgorithmSupported%2A>.","nodes":[{"content":"When overridden, provides a string value that will be used for comparison in the method <ph id=\"ph1\">&lt;xref:System.ServiceModel.Security.SecurityAlgorithmSuite.IsCanonicalizationAlgorithmSupported%2A&gt;</ph>.","pos":[0,187],"source":"When overridden, provides a string value that will be used for comparison in the method <xref:System.ServiceModel.Security.SecurityAlgorithmSuite.IsCanonicalizationAlgorithmSupported%2A>."}]}],"pos":[34936,35124],"yaml":true,"extradata":"MT"},{"content":"The default canonicalization algorithm.","nodes":[{"pos":[0,39],"content":"The default canonicalization algorithm.","nodes":[{"content":"The default canonicalization algorithm.","pos":[0,39]}]}],"pos":[35269,35309],"yaml":true},{"content":"Gets the default digest algorithm as a string.","nodes":[{"pos":[0,46],"content":"Gets the default digest algorithm as a string.","nodes":[{"content":"Gets the default digest algorithm as a string.","pos":[0,46]}]}],"pos":[36551,36598],"yaml":true},{"content":"When overridden, provides a string value that will be used for comparison in the <xref:System.ServiceModel.Security.SecurityAlgorithmSuite.IsDigestAlgorithmSupported%2A> method.","nodes":[{"pos":[0,177],"content":"When overridden, provides a string value that will be used for comparison in the <xref:System.ServiceModel.Security.SecurityAlgorithmSuite.IsDigestAlgorithmSupported%2A> method.","nodes":[{"content":"When overridden, provides a string value that will be used for comparison in the <ph id=\"ph1\">&lt;xref:System.ServiceModel.Security.SecurityAlgorithmSuite.IsDigestAlgorithmSupported%2A&gt;</ph> method.","pos":[0,177],"source":"When overridden, provides a string value that will be used for comparison in the <xref:System.ServiceModel.Security.SecurityAlgorithmSuite.IsDigestAlgorithmSupported%2A> method."}]}],"pos":[36609,36787],"yaml":true,"extradata":"MT"},{"content":"The default digest algorithm.","nodes":[{"pos":[0,29],"content":"The default digest algorithm.","nodes":[{"content":"The default digest algorithm.","pos":[0,29]}]}],"pos":[36922,36952],"yaml":true},{"content":"Gets the default encryption algorithm as a string.","nodes":[{"pos":[0,50],"content":"Gets the default encryption algorithm as a string.","nodes":[{"content":"Gets the default encryption algorithm as a string.","pos":[0,50]}]}],"pos":[38208,38259],"yaml":true},{"content":"When overridden, provides a string value that will be used for comparison in the <xref:System.ServiceModel.Security.SecurityAlgorithmSuite.IsEncryptionAlgorithmSupported%2A> method.","nodes":[{"pos":[0,181],"content":"When overridden, provides a string value that will be used for comparison in the <xref:System.ServiceModel.Security.SecurityAlgorithmSuite.IsEncryptionAlgorithmSupported%2A> method.","nodes":[{"content":"When overridden, provides a string value that will be used for comparison in the <ph id=\"ph1\">&lt;xref:System.ServiceModel.Security.SecurityAlgorithmSuite.IsEncryptionAlgorithmSupported%2A&gt;</ph> method.","pos":[0,181],"source":"When overridden, provides a string value that will be used for comparison in the <xref:System.ServiceModel.Security.SecurityAlgorithmSuite.IsEncryptionAlgorithmSupported%2A> method."}]}],"pos":[38270,38452],"yaml":true,"extradata":"MT"},{"content":"The default encryption algorithm.","nodes":[{"pos":[0,33],"content":"The default encryption algorithm.","nodes":[{"content":"The default encryption algorithm.","pos":[0,33]}]}],"pos":[38591,38625],"yaml":true},{"content":"Gets the default encryption key derivation length as an <xref href=\"System.Int32\"></xref> value.","nodes":[{"pos":[0,96],"content":"Gets the default encryption key derivation length as an <ph id=\"ph1\">&lt;xref href=\"System.Int32\"&gt;&lt;/xref&gt;</ph> value.","source":"Gets the default encryption key derivation length as an <xref href=\"System.Int32\"></xref> value."}],"pos":[39945,40042],"yaml":true},{"content":"The returned value will vary depending on the subclass that implements it. For `Basic256` encryption, it returns 256.","nodes":[{"pos":[0,117],"content":"The returned value will vary depending on the subclass that implements it. For `Basic256` encryption, it returns 256.","nodes":[{"content":"The returned value will vary depending on the subclass that implements it.","pos":[0,74]},{"content":"For <ph id=\"ph1\">`Basic256`</ph> encryption, it returns 256.","pos":[75,117],"source":" For `Basic256` encryption, it returns 256."}]}],"pos":[40053,40171],"yaml":true,"extradata":"MT"},{"content":"The default encryption key derivation length.","nodes":[{"pos":[0,45],"content":"The default encryption key derivation length.","nodes":[{"content":"The default encryption key derivation length.","pos":[0,45]}]}],"pos":[40316,40362],"yaml":true},{"content":"Gets the default signature key derivation length as an <xref href=\"System.Int32\"></xref> value.","nodes":[{"pos":[0,95],"content":"Gets the default signature key derivation length as an <ph id=\"ph1\">&lt;xref href=\"System.Int32\"&gt;&lt;/xref&gt;</ph> value.","source":"Gets the default signature key derivation length as an <xref href=\"System.Int32\"></xref> value."}],"pos":[41686,41782],"yaml":true},{"content":"The returned value will vary depending on the subclass that implements it. For `Basic256` encryption, it returns 192.","nodes":[{"pos":[0,117],"content":"The returned value will vary depending on the subclass that implements it. For `Basic256` encryption, it returns 192.","nodes":[{"content":"The returned value will vary depending on the subclass that implements it.","pos":[0,74]},{"content":"For <ph id=\"ph1\">`Basic256`</ph> encryption, it returns 192.","pos":[75,117],"source":" For `Basic256` encryption, it returns 192."}]}],"pos":[41793,41911],"yaml":true,"extradata":"MT"},{"content":"The default signature key derivation length.","nodes":[{"pos":[0,44],"content":"The default signature key derivation length.","nodes":[{"content":"The default signature key derivation length.","pos":[0,44]}]}],"pos":[42055,42100],"yaml":true},{"content":"Gets the default symmetric key length as an <xref href=\"System.Int32\"></xref> value.","nodes":[{"pos":[0,84],"content":"Gets the default symmetric key length as an <ph id=\"ph1\">&lt;xref href=\"System.Int32\"&gt;&lt;/xref&gt;</ph> value.","source":"Gets the default symmetric key length as an <xref href=\"System.Int32\"></xref> value."}],"pos":[43363,43448],"yaml":true},{"content":"The returned value will vary depending on the subclass that implements it. For `Basic256` encryption, it returns 256.","nodes":[{"pos":[0,117],"content":"The returned value will vary depending on the subclass that implements it. For `Basic256` encryption, it returns 256.","nodes":[{"content":"The returned value will vary depending on the subclass that implements it.","pos":[0,74]},{"content":"For <ph id=\"ph1\">`Basic256`</ph> encryption, it returns 256.","pos":[75,117],"source":" For `Basic256` encryption, it returns 256."}]}],"pos":[43459,43577],"yaml":true,"extradata":"MT"},{"content":"The default symmetric key length.","nodes":[{"pos":[0,33],"content":"The default symmetric key length.","nodes":[{"content":"The default symmetric key length.","pos":[0,33]}]}],"pos":[43711,43745],"yaml":true},{"content":"Gets the default symmetric key wrap algorithm as a string.","nodes":[{"pos":[0,58],"content":"Gets the default symmetric key wrap algorithm as a string.","nodes":[{"content":"Gets the default symmetric key wrap algorithm as a string.","pos":[0,58]}]}],"pos":[45040,45099],"yaml":true},{"content":"The default symmetric key wrap algorithm.","nodes":[{"pos":[0,41],"content":"The default symmetric key wrap algorithm.","nodes":[{"content":"The default symmetric key wrap algorithm.","pos":[0,41]}]}],"pos":[45244,45286],"yaml":true},{"content":"Gets the default symmetric signature algorithm as a string.","nodes":[{"pos":[0,59],"content":"Gets the default symmetric signature algorithm as a string.","nodes":[{"content":"Gets the default symmetric signature algorithm as a string.","pos":[0,59]}]}],"pos":[46600,46660],"yaml":true},{"content":"The default symmetric signature algorithm.","nodes":[{"pos":[0,42],"content":"The default symmetric signature algorithm.","nodes":[{"content":"The default symmetric signature algorithm.","pos":[0,42]}]}],"pos":[46807,46850],"yaml":true},{"content":"Indicates whether a particular key length is supported by the asymmetric algorithm.","nodes":[{"pos":[0,83],"content":"Indicates whether a particular key length is supported by the asymmetric algorithm.","nodes":[{"content":"Indicates whether a particular key length is supported by the asymmetric algorithm.","pos":[0,83]}]}],"pos":[48203,48287],"yaml":true},{"content":"Typical key lengths are 128, 192, and 256 bits.","nodes":[{"pos":[0,47],"content":"Typical key lengths are 128, 192, and 256 bits.","nodes":[{"content":"Typical key lengths are 128, 192, and 256 bits.","pos":[0,47]}]}],"pos":[48298,48346],"yaml":true,"extradata":"MT"},{"content":"The key length to check.","nodes":[{"pos":[0,24],"content":"The key length to check.","nodes":[{"content":"The key length to check.","pos":[0,24]}]}],"pos":[48512,48537],"yaml":true},{"content":"`true` if the key length is supported by the asymmetric algorithm; otherwise, `false`.","nodes":[{"pos":[0,86],"content":"<ph id=\"ph1\">`true`</ph> if the key length is supported by the asymmetric algorithm; otherwise, <ph id=\"ph2\">`false`</ph>.","source":"`true` if the key length is supported by the asymmetric algorithm; otherwise, `false`."}],"pos":[48595,48684],"yaml":true},{"content":"Indicates whether an asymmetric key wrap algorithm is supported.","nodes":[{"pos":[0,64],"content":"Indicates whether an asymmetric key wrap algorithm is supported.","nodes":[{"content":"Indicates whether an asymmetric key wrap algorithm is supported.","pos":[0,64]}]}],"pos":[50081,50146],"yaml":true},{"content":"`algorithm` gets compared to the string returned from <xref:System.ServiceModel.Security.SecurityAlgorithmSuite.DefaultAsymmetricKeyWrapAlgorithm%2A>.","nodes":[{"pos":[0,150],"content":"<ph id=\"ph1\">`algorithm`</ph> gets compared to the string returned from <ph id=\"ph2\">&lt;xref:System.ServiceModel.Security.SecurityAlgorithmSuite.DefaultAsymmetricKeyWrapAlgorithm%2A&gt;</ph>.","source":"`algorithm` gets compared to the string returned from <xref:System.ServiceModel.Security.SecurityAlgorithmSuite.DefaultAsymmetricKeyWrapAlgorithm%2A>."}],"pos":[50157,50310],"yaml":true,"extradata":"MT"},{"content":"The algorithm to check.","nodes":[{"pos":[0,23],"content":"The algorithm to check.","nodes":[{"content":"The algorithm to check.","pos":[0,23]}]}],"pos":[50492,50516],"yaml":true},{"content":"`true` if the asymmetric key wrap algorithm is supported; otherwise, `false`.","nodes":[{"pos":[0,77],"content":"<ph id=\"ph1\">`true`</ph> if the asymmetric key wrap algorithm is supported; otherwise, <ph id=\"ph2\">`false`</ph>.","source":"`true` if the asymmetric key wrap algorithm is supported; otherwise, `false`."}],"pos":[50574,50654],"yaml":true},{"content":"Indicates whether an asymmetric signature algorithm is supported.","nodes":[{"pos":[0,65],"content":"Indicates whether an asymmetric signature algorithm is supported.","nodes":[{"content":"Indicates whether an asymmetric signature algorithm is supported.","pos":[0,65]}]}],"pos":[52070,52136],"yaml":true},{"content":"`algorithm` gets compared to the string returned from <xref:System.ServiceModel.Security.SecurityAlgorithmSuite.DefaultAsymmetricSignatureAlgorithm%2A>.","nodes":[{"pos":[0,152],"content":"<ph id=\"ph1\">`algorithm`</ph> gets compared to the string returned from <ph id=\"ph2\">&lt;xref:System.ServiceModel.Security.SecurityAlgorithmSuite.DefaultAsymmetricSignatureAlgorithm%2A&gt;</ph>.","source":"`algorithm` gets compared to the string returned from <xref:System.ServiceModel.Security.SecurityAlgorithmSuite.DefaultAsymmetricSignatureAlgorithm%2A>."}],"pos":[52147,52302],"yaml":true,"extradata":"MT"},{"content":"The algorithm name to check.","nodes":[{"pos":[0,28],"content":"The algorithm name to check.","nodes":[{"content":"The algorithm name to check.","pos":[0,28]}]}],"pos":[52486,52515],"yaml":true},{"content":"`true` if the asymmetric signature algorithm is supported; otherwise, `false`.","nodes":[{"pos":[0,78],"content":"<ph id=\"ph1\">`true`</ph> if the asymmetric signature algorithm is supported; otherwise, <ph id=\"ph2\">`false`</ph>.","source":"`true` if the asymmetric signature algorithm is supported; otherwise, `false`."}],"pos":[52573,52654],"yaml":true},{"content":"Indicates whether a canonicalization algorithm is supported.","nodes":[{"pos":[0,60],"content":"Indicates whether a canonicalization algorithm is supported.","nodes":[{"content":"Indicates whether a canonicalization algorithm is supported.","pos":[0,60]}]}],"pos":[54054,54115],"yaml":true},{"content":"`algorithm` gets compared to the string returned from <xref:System.ServiceModel.Security.SecurityAlgorithmSuite.DefaultCanonicalizationAlgorithm%2A>.","nodes":[{"pos":[0,149],"content":"<ph id=\"ph1\">`algorithm`</ph> gets compared to the string returned from <ph id=\"ph2\">&lt;xref:System.ServiceModel.Security.SecurityAlgorithmSuite.DefaultCanonicalizationAlgorithm%2A&gt;</ph>.","source":"`algorithm` gets compared to the string returned from <xref:System.ServiceModel.Security.SecurityAlgorithmSuite.DefaultCanonicalizationAlgorithm%2A>."}],"pos":[54126,54278],"yaml":true,"extradata":"MT"},{"content":"The algorithm name to check.","nodes":[{"pos":[0,28],"content":"The algorithm name to check.","nodes":[{"content":"The algorithm name to check.","pos":[0,28]}]}],"pos":[54459,54488],"yaml":true},{"content":"`true` if the canonicalization algorithm is supported; otherwise, `false`.","nodes":[{"pos":[0,74],"content":"<ph id=\"ph1\">`true`</ph> if the canonicalization algorithm is supported; otherwise, <ph id=\"ph2\">`false`</ph>.","source":"`true` if the canonicalization algorithm is supported; otherwise, `false`."}],"pos":[54546,54623],"yaml":true},{"content":"Indicates whether a digest algorithm is supported.","nodes":[{"pos":[0,50],"content":"Indicates whether a digest algorithm is supported.","nodes":[{"content":"Indicates whether a digest algorithm is supported.","pos":[0,50]}]}],"pos":[55960,56011],"yaml":true},{"content":"`algorithm` gets compared to the string returned from <xref:System.ServiceModel.Security.SecurityAlgorithmSuite.DefaultDigestAlgorithm%2A>.","nodes":[{"pos":[0,139],"content":"<ph id=\"ph1\">`algorithm`</ph> gets compared to the string returned from <ph id=\"ph2\">&lt;xref:System.ServiceModel.Security.SecurityAlgorithmSuite.DefaultDigestAlgorithm%2A&gt;</ph>.","source":"`algorithm` gets compared to the string returned from <xref:System.ServiceModel.Security.SecurityAlgorithmSuite.DefaultDigestAlgorithm%2A>."}],"pos":[56022,56164],"yaml":true,"extradata":"MT"},{"content":"The algorithm name to check.","nodes":[{"pos":[0,28],"content":"The algorithm name to check.","nodes":[{"content":"The algorithm name to check.","pos":[0,28]}]}],"pos":[56335,56364],"yaml":true},{"content":"`true` if the digest algorithm is supported; otherwise, `false`.","nodes":[{"pos":[0,64],"content":"<ph id=\"ph1\">`true`</ph> if the digest algorithm is supported; otherwise, <ph id=\"ph2\">`false`</ph>.","source":"`true` if the digest algorithm is supported; otherwise, `false`."}],"pos":[56422,56489],"yaml":true},{"content":"Indicates whether an encryption algorithm is supported.","nodes":[{"pos":[0,55],"content":"Indicates whether an encryption algorithm is supported.","nodes":[{"content":"Indicates whether an encryption algorithm is supported.","pos":[0,55]}]}],"pos":[57840,57896],"yaml":true},{"content":"`algorithm` gets compared to the string returned from <xref:System.ServiceModel.Security.SecurityAlgorithmSuite.DefaultEncryptionAlgorithm%2A>.","nodes":[{"pos":[0,143],"content":"<ph id=\"ph1\">`algorithm`</ph> gets compared to the string returned from <ph id=\"ph2\">&lt;xref:System.ServiceModel.Security.SecurityAlgorithmSuite.DefaultEncryptionAlgorithm%2A&gt;</ph>.","source":"`algorithm` gets compared to the string returned from <xref:System.ServiceModel.Security.SecurityAlgorithmSuite.DefaultEncryptionAlgorithm%2A>."}],"pos":[57907,58053],"yaml":true,"extradata":"MT"},{"content":"The algorithm name to check.","nodes":[{"pos":[0,28],"content":"The algorithm name to check.","nodes":[{"content":"The algorithm name to check.","pos":[0,28]}]}],"pos":[58228,58257],"yaml":true},{"content":"`true` if the encryption algorithm is supported; otherwise, `false`.","nodes":[{"pos":[0,68],"content":"<ph id=\"ph1\">`true`</ph> if the encryption algorithm is supported; otherwise, <ph id=\"ph2\">`false`</ph>.","source":"`true` if the encryption algorithm is supported; otherwise, `false`."}],"pos":[58315,58386],"yaml":true},{"content":"Indicates whether an encryption key derivation algorithm is supported.","nodes":[{"pos":[0,70],"content":"Indicates whether an encryption key derivation algorithm is supported.","nodes":[{"content":"Indicates whether an encryption key derivation algorithm is supported.","pos":[0,70]}]}],"pos":[59819,59890],"yaml":true},{"content":"The algorithm name to check.","nodes":[{"pos":[0,28],"content":"The algorithm name to check.","nodes":[{"content":"The algorithm name to check.","pos":[0,28]}]}],"pos":[60078,60107],"yaml":true},{"content":"`true` if the encryption key derivation algorithm is supported; otherwise, `false`.","nodes":[{"pos":[0,83],"content":"<ph id=\"ph1\">`true`</ph> if the encryption key derivation algorithm is supported; otherwise, <ph id=\"ph2\">`false`</ph>.","source":"`true` if the encryption key derivation algorithm is supported; otherwise, `false`."}],"pos":[60165,60251],"yaml":true},{"content":"Indicates whether a signature key derivation algorithm is supported.","nodes":[{"pos":[0,68],"content":"Indicates whether a signature key derivation algorithm is supported.","nodes":[{"content":"Indicates whether a signature key derivation algorithm is supported.","pos":[0,68]}]}],"pos":[61691,61760],"yaml":true},{"content":"The algorithm name to check.","nodes":[{"pos":[0,28],"content":"The algorithm name to check.","nodes":[{"content":"The algorithm name to check.","pos":[0,28]}]}],"pos":[61947,61976],"yaml":true},{"content":"`true` if the signature key derivation algorithm is supported; otherwise, `false`.","nodes":[{"pos":[0,82],"content":"<ph id=\"ph1\">`true`</ph> if the signature key derivation algorithm is supported; otherwise, <ph id=\"ph2\">`false`</ph>.","source":"`true` if the signature key derivation algorithm is supported; otherwise, `false`."}],"pos":[62034,62119],"yaml":true},{"content":"When overridden in a derived class, indicates whether a particular symmetric key length is supported.","nodes":[{"pos":[0,101],"content":"When overridden in a derived class, indicates whether a particular symmetric key length is supported.","nodes":[{"content":"When overridden in a derived class, indicates whether a particular symmetric key length is supported.","pos":[0,101]}]}],"pos":[63474,63576],"yaml":true},{"content":"The `length` is compared to a range of values depending on the subclass. For example, in the `TripleDES` subclass, this method verifies that `length` is between 192 and 256, inclusive.","nodes":[{"pos":[0,184],"content":"The `length` is compared to a range of values depending on the subclass. For example, in the `TripleDES` subclass, this method verifies that `length` is between 192 and 256, inclusive.","nodes":[{"content":"The <ph id=\"ph1\">`length`</ph> is compared to a range of values depending on the subclass.","pos":[0,72],"source":"The `length` is compared to a range of values depending on the subclass."},{"content":"For example, in the <ph id=\"ph1\">`TripleDES`</ph> subclass, this method verifies that <ph id=\"ph2\">`length`</ph> is between 192 and 256, inclusive.","pos":[73,184],"source":" For example, in the `TripleDES` subclass, this method verifies that `length` is between 192 and 256, inclusive."}]}],"pos":[63587,63772],"yaml":true,"extradata":"MT"},{"content":"The key length to check.","nodes":[{"pos":[0,24],"content":"The key length to check.","nodes":[{"content":"The key length to check.","pos":[0,24]}]}],"pos":[63937,63962],"yaml":true},{"content":"`true` if the symmetric key length is supported; otherwise, `false`.","nodes":[{"pos":[0,68],"content":"<ph id=\"ph1\">`true`</ph> if the symmetric key length is supported; otherwise, <ph id=\"ph2\">`false`</ph>.","source":"`true` if the symmetric key length is supported; otherwise, `false`."}],"pos":[64020,64091],"yaml":true},{"content":"Indicates whether a symmetric key wrap algorithm is supported.","nodes":[{"pos":[0,62],"content":"Indicates whether a symmetric key wrap algorithm is supported.","nodes":[{"content":"Indicates whether a symmetric key wrap algorithm is supported.","pos":[0,62]}]}],"pos":[65481,65544],"yaml":true},{"content":"The algorithm name to check.","nodes":[{"pos":[0,28],"content":"The algorithm name to check.","nodes":[{"content":"The algorithm name to check.","pos":[0,28]}]}],"pos":[65725,65754],"yaml":true},{"content":"`true` if the symmetric key wrap algorithm is supported; otherwise, `false`.","nodes":[{"pos":[0,76],"content":"<ph id=\"ph1\">`true`</ph> if the symmetric key wrap algorithm is supported; otherwise, <ph id=\"ph2\">`false`</ph>.","source":"`true` if the symmetric key wrap algorithm is supported; otherwise, `false`."}],"pos":[65812,65891],"yaml":true},{"content":"Indicates whether a symmetric signature algorithm is supported.","nodes":[{"pos":[0,63],"content":"Indicates whether a symmetric signature algorithm is supported.","nodes":[{"content":"Indicates whether a symmetric signature algorithm is supported.","pos":[0,63]}]}],"pos":[67300,67364],"yaml":true},{"content":"The algorithm name to check.","nodes":[{"pos":[0,28],"content":"The algorithm name to check.","nodes":[{"content":"The algorithm name to check.","pos":[0,28]}]}],"pos":[67547,67576],"yaml":true},{"content":"`true` if the symmetric signature algorithm is supported; otherwise, `false`.","nodes":[{"pos":[0,77],"content":"<ph id=\"ph1\">`true`</ph> if the symmetric signature algorithm is supported; otherwise, <ph id=\"ph2\">`false`</ph>.","source":"`true` if the symmetric signature algorithm is supported; otherwise, `false`."}],"pos":[67634,67714],"yaml":true},{"content":"Gets the Triple Data Encryption Standard (DES) algorithm suite.","nodes":[{"pos":[0,63],"content":"Gets the Triple Data Encryption Standard (DES) algorithm suite.","nodes":[{"content":"Gets the Triple Data Encryption Standard (DES) algorithm suite.","pos":[0,63]}]}],"pos":[68884,68948],"yaml":true},{"content":"The <xref:System.ServiceModel.Security.SecurityAlgorithmSuite> returned is actually an internal subclass that overrides some of the properties specifying default values as well as some of the methods.","nodes":[{"pos":[0,200],"content":"The <xref:System.ServiceModel.Security.SecurityAlgorithmSuite> returned is actually an internal subclass that overrides some of the properties specifying default values as well as some of the methods.","nodes":[{"content":"The <ph id=\"ph1\">&lt;xref:System.ServiceModel.Security.SecurityAlgorithmSuite&gt;</ph> returned is actually an internal subclass that overrides some of the properties specifying default values as well as some of the methods.","pos":[0,200],"source":"The <xref:System.ServiceModel.Security.SecurityAlgorithmSuite> returned is actually an internal subclass that overrides some of the properties specifying default values as well as some of the methods."}]}],"pos":[68959,69160],"yaml":true,"extradata":"MT"},{"content":"The Triple DES <xref href=\"System.ServiceModel.Security.SecurityAlgorithmSuite\"></xref>.","nodes":[{"pos":[0,88],"content":"The Triple DES <ph id=\"ph1\">&lt;xref href=\"System.ServiceModel.Security.SecurityAlgorithmSuite\"&gt;&lt;/xref&gt;</ph>.","source":"The Triple DES <xref href=\"System.ServiceModel.Security.SecurityAlgorithmSuite\"></xref>."}],"pos":[69363,69452],"yaml":true},{"content":"Gets an algorithm suite that uses RSA15 as the key wrap algorithm and 192-bit Triple Data Encryption Standard (DES) as the message encryption algorithm.","nodes":[{"pos":[0,152],"content":"Gets an algorithm suite that uses RSA15 as the key wrap algorithm and 192-bit Triple Data Encryption Standard (DES) as the message encryption algorithm.","nodes":[{"content":"Gets an algorithm suite that uses RSA15 as the key wrap algorithm and 192-bit Triple Data Encryption Standard (DES) as the message encryption algorithm.","pos":[0,152]}]}],"pos":[70623,70776],"yaml":true},{"content":"The <xref:System.ServiceModel.Security.SecurityAlgorithmSuite> returned is actually an internal subclass that overrides some of the properties specifying default values as well as some of the methods.","nodes":[{"pos":[0,200],"content":"The <xref:System.ServiceModel.Security.SecurityAlgorithmSuite> returned is actually an internal subclass that overrides some of the properties specifying default values as well as some of the methods.","nodes":[{"content":"The <ph id=\"ph1\">&lt;xref:System.ServiceModel.Security.SecurityAlgorithmSuite&gt;</ph> returned is actually an internal subclass that overrides some of the properties specifying default values as well as some of the methods.","pos":[0,200],"source":"The <xref:System.ServiceModel.Security.SecurityAlgorithmSuite> returned is actually an internal subclass that overrides some of the properties specifying default values as well as some of the methods."}]}],"pos":[70787,70988],"yaml":true,"extradata":"MT"},{"content":"An algorithm suite that uses RSA15 as the key wrap algorithm and 192-bit Triple Data Encryption Standard (DES) as the message encryption algorithm.","nodes":[{"pos":[0,147],"content":"An algorithm suite that uses RSA15 as the key wrap algorithm and 192-bit Triple Data Encryption Standard (DES) as the message encryption algorithm.","nodes":[{"content":"An algorithm suite that uses RSA15 as the key wrap algorithm and 192-bit Triple Data Encryption Standard (DES) as the message encryption algorithm.","pos":[0,147]}]}],"pos":[71196,71344],"yaml":true},{"content":"Gets an algorithm suite that uses SHA256 for the signature digest and 192-bit Triple Data Encryption Standard (DES) as the message encryption algorithm.","nodes":[{"pos":[0,152],"content":"Gets an algorithm suite that uses SHA256 for the signature digest and 192-bit Triple Data Encryption Standard (DES) as the message encryption algorithm.","nodes":[{"content":"Gets an algorithm suite that uses SHA256 for the signature digest and 192-bit Triple Data Encryption Standard (DES) as the message encryption algorithm.","pos":[0,152]}]}],"pos":[72526,72679],"yaml":true},{"content":"The <xref:System.ServiceModel.Security.SecurityAlgorithmSuite> returned is actually an internal subclass that overrides some of the properties specifying default values as well as some of the methods.","nodes":[{"pos":[0,200],"content":"The <xref:System.ServiceModel.Security.SecurityAlgorithmSuite> returned is actually an internal subclass that overrides some of the properties specifying default values as well as some of the methods.","nodes":[{"content":"The <ph id=\"ph1\">&lt;xref:System.ServiceModel.Security.SecurityAlgorithmSuite&gt;</ph> returned is actually an internal subclass that overrides some of the properties specifying default values as well as some of the methods.","pos":[0,200],"source":"The <xref:System.ServiceModel.Security.SecurityAlgorithmSuite> returned is actually an internal subclass that overrides some of the properties specifying default values as well as some of the methods."}]}],"pos":[72690,72891],"yaml":true,"extradata":"MT"},{"content":"An algorithm suite that uses SHA256 for the signature digest and 192-bit Triple Data Encryption Standard (DES) as the message encryption algorithm.","nodes":[{"pos":[0,147],"content":"An algorithm suite that uses SHA256 for the signature digest and 192-bit Triple Data Encryption Standard (DES) as the message encryption algorithm.","nodes":[{"content":"An algorithm suite that uses SHA256 for the signature digest and 192-bit Triple Data Encryption Standard (DES) as the message encryption algorithm.","pos":[0,147]}]}],"pos":[73100,73248],"yaml":true},{"content":"Gets an algorithm suite that uses RSA15 as the key wrap algorithm, SHA256 for the signature digest, and 192-bit Triple Data Encryption Standard (DES) as the message encryption algorithm.","nodes":[{"pos":[0,186],"content":"Gets an algorithm suite that uses RSA15 as the key wrap algorithm, SHA256 for the signature digest, and 192-bit Triple Data Encryption Standard (DES) as the message encryption algorithm.","nodes":[{"content":"Gets an algorithm suite that uses RSA15 as the key wrap algorithm, SHA256 for the signature digest, and 192-bit Triple Data Encryption Standard (DES) as the message encryption algorithm.","pos":[0,186]}]}],"pos":[74461,74648],"yaml":true},{"content":"The <xref:System.ServiceModel.Security.SecurityAlgorithmSuite> returned is actually an internal subclass that overrides some of the properties specifying default values as well as some of the methods.","nodes":[{"pos":[0,200],"content":"The <xref:System.ServiceModel.Security.SecurityAlgorithmSuite> returned is actually an internal subclass that overrides some of the properties specifying default values as well as some of the methods.","nodes":[{"content":"The <ph id=\"ph1\">&lt;xref:System.ServiceModel.Security.SecurityAlgorithmSuite&gt;</ph> returned is actually an internal subclass that overrides some of the properties specifying default values as well as some of the methods.","pos":[0,200],"source":"The <xref:System.ServiceModel.Security.SecurityAlgorithmSuite> returned is actually an internal subclass that overrides some of the properties specifying default values as well as some of the methods."}]}],"pos":[74659,74860],"yaml":true,"extradata":"MT"},{"content":"An algorithm suite that uses RSA15 as the key wrap algorithm, SHA256 for the signature digest, and 192-bit Triple Data Encryption Standard (DES) as the message encryption algorithm.","nodes":[{"pos":[0,181],"content":"An algorithm suite that uses RSA15 as the key wrap algorithm, SHA256 for the signature digest, and 192-bit Triple Data Encryption Standard (DES) as the message encryption algorithm.","nodes":[{"content":"An algorithm suite that uses RSA15 as the key wrap algorithm, SHA256 for the signature digest, and 192-bit Triple Data Encryption Standard (DES) as the message encryption algorithm.","pos":[0,181]}]}],"pos":[75074,75256],"yaml":true}],"content":"### YamlMime:ManagedReference\nitems:\n- uid: System.ServiceModel.Security.SecurityAlgorithmSuite\n  commentId: T:System.ServiceModel.Security.SecurityAlgorithmSuite\n  id: SecurityAlgorithmSuite\n  children:\n  - System.ServiceModel.Security.SecurityAlgorithmSuite.#ctor\n  - System.ServiceModel.Security.SecurityAlgorithmSuite.Basic128\n  - System.ServiceModel.Security.SecurityAlgorithmSuite.Basic128Rsa15\n  - System.ServiceModel.Security.SecurityAlgorithmSuite.Basic128Sha256\n  - System.ServiceModel.Security.SecurityAlgorithmSuite.Basic128Sha256Rsa15\n  - System.ServiceModel.Security.SecurityAlgorithmSuite.Basic192\n  - System.ServiceModel.Security.SecurityAlgorithmSuite.Basic192Rsa15\n  - System.ServiceModel.Security.SecurityAlgorithmSuite.Basic192Sha256\n  - System.ServiceModel.Security.SecurityAlgorithmSuite.Basic192Sha256Rsa15\n  - System.ServiceModel.Security.SecurityAlgorithmSuite.Basic256\n  - System.ServiceModel.Security.SecurityAlgorithmSuite.Basic256Rsa15\n  - System.ServiceModel.Security.SecurityAlgorithmSuite.Basic256Sha256\n  - System.ServiceModel.Security.SecurityAlgorithmSuite.Basic256Sha256Rsa15\n  - System.ServiceModel.Security.SecurityAlgorithmSuite.Default\n  - System.ServiceModel.Security.SecurityAlgorithmSuite.DefaultAsymmetricKeyWrapAlgorithm\n  - System.ServiceModel.Security.SecurityAlgorithmSuite.DefaultAsymmetricSignatureAlgorithm\n  - System.ServiceModel.Security.SecurityAlgorithmSuite.DefaultCanonicalizationAlgorithm\n  - System.ServiceModel.Security.SecurityAlgorithmSuite.DefaultDigestAlgorithm\n  - System.ServiceModel.Security.SecurityAlgorithmSuite.DefaultEncryptionAlgorithm\n  - System.ServiceModel.Security.SecurityAlgorithmSuite.DefaultEncryptionKeyDerivationLength\n  - System.ServiceModel.Security.SecurityAlgorithmSuite.DefaultSignatureKeyDerivationLength\n  - System.ServiceModel.Security.SecurityAlgorithmSuite.DefaultSymmetricKeyLength\n  - System.ServiceModel.Security.SecurityAlgorithmSuite.DefaultSymmetricKeyWrapAlgorithm\n  - System.ServiceModel.Security.SecurityAlgorithmSuite.DefaultSymmetricSignatureAlgorithm\n  - System.ServiceModel.Security.SecurityAlgorithmSuite.IsAsymmetricKeyLengthSupported(System.Int32)\n  - System.ServiceModel.Security.SecurityAlgorithmSuite.IsAsymmetricKeyWrapAlgorithmSupported(System.String)\n  - System.ServiceModel.Security.SecurityAlgorithmSuite.IsAsymmetricSignatureAlgorithmSupported(System.String)\n  - System.ServiceModel.Security.SecurityAlgorithmSuite.IsCanonicalizationAlgorithmSupported(System.String)\n  - System.ServiceModel.Security.SecurityAlgorithmSuite.IsDigestAlgorithmSupported(System.String)\n  - System.ServiceModel.Security.SecurityAlgorithmSuite.IsEncryptionAlgorithmSupported(System.String)\n  - System.ServiceModel.Security.SecurityAlgorithmSuite.IsEncryptionKeyDerivationAlgorithmSupported(System.String)\n  - System.ServiceModel.Security.SecurityAlgorithmSuite.IsSignatureKeyDerivationAlgorithmSupported(System.String)\n  - System.ServiceModel.Security.SecurityAlgorithmSuite.IsSymmetricKeyLengthSupported(System.Int32)\n  - System.ServiceModel.Security.SecurityAlgorithmSuite.IsSymmetricKeyWrapAlgorithmSupported(System.String)\n  - System.ServiceModel.Security.SecurityAlgorithmSuite.IsSymmetricSignatureAlgorithmSupported(System.String)\n  - System.ServiceModel.Security.SecurityAlgorithmSuite.TripleDes\n  - System.ServiceModel.Security.SecurityAlgorithmSuite.TripleDesRsa15\n  - System.ServiceModel.Security.SecurityAlgorithmSuite.TripleDesSha256\n  - System.ServiceModel.Security.SecurityAlgorithmSuite.TripleDesSha256Rsa15\n  langs:\n  - csharp\n  name: SecurityAlgorithmSuite\n  nameWithType: SecurityAlgorithmSuite\n  fullName: System.ServiceModel.Security.SecurityAlgorithmSuite\n  type: Class\n  assemblies:\n  - System.ServiceModel\n  namespace: System.ServiceModel.Security\n  summary: Specifies properties of algorithms. This is an `abstract` class.\n  remarks: \"Instances of this class are used to specify the cryptographic characteristics of the algorithms used when securing messages.  \\n  \\n This class is used by derived classes to instantiate security algorithm suites, and contains properties that describe the security algorithms. For example, the `wsBasicHttp` binding uses an internal derived class to specify the properties of its security algorithms.\"\n  syntax:\n    content: public abstract class SecurityAlgorithmSuite\n  inheritance:\n  - System.Object\n  derivedClasses:\n  - System.ServiceModel.Security.Basic128SecurityAlgorithmSuite\n  - System.ServiceModel.Security.Basic192SecurityAlgorithmSuite\n  - System.ServiceModel.Security.Basic256SecurityAlgorithmSuite\n  - System.ServiceModel.Security.TripleDesSecurityAlgorithmSuite\n  implements: []\n  inheritedMembers:\n  - System.Object.Equals(System.Object)\n  - System.Object.Equals(System.Object,System.Object)\n  - System.Object.GetHashCode\n  - System.Object.GetType\n  - System.Object.MemberwiseClone\n  - System.Object.ReferenceEquals(System.Object,System.Object)\n  - System.Object.ToString\n  version:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - xamarinmac-3.0\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - xamarinmac-3.0\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.ServiceModel.Security/SecurityAlgorithmSuite.xml\n  ms.technology:\n  - dotnet-standard\n  author: Erikre\n  ms.author: erikre\n  manager: erikre\n- uid: System.ServiceModel.Security.SecurityAlgorithmSuite.#ctor\n  commentId: M:System.ServiceModel.Security.SecurityAlgorithmSuite.#ctor\n  id: '#ctor'\n  parent: System.ServiceModel.Security.SecurityAlgorithmSuite\n  langs:\n  - csharp\n  name: SecurityAlgorithmSuite()\n  nameWithType: SecurityAlgorithmSuite.SecurityAlgorithmSuite()\n  fullName: SecurityAlgorithmSuite.SecurityAlgorithmSuite()\n  type: Constructor\n  assemblies:\n  - System.ServiceModel\n  namespace: System.ServiceModel.Security\n  summary: Initializes a new instance of the <xref href=\"System.ServiceModel.Security.SecurityAlgorithmSuite\"></xref> class.\n  remarks: The instances of this class consist of static properties and read-only properties, so the constructor does not initialize any properties.\n  syntax:\n    content: protected SecurityAlgorithmSuite ();\n    parameters: []\n  overload: System.ServiceModel.Security.SecurityAlgorithmSuite.#ctor*\n  exceptions: []\n  version:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - xamarinmac-3.0\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - xamarinmac-3.0\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.ServiceModel.Security/SecurityAlgorithmSuite.xml\n  ms.technology:\n  - dotnet-standard\n  author: Erikre\n  ms.author: erikre\n  manager: erikre\n- uid: System.ServiceModel.Security.SecurityAlgorithmSuite.Basic128\n  commentId: P:System.ServiceModel.Security.SecurityAlgorithmSuite.Basic128\n  id: Basic128\n  parent: System.ServiceModel.Security.SecurityAlgorithmSuite\n  langs:\n  - csharp\n  name: Basic128\n  nameWithType: SecurityAlgorithmSuite.Basic128\n  fullName: SecurityAlgorithmSuite.Basic128\n  type: Property\n  assemblies:\n  - System.ServiceModel\n  namespace: System.ServiceModel.Security\n  summary: Gets the Basic128 algorithm suite.\n  remarks: By default, AES-128 is used as the encryption algorithm.\n  syntax:\n    content: public static System.ServiceModel.Security.SecurityAlgorithmSuite Basic128 { get; }\n    return:\n      type: System.ServiceModel.Security.SecurityAlgorithmSuite\n      description: The 128-bit Basic <xref href=\"System.ServiceModel.Security.SecurityAlgorithmSuite\"></xref>.\n  overload: System.ServiceModel.Security.SecurityAlgorithmSuite.Basic128*\n  exceptions: []\n  version:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - xamarinmac-3.0\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - xamarinmac-3.0\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.ServiceModel.Security/SecurityAlgorithmSuite.xml\n  ms.technology:\n  - dotnet-standard\n  author: Erikre\n  ms.author: erikre\n  manager: erikre\n- uid: System.ServiceModel.Security.SecurityAlgorithmSuite.Basic128Rsa15\n  commentId: P:System.ServiceModel.Security.SecurityAlgorithmSuite.Basic128Rsa15\n  id: Basic128Rsa15\n  parent: System.ServiceModel.Security.SecurityAlgorithmSuite\n  langs:\n  - csharp\n  name: Basic128Rsa15\n  nameWithType: SecurityAlgorithmSuite.Basic128Rsa15\n  fullName: SecurityAlgorithmSuite.Basic128Rsa15\n  type: Property\n  assemblies:\n  - System.ServiceModel\n  namespace: System.ServiceModel.Security\n  summary: Gets an algorithm suite that uses RSA15 as the key wrap algorithm and 128-bit Basic as the message encryption algorithm.\n  remarks: The <xref:System.ServiceModel.Security.SecurityAlgorithmSuite> returned is actually an internal subclass that overrides some of the properties specifying default values as well as some of the methods.\n  syntax:\n    content: public static System.ServiceModel.Security.SecurityAlgorithmSuite Basic128Rsa15 { get; }\n    return:\n      type: System.ServiceModel.Security.SecurityAlgorithmSuite\n      description: An algorithm suite that uses RSA15 as the key wrap algorithm and 128-bit Basic as the message encryption algorithm.\n  overload: System.ServiceModel.Security.SecurityAlgorithmSuite.Basic128Rsa15*\n  exceptions: []\n  version:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - xamarinmac-3.0\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - xamarinmac-3.0\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.ServiceModel.Security/SecurityAlgorithmSuite.xml\n  ms.technology:\n  - dotnet-standard\n  author: Erikre\n  ms.author: erikre\n  manager: erikre\n- uid: System.ServiceModel.Security.SecurityAlgorithmSuite.Basic128Sha256\n  commentId: P:System.ServiceModel.Security.SecurityAlgorithmSuite.Basic128Sha256\n  id: Basic128Sha256\n  parent: System.ServiceModel.Security.SecurityAlgorithmSuite\n  langs:\n  - csharp\n  name: Basic128Sha256\n  nameWithType: SecurityAlgorithmSuite.Basic128Sha256\n  fullName: SecurityAlgorithmSuite.Basic128Sha256\n  type: Property\n  assemblies:\n  - System.ServiceModel\n  namespace: System.ServiceModel.Security\n  summary: Gets an algorithm suite that uses SHA256 for the signature digest and 128-bit Basic as the message encryption algorithm.\n  remarks: The <xref:System.ServiceModel.Security.SecurityAlgorithmSuite> returned is actually an internal subclass that overrides some of the properties specifying default values as well as some of the methods.\n  syntax:\n    content: public static System.ServiceModel.Security.SecurityAlgorithmSuite Basic128Sha256 { get; }\n    return:\n      type: System.ServiceModel.Security.SecurityAlgorithmSuite\n      description: An algorithm suite that uses SHA256 for the signature digest and 128-bit Basic as the message encryption algorithm.\n  overload: System.ServiceModel.Security.SecurityAlgorithmSuite.Basic128Sha256*\n  exceptions: []\n  version:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - xamarinmac-3.0\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - xamarinmac-3.0\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.ServiceModel.Security/SecurityAlgorithmSuite.xml\n  ms.technology:\n  - dotnet-standard\n  author: Erikre\n  ms.author: erikre\n  manager: erikre\n- uid: System.ServiceModel.Security.SecurityAlgorithmSuite.Basic128Sha256Rsa15\n  commentId: P:System.ServiceModel.Security.SecurityAlgorithmSuite.Basic128Sha256Rsa15\n  id: Basic128Sha256Rsa15\n  parent: System.ServiceModel.Security.SecurityAlgorithmSuite\n  langs:\n  - csharp\n  name: Basic128Sha256Rsa15\n  nameWithType: SecurityAlgorithmSuite.Basic128Sha256Rsa15\n  fullName: SecurityAlgorithmSuite.Basic128Sha256Rsa15\n  type: Property\n  assemblies:\n  - System.ServiceModel\n  namespace: System.ServiceModel.Security\n  summary: Gets an algorithm suite that uses RSA15 as the key wrap algorithm, SHA256 for the signature digest, and 128-bit Basic as the message encryption algorithm.\n  remarks: The <xref:System.ServiceModel.Security.SecurityAlgorithmSuite> returned is actually an internal subclass that overrides some of the properties specifying default values as well as some of the methods.\n  syntax:\n    content: public static System.ServiceModel.Security.SecurityAlgorithmSuite Basic128Sha256Rsa15 { get; }\n    return:\n      type: System.ServiceModel.Security.SecurityAlgorithmSuite\n      description: An algorithm suite that uses RSA15 as the key wrap algorithm, SHA256 for the signature digest, and 128-bit Basic as the message encryption algorithm.\n  overload: System.ServiceModel.Security.SecurityAlgorithmSuite.Basic128Sha256Rsa15*\n  exceptions: []\n  version:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - xamarinmac-3.0\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - xamarinmac-3.0\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.ServiceModel.Security/SecurityAlgorithmSuite.xml\n  ms.technology:\n  - dotnet-standard\n  author: Erikre\n  ms.author: erikre\n  manager: erikre\n- uid: System.ServiceModel.Security.SecurityAlgorithmSuite.Basic192\n  commentId: P:System.ServiceModel.Security.SecurityAlgorithmSuite.Basic192\n  id: Basic192\n  parent: System.ServiceModel.Security.SecurityAlgorithmSuite\n  langs:\n  - csharp\n  name: Basic192\n  nameWithType: SecurityAlgorithmSuite.Basic192\n  fullName: SecurityAlgorithmSuite.Basic192\n  type: Property\n  assemblies:\n  - System.ServiceModel\n  namespace: System.ServiceModel.Security\n  summary: Gets an algorithm suite that uses 192-bit Basic as the message encryption algorithm.\n  remarks: By default, AES-192 is used as the encryption algorithm.\n  syntax:\n    content: public static System.ServiceModel.Security.SecurityAlgorithmSuite Basic192 { get; }\n    return:\n      type: System.ServiceModel.Security.SecurityAlgorithmSuite\n      description: An algorithm suite that uses 192-bit Basic as the message encryption algorithm.\n  overload: System.ServiceModel.Security.SecurityAlgorithmSuite.Basic192*\n  exceptions: []\n  version:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - xamarinmac-3.0\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - xamarinmac-3.0\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.ServiceModel.Security/SecurityAlgorithmSuite.xml\n  ms.technology:\n  - dotnet-standard\n  author: Erikre\n  ms.author: erikre\n  manager: erikre\n- uid: System.ServiceModel.Security.SecurityAlgorithmSuite.Basic192Rsa15\n  commentId: P:System.ServiceModel.Security.SecurityAlgorithmSuite.Basic192Rsa15\n  id: Basic192Rsa15\n  parent: System.ServiceModel.Security.SecurityAlgorithmSuite\n  langs:\n  - csharp\n  name: Basic192Rsa15\n  nameWithType: SecurityAlgorithmSuite.Basic192Rsa15\n  fullName: SecurityAlgorithmSuite.Basic192Rsa15\n  type: Property\n  assemblies:\n  - System.ServiceModel\n  namespace: System.ServiceModel.Security\n  summary: Gets an algorithm suite that uses RSA15 as the key wrap algorithm and 192-bit Basic as the message encryption algorithm.\n  remarks: The <xref:System.ServiceModel.Security.SecurityAlgorithmSuite> returned is actually an internal subclass that overrides some of the properties specifying default values as well as some of the methods.\n  syntax:\n    content: public static System.ServiceModel.Security.SecurityAlgorithmSuite Basic192Rsa15 { get; }\n    return:\n      type: System.ServiceModel.Security.SecurityAlgorithmSuite\n      description: An algorithm suite that uses RSA15 as the key wrap algorithm and 192-bit Basic as the message encryption algorithm.\n  overload: System.ServiceModel.Security.SecurityAlgorithmSuite.Basic192Rsa15*\n  exceptions: []\n  version:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - xamarinmac-3.0\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - xamarinmac-3.0\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.ServiceModel.Security/SecurityAlgorithmSuite.xml\n  ms.technology:\n  - dotnet-standard\n  author: Erikre\n  ms.author: erikre\n  manager: erikre\n- uid: System.ServiceModel.Security.SecurityAlgorithmSuite.Basic192Sha256\n  commentId: P:System.ServiceModel.Security.SecurityAlgorithmSuite.Basic192Sha256\n  id: Basic192Sha256\n  parent: System.ServiceModel.Security.SecurityAlgorithmSuite\n  langs:\n  - csharp\n  name: Basic192Sha256\n  nameWithType: SecurityAlgorithmSuite.Basic192Sha256\n  fullName: SecurityAlgorithmSuite.Basic192Sha256\n  type: Property\n  assemblies:\n  - System.ServiceModel\n  namespace: System.ServiceModel.Security\n  summary: Gets an algorithm suite which uses SHA256 for the signature digest and 192-bit Basic as the message encryption algorithm.\n  remarks: The <xref:System.ServiceModel.Security.SecurityAlgorithmSuite> returned is actually an internal subclass that overrides some of the properties specifying default values as well as some of the methods.\n  syntax:\n    content: public static System.ServiceModel.Security.SecurityAlgorithmSuite Basic192Sha256 { get; }\n    return:\n      type: System.ServiceModel.Security.SecurityAlgorithmSuite\n      description: An algorithm suite which uses SHA256 for the signature digest and 192-bit Basic as the message encryption algorithm.\n  overload: System.ServiceModel.Security.SecurityAlgorithmSuite.Basic192Sha256*\n  exceptions: []\n  version:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - xamarinmac-3.0\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - xamarinmac-3.0\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.ServiceModel.Security/SecurityAlgorithmSuite.xml\n  ms.technology:\n  - dotnet-standard\n  author: Erikre\n  ms.author: erikre\n  manager: erikre\n- uid: System.ServiceModel.Security.SecurityAlgorithmSuite.Basic192Sha256Rsa15\n  commentId: P:System.ServiceModel.Security.SecurityAlgorithmSuite.Basic192Sha256Rsa15\n  id: Basic192Sha256Rsa15\n  parent: System.ServiceModel.Security.SecurityAlgorithmSuite\n  langs:\n  - csharp\n  name: Basic192Sha256Rsa15\n  nameWithType: SecurityAlgorithmSuite.Basic192Sha256Rsa15\n  fullName: SecurityAlgorithmSuite.Basic192Sha256Rsa15\n  type: Property\n  assemblies:\n  - System.ServiceModel\n  namespace: System.ServiceModel.Security\n  summary: Gets an algorithm suite that uses RSA15 as the key wrap algorithm, SHA256 for the signature digest, and 192-bit Basic as the message encryption algorithm.\n  remarks: The <xref:System.ServiceModel.Security.SecurityAlgorithmSuite> returned is actually an internal subclass that overrides some of the properties specifying default values as well as some of the methods.\n  syntax:\n    content: public static System.ServiceModel.Security.SecurityAlgorithmSuite Basic192Sha256Rsa15 { get; }\n    return:\n      type: System.ServiceModel.Security.SecurityAlgorithmSuite\n      description: An algorithm suite that uses RSA15 as the key wrap algorithm, SHA256 for the signature digest, and 192-bit Basic as the message encryption algorithm.\n  overload: System.ServiceModel.Security.SecurityAlgorithmSuite.Basic192Sha256Rsa15*\n  exceptions: []\n  version:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - xamarinmac-3.0\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - xamarinmac-3.0\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.ServiceModel.Security/SecurityAlgorithmSuite.xml\n  ms.technology:\n  - dotnet-standard\n  author: Erikre\n  ms.author: erikre\n  manager: erikre\n- uid: System.ServiceModel.Security.SecurityAlgorithmSuite.Basic256\n  commentId: P:System.ServiceModel.Security.SecurityAlgorithmSuite.Basic256\n  id: Basic256\n  parent: System.ServiceModel.Security.SecurityAlgorithmSuite\n  langs:\n  - csharp\n  name: Basic256\n  nameWithType: SecurityAlgorithmSuite.Basic256\n  fullName: SecurityAlgorithmSuite.Basic256\n  type: Property\n  assemblies:\n  - System.ServiceModel\n  namespace: System.ServiceModel.Security\n  summary: Gets an algorithm suite that uses 256-bit Basic as the message encryption algorithm.\n  remarks: By default, AES-256 is used for the encryption algorithm.\n  example:\n  - \"The following code shows how to set <xref:System.ServiceModel.MessageSecurityOverHttp.AlgorithmSuite%2A> to this property.  \\n  \\n [!code-csharp[c_ProgrammingSecurity#8](~/samples/snippets/csharp/VS_Snippets_CFX/c_programmingsecurity/cs/source.cs#8)]\\n [!code-vb[c_ProgrammingSecurity#8](~/samples/snippets/visualbasic/VS_Snippets_CFX/c_programmingsecurity/vb/source.vb#8)]\"\n  syntax:\n    content: public static System.ServiceModel.Security.SecurityAlgorithmSuite Basic256 { get; }\n    return:\n      type: System.ServiceModel.Security.SecurityAlgorithmSuite\n      description: An algorithm suite that uses 256-bit Basic as the message encryption algorithm.\n  overload: System.ServiceModel.Security.SecurityAlgorithmSuite.Basic256*\n  exceptions: []\n  version:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - xamarinmac-3.0\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - xamarinmac-3.0\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.ServiceModel.Security/SecurityAlgorithmSuite.xml\n  ms.technology:\n  - dotnet-standard\n  author: Erikre\n  ms.author: erikre\n  manager: erikre\n- uid: System.ServiceModel.Security.SecurityAlgorithmSuite.Basic256Rsa15\n  commentId: P:System.ServiceModel.Security.SecurityAlgorithmSuite.Basic256Rsa15\n  id: Basic256Rsa15\n  parent: System.ServiceModel.Security.SecurityAlgorithmSuite\n  langs:\n  - csharp\n  name: Basic256Rsa15\n  nameWithType: SecurityAlgorithmSuite.Basic256Rsa15\n  fullName: SecurityAlgorithmSuite.Basic256Rsa15\n  type: Property\n  assemblies:\n  - System.ServiceModel\n  namespace: System.ServiceModel.Security\n  summary: Gets an algorithm suite that uses RSA15 as the key wrap algorithm and 256-bit Basic as the message encryption algorithm.\n  remarks: The <xref:System.ServiceModel.Security.SecurityAlgorithmSuite> returned is actually an internal subclass that overrides some of the properties specifying default values as well as some of the methods.\n  syntax:\n    content: public static System.ServiceModel.Security.SecurityAlgorithmSuite Basic256Rsa15 { get; }\n    return:\n      type: System.ServiceModel.Security.SecurityAlgorithmSuite\n      description: An algorithm suite that uses RSA15 as the key wrap algorithm and 256-bit Basic as the message encryption algorithm.\n  overload: System.ServiceModel.Security.SecurityAlgorithmSuite.Basic256Rsa15*\n  exceptions: []\n  version:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - xamarinmac-3.0\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - xamarinmac-3.0\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.ServiceModel.Security/SecurityAlgorithmSuite.xml\n  ms.technology:\n  - dotnet-standard\n  author: Erikre\n  ms.author: erikre\n  manager: erikre\n- uid: System.ServiceModel.Security.SecurityAlgorithmSuite.Basic256Sha256\n  commentId: P:System.ServiceModel.Security.SecurityAlgorithmSuite.Basic256Sha256\n  id: Basic256Sha256\n  parent: System.ServiceModel.Security.SecurityAlgorithmSuite\n  langs:\n  - csharp\n  name: Basic256Sha256\n  nameWithType: SecurityAlgorithmSuite.Basic256Sha256\n  fullName: SecurityAlgorithmSuite.Basic256Sha256\n  type: Property\n  assemblies:\n  - System.ServiceModel\n  namespace: System.ServiceModel.Security\n  summary: Gets an algorithm suite that uses SHA256 for the signature digest and 256-bit Basic as the message encryption algorithm.\n  remarks: The <xref:System.ServiceModel.Security.SecurityAlgorithmSuite> returned is actually an internal subclass that overrides some of the properties specifying default values as well as some of the methods.\n  syntax:\n    content: public static System.ServiceModel.Security.SecurityAlgorithmSuite Basic256Sha256 { get; }\n    return:\n      type: System.ServiceModel.Security.SecurityAlgorithmSuite\n      description: An algorithm suite that uses SHA256 for the signature digest and 256-bit Basic as the message encryption algorithm.\n  overload: System.ServiceModel.Security.SecurityAlgorithmSuite.Basic256Sha256*\n  exceptions: []\n  version:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - xamarinmac-3.0\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - xamarinmac-3.0\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.ServiceModel.Security/SecurityAlgorithmSuite.xml\n  ms.technology:\n  - dotnet-standard\n  author: Erikre\n  ms.author: erikre\n  manager: erikre\n- uid: System.ServiceModel.Security.SecurityAlgorithmSuite.Basic256Sha256Rsa15\n  commentId: P:System.ServiceModel.Security.SecurityAlgorithmSuite.Basic256Sha256Rsa15\n  id: Basic256Sha256Rsa15\n  parent: System.ServiceModel.Security.SecurityAlgorithmSuite\n  langs:\n  - csharp\n  name: Basic256Sha256Rsa15\n  nameWithType: SecurityAlgorithmSuite.Basic256Sha256Rsa15\n  fullName: SecurityAlgorithmSuite.Basic256Sha256Rsa15\n  type: Property\n  assemblies:\n  - System.ServiceModel\n  namespace: System.ServiceModel.Security\n  summary: Gets an algorithm suite that uses RSA15 as the key wrap algorithm, SHA256 for the signature digest, and 256-bit Basic as the message encryption algorithm.\n  remarks: The <xref:System.ServiceModel.Security.SecurityAlgorithmSuite> returned is actually an internal subclass that overrides some of the properties specifying default values as well as some of the methods.\n  syntax:\n    content: public static System.ServiceModel.Security.SecurityAlgorithmSuite Basic256Sha256Rsa15 { get; }\n    return:\n      type: System.ServiceModel.Security.SecurityAlgorithmSuite\n      description: An algorithm suite that uses RSA15 as the key wrap algorithm, SHA256 for the signature digest, and 256-bit Basic as the message encryption algorithm.\n  overload: System.ServiceModel.Security.SecurityAlgorithmSuite.Basic256Sha256Rsa15*\n  exceptions: []\n  version:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - xamarinmac-3.0\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - xamarinmac-3.0\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.ServiceModel.Security/SecurityAlgorithmSuite.xml\n  ms.technology:\n  - dotnet-standard\n  author: Erikre\n  ms.author: erikre\n  manager: erikre\n- uid: System.ServiceModel.Security.SecurityAlgorithmSuite.Default\n  commentId: P:System.ServiceModel.Security.SecurityAlgorithmSuite.Default\n  id: Default\n  parent: System.ServiceModel.Security.SecurityAlgorithmSuite\n  langs:\n  - csharp\n  name: Default\n  nameWithType: SecurityAlgorithmSuite.Default\n  fullName: SecurityAlgorithmSuite.Default\n  type: Property\n  assemblies:\n  - System.ServiceModel\n  namespace: System.ServiceModel.Security\n  summary: Gets the default algorithm suite.\n  remarks: The <xref:System.ServiceModel.Security.SecurityAlgorithmSuite> returned is actually an internal subclass that overrides the properties specifying default values as well as the methods.\n  syntax:\n    content: public static System.ServiceModel.Security.SecurityAlgorithmSuite Default { get; }\n    return:\n      type: System.ServiceModel.Security.SecurityAlgorithmSuite\n      description: The default <xref href=\"System.ServiceModel.Security.SecurityAlgorithmSuite\"></xref> is <xref href=\"System.ServiceModel.Security.SecurityAlgorithmSuite.Basic256\"></xref>, which specifies 256-bit Advanced Encryption Standard (AES) as the symmetric encryption algorithm.\n  overload: System.ServiceModel.Security.SecurityAlgorithmSuite.Default*\n  exceptions: []\n  version:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - xamarinmac-3.0\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - xamarinmac-3.0\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.ServiceModel.Security/SecurityAlgorithmSuite.xml\n  ms.technology:\n  - dotnet-standard\n  author: Erikre\n  ms.author: erikre\n  manager: erikre\n- uid: System.ServiceModel.Security.SecurityAlgorithmSuite.DefaultAsymmetricKeyWrapAlgorithm\n  commentId: P:System.ServiceModel.Security.SecurityAlgorithmSuite.DefaultAsymmetricKeyWrapAlgorithm\n  id: DefaultAsymmetricKeyWrapAlgorithm\n  parent: System.ServiceModel.Security.SecurityAlgorithmSuite\n  langs:\n  - csharp\n  name: DefaultAsymmetricKeyWrapAlgorithm\n  nameWithType: SecurityAlgorithmSuite.DefaultAsymmetricKeyWrapAlgorithm\n  fullName: SecurityAlgorithmSuite.DefaultAsymmetricKeyWrapAlgorithm\n  type: Property\n  assemblies:\n  - System.ServiceModel\n  namespace: System.ServiceModel.Security\n  summary: Gets the default asymmetric key wrap algorithm as a string.\n  remarks: When overridden, provides a string value that will be used for comparison in the <xref:System.ServiceModel.Security.SecurityAlgorithmSuite.IsAsymmetricKeyWrapAlgorithmSupported%2A> method.\n  syntax:\n    content: public abstract string DefaultAsymmetricKeyWrapAlgorithm { get; }\n    return:\n      type: System.String\n      description: The default asymmetric key wrap algorithm.\n  overload: System.ServiceModel.Security.SecurityAlgorithmSuite.DefaultAsymmetricKeyWrapAlgorithm*\n  exceptions: []\n  version:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - xamarinmac-3.0\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - xamarinmac-3.0\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.ServiceModel.Security/SecurityAlgorithmSuite.xml\n  ms.technology:\n  - dotnet-standard\n  author: Erikre\n  ms.author: erikre\n  manager: erikre\n- uid: System.ServiceModel.Security.SecurityAlgorithmSuite.DefaultAsymmetricSignatureAlgorithm\n  commentId: P:System.ServiceModel.Security.SecurityAlgorithmSuite.DefaultAsymmetricSignatureAlgorithm\n  id: DefaultAsymmetricSignatureAlgorithm\n  parent: System.ServiceModel.Security.SecurityAlgorithmSuite\n  langs:\n  - csharp\n  name: DefaultAsymmetricSignatureAlgorithm\n  nameWithType: SecurityAlgorithmSuite.DefaultAsymmetricSignatureAlgorithm\n  fullName: SecurityAlgorithmSuite.DefaultAsymmetricSignatureAlgorithm\n  type: Property\n  assemblies:\n  - System.ServiceModel\n  namespace: System.ServiceModel.Security\n  summary: Gets the default asymmetric signature algorithm as a string.\n  remarks: When overridden, provides a string value that will be used for comparison in the <xref:System.ServiceModel.Security.SecurityAlgorithmSuite.IsAsymmetricSignatureAlgorithmSupported%2A> method.\n  syntax:\n    content: public abstract string DefaultAsymmetricSignatureAlgorithm { get; }\n    return:\n      type: System.String\n      description: The default asymmetric signature algorithm.\n  overload: System.ServiceModel.Security.SecurityAlgorithmSuite.DefaultAsymmetricSignatureAlgorithm*\n  exceptions: []\n  version:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - xamarinmac-3.0\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - xamarinmac-3.0\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.ServiceModel.Security/SecurityAlgorithmSuite.xml\n  ms.technology:\n  - dotnet-standard\n  author: Erikre\n  ms.author: erikre\n  manager: erikre\n- uid: System.ServiceModel.Security.SecurityAlgorithmSuite.DefaultCanonicalizationAlgorithm\n  commentId: P:System.ServiceModel.Security.SecurityAlgorithmSuite.DefaultCanonicalizationAlgorithm\n  id: DefaultCanonicalizationAlgorithm\n  parent: System.ServiceModel.Security.SecurityAlgorithmSuite\n  langs:\n  - csharp\n  name: DefaultCanonicalizationAlgorithm\n  nameWithType: SecurityAlgorithmSuite.DefaultCanonicalizationAlgorithm\n  fullName: SecurityAlgorithmSuite.DefaultCanonicalizationAlgorithm\n  type: Property\n  assemblies:\n  - System.ServiceModel\n  namespace: System.ServiceModel.Security\n  summary: Gets the default canonicalization algorithm as a string.\n  remarks: When overridden, provides a string value that will be used for comparison in the method <xref:System.ServiceModel.Security.SecurityAlgorithmSuite.IsCanonicalizationAlgorithmSupported%2A>.\n  syntax:\n    content: public abstract string DefaultCanonicalizationAlgorithm { get; }\n    return:\n      type: System.String\n      description: The default canonicalization algorithm.\n  overload: System.ServiceModel.Security.SecurityAlgorithmSuite.DefaultCanonicalizationAlgorithm*\n  exceptions: []\n  version:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - xamarinmac-3.0\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - xamarinmac-3.0\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.ServiceModel.Security/SecurityAlgorithmSuite.xml\n  ms.technology:\n  - dotnet-standard\n  author: Erikre\n  ms.author: erikre\n  manager: erikre\n- uid: System.ServiceModel.Security.SecurityAlgorithmSuite.DefaultDigestAlgorithm\n  commentId: P:System.ServiceModel.Security.SecurityAlgorithmSuite.DefaultDigestAlgorithm\n  id: DefaultDigestAlgorithm\n  parent: System.ServiceModel.Security.SecurityAlgorithmSuite\n  langs:\n  - csharp\n  name: DefaultDigestAlgorithm\n  nameWithType: SecurityAlgorithmSuite.DefaultDigestAlgorithm\n  fullName: SecurityAlgorithmSuite.DefaultDigestAlgorithm\n  type: Property\n  assemblies:\n  - System.ServiceModel\n  namespace: System.ServiceModel.Security\n  summary: Gets the default digest algorithm as a string.\n  remarks: When overridden, provides a string value that will be used for comparison in the <xref:System.ServiceModel.Security.SecurityAlgorithmSuite.IsDigestAlgorithmSupported%2A> method.\n  syntax:\n    content: public abstract string DefaultDigestAlgorithm { get; }\n    return:\n      type: System.String\n      description: The default digest algorithm.\n  overload: System.ServiceModel.Security.SecurityAlgorithmSuite.DefaultDigestAlgorithm*\n  exceptions: []\n  version:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - xamarinmac-3.0\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - xamarinmac-3.0\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.ServiceModel.Security/SecurityAlgorithmSuite.xml\n  ms.technology:\n  - dotnet-standard\n  author: Erikre\n  ms.author: erikre\n  manager: erikre\n- uid: System.ServiceModel.Security.SecurityAlgorithmSuite.DefaultEncryptionAlgorithm\n  commentId: P:System.ServiceModel.Security.SecurityAlgorithmSuite.DefaultEncryptionAlgorithm\n  id: DefaultEncryptionAlgorithm\n  parent: System.ServiceModel.Security.SecurityAlgorithmSuite\n  langs:\n  - csharp\n  name: DefaultEncryptionAlgorithm\n  nameWithType: SecurityAlgorithmSuite.DefaultEncryptionAlgorithm\n  fullName: SecurityAlgorithmSuite.DefaultEncryptionAlgorithm\n  type: Property\n  assemblies:\n  - System.ServiceModel\n  namespace: System.ServiceModel.Security\n  summary: Gets the default encryption algorithm as a string.\n  remarks: When overridden, provides a string value that will be used for comparison in the <xref:System.ServiceModel.Security.SecurityAlgorithmSuite.IsEncryptionAlgorithmSupported%2A> method.\n  syntax:\n    content: public abstract string DefaultEncryptionAlgorithm { get; }\n    return:\n      type: System.String\n      description: The default encryption algorithm.\n  overload: System.ServiceModel.Security.SecurityAlgorithmSuite.DefaultEncryptionAlgorithm*\n  exceptions: []\n  version:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - xamarinmac-3.0\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - xamarinmac-3.0\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.ServiceModel.Security/SecurityAlgorithmSuite.xml\n  ms.technology:\n  - dotnet-standard\n  author: Erikre\n  ms.author: erikre\n  manager: erikre\n- uid: System.ServiceModel.Security.SecurityAlgorithmSuite.DefaultEncryptionKeyDerivationLength\n  commentId: P:System.ServiceModel.Security.SecurityAlgorithmSuite.DefaultEncryptionKeyDerivationLength\n  id: DefaultEncryptionKeyDerivationLength\n  parent: System.ServiceModel.Security.SecurityAlgorithmSuite\n  langs:\n  - csharp\n  name: DefaultEncryptionKeyDerivationLength\n  nameWithType: SecurityAlgorithmSuite.DefaultEncryptionKeyDerivationLength\n  fullName: SecurityAlgorithmSuite.DefaultEncryptionKeyDerivationLength\n  type: Property\n  assemblies:\n  - System.ServiceModel\n  namespace: System.ServiceModel.Security\n  summary: Gets the default encryption key derivation length as an <xref href=\"System.Int32\"></xref> value.\n  remarks: The returned value will vary depending on the subclass that implements it. For `Basic256` encryption, it returns 256.\n  syntax:\n    content: public abstract int DefaultEncryptionKeyDerivationLength { get; }\n    return:\n      type: System.Int32\n      description: The default encryption key derivation length.\n  overload: System.ServiceModel.Security.SecurityAlgorithmSuite.DefaultEncryptionKeyDerivationLength*\n  exceptions: []\n  version:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - xamarinmac-3.0\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - xamarinmac-3.0\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.ServiceModel.Security/SecurityAlgorithmSuite.xml\n  ms.technology:\n  - dotnet-standard\n  author: Erikre\n  ms.author: erikre\n  manager: erikre\n- uid: System.ServiceModel.Security.SecurityAlgorithmSuite.DefaultSignatureKeyDerivationLength\n  commentId: P:System.ServiceModel.Security.SecurityAlgorithmSuite.DefaultSignatureKeyDerivationLength\n  id: DefaultSignatureKeyDerivationLength\n  parent: System.ServiceModel.Security.SecurityAlgorithmSuite\n  langs:\n  - csharp\n  name: DefaultSignatureKeyDerivationLength\n  nameWithType: SecurityAlgorithmSuite.DefaultSignatureKeyDerivationLength\n  fullName: SecurityAlgorithmSuite.DefaultSignatureKeyDerivationLength\n  type: Property\n  assemblies:\n  - System.ServiceModel\n  namespace: System.ServiceModel.Security\n  summary: Gets the default signature key derivation length as an <xref href=\"System.Int32\"></xref> value.\n  remarks: The returned value will vary depending on the subclass that implements it. For `Basic256` encryption, it returns 192.\n  syntax:\n    content: public abstract int DefaultSignatureKeyDerivationLength { get; }\n    return:\n      type: System.Int32\n      description: The default signature key derivation length.\n  overload: System.ServiceModel.Security.SecurityAlgorithmSuite.DefaultSignatureKeyDerivationLength*\n  exceptions: []\n  version:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - xamarinmac-3.0\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - xamarinmac-3.0\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.ServiceModel.Security/SecurityAlgorithmSuite.xml\n  ms.technology:\n  - dotnet-standard\n  author: Erikre\n  ms.author: erikre\n  manager: erikre\n- uid: System.ServiceModel.Security.SecurityAlgorithmSuite.DefaultSymmetricKeyLength\n  commentId: P:System.ServiceModel.Security.SecurityAlgorithmSuite.DefaultSymmetricKeyLength\n  id: DefaultSymmetricKeyLength\n  parent: System.ServiceModel.Security.SecurityAlgorithmSuite\n  langs:\n  - csharp\n  name: DefaultSymmetricKeyLength\n  nameWithType: SecurityAlgorithmSuite.DefaultSymmetricKeyLength\n  fullName: SecurityAlgorithmSuite.DefaultSymmetricKeyLength\n  type: Property\n  assemblies:\n  - System.ServiceModel\n  namespace: System.ServiceModel.Security\n  summary: Gets the default symmetric key length as an <xref href=\"System.Int32\"></xref> value.\n  remarks: The returned value will vary depending on the subclass that implements it. For `Basic256` encryption, it returns 256.\n  syntax:\n    content: public abstract int DefaultSymmetricKeyLength { get; }\n    return:\n      type: System.Int32\n      description: The default symmetric key length.\n  overload: System.ServiceModel.Security.SecurityAlgorithmSuite.DefaultSymmetricKeyLength*\n  exceptions: []\n  version:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - xamarinmac-3.0\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - xamarinmac-3.0\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.ServiceModel.Security/SecurityAlgorithmSuite.xml\n  ms.technology:\n  - dotnet-standard\n  author: Erikre\n  ms.author: erikre\n  manager: erikre\n- uid: System.ServiceModel.Security.SecurityAlgorithmSuite.DefaultSymmetricKeyWrapAlgorithm\n  commentId: P:System.ServiceModel.Security.SecurityAlgorithmSuite.DefaultSymmetricKeyWrapAlgorithm\n  id: DefaultSymmetricKeyWrapAlgorithm\n  parent: System.ServiceModel.Security.SecurityAlgorithmSuite\n  langs:\n  - csharp\n  name: DefaultSymmetricKeyWrapAlgorithm\n  nameWithType: SecurityAlgorithmSuite.DefaultSymmetricKeyWrapAlgorithm\n  fullName: SecurityAlgorithmSuite.DefaultSymmetricKeyWrapAlgorithm\n  type: Property\n  assemblies:\n  - System.ServiceModel\n  namespace: System.ServiceModel.Security\n  summary: Gets the default symmetric key wrap algorithm as a string.\n  syntax:\n    content: public abstract string DefaultSymmetricKeyWrapAlgorithm { get; }\n    return:\n      type: System.String\n      description: The default symmetric key wrap algorithm.\n  overload: System.ServiceModel.Security.SecurityAlgorithmSuite.DefaultSymmetricKeyWrapAlgorithm*\n  exceptions: []\n  version:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - xamarinmac-3.0\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - xamarinmac-3.0\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.ServiceModel.Security/SecurityAlgorithmSuite.xml\n  ms.technology:\n  - dotnet-standard\n  author: Erikre\n  ms.author: erikre\n  manager: erikre\n- uid: System.ServiceModel.Security.SecurityAlgorithmSuite.DefaultSymmetricSignatureAlgorithm\n  commentId: P:System.ServiceModel.Security.SecurityAlgorithmSuite.DefaultSymmetricSignatureAlgorithm\n  id: DefaultSymmetricSignatureAlgorithm\n  parent: System.ServiceModel.Security.SecurityAlgorithmSuite\n  langs:\n  - csharp\n  name: DefaultSymmetricSignatureAlgorithm\n  nameWithType: SecurityAlgorithmSuite.DefaultSymmetricSignatureAlgorithm\n  fullName: SecurityAlgorithmSuite.DefaultSymmetricSignatureAlgorithm\n  type: Property\n  assemblies:\n  - System.ServiceModel\n  namespace: System.ServiceModel.Security\n  summary: Gets the default symmetric signature algorithm as a string.\n  syntax:\n    content: public abstract string DefaultSymmetricSignatureAlgorithm { get; }\n    return:\n      type: System.String\n      description: The default symmetric signature algorithm.\n  overload: System.ServiceModel.Security.SecurityAlgorithmSuite.DefaultSymmetricSignatureAlgorithm*\n  exceptions: []\n  version:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - xamarinmac-3.0\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - xamarinmac-3.0\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.ServiceModel.Security/SecurityAlgorithmSuite.xml\n  ms.technology:\n  - dotnet-standard\n  author: Erikre\n  ms.author: erikre\n  manager: erikre\n- uid: System.ServiceModel.Security.SecurityAlgorithmSuite.IsAsymmetricKeyLengthSupported(System.Int32)\n  commentId: M:System.ServiceModel.Security.SecurityAlgorithmSuite.IsAsymmetricKeyLengthSupported(System.Int32)\n  id: IsAsymmetricKeyLengthSupported(System.Int32)\n  parent: System.ServiceModel.Security.SecurityAlgorithmSuite\n  langs:\n  - csharp\n  name: IsAsymmetricKeyLengthSupported(Int32)\n  nameWithType: SecurityAlgorithmSuite.IsAsymmetricKeyLengthSupported(Int32)\n  fullName: SecurityAlgorithmSuite.IsAsymmetricKeyLengthSupported(Int32)\n  type: Method\n  assemblies:\n  - System.ServiceModel\n  namespace: System.ServiceModel.Security\n  summary: Indicates whether a particular key length is supported by the asymmetric algorithm.\n  remarks: Typical key lengths are 128, 192, and 256 bits.\n  syntax:\n    content: public abstract bool IsAsymmetricKeyLengthSupported (int length);\n    parameters:\n    - id: length\n      type: System.Int32\n      description: The key length to check.\n    return:\n      type: System.Boolean\n      description: '`true` if the key length is supported by the asymmetric algorithm; otherwise, `false`.'\n  overload: System.ServiceModel.Security.SecurityAlgorithmSuite.IsAsymmetricKeyLengthSupported*\n  exceptions: []\n  version:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - xamarinmac-3.0\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - xamarinmac-3.0\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.ServiceModel.Security/SecurityAlgorithmSuite.xml\n  ms.technology:\n  - dotnet-standard\n  author: Erikre\n  ms.author: erikre\n  manager: erikre\n- uid: System.ServiceModel.Security.SecurityAlgorithmSuite.IsAsymmetricKeyWrapAlgorithmSupported(System.String)\n  commentId: M:System.ServiceModel.Security.SecurityAlgorithmSuite.IsAsymmetricKeyWrapAlgorithmSupported(System.String)\n  id: IsAsymmetricKeyWrapAlgorithmSupported(System.String)\n  parent: System.ServiceModel.Security.SecurityAlgorithmSuite\n  langs:\n  - csharp\n  name: IsAsymmetricKeyWrapAlgorithmSupported(String)\n  nameWithType: SecurityAlgorithmSuite.IsAsymmetricKeyWrapAlgorithmSupported(String)\n  fullName: SecurityAlgorithmSuite.IsAsymmetricKeyWrapAlgorithmSupported(String)\n  type: Method\n  assemblies:\n  - System.ServiceModel\n  namespace: System.ServiceModel.Security\n  summary: Indicates whether an asymmetric key wrap algorithm is supported.\n  remarks: '`algorithm` gets compared to the string returned from <xref:System.ServiceModel.Security.SecurityAlgorithmSuite.DefaultAsymmetricKeyWrapAlgorithm%2A>.'\n  syntax:\n    content: public virtual bool IsAsymmetricKeyWrapAlgorithmSupported (string algorithm);\n    parameters:\n    - id: algorithm\n      type: System.String\n      description: The algorithm to check.\n    return:\n      type: System.Boolean\n      description: '`true` if the asymmetric key wrap algorithm is supported; otherwise, `false`.'\n  overload: System.ServiceModel.Security.SecurityAlgorithmSuite.IsAsymmetricKeyWrapAlgorithmSupported*\n  exceptions: []\n  version:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - xamarinmac-3.0\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - xamarinmac-3.0\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.ServiceModel.Security/SecurityAlgorithmSuite.xml\n  ms.technology:\n  - dotnet-standard\n  author: Erikre\n  ms.author: erikre\n  manager: erikre\n- uid: System.ServiceModel.Security.SecurityAlgorithmSuite.IsAsymmetricSignatureAlgorithmSupported(System.String)\n  commentId: M:System.ServiceModel.Security.SecurityAlgorithmSuite.IsAsymmetricSignatureAlgorithmSupported(System.String)\n  id: IsAsymmetricSignatureAlgorithmSupported(System.String)\n  parent: System.ServiceModel.Security.SecurityAlgorithmSuite\n  langs:\n  - csharp\n  name: IsAsymmetricSignatureAlgorithmSupported(String)\n  nameWithType: SecurityAlgorithmSuite.IsAsymmetricSignatureAlgorithmSupported(String)\n  fullName: SecurityAlgorithmSuite.IsAsymmetricSignatureAlgorithmSupported(String)\n  type: Method\n  assemblies:\n  - System.ServiceModel\n  namespace: System.ServiceModel.Security\n  summary: Indicates whether an asymmetric signature algorithm is supported.\n  remarks: '`algorithm` gets compared to the string returned from <xref:System.ServiceModel.Security.SecurityAlgorithmSuite.DefaultAsymmetricSignatureAlgorithm%2A>.'\n  syntax:\n    content: public virtual bool IsAsymmetricSignatureAlgorithmSupported (string algorithm);\n    parameters:\n    - id: algorithm\n      type: System.String\n      description: The algorithm name to check.\n    return:\n      type: System.Boolean\n      description: '`true` if the asymmetric signature algorithm is supported; otherwise, `false`.'\n  overload: System.ServiceModel.Security.SecurityAlgorithmSuite.IsAsymmetricSignatureAlgorithmSupported*\n  exceptions: []\n  version:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - xamarinmac-3.0\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - xamarinmac-3.0\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.ServiceModel.Security/SecurityAlgorithmSuite.xml\n  ms.technology:\n  - dotnet-standard\n  author: Erikre\n  ms.author: erikre\n  manager: erikre\n- uid: System.ServiceModel.Security.SecurityAlgorithmSuite.IsCanonicalizationAlgorithmSupported(System.String)\n  commentId: M:System.ServiceModel.Security.SecurityAlgorithmSuite.IsCanonicalizationAlgorithmSupported(System.String)\n  id: IsCanonicalizationAlgorithmSupported(System.String)\n  parent: System.ServiceModel.Security.SecurityAlgorithmSuite\n  langs:\n  - csharp\n  name: IsCanonicalizationAlgorithmSupported(String)\n  nameWithType: SecurityAlgorithmSuite.IsCanonicalizationAlgorithmSupported(String)\n  fullName: SecurityAlgorithmSuite.IsCanonicalizationAlgorithmSupported(String)\n  type: Method\n  assemblies:\n  - System.ServiceModel\n  namespace: System.ServiceModel.Security\n  summary: Indicates whether a canonicalization algorithm is supported.\n  remarks: '`algorithm` gets compared to the string returned from <xref:System.ServiceModel.Security.SecurityAlgorithmSuite.DefaultCanonicalizationAlgorithm%2A>.'\n  syntax:\n    content: public virtual bool IsCanonicalizationAlgorithmSupported (string algorithm);\n    parameters:\n    - id: algorithm\n      type: System.String\n      description: The algorithm name to check.\n    return:\n      type: System.Boolean\n      description: '`true` if the canonicalization algorithm is supported; otherwise, `false`.'\n  overload: System.ServiceModel.Security.SecurityAlgorithmSuite.IsCanonicalizationAlgorithmSupported*\n  exceptions: []\n  version:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - xamarinmac-3.0\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - xamarinmac-3.0\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.ServiceModel.Security/SecurityAlgorithmSuite.xml\n  ms.technology:\n  - dotnet-standard\n  author: Erikre\n  ms.author: erikre\n  manager: erikre\n- uid: System.ServiceModel.Security.SecurityAlgorithmSuite.IsDigestAlgorithmSupported(System.String)\n  commentId: M:System.ServiceModel.Security.SecurityAlgorithmSuite.IsDigestAlgorithmSupported(System.String)\n  id: IsDigestAlgorithmSupported(System.String)\n  parent: System.ServiceModel.Security.SecurityAlgorithmSuite\n  langs:\n  - csharp\n  name: IsDigestAlgorithmSupported(String)\n  nameWithType: SecurityAlgorithmSuite.IsDigestAlgorithmSupported(String)\n  fullName: SecurityAlgorithmSuite.IsDigestAlgorithmSupported(String)\n  type: Method\n  assemblies:\n  - System.ServiceModel\n  namespace: System.ServiceModel.Security\n  summary: Indicates whether a digest algorithm is supported.\n  remarks: '`algorithm` gets compared to the string returned from <xref:System.ServiceModel.Security.SecurityAlgorithmSuite.DefaultDigestAlgorithm%2A>.'\n  syntax:\n    content: public virtual bool IsDigestAlgorithmSupported (string algorithm);\n    parameters:\n    - id: algorithm\n      type: System.String\n      description: The algorithm name to check.\n    return:\n      type: System.Boolean\n      description: '`true` if the digest algorithm is supported; otherwise, `false`.'\n  overload: System.ServiceModel.Security.SecurityAlgorithmSuite.IsDigestAlgorithmSupported*\n  exceptions: []\n  version:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - xamarinmac-3.0\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - xamarinmac-3.0\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.ServiceModel.Security/SecurityAlgorithmSuite.xml\n  ms.technology:\n  - dotnet-standard\n  author: Erikre\n  ms.author: erikre\n  manager: erikre\n- uid: System.ServiceModel.Security.SecurityAlgorithmSuite.IsEncryptionAlgorithmSupported(System.String)\n  commentId: M:System.ServiceModel.Security.SecurityAlgorithmSuite.IsEncryptionAlgorithmSupported(System.String)\n  id: IsEncryptionAlgorithmSupported(System.String)\n  parent: System.ServiceModel.Security.SecurityAlgorithmSuite\n  langs:\n  - csharp\n  name: IsEncryptionAlgorithmSupported(String)\n  nameWithType: SecurityAlgorithmSuite.IsEncryptionAlgorithmSupported(String)\n  fullName: SecurityAlgorithmSuite.IsEncryptionAlgorithmSupported(String)\n  type: Method\n  assemblies:\n  - System.ServiceModel\n  namespace: System.ServiceModel.Security\n  summary: Indicates whether an encryption algorithm is supported.\n  remarks: '`algorithm` gets compared to the string returned from <xref:System.ServiceModel.Security.SecurityAlgorithmSuite.DefaultEncryptionAlgorithm%2A>.'\n  syntax:\n    content: public virtual bool IsEncryptionAlgorithmSupported (string algorithm);\n    parameters:\n    - id: algorithm\n      type: System.String\n      description: The algorithm name to check.\n    return:\n      type: System.Boolean\n      description: '`true` if the encryption algorithm is supported; otherwise, `false`.'\n  overload: System.ServiceModel.Security.SecurityAlgorithmSuite.IsEncryptionAlgorithmSupported*\n  exceptions: []\n  version:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - xamarinmac-3.0\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - xamarinmac-3.0\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.ServiceModel.Security/SecurityAlgorithmSuite.xml\n  ms.technology:\n  - dotnet-standard\n  author: Erikre\n  ms.author: erikre\n  manager: erikre\n- uid: System.ServiceModel.Security.SecurityAlgorithmSuite.IsEncryptionKeyDerivationAlgorithmSupported(System.String)\n  commentId: M:System.ServiceModel.Security.SecurityAlgorithmSuite.IsEncryptionKeyDerivationAlgorithmSupported(System.String)\n  id: IsEncryptionKeyDerivationAlgorithmSupported(System.String)\n  parent: System.ServiceModel.Security.SecurityAlgorithmSuite\n  langs:\n  - csharp\n  name: IsEncryptionKeyDerivationAlgorithmSupported(String)\n  nameWithType: SecurityAlgorithmSuite.IsEncryptionKeyDerivationAlgorithmSupported(String)\n  fullName: SecurityAlgorithmSuite.IsEncryptionKeyDerivationAlgorithmSupported(String)\n  type: Method\n  assemblies:\n  - System.ServiceModel\n  namespace: System.ServiceModel.Security\n  summary: Indicates whether an encryption key derivation algorithm is supported.\n  syntax:\n    content: public virtual bool IsEncryptionKeyDerivationAlgorithmSupported (string algorithm);\n    parameters:\n    - id: algorithm\n      type: System.String\n      description: The algorithm name to check.\n    return:\n      type: System.Boolean\n      description: '`true` if the encryption key derivation algorithm is supported; otherwise, `false`.'\n  overload: System.ServiceModel.Security.SecurityAlgorithmSuite.IsEncryptionKeyDerivationAlgorithmSupported*\n  exceptions: []\n  version:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - xamarinmac-3.0\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - xamarinmac-3.0\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.ServiceModel.Security/SecurityAlgorithmSuite.xml\n  ms.technology:\n  - dotnet-standard\n  author: Erikre\n  ms.author: erikre\n  manager: erikre\n- uid: System.ServiceModel.Security.SecurityAlgorithmSuite.IsSignatureKeyDerivationAlgorithmSupported(System.String)\n  commentId: M:System.ServiceModel.Security.SecurityAlgorithmSuite.IsSignatureKeyDerivationAlgorithmSupported(System.String)\n  id: IsSignatureKeyDerivationAlgorithmSupported(System.String)\n  parent: System.ServiceModel.Security.SecurityAlgorithmSuite\n  langs:\n  - csharp\n  name: IsSignatureKeyDerivationAlgorithmSupported(String)\n  nameWithType: SecurityAlgorithmSuite.IsSignatureKeyDerivationAlgorithmSupported(String)\n  fullName: SecurityAlgorithmSuite.IsSignatureKeyDerivationAlgorithmSupported(String)\n  type: Method\n  assemblies:\n  - System.ServiceModel\n  namespace: System.ServiceModel.Security\n  summary: Indicates whether a signature key derivation algorithm is supported.\n  syntax:\n    content: public virtual bool IsSignatureKeyDerivationAlgorithmSupported (string algorithm);\n    parameters:\n    - id: algorithm\n      type: System.String\n      description: The algorithm name to check.\n    return:\n      type: System.Boolean\n      description: '`true` if the signature key derivation algorithm is supported; otherwise, `false`.'\n  overload: System.ServiceModel.Security.SecurityAlgorithmSuite.IsSignatureKeyDerivationAlgorithmSupported*\n  exceptions: []\n  version:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - xamarinmac-3.0\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - xamarinmac-3.0\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.ServiceModel.Security/SecurityAlgorithmSuite.xml\n  ms.technology:\n  - dotnet-standard\n  author: Erikre\n  ms.author: erikre\n  manager: erikre\n- uid: System.ServiceModel.Security.SecurityAlgorithmSuite.IsSymmetricKeyLengthSupported(System.Int32)\n  commentId: M:System.ServiceModel.Security.SecurityAlgorithmSuite.IsSymmetricKeyLengthSupported(System.Int32)\n  id: IsSymmetricKeyLengthSupported(System.Int32)\n  parent: System.ServiceModel.Security.SecurityAlgorithmSuite\n  langs:\n  - csharp\n  name: IsSymmetricKeyLengthSupported(Int32)\n  nameWithType: SecurityAlgorithmSuite.IsSymmetricKeyLengthSupported(Int32)\n  fullName: SecurityAlgorithmSuite.IsSymmetricKeyLengthSupported(Int32)\n  type: Method\n  assemblies:\n  - System.ServiceModel\n  namespace: System.ServiceModel.Security\n  summary: When overridden in a derived class, indicates whether a particular symmetric key length is supported.\n  remarks: The `length` is compared to a range of values depending on the subclass. For example, in the `TripleDES` subclass, this method verifies that `length` is between 192 and 256, inclusive.\n  syntax:\n    content: public abstract bool IsSymmetricKeyLengthSupported (int length);\n    parameters:\n    - id: length\n      type: System.Int32\n      description: The key length to check.\n    return:\n      type: System.Boolean\n      description: '`true` if the symmetric key length is supported; otherwise, `false`.'\n  overload: System.ServiceModel.Security.SecurityAlgorithmSuite.IsSymmetricKeyLengthSupported*\n  exceptions: []\n  version:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - xamarinmac-3.0\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - xamarinmac-3.0\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.ServiceModel.Security/SecurityAlgorithmSuite.xml\n  ms.technology:\n  - dotnet-standard\n  author: Erikre\n  ms.author: erikre\n  manager: erikre\n- uid: System.ServiceModel.Security.SecurityAlgorithmSuite.IsSymmetricKeyWrapAlgorithmSupported(System.String)\n  commentId: M:System.ServiceModel.Security.SecurityAlgorithmSuite.IsSymmetricKeyWrapAlgorithmSupported(System.String)\n  id: IsSymmetricKeyWrapAlgorithmSupported(System.String)\n  parent: System.ServiceModel.Security.SecurityAlgorithmSuite\n  langs:\n  - csharp\n  name: IsSymmetricKeyWrapAlgorithmSupported(String)\n  nameWithType: SecurityAlgorithmSuite.IsSymmetricKeyWrapAlgorithmSupported(String)\n  fullName: SecurityAlgorithmSuite.IsSymmetricKeyWrapAlgorithmSupported(String)\n  type: Method\n  assemblies:\n  - System.ServiceModel\n  namespace: System.ServiceModel.Security\n  summary: Indicates whether a symmetric key wrap algorithm is supported.\n  syntax:\n    content: public virtual bool IsSymmetricKeyWrapAlgorithmSupported (string algorithm);\n    parameters:\n    - id: algorithm\n      type: System.String\n      description: The algorithm name to check.\n    return:\n      type: System.Boolean\n      description: '`true` if the symmetric key wrap algorithm is supported; otherwise, `false`.'\n  overload: System.ServiceModel.Security.SecurityAlgorithmSuite.IsSymmetricKeyWrapAlgorithmSupported*\n  exceptions: []\n  version:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - xamarinmac-3.0\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - xamarinmac-3.0\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.ServiceModel.Security/SecurityAlgorithmSuite.xml\n  ms.technology:\n  - dotnet-standard\n  author: Erikre\n  ms.author: erikre\n  manager: erikre\n- uid: System.ServiceModel.Security.SecurityAlgorithmSuite.IsSymmetricSignatureAlgorithmSupported(System.String)\n  commentId: M:System.ServiceModel.Security.SecurityAlgorithmSuite.IsSymmetricSignatureAlgorithmSupported(System.String)\n  id: IsSymmetricSignatureAlgorithmSupported(System.String)\n  parent: System.ServiceModel.Security.SecurityAlgorithmSuite\n  langs:\n  - csharp\n  name: IsSymmetricSignatureAlgorithmSupported(String)\n  nameWithType: SecurityAlgorithmSuite.IsSymmetricSignatureAlgorithmSupported(String)\n  fullName: SecurityAlgorithmSuite.IsSymmetricSignatureAlgorithmSupported(String)\n  type: Method\n  assemblies:\n  - System.ServiceModel\n  namespace: System.ServiceModel.Security\n  summary: Indicates whether a symmetric signature algorithm is supported.\n  syntax:\n    content: public virtual bool IsSymmetricSignatureAlgorithmSupported (string algorithm);\n    parameters:\n    - id: algorithm\n      type: System.String\n      description: The algorithm name to check.\n    return:\n      type: System.Boolean\n      description: '`true` if the symmetric signature algorithm is supported; otherwise, `false`.'\n  overload: System.ServiceModel.Security.SecurityAlgorithmSuite.IsSymmetricSignatureAlgorithmSupported*\n  exceptions: []\n  version:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - xamarinmac-3.0\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - xamarinmac-3.0\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.ServiceModel.Security/SecurityAlgorithmSuite.xml\n  ms.technology:\n  - dotnet-standard\n  author: Erikre\n  ms.author: erikre\n  manager: erikre\n- uid: System.ServiceModel.Security.SecurityAlgorithmSuite.TripleDes\n  commentId: P:System.ServiceModel.Security.SecurityAlgorithmSuite.TripleDes\n  id: TripleDes\n  parent: System.ServiceModel.Security.SecurityAlgorithmSuite\n  langs:\n  - csharp\n  name: TripleDes\n  nameWithType: SecurityAlgorithmSuite.TripleDes\n  fullName: SecurityAlgorithmSuite.TripleDes\n  type: Property\n  assemblies:\n  - System.ServiceModel\n  namespace: System.ServiceModel.Security\n  summary: Gets the Triple Data Encryption Standard (DES) algorithm suite.\n  remarks: The <xref:System.ServiceModel.Security.SecurityAlgorithmSuite> returned is actually an internal subclass that overrides some of the properties specifying default values as well as some of the methods.\n  syntax:\n    content: public static System.ServiceModel.Security.SecurityAlgorithmSuite TripleDes { get; }\n    return:\n      type: System.ServiceModel.Security.SecurityAlgorithmSuite\n      description: The Triple DES <xref href=\"System.ServiceModel.Security.SecurityAlgorithmSuite\"></xref>.\n  overload: System.ServiceModel.Security.SecurityAlgorithmSuite.TripleDes*\n  exceptions: []\n  version:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - xamarinmac-3.0\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - xamarinmac-3.0\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.ServiceModel.Security/SecurityAlgorithmSuite.xml\n  ms.technology:\n  - dotnet-standard\n  author: Erikre\n  ms.author: erikre\n  manager: erikre\n- uid: System.ServiceModel.Security.SecurityAlgorithmSuite.TripleDesRsa15\n  commentId: P:System.ServiceModel.Security.SecurityAlgorithmSuite.TripleDesRsa15\n  id: TripleDesRsa15\n  parent: System.ServiceModel.Security.SecurityAlgorithmSuite\n  langs:\n  - csharp\n  name: TripleDesRsa15\n  nameWithType: SecurityAlgorithmSuite.TripleDesRsa15\n  fullName: SecurityAlgorithmSuite.TripleDesRsa15\n  type: Property\n  assemblies:\n  - System.ServiceModel\n  namespace: System.ServiceModel.Security\n  summary: Gets an algorithm suite that uses RSA15 as the key wrap algorithm and 192-bit Triple Data Encryption Standard (DES) as the message encryption algorithm.\n  remarks: The <xref:System.ServiceModel.Security.SecurityAlgorithmSuite> returned is actually an internal subclass that overrides some of the properties specifying default values as well as some of the methods.\n  syntax:\n    content: public static System.ServiceModel.Security.SecurityAlgorithmSuite TripleDesRsa15 { get; }\n    return:\n      type: System.ServiceModel.Security.SecurityAlgorithmSuite\n      description: An algorithm suite that uses RSA15 as the key wrap algorithm and 192-bit Triple Data Encryption Standard (DES) as the message encryption algorithm.\n  overload: System.ServiceModel.Security.SecurityAlgorithmSuite.TripleDesRsa15*\n  exceptions: []\n  version:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - xamarinmac-3.0\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - xamarinmac-3.0\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.ServiceModel.Security/SecurityAlgorithmSuite.xml\n  ms.technology:\n  - dotnet-standard\n  author: Erikre\n  ms.author: erikre\n  manager: erikre\n- uid: System.ServiceModel.Security.SecurityAlgorithmSuite.TripleDesSha256\n  commentId: P:System.ServiceModel.Security.SecurityAlgorithmSuite.TripleDesSha256\n  id: TripleDesSha256\n  parent: System.ServiceModel.Security.SecurityAlgorithmSuite\n  langs:\n  - csharp\n  name: TripleDesSha256\n  nameWithType: SecurityAlgorithmSuite.TripleDesSha256\n  fullName: SecurityAlgorithmSuite.TripleDesSha256\n  type: Property\n  assemblies:\n  - System.ServiceModel\n  namespace: System.ServiceModel.Security\n  summary: Gets an algorithm suite that uses SHA256 for the signature digest and 192-bit Triple Data Encryption Standard (DES) as the message encryption algorithm.\n  remarks: The <xref:System.ServiceModel.Security.SecurityAlgorithmSuite> returned is actually an internal subclass that overrides some of the properties specifying default values as well as some of the methods.\n  syntax:\n    content: public static System.ServiceModel.Security.SecurityAlgorithmSuite TripleDesSha256 { get; }\n    return:\n      type: System.ServiceModel.Security.SecurityAlgorithmSuite\n      description: An algorithm suite that uses SHA256 for the signature digest and 192-bit Triple Data Encryption Standard (DES) as the message encryption algorithm.\n  overload: System.ServiceModel.Security.SecurityAlgorithmSuite.TripleDesSha256*\n  exceptions: []\n  version:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - xamarinmac-3.0\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - xamarinmac-3.0\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.ServiceModel.Security/SecurityAlgorithmSuite.xml\n  ms.technology:\n  - dotnet-standard\n  author: Erikre\n  ms.author: erikre\n  manager: erikre\n- uid: System.ServiceModel.Security.SecurityAlgorithmSuite.TripleDesSha256Rsa15\n  commentId: P:System.ServiceModel.Security.SecurityAlgorithmSuite.TripleDesSha256Rsa15\n  id: TripleDesSha256Rsa15\n  parent: System.ServiceModel.Security.SecurityAlgorithmSuite\n  langs:\n  - csharp\n  name: TripleDesSha256Rsa15\n  nameWithType: SecurityAlgorithmSuite.TripleDesSha256Rsa15\n  fullName: SecurityAlgorithmSuite.TripleDesSha256Rsa15\n  type: Property\n  assemblies:\n  - System.ServiceModel\n  namespace: System.ServiceModel.Security\n  summary: Gets an algorithm suite that uses RSA15 as the key wrap algorithm, SHA256 for the signature digest, and 192-bit Triple Data Encryption Standard (DES) as the message encryption algorithm.\n  remarks: The <xref:System.ServiceModel.Security.SecurityAlgorithmSuite> returned is actually an internal subclass that overrides some of the properties specifying default values as well as some of the methods.\n  syntax:\n    content: public static System.ServiceModel.Security.SecurityAlgorithmSuite TripleDesSha256Rsa15 { get; }\n    return:\n      type: System.ServiceModel.Security.SecurityAlgorithmSuite\n      description: An algorithm suite that uses RSA15 as the key wrap algorithm, SHA256 for the signature digest, and 192-bit Triple Data Encryption Standard (DES) as the message encryption algorithm.\n  overload: System.ServiceModel.Security.SecurityAlgorithmSuite.TripleDesSha256Rsa15*\n  exceptions: []\n  version:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - xamarinmac-3.0\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - xamarinmac-3.0\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.ServiceModel.Security/SecurityAlgorithmSuite.xml\n  ms.technology:\n  - dotnet-standard\n  author: Erikre\n  ms.author: erikre\n  manager: erikre\nreferences:\n- uid: System.Object\n  parent: System\n  isExternal: false\n  name: Object\n  nameWithType: Object\n  fullName: System.Object\n- uid: System.ServiceModel.Security.SecurityAlgorithmSuite.#ctor\n  parent: System.ServiceModel.Security.SecurityAlgorithmSuite\n  isExternal: false\n  name: SecurityAlgorithmSuite()\n  nameWithType: SecurityAlgorithmSuite.SecurityAlgorithmSuite()\n  fullName: SecurityAlgorithmSuite.SecurityAlgorithmSuite()\n- uid: System.ServiceModel.Security.SecurityAlgorithmSuite.Basic128\n  parent: System.ServiceModel.Security.SecurityAlgorithmSuite\n  isExternal: false\n  name: Basic128\n  nameWithType: SecurityAlgorithmSuite.Basic128\n  fullName: SecurityAlgorithmSuite.Basic128\n- uid: System.ServiceModel.Security.SecurityAlgorithmSuite\n  parent: System.ServiceModel.Security\n  isExternal: false\n  name: SecurityAlgorithmSuite\n  nameWithType: SecurityAlgorithmSuite\n  fullName: System.ServiceModel.Security.SecurityAlgorithmSuite\n- uid: System.ServiceModel.Security.SecurityAlgorithmSuite.Basic128Rsa15\n  parent: System.ServiceModel.Security.SecurityAlgorithmSuite\n  isExternal: false\n  name: Basic128Rsa15\n  nameWithType: SecurityAlgorithmSuite.Basic128Rsa15\n  fullName: SecurityAlgorithmSuite.Basic128Rsa15\n- uid: System.ServiceModel.Security.SecurityAlgorithmSuite.Basic128Sha256\n  parent: System.ServiceModel.Security.SecurityAlgorithmSuite\n  isExternal: false\n  name: Basic128Sha256\n  nameWithType: SecurityAlgorithmSuite.Basic128Sha256\n  fullName: SecurityAlgorithmSuite.Basic128Sha256\n- uid: System.ServiceModel.Security.SecurityAlgorithmSuite.Basic128Sha256Rsa15\n  parent: System.ServiceModel.Security.SecurityAlgorithmSuite\n  isExternal: false\n  name: Basic128Sha256Rsa15\n  nameWithType: SecurityAlgorithmSuite.Basic128Sha256Rsa15\n  fullName: SecurityAlgorithmSuite.Basic128Sha256Rsa15\n- uid: System.ServiceModel.Security.SecurityAlgorithmSuite.Basic192\n  parent: System.ServiceModel.Security.SecurityAlgorithmSuite\n  isExternal: false\n  name: Basic192\n  nameWithType: SecurityAlgorithmSuite.Basic192\n  fullName: SecurityAlgorithmSuite.Basic192\n- uid: System.ServiceModel.Security.SecurityAlgorithmSuite.Basic192Rsa15\n  parent: System.ServiceModel.Security.SecurityAlgorithmSuite\n  isExternal: false\n  name: Basic192Rsa15\n  nameWithType: SecurityAlgorithmSuite.Basic192Rsa15\n  fullName: SecurityAlgorithmSuite.Basic192Rsa15\n- uid: System.ServiceModel.Security.SecurityAlgorithmSuite.Basic192Sha256\n  parent: System.ServiceModel.Security.SecurityAlgorithmSuite\n  isExternal: false\n  name: Basic192Sha256\n  nameWithType: SecurityAlgorithmSuite.Basic192Sha256\n  fullName: SecurityAlgorithmSuite.Basic192Sha256\n- uid: System.ServiceModel.Security.SecurityAlgorithmSuite.Basic192Sha256Rsa15\n  parent: System.ServiceModel.Security.SecurityAlgorithmSuite\n  isExternal: false\n  name: Basic192Sha256Rsa15\n  nameWithType: SecurityAlgorithmSuite.Basic192Sha256Rsa15\n  fullName: SecurityAlgorithmSuite.Basic192Sha256Rsa15\n- uid: System.ServiceModel.Security.SecurityAlgorithmSuite.Basic256\n  parent: System.ServiceModel.Security.SecurityAlgorithmSuite\n  isExternal: false\n  name: Basic256\n  nameWithType: SecurityAlgorithmSuite.Basic256\n  fullName: SecurityAlgorithmSuite.Basic256\n- uid: System.ServiceModel.Security.SecurityAlgorithmSuite.Basic256Rsa15\n  parent: System.ServiceModel.Security.SecurityAlgorithmSuite\n  isExternal: false\n  name: Basic256Rsa15\n  nameWithType: SecurityAlgorithmSuite.Basic256Rsa15\n  fullName: SecurityAlgorithmSuite.Basic256Rsa15\n- uid: System.ServiceModel.Security.SecurityAlgorithmSuite.Basic256Sha256\n  parent: System.ServiceModel.Security.SecurityAlgorithmSuite\n  isExternal: false\n  name: Basic256Sha256\n  nameWithType: SecurityAlgorithmSuite.Basic256Sha256\n  fullName: SecurityAlgorithmSuite.Basic256Sha256\n- uid: System.ServiceModel.Security.SecurityAlgorithmSuite.Basic256Sha256Rsa15\n  parent: System.ServiceModel.Security.SecurityAlgorithmSuite\n  isExternal: false\n  name: Basic256Sha256Rsa15\n  nameWithType: SecurityAlgorithmSuite.Basic256Sha256Rsa15\n  fullName: SecurityAlgorithmSuite.Basic256Sha256Rsa15\n- uid: System.ServiceModel.Security.SecurityAlgorithmSuite.Default\n  parent: System.ServiceModel.Security.SecurityAlgorithmSuite\n  isExternal: false\n  name: Default\n  nameWithType: SecurityAlgorithmSuite.Default\n  fullName: SecurityAlgorithmSuite.Default\n- uid: System.ServiceModel.Security.SecurityAlgorithmSuite.DefaultAsymmetricKeyWrapAlgorithm\n  parent: System.ServiceModel.Security.SecurityAlgorithmSuite\n  isExternal: false\n  name: DefaultAsymmetricKeyWrapAlgorithm\n  nameWithType: SecurityAlgorithmSuite.DefaultAsymmetricKeyWrapAlgorithm\n  fullName: SecurityAlgorithmSuite.DefaultAsymmetricKeyWrapAlgorithm\n- uid: System.String\n  parent: System\n  isExternal: false\n  name: String\n  nameWithType: String\n  fullName: System.String\n- uid: System.ServiceModel.Security.SecurityAlgorithmSuite.DefaultAsymmetricSignatureAlgorithm\n  parent: System.ServiceModel.Security.SecurityAlgorithmSuite\n  isExternal: false\n  name: DefaultAsymmetricSignatureAlgorithm\n  nameWithType: SecurityAlgorithmSuite.DefaultAsymmetricSignatureAlgorithm\n  fullName: SecurityAlgorithmSuite.DefaultAsymmetricSignatureAlgorithm\n- uid: System.ServiceModel.Security.SecurityAlgorithmSuite.DefaultCanonicalizationAlgorithm\n  parent: System.ServiceModel.Security.SecurityAlgorithmSuite\n  isExternal: false\n  name: DefaultCanonicalizationAlgorithm\n  nameWithType: SecurityAlgorithmSuite.DefaultCanonicalizationAlgorithm\n  fullName: SecurityAlgorithmSuite.DefaultCanonicalizationAlgorithm\n- uid: System.ServiceModel.Security.SecurityAlgorithmSuite.DefaultDigestAlgorithm\n  parent: System.ServiceModel.Security.SecurityAlgorithmSuite\n  isExternal: false\n  name: DefaultDigestAlgorithm\n  nameWithType: SecurityAlgorithmSuite.DefaultDigestAlgorithm\n  fullName: SecurityAlgorithmSuite.DefaultDigestAlgorithm\n- uid: System.ServiceModel.Security.SecurityAlgorithmSuite.DefaultEncryptionAlgorithm\n  parent: System.ServiceModel.Security.SecurityAlgorithmSuite\n  isExternal: false\n  name: DefaultEncryptionAlgorithm\n  nameWithType: SecurityAlgorithmSuite.DefaultEncryptionAlgorithm\n  fullName: SecurityAlgorithmSuite.DefaultEncryptionAlgorithm\n- uid: System.ServiceModel.Security.SecurityAlgorithmSuite.DefaultEncryptionKeyDerivationLength\n  parent: System.ServiceModel.Security.SecurityAlgorithmSuite\n  isExternal: false\n  name: DefaultEncryptionKeyDerivationLength\n  nameWithType: SecurityAlgorithmSuite.DefaultEncryptionKeyDerivationLength\n  fullName: SecurityAlgorithmSuite.DefaultEncryptionKeyDerivationLength\n- uid: System.Int32\n  parent: System\n  isExternal: false\n  name: Int32\n  nameWithType: Int32\n  fullName: System.Int32\n- uid: System.ServiceModel.Security.SecurityAlgorithmSuite.DefaultSignatureKeyDerivationLength\n  parent: System.ServiceModel.Security.SecurityAlgorithmSuite\n  isExternal: false\n  name: DefaultSignatureKeyDerivationLength\n  nameWithType: SecurityAlgorithmSuite.DefaultSignatureKeyDerivationLength\n  fullName: SecurityAlgorithmSuite.DefaultSignatureKeyDerivationLength\n- uid: System.ServiceModel.Security.SecurityAlgorithmSuite.DefaultSymmetricKeyLength\n  parent: System.ServiceModel.Security.SecurityAlgorithmSuite\n  isExternal: false\n  name: DefaultSymmetricKeyLength\n  nameWithType: SecurityAlgorithmSuite.DefaultSymmetricKeyLength\n  fullName: SecurityAlgorithmSuite.DefaultSymmetricKeyLength\n- uid: System.ServiceModel.Security.SecurityAlgorithmSuite.DefaultSymmetricKeyWrapAlgorithm\n  parent: System.ServiceModel.Security.SecurityAlgorithmSuite\n  isExternal: false\n  name: DefaultSymmetricKeyWrapAlgorithm\n  nameWithType: SecurityAlgorithmSuite.DefaultSymmetricKeyWrapAlgorithm\n  fullName: SecurityAlgorithmSuite.DefaultSymmetricKeyWrapAlgorithm\n- uid: System.ServiceModel.Security.SecurityAlgorithmSuite.DefaultSymmetricSignatureAlgorithm\n  parent: System.ServiceModel.Security.SecurityAlgorithmSuite\n  isExternal: false\n  name: DefaultSymmetricSignatureAlgorithm\n  nameWithType: SecurityAlgorithmSuite.DefaultSymmetricSignatureAlgorithm\n  fullName: SecurityAlgorithmSuite.DefaultSymmetricSignatureAlgorithm\n- uid: System.ServiceModel.Security.SecurityAlgorithmSuite.IsAsymmetricKeyLengthSupported(System.Int32)\n  parent: System.ServiceModel.Security.SecurityAlgorithmSuite\n  isExternal: false\n  name: IsAsymmetricKeyLengthSupported(Int32)\n  nameWithType: SecurityAlgorithmSuite.IsAsymmetricKeyLengthSupported(Int32)\n  fullName: SecurityAlgorithmSuite.IsAsymmetricKeyLengthSupported(Int32)\n- uid: System.Boolean\n  parent: System\n  isExternal: false\n  name: Boolean\n  nameWithType: Boolean\n  fullName: System.Boolean\n- uid: System.ServiceModel.Security.SecurityAlgorithmSuite.IsAsymmetricKeyWrapAlgorithmSupported(System.String)\n  parent: System.ServiceModel.Security.SecurityAlgorithmSuite\n  isExternal: false\n  name: IsAsymmetricKeyWrapAlgorithmSupported(String)\n  nameWithType: SecurityAlgorithmSuite.IsAsymmetricKeyWrapAlgorithmSupported(String)\n  fullName: SecurityAlgorithmSuite.IsAsymmetricKeyWrapAlgorithmSupported(String)\n- uid: System.ServiceModel.Security.SecurityAlgorithmSuite.IsAsymmetricSignatureAlgorithmSupported(System.String)\n  parent: System.ServiceModel.Security.SecurityAlgorithmSuite\n  isExternal: false\n  name: IsAsymmetricSignatureAlgorithmSupported(String)\n  nameWithType: SecurityAlgorithmSuite.IsAsymmetricSignatureAlgorithmSupported(String)\n  fullName: SecurityAlgorithmSuite.IsAsymmetricSignatureAlgorithmSupported(String)\n- uid: System.ServiceModel.Security.SecurityAlgorithmSuite.IsCanonicalizationAlgorithmSupported(System.String)\n  parent: System.ServiceModel.Security.SecurityAlgorithmSuite\n  isExternal: false\n  name: IsCanonicalizationAlgorithmSupported(String)\n  nameWithType: SecurityAlgorithmSuite.IsCanonicalizationAlgorithmSupported(String)\n  fullName: SecurityAlgorithmSuite.IsCanonicalizationAlgorithmSupported(String)\n- uid: System.ServiceModel.Security.SecurityAlgorithmSuite.IsDigestAlgorithmSupported(System.String)\n  parent: System.ServiceModel.Security.SecurityAlgorithmSuite\n  isExternal: false\n  name: IsDigestAlgorithmSupported(String)\n  nameWithType: SecurityAlgorithmSuite.IsDigestAlgorithmSupported(String)\n  fullName: SecurityAlgorithmSuite.IsDigestAlgorithmSupported(String)\n- uid: System.ServiceModel.Security.SecurityAlgorithmSuite.IsEncryptionAlgorithmSupported(System.String)\n  parent: System.ServiceModel.Security.SecurityAlgorithmSuite\n  isExternal: false\n  name: IsEncryptionAlgorithmSupported(String)\n  nameWithType: SecurityAlgorithmSuite.IsEncryptionAlgorithmSupported(String)\n  fullName: SecurityAlgorithmSuite.IsEncryptionAlgorithmSupported(String)\n- uid: System.ServiceModel.Security.SecurityAlgorithmSuite.IsEncryptionKeyDerivationAlgorithmSupported(System.String)\n  parent: System.ServiceModel.Security.SecurityAlgorithmSuite\n  isExternal: false\n  name: IsEncryptionKeyDerivationAlgorithmSupported(String)\n  nameWithType: SecurityAlgorithmSuite.IsEncryptionKeyDerivationAlgorithmSupported(String)\n  fullName: SecurityAlgorithmSuite.IsEncryptionKeyDerivationAlgorithmSupported(String)\n- uid: System.ServiceModel.Security.SecurityAlgorithmSuite.IsSignatureKeyDerivationAlgorithmSupported(System.String)\n  parent: System.ServiceModel.Security.SecurityAlgorithmSuite\n  isExternal: false\n  name: IsSignatureKeyDerivationAlgorithmSupported(String)\n  nameWithType: SecurityAlgorithmSuite.IsSignatureKeyDerivationAlgorithmSupported(String)\n  fullName: SecurityAlgorithmSuite.IsSignatureKeyDerivationAlgorithmSupported(String)\n- uid: System.ServiceModel.Security.SecurityAlgorithmSuite.IsSymmetricKeyLengthSupported(System.Int32)\n  parent: System.ServiceModel.Security.SecurityAlgorithmSuite\n  isExternal: false\n  name: IsSymmetricKeyLengthSupported(Int32)\n  nameWithType: SecurityAlgorithmSuite.IsSymmetricKeyLengthSupported(Int32)\n  fullName: SecurityAlgorithmSuite.IsSymmetricKeyLengthSupported(Int32)\n- uid: System.ServiceModel.Security.SecurityAlgorithmSuite.IsSymmetricKeyWrapAlgorithmSupported(System.String)\n  parent: System.ServiceModel.Security.SecurityAlgorithmSuite\n  isExternal: false\n  name: IsSymmetricKeyWrapAlgorithmSupported(String)\n  nameWithType: SecurityAlgorithmSuite.IsSymmetricKeyWrapAlgorithmSupported(String)\n  fullName: SecurityAlgorithmSuite.IsSymmetricKeyWrapAlgorithmSupported(String)\n- uid: System.ServiceModel.Security.SecurityAlgorithmSuite.IsSymmetricSignatureAlgorithmSupported(System.String)\n  parent: System.ServiceModel.Security.SecurityAlgorithmSuite\n  isExternal: false\n  name: IsSymmetricSignatureAlgorithmSupported(String)\n  nameWithType: SecurityAlgorithmSuite.IsSymmetricSignatureAlgorithmSupported(String)\n  fullName: SecurityAlgorithmSuite.IsSymmetricSignatureAlgorithmSupported(String)\n- uid: System.ServiceModel.Security.SecurityAlgorithmSuite.TripleDes\n  parent: System.ServiceModel.Security.SecurityAlgorithmSuite\n  isExternal: false\n  name: TripleDes\n  nameWithType: SecurityAlgorithmSuite.TripleDes\n  fullName: SecurityAlgorithmSuite.TripleDes\n- uid: System.ServiceModel.Security.SecurityAlgorithmSuite.TripleDesRsa15\n  parent: System.ServiceModel.Security.SecurityAlgorithmSuite\n  isExternal: false\n  name: TripleDesRsa15\n  nameWithType: SecurityAlgorithmSuite.TripleDesRsa15\n  fullName: SecurityAlgorithmSuite.TripleDesRsa15\n- uid: System.ServiceModel.Security.SecurityAlgorithmSuite.TripleDesSha256\n  parent: System.ServiceModel.Security.SecurityAlgorithmSuite\n  isExternal: false\n  name: TripleDesSha256\n  nameWithType: SecurityAlgorithmSuite.TripleDesSha256\n  fullName: SecurityAlgorithmSuite.TripleDesSha256\n- uid: System.ServiceModel.Security.SecurityAlgorithmSuite.TripleDesSha256Rsa15\n  parent: System.ServiceModel.Security.SecurityAlgorithmSuite\n  isExternal: false\n  name: TripleDesSha256Rsa15\n  nameWithType: SecurityAlgorithmSuite.TripleDesSha256Rsa15\n  fullName: SecurityAlgorithmSuite.TripleDesSha256Rsa15\n- uid: System.ServiceModel.Security.SecurityAlgorithmSuite.#ctor*\n  parent: System.ServiceModel.Security.SecurityAlgorithmSuite\n  isExternal: false\n  name: SecurityAlgorithmSuite\n  nameWithType: SecurityAlgorithmSuite.SecurityAlgorithmSuite\n  fullName: SecurityAlgorithmSuite.SecurityAlgorithmSuite\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - xamarinmac-3.0\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.ServiceModel.Security/SecurityAlgorithmSuite.xml\n- uid: System.ServiceModel.Security.SecurityAlgorithmSuite.Basic128*\n  parent: System.ServiceModel.Security.SecurityAlgorithmSuite\n  isExternal: false\n  name: Basic128\n  nameWithType: SecurityAlgorithmSuite.Basic128\n  fullName: SecurityAlgorithmSuite.Basic128\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - xamarinmac-3.0\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.ServiceModel.Security/SecurityAlgorithmSuite.xml\n- uid: System.ServiceModel.Security.SecurityAlgorithmSuite.Basic128Rsa15*\n  parent: System.ServiceModel.Security.SecurityAlgorithmSuite\n  isExternal: false\n  name: Basic128Rsa15\n  nameWithType: SecurityAlgorithmSuite.Basic128Rsa15\n  fullName: SecurityAlgorithmSuite.Basic128Rsa15\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - xamarinmac-3.0\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.ServiceModel.Security/SecurityAlgorithmSuite.xml\n- uid: System.ServiceModel.Security.SecurityAlgorithmSuite.Basic128Sha256*\n  parent: System.ServiceModel.Security.SecurityAlgorithmSuite\n  isExternal: false\n  name: Basic128Sha256\n  nameWithType: SecurityAlgorithmSuite.Basic128Sha256\n  fullName: SecurityAlgorithmSuite.Basic128Sha256\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - xamarinmac-3.0\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.ServiceModel.Security/SecurityAlgorithmSuite.xml\n- uid: System.ServiceModel.Security.SecurityAlgorithmSuite.Basic128Sha256Rsa15*\n  parent: System.ServiceModel.Security.SecurityAlgorithmSuite\n  isExternal: false\n  name: Basic128Sha256Rsa15\n  nameWithType: SecurityAlgorithmSuite.Basic128Sha256Rsa15\n  fullName: SecurityAlgorithmSuite.Basic128Sha256Rsa15\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - xamarinmac-3.0\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.ServiceModel.Security/SecurityAlgorithmSuite.xml\n- uid: System.ServiceModel.Security.SecurityAlgorithmSuite.Basic192*\n  parent: System.ServiceModel.Security.SecurityAlgorithmSuite\n  isExternal: false\n  name: Basic192\n  nameWithType: SecurityAlgorithmSuite.Basic192\n  fullName: SecurityAlgorithmSuite.Basic192\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - xamarinmac-3.0\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.ServiceModel.Security/SecurityAlgorithmSuite.xml\n- uid: System.ServiceModel.Security.SecurityAlgorithmSuite.Basic192Rsa15*\n  parent: System.ServiceModel.Security.SecurityAlgorithmSuite\n  isExternal: false\n  name: Basic192Rsa15\n  nameWithType: SecurityAlgorithmSuite.Basic192Rsa15\n  fullName: SecurityAlgorithmSuite.Basic192Rsa15\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - xamarinmac-3.0\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.ServiceModel.Security/SecurityAlgorithmSuite.xml\n- uid: System.ServiceModel.Security.SecurityAlgorithmSuite.Basic192Sha256*\n  parent: System.ServiceModel.Security.SecurityAlgorithmSuite\n  isExternal: false\n  name: Basic192Sha256\n  nameWithType: SecurityAlgorithmSuite.Basic192Sha256\n  fullName: SecurityAlgorithmSuite.Basic192Sha256\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - xamarinmac-3.0\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.ServiceModel.Security/SecurityAlgorithmSuite.xml\n- uid: System.ServiceModel.Security.SecurityAlgorithmSuite.Basic192Sha256Rsa15*\n  parent: System.ServiceModel.Security.SecurityAlgorithmSuite\n  isExternal: false\n  name: Basic192Sha256Rsa15\n  nameWithType: SecurityAlgorithmSuite.Basic192Sha256Rsa15\n  fullName: SecurityAlgorithmSuite.Basic192Sha256Rsa15\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - xamarinmac-3.0\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.ServiceModel.Security/SecurityAlgorithmSuite.xml\n- uid: System.ServiceModel.Security.SecurityAlgorithmSuite.Basic256*\n  parent: System.ServiceModel.Security.SecurityAlgorithmSuite\n  isExternal: false\n  name: Basic256\n  nameWithType: SecurityAlgorithmSuite.Basic256\n  fullName: SecurityAlgorithmSuite.Basic256\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - xamarinmac-3.0\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.ServiceModel.Security/SecurityAlgorithmSuite.xml\n- uid: System.ServiceModel.Security.SecurityAlgorithmSuite.Basic256Rsa15*\n  parent: System.ServiceModel.Security.SecurityAlgorithmSuite\n  isExternal: false\n  name: Basic256Rsa15\n  nameWithType: SecurityAlgorithmSuite.Basic256Rsa15\n  fullName: SecurityAlgorithmSuite.Basic256Rsa15\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - xamarinmac-3.0\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.ServiceModel.Security/SecurityAlgorithmSuite.xml\n- uid: System.ServiceModel.Security.SecurityAlgorithmSuite.Basic256Sha256*\n  parent: System.ServiceModel.Security.SecurityAlgorithmSuite\n  isExternal: false\n  name: Basic256Sha256\n  nameWithType: SecurityAlgorithmSuite.Basic256Sha256\n  fullName: SecurityAlgorithmSuite.Basic256Sha256\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - xamarinmac-3.0\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.ServiceModel.Security/SecurityAlgorithmSuite.xml\n- uid: System.ServiceModel.Security.SecurityAlgorithmSuite.Basic256Sha256Rsa15*\n  parent: System.ServiceModel.Security.SecurityAlgorithmSuite\n  isExternal: false\n  name: Basic256Sha256Rsa15\n  nameWithType: SecurityAlgorithmSuite.Basic256Sha256Rsa15\n  fullName: SecurityAlgorithmSuite.Basic256Sha256Rsa15\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - xamarinmac-3.0\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.ServiceModel.Security/SecurityAlgorithmSuite.xml\n- uid: System.ServiceModel.Security.SecurityAlgorithmSuite.Default*\n  parent: System.ServiceModel.Security.SecurityAlgorithmSuite\n  isExternal: false\n  name: Default\n  nameWithType: SecurityAlgorithmSuite.Default\n  fullName: SecurityAlgorithmSuite.Default\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - xamarinmac-3.0\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.ServiceModel.Security/SecurityAlgorithmSuite.xml\n- uid: System.ServiceModel.Security.SecurityAlgorithmSuite.DefaultAsymmetricKeyWrapAlgorithm*\n  parent: System.ServiceModel.Security.SecurityAlgorithmSuite\n  isExternal: false\n  name: DefaultAsymmetricKeyWrapAlgorithm\n  nameWithType: SecurityAlgorithmSuite.DefaultAsymmetricKeyWrapAlgorithm\n  fullName: SecurityAlgorithmSuite.DefaultAsymmetricKeyWrapAlgorithm\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - xamarinmac-3.0\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.ServiceModel.Security/SecurityAlgorithmSuite.xml\n- uid: System.ServiceModel.Security.SecurityAlgorithmSuite.DefaultAsymmetricSignatureAlgorithm*\n  parent: System.ServiceModel.Security.SecurityAlgorithmSuite\n  isExternal: false\n  name: DefaultAsymmetricSignatureAlgorithm\n  nameWithType: SecurityAlgorithmSuite.DefaultAsymmetricSignatureAlgorithm\n  fullName: SecurityAlgorithmSuite.DefaultAsymmetricSignatureAlgorithm\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - xamarinmac-3.0\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.ServiceModel.Security/SecurityAlgorithmSuite.xml\n- uid: System.ServiceModel.Security.SecurityAlgorithmSuite.DefaultCanonicalizationAlgorithm*\n  parent: System.ServiceModel.Security.SecurityAlgorithmSuite\n  isExternal: false\n  name: DefaultCanonicalizationAlgorithm\n  nameWithType: SecurityAlgorithmSuite.DefaultCanonicalizationAlgorithm\n  fullName: SecurityAlgorithmSuite.DefaultCanonicalizationAlgorithm\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - xamarinmac-3.0\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.ServiceModel.Security/SecurityAlgorithmSuite.xml\n- uid: System.ServiceModel.Security.SecurityAlgorithmSuite.DefaultDigestAlgorithm*\n  parent: System.ServiceModel.Security.SecurityAlgorithmSuite\n  isExternal: false\n  name: DefaultDigestAlgorithm\n  nameWithType: SecurityAlgorithmSuite.DefaultDigestAlgorithm\n  fullName: SecurityAlgorithmSuite.DefaultDigestAlgorithm\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - xamarinmac-3.0\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.ServiceModel.Security/SecurityAlgorithmSuite.xml\n- uid: System.ServiceModel.Security.SecurityAlgorithmSuite.DefaultEncryptionAlgorithm*\n  parent: System.ServiceModel.Security.SecurityAlgorithmSuite\n  isExternal: false\n  name: DefaultEncryptionAlgorithm\n  nameWithType: SecurityAlgorithmSuite.DefaultEncryptionAlgorithm\n  fullName: SecurityAlgorithmSuite.DefaultEncryptionAlgorithm\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - xamarinmac-3.0\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.ServiceModel.Security/SecurityAlgorithmSuite.xml\n- uid: System.ServiceModel.Security.SecurityAlgorithmSuite.DefaultEncryptionKeyDerivationLength*\n  parent: System.ServiceModel.Security.SecurityAlgorithmSuite\n  isExternal: false\n  name: DefaultEncryptionKeyDerivationLength\n  nameWithType: SecurityAlgorithmSuite.DefaultEncryptionKeyDerivationLength\n  fullName: SecurityAlgorithmSuite.DefaultEncryptionKeyDerivationLength\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - xamarinmac-3.0\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.ServiceModel.Security/SecurityAlgorithmSuite.xml\n- uid: System.ServiceModel.Security.SecurityAlgorithmSuite.DefaultSignatureKeyDerivationLength*\n  parent: System.ServiceModel.Security.SecurityAlgorithmSuite\n  isExternal: false\n  name: DefaultSignatureKeyDerivationLength\n  nameWithType: SecurityAlgorithmSuite.DefaultSignatureKeyDerivationLength\n  fullName: SecurityAlgorithmSuite.DefaultSignatureKeyDerivationLength\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - xamarinmac-3.0\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.ServiceModel.Security/SecurityAlgorithmSuite.xml\n- uid: System.ServiceModel.Security.SecurityAlgorithmSuite.DefaultSymmetricKeyLength*\n  parent: System.ServiceModel.Security.SecurityAlgorithmSuite\n  isExternal: false\n  name: DefaultSymmetricKeyLength\n  nameWithType: SecurityAlgorithmSuite.DefaultSymmetricKeyLength\n  fullName: SecurityAlgorithmSuite.DefaultSymmetricKeyLength\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - xamarinmac-3.0\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.ServiceModel.Security/SecurityAlgorithmSuite.xml\n- uid: System.ServiceModel.Security.SecurityAlgorithmSuite.DefaultSymmetricKeyWrapAlgorithm*\n  parent: System.ServiceModel.Security.SecurityAlgorithmSuite\n  isExternal: false\n  name: DefaultSymmetricKeyWrapAlgorithm\n  nameWithType: SecurityAlgorithmSuite.DefaultSymmetricKeyWrapAlgorithm\n  fullName: SecurityAlgorithmSuite.DefaultSymmetricKeyWrapAlgorithm\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - xamarinmac-3.0\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.ServiceModel.Security/SecurityAlgorithmSuite.xml\n- uid: System.ServiceModel.Security.SecurityAlgorithmSuite.DefaultSymmetricSignatureAlgorithm*\n  parent: System.ServiceModel.Security.SecurityAlgorithmSuite\n  isExternal: false\n  name: DefaultSymmetricSignatureAlgorithm\n  nameWithType: SecurityAlgorithmSuite.DefaultSymmetricSignatureAlgorithm\n  fullName: SecurityAlgorithmSuite.DefaultSymmetricSignatureAlgorithm\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - xamarinmac-3.0\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.ServiceModel.Security/SecurityAlgorithmSuite.xml\n- uid: System.ServiceModel.Security.SecurityAlgorithmSuite.IsAsymmetricKeyLengthSupported*\n  parent: System.ServiceModel.Security.SecurityAlgorithmSuite\n  isExternal: false\n  name: IsAsymmetricKeyLengthSupported\n  nameWithType: SecurityAlgorithmSuite.IsAsymmetricKeyLengthSupported\n  fullName: SecurityAlgorithmSuite.IsAsymmetricKeyLengthSupported\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - xamarinmac-3.0\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.ServiceModel.Security/SecurityAlgorithmSuite.xml\n- uid: System.ServiceModel.Security.SecurityAlgorithmSuite.IsAsymmetricKeyWrapAlgorithmSupported*\n  parent: System.ServiceModel.Security.SecurityAlgorithmSuite\n  isExternal: false\n  name: IsAsymmetricKeyWrapAlgorithmSupported\n  nameWithType: SecurityAlgorithmSuite.IsAsymmetricKeyWrapAlgorithmSupported\n  fullName: SecurityAlgorithmSuite.IsAsymmetricKeyWrapAlgorithmSupported\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - xamarinmac-3.0\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.ServiceModel.Security/SecurityAlgorithmSuite.xml\n- uid: System.ServiceModel.Security.SecurityAlgorithmSuite.IsAsymmetricSignatureAlgorithmSupported*\n  parent: System.ServiceModel.Security.SecurityAlgorithmSuite\n  isExternal: false\n  name: IsAsymmetricSignatureAlgorithmSupported\n  nameWithType: SecurityAlgorithmSuite.IsAsymmetricSignatureAlgorithmSupported\n  fullName: SecurityAlgorithmSuite.IsAsymmetricSignatureAlgorithmSupported\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - xamarinmac-3.0\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.ServiceModel.Security/SecurityAlgorithmSuite.xml\n- uid: System.ServiceModel.Security.SecurityAlgorithmSuite.IsCanonicalizationAlgorithmSupported*\n  parent: System.ServiceModel.Security.SecurityAlgorithmSuite\n  isExternal: false\n  name: IsCanonicalizationAlgorithmSupported\n  nameWithType: SecurityAlgorithmSuite.IsCanonicalizationAlgorithmSupported\n  fullName: SecurityAlgorithmSuite.IsCanonicalizationAlgorithmSupported\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - xamarinmac-3.0\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.ServiceModel.Security/SecurityAlgorithmSuite.xml\n- uid: System.ServiceModel.Security.SecurityAlgorithmSuite.IsDigestAlgorithmSupported*\n  parent: System.ServiceModel.Security.SecurityAlgorithmSuite\n  isExternal: false\n  name: IsDigestAlgorithmSupported\n  nameWithType: SecurityAlgorithmSuite.IsDigestAlgorithmSupported\n  fullName: SecurityAlgorithmSuite.IsDigestAlgorithmSupported\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - xamarinmac-3.0\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.ServiceModel.Security/SecurityAlgorithmSuite.xml\n- uid: System.ServiceModel.Security.SecurityAlgorithmSuite.IsEncryptionAlgorithmSupported*\n  parent: System.ServiceModel.Security.SecurityAlgorithmSuite\n  isExternal: false\n  name: IsEncryptionAlgorithmSupported\n  nameWithType: SecurityAlgorithmSuite.IsEncryptionAlgorithmSupported\n  fullName: SecurityAlgorithmSuite.IsEncryptionAlgorithmSupported\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - xamarinmac-3.0\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.ServiceModel.Security/SecurityAlgorithmSuite.xml\n- uid: System.ServiceModel.Security.SecurityAlgorithmSuite.IsEncryptionKeyDerivationAlgorithmSupported*\n  parent: System.ServiceModel.Security.SecurityAlgorithmSuite\n  isExternal: false\n  name: IsEncryptionKeyDerivationAlgorithmSupported\n  nameWithType: SecurityAlgorithmSuite.IsEncryptionKeyDerivationAlgorithmSupported\n  fullName: SecurityAlgorithmSuite.IsEncryptionKeyDerivationAlgorithmSupported\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - xamarinmac-3.0\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.ServiceModel.Security/SecurityAlgorithmSuite.xml\n- uid: System.ServiceModel.Security.SecurityAlgorithmSuite.IsSignatureKeyDerivationAlgorithmSupported*\n  parent: System.ServiceModel.Security.SecurityAlgorithmSuite\n  isExternal: false\n  name: IsSignatureKeyDerivationAlgorithmSupported\n  nameWithType: SecurityAlgorithmSuite.IsSignatureKeyDerivationAlgorithmSupported\n  fullName: SecurityAlgorithmSuite.IsSignatureKeyDerivationAlgorithmSupported\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - xamarinmac-3.0\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.ServiceModel.Security/SecurityAlgorithmSuite.xml\n- uid: System.ServiceModel.Security.SecurityAlgorithmSuite.IsSymmetricKeyLengthSupported*\n  parent: System.ServiceModel.Security.SecurityAlgorithmSuite\n  isExternal: false\n  name: IsSymmetricKeyLengthSupported\n  nameWithType: SecurityAlgorithmSuite.IsSymmetricKeyLengthSupported\n  fullName: SecurityAlgorithmSuite.IsSymmetricKeyLengthSupported\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - xamarinmac-3.0\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.ServiceModel.Security/SecurityAlgorithmSuite.xml\n- uid: System.ServiceModel.Security.SecurityAlgorithmSuite.IsSymmetricKeyWrapAlgorithmSupported*\n  parent: System.ServiceModel.Security.SecurityAlgorithmSuite\n  isExternal: false\n  name: IsSymmetricKeyWrapAlgorithmSupported\n  nameWithType: SecurityAlgorithmSuite.IsSymmetricKeyWrapAlgorithmSupported\n  fullName: SecurityAlgorithmSuite.IsSymmetricKeyWrapAlgorithmSupported\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - xamarinmac-3.0\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.ServiceModel.Security/SecurityAlgorithmSuite.xml\n- uid: System.ServiceModel.Security.SecurityAlgorithmSuite.IsSymmetricSignatureAlgorithmSupported*\n  parent: System.ServiceModel.Security.SecurityAlgorithmSuite\n  isExternal: false\n  name: IsSymmetricSignatureAlgorithmSupported\n  nameWithType: SecurityAlgorithmSuite.IsSymmetricSignatureAlgorithmSupported\n  fullName: SecurityAlgorithmSuite.IsSymmetricSignatureAlgorithmSupported\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - xamarinmac-3.0\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.ServiceModel.Security/SecurityAlgorithmSuite.xml\n- uid: System.ServiceModel.Security.SecurityAlgorithmSuite.TripleDes*\n  parent: System.ServiceModel.Security.SecurityAlgorithmSuite\n  isExternal: false\n  name: TripleDes\n  nameWithType: SecurityAlgorithmSuite.TripleDes\n  fullName: SecurityAlgorithmSuite.TripleDes\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - xamarinmac-3.0\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.ServiceModel.Security/SecurityAlgorithmSuite.xml\n- uid: System.ServiceModel.Security.SecurityAlgorithmSuite.TripleDesRsa15*\n  parent: System.ServiceModel.Security.SecurityAlgorithmSuite\n  isExternal: false\n  name: TripleDesRsa15\n  nameWithType: SecurityAlgorithmSuite.TripleDesRsa15\n  fullName: SecurityAlgorithmSuite.TripleDesRsa15\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - xamarinmac-3.0\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.ServiceModel.Security/SecurityAlgorithmSuite.xml\n- uid: System.ServiceModel.Security.SecurityAlgorithmSuite.TripleDesSha256*\n  parent: System.ServiceModel.Security.SecurityAlgorithmSuite\n  isExternal: false\n  name: TripleDesSha256\n  nameWithType: SecurityAlgorithmSuite.TripleDesSha256\n  fullName: SecurityAlgorithmSuite.TripleDesSha256\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - xamarinmac-3.0\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.ServiceModel.Security/SecurityAlgorithmSuite.xml\n- uid: System.ServiceModel.Security.SecurityAlgorithmSuite.TripleDesSha256Rsa15*\n  parent: System.ServiceModel.Security.SecurityAlgorithmSuite\n  isExternal: false\n  name: TripleDesSha256Rsa15\n  nameWithType: SecurityAlgorithmSuite.TripleDesSha256Rsa15\n  fullName: SecurityAlgorithmSuite.TripleDesSha256Rsa15\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - xamarinmac-3.0\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.ServiceModel.Security/SecurityAlgorithmSuite.xml\n- uid: System.Object.Equals(System.Object)\n  parent: System.Object\n  isExternal: false\n  name: Equals(Object)\n  nameWithType: Object.Equals(Object)\n  fullName: Object.Equals(Object)\n- uid: System.Object.Equals(System.Object,System.Object)\n  parent: System.Object\n  isExternal: false\n  name: Equals(Object, Object)\n  nameWithType: Object.Equals(Object, Object)\n  fullName: Object.Equals(Object, Object)\n- uid: System.Object.GetHashCode\n  parent: System.Object\n  isExternal: false\n  name: GetHashCode()\n  nameWithType: Object.GetHashCode()\n  fullName: Object.GetHashCode()\n- uid: System.Object.GetType\n  parent: System.Object\n  isExternal: false\n  name: GetType()\n  nameWithType: Object.GetType()\n  fullName: Object.GetType()\n- uid: System.Object.MemberwiseClone\n  parent: System.Object\n  isExternal: false\n  name: MemberwiseClone()\n  nameWithType: Object.MemberwiseClone()\n  fullName: Object.MemberwiseClone()\n- uid: System.Object.ReferenceEquals(System.Object,System.Object)\n  parent: System.Object\n  isExternal: false\n  name: ReferenceEquals(Object, Object)\n  nameWithType: Object.ReferenceEquals(Object, Object)\n  fullName: Object.ReferenceEquals(Object, Object)\n- uid: System.Object.ToString\n  parent: System.Object\n  isExternal: false\n  name: ToString()\n  nameWithType: Object.ToString()\n  fullName: Object.ToString()\n"}