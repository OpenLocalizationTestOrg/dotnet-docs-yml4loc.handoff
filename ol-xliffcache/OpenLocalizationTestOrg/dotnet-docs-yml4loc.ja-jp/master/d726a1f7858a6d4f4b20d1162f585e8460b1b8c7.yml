### YamlMime:ManagedReference
items:
- uid: System.IO.FileLoadException
  commentId: T:System.IO.FileLoadException
  id: FileLoadException
  children:
  - System.IO.FileLoadException.#ctor
  - System.IO.FileLoadException.#ctor(System.String)
  - System.IO.FileLoadException.#ctor(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)
  - System.IO.FileLoadException.#ctor(System.String,System.Exception)
  - System.IO.FileLoadException.#ctor(System.String,System.String)
  - System.IO.FileLoadException.#ctor(System.String,System.String,System.Exception)
  - System.IO.FileLoadException.FileName
  - System.IO.FileLoadException.FusionLog
  - System.IO.FileLoadException.GetObjectData(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)
  - System.IO.FileLoadException.Message
  - System.IO.FileLoadException.ToString
  langs:
  - csharp
  name: FileLoadException
  nameWithType: FileLoadException
  fullName: System.IO.FileLoadException
  type: Class
  assemblies:
  - System.Runtime
  - mscorlib
  - netstandard
  namespace: System.IO
  summary: The exception that is thrown when a managed assembly is found but cannot be loaded.
  remarks: "Represents the error that occurs when a <xref:System.Reflection.Assembly> file is found but cannot be loaded.  \n  \n The <xref:System.IO.FileNotFoundException> exception is thrown when the file fails to load because it cannot be located. If the file is located, but cannot be loaded due to insufficient permissions, a <xref:System.Security.SecurityException> is thrown.  \n  \n `FileLoadException` has the default HRESULT of COR_E_FILELOAD, which has the value 0x80131621, but this is not the only possible HRESULT.  \n  \n If your code does not have <xref:System.Security.Permissions.FileIOPermissionAttribute.PathDiscovery%2A> permission, the error message for this exception may only contain file or directory names instead of fully qualified paths.  \n  \n> [!NOTE]\n>  This exception is not included in the [.NET for Windows Store apps](http://go.microsoft.com/fwlink/?LinkID=247912) or the , but it is thrown by some members that are. To catch the exception in that case, write a `catch` statement for <xref:System.IO.IOException> instead.  \n  \n **Associated Tips**  \n  \n **Make sure that the file is a valid .NET Framework assembly.**  \n This exception is thrown if the file is not a valid .NET Framework assembly. For more information, see <xref:System.Reflection.Assembly>.  \n  \n **Check to make sure an assembly or module was not loaded twice with two different evidences.**  \n Evidence is the set of information that constitutes input to security policy decisions, such as what permissions can be granted to code. For more information, see <xref:System.EnterpriseServices.Internal.Publish.GacRemove%2A> and <xref:System.Reflection.Assembly.Evidence%2A>  \n  \n **If using the RegisterAssembly or UnregisterAssembly methods, check to make sure the assembly name is not longer than MAX_PATH characters.**  \n The assembly name's length cannot exceed MAX_PATH. For more information, see <xref:System.EnterpriseServices.Internal.IComSoapPublisher.RegisterAssembly%2A> and <xref:System.EnterpriseServices.Internal.IComSoapPublisher.UnRegisterAssembly%2A>.  \n  \n **If loading a satellite assembly, make sure the specified CultureInfo matches the file's CultureInfo.**  \n Satellite assemblies contain localized resources which contain non-localizable executable code and resources for a single culture that serve as the default or neutral culture. For more information, see <xref:System.Reflection.Assembly.GetSatelliteAssembly%2A>."
  syntax:
    content: >-
      [System.Runtime.InteropServices.ComVisible(true)]

      public class FileLoadException : System.IO.IOException
  inheritance:
  - System.Object
  - System.Exception
  - System.IO.IOException
  implements: []
  inheritedMembers:
  - System.Exception.Data
  - System.Exception.GetBaseException
  - System.Exception.GetType
  - System.Exception.HelpLink
  - System.Exception.HResult
  - System.Exception.InnerException
  - System.Exception.SerializeObjectState
  - System.Exception.Source
  - System.Exception.StackTrace
  - System.Exception.TargetSite
  - System.Object.Equals(System.Object)
  - System.Object.Equals(System.Object,System.Object)
  - System.Object.GetHashCode
  - System.Object.MemberwiseClone
  - System.Object.ReferenceEquals(System.Object,System.Object)
  attributes:
  - type: System.Runtime.InteropServices.ComVisibleAttribute
  version:
  - netcore-1.0
  - netcore-1.1
  - netcore-2.0
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  - netstandard-1.3
  - netstandard-1.4
  - netstandard-1.5
  - netstandard-1.6
  - netstandard-2.0
  - xamarinandroid-7.1
  - xamarinios-10.8
  - xamarinmac-3.0
  monikers:
  - netcore-1.0
  - netcore-1.1
  - netcore-2.0
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  - netstandard-1.3
  - netstandard-1.4
  - netstandard-1.5
  - netstandard-1.6
  - netstandard-2.0
  - xamarinandroid-7.1
  - xamarinios-10.8
  - xamarinmac-3.0
  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.IO/FileLoadException.xml
  ms.technology:
  - dotnet-standard
  author: mairaw
  ms.author: mairaw
  manager: wpickett
- uid: System.IO.FileLoadException.#ctor
  commentId: M:System.IO.FileLoadException.#ctor
  id: '#ctor'
  parent: System.IO.FileLoadException
  langs:
  - csharp
  name: FileLoadException()
  nameWithType: FileLoadException.FileLoadException()
  fullName: FileLoadException.FileLoadException()
  type: Constructor
  assemblies:
  - System.Runtime
  - mscorlib
  - netstandard
  namespace: System.IO
  summary: Initializes a new instance of the <xref href="System.IO.FileLoadException"></xref> class, setting the <xref href="System.Exception.Message"></xref> property of the new instance to a system-supplied message that describes the error, such as "Could not load the specified file." This message takes into account the current system culture.
  remarks: The <xref:System.Exception.InnerException%2A> property and <xref:System.IO.FileLoadException.FileName%2A> property of the new instance are initialized to `null`.
  syntax:
    content: public FileLoadException ();
    parameters: []
  overload: System.IO.FileLoadException.#ctor*
  exceptions: []
  version:
  - netcore-1.0
  - netcore-1.1
  - netcore-2.0
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  - netstandard-1.3
  - netstandard-1.4
  - netstandard-1.5
  - netstandard-1.6
  - netstandard-2.0
  - xamarinandroid-7.1
  - xamarinios-10.8
  - xamarinmac-3.0
  monikers:
  - netcore-1.0
  - netcore-1.1
  - netcore-2.0
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  - netstandard-1.3
  - netstandard-1.4
  - netstandard-1.5
  - netstandard-1.6
  - netstandard-2.0
  - xamarinandroid-7.1
  - xamarinios-10.8
  - xamarinmac-3.0
  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.IO/FileLoadException.xml
  ms.technology:
  - dotnet-standard
  author: mairaw
  ms.author: mairaw
  manager: wpickett
- uid: System.IO.FileLoadException.#ctor(System.String)
  commentId: M:System.IO.FileLoadException.#ctor(System.String)
  id: '#ctor(System.String)'
  parent: System.IO.FileLoadException
  langs:
  - csharp
  name: FileLoadException(String)
  nameWithType: FileLoadException.FileLoadException(String)
  fullName: FileLoadException.FileLoadException(String)
  type: Constructor
  assemblies:
  - System.Runtime
  - mscorlib
  - netstandard
  namespace: System.IO
  summary: Initializes a new instance of the <xref href="System.IO.FileLoadException"></xref> class with the specified error message.
  remarks: This constructor initializes the <xref:System.IO.FileLoadException.Message%2A> property of the new instance using `message`. The <xref:System.Exception.InnerException%2A> property and <xref:System.IO.FileLoadException.FileName%2A> property of the new instance are initialized to `null`.
  syntax:
    content: public FileLoadException (string message);
    parameters:
    - id: message
      type: System.String
      description: A <xref href="System.String"></xref> that describes the error. The content of <code>message</code> is intended to be understood by humans. The caller of this constructor is required to ensure that this string has been localized for the current system culture.
  overload: System.IO.FileLoadException.#ctor*
  exceptions: []
  version:
  - netcore-1.0
  - netcore-1.1
  - netcore-2.0
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  - netstandard-1.3
  - netstandard-1.4
  - netstandard-1.5
  - netstandard-1.6
  - netstandard-2.0
  - xamarinandroid-7.1
  - xamarinios-10.8
  - xamarinmac-3.0
  monikers:
  - netcore-1.0
  - netcore-1.1
  - netcore-2.0
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  - netstandard-1.3
  - netstandard-1.4
  - netstandard-1.5
  - netstandard-1.6
  - netstandard-2.0
  - xamarinandroid-7.1
  - xamarinios-10.8
  - xamarinmac-3.0
  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.IO/FileLoadException.xml
  ms.technology:
  - dotnet-standard
  author: mairaw
  ms.author: mairaw
  manager: wpickett
- uid: System.IO.FileLoadException.#ctor(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)
  commentId: M:System.IO.FileLoadException.#ctor(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)
  id: '#ctor(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)'
  parent: System.IO.FileLoadException
  langs:
  - csharp
  name: FileLoadException(SerializationInfo, StreamingContext)
  nameWithType: FileLoadException.FileLoadException(SerializationInfo, StreamingContext)
  fullName: FileLoadException.FileLoadException(SerializationInfo, StreamingContext)
  type: Constructor
  assemblies:
  - mscorlib
  - netstandard
  - System.Runtime
  namespace: System.IO
  summary: Initializes a new instance of the <xref href="System.IO.FileLoadException"></xref> class with serialized data.
  syntax:
    content: protected FileLoadException (System.Runtime.Serialization.SerializationInfo info, System.Runtime.Serialization.StreamingContext context);
    parameters:
    - id: info
      type: System.Runtime.Serialization.SerializationInfo
      description: The <xref href="System.Runtime.Serialization.SerializationInfo"></xref> that holds the serialized object data about the exception being thrown.
    - id: context
      type: System.Runtime.Serialization.StreamingContext
      description: The <xref href="System.Runtime.Serialization.StreamingContext"></xref> that contains contextual information about the source or destination.
  overload: System.IO.FileLoadException.#ctor*
  exceptions: []
  version:
  - netcore-2.0
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  - netstandard-2.0
  - xamarinandroid-7.1
  - xamarinios-10.8
  - xamarinmac-3.0
  monikers:
  - netcore-2.0
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  - netstandard-2.0
  - xamarinandroid-7.1
  - xamarinios-10.8
  - xamarinmac-3.0
  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.IO/FileLoadException.xml
  ms.technology:
  - dotnet-standard
  author: mairaw
  ms.author: mairaw
  manager: wpickett
- uid: System.IO.FileLoadException.#ctor(System.String,System.Exception)
  commentId: M:System.IO.FileLoadException.#ctor(System.String,System.Exception)
  id: '#ctor(System.String,System.Exception)'
  parent: System.IO.FileLoadException
  langs:
  - csharp
  name: FileLoadException(String, Exception)
  nameWithType: FileLoadException.FileLoadException(String, Exception)
  fullName: FileLoadException.FileLoadException(String, Exception)
  type: Constructor
  assemblies:
  - System.Runtime
  - mscorlib
  - netstandard
  namespace: System.IO
  summary: Initializes a new instance of the <xref href="System.IO.FileLoadException"></xref> class with a specified error message and a reference to the inner exception that is the cause of this exception.
  remarks: "An exception that is thrown as a direct result of a previous exception should include a reference to the previous exception in the <xref:System.Exception.InnerException%2A> property. The `InnerException` property returns the same value that is passed into the constructor, or `null` if the `InnerException` property does not supply the inner exception value to the constructor.  \n  \n The following table shows the initial property values for an instance of <xref:System.IO.FileLoadException>.  \n  \n|Property|Value|  \n|--------------|-----------|  \n|<xref:System.Exception.InnerException%2A>|The inner exception reference.|  \n|<xref:System.IO.FileLoadException.Message%2A>|The error message string.|  \n  \n For more information on inner exceptions, see <xref:System.Exception.InnerException%2A>."
  syntax:
    content: public FileLoadException (string message, Exception inner);
    parameters:
    - id: message
      type: System.String
      description: A <xref href="System.String"></xref> that describes the error. The content of <code>message</code> is intended to be understood by humans. The caller of this constructor is required to ensure that this string has been localized for the current system culture.
    - id: inner
      type: System.Exception
      description: The exception that is the cause of the current exception. If the <code>inner</code> parameter is not `null`, the current exception is raised in a `catch` block that handles the inner exception.
  overload: System.IO.FileLoadException.#ctor*
  exceptions: []
  version:
  - netcore-1.0
  - netcore-1.1
  - netcore-2.0
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  - netstandard-1.3
  - netstandard-1.4
  - netstandard-1.5
  - netstandard-1.6
  - netstandard-2.0
  - xamarinandroid-7.1
  - xamarinios-10.8
  - xamarinmac-3.0
  monikers:
  - netcore-1.0
  - netcore-1.1
  - netcore-2.0
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  - netstandard-1.3
  - netstandard-1.4
  - netstandard-1.5
  - netstandard-1.6
  - netstandard-2.0
  - xamarinandroid-7.1
  - xamarinios-10.8
  - xamarinmac-3.0
  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.IO/FileLoadException.xml
  ms.technology:
  - dotnet-standard
  author: mairaw
  ms.author: mairaw
  manager: wpickett
- uid: System.IO.FileLoadException.#ctor(System.String,System.String)
  commentId: M:System.IO.FileLoadException.#ctor(System.String,System.String)
  id: '#ctor(System.String,System.String)'
  parent: System.IO.FileLoadException
  langs:
  - csharp
  name: FileLoadException(String, String)
  nameWithType: FileLoadException.FileLoadException(String, String)
  fullName: FileLoadException.FileLoadException(String, String)
  type: Constructor
  assemblies:
  - System.Runtime
  - mscorlib
  - netstandard
  namespace: System.IO
  summary: Initializes a new instance of the <xref href="System.IO.FileLoadException"></xref> class with a specified error message and the name of the file that could not be loaded.
  remarks: "This constructor initializes the <xref:System.IO.FileLoadException.Message%2A> property of the new instance using `message` and the <xref:System.IO.FileLoadException.FileName%2A> property using `fileName`. The <xref:System.Exception.InnerException%2A> property of the new instance is initialized to `null`.  \n  \n <xref:System.IO.FileLoadException.FileName%2A> is not required to be a file stored on disk; it can be any part of a system that supports access to streams. For example, depending on the system, this class might be able to access a physical device."
  syntax:
    content: public FileLoadException (string message, string fileName);
    parameters:
    - id: message
      type: System.String
      description: A <xref href="System.String"></xref> that describes the error. The content of <code>message</code> is intended to be understood by humans. The caller of this constructor is required to ensure that this string has been localized for the current system culture.
    - id: fileName
      type: System.String
      description: A <xref href="System.String"></xref> containing the name of the file that was not loaded.
  overload: System.IO.FileLoadException.#ctor*
  exceptions: []
  version:
  - netcore-1.0
  - netcore-1.1
  - netcore-2.0
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  - netstandard-1.3
  - netstandard-1.4
  - netstandard-1.5
  - netstandard-1.6
  - netstandard-2.0
  - xamarinandroid-7.1
  - xamarinios-10.8
  - xamarinmac-3.0
  monikers:
  - netcore-1.0
  - netcore-1.1
  - netcore-2.0
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  - netstandard-1.3
  - netstandard-1.4
  - netstandard-1.5
  - netstandard-1.6
  - netstandard-2.0
  - xamarinandroid-7.1
  - xamarinios-10.8
  - xamarinmac-3.0
  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.IO/FileLoadException.xml
  ms.technology:
  - dotnet-standard
  author: mairaw
  ms.author: mairaw
  manager: wpickett
- uid: System.IO.FileLoadException.#ctor(System.String,System.String,System.Exception)
  commentId: M:System.IO.FileLoadException.#ctor(System.String,System.String,System.Exception)
  id: '#ctor(System.String,System.String,System.Exception)'
  parent: System.IO.FileLoadException
  langs:
  - csharp
  name: FileLoadException(String, String, Exception)
  nameWithType: FileLoadException.FileLoadException(String, String, Exception)
  fullName: FileLoadException.FileLoadException(String, String, Exception)
  type: Constructor
  assemblies:
  - System.Runtime
  - mscorlib
  - netstandard
  namespace: System.IO
  summary: Initializes a new instance of the <xref href="System.IO.FileLoadException"></xref> class with a specified error message, the name of the file that could not be loaded, and a reference to the inner exception that is the cause of this exception.
  remarks: "An exception that is thrown as a direct result of a previous exception should include a reference to the previous exception in the <xref:System.Exception.InnerException%2A> property. The `InnerException` property returns the same value that is passed into the constructor, or `null` if the `InnerException` property does not supply the inner exception value to the constructor.  \n  \n <xref:System.IO.FileLoadException.FileName%2A> is not required to be a file stored on disk; it can be any part of a system that supports access to streams. For example, depending on the system, this class might be able to access a physical device.  \n  \n The following table shows the initial property values for an instance of <xref:System.IO.FileLoadException>.  \n  \n|Property|Value|  \n|--------------|-----------|  \n|<xref:System.Exception.InnerException%2A>|The inner exception reference.|  \n|<xref:System.IO.FileLoadException.Message%2A>|The error message string.|  \n  \n For more information on inner exceptions, see <xref:System.Exception.InnerException%2A>."
  syntax:
    content: public FileLoadException (string message, string fileName, Exception inner);
    parameters:
    - id: message
      type: System.String
      description: A <xref href="System.String"></xref> that describes the error. The content of <code>message</code> is intended to be understood by humans. The caller of this constructor is required to ensure that this string has been localized for the current system culture.
    - id: fileName
      type: System.String
      description: A <xref href="System.String"></xref> containing the name of the file that was not loaded.
    - id: inner
      type: System.Exception
      description: The exception that is the cause of the current exception. If the <code>inner</code> parameter is not `null`, the current exception is raised in a `catch` block that handles the inner exception.
  overload: System.IO.FileLoadException.#ctor*
  exceptions: []
  version:
  - netcore-1.0
  - netcore-1.1
  - netcore-2.0
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  - netstandard-1.3
  - netstandard-1.4
  - netstandard-1.5
  - netstandard-1.6
  - netstandard-2.0
  - xamarinandroid-7.1
  - xamarinios-10.8
  - xamarinmac-3.0
  monikers:
  - netcore-1.0
  - netcore-1.1
  - netcore-2.0
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  - netstandard-1.3
  - netstandard-1.4
  - netstandard-1.5
  - netstandard-1.6
  - netstandard-2.0
  - xamarinandroid-7.1
  - xamarinios-10.8
  - xamarinmac-3.0
  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.IO/FileLoadException.xml
  ms.technology:
  - dotnet-standard
  author: mairaw
  ms.author: mairaw
  manager: wpickett
- uid: System.IO.FileLoadException.FileName
  commentId: P:System.IO.FileLoadException.FileName
  id: FileName
  parent: System.IO.FileLoadException
  langs:
  - csharp
  name: FileName
  nameWithType: FileLoadException.FileName
  fullName: FileLoadException.FileName
  type: Property
  assemblies:
  - System.Runtime
  - mscorlib
  - netstandard
  namespace: System.IO
  summary: Gets the name of the file that causes this exception.
  remarks: "This property returns the name of the file supplied to the constructor for the current instance, if any. If the file name was not specified or is a null reference, this property returns a null reference.  \n  \n This property is read-only."
  syntax:
    content: public string FileName { get; }
    return:
      type: System.String
      description: A <xref href="System.String"></xref> containing the name of the file with the invalid image, or a null reference if no file name was passed to the constructor for the current instance.
  overload: System.IO.FileLoadException.FileName*
  exceptions: []
  version:
  - netcore-1.0
  - netcore-1.1
  - netcore-2.0
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  - netstandard-1.3
  - netstandard-1.4
  - netstandard-1.5
  - netstandard-1.6
  - netstandard-2.0
  - xamarinandroid-7.1
  - xamarinios-10.8
  - xamarinmac-3.0
  monikers:
  - netcore-1.0
  - netcore-1.1
  - netcore-2.0
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  - netstandard-1.3
  - netstandard-1.4
  - netstandard-1.5
  - netstandard-1.6
  - netstandard-2.0
  - xamarinandroid-7.1
  - xamarinios-10.8
  - xamarinmac-3.0
  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.IO/FileLoadException.xml
  ms.technology:
  - dotnet-standard
  author: mairaw
  ms.author: mairaw
  manager: wpickett
- uid: System.IO.FileLoadException.FusionLog
  commentId: P:System.IO.FileLoadException.FusionLog
  id: FusionLog
  parent: System.IO.FileLoadException
  langs:
  - csharp
  name: FusionLog
  nameWithType: FileLoadException.FusionLog
  fullName: FileLoadException.FusionLog
  type: Property
  assemblies:
  - mscorlib
  - netstandard
  - System.Runtime
  namespace: System.IO
  summary: Gets the log file that describes why an assembly load failed.
  syntax:
    content: >-
      [get: System.Security.SecuritySafeCritical]

      public string FusionLog { get; }
    return:
      type: System.String
      description: A string containing errors reported by the assembly cache.
  overload: System.IO.FileLoadException.FusionLog*
  exceptions:
  - type: System.Security.SecurityException
    commentId: T:System.Security.SecurityException
    description: The caller does not have the required permission.
  attributes:
  - type: 'get: System.Security.SecuritySafeCritical'
  version:
  - netcore-2.0
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  - netstandard-2.0
  - xamarinandroid-7.1
  - xamarinios-10.8
  - xamarinmac-3.0
  monikers:
  - netcore-2.0
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  - netstandard-2.0
  - xamarinandroid-7.1
  - xamarinios-10.8
  - xamarinmac-3.0
  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.IO/FileLoadException.xml
  ms.technology:
  - dotnet-standard
  author: mairaw
  ms.author: mairaw
  manager: wpickett
- uid: System.IO.FileLoadException.GetObjectData(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)
  commentId: M:System.IO.FileLoadException.GetObjectData(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)
  id: GetObjectData(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)
  parent: System.IO.FileLoadException
  langs:
  - csharp
  name: GetObjectData(SerializationInfo, StreamingContext)
  nameWithType: FileLoadException.GetObjectData(SerializationInfo, StreamingContext)
  fullName: FileLoadException.GetObjectData(SerializationInfo, StreamingContext)
  type: Method
  assemblies:
  - mscorlib
  - netstandard
  - System.Runtime
  namespace: System.IO
  summary: Sets the <xref href="System.Runtime.Serialization.SerializationInfo"></xref> with the file name and additional exception information.
  syntax:
    content: >-
      [System.Security.SecurityCritical]

      public override void GetObjectData (System.Runtime.Serialization.SerializationInfo info, System.Runtime.Serialization.StreamingContext context);
    parameters:
    - id: info
      type: System.Runtime.Serialization.SerializationInfo
      description: The <xref href="System.Runtime.Serialization.SerializationInfo"></xref> that holds the serialized object data about the exception being thrown.
    - id: context
      type: System.Runtime.Serialization.StreamingContext
      description: The <xref href="System.Runtime.Serialization.StreamingContext"></xref> that contains contextual information about the source or destination.
  overload: System.IO.FileLoadException.GetObjectData*
  exceptions:
  - type: System.Security.SecurityException
    commentId: T:System.Security.SecurityException
    description: The caller does not have the required permission.
  attributes:
  - type: System.Security.SecurityCriticalAttribute
  version:
  - netcore-2.0
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  - netstandard-2.0
  - xamarinandroid-7.1
  - xamarinios-10.8
  - xamarinmac-3.0
  monikers:
  - netcore-2.0
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  - netstandard-2.0
  - xamarinandroid-7.1
  - xamarinios-10.8
  - xamarinmac-3.0
  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.IO/FileLoadException.xml
  ms.technology:
  - dotnet-standard
  author: mairaw
  ms.author: mairaw
  manager: wpickett
- uid: System.IO.FileLoadException.Message
  commentId: P:System.IO.FileLoadException.Message
  id: Message
  parent: System.IO.FileLoadException
  langs:
  - csharp
  name: Message
  nameWithType: FileLoadException.Message
  fullName: FileLoadException.Message
  type: Property
  assemblies:
  - System.Runtime
  - mscorlib
  - netstandard
  namespace: System.IO
  summary: Gets the error message and the name of the file that caused this exception.
  remarks: "This property overrides <xref:System.Exception.Message%2A>.  \n  \n If no message was supplied to the constructor for the current exception, this property returns a system-supplied error message. If the <xref:System.IO.FileLoadException.FileName%2A> property is not a null reference, the message includes the file name, for example, \"Unable to load file a `FileName`.\" (a `FileName` represents the value returned by <xref:System.IO.FileLoadException.FileName%2A>.) If <xref:System.IO.FileLoadException.FileName%2A> is `null`, this is indicated in the system-supplied message as \"(null)\". The system-supplied message takes into account the current system culture.  \n  \n This property is read-only."
  syntax:
    content: public override string Message { get; }
    return:
      type: System.String
      description: A string containing the error message and the name of the file that caused this exception.
  overload: System.IO.FileLoadException.Message*
  exceptions: []
  version:
  - netcore-1.0
  - netcore-1.1
  - netcore-2.0
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  - netstandard-1.3
  - netstandard-1.4
  - netstandard-1.5
  - netstandard-1.6
  - netstandard-2.0
  - xamarinandroid-7.1
  - xamarinios-10.8
  - xamarinmac-3.0
  monikers:
  - netcore-1.0
  - netcore-1.1
  - netcore-2.0
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  - netstandard-1.3
  - netstandard-1.4
  - netstandard-1.5
  - netstandard-1.6
  - netstandard-2.0
  - xamarinandroid-7.1
  - xamarinios-10.8
  - xamarinmac-3.0
  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.IO/FileLoadException.xml
  ms.technology:
  - dotnet-standard
  author: mairaw
  ms.author: mairaw
  manager: wpickett
- uid: System.IO.FileLoadException.ToString
  commentId: M:System.IO.FileLoadException.ToString
  id: ToString
  parent: System.IO.FileLoadException
  langs:
  - csharp
  name: ToString()
  nameWithType: FileLoadException.ToString()
  fullName: FileLoadException.ToString()
  type: Method
  assemblies:
  - System.Runtime
  - mscorlib
  - netstandard
  namespace: System.IO
  summary: Returns the fully qualified name of the current exception, and possibly the error message, the name of the inner exception, and the stack trace.
  remarks: "This method overrides <xref:System.Object.ToString%2A>.  \n  \n The string representation returned by this method includes the name of the exception, the value of the <xref:System.IO.FileLoadException.Message%2A> the value of the <xref:System.IO.FileLoadException.FileName%2A> property, and the result of calling <xref:System.Environment.StackTrace%2A>. If any of these members is a null reference, its value is not included in the returned string."
  syntax:
    content: public override string ToString ();
    parameters: []
    return:
      type: System.String
      description: A string containing the fully qualified name of this exception, and possibly the error message, the name of the inner exception, and the stack trace, depending on which <xref href="System.IO.FileLoadException"></xref> constructor is used.
  overload: System.IO.FileLoadException.ToString*
  exceptions: []
  version:
  - netcore-1.0
  - netcore-1.1
  - netcore-2.0
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  - netstandard-1.3
  - netstandard-1.4
  - netstandard-1.5
  - netstandard-1.6
  - netstandard-2.0
  - xamarinandroid-7.1
  - xamarinios-10.8
  - xamarinmac-3.0
  monikers:
  - netcore-1.0
  - netcore-1.1
  - netcore-2.0
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  - netstandard-1.3
  - netstandard-1.4
  - netstandard-1.5
  - netstandard-1.6
  - netstandard-2.0
  - xamarinandroid-7.1
  - xamarinios-10.8
  - xamarinmac-3.0
  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.IO/FileLoadException.xml
  ms.technology:
  - dotnet-standard
  author: mairaw
  ms.author: mairaw
  manager: wpickett
references:
- uid: System.IO.IOException
  parent: System.IO
  isExternal: false
  name: IOException
  nameWithType: IOException
  fullName: System.IO.IOException
- uid: System.Security.SecurityException
  parent: System.Security
  isExternal: false
  name: SecurityException
  nameWithType: SecurityException
  fullName: System.Security.SecurityException
- uid: System.IO.FileLoadException.#ctor
  parent: System.IO.FileLoadException
  isExternal: false
  name: FileLoadException()
  nameWithType: FileLoadException.FileLoadException()
  fullName: FileLoadException.FileLoadException()
- uid: System.IO.FileLoadException.#ctor(System.String)
  parent: System.IO.FileLoadException
  isExternal: false
  name: FileLoadException(String)
  nameWithType: FileLoadException.FileLoadException(String)
  fullName: FileLoadException.FileLoadException(String)
- uid: System.String
  parent: System
  isExternal: false
  name: String
  nameWithType: String
  fullName: System.String
- uid: System.IO.FileLoadException.#ctor(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)
  parent: System.IO.FileLoadException
  isExternal: false
  name: FileLoadException(SerializationInfo, StreamingContext)
  nameWithType: FileLoadException.FileLoadException(SerializationInfo, StreamingContext)
  fullName: FileLoadException.FileLoadException(SerializationInfo, StreamingContext)
- uid: System.Runtime.Serialization.SerializationInfo
  parent: System.Runtime.Serialization
  isExternal: false
  name: SerializationInfo
  nameWithType: SerializationInfo
  fullName: System.Runtime.Serialization.SerializationInfo
- uid: System.Runtime.Serialization.StreamingContext
  parent: System.Runtime.Serialization
  isExternal: false
  name: StreamingContext
  nameWithType: StreamingContext
  fullName: System.Runtime.Serialization.StreamingContext
- uid: System.IO.FileLoadException.#ctor(System.String,System.Exception)
  parent: System.IO.FileLoadException
  isExternal: false
  name: FileLoadException(String, Exception)
  nameWithType: FileLoadException.FileLoadException(String, Exception)
  fullName: FileLoadException.FileLoadException(String, Exception)
- uid: System.Exception
  parent: System
  isExternal: false
  name: Exception
  nameWithType: Exception
  fullName: System.Exception
- uid: System.IO.FileLoadException.#ctor(System.String,System.String)
  parent: System.IO.FileLoadException
  isExternal: false
  name: FileLoadException(String, String)
  nameWithType: FileLoadException.FileLoadException(String, String)
  fullName: FileLoadException.FileLoadException(String, String)
- uid: System.IO.FileLoadException.#ctor(System.String,System.String,System.Exception)
  parent: System.IO.FileLoadException
  isExternal: false
  name: FileLoadException(String, String, Exception)
  nameWithType: FileLoadException.FileLoadException(String, String, Exception)
  fullName: FileLoadException.FileLoadException(String, String, Exception)
- uid: System.IO.FileLoadException.FileName
  parent: System.IO.FileLoadException
  isExternal: false
  name: FileName
  nameWithType: FileLoadException.FileName
  fullName: FileLoadException.FileName
- uid: System.IO.FileLoadException.FusionLog
  parent: System.IO.FileLoadException
  isExternal: false
  name: FusionLog
  nameWithType: FileLoadException.FusionLog
  fullName: FileLoadException.FusionLog
- uid: System.IO.FileLoadException.GetObjectData(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)
  parent: System.IO.FileLoadException
  isExternal: false
  name: GetObjectData(SerializationInfo, StreamingContext)
  nameWithType: FileLoadException.GetObjectData(SerializationInfo, StreamingContext)
  fullName: FileLoadException.GetObjectData(SerializationInfo, StreamingContext)
- uid: System.IO.FileLoadException.Message
  parent: System.IO.FileLoadException
  isExternal: false
  name: Message
  nameWithType: FileLoadException.Message
  fullName: FileLoadException.Message
- uid: System.IO.FileLoadException.ToString
  parent: System.IO.FileLoadException
  isExternal: false
  name: ToString()
  nameWithType: FileLoadException.ToString()
  fullName: FileLoadException.ToString()
- uid: System.IO.FileLoadException.#ctor*
  parent: System.IO.FileLoadException
  isExternal: false
  name: FileLoadException
  nameWithType: FileLoadException.FileLoadException
  fullName: FileLoadException.FileLoadException
  monikers:
  - netcore-1.0
  - netcore-1.1
  - netcore-2.0
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  - netstandard-1.3
  - netstandard-1.4
  - netstandard-1.5
  - netstandard-1.6
  - netstandard-2.0
  - xamarinandroid-7.1
  - xamarinios-10.8
  - xamarinmac-3.0
  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.IO/FileLoadException.xml
- uid: System.IO.FileLoadException.FileName*
  parent: System.IO.FileLoadException
  isExternal: false
  name: FileName
  nameWithType: FileLoadException.FileName
  fullName: FileLoadException.FileName
  monikers:
  - netcore-1.0
  - netcore-1.1
  - netcore-2.0
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  - netstandard-1.3
  - netstandard-1.4
  - netstandard-1.5
  - netstandard-1.6
  - netstandard-2.0
  - xamarinandroid-7.1
  - xamarinios-10.8
  - xamarinmac-3.0
  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.IO/FileLoadException.xml
- uid: System.IO.FileLoadException.FusionLog*
  parent: System.IO.FileLoadException
  isExternal: false
  name: FusionLog
  nameWithType: FileLoadException.FusionLog
  fullName: FileLoadException.FusionLog
  monikers:
  - netcore-2.0
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  - netstandard-2.0
  - xamarinandroid-7.1
  - xamarinios-10.8
  - xamarinmac-3.0
  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.IO/FileLoadException.xml
- uid: System.IO.FileLoadException.GetObjectData*
  parent: System.IO.FileLoadException
  isExternal: false
  name: GetObjectData
  nameWithType: FileLoadException.GetObjectData
  fullName: FileLoadException.GetObjectData
  monikers:
  - netcore-2.0
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  - netstandard-2.0
  - xamarinandroid-7.1
  - xamarinios-10.8
  - xamarinmac-3.0
  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.IO/FileLoadException.xml
- uid: System.IO.FileLoadException.Message*
  parent: System.IO.FileLoadException
  isExternal: false
  name: Message
  nameWithType: FileLoadException.Message
  fullName: FileLoadException.Message
  monikers:
  - netcore-1.0
  - netcore-1.1
  - netcore-2.0
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  - netstandard-1.3
  - netstandard-1.4
  - netstandard-1.5
  - netstandard-1.6
  - netstandard-2.0
  - xamarinandroid-7.1
  - xamarinios-10.8
  - xamarinmac-3.0
  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.IO/FileLoadException.xml
- uid: System.IO.FileLoadException.ToString*
  parent: System.IO.FileLoadException
  isExternal: false
  name: ToString
  nameWithType: FileLoadException.ToString
  fullName: FileLoadException.ToString
  monikers:
  - netcore-1.0
  - netcore-1.1
  - netcore-2.0
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  - netstandard-1.3
  - netstandard-1.4
  - netstandard-1.5
  - netstandard-1.6
  - netstandard-2.0
  - xamarinandroid-7.1
  - xamarinios-10.8
  - xamarinmac-3.0
  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.IO/FileLoadException.xml
- uid: System.Object.Equals(System.Object)
  parent: System.Object
  isExternal: false
  name: Equals(Object)
  nameWithType: Object.Equals(Object)
  fullName: Object.Equals(Object)
- uid: System.Object.Equals(System.Object,System.Object)
  parent: System.Object
  isExternal: false
  name: Equals(Object, Object)
  nameWithType: Object.Equals(Object, Object)
  fullName: Object.Equals(Object, Object)
- uid: System.Object.GetHashCode
  parent: System.Object
  isExternal: false
  name: GetHashCode()
  nameWithType: Object.GetHashCode()
  fullName: Object.GetHashCode()
- uid: System.Exception.GetType
  parent: System.Exception
  isExternal: false
  name: GetType()
  nameWithType: Exception.GetType()
  fullName: Exception.GetType()
- uid: System.Object.MemberwiseClone
  parent: System.Object
  isExternal: false
  name: MemberwiseClone()
  nameWithType: Object.MemberwiseClone()
  fullName: Object.MemberwiseClone()
- uid: System.Object.ReferenceEquals(System.Object,System.Object)
  parent: System.Object
  isExternal: false
  name: ReferenceEquals(Object, Object)
  nameWithType: Object.ReferenceEquals(Object, Object)
  fullName: Object.ReferenceEquals(Object, Object)
- uid: System.Exception.Data
  parent: System.Exception
  isExternal: false
  name: Data
  nameWithType: Exception.Data
  fullName: Exception.Data
- uid: System.Exception.GetBaseException
  parent: System.Exception
  isExternal: false
  name: GetBaseException()
  nameWithType: Exception.GetBaseException()
  fullName: Exception.GetBaseException()
- uid: System.Exception.HelpLink
  parent: System.Exception
  isExternal: false
  name: HelpLink
  nameWithType: Exception.HelpLink
  fullName: Exception.HelpLink
- uid: System.Exception.HResult
  parent: System.Exception
  isExternal: false
  name: HResult
  nameWithType: Exception.HResult
  fullName: Exception.HResult
- uid: System.Exception.InnerException
  parent: System.Exception
  isExternal: false
  name: InnerException
  nameWithType: Exception.InnerException
  fullName: Exception.InnerException
- uid: System.Exception.SerializeObjectState
  parent: System.Exception
  isExternal: false
  name: SerializeObjectState
  nameWithType: Exception.SerializeObjectState
  fullName: Exception.SerializeObjectState
- uid: System.Exception.Source
  parent: System.Exception
  isExternal: false
  name: Source
  nameWithType: Exception.Source
  fullName: Exception.Source
- uid: System.Exception.StackTrace
  parent: System.Exception
  isExternal: false
  name: StackTrace
  nameWithType: Exception.StackTrace
  fullName: Exception.StackTrace
- uid: System.Exception.TargetSite
  parent: System.Exception
  isExternal: false
  name: TargetSite
  nameWithType: Exception.TargetSite
  fullName: Exception.TargetSite
