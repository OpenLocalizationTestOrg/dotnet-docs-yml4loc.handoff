<?xml version="1.0"?>
<xliff version="1.2" xmlns="urn:oasis:names:tc:xliff:document:1.2" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:schemaLocation="urn:oasis:names:tc:xliff:document:1.2 xliff-core-1.2-transitional.xsd">
  <file datatype="xml" original="markdown" source-language="en-US" target-language="ja-jp">
    <header>
      <tool tool-id="mdxliff" tool-name="mdxliff" tool-version="1.0-fdd610b" tool-company="Microsoft" />
      <xliffext:olfilehash xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">622e415c88e8b2f46bcd529476597491f24c7113</xliffext:olfilehash>
      <xliffext:olfilepath xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">System.ComponentModel.ITypedList.yml</xliffext:olfilepath>
      <xliffext:oltranslationpriority xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">net47</xliffext:oltranslationpriority>
      <xliffext:oltranslationtype xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">Human Translation</xliffext:oltranslationtype>
      <xliffext:olskeletonhash xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">dd09c997e32467c94100c505ba7aea97c09216f8</xliffext:olskeletonhash>
      <xliffext:olxliffhash xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">6229f6bb88d207a4f0d357a8a6fe98e38b9e13bf</xliffext:olxliffhash>
    </header>
    <body>
      <group id="content" extype="content">
        <trans-unit id="101" translate="yes" xml:space="preserve">
          <source>Provides functionality to discover the schema for a bindable list, where the properties available for binding differ from the public properties of the object to bind to.</source>
        </trans-unit>
        <trans-unit id="102" translate="yes" xml:space="preserve" extradata="MT">
          <source>Use this interface if, for instance, you are using a <ph id="ph1">&lt;xref:System.Data.DataView&gt;</ph> object that represents a <ph id="ph2">`customer`</ph> table, you want to bind to the properties on the <ph id="ph3">`customer`</ph> object that the <ph id="ph4">&lt;xref:System.Data.DataView&gt;</ph> represents, not the properties of the <ph id="ph5">&lt;xref:System.Data.DataView&gt;</ph>.</source>
        </trans-unit>
        <trans-unit id="103" translate="yes" xml:space="preserve" extradata="MT">
          <source>This interface is not required for design-time support of a bindable list.</source>
        </trans-unit>
        <trans-unit id="104" translate="yes" xml:space="preserve" extradata="MT">
          <source>Binding to data can occur either at run time or in a designer, but there are rules for both.</source>
        </trans-unit>
        <trans-unit id="105" translate="yes" xml:space="preserve" extradata="MT">
          <source>At run time, you can bind to data in any of the following:</source>
        </trans-unit>
        <trans-unit id="106" translate="yes" xml:space="preserve" extradata="MT">
          <source>Implementer of <ph id="ph1">&lt;xref:System.Collections.IList&gt;</ph>, provided the implementer has a strongly typed <ph id="ph2">&lt;xref:System.Collections.IList.Item%2A&gt;</ph> property (that is, the <ph id="ph3">&lt;xref:System.Type&gt;</ph> is anything but <ph id="ph4">&lt;xref:System.Object&gt;</ph>).</source>
        </trans-unit>
        <trans-unit id="107" translate="yes" xml:space="preserve" extradata="MT">
          <source>You can accomplish this by making the default implementation of <ph id="ph1">&lt;xref:System.Collections.IList.Item%2A&gt;</ph> private.</source>
        </trans-unit>
        <trans-unit id="108" translate="yes" xml:space="preserve" extradata="MT">
          <source>If you want to create an <ph id="ph1">&lt;xref:System.Collections.IList&gt;</ph> that follows the rules of a strongly typed collection, you should derive from <ph id="ph2">&lt;xref:System.Collections.CollectionBase&gt;</ph>.</source>
        </trans-unit>
        <trans-unit id="109" translate="yes" xml:space="preserve" extradata="MT">
          <source>Implementer of <ph id="ph1">&lt;xref:System.ComponentModel.ITypedList&gt;</ph>.</source>
        </trans-unit>
        <trans-unit id="110" translate="yes" xml:space="preserve" extradata="MT">
          <source>In a designer, you can initialize binding to <ph id="ph1">&lt;xref:System.ComponentModel.Component&gt;</ph> objects by following the same rules.</source>
        </trans-unit>
        <trans-unit id="111" translate="yes" xml:space="preserve" extradata="MT">
          <source>For more information on binding to a data source, see the <ph id="ph1">&lt;xref:System.Windows.Forms.Binding?displayProperty=fullName&gt;</ph> class.</source>
        </trans-unit>
        <trans-unit id="112" translate="yes" xml:space="preserve">
          <source>Returns the <ph id="ph1">&lt;xref href="System.ComponentModel.PropertyDescriptorCollection"&gt;&lt;/xref&gt;</ph> that represents the properties on each item used to bind data.</source>
        </trans-unit>
        <trans-unit id="113" translate="yes" xml:space="preserve" extradata="MT">
          <source>If the <ph id="ph1">`listAccessors`</ph> parameter is not <ph id="ph2">`null`</ph>, it typically contains a property descriptor that identifies a list of containers to retrieve for the object that implements <ph id="ph3">&lt;xref:System.ComponentModel.ITypedList&gt;</ph>.</source>
        </trans-unit>
        <trans-unit id="114" translate="yes" xml:space="preserve" extradata="MT">
          <source>For example, a <ph id="ph1">&lt;xref:System.Data.DataSet&gt;</ph> containing two tables, <ph id="ph2">`myCustomers`</ph> and <ph id="ph3">`myOrders`</ph>, with a relationship between them called <ph id="ph4">`myCustOrders`</ph>.</source>
        </trans-unit>
        <trans-unit id="115" translate="yes" xml:space="preserve" extradata="MT">
          <source>If you create a <ph id="ph1">&lt;xref:System.Data.DataView&gt;</ph> object to view <ph id="ph2">`myCustomers`</ph>, then calling the <ph id="ph3">&lt;xref:System.ComponentModel.ITypedList.GetItemProperties%2A&gt;</ph> method with <ph id="ph4">`null`</ph> returns the property descriptors for the columns in <ph id="ph5">`myCustomers`</ph>.</source>
        </trans-unit>
        <trans-unit id="116" translate="yes" xml:space="preserve" extradata="MT">
          <source>As a result, one of the returned property descriptors is a property descriptor for <ph id="ph1">`myCustOrders`</ph>, just as calling the <ph id="ph2">&lt;xref:System.ComponentModel.ITypedList.GetItemProperties%2A&gt;</ph> method with a list accessor array containing the property descriptors for <ph id="ph3">`myCustOrders`</ph> will return the property descriptors for <ph id="ph4">`myOrders`</ph>.</source>
        </trans-unit>
        <trans-unit id="117" translate="yes" xml:space="preserve">
          <source>An array of <ph id="ph1">&lt;xref href="System.ComponentModel.PropertyDescriptor"&gt;&lt;/xref&gt;</ph> objects to find in the collection as bindable.</source>
        </trans-unit>
        <trans-unit id="118" translate="yes" xml:space="preserve">
          <source>This can be <ph id="ph1">`null`</ph>.</source>
        </trans-unit>
        <trans-unit id="119" translate="yes" xml:space="preserve">
          <source>The <ph id="ph1">&lt;xref href="System.ComponentModel.PropertyDescriptorCollection"&gt;&lt;/xref&gt;</ph> that represents the properties on each item used to bind data.</source>
        </trans-unit>
        <trans-unit id="120" translate="yes" xml:space="preserve">
          <source>Returns the name of the list.</source>
        </trans-unit>
        <trans-unit id="121" translate="yes" xml:space="preserve" extradata="MT">
          <source>This method is used only in the design-time framework and by the obsolete <ph id="ph1">&lt;xref:System.Windows.Forms.DataGrid&gt;</ph> control.</source>
        </trans-unit>
        <trans-unit id="122" translate="yes" xml:space="preserve">
          <source>An array of <ph id="ph1">&lt;xref href="System.ComponentModel.PropertyDescriptor"&gt;&lt;/xref&gt;</ph> objects, for which the list name is returned.</source>
        </trans-unit>
        <trans-unit id="123" translate="yes" xml:space="preserve">
          <source>This can be <ph id="ph1">`null`</ph>.</source>
        </trans-unit>
        <trans-unit id="124" translate="yes" xml:space="preserve">
          <source>The name of the list.</source>
        </trans-unit>
      </group>
    </body>
  </file>
</xliff>