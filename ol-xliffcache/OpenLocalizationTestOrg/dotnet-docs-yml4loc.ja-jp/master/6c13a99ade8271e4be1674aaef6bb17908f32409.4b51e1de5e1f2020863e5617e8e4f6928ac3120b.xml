{"nodes":[{"content":"Contains the values of a <xref href=\"System.DirectoryServices.DirectoryEntry\"></xref> property.","nodes":[{"pos":[0,95],"content":"Contains the values of a <ph id=\"ph1\">&lt;xref href=\"System.DirectoryServices.DirectoryEntry\"&gt;&lt;/xref&gt;</ph> property.","source":"Contains the values of a <xref href=\"System.DirectoryServices.DirectoryEntry\"></xref> property."}],"pos":[1697,1793],"yaml":true},{"content":"Appends the specified <xref href=\"System.DirectoryServices.PropertyValueCollection\"></xref> object to this collection.","nodes":[{"pos":[0,118],"content":"Appends the specified <ph id=\"ph1\">&lt;xref href=\"System.DirectoryServices.PropertyValueCollection\"&gt;&lt;/xref&gt;</ph> object to this collection.","source":"Appends the specified <xref href=\"System.DirectoryServices.PropertyValueCollection\"></xref> object to this collection."}],"pos":[5235,5354],"yaml":true},{"content":"The <xref href=\"System.DirectoryServices.PropertyValueCollection\"></xref> object to append to this collection.","nodes":[{"pos":[0,110],"content":"The <ph id=\"ph1\">&lt;xref href=\"System.DirectoryServices.PropertyValueCollection\"&gt;&lt;/xref&gt;</ph> object to append to this collection.","source":"The <xref href=\"System.DirectoryServices.PropertyValueCollection\"></xref> object to append to this collection."}],"pos":[5485,5596],"yaml":true},{"content":"The zero-based index of the <xref href=\"System.DirectoryServices.PropertyValueCollection\"></xref> object that is appended to this collection.","nodes":[{"pos":[0,141],"content":"The zero-based index of the <ph id=\"ph1\">&lt;xref href=\"System.DirectoryServices.PropertyValueCollection\"&gt;&lt;/xref&gt;</ph> object that is appended to this collection.","source":"The zero-based index of the <xref href=\"System.DirectoryServices.PropertyValueCollection\"></xref> object that is appended to this collection."}],"pos":[5652,5794],"yaml":true},{"content":"An error occurred during the call to the underlying interface.","nodes":[{"pos":[0,62],"content":"An error occurred during the call to the underlying interface.","nodes":[{"content":"An error occurred during the call to the underlying interface.","pos":[0,62]}]}],"pos":[6006,6069],"yaml":true},{"content":"The property value is a null reference (`Nothing` in Visual Basic).","nodes":[{"pos":[0,67],"content":"The property value is a null reference (<ph id=\"ph1\">`Nothing`</ph> in Visual Basic).","source":"The property value is a null reference (`Nothing` in Visual Basic)."}],"pos":[6171,6239],"yaml":true},{"content":"Appends the contents of the <xref href=\"System.DirectoryServices.PropertyValueCollection\"></xref> object to this collection.","nodes":[{"pos":[0,124],"content":"Appends the contents of the <ph id=\"ph1\">&lt;xref href=\"System.DirectoryServices.PropertyValueCollection\"&gt;&lt;/xref&gt;</ph> object to this collection.","source":"Appends the contents of the <xref href=\"System.DirectoryServices.PropertyValueCollection\"></xref> object to this collection."}],"pos":[7464,7589],"yaml":true},{"content":"A <xref href=\"System.DirectoryServices.PropertyValueCollection\"></xref> object that contains the objects to append to this collection.","nodes":[{"pos":[0,134],"content":"A <ph id=\"ph1\">&lt;xref href=\"System.DirectoryServices.PropertyValueCollection\"&gt;&lt;/xref&gt;</ph> object that contains the objects to append to this collection.","source":"A <xref href=\"System.DirectoryServices.PropertyValueCollection\"></xref> object that contains the objects to append to this collection."}],"pos":[7803,7938],"yaml":true},{"content":"The property value is a null reference (`Nothing` in Visual Basic).","nodes":[{"pos":[0,67],"content":"The property value is a null reference (<ph id=\"ph1\">`Nothing`</ph> in Visual Basic).","source":"The property value is a null reference (`Nothing` in Visual Basic)."}],"pos":[8125,8193],"yaml":true},{"content":"Appends the contents of the specified <xref href=\"System.DirectoryServices.PropertyValueCollection\"></xref> object to this collection.","nodes":[{"pos":[0,134],"content":"Appends the contents of the specified <ph id=\"ph1\">&lt;xref href=\"System.DirectoryServices.PropertyValueCollection\"&gt;&lt;/xref&gt;</ph> object to this collection.","source":"Appends the contents of the specified <xref href=\"System.DirectoryServices.PropertyValueCollection\"></xref> object to this collection."}],"pos":[9274,9409],"yaml":true},{"content":"The <xref href=\"System.DirectoryServices.PropertyValueCollection\"></xref> array that contains the objects to append to this collection.","nodes":[{"pos":[0,135],"content":"The <ph id=\"ph1\">&lt;xref href=\"System.DirectoryServices.PropertyValueCollection\"&gt;&lt;/xref&gt;</ph> array that contains the objects to append to this collection.","source":"The <xref href=\"System.DirectoryServices.PropertyValueCollection\"></xref> array that contains the objects to append to this collection."}],"pos":[9550,9686],"yaml":true},{"content":"The property value is a null reference (`Nothing` in Visual Basic).","nodes":[{"pos":[0,67],"content":"The property value is a null reference (<ph id=\"ph1\">`Nothing`</ph> in Visual Basic).","source":"The property value is a null reference (`Nothing` in Visual Basic)."}],"pos":[9873,9941],"yaml":true},{"content":"Determines whether the specified <xref href=\"System.DirectoryServices.PropertyValueCollection\"></xref> object is in this collection.","nodes":[{"pos":[0,132],"content":"Determines whether the specified <ph id=\"ph1\">&lt;xref href=\"System.DirectoryServices.PropertyValueCollection\"&gt;&lt;/xref&gt;</ph> object is in this collection.","source":"Determines whether the specified <xref href=\"System.DirectoryServices.PropertyValueCollection\"></xref> object is in this collection."}],"pos":[11010,11143],"yaml":true},{"content":"The <xref href=\"System.DirectoryServices.PropertyValueCollection\"></xref> object to search for in this collection.","nodes":[{"pos":[0,114],"content":"The <ph id=\"ph1\">&lt;xref href=\"System.DirectoryServices.PropertyValueCollection\"&gt;&lt;/xref&gt;</ph> object to search for in this collection.","source":"The <xref href=\"System.DirectoryServices.PropertyValueCollection\"></xref> object to search for in this collection."}],"pos":[11280,11395],"yaml":true},{"content":"`true` if the specified property belongs to this collection; otherwise, `false`.","nodes":[{"pos":[0,80],"content":"<ph id=\"ph1\">`true`</ph> if the specified property belongs to this collection; otherwise, <ph id=\"ph2\">`false`</ph>.","source":"`true` if the specified property belongs to this collection; otherwise, `false`."}],"pos":[11453,11536],"yaml":true},{"content":"Copies all <xref href=\"System.DirectoryServices.PropertyValueCollection\"></xref> objects in this collection to the specified array, starting at the specified index in the target array.","nodes":[{"pos":[0,184],"content":"Copies all <ph id=\"ph1\">&lt;xref href=\"System.DirectoryServices.PropertyValueCollection\"&gt;&lt;/xref&gt;</ph> objects in this collection to the specified array, starting at the specified index in the target array.","source":"Copies all <xref href=\"System.DirectoryServices.PropertyValueCollection\"></xref> objects in this collection to the specified array, starting at the specified index in the target array."}],"pos":[12753,12938],"yaml":true},{"content":"The array of <xref href=\"System.DirectoryServices.PropertyValueCollection\"></xref> objects that receives the elements of this collection.","nodes":[{"pos":[0,137],"content":"The array of <ph id=\"ph1\">&lt;xref href=\"System.DirectoryServices.PropertyValueCollection\"&gt;&lt;/xref&gt;</ph> objects that receives the elements of this collection.","source":"The array of <xref href=\"System.DirectoryServices.PropertyValueCollection\"></xref> objects that receives the elements of this collection."}],"pos":[13088,13226],"yaml":true},{"content":"The zero-based index in <code>array</code> where this method starts copying this collection.","nodes":[{"pos":[0,92],"content":"The zero-based index in <bpt id=\"p1\">&lt;code&gt;</bpt><ph id=\"ph1\">array</ph><ept id=\"p1\">&lt;/code&gt;</ept> where this method starts copying this collection.","source":"The zero-based index in <code>array</code> where this method starts copying this collection."}],"pos":[13286,13379],"yaml":true},{"content":"Retrieves the index of a specified property value in this collection.","nodes":[{"pos":[0,69],"content":"Retrieves the index of a specified property value in this collection.","nodes":[{"content":"Retrieves the index of a specified property value in this collection.","pos":[0,69]}]}],"pos":[14528,14598],"yaml":true},{"content":"The property value to find.","nodes":[{"pos":[0,27],"content":"The property value to find.","nodes":[{"content":"The property value to find.","pos":[0,27]}]}],"pos":[14733,14761],"yaml":true},{"content":"The zero-based index of the specified property value. If the object is not found, the return value is -1.","nodes":[{"pos":[0,105],"content":"The zero-based index of the specified property value. If the object is not found, the return value is -1.","nodes":[{"content":"The zero-based index of the specified property value. If the object is not found, the return value is -1.","pos":[0,105],"nodes":[{"content":"The zero-based index of the specified property value.","pos":[0,53]},{"content":"If the object is not found, the return value is -1.","pos":[54,105]}]}]}],"pos":[14817,14923],"yaml":true},{"content":"Inserts a property value into this collection at a specified index.","nodes":[{"pos":[0,67],"content":"Inserts a property value into this collection at a specified index.","nodes":[{"content":"Inserts a property value into this collection at a specified index.","pos":[0,67]}]}],"pos":[16127,16195],"yaml":true},{"content":"The zero-based index at which to insert the property value.","nodes":[{"pos":[0,59],"content":"The zero-based index at which to insert the property value.","nodes":[{"content":"The zero-based index at which to insert the property value.","pos":[0,59]}]}],"pos":[16340,16400],"yaml":true},{"content":"The property value to insert.","nodes":[{"pos":[0,29],"content":"The property value to insert.","nodes":[{"content":"The property value to insert.","pos":[0,29]}]}],"pos":[16461,16491],"yaml":true},{"content":"The property value is a null reference (`Nothing` in Visual Basic).","nodes":[{"pos":[0,67],"content":"The property value is a null reference (<ph id=\"ph1\">`Nothing`</ph> in Visual Basic).","source":"The property value is a null reference (`Nothing` in Visual Basic)."}],"pos":[16676,16744],"yaml":true},{"content":"An error occurred during the call to the underlying interface.","nodes":[{"pos":[0,62],"content":"An error occurred during the call to the underlying interface.","nodes":[{"content":"An error occurred during the call to the underlying interface.","pos":[0,62]}]}],"pos":[16876,16939],"yaml":true},{"content":"The index is less than 0 (zero) or greater than the size of the collection.","nodes":[{"pos":[0,75],"content":"The index is less than 0 (zero) or greater than the size of the collection.","nodes":[{"content":"The index is less than 0 (zero) or greater than the size of the collection.","pos":[0,75]}]}],"pos":[17047,17123],"yaml":true},{"content":"Gets or sets the property value that is located at a specified index of this collection.","nodes":[{"pos":[0,88],"content":"Gets or sets the property value that is located at a specified index of this collection.","nodes":[{"content":"Gets or sets the property value that is located at a specified index of this collection.","pos":[0,88]}]}],"pos":[18164,18253],"yaml":true},{"content":"In C#, this property is the indexer for the <xref:System.DirectoryServices.PropertyValueCollection> class.  \n  \n In JScript, you can use the default indexed properties defined by a type, but you cannot explicitly define your own. However, specifying the expando attribute on a class automatically provides a default indexed property whose type is Object and whose index type is <xref:System.String>.","nodes":[{"pos":[0,106],"content":"In C#, this property is the indexer for the <xref:System.DirectoryServices.PropertyValueCollection> class.","nodes":[{"content":"In C#, this property is the indexer for the <ph id=\"ph1\">&lt;xref:System.DirectoryServices.PropertyValueCollection&gt;</ph> class.","pos":[0,106],"source":"In C#, this property is the indexer for the <xref:System.DirectoryServices.PropertyValueCollection> class."}]},{"pos":[113,399],"content":"In JScript, you can use the default indexed properties defined by a type, but you cannot explicitly define your own. However, specifying the expando attribute on a class automatically provides a default indexed property whose type is Object and whose index type is <xref:System.String>.","nodes":[{"content":"In JScript, you can use the default indexed properties defined by a type, but you cannot explicitly define your own. However, specifying the expando attribute on a class automatically provides a default indexed property whose type is Object and whose index type is <xref:System.String>.","pos":[0,286],"nodes":[{"content":"In JScript, you can use the default indexed properties defined by a type, but you cannot explicitly define your own.","pos":[0,116]},{"content":"However, specifying the expando attribute on a class automatically provides a default indexed property whose type is Object and whose index type is <ph id=\"ph1\">&lt;xref:System.String&gt;</ph>.","pos":[117,286],"source":" However, specifying the expando attribute on a class automatically provides a default indexed property whose type is Object and whose index type is <xref:System.String>."}]}]}],"pos":[18264,18668],"yaml":true,"extradata":"MT"},{"content":"The zero-based index of the property value.","nodes":[{"pos":[0,43],"content":"The zero-based index of the property value.","nodes":[{"content":"The zero-based index of the property value.","pos":[0,43]}]}],"pos":[18811,18855],"yaml":true},{"content":"The property value at the specified index.","nodes":[{"pos":[0,42],"content":"The property value at the specified index.","nodes":[{"content":"The property value at the specified index.","pos":[0,42]}]}],"pos":[18912,18955],"yaml":true},{"content":"The property value is a null reference (`Nothing` in Visual Basic).","nodes":[{"pos":[0,67],"content":"The property value is a null reference (<ph id=\"ph1\">`Nothing`</ph> in Visual Basic).","source":"The property value is a null reference (`Nothing` in Visual Basic)."}],"pos":[19138,19206],"yaml":true},{"content":"The index is less than zero (0) or greater than the size of the collection.","nodes":[{"pos":[0,75],"content":"The index is less than zero (0) or greater than the size of the collection.","nodes":[{"content":"The index is less than zero (0) or greater than the size of the collection.","pos":[0,75]}]}],"pos":[19314,19390],"yaml":true},{"content":"Overrides the <xref href=\"System.Collections.CollectionBase.OnClearComplete\"></xref> method.","nodes":[{"pos":[0,92],"content":"Overrides the <ph id=\"ph1\">&lt;xref href=\"System.Collections.CollectionBase.OnClearComplete\"&gt;&lt;/xref&gt;</ph> method.","source":"Overrides the <xref href=\"System.Collections.CollectionBase.OnClearComplete\"></xref> method."}],"pos":[20438,20531],"yaml":true},{"content":"Overrides the <xref href=\"System.Collections.CollectionBase.OnInsertComplete(System.Int32,System.Object)\"></xref> method.","nodes":[{"pos":[0,121],"content":"Overrides the <ph id=\"ph1\">&lt;xref href=\"System.Collections.CollectionBase.OnInsertComplete(System.Int32,System.Object)\"&gt;&lt;/xref&gt;</ph> method.","source":"Overrides the <xref href=\"System.Collections.CollectionBase.OnInsertComplete(System.Int32,System.Object)\"></xref> method."}],"pos":[21889,22011],"yaml":true},{"content":"The zero-based index at which to insert <code>value</code>.","nodes":[{"pos":[0,59],"content":"The zero-based index at which to insert <bpt id=\"p1\">&lt;code&gt;</bpt><ph id=\"ph1\">value</ph><ept id=\"p1\">&lt;/code&gt;</ept>.","source":"The zero-based index at which to insert <code>value</code>."}],"pos":[22178,22238],"yaml":true},{"content":"The new value of the element at <code>index</code>.","nodes":[{"pos":[0,51],"content":"The new value of the element at <bpt id=\"p1\">&lt;code&gt;</bpt><ph id=\"ph1\">index</ph><ept id=\"p1\">&lt;/code&gt;</ept>.","source":"The new value of the element at <code>index</code>."}],"pos":[22299,22351],"yaml":true},{"content":"Overrides the <xref href=\"System.Collections.CollectionBase.OnRemoveComplete(System.Int32,System.Object)\"></xref> method.","nodes":[{"pos":[0,121],"content":"Overrides the <ph id=\"ph1\">&lt;xref href=\"System.Collections.CollectionBase.OnRemoveComplete(System.Int32,System.Object)\"&gt;&lt;/xref&gt;</ph> method.","source":"Overrides the <xref href=\"System.Collections.CollectionBase.OnRemoveComplete(System.Int32,System.Object)\"></xref> method."}],"pos":[23624,23746],"yaml":true},{"content":"The zero-based index at which value can be found.","nodes":[{"pos":[0,49],"content":"The zero-based index at which value can be found.","nodes":[{"content":"The zero-based index at which value can be found.","pos":[0,49]}]}],"pos":[23913,23963],"yaml":true},{"content":"The value of the element to remove from <code>index</code>.","nodes":[{"pos":[0,59],"content":"The value of the element to remove from <bpt id=\"p1\">&lt;code&gt;</bpt><ph id=\"ph1\">index</ph><ept id=\"p1\">&lt;/code&gt;</ept>.","source":"The value of the element to remove from <code>index</code>."}],"pos":[24024,24084],"yaml":true},{"content":"Overrides the <xref href=\"System.Collections.CollectionBase.OnSetComplete(System.Int32,System.Object,System.Object)\"></xref> method.","nodes":[{"pos":[0,132],"content":"Overrides the <ph id=\"ph1\">&lt;xref href=\"System.Collections.CollectionBase.OnSetComplete(System.Int32,System.Object,System.Object)\"&gt;&lt;/xref&gt;</ph> method.","source":"Overrides the <xref href=\"System.Collections.CollectionBase.OnSetComplete(System.Int32,System.Object,System.Object)\"></xref> method."}],"pos":[25405,25538],"yaml":true},{"content":"The zero-based index at which <code>oldValue</code> can be found.","nodes":[{"pos":[0,65],"content":"The zero-based index at which <bpt id=\"p1\">&lt;code&gt;</bpt><ph id=\"ph1\">oldValue</ph><ept id=\"p1\">&lt;/code&gt;</ept> can be found.","source":"The zero-based index at which <code>oldValue</code> can be found."}],"pos":[25722,25788],"yaml":true},{"content":"The value to replace with <code>newValue</code>.","nodes":[{"pos":[0,48],"content":"The value to replace with <bpt id=\"p1\">&lt;code&gt;</bpt><ph id=\"ph1\">newValue</ph><ept id=\"p1\">&lt;/code&gt;</ept>.","source":"The value to replace with <code>newValue</code>."}],"pos":[25852,25901],"yaml":true},{"content":"The new value of the element at <code>index</code>.","nodes":[{"pos":[0,51],"content":"The new value of the element at <bpt id=\"p1\">&lt;code&gt;</bpt><ph id=\"ph1\">index</ph><ept id=\"p1\">&lt;/code&gt;</ept>.","source":"The new value of the element at <code>index</code>."}],"pos":[25965,26017],"yaml":true},{"content":"Gets the property name for the attributes in the value collection.","nodes":[{"pos":[0,66],"content":"Gets the property name for the attributes in the value collection.","nodes":[{"content":"Gets the property name for the attributes in the value collection.","pos":[0,66]}]}],"pos":[27136,27203],"yaml":true},{"content":"A string that contains the name of the property with the values that are included in this <xref href=\"System.DirectoryServices.PropertyValueCollection\"></xref> object.","nodes":[{"pos":[0,167],"content":"A string that contains the name of the property with the values that are included in this <ph id=\"ph1\">&lt;xref href=\"System.DirectoryServices.PropertyValueCollection\"&gt;&lt;/xref&gt;</ph> object.","source":"A string that contains the name of the property with the values that are included in this <xref href=\"System.DirectoryServices.PropertyValueCollection\"></xref> object."}],"pos":[27386,27554],"yaml":true},{"content":"Removes a specified property value from this collection.","nodes":[{"pos":[0,56],"content":"Removes a specified property value from this collection.","nodes":[{"content":"Removes a specified property value from this collection.","pos":[0,56]}]}],"pos":[28778,28835],"yaml":true},{"content":"When working with a multi-valued string property value, the <xref:System.DirectoryServices.PropertyValueCollection.Remove%2A> method will successfully remove the correct item. However, identifying the correct items by name is difficult with a multi-valued DNWithString property value (as the DNWithString COM class, which is used to store the DNWithString items, has 2 string properties representing the item). The way to remove such items is to find the object in the collection (by looping thru all the items), then call the <xref:System.DirectoryServices.PropertyValueCollection.Remove%2A> function with the object's pointer that you just found.  This is illustrated in the example below.","nodes":[{"pos":[0,691],"content":"When working with a multi-valued string property value, the <xref:System.DirectoryServices.PropertyValueCollection.Remove%2A> method will successfully remove the correct item. However, identifying the correct items by name is difficult with a multi-valued DNWithString property value (as the DNWithString COM class, which is used to store the DNWithString items, has 2 string properties representing the item). The way to remove such items is to find the object in the collection (by looping thru all the items), then call the <xref:System.DirectoryServices.PropertyValueCollection.Remove%2A> function with the object's pointer that you just found.  This is illustrated in the example below.","nodes":[{"content":"When working with a multi-valued string property value, the <xref:System.DirectoryServices.PropertyValueCollection.Remove%2A> method will successfully remove the correct item. However, identifying the correct items by name is difficult with a multi-valued DNWithString property value (as the DNWithString COM class, which is used to store the DNWithString items, has 2 string properties representing the item). The way to remove such items is to find the object in the collection (by looping thru all the items), then call the <xref:System.DirectoryServices.PropertyValueCollection.Remove%2A> function with the object's pointer that you just found.  This is illustrated in the example below.","pos":[0,691],"nodes":[{"content":"When working with a multi-valued string property value, the <ph id=\"ph1\">&lt;xref:System.DirectoryServices.PropertyValueCollection.Remove%2A&gt;</ph> method will successfully remove the correct item.","pos":[0,175],"source":"When working with a multi-valued string property value, the <xref:System.DirectoryServices.PropertyValueCollection.Remove%2A> method will successfully remove the correct item."},{"content":"However, identifying the correct items by name is difficult with a multi-valued DNWithString property value (as the DNWithString COM class, which is used to store the DNWithString items, has 2 string properties representing the item).","pos":[176,410]},{"content":"The way to remove such items is to find the object in the collection (by looping thru all the items), then call the <ph id=\"ph1\">&lt;xref:System.DirectoryServices.PropertyValueCollection.Remove%2A&gt;</ph> function with the object's pointer that you just found.","pos":[411,648],"source":" The way to remove such items is to find the object in the collection (by looping thru all the items), then call the <xref:System.DirectoryServices.PropertyValueCollection.Remove%2A> function with the object's pointer that you just found."},{"content":"This is illustrated in the example below.","pos":[650,691]}]}]}],"pos":[28846,29538],"yaml":true,"extradata":"MT"},{"content":"The property value to remove.","nodes":[{"pos":[0,29],"content":"The property value to remove.","nodes":[{"content":"The property value to remove.","pos":[0,29]}]}],"pos":[30375,30405],"yaml":true},{"content":"The property value is a null reference (`Nothing` in Visual Basic).","nodes":[{"pos":[0,67],"content":"The property value is a null reference (<ph id=\"ph1\">`Nothing`</ph> in Visual Basic).","source":"The property value is a null reference (`Nothing` in Visual Basic)."}],"pos":[30590,30658],"yaml":true},{"content":"An error occurred during the call to the underlying interface.","nodes":[{"pos":[0,62],"content":"An error occurred during the call to the underlying interface.","nodes":[{"content":"An error occurred during the call to the underlying interface.","pos":[0,62]}]}],"pos":[30790,30853],"yaml":true},{"content":"Gets or sets the values of the collection.","nodes":[{"pos":[0,42],"content":"Gets or sets the values of the collection.","nodes":[{"content":"Gets or sets the values of the collection.","pos":[0,42]}]}],"pos":[31837,31880],"yaml":true},{"content":"To add multiple values, set this property to an array of the values.","nodes":[{"pos":[0,68],"content":"To add multiple values, set this property to an array of the values.","nodes":[{"content":"To add multiple values, set this property to an array of the values.","pos":[0,68]}]}],"pos":[31891,31960],"yaml":true,"extradata":"MT"},{"content":"If the collection is empty, the property value is a null reference (`Nothing` in Visual Basic). If the collection contains one value, the property value is that value. If the collection contains multiple values, the property value equals a copy of an array of those values.  \n  \n If setting this property, the value or values are added to the <xref href=\"System.DirectoryServices.PropertyValueCollection\"></xref>. Setting this property to a null reference (`Nothing`) clears the collection.","nodes":[{"pos":[0,273],"content":"If the collection is empty, the property value is a null reference (`Nothing` in Visual Basic). If the collection contains one value, the property value is that value. If the collection contains multiple values, the property value equals a copy of an array of those values.","nodes":[{"content":"If the collection is empty, the property value is a null reference (<ph id=\"ph1\">`Nothing`</ph> in Visual Basic).","pos":[0,95],"source":"If the collection is empty, the property value is a null reference (`Nothing` in Visual Basic)."},{"content":"If the collection contains one value, the property value is that value.","pos":[96,167]},{"content":"If the collection contains multiple values, the property value equals a copy of an array of those values.","pos":[168,273]}]},{"pos":[280,490],"content":"If setting this property, the value or values are added to the <xref href=\"System.DirectoryServices.PropertyValueCollection\"></xref>. Setting this property to a null reference (`Nothing`) clears the collection.","nodes":[{"content":"If setting this property, the value or values are added to the <ph id=\"ph1\">&lt;xref href=\"System.DirectoryServices.PropertyValueCollection\"&gt;&lt;/xref&gt;</ph>.","pos":[0,133],"source":"If setting this property, the value or values are added to the <xref href=\"System.DirectoryServices.PropertyValueCollection\"></xref>."},{"content":"Setting this property to a null reference (<ph id=\"ph1\">`Nothing`</ph>) clears the collection.","pos":[134,210],"source":" Setting this property to a null reference (`Nothing`) clears the collection."}]}],"pos":[32074,32571],"yaml":true}],"content":"### YamlMime:ManagedReference\nitems:\n- uid: System.DirectoryServices.PropertyValueCollection\n  commentId: T:System.DirectoryServices.PropertyValueCollection\n  id: PropertyValueCollection\n  children:\n  - System.DirectoryServices.PropertyValueCollection.Add(System.Object)\n  - System.DirectoryServices.PropertyValueCollection.AddRange(System.DirectoryServices.PropertyValueCollection)\n  - System.DirectoryServices.PropertyValueCollection.AddRange(System.Object[])\n  - System.DirectoryServices.PropertyValueCollection.Contains(System.Object)\n  - System.DirectoryServices.PropertyValueCollection.CopyTo(System.Object[],System.Int32)\n  - System.DirectoryServices.PropertyValueCollection.IndexOf(System.Object)\n  - System.DirectoryServices.PropertyValueCollection.Insert(System.Int32,System.Object)\n  - System.DirectoryServices.PropertyValueCollection.Item(System.Int32)\n  - System.DirectoryServices.PropertyValueCollection.OnClearComplete\n  - System.DirectoryServices.PropertyValueCollection.OnInsertComplete(System.Int32,System.Object)\n  - System.DirectoryServices.PropertyValueCollection.OnRemoveComplete(System.Int32,System.Object)\n  - System.DirectoryServices.PropertyValueCollection.OnSetComplete(System.Int32,System.Object,System.Object)\n  - System.DirectoryServices.PropertyValueCollection.PropertyName\n  - System.DirectoryServices.PropertyValueCollection.Remove(System.Object)\n  - System.DirectoryServices.PropertyValueCollection.Value\n  langs:\n  - csharp\n  name: PropertyValueCollection\n  nameWithType: PropertyValueCollection\n  fullName: System.DirectoryServices.PropertyValueCollection\n  type: Class\n  assemblies:\n  - System.DirectoryServices\n  namespace: System.DirectoryServices\n  summary: Contains the values of a <xref href=\"System.DirectoryServices.DirectoryEntry\"></xref> property.\n  syntax:\n    content: 'public class PropertyValueCollection : System.Collections.CollectionBase'\n  inheritance:\n  - System.Object\n  - System.Collections.CollectionBase\n  implements: []\n  inheritedMembers:\n  - System.Collections.CollectionBase.Capacity\n  - System.Collections.CollectionBase.Clear\n  - System.Collections.CollectionBase.Count\n  - System.Collections.CollectionBase.GetEnumerator\n  - System.Collections.CollectionBase.InnerList\n  - System.Collections.CollectionBase.List\n  - System.Collections.CollectionBase.OnClear\n  - System.Collections.CollectionBase.OnInsert(System.Int32,System.Object)\n  - System.Collections.CollectionBase.OnRemove(System.Int32,System.Object)\n  - System.Collections.CollectionBase.OnSet(System.Int32,System.Object,System.Object)\n  - System.Collections.CollectionBase.OnValidate(System.Object)\n  - System.Collections.CollectionBase.RemoveAt(System.Int32)\n  - System.Collections.CollectionBase.System#Collections#ICollection#CopyTo(System.Array,System.Int32)\n  - System.Collections.CollectionBase.System#Collections#ICollection#IsSynchronized\n  - System.Collections.CollectionBase.System#Collections#ICollection#SyncRoot\n  - System.Collections.CollectionBase.System#Collections#IList#Add(System.Object)\n  - System.Collections.CollectionBase.System#Collections#IList#Contains(System.Object)\n  - System.Collections.CollectionBase.System#Collections#IList#IndexOf(System.Object)\n  - System.Collections.CollectionBase.System#Collections#IList#Insert(System.Int32,System.Object)\n  - System.Collections.CollectionBase.System#Collections#IList#IsFixedSize\n  - System.Collections.CollectionBase.System#Collections#IList#IsReadOnly\n  - System.Collections.CollectionBase.System#Collections#IList#Item(System.Int32)\n  - System.Collections.CollectionBase.System#Collections#IList#Remove(System.Object)\n  - System.Object.Equals(System.Object)\n  - System.Object.Equals(System.Object,System.Object)\n  - System.Object.GetHashCode\n  - System.Object.GetType\n  - System.Object.MemberwiseClone\n  - System.Object.ReferenceEquals(System.Object,System.Object)\n  - System.Object.ToString\n  extensionMethods:\n  - System.Linq.Enumerable.Cast``1(System.Collections.IEnumerable)\n  - System.Linq.Enumerable.OfType``1(System.Collections.IEnumerable)\n  - System.Linq.ParallelEnumerable.AsParallel(System.Collections.IEnumerable)\n  - System.Linq.Queryable.AsQueryable(System.Collections.IEnumerable)\n  version:\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  monikers:\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.DirectoryServices/PropertyValueCollection.xml\n  author: BrucePerlerMS\n  ms.author: bruceper\n  manager: mbaldwin\n- uid: System.DirectoryServices.PropertyValueCollection.Add(System.Object)\n  commentId: M:System.DirectoryServices.PropertyValueCollection.Add(System.Object)\n  id: Add(System.Object)\n  parent: System.DirectoryServices.PropertyValueCollection\n  langs:\n  - csharp\n  name: Add(Object)\n  nameWithType: PropertyValueCollection.Add(Object)\n  fullName: PropertyValueCollection.Add(Object)\n  type: Method\n  assemblies:\n  - System.DirectoryServices\n  namespace: System.DirectoryServices\n  summary: Appends the specified <xref href=\"System.DirectoryServices.PropertyValueCollection\"></xref> object to this collection.\n  syntax:\n    content: public int Add (object value);\n    parameters:\n    - id: value\n      type: System.Object\n      description: The <xref href=\"System.DirectoryServices.PropertyValueCollection\"></xref> object to append to this collection.\n    return:\n      type: System.Int32\n      description: The zero-based index of the <xref href=\"System.DirectoryServices.PropertyValueCollection\"></xref> object that is appended to this collection.\n  overload: System.DirectoryServices.PropertyValueCollection.Add*\n  exceptions:\n  - type: System.Runtime.InteropServices.COMException\n    commentId: T:System.Runtime.InteropServices.COMException\n    description: An error occurred during the call to the underlying interface.\n  - type: System.ArgumentNullException\n    commentId: T:System.ArgumentNullException\n    description: The property value is a null reference (`Nothing` in Visual Basic).\n  version:\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  monikers:\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.DirectoryServices/PropertyValueCollection.xml\n  author: BrucePerlerMS\n  ms.author: bruceper\n  manager: mbaldwin\n- uid: System.DirectoryServices.PropertyValueCollection.AddRange(System.DirectoryServices.PropertyValueCollection)\n  commentId: M:System.DirectoryServices.PropertyValueCollection.AddRange(System.DirectoryServices.PropertyValueCollection)\n  id: AddRange(System.DirectoryServices.PropertyValueCollection)\n  parent: System.DirectoryServices.PropertyValueCollection\n  langs:\n  - csharp\n  name: AddRange(PropertyValueCollection)\n  nameWithType: PropertyValueCollection.AddRange(PropertyValueCollection)\n  fullName: PropertyValueCollection.AddRange(PropertyValueCollection)\n  type: Method\n  assemblies:\n  - System.DirectoryServices\n  namespace: System.DirectoryServices\n  summary: Appends the contents of the <xref href=\"System.DirectoryServices.PropertyValueCollection\"></xref> object to this collection.\n  syntax:\n    content: public void AddRange (System.DirectoryServices.PropertyValueCollection value);\n    parameters:\n    - id: value\n      type: System.DirectoryServices.PropertyValueCollection\n      description: A <xref href=\"System.DirectoryServices.PropertyValueCollection\"></xref> object that contains the objects to append to this collection.\n  overload: System.DirectoryServices.PropertyValueCollection.AddRange*\n  exceptions:\n  - type: System.ArgumentNullException\n    commentId: T:System.ArgumentNullException\n    description: The property value is a null reference (`Nothing` in Visual Basic).\n  version:\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  monikers:\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.DirectoryServices/PropertyValueCollection.xml\n  author: BrucePerlerMS\n  ms.author: bruceper\n  manager: mbaldwin\n- uid: System.DirectoryServices.PropertyValueCollection.AddRange(System.Object[])\n  commentId: M:System.DirectoryServices.PropertyValueCollection.AddRange(System.Object[])\n  id: AddRange(System.Object[])\n  parent: System.DirectoryServices.PropertyValueCollection\n  langs:\n  - csharp\n  name: AddRange(Object[])\n  nameWithType: PropertyValueCollection.AddRange(Object[])\n  fullName: PropertyValueCollection.AddRange(Object[])\n  type: Method\n  assemblies:\n  - System.DirectoryServices\n  namespace: System.DirectoryServices\n  summary: Appends the contents of the specified <xref href=\"System.DirectoryServices.PropertyValueCollection\"></xref> object to this collection.\n  syntax:\n    content: public void AddRange (object[] value);\n    parameters:\n    - id: value\n      type: System.Object[]\n      description: The <xref href=\"System.DirectoryServices.PropertyValueCollection\"></xref> array that contains the objects to append to this collection.\n  overload: System.DirectoryServices.PropertyValueCollection.AddRange*\n  exceptions:\n  - type: System.ArgumentNullException\n    commentId: T:System.ArgumentNullException\n    description: The property value is a null reference (`Nothing` in Visual Basic).\n  version:\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  monikers:\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.DirectoryServices/PropertyValueCollection.xml\n  author: BrucePerlerMS\n  ms.author: bruceper\n  manager: mbaldwin\n- uid: System.DirectoryServices.PropertyValueCollection.Contains(System.Object)\n  commentId: M:System.DirectoryServices.PropertyValueCollection.Contains(System.Object)\n  id: Contains(System.Object)\n  parent: System.DirectoryServices.PropertyValueCollection\n  langs:\n  - csharp\n  name: Contains(Object)\n  nameWithType: PropertyValueCollection.Contains(Object)\n  fullName: PropertyValueCollection.Contains(Object)\n  type: Method\n  assemblies:\n  - System.DirectoryServices\n  namespace: System.DirectoryServices\n  summary: Determines whether the specified <xref href=\"System.DirectoryServices.PropertyValueCollection\"></xref> object is in this collection.\n  syntax:\n    content: public bool Contains (object value);\n    parameters:\n    - id: value\n      type: System.Object\n      description: The <xref href=\"System.DirectoryServices.PropertyValueCollection\"></xref> object to search for in this collection.\n    return:\n      type: System.Boolean\n      description: '`true` if the specified property belongs to this collection; otherwise, `false`.'\n  overload: System.DirectoryServices.PropertyValueCollection.Contains*\n  exceptions: []\n  version:\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  monikers:\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.DirectoryServices/PropertyValueCollection.xml\n  author: BrucePerlerMS\n  ms.author: bruceper\n  manager: mbaldwin\n- uid: System.DirectoryServices.PropertyValueCollection.CopyTo(System.Object[],System.Int32)\n  commentId: M:System.DirectoryServices.PropertyValueCollection.CopyTo(System.Object[],System.Int32)\n  id: CopyTo(System.Object[],System.Int32)\n  parent: System.DirectoryServices.PropertyValueCollection\n  langs:\n  - csharp\n  name: CopyTo(Object[], Int32)\n  nameWithType: PropertyValueCollection.CopyTo(Object[], Int32)\n  fullName: PropertyValueCollection.CopyTo(Object[], Int32)\n  type: Method\n  assemblies:\n  - System.DirectoryServices\n  namespace: System.DirectoryServices\n  summary: Copies all <xref href=\"System.DirectoryServices.PropertyValueCollection\"></xref> objects in this collection to the specified array, starting at the specified index in the target array.\n  syntax:\n    content: public void CopyTo (object[] array, int index);\n    parameters:\n    - id: array\n      type: System.Object[]\n      description: The array of <xref href=\"System.DirectoryServices.PropertyValueCollection\"></xref> objects that receives the elements of this collection.\n    - id: index\n      type: System.Int32\n      description: The zero-based index in <code>array</code> where this method starts copying this collection.\n  overload: System.DirectoryServices.PropertyValueCollection.CopyTo*\n  exceptions: []\n  version:\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  monikers:\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.DirectoryServices/PropertyValueCollection.xml\n  author: BrucePerlerMS\n  ms.author: bruceper\n  manager: mbaldwin\n- uid: System.DirectoryServices.PropertyValueCollection.IndexOf(System.Object)\n  commentId: M:System.DirectoryServices.PropertyValueCollection.IndexOf(System.Object)\n  id: IndexOf(System.Object)\n  parent: System.DirectoryServices.PropertyValueCollection\n  langs:\n  - csharp\n  name: IndexOf(Object)\n  nameWithType: PropertyValueCollection.IndexOf(Object)\n  fullName: PropertyValueCollection.IndexOf(Object)\n  type: Method\n  assemblies:\n  - System.DirectoryServices\n  namespace: System.DirectoryServices\n  summary: Retrieves the index of a specified property value in this collection.\n  syntax:\n    content: public int IndexOf (object value);\n    parameters:\n    - id: value\n      type: System.Object\n      description: The property value to find.\n    return:\n      type: System.Int32\n      description: The zero-based index of the specified property value. If the object is not found, the return value is -1.\n  overload: System.DirectoryServices.PropertyValueCollection.IndexOf*\n  exceptions: []\n  version:\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  monikers:\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.DirectoryServices/PropertyValueCollection.xml\n  author: BrucePerlerMS\n  ms.author: bruceper\n  manager: mbaldwin\n- uid: System.DirectoryServices.PropertyValueCollection.Insert(System.Int32,System.Object)\n  commentId: M:System.DirectoryServices.PropertyValueCollection.Insert(System.Int32,System.Object)\n  id: Insert(System.Int32,System.Object)\n  parent: System.DirectoryServices.PropertyValueCollection\n  langs:\n  - csharp\n  name: Insert(Int32, Object)\n  nameWithType: PropertyValueCollection.Insert(Int32, Object)\n  fullName: PropertyValueCollection.Insert(Int32, Object)\n  type: Method\n  assemblies:\n  - System.DirectoryServices\n  namespace: System.DirectoryServices\n  summary: Inserts a property value into this collection at a specified index.\n  syntax:\n    content: public void Insert (int index, object value);\n    parameters:\n    - id: index\n      type: System.Int32\n      description: The zero-based index at which to insert the property value.\n    - id: value\n      type: System.Object\n      description: The property value to insert.\n  overload: System.DirectoryServices.PropertyValueCollection.Insert*\n  exceptions:\n  - type: System.ArgumentNullException\n    commentId: T:System.ArgumentNullException\n    description: The property value is a null reference (`Nothing` in Visual Basic).\n  - type: System.Runtime.InteropServices.COMException\n    commentId: T:System.Runtime.InteropServices.COMException\n    description: An error occurred during the call to the underlying interface.\n  - type: System.IndexOutOfRangeException\n    commentId: T:System.IndexOutOfRangeException\n    description: The index is less than 0 (zero) or greater than the size of the collection.\n  version:\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  monikers:\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.DirectoryServices/PropertyValueCollection.xml\n  author: BrucePerlerMS\n  ms.author: bruceper\n  manager: mbaldwin\n- uid: System.DirectoryServices.PropertyValueCollection.Item(System.Int32)\n  commentId: P:System.DirectoryServices.PropertyValueCollection.Item(System.Int32)\n  id: Item(System.Int32)\n  parent: System.DirectoryServices.PropertyValueCollection\n  langs:\n  - csharp\n  name: Item(Int32)\n  nameWithType: PropertyValueCollection.Item(Int32)\n  fullName: PropertyValueCollection.Item(Int32)\n  type: Property\n  assemblies:\n  - System.DirectoryServices\n  namespace: System.DirectoryServices\n  summary: Gets or sets the property value that is located at a specified index of this collection.\n  remarks: \"In C#, this property is the indexer for the <xref:System.DirectoryServices.PropertyValueCollection> class.  \\n  \\n In JScript, you can use the default indexed properties defined by a type, but you cannot explicitly define your own. However, specifying the expando attribute on a class automatically provides a default indexed property whose type is Object and whose index type is <xref:System.String>.\"\n  syntax:\n    content: public object this[int index] { get; set; }\n    parameters:\n    - id: index\n      type: System.Int32\n      description: The zero-based index of the property value.\n    return:\n      type: System.Object\n      description: The property value at the specified index.\n  overload: System.DirectoryServices.PropertyValueCollection.Item*\n  exceptions:\n  - type: System.ArgumentNullException\n    commentId: T:System.ArgumentNullException\n    description: The property value is a null reference (`Nothing` in Visual Basic).\n  - type: System.IndexOutOfRangeException\n    commentId: T:System.IndexOutOfRangeException\n    description: The index is less than zero (0) or greater than the size of the collection.\n  version:\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  monikers:\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.DirectoryServices/PropertyValueCollection.xml\n  author: BrucePerlerMS\n  ms.author: bruceper\n  manager: mbaldwin\n- uid: System.DirectoryServices.PropertyValueCollection.OnClearComplete\n  commentId: M:System.DirectoryServices.PropertyValueCollection.OnClearComplete\n  id: OnClearComplete\n  parent: System.DirectoryServices.PropertyValueCollection\n  langs:\n  - csharp\n  name: OnClearComplete()\n  nameWithType: PropertyValueCollection.OnClearComplete()\n  fullName: PropertyValueCollection.OnClearComplete()\n  type: Method\n  assemblies:\n  - System.DirectoryServices\n  namespace: System.DirectoryServices\n  summary: Overrides the <xref href=\"System.Collections.CollectionBase.OnClearComplete\"></xref> method.\n  syntax:\n    content: protected override void OnClearComplete ();\n    parameters: []\n  overload: System.DirectoryServices.PropertyValueCollection.OnClearComplete*\n  exceptions: []\n  version:\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  monikers:\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.DirectoryServices/PropertyValueCollection.xml\n  author: BrucePerlerMS\n  ms.author: bruceper\n  manager: mbaldwin\n- uid: System.DirectoryServices.PropertyValueCollection.OnInsertComplete(System.Int32,System.Object)\n  commentId: M:System.DirectoryServices.PropertyValueCollection.OnInsertComplete(System.Int32,System.Object)\n  id: OnInsertComplete(System.Int32,System.Object)\n  parent: System.DirectoryServices.PropertyValueCollection\n  langs:\n  - csharp\n  name: OnInsertComplete(Int32, Object)\n  nameWithType: PropertyValueCollection.OnInsertComplete(Int32, Object)\n  fullName: PropertyValueCollection.OnInsertComplete(Int32, Object)\n  type: Method\n  assemblies:\n  - System.DirectoryServices\n  namespace: System.DirectoryServices\n  summary: Overrides the <xref href=\"System.Collections.CollectionBase.OnInsertComplete(System.Int32,System.Object)\"></xref> method.\n  syntax:\n    content: protected override void OnInsertComplete (int index, object value);\n    parameters:\n    - id: index\n      type: System.Int32\n      description: The zero-based index at which to insert <code>value</code>.\n    - id: value\n      type: System.Object\n      description: The new value of the element at <code>index</code>.\n  overload: System.DirectoryServices.PropertyValueCollection.OnInsertComplete*\n  exceptions: []\n  version:\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  monikers:\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.DirectoryServices/PropertyValueCollection.xml\n  author: BrucePerlerMS\n  ms.author: bruceper\n  manager: mbaldwin\n- uid: System.DirectoryServices.PropertyValueCollection.OnRemoveComplete(System.Int32,System.Object)\n  commentId: M:System.DirectoryServices.PropertyValueCollection.OnRemoveComplete(System.Int32,System.Object)\n  id: OnRemoveComplete(System.Int32,System.Object)\n  parent: System.DirectoryServices.PropertyValueCollection\n  langs:\n  - csharp\n  name: OnRemoveComplete(Int32, Object)\n  nameWithType: PropertyValueCollection.OnRemoveComplete(Int32, Object)\n  fullName: PropertyValueCollection.OnRemoveComplete(Int32, Object)\n  type: Method\n  assemblies:\n  - System.DirectoryServices\n  namespace: System.DirectoryServices\n  summary: Overrides the <xref href=\"System.Collections.CollectionBase.OnRemoveComplete(System.Int32,System.Object)\"></xref> method.\n  syntax:\n    content: protected override void OnRemoveComplete (int index, object value);\n    parameters:\n    - id: index\n      type: System.Int32\n      description: The zero-based index at which value can be found.\n    - id: value\n      type: System.Object\n      description: The value of the element to remove from <code>index</code>.\n  overload: System.DirectoryServices.PropertyValueCollection.OnRemoveComplete*\n  exceptions: []\n  version:\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  monikers:\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.DirectoryServices/PropertyValueCollection.xml\n  author: BrucePerlerMS\n  ms.author: bruceper\n  manager: mbaldwin\n- uid: System.DirectoryServices.PropertyValueCollection.OnSetComplete(System.Int32,System.Object,System.Object)\n  commentId: M:System.DirectoryServices.PropertyValueCollection.OnSetComplete(System.Int32,System.Object,System.Object)\n  id: OnSetComplete(System.Int32,System.Object,System.Object)\n  parent: System.DirectoryServices.PropertyValueCollection\n  langs:\n  - csharp\n  name: OnSetComplete(Int32, Object, Object)\n  nameWithType: PropertyValueCollection.OnSetComplete(Int32, Object, Object)\n  fullName: PropertyValueCollection.OnSetComplete(Int32, Object, Object)\n  type: Method\n  assemblies:\n  - System.DirectoryServices\n  namespace: System.DirectoryServices\n  summary: Overrides the <xref href=\"System.Collections.CollectionBase.OnSetComplete(System.Int32,System.Object,System.Object)\"></xref> method.\n  syntax:\n    content: protected override void OnSetComplete (int index, object oldValue, object newValue);\n    parameters:\n    - id: index\n      type: System.Int32\n      description: The zero-based index at which <code>oldValue</code> can be found.\n    - id: oldValue\n      type: System.Object\n      description: The value to replace with <code>newValue</code>.\n    - id: newValue\n      type: System.Object\n      description: The new value of the element at <code>index</code>.\n  overload: System.DirectoryServices.PropertyValueCollection.OnSetComplete*\n  exceptions: []\n  version:\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  monikers:\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.DirectoryServices/PropertyValueCollection.xml\n  author: BrucePerlerMS\n  ms.author: bruceper\n  manager: mbaldwin\n- uid: System.DirectoryServices.PropertyValueCollection.PropertyName\n  commentId: P:System.DirectoryServices.PropertyValueCollection.PropertyName\n  id: PropertyName\n  parent: System.DirectoryServices.PropertyValueCollection\n  langs:\n  - csharp\n  name: PropertyName\n  nameWithType: PropertyValueCollection.PropertyName\n  fullName: PropertyValueCollection.PropertyName\n  type: Property\n  assemblies:\n  - System.DirectoryServices\n  namespace: System.DirectoryServices\n  summary: Gets the property name for the attributes in the value collection.\n  syntax:\n    content: >-\n      [System.Runtime.InteropServices.ComVisible(false)]\n\n      public string PropertyName { get; }\n    return:\n      type: System.String\n      description: A string that contains the name of the property with the values that are included in this <xref href=\"System.DirectoryServices.PropertyValueCollection\"></xref> object.\n  overload: System.DirectoryServices.PropertyValueCollection.PropertyName*\n  exceptions: []\n  attributes:\n  - type: System.Runtime.InteropServices.ComVisibleAttribute\n  version:\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  monikers:\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.DirectoryServices/PropertyValueCollection.xml\n  author: BrucePerlerMS\n  ms.author: bruceper\n  manager: mbaldwin\n- uid: System.DirectoryServices.PropertyValueCollection.Remove(System.Object)\n  commentId: M:System.DirectoryServices.PropertyValueCollection.Remove(System.Object)\n  id: Remove(System.Object)\n  parent: System.DirectoryServices.PropertyValueCollection\n  langs:\n  - csharp\n  name: Remove(Object)\n  nameWithType: PropertyValueCollection.Remove(Object)\n  fullName: PropertyValueCollection.Remove(Object)\n  type: Method\n  assemblies:\n  - System.DirectoryServices\n  namespace: System.DirectoryServices\n  summary: Removes a specified property value from this collection.\n  remarks: When working with a multi-valued string property value, the <xref:System.DirectoryServices.PropertyValueCollection.Remove%2A> method will successfully remove the correct item. However, identifying the correct items by name is difficult with a multi-valued DNWithString property value (as the DNWithString COM class, which is used to store the DNWithString items, has 2 string properties representing the item). The way to remove such items is to find the object in the collection (by looping thru all the items), then call the <xref:System.DirectoryServices.PropertyValueCollection.Remove%2A> function with the object's pointer that you just found.  This is illustrated in the example below.\n  example:\n  - \"```csharp  \\n  \\n// Bind to the AD object  \\nDirectoryEntry myUser = new DirectoryEntry(\\\"LDAP://AdServer:389/CN=MyUsername,CN=Users,DC=contoso,DC=com\\\");  \\n  \\n// Get the attribute  \\nPropertyValueCollection testAttribute = myUser.Properties[\\\"someAttribute\\\"];  \\n  \\n// Find the item in the collection that we want to delete  \\nDNWithString dnwsItemToRemove = null;  \\nforeach (DNWithString dnwsItem in testAttribute)  \\n{  \\n    if (dnwsItem.StringValue.Equals(\\\"SomeValue\\\"))  \\n    {  \\n        dnwsItemToRemove = dnwsItem;  \\n        break;  \\n    }  \\n}  \\n  \\n// Delete it  \\ntestAttribute.Remove(dnwsItemToRemove);  \\n  \\n// Store the data  \\nmyUser.CommitChanges();  \\n```\"\n  syntax:\n    content: public void Remove (object value);\n    parameters:\n    - id: value\n      type: System.Object\n      description: The property value to remove.\n  overload: System.DirectoryServices.PropertyValueCollection.Remove*\n  exceptions:\n  - type: System.ArgumentNullException\n    commentId: T:System.ArgumentNullException\n    description: The property value is a null reference (`Nothing` in Visual Basic).\n  - type: System.Runtime.InteropServices.COMException\n    commentId: T:System.Runtime.InteropServices.COMException\n    description: An error occurred during the call to the underlying interface.\n  version:\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  monikers:\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.DirectoryServices/PropertyValueCollection.xml\n  author: BrucePerlerMS\n  ms.author: bruceper\n  manager: mbaldwin\n- uid: System.DirectoryServices.PropertyValueCollection.Value\n  commentId: P:System.DirectoryServices.PropertyValueCollection.Value\n  id: Value\n  parent: System.DirectoryServices.PropertyValueCollection\n  langs:\n  - csharp\n  name: Value\n  nameWithType: PropertyValueCollection.Value\n  fullName: PropertyValueCollection.Value\n  type: Property\n  assemblies:\n  - System.DirectoryServices\n  namespace: System.DirectoryServices\n  summary: Gets or sets the values of the collection.\n  remarks: To add multiple values, set this property to an array of the values.\n  syntax:\n    content: public object Value { get; set; }\n    return:\n      type: System.Object\n      description: \"If the collection is empty, the property value is a null reference (`Nothing` in Visual Basic). If the collection contains one value, the property value is that value. If the collection contains multiple values, the property value equals a copy of an array of those values.  \\n  \\n If setting this property, the value or values are added to the <xref href=\\\"System.DirectoryServices.PropertyValueCollection\\\"></xref>. Setting this property to a null reference (`Nothing`) clears the collection.\"\n  overload: System.DirectoryServices.PropertyValueCollection.Value*\n  exceptions: []\n  version:\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  monikers:\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.DirectoryServices/PropertyValueCollection.xml\n  author: BrucePerlerMS\n  ms.author: bruceper\n  manager: mbaldwin\nreferences:\n- uid: System.Collections.CollectionBase\n  parent: System.Collections\n  isExternal: false\n  name: CollectionBase\n  nameWithType: CollectionBase\n  fullName: System.Collections.CollectionBase\n- uid: System.Runtime.InteropServices.COMException\n  parent: System.Runtime.InteropServices\n  isExternal: false\n  name: COMException\n  nameWithType: COMException\n  fullName: System.Runtime.InteropServices.COMException\n- uid: System.ArgumentNullException\n  parent: System\n  isExternal: false\n  name: ArgumentNullException\n  nameWithType: ArgumentNullException\n  fullName: System.ArgumentNullException\n- uid: System.IndexOutOfRangeException\n  parent: System\n  isExternal: false\n  name: IndexOutOfRangeException\n  nameWithType: IndexOutOfRangeException\n  fullName: System.IndexOutOfRangeException\n- uid: System.DirectoryServices.PropertyValueCollection.Add(System.Object)\n  parent: System.DirectoryServices.PropertyValueCollection\n  isExternal: false\n  name: Add(Object)\n  nameWithType: PropertyValueCollection.Add(Object)\n  fullName: PropertyValueCollection.Add(Object)\n- uid: System.Int32\n  parent: System\n  isExternal: false\n  name: Int32\n  nameWithType: Int32\n  fullName: System.Int32\n- uid: System.Object\n  parent: System\n  isExternal: false\n  name: Object\n  nameWithType: Object\n  fullName: System.Object\n- uid: System.DirectoryServices.PropertyValueCollection.AddRange(System.DirectoryServices.PropertyValueCollection)\n  parent: System.DirectoryServices.PropertyValueCollection\n  isExternal: false\n  name: AddRange(PropertyValueCollection)\n  nameWithType: PropertyValueCollection.AddRange(PropertyValueCollection)\n  fullName: PropertyValueCollection.AddRange(PropertyValueCollection)\n- uid: System.DirectoryServices.PropertyValueCollection\n  parent: System.DirectoryServices\n  isExternal: false\n  name: PropertyValueCollection\n  nameWithType: PropertyValueCollection\n  fullName: System.DirectoryServices.PropertyValueCollection\n- uid: System.DirectoryServices.PropertyValueCollection.AddRange(System.Object[])\n  parent: System.DirectoryServices.PropertyValueCollection\n  isExternal: false\n  name: AddRange(Object[])\n  nameWithType: PropertyValueCollection.AddRange(Object[])\n  fullName: PropertyValueCollection.AddRange(Object[])\n- uid: System.Object[]\n  parent: System\n  isExternal: false\n  name: Object[]\n  nameWithType: Object[]\n  fullName: System.Object[]\n  spec.csharp:\n  - uid: System.Object\n    name: Object\n    nameWithType: Object\n    fullName: System.Object\n  - name: '[]'\n    nameWithType: '[]'\n    fullName: '[]'\n- uid: System.DirectoryServices.PropertyValueCollection.Contains(System.Object)\n  parent: System.DirectoryServices.PropertyValueCollection\n  isExternal: false\n  name: Contains(Object)\n  nameWithType: PropertyValueCollection.Contains(Object)\n  fullName: PropertyValueCollection.Contains(Object)\n- uid: System.Boolean\n  parent: System\n  isExternal: false\n  name: Boolean\n  nameWithType: Boolean\n  fullName: System.Boolean\n- uid: System.DirectoryServices.PropertyValueCollection.CopyTo(System.Object[],System.Int32)\n  parent: System.DirectoryServices.PropertyValueCollection\n  isExternal: false\n  name: CopyTo(Object[], Int32)\n  nameWithType: PropertyValueCollection.CopyTo(Object[], Int32)\n  fullName: PropertyValueCollection.CopyTo(Object[], Int32)\n- uid: System.DirectoryServices.PropertyValueCollection.IndexOf(System.Object)\n  parent: System.DirectoryServices.PropertyValueCollection\n  isExternal: false\n  name: IndexOf(Object)\n  nameWithType: PropertyValueCollection.IndexOf(Object)\n  fullName: PropertyValueCollection.IndexOf(Object)\n- uid: System.DirectoryServices.PropertyValueCollection.Insert(System.Int32,System.Object)\n  parent: System.DirectoryServices.PropertyValueCollection\n  isExternal: false\n  name: Insert(Int32, Object)\n  nameWithType: PropertyValueCollection.Insert(Int32, Object)\n  fullName: PropertyValueCollection.Insert(Int32, Object)\n- uid: System.DirectoryServices.PropertyValueCollection.Item(System.Int32)\n  parent: System.DirectoryServices.PropertyValueCollection\n  isExternal: false\n  name: Item(Int32)\n  nameWithType: PropertyValueCollection.Item(Int32)\n  fullName: PropertyValueCollection.Item(Int32)\n- uid: System.DirectoryServices.PropertyValueCollection.OnClearComplete\n  parent: System.DirectoryServices.PropertyValueCollection\n  isExternal: false\n  name: OnClearComplete()\n  nameWithType: PropertyValueCollection.OnClearComplete()\n  fullName: PropertyValueCollection.OnClearComplete()\n- uid: System.DirectoryServices.PropertyValueCollection.OnInsertComplete(System.Int32,System.Object)\n  parent: System.DirectoryServices.PropertyValueCollection\n  isExternal: false\n  name: OnInsertComplete(Int32, Object)\n  nameWithType: PropertyValueCollection.OnInsertComplete(Int32, Object)\n  fullName: PropertyValueCollection.OnInsertComplete(Int32, Object)\n- uid: System.DirectoryServices.PropertyValueCollection.OnRemoveComplete(System.Int32,System.Object)\n  parent: System.DirectoryServices.PropertyValueCollection\n  isExternal: false\n  name: OnRemoveComplete(Int32, Object)\n  nameWithType: PropertyValueCollection.OnRemoveComplete(Int32, Object)\n  fullName: PropertyValueCollection.OnRemoveComplete(Int32, Object)\n- uid: System.DirectoryServices.PropertyValueCollection.OnSetComplete(System.Int32,System.Object,System.Object)\n  parent: System.DirectoryServices.PropertyValueCollection\n  isExternal: false\n  name: OnSetComplete(Int32, Object, Object)\n  nameWithType: PropertyValueCollection.OnSetComplete(Int32, Object, Object)\n  fullName: PropertyValueCollection.OnSetComplete(Int32, Object, Object)\n- uid: System.DirectoryServices.PropertyValueCollection.PropertyName\n  parent: System.DirectoryServices.PropertyValueCollection\n  isExternal: false\n  name: PropertyName\n  nameWithType: PropertyValueCollection.PropertyName\n  fullName: PropertyValueCollection.PropertyName\n- uid: System.String\n  parent: System\n  isExternal: false\n  name: String\n  nameWithType: String\n  fullName: System.String\n- uid: System.DirectoryServices.PropertyValueCollection.Remove(System.Object)\n  parent: System.DirectoryServices.PropertyValueCollection\n  isExternal: false\n  name: Remove(Object)\n  nameWithType: PropertyValueCollection.Remove(Object)\n  fullName: PropertyValueCollection.Remove(Object)\n- uid: System.DirectoryServices.PropertyValueCollection.Value\n  parent: System.DirectoryServices.PropertyValueCollection\n  isExternal: false\n  name: Value\n  nameWithType: PropertyValueCollection.Value\n  fullName: PropertyValueCollection.Value\n- uid: System.DirectoryServices.PropertyValueCollection.Add*\n  parent: System.DirectoryServices.PropertyValueCollection\n  isExternal: false\n  name: Add\n  nameWithType: PropertyValueCollection.Add\n  fullName: PropertyValueCollection.Add\n  monikers:\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.DirectoryServices/PropertyValueCollection.xml\n- uid: System.DirectoryServices.PropertyValueCollection.AddRange*\n  parent: System.DirectoryServices.PropertyValueCollection\n  isExternal: false\n  name: AddRange\n  nameWithType: PropertyValueCollection.AddRange\n  fullName: PropertyValueCollection.AddRange\n  monikers:\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.DirectoryServices/PropertyValueCollection.xml\n- uid: System.DirectoryServices.PropertyValueCollection.Contains*\n  parent: System.DirectoryServices.PropertyValueCollection\n  isExternal: false\n  name: Contains\n  nameWithType: PropertyValueCollection.Contains\n  fullName: PropertyValueCollection.Contains\n  monikers:\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.DirectoryServices/PropertyValueCollection.xml\n- uid: System.DirectoryServices.PropertyValueCollection.CopyTo*\n  parent: System.DirectoryServices.PropertyValueCollection\n  isExternal: false\n  name: CopyTo\n  nameWithType: PropertyValueCollection.CopyTo\n  fullName: PropertyValueCollection.CopyTo\n  monikers:\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.DirectoryServices/PropertyValueCollection.xml\n- uid: System.DirectoryServices.PropertyValueCollection.IndexOf*\n  parent: System.DirectoryServices.PropertyValueCollection\n  isExternal: false\n  name: IndexOf\n  nameWithType: PropertyValueCollection.IndexOf\n  fullName: PropertyValueCollection.IndexOf\n  monikers:\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.DirectoryServices/PropertyValueCollection.xml\n- uid: System.DirectoryServices.PropertyValueCollection.Insert*\n  parent: System.DirectoryServices.PropertyValueCollection\n  isExternal: false\n  name: Insert\n  nameWithType: PropertyValueCollection.Insert\n  fullName: PropertyValueCollection.Insert\n  monikers:\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.DirectoryServices/PropertyValueCollection.xml\n- uid: System.DirectoryServices.PropertyValueCollection.Item*\n  parent: System.DirectoryServices.PropertyValueCollection\n  isExternal: false\n  name: Item\n  nameWithType: PropertyValueCollection.Item\n  fullName: PropertyValueCollection.Item\n  monikers:\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.DirectoryServices/PropertyValueCollection.xml\n- uid: System.DirectoryServices.PropertyValueCollection.OnClearComplete*\n  parent: System.DirectoryServices.PropertyValueCollection\n  isExternal: false\n  name: OnClearComplete\n  nameWithType: PropertyValueCollection.OnClearComplete\n  fullName: PropertyValueCollection.OnClearComplete\n  monikers:\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.DirectoryServices/PropertyValueCollection.xml\n- uid: System.DirectoryServices.PropertyValueCollection.OnInsertComplete*\n  parent: System.DirectoryServices.PropertyValueCollection\n  isExternal: false\n  name: OnInsertComplete\n  nameWithType: PropertyValueCollection.OnInsertComplete\n  fullName: PropertyValueCollection.OnInsertComplete\n  monikers:\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.DirectoryServices/PropertyValueCollection.xml\n- uid: System.DirectoryServices.PropertyValueCollection.OnRemoveComplete*\n  parent: System.DirectoryServices.PropertyValueCollection\n  isExternal: false\n  name: OnRemoveComplete\n  nameWithType: PropertyValueCollection.OnRemoveComplete\n  fullName: PropertyValueCollection.OnRemoveComplete\n  monikers:\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.DirectoryServices/PropertyValueCollection.xml\n- uid: System.DirectoryServices.PropertyValueCollection.OnSetComplete*\n  parent: System.DirectoryServices.PropertyValueCollection\n  isExternal: false\n  name: OnSetComplete\n  nameWithType: PropertyValueCollection.OnSetComplete\n  fullName: PropertyValueCollection.OnSetComplete\n  monikers:\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.DirectoryServices/PropertyValueCollection.xml\n- uid: System.DirectoryServices.PropertyValueCollection.PropertyName*\n  parent: System.DirectoryServices.PropertyValueCollection\n  isExternal: false\n  name: PropertyName\n  nameWithType: PropertyValueCollection.PropertyName\n  fullName: PropertyValueCollection.PropertyName\n  monikers:\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.DirectoryServices/PropertyValueCollection.xml\n- uid: System.DirectoryServices.PropertyValueCollection.Remove*\n  parent: System.DirectoryServices.PropertyValueCollection\n  isExternal: false\n  name: Remove\n  nameWithType: PropertyValueCollection.Remove\n  fullName: PropertyValueCollection.Remove\n  monikers:\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.DirectoryServices/PropertyValueCollection.xml\n- uid: System.DirectoryServices.PropertyValueCollection.Value*\n  parent: System.DirectoryServices.PropertyValueCollection\n  isExternal: false\n  name: Value\n  nameWithType: PropertyValueCollection.Value\n  fullName: PropertyValueCollection.Value\n  monikers:\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.DirectoryServices/PropertyValueCollection.xml\n- uid: System.Object.Equals(System.Object)\n  parent: System.Object\n  isExternal: false\n  name: Equals(Object)\n  nameWithType: Object.Equals(Object)\n  fullName: Object.Equals(Object)\n- uid: System.Object.Equals(System.Object,System.Object)\n  parent: System.Object\n  isExternal: false\n  name: Equals(Object, Object)\n  nameWithType: Object.Equals(Object, Object)\n  fullName: Object.Equals(Object, Object)\n- uid: System.Object.GetHashCode\n  parent: System.Object\n  isExternal: false\n  name: GetHashCode()\n  nameWithType: Object.GetHashCode()\n  fullName: Object.GetHashCode()\n- uid: System.Object.GetType\n  parent: System.Object\n  isExternal: false\n  name: GetType()\n  nameWithType: Object.GetType()\n  fullName: Object.GetType()\n- uid: System.Object.MemberwiseClone\n  parent: System.Object\n  isExternal: false\n  name: MemberwiseClone()\n  nameWithType: Object.MemberwiseClone()\n  fullName: Object.MemberwiseClone()\n- uid: System.Object.ReferenceEquals(System.Object,System.Object)\n  parent: System.Object\n  isExternal: false\n  name: ReferenceEquals(Object, Object)\n  nameWithType: Object.ReferenceEquals(Object, Object)\n  fullName: Object.ReferenceEquals(Object, Object)\n- uid: System.Object.ToString\n  parent: System.Object\n  isExternal: false\n  name: ToString()\n  nameWithType: Object.ToString()\n  fullName: Object.ToString()\n- uid: System.Collections.CollectionBase.Capacity\n  parent: System.Collections.CollectionBase\n  isExternal: false\n  name: Capacity\n  nameWithType: CollectionBase.Capacity\n  fullName: CollectionBase.Capacity\n- uid: System.Collections.CollectionBase.Clear\n  parent: System.Collections.CollectionBase\n  isExternal: false\n  name: Clear()\n  nameWithType: CollectionBase.Clear()\n  fullName: CollectionBase.Clear()\n- uid: System.Collections.CollectionBase.Count\n  parent: System.Collections.CollectionBase\n  isExternal: false\n  name: Count\n  nameWithType: CollectionBase.Count\n  fullName: CollectionBase.Count\n- uid: System.Collections.CollectionBase.GetEnumerator\n  parent: System.Collections.CollectionBase\n  isExternal: false\n  name: GetEnumerator()\n  nameWithType: CollectionBase.GetEnumerator()\n  fullName: CollectionBase.GetEnumerator()\n- uid: System.Collections.CollectionBase.InnerList\n  parent: System.Collections.CollectionBase\n  isExternal: false\n  name: InnerList\n  nameWithType: CollectionBase.InnerList\n  fullName: CollectionBase.InnerList\n- uid: System.Collections.CollectionBase.List\n  parent: System.Collections.CollectionBase\n  isExternal: false\n  name: List\n  nameWithType: CollectionBase.List\n  fullName: CollectionBase.List\n- uid: System.Collections.CollectionBase.OnClear\n  parent: System.Collections.CollectionBase\n  isExternal: false\n  name: OnClear()\n  nameWithType: CollectionBase.OnClear()\n  fullName: CollectionBase.OnClear()\n- uid: System.Collections.CollectionBase.OnInsert(System.Int32,System.Object)\n  parent: System.Collections.CollectionBase\n  isExternal: false\n  name: OnInsert(Int32, Object)\n  nameWithType: CollectionBase.OnInsert(Int32, Object)\n  fullName: CollectionBase.OnInsert(Int32, Object)\n- uid: System.Collections.CollectionBase.OnRemove(System.Int32,System.Object)\n  parent: System.Collections.CollectionBase\n  isExternal: false\n  name: OnRemove(Int32, Object)\n  nameWithType: CollectionBase.OnRemove(Int32, Object)\n  fullName: CollectionBase.OnRemove(Int32, Object)\n- uid: System.Collections.CollectionBase.OnSet(System.Int32,System.Object,System.Object)\n  parent: System.Collections.CollectionBase\n  isExternal: false\n  name: OnSet(Int32, Object, Object)\n  nameWithType: CollectionBase.OnSet(Int32, Object, Object)\n  fullName: CollectionBase.OnSet(Int32, Object, Object)\n- uid: System.Collections.CollectionBase.OnValidate(System.Object)\n  parent: System.Collections.CollectionBase\n  isExternal: false\n  name: OnValidate(Object)\n  nameWithType: CollectionBase.OnValidate(Object)\n  fullName: CollectionBase.OnValidate(Object)\n- uid: System.Collections.CollectionBase.RemoveAt(System.Int32)\n  parent: System.Collections.CollectionBase\n  isExternal: false\n  name: RemoveAt(Int32)\n  nameWithType: CollectionBase.RemoveAt(Int32)\n  fullName: CollectionBase.RemoveAt(Int32)\n- uid: System.Collections.CollectionBase.System#Collections#ICollection#CopyTo(System.Array,System.Int32)\n  parent: System.Collections.CollectionBase\n  isExternal: false\n  name: ICollection.CopyTo(Array, Int32)\n  nameWithType: CollectionBase.ICollection.CopyTo(Array, Int32)\n  fullName: CollectionBase.ICollection.CopyTo(Array, Int32)\n- uid: System.Collections.CollectionBase.System#Collections#ICollection#IsSynchronized\n  parent: System.Collections.CollectionBase\n  isExternal: false\n  name: ICollection.IsSynchronized\n  nameWithType: CollectionBase.ICollection.IsSynchronized\n  fullName: CollectionBase.ICollection.IsSynchronized\n- uid: System.Collections.CollectionBase.System#Collections#ICollection#SyncRoot\n  parent: System.Collections.CollectionBase\n  isExternal: false\n  name: ICollection.SyncRoot\n  nameWithType: CollectionBase.ICollection.SyncRoot\n  fullName: CollectionBase.ICollection.SyncRoot\n- uid: System.Collections.CollectionBase.System#Collections#IList#Add(System.Object)\n  parent: System.Collections.CollectionBase\n  isExternal: false\n  name: IList.Add(Object)\n  nameWithType: CollectionBase.IList.Add(Object)\n  fullName: CollectionBase.IList.Add(Object)\n- uid: System.Collections.CollectionBase.System#Collections#IList#Contains(System.Object)\n  parent: System.Collections.CollectionBase\n  isExternal: false\n  name: IList.Contains(Object)\n  nameWithType: CollectionBase.IList.Contains(Object)\n  fullName: CollectionBase.IList.Contains(Object)\n- uid: System.Collections.CollectionBase.System#Collections#IList#IndexOf(System.Object)\n  parent: System.Collections.CollectionBase\n  isExternal: false\n  name: IList.IndexOf(Object)\n  nameWithType: CollectionBase.IList.IndexOf(Object)\n  fullName: CollectionBase.IList.IndexOf(Object)\n- uid: System.Collections.CollectionBase.System#Collections#IList#Insert(System.Int32,System.Object)\n  parent: System.Collections.CollectionBase\n  isExternal: false\n  name: IList.Insert(Int32, Object)\n  nameWithType: CollectionBase.IList.Insert(Int32, Object)\n  fullName: CollectionBase.IList.Insert(Int32, Object)\n- uid: System.Collections.CollectionBase.System#Collections#IList#IsFixedSize\n  parent: System.Collections.CollectionBase\n  isExternal: false\n  name: IList.IsFixedSize\n  nameWithType: CollectionBase.IList.IsFixedSize\n  fullName: CollectionBase.IList.IsFixedSize\n- uid: System.Collections.CollectionBase.System#Collections#IList#IsReadOnly\n  parent: System.Collections.CollectionBase\n  isExternal: false\n  name: IList.IsReadOnly\n  nameWithType: CollectionBase.IList.IsReadOnly\n  fullName: CollectionBase.IList.IsReadOnly\n- uid: System.Collections.CollectionBase.System#Collections#IList#Item(System.Int32)\n  parent: System.Collections.CollectionBase\n  isExternal: false\n  name: IList.Item(Int32)\n  nameWithType: CollectionBase.IList.Item(Int32)\n  fullName: CollectionBase.IList.Item(Int32)\n- uid: System.Collections.CollectionBase.System#Collections#IList#Remove(System.Object)\n  parent: System.Collections.CollectionBase\n  isExternal: false\n  name: IList.Remove(Object)\n  nameWithType: CollectionBase.IList.Remove(Object)\n  fullName: CollectionBase.IList.Remove(Object)\n- uid: System.Linq.Enumerable.Cast``1(System.Collections.IEnumerable)\n  parent: System.Linq.Enumerable\n  isExternal: false\n  name: Cast<TResult>(IEnumerable)\n  nameWithType: Enumerable.Cast<TResult>(IEnumerable)\n  fullName: Enumerable.Cast<TResult>(IEnumerable)\n- uid: System.Linq.Enumerable.OfType``1(System.Collections.IEnumerable)\n  parent: System.Linq.Enumerable\n  isExternal: false\n  name: OfType<TResult>(IEnumerable)\n  nameWithType: Enumerable.OfType<TResult>(IEnumerable)\n  fullName: Enumerable.OfType<TResult>(IEnumerable)\n- uid: System.Linq.ParallelEnumerable.AsParallel(System.Collections.IEnumerable)\n  parent: System.Linq.ParallelEnumerable\n  isExternal: false\n  name: AsParallel(IEnumerable)\n  nameWithType: ParallelEnumerable.AsParallel(IEnumerable)\n  fullName: ParallelEnumerable.AsParallel(IEnumerable)\n- uid: System.Linq.Queryable.AsQueryable(System.Collections.IEnumerable)\n  parent: System.Linq.Queryable\n  isExternal: false\n  name: AsQueryable(IEnumerable)\n  nameWithType: Queryable.AsQueryable(IEnumerable)\n  fullName: Queryable.AsQueryable(IEnumerable)\n"}