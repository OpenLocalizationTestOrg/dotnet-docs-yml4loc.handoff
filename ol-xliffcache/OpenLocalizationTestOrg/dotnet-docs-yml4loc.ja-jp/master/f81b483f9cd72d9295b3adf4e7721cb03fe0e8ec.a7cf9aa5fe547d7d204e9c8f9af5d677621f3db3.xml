{"nodes":[{"content":"Represents a Boolean (`true` or `false`) value.","nodes":[{"pos":[0,47],"content":"Represents a Boolean (<ph id=\"ph1\">`true`</ph> or <ph id=\"ph2\">`false`</ph>) value.","source":"Represents a Boolean (`true` or `false`) value."}],"pos":[2055,2103],"yaml":true},{"content":"A <xref:System.Boolean> instance can have either of two values: `true`, or `false`.  \n  \n The <xref:System.Boolean> structure provides methods that support the following tasks:  \n  \n-   Converting Boolean values to strings: <xref:System.Boolean.ToString%2A>  \n  \n-   Parsing strings to convert them to Boolean values: <xref:System.Boolean.Parse%2A> and <xref:System.Boolean.TryParse%2A>  \n  \n-   Comparing values: <xref:System.Boolean.CompareTo%2A> and <xref:System.Boolean.Equals%2A>  \n  \n The following sections explain these tasks and other usage details:  \n  \n [Formatting Boolean values](#Formatting)   \n [Converting to and from Boolean values](#Converting)   \n [Parsing Boolean values](#Parsing)   \n [Comparing Boolean values](#Comparing)   \n [Working with Booleans as binary values](#Binary)   \n [Performing operations with Boolean values](#Operations)   \n [Booleans and Interop](#Interop)  \n  \n<a name=\"Formatting\"></a>   \n## Formatting Boolean values  \n The string representation of a <xref:System.Boolean> is either \"True\" for a `true` value or \"False\" for a `false` value. The string representation of a <xref:System.Boolean> value is defined by the read-only <xref:System.Boolean.TrueString> and <xref:System.Boolean.FalseString> fields.  \n  \n You use the <xref:System.Boolean.ToString%2A> method to convert Boolean values to strings. The Boolean structure includes two <xref:System.Boolean.ToString%2A> overloads: the parameterless <xref:System.Boolean.ToString> method and the <xref:System.Boolean.ToString%28System.IFormatProvider%29> method, which includes a parameter that controls formatting. However, because this parameter is ignored, the two overloads produce identical strings. The <xref:System.Boolean.ToString%28System.IFormatProvider%29> method does not support culture-sensitive formatting.  \n  \n The following example illustrates formatting with the <xref:System.Boolean.ToString%2A> method. Note that the example uses the [composite formatting](~/docs/standard/base-types/composite-formatting.md) feature, so the <xref:System.Boolean.ToString%2A> method is called implicitly.  \n  \n [!code-csharp[System.Boolean.Structure#3](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.boolean.structure/cs/tostring1.cs#3)]\n [!code-vb[System.Boolean.Structure#3](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.boolean.structure/vb/tostring1.vb#3)]  \n  \n Because the <xref:System.Boolean> structure can have only two values, it is easy to add custom formatting. For simple custom formatting in which other string literals are substituted for \"True\" and \"False\", you can use any conditional evaluation feature supported by your language, such as the [conditional operator](~/docs/csharp/language-reference/operators/conditional-operator.md) in C# or the [If operator](~/docs/visual-basic/language-reference/operators/if-operator.md) in Visual Basic. The following example uses this technique to format <xref:System.Boolean> values as \"Yes\" and \"No\" rather than \"True\" and \"False\".  \n  \n [!code-csharp[System.Boolean.Structure#4](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.boolean.structure/cs/tostring2.cs#4)]\n [!code-vb[System.Boolean.Structure#4](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.boolean.structure/vb/tostring2.vb#4)]  \n  \n For more complex custom formatting operations, including culture-sensitive formatting, you can call the <xref:System.String.Format%28System.IFormatProvider%2CSystem.String%2CSystem.Object%5B%5D%29?displayProperty=fullName> method and provide an <xref:System.ICustomFormatter> implementation. The following example implements the <xref:System.ICustomFormatter> and <xref:System.IFormatProvider> interfaces to provide culture-sensitive Boolean strings for the English (United States), French (France), and Russian (Russia) cultures.  \n  \n [!code-csharp[System.Boolean.Structure#5](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.boolean.structure/cs/format3.cs#5)]\n [!code-vb[System.Boolean.Structure#5](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.boolean.structure/vb/format3.vb#5)]  \n  \n Optionally, you can use [resource files](http://msdn.microsoft.com/library/8ad495d4-2941-40cf-bf64-e82e85825890) to define culture-specific Boolean strings.  \n  \n<a name=\"Converting\"></a>   \n## Converting to and from Boolean values  \n The <xref:System.Boolean> structure implements the <xref:System.IConvertible> interface.  As a result, you can use the <xref:System.Convert> class to perform conversions between a <xref:System.Boolean> value and any other primitive type in the .NET Framework, or you can call the <xref:System.Boolean> structure's explicit implementations. However, conversions between a <xref:System.Boolean> and the following types are not supported, so the corresponding conversion methods throw an <xref:System.InvalidCastException> exception:  \n  \n-   Conversion between <xref:System.Boolean> and <xref:System.Char> (the <xref:System.Convert.ToBoolean%28System.Char%29?displayProperty=fullName> and <xref:System.Convert.ToChar%28System.Boolean%29?displayProperty=fullName> methods)  \n  \n-   Conversion between <xref:System.Boolean> and <xref:System.DateTime> (the <xref:System.Convert.ToBoolean%28System.DateTime%29?displayProperty=fullName> and <xref:System.Convert.ToDateTime%28System.Boolean%29?displayProperty=fullName> methods)  \n  \n All conversions from integral or floating-point numbers to Boolean values convert non-zero values to `true` and zero values to `false`.  The following example illustrates this by calling selected overloads of the <xref:System.Convert.ToBoolean%2A?displayProperty=fullName> class.  \n  \n [!code-csharp[System.Boolean.Structure#6](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.boolean.structure/cs/conversion1.cs#6)]\n [!code-vb[System.Boolean.Structure#6](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.boolean.structure/vb/conversion1.vb#6)]  \n  \n When converting from floating-point values to Boolean values, the conversion methods perform an exact comparison with zero. If the floating-point value has lost precision, the result can be unexpected. This is illustrated in the following example, in which a <xref:System.Double> variable whose value should be zero is converted to a Boolean value. As the example shows, the result is `true` because repeated additions of 0.2 have resulted in a loss of precision.  \n  \n When converting from Boolean to numeric values, the conversion methods of the <xref:System.Convert> class convert `true` to 1 and `false` to 0. However, Visual Basic conversion functions convert `true` to either 255 (for conversions to <xref:System.Byte> values) or -1 (for all other numeric conversions). The following example converts `true` to numeric values by using a <xref:System.Convert> method, and, in the case of the Visual Basic example, by using the Visual Basic language's own conversion operator.  \n  \n [!code-csharp[System.Boolean.Structure#8](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.boolean.structure/cs/conversion3.cs#8)]\n [!code-vb[System.Boolean.Structure#8](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.boolean.structure/vb/conversion3.vb#8)]  \n  \n For conversions from <xref:System.Boolean> to string values, see the [Formatting Boolean Values](#Formatting) section. For conversions from strings to <xref:System.Boolean> values, see the [Parsing Boolean Values](#Parsing) section.  \n  \n<a name=\"Parsing\"></a>   \n## Parsing Boolean values  \n The <xref:System.Boolean> structure includes two static parsing methods, <xref:System.Boolean.Parse%2A> and <xref:System.Boolean.TryParse%2A>, that convert a string to a Boolean value. The string representation of a Boolean value is defined by the case-insensitive equivalents of the values of the <xref:System.Boolean.TrueString> and <xref:System.Boolean.FalseString> fields, which are \"True\" and \"False\", respectively. In other words, the only strings that parse successfully are \"True\", \"False\", \"true\", \"false\", or some mixed-case equivalent. You cannot successfully parse numeric strings such as \"0\" or \"1\". Leading or trailing white-space characters are not considered when performing the string comparison.  \n  \n The following example uses the <xref:System.Boolean.Parse%2A> and <xref:System.Boolean.TryParse%2A> methods to parse a number of strings. Note that only the case-insensitive equivalents of \"True\" and \"False\" can be successfully parsed.  \n  \n [!code-csharp[System.Boolean.Structure#2](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.boolean.structure/cs/parse2.cs#2)]\n [!code-vb[System.Boolean.Structure#2](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.boolean.structure/vb/parse2.vb#2)]  \n  \n If you are programming in Visual Basic, you can use the `CBool` function to convert the string representation of a number to a Boolean value. \"0\" is converted to `false`, and the string representation of any non-zero value is converted to `true`. If you are not programming in Visual Basic, you must convert your numeric string to a number before converting it to a Boolean. The following example illustrates this by converting an array of integers to Boolean values.  \n  \n [!code-csharp[System.Boolean.Structure#9](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.boolean.structure/cs/parse3.cs#9)]\n [!code-vb[System.Boolean.Structure#9](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.boolean.structure/vb/parse3.vb#9)]  \n  \n<a name=\"Comparing\"></a>   \n## Comparing Boolean values  \n Because Boolean values are either `true` or `false`, there is little reason to explicitly call the <xref:System.Boolean.CompareTo%2A> method, which indicates whether an instance is greater than, less than, or equal to a specified value. Typically, to compare two Boolean variables, you call the <xref:System.Boolean.Equals%2A> method or use your language's equality operator.  \n  \n However, when you want to compare a Boolean variable with the literal Boolean value `true` or `false`, it is not necessary to do an explicit comparison, because the result of evaluating a Boolean value is that Boolean value. For example, the expressions  \n  \n [!code-csharp[System.Boolean.Structure#12](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.boolean.structure/cs/operations1.cs#12)]\n [!code-vb[System.Boolean.Structure#12](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.boolean.structure/vb/operations1.vb#12)]  \n  \n and  \n  \n [!code-csharp[System.Boolean.Structure#13](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.boolean.structure/cs/operations2.cs#13)]\n [!code-vb[System.Boolean.Structure#13](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.boolean.structure/vb/operations2.vb#13)]  \n  \n are equivalent, but the second is more compact. However, both techniques offer comparable performance.  \n  \n<a name=\"Binary\"></a>   \n## Working with Booleans as binary values  \n A Boolean value occupies one byte of memory, as the following C# example shows. The example must be compiled with the `/unsafe` switch.  \n  \n [!code-csharp[System.Boolean.Structure#14](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.boolean.structure/cs/size1.cs#14)]  \n  \n The byte's low-order bit is used to represent its value. A value of 1 represents `true`; a value of 0 represents `false`.  \n  \n> [!WARNING]\n>  You can use the <xref:System.Collections.Specialized.BitVector32?displayProperty=fullName> structure to work with sets of Boolean values.  \n  \n You can convert a Boolean value to its binary representation by calling the <xref:System.BitConverter.GetBytes%28System.Boolean%29?displayProperty=fullName> method. The method returns a byte array with a single element. To restore a Boolean value from its binary representation, you can call the <xref:System.BitConverter.ToBoolean%28System.Byte%5B%5D%2CSystem.Int32%29?displayProperty=fullName> method.  \n  \n The following example calls the <xref:System.BitConverter.GetBytes%2A?displayProperty=fullName> method to convert a Boolean value to its binary representation and displays the individual bits of the value, and then calls the <xref:System.BitConverter.ToBoolean%2A?displayProperty=fullName> method to restore the value from its binary representation.  \n  \n [!code-csharp[System.Boolean.Structure#1](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.boolean.structure/cs/binary1.cs#1)]\n [!code-vb[System.Boolean.Structure#1](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.boolean.structure/vb/binary1.vb#1)]  \n  \n<a name=\"Operations\"></a>   \n## Performing operations with Boolean values  \n This section illustrates how Boolean values are used in apps. The first section discusses its use as a flag. The second illustrates its use for arithmetic operations.  \n  \n### Boolean values as flags  \n Boolean variables are most commonly used as flags, to signal the presence or absence of some condition. For example, in the <xref:System.String.Compare%28System.String%2CSystem.String%2CSystem.Boolean%29?displayProperty=fullName> method, the final parameter, `ignoreCase`, is a flag that indicates whether the comparison of two strings is case-insensitive (`ignoreCase` is `true`) or case-sensitive (`ignoreCase` is `false`). The value of the flag can then be evaluated in a conditional statement.  \n  \n The following example uses a simple console app to illustrate the use of Boolean variables as flags. The app accepts command-line parameters that enable output to be redirected to a specified file (the `/f` switch), and that enable output to be sent both to a specified file and to the console (the `/b` switch). The app defines a flag named `isRedirected` to indicate whether output is to be sent to a file, and a flag named `isBoth` to indicate that output should be sent to the console.  \n  \n [!code-csharp[System.Boolean.Structure#10](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.boolean.structure/cs/operations1.cs#10)]\n [!code-vb[System.Boolean.Structure#10](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.boolean.structure/vb/operations1.vb#10)]  \n  \n### Booleans and arithmetic operations  \n A Boolean value is sometimes used to indicate the presence of a condition that triggers a mathematical calculation. For example, a `hasShippingCharge` variable might serve as a flag to indicate whether to add shipping charges to an invoice amount.  \n  \n Because an operation with a `false` value has no effect on the result of an operation, it is not necessary to convert the Boolean to an integral value to use in the mathematical operation. Instead, you can use conditional logic.  \n  \n The following example computes an amount that consists of a subtotal, a shipping charge, and an optional service charge. The `hasServiceCharge` variable determines whether the service charge is applied. Instead of converting `hasServiceCharge` to a numeric value and multiplying it by the amount of the service charge, the example uses conditional logic to add the service charge amount if it is applicable.  \n  \n [!code-csharp[System.Boolean.Structure#13](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.boolean.structure/cs/operations2.cs#13)]\n [!code-vb[System.Boolean.Structure#13](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.boolean.structure/vb/operations2.vb#13)]  \n  \n<a name=\"Interop\"></a>   \n### Booleans and interop  \n While marshaling base data types to COM is generally straightforward, the <xref:System.Boolean> data type is an exception. You can apply the <xref:System.Runtime.InteropServices.MarshalAsAttribute> attribute to marshal the <xref:System.Boolean> type to any of the following representations:  \n  \n|Enumeration type|Unmanaged format|  \n|----------------------|----------------------|  \n|<xref:System.Runtime.InteropServices.UnmanagedType?displayProperty=fullName>|A 4-byte integer value, where any nonzero value represents `true` and 0 represents `false`. This is the default format of a <xref:System.Boolean> field in a structure and of a <xref:System.Boolean> parameter in platform invoke calls.|  \n|<xref:System.Runtime.InteropServices.UnmanagedType?displayProperty=fullName>|A 1-byte integer value, where the 1 represents `true` and 0 represents `false`.|  \n|<xref:System.Runtime.InteropServices.UnmanagedType?displayProperty=fullName>|A 2-byte integer value, where -1 represents `true` and 0 represents `false`. This is the default format of a <xref:System.Boolean> parameter in COM interop calls.|","nodes":[{"pos":[0,83],"content":"A <ph id=\"ph1\">&lt;xref:System.Boolean&gt;</ph> instance can have either of two values: <ph id=\"ph2\">`true`</ph>, or <ph id=\"ph3\">`false`</ph>.","source":"A <xref:System.Boolean> instance can have either of two values: `true`, or `false`."},{"pos":[90,176],"content":"The <xref:System.Boolean> structure provides methods that support the following tasks:","nodes":[{"content":"The <ph id=\"ph1\">&lt;xref:System.Boolean&gt;</ph> structure provides methods that support the following tasks:","pos":[0,86],"source":"The <xref:System.Boolean> structure provides methods that support the following tasks:"}]},{"pos":[186,257],"content":"Converting Boolean values to strings: <xref:System.Boolean.ToString%2A>","nodes":[{"content":"Converting Boolean values to strings: <ph id=\"ph1\">&lt;xref:System.Boolean.ToString%2A&gt;</ph>","pos":[0,71],"source":"Converting Boolean values to strings: <xref:System.Boolean.ToString%2A>"}]},{"pos":[267,386],"content":"Parsing strings to convert them to Boolean values: <xref:System.Boolean.Parse%2A> and <xref:System.Boolean.TryParse%2A>","nodes":[{"content":"Parsing strings to convert them to Boolean values: <ph id=\"ph1\">&lt;xref:System.Boolean.Parse%2A&gt;</ph> and <ph id=\"ph2\">&lt;xref:System.Boolean.TryParse%2A&gt;</ph>","pos":[0,119],"source":"Parsing strings to convert them to Boolean values: <xref:System.Boolean.Parse%2A> and <xref:System.Boolean.TryParse%2A>"}]},{"pos":[396,484],"content":"Comparing values: <xref:System.Boolean.CompareTo%2A> and <xref:System.Boolean.Equals%2A>","nodes":[{"content":"Comparing values: <ph id=\"ph1\">&lt;xref:System.Boolean.CompareTo%2A&gt;</ph> and <ph id=\"ph2\">&lt;xref:System.Boolean.Equals%2A&gt;</ph>","pos":[0,88],"source":"Comparing values: <xref:System.Boolean.CompareTo%2A> and <xref:System.Boolean.Equals%2A>"}]},{"pos":[491,558],"content":"The following sections explain these tasks and other usage details:","nodes":[{"content":"The following sections explain these tasks and other usage details:","pos":[0,67]}]},{"pos":[565,896],"content":"[Formatting Boolean values](#Formatting)   \n[Converting to and from Boolean values](#Converting)   \n[Parsing Boolean values](#Parsing)   \n[Comparing Boolean values](#Comparing)   \n[Working with Booleans as binary values](#Binary)   \n[Performing operations with Boolean values](#Operations)   \n[Booleans and Interop](#Interop)","leadings":[""," "," "," "," "," "," "],"nodes":[{"content":"<bpt id=\"p1\">[</bpt>Formatting Boolean values<ept id=\"p1\">](#Formatting)</ept><ph id=\"ph1\"> </ph>","pos":[0,41],"source":"[Formatting Boolean values](#Formatting) "},{"content":"<bpt id=\"p1\">[</bpt>Converting to and from Boolean values<ept id=\"p1\">](#Converting)</ept><ph id=\"ph1\"> </ph>","pos":[44,97],"source":"[Converting to and from Boolean values](#Converting) "},{"content":"<bpt id=\"p1\">[</bpt>Parsing Boolean values<ept id=\"p1\">](#Parsing)</ept><ph id=\"ph1\"> </ph>","pos":[100,135],"source":"[Parsing Boolean values](#Parsing) "},{"content":"<bpt id=\"p1\">[</bpt>Comparing Boolean values<ept id=\"p1\">](#Comparing)</ept><ph id=\"ph1\"> </ph>","pos":[138,177],"source":"[Comparing Boolean values](#Comparing) "},{"content":"<bpt id=\"p1\">[</bpt>Working with Booleans as binary values<ept id=\"p1\">](#Binary)</ept><ph id=\"ph1\"> </ph>","pos":[180,230],"source":"[Working with Booleans as binary values](#Binary) "},{"content":"<bpt id=\"p1\">[</bpt>Performing operations with Boolean values<ept id=\"p1\">](#Operations)</ept><ph id=\"ph1\"> </ph>","pos":[233,290],"source":"[Performing operations with Boolean values](#Operations) "},{"content":"<bpt id=\"p1\">[</bpt>Booleans and Interop<ept id=\"p1\">](#Interop)</ept>","pos":[293,325],"source":"[Booleans and Interop](#Interop)"}]},{"pos":[934,959],"content":"Formatting Boolean values","linkify":"Formatting Boolean values","nodes":[{"content":"Formatting Boolean values","pos":[0,25]}]},{"pos":[963,1249],"content":"The string representation of a <xref:System.Boolean> is either \"True\" for a `true` value or \"False\" for a `false` value. The string representation of a <xref:System.Boolean> value is defined by the read-only <xref:System.Boolean.TrueString> and <xref:System.Boolean.FalseString> fields.","nodes":[{"content":"The string representation of a <ph id=\"ph1\">&lt;xref:System.Boolean&gt;</ph> is either \"True\" for a <ph id=\"ph2\">`true`</ph> value or \"False\" for a <ph id=\"ph3\">`false`</ph> value.","pos":[0,120],"source":"The string representation of a <xref:System.Boolean> is either \"True\" for a `true` value or \"False\" for a `false` value."},{"content":"The string representation of a <ph id=\"ph1\">&lt;xref:System.Boolean&gt;</ph> value is defined by the read-only <ph id=\"ph2\">&lt;xref:System.Boolean.TrueString&gt;</ph> and <ph id=\"ph3\">&lt;xref:System.Boolean.FalseString&gt;</ph> fields.","pos":[121,286],"source":" The string representation of a <xref:System.Boolean> value is defined by the read-only <xref:System.Boolean.TrueString> and <xref:System.Boolean.FalseString> fields."}]},{"pos":[1256,1816],"content":"You use the <xref:System.Boolean.ToString%2A> method to convert Boolean values to strings. The Boolean structure includes two <xref:System.Boolean.ToString%2A> overloads: the parameterless <xref:System.Boolean.ToString> method and the <xref:System.Boolean.ToString%28System.IFormatProvider%29> method, which includes a parameter that controls formatting. However, because this parameter is ignored, the two overloads produce identical strings. The <xref:System.Boolean.ToString%28System.IFormatProvider%29> method does not support culture-sensitive formatting.","nodes":[{"content":"You use the <xref:System.Boolean.ToString%2A> method to convert Boolean values to strings. The Boolean structure includes two <xref:System.Boolean.ToString%2A> overloads: the parameterless <xref:System.Boolean.ToString> method and the <xref:System.Boolean.ToString%28System.IFormatProvider%29> method, which includes a parameter that controls formatting. However, because this parameter is ignored, the two overloads produce identical strings. The <xref:System.Boolean.ToString%28System.IFormatProvider%29> method does not support culture-sensitive formatting.","pos":[0,560],"nodes":[{"content":"You use the <ph id=\"ph1\">&lt;xref:System.Boolean.ToString%2A&gt;</ph> method to convert Boolean values to strings.","pos":[0,90],"source":"You use the <xref:System.Boolean.ToString%2A> method to convert Boolean values to strings."},{"content":"The Boolean structure includes two <ph id=\"ph1\">&lt;xref:System.Boolean.ToString%2A&gt;</ph> overloads: the parameterless <ph id=\"ph2\">&lt;xref:System.Boolean.ToString&gt;</ph> method and the <ph id=\"ph3\">&lt;xref:System.Boolean.ToString%28System.IFormatProvider%29&gt;</ph> method, which includes a parameter that controls formatting.","pos":[91,354],"source":" The Boolean structure includes two <xref:System.Boolean.ToString%2A> overloads: the parameterless <xref:System.Boolean.ToString> method and the <xref:System.Boolean.ToString%28System.IFormatProvider%29> method, which includes a parameter that controls formatting."},{"content":"However, because this parameter is ignored, the two overloads produce identical strings.","pos":[355,443]},{"content":"The <ph id=\"ph1\">&lt;xref:System.Boolean.ToString%28System.IFormatProvider%29&gt;</ph> method does not support culture-sensitive formatting.","pos":[444,560],"source":" The <xref:System.Boolean.ToString%28System.IFormatProvider%29> method does not support culture-sensitive formatting."}]}]},{"pos":[1823,2103],"content":"The following example illustrates formatting with the <xref:System.Boolean.ToString%2A> method. Note that the example uses the [composite formatting](~/docs/standard/base-types/composite-formatting.md) feature, so the <xref:System.Boolean.ToString%2A> method is called implicitly.","nodes":[{"content":"The following example illustrates formatting with the <ph id=\"ph1\">&lt;xref:System.Boolean.ToString%2A&gt;</ph> method.","pos":[0,95],"source":"The following example illustrates formatting with the <xref:System.Boolean.ToString%2A> method."},{"content":"Note that the example uses the <bpt id=\"p1\">[</bpt>composite formatting<ept id=\"p1\">](~/docs/standard/base-types/composite-formatting.md)</ept> feature, so the <ph id=\"ph1\">&lt;xref:System.Boolean.ToString%2A&gt;</ph> method is called implicitly.","pos":[96,280],"source":" Note that the example uses the [composite formatting](~/docs/standard/base-types/composite-formatting.md) feature, so the <xref:System.Boolean.ToString%2A> method is called implicitly."}]},{"pos":[2110,2383],"content":"<bpt id=\"p1\">[!code-csharp</bpt><bpt id=\"p2\">[</bpt>System.Boolean.Structure#3<ept id=\"p2\">](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.boolean.structure/cs/tostring1.cs#3)</ept><ept id=\"p1\">]</ept> <bpt id=\"p3\">[!code-vb</bpt><bpt id=\"p4\">[</bpt>System.Boolean.Structure#3<ept id=\"p4\">](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.boolean.structure/vb/tostring1.vb#3)</ept><ept id=\"p3\">]</ept>","source":"[!code-csharp[System.Boolean.Structure#3](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.boolean.structure/cs/tostring1.cs#3)]\n [!code-vb[System.Boolean.Structure#3](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.boolean.structure/vb/tostring1.vb#3)]"},{"pos":[2390,3014],"content":"Because the <xref:System.Boolean> structure can have only two values, it is easy to add custom formatting. For simple custom formatting in which other string literals are substituted for \"True\" and \"False\", you can use any conditional evaluation feature supported by your language, such as the [conditional operator](~/docs/csharp/language-reference/operators/conditional-operator.md) in C# or the [If operator](~/docs/visual-basic/language-reference/operators/if-operator.md) in Visual Basic. The following example uses this technique to format <xref:System.Boolean> values as \"Yes\" and \"No\" rather than \"True\" and \"False\".","nodes":[{"content":"Because the <ph id=\"ph1\">&lt;xref:System.Boolean&gt;</ph> structure can have only two values, it is easy to add custom formatting.","pos":[0,106],"source":"Because the <xref:System.Boolean> structure can have only two values, it is easy to add custom formatting."},{"content":"For simple custom formatting in which other string literals are substituted for \"True\" and \"False\", you can use any conditional evaluation feature supported by your language, such as the <bpt id=\"p1\">[</bpt>conditional operator<ept id=\"p1\">](~/docs/csharp/language-reference/operators/conditional-operator.md)</ept> in C# or the <bpt id=\"p2\">[</bpt>If operator<ept id=\"p2\">](~/docs/visual-basic/language-reference/operators/if-operator.md)</ept> in Visual Basic.","pos":[107,493],"source":" For simple custom formatting in which other string literals are substituted for \"True\" and \"False\", you can use any conditional evaluation feature supported by your language, such as the [conditional operator](~/docs/csharp/language-reference/operators/conditional-operator.md) in C# or the [If operator](~/docs/visual-basic/language-reference/operators/if-operator.md) in Visual Basic."},{"content":"The following example uses this technique to format <ph id=\"ph1\">&lt;xref:System.Boolean&gt;</ph> values as \"Yes\" and \"No\" rather than \"True\" and \"False\".","pos":[494,624],"source":" The following example uses this technique to format <xref:System.Boolean> values as \"Yes\" and \"No\" rather than \"True\" and \"False\"."}]},{"pos":[3021,3294],"content":"<bpt id=\"p1\">[!code-csharp</bpt><bpt id=\"p2\">[</bpt>System.Boolean.Structure#4<ept id=\"p2\">](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.boolean.structure/cs/tostring2.cs#4)</ept><ept id=\"p1\">]</ept> <bpt id=\"p3\">[!code-vb</bpt><bpt id=\"p4\">[</bpt>System.Boolean.Structure#4<ept id=\"p4\">](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.boolean.structure/vb/tostring2.vb#4)</ept><ept id=\"p3\">]</ept>","source":"[!code-csharp[System.Boolean.Structure#4](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.boolean.structure/cs/tostring2.cs#4)]\n [!code-vb[System.Boolean.Structure#4](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.boolean.structure/vb/tostring2.vb#4)]"},{"pos":[3301,3831],"content":"For more complex custom formatting operations, including culture-sensitive formatting, you can call the <xref:System.String.Format%28System.IFormatProvider%2CSystem.String%2CSystem.Object%5B%5D%29?displayProperty=fullName> method and provide an <xref:System.ICustomFormatter> implementation. The following example implements the <xref:System.ICustomFormatter> and <xref:System.IFormatProvider> interfaces to provide culture-sensitive Boolean strings for the English (United States), French (France), and Russian (Russia) cultures.","nodes":[{"content":"For more complex custom formatting operations, including culture-sensitive formatting, you can call the <xref:System.String.Format%28System.IFormatProvider%2CSystem.String%2CSystem.Object%5B%5D%29?displayProperty=fullName> method and provide an <xref:System.ICustomFormatter> implementation. The following example implements the <xref:System.ICustomFormatter> and <xref:System.IFormatProvider> interfaces to provide culture-sensitive Boolean strings for the English (United States), French (France), and Russian (Russia) cultures.","pos":[0,530],"nodes":[{"content":"For more complex custom formatting operations, including culture-sensitive formatting, you can call the <ph id=\"ph1\">&lt;xref:System.String.Format%28System.IFormatProvider%2CSystem.String%2CSystem.Object%5B%5D%29?displayProperty=fullName&gt;</ph> method and provide an <ph id=\"ph2\">&lt;xref:System.ICustomFormatter&gt;</ph> implementation.","pos":[0,291],"source":"For more complex custom formatting operations, including culture-sensitive formatting, you can call the <xref:System.String.Format%28System.IFormatProvider%2CSystem.String%2CSystem.Object%5B%5D%29?displayProperty=fullName> method and provide an <xref:System.ICustomFormatter> implementation."},{"content":"The following example implements the <ph id=\"ph1\">&lt;xref:System.ICustomFormatter&gt;</ph> and <ph id=\"ph2\">&lt;xref:System.IFormatProvider&gt;</ph> interfaces to provide culture-sensitive Boolean strings for the English (United States), French (France), and Russian (Russia) cultures.","pos":[292,530],"source":" The following example implements the <xref:System.ICustomFormatter> and <xref:System.IFormatProvider> interfaces to provide culture-sensitive Boolean strings for the English (United States), French (France), and Russian (Russia) cultures."}]}]},{"pos":[3838,4107],"content":"<bpt id=\"p1\">[!code-csharp</bpt><bpt id=\"p2\">[</bpt>System.Boolean.Structure#5<ept id=\"p2\">](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.boolean.structure/cs/format3.cs#5)</ept><ept id=\"p1\">]</ept> <bpt id=\"p3\">[!code-vb</bpt><bpt id=\"p4\">[</bpt>System.Boolean.Structure#5<ept id=\"p4\">](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.boolean.structure/vb/format3.vb#5)</ept><ept id=\"p3\">]</ept>","source":"[!code-csharp[System.Boolean.Structure#5](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.boolean.structure/cs/format3.cs#5)]\n [!code-vb[System.Boolean.Structure#5](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.boolean.structure/vb/format3.vb#5)]"},{"pos":[4114,4270],"content":"Optionally, you can use <bpt id=\"p1\">[</bpt>resource files<ept id=\"p1\">](http://msdn.microsoft.com/library/8ad495d4-2941-40cf-bf64-e82e85825890)</ept> to define culture-specific Boolean strings.","source":"Optionally, you can use [resource files](http://msdn.microsoft.com/library/8ad495d4-2941-40cf-bf64-e82e85825890) to define culture-specific Boolean strings."},{"pos":[4308,4345],"content":"Converting to and from Boolean values","linkify":"Converting to and from Boolean values","nodes":[{"content":"Converting to and from Boolean values","pos":[0,37]}]},{"pos":[4349,4879],"content":"The <xref:System.Boolean> structure implements the <xref:System.IConvertible> interface.  As a result, you can use the <xref:System.Convert> class to perform conversions between a <xref:System.Boolean> value and any other primitive type in the .NET Framework, or you can call the <xref:System.Boolean> structure's explicit implementations. However, conversions between a <xref:System.Boolean> and the following types are not supported, so the corresponding conversion methods throw an <xref:System.InvalidCastException> exception:","nodes":[{"content":"The <xref:System.Boolean> structure implements the <xref:System.IConvertible> interface.  As a result, you can use the <xref:System.Convert> class to perform conversions between a <xref:System.Boolean> value and any other primitive type in the .NET Framework, or you can call the <xref:System.Boolean> structure's explicit implementations. However, conversions between a <xref:System.Boolean> and the following types are not supported, so the corresponding conversion methods throw an <xref:System.InvalidCastException> exception:","pos":[0,530],"nodes":[{"content":"The <ph id=\"ph1\">&lt;xref:System.Boolean&gt;</ph> structure implements the <ph id=\"ph2\">&lt;xref:System.IConvertible&gt;</ph> interface.","pos":[0,88],"source":"The <xref:System.Boolean> structure implements the <xref:System.IConvertible> interface."},{"content":"As a result, you can use the <ph id=\"ph1\">&lt;xref:System.Convert&gt;</ph> class to perform conversions between a <ph id=\"ph2\">&lt;xref:System.Boolean&gt;</ph> value and any other primitive type in the .NET Framework, or you can call the <ph id=\"ph3\">&lt;xref:System.Boolean&gt;</ph> structure's explicit implementations.","pos":[90,339],"source":"  As a result, you can use the <xref:System.Convert> class to perform conversions between a <xref:System.Boolean> value and any other primitive type in the .NET Framework, or you can call the <xref:System.Boolean> structure's explicit implementations."},{"content":"However, conversions between a <ph id=\"ph1\">&lt;xref:System.Boolean&gt;</ph> and the following types are not supported, so the corresponding conversion methods throw an <ph id=\"ph2\">&lt;xref:System.InvalidCastException&gt;</ph> exception:","pos":[340,530],"source":" However, conversions between a <xref:System.Boolean> and the following types are not supported, so the corresponding conversion methods throw an <xref:System.InvalidCastException> exception:"}]}]},{"pos":[4889,5118],"content":"Conversion between <xref:System.Boolean> and <xref:System.Char> (the <xref:System.Convert.ToBoolean%28System.Char%29?displayProperty=fullName> and <xref:System.Convert.ToChar%28System.Boolean%29?displayProperty=fullName> methods)","nodes":[{"content":"Conversion between <ph id=\"ph1\">&lt;xref:System.Boolean&gt;</ph> and <ph id=\"ph2\">&lt;xref:System.Char&gt;</ph> (the <ph id=\"ph3\">&lt;xref:System.Convert.ToBoolean%28System.Char%29?displayProperty=fullName&gt;</ph> and <ph id=\"ph4\">&lt;xref:System.Convert.ToChar%28System.Boolean%29?displayProperty=fullName&gt;</ph> methods)","pos":[0,229],"source":"Conversion between <xref:System.Boolean> and <xref:System.Char> (the <xref:System.Convert.ToBoolean%28System.Char%29?displayProperty=fullName> and <xref:System.Convert.ToChar%28System.Boolean%29?displayProperty=fullName> methods)"}]},{"pos":[5128,5369],"content":"Conversion between <xref:System.Boolean> and <xref:System.DateTime> (the <xref:System.Convert.ToBoolean%28System.DateTime%29?displayProperty=fullName> and <xref:System.Convert.ToDateTime%28System.Boolean%29?displayProperty=fullName> methods)","nodes":[{"content":"Conversion between <ph id=\"ph1\">&lt;xref:System.Boolean&gt;</ph> and <ph id=\"ph2\">&lt;xref:System.DateTime&gt;</ph> (the <ph id=\"ph3\">&lt;xref:System.Convert.ToBoolean%28System.DateTime%29?displayProperty=fullName&gt;</ph> and <ph id=\"ph4\">&lt;xref:System.Convert.ToDateTime%28System.Boolean%29?displayProperty=fullName&gt;</ph> methods)","pos":[0,241],"source":"Conversion between <xref:System.Boolean> and <xref:System.DateTime> (the <xref:System.Convert.ToBoolean%28System.DateTime%29?displayProperty=fullName> and <xref:System.Convert.ToDateTime%28System.Boolean%29?displayProperty=fullName> methods)"}]},{"pos":[5376,5655],"content":"All conversions from integral or floating-point numbers to Boolean values convert non-zero values to `true` and zero values to `false`.  The following example illustrates this by calling selected overloads of the <xref:System.Convert.ToBoolean%2A?displayProperty=fullName> class.","nodes":[{"content":"All conversions from integral or floating-point numbers to Boolean values convert non-zero values to <ph id=\"ph1\">`true`</ph> and zero values to <ph id=\"ph2\">`false`</ph>.","pos":[0,135],"source":"All conversions from integral or floating-point numbers to Boolean values convert non-zero values to `true` and zero values to `false`."},{"content":"The following example illustrates this by calling selected overloads of the <ph id=\"ph1\">&lt;xref:System.Convert.ToBoolean%2A?displayProperty=fullName&gt;</ph> class.","pos":[137,279],"source":"  The following example illustrates this by calling selected overloads of the <xref:System.Convert.ToBoolean%2A?displayProperty=fullName> class."}]},{"pos":[5662,5939],"content":"<bpt id=\"p1\">[!code-csharp</bpt><bpt id=\"p2\">[</bpt>System.Boolean.Structure#6<ept id=\"p2\">](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.boolean.structure/cs/conversion1.cs#6)</ept><ept id=\"p1\">]</ept> <bpt id=\"p3\">[!code-vb</bpt><bpt id=\"p4\">[</bpt>System.Boolean.Structure#6<ept id=\"p4\">](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.boolean.structure/vb/conversion1.vb#6)</ept><ept id=\"p3\">]</ept>","leadings":[""," "],"source":"[!code-csharp[System.Boolean.Structure#6](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.boolean.structure/cs/conversion1.cs#6)]\n[!code-vb[System.Boolean.Structure#6](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.boolean.structure/vb/conversion1.vb#6)]"},{"pos":[5946,6409],"content":"When converting from floating-point values to Boolean values, the conversion methods perform an exact comparison with zero. If the floating-point value has lost precision, the result can be unexpected. This is illustrated in the following example, in which a <xref:System.Double> variable whose value should be zero is converted to a Boolean value. As the example shows, the result is `true` because repeated additions of 0.2 have resulted in a loss of precision.","nodes":[{"content":"When converting from floating-point values to Boolean values, the conversion methods perform an exact comparison with zero.","pos":[0,123]},{"content":"If the floating-point value has lost precision, the result can be unexpected.","pos":[124,201]},{"content":"This is illustrated in the following example, in which a <ph id=\"ph1\">&lt;xref:System.Double&gt;</ph> variable whose value should be zero is converted to a Boolean value.","pos":[202,348],"source":" This is illustrated in the following example, in which a <xref:System.Double> variable whose value should be zero is converted to a Boolean value."},{"content":"As the example shows, the result is <ph id=\"ph1\">`true`</ph> because repeated additions of 0.2 have resulted in a loss of precision.","pos":[349,463],"source":" As the example shows, the result is `true` because repeated additions of 0.2 have resulted in a loss of precision."}]},{"pos":[6416,6926],"content":"When converting from Boolean to numeric values, the conversion methods of the <xref:System.Convert> class convert `true` to 1 and `false` to 0. However, Visual Basic conversion functions convert `true` to either 255 (for conversions to <xref:System.Byte> values) or -1 (for all other numeric conversions). The following example converts `true` to numeric values by using a <xref:System.Convert> method, and, in the case of the Visual Basic example, by using the Visual Basic language's own conversion operator.","nodes":[{"content":"When converting from Boolean to numeric values, the conversion methods of the <ph id=\"ph1\">&lt;xref:System.Convert&gt;</ph> class convert <ph id=\"ph2\">`true`</ph> to 1 and <ph id=\"ph3\">`false`</ph> to 0.","pos":[0,143],"source":"When converting from Boolean to numeric values, the conversion methods of the <xref:System.Convert> class convert `true` to 1 and `false` to 0."},{"content":"However, Visual Basic conversion functions convert <ph id=\"ph1\">`true`</ph> to either 255 (for conversions to <ph id=\"ph2\">&lt;xref:System.Byte&gt;</ph> values) or -1 (for all other numeric conversions).","pos":[144,305],"source":" However, Visual Basic conversion functions convert `true` to either 255 (for conversions to <xref:System.Byte> values) or -1 (for all other numeric conversions)."},{"content":"The following example converts <ph id=\"ph1\">`true`</ph> to numeric values by using a <ph id=\"ph2\">&lt;xref:System.Convert&gt;</ph> method, and, in the case of the Visual Basic example, by using the Visual Basic language's own conversion operator.","pos":[306,510],"source":" The following example converts `true` to numeric values by using a <xref:System.Convert> method, and, in the case of the Visual Basic example, by using the Visual Basic language's own conversion operator."}]},{"pos":[6933,7210],"content":"<bpt id=\"p1\">[!code-csharp</bpt><bpt id=\"p2\">[</bpt>System.Boolean.Structure#8<ept id=\"p2\">](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.boolean.structure/cs/conversion3.cs#8)</ept><ept id=\"p1\">]</ept> <bpt id=\"p3\">[!code-vb</bpt><bpt id=\"p4\">[</bpt>System.Boolean.Structure#8<ept id=\"p4\">](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.boolean.structure/vb/conversion3.vb#8)</ept><ept id=\"p3\">]</ept>","leadings":[""," "],"source":"[!code-csharp[System.Boolean.Structure#8](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.boolean.structure/cs/conversion3.cs#8)]\n[!code-vb[System.Boolean.Structure#8](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.boolean.structure/vb/conversion3.vb#8)]"},{"pos":[7217,7449],"content":"For conversions from <xref:System.Boolean> to string values, see the [Formatting Boolean Values](#Formatting) section. For conversions from strings to <xref:System.Boolean> values, see the [Parsing Boolean Values](#Parsing) section.","nodes":[{"content":"For conversions from <ph id=\"ph1\">&lt;xref:System.Boolean&gt;</ph> to string values, see the <bpt id=\"p1\">[</bpt>Formatting Boolean Values<ept id=\"p1\">](#Formatting)</ept> section.","pos":[0,118],"source":"For conversions from <xref:System.Boolean> to string values, see the [Formatting Boolean Values](#Formatting) section."},{"content":"For conversions from strings to <ph id=\"ph1\">&lt;xref:System.Boolean&gt;</ph> values, see the <bpt id=\"p1\">[</bpt>Parsing Boolean Values<ept id=\"p1\">](#Parsing)</ept> section.","pos":[119,232],"source":" For conversions from strings to <xref:System.Boolean> values, see the [Parsing Boolean Values](#Parsing) section."}]},{"pos":[7484,7506],"content":"Parsing Boolean values","linkify":"Parsing Boolean values","nodes":[{"content":"Parsing Boolean values","pos":[0,22]}]},{"pos":[7510,8223],"content":"The <xref:System.Boolean> structure includes two static parsing methods, <xref:System.Boolean.Parse%2A> and <xref:System.Boolean.TryParse%2A>, that convert a string to a Boolean value. The string representation of a Boolean value is defined by the case-insensitive equivalents of the values of the <xref:System.Boolean.TrueString> and <xref:System.Boolean.FalseString> fields, which are \"True\" and \"False\", respectively. In other words, the only strings that parse successfully are \"True\", \"False\", \"true\", \"false\", or some mixed-case equivalent. You cannot successfully parse numeric strings such as \"0\" or \"1\". Leading or trailing white-space characters are not considered when performing the string comparison.","nodes":[{"content":"The <xref:System.Boolean> structure includes two static parsing methods, <xref:System.Boolean.Parse%2A> and <xref:System.Boolean.TryParse%2A>, that convert a string to a Boolean value. The string representation of a Boolean value is defined by the case-insensitive equivalents of the values of the <xref:System.Boolean.TrueString> and <xref:System.Boolean.FalseString> fields, which are \"True\" and \"False\", respectively. In other words, the only strings that parse successfully are \"True\", \"False\", \"true\", \"false\", or some mixed-case equivalent. You cannot successfully parse numeric strings such as \"0\" or \"1\". Leading or trailing white-space characters are not considered when performing the string comparison.","pos":[0,713],"nodes":[{"content":"The <ph id=\"ph1\">&lt;xref:System.Boolean&gt;</ph> structure includes two static parsing methods, <ph id=\"ph2\">&lt;xref:System.Boolean.Parse%2A&gt;</ph> and <ph id=\"ph3\">&lt;xref:System.Boolean.TryParse%2A&gt;</ph>, that convert a string to a Boolean value.","pos":[0,184],"source":"The <xref:System.Boolean> structure includes two static parsing methods, <xref:System.Boolean.Parse%2A> and <xref:System.Boolean.TryParse%2A>, that convert a string to a Boolean value."},{"content":"The string representation of a Boolean value is defined by the case-insensitive equivalents of the values of the <ph id=\"ph1\">&lt;xref:System.Boolean.TrueString&gt;</ph> and <ph id=\"ph2\">&lt;xref:System.Boolean.FalseString&gt;</ph> fields, which are \"True\" and \"False\", respectively.","pos":[185,420],"source":" The string representation of a Boolean value is defined by the case-insensitive equivalents of the values of the <xref:System.Boolean.TrueString> and <xref:System.Boolean.FalseString> fields, which are \"True\" and \"False\", respectively."},{"content":"In other words, the only strings that parse successfully are \"True\", \"False\", \"true\", \"false\", or some mixed-case equivalent.","pos":[421,546]},{"content":"You cannot successfully parse numeric strings such as \"0\" or \"1\".","pos":[547,612]},{"content":"Leading or trailing white-space characters are not considered when performing the string comparison.","pos":[613,713]}]}]},{"pos":[8230,8465],"content":"The following example uses the <xref:System.Boolean.Parse%2A> and <xref:System.Boolean.TryParse%2A> methods to parse a number of strings. Note that only the case-insensitive equivalents of \"True\" and \"False\" can be successfully parsed.","nodes":[{"content":"The following example uses the <xref:System.Boolean.Parse%2A> and <xref:System.Boolean.TryParse%2A> methods to parse a number of strings. Note that only the case-insensitive equivalents of \"True\" and \"False\" can be successfully parsed.","pos":[0,235],"nodes":[{"content":"The following example uses the <ph id=\"ph1\">&lt;xref:System.Boolean.Parse%2A&gt;</ph> and <ph id=\"ph2\">&lt;xref:System.Boolean.TryParse%2A&gt;</ph> methods to parse a number of strings.","pos":[0,137],"source":"The following example uses the <xref:System.Boolean.Parse%2A> and <xref:System.Boolean.TryParse%2A> methods to parse a number of strings."},{"content":"Note that only the case-insensitive equivalents of \"True\" and \"False\" can be successfully parsed.","pos":[138,235]}]}]},{"pos":[8472,8739],"content":"<bpt id=\"p1\">[!code-csharp</bpt><bpt id=\"p2\">[</bpt>System.Boolean.Structure#2<ept id=\"p2\">](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.boolean.structure/cs/parse2.cs#2)</ept><ept id=\"p1\">]</ept> <bpt id=\"p3\">[!code-vb</bpt><bpt id=\"p4\">[</bpt>System.Boolean.Structure#2<ept id=\"p4\">](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.boolean.structure/vb/parse2.vb#2)</ept><ept id=\"p3\">]</ept>","source":"[!code-csharp[System.Boolean.Structure#2](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.boolean.structure/cs/parse2.cs#2)]\n [!code-vb[System.Boolean.Structure#2](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.boolean.structure/vb/parse2.vb#2)]"},{"pos":[8746,9213],"content":"If you are programming in Visual Basic, you can use the `CBool` function to convert the string representation of a number to a Boolean value. \"0\" is converted to `false`, and the string representation of any non-zero value is converted to `true`. If you are not programming in Visual Basic, you must convert your numeric string to a number before converting it to a Boolean. The following example illustrates this by converting an array of integers to Boolean values.","nodes":[{"content":"If you are programming in Visual Basic, you can use the <ph id=\"ph1\">`CBool`</ph> function to convert the string representation of a number to a Boolean value.","pos":[0,141],"source":"If you are programming in Visual Basic, you can use the `CBool` function to convert the string representation of a number to a Boolean value."},{"content":"\"0\" is converted to <ph id=\"ph1\">`false`</ph>, and the string representation of any non-zero value is converted to <ph id=\"ph2\">`true`</ph>.","pos":[142,246],"source":" \"0\" is converted to `false`, and the string representation of any non-zero value is converted to `true`."},{"content":"If you are not programming in Visual Basic, you must convert your numeric string to a number before converting it to a Boolean.","pos":[247,374]},{"content":"The following example illustrates this by converting an array of integers to Boolean values.","pos":[375,467]}]},{"pos":[9220,9487],"content":"<bpt id=\"p1\">[!code-csharp</bpt><bpt id=\"p2\">[</bpt>System.Boolean.Structure#9<ept id=\"p2\">](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.boolean.structure/cs/parse3.cs#9)</ept><ept id=\"p1\">]</ept> <bpt id=\"p3\">[!code-vb</bpt><bpt id=\"p4\">[</bpt>System.Boolean.Structure#9<ept id=\"p4\">](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.boolean.structure/vb/parse3.vb#9)</ept><ept id=\"p3\">]</ept>","source":"[!code-csharp[System.Boolean.Structure#9](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.boolean.structure/cs/parse3.cs#9)]\n [!code-vb[System.Boolean.Structure#9](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.boolean.structure/vb/parse3.vb#9)]"},{"pos":[9524,9548],"content":"Comparing Boolean values","linkify":"Comparing Boolean values","nodes":[{"content":"Comparing Boolean values","pos":[0,24]}]},{"pos":[9552,9927],"content":"Because Boolean values are either `true` or `false`, there is little reason to explicitly call the <xref:System.Boolean.CompareTo%2A> method, which indicates whether an instance is greater than, less than, or equal to a specified value. Typically, to compare two Boolean variables, you call the <xref:System.Boolean.Equals%2A> method or use your language's equality operator.","nodes":[{"content":"Because Boolean values are either <ph id=\"ph1\">`true`</ph> or <ph id=\"ph2\">`false`</ph>, there is little reason to explicitly call the <ph id=\"ph3\">&lt;xref:System.Boolean.CompareTo%2A&gt;</ph> method, which indicates whether an instance is greater than, less than, or equal to a specified value.","pos":[0,236],"source":"Because Boolean values are either `true` or `false`, there is little reason to explicitly call the <xref:System.Boolean.CompareTo%2A> method, which indicates whether an instance is greater than, less than, or equal to a specified value."},{"content":"Typically, to compare two Boolean variables, you call the <ph id=\"ph1\">&lt;xref:System.Boolean.Equals%2A&gt;</ph> method or use your language's equality operator.","pos":[237,375],"source":" Typically, to compare two Boolean variables, you call the <xref:System.Boolean.Equals%2A> method or use your language's equality operator."}]},{"pos":[9934,10187],"content":"However, when you want to compare a Boolean variable with the literal Boolean value `true` or `false`, it is not necessary to do an explicit comparison, because the result of evaluating a Boolean value is that Boolean value. For example, the expressions","nodes":[{"content":"However, when you want to compare a Boolean variable with the literal Boolean value <ph id=\"ph1\">`true`</ph> or <ph id=\"ph2\">`false`</ph>, it is not necessary to do an explicit comparison, because the result of evaluating a Boolean value is that Boolean value.","pos":[0,224],"source":"However, when you want to compare a Boolean variable with the literal Boolean value `true` or `false`, it is not necessary to do an explicit comparison, because the result of evaluating a Boolean value is that Boolean value."},{"content":"For example, the expressions","pos":[225,253]}]},{"pos":[10194,10475],"content":"<bpt id=\"p1\">[!code-csharp</bpt><bpt id=\"p2\">[</bpt>System.Boolean.Structure#12<ept id=\"p2\">](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.boolean.structure/cs/operations1.cs#12)</ept><ept id=\"p1\">]</ept> <bpt id=\"p3\">[!code-vb</bpt><bpt id=\"p4\">[</bpt>System.Boolean.Structure#12<ept id=\"p4\">](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.boolean.structure/vb/operations1.vb#12)</ept><ept id=\"p3\">]</ept>","source":"[!code-csharp[System.Boolean.Structure#12](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.boolean.structure/cs/operations1.cs#12)]\n [!code-vb[System.Boolean.Structure#12](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.boolean.structure/vb/operations1.vb#12)]"},{"pos":[10482,10485],"content":"and","nodes":[{"content":"and","pos":[0,3]}]},{"pos":[10492,10773],"content":"<bpt id=\"p1\">[!code-csharp</bpt><bpt id=\"p2\">[</bpt>System.Boolean.Structure#13<ept id=\"p2\">](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.boolean.structure/cs/operations2.cs#13)</ept><ept id=\"p1\">]</ept> <bpt id=\"p3\">[!code-vb</bpt><bpt id=\"p4\">[</bpt>System.Boolean.Structure#13<ept id=\"p4\">](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.boolean.structure/vb/operations2.vb#13)</ept><ept id=\"p3\">]</ept>","source":"[!code-csharp[System.Boolean.Structure#13](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.boolean.structure/cs/operations2.cs#13)]\n [!code-vb[System.Boolean.Structure#13](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.boolean.structure/vb/operations2.vb#13)]"},{"pos":[10780,10882],"content":"are equivalent, but the second is more compact. However, both techniques offer comparable performance.","nodes":[{"content":"are equivalent, but the second is more compact. However, both techniques offer comparable performance.","pos":[0,102],"nodes":[{"content":"are equivalent, but the second is more compact.","pos":[0,47]},{"content":"However, both techniques offer comparable performance.","pos":[48,102]}]}]},{"pos":[10916,10954],"content":"Working with Booleans as binary values","linkify":"Working with Booleans as binary values","nodes":[{"content":"Working with Booleans as binary values","pos":[0,38]}]},{"pos":[10958,11093],"content":"A Boolean value occupies one byte of memory, as the following C# example shows. The example must be compiled with the `/unsafe` switch.","nodes":[{"content":"A Boolean value occupies one byte of memory, as the following C# example shows.","pos":[0,79]},{"content":"The example must be compiled with the <ph id=\"ph1\">`/unsafe`</ph> switch.","pos":[80,135],"source":" The example must be compiled with the `/unsafe` switch."}]},{"pos":[11100,11233],"content":"<bpt id=\"p1\">[!code-csharp</bpt><bpt id=\"p2\">[</bpt>System.Boolean.Structure#14<ept id=\"p2\">](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.boolean.structure/cs/size1.cs#14)</ept><ept id=\"p1\">]</ept>","source":"[!code-csharp[System.Boolean.Structure#14](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.boolean.structure/cs/size1.cs#14)]"},{"pos":[11240,11361],"content":"The byte's low-order bit is used to represent its value. A value of 1 represents `true`; a value of 0 represents `false`.","nodes":[{"content":"The byte's low-order bit is used to represent its value.","pos":[0,56]},{"content":"A value of 1 represents <ph id=\"ph1\">`true`</ph>; a value of 0 represents <ph id=\"ph2\">`false`</ph>.","pos":[57,121],"source":" A value of 1 represents `true`; a value of 0 represents `false`."}]},{"pos":[11369,11520],"content":"[!WARNING]\n You can use the <xref:System.Collections.Specialized.BitVector32?displayProperty=fullName> structure to work with sets of Boolean values.","leadings":["","> "],"nodes":[{"content":"You can use the <ph id=\"ph1\">&lt;xref:System.Collections.Specialized.BitVector32?displayProperty=fullName&gt;</ph> structure to work with sets of Boolean values.","pos":[12,149],"source":" You can use the <xref:System.Collections.Specialized.BitVector32?displayProperty=fullName> structure to work with sets of Boolean values."}]},{"pos":[11527,11930],"content":"You can convert a Boolean value to its binary representation by calling the <xref:System.BitConverter.GetBytes%28System.Boolean%29?displayProperty=fullName> method. The method returns a byte array with a single element. To restore a Boolean value from its binary representation, you can call the <xref:System.BitConverter.ToBoolean%28System.Byte%5B%5D%2CSystem.Int32%29?displayProperty=fullName> method.","nodes":[{"content":"You can convert a Boolean value to its binary representation by calling the <xref:System.BitConverter.GetBytes%28System.Boolean%29?displayProperty=fullName> method. The method returns a byte array with a single element. To restore a Boolean value from its binary representation, you can call the <xref:System.BitConverter.ToBoolean%28System.Byte%5B%5D%2CSystem.Int32%29?displayProperty=fullName> method.","pos":[0,403],"nodes":[{"content":"You can convert a Boolean value to its binary representation by calling the <ph id=\"ph1\">&lt;xref:System.BitConverter.GetBytes%28System.Boolean%29?displayProperty=fullName&gt;</ph> method.","pos":[0,164],"source":"You can convert a Boolean value to its binary representation by calling the <xref:System.BitConverter.GetBytes%28System.Boolean%29?displayProperty=fullName> method."},{"content":"The method returns a byte array with a single element.","pos":[165,219]},{"content":"To restore a Boolean value from its binary representation, you can call the <ph id=\"ph1\">&lt;xref:System.BitConverter.ToBoolean%28System.Byte%5B%5D%2CSystem.Int32%29?displayProperty=fullName&gt;</ph> method.","pos":[220,403],"source":" To restore a Boolean value from its binary representation, you can call the <xref:System.BitConverter.ToBoolean%28System.Byte%5B%5D%2CSystem.Int32%29?displayProperty=fullName> method."}]}]},{"pos":[11937,12286],"content":"The following example calls the <xref:System.BitConverter.GetBytes%2A?displayProperty=fullName> method to convert a Boolean value to its binary representation and displays the individual bits of the value, and then calls the <xref:System.BitConverter.ToBoolean%2A?displayProperty=fullName> method to restore the value from its binary representation.","nodes":[{"content":"The following example calls the <ph id=\"ph1\">&lt;xref:System.BitConverter.GetBytes%2A?displayProperty=fullName&gt;</ph> method to convert a Boolean value to its binary representation and displays the individual bits of the value, and then calls the <ph id=\"ph2\">&lt;xref:System.BitConverter.ToBoolean%2A?displayProperty=fullName&gt;</ph> method to restore the value from its binary representation.","pos":[0,349],"source":"The following example calls the <xref:System.BitConverter.GetBytes%2A?displayProperty=fullName> method to convert a Boolean value to its binary representation and displays the individual bits of the value, and then calls the <xref:System.BitConverter.ToBoolean%2A?displayProperty=fullName> method to restore the value from its binary representation."}]},{"pos":[12293,12562],"content":"<bpt id=\"p1\">[!code-csharp</bpt><bpt id=\"p2\">[</bpt>System.Boolean.Structure#1<ept id=\"p2\">](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.boolean.structure/cs/binary1.cs#1)</ept><ept id=\"p1\">]</ept> <bpt id=\"p3\">[!code-vb</bpt><bpt id=\"p4\">[</bpt>System.Boolean.Structure#1<ept id=\"p4\">](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.boolean.structure/vb/binary1.vb#1)</ept><ept id=\"p3\">]</ept>","source":"[!code-csharp[System.Boolean.Structure#1](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.boolean.structure/cs/binary1.cs#1)]\n [!code-vb[System.Boolean.Structure#1](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.boolean.structure/vb/binary1.vb#1)]"},{"pos":[12600,12641],"content":"Performing operations with Boolean values","linkify":"Performing operations with Boolean values","nodes":[{"content":"Performing operations with Boolean values","pos":[0,41]}]},{"pos":[12645,12811],"content":"This section illustrates how Boolean values are used in apps. The first section discusses its use as a flag. The second illustrates its use for arithmetic operations.","nodes":[{"content":"This section illustrates how Boolean values are used in apps. The first section discusses its use as a flag. The second illustrates its use for arithmetic operations.","pos":[0,166],"nodes":[{"content":"This section illustrates how Boolean values are used in apps.","pos":[0,61]},{"content":"The first section discusses its use as a flag.","pos":[62,108]},{"content":"The second illustrates its use for arithmetic operations.","pos":[109,166]}]}]},{"pos":[12821,12844],"content":"Boolean values as flags","linkify":"Boolean values as flags","nodes":[{"content":"Boolean values as flags","pos":[0,23]}]},{"pos":[12848,13345],"content":"Boolean variables are most commonly used as flags, to signal the presence or absence of some condition. For example, in the <xref:System.String.Compare%28System.String%2CSystem.String%2CSystem.Boolean%29?displayProperty=fullName> method, the final parameter, `ignoreCase`, is a flag that indicates whether the comparison of two strings is case-insensitive (`ignoreCase` is `true`) or case-sensitive (`ignoreCase` is `false`). The value of the flag can then be evaluated in a conditional statement.","nodes":[{"content":"Boolean variables are most commonly used as flags, to signal the presence or absence of some condition.","pos":[0,103]},{"content":"For example, in the <ph id=\"ph1\">&lt;xref:System.String.Compare%28System.String%2CSystem.String%2CSystem.Boolean%29?displayProperty=fullName&gt;</ph> method, the final parameter, <ph id=\"ph2\">`ignoreCase`</ph>, is a flag that indicates whether the comparison of two strings is case-insensitive (<ph id=\"ph3\">`ignoreCase`</ph> is <ph id=\"ph4\">`true`</ph>) or case-sensitive (<ph id=\"ph5\">`ignoreCase`</ph> is <ph id=\"ph6\">`false`</ph>).","pos":[104,425],"source":" For example, in the <xref:System.String.Compare%28System.String%2CSystem.String%2CSystem.Boolean%29?displayProperty=fullName> method, the final parameter, `ignoreCase`, is a flag that indicates whether the comparison of two strings is case-insensitive (`ignoreCase` is `true`) or case-sensitive (`ignoreCase` is `false`)."},{"content":"The value of the flag can then be evaluated in a conditional statement.","pos":[426,497]}]},{"pos":[13352,13841],"content":"The following example uses a simple console app to illustrate the use of Boolean variables as flags. The app accepts command-line parameters that enable output to be redirected to a specified file (the `/f` switch), and that enable output to be sent both to a specified file and to the console (the `/b` switch). The app defines a flag named `isRedirected` to indicate whether output is to be sent to a file, and a flag named `isBoth` to indicate that output should be sent to the console.","nodes":[{"content":"The following example uses a simple console app to illustrate the use of Boolean variables as flags.","pos":[0,100]},{"content":"The app accepts command-line parameters that enable output to be redirected to a specified file (the <ph id=\"ph1\">`/f`</ph> switch), and that enable output to be sent both to a specified file and to the console (the <ph id=\"ph2\">`/b`</ph> switch).","pos":[101,312],"source":" The app accepts command-line parameters that enable output to be redirected to a specified file (the `/f` switch), and that enable output to be sent both to a specified file and to the console (the `/b` switch)."},{"content":"The app defines a flag named <ph id=\"ph1\">`isRedirected`</ph> to indicate whether output is to be sent to a file, and a flag named <ph id=\"ph2\">`isBoth`</ph> to indicate that output should be sent to the console.","pos":[313,489],"source":" The app defines a flag named `isRedirected` to indicate whether output is to be sent to a file, and a flag named `isBoth` to indicate that output should be sent to the console."}]},{"pos":[13848,14129],"content":"<bpt id=\"p1\">[!code-csharp</bpt><bpt id=\"p2\">[</bpt>System.Boolean.Structure#10<ept id=\"p2\">](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.boolean.structure/cs/operations1.cs#10)</ept><ept id=\"p1\">]</ept> <bpt id=\"p3\">[!code-vb</bpt><bpt id=\"p4\">[</bpt>System.Boolean.Structure#10<ept id=\"p4\">](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.boolean.structure/vb/operations1.vb#10)</ept><ept id=\"p3\">]</ept>","source":"[!code-csharp[System.Boolean.Structure#10](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.boolean.structure/cs/operations1.cs#10)]\n [!code-vb[System.Boolean.Structure#10](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.boolean.structure/vb/operations1.vb#10)]"},{"pos":[14139,14173],"content":"Booleans and arithmetic operations","linkify":"Booleans and arithmetic operations","nodes":[{"content":"Booleans and arithmetic operations","pos":[0,34]}]},{"pos":[14177,14424],"content":"A Boolean value is sometimes used to indicate the presence of a condition that triggers a mathematical calculation. For example, a `hasShippingCharge` variable might serve as a flag to indicate whether to add shipping charges to an invoice amount.","nodes":[{"content":"A Boolean value is sometimes used to indicate the presence of a condition that triggers a mathematical calculation.","pos":[0,115]},{"content":"For example, a <ph id=\"ph1\">`hasShippingCharge`</ph> variable might serve as a flag to indicate whether to add shipping charges to an invoice amount.","pos":[116,247],"source":" For example, a `hasShippingCharge` variable might serve as a flag to indicate whether to add shipping charges to an invoice amount."}]},{"pos":[14431,14659],"content":"Because an operation with a `false` value has no effect on the result of an operation, it is not necessary to convert the Boolean to an integral value to use in the mathematical operation. Instead, you can use conditional logic.","nodes":[{"content":"Because an operation with a <ph id=\"ph1\">`false`</ph> value has no effect on the result of an operation, it is not necessary to convert the Boolean to an integral value to use in the mathematical operation.","pos":[0,188],"source":"Because an operation with a `false` value has no effect on the result of an operation, it is not necessary to convert the Boolean to an integral value to use in the mathematical operation."},{"content":"Instead, you can use conditional logic.","pos":[189,228]}]},{"pos":[14666,15073],"content":"The following example computes an amount that consists of a subtotal, a shipping charge, and an optional service charge. The `hasServiceCharge` variable determines whether the service charge is applied. Instead of converting `hasServiceCharge` to a numeric value and multiplying it by the amount of the service charge, the example uses conditional logic to add the service charge amount if it is applicable.","nodes":[{"content":"The following example computes an amount that consists of a subtotal, a shipping charge, and an optional service charge.","pos":[0,120]},{"content":"The <ph id=\"ph1\">`hasServiceCharge`</ph> variable determines whether the service charge is applied.","pos":[121,202],"source":" The `hasServiceCharge` variable determines whether the service charge is applied."},{"content":"Instead of converting <ph id=\"ph1\">`hasServiceCharge`</ph> to a numeric value and multiplying it by the amount of the service charge, the example uses conditional logic to add the service charge amount if it is applicable.","pos":[203,407],"source":" Instead of converting `hasServiceCharge` to a numeric value and multiplying it by the amount of the service charge, the example uses conditional logic to add the service charge amount if it is applicable."}]},{"pos":[15080,15361],"content":"<bpt id=\"p1\">[!code-csharp</bpt><bpt id=\"p2\">[</bpt>System.Boolean.Structure#13<ept id=\"p2\">](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.boolean.structure/cs/operations2.cs#13)</ept><ept id=\"p1\">]</ept> <bpt id=\"p3\">[!code-vb</bpt><bpt id=\"p4\">[</bpt>System.Boolean.Structure#13<ept id=\"p4\">](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.boolean.structure/vb/operations2.vb#13)</ept><ept id=\"p3\">]</ept>","source":"[!code-csharp[System.Boolean.Structure#13](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.boolean.structure/cs/operations2.cs#13)]\n [!code-vb[System.Boolean.Structure#13](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.boolean.structure/vb/operations2.vb#13)]"},{"pos":[15397,15417],"content":"Booleans and interop","linkify":"Booleans and interop","nodes":[{"content":"Booleans and interop","pos":[0,20]}]},{"pos":[15421,15711],"content":"While marshaling base data types to COM is generally straightforward, the <xref:System.Boolean> data type is an exception. You can apply the <xref:System.Runtime.InteropServices.MarshalAsAttribute> attribute to marshal the <xref:System.Boolean> type to any of the following representations:","nodes":[{"content":"While marshaling base data types to COM is generally straightforward, the <xref:System.Boolean> data type is an exception. You can apply the <xref:System.Runtime.InteropServices.MarshalAsAttribute> attribute to marshal the <xref:System.Boolean> type to any of the following representations:","pos":[0,290],"nodes":[{"content":"While marshaling base data types to COM is generally straightforward, the <ph id=\"ph1\">&lt;xref:System.Boolean&gt;</ph> data type is an exception.","pos":[0,122],"source":"While marshaling base data types to COM is generally straightforward, the <xref:System.Boolean> data type is an exception."},{"content":"You can apply the <ph id=\"ph1\">&lt;xref:System.Runtime.InteropServices.MarshalAsAttribute&gt;</ph> attribute to marshal the <ph id=\"ph2\">&lt;xref:System.Boolean&gt;</ph> type to any of the following representations:","pos":[123,290],"source":" You can apply the <xref:System.Runtime.InteropServices.MarshalAsAttribute> attribute to marshal the <xref:System.Boolean> type to any of the following representations:"}]}]},{"pos":[15718,15734],"content":"Enumeration type","nodes":[{"content":"Enumeration type","pos":[0,16]}]},{"pos":[15735,15751],"content":"Unmanaged format","nodes":[{"content":"Unmanaged format","pos":[0,16]}]},{"pos":[15806,15882],"content":"<xref:System.Runtime.InteropServices.UnmanagedType?displayProperty=fullName>","nodes":[]},{"pos":[15883,16116],"content":"A 4-byte integer value, where any nonzero value represents `true` and 0 represents `false`. This is the default format of a <xref:System.Boolean> field in a structure and of a <xref:System.Boolean> parameter in platform invoke calls.","nodes":[{"content":"A 4-byte integer value, where any nonzero value represents <ph id=\"ph1\">`true`</ph> and 0 represents <ph id=\"ph2\">`false`</ph>.","pos":[0,91],"source":"A 4-byte integer value, where any nonzero value represents `true` and 0 represents `false`."},{"content":"This is the default format of a <ph id=\"ph1\">&lt;xref:System.Boolean&gt;</ph> field in a structure and of a <ph id=\"ph2\">&lt;xref:System.Boolean&gt;</ph> parameter in platform invoke calls.","pos":[92,233],"source":" This is the default format of a <xref:System.Boolean> field in a structure and of a <xref:System.Boolean> parameter in platform invoke calls."}]},{"pos":[16121,16197],"content":"<xref:System.Runtime.InteropServices.UnmanagedType?displayProperty=fullName>","nodes":[]},{"pos":[16198,16277],"content":"A 1-byte integer value, where the 1 represents <ph id=\"ph1\">`true`</ph> and 0 represents <ph id=\"ph2\">`false`</ph>.","source":"A 1-byte integer value, where the 1 represents `true` and 0 represents `false`."},{"pos":[16282,16358],"content":"<xref:System.Runtime.InteropServices.UnmanagedType?displayProperty=fullName>","nodes":[]},{"pos":[16359,16521],"content":"A 2-byte integer value, where -1 represents `true` and 0 represents `false`. This is the default format of a <xref:System.Boolean> parameter in COM interop calls.","nodes":[{"content":"A 2-byte integer value, where -1 represents <ph id=\"ph1\">`true`</ph> and 0 represents <ph id=\"ph2\">`false`</ph>.","pos":[0,76],"source":"A 2-byte integer value, where -1 represents `true` and 0 represents `false`."},{"content":"This is the default format of a <ph id=\"ph1\">&lt;xref:System.Boolean&gt;</ph> parameter in COM interop calls.","pos":[77,162],"source":" This is the default format of a <xref:System.Boolean> parameter in COM interop calls."}]}],"pos":[2114,18834],"yaml":true,"extradata":"MT"},{"content":"Compares this instance to a specified <xref href=\"System.Boolean\"></xref> object and returns an integer that indicates their relationship to one another.","nodes":[{"pos":[0,153],"content":"Compares this instance to a specified <ph id=\"ph1\">&lt;xref href=\"System.Boolean\"&gt;&lt;/xref&gt;</ph> object and returns an integer that indicates their relationship to one another.","source":"Compares this instance to a specified <xref href=\"System.Boolean\"></xref> object and returns an integer that indicates their relationship to one another."}],"pos":[20730,20884],"yaml":true},{"content":"This method implements the <xref:System.IComparable%601?displayProperty=fullName> interface and performs slightly better than the <xref:System.Boolean.CompareTo%2A?displayProperty=fullName> method because it does not have to convert the `value` parameter to an object.  \n  \n If `value` has fewer bits (is narrower) than the instance type, some programming languages perform an implicit widening conversion that transforms the value of the parameter into a value with more bits.  \n  \n For example, suppose the instance type is <xref:System.Int32> and the parameter type is <xref:System.Byte>. The Microsoft C# compiler generates instructions to represent the value of the parameter as an <xref:System.Int32> object, then generates a <xref:System.Int32.CompareTo%2A?displayProperty=fullName> method to compare the <xref:System.Int32> instance and parameter representation.  \n  \n Consult your programming language's documentation to determine whether its compiler performs implicit widening conversions on numeric types.","nodes":[{"pos":[0,268],"content":"This method implements the <ph id=\"ph1\">&lt;xref:System.IComparable%601?displayProperty=fullName&gt;</ph> interface and performs slightly better than the <ph id=\"ph2\">&lt;xref:System.Boolean.CompareTo%2A?displayProperty=fullName&gt;</ph> method because it does not have to convert the <ph id=\"ph3\">`value`</ph> parameter to an object.","source":"This method implements the <xref:System.IComparable%601?displayProperty=fullName> interface and performs slightly better than the <xref:System.Boolean.CompareTo%2A?displayProperty=fullName> method because it does not have to convert the `value` parameter to an object."},{"pos":[275,477],"content":"If <ph id=\"ph1\">`value`</ph> has fewer bits (is narrower) than the instance type, some programming languages perform an implicit widening conversion that transforms the value of the parameter into a value with more bits.","source":"If `value` has fewer bits (is narrower) than the instance type, some programming languages perform an implicit widening conversion that transforms the value of the parameter into a value with more bits."},{"pos":[484,870],"content":"For example, suppose the instance type is <xref:System.Int32> and the parameter type is <xref:System.Byte>. The Microsoft C# compiler generates instructions to represent the value of the parameter as an <xref:System.Int32> object, then generates a <xref:System.Int32.CompareTo%2A?displayProperty=fullName> method to compare the <xref:System.Int32> instance and parameter representation.","nodes":[{"content":"For example, suppose the instance type is <xref:System.Int32> and the parameter type is <xref:System.Byte>. The Microsoft C# compiler generates instructions to represent the value of the parameter as an <xref:System.Int32> object, then generates a <xref:System.Int32.CompareTo%2A?displayProperty=fullName> method to compare the <xref:System.Int32> instance and parameter representation.","pos":[0,386],"nodes":[{"content":"For example, suppose the instance type is <ph id=\"ph1\">&lt;xref:System.Int32&gt;</ph> and the parameter type is <ph id=\"ph2\">&lt;xref:System.Byte&gt;</ph>.","pos":[0,107],"source":"For example, suppose the instance type is <xref:System.Int32> and the parameter type is <xref:System.Byte>."},{"content":"The Microsoft C# compiler generates instructions to represent the value of the parameter as an <ph id=\"ph1\">&lt;xref:System.Int32&gt;</ph> object, then generates a <ph id=\"ph2\">&lt;xref:System.Int32.CompareTo%2A?displayProperty=fullName&gt;</ph> method to compare the <ph id=\"ph3\">&lt;xref:System.Int32&gt;</ph> instance and parameter representation.","pos":[108,386],"source":" The Microsoft C# compiler generates instructions to represent the value of the parameter as an <xref:System.Int32> object, then generates a <xref:System.Int32.CompareTo%2A?displayProperty=fullName> method to compare the <xref:System.Int32> instance and parameter representation."}]}]},{"pos":[877,1017],"content":"Consult your programming language's documentation to determine whether its compiler performs implicit widening conversions on numeric types.","nodes":[{"content":"Consult your programming language's documentation to determine whether its compiler performs implicit widening conversions on numeric types.","pos":[0,140]}]}],"pos":[20895,21921],"yaml":true,"extradata":"MT"},{"content":"A <xref href=\"System.Boolean\"></xref> object to compare to this instance.","nodes":[{"pos":[0,73],"content":"A <ph id=\"ph1\">&lt;xref href=\"System.Boolean\"&gt;&lt;/xref&gt;</ph> object to compare to this instance.","source":"A <xref href=\"System.Boolean\"></xref> object to compare to this instance."}],"pos":[22534,22608],"yaml":true},{"content":"A signed integer that indicates the relative values of this instance and <code>value</code>.  \n  \n <table><thead><tr><th> Return Value  \n  \n </th><th> Condition  \n  \n </th></tr></thead><tbody><tr><td> Less than zero  \n  \n </td><td> This instance is `false` and <code>value</code> is `true`.  \n  \n </td></tr><tr><td> Zero  \n  \n </td><td> This instance and <code>value</code> are equal (either both are `true` or both are `false`).  \n  \n </td></tr><tr><td> Greater than zero  \n  \n </td><td> This instance is `true` and <code>value</code> is `false`.  \n  \n </td></tr></tbody></table>","nodes":[{"pos":[0,92],"content":"A signed integer that indicates the relative values of this instance and <bpt id=\"p1\">&lt;code&gt;</bpt><ph id=\"ph1\">value</ph><ept id=\"p1\">&lt;/code&gt;</ept>.","source":"A signed integer that indicates the relative values of this instance and <code>value</code>."},{"pos":[99,581],"content":"<table><thead><tr><th> Return Value  \n  \n </th><th> Condition  \n  \n </th></tr></thead><tbody><tr><td> Less than zero  \n  \n </td><td> This instance is `false` and <code>value</code> is `true`.  \n  \n </td></tr><tr><td> Zero  \n  \n </td><td> This instance and <code>value</code> are equal (either both are `true` or both are `false`).  \n  \n </td></tr><tr><td> Greater than zero  \n  \n </td><td> This instance is `true` and <code>value</code> is `false`.  \n  \n </td></tr></tbody></table>","nodes":[{"content":"Return Value","pos":[23,40],"source":" Return Value  \n  \n "},{"content":"Condition","pos":[52,66],"source":" Condition  \n  \n "},{"content":"Less than zero","pos":[102,121],"source":" Less than zero  \n  \n "},{"content":" This instance is `false` and <code>value</code> is `true`.  \n  \n ","pos":[132,198],"nodes":[{"content":"This instance is <ph id=\"ph1\">`false`</ph> and <ph id=\"ph2\">&lt;code&gt;value&lt;/code&gt;</ph> is <ph id=\"ph3\">`true`</ph>.","pos":[1,59],"source":" This instance is `false` and <code>value</code> is `true`."}]},{"content":"Zero","pos":[217,226],"source":" Zero  \n  \n "},{"content":" This instance and <code>value</code> are equal (either both are `true` or both are `false`).  \n  \n ","pos":[237,337],"nodes":[{"content":"This instance and <ph id=\"ph1\">&lt;code&gt;value&lt;/code&gt;</ph> are equal (either both are <ph id=\"ph2\">`true`</ph> or both are <ph id=\"ph3\">`false`</ph>).","pos":[1,93],"source":" This instance and <code>value</code> are equal (either both are `true` or both are `false`)."}]},{"content":"Greater than zero","pos":[356,378],"source":" Greater than zero  \n  \n "},{"content":" This instance is `true` and <code>value</code> is `false`.  \n  \n ","pos":[389,455],"nodes":[{"content":"This instance is <ph id=\"ph1\">`true`</ph> and <ph id=\"ph2\">&lt;code&gt;value&lt;/code&gt;</ph> is <ph id=\"ph3\">`false`</ph>.","pos":[1,59],"source":" This instance is `true` and <code>value</code> is `false`."}]}]}],"pos":[22664,23265],"yaml":true},{"content":"Compares this instance to a specified object and returns an integer that indicates their relationship to one another.","nodes":[{"pos":[0,117],"content":"Compares this instance to a specified object and returns an integer that indicates their relationship to one another.","nodes":[{"content":"Compares this instance to a specified object and returns an integer that indicates their relationship to one another.","pos":[0,117]}]}],"pos":[24767,24885],"yaml":true},{"content":"`obj` must be `null` or an instance of `Boolean`; otherwise, an exception is thrown.  \n  \n This method implements the <xref:System.IComparable> interface.","nodes":[{"pos":[0,84],"content":"<ph id=\"ph1\">`obj`</ph> must be <ph id=\"ph2\">`null`</ph> or an instance of <ph id=\"ph3\">`Boolean`</ph>; otherwise, an exception is thrown.","source":"`obj` must be `null` or an instance of `Boolean`; otherwise, an exception is thrown."},{"pos":[91,154],"content":"This method implements the <xref:System.IComparable> interface.","nodes":[{"content":"This method implements the <ph id=\"ph1\">&lt;xref:System.IComparable&gt;</ph> interface.","pos":[0,63],"source":"This method implements the <xref:System.IComparable> interface."}]}],"pos":[24896,25055],"yaml":true,"extradata":"MT"},{"content":"An object to compare to this instance, or `null`.","nodes":[{"pos":[0,49],"content":"An object to compare to this instance, or <ph id=\"ph1\">`null`</ph>.","source":"An object to compare to this instance, or `null`."}],"pos":[25188,25238],"yaml":true},{"content":"A signed integer that indicates the relative order of this instance and <code>obj</code>.  \n  \n <table><thead><tr><th> Return Value  \n  \n </th><th> Condition  \n  \n </th></tr></thead><tbody><tr><td> Less than zero  \n  \n </td><td> This instance is `false` and <code>obj</code> is `true`.  \n  \n </td></tr><tr><td> Zero  \n  \n </td><td> This instance and <code>obj</code> are equal (either both are `true` or both are `false`).  \n  \n </td></tr><tr><td> Greater than zero  \n  \n </td><td> This instance is `true` and <code>obj</code> is `false`.  \n  \n -or-  \n  \n <code>obj</code> is `null`.  \n  \n </td></tr></tbody></table>","nodes":[{"pos":[0,89],"content":"A signed integer that indicates the relative order of this instance and <bpt id=\"p1\">&lt;code&gt;</bpt><ph id=\"ph1\">obj</ph><ept id=\"p1\">&lt;/code&gt;</ept>.","source":"A signed integer that indicates the relative order of this instance and <code>obj</code>."},{"pos":[96,538],"content":"<table><thead><tr><th> Return Value  \n  \n </th><th> Condition  \n  \n </th></tr></thead><tbody><tr><td> Less than zero  \n  \n </td><td> This instance is `false` and <code>obj</code> is `true`.  \n  \n </td></tr><tr><td> Zero  \n  \n </td><td> This instance and <code>obj</code> are equal (either both are `true` or both are `false`).  \n  \n </td></tr><tr><td> Greater than zero  \n  \n </td><td> This instance is `true` and <code>obj</code> is `false`.","nodes":[{"content":"Return Value","pos":[23,40],"source":" Return Value  \n  \n "},{"content":"Condition","pos":[52,66],"source":" Condition  \n  \n "},{"content":"Less than zero","pos":[102,121],"source":" Less than zero  \n  \n "},{"content":" This instance is `false` and <code>obj</code> is `true`.  \n  \n ","pos":[132,196],"nodes":[{"content":"This instance is <ph id=\"ph1\">`false`</ph> and <ph id=\"ph2\">&lt;code&gt;obj&lt;/code&gt;</ph> is <ph id=\"ph3\">`true`</ph>.","pos":[1,57],"source":" This instance is `false` and <code>obj</code> is `true`."}]},{"content":"Zero","pos":[215,224],"source":" Zero  \n  \n "},{"content":" This instance and <code>obj</code> are equal (either both are `true` or both are `false`).  \n  \n ","pos":[235,333],"nodes":[{"content":"This instance and <ph id=\"ph1\">&lt;code&gt;obj&lt;/code&gt;</ph> are equal (either both are <ph id=\"ph2\">`true`</ph> or both are <ph id=\"ph3\">`false`</ph>).","pos":[1,91],"source":" This instance and <code>obj</code> are equal (either both are `true` or both are `false`)."}]},{"content":"Greater than zero","pos":[352,374],"source":" Greater than zero  \n  \n "},{"content":"This instance is <ph id=\"ph1\">`true`</ph> and <ph id=\"ph2\">&lt;code&gt;obj&lt;/code&gt;</ph> is <ph id=\"ph3\">`false`</ph>.","pos":[386,442],"source":" This instance is `true` and <code>obj</code> is `false`."}]},{"pos":[545,549],"content":"-or-","nodes":[{"content":"-or-","pos":[0,4]}]},{"pos":[556,617],"content":"<code>obj</code> is `null`.  \n  \n </td></tr></tbody></table>","nodes":[{"content":"<code>obj</code> is `null`.  \n  \n ","pos":[0,34],"nodes":[{"content":"<ph id=\"ph1\">&lt;code&gt;obj&lt;/code&gt;</ph> is <ph id=\"ph2\">`null`</ph>.","pos":[0,27],"source":"<code>obj</code> is `null`."}]}]}],"pos":[25294,25935],"yaml":true},{"content":"<code>obj</code> is not a <xref href=\"System.Boolean\"></xref>.","nodes":[{"pos":[0,62],"content":"<ph id=\"ph1\">&lt;code&gt;obj&lt;/code&gt;</ph> is not a <ph id=\"ph2\">&lt;xref href=\"System.Boolean\"&gt;&lt;/xref&gt;</ph>.","source":"<code>obj</code> is not a <xref href=\"System.Boolean\"></xref>."}],"pos":[26081,26144],"yaml":true},{"content":"Returns a value indicating whether this instance is equal to a specified <xref href=\"System.Boolean\"></xref> object.","nodes":[{"pos":[0,116],"content":"Returns a value indicating whether this instance is equal to a specified <ph id=\"ph1\">&lt;xref href=\"System.Boolean\"&gt;&lt;/xref&gt;</ph> object.","source":"Returns a value indicating whether this instance is equal to a specified <xref href=\"System.Boolean\"></xref> object."}],"pos":[27235,27352],"yaml":true},{"content":"This method implements the <xref:System.IEquatable%601?displayProperty=fullName> interface, and performs slightly better than <xref:System.Boolean.Equals%2A> because it does not have to convert the `obj` parameter to an object.","nodes":[{"pos":[0,227],"content":"This method implements the <ph id=\"ph1\">&lt;xref:System.IEquatable%601?displayProperty=fullName&gt;</ph> interface, and performs slightly better than <ph id=\"ph2\">&lt;xref:System.Boolean.Equals%2A&gt;</ph> because it does not have to convert the <ph id=\"ph3\">`obj`</ph> parameter to an object.","source":"This method implements the <xref:System.IEquatable%601?displayProperty=fullName> interface, and performs slightly better than <xref:System.Boolean.Equals%2A> because it does not have to convert the `obj` parameter to an object."}],"pos":[27363,27591],"yaml":true,"extradata":"MT"},{"content":"A <xref href=\"System.Boolean\"></xref> value to compare to this instance.","nodes":[{"pos":[0,72],"content":"A <ph id=\"ph1\">&lt;xref href=\"System.Boolean\"&gt;&lt;/xref&gt;</ph> value to compare to this instance.","source":"A <xref href=\"System.Boolean\"></xref> value to compare to this instance."}],"pos":[27721,27794],"yaml":true},{"content":"`true` if <code>obj</code> has the same value as this instance; otherwise, `false`.","nodes":[{"pos":[0,83],"content":"<ph id=\"ph1\">`true`</ph> if <bpt id=\"p1\">&lt;code&gt;</bpt><ph id=\"ph2\">obj</ph><ept id=\"p1\">&lt;/code&gt;</ept> has the same value as this instance; otherwise, <ph id=\"ph3\">`false`</ph>.","source":"`true` if <code>obj</code> has the same value as this instance; otherwise, `false`."}],"pos":[27852,27938],"yaml":true},{"content":"Returns a value indicating whether this instance is equal to a specified object.","nodes":[{"pos":[0,80],"content":"Returns a value indicating whether this instance is equal to a specified object.","nodes":[{"content":"Returns a value indicating whether this instance is equal to a specified object.","pos":[0,80]}]}],"pos":[29419,29500],"yaml":true},{"content":"This method overrides <xref:System.Object.Equals%2A>.","nodes":[{"pos":[0,53],"content":"This method overrides <xref:System.Object.Equals%2A>.","nodes":[{"content":"This method overrides <ph id=\"ph1\">&lt;xref:System.Object.Equals%2A&gt;</ph>.","pos":[0,53],"source":"This method overrides <xref:System.Object.Equals%2A>."}]}],"pos":[29511,29565],"yaml":true,"extradata":"MT"},{"content":"An object to compare to this instance.","nodes":[{"pos":[0,38],"content":"An object to compare to this instance.","nodes":[{"content":"An object to compare to this instance.","pos":[0,38]}]}],"pos":[29705,29744],"yaml":true},{"content":"`true` if <code>obj</code> is a <xref href=\"System.Boolean\"></xref> and has the same value as this instance; otherwise, `false`.","nodes":[{"pos":[0,128],"content":"<ph id=\"ph1\">`true`</ph> if <bpt id=\"p1\">&lt;code&gt;</bpt><ph id=\"ph2\">obj</ph><ept id=\"p1\">&lt;/code&gt;</ept> is a <ph id=\"ph3\">&lt;xref href=\"System.Boolean\"&gt;&lt;/xref&gt;</ph> and has the same value as this instance; otherwise, <ph id=\"ph4\">`false`</ph>.","source":"`true` if <code>obj</code> is a <xref href=\"System.Boolean\"></xref> and has the same value as this instance; otherwise, `false`."}],"pos":[29802,29933],"yaml":true},{"content":"Represents the Boolean value `false` as a string. This field is read-only.","nodes":[{"pos":[0,74],"content":"Represents the Boolean value `false` as a string. This field is read-only.","nodes":[{"content":"Represents the Boolean value <ph id=\"ph1\">`false`</ph> as a string.","pos":[0,49],"source":"Represents the Boolean value `false` as a string."},{"content":"This field is read-only.","pos":[50,74]}]}],"pos":[31374,31449],"yaml":true},{"content":"This field is equal to the string \"False\".  \n  \n The <xref:System.Boolean.FalseString> property defines the string representation of a `False`<xref:System.Boolean> value in formatting and parsing operations.","nodes":[{"pos":[0,42],"content":"This field is equal to the string \"False\".","nodes":[{"content":"This field is equal to the string \"False\".","pos":[0,42]}]},{"pos":[49,207],"content":"The <ph id=\"ph1\">&lt;xref:System.Boolean.FalseString&gt;</ph> property defines the string representation of a <ph id=\"ph2\">`False`</ph><ph id=\"ph3\">&lt;xref:System.Boolean&gt;</ph> value in formatting and parsing operations.","source":"The <xref:System.Boolean.FalseString> property defines the string representation of a `False`<xref:System.Boolean> value in formatting and parsing operations."}],"pos":[31460,31674],"yaml":true,"extradata":"MT"},{"content":"Returns the hash code for this instance.","nodes":[{"pos":[0,40],"content":"Returns the hash code for this instance.","nodes":[{"content":"Returns the hash code for this instance.","pos":[0,40]}]}],"pos":[33213,33254],"yaml":true},{"content":"The <xref:System.Boolean> class implements `true` as the integer, one, and `false` as the integer, zero. However, a particular programming language might represent `true` and `false` with other values.","nodes":[{"pos":[0,201],"content":"The <xref:System.Boolean> class implements `true` as the integer, one, and `false` as the integer, zero. However, a particular programming language might represent `true` and `false` with other values.","nodes":[{"content":"The <ph id=\"ph1\">&lt;xref:System.Boolean&gt;</ph> class implements <ph id=\"ph2\">`true`</ph> as the integer, one, and <ph id=\"ph3\">`false`</ph> as the integer, zero.","pos":[0,104],"source":"The <xref:System.Boolean> class implements `true` as the integer, one, and `false` as the integer, zero."},{"content":"However, a particular programming language might represent <ph id=\"ph1\">`true`</ph> and <ph id=\"ph2\">`false`</ph> with other values.","pos":[105,201],"source":" However, a particular programming language might represent `true` and `false` with other values."}]}],"pos":[33265,33467],"yaml":true,"extradata":"MT"},{"content":"A hash code for the current <xref href=\"System.Boolean\"></xref>.","nodes":[{"pos":[0,64],"content":"A hash code for the current <ph id=\"ph1\">&lt;xref href=\"System.Boolean\"&gt;&lt;/xref&gt;</ph>.","source":"A hash code for the current <xref href=\"System.Boolean\"></xref>."}],"pos":[33601,33666],"yaml":true},{"content":"Returns the type code for the <xref href=\"System.Boolean\"></xref> value type.","nodes":[{"pos":[0,77],"content":"Returns the type code for the <ph id=\"ph1\">&lt;xref href=\"System.Boolean\"&gt;&lt;/xref&gt;</ph> value type.","source":"Returns the type code for the <xref href=\"System.Boolean\"></xref> value type."}],"pos":[35119,35197],"yaml":true},{"content":"The enumerated constant <xref href=\"System.TypeCode.Boolean\"></xref>.","nodes":[{"pos":[0,69],"content":"The enumerated constant <ph id=\"ph1\">&lt;xref href=\"System.TypeCode.Boolean\"&gt;&lt;/xref&gt;</ph>.","source":"The enumerated constant <xref href=\"System.TypeCode.Boolean\"></xref>."}],"pos":[35330,35400],"yaml":true},{"content":"Converts the specified string representation of a logical value to its <xref href=\"System.Boolean\"></xref> equivalent.","nodes":[{"pos":[0,118],"content":"Converts the specified string representation of a logical value to its <ph id=\"ph1\">&lt;xref href=\"System.Boolean\"&gt;&lt;/xref&gt;</ph> equivalent.","source":"Converts the specified string representation of a logical value to its <xref href=\"System.Boolean\"></xref> equivalent."}],"pos":[36536,36655],"yaml":true},{"content":"The `value` parameter, optionally preceded or trailed by white space, must contain either <xref:System.Boolean.TrueString> or <xref:System.Boolean.FalseString>; otherwise, an exception is thrown. The comparison is case-insensitive.","nodes":[{"pos":[0,231],"content":"The `value` parameter, optionally preceded or trailed by white space, must contain either <xref:System.Boolean.TrueString> or <xref:System.Boolean.FalseString>; otherwise, an exception is thrown. The comparison is case-insensitive.","nodes":[{"content":"The <ph id=\"ph1\">`value`</ph> parameter, optionally preceded or trailed by white space, must contain either <ph id=\"ph2\">&lt;xref:System.Boolean.TrueString&gt;</ph> or <ph id=\"ph3\">&lt;xref:System.Boolean.FalseString&gt;</ph>; otherwise, an exception is thrown.","pos":[0,195],"source":"The `value` parameter, optionally preceded or trailed by white space, must contain either <xref:System.Boolean.TrueString> or <xref:System.Boolean.FalseString>; otherwise, an exception is thrown."},{"content":"The comparison is case-insensitive.","pos":[196,231]}]}],"pos":[36666,36898],"yaml":true,"extradata":"MT"},{"content":"A string containing the value to convert.","nodes":[{"pos":[0,41],"content":"A string containing the value to convert.","nodes":[{"content":"A string containing the value to convert.","pos":[0,41]}]}],"pos":[37517,37559],"yaml":true},{"content":"`true` if <code>value</code> is equivalent to <xref href=\"System.Boolean.TrueString\"></xref>; `false` if <code>value</code> is equivalent to <xref href=\"System.Boolean.FalseString\"></xref>.","nodes":[{"pos":[0,189],"content":"<ph id=\"ph1\">`true`</ph> if <bpt id=\"p1\">&lt;code&gt;</bpt><ph id=\"ph2\">value</ph><ept id=\"p1\">&lt;/code&gt;</ept> is equivalent to <ph id=\"ph3\">&lt;xref href=\"System.Boolean.TrueString\"&gt;&lt;/xref&gt;</ph>; <ph id=\"ph4\">`false`</ph> if <bpt id=\"p2\">&lt;code&gt;</bpt><ph id=\"ph5\">value</ph><ept id=\"p2\">&lt;/code&gt;</ept> is equivalent to <ph id=\"ph6\">&lt;xref href=\"System.Boolean.FalseString\"&gt;&lt;/xref&gt;</ph>.","source":"`true` if <code>value</code> is equivalent to <xref href=\"System.Boolean.TrueString\"></xref>; `false` if <code>value</code> is equivalent to <xref href=\"System.Boolean.FalseString\"></xref>."}],"pos":[37617,37809],"yaml":true},{"content":"<code>value</code> is `null`.","nodes":[{"pos":[0,29],"content":"<ph id=\"ph1\">&lt;code&gt;value&lt;/code&gt;</ph> is <ph id=\"ph2\">`null`</ph>.","source":"<code>value</code> is `null`."}],"pos":[37959,37989],"yaml":true},{"content":"<code>value</code> is not equivalent to <xref href=\"System.Boolean.TrueString\"></xref> or <xref href=\"System.Boolean.FalseString\"></xref>.","nodes":[{"pos":[0,138],"content":"<ph id=\"ph1\">&lt;code&gt;value&lt;/code&gt;</ph> is not equivalent to <ph id=\"ph2\">&lt;xref href=\"System.Boolean.TrueString\"&gt;&lt;/xref&gt;</ph> or <ph id=\"ph3\">&lt;xref href=\"System.Boolean.FalseString\"&gt;&lt;/xref&gt;</ph>.","source":"<code>value</code> is not equivalent to <xref href=\"System.Boolean.TrueString\"></xref> or <xref href=\"System.Boolean.FalseString\"></xref>."}],"pos":[38079,38218],"yaml":true},{"content":"Converts the value of this instance to its equivalent string representation (either \"True\" or \"False\").","nodes":[{"pos":[0,103],"content":"Converts the value of this instance to its equivalent string representation (either \"True\" or \"False\").","nodes":[{"content":"Converts the value of this instance to its equivalent string representation (either \"True\" or \"False\").","pos":[0,103]}]}],"pos":[39713,39817],"yaml":true},{"content":"The `provider` parameter is reserved. It does not participate in the execution of this method. This means that the <xref:System.Boolean.ToString%28System.IFormatProvider%29?displayProperty=fullName> method, unlike most methods with a `provider` parameter, does not reflect culture-specific settings.  \n  \n This method returns the constants \"True\" or \"False\". Note that XML is case-sensitive, and that the XML specification recognizes \"true\" and \"false\" as the valid set of Boolean values. If the <xref:System.String> object returned by the <xref:System.Boolean.ToString%28System.IFormatProvider%29> method is to be written to an XML file, its <xref:System.String.ToLowerInvariant%2A?displayProperty=fullName> method should be called first to convert it to lowercase.","nodes":[{"pos":[0,299],"content":"The `provider` parameter is reserved. It does not participate in the execution of this method. This means that the <xref:System.Boolean.ToString%28System.IFormatProvider%29?displayProperty=fullName> method, unlike most methods with a `provider` parameter, does not reflect culture-specific settings.","nodes":[{"content":"The <ph id=\"ph1\">`provider`</ph> parameter is reserved.","pos":[0,37],"source":"The `provider` parameter is reserved."},{"content":"It does not participate in the execution of this method.","pos":[38,94]},{"content":"This means that the <ph id=\"ph1\">&lt;xref:System.Boolean.ToString%28System.IFormatProvider%29?displayProperty=fullName&gt;</ph> method, unlike most methods with a <ph id=\"ph2\">`provider`</ph> parameter, does not reflect culture-specific settings.","pos":[95,299],"source":" This means that the <xref:System.Boolean.ToString%28System.IFormatProvider%29?displayProperty=fullName> method, unlike most methods with a `provider` parameter, does not reflect culture-specific settings."}]},{"pos":[306,766],"content":"This method returns the constants \"True\" or \"False\". Note that XML is case-sensitive, and that the XML specification recognizes \"true\" and \"false\" as the valid set of Boolean values. If the <xref:System.String> object returned by the <xref:System.Boolean.ToString%28System.IFormatProvider%29> method is to be written to an XML file, its <xref:System.String.ToLowerInvariant%2A?displayProperty=fullName> method should be called first to convert it to lowercase.","nodes":[{"content":"This method returns the constants \"True\" or \"False\". Note that XML is case-sensitive, and that the XML specification recognizes \"true\" and \"false\" as the valid set of Boolean values. If the <xref:System.String> object returned by the <xref:System.Boolean.ToString%28System.IFormatProvider%29> method is to be written to an XML file, its <xref:System.String.ToLowerInvariant%2A?displayProperty=fullName> method should be called first to convert it to lowercase.","pos":[0,460],"nodes":[{"content":"This method returns the constants \"True\" or \"False\".","pos":[0,52]},{"content":"Note that XML is case-sensitive, and that the XML specification recognizes \"true\" and \"false\" as the valid set of Boolean values.","pos":[53,182]},{"content":"If the <ph id=\"ph1\">&lt;xref:System.String&gt;</ph> object returned by the <ph id=\"ph2\">&lt;xref:System.Boolean.ToString%28System.IFormatProvider%29&gt;</ph> method is to be written to an XML file, its <ph id=\"ph3\">&lt;xref:System.String.ToLowerInvariant%2A?displayProperty=fullName&gt;</ph> method should be called first to convert it to lowercase.","pos":[183,460],"source":" If the <xref:System.String> object returned by the <xref:System.Boolean.ToString%28System.IFormatProvider%29> method is to be written to an XML file, its <xref:System.String.ToLowerInvariant%2A?displayProperty=fullName> method should be called first to convert it to lowercase."}]}]}],"pos":[39828,40607],"yaml":true,"extradata":"MT"},{"content":"(Reserved) An <xref href=\"System.IFormatProvider\"></xref> object.","nodes":[{"pos":[0,65],"content":"(Reserved) An <ph id=\"ph1\">&lt;xref href=\"System.IFormatProvider\"&gt;&lt;/xref&gt;</ph> object.","source":"(Reserved) An <xref href=\"System.IFormatProvider\"></xref> object."}],"pos":[40770,40836],"yaml":true},{"content":"<xref href=\"System.Boolean.TrueString\"></xref> if the value of this instance is `true`, or <xref href=\"System.Boolean.FalseString\"></xref> if the value of this instance is `false`.","nodes":[{"pos":[0,180],"content":"<ph id=\"ph1\">&lt;xref href=\"System.Boolean.TrueString\"&gt;&lt;/xref&gt;</ph> if the value of this instance is <ph id=\"ph2\">`true`</ph>, or <ph id=\"ph3\">&lt;xref href=\"System.Boolean.FalseString\"&gt;&lt;/xref&gt;</ph> if the value of this instance is <ph id=\"ph4\">`false`</ph>.","source":"<xref href=\"System.Boolean.TrueString\"></xref> if the value of this instance is `true`, or <xref href=\"System.Boolean.FalseString\"></xref> if the value of this instance is `false`."}],"pos":[40893,41074],"yaml":true},{"content":"Converts the value of this instance to its equivalent string representation (either \"True\" or \"False\").","nodes":[{"pos":[0,103],"content":"Converts the value of this instance to its equivalent string representation (either \"True\" or \"False\").","nodes":[{"content":"Converts the value of this instance to its equivalent string representation (either \"True\" or \"False\").","pos":[0,103]}]}],"pos":[42162,42266],"yaml":true},{"content":"This method returns the constants \"True\" or \"False\".  \n  \n Note that XML is case-sensitive, and that the XML specification recognizes \"true\" and \"false\" as the valid set of Boolean values. If the string returned by the <xref:System.Boolean.ToString> method is to be written to an XML file, its <xref:System.String.ToLowerInvariant%2A?displayProperty=fullName> method should be called first to convert it to lowercase.","nodes":[{"pos":[0,52],"content":"This method returns the constants \"True\" or \"False\".","nodes":[{"content":"This method returns the constants \"True\" or \"False\".","pos":[0,52]}]},{"pos":[59,417],"content":"Note that XML is case-sensitive, and that the XML specification recognizes \"true\" and \"false\" as the valid set of Boolean values. If the string returned by the <xref:System.Boolean.ToString> method is to be written to an XML file, its <xref:System.String.ToLowerInvariant%2A?displayProperty=fullName> method should be called first to convert it to lowercase.","nodes":[{"content":"Note that XML is case-sensitive, and that the XML specification recognizes \"true\" and \"false\" as the valid set of Boolean values. If the string returned by the <xref:System.Boolean.ToString> method is to be written to an XML file, its <xref:System.String.ToLowerInvariant%2A?displayProperty=fullName> method should be called first to convert it to lowercase.","pos":[0,358],"nodes":[{"content":"Note that XML is case-sensitive, and that the XML specification recognizes \"true\" and \"false\" as the valid set of Boolean values.","pos":[0,129]},{"content":"If the string returned by the <ph id=\"ph1\">&lt;xref:System.Boolean.ToString&gt;</ph> method is to be written to an XML file, its <ph id=\"ph2\">&lt;xref:System.String.ToLowerInvariant%2A?displayProperty=fullName&gt;</ph> method should be called first to convert it to lowercase.","pos":[130,358],"source":" If the string returned by the <xref:System.Boolean.ToString> method is to be written to an XML file, its <xref:System.String.ToLowerInvariant%2A?displayProperty=fullName> method should be called first to convert it to lowercase."}]}]}],"pos":[42277,42707],"yaml":true,"extradata":"MT"},{"content":"\"True\" (the value of the <xref href=\"System.Boolean.TrueString\"></xref> property) if the value of this instance is `true`, or \"False\" (the value of the <xref href=\"System.Boolean.FalseString\"></xref> property) if the value of this instance is `false`.","nodes":[{"pos":[0,251],"content":"\"True\" (the value of the <ph id=\"ph1\">&lt;xref href=\"System.Boolean.TrueString\"&gt;&lt;/xref&gt;</ph> property) if the value of this instance is <ph id=\"ph2\">`true`</ph>, or \"False\" (the value of the <ph id=\"ph3\">&lt;xref href=\"System.Boolean.FalseString\"&gt;&lt;/xref&gt;</ph> property) if the value of this instance is <ph id=\"ph4\">`false`</ph>.","source":"\"True\" (the value of the <xref href=\"System.Boolean.TrueString\"></xref> property) if the value of this instance is `true`, or \"False\" (the value of the <xref href=\"System.Boolean.FalseString\"></xref> property) if the value of this instance is `false`."}],"pos":[43311,43573],"yaml":true},{"content":"Represents the Boolean value `true` as a string. This field is read-only.","nodes":[{"pos":[0,73],"content":"Represents the Boolean value `true` as a string. This field is read-only.","nodes":[{"content":"Represents the Boolean value <ph id=\"ph1\">`true`</ph> as a string.","pos":[0,48],"source":"Represents the Boolean value `true` as a string."},{"content":"This field is read-only.","pos":[49,73]}]}],"pos":[45010,45084],"yaml":true},{"content":"This field is equal to the string \"True\".  \n  \n The <xref:System.Boolean.TrueString> property defines the string representation of a `True`<xref:System.Boolean> value in formatting and parsing operations.","nodes":[{"pos":[0,41],"content":"This field is equal to the string \"True\".","nodes":[{"content":"This field is equal to the string \"True\".","pos":[0,41]}]},{"pos":[48,204],"content":"The <ph id=\"ph1\">&lt;xref:System.Boolean.TrueString&gt;</ph> property defines the string representation of a <ph id=\"ph2\">`True`</ph><ph id=\"ph3\">&lt;xref:System.Boolean&gt;</ph> value in formatting and parsing operations.","source":"The <xref:System.Boolean.TrueString> property defines the string representation of a `True`<xref:System.Boolean> value in formatting and parsing operations."}],"pos":[45095,45306],"yaml":true,"extradata":"MT"},{"content":"Tries to convert the specified string representation of a logical value to its <xref href=\"System.Boolean\"></xref> equivalent. A return value indicates whether the conversion succeeded or failed.","nodes":[{"pos":[0,195],"content":"Tries to convert the specified string representation of a logical value to its <xref href=\"System.Boolean\"></xref> equivalent. A return value indicates whether the conversion succeeded or failed.","nodes":[{"content":"Tries to convert the specified string representation of a logical value to its <ph id=\"ph1\">&lt;xref href=\"System.Boolean\"&gt;&lt;/xref&gt;</ph> equivalent.","pos":[0,126],"source":"Tries to convert the specified string representation of a logical value to its <xref href=\"System.Boolean\"></xref> equivalent."},{"content":"A return value indicates whether the conversion succeeded or failed.","pos":[127,195]}]}],"pos":[46964,47160],"yaml":true},{"content":"The <xref:System.Boolean.TryParse%2A> method is like the <xref:System.Boolean.Parse%2A> method, except the <xref:System.Boolean.TryParse%2A> method does not throw an exception if the conversion fails.  \n  \n The `value` parameter can be preceded or followed by white space. The comparison is ordinal and case-insensitive.","nodes":[{"pos":[0,200],"content":"The <xref:System.Boolean.TryParse%2A> method is like the <xref:System.Boolean.Parse%2A> method, except the <xref:System.Boolean.TryParse%2A> method does not throw an exception if the conversion fails.","nodes":[{"content":"The <ph id=\"ph1\">&lt;xref:System.Boolean.TryParse%2A&gt;</ph> method is like the <ph id=\"ph2\">&lt;xref:System.Boolean.Parse%2A&gt;</ph> method, except the <ph id=\"ph3\">&lt;xref:System.Boolean.TryParse%2A&gt;</ph> method does not throw an exception if the conversion fails.","pos":[0,200],"source":"The <xref:System.Boolean.TryParse%2A> method is like the <xref:System.Boolean.Parse%2A> method, except the <xref:System.Boolean.TryParse%2A> method does not throw an exception if the conversion fails."}]},{"pos":[207,320],"content":"The `value` parameter can be preceded or followed by white space. The comparison is ordinal and case-insensitive.","nodes":[{"content":"The <ph id=\"ph1\">`value`</ph> parameter can be preceded or followed by white space.","pos":[0,65],"source":"The `value` parameter can be preceded or followed by white space."},{"content":"The comparison is ordinal and case-insensitive.","pos":[66,113]}]}],"pos":[47171,47496],"yaml":true,"extradata":"MT"},{"content":"A string containing the value to convert.","nodes":[{"pos":[0,41],"content":"A string containing the value to convert.","nodes":[{"content":"A string containing the value to convert.","pos":[0,41]}]}],"pos":[48305,48347],"yaml":true},{"content":"When this method returns, if the conversion succeeded, contains `true` if <code>value</code> is equal to <xref href=\"System.Boolean.TrueString\"></xref> or `false` if <code>value</code> is equal to <xref href=\"System.Boolean.FalseString\"></xref>. If the conversion failed, contains `false`. The conversion fails if <code>value</code> is `null` or is not equal to the value of either the <xref href=\"System.Boolean.TrueString\"></xref> or <xref href=\"System.Boolean.FalseString\"></xref> field.","nodes":[{"pos":[0,490],"content":"When this method returns, if the conversion succeeded, contains `true` if <code>value</code> is equal to <xref href=\"System.Boolean.TrueString\"></xref> or `false` if <code>value</code> is equal to <xref href=\"System.Boolean.FalseString\"></xref>. If the conversion failed, contains `false`. The conversion fails if <code>value</code> is `null` or is not equal to the value of either the <xref href=\"System.Boolean.TrueString\"></xref> or <xref href=\"System.Boolean.FalseString\"></xref> field.","nodes":[{"content":"When this method returns, if the conversion succeeded, contains <ph id=\"ph1\">`true`</ph> if <bpt id=\"p1\">&lt;code&gt;</bpt><ph id=\"ph2\">value</ph><ept id=\"p1\">&lt;/code&gt;</ept> is equal to <ph id=\"ph3\">&lt;xref href=\"System.Boolean.TrueString\"&gt;&lt;/xref&gt;</ph> or <ph id=\"ph4\">`false`</ph> if <bpt id=\"p2\">&lt;code&gt;</bpt><ph id=\"ph5\">value</ph><ept id=\"p2\">&lt;/code&gt;</ept> is equal to <ph id=\"ph6\">&lt;xref href=\"System.Boolean.FalseString\"&gt;&lt;/xref&gt;</ph>.","pos":[0,245],"source":"When this method returns, if the conversion succeeded, contains `true` if <code>value</code> is equal to <xref href=\"System.Boolean.TrueString\"></xref> or `false` if <code>value</code> is equal to <xref href=\"System.Boolean.FalseString\"></xref>."},{"content":"If the conversion failed, contains <ph id=\"ph1\">`false`</ph>.","pos":[246,289],"source":" If the conversion failed, contains `false`."},{"content":"The conversion fails if <bpt id=\"p1\">&lt;code&gt;</bpt><ph id=\"ph1\">value</ph><ept id=\"p1\">&lt;/code&gt;</ept> is <ph id=\"ph2\">`null`</ph> or is not equal to the value of either the <ph id=\"ph3\">&lt;xref href=\"System.Boolean.TrueString\"&gt;&lt;/xref&gt;</ph> or <ph id=\"ph4\">&lt;xref href=\"System.Boolean.FalseString\"&gt;&lt;/xref&gt;</ph> field.","pos":[290,490],"source":" The conversion fails if <code>value</code> is `null` or is not equal to the value of either the <xref href=\"System.Boolean.TrueString\"></xref> or <xref href=\"System.Boolean.FalseString\"></xref> field."}]}],"pos":[48410,48901],"yaml":true},{"content":"`true` if <code>value</code> was converted successfully; otherwise, `false`.","nodes":[{"pos":[0,76],"content":"<ph id=\"ph1\">`true`</ph> if <bpt id=\"p1\">&lt;code&gt;</bpt><ph id=\"ph2\">value</ph><ept id=\"p1\">&lt;/code&gt;</ept> was converted successfully; otherwise, <ph id=\"ph3\">`false`</ph>.","source":"`true` if <code>value</code> was converted successfully; otherwise, `false`."}],"pos":[48959,49038],"yaml":true},{"content":"For a description of this member, see <xref href=\"System.IConvertible.ToBoolean(System.IFormatProvider)\"></xref>.","nodes":[{"pos":[0,113],"content":"For a description of this member, see <ph id=\"ph1\">&lt;xref href=\"System.IConvertible.ToBoolean(System.IFormatProvider)\"&gt;&lt;/xref&gt;</ph>.","source":"For a description of this member, see <xref href=\"System.IConvertible.ToBoolean(System.IFormatProvider)\"></xref>."}],"pos":[52856,52970],"yaml":true},{"content":"This member is an explicit interface member implementation. It can be used only when the <xref:System.Boolean> instance is cast to an <xref:System.IConvertible> interface.","nodes":[{"pos":[0,171],"content":"This member is an explicit interface member implementation. It can be used only when the <xref:System.Boolean> instance is cast to an <xref:System.IConvertible> interface.","nodes":[{"content":"This member is an explicit interface member implementation. It can be used only when the <xref:System.Boolean> instance is cast to an <xref:System.IConvertible> interface.","pos":[0,171],"nodes":[{"content":"This member is an explicit interface member implementation.","pos":[0,59]},{"content":"It can be used only when the <ph id=\"ph1\">&lt;xref:System.Boolean&gt;</ph> instance is cast to an <ph id=\"ph2\">&lt;xref:System.IConvertible&gt;</ph> interface.","pos":[60,171],"source":" It can be used only when the <xref:System.Boolean> instance is cast to an <xref:System.IConvertible> interface."}]}]}],"pos":[52981,53153],"yaml":true,"extradata":"MT"},{"content":"This parameter is ignored.","nodes":[{"pos":[0,26],"content":"This parameter is ignored.","nodes":[{"content":"This parameter is ignored.","pos":[0,26]}]}],"pos":[53321,53348],"yaml":true},{"content":"`true` or `false`.","nodes":[{"pos":[0,18],"content":"<ph id=\"ph1\">`true`</ph> or <ph id=\"ph2\">`false`</ph>.","source":"`true` or `false`."}],"pos":[53406,53427],"yaml":true},{"content":"For a description of this member, see <xref href=\"System.IConvertible.ToByte(System.IFormatProvider)\"></xref>.","nodes":[{"pos":[0,110],"content":"For a description of this member, see <ph id=\"ph1\">&lt;xref href=\"System.IConvertible.ToByte(System.IFormatProvider)\"&gt;&lt;/xref&gt;</ph>.","source":"For a description of this member, see <xref href=\"System.IConvertible.ToByte(System.IFormatProvider)\"></xref>."}],"pos":[54978,55089],"yaml":true},{"content":"This member is an explicit interface member implementation. It can be used only when the <xref:System.Boolean> instance is cast to an <xref:System.IConvertible> interface. The recommended alternative is to call the <xref:System.Convert.ToByte%2A?displayProperty=fullName> method.","nodes":[{"pos":[0,279],"content":"This member is an explicit interface member implementation. It can be used only when the <xref:System.Boolean> instance is cast to an <xref:System.IConvertible> interface. The recommended alternative is to call the <xref:System.Convert.ToByte%2A?displayProperty=fullName> method.","nodes":[{"content":"This member is an explicit interface member implementation. It can be used only when the <xref:System.Boolean> instance is cast to an <xref:System.IConvertible> interface. The recommended alternative is to call the <xref:System.Convert.ToByte%2A?displayProperty=fullName> method.","pos":[0,279],"nodes":[{"content":"This member is an explicit interface member implementation.","pos":[0,59]},{"content":"It can be used only when the <ph id=\"ph1\">&lt;xref:System.Boolean&gt;</ph> instance is cast to an <ph id=\"ph2\">&lt;xref:System.IConvertible&gt;</ph> interface.","pos":[60,171],"source":" It can be used only when the <xref:System.Boolean> instance is cast to an <xref:System.IConvertible> interface."},{"content":"The recommended alternative is to call the <ph id=\"ph1\">&lt;xref:System.Convert.ToByte%2A?displayProperty=fullName&gt;</ph> method.","pos":[172,279],"source":" The recommended alternative is to call the <xref:System.Convert.ToByte%2A?displayProperty=fullName> method."}]}]}],"pos":[55100,55380],"yaml":true,"extradata":"MT"},{"content":"This parameter is ignored.","nodes":[{"pos":[0,26],"content":"This parameter is ignored.","nodes":[{"content":"This parameter is ignored.","pos":[0,26]}]}],"pos":[55545,55572],"yaml":true},{"content":"1 if the value of this instance is `true`; otherwise, 0.","nodes":[{"pos":[0,56],"content":"1 if the value of this instance is <ph id=\"ph1\">`true`</ph>; otherwise, 0.","source":"1 if the value of this instance is `true`; otherwise, 0."}],"pos":[55627,55684],"yaml":true},{"content":"This conversion is not supported. Attempting to use this method throws an <xref href=\"System.InvalidCastException\"></xref>.","nodes":[{"pos":[0,123],"content":"This conversion is not supported. Attempting to use this method throws an <xref href=\"System.InvalidCastException\"></xref>.","nodes":[{"content":"This conversion is not supported.","pos":[0,33]},{"content":"Attempting to use this method throws an <ph id=\"ph1\">&lt;xref href=\"System.InvalidCastException\"&gt;&lt;/xref&gt;</ph>.","pos":[34,123],"source":" Attempting to use this method throws an <xref href=\"System.InvalidCastException\"></xref>."}]}],"pos":[57232,57356],"yaml":true},{"content":"This parameter is ignored.","nodes":[{"pos":[0,26],"content":"This parameter is ignored.","nodes":[{"content":"This parameter is ignored.","pos":[0,26]}]}],"pos":[57521,57548],"yaml":true},{"content":"This conversion is not supported. No value is returned.","nodes":[{"pos":[0,55],"content":"This conversion is not supported. No value is returned.","nodes":[{"content":"This conversion is not supported. No value is returned.","pos":[0,55],"nodes":[{"content":"This conversion is not supported.","pos":[0,33]},{"content":"No value is returned.","pos":[34,55]}]}]}],"pos":[57603,57659],"yaml":true},{"content":"You attempt to convert a <xref href=\"System.Boolean\"></xref> value to a <xref href=\"System.Char\"></xref> value. This conversion is not supported.","nodes":[{"pos":[0,145],"content":"You attempt to convert a <xref href=\"System.Boolean\"></xref> value to a <xref href=\"System.Char\"></xref> value. This conversion is not supported.","nodes":[{"content":"You attempt to convert a <ph id=\"ph1\">&lt;xref href=\"System.Boolean\"&gt;&lt;/xref&gt;</ph> value to a <ph id=\"ph2\">&lt;xref href=\"System.Char\"&gt;&lt;/xref&gt;</ph> value.","pos":[0,111],"source":"You attempt to convert a <xref href=\"System.Boolean\"></xref> value to a <xref href=\"System.Char\"></xref> value."},{"content":"This conversion is not supported.","pos":[112,145]}]}],"pos":[57828,57974],"yaml":true},{"content":"This conversion is not supported. Attempting to use this method throws an <xref href=\"System.InvalidCastException\"></xref>.","nodes":[{"pos":[0,123],"content":"This conversion is not supported. Attempting to use this method throws an <xref href=\"System.InvalidCastException\"></xref>.","nodes":[{"content":"This conversion is not supported.","pos":[0,33]},{"content":"Attempting to use this method throws an <ph id=\"ph1\">&lt;xref href=\"System.InvalidCastException\"&gt;&lt;/xref&gt;</ph>.","pos":[34,123],"source":" Attempting to use this method throws an <xref href=\"System.InvalidCastException\"></xref>."}]}],"pos":[59474,59598],"yaml":true},{"content":"This parameter is ignored.","nodes":[{"pos":[0,26],"content":"This parameter is ignored.","nodes":[{"content":"This parameter is ignored.","pos":[0,26]}]}],"pos":[59771,59798],"yaml":true},{"content":"This conversion is not supported. No value is returned.","nodes":[{"pos":[0,55],"content":"This conversion is not supported. No value is returned.","nodes":[{"content":"This conversion is not supported. No value is returned.","pos":[0,55],"nodes":[{"content":"This conversion is not supported.","pos":[0,33]},{"content":"No value is returned.","pos":[34,55]}]}]}],"pos":[59857,59913],"yaml":true},{"content":"You attempt to convert a <xref href=\"System.Boolean\"></xref> value to a <xref href=\"System.DateTime\"></xref> value. This conversion is not supported.","nodes":[{"pos":[0,149],"content":"You attempt to convert a <xref href=\"System.Boolean\"></xref> value to a <xref href=\"System.DateTime\"></xref> value. This conversion is not supported.","nodes":[{"content":"You attempt to convert a <ph id=\"ph1\">&lt;xref href=\"System.Boolean\"&gt;&lt;/xref&gt;</ph> value to a <ph id=\"ph2\">&lt;xref href=\"System.DateTime\"&gt;&lt;/xref&gt;</ph> value.","pos":[0,115],"source":"You attempt to convert a <xref href=\"System.Boolean\"></xref> value to a <xref href=\"System.DateTime\"></xref> value."},{"content":"This conversion is not supported.","pos":[116,149]}]}],"pos":[60086,60236],"yaml":true},{"content":"For a description of this member, see <xref href=\"System.IConvertible.ToDecimal(System.IFormatProvider)\"></xref>..","nodes":[{"pos":[0,114],"content":"For a description of this member, see <ph id=\"ph1\">&lt;xref href=\"System.IConvertible.ToDecimal(System.IFormatProvider)\"&gt;&lt;/xref&gt;</ph>..","source":"For a description of this member, see <xref href=\"System.IConvertible.ToDecimal(System.IFormatProvider)\"></xref>.."}],"pos":[61730,61845],"yaml":true},{"content":"This member is an explicit interface member implementation. It can be used only when the <xref:System.Boolean> instance is cast to an <xref:System.IConvertible> interface. The recommended alternative is to call the <xref:System.Convert.ToDecimal%2A?displayProperty=fullName> method.","nodes":[{"pos":[0,282],"content":"This member is an explicit interface member implementation. It can be used only when the <xref:System.Boolean> instance is cast to an <xref:System.IConvertible> interface. The recommended alternative is to call the <xref:System.Convert.ToDecimal%2A?displayProperty=fullName> method.","nodes":[{"content":"This member is an explicit interface member implementation. It can be used only when the <xref:System.Boolean> instance is cast to an <xref:System.IConvertible> interface. The recommended alternative is to call the <xref:System.Convert.ToDecimal%2A?displayProperty=fullName> method.","pos":[0,282],"nodes":[{"content":"This member is an explicit interface member implementation.","pos":[0,59]},{"content":"It can be used only when the <ph id=\"ph1\">&lt;xref:System.Boolean&gt;</ph> instance is cast to an <ph id=\"ph2\">&lt;xref:System.IConvertible&gt;</ph> interface.","pos":[60,171],"source":" It can be used only when the <xref:System.Boolean> instance is cast to an <xref:System.IConvertible> interface."},{"content":"The recommended alternative is to call the <ph id=\"ph1\">&lt;xref:System.Convert.ToDecimal%2A?displayProperty=fullName&gt;</ph> method.","pos":[172,282],"source":" The recommended alternative is to call the <xref:System.Convert.ToDecimal%2A?displayProperty=fullName> method."}]}]}],"pos":[61856,62139],"yaml":true,"extradata":"MT"},{"content":"This parameter is ignored.","nodes":[{"pos":[0,26],"content":"This parameter is ignored.","nodes":[{"content":"This parameter is ignored.","pos":[0,26]}]}],"pos":[62310,62337],"yaml":true},{"content":"1 if this instance is `true`; otherwise, 0.","nodes":[{"pos":[0,43],"content":"1 if this instance is <ph id=\"ph1\">`true`</ph>; otherwise, 0.","source":"1 if this instance is `true`; otherwise, 0."}],"pos":[62395,62439],"yaml":true},{"content":"For a description of this member, see <xref href=\"System.IConvertible.ToDouble(System.IFormatProvider)\"></xref>..","nodes":[{"pos":[0,113],"content":"For a description of this member, see <ph id=\"ph1\">&lt;xref href=\"System.IConvertible.ToDouble(System.IFormatProvider)\"&gt;&lt;/xref&gt;</ph>..","source":"For a description of this member, see <xref href=\"System.IConvertible.ToDouble(System.IFormatProvider)\"></xref>.."}],"pos":[64002,64116],"yaml":true},{"content":"This member is an explicit interface member implementation. It can be used only when the <xref:System.Boolean> instance is cast to an <xref:System.IConvertible> interface. The recommended alternative is to call the <xref:System.Convert.ToDouble%2A?displayProperty=fullName> method.","nodes":[{"pos":[0,281],"content":"This member is an explicit interface member implementation. It can be used only when the <xref:System.Boolean> instance is cast to an <xref:System.IConvertible> interface. The recommended alternative is to call the <xref:System.Convert.ToDouble%2A?displayProperty=fullName> method.","nodes":[{"content":"This member is an explicit interface member implementation. It can be used only when the <xref:System.Boolean> instance is cast to an <xref:System.IConvertible> interface. The recommended alternative is to call the <xref:System.Convert.ToDouble%2A?displayProperty=fullName> method.","pos":[0,281],"nodes":[{"content":"This member is an explicit interface member implementation.","pos":[0,59]},{"content":"It can be used only when the <ph id=\"ph1\">&lt;xref:System.Boolean&gt;</ph> instance is cast to an <ph id=\"ph2\">&lt;xref:System.IConvertible&gt;</ph> interface.","pos":[60,171],"source":" It can be used only when the <xref:System.Boolean> instance is cast to an <xref:System.IConvertible> interface."},{"content":"The recommended alternative is to call the <ph id=\"ph1\">&lt;xref:System.Convert.ToDouble%2A?displayProperty=fullName&gt;</ph> method.","pos":[172,281],"source":" The recommended alternative is to call the <xref:System.Convert.ToDouble%2A?displayProperty=fullName> method."}]}]}],"pos":[64127,64409],"yaml":true,"extradata":"MT"},{"content":"This parameter is ignored.","nodes":[{"pos":[0,26],"content":"This parameter is ignored.","nodes":[{"content":"This parameter is ignored.","pos":[0,26]}]}],"pos":[64578,64605],"yaml":true},{"content":"1 if this instance is `true`; otherwise, 0.","nodes":[{"pos":[0,43],"content":"1 if this instance is <ph id=\"ph1\">`true`</ph>; otherwise, 0.","source":"1 if this instance is `true`; otherwise, 0."}],"pos":[64662,64706],"yaml":true},{"content":"For a description of this member, see <xref href=\"System.IConvertible.ToInt16(System.IFormatProvider)\"></xref>.","nodes":[{"pos":[0,111],"content":"For a description of this member, see <ph id=\"ph1\">&lt;xref href=\"System.IConvertible.ToInt16(System.IFormatProvider)\"&gt;&lt;/xref&gt;</ph>.","source":"For a description of this member, see <xref href=\"System.IConvertible.ToInt16(System.IFormatProvider)\"></xref>."}],"pos":[66262,66374],"yaml":true},{"content":"This member is an explicit interface member implementation. It can be used only when the <xref:System.Boolean> instance is cast to an <xref:System.IConvertible> interface. The recommended alternative is to call the <xref:System.Convert.ToInt16%2A?displayProperty=fullName> method.","nodes":[{"pos":[0,280],"content":"This member is an explicit interface member implementation. It can be used only when the <xref:System.Boolean> instance is cast to an <xref:System.IConvertible> interface. The recommended alternative is to call the <xref:System.Convert.ToInt16%2A?displayProperty=fullName> method.","nodes":[{"content":"This member is an explicit interface member implementation. It can be used only when the <xref:System.Boolean> instance is cast to an <xref:System.IConvertible> interface. The recommended alternative is to call the <xref:System.Convert.ToInt16%2A?displayProperty=fullName> method.","pos":[0,280],"nodes":[{"content":"This member is an explicit interface member implementation.","pos":[0,59]},{"content":"It can be used only when the <ph id=\"ph1\">&lt;xref:System.Boolean&gt;</ph> instance is cast to an <ph id=\"ph2\">&lt;xref:System.IConvertible&gt;</ph> interface.","pos":[60,171],"source":" It can be used only when the <xref:System.Boolean> instance is cast to an <xref:System.IConvertible> interface."},{"content":"The recommended alternative is to call the <ph id=\"ph1\">&lt;xref:System.Convert.ToInt16%2A?displayProperty=fullName&gt;</ph> method.","pos":[172,280],"source":" The recommended alternative is to call the <xref:System.Convert.ToInt16%2A?displayProperty=fullName> method."}]}]}],"pos":[66385,66666],"yaml":true,"extradata":"MT"},{"content":"This parameter is ignored.","nodes":[{"pos":[0,26],"content":"This parameter is ignored.","nodes":[{"content":"This parameter is ignored.","pos":[0,26]}]}],"pos":[66833,66860],"yaml":true},{"content":"1 if this instance is `true`; otherwise, 0.","nodes":[{"pos":[0,43],"content":"1 if this instance is <ph id=\"ph1\">`true`</ph>; otherwise, 0.","source":"1 if this instance is `true`; otherwise, 0."}],"pos":[66916,66960],"yaml":true},{"content":"For a description of this member, see <xref href=\"System.IConvertible.ToInt32(System.IFormatProvider)\"></xref>.","nodes":[{"pos":[0,111],"content":"For a description of this member, see <ph id=\"ph1\">&lt;xref href=\"System.IConvertible.ToInt32(System.IFormatProvider)\"&gt;&lt;/xref&gt;</ph>.","source":"For a description of this member, see <xref href=\"System.IConvertible.ToInt32(System.IFormatProvider)\"></xref>."}],"pos":[68515,68627],"yaml":true},{"content":"This member is an explicit interface member implementation. It can be used only when the <xref:System.Boolean> instance is cast to an <xref:System.IConvertible> interface. The recommended alternative is to call the <xref:System.Convert.ToInt32%2A?displayProperty=fullName> method.","nodes":[{"pos":[0,280],"content":"This member is an explicit interface member implementation. It can be used only when the <xref:System.Boolean> instance is cast to an <xref:System.IConvertible> interface. The recommended alternative is to call the <xref:System.Convert.ToInt32%2A?displayProperty=fullName> method.","nodes":[{"content":"This member is an explicit interface member implementation. It can be used only when the <xref:System.Boolean> instance is cast to an <xref:System.IConvertible> interface. The recommended alternative is to call the <xref:System.Convert.ToInt32%2A?displayProperty=fullName> method.","pos":[0,280],"nodes":[{"content":"This member is an explicit interface member implementation.","pos":[0,59]},{"content":"It can be used only when the <ph id=\"ph1\">&lt;xref:System.Boolean&gt;</ph> instance is cast to an <ph id=\"ph2\">&lt;xref:System.IConvertible&gt;</ph> interface.","pos":[60,171],"source":" It can be used only when the <xref:System.Boolean> instance is cast to an <xref:System.IConvertible> interface."},{"content":"The recommended alternative is to call the <ph id=\"ph1\">&lt;xref:System.Convert.ToInt32%2A?displayProperty=fullName&gt;</ph> method.","pos":[172,280],"source":" The recommended alternative is to call the <xref:System.Convert.ToInt32%2A?displayProperty=fullName> method."}]}]}],"pos":[68638,68919],"yaml":true,"extradata":"MT"},{"content":"This parameter is ignored.","nodes":[{"pos":[0,26],"content":"This parameter is ignored.","nodes":[{"content":"This parameter is ignored.","pos":[0,26]}]}],"pos":[69084,69111],"yaml":true},{"content":"1 if this instance is `true`; otherwise, 0.","nodes":[{"pos":[0,43],"content":"1 if this instance is <ph id=\"ph1\">`true`</ph>; otherwise, 0.","source":"1 if this instance is `true`; otherwise, 0."}],"pos":[69167,69211],"yaml":true},{"content":"For a description of this member, see <xref href=\"System.IConvertible.ToInt64(System.IFormatProvider)\"></xref>.","nodes":[{"pos":[0,111],"content":"For a description of this member, see <ph id=\"ph1\">&lt;xref href=\"System.IConvertible.ToInt64(System.IFormatProvider)\"&gt;&lt;/xref&gt;</ph>.","source":"For a description of this member, see <xref href=\"System.IConvertible.ToInt64(System.IFormatProvider)\"></xref>."}],"pos":[70766,70878],"yaml":true},{"content":"This member is an explicit interface member implementation. It can be used only when the <xref:System.Boolean> instance is cast to an <xref:System.IConvertible> interface. The recommended alternative is to call the <xref:System.Convert.ToInt64%28System.Boolean%29?displayProperty=fullName> method.","nodes":[{"pos":[0,297],"content":"This member is an explicit interface member implementation. It can be used only when the <xref:System.Boolean> instance is cast to an <xref:System.IConvertible> interface. The recommended alternative is to call the <xref:System.Convert.ToInt64%28System.Boolean%29?displayProperty=fullName> method.","nodes":[{"content":"This member is an explicit interface member implementation. It can be used only when the <xref:System.Boolean> instance is cast to an <xref:System.IConvertible> interface. The recommended alternative is to call the <xref:System.Convert.ToInt64%28System.Boolean%29?displayProperty=fullName> method.","pos":[0,297],"nodes":[{"content":"This member is an explicit interface member implementation.","pos":[0,59]},{"content":"It can be used only when the <ph id=\"ph1\">&lt;xref:System.Boolean&gt;</ph> instance is cast to an <ph id=\"ph2\">&lt;xref:System.IConvertible&gt;</ph> interface.","pos":[60,171],"source":" It can be used only when the <xref:System.Boolean> instance is cast to an <xref:System.IConvertible> interface."},{"content":"The recommended alternative is to call the <ph id=\"ph1\">&lt;xref:System.Convert.ToInt64%28System.Boolean%29?displayProperty=fullName&gt;</ph> method.","pos":[172,297],"source":" The recommended alternative is to call the <xref:System.Convert.ToInt64%28System.Boolean%29?displayProperty=fullName> method."}]}]}],"pos":[70889,71187],"yaml":true,"extradata":"MT"},{"content":"This parameter is ignored.","nodes":[{"pos":[0,26],"content":"This parameter is ignored.","nodes":[{"content":"This parameter is ignored.","pos":[0,26]}]}],"pos":[71353,71380],"yaml":true},{"content":"1 if this instance is `true`; otherwise, 0.","nodes":[{"pos":[0,43],"content":"1 if this instance is <ph id=\"ph1\">`true`</ph>; otherwise, 0.","source":"1 if this instance is `true`; otherwise, 0."}],"pos":[71436,71480],"yaml":true},{"content":"For a description of this member, see <xref href=\"System.IConvertible.ToSByte(System.IFormatProvider)\"></xref>.","nodes":[{"pos":[0,111],"content":"For a description of this member, see <ph id=\"ph1\">&lt;xref href=\"System.IConvertible.ToSByte(System.IFormatProvider)\"&gt;&lt;/xref&gt;</ph>.","source":"For a description of this member, see <xref href=\"System.IConvertible.ToSByte(System.IFormatProvider)\"></xref>."}],"pos":[73035,73147],"yaml":true},{"content":"This member is an explicit interface member implementation. It can be used only when the <xref:System.Boolean> instance is cast to an <xref:System.IConvertible> interface. The recommended alternative is to call the <xref:System.Convert.ToSByte%28System.Boolean%29?displayProperty=fullName> method.","nodes":[{"pos":[0,297],"content":"This member is an explicit interface member implementation. It can be used only when the <xref:System.Boolean> instance is cast to an <xref:System.IConvertible> interface. The recommended alternative is to call the <xref:System.Convert.ToSByte%28System.Boolean%29?displayProperty=fullName> method.","nodes":[{"content":"This member is an explicit interface member implementation. It can be used only when the <xref:System.Boolean> instance is cast to an <xref:System.IConvertible> interface. The recommended alternative is to call the <xref:System.Convert.ToSByte%28System.Boolean%29?displayProperty=fullName> method.","pos":[0,297],"nodes":[{"content":"This member is an explicit interface member implementation.","pos":[0,59]},{"content":"It can be used only when the <ph id=\"ph1\">&lt;xref:System.Boolean&gt;</ph> instance is cast to an <ph id=\"ph2\">&lt;xref:System.IConvertible&gt;</ph> interface.","pos":[60,171],"source":" It can be used only when the <xref:System.Boolean> instance is cast to an <xref:System.IConvertible> interface."},{"content":"The recommended alternative is to call the <ph id=\"ph1\">&lt;xref:System.Convert.ToSByte%28System.Boolean%29?displayProperty=fullName&gt;</ph> method.","pos":[172,297],"source":" The recommended alternative is to call the <xref:System.Convert.ToSByte%28System.Boolean%29?displayProperty=fullName> method."}]}]}],"pos":[73158,73456],"yaml":true,"extradata":"MT"},{"content":"This parameter is ignored.","nodes":[{"pos":[0,26],"content":"This parameter is ignored.","nodes":[{"content":"This parameter is ignored.","pos":[0,26]}]}],"pos":[73623,73650],"yaml":true},{"content":"1 if this instance is `true`; otherwise, 0.","nodes":[{"pos":[0,43],"content":"1 if this instance is <ph id=\"ph1\">`true`</ph>; otherwise, 0.","source":"1 if this instance is `true`; otherwise, 0."}],"pos":[73706,73750],"yaml":true},{"content":"For a description of this member, see <xref href=\"System.IConvertible.ToSingle(System.IFormatProvider)\"></xref>..","nodes":[{"pos":[0,113],"content":"For a description of this member, see <ph id=\"ph1\">&lt;xref href=\"System.IConvertible.ToSingle(System.IFormatProvider)\"&gt;&lt;/xref&gt;</ph>..","source":"For a description of this member, see <xref href=\"System.IConvertible.ToSingle(System.IFormatProvider)\"></xref>.."}],"pos":[75311,75425],"yaml":true},{"content":"This member is an explicit interface member implementation. It can be used only when the <xref:System.Boolean> instance is cast to an <xref:System.IConvertible> interface. The recommended alternative is to call the <xref:System.Convert.ToSingle%28System.Boolean%29?displayProperty=fullName> method.","nodes":[{"pos":[0,298],"content":"This member is an explicit interface member implementation. It can be used only when the <xref:System.Boolean> instance is cast to an <xref:System.IConvertible> interface. The recommended alternative is to call the <xref:System.Convert.ToSingle%28System.Boolean%29?displayProperty=fullName> method.","nodes":[{"content":"This member is an explicit interface member implementation. It can be used only when the <xref:System.Boolean> instance is cast to an <xref:System.IConvertible> interface. The recommended alternative is to call the <xref:System.Convert.ToSingle%28System.Boolean%29?displayProperty=fullName> method.","pos":[0,298],"nodes":[{"content":"This member is an explicit interface member implementation.","pos":[0,59]},{"content":"It can be used only when the <ph id=\"ph1\">&lt;xref:System.Boolean&gt;</ph> instance is cast to an <ph id=\"ph2\">&lt;xref:System.IConvertible&gt;</ph> interface.","pos":[60,171],"source":" It can be used only when the <xref:System.Boolean> instance is cast to an <xref:System.IConvertible> interface."},{"content":"The recommended alternative is to call the <ph id=\"ph1\">&lt;xref:System.Convert.ToSingle%28System.Boolean%29?displayProperty=fullName&gt;</ph> method.","pos":[172,298],"source":" The recommended alternative is to call the <xref:System.Convert.ToSingle%28System.Boolean%29?displayProperty=fullName> method."}]}]}],"pos":[75436,75735],"yaml":true,"extradata":"MT"},{"content":"This parameter is ignored.","nodes":[{"pos":[0,26],"content":"This parameter is ignored.","nodes":[{"content":"This parameter is ignored.","pos":[0,26]}]}],"pos":[75903,75930],"yaml":true},{"content":"1 if this instance is `true`; otherwise, 0.","nodes":[{"pos":[0,43],"content":"1 if this instance is <ph id=\"ph1\">`true`</ph>; otherwise, 0.","source":"1 if this instance is `true`; otherwise, 0."}],"pos":[75987,76031],"yaml":true},{"content":"For a description of this member, see <xref href=\"System.IConvertible.ToType(System.Type,System.IFormatProvider)\"></xref>.","nodes":[{"pos":[0,122],"content":"For a description of this member, see <ph id=\"ph1\">&lt;xref href=\"System.IConvertible.ToType(System.Type,System.IFormatProvider)\"&gt;&lt;/xref&gt;</ph>.","source":"For a description of this member, see <xref href=\"System.IConvertible.ToType(System.Type,System.IFormatProvider)\"></xref>."}],"pos":[78786,78909],"yaml":true},{"content":"This member is an explicit interface member implementation. It can be used only when the <xref:System.Boolean> instance is cast to an <xref:System.IConvertible> interface. The recommended alternative is to call the <xref:System.Convert.ChangeType%2A?displayProperty=fullName> method.","nodes":[{"pos":[0,283],"content":"This member is an explicit interface member implementation. It can be used only when the <xref:System.Boolean> instance is cast to an <xref:System.IConvertible> interface. The recommended alternative is to call the <xref:System.Convert.ChangeType%2A?displayProperty=fullName> method.","nodes":[{"content":"This member is an explicit interface member implementation. It can be used only when the <xref:System.Boolean> instance is cast to an <xref:System.IConvertible> interface. The recommended alternative is to call the <xref:System.Convert.ChangeType%2A?displayProperty=fullName> method.","pos":[0,283],"nodes":[{"content":"This member is an explicit interface member implementation.","pos":[0,59]},{"content":"It can be used only when the <ph id=\"ph1\">&lt;xref:System.Boolean&gt;</ph> instance is cast to an <ph id=\"ph2\">&lt;xref:System.IConvertible&gt;</ph> interface.","pos":[60,171],"source":" It can be used only when the <xref:System.Boolean> instance is cast to an <xref:System.IConvertible> interface."},{"content":"The recommended alternative is to call the <ph id=\"ph1\">&lt;xref:System.Convert.ChangeType%2A?displayProperty=fullName&gt;</ph> method.","pos":[172,283],"source":" The recommended alternative is to call the <xref:System.Convert.ChangeType%2A?displayProperty=fullName> method."}]}]}],"pos":[78920,79204],"yaml":true,"extradata":"MT"},{"content":"The desired type.","nodes":[{"pos":[0,17],"content":"The desired type.","nodes":[{"content":"The desired type.","pos":[0,17]}]}],"pos":[79367,79385],"yaml":true},{"content":"An <xref href=\"System.IFormatProvider\"></xref> implementation that supplies culture-specific information about the format of the returned value.","nodes":[{"pos":[0,144],"content":"An <ph id=\"ph1\">&lt;xref href=\"System.IFormatProvider\"&gt;&lt;/xref&gt;</ph> implementation that supplies culture-specific information about the format of the returned value.","source":"An <xref href=\"System.IFormatProvider\"></xref> implementation that supplies culture-specific information about the format of the returned value."}],"pos":[79458,79603],"yaml":true},{"content":"An object of the specified type, with a value that is equivalent to the value of this `Boolean` object.","nodes":[{"pos":[0,103],"content":"An object of the specified type, with a value that is equivalent to the value of this <ph id=\"ph1\">`Boolean`</ph> object.","source":"An object of the specified type, with a value that is equivalent to the value of this `Boolean` object."}],"pos":[79660,79764],"yaml":true},{"content":"<code>type</code> is `null`.","nodes":[{"pos":[0,28],"content":"<ph id=\"ph1\">&lt;code&gt;type&lt;/code&gt;</ph> is <ph id=\"ph2\">`null`</ph>.","source":"<code>type</code> is `null`."}],"pos":[79935,79964],"yaml":true},{"content":"The requested type conversion is not supported.","nodes":[{"pos":[0,47],"content":"The requested type conversion is not supported.","nodes":[{"content":"The requested type conversion is not supported.","pos":[0,47]}]}],"pos":[80064,80112],"yaml":true},{"content":"For a description of this member, see <xref href=\"System.IConvertible.ToUInt16(System.IFormatProvider)\"></xref>.","nodes":[{"pos":[0,112],"content":"For a description of this member, see <ph id=\"ph1\">&lt;xref href=\"System.IConvertible.ToUInt16(System.IFormatProvider)\"&gt;&lt;/xref&gt;</ph>.","source":"For a description of this member, see <xref href=\"System.IConvertible.ToUInt16(System.IFormatProvider)\"></xref>."}],"pos":[81600,81713],"yaml":true},{"content":"This member is an explicit interface member implementation. It can be used only when the <xref:System.Boolean> instance is cast to an <xref:System.IConvertible> interface. The recommended alternative is to call the <xref:System.Convert.ToUInt16%28System.Boolean%29?displayProperty=fullName> method.","nodes":[{"pos":[0,298],"content":"This member is an explicit interface member implementation. It can be used only when the <xref:System.Boolean> instance is cast to an <xref:System.IConvertible> interface. The recommended alternative is to call the <xref:System.Convert.ToUInt16%28System.Boolean%29?displayProperty=fullName> method.","nodes":[{"content":"This member is an explicit interface member implementation. It can be used only when the <xref:System.Boolean> instance is cast to an <xref:System.IConvertible> interface. The recommended alternative is to call the <xref:System.Convert.ToUInt16%28System.Boolean%29?displayProperty=fullName> method.","pos":[0,298],"nodes":[{"content":"This member is an explicit interface member implementation.","pos":[0,59]},{"content":"It can be used only when the <ph id=\"ph1\">&lt;xref:System.Boolean&gt;</ph> instance is cast to an <ph id=\"ph2\">&lt;xref:System.IConvertible&gt;</ph> interface.","pos":[60,171],"source":" It can be used only when the <xref:System.Boolean> instance is cast to an <xref:System.IConvertible> interface."},{"content":"The recommended alternative is to call the <ph id=\"ph1\">&lt;xref:System.Convert.ToUInt16%28System.Boolean%29?displayProperty=fullName&gt;</ph> method.","pos":[172,298],"source":" The recommended alternative is to call the <xref:System.Convert.ToUInt16%28System.Boolean%29?displayProperty=fullName> method."}]}]}],"pos":[81724,82023],"yaml":true,"extradata":"MT"},{"content":"This parameter is ignored.","nodes":[{"pos":[0,26],"content":"This parameter is ignored.","nodes":[{"content":"This parameter is ignored.","pos":[0,26]}]}],"pos":[82192,82219],"yaml":true},{"content":"1 if this instance is `true`; otherwise, 0.","nodes":[{"pos":[0,43],"content":"1 if this instance is <ph id=\"ph1\">`true`</ph>; otherwise, 0.","source":"1 if this instance is `true`; otherwise, 0."}],"pos":[82276,82320],"yaml":true},{"content":"For a description of this member, see <xref href=\"System.IConvertible.ToUInt32(System.IFormatProvider)\"></xref>.","nodes":[{"pos":[0,112],"content":"For a description of this member, see <ph id=\"ph1\">&lt;xref href=\"System.IConvertible.ToUInt32(System.IFormatProvider)\"&gt;&lt;/xref&gt;</ph>.","source":"For a description of this member, see <xref href=\"System.IConvertible.ToUInt32(System.IFormatProvider)\"></xref>."}],"pos":[83882,83995],"yaml":true},{"content":"This member is an explicit interface member implementation. It can be used only when the <xref:System.Boolean> instance is cast to an <xref:System.IConvertible> interface. The recommended alternative is to call the <xref:System.Convert.ToUInt32%28System.Boolean%29?displayProperty=fullName> method.","nodes":[{"pos":[0,298],"content":"This member is an explicit interface member implementation. It can be used only when the <xref:System.Boolean> instance is cast to an <xref:System.IConvertible> interface. The recommended alternative is to call the <xref:System.Convert.ToUInt32%28System.Boolean%29?displayProperty=fullName> method.","nodes":[{"content":"This member is an explicit interface member implementation. It can be used only when the <xref:System.Boolean> instance is cast to an <xref:System.IConvertible> interface. The recommended alternative is to call the <xref:System.Convert.ToUInt32%28System.Boolean%29?displayProperty=fullName> method.","pos":[0,298],"nodes":[{"content":"This member is an explicit interface member implementation.","pos":[0,59]},{"content":"It can be used only when the <ph id=\"ph1\">&lt;xref:System.Boolean&gt;</ph> instance is cast to an <ph id=\"ph2\">&lt;xref:System.IConvertible&gt;</ph> interface.","pos":[60,171],"source":" It can be used only when the <xref:System.Boolean> instance is cast to an <xref:System.IConvertible> interface."},{"content":"The recommended alternative is to call the <ph id=\"ph1\">&lt;xref:System.Convert.ToUInt32%28System.Boolean%29?displayProperty=fullName&gt;</ph> method.","pos":[172,298],"source":" The recommended alternative is to call the <xref:System.Convert.ToUInt32%28System.Boolean%29?displayProperty=fullName> method."}]}]}],"pos":[84006,84305],"yaml":true,"extradata":"MT"},{"content":"This parameter is ignored.","nodes":[{"pos":[0,26],"content":"This parameter is ignored.","nodes":[{"content":"This parameter is ignored.","pos":[0,26]}]}],"pos":[84472,84499],"yaml":true},{"content":"1 if this instance is `true`; otherwise, 0.","nodes":[{"pos":[0,43],"content":"1 if this instance is <ph id=\"ph1\">`true`</ph>; otherwise, 0.","source":"1 if this instance is `true`; otherwise, 0."}],"pos":[84556,84600],"yaml":true},{"content":"For a description of this member, see <xref href=\"System.IConvertible.ToUInt64(System.IFormatProvider)\"></xref>.","nodes":[{"pos":[0,112],"content":"For a description of this member, see <ph id=\"ph1\">&lt;xref href=\"System.IConvertible.ToUInt64(System.IFormatProvider)\"&gt;&lt;/xref&gt;</ph>.","source":"For a description of this member, see <xref href=\"System.IConvertible.ToUInt64(System.IFormatProvider)\"></xref>."}],"pos":[86162,86275],"yaml":true},{"content":"This member is an explicit interface member implementation. It can be used only when the <xref:System.Boolean> instance is cast to an <xref:System.IConvertible> interface. The recommended alternative is to call the <xref:System.Convert.ToUInt64%28System.Boolean%29?displayProperty=fullName> method.","nodes":[{"pos":[0,298],"content":"This member is an explicit interface member implementation. It can be used only when the <xref:System.Boolean> instance is cast to an <xref:System.IConvertible> interface. The recommended alternative is to call the <xref:System.Convert.ToUInt64%28System.Boolean%29?displayProperty=fullName> method.","nodes":[{"content":"This member is an explicit interface member implementation. It can be used only when the <xref:System.Boolean> instance is cast to an <xref:System.IConvertible> interface. The recommended alternative is to call the <xref:System.Convert.ToUInt64%28System.Boolean%29?displayProperty=fullName> method.","pos":[0,298],"nodes":[{"content":"This member is an explicit interface member implementation.","pos":[0,59]},{"content":"It can be used only when the <ph id=\"ph1\">&lt;xref:System.Boolean&gt;</ph> instance is cast to an <ph id=\"ph2\">&lt;xref:System.IConvertible&gt;</ph> interface.","pos":[60,171],"source":" It can be used only when the <xref:System.Boolean> instance is cast to an <xref:System.IConvertible> interface."},{"content":"The recommended alternative is to call the <ph id=\"ph1\">&lt;xref:System.Convert.ToUInt64%28System.Boolean%29?displayProperty=fullName&gt;</ph> method.","pos":[172,298],"source":" The recommended alternative is to call the <xref:System.Convert.ToUInt64%28System.Boolean%29?displayProperty=fullName> method."}]}]}],"pos":[86286,86585],"yaml":true,"extradata":"MT"},{"content":"This parameter is ignored.","nodes":[{"pos":[0,26],"content":"This parameter is ignored.","nodes":[{"content":"This parameter is ignored.","pos":[0,26]}]}],"pos":[86753,86780],"yaml":true},{"content":"1 if this instance is `true`; otherwise, 0.","nodes":[{"pos":[0,43],"content":"1 if this instance is <ph id=\"ph1\">`true`</ph>; otherwise, 0.","source":"1 if this instance is `true`; otherwise, 0."}],"pos":[86837,86881],"yaml":true}],"content":"### YamlMime:ManagedReference\nitems:\n- uid: System.Boolean\n  commentId: T:System.Boolean\n  id: Boolean\n  children:\n  - System.Boolean.CompareTo(System.Boolean)\n  - System.Boolean.CompareTo(System.Object)\n  - System.Boolean.Equals(System.Boolean)\n  - System.Boolean.Equals(System.Object)\n  - System.Boolean.FalseString\n  - System.Boolean.GetHashCode\n  - System.Boolean.GetTypeCode\n  - System.Boolean.Parse(System.String)\n  - System.Boolean.ToString(System.IFormatProvider)\n  - System.Boolean.ToString\n  - System.Boolean.TrueString\n  - System.Boolean.TryParse(System.String,System.Boolean@)\n  - System.Boolean.System#IComparable#CompareTo(System.Object)\n  - System.Boolean.System#IConvertible#GetTypeCode\n  - System.Boolean.System#IConvertible#ToBoolean(System.IFormatProvider)\n  - System.Boolean.System#IConvertible#ToByte(System.IFormatProvider)\n  - System.Boolean.System#IConvertible#ToChar(System.IFormatProvider)\n  - System.Boolean.System#IConvertible#ToDateTime(System.IFormatProvider)\n  - System.Boolean.System#IConvertible#ToDecimal(System.IFormatProvider)\n  - System.Boolean.System#IConvertible#ToDouble(System.IFormatProvider)\n  - System.Boolean.System#IConvertible#ToInt16(System.IFormatProvider)\n  - System.Boolean.System#IConvertible#ToInt32(System.IFormatProvider)\n  - System.Boolean.System#IConvertible#ToInt64(System.IFormatProvider)\n  - System.Boolean.System#IConvertible#ToSByte(System.IFormatProvider)\n  - System.Boolean.System#IConvertible#ToSingle(System.IFormatProvider)\n  - System.Boolean.System#IConvertible#ToString(System.IFormatProvider)\n  - System.Boolean.System#IConvertible#ToType(System.Type,System.IFormatProvider)\n  - System.Boolean.System#IConvertible#ToUInt16(System.IFormatProvider)\n  - System.Boolean.System#IConvertible#ToUInt32(System.IFormatProvider)\n  - System.Boolean.System#IConvertible#ToUInt64(System.IFormatProvider)\n  langs:\n  - csharp\n  name: Boolean\n  nameWithType: Boolean\n  fullName: System.Boolean\n  type: Struct\n  assemblies:\n  - System.Runtime\n  - mscorlib\n  - netstandard\n  namespace: System\n  summary: Represents a Boolean (`true` or `false`) value.\n  remarks: \"A <xref:System.Boolean> instance can have either of two values: `true`, or `false`.  \\n  \\n The <xref:System.Boolean> structure provides methods that support the following tasks:  \\n  \\n-   Converting Boolean values to strings: <xref:System.Boolean.ToString%2A>  \\n  \\n-   Parsing strings to convert them to Boolean values: <xref:System.Boolean.Parse%2A> and <xref:System.Boolean.TryParse%2A>  \\n  \\n-   Comparing values: <xref:System.Boolean.CompareTo%2A> and <xref:System.Boolean.Equals%2A>  \\n  \\n The following sections explain these tasks and other usage details:  \\n  \\n [Formatting Boolean values](#Formatting)   \\n [Converting to and from Boolean values](#Converting)   \\n [Parsing Boolean values](#Parsing)   \\n [Comparing Boolean values](#Comparing)   \\n [Working with Booleans as binary values](#Binary)   \\n [Performing operations with Boolean values](#Operations)   \\n [Booleans and Interop](#Interop)  \\n  \\n<a name=\\\"Formatting\\\"></a>   \\n## Formatting Boolean values  \\n The string representation of a <xref:System.Boolean> is either \\\"True\\\" for a `true` value or \\\"False\\\" for a `false` value. The string representation of a <xref:System.Boolean> value is defined by the read-only <xref:System.Boolean.TrueString> and <xref:System.Boolean.FalseString> fields.  \\n  \\n You use the <xref:System.Boolean.ToString%2A> method to convert Boolean values to strings. The Boolean structure includes two <xref:System.Boolean.ToString%2A> overloads: the parameterless <xref:System.Boolean.ToString> method and the <xref:System.Boolean.ToString%28System.IFormatProvider%29> method, which includes a parameter that controls formatting. However, because this parameter is ignored, the two overloads produce identical strings. The <xref:System.Boolean.ToString%28System.IFormatProvider%29> method does not support culture-sensitive formatting.  \\n  \\n The following example illustrates formatting with the <xref:System.Boolean.ToString%2A> method. Note that the example uses the [composite formatting](~/docs/standard/base-types/composite-formatting.md) feature, so the <xref:System.Boolean.ToString%2A> method is called implicitly.  \\n  \\n [!code-csharp[System.Boolean.Structure#3](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.boolean.structure/cs/tostring1.cs#3)]\\n [!code-vb[System.Boolean.Structure#3](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.boolean.structure/vb/tostring1.vb#3)]  \\n  \\n Because the <xref:System.Boolean> structure can have only two values, it is easy to add custom formatting. For simple custom formatting in which other string literals are substituted for \\\"True\\\" and \\\"False\\\", you can use any conditional evaluation feature supported by your language, such as the [conditional operator](~/docs/csharp/language-reference/operators/conditional-operator.md) in C# or the [If operator](~/docs/visual-basic/language-reference/operators/if-operator.md) in Visual Basic. The following example uses this technique to format <xref:System.Boolean> values as \\\"Yes\\\" and \\\"No\\\" rather than \\\"True\\\" and \\\"False\\\".  \\n  \\n [!code-csharp[System.Boolean.Structure#4](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.boolean.structure/cs/tostring2.cs#4)]\\n [!code-vb[System.Boolean.Structure#4](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.boolean.structure/vb/tostring2.vb#4)]  \\n  \\n For more complex custom formatting operations, including culture-sensitive formatting, you can call the <xref:System.String.Format%28System.IFormatProvider%2CSystem.String%2CSystem.Object%5B%5D%29?displayProperty=fullName> method and provide an <xref:System.ICustomFormatter> implementation. The following example implements the <xref:System.ICustomFormatter> and <xref:System.IFormatProvider> interfaces to provide culture-sensitive Boolean strings for the English (United States), French (France), and Russian (Russia) cultures.  \\n  \\n [!code-csharp[System.Boolean.Structure#5](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.boolean.structure/cs/format3.cs#5)]\\n [!code-vb[System.Boolean.Structure#5](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.boolean.structure/vb/format3.vb#5)]  \\n  \\n Optionally, you can use [resource files](http://msdn.microsoft.com/library/8ad495d4-2941-40cf-bf64-e82e85825890) to define culture-specific Boolean strings.  \\n  \\n<a name=\\\"Converting\\\"></a>   \\n## Converting to and from Boolean values  \\n The <xref:System.Boolean> structure implements the <xref:System.IConvertible> interface.  As a result, you can use the <xref:System.Convert> class to perform conversions between a <xref:System.Boolean> value and any other primitive type in the .NET Framework, or you can call the <xref:System.Boolean> structure's explicit implementations. However, conversions between a <xref:System.Boolean> and the following types are not supported, so the corresponding conversion methods throw an <xref:System.InvalidCastException> exception:  \\n  \\n-   Conversion between <xref:System.Boolean> and <xref:System.Char> (the <xref:System.Convert.ToBoolean%28System.Char%29?displayProperty=fullName> and <xref:System.Convert.ToChar%28System.Boolean%29?displayProperty=fullName> methods)  \\n  \\n-   Conversion between <xref:System.Boolean> and <xref:System.DateTime> (the <xref:System.Convert.ToBoolean%28System.DateTime%29?displayProperty=fullName> and <xref:System.Convert.ToDateTime%28System.Boolean%29?displayProperty=fullName> methods)  \\n  \\n All conversions from integral or floating-point numbers to Boolean values convert non-zero values to `true` and zero values to `false`.  The following example illustrates this by calling selected overloads of the <xref:System.Convert.ToBoolean%2A?displayProperty=fullName> class.  \\n  \\n [!code-csharp[System.Boolean.Structure#6](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.boolean.structure/cs/conversion1.cs#6)]\\n [!code-vb[System.Boolean.Structure#6](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.boolean.structure/vb/conversion1.vb#6)]  \\n  \\n When converting from floating-point values to Boolean values, the conversion methods perform an exact comparison with zero. If the floating-point value has lost precision, the result can be unexpected. This is illustrated in the following example, in which a <xref:System.Double> variable whose value should be zero is converted to a Boolean value. As the example shows, the result is `true` because repeated additions of 0.2 have resulted in a loss of precision.  \\n  \\n When converting from Boolean to numeric values, the conversion methods of the <xref:System.Convert> class convert `true` to 1 and `false` to 0. However, Visual Basic conversion functions convert `true` to either 255 (for conversions to <xref:System.Byte> values) or -1 (for all other numeric conversions). The following example converts `true` to numeric values by using a <xref:System.Convert> method, and, in the case of the Visual Basic example, by using the Visual Basic language's own conversion operator.  \\n  \\n [!code-csharp[System.Boolean.Structure#8](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.boolean.structure/cs/conversion3.cs#8)]\\n [!code-vb[System.Boolean.Structure#8](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.boolean.structure/vb/conversion3.vb#8)]  \\n  \\n For conversions from <xref:System.Boolean> to string values, see the [Formatting Boolean Values](#Formatting) section. For conversions from strings to <xref:System.Boolean> values, see the [Parsing Boolean Values](#Parsing) section.  \\n  \\n<a name=\\\"Parsing\\\"></a>   \\n## Parsing Boolean values  \\n The <xref:System.Boolean> structure includes two static parsing methods, <xref:System.Boolean.Parse%2A> and <xref:System.Boolean.TryParse%2A>, that convert a string to a Boolean value. The string representation of a Boolean value is defined by the case-insensitive equivalents of the values of the <xref:System.Boolean.TrueString> and <xref:System.Boolean.FalseString> fields, which are \\\"True\\\" and \\\"False\\\", respectively. In other words, the only strings that parse successfully are \\\"True\\\", \\\"False\\\", \\\"true\\\", \\\"false\\\", or some mixed-case equivalent. You cannot successfully parse numeric strings such as \\\"0\\\" or \\\"1\\\". Leading or trailing white-space characters are not considered when performing the string comparison.  \\n  \\n The following example uses the <xref:System.Boolean.Parse%2A> and <xref:System.Boolean.TryParse%2A> methods to parse a number of strings. Note that only the case-insensitive equivalents of \\\"True\\\" and \\\"False\\\" can be successfully parsed.  \\n  \\n [!code-csharp[System.Boolean.Structure#2](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.boolean.structure/cs/parse2.cs#2)]\\n [!code-vb[System.Boolean.Structure#2](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.boolean.structure/vb/parse2.vb#2)]  \\n  \\n If you are programming in Visual Basic, you can use the `CBool` function to convert the string representation of a number to a Boolean value. \\\"0\\\" is converted to `false`, and the string representation of any non-zero value is converted to `true`. If you are not programming in Visual Basic, you must convert your numeric string to a number before converting it to a Boolean. The following example illustrates this by converting an array of integers to Boolean values.  \\n  \\n [!code-csharp[System.Boolean.Structure#9](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.boolean.structure/cs/parse3.cs#9)]\\n [!code-vb[System.Boolean.Structure#9](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.boolean.structure/vb/parse3.vb#9)]  \\n  \\n<a name=\\\"Comparing\\\"></a>   \\n## Comparing Boolean values  \\n Because Boolean values are either `true` or `false`, there is little reason to explicitly call the <xref:System.Boolean.CompareTo%2A> method, which indicates whether an instance is greater than, less than, or equal to a specified value. Typically, to compare two Boolean variables, you call the <xref:System.Boolean.Equals%2A> method or use your language's equality operator.  \\n  \\n However, when you want to compare a Boolean variable with the literal Boolean value `true` or `false`, it is not necessary to do an explicit comparison, because the result of evaluating a Boolean value is that Boolean value. For example, the expressions  \\n  \\n [!code-csharp[System.Boolean.Structure#12](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.boolean.structure/cs/operations1.cs#12)]\\n [!code-vb[System.Boolean.Structure#12](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.boolean.structure/vb/operations1.vb#12)]  \\n  \\n and  \\n  \\n [!code-csharp[System.Boolean.Structure#13](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.boolean.structure/cs/operations2.cs#13)]\\n [!code-vb[System.Boolean.Structure#13](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.boolean.structure/vb/operations2.vb#13)]  \\n  \\n are equivalent, but the second is more compact. However, both techniques offer comparable performance.  \\n  \\n<a name=\\\"Binary\\\"></a>   \\n## Working with Booleans as binary values  \\n A Boolean value occupies one byte of memory, as the following C# example shows. The example must be compiled with the `/unsafe` switch.  \\n  \\n [!code-csharp[System.Boolean.Structure#14](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.boolean.structure/cs/size1.cs#14)]  \\n  \\n The byte's low-order bit is used to represent its value. A value of 1 represents `true`; a value of 0 represents `false`.  \\n  \\n> [!WARNING]\\n>  You can use the <xref:System.Collections.Specialized.BitVector32?displayProperty=fullName> structure to work with sets of Boolean values.  \\n  \\n You can convert a Boolean value to its binary representation by calling the <xref:System.BitConverter.GetBytes%28System.Boolean%29?displayProperty=fullName> method. The method returns a byte array with a single element. To restore a Boolean value from its binary representation, you can call the <xref:System.BitConverter.ToBoolean%28System.Byte%5B%5D%2CSystem.Int32%29?displayProperty=fullName> method.  \\n  \\n The following example calls the <xref:System.BitConverter.GetBytes%2A?displayProperty=fullName> method to convert a Boolean value to its binary representation and displays the individual bits of the value, and then calls the <xref:System.BitConverter.ToBoolean%2A?displayProperty=fullName> method to restore the value from its binary representation.  \\n  \\n [!code-csharp[System.Boolean.Structure#1](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.boolean.structure/cs/binary1.cs#1)]\\n [!code-vb[System.Boolean.Structure#1](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.boolean.structure/vb/binary1.vb#1)]  \\n  \\n<a name=\\\"Operations\\\"></a>   \\n## Performing operations with Boolean values  \\n This section illustrates how Boolean values are used in apps. The first section discusses its use as a flag. The second illustrates its use for arithmetic operations.  \\n  \\n### Boolean values as flags  \\n Boolean variables are most commonly used as flags, to signal the presence or absence of some condition. For example, in the <xref:System.String.Compare%28System.String%2CSystem.String%2CSystem.Boolean%29?displayProperty=fullName> method, the final parameter, `ignoreCase`, is a flag that indicates whether the comparison of two strings is case-insensitive (`ignoreCase` is `true`) or case-sensitive (`ignoreCase` is `false`). The value of the flag can then be evaluated in a conditional statement.  \\n  \\n The following example uses a simple console app to illustrate the use of Boolean variables as flags. The app accepts command-line parameters that enable output to be redirected to a specified file (the `/f` switch), and that enable output to be sent both to a specified file and to the console (the `/b` switch). The app defines a flag named `isRedirected` to indicate whether output is to be sent to a file, and a flag named `isBoth` to indicate that output should be sent to the console.  \\n  \\n [!code-csharp[System.Boolean.Structure#10](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.boolean.structure/cs/operations1.cs#10)]\\n [!code-vb[System.Boolean.Structure#10](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.boolean.structure/vb/operations1.vb#10)]  \\n  \\n### Booleans and arithmetic operations  \\n A Boolean value is sometimes used to indicate the presence of a condition that triggers a mathematical calculation. For example, a `hasShippingCharge` variable might serve as a flag to indicate whether to add shipping charges to an invoice amount.  \\n  \\n Because an operation with a `false` value has no effect on the result of an operation, it is not necessary to convert the Boolean to an integral value to use in the mathematical operation. Instead, you can use conditional logic.  \\n  \\n The following example computes an amount that consists of a subtotal, a shipping charge, and an optional service charge. The `hasServiceCharge` variable determines whether the service charge is applied. Instead of converting `hasServiceCharge` to a numeric value and multiplying it by the amount of the service charge, the example uses conditional logic to add the service charge amount if it is applicable.  \\n  \\n [!code-csharp[System.Boolean.Structure#13](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.boolean.structure/cs/operations2.cs#13)]\\n [!code-vb[System.Boolean.Structure#13](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.boolean.structure/vb/operations2.vb#13)]  \\n  \\n<a name=\\\"Interop\\\"></a>   \\n### Booleans and interop  \\n While marshaling base data types to COM is generally straightforward, the <xref:System.Boolean> data type is an exception. You can apply the <xref:System.Runtime.InteropServices.MarshalAsAttribute> attribute to marshal the <xref:System.Boolean> type to any of the following representations:  \\n  \\n|Enumeration type|Unmanaged format|  \\n|----------------------|----------------------|  \\n|<xref:System.Runtime.InteropServices.UnmanagedType?displayProperty=fullName>|A 4-byte integer value, where any nonzero value represents `true` and 0 represents `false`. This is the default format of a <xref:System.Boolean> field in a structure and of a <xref:System.Boolean> parameter in platform invoke calls.|  \\n|<xref:System.Runtime.InteropServices.UnmanagedType?displayProperty=fullName>|A 1-byte integer value, where the 1 represents `true` and 0 represents `false`.|  \\n|<xref:System.Runtime.InteropServices.UnmanagedType?displayProperty=fullName>|A 2-byte integer value, where -1 represents `true` and 0 represents `false`. This is the default format of a <xref:System.Boolean> parameter in COM interop calls.|\"\n  syntax:\n    content: >-\n      [System.Runtime.InteropServices.ComVisible(true)]\n\n      public struct Boolean : IComparable, IComparable<bool>, IConvertible, IEquatable<bool>\n  inheritance:\n  - System.Object\n  - System.ValueType\n  implements:\n  - System.IComparable\n  - System.IComparable{System.Boolean}\n  - System.IConvertible\n  - System.IEquatable{System.Boolean}\n  attributes:\n  - type: System.Runtime.InteropServices.ComVisibleAttribute\n  version:\n  - netcore-1.0\n  - netcore-1.1\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - netstandard-1.0\n  - netstandard-1.1\n  - netstandard-1.2\n  - netstandard-1.3\n  - netstandard-1.4\n  - netstandard-1.5\n  - netstandard-1.6\n  - netstandard-2.0\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  monikers:\n  - netcore-1.0\n  - netcore-1.1\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - netstandard-1.0\n  - netstandard-1.1\n  - netstandard-1.2\n  - netstandard-1.3\n  - netstandard-1.4\n  - netstandard-1.5\n  - netstandard-1.6\n  - netstandard-2.0\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System/Boolean.xml\n  ms.technology:\n  - dotnet-standard\n  author: rpetrusha\n  ms.author: ronpet\n  manager: wpickett\n- uid: System.Boolean.CompareTo(System.Boolean)\n  commentId: M:System.Boolean.CompareTo(System.Boolean)\n  id: CompareTo(System.Boolean)\n  parent: System.Boolean\n  langs:\n  - csharp\n  name: CompareTo(Boolean)\n  nameWithType: Boolean.CompareTo(Boolean)\n  fullName: Boolean.CompareTo(Boolean)\n  type: Method\n  assemblies:\n  - System.Runtime\n  - mscorlib\n  - netstandard\n  namespace: System\n  summary: Compares this instance to a specified <xref href=\"System.Boolean\"></xref> object and returns an integer that indicates their relationship to one another.\n  remarks: \"This method implements the <xref:System.IComparable%601?displayProperty=fullName> interface and performs slightly better than the <xref:System.Boolean.CompareTo%2A?displayProperty=fullName> method because it does not have to convert the `value` parameter to an object.  \\n  \\n If `value` has fewer bits (is narrower) than the instance type, some programming languages perform an implicit widening conversion that transforms the value of the parameter into a value with more bits.  \\n  \\n For example, suppose the instance type is <xref:System.Int32> and the parameter type is <xref:System.Byte>. The Microsoft C# compiler generates instructions to represent the value of the parameter as an <xref:System.Int32> object, then generates a <xref:System.Int32.CompareTo%2A?displayProperty=fullName> method to compare the <xref:System.Int32> instance and parameter representation.  \\n  \\n Consult your programming language's documentation to determine whether its compiler performs implicit widening conversions on numeric types.\"\n  example:\n  - \"The following code example demonstrates generic and nongeneric versions of the <xref:System.Boolean.CompareTo%2A> method for several value and reference types.  \\n  \\n [!code-cpp[T.CompareTo#1](~/samples/snippets/cpp/VS_Snippets_CLR/T.CompareTo/CPP/cat.cpp#1)]\\n [!code-csharp[T.CompareTo#1](~/samples/snippets/csharp/VS_Snippets_CLR/T.CompareTo/CS/cat.cs#1)]\\n [!code-vb[T.CompareTo#1](~/samples/snippets/visualbasic/VS_Snippets_CLR/T.CompareTo/VB/cat.vb#1)]\"\n  syntax:\n    content: public int CompareTo (bool value);\n    parameters:\n    - id: value\n      type: System.Boolean\n      description: A <xref href=\"System.Boolean\"></xref> object to compare to this instance.\n    return:\n      type: System.Int32\n      description: \"A signed integer that indicates the relative values of this instance and <code>value</code>.  \\n  \\n <table><thead><tr><th> Return Value  \\n  \\n </th><th> Condition  \\n  \\n </th></tr></thead><tbody><tr><td> Less than zero  \\n  \\n </td><td> This instance is `false` and <code>value</code> is `true`.  \\n  \\n </td></tr><tr><td> Zero  \\n  \\n </td><td> This instance and <code>value</code> are equal (either both are `true` or both are `false`).  \\n  \\n </td></tr><tr><td> Greater than zero  \\n  \\n </td><td> This instance is `true` and <code>value</code> is `false`.  \\n  \\n </td></tr></tbody></table>\"\n  overload: System.Boolean.CompareTo*\n  exceptions: []\n  version:\n  - netcore-1.0\n  - netcore-1.1\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - netstandard-1.0\n  - netstandard-1.1\n  - netstandard-1.2\n  - netstandard-1.3\n  - netstandard-1.4\n  - netstandard-1.5\n  - netstandard-1.6\n  - netstandard-2.0\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  monikers:\n  - netcore-1.0\n  - netcore-1.1\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - netstandard-1.0\n  - netstandard-1.1\n  - netstandard-1.2\n  - netstandard-1.3\n  - netstandard-1.4\n  - netstandard-1.5\n  - netstandard-1.6\n  - netstandard-2.0\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System/Boolean.xml\n  ms.technology:\n  - dotnet-standard\n  author: rpetrusha\n  ms.author: ronpet\n  manager: wpickett\n- uid: System.Boolean.CompareTo(System.Object)\n  commentId: M:System.Boolean.CompareTo(System.Object)\n  id: CompareTo(System.Object)\n  parent: System.Boolean\n  langs:\n  - csharp\n  name: CompareTo(Object)\n  nameWithType: Boolean.CompareTo(Object)\n  fullName: Boolean.CompareTo(Object)\n  type: Method\n  assemblies:\n  - mscorlib\n  - netstandard\n  - System.Runtime\n  namespace: System\n  summary: Compares this instance to a specified object and returns an integer that indicates their relationship to one another.\n  remarks: \"`obj` must be `null` or an instance of `Boolean`; otherwise, an exception is thrown.  \\n  \\n This method implements the <xref:System.IComparable> interface.\"\n  syntax:\n    content: public int CompareTo (object obj);\n    parameters:\n    - id: obj\n      type: System.Object\n      description: An object to compare to this instance, or `null`.\n    return:\n      type: System.Int32\n      description: \"A signed integer that indicates the relative order of this instance and <code>obj</code>.  \\n  \\n <table><thead><tr><th> Return Value  \\n  \\n </th><th> Condition  \\n  \\n </th></tr></thead><tbody><tr><td> Less than zero  \\n  \\n </td><td> This instance is `false` and <code>obj</code> is `true`.  \\n  \\n </td></tr><tr><td> Zero  \\n  \\n </td><td> This instance and <code>obj</code> are equal (either both are `true` or both are `false`).  \\n  \\n </td></tr><tr><td> Greater than zero  \\n  \\n </td><td> This instance is `true` and <code>obj</code> is `false`.  \\n  \\n -or-  \\n  \\n <code>obj</code> is `null`.  \\n  \\n </td></tr></tbody></table>\"\n  overload: System.Boolean.CompareTo*\n  exceptions:\n  - type: System.ArgumentException\n    commentId: T:System.ArgumentException\n    description: <code>obj</code> is not a <xref href=\"System.Boolean\"></xref>.\n  version:\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - netstandard-2.0\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  monikers:\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - netstandard-2.0\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System/Boolean.xml\n  ms.technology:\n  - dotnet-standard\n  author: rpetrusha\n  ms.author: ronpet\n  manager: wpickett\n- uid: System.Boolean.Equals(System.Boolean)\n  commentId: M:System.Boolean.Equals(System.Boolean)\n  id: Equals(System.Boolean)\n  parent: System.Boolean\n  langs:\n  - csharp\n  name: Equals(Boolean)\n  nameWithType: Boolean.Equals(Boolean)\n  fullName: Boolean.Equals(Boolean)\n  type: Method\n  assemblies:\n  - System.Runtime\n  - mscorlib\n  - netstandard\n  namespace: System\n  summary: Returns a value indicating whether this instance is equal to a specified <xref href=\"System.Boolean\"></xref> object.\n  remarks: This method implements the <xref:System.IEquatable%601?displayProperty=fullName> interface, and performs slightly better than <xref:System.Boolean.Equals%2A> because it does not have to convert the `obj` parameter to an object.\n  syntax:\n    content: public bool Equals (bool obj);\n    parameters:\n    - id: obj\n      type: System.Boolean\n      description: A <xref href=\"System.Boolean\"></xref> value to compare to this instance.\n    return:\n      type: System.Boolean\n      description: '`true` if <code>obj</code> has the same value as this instance; otherwise, `false`.'\n  overload: System.Boolean.Equals*\n  exceptions: []\n  version:\n  - netcore-1.0\n  - netcore-1.1\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - netstandard-1.0\n  - netstandard-1.1\n  - netstandard-1.2\n  - netstandard-1.3\n  - netstandard-1.4\n  - netstandard-1.5\n  - netstandard-1.6\n  - netstandard-2.0\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  monikers:\n  - netcore-1.0\n  - netcore-1.1\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - netstandard-1.0\n  - netstandard-1.1\n  - netstandard-1.2\n  - netstandard-1.3\n  - netstandard-1.4\n  - netstandard-1.5\n  - netstandard-1.6\n  - netstandard-2.0\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System/Boolean.xml\n  ms.technology:\n  - dotnet-standard\n  author: rpetrusha\n  ms.author: ronpet\n  manager: wpickett\n- uid: System.Boolean.Equals(System.Object)\n  commentId: M:System.Boolean.Equals(System.Object)\n  id: Equals(System.Object)\n  parent: System.Boolean\n  langs:\n  - csharp\n  name: Equals(Object)\n  nameWithType: Boolean.Equals(Object)\n  fullName: Boolean.Equals(Object)\n  type: Method\n  assemblies:\n  - System.Runtime\n  - mscorlib\n  - netstandard\n  namespace: System\n  summary: Returns a value indicating whether this instance is equal to a specified object.\n  remarks: This method overrides <xref:System.Object.Equals%2A>.\n  syntax:\n    content: public override bool Equals (object obj);\n    parameters:\n    - id: obj\n      type: System.Object\n      description: An object to compare to this instance.\n    return:\n      type: System.Boolean\n      description: '`true` if <code>obj</code> is a <xref href=\"System.Boolean\"></xref> and has the same value as this instance; otherwise, `false`.'\n  overload: System.Boolean.Equals*\n  exceptions: []\n  version:\n  - netcore-1.0\n  - netcore-1.1\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - netstandard-1.0\n  - netstandard-1.1\n  - netstandard-1.2\n  - netstandard-1.3\n  - netstandard-1.4\n  - netstandard-1.5\n  - netstandard-1.6\n  - netstandard-2.0\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  monikers:\n  - netcore-1.0\n  - netcore-1.1\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - netstandard-1.0\n  - netstandard-1.1\n  - netstandard-1.2\n  - netstandard-1.3\n  - netstandard-1.4\n  - netstandard-1.5\n  - netstandard-1.6\n  - netstandard-2.0\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System/Boolean.xml\n  ms.technology:\n  - dotnet-standard\n  author: rpetrusha\n  ms.author: ronpet\n  manager: wpickett\n- uid: System.Boolean.FalseString\n  commentId: F:System.Boolean.FalseString\n  id: FalseString\n  parent: System.Boolean\n  langs:\n  - csharp\n  name: FalseString\n  nameWithType: Boolean.FalseString\n  fullName: Boolean.FalseString\n  type: Field\n  assemblies:\n  - System.Runtime\n  - mscorlib\n  - netstandard\n  namespace: System\n  summary: Represents the Boolean value `false` as a string. This field is read-only.\n  remarks: \"This field is equal to the string \\\"False\\\".  \\n  \\n The <xref:System.Boolean.FalseString> property defines the string representation of a `False`<xref:System.Boolean> value in formatting and parsing operations.\"\n  syntax:\n    content: public static readonly string FalseString;\n    return:\n      type: System.String\n      description: ''\n  exceptions: []\n  version:\n  - netcore-1.0\n  - netcore-1.1\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - netstandard-1.0\n  - netstandard-1.1\n  - netstandard-1.2\n  - netstandard-1.3\n  - netstandard-1.4\n  - netstandard-1.5\n  - netstandard-1.6\n  - netstandard-2.0\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  monikers:\n  - netcore-1.0\n  - netcore-1.1\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - netstandard-1.0\n  - netstandard-1.1\n  - netstandard-1.2\n  - netstandard-1.3\n  - netstandard-1.4\n  - netstandard-1.5\n  - netstandard-1.6\n  - netstandard-2.0\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System/Boolean.xml\n  ms.technology:\n  - dotnet-standard\n  author: rpetrusha\n  ms.author: ronpet\n  manager: wpickett\n- uid: System.Boolean.GetHashCode\n  commentId: M:System.Boolean.GetHashCode\n  id: GetHashCode\n  parent: System.Boolean\n  langs:\n  - csharp\n  name: GetHashCode()\n  nameWithType: Boolean.GetHashCode()\n  fullName: Boolean.GetHashCode()\n  type: Method\n  assemblies:\n  - System.Runtime\n  - mscorlib\n  - netstandard\n  namespace: System\n  summary: Returns the hash code for this instance.\n  remarks: The <xref:System.Boolean> class implements `true` as the integer, one, and `false` as the integer, zero. However, a particular programming language might represent `true` and `false` with other values.\n  syntax:\n    content: public override int GetHashCode ();\n    parameters: []\n    return:\n      type: System.Int32\n      description: A hash code for the current <xref href=\"System.Boolean\"></xref>.\n  overload: System.Boolean.GetHashCode*\n  exceptions: []\n  version:\n  - netcore-1.0\n  - netcore-1.1\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - netstandard-1.0\n  - netstandard-1.1\n  - netstandard-1.2\n  - netstandard-1.3\n  - netstandard-1.4\n  - netstandard-1.5\n  - netstandard-1.6\n  - netstandard-2.0\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  monikers:\n  - netcore-1.0\n  - netcore-1.1\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - netstandard-1.0\n  - netstandard-1.1\n  - netstandard-1.2\n  - netstandard-1.3\n  - netstandard-1.4\n  - netstandard-1.5\n  - netstandard-1.6\n  - netstandard-2.0\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System/Boolean.xml\n  ms.technology:\n  - dotnet-standard\n  author: rpetrusha\n  ms.author: ronpet\n  manager: wpickett\n- uid: System.Boolean.GetTypeCode\n  commentId: M:System.Boolean.GetTypeCode\n  id: GetTypeCode\n  parent: System.Boolean\n  langs:\n  - csharp\n  name: GetTypeCode()\n  nameWithType: Boolean.GetTypeCode()\n  fullName: Boolean.GetTypeCode()\n  type: Method\n  assemblies:\n  - mscorlib\n  - netstandard\n  - System.Runtime\n  namespace: System\n  summary: Returns the type code for the <xref href=\"System.Boolean\"></xref> value type.\n  syntax:\n    content: public TypeCode GetTypeCode ();\n    parameters: []\n    return:\n      type: System.TypeCode\n      description: The enumerated constant <xref href=\"System.TypeCode.Boolean\"></xref>.\n  overload: System.Boolean.GetTypeCode*\n  exceptions: []\n  version:\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - netstandard-2.0\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  monikers:\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - netstandard-2.0\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System/Boolean.xml\n  ms.technology:\n  - dotnet-standard\n  author: rpetrusha\n  ms.author: ronpet\n  manager: wpickett\n- uid: System.Boolean.Parse(System.String)\n  commentId: M:System.Boolean.Parse(System.String)\n  id: Parse(System.String)\n  parent: System.Boolean\n  langs:\n  - csharp\n  name: Parse(String)\n  nameWithType: Boolean.Parse(String)\n  fullName: Boolean.Parse(String)\n  type: Method\n  assemblies:\n  - System.Runtime\n  - mscorlib\n  - netstandard\n  namespace: System\n  summary: Converts the specified string representation of a logical value to its <xref href=\"System.Boolean\"></xref> equivalent.\n  remarks: The `value` parameter, optionally preceded or trailed by white space, must contain either <xref:System.Boolean.TrueString> or <xref:System.Boolean.FalseString>; otherwise, an exception is thrown. The comparison is case-insensitive.\n  example:\n  - \"The following code example illustrates the use of <xref:System.Boolean.Parse%2A> method.  \\n  \\n [!code-cpp[System.Boolean#2](~/samples/snippets/cpp/VS_Snippets_CLR_System/system.Boolean/CPP/booleanmembers.cpp#2)]\\n [!code-csharp[System.Boolean#2](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.Boolean/CS/booleanmembers.cs#2)]\\n [!code-vb[System.Boolean#2](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.Boolean/VB/booleanmembers.vb#2)]\"\n  syntax:\n    content: public static bool Parse (string value);\n    parameters:\n    - id: value\n      type: System.String\n      description: A string containing the value to convert.\n    return:\n      type: System.Boolean\n      description: '`true` if <code>value</code> is equivalent to <xref href=\"System.Boolean.TrueString\"></xref>; `false` if <code>value</code> is equivalent to <xref href=\"System.Boolean.FalseString\"></xref>.'\n  overload: System.Boolean.Parse*\n  exceptions:\n  - type: System.ArgumentNullException\n    commentId: T:System.ArgumentNullException\n    description: <code>value</code> is `null`.\n  - type: System.FormatException\n    commentId: T:System.FormatException\n    description: <code>value</code> is not equivalent to <xref href=\"System.Boolean.TrueString\"></xref> or <xref href=\"System.Boolean.FalseString\"></xref>.\n  version:\n  - netcore-1.0\n  - netcore-1.1\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - netstandard-1.0\n  - netstandard-1.1\n  - netstandard-1.2\n  - netstandard-1.3\n  - netstandard-1.4\n  - netstandard-1.5\n  - netstandard-1.6\n  - netstandard-2.0\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  monikers:\n  - netcore-1.0\n  - netcore-1.1\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - netstandard-1.0\n  - netstandard-1.1\n  - netstandard-1.2\n  - netstandard-1.3\n  - netstandard-1.4\n  - netstandard-1.5\n  - netstandard-1.6\n  - netstandard-2.0\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System/Boolean.xml\n  ms.technology:\n  - dotnet-standard\n  author: rpetrusha\n  ms.author: ronpet\n  manager: wpickett\n- uid: System.Boolean.ToString(System.IFormatProvider)\n  commentId: M:System.Boolean.ToString(System.IFormatProvider)\n  id: ToString(System.IFormatProvider)\n  parent: System.Boolean\n  langs:\n  - csharp\n  name: ToString(IFormatProvider)\n  nameWithType: Boolean.ToString(IFormatProvider)\n  fullName: Boolean.ToString(IFormatProvider)\n  type: Method\n  assemblies:\n  - mscorlib\n  - netstandard\n  - System.Runtime\n  namespace: System\n  summary: Converts the value of this instance to its equivalent string representation (either \"True\" or \"False\").\n  remarks: \"The `provider` parameter is reserved. It does not participate in the execution of this method. This means that the <xref:System.Boolean.ToString%28System.IFormatProvider%29?displayProperty=fullName> method, unlike most methods with a `provider` parameter, does not reflect culture-specific settings.  \\n  \\n This method returns the constants \\\"True\\\" or \\\"False\\\". Note that XML is case-sensitive, and that the XML specification recognizes \\\"true\\\" and \\\"false\\\" as the valid set of Boolean values. If the <xref:System.String> object returned by the <xref:System.Boolean.ToString%28System.IFormatProvider%29> method is to be written to an XML file, its <xref:System.String.ToLowerInvariant%2A?displayProperty=fullName> method should be called first to convert it to lowercase.\"\n  syntax:\n    content: public string ToString (IFormatProvider provider);\n    parameters:\n    - id: provider\n      type: System.IFormatProvider\n      description: (Reserved) An <xref href=\"System.IFormatProvider\"></xref> object.\n    return:\n      type: System.String\n      description: <xref href=\"System.Boolean.TrueString\"></xref> if the value of this instance is `true`, or <xref href=\"System.Boolean.FalseString\"></xref> if the value of this instance is `false`.\n  overload: System.Boolean.ToString*\n  exceptions: []\n  version:\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - netstandard-2.0\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  monikers:\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - netstandard-2.0\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System/Boolean.xml\n  ms.technology:\n  - dotnet-standard\n  author: rpetrusha\n  ms.author: ronpet\n  manager: wpickett\n- uid: System.Boolean.ToString\n  commentId: M:System.Boolean.ToString\n  id: ToString\n  parent: System.Boolean\n  langs:\n  - csharp\n  name: ToString()\n  nameWithType: Boolean.ToString()\n  fullName: Boolean.ToString()\n  type: Method\n  assemblies:\n  - System.Runtime\n  - mscorlib\n  - netstandard\n  namespace: System\n  summary: Converts the value of this instance to its equivalent string representation (either \"True\" or \"False\").\n  remarks: \"This method returns the constants \\\"True\\\" or \\\"False\\\".  \\n  \\n Note that XML is case-sensitive, and that the XML specification recognizes \\\"true\\\" and \\\"false\\\" as the valid set of Boolean values. If the string returned by the <xref:System.Boolean.ToString> method is to be written to an XML file, its <xref:System.String.ToLowerInvariant%2A?displayProperty=fullName> method should be called first to convert it to lowercase.\"\n  example:\n  - \"The following example illustrates the <xref:System.Boolean.ToString%2A> method.  \\n  \\n [!code-cpp[System.Boolean#1](~/samples/snippets/cpp/VS_Snippets_CLR_System/system.Boolean/CPP/booleanmembers.cpp#1)]\\n [!code-csharp[System.Boolean#1](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.Boolean/CS/booleanmembers.cs#1)]\\n [!code-vb[System.Boolean#1](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.Boolean/VB/booleanmembers.vb#1)]\"\n  syntax:\n    content: public override string ToString ();\n    parameters: []\n    return:\n      type: System.String\n      description: \"\\\"True\\\" (the value of the <xref href=\\\"System.Boolean.TrueString\\\"></xref> property) if the value of this instance is `true`, or \\\"False\\\" (the value of the <xref href=\\\"System.Boolean.FalseString\\\"></xref> property) if the value of this instance is `false`.\"\n  overload: System.Boolean.ToString*\n  exceptions: []\n  version:\n  - netcore-1.0\n  - netcore-1.1\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - netstandard-1.0\n  - netstandard-1.1\n  - netstandard-1.2\n  - netstandard-1.3\n  - netstandard-1.4\n  - netstandard-1.5\n  - netstandard-1.6\n  - netstandard-2.0\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  monikers:\n  - netcore-1.0\n  - netcore-1.1\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - netstandard-1.0\n  - netstandard-1.1\n  - netstandard-1.2\n  - netstandard-1.3\n  - netstandard-1.4\n  - netstandard-1.5\n  - netstandard-1.6\n  - netstandard-2.0\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System/Boolean.xml\n  ms.technology:\n  - dotnet-standard\n  author: rpetrusha\n  ms.author: ronpet\n  manager: wpickett\n- uid: System.Boolean.TrueString\n  commentId: F:System.Boolean.TrueString\n  id: TrueString\n  parent: System.Boolean\n  langs:\n  - csharp\n  name: TrueString\n  nameWithType: Boolean.TrueString\n  fullName: Boolean.TrueString\n  type: Field\n  assemblies:\n  - System.Runtime\n  - mscorlib\n  - netstandard\n  namespace: System\n  summary: Represents the Boolean value `true` as a string. This field is read-only.\n  remarks: \"This field is equal to the string \\\"True\\\".  \\n  \\n The <xref:System.Boolean.TrueString> property defines the string representation of a `True`<xref:System.Boolean> value in formatting and parsing operations.\"\n  syntax:\n    content: public static readonly string TrueString;\n    return:\n      type: System.String\n      description: ''\n  exceptions: []\n  version:\n  - netcore-1.0\n  - netcore-1.1\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - netstandard-1.0\n  - netstandard-1.1\n  - netstandard-1.2\n  - netstandard-1.3\n  - netstandard-1.4\n  - netstandard-1.5\n  - netstandard-1.6\n  - netstandard-2.0\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  monikers:\n  - netcore-1.0\n  - netcore-1.1\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - netstandard-1.0\n  - netstandard-1.1\n  - netstandard-1.2\n  - netstandard-1.3\n  - netstandard-1.4\n  - netstandard-1.5\n  - netstandard-1.6\n  - netstandard-2.0\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System/Boolean.xml\n  ms.technology:\n  - dotnet-standard\n  author: rpetrusha\n  ms.author: ronpet\n  manager: wpickett\n- uid: System.Boolean.TryParse(System.String,System.Boolean@)\n  commentId: M:System.Boolean.TryParse(System.String,System.Boolean@)\n  id: TryParse(System.String,System.Boolean@)\n  parent: System.Boolean\n  langs:\n  - csharp\n  name: TryParse(String, Boolean)\n  nameWithType: Boolean.TryParse(String, Boolean)\n  fullName: Boolean.TryParse(String, Boolean)\n  type: Method\n  assemblies:\n  - System.Runtime\n  - mscorlib\n  - netstandard\n  namespace: System\n  summary: Tries to convert the specified string representation of a logical value to its <xref href=\"System.Boolean\"></xref> equivalent. A return value indicates whether the conversion succeeded or failed.\n  remarks: \"The <xref:System.Boolean.TryParse%2A> method is like the <xref:System.Boolean.Parse%2A> method, except the <xref:System.Boolean.TryParse%2A> method does not throw an exception if the conversion fails.  \\n  \\n The `value` parameter can be preceded or followed by white space. The comparison is ordinal and case-insensitive.\"\n  example:\n  - \"The following example calls the <xref:System.Boolean.TryParse%2A> method to parse an array of strings. Note that the parse operation succeeds only if the string to be parsed is \\\"True\\\" (the value of the <xref:System.Boolean.TrueString> field) or \\\"False\\\" (the value of the <xref:System.Boolean.FalseString> field) in a case-insensitive comparison.  \\n  \\n [!code-csharp[System.Boolean.TryParse#1](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.boolean.tryparse/cs/tryparseex.cs#1)]\\n [!code-vb[System.Boolean.TryParse#1](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.boolean.tryparse/vb/tryparseex.vb#1)]\"\n  syntax:\n    content: public static bool TryParse (string value, out bool result);\n    parameters:\n    - id: value\n      type: System.String\n      description: A string containing the value to convert.\n    - id: result\n      type: System.Boolean\n      description: When this method returns, if the conversion succeeded, contains `true` if <code>value</code> is equal to <xref href=\"System.Boolean.TrueString\"></xref> or `false` if <code>value</code> is equal to <xref href=\"System.Boolean.FalseString\"></xref>. If the conversion failed, contains `false`. The conversion fails if <code>value</code> is `null` or is not equal to the value of either the <xref href=\"System.Boolean.TrueString\"></xref> or <xref href=\"System.Boolean.FalseString\"></xref> field.\n    return:\n      type: System.Boolean\n      description: '`true` if <code>value</code> was converted successfully; otherwise, `false`.'\n  overload: System.Boolean.TryParse*\n  exceptions: []\n  version:\n  - netcore-1.0\n  - netcore-1.1\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - netstandard-1.0\n  - netstandard-1.1\n  - netstandard-1.2\n  - netstandard-1.3\n  - netstandard-1.4\n  - netstandard-1.5\n  - netstandard-1.6\n  - netstandard-2.0\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  monikers:\n  - netcore-1.0\n  - netcore-1.1\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - netstandard-1.0\n  - netstandard-1.1\n  - netstandard-1.2\n  - netstandard-1.3\n  - netstandard-1.4\n  - netstandard-1.5\n  - netstandard-1.6\n  - netstandard-2.0\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System/Boolean.xml\n  ms.technology:\n  - dotnet-standard\n  author: rpetrusha\n  ms.author: ronpet\n  manager: wpickett\n- uid: System.Boolean.System#IComparable#CompareTo(System.Object)\n  commentId: M:System.Boolean.System#IComparable#CompareTo(System.Object)\n  id: System#IComparable#CompareTo(System.Object)\n  isEii: true\n  parent: System.Boolean\n  langs:\n  - csharp\n  name: IComparable.CompareTo(Object)\n  nameWithType: Boolean.IComparable.CompareTo(Object)\n  fullName: Boolean.IComparable.CompareTo(Object)\n  type: Method\n  assemblies:\n  - System.Runtime\n  namespace: System\n  syntax:\n    content: int IComparable.CompareTo (object obj);\n    parameters:\n    - id: obj\n      type: System.Object\n      description: ''\n    return:\n      type: System.Int32\n      description: ''\n  overload: System.Boolean.System#IComparable#CompareTo*\n  exceptions: []\n  version:\n  - netcore-1.0\n  - netcore-1.1\n  - netstandard-1.0\n  - netstandard-1.1\n  - netstandard-1.2\n  - netstandard-1.3\n  - netstandard-1.4\n  - netstandard-1.5\n  - netstandard-1.6\n  monikers:\n  - netcore-1.0\n  - netcore-1.1\n  - netstandard-1.0\n  - netstandard-1.1\n  - netstandard-1.2\n  - netstandard-1.3\n  - netstandard-1.4\n  - netstandard-1.5\n  - netstandard-1.6\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System/Boolean.xml\n- uid: System.Boolean.System#IConvertible#GetTypeCode\n  commentId: M:System.Boolean.System#IConvertible#GetTypeCode\n  id: System#IConvertible#GetTypeCode\n  isEii: true\n  parent: System.Boolean\n  langs:\n  - csharp\n  name: IConvertible.GetTypeCode()\n  nameWithType: Boolean.IConvertible.GetTypeCode()\n  fullName: Boolean.IConvertible.GetTypeCode()\n  type: Method\n  assemblies:\n  - System.Runtime\n  namespace: System\n  syntax:\n    content: TypeCode IConvertible.GetTypeCode ();\n    parameters: []\n    return:\n      type: System.TypeCode\n      description: ''\n  overload: System.Boolean.System#IConvertible#GetTypeCode*\n  exceptions: []\n  version:\n  - netcore-1.0\n  - netcore-1.1\n  - netstandard-1.3\n  - netstandard-1.4\n  - netstandard-1.5\n  - netstandard-1.6\n  monikers:\n  - netcore-1.0\n  - netcore-1.1\n  - netstandard-1.3\n  - netstandard-1.4\n  - netstandard-1.5\n  - netstandard-1.6\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System/Boolean.xml\n- uid: System.Boolean.System#IConvertible#ToBoolean(System.IFormatProvider)\n  commentId: M:System.Boolean.System#IConvertible#ToBoolean(System.IFormatProvider)\n  id: System#IConvertible#ToBoolean(System.IFormatProvider)\n  isEii: true\n  parent: System.Boolean\n  langs:\n  - csharp\n  name: IConvertible.ToBoolean(IFormatProvider)\n  nameWithType: Boolean.IConvertible.ToBoolean(IFormatProvider)\n  fullName: Boolean.IConvertible.ToBoolean(IFormatProvider)\n  type: Method\n  assemblies:\n  - System.Runtime\n  - mscorlib\n  - netstandard\n  namespace: System\n  summary: For a description of this member, see <xref href=\"System.IConvertible.ToBoolean(System.IFormatProvider)\"></xref>.\n  remarks: This member is an explicit interface member implementation. It can be used only when the <xref:System.Boolean> instance is cast to an <xref:System.IConvertible> interface.\n  syntax:\n    content: bool IConvertible.ToBoolean (IFormatProvider provider);\n    parameters:\n    - id: provider\n      type: System.IFormatProvider\n      description: This parameter is ignored.\n    return:\n      type: System.Boolean\n      description: '`true` or `false`.'\n  overload: System.Boolean.System#IConvertible#ToBoolean*\n  exceptions: []\n  version:\n  - netcore-1.0\n  - netcore-1.1\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - netstandard-1.3\n  - netstandard-1.4\n  - netstandard-1.5\n  - netstandard-1.6\n  - netstandard-2.0\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  monikers:\n  - netcore-1.0\n  - netcore-1.1\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - netstandard-1.3\n  - netstandard-1.4\n  - netstandard-1.5\n  - netstandard-1.6\n  - netstandard-2.0\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System/Boolean.xml\n  ms.technology:\n  - dotnet-standard\n  author: rpetrusha\n  ms.author: ronpet\n  manager: wpickett\n- uid: System.Boolean.System#IConvertible#ToByte(System.IFormatProvider)\n  commentId: M:System.Boolean.System#IConvertible#ToByte(System.IFormatProvider)\n  id: System#IConvertible#ToByte(System.IFormatProvider)\n  isEii: true\n  parent: System.Boolean\n  langs:\n  - csharp\n  name: IConvertible.ToByte(IFormatProvider)\n  nameWithType: Boolean.IConvertible.ToByte(IFormatProvider)\n  fullName: Boolean.IConvertible.ToByte(IFormatProvider)\n  type: Method\n  assemblies:\n  - System.Runtime\n  - mscorlib\n  - netstandard\n  namespace: System\n  summary: For a description of this member, see <xref href=\"System.IConvertible.ToByte(System.IFormatProvider)\"></xref>.\n  remarks: This member is an explicit interface member implementation. It can be used only when the <xref:System.Boolean> instance is cast to an <xref:System.IConvertible> interface. The recommended alternative is to call the <xref:System.Convert.ToByte%2A?displayProperty=fullName> method.\n  syntax:\n    content: byte IConvertible.ToByte (IFormatProvider provider);\n    parameters:\n    - id: provider\n      type: System.IFormatProvider\n      description: This parameter is ignored.\n    return:\n      type: System.Byte\n      description: 1 if the value of this instance is `true`; otherwise, 0.\n  overload: System.Boolean.System#IConvertible#ToByte*\n  exceptions: []\n  version:\n  - netcore-1.0\n  - netcore-1.1\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - netstandard-1.3\n  - netstandard-1.4\n  - netstandard-1.5\n  - netstandard-1.6\n  - netstandard-2.0\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  monikers:\n  - netcore-1.0\n  - netcore-1.1\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - netstandard-1.3\n  - netstandard-1.4\n  - netstandard-1.5\n  - netstandard-1.6\n  - netstandard-2.0\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System/Boolean.xml\n  ms.technology:\n  - dotnet-standard\n  author: rpetrusha\n  ms.author: ronpet\n  manager: wpickett\n- uid: System.Boolean.System#IConvertible#ToChar(System.IFormatProvider)\n  commentId: M:System.Boolean.System#IConvertible#ToChar(System.IFormatProvider)\n  id: System#IConvertible#ToChar(System.IFormatProvider)\n  isEii: true\n  parent: System.Boolean\n  langs:\n  - csharp\n  name: IConvertible.ToChar(IFormatProvider)\n  nameWithType: Boolean.IConvertible.ToChar(IFormatProvider)\n  fullName: Boolean.IConvertible.ToChar(IFormatProvider)\n  type: Method\n  assemblies:\n  - System.Runtime\n  - mscorlib\n  - netstandard\n  namespace: System\n  summary: This conversion is not supported. Attempting to use this method throws an <xref href=\"System.InvalidCastException\"></xref>.\n  syntax:\n    content: char IConvertible.ToChar (IFormatProvider provider);\n    parameters:\n    - id: provider\n      type: System.IFormatProvider\n      description: This parameter is ignored.\n    return:\n      type: System.Char\n      description: This conversion is not supported. No value is returned.\n  overload: System.Boolean.System#IConvertible#ToChar*\n  exceptions:\n  - type: System.InvalidCastException\n    commentId: T:System.InvalidCastException\n    description: You attempt to convert a <xref href=\"System.Boolean\"></xref> value to a <xref href=\"System.Char\"></xref> value. This conversion is not supported.\n  version:\n  - netcore-1.0\n  - netcore-1.1\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - netstandard-1.3\n  - netstandard-1.4\n  - netstandard-1.5\n  - netstandard-1.6\n  - netstandard-2.0\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  monikers:\n  - netcore-1.0\n  - netcore-1.1\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - netstandard-1.3\n  - netstandard-1.4\n  - netstandard-1.5\n  - netstandard-1.6\n  - netstandard-2.0\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System/Boolean.xml\n  ms.technology:\n  - dotnet-standard\n  author: rpetrusha\n  ms.author: ronpet\n  manager: wpickett\n- uid: System.Boolean.System#IConvertible#ToDateTime(System.IFormatProvider)\n  commentId: M:System.Boolean.System#IConvertible#ToDateTime(System.IFormatProvider)\n  id: System#IConvertible#ToDateTime(System.IFormatProvider)\n  isEii: true\n  parent: System.Boolean\n  langs:\n  - csharp\n  name: IConvertible.ToDateTime(IFormatProvider)\n  nameWithType: Boolean.IConvertible.ToDateTime(IFormatProvider)\n  fullName: Boolean.IConvertible.ToDateTime(IFormatProvider)\n  type: Method\n  assemblies:\n  - System.Runtime\n  - mscorlib\n  - netstandard\n  namespace: System\n  summary: This conversion is not supported. Attempting to use this method throws an <xref href=\"System.InvalidCastException\"></xref>.\n  syntax:\n    content: DateTime IConvertible.ToDateTime (IFormatProvider provider);\n    parameters:\n    - id: provider\n      type: System.IFormatProvider\n      description: This parameter is ignored.\n    return:\n      type: System.DateTime\n      description: This conversion is not supported. No value is returned.\n  overload: System.Boolean.System#IConvertible#ToDateTime*\n  exceptions:\n  - type: System.InvalidCastException\n    commentId: T:System.InvalidCastException\n    description: You attempt to convert a <xref href=\"System.Boolean\"></xref> value to a <xref href=\"System.DateTime\"></xref> value. This conversion is not supported.\n  version:\n  - netcore-1.0\n  - netcore-1.1\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - netstandard-1.3\n  - netstandard-1.4\n  - netstandard-1.5\n  - netstandard-1.6\n  - netstandard-2.0\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  monikers:\n  - netcore-1.0\n  - netcore-1.1\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - netstandard-1.3\n  - netstandard-1.4\n  - netstandard-1.5\n  - netstandard-1.6\n  - netstandard-2.0\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System/Boolean.xml\n  ms.technology:\n  - dotnet-standard\n  author: rpetrusha\n  ms.author: ronpet\n  manager: wpickett\n- uid: System.Boolean.System#IConvertible#ToDecimal(System.IFormatProvider)\n  commentId: M:System.Boolean.System#IConvertible#ToDecimal(System.IFormatProvider)\n  id: System#IConvertible#ToDecimal(System.IFormatProvider)\n  isEii: true\n  parent: System.Boolean\n  langs:\n  - csharp\n  name: IConvertible.ToDecimal(IFormatProvider)\n  nameWithType: Boolean.IConvertible.ToDecimal(IFormatProvider)\n  fullName: Boolean.IConvertible.ToDecimal(IFormatProvider)\n  type: Method\n  assemblies:\n  - System.Runtime\n  - mscorlib\n  - netstandard\n  namespace: System\n  summary: For a description of this member, see <xref href=\"System.IConvertible.ToDecimal(System.IFormatProvider)\"></xref>..\n  remarks: This member is an explicit interface member implementation. It can be used only when the <xref:System.Boolean> instance is cast to an <xref:System.IConvertible> interface. The recommended alternative is to call the <xref:System.Convert.ToDecimal%2A?displayProperty=fullName> method.\n  syntax:\n    content: decimal IConvertible.ToDecimal (IFormatProvider provider);\n    parameters:\n    - id: provider\n      type: System.IFormatProvider\n      description: This parameter is ignored.\n    return:\n      type: System.Decimal\n      description: 1 if this instance is `true`; otherwise, 0.\n  overload: System.Boolean.System#IConvertible#ToDecimal*\n  exceptions: []\n  version:\n  - netcore-1.0\n  - netcore-1.1\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - netstandard-1.3\n  - netstandard-1.4\n  - netstandard-1.5\n  - netstandard-1.6\n  - netstandard-2.0\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  monikers:\n  - netcore-1.0\n  - netcore-1.1\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - netstandard-1.3\n  - netstandard-1.4\n  - netstandard-1.5\n  - netstandard-1.6\n  - netstandard-2.0\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System/Boolean.xml\n  ms.technology:\n  - dotnet-standard\n  author: rpetrusha\n  ms.author: ronpet\n  manager: wpickett\n- uid: System.Boolean.System#IConvertible#ToDouble(System.IFormatProvider)\n  commentId: M:System.Boolean.System#IConvertible#ToDouble(System.IFormatProvider)\n  id: System#IConvertible#ToDouble(System.IFormatProvider)\n  isEii: true\n  parent: System.Boolean\n  langs:\n  - csharp\n  name: IConvertible.ToDouble(IFormatProvider)\n  nameWithType: Boolean.IConvertible.ToDouble(IFormatProvider)\n  fullName: Boolean.IConvertible.ToDouble(IFormatProvider)\n  type: Method\n  assemblies:\n  - System.Runtime\n  - mscorlib\n  - netstandard\n  namespace: System\n  summary: For a description of this member, see <xref href=\"System.IConvertible.ToDouble(System.IFormatProvider)\"></xref>..\n  remarks: This member is an explicit interface member implementation. It can be used only when the <xref:System.Boolean> instance is cast to an <xref:System.IConvertible> interface. The recommended alternative is to call the <xref:System.Convert.ToDouble%2A?displayProperty=fullName> method.\n  syntax:\n    content: double IConvertible.ToDouble (IFormatProvider provider);\n    parameters:\n    - id: provider\n      type: System.IFormatProvider\n      description: This parameter is ignored.\n    return:\n      type: System.Double\n      description: 1 if this instance is `true`; otherwise, 0.\n  overload: System.Boolean.System#IConvertible#ToDouble*\n  exceptions: []\n  version:\n  - netcore-1.0\n  - netcore-1.1\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - netstandard-1.3\n  - netstandard-1.4\n  - netstandard-1.5\n  - netstandard-1.6\n  - netstandard-2.0\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  monikers:\n  - netcore-1.0\n  - netcore-1.1\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - netstandard-1.3\n  - netstandard-1.4\n  - netstandard-1.5\n  - netstandard-1.6\n  - netstandard-2.0\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System/Boolean.xml\n  ms.technology:\n  - dotnet-standard\n  author: rpetrusha\n  ms.author: ronpet\n  manager: wpickett\n- uid: System.Boolean.System#IConvertible#ToInt16(System.IFormatProvider)\n  commentId: M:System.Boolean.System#IConvertible#ToInt16(System.IFormatProvider)\n  id: System#IConvertible#ToInt16(System.IFormatProvider)\n  isEii: true\n  parent: System.Boolean\n  langs:\n  - csharp\n  name: IConvertible.ToInt16(IFormatProvider)\n  nameWithType: Boolean.IConvertible.ToInt16(IFormatProvider)\n  fullName: Boolean.IConvertible.ToInt16(IFormatProvider)\n  type: Method\n  assemblies:\n  - System.Runtime\n  - mscorlib\n  - netstandard\n  namespace: System\n  summary: For a description of this member, see <xref href=\"System.IConvertible.ToInt16(System.IFormatProvider)\"></xref>.\n  remarks: This member is an explicit interface member implementation. It can be used only when the <xref:System.Boolean> instance is cast to an <xref:System.IConvertible> interface. The recommended alternative is to call the <xref:System.Convert.ToInt16%2A?displayProperty=fullName> method.\n  syntax:\n    content: short IConvertible.ToInt16 (IFormatProvider provider);\n    parameters:\n    - id: provider\n      type: System.IFormatProvider\n      description: This parameter is ignored.\n    return:\n      type: System.Int16\n      description: 1 if this instance is `true`; otherwise, 0.\n  overload: System.Boolean.System#IConvertible#ToInt16*\n  exceptions: []\n  version:\n  - netcore-1.0\n  - netcore-1.1\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - netstandard-1.3\n  - netstandard-1.4\n  - netstandard-1.5\n  - netstandard-1.6\n  - netstandard-2.0\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  monikers:\n  - netcore-1.0\n  - netcore-1.1\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - netstandard-1.3\n  - netstandard-1.4\n  - netstandard-1.5\n  - netstandard-1.6\n  - netstandard-2.0\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System/Boolean.xml\n  ms.technology:\n  - dotnet-standard\n  author: rpetrusha\n  ms.author: ronpet\n  manager: wpickett\n- uid: System.Boolean.System#IConvertible#ToInt32(System.IFormatProvider)\n  commentId: M:System.Boolean.System#IConvertible#ToInt32(System.IFormatProvider)\n  id: System#IConvertible#ToInt32(System.IFormatProvider)\n  isEii: true\n  parent: System.Boolean\n  langs:\n  - csharp\n  name: IConvertible.ToInt32(IFormatProvider)\n  nameWithType: Boolean.IConvertible.ToInt32(IFormatProvider)\n  fullName: Boolean.IConvertible.ToInt32(IFormatProvider)\n  type: Method\n  assemblies:\n  - System.Runtime\n  - mscorlib\n  - netstandard\n  namespace: System\n  summary: For a description of this member, see <xref href=\"System.IConvertible.ToInt32(System.IFormatProvider)\"></xref>.\n  remarks: This member is an explicit interface member implementation. It can be used only when the <xref:System.Boolean> instance is cast to an <xref:System.IConvertible> interface. The recommended alternative is to call the <xref:System.Convert.ToInt32%2A?displayProperty=fullName> method.\n  syntax:\n    content: int IConvertible.ToInt32 (IFormatProvider provider);\n    parameters:\n    - id: provider\n      type: System.IFormatProvider\n      description: This parameter is ignored.\n    return:\n      type: System.Int32\n      description: 1 if this instance is `true`; otherwise, 0.\n  overload: System.Boolean.System#IConvertible#ToInt32*\n  exceptions: []\n  version:\n  - netcore-1.0\n  - netcore-1.1\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - netstandard-1.3\n  - netstandard-1.4\n  - netstandard-1.5\n  - netstandard-1.6\n  - netstandard-2.0\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  monikers:\n  - netcore-1.0\n  - netcore-1.1\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - netstandard-1.3\n  - netstandard-1.4\n  - netstandard-1.5\n  - netstandard-1.6\n  - netstandard-2.0\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System/Boolean.xml\n  ms.technology:\n  - dotnet-standard\n  author: rpetrusha\n  ms.author: ronpet\n  manager: wpickett\n- uid: System.Boolean.System#IConvertible#ToInt64(System.IFormatProvider)\n  commentId: M:System.Boolean.System#IConvertible#ToInt64(System.IFormatProvider)\n  id: System#IConvertible#ToInt64(System.IFormatProvider)\n  isEii: true\n  parent: System.Boolean\n  langs:\n  - csharp\n  name: IConvertible.ToInt64(IFormatProvider)\n  nameWithType: Boolean.IConvertible.ToInt64(IFormatProvider)\n  fullName: Boolean.IConvertible.ToInt64(IFormatProvider)\n  type: Method\n  assemblies:\n  - System.Runtime\n  - mscorlib\n  - netstandard\n  namespace: System\n  summary: For a description of this member, see <xref href=\"System.IConvertible.ToInt64(System.IFormatProvider)\"></xref>.\n  remarks: This member is an explicit interface member implementation. It can be used only when the <xref:System.Boolean> instance is cast to an <xref:System.IConvertible> interface. The recommended alternative is to call the <xref:System.Convert.ToInt64%28System.Boolean%29?displayProperty=fullName> method.\n  syntax:\n    content: long IConvertible.ToInt64 (IFormatProvider provider);\n    parameters:\n    - id: provider\n      type: System.IFormatProvider\n      description: This parameter is ignored.\n    return:\n      type: System.Int64\n      description: 1 if this instance is `true`; otherwise, 0.\n  overload: System.Boolean.System#IConvertible#ToInt64*\n  exceptions: []\n  version:\n  - netcore-1.0\n  - netcore-1.1\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - netstandard-1.3\n  - netstandard-1.4\n  - netstandard-1.5\n  - netstandard-1.6\n  - netstandard-2.0\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  monikers:\n  - netcore-1.0\n  - netcore-1.1\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - netstandard-1.3\n  - netstandard-1.4\n  - netstandard-1.5\n  - netstandard-1.6\n  - netstandard-2.0\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System/Boolean.xml\n  ms.technology:\n  - dotnet-standard\n  author: rpetrusha\n  ms.author: ronpet\n  manager: wpickett\n- uid: System.Boolean.System#IConvertible#ToSByte(System.IFormatProvider)\n  commentId: M:System.Boolean.System#IConvertible#ToSByte(System.IFormatProvider)\n  id: System#IConvertible#ToSByte(System.IFormatProvider)\n  isEii: true\n  parent: System.Boolean\n  langs:\n  - csharp\n  name: IConvertible.ToSByte(IFormatProvider)\n  nameWithType: Boolean.IConvertible.ToSByte(IFormatProvider)\n  fullName: Boolean.IConvertible.ToSByte(IFormatProvider)\n  type: Method\n  assemblies:\n  - System.Runtime\n  - mscorlib\n  - netstandard\n  namespace: System\n  summary: For a description of this member, see <xref href=\"System.IConvertible.ToSByte(System.IFormatProvider)\"></xref>.\n  remarks: This member is an explicit interface member implementation. It can be used only when the <xref:System.Boolean> instance is cast to an <xref:System.IConvertible> interface. The recommended alternative is to call the <xref:System.Convert.ToSByte%28System.Boolean%29?displayProperty=fullName> method.\n  syntax:\n    content: sbyte IConvertible.ToSByte (IFormatProvider provider);\n    parameters:\n    - id: provider\n      type: System.IFormatProvider\n      description: This parameter is ignored.\n    return:\n      type: System.SByte\n      description: 1 if this instance is `true`; otherwise, 0.\n  overload: System.Boolean.System#IConvertible#ToSByte*\n  exceptions: []\n  version:\n  - netcore-1.0\n  - netcore-1.1\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - netstandard-1.3\n  - netstandard-1.4\n  - netstandard-1.5\n  - netstandard-1.6\n  - netstandard-2.0\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  monikers:\n  - netcore-1.0\n  - netcore-1.1\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - netstandard-1.3\n  - netstandard-1.4\n  - netstandard-1.5\n  - netstandard-1.6\n  - netstandard-2.0\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System/Boolean.xml\n  ms.technology:\n  - dotnet-standard\n  author: rpetrusha\n  ms.author: ronpet\n  manager: wpickett\n- uid: System.Boolean.System#IConvertible#ToSingle(System.IFormatProvider)\n  commentId: M:System.Boolean.System#IConvertible#ToSingle(System.IFormatProvider)\n  id: System#IConvertible#ToSingle(System.IFormatProvider)\n  isEii: true\n  parent: System.Boolean\n  langs:\n  - csharp\n  name: IConvertible.ToSingle(IFormatProvider)\n  nameWithType: Boolean.IConvertible.ToSingle(IFormatProvider)\n  fullName: Boolean.IConvertible.ToSingle(IFormatProvider)\n  type: Method\n  assemblies:\n  - System.Runtime\n  - mscorlib\n  - netstandard\n  namespace: System\n  summary: For a description of this member, see <xref href=\"System.IConvertible.ToSingle(System.IFormatProvider)\"></xref>..\n  remarks: This member is an explicit interface member implementation. It can be used only when the <xref:System.Boolean> instance is cast to an <xref:System.IConvertible> interface. The recommended alternative is to call the <xref:System.Convert.ToSingle%28System.Boolean%29?displayProperty=fullName> method.\n  syntax:\n    content: float IConvertible.ToSingle (IFormatProvider provider);\n    parameters:\n    - id: provider\n      type: System.IFormatProvider\n      description: This parameter is ignored.\n    return:\n      type: System.Single\n      description: 1 if this instance is `true`; otherwise, 0.\n  overload: System.Boolean.System#IConvertible#ToSingle*\n  exceptions: []\n  version:\n  - netcore-1.0\n  - netcore-1.1\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - netstandard-1.3\n  - netstandard-1.4\n  - netstandard-1.5\n  - netstandard-1.6\n  - netstandard-2.0\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  monikers:\n  - netcore-1.0\n  - netcore-1.1\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - netstandard-1.3\n  - netstandard-1.4\n  - netstandard-1.5\n  - netstandard-1.6\n  - netstandard-2.0\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System/Boolean.xml\n  ms.technology:\n  - dotnet-standard\n  author: rpetrusha\n  ms.author: ronpet\n  manager: wpickett\n- uid: System.Boolean.System#IConvertible#ToString(System.IFormatProvider)\n  commentId: M:System.Boolean.System#IConvertible#ToString(System.IFormatProvider)\n  id: System#IConvertible#ToString(System.IFormatProvider)\n  isEii: true\n  parent: System.Boolean\n  langs:\n  - csharp\n  name: IConvertible.ToString(IFormatProvider)\n  nameWithType: Boolean.IConvertible.ToString(IFormatProvider)\n  fullName: Boolean.IConvertible.ToString(IFormatProvider)\n  type: Method\n  assemblies:\n  - System.Runtime\n  namespace: System\n  syntax:\n    content: string IConvertible.ToString (IFormatProvider provider);\n    parameters:\n    - id: provider\n      type: System.IFormatProvider\n      description: ''\n    return:\n      type: System.String\n      description: ''\n  overload: System.Boolean.System#IConvertible#ToString*\n  exceptions: []\n  version:\n  - netcore-1.0\n  - netcore-1.1\n  - netstandard-1.3\n  - netstandard-1.4\n  - netstandard-1.5\n  - netstandard-1.6\n  monikers:\n  - netcore-1.0\n  - netcore-1.1\n  - netstandard-1.3\n  - netstandard-1.4\n  - netstandard-1.5\n  - netstandard-1.6\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System/Boolean.xml\n- uid: System.Boolean.System#IConvertible#ToType(System.Type,System.IFormatProvider)\n  commentId: M:System.Boolean.System#IConvertible#ToType(System.Type,System.IFormatProvider)\n  id: System#IConvertible#ToType(System.Type,System.IFormatProvider)\n  isEii: true\n  parent: System.Boolean\n  langs:\n  - csharp\n  name: IConvertible.ToType(Type, IFormatProvider)\n  nameWithType: Boolean.IConvertible.ToType(Type, IFormatProvider)\n  fullName: Boolean.IConvertible.ToType(Type, IFormatProvider)\n  type: Method\n  assemblies:\n  - System.Runtime\n  - mscorlib\n  - netstandard\n  namespace: System\n  summary: For a description of this member, see <xref href=\"System.IConvertible.ToType(System.Type,System.IFormatProvider)\"></xref>.\n  remarks: This member is an explicit interface member implementation. It can be used only when the <xref:System.Boolean> instance is cast to an <xref:System.IConvertible> interface. The recommended alternative is to call the <xref:System.Convert.ChangeType%2A?displayProperty=fullName> method.\n  syntax:\n    content: object IConvertible.ToType (Type type, IFormatProvider provider);\n    parameters:\n    - id: type\n      type: System.Type\n      description: The desired type.\n    - id: provider\n      type: System.IFormatProvider\n      description: An <xref href=\"System.IFormatProvider\"></xref> implementation that supplies culture-specific information about the format of the returned value.\n    return:\n      type: System.Object\n      description: An object of the specified type, with a value that is equivalent to the value of this `Boolean` object.\n  overload: System.Boolean.System#IConvertible#ToType*\n  exceptions:\n  - type: System.ArgumentNullException\n    commentId: T:System.ArgumentNullException\n    description: <code>type</code> is `null`.\n  - type: System.InvalidCastException\n    commentId: T:System.InvalidCastException\n    description: The requested type conversion is not supported.\n  version:\n  - netcore-1.0\n  - netcore-1.1\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - netstandard-1.3\n  - netstandard-1.4\n  - netstandard-1.5\n  - netstandard-1.6\n  - netstandard-2.0\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  monikers:\n  - netcore-1.0\n  - netcore-1.1\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - netstandard-1.3\n  - netstandard-1.4\n  - netstandard-1.5\n  - netstandard-1.6\n  - netstandard-2.0\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System/Boolean.xml\n  ms.technology:\n  - dotnet-standard\n  author: rpetrusha\n  ms.author: ronpet\n  manager: wpickett\n- uid: System.Boolean.System#IConvertible#ToUInt16(System.IFormatProvider)\n  commentId: M:System.Boolean.System#IConvertible#ToUInt16(System.IFormatProvider)\n  id: System#IConvertible#ToUInt16(System.IFormatProvider)\n  isEii: true\n  parent: System.Boolean\n  langs:\n  - csharp\n  name: IConvertible.ToUInt16(IFormatProvider)\n  nameWithType: Boolean.IConvertible.ToUInt16(IFormatProvider)\n  fullName: Boolean.IConvertible.ToUInt16(IFormatProvider)\n  type: Method\n  assemblies:\n  - System.Runtime\n  - mscorlib\n  - netstandard\n  namespace: System\n  summary: For a description of this member, see <xref href=\"System.IConvertible.ToUInt16(System.IFormatProvider)\"></xref>.\n  remarks: This member is an explicit interface member implementation. It can be used only when the <xref:System.Boolean> instance is cast to an <xref:System.IConvertible> interface. The recommended alternative is to call the <xref:System.Convert.ToUInt16%28System.Boolean%29?displayProperty=fullName> method.\n  syntax:\n    content: ushort IConvertible.ToUInt16 (IFormatProvider provider);\n    parameters:\n    - id: provider\n      type: System.IFormatProvider\n      description: This parameter is ignored.\n    return:\n      type: System.UInt16\n      description: 1 if this instance is `true`; otherwise, 0.\n  overload: System.Boolean.System#IConvertible#ToUInt16*\n  exceptions: []\n  version:\n  - netcore-1.0\n  - netcore-1.1\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - netstandard-1.3\n  - netstandard-1.4\n  - netstandard-1.5\n  - netstandard-1.6\n  - netstandard-2.0\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  monikers:\n  - netcore-1.0\n  - netcore-1.1\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - netstandard-1.3\n  - netstandard-1.4\n  - netstandard-1.5\n  - netstandard-1.6\n  - netstandard-2.0\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System/Boolean.xml\n  ms.technology:\n  - dotnet-standard\n  author: rpetrusha\n  ms.author: ronpet\n  manager: wpickett\n- uid: System.Boolean.System#IConvertible#ToUInt32(System.IFormatProvider)\n  commentId: M:System.Boolean.System#IConvertible#ToUInt32(System.IFormatProvider)\n  id: System#IConvertible#ToUInt32(System.IFormatProvider)\n  isEii: true\n  parent: System.Boolean\n  langs:\n  - csharp\n  name: IConvertible.ToUInt32(IFormatProvider)\n  nameWithType: Boolean.IConvertible.ToUInt32(IFormatProvider)\n  fullName: Boolean.IConvertible.ToUInt32(IFormatProvider)\n  type: Method\n  assemblies:\n  - System.Runtime\n  - mscorlib\n  - netstandard\n  namespace: System\n  summary: For a description of this member, see <xref href=\"System.IConvertible.ToUInt32(System.IFormatProvider)\"></xref>.\n  remarks: This member is an explicit interface member implementation. It can be used only when the <xref:System.Boolean> instance is cast to an <xref:System.IConvertible> interface. The recommended alternative is to call the <xref:System.Convert.ToUInt32%28System.Boolean%29?displayProperty=fullName> method.\n  syntax:\n    content: uint IConvertible.ToUInt32 (IFormatProvider provider);\n    parameters:\n    - id: provider\n      type: System.IFormatProvider\n      description: This parameter is ignored.\n    return:\n      type: System.UInt32\n      description: 1 if this instance is `true`; otherwise, 0.\n  overload: System.Boolean.System#IConvertible#ToUInt32*\n  exceptions: []\n  version:\n  - netcore-1.0\n  - netcore-1.1\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - netstandard-1.3\n  - netstandard-1.4\n  - netstandard-1.5\n  - netstandard-1.6\n  - netstandard-2.0\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  monikers:\n  - netcore-1.0\n  - netcore-1.1\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - netstandard-1.3\n  - netstandard-1.4\n  - netstandard-1.5\n  - netstandard-1.6\n  - netstandard-2.0\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System/Boolean.xml\n  ms.technology:\n  - dotnet-standard\n  author: rpetrusha\n  ms.author: ronpet\n  manager: wpickett\n- uid: System.Boolean.System#IConvertible#ToUInt64(System.IFormatProvider)\n  commentId: M:System.Boolean.System#IConvertible#ToUInt64(System.IFormatProvider)\n  id: System#IConvertible#ToUInt64(System.IFormatProvider)\n  isEii: true\n  parent: System.Boolean\n  langs:\n  - csharp\n  name: IConvertible.ToUInt64(IFormatProvider)\n  nameWithType: Boolean.IConvertible.ToUInt64(IFormatProvider)\n  fullName: Boolean.IConvertible.ToUInt64(IFormatProvider)\n  type: Method\n  assemblies:\n  - System.Runtime\n  - mscorlib\n  - netstandard\n  namespace: System\n  summary: For a description of this member, see <xref href=\"System.IConvertible.ToUInt64(System.IFormatProvider)\"></xref>.\n  remarks: This member is an explicit interface member implementation. It can be used only when the <xref:System.Boolean> instance is cast to an <xref:System.IConvertible> interface. The recommended alternative is to call the <xref:System.Convert.ToUInt64%28System.Boolean%29?displayProperty=fullName> method.\n  syntax:\n    content: ulong IConvertible.ToUInt64 (IFormatProvider provider);\n    parameters:\n    - id: provider\n      type: System.IFormatProvider\n      description: This parameter is ignored.\n    return:\n      type: System.UInt64\n      description: 1 if this instance is `true`; otherwise, 0.\n  overload: System.Boolean.System#IConvertible#ToUInt64*\n  exceptions: []\n  version:\n  - netcore-1.0\n  - netcore-1.1\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - netstandard-1.3\n  - netstandard-1.4\n  - netstandard-1.5\n  - netstandard-1.6\n  - netstandard-2.0\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  monikers:\n  - netcore-1.0\n  - netcore-1.1\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - netstandard-1.3\n  - netstandard-1.4\n  - netstandard-1.5\n  - netstandard-1.6\n  - netstandard-2.0\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System/Boolean.xml\n  ms.technology:\n  - dotnet-standard\n  author: rpetrusha\n  ms.author: ronpet\n  manager: wpickett\nreferences:\n- uid: System.ValueType\n  parent: System\n  isExternal: false\n  name: ValueType\n  nameWithType: ValueType\n  fullName: System.ValueType\n- uid: System.ArgumentException\n  parent: System\n  isExternal: false\n  name: ArgumentException\n  nameWithType: ArgumentException\n  fullName: System.ArgumentException\n- uid: System.ArgumentNullException\n  parent: System\n  isExternal: false\n  name: ArgumentNullException\n  nameWithType: ArgumentNullException\n  fullName: System.ArgumentNullException\n- uid: System.FormatException\n  parent: System\n  isExternal: false\n  name: FormatException\n  nameWithType: FormatException\n  fullName: System.FormatException\n- uid: System.InvalidCastException\n  parent: System\n  isExternal: false\n  name: InvalidCastException\n  nameWithType: InvalidCastException\n  fullName: System.InvalidCastException\n- uid: System.Boolean.CompareTo(System.Boolean)\n  parent: System.Boolean\n  isExternal: false\n  name: CompareTo(Boolean)\n  nameWithType: Boolean.CompareTo(Boolean)\n  fullName: Boolean.CompareTo(Boolean)\n- uid: System.Int32\n  parent: System\n  isExternal: false\n  name: Int32\n  nameWithType: Int32\n  fullName: System.Int32\n- uid: System.Boolean\n  parent: System\n  isExternal: false\n  name: Boolean\n  nameWithType: Boolean\n  fullName: System.Boolean\n- uid: System.Boolean.CompareTo(System.Object)\n  parent: System.Boolean\n  isExternal: false\n  name: CompareTo(Object)\n  nameWithType: Boolean.CompareTo(Object)\n  fullName: Boolean.CompareTo(Object)\n- uid: System.Object\n  parent: System\n  isExternal: false\n  name: Object\n  nameWithType: Object\n  fullName: System.Object\n- uid: System.Boolean.Equals(System.Boolean)\n  parent: System.Boolean\n  isExternal: false\n  name: Equals(Boolean)\n  nameWithType: Boolean.Equals(Boolean)\n  fullName: Boolean.Equals(Boolean)\n- uid: System.Boolean.Equals(System.Object)\n  parent: System.Boolean\n  isExternal: false\n  name: Equals(Object)\n  nameWithType: Boolean.Equals(Object)\n  fullName: Boolean.Equals(Object)\n- uid: System.Boolean.FalseString\n  parent: System.Boolean\n  isExternal: false\n  name: FalseString\n  nameWithType: Boolean.FalseString\n  fullName: Boolean.FalseString\n- uid: System.String\n  parent: System\n  isExternal: false\n  name: String\n  nameWithType: String\n  fullName: System.String\n- uid: System.Boolean.GetHashCode\n  parent: System.Boolean\n  isExternal: false\n  name: GetHashCode()\n  nameWithType: Boolean.GetHashCode()\n  fullName: Boolean.GetHashCode()\n- uid: System.Boolean.GetTypeCode\n  parent: System.Boolean\n  isExternal: false\n  name: GetTypeCode()\n  nameWithType: Boolean.GetTypeCode()\n  fullName: Boolean.GetTypeCode()\n- uid: System.TypeCode\n  parent: System\n  isExternal: false\n  name: TypeCode\n  nameWithType: TypeCode\n  fullName: System.TypeCode\n- uid: System.Boolean.Parse(System.String)\n  parent: System.Boolean\n  isExternal: false\n  name: Parse(String)\n  nameWithType: Boolean.Parse(String)\n  fullName: Boolean.Parse(String)\n- uid: System.Boolean.ToString(System.IFormatProvider)\n  parent: System.Boolean\n  isExternal: false\n  name: ToString(IFormatProvider)\n  nameWithType: Boolean.ToString(IFormatProvider)\n  fullName: Boolean.ToString(IFormatProvider)\n- uid: System.IFormatProvider\n  parent: System\n  isExternal: false\n  name: IFormatProvider\n  nameWithType: IFormatProvider\n  fullName: System.IFormatProvider\n- uid: System.Boolean.ToString\n  parent: System.Boolean\n  isExternal: false\n  name: ToString()\n  nameWithType: Boolean.ToString()\n  fullName: Boolean.ToString()\n- uid: System.Boolean.TrueString\n  parent: System.Boolean\n  isExternal: false\n  name: TrueString\n  nameWithType: Boolean.TrueString\n  fullName: Boolean.TrueString\n- uid: System.Boolean.TryParse(System.String,System.Boolean@)\n  parent: System.Boolean\n  isExternal: false\n  name: TryParse(String, Boolean)\n  nameWithType: Boolean.TryParse(String, Boolean)\n  fullName: Boolean.TryParse(String, Boolean)\n- uid: System.Boolean.System#IComparable#CompareTo(System.Object)\n  parent: System.Boolean\n  isExternal: false\n  name: IComparable.CompareTo(Object)\n  nameWithType: Boolean.IComparable.CompareTo(Object)\n  fullName: Boolean.IComparable.CompareTo(Object)\n- uid: System.Boolean.System#IConvertible#GetTypeCode\n  parent: System.Boolean\n  isExternal: false\n  name: IConvertible.GetTypeCode()\n  nameWithType: Boolean.IConvertible.GetTypeCode()\n  fullName: Boolean.IConvertible.GetTypeCode()\n- uid: System.Boolean.System#IConvertible#ToBoolean(System.IFormatProvider)\n  parent: System.Boolean\n  isExternal: false\n  name: IConvertible.ToBoolean(IFormatProvider)\n  nameWithType: Boolean.IConvertible.ToBoolean(IFormatProvider)\n  fullName: Boolean.IConvertible.ToBoolean(IFormatProvider)\n- uid: System.Boolean.System#IConvertible#ToByte(System.IFormatProvider)\n  parent: System.Boolean\n  isExternal: false\n  name: IConvertible.ToByte(IFormatProvider)\n  nameWithType: Boolean.IConvertible.ToByte(IFormatProvider)\n  fullName: Boolean.IConvertible.ToByte(IFormatProvider)\n- uid: System.Byte\n  parent: System\n  isExternal: false\n  name: Byte\n  nameWithType: Byte\n  fullName: System.Byte\n- uid: System.Boolean.System#IConvertible#ToChar(System.IFormatProvider)\n  parent: System.Boolean\n  isExternal: false\n  name: IConvertible.ToChar(IFormatProvider)\n  nameWithType: Boolean.IConvertible.ToChar(IFormatProvider)\n  fullName: Boolean.IConvertible.ToChar(IFormatProvider)\n- uid: System.Char\n  parent: System\n  isExternal: false\n  name: Char\n  nameWithType: Char\n  fullName: System.Char\n- uid: System.Boolean.System#IConvertible#ToDateTime(System.IFormatProvider)\n  parent: System.Boolean\n  isExternal: false\n  name: IConvertible.ToDateTime(IFormatProvider)\n  nameWithType: Boolean.IConvertible.ToDateTime(IFormatProvider)\n  fullName: Boolean.IConvertible.ToDateTime(IFormatProvider)\n- uid: System.DateTime\n  parent: System\n  isExternal: false\n  name: DateTime\n  nameWithType: DateTime\n  fullName: System.DateTime\n- uid: System.Boolean.System#IConvertible#ToDecimal(System.IFormatProvider)\n  parent: System.Boolean\n  isExternal: false\n  name: IConvertible.ToDecimal(IFormatProvider)\n  nameWithType: Boolean.IConvertible.ToDecimal(IFormatProvider)\n  fullName: Boolean.IConvertible.ToDecimal(IFormatProvider)\n- uid: System.Decimal\n  parent: System\n  isExternal: false\n  name: Decimal\n  nameWithType: Decimal\n  fullName: System.Decimal\n- uid: System.Boolean.System#IConvertible#ToDouble(System.IFormatProvider)\n  parent: System.Boolean\n  isExternal: false\n  name: IConvertible.ToDouble(IFormatProvider)\n  nameWithType: Boolean.IConvertible.ToDouble(IFormatProvider)\n  fullName: Boolean.IConvertible.ToDouble(IFormatProvider)\n- uid: System.Double\n  parent: System\n  isExternal: false\n  name: Double\n  nameWithType: Double\n  fullName: System.Double\n- uid: System.Boolean.System#IConvertible#ToInt16(System.IFormatProvider)\n  parent: System.Boolean\n  isExternal: false\n  name: IConvertible.ToInt16(IFormatProvider)\n  nameWithType: Boolean.IConvertible.ToInt16(IFormatProvider)\n  fullName: Boolean.IConvertible.ToInt16(IFormatProvider)\n- uid: System.Int16\n  parent: System\n  isExternal: false\n  name: Int16\n  nameWithType: Int16\n  fullName: System.Int16\n- uid: System.Boolean.System#IConvertible#ToInt32(System.IFormatProvider)\n  parent: System.Boolean\n  isExternal: false\n  name: IConvertible.ToInt32(IFormatProvider)\n  nameWithType: Boolean.IConvertible.ToInt32(IFormatProvider)\n  fullName: Boolean.IConvertible.ToInt32(IFormatProvider)\n- uid: System.Boolean.System#IConvertible#ToInt64(System.IFormatProvider)\n  parent: System.Boolean\n  isExternal: false\n  name: IConvertible.ToInt64(IFormatProvider)\n  nameWithType: Boolean.IConvertible.ToInt64(IFormatProvider)\n  fullName: Boolean.IConvertible.ToInt64(IFormatProvider)\n- uid: System.Int64\n  parent: System\n  isExternal: false\n  name: Int64\n  nameWithType: Int64\n  fullName: System.Int64\n- uid: System.Boolean.System#IConvertible#ToSByte(System.IFormatProvider)\n  parent: System.Boolean\n  isExternal: false\n  name: IConvertible.ToSByte(IFormatProvider)\n  nameWithType: Boolean.IConvertible.ToSByte(IFormatProvider)\n  fullName: Boolean.IConvertible.ToSByte(IFormatProvider)\n- uid: System.SByte\n  parent: System\n  isExternal: false\n  name: SByte\n  nameWithType: SByte\n  fullName: System.SByte\n- uid: System.Boolean.System#IConvertible#ToSingle(System.IFormatProvider)\n  parent: System.Boolean\n  isExternal: false\n  name: IConvertible.ToSingle(IFormatProvider)\n  nameWithType: Boolean.IConvertible.ToSingle(IFormatProvider)\n  fullName: Boolean.IConvertible.ToSingle(IFormatProvider)\n- uid: System.Single\n  parent: System\n  isExternal: false\n  name: Single\n  nameWithType: Single\n  fullName: System.Single\n- uid: System.Boolean.System#IConvertible#ToString(System.IFormatProvider)\n  parent: System.Boolean\n  isExternal: false\n  name: IConvertible.ToString(IFormatProvider)\n  nameWithType: Boolean.IConvertible.ToString(IFormatProvider)\n  fullName: Boolean.IConvertible.ToString(IFormatProvider)\n- uid: System.Boolean.System#IConvertible#ToType(System.Type,System.IFormatProvider)\n  parent: System.Boolean\n  isExternal: false\n  name: IConvertible.ToType(Type, IFormatProvider)\n  nameWithType: Boolean.IConvertible.ToType(Type, IFormatProvider)\n  fullName: Boolean.IConvertible.ToType(Type, IFormatProvider)\n- uid: System.Type\n  parent: System\n  isExternal: false\n  name: Type\n  nameWithType: Type\n  fullName: System.Type\n- uid: System.Boolean.System#IConvertible#ToUInt16(System.IFormatProvider)\n  parent: System.Boolean\n  isExternal: false\n  name: IConvertible.ToUInt16(IFormatProvider)\n  nameWithType: Boolean.IConvertible.ToUInt16(IFormatProvider)\n  fullName: Boolean.IConvertible.ToUInt16(IFormatProvider)\n- uid: System.UInt16\n  parent: System\n  isExternal: false\n  name: UInt16\n  nameWithType: UInt16\n  fullName: System.UInt16\n- uid: System.Boolean.System#IConvertible#ToUInt32(System.IFormatProvider)\n  parent: System.Boolean\n  isExternal: false\n  name: IConvertible.ToUInt32(IFormatProvider)\n  nameWithType: Boolean.IConvertible.ToUInt32(IFormatProvider)\n  fullName: Boolean.IConvertible.ToUInt32(IFormatProvider)\n- uid: System.UInt32\n  parent: System\n  isExternal: false\n  name: UInt32\n  nameWithType: UInt32\n  fullName: System.UInt32\n- uid: System.Boolean.System#IConvertible#ToUInt64(System.IFormatProvider)\n  parent: System.Boolean\n  isExternal: false\n  name: IConvertible.ToUInt64(IFormatProvider)\n  nameWithType: Boolean.IConvertible.ToUInt64(IFormatProvider)\n  fullName: Boolean.IConvertible.ToUInt64(IFormatProvider)\n- uid: System.UInt64\n  parent: System\n  isExternal: false\n  name: UInt64\n  nameWithType: UInt64\n  fullName: System.UInt64\n- uid: System.Boolean.CompareTo*\n  parent: System.Boolean\n  isExternal: false\n  name: CompareTo\n  nameWithType: Boolean.CompareTo\n  fullName: Boolean.CompareTo\n  monikers:\n  - netcore-1.0\n  - netcore-1.1\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - netstandard-1.0\n  - netstandard-1.1\n  - netstandard-1.2\n  - netstandard-1.3\n  - netstandard-1.4\n  - netstandard-1.5\n  - netstandard-1.6\n  - netstandard-2.0\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System/Boolean.xml\n- uid: System.Boolean.Equals*\n  parent: System.Boolean\n  isExternal: false\n  name: Equals\n  nameWithType: Boolean.Equals\n  fullName: Boolean.Equals\n  monikers:\n  - netcore-1.0\n  - netcore-1.1\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - netstandard-1.0\n  - netstandard-1.1\n  - netstandard-1.2\n  - netstandard-1.3\n  - netstandard-1.4\n  - netstandard-1.5\n  - netstandard-1.6\n  - netstandard-2.0\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System/Boolean.xml\n- uid: System.Boolean.GetHashCode*\n  parent: System.Boolean\n  isExternal: false\n  name: GetHashCode\n  nameWithType: Boolean.GetHashCode\n  fullName: Boolean.GetHashCode\n  monikers:\n  - netcore-1.0\n  - netcore-1.1\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - netstandard-1.0\n  - netstandard-1.1\n  - netstandard-1.2\n  - netstandard-1.3\n  - netstandard-1.4\n  - netstandard-1.5\n  - netstandard-1.6\n  - netstandard-2.0\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System/Boolean.xml\n- uid: System.Boolean.GetTypeCode*\n  parent: System.Boolean\n  isExternal: false\n  name: GetTypeCode\n  nameWithType: Boolean.GetTypeCode\n  fullName: Boolean.GetTypeCode\n  monikers:\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - netstandard-2.0\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System/Boolean.xml\n- uid: System.Boolean.Parse*\n  parent: System.Boolean\n  isExternal: false\n  name: Parse\n  nameWithType: Boolean.Parse\n  fullName: Boolean.Parse\n  monikers:\n  - netcore-1.0\n  - netcore-1.1\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - netstandard-1.0\n  - netstandard-1.1\n  - netstandard-1.2\n  - netstandard-1.3\n  - netstandard-1.4\n  - netstandard-1.5\n  - netstandard-1.6\n  - netstandard-2.0\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System/Boolean.xml\n- uid: System.Boolean.ToString*\n  parent: System.Boolean\n  isExternal: false\n  name: ToString\n  nameWithType: Boolean.ToString\n  fullName: Boolean.ToString\n  monikers:\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - netstandard-2.0\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  - netcore-1.0\n  - netcore-1.1\n  - netstandard-1.0\n  - netstandard-1.1\n  - netstandard-1.2\n  - netstandard-1.3\n  - netstandard-1.4\n  - netstandard-1.5\n  - netstandard-1.6\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System/Boolean.xml\n- uid: System.Boolean.TryParse*\n  parent: System.Boolean\n  isExternal: false\n  name: TryParse\n  nameWithType: Boolean.TryParse\n  fullName: Boolean.TryParse\n  monikers:\n  - netcore-1.0\n  - netcore-1.1\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - netstandard-1.0\n  - netstandard-1.1\n  - netstandard-1.2\n  - netstandard-1.3\n  - netstandard-1.4\n  - netstandard-1.5\n  - netstandard-1.6\n  - netstandard-2.0\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System/Boolean.xml\n- uid: System.Boolean.System#IComparable#CompareTo*\n  parent: System.Boolean\n  isExternal: false\n  name: System.IComparable.CompareTo\n  nameWithType: Boolean.System.IComparable.CompareTo\n  fullName: Boolean.System.IComparable.CompareTo\n  monikers:\n  - netcore-1.0\n  - netcore-1.1\n  - netstandard-1.0\n  - netstandard-1.1\n  - netstandard-1.2\n  - netstandard-1.3\n  - netstandard-1.4\n  - netstandard-1.5\n  - netstandard-1.6\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System/Boolean.xml\n- uid: System.Boolean.System#IConvertible#GetTypeCode*\n  parent: System.Boolean\n  isExternal: false\n  name: System.IConvertible.GetTypeCode\n  nameWithType: Boolean.System.IConvertible.GetTypeCode\n  fullName: Boolean.System.IConvertible.GetTypeCode\n  monikers:\n  - netcore-1.0\n  - netcore-1.1\n  - netstandard-1.3\n  - netstandard-1.4\n  - netstandard-1.5\n  - netstandard-1.6\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System/Boolean.xml\n- uid: System.Boolean.System#IConvertible#ToBoolean*\n  parent: System.Boolean\n  isExternal: false\n  name: System.IConvertible.ToBoolean\n  nameWithType: Boolean.System.IConvertible.ToBoolean\n  fullName: Boolean.System.IConvertible.ToBoolean\n  monikers:\n  - netcore-1.0\n  - netcore-1.1\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - netstandard-1.3\n  - netstandard-1.4\n  - netstandard-1.5\n  - netstandard-1.6\n  - netstandard-2.0\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System/Boolean.xml\n- uid: System.Boolean.System#IConvertible#ToByte*\n  parent: System.Boolean\n  isExternal: false\n  name: System.IConvertible.ToByte\n  nameWithType: Boolean.System.IConvertible.ToByte\n  fullName: Boolean.System.IConvertible.ToByte\n  monikers:\n  - netcore-1.0\n  - netcore-1.1\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - netstandard-1.3\n  - netstandard-1.4\n  - netstandard-1.5\n  - netstandard-1.6\n  - netstandard-2.0\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System/Boolean.xml\n- uid: System.Boolean.System#IConvertible#ToChar*\n  parent: System.Boolean\n  isExternal: false\n  name: System.IConvertible.ToChar\n  nameWithType: Boolean.System.IConvertible.ToChar\n  fullName: Boolean.System.IConvertible.ToChar\n  monikers:\n  - netcore-1.0\n  - netcore-1.1\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - netstandard-1.3\n  - netstandard-1.4\n  - netstandard-1.5\n  - netstandard-1.6\n  - netstandard-2.0\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System/Boolean.xml\n- uid: System.Boolean.System#IConvertible#ToDateTime*\n  parent: System.Boolean\n  isExternal: false\n  name: System.IConvertible.ToDateTime\n  nameWithType: Boolean.System.IConvertible.ToDateTime\n  fullName: Boolean.System.IConvertible.ToDateTime\n  monikers:\n  - netcore-1.0\n  - netcore-1.1\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - netstandard-1.3\n  - netstandard-1.4\n  - netstandard-1.5\n  - netstandard-1.6\n  - netstandard-2.0\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System/Boolean.xml\n- uid: System.Boolean.System#IConvertible#ToDecimal*\n  parent: System.Boolean\n  isExternal: false\n  name: System.IConvertible.ToDecimal\n  nameWithType: Boolean.System.IConvertible.ToDecimal\n  fullName: Boolean.System.IConvertible.ToDecimal\n  monikers:\n  - netcore-1.0\n  - netcore-1.1\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - netstandard-1.3\n  - netstandard-1.4\n  - netstandard-1.5\n  - netstandard-1.6\n  - netstandard-2.0\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System/Boolean.xml\n- uid: System.Boolean.System#IConvertible#ToDouble*\n  parent: System.Boolean\n  isExternal: false\n  name: System.IConvertible.ToDouble\n  nameWithType: Boolean.System.IConvertible.ToDouble\n  fullName: Boolean.System.IConvertible.ToDouble\n  monikers:\n  - netcore-1.0\n  - netcore-1.1\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - netstandard-1.3\n  - netstandard-1.4\n  - netstandard-1.5\n  - netstandard-1.6\n  - netstandard-2.0\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System/Boolean.xml\n- uid: System.Boolean.System#IConvertible#ToInt16*\n  parent: System.Boolean\n  isExternal: false\n  name: System.IConvertible.ToInt16\n  nameWithType: Boolean.System.IConvertible.ToInt16\n  fullName: Boolean.System.IConvertible.ToInt16\n  monikers:\n  - netcore-1.0\n  - netcore-1.1\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - netstandard-1.3\n  - netstandard-1.4\n  - netstandard-1.5\n  - netstandard-1.6\n  - netstandard-2.0\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System/Boolean.xml\n- uid: System.Boolean.System#IConvertible#ToInt32*\n  parent: System.Boolean\n  isExternal: false\n  name: System.IConvertible.ToInt32\n  nameWithType: Boolean.System.IConvertible.ToInt32\n  fullName: Boolean.System.IConvertible.ToInt32\n  monikers:\n  - netcore-1.0\n  - netcore-1.1\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - netstandard-1.3\n  - netstandard-1.4\n  - netstandard-1.5\n  - netstandard-1.6\n  - netstandard-2.0\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System/Boolean.xml\n- uid: System.Boolean.System#IConvertible#ToInt64*\n  parent: System.Boolean\n  isExternal: false\n  name: System.IConvertible.ToInt64\n  nameWithType: Boolean.System.IConvertible.ToInt64\n  fullName: Boolean.System.IConvertible.ToInt64\n  monikers:\n  - netcore-1.0\n  - netcore-1.1\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - netstandard-1.3\n  - netstandard-1.4\n  - netstandard-1.5\n  - netstandard-1.6\n  - netstandard-2.0\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System/Boolean.xml\n- uid: System.Boolean.System#IConvertible#ToSByte*\n  parent: System.Boolean\n  isExternal: false\n  name: System.IConvertible.ToSByte\n  nameWithType: Boolean.System.IConvertible.ToSByte\n  fullName: Boolean.System.IConvertible.ToSByte\n  monikers:\n  - netcore-1.0\n  - netcore-1.1\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - netstandard-1.3\n  - netstandard-1.4\n  - netstandard-1.5\n  - netstandard-1.6\n  - netstandard-2.0\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System/Boolean.xml\n- uid: System.Boolean.System#IConvertible#ToSingle*\n  parent: System.Boolean\n  isExternal: false\n  name: System.IConvertible.ToSingle\n  nameWithType: Boolean.System.IConvertible.ToSingle\n  fullName: Boolean.System.IConvertible.ToSingle\n  monikers:\n  - netcore-1.0\n  - netcore-1.1\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - netstandard-1.3\n  - netstandard-1.4\n  - netstandard-1.5\n  - netstandard-1.6\n  - netstandard-2.0\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System/Boolean.xml\n- uid: System.Boolean.System#IConvertible#ToString*\n  parent: System.Boolean\n  isExternal: false\n  name: System.IConvertible.ToString\n  nameWithType: Boolean.System.IConvertible.ToString\n  fullName: Boolean.System.IConvertible.ToString\n  monikers:\n  - netcore-1.0\n  - netcore-1.1\n  - netstandard-1.3\n  - netstandard-1.4\n  - netstandard-1.5\n  - netstandard-1.6\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System/Boolean.xml\n- uid: System.Boolean.System#IConvertible#ToType*\n  parent: System.Boolean\n  isExternal: false\n  name: System.IConvertible.ToType\n  nameWithType: Boolean.System.IConvertible.ToType\n  fullName: Boolean.System.IConvertible.ToType\n  monikers:\n  - netcore-1.0\n  - netcore-1.1\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - netstandard-1.3\n  - netstandard-1.4\n  - netstandard-1.5\n  - netstandard-1.6\n  - netstandard-2.0\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System/Boolean.xml\n- uid: System.Boolean.System#IConvertible#ToUInt16*\n  parent: System.Boolean\n  isExternal: false\n  name: System.IConvertible.ToUInt16\n  nameWithType: Boolean.System.IConvertible.ToUInt16\n  fullName: Boolean.System.IConvertible.ToUInt16\n  monikers:\n  - netcore-1.0\n  - netcore-1.1\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - netstandard-1.3\n  - netstandard-1.4\n  - netstandard-1.5\n  - netstandard-1.6\n  - netstandard-2.0\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System/Boolean.xml\n- uid: System.Boolean.System#IConvertible#ToUInt32*\n  parent: System.Boolean\n  isExternal: false\n  name: System.IConvertible.ToUInt32\n  nameWithType: Boolean.System.IConvertible.ToUInt32\n  fullName: Boolean.System.IConvertible.ToUInt32\n  monikers:\n  - netcore-1.0\n  - netcore-1.1\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - netstandard-1.3\n  - netstandard-1.4\n  - netstandard-1.5\n  - netstandard-1.6\n  - netstandard-2.0\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System/Boolean.xml\n- uid: System.Boolean.System#IConvertible#ToUInt64*\n  parent: System.Boolean\n  isExternal: false\n  name: System.IConvertible.ToUInt64\n  nameWithType: Boolean.System.IConvertible.ToUInt64\n  fullName: Boolean.System.IConvertible.ToUInt64\n  monikers:\n  - netcore-1.0\n  - netcore-1.1\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - netstandard-1.3\n  - netstandard-1.4\n  - netstandard-1.5\n  - netstandard-1.6\n  - netstandard-2.0\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System/Boolean.xml\n- uid: System.IComparable\n  parent: System\n  isExternal: false\n  name: IComparable\n  nameWithType: IComparable\n  fullName: System.IComparable\n- uid: System.IComparable`1\n  name: IComparable<T>\n  nameWithType: IComparable<T>\n  fullName: System.IComparable<T>\n- uid: System.IComparable{System.Boolean}\n  parent: System\n  isExternal: false\n  name: IComparable<Boolean>\n  nameWithType: IComparable<Boolean>\n  fullName: System.IComparable<System.Boolean>\n  spec.csharp:\n  - uid: System.IComparable`1\n    name: IComparable\n    nameWithType: IComparable\n    fullName: System.IComparable\n  - name: <\n    nameWithType: <\n    fullName: <\n  - uid: System.Boolean\n    name: Boolean\n    nameWithType: Boolean\n    fullName: System.Boolean\n  - name: '>'\n    nameWithType: '>'\n    fullName: '>'\n- uid: System.IConvertible\n  parent: System\n  isExternal: false\n  name: IConvertible\n  nameWithType: IConvertible\n  fullName: System.IConvertible\n- uid: System.IEquatable`1\n  name: IEquatable<T>\n  nameWithType: IEquatable<T>\n  fullName: System.IEquatable<T>\n- uid: System.IEquatable{System.Boolean}\n  parent: System\n  isExternal: false\n  name: IEquatable<Boolean>\n  nameWithType: IEquatable<Boolean>\n  fullName: System.IEquatable<System.Boolean>\n  spec.csharp:\n  - uid: System.IEquatable`1\n    name: IEquatable\n    nameWithType: IEquatable\n    fullName: System.IEquatable\n  - name: <\n    nameWithType: <\n    fullName: <\n  - uid: System.Boolean\n    name: Boolean\n    nameWithType: Boolean\n    fullName: System.Boolean\n  - name: '>'\n    nameWithType: '>'\n    fullName: '>'\n"}