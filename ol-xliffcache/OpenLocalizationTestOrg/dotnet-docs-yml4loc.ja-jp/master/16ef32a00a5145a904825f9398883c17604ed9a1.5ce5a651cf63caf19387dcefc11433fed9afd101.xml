{"nodes":[{"content":"Represents a horizontal or vertical line that defines a position along an axis.","nodes":[{"pos":[0,79],"content":"Represents a horizontal or vertical line that defines a position along an axis.","nodes":[{"content":"Represents a horizontal or vertical line that defines a position along an axis.","pos":[0,79]}]}],"pos":[2226,2306],"yaml":true},{"content":"A cursor is a horizontal or vertical line that defines a position along an axis. A range selection is a range along an axis that is defined by a beginning and end position, and is displayed using a semi-transparent color.  \n  \n Cursors and range selections are both implemented by the <xref:System.Windows.Forms.DataVisualization.Charting.Cursor> class, which is exposed as the <xref:System.Windows.Forms.DataVisualization.Charting.ChartArea.CursorX%2A> and <xref:System.Windows.Forms.DataVisualization.Charting.ChartArea.CursorY%2A> properties of the <xref:System.Windows.Forms.DataVisualization.Charting.ChartArea> object. The <xref:System.Windows.Forms.DataVisualization.Charting.ChartArea.CursorX%2A> object is for the X axis of a chart area, and the <xref:System.Windows.Forms.DataVisualization.Charting.ChartArea.CursorY%2A> object is for the Y axis. The <xref:System.Windows.Forms.DataVisualization.Charting.Cursor.AxisType%2A> property of these objects determines whether the associated axis is primary or secondary.  \n  \n The only cursor and range selection functionality found outside the <xref:System.Windows.Forms.DataVisualization.Charting.Cursor> class are the events related to the cursor and range selection that are in the root <xref:System.Windows.Forms.DataVisualization.Charting.Chart> object.","nodes":[{"pos":[0,221],"content":"A cursor is a horizontal or vertical line that defines a position along an axis. A range selection is a range along an axis that is defined by a beginning and end position, and is displayed using a semi-transparent color.","nodes":[{"content":"A cursor is a horizontal or vertical line that defines a position along an axis. A range selection is a range along an axis that is defined by a beginning and end position, and is displayed using a semi-transparent color.","pos":[0,221],"nodes":[{"content":"A cursor is a horizontal or vertical line that defines a position along an axis.","pos":[0,80]},{"content":"A range selection is a range along an axis that is defined by a beginning and end position, and is displayed using a semi-transparent color.","pos":[81,221]}]}]},{"pos":[228,1024],"content":"Cursors and range selections are both implemented by the <xref:System.Windows.Forms.DataVisualization.Charting.Cursor> class, which is exposed as the <xref:System.Windows.Forms.DataVisualization.Charting.ChartArea.CursorX%2A> and <xref:System.Windows.Forms.DataVisualization.Charting.ChartArea.CursorY%2A> properties of the <xref:System.Windows.Forms.DataVisualization.Charting.ChartArea> object. The <xref:System.Windows.Forms.DataVisualization.Charting.ChartArea.CursorX%2A> object is for the X axis of a chart area, and the <xref:System.Windows.Forms.DataVisualization.Charting.ChartArea.CursorY%2A> object is for the Y axis. The <xref:System.Windows.Forms.DataVisualization.Charting.Cursor.AxisType%2A> property of these objects determines whether the associated axis is primary or secondary.","nodes":[{"content":"Cursors and range selections are both implemented by the <xref:System.Windows.Forms.DataVisualization.Charting.Cursor> class, which is exposed as the <xref:System.Windows.Forms.DataVisualization.Charting.ChartArea.CursorX%2A> and <xref:System.Windows.Forms.DataVisualization.Charting.ChartArea.CursorY%2A> properties of the <xref:System.Windows.Forms.DataVisualization.Charting.ChartArea> object. The <xref:System.Windows.Forms.DataVisualization.Charting.ChartArea.CursorX%2A> object is for the X axis of a chart area, and the <xref:System.Windows.Forms.DataVisualization.Charting.ChartArea.CursorY%2A> object is for the Y axis. The <xref:System.Windows.Forms.DataVisualization.Charting.Cursor.AxisType%2A> property of these objects determines whether the associated axis is primary or secondary.","pos":[0,796],"nodes":[{"content":"Cursors and range selections are both implemented by the <ph id=\"ph1\">&lt;xref:System.Windows.Forms.DataVisualization.Charting.Cursor&gt;</ph> class, which is exposed as the <ph id=\"ph2\">&lt;xref:System.Windows.Forms.DataVisualization.Charting.ChartArea.CursorX%2A&gt;</ph> and <ph id=\"ph3\">&lt;xref:System.Windows.Forms.DataVisualization.Charting.ChartArea.CursorY%2A&gt;</ph> properties of the <ph id=\"ph4\">&lt;xref:System.Windows.Forms.DataVisualization.Charting.ChartArea&gt;</ph> object.","pos":[0,396],"source":"Cursors and range selections are both implemented by the <xref:System.Windows.Forms.DataVisualization.Charting.Cursor> class, which is exposed as the <xref:System.Windows.Forms.DataVisualization.Charting.ChartArea.CursorX%2A> and <xref:System.Windows.Forms.DataVisualization.Charting.ChartArea.CursorY%2A> properties of the <xref:System.Windows.Forms.DataVisualization.Charting.ChartArea> object."},{"content":"The <ph id=\"ph1\">&lt;xref:System.Windows.Forms.DataVisualization.Charting.ChartArea.CursorX%2A&gt;</ph> object is for the X axis of a chart area, and the <ph id=\"ph2\">&lt;xref:System.Windows.Forms.DataVisualization.Charting.ChartArea.CursorY%2A&gt;</ph> object is for the Y axis.","pos":[397,628],"source":" The <xref:System.Windows.Forms.DataVisualization.Charting.ChartArea.CursorX%2A> object is for the X axis of a chart area, and the <xref:System.Windows.Forms.DataVisualization.Charting.ChartArea.CursorY%2A> object is for the Y axis."},{"content":"The <ph id=\"ph1\">&lt;xref:System.Windows.Forms.DataVisualization.Charting.Cursor.AxisType%2A&gt;</ph> property of these objects determines whether the associated axis is primary or secondary.","pos":[629,796],"source":" The <xref:System.Windows.Forms.DataVisualization.Charting.Cursor.AxisType%2A> property of these objects determines whether the associated axis is primary or secondary."}]}]},{"pos":[1031,1313],"content":"The only cursor and range selection functionality found outside the <xref:System.Windows.Forms.DataVisualization.Charting.Cursor> class are the events related to the cursor and range selection that are in the root <xref:System.Windows.Forms.DataVisualization.Charting.Chart> object.","nodes":[{"content":"The only cursor and range selection functionality found outside the <ph id=\"ph1\">&lt;xref:System.Windows.Forms.DataVisualization.Charting.Cursor&gt;</ph> class are the events related to the cursor and range selection that are in the root <ph id=\"ph2\">&lt;xref:System.Windows.Forms.DataVisualization.Charting.Chart&gt;</ph> object.","pos":[0,282],"source":"The only cursor and range selection functionality found outside the <xref:System.Windows.Forms.DataVisualization.Charting.Cursor> class are the events related to the cursor and range selection that are in the root <xref:System.Windows.Forms.DataVisualization.Charting.Chart> object."}]}],"pos":[2317,3637],"yaml":true,"extradata":"MT"},{"content":"Initializes a new instance of the <xref href=\"System.Windows.Forms.DataVisualization.Charting.Cursor\"></xref> class.","nodes":[{"pos":[0,116],"content":"Initializes a new instance of the <ph id=\"ph1\">&lt;xref href=\"System.Windows.Forms.DataVisualization.Charting.Cursor\"&gt;&lt;/xref&gt;</ph> class.","source":"Initializes a new instance of the <xref href=\"System.Windows.Forms.DataVisualization.Charting.Cursor\"></xref> class."}],"pos":[5081,5198],"yaml":true},{"content":"Gets or sets a flag that determines whether scrolling will occur if a range selection operation extends beyond a boundary of the chart area.","nodes":[{"pos":[0,140],"content":"Gets or sets a flag that determines whether scrolling will occur if a range selection operation extends beyond a boundary of the chart area.","nodes":[{"content":"Gets or sets a flag that determines whether scrolling will occur if a range selection operation extends beyond a boundary of the chart area.","pos":[0,140]}]}],"pos":[6369,6510],"yaml":true},{"content":"If a data view does not display all data points in a plotted series and a range is being selected by the user, automatic scrolling of the view will occur if this property is `true` and the mouse—and therefore the cursor—is moved outside the chart area boundary.  \n  \n Scrolling will only occur along an axis if there is more data available to be viewed.  \n  \n A data view that does not display all data usually results if the end-user zooms into a subset of data. Views and zooming are implemented by the <xref:System.Windows.Forms.DataVisualization.Charting.AxisScaleView> class.","nodes":[{"pos":[0,261],"content":"If a data view does not display all data points in a plotted series and a range is being selected by the user, automatic scrolling of the view will occur if this property is <ph id=\"ph1\">`true`</ph> and the mouse—and therefore the cursor—is moved outside the chart area boundary.","source":"If a data view does not display all data points in a plotted series and a range is being selected by the user, automatic scrolling of the view will occur if this property is `true` and the mouse—and therefore the cursor—is moved outside the chart area boundary."},{"pos":[268,353],"content":"Scrolling will only occur along an axis if there is more data available to be viewed.","nodes":[{"content":"Scrolling will only occur along an axis if there is more data available to be viewed.","pos":[0,85]}]},{"pos":[360,580],"content":"A data view that does not display all data usually results if the end-user zooms into a subset of data. Views and zooming are implemented by the <xref:System.Windows.Forms.DataVisualization.Charting.AxisScaleView> class.","nodes":[{"content":"A data view that does not display all data usually results if the end-user zooms into a subset of data. Views and zooming are implemented by the <xref:System.Windows.Forms.DataVisualization.Charting.AxisScaleView> class.","pos":[0,220],"nodes":[{"content":"A data view that does not display all data usually results if the end-user zooms into a subset of data.","pos":[0,103]},{"content":"Views and zooming are implemented by the <ph id=\"ph1\">&lt;xref:System.Windows.Forms.DataVisualization.Charting.AxisScaleView&gt;</ph> class.","pos":[104,220],"source":" Views and zooming are implemented by the <xref:System.Windows.Forms.DataVisualization.Charting.AxisScaleView> class."}]}]}],"pos":[6521,7108],"yaml":true,"extradata":"MT"},{"content":"`true` if the data view can be scrolled automatically; otherwise, `false`.","nodes":[{"pos":[0,74],"content":"<ph id=\"ph1\">`true`</ph> if the data view can be scrolled automatically; otherwise, <ph id=\"ph2\">`false`</ph>.","source":"`true` if the data view can be scrolled automatically; otherwise, `false`."}],"pos":[7281,7358],"yaml":true},{"content":"Gets or sets the type of axis that the cursor is attached to.","nodes":[{"pos":[0,61],"content":"Gets or sets the type of axis that the cursor is attached to.","nodes":[{"content":"Gets or sets the type of axis that the cursor is attached to.","pos":[0,61]}]}],"pos":[8526,8588],"yaml":true},{"content":"There are two sets of axes: primary and secondary. Primary axes for all charts except the bar charts are located at the bottom (primary X-axis) and left (primary Y-axis) border of the chart area.  \n  \n The secondary axes are located at the right (secondary X-axis) and top (secondary Y-axis) border of the chart area.  \n  \n> [!NOTE]\n>  If all series plotted within a chart area use only one type of axis (for example, the primary X-axis), then setting this property to an axis type not used by the series (in this case, the secondary X-axis) will have no effect; the cursor will automatically be attached to the only axis being used to plot the series.","nodes":[{"pos":[0,195],"content":"There are two sets of axes: primary and secondary. Primary axes for all charts except the bar charts are located at the bottom (primary X-axis) and left (primary Y-axis) border of the chart area.","nodes":[{"content":"There are two sets of axes: primary and secondary. Primary axes for all charts except the bar charts are located at the bottom (primary X-axis) and left (primary Y-axis) border of the chart area.","pos":[0,195],"nodes":[{"content":"There are two sets of axes: primary and secondary.","pos":[0,50]},{"content":"Primary axes for all charts except the bar charts are located at the bottom (primary X-axis) and left (primary Y-axis) border of the chart area.","pos":[51,195]}]}]},{"pos":[202,317],"content":"The secondary axes are located at the right (secondary X-axis) and top (secondary Y-axis) border of the chart area.","nodes":[{"content":"The secondary axes are located at the right (secondary X-axis) and top (secondary Y-axis) border of the chart area.","pos":[0,115]}]},{"pos":[325,652],"content":"[!NOTE]\n If all series plotted within a chart area use only one type of axis (for example, the primary X-axis), then setting this property to an axis type not used by the series (in this case, the secondary X-axis) will have no effect; the cursor will automatically be attached to the only axis being used to plot the series.","leadings":["","> "],"nodes":[{"content":"If all series plotted within a chart area use only one type of axis (for example, the primary X-axis), then setting this property to an axis type not used by the series (in this case, the secondary X-axis) will have no effect; the cursor will automatically be attached to the only axis being used to plot the series.","pos":[9,325]}]}],"pos":[8599,9259],"yaml":true,"extradata":"MT"},{"content":"An <xref href=\"System.Windows.Forms.DataVisualization.Charting.AxisType\"></xref> enumeration value that represents whether the axis is attached to the primary or secondary axis.","nodes":[{"pos":[0,177],"content":"An <ph id=\"ph1\">&lt;xref href=\"System.Windows.Forms.DataVisualization.Charting.AxisType\"&gt;&lt;/xref&gt;</ph> enumeration value that represents whether the axis is attached to the primary or secondary axis.","source":"An <xref href=\"System.Windows.Forms.DataVisualization.Charting.AxisType\"></xref> enumeration value that represents whether the axis is attached to the primary or secondary axis."}],"pos":[9524,9702],"yaml":true},{"content":"Performs application-defined tasks that free, release, or reset unmanaged resources.","nodes":[{"pos":[0,84],"content":"Performs application-defined tasks that free, release, or reset unmanaged resources.","nodes":[{"content":"Performs application-defined tasks that free, release, or reset unmanaged resources.","pos":[0,84]}]}],"pos":[10866,10951],"yaml":true},{"content":"Releases unmanaged and, optionally, managed resources.","nodes":[{"pos":[0,54],"content":"Releases unmanaged and, optionally, managed resources.","nodes":[{"content":"Releases unmanaged and, optionally, managed resources.","pos":[0,54]}]}],"pos":[12185,12240],"yaml":true},{"content":"`true` to release both unmanaged and managed resources; `false` to release only unmanaged resources.","nodes":[{"pos":[0,100],"content":"<ph id=\"ph1\">`true`</ph> to release both unmanaged and managed resources; <ph id=\"ph2\">`false`</ph> to release only unmanaged resources.","source":"`true` to release both unmanaged and managed resources; `false` to release only unmanaged resources."}],"pos":[12394,12497],"yaml":true},{"content":"Gets or sets the cursor interval.","nodes":[{"pos":[0,33],"content":"Gets or sets the cursor interval.","nodes":[{"content":"Gets or sets the cursor interval.","pos":[0,33]}]}],"pos":[13598,13632],"yaml":true},{"content":"The <xref:System.Windows.Forms.DataVisualization.Charting.Cursor.Interval%2A> property determines how often and where a cursor can be drawn by an end user, as well as where the beginning and end points of a range selection can be drawn. A value of zero, which is the default value, signifies that a cursor or range selection can be drawn anywhere within a chart area. A nonzero value signifies that the cursor or beginning and/or end points of a selected range will only be drawn at the specified interval when set by user interaction.  \n  \n The unit of measurement is determined by the <xref:System.Windows.Forms.DataVisualization.Charting.Cursor.IntervalType%2A> property.  \n  \n This property can also be used in conjunction with the <xref:System.Windows.Forms.DataVisualization.Charting.Cursor.IntervalOffset%2A> property, which allows you to specify an offset from the specified interval. For example, to allow a cursor to only be displayed every Saturday, an interval of 1 week should be specified, along with an interval offset of 6 days. In .NET Framework, Sunday is considered to be the first day of the week.  \n  \n If the cursor user interface is enabled by setting the <xref:System.Windows.Forms.DataVisualization.Charting.Cursor.IsUserEnabled%2A> property, and the mouse is clicked inside a chart area, the position of the cursor will be set to the nearest allowable location.  \n  \n> [!IMPORTANT]\n>  The <xref:System.Windows.Forms.DataVisualization.Charting.Cursor.Interval%2A> property has no effect if you set the position of a cursor or range selection programmatically.","nodes":[{"pos":[0,535],"content":"The <xref:System.Windows.Forms.DataVisualization.Charting.Cursor.Interval%2A> property determines how often and where a cursor can be drawn by an end user, as well as where the beginning and end points of a range selection can be drawn. A value of zero, which is the default value, signifies that a cursor or range selection can be drawn anywhere within a chart area. A nonzero value signifies that the cursor or beginning and/or end points of a selected range will only be drawn at the specified interval when set by user interaction.","nodes":[{"content":"The <xref:System.Windows.Forms.DataVisualization.Charting.Cursor.Interval%2A> property determines how often and where a cursor can be drawn by an end user, as well as where the beginning and end points of a range selection can be drawn. A value of zero, which is the default value, signifies that a cursor or range selection can be drawn anywhere within a chart area. A nonzero value signifies that the cursor or beginning and/or end points of a selected range will only be drawn at the specified interval when set by user interaction.","pos":[0,535],"nodes":[{"content":"The <ph id=\"ph1\">&lt;xref:System.Windows.Forms.DataVisualization.Charting.Cursor.Interval%2A&gt;</ph> property determines how often and where a cursor can be drawn by an end user, as well as where the beginning and end points of a range selection can be drawn.","pos":[0,236],"source":"The <xref:System.Windows.Forms.DataVisualization.Charting.Cursor.Interval%2A> property determines how often and where a cursor can be drawn by an end user, as well as where the beginning and end points of a range selection can be drawn."},{"content":"A value of zero, which is the default value, signifies that a cursor or range selection can be drawn anywhere within a chart area.","pos":[237,367]},{"content":"A nonzero value signifies that the cursor or beginning and/or end points of a selected range will only be drawn at the specified interval when set by user interaction.","pos":[368,535]}]}]},{"pos":[542,674],"content":"The unit of measurement is determined by the <xref:System.Windows.Forms.DataVisualization.Charting.Cursor.IntervalType%2A> property.","nodes":[{"content":"The unit of measurement is determined by the <ph id=\"ph1\">&lt;xref:System.Windows.Forms.DataVisualization.Charting.Cursor.IntervalType%2A&gt;</ph> property.","pos":[0,132],"source":"The unit of measurement is determined by the <xref:System.Windows.Forms.DataVisualization.Charting.Cursor.IntervalType%2A> property."}]},{"pos":[681,1117],"content":"This property can also be used in conjunction with the <xref:System.Windows.Forms.DataVisualization.Charting.Cursor.IntervalOffset%2A> property, which allows you to specify an offset from the specified interval. For example, to allow a cursor to only be displayed every Saturday, an interval of 1 week should be specified, along with an interval offset of 6 days. In .NET Framework, Sunday is considered to be the first day of the week.","nodes":[{"content":"This property can also be used in conjunction with the <xref:System.Windows.Forms.DataVisualization.Charting.Cursor.IntervalOffset%2A> property, which allows you to specify an offset from the specified interval. For example, to allow a cursor to only be displayed every Saturday, an interval of 1 week should be specified, along with an interval offset of 6 days. In .NET Framework, Sunday is considered to be the first day of the week.","pos":[0,436],"nodes":[{"content":"This property can also be used in conjunction with the <ph id=\"ph1\">&lt;xref:System.Windows.Forms.DataVisualization.Charting.Cursor.IntervalOffset%2A&gt;</ph> property, which allows you to specify an offset from the specified interval.","pos":[0,211],"source":"This property can also be used in conjunction with the <xref:System.Windows.Forms.DataVisualization.Charting.Cursor.IntervalOffset%2A> property, which allows you to specify an offset from the specified interval."},{"content":"For example, to allow a cursor to only be displayed every Saturday, an interval of 1 week should be specified, along with an interval offset of 6 days.","pos":[212,363]},{"content":"In .NET Framework, Sunday is considered to be the first day of the week.","pos":[364,436]}]}]},{"pos":[1124,1387],"content":"If the cursor user interface is enabled by setting the <xref:System.Windows.Forms.DataVisualization.Charting.Cursor.IsUserEnabled%2A> property, and the mouse is clicked inside a chart area, the position of the cursor will be set to the nearest allowable location.","nodes":[{"content":"If the cursor user interface is enabled by setting the <ph id=\"ph1\">&lt;xref:System.Windows.Forms.DataVisualization.Charting.Cursor.IsUserEnabled%2A&gt;</ph> property, and the mouse is clicked inside a chart area, the position of the cursor will be set to the nearest allowable location.","pos":[0,263],"source":"If the cursor user interface is enabled by setting the <xref:System.Windows.Forms.DataVisualization.Charting.Cursor.IsUserEnabled%2A> property, and the mouse is clicked inside a chart area, the position of the cursor will be set to the nearest allowable location."}]},{"pos":[1395,1584],"content":"[!IMPORTANT]\n The <xref:System.Windows.Forms.DataVisualization.Charting.Cursor.Interval%2A> property has no effect if you set the position of a cursor or range selection programmatically.","leadings":["","> "],"nodes":[{"content":"The <ph id=\"ph1\">&lt;xref:System.Windows.Forms.DataVisualization.Charting.Cursor.Interval%2A&gt;</ph> property has no effect if you set the position of a cursor or range selection programmatically.","pos":[14,187],"source":" The <xref:System.Windows.Forms.DataVisualization.Charting.Cursor.Interval%2A> property has no effect if you set the position of a cursor or range selection programmatically."}]}],"pos":[13643,15239],"yaml":true,"extradata":"MT"},{"content":"The cursor interval.","nodes":[{"pos":[0,20],"content":"The cursor interval.","nodes":[{"content":"The cursor interval.","pos":[0,20]}]}],"pos":[15411,15432],"yaml":true},{"content":"Gets or sets the interval offset, which affects where the cursor and range selection can be drawn when they are set by a user.","nodes":[{"pos":[0,126],"content":"Gets or sets the interval offset, which affects where the cursor and range selection can be drawn when they are set by a user.","nodes":[{"content":"Gets or sets the interval offset, which affects where the cursor and range selection can be drawn when they are set by a user.","pos":[0,126]}]}],"pos":[16634,16761],"yaml":true},{"content":"The <xref:System.Windows.Forms.DataVisualization.Charting.Cursor.IntervalOffset%2A> property determines the interval offset of a cursor and the beginning and/or end points of a range selection. In conjunction with the <xref:System.Windows.Forms.DataVisualization.Charting.Cursor.Interval%2A> property, this property determines where a cursor and range can be displayed within a chart area. A value of zero, which is the default, signifies that there is no offset.  \n  \n The unit of measurement is determined by the <xref:System.Windows.Forms.DataVisualization.Charting.Cursor.IntervalOffsetType%2A> property.  \n  \n The offset affects the locations at which a cursor and the beginning and/or end points of a range selection can be drawn. For example, to allow a cursor to only be displayed every Saturday, an interval of 1 week should be specified, along with an interval offset of 6 days. In .NET Framework, Sunday is considered to be the first day of the week.  \n  \n If the cursor user interface is enabled by setting the <xref:System.Windows.Forms.DataVisualization.Charting.Cursor.IsUserEnabled%2A> property, and the mouse is clicked inside a chart area, the position of the cursor will be set to the nearest allowable location.  \n  \n> [!IMPORTANT]\n>  Interval-related properties have no effect when a range selection or cursor position are set programmatically.","nodes":[{"pos":[0,463],"content":"The <xref:System.Windows.Forms.DataVisualization.Charting.Cursor.IntervalOffset%2A> property determines the interval offset of a cursor and the beginning and/or end points of a range selection. In conjunction with the <xref:System.Windows.Forms.DataVisualization.Charting.Cursor.Interval%2A> property, this property determines where a cursor and range can be displayed within a chart area. A value of zero, which is the default, signifies that there is no offset.","nodes":[{"content":"The <xref:System.Windows.Forms.DataVisualization.Charting.Cursor.IntervalOffset%2A> property determines the interval offset of a cursor and the beginning and/or end points of a range selection. In conjunction with the <xref:System.Windows.Forms.DataVisualization.Charting.Cursor.Interval%2A> property, this property determines where a cursor and range can be displayed within a chart area. A value of zero, which is the default, signifies that there is no offset.","pos":[0,463],"nodes":[{"content":"The <ph id=\"ph1\">&lt;xref:System.Windows.Forms.DataVisualization.Charting.Cursor.IntervalOffset%2A&gt;</ph> property determines the interval offset of a cursor and the beginning and/or end points of a range selection.","pos":[0,193],"source":"The <xref:System.Windows.Forms.DataVisualization.Charting.Cursor.IntervalOffset%2A> property determines the interval offset of a cursor and the beginning and/or end points of a range selection."},{"content":"In conjunction with the <ph id=\"ph1\">&lt;xref:System.Windows.Forms.DataVisualization.Charting.Cursor.Interval%2A&gt;</ph> property, this property determines where a cursor and range can be displayed within a chart area.","pos":[194,389],"source":" In conjunction with the <xref:System.Windows.Forms.DataVisualization.Charting.Cursor.Interval%2A> property, this property determines where a cursor and range can be displayed within a chart area."},{"content":"A value of zero, which is the default, signifies that there is no offset.","pos":[390,463]}]}]},{"pos":[470,608],"content":"The unit of measurement is determined by the <xref:System.Windows.Forms.DataVisualization.Charting.Cursor.IntervalOffsetType%2A> property.","nodes":[{"content":"The unit of measurement is determined by the <ph id=\"ph1\">&lt;xref:System.Windows.Forms.DataVisualization.Charting.Cursor.IntervalOffsetType%2A&gt;</ph> property.","pos":[0,138],"source":"The unit of measurement is determined by the <xref:System.Windows.Forms.DataVisualization.Charting.Cursor.IntervalOffsetType%2A> property."}]},{"pos":[615,961],"content":"The offset affects the locations at which a cursor and the beginning and/or end points of a range selection can be drawn. For example, to allow a cursor to only be displayed every Saturday, an interval of 1 week should be specified, along with an interval offset of 6 days. In .NET Framework, Sunday is considered to be the first day of the week.","nodes":[{"content":"The offset affects the locations at which a cursor and the beginning and/or end points of a range selection can be drawn. For example, to allow a cursor to only be displayed every Saturday, an interval of 1 week should be specified, along with an interval offset of 6 days. In .NET Framework, Sunday is considered to be the first day of the week.","pos":[0,346],"nodes":[{"content":"The offset affects the locations at which a cursor and the beginning and/or end points of a range selection can be drawn.","pos":[0,121]},{"content":"For example, to allow a cursor to only be displayed every Saturday, an interval of 1 week should be specified, along with an interval offset of 6 days.","pos":[122,273]},{"content":"In .NET Framework, Sunday is considered to be the first day of the week.","pos":[274,346]}]}]},{"pos":[968,1231],"content":"If the cursor user interface is enabled by setting the <xref:System.Windows.Forms.DataVisualization.Charting.Cursor.IsUserEnabled%2A> property, and the mouse is clicked inside a chart area, the position of the cursor will be set to the nearest allowable location.","nodes":[{"content":"If the cursor user interface is enabled by setting the <ph id=\"ph1\">&lt;xref:System.Windows.Forms.DataVisualization.Charting.Cursor.IsUserEnabled%2A&gt;</ph> property, and the mouse is clicked inside a chart area, the position of the cursor will be set to the nearest allowable location.","pos":[0,263],"source":"If the cursor user interface is enabled by setting the <xref:System.Windows.Forms.DataVisualization.Charting.Cursor.IsUserEnabled%2A> property, and the mouse is clicked inside a chart area, the position of the cursor will be set to the nearest allowable location."}]},{"pos":[1239,1365],"content":"[!IMPORTANT]\n Interval-related properties have no effect when a range selection or cursor position are set programmatically.","leadings":["","> "],"nodes":[{"content":"Interval-related properties have no effect when a range selection or cursor position are set programmatically.","pos":[14,124]}]}],"pos":[16772,18149],"yaml":true,"extradata":"MT"},{"content":"The offset from the interval. The default value is zero, which signifies no limitations, and negative values are allowed.","nodes":[{"pos":[0,121],"content":"The offset from the interval. The default value is zero, which signifies no limitations, and negative values are allowed.","nodes":[{"content":"The offset from the interval. The default value is zero, which signifies no limitations, and negative values are allowed.","pos":[0,121],"nodes":[{"content":"The offset from the interval.","pos":[0,29]},{"content":"The default value is zero, which signifies no limitations, and negative values are allowed.","pos":[30,121]}]}]}],"pos":[18327,18449],"yaml":true},{"content":"Gets or sets the interval offset type of a cursor and selected range for an axis.","nodes":[{"pos":[0,81],"content":"Gets or sets the interval offset type of a cursor and selected range for an axis.","nodes":[{"content":"Gets or sets the interval offset type of a cursor and selected range for an axis.","pos":[0,81]}]}],"pos":[19681,19763],"yaml":true},{"content":"The <xref:System.Windows.Forms.DataVisualization.Charting.Cursor.IntervalOffsetType%2A> property determines the type of interval offset, which is specified using the <xref:System.Windows.Forms.DataVisualization.Charting.Cursor.IntervalOffset%2A> property.  \n  \n If the <xref:System.Windows.Forms.DataVisualization.Charting.Cursor.IntervalOffsetType%2A> property is set to <xref:System.Windows.Forms.DataVisualization.Charting.DateTimeIntervalType.Auto>, the <xref:System.Windows.Forms.DataVisualization.Charting.Cursor.IntervalType%2A> property setting will be used.  \n  \n> [!NOTE]\n>  Interval-related properties have no effect when a range selection or cursor position are set programmatically.","nodes":[{"pos":[0,255],"content":"The <xref:System.Windows.Forms.DataVisualization.Charting.Cursor.IntervalOffsetType%2A> property determines the type of interval offset, which is specified using the <xref:System.Windows.Forms.DataVisualization.Charting.Cursor.IntervalOffset%2A> property.","nodes":[{"content":"The <ph id=\"ph1\">&lt;xref:System.Windows.Forms.DataVisualization.Charting.Cursor.IntervalOffsetType%2A&gt;</ph> property determines the type of interval offset, which is specified using the <ph id=\"ph2\">&lt;xref:System.Windows.Forms.DataVisualization.Charting.Cursor.IntervalOffset%2A&gt;</ph> property.","pos":[0,255],"source":"The <xref:System.Windows.Forms.DataVisualization.Charting.Cursor.IntervalOffsetType%2A> property determines the type of interval offset, which is specified using the <xref:System.Windows.Forms.DataVisualization.Charting.Cursor.IntervalOffset%2A> property."}]},{"pos":[262,566],"content":"If the <xref:System.Windows.Forms.DataVisualization.Charting.Cursor.IntervalOffsetType%2A> property is set to <xref:System.Windows.Forms.DataVisualization.Charting.DateTimeIntervalType.Auto>, the <xref:System.Windows.Forms.DataVisualization.Charting.Cursor.IntervalType%2A> property setting will be used.","nodes":[{"content":"If the <ph id=\"ph1\">&lt;xref:System.Windows.Forms.DataVisualization.Charting.Cursor.IntervalOffsetType%2A&gt;</ph> property is set to <ph id=\"ph2\">&lt;xref:System.Windows.Forms.DataVisualization.Charting.DateTimeIntervalType.Auto&gt;</ph>, the <ph id=\"ph3\">&lt;xref:System.Windows.Forms.DataVisualization.Charting.Cursor.IntervalType%2A&gt;</ph> property setting will be used.","pos":[0,304],"source":"If the <xref:System.Windows.Forms.DataVisualization.Charting.Cursor.IntervalOffsetType%2A> property is set to <xref:System.Windows.Forms.DataVisualization.Charting.DateTimeIntervalType.Auto>, the <xref:System.Windows.Forms.DataVisualization.Charting.Cursor.IntervalType%2A> property setting will be used."}]},{"pos":[574,695],"content":"[!NOTE]\n Interval-related properties have no effect when a range selection or cursor position are set programmatically.","leadings":["","> "],"nodes":[{"content":"Interval-related properties have no effect when a range selection or cursor position are set programmatically.","pos":[9,119]}]}],"pos":[19774,20477],"yaml":true,"extradata":"MT"},{"content":"A <xref href=\"System.Windows.Forms.DataVisualization.Charting.DateTimeIntervalType\"></xref> enumeration value that determines the unit of measurement for the interval offset.","nodes":[{"pos":[0,174],"content":"A <ph id=\"ph1\">&lt;xref href=\"System.Windows.Forms.DataVisualization.Charting.DateTimeIntervalType\"&gt;&lt;/xref&gt;</ph> enumeration value that determines the unit of measurement for the interval offset.","source":"A <xref href=\"System.Windows.Forms.DataVisualization.Charting.DateTimeIntervalType\"></xref> enumeration value that determines the unit of measurement for the interval offset."}],"pos":[20776,20951],"yaml":true},{"content":"Gets or sets the interval type for the cursor and selected range of an axis.","nodes":[{"pos":[0,76],"content":"Gets or sets the interval type for the cursor and selected range of an axis.","nodes":[{"content":"Gets or sets the interval type for the cursor and selected range of an axis.","pos":[0,76]}]}],"pos":[22151,22228],"yaml":true},{"content":"The <xref:System.Windows.Forms.DataVisualization.Charting.Cursor.IntervalType%2A> property determines the type of interval, which is specified using the <xref:System.Windows.Forms.DataVisualization.Charting.Cursor.Interval%2A> property.  \n  \n If the interval type is <xref:System.Windows.Forms.DataVisualization.Charting.DateTimeIntervalType.Auto>, the unit of measurement for the interval is treated as a `double`, which is equivalent to one day when <xref:System.DateTime> values are specified.  \n  \n> [!NOTE]\n>  Interval-related properties have no effect when a range selection or cursor position is set programmatically.  \n  \n If the axis interval type represents a time—for example, hours, minutes, and so forth—then in order to correctly enable the zooming function, the <xref:System.Windows.Forms.DataVisualization.Charting.Cursor.IntervalType%2A> must also be set to a time value. For example, if the ChartArea1.AxisX.IntervalType is expressed in hours, then the ChartArea1.CursorX.IntervalType could be set to minutes.","nodes":[{"pos":[0,236],"content":"The <xref:System.Windows.Forms.DataVisualization.Charting.Cursor.IntervalType%2A> property determines the type of interval, which is specified using the <xref:System.Windows.Forms.DataVisualization.Charting.Cursor.Interval%2A> property.","nodes":[{"content":"The <ph id=\"ph1\">&lt;xref:System.Windows.Forms.DataVisualization.Charting.Cursor.IntervalType%2A&gt;</ph> property determines the type of interval, which is specified using the <ph id=\"ph2\">&lt;xref:System.Windows.Forms.DataVisualization.Charting.Cursor.Interval%2A&gt;</ph> property.","pos":[0,236],"source":"The <xref:System.Windows.Forms.DataVisualization.Charting.Cursor.IntervalType%2A> property determines the type of interval, which is specified using the <xref:System.Windows.Forms.DataVisualization.Charting.Cursor.Interval%2A> property."}]},{"pos":[243,496],"content":"If the interval type is <ph id=\"ph1\">&lt;xref:System.Windows.Forms.DataVisualization.Charting.DateTimeIntervalType.Auto&gt;</ph>, the unit of measurement for the interval is treated as a <ph id=\"ph2\">`double`</ph>, which is equivalent to one day when <ph id=\"ph3\">&lt;xref:System.DateTime&gt;</ph> values are specified.","source":"If the interval type is <xref:System.Windows.Forms.DataVisualization.Charting.DateTimeIntervalType.Auto>, the unit of measurement for the interval is treated as a `double`, which is equivalent to one day when <xref:System.DateTime> values are specified."},{"pos":[504,624],"content":"[!NOTE]\n Interval-related properties have no effect when a range selection or cursor position is set programmatically.","leadings":["","> "],"nodes":[{"content":"Interval-related properties have no effect when a range selection or cursor position is set programmatically.","pos":[9,118]}]},{"pos":[631,1027],"content":"If the axis interval type represents a time—for example, hours, minutes, and so forth—then in order to correctly enable the zooming function, the <xref:System.Windows.Forms.DataVisualization.Charting.Cursor.IntervalType%2A> must also be set to a time value. For example, if the ChartArea1.AxisX.IntervalType is expressed in hours, then the ChartArea1.CursorX.IntervalType could be set to minutes.","nodes":[{"content":"If the axis interval type represents a time—for example, hours, minutes, and so forth—then in order to correctly enable the zooming function, the <xref:System.Windows.Forms.DataVisualization.Charting.Cursor.IntervalType%2A> must also be set to a time value. For example, if the ChartArea1.AxisX.IntervalType is expressed in hours, then the ChartArea1.CursorX.IntervalType could be set to minutes.","pos":[0,396],"nodes":[{"content":"If the axis interval type represents a time—for example, hours, minutes, and so forth—then in order to correctly enable the zooming function, the <ph id=\"ph1\">&lt;xref:System.Windows.Forms.DataVisualization.Charting.Cursor.IntervalType%2A&gt;</ph> must also be set to a time value.","pos":[0,257],"source":"If the axis interval type represents a time—for example, hours, minutes, and so forth—then in order to correctly enable the zooming function, the <xref:System.Windows.Forms.DataVisualization.Charting.Cursor.IntervalType%2A> must also be set to a time value."},{"content":"For example, if the ChartArea1.AxisX.IntervalType is expressed in hours, then the ChartArea1.CursorX.IntervalType could be set to minutes.","pos":[258,396]}]}]}],"pos":[22239,23276],"yaml":true,"extradata":"MT"},{"content":"The interval type for the cursor and selected range of an axis.","nodes":[{"pos":[0,63],"content":"The interval type for the cursor and selected range of an axis.","nodes":[{"content":"The interval type for the cursor and selected range of an axis.","pos":[0,63]}]}],"pos":[23569,23633],"yaml":true},{"content":"Gets or sets a flag that enables or disables the cursor user interface.","nodes":[{"pos":[0,71],"content":"Gets or sets a flag that enables or disables the cursor user interface.","nodes":[{"content":"Gets or sets a flag that enables or disables the cursor user interface.","pos":[0,71]}]}],"pos":[24833,24905],"yaml":true},{"content":"`true` if the cursor user interface is enabled; otherwise, `false`.","nodes":[{"pos":[0,67],"content":"<ph id=\"ph1\">`true`</ph> if the cursor user interface is enabled; otherwise, <ph id=\"ph2\">`false`</ph>.","source":"`true` if the cursor user interface is enabled; otherwise, `false`."}],"pos":[25081,25151],"yaml":true},{"content":"Gets or sets a flag that enables or disables the range selection user interface.","nodes":[{"pos":[0,80],"content":"Gets or sets a flag that enables or disables the range selection user interface.","nodes":[{"content":"Gets or sets a flag that enables or disables the range selection user interface.","pos":[0,80]}]}],"pos":[26406,26487],"yaml":true},{"content":"`true` if the range selection user interface is enabled; otherwise, `false`.","nodes":[{"pos":[0,76],"content":"<ph id=\"ph1\">`true`</ph> if the range selection user interface is enabled; otherwise, <ph id=\"ph2\">`false`</ph>.","source":"`true` if the range selection user interface is enabled; otherwise, `false`."}],"pos":[26672,26751],"yaml":true},{"content":"Gets or sets the cursor line color.","nodes":[{"pos":[0,35],"content":"Gets or sets the cursor line color.","nodes":[{"content":"Gets or sets the cursor line color.","pos":[0,35]}]}],"pos":[27937,27973],"yaml":true},{"content":"The line color of the cursor. The default value is <xref href=\"System.Drawing.Color.Red\"></xref>.","nodes":[{"pos":[0,97],"content":"The line color of the cursor. The default value is <xref href=\"System.Drawing.Color.Red\"></xref>.","nodes":[{"content":"The line color of the cursor.","pos":[0,29]},{"content":"The default value is <ph id=\"ph1\">&lt;xref href=\"System.Drawing.Color.Red\"&gt;&lt;/xref&gt;</ph>.","pos":[30,97],"source":" The default value is <xref href=\"System.Drawing.Color.Red\"></xref>."}]}],"pos":[28251,28349],"yaml":true},{"content":"Gets or sets the style of the cursor line.","nodes":[{"pos":[0,42],"content":"Gets or sets the style of the cursor line.","nodes":[{"content":"Gets or sets the style of the cursor line.","pos":[0,42]}]}],"pos":[29601,29644],"yaml":true},{"content":"The style of the cursor line.","nodes":[{"pos":[0,29],"content":"The style of the cursor line.","nodes":[{"content":"The style of the cursor line.","pos":[0,29]}]}],"pos":[29926,29956],"yaml":true},{"content":"Gets or sets the line width, in pixels, of a cursor","nodes":[{"pos":[0,51],"content":"Gets or sets the line width, in pixels, of a cursor","nodes":[{"content":"Gets or sets the line width, in pixels, of a cursor","pos":[0,51]}]}],"pos":[31133,31185],"yaml":true},{"content":"Use this property to specify the line width, in pixels, of a cursor.","nodes":[{"pos":[0,68],"content":"Use this property to specify the line width, in pixels, of a cursor.","nodes":[{"content":"Use this property to specify the line width, in pixels, of a cursor.","pos":[0,68]}]}],"pos":[31196,31265],"yaml":true,"extradata":"MT"},{"content":"The line width, in pixels. The default value is one (1).","nodes":[{"pos":[0,56],"content":"The line width, in pixels. The default value is one (1).","nodes":[{"content":"The line width, in pixels. The default value is one (1).","pos":[0,56],"nodes":[{"content":"The line width, in pixels.","pos":[0,26]},{"content":"The default value is one (1).","pos":[27,56]}]}]}],"pos":[31434,31491],"yaml":true},{"content":"Gets or sets the position of a cursor.","nodes":[{"pos":[0,38],"content":"Gets or sets the position of a cursor.","nodes":[{"content":"Gets or sets the position of a cursor.","pos":[0,38]}]}],"pos":[32658,32697],"yaml":true},{"content":"This property can be used to get the position of a cursor, as well as to programmatically set the cursor position.  \n  \n The position is measured as a value of the axis that the cursor belongs to, which is determined by the <xref:System.Windows.Forms.DataVisualization.Charting.Cursor.AxisType%2A> property. For example, if the cursor belongs to the primary X axis, then setting this property to a value of January 1, 2000 will result in the X-axis cursor being drawn at the January 1, 2000 position along the axis. If this axis value does not exist, the cursor will not be displayed.  \n  \n Note that if you set this property, the <xref:System.Windows.Forms.DataVisualization.Charting.Cursor.Interval%2A> and <xref:System.Windows.Forms.DataVisualization.Charting.Cursor.IntervalOffset%2A> properties will have no effect; that is, the cursor will be displayed at this specified location.  \n  \n Setting this property will not raise the <xref:System.Windows.Forms.DataVisualization.Charting.Chart.CursorPositionChanged> or <xref:System.Windows.Forms.DataVisualization.Charting.Chart.CursorPositionChanging> events.  \n  \n Alternatively, the <xref:System.Windows.Forms.DataVisualization.Charting.Cursor.SetCursorPosition%2A> and <xref:System.Windows.Forms.DataVisualization.Charting.Cursor.SetCursorPixelPosition%2A> methods can be used to set the cursor.  \n  \n To programmatically remove a cursor, use this property to set the position of the cursor to <xref:System.Double.NaN>.","nodes":[{"pos":[0,114],"content":"This property can be used to get the position of a cursor, as well as to programmatically set the cursor position.","nodes":[{"content":"This property can be used to get the position of a cursor, as well as to programmatically set the cursor position.","pos":[0,114]}]},{"pos":[121,584],"content":"The position is measured as a value of the axis that the cursor belongs to, which is determined by the <xref:System.Windows.Forms.DataVisualization.Charting.Cursor.AxisType%2A> property. For example, if the cursor belongs to the primary X axis, then setting this property to a value of January 1, 2000 will result in the X-axis cursor being drawn at the January 1, 2000 position along the axis. If this axis value does not exist, the cursor will not be displayed.","nodes":[{"content":"The position is measured as a value of the axis that the cursor belongs to, which is determined by the <xref:System.Windows.Forms.DataVisualization.Charting.Cursor.AxisType%2A> property. For example, if the cursor belongs to the primary X axis, then setting this property to a value of January 1, 2000 will result in the X-axis cursor being drawn at the January 1, 2000 position along the axis. If this axis value does not exist, the cursor will not be displayed.","pos":[0,463],"nodes":[{"content":"The position is measured as a value of the axis that the cursor belongs to, which is determined by the <ph id=\"ph1\">&lt;xref:System.Windows.Forms.DataVisualization.Charting.Cursor.AxisType%2A&gt;</ph> property.","pos":[0,186],"source":"The position is measured as a value of the axis that the cursor belongs to, which is determined by the <xref:System.Windows.Forms.DataVisualization.Charting.Cursor.AxisType%2A> property."},{"content":"For example, if the cursor belongs to the primary X axis, then setting this property to a value of January 1, 2000 will result in the X-axis cursor being drawn at the January 1, 2000 position along the axis.","pos":[187,394]},{"content":"If this axis value does not exist, the cursor will not be displayed.","pos":[395,463]}]}]},{"pos":[591,886],"content":"Note that if you set this property, the <xref:System.Windows.Forms.DataVisualization.Charting.Cursor.Interval%2A> and <xref:System.Windows.Forms.DataVisualization.Charting.Cursor.IntervalOffset%2A> properties will have no effect; that is, the cursor will be displayed at this specified location.","nodes":[{"content":"Note that if you set this property, the <ph id=\"ph1\">&lt;xref:System.Windows.Forms.DataVisualization.Charting.Cursor.Interval%2A&gt;</ph> and <ph id=\"ph2\">&lt;xref:System.Windows.Forms.DataVisualization.Charting.Cursor.IntervalOffset%2A&gt;</ph> properties will have no effect; that is, the cursor will be displayed at this specified location.","pos":[0,295],"source":"Note that if you set this property, the <xref:System.Windows.Forms.DataVisualization.Charting.Cursor.Interval%2A> and <xref:System.Windows.Forms.DataVisualization.Charting.Cursor.IntervalOffset%2A> properties will have no effect; that is, the cursor will be displayed at this specified location."}]},{"pos":[893,1111],"content":"Setting this property will not raise the <xref:System.Windows.Forms.DataVisualization.Charting.Chart.CursorPositionChanged> or <xref:System.Windows.Forms.DataVisualization.Charting.Chart.CursorPositionChanging> events.","nodes":[{"content":"Setting this property will not raise the <ph id=\"ph1\">&lt;xref:System.Windows.Forms.DataVisualization.Charting.Chart.CursorPositionChanged&gt;</ph> or <ph id=\"ph2\">&lt;xref:System.Windows.Forms.DataVisualization.Charting.Chart.CursorPositionChanging&gt;</ph> events.","pos":[0,218],"source":"Setting this property will not raise the <xref:System.Windows.Forms.DataVisualization.Charting.Chart.CursorPositionChanged> or <xref:System.Windows.Forms.DataVisualization.Charting.Chart.CursorPositionChanging> events."}]},{"pos":[1118,1350],"content":"Alternatively, the <xref:System.Windows.Forms.DataVisualization.Charting.Cursor.SetCursorPosition%2A> and <xref:System.Windows.Forms.DataVisualization.Charting.Cursor.SetCursorPixelPosition%2A> methods can be used to set the cursor.","nodes":[{"content":"Alternatively, the <ph id=\"ph1\">&lt;xref:System.Windows.Forms.DataVisualization.Charting.Cursor.SetCursorPosition%2A&gt;</ph> and <ph id=\"ph2\">&lt;xref:System.Windows.Forms.DataVisualization.Charting.Cursor.SetCursorPixelPosition%2A&gt;</ph> methods can be used to set the cursor.","pos":[0,232],"source":"Alternatively, the <xref:System.Windows.Forms.DataVisualization.Charting.Cursor.SetCursorPosition%2A> and <xref:System.Windows.Forms.DataVisualization.Charting.Cursor.SetCursorPixelPosition%2A> methods can be used to set the cursor."}]},{"pos":[1357,1474],"content":"To programmatically remove a cursor, use this property to set the position of the cursor to <xref:System.Double.NaN>.","nodes":[{"content":"To programmatically remove a cursor, use this property to set the position of the cursor to <ph id=\"ph1\">&lt;xref:System.Double.NaN&gt;</ph>.","pos":[0,117],"source":"To programmatically remove a cursor, use this property to set the position of the cursor to <xref:System.Double.NaN>."}]}],"pos":[32708,34195],"yaml":true,"extradata":"MT"},{"content":"The position of a cursor.","nodes":[{"pos":[0,25],"content":"The position of a cursor.","nodes":[{"content":"The position of a cursor.","pos":[0,25]}]}],"pos":[34497,34523],"yaml":true},{"content":"Gets or sets a semi-transparent color that highlights a range of data.","nodes":[{"pos":[0,70],"content":"Gets or sets a semi-transparent color that highlights a range of data.","nodes":[{"content":"Gets or sets a semi-transparent color that highlights a range of data.","pos":[0,70]}]}],"pos":[35780,35851],"yaml":true},{"content":"This property determines the color of the range selection, and can be set to any valid ARGB (alpha, red, green, blue) value. If an alpha value, which determines the level of transparency, is not provided, a default alpha value of 120 is used.  \n  \n The selected color can be set for both the X and Y axis cursors, which is implemented using the <xref:System.Windows.Forms.DataVisualization.Charting.ChartArea.CursorX%2A> and <xref:System.Windows.Forms.DataVisualization.Charting.ChartArea.CursorY%2A> properties of the <xref:System.Windows.Forms.DataVisualization.Charting.ChartArea> object, respectively. If a range is only selected along the X-axis, the <xref:System.Windows.Forms.DataVisualization.Charting.Cursor.SelectionColor%2A> value for the X-axis cursor is used; if a range is only selected along the Y-axis, the <xref:System.Windows.Forms.DataVisualization.Charting.Cursor.SelectionColor%2A> value for the Y-axis cursor is used. If a range is selected along both axes, the <xref:System.Windows.Forms.DataVisualization.Charting.Cursor.SelectionColor%2A> value for the Y-axis cursor is also used for the selected color.","nodes":[{"pos":[0,242],"content":"This property determines the color of the range selection, and can be set to any valid ARGB (alpha, red, green, blue) value. If an alpha value, which determines the level of transparency, is not provided, a default alpha value of 120 is used.","nodes":[{"content":"This property determines the color of the range selection, and can be set to any valid ARGB (alpha, red, green, blue) value. If an alpha value, which determines the level of transparency, is not provided, a default alpha value of 120 is used.","pos":[0,242],"nodes":[{"content":"This property determines the color of the range selection, and can be set to any valid ARGB (alpha, red, green, blue) value.","pos":[0,124]},{"content":"If an alpha value, which determines the level of transparency, is not provided, a default alpha value of 120 is used.","pos":[125,242]}]}]},{"pos":[249,1128],"content":"The selected color can be set for both the X and Y axis cursors, which is implemented using the <xref:System.Windows.Forms.DataVisualization.Charting.ChartArea.CursorX%2A> and <xref:System.Windows.Forms.DataVisualization.Charting.ChartArea.CursorY%2A> properties of the <xref:System.Windows.Forms.DataVisualization.Charting.ChartArea> object, respectively. If a range is only selected along the X-axis, the <xref:System.Windows.Forms.DataVisualization.Charting.Cursor.SelectionColor%2A> value for the X-axis cursor is used; if a range is only selected along the Y-axis, the <xref:System.Windows.Forms.DataVisualization.Charting.Cursor.SelectionColor%2A> value for the Y-axis cursor is used. If a range is selected along both axes, the <xref:System.Windows.Forms.DataVisualization.Charting.Cursor.SelectionColor%2A> value for the Y-axis cursor is also used for the selected color.","nodes":[{"content":"The selected color can be set for both the X and Y axis cursors, which is implemented using the <xref:System.Windows.Forms.DataVisualization.Charting.ChartArea.CursorX%2A> and <xref:System.Windows.Forms.DataVisualization.Charting.ChartArea.CursorY%2A> properties of the <xref:System.Windows.Forms.DataVisualization.Charting.ChartArea> object, respectively. If a range is only selected along the X-axis, the <xref:System.Windows.Forms.DataVisualization.Charting.Cursor.SelectionColor%2A> value for the X-axis cursor is used; if a range is only selected along the Y-axis, the <xref:System.Windows.Forms.DataVisualization.Charting.Cursor.SelectionColor%2A> value for the Y-axis cursor is used. If a range is selected along both axes, the <xref:System.Windows.Forms.DataVisualization.Charting.Cursor.SelectionColor%2A> value for the Y-axis cursor is also used for the selected color.","pos":[0,879],"nodes":[{"content":"The selected color can be set for both the X and Y axis cursors, which is implemented using the <ph id=\"ph1\">&lt;xref:System.Windows.Forms.DataVisualization.Charting.ChartArea.CursorX%2A&gt;</ph> and <ph id=\"ph2\">&lt;xref:System.Windows.Forms.DataVisualization.Charting.ChartArea.CursorY%2A&gt;</ph> properties of the <ph id=\"ph3\">&lt;xref:System.Windows.Forms.DataVisualization.Charting.ChartArea&gt;</ph> object, respectively.","pos":[0,356],"source":"The selected color can be set for both the X and Y axis cursors, which is implemented using the <xref:System.Windows.Forms.DataVisualization.Charting.ChartArea.CursorX%2A> and <xref:System.Windows.Forms.DataVisualization.Charting.ChartArea.CursorY%2A> properties of the <xref:System.Windows.Forms.DataVisualization.Charting.ChartArea> object, respectively."},{"content":"If a range is only selected along the X-axis, the <ph id=\"ph1\">&lt;xref:System.Windows.Forms.DataVisualization.Charting.Cursor.SelectionColor%2A&gt;</ph> value for the X-axis cursor is used; if a range is only selected along the Y-axis, the <ph id=\"ph2\">&lt;xref:System.Windows.Forms.DataVisualization.Charting.Cursor.SelectionColor%2A&gt;</ph> value for the Y-axis cursor is used.","pos":[357,690],"source":" If a range is only selected along the X-axis, the <xref:System.Windows.Forms.DataVisualization.Charting.Cursor.SelectionColor%2A> value for the X-axis cursor is used; if a range is only selected along the Y-axis, the <xref:System.Windows.Forms.DataVisualization.Charting.Cursor.SelectionColor%2A> value for the Y-axis cursor is used."},{"content":"If a range is selected along both axes, the <ph id=\"ph1\">&lt;xref:System.Windows.Forms.DataVisualization.Charting.Cursor.SelectionColor%2A&gt;</ph> value for the Y-axis cursor is also used for the selected color.","pos":[691,879],"source":" If a range is selected along both axes, the <xref:System.Windows.Forms.DataVisualization.Charting.Cursor.SelectionColor%2A> value for the Y-axis cursor is also used for the selected color."}]}]}],"pos":[35862,36995],"yaml":true,"extradata":"MT"},{"content":"The color of the highlighted range. The default value is <xref href=\"System.Drawing.Color.LightGray\"></xref>, with an alpha value of 120.","nodes":[{"pos":[0,137],"content":"The color of the highlighted range. The default value is <xref href=\"System.Drawing.Color.LightGray\"></xref>, with an alpha value of 120.","nodes":[{"content":"The color of the highlighted range.","pos":[0,35]},{"content":"The default value is <ph id=\"ph1\">&lt;xref href=\"System.Drawing.Color.LightGray\"&gt;&lt;/xref&gt;</ph>, with an alpha value of 120.","pos":[36,137],"source":" The default value is <xref href=\"System.Drawing.Color.LightGray\"></xref>, with an alpha value of 120."}]}],"pos":[37278,37416],"yaml":true},{"content":"Gets or sets the end position of a range selection.","nodes":[{"pos":[0,51],"content":"Gets or sets the end position of a range selection.","nodes":[{"content":"Gets or sets the end position of a range selection.","pos":[0,51]}]}],"pos":[38667,38719],"yaml":true},{"content":"A user can select a range within a chart area by clicking on the left mouse button and then dragging the mouse. Note that the <xref:System.Windows.Forms.DataVisualization.Charting.Cursor.IsUserSelectionEnabled%2A> property must also be set to `true`. In addition, a range selection can be set programmatically using either the <xref:System.Windows.Forms.DataVisualization.Charting.Cursor.SelectionEnd%2A> and <xref:System.Windows.Forms.DataVisualization.Charting.Cursor.SelectionStart%2A> properties, or the <xref:System.Windows.Forms.DataVisualization.Charting.Cursor.SetSelectionPosition%2A> or <xref:System.Windows.Forms.DataVisualization.Charting.Cursor.SetSelectionPixelPosition%2A> methods.  \n  \n The end position of a range selection is calculated as a value of the axis to which the cursor belongs. For example, if the cursor belongs to the primary X-axis, and you set the <xref:System.Windows.Forms.DataVisualization.Charting.Cursor.SelectionEnd%2A> property to a value of December 31, 2000, the end of the selected area will occur at December 31, 2000 along the primary X axis.  \n  \n To programmatically remove a range selection, set the beginning and end points of the range to <xref:System.Double.NaN> using the <xref:System.Windows.Forms.DataVisualization.Charting.Cursor.SelectionEnd%2A> and <xref:System.Windows.Forms.DataVisualization.Charting.Cursor.SelectionStart%2A> properties, or use the <xref:System.Windows.Forms.DataVisualization.Charting.Cursor.SetSelectionPosition%2A> method.","nodes":[{"pos":[0,696],"content":"A user can select a range within a chart area by clicking on the left mouse button and then dragging the mouse. Note that the <xref:System.Windows.Forms.DataVisualization.Charting.Cursor.IsUserSelectionEnabled%2A> property must also be set to `true`. In addition, a range selection can be set programmatically using either the <xref:System.Windows.Forms.DataVisualization.Charting.Cursor.SelectionEnd%2A> and <xref:System.Windows.Forms.DataVisualization.Charting.Cursor.SelectionStart%2A> properties, or the <xref:System.Windows.Forms.DataVisualization.Charting.Cursor.SetSelectionPosition%2A> or <xref:System.Windows.Forms.DataVisualization.Charting.Cursor.SetSelectionPixelPosition%2A> methods.","nodes":[{"content":"A user can select a range within a chart area by clicking on the left mouse button and then dragging the mouse.","pos":[0,111]},{"content":"Note that the <ph id=\"ph1\">&lt;xref:System.Windows.Forms.DataVisualization.Charting.Cursor.IsUserSelectionEnabled%2A&gt;</ph> property must also be set to <ph id=\"ph2\">`true`</ph>.","pos":[112,250],"source":" Note that the <xref:System.Windows.Forms.DataVisualization.Charting.Cursor.IsUserSelectionEnabled%2A> property must also be set to `true`."},{"content":"In addition, a range selection can be set programmatically using either the <ph id=\"ph1\">&lt;xref:System.Windows.Forms.DataVisualization.Charting.Cursor.SelectionEnd%2A&gt;</ph> and <ph id=\"ph2\">&lt;xref:System.Windows.Forms.DataVisualization.Charting.Cursor.SelectionStart%2A&gt;</ph> properties, or the <ph id=\"ph3\">&lt;xref:System.Windows.Forms.DataVisualization.Charting.Cursor.SetSelectionPosition%2A&gt;</ph> or <ph id=\"ph4\">&lt;xref:System.Windows.Forms.DataVisualization.Charting.Cursor.SetSelectionPixelPosition%2A&gt;</ph> methods.","pos":[251,696],"source":" In addition, a range selection can be set programmatically using either the <xref:System.Windows.Forms.DataVisualization.Charting.Cursor.SelectionEnd%2A> and <xref:System.Windows.Forms.DataVisualization.Charting.Cursor.SelectionStart%2A> properties, or the <xref:System.Windows.Forms.DataVisualization.Charting.Cursor.SetSelectionPosition%2A> or <xref:System.Windows.Forms.DataVisualization.Charting.Cursor.SetSelectionPixelPosition%2A> methods."}]},{"pos":[703,1087],"content":"The end position of a range selection is calculated as a value of the axis to which the cursor belongs. For example, if the cursor belongs to the primary X-axis, and you set the <xref:System.Windows.Forms.DataVisualization.Charting.Cursor.SelectionEnd%2A> property to a value of December 31, 2000, the end of the selected area will occur at December 31, 2000 along the primary X axis.","nodes":[{"content":"The end position of a range selection is calculated as a value of the axis to which the cursor belongs. For example, if the cursor belongs to the primary X-axis, and you set the <xref:System.Windows.Forms.DataVisualization.Charting.Cursor.SelectionEnd%2A> property to a value of December 31, 2000, the end of the selected area will occur at December 31, 2000 along the primary X axis.","pos":[0,384],"nodes":[{"content":"The end position of a range selection is calculated as a value of the axis to which the cursor belongs.","pos":[0,103]},{"content":"For example, if the cursor belongs to the primary X-axis, and you set the <ph id=\"ph1\">&lt;xref:System.Windows.Forms.DataVisualization.Charting.Cursor.SelectionEnd%2A&gt;</ph> property to a value of December 31, 2000, the end of the selected area will occur at December 31, 2000 along the primary X axis.","pos":[104,384],"source":" For example, if the cursor belongs to the primary X-axis, and you set the <xref:System.Windows.Forms.DataVisualization.Charting.Cursor.SelectionEnd%2A> property to a value of December 31, 2000, the end of the selected area will occur at December 31, 2000 along the primary X axis."}]}]},{"pos":[1094,1502],"content":"To programmatically remove a range selection, set the beginning and end points of the range to <xref:System.Double.NaN> using the <xref:System.Windows.Forms.DataVisualization.Charting.Cursor.SelectionEnd%2A> and <xref:System.Windows.Forms.DataVisualization.Charting.Cursor.SelectionStart%2A> properties, or use the <xref:System.Windows.Forms.DataVisualization.Charting.Cursor.SetSelectionPosition%2A> method.","nodes":[{"content":"To programmatically remove a range selection, set the beginning and end points of the range to <ph id=\"ph1\">&lt;xref:System.Double.NaN&gt;</ph> using the <ph id=\"ph2\">&lt;xref:System.Windows.Forms.DataVisualization.Charting.Cursor.SelectionEnd%2A&gt;</ph> and <ph id=\"ph3\">&lt;xref:System.Windows.Forms.DataVisualization.Charting.Cursor.SelectionStart%2A&gt;</ph> properties, or use the <ph id=\"ph4\">&lt;xref:System.Windows.Forms.DataVisualization.Charting.Cursor.SetSelectionPosition%2A&gt;</ph> method.","pos":[0,408],"source":"To programmatically remove a range selection, set the beginning and end points of the range to <xref:System.Double.NaN> using the <xref:System.Windows.Forms.DataVisualization.Charting.Cursor.SelectionEnd%2A> and <xref:System.Windows.Forms.DataVisualization.Charting.Cursor.SelectionStart%2A> properties, or use the <xref:System.Windows.Forms.DataVisualization.Charting.Cursor.SetSelectionPosition%2A> method."}]}],"pos":[38730,40239],"yaml":true,"extradata":"MT"},{"content":"The end position of a range selection.","nodes":[{"pos":[0,38],"content":"The end position of a range selection.","nodes":[{"content":"The end position of a range selection.","pos":[0,38]}]}],"pos":[40545,40584],"yaml":true},{"content":"Gets or sets the start position of a cursor's selected range.","nodes":[{"pos":[0,61],"content":"Gets or sets the start position of a cursor's selected range.","nodes":[{"content":"Gets or sets the start position of a cursor's selected range.","pos":[0,61]}]}],"pos":[41845,41907],"yaml":true},{"content":"A user can select a range by clicking on the left mouse button and then moving the cursor position by dragging the mouse. Note that the <xref:System.Windows.Forms.DataVisualization.Charting.Cursor.IsUserSelectionEnabled%2A> property must also be set to `true`. In addition, a range selection can be set programmatically using either the <xref:System.Windows.Forms.DataVisualization.Charting.Cursor.SelectionEnd%2A> and <xref:System.Windows.Forms.DataVisualization.Charting.Cursor.SelectionStart%2A> properties, or the <xref:System.Windows.Forms.DataVisualization.Charting.Cursor.SetSelectionPosition%2A> or <xref:System.Windows.Forms.DataVisualization.Charting.Cursor.SetSelectionPixelPosition%2A> methods.  \n  \n The start position of a range selection is calculated as a value of the axis to which the cursor belongs. For example, if the cursor belongs to the primary X-axis, and you set the <xref:System.Windows.Forms.DataVisualization.Charting.Cursor.SelectionStart%2A> property to a value of January 1, 2000, the beginning of the selected area will occur at January 1, 2000 along the primary X axis.  \n  \n To programmatically remove a range selection, set the beginning and end points of the range to <xref:System.Double.NaN> using the <xref:System.Windows.Forms.DataVisualization.Charting.Cursor.SelectionEnd%2A> and <xref:System.Windows.Forms.DataVisualization.Charting.Cursor.SelectionStart%2A> properties, or use the <xref:System.Windows.Forms.DataVisualization.Charting.Cursor.SetSelectionPosition%2A> method.","nodes":[{"pos":[0,706],"content":"A user can select a range by clicking on the left mouse button and then moving the cursor position by dragging the mouse. Note that the <xref:System.Windows.Forms.DataVisualization.Charting.Cursor.IsUserSelectionEnabled%2A> property must also be set to `true`. In addition, a range selection can be set programmatically using either the <xref:System.Windows.Forms.DataVisualization.Charting.Cursor.SelectionEnd%2A> and <xref:System.Windows.Forms.DataVisualization.Charting.Cursor.SelectionStart%2A> properties, or the <xref:System.Windows.Forms.DataVisualization.Charting.Cursor.SetSelectionPosition%2A> or <xref:System.Windows.Forms.DataVisualization.Charting.Cursor.SetSelectionPixelPosition%2A> methods.","nodes":[{"content":"A user can select a range by clicking on the left mouse button and then moving the cursor position by dragging the mouse.","pos":[0,121]},{"content":"Note that the <ph id=\"ph1\">&lt;xref:System.Windows.Forms.DataVisualization.Charting.Cursor.IsUserSelectionEnabled%2A&gt;</ph> property must also be set to <ph id=\"ph2\">`true`</ph>.","pos":[122,260],"source":" Note that the <xref:System.Windows.Forms.DataVisualization.Charting.Cursor.IsUserSelectionEnabled%2A> property must also be set to `true`."},{"content":"In addition, a range selection can be set programmatically using either the <ph id=\"ph1\">&lt;xref:System.Windows.Forms.DataVisualization.Charting.Cursor.SelectionEnd%2A&gt;</ph> and <ph id=\"ph2\">&lt;xref:System.Windows.Forms.DataVisualization.Charting.Cursor.SelectionStart%2A&gt;</ph> properties, or the <ph id=\"ph3\">&lt;xref:System.Windows.Forms.DataVisualization.Charting.Cursor.SetSelectionPosition%2A&gt;</ph> or <ph id=\"ph4\">&lt;xref:System.Windows.Forms.DataVisualization.Charting.Cursor.SetSelectionPixelPosition%2A&gt;</ph> methods.","pos":[261,706],"source":" In addition, a range selection can be set programmatically using either the <xref:System.Windows.Forms.DataVisualization.Charting.Cursor.SelectionEnd%2A> and <xref:System.Windows.Forms.DataVisualization.Charting.Cursor.SelectionStart%2A> properties, or the <xref:System.Windows.Forms.DataVisualization.Charting.Cursor.SetSelectionPosition%2A> or <xref:System.Windows.Forms.DataVisualization.Charting.Cursor.SetSelectionPixelPosition%2A> methods."}]},{"pos":[713,1103],"content":"The start position of a range selection is calculated as a value of the axis to which the cursor belongs. For example, if the cursor belongs to the primary X-axis, and you set the <xref:System.Windows.Forms.DataVisualization.Charting.Cursor.SelectionStart%2A> property to a value of January 1, 2000, the beginning of the selected area will occur at January 1, 2000 along the primary X axis.","nodes":[{"content":"The start position of a range selection is calculated as a value of the axis to which the cursor belongs. For example, if the cursor belongs to the primary X-axis, and you set the <xref:System.Windows.Forms.DataVisualization.Charting.Cursor.SelectionStart%2A> property to a value of January 1, 2000, the beginning of the selected area will occur at January 1, 2000 along the primary X axis.","pos":[0,390],"nodes":[{"content":"The start position of a range selection is calculated as a value of the axis to which the cursor belongs.","pos":[0,105]},{"content":"For example, if the cursor belongs to the primary X-axis, and you set the <ph id=\"ph1\">&lt;xref:System.Windows.Forms.DataVisualization.Charting.Cursor.SelectionStart%2A&gt;</ph> property to a value of January 1, 2000, the beginning of the selected area will occur at January 1, 2000 along the primary X axis.","pos":[106,390],"source":" For example, if the cursor belongs to the primary X-axis, and you set the <xref:System.Windows.Forms.DataVisualization.Charting.Cursor.SelectionStart%2A> property to a value of January 1, 2000, the beginning of the selected area will occur at January 1, 2000 along the primary X axis."}]}]},{"pos":[1110,1518],"content":"To programmatically remove a range selection, set the beginning and end points of the range to <xref:System.Double.NaN> using the <xref:System.Windows.Forms.DataVisualization.Charting.Cursor.SelectionEnd%2A> and <xref:System.Windows.Forms.DataVisualization.Charting.Cursor.SelectionStart%2A> properties, or use the <xref:System.Windows.Forms.DataVisualization.Charting.Cursor.SetSelectionPosition%2A> method.","nodes":[{"content":"To programmatically remove a range selection, set the beginning and end points of the range to <ph id=\"ph1\">&lt;xref:System.Double.NaN&gt;</ph> using the <ph id=\"ph2\">&lt;xref:System.Windows.Forms.DataVisualization.Charting.Cursor.SelectionEnd%2A&gt;</ph> and <ph id=\"ph3\">&lt;xref:System.Windows.Forms.DataVisualization.Charting.Cursor.SelectionStart%2A&gt;</ph> properties, or use the <ph id=\"ph4\">&lt;xref:System.Windows.Forms.DataVisualization.Charting.Cursor.SetSelectionPosition%2A&gt;</ph> method.","pos":[0,408],"source":"To programmatically remove a range selection, set the beginning and end points of the range to <xref:System.Double.NaN> using the <xref:System.Windows.Forms.DataVisualization.Charting.Cursor.SelectionEnd%2A> and <xref:System.Windows.Forms.DataVisualization.Charting.Cursor.SelectionStart%2A> properties, or use the <xref:System.Windows.Forms.DataVisualization.Charting.Cursor.SetSelectionPosition%2A> method."}]}],"pos":[41918,43443],"yaml":true,"extradata":"MT"},{"content":"The start position of a cursor’s selected range.","nodes":[{"pos":[0,48],"content":"The start position of a cursor’s selected range.","nodes":[{"content":"The start position of a cursor’s selected range.","pos":[0,48]}]}],"pos":[43751,43800],"yaml":true},{"content":"Displays a cursor at the specified position. Measured in pixels.","nodes":[{"pos":[0,64],"content":"Displays a cursor at the specified position. Measured in pixels.","nodes":[{"content":"Displays a cursor at the specified position. Measured in pixels.","pos":[0,64],"nodes":[{"content":"Displays a cursor at the specified position.","pos":[0,44]},{"content":"Measured in pixels.","pos":[45,64]}]}]}],"pos":[45274,45339],"yaml":true},{"content":"A <xref href=\"System.Drawing.PointF\"></xref> structure that specifies where the cursor will be drawn.","nodes":[{"pos":[0,101],"content":"A <ph id=\"ph1\">&lt;xref href=\"System.Drawing.PointF\"&gt;&lt;/xref&gt;</ph> structure that specifies where the cursor will be drawn.","source":"A <xref href=\"System.Drawing.PointF\"></xref> structure that specifies where the cursor will be drawn."}],"pos":[45535,45637],"yaml":true},{"content":"If `true`, the cursor will be drawn along the nearest chart area boundary, if the specified position does not fall within a <xref href=\"System.Windows.Forms.DataVisualization.Charting.ChartArea\"></xref> object.","nodes":[{"pos":[0,210],"content":"If <ph id=\"ph1\">`true`</ph>, the cursor will be drawn along the nearest chart area boundary, if the specified position does not fall within a <ph id=\"ph2\">&lt;xref href=\"System.Windows.Forms.DataVisualization.Charting.ChartArea\"&gt;&lt;/xref&gt;</ph> object.","source":"If `true`, the cursor will be drawn along the nearest chart area boundary, if the specified position does not fall within a <xref href=\"System.Windows.Forms.DataVisualization.Charting.ChartArea\"></xref> object."}],"pos":[45709,45920],"yaml":true},{"content":"Sets the position of a cursor within a chart area at the specified axis value.","nodes":[{"pos":[0,78],"content":"Sets the position of a cursor within a chart area at the specified axis value.","nodes":[{"content":"Sets the position of a cursor within a chart area at the specified axis value.","pos":[0,78]}]}],"pos":[47157,47236],"yaml":true},{"content":"The new position of the cursor. Measured as a value along the relevant axis.","nodes":[{"pos":[0,76],"content":"The new position of the cursor. Measured as a value along the relevant axis.","nodes":[{"content":"The new position of the cursor. Measured as a value along the relevant axis.","pos":[0,76],"nodes":[{"content":"The new position of the cursor.","pos":[0,31]},{"content":"Measured as a value along the relevant axis.","pos":[32,76]}]}]}],"pos":[47394,47471],"yaml":true},{"content":"Sets the start and end positions of a range selection.","nodes":[{"pos":[0,54],"content":"Sets the start and end positions of a range selection.","nodes":[{"content":"Sets the start and end positions of a range selection.","pos":[0,54]}]}],"pos":[48937,48992],"yaml":true},{"content":"A <xref href=\"System.Drawing.PointF\"></xref> structure that specifies where the range selection begins.","nodes":[{"pos":[0,103],"content":"A <ph id=\"ph1\">&lt;xref href=\"System.Drawing.PointF\"&gt;&lt;/xref&gt;</ph> structure that specifies where the range selection begins.","source":"A <xref href=\"System.Drawing.PointF\"></xref> structure that specifies where the range selection begins."}],"pos":[49233,49337],"yaml":true},{"content":"A <xref href=\"System.Drawing.PointF\"></xref> structure that specifies where the range selection ends.","nodes":[{"pos":[0,101],"content":"A <ph id=\"ph1\">&lt;xref href=\"System.Drawing.PointF\"&gt;&lt;/xref&gt;</ph> structure that specifies where the range selection ends.","source":"A <xref href=\"System.Drawing.PointF\"></xref> structure that specifies where the range selection ends."}],"pos":[49409,49511],"yaml":true},{"content":"If `true`, the start and end points will be rounded to the nearest chart area boundary if the specified positions do not fall within a <xref href=\"System.Windows.Forms.DataVisualization.Charting.ChartArea\"></xref> object.","nodes":[{"pos":[0,221],"content":"If <ph id=\"ph1\">`true`</ph>, the start and end points will be rounded to the nearest chart area boundary if the specified positions do not fall within a <ph id=\"ph2\">&lt;xref href=\"System.Windows.Forms.DataVisualization.Charting.ChartArea\"&gt;&lt;/xref&gt;</ph> object.","source":"If `true`, the start and end points will be rounded to the nearest chart area boundary if the specified positions do not fall within a <xref href=\"System.Windows.Forms.DataVisualization.Charting.ChartArea\"></xref> object."}],"pos":[49583,49805],"yaml":true},{"content":"Sets the position of a selected range within a chart area at the specified axis values.","nodes":[{"pos":[0,87],"content":"Sets the position of a selected range within a chart area at the specified axis values.","nodes":[{"content":"Sets the position of a selected range within a chart area at the specified axis values.","pos":[0,87]}]}],"pos":[51129,51217],"yaml":true},{"content":"The new start position of the range selection. Measured as a value along the relevant axis.","nodes":[{"pos":[0,91],"content":"The new start position of the range selection. Measured as a value along the relevant axis.","nodes":[{"content":"The new start position of the range selection. Measured as a value along the relevant axis.","pos":[0,91],"nodes":[{"content":"The new start position of the range selection.","pos":[0,46]},{"content":"Measured as a value along the relevant axis.","pos":[47,91]}]}]}],"pos":[51387,51479],"yaml":true},{"content":"The new end position of the range selection. Measured as a value along the relevant axis.","nodes":[{"pos":[0,89],"content":"The new end position of the range selection. Measured as a value along the relevant axis.","nodes":[{"content":"The new end position of the range selection. Measured as a value along the relevant axis.","pos":[0,89],"nodes":[{"content":"The new end position of the range selection.","pos":[0,44]},{"content":"Measured as a value along the relevant axis.","pos":[45,89]}]}]}],"pos":[51541,51631],"yaml":true}],"content":"### YamlMime:ManagedReference\nitems:\n- uid: System.Windows.Forms.DataVisualization.Charting.Cursor\n  commentId: T:System.Windows.Forms.DataVisualization.Charting.Cursor\n  id: Cursor\n  children:\n  - System.Windows.Forms.DataVisualization.Charting.Cursor.#ctor\n  - System.Windows.Forms.DataVisualization.Charting.Cursor.AutoScroll\n  - System.Windows.Forms.DataVisualization.Charting.Cursor.AxisType\n  - System.Windows.Forms.DataVisualization.Charting.Cursor.Dispose\n  - System.Windows.Forms.DataVisualization.Charting.Cursor.Dispose(System.Boolean)\n  - System.Windows.Forms.DataVisualization.Charting.Cursor.Interval\n  - System.Windows.Forms.DataVisualization.Charting.Cursor.IntervalOffset\n  - System.Windows.Forms.DataVisualization.Charting.Cursor.IntervalOffsetType\n  - System.Windows.Forms.DataVisualization.Charting.Cursor.IntervalType\n  - System.Windows.Forms.DataVisualization.Charting.Cursor.IsUserEnabled\n  - System.Windows.Forms.DataVisualization.Charting.Cursor.IsUserSelectionEnabled\n  - System.Windows.Forms.DataVisualization.Charting.Cursor.LineColor\n  - System.Windows.Forms.DataVisualization.Charting.Cursor.LineDashStyle\n  - System.Windows.Forms.DataVisualization.Charting.Cursor.LineWidth\n  - System.Windows.Forms.DataVisualization.Charting.Cursor.Position\n  - System.Windows.Forms.DataVisualization.Charting.Cursor.SelectionColor\n  - System.Windows.Forms.DataVisualization.Charting.Cursor.SelectionEnd\n  - System.Windows.Forms.DataVisualization.Charting.Cursor.SelectionStart\n  - System.Windows.Forms.DataVisualization.Charting.Cursor.SetCursorPixelPosition(System.Drawing.PointF,System.Boolean)\n  - System.Windows.Forms.DataVisualization.Charting.Cursor.SetCursorPosition(System.Double)\n  - System.Windows.Forms.DataVisualization.Charting.Cursor.SetSelectionPixelPosition(System.Drawing.PointF,System.Drawing.PointF,System.Boolean)\n  - System.Windows.Forms.DataVisualization.Charting.Cursor.SetSelectionPosition(System.Double,System.Double)\n  langs:\n  - csharp\n  name: Cursor\n  nameWithType: Cursor\n  fullName: System.Windows.Forms.DataVisualization.Charting.Cursor\n  type: Class\n  assemblies:\n  - System.Windows.Forms.DataVisualization\n  namespace: System.Windows.Forms.DataVisualization.Charting\n  summary: Represents a horizontal or vertical line that defines a position along an axis.\n  remarks: \"A cursor is a horizontal or vertical line that defines a position along an axis. A range selection is a range along an axis that is defined by a beginning and end position, and is displayed using a semi-transparent color.  \\n  \\n Cursors and range selections are both implemented by the <xref:System.Windows.Forms.DataVisualization.Charting.Cursor> class, which is exposed as the <xref:System.Windows.Forms.DataVisualization.Charting.ChartArea.CursorX%2A> and <xref:System.Windows.Forms.DataVisualization.Charting.ChartArea.CursorY%2A> properties of the <xref:System.Windows.Forms.DataVisualization.Charting.ChartArea> object. The <xref:System.Windows.Forms.DataVisualization.Charting.ChartArea.CursorX%2A> object is for the X axis of a chart area, and the <xref:System.Windows.Forms.DataVisualization.Charting.ChartArea.CursorY%2A> object is for the Y axis. The <xref:System.Windows.Forms.DataVisualization.Charting.Cursor.AxisType%2A> property of these objects determines whether the associated axis is primary or secondary.  \\n  \\n The only cursor and range selection functionality found outside the <xref:System.Windows.Forms.DataVisualization.Charting.Cursor> class are the events related to the cursor and range selection that are in the root <xref:System.Windows.Forms.DataVisualization.Charting.Chart> object.\"\n  syntax:\n    content: 'public class Cursor : IDisposable'\n  inheritance:\n  - System.Object\n  implements:\n  - System.IDisposable\n  inheritedMembers:\n  - System.Object.Equals(System.Object)\n  - System.Object.Equals(System.Object,System.Object)\n  - System.Object.GetHashCode\n  - System.Object.GetType\n  - System.Object.MemberwiseClone\n  - System.Object.ReferenceEquals(System.Object,System.Object)\n  - System.Object.ToString\n  attributes: []\n  version:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Windows.Forms.DataVisualization.Charting/Cursor.xml\n  ms.technology:\n  - dotnet-winforms\n  ms.author: mblythe\n  manager: mblythe\n- uid: System.Windows.Forms.DataVisualization.Charting.Cursor.#ctor\n  commentId: M:System.Windows.Forms.DataVisualization.Charting.Cursor.#ctor\n  id: '#ctor'\n  parent: System.Windows.Forms.DataVisualization.Charting.Cursor\n  langs:\n  - csharp\n  name: Cursor()\n  nameWithType: Cursor.Cursor()\n  fullName: Cursor.Cursor()\n  type: Constructor\n  assemblies:\n  - System.Windows.Forms.DataVisualization\n  namespace: System.Windows.Forms.DataVisualization.Charting\n  summary: Initializes a new instance of the <xref href=\"System.Windows.Forms.DataVisualization.Charting.Cursor\"></xref> class.\n  syntax:\n    content: public Cursor ();\n    parameters: []\n  overload: System.Windows.Forms.DataVisualization.Charting.Cursor.#ctor*\n  exceptions: []\n  version:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Windows.Forms.DataVisualization.Charting/Cursor.xml\n  ms.technology:\n  - dotnet-winforms\n  ms.author: mblythe\n  manager: mblythe\n- uid: System.Windows.Forms.DataVisualization.Charting.Cursor.AutoScroll\n  commentId: P:System.Windows.Forms.DataVisualization.Charting.Cursor.AutoScroll\n  id: AutoScroll\n  parent: System.Windows.Forms.DataVisualization.Charting.Cursor\n  langs:\n  - csharp\n  name: AutoScroll\n  nameWithType: Cursor.AutoScroll\n  fullName: Cursor.AutoScroll\n  type: Property\n  assemblies:\n  - System.Windows.Forms.DataVisualization\n  namespace: System.Windows.Forms.DataVisualization.Charting\n  summary: Gets or sets a flag that determines whether scrolling will occur if a range selection operation extends beyond a boundary of the chart area.\n  remarks: \"If a data view does not display all data points in a plotted series and a range is being selected by the user, automatic scrolling of the view will occur if this property is `true` and the mouse—and therefore the cursor—is moved outside the chart area boundary.  \\n  \\n Scrolling will only occur along an axis if there is more data available to be viewed.  \\n  \\n A data view that does not display all data usually results if the end-user zooms into a subset of data. Views and zooming are implemented by the <xref:System.Windows.Forms.DataVisualization.Charting.AxisScaleView> class.\"\n  syntax:\n    content: >-\n      [System.ComponentModel.Bindable(true)]\n\n      public bool AutoScroll { get; set; }\n    return:\n      type: System.Boolean\n      description: '`true` if the data view can be scrolled automatically; otherwise, `false`.'\n  overload: System.Windows.Forms.DataVisualization.Charting.Cursor.AutoScroll*\n  exceptions: []\n  attributes:\n  - type: System.ComponentModel.BindableAttribute\n  version:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Windows.Forms.DataVisualization.Charting/Cursor.xml\n  ms.technology:\n  - dotnet-winforms\n  ms.author: mblythe\n  manager: mblythe\n- uid: System.Windows.Forms.DataVisualization.Charting.Cursor.AxisType\n  commentId: P:System.Windows.Forms.DataVisualization.Charting.Cursor.AxisType\n  id: AxisType\n  parent: System.Windows.Forms.DataVisualization.Charting.Cursor\n  langs:\n  - csharp\n  name: AxisType\n  nameWithType: Cursor.AxisType\n  fullName: Cursor.AxisType\n  type: Property\n  assemblies:\n  - System.Windows.Forms.DataVisualization\n  namespace: System.Windows.Forms.DataVisualization.Charting\n  summary: Gets or sets the type of axis that the cursor is attached to.\n  remarks: \"There are two sets of axes: primary and secondary. Primary axes for all charts except the bar charts are located at the bottom (primary X-axis) and left (primary Y-axis) border of the chart area.  \\n  \\n The secondary axes are located at the right (secondary X-axis) and top (secondary Y-axis) border of the chart area.  \\n  \\n> [!NOTE]\\n>  If all series plotted within a chart area use only one type of axis (for example, the primary X-axis), then setting this property to an axis type not used by the series (in this case, the secondary X-axis) will have no effect; the cursor will automatically be attached to the only axis being used to plot the series.\"\n  syntax:\n    content: >-\n      [System.ComponentModel.Bindable(true)]\n\n      public System.Windows.Forms.DataVisualization.Charting.AxisType AxisType { get; set; }\n    return:\n      type: System.Windows.Forms.DataVisualization.Charting.AxisType\n      description: An <xref href=\"System.Windows.Forms.DataVisualization.Charting.AxisType\"></xref> enumeration value that represents whether the axis is attached to the primary or secondary axis.\n  overload: System.Windows.Forms.DataVisualization.Charting.Cursor.AxisType*\n  exceptions: []\n  attributes:\n  - type: System.ComponentModel.BindableAttribute\n  version:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Windows.Forms.DataVisualization.Charting/Cursor.xml\n  ms.technology:\n  - dotnet-winforms\n  ms.author: mblythe\n  manager: mblythe\n- uid: System.Windows.Forms.DataVisualization.Charting.Cursor.Dispose\n  commentId: M:System.Windows.Forms.DataVisualization.Charting.Cursor.Dispose\n  id: Dispose\n  parent: System.Windows.Forms.DataVisualization.Charting.Cursor\n  langs:\n  - csharp\n  name: Dispose()\n  nameWithType: Cursor.Dispose()\n  fullName: Cursor.Dispose()\n  type: Method\n  assemblies:\n  - System.Windows.Forms.DataVisualization\n  namespace: System.Windows.Forms.DataVisualization.Charting\n  summary: Performs application-defined tasks that free, release, or reset unmanaged resources.\n  syntax:\n    content: public void Dispose ();\n    parameters: []\n  overload: System.Windows.Forms.DataVisualization.Charting.Cursor.Dispose*\n  exceptions: []\n  version:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Windows.Forms.DataVisualization.Charting/Cursor.xml\n  ms.technology:\n  - dotnet-winforms\n  ms.author: mblythe\n  manager: mblythe\n- uid: System.Windows.Forms.DataVisualization.Charting.Cursor.Dispose(System.Boolean)\n  commentId: M:System.Windows.Forms.DataVisualization.Charting.Cursor.Dispose(System.Boolean)\n  id: Dispose(System.Boolean)\n  parent: System.Windows.Forms.DataVisualization.Charting.Cursor\n  langs:\n  - csharp\n  name: Dispose(Boolean)\n  nameWithType: Cursor.Dispose(Boolean)\n  fullName: Cursor.Dispose(Boolean)\n  type: Method\n  assemblies:\n  - System.Windows.Forms.DataVisualization\n  namespace: System.Windows.Forms.DataVisualization.Charting\n  summary: Releases unmanaged and, optionally, managed resources.\n  syntax:\n    content: protected virtual void Dispose (bool disposing);\n    parameters:\n    - id: disposing\n      type: System.Boolean\n      description: '`true` to release both unmanaged and managed resources; `false` to release only unmanaged resources.'\n  overload: System.Windows.Forms.DataVisualization.Charting.Cursor.Dispose*\n  exceptions: []\n  version:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Windows.Forms.DataVisualization.Charting/Cursor.xml\n  ms.technology:\n  - dotnet-winforms\n  ms.author: mblythe\n  manager: mblythe\n- uid: System.Windows.Forms.DataVisualization.Charting.Cursor.Interval\n  commentId: P:System.Windows.Forms.DataVisualization.Charting.Cursor.Interval\n  id: Interval\n  parent: System.Windows.Forms.DataVisualization.Charting.Cursor\n  langs:\n  - csharp\n  name: Interval\n  nameWithType: Cursor.Interval\n  fullName: Cursor.Interval\n  type: Property\n  assemblies:\n  - System.Windows.Forms.DataVisualization\n  namespace: System.Windows.Forms.DataVisualization.Charting\n  summary: Gets or sets the cursor interval.\n  remarks: \"The <xref:System.Windows.Forms.DataVisualization.Charting.Cursor.Interval%2A> property determines how often and where a cursor can be drawn by an end user, as well as where the beginning and end points of a range selection can be drawn. A value of zero, which is the default value, signifies that a cursor or range selection can be drawn anywhere within a chart area. A nonzero value signifies that the cursor or beginning and/or end points of a selected range will only be drawn at the specified interval when set by user interaction.  \\n  \\n The unit of measurement is determined by the <xref:System.Windows.Forms.DataVisualization.Charting.Cursor.IntervalType%2A> property.  \\n  \\n This property can also be used in conjunction with the <xref:System.Windows.Forms.DataVisualization.Charting.Cursor.IntervalOffset%2A> property, which allows you to specify an offset from the specified interval. For example, to allow a cursor to only be displayed every Saturday, an interval of 1 week should be specified, along with an interval offset of 6 days. In .NET Framework, Sunday is considered to be the first day of the week.  \\n  \\n If the cursor user interface is enabled by setting the <xref:System.Windows.Forms.DataVisualization.Charting.Cursor.IsUserEnabled%2A> property, and the mouse is clicked inside a chart area, the position of the cursor will be set to the nearest allowable location.  \\n  \\n> [!IMPORTANT]\\n>  The <xref:System.Windows.Forms.DataVisualization.Charting.Cursor.Interval%2A> property has no effect if you set the position of a cursor or range selection programmatically.\"\n  syntax:\n    content: >-\n      [System.ComponentModel.Bindable(true)]\n\n      public double Interval { get; set; }\n    return:\n      type: System.Double\n      description: The cursor interval.\n  overload: System.Windows.Forms.DataVisualization.Charting.Cursor.Interval*\n  exceptions: []\n  attributes:\n  - type: System.ComponentModel.BindableAttribute\n  version:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Windows.Forms.DataVisualization.Charting/Cursor.xml\n  ms.technology:\n  - dotnet-winforms\n  ms.author: mblythe\n  manager: mblythe\n- uid: System.Windows.Forms.DataVisualization.Charting.Cursor.IntervalOffset\n  commentId: P:System.Windows.Forms.DataVisualization.Charting.Cursor.IntervalOffset\n  id: IntervalOffset\n  parent: System.Windows.Forms.DataVisualization.Charting.Cursor\n  langs:\n  - csharp\n  name: IntervalOffset\n  nameWithType: Cursor.IntervalOffset\n  fullName: Cursor.IntervalOffset\n  type: Property\n  assemblies:\n  - System.Windows.Forms.DataVisualization\n  namespace: System.Windows.Forms.DataVisualization.Charting\n  summary: Gets or sets the interval offset, which affects where the cursor and range selection can be drawn when they are set by a user.\n  remarks: \"The <xref:System.Windows.Forms.DataVisualization.Charting.Cursor.IntervalOffset%2A> property determines the interval offset of a cursor and the beginning and/or end points of a range selection. In conjunction with the <xref:System.Windows.Forms.DataVisualization.Charting.Cursor.Interval%2A> property, this property determines where a cursor and range can be displayed within a chart area. A value of zero, which is the default, signifies that there is no offset.  \\n  \\n The unit of measurement is determined by the <xref:System.Windows.Forms.DataVisualization.Charting.Cursor.IntervalOffsetType%2A> property.  \\n  \\n The offset affects the locations at which a cursor and the beginning and/or end points of a range selection can be drawn. For example, to allow a cursor to only be displayed every Saturday, an interval of 1 week should be specified, along with an interval offset of 6 days. In .NET Framework, Sunday is considered to be the first day of the week.  \\n  \\n If the cursor user interface is enabled by setting the <xref:System.Windows.Forms.DataVisualization.Charting.Cursor.IsUserEnabled%2A> property, and the mouse is clicked inside a chart area, the position of the cursor will be set to the nearest allowable location.  \\n  \\n> [!IMPORTANT]\\n>  Interval-related properties have no effect when a range selection or cursor position are set programmatically.\"\n  syntax:\n    content: >-\n      [System.ComponentModel.Bindable(true)]\n\n      public double IntervalOffset { get; set; }\n    return:\n      type: System.Double\n      description: The offset from the interval. The default value is zero, which signifies no limitations, and negative values are allowed.\n  overload: System.Windows.Forms.DataVisualization.Charting.Cursor.IntervalOffset*\n  exceptions: []\n  attributes:\n  - type: System.ComponentModel.BindableAttribute\n  version:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Windows.Forms.DataVisualization.Charting/Cursor.xml\n  ms.technology:\n  - dotnet-winforms\n  ms.author: mblythe\n  manager: mblythe\n- uid: System.Windows.Forms.DataVisualization.Charting.Cursor.IntervalOffsetType\n  commentId: P:System.Windows.Forms.DataVisualization.Charting.Cursor.IntervalOffsetType\n  id: IntervalOffsetType\n  parent: System.Windows.Forms.DataVisualization.Charting.Cursor\n  langs:\n  - csharp\n  name: IntervalOffsetType\n  nameWithType: Cursor.IntervalOffsetType\n  fullName: Cursor.IntervalOffsetType\n  type: Property\n  assemblies:\n  - System.Windows.Forms.DataVisualization\n  namespace: System.Windows.Forms.DataVisualization.Charting\n  summary: Gets or sets the interval offset type of a cursor and selected range for an axis.\n  remarks: \"The <xref:System.Windows.Forms.DataVisualization.Charting.Cursor.IntervalOffsetType%2A> property determines the type of interval offset, which is specified using the <xref:System.Windows.Forms.DataVisualization.Charting.Cursor.IntervalOffset%2A> property.  \\n  \\n If the <xref:System.Windows.Forms.DataVisualization.Charting.Cursor.IntervalOffsetType%2A> property is set to <xref:System.Windows.Forms.DataVisualization.Charting.DateTimeIntervalType.Auto>, the <xref:System.Windows.Forms.DataVisualization.Charting.Cursor.IntervalType%2A> property setting will be used.  \\n  \\n> [!NOTE]\\n>  Interval-related properties have no effect when a range selection or cursor position are set programmatically.\"\n  syntax:\n    content: >-\n      [System.ComponentModel.Bindable(true)]\n\n      public System.Windows.Forms.DataVisualization.Charting.DateTimeIntervalType IntervalOffsetType { get; set; }\n    return:\n      type: System.Windows.Forms.DataVisualization.Charting.DateTimeIntervalType\n      description: A <xref href=\"System.Windows.Forms.DataVisualization.Charting.DateTimeIntervalType\"></xref> enumeration value that determines the unit of measurement for the interval offset.\n  overload: System.Windows.Forms.DataVisualization.Charting.Cursor.IntervalOffsetType*\n  exceptions: []\n  attributes:\n  - type: System.ComponentModel.BindableAttribute\n  version:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Windows.Forms.DataVisualization.Charting/Cursor.xml\n  ms.technology:\n  - dotnet-winforms\n  ms.author: mblythe\n  manager: mblythe\n- uid: System.Windows.Forms.DataVisualization.Charting.Cursor.IntervalType\n  commentId: P:System.Windows.Forms.DataVisualization.Charting.Cursor.IntervalType\n  id: IntervalType\n  parent: System.Windows.Forms.DataVisualization.Charting.Cursor\n  langs:\n  - csharp\n  name: IntervalType\n  nameWithType: Cursor.IntervalType\n  fullName: Cursor.IntervalType\n  type: Property\n  assemblies:\n  - System.Windows.Forms.DataVisualization\n  namespace: System.Windows.Forms.DataVisualization.Charting\n  summary: Gets or sets the interval type for the cursor and selected range of an axis.\n  remarks: \"The <xref:System.Windows.Forms.DataVisualization.Charting.Cursor.IntervalType%2A> property determines the type of interval, which is specified using the <xref:System.Windows.Forms.DataVisualization.Charting.Cursor.Interval%2A> property.  \\n  \\n If the interval type is <xref:System.Windows.Forms.DataVisualization.Charting.DateTimeIntervalType.Auto>, the unit of measurement for the interval is treated as a `double`, which is equivalent to one day when <xref:System.DateTime> values are specified.  \\n  \\n> [!NOTE]\\n>  Interval-related properties have no effect when a range selection or cursor position is set programmatically.  \\n  \\n If the axis interval type represents a time—for example, hours, minutes, and so forth—then in order to correctly enable the zooming function, the <xref:System.Windows.Forms.DataVisualization.Charting.Cursor.IntervalType%2A> must also be set to a time value. For example, if the ChartArea1.AxisX.IntervalType is expressed in hours, then the ChartArea1.CursorX.IntervalType could be set to minutes.\"\n  syntax:\n    content: >-\n      [System.ComponentModel.Bindable(true)]\n\n      public System.Windows.Forms.DataVisualization.Charting.DateTimeIntervalType IntervalType { get; set; }\n    return:\n      type: System.Windows.Forms.DataVisualization.Charting.DateTimeIntervalType\n      description: The interval type for the cursor and selected range of an axis.\n  overload: System.Windows.Forms.DataVisualization.Charting.Cursor.IntervalType*\n  exceptions: []\n  attributes:\n  - type: System.ComponentModel.BindableAttribute\n  version:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Windows.Forms.DataVisualization.Charting/Cursor.xml\n  ms.technology:\n  - dotnet-winforms\n  ms.author: mblythe\n  manager: mblythe\n- uid: System.Windows.Forms.DataVisualization.Charting.Cursor.IsUserEnabled\n  commentId: P:System.Windows.Forms.DataVisualization.Charting.Cursor.IsUserEnabled\n  id: IsUserEnabled\n  parent: System.Windows.Forms.DataVisualization.Charting.Cursor\n  langs:\n  - csharp\n  name: IsUserEnabled\n  nameWithType: Cursor.IsUserEnabled\n  fullName: Cursor.IsUserEnabled\n  type: Property\n  assemblies:\n  - System.Windows.Forms.DataVisualization\n  namespace: System.Windows.Forms.DataVisualization.Charting\n  summary: Gets or sets a flag that enables or disables the cursor user interface.\n  syntax:\n    content: >-\n      [System.ComponentModel.Bindable(true)]\n\n      public bool IsUserEnabled { get; set; }\n    return:\n      type: System.Boolean\n      description: '`true` if the cursor user interface is enabled; otherwise, `false`.'\n  overload: System.Windows.Forms.DataVisualization.Charting.Cursor.IsUserEnabled*\n  exceptions: []\n  attributes:\n  - type: System.ComponentModel.BindableAttribute\n  version:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Windows.Forms.DataVisualization.Charting/Cursor.xml\n  ms.technology:\n  - dotnet-winforms\n  ms.author: mblythe\n  manager: mblythe\n- uid: System.Windows.Forms.DataVisualization.Charting.Cursor.IsUserSelectionEnabled\n  commentId: P:System.Windows.Forms.DataVisualization.Charting.Cursor.IsUserSelectionEnabled\n  id: IsUserSelectionEnabled\n  parent: System.Windows.Forms.DataVisualization.Charting.Cursor\n  langs:\n  - csharp\n  name: IsUserSelectionEnabled\n  nameWithType: Cursor.IsUserSelectionEnabled\n  fullName: Cursor.IsUserSelectionEnabled\n  type: Property\n  assemblies:\n  - System.Windows.Forms.DataVisualization\n  namespace: System.Windows.Forms.DataVisualization.Charting\n  summary: Gets or sets a flag that enables or disables the range selection user interface.\n  syntax:\n    content: >-\n      [System.ComponentModel.Bindable(true)]\n\n      public bool IsUserSelectionEnabled { get; set; }\n    return:\n      type: System.Boolean\n      description: '`true` if the range selection user interface is enabled; otherwise, `false`.'\n  overload: System.Windows.Forms.DataVisualization.Charting.Cursor.IsUserSelectionEnabled*\n  exceptions: []\n  attributes:\n  - type: System.ComponentModel.BindableAttribute\n  version:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Windows.Forms.DataVisualization.Charting/Cursor.xml\n  ms.technology:\n  - dotnet-winforms\n  ms.author: mblythe\n  manager: mblythe\n- uid: System.Windows.Forms.DataVisualization.Charting.Cursor.LineColor\n  commentId: P:System.Windows.Forms.DataVisualization.Charting.Cursor.LineColor\n  id: LineColor\n  parent: System.Windows.Forms.DataVisualization.Charting.Cursor\n  langs:\n  - csharp\n  name: LineColor\n  nameWithType: Cursor.LineColor\n  fullName: Cursor.LineColor\n  type: Property\n  assemblies:\n  - System.Windows.Forms.DataVisualization\n  namespace: System.Windows.Forms.DataVisualization.Charting\n  summary: Gets or sets the cursor line color.\n  syntax:\n    content: >-\n      [System.ComponentModel.Bindable(true)]\n\n      [System.ComponentModel.TypeConverter(typeof(System.Drawing.ColorConverter))]\n\n      public System.Drawing.Color LineColor { get; set; }\n    return:\n      type: System.Drawing.Color\n      description: The line color of the cursor. The default value is <xref href=\"System.Drawing.Color.Red\"></xref>.\n  overload: System.Windows.Forms.DataVisualization.Charting.Cursor.LineColor*\n  exceptions: []\n  attributes:\n  - type: System.ComponentModel.BindableAttribute\n  - type: System.ComponentModel.TypeConverterAttribute\n  version:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Windows.Forms.DataVisualization.Charting/Cursor.xml\n  ms.technology:\n  - dotnet-winforms\n  ms.author: mblythe\n  manager: mblythe\n- uid: System.Windows.Forms.DataVisualization.Charting.Cursor.LineDashStyle\n  commentId: P:System.Windows.Forms.DataVisualization.Charting.Cursor.LineDashStyle\n  id: LineDashStyle\n  parent: System.Windows.Forms.DataVisualization.Charting.Cursor\n  langs:\n  - csharp\n  name: LineDashStyle\n  nameWithType: Cursor.LineDashStyle\n  fullName: Cursor.LineDashStyle\n  type: Property\n  assemblies:\n  - System.Windows.Forms.DataVisualization\n  namespace: System.Windows.Forms.DataVisualization.Charting\n  summary: Gets or sets the style of the cursor line.\n  syntax:\n    content: >-\n      [System.ComponentModel.Bindable(true)]\n\n      public System.Windows.Forms.DataVisualization.Charting.ChartDashStyle LineDashStyle { get; set; }\n    return:\n      type: System.Windows.Forms.DataVisualization.Charting.ChartDashStyle\n      description: The style of the cursor line.\n  overload: System.Windows.Forms.DataVisualization.Charting.Cursor.LineDashStyle*\n  exceptions: []\n  attributes:\n  - type: System.ComponentModel.BindableAttribute\n  version:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Windows.Forms.DataVisualization.Charting/Cursor.xml\n  ms.technology:\n  - dotnet-winforms\n  ms.author: mblythe\n  manager: mblythe\n- uid: System.Windows.Forms.DataVisualization.Charting.Cursor.LineWidth\n  commentId: P:System.Windows.Forms.DataVisualization.Charting.Cursor.LineWidth\n  id: LineWidth\n  parent: System.Windows.Forms.DataVisualization.Charting.Cursor\n  langs:\n  - csharp\n  name: LineWidth\n  nameWithType: Cursor.LineWidth\n  fullName: Cursor.LineWidth\n  type: Property\n  assemblies:\n  - System.Windows.Forms.DataVisualization\n  namespace: System.Windows.Forms.DataVisualization.Charting\n  summary: Gets or sets the line width, in pixels, of a cursor\n  remarks: Use this property to specify the line width, in pixels, of a cursor.\n  syntax:\n    content: >-\n      [System.ComponentModel.Bindable(true)]\n\n      public int LineWidth { get; set; }\n    return:\n      type: System.Int32\n      description: The line width, in pixels. The default value is one (1).\n  overload: System.Windows.Forms.DataVisualization.Charting.Cursor.LineWidth*\n  exceptions: []\n  attributes:\n  - type: System.ComponentModel.BindableAttribute\n  version:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Windows.Forms.DataVisualization.Charting/Cursor.xml\n  ms.technology:\n  - dotnet-winforms\n  ms.author: mblythe\n  manager: mblythe\n- uid: System.Windows.Forms.DataVisualization.Charting.Cursor.Position\n  commentId: P:System.Windows.Forms.DataVisualization.Charting.Cursor.Position\n  id: Position\n  parent: System.Windows.Forms.DataVisualization.Charting.Cursor\n  langs:\n  - csharp\n  name: Position\n  nameWithType: Cursor.Position\n  fullName: Cursor.Position\n  type: Property\n  assemblies:\n  - System.Windows.Forms.DataVisualization\n  namespace: System.Windows.Forms.DataVisualization.Charting\n  summary: Gets or sets the position of a cursor.\n  remarks: \"This property can be used to get the position of a cursor, as well as to programmatically set the cursor position.  \\n  \\n The position is measured as a value of the axis that the cursor belongs to, which is determined by the <xref:System.Windows.Forms.DataVisualization.Charting.Cursor.AxisType%2A> property. For example, if the cursor belongs to the primary X axis, then setting this property to a value of January 1, 2000 will result in the X-axis cursor being drawn at the January 1, 2000 position along the axis. If this axis value does not exist, the cursor will not be displayed.  \\n  \\n Note that if you set this property, the <xref:System.Windows.Forms.DataVisualization.Charting.Cursor.Interval%2A> and <xref:System.Windows.Forms.DataVisualization.Charting.Cursor.IntervalOffset%2A> properties will have no effect; that is, the cursor will be displayed at this specified location.  \\n  \\n Setting this property will not raise the <xref:System.Windows.Forms.DataVisualization.Charting.Chart.CursorPositionChanged> or <xref:System.Windows.Forms.DataVisualization.Charting.Chart.CursorPositionChanging> events.  \\n  \\n Alternatively, the <xref:System.Windows.Forms.DataVisualization.Charting.Cursor.SetCursorPosition%2A> and <xref:System.Windows.Forms.DataVisualization.Charting.Cursor.SetCursorPixelPosition%2A> methods can be used to set the cursor.  \\n  \\n To programmatically remove a cursor, use this property to set the position of the cursor to <xref:System.Double.NaN>.\"\n  syntax:\n    content: >-\n      [System.ComponentModel.Bindable(true)]\n\n      [System.ComponentModel.TypeConverter(typeof(System.Windows.Forms.DataVisualization.Charting.DoubleDateNanValueConverter))]\n\n      public double Position { get; set; }\n    return:\n      type: System.Double\n      description: The position of a cursor.\n  overload: System.Windows.Forms.DataVisualization.Charting.Cursor.Position*\n  exceptions: []\n  attributes:\n  - type: System.ComponentModel.BindableAttribute\n  - type: System.ComponentModel.TypeConverterAttribute\n  version:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Windows.Forms.DataVisualization.Charting/Cursor.xml\n  ms.technology:\n  - dotnet-winforms\n  ms.author: mblythe\n  manager: mblythe\n- uid: System.Windows.Forms.DataVisualization.Charting.Cursor.SelectionColor\n  commentId: P:System.Windows.Forms.DataVisualization.Charting.Cursor.SelectionColor\n  id: SelectionColor\n  parent: System.Windows.Forms.DataVisualization.Charting.Cursor\n  langs:\n  - csharp\n  name: SelectionColor\n  nameWithType: Cursor.SelectionColor\n  fullName: Cursor.SelectionColor\n  type: Property\n  assemblies:\n  - System.Windows.Forms.DataVisualization\n  namespace: System.Windows.Forms.DataVisualization.Charting\n  summary: Gets or sets a semi-transparent color that highlights a range of data.\n  remarks: \"This property determines the color of the range selection, and can be set to any valid ARGB (alpha, red, green, blue) value. If an alpha value, which determines the level of transparency, is not provided, a default alpha value of 120 is used.  \\n  \\n The selected color can be set for both the X and Y axis cursors, which is implemented using the <xref:System.Windows.Forms.DataVisualization.Charting.ChartArea.CursorX%2A> and <xref:System.Windows.Forms.DataVisualization.Charting.ChartArea.CursorY%2A> properties of the <xref:System.Windows.Forms.DataVisualization.Charting.ChartArea> object, respectively. If a range is only selected along the X-axis, the <xref:System.Windows.Forms.DataVisualization.Charting.Cursor.SelectionColor%2A> value for the X-axis cursor is used; if a range is only selected along the Y-axis, the <xref:System.Windows.Forms.DataVisualization.Charting.Cursor.SelectionColor%2A> value for the Y-axis cursor is used. If a range is selected along both axes, the <xref:System.Windows.Forms.DataVisualization.Charting.Cursor.SelectionColor%2A> value for the Y-axis cursor is also used for the selected color.\"\n  syntax:\n    content: >-\n      [System.ComponentModel.Bindable(true)]\n\n      [System.ComponentModel.TypeConverter(typeof(System.Drawing.ColorConverter))]\n\n      public System.Drawing.Color SelectionColor { get; set; }\n    return:\n      type: System.Drawing.Color\n      description: The color of the highlighted range. The default value is <xref href=\"System.Drawing.Color.LightGray\"></xref>, with an alpha value of 120.\n  overload: System.Windows.Forms.DataVisualization.Charting.Cursor.SelectionColor*\n  exceptions: []\n  attributes:\n  - type: System.ComponentModel.BindableAttribute\n  - type: System.ComponentModel.TypeConverterAttribute\n  version:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Windows.Forms.DataVisualization.Charting/Cursor.xml\n  ms.technology:\n  - dotnet-winforms\n  ms.author: mblythe\n  manager: mblythe\n- uid: System.Windows.Forms.DataVisualization.Charting.Cursor.SelectionEnd\n  commentId: P:System.Windows.Forms.DataVisualization.Charting.Cursor.SelectionEnd\n  id: SelectionEnd\n  parent: System.Windows.Forms.DataVisualization.Charting.Cursor\n  langs:\n  - csharp\n  name: SelectionEnd\n  nameWithType: Cursor.SelectionEnd\n  fullName: Cursor.SelectionEnd\n  type: Property\n  assemblies:\n  - System.Windows.Forms.DataVisualization\n  namespace: System.Windows.Forms.DataVisualization.Charting\n  summary: Gets or sets the end position of a range selection.\n  remarks: \"A user can select a range within a chart area by clicking on the left mouse button and then dragging the mouse. Note that the <xref:System.Windows.Forms.DataVisualization.Charting.Cursor.IsUserSelectionEnabled%2A> property must also be set to `true`. In addition, a range selection can be set programmatically using either the <xref:System.Windows.Forms.DataVisualization.Charting.Cursor.SelectionEnd%2A> and <xref:System.Windows.Forms.DataVisualization.Charting.Cursor.SelectionStart%2A> properties, or the <xref:System.Windows.Forms.DataVisualization.Charting.Cursor.SetSelectionPosition%2A> or <xref:System.Windows.Forms.DataVisualization.Charting.Cursor.SetSelectionPixelPosition%2A> methods.  \\n  \\n The end position of a range selection is calculated as a value of the axis to which the cursor belongs. For example, if the cursor belongs to the primary X-axis, and you set the <xref:System.Windows.Forms.DataVisualization.Charting.Cursor.SelectionEnd%2A> property to a value of December 31, 2000, the end of the selected area will occur at December 31, 2000 along the primary X axis.  \\n  \\n To programmatically remove a range selection, set the beginning and end points of the range to <xref:System.Double.NaN> using the <xref:System.Windows.Forms.DataVisualization.Charting.Cursor.SelectionEnd%2A> and <xref:System.Windows.Forms.DataVisualization.Charting.Cursor.SelectionStart%2A> properties, or use the <xref:System.Windows.Forms.DataVisualization.Charting.Cursor.SetSelectionPosition%2A> method.\"\n  syntax:\n    content: >-\n      [System.ComponentModel.Bindable(true)]\n\n      [System.ComponentModel.TypeConverter(typeof(System.Windows.Forms.DataVisualization.Charting.DoubleDateNanValueConverter))]\n\n      public double SelectionEnd { get; set; }\n    return:\n      type: System.Double\n      description: The end position of a range selection.\n  overload: System.Windows.Forms.DataVisualization.Charting.Cursor.SelectionEnd*\n  exceptions: []\n  attributes:\n  - type: System.ComponentModel.BindableAttribute\n  - type: System.ComponentModel.TypeConverterAttribute\n  version:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Windows.Forms.DataVisualization.Charting/Cursor.xml\n  ms.technology:\n  - dotnet-winforms\n  ms.author: mblythe\n  manager: mblythe\n- uid: System.Windows.Forms.DataVisualization.Charting.Cursor.SelectionStart\n  commentId: P:System.Windows.Forms.DataVisualization.Charting.Cursor.SelectionStart\n  id: SelectionStart\n  parent: System.Windows.Forms.DataVisualization.Charting.Cursor\n  langs:\n  - csharp\n  name: SelectionStart\n  nameWithType: Cursor.SelectionStart\n  fullName: Cursor.SelectionStart\n  type: Property\n  assemblies:\n  - System.Windows.Forms.DataVisualization\n  namespace: System.Windows.Forms.DataVisualization.Charting\n  summary: Gets or sets the start position of a cursor's selected range.\n  remarks: \"A user can select a range by clicking on the left mouse button and then moving the cursor position by dragging the mouse. Note that the <xref:System.Windows.Forms.DataVisualization.Charting.Cursor.IsUserSelectionEnabled%2A> property must also be set to `true`. In addition, a range selection can be set programmatically using either the <xref:System.Windows.Forms.DataVisualization.Charting.Cursor.SelectionEnd%2A> and <xref:System.Windows.Forms.DataVisualization.Charting.Cursor.SelectionStart%2A> properties, or the <xref:System.Windows.Forms.DataVisualization.Charting.Cursor.SetSelectionPosition%2A> or <xref:System.Windows.Forms.DataVisualization.Charting.Cursor.SetSelectionPixelPosition%2A> methods.  \\n  \\n The start position of a range selection is calculated as a value of the axis to which the cursor belongs. For example, if the cursor belongs to the primary X-axis, and you set the <xref:System.Windows.Forms.DataVisualization.Charting.Cursor.SelectionStart%2A> property to a value of January 1, 2000, the beginning of the selected area will occur at January 1, 2000 along the primary X axis.  \\n  \\n To programmatically remove a range selection, set the beginning and end points of the range to <xref:System.Double.NaN> using the <xref:System.Windows.Forms.DataVisualization.Charting.Cursor.SelectionEnd%2A> and <xref:System.Windows.Forms.DataVisualization.Charting.Cursor.SelectionStart%2A> properties, or use the <xref:System.Windows.Forms.DataVisualization.Charting.Cursor.SetSelectionPosition%2A> method.\"\n  syntax:\n    content: >-\n      [System.ComponentModel.Bindable(true)]\n\n      [System.ComponentModel.TypeConverter(typeof(System.Windows.Forms.DataVisualization.Charting.DoubleDateNanValueConverter))]\n\n      public double SelectionStart { get; set; }\n    return:\n      type: System.Double\n      description: The start position of a cursor’s selected range.\n  overload: System.Windows.Forms.DataVisualization.Charting.Cursor.SelectionStart*\n  exceptions: []\n  attributes:\n  - type: System.ComponentModel.BindableAttribute\n  - type: System.ComponentModel.TypeConverterAttribute\n  version:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Windows.Forms.DataVisualization.Charting/Cursor.xml\n  ms.technology:\n  - dotnet-winforms\n  ms.author: mblythe\n  manager: mblythe\n- uid: System.Windows.Forms.DataVisualization.Charting.Cursor.SetCursorPixelPosition(System.Drawing.PointF,System.Boolean)\n  commentId: M:System.Windows.Forms.DataVisualization.Charting.Cursor.SetCursorPixelPosition(System.Drawing.PointF,System.Boolean)\n  id: SetCursorPixelPosition(System.Drawing.PointF,System.Boolean)\n  parent: System.Windows.Forms.DataVisualization.Charting.Cursor\n  langs:\n  - csharp\n  name: SetCursorPixelPosition(PointF, Boolean)\n  nameWithType: Cursor.SetCursorPixelPosition(PointF, Boolean)\n  fullName: Cursor.SetCursorPixelPosition(PointF, Boolean)\n  type: Method\n  assemblies:\n  - System.Windows.Forms.DataVisualization\n  namespace: System.Windows.Forms.DataVisualization.Charting\n  summary: Displays a cursor at the specified position. Measured in pixels.\n  syntax:\n    content: public void SetCursorPixelPosition (System.Drawing.PointF point, bool roundToBoundary);\n    parameters:\n    - id: point\n      type: System.Drawing.PointF\n      description: A <xref href=\"System.Drawing.PointF\"></xref> structure that specifies where the cursor will be drawn.\n    - id: roundToBoundary\n      type: System.Boolean\n      description: If `true`, the cursor will be drawn along the nearest chart area boundary, if the specified position does not fall within a <xref href=\"System.Windows.Forms.DataVisualization.Charting.ChartArea\"></xref> object.\n  overload: System.Windows.Forms.DataVisualization.Charting.Cursor.SetCursorPixelPosition*\n  exceptions: []\n  version:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Windows.Forms.DataVisualization.Charting/Cursor.xml\n  ms.technology:\n  - dotnet-winforms\n  ms.author: mblythe\n  manager: mblythe\n- uid: System.Windows.Forms.DataVisualization.Charting.Cursor.SetCursorPosition(System.Double)\n  commentId: M:System.Windows.Forms.DataVisualization.Charting.Cursor.SetCursorPosition(System.Double)\n  id: SetCursorPosition(System.Double)\n  parent: System.Windows.Forms.DataVisualization.Charting.Cursor\n  langs:\n  - csharp\n  name: SetCursorPosition(Double)\n  nameWithType: Cursor.SetCursorPosition(Double)\n  fullName: Cursor.SetCursorPosition(Double)\n  type: Method\n  assemblies:\n  - System.Windows.Forms.DataVisualization\n  namespace: System.Windows.Forms.DataVisualization.Charting\n  summary: Sets the position of a cursor within a chart area at the specified axis value.\n  syntax:\n    content: public void SetCursorPosition (double newPosition);\n    parameters:\n    - id: newPosition\n      type: System.Double\n      description: The new position of the cursor. Measured as a value along the relevant axis.\n  overload: System.Windows.Forms.DataVisualization.Charting.Cursor.SetCursorPosition*\n  exceptions: []\n  version:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Windows.Forms.DataVisualization.Charting/Cursor.xml\n  ms.technology:\n  - dotnet-winforms\n  ms.author: mblythe\n  manager: mblythe\n- uid: System.Windows.Forms.DataVisualization.Charting.Cursor.SetSelectionPixelPosition(System.Drawing.PointF,System.Drawing.PointF,System.Boolean)\n  commentId: M:System.Windows.Forms.DataVisualization.Charting.Cursor.SetSelectionPixelPosition(System.Drawing.PointF,System.Drawing.PointF,System.Boolean)\n  id: SetSelectionPixelPosition(System.Drawing.PointF,System.Drawing.PointF,System.Boolean)\n  parent: System.Windows.Forms.DataVisualization.Charting.Cursor\n  langs:\n  - csharp\n  name: SetSelectionPixelPosition(PointF, PointF, Boolean)\n  nameWithType: Cursor.SetSelectionPixelPosition(PointF, PointF, Boolean)\n  fullName: Cursor.SetSelectionPixelPosition(PointF, PointF, Boolean)\n  type: Method\n  assemblies:\n  - System.Windows.Forms.DataVisualization\n  namespace: System.Windows.Forms.DataVisualization.Charting\n  summary: Sets the start and end positions of a range selection.\n  syntax:\n    content: public void SetSelectionPixelPosition (System.Drawing.PointF startPoint, System.Drawing.PointF endPoint, bool roundToBoundary);\n    parameters:\n    - id: startPoint\n      type: System.Drawing.PointF\n      description: A <xref href=\"System.Drawing.PointF\"></xref> structure that specifies where the range selection begins.\n    - id: endPoint\n      type: System.Drawing.PointF\n      description: A <xref href=\"System.Drawing.PointF\"></xref> structure that specifies where the range selection ends.\n    - id: roundToBoundary\n      type: System.Boolean\n      description: If `true`, the start and end points will be rounded to the nearest chart area boundary if the specified positions do not fall within a <xref href=\"System.Windows.Forms.DataVisualization.Charting.ChartArea\"></xref> object.\n  overload: System.Windows.Forms.DataVisualization.Charting.Cursor.SetSelectionPixelPosition*\n  exceptions: []\n  version:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Windows.Forms.DataVisualization.Charting/Cursor.xml\n  ms.technology:\n  - dotnet-winforms\n  ms.author: mblythe\n  manager: mblythe\n- uid: System.Windows.Forms.DataVisualization.Charting.Cursor.SetSelectionPosition(System.Double,System.Double)\n  commentId: M:System.Windows.Forms.DataVisualization.Charting.Cursor.SetSelectionPosition(System.Double,System.Double)\n  id: SetSelectionPosition(System.Double,System.Double)\n  parent: System.Windows.Forms.DataVisualization.Charting.Cursor\n  langs:\n  - csharp\n  name: SetSelectionPosition(Double, Double)\n  nameWithType: Cursor.SetSelectionPosition(Double, Double)\n  fullName: Cursor.SetSelectionPosition(Double, Double)\n  type: Method\n  assemblies:\n  - System.Windows.Forms.DataVisualization\n  namespace: System.Windows.Forms.DataVisualization.Charting\n  summary: Sets the position of a selected range within a chart area at the specified axis values.\n  syntax:\n    content: public void SetSelectionPosition (double newStart, double newEnd);\n    parameters:\n    - id: newStart\n      type: System.Double\n      description: The new start position of the range selection. Measured as a value along the relevant axis.\n    - id: newEnd\n      type: System.Double\n      description: The new end position of the range selection. Measured as a value along the relevant axis.\n  overload: System.Windows.Forms.DataVisualization.Charting.Cursor.SetSelectionPosition*\n  exceptions: []\n  version:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Windows.Forms.DataVisualization.Charting/Cursor.xml\n  ms.technology:\n  - dotnet-winforms\n  ms.author: mblythe\n  manager: mblythe\nreferences:\n- uid: System.Object\n  parent: System\n  isExternal: false\n  name: Object\n  nameWithType: Object\n  fullName: System.Object\n- uid: System.Windows.Forms.DataVisualization.Charting.Cursor.#ctor\n  parent: System.Windows.Forms.DataVisualization.Charting.Cursor\n  isExternal: false\n  name: Cursor()\n  nameWithType: Cursor.Cursor()\n  fullName: Cursor.Cursor()\n- uid: System.Windows.Forms.DataVisualization.Charting.Cursor.AutoScroll\n  parent: System.Windows.Forms.DataVisualization.Charting.Cursor\n  isExternal: false\n  name: AutoScroll\n  nameWithType: Cursor.AutoScroll\n  fullName: Cursor.AutoScroll\n- uid: System.Boolean\n  parent: System\n  isExternal: false\n  name: Boolean\n  nameWithType: Boolean\n  fullName: System.Boolean\n- uid: System.Windows.Forms.DataVisualization.Charting.Cursor.AxisType\n  parent: System.Windows.Forms.DataVisualization.Charting.Cursor\n  isExternal: false\n  name: AxisType\n  nameWithType: Cursor.AxisType\n  fullName: Cursor.AxisType\n- uid: System.Windows.Forms.DataVisualization.Charting.AxisType\n  parent: System.Windows.Forms.DataVisualization.Charting\n  isExternal: false\n  name: AxisType\n  nameWithType: AxisType\n  fullName: System.Windows.Forms.DataVisualization.Charting.AxisType\n- uid: System.Windows.Forms.DataVisualization.Charting.Cursor.Dispose\n  parent: System.Windows.Forms.DataVisualization.Charting.Cursor\n  isExternal: false\n  name: Dispose()\n  nameWithType: Cursor.Dispose()\n  fullName: Cursor.Dispose()\n- uid: System.Windows.Forms.DataVisualization.Charting.Cursor.Dispose(System.Boolean)\n  parent: System.Windows.Forms.DataVisualization.Charting.Cursor\n  isExternal: false\n  name: Dispose(Boolean)\n  nameWithType: Cursor.Dispose(Boolean)\n  fullName: Cursor.Dispose(Boolean)\n- uid: System.Windows.Forms.DataVisualization.Charting.Cursor.Interval\n  parent: System.Windows.Forms.DataVisualization.Charting.Cursor\n  isExternal: false\n  name: Interval\n  nameWithType: Cursor.Interval\n  fullName: Cursor.Interval\n- uid: System.Double\n  parent: System\n  isExternal: false\n  name: Double\n  nameWithType: Double\n  fullName: System.Double\n- uid: System.Windows.Forms.DataVisualization.Charting.Cursor.IntervalOffset\n  parent: System.Windows.Forms.DataVisualization.Charting.Cursor\n  isExternal: false\n  name: IntervalOffset\n  nameWithType: Cursor.IntervalOffset\n  fullName: Cursor.IntervalOffset\n- uid: System.Windows.Forms.DataVisualization.Charting.Cursor.IntervalOffsetType\n  parent: System.Windows.Forms.DataVisualization.Charting.Cursor\n  isExternal: false\n  name: IntervalOffsetType\n  nameWithType: Cursor.IntervalOffsetType\n  fullName: Cursor.IntervalOffsetType\n- uid: System.Windows.Forms.DataVisualization.Charting.DateTimeIntervalType\n  parent: System.Windows.Forms.DataVisualization.Charting\n  isExternal: false\n  name: DateTimeIntervalType\n  nameWithType: DateTimeIntervalType\n  fullName: System.Windows.Forms.DataVisualization.Charting.DateTimeIntervalType\n- uid: System.Windows.Forms.DataVisualization.Charting.Cursor.IntervalType\n  parent: System.Windows.Forms.DataVisualization.Charting.Cursor\n  isExternal: false\n  name: IntervalType\n  nameWithType: Cursor.IntervalType\n  fullName: Cursor.IntervalType\n- uid: System.Windows.Forms.DataVisualization.Charting.Cursor.IsUserEnabled\n  parent: System.Windows.Forms.DataVisualization.Charting.Cursor\n  isExternal: false\n  name: IsUserEnabled\n  nameWithType: Cursor.IsUserEnabled\n  fullName: Cursor.IsUserEnabled\n- uid: System.Windows.Forms.DataVisualization.Charting.Cursor.IsUserSelectionEnabled\n  parent: System.Windows.Forms.DataVisualization.Charting.Cursor\n  isExternal: false\n  name: IsUserSelectionEnabled\n  nameWithType: Cursor.IsUserSelectionEnabled\n  fullName: Cursor.IsUserSelectionEnabled\n- uid: System.Windows.Forms.DataVisualization.Charting.Cursor.LineColor\n  parent: System.Windows.Forms.DataVisualization.Charting.Cursor\n  isExternal: false\n  name: LineColor\n  nameWithType: Cursor.LineColor\n  fullName: Cursor.LineColor\n- uid: System.Drawing.Color\n  parent: System.Drawing\n  isExternal: false\n  name: Color\n  nameWithType: Color\n  fullName: System.Drawing.Color\n- uid: System.Windows.Forms.DataVisualization.Charting.Cursor.LineDashStyle\n  parent: System.Windows.Forms.DataVisualization.Charting.Cursor\n  isExternal: false\n  name: LineDashStyle\n  nameWithType: Cursor.LineDashStyle\n  fullName: Cursor.LineDashStyle\n- uid: System.Windows.Forms.DataVisualization.Charting.ChartDashStyle\n  parent: System.Windows.Forms.DataVisualization.Charting\n  isExternal: false\n  name: ChartDashStyle\n  nameWithType: ChartDashStyle\n  fullName: System.Windows.Forms.DataVisualization.Charting.ChartDashStyle\n- uid: System.Windows.Forms.DataVisualization.Charting.Cursor.LineWidth\n  parent: System.Windows.Forms.DataVisualization.Charting.Cursor\n  isExternal: false\n  name: LineWidth\n  nameWithType: Cursor.LineWidth\n  fullName: Cursor.LineWidth\n- uid: System.Int32\n  parent: System\n  isExternal: false\n  name: Int32\n  nameWithType: Int32\n  fullName: System.Int32\n- uid: System.Windows.Forms.DataVisualization.Charting.Cursor.Position\n  parent: System.Windows.Forms.DataVisualization.Charting.Cursor\n  isExternal: false\n  name: Position\n  nameWithType: Cursor.Position\n  fullName: Cursor.Position\n- uid: System.Windows.Forms.DataVisualization.Charting.Cursor.SelectionColor\n  parent: System.Windows.Forms.DataVisualization.Charting.Cursor\n  isExternal: false\n  name: SelectionColor\n  nameWithType: Cursor.SelectionColor\n  fullName: Cursor.SelectionColor\n- uid: System.Windows.Forms.DataVisualization.Charting.Cursor.SelectionEnd\n  parent: System.Windows.Forms.DataVisualization.Charting.Cursor\n  isExternal: false\n  name: SelectionEnd\n  nameWithType: Cursor.SelectionEnd\n  fullName: Cursor.SelectionEnd\n- uid: System.Windows.Forms.DataVisualization.Charting.Cursor.SelectionStart\n  parent: System.Windows.Forms.DataVisualization.Charting.Cursor\n  isExternal: false\n  name: SelectionStart\n  nameWithType: Cursor.SelectionStart\n  fullName: Cursor.SelectionStart\n- uid: System.Windows.Forms.DataVisualization.Charting.Cursor.SetCursorPixelPosition(System.Drawing.PointF,System.Boolean)\n  parent: System.Windows.Forms.DataVisualization.Charting.Cursor\n  isExternal: false\n  name: SetCursorPixelPosition(PointF, Boolean)\n  nameWithType: Cursor.SetCursorPixelPosition(PointF, Boolean)\n  fullName: Cursor.SetCursorPixelPosition(PointF, Boolean)\n- uid: System.Drawing.PointF\n  parent: System.Drawing\n  isExternal: false\n  name: PointF\n  nameWithType: PointF\n  fullName: System.Drawing.PointF\n- uid: System.Windows.Forms.DataVisualization.Charting.Cursor.SetCursorPosition(System.Double)\n  parent: System.Windows.Forms.DataVisualization.Charting.Cursor\n  isExternal: false\n  name: SetCursorPosition(Double)\n  nameWithType: Cursor.SetCursorPosition(Double)\n  fullName: Cursor.SetCursorPosition(Double)\n- uid: System.Windows.Forms.DataVisualization.Charting.Cursor.SetSelectionPixelPosition(System.Drawing.PointF,System.Drawing.PointF,System.Boolean)\n  parent: System.Windows.Forms.DataVisualization.Charting.Cursor\n  isExternal: false\n  name: SetSelectionPixelPosition(PointF, PointF, Boolean)\n  nameWithType: Cursor.SetSelectionPixelPosition(PointF, PointF, Boolean)\n  fullName: Cursor.SetSelectionPixelPosition(PointF, PointF, Boolean)\n- uid: System.Windows.Forms.DataVisualization.Charting.Cursor.SetSelectionPosition(System.Double,System.Double)\n  parent: System.Windows.Forms.DataVisualization.Charting.Cursor\n  isExternal: false\n  name: SetSelectionPosition(Double, Double)\n  nameWithType: Cursor.SetSelectionPosition(Double, Double)\n  fullName: Cursor.SetSelectionPosition(Double, Double)\n- uid: System.Windows.Forms.DataVisualization.Charting.Cursor.#ctor*\n  parent: System.Windows.Forms.DataVisualization.Charting.Cursor\n  isExternal: false\n  name: Cursor\n  nameWithType: Cursor.Cursor\n  fullName: Cursor.Cursor\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Windows.Forms.DataVisualization.Charting/Cursor.xml\n- uid: System.Windows.Forms.DataVisualization.Charting.Cursor.AutoScroll*\n  parent: System.Windows.Forms.DataVisualization.Charting.Cursor\n  isExternal: false\n  name: AutoScroll\n  nameWithType: Cursor.AutoScroll\n  fullName: Cursor.AutoScroll\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Windows.Forms.DataVisualization.Charting/Cursor.xml\n- uid: System.Windows.Forms.DataVisualization.Charting.Cursor.AxisType*\n  parent: System.Windows.Forms.DataVisualization.Charting.Cursor\n  isExternal: false\n  name: AxisType\n  nameWithType: Cursor.AxisType\n  fullName: Cursor.AxisType\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Windows.Forms.DataVisualization.Charting/Cursor.xml\n- uid: System.Windows.Forms.DataVisualization.Charting.Cursor.Dispose*\n  parent: System.Windows.Forms.DataVisualization.Charting.Cursor\n  isExternal: false\n  name: Dispose\n  nameWithType: Cursor.Dispose\n  fullName: Cursor.Dispose\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Windows.Forms.DataVisualization.Charting/Cursor.xml\n- uid: System.Windows.Forms.DataVisualization.Charting.Cursor.Interval*\n  parent: System.Windows.Forms.DataVisualization.Charting.Cursor\n  isExternal: false\n  name: Interval\n  nameWithType: Cursor.Interval\n  fullName: Cursor.Interval\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Windows.Forms.DataVisualization.Charting/Cursor.xml\n- uid: System.Windows.Forms.DataVisualization.Charting.Cursor.IntervalOffset*\n  parent: System.Windows.Forms.DataVisualization.Charting.Cursor\n  isExternal: false\n  name: IntervalOffset\n  nameWithType: Cursor.IntervalOffset\n  fullName: Cursor.IntervalOffset\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Windows.Forms.DataVisualization.Charting/Cursor.xml\n- uid: System.Windows.Forms.DataVisualization.Charting.Cursor.IntervalOffsetType*\n  parent: System.Windows.Forms.DataVisualization.Charting.Cursor\n  isExternal: false\n  name: IntervalOffsetType\n  nameWithType: Cursor.IntervalOffsetType\n  fullName: Cursor.IntervalOffsetType\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Windows.Forms.DataVisualization.Charting/Cursor.xml\n- uid: System.Windows.Forms.DataVisualization.Charting.Cursor.IntervalType*\n  parent: System.Windows.Forms.DataVisualization.Charting.Cursor\n  isExternal: false\n  name: IntervalType\n  nameWithType: Cursor.IntervalType\n  fullName: Cursor.IntervalType\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Windows.Forms.DataVisualization.Charting/Cursor.xml\n- uid: System.Windows.Forms.DataVisualization.Charting.Cursor.IsUserEnabled*\n  parent: System.Windows.Forms.DataVisualization.Charting.Cursor\n  isExternal: false\n  name: IsUserEnabled\n  nameWithType: Cursor.IsUserEnabled\n  fullName: Cursor.IsUserEnabled\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Windows.Forms.DataVisualization.Charting/Cursor.xml\n- uid: System.Windows.Forms.DataVisualization.Charting.Cursor.IsUserSelectionEnabled*\n  parent: System.Windows.Forms.DataVisualization.Charting.Cursor\n  isExternal: false\n  name: IsUserSelectionEnabled\n  nameWithType: Cursor.IsUserSelectionEnabled\n  fullName: Cursor.IsUserSelectionEnabled\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Windows.Forms.DataVisualization.Charting/Cursor.xml\n- uid: System.Windows.Forms.DataVisualization.Charting.Cursor.LineColor*\n  parent: System.Windows.Forms.DataVisualization.Charting.Cursor\n  isExternal: false\n  name: LineColor\n  nameWithType: Cursor.LineColor\n  fullName: Cursor.LineColor\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Windows.Forms.DataVisualization.Charting/Cursor.xml\n- uid: System.Windows.Forms.DataVisualization.Charting.Cursor.LineDashStyle*\n  parent: System.Windows.Forms.DataVisualization.Charting.Cursor\n  isExternal: false\n  name: LineDashStyle\n  nameWithType: Cursor.LineDashStyle\n  fullName: Cursor.LineDashStyle\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Windows.Forms.DataVisualization.Charting/Cursor.xml\n- uid: System.Windows.Forms.DataVisualization.Charting.Cursor.LineWidth*\n  parent: System.Windows.Forms.DataVisualization.Charting.Cursor\n  isExternal: false\n  name: LineWidth\n  nameWithType: Cursor.LineWidth\n  fullName: Cursor.LineWidth\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Windows.Forms.DataVisualization.Charting/Cursor.xml\n- uid: System.Windows.Forms.DataVisualization.Charting.Cursor.Position*\n  parent: System.Windows.Forms.DataVisualization.Charting.Cursor\n  isExternal: false\n  name: Position\n  nameWithType: Cursor.Position\n  fullName: Cursor.Position\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Windows.Forms.DataVisualization.Charting/Cursor.xml\n- uid: System.Windows.Forms.DataVisualization.Charting.Cursor.SelectionColor*\n  parent: System.Windows.Forms.DataVisualization.Charting.Cursor\n  isExternal: false\n  name: SelectionColor\n  nameWithType: Cursor.SelectionColor\n  fullName: Cursor.SelectionColor\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Windows.Forms.DataVisualization.Charting/Cursor.xml\n- uid: System.Windows.Forms.DataVisualization.Charting.Cursor.SelectionEnd*\n  parent: System.Windows.Forms.DataVisualization.Charting.Cursor\n  isExternal: false\n  name: SelectionEnd\n  nameWithType: Cursor.SelectionEnd\n  fullName: Cursor.SelectionEnd\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Windows.Forms.DataVisualization.Charting/Cursor.xml\n- uid: System.Windows.Forms.DataVisualization.Charting.Cursor.SelectionStart*\n  parent: System.Windows.Forms.DataVisualization.Charting.Cursor\n  isExternal: false\n  name: SelectionStart\n  nameWithType: Cursor.SelectionStart\n  fullName: Cursor.SelectionStart\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Windows.Forms.DataVisualization.Charting/Cursor.xml\n- uid: System.Windows.Forms.DataVisualization.Charting.Cursor.SetCursorPixelPosition*\n  parent: System.Windows.Forms.DataVisualization.Charting.Cursor\n  isExternal: false\n  name: SetCursorPixelPosition\n  nameWithType: Cursor.SetCursorPixelPosition\n  fullName: Cursor.SetCursorPixelPosition\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Windows.Forms.DataVisualization.Charting/Cursor.xml\n- uid: System.Windows.Forms.DataVisualization.Charting.Cursor.SetCursorPosition*\n  parent: System.Windows.Forms.DataVisualization.Charting.Cursor\n  isExternal: false\n  name: SetCursorPosition\n  nameWithType: Cursor.SetCursorPosition\n  fullName: Cursor.SetCursorPosition\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Windows.Forms.DataVisualization.Charting/Cursor.xml\n- uid: System.Windows.Forms.DataVisualization.Charting.Cursor.SetSelectionPixelPosition*\n  parent: System.Windows.Forms.DataVisualization.Charting.Cursor\n  isExternal: false\n  name: SetSelectionPixelPosition\n  nameWithType: Cursor.SetSelectionPixelPosition\n  fullName: Cursor.SetSelectionPixelPosition\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Windows.Forms.DataVisualization.Charting/Cursor.xml\n- uid: System.Windows.Forms.DataVisualization.Charting.Cursor.SetSelectionPosition*\n  parent: System.Windows.Forms.DataVisualization.Charting.Cursor\n  isExternal: false\n  name: SetSelectionPosition\n  nameWithType: Cursor.SetSelectionPosition\n  fullName: Cursor.SetSelectionPosition\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Windows.Forms.DataVisualization.Charting/Cursor.xml\n- uid: System.Object.Equals(System.Object)\n  parent: System.Object\n  isExternal: false\n  name: Equals(Object)\n  nameWithType: Object.Equals(Object)\n  fullName: Object.Equals(Object)\n- uid: System.Object.Equals(System.Object,System.Object)\n  parent: System.Object\n  isExternal: false\n  name: Equals(Object, Object)\n  nameWithType: Object.Equals(Object, Object)\n  fullName: Object.Equals(Object, Object)\n- uid: System.Object.GetHashCode\n  parent: System.Object\n  isExternal: false\n  name: GetHashCode()\n  nameWithType: Object.GetHashCode()\n  fullName: Object.GetHashCode()\n- uid: System.Object.GetType\n  parent: System.Object\n  isExternal: false\n  name: GetType()\n  nameWithType: Object.GetType()\n  fullName: Object.GetType()\n- uid: System.Object.MemberwiseClone\n  parent: System.Object\n  isExternal: false\n  name: MemberwiseClone()\n  nameWithType: Object.MemberwiseClone()\n  fullName: Object.MemberwiseClone()\n- uid: System.Object.ReferenceEquals(System.Object,System.Object)\n  parent: System.Object\n  isExternal: false\n  name: ReferenceEquals(Object, Object)\n  nameWithType: Object.ReferenceEquals(Object, Object)\n  fullName: Object.ReferenceEquals(Object, Object)\n- uid: System.Object.ToString\n  parent: System.Object\n  isExternal: false\n  name: ToString()\n  nameWithType: Object.ToString()\n  fullName: Object.ToString()\n- uid: System.IDisposable\n  parent: System\n  isExternal: false\n  name: IDisposable\n  nameWithType: IDisposable\n  fullName: System.IDisposable\n"}