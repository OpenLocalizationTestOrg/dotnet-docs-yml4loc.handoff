{"nodes":[{"content":"Represents an expression tree and provides functionality to execute the expression tree after rewriting it.","nodes":[{"pos":[0,107],"content":"Represents an expression tree and provides functionality to execute the expression tree after rewriting it.","nodes":[{"content":"Represents an expression tree and provides functionality to execute the expression tree after rewriting it.","pos":[0,107]}]}],"pos":[498,606],"yaml":true},{"content":"The data type of the value that results from executing the expression tree.","nodes":[{"pos":[0,75],"content":"The data type of the value that results from executing the expression tree.","nodes":[{"content":"The data type of the value that results from executing the expression tree.","pos":[0,75]}]}],"pos":[750,826],"yaml":true},{"content":"Initializes a new instance of the <xref href=\"System.Linq.EnumerableExecutor`1\"></xref> class.","nodes":[{"pos":[0,94],"content":"Initializes a new instance of the <ph id=\"ph1\">&lt;xref href=\"System.Linq.EnumerableExecutor`1\"&gt;&lt;/xref&gt;</ph> class.","source":"Initializes a new instance of the <xref href=\"System.Linq.EnumerableExecutor`1\"></xref> class."}],"pos":[2620,2715],"yaml":true},{"content":"An expression tree to associate with the new instance.","nodes":[{"pos":[0,54],"content":"An expression tree to associate with the new instance.","nodes":[{"content":"An expression tree to associate with the new instance.","pos":[0,54]}]}],"pos":[2916,2971],"yaml":true}],"content":"### YamlMime:ManagedReference\nitems:\n- uid: System.Linq.EnumerableExecutor`1\n  commentId: T:System.Linq.EnumerableExecutor`1\n  id: EnumerableExecutor`1\n  children:\n  - System.Linq.EnumerableExecutor`1.#ctor(System.Linq.Expressions.Expression)\n  langs:\n  - csharp\n  name: EnumerableExecutor<T>\n  nameWithType: EnumerableExecutor<T>\n  fullName: System.Linq.EnumerableExecutor<T>\n  type: Class\n  assemblies:\n  - System.Linq.Queryable\n  - System.Core\n  - netstandard\n  namespace: System.Linq\n  summary: Represents an expression tree and provides functionality to execute the expression tree after rewriting it.\n  syntax:\n    content: 'public class EnumerableExecutor<T> : System.Linq.EnumerableExecutor'\n    typeParameters:\n    - id: T\n      description: The data type of the value that results from executing the expression tree.\n  inheritance:\n  - System.Object\n  - System.Linq.EnumerableExecutor\n  implements: []\n  inheritedMembers:\n  - System.Object.Equals(System.Object)\n  - System.Object.Equals(System.Object,System.Object)\n  - System.Object.GetHashCode\n  - System.Object.GetType\n  - System.Object.MemberwiseClone\n  - System.Object.ReferenceEquals(System.Object,System.Object)\n  - System.Object.ToString\n  version:\n  - netcore-1.0\n  - netcore-1.1\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - netstandard-2.0\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  monikers:\n  - netcore-1.0\n  - netcore-1.1\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - netstandard-2.0\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  internal_use_only: true\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Linq/EnumerableExecutor`1.xml\n  ms.technology:\n  - dotnet-standard\n  author: BillWagner\n  ms.author: wiwagn\n  manager: wpickett\n- uid: System.Linq.EnumerableExecutor`1.#ctor(System.Linq.Expressions.Expression)\n  commentId: M:System.Linq.EnumerableExecutor`1.#ctor(System.Linq.Expressions.Expression)\n  id: '#ctor(System.Linq.Expressions.Expression)'\n  parent: System.Linq.EnumerableExecutor`1\n  langs:\n  - csharp\n  name: EnumerableExecutor<T>(Expression)\n  nameWithType: EnumerableExecutor<T>.EnumerableExecutor<T>(Expression)\n  fullName: EnumerableExecutor<T>.EnumerableExecutor<T>(Expression)\n  type: Constructor\n  assemblies:\n  - System.Linq.Queryable\n  - System.Core\n  - netstandard\n  namespace: System.Linq\n  summary: Initializes a new instance of the <xref href=\"System.Linq.EnumerableExecutor`1\"></xref> class.\n  syntax:\n    content: public EnumerableExecutor (System.Linq.Expressions.Expression expression);\n    parameters:\n    - id: expression\n      type: System.Linq.Expressions.Expression\n      description: An expression tree to associate with the new instance.\n  overload: System.Linq.EnumerableExecutor`1.#ctor*\n  exceptions: []\n  version:\n  - netcore-1.0\n  - netcore-1.1\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - netstandard-2.0\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  monikers:\n  - netcore-1.0\n  - netcore-1.1\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - netstandard-2.0\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  internal_use_only: true\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Linq/EnumerableExecutor`1.xml\n  ms.technology:\n  - dotnet-standard\n  ms.author: billchi\n  manager: ghogen\nreferences:\n- uid: System.Linq.EnumerableExecutor\n  parent: System.Linq\n  isExternal: false\n  name: EnumerableExecutor\n  nameWithType: EnumerableExecutor\n  fullName: System.Linq.EnumerableExecutor\n- uid: System.Linq.EnumerableExecutor`1.#ctor(System.Linq.Expressions.Expression)\n  parent: System.Linq.EnumerableExecutor`1\n  isExternal: false\n  name: EnumerableExecutor<T>(Expression)\n  nameWithType: EnumerableExecutor<T>.EnumerableExecutor<T>(Expression)\n  fullName: EnumerableExecutor<T>.EnumerableExecutor<T>(Expression)\n- uid: System.Linq.Expressions.Expression\n  parent: System.Linq.Expressions\n  isExternal: false\n  name: Expression\n  nameWithType: Expression\n  fullName: System.Linq.Expressions.Expression\n- uid: System.Linq.EnumerableExecutor`1.#ctor*\n  parent: System.Linq.EnumerableExecutor`1\n  isExternal: false\n  name: EnumerableExecutor<T>\n  nameWithType: EnumerableExecutor<T>.EnumerableExecutor<T>\n  fullName: EnumerableExecutor<T>.EnumerableExecutor<T>\n  monikers:\n  - netcore-1.0\n  - netcore-1.1\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - netstandard-2.0\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Linq/EnumerableExecutor`1.xml\n- uid: System.Object.Equals(System.Object)\n  parent: System.Object\n  isExternal: false\n  name: Equals(Object)\n  nameWithType: Object.Equals(Object)\n  fullName: Object.Equals(Object)\n- uid: System.Object.Equals(System.Object,System.Object)\n  parent: System.Object\n  isExternal: false\n  name: Equals(Object, Object)\n  nameWithType: Object.Equals(Object, Object)\n  fullName: Object.Equals(Object, Object)\n- uid: System.Object.GetHashCode\n  parent: System.Object\n  isExternal: false\n  name: GetHashCode()\n  nameWithType: Object.GetHashCode()\n  fullName: Object.GetHashCode()\n- uid: System.Object.GetType\n  parent: System.Object\n  isExternal: false\n  name: GetType()\n  nameWithType: Object.GetType()\n  fullName: Object.GetType()\n- uid: System.Object.MemberwiseClone\n  parent: System.Object\n  isExternal: false\n  name: MemberwiseClone()\n  nameWithType: Object.MemberwiseClone()\n  fullName: Object.MemberwiseClone()\n- uid: System.Object.ReferenceEquals(System.Object,System.Object)\n  parent: System.Object\n  isExternal: false\n  name: ReferenceEquals(Object, Object)\n  nameWithType: Object.ReferenceEquals(Object, Object)\n  fullName: Object.ReferenceEquals(Object, Object)\n- uid: System.Object.ToString\n  parent: System.Object\n  isExternal: false\n  name: ToString()\n  nameWithType: Object.ToString()\n  fullName: Object.ToString()\n"}