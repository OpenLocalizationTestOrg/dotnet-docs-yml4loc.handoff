{"nodes":[{"content":"Defines the contract that ASP.NET implements to provide membership services using custom membership providers.","nodes":[{"pos":[0,110],"content":"Defines the contract that ASP.NET implements to provide membership services using custom membership providers.","nodes":[{"content":"Defines the contract that ASP.NET implements to provide membership services using custom membership providers.","pos":[0,110]}]}],"pos":[3217,3328],"yaml":true},{"content":"ASP.NET membership is designed to enable you to easily use a number of different membership providers for your ASP.NET applications. You can use the supplied membership providers that are included with the .NET Framework, or you can implement your own provider.  \n  \n> [!NOTE]\n>  If you are not familiar with the membership features of ASP.NET, see [Introduction to Membership](http://msdn.microsoft.com/library/79184d17-f4c7-4c9f-a073-cec4f5543980) before continuing. For a list of other topics related to membership, see [Managing Users by Using Membership](http://msdn.microsoft.com/library/824c3a24-f0af-427c-a652-0d2d1e9397cd).  \n  \n When implementing a custom membership provider, you are required to inherit the <xref:System.Web.Security.MembershipProvider> abstract class.  \n  \n There are two primary reasons for creating a custom membership provider.  \n  \n-   You need to store membership information in a data source that is not supported by the membership providers included with the .NET Framework, such as a FoxPro database, an Oracle database, or other data source.  \n  \n-   You need to manage membership information using a database schema that is different from the database schema used by the providers that ship with the .NET Framework. A common example of this would be membership data that already exists in a SQL Server database for a company or Web site.  \n  \n The <xref:System.Web.Security.MembershipProvider> abstract class inherits from the <xref:System.Configuration.Provider.ProviderBase> abstract class. <xref:System.Web.Security.MembershipProvider> implementations must also implement the required members of <xref:System.Configuration.Provider.ProviderBase>.","nodes":[{"pos":[0,261],"content":"ASP.NET membership is designed to enable you to easily use a number of different membership providers for your ASP.NET applications. You can use the supplied membership providers that are included with the .NET Framework, or you can implement your own provider.","nodes":[{"content":"ASP.NET membership is designed to enable you to easily use a number of different membership providers for your ASP.NET applications. You can use the supplied membership providers that are included with the .NET Framework, or you can implement your own provider.","pos":[0,261],"nodes":[{"content":"ASP.NET membership is designed to enable you to easily use a number of different membership providers for your ASP.NET applications.","pos":[0,132]},{"content":"You can use the supplied membership providers that are included with the .NET Framework, or you can implement your own provider.","pos":[133,261]}]}]},{"pos":[269,632],"content":"[!NOTE]\n If you are not familiar with the membership features of ASP.NET, see [Introduction to Membership](http://msdn.microsoft.com/library/79184d17-f4c7-4c9f-a073-cec4f5543980) before continuing. For a list of other topics related to membership, see [Managing Users by Using Membership](http://msdn.microsoft.com/library/824c3a24-f0af-427c-a652-0d2d1e9397cd).","leadings":["","> "],"nodes":[{"content":" If you are not familiar with the membership features of ASP.NET, see [Introduction to Membership](http://msdn.microsoft.com/library/79184d17-f4c7-4c9f-a073-cec4f5543980) before continuing. For a list of other topics related to membership, see [Managing Users by Using Membership](http://msdn.microsoft.com/library/824c3a24-f0af-427c-a652-0d2d1e9397cd).","pos":[8,361],"nodes":[{"content":"If you are not familiar with the membership features of ASP.NET, see <bpt id=\"p1\">[</bpt>Introduction to Membership<ept id=\"p1\">](http://msdn.microsoft.com/library/79184d17-f4c7-4c9f-a073-cec4f5543980)</ept> before continuing.","pos":[1,189],"source":" If you are not familiar with the membership features of ASP.NET, see [Introduction to Membership](http://msdn.microsoft.com/library/79184d17-f4c7-4c9f-a073-cec4f5543980) before continuing."},{"content":"For a list of other topics related to membership, see <bpt id=\"p1\">[</bpt>Managing Users by Using Membership<ept id=\"p1\">](http://msdn.microsoft.com/library/824c3a24-f0af-427c-a652-0d2d1e9397cd)</ept>.","pos":[190,353],"source":" For a list of other topics related to membership, see [Managing Users by Using Membership](http://msdn.microsoft.com/library/824c3a24-f0af-427c-a652-0d2d1e9397cd)."}]}]},{"pos":[639,780],"content":"When implementing a custom membership provider, you are required to inherit the <xref:System.Web.Security.MembershipProvider> abstract class.","nodes":[{"content":"When implementing a custom membership provider, you are required to inherit the <ph id=\"ph1\">&lt;xref:System.Web.Security.MembershipProvider&gt;</ph> abstract class.","pos":[0,141],"source":"When implementing a custom membership provider, you are required to inherit the <xref:System.Web.Security.MembershipProvider> abstract class."}]},{"pos":[787,859],"content":"There are two primary reasons for creating a custom membership provider.","nodes":[{"content":"There are two primary reasons for creating a custom membership provider.","pos":[0,72]}]},{"pos":[869,1079],"content":"You need to store membership information in a data source that is not supported by the membership providers included with the .NET Framework, such as a FoxPro database, an Oracle database, or other data source.","nodes":[{"content":"You need to store membership information in a data source that is not supported by the membership providers included with the .NET Framework, such as a FoxPro database, an Oracle database, or other data source.","pos":[0,210]}]},{"pos":[1089,1376],"content":"You need to manage membership information using a database schema that is different from the database schema used by the providers that ship with the .NET Framework. A common example of this would be membership data that already exists in a SQL Server database for a company or Web site.","nodes":[{"content":"You need to manage membership information using a database schema that is different from the database schema used by the providers that ship with the .NET Framework. A common example of this would be membership data that already exists in a SQL Server database for a company or Web site.","pos":[0,287],"nodes":[{"content":"You need to manage membership information using a database schema that is different from the database schema used by the providers that ship with the .NET Framework.","pos":[0,165]},{"content":"A common example of this would be membership data that already exists in a SQL Server database for a company or Web site.","pos":[166,287]}]}]},{"pos":[1383,1688],"content":"The <xref:System.Web.Security.MembershipProvider> abstract class inherits from the <xref:System.Configuration.Provider.ProviderBase> abstract class. <xref:System.Web.Security.MembershipProvider> implementations must also implement the required members of <xref:System.Configuration.Provider.ProviderBase>.","nodes":[{"content":"The <xref:System.Web.Security.MembershipProvider> abstract class inherits from the <xref:System.Configuration.Provider.ProviderBase> abstract class. <xref:System.Web.Security.MembershipProvider> implementations must also implement the required members of <xref:System.Configuration.Provider.ProviderBase>.","pos":[0,305],"nodes":[{"content":"The <ph id=\"ph1\">&lt;xref:System.Web.Security.MembershipProvider&gt;</ph> abstract class inherits from the <ph id=\"ph2\">&lt;xref:System.Configuration.Provider.ProviderBase&gt;</ph> abstract class.","pos":[0,148],"source":"The <xref:System.Web.Security.MembershipProvider> abstract class inherits from the <xref:System.Configuration.Provider.ProviderBase> abstract class."},{"content":"<ph id=\"ph1\">&lt;xref:System.Web.Security.MembershipProvider&gt;</ph> implementations must also implement the required members of <ph id=\"ph2\">&lt;xref:System.Configuration.Provider.ProviderBase&gt;</ph>.","pos":[149,305],"source":" <xref:System.Web.Security.MembershipProvider> implementations must also implement the required members of <xref:System.Configuration.Provider.ProviderBase>."}]}]}],"pos":[3339,5043],"yaml":true,"extradata":"MT"},{"content":"Initializes a new instance of the <xref href=\"System.Web.Security.MembershipProvider\"></xref> class.","nodes":[{"pos":[0,100],"content":"Initializes a new instance of the <ph id=\"ph1\">&lt;xref href=\"System.Web.Security.MembershipProvider\"&gt;&lt;/xref&gt;</ph> class.","source":"Initializes a new instance of the <xref href=\"System.Web.Security.MembershipProvider\"></xref> class."}],"pos":[7074,7175],"yaml":true},{"content":"You are not required to implement a constructor for a class that inherits the <xref:System.Web.Security.MembershipProvider> abstract class. Initialization values for a <xref:System.Web.Security.MembershipProvider> implementation are passed to the <xref:System.Configuration.Provider.ProviderBase.Initialize%2A> method implementation.","nodes":[{"pos":[0,333],"content":"You are not required to implement a constructor for a class that inherits the <xref:System.Web.Security.MembershipProvider> abstract class. Initialization values for a <xref:System.Web.Security.MembershipProvider> implementation are passed to the <xref:System.Configuration.Provider.ProviderBase.Initialize%2A> method implementation.","nodes":[{"content":"You are not required to implement a constructor for a class that inherits the <xref:System.Web.Security.MembershipProvider> abstract class. Initialization values for a <xref:System.Web.Security.MembershipProvider> implementation are passed to the <xref:System.Configuration.Provider.ProviderBase.Initialize%2A> method implementation.","pos":[0,333],"nodes":[{"content":"You are not required to implement a constructor for a class that inherits the <ph id=\"ph1\">&lt;xref:System.Web.Security.MembershipProvider&gt;</ph> abstract class.","pos":[0,139],"source":"You are not required to implement a constructor for a class that inherits the <xref:System.Web.Security.MembershipProvider> abstract class."},{"content":"Initialization values for a <ph id=\"ph1\">&lt;xref:System.Web.Security.MembershipProvider&gt;</ph> implementation are passed to the <ph id=\"ph2\">&lt;xref:System.Configuration.Provider.ProviderBase.Initialize%2A&gt;</ph> method implementation.","pos":[140,333],"source":" Initialization values for a <xref:System.Web.Security.MembershipProvider> implementation are passed to the <xref:System.Configuration.Provider.ProviderBase.Initialize%2A> method implementation."}]}]}],"pos":[7186,7520],"yaml":true,"extradata":"MT"},{"content":"The name of the application using the custom membership provider.","nodes":[{"pos":[0,65],"content":"The name of the application using the custom membership provider.","nodes":[{"content":"The name of the application using the custom membership provider.","pos":[0,65]}]}],"pos":[8665,8731],"yaml":true},{"content":"The <xref:System.Web.Security.MembershipProvider.ApplicationName%2A> property value is stored in the data source with related user information to associate a user with a particular application. This property is read/write and defaults to the <xref:System.Web.HttpRequest.ApplicationPath%2A> property value if not specified explicitly.  \n  \n Because membership providers store user information uniquely for each application, multiple ASP.NET applications can use the same data source without running into a conflict if duplicate user names are created. Alternatively, multiple ASP.NET applications can use the same user data source by specifying the same <xref:System.Web.Security.MembershipProvider.ApplicationName%2A>.  \n  \n In your membership provider implementation, you will need to ensure that your data schema includes the <xref:System.Web.Security.MembershipProvider.ApplicationName%2A> and that data source queries and updates also include the <xref:System.Web.Security.MembershipProvider.ApplicationName%2A>.","nodes":[{"pos":[0,334],"content":"The <xref:System.Web.Security.MembershipProvider.ApplicationName%2A> property value is stored in the data source with related user information to associate a user with a particular application. This property is read/write and defaults to the <xref:System.Web.HttpRequest.ApplicationPath%2A> property value if not specified explicitly.","nodes":[{"content":"The <xref:System.Web.Security.MembershipProvider.ApplicationName%2A> property value is stored in the data source with related user information to associate a user with a particular application. This property is read/write and defaults to the <xref:System.Web.HttpRequest.ApplicationPath%2A> property value if not specified explicitly.","pos":[0,334],"nodes":[{"content":"The <ph id=\"ph1\">&lt;xref:System.Web.Security.MembershipProvider.ApplicationName%2A&gt;</ph> property value is stored in the data source with related user information to associate a user with a particular application.","pos":[0,193],"source":"The <xref:System.Web.Security.MembershipProvider.ApplicationName%2A> property value is stored in the data source with related user information to associate a user with a particular application."},{"content":"This property is read/write and defaults to the <ph id=\"ph1\">&lt;xref:System.Web.HttpRequest.ApplicationPath%2A&gt;</ph> property value if not specified explicitly.","pos":[194,334],"source":" This property is read/write and defaults to the <xref:System.Web.HttpRequest.ApplicationPath%2A> property value if not specified explicitly."}]}]},{"pos":[341,719],"content":"Because membership providers store user information uniquely for each application, multiple ASP.NET applications can use the same data source without running into a conflict if duplicate user names are created. Alternatively, multiple ASP.NET applications can use the same user data source by specifying the same <xref:System.Web.Security.MembershipProvider.ApplicationName%2A>.","nodes":[{"content":"Because membership providers store user information uniquely for each application, multiple ASP.NET applications can use the same data source without running into a conflict if duplicate user names are created. Alternatively, multiple ASP.NET applications can use the same user data source by specifying the same <xref:System.Web.Security.MembershipProvider.ApplicationName%2A>.","pos":[0,378],"nodes":[{"content":"Because membership providers store user information uniquely for each application, multiple ASP.NET applications can use the same data source without running into a conflict if duplicate user names are created.","pos":[0,210]},{"content":"Alternatively, multiple ASP.NET applications can use the same user data source by specifying the same <ph id=\"ph1\">&lt;xref:System.Web.Security.MembershipProvider.ApplicationName%2A&gt;</ph>.","pos":[211,378],"source":" Alternatively, multiple ASP.NET applications can use the same user data source by specifying the same <xref:System.Web.Security.MembershipProvider.ApplicationName%2A>."}]}]},{"pos":[726,1017],"content":"In your membership provider implementation, you will need to ensure that your data schema includes the <xref:System.Web.Security.MembershipProvider.ApplicationName%2A> and that data source queries and updates also include the <xref:System.Web.Security.MembershipProvider.ApplicationName%2A>.","nodes":[{"content":"In your membership provider implementation, you will need to ensure that your data schema includes the <ph id=\"ph1\">&lt;xref:System.Web.Security.MembershipProvider.ApplicationName%2A&gt;</ph> and that data source queries and updates also include the <ph id=\"ph2\">&lt;xref:System.Web.Security.MembershipProvider.ApplicationName%2A&gt;</ph>.","pos":[0,291],"source":"In your membership provider implementation, you will need to ensure that your data schema includes the <xref:System.Web.Security.MembershipProvider.ApplicationName%2A> and that data source queries and updates also include the <xref:System.Web.Security.MembershipProvider.ApplicationName%2A>."}]}],"pos":[8742,9766],"yaml":true,"extradata":"MT"},{"content":"The name of the application using the custom membership provider.","nodes":[{"pos":[0,65],"content":"The name of the application using the custom membership provider.","nodes":[{"content":"The name of the application using the custom membership provider.","pos":[0,65]}]}],"pos":[10107,10173],"yaml":true},{"content":"Processes a request to update the password for a membership user.","nodes":[{"pos":[0,65],"content":"Processes a request to update the password for a membership user.","nodes":[{"content":"Processes a request to update the password for a membership user.","pos":[0,65]}]}],"pos":[11446,11512],"yaml":true},{"content":"Takes, as input, a user name, a current password, and a new password, and updates the password in the data source if the supplied user name and current password are valid.","nodes":[{"pos":[0,171],"content":"Takes, as input, a user name, a current password, and a new password, and updates the password in the data source if the supplied user name and current password are valid.","nodes":[{"content":"Takes, as input, a user name, a current password, and a new password, and updates the password in the data source if the supplied user name and current password are valid.","pos":[0,171]}]}],"pos":[11523,11695],"yaml":true,"extradata":"MT"},{"content":"The user to update the password for.","nodes":[{"pos":[0,36],"content":"The user to update the password for.","nodes":[{"content":"The user to update the password for.","pos":[0,36]}]}],"pos":[12101,12138],"yaml":true},{"content":"The current password for the specified user.","nodes":[{"pos":[0,44],"content":"The current password for the specified user.","nodes":[{"content":"The current password for the specified user.","pos":[0,44]}]}],"pos":[12205,12250],"yaml":true},{"content":"The new password for the specified user.","nodes":[{"pos":[0,40],"content":"The new password for the specified user.","nodes":[{"content":"The new password for the specified user.","pos":[0,40]}]}],"pos":[12317,12358],"yaml":true},{"content":"`true` if the password was updated successfully; otherwise, `false`.","nodes":[{"pos":[0,68],"content":"<ph id=\"ph1\">`true`</ph> if the password was updated successfully; otherwise, <ph id=\"ph2\">`false`</ph>.","source":"`true` if the password was updated successfully; otherwise, `false`."}],"pos":[12416,12487],"yaml":true},{"content":"Processes a request to update the password question and answer for a membership user.","nodes":[{"pos":[0,85],"content":"Processes a request to update the password question and answer for a membership user.","nodes":[{"content":"Processes a request to update the password question and answer for a membership user.","pos":[0,85]}]}],"pos":[13927,14013],"yaml":true},{"content":"Takes, as input, a user name, a password, a password question and a password answer, and updates the password question and answer in the data source if the supplied user name and password are valid.  \n  \n If the supplied user name and password are not valid, `false` is returned.","nodes":[{"pos":[0,198],"content":"Takes, as input, a user name, a password, a password question and a password answer, and updates the password question and answer in the data source if the supplied user name and password are valid.","nodes":[{"content":"Takes, as input, a user name, a password, a password question and a password answer, and updates the password question and answer in the data source if the supplied user name and password are valid.","pos":[0,198]}]},{"pos":[205,279],"content":"If the supplied user name and password are not valid, <ph id=\"ph1\">`false`</ph> is returned.","source":"If the supplied user name and password are not valid, `false` is returned."}],"pos":[14024,14308],"yaml":true,"extradata":"MT"},{"content":"The user to change the password question and answer for.","nodes":[{"pos":[0,56],"content":"The user to change the password question and answer for.","nodes":[{"content":"The user to change the password question and answer for.","pos":[0,56]}]}],"pos":[14762,14819],"yaml":true},{"content":"The password for the specified user.","nodes":[{"pos":[0,36],"content":"The password for the specified user.","nodes":[{"content":"The password for the specified user.","pos":[0,36]}]}],"pos":[14883,14920],"yaml":true},{"content":"The new password question for the specified user.","nodes":[{"pos":[0,49],"content":"The new password question for the specified user.","nodes":[{"content":"The new password question for the specified user.","pos":[0,49]}]}],"pos":[14995,15045],"yaml":true},{"content":"The new password answer for the specified user.","nodes":[{"pos":[0,47],"content":"The new password answer for the specified user.","nodes":[{"content":"The new password answer for the specified user.","pos":[0,47]}]}],"pos":[15118,15166],"yaml":true},{"content":"`true` if the password question and answer are updated successfully; otherwise, `false`.","nodes":[{"pos":[0,88],"content":"<ph id=\"ph1\">`true`</ph> if the password question and answer are updated successfully; otherwise, <ph id=\"ph2\">`false`</ph>.","source":"`true` if the password question and answer are updated successfully; otherwise, `false`."}],"pos":[15224,15315],"yaml":true},{"content":"Adds a new membership user to the data source.","nodes":[{"pos":[0,46],"content":"Adds a new membership user to the data source.","nodes":[{"content":"Adds a new membership user to the data source.","pos":[0,46]}]}],"pos":[17054,17101],"yaml":true},{"content":"Takes, as input, the name of a new user, a password, and an e-mail address and inserts a new user for the application into the data source. The <xref:System.Web.Security.MembershipProvider.CreateUser%2A> method returns a <xref:System.Web.Security.MembershipUser> object populated with the information for the newly created user. The <xref:System.Web.Security.MembershipProvider.CreateUser%2A> method also defines an `out` parameter (in Visual Basic, you can use `ByRef`) that returns a <xref:System.Web.Security.MembershipCreateStatus> value that indicates that the user was successfully created, or a reason that user creation failed.  \n  \n The <xref:System.Web.Security.MembershipProvider.CreateUser%2A> method raises the <xref:System.Web.Security.MembershipProvider.ValidatingPassword> event, if a <xref:System.Web.Security.MembershipValidatePasswordEventHandler> event handler has been specified, and continues or cancels the create-user action based on the results of the event. You can use the <xref:System.Web.Security.MembershipProvider.OnValidatingPassword%2A> virtual method to execute the specified <xref:System.Web.Security.MembershipValidatePasswordEventHandler> event handler.","nodes":[{"pos":[0,635],"content":"Takes, as input, the name of a new user, a password, and an e-mail address and inserts a new user for the application into the data source. The <xref:System.Web.Security.MembershipProvider.CreateUser%2A> method returns a <xref:System.Web.Security.MembershipUser> object populated with the information for the newly created user. The <xref:System.Web.Security.MembershipProvider.CreateUser%2A> method also defines an `out` parameter (in Visual Basic, you can use `ByRef`) that returns a <xref:System.Web.Security.MembershipCreateStatus> value that indicates that the user was successfully created, or a reason that user creation failed.","nodes":[{"content":"Takes, as input, the name of a new user, a password, and an e-mail address and inserts a new user for the application into the data source.","pos":[0,139]},{"content":"The <ph id=\"ph1\">&lt;xref:System.Web.Security.MembershipProvider.CreateUser%2A&gt;</ph> method returns a <ph id=\"ph2\">&lt;xref:System.Web.Security.MembershipUser&gt;</ph> object populated with the information for the newly created user.","pos":[140,328],"source":" The <xref:System.Web.Security.MembershipProvider.CreateUser%2A> method returns a <xref:System.Web.Security.MembershipUser> object populated with the information for the newly created user."},{"content":"The <ph id=\"ph1\">&lt;xref:System.Web.Security.MembershipProvider.CreateUser%2A&gt;</ph> method also defines an <ph id=\"ph2\">`out`</ph> parameter (in Visual Basic, you can use <ph id=\"ph3\">`ByRef`</ph>) that returns a <ph id=\"ph4\">&lt;xref:System.Web.Security.MembershipCreateStatus&gt;</ph> value that indicates that the user was successfully created, or a reason that user creation failed.","pos":[329,635],"source":" The <xref:System.Web.Security.MembershipProvider.CreateUser%2A> method also defines an `out` parameter (in Visual Basic, you can use `ByRef`) that returns a <xref:System.Web.Security.MembershipCreateStatus> value that indicates that the user was successfully created, or a reason that user creation failed."}]},{"pos":[642,1190],"content":"The <xref:System.Web.Security.MembershipProvider.CreateUser%2A> method raises the <xref:System.Web.Security.MembershipProvider.ValidatingPassword> event, if a <xref:System.Web.Security.MembershipValidatePasswordEventHandler> event handler has been specified, and continues or cancels the create-user action based on the results of the event. You can use the <xref:System.Web.Security.MembershipProvider.OnValidatingPassword%2A> virtual method to execute the specified <xref:System.Web.Security.MembershipValidatePasswordEventHandler> event handler.","nodes":[{"content":"The <xref:System.Web.Security.MembershipProvider.CreateUser%2A> method raises the <xref:System.Web.Security.MembershipProvider.ValidatingPassword> event, if a <xref:System.Web.Security.MembershipValidatePasswordEventHandler> event handler has been specified, and continues or cancels the create-user action based on the results of the event. You can use the <xref:System.Web.Security.MembershipProvider.OnValidatingPassword%2A> virtual method to execute the specified <xref:System.Web.Security.MembershipValidatePasswordEventHandler> event handler.","pos":[0,548],"nodes":[{"content":"The <ph id=\"ph1\">&lt;xref:System.Web.Security.MembershipProvider.CreateUser%2A&gt;</ph> method raises the <ph id=\"ph2\">&lt;xref:System.Web.Security.MembershipProvider.ValidatingPassword&gt;</ph> event, if a <ph id=\"ph3\">&lt;xref:System.Web.Security.MembershipValidatePasswordEventHandler&gt;</ph> event handler has been specified, and continues or cancels the create-user action based on the results of the event.","pos":[0,341],"source":"The <xref:System.Web.Security.MembershipProvider.CreateUser%2A> method raises the <xref:System.Web.Security.MembershipProvider.ValidatingPassword> event, if a <xref:System.Web.Security.MembershipValidatePasswordEventHandler> event handler has been specified, and continues or cancels the create-user action based on the results of the event."},{"content":"You can use the <ph id=\"ph1\">&lt;xref:System.Web.Security.MembershipProvider.OnValidatingPassword%2A&gt;</ph> virtual method to execute the specified <ph id=\"ph2\">&lt;xref:System.Web.Security.MembershipValidatePasswordEventHandler&gt;</ph> event handler.","pos":[342,548],"source":" You can use the <xref:System.Web.Security.MembershipProvider.OnValidatingPassword%2A> virtual method to execute the specified <xref:System.Web.Security.MembershipValidatePasswordEventHandler> event handler."}]}]}],"pos":[17112,18307],"yaml":true,"extradata":"MT"},{"content":"The user name for the new user.","nodes":[{"pos":[0,31],"content":"The user name for the new user.","nodes":[{"content":"The user name for the new user.","pos":[0,31]}]}],"pos":[18874,18906],"yaml":true},{"content":"The password for the new user.","nodes":[{"pos":[0,30],"content":"The password for the new user.","nodes":[{"content":"The password for the new user.","pos":[0,30]}]}],"pos":[18970,19001],"yaml":true},{"content":"The e-mail address for the new user.","nodes":[{"pos":[0,36],"content":"The e-mail address for the new user.","nodes":[{"content":"The e-mail address for the new user.","pos":[0,36]}]}],"pos":[19062,19099],"yaml":true},{"content":"The password question for the new user.","nodes":[{"pos":[0,39],"content":"The password question for the new user.","nodes":[{"content":"The password question for the new user.","pos":[0,39]}]}],"pos":[19171,19211],"yaml":true},{"content":"The password answer for the new user","nodes":[{"pos":[0,36],"content":"The password answer for the new user","nodes":[{"content":"The password answer for the new user","pos":[0,36]}]}],"pos":[19281,19318],"yaml":true},{"content":"Whether or not the new user is approved to be validated.","nodes":[{"pos":[0,56],"content":"Whether or not the new user is approved to be validated.","nodes":[{"content":"Whether or not the new user is approved to be validated.","pos":[0,56]}]}],"pos":[19385,19442],"yaml":true},{"content":"The unique identifier from the membership data source for the user.","nodes":[{"pos":[0,67],"content":"The unique identifier from the membership data source for the user.","nodes":[{"content":"The unique identifier from the membership data source for the user.","pos":[0,67]}]}],"pos":[19513,19581],"yaml":true},{"content":"A <xref href=\"System.Web.Security.MembershipCreateStatus\"></xref> enumeration value indicating whether the user was created successfully.","nodes":[{"pos":[0,137],"content":"A <ph id=\"ph1\">&lt;xref href=\"System.Web.Security.MembershipCreateStatus\"&gt;&lt;/xref&gt;</ph> enumeration value indicating whether the user was created successfully.","source":"A <xref href=\"System.Web.Security.MembershipCreateStatus\"></xref> enumeration value indicating whether the user was created successfully."}],"pos":[19672,19810],"yaml":true},{"content":"A <xref href=\"System.Web.Security.MembershipUser\"></xref> object populated with the information for the newly created user.","nodes":[{"pos":[0,123],"content":"A <ph id=\"ph1\">&lt;xref href=\"System.Web.Security.MembershipUser\"&gt;&lt;/xref&gt;</ph> object populated with the information for the newly created user.","source":"A <xref href=\"System.Web.Security.MembershipUser\"></xref> object populated with the information for the newly created user."}],"pos":[19888,20012],"yaml":true},{"content":"Decrypts an encrypted password.","nodes":[{"pos":[0,31],"content":"Decrypts an encrypted password.","nodes":[{"content":"Decrypts an encrypted password.","pos":[0,31]}]}],"pos":[21154,21186],"yaml":true},{"content":"The <xref:System.Web.Security.MembershipProvider.DecryptPassword%2A> method is a virtual method that is provided for membership provider implementations to use when supporting encrypted password formats.","nodes":[{"pos":[0,203],"content":"The <xref:System.Web.Security.MembershipProvider.DecryptPassword%2A> method is a virtual method that is provided for membership provider implementations to use when supporting encrypted password formats.","nodes":[{"content":"The <ph id=\"ph1\">&lt;xref:System.Web.Security.MembershipProvider.DecryptPassword%2A&gt;</ph> method is a virtual method that is provided for membership provider implementations to use when supporting encrypted password formats.","pos":[0,203],"source":"The <xref:System.Web.Security.MembershipProvider.DecryptPassword%2A> method is a virtual method that is provided for membership provider implementations to use when supporting encrypted password formats."}]}],"pos":[21197,21401],"yaml":true,"extradata":"MT"},{"content":"A byte array that contains the encrypted password to decrypt.","nodes":[{"pos":[0,61],"content":"A byte array that contains the encrypted password to decrypt.","nodes":[{"content":"A byte array that contains the encrypted password to decrypt.","pos":[0,61]}]}],"pos":[21786,21848],"yaml":true},{"content":"A byte array that contains the decrypted password.","nodes":[{"pos":[0,50],"content":"A byte array that contains the decrypted password.","nodes":[{"content":"A byte array that contains the decrypted password.","pos":[0,50]}]}],"pos":[21905,21956],"yaml":true},{"content":"The <xref href=\"System.Web.Configuration.MachineKeySection.ValidationKey\"></xref> property or <xref href=\"System.Web.Configuration.MachineKeySection.DecryptionKey\"></xref> property is set to `AutoGenerate`.","nodes":[{"pos":[0,206],"content":"The <ph id=\"ph1\">&lt;xref href=\"System.Web.Configuration.MachineKeySection.ValidationKey\"&gt;&lt;/xref&gt;</ph> property or <ph id=\"ph2\">&lt;xref href=\"System.Web.Configuration.MachineKeySection.DecryptionKey\"&gt;&lt;/xref&gt;</ph> property is set to <ph id=\"ph3\">`AutoGenerate`</ph>.","source":"The <xref href=\"System.Web.Configuration.MachineKeySection.ValidationKey\"></xref> property or <xref href=\"System.Web.Configuration.MachineKeySection.DecryptionKey\"></xref> property is set to `AutoGenerate`."}],"pos":[22178,22385],"yaml":true},{"content":"This method is not available. This can occur if the application targets the [!INCLUDE[net_client_v40_long](~/includes/net-client-v40-long-md.md)]. To prevent this exception, override the method, or change the application to target the full version of the .NET Framework.","nodes":[{"pos":[0,270],"content":"This method is not available. This can occur if the application targets the [!INCLUDE[net_client_v40_long](~/includes/net-client-v40-long-md.md)]. To prevent this exception, override the method, or change the application to target the full version of the .NET Framework.","nodes":[{"content":"This method is not available.","pos":[0,29]},{"content":"This can occur if the application targets the <ph id=\"ph1\">[!INCLUDE[net_client_v40_long](~/includes/net-client-v40-long-md.md)]</ph>.","pos":[30,146],"source":" This can occur if the application targets the [!INCLUDE[net_client_v40_long](~/includes/net-client-v40-long-md.md)]."},{"content":"To prevent this exception, override the method, or change the application to target the full version of the .NET Framework.","pos":[147,270]}]}],"pos":[22503,22774],"yaml":true},{"content":"Removes a user from the membership data source.","nodes":[{"pos":[0,47],"content":"Removes a user from the membership data source.","nodes":[{"content":"Removes a user from the membership data source.","pos":[0,47]}]}],"pos":[23878,23926],"yaml":true},{"content":"Takes, as input, the name of a user and deletes that user's information from the data source. If `deleteAllRelatedData` is `true`, then all user data stored in the database for the <xref:System.Web.Security.Roles>, <xref:System.Web.HttpContext.Profile%2A>, and <xref:System.Web.UI.WebControls.WebParts.WebPart> personalization is also deleted.","nodes":[{"pos":[0,343],"content":"Takes, as input, the name of a user and deletes that user's information from the data source. If `deleteAllRelatedData` is `true`, then all user data stored in the database for the <xref:System.Web.Security.Roles>, <xref:System.Web.HttpContext.Profile%2A>, and <xref:System.Web.UI.WebControls.WebParts.WebPart> personalization is also deleted.","nodes":[{"content":"Takes, as input, the name of a user and deletes that user's information from the data source.","pos":[0,93]},{"content":"If <ph id=\"ph1\">`deleteAllRelatedData`</ph> is <ph id=\"ph2\">`true`</ph>, then all user data stored in the database for the <ph id=\"ph3\">&lt;xref:System.Web.Security.Roles&gt;</ph>, <ph id=\"ph4\">&lt;xref:System.Web.HttpContext.Profile%2A&gt;</ph>, and <ph id=\"ph5\">&lt;xref:System.Web.UI.WebControls.WebParts.WebPart&gt;</ph> personalization is also deleted.","pos":[94,343],"source":" If `deleteAllRelatedData` is `true`, then all user data stored in the database for the <xref:System.Web.Security.Roles>, <xref:System.Web.HttpContext.Profile%2A>, and <xref:System.Web.UI.WebControls.WebParts.WebPart> personalization is also deleted."}]}],"pos":[23937,24281],"yaml":true,"extradata":"MT"},{"content":"The name of the user to delete.","nodes":[{"pos":[0,31],"content":"The name of the user to delete.","nodes":[{"content":"The name of the user to delete.","pos":[0,31]}]}],"pos":[24670,24702],"yaml":true},{"content":"`true` to delete data related to the user from the database; `false` to leave data related to the user in the database.","nodes":[{"pos":[0,119],"content":"<ph id=\"ph1\">`true`</ph> to delete data related to the user from the database; <ph id=\"ph2\">`false`</ph> to leave data related to the user in the database.","source":"`true` to delete data related to the user from the database; `false` to leave data related to the user in the database."}],"pos":[24779,24901],"yaml":true},{"content":"`true` if the user was successfully deleted; otherwise, `false`.","nodes":[{"pos":[0,64],"content":"<ph id=\"ph1\">`true`</ph> if the user was successfully deleted; otherwise, <ph id=\"ph2\">`false`</ph>.","source":"`true` if the user was successfully deleted; otherwise, `false`."}],"pos":[24959,25026],"yaml":true},{"content":"Indicates whether the membership provider is configured to allow users to reset their passwords.","nodes":[{"pos":[0,96],"content":"Indicates whether the membership provider is configured to allow users to reset their passwords.","nodes":[{"content":"Indicates whether the membership provider is configured to allow users to reset their passwords.","pos":[0,96]}]}],"pos":[26125,26222],"yaml":true},{"content":"<xref:System.Web.Security.MembershipProvider.EnablePasswordReset%2A> contains a Boolean value specified in the configuration file (Web.config) using the `enablePasswordReset` attribute. The value indicates whether users can use the <xref:System.Web.Security.MembershipProvider.ResetPassword%2A> method to overwrite their current password with a new, randomly generated password. This property is read-only.","nodes":[{"pos":[0,406],"content":"<xref:System.Web.Security.MembershipProvider.EnablePasswordReset%2A> contains a Boolean value specified in the configuration file (Web.config) using the `enablePasswordReset` attribute. The value indicates whether users can use the <xref:System.Web.Security.MembershipProvider.ResetPassword%2A> method to overwrite their current password with a new, randomly generated password. This property is read-only.","nodes":[{"content":"<ph id=\"ph1\">&lt;xref:System.Web.Security.MembershipProvider.EnablePasswordReset%2A&gt;</ph> contains a Boolean value specified in the configuration file (Web.config) using the <ph id=\"ph2\">`enablePasswordReset`</ph> attribute.","pos":[0,185],"source":"<xref:System.Web.Security.MembershipProvider.EnablePasswordReset%2A> contains a Boolean value specified in the configuration file (Web.config) using the `enablePasswordReset` attribute."},{"content":"The value indicates whether users can use the <ph id=\"ph1\">&lt;xref:System.Web.Security.MembershipProvider.ResetPassword%2A&gt;</ph> method to overwrite their current password with a new, randomly generated password.","pos":[186,378],"source":" The value indicates whether users can use the <xref:System.Web.Security.MembershipProvider.ResetPassword%2A> method to overwrite their current password with a new, randomly generated password."},{"content":"This property is read-only.","pos":[379,406]}]}],"pos":[26233,26640],"yaml":true,"extradata":"MT"},{"content":"`true` if the membership provider supports password reset; otherwise, `false`. The default is `true`.","nodes":[{"pos":[0,101],"content":"`true` if the membership provider supports password reset; otherwise, `false`. The default is `true`.","nodes":[{"content":"<ph id=\"ph1\">`true`</ph> if the membership provider supports password reset; otherwise, <ph id=\"ph2\">`false`</ph>.","pos":[0,78],"source":"`true` if the membership provider supports password reset; otherwise, `false`."},{"content":"The default is <ph id=\"ph1\">`true`</ph>.","pos":[79,101],"source":" The default is `true`."}]}],"pos":[26979,27083],"yaml":true},{"content":"Indicates whether the membership provider is configured to allow users to retrieve their passwords.","nodes":[{"pos":[0,99],"content":"Indicates whether the membership provider is configured to allow users to retrieve their passwords.","nodes":[{"content":"Indicates whether the membership provider is configured to allow users to retrieve their passwords.","pos":[0,99]}]}],"pos":[28215,28315],"yaml":true},{"content":"The <xref:System.Web.Security.MembershipProvider.EnablePasswordRetrieval%2A> property contains a Boolean value specified in the configuration file (Web.config) using the `enablePasswordRetrieval` attribute. The value indicates whether users can use the <xref:System.Web.Security.MembershipProvider.GetPassword%2A> method to retrieve their current password from the data source. This property is read-only.  \n  \n If your custom membership provider supports hashed passwords, your <xref:System.Web.Security.MembershipProvider.GetPassword%2A> method implementation should throw an exception if <xref:System.Web.Security.MembershipProvider.EnablePasswordRetrieval%2A> is set to `true` and the password format is set to `Hashed`. Hashed passwords cannot be retrieved.","nodes":[{"pos":[0,405],"content":"The <xref:System.Web.Security.MembershipProvider.EnablePasswordRetrieval%2A> property contains a Boolean value specified in the configuration file (Web.config) using the `enablePasswordRetrieval` attribute. The value indicates whether users can use the <xref:System.Web.Security.MembershipProvider.GetPassword%2A> method to retrieve their current password from the data source. This property is read-only.","nodes":[{"content":"The <ph id=\"ph1\">&lt;xref:System.Web.Security.MembershipProvider.EnablePasswordRetrieval%2A&gt;</ph> property contains a Boolean value specified in the configuration file (Web.config) using the <ph id=\"ph2\">`enablePasswordRetrieval`</ph> attribute.","pos":[0,206],"source":"The <xref:System.Web.Security.MembershipProvider.EnablePasswordRetrieval%2A> property contains a Boolean value specified in the configuration file (Web.config) using the `enablePasswordRetrieval` attribute."},{"content":"The value indicates whether users can use the <ph id=\"ph1\">&lt;xref:System.Web.Security.MembershipProvider.GetPassword%2A&gt;</ph> method to retrieve their current password from the data source.","pos":[207,377],"source":" The value indicates whether users can use the <xref:System.Web.Security.MembershipProvider.GetPassword%2A> method to retrieve their current password from the data source."},{"content":"This property is read-only.","pos":[378,405]}]},{"pos":[412,762],"content":"If your custom membership provider supports hashed passwords, your <xref:System.Web.Security.MembershipProvider.GetPassword%2A> method implementation should throw an exception if <xref:System.Web.Security.MembershipProvider.EnablePasswordRetrieval%2A> is set to `true` and the password format is set to `Hashed`. Hashed passwords cannot be retrieved.","nodes":[{"content":"If your custom membership provider supports hashed passwords, your <ph id=\"ph1\">&lt;xref:System.Web.Security.MembershipProvider.GetPassword%2A&gt;</ph> method implementation should throw an exception if <ph id=\"ph2\">&lt;xref:System.Web.Security.MembershipProvider.EnablePasswordRetrieval%2A&gt;</ph> is set to <ph id=\"ph3\">`true`</ph> and the password format is set to <ph id=\"ph4\">`Hashed`</ph>.","pos":[0,312],"source":"If your custom membership provider supports hashed passwords, your <xref:System.Web.Security.MembershipProvider.GetPassword%2A> method implementation should throw an exception if <xref:System.Web.Security.MembershipProvider.EnablePasswordRetrieval%2A> is set to `true` and the password format is set to `Hashed`."},{"content":"Hashed passwords cannot be retrieved.","pos":[313,350]}]}],"pos":[28326,29093],"yaml":true,"extradata":"MT"},{"content":"`true` if the membership provider is configured to support password retrieval; otherwise, `false`. The default is `false`.","nodes":[{"pos":[0,122],"content":"`true` if the membership provider is configured to support password retrieval; otherwise, `false`. The default is `false`.","nodes":[{"content":"<ph id=\"ph1\">`true`</ph> if the membership provider is configured to support password retrieval; otherwise, <ph id=\"ph2\">`false`</ph>.","pos":[0,98],"source":"`true` if the membership provider is configured to support password retrieval; otherwise, `false`."},{"content":"The default is <ph id=\"ph1\">`false`</ph>.","pos":[99,122],"source":" The default is `false`."}]}],"pos":[29436,29561],"yaml":true},{"content":"Encrypts a password.","nodes":[{"pos":[0,20],"content":"Encrypts a password.","nodes":[{"content":"Encrypts a password.","pos":[0,20]}]}],"pos":[30716,30737],"yaml":true},{"content":"The <xref:System.Web.Security.MembershipProvider.EncryptPassword%2A> method is a virtual method that is provided for membership provider implementations to use when supporting encrypted password formats.","nodes":[{"pos":[0,203],"content":"The <xref:System.Web.Security.MembershipProvider.EncryptPassword%2A> method is a virtual method that is provided for membership provider implementations to use when supporting encrypted password formats.","nodes":[{"content":"The <ph id=\"ph1\">&lt;xref:System.Web.Security.MembershipProvider.EncryptPassword%2A&gt;</ph> method is a virtual method that is provided for membership provider implementations to use when supporting encrypted password formats.","pos":[0,203],"source":"The <xref:System.Web.Security.MembershipProvider.EncryptPassword%2A> method is a virtual method that is provided for membership provider implementations to use when supporting encrypted password formats."}]}],"pos":[30748,30952],"yaml":true,"extradata":"MT"},{"content":"A byte array that contains the password to encrypt.","nodes":[{"pos":[0,51],"content":"A byte array that contains the password to encrypt.","nodes":[{"content":"A byte array that contains the password to encrypt.","pos":[0,51]}]}],"pos":[31323,31375],"yaml":true},{"content":"A byte array that contains the encrypted password.","nodes":[{"pos":[0,50],"content":"A byte array that contains the encrypted password.","nodes":[{"content":"A byte array that contains the encrypted password.","pos":[0,50]}]}],"pos":[31432,31483],"yaml":true},{"content":"The <xref href=\"System.Web.Configuration.MachineKeySection.ValidationKey\"></xref> property or <xref href=\"System.Web.Configuration.MachineKeySection.DecryptionKey\"></xref> property is set to `AutoGenerate`.","nodes":[{"pos":[0,206],"content":"The <ph id=\"ph1\">&lt;xref href=\"System.Web.Configuration.MachineKeySection.ValidationKey\"&gt;&lt;/xref&gt;</ph> property or <ph id=\"ph2\">&lt;xref href=\"System.Web.Configuration.MachineKeySection.DecryptionKey\"&gt;&lt;/xref&gt;</ph> property is set to <ph id=\"ph3\">`AutoGenerate`</ph>.","source":"The <xref href=\"System.Web.Configuration.MachineKeySection.ValidationKey\"></xref> property or <xref href=\"System.Web.Configuration.MachineKeySection.DecryptionKey\"></xref> property is set to `AutoGenerate`."}],"pos":[31705,31912],"yaml":true},{"content":"This method is not available. This can occur if the application targets the [!INCLUDE[net_client_v40_long](~/includes/net-client-v40-long-md.md)]. To prevent this exception, override the method, or change the application to target the full version of the .NET Framework.","nodes":[{"pos":[0,270],"content":"This method is not available. This can occur if the application targets the [!INCLUDE[net_client_v40_long](~/includes/net-client-v40-long-md.md)]. To prevent this exception, override the method, or change the application to target the full version of the .NET Framework.","nodes":[{"content":"This method is not available.","pos":[0,29]},{"content":"This can occur if the application targets the <ph id=\"ph1\">[!INCLUDE[net_client_v40_long](~/includes/net-client-v40-long-md.md)]</ph>.","pos":[30,146],"source":" This can occur if the application targets the [!INCLUDE[net_client_v40_long](~/includes/net-client-v40-long-md.md)]."},{"content":"To prevent this exception, override the method, or change the application to target the full version of the .NET Framework.","pos":[147,270]}]}],"pos":[32030,32301],"yaml":true},{"content":"Encrypts the specified password using the specified password-compatibility mode.","nodes":[{"pos":[0,80],"content":"Encrypts the specified password using the specified password-compatibility mode.","nodes":[{"content":"Encrypts the specified password using the specified password-compatibility mode.","pos":[0,80]}]}],"pos":[33657,33738],"yaml":true},{"content":"A byte array that contains the password to encrypt.","nodes":[{"pos":[0,51],"content":"A byte array that contains the password to encrypt.","nodes":[{"content":"A byte array that contains the password to encrypt.","pos":[0,51]}]}],"pos":[33995,34047],"yaml":true},{"content":"The membership password-compatibility mode.","nodes":[{"pos":[0,43],"content":"The membership password-compatibility mode.","nodes":[{"content":"The membership password-compatibility mode.","pos":[0,43]}]}],"pos":[34181,34225],"yaml":true},{"content":"A byte array that contains the encrypted password.","nodes":[{"pos":[0,50],"content":"A byte array that contains the encrypted password.","nodes":[{"content":"A byte array that contains the encrypted password.","pos":[0,50]}]}],"pos":[34282,34333],"yaml":true},{"content":"The <xref href=\"System.Web.Configuration.MachineKeySection.ValidationKey\"></xref> property or <xref href=\"System.Web.Configuration.MachineKeySection.DecryptionKey\"></xref> property is set to `AutoGenerate`.","nodes":[{"pos":[0,206],"content":"The <ph id=\"ph1\">&lt;xref href=\"System.Web.Configuration.MachineKeySection.ValidationKey\"&gt;&lt;/xref&gt;</ph> property or <ph id=\"ph2\">&lt;xref href=\"System.Web.Configuration.MachineKeySection.DecryptionKey\"&gt;&lt;/xref&gt;</ph> property is set to <ph id=\"ph3\">`AutoGenerate`</ph>.","source":"The <xref href=\"System.Web.Configuration.MachineKeySection.ValidationKey\"></xref> property or <xref href=\"System.Web.Configuration.MachineKeySection.DecryptionKey\"></xref> property is set to `AutoGenerate`."}],"pos":[34555,34762],"yaml":true},{"content":"This method is not available. This can occur if the application targets the [!INCLUDE[net_client_v40_long](~/includes/net-client-v40-long-md.md)]. To prevent this exception, override the method, or change the application to target the full version of the .NET Framework.","nodes":[{"pos":[0,270],"content":"This method is not available. This can occur if the application targets the [!INCLUDE[net_client_v40_long](~/includes/net-client-v40-long-md.md)]. To prevent this exception, override the method, or change the application to target the full version of the .NET Framework.","nodes":[{"content":"This method is not available.","pos":[0,29]},{"content":"This can occur if the application targets the <ph id=\"ph1\">[!INCLUDE[net_client_v40_long](~/includes/net-client-v40-long-md.md)]</ph>.","pos":[30,146],"source":" This can occur if the application targets the [!INCLUDE[net_client_v40_long](~/includes/net-client-v40-long-md.md)]."},{"content":"To prevent this exception, override the method, or change the application to target the full version of the .NET Framework.","pos":[147,270]}]}],"pos":[34880,35151],"yaml":true},{"content":"Gets a collection of membership users where the e-mail address contains the specified e-mail address to match.","nodes":[{"pos":[0,110],"content":"Gets a collection of membership users where the e-mail address contains the specified e-mail address to match.","nodes":[{"content":"Gets a collection of membership users where the e-mail address contains the specified e-mail address to match.","pos":[0,110]}]}],"pos":[36402,36513],"yaml":true},{"content":"<xref:System.Web.Security.MembershipProvider.FindUsersByEmail%2A> returns a list of membership users where the user's e-mail address matches the supplied `emailToMatch` for the configured <xref:System.Web.Security.MembershipProvider.ApplicationName%2A> property. If your data source supports additional search capabilities, such as wildcard characters, you can provide more extensive search capabilities for e-mail addresses.  \n  \n The results returned by <xref:System.Web.Security.MembershipProvider.FindUsersByEmail%2A> are constrained by the `pageIndex` and `pageSize` parameters. The `pageSize` parameter identifies the number of <xref:System.Web.Security.MembershipUser> objects to return in the <xref:System.Web.Security.MembershipUserCollection> collection. The `pageIndex` parameter identifies which page of results to return where 0 identifies the first page. The `totalRecords` parameter is an `out` parameter that is set to the total number of membership users that matched the `emailToMatch` value. For example, if 13 users were found where `emailToMatch` matched part of or the entire e-mail address, and the `pageIndex` value was 1 with a `pageSize` of 5, then the <xref:System.Web.Security.MembershipUserCollection> would contain the sixth through the tenth users returned. `totalRecords` would be set to 13.","nodes":[{"pos":[0,425],"content":"<xref:System.Web.Security.MembershipProvider.FindUsersByEmail%2A> returns a list of membership users where the user's e-mail address matches the supplied `emailToMatch` for the configured <xref:System.Web.Security.MembershipProvider.ApplicationName%2A> property. If your data source supports additional search capabilities, such as wildcard characters, you can provide more extensive search capabilities for e-mail addresses.","nodes":[{"content":"<ph id=\"ph1\">&lt;xref:System.Web.Security.MembershipProvider.FindUsersByEmail%2A&gt;</ph> returns a list of membership users where the user's e-mail address matches the supplied <ph id=\"ph2\">`emailToMatch`</ph> for the configured <ph id=\"ph3\">&lt;xref:System.Web.Security.MembershipProvider.ApplicationName%2A&gt;</ph> property.","pos":[0,262],"source":"<xref:System.Web.Security.MembershipProvider.FindUsersByEmail%2A> returns a list of membership users where the user's e-mail address matches the supplied `emailToMatch` for the configured <xref:System.Web.Security.MembershipProvider.ApplicationName%2A> property."},{"content":"If your data source supports additional search capabilities, such as wildcard characters, you can provide more extensive search capabilities for e-mail addresses.","pos":[263,425]}]},{"pos":[432,1323],"content":"The results returned by <xref:System.Web.Security.MembershipProvider.FindUsersByEmail%2A> are constrained by the `pageIndex` and `pageSize` parameters. The `pageSize` parameter identifies the number of <xref:System.Web.Security.MembershipUser> objects to return in the <xref:System.Web.Security.MembershipUserCollection> collection. The `pageIndex` parameter identifies which page of results to return where 0 identifies the first page. The `totalRecords` parameter is an `out` parameter that is set to the total number of membership users that matched the `emailToMatch` value. For example, if 13 users were found where `emailToMatch` matched part of or the entire e-mail address, and the `pageIndex` value was 1 with a `pageSize` of 5, then the <xref:System.Web.Security.MembershipUserCollection> would contain the sixth through the tenth users returned. `totalRecords` would be set to 13.","nodes":[{"content":"The results returned by <ph id=\"ph1\">&lt;xref:System.Web.Security.MembershipProvider.FindUsersByEmail%2A&gt;</ph> are constrained by the <ph id=\"ph2\">`pageIndex`</ph> and <ph id=\"ph3\">`pageSize`</ph> parameters.","pos":[0,151],"source":"The results returned by <xref:System.Web.Security.MembershipProvider.FindUsersByEmail%2A> are constrained by the `pageIndex` and `pageSize` parameters."},{"content":"The <ph id=\"ph1\">`pageSize`</ph> parameter identifies the number of <ph id=\"ph2\">&lt;xref:System.Web.Security.MembershipUser&gt;</ph> objects to return in the <ph id=\"ph3\">&lt;xref:System.Web.Security.MembershipUserCollection&gt;</ph> collection.","pos":[152,332],"source":" The `pageSize` parameter identifies the number of <xref:System.Web.Security.MembershipUser> objects to return in the <xref:System.Web.Security.MembershipUserCollection> collection."},{"content":"The <ph id=\"ph1\">`pageIndex`</ph> parameter identifies which page of results to return where 0 identifies the first page.","pos":[333,436],"source":" The `pageIndex` parameter identifies which page of results to return where 0 identifies the first page."},{"content":"The <ph id=\"ph1\">`totalRecords`</ph> parameter is an <ph id=\"ph2\">`out`</ph> parameter that is set to the total number of membership users that matched the <ph id=\"ph3\">`emailToMatch`</ph> value.","pos":[437,578],"source":" The `totalRecords` parameter is an `out` parameter that is set to the total number of membership users that matched the `emailToMatch` value."},{"content":"For example, if 13 users were found where <ph id=\"ph1\">`emailToMatch`</ph> matched part of or the entire e-mail address, and the <ph id=\"ph2\">`pageIndex`</ph> value was 1 with a <ph id=\"ph3\">`pageSize`</ph> of 5, then the <ph id=\"ph4\">&lt;xref:System.Web.Security.MembershipUserCollection&gt;</ph> would contain the sixth through the tenth users returned.","pos":[579,856],"source":" For example, if 13 users were found where `emailToMatch` matched part of or the entire e-mail address, and the `pageIndex` value was 1 with a `pageSize` of 5, then the <xref:System.Web.Security.MembershipUserCollection> would contain the sixth through the tenth users returned."},{"content":"<ph id=\"ph1\">`totalRecords`</ph> would be set to 13.","pos":[857,891],"source":"`totalRecords` would be set to 13."}]}],"pos":[36524,37852],"yaml":true,"extradata":"MT"},{"content":"The e-mail address to search for.","nodes":[{"pos":[0,33],"content":"The e-mail address to search for.","nodes":[{"content":"The e-mail address to search for.","pos":[0,33]}]}],"pos":[38319,38353],"yaml":true},{"content":"The index of the page of results to return. <code>pageIndex</code> is zero-based.","nodes":[{"pos":[0,81],"content":"The index of the page of results to return. <code>pageIndex</code> is zero-based.","nodes":[{"content":"The index of the page of results to return.","pos":[0,43]},{"content":"<bpt id=\"p1\">&lt;code&gt;</bpt><ph id=\"ph1\">pageIndex</ph><ept id=\"p1\">&lt;/code&gt;</ept> is zero-based.","pos":[44,81],"source":"<code>pageIndex</code> is zero-based."}]}],"pos":[38417,38499],"yaml":true},{"content":"The size of the page of results to return.","nodes":[{"pos":[0,42],"content":"The size of the page of results to return.","nodes":[{"content":"The size of the page of results to return.","pos":[0,42]}]}],"pos":[38562,38605],"yaml":true},{"content":"The total number of matched users.","nodes":[{"pos":[0,34],"content":"The total number of matched users.","nodes":[{"content":"The total number of matched users.","pos":[0,34]}]}],"pos":[38672,38707],"yaml":true},{"content":"A <xref href=\"System.Web.Security.MembershipUserCollection\"></xref> collection that contains a page of <code>pageSize</code><xref href=\"System.Web.Security.MembershipUser\"></xref> objects beginning at the page specified by <code>pageIndex</code>.","nodes":[{"pos":[0,246],"content":"A <ph id=\"ph1\">&lt;xref href=\"System.Web.Security.MembershipUserCollection\"&gt;&lt;/xref&gt;</ph> collection that contains a page of <bpt id=\"p1\">&lt;code&gt;</bpt><ph id=\"ph2\">pageSize</ph><ept id=\"p1\">&lt;/code&gt;</ept><ph id=\"ph3\">&lt;xref href=\"System.Web.Security.MembershipUser\"&gt;&lt;/xref&gt;</ph> objects beginning at the page specified by <bpt id=\"p2\">&lt;code&gt;</bpt><ph id=\"ph4\">pageIndex</ph><ept id=\"p2\">&lt;/code&gt;</ept>.","source":"A <xref href=\"System.Web.Security.MembershipUserCollection\"></xref> collection that contains a page of <code>pageSize</code><xref href=\"System.Web.Security.MembershipUser\"></xref> objects beginning at the page specified by <code>pageIndex</code>."}],"pos":[38795,39042],"yaml":true},{"content":"Gets a collection of membership users where the user name contains the specified user name to match.","nodes":[{"pos":[0,100],"content":"Gets a collection of membership users where the user name contains the specified user name to match.","nodes":[{"content":"Gets a collection of membership users where the user name contains the specified user name to match.","pos":[0,100]}]}],"pos":[40373,40474],"yaml":true},{"content":"<xref:System.Web.Security.MembershipProvider.FindUsersByName%2A> returns a list of membership users where the user name matches the supplied `usernameToMatch` for the configured <xref:System.Web.Security.MembershipProvider.ApplicationName%2A> property. If your data source supports additional search capabilities, such as wildcard characters, you can provide more extensive search capabilities for user names.  \n  \n The results returned by <xref:System.Web.Security.MembershipProvider.FindUsersByName%2A> are constrained by the `pageIndex` and `pageSize` parameters. The `pageSize` parameter identifies the number of <xref:System.Web.Security.MembershipUser> objects to return in the <xref:System.Web.Security.MembershipUserCollection> collection. The `pageIndex` parameter identifies which page of results to return, where 0 identifies the first page. The `totalRecords` parameter is an `out` parameter that is set to the total number of membership users that matched the `usernameToMatch` value. For example, if 13 users were found where `usernameToMatch` matched part of or the entire user name, and the `pageIndex` value was 1 with a `pageSize` of 5, then the <xref:System.Web.Security.MembershipUserCollection> would contain the sixth through the tenth users returned. `totalRecords` would be set to 13.","nodes":[{"pos":[0,409],"content":"<xref:System.Web.Security.MembershipProvider.FindUsersByName%2A> returns a list of membership users where the user name matches the supplied `usernameToMatch` for the configured <xref:System.Web.Security.MembershipProvider.ApplicationName%2A> property. If your data source supports additional search capabilities, such as wildcard characters, you can provide more extensive search capabilities for user names.","nodes":[{"content":"<ph id=\"ph1\">&lt;xref:System.Web.Security.MembershipProvider.FindUsersByName%2A&gt;</ph> returns a list of membership users where the user name matches the supplied <ph id=\"ph2\">`usernameToMatch`</ph> for the configured <ph id=\"ph3\">&lt;xref:System.Web.Security.MembershipProvider.ApplicationName%2A&gt;</ph> property.","pos":[0,252],"source":"<xref:System.Web.Security.MembershipProvider.FindUsersByName%2A> returns a list of membership users where the user name matches the supplied `usernameToMatch` for the configured <xref:System.Web.Security.MembershipProvider.ApplicationName%2A> property."},{"content":"If your data source supports additional search capabilities, such as wildcard characters, you can provide more extensive search capabilities for user names.","pos":[253,409]}]},{"pos":[416,1308],"content":"The results returned by <xref:System.Web.Security.MembershipProvider.FindUsersByName%2A> are constrained by the `pageIndex` and `pageSize` parameters. The `pageSize` parameter identifies the number of <xref:System.Web.Security.MembershipUser> objects to return in the <xref:System.Web.Security.MembershipUserCollection> collection. The `pageIndex` parameter identifies which page of results to return, where 0 identifies the first page. The `totalRecords` parameter is an `out` parameter that is set to the total number of membership users that matched the `usernameToMatch` value. For example, if 13 users were found where `usernameToMatch` matched part of or the entire user name, and the `pageIndex` value was 1 with a `pageSize` of 5, then the <xref:System.Web.Security.MembershipUserCollection> would contain the sixth through the tenth users returned. `totalRecords` would be set to 13.","nodes":[{"content":"The results returned by <ph id=\"ph1\">&lt;xref:System.Web.Security.MembershipProvider.FindUsersByName%2A&gt;</ph> are constrained by the <ph id=\"ph2\">`pageIndex`</ph> and <ph id=\"ph3\">`pageSize`</ph> parameters.","pos":[0,150],"source":"The results returned by <xref:System.Web.Security.MembershipProvider.FindUsersByName%2A> are constrained by the `pageIndex` and `pageSize` parameters."},{"content":"The <ph id=\"ph1\">`pageSize`</ph> parameter identifies the number of <ph id=\"ph2\">&lt;xref:System.Web.Security.MembershipUser&gt;</ph> objects to return in the <ph id=\"ph3\">&lt;xref:System.Web.Security.MembershipUserCollection&gt;</ph> collection.","pos":[151,331],"source":" The `pageSize` parameter identifies the number of <xref:System.Web.Security.MembershipUser> objects to return in the <xref:System.Web.Security.MembershipUserCollection> collection."},{"content":"The <ph id=\"ph1\">`pageIndex`</ph> parameter identifies which page of results to return, where 0 identifies the first page.","pos":[332,436],"source":" The `pageIndex` parameter identifies which page of results to return, where 0 identifies the first page."},{"content":"The <ph id=\"ph1\">`totalRecords`</ph> parameter is an <ph id=\"ph2\">`out`</ph> parameter that is set to the total number of membership users that matched the <ph id=\"ph3\">`usernameToMatch`</ph> value.","pos":[437,581],"source":" The `totalRecords` parameter is an `out` parameter that is set to the total number of membership users that matched the `usernameToMatch` value."},{"content":"For example, if 13 users were found where <ph id=\"ph1\">`usernameToMatch`</ph> matched part of or the entire user name, and the <ph id=\"ph2\">`pageIndex`</ph> value was 1 with a <ph id=\"ph3\">`pageSize`</ph> of 5, then the <ph id=\"ph4\">&lt;xref:System.Web.Security.MembershipUserCollection&gt;</ph> would contain the sixth through the tenth users returned.","pos":[582,857],"source":" For example, if 13 users were found where `usernameToMatch` matched part of or the entire user name, and the `pageIndex` value was 1 with a `pageSize` of 5, then the <xref:System.Web.Security.MembershipUserCollection> would contain the sixth through the tenth users returned."},{"content":"<ph id=\"ph1\">`totalRecords`</ph> would be set to 13.","pos":[858,892],"source":"`totalRecords` would be set to 13."}]}],"pos":[40485,41798],"yaml":true,"extradata":"MT"},{"content":"The user name to search for.","nodes":[{"pos":[0,28],"content":"The user name to search for.","nodes":[{"content":"The user name to search for.","pos":[0,28]}]}],"pos":[42270,42299],"yaml":true},{"content":"The index of the page of results to return. <code>pageIndex</code> is zero-based.","nodes":[{"pos":[0,81],"content":"The index of the page of results to return. <code>pageIndex</code> is zero-based.","nodes":[{"content":"The index of the page of results to return.","pos":[0,43]},{"content":"<bpt id=\"p1\">&lt;code&gt;</bpt><ph id=\"ph1\">pageIndex</ph><ept id=\"p1\">&lt;/code&gt;</ept> is zero-based.","pos":[44,81],"source":"<code>pageIndex</code> is zero-based."}]}],"pos":[42363,42445],"yaml":true},{"content":"The size of the page of results to return.","nodes":[{"pos":[0,42],"content":"The size of the page of results to return.","nodes":[{"content":"The size of the page of results to return.","pos":[0,42]}]}],"pos":[42508,42551],"yaml":true},{"content":"The total number of matched users.","nodes":[{"pos":[0,34],"content":"The total number of matched users.","nodes":[{"content":"The total number of matched users.","pos":[0,34]}]}],"pos":[42618,42653],"yaml":true},{"content":"A <xref href=\"System.Web.Security.MembershipUserCollection\"></xref> collection that contains a page of <code>pageSize</code><xref href=\"System.Web.Security.MembershipUser\"></xref> objects beginning at the page specified by <code>pageIndex</code>.","nodes":[{"pos":[0,246],"content":"A <ph id=\"ph1\">&lt;xref href=\"System.Web.Security.MembershipUserCollection\"&gt;&lt;/xref&gt;</ph> collection that contains a page of <bpt id=\"p1\">&lt;code&gt;</bpt><ph id=\"ph2\">pageSize</ph><ept id=\"p1\">&lt;/code&gt;</ept><ph id=\"ph3\">&lt;xref href=\"System.Web.Security.MembershipUser\"&gt;&lt;/xref&gt;</ph> objects beginning at the page specified by <bpt id=\"p2\">&lt;code&gt;</bpt><ph id=\"ph4\">pageIndex</ph><ept id=\"p2\">&lt;/code&gt;</ept>.","source":"A <xref href=\"System.Web.Security.MembershipUserCollection\"></xref> collection that contains a page of <code>pageSize</code><xref href=\"System.Web.Security.MembershipUser\"></xref> objects beginning at the page specified by <code>pageIndex</code>."}],"pos":[42741,42988],"yaml":true},{"content":"Gets a collection of all the users in the data source in pages of data.","nodes":[{"pos":[0,71],"content":"Gets a collection of all the users in the data source in pages of data.","nodes":[{"content":"Gets a collection of all the users in the data source in pages of data.","pos":[0,71]}]}],"pos":[44228,44300],"yaml":true},{"content":"<xref:System.Web.Security.MembershipProvider.GetAllUsers%2A> returns a list of all of the users from the data source for the configured <xref:System.Web.Security.MembershipProvider.ApplicationName%2A> property. Users are returned in alphabetical order by user name.  \n  \n The results returned by <xref:System.Web.Security.MembershipProvider.GetAllUsers%2A> are constrained by the `pageIndex` and `pageSize` parameters. The `pageSize` parameter identifies the number of <xref:System.Web.Security.MembershipUser> objects to return in the <xref:System.Web.Security.MembershipUserCollection> collection. The `pageIndex` parameter identifies which page of results to return, where 0 identifies the first page. The `totalRecords` parameter is an `out` parameter that is set to the total number of membership users in the database. For example, if there are 13 users in the database, and the `pageIndex` value was 1 with a `pageSize` of 5, then the <xref:System.Web.Security.MembershipUserCollection> would contain the sixth through the tenth users returned. `totalRecords` would be set to 13.","nodes":[{"pos":[0,265],"content":"<xref:System.Web.Security.MembershipProvider.GetAllUsers%2A> returns a list of all of the users from the data source for the configured <xref:System.Web.Security.MembershipProvider.ApplicationName%2A> property. Users are returned in alphabetical order by user name.","nodes":[{"content":"<xref:System.Web.Security.MembershipProvider.GetAllUsers%2A> returns a list of all of the users from the data source for the configured <xref:System.Web.Security.MembershipProvider.ApplicationName%2A> property. Users are returned in alphabetical order by user name.","pos":[0,265],"nodes":[{"content":"<ph id=\"ph1\">&lt;xref:System.Web.Security.MembershipProvider.GetAllUsers%2A&gt;</ph> returns a list of all of the users from the data source for the configured <ph id=\"ph2\">&lt;xref:System.Web.Security.MembershipProvider.ApplicationName%2A&gt;</ph> property.","pos":[0,210],"source":"<xref:System.Web.Security.MembershipProvider.GetAllUsers%2A> returns a list of all of the users from the data source for the configured <xref:System.Web.Security.MembershipProvider.ApplicationName%2A> property."},{"content":"Users are returned in alphabetical order by user name.","pos":[211,265]}]}]},{"pos":[272,1086],"content":"The results returned by <xref:System.Web.Security.MembershipProvider.GetAllUsers%2A> are constrained by the `pageIndex` and `pageSize` parameters. The `pageSize` parameter identifies the number of <xref:System.Web.Security.MembershipUser> objects to return in the <xref:System.Web.Security.MembershipUserCollection> collection. The `pageIndex` parameter identifies which page of results to return, where 0 identifies the first page. The `totalRecords` parameter is an `out` parameter that is set to the total number of membership users in the database. For example, if there are 13 users in the database, and the `pageIndex` value was 1 with a `pageSize` of 5, then the <xref:System.Web.Security.MembershipUserCollection> would contain the sixth through the tenth users returned. `totalRecords` would be set to 13.","nodes":[{"content":"The results returned by <ph id=\"ph1\">&lt;xref:System.Web.Security.MembershipProvider.GetAllUsers%2A&gt;</ph> are constrained by the <ph id=\"ph2\">`pageIndex`</ph> and <ph id=\"ph3\">`pageSize`</ph> parameters.","pos":[0,146],"source":"The results returned by <xref:System.Web.Security.MembershipProvider.GetAllUsers%2A> are constrained by the `pageIndex` and `pageSize` parameters."},{"content":"The <ph id=\"ph1\">`pageSize`</ph> parameter identifies the number of <ph id=\"ph2\">&lt;xref:System.Web.Security.MembershipUser&gt;</ph> objects to return in the <ph id=\"ph3\">&lt;xref:System.Web.Security.MembershipUserCollection&gt;</ph> collection.","pos":[147,327],"source":" The `pageSize` parameter identifies the number of <xref:System.Web.Security.MembershipUser> objects to return in the <xref:System.Web.Security.MembershipUserCollection> collection."},{"content":"The <ph id=\"ph1\">`pageIndex`</ph> parameter identifies which page of results to return, where 0 identifies the first page.","pos":[328,432],"source":" The `pageIndex` parameter identifies which page of results to return, where 0 identifies the first page."},{"content":"The <ph id=\"ph1\">`totalRecords`</ph> parameter is an <ph id=\"ph2\">`out`</ph> parameter that is set to the total number of membership users in the database.","pos":[433,552],"source":" The `totalRecords` parameter is an `out` parameter that is set to the total number of membership users in the database."},{"content":"For example, if there are 13 users in the database, and the <ph id=\"ph1\">`pageIndex`</ph> value was 1 with a <ph id=\"ph2\">`pageSize`</ph> of 5, then the <ph id=\"ph3\">&lt;xref:System.Web.Security.MembershipUserCollection&gt;</ph> would contain the sixth through the tenth users returned.","pos":[553,779],"source":" For example, if there are 13 users in the database, and the `pageIndex` value was 1 with a `pageSize` of 5, then the <xref:System.Web.Security.MembershipUserCollection> would contain the sixth through the tenth users returned."},{"content":"<ph id=\"ph1\">`totalRecords`</ph> would be set to 13.","pos":[780,814],"source":"`totalRecords` would be set to 13."}]}],"pos":[44311,45402],"yaml":true,"extradata":"MT"},{"content":"The index of the page of results to return. <code>pageIndex</code> is zero-based.","nodes":[{"pos":[0,81],"content":"The index of the page of results to return. <code>pageIndex</code> is zero-based.","nodes":[{"content":"The index of the page of results to return.","pos":[0,43]},{"content":"<bpt id=\"p1\">&lt;code&gt;</bpt><ph id=\"ph1\">pageIndex</ph><ept id=\"p1\">&lt;/code&gt;</ept> is zero-based.","pos":[44,81],"source":"<code>pageIndex</code> is zero-based."}]}],"pos":[45839,45921],"yaml":true},{"content":"The size of the page of results to return.","nodes":[{"pos":[0,42],"content":"The size of the page of results to return.","nodes":[{"content":"The size of the page of results to return.","pos":[0,42]}]}],"pos":[45984,46027],"yaml":true},{"content":"The total number of matched users.","nodes":[{"pos":[0,34],"content":"The total number of matched users.","nodes":[{"content":"The total number of matched users.","pos":[0,34]}]}],"pos":[46094,46129],"yaml":true},{"content":"A <xref href=\"System.Web.Security.MembershipUserCollection\"></xref> collection that contains a page of <code>pageSize</code><xref href=\"System.Web.Security.MembershipUser\"></xref> objects beginning at the page specified by <code>pageIndex</code>.","nodes":[{"pos":[0,246],"content":"A <ph id=\"ph1\">&lt;xref href=\"System.Web.Security.MembershipUserCollection\"&gt;&lt;/xref&gt;</ph> collection that contains a page of <bpt id=\"p1\">&lt;code&gt;</bpt><ph id=\"ph2\">pageSize</ph><ept id=\"p1\">&lt;/code&gt;</ept><ph id=\"ph3\">&lt;xref href=\"System.Web.Security.MembershipUser\"&gt;&lt;/xref&gt;</ph> objects beginning at the page specified by <bpt id=\"p2\">&lt;code&gt;</bpt><ph id=\"ph4\">pageIndex</ph><ept id=\"p2\">&lt;/code&gt;</ept>.","source":"A <xref href=\"System.Web.Security.MembershipUserCollection\"></xref> collection that contains a page of <code>pageSize</code><xref href=\"System.Web.Security.MembershipUser\"></xref> objects beginning at the page specified by <code>pageIndex</code>."}],"pos":[46217,46464],"yaml":true},{"content":"Gets the number of users currently accessing the application.","nodes":[{"pos":[0,61],"content":"Gets the number of users currently accessing the application.","nodes":[{"content":"Gets the number of users currently accessing the application.","pos":[0,61]}]}],"pos":[47586,47648],"yaml":true},{"content":"Returns an integer value that is the count of all the users in the data source where the <xref:System.Web.Security.MembershipUser.LastActivityDate%2A> is greater than the current date and time minus the <xref:System.Web.Security.Membership.UserIsOnlineTimeWindow%2A>. The <xref:System.Web.Security.Membership.UserIsOnlineTimeWindow%2A> is a positive integer value specifying the number of minutes to use when determining whether a user is online.","nodes":[{"pos":[0,446],"content":"Returns an integer value that is the count of all the users in the data source where the <xref:System.Web.Security.MembershipUser.LastActivityDate%2A> is greater than the current date and time minus the <xref:System.Web.Security.Membership.UserIsOnlineTimeWindow%2A>. The <xref:System.Web.Security.Membership.UserIsOnlineTimeWindow%2A> is a positive integer value specifying the number of minutes to use when determining whether a user is online.","nodes":[{"content":"Returns an integer value that is the count of all the users in the data source where the <xref:System.Web.Security.MembershipUser.LastActivityDate%2A> is greater than the current date and time minus the <xref:System.Web.Security.Membership.UserIsOnlineTimeWindow%2A>. The <xref:System.Web.Security.Membership.UserIsOnlineTimeWindow%2A> is a positive integer value specifying the number of minutes to use when determining whether a user is online.","pos":[0,446],"nodes":[{"content":"Returns an integer value that is the count of all the users in the data source where the <ph id=\"ph1\">&lt;xref:System.Web.Security.MembershipUser.LastActivityDate%2A&gt;</ph> is greater than the current date and time minus the <ph id=\"ph2\">&lt;xref:System.Web.Security.Membership.UserIsOnlineTimeWindow%2A&gt;</ph>.","pos":[0,267],"source":"Returns an integer value that is the count of all the users in the data source where the <xref:System.Web.Security.MembershipUser.LastActivityDate%2A> is greater than the current date and time minus the <xref:System.Web.Security.Membership.UserIsOnlineTimeWindow%2A>."},{"content":"The <ph id=\"ph1\">&lt;xref:System.Web.Security.Membership.UserIsOnlineTimeWindow%2A&gt;</ph> is a positive integer value specifying the number of minutes to use when determining whether a user is online.","pos":[268,446],"source":" The <xref:System.Web.Security.Membership.UserIsOnlineTimeWindow%2A> is a positive integer value specifying the number of minutes to use when determining whether a user is online."}]}]}],"pos":[47659,48106],"yaml":true,"extradata":"MT"},{"content":"The number of users currently accessing the application.","nodes":[{"pos":[0,56],"content":"The number of users currently accessing the application.","nodes":[{"content":"The number of users currently accessing the application.","pos":[0,56]}]}],"pos":[48459,48516],"yaml":true},{"content":"Gets the password for the specified user name from the data source.","nodes":[{"pos":[0,67],"content":"Gets the password for the specified user name from the data source.","nodes":[{"content":"Gets the password for the specified user name from the data source.","pos":[0,67]}]}],"pos":[49712,49780],"yaml":true},{"content":"Takes, as input, a user name and a password answer and retrieves the password for that user from the data source and returns the password as a string.  \n  \n The <xref:System.Web.Security.MembershipProvider.GetPassword%2A> method ensures that the <xref:System.Web.Security.MembershipProvider.EnablePasswordRetrieval%2A> flag is set to `true` before performing any action. If <xref:System.Web.Security.MembershipProvider.EnablePasswordRetrieval%2A> is `false`, a <xref:System.NotSupportedException> exception is thrown.  \n  \n <xref:System.Web.Security.MembershipProvider.GetPassword%2A> also checks the value of the <xref:System.Web.Security.MembershipProvider.RequiresQuestionAndAnswer%2A> property. If <xref:System.Web.Security.MembershipProvider.RequiresQuestionAndAnswer%2A> is `true`, <xref:System.Web.Security.MembershipProvider.GetPassword%2A> checks the value of the supplied answer parameter against the stored password answer in the data source. If they do not match, a <xref:System.Web.Security.MembershipPasswordException> exception is thrown.  \n  \n If your custom membership provider supports hashed passwords, the <xref:System.Web.Security.MembershipProvider.GetPassword%2A> method should throw an exception if the <xref:System.Web.Security.MembershipProvider.EnablePasswordRetrieval%2A> property is set to `true` and the password format is set to `Hashed`. Hashed passwords cannot be retrieved.","nodes":[{"pos":[0,150],"content":"Takes, as input, a user name and a password answer and retrieves the password for that user from the data source and returns the password as a string.","nodes":[{"content":"Takes, as input, a user name and a password answer and retrieves the password for that user from the data source and returns the password as a string.","pos":[0,150]}]},{"pos":[157,517],"content":"The <xref:System.Web.Security.MembershipProvider.GetPassword%2A> method ensures that the <xref:System.Web.Security.MembershipProvider.EnablePasswordRetrieval%2A> flag is set to `true` before performing any action. If <xref:System.Web.Security.MembershipProvider.EnablePasswordRetrieval%2A> is `false`, a <xref:System.NotSupportedException> exception is thrown.","nodes":[{"content":"The <ph id=\"ph1\">&lt;xref:System.Web.Security.MembershipProvider.GetPassword%2A&gt;</ph> method ensures that the <ph id=\"ph2\">&lt;xref:System.Web.Security.MembershipProvider.EnablePasswordRetrieval%2A&gt;</ph> flag is set to <ph id=\"ph3\">`true`</ph> before performing any action.","pos":[0,213],"source":"The <xref:System.Web.Security.MembershipProvider.GetPassword%2A> method ensures that the <xref:System.Web.Security.MembershipProvider.EnablePasswordRetrieval%2A> flag is set to `true` before performing any action."},{"content":"If <ph id=\"ph1\">&lt;xref:System.Web.Security.MembershipProvider.EnablePasswordRetrieval%2A&gt;</ph> is <ph id=\"ph2\">`false`</ph>, a <ph id=\"ph3\">&lt;xref:System.NotSupportedException&gt;</ph> exception is thrown.","pos":[214,360],"source":" If <xref:System.Web.Security.MembershipProvider.EnablePasswordRetrieval%2A> is `false`, a <xref:System.NotSupportedException> exception is thrown."}]},{"pos":[524,1053],"content":"<xref:System.Web.Security.MembershipProvider.GetPassword%2A> also checks the value of the <xref:System.Web.Security.MembershipProvider.RequiresQuestionAndAnswer%2A> property. If <xref:System.Web.Security.MembershipProvider.RequiresQuestionAndAnswer%2A> is `true`, <xref:System.Web.Security.MembershipProvider.GetPassword%2A> checks the value of the supplied answer parameter against the stored password answer in the data source. If they do not match, a <xref:System.Web.Security.MembershipPasswordException> exception is thrown.","nodes":[{"content":"<ph id=\"ph1\">&lt;xref:System.Web.Security.MembershipProvider.GetPassword%2A&gt;</ph> also checks the value of the <ph id=\"ph2\">&lt;xref:System.Web.Security.MembershipProvider.RequiresQuestionAndAnswer%2A&gt;</ph> property.","pos":[0,174],"source":"<xref:System.Web.Security.MembershipProvider.GetPassword%2A> also checks the value of the <xref:System.Web.Security.MembershipProvider.RequiresQuestionAndAnswer%2A> property."},{"content":"If <ph id=\"ph1\">&lt;xref:System.Web.Security.MembershipProvider.RequiresQuestionAndAnswer%2A&gt;</ph> is <ph id=\"ph2\">`true`</ph>, <ph id=\"ph3\">&lt;xref:System.Web.Security.MembershipProvider.GetPassword%2A&gt;</ph> checks the value of the supplied answer parameter against the stored password answer in the data source.","pos":[175,429],"source":" If <xref:System.Web.Security.MembershipProvider.RequiresQuestionAndAnswer%2A> is `true`, <xref:System.Web.Security.MembershipProvider.GetPassword%2A> checks the value of the supplied answer parameter against the stored password answer in the data source."},{"content":"If they do not match, a <ph id=\"ph1\">&lt;xref:System.Web.Security.MembershipPasswordException&gt;</ph> exception is thrown.","pos":[430,529],"source":" If they do not match, a <xref:System.Web.Security.MembershipPasswordException> exception is thrown."}]},{"pos":[1060,1407],"content":"If your custom membership provider supports hashed passwords, the <xref:System.Web.Security.MembershipProvider.GetPassword%2A> method should throw an exception if the <xref:System.Web.Security.MembershipProvider.EnablePasswordRetrieval%2A> property is set to `true` and the password format is set to `Hashed`. Hashed passwords cannot be retrieved.","nodes":[{"content":"If your custom membership provider supports hashed passwords, the <ph id=\"ph1\">&lt;xref:System.Web.Security.MembershipProvider.GetPassword%2A&gt;</ph> method should throw an exception if the <ph id=\"ph2\">&lt;xref:System.Web.Security.MembershipProvider.EnablePasswordRetrieval%2A&gt;</ph> property is set to <ph id=\"ph3\">`true`</ph> and the password format is set to <ph id=\"ph4\">`Hashed`</ph>.","pos":[0,309],"source":"If your custom membership provider supports hashed passwords, the <xref:System.Web.Security.MembershipProvider.GetPassword%2A> method should throw an exception if the <xref:System.Web.Security.MembershipProvider.EnablePasswordRetrieval%2A> property is set to `true` and the password format is set to `Hashed`."},{"content":"Hashed passwords cannot be retrieved.","pos":[310,347]}]}],"pos":[49791,51207],"yaml":true,"extradata":"MT"},{"content":"The user to retrieve the password for.","nodes":[{"pos":[0,38],"content":"The user to retrieve the password for.","nodes":[{"content":"The user to retrieve the password for.","pos":[0,38]}]}],"pos":[51587,51626],"yaml":true},{"content":"The password answer for the user.","nodes":[{"pos":[0,33],"content":"The password answer for the user.","nodes":[{"content":"The password answer for the user.","pos":[0,33]}]}],"pos":[51688,51722],"yaml":true},{"content":"The password for the specified user name.","nodes":[{"pos":[0,41],"content":"The password for the specified user name.","nodes":[{"content":"The password for the specified user name.","pos":[0,41]}]}],"pos":[51779,51821],"yaml":true},{"content":"Gets information from the data source for a user. Provides an option to update the last-activity date/time stamp for the user.","nodes":[{"pos":[0,126],"content":"Gets information from the data source for a user. Provides an option to update the last-activity date/time stamp for the user.","nodes":[{"content":"Gets information from the data source for a user. Provides an option to update the last-activity date/time stamp for the user.","pos":[0,126],"nodes":[{"content":"Gets information from the data source for a user.","pos":[0,49]},{"content":"Provides an option to update the last-activity date/time stamp for the user.","pos":[50,126]}]}]}],"pos":[52988,53115],"yaml":true},{"content":"Takes, as input, a user name and a Boolean value indicating whether to update the <xref:System.Web.Security.MembershipUser.LastActivityDate%2A> property value for the user to show that the user is currently online. <xref:System.Web.Security.MembershipProvider.GetUser%2A> returns a <xref:System.Web.Security.MembershipUser> object populated with current values from the data source for the specified user. If the user name is not found in the data source, <xref:System.Web.Security.MembershipProvider.GetUser%2A> returns `null`.","nodes":[{"pos":[0,528],"content":"Takes, as input, a user name and a Boolean value indicating whether to update the <xref:System.Web.Security.MembershipUser.LastActivityDate%2A> property value for the user to show that the user is currently online. <xref:System.Web.Security.MembershipProvider.GetUser%2A> returns a <xref:System.Web.Security.MembershipUser> object populated with current values from the data source for the specified user. If the user name is not found in the data source, <xref:System.Web.Security.MembershipProvider.GetUser%2A> returns `null`.","nodes":[{"content":"Takes, as input, a user name and a Boolean value indicating whether to update the <ph id=\"ph1\">&lt;xref:System.Web.Security.MembershipUser.LastActivityDate%2A&gt;</ph> property value for the user to show that the user is currently online.","pos":[0,214],"source":"Takes, as input, a user name and a Boolean value indicating whether to update the <xref:System.Web.Security.MembershipUser.LastActivityDate%2A> property value for the user to show that the user is currently online."},{"content":"<ph id=\"ph1\">&lt;xref:System.Web.Security.MembershipProvider.GetUser%2A&gt;</ph> returns a <ph id=\"ph2\">&lt;xref:System.Web.Security.MembershipUser&gt;</ph> object populated with current values from the data source for the specified user.","pos":[215,405],"source":" <xref:System.Web.Security.MembershipProvider.GetUser%2A> returns a <xref:System.Web.Security.MembershipUser> object populated with current values from the data source for the specified user."},{"content":"If the user name is not found in the data source, <ph id=\"ph1\">&lt;xref:System.Web.Security.MembershipProvider.GetUser%2A&gt;</ph> returns <ph id=\"ph2\">`null`</ph>.","pos":[406,528],"source":" If the user name is not found in the data source, <xref:System.Web.Security.MembershipProvider.GetUser%2A> returns `null`."}]}],"pos":[53126,53655],"yaml":true,"extradata":"MT"},{"content":"The name of the user to get information for.","nodes":[{"pos":[0,44],"content":"The name of the user to get information for.","nodes":[{"content":"The name of the user to get information for.","pos":[0,44]}]}],"pos":[54063,54108],"yaml":true},{"content":"`true` to update the last-activity date/time stamp for the user; `false` to return user information without updating the last-activity date/time stamp for the user.","nodes":[{"pos":[0,164],"content":"<ph id=\"ph1\">`true`</ph> to update the last-activity date/time stamp for the user; <ph id=\"ph2\">`false`</ph> to return user information without updating the last-activity date/time stamp for the user.","source":"`true` to update the last-activity date/time stamp for the user; `false` to return user information without updating the last-activity date/time stamp for the user."}],"pos":[54177,54344],"yaml":true},{"content":"A <xref href=\"System.Web.Security.MembershipUser\"></xref> object populated with the specified user's information from the data source.","nodes":[{"pos":[0,134],"content":"A <ph id=\"ph1\">&lt;xref href=\"System.Web.Security.MembershipUser\"&gt;&lt;/xref&gt;</ph> object populated with the specified user's information from the data source.","source":"A <xref href=\"System.Web.Security.MembershipUser\"></xref> object populated with the specified user's information from the data source."}],"pos":[54422,54557],"yaml":true},{"content":"Gets user information from the data source based on the unique identifier for the membership user. Provides an option to update the last-activity date/time stamp for the user.","nodes":[{"pos":[0,175],"content":"Gets user information from the data source based on the unique identifier for the membership user. Provides an option to update the last-activity date/time stamp for the user.","nodes":[{"content":"Gets user information from the data source based on the unique identifier for the membership user. Provides an option to update the last-activity date/time stamp for the user.","pos":[0,175],"nodes":[{"content":"Gets user information from the data source based on the unique identifier for the membership user.","pos":[0,98]},{"content":"Provides an option to update the last-activity date/time stamp for the user.","pos":[99,175]}]}]}],"pos":[55720,55896],"yaml":true},{"content":"Takes, as input, a unique identifier for a user record and a Boolean value indicating whether to update the <xref:System.Web.Security.MembershipUser.LastActivityDate%2A> value for the user to show that the user is currently online. The <xref:System.Web.Security.MembershipProvider.GetUser%2A> method returns a <xref:System.Web.Security.MembershipUser> object populated with current values from the data source for the specified user. If the user name is not found in the data source, <xref:System.Web.Security.MembershipProvider.GetUser%2A> returns `null`.","nodes":[{"pos":[0,556],"content":"Takes, as input, a unique identifier for a user record and a Boolean value indicating whether to update the <xref:System.Web.Security.MembershipUser.LastActivityDate%2A> value for the user to show that the user is currently online. The <xref:System.Web.Security.MembershipProvider.GetUser%2A> method returns a <xref:System.Web.Security.MembershipUser> object populated with current values from the data source for the specified user. If the user name is not found in the data source, <xref:System.Web.Security.MembershipProvider.GetUser%2A> returns `null`.","nodes":[{"content":"Takes, as input, a unique identifier for a user record and a Boolean value indicating whether to update the <ph id=\"ph1\">&lt;xref:System.Web.Security.MembershipUser.LastActivityDate%2A&gt;</ph> value for the user to show that the user is currently online.","pos":[0,231],"source":"Takes, as input, a unique identifier for a user record and a Boolean value indicating whether to update the <xref:System.Web.Security.MembershipUser.LastActivityDate%2A> value for the user to show that the user is currently online."},{"content":"The <ph id=\"ph1\">&lt;xref:System.Web.Security.MembershipProvider.GetUser%2A&gt;</ph> method returns a <ph id=\"ph2\">&lt;xref:System.Web.Security.MembershipUser&gt;</ph> object populated with current values from the data source for the specified user.","pos":[232,433],"source":" The <xref:System.Web.Security.MembershipProvider.GetUser%2A> method returns a <xref:System.Web.Security.MembershipUser> object populated with current values from the data source for the specified user."},{"content":"If the user name is not found in the data source, <ph id=\"ph1\">&lt;xref:System.Web.Security.MembershipProvider.GetUser%2A&gt;</ph> returns <ph id=\"ph2\">`null`</ph>.","pos":[434,556],"source":" If the user name is not found in the data source, <xref:System.Web.Security.MembershipProvider.GetUser%2A> returns `null`."}]}],"pos":[55907,56464],"yaml":true,"extradata":"MT"},{"content":"The unique identifier for the membership user to get information for.","nodes":[{"pos":[0,69],"content":"The unique identifier for the membership user to get information for.","nodes":[{"content":"The unique identifier for the membership user to get information for.","pos":[0,69]}]}],"pos":[56886,56956],"yaml":true},{"content":"`true` to update the last-activity date/time stamp for the user; `false` to return user information without updating the last-activity date/time stamp for the user.","nodes":[{"pos":[0,164],"content":"<ph id=\"ph1\">`true`</ph> to update the last-activity date/time stamp for the user; <ph id=\"ph2\">`false`</ph> to return user information without updating the last-activity date/time stamp for the user.","source":"`true` to update the last-activity date/time stamp for the user; `false` to return user information without updating the last-activity date/time stamp for the user."}],"pos":[57025,57192],"yaml":true},{"content":"A <xref href=\"System.Web.Security.MembershipUser\"></xref> object populated with the specified user's information from the data source.","nodes":[{"pos":[0,134],"content":"A <ph id=\"ph1\">&lt;xref href=\"System.Web.Security.MembershipUser\"&gt;&lt;/xref&gt;</ph> object populated with the specified user's information from the data source.","source":"A <xref href=\"System.Web.Security.MembershipUser\"></xref> object populated with the specified user's information from the data source."}],"pos":[57270,57405],"yaml":true},{"content":"Gets the user name associated with the specified e-mail address.","nodes":[{"pos":[0,64],"content":"Gets the user name associated with the specified e-mail address.","nodes":[{"content":"Gets the user name associated with the specified e-mail address.","pos":[0,64]}]}],"pos":[58562,58627],"yaml":true},{"content":"Takes, as input, an e-mail address and returns the first user name from the data source where the e-mail address matches the supplied `email` parameter value.  \n  \n If no user name is found with a matching e-mail address, `null` is returned.  \n  \n If multiple user names are found that match a particular e-mail address, only the first user name found should be returned. You can implement a custom mechanism for ensuring a unique e-mail address for each user name such as the <xref:System.Web.Security.SqlMembershipProvider.RequiresUniqueEmail%2A> property supported by the <xref:System.Web.Security.SqlMembershipProvider> provider.","nodes":[{"pos":[0,158],"content":"Takes, as input, an e-mail address and returns the first user name from the data source where the e-mail address matches the supplied <ph id=\"ph1\">`email`</ph> parameter value.","source":"Takes, as input, an e-mail address and returns the first user name from the data source where the e-mail address matches the supplied `email` parameter value."},{"pos":[165,241],"content":"If no user name is found with a matching e-mail address, <ph id=\"ph1\">`null`</ph> is returned.","source":"If no user name is found with a matching e-mail address, `null` is returned."},{"pos":[248,633],"content":"If multiple user names are found that match a particular e-mail address, only the first user name found should be returned. You can implement a custom mechanism for ensuring a unique e-mail address for each user name such as the <xref:System.Web.Security.SqlMembershipProvider.RequiresUniqueEmail%2A> property supported by the <xref:System.Web.Security.SqlMembershipProvider> provider.","nodes":[{"content":"If multiple user names are found that match a particular e-mail address, only the first user name found should be returned. You can implement a custom mechanism for ensuring a unique e-mail address for each user name such as the <xref:System.Web.Security.SqlMembershipProvider.RequiresUniqueEmail%2A> property supported by the <xref:System.Web.Security.SqlMembershipProvider> provider.","pos":[0,385],"nodes":[{"content":"If multiple user names are found that match a particular e-mail address, only the first user name found should be returned.","pos":[0,123]},{"content":"You can implement a custom mechanism for ensuring a unique e-mail address for each user name such as the <ph id=\"ph1\">&lt;xref:System.Web.Security.SqlMembershipProvider.RequiresUniqueEmail%2A&gt;</ph> property supported by the <ph id=\"ph2\">&lt;xref:System.Web.Security.SqlMembershipProvider&gt;</ph> provider.","pos":[124,385],"source":" You can implement a custom mechanism for ensuring a unique e-mail address for each user name such as the <xref:System.Web.Security.SqlMembershipProvider.RequiresUniqueEmail%2A> property supported by the <xref:System.Web.Security.SqlMembershipProvider> provider."}]}]}],"pos":[58638,59278],"yaml":true,"extradata":"MT"},{"content":"The e-mail address to search for.","nodes":[{"pos":[0,33],"content":"The e-mail address to search for.","nodes":[{"content":"The e-mail address to search for.","pos":[0,33]}]}],"pos":[59644,59678],"yaml":true},{"content":"The user name associated with the specified e-mail address. If no match is found, return `null`.","nodes":[{"pos":[0,96],"content":"The user name associated with the specified e-mail address. If no match is found, return `null`.","nodes":[{"content":"The user name associated with the specified e-mail address.","pos":[0,59]},{"content":"If no match is found, return <ph id=\"ph1\">`null`</ph>.","pos":[60,96],"source":" If no match is found, return `null`."}]}],"pos":[59735,59832],"yaml":true},{"content":"Gets the number of invalid password or password-answer attempts allowed before the membership user is locked out.","nodes":[{"pos":[0,113],"content":"Gets the number of invalid password or password-answer attempts allowed before the membership user is locked out.","nodes":[{"content":"Gets the number of invalid password or password-answer attempts allowed before the membership user is locked out.","pos":[0,113]}]}],"pos":[60981,61095],"yaml":true},{"content":"The <xref:System.Web.Security.Membership.MaxInvalidPasswordAttempts%2A> property works in conjunction with the <xref:System.Web.Security.Membership.PasswordAttemptWindow%2A> property to guard against an unwanted source guessing the password or password answer of a membership user through repeated attempts. If the number of invalid passwords or password questions supplied for a membership user is greater than or equal to the <xref:System.Web.Security.Membership.MaxInvalidPasswordAttempts%2A> property value within the number of minutes identified by the <xref:System.Web.Security.Membership.PasswordAttemptWindow%2A>, then the membership user is locked out by setting the <xref:System.Web.Security.MembershipUser.IsLockedOut%2A> property to `true` until the user is unlocked by a call to the <xref:System.Web.Security.MembershipUser.UnlockUser%2A> method. If a valid password or password answer is supplied before the <xref:System.Web.Security.Membership.MaxInvalidPasswordAttempts%2A> value is reached, the counter that tracks the number of invalid attempts is reset to zero.  \n  \n Invalid password and password-answer attempts accumulate independently of one another. For example, if the <xref:System.Web.Security.Membership.MaxInvalidPasswordAttempts%2A> property is set to 5, and three invalid password attempts are made followed by two invalid password-answer attempts, two more invalid password attempts (or three more invalid password-answer attempts) must be made within the <xref:System.Web.Security.Membership.PasswordAttemptWindow%2A> for the membership user to be locked out.  \n  \n If the <xref:System.Web.Security.Membership.RequiresQuestionAndAnswer%2A> property is set to `false`, invalid password-answer attempts are not tracked.  \n  \n Invalid password and password-answer attempts are tracked in the <xref:System.Web.Security.MembershipProvider.ValidateUser%2A>, <xref:System.Web.Security.MembershipProvider.ChangePassword%2A>, <xref:System.Web.Security.MembershipProvider.ChangePasswordQuestionAndAnswer%2A>, <xref:System.Web.Security.MembershipProvider.GetPassword%2A>, and <xref:System.Web.Security.MembershipProvider.ResetPassword%2A> methods.","nodes":[{"pos":[0,1080],"content":"The <xref:System.Web.Security.Membership.MaxInvalidPasswordAttempts%2A> property works in conjunction with the <xref:System.Web.Security.Membership.PasswordAttemptWindow%2A> property to guard against an unwanted source guessing the password or password answer of a membership user through repeated attempts. If the number of invalid passwords or password questions supplied for a membership user is greater than or equal to the <xref:System.Web.Security.Membership.MaxInvalidPasswordAttempts%2A> property value within the number of minutes identified by the <xref:System.Web.Security.Membership.PasswordAttemptWindow%2A>, then the membership user is locked out by setting the <xref:System.Web.Security.MembershipUser.IsLockedOut%2A> property to `true` until the user is unlocked by a call to the <xref:System.Web.Security.MembershipUser.UnlockUser%2A> method. If a valid password or password answer is supplied before the <xref:System.Web.Security.Membership.MaxInvalidPasswordAttempts%2A> value is reached, the counter that tracks the number of invalid attempts is reset to zero.","nodes":[{"content":"The <ph id=\"ph1\">&lt;xref:System.Web.Security.Membership.MaxInvalidPasswordAttempts%2A&gt;</ph> property works in conjunction with the <ph id=\"ph2\">&lt;xref:System.Web.Security.Membership.PasswordAttemptWindow%2A&gt;</ph> property to guard against an unwanted source guessing the password or password answer of a membership user through repeated attempts.","pos":[0,307],"source":"The <xref:System.Web.Security.Membership.MaxInvalidPasswordAttempts%2A> property works in conjunction with the <xref:System.Web.Security.Membership.PasswordAttemptWindow%2A> property to guard against an unwanted source guessing the password or password answer of a membership user through repeated attempts."},{"content":"If the number of invalid passwords or password questions supplied for a membership user is greater than or equal to the <ph id=\"ph1\">&lt;xref:System.Web.Security.Membership.MaxInvalidPasswordAttempts%2A&gt;</ph> property value within the number of minutes identified by the <ph id=\"ph2\">&lt;xref:System.Web.Security.Membership.PasswordAttemptWindow%2A&gt;</ph>, then the membership user is locked out by setting the <ph id=\"ph3\">&lt;xref:System.Web.Security.MembershipUser.IsLockedOut%2A&gt;</ph> property to <ph id=\"ph4\">`true`</ph> until the user is unlocked by a call to the <ph id=\"ph5\">&lt;xref:System.Web.Security.MembershipUser.UnlockUser%2A&gt;</ph> method.","pos":[308,859],"source":" If the number of invalid passwords or password questions supplied for a membership user is greater than or equal to the <xref:System.Web.Security.Membership.MaxInvalidPasswordAttempts%2A> property value within the number of minutes identified by the <xref:System.Web.Security.Membership.PasswordAttemptWindow%2A>, then the membership user is locked out by setting the <xref:System.Web.Security.MembershipUser.IsLockedOut%2A> property to `true` until the user is unlocked by a call to the <xref:System.Web.Security.MembershipUser.UnlockUser%2A> method."},{"content":"If a valid password or password answer is supplied before the <ph id=\"ph1\">&lt;xref:System.Web.Security.Membership.MaxInvalidPasswordAttempts%2A&gt;</ph> value is reached, the counter that tracks the number of invalid attempts is reset to zero.","pos":[860,1080],"source":" If a valid password or password answer is supplied before the <xref:System.Web.Security.Membership.MaxInvalidPasswordAttempts%2A> value is reached, the counter that tracks the number of invalid attempts is reset to zero."}]},{"pos":[1087,1591],"content":"Invalid password and password-answer attempts accumulate independently of one another. For example, if the <xref:System.Web.Security.Membership.MaxInvalidPasswordAttempts%2A> property is set to 5, and three invalid password attempts are made followed by two invalid password-answer attempts, two more invalid password attempts (or three more invalid password-answer attempts) must be made within the <xref:System.Web.Security.Membership.PasswordAttemptWindow%2A> for the membership user to be locked out.","nodes":[{"content":"Invalid password and password-answer attempts accumulate independently of one another. For example, if the <xref:System.Web.Security.Membership.MaxInvalidPasswordAttempts%2A> property is set to 5, and three invalid password attempts are made followed by two invalid password-answer attempts, two more invalid password attempts (or three more invalid password-answer attempts) must be made within the <xref:System.Web.Security.Membership.PasswordAttemptWindow%2A> for the membership user to be locked out.","pos":[0,504],"nodes":[{"content":"Invalid password and password-answer attempts accumulate independently of one another.","pos":[0,86]},{"content":"For example, if the <ph id=\"ph1\">&lt;xref:System.Web.Security.Membership.MaxInvalidPasswordAttempts%2A&gt;</ph> property is set to 5, and three invalid password attempts are made followed by two invalid password-answer attempts, two more invalid password attempts (or three more invalid password-answer attempts) must be made within the <ph id=\"ph2\">&lt;xref:System.Web.Security.Membership.PasswordAttemptWindow%2A&gt;</ph> for the membership user to be locked out.","pos":[87,504],"source":" For example, if the <xref:System.Web.Security.Membership.MaxInvalidPasswordAttempts%2A> property is set to 5, and three invalid password attempts are made followed by two invalid password-answer attempts, two more invalid password attempts (or three more invalid password-answer attempts) must be made within the <xref:System.Web.Security.Membership.PasswordAttemptWindow%2A> for the membership user to be locked out."}]}]},{"pos":[1598,1749],"content":"If the <ph id=\"ph1\">&lt;xref:System.Web.Security.Membership.RequiresQuestionAndAnswer%2A&gt;</ph> property is set to <ph id=\"ph2\">`false`</ph>, invalid password-answer attempts are not tracked.","source":"If the <xref:System.Web.Security.Membership.RequiresQuestionAndAnswer%2A> property is set to `false`, invalid password-answer attempts are not tracked."},{"pos":[1756,2168],"content":"Invalid password and password-answer attempts are tracked in the <xref:System.Web.Security.MembershipProvider.ValidateUser%2A>, <xref:System.Web.Security.MembershipProvider.ChangePassword%2A>, <xref:System.Web.Security.MembershipProvider.ChangePasswordQuestionAndAnswer%2A>, <xref:System.Web.Security.MembershipProvider.GetPassword%2A>, and <xref:System.Web.Security.MembershipProvider.ResetPassword%2A> methods.","nodes":[{"content":"Invalid password and password-answer attempts are tracked in the <ph id=\"ph1\">&lt;xref:System.Web.Security.MembershipProvider.ValidateUser%2A&gt;</ph>, <ph id=\"ph2\">&lt;xref:System.Web.Security.MembershipProvider.ChangePassword%2A&gt;</ph>, <ph id=\"ph3\">&lt;xref:System.Web.Security.MembershipProvider.ChangePasswordQuestionAndAnswer%2A&gt;</ph>, <ph id=\"ph4\">&lt;xref:System.Web.Security.MembershipProvider.GetPassword%2A&gt;</ph>, and <ph id=\"ph5\">&lt;xref:System.Web.Security.MembershipProvider.ResetPassword%2A&gt;</ph> methods.","pos":[0,412],"source":"Invalid password and password-answer attempts are tracked in the <xref:System.Web.Security.MembershipProvider.ValidateUser%2A>, <xref:System.Web.Security.MembershipProvider.ChangePassword%2A>, <xref:System.Web.Security.MembershipProvider.ChangePasswordQuestionAndAnswer%2A>, <xref:System.Web.Security.MembershipProvider.GetPassword%2A>, and <xref:System.Web.Security.MembershipProvider.ResetPassword%2A> methods."}]}],"pos":[61106,63283],"yaml":true,"extradata":"MT"},{"content":"The number of invalid password or password-answer attempts allowed before the membership user is locked out.","nodes":[{"pos":[0,108],"content":"The number of invalid password or password-answer attempts allowed before the membership user is locked out.","nodes":[{"content":"The number of invalid password or password-answer attempts allowed before the membership user is locked out.","pos":[0,108]}]}],"pos":[63626,63735],"yaml":true},{"content":"Gets the minimum number of special characters that must be present in a valid password.","nodes":[{"pos":[0,87],"content":"Gets the minimum number of special characters that must be present in a valid password.","nodes":[{"content":"Gets the minimum number of special characters that must be present in a valid password.","pos":[0,87]}]}],"pos":[64952,65040],"yaml":true},{"content":"The <xref:System.Web.Security.MembershipProvider.MinRequiredNonAlphanumericCharacters%2A> property returns the minimum number of special, non-alphabetic characters that must be entered to create a valid password for the <xref:System.Web.Security.MembershipProvider> object.  \n  \n The <xref:System.Web.Security.MembershipProvider.MinRequiredNonAlphanumericCharacters%2A> property value is set in the application configuration using the `minRequiredNonalphanumericCharacters` attribute of the [membership Element (ASP.NET Settings Schema)](http://msdn.microsoft.com/en-us/b9c1ee8f-33ca-4361-8666-b42a0fe86049) configuration element.  \n  \n A non-alphanumeric character is a character for which the <xref:System.Char.IsLetterOrDigit%2A> method returns `false`.","nodes":[{"pos":[0,273],"content":"The <xref:System.Web.Security.MembershipProvider.MinRequiredNonAlphanumericCharacters%2A> property returns the minimum number of special, non-alphabetic characters that must be entered to create a valid password for the <xref:System.Web.Security.MembershipProvider> object.","nodes":[{"content":"The <ph id=\"ph1\">&lt;xref:System.Web.Security.MembershipProvider.MinRequiredNonAlphanumericCharacters%2A&gt;</ph> property returns the minimum number of special, non-alphabetic characters that must be entered to create a valid password for the <ph id=\"ph2\">&lt;xref:System.Web.Security.MembershipProvider&gt;</ph> object.","pos":[0,273],"source":"The <xref:System.Web.Security.MembershipProvider.MinRequiredNonAlphanumericCharacters%2A> property returns the minimum number of special, non-alphabetic characters that must be entered to create a valid password for the <xref:System.Web.Security.MembershipProvider> object."}]},{"pos":[280,630],"content":"The <ph id=\"ph1\">&lt;xref:System.Web.Security.MembershipProvider.MinRequiredNonAlphanumericCharacters%2A&gt;</ph> property value is set in the application configuration using the <ph id=\"ph2\">`minRequiredNonalphanumericCharacters`</ph> attribute of the <bpt id=\"p1\">[</bpt>membership Element (ASP.NET Settings Schema)<ept id=\"p1\">](http://msdn.microsoft.com/en-us/b9c1ee8f-33ca-4361-8666-b42a0fe86049)</ept> configuration element.","source":"The <xref:System.Web.Security.MembershipProvider.MinRequiredNonAlphanumericCharacters%2A> property value is set in the application configuration using the `minRequiredNonalphanumericCharacters` attribute of the [membership Element (ASP.NET Settings Schema)](http://msdn.microsoft.com/en-us/b9c1ee8f-33ca-4361-8666-b42a0fe86049) configuration element."},{"pos":[637,756],"content":"A non-alphanumeric character is a character for which the <ph id=\"ph1\">&lt;xref:System.Char.IsLetterOrDigit%2A&gt;</ph> method returns <ph id=\"ph2\">`false`</ph>.","source":"A non-alphanumeric character is a character for which the <xref:System.Char.IsLetterOrDigit%2A> method returns `false`."}],"pos":[65051,65814],"yaml":true,"extradata":"MT"},{"content":"The minimum number of special characters that must be present in a valid password.","nodes":[{"pos":[0,82],"content":"The minimum number of special characters that must be present in a valid password.","nodes":[{"content":"The minimum number of special characters that must be present in a valid password.","pos":[0,82]}]}],"pos":[67082,67165],"yaml":true},{"content":"Gets the minimum length required for a password.","nodes":[{"pos":[0,48],"content":"Gets the minimum length required for a password.","nodes":[{"content":"Gets the minimum length required for a password.","pos":[0,48]}]}],"pos":[68326,68375],"yaml":true},{"content":"The <xref:System.Web.Security.MembershipProvider.MinRequiredPasswordLength%2A> property gets the minimum number of characters that must be entered to create a valid password for the <xref:System.Web.Security.MembershipProvider> object.  \n  \n The <xref:System.Web.Security.MembershipProvider.MinRequiredPasswordLength%2A> property value is set in the application configuration using the `minRequiredPasswordLength` attribute of the [membership Element (ASP.NET Settings Schema)](http://msdn.microsoft.com/en-us/b9c1ee8f-33ca-4361-8666-b42a0fe86049) configuration element.","nodes":[{"pos":[0,235],"content":"The <xref:System.Web.Security.MembershipProvider.MinRequiredPasswordLength%2A> property gets the minimum number of characters that must be entered to create a valid password for the <xref:System.Web.Security.MembershipProvider> object.","nodes":[{"content":"The <ph id=\"ph1\">&lt;xref:System.Web.Security.MembershipProvider.MinRequiredPasswordLength%2A&gt;</ph> property gets the minimum number of characters that must be entered to create a valid password for the <ph id=\"ph2\">&lt;xref:System.Web.Security.MembershipProvider&gt;</ph> object.","pos":[0,235],"source":"The <xref:System.Web.Security.MembershipProvider.MinRequiredPasswordLength%2A> property gets the minimum number of characters that must be entered to create a valid password for the <xref:System.Web.Security.MembershipProvider> object."}]},{"pos":[242,570],"content":"The <ph id=\"ph1\">&lt;xref:System.Web.Security.MembershipProvider.MinRequiredPasswordLength%2A&gt;</ph> property value is set in the application configuration using the <ph id=\"ph2\">`minRequiredPasswordLength`</ph> attribute of the <bpt id=\"p1\">[</bpt>membership Element (ASP.NET Settings Schema)<ept id=\"p1\">](http://msdn.microsoft.com/en-us/b9c1ee8f-33ca-4361-8666-b42a0fe86049)</ept> configuration element.","source":"The <xref:System.Web.Security.MembershipProvider.MinRequiredPasswordLength%2A> property value is set in the application configuration using the `minRequiredPasswordLength` attribute of the [membership Element (ASP.NET Settings Schema)](http://msdn.microsoft.com/en-us/b9c1ee8f-33ca-4361-8666-b42a0fe86049) configuration element."}],"pos":[68386,68961],"yaml":true,"extradata":"MT"},{"content":"The minimum length required for a password.","nodes":[{"pos":[0,43],"content":"The minimum length required for a password.","nodes":[{"content":"The minimum length required for a password.","pos":[0,43]}]}],"pos":[69963,70007],"yaml":true},{"content":"Raises the <xref href=\"System.Web.Security.MembershipProvider.ValidatingPassword\"></xref> event if an event handler has been defined.","nodes":[{"pos":[0,133],"content":"Raises the <ph id=\"ph1\">&lt;xref href=\"System.Web.Security.MembershipProvider.ValidatingPassword\"&gt;&lt;/xref&gt;</ph> event if an event handler has been defined.","source":"Raises the <xref href=\"System.Web.Security.MembershipProvider.ValidatingPassword\"></xref> event if an event handler has been defined."}],"pos":[71347,71481],"yaml":true},{"content":"The <xref:System.Web.Security.MembershipProvider.OnValidatingPassword%2A> virtual method is used during the <xref:System.Web.Security.MembershipProvider.CreateUser%2A>, <xref:System.Web.Security.MembershipProvider.ChangePassword%2A>, and <xref:System.Web.Security.MembershipProvider.ResetPassword%2A> methods to raise the <xref:System.Web.Security.MembershipProvider.ValidatingPassword> event if a <xref:System.Web.Security.MembershipValidatePasswordEventHandler> has been specified. The `e` parameter is used to pass a <xref:System.Web.Security.ValidatePasswordEventArgs> object to the <xref:System.Web.Security.MembershipValidatePasswordEventHandler> event handler. When the <xref:System.Web.Security.MembershipProvider.ValidatingPassword> event has completed, the properties of the <xref:System.Web.Security.ValidatePasswordEventArgs> object supplied as the `e` parameter can be examined to determine whether the current action should be canceled and if a particular <xref:System.Exception>, stored in the <xref:System.Web.Security.ValidatePasswordEventArgs.FailureInformation%2A> property, should be thrown.","nodes":[{"pos":[0,1111],"content":"The <xref:System.Web.Security.MembershipProvider.OnValidatingPassword%2A> virtual method is used during the <xref:System.Web.Security.MembershipProvider.CreateUser%2A>, <xref:System.Web.Security.MembershipProvider.ChangePassword%2A>, and <xref:System.Web.Security.MembershipProvider.ResetPassword%2A> methods to raise the <xref:System.Web.Security.MembershipProvider.ValidatingPassword> event if a <xref:System.Web.Security.MembershipValidatePasswordEventHandler> has been specified. The `e` parameter is used to pass a <xref:System.Web.Security.ValidatePasswordEventArgs> object to the <xref:System.Web.Security.MembershipValidatePasswordEventHandler> event handler. When the <xref:System.Web.Security.MembershipProvider.ValidatingPassword> event has completed, the properties of the <xref:System.Web.Security.ValidatePasswordEventArgs> object supplied as the `e` parameter can be examined to determine whether the current action should be canceled and if a particular <xref:System.Exception>, stored in the <xref:System.Web.Security.ValidatePasswordEventArgs.FailureInformation%2A> property, should be thrown.","nodes":[{"content":"The <ph id=\"ph1\">&lt;xref:System.Web.Security.MembershipProvider.OnValidatingPassword%2A&gt;</ph> virtual method is used during the <ph id=\"ph2\">&lt;xref:System.Web.Security.MembershipProvider.CreateUser%2A&gt;</ph>, <ph id=\"ph3\">&lt;xref:System.Web.Security.MembershipProvider.ChangePassword%2A&gt;</ph>, and <ph id=\"ph4\">&lt;xref:System.Web.Security.MembershipProvider.ResetPassword%2A&gt;</ph> methods to raise the <ph id=\"ph5\">&lt;xref:System.Web.Security.MembershipProvider.ValidatingPassword&gt;</ph> event if a <ph id=\"ph6\">&lt;xref:System.Web.Security.MembershipValidatePasswordEventHandler&gt;</ph> has been specified.","pos":[0,483],"source":"The <xref:System.Web.Security.MembershipProvider.OnValidatingPassword%2A> virtual method is used during the <xref:System.Web.Security.MembershipProvider.CreateUser%2A>, <xref:System.Web.Security.MembershipProvider.ChangePassword%2A>, and <xref:System.Web.Security.MembershipProvider.ResetPassword%2A> methods to raise the <xref:System.Web.Security.MembershipProvider.ValidatingPassword> event if a <xref:System.Web.Security.MembershipValidatePasswordEventHandler> has been specified."},{"content":"The <ph id=\"ph1\">`e`</ph> parameter is used to pass a <ph id=\"ph2\">&lt;xref:System.Web.Security.ValidatePasswordEventArgs&gt;</ph> object to the <ph id=\"ph3\">&lt;xref:System.Web.Security.MembershipValidatePasswordEventHandler&gt;</ph> event handler.","pos":[484,667],"source":" The `e` parameter is used to pass a <xref:System.Web.Security.ValidatePasswordEventArgs> object to the <xref:System.Web.Security.MembershipValidatePasswordEventHandler> event handler."},{"content":"When the <ph id=\"ph1\">&lt;xref:System.Web.Security.MembershipProvider.ValidatingPassword&gt;</ph> event has completed, the properties of the <ph id=\"ph2\">&lt;xref:System.Web.Security.ValidatePasswordEventArgs&gt;</ph> object supplied as the <ph id=\"ph3\">`e`</ph> parameter can be examined to determine whether the current action should be canceled and if a particular <ph id=\"ph4\">&lt;xref:System.Exception&gt;</ph>, stored in the <ph id=\"ph5\">&lt;xref:System.Web.Security.ValidatePasswordEventArgs.FailureInformation%2A&gt;</ph> property, should be thrown.","pos":[668,1111],"source":" When the <xref:System.Web.Security.MembershipProvider.ValidatingPassword> event has completed, the properties of the <xref:System.Web.Security.ValidatePasswordEventArgs> object supplied as the `e` parameter can be examined to determine whether the current action should be canceled and if a particular <xref:System.Exception>, stored in the <xref:System.Web.Security.ValidatePasswordEventArgs.FailureInformation%2A> property, should be thrown."}]}],"pos":[71492,72604],"yaml":true,"extradata":"MT"},{"content":"The <xref href=\"System.Web.Security.ValidatePasswordEventArgs\"></xref> to pass to the <xref href=\"System.Web.Security.MembershipProvider.ValidatingPassword\"></xref> event handler.","nodes":[{"pos":[0,179],"content":"The <ph id=\"ph1\">&lt;xref href=\"System.Web.Security.ValidatePasswordEventArgs\"&gt;&lt;/xref&gt;</ph> to pass to the <ph id=\"ph2\">&lt;xref href=\"System.Web.Security.MembershipProvider.ValidatingPassword\"&gt;&lt;/xref&gt;</ph> event handler.","source":"The <xref href=\"System.Web.Security.ValidatePasswordEventArgs\"></xref> to pass to the <xref href=\"System.Web.Security.MembershipProvider.ValidatingPassword\"></xref> event handler."}],"pos":[73035,73215],"yaml":true},{"content":"Gets the number of minutes in which a maximum number of invalid password or password-answer attempts are allowed before the membership user is locked out.","nodes":[{"pos":[0,154],"content":"Gets the number of minutes in which a maximum number of invalid password or password-answer attempts are allowed before the membership user is locked out.","nodes":[{"content":"Gets the number of minutes in which a maximum number of invalid password or password-answer attempts are allowed before the membership user is locked out.","pos":[0,154]}]}],"pos":[74336,74491],"yaml":true},{"content":"The <xref:System.Web.Security.Membership.PasswordAttemptWindow%2A> property works in conjunction with the <xref:System.Web.Security.Membership.MaxInvalidPasswordAttempts%2A> property to guard against an unwanted source guessing the password or password answer of a membership user through repeated attempts. If the number of invalid passwords or password questions supplied for a membership user exceeds the <xref:System.Web.Security.Membership.MaxInvalidPasswordAttempts%2A> within the number of minutes identified by the <xref:System.Web.Security.Membership.PasswordAttemptWindow%2A>, then the membership user is locked out by setting the <xref:System.Web.Security.MembershipUser.IsLockedOut%2A> property to `true` until the user is unlocked by a call to the <xref:System.Web.Security.MembershipUser.UnlockUser%2A> method. If a valid password or password answer is supplied before the <xref:System.Web.Security.Membership.MaxInvalidPasswordAttempts%2A> is reached, the counter that tracks the number of invalid attempts is reset to zero.  \n  \n Invalid password and password-answer attempts accumulate independently of one another. For example, if the <xref:System.Web.Security.Membership.MaxInvalidPasswordAttempts%2A> property is set to 5, and three invalid password attempts are made followed by two invalid password-answer attempts, two more invalid password attempts (or three more invalid password-answer attempts) must be made within the <xref:System.Web.Security.Membership.PasswordAttemptWindow%2A> value for the membership user to be locked out.  \n  \n If the <xref:System.Web.Security.Membership.RequiresQuestionAndAnswer%2A> property is set to `false`, invalid password-answer attempts are not tracked.  \n  \n Invalid password and password-answer attempts are tracked in the <xref:System.Web.Security.MembershipProvider.ValidateUser%2A>, <xref:System.Web.Security.MembershipProvider.ChangePassword%2A>, <xref:System.Web.Security.MembershipProvider.ChangePasswordQuestionAndAnswer%2A>, <xref:System.Web.Security.MembershipProvider.GetPassword%2A>, and <xref:System.Web.Security.MembershipProvider.ResetPassword%2A> methods.","nodes":[{"pos":[0,1039],"content":"The <xref:System.Web.Security.Membership.PasswordAttemptWindow%2A> property works in conjunction with the <xref:System.Web.Security.Membership.MaxInvalidPasswordAttempts%2A> property to guard against an unwanted source guessing the password or password answer of a membership user through repeated attempts. If the number of invalid passwords or password questions supplied for a membership user exceeds the <xref:System.Web.Security.Membership.MaxInvalidPasswordAttempts%2A> within the number of minutes identified by the <xref:System.Web.Security.Membership.PasswordAttemptWindow%2A>, then the membership user is locked out by setting the <xref:System.Web.Security.MembershipUser.IsLockedOut%2A> property to `true` until the user is unlocked by a call to the <xref:System.Web.Security.MembershipUser.UnlockUser%2A> method. If a valid password or password answer is supplied before the <xref:System.Web.Security.Membership.MaxInvalidPasswordAttempts%2A> is reached, the counter that tracks the number of invalid attempts is reset to zero.","nodes":[{"content":"The <ph id=\"ph1\">&lt;xref:System.Web.Security.Membership.PasswordAttemptWindow%2A&gt;</ph> property works in conjunction with the <ph id=\"ph2\">&lt;xref:System.Web.Security.Membership.MaxInvalidPasswordAttempts%2A&gt;</ph> property to guard against an unwanted source guessing the password or password answer of a membership user through repeated attempts.","pos":[0,307],"source":"The <xref:System.Web.Security.Membership.PasswordAttemptWindow%2A> property works in conjunction with the <xref:System.Web.Security.Membership.MaxInvalidPasswordAttempts%2A> property to guard against an unwanted source guessing the password or password answer of a membership user through repeated attempts."},{"content":"If the number of invalid passwords or password questions supplied for a membership user exceeds the <ph id=\"ph1\">&lt;xref:System.Web.Security.Membership.MaxInvalidPasswordAttempts%2A&gt;</ph> within the number of minutes identified by the <ph id=\"ph2\">&lt;xref:System.Web.Security.Membership.PasswordAttemptWindow%2A&gt;</ph>, then the membership user is locked out by setting the <ph id=\"ph3\">&lt;xref:System.Web.Security.MembershipUser.IsLockedOut%2A&gt;</ph> property to <ph id=\"ph4\">`true`</ph> until the user is unlocked by a call to the <ph id=\"ph5\">&lt;xref:System.Web.Security.MembershipUser.UnlockUser%2A&gt;</ph> method.","pos":[308,824],"source":" If the number of invalid passwords or password questions supplied for a membership user exceeds the <xref:System.Web.Security.Membership.MaxInvalidPasswordAttempts%2A> within the number of minutes identified by the <xref:System.Web.Security.Membership.PasswordAttemptWindow%2A>, then the membership user is locked out by setting the <xref:System.Web.Security.MembershipUser.IsLockedOut%2A> property to `true` until the user is unlocked by a call to the <xref:System.Web.Security.MembershipUser.UnlockUser%2A> method."},{"content":"If a valid password or password answer is supplied before the <ph id=\"ph1\">&lt;xref:System.Web.Security.Membership.MaxInvalidPasswordAttempts%2A&gt;</ph> is reached, the counter that tracks the number of invalid attempts is reset to zero.","pos":[825,1039],"source":" If a valid password or password answer is supplied before the <xref:System.Web.Security.Membership.MaxInvalidPasswordAttempts%2A> is reached, the counter that tracks the number of invalid attempts is reset to zero."}]},{"pos":[1046,1556],"content":"Invalid password and password-answer attempts accumulate independently of one another. For example, if the <xref:System.Web.Security.Membership.MaxInvalidPasswordAttempts%2A> property is set to 5, and three invalid password attempts are made followed by two invalid password-answer attempts, two more invalid password attempts (or three more invalid password-answer attempts) must be made within the <xref:System.Web.Security.Membership.PasswordAttemptWindow%2A> value for the membership user to be locked out.","nodes":[{"content":"Invalid password and password-answer attempts accumulate independently of one another. For example, if the <xref:System.Web.Security.Membership.MaxInvalidPasswordAttempts%2A> property is set to 5, and three invalid password attempts are made followed by two invalid password-answer attempts, two more invalid password attempts (or three more invalid password-answer attempts) must be made within the <xref:System.Web.Security.Membership.PasswordAttemptWindow%2A> value for the membership user to be locked out.","pos":[0,510],"nodes":[{"content":"Invalid password and password-answer attempts accumulate independently of one another.","pos":[0,86]},{"content":"For example, if the <ph id=\"ph1\">&lt;xref:System.Web.Security.Membership.MaxInvalidPasswordAttempts%2A&gt;</ph> property is set to 5, and three invalid password attempts are made followed by two invalid password-answer attempts, two more invalid password attempts (or three more invalid password-answer attempts) must be made within the <ph id=\"ph2\">&lt;xref:System.Web.Security.Membership.PasswordAttemptWindow%2A&gt;</ph> value for the membership user to be locked out.","pos":[87,510],"source":" For example, if the <xref:System.Web.Security.Membership.MaxInvalidPasswordAttempts%2A> property is set to 5, and three invalid password attempts are made followed by two invalid password-answer attempts, two more invalid password attempts (or three more invalid password-answer attempts) must be made within the <xref:System.Web.Security.Membership.PasswordAttemptWindow%2A> value for the membership user to be locked out."}]}]},{"pos":[1563,1714],"content":"If the <ph id=\"ph1\">&lt;xref:System.Web.Security.Membership.RequiresQuestionAndAnswer%2A&gt;</ph> property is set to <ph id=\"ph2\">`false`</ph>, invalid password-answer attempts are not tracked.","source":"If the <xref:System.Web.Security.Membership.RequiresQuestionAndAnswer%2A> property is set to `false`, invalid password-answer attempts are not tracked."},{"pos":[1721,2133],"content":"Invalid password and password-answer attempts are tracked in the <xref:System.Web.Security.MembershipProvider.ValidateUser%2A>, <xref:System.Web.Security.MembershipProvider.ChangePassword%2A>, <xref:System.Web.Security.MembershipProvider.ChangePasswordQuestionAndAnswer%2A>, <xref:System.Web.Security.MembershipProvider.GetPassword%2A>, and <xref:System.Web.Security.MembershipProvider.ResetPassword%2A> methods.","nodes":[{"content":"Invalid password and password-answer attempts are tracked in the <ph id=\"ph1\">&lt;xref:System.Web.Security.MembershipProvider.ValidateUser%2A&gt;</ph>, <ph id=\"ph2\">&lt;xref:System.Web.Security.MembershipProvider.ChangePassword%2A&gt;</ph>, <ph id=\"ph3\">&lt;xref:System.Web.Security.MembershipProvider.ChangePasswordQuestionAndAnswer%2A&gt;</ph>, <ph id=\"ph4\">&lt;xref:System.Web.Security.MembershipProvider.GetPassword%2A&gt;</ph>, and <ph id=\"ph5\">&lt;xref:System.Web.Security.MembershipProvider.ResetPassword%2A&gt;</ph> methods.","pos":[0,412],"source":"Invalid password and password-answer attempts are tracked in the <xref:System.Web.Security.MembershipProvider.ValidateUser%2A>, <xref:System.Web.Security.MembershipProvider.ChangePassword%2A>, <xref:System.Web.Security.MembershipProvider.ChangePasswordQuestionAndAnswer%2A>, <xref:System.Web.Security.MembershipProvider.GetPassword%2A>, and <xref:System.Web.Security.MembershipProvider.ResetPassword%2A> methods."}]}],"pos":[74502,76644],"yaml":true,"extradata":"MT"},{"content":"The number of minutes in which a maximum number of invalid password or password-answer attempts are allowed before the membership user is locked out.","nodes":[{"pos":[0,149],"content":"The number of minutes in which a maximum number of invalid password or password-answer attempts are allowed before the membership user is locked out.","nodes":[{"content":"The number of minutes in which a maximum number of invalid password or password-answer attempts are allowed before the membership user is locked out.","pos":[0,149]}]}],"pos":[76982,77132],"yaml":true},{"content":"Gets a value indicating the format for storing passwords in the membership data store.","nodes":[{"pos":[0,86],"content":"Gets a value indicating the format for storing passwords in the membership data store.","nodes":[{"content":"Gets a value indicating the format for storing passwords in the membership data store.","pos":[0,86]}]}],"pos":[78212,78299],"yaml":true},{"content":"The <xref:System.Web.Security.MembershipProvider.PasswordFormat%2A> property indicates the format that passwords are stored in. Use `Hashed` only, `Clear` and `Encrypted` are not secure. `Hashed` passwords are hashed using a one-way hash algorithm and a randomly generated salt value when stored in the database. When a password is validated, it is hashed with the salt value in the database for verification. Hashed passwords cannot be retrieved. `Encrypted` passwords are not considered safe, as a breach that reveals your database contents can also expose the encryption key. This means your encrypted passwords could be decrypted and exposed.  \n  \n You can use the <xref:System.Web.Security.MembershipProvider.EncryptPassword%2A> and <xref:System.Web.Security.MembershipProvider.DecryptPassword%2A> virtual methods of the <xref:System.Web.Security.MembershipProvider> class to encrypt and decrypt password values, or you can supply your own encryption code. If you use the <xref:System.Web.Security.MembershipProvider.EncryptPassword%2A> and <xref:System.Web.Security.MembershipProvider.DecryptPassword%2A> virtual methods of the <xref:System.Web.Security.MembershipProvider> class, `Encrypted` passwords are encrypted using the key information supplied in the [machineKey Element (ASP.NET Settings Schema)](http://msdn.microsoft.com/en-us/4b5699a9-bc21-4c4a-85f1-8b3b8ebd2d46) element in your configuration.","nodes":[{"pos":[0,646],"content":"The <xref:System.Web.Security.MembershipProvider.PasswordFormat%2A> property indicates the format that passwords are stored in. Use `Hashed` only, `Clear` and `Encrypted` are not secure. `Hashed` passwords are hashed using a one-way hash algorithm and a randomly generated salt value when stored in the database. When a password is validated, it is hashed with the salt value in the database for verification. Hashed passwords cannot be retrieved. `Encrypted` passwords are not considered safe, as a breach that reveals your database contents can also expose the encryption key. This means your encrypted passwords could be decrypted and exposed.","nodes":[{"content":"The <ph id=\"ph1\">&lt;xref:System.Web.Security.MembershipProvider.PasswordFormat%2A&gt;</ph> property indicates the format that passwords are stored in.","pos":[0,127],"source":"The <xref:System.Web.Security.MembershipProvider.PasswordFormat%2A> property indicates the format that passwords are stored in."},{"content":"Use <ph id=\"ph1\">`Hashed`</ph> only, <ph id=\"ph2\">`Clear`</ph> and <ph id=\"ph3\">`Encrypted`</ph> are not secure.","pos":[128,186],"source":" Use `Hashed` only, `Clear` and `Encrypted` are not secure."},{"content":"<ph id=\"ph1\">`Hashed`</ph> passwords are hashed using a one-way hash algorithm and a randomly generated salt value when stored in the database.","pos":[187,312],"source":"`Hashed` passwords are hashed using a one-way hash algorithm and a randomly generated salt value when stored in the database."},{"content":"When a password is validated, it is hashed with the salt value in the database for verification.","pos":[313,409]},{"content":"Hashed passwords cannot be retrieved.","pos":[410,447]},{"content":"<ph id=\"ph1\">`Encrypted`</ph> passwords are not considered safe, as a breach that reveals your database contents can also expose the encryption key.","pos":[448,578],"source":"`Encrypted` passwords are not considered safe, as a breach that reveals your database contents can also expose the encryption key."},{"content":"This means your encrypted passwords could be decrypted and exposed.","pos":[579,646]}]},{"pos":[653,1412],"content":"You can use the <xref:System.Web.Security.MembershipProvider.EncryptPassword%2A> and <xref:System.Web.Security.MembershipProvider.DecryptPassword%2A> virtual methods of the <xref:System.Web.Security.MembershipProvider> class to encrypt and decrypt password values, or you can supply your own encryption code. If you use the <xref:System.Web.Security.MembershipProvider.EncryptPassword%2A> and <xref:System.Web.Security.MembershipProvider.DecryptPassword%2A> virtual methods of the <xref:System.Web.Security.MembershipProvider> class, `Encrypted` passwords are encrypted using the key information supplied in the [machineKey Element (ASP.NET Settings Schema)](http://msdn.microsoft.com/en-us/4b5699a9-bc21-4c4a-85f1-8b3b8ebd2d46) element in your configuration.","nodes":[{"content":"You can use the <ph id=\"ph1\">&lt;xref:System.Web.Security.MembershipProvider.EncryptPassword%2A&gt;</ph> and <ph id=\"ph2\">&lt;xref:System.Web.Security.MembershipProvider.DecryptPassword%2A&gt;</ph> virtual methods of the <ph id=\"ph3\">&lt;xref:System.Web.Security.MembershipProvider&gt;</ph> class to encrypt and decrypt password values, or you can supply your own encryption code.","pos":[0,308],"source":"You can use the <xref:System.Web.Security.MembershipProvider.EncryptPassword%2A> and <xref:System.Web.Security.MembershipProvider.DecryptPassword%2A> virtual methods of the <xref:System.Web.Security.MembershipProvider> class to encrypt and decrypt password values, or you can supply your own encryption code."},{"content":"If you use the <ph id=\"ph1\">&lt;xref:System.Web.Security.MembershipProvider.EncryptPassword%2A&gt;</ph> and <ph id=\"ph2\">&lt;xref:System.Web.Security.MembershipProvider.DecryptPassword%2A&gt;</ph> virtual methods of the <ph id=\"ph3\">&lt;xref:System.Web.Security.MembershipProvider&gt;</ph> class, <ph id=\"ph4\">`Encrypted`</ph> passwords are encrypted using the key information supplied in the <bpt id=\"p1\">[</bpt>machineKey Element (ASP.NET Settings Schema)<ept id=\"p1\">](http://msdn.microsoft.com/en-us/4b5699a9-bc21-4c4a-85f1-8b3b8ebd2d46)</ept> element in your configuration.","pos":[309,759],"source":" If you use the <xref:System.Web.Security.MembershipProvider.EncryptPassword%2A> and <xref:System.Web.Security.MembershipProvider.DecryptPassword%2A> virtual methods of the <xref:System.Web.Security.MembershipProvider> class, `Encrypted` passwords are encrypted using the key information supplied in the [machineKey Element (ASP.NET Settings Schema)](http://msdn.microsoft.com/en-us/4b5699a9-bc21-4c4a-85f1-8b3b8ebd2d46) element in your configuration."}]}],"pos":[78310,79727],"yaml":true,"extradata":"MT"},{"content":"One of the <xref href=\"System.Web.Security.MembershipPasswordFormat\"></xref> values indicating the format for storing passwords in the data store.","nodes":[{"pos":[0,146],"content":"One of the <ph id=\"ph1\">&lt;xref href=\"System.Web.Security.MembershipPasswordFormat\"&gt;&lt;/xref&gt;</ph> values indicating the format for storing passwords in the data store.","source":"One of the <xref href=\"System.Web.Security.MembershipPasswordFormat\"></xref> values indicating the format for storing passwords in the data store."}],"pos":[80131,80278],"yaml":true},{"content":"Gets the regular expression used to evaluate a password.","nodes":[{"pos":[0,56],"content":"Gets the regular expression used to evaluate a password.","nodes":[{"content":"Gets the regular expression used to evaluate a password.","pos":[0,56]}]}],"pos":[81465,81522],"yaml":true},{"content":"The <xref:System.Web.Security.MembershipProvider.PasswordStrengthRegularExpression%2A> property gets the regular expression used to evaluate password complexity for the <xref:System.Web.Security.MembershipProvider> object.  \n  \n The <xref:System.Web.Security.MembershipProvider.PasswordStrengthRegularExpression%2A> property is set in the application configuration using the `passwordStrengthRegularExpression` attribute of the [membership Element (ASP.NET Settings Schema)](http://msdn.microsoft.com/en-us/b9c1ee8f-33ca-4361-8666-b42a0fe86049) configuration element.","nodes":[{"pos":[0,222],"content":"The <xref:System.Web.Security.MembershipProvider.PasswordStrengthRegularExpression%2A> property gets the regular expression used to evaluate password complexity for the <xref:System.Web.Security.MembershipProvider> object.","nodes":[{"content":"The <ph id=\"ph1\">&lt;xref:System.Web.Security.MembershipProvider.PasswordStrengthRegularExpression%2A&gt;</ph> property gets the regular expression used to evaluate password complexity for the <ph id=\"ph2\">&lt;xref:System.Web.Security.MembershipProvider&gt;</ph> object.","pos":[0,222],"source":"The <xref:System.Web.Security.MembershipProvider.PasswordStrengthRegularExpression%2A> property gets the regular expression used to evaluate password complexity for the <xref:System.Web.Security.MembershipProvider> object."}]},{"pos":[229,567],"content":"The <ph id=\"ph1\">&lt;xref:System.Web.Security.MembershipProvider.PasswordStrengthRegularExpression%2A&gt;</ph> property is set in the application configuration using the <ph id=\"ph2\">`passwordStrengthRegularExpression`</ph> attribute of the <bpt id=\"p1\">[</bpt>membership Element (ASP.NET Settings Schema)<ept id=\"p1\">](http://msdn.microsoft.com/en-us/b9c1ee8f-33ca-4361-8666-b42a0fe86049)</ept> configuration element.","source":"The <xref:System.Web.Security.MembershipProvider.PasswordStrengthRegularExpression%2A> property is set in the application configuration using the `passwordStrengthRegularExpression` attribute of the [membership Element (ASP.NET Settings Schema)](http://msdn.microsoft.com/en-us/b9c1ee8f-33ca-4361-8666-b42a0fe86049) configuration element."}],"pos":[81533,82105],"yaml":true,"extradata":"MT"},{"content":"A regular expression used to evaluate a password.","nodes":[{"pos":[0,49],"content":"A regular expression used to evaluate a password.","nodes":[{"content":"A regular expression used to evaluate a password.","pos":[0,49]}]}],"pos":[83511,83561],"yaml":true},{"content":"Gets a value indicating whether the membership provider is configured to require the user to answer a password question for password reset and retrieval.","nodes":[{"pos":[0,153],"content":"Gets a value indicating whether the membership provider is configured to require the user to answer a password question for password reset and retrieval.","nodes":[{"content":"Gets a value indicating whether the membership provider is configured to require the user to answer a password question for password reset and retrieval.","pos":[0,153]}]}],"pos":[84719,84873],"yaml":true},{"content":"A Boolean value specified in the configuration file (Web.config). The <xref:System.Web.Security.MembershipProvider.RequiresQuestionAndAnswer%2A> property indicates whether users must supply a password answer in order to retrieve their password using the <xref:System.Web.Security.MembershipProvider.GetPassword%2A> method, or reset their password using the <xref:System.Web.Security.MembershipProvider.ResetPassword%2A> method.  \n  \n This property is read-only.","nodes":[{"pos":[0,427],"content":"A Boolean value specified in the configuration file (Web.config). The <xref:System.Web.Security.MembershipProvider.RequiresQuestionAndAnswer%2A> property indicates whether users must supply a password answer in order to retrieve their password using the <xref:System.Web.Security.MembershipProvider.GetPassword%2A> method, or reset their password using the <xref:System.Web.Security.MembershipProvider.ResetPassword%2A> method.","nodes":[{"content":"A Boolean value specified in the configuration file (Web.config). The <xref:System.Web.Security.MembershipProvider.RequiresQuestionAndAnswer%2A> property indicates whether users must supply a password answer in order to retrieve their password using the <xref:System.Web.Security.MembershipProvider.GetPassword%2A> method, or reset their password using the <xref:System.Web.Security.MembershipProvider.ResetPassword%2A> method.","pos":[0,427],"nodes":[{"content":"A Boolean value specified in the configuration file (Web.config).","pos":[0,65]},{"content":"The <ph id=\"ph1\">&lt;xref:System.Web.Security.MembershipProvider.RequiresQuestionAndAnswer%2A&gt;</ph> property indicates whether users must supply a password answer in order to retrieve their password using the <ph id=\"ph2\">&lt;xref:System.Web.Security.MembershipProvider.GetPassword%2A&gt;</ph> method, or reset their password using the <ph id=\"ph3\">&lt;xref:System.Web.Security.MembershipProvider.ResetPassword%2A&gt;</ph> method.","pos":[66,427],"source":" The <xref:System.Web.Security.MembershipProvider.RequiresQuestionAndAnswer%2A> property indicates whether users must supply a password answer in order to retrieve their password using the <xref:System.Web.Security.MembershipProvider.GetPassword%2A> method, or reset their password using the <xref:System.Web.Security.MembershipProvider.ResetPassword%2A> method."}]}]},{"pos":[434,461],"content":"This property is read-only.","nodes":[{"content":"This property is read-only.","pos":[0,27]}]}],"pos":[84884,85350],"yaml":true,"extradata":"MT"},{"content":"`true` if a password answer is required for password reset and retrieval; otherwise, `false`. The default is `true`.","nodes":[{"pos":[0,116],"content":"`true` if a password answer is required for password reset and retrieval; otherwise, `false`. The default is `true`.","nodes":[{"content":"<ph id=\"ph1\">`true`</ph> if a password answer is required for password reset and retrieval; otherwise, <ph id=\"ph2\">`false`</ph>.","pos":[0,93],"source":"`true` if a password answer is required for password reset and retrieval; otherwise, `false`."},{"content":"The default is <ph id=\"ph1\">`true`</ph>.","pos":[94,116],"source":" The default is `true`."}]}],"pos":[85695,85814],"yaml":true},{"content":"Gets a value indicating whether the membership provider is configured to require a unique e-mail address for each user name.","nodes":[{"pos":[0,124],"content":"Gets a value indicating whether the membership provider is configured to require a unique e-mail address for each user name.","nodes":[{"content":"Gets a value indicating whether the membership provider is configured to require a unique e-mail address for each user name.","pos":[0,124]}]}],"pos":[86928,87053],"yaml":true},{"content":"The <xref:System.Web.Security.MembershipProvider.RequiresUniqueEmail%2A> property indicates whether users must supply a unique e-mail address value when creating a user. If a user already exists in the data source for the current <xref:System.Web.Security.MembershipProvider.ApplicationName%2A>, then the <xref:System.Web.Security.MembershipProvider.CreateUser%2A> method returns `null` and a status value of <xref:System.Web.Security.MembershipCreateStatus.DuplicateEmail>.","nodes":[{"pos":[0,474],"content":"The <xref:System.Web.Security.MembershipProvider.RequiresUniqueEmail%2A> property indicates whether users must supply a unique e-mail address value when creating a user. If a user already exists in the data source for the current <xref:System.Web.Security.MembershipProvider.ApplicationName%2A>, then the <xref:System.Web.Security.MembershipProvider.CreateUser%2A> method returns `null` and a status value of <xref:System.Web.Security.MembershipCreateStatus.DuplicateEmail>.","nodes":[{"content":"The <ph id=\"ph1\">&lt;xref:System.Web.Security.MembershipProvider.RequiresUniqueEmail%2A&gt;</ph> property indicates whether users must supply a unique e-mail address value when creating a user.","pos":[0,169],"source":"The <xref:System.Web.Security.MembershipProvider.RequiresUniqueEmail%2A> property indicates whether users must supply a unique e-mail address value when creating a user."},{"content":"If a user already exists in the data source for the current <ph id=\"ph1\">&lt;xref:System.Web.Security.MembershipProvider.ApplicationName%2A&gt;</ph>, then the <ph id=\"ph2\">&lt;xref:System.Web.Security.MembershipProvider.CreateUser%2A&gt;</ph> method returns <ph id=\"ph3\">`null`</ph> and a status value of <ph id=\"ph4\">&lt;xref:System.Web.Security.MembershipCreateStatus.DuplicateEmail&gt;</ph>.","pos":[170,474],"source":" If a user already exists in the data source for the current <xref:System.Web.Security.MembershipProvider.ApplicationName%2A>, then the <xref:System.Web.Security.MembershipProvider.CreateUser%2A> method returns `null` and a status value of <xref:System.Web.Security.MembershipCreateStatus.DuplicateEmail>."}]}],"pos":[87064,87539],"yaml":true,"extradata":"MT"},{"content":"`true` if the membership provider requires a unique e-mail address; otherwise, `false`. The default is `true`.","nodes":[{"pos":[0,110],"content":"`true` if the membership provider requires a unique e-mail address; otherwise, `false`. The default is `true`.","nodes":[{"content":"<ph id=\"ph1\">`true`</ph> if the membership provider requires a unique e-mail address; otherwise, <ph id=\"ph2\">`false`</ph>.","pos":[0,87],"source":"`true` if the membership provider requires a unique e-mail address; otherwise, `false`."},{"content":"The default is <ph id=\"ph1\">`true`</ph>.","pos":[88,110],"source":" The default is `true`."}]}],"pos":[87878,87991],"yaml":true},{"content":"Resets a user's password to a new, automatically generated password.","nodes":[{"pos":[0,68],"content":"Resets a user's password to a new, automatically generated password.","nodes":[{"content":"Resets a user's password to a new, automatically generated password.","pos":[0,68]}]}],"pos":[89196,89265],"yaml":true},{"content":"Takes, as input, a user name and a password answer and generates a new, random password for the specified user.  \n  \n> [!NOTE]\n>  The random password created by the <xref:System.Web.Security.MembershipProvider.ResetPassword%2A> method is not guaranteed to pass the regular expression in the <xref:System.Web.Security.MembershipProvider.PasswordStrengthRegularExpression%2A> property. However, the random password will meet the criteria established by the <xref:System.Web.Security.MembershipProvider.MinRequiredPasswordLength%2A> and <xref:System.Web.Security.MembershipProvider.MinRequiredNonAlphanumericCharacters%2A> properties  \n  \n The <xref:System.Web.Security.MembershipProvider.ResetPassword%2A> method updates the user information in the data source with the new password value and returns the new password as a string. A convenient mechanism for generating a random password is the <xref:System.Web.Security.Membership.GeneratePassword%2A> method.  \n  \n <xref:System.Web.Security.MembershipProvider.ResetPassword%2A> ensures that the <xref:System.Web.Security.MembershipProvider.EnablePasswordReset%2A> flag is set to `true` before performing any action. If <xref:System.Web.Security.MembershipProvider.EnablePasswordReset%2A> is `false`, a <xref:System.NotSupportedException> exception is thrown.  \n  \n <xref:System.Web.Security.MembershipProvider.ResetPassword%2A> also checks the value of the <xref:System.Web.Security.MembershipProvider.RequiresQuestionAndAnswer%2A> property. If <xref:System.Web.Security.MembershipProvider.RequiresQuestionAndAnswer%2A> is `true`, <xref:System.Web.Security.MembershipProvider.ResetPassword%2A> checks the value of the supplied answer parameter against the stored password answer in the data source. If they do not match, a <xref:System.Web.Security.MembershipPasswordException> exception is thrown.","nodes":[{"pos":[0,111],"content":"Takes, as input, a user name and a password answer and generates a new, random password for the specified user.","nodes":[{"content":"Takes, as input, a user name and a password answer and generates a new, random password for the specified user.","pos":[0,111]}]},{"pos":[119,630],"content":"[!NOTE]\n The random password created by the <xref:System.Web.Security.MembershipProvider.ResetPassword%2A> method is not guaranteed to pass the regular expression in the <xref:System.Web.Security.MembershipProvider.PasswordStrengthRegularExpression%2A> property. However, the random password will meet the criteria established by the <xref:System.Web.Security.MembershipProvider.MinRequiredPasswordLength%2A> and <xref:System.Web.Security.MembershipProvider.MinRequiredNonAlphanumericCharacters%2A> properties","leadings":["","> "],"nodes":[{"content":" The random password created by the <xref:System.Web.Security.MembershipProvider.ResetPassword%2A> method is not guaranteed to pass the regular expression in the <xref:System.Web.Security.MembershipProvider.PasswordStrengthRegularExpression%2A> property. However, the random password will meet the criteria established by the <xref:System.Web.Security.MembershipProvider.MinRequiredPasswordLength%2A> and <xref:System.Web.Security.MembershipProvider.MinRequiredNonAlphanumericCharacters%2A> properties","pos":[8,509],"nodes":[{"content":"The random password created by the <ph id=\"ph1\">&lt;xref:System.Web.Security.MembershipProvider.ResetPassword%2A&gt;</ph> method is not guaranteed to pass the regular expression in the <ph id=\"ph2\">&lt;xref:System.Web.Security.MembershipProvider.PasswordStrengthRegularExpression%2A&gt;</ph> property.","pos":[1,254],"source":" The random password created by the <xref:System.Web.Security.MembershipProvider.ResetPassword%2A> method is not guaranteed to pass the regular expression in the <xref:System.Web.Security.MembershipProvider.PasswordStrengthRegularExpression%2A> property."},{"content":"However, the random password will meet the criteria established by the <ph id=\"ph1\">&lt;xref:System.Web.Security.MembershipProvider.MinRequiredPasswordLength%2A&gt;</ph> and <ph id=\"ph2\">&lt;xref:System.Web.Security.MembershipProvider.MinRequiredNonAlphanumericCharacters%2A&gt;</ph> properties","pos":[255,501],"source":" However, the random password will meet the criteria established by the <xref:System.Web.Security.MembershipProvider.MinRequiredPasswordLength%2A> and <xref:System.Web.Security.MembershipProvider.MinRequiredNonAlphanumericCharacters%2A> properties"}]}]},{"pos":[637,957],"content":"The <xref:System.Web.Security.MembershipProvider.ResetPassword%2A> method updates the user information in the data source with the new password value and returns the new password as a string. A convenient mechanism for generating a random password is the <xref:System.Web.Security.Membership.GeneratePassword%2A> method.","nodes":[{"content":"The <xref:System.Web.Security.MembershipProvider.ResetPassword%2A> method updates the user information in the data source with the new password value and returns the new password as a string. A convenient mechanism for generating a random password is the <xref:System.Web.Security.Membership.GeneratePassword%2A> method.","pos":[0,320],"nodes":[{"content":"The <ph id=\"ph1\">&lt;xref:System.Web.Security.MembershipProvider.ResetPassword%2A&gt;</ph> method updates the user information in the data source with the new password value and returns the new password as a string.","pos":[0,191],"source":"The <xref:System.Web.Security.MembershipProvider.ResetPassword%2A> method updates the user information in the data source with the new password value and returns the new password as a string."},{"content":"A convenient mechanism for generating a random password is the <ph id=\"ph1\">&lt;xref:System.Web.Security.Membership.GeneratePassword%2A&gt;</ph> method.","pos":[192,320],"source":" A convenient mechanism for generating a random password is the <xref:System.Web.Security.Membership.GeneratePassword%2A> method."}]}]},{"pos":[964,1307],"content":"<xref:System.Web.Security.MembershipProvider.ResetPassword%2A> ensures that the <xref:System.Web.Security.MembershipProvider.EnablePasswordReset%2A> flag is set to `true` before performing any action. If <xref:System.Web.Security.MembershipProvider.EnablePasswordReset%2A> is `false`, a <xref:System.NotSupportedException> exception is thrown.","nodes":[{"content":"<ph id=\"ph1\">&lt;xref:System.Web.Security.MembershipProvider.ResetPassword%2A&gt;</ph> ensures that the <ph id=\"ph2\">&lt;xref:System.Web.Security.MembershipProvider.EnablePasswordReset%2A&gt;</ph> flag is set to <ph id=\"ph3\">`true`</ph> before performing any action.","pos":[0,200],"source":"<xref:System.Web.Security.MembershipProvider.ResetPassword%2A> ensures that the <xref:System.Web.Security.MembershipProvider.EnablePasswordReset%2A> flag is set to `true` before performing any action."},{"content":"If <ph id=\"ph1\">&lt;xref:System.Web.Security.MembershipProvider.EnablePasswordReset%2A&gt;</ph> is <ph id=\"ph2\">`false`</ph>, a <ph id=\"ph3\">&lt;xref:System.NotSupportedException&gt;</ph> exception is thrown.","pos":[201,343],"source":" If <xref:System.Web.Security.MembershipProvider.EnablePasswordReset%2A> is `false`, a <xref:System.NotSupportedException> exception is thrown."}]},{"pos":[1314,1847],"content":"<xref:System.Web.Security.MembershipProvider.ResetPassword%2A> also checks the value of the <xref:System.Web.Security.MembershipProvider.RequiresQuestionAndAnswer%2A> property. If <xref:System.Web.Security.MembershipProvider.RequiresQuestionAndAnswer%2A> is `true`, <xref:System.Web.Security.MembershipProvider.ResetPassword%2A> checks the value of the supplied answer parameter against the stored password answer in the data source. If they do not match, a <xref:System.Web.Security.MembershipPasswordException> exception is thrown.","nodes":[{"content":"<ph id=\"ph1\">&lt;xref:System.Web.Security.MembershipProvider.ResetPassword%2A&gt;</ph> also checks the value of the <ph id=\"ph2\">&lt;xref:System.Web.Security.MembershipProvider.RequiresQuestionAndAnswer%2A&gt;</ph> property.","pos":[0,176],"source":"<xref:System.Web.Security.MembershipProvider.ResetPassword%2A> also checks the value of the <xref:System.Web.Security.MembershipProvider.RequiresQuestionAndAnswer%2A> property."},{"content":"If <ph id=\"ph1\">&lt;xref:System.Web.Security.MembershipProvider.RequiresQuestionAndAnswer%2A&gt;</ph> is <ph id=\"ph2\">`true`</ph>, <ph id=\"ph3\">&lt;xref:System.Web.Security.MembershipProvider.ResetPassword%2A&gt;</ph> checks the value of the supplied answer parameter against the stored password answer in the data source.","pos":[177,433],"source":" If <xref:System.Web.Security.MembershipProvider.RequiresQuestionAndAnswer%2A> is `true`, <xref:System.Web.Security.MembershipProvider.ResetPassword%2A> checks the value of the supplied answer parameter against the stored password answer in the data source."},{"content":"If they do not match, a <ph id=\"ph1\">&lt;xref:System.Web.Security.MembershipPasswordException&gt;</ph> exception is thrown.","pos":[434,533],"source":" If they do not match, a <xref:System.Web.Security.MembershipPasswordException> exception is thrown."}]}],"pos":[89276,91135],"yaml":true,"extradata":"MT"},{"content":"The user to reset the password for.","nodes":[{"pos":[0,35],"content":"The user to reset the password for.","nodes":[{"content":"The user to reset the password for.","pos":[0,35]}]}],"pos":[91517,91553],"yaml":true},{"content":"The password answer for the specified user.","nodes":[{"pos":[0,43],"content":"The password answer for the specified user.","nodes":[{"content":"The password answer for the specified user.","pos":[0,43]}]}],"pos":[91615,91659],"yaml":true},{"content":"The new password for the specified user.","nodes":[{"pos":[0,40],"content":"The new password for the specified user.","nodes":[{"content":"The new password for the specified user.","pos":[0,40]}]}],"pos":[91716,91757],"yaml":true},{"content":"Clears a lock so that the membership user can be validated.","nodes":[{"pos":[0,59],"content":"Clears a lock so that the membership user can be validated.","nodes":[{"content":"Clears a lock so that the membership user can be validated.","pos":[0,59]}]}],"pos":[92872,92932],"yaml":true},{"content":"Takes, as input, a user name, and updates the field in the data source that stores the <xref:System.Web.Security.MembershipUser.IsLockedOut%2A> property to `false`. The <xref:System.Web.Security.MembershipProvider.UnlockUser%2A> method returns `true` if the record for the membership user is updated successfully; otherwise, `false`.","nodes":[{"pos":[0,333],"content":"Takes, as input, a user name, and updates the field in the data source that stores the <xref:System.Web.Security.MembershipUser.IsLockedOut%2A> property to `false`. The <xref:System.Web.Security.MembershipProvider.UnlockUser%2A> method returns `true` if the record for the membership user is updated successfully; otherwise, `false`.","nodes":[{"content":"Takes, as input, a user name, and updates the field in the data source that stores the <ph id=\"ph1\">&lt;xref:System.Web.Security.MembershipUser.IsLockedOut%2A&gt;</ph> property to <ph id=\"ph2\">`false`</ph>.","pos":[0,164],"source":"Takes, as input, a user name, and updates the field in the data source that stores the <xref:System.Web.Security.MembershipUser.IsLockedOut%2A> property to `false`."},{"content":"The <ph id=\"ph1\">&lt;xref:System.Web.Security.MembershipProvider.UnlockUser%2A&gt;</ph> method returns <ph id=\"ph2\">`true`</ph> if the record for the membership user is updated successfully; otherwise, <ph id=\"ph3\">`false`</ph>.","pos":[165,333],"source":" The <xref:System.Web.Security.MembershipProvider.UnlockUser%2A> method returns `true` if the record for the membership user is updated successfully; otherwise, `false`."}]}],"pos":[92943,93277],"yaml":true,"extradata":"MT"},{"content":"The membership user whose lock status you want to clear.","nodes":[{"pos":[0,56],"content":"The membership user whose lock status you want to clear.","nodes":[{"content":"The membership user whose lock status you want to clear.","pos":[0,56]}]}],"pos":[93639,93696],"yaml":true},{"content":"`true` if the membership user was successfully unlocked; otherwise, `false`.","nodes":[{"pos":[0,76],"content":"<ph id=\"ph1\">`true`</ph> if the membership user was successfully unlocked; otherwise, <ph id=\"ph2\">`false`</ph>.","source":"`true` if the membership user was successfully unlocked; otherwise, `false`."}],"pos":[93754,93833],"yaml":true},{"content":"Updates information about a user in the data source.","nodes":[{"pos":[0,52],"content":"Updates information about a user in the data source.","nodes":[{"content":"Updates information about a user in the data source.","pos":[0,52]}]}],"pos":[95032,95085],"yaml":true},{"content":"Takes, as input, a <xref:System.Web.Security.MembershipUser> object populated with user information and updates the data source with the supplied values.","nodes":[{"pos":[0,153],"content":"Takes, as input, a <xref:System.Web.Security.MembershipUser> object populated with user information and updates the data source with the supplied values.","nodes":[{"content":"Takes, as input, a <ph id=\"ph1\">&lt;xref:System.Web.Security.MembershipUser&gt;</ph> object populated with user information and updates the data source with the supplied values.","pos":[0,153],"source":"Takes, as input, a <xref:System.Web.Security.MembershipUser> object populated with user information and updates the data source with the supplied values."}]}],"pos":[95096,95250],"yaml":true,"extradata":"MT"},{"content":"A <xref href=\"System.Web.Security.MembershipUser\"></xref> object that represents the user to update and the updated information for the user.","nodes":[{"pos":[0,141],"content":"A <ph id=\"ph1\">&lt;xref href=\"System.Web.Security.MembershipUser\"&gt;&lt;/xref&gt;</ph> object that represents the user to update and the updated information for the user.","source":"A <xref href=\"System.Web.Security.MembershipUser\"></xref> object that represents the user to update and the updated information for the user."}],"pos":[95653,95795],"yaml":true},{"content":"Verifies that the specified user name and password exist in the data source.","nodes":[{"pos":[0,76],"content":"Verifies that the specified user name and password exist in the data source.","nodes":[{"content":"Verifies that the specified user name and password exist in the data source.","pos":[0,76]}]}],"pos":[96985,97062],"yaml":true},{"content":"Takes, as input, a user name and a password and verifies that the values match those in the data source. <xref:System.Web.Security.MembershipProvider.ValidateUser%2A> returns `true` for a successful user name and password match; otherwise, `false`.  \n  \n For successful validations, <xref:System.Web.Security.MembershipProvider.ValidateUser%2A> updates the <xref:System.Web.Security.MembershipUser.LastLoginDate%2A> for the specified user.","nodes":[{"pos":[0,248],"content":"Takes, as input, a user name and a password and verifies that the values match those in the data source. <xref:System.Web.Security.MembershipProvider.ValidateUser%2A> returns `true` for a successful user name and password match; otherwise, `false`.","nodes":[{"content":"Takes, as input, a user name and a password and verifies that the values match those in the data source.","pos":[0,104]},{"content":"<ph id=\"ph1\">&lt;xref:System.Web.Security.MembershipProvider.ValidateUser%2A&gt;</ph> returns <ph id=\"ph2\">`true`</ph> for a successful user name and password match; otherwise, <ph id=\"ph3\">`false`</ph>.","pos":[105,248],"source":" <xref:System.Web.Security.MembershipProvider.ValidateUser%2A> returns `true` for a successful user name and password match; otherwise, `false`."}]},{"pos":[255,439],"content":"For successful validations, <xref:System.Web.Security.MembershipProvider.ValidateUser%2A> updates the <xref:System.Web.Security.MembershipUser.LastLoginDate%2A> for the specified user.","nodes":[{"content":"For successful validations, <ph id=\"ph1\">&lt;xref:System.Web.Security.MembershipProvider.ValidateUser%2A&gt;</ph> updates the <ph id=\"ph2\">&lt;xref:System.Web.Security.MembershipUser.LastLoginDate%2A&gt;</ph> for the specified user.","pos":[0,184],"source":"For successful validations, <xref:System.Web.Security.MembershipProvider.ValidateUser%2A> updates the <xref:System.Web.Security.MembershipUser.LastLoginDate%2A> for the specified user."}]}],"pos":[97073,97517],"yaml":true,"extradata":"MT"},{"content":"The name of the user to validate.","nodes":[{"pos":[0,33],"content":"The name of the user to validate.","nodes":[{"content":"The name of the user to validate.","pos":[0,33]}]}],"pos":[97898,97932],"yaml":true},{"content":"The password for the specified user.","nodes":[{"pos":[0,36],"content":"The password for the specified user.","nodes":[{"content":"The password for the specified user.","pos":[0,36]}]}],"pos":[97996,98033],"yaml":true},{"content":"`true` if the specified username and password are valid; otherwise, `false`.","nodes":[{"pos":[0,76],"content":"<ph id=\"ph1\">`true`</ph> if the specified username and password are valid; otherwise, <ph id=\"ph2\">`false`</ph>.","source":"`true` if the specified username and password are valid; otherwise, `false`."}],"pos":[98091,98170],"yaml":true},{"content":"Occurs when a user is created, a password is changed, or a password is reset.","nodes":[{"pos":[0,77],"content":"Occurs when a user is created, a password is changed, or a password is reset.","nodes":[{"content":"Occurs when a user is created, a password is changed, or a password is reset.","pos":[0,77]}]}],"pos":[99262,99340],"yaml":true},{"content":"The <xref:System.Web.Security.MembershipProvider.ValidatingPassword> event is raised during the <xref:System.Web.Security.MembershipProvider.CreateUser%2A>, <xref:System.Web.Security.MembershipProvider.ChangePassword%2A>, and <xref:System.Web.Security.MembershipProvider.ResetPassword%2A> methods.  \n  \n The <xref:System.Web.Security.MembershipProvider.ValidatingPassword> event occurs before the action requested and enables the user to continue or cancel the requested action. If the action is canceled, the user can specify an exception to be thrown.  \n  \n Users use a <xref:System.Web.Security.MembershipValidatePasswordEventHandler> event handler to specify a handler for the <xref:System.Web.Security.MembershipProvider.ValidatingPassword> event. Provider implementers can use the <xref:System.Web.Security.MembershipProvider.OnValidatingPassword%2A> virtual method to raise the <xref:System.Web.Security.MembershipProvider.ValidatingPassword> event.","nodes":[{"pos":[0,297],"content":"The <xref:System.Web.Security.MembershipProvider.ValidatingPassword> event is raised during the <xref:System.Web.Security.MembershipProvider.CreateUser%2A>, <xref:System.Web.Security.MembershipProvider.ChangePassword%2A>, and <xref:System.Web.Security.MembershipProvider.ResetPassword%2A> methods.","nodes":[{"content":"The <ph id=\"ph1\">&lt;xref:System.Web.Security.MembershipProvider.ValidatingPassword&gt;</ph> event is raised during the <ph id=\"ph2\">&lt;xref:System.Web.Security.MembershipProvider.CreateUser%2A&gt;</ph>, <ph id=\"ph3\">&lt;xref:System.Web.Security.MembershipProvider.ChangePassword%2A&gt;</ph>, and <ph id=\"ph4\">&lt;xref:System.Web.Security.MembershipProvider.ResetPassword%2A&gt;</ph> methods.","pos":[0,297],"source":"The <xref:System.Web.Security.MembershipProvider.ValidatingPassword> event is raised during the <xref:System.Web.Security.MembershipProvider.CreateUser%2A>, <xref:System.Web.Security.MembershipProvider.ChangePassword%2A>, and <xref:System.Web.Security.MembershipProvider.ResetPassword%2A> methods."}]},{"pos":[304,553],"content":"The <xref:System.Web.Security.MembershipProvider.ValidatingPassword> event occurs before the action requested and enables the user to continue or cancel the requested action. If the action is canceled, the user can specify an exception to be thrown.","nodes":[{"content":"The <xref:System.Web.Security.MembershipProvider.ValidatingPassword> event occurs before the action requested and enables the user to continue or cancel the requested action. If the action is canceled, the user can specify an exception to be thrown.","pos":[0,249],"nodes":[{"content":"The <ph id=\"ph1\">&lt;xref:System.Web.Security.MembershipProvider.ValidatingPassword&gt;</ph> event occurs before the action requested and enables the user to continue or cancel the requested action.","pos":[0,174],"source":"The <xref:System.Web.Security.MembershipProvider.ValidatingPassword> event occurs before the action requested and enables the user to continue or cancel the requested action."},{"content":"If the action is canceled, the user can specify an exception to be thrown.","pos":[175,249]}]}]},{"pos":[560,956],"content":"Users use a <xref:System.Web.Security.MembershipValidatePasswordEventHandler> event handler to specify a handler for the <xref:System.Web.Security.MembershipProvider.ValidatingPassword> event. Provider implementers can use the <xref:System.Web.Security.MembershipProvider.OnValidatingPassword%2A> virtual method to raise the <xref:System.Web.Security.MembershipProvider.ValidatingPassword> event.","nodes":[{"content":"Users use a <xref:System.Web.Security.MembershipValidatePasswordEventHandler> event handler to specify a handler for the <xref:System.Web.Security.MembershipProvider.ValidatingPassword> event. Provider implementers can use the <xref:System.Web.Security.MembershipProvider.OnValidatingPassword%2A> virtual method to raise the <xref:System.Web.Security.MembershipProvider.ValidatingPassword> event.","pos":[0,396],"nodes":[{"content":"Users use a <ph id=\"ph1\">&lt;xref:System.Web.Security.MembershipValidatePasswordEventHandler&gt;</ph> event handler to specify a handler for the <ph id=\"ph2\">&lt;xref:System.Web.Security.MembershipProvider.ValidatingPassword&gt;</ph> event.","pos":[0,192],"source":"Users use a <xref:System.Web.Security.MembershipValidatePasswordEventHandler> event handler to specify a handler for the <xref:System.Web.Security.MembershipProvider.ValidatingPassword> event."},{"content":"Provider implementers can use the <ph id=\"ph1\">&lt;xref:System.Web.Security.MembershipProvider.OnValidatingPassword%2A&gt;</ph> virtual method to raise the <ph id=\"ph2\">&lt;xref:System.Web.Security.MembershipProvider.ValidatingPassword&gt;</ph> event.","pos":[193,396],"source":" Provider implementers can use the <xref:System.Web.Security.MembershipProvider.OnValidatingPassword%2A> virtual method to raise the <xref:System.Web.Security.MembershipProvider.ValidatingPassword> event."}]}]}],"pos":[99351,100314],"yaml":true,"extradata":"MT"}],"content":"### YamlMime:ManagedReference\nitems:\n- uid: System.Web.Security.MembershipProvider\n  commentId: T:System.Web.Security.MembershipProvider\n  id: MembershipProvider\n  children:\n  - System.Web.Security.MembershipProvider.#ctor\n  - System.Web.Security.MembershipProvider.ApplicationName\n  - System.Web.Security.MembershipProvider.ChangePassword(System.String,System.String,System.String)\n  - System.Web.Security.MembershipProvider.ChangePasswordQuestionAndAnswer(System.String,System.String,System.String,System.String)\n  - System.Web.Security.MembershipProvider.CreateUser(System.String,System.String,System.String,System.String,System.String,System.Boolean,System.Object,System.Web.Security.MembershipCreateStatus@)\n  - System.Web.Security.MembershipProvider.DecryptPassword(System.Byte[])\n  - System.Web.Security.MembershipProvider.DeleteUser(System.String,System.Boolean)\n  - System.Web.Security.MembershipProvider.EnablePasswordReset\n  - System.Web.Security.MembershipProvider.EnablePasswordRetrieval\n  - System.Web.Security.MembershipProvider.EncryptPassword(System.Byte[])\n  - System.Web.Security.MembershipProvider.EncryptPassword(System.Byte[],System.Web.Configuration.MembershipPasswordCompatibilityMode)\n  - System.Web.Security.MembershipProvider.FindUsersByEmail(System.String,System.Int32,System.Int32,System.Int32@)\n  - System.Web.Security.MembershipProvider.FindUsersByName(System.String,System.Int32,System.Int32,System.Int32@)\n  - System.Web.Security.MembershipProvider.GetAllUsers(System.Int32,System.Int32,System.Int32@)\n  - System.Web.Security.MembershipProvider.GetNumberOfUsersOnline\n  - System.Web.Security.MembershipProvider.GetPassword(System.String,System.String)\n  - System.Web.Security.MembershipProvider.GetUser(System.String,System.Boolean)\n  - System.Web.Security.MembershipProvider.GetUser(System.Object,System.Boolean)\n  - System.Web.Security.MembershipProvider.GetUserNameByEmail(System.String)\n  - System.Web.Security.MembershipProvider.MaxInvalidPasswordAttempts\n  - System.Web.Security.MembershipProvider.MinRequiredNonAlphanumericCharacters\n  - System.Web.Security.MembershipProvider.MinRequiredPasswordLength\n  - System.Web.Security.MembershipProvider.OnValidatingPassword(System.Web.Security.ValidatePasswordEventArgs)\n  - System.Web.Security.MembershipProvider.PasswordAttemptWindow\n  - System.Web.Security.MembershipProvider.PasswordFormat\n  - System.Web.Security.MembershipProvider.PasswordStrengthRegularExpression\n  - System.Web.Security.MembershipProvider.RequiresQuestionAndAnswer\n  - System.Web.Security.MembershipProvider.RequiresUniqueEmail\n  - System.Web.Security.MembershipProvider.ResetPassword(System.String,System.String)\n  - System.Web.Security.MembershipProvider.UnlockUser(System.String)\n  - System.Web.Security.MembershipProvider.UpdateUser(System.Web.Security.MembershipUser)\n  - System.Web.Security.MembershipProvider.ValidateUser(System.String,System.String)\n  - System.Web.Security.MembershipProvider.ValidatingPassword\n  langs:\n  - csharp\n  name: MembershipProvider\n  nameWithType: MembershipProvider\n  fullName: System.Web.Security.MembershipProvider\n  type: Class\n  assemblies:\n  - System.Web.ApplicationServices\n  namespace: System.Web.Security\n  summary: Defines the contract that ASP.NET implements to provide membership services using custom membership providers.\n  remarks: \"ASP.NET membership is designed to enable you to easily use a number of different membership providers for your ASP.NET applications. You can use the supplied membership providers that are included with the .NET Framework, or you can implement your own provider.  \\n  \\n> [!NOTE]\\n>  If you are not familiar with the membership features of ASP.NET, see [Introduction to Membership](http://msdn.microsoft.com/library/79184d17-f4c7-4c9f-a073-cec4f5543980) before continuing. For a list of other topics related to membership, see [Managing Users by Using Membership](http://msdn.microsoft.com/library/824c3a24-f0af-427c-a652-0d2d1e9397cd).  \\n  \\n When implementing a custom membership provider, you are required to inherit the <xref:System.Web.Security.MembershipProvider> abstract class.  \\n  \\n There are two primary reasons for creating a custom membership provider.  \\n  \\n-   You need to store membership information in a data source that is not supported by the membership providers included with the .NET Framework, such as a FoxPro database, an Oracle database, or other data source.  \\n  \\n-   You need to manage membership information using a database schema that is different from the database schema used by the providers that ship with the .NET Framework. A common example of this would be membership data that already exists in a SQL Server database for a company or Web site.  \\n  \\n The <xref:System.Web.Security.MembershipProvider> abstract class inherits from the <xref:System.Configuration.Provider.ProviderBase> abstract class. <xref:System.Web.Security.MembershipProvider> implementations must also implement the required members of <xref:System.Configuration.Provider.ProviderBase>.\"\n  syntax:\n    content: 'public abstract class MembershipProvider : System.Configuration.Provider.ProviderBase'\n  inheritance:\n  - System.Object\n  - System.Configuration.Provider.ProviderBase\n  derivedClasses:\n  - System.Web.ClientServices.Providers.ClientFormsAuthenticationMembershipProvider\n  - System.Web.ClientServices.Providers.ClientWindowsAuthenticationMembershipProvider\n  - System.Web.Security.ActiveDirectoryMembershipProvider\n  - System.Web.Security.SqlMembershipProvider\n  implements: []\n  inheritedMembers:\n  - System.Configuration.Provider.ProviderBase.Description\n  - System.Configuration.Provider.ProviderBase.Initialize(System.String,System.Collections.Specialized.NameValueCollection)\n  - System.Configuration.Provider.ProviderBase.Name\n  - System.Object.Equals(System.Object)\n  - System.Object.Equals(System.Object,System.Object)\n  - System.Object.GetHashCode\n  - System.Object.GetType\n  - System.Object.MemberwiseClone\n  - System.Object.ReferenceEquals(System.Object,System.Object)\n  - System.Object.ToString\n  attributes: []\n  version:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Web.Security/MembershipProvider.xml\n  ms.technology:\n  - dotnet-webforms\n  author: tdykstra\n  ms.author: tdykstra\n  manager: wpickett\n- uid: System.Web.Security.MembershipProvider.#ctor\n  commentId: M:System.Web.Security.MembershipProvider.#ctor\n  id: '#ctor'\n  parent: System.Web.Security.MembershipProvider\n  langs:\n  - csharp\n  name: MembershipProvider()\n  nameWithType: MembershipProvider.MembershipProvider()\n  fullName: MembershipProvider.MembershipProvider()\n  type: Constructor\n  assemblies:\n  - System.Web.ApplicationServices\n  namespace: System.Web.Security\n  summary: Initializes a new instance of the <xref href=\"System.Web.Security.MembershipProvider\"></xref> class.\n  remarks: You are not required to implement a constructor for a class that inherits the <xref:System.Web.Security.MembershipProvider> abstract class. Initialization values for a <xref:System.Web.Security.MembershipProvider> implementation are passed to the <xref:System.Configuration.Provider.ProviderBase.Initialize%2A> method implementation.\n  syntax:\n    content: protected MembershipProvider ();\n    parameters: []\n  overload: System.Web.Security.MembershipProvider.#ctor*\n  exceptions: []\n  version:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Web.Security/MembershipProvider.xml\n  ms.technology:\n  - dotnet-webforms\n  author: tdykstra\n  ms.author: tdykstra\n  manager: wpickett\n- uid: System.Web.Security.MembershipProvider.ApplicationName\n  commentId: P:System.Web.Security.MembershipProvider.ApplicationName\n  id: ApplicationName\n  parent: System.Web.Security.MembershipProvider\n  langs:\n  - csharp\n  name: ApplicationName\n  nameWithType: MembershipProvider.ApplicationName\n  fullName: MembershipProvider.ApplicationName\n  type: Property\n  assemblies:\n  - System.Web.ApplicationServices\n  namespace: System.Web.Security\n  summary: The name of the application using the custom membership provider.\n  remarks: \"The <xref:System.Web.Security.MembershipProvider.ApplicationName%2A> property value is stored in the data source with related user information to associate a user with a particular application. This property is read/write and defaults to the <xref:System.Web.HttpRequest.ApplicationPath%2A> property value if not specified explicitly.  \\n  \\n Because membership providers store user information uniquely for each application, multiple ASP.NET applications can use the same data source without running into a conflict if duplicate user names are created. Alternatively, multiple ASP.NET applications can use the same user data source by specifying the same <xref:System.Web.Security.MembershipProvider.ApplicationName%2A>.  \\n  \\n In your membership provider implementation, you will need to ensure that your data schema includes the <xref:System.Web.Security.MembershipProvider.ApplicationName%2A> and that data source queries and updates also include the <xref:System.Web.Security.MembershipProvider.ApplicationName%2A>.\"\n  example:\n  - For an example of a <xref:System.Web.Security.MembershipProvider> implementation, see [Implementing a Profile Provider](http://msdn.microsoft.com/library/58de6e99-31a7-41b9-93ed-51b9b4a67e98).\n  syntax:\n    content: public abstract string ApplicationName { get; set; }\n    return:\n      type: System.String\n      description: The name of the application using the custom membership provider.\n  overload: System.Web.Security.MembershipProvider.ApplicationName*\n  exceptions: []\n  version:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Web.Security/MembershipProvider.xml\n  ms.technology:\n  - dotnet-webforms\n  author: tdykstra\n  ms.author: tdykstra\n  manager: wpickett\n- uid: System.Web.Security.MembershipProvider.ChangePassword(System.String,System.String,System.String)\n  commentId: M:System.Web.Security.MembershipProvider.ChangePassword(System.String,System.String,System.String)\n  id: ChangePassword(System.String,System.String,System.String)\n  parent: System.Web.Security.MembershipProvider\n  langs:\n  - csharp\n  name: ChangePassword(String, String, String)\n  nameWithType: MembershipProvider.ChangePassword(String, String, String)\n  fullName: MembershipProvider.ChangePassword(String, String, String)\n  type: Method\n  assemblies:\n  - System.Web.ApplicationServices\n  namespace: System.Web.Security\n  summary: Processes a request to update the password for a membership user.\n  remarks: Takes, as input, a user name, a current password, and a new password, and updates the password in the data source if the supplied user name and current password are valid.\n  example:\n  - For an example of a <xref:System.Web.Security.MembershipProvider> implementation, see [Implementing a Profile Provider](http://msdn.microsoft.com/library/58de6e99-31a7-41b9-93ed-51b9b4a67e98).\n  syntax:\n    content: public abstract bool ChangePassword (string username, string oldPassword, string newPassword);\n    parameters:\n    - id: username\n      type: System.String\n      description: The user to update the password for.\n    - id: oldPassword\n      type: System.String\n      description: The current password for the specified user.\n    - id: newPassword\n      type: System.String\n      description: The new password for the specified user.\n    return:\n      type: System.Boolean\n      description: '`true` if the password was updated successfully; otherwise, `false`.'\n  overload: System.Web.Security.MembershipProvider.ChangePassword*\n  exceptions: []\n  version:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Web.Security/MembershipProvider.xml\n  ms.technology:\n  - dotnet-webforms\n  author: tdykstra\n  ms.author: tdykstra\n  manager: wpickett\n- uid: System.Web.Security.MembershipProvider.ChangePasswordQuestionAndAnswer(System.String,System.String,System.String,System.String)\n  commentId: M:System.Web.Security.MembershipProvider.ChangePasswordQuestionAndAnswer(System.String,System.String,System.String,System.String)\n  id: ChangePasswordQuestionAndAnswer(System.String,System.String,System.String,System.String)\n  parent: System.Web.Security.MembershipProvider\n  langs:\n  - csharp\n  name: ChangePasswordQuestionAndAnswer(String, String, String, String)\n  nameWithType: MembershipProvider.ChangePasswordQuestionAndAnswer(String, String, String, String)\n  fullName: MembershipProvider.ChangePasswordQuestionAndAnswer(String, String, String, String)\n  type: Method\n  assemblies:\n  - System.Web.ApplicationServices\n  namespace: System.Web.Security\n  summary: Processes a request to update the password question and answer for a membership user.\n  remarks: \"Takes, as input, a user name, a password, a password question and a password answer, and updates the password question and answer in the data source if the supplied user name and password are valid.  \\n  \\n If the supplied user name and password are not valid, `false` is returned.\"\n  example:\n  - For an example of a <xref:System.Web.Security.MembershipProvider> implementation, see [Implementing a Profile Provider](http://msdn.microsoft.com/library/58de6e99-31a7-41b9-93ed-51b9b4a67e98).\n  syntax:\n    content: public abstract bool ChangePasswordQuestionAndAnswer (string username, string password, string newPasswordQuestion, string newPasswordAnswer);\n    parameters:\n    - id: username\n      type: System.String\n      description: The user to change the password question and answer for.\n    - id: password\n      type: System.String\n      description: The password for the specified user.\n    - id: newPasswordQuestion\n      type: System.String\n      description: The new password question for the specified user.\n    - id: newPasswordAnswer\n      type: System.String\n      description: The new password answer for the specified user.\n    return:\n      type: System.Boolean\n      description: '`true` if the password question and answer are updated successfully; otherwise, `false`.'\n  overload: System.Web.Security.MembershipProvider.ChangePasswordQuestionAndAnswer*\n  exceptions: []\n  version:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Web.Security/MembershipProvider.xml\n  ms.technology:\n  - dotnet-webforms\n  author: tdykstra\n  ms.author: tdykstra\n  manager: wpickett\n- uid: System.Web.Security.MembershipProvider.CreateUser(System.String,System.String,System.String,System.String,System.String,System.Boolean,System.Object,System.Web.Security.MembershipCreateStatus@)\n  commentId: M:System.Web.Security.MembershipProvider.CreateUser(System.String,System.String,System.String,System.String,System.String,System.Boolean,System.Object,System.Web.Security.MembershipCreateStatus@)\n  id: CreateUser(System.String,System.String,System.String,System.String,System.String,System.Boolean,System.Object,System.Web.Security.MembershipCreateStatus@)\n  parent: System.Web.Security.MembershipProvider\n  langs:\n  - csharp\n  name: CreateUser(String, String, String, String, String, Boolean, Object, MembershipCreateStatus)\n  nameWithType: MembershipProvider.CreateUser(String, String, String, String, String, Boolean, Object, MembershipCreateStatus)\n  fullName: MembershipProvider.CreateUser(String, String, String, String, String, Boolean, Object, MembershipCreateStatus)\n  type: Method\n  assemblies:\n  - System.Web.ApplicationServices\n  namespace: System.Web.Security\n  summary: Adds a new membership user to the data source.\n  remarks: \"Takes, as input, the name of a new user, a password, and an e-mail address and inserts a new user for the application into the data source. The <xref:System.Web.Security.MembershipProvider.CreateUser%2A> method returns a <xref:System.Web.Security.MembershipUser> object populated with the information for the newly created user. The <xref:System.Web.Security.MembershipProvider.CreateUser%2A> method also defines an `out` parameter (in Visual Basic, you can use `ByRef`) that returns a <xref:System.Web.Security.MembershipCreateStatus> value that indicates that the user was successfully created, or a reason that user creation failed.  \\n  \\n The <xref:System.Web.Security.MembershipProvider.CreateUser%2A> method raises the <xref:System.Web.Security.MembershipProvider.ValidatingPassword> event, if a <xref:System.Web.Security.MembershipValidatePasswordEventHandler> event handler has been specified, and continues or cancels the create-user action based on the results of the event. You can use the <xref:System.Web.Security.MembershipProvider.OnValidatingPassword%2A> virtual method to execute the specified <xref:System.Web.Security.MembershipValidatePasswordEventHandler> event handler.\"\n  example:\n  - For an example of a <xref:System.Web.Security.MembershipProvider> implementation, see [Implementing a Profile Provider](http://msdn.microsoft.com/library/58de6e99-31a7-41b9-93ed-51b9b4a67e98).\n  syntax:\n    content: public abstract System.Web.Security.MembershipUser CreateUser (string username, string password, string email, string passwordQuestion, string passwordAnswer, bool isApproved, object providerUserKey, out System.Web.Security.MembershipCreateStatus status);\n    parameters:\n    - id: username\n      type: System.String\n      description: The user name for the new user.\n    - id: password\n      type: System.String\n      description: The password for the new user.\n    - id: email\n      type: System.String\n      description: The e-mail address for the new user.\n    - id: passwordQuestion\n      type: System.String\n      description: The password question for the new user.\n    - id: passwordAnswer\n      type: System.String\n      description: The password answer for the new user\n    - id: isApproved\n      type: System.Boolean\n      description: Whether or not the new user is approved to be validated.\n    - id: providerUserKey\n      type: System.Object\n      description: The unique identifier from the membership data source for the user.\n    - id: status\n      type: System.Web.Security.MembershipCreateStatus\n      description: A <xref href=\"System.Web.Security.MembershipCreateStatus\"></xref> enumeration value indicating whether the user was created successfully.\n    return:\n      type: System.Web.Security.MembershipUser\n      description: A <xref href=\"System.Web.Security.MembershipUser\"></xref> object populated with the information for the newly created user.\n  overload: System.Web.Security.MembershipProvider.CreateUser*\n  exceptions: []\n  version:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Web.Security/MembershipProvider.xml\n  ms.technology:\n  - dotnet-webforms\n  author: tdykstra\n  ms.author: tdykstra\n  manager: wpickett\n- uid: System.Web.Security.MembershipProvider.DecryptPassword(System.Byte[])\n  commentId: M:System.Web.Security.MembershipProvider.DecryptPassword(System.Byte[])\n  id: DecryptPassword(System.Byte[])\n  parent: System.Web.Security.MembershipProvider\n  langs:\n  - csharp\n  name: DecryptPassword(Byte[])\n  nameWithType: MembershipProvider.DecryptPassword(Byte[])\n  fullName: MembershipProvider.DecryptPassword(Byte[])\n  type: Method\n  assemblies:\n  - System.Web.ApplicationServices\n  namespace: System.Web.Security\n  summary: Decrypts an encrypted password.\n  remarks: The <xref:System.Web.Security.MembershipProvider.DecryptPassword%2A> method is a virtual method that is provided for membership provider implementations to use when supporting encrypted password formats.\n  example:\n  - For an example of a <xref:System.Web.Security.MembershipProvider> implementation, see [Implementing a Profile Provider](http://msdn.microsoft.com/library/58de6e99-31a7-41b9-93ed-51b9b4a67e98).\n  syntax:\n    content: protected virtual byte[] DecryptPassword (byte[] encodedPassword);\n    parameters:\n    - id: encodedPassword\n      type: System.Byte[]\n      description: A byte array that contains the encrypted password to decrypt.\n    return:\n      type: System.Byte[]\n      description: A byte array that contains the decrypted password.\n  overload: System.Web.Security.MembershipProvider.DecryptPassword*\n  exceptions:\n  - type: System.Configuration.Provider.ProviderException\n    commentId: T:System.Configuration.Provider.ProviderException\n    description: The <xref href=\"System.Web.Configuration.MachineKeySection.ValidationKey\"></xref> property or <xref href=\"System.Web.Configuration.MachineKeySection.DecryptionKey\"></xref> property is set to `AutoGenerate`.\n  - type: System.PlatformNotSupportedException\n    commentId: T:System.PlatformNotSupportedException\n    description: This method is not available. This can occur if the application targets the [!INCLUDE[net_client_v40_long](~/includes/net-client-v40-long-md.md)]. To prevent this exception, override the method, or change the application to target the full version of the .NET Framework.\n  version:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Web.Security/MembershipProvider.xml\n  ms.technology:\n  - dotnet-webforms\n  author: tdykstra\n  ms.author: tdykstra\n  manager: wpickett\n- uid: System.Web.Security.MembershipProvider.DeleteUser(System.String,System.Boolean)\n  commentId: M:System.Web.Security.MembershipProvider.DeleteUser(System.String,System.Boolean)\n  id: DeleteUser(System.String,System.Boolean)\n  parent: System.Web.Security.MembershipProvider\n  langs:\n  - csharp\n  name: DeleteUser(String, Boolean)\n  nameWithType: MembershipProvider.DeleteUser(String, Boolean)\n  fullName: MembershipProvider.DeleteUser(String, Boolean)\n  type: Method\n  assemblies:\n  - System.Web.ApplicationServices\n  namespace: System.Web.Security\n  summary: Removes a user from the membership data source.\n  remarks: Takes, as input, the name of a user and deletes that user's information from the data source. If `deleteAllRelatedData` is `true`, then all user data stored in the database for the <xref:System.Web.Security.Roles>, <xref:System.Web.HttpContext.Profile%2A>, and <xref:System.Web.UI.WebControls.WebParts.WebPart> personalization is also deleted.\n  example:\n  - For an example of a <xref:System.Web.Security.MembershipProvider> implementation, see [Implementing a Profile Provider](http://msdn.microsoft.com/library/58de6e99-31a7-41b9-93ed-51b9b4a67e98).\n  syntax:\n    content: public abstract bool DeleteUser (string username, bool deleteAllRelatedData);\n    parameters:\n    - id: username\n      type: System.String\n      description: The name of the user to delete.\n    - id: deleteAllRelatedData\n      type: System.Boolean\n      description: '`true` to delete data related to the user from the database; `false` to leave data related to the user in the database.'\n    return:\n      type: System.Boolean\n      description: '`true` if the user was successfully deleted; otherwise, `false`.'\n  overload: System.Web.Security.MembershipProvider.DeleteUser*\n  exceptions: []\n  version:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Web.Security/MembershipProvider.xml\n  ms.technology:\n  - dotnet-webforms\n  author: tdykstra\n  ms.author: tdykstra\n  manager: wpickett\n- uid: System.Web.Security.MembershipProvider.EnablePasswordReset\n  commentId: P:System.Web.Security.MembershipProvider.EnablePasswordReset\n  id: EnablePasswordReset\n  parent: System.Web.Security.MembershipProvider\n  langs:\n  - csharp\n  name: EnablePasswordReset\n  nameWithType: MembershipProvider.EnablePasswordReset\n  fullName: MembershipProvider.EnablePasswordReset\n  type: Property\n  assemblies:\n  - System.Web.ApplicationServices\n  namespace: System.Web.Security\n  summary: Indicates whether the membership provider is configured to allow users to reset their passwords.\n  remarks: <xref:System.Web.Security.MembershipProvider.EnablePasswordReset%2A> contains a Boolean value specified in the configuration file (Web.config) using the `enablePasswordReset` attribute. The value indicates whether users can use the <xref:System.Web.Security.MembershipProvider.ResetPassword%2A> method to overwrite their current password with a new, randomly generated password. This property is read-only.\n  example:\n  - For an example of a <xref:System.Web.Security.MembershipProvider> implementation, see [Implementing a Profile Provider](http://msdn.microsoft.com/library/58de6e99-31a7-41b9-93ed-51b9b4a67e98).\n  syntax:\n    content: public abstract bool EnablePasswordReset { get; }\n    return:\n      type: System.Boolean\n      description: '`true` if the membership provider supports password reset; otherwise, `false`. The default is `true`.'\n  overload: System.Web.Security.MembershipProvider.EnablePasswordReset*\n  exceptions: []\n  version:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Web.Security/MembershipProvider.xml\n  ms.technology:\n  - dotnet-webforms\n  author: tdykstra\n  ms.author: tdykstra\n  manager: wpickett\n- uid: System.Web.Security.MembershipProvider.EnablePasswordRetrieval\n  commentId: P:System.Web.Security.MembershipProvider.EnablePasswordRetrieval\n  id: EnablePasswordRetrieval\n  parent: System.Web.Security.MembershipProvider\n  langs:\n  - csharp\n  name: EnablePasswordRetrieval\n  nameWithType: MembershipProvider.EnablePasswordRetrieval\n  fullName: MembershipProvider.EnablePasswordRetrieval\n  type: Property\n  assemblies:\n  - System.Web.ApplicationServices\n  namespace: System.Web.Security\n  summary: Indicates whether the membership provider is configured to allow users to retrieve their passwords.\n  remarks: \"The <xref:System.Web.Security.MembershipProvider.EnablePasswordRetrieval%2A> property contains a Boolean value specified in the configuration file (Web.config) using the `enablePasswordRetrieval` attribute. The value indicates whether users can use the <xref:System.Web.Security.MembershipProvider.GetPassword%2A> method to retrieve their current password from the data source. This property is read-only.  \\n  \\n If your custom membership provider supports hashed passwords, your <xref:System.Web.Security.MembershipProvider.GetPassword%2A> method implementation should throw an exception if <xref:System.Web.Security.MembershipProvider.EnablePasswordRetrieval%2A> is set to `true` and the password format is set to `Hashed`. Hashed passwords cannot be retrieved.\"\n  example:\n  - For an example of a <xref:System.Web.Security.MembershipProvider> implementation, see [Implementing a Profile Provider](http://msdn.microsoft.com/library/58de6e99-31a7-41b9-93ed-51b9b4a67e98).\n  syntax:\n    content: public abstract bool EnablePasswordRetrieval { get; }\n    return:\n      type: System.Boolean\n      description: '`true` if the membership provider is configured to support password retrieval; otherwise, `false`. The default is `false`.'\n  overload: System.Web.Security.MembershipProvider.EnablePasswordRetrieval*\n  exceptions: []\n  version:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Web.Security/MembershipProvider.xml\n  ms.technology:\n  - dotnet-webforms\n  author: tdykstra\n  ms.author: tdykstra\n  manager: wpickett\n- uid: System.Web.Security.MembershipProvider.EncryptPassword(System.Byte[])\n  commentId: M:System.Web.Security.MembershipProvider.EncryptPassword(System.Byte[])\n  id: EncryptPassword(System.Byte[])\n  parent: System.Web.Security.MembershipProvider\n  langs:\n  - csharp\n  name: EncryptPassword(Byte[])\n  nameWithType: MembershipProvider.EncryptPassword(Byte[])\n  fullName: MembershipProvider.EncryptPassword(Byte[])\n  type: Method\n  assemblies:\n  - System.Web.ApplicationServices\n  namespace: System.Web.Security\n  summary: Encrypts a password.\n  remarks: The <xref:System.Web.Security.MembershipProvider.EncryptPassword%2A> method is a virtual method that is provided for membership provider implementations to use when supporting encrypted password formats.\n  example:\n  - For an example of a <xref:System.Web.Security.MembershipProvider> implementation, see [Implementing a Profile Provider](http://msdn.microsoft.com/library/58de6e99-31a7-41b9-93ed-51b9b4a67e98).\n  syntax:\n    content: protected virtual byte[] EncryptPassword (byte[] password);\n    parameters:\n    - id: password\n      type: System.Byte[]\n      description: A byte array that contains the password to encrypt.\n    return:\n      type: System.Byte[]\n      description: A byte array that contains the encrypted password.\n  overload: System.Web.Security.MembershipProvider.EncryptPassword*\n  exceptions:\n  - type: System.Configuration.Provider.ProviderException\n    commentId: T:System.Configuration.Provider.ProviderException\n    description: The <xref href=\"System.Web.Configuration.MachineKeySection.ValidationKey\"></xref> property or <xref href=\"System.Web.Configuration.MachineKeySection.DecryptionKey\"></xref> property is set to `AutoGenerate`.\n  - type: System.PlatformNotSupportedException\n    commentId: T:System.PlatformNotSupportedException\n    description: This method is not available. This can occur if the application targets the [!INCLUDE[net_client_v40_long](~/includes/net-client-v40-long-md.md)]. To prevent this exception, override the method, or change the application to target the full version of the .NET Framework.\n  version:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Web.Security/MembershipProvider.xml\n  ms.technology:\n  - dotnet-webforms\n  author: tdykstra\n  ms.author: tdykstra\n  manager: wpickett\n- uid: System.Web.Security.MembershipProvider.EncryptPassword(System.Byte[],System.Web.Configuration.MembershipPasswordCompatibilityMode)\n  commentId: M:System.Web.Security.MembershipProvider.EncryptPassword(System.Byte[],System.Web.Configuration.MembershipPasswordCompatibilityMode)\n  id: EncryptPassword(System.Byte[],System.Web.Configuration.MembershipPasswordCompatibilityMode)\n  parent: System.Web.Security.MembershipProvider\n  langs:\n  - csharp\n  name: EncryptPassword(Byte[], MembershipPasswordCompatibilityMode)\n  nameWithType: MembershipProvider.EncryptPassword(Byte[], MembershipPasswordCompatibilityMode)\n  fullName: MembershipProvider.EncryptPassword(Byte[], MembershipPasswordCompatibilityMode)\n  type: Method\n  assemblies:\n  - System.Web.ApplicationServices\n  namespace: System.Web.Security\n  summary: Encrypts the specified password using the specified password-compatibility mode.\n  syntax:\n    content: protected virtual byte[] EncryptPassword (byte[] password, System.Web.Configuration.MembershipPasswordCompatibilityMode legacyPasswordCompatibilityMode);\n    parameters:\n    - id: password\n      type: System.Byte[]\n      description: A byte array that contains the password to encrypt.\n    - id: legacyPasswordCompatibilityMode\n      type: System.Web.Configuration.MembershipPasswordCompatibilityMode\n      description: The membership password-compatibility mode.\n    return:\n      type: System.Byte[]\n      description: A byte array that contains the encrypted password.\n  overload: System.Web.Security.MembershipProvider.EncryptPassword*\n  exceptions:\n  - type: System.Configuration.Provider.ProviderException\n    commentId: T:System.Configuration.Provider.ProviderException\n    description: The <xref href=\"System.Web.Configuration.MachineKeySection.ValidationKey\"></xref> property or <xref href=\"System.Web.Configuration.MachineKeySection.DecryptionKey\"></xref> property is set to `AutoGenerate`.\n  - type: System.PlatformNotSupportedException\n    commentId: T:System.PlatformNotSupportedException\n    description: This method is not available. This can occur if the application targets the [!INCLUDE[net_client_v40_long](~/includes/net-client-v40-long-md.md)]. To prevent this exception, override the method, or change the application to target the full version of the .NET Framework.\n  version:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Web.Security/MembershipProvider.xml\n  ms.technology:\n  - dotnet-webforms\n  author: tdykstra\n  ms.author: tdykstra\n  manager: wpickett\n- uid: System.Web.Security.MembershipProvider.FindUsersByEmail(System.String,System.Int32,System.Int32,System.Int32@)\n  commentId: M:System.Web.Security.MembershipProvider.FindUsersByEmail(System.String,System.Int32,System.Int32,System.Int32@)\n  id: FindUsersByEmail(System.String,System.Int32,System.Int32,System.Int32@)\n  parent: System.Web.Security.MembershipProvider\n  langs:\n  - csharp\n  name: FindUsersByEmail(String, Int32, Int32, Int32)\n  nameWithType: MembershipProvider.FindUsersByEmail(String, Int32, Int32, Int32)\n  fullName: MembershipProvider.FindUsersByEmail(String, Int32, Int32, Int32)\n  type: Method\n  assemblies:\n  - System.Web.ApplicationServices\n  namespace: System.Web.Security\n  summary: Gets a collection of membership users where the e-mail address contains the specified e-mail address to match.\n  remarks: \"<xref:System.Web.Security.MembershipProvider.FindUsersByEmail%2A> returns a list of membership users where the user's e-mail address matches the supplied `emailToMatch` for the configured <xref:System.Web.Security.MembershipProvider.ApplicationName%2A> property. If your data source supports additional search capabilities, such as wildcard characters, you can provide more extensive search capabilities for e-mail addresses.  \\n  \\n The results returned by <xref:System.Web.Security.MembershipProvider.FindUsersByEmail%2A> are constrained by the `pageIndex` and `pageSize` parameters. The `pageSize` parameter identifies the number of <xref:System.Web.Security.MembershipUser> objects to return in the <xref:System.Web.Security.MembershipUserCollection> collection. The `pageIndex` parameter identifies which page of results to return where 0 identifies the first page. The `totalRecords` parameter is an `out` parameter that is set to the total number of membership users that matched the `emailToMatch` value. For example, if 13 users were found where `emailToMatch` matched part of or the entire e-mail address, and the `pageIndex` value was 1 with a `pageSize` of 5, then the <xref:System.Web.Security.MembershipUserCollection> would contain the sixth through the tenth users returned. `totalRecords` would be set to 13.\"\n  example:\n  - For an example of a <xref:System.Web.Security.MembershipProvider> implementation, see [Implementing a Profile Provider](http://msdn.microsoft.com/library/58de6e99-31a7-41b9-93ed-51b9b4a67e98).\n  syntax:\n    content: public abstract System.Web.Security.MembershipUserCollection FindUsersByEmail (string emailToMatch, int pageIndex, int pageSize, out int totalRecords);\n    parameters:\n    - id: emailToMatch\n      type: System.String\n      description: The e-mail address to search for.\n    - id: pageIndex\n      type: System.Int32\n      description: The index of the page of results to return. <code>pageIndex</code> is zero-based.\n    - id: pageSize\n      type: System.Int32\n      description: The size of the page of results to return.\n    - id: totalRecords\n      type: System.Int32\n      description: The total number of matched users.\n    return:\n      type: System.Web.Security.MembershipUserCollection\n      description: A <xref href=\"System.Web.Security.MembershipUserCollection\"></xref> collection that contains a page of <code>pageSize</code><xref href=\"System.Web.Security.MembershipUser\"></xref> objects beginning at the page specified by <code>pageIndex</code>.\n  overload: System.Web.Security.MembershipProvider.FindUsersByEmail*\n  exceptions: []\n  version:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Web.Security/MembershipProvider.xml\n  ms.technology:\n  - dotnet-webforms\n  author: tdykstra\n  ms.author: tdykstra\n  manager: wpickett\n- uid: System.Web.Security.MembershipProvider.FindUsersByName(System.String,System.Int32,System.Int32,System.Int32@)\n  commentId: M:System.Web.Security.MembershipProvider.FindUsersByName(System.String,System.Int32,System.Int32,System.Int32@)\n  id: FindUsersByName(System.String,System.Int32,System.Int32,System.Int32@)\n  parent: System.Web.Security.MembershipProvider\n  langs:\n  - csharp\n  name: FindUsersByName(String, Int32, Int32, Int32)\n  nameWithType: MembershipProvider.FindUsersByName(String, Int32, Int32, Int32)\n  fullName: MembershipProvider.FindUsersByName(String, Int32, Int32, Int32)\n  type: Method\n  assemblies:\n  - System.Web.ApplicationServices\n  namespace: System.Web.Security\n  summary: Gets a collection of membership users where the user name contains the specified user name to match.\n  remarks: \"<xref:System.Web.Security.MembershipProvider.FindUsersByName%2A> returns a list of membership users where the user name matches the supplied `usernameToMatch` for the configured <xref:System.Web.Security.MembershipProvider.ApplicationName%2A> property. If your data source supports additional search capabilities, such as wildcard characters, you can provide more extensive search capabilities for user names.  \\n  \\n The results returned by <xref:System.Web.Security.MembershipProvider.FindUsersByName%2A> are constrained by the `pageIndex` and `pageSize` parameters. The `pageSize` parameter identifies the number of <xref:System.Web.Security.MembershipUser> objects to return in the <xref:System.Web.Security.MembershipUserCollection> collection. The `pageIndex` parameter identifies which page of results to return, where 0 identifies the first page. The `totalRecords` parameter is an `out` parameter that is set to the total number of membership users that matched the `usernameToMatch` value. For example, if 13 users were found where `usernameToMatch` matched part of or the entire user name, and the `pageIndex` value was 1 with a `pageSize` of 5, then the <xref:System.Web.Security.MembershipUserCollection> would contain the sixth through the tenth users returned. `totalRecords` would be set to 13.\"\n  example:\n  - For an example of a <xref:System.Web.Security.MembershipProvider> implementation, see [Implementing a Profile Provider](http://msdn.microsoft.com/library/58de6e99-31a7-41b9-93ed-51b9b4a67e98).\n  syntax:\n    content: public abstract System.Web.Security.MembershipUserCollection FindUsersByName (string usernameToMatch, int pageIndex, int pageSize, out int totalRecords);\n    parameters:\n    - id: usernameToMatch\n      type: System.String\n      description: The user name to search for.\n    - id: pageIndex\n      type: System.Int32\n      description: The index of the page of results to return. <code>pageIndex</code> is zero-based.\n    - id: pageSize\n      type: System.Int32\n      description: The size of the page of results to return.\n    - id: totalRecords\n      type: System.Int32\n      description: The total number of matched users.\n    return:\n      type: System.Web.Security.MembershipUserCollection\n      description: A <xref href=\"System.Web.Security.MembershipUserCollection\"></xref> collection that contains a page of <code>pageSize</code><xref href=\"System.Web.Security.MembershipUser\"></xref> objects beginning at the page specified by <code>pageIndex</code>.\n  overload: System.Web.Security.MembershipProvider.FindUsersByName*\n  exceptions: []\n  version:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Web.Security/MembershipProvider.xml\n  ms.technology:\n  - dotnet-webforms\n  author: tdykstra\n  ms.author: tdykstra\n  manager: wpickett\n- uid: System.Web.Security.MembershipProvider.GetAllUsers(System.Int32,System.Int32,System.Int32@)\n  commentId: M:System.Web.Security.MembershipProvider.GetAllUsers(System.Int32,System.Int32,System.Int32@)\n  id: GetAllUsers(System.Int32,System.Int32,System.Int32@)\n  parent: System.Web.Security.MembershipProvider\n  langs:\n  - csharp\n  name: GetAllUsers(Int32, Int32, Int32)\n  nameWithType: MembershipProvider.GetAllUsers(Int32, Int32, Int32)\n  fullName: MembershipProvider.GetAllUsers(Int32, Int32, Int32)\n  type: Method\n  assemblies:\n  - System.Web.ApplicationServices\n  namespace: System.Web.Security\n  summary: Gets a collection of all the users in the data source in pages of data.\n  remarks: \"<xref:System.Web.Security.MembershipProvider.GetAllUsers%2A> returns a list of all of the users from the data source for the configured <xref:System.Web.Security.MembershipProvider.ApplicationName%2A> property. Users are returned in alphabetical order by user name.  \\n  \\n The results returned by <xref:System.Web.Security.MembershipProvider.GetAllUsers%2A> are constrained by the `pageIndex` and `pageSize` parameters. The `pageSize` parameter identifies the number of <xref:System.Web.Security.MembershipUser> objects to return in the <xref:System.Web.Security.MembershipUserCollection> collection. The `pageIndex` parameter identifies which page of results to return, where 0 identifies the first page. The `totalRecords` parameter is an `out` parameter that is set to the total number of membership users in the database. For example, if there are 13 users in the database, and the `pageIndex` value was 1 with a `pageSize` of 5, then the <xref:System.Web.Security.MembershipUserCollection> would contain the sixth through the tenth users returned. `totalRecords` would be set to 13.\"\n  example:\n  - For an example of a <xref:System.Web.Security.MembershipProvider> implementation, see [Implementing a Profile Provider](http://msdn.microsoft.com/library/58de6e99-31a7-41b9-93ed-51b9b4a67e98).\n  syntax:\n    content: public abstract System.Web.Security.MembershipUserCollection GetAllUsers (int pageIndex, int pageSize, out int totalRecords);\n    parameters:\n    - id: pageIndex\n      type: System.Int32\n      description: The index of the page of results to return. <code>pageIndex</code> is zero-based.\n    - id: pageSize\n      type: System.Int32\n      description: The size of the page of results to return.\n    - id: totalRecords\n      type: System.Int32\n      description: The total number of matched users.\n    return:\n      type: System.Web.Security.MembershipUserCollection\n      description: A <xref href=\"System.Web.Security.MembershipUserCollection\"></xref> collection that contains a page of <code>pageSize</code><xref href=\"System.Web.Security.MembershipUser\"></xref> objects beginning at the page specified by <code>pageIndex</code>.\n  overload: System.Web.Security.MembershipProvider.GetAllUsers*\n  exceptions: []\n  version:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Web.Security/MembershipProvider.xml\n  ms.technology:\n  - dotnet-webforms\n  author: tdykstra\n  ms.author: tdykstra\n  manager: wpickett\n- uid: System.Web.Security.MembershipProvider.GetNumberOfUsersOnline\n  commentId: M:System.Web.Security.MembershipProvider.GetNumberOfUsersOnline\n  id: GetNumberOfUsersOnline\n  parent: System.Web.Security.MembershipProvider\n  langs:\n  - csharp\n  name: GetNumberOfUsersOnline()\n  nameWithType: MembershipProvider.GetNumberOfUsersOnline()\n  fullName: MembershipProvider.GetNumberOfUsersOnline()\n  type: Method\n  assemblies:\n  - System.Web.ApplicationServices\n  namespace: System.Web.Security\n  summary: Gets the number of users currently accessing the application.\n  remarks: Returns an integer value that is the count of all the users in the data source where the <xref:System.Web.Security.MembershipUser.LastActivityDate%2A> is greater than the current date and time minus the <xref:System.Web.Security.Membership.UserIsOnlineTimeWindow%2A>. The <xref:System.Web.Security.Membership.UserIsOnlineTimeWindow%2A> is a positive integer value specifying the number of minutes to use when determining whether a user is online.\n  example:\n  - For an example of a <xref:System.Web.Security.MembershipProvider> implementation, see [Implementing a Profile Provider](http://msdn.microsoft.com/library/58de6e99-31a7-41b9-93ed-51b9b4a67e98).\n  syntax:\n    content: public abstract int GetNumberOfUsersOnline ();\n    parameters: []\n    return:\n      type: System.Int32\n      description: The number of users currently accessing the application.\n  overload: System.Web.Security.MembershipProvider.GetNumberOfUsersOnline*\n  exceptions: []\n  version:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Web.Security/MembershipProvider.xml\n  ms.technology:\n  - dotnet-webforms\n  author: tdykstra\n  ms.author: tdykstra\n  manager: wpickett\n- uid: System.Web.Security.MembershipProvider.GetPassword(System.String,System.String)\n  commentId: M:System.Web.Security.MembershipProvider.GetPassword(System.String,System.String)\n  id: GetPassword(System.String,System.String)\n  parent: System.Web.Security.MembershipProvider\n  langs:\n  - csharp\n  name: GetPassword(String, String)\n  nameWithType: MembershipProvider.GetPassword(String, String)\n  fullName: MembershipProvider.GetPassword(String, String)\n  type: Method\n  assemblies:\n  - System.Web.ApplicationServices\n  namespace: System.Web.Security\n  summary: Gets the password for the specified user name from the data source.\n  remarks: \"Takes, as input, a user name and a password answer and retrieves the password for that user from the data source and returns the password as a string.  \\n  \\n The <xref:System.Web.Security.MembershipProvider.GetPassword%2A> method ensures that the <xref:System.Web.Security.MembershipProvider.EnablePasswordRetrieval%2A> flag is set to `true` before performing any action. If <xref:System.Web.Security.MembershipProvider.EnablePasswordRetrieval%2A> is `false`, a <xref:System.NotSupportedException> exception is thrown.  \\n  \\n <xref:System.Web.Security.MembershipProvider.GetPassword%2A> also checks the value of the <xref:System.Web.Security.MembershipProvider.RequiresQuestionAndAnswer%2A> property. If <xref:System.Web.Security.MembershipProvider.RequiresQuestionAndAnswer%2A> is `true`, <xref:System.Web.Security.MembershipProvider.GetPassword%2A> checks the value of the supplied answer parameter against the stored password answer in the data source. If they do not match, a <xref:System.Web.Security.MembershipPasswordException> exception is thrown.  \\n  \\n If your custom membership provider supports hashed passwords, the <xref:System.Web.Security.MembershipProvider.GetPassword%2A> method should throw an exception if the <xref:System.Web.Security.MembershipProvider.EnablePasswordRetrieval%2A> property is set to `true` and the password format is set to `Hashed`. Hashed passwords cannot be retrieved.\"\n  example:\n  - For an example of a <xref:System.Web.Security.MembershipProvider> implementation, see [Implementing a Profile Provider](http://msdn.microsoft.com/library/58de6e99-31a7-41b9-93ed-51b9b4a67e98).\n  syntax:\n    content: public abstract string GetPassword (string username, string answer);\n    parameters:\n    - id: username\n      type: System.String\n      description: The user to retrieve the password for.\n    - id: answer\n      type: System.String\n      description: The password answer for the user.\n    return:\n      type: System.String\n      description: The password for the specified user name.\n  overload: System.Web.Security.MembershipProvider.GetPassword*\n  exceptions: []\n  version:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Web.Security/MembershipProvider.xml\n  ms.technology:\n  - dotnet-webforms\n  author: tdykstra\n  ms.author: tdykstra\n  manager: wpickett\n- uid: System.Web.Security.MembershipProvider.GetUser(System.String,System.Boolean)\n  commentId: M:System.Web.Security.MembershipProvider.GetUser(System.String,System.Boolean)\n  id: GetUser(System.String,System.Boolean)\n  parent: System.Web.Security.MembershipProvider\n  langs:\n  - csharp\n  name: GetUser(String, Boolean)\n  nameWithType: MembershipProvider.GetUser(String, Boolean)\n  fullName: MembershipProvider.GetUser(String, Boolean)\n  type: Method\n  assemblies:\n  - System.Web.ApplicationServices\n  namespace: System.Web.Security\n  summary: Gets information from the data source for a user. Provides an option to update the last-activity date/time stamp for the user.\n  remarks: Takes, as input, a user name and a Boolean value indicating whether to update the <xref:System.Web.Security.MembershipUser.LastActivityDate%2A> property value for the user to show that the user is currently online. <xref:System.Web.Security.MembershipProvider.GetUser%2A> returns a <xref:System.Web.Security.MembershipUser> object populated with current values from the data source for the specified user. If the user name is not found in the data source, <xref:System.Web.Security.MembershipProvider.GetUser%2A> returns `null`.\n  example:\n  - For an example of a <xref:System.Web.Security.MembershipProvider> implementation, see [Implementing a Profile Provider](http://msdn.microsoft.com/library/58de6e99-31a7-41b9-93ed-51b9b4a67e98).\n  syntax:\n    content: public abstract System.Web.Security.MembershipUser GetUser (string username, bool userIsOnline);\n    parameters:\n    - id: username\n      type: System.String\n      description: The name of the user to get information for.\n    - id: userIsOnline\n      type: System.Boolean\n      description: '`true` to update the last-activity date/time stamp for the user; `false` to return user information without updating the last-activity date/time stamp for the user.'\n    return:\n      type: System.Web.Security.MembershipUser\n      description: A <xref href=\"System.Web.Security.MembershipUser\"></xref> object populated with the specified user's information from the data source.\n  overload: System.Web.Security.MembershipProvider.GetUser*\n  exceptions: []\n  version:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Web.Security/MembershipProvider.xml\n  ms.technology:\n  - dotnet-webforms\n  author: tdykstra\n  ms.author: tdykstra\n  manager: wpickett\n- uid: System.Web.Security.MembershipProvider.GetUser(System.Object,System.Boolean)\n  commentId: M:System.Web.Security.MembershipProvider.GetUser(System.Object,System.Boolean)\n  id: GetUser(System.Object,System.Boolean)\n  parent: System.Web.Security.MembershipProvider\n  langs:\n  - csharp\n  name: GetUser(Object, Boolean)\n  nameWithType: MembershipProvider.GetUser(Object, Boolean)\n  fullName: MembershipProvider.GetUser(Object, Boolean)\n  type: Method\n  assemblies:\n  - System.Web.ApplicationServices\n  namespace: System.Web.Security\n  summary: Gets user information from the data source based on the unique identifier for the membership user. Provides an option to update the last-activity date/time stamp for the user.\n  remarks: Takes, as input, a unique identifier for a user record and a Boolean value indicating whether to update the <xref:System.Web.Security.MembershipUser.LastActivityDate%2A> value for the user to show that the user is currently online. The <xref:System.Web.Security.MembershipProvider.GetUser%2A> method returns a <xref:System.Web.Security.MembershipUser> object populated with current values from the data source for the specified user. If the user name is not found in the data source, <xref:System.Web.Security.MembershipProvider.GetUser%2A> returns `null`.\n  example:\n  - For an example of a <xref:System.Web.Security.MembershipProvider> implementation, see [Implementing a Profile Provider](http://msdn.microsoft.com/library/58de6e99-31a7-41b9-93ed-51b9b4a67e98).\n  syntax:\n    content: public abstract System.Web.Security.MembershipUser GetUser (object providerUserKey, bool userIsOnline);\n    parameters:\n    - id: providerUserKey\n      type: System.Object\n      description: The unique identifier for the membership user to get information for.\n    - id: userIsOnline\n      type: System.Boolean\n      description: '`true` to update the last-activity date/time stamp for the user; `false` to return user information without updating the last-activity date/time stamp for the user.'\n    return:\n      type: System.Web.Security.MembershipUser\n      description: A <xref href=\"System.Web.Security.MembershipUser\"></xref> object populated with the specified user's information from the data source.\n  overload: System.Web.Security.MembershipProvider.GetUser*\n  exceptions: []\n  version:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Web.Security/MembershipProvider.xml\n  ms.technology:\n  - dotnet-webforms\n  author: tdykstra\n  ms.author: tdykstra\n  manager: wpickett\n- uid: System.Web.Security.MembershipProvider.GetUserNameByEmail(System.String)\n  commentId: M:System.Web.Security.MembershipProvider.GetUserNameByEmail(System.String)\n  id: GetUserNameByEmail(System.String)\n  parent: System.Web.Security.MembershipProvider\n  langs:\n  - csharp\n  name: GetUserNameByEmail(String)\n  nameWithType: MembershipProvider.GetUserNameByEmail(String)\n  fullName: MembershipProvider.GetUserNameByEmail(String)\n  type: Method\n  assemblies:\n  - System.Web.ApplicationServices\n  namespace: System.Web.Security\n  summary: Gets the user name associated with the specified e-mail address.\n  remarks: \"Takes, as input, an e-mail address and returns the first user name from the data source where the e-mail address matches the supplied `email` parameter value.  \\n  \\n If no user name is found with a matching e-mail address, `null` is returned.  \\n  \\n If multiple user names are found that match a particular e-mail address, only the first user name found should be returned. You can implement a custom mechanism for ensuring a unique e-mail address for each user name such as the <xref:System.Web.Security.SqlMembershipProvider.RequiresUniqueEmail%2A> property supported by the <xref:System.Web.Security.SqlMembershipProvider> provider.\"\n  example:\n  - For an example of a <xref:System.Web.Security.MembershipProvider> implementation, see [Implementing a Profile Provider](http://msdn.microsoft.com/library/58de6e99-31a7-41b9-93ed-51b9b4a67e98).\n  syntax:\n    content: public abstract string GetUserNameByEmail (string email);\n    parameters:\n    - id: email\n      type: System.String\n      description: The e-mail address to search for.\n    return:\n      type: System.String\n      description: The user name associated with the specified e-mail address. If no match is found, return `null`.\n  overload: System.Web.Security.MembershipProvider.GetUserNameByEmail*\n  exceptions: []\n  version:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Web.Security/MembershipProvider.xml\n  ms.technology:\n  - dotnet-webforms\n  author: tdykstra\n  ms.author: tdykstra\n  manager: wpickett\n- uid: System.Web.Security.MembershipProvider.MaxInvalidPasswordAttempts\n  commentId: P:System.Web.Security.MembershipProvider.MaxInvalidPasswordAttempts\n  id: MaxInvalidPasswordAttempts\n  parent: System.Web.Security.MembershipProvider\n  langs:\n  - csharp\n  name: MaxInvalidPasswordAttempts\n  nameWithType: MembershipProvider.MaxInvalidPasswordAttempts\n  fullName: MembershipProvider.MaxInvalidPasswordAttempts\n  type: Property\n  assemblies:\n  - System.Web.ApplicationServices\n  namespace: System.Web.Security\n  summary: Gets the number of invalid password or password-answer attempts allowed before the membership user is locked out.\n  remarks: \"The <xref:System.Web.Security.Membership.MaxInvalidPasswordAttempts%2A> property works in conjunction with the <xref:System.Web.Security.Membership.PasswordAttemptWindow%2A> property to guard against an unwanted source guessing the password or password answer of a membership user through repeated attempts. If the number of invalid passwords or password questions supplied for a membership user is greater than or equal to the <xref:System.Web.Security.Membership.MaxInvalidPasswordAttempts%2A> property value within the number of minutes identified by the <xref:System.Web.Security.Membership.PasswordAttemptWindow%2A>, then the membership user is locked out by setting the <xref:System.Web.Security.MembershipUser.IsLockedOut%2A> property to `true` until the user is unlocked by a call to the <xref:System.Web.Security.MembershipUser.UnlockUser%2A> method. If a valid password or password answer is supplied before the <xref:System.Web.Security.Membership.MaxInvalidPasswordAttempts%2A> value is reached, the counter that tracks the number of invalid attempts is reset to zero.  \\n  \\n Invalid password and password-answer attempts accumulate independently of one another. For example, if the <xref:System.Web.Security.Membership.MaxInvalidPasswordAttempts%2A> property is set to 5, and three invalid password attempts are made followed by two invalid password-answer attempts, two more invalid password attempts (or three more invalid password-answer attempts) must be made within the <xref:System.Web.Security.Membership.PasswordAttemptWindow%2A> for the membership user to be locked out.  \\n  \\n If the <xref:System.Web.Security.Membership.RequiresQuestionAndAnswer%2A> property is set to `false`, invalid password-answer attempts are not tracked.  \\n  \\n Invalid password and password-answer attempts are tracked in the <xref:System.Web.Security.MembershipProvider.ValidateUser%2A>, <xref:System.Web.Security.MembershipProvider.ChangePassword%2A>, <xref:System.Web.Security.MembershipProvider.ChangePasswordQuestionAndAnswer%2A>, <xref:System.Web.Security.MembershipProvider.GetPassword%2A>, and <xref:System.Web.Security.MembershipProvider.ResetPassword%2A> methods.\"\n  example:\n  - For an example of a <xref:System.Web.Security.MembershipProvider> implementation, see [Implementing a Profile Provider](http://msdn.microsoft.com/library/58de6e99-31a7-41b9-93ed-51b9b4a67e98).\n  syntax:\n    content: public abstract int MaxInvalidPasswordAttempts { get; }\n    return:\n      type: System.Int32\n      description: The number of invalid password or password-answer attempts allowed before the membership user is locked out.\n  overload: System.Web.Security.MembershipProvider.MaxInvalidPasswordAttempts*\n  exceptions: []\n  version:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Web.Security/MembershipProvider.xml\n  ms.technology:\n  - dotnet-webforms\n  author: tdykstra\n  ms.author: tdykstra\n  manager: wpickett\n- uid: System.Web.Security.MembershipProvider.MinRequiredNonAlphanumericCharacters\n  commentId: P:System.Web.Security.MembershipProvider.MinRequiredNonAlphanumericCharacters\n  id: MinRequiredNonAlphanumericCharacters\n  parent: System.Web.Security.MembershipProvider\n  langs:\n  - csharp\n  name: MinRequiredNonAlphanumericCharacters\n  nameWithType: MembershipProvider.MinRequiredNonAlphanumericCharacters\n  fullName: MembershipProvider.MinRequiredNonAlphanumericCharacters\n  type: Property\n  assemblies:\n  - System.Web.ApplicationServices\n  namespace: System.Web.Security\n  summary: Gets the minimum number of special characters that must be present in a valid password.\n  remarks: \"The <xref:System.Web.Security.MembershipProvider.MinRequiredNonAlphanumericCharacters%2A> property returns the minimum number of special, non-alphabetic characters that must be entered to create a valid password for the <xref:System.Web.Security.MembershipProvider> object.  \\n  \\n The <xref:System.Web.Security.MembershipProvider.MinRequiredNonAlphanumericCharacters%2A> property value is set in the application configuration using the `minRequiredNonalphanumericCharacters` attribute of the [membership Element (ASP.NET Settings Schema)](http://msdn.microsoft.com/en-us/b9c1ee8f-33ca-4361-8666-b42a0fe86049) configuration element.  \\n  \\n A non-alphanumeric character is a character for which the <xref:System.Char.IsLetterOrDigit%2A> method returns `false`.\"\n  example:\n  - \"The following example shows the [membership Element (ASP.NET Settings Schema)](http://msdn.microsoft.com/en-us/b9c1ee8f-33ca-4361-8666-b42a0fe86049) configuration element in the `system.web` section of the application's Web.config file. It specifies that the application use an instance of the <xref:System.Web.Security.SqlMembershipProvider> class to provide membership services, and sets the `minRequiredNonalphanumericCharacters` attribute to 1 character.  \\n  \\n```  \\n<membership>  \\n  <providers>  \\n    <clear/>  \\n    <add name=\\\"AspNetSqlMembershipProvider\\\"   \\n      type=\\\"System.Web.Security.SqlMembershipProvider\\\"   \\n      connectionStringName=\\\"ApplicationServices\\\"   \\n      enablePasswordRetrieval=\\\"false\\\"   \\n      enablePasswordReset=\\\"true\\\"   \\n      requiresQuestionAndAnswer=\\\"false\\\"   \\n      requiresUniqueEmail=\\\"false\\\"   \\n      maxInvalidPasswordAttempts=\\\"5\\\"   \\n      minRequiredPasswordLength=\\\"6\\\"   \\n      minRequiredNonalphanumericCharacters=\\\"1\\\"   \\n      passwordAttemptWindow=\\\"10\\\"   \\n      applicationName=\\\"/\\\"/>  \\n  </providers>  \\n</membership>  \\n```\"\n  syntax:\n    content: public abstract int MinRequiredNonAlphanumericCharacters { get; }\n    return:\n      type: System.Int32\n      description: The minimum number of special characters that must be present in a valid password.\n  overload: System.Web.Security.MembershipProvider.MinRequiredNonAlphanumericCharacters*\n  exceptions: []\n  version:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Web.Security/MembershipProvider.xml\n  ms.technology:\n  - dotnet-webforms\n  author: tdykstra\n  ms.author: tdykstra\n  manager: wpickett\n- uid: System.Web.Security.MembershipProvider.MinRequiredPasswordLength\n  commentId: P:System.Web.Security.MembershipProvider.MinRequiredPasswordLength\n  id: MinRequiredPasswordLength\n  parent: System.Web.Security.MembershipProvider\n  langs:\n  - csharp\n  name: MinRequiredPasswordLength\n  nameWithType: MembershipProvider.MinRequiredPasswordLength\n  fullName: MembershipProvider.MinRequiredPasswordLength\n  type: Property\n  assemblies:\n  - System.Web.ApplicationServices\n  namespace: System.Web.Security\n  summary: Gets the minimum length required for a password.\n  remarks: \"The <xref:System.Web.Security.MembershipProvider.MinRequiredPasswordLength%2A> property gets the minimum number of characters that must be entered to create a valid password for the <xref:System.Web.Security.MembershipProvider> object.  \\n  \\n The <xref:System.Web.Security.MembershipProvider.MinRequiredPasswordLength%2A> property value is set in the application configuration using the `minRequiredPasswordLength` attribute of the [membership Element (ASP.NET Settings Schema)](http://msdn.microsoft.com/en-us/b9c1ee8f-33ca-4361-8666-b42a0fe86049) configuration element.\"\n  example:\n  - \"The following example shows the [membership Element (ASP.NET Settings Schema)](http://msdn.microsoft.com/en-us/b9c1ee8f-33ca-4361-8666-b42a0fe86049) configuration element in the `system.web` section of the application's Web.config file. It specifies that the application use an instance of the <xref:System.Web.Security.SqlMembershipProvider> class to provide membership services, and sets the `minRequiredPasswordLength` attribute to seven characters.  \\n  \\n```  \\n<membership defaultProvider=\\\"SqlProvider\\\"  \\n  userIsOnlineTimeWindow = \\\"20>  \\n  <providers>  \\n    <add  \\n      name=\\\"SqlProvider\\\"  \\n      type=\\\"System.Web.Security.SqlMembershipProvider\\\"  \\n      connectionStringName=\\\"SqlServices\\\"  \\n      requiresQuestionAndAnswer=\\\"true\\\"  \\n      minRequiredPasswordLength=\\\"7\\\"  \\n      />  \\n  </providers>  \\n</membership>  \\n```\"\n  syntax:\n    content: public abstract int MinRequiredPasswordLength { get; }\n    return:\n      type: System.Int32\n      description: The minimum length required for a password.\n  overload: System.Web.Security.MembershipProvider.MinRequiredPasswordLength*\n  exceptions: []\n  version:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Web.Security/MembershipProvider.xml\n  ms.technology:\n  - dotnet-webforms\n  author: tdykstra\n  ms.author: tdykstra\n  manager: wpickett\n- uid: System.Web.Security.MembershipProvider.OnValidatingPassword(System.Web.Security.ValidatePasswordEventArgs)\n  commentId: M:System.Web.Security.MembershipProvider.OnValidatingPassword(System.Web.Security.ValidatePasswordEventArgs)\n  id: OnValidatingPassword(System.Web.Security.ValidatePasswordEventArgs)\n  parent: System.Web.Security.MembershipProvider\n  langs:\n  - csharp\n  name: OnValidatingPassword(ValidatePasswordEventArgs)\n  nameWithType: MembershipProvider.OnValidatingPassword(ValidatePasswordEventArgs)\n  fullName: MembershipProvider.OnValidatingPassword(ValidatePasswordEventArgs)\n  type: Method\n  assemblies:\n  - System.Web.ApplicationServices\n  namespace: System.Web.Security\n  summary: Raises the <xref href=\"System.Web.Security.MembershipProvider.ValidatingPassword\"></xref> event if an event handler has been defined.\n  remarks: The <xref:System.Web.Security.MembershipProvider.OnValidatingPassword%2A> virtual method is used during the <xref:System.Web.Security.MembershipProvider.CreateUser%2A>, <xref:System.Web.Security.MembershipProvider.ChangePassword%2A>, and <xref:System.Web.Security.MembershipProvider.ResetPassword%2A> methods to raise the <xref:System.Web.Security.MembershipProvider.ValidatingPassword> event if a <xref:System.Web.Security.MembershipValidatePasswordEventHandler> has been specified. The `e` parameter is used to pass a <xref:System.Web.Security.ValidatePasswordEventArgs> object to the <xref:System.Web.Security.MembershipValidatePasswordEventHandler> event handler. When the <xref:System.Web.Security.MembershipProvider.ValidatingPassword> event has completed, the properties of the <xref:System.Web.Security.ValidatePasswordEventArgs> object supplied as the `e` parameter can be examined to determine whether the current action should be canceled and if a particular <xref:System.Exception>, stored in the <xref:System.Web.Security.ValidatePasswordEventArgs.FailureInformation%2A> property, should be thrown.\n  example:\n  - For an example of a <xref:System.Web.Security.MembershipProvider> implementation, see [Implementing a Profile Provider](http://msdn.microsoft.com/library/58de6e99-31a7-41b9-93ed-51b9b4a67e98).\n  syntax:\n    content: protected virtual void OnValidatingPassword (System.Web.Security.ValidatePasswordEventArgs e);\n    parameters:\n    - id: e\n      type: System.Web.Security.ValidatePasswordEventArgs\n      description: The <xref href=\"System.Web.Security.ValidatePasswordEventArgs\"></xref> to pass to the <xref href=\"System.Web.Security.MembershipProvider.ValidatingPassword\"></xref> event handler.\n  overload: System.Web.Security.MembershipProvider.OnValidatingPassword*\n  exceptions: []\n  version:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Web.Security/MembershipProvider.xml\n  ms.technology:\n  - dotnet-webforms\n  author: tdykstra\n  ms.author: tdykstra\n  manager: wpickett\n- uid: System.Web.Security.MembershipProvider.PasswordAttemptWindow\n  commentId: P:System.Web.Security.MembershipProvider.PasswordAttemptWindow\n  id: PasswordAttemptWindow\n  parent: System.Web.Security.MembershipProvider\n  langs:\n  - csharp\n  name: PasswordAttemptWindow\n  nameWithType: MembershipProvider.PasswordAttemptWindow\n  fullName: MembershipProvider.PasswordAttemptWindow\n  type: Property\n  assemblies:\n  - System.Web.ApplicationServices\n  namespace: System.Web.Security\n  summary: Gets the number of minutes in which a maximum number of invalid password or password-answer attempts are allowed before the membership user is locked out.\n  remarks: \"The <xref:System.Web.Security.Membership.PasswordAttemptWindow%2A> property works in conjunction with the <xref:System.Web.Security.Membership.MaxInvalidPasswordAttempts%2A> property to guard against an unwanted source guessing the password or password answer of a membership user through repeated attempts. If the number of invalid passwords or password questions supplied for a membership user exceeds the <xref:System.Web.Security.Membership.MaxInvalidPasswordAttempts%2A> within the number of minutes identified by the <xref:System.Web.Security.Membership.PasswordAttemptWindow%2A>, then the membership user is locked out by setting the <xref:System.Web.Security.MembershipUser.IsLockedOut%2A> property to `true` until the user is unlocked by a call to the <xref:System.Web.Security.MembershipUser.UnlockUser%2A> method. If a valid password or password answer is supplied before the <xref:System.Web.Security.Membership.MaxInvalidPasswordAttempts%2A> is reached, the counter that tracks the number of invalid attempts is reset to zero.  \\n  \\n Invalid password and password-answer attempts accumulate independently of one another. For example, if the <xref:System.Web.Security.Membership.MaxInvalidPasswordAttempts%2A> property is set to 5, and three invalid password attempts are made followed by two invalid password-answer attempts, two more invalid password attempts (or three more invalid password-answer attempts) must be made within the <xref:System.Web.Security.Membership.PasswordAttemptWindow%2A> value for the membership user to be locked out.  \\n  \\n If the <xref:System.Web.Security.Membership.RequiresQuestionAndAnswer%2A> property is set to `false`, invalid password-answer attempts are not tracked.  \\n  \\n Invalid password and password-answer attempts are tracked in the <xref:System.Web.Security.MembershipProvider.ValidateUser%2A>, <xref:System.Web.Security.MembershipProvider.ChangePassword%2A>, <xref:System.Web.Security.MembershipProvider.ChangePasswordQuestionAndAnswer%2A>, <xref:System.Web.Security.MembershipProvider.GetPassword%2A>, and <xref:System.Web.Security.MembershipProvider.ResetPassword%2A> methods.\"\n  example:\n  - For an example of a <xref:System.Web.Security.MembershipProvider> implementation, see [Implementing a Profile Provider](http://msdn.microsoft.com/library/58de6e99-31a7-41b9-93ed-51b9b4a67e98).\n  syntax:\n    content: public abstract int PasswordAttemptWindow { get; }\n    return:\n      type: System.Int32\n      description: The number of minutes in which a maximum number of invalid password or password-answer attempts are allowed before the membership user is locked out.\n  overload: System.Web.Security.MembershipProvider.PasswordAttemptWindow*\n  exceptions: []\n  version:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Web.Security/MembershipProvider.xml\n  ms.technology:\n  - dotnet-webforms\n  author: tdykstra\n  ms.author: tdykstra\n  manager: wpickett\n- uid: System.Web.Security.MembershipProvider.PasswordFormat\n  commentId: P:System.Web.Security.MembershipProvider.PasswordFormat\n  id: PasswordFormat\n  parent: System.Web.Security.MembershipProvider\n  langs:\n  - csharp\n  name: PasswordFormat\n  nameWithType: MembershipProvider.PasswordFormat\n  fullName: MembershipProvider.PasswordFormat\n  type: Property\n  assemblies:\n  - System.Web.ApplicationServices\n  namespace: System.Web.Security\n  summary: Gets a value indicating the format for storing passwords in the membership data store.\n  remarks: \"The <xref:System.Web.Security.MembershipProvider.PasswordFormat%2A> property indicates the format that passwords are stored in. Use `Hashed` only, `Clear` and `Encrypted` are not secure. `Hashed` passwords are hashed using a one-way hash algorithm and a randomly generated salt value when stored in the database. When a password is validated, it is hashed with the salt value in the database for verification. Hashed passwords cannot be retrieved. `Encrypted` passwords are not considered safe, as a breach that reveals your database contents can also expose the encryption key. This means your encrypted passwords could be decrypted and exposed.  \\n  \\n You can use the <xref:System.Web.Security.MembershipProvider.EncryptPassword%2A> and <xref:System.Web.Security.MembershipProvider.DecryptPassword%2A> virtual methods of the <xref:System.Web.Security.MembershipProvider> class to encrypt and decrypt password values, or you can supply your own encryption code. If you use the <xref:System.Web.Security.MembershipProvider.EncryptPassword%2A> and <xref:System.Web.Security.MembershipProvider.DecryptPassword%2A> virtual methods of the <xref:System.Web.Security.MembershipProvider> class, `Encrypted` passwords are encrypted using the key information supplied in the [machineKey Element (ASP.NET Settings Schema)](http://msdn.microsoft.com/en-us/4b5699a9-bc21-4c4a-85f1-8b3b8ebd2d46) element in your configuration.\"\n  example:\n  - For an example of a <xref:System.Web.Security.MembershipProvider> implementation, see [Implementing a Profile Provider](http://msdn.microsoft.com/library/58de6e99-31a7-41b9-93ed-51b9b4a67e98).\n  syntax:\n    content: public abstract System.Web.Security.MembershipPasswordFormat PasswordFormat { get; }\n    return:\n      type: System.Web.Security.MembershipPasswordFormat\n      description: One of the <xref href=\"System.Web.Security.MembershipPasswordFormat\"></xref> values indicating the format for storing passwords in the data store.\n  overload: System.Web.Security.MembershipProvider.PasswordFormat*\n  exceptions: []\n  version:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Web.Security/MembershipProvider.xml\n  ms.technology:\n  - dotnet-webforms\n  author: tdykstra\n  ms.author: tdykstra\n  manager: wpickett\n- uid: System.Web.Security.MembershipProvider.PasswordStrengthRegularExpression\n  commentId: P:System.Web.Security.MembershipProvider.PasswordStrengthRegularExpression\n  id: PasswordStrengthRegularExpression\n  parent: System.Web.Security.MembershipProvider\n  langs:\n  - csharp\n  name: PasswordStrengthRegularExpression\n  nameWithType: MembershipProvider.PasswordStrengthRegularExpression\n  fullName: MembershipProvider.PasswordStrengthRegularExpression\n  type: Property\n  assemblies:\n  - System.Web.ApplicationServices\n  namespace: System.Web.Security\n  summary: Gets the regular expression used to evaluate a password.\n  remarks: \"The <xref:System.Web.Security.MembershipProvider.PasswordStrengthRegularExpression%2A> property gets the regular expression used to evaluate password complexity for the <xref:System.Web.Security.MembershipProvider> object.  \\n  \\n The <xref:System.Web.Security.MembershipProvider.PasswordStrengthRegularExpression%2A> property is set in the application configuration using the `passwordStrengthRegularExpression` attribute of the [membership Element (ASP.NET Settings Schema)](http://msdn.microsoft.com/en-us/b9c1ee8f-33ca-4361-8666-b42a0fe86049) configuration element.\"\n  example:\n  - \"The following example shows the [membership Element (ASP.NET Settings Schema)](http://msdn.microsoft.com/en-us/b9c1ee8f-33ca-4361-8666-b42a0fe86049) configuration element in the `system.web` section of the application's Web.config file. It specifies that the application use an instance of the <xref:System.Web.Security.SqlMembershipProvider> class to provide membership services, and sets the `passwordStrengthRegularExpression` attribute to a regular expression that validates that the password meets the following criteria:  \\n  \\n-   Is greater than seven characters.  \\n  \\n-   Contains at least one digit.  \\n  \\n-   Contains at least one special (non-alphanumeric) character.  \\n  \\n If the password does not meet these criteria, the password is not accepted by the membership provider.  \\n  \\n```  \\n<membership defaultProvider=\\\"SqlProvider\\\"  \\n  userIsOnlineTimeWindow = \\\"20>  \\n  <providers>  \\n    <add  \\n      name=\\\"SqlProvider\\\"  \\n      type=\\\"System.Web.Security.SqlMembershipProvider\\\"  \\n      connectionStringName=\\\"SqlServices\\\"  \\n      requiresQuestionAndAnswer=\\\"true\\\"  \\n      passwordStrengthRegularExpression=\\\"@\\\\\\\"(?=.{6,})(?=(.*\\\\d){1,})(?=(.*\\\\W){1,})\\\"  \\n      />  \\n  </providers>  \\n</membership>  \\n```\"\n  syntax:\n    content: public abstract string PasswordStrengthRegularExpression { get; }\n    return:\n      type: System.String\n      description: A regular expression used to evaluate a password.\n  overload: System.Web.Security.MembershipProvider.PasswordStrengthRegularExpression*\n  exceptions: []\n  version:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Web.Security/MembershipProvider.xml\n  ms.technology:\n  - dotnet-webforms\n  author: tdykstra\n  ms.author: tdykstra\n  manager: wpickett\n- uid: System.Web.Security.MembershipProvider.RequiresQuestionAndAnswer\n  commentId: P:System.Web.Security.MembershipProvider.RequiresQuestionAndAnswer\n  id: RequiresQuestionAndAnswer\n  parent: System.Web.Security.MembershipProvider\n  langs:\n  - csharp\n  name: RequiresQuestionAndAnswer\n  nameWithType: MembershipProvider.RequiresQuestionAndAnswer\n  fullName: MembershipProvider.RequiresQuestionAndAnswer\n  type: Property\n  assemblies:\n  - System.Web.ApplicationServices\n  namespace: System.Web.Security\n  summary: Gets a value indicating whether the membership provider is configured to require the user to answer a password question for password reset and retrieval.\n  remarks: \"A Boolean value specified in the configuration file (Web.config). The <xref:System.Web.Security.MembershipProvider.RequiresQuestionAndAnswer%2A> property indicates whether users must supply a password answer in order to retrieve their password using the <xref:System.Web.Security.MembershipProvider.GetPassword%2A> method, or reset their password using the <xref:System.Web.Security.MembershipProvider.ResetPassword%2A> method.  \\n  \\n This property is read-only.\"\n  example:\n  - For an example of a <xref:System.Web.Security.MembershipProvider> implementation, see [Implementing a Profile Provider](http://msdn.microsoft.com/library/58de6e99-31a7-41b9-93ed-51b9b4a67e98).\n  syntax:\n    content: public abstract bool RequiresQuestionAndAnswer { get; }\n    return:\n      type: System.Boolean\n      description: '`true` if a password answer is required for password reset and retrieval; otherwise, `false`. The default is `true`.'\n  overload: System.Web.Security.MembershipProvider.RequiresQuestionAndAnswer*\n  exceptions: []\n  version:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Web.Security/MembershipProvider.xml\n  ms.technology:\n  - dotnet-webforms\n  author: tdykstra\n  ms.author: tdykstra\n  manager: wpickett\n- uid: System.Web.Security.MembershipProvider.RequiresUniqueEmail\n  commentId: P:System.Web.Security.MembershipProvider.RequiresUniqueEmail\n  id: RequiresUniqueEmail\n  parent: System.Web.Security.MembershipProvider\n  langs:\n  - csharp\n  name: RequiresUniqueEmail\n  nameWithType: MembershipProvider.RequiresUniqueEmail\n  fullName: MembershipProvider.RequiresUniqueEmail\n  type: Property\n  assemblies:\n  - System.Web.ApplicationServices\n  namespace: System.Web.Security\n  summary: Gets a value indicating whether the membership provider is configured to require a unique e-mail address for each user name.\n  remarks: The <xref:System.Web.Security.MembershipProvider.RequiresUniqueEmail%2A> property indicates whether users must supply a unique e-mail address value when creating a user. If a user already exists in the data source for the current <xref:System.Web.Security.MembershipProvider.ApplicationName%2A>, then the <xref:System.Web.Security.MembershipProvider.CreateUser%2A> method returns `null` and a status value of <xref:System.Web.Security.MembershipCreateStatus.DuplicateEmail>.\n  example:\n  - For an example of a <xref:System.Web.Security.MembershipProvider> implementation, see [Implementing a Profile Provider](http://msdn.microsoft.com/library/58de6e99-31a7-41b9-93ed-51b9b4a67e98).\n  syntax:\n    content: public abstract bool RequiresUniqueEmail { get; }\n    return:\n      type: System.Boolean\n      description: '`true` if the membership provider requires a unique e-mail address; otherwise, `false`. The default is `true`.'\n  overload: System.Web.Security.MembershipProvider.RequiresUniqueEmail*\n  exceptions: []\n  version:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Web.Security/MembershipProvider.xml\n  ms.technology:\n  - dotnet-webforms\n  author: tdykstra\n  ms.author: tdykstra\n  manager: wpickett\n- uid: System.Web.Security.MembershipProvider.ResetPassword(System.String,System.String)\n  commentId: M:System.Web.Security.MembershipProvider.ResetPassword(System.String,System.String)\n  id: ResetPassword(System.String,System.String)\n  parent: System.Web.Security.MembershipProvider\n  langs:\n  - csharp\n  name: ResetPassword(String, String)\n  nameWithType: MembershipProvider.ResetPassword(String, String)\n  fullName: MembershipProvider.ResetPassword(String, String)\n  type: Method\n  assemblies:\n  - System.Web.ApplicationServices\n  namespace: System.Web.Security\n  summary: Resets a user's password to a new, automatically generated password.\n  remarks: \"Takes, as input, a user name and a password answer and generates a new, random password for the specified user.  \\n  \\n> [!NOTE]\\n>  The random password created by the <xref:System.Web.Security.MembershipProvider.ResetPassword%2A> method is not guaranteed to pass the regular expression in the <xref:System.Web.Security.MembershipProvider.PasswordStrengthRegularExpression%2A> property. However, the random password will meet the criteria established by the <xref:System.Web.Security.MembershipProvider.MinRequiredPasswordLength%2A> and <xref:System.Web.Security.MembershipProvider.MinRequiredNonAlphanumericCharacters%2A> properties  \\n  \\n The <xref:System.Web.Security.MembershipProvider.ResetPassword%2A> method updates the user information in the data source with the new password value and returns the new password as a string. A convenient mechanism for generating a random password is the <xref:System.Web.Security.Membership.GeneratePassword%2A> method.  \\n  \\n <xref:System.Web.Security.MembershipProvider.ResetPassword%2A> ensures that the <xref:System.Web.Security.MembershipProvider.EnablePasswordReset%2A> flag is set to `true` before performing any action. If <xref:System.Web.Security.MembershipProvider.EnablePasswordReset%2A> is `false`, a <xref:System.NotSupportedException> exception is thrown.  \\n  \\n <xref:System.Web.Security.MembershipProvider.ResetPassword%2A> also checks the value of the <xref:System.Web.Security.MembershipProvider.RequiresQuestionAndAnswer%2A> property. If <xref:System.Web.Security.MembershipProvider.RequiresQuestionAndAnswer%2A> is `true`, <xref:System.Web.Security.MembershipProvider.ResetPassword%2A> checks the value of the supplied answer parameter against the stored password answer in the data source. If they do not match, a <xref:System.Web.Security.MembershipPasswordException> exception is thrown.\"\n  example:\n  - For an example of a <xref:System.Web.Security.MembershipProvider> implementation, see [Implementing a Profile Provider](http://msdn.microsoft.com/library/58de6e99-31a7-41b9-93ed-51b9b4a67e98).\n  syntax:\n    content: public abstract string ResetPassword (string username, string answer);\n    parameters:\n    - id: username\n      type: System.String\n      description: The user to reset the password for.\n    - id: answer\n      type: System.String\n      description: The password answer for the specified user.\n    return:\n      type: System.String\n      description: The new password for the specified user.\n  overload: System.Web.Security.MembershipProvider.ResetPassword*\n  exceptions: []\n  version:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Web.Security/MembershipProvider.xml\n  ms.technology:\n  - dotnet-webforms\n  author: tdykstra\n  ms.author: tdykstra\n  manager: wpickett\n- uid: System.Web.Security.MembershipProvider.UnlockUser(System.String)\n  commentId: M:System.Web.Security.MembershipProvider.UnlockUser(System.String)\n  id: UnlockUser(System.String)\n  parent: System.Web.Security.MembershipProvider\n  langs:\n  - csharp\n  name: UnlockUser(String)\n  nameWithType: MembershipProvider.UnlockUser(String)\n  fullName: MembershipProvider.UnlockUser(String)\n  type: Method\n  assemblies:\n  - System.Web.ApplicationServices\n  namespace: System.Web.Security\n  summary: Clears a lock so that the membership user can be validated.\n  remarks: Takes, as input, a user name, and updates the field in the data source that stores the <xref:System.Web.Security.MembershipUser.IsLockedOut%2A> property to `false`. The <xref:System.Web.Security.MembershipProvider.UnlockUser%2A> method returns `true` if the record for the membership user is updated successfully; otherwise, `false`.\n  example:\n  - For an example of a <xref:System.Web.Security.MembershipProvider> implementation, see [Implementing a Profile Provider](http://msdn.microsoft.com/library/58de6e99-31a7-41b9-93ed-51b9b4a67e98).\n  syntax:\n    content: public abstract bool UnlockUser (string userName);\n    parameters:\n    - id: userName\n      type: System.String\n      description: The membership user whose lock status you want to clear.\n    return:\n      type: System.Boolean\n      description: '`true` if the membership user was successfully unlocked; otherwise, `false`.'\n  overload: System.Web.Security.MembershipProvider.UnlockUser*\n  exceptions: []\n  version:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Web.Security/MembershipProvider.xml\n  ms.technology:\n  - dotnet-webforms\n  author: tdykstra\n  ms.author: tdykstra\n  manager: wpickett\n- uid: System.Web.Security.MembershipProvider.UpdateUser(System.Web.Security.MembershipUser)\n  commentId: M:System.Web.Security.MembershipProvider.UpdateUser(System.Web.Security.MembershipUser)\n  id: UpdateUser(System.Web.Security.MembershipUser)\n  parent: System.Web.Security.MembershipProvider\n  langs:\n  - csharp\n  name: UpdateUser(MembershipUser)\n  nameWithType: MembershipProvider.UpdateUser(MembershipUser)\n  fullName: MembershipProvider.UpdateUser(MembershipUser)\n  type: Method\n  assemblies:\n  - System.Web.ApplicationServices\n  namespace: System.Web.Security\n  summary: Updates information about a user in the data source.\n  remarks: Takes, as input, a <xref:System.Web.Security.MembershipUser> object populated with user information and updates the data source with the supplied values.\n  example:\n  - For an example of a <xref:System.Web.Security.MembershipProvider> implementation, see [Implementing a Profile Provider](http://msdn.microsoft.com/library/58de6e99-31a7-41b9-93ed-51b9b4a67e98).\n  syntax:\n    content: public abstract void UpdateUser (System.Web.Security.MembershipUser user);\n    parameters:\n    - id: user\n      type: System.Web.Security.MembershipUser\n      description: A <xref href=\"System.Web.Security.MembershipUser\"></xref> object that represents the user to update and the updated information for the user.\n  overload: System.Web.Security.MembershipProvider.UpdateUser*\n  exceptions: []\n  version:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Web.Security/MembershipProvider.xml\n  ms.technology:\n  - dotnet-webforms\n  author: tdykstra\n  ms.author: tdykstra\n  manager: wpickett\n- uid: System.Web.Security.MembershipProvider.ValidateUser(System.String,System.String)\n  commentId: M:System.Web.Security.MembershipProvider.ValidateUser(System.String,System.String)\n  id: ValidateUser(System.String,System.String)\n  parent: System.Web.Security.MembershipProvider\n  langs:\n  - csharp\n  name: ValidateUser(String, String)\n  nameWithType: MembershipProvider.ValidateUser(String, String)\n  fullName: MembershipProvider.ValidateUser(String, String)\n  type: Method\n  assemblies:\n  - System.Web.ApplicationServices\n  namespace: System.Web.Security\n  summary: Verifies that the specified user name and password exist in the data source.\n  remarks: \"Takes, as input, a user name and a password and verifies that the values match those in the data source. <xref:System.Web.Security.MembershipProvider.ValidateUser%2A> returns `true` for a successful user name and password match; otherwise, `false`.  \\n  \\n For successful validations, <xref:System.Web.Security.MembershipProvider.ValidateUser%2A> updates the <xref:System.Web.Security.MembershipUser.LastLoginDate%2A> for the specified user.\"\n  example:\n  - For an example of a <xref:System.Web.Security.MembershipProvider> implementation, see [Implementing a Profile Provider](http://msdn.microsoft.com/library/58de6e99-31a7-41b9-93ed-51b9b4a67e98).\n  syntax:\n    content: public abstract bool ValidateUser (string username, string password);\n    parameters:\n    - id: username\n      type: System.String\n      description: The name of the user to validate.\n    - id: password\n      type: System.String\n      description: The password for the specified user.\n    return:\n      type: System.Boolean\n      description: '`true` if the specified username and password are valid; otherwise, `false`.'\n  overload: System.Web.Security.MembershipProvider.ValidateUser*\n  exceptions: []\n  version:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Web.Security/MembershipProvider.xml\n  ms.technology:\n  - dotnet-webforms\n  author: tdykstra\n  ms.author: tdykstra\n  manager: wpickett\n- uid: System.Web.Security.MembershipProvider.ValidatingPassword\n  commentId: E:System.Web.Security.MembershipProvider.ValidatingPassword\n  id: ValidatingPassword\n  parent: System.Web.Security.MembershipProvider\n  langs:\n  - csharp\n  name: ValidatingPassword\n  nameWithType: MembershipProvider.ValidatingPassword\n  fullName: MembershipProvider.ValidatingPassword\n  type: Event\n  assemblies:\n  - System.Web.ApplicationServices\n  namespace: System.Web.Security\n  summary: Occurs when a user is created, a password is changed, or a password is reset.\n  remarks: \"The <xref:System.Web.Security.MembershipProvider.ValidatingPassword> event is raised during the <xref:System.Web.Security.MembershipProvider.CreateUser%2A>, <xref:System.Web.Security.MembershipProvider.ChangePassword%2A>, and <xref:System.Web.Security.MembershipProvider.ResetPassword%2A> methods.  \\n  \\n The <xref:System.Web.Security.MembershipProvider.ValidatingPassword> event occurs before the action requested and enables the user to continue or cancel the requested action. If the action is canceled, the user can specify an exception to be thrown.  \\n  \\n Users use a <xref:System.Web.Security.MembershipValidatePasswordEventHandler> event handler to specify a handler for the <xref:System.Web.Security.MembershipProvider.ValidatingPassword> event. Provider implementers can use the <xref:System.Web.Security.MembershipProvider.OnValidatingPassword%2A> virtual method to raise the <xref:System.Web.Security.MembershipProvider.ValidatingPassword> event.\"\n  example:\n  - For an example of a <xref:System.Web.Security.MembershipProvider> implementation, see [Implementing a Profile Provider](http://msdn.microsoft.com/library/58de6e99-31a7-41b9-93ed-51b9b4a67e98).\n  syntax:\n    content: public event System.Web.Security.MembershipValidatePasswordEventHandler ValidatingPassword;\n    return:\n      type: System.Web.Security.MembershipValidatePasswordEventHandler\n      description: ''\n  exceptions: []\n  version:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Web.Security/MembershipProvider.xml\n  ms.technology:\n  - dotnet-webforms\n  author: tdykstra\n  ms.author: tdykstra\n  manager: wpickett\nreferences:\n- uid: System.Configuration.Provider.ProviderBase\n  parent: System.Configuration.Provider\n  isExternal: false\n  name: ProviderBase\n  nameWithType: ProviderBase\n  fullName: System.Configuration.Provider.ProviderBase\n- uid: System.Configuration.Provider.ProviderException\n  parent: System.Configuration.Provider\n  isExternal: false\n  name: ProviderException\n  nameWithType: ProviderException\n  fullName: System.Configuration.Provider.ProviderException\n- uid: System.PlatformNotSupportedException\n  parent: System\n  isExternal: false\n  name: PlatformNotSupportedException\n  nameWithType: PlatformNotSupportedException\n  fullName: System.PlatformNotSupportedException\n- uid: System.Web.Security.MembershipProvider.#ctor\n  parent: System.Web.Security.MembershipProvider\n  isExternal: false\n  name: MembershipProvider()\n  nameWithType: MembershipProvider.MembershipProvider()\n  fullName: MembershipProvider.MembershipProvider()\n- uid: System.Web.Security.MembershipProvider.ApplicationName\n  parent: System.Web.Security.MembershipProvider\n  isExternal: false\n  name: ApplicationName\n  nameWithType: MembershipProvider.ApplicationName\n  fullName: MembershipProvider.ApplicationName\n- uid: System.String\n  parent: System\n  isExternal: false\n  name: String\n  nameWithType: String\n  fullName: System.String\n- uid: System.Web.Security.MembershipProvider.ChangePassword(System.String,System.String,System.String)\n  parent: System.Web.Security.MembershipProvider\n  isExternal: false\n  name: ChangePassword(String, String, String)\n  nameWithType: MembershipProvider.ChangePassword(String, String, String)\n  fullName: MembershipProvider.ChangePassword(String, String, String)\n- uid: System.Boolean\n  parent: System\n  isExternal: false\n  name: Boolean\n  nameWithType: Boolean\n  fullName: System.Boolean\n- uid: System.Web.Security.MembershipProvider.ChangePasswordQuestionAndAnswer(System.String,System.String,System.String,System.String)\n  parent: System.Web.Security.MembershipProvider\n  isExternal: false\n  name: ChangePasswordQuestionAndAnswer(String, String, String, String)\n  nameWithType: MembershipProvider.ChangePasswordQuestionAndAnswer(String, String, String, String)\n  fullName: MembershipProvider.ChangePasswordQuestionAndAnswer(String, String, String, String)\n- uid: System.Web.Security.MembershipProvider.CreateUser(System.String,System.String,System.String,System.String,System.String,System.Boolean,System.Object,System.Web.Security.MembershipCreateStatus@)\n  parent: System.Web.Security.MembershipProvider\n  isExternal: false\n  name: CreateUser(String, String, String, String, String, Boolean, Object, MembershipCreateStatus)\n  nameWithType: MembershipProvider.CreateUser(String, String, String, String, String, Boolean, Object, MembershipCreateStatus)\n  fullName: MembershipProvider.CreateUser(String, String, String, String, String, Boolean, Object, MembershipCreateStatus)\n- uid: System.Web.Security.MembershipUser\n  parent: System.Web.Security\n  isExternal: false\n  name: MembershipUser\n  nameWithType: MembershipUser\n  fullName: System.Web.Security.MembershipUser\n- uid: System.Object\n  parent: System\n  isExternal: false\n  name: Object\n  nameWithType: Object\n  fullName: System.Object\n- uid: System.Web.Security.MembershipCreateStatus\n  parent: System.Web.Security\n  isExternal: false\n  name: MembershipCreateStatus\n  nameWithType: MembershipCreateStatus\n  fullName: System.Web.Security.MembershipCreateStatus\n- uid: System.Web.Security.MembershipProvider.DecryptPassword(System.Byte[])\n  parent: System.Web.Security.MembershipProvider\n  isExternal: false\n  name: DecryptPassword(Byte[])\n  nameWithType: MembershipProvider.DecryptPassword(Byte[])\n  fullName: MembershipProvider.DecryptPassword(Byte[])\n- uid: System.Byte\n  name: Byte\n  nameWithType: Byte\n  fullName: System.Byte\n- uid: System.Byte[]\n  parent: System\n  isExternal: false\n  name: Byte[]\n  nameWithType: Byte[]\n  fullName: System.Byte[]\n  spec.csharp:\n  - uid: System.Byte\n    name: Byte\n    nameWithType: Byte\n    fullName: System.Byte\n  - name: '[]'\n    nameWithType: '[]'\n    fullName: '[]'\n- uid: System.Web.Security.MembershipProvider.DeleteUser(System.String,System.Boolean)\n  parent: System.Web.Security.MembershipProvider\n  isExternal: false\n  name: DeleteUser(String, Boolean)\n  nameWithType: MembershipProvider.DeleteUser(String, Boolean)\n  fullName: MembershipProvider.DeleteUser(String, Boolean)\n- uid: System.Web.Security.MembershipProvider.EnablePasswordReset\n  parent: System.Web.Security.MembershipProvider\n  isExternal: false\n  name: EnablePasswordReset\n  nameWithType: MembershipProvider.EnablePasswordReset\n  fullName: MembershipProvider.EnablePasswordReset\n- uid: System.Web.Security.MembershipProvider.EnablePasswordRetrieval\n  parent: System.Web.Security.MembershipProvider\n  isExternal: false\n  name: EnablePasswordRetrieval\n  nameWithType: MembershipProvider.EnablePasswordRetrieval\n  fullName: MembershipProvider.EnablePasswordRetrieval\n- uid: System.Web.Security.MembershipProvider.EncryptPassword(System.Byte[])\n  parent: System.Web.Security.MembershipProvider\n  isExternal: false\n  name: EncryptPassword(Byte[])\n  nameWithType: MembershipProvider.EncryptPassword(Byte[])\n  fullName: MembershipProvider.EncryptPassword(Byte[])\n- uid: System.Web.Security.MembershipProvider.EncryptPassword(System.Byte[],System.Web.Configuration.MembershipPasswordCompatibilityMode)\n  parent: System.Web.Security.MembershipProvider\n  isExternal: false\n  name: EncryptPassword(Byte[], MembershipPasswordCompatibilityMode)\n  nameWithType: MembershipProvider.EncryptPassword(Byte[], MembershipPasswordCompatibilityMode)\n  fullName: MembershipProvider.EncryptPassword(Byte[], MembershipPasswordCompatibilityMode)\n- uid: System.Web.Configuration.MembershipPasswordCompatibilityMode\n  parent: System.Web.Configuration\n  isExternal: false\n  name: MembershipPasswordCompatibilityMode\n  nameWithType: MembershipPasswordCompatibilityMode\n  fullName: System.Web.Configuration.MembershipPasswordCompatibilityMode\n- uid: System.Web.Security.MembershipProvider.FindUsersByEmail(System.String,System.Int32,System.Int32,System.Int32@)\n  parent: System.Web.Security.MembershipProvider\n  isExternal: false\n  name: FindUsersByEmail(String, Int32, Int32, Int32)\n  nameWithType: MembershipProvider.FindUsersByEmail(String, Int32, Int32, Int32)\n  fullName: MembershipProvider.FindUsersByEmail(String, Int32, Int32, Int32)\n- uid: System.Web.Security.MembershipUserCollection\n  parent: System.Web.Security\n  isExternal: false\n  name: MembershipUserCollection\n  nameWithType: MembershipUserCollection\n  fullName: System.Web.Security.MembershipUserCollection\n- uid: System.Int32\n  parent: System\n  isExternal: false\n  name: Int32\n  nameWithType: Int32\n  fullName: System.Int32\n- uid: System.Web.Security.MembershipProvider.FindUsersByName(System.String,System.Int32,System.Int32,System.Int32@)\n  parent: System.Web.Security.MembershipProvider\n  isExternal: false\n  name: FindUsersByName(String, Int32, Int32, Int32)\n  nameWithType: MembershipProvider.FindUsersByName(String, Int32, Int32, Int32)\n  fullName: MembershipProvider.FindUsersByName(String, Int32, Int32, Int32)\n- uid: System.Web.Security.MembershipProvider.GetAllUsers(System.Int32,System.Int32,System.Int32@)\n  parent: System.Web.Security.MembershipProvider\n  isExternal: false\n  name: GetAllUsers(Int32, Int32, Int32)\n  nameWithType: MembershipProvider.GetAllUsers(Int32, Int32, Int32)\n  fullName: MembershipProvider.GetAllUsers(Int32, Int32, Int32)\n- uid: System.Web.Security.MembershipProvider.GetNumberOfUsersOnline\n  parent: System.Web.Security.MembershipProvider\n  isExternal: false\n  name: GetNumberOfUsersOnline()\n  nameWithType: MembershipProvider.GetNumberOfUsersOnline()\n  fullName: MembershipProvider.GetNumberOfUsersOnline()\n- uid: System.Web.Security.MembershipProvider.GetPassword(System.String,System.String)\n  parent: System.Web.Security.MembershipProvider\n  isExternal: false\n  name: GetPassword(String, String)\n  nameWithType: MembershipProvider.GetPassword(String, String)\n  fullName: MembershipProvider.GetPassword(String, String)\n- uid: System.Web.Security.MembershipProvider.GetUser(System.String,System.Boolean)\n  parent: System.Web.Security.MembershipProvider\n  isExternal: false\n  name: GetUser(String, Boolean)\n  nameWithType: MembershipProvider.GetUser(String, Boolean)\n  fullName: MembershipProvider.GetUser(String, Boolean)\n- uid: System.Web.Security.MembershipProvider.GetUser(System.Object,System.Boolean)\n  parent: System.Web.Security.MembershipProvider\n  isExternal: false\n  name: GetUser(Object, Boolean)\n  nameWithType: MembershipProvider.GetUser(Object, Boolean)\n  fullName: MembershipProvider.GetUser(Object, Boolean)\n- uid: System.Web.Security.MembershipProvider.GetUserNameByEmail(System.String)\n  parent: System.Web.Security.MembershipProvider\n  isExternal: false\n  name: GetUserNameByEmail(String)\n  nameWithType: MembershipProvider.GetUserNameByEmail(String)\n  fullName: MembershipProvider.GetUserNameByEmail(String)\n- uid: System.Web.Security.MembershipProvider.MaxInvalidPasswordAttempts\n  parent: System.Web.Security.MembershipProvider\n  isExternal: false\n  name: MaxInvalidPasswordAttempts\n  nameWithType: MembershipProvider.MaxInvalidPasswordAttempts\n  fullName: MembershipProvider.MaxInvalidPasswordAttempts\n- uid: System.Web.Security.MembershipProvider.MinRequiredNonAlphanumericCharacters\n  parent: System.Web.Security.MembershipProvider\n  isExternal: false\n  name: MinRequiredNonAlphanumericCharacters\n  nameWithType: MembershipProvider.MinRequiredNonAlphanumericCharacters\n  fullName: MembershipProvider.MinRequiredNonAlphanumericCharacters\n- uid: System.Web.Security.MembershipProvider.MinRequiredPasswordLength\n  parent: System.Web.Security.MembershipProvider\n  isExternal: false\n  name: MinRequiredPasswordLength\n  nameWithType: MembershipProvider.MinRequiredPasswordLength\n  fullName: MembershipProvider.MinRequiredPasswordLength\n- uid: System.Web.Security.MembershipProvider.OnValidatingPassword(System.Web.Security.ValidatePasswordEventArgs)\n  parent: System.Web.Security.MembershipProvider\n  isExternal: false\n  name: OnValidatingPassword(ValidatePasswordEventArgs)\n  nameWithType: MembershipProvider.OnValidatingPassword(ValidatePasswordEventArgs)\n  fullName: MembershipProvider.OnValidatingPassword(ValidatePasswordEventArgs)\n- uid: System.Web.Security.ValidatePasswordEventArgs\n  parent: System.Web.Security\n  isExternal: false\n  name: ValidatePasswordEventArgs\n  nameWithType: ValidatePasswordEventArgs\n  fullName: System.Web.Security.ValidatePasswordEventArgs\n- uid: System.Web.Security.MembershipProvider.PasswordAttemptWindow\n  parent: System.Web.Security.MembershipProvider\n  isExternal: false\n  name: PasswordAttemptWindow\n  nameWithType: MembershipProvider.PasswordAttemptWindow\n  fullName: MembershipProvider.PasswordAttemptWindow\n- uid: System.Web.Security.MembershipProvider.PasswordFormat\n  parent: System.Web.Security.MembershipProvider\n  isExternal: false\n  name: PasswordFormat\n  nameWithType: MembershipProvider.PasswordFormat\n  fullName: MembershipProvider.PasswordFormat\n- uid: System.Web.Security.MembershipPasswordFormat\n  parent: System.Web.Security\n  isExternal: false\n  name: MembershipPasswordFormat\n  nameWithType: MembershipPasswordFormat\n  fullName: System.Web.Security.MembershipPasswordFormat\n- uid: System.Web.Security.MembershipProvider.PasswordStrengthRegularExpression\n  parent: System.Web.Security.MembershipProvider\n  isExternal: false\n  name: PasswordStrengthRegularExpression\n  nameWithType: MembershipProvider.PasswordStrengthRegularExpression\n  fullName: MembershipProvider.PasswordStrengthRegularExpression\n- uid: System.Web.Security.MembershipProvider.RequiresQuestionAndAnswer\n  parent: System.Web.Security.MembershipProvider\n  isExternal: false\n  name: RequiresQuestionAndAnswer\n  nameWithType: MembershipProvider.RequiresQuestionAndAnswer\n  fullName: MembershipProvider.RequiresQuestionAndAnswer\n- uid: System.Web.Security.MembershipProvider.RequiresUniqueEmail\n  parent: System.Web.Security.MembershipProvider\n  isExternal: false\n  name: RequiresUniqueEmail\n  nameWithType: MembershipProvider.RequiresUniqueEmail\n  fullName: MembershipProvider.RequiresUniqueEmail\n- uid: System.Web.Security.MembershipProvider.ResetPassword(System.String,System.String)\n  parent: System.Web.Security.MembershipProvider\n  isExternal: false\n  name: ResetPassword(String, String)\n  nameWithType: MembershipProvider.ResetPassword(String, String)\n  fullName: MembershipProvider.ResetPassword(String, String)\n- uid: System.Web.Security.MembershipProvider.UnlockUser(System.String)\n  parent: System.Web.Security.MembershipProvider\n  isExternal: false\n  name: UnlockUser(String)\n  nameWithType: MembershipProvider.UnlockUser(String)\n  fullName: MembershipProvider.UnlockUser(String)\n- uid: System.Web.Security.MembershipProvider.UpdateUser(System.Web.Security.MembershipUser)\n  parent: System.Web.Security.MembershipProvider\n  isExternal: false\n  name: UpdateUser(MembershipUser)\n  nameWithType: MembershipProvider.UpdateUser(MembershipUser)\n  fullName: MembershipProvider.UpdateUser(MembershipUser)\n- uid: System.Web.Security.MembershipProvider.ValidateUser(System.String,System.String)\n  parent: System.Web.Security.MembershipProvider\n  isExternal: false\n  name: ValidateUser(String, String)\n  nameWithType: MembershipProvider.ValidateUser(String, String)\n  fullName: MembershipProvider.ValidateUser(String, String)\n- uid: System.Web.Security.MembershipProvider.ValidatingPassword\n  parent: System.Web.Security.MembershipProvider\n  isExternal: false\n  name: ValidatingPassword\n  nameWithType: MembershipProvider.ValidatingPassword\n  fullName: MembershipProvider.ValidatingPassword\n- uid: System.Web.Security.MembershipValidatePasswordEventHandler\n  parent: System.Web.Security\n  isExternal: false\n  name: MembershipValidatePasswordEventHandler\n  nameWithType: MembershipValidatePasswordEventHandler\n  fullName: System.Web.Security.MembershipValidatePasswordEventHandler\n- uid: System.Web.Security.MembershipProvider.EncryptPassword*\n  parent: System.Web.Security.MembershipProvider\n  isExternal: false\n  name: EncryptPassword\n  nameWithType: MembershipProvider.EncryptPassword\n  fullName: MembershipProvider.EncryptPassword\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Web.Security/MembershipProvider.xml\n- uid: System.Web.Security.MembershipProvider.#ctor*\n  parent: System.Web.Security.MembershipProvider\n  isExternal: false\n  name: MembershipProvider\n  nameWithType: MembershipProvider.MembershipProvider\n  fullName: MembershipProvider.MembershipProvider\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Web.Security/MembershipProvider.xml\n- uid: System.Web.Security.MembershipProvider.ApplicationName*\n  parent: System.Web.Security.MembershipProvider\n  isExternal: false\n  name: ApplicationName\n  nameWithType: MembershipProvider.ApplicationName\n  fullName: MembershipProvider.ApplicationName\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Web.Security/MembershipProvider.xml\n- uid: System.Web.Security.MembershipProvider.ChangePassword*\n  parent: System.Web.Security.MembershipProvider\n  isExternal: false\n  name: ChangePassword\n  nameWithType: MembershipProvider.ChangePassword\n  fullName: MembershipProvider.ChangePassword\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Web.Security/MembershipProvider.xml\n- uid: System.Web.Security.MembershipProvider.ChangePasswordQuestionAndAnswer*\n  parent: System.Web.Security.MembershipProvider\n  isExternal: false\n  name: ChangePasswordQuestionAndAnswer\n  nameWithType: MembershipProvider.ChangePasswordQuestionAndAnswer\n  fullName: MembershipProvider.ChangePasswordQuestionAndAnswer\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Web.Security/MembershipProvider.xml\n- uid: System.Web.Security.MembershipProvider.CreateUser*\n  parent: System.Web.Security.MembershipProvider\n  isExternal: false\n  name: CreateUser\n  nameWithType: MembershipProvider.CreateUser\n  fullName: MembershipProvider.CreateUser\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Web.Security/MembershipProvider.xml\n- uid: System.Web.Security.MembershipProvider.DecryptPassword*\n  parent: System.Web.Security.MembershipProvider\n  isExternal: false\n  name: DecryptPassword\n  nameWithType: MembershipProvider.DecryptPassword\n  fullName: MembershipProvider.DecryptPassword\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Web.Security/MembershipProvider.xml\n- uid: System.Web.Security.MembershipProvider.DeleteUser*\n  parent: System.Web.Security.MembershipProvider\n  isExternal: false\n  name: DeleteUser\n  nameWithType: MembershipProvider.DeleteUser\n  fullName: MembershipProvider.DeleteUser\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Web.Security/MembershipProvider.xml\n- uid: System.Web.Security.MembershipProvider.EnablePasswordReset*\n  parent: System.Web.Security.MembershipProvider\n  isExternal: false\n  name: EnablePasswordReset\n  nameWithType: MembershipProvider.EnablePasswordReset\n  fullName: MembershipProvider.EnablePasswordReset\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Web.Security/MembershipProvider.xml\n- uid: System.Web.Security.MembershipProvider.EnablePasswordRetrieval*\n  parent: System.Web.Security.MembershipProvider\n  isExternal: false\n  name: EnablePasswordRetrieval\n  nameWithType: MembershipProvider.EnablePasswordRetrieval\n  fullName: MembershipProvider.EnablePasswordRetrieval\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Web.Security/MembershipProvider.xml\n- uid: System.Web.Security.MembershipProvider.FindUsersByEmail*\n  parent: System.Web.Security.MembershipProvider\n  isExternal: false\n  name: FindUsersByEmail\n  nameWithType: MembershipProvider.FindUsersByEmail\n  fullName: MembershipProvider.FindUsersByEmail\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Web.Security/MembershipProvider.xml\n- uid: System.Web.Security.MembershipProvider.FindUsersByName*\n  parent: System.Web.Security.MembershipProvider\n  isExternal: false\n  name: FindUsersByName\n  nameWithType: MembershipProvider.FindUsersByName\n  fullName: MembershipProvider.FindUsersByName\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Web.Security/MembershipProvider.xml\n- uid: System.Web.Security.MembershipProvider.GetAllUsers*\n  parent: System.Web.Security.MembershipProvider\n  isExternal: false\n  name: GetAllUsers\n  nameWithType: MembershipProvider.GetAllUsers\n  fullName: MembershipProvider.GetAllUsers\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Web.Security/MembershipProvider.xml\n- uid: System.Web.Security.MembershipProvider.GetNumberOfUsersOnline*\n  parent: System.Web.Security.MembershipProvider\n  isExternal: false\n  name: GetNumberOfUsersOnline\n  nameWithType: MembershipProvider.GetNumberOfUsersOnline\n  fullName: MembershipProvider.GetNumberOfUsersOnline\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Web.Security/MembershipProvider.xml\n- uid: System.Web.Security.MembershipProvider.GetPassword*\n  parent: System.Web.Security.MembershipProvider\n  isExternal: false\n  name: GetPassword\n  nameWithType: MembershipProvider.GetPassword\n  fullName: MembershipProvider.GetPassword\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Web.Security/MembershipProvider.xml\n- uid: System.Web.Security.MembershipProvider.GetUser*\n  parent: System.Web.Security.MembershipProvider\n  isExternal: false\n  name: GetUser\n  nameWithType: MembershipProvider.GetUser\n  fullName: MembershipProvider.GetUser\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Web.Security/MembershipProvider.xml\n- uid: System.Web.Security.MembershipProvider.GetUserNameByEmail*\n  parent: System.Web.Security.MembershipProvider\n  isExternal: false\n  name: GetUserNameByEmail\n  nameWithType: MembershipProvider.GetUserNameByEmail\n  fullName: MembershipProvider.GetUserNameByEmail\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Web.Security/MembershipProvider.xml\n- uid: System.Web.Security.MembershipProvider.MaxInvalidPasswordAttempts*\n  parent: System.Web.Security.MembershipProvider\n  isExternal: false\n  name: MaxInvalidPasswordAttempts\n  nameWithType: MembershipProvider.MaxInvalidPasswordAttempts\n  fullName: MembershipProvider.MaxInvalidPasswordAttempts\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Web.Security/MembershipProvider.xml\n- uid: System.Web.Security.MembershipProvider.MinRequiredNonAlphanumericCharacters*\n  parent: System.Web.Security.MembershipProvider\n  isExternal: false\n  name: MinRequiredNonAlphanumericCharacters\n  nameWithType: MembershipProvider.MinRequiredNonAlphanumericCharacters\n  fullName: MembershipProvider.MinRequiredNonAlphanumericCharacters\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Web.Security/MembershipProvider.xml\n- uid: System.Web.Security.MembershipProvider.MinRequiredPasswordLength*\n  parent: System.Web.Security.MembershipProvider\n  isExternal: false\n  name: MinRequiredPasswordLength\n  nameWithType: MembershipProvider.MinRequiredPasswordLength\n  fullName: MembershipProvider.MinRequiredPasswordLength\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Web.Security/MembershipProvider.xml\n- uid: System.Web.Security.MembershipProvider.OnValidatingPassword*\n  parent: System.Web.Security.MembershipProvider\n  isExternal: false\n  name: OnValidatingPassword\n  nameWithType: MembershipProvider.OnValidatingPassword\n  fullName: MembershipProvider.OnValidatingPassword\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Web.Security/MembershipProvider.xml\n- uid: System.Web.Security.MembershipProvider.PasswordAttemptWindow*\n  parent: System.Web.Security.MembershipProvider\n  isExternal: false\n  name: PasswordAttemptWindow\n  nameWithType: MembershipProvider.PasswordAttemptWindow\n  fullName: MembershipProvider.PasswordAttemptWindow\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Web.Security/MembershipProvider.xml\n- uid: System.Web.Security.MembershipProvider.PasswordFormat*\n  parent: System.Web.Security.MembershipProvider\n  isExternal: false\n  name: PasswordFormat\n  nameWithType: MembershipProvider.PasswordFormat\n  fullName: MembershipProvider.PasswordFormat\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Web.Security/MembershipProvider.xml\n- uid: System.Web.Security.MembershipProvider.PasswordStrengthRegularExpression*\n  parent: System.Web.Security.MembershipProvider\n  isExternal: false\n  name: PasswordStrengthRegularExpression\n  nameWithType: MembershipProvider.PasswordStrengthRegularExpression\n  fullName: MembershipProvider.PasswordStrengthRegularExpression\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Web.Security/MembershipProvider.xml\n- uid: System.Web.Security.MembershipProvider.RequiresQuestionAndAnswer*\n  parent: System.Web.Security.MembershipProvider\n  isExternal: false\n  name: RequiresQuestionAndAnswer\n  nameWithType: MembershipProvider.RequiresQuestionAndAnswer\n  fullName: MembershipProvider.RequiresQuestionAndAnswer\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Web.Security/MembershipProvider.xml\n- uid: System.Web.Security.MembershipProvider.RequiresUniqueEmail*\n  parent: System.Web.Security.MembershipProvider\n  isExternal: false\n  name: RequiresUniqueEmail\n  nameWithType: MembershipProvider.RequiresUniqueEmail\n  fullName: MembershipProvider.RequiresUniqueEmail\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Web.Security/MembershipProvider.xml\n- uid: System.Web.Security.MembershipProvider.ResetPassword*\n  parent: System.Web.Security.MembershipProvider\n  isExternal: false\n  name: ResetPassword\n  nameWithType: MembershipProvider.ResetPassword\n  fullName: MembershipProvider.ResetPassword\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Web.Security/MembershipProvider.xml\n- uid: System.Web.Security.MembershipProvider.UnlockUser*\n  parent: System.Web.Security.MembershipProvider\n  isExternal: false\n  name: UnlockUser\n  nameWithType: MembershipProvider.UnlockUser\n  fullName: MembershipProvider.UnlockUser\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Web.Security/MembershipProvider.xml\n- uid: System.Web.Security.MembershipProvider.UpdateUser*\n  parent: System.Web.Security.MembershipProvider\n  isExternal: false\n  name: UpdateUser\n  nameWithType: MembershipProvider.UpdateUser\n  fullName: MembershipProvider.UpdateUser\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Web.Security/MembershipProvider.xml\n- uid: System.Web.Security.MembershipProvider.ValidateUser*\n  parent: System.Web.Security.MembershipProvider\n  isExternal: false\n  name: ValidateUser\n  nameWithType: MembershipProvider.ValidateUser\n  fullName: MembershipProvider.ValidateUser\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Web.Security/MembershipProvider.xml\n- uid: System.Object.Equals(System.Object)\n  parent: System.Object\n  isExternal: false\n  name: Equals(Object)\n  nameWithType: Object.Equals(Object)\n  fullName: Object.Equals(Object)\n- uid: System.Object.Equals(System.Object,System.Object)\n  parent: System.Object\n  isExternal: false\n  name: Equals(Object, Object)\n  nameWithType: Object.Equals(Object, Object)\n  fullName: Object.Equals(Object, Object)\n- uid: System.Object.GetHashCode\n  parent: System.Object\n  isExternal: false\n  name: GetHashCode()\n  nameWithType: Object.GetHashCode()\n  fullName: Object.GetHashCode()\n- uid: System.Object.GetType\n  parent: System.Object\n  isExternal: false\n  name: GetType()\n  nameWithType: Object.GetType()\n  fullName: Object.GetType()\n- uid: System.Object.MemberwiseClone\n  parent: System.Object\n  isExternal: false\n  name: MemberwiseClone()\n  nameWithType: Object.MemberwiseClone()\n  fullName: Object.MemberwiseClone()\n- uid: System.Object.ReferenceEquals(System.Object,System.Object)\n  parent: System.Object\n  isExternal: false\n  name: ReferenceEquals(Object, Object)\n  nameWithType: Object.ReferenceEquals(Object, Object)\n  fullName: Object.ReferenceEquals(Object, Object)\n- uid: System.Object.ToString\n  parent: System.Object\n  isExternal: false\n  name: ToString()\n  nameWithType: Object.ToString()\n  fullName: Object.ToString()\n- uid: System.Configuration.Provider.ProviderBase.Description\n  parent: System.Configuration.Provider.ProviderBase\n  isExternal: false\n  name: Description\n  nameWithType: ProviderBase.Description\n  fullName: ProviderBase.Description\n- uid: System.Configuration.Provider.ProviderBase.Initialize(System.String,System.Collections.Specialized.NameValueCollection)\n  parent: System.Configuration.Provider.ProviderBase\n  isExternal: false\n  name: Initialize(String, NameValueCollection)\n  nameWithType: ProviderBase.Initialize(String, NameValueCollection)\n  fullName: ProviderBase.Initialize(String, NameValueCollection)\n- uid: System.Configuration.Provider.ProviderBase.Name\n  parent: System.Configuration.Provider.ProviderBase\n  isExternal: false\n  name: Name\n  nameWithType: ProviderBase.Name\n  fullName: ProviderBase.Name\n"}