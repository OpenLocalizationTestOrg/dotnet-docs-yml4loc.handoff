{"nodes":[{"content":"Represents an expression that consists of a binary operation between two expressions.","nodes":[{"pos":[0,85],"content":"Represents an expression that consists of a binary operation between two expressions.","nodes":[{"content":"Represents an expression that consists of a binary operation between two expressions.","pos":[0,85]}]}],"pos":[819,905],"yaml":true},{"content":"<xref:System.CodeDom.CodeBinaryOperatorExpression> can be used to represent code expressions that include a binary operator. Some examples of binary operators are equality (`==`), addition (`+`), and bitwise (`|`) operators. The <xref:System.CodeDom.CodeBinaryOperatorType> enumeration represents a set of basic, commonly used binary operators that are supported in many languages.","nodes":[{"pos":[0,381],"content":"<xref:System.CodeDom.CodeBinaryOperatorExpression> can be used to represent code expressions that include a binary operator. Some examples of binary operators are equality (`==`), addition (`+`), and bitwise (`|`) operators. The <xref:System.CodeDom.CodeBinaryOperatorType> enumeration represents a set of basic, commonly used binary operators that are supported in many languages.","nodes":[{"content":"<ph id=\"ph1\">&lt;xref:System.CodeDom.CodeBinaryOperatorExpression&gt;</ph> can be used to represent code expressions that include a binary operator.","pos":[0,124],"source":"<xref:System.CodeDom.CodeBinaryOperatorExpression> can be used to represent code expressions that include a binary operator."},{"content":"Some examples of binary operators are equality (<ph id=\"ph1\">`==`</ph>), addition (<ph id=\"ph2\">`+`</ph>), and bitwise (<ph id=\"ph3\">`|`</ph>) operators.","pos":[125,224],"source":" Some examples of binary operators are equality (`==`), addition (`+`), and bitwise (`|`) operators."},{"content":"The <ph id=\"ph1\">&lt;xref:System.CodeDom.CodeBinaryOperatorType&gt;</ph> enumeration represents a set of basic, commonly used binary operators that are supported in many languages.","pos":[225,381],"source":" The <xref:System.CodeDom.CodeBinaryOperatorType> enumeration represents a set of basic, commonly used binary operators that are supported in many languages."}]}],"pos":[916,1298],"yaml":true,"extradata":"MT"},{"content":"Initializes a new instance of the <xref href=\"System.CodeDom.CodeBinaryOperatorExpression\"></xref> class.","nodes":[{"pos":[0,105],"content":"Initializes a new instance of the <ph id=\"ph1\">&lt;xref href=\"System.CodeDom.CodeBinaryOperatorExpression\"&gt;&lt;/xref&gt;</ph> class.","source":"Initializes a new instance of the <xref href=\"System.CodeDom.CodeBinaryOperatorExpression\"></xref> class."}],"pos":[3911,4017],"yaml":true},{"content":"Initializes a new instance of the <xref href=\"System.CodeDom.CodeBinaryOperatorExpression\"></xref> class using the specified parameters.","nodes":[{"pos":[0,136],"content":"Initializes a new instance of the <ph id=\"ph1\">&lt;xref href=\"System.CodeDom.CodeBinaryOperatorExpression\"&gt;&lt;/xref&gt;</ph> class using the specified parameters.","source":"Initializes a new instance of the <xref href=\"System.CodeDom.CodeBinaryOperatorExpression\"></xref> class using the specified parameters."}],"pos":[5752,5889],"yaml":true},{"content":"The <xref href=\"System.CodeDom.CodeExpression\"></xref> on the left of the operator.","nodes":[{"pos":[0,83],"content":"The <ph id=\"ph1\">&lt;xref href=\"System.CodeDom.CodeExpression\"&gt;&lt;/xref&gt;</ph> on the left of the operator.","source":"The <xref href=\"System.CodeDom.CodeExpression\"></xref> on the left of the operator."}],"pos":[6157,6241],"yaml":true},{"content":"A <xref href=\"System.CodeDom.CodeBinaryOperatorType\"></xref> indicating the type of operator.","nodes":[{"pos":[0,93],"content":"A <ph id=\"ph1\">&lt;xref href=\"System.CodeDom.CodeBinaryOperatorType\"&gt;&lt;/xref&gt;</ph> indicating the type of operator.","source":"A <xref href=\"System.CodeDom.CodeBinaryOperatorType\"></xref> indicating the type of operator."}],"pos":[6323,6417],"yaml":true},{"content":"The <xref href=\"System.CodeDom.CodeExpression\"></xref> on the right of the operator.","nodes":[{"pos":[0,84],"content":"The <ph id=\"ph1\">&lt;xref href=\"System.CodeDom.CodeExpression\"&gt;&lt;/xref&gt;</ph> on the right of the operator.","source":"The <xref href=\"System.CodeDom.CodeExpression\"></xref> on the right of the operator."}],"pos":[6494,6579],"yaml":true},{"content":"Gets or sets the code expression on the left of the operator.","nodes":[{"pos":[0,61],"content":"Gets or sets the code expression on the left of the operator.","nodes":[{"content":"Gets or sets the code expression on the left of the operator.","pos":[0,61]}]}],"pos":[7687,7749],"yaml":true},{"content":"A <xref href=\"System.CodeDom.CodeExpression\"></xref> that indicates the left operand.","nodes":[{"pos":[0,85],"content":"A <ph id=\"ph1\">&lt;xref href=\"System.CodeDom.CodeExpression\"&gt;&lt;/xref&gt;</ph> that indicates the left operand.","source":"A <xref href=\"System.CodeDom.CodeExpression\"></xref> that indicates the left operand."}],"pos":[7901,7987],"yaml":true},{"content":"Gets or sets the operator in the binary operator expression.","nodes":[{"pos":[0,60],"content":"Gets or sets the operator in the binary operator expression.","nodes":[{"content":"Gets or sets the operator in the binary operator expression.","pos":[0,60]}]}],"pos":[9118,9179],"yaml":true},{"content":"A binary operator performs an evaluation on two operands. Some examples of binary operators are equality (`==`), addition (`+`), and bitwise (`|`) operators. Many commonly used binary operators can be found in the <xref:System.CodeDom.CodeBinaryOperatorType> enumeration.","nodes":[{"pos":[0,271],"content":"A binary operator performs an evaluation on two operands. Some examples of binary operators are equality (`==`), addition (`+`), and bitwise (`|`) operators. Many commonly used binary operators can be found in the <xref:System.CodeDom.CodeBinaryOperatorType> enumeration.","nodes":[{"content":"A binary operator performs an evaluation on two operands.","pos":[0,57]},{"content":"Some examples of binary operators are equality (<ph id=\"ph1\">`==`</ph>), addition (<ph id=\"ph2\">`+`</ph>), and bitwise (<ph id=\"ph3\">`|`</ph>) operators.","pos":[58,157],"source":" Some examples of binary operators are equality (`==`), addition (`+`), and bitwise (`|`) operators."},{"content":"Many commonly used binary operators can be found in the <ph id=\"ph1\">&lt;xref:System.CodeDom.CodeBinaryOperatorType&gt;</ph> enumeration.","pos":[158,271],"source":" Many commonly used binary operators can be found in the <xref:System.CodeDom.CodeBinaryOperatorType> enumeration."}]}],"pos":[9190,9462],"yaml":true,"extradata":"MT"},{"content":"A <xref href=\"System.CodeDom.CodeBinaryOperatorType\"></xref> that indicates the type of operator in the expression.","nodes":[{"pos":[0,115],"content":"A <ph id=\"ph1\">&lt;xref href=\"System.CodeDom.CodeBinaryOperatorType\"&gt;&lt;/xref&gt;</ph> that indicates the type of operator in the expression.","source":"A <xref href=\"System.CodeDom.CodeBinaryOperatorType\"></xref> that indicates the type of operator in the expression."}],"pos":[9634,9750],"yaml":true},{"content":"Gets or sets the code expression on the right of the operator.","nodes":[{"pos":[0,62],"content":"Gets or sets the code expression on the right of the operator.","nodes":[{"content":"Gets or sets the code expression on the right of the operator.","pos":[0,62]}]}],"pos":[10867,10930],"yaml":true},{"content":"A <xref href=\"System.CodeDom.CodeExpression\"></xref> that indicates the right operand.","nodes":[{"pos":[0,86],"content":"A <ph id=\"ph1\">&lt;xref href=\"System.CodeDom.CodeExpression\"&gt;&lt;/xref&gt;</ph> that indicates the right operand.","source":"A <xref href=\"System.CodeDom.CodeExpression\"></xref> that indicates the right operand."}],"pos":[11083,11170],"yaml":true}],"content":"### YamlMime:ManagedReference\nitems:\n- uid: System.CodeDom.CodeBinaryOperatorExpression\n  commentId: T:System.CodeDom.CodeBinaryOperatorExpression\n  id: CodeBinaryOperatorExpression\n  children:\n  - System.CodeDom.CodeBinaryOperatorExpression.#ctor\n  - System.CodeDom.CodeBinaryOperatorExpression.#ctor(System.CodeDom.CodeExpression,System.CodeDom.CodeBinaryOperatorType,System.CodeDom.CodeExpression)\n  - System.CodeDom.CodeBinaryOperatorExpression.Left\n  - System.CodeDom.CodeBinaryOperatorExpression.Operator\n  - System.CodeDom.CodeBinaryOperatorExpression.Right\n  langs:\n  - csharp\n  name: CodeBinaryOperatorExpression\n  nameWithType: CodeBinaryOperatorExpression\n  fullName: System.CodeDom.CodeBinaryOperatorExpression\n  type: Class\n  assemblies:\n  - System\n  - System.CodeDom\n  namespace: System.CodeDom\n  summary: Represents an expression that consists of a binary operation between two expressions.\n  remarks: <xref:System.CodeDom.CodeBinaryOperatorExpression> can be used to represent code expressions that include a binary operator. Some examples of binary operators are equality (`==`), addition (`+`), and bitwise (`|`) operators. The <xref:System.CodeDom.CodeBinaryOperatorType> enumeration represents a set of basic, commonly used binary operators that are supported in many languages.\n  example:\n  - \"This example demonstrates use of a <xref:System.CodeDom.CodeBinaryOperatorExpression> to add two numbers together.  \\n  \\n [!code-cpp[CodeBinaryOperatorExpression#2](~/samples/snippets/cpp/VS_Snippets_CLR/CodeBinaryOperatorExpression/CPP/codebinaryoperatorexpressionexample.cpp#2)]\\n [!code-csharp[CodeBinaryOperatorExpression#2](~/samples/snippets/csharp/VS_Snippets_CLR/CodeBinaryOperatorExpression/CS/codebinaryoperatorexpressionexample.cs#2)]\\n [!code-vb[CodeBinaryOperatorExpression#2](~/samples/snippets/visualbasic/VS_Snippets_CLR/CodeBinaryOperatorExpression/VB/codebinaryoperatorexpressionexample.vb#2)]\"\n  syntax:\n    content: >-\n      [System.Runtime.InteropServices.ClassInterface(System.Runtime.InteropServices.ClassInterfaceType.AutoDispatch)]\n\n      [System.Runtime.InteropServices.ComVisible(true)]\n\n      public class CodeBinaryOperatorExpression : System.CodeDom.CodeExpression\n  inheritance:\n  - System.Object\n  - System.CodeDom.CodeObject\n  - System.CodeDom.CodeExpression\n  implements: []\n  inheritedMembers:\n  - System.CodeDom.CodeObject.UserData\n  - System.Object.Equals(System.Object)\n  - System.Object.Equals(System.Object,System.Object)\n  - System.Object.GetHashCode\n  - System.Object.GetType\n  - System.Object.MemberwiseClone\n  - System.Object.ReferenceEquals(System.Object,System.Object)\n  - System.Object.ToString\n  attributes:\n  - type: System.Runtime.InteropServices.ClassInterfaceAttribute\n  - type: System.Runtime.InteropServices.ComVisibleAttribute\n  version:\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - xamarinmac-3.0\n  monikers:\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - xamarinmac-3.0\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.CodeDom/CodeBinaryOperatorExpression.xml\n  ms.technology:\n  - dotnet-standard\n  author: rpetrusha\n  ms.author: ronpet\n  manager: wpickett\n- uid: System.CodeDom.CodeBinaryOperatorExpression.#ctor\n  commentId: M:System.CodeDom.CodeBinaryOperatorExpression.#ctor\n  id: '#ctor'\n  parent: System.CodeDom.CodeBinaryOperatorExpression\n  langs:\n  - csharp\n  name: CodeBinaryOperatorExpression()\n  nameWithType: CodeBinaryOperatorExpression.CodeBinaryOperatorExpression()\n  fullName: CodeBinaryOperatorExpression.CodeBinaryOperatorExpression()\n  type: Constructor\n  assemblies:\n  - System\n  - System.CodeDom\n  namespace: System.CodeDom\n  summary: Initializes a new instance of the <xref href=\"System.CodeDom.CodeBinaryOperatorExpression\"></xref> class.\n  syntax:\n    content: public CodeBinaryOperatorExpression ();\n    parameters: []\n  overload: System.CodeDom.CodeBinaryOperatorExpression.#ctor*\n  exceptions: []\n  version:\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - xamarinmac-3.0\n  monikers:\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - xamarinmac-3.0\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.CodeDom/CodeBinaryOperatorExpression.xml\n  ms.technology:\n  - dotnet-standard\n  author: rpetrusha\n  ms.author: ronpet\n  manager: wpickett\n- uid: System.CodeDom.CodeBinaryOperatorExpression.#ctor(System.CodeDom.CodeExpression,System.CodeDom.CodeBinaryOperatorType,System.CodeDom.CodeExpression)\n  commentId: M:System.CodeDom.CodeBinaryOperatorExpression.#ctor(System.CodeDom.CodeExpression,System.CodeDom.CodeBinaryOperatorType,System.CodeDom.CodeExpression)\n  id: '#ctor(System.CodeDom.CodeExpression,System.CodeDom.CodeBinaryOperatorType,System.CodeDom.CodeExpression)'\n  parent: System.CodeDom.CodeBinaryOperatorExpression\n  langs:\n  - csharp\n  name: CodeBinaryOperatorExpression(CodeExpression, CodeBinaryOperatorType, CodeExpression)\n  nameWithType: CodeBinaryOperatorExpression.CodeBinaryOperatorExpression(CodeExpression, CodeBinaryOperatorType, CodeExpression)\n  fullName: CodeBinaryOperatorExpression.CodeBinaryOperatorExpression(CodeExpression, CodeBinaryOperatorType, CodeExpression)\n  type: Constructor\n  assemblies:\n  - System\n  - System.CodeDom\n  namespace: System.CodeDom\n  summary: Initializes a new instance of the <xref href=\"System.CodeDom.CodeBinaryOperatorExpression\"></xref> class using the specified parameters.\n  syntax:\n    content: public CodeBinaryOperatorExpression (System.CodeDom.CodeExpression left, System.CodeDom.CodeBinaryOperatorType op, System.CodeDom.CodeExpression right);\n    parameters:\n    - id: left\n      type: System.CodeDom.CodeExpression\n      description: The <xref href=\"System.CodeDom.CodeExpression\"></xref> on the left of the operator.\n    - id: op\n      type: System.CodeDom.CodeBinaryOperatorType\n      description: A <xref href=\"System.CodeDom.CodeBinaryOperatorType\"></xref> indicating the type of operator.\n    - id: right\n      type: System.CodeDom.CodeExpression\n      description: The <xref href=\"System.CodeDom.CodeExpression\"></xref> on the right of the operator.\n  overload: System.CodeDom.CodeBinaryOperatorExpression.#ctor*\n  exceptions: []\n  version:\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - xamarinmac-3.0\n  monikers:\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - xamarinmac-3.0\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.CodeDom/CodeBinaryOperatorExpression.xml\n  ms.technology:\n  - dotnet-standard\n  author: rpetrusha\n  ms.author: ronpet\n  manager: wpickett\n- uid: System.CodeDom.CodeBinaryOperatorExpression.Left\n  commentId: P:System.CodeDom.CodeBinaryOperatorExpression.Left\n  id: Left\n  parent: System.CodeDom.CodeBinaryOperatorExpression\n  langs:\n  - csharp\n  name: Left\n  nameWithType: CodeBinaryOperatorExpression.Left\n  fullName: CodeBinaryOperatorExpression.Left\n  type: Property\n  assemblies:\n  - System\n  - System.CodeDom\n  namespace: System.CodeDom\n  summary: Gets or sets the code expression on the left of the operator.\n  syntax:\n    content: public System.CodeDom.CodeExpression Left { get; set; }\n    return:\n      type: System.CodeDom.CodeExpression\n      description: A <xref href=\"System.CodeDom.CodeExpression\"></xref> that indicates the left operand.\n  overload: System.CodeDom.CodeBinaryOperatorExpression.Left*\n  exceptions: []\n  version:\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - xamarinmac-3.0\n  monikers:\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - xamarinmac-3.0\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.CodeDom/CodeBinaryOperatorExpression.xml\n  ms.technology:\n  - dotnet-standard\n  author: rpetrusha\n  ms.author: ronpet\n  manager: wpickett\n- uid: System.CodeDom.CodeBinaryOperatorExpression.Operator\n  commentId: P:System.CodeDom.CodeBinaryOperatorExpression.Operator\n  id: Operator\n  parent: System.CodeDom.CodeBinaryOperatorExpression\n  langs:\n  - csharp\n  name: Operator\n  nameWithType: CodeBinaryOperatorExpression.Operator\n  fullName: CodeBinaryOperatorExpression.Operator\n  type: Property\n  assemblies:\n  - System\n  - System.CodeDom\n  namespace: System.CodeDom\n  summary: Gets or sets the operator in the binary operator expression.\n  remarks: A binary operator performs an evaluation on two operands. Some examples of binary operators are equality (`==`), addition (`+`), and bitwise (`|`) operators. Many commonly used binary operators can be found in the <xref:System.CodeDom.CodeBinaryOperatorType> enumeration.\n  syntax:\n    content: public System.CodeDom.CodeBinaryOperatorType Operator { get; set; }\n    return:\n      type: System.CodeDom.CodeBinaryOperatorType\n      description: A <xref href=\"System.CodeDom.CodeBinaryOperatorType\"></xref> that indicates the type of operator in the expression.\n  overload: System.CodeDom.CodeBinaryOperatorExpression.Operator*\n  exceptions: []\n  version:\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - xamarinmac-3.0\n  monikers:\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - xamarinmac-3.0\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.CodeDom/CodeBinaryOperatorExpression.xml\n  ms.technology:\n  - dotnet-standard\n  author: rpetrusha\n  ms.author: ronpet\n  manager: wpickett\n- uid: System.CodeDom.CodeBinaryOperatorExpression.Right\n  commentId: P:System.CodeDom.CodeBinaryOperatorExpression.Right\n  id: Right\n  parent: System.CodeDom.CodeBinaryOperatorExpression\n  langs:\n  - csharp\n  name: Right\n  nameWithType: CodeBinaryOperatorExpression.Right\n  fullName: CodeBinaryOperatorExpression.Right\n  type: Property\n  assemblies:\n  - System\n  - System.CodeDom\n  namespace: System.CodeDom\n  summary: Gets or sets the code expression on the right of the operator.\n  syntax:\n    content: public System.CodeDom.CodeExpression Right { get; set; }\n    return:\n      type: System.CodeDom.CodeExpression\n      description: A <xref href=\"System.CodeDom.CodeExpression\"></xref> that indicates the right operand.\n  overload: System.CodeDom.CodeBinaryOperatorExpression.Right*\n  exceptions: []\n  version:\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - xamarinmac-3.0\n  monikers:\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - xamarinmac-3.0\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.CodeDom/CodeBinaryOperatorExpression.xml\n  ms.technology:\n  - dotnet-standard\n  author: rpetrusha\n  ms.author: ronpet\n  manager: wpickett\nreferences:\n- uid: System.CodeDom.CodeExpression\n  parent: System.CodeDom\n  isExternal: false\n  name: CodeExpression\n  nameWithType: CodeExpression\n  fullName: System.CodeDom.CodeExpression\n- uid: System.CodeDom.CodeBinaryOperatorExpression.#ctor\n  parent: System.CodeDom.CodeBinaryOperatorExpression\n  isExternal: false\n  name: CodeBinaryOperatorExpression()\n  nameWithType: CodeBinaryOperatorExpression.CodeBinaryOperatorExpression()\n  fullName: CodeBinaryOperatorExpression.CodeBinaryOperatorExpression()\n- uid: System.CodeDom.CodeBinaryOperatorExpression.#ctor(System.CodeDom.CodeExpression,System.CodeDom.CodeBinaryOperatorType,System.CodeDom.CodeExpression)\n  parent: System.CodeDom.CodeBinaryOperatorExpression\n  isExternal: false\n  name: CodeBinaryOperatorExpression(CodeExpression, CodeBinaryOperatorType, CodeExpression)\n  nameWithType: CodeBinaryOperatorExpression.CodeBinaryOperatorExpression(CodeExpression, CodeBinaryOperatorType, CodeExpression)\n  fullName: CodeBinaryOperatorExpression.CodeBinaryOperatorExpression(CodeExpression, CodeBinaryOperatorType, CodeExpression)\n- uid: System.CodeDom.CodeBinaryOperatorType\n  parent: System.CodeDom\n  isExternal: false\n  name: CodeBinaryOperatorType\n  nameWithType: CodeBinaryOperatorType\n  fullName: System.CodeDom.CodeBinaryOperatorType\n- uid: System.CodeDom.CodeBinaryOperatorExpression.Left\n  parent: System.CodeDom.CodeBinaryOperatorExpression\n  isExternal: false\n  name: Left\n  nameWithType: CodeBinaryOperatorExpression.Left\n  fullName: CodeBinaryOperatorExpression.Left\n- uid: System.CodeDom.CodeBinaryOperatorExpression.Operator\n  parent: System.CodeDom.CodeBinaryOperatorExpression\n  isExternal: false\n  name: Operator\n  nameWithType: CodeBinaryOperatorExpression.Operator\n  fullName: CodeBinaryOperatorExpression.Operator\n- uid: System.CodeDom.CodeBinaryOperatorExpression.Right\n  parent: System.CodeDom.CodeBinaryOperatorExpression\n  isExternal: false\n  name: Right\n  nameWithType: CodeBinaryOperatorExpression.Right\n  fullName: CodeBinaryOperatorExpression.Right\n- uid: System.CodeDom.CodeBinaryOperatorExpression.#ctor*\n  parent: System.CodeDom.CodeBinaryOperatorExpression\n  isExternal: false\n  name: CodeBinaryOperatorExpression\n  nameWithType: CodeBinaryOperatorExpression.CodeBinaryOperatorExpression\n  fullName: CodeBinaryOperatorExpression.CodeBinaryOperatorExpression\n  monikers:\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - xamarinmac-3.0\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.CodeDom/CodeBinaryOperatorExpression.xml\n- uid: System.CodeDom.CodeBinaryOperatorExpression.Left*\n  parent: System.CodeDom.CodeBinaryOperatorExpression\n  isExternal: false\n  name: Left\n  nameWithType: CodeBinaryOperatorExpression.Left\n  fullName: CodeBinaryOperatorExpression.Left\n  monikers:\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - xamarinmac-3.0\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.CodeDom/CodeBinaryOperatorExpression.xml\n- uid: System.CodeDom.CodeBinaryOperatorExpression.Operator*\n  parent: System.CodeDom.CodeBinaryOperatorExpression\n  isExternal: false\n  name: Operator\n  nameWithType: CodeBinaryOperatorExpression.Operator\n  fullName: CodeBinaryOperatorExpression.Operator\n  monikers:\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - xamarinmac-3.0\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.CodeDom/CodeBinaryOperatorExpression.xml\n- uid: System.CodeDom.CodeBinaryOperatorExpression.Right*\n  parent: System.CodeDom.CodeBinaryOperatorExpression\n  isExternal: false\n  name: Right\n  nameWithType: CodeBinaryOperatorExpression.Right\n  fullName: CodeBinaryOperatorExpression.Right\n  monikers:\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - xamarinmac-3.0\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.CodeDom/CodeBinaryOperatorExpression.xml\n- uid: System.Object.Equals(System.Object)\n  parent: System.Object\n  isExternal: false\n  name: Equals(Object)\n  nameWithType: Object.Equals(Object)\n  fullName: Object.Equals(Object)\n- uid: System.Object.Equals(System.Object,System.Object)\n  parent: System.Object\n  isExternal: false\n  name: Equals(Object, Object)\n  nameWithType: Object.Equals(Object, Object)\n  fullName: Object.Equals(Object, Object)\n- uid: System.Object.GetHashCode\n  parent: System.Object\n  isExternal: false\n  name: GetHashCode()\n  nameWithType: Object.GetHashCode()\n  fullName: Object.GetHashCode()\n- uid: System.Object.GetType\n  parent: System.Object\n  isExternal: false\n  name: GetType()\n  nameWithType: Object.GetType()\n  fullName: Object.GetType()\n- uid: System.Object.MemberwiseClone\n  parent: System.Object\n  isExternal: false\n  name: MemberwiseClone()\n  nameWithType: Object.MemberwiseClone()\n  fullName: Object.MemberwiseClone()\n- uid: System.Object.ReferenceEquals(System.Object,System.Object)\n  parent: System.Object\n  isExternal: false\n  name: ReferenceEquals(Object, Object)\n  nameWithType: Object.ReferenceEquals(Object, Object)\n  fullName: Object.ReferenceEquals(Object, Object)\n- uid: System.Object.ToString\n  parent: System.Object\n  isExternal: false\n  name: ToString()\n  nameWithType: Object.ToString()\n  fullName: Object.ToString()\n- uid: System.CodeDom.CodeObject.UserData\n  parent: System.CodeDom.CodeObject\n  isExternal: false\n  name: UserData\n  nameWithType: CodeObject.UserData\n  fullName: CodeObject.UserData\n"}