{"nodes":[{"content":"Specifies the <xref href=\"System.ComponentModel.LicenseProvider\"></xref> to use with a class. This class cannot be inherited.","nodes":[{"pos":[0,125],"content":"Specifies the <xref href=\"System.ComponentModel.LicenseProvider\"></xref> to use with a class. This class cannot be inherited.","nodes":[{"content":"Specifies the <ph id=\"ph1\">&lt;xref href=\"System.ComponentModel.LicenseProvider\"&gt;&lt;/xref&gt;</ph> to use with a class.","pos":[0,93],"source":"Specifies the <xref href=\"System.ComponentModel.LicenseProvider\"></xref> to use with a class."},{"content":"This class cannot be inherited.","pos":[94,125]}]}],"pos":[1008,1134],"yaml":true},{"content":"When you create a component that you want to license, you must specify the <xref:System.ComponentModel.LicenseProvider> by marking the component with a <xref:System.ComponentModel.LicenseProviderAttribute>.  \n  \n Use the <xref:System.ComponentModel.LicenseProviderAttribute.LicenseProvider%2A> property to get the <xref:System.Type> of the <xref:System.ComponentModel.LicenseProvider>.  \n  \n For more information about attributes, see [Attributes](http://msdn.microsoft.com/library/30386922-1e00-4602-9ebf-526b271a8b87). For more information about licensing, see [How to: License Components and Controls](http://msdn.microsoft.com/library/8e66c1ed-a445-4b26-8185-990b6e2bbd57).  \n  \n> [!NOTE]\n>  The <xref:System.Security.Permissions.HostProtectionAttribute> attribute applied to this class has the following <xref:System.Security.Permissions.HostProtectionAttribute.Resources%2A> property value: <xref:System.Security.Permissions.HostProtectionResource.SharedState>. The <xref:System.Security.Permissions.HostProtectionAttribute> does not affect desktop applications (which are typically started by double-clicking an icon, typing a command, or entering a URL in a browser). For more information, see the <xref:System.Security.Permissions.HostProtectionAttribute> class or [SQL Server Programming and Host Protection Attributes](~/docs/framework/performance/sql-server-programming-and-host-protection-attributes.md).","nodes":[{"pos":[0,206],"content":"When you create a component that you want to license, you must specify the <xref:System.ComponentModel.LicenseProvider> by marking the component with a <xref:System.ComponentModel.LicenseProviderAttribute>.","nodes":[{"content":"When you create a component that you want to license, you must specify the <ph id=\"ph1\">&lt;xref:System.ComponentModel.LicenseProvider&gt;</ph> by marking the component with a <ph id=\"ph2\">&lt;xref:System.ComponentModel.LicenseProviderAttribute&gt;</ph>.","pos":[0,206],"source":"When you create a component that you want to license, you must specify the <xref:System.ComponentModel.LicenseProvider> by marking the component with a <xref:System.ComponentModel.LicenseProviderAttribute>."}]},{"pos":[213,385],"content":"Use the <xref:System.ComponentModel.LicenseProviderAttribute.LicenseProvider%2A> property to get the <xref:System.Type> of the <xref:System.ComponentModel.LicenseProvider>.","nodes":[{"content":"Use the <ph id=\"ph1\">&lt;xref:System.ComponentModel.LicenseProviderAttribute.LicenseProvider%2A&gt;</ph> property to get the <ph id=\"ph2\">&lt;xref:System.Type&gt;</ph> of the <ph id=\"ph3\">&lt;xref:System.ComponentModel.LicenseProvider&gt;</ph>.","pos":[0,172],"source":"Use the <xref:System.ComponentModel.LicenseProviderAttribute.LicenseProvider%2A> property to get the <xref:System.Type> of the <xref:System.ComponentModel.LicenseProvider>."}]},{"pos":[392,677],"content":"For more information about attributes, see [Attributes](http://msdn.microsoft.com/library/30386922-1e00-4602-9ebf-526b271a8b87). For more information about licensing, see [How to: License Components and Controls](http://msdn.microsoft.com/library/8e66c1ed-a445-4b26-8185-990b6e2bbd57).","nodes":[{"content":"For more information about attributes, see <bpt id=\"p1\">[</bpt>Attributes<ept id=\"p1\">](http://msdn.microsoft.com/library/30386922-1e00-4602-9ebf-526b271a8b87)</ept>.","pos":[0,128],"source":"For more information about attributes, see [Attributes](http://msdn.microsoft.com/library/30386922-1e00-4602-9ebf-526b271a8b87)."},{"content":"For more information about licensing, see <bpt id=\"p1\">[</bpt>How to: License Components and Controls<ept id=\"p1\">](http://msdn.microsoft.com/library/8e66c1ed-a445-4b26-8185-990b6e2bbd57)</ept>.","pos":[129,285],"source":" For more information about licensing, see [How to: License Components and Controls](http://msdn.microsoft.com/library/8e66c1ed-a445-4b26-8185-990b6e2bbd57)."}]},{"pos":[685,1417],"content":"[!NOTE]\n The <xref:System.Security.Permissions.HostProtectionAttribute> attribute applied to this class has the following <xref:System.Security.Permissions.HostProtectionAttribute.Resources%2A> property value: <xref:System.Security.Permissions.HostProtectionResource.SharedState>. The <xref:System.Security.Permissions.HostProtectionAttribute> does not affect desktop applications (which are typically started by double-clicking an icon, typing a command, or entering a URL in a browser). For more information, see the <xref:System.Security.Permissions.HostProtectionAttribute> class or [SQL Server Programming and Host Protection Attributes](~/docs/framework/performance/sql-server-programming-and-host-protection-attributes.md).","leadings":["","> "],"nodes":[{"content":" The <xref:System.Security.Permissions.HostProtectionAttribute> attribute applied to this class has the following <xref:System.Security.Permissions.HostProtectionAttribute.Resources%2A> property value: <xref:System.Security.Permissions.HostProtectionResource.SharedState>. The <xref:System.Security.Permissions.HostProtectionAttribute> does not affect desktop applications (which are typically started by double-clicking an icon, typing a command, or entering a URL in a browser). For more information, see the <xref:System.Security.Permissions.HostProtectionAttribute> class or [SQL Server Programming and Host Protection Attributes](~/docs/framework/performance/sql-server-programming-and-host-protection-attributes.md).","pos":[8,730],"nodes":[{"content":"The <ph id=\"ph1\">&lt;xref:System.Security.Permissions.HostProtectionAttribute&gt;</ph> attribute applied to this class has the following <ph id=\"ph2\">&lt;xref:System.Security.Permissions.HostProtectionAttribute.Resources%2A&gt;</ph> property value: <ph id=\"ph3\">&lt;xref:System.Security.Permissions.HostProtectionResource.SharedState&gt;</ph>.","pos":[1,272],"source":" The <xref:System.Security.Permissions.HostProtectionAttribute> attribute applied to this class has the following <xref:System.Security.Permissions.HostProtectionAttribute.Resources%2A> property value: <xref:System.Security.Permissions.HostProtectionResource.SharedState>."},{"content":"The <ph id=\"ph1\">&lt;xref:System.Security.Permissions.HostProtectionAttribute&gt;</ph> does not affect desktop applications (which are typically started by double-clicking an icon, typing a command, or entering a URL in a browser).","pos":[273,480],"source":" The <xref:System.Security.Permissions.HostProtectionAttribute> does not affect desktop applications (which are typically started by double-clicking an icon, typing a command, or entering a URL in a browser)."},{"content":"For more information, see the <ph id=\"ph1\">&lt;xref:System.Security.Permissions.HostProtectionAttribute&gt;</ph> class or <bpt id=\"p1\">[</bpt>SQL Server Programming and Host Protection Attributes<ept id=\"p1\">](~/docs/framework/performance/sql-server-programming-and-host-protection-attributes.md)</ept>.","pos":[481,722],"source":" For more information, see the <xref:System.Security.Permissions.HostProtectionAttribute> class or [SQL Server Programming and Host Protection Attributes](~/docs/framework/performance/sql-server-programming-and-host-protection-attributes.md)."}]}]}],"pos":[1145,2572],"yaml":true,"extradata":"MT"},{"content":"Initializes a new instance of the <xref href=\"System.ComponentModel.LicenseProviderAttribute\"></xref> class without a license provider.","nodes":[{"pos":[0,135],"content":"Initializes a new instance of the <ph id=\"ph1\">&lt;xref href=\"System.ComponentModel.LicenseProviderAttribute\"&gt;&lt;/xref&gt;</ph> class without a license provider.","source":"Initializes a new instance of the <xref href=\"System.ComponentModel.LicenseProviderAttribute\"></xref> class without a license provider."}],"pos":[9028,9164],"yaml":true},{"content":"Initializes a new instance of the <xref href=\"System.ComponentModel.LicenseProviderAttribute\"></xref> class with the specified type.","nodes":[{"pos":[0,132],"content":"Initializes a new instance of the <ph id=\"ph1\">&lt;xref href=\"System.ComponentModel.LicenseProviderAttribute\"&gt;&lt;/xref&gt;</ph> class with the specified type.","source":"Initializes a new instance of the <xref href=\"System.ComponentModel.LicenseProviderAttribute\"></xref> class with the specified type."}],"pos":[10663,10796],"yaml":true},{"content":"The fully qualified name of the license provider class.","nodes":[{"pos":[0,55],"content":"The fully qualified name of the license provider class.","nodes":[{"content":"The fully qualified name of the license provider class.","pos":[0,55]}]}],"pos":[10950,11006],"yaml":true},{"content":"Initializes a new instance of the <xref href=\"System.ComponentModel.LicenseProviderAttribute\"></xref> class with the specified type of license provider.","nodes":[{"pos":[0,152],"content":"Initializes a new instance of the <ph id=\"ph1\">&lt;xref href=\"System.ComponentModel.LicenseProviderAttribute\"&gt;&lt;/xref&gt;</ph> class with the specified type of license provider.","source":"Initializes a new instance of the <xref href=\"System.ComponentModel.LicenseProviderAttribute\"></xref> class with the specified type of license provider."}],"pos":[12415,12568],"yaml":true},{"content":"A <xref href=\"System.Type\"></xref> that represents the type of the license provider class.","nodes":[{"pos":[0,90],"content":"A <ph id=\"ph1\">&lt;xref href=\"System.Type\"&gt;&lt;/xref&gt;</ph> that represents the type of the license provider class.","source":"A <xref href=\"System.Type\"></xref> that represents the type of the license provider class."}],"pos":[12710,12801],"yaml":true},{"content":"Specifies the default value, which is no provider. This `static` field is read-only.","nodes":[{"pos":[0,84],"content":"Specifies the default value, which is no provider. This `static` field is read-only.","nodes":[{"content":"Specifies the default value, which is no provider.","pos":[0,50]},{"content":"This <ph id=\"ph1\">`static`</ph> field is read-only.","pos":[51,84],"source":" This `static` field is read-only."}]}],"pos":[14100,14185],"yaml":true},{"content":"Indicates whether this instance and a specified object are equal.","nodes":[{"pos":[0,65],"content":"Indicates whether this instance and a specified object are equal.","nodes":[{"content":"Indicates whether this instance and a specified object are equal.","pos":[0,65]}]}],"pos":[15677,15743],"yaml":true},{"content":"Another object to compare to.","nodes":[{"pos":[0,29],"content":"Another object to compare to.","nodes":[{"content":"Another object to compare to.","pos":[0,29]}]}],"pos":[15887,15917],"yaml":true},{"content":"`true` if <code>value</code> is equal to this instance; otherwise, `false`.","nodes":[{"pos":[0,75],"content":"<ph id=\"ph1\">`true`</ph> if <bpt id=\"p1\">&lt;code&gt;</bpt><ph id=\"ph2\">value</ph><ept id=\"p1\">&lt;/code&gt;</ept> is equal to this instance; otherwise, <ph id=\"ph3\">`false`</ph>.","source":"`true` if <code>value</code> is equal to this instance; otherwise, `false`."}],"pos":[15975,16053],"yaml":true},{"content":"Returns the hash code for this instance.","nodes":[{"pos":[0,40],"content":"Returns the hash code for this instance.","nodes":[{"content":"Returns the hash code for this instance.","pos":[0,40]}]}],"pos":[17384,17425],"yaml":true},{"content":"A hash code for the current <xref href=\"System.ComponentModel.LicenseProviderAttribute\"></xref>.","nodes":[{"pos":[0,96],"content":"A hash code for the current <ph id=\"ph1\">&lt;xref href=\"System.ComponentModel.LicenseProviderAttribute\"&gt;&lt;/xref&gt;</ph>.","source":"A hash code for the current <xref href=\"System.ComponentModel.LicenseProviderAttribute\"></xref>."}],"pos":[17559,17656],"yaml":true},{"content":"Gets the license provider that must be used with the associated class.","nodes":[{"pos":[0,70],"content":"Gets the license provider that must be used with the associated class.","nodes":[{"content":"Gets the license provider that must be used with the associated class.","pos":[0,70]}]}],"pos":[19012,19083],"yaml":true},{"content":"A <xref href=\"System.Type\"></xref> that represents the type of the license provider. The default value is `null`.","nodes":[{"pos":[0,113],"content":"A <xref href=\"System.Type\"></xref> that represents the type of the license provider. The default value is `null`.","nodes":[{"content":"A <ph id=\"ph1\">&lt;xref href=\"System.Type\"&gt;&lt;/xref&gt;</ph> that represents the type of the license provider.","pos":[0,84],"source":"A <xref href=\"System.Type\"></xref> that represents the type of the license provider."},{"content":"The default value is <ph id=\"ph1\">`null`</ph>.","pos":[85,113],"source":" The default value is `null`."}]}],"pos":[19198,19312],"yaml":true},{"content":"Indicates a unique ID for this attribute type.","nodes":[{"pos":[0,46],"content":"Indicates a unique ID for this attribute type.","nodes":[{"content":"Indicates a unique ID for this attribute type.","pos":[0,46]}]}],"pos":[20618,20665],"yaml":true},{"content":"A unique ID for this attribute type.","nodes":[{"pos":[0,36],"content":"A unique ID for this attribute type.","nodes":[{"content":"A unique ID for this attribute type.","pos":[0,36]}]}],"pos":[20784,20821],"yaml":true}],"content":"### YamlMime:ManagedReference\nitems:\n- uid: System.ComponentModel.LicenseProviderAttribute\n  commentId: T:System.ComponentModel.LicenseProviderAttribute\n  id: LicenseProviderAttribute\n  children:\n  - System.ComponentModel.LicenseProviderAttribute.#ctor\n  - System.ComponentModel.LicenseProviderAttribute.#ctor(System.String)\n  - System.ComponentModel.LicenseProviderAttribute.#ctor(System.Type)\n  - System.ComponentModel.LicenseProviderAttribute.Default\n  - System.ComponentModel.LicenseProviderAttribute.Equals(System.Object)\n  - System.ComponentModel.LicenseProviderAttribute.GetHashCode\n  - System.ComponentModel.LicenseProviderAttribute.LicenseProvider\n  - System.ComponentModel.LicenseProviderAttribute.TypeId\n  langs:\n  - csharp\n  name: LicenseProviderAttribute\n  nameWithType: LicenseProviderAttribute\n  fullName: System.ComponentModel.LicenseProviderAttribute\n  type: Class\n  assemblies:\n  - System\n  - netstandard\n  - System.ComponentModel.TypeConverter\n  namespace: System.ComponentModel\n  summary: Specifies the <xref href=\"System.ComponentModel.LicenseProvider\"></xref> to use with a class. This class cannot be inherited.\n  remarks: \"When you create a component that you want to license, you must specify the <xref:System.ComponentModel.LicenseProvider> by marking the component with a <xref:System.ComponentModel.LicenseProviderAttribute>.  \\n  \\n Use the <xref:System.ComponentModel.LicenseProviderAttribute.LicenseProvider%2A> property to get the <xref:System.Type> of the <xref:System.ComponentModel.LicenseProvider>.  \\n  \\n For more information about attributes, see [Attributes](http://msdn.microsoft.com/library/30386922-1e00-4602-9ebf-526b271a8b87). For more information about licensing, see [How to: License Components and Controls](http://msdn.microsoft.com/library/8e66c1ed-a445-4b26-8185-990b6e2bbd57).  \\n  \\n> [!NOTE]\\n>  The <xref:System.Security.Permissions.HostProtectionAttribute> attribute applied to this class has the following <xref:System.Security.Permissions.HostProtectionAttribute.Resources%2A> property value: <xref:System.Security.Permissions.HostProtectionResource.SharedState>. The <xref:System.Security.Permissions.HostProtectionAttribute> does not affect desktop applications (which are typically started by double-clicking an icon, typing a command, or entering a URL in a browser). For more information, see the <xref:System.Security.Permissions.HostProtectionAttribute> class or [SQL Server Programming and Host Protection Attributes](~/docs/framework/performance/sql-server-programming-and-host-protection-attributes.md).\"\n  example:\n  - \"The following code example uses the <xref:System.ComponentModel.LicFileLicenseProvider> as the license provider for `MyControl`.  \\n  \\n [!code-cpp[Classic LicenseProviderAttribute Example#1](~/samples/snippets/cpp/VS_Snippets_Winforms/Classic LicenseProviderAttribute Example/CPP/source.cpp#1)]\\n [!code-csharp[Classic LicenseProviderAttribute Example#1](~/samples/snippets/csharp/VS_Snippets_Winforms/Classic LicenseProviderAttribute Example/CS/source.cs#1)]\\n [!code-vb[Classic LicenseProviderAttribute Example#1](~/samples/snippets/visualbasic/VS_Snippets_Winforms/Classic LicenseProviderAttribute Example/VB/source.vb#1)]  \\n  \\n The next code example creates an instance of the `MyControl` class. Then, it gets the attributes for the class, and prints the name of the license provider used by `myNewControl`.  \\n  \\n [!code-cpp[Classic LicenseProviderAttribute Example#2](~/samples/snippets/cpp/VS_Snippets_Winforms/Classic LicenseProviderAttribute Example/CPP/source.cpp#2)]\\n [!code-csharp[Classic LicenseProviderAttribute Example#2](~/samples/snippets/csharp/VS_Snippets_Winforms/Classic LicenseProviderAttribute Example/CS/source.cs#2)]\\n [!code-vb[Classic LicenseProviderAttribute Example#2](~/samples/snippets/visualbasic/VS_Snippets_Winforms/Classic LicenseProviderAttribute Example/VB/source.vb#2)]\"\n  syntax:\n    content: >-\n      [System.AttributeUsage(System.AttributeTargets.Class, AllowMultiple=false, Inherited=false)]\n\n      public sealed class LicenseProviderAttribute : Attribute\n  inheritance:\n  - System.Object\n  - System.Attribute\n  implements: []\n  inheritedMembers:\n  - System.Attribute.GetCustomAttribute(System.Reflection.Assembly,System.Type)\n  - System.Attribute.GetCustomAttribute(System.Reflection.Assembly,System.Type,System.Boolean)\n  - System.Attribute.GetCustomAttribute(System.Reflection.MemberInfo,System.Type)\n  - System.Attribute.GetCustomAttribute(System.Reflection.MemberInfo,System.Type,System.Boolean)\n  - System.Attribute.GetCustomAttribute(System.Reflection.Module,System.Type)\n  - System.Attribute.GetCustomAttribute(System.Reflection.Module,System.Type,System.Boolean)\n  - System.Attribute.GetCustomAttribute(System.Reflection.ParameterInfo,System.Type)\n  - System.Attribute.GetCustomAttribute(System.Reflection.ParameterInfo,System.Type,System.Boolean)\n  - System.Attribute.GetCustomAttributes(System.Reflection.Assembly)\n  - System.Attribute.GetCustomAttributes(System.Reflection.Assembly,System.Boolean)\n  - System.Attribute.GetCustomAttributes(System.Reflection.Assembly,System.Type)\n  - System.Attribute.GetCustomAttributes(System.Reflection.Assembly,System.Type,System.Boolean)\n  - System.Attribute.GetCustomAttributes(System.Reflection.MemberInfo)\n  - System.Attribute.GetCustomAttributes(System.Reflection.MemberInfo,System.Boolean)\n  - System.Attribute.GetCustomAttributes(System.Reflection.MemberInfo,System.Type)\n  - System.Attribute.GetCustomAttributes(System.Reflection.MemberInfo,System.Type,System.Boolean)\n  - System.Attribute.GetCustomAttributes(System.Reflection.Module)\n  - System.Attribute.GetCustomAttributes(System.Reflection.Module,System.Boolean)\n  - System.Attribute.GetCustomAttributes(System.Reflection.Module,System.Type)\n  - System.Attribute.GetCustomAttributes(System.Reflection.Module,System.Type,System.Boolean)\n  - System.Attribute.GetCustomAttributes(System.Reflection.ParameterInfo)\n  - System.Attribute.GetCustomAttributes(System.Reflection.ParameterInfo,System.Boolean)\n  - System.Attribute.GetCustomAttributes(System.Reflection.ParameterInfo,System.Type)\n  - System.Attribute.GetCustomAttributes(System.Reflection.ParameterInfo,System.Type,System.Boolean)\n  - System.Attribute.IsDefaultAttribute\n  - System.Attribute.IsDefined(System.Reflection.Assembly,System.Type)\n  - System.Attribute.IsDefined(System.Reflection.Assembly,System.Type,System.Boolean)\n  - System.Attribute.IsDefined(System.Reflection.MemberInfo,System.Type)\n  - System.Attribute.IsDefined(System.Reflection.MemberInfo,System.Type,System.Boolean)\n  - System.Attribute.IsDefined(System.Reflection.Module,System.Type)\n  - System.Attribute.IsDefined(System.Reflection.Module,System.Type,System.Boolean)\n  - System.Attribute.IsDefined(System.Reflection.ParameterInfo,System.Type)\n  - System.Attribute.IsDefined(System.Reflection.ParameterInfo,System.Type,System.Boolean)\n  - System.Attribute.Match(System.Object)\n  - System.Attribute.System#Runtime#InteropServices#_Attribute#GetIDsOfNames(System.Guid@,System.IntPtr,System.UInt32,System.UInt32,System.IntPtr)\n  - System.Attribute.System#Runtime#InteropServices#_Attribute#GetTypeInfo(System.UInt32,System.UInt32,System.IntPtr)\n  - System.Attribute.System#Runtime#InteropServices#_Attribute#GetTypeInfoCount(System.UInt32@)\n  - System.Attribute.System#Runtime#InteropServices#_Attribute#Invoke(System.UInt32,System.Guid@,System.UInt32,System.Int16,System.IntPtr,System.IntPtr,System.IntPtr,System.IntPtr)\n  - System.Object.Equals(System.Object,System.Object)\n  - System.Object.GetType\n  - System.Object.MemberwiseClone\n  - System.Object.ReferenceEquals(System.Object,System.Object)\n  - System.Object.ToString\n  attributes:\n  - type: System.AttributeUsageAttribute\n  version:\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - netstandard-2.0\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  monikers:\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - netstandard-2.0\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.ComponentModel/LicenseProviderAttribute.xml\n  ms.technology:\n  - dotnet-standard\n  author: stevehoag\n  ms.author: shoag\n  manager: wpickett\n- uid: System.ComponentModel.LicenseProviderAttribute.#ctor\n  commentId: M:System.ComponentModel.LicenseProviderAttribute.#ctor\n  id: '#ctor'\n  parent: System.ComponentModel.LicenseProviderAttribute\n  langs:\n  - csharp\n  name: LicenseProviderAttribute()\n  nameWithType: LicenseProviderAttribute.LicenseProviderAttribute()\n  fullName: LicenseProviderAttribute.LicenseProviderAttribute()\n  type: Constructor\n  assemblies:\n  - System\n  - netstandard\n  - System.ComponentModel.TypeConverter\n  namespace: System.ComponentModel\n  summary: Initializes a new instance of the <xref href=\"System.ComponentModel.LicenseProviderAttribute\"></xref> class without a license provider.\n  syntax:\n    content: public LicenseProviderAttribute ();\n    parameters: []\n  overload: System.ComponentModel.LicenseProviderAttribute.#ctor*\n  exceptions: []\n  version:\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - netstandard-2.0\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  monikers:\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - netstandard-2.0\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.ComponentModel/LicenseProviderAttribute.xml\n  ms.technology:\n  - dotnet-standard\n  author: stevehoag\n  ms.author: shoag\n  manager: wpickett\n- uid: System.ComponentModel.LicenseProviderAttribute.#ctor(System.String)\n  commentId: M:System.ComponentModel.LicenseProviderAttribute.#ctor(System.String)\n  id: '#ctor(System.String)'\n  parent: System.ComponentModel.LicenseProviderAttribute\n  langs:\n  - csharp\n  name: LicenseProviderAttribute(String)\n  nameWithType: LicenseProviderAttribute.LicenseProviderAttribute(String)\n  fullName: LicenseProviderAttribute.LicenseProviderAttribute(String)\n  type: Constructor\n  assemblies:\n  - System\n  - netstandard\n  - System.ComponentModel.TypeConverter\n  namespace: System.ComponentModel\n  summary: Initializes a new instance of the <xref href=\"System.ComponentModel.LicenseProviderAttribute\"></xref> class with the specified type.\n  syntax:\n    content: public LicenseProviderAttribute (string typeName);\n    parameters:\n    - id: typeName\n      type: System.String\n      description: The fully qualified name of the license provider class.\n  overload: System.ComponentModel.LicenseProviderAttribute.#ctor*\n  exceptions: []\n  version:\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - netstandard-2.0\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  monikers:\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - netstandard-2.0\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.ComponentModel/LicenseProviderAttribute.xml\n  ms.technology:\n  - dotnet-standard\n  author: stevehoag\n  ms.author: shoag\n  manager: wpickett\n- uid: System.ComponentModel.LicenseProviderAttribute.#ctor(System.Type)\n  commentId: M:System.ComponentModel.LicenseProviderAttribute.#ctor(System.Type)\n  id: '#ctor(System.Type)'\n  parent: System.ComponentModel.LicenseProviderAttribute\n  langs:\n  - csharp\n  name: LicenseProviderAttribute(Type)\n  nameWithType: LicenseProviderAttribute.LicenseProviderAttribute(Type)\n  fullName: LicenseProviderAttribute.LicenseProviderAttribute(Type)\n  type: Constructor\n  assemblies:\n  - System\n  - netstandard\n  - System.ComponentModel.TypeConverter\n  namespace: System.ComponentModel\n  summary: Initializes a new instance of the <xref href=\"System.ComponentModel.LicenseProviderAttribute\"></xref> class with the specified type of license provider.\n  syntax:\n    content: public LicenseProviderAttribute (Type type);\n    parameters:\n    - id: type\n      type: System.Type\n      description: A <xref href=\"System.Type\"></xref> that represents the type of the license provider class.\n  overload: System.ComponentModel.LicenseProviderAttribute.#ctor*\n  exceptions: []\n  version:\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - netstandard-2.0\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  monikers:\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - netstandard-2.0\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.ComponentModel/LicenseProviderAttribute.xml\n  ms.technology:\n  - dotnet-standard\n  author: stevehoag\n  ms.author: shoag\n  manager: wpickett\n- uid: System.ComponentModel.LicenseProviderAttribute.Default\n  commentId: F:System.ComponentModel.LicenseProviderAttribute.Default\n  id: Default\n  parent: System.ComponentModel.LicenseProviderAttribute\n  langs:\n  - csharp\n  name: Default\n  nameWithType: LicenseProviderAttribute.Default\n  fullName: LicenseProviderAttribute.Default\n  type: Field\n  assemblies:\n  - System\n  - netstandard\n  - System.ComponentModel.TypeConverter\n  namespace: System.ComponentModel\n  summary: Specifies the default value, which is no provider. This `static` field is read-only.\n  syntax:\n    content: public static readonly System.ComponentModel.LicenseProviderAttribute Default;\n    return:\n      type: System.ComponentModel.LicenseProviderAttribute\n      description: ''\n  exceptions: []\n  version:\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - netstandard-2.0\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  monikers:\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - netstandard-2.0\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.ComponentModel/LicenseProviderAttribute.xml\n  ms.technology:\n  - dotnet-standard\n  author: stevehoag\n  ms.author: shoag\n  manager: wpickett\n- uid: System.ComponentModel.LicenseProviderAttribute.Equals(System.Object)\n  commentId: M:System.ComponentModel.LicenseProviderAttribute.Equals(System.Object)\n  id: Equals(System.Object)\n  parent: System.ComponentModel.LicenseProviderAttribute\n  langs:\n  - csharp\n  name: Equals(Object)\n  nameWithType: LicenseProviderAttribute.Equals(Object)\n  fullName: LicenseProviderAttribute.Equals(Object)\n  type: Method\n  assemblies:\n  - System\n  - netstandard\n  - System.ComponentModel.TypeConverter\n  namespace: System.ComponentModel\n  summary: Indicates whether this instance and a specified object are equal.\n  syntax:\n    content: public override bool Equals (object value);\n    parameters:\n    - id: value\n      type: System.Object\n      description: Another object to compare to.\n    return:\n      type: System.Boolean\n      description: '`true` if <code>value</code> is equal to this instance; otherwise, `false`.'\n  overload: System.ComponentModel.LicenseProviderAttribute.Equals*\n  exceptions: []\n  version:\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - netstandard-2.0\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  monikers:\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - netstandard-2.0\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.ComponentModel/LicenseProviderAttribute.xml\n  ms.technology:\n  - dotnet-standard\n  author: stevehoag\n  ms.author: shoag\n  manager: wpickett\n- uid: System.ComponentModel.LicenseProviderAttribute.GetHashCode\n  commentId: M:System.ComponentModel.LicenseProviderAttribute.GetHashCode\n  id: GetHashCode\n  parent: System.ComponentModel.LicenseProviderAttribute\n  langs:\n  - csharp\n  name: GetHashCode()\n  nameWithType: LicenseProviderAttribute.GetHashCode()\n  fullName: LicenseProviderAttribute.GetHashCode()\n  type: Method\n  assemblies:\n  - System\n  - netstandard\n  - System.ComponentModel.TypeConverter\n  namespace: System.ComponentModel\n  summary: Returns the hash code for this instance.\n  syntax:\n    content: public override int GetHashCode ();\n    parameters: []\n    return:\n      type: System.Int32\n      description: A hash code for the current <xref href=\"System.ComponentModel.LicenseProviderAttribute\"></xref>.\n  overload: System.ComponentModel.LicenseProviderAttribute.GetHashCode*\n  exceptions: []\n  version:\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - netstandard-2.0\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  monikers:\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - netstandard-2.0\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.ComponentModel/LicenseProviderAttribute.xml\n  ms.technology:\n  - dotnet-standard\n  author: stevehoag\n  ms.author: shoag\n  manager: wpickett\n- uid: System.ComponentModel.LicenseProviderAttribute.LicenseProvider\n  commentId: P:System.ComponentModel.LicenseProviderAttribute.LicenseProvider\n  id: LicenseProvider\n  parent: System.ComponentModel.LicenseProviderAttribute\n  langs:\n  - csharp\n  name: LicenseProvider\n  nameWithType: LicenseProviderAttribute.LicenseProvider\n  fullName: LicenseProviderAttribute.LicenseProvider\n  type: Property\n  assemblies:\n  - System\n  - netstandard\n  - System.ComponentModel.TypeConverter\n  namespace: System.ComponentModel\n  summary: Gets the license provider that must be used with the associated class.\n  syntax:\n    content: public Type LicenseProvider { get; }\n    return:\n      type: System.Type\n      description: A <xref href=\"System.Type\"></xref> that represents the type of the license provider. The default value is `null`.\n  overload: System.ComponentModel.LicenseProviderAttribute.LicenseProvider*\n  exceptions: []\n  version:\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - netstandard-2.0\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  monikers:\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - netstandard-2.0\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.ComponentModel/LicenseProviderAttribute.xml\n  ms.technology:\n  - dotnet-standard\n  author: stevehoag\n  ms.author: shoag\n  manager: wpickett\n- uid: System.ComponentModel.LicenseProviderAttribute.TypeId\n  commentId: P:System.ComponentModel.LicenseProviderAttribute.TypeId\n  id: TypeId\n  parent: System.ComponentModel.LicenseProviderAttribute\n  langs:\n  - csharp\n  name: TypeId\n  nameWithType: LicenseProviderAttribute.TypeId\n  fullName: LicenseProviderAttribute.TypeId\n  type: Property\n  assemblies:\n  - System\n  - netstandard\n  - System.ComponentModel.TypeConverter\n  namespace: System.ComponentModel\n  summary: Indicates a unique ID for this attribute type.\n  syntax:\n    content: public override object TypeId { get; }\n    return:\n      type: System.Object\n      description: A unique ID for this attribute type.\n  overload: System.ComponentModel.LicenseProviderAttribute.TypeId*\n  exceptions: []\n  version:\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - netstandard-2.0\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  monikers:\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - netstandard-2.0\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.ComponentModel/LicenseProviderAttribute.xml\n  ms.technology:\n  - dotnet-standard\n  author: stevehoag\n  ms.author: shoag\n  manager: wpickett\nreferences:\n- uid: System.Attribute\n  parent: System\n  isExternal: false\n  name: Attribute\n  nameWithType: Attribute\n  fullName: System.Attribute\n- uid: System.ComponentModel.LicenseProviderAttribute.#ctor\n  parent: System.ComponentModel.LicenseProviderAttribute\n  isExternal: false\n  name: LicenseProviderAttribute()\n  nameWithType: LicenseProviderAttribute.LicenseProviderAttribute()\n  fullName: LicenseProviderAttribute.LicenseProviderAttribute()\n- uid: System.ComponentModel.LicenseProviderAttribute.#ctor(System.String)\n  parent: System.ComponentModel.LicenseProviderAttribute\n  isExternal: false\n  name: LicenseProviderAttribute(String)\n  nameWithType: LicenseProviderAttribute.LicenseProviderAttribute(String)\n  fullName: LicenseProviderAttribute.LicenseProviderAttribute(String)\n- uid: System.String\n  parent: System\n  isExternal: false\n  name: String\n  nameWithType: String\n  fullName: System.String\n- uid: System.ComponentModel.LicenseProviderAttribute.#ctor(System.Type)\n  parent: System.ComponentModel.LicenseProviderAttribute\n  isExternal: false\n  name: LicenseProviderAttribute(Type)\n  nameWithType: LicenseProviderAttribute.LicenseProviderAttribute(Type)\n  fullName: LicenseProviderAttribute.LicenseProviderAttribute(Type)\n- uid: System.Type\n  parent: System\n  isExternal: false\n  name: Type\n  nameWithType: Type\n  fullName: System.Type\n- uid: System.ComponentModel.LicenseProviderAttribute.Default\n  parent: System.ComponentModel.LicenseProviderAttribute\n  isExternal: false\n  name: Default\n  nameWithType: LicenseProviderAttribute.Default\n  fullName: LicenseProviderAttribute.Default\n- uid: System.ComponentModel.LicenseProviderAttribute\n  parent: System.ComponentModel\n  isExternal: false\n  name: LicenseProviderAttribute\n  nameWithType: LicenseProviderAttribute\n  fullName: System.ComponentModel.LicenseProviderAttribute\n- uid: System.ComponentModel.LicenseProviderAttribute.Equals(System.Object)\n  parent: System.ComponentModel.LicenseProviderAttribute\n  isExternal: false\n  name: Equals(Object)\n  nameWithType: LicenseProviderAttribute.Equals(Object)\n  fullName: LicenseProviderAttribute.Equals(Object)\n- uid: System.Boolean\n  parent: System\n  isExternal: false\n  name: Boolean\n  nameWithType: Boolean\n  fullName: System.Boolean\n- uid: System.Object\n  parent: System\n  isExternal: false\n  name: Object\n  nameWithType: Object\n  fullName: System.Object\n- uid: System.ComponentModel.LicenseProviderAttribute.GetHashCode\n  parent: System.ComponentModel.LicenseProviderAttribute\n  isExternal: false\n  name: GetHashCode()\n  nameWithType: LicenseProviderAttribute.GetHashCode()\n  fullName: LicenseProviderAttribute.GetHashCode()\n- uid: System.Int32\n  parent: System\n  isExternal: false\n  name: Int32\n  nameWithType: Int32\n  fullName: System.Int32\n- uid: System.ComponentModel.LicenseProviderAttribute.LicenseProvider\n  parent: System.ComponentModel.LicenseProviderAttribute\n  isExternal: false\n  name: LicenseProvider\n  nameWithType: LicenseProviderAttribute.LicenseProvider\n  fullName: LicenseProviderAttribute.LicenseProvider\n- uid: System.ComponentModel.LicenseProviderAttribute.TypeId\n  parent: System.ComponentModel.LicenseProviderAttribute\n  isExternal: false\n  name: TypeId\n  nameWithType: LicenseProviderAttribute.TypeId\n  fullName: LicenseProviderAttribute.TypeId\n- uid: System.ComponentModel.LicenseProviderAttribute.#ctor*\n  parent: System.ComponentModel.LicenseProviderAttribute\n  isExternal: false\n  name: LicenseProviderAttribute\n  nameWithType: LicenseProviderAttribute.LicenseProviderAttribute\n  fullName: LicenseProviderAttribute.LicenseProviderAttribute\n  monikers:\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - netstandard-2.0\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.ComponentModel/LicenseProviderAttribute.xml\n- uid: System.ComponentModel.LicenseProviderAttribute.Equals*\n  parent: System.ComponentModel.LicenseProviderAttribute\n  isExternal: false\n  name: Equals\n  nameWithType: LicenseProviderAttribute.Equals\n  fullName: LicenseProviderAttribute.Equals\n  monikers:\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - netstandard-2.0\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.ComponentModel/LicenseProviderAttribute.xml\n- uid: System.ComponentModel.LicenseProviderAttribute.GetHashCode*\n  parent: System.ComponentModel.LicenseProviderAttribute\n  isExternal: false\n  name: GetHashCode\n  nameWithType: LicenseProviderAttribute.GetHashCode\n  fullName: LicenseProviderAttribute.GetHashCode\n  monikers:\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - netstandard-2.0\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.ComponentModel/LicenseProviderAttribute.xml\n- uid: System.ComponentModel.LicenseProviderAttribute.LicenseProvider*\n  parent: System.ComponentModel.LicenseProviderAttribute\n  isExternal: false\n  name: LicenseProvider\n  nameWithType: LicenseProviderAttribute.LicenseProvider\n  fullName: LicenseProviderAttribute.LicenseProvider\n  monikers:\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - netstandard-2.0\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.ComponentModel/LicenseProviderAttribute.xml\n- uid: System.ComponentModel.LicenseProviderAttribute.TypeId*\n  parent: System.ComponentModel.LicenseProviderAttribute\n  isExternal: false\n  name: TypeId\n  nameWithType: LicenseProviderAttribute.TypeId\n  fullName: LicenseProviderAttribute.TypeId\n  monikers:\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - netstandard-2.0\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.ComponentModel/LicenseProviderAttribute.xml\n- uid: System.Object.Equals(System.Object,System.Object)\n  parent: System.Object\n  isExternal: false\n  name: Equals(Object, Object)\n  nameWithType: Object.Equals(Object, Object)\n  fullName: Object.Equals(Object, Object)\n- uid: System.Object.GetType\n  parent: System.Object\n  isExternal: false\n  name: GetType()\n  nameWithType: Object.GetType()\n  fullName: Object.GetType()\n- uid: System.Object.MemberwiseClone\n  parent: System.Object\n  isExternal: false\n  name: MemberwiseClone()\n  nameWithType: Object.MemberwiseClone()\n  fullName: Object.MemberwiseClone()\n- uid: System.Object.ReferenceEquals(System.Object,System.Object)\n  parent: System.Object\n  isExternal: false\n  name: ReferenceEquals(Object, Object)\n  nameWithType: Object.ReferenceEquals(Object, Object)\n  fullName: Object.ReferenceEquals(Object, Object)\n- uid: System.Object.ToString\n  parent: System.Object\n  isExternal: false\n  name: ToString()\n  nameWithType: Object.ToString()\n  fullName: Object.ToString()\n- uid: System.Attribute.GetCustomAttribute(System.Reflection.ParameterInfo,System.Type,System.Boolean)\n  parent: System.Attribute\n  isExternal: false\n  name: GetCustomAttribute(ParameterInfo, Type, Boolean)\n  nameWithType: Attribute.GetCustomAttribute(ParameterInfo, Type, Boolean)\n  fullName: Attribute.GetCustomAttribute(ParameterInfo, Type, Boolean)\n- uid: System.Attribute.GetCustomAttribute(System.Reflection.MemberInfo,System.Type,System.Boolean)\n  parent: System.Attribute\n  isExternal: false\n  name: GetCustomAttribute(MemberInfo, Type, Boolean)\n  nameWithType: Attribute.GetCustomAttribute(MemberInfo, Type, Boolean)\n  fullName: Attribute.GetCustomAttribute(MemberInfo, Type, Boolean)\n- uid: System.Attribute.GetCustomAttribute(System.Reflection.Assembly,System.Type,System.Boolean)\n  parent: System.Attribute\n  isExternal: false\n  name: GetCustomAttribute(Assembly, Type, Boolean)\n  nameWithType: Attribute.GetCustomAttribute(Assembly, Type, Boolean)\n  fullName: Attribute.GetCustomAttribute(Assembly, Type, Boolean)\n- uid: System.Attribute.GetCustomAttribute(System.Reflection.Module,System.Type,System.Boolean)\n  parent: System.Attribute\n  isExternal: false\n  name: GetCustomAttribute(Module, Type, Boolean)\n  nameWithType: Attribute.GetCustomAttribute(Module, Type, Boolean)\n  fullName: Attribute.GetCustomAttribute(Module, Type, Boolean)\n- uid: System.Attribute.GetCustomAttribute(System.Reflection.Module,System.Type)\n  parent: System.Attribute\n  isExternal: false\n  name: GetCustomAttribute(Module, Type)\n  nameWithType: Attribute.GetCustomAttribute(Module, Type)\n  fullName: Attribute.GetCustomAttribute(Module, Type)\n- uid: System.Attribute.GetCustomAttribute(System.Reflection.MemberInfo,System.Type)\n  parent: System.Attribute\n  isExternal: false\n  name: GetCustomAttribute(MemberInfo, Type)\n  nameWithType: Attribute.GetCustomAttribute(MemberInfo, Type)\n  fullName: Attribute.GetCustomAttribute(MemberInfo, Type)\n- uid: System.Attribute.GetCustomAttribute(System.Reflection.Assembly,System.Type)\n  parent: System.Attribute\n  isExternal: false\n  name: GetCustomAttribute(Assembly, Type)\n  nameWithType: Attribute.GetCustomAttribute(Assembly, Type)\n  fullName: Attribute.GetCustomAttribute(Assembly, Type)\n- uid: System.Attribute.GetCustomAttribute(System.Reflection.ParameterInfo,System.Type)\n  parent: System.Attribute\n  isExternal: false\n  name: GetCustomAttribute(ParameterInfo, Type)\n  nameWithType: Attribute.GetCustomAttribute(ParameterInfo, Type)\n  fullName: Attribute.GetCustomAttribute(ParameterInfo, Type)\n- uid: System.Attribute.GetCustomAttributes(System.Reflection.Module,System.Type)\n  parent: System.Attribute\n  isExternal: false\n  name: GetCustomAttributes(Module, Type)\n  nameWithType: Attribute.GetCustomAttributes(Module, Type)\n  fullName: Attribute.GetCustomAttributes(Module, Type)\n- uid: System.Attribute.GetCustomAttributes(System.Reflection.ParameterInfo,System.Type,System.Boolean)\n  parent: System.Attribute\n  isExternal: false\n  name: GetCustomAttributes(ParameterInfo, Type, Boolean)\n  nameWithType: Attribute.GetCustomAttributes(ParameterInfo, Type, Boolean)\n  fullName: Attribute.GetCustomAttributes(ParameterInfo, Type, Boolean)\n- uid: System.Attribute.GetCustomAttributes(System.Reflection.Module,System.Type,System.Boolean)\n  parent: System.Attribute\n  isExternal: false\n  name: GetCustomAttributes(Module, Type, Boolean)\n  nameWithType: Attribute.GetCustomAttributes(Module, Type, Boolean)\n  fullName: Attribute.GetCustomAttributes(Module, Type, Boolean)\n- uid: System.Attribute.GetCustomAttributes(System.Reflection.MemberInfo,System.Type,System.Boolean)\n  parent: System.Attribute\n  isExternal: false\n  name: GetCustomAttributes(MemberInfo, Type, Boolean)\n  nameWithType: Attribute.GetCustomAttributes(MemberInfo, Type, Boolean)\n  fullName: Attribute.GetCustomAttributes(MemberInfo, Type, Boolean)\n- uid: System.Attribute.GetCustomAttributes(System.Reflection.Assembly,System.Type,System.Boolean)\n  parent: System.Attribute\n  isExternal: false\n  name: GetCustomAttributes(Assembly, Type, Boolean)\n  nameWithType: Attribute.GetCustomAttributes(Assembly, Type, Boolean)\n  fullName: Attribute.GetCustomAttributes(Assembly, Type, Boolean)\n- uid: System.Attribute.GetCustomAttributes(System.Reflection.ParameterInfo,System.Type)\n  parent: System.Attribute\n  isExternal: false\n  name: GetCustomAttributes(ParameterInfo, Type)\n  nameWithType: Attribute.GetCustomAttributes(ParameterInfo, Type)\n  fullName: Attribute.GetCustomAttributes(ParameterInfo, Type)\n- uid: System.Attribute.GetCustomAttributes(System.Reflection.Module,System.Boolean)\n  parent: System.Attribute\n  isExternal: false\n  name: GetCustomAttributes(Module, Boolean)\n  nameWithType: Attribute.GetCustomAttributes(Module, Boolean)\n  fullName: Attribute.GetCustomAttributes(Module, Boolean)\n- uid: System.Attribute.GetCustomAttributes(System.Reflection.ParameterInfo,System.Boolean)\n  parent: System.Attribute\n  isExternal: false\n  name: GetCustomAttributes(ParameterInfo, Boolean)\n  nameWithType: Attribute.GetCustomAttributes(ParameterInfo, Boolean)\n  fullName: Attribute.GetCustomAttributes(ParameterInfo, Boolean)\n- uid: System.Attribute.GetCustomAttributes(System.Reflection.MemberInfo,System.Boolean)\n  parent: System.Attribute\n  isExternal: false\n  name: GetCustomAttributes(MemberInfo, Boolean)\n  nameWithType: Attribute.GetCustomAttributes(MemberInfo, Boolean)\n  fullName: Attribute.GetCustomAttributes(MemberInfo, Boolean)\n- uid: System.Attribute.GetCustomAttributes(System.Reflection.Assembly,System.Type)\n  parent: System.Attribute\n  isExternal: false\n  name: GetCustomAttributes(Assembly, Type)\n  nameWithType: Attribute.GetCustomAttributes(Assembly, Type)\n  fullName: Attribute.GetCustomAttributes(Assembly, Type)\n- uid: System.Attribute.GetCustomAttributes(System.Reflection.Assembly,System.Boolean)\n  parent: System.Attribute\n  isExternal: false\n  name: GetCustomAttributes(Assembly, Boolean)\n  nameWithType: Attribute.GetCustomAttributes(Assembly, Boolean)\n  fullName: Attribute.GetCustomAttributes(Assembly, Boolean)\n- uid: System.Attribute.GetCustomAttributes(System.Reflection.ParameterInfo)\n  parent: System.Attribute\n  isExternal: false\n  name: GetCustomAttributes(ParameterInfo)\n  nameWithType: Attribute.GetCustomAttributes(ParameterInfo)\n  fullName: Attribute.GetCustomAttributes(ParameterInfo)\n- uid: System.Attribute.GetCustomAttributes(System.Reflection.Module)\n  parent: System.Attribute\n  isExternal: false\n  name: GetCustomAttributes(Module)\n  nameWithType: Attribute.GetCustomAttributes(Module)\n  fullName: Attribute.GetCustomAttributes(Module)\n- uid: System.Attribute.GetCustomAttributes(System.Reflection.MemberInfo)\n  parent: System.Attribute\n  isExternal: false\n  name: GetCustomAttributes(MemberInfo)\n  nameWithType: Attribute.GetCustomAttributes(MemberInfo)\n  fullName: Attribute.GetCustomAttributes(MemberInfo)\n- uid: System.Attribute.GetCustomAttributes(System.Reflection.Assembly)\n  parent: System.Attribute\n  isExternal: false\n  name: GetCustomAttributes(Assembly)\n  nameWithType: Attribute.GetCustomAttributes(Assembly)\n  fullName: Attribute.GetCustomAttributes(Assembly)\n- uid: System.Attribute.GetCustomAttributes(System.Reflection.MemberInfo,System.Type)\n  parent: System.Attribute\n  isExternal: false\n  name: GetCustomAttributes(MemberInfo, Type)\n  nameWithType: Attribute.GetCustomAttributes(MemberInfo, Type)\n  fullName: Attribute.GetCustomAttributes(MemberInfo, Type)\n- uid: System.Attribute.IsDefaultAttribute\n  parent: System.Attribute\n  isExternal: false\n  name: IsDefaultAttribute()\n  nameWithType: Attribute.IsDefaultAttribute()\n  fullName: Attribute.IsDefaultAttribute()\n- uid: System.Attribute.IsDefined(System.Reflection.ParameterInfo,System.Type,System.Boolean)\n  parent: System.Attribute\n  isExternal: false\n  name: IsDefined(ParameterInfo, Type, Boolean)\n  nameWithType: Attribute.IsDefined(ParameterInfo, Type, Boolean)\n  fullName: Attribute.IsDefined(ParameterInfo, Type, Boolean)\n- uid: System.Attribute.IsDefined(System.Reflection.Module,System.Type,System.Boolean)\n  parent: System.Attribute\n  isExternal: false\n  name: IsDefined(Module, Type, Boolean)\n  nameWithType: Attribute.IsDefined(Module, Type, Boolean)\n  fullName: Attribute.IsDefined(Module, Type, Boolean)\n- uid: System.Attribute.IsDefined(System.Reflection.MemberInfo,System.Type,System.Boolean)\n  parent: System.Attribute\n  isExternal: false\n  name: IsDefined(MemberInfo, Type, Boolean)\n  nameWithType: Attribute.IsDefined(MemberInfo, Type, Boolean)\n  fullName: Attribute.IsDefined(MemberInfo, Type, Boolean)\n- uid: System.Attribute.IsDefined(System.Reflection.Assembly,System.Type,System.Boolean)\n  parent: System.Attribute\n  isExternal: false\n  name: IsDefined(Assembly, Type, Boolean)\n  nameWithType: Attribute.IsDefined(Assembly, Type, Boolean)\n  fullName: Attribute.IsDefined(Assembly, Type, Boolean)\n- uid: System.Attribute.IsDefined(System.Reflection.MemberInfo,System.Type)\n  parent: System.Attribute\n  isExternal: false\n  name: IsDefined(MemberInfo, Type)\n  nameWithType: Attribute.IsDefined(MemberInfo, Type)\n  fullName: Attribute.IsDefined(MemberInfo, Type)\n- uid: System.Attribute.IsDefined(System.Reflection.Module,System.Type)\n  parent: System.Attribute\n  isExternal: false\n  name: IsDefined(Module, Type)\n  nameWithType: Attribute.IsDefined(Module, Type)\n  fullName: Attribute.IsDefined(Module, Type)\n- uid: System.Attribute.IsDefined(System.Reflection.Assembly,System.Type)\n  parent: System.Attribute\n  isExternal: false\n  name: IsDefined(Assembly, Type)\n  nameWithType: Attribute.IsDefined(Assembly, Type)\n  fullName: Attribute.IsDefined(Assembly, Type)\n- uid: System.Attribute.IsDefined(System.Reflection.ParameterInfo,System.Type)\n  parent: System.Attribute\n  isExternal: false\n  name: IsDefined(ParameterInfo, Type)\n  nameWithType: Attribute.IsDefined(ParameterInfo, Type)\n  fullName: Attribute.IsDefined(ParameterInfo, Type)\n- uid: System.Attribute.Match(System.Object)\n  parent: System.Attribute\n  isExternal: false\n  name: Match(Object)\n  nameWithType: Attribute.Match(Object)\n  fullName: Attribute.Match(Object)\n- uid: System.Attribute.System#Runtime#InteropServices#_Attribute#GetIDsOfNames(System.Guid@,System.IntPtr,System.UInt32,System.UInt32,System.IntPtr)\n  parent: System.Attribute\n  isExternal: false\n  name: _Attribute.GetIDsOfNames(Guid, IntPtr, UInt32, UInt32, IntPtr)\n  nameWithType: Attribute._Attribute.GetIDsOfNames(Guid, IntPtr, UInt32, UInt32, IntPtr)\n  fullName: Attribute._Attribute.GetIDsOfNames(Guid, IntPtr, UInt32, UInt32, IntPtr)\n- uid: System.Attribute.System#Runtime#InteropServices#_Attribute#GetTypeInfo(System.UInt32,System.UInt32,System.IntPtr)\n  parent: System.Attribute\n  isExternal: false\n  name: _Attribute.GetTypeInfo(UInt32, UInt32, IntPtr)\n  nameWithType: Attribute._Attribute.GetTypeInfo(UInt32, UInt32, IntPtr)\n  fullName: Attribute._Attribute.GetTypeInfo(UInt32, UInt32, IntPtr)\n- uid: System.Attribute.System#Runtime#InteropServices#_Attribute#GetTypeInfoCount(System.UInt32@)\n  parent: System.Attribute\n  isExternal: false\n  name: _Attribute.GetTypeInfoCount(UInt32)\n  nameWithType: Attribute._Attribute.GetTypeInfoCount(UInt32)\n  fullName: Attribute._Attribute.GetTypeInfoCount(UInt32)\n- uid: System.Attribute.System#Runtime#InteropServices#_Attribute#Invoke(System.UInt32,System.Guid@,System.UInt32,System.Int16,System.IntPtr,System.IntPtr,System.IntPtr,System.IntPtr)\n  parent: System.Attribute\n  isExternal: false\n  name: _Attribute.Invoke(UInt32, Guid, UInt32, Int16, IntPtr, IntPtr, IntPtr, IntPtr)\n  nameWithType: Attribute._Attribute.Invoke(UInt32, Guid, UInt32, Int16, IntPtr, IntPtr, IntPtr, IntPtr)\n  fullName: Attribute._Attribute.Invoke(UInt32, Guid, UInt32, Int16, IntPtr, IntPtr, IntPtr, IntPtr)\n"}