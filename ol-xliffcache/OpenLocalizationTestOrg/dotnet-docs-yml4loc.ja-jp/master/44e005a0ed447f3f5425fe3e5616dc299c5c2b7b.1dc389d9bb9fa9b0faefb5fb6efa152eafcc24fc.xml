{"nodes":[{"content":"Creates a block within which an <xref href=\"System.ServiceModel.OperationContext\"></xref> object is in scope.","nodes":[{"pos":[0,109],"content":"Creates a block within which an <ph id=\"ph1\">&lt;xref href=\"System.ServiceModel.OperationContext\"&gt;&lt;/xref&gt;</ph> object is in scope.","source":"Creates a block within which an <xref href=\"System.ServiceModel.OperationContext\"></xref> object is in scope."}],"pos":[653,763],"yaml":true},{"content":"Use the <xref:System.ServiceModel.OperationContextScope> class to create a scope for a specific <xref:System.ServiceModel.OperationContext> object or a scope for a new <xref:System.ServiceModel.OperationContext> object using a specified <xref:System.ServiceModel.IContextChannel> object. An <xref:System.ServiceModel.OperationContextScope> can be used in a [!INCLUDE[indigo1](~/includes/indigo1-md.md)] service or [!INCLUDE[indigo2](~/includes/indigo2-md.md)] client application.  \n  \n Once the <xref:System.ServiceModel.OperationContextScope> object has established the current operation context, you can use the <xref:System.ServiceModel.OperationContext> to:  \n  \n-   Access and modify incoming and outgoing message headers and other properties.  \n  \n-   Access the runtime, including dispatchers, the host, channel, and extensions.  \n  \n-   Access other types of contexts, such as security, instance, and request contexts.  \n  \n-   Access the channel associated with the <xref:System.ServiceModel.OperationContext> object or (if the channel implements <xref:System.ServiceModel.Channels.ISession?displayProperty=fullName>) the associated channel's session identifier.  \n  \n When an <xref:System.ServiceModel.OperationContextScope> is created, the current <xref:System.ServiceModel.OperationContext> is stored and the new <xref:System.ServiceModel.OperationContext> becomes the one returned by the <xref:System.ServiceModel.OperationContext.Current%2A> property. When the <xref:System.ServiceModel.OperationContextScope> is disposed, the original <xref:System.ServiceModel.OperationContext> is restored.  \n  \n> [!WARNING]\n>  Do not use the asynchronous \"await\" pattern within a OperationContextScope block. When the continuation occurs, it may run on a different thread and OperationContextScope is thread specific. If you need to call \"await\" for an async call, use it outside of the OperationContextScope block.","nodes":[{"pos":[0,479],"content":"Use the <xref:System.ServiceModel.OperationContextScope> class to create a scope for a specific <xref:System.ServiceModel.OperationContext> object or a scope for a new <xref:System.ServiceModel.OperationContext> object using a specified <xref:System.ServiceModel.IContextChannel> object. An <xref:System.ServiceModel.OperationContextScope> can be used in a [!INCLUDE[indigo1](~/includes/indigo1-md.md)] service or [!INCLUDE[indigo2](~/includes/indigo2-md.md)] client application.","nodes":[{"content":"Use the <ph id=\"ph1\">&lt;xref:System.ServiceModel.OperationContextScope&gt;</ph> class to create a scope for a specific <ph id=\"ph2\">&lt;xref:System.ServiceModel.OperationContext&gt;</ph> object or a scope for a new <ph id=\"ph3\">&lt;xref:System.ServiceModel.OperationContext&gt;</ph> object using a specified <ph id=\"ph4\">&lt;xref:System.ServiceModel.IContextChannel&gt;</ph> object.","pos":[0,287],"source":"Use the <xref:System.ServiceModel.OperationContextScope> class to create a scope for a specific <xref:System.ServiceModel.OperationContext> object or a scope for a new <xref:System.ServiceModel.OperationContext> object using a specified <xref:System.ServiceModel.IContextChannel> object."},{"content":"An <ph id=\"ph1\">&lt;xref:System.ServiceModel.OperationContextScope&gt;</ph> can be used in a <ph id=\"ph2\">[!INCLUDE[indigo1](~/includes/indigo1-md.md)]</ph> service or <ph id=\"ph3\">[!INCLUDE[indigo2](~/includes/indigo2-md.md)]</ph> client application.","pos":[288,479],"source":" An <xref:System.ServiceModel.OperationContextScope> can be used in a [!INCLUDE[indigo1](~/includes/indigo1-md.md)] service or [!INCLUDE[indigo2](~/includes/indigo2-md.md)] client application."}]},{"pos":[486,661],"content":"Once the <xref:System.ServiceModel.OperationContextScope> object has established the current operation context, you can use the <xref:System.ServiceModel.OperationContext> to:","nodes":[{"content":"Once the <ph id=\"ph1\">&lt;xref:System.ServiceModel.OperationContextScope&gt;</ph> object has established the current operation context, you can use the <ph id=\"ph2\">&lt;xref:System.ServiceModel.OperationContext&gt;</ph> to:","pos":[0,175],"source":"Once the <xref:System.ServiceModel.OperationContextScope> object has established the current operation context, you can use the <xref:System.ServiceModel.OperationContext> to:"}]},{"pos":[671,748],"content":"Access and modify incoming and outgoing message headers and other properties.","nodes":[{"content":"Access and modify incoming and outgoing message headers and other properties.","pos":[0,77]}]},{"pos":[758,835],"content":"Access the runtime, including dispatchers, the host, channel, and extensions.","nodes":[{"content":"Access the runtime, including dispatchers, the host, channel, and extensions.","pos":[0,77]}]},{"pos":[845,926],"content":"Access other types of contexts, such as security, instance, and request contexts.","nodes":[{"content":"Access other types of contexts, such as security, instance, and request contexts.","pos":[0,81]}]},{"pos":[936,1171],"content":"Access the channel associated with the <xref:System.ServiceModel.OperationContext> object or (if the channel implements <xref:System.ServiceModel.Channels.ISession?displayProperty=fullName>) the associated channel's session identifier.","nodes":[{"content":"Access the channel associated with the <ph id=\"ph1\">&lt;xref:System.ServiceModel.OperationContext&gt;</ph> object or (if the channel implements <ph id=\"ph2\">&lt;xref:System.ServiceModel.Channels.ISession?displayProperty=fullName&gt;</ph>) the associated channel's session identifier.","pos":[0,235],"source":"Access the channel associated with the <xref:System.ServiceModel.OperationContext> object or (if the channel implements <xref:System.ServiceModel.Channels.ISession?displayProperty=fullName>) the associated channel's session identifier."}]},{"pos":[1178,1606],"content":"When an <xref:System.ServiceModel.OperationContextScope> is created, the current <xref:System.ServiceModel.OperationContext> is stored and the new <xref:System.ServiceModel.OperationContext> becomes the one returned by the <xref:System.ServiceModel.OperationContext.Current%2A> property. When the <xref:System.ServiceModel.OperationContextScope> is disposed, the original <xref:System.ServiceModel.OperationContext> is restored.","nodes":[{"content":"When an <xref:System.ServiceModel.OperationContextScope> is created, the current <xref:System.ServiceModel.OperationContext> is stored and the new <xref:System.ServiceModel.OperationContext> becomes the one returned by the <xref:System.ServiceModel.OperationContext.Current%2A> property. When the <xref:System.ServiceModel.OperationContextScope> is disposed, the original <xref:System.ServiceModel.OperationContext> is restored.","pos":[0,428],"nodes":[{"content":"When an <ph id=\"ph1\">&lt;xref:System.ServiceModel.OperationContextScope&gt;</ph> is created, the current <ph id=\"ph2\">&lt;xref:System.ServiceModel.OperationContext&gt;</ph> is stored and the new <ph id=\"ph3\">&lt;xref:System.ServiceModel.OperationContext&gt;</ph> becomes the one returned by the <ph id=\"ph4\">&lt;xref:System.ServiceModel.OperationContext.Current%2A&gt;</ph> property.","pos":[0,287],"source":"When an <xref:System.ServiceModel.OperationContextScope> is created, the current <xref:System.ServiceModel.OperationContext> is stored and the new <xref:System.ServiceModel.OperationContext> becomes the one returned by the <xref:System.ServiceModel.OperationContext.Current%2A> property."},{"content":"When the <ph id=\"ph1\">&lt;xref:System.ServiceModel.OperationContextScope&gt;</ph> is disposed, the original <ph id=\"ph2\">&lt;xref:System.ServiceModel.OperationContext&gt;</ph> is restored.","pos":[288,428],"source":" When the <xref:System.ServiceModel.OperationContextScope> is disposed, the original <xref:System.ServiceModel.OperationContext> is restored."}]}]},{"pos":[1614,1916],"content":"[!WARNING]\n Do not use the asynchronous \"await\" pattern within a OperationContextScope block. When the continuation occurs, it may run on a different thread and OperationContextScope is thread specific. If you need to call \"await\" for an async call, use it outside of the OperationContextScope block.","leadings":["","> "],"nodes":[{"content":" Do not use the asynchronous \"await\" pattern within a OperationContextScope block. When the continuation occurs, it may run on a different thread and OperationContextScope is thread specific. If you need to call \"await\" for an async call, use it outside of the OperationContextScope block.","pos":[11,300],"nodes":[{"content":"Do not use the asynchronous \"await\" pattern within a OperationContextScope block.","pos":[1,82]},{"content":"When the continuation occurs, it may run on a different thread and OperationContextScope is thread specific.","pos":[83,191]},{"content":"If you need to call \"await\" for an async call, use it outside of the OperationContextScope block.","pos":[192,289]}]}]}],"pos":[774,2712],"yaml":true,"extradata":"MT"},{"content":"Initializes a new instance of the <xref href=\"System.ServiceModel.OperationContextScope\"></xref> class that uses the specified <xref href=\"System.ServiceModel.IContextChannel\"></xref> to create a new <xref href=\"System.ServiceModel.OperationContext\"></xref> for the scope.","nodes":[{"pos":[0,272],"content":"Initializes a new instance of the <ph id=\"ph1\">&lt;xref href=\"System.ServiceModel.OperationContextScope\"&gt;&lt;/xref&gt;</ph> class that uses the specified <ph id=\"ph2\">&lt;xref href=\"System.ServiceModel.IContextChannel\"&gt;&lt;/xref&gt;</ph> to create a new <ph id=\"ph3\">&lt;xref href=\"System.ServiceModel.OperationContext\"&gt;&lt;/xref&gt;</ph> for the scope.","source":"Initializes a new instance of the <xref href=\"System.ServiceModel.OperationContextScope\"></xref> class that uses the specified <xref href=\"System.ServiceModel.IContextChannel\"></xref> to create a new <xref href=\"System.ServiceModel.OperationContext\"></xref> for the scope."}],"pos":[4888,5161],"yaml":true},{"content":"Use the <xref:System.ServiceModel.OperationContextScope.%23ctor%2A> constructor to create a new <xref:System.ServiceModel.OperationContext> for a client channel that can be used to add or modify outbound message headers, read incoming message headers, or access other run-time properties of the <xref:System.ServiceModel.OperationContext>.  \n  \n The headers added to the <xref:System.ServiceModel.OperationContext.IncomingMessageHeaders%2A?displayProperty=fullName> property of the newly created <xref:System.ServiceModel.OperationContext> apply only to the channel that was passed to the <xref:System.ServiceModel.OperationContextScope.%23ctor%2A> constructor. If the user creates a new channel within its scope then the headers are not applied to messages sent on the new channel.","nodes":[{"pos":[0,339],"content":"Use the <xref:System.ServiceModel.OperationContextScope.%23ctor%2A> constructor to create a new <xref:System.ServiceModel.OperationContext> for a client channel that can be used to add or modify outbound message headers, read incoming message headers, or access other run-time properties of the <xref:System.ServiceModel.OperationContext>.","nodes":[{"content":"Use the <ph id=\"ph1\">&lt;xref:System.ServiceModel.OperationContextScope.%23ctor%2A&gt;</ph> constructor to create a new <ph id=\"ph2\">&lt;xref:System.ServiceModel.OperationContext&gt;</ph> for a client channel that can be used to add or modify outbound message headers, read incoming message headers, or access other run-time properties of the <ph id=\"ph3\">&lt;xref:System.ServiceModel.OperationContext&gt;</ph>.","pos":[0,339],"source":"Use the <xref:System.ServiceModel.OperationContextScope.%23ctor%2A> constructor to create a new <xref:System.ServiceModel.OperationContext> for a client channel that can be used to add or modify outbound message headers, read incoming message headers, or access other run-time properties of the <xref:System.ServiceModel.OperationContext>."}]},{"pos":[346,782],"content":"The headers added to the <xref:System.ServiceModel.OperationContext.IncomingMessageHeaders%2A?displayProperty=fullName> property of the newly created <xref:System.ServiceModel.OperationContext> apply only to the channel that was passed to the <xref:System.ServiceModel.OperationContextScope.%23ctor%2A> constructor. If the user creates a new channel within its scope then the headers are not applied to messages sent on the new channel.","nodes":[{"content":"The headers added to the <xref:System.ServiceModel.OperationContext.IncomingMessageHeaders%2A?displayProperty=fullName> property of the newly created <xref:System.ServiceModel.OperationContext> apply only to the channel that was passed to the <xref:System.ServiceModel.OperationContextScope.%23ctor%2A> constructor. If the user creates a new channel within its scope then the headers are not applied to messages sent on the new channel.","pos":[0,436],"nodes":[{"content":"The headers added to the <ph id=\"ph1\">&lt;xref:System.ServiceModel.OperationContext.IncomingMessageHeaders%2A?displayProperty=fullName&gt;</ph> property of the newly created <ph id=\"ph2\">&lt;xref:System.ServiceModel.OperationContext&gt;</ph> apply only to the channel that was passed to the <ph id=\"ph3\">&lt;xref:System.ServiceModel.OperationContextScope.%23ctor%2A&gt;</ph> constructor.","pos":[0,315],"source":"The headers added to the <xref:System.ServiceModel.OperationContext.IncomingMessageHeaders%2A?displayProperty=fullName> property of the newly created <xref:System.ServiceModel.OperationContext> apply only to the channel that was passed to the <xref:System.ServiceModel.OperationContextScope.%23ctor%2A> constructor."},{"content":"If the user creates a new channel within its scope then the headers are not applied to messages sent on the new channel.","pos":[316,436]}]}]}],"pos":[5172,5959],"yaml":true,"extradata":"MT"},{"content":"The channel to use when creating the scope for a new <xref href=\"System.ServiceModel.OperationContext\"></xref>.","nodes":[{"pos":[0,111],"content":"The channel to use when creating the scope for a new <ph id=\"ph1\">&lt;xref href=\"System.ServiceModel.OperationContext\"&gt;&lt;/xref&gt;</ph>.","source":"The channel to use when creating the scope for a new <xref href=\"System.ServiceModel.OperationContext\"></xref>."}],"pos":[6624,6736],"yaml":true},{"content":"Initializes a new instance of the <xref href=\"System.ServiceModel.OperationContextScope\"></xref> class to create a scope for the specified <xref href=\"System.ServiceModel.OperationContext\"></xref> object.","nodes":[{"pos":[0,204],"content":"Initializes a new instance of the <ph id=\"ph1\">&lt;xref href=\"System.ServiceModel.OperationContextScope\"&gt;&lt;/xref&gt;</ph> class to create a scope for the specified <ph id=\"ph2\">&lt;xref href=\"System.ServiceModel.OperationContext\"&gt;&lt;/xref&gt;</ph> object.","source":"Initializes a new instance of the <xref href=\"System.ServiceModel.OperationContextScope\"></xref> class to create a scope for the specified <xref href=\"System.ServiceModel.OperationContext\"></xref> object."}],"pos":[8095,8300],"yaml":true},{"content":"Use the <xref:System.ServiceModel.OperationContextScope.%23ctor%2A> constructor to create a code block within which the specified <xref:System.ServiceModel.OperationContextScope> object is the current scope.","nodes":[{"pos":[0,207],"content":"Use the <xref:System.ServiceModel.OperationContextScope.%23ctor%2A> constructor to create a code block within which the specified <xref:System.ServiceModel.OperationContextScope> object is the current scope.","nodes":[{"content":"Use the <ph id=\"ph1\">&lt;xref:System.ServiceModel.OperationContextScope.%23ctor%2A&gt;</ph> constructor to create a code block within which the specified <ph id=\"ph2\">&lt;xref:System.ServiceModel.OperationContextScope&gt;</ph> object is the current scope.","pos":[0,207],"source":"Use the <xref:System.ServiceModel.OperationContextScope.%23ctor%2A> constructor to create a code block within which the specified <xref:System.ServiceModel.OperationContextScope> object is the current scope."}]}],"pos":[8311,8519],"yaml":true,"extradata":"MT"},{"content":"The active <xref href=\"System.ServiceModel.OperationContext\"></xref> in the created scope.","nodes":[{"pos":[0,90],"content":"The active <ph id=\"ph1\">&lt;xref href=\"System.ServiceModel.OperationContext\"&gt;&lt;/xref&gt;</ph> in the created scope.","source":"The active <xref href=\"System.ServiceModel.OperationContext\"></xref> in the created scope."}],"pos":[8721,8812],"yaml":true},{"content":"Restores the original <xref href=\"System.ServiceModel.OperationContext\"></xref> to the active context and recycles the <xref href=\"System.ServiceModel.OperationContextScope\"></xref> object.","nodes":[{"pos":[0,189],"content":"Restores the original <ph id=\"ph1\">&lt;xref href=\"System.ServiceModel.OperationContext\"&gt;&lt;/xref&gt;</ph> to the active context and recycles the <ph id=\"ph2\">&lt;xref href=\"System.ServiceModel.OperationContextScope\"&gt;&lt;/xref&gt;</ph> object.","source":"Restores the original <xref href=\"System.ServiceModel.OperationContext\"></xref> to the active context and recycles the <xref href=\"System.ServiceModel.OperationContextScope\"></xref> object."}],"pos":[9966,10156],"yaml":true}],"content":"### YamlMime:ManagedReference\nitems:\n- uid: System.ServiceModel.OperationContextScope\n  commentId: T:System.ServiceModel.OperationContextScope\n  id: OperationContextScope\n  children:\n  - System.ServiceModel.OperationContextScope.#ctor(System.ServiceModel.IContextChannel)\n  - System.ServiceModel.OperationContextScope.#ctor(System.ServiceModel.OperationContext)\n  - System.ServiceModel.OperationContextScope.Dispose\n  langs:\n  - csharp\n  name: OperationContextScope\n  nameWithType: OperationContextScope\n  fullName: System.ServiceModel.OperationContextScope\n  type: Class\n  assemblies:\n  - System.ServiceModel\n  namespace: System.ServiceModel\n  summary: Creates a block within which an <xref href=\"System.ServiceModel.OperationContext\"></xref> object is in scope.\n  remarks: \"Use the <xref:System.ServiceModel.OperationContextScope> class to create a scope for a specific <xref:System.ServiceModel.OperationContext> object or a scope for a new <xref:System.ServiceModel.OperationContext> object using a specified <xref:System.ServiceModel.IContextChannel> object. An <xref:System.ServiceModel.OperationContextScope> can be used in a [!INCLUDE[indigo1](~/includes/indigo1-md.md)] service or [!INCLUDE[indigo2](~/includes/indigo2-md.md)] client application.  \\n  \\n Once the <xref:System.ServiceModel.OperationContextScope> object has established the current operation context, you can use the <xref:System.ServiceModel.OperationContext> to:  \\n  \\n-   Access and modify incoming and outgoing message headers and other properties.  \\n  \\n-   Access the runtime, including dispatchers, the host, channel, and extensions.  \\n  \\n-   Access other types of contexts, such as security, instance, and request contexts.  \\n  \\n-   Access the channel associated with the <xref:System.ServiceModel.OperationContext> object or (if the channel implements <xref:System.ServiceModel.Channels.ISession?displayProperty=fullName>) the associated channel's session identifier.  \\n  \\n When an <xref:System.ServiceModel.OperationContextScope> is created, the current <xref:System.ServiceModel.OperationContext> is stored and the new <xref:System.ServiceModel.OperationContext> becomes the one returned by the <xref:System.ServiceModel.OperationContext.Current%2A> property. When the <xref:System.ServiceModel.OperationContextScope> is disposed, the original <xref:System.ServiceModel.OperationContext> is restored.  \\n  \\n> [!WARNING]\\n>  Do not use the asynchronous \\\"await\\\" pattern within a OperationContextScope block. When the continuation occurs, it may run on a different thread and OperationContextScope is thread specific. If you need to call \\\"await\\\" for an async call, use it outside of the OperationContextScope block.\"\n  example:\n  - \"The following example shows how to use the <xref:System.ServiceModel.OperationContextScope> to create a new context in a client application to add a custom header to the outgoing message.  \\n  \\n [!code-csharp[OperationContextScope#3](~/samples/snippets/csharp/VS_Snippets_CFX/operationcontextscope/cs/client.cs#3)]\\n [!code-vb[OperationContextScope#3](~/samples/snippets/visualbasic/VS_Snippets_CFX/operationcontextscope/vb/client.vb#3)]\"\n  syntax:\n    content: 'public sealed class OperationContextScope : IDisposable'\n  inheritance:\n  - System.Object\n  implements:\n  - System.IDisposable\n  inheritedMembers:\n  - System.Object.Equals(System.Object)\n  - System.Object.Equals(System.Object,System.Object)\n  - System.Object.GetHashCode\n  - System.Object.GetType\n  - System.Object.MemberwiseClone\n  - System.Object.ReferenceEquals(System.Object,System.Object)\n  - System.Object.ToString\n  version:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.ServiceModel/OperationContextScope.xml\n  ms.technology:\n  - dotnet-standard\n  author: Erikre\n  ms.author: erikre\n  manager: erikre\n- uid: System.ServiceModel.OperationContextScope.#ctor(System.ServiceModel.IContextChannel)\n  commentId: M:System.ServiceModel.OperationContextScope.#ctor(System.ServiceModel.IContextChannel)\n  id: '#ctor(System.ServiceModel.IContextChannel)'\n  parent: System.ServiceModel.OperationContextScope\n  langs:\n  - csharp\n  name: OperationContextScope(IContextChannel)\n  nameWithType: OperationContextScope.OperationContextScope(IContextChannel)\n  fullName: OperationContextScope.OperationContextScope(IContextChannel)\n  type: Constructor\n  assemblies:\n  - System.ServiceModel\n  namespace: System.ServiceModel\n  summary: Initializes a new instance of the <xref href=\"System.ServiceModel.OperationContextScope\"></xref> class that uses the specified <xref href=\"System.ServiceModel.IContextChannel\"></xref> to create a new <xref href=\"System.ServiceModel.OperationContext\"></xref> for the scope.\n  remarks: \"Use the <xref:System.ServiceModel.OperationContextScope.%23ctor%2A> constructor to create a new <xref:System.ServiceModel.OperationContext> for a client channel that can be used to add or modify outbound message headers, read incoming message headers, or access other run-time properties of the <xref:System.ServiceModel.OperationContext>.  \\n  \\n The headers added to the <xref:System.ServiceModel.OperationContext.IncomingMessageHeaders%2A?displayProperty=fullName> property of the newly created <xref:System.ServiceModel.OperationContext> apply only to the channel that was passed to the <xref:System.ServiceModel.OperationContextScope.%23ctor%2A> constructor. If the user creates a new channel within its scope then the headers are not applied to messages sent on the new channel.\"\n  example:\n  - \"The following example shows how to use the <xref:System.ServiceModel.OperationContextScope> to create a new context in a client application in order to add a custom header to the outgoing message.  \\n  \\n [!code-csharp[OperationContextScope#4](~/samples/snippets/csharp/VS_Snippets_CFX/operationcontextscope/cs/client.cs#4)]\\n [!code-vb[OperationContextScope#4](~/samples/snippets/visualbasic/VS_Snippets_CFX/operationcontextscope/vb/client.vb#4)]\"\n  syntax:\n    content: public OperationContextScope (System.ServiceModel.IContextChannel channel);\n    parameters:\n    - id: channel\n      type: System.ServiceModel.IContextChannel\n      description: The channel to use when creating the scope for a new <xref href=\"System.ServiceModel.OperationContext\"></xref>.\n  overload: System.ServiceModel.OperationContextScope.#ctor*\n  exceptions: []\n  version:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.ServiceModel/OperationContextScope.xml\n  ms.technology:\n  - dotnet-standard\n  author: Erikre\n  ms.author: erikre\n  manager: erikre\n- uid: System.ServiceModel.OperationContextScope.#ctor(System.ServiceModel.OperationContext)\n  commentId: M:System.ServiceModel.OperationContextScope.#ctor(System.ServiceModel.OperationContext)\n  id: '#ctor(System.ServiceModel.OperationContext)'\n  parent: System.ServiceModel.OperationContextScope\n  langs:\n  - csharp\n  name: OperationContextScope(OperationContext)\n  nameWithType: OperationContextScope.OperationContextScope(OperationContext)\n  fullName: OperationContextScope.OperationContextScope(OperationContext)\n  type: Constructor\n  assemblies:\n  - System.ServiceModel\n  namespace: System.ServiceModel\n  summary: Initializes a new instance of the <xref href=\"System.ServiceModel.OperationContextScope\"></xref> class to create a scope for the specified <xref href=\"System.ServiceModel.OperationContext\"></xref> object.\n  remarks: Use the <xref:System.ServiceModel.OperationContextScope.%23ctor%2A> constructor to create a code block within which the specified <xref:System.ServiceModel.OperationContextScope> object is the current scope.\n  syntax:\n    content: public OperationContextScope (System.ServiceModel.OperationContext context);\n    parameters:\n    - id: context\n      type: System.ServiceModel.OperationContext\n      description: The active <xref href=\"System.ServiceModel.OperationContext\"></xref> in the created scope.\n  overload: System.ServiceModel.OperationContextScope.#ctor*\n  exceptions: []\n  version:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.ServiceModel/OperationContextScope.xml\n  ms.technology:\n  - dotnet-standard\n  author: Erikre\n  ms.author: erikre\n  manager: erikre\n- uid: System.ServiceModel.OperationContextScope.Dispose\n  commentId: M:System.ServiceModel.OperationContextScope.Dispose\n  id: Dispose\n  parent: System.ServiceModel.OperationContextScope\n  langs:\n  - csharp\n  name: Dispose()\n  nameWithType: OperationContextScope.Dispose()\n  fullName: OperationContextScope.Dispose()\n  type: Method\n  assemblies:\n  - System.ServiceModel\n  namespace: System.ServiceModel\n  summary: Restores the original <xref href=\"System.ServiceModel.OperationContext\"></xref> to the active context and recycles the <xref href=\"System.ServiceModel.OperationContextScope\"></xref> object.\n  syntax:\n    content: public void Dispose ();\n    parameters: []\n  overload: System.ServiceModel.OperationContextScope.Dispose*\n  exceptions: []\n  version:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.ServiceModel/OperationContextScope.xml\n  ms.technology:\n  - dotnet-standard\n  author: Erikre\n  ms.author: erikre\n  manager: erikre\nreferences:\n- uid: System.Object\n  parent: System\n  isExternal: false\n  name: Object\n  nameWithType: Object\n  fullName: System.Object\n- uid: System.ServiceModel.OperationContextScope.#ctor(System.ServiceModel.IContextChannel)\n  parent: System.ServiceModel.OperationContextScope\n  isExternal: false\n  name: OperationContextScope(IContextChannel)\n  nameWithType: OperationContextScope.OperationContextScope(IContextChannel)\n  fullName: OperationContextScope.OperationContextScope(IContextChannel)\n- uid: System.ServiceModel.IContextChannel\n  parent: System.ServiceModel\n  isExternal: false\n  name: IContextChannel\n  nameWithType: IContextChannel\n  fullName: System.ServiceModel.IContextChannel\n- uid: System.ServiceModel.OperationContextScope.#ctor(System.ServiceModel.OperationContext)\n  parent: System.ServiceModel.OperationContextScope\n  isExternal: false\n  name: OperationContextScope(OperationContext)\n  nameWithType: OperationContextScope.OperationContextScope(OperationContext)\n  fullName: OperationContextScope.OperationContextScope(OperationContext)\n- uid: System.ServiceModel.OperationContext\n  parent: System.ServiceModel\n  isExternal: false\n  name: OperationContext\n  nameWithType: OperationContext\n  fullName: System.ServiceModel.OperationContext\n- uid: System.ServiceModel.OperationContextScope.Dispose\n  parent: System.ServiceModel.OperationContextScope\n  isExternal: false\n  name: Dispose()\n  nameWithType: OperationContextScope.Dispose()\n  fullName: OperationContextScope.Dispose()\n- uid: System.ServiceModel.OperationContextScope.#ctor*\n  parent: System.ServiceModel.OperationContextScope\n  isExternal: false\n  name: OperationContextScope\n  nameWithType: OperationContextScope.OperationContextScope\n  fullName: OperationContextScope.OperationContextScope\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.ServiceModel/OperationContextScope.xml\n- uid: System.ServiceModel.OperationContextScope.Dispose*\n  parent: System.ServiceModel.OperationContextScope\n  isExternal: false\n  name: Dispose\n  nameWithType: OperationContextScope.Dispose\n  fullName: OperationContextScope.Dispose\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.ServiceModel/OperationContextScope.xml\n- uid: System.Object.Equals(System.Object)\n  parent: System.Object\n  isExternal: false\n  name: Equals(Object)\n  nameWithType: Object.Equals(Object)\n  fullName: Object.Equals(Object)\n- uid: System.Object.Equals(System.Object,System.Object)\n  parent: System.Object\n  isExternal: false\n  name: Equals(Object, Object)\n  nameWithType: Object.Equals(Object, Object)\n  fullName: Object.Equals(Object, Object)\n- uid: System.Object.GetHashCode\n  parent: System.Object\n  isExternal: false\n  name: GetHashCode()\n  nameWithType: Object.GetHashCode()\n  fullName: Object.GetHashCode()\n- uid: System.Object.GetType\n  parent: System.Object\n  isExternal: false\n  name: GetType()\n  nameWithType: Object.GetType()\n  fullName: Object.GetType()\n- uid: System.Object.MemberwiseClone\n  parent: System.Object\n  isExternal: false\n  name: MemberwiseClone()\n  nameWithType: Object.MemberwiseClone()\n  fullName: Object.MemberwiseClone()\n- uid: System.Object.ReferenceEquals(System.Object,System.Object)\n  parent: System.Object\n  isExternal: false\n  name: ReferenceEquals(Object, Object)\n  nameWithType: Object.ReferenceEquals(Object, Object)\n  fullName: Object.ReferenceEquals(Object, Object)\n- uid: System.Object.ToString\n  parent: System.Object\n  isExternal: false\n  name: ToString()\n  nameWithType: Object.ToString()\n  fullName: Object.ToString()\n- uid: System.IDisposable\n  parent: System\n  isExternal: false\n  name: IDisposable\n  nameWithType: IDisposable\n  fullName: System.IDisposable\n"}