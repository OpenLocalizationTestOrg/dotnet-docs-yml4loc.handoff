{"nodes":[{"content":"Computes the <xref href=\"System.Security.Cryptography.MD5\"></xref> hash value for the input data using the implementation provided by the cryptographic service provider (CSP). This class cannot be inherited.","nodes":[{"pos":[0,207],"content":"Computes the <xref href=\"System.Security.Cryptography.MD5\"></xref> hash value for the input data using the implementation provided by the cryptographic service provider (CSP). This class cannot be inherited.","nodes":[{"content":"Computes the <ph id=\"ph1\">&lt;xref href=\"System.Security.Cryptography.MD5\"&gt;&lt;/xref&gt;</ph> hash value for the input data using the implementation provided by the cryptographic service provider (CSP).","pos":[0,175],"source":"Computes the <xref href=\"System.Security.Cryptography.MD5\"></xref> hash value for the input data using the implementation provided by the cryptographic service provider (CSP)."},{"content":"This class cannot be inherited.","pos":[176,207]}]}],"pos":[974,1182],"yaml":true},{"content":"Hash functions map binary strings of an arbitrary length to small binary strings of a fixed length. A cryptographic hash function has the property that it is computationally infeasible to find two distinct inputs that hash to the same value; that is, hashes of two sets of data should match if the corresponding data also matches. Small changes to the data result in large, unpredictable changes in the hash.  \n  \n> [!NOTE]\n>  Newer hash functions such as the Secure Hash Algorithms SHA-256 and SHA-512 are available. Consider using the <xref:System.Security.Cryptography.SHA256> class or the <xref:System.Security.Cryptography.SHA512> class instead of the <xref:System.Security.Cryptography.MD5CryptoServiceProvider> class. Use <xref:System.Security.Cryptography.MD5CryptoServiceProvider> only for compatibility with legacy applications and data.  \n  \n The hash size for the <xref:System.Security.Cryptography.MD5CryptoServiceProvider> class is 128 bits.  \n  \n The <xref:System.Security.Cryptography.HashAlgorithm.ComputeHash%2A> methods of the <xref:System.Security.Cryptography.MD5CryptoServiceProvider> class return the hash as an array of 16 bytes.  Note that some MD5 implementations produce a 32-character, hexadecimal-formatted hash.  To interoperate with such implementations, format the return value of the <xref:System.Security.Cryptography.HashAlgorithm.ComputeHash%2A> methods as a hexadecimal value.","nodes":[{"pos":[0,408],"content":"Hash functions map binary strings of an arbitrary length to small binary strings of a fixed length. A cryptographic hash function has the property that it is computationally infeasible to find two distinct inputs that hash to the same value; that is, hashes of two sets of data should match if the corresponding data also matches. Small changes to the data result in large, unpredictable changes in the hash.","nodes":[{"content":"Hash functions map binary strings of an arbitrary length to small binary strings of a fixed length. A cryptographic hash function has the property that it is computationally infeasible to find two distinct inputs that hash to the same value; that is, hashes of two sets of data should match if the corresponding data also matches. Small changes to the data result in large, unpredictable changes in the hash.","pos":[0,408],"nodes":[{"content":"Hash functions map binary strings of an arbitrary length to small binary strings of a fixed length.","pos":[0,99]},{"content":"A cryptographic hash function has the property that it is computationally infeasible to find two distinct inputs that hash to the same value; that is, hashes of two sets of data should match if the corresponding data also matches.","pos":[100,330]},{"content":"Small changes to the data result in large, unpredictable changes in the hash.","pos":[331,408]}]}]},{"pos":[416,847],"content":"[!NOTE]\n Newer hash functions such as the Secure Hash Algorithms SHA-256 and SHA-512 are available. Consider using the <xref:System.Security.Cryptography.SHA256> class or the <xref:System.Security.Cryptography.SHA512> class instead of the <xref:System.Security.Cryptography.MD5CryptoServiceProvider> class. Use <xref:System.Security.Cryptography.MD5CryptoServiceProvider> only for compatibility with legacy applications and data.","leadings":["","> "],"nodes":[{"content":" Newer hash functions such as the Secure Hash Algorithms SHA-256 and SHA-512 are available. Consider using the <xref:System.Security.Cryptography.SHA256> class or the <xref:System.Security.Cryptography.SHA512> class instead of the <xref:System.Security.Cryptography.MD5CryptoServiceProvider> class. Use <xref:System.Security.Cryptography.MD5CryptoServiceProvider> only for compatibility with legacy applications and data.","pos":[8,429],"nodes":[{"content":"Newer hash functions such as the Secure Hash Algorithms SHA-256 and SHA-512 are available.","pos":[1,91]},{"content":"Consider using the <ph id=\"ph1\">&lt;xref:System.Security.Cryptography.SHA256&gt;</ph> class or the <ph id=\"ph2\">&lt;xref:System.Security.Cryptography.SHA512&gt;</ph> class instead of the <ph id=\"ph3\">&lt;xref:System.Security.Cryptography.MD5CryptoServiceProvider&gt;</ph> class.","pos":[92,298],"source":" Consider using the <xref:System.Security.Cryptography.SHA256> class or the <xref:System.Security.Cryptography.SHA512> class instead of the <xref:System.Security.Cryptography.MD5CryptoServiceProvider> class."},{"content":"Use <ph id=\"ph1\">&lt;xref:System.Security.Cryptography.MD5CryptoServiceProvider&gt;</ph> only for compatibility with legacy applications and data.","pos":[299,421],"source":" Use <xref:System.Security.Cryptography.MD5CryptoServiceProvider> only for compatibility with legacy applications and data."}]}]},{"pos":[854,955],"content":"The hash size for the <xref:System.Security.Cryptography.MD5CryptoServiceProvider> class is 128 bits.","nodes":[{"content":"The hash size for the <ph id=\"ph1\">&lt;xref:System.Security.Cryptography.MD5CryptoServiceProvider&gt;</ph> class is 128 bits.","pos":[0,101],"source":"The hash size for the <xref:System.Security.Cryptography.MD5CryptoServiceProvider> class is 128 bits."}]},{"pos":[962,1413],"content":"The <xref:System.Security.Cryptography.HashAlgorithm.ComputeHash%2A> methods of the <xref:System.Security.Cryptography.MD5CryptoServiceProvider> class return the hash as an array of 16 bytes.  Note that some MD5 implementations produce a 32-character, hexadecimal-formatted hash.  To interoperate with such implementations, format the return value of the <xref:System.Security.Cryptography.HashAlgorithm.ComputeHash%2A> methods as a hexadecimal value.","nodes":[{"content":"The <xref:System.Security.Cryptography.HashAlgorithm.ComputeHash%2A> methods of the <xref:System.Security.Cryptography.MD5CryptoServiceProvider> class return the hash as an array of 16 bytes.  Note that some MD5 implementations produce a 32-character, hexadecimal-formatted hash.  To interoperate with such implementations, format the return value of the <xref:System.Security.Cryptography.HashAlgorithm.ComputeHash%2A> methods as a hexadecimal value.","pos":[0,451],"nodes":[{"content":"The <ph id=\"ph1\">&lt;xref:System.Security.Cryptography.HashAlgorithm.ComputeHash%2A&gt;</ph> methods of the <ph id=\"ph2\">&lt;xref:System.Security.Cryptography.MD5CryptoServiceProvider&gt;</ph> class return the hash as an array of 16 bytes.","pos":[0,191],"source":"The <xref:System.Security.Cryptography.HashAlgorithm.ComputeHash%2A> methods of the <xref:System.Security.Cryptography.MD5CryptoServiceProvider> class return the hash as an array of 16 bytes."},{"content":"Note that some MD5 implementations produce a 32-character, hexadecimal-formatted hash.","pos":[193,279]},{"content":"To interoperate with such implementations, format the return value of the <ph id=\"ph1\">&lt;xref:System.Security.Cryptography.HashAlgorithm.ComputeHash%2A&gt;</ph> methods as a hexadecimal value.","pos":[281,451],"source":"  To interoperate with such implementations, format the return value of the <xref:System.Security.Cryptography.HashAlgorithm.ComputeHash%2A> methods as a hexadecimal value."}]}]}],"pos":[1193,2616],"yaml":true,"extradata":"MT"},{"content":"Initializes a new instance of the <xref href=\"System.Security.Cryptography.MD5CryptoServiceProvider\"></xref> class.","nodes":[{"pos":[0,115],"content":"Initializes a new instance of the <ph id=\"ph1\">&lt;xref href=\"System.Security.Cryptography.MD5CryptoServiceProvider\"&gt;&lt;/xref&gt;</ph> class.","source":"Initializes a new instance of the <xref href=\"System.Security.Cryptography.MD5CryptoServiceProvider\"></xref> class."}],"pos":[7183,7299],"yaml":true},{"content":"A FIPS-compliant algorithm policy is not being used.","nodes":[{"pos":[0,52],"content":"A FIPS-compliant algorithm policy is not being used.","nodes":[{"content":"A FIPS-compliant algorithm policy is not being used.","pos":[0,52]}]}],"pos":[7574,7627],"yaml":true},{"content":"Initializes an instance of <xref href=\"System.Security.Cryptography.MD5CryptoServiceProvider\"></xref>.","nodes":[{"pos":[0,102],"content":"Initializes an instance of <ph id=\"ph1\">&lt;xref href=\"System.Security.Cryptography.MD5CryptoServiceProvider\"&gt;&lt;/xref&gt;</ph>.","source":"Initializes an instance of <xref href=\"System.Security.Cryptography.MD5CryptoServiceProvider\"></xref>."}],"pos":[14387,14490],"yaml":true}],"content":"### YamlMime:ManagedReference\nitems:\n- uid: System.Security.Cryptography.MD5CryptoServiceProvider\n  commentId: T:System.Security.Cryptography.MD5CryptoServiceProvider\n  id: MD5CryptoServiceProvider\n  children:\n  - System.Security.Cryptography.MD5CryptoServiceProvider.#ctor\n  - System.Security.Cryptography.MD5CryptoServiceProvider.Dispose(System.Boolean)\n  - System.Security.Cryptography.MD5CryptoServiceProvider.Finalize\n  - System.Security.Cryptography.MD5CryptoServiceProvider.HashCore(System.Byte[],System.Int32,System.Int32)\n  - System.Security.Cryptography.MD5CryptoServiceProvider.HashFinal\n  - System.Security.Cryptography.MD5CryptoServiceProvider.Initialize\n  langs:\n  - csharp\n  name: MD5CryptoServiceProvider\n  nameWithType: MD5CryptoServiceProvider\n  fullName: System.Security.Cryptography.MD5CryptoServiceProvider\n  type: Class\n  assemblies:\n  - mscorlib\n  - netstandard\n  - System.Security.Cryptography.Csp\n  namespace: System.Security.Cryptography\n  summary: Computes the <xref href=\"System.Security.Cryptography.MD5\"></xref> hash value for the input data using the implementation provided by the cryptographic service provider (CSP). This class cannot be inherited.\n  remarks: \"Hash functions map binary strings of an arbitrary length to small binary strings of a fixed length. A cryptographic hash function has the property that it is computationally infeasible to find two distinct inputs that hash to the same value; that is, hashes of two sets of data should match if the corresponding data also matches. Small changes to the data result in large, unpredictable changes in the hash.  \\n  \\n> [!NOTE]\\n>  Newer hash functions such as the Secure Hash Algorithms SHA-256 and SHA-512 are available. Consider using the <xref:System.Security.Cryptography.SHA256> class or the <xref:System.Security.Cryptography.SHA512> class instead of the <xref:System.Security.Cryptography.MD5CryptoServiceProvider> class. Use <xref:System.Security.Cryptography.MD5CryptoServiceProvider> only for compatibility with legacy applications and data.  \\n  \\n The hash size for the <xref:System.Security.Cryptography.MD5CryptoServiceProvider> class is 128 bits.  \\n  \\n The <xref:System.Security.Cryptography.HashAlgorithm.ComputeHash%2A> methods of the <xref:System.Security.Cryptography.MD5CryptoServiceProvider> class return the hash as an array of 16 bytes.  Note that some MD5 implementations produce a 32-character, hexadecimal-formatted hash.  To interoperate with such implementations, format the return value of the <xref:System.Security.Cryptography.HashAlgorithm.ComputeHash%2A> methods as a hexadecimal value.\"\n  example:\n  - \"The following code example computes the <xref:System.Security.Cryptography.MD5> hash value for `data` and returns it.  \\n  \\n [!code-cpp[Classic MD5CryptoServiceProvider Example#1](~/samples/snippets/cpp/VS_Snippets_CLR_Classic/classic MD5CryptoServiceProvider Example/CPP/source.cpp#1)]\\n [!code-csharp[Classic MD5CryptoServiceProvider Example#1](~/samples/snippets/csharp/VS_Snippets_CLR_Classic/classic MD5CryptoServiceProvider Example/CS/source.cs#1)]\\n [!code-vb[Classic MD5CryptoServiceProvider Example#1](~/samples/snippets/visualbasic/VS_Snippets_CLR_Classic/classic MD5CryptoServiceProvider Example/VB/source.vb#1)]  \\n  \\n The following code example computes the <xref:System.Security.Cryptography.MD5> hash value of a string and returns the hash as a 32-character, hexadecimal-formatted string.  The hash string created by this code example is compatible with any MD5 hash function (on any platform) that creates a 32-character, hexadecimal-formatted hash string.  \\n  \\n [!code-csharp[Security.Cryptography.MD5CryptoServiceProvider#1](~/samples/snippets/csharp/VS_Snippets_CLR/Security.Cryptography.MD5CryptoServiceProvider/cs/example.cs#1)]\\n [!code-vb[Security.Cryptography.MD5CryptoServiceProvider#1](~/samples/snippets/visualbasic/VS_Snippets_CLR/Security.Cryptography.MD5CryptoServiceProvider/vb/example.vb#1)]\"\n  syntax:\n    content: >-\n      [System.Runtime.InteropServices.ComVisible(true)]\n\n      public sealed class MD5CryptoServiceProvider : System.Security.Cryptography.MD5\n  inheritance:\n  - System.Object\n  - System.Security.Cryptography.HashAlgorithm\n  - System.Security.Cryptography.MD5\n  implements: []\n  inheritedMembers:\n  - System.Object.Equals(System.Object)\n  - System.Object.Equals(System.Object,System.Object)\n  - System.Object.GetHashCode\n  - System.Object.GetType\n  - System.Object.MemberwiseClone\n  - System.Object.ReferenceEquals(System.Object,System.Object)\n  - System.Object.ToString\n  - System.Security.Cryptography.HashAlgorithm.CanReuseTransform\n  - System.Security.Cryptography.HashAlgorithm.CanTransformMultipleBlocks\n  - System.Security.Cryptography.HashAlgorithm.Clear\n  - System.Security.Cryptography.HashAlgorithm.ComputeHash(System.Byte[])\n  - System.Security.Cryptography.HashAlgorithm.ComputeHash(System.Byte[],System.Int32,System.Int32)\n  - System.Security.Cryptography.HashAlgorithm.ComputeHash(System.IO.Stream)\n  - System.Security.Cryptography.HashAlgorithm.Dispose\n  - System.Security.Cryptography.HashAlgorithm.Hash\n  - System.Security.Cryptography.HashAlgorithm.HashSize\n  - System.Security.Cryptography.HashAlgorithm.HashSizeValue\n  - System.Security.Cryptography.HashAlgorithm.HashValue\n  - System.Security.Cryptography.HashAlgorithm.InputBlockSize\n  - System.Security.Cryptography.HashAlgorithm.OutputBlockSize\n  - System.Security.Cryptography.HashAlgorithm.State\n  - System.Security.Cryptography.HashAlgorithm.TransformBlock(System.Byte[],System.Int32,System.Int32,System.Byte[],System.Int32)\n  - System.Security.Cryptography.HashAlgorithm.TransformFinalBlock(System.Byte[],System.Int32,System.Int32)\n  - System.Security.Cryptography.MD5.Create\n  - System.Security.Cryptography.MD5.Create(System.String)\n  attributes:\n  - type: System.Runtime.InteropServices.ComVisibleAttribute\n  version:\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - netstandard-2.0\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  monikers:\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - netstandard-2.0\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Security.Cryptography/MD5CryptoServiceProvider.xml\n  ms.technology:\n  - dotnet-standard\n  author: mairaw\n  ms.author: mairaw\n  manager: wpickett\n- uid: System.Security.Cryptography.MD5CryptoServiceProvider.#ctor\n  commentId: M:System.Security.Cryptography.MD5CryptoServiceProvider.#ctor\n  id: '#ctor'\n  parent: System.Security.Cryptography.MD5CryptoServiceProvider\n  langs:\n  - csharp\n  name: MD5CryptoServiceProvider()\n  nameWithType: MD5CryptoServiceProvider.MD5CryptoServiceProvider()\n  fullName: MD5CryptoServiceProvider.MD5CryptoServiceProvider()\n  type: Constructor\n  assemblies:\n  - mscorlib\n  - netstandard\n  - System.Security.Cryptography.Csp\n  namespace: System.Security.Cryptography\n  summary: Initializes a new instance of the <xref href=\"System.Security.Cryptography.MD5CryptoServiceProvider\"></xref> class.\n  syntax:\n    content: public MD5CryptoServiceProvider ();\n    parameters: []\n  overload: System.Security.Cryptography.MD5CryptoServiceProvider.#ctor*\n  exceptions:\n  - type: System.InvalidOperationException\n    commentId: T:System.InvalidOperationException\n    description: A FIPS-compliant algorithm policy is not being used.\n  version:\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - netstandard-2.0\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  monikers:\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - netstandard-2.0\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Security.Cryptography/MD5CryptoServiceProvider.xml\n  ms.technology:\n  - dotnet-standard\n  author: mairaw\n  ms.author: mairaw\n  manager: wpickett\n- uid: System.Security.Cryptography.MD5CryptoServiceProvider.Dispose(System.Boolean)\n  commentId: M:System.Security.Cryptography.MD5CryptoServiceProvider.Dispose(System.Boolean)\n  id: Dispose(System.Boolean)\n  parent: System.Security.Cryptography.MD5CryptoServiceProvider\n  langs:\n  - csharp\n  name: Dispose(Boolean)\n  nameWithType: MD5CryptoServiceProvider.Dispose(Boolean)\n  fullName: MD5CryptoServiceProvider.Dispose(Boolean)\n  type: Method\n  assemblies:\n  - mscorlib\n  - netstandard\n  - System.Security.Cryptography.Csp\n  namespace: System.Security.Cryptography\n  syntax:\n    content: protected override void Dispose (bool disposing);\n    parameters:\n    - id: disposing\n      type: System.Boolean\n      description: ''\n  overload: System.Security.Cryptography.MD5CryptoServiceProvider.Dispose*\n  exceptions: []\n  version:\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - netstandard-2.0\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  monikers:\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - netstandard-2.0\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Security.Cryptography/MD5CryptoServiceProvider.xml\n- uid: System.Security.Cryptography.MD5CryptoServiceProvider.Finalize\n  commentId: M:System.Security.Cryptography.MD5CryptoServiceProvider.Finalize\n  id: Finalize\n  parent: System.Security.Cryptography.MD5CryptoServiceProvider\n  langs:\n  - csharp\n  name: Finalize()\n  nameWithType: MD5CryptoServiceProvider.Finalize()\n  fullName: MD5CryptoServiceProvider.Finalize()\n  type: Method\n  assemblies:\n  - mscorlib\n  namespace: System.Security.Cryptography\n  syntax:\n    content: ~MD5CryptoServiceProvider ();\n    parameters: []\n  overload: System.Security.Cryptography.MD5CryptoServiceProvider.Finalize*\n  exceptions: []\n  version:\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  monikers:\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Security.Cryptography/MD5CryptoServiceProvider.xml\n- uid: System.Security.Cryptography.MD5CryptoServiceProvider.HashCore(System.Byte[],System.Int32,System.Int32)\n  commentId: M:System.Security.Cryptography.MD5CryptoServiceProvider.HashCore(System.Byte[],System.Int32,System.Int32)\n  id: HashCore(System.Byte[],System.Int32,System.Int32)\n  parent: System.Security.Cryptography.MD5CryptoServiceProvider\n  langs:\n  - csharp\n  name: HashCore(Byte[], Int32, Int32)\n  nameWithType: MD5CryptoServiceProvider.HashCore(Byte[], Int32, Int32)\n  fullName: MD5CryptoServiceProvider.HashCore(Byte[], Int32, Int32)\n  type: Method\n  assemblies:\n  - mscorlib\n  - netstandard\n  - System.Security.Cryptography.Csp\n  namespace: System.Security.Cryptography\n  syntax:\n    content: protected override void HashCore (byte[] rgb, int ibStart, int cbSize);\n    parameters:\n    - id: rgb\n      type: System.Byte[]\n      description: ''\n    - id: ibStart\n      type: System.Int32\n      description: ''\n    - id: cbSize\n      type: System.Int32\n      description: ''\n  overload: System.Security.Cryptography.MD5CryptoServiceProvider.HashCore*\n  exceptions: []\n  version:\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - netstandard-2.0\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  monikers:\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - netstandard-2.0\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Security.Cryptography/MD5CryptoServiceProvider.xml\n- uid: System.Security.Cryptography.MD5CryptoServiceProvider.HashFinal\n  commentId: M:System.Security.Cryptography.MD5CryptoServiceProvider.HashFinal\n  id: HashFinal\n  parent: System.Security.Cryptography.MD5CryptoServiceProvider\n  langs:\n  - csharp\n  name: HashFinal()\n  nameWithType: MD5CryptoServiceProvider.HashFinal()\n  fullName: MD5CryptoServiceProvider.HashFinal()\n  type: Method\n  assemblies:\n  - mscorlib\n  - netstandard\n  - System.Security.Cryptography.Csp\n  namespace: System.Security.Cryptography\n  syntax:\n    content: protected override byte[] HashFinal ();\n    parameters: []\n    return:\n      type: System.Byte[]\n      description: ''\n  overload: System.Security.Cryptography.MD5CryptoServiceProvider.HashFinal*\n  exceptions: []\n  version:\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - netstandard-2.0\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  monikers:\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - netstandard-2.0\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Security.Cryptography/MD5CryptoServiceProvider.xml\n- uid: System.Security.Cryptography.MD5CryptoServiceProvider.Initialize\n  commentId: M:System.Security.Cryptography.MD5CryptoServiceProvider.Initialize\n  id: Initialize\n  parent: System.Security.Cryptography.MD5CryptoServiceProvider\n  langs:\n  - csharp\n  name: Initialize()\n  nameWithType: MD5CryptoServiceProvider.Initialize()\n  fullName: MD5CryptoServiceProvider.Initialize()\n  type: Method\n  assemblies:\n  - mscorlib\n  - netstandard\n  - System.Security.Cryptography.Csp\n  namespace: System.Security.Cryptography\n  summary: Initializes an instance of <xref href=\"System.Security.Cryptography.MD5CryptoServiceProvider\"></xref>.\n  syntax:\n    content: public override void Initialize ();\n    parameters: []\n  overload: System.Security.Cryptography.MD5CryptoServiceProvider.Initialize*\n  exceptions: []\n  version:\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - netstandard-2.0\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  monikers:\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - netstandard-2.0\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Security.Cryptography/MD5CryptoServiceProvider.xml\n  ms.technology:\n  - dotnet-standard\n  author: mairaw\n  ms.author: mairaw\n  manager: wpickett\nreferences:\n- uid: System.Security.Cryptography.MD5\n  parent: System.Security.Cryptography\n  isExternal: false\n  name: MD5\n  nameWithType: MD5\n  fullName: System.Security.Cryptography.MD5\n- uid: System.InvalidOperationException\n  parent: System\n  isExternal: false\n  name: InvalidOperationException\n  nameWithType: InvalidOperationException\n  fullName: System.InvalidOperationException\n- uid: System.Security.Cryptography.MD5CryptoServiceProvider.#ctor\n  parent: System.Security.Cryptography.MD5CryptoServiceProvider\n  isExternal: false\n  name: MD5CryptoServiceProvider()\n  nameWithType: MD5CryptoServiceProvider.MD5CryptoServiceProvider()\n  fullName: MD5CryptoServiceProvider.MD5CryptoServiceProvider()\n- uid: System.Security.Cryptography.MD5CryptoServiceProvider.Dispose(System.Boolean)\n  parent: System.Security.Cryptography.MD5CryptoServiceProvider\n  isExternal: false\n  name: Dispose(Boolean)\n  nameWithType: MD5CryptoServiceProvider.Dispose(Boolean)\n  fullName: MD5CryptoServiceProvider.Dispose(Boolean)\n- uid: System.Boolean\n  parent: System\n  isExternal: false\n  name: Boolean\n  nameWithType: Boolean\n  fullName: System.Boolean\n- uid: System.Security.Cryptography.MD5CryptoServiceProvider.Finalize\n  parent: System.Security.Cryptography.MD5CryptoServiceProvider\n  isExternal: false\n  name: Finalize()\n  nameWithType: MD5CryptoServiceProvider.Finalize()\n  fullName: MD5CryptoServiceProvider.Finalize()\n- uid: System.Security.Cryptography.MD5CryptoServiceProvider.HashCore(System.Byte[],System.Int32,System.Int32)\n  parent: System.Security.Cryptography.MD5CryptoServiceProvider\n  isExternal: false\n  name: HashCore(Byte[], Int32, Int32)\n  nameWithType: MD5CryptoServiceProvider.HashCore(Byte[], Int32, Int32)\n  fullName: MD5CryptoServiceProvider.HashCore(Byte[], Int32, Int32)\n- uid: System.Byte\n  name: Byte\n  nameWithType: Byte\n  fullName: System.Byte\n- uid: System.Byte[]\n  parent: System\n  isExternal: false\n  name: Byte[]\n  nameWithType: Byte[]\n  fullName: System.Byte[]\n  spec.csharp:\n  - uid: System.Byte\n    name: Byte\n    nameWithType: Byte\n    fullName: System.Byte\n  - name: '[]'\n    nameWithType: '[]'\n    fullName: '[]'\n- uid: System.Int32\n  parent: System\n  isExternal: false\n  name: Int32\n  nameWithType: Int32\n  fullName: System.Int32\n- uid: System.Security.Cryptography.MD5CryptoServiceProvider.HashFinal\n  parent: System.Security.Cryptography.MD5CryptoServiceProvider\n  isExternal: false\n  name: HashFinal()\n  nameWithType: MD5CryptoServiceProvider.HashFinal()\n  fullName: MD5CryptoServiceProvider.HashFinal()\n- uid: System.Security.Cryptography.MD5CryptoServiceProvider.Initialize\n  parent: System.Security.Cryptography.MD5CryptoServiceProvider\n  isExternal: false\n  name: Initialize()\n  nameWithType: MD5CryptoServiceProvider.Initialize()\n  fullName: MD5CryptoServiceProvider.Initialize()\n- uid: System.Security.Cryptography.MD5CryptoServiceProvider.#ctor*\n  parent: System.Security.Cryptography.MD5CryptoServiceProvider\n  isExternal: false\n  name: MD5CryptoServiceProvider\n  nameWithType: MD5CryptoServiceProvider.MD5CryptoServiceProvider\n  fullName: MD5CryptoServiceProvider.MD5CryptoServiceProvider\n  monikers:\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - netstandard-2.0\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Security.Cryptography/MD5CryptoServiceProvider.xml\n- uid: System.Security.Cryptography.MD5CryptoServiceProvider.Dispose*\n  parent: System.Security.Cryptography.MD5CryptoServiceProvider\n  isExternal: false\n  name: Dispose\n  nameWithType: MD5CryptoServiceProvider.Dispose\n  fullName: MD5CryptoServiceProvider.Dispose\n  monikers:\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - netstandard-2.0\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Security.Cryptography/MD5CryptoServiceProvider.xml\n- uid: System.Security.Cryptography.MD5CryptoServiceProvider.Finalize*\n  parent: System.Security.Cryptography.MD5CryptoServiceProvider\n  isExternal: false\n  name: Finalize\n  nameWithType: MD5CryptoServiceProvider.Finalize\n  fullName: MD5CryptoServiceProvider.Finalize\n  monikers:\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Security.Cryptography/MD5CryptoServiceProvider.xml\n- uid: System.Security.Cryptography.MD5CryptoServiceProvider.HashCore*\n  parent: System.Security.Cryptography.MD5CryptoServiceProvider\n  isExternal: false\n  name: HashCore\n  nameWithType: MD5CryptoServiceProvider.HashCore\n  fullName: MD5CryptoServiceProvider.HashCore\n  monikers:\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - netstandard-2.0\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Security.Cryptography/MD5CryptoServiceProvider.xml\n- uid: System.Security.Cryptography.MD5CryptoServiceProvider.HashFinal*\n  parent: System.Security.Cryptography.MD5CryptoServiceProvider\n  isExternal: false\n  name: HashFinal\n  nameWithType: MD5CryptoServiceProvider.HashFinal\n  fullName: MD5CryptoServiceProvider.HashFinal\n  monikers:\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - netstandard-2.0\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Security.Cryptography/MD5CryptoServiceProvider.xml\n- uid: System.Security.Cryptography.MD5CryptoServiceProvider.Initialize*\n  parent: System.Security.Cryptography.MD5CryptoServiceProvider\n  isExternal: false\n  name: Initialize\n  nameWithType: MD5CryptoServiceProvider.Initialize\n  fullName: MD5CryptoServiceProvider.Initialize\n  monikers:\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - netstandard-2.0\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Security.Cryptography/MD5CryptoServiceProvider.xml\n- uid: System.Object.Equals(System.Object)\n  parent: System.Object\n  isExternal: false\n  name: Equals(Object)\n  nameWithType: Object.Equals(Object)\n  fullName: Object.Equals(Object)\n- uid: System.Object.Equals(System.Object,System.Object)\n  parent: System.Object\n  isExternal: false\n  name: Equals(Object, Object)\n  nameWithType: Object.Equals(Object, Object)\n  fullName: Object.Equals(Object, Object)\n- uid: System.Object.GetHashCode\n  parent: System.Object\n  isExternal: false\n  name: GetHashCode()\n  nameWithType: Object.GetHashCode()\n  fullName: Object.GetHashCode()\n- uid: System.Object.GetType\n  parent: System.Object\n  isExternal: false\n  name: GetType()\n  nameWithType: Object.GetType()\n  fullName: Object.GetType()\n- uid: System.Object.MemberwiseClone\n  parent: System.Object\n  isExternal: false\n  name: MemberwiseClone()\n  nameWithType: Object.MemberwiseClone()\n  fullName: Object.MemberwiseClone()\n- uid: System.Object.ReferenceEquals(System.Object,System.Object)\n  parent: System.Object\n  isExternal: false\n  name: ReferenceEquals(Object, Object)\n  nameWithType: Object.ReferenceEquals(Object, Object)\n  fullName: Object.ReferenceEquals(Object, Object)\n- uid: System.Object.ToString\n  parent: System.Object\n  isExternal: false\n  name: ToString()\n  nameWithType: Object.ToString()\n  fullName: Object.ToString()\n- uid: System.Security.Cryptography.HashAlgorithm.CanReuseTransform\n  parent: System.Security.Cryptography.HashAlgorithm\n  isExternal: false\n  name: CanReuseTransform\n  nameWithType: HashAlgorithm.CanReuseTransform\n  fullName: HashAlgorithm.CanReuseTransform\n- uid: System.Security.Cryptography.HashAlgorithm.CanTransformMultipleBlocks\n  parent: System.Security.Cryptography.HashAlgorithm\n  isExternal: false\n  name: CanTransformMultipleBlocks\n  nameWithType: HashAlgorithm.CanTransformMultipleBlocks\n  fullName: HashAlgorithm.CanTransformMultipleBlocks\n- uid: System.Security.Cryptography.HashAlgorithm.Clear\n  parent: System.Security.Cryptography.HashAlgorithm\n  isExternal: false\n  name: Clear()\n  nameWithType: HashAlgorithm.Clear()\n  fullName: HashAlgorithm.Clear()\n- uid: System.Security.Cryptography.HashAlgorithm.ComputeHash(System.Byte[])\n  parent: System.Security.Cryptography.HashAlgorithm\n  isExternal: false\n  name: ComputeHash(Byte[])\n  nameWithType: HashAlgorithm.ComputeHash(Byte[])\n  fullName: HashAlgorithm.ComputeHash(Byte[])\n- uid: System.Security.Cryptography.HashAlgorithm.ComputeHash(System.IO.Stream)\n  parent: System.Security.Cryptography.HashAlgorithm\n  isExternal: false\n  name: ComputeHash(Stream)\n  nameWithType: HashAlgorithm.ComputeHash(Stream)\n  fullName: HashAlgorithm.ComputeHash(Stream)\n- uid: System.Security.Cryptography.HashAlgorithm.ComputeHash(System.Byte[],System.Int32,System.Int32)\n  parent: System.Security.Cryptography.HashAlgorithm\n  isExternal: false\n  name: ComputeHash(Byte[], Int32, Int32)\n  nameWithType: HashAlgorithm.ComputeHash(Byte[], Int32, Int32)\n  fullName: HashAlgorithm.ComputeHash(Byte[], Int32, Int32)\n- uid: System.Security.Cryptography.MD5.Create\n  parent: System.Security.Cryptography.MD5\n  isExternal: false\n  name: Create()\n  nameWithType: MD5.Create()\n  fullName: MD5.Create()\n- uid: System.Security.Cryptography.MD5.Create(System.String)\n  parent: System.Security.Cryptography.MD5\n  isExternal: false\n  name: Create(String)\n  nameWithType: MD5.Create(String)\n  fullName: MD5.Create(String)\n- uid: System.Security.Cryptography.HashAlgorithm.Dispose\n  parent: System.Security.Cryptography.HashAlgorithm\n  isExternal: false\n  name: Dispose()\n  nameWithType: HashAlgorithm.Dispose()\n  fullName: HashAlgorithm.Dispose()\n- uid: System.Security.Cryptography.HashAlgorithm.Hash\n  parent: System.Security.Cryptography.HashAlgorithm\n  isExternal: false\n  name: Hash\n  nameWithType: HashAlgorithm.Hash\n  fullName: HashAlgorithm.Hash\n- uid: System.Security.Cryptography.HashAlgorithm.HashSize\n  parent: System.Security.Cryptography.HashAlgorithm\n  isExternal: false\n  name: HashSize\n  nameWithType: HashAlgorithm.HashSize\n  fullName: HashAlgorithm.HashSize\n- uid: System.Security.Cryptography.HashAlgorithm.HashSizeValue\n  parent: System.Security.Cryptography.HashAlgorithm\n  isExternal: false\n  name: HashSizeValue\n  nameWithType: HashAlgorithm.HashSizeValue\n  fullName: HashAlgorithm.HashSizeValue\n- uid: System.Security.Cryptography.HashAlgorithm.HashValue\n  parent: System.Security.Cryptography.HashAlgorithm\n  isExternal: false\n  name: HashValue\n  nameWithType: HashAlgorithm.HashValue\n  fullName: HashAlgorithm.HashValue\n- uid: System.Security.Cryptography.HashAlgorithm.InputBlockSize\n  parent: System.Security.Cryptography.HashAlgorithm\n  isExternal: false\n  name: InputBlockSize\n  nameWithType: HashAlgorithm.InputBlockSize\n  fullName: HashAlgorithm.InputBlockSize\n- uid: System.Security.Cryptography.HashAlgorithm.OutputBlockSize\n  parent: System.Security.Cryptography.HashAlgorithm\n  isExternal: false\n  name: OutputBlockSize\n  nameWithType: HashAlgorithm.OutputBlockSize\n  fullName: HashAlgorithm.OutputBlockSize\n- uid: System.Security.Cryptography.HashAlgorithm.State\n  parent: System.Security.Cryptography.HashAlgorithm\n  isExternal: false\n  name: State\n  nameWithType: HashAlgorithm.State\n  fullName: HashAlgorithm.State\n- uid: System.Security.Cryptography.HashAlgorithm.TransformBlock(System.Byte[],System.Int32,System.Int32,System.Byte[],System.Int32)\n  parent: System.Security.Cryptography.HashAlgorithm\n  isExternal: false\n  name: TransformBlock(Byte[], Int32, Int32, Byte[], Int32)\n  nameWithType: HashAlgorithm.TransformBlock(Byte[], Int32, Int32, Byte[], Int32)\n  fullName: HashAlgorithm.TransformBlock(Byte[], Int32, Int32, Byte[], Int32)\n- uid: System.Security.Cryptography.HashAlgorithm.TransformFinalBlock(System.Byte[],System.Int32,System.Int32)\n  parent: System.Security.Cryptography.HashAlgorithm\n  isExternal: false\n  name: TransformFinalBlock(Byte[], Int32, Int32)\n  nameWithType: HashAlgorithm.TransformFinalBlock(Byte[], Int32, Int32)\n  fullName: HashAlgorithm.TransformFinalBlock(Byte[], Int32, Int32)\n"}