{"nodes":[{"content":"Indicates that an object's text representation is obscured by characters such as asterisks. This class cannot be inherited.","nodes":[{"pos":[0,123],"content":"Indicates that an object's text representation is obscured by characters such as asterisks. This class cannot be inherited.","nodes":[{"content":"Indicates that an object's text representation is obscured by characters such as asterisks. This class cannot be inherited.","pos":[0,123],"nodes":[{"content":"Indicates that an object's text representation is obscured by characters such as asterisks.","pos":[0,91]},{"content":"This class cannot be inherited.","pos":[92,123]}]}]}],"pos":[1128,1252],"yaml":true},{"content":"If the <xref:System.ComponentModel.PasswordPropertyTextAttribute> attribute is placed on a property or a type, its text representation in a property window appears as dots or asterisks to indicate a password field.  \n  \n> [!CAUTION]\n>  This indication in no way represents any type of encryption or security. For more information about using attributes, see [Attributes](http://msdn.microsoft.com/library/30386922-1e00-4602-9ebf-526b271a8b87).","nodes":[{"pos":[0,214],"content":"If the <xref:System.ComponentModel.PasswordPropertyTextAttribute> attribute is placed on a property or a type, its text representation in a property window appears as dots or asterisks to indicate a password field.","nodes":[{"content":"If the <ph id=\"ph1\">&lt;xref:System.ComponentModel.PasswordPropertyTextAttribute&gt;</ph> attribute is placed on a property or a type, its text representation in a property window appears as dots or asterisks to indicate a password field.","pos":[0,214],"source":"If the <xref:System.ComponentModel.PasswordPropertyTextAttribute> attribute is placed on a property or a type, its text representation in a property window appears as dots or asterisks to indicate a password field."}]},{"pos":[222,443],"content":"[!CAUTION]\n This indication in no way represents any type of encryption or security. For more information about using attributes, see [Attributes](http://msdn.microsoft.com/library/30386922-1e00-4602-9ebf-526b271a8b87).","leadings":["","> "],"nodes":[{"content":" This indication in no way represents any type of encryption or security. For more information about using attributes, see [Attributes](http://msdn.microsoft.com/library/30386922-1e00-4602-9ebf-526b271a8b87).","pos":[11,219],"nodes":[{"content":"This indication in no way represents any type of encryption or security.","pos":[1,73]},{"content":"For more information about using attributes, see <bpt id=\"p1\">[</bpt>Attributes<ept id=\"p1\">](http://msdn.microsoft.com/library/30386922-1e00-4602-9ebf-526b271a8b87)</ept>.","pos":[74,208],"source":" For more information about using attributes, see [Attributes](http://msdn.microsoft.com/library/30386922-1e00-4602-9ebf-526b271a8b87)."}]}]}],"pos":[1263,1712],"yaml":true,"extradata":"MT"},{"content":"Initializes a new instance of the <xref href=\"System.ComponentModel.PasswordPropertyTextAttribute\"></xref> class.","nodes":[{"pos":[0,113],"content":"Initializes a new instance of the <ph id=\"ph1\">&lt;xref href=\"System.ComponentModel.PasswordPropertyTextAttribute\"&gt;&lt;/xref&gt;</ph> class.","source":"Initializes a new instance of the <xref href=\"System.ComponentModel.PasswordPropertyTextAttribute\"></xref> class."}],"pos":[7614,7728],"yaml":true},{"content":"Initializes a new instance of the <xref href=\"System.ComponentModel.PasswordPropertyTextAttribute\"></xref> class, optionally showing password text.","nodes":[{"pos":[0,147],"content":"Initializes a new instance of the <ph id=\"ph1\">&lt;xref href=\"System.ComponentModel.PasswordPropertyTextAttribute\"&gt;&lt;/xref&gt;</ph> class, optionally showing password text.","source":"Initializes a new instance of the <xref href=\"System.ComponentModel.PasswordPropertyTextAttribute\"></xref> class, optionally showing password text."}],"pos":[9288,9436],"yaml":true},{"content":"`true` to indicate that the property should be shown as password text; otherwise, `false`. The default is `false`.","nodes":[{"pos":[0,114],"content":"`true` to indicate that the property should be shown as password text; otherwise, `false`. The default is `false`.","nodes":[{"content":"<ph id=\"ph1\">`true`</ph> to indicate that the property should be shown as password text; otherwise, <ph id=\"ph2\">`false`</ph>.","pos":[0,90],"source":"`true` to indicate that the property should be shown as password text; otherwise, `false`."},{"content":"The default is <ph id=\"ph1\">`false`</ph>.","pos":[91,114],"source":" The default is `false`."}]}],"pos":[9594,9711],"yaml":true},{"content":"Specifies the default value for the <xref href=\"System.ComponentModel.PasswordPropertyTextAttribute\"></xref>.","nodes":[{"pos":[0,109],"content":"Specifies the default value for the <ph id=\"ph1\">&lt;xref href=\"System.ComponentModel.PasswordPropertyTextAttribute\"&gt;&lt;/xref&gt;</ph>.","source":"Specifies the default value for the <xref href=\"System.ComponentModel.PasswordPropertyTextAttribute\"></xref>."}],"pos":[11045,11155],"yaml":true},{"content":"The default value is <xref:System.ComponentModel.PasswordPropertyTextAttribute.No>.","nodes":[{"pos":[0,83],"content":"The default value is <xref:System.ComponentModel.PasswordPropertyTextAttribute.No>.","nodes":[{"content":"The default value is <ph id=\"ph1\">&lt;xref:System.ComponentModel.PasswordPropertyTextAttribute.No&gt;</ph>.","pos":[0,83],"source":"The default value is <xref:System.ComponentModel.PasswordPropertyTextAttribute.No>."}]}],"pos":[11166,11250],"yaml":true,"extradata":"MT"},{"content":"Determines whether two <xref href=\"System.ComponentModel.PasswordPropertyTextAttribute\"></xref> instances are equal.","nodes":[{"pos":[0,116],"content":"Determines whether two <ph id=\"ph1\">&lt;xref href=\"System.ComponentModel.PasswordPropertyTextAttribute\"&gt;&lt;/xref&gt;</ph> instances are equal.","source":"Determines whether two <xref href=\"System.ComponentModel.PasswordPropertyTextAttribute\"></xref> instances are equal."}],"pos":[12782,12899],"yaml":true},{"content":"The <xref href=\"System.ComponentModel.PasswordPropertyTextAttribute\"></xref> to compare with the current <xref href=\"System.ComponentModel.PasswordPropertyTextAttribute\"></xref>.","nodes":[{"pos":[0,178],"content":"The <ph id=\"ph1\">&lt;xref href=\"System.ComponentModel.PasswordPropertyTextAttribute\"&gt;&lt;/xref&gt;</ph> to compare with the current <ph id=\"ph2\">&lt;xref href=\"System.ComponentModel.PasswordPropertyTextAttribute\"&gt;&lt;/xref&gt;</ph>.","source":"The <xref href=\"System.ComponentModel.PasswordPropertyTextAttribute\"></xref> to compare with the current <xref href=\"System.ComponentModel.PasswordPropertyTextAttribute\"></xref>."}],"pos":[13035,13214],"yaml":true},{"content":"`true` if the specified <xref href=\"System.ComponentModel.PasswordPropertyTextAttribute\"></xref> is equal to the current <xref href=\"System.ComponentModel.PasswordPropertyTextAttribute\"></xref>; otherwise, `false`.","nodes":[{"pos":[0,214],"content":"<ph id=\"ph1\">`true`</ph> if the specified <ph id=\"ph2\">&lt;xref href=\"System.ComponentModel.PasswordPropertyTextAttribute\"&gt;&lt;/xref&gt;</ph> is equal to the current <ph id=\"ph3\">&lt;xref href=\"System.ComponentModel.PasswordPropertyTextAttribute\"&gt;&lt;/xref&gt;</ph>; otherwise, <ph id=\"ph4\">`false`</ph>.","source":"`true` if the specified <xref href=\"System.ComponentModel.PasswordPropertyTextAttribute\"></xref> is equal to the current <xref href=\"System.ComponentModel.PasswordPropertyTextAttribute\"></xref>; otherwise, `false`."}],"pos":[13272,13489],"yaml":true},{"content":"Returns the hash code for this instance.","nodes":[{"pos":[0,40],"content":"Returns the hash code for this instance.","nodes":[{"content":"Returns the hash code for this instance.","pos":[0,40]}]}],"pos":[14855,14896],"yaml":true},{"content":"A hash code for the current <xref href=\"System.ComponentModel.PasswordPropertyTextAttribute\"></xref>.","nodes":[{"pos":[0,101],"content":"A hash code for the current <ph id=\"ph1\">&lt;xref href=\"System.ComponentModel.PasswordPropertyTextAttribute\"&gt;&lt;/xref&gt;</ph>.","source":"A hash code for the current <xref href=\"System.ComponentModel.PasswordPropertyTextAttribute\"></xref>."}],"pos":[15030,15132],"yaml":true},{"content":"Returns an indication whether the value of this instance is the default value.","nodes":[{"pos":[0,78],"content":"Returns an indication whether the value of this instance is the default value.","nodes":[{"content":"Returns an indication whether the value of this instance is the default value.","pos":[0,78]}]}],"pos":[16545,16624],"yaml":true},{"content":"`true` if this instance is the default attribute for the class; otherwise, `false`.","nodes":[{"pos":[0,83],"content":"<ph id=\"ph1\">`true`</ph> if this instance is the default attribute for the class; otherwise, <ph id=\"ph2\">`false`</ph>.","source":"`true` if this instance is the default attribute for the class; otherwise, `false`."}],"pos":[16768,16854],"yaml":true},{"content":"Specifies that a text property is not used as a password. This `static` (`Shared` in Visual Basic) field is read-only.","nodes":[{"pos":[0,118],"content":"Specifies that a text property is not used as a password. This `static` (`Shared` in Visual Basic) field is read-only.","nodes":[{"content":"Specifies that a text property is not used as a password.","pos":[0,57]},{"content":"This <ph id=\"ph1\">`static`</ph> (<ph id=\"ph2\">`Shared`</ph> in Visual Basic) field is read-only.","pos":[58,118],"source":" This `static` (`Shared` in Visual Basic) field is read-only."}]}],"pos":[18171,18290],"yaml":true},{"content":"The <xref:System.ComponentModel.PasswordPropertyTextAttribute.No> field is the default value for the <xref:System.ComponentModel.PasswordPropertyTextAttribute>.","nodes":[{"pos":[0,160],"content":"The <xref:System.ComponentModel.PasswordPropertyTextAttribute.No> field is the default value for the <xref:System.ComponentModel.PasswordPropertyTextAttribute>.","nodes":[{"content":"The <ph id=\"ph1\">&lt;xref:System.ComponentModel.PasswordPropertyTextAttribute.No&gt;</ph> field is the default value for the <ph id=\"ph2\">&lt;xref:System.ComponentModel.PasswordPropertyTextAttribute&gt;</ph>.","pos":[0,160],"source":"The <xref:System.ComponentModel.PasswordPropertyTextAttribute.No> field is the default value for the <xref:System.ComponentModel.PasswordPropertyTextAttribute>."}]}],"pos":[18301,18462],"yaml":true,"extradata":"MT"},{"content":"Gets a value indicating if the property for which the <xref href=\"System.ComponentModel.PasswordPropertyTextAttribute\"></xref> is defined should be shown as password text.","nodes":[{"pos":[0,171],"content":"Gets a value indicating if the property for which the <ph id=\"ph1\">&lt;xref href=\"System.ComponentModel.PasswordPropertyTextAttribute\"&gt;&lt;/xref&gt;</ph> is defined should be shown as password text.","source":"Gets a value indicating if the property for which the <xref href=\"System.ComponentModel.PasswordPropertyTextAttribute\"></xref> is defined should be shown as password text."}],"pos":[19934,20106],"yaml":true},{"content":"`true` if the property should be shown as password text; otherwise, `false`.","nodes":[{"pos":[0,76],"content":"<ph id=\"ph1\">`true`</ph> if the property should be shown as password text; otherwise, <ph id=\"ph2\">`false`</ph>.","source":"`true` if the property should be shown as password text; otherwise, `false`."}],"pos":[20217,20296],"yaml":true},{"content":"Specifies that a text property is used as a password. This `static` (`Shared` in Visual Basic) field is read-only.","nodes":[{"pos":[0,114],"content":"Specifies that a text property is used as a password. This `static` (`Shared` in Visual Basic) field is read-only.","nodes":[{"content":"Specifies that a text property is used as a password.","pos":[0,53]},{"content":"This <ph id=\"ph1\">`static`</ph> (<ph id=\"ph2\">`Shared`</ph> in Visual Basic) field is read-only.","pos":[54,114],"source":" This `static` (`Shared` in Visual Basic) field is read-only."}]}],"pos":[21609,21724],"yaml":true}],"content":"### YamlMime:ManagedReference\nitems:\n- uid: System.ComponentModel.PasswordPropertyTextAttribute\n  commentId: T:System.ComponentModel.PasswordPropertyTextAttribute\n  id: PasswordPropertyTextAttribute\n  children:\n  - System.ComponentModel.PasswordPropertyTextAttribute.#ctor\n  - System.ComponentModel.PasswordPropertyTextAttribute.#ctor(System.Boolean)\n  - System.ComponentModel.PasswordPropertyTextAttribute.Default\n  - System.ComponentModel.PasswordPropertyTextAttribute.Equals(System.Object)\n  - System.ComponentModel.PasswordPropertyTextAttribute.GetHashCode\n  - System.ComponentModel.PasswordPropertyTextAttribute.IsDefaultAttribute\n  - System.ComponentModel.PasswordPropertyTextAttribute.No\n  - System.ComponentModel.PasswordPropertyTextAttribute.Password\n  - System.ComponentModel.PasswordPropertyTextAttribute.Yes\n  langs:\n  - csharp\n  name: PasswordPropertyTextAttribute\n  nameWithType: PasswordPropertyTextAttribute\n  fullName: System.ComponentModel.PasswordPropertyTextAttribute\n  type: Class\n  assemblies:\n  - System\n  - netstandard\n  - System.ComponentModel.TypeConverter\n  namespace: System.ComponentModel\n  summary: Indicates that an object's text representation is obscured by characters such as asterisks. This class cannot be inherited.\n  remarks: \"If the <xref:System.ComponentModel.PasswordPropertyTextAttribute> attribute is placed on a property or a type, its text representation in a property window appears as dots or asterisks to indicate a password field.  \\n  \\n> [!CAUTION]\\n>  This indication in no way represents any type of encryption or security. For more information about using attributes, see [Attributes](http://msdn.microsoft.com/library/30386922-1e00-4602-9ebf-526b271a8b87).\"\n  example:\n  - \"The following code example demonstrates using the <xref:System.ComponentModel.PasswordPropertyTextAttribute> to obscure the value of a string property in a <xref:System.Windows.Forms.PropertyGrid> control. For a full code listing, see [How to: Apply Attributes in Windows Forms Controls](~/docs/framework/winforms/controls/how-to-apply-attributes-in-windows-forms-controls.md).  \\n  \\n [!code-csharp[System.ComponentModel.AttributesDemoControl#29](~/samples/snippets/csharp/VS_Snippets_Winforms/System.ComponentModel.AttributesDemoControl/CS/attributesdemocontrol.cs#29)]\\n [!code-vb[System.ComponentModel.AttributesDemoControl#29](~/samples/snippets/visualbasic/VS_Snippets_Winforms/System.ComponentModel.AttributesDemoControl/VB/attributesdemocontrol.vb#29)]\"\n  syntax:\n    content: >-\n      [System.AttributeUsage(System.AttributeTargets.All)]\n\n      public sealed class PasswordPropertyTextAttribute : Attribute\n  inheritance:\n  - System.Object\n  - System.Attribute\n  implements: []\n  inheritedMembers:\n  - System.Attribute.GetCustomAttribute(System.Reflection.Assembly,System.Type)\n  - System.Attribute.GetCustomAttribute(System.Reflection.Assembly,System.Type,System.Boolean)\n  - System.Attribute.GetCustomAttribute(System.Reflection.MemberInfo,System.Type)\n  - System.Attribute.GetCustomAttribute(System.Reflection.MemberInfo,System.Type,System.Boolean)\n  - System.Attribute.GetCustomAttribute(System.Reflection.Module,System.Type)\n  - System.Attribute.GetCustomAttribute(System.Reflection.Module,System.Type,System.Boolean)\n  - System.Attribute.GetCustomAttribute(System.Reflection.ParameterInfo,System.Type)\n  - System.Attribute.GetCustomAttribute(System.Reflection.ParameterInfo,System.Type,System.Boolean)\n  - System.Attribute.GetCustomAttributes(System.Reflection.Assembly)\n  - System.Attribute.GetCustomAttributes(System.Reflection.Assembly,System.Boolean)\n  - System.Attribute.GetCustomAttributes(System.Reflection.Assembly,System.Type)\n  - System.Attribute.GetCustomAttributes(System.Reflection.Assembly,System.Type,System.Boolean)\n  - System.Attribute.GetCustomAttributes(System.Reflection.MemberInfo)\n  - System.Attribute.GetCustomAttributes(System.Reflection.MemberInfo,System.Boolean)\n  - System.Attribute.GetCustomAttributes(System.Reflection.MemberInfo,System.Type)\n  - System.Attribute.GetCustomAttributes(System.Reflection.MemberInfo,System.Type,System.Boolean)\n  - System.Attribute.GetCustomAttributes(System.Reflection.Module)\n  - System.Attribute.GetCustomAttributes(System.Reflection.Module,System.Boolean)\n  - System.Attribute.GetCustomAttributes(System.Reflection.Module,System.Type)\n  - System.Attribute.GetCustomAttributes(System.Reflection.Module,System.Type,System.Boolean)\n  - System.Attribute.GetCustomAttributes(System.Reflection.ParameterInfo)\n  - System.Attribute.GetCustomAttributes(System.Reflection.ParameterInfo,System.Boolean)\n  - System.Attribute.GetCustomAttributes(System.Reflection.ParameterInfo,System.Type)\n  - System.Attribute.GetCustomAttributes(System.Reflection.ParameterInfo,System.Type,System.Boolean)\n  - System.Attribute.IsDefined(System.Reflection.Assembly,System.Type)\n  - System.Attribute.IsDefined(System.Reflection.Assembly,System.Type,System.Boolean)\n  - System.Attribute.IsDefined(System.Reflection.MemberInfo,System.Type)\n  - System.Attribute.IsDefined(System.Reflection.MemberInfo,System.Type,System.Boolean)\n  - System.Attribute.IsDefined(System.Reflection.Module,System.Type)\n  - System.Attribute.IsDefined(System.Reflection.Module,System.Type,System.Boolean)\n  - System.Attribute.IsDefined(System.Reflection.ParameterInfo,System.Type)\n  - System.Attribute.IsDefined(System.Reflection.ParameterInfo,System.Type,System.Boolean)\n  - System.Attribute.Match(System.Object)\n  - System.Attribute.System#Runtime#InteropServices#_Attribute#GetIDsOfNames(System.Guid@,System.IntPtr,System.UInt32,System.UInt32,System.IntPtr)\n  - System.Attribute.System#Runtime#InteropServices#_Attribute#GetTypeInfo(System.UInt32,System.UInt32,System.IntPtr)\n  - System.Attribute.System#Runtime#InteropServices#_Attribute#GetTypeInfoCount(System.UInt32@)\n  - System.Attribute.System#Runtime#InteropServices#_Attribute#Invoke(System.UInt32,System.Guid@,System.UInt32,System.Int16,System.IntPtr,System.IntPtr,System.IntPtr,System.IntPtr)\n  - System.Attribute.TypeId\n  - System.Object.Equals(System.Object,System.Object)\n  - System.Object.GetType\n  - System.Object.MemberwiseClone\n  - System.Object.ReferenceEquals(System.Object,System.Object)\n  - System.Object.ToString\n  attributes:\n  - type: System.AttributeUsageAttribute\n  version:\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - netstandard-2.0\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  monikers:\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - netstandard-2.0\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.ComponentModel/PasswordPropertyTextAttribute.xml\n  ms.technology:\n  - dotnet-standard\n  author: stevehoag\n  ms.author: shoag\n  manager: wpickett\n- uid: System.ComponentModel.PasswordPropertyTextAttribute.#ctor\n  commentId: M:System.ComponentModel.PasswordPropertyTextAttribute.#ctor\n  id: '#ctor'\n  parent: System.ComponentModel.PasswordPropertyTextAttribute\n  langs:\n  - csharp\n  name: PasswordPropertyTextAttribute()\n  nameWithType: PasswordPropertyTextAttribute.PasswordPropertyTextAttribute()\n  fullName: PasswordPropertyTextAttribute.PasswordPropertyTextAttribute()\n  type: Constructor\n  assemblies:\n  - System\n  - netstandard\n  - System.ComponentModel.TypeConverter\n  namespace: System.ComponentModel\n  summary: Initializes a new instance of the <xref href=\"System.ComponentModel.PasswordPropertyTextAttribute\"></xref> class.\n  syntax:\n    content: public PasswordPropertyTextAttribute ();\n    parameters: []\n  overload: System.ComponentModel.PasswordPropertyTextAttribute.#ctor*\n  exceptions: []\n  version:\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - netstandard-2.0\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  monikers:\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - netstandard-2.0\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.ComponentModel/PasswordPropertyTextAttribute.xml\n  ms.technology:\n  - dotnet-standard\n  author: stevehoag\n  ms.author: shoag\n  manager: wpickett\n- uid: System.ComponentModel.PasswordPropertyTextAttribute.#ctor(System.Boolean)\n  commentId: M:System.ComponentModel.PasswordPropertyTextAttribute.#ctor(System.Boolean)\n  id: '#ctor(System.Boolean)'\n  parent: System.ComponentModel.PasswordPropertyTextAttribute\n  langs:\n  - csharp\n  name: PasswordPropertyTextAttribute(Boolean)\n  nameWithType: PasswordPropertyTextAttribute.PasswordPropertyTextAttribute(Boolean)\n  fullName: PasswordPropertyTextAttribute.PasswordPropertyTextAttribute(Boolean)\n  type: Constructor\n  assemblies:\n  - System\n  - netstandard\n  - System.ComponentModel.TypeConverter\n  namespace: System.ComponentModel\n  summary: Initializes a new instance of the <xref href=\"System.ComponentModel.PasswordPropertyTextAttribute\"></xref> class, optionally showing password text.\n  syntax:\n    content: public PasswordPropertyTextAttribute (bool password);\n    parameters:\n    - id: password\n      type: System.Boolean\n      description: '`true` to indicate that the property should be shown as password text; otherwise, `false`. The default is `false`.'\n  overload: System.ComponentModel.PasswordPropertyTextAttribute.#ctor*\n  exceptions: []\n  version:\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - netstandard-2.0\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  monikers:\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - netstandard-2.0\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.ComponentModel/PasswordPropertyTextAttribute.xml\n  ms.technology:\n  - dotnet-standard\n  author: stevehoag\n  ms.author: shoag\n  manager: wpickett\n- uid: System.ComponentModel.PasswordPropertyTextAttribute.Default\n  commentId: F:System.ComponentModel.PasswordPropertyTextAttribute.Default\n  id: Default\n  parent: System.ComponentModel.PasswordPropertyTextAttribute\n  langs:\n  - csharp\n  name: Default\n  nameWithType: PasswordPropertyTextAttribute.Default\n  fullName: PasswordPropertyTextAttribute.Default\n  type: Field\n  assemblies:\n  - System\n  - netstandard\n  - System.ComponentModel.TypeConverter\n  namespace: System.ComponentModel\n  summary: Specifies the default value for the <xref href=\"System.ComponentModel.PasswordPropertyTextAttribute\"></xref>.\n  remarks: The default value is <xref:System.ComponentModel.PasswordPropertyTextAttribute.No>.\n  syntax:\n    content: public static readonly System.ComponentModel.PasswordPropertyTextAttribute Default;\n    return:\n      type: System.ComponentModel.PasswordPropertyTextAttribute\n      description: ''\n  exceptions: []\n  version:\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - netstandard-2.0\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  monikers:\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - netstandard-2.0\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.ComponentModel/PasswordPropertyTextAttribute.xml\n  ms.technology:\n  - dotnet-standard\n  author: stevehoag\n  ms.author: shoag\n  manager: wpickett\n- uid: System.ComponentModel.PasswordPropertyTextAttribute.Equals(System.Object)\n  commentId: M:System.ComponentModel.PasswordPropertyTextAttribute.Equals(System.Object)\n  id: Equals(System.Object)\n  parent: System.ComponentModel.PasswordPropertyTextAttribute\n  langs:\n  - csharp\n  name: Equals(Object)\n  nameWithType: PasswordPropertyTextAttribute.Equals(Object)\n  fullName: PasswordPropertyTextAttribute.Equals(Object)\n  type: Method\n  assemblies:\n  - System\n  - netstandard\n  - System.ComponentModel.TypeConverter\n  namespace: System.ComponentModel\n  summary: Determines whether two <xref href=\"System.ComponentModel.PasswordPropertyTextAttribute\"></xref> instances are equal.\n  syntax:\n    content: public override bool Equals (object o);\n    parameters:\n    - id: o\n      type: System.Object\n      description: The <xref href=\"System.ComponentModel.PasswordPropertyTextAttribute\"></xref> to compare with the current <xref href=\"System.ComponentModel.PasswordPropertyTextAttribute\"></xref>.\n    return:\n      type: System.Boolean\n      description: '`true` if the specified <xref href=\"System.ComponentModel.PasswordPropertyTextAttribute\"></xref> is equal to the current <xref href=\"System.ComponentModel.PasswordPropertyTextAttribute\"></xref>; otherwise, `false`.'\n  overload: System.ComponentModel.PasswordPropertyTextAttribute.Equals*\n  exceptions: []\n  version:\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - netstandard-2.0\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  monikers:\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - netstandard-2.0\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.ComponentModel/PasswordPropertyTextAttribute.xml\n  ms.technology:\n  - dotnet-standard\n  author: stevehoag\n  ms.author: shoag\n  manager: wpickett\n- uid: System.ComponentModel.PasswordPropertyTextAttribute.GetHashCode\n  commentId: M:System.ComponentModel.PasswordPropertyTextAttribute.GetHashCode\n  id: GetHashCode\n  parent: System.ComponentModel.PasswordPropertyTextAttribute\n  langs:\n  - csharp\n  name: GetHashCode()\n  nameWithType: PasswordPropertyTextAttribute.GetHashCode()\n  fullName: PasswordPropertyTextAttribute.GetHashCode()\n  type: Method\n  assemblies:\n  - System\n  - netstandard\n  - System.ComponentModel.TypeConverter\n  namespace: System.ComponentModel\n  summary: Returns the hash code for this instance.\n  syntax:\n    content: public override int GetHashCode ();\n    parameters: []\n    return:\n      type: System.Int32\n      description: A hash code for the current <xref href=\"System.ComponentModel.PasswordPropertyTextAttribute\"></xref>.\n  overload: System.ComponentModel.PasswordPropertyTextAttribute.GetHashCode*\n  exceptions: []\n  version:\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - netstandard-2.0\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  monikers:\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - netstandard-2.0\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.ComponentModel/PasswordPropertyTextAttribute.xml\n  ms.technology:\n  - dotnet-standard\n  author: stevehoag\n  ms.author: shoag\n  manager: wpickett\n- uid: System.ComponentModel.PasswordPropertyTextAttribute.IsDefaultAttribute\n  commentId: M:System.ComponentModel.PasswordPropertyTextAttribute.IsDefaultAttribute\n  id: IsDefaultAttribute\n  parent: System.ComponentModel.PasswordPropertyTextAttribute\n  langs:\n  - csharp\n  name: IsDefaultAttribute()\n  nameWithType: PasswordPropertyTextAttribute.IsDefaultAttribute()\n  fullName: PasswordPropertyTextAttribute.IsDefaultAttribute()\n  type: Method\n  assemblies:\n  - System\n  - netstandard\n  - System.ComponentModel.TypeConverter\n  namespace: System.ComponentModel\n  summary: Returns an indication whether the value of this instance is the default value.\n  syntax:\n    content: public override bool IsDefaultAttribute ();\n    parameters: []\n    return:\n      type: System.Boolean\n      description: '`true` if this instance is the default attribute for the class; otherwise, `false`.'\n  overload: System.ComponentModel.PasswordPropertyTextAttribute.IsDefaultAttribute*\n  exceptions: []\n  version:\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - netstandard-2.0\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  monikers:\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - netstandard-2.0\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.ComponentModel/PasswordPropertyTextAttribute.xml\n  ms.technology:\n  - dotnet-standard\n  author: stevehoag\n  ms.author: shoag\n  manager: wpickett\n- uid: System.ComponentModel.PasswordPropertyTextAttribute.No\n  commentId: F:System.ComponentModel.PasswordPropertyTextAttribute.No\n  id: No\n  parent: System.ComponentModel.PasswordPropertyTextAttribute\n  langs:\n  - csharp\n  name: No\n  nameWithType: PasswordPropertyTextAttribute.No\n  fullName: PasswordPropertyTextAttribute.No\n  type: Field\n  assemblies:\n  - System\n  - netstandard\n  - System.ComponentModel.TypeConverter\n  namespace: System.ComponentModel\n  summary: Specifies that a text property is not used as a password. This `static` (`Shared` in Visual Basic) field is read-only.\n  remarks: The <xref:System.ComponentModel.PasswordPropertyTextAttribute.No> field is the default value for the <xref:System.ComponentModel.PasswordPropertyTextAttribute>.\n  syntax:\n    content: public static readonly System.ComponentModel.PasswordPropertyTextAttribute No;\n    return:\n      type: System.ComponentModel.PasswordPropertyTextAttribute\n      description: ''\n  exceptions: []\n  version:\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - netstandard-2.0\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  monikers:\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - netstandard-2.0\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.ComponentModel/PasswordPropertyTextAttribute.xml\n  ms.technology:\n  - dotnet-standard\n  author: stevehoag\n  ms.author: shoag\n  manager: wpickett\n- uid: System.ComponentModel.PasswordPropertyTextAttribute.Password\n  commentId: P:System.ComponentModel.PasswordPropertyTextAttribute.Password\n  id: Password\n  parent: System.ComponentModel.PasswordPropertyTextAttribute\n  langs:\n  - csharp\n  name: Password\n  nameWithType: PasswordPropertyTextAttribute.Password\n  fullName: PasswordPropertyTextAttribute.Password\n  type: Property\n  assemblies:\n  - System\n  - netstandard\n  - System.ComponentModel.TypeConverter\n  namespace: System.ComponentModel\n  summary: Gets a value indicating if the property for which the <xref href=\"System.ComponentModel.PasswordPropertyTextAttribute\"></xref> is defined should be shown as password text.\n  syntax:\n    content: public bool Password { get; }\n    return:\n      type: System.Boolean\n      description: '`true` if the property should be shown as password text; otherwise, `false`.'\n  overload: System.ComponentModel.PasswordPropertyTextAttribute.Password*\n  exceptions: []\n  version:\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - netstandard-2.0\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  monikers:\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - netstandard-2.0\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.ComponentModel/PasswordPropertyTextAttribute.xml\n  ms.technology:\n  - dotnet-standard\n  author: stevehoag\n  ms.author: shoag\n  manager: wpickett\n- uid: System.ComponentModel.PasswordPropertyTextAttribute.Yes\n  commentId: F:System.ComponentModel.PasswordPropertyTextAttribute.Yes\n  id: Yes\n  parent: System.ComponentModel.PasswordPropertyTextAttribute\n  langs:\n  - csharp\n  name: Yes\n  nameWithType: PasswordPropertyTextAttribute.Yes\n  fullName: PasswordPropertyTextAttribute.Yes\n  type: Field\n  assemblies:\n  - System\n  - netstandard\n  - System.ComponentModel.TypeConverter\n  namespace: System.ComponentModel\n  summary: Specifies that a text property is used as a password. This `static` (`Shared` in Visual Basic) field is read-only.\n  syntax:\n    content: public static readonly System.ComponentModel.PasswordPropertyTextAttribute Yes;\n    return:\n      type: System.ComponentModel.PasswordPropertyTextAttribute\n      description: ''\n  exceptions: []\n  version:\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - netstandard-2.0\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  monikers:\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - netstandard-2.0\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.ComponentModel/PasswordPropertyTextAttribute.xml\n  ms.technology:\n  - dotnet-standard\n  author: stevehoag\n  ms.author: shoag\n  manager: wpickett\nreferences:\n- uid: System.Attribute\n  parent: System\n  isExternal: false\n  name: Attribute\n  nameWithType: Attribute\n  fullName: System.Attribute\n- uid: System.ComponentModel.PasswordPropertyTextAttribute.#ctor\n  parent: System.ComponentModel.PasswordPropertyTextAttribute\n  isExternal: false\n  name: PasswordPropertyTextAttribute()\n  nameWithType: PasswordPropertyTextAttribute.PasswordPropertyTextAttribute()\n  fullName: PasswordPropertyTextAttribute.PasswordPropertyTextAttribute()\n- uid: System.ComponentModel.PasswordPropertyTextAttribute.#ctor(System.Boolean)\n  parent: System.ComponentModel.PasswordPropertyTextAttribute\n  isExternal: false\n  name: PasswordPropertyTextAttribute(Boolean)\n  nameWithType: PasswordPropertyTextAttribute.PasswordPropertyTextAttribute(Boolean)\n  fullName: PasswordPropertyTextAttribute.PasswordPropertyTextAttribute(Boolean)\n- uid: System.Boolean\n  parent: System\n  isExternal: false\n  name: Boolean\n  nameWithType: Boolean\n  fullName: System.Boolean\n- uid: System.ComponentModel.PasswordPropertyTextAttribute.Default\n  parent: System.ComponentModel.PasswordPropertyTextAttribute\n  isExternal: false\n  name: Default\n  nameWithType: PasswordPropertyTextAttribute.Default\n  fullName: PasswordPropertyTextAttribute.Default\n- uid: System.ComponentModel.PasswordPropertyTextAttribute\n  parent: System.ComponentModel\n  isExternal: false\n  name: PasswordPropertyTextAttribute\n  nameWithType: PasswordPropertyTextAttribute\n  fullName: System.ComponentModel.PasswordPropertyTextAttribute\n- uid: System.ComponentModel.PasswordPropertyTextAttribute.Equals(System.Object)\n  parent: System.ComponentModel.PasswordPropertyTextAttribute\n  isExternal: false\n  name: Equals(Object)\n  nameWithType: PasswordPropertyTextAttribute.Equals(Object)\n  fullName: PasswordPropertyTextAttribute.Equals(Object)\n- uid: System.Object\n  parent: System\n  isExternal: false\n  name: Object\n  nameWithType: Object\n  fullName: System.Object\n- uid: System.ComponentModel.PasswordPropertyTextAttribute.GetHashCode\n  parent: System.ComponentModel.PasswordPropertyTextAttribute\n  isExternal: false\n  name: GetHashCode()\n  nameWithType: PasswordPropertyTextAttribute.GetHashCode()\n  fullName: PasswordPropertyTextAttribute.GetHashCode()\n- uid: System.Int32\n  parent: System\n  isExternal: false\n  name: Int32\n  nameWithType: Int32\n  fullName: System.Int32\n- uid: System.ComponentModel.PasswordPropertyTextAttribute.IsDefaultAttribute\n  parent: System.ComponentModel.PasswordPropertyTextAttribute\n  isExternal: false\n  name: IsDefaultAttribute()\n  nameWithType: PasswordPropertyTextAttribute.IsDefaultAttribute()\n  fullName: PasswordPropertyTextAttribute.IsDefaultAttribute()\n- uid: System.ComponentModel.PasswordPropertyTextAttribute.No\n  parent: System.ComponentModel.PasswordPropertyTextAttribute\n  isExternal: false\n  name: No\n  nameWithType: PasswordPropertyTextAttribute.No\n  fullName: PasswordPropertyTextAttribute.No\n- uid: System.ComponentModel.PasswordPropertyTextAttribute.Password\n  parent: System.ComponentModel.PasswordPropertyTextAttribute\n  isExternal: false\n  name: Password\n  nameWithType: PasswordPropertyTextAttribute.Password\n  fullName: PasswordPropertyTextAttribute.Password\n- uid: System.ComponentModel.PasswordPropertyTextAttribute.Yes\n  parent: System.ComponentModel.PasswordPropertyTextAttribute\n  isExternal: false\n  name: Yes\n  nameWithType: PasswordPropertyTextAttribute.Yes\n  fullName: PasswordPropertyTextAttribute.Yes\n- uid: System.ComponentModel.PasswordPropertyTextAttribute.#ctor*\n  parent: System.ComponentModel.PasswordPropertyTextAttribute\n  isExternal: false\n  name: PasswordPropertyTextAttribute\n  nameWithType: PasswordPropertyTextAttribute.PasswordPropertyTextAttribute\n  fullName: PasswordPropertyTextAttribute.PasswordPropertyTextAttribute\n  monikers:\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - netstandard-2.0\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.ComponentModel/PasswordPropertyTextAttribute.xml\n- uid: System.ComponentModel.PasswordPropertyTextAttribute.Equals*\n  parent: System.ComponentModel.PasswordPropertyTextAttribute\n  isExternal: false\n  name: Equals\n  nameWithType: PasswordPropertyTextAttribute.Equals\n  fullName: PasswordPropertyTextAttribute.Equals\n  monikers:\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - netstandard-2.0\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.ComponentModel/PasswordPropertyTextAttribute.xml\n- uid: System.ComponentModel.PasswordPropertyTextAttribute.GetHashCode*\n  parent: System.ComponentModel.PasswordPropertyTextAttribute\n  isExternal: false\n  name: GetHashCode\n  nameWithType: PasswordPropertyTextAttribute.GetHashCode\n  fullName: PasswordPropertyTextAttribute.GetHashCode\n  monikers:\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - netstandard-2.0\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.ComponentModel/PasswordPropertyTextAttribute.xml\n- uid: System.ComponentModel.PasswordPropertyTextAttribute.IsDefaultAttribute*\n  parent: System.ComponentModel.PasswordPropertyTextAttribute\n  isExternal: false\n  name: IsDefaultAttribute\n  nameWithType: PasswordPropertyTextAttribute.IsDefaultAttribute\n  fullName: PasswordPropertyTextAttribute.IsDefaultAttribute\n  monikers:\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - netstandard-2.0\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.ComponentModel/PasswordPropertyTextAttribute.xml\n- uid: System.ComponentModel.PasswordPropertyTextAttribute.Password*\n  parent: System.ComponentModel.PasswordPropertyTextAttribute\n  isExternal: false\n  name: Password\n  nameWithType: PasswordPropertyTextAttribute.Password\n  fullName: PasswordPropertyTextAttribute.Password\n  monikers:\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - netstandard-2.0\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.ComponentModel/PasswordPropertyTextAttribute.xml\n- uid: System.Object.Equals(System.Object,System.Object)\n  parent: System.Object\n  isExternal: false\n  name: Equals(Object, Object)\n  nameWithType: Object.Equals(Object, Object)\n  fullName: Object.Equals(Object, Object)\n- uid: System.Object.GetType\n  parent: System.Object\n  isExternal: false\n  name: GetType()\n  nameWithType: Object.GetType()\n  fullName: Object.GetType()\n- uid: System.Object.MemberwiseClone\n  parent: System.Object\n  isExternal: false\n  name: MemberwiseClone()\n  nameWithType: Object.MemberwiseClone()\n  fullName: Object.MemberwiseClone()\n- uid: System.Object.ReferenceEquals(System.Object,System.Object)\n  parent: System.Object\n  isExternal: false\n  name: ReferenceEquals(Object, Object)\n  nameWithType: Object.ReferenceEquals(Object, Object)\n  fullName: Object.ReferenceEquals(Object, Object)\n- uid: System.Object.ToString\n  parent: System.Object\n  isExternal: false\n  name: ToString()\n  nameWithType: Object.ToString()\n  fullName: Object.ToString()\n- uid: System.Attribute.GetCustomAttribute(System.Reflection.ParameterInfo,System.Type,System.Boolean)\n  parent: System.Attribute\n  isExternal: false\n  name: GetCustomAttribute(ParameterInfo, Type, Boolean)\n  nameWithType: Attribute.GetCustomAttribute(ParameterInfo, Type, Boolean)\n  fullName: Attribute.GetCustomAttribute(ParameterInfo, Type, Boolean)\n- uid: System.Attribute.GetCustomAttribute(System.Reflection.MemberInfo,System.Type,System.Boolean)\n  parent: System.Attribute\n  isExternal: false\n  name: GetCustomAttribute(MemberInfo, Type, Boolean)\n  nameWithType: Attribute.GetCustomAttribute(MemberInfo, Type, Boolean)\n  fullName: Attribute.GetCustomAttribute(MemberInfo, Type, Boolean)\n- uid: System.Attribute.GetCustomAttribute(System.Reflection.Assembly,System.Type,System.Boolean)\n  parent: System.Attribute\n  isExternal: false\n  name: GetCustomAttribute(Assembly, Type, Boolean)\n  nameWithType: Attribute.GetCustomAttribute(Assembly, Type, Boolean)\n  fullName: Attribute.GetCustomAttribute(Assembly, Type, Boolean)\n- uid: System.Attribute.GetCustomAttribute(System.Reflection.Module,System.Type,System.Boolean)\n  parent: System.Attribute\n  isExternal: false\n  name: GetCustomAttribute(Module, Type, Boolean)\n  nameWithType: Attribute.GetCustomAttribute(Module, Type, Boolean)\n  fullName: Attribute.GetCustomAttribute(Module, Type, Boolean)\n- uid: System.Attribute.GetCustomAttribute(System.Reflection.Module,System.Type)\n  parent: System.Attribute\n  isExternal: false\n  name: GetCustomAttribute(Module, Type)\n  nameWithType: Attribute.GetCustomAttribute(Module, Type)\n  fullName: Attribute.GetCustomAttribute(Module, Type)\n- uid: System.Attribute.GetCustomAttribute(System.Reflection.MemberInfo,System.Type)\n  parent: System.Attribute\n  isExternal: false\n  name: GetCustomAttribute(MemberInfo, Type)\n  nameWithType: Attribute.GetCustomAttribute(MemberInfo, Type)\n  fullName: Attribute.GetCustomAttribute(MemberInfo, Type)\n- uid: System.Attribute.GetCustomAttribute(System.Reflection.Assembly,System.Type)\n  parent: System.Attribute\n  isExternal: false\n  name: GetCustomAttribute(Assembly, Type)\n  nameWithType: Attribute.GetCustomAttribute(Assembly, Type)\n  fullName: Attribute.GetCustomAttribute(Assembly, Type)\n- uid: System.Attribute.GetCustomAttribute(System.Reflection.ParameterInfo,System.Type)\n  parent: System.Attribute\n  isExternal: false\n  name: GetCustomAttribute(ParameterInfo, Type)\n  nameWithType: Attribute.GetCustomAttribute(ParameterInfo, Type)\n  fullName: Attribute.GetCustomAttribute(ParameterInfo, Type)\n- uid: System.Attribute.GetCustomAttributes(System.Reflection.Module,System.Type)\n  parent: System.Attribute\n  isExternal: false\n  name: GetCustomAttributes(Module, Type)\n  nameWithType: Attribute.GetCustomAttributes(Module, Type)\n  fullName: Attribute.GetCustomAttributes(Module, Type)\n- uid: System.Attribute.GetCustomAttributes(System.Reflection.ParameterInfo,System.Type,System.Boolean)\n  parent: System.Attribute\n  isExternal: false\n  name: GetCustomAttributes(ParameterInfo, Type, Boolean)\n  nameWithType: Attribute.GetCustomAttributes(ParameterInfo, Type, Boolean)\n  fullName: Attribute.GetCustomAttributes(ParameterInfo, Type, Boolean)\n- uid: System.Attribute.GetCustomAttributes(System.Reflection.Module,System.Type,System.Boolean)\n  parent: System.Attribute\n  isExternal: false\n  name: GetCustomAttributes(Module, Type, Boolean)\n  nameWithType: Attribute.GetCustomAttributes(Module, Type, Boolean)\n  fullName: Attribute.GetCustomAttributes(Module, Type, Boolean)\n- uid: System.Attribute.GetCustomAttributes(System.Reflection.MemberInfo,System.Type,System.Boolean)\n  parent: System.Attribute\n  isExternal: false\n  name: GetCustomAttributes(MemberInfo, Type, Boolean)\n  nameWithType: Attribute.GetCustomAttributes(MemberInfo, Type, Boolean)\n  fullName: Attribute.GetCustomAttributes(MemberInfo, Type, Boolean)\n- uid: System.Attribute.GetCustomAttributes(System.Reflection.Assembly,System.Type,System.Boolean)\n  parent: System.Attribute\n  isExternal: false\n  name: GetCustomAttributes(Assembly, Type, Boolean)\n  nameWithType: Attribute.GetCustomAttributes(Assembly, Type, Boolean)\n  fullName: Attribute.GetCustomAttributes(Assembly, Type, Boolean)\n- uid: System.Attribute.GetCustomAttributes(System.Reflection.ParameterInfo,System.Type)\n  parent: System.Attribute\n  isExternal: false\n  name: GetCustomAttributes(ParameterInfo, Type)\n  nameWithType: Attribute.GetCustomAttributes(ParameterInfo, Type)\n  fullName: Attribute.GetCustomAttributes(ParameterInfo, Type)\n- uid: System.Attribute.GetCustomAttributes(System.Reflection.Module,System.Boolean)\n  parent: System.Attribute\n  isExternal: false\n  name: GetCustomAttributes(Module, Boolean)\n  nameWithType: Attribute.GetCustomAttributes(Module, Boolean)\n  fullName: Attribute.GetCustomAttributes(Module, Boolean)\n- uid: System.Attribute.GetCustomAttributes(System.Reflection.ParameterInfo,System.Boolean)\n  parent: System.Attribute\n  isExternal: false\n  name: GetCustomAttributes(ParameterInfo, Boolean)\n  nameWithType: Attribute.GetCustomAttributes(ParameterInfo, Boolean)\n  fullName: Attribute.GetCustomAttributes(ParameterInfo, Boolean)\n- uid: System.Attribute.GetCustomAttributes(System.Reflection.MemberInfo,System.Boolean)\n  parent: System.Attribute\n  isExternal: false\n  name: GetCustomAttributes(MemberInfo, Boolean)\n  nameWithType: Attribute.GetCustomAttributes(MemberInfo, Boolean)\n  fullName: Attribute.GetCustomAttributes(MemberInfo, Boolean)\n- uid: System.Attribute.GetCustomAttributes(System.Reflection.Assembly,System.Type)\n  parent: System.Attribute\n  isExternal: false\n  name: GetCustomAttributes(Assembly, Type)\n  nameWithType: Attribute.GetCustomAttributes(Assembly, Type)\n  fullName: Attribute.GetCustomAttributes(Assembly, Type)\n- uid: System.Attribute.GetCustomAttributes(System.Reflection.Assembly,System.Boolean)\n  parent: System.Attribute\n  isExternal: false\n  name: GetCustomAttributes(Assembly, Boolean)\n  nameWithType: Attribute.GetCustomAttributes(Assembly, Boolean)\n  fullName: Attribute.GetCustomAttributes(Assembly, Boolean)\n- uid: System.Attribute.GetCustomAttributes(System.Reflection.ParameterInfo)\n  parent: System.Attribute\n  isExternal: false\n  name: GetCustomAttributes(ParameterInfo)\n  nameWithType: Attribute.GetCustomAttributes(ParameterInfo)\n  fullName: Attribute.GetCustomAttributes(ParameterInfo)\n- uid: System.Attribute.GetCustomAttributes(System.Reflection.Module)\n  parent: System.Attribute\n  isExternal: false\n  name: GetCustomAttributes(Module)\n  nameWithType: Attribute.GetCustomAttributes(Module)\n  fullName: Attribute.GetCustomAttributes(Module)\n- uid: System.Attribute.GetCustomAttributes(System.Reflection.MemberInfo)\n  parent: System.Attribute\n  isExternal: false\n  name: GetCustomAttributes(MemberInfo)\n  nameWithType: Attribute.GetCustomAttributes(MemberInfo)\n  fullName: Attribute.GetCustomAttributes(MemberInfo)\n- uid: System.Attribute.GetCustomAttributes(System.Reflection.Assembly)\n  parent: System.Attribute\n  isExternal: false\n  name: GetCustomAttributes(Assembly)\n  nameWithType: Attribute.GetCustomAttributes(Assembly)\n  fullName: Attribute.GetCustomAttributes(Assembly)\n- uid: System.Attribute.GetCustomAttributes(System.Reflection.MemberInfo,System.Type)\n  parent: System.Attribute\n  isExternal: false\n  name: GetCustomAttributes(MemberInfo, Type)\n  nameWithType: Attribute.GetCustomAttributes(MemberInfo, Type)\n  fullName: Attribute.GetCustomAttributes(MemberInfo, Type)\n- uid: System.Attribute.IsDefined(System.Reflection.ParameterInfo,System.Type,System.Boolean)\n  parent: System.Attribute\n  isExternal: false\n  name: IsDefined(ParameterInfo, Type, Boolean)\n  nameWithType: Attribute.IsDefined(ParameterInfo, Type, Boolean)\n  fullName: Attribute.IsDefined(ParameterInfo, Type, Boolean)\n- uid: System.Attribute.IsDefined(System.Reflection.Module,System.Type,System.Boolean)\n  parent: System.Attribute\n  isExternal: false\n  name: IsDefined(Module, Type, Boolean)\n  nameWithType: Attribute.IsDefined(Module, Type, Boolean)\n  fullName: Attribute.IsDefined(Module, Type, Boolean)\n- uid: System.Attribute.IsDefined(System.Reflection.MemberInfo,System.Type,System.Boolean)\n  parent: System.Attribute\n  isExternal: false\n  name: IsDefined(MemberInfo, Type, Boolean)\n  nameWithType: Attribute.IsDefined(MemberInfo, Type, Boolean)\n  fullName: Attribute.IsDefined(MemberInfo, Type, Boolean)\n- uid: System.Attribute.IsDefined(System.Reflection.Assembly,System.Type,System.Boolean)\n  parent: System.Attribute\n  isExternal: false\n  name: IsDefined(Assembly, Type, Boolean)\n  nameWithType: Attribute.IsDefined(Assembly, Type, Boolean)\n  fullName: Attribute.IsDefined(Assembly, Type, Boolean)\n- uid: System.Attribute.IsDefined(System.Reflection.MemberInfo,System.Type)\n  parent: System.Attribute\n  isExternal: false\n  name: IsDefined(MemberInfo, Type)\n  nameWithType: Attribute.IsDefined(MemberInfo, Type)\n  fullName: Attribute.IsDefined(MemberInfo, Type)\n- uid: System.Attribute.IsDefined(System.Reflection.Module,System.Type)\n  parent: System.Attribute\n  isExternal: false\n  name: IsDefined(Module, Type)\n  nameWithType: Attribute.IsDefined(Module, Type)\n  fullName: Attribute.IsDefined(Module, Type)\n- uid: System.Attribute.IsDefined(System.Reflection.Assembly,System.Type)\n  parent: System.Attribute\n  isExternal: false\n  name: IsDefined(Assembly, Type)\n  nameWithType: Attribute.IsDefined(Assembly, Type)\n  fullName: Attribute.IsDefined(Assembly, Type)\n- uid: System.Attribute.IsDefined(System.Reflection.ParameterInfo,System.Type)\n  parent: System.Attribute\n  isExternal: false\n  name: IsDefined(ParameterInfo, Type)\n  nameWithType: Attribute.IsDefined(ParameterInfo, Type)\n  fullName: Attribute.IsDefined(ParameterInfo, Type)\n- uid: System.Attribute.Match(System.Object)\n  parent: System.Attribute\n  isExternal: false\n  name: Match(Object)\n  nameWithType: Attribute.Match(Object)\n  fullName: Attribute.Match(Object)\n- uid: System.Attribute.TypeId\n  parent: System.Attribute\n  isExternal: false\n  name: TypeId\n  nameWithType: Attribute.TypeId\n  fullName: Attribute.TypeId\n- uid: System.Attribute.System#Runtime#InteropServices#_Attribute#GetIDsOfNames(System.Guid@,System.IntPtr,System.UInt32,System.UInt32,System.IntPtr)\n  parent: System.Attribute\n  isExternal: false\n  name: _Attribute.GetIDsOfNames(Guid, IntPtr, UInt32, UInt32, IntPtr)\n  nameWithType: Attribute._Attribute.GetIDsOfNames(Guid, IntPtr, UInt32, UInt32, IntPtr)\n  fullName: Attribute._Attribute.GetIDsOfNames(Guid, IntPtr, UInt32, UInt32, IntPtr)\n- uid: System.Attribute.System#Runtime#InteropServices#_Attribute#GetTypeInfo(System.UInt32,System.UInt32,System.IntPtr)\n  parent: System.Attribute\n  isExternal: false\n  name: _Attribute.GetTypeInfo(UInt32, UInt32, IntPtr)\n  nameWithType: Attribute._Attribute.GetTypeInfo(UInt32, UInt32, IntPtr)\n  fullName: Attribute._Attribute.GetTypeInfo(UInt32, UInt32, IntPtr)\n- uid: System.Attribute.System#Runtime#InteropServices#_Attribute#GetTypeInfoCount(System.UInt32@)\n  parent: System.Attribute\n  isExternal: false\n  name: _Attribute.GetTypeInfoCount(UInt32)\n  nameWithType: Attribute._Attribute.GetTypeInfoCount(UInt32)\n  fullName: Attribute._Attribute.GetTypeInfoCount(UInt32)\n- uid: System.Attribute.System#Runtime#InteropServices#_Attribute#Invoke(System.UInt32,System.Guid@,System.UInt32,System.Int16,System.IntPtr,System.IntPtr,System.IntPtr,System.IntPtr)\n  parent: System.Attribute\n  isExternal: false\n  name: _Attribute.Invoke(UInt32, Guid, UInt32, Int16, IntPtr, IntPtr, IntPtr, IntPtr)\n  nameWithType: Attribute._Attribute.Invoke(UInt32, Guid, UInt32, Int16, IntPtr, IntPtr, IntPtr, IntPtr)\n  fullName: Attribute._Attribute.Invoke(UInt32, Guid, UInt32, Int16, IntPtr, IntPtr, IntPtr, IntPtr)\n"}