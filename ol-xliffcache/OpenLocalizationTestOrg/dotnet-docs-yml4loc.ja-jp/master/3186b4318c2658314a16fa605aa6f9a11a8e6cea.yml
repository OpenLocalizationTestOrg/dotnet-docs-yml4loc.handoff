### YamlMime:ManagedReference
items:
- uid: System.ServiceModel.PeerResolver
  commentId: T:System.ServiceModel.PeerResolver
  id: PeerResolver
  children:
  - System.ServiceModel.PeerResolver.#ctor
  - System.ServiceModel.PeerResolver.CanShareReferrals
  - System.ServiceModel.PeerResolver.Initialize(System.ServiceModel.EndpointAddress,System.ServiceModel.Channels.Binding,System.ServiceModel.Description.ClientCredentials,System.ServiceModel.PeerResolvers.PeerReferralPolicy)
  - System.ServiceModel.PeerResolver.Register(System.String,System.ServiceModel.PeerNodeAddress,System.TimeSpan)
  - System.ServiceModel.PeerResolver.Resolve(System.String,System.Int32,System.TimeSpan)
  - System.ServiceModel.PeerResolver.Unregister(System.Object,System.TimeSpan)
  - System.ServiceModel.PeerResolver.Update(System.Object,System.ServiceModel.PeerNodeAddress,System.TimeSpan)
  langs:
  - csharp
  name: PeerResolver
  nameWithType: PeerResolver
  fullName: System.ServiceModel.PeerResolver
  type: Class
  assemblies:
  - System.ServiceModel
  namespace: System.ServiceModel
  summary: Specifies a base type used to define the contract for the registration and resolution of a peer mesh ID to the endpoint addresses of nodes participating in the mesh.
  remarks: This class is the base class for the implementation of custom peer name resolvers. A peer name resolver is a discovery service used by peer channels to find peer nodes participating in a peer mesh. It is also used to "register" a node with a peer mesh, the mechanism by which the peer node becomes known and available from the peer mesh.
  syntax:
    content: public abstract class PeerResolver
  inheritance:
  - System.Object
  implements: []
  inheritedMembers:
  - System.Object.Equals(System.Object)
  - System.Object.Equals(System.Object,System.Object)
  - System.Object.GetHashCode
  - System.Object.GetType
  - System.Object.MemberwiseClone
  - System.Object.ReferenceEquals(System.Object,System.Object)
  - System.Object.ToString
  version:
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  monikers:
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.ServiceModel/PeerResolver.xml
  ms.technology:
  - dotnet-standard
  manager: ghogen
- uid: System.ServiceModel.PeerResolver.#ctor
  commentId: M:System.ServiceModel.PeerResolver.#ctor
  id: '#ctor'
  parent: System.ServiceModel.PeerResolver
  langs:
  - csharp
  name: PeerResolver()
  nameWithType: PeerResolver.PeerResolver()
  fullName: PeerResolver.PeerResolver()
  type: Constructor
  assemblies:
  - System.ServiceModel
  namespace: System.ServiceModel
  summary: Initializes a new instance of the <xref href="System.ServiceModel.PeerResolver"></xref> class.
  syntax:
    content: protected PeerResolver ();
    parameters: []
  overload: System.ServiceModel.PeerResolver.#ctor*
  exceptions: []
  version:
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  monikers:
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.ServiceModel/PeerResolver.xml
  ms.technology:
  - dotnet-standard
  manager: ghogen
- uid: System.ServiceModel.PeerResolver.CanShareReferrals
  commentId: P:System.ServiceModel.PeerResolver.CanShareReferrals
  id: CanShareReferrals
  parent: System.ServiceModel.PeerResolver
  langs:
  - csharp
  name: CanShareReferrals
  nameWithType: PeerResolver.CanShareReferrals
  fullName: PeerResolver.CanShareReferrals
  type: Property
  assemblies:
  - System.ServiceModel
  namespace: System.ServiceModel
  summary: Gets whether the peer name resolver can share referrals.
  syntax:
    content: public abstract bool CanShareReferrals { get; }
    return:
      type: System.Boolean
      description: If true, the peer name resolver can share referrals; if false, it cannot.
  overload: System.ServiceModel.PeerResolver.CanShareReferrals*
  exceptions: []
  version:
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  monikers:
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.ServiceModel/PeerResolver.xml
  ms.technology:
  - dotnet-standard
  manager: ghogen
- uid: System.ServiceModel.PeerResolver.Initialize(System.ServiceModel.EndpointAddress,System.ServiceModel.Channels.Binding,System.ServiceModel.Description.ClientCredentials,System.ServiceModel.PeerResolvers.PeerReferralPolicy)
  commentId: M:System.ServiceModel.PeerResolver.Initialize(System.ServiceModel.EndpointAddress,System.ServiceModel.Channels.Binding,System.ServiceModel.Description.ClientCredentials,System.ServiceModel.PeerResolvers.PeerReferralPolicy)
  id: Initialize(System.ServiceModel.EndpointAddress,System.ServiceModel.Channels.Binding,System.ServiceModel.Description.ClientCredentials,System.ServiceModel.PeerResolvers.PeerReferralPolicy)
  parent: System.ServiceModel.PeerResolver
  langs:
  - csharp
  name: Initialize(EndpointAddress, Binding, ClientCredentials, PeerReferralPolicy)
  nameWithType: PeerResolver.Initialize(EndpointAddress, Binding, ClientCredentials, PeerReferralPolicy)
  fullName: PeerResolver.Initialize(EndpointAddress, Binding, ClientCredentials, PeerReferralPolicy)
  type: Method
  assemblies:
  - System.ServiceModel
  namespace: System.ServiceModel
  summary: Initializes the current peer resolver instance with the new supplied endpoint address and settings.
  remarks: This method simply initializes the existing peer resolver instance; it does not create a new one. To create a new peer resolver, call the CreatePeerResolver method on the corresponding binding element (for example, <xref:System.ServiceModel.Channels.PnrpPeerResolverBindingElement>).
  syntax:
    content: public virtual void Initialize (System.ServiceModel.EndpointAddress address, System.ServiceModel.Channels.Binding binding, System.ServiceModel.Description.ClientCredentials credentials, System.ServiceModel.PeerResolvers.PeerReferralPolicy referralPolicy);
    parameters:
    - id: address
      type: System.ServiceModel.EndpointAddress
      description: <xref href="System.ServiceModel.EndpointAddress"></xref> that contains the new endpoint address of this peer resolver instance.
    - id: binding
      type: System.ServiceModel.Channels.Binding
      description: <xref href="System.ServiceModel.Channels.Binding"></xref> that specifies the new network binding for this peer resolver.
    - id: credentials
      type: System.ServiceModel.Description.ClientCredentials
      description: <xref href="System.ServiceModel.Description.ClientCredentials"></xref> that specifies the new client credentials for this peer resolver.
    - id: referralPolicy
      type: System.ServiceModel.PeerResolvers.PeerReferralPolicy
      description: <xref href="System.ServiceModel.PeerResolvers.PeerReferralPolicy"></xref> that specifies the new referral policy for this peer resolver.
  overload: System.ServiceModel.PeerResolver.Initialize*
  exceptions: []
  version:
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  monikers:
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.ServiceModel/PeerResolver.xml
  ms.technology:
  - dotnet-standard
  manager: ghogen
- uid: System.ServiceModel.PeerResolver.Register(System.String,System.ServiceModel.PeerNodeAddress,System.TimeSpan)
  commentId: M:System.ServiceModel.PeerResolver.Register(System.String,System.ServiceModel.PeerNodeAddress,System.TimeSpan)
  id: Register(System.String,System.ServiceModel.PeerNodeAddress,System.TimeSpan)
  parent: System.ServiceModel.PeerResolver
  langs:
  - csharp
  name: Register(String, PeerNodeAddress, TimeSpan)
  nameWithType: PeerResolver.Register(String, PeerNodeAddress, TimeSpan)
  fullName: PeerResolver.Register(String, PeerNodeAddress, TimeSpan)
  type: Method
  assemblies:
  - System.ServiceModel
  namespace: System.ServiceModel
  summary: Registers a <xref href="System.ServiceModel.PeerNodeAddress"></xref> for a specific peer mesh.
  syntax:
    content: public abstract object Register (string meshId, System.ServiceModel.PeerNodeAddress nodeAddress, TimeSpan timeout);
    parameters:
    - id: meshId
      type: System.String
      description: The ID of the peer mesh in which the peer node is to be registered.
    - id: nodeAddress
      type: System.ServiceModel.PeerNodeAddress
      description: The <xref href="System.ServiceModel.PeerNodeAddress"></xref> to be registered with the peer mesh.
    - id: timeout
      type: System.TimeSpan
      description: The length of time to wait for success before aborting the attempt to register with the peer mesh. If the attempt fails, <xref href="System.TimeoutException"></xref> is raised on the peer.
    return:
      type: System.Object
      description: An <xref href="System.Object"></xref> that represents the registration ID. This registration ID object is passed to the <xref href="System.ServiceModel.PeerResolver.Update(System.Object,System.ServiceModel.PeerNodeAddress,System.TimeSpan)"></xref> and <xref href="System.ServiceModel.PeerResolver.Unregister(System.Object,System.TimeSpan)"></xref> methods.
  overload: System.ServiceModel.PeerResolver.Register*
  exceptions: []
  version:
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  monikers:
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.ServiceModel/PeerResolver.xml
  ms.technology:
  - dotnet-standard
  manager: ghogen
- uid: System.ServiceModel.PeerResolver.Resolve(System.String,System.Int32,System.TimeSpan)
  commentId: M:System.ServiceModel.PeerResolver.Resolve(System.String,System.Int32,System.TimeSpan)
  id: Resolve(System.String,System.Int32,System.TimeSpan)
  parent: System.ServiceModel.PeerResolver
  langs:
  - csharp
  name: Resolve(String, Int32, TimeSpan)
  nameWithType: PeerResolver.Resolve(String, Int32, TimeSpan)
  fullName: PeerResolver.Resolve(String, Int32, TimeSpan)
  type: Method
  assemblies:
  - System.ServiceModel
  namespace: System.ServiceModel
  summary: Resolves the supplied mesh ID to zero or more endpoint addresses of nodes participating in the peer mesh.
  syntax:
    content: public abstract System.Collections.ObjectModel.ReadOnlyCollection<System.ServiceModel.PeerNodeAddress> Resolve (string meshId, int maxAddresses, TimeSpan timeout);
    parameters:
    - id: meshId
      type: System.String
      description: The mesh ID of the peer mesh within which the <xref href="System.ServiceModel.PeerNodeAddress"></xref> objects representing participating nodes are to be obtained.
    - id: maxAddresses
      type: System.Int32
      description: The number of endpoint addresses to return.
    - id: timeout
      type: System.TimeSpan
      description: The length of time to wait for success before aborting the attempt to resolve endpoint addresses within the peer mesh. If the attempt fails, <xref href="System.TimeoutException"></xref> is raised on the peer.
    return:
      type: System.Collections.ObjectModel.ReadOnlyCollection{System.ServiceModel.PeerNodeAddress}
      description: A <xref href="System.Collections.ObjectModel.ReadOnlyCollection`1"></xref> that contains <xref href="System.ServiceModel.PeerNodeAddress"></xref> objects representing nodes participating in the peer mesh.
  overload: System.ServiceModel.PeerResolver.Resolve*
  exceptions: []
  version:
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  monikers:
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.ServiceModel/PeerResolver.xml
  ms.technology:
  - dotnet-standard
  manager: ghogen
- uid: System.ServiceModel.PeerResolver.Unregister(System.Object,System.TimeSpan)
  commentId: M:System.ServiceModel.PeerResolver.Unregister(System.Object,System.TimeSpan)
  id: Unregister(System.Object,System.TimeSpan)
  parent: System.ServiceModel.PeerResolver
  langs:
  - csharp
  name: Unregister(Object, TimeSpan)
  nameWithType: PeerResolver.Unregister(Object, TimeSpan)
  fullName: PeerResolver.Unregister(Object, TimeSpan)
  type: Method
  assemblies:
  - System.ServiceModel
  namespace: System.ServiceModel
  summary: Removes the registration entry for a node from a peer mesh.
  remarks: "A registration ID is a peer resolver token, that, at the very minimum, represents the tuple of a peer node ID and the mesh ID. This ID value must have been obtained in a previous call to <xref:System.ServiceModel.PeerResolver.Register%2A>.  \n  \n <xref:System.ServiceModel.PeerResolver.Unregister%2A> is called in two specific cases:  \n  \n-   When the <xref:System.ServiceModel.PeerNode> is leaving the peer mesh (usually as the result of closing the last peer channel or service host that is associated with it).  \n  \n-   When the <xref:System.ServiceModel.PeerNode> can find no available endpoint addresses of other nodes participating in the peer mesh. As a result, the <xref:System.ServiceModel.PeerNode> is no longer reachable, and it will attempt to call <xref:System.ServiceModel.PeerResolver.Unregister%2A> to unregister itself from the <xref:System.ServiceModel.PeerResolver>. If other peer nodes within the mesh become available subsequent to unregistration, the node can re-register itself by calling <xref:System.ServiceModel.PeerResolver.Register%2A> and obtaining a new registration ID."
  syntax:
    content: public abstract void Unregister (object registrationId, TimeSpan timeout);
    parameters:
    - id: registrationId
      type: System.Object
      description: A registration ID for the node obtained by a previous call to <xref href="System.ServiceModel.PeerResolver.Register(System.String,System.ServiceModel.PeerNodeAddress,System.TimeSpan)"></xref>.
    - id: timeout
      type: System.TimeSpan
      description: The length of time to wait for a successful removal of the registration from the peer mesh. If the attempt fails, <xref href="System.TimeoutException"></xref> is raised on the peer.
  overload: System.ServiceModel.PeerResolver.Unregister*
  exceptions: []
  version:
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  monikers:
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.ServiceModel/PeerResolver.xml
  ms.technology:
  - dotnet-standard
  manager: ghogen
- uid: System.ServiceModel.PeerResolver.Update(System.Object,System.ServiceModel.PeerNodeAddress,System.TimeSpan)
  commentId: M:System.ServiceModel.PeerResolver.Update(System.Object,System.ServiceModel.PeerNodeAddress,System.TimeSpan)
  id: Update(System.Object,System.ServiceModel.PeerNodeAddress,System.TimeSpan)
  parent: System.ServiceModel.PeerResolver
  langs:
  - csharp
  name: Update(Object, PeerNodeAddress, TimeSpan)
  nameWithType: PeerResolver.Update(Object, PeerNodeAddress, TimeSpan)
  fullName: PeerResolver.Update(Object, PeerNodeAddress, TimeSpan)
  type: Method
  assemblies:
  - System.ServiceModel
  namespace: System.ServiceModel
  summary: Updates the <xref href="System.ServiceModel.PeerNodeAddress"></xref> for a node registered with a specific peer mesh.
  remarks: <xref:System.ServiceModel.PeerResolver.Update%2A> is called when the address of the <xref:System.ServiceModel.PeerNode> changes on the local machine.
  syntax:
    content: public abstract void Update (object registrationId, System.ServiceModel.PeerNodeAddress updatedNodeAddress, TimeSpan timeout);
    parameters:
    - id: registrationId
      type: System.Object
      description: A registration ID token for the node, obtained by a previous call to <xref href="System.ServiceModel.PeerResolver.Register(System.String,System.ServiceModel.PeerNodeAddress,System.TimeSpan)"></xref>
    - id: updatedNodeAddress
      type: System.ServiceModel.PeerNodeAddress
      description: The updated endpoint address (and other multihoming IP addresses).
    - id: timeout
      type: System.TimeSpan
      description: The length of time to wait for success before aborting the attempt to update the node's registration within the peer mesh. If the attempt fails, <xref href="System.TimeoutException"></xref> is raised on the peer.
  overload: System.ServiceModel.PeerResolver.Update*
  exceptions: []
  version:
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  monikers:
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.ServiceModel/PeerResolver.xml
  ms.technology:
  - dotnet-standard
  manager: ghogen
references:
- uid: System.Object
  parent: System
  isExternal: false
  name: Object
  nameWithType: Object
  fullName: System.Object
- uid: System.ServiceModel.PeerResolver.#ctor
  parent: System.ServiceModel.PeerResolver
  isExternal: false
  name: PeerResolver()
  nameWithType: PeerResolver.PeerResolver()
  fullName: PeerResolver.PeerResolver()
- uid: System.ServiceModel.PeerResolver.CanShareReferrals
  parent: System.ServiceModel.PeerResolver
  isExternal: false
  name: CanShareReferrals
  nameWithType: PeerResolver.CanShareReferrals
  fullName: PeerResolver.CanShareReferrals
- uid: System.Boolean
  parent: System
  isExternal: false
  name: Boolean
  nameWithType: Boolean
  fullName: System.Boolean
- uid: System.ServiceModel.PeerResolver.Initialize(System.ServiceModel.EndpointAddress,System.ServiceModel.Channels.Binding,System.ServiceModel.Description.ClientCredentials,System.ServiceModel.PeerResolvers.PeerReferralPolicy)
  parent: System.ServiceModel.PeerResolver
  isExternal: false
  name: Initialize(EndpointAddress, Binding, ClientCredentials, PeerReferralPolicy)
  nameWithType: PeerResolver.Initialize(EndpointAddress, Binding, ClientCredentials, PeerReferralPolicy)
  fullName: PeerResolver.Initialize(EndpointAddress, Binding, ClientCredentials, PeerReferralPolicy)
- uid: System.ServiceModel.EndpointAddress
  parent: System.ServiceModel
  isExternal: false
  name: EndpointAddress
  nameWithType: EndpointAddress
  fullName: System.ServiceModel.EndpointAddress
- uid: System.ServiceModel.Channels.Binding
  parent: System.ServiceModel.Channels
  isExternal: false
  name: Binding
  nameWithType: Binding
  fullName: System.ServiceModel.Channels.Binding
- uid: System.ServiceModel.Description.ClientCredentials
  parent: System.ServiceModel.Description
  isExternal: false
  name: ClientCredentials
  nameWithType: ClientCredentials
  fullName: System.ServiceModel.Description.ClientCredentials
- uid: System.ServiceModel.PeerResolvers.PeerReferralPolicy
  parent: System.ServiceModel.PeerResolvers
  isExternal: false
  name: PeerReferralPolicy
  nameWithType: PeerReferralPolicy
  fullName: System.ServiceModel.PeerResolvers.PeerReferralPolicy
- uid: System.ServiceModel.PeerResolver.Register(System.String,System.ServiceModel.PeerNodeAddress,System.TimeSpan)
  parent: System.ServiceModel.PeerResolver
  isExternal: false
  name: Register(String, PeerNodeAddress, TimeSpan)
  nameWithType: PeerResolver.Register(String, PeerNodeAddress, TimeSpan)
  fullName: PeerResolver.Register(String, PeerNodeAddress, TimeSpan)
- uid: System.String
  parent: System
  isExternal: false
  name: String
  nameWithType: String
  fullName: System.String
- uid: System.ServiceModel.PeerNodeAddress
  parent: System.ServiceModel
  isExternal: false
  name: PeerNodeAddress
  nameWithType: PeerNodeAddress
  fullName: System.ServiceModel.PeerNodeAddress
- uid: System.TimeSpan
  parent: System
  isExternal: false
  name: TimeSpan
  nameWithType: TimeSpan
  fullName: System.TimeSpan
- uid: System.ServiceModel.PeerResolver.Resolve(System.String,System.Int32,System.TimeSpan)
  parent: System.ServiceModel.PeerResolver
  isExternal: false
  name: Resolve(String, Int32, TimeSpan)
  nameWithType: PeerResolver.Resolve(String, Int32, TimeSpan)
  fullName: PeerResolver.Resolve(String, Int32, TimeSpan)
- uid: System.Collections.ObjectModel.ReadOnlyCollection`1
  name: ReadOnlyCollection<T>
  nameWithType: ReadOnlyCollection<T>
  fullName: System.Collections.ObjectModel.ReadOnlyCollection<T>
- uid: System.Collections.ObjectModel.ReadOnlyCollection{System.ServiceModel.PeerNodeAddress}
  parent: System.Collections.ObjectModel
  isExternal: false
  name: ReadOnlyCollection<PeerNodeAddress>
  nameWithType: ReadOnlyCollection<PeerNodeAddress>
  fullName: System.Collections.ObjectModel.ReadOnlyCollection<System.ServiceModel.PeerNodeAddress>
  spec.csharp:
  - uid: System.Collections.ObjectModel.ReadOnlyCollection`1
    name: ReadOnlyCollection
    nameWithType: ReadOnlyCollection
    fullName: System.Collections.ObjectModel.ReadOnlyCollection
  - name: <
    nameWithType: <
    fullName: <
  - uid: System.ServiceModel.PeerNodeAddress
    name: PeerNodeAddress
    nameWithType: PeerNodeAddress
    fullName: System.ServiceModel.PeerNodeAddress
  - name: '>'
    nameWithType: '>'
    fullName: '>'
- uid: System.Int32
  parent: System
  isExternal: false
  name: Int32
  nameWithType: Int32
  fullName: System.Int32
- uid: System.ServiceModel.PeerResolver.Unregister(System.Object,System.TimeSpan)
  parent: System.ServiceModel.PeerResolver
  isExternal: false
  name: Unregister(Object, TimeSpan)
  nameWithType: PeerResolver.Unregister(Object, TimeSpan)
  fullName: PeerResolver.Unregister(Object, TimeSpan)
- uid: System.ServiceModel.PeerResolver.Update(System.Object,System.ServiceModel.PeerNodeAddress,System.TimeSpan)
  parent: System.ServiceModel.PeerResolver
  isExternal: false
  name: Update(Object, PeerNodeAddress, TimeSpan)
  nameWithType: PeerResolver.Update(Object, PeerNodeAddress, TimeSpan)
  fullName: PeerResolver.Update(Object, PeerNodeAddress, TimeSpan)
- uid: System.ServiceModel.PeerResolver.#ctor*
  parent: System.ServiceModel.PeerResolver
  isExternal: false
  name: PeerResolver
  nameWithType: PeerResolver.PeerResolver
  fullName: PeerResolver.PeerResolver
  monikers:
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.ServiceModel/PeerResolver.xml
- uid: System.ServiceModel.PeerResolver.CanShareReferrals*
  parent: System.ServiceModel.PeerResolver
  isExternal: false
  name: CanShareReferrals
  nameWithType: PeerResolver.CanShareReferrals
  fullName: PeerResolver.CanShareReferrals
  monikers:
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.ServiceModel/PeerResolver.xml
- uid: System.ServiceModel.PeerResolver.Initialize*
  parent: System.ServiceModel.PeerResolver
  isExternal: false
  name: Initialize
  nameWithType: PeerResolver.Initialize
  fullName: PeerResolver.Initialize
  monikers:
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.ServiceModel/PeerResolver.xml
- uid: System.ServiceModel.PeerResolver.Register*
  parent: System.ServiceModel.PeerResolver
  isExternal: false
  name: Register
  nameWithType: PeerResolver.Register
  fullName: PeerResolver.Register
  monikers:
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.ServiceModel/PeerResolver.xml
- uid: System.ServiceModel.PeerResolver.Resolve*
  parent: System.ServiceModel.PeerResolver
  isExternal: false
  name: Resolve
  nameWithType: PeerResolver.Resolve
  fullName: PeerResolver.Resolve
  monikers:
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.ServiceModel/PeerResolver.xml
- uid: System.ServiceModel.PeerResolver.Unregister*
  parent: System.ServiceModel.PeerResolver
  isExternal: false
  name: Unregister
  nameWithType: PeerResolver.Unregister
  fullName: PeerResolver.Unregister
  monikers:
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.ServiceModel/PeerResolver.xml
- uid: System.ServiceModel.PeerResolver.Update*
  parent: System.ServiceModel.PeerResolver
  isExternal: false
  name: Update
  nameWithType: PeerResolver.Update
  fullName: PeerResolver.Update
  monikers:
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.ServiceModel/PeerResolver.xml
- uid: System.Object.Equals(System.Object)
  parent: System.Object
  isExternal: false
  name: Equals(Object)
  nameWithType: Object.Equals(Object)
  fullName: Object.Equals(Object)
- uid: System.Object.Equals(System.Object,System.Object)
  parent: System.Object
  isExternal: false
  name: Equals(Object, Object)
  nameWithType: Object.Equals(Object, Object)
  fullName: Object.Equals(Object, Object)
- uid: System.Object.GetHashCode
  parent: System.Object
  isExternal: false
  name: GetHashCode()
  nameWithType: Object.GetHashCode()
  fullName: Object.GetHashCode()
- uid: System.Object.GetType
  parent: System.Object
  isExternal: false
  name: GetType()
  nameWithType: Object.GetType()
  fullName: Object.GetType()
- uid: System.Object.MemberwiseClone
  parent: System.Object
  isExternal: false
  name: MemberwiseClone()
  nameWithType: Object.MemberwiseClone()
  fullName: Object.MemberwiseClone()
- uid: System.Object.ReferenceEquals(System.Object,System.Object)
  parent: System.Object
  isExternal: false
  name: ReferenceEquals(Object, Object)
  nameWithType: Object.ReferenceEquals(Object, Object)
  fullName: Object.ReferenceEquals(Object, Object)
- uid: System.Object.ToString
  parent: System.Object
  isExternal: false
  name: ToString()
  nameWithType: Object.ToString()
  fullName: Object.ToString()
