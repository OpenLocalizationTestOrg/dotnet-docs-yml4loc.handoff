### YamlMime:ManagedReference
items:
- uid: System.Runtime.CompilerServices.CallConvThiscall
  commentId: T:System.Runtime.CompilerServices.CallConvThiscall
  id: CallConvThiscall
  children:
  - System.Runtime.CompilerServices.CallConvThiscall.#ctor
  langs:
  - csharp
  name: CallConvThiscall
  nameWithType: CallConvThiscall
  fullName: System.Runtime.CompilerServices.CallConvThiscall
  type: Class
  assemblies:
  - System.Runtime.CompilerServices.VisualC
  - mscorlib
  - netstandard
  namespace: System.Runtime.CompilerServices
  summary: Indicates that a method should use the `ThisCall` calling convention.
  remarks: "When using the `ThisCall` calling convention, the first parameter of a method call is the `this` pointer, which is stored in register ECX. Other parameters of a method call are pushed on the stack. This calling convention is used to call methods on classes exported from an unmanaged DLL.  \n  \n The classes in <xref:System.Runtime.CompilerServices> are for compiler writers' use only.  \n  \n Compilers emit custom modifiers within metadata to change the way that the just-in-time (JIT) compiler handles values when the default behavior is not appropriate.  When the JIT compiler encounters a custom modifier, it handles the value in the way that the modifier specifies.  Compilers can apply custom modifiers to methods, parameters, and return values.  The JIT compiler must respond to required modifiers but can ignore optional modifiers.  A C++ compiler could emit a custom modifier to describe how a byte should be treated in cases where the JIT compiler treats bytes in a manner that is not compatible with C++ by default.  \n  \n You can emit custom modifiers into metadata using one of the following techniques:  \n  \n-   Using methods in the <xref:System.Reflection.Emit.TypeBuilder> class such as <xref:System.Reflection.Emit.TypeBuilder.DefineMethod%2A>, <xref:System.Reflection.Emit.TypeBuilder.DefineField%2A>, <xref:System.Reflection.Emit.TypeBuilder.DefineConstructor%2A>, and <xref:System.Reflection.Emit.TypeBuilder.DefineProperty%2A>.  \n  \n-   Generating a Microsoft intermediate language (MSIL) instruction file that contains calls to `modopt` and `modreq`, and assembling the file with the [Ilasm.exe (IL Assembler)](~/docs/framework/tools/ilasm-exe-il-assembler.md).  \n  \n-   Using the unmanaged reflection API."
  syntax:
    content: >-
      [System.Runtime.InteropServices.ComVisible(true)]

      public class CallConvThiscall
  inheritance:
  - System.Object
  implements: []
  inheritedMembers:
  - System.Object.Equals(System.Object)
  - System.Object.Equals(System.Object,System.Object)
  - System.Object.GetHashCode
  - System.Object.GetType
  - System.Object.MemberwiseClone
  - System.Object.ReferenceEquals(System.Object,System.Object)
  - System.Object.ToString
  attributes:
  - type: System.Runtime.InteropServices.ComVisibleAttribute
  version:
  - netcore-1.0
  - netcore-1.1
  - netcore-2.0
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  - netstandard-2.0
  - xamarinandroid-7.1
  - xamarinios-10.8
  - xamarinmac-3.0
  monikers:
  - netcore-1.0
  - netcore-1.1
  - netcore-2.0
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  - netstandard-2.0
  - xamarinandroid-7.1
  - xamarinios-10.8
  - xamarinmac-3.0
  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Runtime.CompilerServices/CallConvThiscall.xml
  ms.technology:
  - dotnet-standard
  author: rpetrusha
  ms.author: ronpet
  manager: wpickett
- uid: System.Runtime.CompilerServices.CallConvThiscall.#ctor
  commentId: M:System.Runtime.CompilerServices.CallConvThiscall.#ctor
  id: '#ctor'
  parent: System.Runtime.CompilerServices.CallConvThiscall
  langs:
  - csharp
  name: CallConvThiscall()
  nameWithType: CallConvThiscall.CallConvThiscall()
  fullName: CallConvThiscall.CallConvThiscall()
  type: Constructor
  assemblies:
  - mscorlib
  - netstandard
  - System.Runtime.CompilerServices.VisualC
  namespace: System.Runtime.CompilerServices
  summary: Initializes a new instance of the <xref href="System.Runtime.CompilerServices.CallConvThiscall"></xref> class.
  remarks: The classes in <xref:System.Runtime.CompilerServices> are for compiler writers' use only.
  syntax:
    content: public CallConvThiscall ();
    parameters: []
  overload: System.Runtime.CompilerServices.CallConvThiscall.#ctor*
  exceptions: []
  version:
  - netcore-2.0
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  - netstandard-2.0
  - xamarinandroid-7.1
  - xamarinios-10.8
  - xamarinmac-3.0
  monikers:
  - netcore-2.0
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  - netstandard-2.0
  - xamarinandroid-7.1
  - xamarinios-10.8
  - xamarinmac-3.0
  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Runtime.CompilerServices/CallConvThiscall.xml
  ms.technology:
  - dotnet-standard
  author: rpetrusha
  ms.author: ronpet
  manager: wpickett
references:
- uid: System.Object
  parent: System
  isExternal: false
  name: Object
  nameWithType: Object
  fullName: System.Object
- uid: System.Runtime.CompilerServices.CallConvThiscall.#ctor
  parent: System.Runtime.CompilerServices.CallConvThiscall
  isExternal: false
  name: CallConvThiscall()
  nameWithType: CallConvThiscall.CallConvThiscall()
  fullName: CallConvThiscall.CallConvThiscall()
- uid: System.Runtime.CompilerServices.CallConvThiscall.#ctor*
  parent: System.Runtime.CompilerServices.CallConvThiscall
  isExternal: false
  name: CallConvThiscall
  nameWithType: CallConvThiscall.CallConvThiscall
  fullName: CallConvThiscall.CallConvThiscall
  monikers:
  - netcore-2.0
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  - netstandard-2.0
  - xamarinandroid-7.1
  - xamarinios-10.8
  - xamarinmac-3.0
  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Runtime.CompilerServices/CallConvThiscall.xml
- uid: System.Object.Equals(System.Object)
  parent: System.Object
  isExternal: false
  name: Equals(Object)
  nameWithType: Object.Equals(Object)
  fullName: Object.Equals(Object)
- uid: System.Object.Equals(System.Object,System.Object)
  parent: System.Object
  isExternal: false
  name: Equals(Object, Object)
  nameWithType: Object.Equals(Object, Object)
  fullName: Object.Equals(Object, Object)
- uid: System.Object.GetHashCode
  parent: System.Object
  isExternal: false
  name: GetHashCode()
  nameWithType: Object.GetHashCode()
  fullName: Object.GetHashCode()
- uid: System.Object.GetType
  parent: System.Object
  isExternal: false
  name: GetType()
  nameWithType: Object.GetType()
  fullName: Object.GetType()
- uid: System.Object.MemberwiseClone
  parent: System.Object
  isExternal: false
  name: MemberwiseClone()
  nameWithType: Object.MemberwiseClone()
  fullName: Object.MemberwiseClone()
- uid: System.Object.ReferenceEquals(System.Object,System.Object)
  parent: System.Object
  isExternal: false
  name: ReferenceEquals(Object, Object)
  nameWithType: Object.ReferenceEquals(Object, Object)
  fullName: Object.ReferenceEquals(Object, Object)
- uid: System.Object.ToString
  parent: System.Object
  isExternal: false
  name: ToString()
  nameWithType: Object.ToString()
  fullName: Object.ToString()
