{"nodes":[{"content":"The <xref href=\"System.Web.Profile\"></xref> namespace contains classes that are used to work with ASP.NET user profiles in Web server applications.","nodes":[{"pos":[0,147],"content":"The <ph id=\"ph1\">&lt;xref href=\"System.Web.Profile\"&gt;&lt;/xref&gt;</ph> namespace contains classes that are used to work with ASP.NET user profiles in Web server applications.","source":"The <xref href=\"System.Web.Profile\"></xref> namespace contains classes that are used to work with ASP.NET user profiles in Web server applications."}],"pos":[1123,1271],"yaml":true},{"content":"ASP.NET profiles are used to store and retrieve user settings in a data source such as a database. Profile information and property values are managed by using a profile provider. Profile information can be stored in a Microsoft SQL Server database by using the <xref:System.Web.Profile.SqlProfileProvider> class, or in a custom data source by using an implementation of the <xref:System.Web.Profile.ProfileProvider> abstract class.  \n  \n ASP.NET profiles are configured by using the  configuration section.  \n  \n When an application starts that has profiles enabled, ASP.NET creates a new class of type `ProfileCommon`, which inherits from the <xref:System.Web.Profile.ProfileBase> class. Strongly typed accessors are added to the `ProfileCommon` class for each property that is defined in the  configuration section. An instance of the `ProfileCommon` class is set as the value of the <xref:System.Web.HttpContext.Profile%2A> property of the current <xref:System.Web.HttpContext> object. You can create a custom profile implementation that inherits from the <xref:System.Web.Profile.ProfileBase> abstract class and that defines properties for the user profile that are not specified in the  configuration element.","nodes":[{"pos":[0,432],"content":"ASP.NET profiles are used to store and retrieve user settings in a data source such as a database. Profile information and property values are managed by using a profile provider. Profile information can be stored in a Microsoft SQL Server database by using the <xref:System.Web.Profile.SqlProfileProvider> class, or in a custom data source by using an implementation of the <xref:System.Web.Profile.ProfileProvider> abstract class.","nodes":[{"content":"ASP.NET profiles are used to store and retrieve user settings in a data source such as a database. Profile information and property values are managed by using a profile provider. Profile information can be stored in a Microsoft SQL Server database by using the <xref:System.Web.Profile.SqlProfileProvider> class, or in a custom data source by using an implementation of the <xref:System.Web.Profile.ProfileProvider> abstract class.","pos":[0,432],"nodes":[{"content":"ASP.NET profiles are used to store and retrieve user settings in a data source such as a database.","pos":[0,98]},{"content":"Profile information and property values are managed by using a profile provider.","pos":[99,179]},{"content":"Profile information can be stored in a Microsoft SQL Server database by using the <ph id=\"ph1\">&lt;xref:System.Web.Profile.SqlProfileProvider&gt;</ph> class, or in a custom data source by using an implementation of the <ph id=\"ph2\">&lt;xref:System.Web.Profile.ProfileProvider&gt;</ph> abstract class.","pos":[180,432],"source":" Profile information can be stored in a Microsoft SQL Server database by using the <xref:System.Web.Profile.SqlProfileProvider> class, or in a custom data source by using an implementation of the <xref:System.Web.Profile.ProfileProvider> abstract class."}]}]},{"pos":[439,507],"content":"ASP.NET profiles are configured by using the  configuration section.","nodes":[{"content":"ASP.NET profiles are configured by using the  configuration section.","pos":[0,68]}]},{"pos":[514,1215],"content":"When an application starts that has profiles enabled, ASP.NET creates a new class of type `ProfileCommon`, which inherits from the <xref:System.Web.Profile.ProfileBase> class. Strongly typed accessors are added to the `ProfileCommon` class for each property that is defined in the  configuration section. An instance of the `ProfileCommon` class is set as the value of the <xref:System.Web.HttpContext.Profile%2A> property of the current <xref:System.Web.HttpContext> object. You can create a custom profile implementation that inherits from the <xref:System.Web.Profile.ProfileBase> abstract class and that defines properties for the user profile that are not specified in the  configuration element.","nodes":[{"content":"When an application starts that has profiles enabled, ASP.NET creates a new class of type <ph id=\"ph1\">`ProfileCommon`</ph>, which inherits from the <ph id=\"ph2\">&lt;xref:System.Web.Profile.ProfileBase&gt;</ph> class.","pos":[0,175],"source":"When an application starts that has profiles enabled, ASP.NET creates a new class of type `ProfileCommon`, which inherits from the <xref:System.Web.Profile.ProfileBase> class."},{"content":"Strongly typed accessors are added to the <ph id=\"ph1\">`ProfileCommon`</ph> class for each property that is defined in the  configuration section.","pos":[176,304],"source":" Strongly typed accessors are added to the `ProfileCommon` class for each property that is defined in the  configuration section."},{"content":"An instance of the <ph id=\"ph1\">`ProfileCommon`</ph> class is set as the value of the <ph id=\"ph2\">&lt;xref:System.Web.HttpContext.Profile%2A&gt;</ph> property of the current <ph id=\"ph3\">&lt;xref:System.Web.HttpContext&gt;</ph> object.","pos":[305,475],"source":" An instance of the `ProfileCommon` class is set as the value of the <xref:System.Web.HttpContext.Profile%2A> property of the current <xref:System.Web.HttpContext> object."},{"content":"You can create a custom profile implementation that inherits from the <ph id=\"ph1\">&lt;xref:System.Web.Profile.ProfileBase&gt;</ph> abstract class and that defines properties for the user profile that are not specified in the  configuration element.","pos":[476,701],"source":" You can create a custom profile implementation that inherits from the <xref:System.Web.Profile.ProfileBase> abstract class and that defines properties for the user profile that are not specified in the  configuration element."}]}],"pos":[1282,2504],"yaml":true,"extradata":"MT"}],"content":"### YamlMime:ManagedReference\nitems:\n- uid: System.Web.Profile\n  id: System.Web.Profile\n  children:\n  - System.Web.Profile.CustomProviderDataAttribute\n  - System.Web.Profile.DefaultProfile\n  - System.Web.Profile.ProfileAuthenticationOption\n  - System.Web.Profile.ProfileAutoSaveEventArgs\n  - System.Web.Profile.ProfileAutoSaveEventHandler\n  - System.Web.Profile.ProfileBase\n  - System.Web.Profile.ProfileEventArgs\n  - System.Web.Profile.ProfileEventHandler\n  - System.Web.Profile.ProfileGroupBase\n  - System.Web.Profile.ProfileInfo\n  - System.Web.Profile.ProfileInfoCollection\n  - System.Web.Profile.ProfileManager\n  - System.Web.Profile.ProfileMigrateEventArgs\n  - System.Web.Profile.ProfileMigrateEventHandler\n  - System.Web.Profile.ProfileModule\n  - System.Web.Profile.ProfileProvider\n  - System.Web.Profile.ProfileProviderAttribute\n  - System.Web.Profile.ProfileProviderCollection\n  - System.Web.Profile.SettingsAllowAnonymousAttribute\n  - System.Web.Profile.SqlProfileProvider\n  langs:\n  - csharp\n  name: System.Web.Profile\n  nameWithType: System.Web.Profile\n  fullName: System.Web.Profile\n  type: Namespace\n  summary: The <xref href=\"System.Web.Profile\"></xref> namespace contains classes that are used to work with ASP.NET user profiles in Web server applications.\n  remarks: \"ASP.NET profiles are used to store and retrieve user settings in a data source such as a database. Profile information and property values are managed by using a profile provider. Profile information can be stored in a Microsoft SQL Server database by using the <xref:System.Web.Profile.SqlProfileProvider> class, or in a custom data source by using an implementation of the <xref:System.Web.Profile.ProfileProvider> abstract class.  \\n  \\n ASP.NET profiles are configured by using the  configuration section.  \\n  \\n When an application starts that has profiles enabled, ASP.NET creates a new class of type `ProfileCommon`, which inherits from the <xref:System.Web.Profile.ProfileBase> class. Strongly typed accessors are added to the `ProfileCommon` class for each property that is defined in the  configuration section. An instance of the `ProfileCommon` class is set as the value of the <xref:System.Web.HttpContext.Profile%2A> property of the current <xref:System.Web.HttpContext> object. You can create a custom profile implementation that inherits from the <xref:System.Web.Profile.ProfileBase> abstract class and that defines properties for the user profile that are not specified in the  configuration element.\"\n  version:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/ns-System.Web.Profile.xml\n  ms.technology:\n  - dotnet-webforms\n  ms.author: riande\n  manager: wpickett\nreferences:\n- uid: System.Web.Profile.CustomProviderDataAttribute\n  parent: System.Web.Profile\n  isExternal: false\n  name: CustomProviderDataAttribute\n  nameWithType: CustomProviderDataAttribute\n  fullName: System.Web.Profile.CustomProviderDataAttribute\n- uid: System.Web.Profile.DefaultProfile\n  parent: System.Web.Profile\n  isExternal: false\n  name: DefaultProfile\n  nameWithType: DefaultProfile\n  fullName: System.Web.Profile.DefaultProfile\n- uid: System.Web.Profile.ProfileAuthenticationOption\n  parent: System.Web.Profile\n  isExternal: false\n  name: ProfileAuthenticationOption\n  nameWithType: ProfileAuthenticationOption\n  fullName: System.Web.Profile.ProfileAuthenticationOption\n- uid: System.Web.Profile.ProfileAutoSaveEventArgs\n  parent: System.Web.Profile\n  isExternal: false\n  name: ProfileAutoSaveEventArgs\n  nameWithType: ProfileAutoSaveEventArgs\n  fullName: System.Web.Profile.ProfileAutoSaveEventArgs\n- uid: System.Web.Profile.ProfileAutoSaveEventHandler\n  parent: System.Web.Profile\n  isExternal: false\n  name: ProfileAutoSaveEventHandler\n  nameWithType: ProfileAutoSaveEventHandler\n  fullName: System.Web.Profile.ProfileAutoSaveEventHandler\n- uid: System.Web.Profile.ProfileBase\n  parent: System.Web.Profile\n  isExternal: false\n  name: ProfileBase\n  nameWithType: ProfileBase\n  fullName: System.Web.Profile.ProfileBase\n- uid: System.Web.Profile.ProfileEventArgs\n  parent: System.Web.Profile\n  isExternal: false\n  name: ProfileEventArgs\n  nameWithType: ProfileEventArgs\n  fullName: System.Web.Profile.ProfileEventArgs\n- uid: System.Web.Profile.ProfileEventHandler\n  parent: System.Web.Profile\n  isExternal: false\n  name: ProfileEventHandler\n  nameWithType: ProfileEventHandler\n  fullName: System.Web.Profile.ProfileEventHandler\n- uid: System.Web.Profile.ProfileGroupBase\n  parent: System.Web.Profile\n  isExternal: false\n  name: ProfileGroupBase\n  nameWithType: ProfileGroupBase\n  fullName: System.Web.Profile.ProfileGroupBase\n- uid: System.Web.Profile.ProfileInfo\n  parent: System.Web.Profile\n  isExternal: false\n  name: ProfileInfo\n  nameWithType: ProfileInfo\n  fullName: System.Web.Profile.ProfileInfo\n- uid: System.Web.Profile.ProfileInfoCollection\n  parent: System.Web.Profile\n  isExternal: false\n  name: ProfileInfoCollection\n  nameWithType: ProfileInfoCollection\n  fullName: System.Web.Profile.ProfileInfoCollection\n- uid: System.Web.Profile.ProfileManager\n  parent: System.Web.Profile\n  isExternal: false\n  name: ProfileManager\n  nameWithType: ProfileManager\n  fullName: System.Web.Profile.ProfileManager\n- uid: System.Web.Profile.ProfileMigrateEventArgs\n  parent: System.Web.Profile\n  isExternal: false\n  name: ProfileMigrateEventArgs\n  nameWithType: ProfileMigrateEventArgs\n  fullName: System.Web.Profile.ProfileMigrateEventArgs\n- uid: System.Web.Profile.ProfileMigrateEventHandler\n  parent: System.Web.Profile\n  isExternal: false\n  name: ProfileMigrateEventHandler\n  nameWithType: ProfileMigrateEventHandler\n  fullName: System.Web.Profile.ProfileMigrateEventHandler\n- uid: System.Web.Profile.ProfileModule\n  parent: System.Web.Profile\n  isExternal: false\n  name: ProfileModule\n  nameWithType: ProfileModule\n  fullName: System.Web.Profile.ProfileModule\n- uid: System.Web.Profile.ProfileProvider\n  parent: System.Web.Profile\n  isExternal: false\n  name: ProfileProvider\n  nameWithType: ProfileProvider\n  fullName: System.Web.Profile.ProfileProvider\n- uid: System.Web.Profile.ProfileProviderAttribute\n  parent: System.Web.Profile\n  isExternal: false\n  name: ProfileProviderAttribute\n  nameWithType: ProfileProviderAttribute\n  fullName: System.Web.Profile.ProfileProviderAttribute\n- uid: System.Web.Profile.ProfileProviderCollection\n  parent: System.Web.Profile\n  isExternal: false\n  name: ProfileProviderCollection\n  nameWithType: ProfileProviderCollection\n  fullName: System.Web.Profile.ProfileProviderCollection\n- uid: System.Web.Profile.SettingsAllowAnonymousAttribute\n  parent: System.Web.Profile\n  isExternal: false\n  name: SettingsAllowAnonymousAttribute\n  nameWithType: SettingsAllowAnonymousAttribute\n  fullName: System.Web.Profile.SettingsAllowAnonymousAttribute\n- uid: System.Web.Profile.SqlProfileProvider\n  parent: System.Web.Profile\n  isExternal: false\n  name: SqlProfileProvider\n  nameWithType: SqlProfileProvider\n  fullName: System.Web.Profile.SqlProfileProvider\n"}