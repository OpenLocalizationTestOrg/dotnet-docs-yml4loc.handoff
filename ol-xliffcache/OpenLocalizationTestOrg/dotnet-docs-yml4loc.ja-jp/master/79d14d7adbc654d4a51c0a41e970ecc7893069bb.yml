### YamlMime:ManagedReference
items:
- uid: System.Nullable
  commentId: T:System.Nullable
  id: Nullable
  children:
  - System.Nullable.Compare``1(System.Nullable{``0},System.Nullable{``0})
  - System.Nullable.Equals``1(System.Nullable{``0},System.Nullable{``0})
  - System.Nullable.GetUnderlyingType(System.Type)
  langs:
  - csharp
  name: Nullable
  nameWithType: Nullable
  fullName: System.Nullable
  type: Class
  assemblies:
  - System.Runtime
  - mscorlib
  - netstandard
  namespace: System
  summary: Supports a value type that can be assigned `null`. This class cannot be inherited.
  remarks: "A type is said to be nullable if it can be assigned a value or can be assigned `null`, which means the type has no value whatsoever. By default, all reference types, such as <xref:System.String>, are nullable, but all value types, such as <xref:System.Int32>, are not.  \n  \n In C# and Visual Basic, you mark a value type as nullable by using the `?` notation after the value type. For example, `int?` in C# or `Integer?` in Visual Basic declares an integer value type that can be assigned `null`.  \n  \n The <xref:System.Nullable> class provides complementary support for the <xref:System.Nullable%601> structure. The <xref:System.Nullable> class supports obtaining the underlying type of a nullable type, and comparison and equality operations on pairs of nullable types whose underlying value type does not support generic comparison and equality operations.  \n  \n## Boxing and Unboxing  \n When a nullable type is boxed, the common language runtime automatically boxes the underlying value of the <xref:System.Nullable%601> object, not the <xref:System.Nullable%601> object itself. That is, if the <xref:System.Nullable%601.HasValue%2A> property is `true`, the contents of the <xref:System.Nullable%601.Value%2A> property is boxed. If the `HasValue` property is `false`, `null` is boxed. When the underlying value of a nullable type is unboxed, the common language runtime creates a new <xref:System.Nullable%601> structure initialized to the underlying value."
  syntax:
    content: >-
      [System.Runtime.InteropServices.ComVisible(true)]

      public static class Nullable
  inheritance:
  - System.Object
  implements: []
  inheritedMembers:
  - System.Object.Equals(System.Object)
  - System.Object.Equals(System.Object,System.Object)
  - System.Object.GetHashCode
  - System.Object.GetType
  - System.Object.MemberwiseClone
  - System.Object.ReferenceEquals(System.Object,System.Object)
  - System.Object.ToString
  attributes:
  - type: System.Runtime.InteropServices.ComVisibleAttribute
  version:
  - netcore-1.0
  - netcore-1.1
  - netcore-2.0
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  - netstandard-1.0
  - netstandard-1.1
  - netstandard-1.2
  - netstandard-1.3
  - netstandard-1.4
  - netstandard-1.5
  - netstandard-1.6
  - netstandard-2.0
  - xamarinandroid-7.1
  - xamarinios-10.8
  - xamarinmac-3.0
  monikers:
  - netcore-1.0
  - netcore-1.1
  - netcore-2.0
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  - netstandard-1.0
  - netstandard-1.1
  - netstandard-1.2
  - netstandard-1.3
  - netstandard-1.4
  - netstandard-1.5
  - netstandard-1.6
  - netstandard-2.0
  - xamarinandroid-7.1
  - xamarinios-10.8
  - xamarinmac-3.0
  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System/Nullable.xml
  ms.technology:
  - dotnet-standard
  author: rpetrusha
  ms.author: ronpet
  manager: wpickett
- uid: System.Nullable.Compare``1(System.Nullable{``0},System.Nullable{``0})
  commentId: M:System.Nullable.Compare``1(System.Nullable{``0},System.Nullable{``0})
  id: Compare``1(System.Nullable{``0},System.Nullable{``0})
  parent: System.Nullable
  langs:
  - csharp
  name: Compare<T>(Nullable<T>, Nullable<T>)
  nameWithType: Nullable.Compare<T>(Nullable<T>, Nullable<T>)
  fullName: Nullable.Compare<T>(Nullable<T>, Nullable<T>)
  type: Method
  assemblies:
  - System.Runtime
  - mscorlib
  - netstandard
  namespace: System
  summary: Compares the relative values of two <xref href="System.Nullable`1"></xref> objects.
  syntax:
    content: 'public static int Compare<T> (Nullable<T> n1, Nullable<T> n2) where T : struct;'
    parameters:
    - id: n1
      type: System.Nullable`1
      description: A <xref href="System.Nullable`1"></xref> object.
    - id: n2
      type: System.Nullable`1
      description: A <xref href="System.Nullable`1"></xref> object.
    typeParameters:
    - id: T
      description: The underlying value type of the <code>n1</code> and <code>n2</code> parameters.
    return:
      type: System.Int32
      description: "An integer that indicates the relative values of the <code>n1</code> and <code>n2</code> parameters.  \n  \n <table><thead><tr><th> Return Value  \n  \n </th><th> Description  \n  \n </th></tr></thead><tbody><tr><td> Less than zero  \n  \n </td><td> The <xref href=\"System.Nullable`1.HasValue\"></xref> property for <code>n1</code> is `false`, and the <xref href=\"System.Nullable`1.HasValue\"></xref> property for <code>n2</code> is `true`.  \n  \n -or-  \n  \n The <xref href=\"System.Nullable`1.HasValue\"></xref> properties for <code>n1</code> and <code>n2</code> are `true`, and the value of the <xref href=\"System.Nullable`1.Value\"></xref> property for <code>n1</code> is less than the value of the <xref href=\"System.Nullable`1.Value\"></xref> property for <code>n2</code>.  \n  \n </td></tr><tr><td> Zero  \n  \n </td><td> The <xref href=\"System.Nullable`1.HasValue\"></xref> properties for <code>n1</code> and <code>n2</code> are `false`.  \n  \n -or-  \n  \n The <xref href=\"System.Nullable`1.HasValue\"></xref> properties for <code>n1</code> and <code>n2</code> are `true`, and the value of the <xref href=\"System.Nullable`1.Value\"></xref> property for <code>n1</code> is equal to the value of the <xref href=\"System.Nullable`1.Value\"></xref> property for <code>n2</code>.  \n  \n </td></tr><tr><td> Greater than zero  \n  \n </td><td> The <xref href=\"System.Nullable`1.HasValue\"></xref> property for <code>n1</code> is `true`, and the <xref href=\"System.Nullable`1.HasValue\"></xref> property for <code>n2</code> is `false`.  \n  \n -or-  \n  \n The <xref href=\"System.Nullable`1.HasValue\"></xref> properties for <code>n1</code> and <code>n2</code> are `true`, and the value of the <xref href=\"System.Nullable`1.Value\"></xref> property for <code>n1</code> is greater than the value of the <xref href=\"System.Nullable`1.Value\"></xref> property for <code>n2</code>.  \n  \n </td></tr></tbody></table>"
  overload: System.Nullable.Compare``1*
  exceptions: []
  version:
  - netcore-1.0
  - netcore-1.1
  - netcore-2.0
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  - netstandard-1.0
  - netstandard-1.1
  - netstandard-1.2
  - netstandard-1.3
  - netstandard-1.4
  - netstandard-1.5
  - netstandard-1.6
  - netstandard-2.0
  - xamarinandroid-7.1
  - xamarinios-10.8
  - xamarinmac-3.0
  monikers:
  - netcore-1.0
  - netcore-1.1
  - netcore-2.0
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  - netstandard-1.0
  - netstandard-1.1
  - netstandard-1.2
  - netstandard-1.3
  - netstandard-1.4
  - netstandard-1.5
  - netstandard-1.6
  - netstandard-2.0
  - xamarinandroid-7.1
  - xamarinios-10.8
  - xamarinmac-3.0
  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System/Nullable.xml
  ms.technology:
  - dotnet-standard
  author: rpetrusha
  ms.author: ronpet
  manager: wpickett
- uid: System.Nullable.Equals``1(System.Nullable{``0},System.Nullable{``0})
  commentId: M:System.Nullable.Equals``1(System.Nullable{``0},System.Nullable{``0})
  id: Equals``1(System.Nullable{``0},System.Nullable{``0})
  parent: System.Nullable
  langs:
  - csharp
  name: Equals<T>(Nullable<T>, Nullable<T>)
  nameWithType: Nullable.Equals<T>(Nullable<T>, Nullable<T>)
  fullName: Nullable.Equals<T>(Nullable<T>, Nullable<T>)
  type: Method
  assemblies:
  - System.Runtime
  - mscorlib
  - netstandard
  namespace: System
  summary: Indicates whether two specified <xref href="System.Nullable`1"></xref> objects are equal.
  syntax:
    content: 'public static bool Equals<T> (Nullable<T> n1, Nullable<T> n2) where T : struct;'
    parameters:
    - id: n1
      type: System.Nullable`1
      description: A <xref href="System.Nullable`1"></xref> object.
    - id: n2
      type: System.Nullable`1
      description: A <xref href="System.Nullable`1"></xref> object.
    typeParameters:
    - id: T
      description: The underlying value type of the <code>n1</code> and <code>n2</code> parameters.
    return:
      type: System.Boolean
      description: "`true` if the <code>n1</code> parameter is equal to the <code>n2</code> parameter; otherwise, `false`.  \n  \n The return value depends on the <xref href=\"System.Nullable`1.HasValue\"></xref> and <xref href=\"System.Nullable`1.Value\"></xref> properties of the two parameters that are compared.  \n  \n <table><thead><tr><th> Return Value  \n  \n </th><th> Description  \n  \n </th></tr></thead><tbody><tr><td>`true`</td><td> The <xref href=\"System.Nullable`1.HasValue\"></xref> properties for <code>n1</code> and <code>n2</code> are `false`.  \n  \n -or-  \n  \n The <xref href=\"System.Nullable`1.HasValue\"></xref> properties for <code>n1</code> and <code>n2</code> are `true`, and the <xref href=\"System.Nullable`1.Value\"></xref> properties of the parameters are equal.  \n  \n </td></tr><tr><td>`false`</td><td> The <xref href=\"System.Nullable`1.HasValue\"></xref> property is `true` for one parameter and `false` for the other parameter.  \n  \n -or-  \n  \n The <xref href=\"System.Nullable`1.HasValue\"></xref> properties for <code>n1</code> and <code>n2</code> are `true`, and the <xref href=\"System.Nullable`1.Value\"></xref> properties of the parameters are unequal.  \n  \n </td></tr></tbody></table>"
  overload: System.Nullable.Equals``1*
  exceptions: []
  version:
  - netcore-1.0
  - netcore-1.1
  - netcore-2.0
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  - netstandard-1.0
  - netstandard-1.1
  - netstandard-1.2
  - netstandard-1.3
  - netstandard-1.4
  - netstandard-1.5
  - netstandard-1.6
  - netstandard-2.0
  - xamarinandroid-7.1
  - xamarinios-10.8
  - xamarinmac-3.0
  monikers:
  - netcore-1.0
  - netcore-1.1
  - netcore-2.0
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  - netstandard-1.0
  - netstandard-1.1
  - netstandard-1.2
  - netstandard-1.3
  - netstandard-1.4
  - netstandard-1.5
  - netstandard-1.6
  - netstandard-2.0
  - xamarinandroid-7.1
  - xamarinios-10.8
  - xamarinmac-3.0
  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System/Nullable.xml
  ms.technology:
  - dotnet-standard
  author: rpetrusha
  ms.author: ronpet
  manager: wpickett
- uid: System.Nullable.GetUnderlyingType(System.Type)
  commentId: M:System.Nullable.GetUnderlyingType(System.Type)
  id: GetUnderlyingType(System.Type)
  parent: System.Nullable
  langs:
  - csharp
  name: GetUnderlyingType(Type)
  nameWithType: Nullable.GetUnderlyingType(Type)
  fullName: Nullable.GetUnderlyingType(Type)
  type: Method
  assemblies:
  - System.Runtime
  - mscorlib
  - netstandard
  namespace: System
  summary: Returns the underlying type argument of the specified nullable type.
  remarks: "A generic type definition is a type declaration, such as <xref:System.Nullable%601>, that contains a type parameter list, and the type parameter list declares one or more type parameters. A closed generic type is a type declaration where a particular type is specified for a type parameter.  \n  \n For example, if the `nullableType` parameter is the type of `Nullable<Int32>` in C# (`Nullable(Of Int32)` in Visual Basic), the return value is the type of <xref:System.Int32> (that is, the type argument of the closed generic type)."
  example:
  - "The following code example defines a method whose return value is of type <xref:System.Nullable%601> of <xref:System.Int32>. The code example uses the <xref:System.Nullable.GetUnderlyingType%2A> method to display the type argument of the return value.  \n  \n [!code-csharp[system.nullable_GetUnderlyingType#1](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.nullable_GetUnderlyingType/cs/gut.cs#1)]\n [!code-vb[system.nullable_GetUnderlyingType#1](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.nullable_GetUnderlyingType/vb/gut.vb#1)]"
  syntax:
    content: public static Type GetUnderlyingType (Type nullableType);
    parameters:
    - id: nullableType
      type: System.Type
      description: A <xref href="System.Type"></xref> object that describes a closed generic nullable type.
    return:
      type: System.Type
      description: The type argument of the <code>nullableType</code> parameter, if the <code>nullableType</code> parameter is a closed generic nullable type; otherwise, `null`.
  overload: System.Nullable.GetUnderlyingType*
  exceptions:
  - type: System.ArgumentNullException
    commentId: T:System.ArgumentNullException
    description: <code>nullableType</code> is `null`.
  version:
  - netcore-1.0
  - netcore-1.1
  - netcore-2.0
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  - netstandard-1.0
  - netstandard-1.1
  - netstandard-1.2
  - netstandard-1.3
  - netstandard-1.4
  - netstandard-1.5
  - netstandard-1.6
  - netstandard-2.0
  - xamarinandroid-7.1
  - xamarinios-10.8
  - xamarinmac-3.0
  monikers:
  - netcore-1.0
  - netcore-1.1
  - netcore-2.0
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  - netstandard-1.0
  - netstandard-1.1
  - netstandard-1.2
  - netstandard-1.3
  - netstandard-1.4
  - netstandard-1.5
  - netstandard-1.6
  - netstandard-2.0
  - xamarinandroid-7.1
  - xamarinios-10.8
  - xamarinmac-3.0
  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System/Nullable.xml
  ms.technology:
  - dotnet-standard
  author: rpetrusha
  ms.author: ronpet
  manager: wpickett
references:
- uid: System.Object
  parent: System
  isExternal: false
  name: Object
  nameWithType: Object
  fullName: System.Object
- uid: System.ArgumentNullException
  parent: System
  isExternal: false
  name: ArgumentNullException
  nameWithType: ArgumentNullException
  fullName: System.ArgumentNullException
- uid: System.Nullable.Compare``1(System.Nullable{``0},System.Nullable{``0})
  parent: System.Nullable
  isExternal: false
  name: Compare<T>(Nullable<T>, Nullable<T>)
  nameWithType: Nullable.Compare<T>(Nullable<T>, Nullable<T>)
  fullName: Nullable.Compare<T>(Nullable<T>, Nullable<T>)
- uid: System.Int32
  parent: System
  isExternal: false
  name: Int32
  nameWithType: Int32
  fullName: System.Int32
- uid: System.Nullable`1
  parent: System
  isExternal: false
  name: Nullable<T>
  nameWithType: Nullable<T>
  fullName: System.Nullable<T>
- uid: System.Nullable.Equals``1(System.Nullable{``0},System.Nullable{``0})
  parent: System.Nullable
  isExternal: false
  name: Equals<T>(Nullable<T>, Nullable<T>)
  nameWithType: Nullable.Equals<T>(Nullable<T>, Nullable<T>)
  fullName: Nullable.Equals<T>(Nullable<T>, Nullable<T>)
- uid: System.Boolean
  parent: System
  isExternal: false
  name: Boolean
  nameWithType: Boolean
  fullName: System.Boolean
- uid: System.Nullable.GetUnderlyingType(System.Type)
  parent: System.Nullable
  isExternal: false
  name: GetUnderlyingType(Type)
  nameWithType: Nullable.GetUnderlyingType(Type)
  fullName: Nullable.GetUnderlyingType(Type)
- uid: System.Type
  parent: System
  isExternal: false
  name: Type
  nameWithType: Type
  fullName: System.Type
- uid: System.Nullable.Compare``1*
  parent: System.Nullable
  isExternal: false
  name: Compare<T>
  nameWithType: Nullable.Compare<T>
  fullName: Nullable.Compare<T>
  monikers:
  - netcore-1.0
  - netcore-1.1
  - netcore-2.0
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  - netstandard-1.0
  - netstandard-1.1
  - netstandard-1.2
  - netstandard-1.3
  - netstandard-1.4
  - netstandard-1.5
  - netstandard-1.6
  - netstandard-2.0
  - xamarinandroid-7.1
  - xamarinios-10.8
  - xamarinmac-3.0
  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System/Nullable.xml
- uid: System.Nullable.Equals``1*
  parent: System.Nullable
  isExternal: false
  name: Equals<T>
  nameWithType: Nullable.Equals<T>
  fullName: Nullable.Equals<T>
  monikers:
  - netcore-1.0
  - netcore-1.1
  - netcore-2.0
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  - netstandard-1.0
  - netstandard-1.1
  - netstandard-1.2
  - netstandard-1.3
  - netstandard-1.4
  - netstandard-1.5
  - netstandard-1.6
  - netstandard-2.0
  - xamarinandroid-7.1
  - xamarinios-10.8
  - xamarinmac-3.0
  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System/Nullable.xml
- uid: System.Nullable.GetUnderlyingType*
  parent: System.Nullable
  isExternal: false
  name: GetUnderlyingType
  nameWithType: Nullable.GetUnderlyingType
  fullName: Nullable.GetUnderlyingType
  monikers:
  - netcore-1.0
  - netcore-1.1
  - netcore-2.0
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  - netstandard-1.0
  - netstandard-1.1
  - netstandard-1.2
  - netstandard-1.3
  - netstandard-1.4
  - netstandard-1.5
  - netstandard-1.6
  - netstandard-2.0
  - xamarinandroid-7.1
  - xamarinios-10.8
  - xamarinmac-3.0
  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System/Nullable.xml
- uid: System.Object.Equals(System.Object)
  parent: System.Object
  isExternal: false
  name: Equals(Object)
  nameWithType: Object.Equals(Object)
  fullName: Object.Equals(Object)
- uid: System.Object.Equals(System.Object,System.Object)
  parent: System.Object
  isExternal: false
  name: Equals(Object, Object)
  nameWithType: Object.Equals(Object, Object)
  fullName: Object.Equals(Object, Object)
- uid: System.Object.GetHashCode
  parent: System.Object
  isExternal: false
  name: GetHashCode()
  nameWithType: Object.GetHashCode()
  fullName: Object.GetHashCode()
- uid: System.Object.GetType
  parent: System.Object
  isExternal: false
  name: GetType()
  nameWithType: Object.GetType()
  fullName: Object.GetType()
- uid: System.Object.MemberwiseClone
  parent: System.Object
  isExternal: false
  name: MemberwiseClone()
  nameWithType: Object.MemberwiseClone()
  fullName: Object.MemberwiseClone()
- uid: System.Object.ReferenceEquals(System.Object,System.Object)
  parent: System.Object
  isExternal: false
  name: ReferenceEquals(Object, Object)
  nameWithType: Object.ReferenceEquals(Object, Object)
  fullName: Object.ReferenceEquals(Object, Object)
- uid: System.Object.ToString
  parent: System.Object
  isExternal: false
  name: ToString()
  nameWithType: Object.ToString()
  fullName: Object.ToString()
