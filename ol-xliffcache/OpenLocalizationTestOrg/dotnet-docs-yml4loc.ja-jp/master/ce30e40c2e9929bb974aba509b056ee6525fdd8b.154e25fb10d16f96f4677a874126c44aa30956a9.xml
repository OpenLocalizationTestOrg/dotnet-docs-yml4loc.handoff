{"nodes":[{"content":"Specifies exception persistence.","nodes":[{"pos":[0,32],"content":"Specifies exception persistence.","nodes":[{"content":"Specifies exception persistence.","pos":[0,32]}]}],"pos":[586,619],"yaml":true},{"content":"Initializes a new instance of the <xref href=\"System.Activities.ExceptionPersistenceExtension\"></xref> class.","nodes":[{"pos":[0,109],"content":"Initializes a new instance of the <ph id=\"ph1\">&lt;xref href=\"System.Activities.ExceptionPersistenceExtension\"&gt;&lt;/xref&gt;</ph> class.","source":"Initializes a new instance of the <xref href=\"System.Activities.ExceptionPersistenceExtension\"></xref> class."}],"pos":[2084,2194],"yaml":true},{"content":"Gets or sets a value that indicates whether the exceptions will persist.","nodes":[{"pos":[0,72],"content":"Gets or sets a value that indicates whether the exceptions will persist.","nodes":[{"content":"Gets or sets a value that indicates whether the exceptions will persist.","pos":[0,72]}]}],"pos":[3405,3478],"yaml":true},{"content":"`True` if the exceptions will persist; otherwise, `false`.","nodes":[{"pos":[0,58],"content":"<ph id=\"ph1\">`True`</ph> if the exceptions will persist; otherwise, <ph id=\"ph2\">`false`</ph>.","source":"`True` if the exceptions will persist; otherwise, `false`."}],"pos":[3603,3664],"yaml":true}],"content":"### YamlMime:ManagedReference\nitems:\n- uid: System.Activities.ExceptionPersistenceExtension\n  commentId: T:System.Activities.ExceptionPersistenceExtension\n  id: ExceptionPersistenceExtension\n  children:\n  - System.Activities.ExceptionPersistenceExtension.#ctor\n  - System.Activities.ExceptionPersistenceExtension.PersistExceptions\n  langs:\n  - csharp\n  name: ExceptionPersistenceExtension\n  nameWithType: ExceptionPersistenceExtension\n  fullName: System.Activities.ExceptionPersistenceExtension\n  type: Class\n  assemblies:\n  - System.Activities\n  namespace: System.Activities\n  summary: Specifies exception persistence.\n  syntax:\n    content: public class ExceptionPersistenceExtension\n  inheritance:\n  - System.Object\n  implements: []\n  inheritedMembers:\n  - System.Object.Equals(System.Object)\n  - System.Object.Equals(System.Object,System.Object)\n  - System.Object.GetHashCode\n  - System.Object.GetType\n  - System.Object.MemberwiseClone\n  - System.Object.ReferenceEquals(System.Object,System.Object)\n  - System.Object.ToString\n  version:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Activities/ExceptionPersistenceExtension.xml\n  ms.technology:\n  - dotnet-standard\n  author: Erikre\n  ms.author: erikre\n  manager: erikre\n- uid: System.Activities.ExceptionPersistenceExtension.#ctor\n  commentId: M:System.Activities.ExceptionPersistenceExtension.#ctor\n  id: '#ctor'\n  parent: System.Activities.ExceptionPersistenceExtension\n  langs:\n  - csharp\n  name: ExceptionPersistenceExtension()\n  nameWithType: ExceptionPersistenceExtension.ExceptionPersistenceExtension()\n  fullName: ExceptionPersistenceExtension.ExceptionPersistenceExtension()\n  type: Constructor\n  assemblies:\n  - System.Activities\n  namespace: System.Activities\n  summary: Initializes a new instance of the <xref href=\"System.Activities.ExceptionPersistenceExtension\"></xref> class.\n  syntax:\n    content: public ExceptionPersistenceExtension ();\n    parameters: []\n  overload: System.Activities.ExceptionPersistenceExtension.#ctor*\n  exceptions: []\n  version:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Activities/ExceptionPersistenceExtension.xml\n  ms.technology:\n  - dotnet-standard\n  author: Erikre\n  ms.author: erikre\n  manager: erikre\n- uid: System.Activities.ExceptionPersistenceExtension.PersistExceptions\n  commentId: P:System.Activities.ExceptionPersistenceExtension.PersistExceptions\n  id: PersistExceptions\n  parent: System.Activities.ExceptionPersistenceExtension\n  langs:\n  - csharp\n  name: PersistExceptions\n  nameWithType: ExceptionPersistenceExtension.PersistExceptions\n  fullName: ExceptionPersistenceExtension.PersistExceptions\n  type: Property\n  assemblies:\n  - System.Activities\n  namespace: System.Activities\n  summary: Gets or sets a value that indicates whether the exceptions will persist.\n  syntax:\n    content: public bool PersistExceptions { get; set; }\n    return:\n      type: System.Boolean\n      description: '`True` if the exceptions will persist; otherwise, `false`.'\n  overload: System.Activities.ExceptionPersistenceExtension.PersistExceptions*\n  exceptions: []\n  version:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Activities/ExceptionPersistenceExtension.xml\n  ms.technology:\n  - dotnet-standard\n  author: Erikre\n  ms.author: erikre\n  manager: erikre\nreferences:\n- uid: System.Object\n  parent: System\n  isExternal: false\n  name: Object\n  nameWithType: Object\n  fullName: System.Object\n- uid: System.Activities.ExceptionPersistenceExtension.#ctor\n  parent: System.Activities.ExceptionPersistenceExtension\n  isExternal: false\n  name: ExceptionPersistenceExtension()\n  nameWithType: ExceptionPersistenceExtension.ExceptionPersistenceExtension()\n  fullName: ExceptionPersistenceExtension.ExceptionPersistenceExtension()\n- uid: System.Activities.ExceptionPersistenceExtension.PersistExceptions\n  parent: System.Activities.ExceptionPersistenceExtension\n  isExternal: false\n  name: PersistExceptions\n  nameWithType: ExceptionPersistenceExtension.PersistExceptions\n  fullName: ExceptionPersistenceExtension.PersistExceptions\n- uid: System.Boolean\n  parent: System\n  isExternal: false\n  name: Boolean\n  nameWithType: Boolean\n  fullName: System.Boolean\n- uid: System.Activities.ExceptionPersistenceExtension.#ctor*\n  parent: System.Activities.ExceptionPersistenceExtension\n  isExternal: false\n  name: ExceptionPersistenceExtension\n  nameWithType: ExceptionPersistenceExtension.ExceptionPersistenceExtension\n  fullName: ExceptionPersistenceExtension.ExceptionPersistenceExtension\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Activities/ExceptionPersistenceExtension.xml\n- uid: System.Activities.ExceptionPersistenceExtension.PersistExceptions*\n  parent: System.Activities.ExceptionPersistenceExtension\n  isExternal: false\n  name: PersistExceptions\n  nameWithType: ExceptionPersistenceExtension.PersistExceptions\n  fullName: ExceptionPersistenceExtension.PersistExceptions\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Activities/ExceptionPersistenceExtension.xml\n- uid: System.Object.Equals(System.Object)\n  parent: System.Object\n  isExternal: false\n  name: Equals(Object)\n  nameWithType: Object.Equals(Object)\n  fullName: Object.Equals(Object)\n- uid: System.Object.Equals(System.Object,System.Object)\n  parent: System.Object\n  isExternal: false\n  name: Equals(Object, Object)\n  nameWithType: Object.Equals(Object, Object)\n  fullName: Object.Equals(Object, Object)\n- uid: System.Object.GetHashCode\n  parent: System.Object\n  isExternal: false\n  name: GetHashCode()\n  nameWithType: Object.GetHashCode()\n  fullName: Object.GetHashCode()\n- uid: System.Object.GetType\n  parent: System.Object\n  isExternal: false\n  name: GetType()\n  nameWithType: Object.GetType()\n  fullName: Object.GetType()\n- uid: System.Object.MemberwiseClone\n  parent: System.Object\n  isExternal: false\n  name: MemberwiseClone()\n  nameWithType: Object.MemberwiseClone()\n  fullName: Object.MemberwiseClone()\n- uid: System.Object.ReferenceEquals(System.Object,System.Object)\n  parent: System.Object\n  isExternal: false\n  name: ReferenceEquals(Object, Object)\n  nameWithType: Object.ReferenceEquals(Object, Object)\n  fullName: Object.ReferenceEquals(Object, Object)\n- uid: System.Object.ToString\n  parent: System.Object\n  isExternal: false\n  name: ToString()\n  nameWithType: Object.ToString()\n  fullName: Object.ToString()\n"}