{"nodes":[{"content":"The <xref href=\"System.DirectoryServices.ActiveDirectory.Domain\"></xref> class represents an Active Directory domain.","nodes":[{"pos":[0,117],"content":"The <ph id=\"ph1\">&lt;xref href=\"System.DirectoryServices.ActiveDirectory.Domain\"&gt;&lt;/xref&gt;</ph> class represents an Active Directory domain.","source":"The <xref href=\"System.DirectoryServices.ActiveDirectory.Domain\"></xref> class represents an Active Directory domain."}],"pos":[4385,4503],"yaml":true},{"content":"Gets the domains that are children of this domain.","nodes":[{"pos":[0,50],"content":"Gets the domains that are children of this domain.","nodes":[{"content":"Gets the domains that are children of this domain.","pos":[0,50]}]}],"pos":[6309,6360],"yaml":true},{"content":"An <xref href=\"System.DirectoryServices.ActiveDirectory.DomainCollection\"></xref> object that contains the child domains.","nodes":[{"pos":[0,121],"content":"An <ph id=\"ph1\">&lt;xref href=\"System.DirectoryServices.ActiveDirectory.DomainCollection\"&gt;&lt;/xref&gt;</ph> object that contains the child domains.","source":"An <xref href=\"System.DirectoryServices.ActiveDirectory.DomainCollection\"></xref> object that contains the child domains."}],"pos":[6567,6689],"yaml":true},{"content":"The object has been disposed.","nodes":[{"pos":[0,29],"content":"The object has been disposed.","nodes":[{"content":"The object has been disposed.","pos":[0,29]}]}],"pos":[6879,6909],"yaml":true},{"content":"Creates the local side of a trust relationship with the specified domain.","nodes":[{"pos":[0,73],"content":"Creates the local side of a trust relationship with the specified domain.","nodes":[{"content":"Creates the local side of a trust relationship with the specified domain.","pos":[0,73]}]}],"pos":[8394,8468],"yaml":true},{"content":"This method creates one side of a trust relationship. The trust is not established until both sides of the trust have been created.  \n  \n The `trustPassword` parameter associates a password with the created trust. When the other side of the trust is created, the same password is provided and the two local trusts are then bound to each other.  \n  \n To programmatically create both sides of a trust relationship in a single method call, use the <xref:System.DirectoryServices.ActiveDirectory.Domain.CreateTrustRelationship%2A?displayProperty=fullName> method.","nodes":[{"pos":[0,131],"content":"This method creates one side of a trust relationship. The trust is not established until both sides of the trust have been created.","nodes":[{"content":"This method creates one side of a trust relationship. The trust is not established until both sides of the trust have been created.","pos":[0,131],"nodes":[{"content":"This method creates one side of a trust relationship.","pos":[0,53]},{"content":"The trust is not established until both sides of the trust have been created.","pos":[54,131]}]}]},{"pos":[138,343],"content":"The `trustPassword` parameter associates a password with the created trust. When the other side of the trust is created, the same password is provided and the two local trusts are then bound to each other.","nodes":[{"content":"The <ph id=\"ph1\">`trustPassword`</ph> parameter associates a password with the created trust.","pos":[0,75],"source":"The `trustPassword` parameter associates a password with the created trust."},{"content":"When the other side of the trust is created, the same password is provided and the two local trusts are then bound to each other.","pos":[76,205]}]},{"pos":[350,559],"content":"To programmatically create both sides of a trust relationship in a single method call, use the <xref:System.DirectoryServices.ActiveDirectory.Domain.CreateTrustRelationship%2A?displayProperty=fullName> method.","nodes":[{"content":"To programmatically create both sides of a trust relationship in a single method call, use the <ph id=\"ph1\">&lt;xref:System.DirectoryServices.ActiveDirectory.Domain.CreateTrustRelationship%2A?displayProperty=fullName&gt;</ph> method.","pos":[0,209],"source":"To programmatically create both sides of a trust relationship in a single method call, use the <xref:System.DirectoryServices.ActiveDirectory.Domain.CreateTrustRelationship%2A?displayProperty=fullName> method."}]}],"pos":[8479,9045],"yaml":true,"extradata":"MT"},{"content":"The DNS name of the domain that the trust is created with.","nodes":[{"pos":[0,58],"content":"The DNS name of the domain that the trust is created with.","nodes":[{"content":"The DNS name of the domain that the trust is created with.","pos":[0,58]}]}],"pos":[9319,9378],"yaml":true},{"content":"One of the <xref href=\"System.DirectoryServices.ActiveDirectory.TrustDirection\"></xref> members that determines the direction of the trust, relative to this domain.","nodes":[{"pos":[0,164],"content":"One of the <ph id=\"ph1\">&lt;xref href=\"System.DirectoryServices.ActiveDirectory.TrustDirection\"&gt;&lt;/xref&gt;</ph> members that determines the direction of the trust, relative to this domain.","source":"One of the <xref href=\"System.DirectoryServices.ActiveDirectory.TrustDirection\"></xref> members that determines the direction of the trust, relative to this domain."}],"pos":[9485,9650],"yaml":true},{"content":"The password for the trust.","nodes":[{"pos":[0,27],"content":"The password for the trust.","nodes":[{"content":"The password for the trust.","pos":[0,27]}]}],"pos":[9719,9747],"yaml":true},{"content":"The trust relationship already exists.","nodes":[{"pos":[0,38],"content":"The trust relationship already exists.","nodes":[{"content":"The trust relationship already exists.","pos":[0,38]}]}],"pos":[10057,10096],"yaml":true},{"content":"A call to the underlying directory service resulted in an error.","nodes":[{"pos":[0,64],"content":"A call to the underlying directory service resulted in an error.","nodes":[{"content":"A call to the underlying directory service resulted in an error.","pos":[0,64]}]}],"pos":[10290,10355],"yaml":true},{"content":"The target server is either busy or unavailable.","nodes":[{"pos":[0,48],"content":"The target server is either busy or unavailable.","nodes":[{"content":"The target server is either busy or unavailable.","pos":[0,48]}]}],"pos":[10551,10600],"yaml":true},{"content":"<code>targetDomainName</code> or <code>trustPassword</code> is empty.","nodes":[{"pos":[0,69],"content":"<ph id=\"ph1\">&lt;code&gt;targetDomainName&lt;/code&gt;</ph> or <ph id=\"ph2\">&lt;code&gt;trustPassword&lt;/code&gt;</ph> is empty.","source":"<code>targetDomainName</code> or <code>trustPassword</code> is empty."}],"pos":[10694,10764],"yaml":true},{"content":"<code>targetDomainName</code> or <code>trustPassword</code> is `null`.","nodes":[{"pos":[0,70],"content":"<ph id=\"ph1\">&lt;code&gt;targetDomainName&lt;/code&gt;</ph> or <ph id=\"ph2\">&lt;code&gt;trustPassword&lt;/code&gt;</ph> is <ph id=\"ph3\">`null`</ph>.","source":"<code>targetDomainName</code> or <code>trustPassword</code> is `null`."}],"pos":[10866,10937],"yaml":true},{"content":"<code>direction</code> is not a valid <xref href=\"System.DirectoryServices.ActiveDirectory.TrustDirection\"></xref> value.","nodes":[{"pos":[0,121],"content":"<ph id=\"ph1\">&lt;code&gt;direction&lt;/code&gt;</ph> is not a valid <ph id=\"ph2\">&lt;xref href=\"System.DirectoryServices.ActiveDirectory.TrustDirection\"&gt;&lt;/xref&gt;</ph> value.","source":"<code>direction</code> is not a valid <xref href=\"System.DirectoryServices.ActiveDirectory.TrustDirection\"></xref> value."}],"pos":[11083,11205],"yaml":true},{"content":"The object has been disposed.","nodes":[{"pos":[0,29],"content":"The object has been disposed.","nodes":[{"content":"The object has been disposed.","pos":[0,29]}]}],"pos":[11311,11341],"yaml":true},{"content":"The specified account does not have permission to perform this operation.","nodes":[{"pos":[0,73],"content":"The specified account does not have permission to perform this operation.","nodes":[{"content":"The specified account does not have permission to perform this operation.","pos":[0,73]}]}],"pos":[11455,11529],"yaml":true},{"content":"Creates both sides of a trust relationship with the specified domain.","nodes":[{"pos":[0,69],"content":"Creates both sides of a trust relationship with the specified domain.","nodes":[{"content":"Creates both sides of a trust relationship with the specified domain.","pos":[0,69]}]}],"pos":[12984,13054],"yaml":true},{"content":"This method creates both sides of a trust relationship with a single method call. The <xref:System.DirectoryServices.ActiveDirectory.Domain.CreateLocalSideOfTrustRelationship%2A?displayProperty=fullName> method is used to create only one side of a trust.","nodes":[{"pos":[0,254],"content":"This method creates both sides of a trust relationship with a single method call. The <xref:System.DirectoryServices.ActiveDirectory.Domain.CreateLocalSideOfTrustRelationship%2A?displayProperty=fullName> method is used to create only one side of a trust.","nodes":[{"content":"This method creates both sides of a trust relationship with a single method call. The <xref:System.DirectoryServices.ActiveDirectory.Domain.CreateLocalSideOfTrustRelationship%2A?displayProperty=fullName> method is used to create only one side of a trust.","pos":[0,254],"nodes":[{"content":"This method creates both sides of a trust relationship with a single method call.","pos":[0,81]},{"content":"The <ph id=\"ph1\">&lt;xref:System.DirectoryServices.ActiveDirectory.Domain.CreateLocalSideOfTrustRelationship%2A?displayProperty=fullName&gt;</ph> method is used to create only one side of a trust.","pos":[82,254],"source":" The <xref:System.DirectoryServices.ActiveDirectory.Domain.CreateLocalSideOfTrustRelationship%2A?displayProperty=fullName> method is used to create only one side of a trust."}]}]}],"pos":[13065,13320],"yaml":true,"extradata":"MT"},{"content":"A <xref href=\"System.DirectoryServices.ActiveDirectory.Domain\"></xref> object that represents the domain that the trust is being created with.","nodes":[{"pos":[0,142],"content":"A <ph id=\"ph1\">&lt;xref href=\"System.DirectoryServices.ActiveDirectory.Domain\"&gt;&lt;/xref&gt;</ph> object that represents the domain that the trust is being created with.","source":"A <xref href=\"System.DirectoryServices.ActiveDirectory.Domain\"></xref> object that represents the domain that the trust is being created with."}],"pos":[13628,13771],"yaml":true},{"content":"One of the <xref href=\"System.DirectoryServices.ActiveDirectory.TrustDirection\"></xref> members that determines the direction of the trust, relative to this domain.","nodes":[{"pos":[0,164],"content":"One of the <ph id=\"ph1\">&lt;xref href=\"System.DirectoryServices.ActiveDirectory.TrustDirection\"&gt;&lt;/xref&gt;</ph> members that determines the direction of the trust, relative to this domain.","source":"One of the <xref href=\"System.DirectoryServices.ActiveDirectory.TrustDirection\"></xref> members that determines the direction of the trust, relative to this domain."}],"pos":[13878,14043],"yaml":true},{"content":"The trust relationship already exists.","nodes":[{"pos":[0,38],"content":"The trust relationship already exists.","nodes":[{"content":"The trust relationship already exists.","pos":[0,38]}]}],"pos":[14342,14381],"yaml":true},{"content":"A call to the underlying directory service resulted in an error.","nodes":[{"pos":[0,64],"content":"A call to the underlying directory service resulted in an error.","nodes":[{"content":"A call to the underlying directory service resulted in an error.","pos":[0,64]}]}],"pos":[14575,14640],"yaml":true},{"content":"The target server is either busy or unavailable.","nodes":[{"pos":[0,48],"content":"The target server is either busy or unavailable.","nodes":[{"content":"The target server is either busy or unavailable.","pos":[0,48]}]}],"pos":[14836,14885],"yaml":true},{"content":"<code>targetDomain</code> is `null`.","nodes":[{"pos":[0,36],"content":"<ph id=\"ph1\">&lt;code&gt;targetDomain&lt;/code&gt;</ph> is <ph id=\"ph2\">`null`</ph>.","source":"<code>targetDomain</code> is `null`."}],"pos":[14987,15024],"yaml":true},{"content":"<code>direction</code> is not a valid <xref href=\"System.DirectoryServices.ActiveDirectory.TrustDirection\"></xref> value.","nodes":[{"pos":[0,121],"content":"<ph id=\"ph1\">&lt;code&gt;direction&lt;/code&gt;</ph> is not a valid <ph id=\"ph2\">&lt;xref href=\"System.DirectoryServices.ActiveDirectory.TrustDirection\"&gt;&lt;/xref&gt;</ph> value.","source":"<code>direction</code> is not a valid <xref href=\"System.DirectoryServices.ActiveDirectory.TrustDirection\"></xref> value."}],"pos":[15170,15292],"yaml":true},{"content":"The object has been disposed.","nodes":[{"pos":[0,29],"content":"The object has been disposed.","nodes":[{"content":"The object has been disposed.","pos":[0,29]}]}],"pos":[15398,15428],"yaml":true},{"content":"The specified account does not have permission to perform this operation.","nodes":[{"pos":[0,73],"content":"The specified account does not have permission to perform this operation.","nodes":[{"content":"The specified account does not have permission to perform this operation.","pos":[0,73]}]}],"pos":[15542,15616],"yaml":true},{"content":"Deletes the local side of a trust relationship.","nodes":[{"pos":[0,47],"content":"Deletes the local side of a trust relationship.","nodes":[{"content":"Deletes the local side of a trust relationship.","pos":[0,47]}]}],"pos":[16819,16867],"yaml":true},{"content":"When one side of a trust relationship is deleted, the trust longer exists.  \n  \n To delete both sides of a trust relationship with one method call, use the <xref:System.DirectoryServices.ActiveDirectory.Domain.DeleteTrustRelationship%2A?displayProperty=fullName> method.","nodes":[{"pos":[0,74],"content":"When one side of a trust relationship is deleted, the trust longer exists.","nodes":[{"content":"When one side of a trust relationship is deleted, the trust longer exists.","pos":[0,74]}]},{"pos":[81,270],"content":"To delete both sides of a trust relationship with one method call, use the <xref:System.DirectoryServices.ActiveDirectory.Domain.DeleteTrustRelationship%2A?displayProperty=fullName> method.","nodes":[{"content":"To delete both sides of a trust relationship with one method call, use the <ph id=\"ph1\">&lt;xref:System.DirectoryServices.ActiveDirectory.Domain.DeleteTrustRelationship%2A?displayProperty=fullName&gt;</ph> method.","pos":[0,189],"source":"To delete both sides of a trust relationship with one method call, use the <xref:System.DirectoryServices.ActiveDirectory.Domain.DeleteTrustRelationship%2A?displayProperty=fullName> method."}]}],"pos":[16878,17153],"yaml":true,"extradata":"MT"},{"content":"The DNS name of the domain that the trust exists with.","nodes":[{"pos":[0,54],"content":"The DNS name of the domain that the trust exists with.","nodes":[{"content":"The DNS name of the domain that the trust exists with.","pos":[0,54]}]}],"pos":[17338,17393],"yaml":true},{"content":"There is no trust relationship with the <xref href=\"System.DirectoryServices.ActiveDirectory.Domain\"></xref> that is specified by the <code>targetDomainName</code> parameter.","nodes":[{"pos":[0,174],"content":"There is no trust relationship with the <ph id=\"ph1\">&lt;xref href=\"System.DirectoryServices.ActiveDirectory.Domain\"&gt;&lt;/xref&gt;</ph> that is specified by the <bpt id=\"p1\">&lt;code&gt;</bpt><ph id=\"ph2\">targetDomainName</ph><ept id=\"p1\">&lt;/code&gt;</ept> parameter.","source":"There is no trust relationship with the <xref href=\"System.DirectoryServices.ActiveDirectory.Domain\"></xref> that is specified by the <code>targetDomainName</code> parameter."}],"pos":[17707,17882],"yaml":true},{"content":"A call to the underlying directory service resulted in an error.","nodes":[{"pos":[0,64],"content":"A call to the underlying directory service resulted in an error.","nodes":[{"content":"A call to the underlying directory service resulted in an error.","pos":[0,64]}]}],"pos":[18076,18141],"yaml":true},{"content":"The target server is either busy or unavailable.","nodes":[{"pos":[0,48],"content":"The target server is either busy or unavailable.","nodes":[{"content":"The target server is either busy or unavailable.","pos":[0,48]}]}],"pos":[18337,18386],"yaml":true},{"content":"<code>targetDomainName</code> is an empty string.","nodes":[{"pos":[0,49],"content":"<ph id=\"ph1\">&lt;code&gt;targetDomainName&lt;/code&gt;</ph> is an empty string.","source":"<code>targetDomainName</code> is an empty string."}],"pos":[18480,18530],"yaml":true},{"content":"<code>targetDomainName</code> is `null`.","nodes":[{"pos":[0,40],"content":"<ph id=\"ph1\">&lt;code&gt;targetDomainName&lt;/code&gt;</ph> is <ph id=\"ph2\">`null`</ph>.","source":"<code>targetDomainName</code> is `null`."}],"pos":[18632,18673],"yaml":true},{"content":"The object has been disposed.","nodes":[{"pos":[0,29],"content":"The object has been disposed.","nodes":[{"content":"The object has been disposed.","pos":[0,29]}]}],"pos":[18779,18809],"yaml":true},{"content":"The specified account does not have permission to perform this operation.","nodes":[{"pos":[0,73],"content":"The specified account does not have permission to perform this operation.","nodes":[{"content":"The specified account does not have permission to perform this operation.","pos":[0,73]}]}],"pos":[18923,18997],"yaml":true},{"content":"Deletes both sides of a trust relationship.","nodes":[{"pos":[0,43],"content":"Deletes both sides of a trust relationship.","nodes":[{"content":"Deletes both sides of a trust relationship.","pos":[0,43]}]}],"pos":[20236,20280],"yaml":true},{"content":"To delete only one side of a trust relationship, use the <xref:System.DirectoryServices.ActiveDirectory.Domain.DeleteLocalSideOfTrustRelationship%2A?displayProperty=fullName> method.","nodes":[{"pos":[0,182],"content":"To delete only one side of a trust relationship, use the <xref:System.DirectoryServices.ActiveDirectory.Domain.DeleteLocalSideOfTrustRelationship%2A?displayProperty=fullName> method.","nodes":[{"content":"To delete only one side of a trust relationship, use the <ph id=\"ph1\">&lt;xref:System.DirectoryServices.ActiveDirectory.Domain.DeleteLocalSideOfTrustRelationship%2A?displayProperty=fullName&gt;</ph> method.","pos":[0,182],"source":"To delete only one side of a trust relationship, use the <xref:System.DirectoryServices.ActiveDirectory.Domain.DeleteLocalSideOfTrustRelationship%2A?displayProperty=fullName> method."}]}],"pos":[20291,20474],"yaml":true,"extradata":"MT"},{"content":"A <xref href=\"System.DirectoryServices.ActiveDirectory.Domain\"></xref> object that represents the domain that the trust exists with.","nodes":[{"pos":[0,132],"content":"A <ph id=\"ph1\">&lt;xref href=\"System.DirectoryServices.ActiveDirectory.Domain\"&gt;&lt;/xref&gt;</ph> object that represents the domain that the trust exists with.","source":"A <xref href=\"System.DirectoryServices.ActiveDirectory.Domain\"></xref> object that represents the domain that the trust exists with."}],"pos":[20715,20848],"yaml":true},{"content":"There is no trust relationship with the specified <xref href=\"System.DirectoryServices.ActiveDirectory.Domain\"></xref>.","nodes":[{"pos":[0,119],"content":"There is no trust relationship with the specified <ph id=\"ph1\">&lt;xref href=\"System.DirectoryServices.ActiveDirectory.Domain\"&gt;&lt;/xref&gt;</ph>.","source":"There is no trust relationship with the specified <xref href=\"System.DirectoryServices.ActiveDirectory.Domain\"></xref>."}],"pos":[21151,21271],"yaml":true},{"content":"A call to the underlying directory service resulted in an error.","nodes":[{"pos":[0,64],"content":"A call to the underlying directory service resulted in an error.","nodes":[{"content":"A call to the underlying directory service resulted in an error.","pos":[0,64]}]}],"pos":[21465,21530],"yaml":true},{"content":"The target server is either busy or unavailable.","nodes":[{"pos":[0,48],"content":"The target server is either busy or unavailable.","nodes":[{"content":"The target server is either busy or unavailable.","pos":[0,48]}]}],"pos":[21726,21775],"yaml":true},{"content":"<code>targetDomain</code> is `null`.","nodes":[{"pos":[0,36],"content":"<ph id=\"ph1\">&lt;code&gt;targetDomain&lt;/code&gt;</ph> is <ph id=\"ph2\">`null`</ph>.","source":"<code>targetDomain</code> is `null`."}],"pos":[21877,21914],"yaml":true},{"content":"The object has been disposed.","nodes":[{"pos":[0,29],"content":"The object has been disposed.","nodes":[{"content":"The object has been disposed.","pos":[0,29]}]}],"pos":[22020,22050],"yaml":true},{"content":"The specified account does not have permission to perform this operation.","nodes":[{"pos":[0,73],"content":"The specified account does not have permission to perform this operation.","nodes":[{"content":"The specified account does not have permission to perform this operation.","pos":[0,73]}]}],"pos":[22164,22238],"yaml":true},{"content":"Gets the domain controllers in this domain.","nodes":[{"pos":[0,43],"content":"Gets the domain controllers in this domain.","nodes":[{"content":"Gets the domain controllers in this domain.","pos":[0,43]}]}],"pos":[23272,23316],"yaml":true},{"content":"A <xref href=\"System.DirectoryServices.ActiveDirectory.DomainControllerCollection\"></xref> object that contains the domain controllers in this domain.","nodes":[{"pos":[0,150],"content":"A <ph id=\"ph1\">&lt;xref href=\"System.DirectoryServices.ActiveDirectory.DomainControllerCollection\"&gt;&lt;/xref&gt;</ph> object that contains the domain controllers in this domain.","source":"A <xref href=\"System.DirectoryServices.ActiveDirectory.DomainControllerCollection\"></xref> object that contains the domain controllers in this domain."}],"pos":[23552,23703],"yaml":true},{"content":"The object has been disposed.","nodes":[{"pos":[0,29],"content":"The object has been disposed.","nodes":[{"content":"The object has been disposed.","pos":[0,29]}]}],"pos":[23902,23932],"yaml":true},{"content":"Gets the mode that this domain is operating in.","nodes":[{"pos":[0,47],"content":"Gets the mode that this domain is operating in.","nodes":[{"content":"Gets the mode that this domain is operating in.","pos":[0,47]}]}],"pos":[24924,24972],"yaml":true},{"content":"One of the <xref href=\"System.DirectoryServices.ActiveDirectory.DomainMode\"></xref> values that indicates the mode that this domain is operating in.","nodes":[{"pos":[0,148],"content":"One of the <ph id=\"ph1\">&lt;xref href=\"System.DirectoryServices.ActiveDirectory.DomainMode\"&gt;&lt;/xref&gt;</ph> values that indicates the mode that this domain is operating in.","source":"One of the <xref href=\"System.DirectoryServices.ActiveDirectory.DomainMode\"></xref> values that indicates the mode that this domain is operating in."}],"pos":[25169,25318],"yaml":true},{"content":"The object has been disposed.","nodes":[{"pos":[0,29],"content":"The object has been disposed.","nodes":[{"content":"The object has been disposed.","pos":[0,29]}]}],"pos":[25510,25540],"yaml":true},{"content":"Gets the mode level that this domain is operating in.","nodes":[{"pos":[0,53],"content":"Gets the mode level that this domain is operating in.","nodes":[{"content":"Gets the mode level that this domain is operating in.","pos":[0,53]}]}],"pos":[26562,26616],"yaml":true},{"content":"The domain mode level.","nodes":[{"pos":[0,22],"content":"The domain mode level.","nodes":[{"content":"The domain mode level.","pos":[0,22]}]}],"pos":[26731,26754],"yaml":true},{"content":"Finds all of the discoverable domain controllers in this domain that are also in the specified site.","nodes":[{"pos":[0,100],"content":"Finds all of the discoverable domain controllers in this domain that are also in the specified site.","nodes":[{"content":"Finds all of the discoverable domain controllers in this domain that are also in the specified site.","pos":[0,100]}]}],"pos":[27929,28030],"yaml":true},{"content":"You can find discoverable domain controllers by querying DNS SRV records.  If a domain controller does not register an SRV record for the specified site, it will not be returned by this method, even if the domain controller is physically located within that site.  \n  \n All domain controllers that register an SRV record for the specified site will be returned by this method, even if they are not physically located within that site.","nodes":[{"pos":[0,263],"content":"You can find discoverable domain controllers by querying DNS SRV records.  If a domain controller does not register an SRV record for the specified site, it will not be returned by this method, even if the domain controller is physically located within that site.","nodes":[{"content":"You can find discoverable domain controllers by querying DNS SRV records.  If a domain controller does not register an SRV record for the specified site, it will not be returned by this method, even if the domain controller is physically located within that site.","pos":[0,263],"nodes":[{"content":"You can find discoverable domain controllers by querying DNS SRV records.","pos":[0,73]},{"content":"If a domain controller does not register an SRV record for the specified site, it will not be returned by this method, even if the domain controller is physically located within that site.","pos":[75,263]}]}]},{"pos":[270,434],"content":"All domain controllers that register an SRV record for the specified site will be returned by this method, even if they are not physically located within that site.","nodes":[{"content":"All domain controllers that register an SRV record for the specified site will be returned by this method, even if they are not physically located within that site.","pos":[0,164]}]}],"pos":[28041,28480],"yaml":true,"extradata":"MT"},{"content":"The name of the site to search for the domain controllers.","nodes":[{"pos":[0,58],"content":"The name of the site to search for the domain controllers.","nodes":[{"content":"The name of the site to search for the domain controllers.","pos":[0,58]}]}],"pos":[28714,28773],"yaml":true},{"content":"A <xref href=\"System.DirectoryServices.ActiveDirectory.DomainControllerCollection\"></xref> that contains the domain controller objects that were found by this method.","nodes":[{"pos":[0,166],"content":"A <ph id=\"ph1\">&lt;xref href=\"System.DirectoryServices.ActiveDirectory.DomainControllerCollection\"&gt;&lt;/xref&gt;</ph> that contains the domain controller objects that were found by this method.","source":"A <xref href=\"System.DirectoryServices.ActiveDirectory.DomainControllerCollection\"></xref> that contains the domain controller objects that were found by this method."}],"pos":[28884,29051],"yaml":true},{"content":"The target server is either busy or unavailable.","nodes":[{"pos":[0,48],"content":"The target server is either busy or unavailable.","nodes":[{"content":"The target server is either busy or unavailable.","pos":[0,48]}]}],"pos":[29359,29408],"yaml":true},{"content":"<code>siteName</code> is an empty string.","nodes":[{"pos":[0,41],"content":"<ph id=\"ph1\">&lt;code&gt;siteName&lt;/code&gt;</ph> is an empty string.","source":"<code>siteName</code> is an empty string."}],"pos":[29502,29544],"yaml":true},{"content":"<code>siteName</code> is `null`.","nodes":[{"pos":[0,32],"content":"<ph id=\"ph1\">&lt;code&gt;siteName&lt;/code&gt;</ph> is <ph id=\"ph2\">`null`</ph>.","source":"<code>siteName</code> is `null`."}],"pos":[29646,29679],"yaml":true},{"content":"The object has been disposed.","nodes":[{"pos":[0,29],"content":"The object has been disposed.","nodes":[{"content":"The object has been disposed.","pos":[0,29]}]}],"pos":[29785,29815],"yaml":true},{"content":"Finds all of the discoverable domain controllers in this domain.","nodes":[{"pos":[0,64],"content":"Finds all of the discoverable domain controllers in this domain.","nodes":[{"content":"Finds all of the discoverable domain controllers in this domain.","pos":[0,64]}]}],"pos":[30967,31032],"yaml":true},{"content":"You can find discoverable domain controllers by querying DNS SRV records. Only those domain controllers that register the generic, non-site-specific, domain controller SRV record will be returned by this method.","nodes":[{"pos":[0,211],"content":"You can find discoverable domain controllers by querying DNS SRV records. Only those domain controllers that register the generic, non-site-specific, domain controller SRV record will be returned by this method.","nodes":[{"content":"You can find discoverable domain controllers by querying DNS SRV records. Only those domain controllers that register the generic, non-site-specific, domain controller SRV record will be returned by this method.","pos":[0,211],"nodes":[{"content":"You can find discoverable domain controllers by querying DNS SRV records.","pos":[0,73]},{"content":"Only those domain controllers that register the generic, non-site-specific, domain controller SRV record will be returned by this method.","pos":[74,211]}]}]}],"pos":[31043,31255],"yaml":true,"extradata":"MT"},{"content":"A <xref href=\"System.DirectoryServices.ActiveDirectory.DomainControllerCollection\"></xref> that contains the domain controller objects that were found by this method.","nodes":[{"pos":[0,166],"content":"A <ph id=\"ph1\">&lt;xref href=\"System.DirectoryServices.ActiveDirectory.DomainControllerCollection\"&gt;&lt;/xref&gt;</ph> that contains the domain controller objects that were found by this method.","source":"A <xref href=\"System.DirectoryServices.ActiveDirectory.DomainControllerCollection\"></xref> that contains the domain controller objects that were found by this method."}],"pos":[31524,31691],"yaml":true},{"content":"The target server is either busy or unavailable.","nodes":[{"pos":[0,48],"content":"The target server is either busy or unavailable.","nodes":[{"content":"The target server is either busy or unavailable.","pos":[0,48]}]}],"pos":[31999,32048],"yaml":true},{"content":"The object has been disposed.","nodes":[{"pos":[0,29],"content":"The object has been disposed.","nodes":[{"content":"The object has been disposed.","pos":[0,29]}]}],"pos":[32154,32184],"yaml":true},{"content":"Finds all of the domain controllers in this domain.","nodes":[{"pos":[0,51],"content":"Finds all of the domain controllers in this domain.","nodes":[{"content":"Finds all of the domain controllers in this domain.","pos":[0,51]}]}],"pos":[33264,33316],"yaml":true},{"content":"A <xref href=\"System.DirectoryServices.ActiveDirectory.DomainControllerCollection\"></xref> that contains the domain controller objects that were found by this method.","nodes":[{"pos":[0,166],"content":"A <ph id=\"ph1\">&lt;xref href=\"System.DirectoryServices.ActiveDirectory.DomainControllerCollection\"&gt;&lt;/xref&gt;</ph> that contains the domain controller objects that were found by this method.","source":"A <xref href=\"System.DirectoryServices.ActiveDirectory.DomainControllerCollection\"></xref> that contains the domain controller objects that were found by this method."}],"pos":[33573,33740],"yaml":true},{"content":"The target server is either busy or unavailable.","nodes":[{"pos":[0,48],"content":"The target server is either busy or unavailable.","nodes":[{"content":"The target server is either busy or unavailable.","pos":[0,48]}]}],"pos":[34036,34085],"yaml":true},{"content":"The object has been disposed.","nodes":[{"pos":[0,29],"content":"The object has been disposed.","nodes":[{"content":"The object has been disposed.","pos":[0,29]}]}],"pos":[34191,34221],"yaml":true},{"content":"Finds all of the domain controllers in this domain that are also in the specified site.","nodes":[{"pos":[0,87],"content":"Finds all of the domain controllers in this domain that are also in the specified site.","nodes":[{"content":"Finds all of the domain controllers in this domain that are also in the specified site.","pos":[0,87]}]}],"pos":[35364,35452],"yaml":true},{"content":"The name of the site to search for the domain controllers.","nodes":[{"pos":[0,58],"content":"The name of the site to search for the domain controllers.","nodes":[{"content":"The name of the site to search for the domain controllers.","pos":[0,58]}]}],"pos":[35674,35733],"yaml":true},{"content":"A <xref href=\"System.DirectoryServices.ActiveDirectory.DomainControllerCollection\"></xref> that contains the domain controller objects that were found by this method.","nodes":[{"pos":[0,166],"content":"A <ph id=\"ph1\">&lt;xref href=\"System.DirectoryServices.ActiveDirectory.DomainControllerCollection\"&gt;&lt;/xref&gt;</ph> that contains the domain controller objects that were found by this method.","source":"A <xref href=\"System.DirectoryServices.ActiveDirectory.DomainControllerCollection\"></xref> that contains the domain controller objects that were found by this method."}],"pos":[35844,36011],"yaml":true},{"content":"The target server is either busy or unavailable.","nodes":[{"pos":[0,48],"content":"The target server is either busy or unavailable.","nodes":[{"content":"The target server is either busy or unavailable.","pos":[0,48]}]}],"pos":[36307,36356],"yaml":true},{"content":"<code>siteName</code> is an empty string.","nodes":[{"pos":[0,41],"content":"<ph id=\"ph1\">&lt;code&gt;siteName&lt;/code&gt;</ph> is an empty string.","source":"<code>siteName</code> is an empty string."}],"pos":[36450,36492],"yaml":true},{"content":"<code>siteName</code> is `null`.","nodes":[{"pos":[0,32],"content":"<ph id=\"ph1\">&lt;code&gt;siteName&lt;/code&gt;</ph> is <ph id=\"ph2\">`null`</ph>.","source":"<code>siteName</code> is `null`."}],"pos":[36594,36627],"yaml":true},{"content":"The object has been disposed.","nodes":[{"pos":[0,29],"content":"The object has been disposed.","nodes":[{"content":"The object has been disposed.","pos":[0,29]}]}],"pos":[36733,36763],"yaml":true},{"content":"Finds any domain controller in this domain.","nodes":[{"pos":[0,43],"content":"Finds any domain controller in this domain.","nodes":[{"content":"Finds any domain controller in this domain.","pos":[0,43]}]}],"pos":[37819,37863],"yaml":true},{"content":"This method finds any domain controller in the domain. There is no guarantee that the same domain controller will be found by another call to this method.","nodes":[{"pos":[0,154],"content":"This method finds any domain controller in the domain. There is no guarantee that the same domain controller will be found by another call to this method.","nodes":[{"content":"This method finds any domain controller in the domain. There is no guarantee that the same domain controller will be found by another call to this method.","pos":[0,154],"nodes":[{"content":"This method finds any domain controller in the domain.","pos":[0,54]},{"content":"There is no guarantee that the same domain controller will be found by another call to this method.","pos":[55,154]}]}]}],"pos":[37874,38029],"yaml":true,"extradata":"MT"},{"content":"A <xref href=\"System.DirectoryServices.ActiveDirectory.DomainController\"></xref> that represents the domain controller that is found by this method.","nodes":[{"pos":[0,148],"content":"A <ph id=\"ph1\">&lt;xref href=\"System.DirectoryServices.ActiveDirectory.DomainController\"&gt;&lt;/xref&gt;</ph> that represents the domain controller that is found by this method.","source":"A <xref href=\"System.DirectoryServices.ActiveDirectory.DomainController\"></xref> that represents the domain controller that is found by this method."}],"pos":[38262,38411],"yaml":true},{"content":"A domain controller cannot be located.","nodes":[{"pos":[0,38],"content":"A domain controller cannot be located.","nodes":[{"content":"A domain controller cannot be located.","pos":[0,38]}]}],"pos":[38711,38750],"yaml":true},{"content":"A call to the underlying directory service resulted in an error.","nodes":[{"pos":[0,64],"content":"A call to the underlying directory service resulted in an error.","nodes":[{"content":"A call to the underlying directory service resulted in an error.","pos":[0,64]}]}],"pos":[38944,39009],"yaml":true},{"content":"The object has been disposed.","nodes":[{"pos":[0,29],"content":"The object has been disposed.","nodes":[{"content":"The object has been disposed.","pos":[0,29]}]}],"pos":[39115,39145],"yaml":true},{"content":"Finds a domain controller in this domain that meets the specified criteria.","nodes":[{"pos":[0,75],"content":"Finds a domain controller in this domain that meets the specified criteria.","nodes":[{"content":"Finds a domain controller in this domain that meets the specified criteria.","pos":[0,75]}]}],"pos":[40414,40490],"yaml":true},{"content":"A combination of one or more of the <xref href=\"System.DirectoryServices.ActiveDirectory.LocatorOptions\"></xref> members that defines the type of domain controller to find.","nodes":[{"pos":[0,172],"content":"A combination of one or more of the <ph id=\"ph1\">&lt;xref href=\"System.DirectoryServices.ActiveDirectory.LocatorOptions\"&gt;&lt;/xref&gt;</ph> members that defines the type of domain controller to find.","source":"A combination of one or more of the <xref href=\"System.DirectoryServices.ActiveDirectory.LocatorOptions\"></xref> members that defines the type of domain controller to find."}],"pos":[40781,40954],"yaml":true},{"content":"A <xref href=\"System.DirectoryServices.ActiveDirectory.DomainController\"></xref> that represents the domain controller that is found by this method.","nodes":[{"pos":[0,148],"content":"A <ph id=\"ph1\">&lt;xref href=\"System.DirectoryServices.ActiveDirectory.DomainController\"&gt;&lt;/xref&gt;</ph> that represents the domain controller that is found by this method.","source":"A <xref href=\"System.DirectoryServices.ActiveDirectory.DomainController\"></xref> that represents the domain controller that is found by this method."}],"pos":[41055,41204],"yaml":true},{"content":"A domain controller cannot be located.","nodes":[{"pos":[0,38],"content":"A domain controller cannot be located.","nodes":[{"content":"A domain controller cannot be located.","pos":[0,38]}]}],"pos":[41504,41543],"yaml":true},{"content":"A call to the underlying directory service resulted in an error.","nodes":[{"pos":[0,64],"content":"A call to the underlying directory service resulted in an error.","nodes":[{"content":"A call to the underlying directory service resulted in an error.","pos":[0,64]}]}],"pos":[41737,41802],"yaml":true},{"content":"The <code>flag</code> parameter contains an invalid value.","nodes":[{"pos":[0,58],"content":"The <bpt id=\"p1\">&lt;code&gt;</bpt><ph id=\"ph1\">flag</ph><ept id=\"p1\">&lt;/code&gt;</ept> parameter contains an invalid value.","source":"The <code>flag</code> parameter contains an invalid value."}],"pos":[41896,41955],"yaml":true},{"content":"The object has been disposed.","nodes":[{"pos":[0,29],"content":"The object has been disposed.","nodes":[{"content":"The object has been disposed.","pos":[0,29]}]}],"pos":[42061,42091],"yaml":true},{"content":"Finds a domain controller in this domain and in the specified site.","nodes":[{"pos":[0,67],"content":"Finds a domain controller in this domain and in the specified site.","nodes":[{"content":"Finds a domain controller in this domain and in the specified site.","pos":[0,67]}]}],"pos":[43210,43278],"yaml":true},{"content":"The name of the site to search for the domain controller.","nodes":[{"pos":[0,57],"content":"The name of the site to search for the domain controller.","nodes":[{"content":"The name of the site to search for the domain controller.","pos":[0,57]}]}],"pos":[43486,43544],"yaml":true},{"content":"A <xref href=\"System.DirectoryServices.ActiveDirectory.DomainController\"></xref> object that represents the domain controller that is found by this method.","nodes":[{"pos":[0,155],"content":"A <ph id=\"ph1\">&lt;xref href=\"System.DirectoryServices.ActiveDirectory.DomainController\"&gt;&lt;/xref&gt;</ph> object that represents the domain controller that is found by this method.","source":"A <xref href=\"System.DirectoryServices.ActiveDirectory.DomainController\"></xref> object that represents the domain controller that is found by this method."}],"pos":[43645,43801],"yaml":true},{"content":"A domain controller cannot be located.","nodes":[{"pos":[0,38],"content":"A domain controller cannot be located.","nodes":[{"content":"A domain controller cannot be located.","pos":[0,38]}]}],"pos":[44101,44140],"yaml":true},{"content":"A call to the underlying directory service resulted in an error.","nodes":[{"pos":[0,64],"content":"A call to the underlying directory service resulted in an error.","nodes":[{"content":"A call to the underlying directory service resulted in an error.","pos":[0,64]}]}],"pos":[44334,44399],"yaml":true},{"content":"<code>siteName</code> is an empty string.","nodes":[{"pos":[0,41],"content":"<ph id=\"ph1\">&lt;code&gt;siteName&lt;/code&gt;</ph> is an empty string.","source":"<code>siteName</code> is an empty string."}],"pos":[44493,44535],"yaml":true},{"content":"<code>siteName</code> is `null`.","nodes":[{"pos":[0,32],"content":"<ph id=\"ph1\">&lt;code&gt;siteName&lt;/code&gt;</ph> is <ph id=\"ph2\">`null`</ph>.","source":"<code>siteName</code> is `null`."}],"pos":[44637,44670],"yaml":true},{"content":"The object has been disposed.","nodes":[{"pos":[0,29],"content":"The object has been disposed.","nodes":[{"content":"The object has been disposed.","pos":[0,29]}]}],"pos":[44776,44806],"yaml":true},{"content":"Finds a domain controller in this domain and in the specified site that meets the specified criteria.","nodes":[{"pos":[0,101],"content":"Finds a domain controller in this domain and in the specified site that meets the specified criteria.","nodes":[{"content":"Finds a domain controller in this domain and in the specified site that meets the specified criteria.","pos":[0,101]}]}],"pos":[46141,46243],"yaml":true},{"content":"The name of the site to search for the domain controller.","nodes":[{"pos":[0,57],"content":"The name of the site to search for the domain controller.","nodes":[{"content":"The name of the site to search for the domain controller.","pos":[0,57]}]}],"pos":[46513,46571],"yaml":true},{"content":"A combination of one or more of the <xref href=\"System.DirectoryServices.ActiveDirectory.LocatorOptions\"></xref> members that defines the type of domain controller to find.","nodes":[{"pos":[0,172],"content":"A combination of one or more of the <ph id=\"ph1\">&lt;xref href=\"System.DirectoryServices.ActiveDirectory.LocatorOptions\"&gt;&lt;/xref&gt;</ph> members that defines the type of domain controller to find.","source":"A combination of one or more of the <xref href=\"System.DirectoryServices.ActiveDirectory.LocatorOptions\"></xref> members that defines the type of domain controller to find."}],"pos":[46673,46846],"yaml":true},{"content":"A <xref href=\"System.DirectoryServices.ActiveDirectory.DomainController\"></xref> object that represents the domain controller that is found by this method.","nodes":[{"pos":[0,155],"content":"A <ph id=\"ph1\">&lt;xref href=\"System.DirectoryServices.ActiveDirectory.DomainController\"&gt;&lt;/xref&gt;</ph> object that represents the domain controller that is found by this method.","source":"A <xref href=\"System.DirectoryServices.ActiveDirectory.DomainController\"></xref> object that represents the domain controller that is found by this method."}],"pos":[46947,47103],"yaml":true},{"content":"A domain controller cannot be located.","nodes":[{"pos":[0,38],"content":"A domain controller cannot be located.","nodes":[{"content":"A domain controller cannot be located.","pos":[0,38]}]}],"pos":[47403,47442],"yaml":true},{"content":"A call to the underlying directory service resulted in an error.","nodes":[{"pos":[0,64],"content":"A call to the underlying directory service resulted in an error.","nodes":[{"content":"A call to the underlying directory service resulted in an error.","pos":[0,64]}]}],"pos":[47636,47701],"yaml":true},{"content":"This exception will occur for any of the following reasons.  \n  \n-   <code>siteName</code> is an empty string.  \n  \n-   <code>flag</code> contains an invalid value.","nodes":[{"pos":[0,59],"content":"This exception will occur for any of the following reasons.","nodes":[{"content":"This exception will occur for any of the following reasons.","pos":[0,59]}]},{"pos":[65,110],"content":"<ph id=\"ph1\">-   &lt;code&gt;siteName&lt;/code&gt;</ph> is an empty string.","source":"-   <code>siteName</code> is an empty string."},{"pos":[116,164],"content":"<ph id=\"ph1\">-   &lt;code&gt;flag&lt;/code&gt;</ph> contains an invalid value.","source":"-   <code>flag</code> contains an invalid value."}],"pos":[47795,47966],"yaml":true},{"content":"<code>siteName</code> is `null`.","nodes":[{"pos":[0,32],"content":"<ph id=\"ph1\">&lt;code&gt;siteName&lt;/code&gt;</ph> is <ph id=\"ph2\">`null`</ph>.","source":"<code>siteName</code> is `null`."}],"pos":[48068,48101],"yaml":true},{"content":"The object has been disposed.","nodes":[{"pos":[0,29],"content":"The object has been disposed.","nodes":[{"content":"The object has been disposed.","pos":[0,29]}]}],"pos":[48207,48237],"yaml":true},{"content":"Gets the forest that this domain is a member of.","nodes":[{"pos":[0,48],"content":"Gets the forest that this domain is a member of.","nodes":[{"content":"Gets the forest that this domain is a member of.","pos":[0,48]}]}],"pos":[49205,49254],"yaml":true},{"content":"A <xref href=\"System.DirectoryServices.ActiveDirectory.Forest\"></xref> object that represents the forest that this domain is a member of.","nodes":[{"pos":[0,137],"content":"A <ph id=\"ph1\">&lt;xref href=\"System.DirectoryServices.ActiveDirectory.Forest\"&gt;&lt;/xref&gt;</ph> object that represents the forest that this domain is a member of.","source":"A <xref href=\"System.DirectoryServices.ActiveDirectory.Forest\"></xref> object that represents the forest that this domain is a member of."}],"pos":[49439,49577],"yaml":true},{"content":"The object has been disposed.","nodes":[{"pos":[0,29],"content":"The object has been disposed.","nodes":[{"content":"The object has been disposed.","pos":[0,29]}]}],"pos":[49765,49795],"yaml":true},{"content":"Retrieves all of the trust relationships for this domain.","nodes":[{"pos":[0,57],"content":"Retrieves all of the trust relationships for this domain.","nodes":[{"content":"Retrieves all of the trust relationships for this domain.","pos":[0,57]}]}],"pos":[50875,50933],"yaml":true},{"content":"A <xref href=\"System.DirectoryServices.ActiveDirectory.TrustRelationshipInformationCollection\"></xref> object that contains all of the trust relationships for this domain.","nodes":[{"pos":[0,171],"content":"A <ph id=\"ph1\">&lt;xref href=\"System.DirectoryServices.ActiveDirectory.TrustRelationshipInformationCollection\"&gt;&lt;/xref&gt;</ph> object that contains all of the trust relationships for this domain.","source":"A <xref href=\"System.DirectoryServices.ActiveDirectory.TrustRelationshipInformationCollection\"></xref> object that contains all of the trust relationships for this domain."}],"pos":[51214,51386],"yaml":true},{"content":"A call to the underlying directory service resulted in an error.","nodes":[{"pos":[0,64],"content":"A call to the underlying directory service resulted in an error.","nodes":[{"content":"A call to the underlying directory service resulted in an error.","pos":[0,64]}]}],"pos":[51680,51745],"yaml":true},{"content":"The target server is either busy or unavailable.","nodes":[{"pos":[0,48],"content":"The target server is either busy or unavailable.","nodes":[{"content":"The target server is either busy or unavailable.","pos":[0,48]}]}],"pos":[51941,51990],"yaml":true},{"content":"The object has been disposed.","nodes":[{"pos":[0,29],"content":"The object has been disposed.","nodes":[{"content":"The object has been disposed.","pos":[0,29]}]}],"pos":[52096,52126],"yaml":true},{"content":"The specified account does not have permission to perform this operation.","nodes":[{"pos":[0,73],"content":"The specified account does not have permission to perform this operation.","nodes":[{"content":"The specified account does not have permission to perform this operation.","pos":[0,73]}]}],"pos":[52240,52314],"yaml":true},{"content":"Gets the <xref href=\"System.DirectoryServices.ActiveDirectory.Domain\"></xref> object that represents the domain to which the local computer is joined.","nodes":[{"pos":[0,150],"content":"Gets the <ph id=\"ph1\">&lt;xref href=\"System.DirectoryServices.ActiveDirectory.Domain\"&gt;&lt;/xref&gt;</ph> object that represents the domain to which the local computer is joined.","source":"Gets the <xref href=\"System.DirectoryServices.ActiveDirectory.Domain\"></xref> object that represents the domain to which the local computer is joined."}],"pos":[53352,53503],"yaml":true},{"content":"The return value of the <xref:System.DirectoryServices.ActiveDirectory.Domain.GetComputerDomain%2A> method is a <xref:System.DirectoryServices.ActiveDirectory.Domain> object representing the domain to which the computer running the application is joined.  This return value is independent of the domain credentials under which the application is run. This method will retrieve the computer's domain regardless of the trusted account domain credentials it is run under.  To retrieve the <xref:System.DirectoryServices.ActiveDirectory.Domain> object that represents the domain corresponding to the user credentials in effect for the security context under which the application is running, use the <xref:System.DirectoryServices.ActiveDirectory.Domain.GetCurrentDomain%2A> method instead.","nodes":[{"pos":[0,786],"content":"The return value of the <xref:System.DirectoryServices.ActiveDirectory.Domain.GetComputerDomain%2A> method is a <xref:System.DirectoryServices.ActiveDirectory.Domain> object representing the domain to which the computer running the application is joined.  This return value is independent of the domain credentials under which the application is run. This method will retrieve the computer's domain regardless of the trusted account domain credentials it is run under.  To retrieve the <xref:System.DirectoryServices.ActiveDirectory.Domain> object that represents the domain corresponding to the user credentials in effect for the security context under which the application is running, use the <xref:System.DirectoryServices.ActiveDirectory.Domain.GetCurrentDomain%2A> method instead.","nodes":[{"content":"The return value of the <xref:System.DirectoryServices.ActiveDirectory.Domain.GetComputerDomain%2A> method is a <xref:System.DirectoryServices.ActiveDirectory.Domain> object representing the domain to which the computer running the application is joined.  This return value is independent of the domain credentials under which the application is run. This method will retrieve the computer's domain regardless of the trusted account domain credentials it is run under.  To retrieve the <xref:System.DirectoryServices.ActiveDirectory.Domain> object that represents the domain corresponding to the user credentials in effect for the security context under which the application is running, use the <xref:System.DirectoryServices.ActiveDirectory.Domain.GetCurrentDomain%2A> method instead.","pos":[0,786],"nodes":[{"content":"The return value of the <ph id=\"ph1\">&lt;xref:System.DirectoryServices.ActiveDirectory.Domain.GetComputerDomain%2A&gt;</ph> method is a <ph id=\"ph2\">&lt;xref:System.DirectoryServices.ActiveDirectory.Domain&gt;</ph> object representing the domain to which the computer running the application is joined.","pos":[0,254],"source":"The return value of the <xref:System.DirectoryServices.ActiveDirectory.Domain.GetComputerDomain%2A> method is a <xref:System.DirectoryServices.ActiveDirectory.Domain> object representing the domain to which the computer running the application is joined."},{"content":"This return value is independent of the domain credentials under which the application is run.","pos":[256,350]},{"content":"This method will retrieve the computer's domain regardless of the trusted account domain credentials it is run under.","pos":[351,468]},{"content":"To retrieve the <ph id=\"ph1\">&lt;xref:System.DirectoryServices.ActiveDirectory.Domain&gt;</ph> object that represents the domain corresponding to the user credentials in effect for the security context under which the application is running, use the <ph id=\"ph2\">&lt;xref:System.DirectoryServices.ActiveDirectory.Domain.GetCurrentDomain%2A&gt;</ph> method instead.","pos":[470,786],"source":"  To retrieve the <xref:System.DirectoryServices.ActiveDirectory.Domain> object that represents the domain corresponding to the user credentials in effect for the security context under which the application is running, use the <xref:System.DirectoryServices.ActiveDirectory.Domain.GetCurrentDomain%2A> method instead."}]}]}],"pos":[53514,54301],"yaml":true,"extradata":"MT"},{"content":"A <xref href=\"System.DirectoryServices.ActiveDirectory.Domain\"></xref> object that represents the domain to which the local machine is joined.","nodes":[{"pos":[0,142],"content":"A <ph id=\"ph1\">&lt;xref href=\"System.DirectoryServices.ActiveDirectory.Domain\"&gt;&lt;/xref&gt;</ph> object that represents the domain to which the local machine is joined.","source":"A <xref href=\"System.DirectoryServices.ActiveDirectory.Domain\"></xref> object that represents the domain to which the local machine is joined."}],"pos":[54518,54661],"yaml":true},{"content":"A connection to the domain could not be made.","nodes":[{"pos":[0,45],"content":"A connection to the domain could not be made.","nodes":[{"content":"A connection to the domain could not be made.","pos":[0,45]}]}],"pos":[54958,55004],"yaml":true},{"content":"Gets the <xref href=\"System.DirectoryServices.ActiveDirectory.Domain\"></xref> object for the current user credentials in effect for the security context under which the application is running.","nodes":[{"pos":[0,192],"content":"Gets the <ph id=\"ph1\">&lt;xref href=\"System.DirectoryServices.ActiveDirectory.Domain\"&gt;&lt;/xref&gt;</ph> object for the current user credentials in effect for the security context under which the application is running.","source":"Gets the <xref href=\"System.DirectoryServices.ActiveDirectory.Domain\"></xref> object for the current user credentials in effect for the security context under which the application is running."}],"pos":[56036,56229],"yaml":true},{"content":"<xref:System.DirectoryServices.ActiveDirectory.Domain.GetCurrentDomain%2A> method is determined by the domain credentials under which the application is running.  To retrieve the <xref:System.DirectoryServices.ActiveDirectory.Domain> object representing the domain to which the computer running the application is joined, regardless of the credentials associated with that application, use the <xref:System.DirectoryServices.ActiveDirectory.Domain.GetComputerDomain%2A> method instead.  \n  \n## See Also  \n <xref:System.DirectoryServices.ActiveDirectory.Domain.GetComputerDomain%2A>","nodes":[{"pos":[0,485],"content":"<xref:System.DirectoryServices.ActiveDirectory.Domain.GetCurrentDomain%2A> method is determined by the domain credentials under which the application is running.  To retrieve the <xref:System.DirectoryServices.ActiveDirectory.Domain> object representing the domain to which the computer running the application is joined, regardless of the credentials associated with that application, use the <xref:System.DirectoryServices.ActiveDirectory.Domain.GetComputerDomain%2A> method instead.","nodes":[{"content":"<xref:System.DirectoryServices.ActiveDirectory.Domain.GetCurrentDomain%2A> method is determined by the domain credentials under which the application is running.  To retrieve the <xref:System.DirectoryServices.ActiveDirectory.Domain> object representing the domain to which the computer running the application is joined, regardless of the credentials associated with that application, use the <xref:System.DirectoryServices.ActiveDirectory.Domain.GetComputerDomain%2A> method instead.","pos":[0,485],"nodes":[{"content":"<ph id=\"ph1\">&lt;xref:System.DirectoryServices.ActiveDirectory.Domain.GetCurrentDomain%2A&gt;</ph> method is determined by the domain credentials under which the application is running.","pos":[0,161],"source":"<xref:System.DirectoryServices.ActiveDirectory.Domain.GetCurrentDomain%2A> method is determined by the domain credentials under which the application is running."},{"content":"To retrieve the <ph id=\"ph1\">&lt;xref:System.DirectoryServices.ActiveDirectory.Domain&gt;</ph> object representing the domain to which the computer running the application is joined, regardless of the credentials associated with that application, use the <ph id=\"ph2\">&lt;xref:System.DirectoryServices.ActiveDirectory.Domain.GetComputerDomain%2A&gt;</ph> method instead.","pos":[163,485],"source":"  To retrieve the <xref:System.DirectoryServices.ActiveDirectory.Domain> object representing the domain to which the computer running the application is joined, regardless of the credentials associated with that application, use the <xref:System.DirectoryServices.ActiveDirectory.Domain.GetComputerDomain%2A> method instead."}]}]},{"pos":[494,502],"content":"See Also","linkify":"See Also","nodes":[{"content":"See Also","pos":[0,8]}]},{"pos":[506,581],"content":"<xref:System.DirectoryServices.ActiveDirectory.Domain.GetComputerDomain%2A>","nodes":[]}],"pos":[56240,56827],"yaml":true,"extradata":"MT"},{"content":"A <xref href=\"System.DirectoryServices.ActiveDirectory.Domain\"></xref> object that represents the domain for the specified user credentials in effect for the security context under which the application is running.","nodes":[{"pos":[0,214],"content":"A <ph id=\"ph1\">&lt;xref href=\"System.DirectoryServices.ActiveDirectory.Domain\"&gt;&lt;/xref&gt;</ph> object that represents the domain for the specified user credentials in effect for the security context under which the application is running.","source":"A <xref href=\"System.DirectoryServices.ActiveDirectory.Domain\"></xref> object that represents the domain for the specified user credentials in effect for the security context under which the application is running."}],"pos":[57043,57258],"yaml":true},{"content":"A connection to the current context could not be made.","nodes":[{"pos":[0,54],"content":"A connection to the current context could not be made.","nodes":[{"content":"A connection to the current context could not be made.","pos":[0,54]}]}],"pos":[57554,57609],"yaml":true},{"content":"Retrieves a <xref href=\"System.DirectoryServices.DirectoryEntry\"></xref> object that represents the default naming context of the domain.","nodes":[{"pos":[0,137],"content":"Retrieves a <ph id=\"ph1\">&lt;xref href=\"System.DirectoryServices.DirectoryEntry\"&gt;&lt;/xref&gt;</ph> object that represents the default naming context of the domain.","source":"Retrieves a <xref href=\"System.DirectoryServices.DirectoryEntry\"></xref> object that represents the default naming context of the domain."}],"pos":[58647,58785],"yaml":true},{"content":"A <xref href=\"System.DirectoryServices.DirectoryEntry\"></xref> object that represents the domain.","nodes":[{"pos":[0,97],"content":"A <ph id=\"ph1\">&lt;xref href=\"System.DirectoryServices.DirectoryEntry\"&gt;&lt;/xref&gt;</ph> object that represents the domain.","source":"A <xref href=\"System.DirectoryServices.DirectoryEntry\"></xref> object that represents the domain."}],"pos":[58988,59086],"yaml":true},{"content":"The current object has been disposed.","nodes":[{"pos":[0,37],"content":"The current object has been disposed.","nodes":[{"content":"The current object has been disposed.","pos":[0,37]}]}],"pos":[59285,59323],"yaml":true},{"content":"Gets the <xref href=\"System.DirectoryServices.ActiveDirectory.Domain\"></xref> object for the specified context.","nodes":[{"pos":[0,111],"content":"Gets the <ph id=\"ph1\">&lt;xref href=\"System.DirectoryServices.ActiveDirectory.Domain\"&gt;&lt;/xref&gt;</ph> object for the specified context.","source":"Gets the <xref href=\"System.DirectoryServices.ActiveDirectory.Domain\"></xref> object for the specified context."}],"pos":[60538,60650],"yaml":true},{"content":"An <xref href=\"System.DirectoryServices.ActiveDirectory.DirectoryContext\"></xref> object that contains the target and credentials to use to retrieve the object. The type of the context must be a domain or directory server.","nodes":[{"pos":[0,222],"content":"An <xref href=\"System.DirectoryServices.ActiveDirectory.DirectoryContext\"></xref> object that contains the target and credentials to use to retrieve the object. The type of the context must be a domain or directory server.","nodes":[{"content":"An <ph id=\"ph1\">&lt;xref href=\"System.DirectoryServices.ActiveDirectory.DirectoryContext\"&gt;&lt;/xref&gt;</ph> object that contains the target and credentials to use to retrieve the object.","pos":[0,160],"source":"An <xref href=\"System.DirectoryServices.ActiveDirectory.DirectoryContext\"></xref> object that contains the target and credentials to use to retrieve the object."},{"content":"The type of the context must be a domain or directory server.","pos":[161,222]}]}],"pos":[60937,61160],"yaml":true},{"content":"An <xref href=\"System.DirectoryServices.ActiveDirectory.Domain\"></xref> object that represents the domain for the specified context.","nodes":[{"pos":[0,132],"content":"An <ph id=\"ph1\">&lt;xref href=\"System.DirectoryServices.ActiveDirectory.Domain\"&gt;&lt;/xref&gt;</ph> object that represents the domain for the specified context.","source":"An <xref href=\"System.DirectoryServices.ActiveDirectory.Domain\"></xref> object that represents the domain for the specified context."}],"pos":[61251,61384],"yaml":true},{"content":"A connection to the target specified in <code>context</code> could not be made.","nodes":[{"pos":[0,79],"content":"A connection to the target specified in <bpt id=\"p1\">&lt;code&gt;</bpt><ph id=\"ph1\">context</ph><ept id=\"p1\">&lt;/code&gt;</ept> could not be made.","source":"A connection to the target specified in <code>context</code> could not be made."}],"pos":[61673,61753],"yaml":true},{"content":"<code>context</code> is not valid.","nodes":[{"pos":[0,34],"content":"<ph id=\"ph1\">&lt;code&gt;context&lt;/code&gt;</ph> is not valid.","source":"<code>context</code> is not valid."}],"pos":[61847,61882],"yaml":true},{"content":"<code>context</code> is `null`.","nodes":[{"pos":[0,31],"content":"<ph id=\"ph1\">&lt;code&gt;context&lt;/code&gt;</ph> is <ph id=\"ph2\">`null`</ph>.","source":"<code>context</code> is `null`."}],"pos":[61984,62016],"yaml":true},{"content":"Determines the authentication type of an inbound trust.","nodes":[{"pos":[0,55],"content":"Determines the authentication type of an inbound trust.","nodes":[{"content":"Determines the authentication type of an inbound trust.","pos":[0,55]}]}],"pos":[63207,63263],"yaml":true},{"content":"The DNS name of the domain which with the trust exists.","nodes":[{"pos":[0,55],"content":"The DNS name of the domain which with the trust exists.","nodes":[{"content":"The DNS name of the domain which with the trust exists.","pos":[0,55]}]}],"pos":[63446,63502],"yaml":true},{"content":"`true` if the authentication of the trust is selective; `false` if the authentication is domain-wide.","nodes":[{"pos":[0,101],"content":"<ph id=\"ph1\">`true`</ph> if the authentication of the trust is selective; <ph id=\"ph2\">`false`</ph> if the authentication is domain-wide.","source":"`true` if the authentication of the trust is selective; `false` if the authentication is domain-wide."}],"pos":[63560,63664],"yaml":true},{"content":"There is no trust relationship with the <xref href=\"System.DirectoryServices.ActiveDirectory.Forest\"></xref> that is specified by the <code>targetForestName</code> parameter.","nodes":[{"pos":[0,174],"content":"There is no trust relationship with the <ph id=\"ph1\">&lt;xref href=\"System.DirectoryServices.ActiveDirectory.Forest\"&gt;&lt;/xref&gt;</ph> that is specified by the <bpt id=\"p1\">&lt;code&gt;</bpt><ph id=\"ph2\">targetForestName</ph><ept id=\"p1\">&lt;/code&gt;</ept> parameter.","source":"There is no trust relationship with the <xref href=\"System.DirectoryServices.ActiveDirectory.Forest\"></xref> that is specified by the <code>targetForestName</code> parameter."}],"pos":[63976,64151],"yaml":true},{"content":"The call to LsaQueryTrustedDomainInfoByName failed. For more information, see the topic [LsaQueryTrustedDomainInfoByName](http://msdn.microsoft.com/library/default.asp?url=/library/en-us/secmgmt/security/lsaquerytrusteddomaininfobyname.asp) in the MSDN Library at [http://msdn.microsoft.com/library](http://msdn.microsoft.com/library).","nodes":[{"pos":[0,335],"content":"The call to LsaQueryTrustedDomainInfoByName failed. For more information, see the topic [LsaQueryTrustedDomainInfoByName](http://msdn.microsoft.com/library/default.asp?url=/library/en-us/secmgmt/security/lsaquerytrusteddomaininfobyname.asp) in the MSDN Library at [http://msdn.microsoft.com/library](http://msdn.microsoft.com/library).","nodes":[{"content":"The call to LsaQueryTrustedDomainInfoByName failed.","pos":[0,51]},{"content":"For more information, see the topic <bpt id=\"p1\">[</bpt>LsaQueryTrustedDomainInfoByName<ept id=\"p1\">](http://msdn.microsoft.com/library/default.asp?url=/library/en-us/secmgmt/security/lsaquerytrusteddomaininfobyname.asp)</ept> in the MSDN Library at <bpt id=\"p2\">[</bpt>http://msdn.microsoft.com/library<ept id=\"p2\">](http://msdn.microsoft.com/library)</ept>.","pos":[52,335],"source":" For more information, see the topic [LsaQueryTrustedDomainInfoByName](http://msdn.microsoft.com/library/default.asp?url=/library/en-us/secmgmt/security/lsaquerytrusteddomaininfobyname.asp) in the MSDN Library at [http://msdn.microsoft.com/library](http://msdn.microsoft.com/library)."}]}],"pos":[64345,64681],"yaml":true},{"content":"The target server is either busy or unavailable.","nodes":[{"pos":[0,48],"content":"The target server is either busy or unavailable.","nodes":[{"content":"The target server is either busy or unavailable.","pos":[0,48]}]}],"pos":[64877,64926],"yaml":true},{"content":"<code>targetDomainName</code> is an empty string.","nodes":[{"pos":[0,49],"content":"<ph id=\"ph1\">&lt;code&gt;targetDomainName&lt;/code&gt;</ph> is an empty string.","source":"<code>targetDomainName</code> is an empty string."}],"pos":[65020,65070],"yaml":true},{"content":"<code>targetDomainName</code> is `null`.","nodes":[{"pos":[0,40],"content":"<ph id=\"ph1\">&lt;code&gt;targetDomainName&lt;/code&gt;</ph> is <ph id=\"ph2\">`null`</ph>.","source":"<code>targetDomainName</code> is `null`."}],"pos":[65172,65213],"yaml":true},{"content":"The current object has been disposed.","nodes":[{"pos":[0,37],"content":"The current object has been disposed.","nodes":[{"content":"The current object has been disposed.","pos":[0,37]}]}],"pos":[65319,65357],"yaml":true},{"content":"The specified account does not have permission to perform this operation.","nodes":[{"pos":[0,73],"content":"The specified account does not have permission to perform this operation.","nodes":[{"content":"The specified account does not have permission to perform this operation.","pos":[0,73]}]}],"pos":[65471,65545],"yaml":true},{"content":"Determines the SID filtering status of a trust.","nodes":[{"pos":[0,47],"content":"Determines the SID filtering status of a trust.","nodes":[{"content":"Determines the SID filtering status of a trust.","pos":[0,47]}]}],"pos":[66670,66718],"yaml":true},{"content":"The DNS name of the domain which with the trust relationship exists.","nodes":[{"pos":[0,68],"content":"The DNS name of the domain which with the trust relationship exists.","nodes":[{"content":"The DNS name of the domain which with the trust relationship exists.","pos":[0,68]}]}],"pos":[66890,66959],"yaml":true},{"content":"`true` if SID filtering is enabled; otherwise, `false`.","nodes":[{"pos":[0,55],"content":"<ph id=\"ph1\">`true`</ph> if SID filtering is enabled; otherwise, <ph id=\"ph2\">`false`</ph>.","source":"`true` if SID filtering is enabled; otherwise, `false`."}],"pos":[67017,67075],"yaml":true},{"content":"There is no trust relationship with the <xref href=\"System.DirectoryServices.ActiveDirectory.Forest\"></xref> that is specified by the <code>targetForestName</code> parameter.","nodes":[{"pos":[0,174],"content":"There is no trust relationship with the <ph id=\"ph1\">&lt;xref href=\"System.DirectoryServices.ActiveDirectory.Forest\"&gt;&lt;/xref&gt;</ph> that is specified by the <bpt id=\"p1\">&lt;code&gt;</bpt><ph id=\"ph2\">targetForestName</ph><ept id=\"p1\">&lt;/code&gt;</ept> parameter.","source":"There is no trust relationship with the <xref href=\"System.DirectoryServices.ActiveDirectory.Forest\"></xref> that is specified by the <code>targetForestName</code> parameter."}],"pos":[67376,67551],"yaml":true},{"content":"A call to the underlying directory service resulted in an error.","nodes":[{"pos":[0,64],"content":"A call to the underlying directory service resulted in an error.","nodes":[{"content":"A call to the underlying directory service resulted in an error.","pos":[0,64]}]}],"pos":[67745,67810],"yaml":true},{"content":"The target server is either busy or unavailable.","nodes":[{"pos":[0,48],"content":"The target server is either busy or unavailable.","nodes":[{"content":"The target server is either busy or unavailable.","pos":[0,48]}]}],"pos":[68006,68055],"yaml":true},{"content":"<code>targetDomainName</code> is an empty string.","nodes":[{"pos":[0,49],"content":"<ph id=\"ph1\">&lt;code&gt;targetDomainName&lt;/code&gt;</ph> is an empty string.","source":"<code>targetDomainName</code> is an empty string."}],"pos":[68149,68199],"yaml":true},{"content":"<code>targetDomainName</code> is `null`.","nodes":[{"pos":[0,40],"content":"<ph id=\"ph1\">&lt;code&gt;targetDomainName&lt;/code&gt;</ph> is <ph id=\"ph2\">`null`</ph>.","source":"<code>targetDomainName</code> is `null`."}],"pos":[68301,68342],"yaml":true},{"content":"The current object has been disposed.","nodes":[{"pos":[0,37],"content":"The current object has been disposed.","nodes":[{"content":"The current object has been disposed.","pos":[0,37]}]}],"pos":[68448,68486],"yaml":true},{"content":"The specified account does not have permission to perform this operation.","nodes":[{"pos":[0,73],"content":"The specified account does not have permission to perform this operation.","nodes":[{"content":"The specified account does not have permission to perform this operation.","pos":[0,73]}]}],"pos":[68600,68674],"yaml":true},{"content":"Gets the trust relationship between this domain and the specified domain.","nodes":[{"pos":[0,73],"content":"Gets the trust relationship between this domain and the specified domain.","nodes":[{"content":"Gets the trust relationship between this domain and the specified domain.","pos":[0,73]}]}],"pos":[69793,69867],"yaml":true},{"content":"The DNS name of the domain with which the trust relationship exists.","nodes":[{"pos":[0,68],"content":"The DNS name of the domain with which the trust relationship exists.","nodes":[{"content":"The DNS name of the domain with which the trust relationship exists.","pos":[0,68]}]}],"pos":[70103,70172],"yaml":true},{"content":"A <xref href=\"System.DirectoryServices.ActiveDirectory.TrustRelationshipInformation\"></xref> object that represents the trust relationship between this domain and the specified domain.","nodes":[{"pos":[0,184],"content":"A <ph id=\"ph1\">&lt;xref href=\"System.DirectoryServices.ActiveDirectory.TrustRelationshipInformation\"&gt;&lt;/xref&gt;</ph> object that represents the trust relationship between this domain and the specified domain.","source":"A <xref href=\"System.DirectoryServices.ActiveDirectory.TrustRelationshipInformation\"></xref> object that represents the trust relationship between this domain and the specified domain."}],"pos":[70285,70470],"yaml":true},{"content":"There is no trust relationship with the <xref href=\"System.DirectoryServices.ActiveDirectory.Forest\"></xref> that is specified by the <code>targetForestName</code> parameter.","nodes":[{"pos":[0,174],"content":"There is no trust relationship with the <ph id=\"ph1\">&lt;xref href=\"System.DirectoryServices.ActiveDirectory.Forest\"&gt;&lt;/xref&gt;</ph> that is specified by the <bpt id=\"p1\">&lt;code&gt;</bpt><ph id=\"ph2\">targetForestName</ph><ept id=\"p1\">&lt;/code&gt;</ept> parameter.","source":"There is no trust relationship with the <xref href=\"System.DirectoryServices.ActiveDirectory.Forest\"></xref> that is specified by the <code>targetForestName</code> parameter."}],"pos":[70770,70945],"yaml":true},{"content":"A call to the underlying directory service resulted in an error.","nodes":[{"pos":[0,64],"content":"A call to the underlying directory service resulted in an error.","nodes":[{"content":"A call to the underlying directory service resulted in an error.","pos":[0,64]}]}],"pos":[71139,71204],"yaml":true},{"content":"The target server is either busy or unavailable.","nodes":[{"pos":[0,48],"content":"The target server is either busy or unavailable.","nodes":[{"content":"The target server is either busy or unavailable.","pos":[0,48]}]}],"pos":[71400,71449],"yaml":true},{"content":"<code>targetDomainName</code> is an empty string.","nodes":[{"pos":[0,49],"content":"<ph id=\"ph1\">&lt;code&gt;targetDomainName&lt;/code&gt;</ph> is an empty string.","source":"<code>targetDomainName</code> is an empty string."}],"pos":[71543,71593],"yaml":true},{"content":"<code>targetDomainName</code> is `null`.","nodes":[{"pos":[0,40],"content":"<ph id=\"ph1\">&lt;code&gt;targetDomainName&lt;/code&gt;</ph> is <ph id=\"ph2\">`null`</ph>.","source":"<code>targetDomainName</code> is `null`."}],"pos":[71695,71736],"yaml":true},{"content":"The current object has been disposed.","nodes":[{"pos":[0,37],"content":"The current object has been disposed.","nodes":[{"content":"The current object has been disposed.","pos":[0,37]}]}],"pos":[71842,71880],"yaml":true},{"content":"The specified account does not have permission to perform this operation.","nodes":[{"pos":[0,73],"content":"The specified account does not have permission to perform this operation.","nodes":[{"content":"The specified account does not have permission to perform this operation.","pos":[0,73]}]}],"pos":[71994,72068],"yaml":true},{"content":"Gets the infrastructure role owner for this domain.","nodes":[{"pos":[0,51],"content":"Gets the infrastructure role owner for this domain.","nodes":[{"content":"Gets the infrastructure role owner for this domain.","pos":[0,51]}]}],"pos":[73138,73190],"yaml":true},{"content":"An <xref href=\"System.DirectoryServices.ActiveDirectory.DomainController\"></xref> object that represents the domain controller that holds the infrastructure owner role.","nodes":[{"pos":[0,168],"content":"An <ph id=\"ph1\">&lt;xref href=\"System.DirectoryServices.ActiveDirectory.DomainController\"&gt;&lt;/xref&gt;</ph> object that represents the domain controller that holds the infrastructure owner role.","source":"An <xref href=\"System.DirectoryServices.ActiveDirectory.DomainController\"></xref> object that represents the domain controller that holds the infrastructure owner role."}],"pos":[73412,73581],"yaml":true},{"content":"The object has been disposed.","nodes":[{"pos":[0,29],"content":"The object has been disposed.","nodes":[{"content":"The object has been disposed.","pos":[0,29]}]}],"pos":[73786,73816],"yaml":true},{"content":"Gets the parent domain of this domain.","nodes":[{"pos":[0,38],"content":"Gets the parent domain of this domain.","nodes":[{"content":"Gets the parent domain of this domain.","pos":[0,38]}]}],"pos":[74784,74823],"yaml":true},{"content":"An <xref href=\"System.DirectoryServices.ActiveDirectory.Domain\"></xref> object that represents the parent domain of this domain. `null` if this domain has no parent domain.","nodes":[{"pos":[0,172],"content":"An <xref href=\"System.DirectoryServices.ActiveDirectory.Domain\"></xref> object that represents the parent domain of this domain. `null` if this domain has no parent domain.","nodes":[{"content":"An <ph id=\"ph1\">&lt;xref href=\"System.DirectoryServices.ActiveDirectory.Domain\"&gt;&lt;/xref&gt;</ph> object that represents the parent domain of this domain.","pos":[0,128],"source":"An <xref href=\"System.DirectoryServices.ActiveDirectory.Domain\"></xref> object that represents the parent domain of this domain."},{"content":"<ph id=\"ph1\">`null`</ph> if this domain has no parent domain.","pos":[129,172],"source":"`null` if this domain has no parent domain."}]}],"pos":[75008,75181],"yaml":true},{"content":"The object has been disposed.","nodes":[{"pos":[0,29],"content":"The object has been disposed.","nodes":[{"content":"The object has been disposed.","pos":[0,29]}]}],"pos":[75369,75399],"yaml":true},{"content":"Gets the <xref href=\"System.DirectoryServices.ActiveDirectory.DomainController\"></xref> object that holds the primary domain controller (PDC) for this domain.","nodes":[{"pos":[0,158],"content":"Gets the <ph id=\"ph1\">&lt;xref href=\"System.DirectoryServices.ActiveDirectory.DomainController\"&gt;&lt;/xref&gt;</ph> object that holds the primary domain controller (PDC) for this domain.","source":"Gets the <xref href=\"System.DirectoryServices.ActiveDirectory.DomainController\"></xref> object that holds the primary domain controller (PDC) for this domain."}],"pos":[76403,76562],"yaml":true},{"content":"An <xref href=\"System.DirectoryServices.ActiveDirectory.DomainController\"></xref> object that represents the domain controller that holds the PDC emulator role for this domain.","nodes":[{"pos":[0,176],"content":"An <ph id=\"ph1\">&lt;xref href=\"System.DirectoryServices.ActiveDirectory.DomainController\"&gt;&lt;/xref&gt;</ph> object that represents the domain controller that holds the PDC emulator role for this domain.","source":"An <xref href=\"System.DirectoryServices.ActiveDirectory.DomainController\"></xref> object that represents the domain controller that holds the PDC emulator role for this domain."}],"pos":[76773,76950],"yaml":true},{"content":"The object has been disposed.","nodes":[{"pos":[0,29],"content":"The object has been disposed.","nodes":[{"content":"The object has been disposed.","pos":[0,29]}]}],"pos":[77144,77174],"yaml":true},{"content":"Raises the mode of operation for the domain.","nodes":[{"pos":[0,44],"content":"Raises the mode of operation for the domain.","nodes":[{"content":"Raises the mode of operation for the domain.","pos":[0,44]}]}],"pos":[78443,78488],"yaml":true},{"content":"The <xref:System.DirectoryServices.ActiveDirectory.DomainMode> value can be raised but not lowered. This means that raising the functionality level of the domain is not reversible and the decision to do this should be made carefully.  \n  \n For more information about domain operational modes, see [Domain and forest functionality](http://www.microsoft.com/resources/documentation/WindowsServ/2003/standard/proddocs/en-us/sag_levels.asp).  \n  \n The following table defines the valid values for `domainMode` based on the current operating mode of the domain.  \n  \n|Current mode|Mode can be raised to|  \n|------------------|---------------------------|  \n|<xref:System.DirectoryServices.ActiveDirectory.DomainMode.Windows2000MixedDomain>|<xref:System.DirectoryServices.ActiveDirectory.DomainMode.Windows2000NativeDomain><br /><br /> <xref:System.DirectoryServices.ActiveDirectory.DomainMode.Windows2003InterimDomain><br /><br /> <xref:System.DirectoryServices.ActiveDirectory.DomainMode.Windows2003Domain>|  \n|<xref:System.DirectoryServices.ActiveDirectory.DomainMode.Windows2000NativeDomain>|<xref:System.DirectoryServices.ActiveDirectory.DomainMode.Windows2003Domain>|  \n|<xref:System.DirectoryServices.ActiveDirectory.DomainMode.Windows2003InterimDomain>|<xref:System.DirectoryServices.ActiveDirectory.DomainMode.Windows2003Domain>|  \n|<xref:System.DirectoryServices.ActiveDirectory.DomainMode.Windows2003Domain>|None|","nodes":[{"pos":[0,233],"content":"The <xref:System.DirectoryServices.ActiveDirectory.DomainMode> value can be raised but not lowered. This means that raising the functionality level of the domain is not reversible and the decision to do this should be made carefully.","nodes":[{"content":"The <xref:System.DirectoryServices.ActiveDirectory.DomainMode> value can be raised but not lowered. This means that raising the functionality level of the domain is not reversible and the decision to do this should be made carefully.","pos":[0,233],"nodes":[{"content":"The <ph id=\"ph1\">&lt;xref:System.DirectoryServices.ActiveDirectory.DomainMode&gt;</ph> value can be raised but not lowered.","pos":[0,99],"source":"The <xref:System.DirectoryServices.ActiveDirectory.DomainMode> value can be raised but not lowered."},{"content":"This means that raising the functionality level of the domain is not reversible and the decision to do this should be made carefully.","pos":[100,233]}]}]},{"pos":[240,437],"content":"For more information about domain operational modes, see <bpt id=\"p1\">[</bpt>Domain and forest functionality<ept id=\"p1\">](http://www.microsoft.com/resources/documentation/WindowsServ/2003/standard/proddocs/en-us/sag_levels.asp)</ept>.","source":"For more information about domain operational modes, see [Domain and forest functionality](http://www.microsoft.com/resources/documentation/WindowsServ/2003/standard/proddocs/en-us/sag_levels.asp)."},{"pos":[444,556],"content":"The following table defines the valid values for <ph id=\"ph1\">`domainMode`</ph> based on the current operating mode of the domain.","source":"The following table defines the valid values for `domainMode` based on the current operating mode of the domain."},{"pos":[563,575],"content":"Current mode","nodes":[{"content":"Current mode","pos":[0,12]}]},{"pos":[576,597],"content":"Mode can be raised to","nodes":[{"content":"Mode can be raised to","pos":[0,21]}]},{"pos":[653,734],"content":"<xref:System.DirectoryServices.ActiveDirectory.DomainMode.Windows2000MixedDomain>","nodes":[]},{"pos":[735,1002],"content":"<xref:System.DirectoryServices.ActiveDirectory.DomainMode.Windows2000NativeDomain><br /><br /> <xref:System.DirectoryServices.ActiveDirectory.DomainMode.Windows2003InterimDomain><br /><br /> <xref:System.DirectoryServices.ActiveDirectory.DomainMode.Windows2003Domain>","nodes":[]},{"pos":[1007,1089],"content":"<xref:System.DirectoryServices.ActiveDirectory.DomainMode.Windows2000NativeDomain>","nodes":[]},{"pos":[1090,1166],"content":"<xref:System.DirectoryServices.ActiveDirectory.DomainMode.Windows2003Domain>","nodes":[]},{"pos":[1171,1254],"content":"<xref:System.DirectoryServices.ActiveDirectory.DomainMode.Windows2003InterimDomain>","nodes":[]},{"pos":[1255,1331],"content":"<xref:System.DirectoryServices.ActiveDirectory.DomainMode.Windows2003Domain>","nodes":[]},{"pos":[1336,1412],"content":"<xref:System.DirectoryServices.ActiveDirectory.DomainMode.Windows2003Domain>","nodes":[]},{"pos":[1413,1417],"content":"None","nodes":[{"content":"None","pos":[0,4]}]}],"pos":[78499,79931],"yaml":true,"extradata":"MT"},{"content":"An <xref href=\"System.DirectoryServices.ActiveDirectory.DomainMode\"></xref> enumeration value that specifies the new operation level for the domain.","nodes":[{"pos":[0,148],"content":"An <ph id=\"ph1\">&lt;xref href=\"System.DirectoryServices.ActiveDirectory.DomainMode\"&gt;&lt;/xref&gt;</ph> enumeration value that specifies the new operation level for the domain.","source":"An <xref href=\"System.DirectoryServices.ActiveDirectory.DomainMode\"></xref> enumeration value that specifies the new operation level for the domain."}],"pos":[80177,80326],"yaml":true},{"content":"A call to the underlying directory service resulted in an error.","nodes":[{"pos":[0,64],"content":"A call to the underlying directory service resulted in an error.","nodes":[{"content":"A call to the underlying directory service resulted in an error.","pos":[0,64]}]}],"pos":[80620,80685],"yaml":true},{"content":"The target server is either busy or unavailable.","nodes":[{"pos":[0,48],"content":"The target server is either busy or unavailable.","nodes":[{"content":"The target server is either busy or unavailable.","pos":[0,48]}]}],"pos":[80881,80930],"yaml":true},{"content":"Based on the current operating mode of the domain, the value specified for <code>domainMode</code> is not valid.","nodes":[{"pos":[0,112],"content":"Based on the current operating mode of the domain, the value specified for <bpt id=\"p1\">&lt;code&gt;</bpt><ph id=\"ph1\">domainMode</ph><ept id=\"p1\">&lt;/code&gt;</ept> is not valid.","source":"Based on the current operating mode of the domain, the value specified for <code>domainMode</code> is not valid."}],"pos":[81024,81137],"yaml":true},{"content":"<code>domainMode</code> is not a valid <xref href=\"System.DirectoryServices.ActiveDirectory.DomainMode\"></xref> enumeration value.","nodes":[{"pos":[0,130],"content":"<ph id=\"ph1\">&lt;code&gt;domainMode&lt;/code&gt;</ph> is not a valid <ph id=\"ph2\">&lt;xref href=\"System.DirectoryServices.ActiveDirectory.DomainMode\"&gt;&lt;/xref&gt;</ph> enumeration value.","source":"<code>domainMode</code> is not a valid <xref href=\"System.DirectoryServices.ActiveDirectory.DomainMode\"></xref> enumeration value."}],"pos":[81283,81414],"yaml":true},{"content":"The object has been disposed.","nodes":[{"pos":[0,29],"content":"The object has been disposed.","nodes":[{"content":"The object has been disposed.","pos":[0,29]}]}],"pos":[81520,81550],"yaml":true},{"content":"The specified account does not have permission to perform this operation.","nodes":[{"pos":[0,73],"content":"The specified account does not have permission to perform this operation.","nodes":[{"content":"The specified account does not have permission to perform this operation.","pos":[0,73]}]}],"pos":[81664,81738],"yaml":true},{"content":"Raises the functionality level for the domain.","nodes":[{"pos":[0,46],"content":"Raises the functionality level for the domain.","nodes":[{"content":"Raises the functionality level for the domain.","pos":[0,46]}]}],"pos":[82905,82952],"yaml":true},{"content":"A value representing the new level.","nodes":[{"pos":[0,35],"content":"A value representing the new level.","nodes":[{"content":"A value representing the new level.","pos":[0,35]}]}],"pos":[83116,83152],"yaml":true},{"content":"Repairs a trust relationship.","nodes":[{"pos":[0,29],"content":"Repairs a trust relationship.","nodes":[{"content":"Repairs a trust relationship.","pos":[0,29]}]}],"pos":[84365,84395],"yaml":true},{"content":"This method repairs the trust by resetting the secure channel for the trust. If the operation fails to reset the secure channel, then it will also reset the trust password.","nodes":[{"pos":[0,172],"content":"This method repairs the trust by resetting the secure channel for the trust. If the operation fails to reset the secure channel, then it will also reset the trust password.","nodes":[{"content":"This method repairs the trust by resetting the secure channel for the trust. If the operation fails to reset the secure channel, then it will also reset the trust password.","pos":[0,172],"nodes":[{"content":"This method repairs the trust by resetting the secure channel for the trust.","pos":[0,76]},{"content":"If the operation fails to reset the secure channel, then it will also reset the trust password.","pos":[77,172]}]}]}],"pos":[84406,84579],"yaml":true,"extradata":"MT"},{"content":"An <xref href=\"System.DirectoryServices.ActiveDirectory.Domain\"></xref> object that represents the domain with which the trust exists.","nodes":[{"pos":[0,134],"content":"An <ph id=\"ph1\">&lt;xref href=\"System.DirectoryServices.ActiveDirectory.Domain\"&gt;&lt;/xref&gt;</ph> object that represents the domain with which the trust exists.","source":"An <xref href=\"System.DirectoryServices.ActiveDirectory.Domain\"></xref> object that represents the domain with which the trust exists."}],"pos":[84820,84955],"yaml":true},{"content":"There is no trust relationship with the <xref href=\"System.DirectoryServices.ActiveDirectory.Domain\"></xref> that is specified by <code>targetDomain</code>.","nodes":[{"pos":[0,156],"content":"There is no trust relationship with the <ph id=\"ph1\">&lt;xref href=\"System.DirectoryServices.ActiveDirectory.Domain\"&gt;&lt;/xref&gt;</ph> that is specified by <bpt id=\"p1\">&lt;code&gt;</bpt><ph id=\"ph2\">targetDomain</ph><ept id=\"p1\">&lt;/code&gt;</ept>.","source":"There is no trust relationship with the <xref href=\"System.DirectoryServices.ActiveDirectory.Domain\"></xref> that is specified by <code>targetDomain</code>."}],"pos":[85258,85415],"yaml":true},{"content":"A call to the underlying directory service resulted in an error.","nodes":[{"pos":[0,64],"content":"A call to the underlying directory service resulted in an error.","nodes":[{"content":"A call to the underlying directory service resulted in an error.","pos":[0,64]}]}],"pos":[85609,85674],"yaml":true},{"content":"The target or source server is either busy or unavailable.","nodes":[{"pos":[0,58],"content":"The target or source server is either busy or unavailable.","nodes":[{"content":"The target or source server is either busy or unavailable.","pos":[0,58]}]}],"pos":[85870,85929],"yaml":true},{"content":"<code>targetDomain</code> is `null`.","nodes":[{"pos":[0,36],"content":"<ph id=\"ph1\">&lt;code&gt;targetDomain&lt;/code&gt;</ph> is <ph id=\"ph2\">`null`</ph>.","source":"<code>targetDomain</code> is `null`."}],"pos":[86031,86068],"yaml":true},{"content":"The object has been disposed.","nodes":[{"pos":[0,29],"content":"The object has been disposed.","nodes":[{"content":"The object has been disposed.","pos":[0,29]}]}],"pos":[86174,86204],"yaml":true},{"content":"The specified account does not have permission to perform this operation.","nodes":[{"pos":[0,73],"content":"The specified account does not have permission to perform this operation.","nodes":[{"content":"The specified account does not have permission to perform this operation.","pos":[0,73]}]}],"pos":[86318,86392],"yaml":true},{"content":"Gets the RID master role holder for this domain.","nodes":[{"pos":[0,48],"content":"Gets the RID master role holder for this domain.","nodes":[{"content":"Gets the RID master role holder for this domain.","pos":[0,48]}]}],"pos":[87396,87445],"yaml":true},{"content":"An <xref href=\"System.DirectoryServices.ActiveDirectory.DomainController\"></xref> object that represents the domain controller that holds the relative identifier (RID) master role for this domain.","nodes":[{"pos":[0,196],"content":"An <ph id=\"ph1\">&lt;xref href=\"System.DirectoryServices.ActiveDirectory.DomainController\"&gt;&lt;/xref&gt;</ph> object that represents the domain controller that holds the relative identifier (RID) master role for this domain.","source":"An <xref href=\"System.DirectoryServices.ActiveDirectory.DomainController\"></xref> object that represents the domain controller that holds the relative identifier (RID) master role for this domain."}],"pos":[87656,87853],"yaml":true},{"content":"The object has been disposed.","nodes":[{"pos":[0,29],"content":"The object has been disposed.","nodes":[{"content":"The object has been disposed.","pos":[0,29]}]}],"pos":[88047,88077],"yaml":true},{"content":"Enables or disables selective authentication for an inbound trust.","nodes":[{"pos":[0,66],"content":"Enables or disables selective authentication for an inbound trust.","nodes":[{"content":"Enables or disables selective authentication for an inbound trust.","pos":[0,66]}]}],"pos":[89340,89407],"yaml":true},{"content":"The DNS name of the domain with which the inbound trust exists.","nodes":[{"pos":[0,63],"content":"The DNS name of the domain with which the inbound trust exists.","nodes":[{"content":"The DNS name of the domain with which the inbound trust exists.","pos":[0,63]}]}],"pos":[89603,89667],"yaml":true},{"content":"`true` if selective authentication is enabled; otherwise, `false`.","nodes":[{"pos":[0,66],"content":"<ph id=\"ph1\">`true`</ph> if selective authentication is enabled; otherwise, <ph id=\"ph2\">`false`</ph>.","source":"`true` if selective authentication is enabled; otherwise, `false`."}],"pos":[89730,89799],"yaml":true},{"content":"There is no trust relationship with the domain controller that is specified by <code>targetDomainName</code>.","nodes":[{"pos":[0,109],"content":"There is no trust relationship with the domain controller that is specified by <bpt id=\"p1\">&lt;code&gt;</bpt><ph id=\"ph1\">targetDomainName</ph><ept id=\"p1\">&lt;/code&gt;</ept>.","source":"There is no trust relationship with the domain controller that is specified by <code>targetDomainName</code>."}],"pos":[90111,90221],"yaml":true},{"content":"A call to the underlying directory service resulted in an error.","nodes":[{"pos":[0,64],"content":"A call to the underlying directory service resulted in an error.","nodes":[{"content":"A call to the underlying directory service resulted in an error.","pos":[0,64]}]}],"pos":[90415,90480],"yaml":true},{"content":"The target server is either busy or unavailable.","nodes":[{"pos":[0,48],"content":"The target server is either busy or unavailable.","nodes":[{"content":"The target server is either busy or unavailable.","pos":[0,48]}]}],"pos":[90676,90725],"yaml":true},{"content":"<code>targetDomainName</code> is an empty string.","nodes":[{"pos":[0,49],"content":"<ph id=\"ph1\">&lt;code&gt;targetDomainName&lt;/code&gt;</ph> is an empty string.","source":"<code>targetDomainName</code> is an empty string."}],"pos":[90819,90869],"yaml":true},{"content":"<code>targetDomainName</code> is `null`.","nodes":[{"pos":[0,40],"content":"<ph id=\"ph1\">&lt;code&gt;targetDomainName&lt;/code&gt;</ph> is <ph id=\"ph2\">`null`</ph>.","source":"<code>targetDomainName</code> is `null`."}],"pos":[90971,91012],"yaml":true},{"content":"The current object has been disposed.","nodes":[{"pos":[0,37],"content":"The current object has been disposed.","nodes":[{"content":"The current object has been disposed.","pos":[0,37]}]}],"pos":[91118,91156],"yaml":true},{"content":"The specified account does not have permission to perform this operation.","nodes":[{"pos":[0,73],"content":"The specified account does not have permission to perform this operation.","nodes":[{"content":"The specified account does not have permission to perform this operation.","pos":[0,73]}]}],"pos":[91270,91344],"yaml":true},{"content":"Sets the SID filtering state for the specified domain.","nodes":[{"pos":[0,54],"content":"Sets the SID filtering state for the specified domain.","nodes":[{"content":"Sets the SID filtering state for the specified domain.","pos":[0,54]}]}],"pos":[92541,92596],"yaml":true},{"content":"The DNS name of the domain with which the trust exists.","nodes":[{"pos":[0,55],"content":"The DNS name of the domain with which the trust exists.","nodes":[{"content":"The DNS name of the domain with which the trust exists.","pos":[0,55]}]}],"pos":[92781,92837],"yaml":true},{"content":"`true` if SID filtering must be enabled; otherwise, `false`.","nodes":[{"pos":[0,60],"content":"<ph id=\"ph1\">`true`</ph> if SID filtering must be enabled; otherwise, <ph id=\"ph2\">`false`</ph>.","source":"`true` if SID filtering must be enabled; otherwise, `false`."}],"pos":[92900,92963],"yaml":true},{"content":"There is no trust relationship with the domain that is specified by <code>targetDomainName</code>.","nodes":[{"pos":[0,98],"content":"There is no trust relationship with the domain that is specified by <bpt id=\"p1\">&lt;code&gt;</bpt><ph id=\"ph1\">targetDomainName</ph><ept id=\"p1\">&lt;/code&gt;</ept>.","source":"There is no trust relationship with the domain that is specified by <code>targetDomainName</code>."}],"pos":[93264,93363],"yaml":true},{"content":"A call to the underlying directory service resulted in an error.","nodes":[{"pos":[0,64],"content":"A call to the underlying directory service resulted in an error.","nodes":[{"content":"A call to the underlying directory service resulted in an error.","pos":[0,64]}]}],"pos":[93557,93622],"yaml":true},{"content":"The target server is either busy or unavailable.","nodes":[{"pos":[0,48],"content":"The target server is either busy or unavailable.","nodes":[{"content":"The target server is either busy or unavailable.","pos":[0,48]}]}],"pos":[93818,93867],"yaml":true},{"content":"<code>targetDomainName</code> is an empty string.","nodes":[{"pos":[0,49],"content":"<ph id=\"ph1\">&lt;code&gt;targetDomainName&lt;/code&gt;</ph> is an empty string.","source":"<code>targetDomainName</code> is an empty string."}],"pos":[93961,94011],"yaml":true},{"content":"<code>targetDomainName</code> is `null`.","nodes":[{"pos":[0,40],"content":"<ph id=\"ph1\">&lt;code&gt;targetDomainName&lt;/code&gt;</ph> is <ph id=\"ph2\">`null`</ph>.","source":"<code>targetDomainName</code> is `null`."}],"pos":[94113,94154],"yaml":true},{"content":"The current object has been disposed.","nodes":[{"pos":[0,37],"content":"The current object has been disposed.","nodes":[{"content":"The current object has been disposed.","pos":[0,37]}]}],"pos":[94260,94298],"yaml":true},{"content":"Updates the password for the local side of a trust relationship.","nodes":[{"pos":[0,64],"content":"Updates the password for the local side of a trust relationship.","nodes":[{"content":"Updates the password for the local side of a trust relationship.","pos":[0,64]}]}],"pos":[95567,95632],"yaml":true},{"content":"To re-establish the trust, both sides of the trust must be updated with the same password.","nodes":[{"pos":[0,90],"content":"To re-establish the trust, both sides of the trust must be updated with the same password.","nodes":[{"content":"To re-establish the trust, both sides of the trust must be updated with the same password.","pos":[0,90]}]}],"pos":[95643,95734],"yaml":true,"extradata":"MT"},{"content":"The DNS name of the domain with which a trust exists.","nodes":[{"pos":[0,53],"content":"The DNS name of the domain with which a trust exists.","nodes":[{"content":"The DNS name of the domain with which a trust exists.","pos":[0,53]}]}],"pos":[95944,95998],"yaml":true},{"content":"The new password for the trust.","nodes":[{"pos":[0,31],"content":"The new password for the trust.","nodes":[{"content":"The new password for the trust.","pos":[0,31]}]}],"pos":[96070,96102],"yaml":true},{"content":"There is no trust relationship with the domain that is specified by <code>targetDomainName</code>.","nodes":[{"pos":[0,98],"content":"There is no trust relationship with the domain that is specified by <bpt id=\"p1\">&lt;code&gt;</bpt><ph id=\"ph1\">targetDomainName</ph><ept id=\"p1\">&lt;/code&gt;</ept>.","source":"There is no trust relationship with the domain that is specified by <code>targetDomainName</code>."}],"pos":[96416,96515],"yaml":true},{"content":"A call to the underlying directory service resulted in an error.","nodes":[{"pos":[0,64],"content":"A call to the underlying directory service resulted in an error.","nodes":[{"content":"A call to the underlying directory service resulted in an error.","pos":[0,64]}]}],"pos":[96709,96774],"yaml":true},{"content":"The target server is either busy or unavailable.","nodes":[{"pos":[0,48],"content":"The target server is either busy or unavailable.","nodes":[{"content":"The target server is either busy or unavailable.","pos":[0,48]}]}],"pos":[96970,97019],"yaml":true},{"content":"<code>targetDomainName</code> or <code>newTrustPassword</code> is an empty string.","nodes":[{"pos":[0,82],"content":"<ph id=\"ph1\">&lt;code&gt;targetDomainName&lt;/code&gt;</ph> or <ph id=\"ph2\">&lt;code&gt;newTrustPassword&lt;/code&gt;</ph> is an empty string.","source":"<code>targetDomainName</code> or <code>newTrustPassword</code> is an empty string."}],"pos":[97113,97196],"yaml":true},{"content":"<code>targetDomainName</code> or <code>newTrustPassword</code> is `null`.","nodes":[{"pos":[0,73],"content":"<ph id=\"ph1\">&lt;code&gt;targetDomainName&lt;/code&gt;</ph> or <ph id=\"ph2\">&lt;code&gt;newTrustPassword&lt;/code&gt;</ph> is <ph id=\"ph3\">`null`</ph>.","source":"<code>targetDomainName</code> or <code>newTrustPassword</code> is `null`."}],"pos":[97298,97372],"yaml":true},{"content":"The object has been disposed.","nodes":[{"pos":[0,29],"content":"The object has been disposed.","nodes":[{"content":"The object has been disposed.","pos":[0,29]}]}],"pos":[97478,97508],"yaml":true},{"content":"The specified account does not have permission to perform this operation.","nodes":[{"pos":[0,73],"content":"The specified account does not have permission to perform this operation.","nodes":[{"content":"The specified account does not have permission to perform this operation.","pos":[0,73]}]}],"pos":[97622,97696],"yaml":true},{"content":"Updates the password and trust direction for the local side of a trust relationship.","nodes":[{"pos":[0,84],"content":"Updates the password and trust direction for the local side of a trust relationship.","nodes":[{"content":"Updates the password and trust direction for the local side of a trust relationship.","pos":[0,84]}]}],"pos":[99181,99266],"yaml":true},{"content":"The DNS name of the domain with which a trust exists.","nodes":[{"pos":[0,53],"content":"The DNS name of the domain with which a trust exists.","nodes":[{"content":"The DNS name of the domain with which a trust exists.","pos":[0,53]}]}],"pos":[99551,99605],"yaml":true},{"content":"An <xref href=\"System.DirectoryServices.ActiveDirectory.TrustDirection\"></xref> value for the new trust direction for the trust relationship.","nodes":[{"pos":[0,141],"content":"An <ph id=\"ph1\">&lt;xref href=\"System.DirectoryServices.ActiveDirectory.TrustDirection\"&gt;&lt;/xref&gt;</ph> value for the new trust direction for the trust relationship.","source":"An <xref href=\"System.DirectoryServices.ActiveDirectory.TrustDirection\"></xref> value for the new trust direction for the trust relationship."}],"pos":[99720,99862],"yaml":true},{"content":"The new password for the trust.","nodes":[{"pos":[0,31],"content":"The new password for the trust.","nodes":[{"content":"The new password for the trust.","pos":[0,31]}]}],"pos":[99934,99966],"yaml":true},{"content":"There is no trust relationship with the domain that is specified by the <code>targetDomainName</code> parameter.","nodes":[{"pos":[0,112],"content":"There is no trust relationship with the domain that is specified by the <bpt id=\"p1\">&lt;code&gt;</bpt><ph id=\"ph1\">targetDomainName</ph><ept id=\"p1\">&lt;/code&gt;</ept> parameter.","source":"There is no trust relationship with the domain that is specified by the <code>targetDomainName</code> parameter."}],"pos":[100280,100393],"yaml":true},{"content":"A call to the underlying directory service resulted in an error.","nodes":[{"pos":[0,64],"content":"A call to the underlying directory service resulted in an error.","nodes":[{"content":"A call to the underlying directory service resulted in an error.","pos":[0,64]}]}],"pos":[100587,100652],"yaml":true},{"content":"The target server is either busy or unavailable.","nodes":[{"pos":[0,48],"content":"The target server is either busy or unavailable.","nodes":[{"content":"The target server is either busy or unavailable.","pos":[0,48]}]}],"pos":[100848,100897],"yaml":true},{"content":"<code>targetDomainName</code> or <code>newTrustPassword</code> is an empty string.","nodes":[{"pos":[0,82],"content":"<ph id=\"ph1\">&lt;code&gt;targetDomainName&lt;/code&gt;</ph> or <ph id=\"ph2\">&lt;code&gt;newTrustPassword&lt;/code&gt;</ph> is an empty string.","source":"<code>targetDomainName</code> or <code>newTrustPassword</code> is an empty string."}],"pos":[100991,101074],"yaml":true},{"content":"<code>targetDomainName</code> or <code>newTrustPassword</code> are `null`.","nodes":[{"pos":[0,74],"content":"<ph id=\"ph1\">&lt;code&gt;targetDomainName&lt;/code&gt;</ph> or <ph id=\"ph2\">&lt;code&gt;newTrustPassword&lt;/code&gt;</ph> are <ph id=\"ph3\">`null`</ph>.","source":"<code>targetDomainName</code> or <code>newTrustPassword</code> are `null`."}],"pos":[101176,101251],"yaml":true},{"content":"<code>newTrustDirection</code> is not a valid <xref href=\"System.DirectoryServices.ActiveDirectory.TrustDirection\"></xref> value.","nodes":[{"pos":[0,129],"content":"<ph id=\"ph1\">&lt;code&gt;newTrustDirection&lt;/code&gt;</ph> is not a valid <ph id=\"ph2\">&lt;xref href=\"System.DirectoryServices.ActiveDirectory.TrustDirection\"&gt;&lt;/xref&gt;</ph> value.","source":"<code>newTrustDirection</code> is not a valid <xref href=\"System.DirectoryServices.ActiveDirectory.TrustDirection\"></xref> value."}],"pos":[101397,101527],"yaml":true},{"content":"The object has been disposed.","nodes":[{"pos":[0,29],"content":"The object has been disposed.","nodes":[{"content":"The object has been disposed.","pos":[0,29]}]}],"pos":[101633,101663],"yaml":true},{"content":"The specified account does not have permission to perform this operation.","nodes":[{"pos":[0,73],"content":"The specified account does not have permission to perform this operation.","nodes":[{"content":"The specified account does not have permission to perform this operation.","pos":[0,73]}]}],"pos":[101777,101851],"yaml":true},{"content":"Updates the trust direction for an existing trust relationship. The trust directions are updated on both sides of the trust.","nodes":[{"pos":[0,124],"content":"Updates the trust direction for an existing trust relationship. The trust directions are updated on both sides of the trust.","nodes":[{"content":"Updates the trust direction for an existing trust relationship. The trust directions are updated on both sides of the trust.","pos":[0,124],"nodes":[{"content":"Updates the trust direction for an existing trust relationship.","pos":[0,63]},{"content":"The trust directions are updated on both sides of the trust.","pos":[64,124]}]}]}],"pos":[103306,103431],"yaml":true},{"content":"An <xref href=\"System.DirectoryServices.ActiveDirectory.Domain\"></xref> object that represents the domain with which the trust exists.","nodes":[{"pos":[0,134],"content":"An <ph id=\"ph1\">&lt;xref href=\"System.DirectoryServices.ActiveDirectory.Domain\"&gt;&lt;/xref&gt;</ph> object that represents the domain with which the trust exists.","source":"An <xref href=\"System.DirectoryServices.ActiveDirectory.Domain\"></xref> object that represents the domain with which the trust exists."}],"pos":[103747,103882],"yaml":true},{"content":"An <xref href=\"System.DirectoryServices.ActiveDirectory.TrustDirection\"></xref> value that specifies the new trust direction for the trust relationship.","nodes":[{"pos":[0,152],"content":"An <ph id=\"ph1\">&lt;xref href=\"System.DirectoryServices.ActiveDirectory.TrustDirection\"&gt;&lt;/xref&gt;</ph> value that specifies the new trust direction for the trust relationship.","source":"An <xref href=\"System.DirectoryServices.ActiveDirectory.TrustDirection\"></xref> value that specifies the new trust direction for the trust relationship."}],"pos":[103997,104150],"yaml":true},{"content":"There is no trust relationship with the domain that is specified by the <code>targetDomain</code> parameter.","nodes":[{"pos":[0,108],"content":"There is no trust relationship with the domain that is specified by the <bpt id=\"p1\">&lt;code&gt;</bpt><ph id=\"ph1\">targetDomain</ph><ept id=\"p1\">&lt;/code&gt;</ept> parameter.","source":"There is no trust relationship with the domain that is specified by the <code>targetDomain</code> parameter."}],"pos":[104453,104562],"yaml":true},{"content":"A call to the underlying directory service resulted in an error.","nodes":[{"pos":[0,64],"content":"A call to the underlying directory service resulted in an error.","nodes":[{"content":"A call to the underlying directory service resulted in an error.","pos":[0,64]}]}],"pos":[104756,104821],"yaml":true},{"content":"The target server is either busy or unavailable.","nodes":[{"pos":[0,48],"content":"The target server is either busy or unavailable.","nodes":[{"content":"The target server is either busy or unavailable.","pos":[0,48]}]}],"pos":[105017,105066],"yaml":true},{"content":"<code>targetDomain</code> is `null`.","nodes":[{"pos":[0,36],"content":"<ph id=\"ph1\">&lt;code&gt;targetDomain&lt;/code&gt;</ph> is <ph id=\"ph2\">`null`</ph>.","source":"<code>targetDomain</code> is `null`."}],"pos":[105168,105205],"yaml":true},{"content":"<code>newTrustDirection</code> is not a valid <xref href=\"System.DirectoryServices.ActiveDirectory.TrustDirection\"></xref> value.","nodes":[{"pos":[0,129],"content":"<ph id=\"ph1\">&lt;code&gt;newTrustDirection&lt;/code&gt;</ph> is not a valid <ph id=\"ph2\">&lt;xref href=\"System.DirectoryServices.ActiveDirectory.TrustDirection\"&gt;&lt;/xref&gt;</ph> value.","source":"<code>newTrustDirection</code> is not a valid <xref href=\"System.DirectoryServices.ActiveDirectory.TrustDirection\"></xref> value."}],"pos":[105351,105481],"yaml":true},{"content":"The object has been disposed.","nodes":[{"pos":[0,29],"content":"The object has been disposed.","nodes":[{"content":"The object has been disposed.","pos":[0,29]}]}],"pos":[105587,105617],"yaml":true},{"content":"The specified account does not have permission to perform this operation.","nodes":[{"pos":[0,73],"content":"The specified account does not have permission to perform this operation.","nodes":[{"content":"The specified account does not have permission to perform this operation.","pos":[0,73]}]}],"pos":[105731,105805],"yaml":true},{"content":"Verifies that a previously established outbound trust with the specified domain is valid.","nodes":[{"pos":[0,89],"content":"Verifies that a previously established outbound trust with the specified domain is valid.","nodes":[{"content":"Verifies that a previously established outbound trust with the specified domain is valid.","pos":[0,89]}]}],"pos":[106990,107080],"yaml":true},{"content":"This method is used to verify that a trust relationship has been fully established. The trust is not established until both sides of the trust have been created.","nodes":[{"pos":[0,161],"content":"This method is used to verify that a trust relationship has been fully established. The trust is not established until both sides of the trust have been created.","nodes":[{"content":"This method is used to verify that a trust relationship has been fully established. The trust is not established until both sides of the trust have been created.","pos":[0,161],"nodes":[{"content":"This method is used to verify that a trust relationship has been fully established.","pos":[0,83]},{"content":"The trust is not established until both sides of the trust have been created.","pos":[84,161]}]}]}],"pos":[107091,107253],"yaml":true,"extradata":"MT"},{"content":"The DNS name of the domain with which the trust exists.","nodes":[{"pos":[0,55],"content":"The DNS name of the domain with which the trust exists.","nodes":[{"content":"The DNS name of the domain with which the trust exists.","pos":[0,55]}]}],"pos":[107435,107491],"yaml":true},{"content":"There is no outbound trust relationship with the domain that is specified by <code>targetDomainName</code>.","nodes":[{"pos":[0,107],"content":"There is no outbound trust relationship with the domain that is specified by <bpt id=\"p1\">&lt;code&gt;</bpt><ph id=\"ph1\">targetDomainName</ph><ept id=\"p1\">&lt;/code&gt;</ept>.","source":"There is no outbound trust relationship with the domain that is specified by <code>targetDomainName</code>."}],"pos":[107802,107910],"yaml":true},{"content":"A call to the underlying directory service resulted in an error.","nodes":[{"pos":[0,64],"content":"A call to the underlying directory service resulted in an error.","nodes":[{"content":"A call to the underlying directory service resulted in an error.","pos":[0,64]}]}],"pos":[108104,108169],"yaml":true},{"content":"The target server is either busy or unavailable.","nodes":[{"pos":[0,48],"content":"The target server is either busy or unavailable.","nodes":[{"content":"The target server is either busy or unavailable.","pos":[0,48]}]}],"pos":[108365,108414],"yaml":true},{"content":"<code>targetDomainName</code> is an empty string.","nodes":[{"pos":[0,49],"content":"<ph id=\"ph1\">&lt;code&gt;targetDomainName&lt;/code&gt;</ph> is an empty string.","source":"<code>targetDomainName</code> is an empty string."}],"pos":[108508,108558],"yaml":true},{"content":"<code>targetDomainName</code> is `null`.","nodes":[{"pos":[0,40],"content":"<ph id=\"ph1\">&lt;code&gt;targetDomainName&lt;/code&gt;</ph> is <ph id=\"ph2\">`null`</ph>.","source":"<code>targetDomainName</code> is `null`."}],"pos":[108660,108701],"yaml":true},{"content":"The object has been disposed.","nodes":[{"pos":[0,29],"content":"The object has been disposed.","nodes":[{"content":"The object has been disposed.","pos":[0,29]}]}],"pos":[108807,108837],"yaml":true},{"content":"The specified account does not have permission to perform this operation.","nodes":[{"pos":[0,73],"content":"The specified account does not have permission to perform this operation.","nodes":[{"content":"The specified account does not have permission to perform this operation.","pos":[0,73]}]}],"pos":[108951,109025],"yaml":true},{"content":"Verifies that a previously established trust with the specified domain is valid.","nodes":[{"pos":[0,80],"content":"Verifies that a previously established trust with the specified domain is valid.","nodes":[{"content":"Verifies that a previously established trust with the specified domain is valid.","pos":[0,80]}]}],"pos":[110480,110561],"yaml":true},{"content":"This method verifies that a trust relationship has been fully established. The trust is not established until both sides of the trust have been created.","nodes":[{"pos":[0,152],"content":"This method verifies that a trust relationship has been fully established. The trust is not established until both sides of the trust have been created.","nodes":[{"content":"This method verifies that a trust relationship has been fully established. The trust is not established until both sides of the trust have been created.","pos":[0,152],"nodes":[{"content":"This method verifies that a trust relationship has been fully established.","pos":[0,74]},{"content":"The trust is not established until both sides of the trust have been created.","pos":[75,152]}]}]}],"pos":[110572,110725],"yaml":true,"extradata":"MT"},{"content":"A <xref href=\"System.DirectoryServices.ActiveDirectory.Domain\"></xref> object that represents the domain with which the trust exists.","nodes":[{"pos":[0,133],"content":"A <ph id=\"ph1\">&lt;xref href=\"System.DirectoryServices.ActiveDirectory.Domain\"&gt;&lt;/xref&gt;</ph> object that represents the domain with which the trust exists.","source":"A <xref href=\"System.DirectoryServices.ActiveDirectory.Domain\"></xref> object that represents the domain with which the trust exists."}],"pos":[111033,111167],"yaml":true},{"content":"A <xref href=\"System.DirectoryServices.ActiveDirectory.TrustDirection\"></xref> value that specifies the direction, relative to this domain, of the trust.","nodes":[{"pos":[0,153],"content":"A <ph id=\"ph1\">&lt;xref href=\"System.DirectoryServices.ActiveDirectory.TrustDirection\"&gt;&lt;/xref&gt;</ph> value that specifies the direction, relative to this domain, of the trust.","source":"A <xref href=\"System.DirectoryServices.ActiveDirectory.TrustDirection\"></xref> value that specifies the direction, relative to this domain, of the trust."}],"pos":[111274,111428],"yaml":true},{"content":"There is no trust relationship with the domain that is specified by the <code>targetDomain</code> parameter, or the target domain does not have the trust direction that is specified by the <code>direction</code> parameter.","nodes":[{"pos":[0,222],"content":"There is no trust relationship with the domain that is specified by the <bpt id=\"p1\">&lt;code&gt;</bpt><ph id=\"ph1\">targetDomain</ph><ept id=\"p1\">&lt;/code&gt;</ept> parameter, or the target domain does not have the trust direction that is specified by the <bpt id=\"p2\">&lt;code&gt;</bpt><ph id=\"ph2\">direction</ph><ept id=\"p2\">&lt;/code&gt;</ept> parameter.","source":"There is no trust relationship with the domain that is specified by the <code>targetDomain</code> parameter, or the target domain does not have the trust direction that is specified by the <code>direction</code> parameter."}],"pos":[111731,111954],"yaml":true},{"content":"A call to the underlying directory service resulted in an error.","nodes":[{"pos":[0,64],"content":"A call to the underlying directory service resulted in an error.","nodes":[{"content":"A call to the underlying directory service resulted in an error.","pos":[0,64]}]}],"pos":[112148,112213],"yaml":true},{"content":"The target server is either busy or unavailable.","nodes":[{"pos":[0,48],"content":"The target server is either busy or unavailable.","nodes":[{"content":"The target server is either busy or unavailable.","pos":[0,48]}]}],"pos":[112409,112458],"yaml":true},{"content":"<code>targetDomain</code> is `null`.","nodes":[{"pos":[0,36],"content":"<ph id=\"ph1\">&lt;code&gt;targetDomain&lt;/code&gt;</ph> is <ph id=\"ph2\">`null`</ph>.","source":"<code>targetDomain</code> is `null`."}],"pos":[112560,112597],"yaml":true},{"content":"<code>direction</code> is not a valid <xref href=\"System.DirectoryServices.ActiveDirectory.TrustDirection\"></xref> value.","nodes":[{"pos":[0,121],"content":"<ph id=\"ph1\">&lt;code&gt;direction&lt;/code&gt;</ph> is not a valid <ph id=\"ph2\">&lt;xref href=\"System.DirectoryServices.ActiveDirectory.TrustDirection\"&gt;&lt;/xref&gt;</ph> value.","source":"<code>direction</code> is not a valid <xref href=\"System.DirectoryServices.ActiveDirectory.TrustDirection\"></xref> value."}],"pos":[112743,112865],"yaml":true},{"content":"The object has been disposed.","nodes":[{"pos":[0,29],"content":"The object has been disposed.","nodes":[{"content":"The object has been disposed.","pos":[0,29]}]}],"pos":[112971,113001],"yaml":true},{"content":"The specified account does not have permission to perform this operation.","nodes":[{"pos":[0,73],"content":"The specified account does not have permission to perform this operation.","nodes":[{"content":"The specified account does not have permission to perform this operation.","pos":[0,73]}]}],"pos":[113115,113189],"yaml":true}],"content":"### YamlMime:ManagedReference\nitems:\n- uid: System.DirectoryServices.ActiveDirectory.Domain\n  commentId: T:System.DirectoryServices.ActiveDirectory.Domain\n  id: Domain\n  children:\n  - System.DirectoryServices.ActiveDirectory.Domain.Children\n  - System.DirectoryServices.ActiveDirectory.Domain.CreateLocalSideOfTrustRelationship(System.String,System.DirectoryServices.ActiveDirectory.TrustDirection,System.String)\n  - System.DirectoryServices.ActiveDirectory.Domain.CreateTrustRelationship(System.DirectoryServices.ActiveDirectory.Domain,System.DirectoryServices.ActiveDirectory.TrustDirection)\n  - System.DirectoryServices.ActiveDirectory.Domain.DeleteLocalSideOfTrustRelationship(System.String)\n  - System.DirectoryServices.ActiveDirectory.Domain.DeleteTrustRelationship(System.DirectoryServices.ActiveDirectory.Domain)\n  - System.DirectoryServices.ActiveDirectory.Domain.DomainControllers\n  - System.DirectoryServices.ActiveDirectory.Domain.DomainMode\n  - System.DirectoryServices.ActiveDirectory.Domain.DomainModeLevel\n  - System.DirectoryServices.ActiveDirectory.Domain.FindAllDiscoverableDomainControllers(System.String)\n  - System.DirectoryServices.ActiveDirectory.Domain.FindAllDiscoverableDomainControllers\n  - System.DirectoryServices.ActiveDirectory.Domain.FindAllDomainControllers\n  - System.DirectoryServices.ActiveDirectory.Domain.FindAllDomainControllers(System.String)\n  - System.DirectoryServices.ActiveDirectory.Domain.FindDomainController\n  - System.DirectoryServices.ActiveDirectory.Domain.FindDomainController(System.DirectoryServices.ActiveDirectory.LocatorOptions)\n  - System.DirectoryServices.ActiveDirectory.Domain.FindDomainController(System.String)\n  - System.DirectoryServices.ActiveDirectory.Domain.FindDomainController(System.String,System.DirectoryServices.ActiveDirectory.LocatorOptions)\n  - System.DirectoryServices.ActiveDirectory.Domain.Forest\n  - System.DirectoryServices.ActiveDirectory.Domain.GetAllTrustRelationships\n  - System.DirectoryServices.ActiveDirectory.Domain.GetComputerDomain\n  - System.DirectoryServices.ActiveDirectory.Domain.GetCurrentDomain\n  - System.DirectoryServices.ActiveDirectory.Domain.GetDirectoryEntry\n  - System.DirectoryServices.ActiveDirectory.Domain.GetDomain(System.DirectoryServices.ActiveDirectory.DirectoryContext)\n  - System.DirectoryServices.ActiveDirectory.Domain.GetSelectiveAuthenticationStatus(System.String)\n  - System.DirectoryServices.ActiveDirectory.Domain.GetSidFilteringStatus(System.String)\n  - System.DirectoryServices.ActiveDirectory.Domain.GetTrustRelationship(System.String)\n  - System.DirectoryServices.ActiveDirectory.Domain.InfrastructureRoleOwner\n  - System.DirectoryServices.ActiveDirectory.Domain.Parent\n  - System.DirectoryServices.ActiveDirectory.Domain.PdcRoleOwner\n  - System.DirectoryServices.ActiveDirectory.Domain.RaiseDomainFunctionality(System.DirectoryServices.ActiveDirectory.DomainMode)\n  - System.DirectoryServices.ActiveDirectory.Domain.RaiseDomainFunctionalityLevel(System.Int32)\n  - System.DirectoryServices.ActiveDirectory.Domain.RepairTrustRelationship(System.DirectoryServices.ActiveDirectory.Domain)\n  - System.DirectoryServices.ActiveDirectory.Domain.RidRoleOwner\n  - System.DirectoryServices.ActiveDirectory.Domain.SetSelectiveAuthenticationStatus(System.String,System.Boolean)\n  - System.DirectoryServices.ActiveDirectory.Domain.SetSidFilteringStatus(System.String,System.Boolean)\n  - System.DirectoryServices.ActiveDirectory.Domain.UpdateLocalSideOfTrustRelationship(System.String,System.String)\n  - System.DirectoryServices.ActiveDirectory.Domain.UpdateLocalSideOfTrustRelationship(System.String,System.DirectoryServices.ActiveDirectory.TrustDirection,System.String)\n  - System.DirectoryServices.ActiveDirectory.Domain.UpdateTrustRelationship(System.DirectoryServices.ActiveDirectory.Domain,System.DirectoryServices.ActiveDirectory.TrustDirection)\n  - System.DirectoryServices.ActiveDirectory.Domain.VerifyOutboundTrustRelationship(System.String)\n  - System.DirectoryServices.ActiveDirectory.Domain.VerifyTrustRelationship(System.DirectoryServices.ActiveDirectory.Domain,System.DirectoryServices.ActiveDirectory.TrustDirection)\n  langs:\n  - csharp\n  name: Domain\n  nameWithType: Domain\n  fullName: System.DirectoryServices.ActiveDirectory.Domain\n  type: Class\n  assemblies:\n  - System.DirectoryServices\n  namespace: System.DirectoryServices.ActiveDirectory\n  summary: The <xref href=\"System.DirectoryServices.ActiveDirectory.Domain\"></xref> class represents an Active Directory domain.\n  syntax:\n    content: 'public class Domain : System.DirectoryServices.ActiveDirectory.ActiveDirectoryPartition'\n  inheritance:\n  - System.Object\n  - System.DirectoryServices.ActiveDirectory.ActiveDirectoryPartition\n  implements: []\n  inheritedMembers:\n  - System.DirectoryServices.ActiveDirectory.ActiveDirectoryPartition.Dispose\n  - System.DirectoryServices.ActiveDirectory.ActiveDirectoryPartition.Dispose(System.Boolean)\n  - System.DirectoryServices.ActiveDirectory.ActiveDirectoryPartition.Name\n  - System.DirectoryServices.ActiveDirectory.ActiveDirectoryPartition.ToString\n  - System.Object.Equals(System.Object)\n  - System.Object.Equals(System.Object,System.Object)\n  - System.Object.GetHashCode\n  - System.Object.GetType\n  - System.Object.MemberwiseClone\n  - System.Object.ReferenceEquals(System.Object,System.Object)\n  version:\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  monikers:\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.DirectoryServices.ActiveDirectory/Domain.xml\n  author: BrucePerlerMS\n  ms.author: bruceper\n  manager: mbaldwin\n- uid: System.DirectoryServices.ActiveDirectory.Domain.Children\n  commentId: P:System.DirectoryServices.ActiveDirectory.Domain.Children\n  id: Children\n  parent: System.DirectoryServices.ActiveDirectory.Domain\n  langs:\n  - csharp\n  name: Children\n  nameWithType: Domain.Children\n  fullName: Domain.Children\n  type: Property\n  assemblies:\n  - System.DirectoryServices\n  namespace: System.DirectoryServices.ActiveDirectory\n  summary: Gets the domains that are children of this domain.\n  syntax:\n    content: public System.DirectoryServices.ActiveDirectory.DomainCollection Children { get; }\n    return:\n      type: System.DirectoryServices.ActiveDirectory.DomainCollection\n      description: An <xref href=\"System.DirectoryServices.ActiveDirectory.DomainCollection\"></xref> object that contains the child domains.\n  overload: System.DirectoryServices.ActiveDirectory.Domain.Children*\n  exceptions:\n  - type: System.ObjectDisposedException\n    commentId: T:System.ObjectDisposedException\n    description: The object has been disposed.\n  version:\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  monikers:\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.DirectoryServices.ActiveDirectory/Domain.xml\n  author: BrucePerlerMS\n  ms.author: bruceper\n  manager: mbaldwin\n- uid: System.DirectoryServices.ActiveDirectory.Domain.CreateLocalSideOfTrustRelationship(System.String,System.DirectoryServices.ActiveDirectory.TrustDirection,System.String)\n  commentId: M:System.DirectoryServices.ActiveDirectory.Domain.CreateLocalSideOfTrustRelationship(System.String,System.DirectoryServices.ActiveDirectory.TrustDirection,System.String)\n  id: CreateLocalSideOfTrustRelationship(System.String,System.DirectoryServices.ActiveDirectory.TrustDirection,System.String)\n  parent: System.DirectoryServices.ActiveDirectory.Domain\n  langs:\n  - csharp\n  name: CreateLocalSideOfTrustRelationship(String, TrustDirection, String)\n  nameWithType: Domain.CreateLocalSideOfTrustRelationship(String, TrustDirection, String)\n  fullName: Domain.CreateLocalSideOfTrustRelationship(String, TrustDirection, String)\n  type: Method\n  assemblies:\n  - System.DirectoryServices\n  namespace: System.DirectoryServices.ActiveDirectory\n  summary: Creates the local side of a trust relationship with the specified domain.\n  remarks: \"This method creates one side of a trust relationship. The trust is not established until both sides of the trust have been created.  \\n  \\n The `trustPassword` parameter associates a password with the created trust. When the other side of the trust is created, the same password is provided and the two local trusts are then bound to each other.  \\n  \\n To programmatically create both sides of a trust relationship in a single method call, use the <xref:System.DirectoryServices.ActiveDirectory.Domain.CreateTrustRelationship%2A?displayProperty=fullName> method.\"\n  syntax:\n    content: public void CreateLocalSideOfTrustRelationship (string targetDomainName, System.DirectoryServices.ActiveDirectory.TrustDirection direction, string trustPassword);\n    parameters:\n    - id: targetDomainName\n      type: System.String\n      description: The DNS name of the domain that the trust is created with.\n    - id: direction\n      type: System.DirectoryServices.ActiveDirectory.TrustDirection\n      description: One of the <xref href=\"System.DirectoryServices.ActiveDirectory.TrustDirection\"></xref> members that determines the direction of the trust, relative to this domain.\n    - id: trustPassword\n      type: System.String\n      description: The password for the trust.\n  overload: System.DirectoryServices.ActiveDirectory.Domain.CreateLocalSideOfTrustRelationship*\n  exceptions:\n  - type: System.DirectoryServices.ActiveDirectory.ActiveDirectoryObjectExistsException\n    commentId: T:System.DirectoryServices.ActiveDirectory.ActiveDirectoryObjectExistsException\n    description: The trust relationship already exists.\n  - type: System.DirectoryServices.ActiveDirectory.ActiveDirectoryOperationException\n    commentId: T:System.DirectoryServices.ActiveDirectory.ActiveDirectoryOperationException\n    description: A call to the underlying directory service resulted in an error.\n  - type: System.DirectoryServices.ActiveDirectory.ActiveDirectoryServerDownException\n    commentId: T:System.DirectoryServices.ActiveDirectory.ActiveDirectoryServerDownException\n    description: The target server is either busy or unavailable.\n  - type: System.ArgumentException\n    commentId: T:System.ArgumentException\n    description: <code>targetDomainName</code> or <code>trustPassword</code> is empty.\n  - type: System.ArgumentNullException\n    commentId: T:System.ArgumentNullException\n    description: <code>targetDomainName</code> or <code>trustPassword</code> is `null`.\n  - type: System.ComponentModel.InvalidEnumArgumentException\n    commentId: T:System.ComponentModel.InvalidEnumArgumentException\n    description: <code>direction</code> is not a valid <xref href=\"System.DirectoryServices.ActiveDirectory.TrustDirection\"></xref> value.\n  - type: System.ObjectDisposedException\n    commentId: T:System.ObjectDisposedException\n    description: The object has been disposed.\n  - type: System.UnauthorizedAccessException\n    commentId: T:System.UnauthorizedAccessException\n    description: The specified account does not have permission to perform this operation.\n  version:\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  monikers:\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.DirectoryServices.ActiveDirectory/Domain.xml\n  author: BrucePerlerMS\n  ms.author: bruceper\n  manager: mbaldwin\n- uid: System.DirectoryServices.ActiveDirectory.Domain.CreateTrustRelationship(System.DirectoryServices.ActiveDirectory.Domain,System.DirectoryServices.ActiveDirectory.TrustDirection)\n  commentId: M:System.DirectoryServices.ActiveDirectory.Domain.CreateTrustRelationship(System.DirectoryServices.ActiveDirectory.Domain,System.DirectoryServices.ActiveDirectory.TrustDirection)\n  id: CreateTrustRelationship(System.DirectoryServices.ActiveDirectory.Domain,System.DirectoryServices.ActiveDirectory.TrustDirection)\n  parent: System.DirectoryServices.ActiveDirectory.Domain\n  langs:\n  - csharp\n  name: CreateTrustRelationship(Domain, TrustDirection)\n  nameWithType: Domain.CreateTrustRelationship(Domain, TrustDirection)\n  fullName: Domain.CreateTrustRelationship(Domain, TrustDirection)\n  type: Method\n  assemblies:\n  - System.DirectoryServices\n  namespace: System.DirectoryServices.ActiveDirectory\n  summary: Creates both sides of a trust relationship with the specified domain.\n  remarks: This method creates both sides of a trust relationship with a single method call. The <xref:System.DirectoryServices.ActiveDirectory.Domain.CreateLocalSideOfTrustRelationship%2A?displayProperty=fullName> method is used to create only one side of a trust.\n  syntax:\n    content: public void CreateTrustRelationship (System.DirectoryServices.ActiveDirectory.Domain targetDomain, System.DirectoryServices.ActiveDirectory.TrustDirection direction);\n    parameters:\n    - id: targetDomain\n      type: System.DirectoryServices.ActiveDirectory.Domain\n      description: A <xref href=\"System.DirectoryServices.ActiveDirectory.Domain\"></xref> object that represents the domain that the trust is being created with.\n    - id: direction\n      type: System.DirectoryServices.ActiveDirectory.TrustDirection\n      description: One of the <xref href=\"System.DirectoryServices.ActiveDirectory.TrustDirection\"></xref> members that determines the direction of the trust, relative to this domain.\n  overload: System.DirectoryServices.ActiveDirectory.Domain.CreateTrustRelationship*\n  exceptions:\n  - type: System.DirectoryServices.ActiveDirectory.ActiveDirectoryObjectExistsException\n    commentId: T:System.DirectoryServices.ActiveDirectory.ActiveDirectoryObjectExistsException\n    description: The trust relationship already exists.\n  - type: System.DirectoryServices.ActiveDirectory.ActiveDirectoryOperationException\n    commentId: T:System.DirectoryServices.ActiveDirectory.ActiveDirectoryOperationException\n    description: A call to the underlying directory service resulted in an error.\n  - type: System.DirectoryServices.ActiveDirectory.ActiveDirectoryServerDownException\n    commentId: T:System.DirectoryServices.ActiveDirectory.ActiveDirectoryServerDownException\n    description: The target server is either busy or unavailable.\n  - type: System.ArgumentNullException\n    commentId: T:System.ArgumentNullException\n    description: <code>targetDomain</code> is `null`.\n  - type: System.ComponentModel.InvalidEnumArgumentException\n    commentId: T:System.ComponentModel.InvalidEnumArgumentException\n    description: <code>direction</code> is not a valid <xref href=\"System.DirectoryServices.ActiveDirectory.TrustDirection\"></xref> value.\n  - type: System.ObjectDisposedException\n    commentId: T:System.ObjectDisposedException\n    description: The object has been disposed.\n  - type: System.UnauthorizedAccessException\n    commentId: T:System.UnauthorizedAccessException\n    description: The specified account does not have permission to perform this operation.\n  version:\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  monikers:\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.DirectoryServices.ActiveDirectory/Domain.xml\n  author: BrucePerlerMS\n  ms.author: bruceper\n  manager: mbaldwin\n- uid: System.DirectoryServices.ActiveDirectory.Domain.DeleteLocalSideOfTrustRelationship(System.String)\n  commentId: M:System.DirectoryServices.ActiveDirectory.Domain.DeleteLocalSideOfTrustRelationship(System.String)\n  id: DeleteLocalSideOfTrustRelationship(System.String)\n  parent: System.DirectoryServices.ActiveDirectory.Domain\n  langs:\n  - csharp\n  name: DeleteLocalSideOfTrustRelationship(String)\n  nameWithType: Domain.DeleteLocalSideOfTrustRelationship(String)\n  fullName: Domain.DeleteLocalSideOfTrustRelationship(String)\n  type: Method\n  assemblies:\n  - System.DirectoryServices\n  namespace: System.DirectoryServices.ActiveDirectory\n  summary: Deletes the local side of a trust relationship.\n  remarks: \"When one side of a trust relationship is deleted, the trust longer exists.  \\n  \\n To delete both sides of a trust relationship with one method call, use the <xref:System.DirectoryServices.ActiveDirectory.Domain.DeleteTrustRelationship%2A?displayProperty=fullName> method.\"\n  syntax:\n    content: public void DeleteLocalSideOfTrustRelationship (string targetDomainName);\n    parameters:\n    - id: targetDomainName\n      type: System.String\n      description: The DNS name of the domain that the trust exists with.\n  overload: System.DirectoryServices.ActiveDirectory.Domain.DeleteLocalSideOfTrustRelationship*\n  exceptions:\n  - type: System.DirectoryServices.ActiveDirectory.ActiveDirectoryObjectNotFoundException\n    commentId: T:System.DirectoryServices.ActiveDirectory.ActiveDirectoryObjectNotFoundException\n    description: There is no trust relationship with the <xref href=\"System.DirectoryServices.ActiveDirectory.Domain\"></xref> that is specified by the <code>targetDomainName</code> parameter.\n  - type: System.DirectoryServices.ActiveDirectory.ActiveDirectoryOperationException\n    commentId: T:System.DirectoryServices.ActiveDirectory.ActiveDirectoryOperationException\n    description: A call to the underlying directory service resulted in an error.\n  - type: System.DirectoryServices.ActiveDirectory.ActiveDirectoryServerDownException\n    commentId: T:System.DirectoryServices.ActiveDirectory.ActiveDirectoryServerDownException\n    description: The target server is either busy or unavailable.\n  - type: System.ArgumentException\n    commentId: T:System.ArgumentException\n    description: <code>targetDomainName</code> is an empty string.\n  - type: System.ArgumentNullException\n    commentId: T:System.ArgumentNullException\n    description: <code>targetDomainName</code> is `null`.\n  - type: System.ObjectDisposedException\n    commentId: T:System.ObjectDisposedException\n    description: The object has been disposed.\n  - type: System.UnauthorizedAccessException\n    commentId: T:System.UnauthorizedAccessException\n    description: The specified account does not have permission to perform this operation.\n  version:\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  monikers:\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.DirectoryServices.ActiveDirectory/Domain.xml\n  author: BrucePerlerMS\n  ms.author: bruceper\n  manager: mbaldwin\n- uid: System.DirectoryServices.ActiveDirectory.Domain.DeleteTrustRelationship(System.DirectoryServices.ActiveDirectory.Domain)\n  commentId: M:System.DirectoryServices.ActiveDirectory.Domain.DeleteTrustRelationship(System.DirectoryServices.ActiveDirectory.Domain)\n  id: DeleteTrustRelationship(System.DirectoryServices.ActiveDirectory.Domain)\n  parent: System.DirectoryServices.ActiveDirectory.Domain\n  langs:\n  - csharp\n  name: DeleteTrustRelationship(Domain)\n  nameWithType: Domain.DeleteTrustRelationship(Domain)\n  fullName: Domain.DeleteTrustRelationship(Domain)\n  type: Method\n  assemblies:\n  - System.DirectoryServices\n  namespace: System.DirectoryServices.ActiveDirectory\n  summary: Deletes both sides of a trust relationship.\n  remarks: To delete only one side of a trust relationship, use the <xref:System.DirectoryServices.ActiveDirectory.Domain.DeleteLocalSideOfTrustRelationship%2A?displayProperty=fullName> method.\n  syntax:\n    content: public void DeleteTrustRelationship (System.DirectoryServices.ActiveDirectory.Domain targetDomain);\n    parameters:\n    - id: targetDomain\n      type: System.DirectoryServices.ActiveDirectory.Domain\n      description: A <xref href=\"System.DirectoryServices.ActiveDirectory.Domain\"></xref> object that represents the domain that the trust exists with.\n  overload: System.DirectoryServices.ActiveDirectory.Domain.DeleteTrustRelationship*\n  exceptions:\n  - type: System.DirectoryServices.ActiveDirectory.ActiveDirectoryObjectNotFoundException\n    commentId: T:System.DirectoryServices.ActiveDirectory.ActiveDirectoryObjectNotFoundException\n    description: There is no trust relationship with the specified <xref href=\"System.DirectoryServices.ActiveDirectory.Domain\"></xref>.\n  - type: System.DirectoryServices.ActiveDirectory.ActiveDirectoryOperationException\n    commentId: T:System.DirectoryServices.ActiveDirectory.ActiveDirectoryOperationException\n    description: A call to the underlying directory service resulted in an error.\n  - type: System.DirectoryServices.ActiveDirectory.ActiveDirectoryServerDownException\n    commentId: T:System.DirectoryServices.ActiveDirectory.ActiveDirectoryServerDownException\n    description: The target server is either busy or unavailable.\n  - type: System.ArgumentNullException\n    commentId: T:System.ArgumentNullException\n    description: <code>targetDomain</code> is `null`.\n  - type: System.ObjectDisposedException\n    commentId: T:System.ObjectDisposedException\n    description: The object has been disposed.\n  - type: System.UnauthorizedAccessException\n    commentId: T:System.UnauthorizedAccessException\n    description: The specified account does not have permission to perform this operation.\n  version:\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  monikers:\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.DirectoryServices.ActiveDirectory/Domain.xml\n  author: BrucePerlerMS\n  ms.author: bruceper\n  manager: mbaldwin\n- uid: System.DirectoryServices.ActiveDirectory.Domain.DomainControllers\n  commentId: P:System.DirectoryServices.ActiveDirectory.Domain.DomainControllers\n  id: DomainControllers\n  parent: System.DirectoryServices.ActiveDirectory.Domain\n  langs:\n  - csharp\n  name: DomainControllers\n  nameWithType: Domain.DomainControllers\n  fullName: Domain.DomainControllers\n  type: Property\n  assemblies:\n  - System.DirectoryServices\n  namespace: System.DirectoryServices.ActiveDirectory\n  summary: Gets the domain controllers in this domain.\n  syntax:\n    content: public System.DirectoryServices.ActiveDirectory.DomainControllerCollection DomainControllers { get; }\n    return:\n      type: System.DirectoryServices.ActiveDirectory.DomainControllerCollection\n      description: A <xref href=\"System.DirectoryServices.ActiveDirectory.DomainControllerCollection\"></xref> object that contains the domain controllers in this domain.\n  overload: System.DirectoryServices.ActiveDirectory.Domain.DomainControllers*\n  exceptions:\n  - type: System.ObjectDisposedException\n    commentId: T:System.ObjectDisposedException\n    description: The object has been disposed.\n  version:\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  monikers:\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.DirectoryServices.ActiveDirectory/Domain.xml\n  author: BrucePerlerMS\n  ms.author: bruceper\n  manager: mbaldwin\n- uid: System.DirectoryServices.ActiveDirectory.Domain.DomainMode\n  commentId: P:System.DirectoryServices.ActiveDirectory.Domain.DomainMode\n  id: DomainMode\n  parent: System.DirectoryServices.ActiveDirectory.Domain\n  langs:\n  - csharp\n  name: DomainMode\n  nameWithType: Domain.DomainMode\n  fullName: Domain.DomainMode\n  type: Property\n  assemblies:\n  - System.DirectoryServices\n  namespace: System.DirectoryServices.ActiveDirectory\n  summary: Gets the mode that this domain is operating in.\n  syntax:\n    content: public System.DirectoryServices.ActiveDirectory.DomainMode DomainMode { get; }\n    return:\n      type: System.DirectoryServices.ActiveDirectory.DomainMode\n      description: One of the <xref href=\"System.DirectoryServices.ActiveDirectory.DomainMode\"></xref> values that indicates the mode that this domain is operating in.\n  overload: System.DirectoryServices.ActiveDirectory.Domain.DomainMode*\n  exceptions:\n  - type: System.ObjectDisposedException\n    commentId: T:System.ObjectDisposedException\n    description: The object has been disposed.\n  version:\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  monikers:\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.DirectoryServices.ActiveDirectory/Domain.xml\n  author: BrucePerlerMS\n  ms.author: bruceper\n  manager: mbaldwin\n- uid: System.DirectoryServices.ActiveDirectory.Domain.DomainModeLevel\n  commentId: P:System.DirectoryServices.ActiveDirectory.Domain.DomainModeLevel\n  id: DomainModeLevel\n  parent: System.DirectoryServices.ActiveDirectory.Domain\n  langs:\n  - csharp\n  name: DomainModeLevel\n  nameWithType: Domain.DomainModeLevel\n  fullName: Domain.DomainModeLevel\n  type: Property\n  assemblies:\n  - System.DirectoryServices\n  namespace: System.DirectoryServices.ActiveDirectory\n  summary: Gets the mode level that this domain is operating in.\n  syntax:\n    content: public int DomainModeLevel { get; }\n    return:\n      type: System.Int32\n      description: The domain mode level.\n  overload: System.DirectoryServices.ActiveDirectory.Domain.DomainModeLevel*\n  exceptions: []\n  version:\n  - netcore-2.0\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  monikers:\n  - netcore-2.0\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.DirectoryServices.ActiveDirectory/Domain.xml\n  author: BrucePerlerMS\n  ms.author: bruceper\n  manager: mbaldwin\n- uid: System.DirectoryServices.ActiveDirectory.Domain.FindAllDiscoverableDomainControllers(System.String)\n  commentId: M:System.DirectoryServices.ActiveDirectory.Domain.FindAllDiscoverableDomainControllers(System.String)\n  id: FindAllDiscoverableDomainControllers(System.String)\n  parent: System.DirectoryServices.ActiveDirectory.Domain\n  langs:\n  - csharp\n  name: FindAllDiscoverableDomainControllers(String)\n  nameWithType: Domain.FindAllDiscoverableDomainControllers(String)\n  fullName: Domain.FindAllDiscoverableDomainControllers(String)\n  type: Method\n  assemblies:\n  - System.DirectoryServices\n  namespace: System.DirectoryServices.ActiveDirectory\n  summary: Finds all of the discoverable domain controllers in this domain that are also in the specified site.\n  remarks: \"You can find discoverable domain controllers by querying DNS SRV records.  If a domain controller does not register an SRV record for the specified site, it will not be returned by this method, even if the domain controller is physically located within that site.  \\n  \\n All domain controllers that register an SRV record for the specified site will be returned by this method, even if they are not physically located within that site.\"\n  syntax:\n    content: public System.DirectoryServices.ActiveDirectory.DomainControllerCollection FindAllDiscoverableDomainControllers (string siteName);\n    parameters:\n    - id: siteName\n      type: System.String\n      description: The name of the site to search for the domain controllers.\n    return:\n      type: System.DirectoryServices.ActiveDirectory.DomainControllerCollection\n      description: A <xref href=\"System.DirectoryServices.ActiveDirectory.DomainControllerCollection\"></xref> that contains the domain controller objects that were found by this method.\n  overload: System.DirectoryServices.ActiveDirectory.Domain.FindAllDiscoverableDomainControllers*\n  exceptions:\n  - type: System.DirectoryServices.ActiveDirectory.ActiveDirectoryServerDownException\n    commentId: T:System.DirectoryServices.ActiveDirectory.ActiveDirectoryServerDownException\n    description: The target server is either busy or unavailable.\n  - type: System.ArgumentException\n    commentId: T:System.ArgumentException\n    description: <code>siteName</code> is an empty string.\n  - type: System.ArgumentNullException\n    commentId: T:System.ArgumentNullException\n    description: <code>siteName</code> is `null`.\n  - type: System.ObjectDisposedException\n    commentId: T:System.ObjectDisposedException\n    description: The object has been disposed.\n  version:\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  monikers:\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.DirectoryServices.ActiveDirectory/Domain.xml\n  author: BrucePerlerMS\n  ms.author: bruceper\n  manager: mbaldwin\n- uid: System.DirectoryServices.ActiveDirectory.Domain.FindAllDiscoverableDomainControllers\n  commentId: M:System.DirectoryServices.ActiveDirectory.Domain.FindAllDiscoverableDomainControllers\n  id: FindAllDiscoverableDomainControllers\n  parent: System.DirectoryServices.ActiveDirectory.Domain\n  langs:\n  - csharp\n  name: FindAllDiscoverableDomainControllers()\n  nameWithType: Domain.FindAllDiscoverableDomainControllers()\n  fullName: Domain.FindAllDiscoverableDomainControllers()\n  type: Method\n  assemblies:\n  - System.DirectoryServices\n  namespace: System.DirectoryServices.ActiveDirectory\n  summary: Finds all of the discoverable domain controllers in this domain.\n  remarks: You can find discoverable domain controllers by querying DNS SRV records. Only those domain controllers that register the generic, non-site-specific, domain controller SRV record will be returned by this method.\n  syntax:\n    content: public System.DirectoryServices.ActiveDirectory.DomainControllerCollection FindAllDiscoverableDomainControllers ();\n    parameters: []\n    return:\n      type: System.DirectoryServices.ActiveDirectory.DomainControllerCollection\n      description: A <xref href=\"System.DirectoryServices.ActiveDirectory.DomainControllerCollection\"></xref> that contains the domain controller objects that were found by this method.\n  overload: System.DirectoryServices.ActiveDirectory.Domain.FindAllDiscoverableDomainControllers*\n  exceptions:\n  - type: System.DirectoryServices.ActiveDirectory.ActiveDirectoryServerDownException\n    commentId: T:System.DirectoryServices.ActiveDirectory.ActiveDirectoryServerDownException\n    description: The target server is either busy or unavailable.\n  - type: System.ObjectDisposedException\n    commentId: T:System.ObjectDisposedException\n    description: The object has been disposed.\n  version:\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  monikers:\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.DirectoryServices.ActiveDirectory/Domain.xml\n  author: BrucePerlerMS\n  ms.author: bruceper\n  manager: mbaldwin\n- uid: System.DirectoryServices.ActiveDirectory.Domain.FindAllDomainControllers\n  commentId: M:System.DirectoryServices.ActiveDirectory.Domain.FindAllDomainControllers\n  id: FindAllDomainControllers\n  parent: System.DirectoryServices.ActiveDirectory.Domain\n  langs:\n  - csharp\n  name: FindAllDomainControllers()\n  nameWithType: Domain.FindAllDomainControllers()\n  fullName: Domain.FindAllDomainControllers()\n  type: Method\n  assemblies:\n  - System.DirectoryServices\n  namespace: System.DirectoryServices.ActiveDirectory\n  summary: Finds all of the domain controllers in this domain.\n  syntax:\n    content: public System.DirectoryServices.ActiveDirectory.DomainControllerCollection FindAllDomainControllers ();\n    parameters: []\n    return:\n      type: System.DirectoryServices.ActiveDirectory.DomainControllerCollection\n      description: A <xref href=\"System.DirectoryServices.ActiveDirectory.DomainControllerCollection\"></xref> that contains the domain controller objects that were found by this method.\n  overload: System.DirectoryServices.ActiveDirectory.Domain.FindAllDomainControllers*\n  exceptions:\n  - type: System.DirectoryServices.ActiveDirectory.ActiveDirectoryServerDownException\n    commentId: T:System.DirectoryServices.ActiveDirectory.ActiveDirectoryServerDownException\n    description: The target server is either busy or unavailable.\n  - type: System.ObjectDisposedException\n    commentId: T:System.ObjectDisposedException\n    description: The object has been disposed.\n  version:\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  monikers:\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.DirectoryServices.ActiveDirectory/Domain.xml\n  author: BrucePerlerMS\n  ms.author: bruceper\n  manager: mbaldwin\n- uid: System.DirectoryServices.ActiveDirectory.Domain.FindAllDomainControllers(System.String)\n  commentId: M:System.DirectoryServices.ActiveDirectory.Domain.FindAllDomainControllers(System.String)\n  id: FindAllDomainControllers(System.String)\n  parent: System.DirectoryServices.ActiveDirectory.Domain\n  langs:\n  - csharp\n  name: FindAllDomainControllers(String)\n  nameWithType: Domain.FindAllDomainControllers(String)\n  fullName: Domain.FindAllDomainControllers(String)\n  type: Method\n  assemblies:\n  - System.DirectoryServices\n  namespace: System.DirectoryServices.ActiveDirectory\n  summary: Finds all of the domain controllers in this domain that are also in the specified site.\n  syntax:\n    content: public System.DirectoryServices.ActiveDirectory.DomainControllerCollection FindAllDomainControllers (string siteName);\n    parameters:\n    - id: siteName\n      type: System.String\n      description: The name of the site to search for the domain controllers.\n    return:\n      type: System.DirectoryServices.ActiveDirectory.DomainControllerCollection\n      description: A <xref href=\"System.DirectoryServices.ActiveDirectory.DomainControllerCollection\"></xref> that contains the domain controller objects that were found by this method.\n  overload: System.DirectoryServices.ActiveDirectory.Domain.FindAllDomainControllers*\n  exceptions:\n  - type: System.DirectoryServices.ActiveDirectory.ActiveDirectoryServerDownException\n    commentId: T:System.DirectoryServices.ActiveDirectory.ActiveDirectoryServerDownException\n    description: The target server is either busy or unavailable.\n  - type: System.ArgumentException\n    commentId: T:System.ArgumentException\n    description: <code>siteName</code> is an empty string.\n  - type: System.ArgumentNullException\n    commentId: T:System.ArgumentNullException\n    description: <code>siteName</code> is `null`.\n  - type: System.ObjectDisposedException\n    commentId: T:System.ObjectDisposedException\n    description: The object has been disposed.\n  version:\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  monikers:\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.DirectoryServices.ActiveDirectory/Domain.xml\n  author: BrucePerlerMS\n  ms.author: bruceper\n  manager: mbaldwin\n- uid: System.DirectoryServices.ActiveDirectory.Domain.FindDomainController\n  commentId: M:System.DirectoryServices.ActiveDirectory.Domain.FindDomainController\n  id: FindDomainController\n  parent: System.DirectoryServices.ActiveDirectory.Domain\n  langs:\n  - csharp\n  name: FindDomainController()\n  nameWithType: Domain.FindDomainController()\n  fullName: Domain.FindDomainController()\n  type: Method\n  assemblies:\n  - System.DirectoryServices\n  namespace: System.DirectoryServices.ActiveDirectory\n  summary: Finds any domain controller in this domain.\n  remarks: This method finds any domain controller in the domain. There is no guarantee that the same domain controller will be found by another call to this method.\n  syntax:\n    content: public System.DirectoryServices.ActiveDirectory.DomainController FindDomainController ();\n    parameters: []\n    return:\n      type: System.DirectoryServices.ActiveDirectory.DomainController\n      description: A <xref href=\"System.DirectoryServices.ActiveDirectory.DomainController\"></xref> that represents the domain controller that is found by this method.\n  overload: System.DirectoryServices.ActiveDirectory.Domain.FindDomainController*\n  exceptions:\n  - type: System.DirectoryServices.ActiveDirectory.ActiveDirectoryObjectNotFoundException\n    commentId: T:System.DirectoryServices.ActiveDirectory.ActiveDirectoryObjectNotFoundException\n    description: A domain controller cannot be located.\n  - type: System.DirectoryServices.ActiveDirectory.ActiveDirectoryOperationException\n    commentId: T:System.DirectoryServices.ActiveDirectory.ActiveDirectoryOperationException\n    description: A call to the underlying directory service resulted in an error.\n  - type: System.ObjectDisposedException\n    commentId: T:System.ObjectDisposedException\n    description: The object has been disposed.\n  version:\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  monikers:\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.DirectoryServices.ActiveDirectory/Domain.xml\n  author: BrucePerlerMS\n  ms.author: bruceper\n  manager: mbaldwin\n- uid: System.DirectoryServices.ActiveDirectory.Domain.FindDomainController(System.DirectoryServices.ActiveDirectory.LocatorOptions)\n  commentId: M:System.DirectoryServices.ActiveDirectory.Domain.FindDomainController(System.DirectoryServices.ActiveDirectory.LocatorOptions)\n  id: FindDomainController(System.DirectoryServices.ActiveDirectory.LocatorOptions)\n  parent: System.DirectoryServices.ActiveDirectory.Domain\n  langs:\n  - csharp\n  name: FindDomainController(LocatorOptions)\n  nameWithType: Domain.FindDomainController(LocatorOptions)\n  fullName: Domain.FindDomainController(LocatorOptions)\n  type: Method\n  assemblies:\n  - System.DirectoryServices\n  namespace: System.DirectoryServices.ActiveDirectory\n  summary: Finds a domain controller in this domain that meets the specified criteria.\n  syntax:\n    content: public System.DirectoryServices.ActiveDirectory.DomainController FindDomainController (System.DirectoryServices.ActiveDirectory.LocatorOptions flag);\n    parameters:\n    - id: flag\n      type: System.DirectoryServices.ActiveDirectory.LocatorOptions\n      description: A combination of one or more of the <xref href=\"System.DirectoryServices.ActiveDirectory.LocatorOptions\"></xref> members that defines the type of domain controller to find.\n    return:\n      type: System.DirectoryServices.ActiveDirectory.DomainController\n      description: A <xref href=\"System.DirectoryServices.ActiveDirectory.DomainController\"></xref> that represents the domain controller that is found by this method.\n  overload: System.DirectoryServices.ActiveDirectory.Domain.FindDomainController*\n  exceptions:\n  - type: System.DirectoryServices.ActiveDirectory.ActiveDirectoryObjectNotFoundException\n    commentId: T:System.DirectoryServices.ActiveDirectory.ActiveDirectoryObjectNotFoundException\n    description: A domain controller cannot be located.\n  - type: System.DirectoryServices.ActiveDirectory.ActiveDirectoryOperationException\n    commentId: T:System.DirectoryServices.ActiveDirectory.ActiveDirectoryOperationException\n    description: A call to the underlying directory service resulted in an error.\n  - type: System.ArgumentException\n    commentId: T:System.ArgumentException\n    description: The <code>flag</code> parameter contains an invalid value.\n  - type: System.ObjectDisposedException\n    commentId: T:System.ObjectDisposedException\n    description: The object has been disposed.\n  version:\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  monikers:\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.DirectoryServices.ActiveDirectory/Domain.xml\n  author: BrucePerlerMS\n  ms.author: bruceper\n  manager: mbaldwin\n- uid: System.DirectoryServices.ActiveDirectory.Domain.FindDomainController(System.String)\n  commentId: M:System.DirectoryServices.ActiveDirectory.Domain.FindDomainController(System.String)\n  id: FindDomainController(System.String)\n  parent: System.DirectoryServices.ActiveDirectory.Domain\n  langs:\n  - csharp\n  name: FindDomainController(String)\n  nameWithType: Domain.FindDomainController(String)\n  fullName: Domain.FindDomainController(String)\n  type: Method\n  assemblies:\n  - System.DirectoryServices\n  namespace: System.DirectoryServices.ActiveDirectory\n  summary: Finds a domain controller in this domain and in the specified site.\n  syntax:\n    content: public System.DirectoryServices.ActiveDirectory.DomainController FindDomainController (string siteName);\n    parameters:\n    - id: siteName\n      type: System.String\n      description: The name of the site to search for the domain controller.\n    return:\n      type: System.DirectoryServices.ActiveDirectory.DomainController\n      description: A <xref href=\"System.DirectoryServices.ActiveDirectory.DomainController\"></xref> object that represents the domain controller that is found by this method.\n  overload: System.DirectoryServices.ActiveDirectory.Domain.FindDomainController*\n  exceptions:\n  - type: System.DirectoryServices.ActiveDirectory.ActiveDirectoryObjectNotFoundException\n    commentId: T:System.DirectoryServices.ActiveDirectory.ActiveDirectoryObjectNotFoundException\n    description: A domain controller cannot be located.\n  - type: System.DirectoryServices.ActiveDirectory.ActiveDirectoryOperationException\n    commentId: T:System.DirectoryServices.ActiveDirectory.ActiveDirectoryOperationException\n    description: A call to the underlying directory service resulted in an error.\n  - type: System.ArgumentException\n    commentId: T:System.ArgumentException\n    description: <code>siteName</code> is an empty string.\n  - type: System.ArgumentNullException\n    commentId: T:System.ArgumentNullException\n    description: <code>siteName</code> is `null`.\n  - type: System.ObjectDisposedException\n    commentId: T:System.ObjectDisposedException\n    description: The object has been disposed.\n  version:\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  monikers:\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.DirectoryServices.ActiveDirectory/Domain.xml\n  author: BrucePerlerMS\n  ms.author: bruceper\n  manager: mbaldwin\n- uid: System.DirectoryServices.ActiveDirectory.Domain.FindDomainController(System.String,System.DirectoryServices.ActiveDirectory.LocatorOptions)\n  commentId: M:System.DirectoryServices.ActiveDirectory.Domain.FindDomainController(System.String,System.DirectoryServices.ActiveDirectory.LocatorOptions)\n  id: FindDomainController(System.String,System.DirectoryServices.ActiveDirectory.LocatorOptions)\n  parent: System.DirectoryServices.ActiveDirectory.Domain\n  langs:\n  - csharp\n  name: FindDomainController(String, LocatorOptions)\n  nameWithType: Domain.FindDomainController(String, LocatorOptions)\n  fullName: Domain.FindDomainController(String, LocatorOptions)\n  type: Method\n  assemblies:\n  - System.DirectoryServices\n  namespace: System.DirectoryServices.ActiveDirectory\n  summary: Finds a domain controller in this domain and in the specified site that meets the specified criteria.\n  syntax:\n    content: public System.DirectoryServices.ActiveDirectory.DomainController FindDomainController (string siteName, System.DirectoryServices.ActiveDirectory.LocatorOptions flag);\n    parameters:\n    - id: siteName\n      type: System.String\n      description: The name of the site to search for the domain controller.\n    - id: flag\n      type: System.DirectoryServices.ActiveDirectory.LocatorOptions\n      description: A combination of one or more of the <xref href=\"System.DirectoryServices.ActiveDirectory.LocatorOptions\"></xref> members that defines the type of domain controller to find.\n    return:\n      type: System.DirectoryServices.ActiveDirectory.DomainController\n      description: A <xref href=\"System.DirectoryServices.ActiveDirectory.DomainController\"></xref> object that represents the domain controller that is found by this method.\n  overload: System.DirectoryServices.ActiveDirectory.Domain.FindDomainController*\n  exceptions:\n  - type: System.DirectoryServices.ActiveDirectory.ActiveDirectoryObjectNotFoundException\n    commentId: T:System.DirectoryServices.ActiveDirectory.ActiveDirectoryObjectNotFoundException\n    description: A domain controller cannot be located.\n  - type: System.DirectoryServices.ActiveDirectory.ActiveDirectoryOperationException\n    commentId: T:System.DirectoryServices.ActiveDirectory.ActiveDirectoryOperationException\n    description: A call to the underlying directory service resulted in an error.\n  - type: System.ArgumentException\n    commentId: T:System.ArgumentException\n    description: \"This exception will occur for any of the following reasons.  \\n  \\n-   <code>siteName</code> is an empty string.  \\n  \\n-   <code>flag</code> contains an invalid value.\"\n  - type: System.ArgumentNullException\n    commentId: T:System.ArgumentNullException\n    description: <code>siteName</code> is `null`.\n  - type: System.ObjectDisposedException\n    commentId: T:System.ObjectDisposedException\n    description: The object has been disposed.\n  version:\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  monikers:\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.DirectoryServices.ActiveDirectory/Domain.xml\n  author: BrucePerlerMS\n  ms.author: bruceper\n  manager: mbaldwin\n- uid: System.DirectoryServices.ActiveDirectory.Domain.Forest\n  commentId: P:System.DirectoryServices.ActiveDirectory.Domain.Forest\n  id: Forest\n  parent: System.DirectoryServices.ActiveDirectory.Domain\n  langs:\n  - csharp\n  name: Forest\n  nameWithType: Domain.Forest\n  fullName: Domain.Forest\n  type: Property\n  assemblies:\n  - System.DirectoryServices\n  namespace: System.DirectoryServices.ActiveDirectory\n  summary: Gets the forest that this domain is a member of.\n  syntax:\n    content: public System.DirectoryServices.ActiveDirectory.Forest Forest { get; }\n    return:\n      type: System.DirectoryServices.ActiveDirectory.Forest\n      description: A <xref href=\"System.DirectoryServices.ActiveDirectory.Forest\"></xref> object that represents the forest that this domain is a member of.\n  overload: System.DirectoryServices.ActiveDirectory.Domain.Forest*\n  exceptions:\n  - type: System.ObjectDisposedException\n    commentId: T:System.ObjectDisposedException\n    description: The object has been disposed.\n  version:\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  monikers:\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.DirectoryServices.ActiveDirectory/Domain.xml\n  author: BrucePerlerMS\n  ms.author: bruceper\n  manager: mbaldwin\n- uid: System.DirectoryServices.ActiveDirectory.Domain.GetAllTrustRelationships\n  commentId: M:System.DirectoryServices.ActiveDirectory.Domain.GetAllTrustRelationships\n  id: GetAllTrustRelationships\n  parent: System.DirectoryServices.ActiveDirectory.Domain\n  langs:\n  - csharp\n  name: GetAllTrustRelationships()\n  nameWithType: Domain.GetAllTrustRelationships()\n  fullName: Domain.GetAllTrustRelationships()\n  type: Method\n  assemblies:\n  - System.DirectoryServices\n  namespace: System.DirectoryServices.ActiveDirectory\n  summary: Retrieves all of the trust relationships for this domain.\n  syntax:\n    content: public System.DirectoryServices.ActiveDirectory.TrustRelationshipInformationCollection GetAllTrustRelationships ();\n    parameters: []\n    return:\n      type: System.DirectoryServices.ActiveDirectory.TrustRelationshipInformationCollection\n      description: A <xref href=\"System.DirectoryServices.ActiveDirectory.TrustRelationshipInformationCollection\"></xref> object that contains all of the trust relationships for this domain.\n  overload: System.DirectoryServices.ActiveDirectory.Domain.GetAllTrustRelationships*\n  exceptions:\n  - type: System.DirectoryServices.ActiveDirectory.ActiveDirectoryOperationException\n    commentId: T:System.DirectoryServices.ActiveDirectory.ActiveDirectoryOperationException\n    description: A call to the underlying directory service resulted in an error.\n  - type: System.DirectoryServices.ActiveDirectory.ActiveDirectoryServerDownException\n    commentId: T:System.DirectoryServices.ActiveDirectory.ActiveDirectoryServerDownException\n    description: The target server is either busy or unavailable.\n  - type: System.ObjectDisposedException\n    commentId: T:System.ObjectDisposedException\n    description: The object has been disposed.\n  - type: System.UnauthorizedAccessException\n    commentId: T:System.UnauthorizedAccessException\n    description: The specified account does not have permission to perform this operation.\n  version:\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  monikers:\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.DirectoryServices.ActiveDirectory/Domain.xml\n  author: BrucePerlerMS\n  ms.author: bruceper\n  manager: mbaldwin\n- uid: System.DirectoryServices.ActiveDirectory.Domain.GetComputerDomain\n  commentId: M:System.DirectoryServices.ActiveDirectory.Domain.GetComputerDomain\n  id: GetComputerDomain\n  parent: System.DirectoryServices.ActiveDirectory.Domain\n  langs:\n  - csharp\n  name: GetComputerDomain()\n  nameWithType: Domain.GetComputerDomain()\n  fullName: Domain.GetComputerDomain()\n  type: Method\n  assemblies:\n  - System.DirectoryServices\n  namespace: System.DirectoryServices.ActiveDirectory\n  summary: Gets the <xref href=\"System.DirectoryServices.ActiveDirectory.Domain\"></xref> object that represents the domain to which the local computer is joined.\n  remarks: The return value of the <xref:System.DirectoryServices.ActiveDirectory.Domain.GetComputerDomain%2A> method is a <xref:System.DirectoryServices.ActiveDirectory.Domain> object representing the domain to which the computer running the application is joined.  This return value is independent of the domain credentials under which the application is run. This method will retrieve the computer's domain regardless of the trusted account domain credentials it is run under.  To retrieve the <xref:System.DirectoryServices.ActiveDirectory.Domain> object that represents the domain corresponding to the user credentials in effect for the security context under which the application is running, use the <xref:System.DirectoryServices.ActiveDirectory.Domain.GetCurrentDomain%2A> method instead.\n  syntax:\n    content: public static System.DirectoryServices.ActiveDirectory.Domain GetComputerDomain ();\n    parameters: []\n    return:\n      type: System.DirectoryServices.ActiveDirectory.Domain\n      description: A <xref href=\"System.DirectoryServices.ActiveDirectory.Domain\"></xref> object that represents the domain to which the local machine is joined.\n  overload: System.DirectoryServices.ActiveDirectory.Domain.GetComputerDomain*\n  exceptions:\n  - type: System.DirectoryServices.ActiveDirectory.ActiveDirectoryObjectNotFoundException\n    commentId: T:System.DirectoryServices.ActiveDirectory.ActiveDirectoryObjectNotFoundException\n    description: A connection to the domain could not be made.\n  version:\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  monikers:\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.DirectoryServices.ActiveDirectory/Domain.xml\n  author: BrucePerlerMS\n  ms.author: bruceper\n  manager: mbaldwin\n- uid: System.DirectoryServices.ActiveDirectory.Domain.GetCurrentDomain\n  commentId: M:System.DirectoryServices.ActiveDirectory.Domain.GetCurrentDomain\n  id: GetCurrentDomain\n  parent: System.DirectoryServices.ActiveDirectory.Domain\n  langs:\n  - csharp\n  name: GetCurrentDomain()\n  nameWithType: Domain.GetCurrentDomain()\n  fullName: Domain.GetCurrentDomain()\n  type: Method\n  assemblies:\n  - System.DirectoryServices\n  namespace: System.DirectoryServices.ActiveDirectory\n  summary: Gets the <xref href=\"System.DirectoryServices.ActiveDirectory.Domain\"></xref> object for the current user credentials in effect for the security context under which the application is running.\n  remarks: \"<xref:System.DirectoryServices.ActiveDirectory.Domain.GetCurrentDomain%2A> method is determined by the domain credentials under which the application is running.  To retrieve the <xref:System.DirectoryServices.ActiveDirectory.Domain> object representing the domain to which the computer running the application is joined, regardless of the credentials associated with that application, use the <xref:System.DirectoryServices.ActiveDirectory.Domain.GetComputerDomain%2A> method instead.  \\n  \\n## See Also  \\n <xref:System.DirectoryServices.ActiveDirectory.Domain.GetComputerDomain%2A>\"\n  syntax:\n    content: public static System.DirectoryServices.ActiveDirectory.Domain GetCurrentDomain ();\n    parameters: []\n    return:\n      type: System.DirectoryServices.ActiveDirectory.Domain\n      description: A <xref href=\"System.DirectoryServices.ActiveDirectory.Domain\"></xref> object that represents the domain for the specified user credentials in effect for the security context under which the application is running.\n  overload: System.DirectoryServices.ActiveDirectory.Domain.GetCurrentDomain*\n  exceptions:\n  - type: System.DirectoryServices.ActiveDirectory.ActiveDirectoryObjectNotFoundException\n    commentId: T:System.DirectoryServices.ActiveDirectory.ActiveDirectoryObjectNotFoundException\n    description: A connection to the current context could not be made.\n  version:\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  monikers:\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.DirectoryServices.ActiveDirectory/Domain.xml\n  author: BrucePerlerMS\n  ms.author: bruceper\n  manager: mbaldwin\n- uid: System.DirectoryServices.ActiveDirectory.Domain.GetDirectoryEntry\n  commentId: M:System.DirectoryServices.ActiveDirectory.Domain.GetDirectoryEntry\n  id: GetDirectoryEntry\n  parent: System.DirectoryServices.ActiveDirectory.Domain\n  langs:\n  - csharp\n  name: GetDirectoryEntry()\n  nameWithType: Domain.GetDirectoryEntry()\n  fullName: Domain.GetDirectoryEntry()\n  type: Method\n  assemblies:\n  - System.DirectoryServices\n  namespace: System.DirectoryServices.ActiveDirectory\n  summary: Retrieves a <xref href=\"System.DirectoryServices.DirectoryEntry\"></xref> object that represents the default naming context of the domain.\n  syntax:\n    content: public override System.DirectoryServices.DirectoryEntry GetDirectoryEntry ();\n    parameters: []\n    return:\n      type: System.DirectoryServices.DirectoryEntry\n      description: A <xref href=\"System.DirectoryServices.DirectoryEntry\"></xref> object that represents the domain.\n  overload: System.DirectoryServices.ActiveDirectory.Domain.GetDirectoryEntry*\n  exceptions:\n  - type: System.ObjectDisposedException\n    commentId: T:System.ObjectDisposedException\n    description: The current object has been disposed.\n  version:\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  monikers:\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.DirectoryServices.ActiveDirectory/Domain.xml\n  author: BrucePerlerMS\n  ms.author: bruceper\n  manager: mbaldwin\n- uid: System.DirectoryServices.ActiveDirectory.Domain.GetDomain(System.DirectoryServices.ActiveDirectory.DirectoryContext)\n  commentId: M:System.DirectoryServices.ActiveDirectory.Domain.GetDomain(System.DirectoryServices.ActiveDirectory.DirectoryContext)\n  id: GetDomain(System.DirectoryServices.ActiveDirectory.DirectoryContext)\n  parent: System.DirectoryServices.ActiveDirectory.Domain\n  langs:\n  - csharp\n  name: GetDomain(DirectoryContext)\n  nameWithType: Domain.GetDomain(DirectoryContext)\n  fullName: Domain.GetDomain(DirectoryContext)\n  type: Method\n  assemblies:\n  - System.DirectoryServices\n  namespace: System.DirectoryServices.ActiveDirectory\n  summary: Gets the <xref href=\"System.DirectoryServices.ActiveDirectory.Domain\"></xref> object for the specified context.\n  syntax:\n    content: public static System.DirectoryServices.ActiveDirectory.Domain GetDomain (System.DirectoryServices.ActiveDirectory.DirectoryContext context);\n    parameters:\n    - id: context\n      type: System.DirectoryServices.ActiveDirectory.DirectoryContext\n      description: An <xref href=\"System.DirectoryServices.ActiveDirectory.DirectoryContext\"></xref> object that contains the target and credentials to use to retrieve the object. The type of the context must be a domain or directory server.\n    return:\n      type: System.DirectoryServices.ActiveDirectory.Domain\n      description: An <xref href=\"System.DirectoryServices.ActiveDirectory.Domain\"></xref> object that represents the domain for the specified context.\n  overload: System.DirectoryServices.ActiveDirectory.Domain.GetDomain*\n  exceptions:\n  - type: System.DirectoryServices.ActiveDirectory.ActiveDirectoryObjectNotFoundException\n    commentId: T:System.DirectoryServices.ActiveDirectory.ActiveDirectoryObjectNotFoundException\n    description: A connection to the target specified in <code>context</code> could not be made.\n  - type: System.ArgumentException\n    commentId: T:System.ArgumentException\n    description: <code>context</code> is not valid.\n  - type: System.ArgumentNullException\n    commentId: T:System.ArgumentNullException\n    description: <code>context</code> is `null`.\n  version:\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  monikers:\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.DirectoryServices.ActiveDirectory/Domain.xml\n  author: BrucePerlerMS\n  ms.author: bruceper\n  manager: mbaldwin\n- uid: System.DirectoryServices.ActiveDirectory.Domain.GetSelectiveAuthenticationStatus(System.String)\n  commentId: M:System.DirectoryServices.ActiveDirectory.Domain.GetSelectiveAuthenticationStatus(System.String)\n  id: GetSelectiveAuthenticationStatus(System.String)\n  parent: System.DirectoryServices.ActiveDirectory.Domain\n  langs:\n  - csharp\n  name: GetSelectiveAuthenticationStatus(String)\n  nameWithType: Domain.GetSelectiveAuthenticationStatus(String)\n  fullName: Domain.GetSelectiveAuthenticationStatus(String)\n  type: Method\n  assemblies:\n  - System.DirectoryServices\n  namespace: System.DirectoryServices.ActiveDirectory\n  summary: Determines the authentication type of an inbound trust.\n  syntax:\n    content: public bool GetSelectiveAuthenticationStatus (string targetDomainName);\n    parameters:\n    - id: targetDomainName\n      type: System.String\n      description: The DNS name of the domain which with the trust exists.\n    return:\n      type: System.Boolean\n      description: '`true` if the authentication of the trust is selective; `false` if the authentication is domain-wide.'\n  overload: System.DirectoryServices.ActiveDirectory.Domain.GetSelectiveAuthenticationStatus*\n  exceptions:\n  - type: System.DirectoryServices.ActiveDirectory.ActiveDirectoryObjectNotFoundException\n    commentId: T:System.DirectoryServices.ActiveDirectory.ActiveDirectoryObjectNotFoundException\n    description: There is no trust relationship with the <xref href=\"System.DirectoryServices.ActiveDirectory.Forest\"></xref> that is specified by the <code>targetForestName</code> parameter.\n  - type: System.DirectoryServices.ActiveDirectory.ActiveDirectoryOperationException\n    commentId: T:System.DirectoryServices.ActiveDirectory.ActiveDirectoryOperationException\n    description: The call to LsaQueryTrustedDomainInfoByName failed. For more information, see the topic [LsaQueryTrustedDomainInfoByName](http://msdn.microsoft.com/library/default.asp?url=/library/en-us/secmgmt/security/lsaquerytrusteddomaininfobyname.asp) in the MSDN Library at [http://msdn.microsoft.com/library](http://msdn.microsoft.com/library).\n  - type: System.DirectoryServices.ActiveDirectory.ActiveDirectoryServerDownException\n    commentId: T:System.DirectoryServices.ActiveDirectory.ActiveDirectoryServerDownException\n    description: The target server is either busy or unavailable.\n  - type: System.ArgumentException\n    commentId: T:System.ArgumentException\n    description: <code>targetDomainName</code> is an empty string.\n  - type: System.ArgumentNullException\n    commentId: T:System.ArgumentNullException\n    description: <code>targetDomainName</code> is `null`.\n  - type: System.ObjectDisposedException\n    commentId: T:System.ObjectDisposedException\n    description: The current object has been disposed.\n  - type: System.UnauthorizedAccessException\n    commentId: T:System.UnauthorizedAccessException\n    description: The specified account does not have permission to perform this operation.\n  version:\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  monikers:\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.DirectoryServices.ActiveDirectory/Domain.xml\n  author: BrucePerlerMS\n  ms.author: bruceper\n  manager: mbaldwin\n- uid: System.DirectoryServices.ActiveDirectory.Domain.GetSidFilteringStatus(System.String)\n  commentId: M:System.DirectoryServices.ActiveDirectory.Domain.GetSidFilteringStatus(System.String)\n  id: GetSidFilteringStatus(System.String)\n  parent: System.DirectoryServices.ActiveDirectory.Domain\n  langs:\n  - csharp\n  name: GetSidFilteringStatus(String)\n  nameWithType: Domain.GetSidFilteringStatus(String)\n  fullName: Domain.GetSidFilteringStatus(String)\n  type: Method\n  assemblies:\n  - System.DirectoryServices\n  namespace: System.DirectoryServices.ActiveDirectory\n  summary: Determines the SID filtering status of a trust.\n  syntax:\n    content: public bool GetSidFilteringStatus (string targetDomainName);\n    parameters:\n    - id: targetDomainName\n      type: System.String\n      description: The DNS name of the domain which with the trust relationship exists.\n    return:\n      type: System.Boolean\n      description: '`true` if SID filtering is enabled; otherwise, `false`.'\n  overload: System.DirectoryServices.ActiveDirectory.Domain.GetSidFilteringStatus*\n  exceptions:\n  - type: System.DirectoryServices.ActiveDirectory.ActiveDirectoryObjectNotFoundException\n    commentId: T:System.DirectoryServices.ActiveDirectory.ActiveDirectoryObjectNotFoundException\n    description: There is no trust relationship with the <xref href=\"System.DirectoryServices.ActiveDirectory.Forest\"></xref> that is specified by the <code>targetForestName</code> parameter.\n  - type: System.DirectoryServices.ActiveDirectory.ActiveDirectoryOperationException\n    commentId: T:System.DirectoryServices.ActiveDirectory.ActiveDirectoryOperationException\n    description: A call to the underlying directory service resulted in an error.\n  - type: System.DirectoryServices.ActiveDirectory.ActiveDirectoryServerDownException\n    commentId: T:System.DirectoryServices.ActiveDirectory.ActiveDirectoryServerDownException\n    description: The target server is either busy or unavailable.\n  - type: System.ArgumentException\n    commentId: T:System.ArgumentException\n    description: <code>targetDomainName</code> is an empty string.\n  - type: System.ArgumentNullException\n    commentId: T:System.ArgumentNullException\n    description: <code>targetDomainName</code> is `null`.\n  - type: System.ObjectDisposedException\n    commentId: T:System.ObjectDisposedException\n    description: The current object has been disposed.\n  - type: System.UnauthorizedAccessException\n    commentId: T:System.UnauthorizedAccessException\n    description: The specified account does not have permission to perform this operation.\n  version:\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  monikers:\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.DirectoryServices.ActiveDirectory/Domain.xml\n  author: BrucePerlerMS\n  ms.author: bruceper\n  manager: mbaldwin\n- uid: System.DirectoryServices.ActiveDirectory.Domain.GetTrustRelationship(System.String)\n  commentId: M:System.DirectoryServices.ActiveDirectory.Domain.GetTrustRelationship(System.String)\n  id: GetTrustRelationship(System.String)\n  parent: System.DirectoryServices.ActiveDirectory.Domain\n  langs:\n  - csharp\n  name: GetTrustRelationship(String)\n  nameWithType: Domain.GetTrustRelationship(String)\n  fullName: Domain.GetTrustRelationship(String)\n  type: Method\n  assemblies:\n  - System.DirectoryServices\n  namespace: System.DirectoryServices.ActiveDirectory\n  summary: Gets the trust relationship between this domain and the specified domain.\n  syntax:\n    content: public System.DirectoryServices.ActiveDirectory.TrustRelationshipInformation GetTrustRelationship (string targetDomainName);\n    parameters:\n    - id: targetDomainName\n      type: System.String\n      description: The DNS name of the domain with which the trust relationship exists.\n    return:\n      type: System.DirectoryServices.ActiveDirectory.TrustRelationshipInformation\n      description: A <xref href=\"System.DirectoryServices.ActiveDirectory.TrustRelationshipInformation\"></xref> object that represents the trust relationship between this domain and the specified domain.\n  overload: System.DirectoryServices.ActiveDirectory.Domain.GetTrustRelationship*\n  exceptions:\n  - type: System.DirectoryServices.ActiveDirectory.ActiveDirectoryObjectNotFoundException\n    commentId: T:System.DirectoryServices.ActiveDirectory.ActiveDirectoryObjectNotFoundException\n    description: There is no trust relationship with the <xref href=\"System.DirectoryServices.ActiveDirectory.Forest\"></xref> that is specified by the <code>targetForestName</code> parameter.\n  - type: System.DirectoryServices.ActiveDirectory.ActiveDirectoryOperationException\n    commentId: T:System.DirectoryServices.ActiveDirectory.ActiveDirectoryOperationException\n    description: A call to the underlying directory service resulted in an error.\n  - type: System.DirectoryServices.ActiveDirectory.ActiveDirectoryServerDownException\n    commentId: T:System.DirectoryServices.ActiveDirectory.ActiveDirectoryServerDownException\n    description: The target server is either busy or unavailable.\n  - type: System.ArgumentException\n    commentId: T:System.ArgumentException\n    description: <code>targetDomainName</code> is an empty string.\n  - type: System.ArgumentNullException\n    commentId: T:System.ArgumentNullException\n    description: <code>targetDomainName</code> is `null`.\n  - type: System.ObjectDisposedException\n    commentId: T:System.ObjectDisposedException\n    description: The current object has been disposed.\n  - type: System.UnauthorizedAccessException\n    commentId: T:System.UnauthorizedAccessException\n    description: The specified account does not have permission to perform this operation.\n  version:\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  monikers:\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.DirectoryServices.ActiveDirectory/Domain.xml\n  author: BrucePerlerMS\n  ms.author: bruceper\n  manager: mbaldwin\n- uid: System.DirectoryServices.ActiveDirectory.Domain.InfrastructureRoleOwner\n  commentId: P:System.DirectoryServices.ActiveDirectory.Domain.InfrastructureRoleOwner\n  id: InfrastructureRoleOwner\n  parent: System.DirectoryServices.ActiveDirectory.Domain\n  langs:\n  - csharp\n  name: InfrastructureRoleOwner\n  nameWithType: Domain.InfrastructureRoleOwner\n  fullName: Domain.InfrastructureRoleOwner\n  type: Property\n  assemblies:\n  - System.DirectoryServices\n  namespace: System.DirectoryServices.ActiveDirectory\n  summary: Gets the infrastructure role owner for this domain.\n  syntax:\n    content: public System.DirectoryServices.ActiveDirectory.DomainController InfrastructureRoleOwner { get; }\n    return:\n      type: System.DirectoryServices.ActiveDirectory.DomainController\n      description: An <xref href=\"System.DirectoryServices.ActiveDirectory.DomainController\"></xref> object that represents the domain controller that holds the infrastructure owner role.\n  overload: System.DirectoryServices.ActiveDirectory.Domain.InfrastructureRoleOwner*\n  exceptions:\n  - type: System.ObjectDisposedException\n    commentId: T:System.ObjectDisposedException\n    description: The object has been disposed.\n  version:\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  monikers:\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.DirectoryServices.ActiveDirectory/Domain.xml\n  author: BrucePerlerMS\n  ms.author: bruceper\n  manager: mbaldwin\n- uid: System.DirectoryServices.ActiveDirectory.Domain.Parent\n  commentId: P:System.DirectoryServices.ActiveDirectory.Domain.Parent\n  id: Parent\n  parent: System.DirectoryServices.ActiveDirectory.Domain\n  langs:\n  - csharp\n  name: Parent\n  nameWithType: Domain.Parent\n  fullName: Domain.Parent\n  type: Property\n  assemblies:\n  - System.DirectoryServices\n  namespace: System.DirectoryServices.ActiveDirectory\n  summary: Gets the parent domain of this domain.\n  syntax:\n    content: public System.DirectoryServices.ActiveDirectory.Domain Parent { get; }\n    return:\n      type: System.DirectoryServices.ActiveDirectory.Domain\n      description: An <xref href=\"System.DirectoryServices.ActiveDirectory.Domain\"></xref> object that represents the parent domain of this domain. `null` if this domain has no parent domain.\n  overload: System.DirectoryServices.ActiveDirectory.Domain.Parent*\n  exceptions:\n  - type: System.ObjectDisposedException\n    commentId: T:System.ObjectDisposedException\n    description: The object has been disposed.\n  version:\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  monikers:\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.DirectoryServices.ActiveDirectory/Domain.xml\n  author: BrucePerlerMS\n  ms.author: bruceper\n  manager: mbaldwin\n- uid: System.DirectoryServices.ActiveDirectory.Domain.PdcRoleOwner\n  commentId: P:System.DirectoryServices.ActiveDirectory.Domain.PdcRoleOwner\n  id: PdcRoleOwner\n  parent: System.DirectoryServices.ActiveDirectory.Domain\n  langs:\n  - csharp\n  name: PdcRoleOwner\n  nameWithType: Domain.PdcRoleOwner\n  fullName: Domain.PdcRoleOwner\n  type: Property\n  assemblies:\n  - System.DirectoryServices\n  namespace: System.DirectoryServices.ActiveDirectory\n  summary: Gets the <xref href=\"System.DirectoryServices.ActiveDirectory.DomainController\"></xref> object that holds the primary domain controller (PDC) for this domain.\n  syntax:\n    content: public System.DirectoryServices.ActiveDirectory.DomainController PdcRoleOwner { get; }\n    return:\n      type: System.DirectoryServices.ActiveDirectory.DomainController\n      description: An <xref href=\"System.DirectoryServices.ActiveDirectory.DomainController\"></xref> object that represents the domain controller that holds the PDC emulator role for this domain.\n  overload: System.DirectoryServices.ActiveDirectory.Domain.PdcRoleOwner*\n  exceptions:\n  - type: System.ObjectDisposedException\n    commentId: T:System.ObjectDisposedException\n    description: The object has been disposed.\n  version:\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  monikers:\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.DirectoryServices.ActiveDirectory/Domain.xml\n  author: BrucePerlerMS\n  ms.author: bruceper\n  manager: mbaldwin\n- uid: System.DirectoryServices.ActiveDirectory.Domain.RaiseDomainFunctionality(System.DirectoryServices.ActiveDirectory.DomainMode)\n  commentId: M:System.DirectoryServices.ActiveDirectory.Domain.RaiseDomainFunctionality(System.DirectoryServices.ActiveDirectory.DomainMode)\n  id: RaiseDomainFunctionality(System.DirectoryServices.ActiveDirectory.DomainMode)\n  parent: System.DirectoryServices.ActiveDirectory.Domain\n  langs:\n  - csharp\n  name: RaiseDomainFunctionality(DomainMode)\n  nameWithType: Domain.RaiseDomainFunctionality(DomainMode)\n  fullName: Domain.RaiseDomainFunctionality(DomainMode)\n  type: Method\n  assemblies:\n  - System.DirectoryServices\n  namespace: System.DirectoryServices.ActiveDirectory\n  summary: Raises the mode of operation for the domain.\n  remarks: \"The <xref:System.DirectoryServices.ActiveDirectory.DomainMode> value can be raised but not lowered. This means that raising the functionality level of the domain is not reversible and the decision to do this should be made carefully.  \\n  \\n For more information about domain operational modes, see [Domain and forest functionality](http://www.microsoft.com/resources/documentation/WindowsServ/2003/standard/proddocs/en-us/sag_levels.asp).  \\n  \\n The following table defines the valid values for `domainMode` based on the current operating mode of the domain.  \\n  \\n|Current mode|Mode can be raised to|  \\n|------------------|---------------------------|  \\n|<xref:System.DirectoryServices.ActiveDirectory.DomainMode.Windows2000MixedDomain>|<xref:System.DirectoryServices.ActiveDirectory.DomainMode.Windows2000NativeDomain><br /><br /> <xref:System.DirectoryServices.ActiveDirectory.DomainMode.Windows2003InterimDomain><br /><br /> <xref:System.DirectoryServices.ActiveDirectory.DomainMode.Windows2003Domain>|  \\n|<xref:System.DirectoryServices.ActiveDirectory.DomainMode.Windows2000NativeDomain>|<xref:System.DirectoryServices.ActiveDirectory.DomainMode.Windows2003Domain>|  \\n|<xref:System.DirectoryServices.ActiveDirectory.DomainMode.Windows2003InterimDomain>|<xref:System.DirectoryServices.ActiveDirectory.DomainMode.Windows2003Domain>|  \\n|<xref:System.DirectoryServices.ActiveDirectory.DomainMode.Windows2003Domain>|None|\"\n  syntax:\n    content: public void RaiseDomainFunctionality (System.DirectoryServices.ActiveDirectory.DomainMode domainMode);\n    parameters:\n    - id: domainMode\n      type: System.DirectoryServices.ActiveDirectory.DomainMode\n      description: An <xref href=\"System.DirectoryServices.ActiveDirectory.DomainMode\"></xref> enumeration value that specifies the new operation level for the domain.\n  overload: System.DirectoryServices.ActiveDirectory.Domain.RaiseDomainFunctionality*\n  exceptions:\n  - type: System.DirectoryServices.ActiveDirectory.ActiveDirectoryOperationException\n    commentId: T:System.DirectoryServices.ActiveDirectory.ActiveDirectoryOperationException\n    description: A call to the underlying directory service resulted in an error.\n  - type: System.DirectoryServices.ActiveDirectory.ActiveDirectoryServerDownException\n    commentId: T:System.DirectoryServices.ActiveDirectory.ActiveDirectoryServerDownException\n    description: The target server is either busy or unavailable.\n  - type: System.ArgumentException\n    commentId: T:System.ArgumentException\n    description: Based on the current operating mode of the domain, the value specified for <code>domainMode</code> is not valid.\n  - type: System.ComponentModel.InvalidEnumArgumentException\n    commentId: T:System.ComponentModel.InvalidEnumArgumentException\n    description: <code>domainMode</code> is not a valid <xref href=\"System.DirectoryServices.ActiveDirectory.DomainMode\"></xref> enumeration value.\n  - type: System.ObjectDisposedException\n    commentId: T:System.ObjectDisposedException\n    description: The object has been disposed.\n  - type: System.UnauthorizedAccessException\n    commentId: T:System.UnauthorizedAccessException\n    description: The specified account does not have permission to perform this operation.\n  version:\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  monikers:\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.DirectoryServices.ActiveDirectory/Domain.xml\n  author: BrucePerlerMS\n  ms.author: bruceper\n  manager: mbaldwin\n- uid: System.DirectoryServices.ActiveDirectory.Domain.RaiseDomainFunctionalityLevel(System.Int32)\n  commentId: M:System.DirectoryServices.ActiveDirectory.Domain.RaiseDomainFunctionalityLevel(System.Int32)\n  id: RaiseDomainFunctionalityLevel(System.Int32)\n  parent: System.DirectoryServices.ActiveDirectory.Domain\n  langs:\n  - csharp\n  name: RaiseDomainFunctionalityLevel(Int32)\n  nameWithType: Domain.RaiseDomainFunctionalityLevel(Int32)\n  fullName: Domain.RaiseDomainFunctionalityLevel(Int32)\n  type: Method\n  assemblies:\n  - System.DirectoryServices\n  namespace: System.DirectoryServices.ActiveDirectory\n  summary: Raises the functionality level for the domain.\n  syntax:\n    content: public void RaiseDomainFunctionalityLevel (int domainMode);\n    parameters:\n    - id: domainMode\n      type: System.Int32\n      description: A value representing the new level.\n  overload: System.DirectoryServices.ActiveDirectory.Domain.RaiseDomainFunctionalityLevel*\n  exceptions: []\n  version:\n  - netcore-2.0\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  monikers:\n  - netcore-2.0\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.DirectoryServices.ActiveDirectory/Domain.xml\n  author: BrucePerlerMS\n  ms.author: bruceper\n  manager: mbaldwin\n- uid: System.DirectoryServices.ActiveDirectory.Domain.RepairTrustRelationship(System.DirectoryServices.ActiveDirectory.Domain)\n  commentId: M:System.DirectoryServices.ActiveDirectory.Domain.RepairTrustRelationship(System.DirectoryServices.ActiveDirectory.Domain)\n  id: RepairTrustRelationship(System.DirectoryServices.ActiveDirectory.Domain)\n  parent: System.DirectoryServices.ActiveDirectory.Domain\n  langs:\n  - csharp\n  name: RepairTrustRelationship(Domain)\n  nameWithType: Domain.RepairTrustRelationship(Domain)\n  fullName: Domain.RepairTrustRelationship(Domain)\n  type: Method\n  assemblies:\n  - System.DirectoryServices\n  namespace: System.DirectoryServices.ActiveDirectory\n  summary: Repairs a trust relationship.\n  remarks: This method repairs the trust by resetting the secure channel for the trust. If the operation fails to reset the secure channel, then it will also reset the trust password.\n  syntax:\n    content: public void RepairTrustRelationship (System.DirectoryServices.ActiveDirectory.Domain targetDomain);\n    parameters:\n    - id: targetDomain\n      type: System.DirectoryServices.ActiveDirectory.Domain\n      description: An <xref href=\"System.DirectoryServices.ActiveDirectory.Domain\"></xref> object that represents the domain with which the trust exists.\n  overload: System.DirectoryServices.ActiveDirectory.Domain.RepairTrustRelationship*\n  exceptions:\n  - type: System.DirectoryServices.ActiveDirectory.ActiveDirectoryObjectNotFoundException\n    commentId: T:System.DirectoryServices.ActiveDirectory.ActiveDirectoryObjectNotFoundException\n    description: There is no trust relationship with the <xref href=\"System.DirectoryServices.ActiveDirectory.Domain\"></xref> that is specified by <code>targetDomain</code>.\n  - type: System.DirectoryServices.ActiveDirectory.ActiveDirectoryOperationException\n    commentId: T:System.DirectoryServices.ActiveDirectory.ActiveDirectoryOperationException\n    description: A call to the underlying directory service resulted in an error.\n  - type: System.DirectoryServices.ActiveDirectory.ActiveDirectoryServerDownException\n    commentId: T:System.DirectoryServices.ActiveDirectory.ActiveDirectoryServerDownException\n    description: The target or source server is either busy or unavailable.\n  - type: System.ArgumentNullException\n    commentId: T:System.ArgumentNullException\n    description: <code>targetDomain</code> is `null`.\n  - type: System.ObjectDisposedException\n    commentId: T:System.ObjectDisposedException\n    description: The object has been disposed.\n  - type: System.UnauthorizedAccessException\n    commentId: T:System.UnauthorizedAccessException\n    description: The specified account does not have permission to perform this operation.\n  version:\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  monikers:\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.DirectoryServices.ActiveDirectory/Domain.xml\n  author: BrucePerlerMS\n  ms.author: bruceper\n  manager: mbaldwin\n- uid: System.DirectoryServices.ActiveDirectory.Domain.RidRoleOwner\n  commentId: P:System.DirectoryServices.ActiveDirectory.Domain.RidRoleOwner\n  id: RidRoleOwner\n  parent: System.DirectoryServices.ActiveDirectory.Domain\n  langs:\n  - csharp\n  name: RidRoleOwner\n  nameWithType: Domain.RidRoleOwner\n  fullName: Domain.RidRoleOwner\n  type: Property\n  assemblies:\n  - System.DirectoryServices\n  namespace: System.DirectoryServices.ActiveDirectory\n  summary: Gets the RID master role holder for this domain.\n  syntax:\n    content: public System.DirectoryServices.ActiveDirectory.DomainController RidRoleOwner { get; }\n    return:\n      type: System.DirectoryServices.ActiveDirectory.DomainController\n      description: An <xref href=\"System.DirectoryServices.ActiveDirectory.DomainController\"></xref> object that represents the domain controller that holds the relative identifier (RID) master role for this domain.\n  overload: System.DirectoryServices.ActiveDirectory.Domain.RidRoleOwner*\n  exceptions:\n  - type: System.ObjectDisposedException\n    commentId: T:System.ObjectDisposedException\n    description: The object has been disposed.\n  version:\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  monikers:\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.DirectoryServices.ActiveDirectory/Domain.xml\n  author: BrucePerlerMS\n  ms.author: bruceper\n  manager: mbaldwin\n- uid: System.DirectoryServices.ActiveDirectory.Domain.SetSelectiveAuthenticationStatus(System.String,System.Boolean)\n  commentId: M:System.DirectoryServices.ActiveDirectory.Domain.SetSelectiveAuthenticationStatus(System.String,System.Boolean)\n  id: SetSelectiveAuthenticationStatus(System.String,System.Boolean)\n  parent: System.DirectoryServices.ActiveDirectory.Domain\n  langs:\n  - csharp\n  name: SetSelectiveAuthenticationStatus(String, Boolean)\n  nameWithType: Domain.SetSelectiveAuthenticationStatus(String, Boolean)\n  fullName: Domain.SetSelectiveAuthenticationStatus(String, Boolean)\n  type: Method\n  assemblies:\n  - System.DirectoryServices\n  namespace: System.DirectoryServices.ActiveDirectory\n  summary: Enables or disables selective authentication for an inbound trust.\n  syntax:\n    content: public void SetSelectiveAuthenticationStatus (string targetDomainName, bool enable);\n    parameters:\n    - id: targetDomainName\n      type: System.String\n      description: The DNS name of the domain with which the inbound trust exists.\n    - id: enable\n      type: System.Boolean\n      description: '`true` if selective authentication is enabled; otherwise, `false`.'\n  overload: System.DirectoryServices.ActiveDirectory.Domain.SetSelectiveAuthenticationStatus*\n  exceptions:\n  - type: System.DirectoryServices.ActiveDirectory.ActiveDirectoryObjectNotFoundException\n    commentId: T:System.DirectoryServices.ActiveDirectory.ActiveDirectoryObjectNotFoundException\n    description: There is no trust relationship with the domain controller that is specified by <code>targetDomainName</code>.\n  - type: System.DirectoryServices.ActiveDirectory.ActiveDirectoryOperationException\n    commentId: T:System.DirectoryServices.ActiveDirectory.ActiveDirectoryOperationException\n    description: A call to the underlying directory service resulted in an error.\n  - type: System.DirectoryServices.ActiveDirectory.ActiveDirectoryServerDownException\n    commentId: T:System.DirectoryServices.ActiveDirectory.ActiveDirectoryServerDownException\n    description: The target server is either busy or unavailable.\n  - type: System.ArgumentException\n    commentId: T:System.ArgumentException\n    description: <code>targetDomainName</code> is an empty string.\n  - type: System.ArgumentNullException\n    commentId: T:System.ArgumentNullException\n    description: <code>targetDomainName</code> is `null`.\n  - type: System.ObjectDisposedException\n    commentId: T:System.ObjectDisposedException\n    description: The current object has been disposed.\n  - type: System.UnauthorizedAccessException\n    commentId: T:System.UnauthorizedAccessException\n    description: The specified account does not have permission to perform this operation.\n  version:\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  monikers:\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.DirectoryServices.ActiveDirectory/Domain.xml\n  author: BrucePerlerMS\n  ms.author: bruceper\n  manager: mbaldwin\n- uid: System.DirectoryServices.ActiveDirectory.Domain.SetSidFilteringStatus(System.String,System.Boolean)\n  commentId: M:System.DirectoryServices.ActiveDirectory.Domain.SetSidFilteringStatus(System.String,System.Boolean)\n  id: SetSidFilteringStatus(System.String,System.Boolean)\n  parent: System.DirectoryServices.ActiveDirectory.Domain\n  langs:\n  - csharp\n  name: SetSidFilteringStatus(String, Boolean)\n  nameWithType: Domain.SetSidFilteringStatus(String, Boolean)\n  fullName: Domain.SetSidFilteringStatus(String, Boolean)\n  type: Method\n  assemblies:\n  - System.DirectoryServices\n  namespace: System.DirectoryServices.ActiveDirectory\n  summary: Sets the SID filtering state for the specified domain.\n  syntax:\n    content: public void SetSidFilteringStatus (string targetDomainName, bool enable);\n    parameters:\n    - id: targetDomainName\n      type: System.String\n      description: The DNS name of the domain with which the trust exists.\n    - id: enable\n      type: System.Boolean\n      description: '`true` if SID filtering must be enabled; otherwise, `false`.'\n  overload: System.DirectoryServices.ActiveDirectory.Domain.SetSidFilteringStatus*\n  exceptions:\n  - type: System.DirectoryServices.ActiveDirectory.ActiveDirectoryObjectNotFoundException\n    commentId: T:System.DirectoryServices.ActiveDirectory.ActiveDirectoryObjectNotFoundException\n    description: There is no trust relationship with the domain that is specified by <code>targetDomainName</code>.\n  - type: System.DirectoryServices.ActiveDirectory.ActiveDirectoryOperationException\n    commentId: T:System.DirectoryServices.ActiveDirectory.ActiveDirectoryOperationException\n    description: A call to the underlying directory service resulted in an error.\n  - type: System.DirectoryServices.ActiveDirectory.ActiveDirectoryServerDownException\n    commentId: T:System.DirectoryServices.ActiveDirectory.ActiveDirectoryServerDownException\n    description: The target server is either busy or unavailable.\n  - type: System.ArgumentException\n    commentId: T:System.ArgumentException\n    description: <code>targetDomainName</code> is an empty string.\n  - type: System.ArgumentNullException\n    commentId: T:System.ArgumentNullException\n    description: <code>targetDomainName</code> is `null`.\n  - type: System.ObjectDisposedException\n    commentId: T:System.ObjectDisposedException\n    description: The current object has been disposed.\n  version:\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  monikers:\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.DirectoryServices.ActiveDirectory/Domain.xml\n  author: BrucePerlerMS\n  ms.author: bruceper\n  manager: mbaldwin\n- uid: System.DirectoryServices.ActiveDirectory.Domain.UpdateLocalSideOfTrustRelationship(System.String,System.String)\n  commentId: M:System.DirectoryServices.ActiveDirectory.Domain.UpdateLocalSideOfTrustRelationship(System.String,System.String)\n  id: UpdateLocalSideOfTrustRelationship(System.String,System.String)\n  parent: System.DirectoryServices.ActiveDirectory.Domain\n  langs:\n  - csharp\n  name: UpdateLocalSideOfTrustRelationship(String, String)\n  nameWithType: Domain.UpdateLocalSideOfTrustRelationship(String, String)\n  fullName: Domain.UpdateLocalSideOfTrustRelationship(String, String)\n  type: Method\n  assemblies:\n  - System.DirectoryServices\n  namespace: System.DirectoryServices.ActiveDirectory\n  summary: Updates the password for the local side of a trust relationship.\n  remarks: To re-establish the trust, both sides of the trust must be updated with the same password.\n  syntax:\n    content: public void UpdateLocalSideOfTrustRelationship (string targetDomainName, string newTrustPassword);\n    parameters:\n    - id: targetDomainName\n      type: System.String\n      description: The DNS name of the domain with which a trust exists.\n    - id: newTrustPassword\n      type: System.String\n      description: The new password for the trust.\n  overload: System.DirectoryServices.ActiveDirectory.Domain.UpdateLocalSideOfTrustRelationship*\n  exceptions:\n  - type: System.DirectoryServices.ActiveDirectory.ActiveDirectoryObjectNotFoundException\n    commentId: T:System.DirectoryServices.ActiveDirectory.ActiveDirectoryObjectNotFoundException\n    description: There is no trust relationship with the domain that is specified by <code>targetDomainName</code>.\n  - type: System.DirectoryServices.ActiveDirectory.ActiveDirectoryOperationException\n    commentId: T:System.DirectoryServices.ActiveDirectory.ActiveDirectoryOperationException\n    description: A call to the underlying directory service resulted in an error.\n  - type: System.DirectoryServices.ActiveDirectory.ActiveDirectoryServerDownException\n    commentId: T:System.DirectoryServices.ActiveDirectory.ActiveDirectoryServerDownException\n    description: The target server is either busy or unavailable.\n  - type: System.ArgumentException\n    commentId: T:System.ArgumentException\n    description: <code>targetDomainName</code> or <code>newTrustPassword</code> is an empty string.\n  - type: System.ArgumentNullException\n    commentId: T:System.ArgumentNullException\n    description: <code>targetDomainName</code> or <code>newTrustPassword</code> is `null`.\n  - type: System.ObjectDisposedException\n    commentId: T:System.ObjectDisposedException\n    description: The object has been disposed.\n  - type: System.UnauthorizedAccessException\n    commentId: T:System.UnauthorizedAccessException\n    description: The specified account does not have permission to perform this operation.\n  version:\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  monikers:\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.DirectoryServices.ActiveDirectory/Domain.xml\n  author: BrucePerlerMS\n  ms.author: bruceper\n  manager: mbaldwin\n- uid: System.DirectoryServices.ActiveDirectory.Domain.UpdateLocalSideOfTrustRelationship(System.String,System.DirectoryServices.ActiveDirectory.TrustDirection,System.String)\n  commentId: M:System.DirectoryServices.ActiveDirectory.Domain.UpdateLocalSideOfTrustRelationship(System.String,System.DirectoryServices.ActiveDirectory.TrustDirection,System.String)\n  id: UpdateLocalSideOfTrustRelationship(System.String,System.DirectoryServices.ActiveDirectory.TrustDirection,System.String)\n  parent: System.DirectoryServices.ActiveDirectory.Domain\n  langs:\n  - csharp\n  name: UpdateLocalSideOfTrustRelationship(String, TrustDirection, String)\n  nameWithType: Domain.UpdateLocalSideOfTrustRelationship(String, TrustDirection, String)\n  fullName: Domain.UpdateLocalSideOfTrustRelationship(String, TrustDirection, String)\n  type: Method\n  assemblies:\n  - System.DirectoryServices\n  namespace: System.DirectoryServices.ActiveDirectory\n  summary: Updates the password and trust direction for the local side of a trust relationship.\n  syntax:\n    content: public void UpdateLocalSideOfTrustRelationship (string targetDomainName, System.DirectoryServices.ActiveDirectory.TrustDirection newTrustDirection, string newTrustPassword);\n    parameters:\n    - id: targetDomainName\n      type: System.String\n      description: The DNS name of the domain with which a trust exists.\n    - id: newTrustDirection\n      type: System.DirectoryServices.ActiveDirectory.TrustDirection\n      description: An <xref href=\"System.DirectoryServices.ActiveDirectory.TrustDirection\"></xref> value for the new trust direction for the trust relationship.\n    - id: newTrustPassword\n      type: System.String\n      description: The new password for the trust.\n  overload: System.DirectoryServices.ActiveDirectory.Domain.UpdateLocalSideOfTrustRelationship*\n  exceptions:\n  - type: System.DirectoryServices.ActiveDirectory.ActiveDirectoryObjectNotFoundException\n    commentId: T:System.DirectoryServices.ActiveDirectory.ActiveDirectoryObjectNotFoundException\n    description: There is no trust relationship with the domain that is specified by the <code>targetDomainName</code> parameter.\n  - type: System.DirectoryServices.ActiveDirectory.ActiveDirectoryOperationException\n    commentId: T:System.DirectoryServices.ActiveDirectory.ActiveDirectoryOperationException\n    description: A call to the underlying directory service resulted in an error.\n  - type: System.DirectoryServices.ActiveDirectory.ActiveDirectoryServerDownException\n    commentId: T:System.DirectoryServices.ActiveDirectory.ActiveDirectoryServerDownException\n    description: The target server is either busy or unavailable.\n  - type: System.ArgumentException\n    commentId: T:System.ArgumentException\n    description: <code>targetDomainName</code> or <code>newTrustPassword</code> is an empty string.\n  - type: System.ArgumentNullException\n    commentId: T:System.ArgumentNullException\n    description: <code>targetDomainName</code> or <code>newTrustPassword</code> are `null`.\n  - type: System.ComponentModel.InvalidEnumArgumentException\n    commentId: T:System.ComponentModel.InvalidEnumArgumentException\n    description: <code>newTrustDirection</code> is not a valid <xref href=\"System.DirectoryServices.ActiveDirectory.TrustDirection\"></xref> value.\n  - type: System.ObjectDisposedException\n    commentId: T:System.ObjectDisposedException\n    description: The object has been disposed.\n  - type: System.UnauthorizedAccessException\n    commentId: T:System.UnauthorizedAccessException\n    description: The specified account does not have permission to perform this operation.\n  version:\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  monikers:\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.DirectoryServices.ActiveDirectory/Domain.xml\n  author: BrucePerlerMS\n  ms.author: bruceper\n  manager: mbaldwin\n- uid: System.DirectoryServices.ActiveDirectory.Domain.UpdateTrustRelationship(System.DirectoryServices.ActiveDirectory.Domain,System.DirectoryServices.ActiveDirectory.TrustDirection)\n  commentId: M:System.DirectoryServices.ActiveDirectory.Domain.UpdateTrustRelationship(System.DirectoryServices.ActiveDirectory.Domain,System.DirectoryServices.ActiveDirectory.TrustDirection)\n  id: UpdateTrustRelationship(System.DirectoryServices.ActiveDirectory.Domain,System.DirectoryServices.ActiveDirectory.TrustDirection)\n  parent: System.DirectoryServices.ActiveDirectory.Domain\n  langs:\n  - csharp\n  name: UpdateTrustRelationship(Domain, TrustDirection)\n  nameWithType: Domain.UpdateTrustRelationship(Domain, TrustDirection)\n  fullName: Domain.UpdateTrustRelationship(Domain, TrustDirection)\n  type: Method\n  assemblies:\n  - System.DirectoryServices\n  namespace: System.DirectoryServices.ActiveDirectory\n  summary: Updates the trust direction for an existing trust relationship. The trust directions are updated on both sides of the trust.\n  syntax:\n    content: public void UpdateTrustRelationship (System.DirectoryServices.ActiveDirectory.Domain targetDomain, System.DirectoryServices.ActiveDirectory.TrustDirection newTrustDirection);\n    parameters:\n    - id: targetDomain\n      type: System.DirectoryServices.ActiveDirectory.Domain\n      description: An <xref href=\"System.DirectoryServices.ActiveDirectory.Domain\"></xref> object that represents the domain with which the trust exists.\n    - id: newTrustDirection\n      type: System.DirectoryServices.ActiveDirectory.TrustDirection\n      description: An <xref href=\"System.DirectoryServices.ActiveDirectory.TrustDirection\"></xref> value that specifies the new trust direction for the trust relationship.\n  overload: System.DirectoryServices.ActiveDirectory.Domain.UpdateTrustRelationship*\n  exceptions:\n  - type: System.DirectoryServices.ActiveDirectory.ActiveDirectoryObjectNotFoundException\n    commentId: T:System.DirectoryServices.ActiveDirectory.ActiveDirectoryObjectNotFoundException\n    description: There is no trust relationship with the domain that is specified by the <code>targetDomain</code> parameter.\n  - type: System.DirectoryServices.ActiveDirectory.ActiveDirectoryOperationException\n    commentId: T:System.DirectoryServices.ActiveDirectory.ActiveDirectoryOperationException\n    description: A call to the underlying directory service resulted in an error.\n  - type: System.DirectoryServices.ActiveDirectory.ActiveDirectoryServerDownException\n    commentId: T:System.DirectoryServices.ActiveDirectory.ActiveDirectoryServerDownException\n    description: The target server is either busy or unavailable.\n  - type: System.ArgumentNullException\n    commentId: T:System.ArgumentNullException\n    description: <code>targetDomain</code> is `null`.\n  - type: System.ComponentModel.InvalidEnumArgumentException\n    commentId: T:System.ComponentModel.InvalidEnumArgumentException\n    description: <code>newTrustDirection</code> is not a valid <xref href=\"System.DirectoryServices.ActiveDirectory.TrustDirection\"></xref> value.\n  - type: System.ObjectDisposedException\n    commentId: T:System.ObjectDisposedException\n    description: The object has been disposed.\n  - type: System.UnauthorizedAccessException\n    commentId: T:System.UnauthorizedAccessException\n    description: The specified account does not have permission to perform this operation.\n  version:\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  monikers:\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.DirectoryServices.ActiveDirectory/Domain.xml\n  author: BrucePerlerMS\n  ms.author: bruceper\n  manager: mbaldwin\n- uid: System.DirectoryServices.ActiveDirectory.Domain.VerifyOutboundTrustRelationship(System.String)\n  commentId: M:System.DirectoryServices.ActiveDirectory.Domain.VerifyOutboundTrustRelationship(System.String)\n  id: VerifyOutboundTrustRelationship(System.String)\n  parent: System.DirectoryServices.ActiveDirectory.Domain\n  langs:\n  - csharp\n  name: VerifyOutboundTrustRelationship(String)\n  nameWithType: Domain.VerifyOutboundTrustRelationship(String)\n  fullName: Domain.VerifyOutboundTrustRelationship(String)\n  type: Method\n  assemblies:\n  - System.DirectoryServices\n  namespace: System.DirectoryServices.ActiveDirectory\n  summary: Verifies that a previously established outbound trust with the specified domain is valid.\n  remarks: This method is used to verify that a trust relationship has been fully established. The trust is not established until both sides of the trust have been created.\n  syntax:\n    content: public void VerifyOutboundTrustRelationship (string targetDomainName);\n    parameters:\n    - id: targetDomainName\n      type: System.String\n      description: The DNS name of the domain with which the trust exists.\n  overload: System.DirectoryServices.ActiveDirectory.Domain.VerifyOutboundTrustRelationship*\n  exceptions:\n  - type: System.DirectoryServices.ActiveDirectory.ActiveDirectoryObjectNotFoundException\n    commentId: T:System.DirectoryServices.ActiveDirectory.ActiveDirectoryObjectNotFoundException\n    description: There is no outbound trust relationship with the domain that is specified by <code>targetDomainName</code>.\n  - type: System.DirectoryServices.ActiveDirectory.ActiveDirectoryOperationException\n    commentId: T:System.DirectoryServices.ActiveDirectory.ActiveDirectoryOperationException\n    description: A call to the underlying directory service resulted in an error.\n  - type: System.DirectoryServices.ActiveDirectory.ActiveDirectoryServerDownException\n    commentId: T:System.DirectoryServices.ActiveDirectory.ActiveDirectoryServerDownException\n    description: The target server is either busy or unavailable.\n  - type: System.ArgumentException\n    commentId: T:System.ArgumentException\n    description: <code>targetDomainName</code> is an empty string.\n  - type: System.ArgumentNullException\n    commentId: T:System.ArgumentNullException\n    description: <code>targetDomainName</code> is `null`.\n  - type: System.ObjectDisposedException\n    commentId: T:System.ObjectDisposedException\n    description: The object has been disposed.\n  - type: System.UnauthorizedAccessException\n    commentId: T:System.UnauthorizedAccessException\n    description: The specified account does not have permission to perform this operation.\n  version:\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  monikers:\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.DirectoryServices.ActiveDirectory/Domain.xml\n  author: BrucePerlerMS\n  ms.author: bruceper\n  manager: mbaldwin\n- uid: System.DirectoryServices.ActiveDirectory.Domain.VerifyTrustRelationship(System.DirectoryServices.ActiveDirectory.Domain,System.DirectoryServices.ActiveDirectory.TrustDirection)\n  commentId: M:System.DirectoryServices.ActiveDirectory.Domain.VerifyTrustRelationship(System.DirectoryServices.ActiveDirectory.Domain,System.DirectoryServices.ActiveDirectory.TrustDirection)\n  id: VerifyTrustRelationship(System.DirectoryServices.ActiveDirectory.Domain,System.DirectoryServices.ActiveDirectory.TrustDirection)\n  parent: System.DirectoryServices.ActiveDirectory.Domain\n  langs:\n  - csharp\n  name: VerifyTrustRelationship(Domain, TrustDirection)\n  nameWithType: Domain.VerifyTrustRelationship(Domain, TrustDirection)\n  fullName: Domain.VerifyTrustRelationship(Domain, TrustDirection)\n  type: Method\n  assemblies:\n  - System.DirectoryServices\n  namespace: System.DirectoryServices.ActiveDirectory\n  summary: Verifies that a previously established trust with the specified domain is valid.\n  remarks: This method verifies that a trust relationship has been fully established. The trust is not established until both sides of the trust have been created.\n  syntax:\n    content: public void VerifyTrustRelationship (System.DirectoryServices.ActiveDirectory.Domain targetDomain, System.DirectoryServices.ActiveDirectory.TrustDirection direction);\n    parameters:\n    - id: targetDomain\n      type: System.DirectoryServices.ActiveDirectory.Domain\n      description: A <xref href=\"System.DirectoryServices.ActiveDirectory.Domain\"></xref> object that represents the domain with which the trust exists.\n    - id: direction\n      type: System.DirectoryServices.ActiveDirectory.TrustDirection\n      description: A <xref href=\"System.DirectoryServices.ActiveDirectory.TrustDirection\"></xref> value that specifies the direction, relative to this domain, of the trust.\n  overload: System.DirectoryServices.ActiveDirectory.Domain.VerifyTrustRelationship*\n  exceptions:\n  - type: System.DirectoryServices.ActiveDirectory.ActiveDirectoryObjectNotFoundException\n    commentId: T:System.DirectoryServices.ActiveDirectory.ActiveDirectoryObjectNotFoundException\n    description: There is no trust relationship with the domain that is specified by the <code>targetDomain</code> parameter, or the target domain does not have the trust direction that is specified by the <code>direction</code> parameter.\n  - type: System.DirectoryServices.ActiveDirectory.ActiveDirectoryOperationException\n    commentId: T:System.DirectoryServices.ActiveDirectory.ActiveDirectoryOperationException\n    description: A call to the underlying directory service resulted in an error.\n  - type: System.DirectoryServices.ActiveDirectory.ActiveDirectoryServerDownException\n    commentId: T:System.DirectoryServices.ActiveDirectory.ActiveDirectoryServerDownException\n    description: The target server is either busy or unavailable.\n  - type: System.ArgumentNullException\n    commentId: T:System.ArgumentNullException\n    description: <code>targetDomain</code> is `null`.\n  - type: System.ComponentModel.InvalidEnumArgumentException\n    commentId: T:System.ComponentModel.InvalidEnumArgumentException\n    description: <code>direction</code> is not a valid <xref href=\"System.DirectoryServices.ActiveDirectory.TrustDirection\"></xref> value.\n  - type: System.ObjectDisposedException\n    commentId: T:System.ObjectDisposedException\n    description: The object has been disposed.\n  - type: System.UnauthorizedAccessException\n    commentId: T:System.UnauthorizedAccessException\n    description: The specified account does not have permission to perform this operation.\n  version:\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  monikers:\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.DirectoryServices.ActiveDirectory/Domain.xml\n  author: BrucePerlerMS\n  ms.author: bruceper\n  manager: mbaldwin\nreferences:\n- uid: System.DirectoryServices.ActiveDirectory.ActiveDirectoryPartition\n  parent: System.DirectoryServices.ActiveDirectory\n  isExternal: false\n  name: ActiveDirectoryPartition\n  nameWithType: ActiveDirectoryPartition\n  fullName: System.DirectoryServices.ActiveDirectory.ActiveDirectoryPartition\n- uid: System.ObjectDisposedException\n  parent: System\n  isExternal: false\n  name: ObjectDisposedException\n  nameWithType: ObjectDisposedException\n  fullName: System.ObjectDisposedException\n- uid: System.DirectoryServices.ActiveDirectory.ActiveDirectoryObjectExistsException\n  parent: System.DirectoryServices.ActiveDirectory\n  isExternal: false\n  name: ActiveDirectoryObjectExistsException\n  nameWithType: ActiveDirectoryObjectExistsException\n  fullName: System.DirectoryServices.ActiveDirectory.ActiveDirectoryObjectExistsException\n- uid: System.DirectoryServices.ActiveDirectory.ActiveDirectoryOperationException\n  parent: System.DirectoryServices.ActiveDirectory\n  isExternal: false\n  name: ActiveDirectoryOperationException\n  nameWithType: ActiveDirectoryOperationException\n  fullName: System.DirectoryServices.ActiveDirectory.ActiveDirectoryOperationException\n- uid: System.DirectoryServices.ActiveDirectory.ActiveDirectoryServerDownException\n  parent: System.DirectoryServices.ActiveDirectory\n  isExternal: false\n  name: ActiveDirectoryServerDownException\n  nameWithType: ActiveDirectoryServerDownException\n  fullName: System.DirectoryServices.ActiveDirectory.ActiveDirectoryServerDownException\n- uid: System.ArgumentException\n  parent: System\n  isExternal: false\n  name: ArgumentException\n  nameWithType: ArgumentException\n  fullName: System.ArgumentException\n- uid: System.ArgumentNullException\n  parent: System\n  isExternal: false\n  name: ArgumentNullException\n  nameWithType: ArgumentNullException\n  fullName: System.ArgumentNullException\n- uid: System.ComponentModel.InvalidEnumArgumentException\n  parent: System.ComponentModel\n  isExternal: false\n  name: InvalidEnumArgumentException\n  nameWithType: InvalidEnumArgumentException\n  fullName: System.ComponentModel.InvalidEnumArgumentException\n- uid: System.UnauthorizedAccessException\n  parent: System\n  isExternal: false\n  name: UnauthorizedAccessException\n  nameWithType: UnauthorizedAccessException\n  fullName: System.UnauthorizedAccessException\n- uid: System.DirectoryServices.ActiveDirectory.ActiveDirectoryObjectNotFoundException\n  parent: System.DirectoryServices.ActiveDirectory\n  isExternal: false\n  name: ActiveDirectoryObjectNotFoundException\n  nameWithType: ActiveDirectoryObjectNotFoundException\n  fullName: System.DirectoryServices.ActiveDirectory.ActiveDirectoryObjectNotFoundException\n- uid: System.DirectoryServices.ActiveDirectory.Domain.Children\n  parent: System.DirectoryServices.ActiveDirectory.Domain\n  isExternal: false\n  name: Children\n  nameWithType: Domain.Children\n  fullName: Domain.Children\n- uid: System.DirectoryServices.ActiveDirectory.DomainCollection\n  parent: System.DirectoryServices.ActiveDirectory\n  isExternal: false\n  name: DomainCollection\n  nameWithType: DomainCollection\n  fullName: System.DirectoryServices.ActiveDirectory.DomainCollection\n- uid: System.DirectoryServices.ActiveDirectory.Domain.CreateLocalSideOfTrustRelationship(System.String,System.DirectoryServices.ActiveDirectory.TrustDirection,System.String)\n  parent: System.DirectoryServices.ActiveDirectory.Domain\n  isExternal: false\n  name: CreateLocalSideOfTrustRelationship(String, TrustDirection, String)\n  nameWithType: Domain.CreateLocalSideOfTrustRelationship(String, TrustDirection, String)\n  fullName: Domain.CreateLocalSideOfTrustRelationship(String, TrustDirection, String)\n- uid: System.String\n  parent: System\n  isExternal: false\n  name: String\n  nameWithType: String\n  fullName: System.String\n- uid: System.DirectoryServices.ActiveDirectory.TrustDirection\n  parent: System.DirectoryServices.ActiveDirectory\n  isExternal: false\n  name: TrustDirection\n  nameWithType: TrustDirection\n  fullName: System.DirectoryServices.ActiveDirectory.TrustDirection\n- uid: System.DirectoryServices.ActiveDirectory.Domain.CreateTrustRelationship(System.DirectoryServices.ActiveDirectory.Domain,System.DirectoryServices.ActiveDirectory.TrustDirection)\n  parent: System.DirectoryServices.ActiveDirectory.Domain\n  isExternal: false\n  name: CreateTrustRelationship(Domain, TrustDirection)\n  nameWithType: Domain.CreateTrustRelationship(Domain, TrustDirection)\n  fullName: Domain.CreateTrustRelationship(Domain, TrustDirection)\n- uid: System.DirectoryServices.ActiveDirectory.Domain\n  parent: System.DirectoryServices.ActiveDirectory\n  isExternal: false\n  name: Domain\n  nameWithType: Domain\n  fullName: System.DirectoryServices.ActiveDirectory.Domain\n- uid: System.DirectoryServices.ActiveDirectory.Domain.DeleteLocalSideOfTrustRelationship(System.String)\n  parent: System.DirectoryServices.ActiveDirectory.Domain\n  isExternal: false\n  name: DeleteLocalSideOfTrustRelationship(String)\n  nameWithType: Domain.DeleteLocalSideOfTrustRelationship(String)\n  fullName: Domain.DeleteLocalSideOfTrustRelationship(String)\n- uid: System.DirectoryServices.ActiveDirectory.Domain.DeleteTrustRelationship(System.DirectoryServices.ActiveDirectory.Domain)\n  parent: System.DirectoryServices.ActiveDirectory.Domain\n  isExternal: false\n  name: DeleteTrustRelationship(Domain)\n  nameWithType: Domain.DeleteTrustRelationship(Domain)\n  fullName: Domain.DeleteTrustRelationship(Domain)\n- uid: System.DirectoryServices.ActiveDirectory.Domain.DomainControllers\n  parent: System.DirectoryServices.ActiveDirectory.Domain\n  isExternal: false\n  name: DomainControllers\n  nameWithType: Domain.DomainControllers\n  fullName: Domain.DomainControllers\n- uid: System.DirectoryServices.ActiveDirectory.DomainControllerCollection\n  parent: System.DirectoryServices.ActiveDirectory\n  isExternal: false\n  name: DomainControllerCollection\n  nameWithType: DomainControllerCollection\n  fullName: System.DirectoryServices.ActiveDirectory.DomainControllerCollection\n- uid: System.DirectoryServices.ActiveDirectory.Domain.DomainMode\n  parent: System.DirectoryServices.ActiveDirectory.Domain\n  isExternal: false\n  name: DomainMode\n  nameWithType: Domain.DomainMode\n  fullName: Domain.DomainMode\n- uid: System.DirectoryServices.ActiveDirectory.DomainMode\n  parent: System.DirectoryServices.ActiveDirectory\n  isExternal: false\n  name: DomainMode\n  nameWithType: DomainMode\n  fullName: System.DirectoryServices.ActiveDirectory.DomainMode\n- uid: System.DirectoryServices.ActiveDirectory.Domain.DomainModeLevel\n  parent: System.DirectoryServices.ActiveDirectory.Domain\n  isExternal: false\n  name: DomainModeLevel\n  nameWithType: Domain.DomainModeLevel\n  fullName: Domain.DomainModeLevel\n- uid: System.Int32\n  parent: System\n  isExternal: false\n  name: Int32\n  nameWithType: Int32\n  fullName: System.Int32\n- uid: System.DirectoryServices.ActiveDirectory.Domain.FindAllDiscoverableDomainControllers(System.String)\n  parent: System.DirectoryServices.ActiveDirectory.Domain\n  isExternal: false\n  name: FindAllDiscoverableDomainControllers(String)\n  nameWithType: Domain.FindAllDiscoverableDomainControllers(String)\n  fullName: Domain.FindAllDiscoverableDomainControllers(String)\n- uid: System.DirectoryServices.ActiveDirectory.Domain.FindAllDiscoverableDomainControllers\n  parent: System.DirectoryServices.ActiveDirectory.Domain\n  isExternal: false\n  name: FindAllDiscoverableDomainControllers()\n  nameWithType: Domain.FindAllDiscoverableDomainControllers()\n  fullName: Domain.FindAllDiscoverableDomainControllers()\n- uid: System.DirectoryServices.ActiveDirectory.Domain.FindAllDomainControllers\n  parent: System.DirectoryServices.ActiveDirectory.Domain\n  isExternal: false\n  name: FindAllDomainControllers()\n  nameWithType: Domain.FindAllDomainControllers()\n  fullName: Domain.FindAllDomainControllers()\n- uid: System.DirectoryServices.ActiveDirectory.Domain.FindAllDomainControllers(System.String)\n  parent: System.DirectoryServices.ActiveDirectory.Domain\n  isExternal: false\n  name: FindAllDomainControllers(String)\n  nameWithType: Domain.FindAllDomainControllers(String)\n  fullName: Domain.FindAllDomainControllers(String)\n- uid: System.DirectoryServices.ActiveDirectory.Domain.FindDomainController\n  parent: System.DirectoryServices.ActiveDirectory.Domain\n  isExternal: false\n  name: FindDomainController()\n  nameWithType: Domain.FindDomainController()\n  fullName: Domain.FindDomainController()\n- uid: System.DirectoryServices.ActiveDirectory.DomainController\n  parent: System.DirectoryServices.ActiveDirectory\n  isExternal: false\n  name: DomainController\n  nameWithType: DomainController\n  fullName: System.DirectoryServices.ActiveDirectory.DomainController\n- uid: System.DirectoryServices.ActiveDirectory.Domain.FindDomainController(System.DirectoryServices.ActiveDirectory.LocatorOptions)\n  parent: System.DirectoryServices.ActiveDirectory.Domain\n  isExternal: false\n  name: FindDomainController(LocatorOptions)\n  nameWithType: Domain.FindDomainController(LocatorOptions)\n  fullName: Domain.FindDomainController(LocatorOptions)\n- uid: System.DirectoryServices.ActiveDirectory.LocatorOptions\n  parent: System.DirectoryServices.ActiveDirectory\n  isExternal: false\n  name: LocatorOptions\n  nameWithType: LocatorOptions\n  fullName: System.DirectoryServices.ActiveDirectory.LocatorOptions\n- uid: System.DirectoryServices.ActiveDirectory.Domain.FindDomainController(System.String)\n  parent: System.DirectoryServices.ActiveDirectory.Domain\n  isExternal: false\n  name: FindDomainController(String)\n  nameWithType: Domain.FindDomainController(String)\n  fullName: Domain.FindDomainController(String)\n- uid: System.DirectoryServices.ActiveDirectory.Domain.FindDomainController(System.String,System.DirectoryServices.ActiveDirectory.LocatorOptions)\n  parent: System.DirectoryServices.ActiveDirectory.Domain\n  isExternal: false\n  name: FindDomainController(String, LocatorOptions)\n  nameWithType: Domain.FindDomainController(String, LocatorOptions)\n  fullName: Domain.FindDomainController(String, LocatorOptions)\n- uid: System.DirectoryServices.ActiveDirectory.Domain.Forest\n  parent: System.DirectoryServices.ActiveDirectory.Domain\n  isExternal: false\n  name: Forest\n  nameWithType: Domain.Forest\n  fullName: Domain.Forest\n- uid: System.DirectoryServices.ActiveDirectory.Forest\n  parent: System.DirectoryServices.ActiveDirectory\n  isExternal: false\n  name: Forest\n  nameWithType: Forest\n  fullName: System.DirectoryServices.ActiveDirectory.Forest\n- uid: System.DirectoryServices.ActiveDirectory.Domain.GetAllTrustRelationships\n  parent: System.DirectoryServices.ActiveDirectory.Domain\n  isExternal: false\n  name: GetAllTrustRelationships()\n  nameWithType: Domain.GetAllTrustRelationships()\n  fullName: Domain.GetAllTrustRelationships()\n- uid: System.DirectoryServices.ActiveDirectory.TrustRelationshipInformationCollection\n  parent: System.DirectoryServices.ActiveDirectory\n  isExternal: false\n  name: TrustRelationshipInformationCollection\n  nameWithType: TrustRelationshipInformationCollection\n  fullName: System.DirectoryServices.ActiveDirectory.TrustRelationshipInformationCollection\n- uid: System.DirectoryServices.ActiveDirectory.Domain.GetComputerDomain\n  parent: System.DirectoryServices.ActiveDirectory.Domain\n  isExternal: false\n  name: GetComputerDomain()\n  nameWithType: Domain.GetComputerDomain()\n  fullName: Domain.GetComputerDomain()\n- uid: System.DirectoryServices.ActiveDirectory.Domain.GetCurrentDomain\n  parent: System.DirectoryServices.ActiveDirectory.Domain\n  isExternal: false\n  name: GetCurrentDomain()\n  nameWithType: Domain.GetCurrentDomain()\n  fullName: Domain.GetCurrentDomain()\n- uid: System.DirectoryServices.ActiveDirectory.Domain.GetDirectoryEntry\n  parent: System.DirectoryServices.ActiveDirectory.Domain\n  isExternal: false\n  name: GetDirectoryEntry()\n  nameWithType: Domain.GetDirectoryEntry()\n  fullName: Domain.GetDirectoryEntry()\n- uid: System.DirectoryServices.DirectoryEntry\n  parent: System.DirectoryServices\n  isExternal: false\n  name: DirectoryEntry\n  nameWithType: DirectoryEntry\n  fullName: System.DirectoryServices.DirectoryEntry\n- uid: System.DirectoryServices.ActiveDirectory.Domain.GetDomain(System.DirectoryServices.ActiveDirectory.DirectoryContext)\n  parent: System.DirectoryServices.ActiveDirectory.Domain\n  isExternal: false\n  name: GetDomain(DirectoryContext)\n  nameWithType: Domain.GetDomain(DirectoryContext)\n  fullName: Domain.GetDomain(DirectoryContext)\n- uid: System.DirectoryServices.ActiveDirectory.DirectoryContext\n  parent: System.DirectoryServices.ActiveDirectory\n  isExternal: false\n  name: DirectoryContext\n  nameWithType: DirectoryContext\n  fullName: System.DirectoryServices.ActiveDirectory.DirectoryContext\n- uid: System.DirectoryServices.ActiveDirectory.Domain.GetSelectiveAuthenticationStatus(System.String)\n  parent: System.DirectoryServices.ActiveDirectory.Domain\n  isExternal: false\n  name: GetSelectiveAuthenticationStatus(String)\n  nameWithType: Domain.GetSelectiveAuthenticationStatus(String)\n  fullName: Domain.GetSelectiveAuthenticationStatus(String)\n- uid: System.Boolean\n  parent: System\n  isExternal: false\n  name: Boolean\n  nameWithType: Boolean\n  fullName: System.Boolean\n- uid: System.DirectoryServices.ActiveDirectory.Domain.GetSidFilteringStatus(System.String)\n  parent: System.DirectoryServices.ActiveDirectory.Domain\n  isExternal: false\n  name: GetSidFilteringStatus(String)\n  nameWithType: Domain.GetSidFilteringStatus(String)\n  fullName: Domain.GetSidFilteringStatus(String)\n- uid: System.DirectoryServices.ActiveDirectory.Domain.GetTrustRelationship(System.String)\n  parent: System.DirectoryServices.ActiveDirectory.Domain\n  isExternal: false\n  name: GetTrustRelationship(String)\n  nameWithType: Domain.GetTrustRelationship(String)\n  fullName: Domain.GetTrustRelationship(String)\n- uid: System.DirectoryServices.ActiveDirectory.TrustRelationshipInformation\n  parent: System.DirectoryServices.ActiveDirectory\n  isExternal: false\n  name: TrustRelationshipInformation\n  nameWithType: TrustRelationshipInformation\n  fullName: System.DirectoryServices.ActiveDirectory.TrustRelationshipInformation\n- uid: System.DirectoryServices.ActiveDirectory.Domain.InfrastructureRoleOwner\n  parent: System.DirectoryServices.ActiveDirectory.Domain\n  isExternal: false\n  name: InfrastructureRoleOwner\n  nameWithType: Domain.InfrastructureRoleOwner\n  fullName: Domain.InfrastructureRoleOwner\n- uid: System.DirectoryServices.ActiveDirectory.Domain.Parent\n  parent: System.DirectoryServices.ActiveDirectory.Domain\n  isExternal: false\n  name: Parent\n  nameWithType: Domain.Parent\n  fullName: Domain.Parent\n- uid: System.DirectoryServices.ActiveDirectory.Domain.PdcRoleOwner\n  parent: System.DirectoryServices.ActiveDirectory.Domain\n  isExternal: false\n  name: PdcRoleOwner\n  nameWithType: Domain.PdcRoleOwner\n  fullName: Domain.PdcRoleOwner\n- uid: System.DirectoryServices.ActiveDirectory.Domain.RaiseDomainFunctionality(System.DirectoryServices.ActiveDirectory.DomainMode)\n  parent: System.DirectoryServices.ActiveDirectory.Domain\n  isExternal: false\n  name: RaiseDomainFunctionality(DomainMode)\n  nameWithType: Domain.RaiseDomainFunctionality(DomainMode)\n  fullName: Domain.RaiseDomainFunctionality(DomainMode)\n- uid: System.DirectoryServices.ActiveDirectory.Domain.RaiseDomainFunctionalityLevel(System.Int32)\n  parent: System.DirectoryServices.ActiveDirectory.Domain\n  isExternal: false\n  name: RaiseDomainFunctionalityLevel(Int32)\n  nameWithType: Domain.RaiseDomainFunctionalityLevel(Int32)\n  fullName: Domain.RaiseDomainFunctionalityLevel(Int32)\n- uid: System.DirectoryServices.ActiveDirectory.Domain.RepairTrustRelationship(System.DirectoryServices.ActiveDirectory.Domain)\n  parent: System.DirectoryServices.ActiveDirectory.Domain\n  isExternal: false\n  name: RepairTrustRelationship(Domain)\n  nameWithType: Domain.RepairTrustRelationship(Domain)\n  fullName: Domain.RepairTrustRelationship(Domain)\n- uid: System.DirectoryServices.ActiveDirectory.Domain.RidRoleOwner\n  parent: System.DirectoryServices.ActiveDirectory.Domain\n  isExternal: false\n  name: RidRoleOwner\n  nameWithType: Domain.RidRoleOwner\n  fullName: Domain.RidRoleOwner\n- uid: System.DirectoryServices.ActiveDirectory.Domain.SetSelectiveAuthenticationStatus(System.String,System.Boolean)\n  parent: System.DirectoryServices.ActiveDirectory.Domain\n  isExternal: false\n  name: SetSelectiveAuthenticationStatus(String, Boolean)\n  nameWithType: Domain.SetSelectiveAuthenticationStatus(String, Boolean)\n  fullName: Domain.SetSelectiveAuthenticationStatus(String, Boolean)\n- uid: System.DirectoryServices.ActiveDirectory.Domain.SetSidFilteringStatus(System.String,System.Boolean)\n  parent: System.DirectoryServices.ActiveDirectory.Domain\n  isExternal: false\n  name: SetSidFilteringStatus(String, Boolean)\n  nameWithType: Domain.SetSidFilteringStatus(String, Boolean)\n  fullName: Domain.SetSidFilteringStatus(String, Boolean)\n- uid: System.DirectoryServices.ActiveDirectory.Domain.UpdateLocalSideOfTrustRelationship(System.String,System.String)\n  parent: System.DirectoryServices.ActiveDirectory.Domain\n  isExternal: false\n  name: UpdateLocalSideOfTrustRelationship(String, String)\n  nameWithType: Domain.UpdateLocalSideOfTrustRelationship(String, String)\n  fullName: Domain.UpdateLocalSideOfTrustRelationship(String, String)\n- uid: System.DirectoryServices.ActiveDirectory.Domain.UpdateLocalSideOfTrustRelationship(System.String,System.DirectoryServices.ActiveDirectory.TrustDirection,System.String)\n  parent: System.DirectoryServices.ActiveDirectory.Domain\n  isExternal: false\n  name: UpdateLocalSideOfTrustRelationship(String, TrustDirection, String)\n  nameWithType: Domain.UpdateLocalSideOfTrustRelationship(String, TrustDirection, String)\n  fullName: Domain.UpdateLocalSideOfTrustRelationship(String, TrustDirection, String)\n- uid: System.DirectoryServices.ActiveDirectory.Domain.UpdateTrustRelationship(System.DirectoryServices.ActiveDirectory.Domain,System.DirectoryServices.ActiveDirectory.TrustDirection)\n  parent: System.DirectoryServices.ActiveDirectory.Domain\n  isExternal: false\n  name: UpdateTrustRelationship(Domain, TrustDirection)\n  nameWithType: Domain.UpdateTrustRelationship(Domain, TrustDirection)\n  fullName: Domain.UpdateTrustRelationship(Domain, TrustDirection)\n- uid: System.DirectoryServices.ActiveDirectory.Domain.VerifyOutboundTrustRelationship(System.String)\n  parent: System.DirectoryServices.ActiveDirectory.Domain\n  isExternal: false\n  name: VerifyOutboundTrustRelationship(String)\n  nameWithType: Domain.VerifyOutboundTrustRelationship(String)\n  fullName: Domain.VerifyOutboundTrustRelationship(String)\n- uid: System.DirectoryServices.ActiveDirectory.Domain.VerifyTrustRelationship(System.DirectoryServices.ActiveDirectory.Domain,System.DirectoryServices.ActiveDirectory.TrustDirection)\n  parent: System.DirectoryServices.ActiveDirectory.Domain\n  isExternal: false\n  name: VerifyTrustRelationship(Domain, TrustDirection)\n  nameWithType: Domain.VerifyTrustRelationship(Domain, TrustDirection)\n  fullName: Domain.VerifyTrustRelationship(Domain, TrustDirection)\n- uid: System.DirectoryServices.ActiveDirectory.Domain.Children*\n  parent: System.DirectoryServices.ActiveDirectory.Domain\n  isExternal: false\n  name: Children\n  nameWithType: Domain.Children\n  fullName: Domain.Children\n  monikers:\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.DirectoryServices.ActiveDirectory/Domain.xml\n- uid: System.DirectoryServices.ActiveDirectory.Domain.CreateLocalSideOfTrustRelationship*\n  parent: System.DirectoryServices.ActiveDirectory.Domain\n  isExternal: false\n  name: CreateLocalSideOfTrustRelationship\n  nameWithType: Domain.CreateLocalSideOfTrustRelationship\n  fullName: Domain.CreateLocalSideOfTrustRelationship\n  monikers:\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.DirectoryServices.ActiveDirectory/Domain.xml\n- uid: System.DirectoryServices.ActiveDirectory.Domain.CreateTrustRelationship*\n  parent: System.DirectoryServices.ActiveDirectory.Domain\n  isExternal: false\n  name: CreateTrustRelationship\n  nameWithType: Domain.CreateTrustRelationship\n  fullName: Domain.CreateTrustRelationship\n  monikers:\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.DirectoryServices.ActiveDirectory/Domain.xml\n- uid: System.DirectoryServices.ActiveDirectory.Domain.DeleteLocalSideOfTrustRelationship*\n  parent: System.DirectoryServices.ActiveDirectory.Domain\n  isExternal: false\n  name: DeleteLocalSideOfTrustRelationship\n  nameWithType: Domain.DeleteLocalSideOfTrustRelationship\n  fullName: Domain.DeleteLocalSideOfTrustRelationship\n  monikers:\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.DirectoryServices.ActiveDirectory/Domain.xml\n- uid: System.DirectoryServices.ActiveDirectory.Domain.DeleteTrustRelationship*\n  parent: System.DirectoryServices.ActiveDirectory.Domain\n  isExternal: false\n  name: DeleteTrustRelationship\n  nameWithType: Domain.DeleteTrustRelationship\n  fullName: Domain.DeleteTrustRelationship\n  monikers:\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.DirectoryServices.ActiveDirectory/Domain.xml\n- uid: System.DirectoryServices.ActiveDirectory.Domain.DomainControllers*\n  parent: System.DirectoryServices.ActiveDirectory.Domain\n  isExternal: false\n  name: DomainControllers\n  nameWithType: Domain.DomainControllers\n  fullName: Domain.DomainControllers\n  monikers:\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.DirectoryServices.ActiveDirectory/Domain.xml\n- uid: System.DirectoryServices.ActiveDirectory.Domain.DomainMode*\n  parent: System.DirectoryServices.ActiveDirectory.Domain\n  isExternal: false\n  name: DomainMode\n  nameWithType: Domain.DomainMode\n  fullName: Domain.DomainMode\n  monikers:\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.DirectoryServices.ActiveDirectory/Domain.xml\n- uid: System.DirectoryServices.ActiveDirectory.Domain.DomainModeLevel*\n  parent: System.DirectoryServices.ActiveDirectory.Domain\n  isExternal: false\n  name: DomainModeLevel\n  nameWithType: Domain.DomainModeLevel\n  fullName: Domain.DomainModeLevel\n  monikers:\n  - netcore-2.0\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.DirectoryServices.ActiveDirectory/Domain.xml\n- uid: System.DirectoryServices.ActiveDirectory.Domain.FindAllDiscoverableDomainControllers*\n  parent: System.DirectoryServices.ActiveDirectory.Domain\n  isExternal: false\n  name: FindAllDiscoverableDomainControllers\n  nameWithType: Domain.FindAllDiscoverableDomainControllers\n  fullName: Domain.FindAllDiscoverableDomainControllers\n  monikers:\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.DirectoryServices.ActiveDirectory/Domain.xml\n- uid: System.DirectoryServices.ActiveDirectory.Domain.FindAllDomainControllers*\n  parent: System.DirectoryServices.ActiveDirectory.Domain\n  isExternal: false\n  name: FindAllDomainControllers\n  nameWithType: Domain.FindAllDomainControllers\n  fullName: Domain.FindAllDomainControllers\n  monikers:\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.DirectoryServices.ActiveDirectory/Domain.xml\n- uid: System.DirectoryServices.ActiveDirectory.Domain.FindDomainController*\n  parent: System.DirectoryServices.ActiveDirectory.Domain\n  isExternal: false\n  name: FindDomainController\n  nameWithType: Domain.FindDomainController\n  fullName: Domain.FindDomainController\n  monikers:\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.DirectoryServices.ActiveDirectory/Domain.xml\n- uid: System.DirectoryServices.ActiveDirectory.Domain.Forest*\n  parent: System.DirectoryServices.ActiveDirectory.Domain\n  isExternal: false\n  name: Forest\n  nameWithType: Domain.Forest\n  fullName: Domain.Forest\n  monikers:\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.DirectoryServices.ActiveDirectory/Domain.xml\n- uid: System.DirectoryServices.ActiveDirectory.Domain.GetAllTrustRelationships*\n  parent: System.DirectoryServices.ActiveDirectory.Domain\n  isExternal: false\n  name: GetAllTrustRelationships\n  nameWithType: Domain.GetAllTrustRelationships\n  fullName: Domain.GetAllTrustRelationships\n  monikers:\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.DirectoryServices.ActiveDirectory/Domain.xml\n- uid: System.DirectoryServices.ActiveDirectory.Domain.GetComputerDomain*\n  parent: System.DirectoryServices.ActiveDirectory.Domain\n  isExternal: false\n  name: GetComputerDomain\n  nameWithType: Domain.GetComputerDomain\n  fullName: Domain.GetComputerDomain\n  monikers:\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.DirectoryServices.ActiveDirectory/Domain.xml\n- uid: System.DirectoryServices.ActiveDirectory.Domain.GetCurrentDomain*\n  parent: System.DirectoryServices.ActiveDirectory.Domain\n  isExternal: false\n  name: GetCurrentDomain\n  nameWithType: Domain.GetCurrentDomain\n  fullName: Domain.GetCurrentDomain\n  monikers:\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.DirectoryServices.ActiveDirectory/Domain.xml\n- uid: System.DirectoryServices.ActiveDirectory.Domain.GetDirectoryEntry*\n  parent: System.DirectoryServices.ActiveDirectory.Domain\n  isExternal: false\n  name: GetDirectoryEntry\n  nameWithType: Domain.GetDirectoryEntry\n  fullName: Domain.GetDirectoryEntry\n  monikers:\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.DirectoryServices.ActiveDirectory/Domain.xml\n- uid: System.DirectoryServices.ActiveDirectory.Domain.GetDomain*\n  parent: System.DirectoryServices.ActiveDirectory.Domain\n  isExternal: false\n  name: GetDomain\n  nameWithType: Domain.GetDomain\n  fullName: Domain.GetDomain\n  monikers:\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.DirectoryServices.ActiveDirectory/Domain.xml\n- uid: System.DirectoryServices.ActiveDirectory.Domain.GetSelectiveAuthenticationStatus*\n  parent: System.DirectoryServices.ActiveDirectory.Domain\n  isExternal: false\n  name: GetSelectiveAuthenticationStatus\n  nameWithType: Domain.GetSelectiveAuthenticationStatus\n  fullName: Domain.GetSelectiveAuthenticationStatus\n  monikers:\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.DirectoryServices.ActiveDirectory/Domain.xml\n- uid: System.DirectoryServices.ActiveDirectory.Domain.GetSidFilteringStatus*\n  parent: System.DirectoryServices.ActiveDirectory.Domain\n  isExternal: false\n  name: GetSidFilteringStatus\n  nameWithType: Domain.GetSidFilteringStatus\n  fullName: Domain.GetSidFilteringStatus\n  monikers:\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.DirectoryServices.ActiveDirectory/Domain.xml\n- uid: System.DirectoryServices.ActiveDirectory.Domain.GetTrustRelationship*\n  parent: System.DirectoryServices.ActiveDirectory.Domain\n  isExternal: false\n  name: GetTrustRelationship\n  nameWithType: Domain.GetTrustRelationship\n  fullName: Domain.GetTrustRelationship\n  monikers:\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.DirectoryServices.ActiveDirectory/Domain.xml\n- uid: System.DirectoryServices.ActiveDirectory.Domain.InfrastructureRoleOwner*\n  parent: System.DirectoryServices.ActiveDirectory.Domain\n  isExternal: false\n  name: InfrastructureRoleOwner\n  nameWithType: Domain.InfrastructureRoleOwner\n  fullName: Domain.InfrastructureRoleOwner\n  monikers:\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.DirectoryServices.ActiveDirectory/Domain.xml\n- uid: System.DirectoryServices.ActiveDirectory.Domain.Parent*\n  parent: System.DirectoryServices.ActiveDirectory.Domain\n  isExternal: false\n  name: Parent\n  nameWithType: Domain.Parent\n  fullName: Domain.Parent\n  monikers:\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.DirectoryServices.ActiveDirectory/Domain.xml\n- uid: System.DirectoryServices.ActiveDirectory.Domain.PdcRoleOwner*\n  parent: System.DirectoryServices.ActiveDirectory.Domain\n  isExternal: false\n  name: PdcRoleOwner\n  nameWithType: Domain.PdcRoleOwner\n  fullName: Domain.PdcRoleOwner\n  monikers:\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.DirectoryServices.ActiveDirectory/Domain.xml\n- uid: System.DirectoryServices.ActiveDirectory.Domain.RaiseDomainFunctionality*\n  parent: System.DirectoryServices.ActiveDirectory.Domain\n  isExternal: false\n  name: RaiseDomainFunctionality\n  nameWithType: Domain.RaiseDomainFunctionality\n  fullName: Domain.RaiseDomainFunctionality\n  monikers:\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.DirectoryServices.ActiveDirectory/Domain.xml\n- uid: System.DirectoryServices.ActiveDirectory.Domain.RaiseDomainFunctionalityLevel*\n  parent: System.DirectoryServices.ActiveDirectory.Domain\n  isExternal: false\n  name: RaiseDomainFunctionalityLevel\n  nameWithType: Domain.RaiseDomainFunctionalityLevel\n  fullName: Domain.RaiseDomainFunctionalityLevel\n  monikers:\n  - netcore-2.0\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.DirectoryServices.ActiveDirectory/Domain.xml\n- uid: System.DirectoryServices.ActiveDirectory.Domain.RepairTrustRelationship*\n  parent: System.DirectoryServices.ActiveDirectory.Domain\n  isExternal: false\n  name: RepairTrustRelationship\n  nameWithType: Domain.RepairTrustRelationship\n  fullName: Domain.RepairTrustRelationship\n  monikers:\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.DirectoryServices.ActiveDirectory/Domain.xml\n- uid: System.DirectoryServices.ActiveDirectory.Domain.RidRoleOwner*\n  parent: System.DirectoryServices.ActiveDirectory.Domain\n  isExternal: false\n  name: RidRoleOwner\n  nameWithType: Domain.RidRoleOwner\n  fullName: Domain.RidRoleOwner\n  monikers:\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.DirectoryServices.ActiveDirectory/Domain.xml\n- uid: System.DirectoryServices.ActiveDirectory.Domain.SetSelectiveAuthenticationStatus*\n  parent: System.DirectoryServices.ActiveDirectory.Domain\n  isExternal: false\n  name: SetSelectiveAuthenticationStatus\n  nameWithType: Domain.SetSelectiveAuthenticationStatus\n  fullName: Domain.SetSelectiveAuthenticationStatus\n  monikers:\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.DirectoryServices.ActiveDirectory/Domain.xml\n- uid: System.DirectoryServices.ActiveDirectory.Domain.SetSidFilteringStatus*\n  parent: System.DirectoryServices.ActiveDirectory.Domain\n  isExternal: false\n  name: SetSidFilteringStatus\n  nameWithType: Domain.SetSidFilteringStatus\n  fullName: Domain.SetSidFilteringStatus\n  monikers:\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.DirectoryServices.ActiveDirectory/Domain.xml\n- uid: System.DirectoryServices.ActiveDirectory.Domain.UpdateLocalSideOfTrustRelationship*\n  parent: System.DirectoryServices.ActiveDirectory.Domain\n  isExternal: false\n  name: UpdateLocalSideOfTrustRelationship\n  nameWithType: Domain.UpdateLocalSideOfTrustRelationship\n  fullName: Domain.UpdateLocalSideOfTrustRelationship\n  monikers:\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.DirectoryServices.ActiveDirectory/Domain.xml\n- uid: System.DirectoryServices.ActiveDirectory.Domain.UpdateTrustRelationship*\n  parent: System.DirectoryServices.ActiveDirectory.Domain\n  isExternal: false\n  name: UpdateTrustRelationship\n  nameWithType: Domain.UpdateTrustRelationship\n  fullName: Domain.UpdateTrustRelationship\n  monikers:\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.DirectoryServices.ActiveDirectory/Domain.xml\n- uid: System.DirectoryServices.ActiveDirectory.Domain.VerifyOutboundTrustRelationship*\n  parent: System.DirectoryServices.ActiveDirectory.Domain\n  isExternal: false\n  name: VerifyOutboundTrustRelationship\n  nameWithType: Domain.VerifyOutboundTrustRelationship\n  fullName: Domain.VerifyOutboundTrustRelationship\n  monikers:\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.DirectoryServices.ActiveDirectory/Domain.xml\n- uid: System.DirectoryServices.ActiveDirectory.Domain.VerifyTrustRelationship*\n  parent: System.DirectoryServices.ActiveDirectory.Domain\n  isExternal: false\n  name: VerifyTrustRelationship\n  nameWithType: Domain.VerifyTrustRelationship\n  fullName: Domain.VerifyTrustRelationship\n  monikers:\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.DirectoryServices.ActiveDirectory/Domain.xml\n- uid: System.Object.Equals(System.Object)\n  parent: System.Object\n  isExternal: false\n  name: Equals(Object)\n  nameWithType: Object.Equals(Object)\n  fullName: Object.Equals(Object)\n- uid: System.Object.Equals(System.Object,System.Object)\n  parent: System.Object\n  isExternal: false\n  name: Equals(Object, Object)\n  nameWithType: Object.Equals(Object, Object)\n  fullName: Object.Equals(Object, Object)\n- uid: System.Object.GetHashCode\n  parent: System.Object\n  isExternal: false\n  name: GetHashCode()\n  nameWithType: Object.GetHashCode()\n  fullName: Object.GetHashCode()\n- uid: System.Object.GetType\n  parent: System.Object\n  isExternal: false\n  name: GetType()\n  nameWithType: Object.GetType()\n  fullName: Object.GetType()\n- uid: System.Object.MemberwiseClone\n  parent: System.Object\n  isExternal: false\n  name: MemberwiseClone()\n  nameWithType: Object.MemberwiseClone()\n  fullName: Object.MemberwiseClone()\n- uid: System.Object.ReferenceEquals(System.Object,System.Object)\n  parent: System.Object\n  isExternal: false\n  name: ReferenceEquals(Object, Object)\n  nameWithType: Object.ReferenceEquals(Object, Object)\n  fullName: Object.ReferenceEquals(Object, Object)\n- uid: System.DirectoryServices.ActiveDirectory.ActiveDirectoryPartition.ToString\n  parent: System.DirectoryServices.ActiveDirectory.ActiveDirectoryPartition\n  isExternal: false\n  name: ToString()\n  nameWithType: ActiveDirectoryPartition.ToString()\n  fullName: ActiveDirectoryPartition.ToString()\n- uid: System.DirectoryServices.ActiveDirectory.ActiveDirectoryPartition.Dispose\n  parent: System.DirectoryServices.ActiveDirectory.ActiveDirectoryPartition\n  isExternal: false\n  name: Dispose()\n  nameWithType: ActiveDirectoryPartition.Dispose()\n  fullName: ActiveDirectoryPartition.Dispose()\n- uid: System.DirectoryServices.ActiveDirectory.ActiveDirectoryPartition.Dispose(System.Boolean)\n  parent: System.DirectoryServices.ActiveDirectory.ActiveDirectoryPartition\n  isExternal: false\n  name: Dispose(Boolean)\n  nameWithType: ActiveDirectoryPartition.Dispose(Boolean)\n  fullName: ActiveDirectoryPartition.Dispose(Boolean)\n- uid: System.DirectoryServices.ActiveDirectory.ActiveDirectoryPartition.Name\n  parent: System.DirectoryServices.ActiveDirectory.ActiveDirectoryPartition\n  isExternal: false\n  name: Name\n  nameWithType: ActiveDirectoryPartition.Name\n  fullName: ActiveDirectoryPartition.Name\n"}