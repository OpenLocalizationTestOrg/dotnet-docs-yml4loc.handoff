{"nodes":[{"content":"Controls playback of a sound from a .wav file.","nodes":[{"pos":[0,46],"content":"Controls playback of a sound from a .wav file.","nodes":[{"content":"Controls playback of a sound from a .wav file.","pos":[0,46]}]}],"pos":[1545,1592],"yaml":true},{"content":"The <xref:System.Media.SoundPlayer> class provides a simple interface for loading and playing a .wav file. The <xref:System.Media.SoundPlayer> class supports loading a .wav file from a file path, a URL, a <xref:System.IO.Stream> that contains a .wav file, or an embedded resource that contains a .wav file.  \n  \n To play a sound using the <xref:System.Media.SoundPlayer> class, configure a <xref:System.Media.SoundPlayer> with a path to the .wav file and call one of the play methods. You can identify the .wav file to play by using one of the constructors or by setting either the <xref:System.Media.SoundPlayer.SoundLocation%2A> or <xref:System.Media.SoundPlayer.Stream%2A> property. The file can be loaded prior to playing by using one of the load methods, or loading can be deferred until one of the play methods is called. A <xref:System.Media.SoundPlayer> configured to load a .wav file from a <xref:System.IO.Stream> or URL must load the .wav file into memory before playback begins.  \n  \n You can load or play a .wav file synchronously or asynchronously. If you call a synchronous load or play method, the calling thread will wait until the method returns, which may cause painting and other events to be interrupted. Calling an asynchronous load or play method will allow the calling thread to continue without interruption. For more information on asynchronous method calls, see [How to: Run an Operation in the Background](~/docs/framework/winforms/controls/how-to-run-an-operation-in-the-background.md).  \n  \n When a <xref:System.Media.SoundPlayer> has finished loading a .wav file, it raises the <xref:System.Media.SoundPlayer.LoadCompleted> event. You can examine the <xref:System.ComponentModel.AsyncCompletedEventArgs> in your event handler to determine if the load succeeded or failed. The <xref:System.Media.SoundPlayer.SoundLocationChanged> event is raised when the audio source is set to a new file path or URL. The <xref:System.Media.SoundPlayer.StreamChanged> event is raised when the audio source is set to a new <xref:System.IO.Stream>. For more information about handling events, see [NIB: Consuming Events](http://msdn.microsoft.com/en-us/01e4f1bc-e55e-413f-98c7-6588493e5f67).  \n  \n For more information about <xref:System.Media.SoundPlayer>, see [SoundPlayer Class Overview](~/docs/framework/winforms/controls/soundplayer-class-overview.md).  \n  \n> [!NOTE]\n>  The <xref:System.Media.SoundPlayer> class cannot play other file types, such as .wma or .mp3. If you want to play other file types, you can use the Windows Media Player control. For more information, see [Using the Windows Media Player Control in a .NET Framework Solution](http://go.microsoft.com/fwlink/?LinkId=131267) and [Windows Media Player Object Model Reference for Visual Basic .NET and C#](http://go.microsoft.com/fwlink/?LinkId=131269) in the Windows Media Player SDK.","nodes":[{"pos":[0,306],"content":"The <xref:System.Media.SoundPlayer> class provides a simple interface for loading and playing a .wav file. The <xref:System.Media.SoundPlayer> class supports loading a .wav file from a file path, a URL, a <xref:System.IO.Stream> that contains a .wav file, or an embedded resource that contains a .wav file.","nodes":[{"content":"The <xref:System.Media.SoundPlayer> class provides a simple interface for loading and playing a .wav file. The <xref:System.Media.SoundPlayer> class supports loading a .wav file from a file path, a URL, a <xref:System.IO.Stream> that contains a .wav file, or an embedded resource that contains a .wav file.","pos":[0,306],"nodes":[{"content":"The <ph id=\"ph1\">&lt;xref:System.Media.SoundPlayer&gt;</ph> class provides a simple interface for loading and playing a .wav file.","pos":[0,106],"source":"The <xref:System.Media.SoundPlayer> class provides a simple interface for loading and playing a .wav file."},{"content":"The <ph id=\"ph1\">&lt;xref:System.Media.SoundPlayer&gt;</ph> class supports loading a .wav file from a file path, a URL, a <ph id=\"ph2\">&lt;xref:System.IO.Stream&gt;</ph> that contains a .wav file, or an embedded resource that contains a .wav file.","pos":[107,306],"source":" The <xref:System.Media.SoundPlayer> class supports loading a .wav file from a file path, a URL, a <xref:System.IO.Stream> that contains a .wav file, or an embedded resource that contains a .wav file."}]}]},{"pos":[313,990],"content":"To play a sound using the <xref:System.Media.SoundPlayer> class, configure a <xref:System.Media.SoundPlayer> with a path to the .wav file and call one of the play methods. You can identify the .wav file to play by using one of the constructors or by setting either the <xref:System.Media.SoundPlayer.SoundLocation%2A> or <xref:System.Media.SoundPlayer.Stream%2A> property. The file can be loaded prior to playing by using one of the load methods, or loading can be deferred until one of the play methods is called. A <xref:System.Media.SoundPlayer> configured to load a .wav file from a <xref:System.IO.Stream> or URL must load the .wav file into memory before playback begins.","nodes":[{"content":"To play a sound using the <xref:System.Media.SoundPlayer> class, configure a <xref:System.Media.SoundPlayer> with a path to the .wav file and call one of the play methods. You can identify the .wav file to play by using one of the constructors or by setting either the <xref:System.Media.SoundPlayer.SoundLocation%2A> or <xref:System.Media.SoundPlayer.Stream%2A> property. The file can be loaded prior to playing by using one of the load methods, or loading can be deferred until one of the play methods is called. A <xref:System.Media.SoundPlayer> configured to load a .wav file from a <xref:System.IO.Stream> or URL must load the .wav file into memory before playback begins.","pos":[0,677],"nodes":[{"content":"To play a sound using the <ph id=\"ph1\">&lt;xref:System.Media.SoundPlayer&gt;</ph> class, configure a <ph id=\"ph2\">&lt;xref:System.Media.SoundPlayer&gt;</ph> with a path to the .wav file and call one of the play methods.","pos":[0,171],"source":"To play a sound using the <xref:System.Media.SoundPlayer> class, configure a <xref:System.Media.SoundPlayer> with a path to the .wav file and call one of the play methods."},{"content":"You can identify the .wav file to play by using one of the constructors or by setting either the <ph id=\"ph1\">&lt;xref:System.Media.SoundPlayer.SoundLocation%2A&gt;</ph> or <ph id=\"ph2\">&lt;xref:System.Media.SoundPlayer.Stream%2A&gt;</ph> property.","pos":[172,372],"source":" You can identify the .wav file to play by using one of the constructors or by setting either the <xref:System.Media.SoundPlayer.SoundLocation%2A> or <xref:System.Media.SoundPlayer.Stream%2A> property."},{"content":"The file can be loaded prior to playing by using one of the load methods, or loading can be deferred until one of the play methods is called.","pos":[373,514]},{"content":"A <ph id=\"ph1\">&lt;xref:System.Media.SoundPlayer&gt;</ph> configured to load a .wav file from a <ph id=\"ph2\">&lt;xref:System.IO.Stream&gt;</ph> or URL must load the .wav file into memory before playback begins.","pos":[515,677],"source":" A <xref:System.Media.SoundPlayer> configured to load a .wav file from a <xref:System.IO.Stream> or URL must load the .wav file into memory before playback begins."}]}]},{"pos":[997,1515],"content":"You can load or play a .wav file synchronously or asynchronously. If you call a synchronous load or play method, the calling thread will wait until the method returns, which may cause painting and other events to be interrupted. Calling an asynchronous load or play method will allow the calling thread to continue without interruption. For more information on asynchronous method calls, see [How to: Run an Operation in the Background](~/docs/framework/winforms/controls/how-to-run-an-operation-in-the-background.md).","nodes":[{"content":"You can load or play a .wav file synchronously or asynchronously.","pos":[0,65]},{"content":"If you call a synchronous load or play method, the calling thread will wait until the method returns, which may cause painting and other events to be interrupted.","pos":[66,228]},{"content":"Calling an asynchronous load or play method will allow the calling thread to continue without interruption.","pos":[229,336]},{"content":"For more information on asynchronous method calls, see <bpt id=\"p1\">[</bpt>How to: Run an Operation in the Background<ept id=\"p1\">](~/docs/framework/winforms/controls/how-to-run-an-operation-in-the-background.md)</ept>.","pos":[337,518],"source":" For more information on asynchronous method calls, see [How to: Run an Operation in the Background](~/docs/framework/winforms/controls/how-to-run-an-operation-in-the-background.md)."}]},{"pos":[1522,2203],"content":"When a <xref:System.Media.SoundPlayer> has finished loading a .wav file, it raises the <xref:System.Media.SoundPlayer.LoadCompleted> event. You can examine the <xref:System.ComponentModel.AsyncCompletedEventArgs> in your event handler to determine if the load succeeded or failed. The <xref:System.Media.SoundPlayer.SoundLocationChanged> event is raised when the audio source is set to a new file path or URL. The <xref:System.Media.SoundPlayer.StreamChanged> event is raised when the audio source is set to a new <xref:System.IO.Stream>. For more information about handling events, see [NIB: Consuming Events](http://msdn.microsoft.com/en-us/01e4f1bc-e55e-413f-98c7-6588493e5f67).","nodes":[{"content":"When a <ph id=\"ph1\">&lt;xref:System.Media.SoundPlayer&gt;</ph> has finished loading a .wav file, it raises the <ph id=\"ph2\">&lt;xref:System.Media.SoundPlayer.LoadCompleted&gt;</ph> event.","pos":[0,139],"source":"When a <xref:System.Media.SoundPlayer> has finished loading a .wav file, it raises the <xref:System.Media.SoundPlayer.LoadCompleted> event."},{"content":"You can examine the <ph id=\"ph1\">&lt;xref:System.ComponentModel.AsyncCompletedEventArgs&gt;</ph> in your event handler to determine if the load succeeded or failed.","pos":[140,280],"source":" You can examine the <xref:System.ComponentModel.AsyncCompletedEventArgs> in your event handler to determine if the load succeeded or failed."},{"content":"The <ph id=\"ph1\">&lt;xref:System.Media.SoundPlayer.SoundLocationChanged&gt;</ph> event is raised when the audio source is set to a new file path or URL.","pos":[281,409],"source":" The <xref:System.Media.SoundPlayer.SoundLocationChanged> event is raised when the audio source is set to a new file path or URL."},{"content":"The <ph id=\"ph1\">&lt;xref:System.Media.SoundPlayer.StreamChanged&gt;</ph> event is raised when the audio source is set to a new <ph id=\"ph2\">&lt;xref:System.IO.Stream&gt;</ph>.","pos":[410,538],"source":" The <xref:System.Media.SoundPlayer.StreamChanged> event is raised when the audio source is set to a new <xref:System.IO.Stream>."},{"content":"For more information about handling events, see <bpt id=\"p1\">[</bpt>NIB: Consuming Events<ept id=\"p1\">](http://msdn.microsoft.com/en-us/01e4f1bc-e55e-413f-98c7-6588493e5f67)</ept>.","pos":[539,681],"source":" For more information about handling events, see [NIB: Consuming Events](http://msdn.microsoft.com/en-us/01e4f1bc-e55e-413f-98c7-6588493e5f67)."}]},{"pos":[2210,2369],"content":"For more information about <ph id=\"ph1\">&lt;xref:System.Media.SoundPlayer&gt;</ph>, see <bpt id=\"p1\">[</bpt>SoundPlayer Class Overview<ept id=\"p1\">](~/docs/framework/winforms/controls/soundplayer-class-overview.md)</ept>.","source":"For more information about <xref:System.Media.SoundPlayer>, see [SoundPlayer Class Overview](~/docs/framework/winforms/controls/soundplayer-class-overview.md)."},{"pos":[2377,2867],"content":"[!NOTE]\n The <xref:System.Media.SoundPlayer> class cannot play other file types, such as .wma or .mp3. If you want to play other file types, you can use the Windows Media Player control. For more information, see [Using the Windows Media Player Control in a .NET Framework Solution](http://go.microsoft.com/fwlink/?LinkId=131267) and [Windows Media Player Object Model Reference for Visual Basic .NET and C#](http://go.microsoft.com/fwlink/?LinkId=131269) in the Windows Media Player SDK.","leadings":["","> "],"nodes":[{"content":" The <xref:System.Media.SoundPlayer> class cannot play other file types, such as .wma or .mp3. If you want to play other file types, you can use the Windows Media Player control. For more information, see [Using the Windows Media Player Control in a .NET Framework Solution](http://go.microsoft.com/fwlink/?LinkId=131267) and [Windows Media Player Object Model Reference for Visual Basic .NET and C#](http://go.microsoft.com/fwlink/?LinkId=131269) in the Windows Media Player SDK.","pos":[8,488],"nodes":[{"content":"The <ph id=\"ph1\">&lt;xref:System.Media.SoundPlayer&gt;</ph> class cannot play other file types, such as .wma or .mp3.","pos":[1,94],"source":" The <xref:System.Media.SoundPlayer> class cannot play other file types, such as .wma or .mp3."},{"content":"If you want to play other file types, you can use the Windows Media Player control.","pos":[95,178]},{"content":"For more information, see <bpt id=\"p1\">[</bpt>Using the Windows Media Player Control in a .NET Framework Solution<ept id=\"p1\">](http://go.microsoft.com/fwlink/?LinkId=131267)</ept> and <bpt id=\"p2\">[</bpt>Windows Media Player Object Model Reference for Visual Basic .NET and C#<ept id=\"p2\">](http://go.microsoft.com/fwlink/?LinkId=131269)</ept> in the Windows Media Player SDK.","pos":[179,480],"source":" For more information, see [Using the Windows Media Player Control in a .NET Framework Solution](http://go.microsoft.com/fwlink/?LinkId=131267) and [Windows Media Player Object Model Reference for Visual Basic .NET and C#](http://go.microsoft.com/fwlink/?LinkId=131269) in the Windows Media Player SDK."}]}]}],"pos":[1603,4484],"yaml":true,"extradata":"MT"},{"content":"Initializes a new instance of the <xref href=\"System.Media.SoundPlayer\"></xref> class.","nodes":[{"pos":[0,86],"content":"Initializes a new instance of the <ph id=\"ph1\">&lt;xref href=\"System.Media.SoundPlayer\"&gt;&lt;/xref&gt;</ph> class.","source":"Initializes a new instance of the <xref href=\"System.Media.SoundPlayer\"></xref> class."}],"pos":[7286,7373],"yaml":true},{"content":"This constructor initializes a <xref:System.Media.SoundPlayer> with no audio source. Until it is configured with an audio source path, the <xref:System.Media.SoundPlayer> will play a beep sound when one of its playback methods is called.","nodes":[{"pos":[0,237],"content":"This constructor initializes a <xref:System.Media.SoundPlayer> with no audio source. Until it is configured with an audio source path, the <xref:System.Media.SoundPlayer> will play a beep sound when one of its playback methods is called.","nodes":[{"content":"This constructor initializes a <xref:System.Media.SoundPlayer> with no audio source. Until it is configured with an audio source path, the <xref:System.Media.SoundPlayer> will play a beep sound when one of its playback methods is called.","pos":[0,237],"nodes":[{"content":"This constructor initializes a <ph id=\"ph1\">&lt;xref:System.Media.SoundPlayer&gt;</ph> with no audio source.","pos":[0,84],"source":"This constructor initializes a <xref:System.Media.SoundPlayer> with no audio source."},{"content":"Until it is configured with an audio source path, the <ph id=\"ph1\">&lt;xref:System.Media.SoundPlayer&gt;</ph> will play a beep sound when one of its playback methods is called.","pos":[85,237],"source":" Until it is configured with an audio source path, the <xref:System.Media.SoundPlayer> will play a beep sound when one of its playback methods is called."}]}]}],"pos":[7384,7622],"yaml":true,"extradata":"MT"},{"content":"Initializes a new instance of the <xref href=\"System.Media.SoundPlayer\"></xref> class, and attaches the .wav file within the specified <xref href=\"System.IO.Stream\"></xref>.","nodes":[{"pos":[0,173],"content":"Initializes a new instance of the <ph id=\"ph1\">&lt;xref href=\"System.Media.SoundPlayer\"&gt;&lt;/xref&gt;</ph> class, and attaches the .wav file within the specified <ph id=\"ph2\">&lt;xref href=\"System.IO.Stream\"&gt;&lt;/xref&gt;</ph>.","source":"Initializes a new instance of the <xref href=\"System.Media.SoundPlayer\"></xref> class, and attaches the .wav file within the specified <xref href=\"System.IO.Stream\"></xref>."}],"pos":[8719,8893],"yaml":true},{"content":"The <xref:System.IO.Stream> passed to the `stream` parameter should be a <xref:System.IO.Stream> containing a .wav file. The data returned by the <xref:System.IO.Stream.Read%2A> method of the <xref:System.IO.Stream> should be the data within a .wav file.","nodes":[{"pos":[0,254],"content":"The <xref:System.IO.Stream> passed to the `stream` parameter should be a <xref:System.IO.Stream> containing a .wav file. The data returned by the <xref:System.IO.Stream.Read%2A> method of the <xref:System.IO.Stream> should be the data within a .wav file.","nodes":[{"content":"The <ph id=\"ph1\">&lt;xref:System.IO.Stream&gt;</ph> passed to the <ph id=\"ph2\">`stream`</ph> parameter should be a <ph id=\"ph3\">&lt;xref:System.IO.Stream&gt;</ph> containing a .wav file.","pos":[0,120],"source":"The <xref:System.IO.Stream> passed to the `stream` parameter should be a <xref:System.IO.Stream> containing a .wav file."},{"content":"The data returned by the <ph id=\"ph1\">&lt;xref:System.IO.Stream.Read%2A&gt;</ph> method of the <ph id=\"ph2\">&lt;xref:System.IO.Stream&gt;</ph> should be the data within a .wav file.","pos":[121,254],"source":" The data returned by the <xref:System.IO.Stream.Read%2A> method of the <xref:System.IO.Stream> should be the data within a .wav file."}]}],"pos":[8904,9159],"yaml":true,"extradata":"MT"},{"content":"A <xref href=\"System.IO.Stream\"></xref> to a .wav file.","nodes":[{"pos":[0,55],"content":"A <ph id=\"ph1\">&lt;xref href=\"System.IO.Stream\"&gt;&lt;/xref&gt;</ph> to a .wav file.","source":"A <xref href=\"System.IO.Stream\"></xref> to a .wav file."}],"pos":[9309,9365],"yaml":true},{"content":"Initializes a new instance of the <xref href=\"System.Media.SoundPlayer\"></xref> class, and attaches the specified .wav file.","nodes":[{"pos":[0,124],"content":"Initializes a new instance of the <ph id=\"ph1\">&lt;xref href=\"System.Media.SoundPlayer\"&gt;&lt;/xref&gt;</ph> class, and attaches the specified .wav file.","source":"Initializes a new instance of the <xref href=\"System.Media.SoundPlayer\"></xref> class, and attaches the specified .wav file."}],"pos":[10388,10513],"yaml":true},{"content":"The string passed to the `soundLocation` parameter can be either a file path or a URL to a .wav file. If the path or URL is not valid, the <xref:System.Media.SoundPlayer> will still be constructed, but subsequent calls to a load or play method will fail.","nodes":[{"pos":[0,254],"content":"The string passed to the `soundLocation` parameter can be either a file path or a URL to a .wav file. If the path or URL is not valid, the <xref:System.Media.SoundPlayer> will still be constructed, but subsequent calls to a load or play method will fail.","nodes":[{"content":"The string passed to the <ph id=\"ph1\">`soundLocation`</ph> parameter can be either a file path or a URL to a .wav file.","pos":[0,101],"source":"The string passed to the `soundLocation` parameter can be either a file path or a URL to a .wav file."},{"content":"If the path or URL is not valid, the <ph id=\"ph1\">&lt;xref:System.Media.SoundPlayer&gt;</ph> will still be constructed, but subsequent calls to a load or play method will fail.","pos":[102,254],"source":" If the path or URL is not valid, the <xref:System.Media.SoundPlayer> will still be constructed, but subsequent calls to a load or play method will fail."}]}],"pos":[10524,10779],"yaml":true,"extradata":"MT"},{"content":"The location of a .wav file to load.","nodes":[{"pos":[0,36],"content":"The location of a .wav file to load.","nodes":[{"content":"The location of a .wav file to load.","pos":[0,36]}]}],"pos":[10930,10967],"yaml":true},{"content":"The URL value specified by <code>soundLocation</code> cannot be resolved.","nodes":[{"pos":[0,73],"content":"The URL value specified by <bpt id=\"p1\">&lt;code&gt;</bpt><ph id=\"ph1\">soundLocation</ph><ept id=\"p1\">&lt;/code&gt;</ept> cannot be resolved.","source":"The URL value specified by <code>soundLocation</code> cannot be resolved."}],"pos":[11121,11195],"yaml":true},{"content":"Initializes a new instance of the <xref href=\"System.Media.SoundPlayer\"></xref> class.","nodes":[{"pos":[0,86],"content":"Initializes a new instance of the <ph id=\"ph1\">&lt;xref href=\"System.Media.SoundPlayer\"&gt;&lt;/xref&gt;</ph> class.","source":"Initializes a new instance of the <xref href=\"System.Media.SoundPlayer\"></xref> class."}],"pos":[12481,12568],"yaml":true},{"content":"The <xref href=\"System.Runtime.Serialization.SerializationInfo\"></xref> to be used for deserialization.","nodes":[{"pos":[0,103],"content":"The <ph id=\"ph1\">&lt;xref href=\"System.Runtime.Serialization.SerializationInfo\"&gt;&lt;/xref&gt;</ph> to be used for deserialization.","source":"The <xref href=\"System.Runtime.Serialization.SerializationInfo\"></xref> to be used for deserialization."}],"pos":[12858,12962],"yaml":true},{"content":"The destination to be used for deserialization.","nodes":[{"pos":[0,47],"content":"The destination to be used for deserialization.","nodes":[{"content":"The destination to be used for deserialization.","pos":[0,47]}]}],"pos":[13057,13105],"yaml":true},{"content":"The <xref href=\"System.Media.SoundPlayer.SoundLocation\"></xref> specified in <code>serializationInfo</code> cannot be resolved.","nodes":[{"pos":[0,127],"content":"The <ph id=\"ph1\">&lt;xref href=\"System.Media.SoundPlayer.SoundLocation\"&gt;&lt;/xref&gt;</ph> specified in <bpt id=\"p1\">&lt;code&gt;</bpt><ph id=\"ph2\">serializationInfo</ph><ept id=\"p1\">&lt;/code&gt;</ept> cannot be resolved.","source":"The <xref href=\"System.Media.SoundPlayer.SoundLocation\"></xref> specified in <code>serializationInfo</code> cannot be resolved."}],"pos":[13259,13387],"yaml":true},{"content":"Gets a value indicating whether loading of a .wav file has successfully completed.","nodes":[{"pos":[0,82],"content":"Gets a value indicating whether loading of a .wav file has successfully completed.","nodes":[{"content":"Gets a value indicating whether loading of a .wav file has successfully completed.","pos":[0,82]}]}],"pos":[14317,14400],"yaml":true},{"content":"`true` if a .wav file is loaded; `false` if a .wav file has not yet been loaded.","nodes":[{"pos":[0,80],"content":"<ph id=\"ph1\">`true`</ph> if a .wav file is loaded; <ph id=\"ph2\">`false`</ph> if a .wav file has not yet been loaded.","source":"`true` if a .wav file is loaded; `false` if a .wav file has not yet been loaded."}],"pos":[14518,14601],"yaml":true},{"content":"Loads a sound synchronously.","nodes":[{"pos":[0,28],"content":"Loads a sound synchronously.","nodes":[{"content":"Loads a sound synchronously.","pos":[0,28]}]}],"pos":[15540,15569],"yaml":true},{"content":"The <xref:System.Media.SoundPlayer.Load%2A> method uses the current thread to load a .wav file, preventing the thread from handling other messages until the load is complete.  \n  \n> [!CAUTION]\n>  The <xref:System.Media.SoundPlayer.Load%2A> method may produce a delay while loading a large .wav file. In addition, painting and other events will be blocked until the load is completed. Use the <xref:System.Media.SoundPlayer.LoadAsync%2A> method to load a sound asynchronously, which allows the calling thread to continue without interruption.  \n  \n This method raises the <xref:System.Media.SoundPlayer.LoadCompleted> event when loading completes, even if the load was not successful.","nodes":[{"pos":[0,174],"content":"The <xref:System.Media.SoundPlayer.Load%2A> method uses the current thread to load a .wav file, preventing the thread from handling other messages until the load is complete.","nodes":[{"content":"The <ph id=\"ph1\">&lt;xref:System.Media.SoundPlayer.Load%2A&gt;</ph> method uses the current thread to load a .wav file, preventing the thread from handling other messages until the load is complete.","pos":[0,174],"source":"The <xref:System.Media.SoundPlayer.Load%2A> method uses the current thread to load a .wav file, preventing the thread from handling other messages until the load is complete."}]},{"pos":[182,541],"content":"[!CAUTION]\n The <xref:System.Media.SoundPlayer.Load%2A> method may produce a delay while loading a large .wav file. In addition, painting and other events will be blocked until the load is completed. Use the <xref:System.Media.SoundPlayer.LoadAsync%2A> method to load a sound asynchronously, which allows the calling thread to continue without interruption.","leadings":["","> "],"nodes":[{"content":" The <xref:System.Media.SoundPlayer.Load%2A> method may produce a delay while loading a large .wav file. In addition, painting and other events will be blocked until the load is completed. Use the <xref:System.Media.SoundPlayer.LoadAsync%2A> method to load a sound asynchronously, which allows the calling thread to continue without interruption.","pos":[11,357],"nodes":[{"content":"The <ph id=\"ph1\">&lt;xref:System.Media.SoundPlayer.Load%2A&gt;</ph> method may produce a delay while loading a large .wav file.","pos":[1,104],"source":" The <xref:System.Media.SoundPlayer.Load%2A> method may produce a delay while loading a large .wav file."},{"content":"In addition, painting and other events will be blocked until the load is completed.","pos":[105,188]},{"content":"Use the <ph id=\"ph1\">&lt;xref:System.Media.SoundPlayer.LoadAsync%2A&gt;</ph> method to load a sound asynchronously, which allows the calling thread to continue without interruption.","pos":[189,346],"source":" Use the <xref:System.Media.SoundPlayer.LoadAsync%2A> method to load a sound asynchronously, which allows the calling thread to continue without interruption."}]}]},{"pos":[548,683],"content":"This method raises the <xref:System.Media.SoundPlayer.LoadCompleted> event when loading completes, even if the load was not successful.","nodes":[{"content":"This method raises the <ph id=\"ph1\">&lt;xref:System.Media.SoundPlayer.LoadCompleted&gt;</ph> event when loading completes, even if the load was not successful.","pos":[0,135],"source":"This method raises the <xref:System.Media.SoundPlayer.LoadCompleted> event when loading completes, even if the load was not successful."}]}],"pos":[15580,16271],"yaml":true,"extradata":"MT"},{"content":"The elapsed time during loading exceeds the time, in milliseconds, specified by <xref href=\"System.Media.SoundPlayer.LoadTimeout\"></xref>.","nodes":[{"pos":[0,138],"content":"The elapsed time during loading exceeds the time, in milliseconds, specified by <ph id=\"ph1\">&lt;xref href=\"System.Media.SoundPlayer.LoadTimeout\"&gt;&lt;/xref&gt;</ph>.","source":"The elapsed time during loading exceeds the time, in milliseconds, specified by <xref href=\"System.Media.SoundPlayer.LoadTimeout\"></xref>."}],"pos":[17257,17396],"yaml":true},{"content":"The file specified by <xref href=\"System.Media.SoundPlayer.SoundLocation\"></xref> cannot be found.","nodes":[{"pos":[0,98],"content":"The file specified by <ph id=\"ph1\">&lt;xref href=\"System.Media.SoundPlayer.SoundLocation\"&gt;&lt;/xref&gt;</ph> cannot be found.","source":"The file specified by <xref href=\"System.Media.SoundPlayer.SoundLocation\"></xref> cannot be found."}],"pos":[17504,17603],"yaml":true},{"content":"Loads a .wav file from a stream or a Web resource using a new thread.","nodes":[{"pos":[0,69],"content":"Loads a .wav file from a stream or a Web resource using a new thread.","nodes":[{"content":"Loads a .wav file from a stream or a Web resource using a new thread.","pos":[0,69]}]}],"pos":[18501,18571],"yaml":true},{"content":"If a <xref:System.Media.SoundPlayer> is configured to load a .wav file from a <xref:System.IO.Stream> or Web resource, this method begins loading a .wav file from the location using a new thread.  \n  \n This method raises the <xref:System.Media.SoundPlayer.LoadCompleted> event when loading completes, even if the load was not successful.  \n  \n If a <xref:System.Media.SoundPlayer> is configured to load a .wav file from a local file path, this method does nothing, because loading is deferred until playing begins.  \n  \n For more information about asynchronous loading, see [How to: Load a Sound Asynchronously within a Windows Form](~/docs/framework/winforms/controls/how-to-load-a-sound-asynchronously-within-a-windows-form.md).","nodes":[{"pos":[0,195],"content":"If a <xref:System.Media.SoundPlayer> is configured to load a .wav file from a <xref:System.IO.Stream> or Web resource, this method begins loading a .wav file from the location using a new thread.","nodes":[{"content":"If a <ph id=\"ph1\">&lt;xref:System.Media.SoundPlayer&gt;</ph> is configured to load a .wav file from a <ph id=\"ph2\">&lt;xref:System.IO.Stream&gt;</ph> or Web resource, this method begins loading a .wav file from the location using a new thread.","pos":[0,195],"source":"If a <xref:System.Media.SoundPlayer> is configured to load a .wav file from a <xref:System.IO.Stream> or Web resource, this method begins loading a .wav file from the location using a new thread."}]},{"pos":[202,337],"content":"This method raises the <xref:System.Media.SoundPlayer.LoadCompleted> event when loading completes, even if the load was not successful.","nodes":[{"content":"This method raises the <ph id=\"ph1\">&lt;xref:System.Media.SoundPlayer.LoadCompleted&gt;</ph> event when loading completes, even if the load was not successful.","pos":[0,135],"source":"This method raises the <xref:System.Media.SoundPlayer.LoadCompleted> event when loading completes, even if the load was not successful."}]},{"pos":[344,514],"content":"If a <xref:System.Media.SoundPlayer> is configured to load a .wav file from a local file path, this method does nothing, because loading is deferred until playing begins.","nodes":[{"content":"If a <ph id=\"ph1\">&lt;xref:System.Media.SoundPlayer&gt;</ph> is configured to load a .wav file from a local file path, this method does nothing, because loading is deferred until playing begins.","pos":[0,170],"source":"If a <xref:System.Media.SoundPlayer> is configured to load a .wav file from a local file path, this method does nothing, because loading is deferred until playing begins."}]},{"pos":[521,730],"content":"For more information about asynchronous loading, see <bpt id=\"p1\">[</bpt>How to: Load a Sound Asynchronously within a Windows Form<ept id=\"p1\">](~/docs/framework/winforms/controls/how-to-load-a-sound-asynchronously-within-a-windows-form.md)</ept>.","source":"For more information about asynchronous loading, see [How to: Load a Sound Asynchronously within a Windows Form](~/docs/framework/winforms/controls/how-to-load-a-sound-asynchronously-within-a-windows-form.md)."}],"pos":[18582,19321],"yaml":true,"extradata":"MT"},{"content":"The elapsed time during loading exceeds the time, in milliseconds, specified by <xref href=\"System.Media.SoundPlayer.LoadTimeout\"></xref>.","nodes":[{"pos":[0,138],"content":"The elapsed time during loading exceeds the time, in milliseconds, specified by <ph id=\"ph1\">&lt;xref href=\"System.Media.SoundPlayer.LoadTimeout\"&gt;&lt;/xref&gt;</ph>.","source":"The elapsed time during loading exceeds the time, in milliseconds, specified by <xref href=\"System.Media.SoundPlayer.LoadTimeout\"></xref>."}],"pos":[20338,20477],"yaml":true},{"content":"The file specified by <xref href=\"System.Media.SoundPlayer.SoundLocation\"></xref> cannot be found.","nodes":[{"pos":[0,98],"content":"The file specified by <ph id=\"ph1\">&lt;xref href=\"System.Media.SoundPlayer.SoundLocation\"&gt;&lt;/xref&gt;</ph> cannot be found.","source":"The file specified by <xref href=\"System.Media.SoundPlayer.SoundLocation\"></xref> cannot be found."}],"pos":[20585,20684],"yaml":true},{"content":"Occurs when a .wav file has been successfully or unsuccessfully loaded.","nodes":[{"pos":[0,71],"content":"Occurs when a .wav file has been successfully or unsuccessfully loaded.","nodes":[{"content":"Occurs when a .wav file has been successfully or unsuccessfully loaded.","pos":[0,71]}]}],"pos":[21599,21671],"yaml":true},{"content":"This event is raised when loading of a .wav file is complete. The event arguments indicate whether the load of the sound was completed successfully or failed.  \n  \n For more information about handling events, see [NIB: Consuming Events](http://msdn.microsoft.com/en-us/01e4f1bc-e55e-413f-98c7-6588493e5f67).","nodes":[{"pos":[0,158],"content":"This event is raised when loading of a .wav file is complete. The event arguments indicate whether the load of the sound was completed successfully or failed.","nodes":[{"content":"This event is raised when loading of a .wav file is complete. The event arguments indicate whether the load of the sound was completed successfully or failed.","pos":[0,158],"nodes":[{"content":"This event is raised when loading of a .wav file is complete.","pos":[0,61]},{"content":"The event arguments indicate whether the load of the sound was completed successfully or failed.","pos":[62,158]}]}]},{"pos":[165,307],"content":"For more information about handling events, see <bpt id=\"p1\">[</bpt>NIB: Consuming Events<ept id=\"p1\">](http://msdn.microsoft.com/en-us/01e4f1bc-e55e-413f-98c7-6588493e5f67)</ept>.","source":"For more information about handling events, see [NIB: Consuming Events](http://msdn.microsoft.com/en-us/01e4f1bc-e55e-413f-98c7-6588493e5f67)."}],"pos":[21682,21994],"yaml":true,"extradata":"MT"},{"content":"Gets or sets the time, in milliseconds, in which the .wav file must load.","nodes":[{"pos":[0,73],"content":"Gets or sets the time, in milliseconds, in which the .wav file must load.","nodes":[{"content":"Gets or sets the time, in milliseconds, in which the .wav file must load.","pos":[0,73]}]}],"pos":[23874,23948],"yaml":true},{"content":"After this time has expired, the loading is canceled and a <xref:System.ServiceProcess.TimeoutException> exception is thrown.","nodes":[{"pos":[0,125],"content":"After this time has expired, the loading is canceled and a <xref:System.ServiceProcess.TimeoutException> exception is thrown.","nodes":[{"content":"After this time has expired, the loading is canceled and a <ph id=\"ph1\">&lt;xref:System.ServiceProcess.TimeoutException&gt;</ph> exception is thrown.","pos":[0,125],"source":"After this time has expired, the loading is canceled and a <xref:System.ServiceProcess.TimeoutException> exception is thrown."}]}],"pos":[23959,24085],"yaml":true,"extradata":"MT"},{"content":"The number of milliseconds to wait. The default is 10000 (10 seconds).","nodes":[{"pos":[0,70],"content":"The number of milliseconds to wait. The default is 10000 (10 seconds).","nodes":[{"content":"The number of milliseconds to wait. The default is 10000 (10 seconds).","pos":[0,70],"nodes":[{"content":"The number of milliseconds to wait.","pos":[0,35]},{"content":"The default is 10000 (10 seconds).","pos":[36,70]}]}]}],"pos":[24201,24272],"yaml":true},{"content":"Raises the <xref href=\"System.Media.SoundPlayer.LoadCompleted\"></xref> event.","nodes":[{"pos":[0,77],"content":"Raises the <ph id=\"ph1\">&lt;xref href=\"System.Media.SoundPlayer.LoadCompleted\"&gt;&lt;/xref&gt;</ph> event.","source":"Raises the <xref href=\"System.Media.SoundPlayer.LoadCompleted\"></xref> event."}],"pos":[25483,25561],"yaml":true},{"content":"This method is called when loading of a .wav file is complete.  \n  \n Raising an event invokes the event handler through a delegate. For more information, see [NIB: Raising an Event](http://msdn.microsoft.com/en-us/f2adaf01-1ed1-42e1-8c31-8d467e7e0ee2).  \n  \n The <xref:System.Media.SoundPlayer.OnLoadCompleted%2A> method also allows derived classes to handle the event without attaching a delegate. This is the preferred technique for handling the event in a derived class.","nodes":[{"pos":[0,62],"content":"This method is called when loading of a .wav file is complete.","nodes":[{"content":"This method is called when loading of a .wav file is complete.","pos":[0,62]}]},{"pos":[69,252],"content":"Raising an event invokes the event handler through a delegate. For more information, see [NIB: Raising an Event](http://msdn.microsoft.com/en-us/f2adaf01-1ed1-42e1-8c31-8d467e7e0ee2).","nodes":[{"content":"Raising an event invokes the event handler through a delegate.","pos":[0,62]},{"content":"For more information, see <bpt id=\"p1\">[</bpt>NIB: Raising an Event<ept id=\"p1\">](http://msdn.microsoft.com/en-us/f2adaf01-1ed1-42e1-8c31-8d467e7e0ee2)</ept>.","pos":[63,183],"source":" For more information, see [NIB: Raising an Event](http://msdn.microsoft.com/en-us/f2adaf01-1ed1-42e1-8c31-8d467e7e0ee2)."}]},{"pos":[259,473],"content":"The <xref:System.Media.SoundPlayer.OnLoadCompleted%2A> method also allows derived classes to handle the event without attaching a delegate. This is the preferred technique for handling the event in a derived class.","nodes":[{"content":"The <xref:System.Media.SoundPlayer.OnLoadCompleted%2A> method also allows derived classes to handle the event without attaching a delegate. This is the preferred technique for handling the event in a derived class.","pos":[0,214],"nodes":[{"content":"The <ph id=\"ph1\">&lt;xref:System.Media.SoundPlayer.OnLoadCompleted%2A&gt;</ph> method also allows derived classes to handle the event without attaching a delegate.","pos":[0,139],"source":"The <xref:System.Media.SoundPlayer.OnLoadCompleted%2A> method also allows derived classes to handle the event without attaching a delegate."},{"content":"This is the preferred technique for handling the event in a derived class.","pos":[140,214]}]}]}],"pos":[25572,26052],"yaml":true,"extradata":"MT"},{"content":"An <xref href=\"System.ComponentModel.AsyncCompletedEventArgs\"></xref> that contains the event data.","nodes":[{"pos":[0,99],"content":"An <ph id=\"ph1\">&lt;xref href=\"System.ComponentModel.AsyncCompletedEventArgs\"&gt;&lt;/xref&gt;</ph> that contains the event data.","source":"An <xref href=\"System.ComponentModel.AsyncCompletedEventArgs\"></xref> that contains the event data."}],"pos":[26270,26370],"yaml":true},{"content":"Raises the <xref href=\"System.Media.SoundPlayer.SoundLocationChanged\"></xref> event.","nodes":[{"pos":[0,84],"content":"Raises the <ph id=\"ph1\">&lt;xref href=\"System.Media.SoundPlayer.SoundLocationChanged\"&gt;&lt;/xref&gt;</ph> event.","source":"Raises the <xref href=\"System.Media.SoundPlayer.SoundLocationChanged\"></xref> event."}],"pos":[27498,27583],"yaml":true},{"content":"This method is called when a new audio source path for this <xref:System.Media.SoundPlayer> has been set.  \n  \n Raising an event invokes the event handler through a delegate. For more information, see How to: Provide Event functionality and [NIB: Raising an Event](http://msdn.microsoft.com/en-us/f2adaf01-1ed1-42e1-8c31-8d467e7e0ee2).  \n  \n The <xref:System.Media.SoundPlayer.OnSoundLocationChanged%2A> method also allows derived classes to handle the event without attaching a delegate. This is the preferred technique for handling the event in a derived class.","nodes":[{"pos":[0,105],"content":"This method is called when a new audio source path for this <xref:System.Media.SoundPlayer> has been set.","nodes":[{"content":"This method is called when a new audio source path for this <ph id=\"ph1\">&lt;xref:System.Media.SoundPlayer&gt;</ph> has been set.","pos":[0,105],"source":"This method is called when a new audio source path for this <xref:System.Media.SoundPlayer> has been set."}]},{"pos":[112,335],"content":"Raising an event invokes the event handler through a delegate. For more information, see How to: Provide Event functionality and [NIB: Raising an Event](http://msdn.microsoft.com/en-us/f2adaf01-1ed1-42e1-8c31-8d467e7e0ee2).","nodes":[{"content":"Raising an event invokes the event handler through a delegate.","pos":[0,62]},{"content":"For more information, see How to: Provide Event functionality and <bpt id=\"p1\">[</bpt>NIB: Raising an Event<ept id=\"p1\">](http://msdn.microsoft.com/en-us/f2adaf01-1ed1-42e1-8c31-8d467e7e0ee2)</ept>.","pos":[63,223],"source":" For more information, see How to: Provide Event functionality and [NIB: Raising an Event](http://msdn.microsoft.com/en-us/f2adaf01-1ed1-42e1-8c31-8d467e7e0ee2)."}]},{"pos":[342,563],"content":"The <xref:System.Media.SoundPlayer.OnSoundLocationChanged%2A> method also allows derived classes to handle the event without attaching a delegate. This is the preferred technique for handling the event in a derived class.","nodes":[{"content":"The <xref:System.Media.SoundPlayer.OnSoundLocationChanged%2A> method also allows derived classes to handle the event without attaching a delegate. This is the preferred technique for handling the event in a derived class.","pos":[0,221],"nodes":[{"content":"The <ph id=\"ph1\">&lt;xref:System.Media.SoundPlayer.OnSoundLocationChanged%2A&gt;</ph> method also allows derived classes to handle the event without attaching a delegate.","pos":[0,146],"source":"The <xref:System.Media.SoundPlayer.OnSoundLocationChanged%2A> method also allows derived classes to handle the event without attaching a delegate."},{"content":"This is the preferred technique for handling the event in a derived class.","pos":[147,221]}]}]}],"pos":[27594,28164],"yaml":true,"extradata":"MT"},{"content":"An <xref href=\"System.EventArgs\"></xref> that contains the event data.","nodes":[{"pos":[0,70],"content":"An <ph id=\"ph1\">&lt;xref href=\"System.EventArgs\"&gt;&lt;/xref&gt;</ph> that contains the event data.","source":"An <xref href=\"System.EventArgs\"></xref> that contains the event data."}],"pos":[28324,28395],"yaml":true},{"content":"Raises the <xref href=\"System.Media.SoundPlayer.StreamChanged\"></xref> event.","nodes":[{"pos":[0,77],"content":"Raises the <ph id=\"ph1\">&lt;xref href=\"System.Media.SoundPlayer.StreamChanged\"&gt;&lt;/xref&gt;</ph> event.","source":"Raises the <xref href=\"System.Media.SoundPlayer.StreamChanged\"></xref> event."}],"pos":[29488,29566],"yaml":true},{"content":"This method is called when a new <xref:System.IO.Stream> audio source for this <xref:System.Media.SoundPlayer> has been set.  \n  \n Raising an event invokes the event handler through a delegate. For more information, see [NIB: Raising an Event](http://msdn.microsoft.com/en-us/f2adaf01-1ed1-42e1-8c31-8d467e7e0ee2).  \n  \n The <xref:System.Media.SoundPlayer.OnStreamChanged%2A> method also allows derived classes to handle the event without attaching a delegate. This is the preferred technique for handling the event in a derived class.","nodes":[{"pos":[0,124],"content":"This method is called when a new <xref:System.IO.Stream> audio source for this <xref:System.Media.SoundPlayer> has been set.","nodes":[{"content":"This method is called when a new <ph id=\"ph1\">&lt;xref:System.IO.Stream&gt;</ph> audio source for this <ph id=\"ph2\">&lt;xref:System.Media.SoundPlayer&gt;</ph> has been set.","pos":[0,124],"source":"This method is called when a new <xref:System.IO.Stream> audio source for this <xref:System.Media.SoundPlayer> has been set."}]},{"pos":[131,314],"content":"Raising an event invokes the event handler through a delegate. For more information, see [NIB: Raising an Event](http://msdn.microsoft.com/en-us/f2adaf01-1ed1-42e1-8c31-8d467e7e0ee2).","nodes":[{"content":"Raising an event invokes the event handler through a delegate.","pos":[0,62]},{"content":"For more information, see <bpt id=\"p1\">[</bpt>NIB: Raising an Event<ept id=\"p1\">](http://msdn.microsoft.com/en-us/f2adaf01-1ed1-42e1-8c31-8d467e7e0ee2)</ept>.","pos":[63,183],"source":" For more information, see [NIB: Raising an Event](http://msdn.microsoft.com/en-us/f2adaf01-1ed1-42e1-8c31-8d467e7e0ee2)."}]},{"pos":[321,535],"content":"The <xref:System.Media.SoundPlayer.OnStreamChanged%2A> method also allows derived classes to handle the event without attaching a delegate. This is the preferred technique for handling the event in a derived class.","nodes":[{"content":"The <xref:System.Media.SoundPlayer.OnStreamChanged%2A> method also allows derived classes to handle the event without attaching a delegate. This is the preferred technique for handling the event in a derived class.","pos":[0,214],"nodes":[{"content":"The <ph id=\"ph1\">&lt;xref:System.Media.SoundPlayer.OnStreamChanged%2A&gt;</ph> method also allows derived classes to handle the event without attaching a delegate.","pos":[0,139],"source":"The <xref:System.Media.SoundPlayer.OnStreamChanged%2A> method also allows derived classes to handle the event without attaching a delegate."},{"content":"This is the preferred technique for handling the event in a derived class.","pos":[140,214]}]}]}],"pos":[29577,30119],"yaml":true,"extradata":"MT"},{"content":"An <xref href=\"System.EventArgs\"></xref> that contains the event data.","nodes":[{"pos":[0,70],"content":"An <ph id=\"ph1\">&lt;xref href=\"System.EventArgs\"&gt;&lt;/xref&gt;</ph> that contains the event data.","source":"An <xref href=\"System.EventArgs\"></xref> that contains the event data."}],"pos":[30272,30343],"yaml":true},{"content":"Plays the .wav file using a new thread, and loads the .wav file first if it has not been loaded.","nodes":[{"pos":[0,96],"content":"Plays the .wav file using a new thread, and loads the .wav file first if it has not been loaded.","nodes":[{"content":"Plays the .wav file using a new thread, and loads the .wav file first if it has not been loaded.","pos":[0,96]}]}],"pos":[31282,31379],"yaml":true},{"content":"The <xref:System.Media.SoundPlayer.Play%2A> method plays the sound using a new thread. If you call <xref:System.Media.SoundPlayer.Play%2A> before the .wav file has been loaded into memory, the .wav file will be loaded before playback starts. You can use the <xref:System.Media.SoundPlayer.LoadAsync%2A> or <xref:System.Media.SoundPlayer.Load%2A> method to load the .wav file to memory in advance. After a .wav file is successfully loaded from a <xref:System.IO.Stream> or URL, future calls to playback methods for the <xref:System.Media.SoundPlayer> will not need to reload the .wav file until the path for the sound changes.  \n  \n If the .wav file has not been specified or it fails to load, the <xref:System.Media.SoundPlayer.Play%2A> method will play the default beep sound.","nodes":[{"pos":[0,625],"content":"The <xref:System.Media.SoundPlayer.Play%2A> method plays the sound using a new thread. If you call <xref:System.Media.SoundPlayer.Play%2A> before the .wav file has been loaded into memory, the .wav file will be loaded before playback starts. You can use the <xref:System.Media.SoundPlayer.LoadAsync%2A> or <xref:System.Media.SoundPlayer.Load%2A> method to load the .wav file to memory in advance. After a .wav file is successfully loaded from a <xref:System.IO.Stream> or URL, future calls to playback methods for the <xref:System.Media.SoundPlayer> will not need to reload the .wav file until the path for the sound changes.","nodes":[{"content":"The <xref:System.Media.SoundPlayer.Play%2A> method plays the sound using a new thread. If you call <xref:System.Media.SoundPlayer.Play%2A> before the .wav file has been loaded into memory, the .wav file will be loaded before playback starts. You can use the <xref:System.Media.SoundPlayer.LoadAsync%2A> or <xref:System.Media.SoundPlayer.Load%2A> method to load the .wav file to memory in advance. After a .wav file is successfully loaded from a <xref:System.IO.Stream> or URL, future calls to playback methods for the <xref:System.Media.SoundPlayer> will not need to reload the .wav file until the path for the sound changes.","pos":[0,625],"nodes":[{"content":"The <ph id=\"ph1\">&lt;xref:System.Media.SoundPlayer.Play%2A&gt;</ph> method plays the sound using a new thread.","pos":[0,86],"source":"The <xref:System.Media.SoundPlayer.Play%2A> method plays the sound using a new thread."},{"content":"If you call <ph id=\"ph1\">&lt;xref:System.Media.SoundPlayer.Play%2A&gt;</ph> before the .wav file has been loaded into memory, the .wav file will be loaded before playback starts.","pos":[87,241],"source":" If you call <xref:System.Media.SoundPlayer.Play%2A> before the .wav file has been loaded into memory, the .wav file will be loaded before playback starts."},{"content":"You can use the <ph id=\"ph1\">&lt;xref:System.Media.SoundPlayer.LoadAsync%2A&gt;</ph> or <ph id=\"ph2\">&lt;xref:System.Media.SoundPlayer.Load%2A&gt;</ph> method to load the .wav file to memory in advance.","pos":[242,396],"source":" You can use the <xref:System.Media.SoundPlayer.LoadAsync%2A> or <xref:System.Media.SoundPlayer.Load%2A> method to load the .wav file to memory in advance."},{"content":"After a .wav file is successfully loaded from a <ph id=\"ph1\">&lt;xref:System.IO.Stream&gt;</ph> or URL, future calls to playback methods for the <ph id=\"ph2\">&lt;xref:System.Media.SoundPlayer&gt;</ph> will not need to reload the .wav file until the path for the sound changes.","pos":[397,625],"source":" After a .wav file is successfully loaded from a <xref:System.IO.Stream> or URL, future calls to playback methods for the <xref:System.Media.SoundPlayer> will not need to reload the .wav file until the path for the sound changes."}]}]},{"pos":[632,777],"content":"If the .wav file has not been specified or it fails to load, the <xref:System.Media.SoundPlayer.Play%2A> method will play the default beep sound.","nodes":[{"content":"If the .wav file has not been specified or it fails to load, the <ph id=\"ph1\">&lt;xref:System.Media.SoundPlayer.Play%2A&gt;</ph> method will play the default beep sound.","pos":[0,145],"source":"If the .wav file has not been specified or it fails to load, the <xref:System.Media.SoundPlayer.Play%2A> method will play the default beep sound."}]}],"pos":[31390,32172],"yaml":true,"extradata":"MT"},{"content":"The elapsed time during loading exceeds the time, in milliseconds, specified by <xref href=\"System.Media.SoundPlayer.LoadTimeout\"></xref>.","nodes":[{"pos":[0,138],"content":"The elapsed time during loading exceeds the time, in milliseconds, specified by <ph id=\"ph1\">&lt;xref href=\"System.Media.SoundPlayer.LoadTimeout\"&gt;&lt;/xref&gt;</ph>.","source":"The elapsed time during loading exceeds the time, in milliseconds, specified by <xref href=\"System.Media.SoundPlayer.LoadTimeout\"></xref>."}],"pos":[33106,33245],"yaml":true},{"content":"The file specified by <xref href=\"System.Media.SoundPlayer.SoundLocation\"></xref> cannot be found.","nodes":[{"pos":[0,98],"content":"The file specified by <ph id=\"ph1\">&lt;xref href=\"System.Media.SoundPlayer.SoundLocation\"&gt;&lt;/xref&gt;</ph> cannot be found.","source":"The file specified by <xref href=\"System.Media.SoundPlayer.SoundLocation\"></xref> cannot be found."}],"pos":[33353,33452],"yaml":true},{"content":"The .wav header is corrupted; the file specified by <xref href=\"System.Media.SoundPlayer.SoundLocation\"></xref> is not a PCM .wav file.","nodes":[{"pos":[0,135],"content":"The .wav header is corrupted; the file specified by <ph id=\"ph1\">&lt;xref href=\"System.Media.SoundPlayer.SoundLocation\"&gt;&lt;/xref&gt;</ph> is not a PCM .wav file.","source":"The .wav header is corrupted; the file specified by <xref href=\"System.Media.SoundPlayer.SoundLocation\"></xref> is not a PCM .wav file."}],"pos":[33562,33698],"yaml":true},{"content":"Plays and loops the .wav file using a new thread, and loads the .wav file first if it has not been loaded.","nodes":[{"pos":[0,106],"content":"Plays and loops the .wav file using a new thread, and loads the .wav file first if it has not been loaded.","nodes":[{"content":"Plays and loops the .wav file using a new thread, and loads the .wav file first if it has not been loaded.","pos":[0,106]}]}],"pos":[34608,34715],"yaml":true},{"content":"The <xref:System.Media.SoundPlayer.PlayLooping%2A> method plays and loops the sound using a new thread. If you call <xref:System.Media.SoundPlayer.PlayLooping%2A> before the .wav file has been loaded into memory, the .wav file will be loaded before playback starts. You can use the <xref:System.Media.SoundPlayer.LoadAsync%2A> or <xref:System.Media.SoundPlayer.Load%2A> method to load the .wav file to memory in advance. After a .wav file is successfully loaded from a <xref:System.IO.Stream> or URL, future calls to playback methods for the <xref:System.Media.SoundPlayer> will not need to reload the .wav file until the path for the sound changes.  \n  \n If the .wav file has not been specified or it fails to load, the <xref:System.Media.SoundPlayer.PlayLooping%2A> method will play the default beep sound.  \n  \n For more information about <xref:System.Media.SoundPlayer.PlayLooping%2A>, see [How to: Loop a Sound Playing on a Windows Form](~/docs/framework/winforms/controls/how-to-loop-a-sound-playing-on-a-windows-form.md).","nodes":[{"pos":[0,649],"content":"The <xref:System.Media.SoundPlayer.PlayLooping%2A> method plays and loops the sound using a new thread. If you call <xref:System.Media.SoundPlayer.PlayLooping%2A> before the .wav file has been loaded into memory, the .wav file will be loaded before playback starts. You can use the <xref:System.Media.SoundPlayer.LoadAsync%2A> or <xref:System.Media.SoundPlayer.Load%2A> method to load the .wav file to memory in advance. After a .wav file is successfully loaded from a <xref:System.IO.Stream> or URL, future calls to playback methods for the <xref:System.Media.SoundPlayer> will not need to reload the .wav file until the path for the sound changes.","nodes":[{"content":"The <xref:System.Media.SoundPlayer.PlayLooping%2A> method plays and loops the sound using a new thread. If you call <xref:System.Media.SoundPlayer.PlayLooping%2A> before the .wav file has been loaded into memory, the .wav file will be loaded before playback starts. You can use the <xref:System.Media.SoundPlayer.LoadAsync%2A> or <xref:System.Media.SoundPlayer.Load%2A> method to load the .wav file to memory in advance. After a .wav file is successfully loaded from a <xref:System.IO.Stream> or URL, future calls to playback methods for the <xref:System.Media.SoundPlayer> will not need to reload the .wav file until the path for the sound changes.","pos":[0,649],"nodes":[{"content":"The <ph id=\"ph1\">&lt;xref:System.Media.SoundPlayer.PlayLooping%2A&gt;</ph> method plays and loops the sound using a new thread.","pos":[0,103],"source":"The <xref:System.Media.SoundPlayer.PlayLooping%2A> method plays and loops the sound using a new thread."},{"content":"If you call <ph id=\"ph1\">&lt;xref:System.Media.SoundPlayer.PlayLooping%2A&gt;</ph> before the .wav file has been loaded into memory, the .wav file will be loaded before playback starts.","pos":[104,265],"source":" If you call <xref:System.Media.SoundPlayer.PlayLooping%2A> before the .wav file has been loaded into memory, the .wav file will be loaded before playback starts."},{"content":"You can use the <ph id=\"ph1\">&lt;xref:System.Media.SoundPlayer.LoadAsync%2A&gt;</ph> or <ph id=\"ph2\">&lt;xref:System.Media.SoundPlayer.Load%2A&gt;</ph> method to load the .wav file to memory in advance.","pos":[266,420],"source":" You can use the <xref:System.Media.SoundPlayer.LoadAsync%2A> or <xref:System.Media.SoundPlayer.Load%2A> method to load the .wav file to memory in advance."},{"content":"After a .wav file is successfully loaded from a <ph id=\"ph1\">&lt;xref:System.IO.Stream&gt;</ph> or URL, future calls to playback methods for the <ph id=\"ph2\">&lt;xref:System.Media.SoundPlayer&gt;</ph> will not need to reload the .wav file until the path for the sound changes.","pos":[421,649],"source":" After a .wav file is successfully loaded from a <xref:System.IO.Stream> or URL, future calls to playback methods for the <xref:System.Media.SoundPlayer> will not need to reload the .wav file until the path for the sound changes."}]}]},{"pos":[656,808],"content":"If the .wav file has not been specified or it fails to load, the <xref:System.Media.SoundPlayer.PlayLooping%2A> method will play the default beep sound.","nodes":[{"content":"If the .wav file has not been specified or it fails to load, the <ph id=\"ph1\">&lt;xref:System.Media.SoundPlayer.PlayLooping%2A&gt;</ph> method will play the default beep sound.","pos":[0,152],"source":"If the .wav file has not been specified or it fails to load, the <xref:System.Media.SoundPlayer.PlayLooping%2A> method will play the default beep sound."}]},{"pos":[815,1028],"content":"For more information about <ph id=\"ph1\">&lt;xref:System.Media.SoundPlayer.PlayLooping%2A&gt;</ph>, see <bpt id=\"p1\">[</bpt>How to: Loop a Sound Playing on a Windows Form<ept id=\"p1\">](~/docs/framework/winforms/controls/how-to-loop-a-sound-playing-on-a-windows-form.md)</ept>.","source":"For more information about <xref:System.Media.SoundPlayer.PlayLooping%2A>, see [How to: Loop a Sound Playing on a Windows Form](~/docs/framework/winforms/controls/how-to-loop-a-sound-playing-on-a-windows-form.md)."}],"pos":[34726,35761],"yaml":true,"extradata":"MT"},{"content":"The elapsed time during loading exceeds the time, in milliseconds, specified by <xref href=\"System.Media.SoundPlayer.LoadTimeout\"></xref>.","nodes":[{"pos":[0,138],"content":"The elapsed time during loading exceeds the time, in milliseconds, specified by <ph id=\"ph1\">&lt;xref href=\"System.Media.SoundPlayer.LoadTimeout\"&gt;&lt;/xref&gt;</ph>.","source":"The elapsed time during loading exceeds the time, in milliseconds, specified by <xref href=\"System.Media.SoundPlayer.LoadTimeout\"></xref>."}],"pos":[36804,36943],"yaml":true},{"content":"The file specified by <xref href=\"System.Media.SoundPlayer.SoundLocation\"></xref> cannot be found.","nodes":[{"pos":[0,98],"content":"The file specified by <ph id=\"ph1\">&lt;xref href=\"System.Media.SoundPlayer.SoundLocation\"&gt;&lt;/xref&gt;</ph> cannot be found.","source":"The file specified by <xref href=\"System.Media.SoundPlayer.SoundLocation\"></xref> cannot be found."}],"pos":[37051,37150],"yaml":true},{"content":"The .wav header is corrupted; the file specified by <xref href=\"System.Media.SoundPlayer.SoundLocation\"></xref> is not a PCM .wav file.","nodes":[{"pos":[0,135],"content":"The .wav header is corrupted; the file specified by <ph id=\"ph1\">&lt;xref href=\"System.Media.SoundPlayer.SoundLocation\"&gt;&lt;/xref&gt;</ph> is not a PCM .wav file.","source":"The .wav header is corrupted; the file specified by <xref href=\"System.Media.SoundPlayer.SoundLocation\"></xref> is not a PCM .wav file."}],"pos":[37260,37396],"yaml":true},{"content":"Plays the .wav file and loads the .wav file first if it has not been loaded.","nodes":[{"pos":[0,76],"content":"Plays the .wav file and loads the .wav file first if it has not been loaded.","nodes":[{"content":"Plays the .wav file and loads the .wav file first if it has not been loaded.","pos":[0,76]}]}],"pos":[38288,38365],"yaml":true},{"content":"The <xref:System.Media.SoundPlayer.PlaySync%2A> method uses the current thread to play a .wav file, preventing the thread from handling other messages until the load is complete. You can use the <xref:System.Media.SoundPlayer.LoadAsync%2A> or <xref:System.Media.SoundPlayer.Load%2A> method to load the .wav file to memory in advance. After a .wav file is successfully loaded from a <xref:System.IO.Stream> or URL, future calls to playback methods for the <xref:System.Media.SoundPlayer> will not need to reload the .wav file until the path for the sound changes.  \n  \n If the .wav file has not been specified or it fails to load, the <xref:System.Media.SoundPlayer.PlaySync%2A> method will play the default beep sound.","nodes":[{"pos":[0,562],"content":"The <xref:System.Media.SoundPlayer.PlaySync%2A> method uses the current thread to play a .wav file, preventing the thread from handling other messages until the load is complete. You can use the <xref:System.Media.SoundPlayer.LoadAsync%2A> or <xref:System.Media.SoundPlayer.Load%2A> method to load the .wav file to memory in advance. After a .wav file is successfully loaded from a <xref:System.IO.Stream> or URL, future calls to playback methods for the <xref:System.Media.SoundPlayer> will not need to reload the .wav file until the path for the sound changes.","nodes":[{"content":"The <xref:System.Media.SoundPlayer.PlaySync%2A> method uses the current thread to play a .wav file, preventing the thread from handling other messages until the load is complete. You can use the <xref:System.Media.SoundPlayer.LoadAsync%2A> or <xref:System.Media.SoundPlayer.Load%2A> method to load the .wav file to memory in advance. After a .wav file is successfully loaded from a <xref:System.IO.Stream> or URL, future calls to playback methods for the <xref:System.Media.SoundPlayer> will not need to reload the .wav file until the path for the sound changes.","pos":[0,562],"nodes":[{"content":"The <ph id=\"ph1\">&lt;xref:System.Media.SoundPlayer.PlaySync%2A&gt;</ph> method uses the current thread to play a .wav file, preventing the thread from handling other messages until the load is complete.","pos":[0,178],"source":"The <xref:System.Media.SoundPlayer.PlaySync%2A> method uses the current thread to play a .wav file, preventing the thread from handling other messages until the load is complete."},{"content":"You can use the <ph id=\"ph1\">&lt;xref:System.Media.SoundPlayer.LoadAsync%2A&gt;</ph> or <ph id=\"ph2\">&lt;xref:System.Media.SoundPlayer.Load%2A&gt;</ph> method to load the .wav file to memory in advance.","pos":[179,333],"source":" You can use the <xref:System.Media.SoundPlayer.LoadAsync%2A> or <xref:System.Media.SoundPlayer.Load%2A> method to load the .wav file to memory in advance."},{"content":"After a .wav file is successfully loaded from a <ph id=\"ph1\">&lt;xref:System.IO.Stream&gt;</ph> or URL, future calls to playback methods for the <ph id=\"ph2\">&lt;xref:System.Media.SoundPlayer&gt;</ph> will not need to reload the .wav file until the path for the sound changes.","pos":[334,562],"source":" After a .wav file is successfully loaded from a <xref:System.IO.Stream> or URL, future calls to playback methods for the <xref:System.Media.SoundPlayer> will not need to reload the .wav file until the path for the sound changes."}]}]},{"pos":[569,718],"content":"If the .wav file has not been specified or it fails to load, the <xref:System.Media.SoundPlayer.PlaySync%2A> method will play the default beep sound.","nodes":[{"content":"If the .wav file has not been specified or it fails to load, the <ph id=\"ph1\">&lt;xref:System.Media.SoundPlayer.PlaySync%2A&gt;</ph> method will play the default beep sound.","pos":[0,149],"source":"If the .wav file has not been specified or it fails to load, the <xref:System.Media.SoundPlayer.PlaySync%2A> method will play the default beep sound."}]}],"pos":[38376,39099],"yaml":true,"extradata":"MT"},{"content":"The elapsed time during loading exceeds the time, in milliseconds, specified by <xref href=\"System.Media.SoundPlayer.LoadTimeout\"></xref>.","nodes":[{"pos":[0,138],"content":"The elapsed time during loading exceeds the time, in milliseconds, specified by <ph id=\"ph1\">&lt;xref href=\"System.Media.SoundPlayer.LoadTimeout\"&gt;&lt;/xref&gt;</ph>.","source":"The elapsed time during loading exceeds the time, in milliseconds, specified by <xref href=\"System.Media.SoundPlayer.LoadTimeout\"></xref>."}],"pos":[40029,40168],"yaml":true},{"content":"The file specified by <xref href=\"System.Media.SoundPlayer.SoundLocation\"></xref> cannot be found.","nodes":[{"pos":[0,98],"content":"The file specified by <ph id=\"ph1\">&lt;xref href=\"System.Media.SoundPlayer.SoundLocation\"&gt;&lt;/xref&gt;</ph> cannot be found.","source":"The file specified by <xref href=\"System.Media.SoundPlayer.SoundLocation\"></xref> cannot be found."}],"pos":[40276,40375],"yaml":true},{"content":"The .wav header is corrupted; the file specified by <xref href=\"System.Media.SoundPlayer.SoundLocation\"></xref> is not a PCM .wav file.","nodes":[{"pos":[0,135],"content":"The .wav header is corrupted; the file specified by <ph id=\"ph1\">&lt;xref href=\"System.Media.SoundPlayer.SoundLocation\"&gt;&lt;/xref&gt;</ph> is not a PCM .wav file.","source":"The .wav header is corrupted; the file specified by <xref href=\"System.Media.SoundPlayer.SoundLocation\"></xref> is not a PCM .wav file."}],"pos":[40485,40621],"yaml":true},{"content":"Gets or sets the file path or URL of the .wav file to load.","nodes":[{"pos":[0,59],"content":"Gets or sets the file path or URL of the .wav file to load.","nodes":[{"content":"Gets or sets the file path or URL of the .wav file to load.","pos":[0,59]}]}],"pos":[41539,41599],"yaml":true},{"content":"This property is set to <xref:System.String?displayProperty=fullName> when the <xref:System.Media.SoundPlayer.Stream%2A> property is set to a <xref:System.IO.Stream>.","nodes":[{"pos":[0,166],"content":"This property is set to <xref:System.String?displayProperty=fullName> when the <xref:System.Media.SoundPlayer.Stream%2A> property is set to a <xref:System.IO.Stream>.","nodes":[{"content":"This property is set to <ph id=\"ph1\">&lt;xref:System.String?displayProperty=fullName&gt;</ph> when the <ph id=\"ph2\">&lt;xref:System.Media.SoundPlayer.Stream%2A&gt;</ph> property is set to a <ph id=\"ph3\">&lt;xref:System.IO.Stream&gt;</ph>.","pos":[0,166],"source":"This property is set to <xref:System.String?displayProperty=fullName> when the <xref:System.Media.SoundPlayer.Stream%2A> property is set to a <xref:System.IO.Stream>."}]}],"pos":[41610,41777],"yaml":true,"extradata":"MT"},{"content":"The file path or URL from which to load a .wav file, or <xref href=\"System.String.Empty\"></xref> if no file path is present. The default is <xref href=\"System.String.Empty\"></xref>.","nodes":[{"pos":[0,181],"content":"The file path or URL from which to load a .wav file, or <xref href=\"System.String.Empty\"></xref> if no file path is present. The default is <xref href=\"System.String.Empty\"></xref>.","nodes":[{"content":"The file path or URL from which to load a .wav file, or <ph id=\"ph1\">&lt;xref href=\"System.String.Empty\"&gt;&lt;/xref&gt;</ph> if no file path is present.","pos":[0,124],"source":"The file path or URL from which to load a .wav file, or <xref href=\"System.String.Empty\"></xref> if no file path is present."},{"content":"The default is <ph id=\"ph1\">&lt;xref href=\"System.String.Empty\"&gt;&lt;/xref&gt;</ph>.","pos":[125,181],"source":" The default is <xref href=\"System.String.Empty\"></xref>."}]}],"pos":[42658,42840],"yaml":true},{"content":"Occurs when a new audio source path for this <xref href=\"System.Media.SoundPlayer\"></xref> has been set.","nodes":[{"pos":[0,104],"content":"Occurs when a new audio source path for this <ph id=\"ph1\">&lt;xref href=\"System.Media.SoundPlayer\"&gt;&lt;/xref&gt;</ph> has been set.","source":"Occurs when a new audio source path for this <xref href=\"System.Media.SoundPlayer\"></xref> has been set."}],"pos":[43866,43971],"yaml":true},{"content":"This event is raised when a new audio source path for this <xref:System.Media.SoundPlayer> has been set.  \n  \n For more information about handling events, see [NIB: Consuming Events](http://msdn.microsoft.com/en-us/01e4f1bc-e55e-413f-98c7-6588493e5f67).","nodes":[{"pos":[0,104],"content":"This event is raised when a new audio source path for this <xref:System.Media.SoundPlayer> has been set.","nodes":[{"content":"This event is raised when a new audio source path for this <ph id=\"ph1\">&lt;xref:System.Media.SoundPlayer&gt;</ph> has been set.","pos":[0,104],"source":"This event is raised when a new audio source path for this <xref:System.Media.SoundPlayer> has been set."}]},{"pos":[111,253],"content":"For more information about handling events, see <bpt id=\"p1\">[</bpt>NIB: Consuming Events<ept id=\"p1\">](http://msdn.microsoft.com/en-us/01e4f1bc-e55e-413f-98c7-6588493e5f67)</ept>.","source":"For more information about handling events, see [NIB: Consuming Events](http://msdn.microsoft.com/en-us/01e4f1bc-e55e-413f-98c7-6588493e5f67)."}],"pos":[43982,44240],"yaml":true,"extradata":"MT"},{"content":"Stops playback of the sound if playback is occurring.","nodes":[{"pos":[0,53],"content":"Stops playback of the sound if playback is occurring.","nodes":[{"content":"Stops playback of the sound if playback is occurring.","pos":[0,53]}]}],"pos":[46054,46108],"yaml":true},{"content":"Gets or sets the <xref href=\"System.IO.Stream\"></xref> from which to load the .wav file.","nodes":[{"pos":[0,88],"content":"Gets or sets the <ph id=\"ph1\">&lt;xref href=\"System.IO.Stream\"&gt;&lt;/xref&gt;</ph> from which to load the .wav file.","source":"Gets or sets the <xref href=\"System.IO.Stream\"></xref> from which to load the .wav file."}],"pos":[47824,47913],"yaml":true},{"content":"This property is set to `null` when the <xref:System.Media.SoundPlayer.SoundLocation%2A> property is set to a new and valid sound location.","nodes":[{"pos":[0,139],"content":"This property is set to <ph id=\"ph1\">`null`</ph> when the <ph id=\"ph2\">&lt;xref:System.Media.SoundPlayer.SoundLocation%2A&gt;</ph> property is set to a new and valid sound location.","source":"This property is set to `null` when the <xref:System.Media.SoundPlayer.SoundLocation%2A> property is set to a new and valid sound location."}],"pos":[47924,48064],"yaml":true,"extradata":"MT"},{"content":"A <xref href=\"System.IO.Stream\"></xref> from which to load the .wav file, or `null` if no stream is available. The default is `null`.","nodes":[{"pos":[0,133],"content":"A <xref href=\"System.IO.Stream\"></xref> from which to load the .wav file, or `null` if no stream is available. The default is `null`.","nodes":[{"content":"A <ph id=\"ph1\">&lt;xref href=\"System.IO.Stream\"&gt;&lt;/xref&gt;</ph> from which to load the .wav file, or <ph id=\"ph2\">`null`</ph> if no stream is available.","pos":[0,110],"source":"A <xref href=\"System.IO.Stream\"></xref> from which to load the .wav file, or `null` if no stream is available."},{"content":"The default is <ph id=\"ph1\">`null`</ph>.","pos":[111,133],"source":" The default is `null`."}]}],"pos":[48192,48326],"yaml":true},{"content":"Occurs when a new <xref href=\"System.IO.Stream\"></xref> audio source for this <xref href=\"System.Media.SoundPlayer\"></xref> has been set.","nodes":[{"pos":[0,137],"content":"Occurs when a new <ph id=\"ph1\">&lt;xref href=\"System.IO.Stream\"&gt;&lt;/xref&gt;</ph> audio source for this <ph id=\"ph2\">&lt;xref href=\"System.Media.SoundPlayer\"&gt;&lt;/xref&gt;</ph> has been set.","source":"Occurs when a new <xref href=\"System.IO.Stream\"></xref> audio source for this <xref href=\"System.Media.SoundPlayer\"></xref> has been set."}],"pos":[49303,49441],"yaml":true},{"content":"This event is raised when a new <xref:System.IO.Stream> audio source for this <xref:System.Media.SoundPlayer> has been set.  \n  \n For more information about handling events, see [NIB: Consuming Events](http://msdn.microsoft.com/en-us/01e4f1bc-e55e-413f-98c7-6588493e5f67).","nodes":[{"pos":[0,123],"content":"This event is raised when a new <xref:System.IO.Stream> audio source for this <xref:System.Media.SoundPlayer> has been set.","nodes":[{"content":"This event is raised when a new <ph id=\"ph1\">&lt;xref:System.IO.Stream&gt;</ph> audio source for this <ph id=\"ph2\">&lt;xref:System.Media.SoundPlayer&gt;</ph> has been set.","pos":[0,123],"source":"This event is raised when a new <xref:System.IO.Stream> audio source for this <xref:System.Media.SoundPlayer> has been set."}]},{"pos":[130,272],"content":"For more information about handling events, see <bpt id=\"p1\">[</bpt>NIB: Consuming Events<ept id=\"p1\">](http://msdn.microsoft.com/en-us/01e4f1bc-e55e-413f-98c7-6588493e5f67)</ept>.","source":"For more information about handling events, see [NIB: Consuming Events](http://msdn.microsoft.com/en-us/01e4f1bc-e55e-413f-98c7-6588493e5f67)."}],"pos":[49452,49729],"yaml":true,"extradata":"MT"},{"content":"Gets or sets the <xref href=\"System.Object\"></xref> that contains data about the <xref href=\"System.Media.SoundPlayer\"></xref>.","nodes":[{"pos":[0,127],"content":"Gets or sets the <ph id=\"ph1\">&lt;xref href=\"System.Object\"&gt;&lt;/xref&gt;</ph> that contains data about the <ph id=\"ph2\">&lt;xref href=\"System.Media.SoundPlayer\"&gt;&lt;/xref&gt;</ph>.","source":"Gets or sets the <xref href=\"System.Object\"></xref> that contains data about the <xref href=\"System.Media.SoundPlayer\"></xref>."}],"pos":[50734,50862],"yaml":true},{"content":"An <xref href=\"System.Object\"></xref> that contains data about the <xref href=\"System.Media.SoundPlayer\"></xref>.","nodes":[{"pos":[0,113],"content":"An <ph id=\"ph1\">&lt;xref href=\"System.Object\"&gt;&lt;/xref&gt;</ph> that contains data about the <ph id=\"ph2\">&lt;xref href=\"System.Media.SoundPlayer\"&gt;&lt;/xref&gt;</ph>.","source":"An <xref href=\"System.Object\"></xref> that contains data about the <xref href=\"System.Media.SoundPlayer\"></xref>."}],"pos":[50974,51088],"yaml":true},{"content":"For a description of this member, see the <xref href=\"System.Runtime.Serialization.ISerializable.GetObjectData(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)\"></xref> method.","nodes":[{"pos":[0,221],"content":"For a description of this member, see the <ph id=\"ph1\">&lt;xref href=\"System.Runtime.Serialization.ISerializable.GetObjectData(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)\"&gt;&lt;/xref&gt;</ph> method.","source":"For a description of this member, see the <xref href=\"System.Runtime.Serialization.ISerializable.GetObjectData(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)\"></xref> method."}],"pos":[52641,52863],"yaml":true},{"content":"This member is an explicit interface member implementation. It can be used only when the <xref:System.Media.SoundPlayer> instance is cast to an <xref:System.Runtime.Serialization.ISerializable> interface.","nodes":[{"pos":[0,204],"content":"This member is an explicit interface member implementation. It can be used only when the <xref:System.Media.SoundPlayer> instance is cast to an <xref:System.Runtime.Serialization.ISerializable> interface.","nodes":[{"content":"This member is an explicit interface member implementation. It can be used only when the <xref:System.Media.SoundPlayer> instance is cast to an <xref:System.Runtime.Serialization.ISerializable> interface.","pos":[0,204],"nodes":[{"content":"This member is an explicit interface member implementation.","pos":[0,59]},{"content":"It can be used only when the <ph id=\"ph1\">&lt;xref:System.Media.SoundPlayer&gt;</ph> instance is cast to an <ph id=\"ph2\">&lt;xref:System.Runtime.Serialization.ISerializable&gt;</ph> interface.","pos":[60,204],"source":" It can be used only when the <xref:System.Media.SoundPlayer> instance is cast to an <xref:System.Runtime.Serialization.ISerializable> interface."}]}]}],"pos":[52874,53079],"yaml":true,"extradata":"MT"},{"content":"The <xref href=\"System.Runtime.Serialization.SerializationInfo\"></xref> to populate with data.","nodes":[{"pos":[0,94],"content":"The <ph id=\"ph1\">&lt;xref href=\"System.Runtime.Serialization.SerializationInfo\"&gt;&lt;/xref&gt;</ph> to populate with data.","source":"The <xref href=\"System.Runtime.Serialization.SerializationInfo\"></xref> to populate with data."}],"pos":[53354,53449],"yaml":true},{"content":"The destination (see <xref href=\"System.Runtime.Serialization.StreamingContext\"></xref>) for this serialization.","nodes":[{"pos":[0,112],"content":"The destination (see <ph id=\"ph1\">&lt;xref href=\"System.Runtime.Serialization.StreamingContext\"&gt;&lt;/xref&gt;</ph>) for this serialization.","source":"The destination (see <xref href=\"System.Runtime.Serialization.StreamingContext\"></xref>) for this serialization."}],"pos":[53544,53657],"yaml":true}],"content":"### YamlMime:ManagedReference\nitems:\n- uid: System.Media.SoundPlayer\n  commentId: T:System.Media.SoundPlayer\n  id: SoundPlayer\n  children:\n  - System.Media.SoundPlayer.#ctor\n  - System.Media.SoundPlayer.#ctor(System.IO.Stream)\n  - System.Media.SoundPlayer.#ctor(System.String)\n  - System.Media.SoundPlayer.#ctor(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)\n  - System.Media.SoundPlayer.IsLoadCompleted\n  - System.Media.SoundPlayer.Load\n  - System.Media.SoundPlayer.LoadAsync\n  - System.Media.SoundPlayer.LoadCompleted\n  - System.Media.SoundPlayer.LoadTimeout\n  - System.Media.SoundPlayer.OnLoadCompleted(System.ComponentModel.AsyncCompletedEventArgs)\n  - System.Media.SoundPlayer.OnSoundLocationChanged(System.EventArgs)\n  - System.Media.SoundPlayer.OnStreamChanged(System.EventArgs)\n  - System.Media.SoundPlayer.Play\n  - System.Media.SoundPlayer.PlayLooping\n  - System.Media.SoundPlayer.PlaySync\n  - System.Media.SoundPlayer.SoundLocation\n  - System.Media.SoundPlayer.SoundLocationChanged\n  - System.Media.SoundPlayer.Stop\n  - System.Media.SoundPlayer.Stream\n  - System.Media.SoundPlayer.StreamChanged\n  - System.Media.SoundPlayer.Tag\n  - System.Media.SoundPlayer.System#Runtime#Serialization#ISerializable#GetObjectData(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)\n  langs:\n  - csharp\n  name: SoundPlayer\n  nameWithType: SoundPlayer\n  fullName: System.Media.SoundPlayer\n  type: Class\n  assemblies:\n  - System\n  namespace: System.Media\n  summary: Controls playback of a sound from a .wav file.\n  remarks: \"The <xref:System.Media.SoundPlayer> class provides a simple interface for loading and playing a .wav file. The <xref:System.Media.SoundPlayer> class supports loading a .wav file from a file path, a URL, a <xref:System.IO.Stream> that contains a .wav file, or an embedded resource that contains a .wav file.  \\n  \\n To play a sound using the <xref:System.Media.SoundPlayer> class, configure a <xref:System.Media.SoundPlayer> with a path to the .wav file and call one of the play methods. You can identify the .wav file to play by using one of the constructors or by setting either the <xref:System.Media.SoundPlayer.SoundLocation%2A> or <xref:System.Media.SoundPlayer.Stream%2A> property. The file can be loaded prior to playing by using one of the load methods, or loading can be deferred until one of the play methods is called. A <xref:System.Media.SoundPlayer> configured to load a .wav file from a <xref:System.IO.Stream> or URL must load the .wav file into memory before playback begins.  \\n  \\n You can load or play a .wav file synchronously or asynchronously. If you call a synchronous load or play method, the calling thread will wait until the method returns, which may cause painting and other events to be interrupted. Calling an asynchronous load or play method will allow the calling thread to continue without interruption. For more information on asynchronous method calls, see [How to: Run an Operation in the Background](~/docs/framework/winforms/controls/how-to-run-an-operation-in-the-background.md).  \\n  \\n When a <xref:System.Media.SoundPlayer> has finished loading a .wav file, it raises the <xref:System.Media.SoundPlayer.LoadCompleted> event. You can examine the <xref:System.ComponentModel.AsyncCompletedEventArgs> in your event handler to determine if the load succeeded or failed. The <xref:System.Media.SoundPlayer.SoundLocationChanged> event is raised when the audio source is set to a new file path or URL. The <xref:System.Media.SoundPlayer.StreamChanged> event is raised when the audio source is set to a new <xref:System.IO.Stream>. For more information about handling events, see [NIB: Consuming Events](http://msdn.microsoft.com/en-us/01e4f1bc-e55e-413f-98c7-6588493e5f67).  \\n  \\n For more information about <xref:System.Media.SoundPlayer>, see [SoundPlayer Class Overview](~/docs/framework/winforms/controls/soundplayer-class-overview.md).  \\n  \\n> [!NOTE]\\n>  The <xref:System.Media.SoundPlayer> class cannot play other file types, such as .wma or .mp3. If you want to play other file types, you can use the Windows Media Player control. For more information, see [Using the Windows Media Player Control in a .NET Framework Solution](http://go.microsoft.com/fwlink/?LinkId=131267) and [Windows Media Player Object Model Reference for Visual Basic .NET and C#](http://go.microsoft.com/fwlink/?LinkId=131269) in the Windows Media Player SDK.\"\n  example:\n  - \"The following code example demonstrates the use of the <xref:System.Media.SoundPlayer> class for playing .wav files from a local path or a Uniform Resource Identifier (URI).  \\n  \\n [!code-cpp[System.Windows.Forms.Sound#1](~/samples/snippets/cpp/VS_Snippets_Winforms/System.Windows.Forms.Sound/CPP/soundtestform.cpp#1)]\\n [!code-csharp[System.Windows.Forms.Sound#1](~/samples/snippets/csharp/VS_Snippets_Winforms/System.Windows.Forms.Sound/CS/soundtestform.cs#1)]\\n [!code-vb[System.Windows.Forms.Sound#1](~/samples/snippets/visualbasic/VS_Snippets_Winforms/System.Windows.Forms.Sound/VB/soundtestform.vb#1)]\"\n  syntax:\n    content: 'public class SoundPlayer : System.ComponentModel.Component, System.Runtime.Serialization.ISerializable'\n  inheritance:\n  - System.Object\n  - System.MarshalByRefObject\n  - System.ComponentModel.Component\n  implements:\n  - System.Runtime.Serialization.ISerializable\n  inheritedMembers:\n  - System.ComponentModel.Component.CanRaiseEvents\n  - System.ComponentModel.Component.Container\n  - System.ComponentModel.Component.DesignMode\n  - System.ComponentModel.Component.Dispose\n  - System.ComponentModel.Component.Dispose(System.Boolean)\n  - System.ComponentModel.Component.Disposed\n  - System.ComponentModel.Component.Events\n  - System.ComponentModel.Component.GetService(System.Type)\n  - System.ComponentModel.Component.Site\n  - System.ComponentModel.Component.ToString\n  - System.MarshalByRefObject.CreateObjRef(System.Type)\n  - System.MarshalByRefObject.GetLifetimeService\n  - System.MarshalByRefObject.InitializeLifetimeService\n  - System.MarshalByRefObject.MemberwiseClone(System.Boolean)\n  - System.Object.Equals(System.Object)\n  - System.Object.Equals(System.Object,System.Object)\n  - System.Object.GetHashCode\n  - System.Object.GetType\n  - System.Object.MemberwiseClone\n  - System.Object.ReferenceEquals(System.Object,System.Object)\n  attributes: []\n  version:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - xamarinmac-3.0\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - xamarinmac-3.0\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Media/SoundPlayer.xml\n  ms.technology:\n  - dotnet-standard\n  author: stevehoag\n  ms.author: shoag\n  manager: wpickett\n- uid: System.Media.SoundPlayer.#ctor\n  commentId: M:System.Media.SoundPlayer.#ctor\n  id: '#ctor'\n  parent: System.Media.SoundPlayer\n  langs:\n  - csharp\n  name: SoundPlayer()\n  nameWithType: SoundPlayer.SoundPlayer()\n  fullName: SoundPlayer.SoundPlayer()\n  type: Constructor\n  assemblies:\n  - System\n  namespace: System.Media\n  summary: Initializes a new instance of the <xref href=\"System.Media.SoundPlayer\"></xref> class.\n  remarks: This constructor initializes a <xref:System.Media.SoundPlayer> with no audio source. Until it is configured with an audio source path, the <xref:System.Media.SoundPlayer> will play a beep sound when one of its playback methods is called.\n  syntax:\n    content: public SoundPlayer ();\n    parameters: []\n  overload: System.Media.SoundPlayer.#ctor*\n  exceptions: []\n  version:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - xamarinmac-3.0\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - xamarinmac-3.0\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Media/SoundPlayer.xml\n  ms.technology:\n  - dotnet-standard\n  author: stevehoag\n  ms.author: shoag\n  manager: wpickett\n- uid: System.Media.SoundPlayer.#ctor(System.IO.Stream)\n  commentId: M:System.Media.SoundPlayer.#ctor(System.IO.Stream)\n  id: '#ctor(System.IO.Stream)'\n  parent: System.Media.SoundPlayer\n  langs:\n  - csharp\n  name: SoundPlayer(Stream)\n  nameWithType: SoundPlayer.SoundPlayer(Stream)\n  fullName: SoundPlayer.SoundPlayer(Stream)\n  type: Constructor\n  assemblies:\n  - System\n  namespace: System.Media\n  summary: Initializes a new instance of the <xref href=\"System.Media.SoundPlayer\"></xref> class, and attaches the .wav file within the specified <xref href=\"System.IO.Stream\"></xref>.\n  remarks: The <xref:System.IO.Stream> passed to the `stream` parameter should be a <xref:System.IO.Stream> containing a .wav file. The data returned by the <xref:System.IO.Stream.Read%2A> method of the <xref:System.IO.Stream> should be the data within a .wav file.\n  syntax:\n    content: public SoundPlayer (System.IO.Stream stream);\n    parameters:\n    - id: stream\n      type: System.IO.Stream\n      description: A <xref href=\"System.IO.Stream\"></xref> to a .wav file.\n  overload: System.Media.SoundPlayer.#ctor*\n  exceptions: []\n  version:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - xamarinmac-3.0\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - xamarinmac-3.0\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Media/SoundPlayer.xml\n  ms.technology:\n  - dotnet-standard\n  author: stevehoag\n  ms.author: shoag\n  manager: wpickett\n- uid: System.Media.SoundPlayer.#ctor(System.String)\n  commentId: M:System.Media.SoundPlayer.#ctor(System.String)\n  id: '#ctor(System.String)'\n  parent: System.Media.SoundPlayer\n  langs:\n  - csharp\n  name: SoundPlayer(String)\n  nameWithType: SoundPlayer.SoundPlayer(String)\n  fullName: SoundPlayer.SoundPlayer(String)\n  type: Constructor\n  assemblies:\n  - System\n  namespace: System.Media\n  summary: Initializes a new instance of the <xref href=\"System.Media.SoundPlayer\"></xref> class, and attaches the specified .wav file.\n  remarks: The string passed to the `soundLocation` parameter can be either a file path or a URL to a .wav file. If the path or URL is not valid, the <xref:System.Media.SoundPlayer> will still be constructed, but subsequent calls to a load or play method will fail.\n  syntax:\n    content: public SoundPlayer (string soundLocation);\n    parameters:\n    - id: soundLocation\n      type: System.String\n      description: The location of a .wav file to load.\n  overload: System.Media.SoundPlayer.#ctor*\n  exceptions:\n  - type: System.UriFormatException\n    commentId: T:System.UriFormatException\n    description: The URL value specified by <code>soundLocation</code> cannot be resolved.\n  version:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - xamarinmac-3.0\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - xamarinmac-3.0\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Media/SoundPlayer.xml\n  ms.technology:\n  - dotnet-standard\n  author: stevehoag\n  ms.author: shoag\n  manager: wpickett\n- uid: System.Media.SoundPlayer.#ctor(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)\n  commentId: M:System.Media.SoundPlayer.#ctor(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)\n  id: '#ctor(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)'\n  parent: System.Media.SoundPlayer\n  langs:\n  - csharp\n  name: SoundPlayer(SerializationInfo, StreamingContext)\n  nameWithType: SoundPlayer.SoundPlayer(SerializationInfo, StreamingContext)\n  fullName: SoundPlayer.SoundPlayer(SerializationInfo, StreamingContext)\n  type: Constructor\n  assemblies:\n  - System\n  namespace: System.Media\n  summary: Initializes a new instance of the <xref href=\"System.Media.SoundPlayer\"></xref> class.\n  syntax:\n    content: protected SoundPlayer (System.Runtime.Serialization.SerializationInfo serializationInfo, System.Runtime.Serialization.StreamingContext context);\n    parameters:\n    - id: serializationInfo\n      type: System.Runtime.Serialization.SerializationInfo\n      description: The <xref href=\"System.Runtime.Serialization.SerializationInfo\"></xref> to be used for deserialization.\n    - id: context\n      type: System.Runtime.Serialization.StreamingContext\n      description: The destination to be used for deserialization.\n  overload: System.Media.SoundPlayer.#ctor*\n  exceptions:\n  - type: System.UriFormatException\n    commentId: T:System.UriFormatException\n    description: The <xref href=\"System.Media.SoundPlayer.SoundLocation\"></xref> specified in <code>serializationInfo</code> cannot be resolved.\n  version:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - xamarinmac-3.0\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - xamarinmac-3.0\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Media/SoundPlayer.xml\n  ms.technology:\n  - dotnet-standard\n  author: stevehoag\n  ms.author: shoag\n  manager: wpickett\n- uid: System.Media.SoundPlayer.IsLoadCompleted\n  commentId: P:System.Media.SoundPlayer.IsLoadCompleted\n  id: IsLoadCompleted\n  parent: System.Media.SoundPlayer\n  langs:\n  - csharp\n  name: IsLoadCompleted\n  nameWithType: SoundPlayer.IsLoadCompleted\n  fullName: SoundPlayer.IsLoadCompleted\n  type: Property\n  assemblies:\n  - System\n  namespace: System.Media\n  summary: Gets a value indicating whether loading of a .wav file has successfully completed.\n  syntax:\n    content: public bool IsLoadCompleted { get; }\n    return:\n      type: System.Boolean\n      description: '`true` if a .wav file is loaded; `false` if a .wav file has not yet been loaded.'\n  overload: System.Media.SoundPlayer.IsLoadCompleted*\n  exceptions: []\n  version:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - xamarinmac-3.0\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - xamarinmac-3.0\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Media/SoundPlayer.xml\n  ms.technology:\n  - dotnet-standard\n  author: stevehoag\n  ms.author: shoag\n  manager: wpickett\n- uid: System.Media.SoundPlayer.Load\n  commentId: M:System.Media.SoundPlayer.Load\n  id: Load\n  parent: System.Media.SoundPlayer\n  langs:\n  - csharp\n  name: Load()\n  nameWithType: SoundPlayer.Load()\n  fullName: SoundPlayer.Load()\n  type: Method\n  assemblies:\n  - System\n  namespace: System.Media\n  summary: Loads a sound synchronously.\n  remarks: \"The <xref:System.Media.SoundPlayer.Load%2A> method uses the current thread to load a .wav file, preventing the thread from handling other messages until the load is complete.  \\n  \\n> [!CAUTION]\\n>  The <xref:System.Media.SoundPlayer.Load%2A> method may produce a delay while loading a large .wav file. In addition, painting and other events will be blocked until the load is completed. Use the <xref:System.Media.SoundPlayer.LoadAsync%2A> method to load a sound asynchronously, which allows the calling thread to continue without interruption.  \\n  \\n This method raises the <xref:System.Media.SoundPlayer.LoadCompleted> event when loading completes, even if the load was not successful.\"\n  example:\n  - \"The following code example demonstrates the use of the <xref:System.Media.SoundPlayer.LoadAsync%2A> method to attach a .wav file to an instance of the <xref:System.Media.SoundPlayer> class. This code example is part of a larger example provided for the <xref:System.Media.SoundPlayer> class.  \\n  \\n [!code-cpp[System.Windows.Forms.Sound#2](~/samples/snippets/cpp/VS_Snippets_Winforms/System.Windows.Forms.Sound/CPP/soundtestform.cpp#2)]\\n [!code-csharp[System.Windows.Forms.Sound#2](~/samples/snippets/csharp/VS_Snippets_Winforms/System.Windows.Forms.Sound/CS/soundtestform.cs#2)]\\n [!code-vb[System.Windows.Forms.Sound#2](~/samples/snippets/visualbasic/VS_Snippets_Winforms/System.Windows.Forms.Sound/VB/soundtestform.vb#2)]\"\n  syntax:\n    content: public void Load ();\n    parameters: []\n  overload: System.Media.SoundPlayer.Load*\n  exceptions:\n  - type: System.ServiceProcess.TimeoutException\n    commentId: T:System.ServiceProcess.TimeoutException\n    description: The elapsed time during loading exceeds the time, in milliseconds, specified by <xref href=\"System.Media.SoundPlayer.LoadTimeout\"></xref>.\n  - type: System.IO.FileNotFoundException\n    commentId: T:System.IO.FileNotFoundException\n    description: The file specified by <xref href=\"System.Media.SoundPlayer.SoundLocation\"></xref> cannot be found.\n  version:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - xamarinmac-3.0\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - xamarinmac-3.0\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Media/SoundPlayer.xml\n  ms.technology:\n  - dotnet-standard\n  author: stevehoag\n  ms.author: shoag\n  manager: wpickett\n- uid: System.Media.SoundPlayer.LoadAsync\n  commentId: M:System.Media.SoundPlayer.LoadAsync\n  id: LoadAsync\n  parent: System.Media.SoundPlayer\n  langs:\n  - csharp\n  name: LoadAsync()\n  nameWithType: SoundPlayer.LoadAsync()\n  fullName: SoundPlayer.LoadAsync()\n  type: Method\n  assemblies:\n  - System\n  namespace: System.Media\n  summary: Loads a .wav file from a stream or a Web resource using a new thread.\n  remarks: \"If a <xref:System.Media.SoundPlayer> is configured to load a .wav file from a <xref:System.IO.Stream> or Web resource, this method begins loading a .wav file from the location using a new thread.  \\n  \\n This method raises the <xref:System.Media.SoundPlayer.LoadCompleted> event when loading completes, even if the load was not successful.  \\n  \\n If a <xref:System.Media.SoundPlayer> is configured to load a .wav file from a local file path, this method does nothing, because loading is deferred until playing begins.  \\n  \\n For more information about asynchronous loading, see [How to: Load a Sound Asynchronously within a Windows Form](~/docs/framework/winforms/controls/how-to-load-a-sound-asynchronously-within-a-windows-form.md).\"\n  example:\n  - \"The following code example demonstrates the use of the <xref:System.Media.SoundPlayer.LoadAsync%2A> method to asynchronously load a .wav file for use by an instance of the <xref:System.Media.SoundPlayer> class. This code example is part of a larger example provided for the <xref:System.Media.SoundPlayer> class.  \\n  \\n [!code-cpp[System.Windows.Forms.Sound#3](~/samples/snippets/cpp/VS_Snippets_Winforms/System.Windows.Forms.Sound/CPP/soundtestform.cpp#3)]\\n [!code-csharp[System.Windows.Forms.Sound#3](~/samples/snippets/csharp/VS_Snippets_Winforms/System.Windows.Forms.Sound/CS/soundtestform.cs#3)]\\n [!code-vb[System.Windows.Forms.Sound#3](~/samples/snippets/visualbasic/VS_Snippets_Winforms/System.Windows.Forms.Sound/VB/soundtestform.vb#3)]\"\n  syntax:\n    content: public void LoadAsync ();\n    parameters: []\n  overload: System.Media.SoundPlayer.LoadAsync*\n  exceptions:\n  - type: System.ServiceProcess.TimeoutException\n    commentId: T:System.ServiceProcess.TimeoutException\n    description: The elapsed time during loading exceeds the time, in milliseconds, specified by <xref href=\"System.Media.SoundPlayer.LoadTimeout\"></xref>.\n  - type: System.IO.FileNotFoundException\n    commentId: T:System.IO.FileNotFoundException\n    description: The file specified by <xref href=\"System.Media.SoundPlayer.SoundLocation\"></xref> cannot be found.\n  version:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - xamarinmac-3.0\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - xamarinmac-3.0\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Media/SoundPlayer.xml\n  ms.technology:\n  - dotnet-standard\n  author: stevehoag\n  ms.author: shoag\n  manager: wpickett\n- uid: System.Media.SoundPlayer.LoadCompleted\n  commentId: E:System.Media.SoundPlayer.LoadCompleted\n  id: LoadCompleted\n  parent: System.Media.SoundPlayer\n  langs:\n  - csharp\n  name: LoadCompleted\n  nameWithType: SoundPlayer.LoadCompleted\n  fullName: SoundPlayer.LoadCompleted\n  type: Event\n  assemblies:\n  - System\n  namespace: System.Media\n  summary: Occurs when a .wav file has been successfully or unsuccessfully loaded.\n  remarks: \"This event is raised when loading of a .wav file is complete. The event arguments indicate whether the load of the sound was completed successfully or failed.  \\n  \\n For more information about handling events, see [NIB: Consuming Events](http://msdn.microsoft.com/en-us/01e4f1bc-e55e-413f-98c7-6588493e5f67).\"\n  example:\n  - \"The following code example demonstrates the use of the <xref:System.Media.SoundPlayer.OnLoadCompleted%2A> event handler to receive a notification indicating that the contents of a .wav file have been loaded. This code example is part of a larger example provided for the <xref:System.Media.SoundPlayer> class.  \\n  \\n [!code-cpp[System.Windows.Forms.Sound#8](~/samples/snippets/cpp/VS_Snippets_Winforms/System.Windows.Forms.Sound/CPP/soundtestform.cpp#8)]\\n [!code-csharp[System.Windows.Forms.Sound#8](~/samples/snippets/csharp/VS_Snippets_Winforms/System.Windows.Forms.Sound/CS/soundtestform.cs#8)]\\n [!code-vb[System.Windows.Forms.Sound#8](~/samples/snippets/visualbasic/VS_Snippets_Winforms/System.Windows.Forms.Sound/VB/soundtestform.vb#8)]\"\n  syntax:\n    content: public event System.ComponentModel.AsyncCompletedEventHandler LoadCompleted;\n    return:\n      type: System.ComponentModel.AsyncCompletedEventHandler\n      description: ''\n  exceptions: []\n  version:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - xamarinmac-3.0\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - xamarinmac-3.0\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Media/SoundPlayer.xml\n  ms.technology:\n  - dotnet-standard\n  author: stevehoag\n  ms.author: shoag\n  manager: wpickett\n- uid: System.Media.SoundPlayer.LoadTimeout\n  commentId: P:System.Media.SoundPlayer.LoadTimeout\n  id: LoadTimeout\n  parent: System.Media.SoundPlayer\n  langs:\n  - csharp\n  name: LoadTimeout\n  nameWithType: SoundPlayer.LoadTimeout\n  fullName: SoundPlayer.LoadTimeout\n  type: Property\n  assemblies:\n  - System\n  namespace: System.Media\n  summary: Gets or sets the time, in milliseconds, in which the .wav file must load.\n  remarks: After this time has expired, the loading is canceled and a <xref:System.ServiceProcess.TimeoutException> exception is thrown.\n  syntax:\n    content: public int LoadTimeout { get; set; }\n    return:\n      type: System.Int32\n      description: The number of milliseconds to wait. The default is 10000 (10 seconds).\n  overload: System.Media.SoundPlayer.LoadTimeout*\n  exceptions: []\n  version:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - xamarinmac-3.0\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - xamarinmac-3.0\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Media/SoundPlayer.xml\n  ms.technology:\n  - dotnet-standard\n  author: stevehoag\n  ms.author: shoag\n  manager: wpickett\n- uid: System.Media.SoundPlayer.OnLoadCompleted(System.ComponentModel.AsyncCompletedEventArgs)\n  commentId: M:System.Media.SoundPlayer.OnLoadCompleted(System.ComponentModel.AsyncCompletedEventArgs)\n  id: OnLoadCompleted(System.ComponentModel.AsyncCompletedEventArgs)\n  parent: System.Media.SoundPlayer\n  langs:\n  - csharp\n  name: OnLoadCompleted(AsyncCompletedEventArgs)\n  nameWithType: SoundPlayer.OnLoadCompleted(AsyncCompletedEventArgs)\n  fullName: SoundPlayer.OnLoadCompleted(AsyncCompletedEventArgs)\n  type: Method\n  assemblies:\n  - System\n  namespace: System.Media\n  summary: Raises the <xref href=\"System.Media.SoundPlayer.LoadCompleted\"></xref> event.\n  remarks: \"This method is called when loading of a .wav file is complete.  \\n  \\n Raising an event invokes the event handler through a delegate. For more information, see [NIB: Raising an Event](http://msdn.microsoft.com/en-us/f2adaf01-1ed1-42e1-8c31-8d467e7e0ee2).  \\n  \\n The <xref:System.Media.SoundPlayer.OnLoadCompleted%2A> method also allows derived classes to handle the event without attaching a delegate. This is the preferred technique for handling the event in a derived class.\"\n  syntax:\n    content: protected virtual void OnLoadCompleted (System.ComponentModel.AsyncCompletedEventArgs e);\n    parameters:\n    - id: e\n      type: System.ComponentModel.AsyncCompletedEventArgs\n      description: An <xref href=\"System.ComponentModel.AsyncCompletedEventArgs\"></xref> that contains the event data.\n  overload: System.Media.SoundPlayer.OnLoadCompleted*\n  exceptions: []\n  version:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - xamarinmac-3.0\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - xamarinmac-3.0\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Media/SoundPlayer.xml\n  ms.technology:\n  - dotnet-standard\n  author: stevehoag\n  ms.author: shoag\n  manager: wpickett\n- uid: System.Media.SoundPlayer.OnSoundLocationChanged(System.EventArgs)\n  commentId: M:System.Media.SoundPlayer.OnSoundLocationChanged(System.EventArgs)\n  id: OnSoundLocationChanged(System.EventArgs)\n  parent: System.Media.SoundPlayer\n  langs:\n  - csharp\n  name: OnSoundLocationChanged(EventArgs)\n  nameWithType: SoundPlayer.OnSoundLocationChanged(EventArgs)\n  fullName: SoundPlayer.OnSoundLocationChanged(EventArgs)\n  type: Method\n  assemblies:\n  - System\n  namespace: System.Media\n  summary: Raises the <xref href=\"System.Media.SoundPlayer.SoundLocationChanged\"></xref> event.\n  remarks: \"This method is called when a new audio source path for this <xref:System.Media.SoundPlayer> has been set.  \\n  \\n Raising an event invokes the event handler through a delegate. For more information, see How to: Provide Event functionality and [NIB: Raising an Event](http://msdn.microsoft.com/en-us/f2adaf01-1ed1-42e1-8c31-8d467e7e0ee2).  \\n  \\n The <xref:System.Media.SoundPlayer.OnSoundLocationChanged%2A> method also allows derived classes to handle the event without attaching a delegate. This is the preferred technique for handling the event in a derived class.\"\n  syntax:\n    content: protected virtual void OnSoundLocationChanged (EventArgs e);\n    parameters:\n    - id: e\n      type: System.EventArgs\n      description: An <xref href=\"System.EventArgs\"></xref> that contains the event data.\n  overload: System.Media.SoundPlayer.OnSoundLocationChanged*\n  exceptions: []\n  version:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - xamarinmac-3.0\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - xamarinmac-3.0\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Media/SoundPlayer.xml\n  ms.technology:\n  - dotnet-standard\n  author: stevehoag\n  ms.author: shoag\n  manager: wpickett\n- uid: System.Media.SoundPlayer.OnStreamChanged(System.EventArgs)\n  commentId: M:System.Media.SoundPlayer.OnStreamChanged(System.EventArgs)\n  id: OnStreamChanged(System.EventArgs)\n  parent: System.Media.SoundPlayer\n  langs:\n  - csharp\n  name: OnStreamChanged(EventArgs)\n  nameWithType: SoundPlayer.OnStreamChanged(EventArgs)\n  fullName: SoundPlayer.OnStreamChanged(EventArgs)\n  type: Method\n  assemblies:\n  - System\n  namespace: System.Media\n  summary: Raises the <xref href=\"System.Media.SoundPlayer.StreamChanged\"></xref> event.\n  remarks: \"This method is called when a new <xref:System.IO.Stream> audio source for this <xref:System.Media.SoundPlayer> has been set.  \\n  \\n Raising an event invokes the event handler through a delegate. For more information, see [NIB: Raising an Event](http://msdn.microsoft.com/en-us/f2adaf01-1ed1-42e1-8c31-8d467e7e0ee2).  \\n  \\n The <xref:System.Media.SoundPlayer.OnStreamChanged%2A> method also allows derived classes to handle the event without attaching a delegate. This is the preferred technique for handling the event in a derived class.\"\n  syntax:\n    content: protected virtual void OnStreamChanged (EventArgs e);\n    parameters:\n    - id: e\n      type: System.EventArgs\n      description: An <xref href=\"System.EventArgs\"></xref> that contains the event data.\n  overload: System.Media.SoundPlayer.OnStreamChanged*\n  exceptions: []\n  version:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - xamarinmac-3.0\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - xamarinmac-3.0\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Media/SoundPlayer.xml\n  ms.technology:\n  - dotnet-standard\n  author: stevehoag\n  ms.author: shoag\n  manager: wpickett\n- uid: System.Media.SoundPlayer.Play\n  commentId: M:System.Media.SoundPlayer.Play\n  id: Play\n  parent: System.Media.SoundPlayer\n  langs:\n  - csharp\n  name: Play()\n  nameWithType: SoundPlayer.Play()\n  fullName: SoundPlayer.Play()\n  type: Method\n  assemblies:\n  - System\n  namespace: System.Media\n  summary: Plays the .wav file using a new thread, and loads the .wav file first if it has not been loaded.\n  remarks: \"The <xref:System.Media.SoundPlayer.Play%2A> method plays the sound using a new thread. If you call <xref:System.Media.SoundPlayer.Play%2A> before the .wav file has been loaded into memory, the .wav file will be loaded before playback starts. You can use the <xref:System.Media.SoundPlayer.LoadAsync%2A> or <xref:System.Media.SoundPlayer.Load%2A> method to load the .wav file to memory in advance. After a .wav file is successfully loaded from a <xref:System.IO.Stream> or URL, future calls to playback methods for the <xref:System.Media.SoundPlayer> will not need to reload the .wav file until the path for the sound changes.  \\n  \\n If the .wav file has not been specified or it fails to load, the <xref:System.Media.SoundPlayer.Play%2A> method will play the default beep sound.\"\n  example:\n  - \"The following code example demonstrates the use of the <xref:System.Media.SoundPlayer.Play%2A> method to asynchronously play a .wav file. This code example is part of a larger example provided for the <xref:System.Media.SoundPlayer> class.  \\n  \\n [!code-cpp[System.Windows.Forms.Sound#5](~/samples/snippets/cpp/VS_Snippets_Winforms/System.Windows.Forms.Sound/CPP/soundtestform.cpp#5)]\\n [!code-csharp[System.Windows.Forms.Sound#5](~/samples/snippets/csharp/VS_Snippets_Winforms/System.Windows.Forms.Sound/CS/soundtestform.cs#5)]\\n [!code-vb[System.Windows.Forms.Sound#5](~/samples/snippets/visualbasic/VS_Snippets_Winforms/System.Windows.Forms.Sound/VB/soundtestform.vb#5)]\"\n  syntax:\n    content: public void Play ();\n    parameters: []\n  overload: System.Media.SoundPlayer.Play*\n  exceptions:\n  - type: System.ServiceProcess.TimeoutException\n    commentId: T:System.ServiceProcess.TimeoutException\n    description: The elapsed time during loading exceeds the time, in milliseconds, specified by <xref href=\"System.Media.SoundPlayer.LoadTimeout\"></xref>.\n  - type: System.IO.FileNotFoundException\n    commentId: T:System.IO.FileNotFoundException\n    description: The file specified by <xref href=\"System.Media.SoundPlayer.SoundLocation\"></xref> cannot be found.\n  - type: System.InvalidOperationException\n    commentId: T:System.InvalidOperationException\n    description: The .wav header is corrupted; the file specified by <xref href=\"System.Media.SoundPlayer.SoundLocation\"></xref> is not a PCM .wav file.\n  version:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - xamarinmac-3.0\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - xamarinmac-3.0\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Media/SoundPlayer.xml\n  ms.technology:\n  - dotnet-standard\n  author: stevehoag\n  ms.author: shoag\n  manager: wpickett\n- uid: System.Media.SoundPlayer.PlayLooping\n  commentId: M:System.Media.SoundPlayer.PlayLooping\n  id: PlayLooping\n  parent: System.Media.SoundPlayer\n  langs:\n  - csharp\n  name: PlayLooping()\n  nameWithType: SoundPlayer.PlayLooping()\n  fullName: SoundPlayer.PlayLooping()\n  type: Method\n  assemblies:\n  - System\n  namespace: System.Media\n  summary: Plays and loops the .wav file using a new thread, and loads the .wav file first if it has not been loaded.\n  remarks: \"The <xref:System.Media.SoundPlayer.PlayLooping%2A> method plays and loops the sound using a new thread. If you call <xref:System.Media.SoundPlayer.PlayLooping%2A> before the .wav file has been loaded into memory, the .wav file will be loaded before playback starts. You can use the <xref:System.Media.SoundPlayer.LoadAsync%2A> or <xref:System.Media.SoundPlayer.Load%2A> method to load the .wav file to memory in advance. After a .wav file is successfully loaded from a <xref:System.IO.Stream> or URL, future calls to playback methods for the <xref:System.Media.SoundPlayer> will not need to reload the .wav file until the path for the sound changes.  \\n  \\n If the .wav file has not been specified or it fails to load, the <xref:System.Media.SoundPlayer.PlayLooping%2A> method will play the default beep sound.  \\n  \\n For more information about <xref:System.Media.SoundPlayer.PlayLooping%2A>, see [How to: Loop a Sound Playing on a Windows Form](~/docs/framework/winforms/controls/how-to-loop-a-sound-playing-on-a-windows-form.md).\"\n  example:\n  - \"The following code example demonstrates the use of the <xref:System.Media.SoundPlayer.PlayLooping%2A> method to repeatedly play a .wav file. The .wav will be played until the <xref:System.Media.SoundPlayer.Stop%2A> method is called. This code example is part of a larger example provided for the <xref:System.Media.SoundPlayer> class.  \\n  \\n [!code-cpp[System.Windows.Forms.Sound#6](~/samples/snippets/cpp/VS_Snippets_Winforms/System.Windows.Forms.Sound/CPP/soundtestform.cpp#6)]\\n [!code-csharp[System.Windows.Forms.Sound#6](~/samples/snippets/csharp/VS_Snippets_Winforms/System.Windows.Forms.Sound/CS/soundtestform.cs#6)]\\n [!code-vb[System.Windows.Forms.Sound#6](~/samples/snippets/visualbasic/VS_Snippets_Winforms/System.Windows.Forms.Sound/VB/soundtestform.vb#6)]\"\n  syntax:\n    content: public void PlayLooping ();\n    parameters: []\n  overload: System.Media.SoundPlayer.PlayLooping*\n  exceptions:\n  - type: System.ServiceProcess.TimeoutException\n    commentId: T:System.ServiceProcess.TimeoutException\n    description: The elapsed time during loading exceeds the time, in milliseconds, specified by <xref href=\"System.Media.SoundPlayer.LoadTimeout\"></xref>.\n  - type: System.IO.FileNotFoundException\n    commentId: T:System.IO.FileNotFoundException\n    description: The file specified by <xref href=\"System.Media.SoundPlayer.SoundLocation\"></xref> cannot be found.\n  - type: System.InvalidOperationException\n    commentId: T:System.InvalidOperationException\n    description: The .wav header is corrupted; the file specified by <xref href=\"System.Media.SoundPlayer.SoundLocation\"></xref> is not a PCM .wav file.\n  version:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - xamarinmac-3.0\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - xamarinmac-3.0\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Media/SoundPlayer.xml\n  ms.technology:\n  - dotnet-standard\n  author: stevehoag\n  ms.author: shoag\n  manager: wpickett\n- uid: System.Media.SoundPlayer.PlaySync\n  commentId: M:System.Media.SoundPlayer.PlaySync\n  id: PlaySync\n  parent: System.Media.SoundPlayer\n  langs:\n  - csharp\n  name: PlaySync()\n  nameWithType: SoundPlayer.PlaySync()\n  fullName: SoundPlayer.PlaySync()\n  type: Method\n  assemblies:\n  - System\n  namespace: System.Media\n  summary: Plays the .wav file and loads the .wav file first if it has not been loaded.\n  remarks: \"The <xref:System.Media.SoundPlayer.PlaySync%2A> method uses the current thread to play a .wav file, preventing the thread from handling other messages until the load is complete. You can use the <xref:System.Media.SoundPlayer.LoadAsync%2A> or <xref:System.Media.SoundPlayer.Load%2A> method to load the .wav file to memory in advance. After a .wav file is successfully loaded from a <xref:System.IO.Stream> or URL, future calls to playback methods for the <xref:System.Media.SoundPlayer> will not need to reload the .wav file until the path for the sound changes.  \\n  \\n If the .wav file has not been specified or it fails to load, the <xref:System.Media.SoundPlayer.PlaySync%2A> method will play the default beep sound.\"\n  example:\n  - \"The following code example demonstrates the use of the <xref:System.Media.SoundPlayer.PlaySync%2A> method to synchronously play a .wav file.  \\n  \\n [!code-cpp[System.Windows.Forms.PlaySync#1](~/samples/snippets/cpp/VS_Snippets_Winforms/System.Windows.Forms.PlaySync/CPP/system.windows.forms.sound.playasync.cpp#1)]\\n [!code-csharp[System.Windows.Forms.PlaySync#1](~/samples/snippets/csharp/VS_Snippets_Winforms/System.Windows.Forms.PlaySync/CS/system.windows.forms.sound.playasync.cs#1)]\\n [!code-vb[System.Windows.Forms.PlaySync#1](~/samples/snippets/visualbasic/VS_Snippets_Winforms/System.Windows.Forms.PlaySync/VB/system.windows.forms.sound.playasync.vb#1)]\"\n  syntax:\n    content: public void PlaySync ();\n    parameters: []\n  overload: System.Media.SoundPlayer.PlaySync*\n  exceptions:\n  - type: System.ServiceProcess.TimeoutException\n    commentId: T:System.ServiceProcess.TimeoutException\n    description: The elapsed time during loading exceeds the time, in milliseconds, specified by <xref href=\"System.Media.SoundPlayer.LoadTimeout\"></xref>.\n  - type: System.IO.FileNotFoundException\n    commentId: T:System.IO.FileNotFoundException\n    description: The file specified by <xref href=\"System.Media.SoundPlayer.SoundLocation\"></xref> cannot be found.\n  - type: System.InvalidOperationException\n    commentId: T:System.InvalidOperationException\n    description: The .wav header is corrupted; the file specified by <xref href=\"System.Media.SoundPlayer.SoundLocation\"></xref> is not a PCM .wav file.\n  version:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - xamarinmac-3.0\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - xamarinmac-3.0\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Media/SoundPlayer.xml\n  ms.technology:\n  - dotnet-standard\n  author: stevehoag\n  ms.author: shoag\n  manager: wpickett\n- uid: System.Media.SoundPlayer.SoundLocation\n  commentId: P:System.Media.SoundPlayer.SoundLocation\n  id: SoundLocation\n  parent: System.Media.SoundPlayer\n  langs:\n  - csharp\n  name: SoundLocation\n  nameWithType: SoundPlayer.SoundLocation\n  fullName: SoundPlayer.SoundLocation\n  type: Property\n  assemblies:\n  - System\n  namespace: System.Media\n  summary: Gets or sets the file path or URL of the .wav file to load.\n  remarks: This property is set to <xref:System.String?displayProperty=fullName> when the <xref:System.Media.SoundPlayer.Stream%2A> property is set to a <xref:System.IO.Stream>.\n  example:\n  - \"The following code example demonstrates the use of the <xref:System.Media.SoundPlayer.SoundLocation%2A> property to assign the .wav file source to an instance of the <xref:System.Media.SoundPlayer> class. This code example is part of a larger example provided for the <xref:System.Media.SoundPlayer> class.  \\n  \\n [!code-cpp[System.Windows.Forms.Sound#2](~/samples/snippets/cpp/VS_Snippets_Winforms/System.Windows.Forms.Sound/CPP/soundtestform.cpp#2)]\\n [!code-csharp[System.Windows.Forms.Sound#2](~/samples/snippets/csharp/VS_Snippets_Winforms/System.Windows.Forms.Sound/CS/soundtestform.cs#2)]\\n [!code-vb[System.Windows.Forms.Sound#2](~/samples/snippets/visualbasic/VS_Snippets_Winforms/System.Windows.Forms.Sound/VB/soundtestform.vb#2)]\"\n  syntax:\n    content: public string SoundLocation { get; set; }\n    return:\n      type: System.String\n      description: The file path or URL from which to load a .wav file, or <xref href=\"System.String.Empty\"></xref> if no file path is present. The default is <xref href=\"System.String.Empty\"></xref>.\n  overload: System.Media.SoundPlayer.SoundLocation*\n  exceptions: []\n  version:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - xamarinmac-3.0\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - xamarinmac-3.0\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Media/SoundPlayer.xml\n  ms.technology:\n  - dotnet-standard\n  author: stevehoag\n  ms.author: shoag\n  manager: wpickett\n- uid: System.Media.SoundPlayer.SoundLocationChanged\n  commentId: E:System.Media.SoundPlayer.SoundLocationChanged\n  id: SoundLocationChanged\n  parent: System.Media.SoundPlayer\n  langs:\n  - csharp\n  name: SoundLocationChanged\n  nameWithType: SoundPlayer.SoundLocationChanged\n  fullName: SoundPlayer.SoundLocationChanged\n  type: Event\n  assemblies:\n  - System\n  namespace: System.Media\n  summary: Occurs when a new audio source path for this <xref href=\"System.Media.SoundPlayer\"></xref> has been set.\n  remarks: \"This event is raised when a new audio source path for this <xref:System.Media.SoundPlayer> has been set.  \\n  \\n For more information about handling events, see [NIB: Consuming Events](http://msdn.microsoft.com/en-us/01e4f1bc-e55e-413f-98c7-6588493e5f67).\"\n  example:\n  - \"The following code example demonstrates the use of the <xref:System.Media.SoundPlayer.OnSoundLocationChanged%2A> event handler to receive a notification when the <xref:System.Media.SoundPlayer> has been attached to a different .wav file. This code example is part of a larger example provided for the <xref:System.Media.SoundPlayer> class.  \\n  \\n [!code-cpp[System.Windows.Forms.Sound#9](~/samples/snippets/cpp/VS_Snippets_Winforms/System.Windows.Forms.Sound/CPP/soundtestform.cpp#9)]\\n [!code-csharp[System.Windows.Forms.Sound#9](~/samples/snippets/csharp/VS_Snippets_Winforms/System.Windows.Forms.Sound/CS/soundtestform.cs#9)]\\n [!code-vb[System.Windows.Forms.Sound#9](~/samples/snippets/visualbasic/VS_Snippets_Winforms/System.Windows.Forms.Sound/VB/soundtestform.vb#9)]\"\n  syntax:\n    content: public event EventHandler SoundLocationChanged;\n    return:\n      type: System.EventHandler\n      description: ''\n  exceptions: []\n  version:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - xamarinmac-3.0\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - xamarinmac-3.0\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Media/SoundPlayer.xml\n  ms.technology:\n  - dotnet-standard\n  author: stevehoag\n  ms.author: shoag\n  manager: wpickett\n- uid: System.Media.SoundPlayer.Stop\n  commentId: M:System.Media.SoundPlayer.Stop\n  id: Stop\n  parent: System.Media.SoundPlayer\n  langs:\n  - csharp\n  name: Stop()\n  nameWithType: SoundPlayer.Stop()\n  fullName: SoundPlayer.Stop()\n  type: Method\n  assemblies:\n  - System\n  namespace: System.Media\n  summary: Stops playback of the sound if playback is occurring.\n  remarks: ''\n  example:\n  - \"The following code example demonstrates the use of the <xref:System.Media.SoundPlayer.Stop%2A> method to halt a .wav file that is currently playing. This code example is part of a larger example provided for the <xref:System.Media.SoundPlayer> class.  \\n  \\n [!code-cpp[System.Windows.Forms.Sound#7](~/samples/snippets/cpp/VS_Snippets_Winforms/System.Windows.Forms.Sound/CPP/soundtestform.cpp#7)]\\n [!code-csharp[System.Windows.Forms.Sound#7](~/samples/snippets/csharp/VS_Snippets_Winforms/System.Windows.Forms.Sound/CS/soundtestform.cs#7)]\\n [!code-vb[System.Windows.Forms.Sound#7](~/samples/snippets/visualbasic/VS_Snippets_Winforms/System.Windows.Forms.Sound/VB/soundtestform.vb#7)]\"\n  syntax:\n    content: public void Stop ();\n    parameters: []\n  overload: System.Media.SoundPlayer.Stop*\n  exceptions: []\n  version:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - xamarinmac-3.0\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - xamarinmac-3.0\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Media/SoundPlayer.xml\n  ms.technology:\n  - dotnet-standard\n  author: stevehoag\n  ms.author: shoag\n  manager: wpickett\n- uid: System.Media.SoundPlayer.Stream\n  commentId: P:System.Media.SoundPlayer.Stream\n  id: Stream\n  parent: System.Media.SoundPlayer\n  langs:\n  - csharp\n  name: Stream\n  nameWithType: SoundPlayer.Stream\n  fullName: SoundPlayer.Stream\n  type: Property\n  assemblies:\n  - System\n  namespace: System.Media\n  summary: Gets or sets the <xref href=\"System.IO.Stream\"></xref> from which to load the .wav file.\n  remarks: This property is set to `null` when the <xref:System.Media.SoundPlayer.SoundLocation%2A> property is set to a new and valid sound location.\n  syntax:\n    content: public System.IO.Stream Stream { get; set; }\n    return:\n      type: System.IO.Stream\n      description: A <xref href=\"System.IO.Stream\"></xref> from which to load the .wav file, or `null` if no stream is available. The default is `null`.\n  overload: System.Media.SoundPlayer.Stream*\n  exceptions: []\n  version:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - xamarinmac-3.0\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - xamarinmac-3.0\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Media/SoundPlayer.xml\n  ms.technology:\n  - dotnet-standard\n  author: stevehoag\n  ms.author: shoag\n  manager: wpickett\n- uid: System.Media.SoundPlayer.StreamChanged\n  commentId: E:System.Media.SoundPlayer.StreamChanged\n  id: StreamChanged\n  parent: System.Media.SoundPlayer\n  langs:\n  - csharp\n  name: StreamChanged\n  nameWithType: SoundPlayer.StreamChanged\n  fullName: SoundPlayer.StreamChanged\n  type: Event\n  assemblies:\n  - System\n  namespace: System.Media\n  summary: Occurs when a new <xref href=\"System.IO.Stream\"></xref> audio source for this <xref href=\"System.Media.SoundPlayer\"></xref> has been set.\n  remarks: \"This event is raised when a new <xref:System.IO.Stream> audio source for this <xref:System.Media.SoundPlayer> has been set.  \\n  \\n For more information about handling events, see [NIB: Consuming Events](http://msdn.microsoft.com/en-us/01e4f1bc-e55e-413f-98c7-6588493e5f67).\"\n  syntax:\n    content: public event EventHandler StreamChanged;\n    return:\n      type: System.EventHandler\n      description: ''\n  exceptions: []\n  version:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - xamarinmac-3.0\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - xamarinmac-3.0\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Media/SoundPlayer.xml\n  ms.technology:\n  - dotnet-standard\n  author: stevehoag\n  ms.author: shoag\n  manager: wpickett\n- uid: System.Media.SoundPlayer.Tag\n  commentId: P:System.Media.SoundPlayer.Tag\n  id: Tag\n  parent: System.Media.SoundPlayer\n  langs:\n  - csharp\n  name: Tag\n  nameWithType: SoundPlayer.Tag\n  fullName: SoundPlayer.Tag\n  type: Property\n  assemblies:\n  - System\n  namespace: System.Media\n  summary: Gets or sets the <xref href=\"System.Object\"></xref> that contains data about the <xref href=\"System.Media.SoundPlayer\"></xref>.\n  syntax:\n    content: public object Tag { get; set; }\n    return:\n      type: System.Object\n      description: An <xref href=\"System.Object\"></xref> that contains data about the <xref href=\"System.Media.SoundPlayer\"></xref>.\n  overload: System.Media.SoundPlayer.Tag*\n  exceptions: []\n  version:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - xamarinmac-3.0\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - xamarinmac-3.0\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Media/SoundPlayer.xml\n  ms.technology:\n  - dotnet-standard\n  author: stevehoag\n  ms.author: shoag\n  manager: wpickett\n- uid: System.Media.SoundPlayer.System#Runtime#Serialization#ISerializable#GetObjectData(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)\n  commentId: M:System.Media.SoundPlayer.System#Runtime#Serialization#ISerializable#GetObjectData(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)\n  id: System#Runtime#Serialization#ISerializable#GetObjectData(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)\n  isEii: true\n  parent: System.Media.SoundPlayer\n  langs:\n  - csharp\n  name: ISerializable.GetObjectData(SerializationInfo, StreamingContext)\n  nameWithType: SoundPlayer.ISerializable.GetObjectData(SerializationInfo, StreamingContext)\n  fullName: SoundPlayer.ISerializable.GetObjectData(SerializationInfo, StreamingContext)\n  type: Method\n  assemblies:\n  - System\n  namespace: System.Media\n  summary: For a description of this member, see the <xref href=\"System.Runtime.Serialization.ISerializable.GetObjectData(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)\"></xref> method.\n  remarks: This member is an explicit interface member implementation. It can be used only when the <xref:System.Media.SoundPlayer> instance is cast to an <xref:System.Runtime.Serialization.ISerializable> interface.\n  syntax:\n    content: void ISerializable.GetObjectData (System.Runtime.Serialization.SerializationInfo info, System.Runtime.Serialization.StreamingContext context);\n    parameters:\n    - id: info\n      type: System.Runtime.Serialization.SerializationInfo\n      description: The <xref href=\"System.Runtime.Serialization.SerializationInfo\"></xref> to populate with data.\n    - id: context\n      type: System.Runtime.Serialization.StreamingContext\n      description: The destination (see <xref href=\"System.Runtime.Serialization.StreamingContext\"></xref>) for this serialization.\n  overload: System.Media.SoundPlayer.System#Runtime#Serialization#ISerializable#GetObjectData*\n  exceptions: []\n  version:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - xamarinmac-3.0\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - xamarinmac-3.0\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Media/SoundPlayer.xml\n  ms.technology:\n  - dotnet-standard\n  author: stevehoag\n  ms.author: shoag\n  manager: wpickett\nreferences:\n- uid: System.ComponentModel.Component\n  parent: System.ComponentModel\n  isExternal: false\n  name: Component\n  nameWithType: Component\n  fullName: System.ComponentModel.Component\n- uid: System.UriFormatException\n  parent: System\n  isExternal: false\n  name: UriFormatException\n  nameWithType: UriFormatException\n  fullName: System.UriFormatException\n- uid: System.ServiceProcess.TimeoutException\n  parent: System.ServiceProcess\n  isExternal: false\n  name: TimeoutException\n  nameWithType: TimeoutException\n  fullName: System.ServiceProcess.TimeoutException\n- uid: System.IO.FileNotFoundException\n  parent: System.IO\n  isExternal: false\n  name: FileNotFoundException\n  nameWithType: FileNotFoundException\n  fullName: System.IO.FileNotFoundException\n- uid: System.InvalidOperationException\n  parent: System\n  isExternal: false\n  name: InvalidOperationException\n  nameWithType: InvalidOperationException\n  fullName: System.InvalidOperationException\n- uid: System.Media.SoundPlayer.#ctor\n  parent: System.Media.SoundPlayer\n  isExternal: false\n  name: SoundPlayer()\n  nameWithType: SoundPlayer.SoundPlayer()\n  fullName: SoundPlayer.SoundPlayer()\n- uid: System.Media.SoundPlayer.#ctor(System.IO.Stream)\n  parent: System.Media.SoundPlayer\n  isExternal: false\n  name: SoundPlayer(Stream)\n  nameWithType: SoundPlayer.SoundPlayer(Stream)\n  fullName: SoundPlayer.SoundPlayer(Stream)\n- uid: System.IO.Stream\n  parent: System.IO\n  isExternal: false\n  name: Stream\n  nameWithType: Stream\n  fullName: System.IO.Stream\n- uid: System.Media.SoundPlayer.#ctor(System.String)\n  parent: System.Media.SoundPlayer\n  isExternal: false\n  name: SoundPlayer(String)\n  nameWithType: SoundPlayer.SoundPlayer(String)\n  fullName: SoundPlayer.SoundPlayer(String)\n- uid: System.String\n  parent: System\n  isExternal: false\n  name: String\n  nameWithType: String\n  fullName: System.String\n- uid: System.Media.SoundPlayer.#ctor(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)\n  parent: System.Media.SoundPlayer\n  isExternal: false\n  name: SoundPlayer(SerializationInfo, StreamingContext)\n  nameWithType: SoundPlayer.SoundPlayer(SerializationInfo, StreamingContext)\n  fullName: SoundPlayer.SoundPlayer(SerializationInfo, StreamingContext)\n- uid: System.Runtime.Serialization.SerializationInfo\n  parent: System.Runtime.Serialization\n  isExternal: false\n  name: SerializationInfo\n  nameWithType: SerializationInfo\n  fullName: System.Runtime.Serialization.SerializationInfo\n- uid: System.Runtime.Serialization.StreamingContext\n  parent: System.Runtime.Serialization\n  isExternal: false\n  name: StreamingContext\n  nameWithType: StreamingContext\n  fullName: System.Runtime.Serialization.StreamingContext\n- uid: System.Media.SoundPlayer.IsLoadCompleted\n  parent: System.Media.SoundPlayer\n  isExternal: false\n  name: IsLoadCompleted\n  nameWithType: SoundPlayer.IsLoadCompleted\n  fullName: SoundPlayer.IsLoadCompleted\n- uid: System.Boolean\n  parent: System\n  isExternal: false\n  name: Boolean\n  nameWithType: Boolean\n  fullName: System.Boolean\n- uid: System.Media.SoundPlayer.Load\n  parent: System.Media.SoundPlayer\n  isExternal: false\n  name: Load()\n  nameWithType: SoundPlayer.Load()\n  fullName: SoundPlayer.Load()\n- uid: System.Media.SoundPlayer.LoadAsync\n  parent: System.Media.SoundPlayer\n  isExternal: false\n  name: LoadAsync()\n  nameWithType: SoundPlayer.LoadAsync()\n  fullName: SoundPlayer.LoadAsync()\n- uid: System.Media.SoundPlayer.LoadCompleted\n  parent: System.Media.SoundPlayer\n  isExternal: false\n  name: LoadCompleted\n  nameWithType: SoundPlayer.LoadCompleted\n  fullName: SoundPlayer.LoadCompleted\n- uid: System.ComponentModel.AsyncCompletedEventHandler\n  parent: System.ComponentModel\n  isExternal: false\n  name: AsyncCompletedEventHandler\n  nameWithType: AsyncCompletedEventHandler\n  fullName: System.ComponentModel.AsyncCompletedEventHandler\n- uid: System.Media.SoundPlayer.LoadTimeout\n  parent: System.Media.SoundPlayer\n  isExternal: false\n  name: LoadTimeout\n  nameWithType: SoundPlayer.LoadTimeout\n  fullName: SoundPlayer.LoadTimeout\n- uid: System.Int32\n  parent: System\n  isExternal: false\n  name: Int32\n  nameWithType: Int32\n  fullName: System.Int32\n- uid: System.Media.SoundPlayer.OnLoadCompleted(System.ComponentModel.AsyncCompletedEventArgs)\n  parent: System.Media.SoundPlayer\n  isExternal: false\n  name: OnLoadCompleted(AsyncCompletedEventArgs)\n  nameWithType: SoundPlayer.OnLoadCompleted(AsyncCompletedEventArgs)\n  fullName: SoundPlayer.OnLoadCompleted(AsyncCompletedEventArgs)\n- uid: System.ComponentModel.AsyncCompletedEventArgs\n  parent: System.ComponentModel\n  isExternal: false\n  name: AsyncCompletedEventArgs\n  nameWithType: AsyncCompletedEventArgs\n  fullName: System.ComponentModel.AsyncCompletedEventArgs\n- uid: System.Media.SoundPlayer.OnSoundLocationChanged(System.EventArgs)\n  parent: System.Media.SoundPlayer\n  isExternal: false\n  name: OnSoundLocationChanged(EventArgs)\n  nameWithType: SoundPlayer.OnSoundLocationChanged(EventArgs)\n  fullName: SoundPlayer.OnSoundLocationChanged(EventArgs)\n- uid: System.EventArgs\n  parent: System\n  isExternal: false\n  name: EventArgs\n  nameWithType: EventArgs\n  fullName: System.EventArgs\n- uid: System.Media.SoundPlayer.OnStreamChanged(System.EventArgs)\n  parent: System.Media.SoundPlayer\n  isExternal: false\n  name: OnStreamChanged(EventArgs)\n  nameWithType: SoundPlayer.OnStreamChanged(EventArgs)\n  fullName: SoundPlayer.OnStreamChanged(EventArgs)\n- uid: System.Media.SoundPlayer.Play\n  parent: System.Media.SoundPlayer\n  isExternal: false\n  name: Play()\n  nameWithType: SoundPlayer.Play()\n  fullName: SoundPlayer.Play()\n- uid: System.Media.SoundPlayer.PlayLooping\n  parent: System.Media.SoundPlayer\n  isExternal: false\n  name: PlayLooping()\n  nameWithType: SoundPlayer.PlayLooping()\n  fullName: SoundPlayer.PlayLooping()\n- uid: System.Media.SoundPlayer.PlaySync\n  parent: System.Media.SoundPlayer\n  isExternal: false\n  name: PlaySync()\n  nameWithType: SoundPlayer.PlaySync()\n  fullName: SoundPlayer.PlaySync()\n- uid: System.Media.SoundPlayer.SoundLocation\n  parent: System.Media.SoundPlayer\n  isExternal: false\n  name: SoundLocation\n  nameWithType: SoundPlayer.SoundLocation\n  fullName: SoundPlayer.SoundLocation\n- uid: System.Media.SoundPlayer.SoundLocationChanged\n  parent: System.Media.SoundPlayer\n  isExternal: false\n  name: SoundLocationChanged\n  nameWithType: SoundPlayer.SoundLocationChanged\n  fullName: SoundPlayer.SoundLocationChanged\n- uid: System.EventHandler\n  parent: System\n  isExternal: false\n  name: EventHandler\n  nameWithType: EventHandler\n  fullName: System.EventHandler\n- uid: System.Media.SoundPlayer.Stop\n  parent: System.Media.SoundPlayer\n  isExternal: false\n  name: Stop()\n  nameWithType: SoundPlayer.Stop()\n  fullName: SoundPlayer.Stop()\n- uid: System.Media.SoundPlayer.Stream\n  parent: System.Media.SoundPlayer\n  isExternal: false\n  name: Stream\n  nameWithType: SoundPlayer.Stream\n  fullName: SoundPlayer.Stream\n- uid: System.Media.SoundPlayer.StreamChanged\n  parent: System.Media.SoundPlayer\n  isExternal: false\n  name: StreamChanged\n  nameWithType: SoundPlayer.StreamChanged\n  fullName: SoundPlayer.StreamChanged\n- uid: System.Media.SoundPlayer.Tag\n  parent: System.Media.SoundPlayer\n  isExternal: false\n  name: Tag\n  nameWithType: SoundPlayer.Tag\n  fullName: SoundPlayer.Tag\n- uid: System.Object\n  parent: System\n  isExternal: false\n  name: Object\n  nameWithType: Object\n  fullName: System.Object\n- uid: System.Media.SoundPlayer.System#Runtime#Serialization#ISerializable#GetObjectData(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)\n  parent: System.Media.SoundPlayer\n  isExternal: false\n  name: ISerializable.GetObjectData(SerializationInfo, StreamingContext)\n  nameWithType: SoundPlayer.ISerializable.GetObjectData(SerializationInfo, StreamingContext)\n  fullName: SoundPlayer.ISerializable.GetObjectData(SerializationInfo, StreamingContext)\n- uid: System.Media.SoundPlayer.#ctor*\n  parent: System.Media.SoundPlayer\n  isExternal: false\n  name: SoundPlayer\n  nameWithType: SoundPlayer.SoundPlayer\n  fullName: SoundPlayer.SoundPlayer\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - xamarinmac-3.0\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Media/SoundPlayer.xml\n- uid: System.Media.SoundPlayer.IsLoadCompleted*\n  parent: System.Media.SoundPlayer\n  isExternal: false\n  name: IsLoadCompleted\n  nameWithType: SoundPlayer.IsLoadCompleted\n  fullName: SoundPlayer.IsLoadCompleted\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - xamarinmac-3.0\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Media/SoundPlayer.xml\n- uid: System.Media.SoundPlayer.Load*\n  parent: System.Media.SoundPlayer\n  isExternal: false\n  name: Load\n  nameWithType: SoundPlayer.Load\n  fullName: SoundPlayer.Load\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - xamarinmac-3.0\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Media/SoundPlayer.xml\n- uid: System.Media.SoundPlayer.LoadAsync*\n  parent: System.Media.SoundPlayer\n  isExternal: false\n  name: LoadAsync\n  nameWithType: SoundPlayer.LoadAsync\n  fullName: SoundPlayer.LoadAsync\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - xamarinmac-3.0\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Media/SoundPlayer.xml\n- uid: System.Media.SoundPlayer.LoadTimeout*\n  parent: System.Media.SoundPlayer\n  isExternal: false\n  name: LoadTimeout\n  nameWithType: SoundPlayer.LoadTimeout\n  fullName: SoundPlayer.LoadTimeout\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - xamarinmac-3.0\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Media/SoundPlayer.xml\n- uid: System.Media.SoundPlayer.OnLoadCompleted*\n  parent: System.Media.SoundPlayer\n  isExternal: false\n  name: OnLoadCompleted\n  nameWithType: SoundPlayer.OnLoadCompleted\n  fullName: SoundPlayer.OnLoadCompleted\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - xamarinmac-3.0\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Media/SoundPlayer.xml\n- uid: System.Media.SoundPlayer.OnSoundLocationChanged*\n  parent: System.Media.SoundPlayer\n  isExternal: false\n  name: OnSoundLocationChanged\n  nameWithType: SoundPlayer.OnSoundLocationChanged\n  fullName: SoundPlayer.OnSoundLocationChanged\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - xamarinmac-3.0\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Media/SoundPlayer.xml\n- uid: System.Media.SoundPlayer.OnStreamChanged*\n  parent: System.Media.SoundPlayer\n  isExternal: false\n  name: OnStreamChanged\n  nameWithType: SoundPlayer.OnStreamChanged\n  fullName: SoundPlayer.OnStreamChanged\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - xamarinmac-3.0\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Media/SoundPlayer.xml\n- uid: System.Media.SoundPlayer.Play*\n  parent: System.Media.SoundPlayer\n  isExternal: false\n  name: Play\n  nameWithType: SoundPlayer.Play\n  fullName: SoundPlayer.Play\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - xamarinmac-3.0\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Media/SoundPlayer.xml\n- uid: System.Media.SoundPlayer.PlayLooping*\n  parent: System.Media.SoundPlayer\n  isExternal: false\n  name: PlayLooping\n  nameWithType: SoundPlayer.PlayLooping\n  fullName: SoundPlayer.PlayLooping\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - xamarinmac-3.0\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Media/SoundPlayer.xml\n- uid: System.Media.SoundPlayer.PlaySync*\n  parent: System.Media.SoundPlayer\n  isExternal: false\n  name: PlaySync\n  nameWithType: SoundPlayer.PlaySync\n  fullName: SoundPlayer.PlaySync\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - xamarinmac-3.0\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Media/SoundPlayer.xml\n- uid: System.Media.SoundPlayer.SoundLocation*\n  parent: System.Media.SoundPlayer\n  isExternal: false\n  name: SoundLocation\n  nameWithType: SoundPlayer.SoundLocation\n  fullName: SoundPlayer.SoundLocation\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - xamarinmac-3.0\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Media/SoundPlayer.xml\n- uid: System.Media.SoundPlayer.Stop*\n  parent: System.Media.SoundPlayer\n  isExternal: false\n  name: Stop\n  nameWithType: SoundPlayer.Stop\n  fullName: SoundPlayer.Stop\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - xamarinmac-3.0\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Media/SoundPlayer.xml\n- uid: System.Media.SoundPlayer.Stream*\n  parent: System.Media.SoundPlayer\n  isExternal: false\n  name: Stream\n  nameWithType: SoundPlayer.Stream\n  fullName: SoundPlayer.Stream\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - xamarinmac-3.0\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Media/SoundPlayer.xml\n- uid: System.Media.SoundPlayer.Tag*\n  parent: System.Media.SoundPlayer\n  isExternal: false\n  name: Tag\n  nameWithType: SoundPlayer.Tag\n  fullName: SoundPlayer.Tag\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - xamarinmac-3.0\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Media/SoundPlayer.xml\n- uid: System.Media.SoundPlayer.System#Runtime#Serialization#ISerializable#GetObjectData*\n  parent: System.Media.SoundPlayer\n  isExternal: false\n  name: System.Runtime.Serialization.ISerializable.GetObjectData\n  nameWithType: SoundPlayer.System.Runtime.Serialization.ISerializable.GetObjectData\n  fullName: SoundPlayer.System.Runtime.Serialization.ISerializable.GetObjectData\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - xamarinmac-3.0\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Media/SoundPlayer.xml\n- uid: System.Object.Equals(System.Object)\n  parent: System.Object\n  isExternal: false\n  name: Equals(Object)\n  nameWithType: Object.Equals(Object)\n  fullName: Object.Equals(Object)\n- uid: System.Object.Equals(System.Object,System.Object)\n  parent: System.Object\n  isExternal: false\n  name: Equals(Object, Object)\n  nameWithType: Object.Equals(Object, Object)\n  fullName: Object.Equals(Object, Object)\n- uid: System.Object.GetHashCode\n  parent: System.Object\n  isExternal: false\n  name: GetHashCode()\n  nameWithType: Object.GetHashCode()\n  fullName: Object.GetHashCode()\n- uid: System.Object.GetType\n  parent: System.Object\n  isExternal: false\n  name: GetType()\n  nameWithType: Object.GetType()\n  fullName: Object.GetType()\n- uid: System.Object.MemberwiseClone\n  parent: System.Object\n  isExternal: false\n  name: MemberwiseClone()\n  nameWithType: Object.MemberwiseClone()\n  fullName: Object.MemberwiseClone()\n- uid: System.Object.ReferenceEquals(System.Object,System.Object)\n  parent: System.Object\n  isExternal: false\n  name: ReferenceEquals(Object, Object)\n  nameWithType: Object.ReferenceEquals(Object, Object)\n  fullName: Object.ReferenceEquals(Object, Object)\n- uid: System.ComponentModel.Component.ToString\n  parent: System.ComponentModel.Component\n  isExternal: false\n  name: ToString()\n  nameWithType: Component.ToString()\n  fullName: Component.ToString()\n- uid: System.MarshalByRefObject.CreateObjRef(System.Type)\n  parent: System.MarshalByRefObject\n  isExternal: false\n  name: CreateObjRef(Type)\n  nameWithType: MarshalByRefObject.CreateObjRef(Type)\n  fullName: MarshalByRefObject.CreateObjRef(Type)\n- uid: System.MarshalByRefObject.GetLifetimeService\n  parent: System.MarshalByRefObject\n  isExternal: false\n  name: GetLifetimeService()\n  nameWithType: MarshalByRefObject.GetLifetimeService()\n  fullName: MarshalByRefObject.GetLifetimeService()\n- uid: System.MarshalByRefObject.InitializeLifetimeService\n  parent: System.MarshalByRefObject\n  isExternal: false\n  name: InitializeLifetimeService()\n  nameWithType: MarshalByRefObject.InitializeLifetimeService()\n  fullName: MarshalByRefObject.InitializeLifetimeService()\n- uid: System.MarshalByRefObject.MemberwiseClone(System.Boolean)\n  parent: System.MarshalByRefObject\n  isExternal: false\n  name: MemberwiseClone(Boolean)\n  nameWithType: MarshalByRefObject.MemberwiseClone(Boolean)\n  fullName: MarshalByRefObject.MemberwiseClone(Boolean)\n- uid: System.ComponentModel.Component.CanRaiseEvents\n  parent: System.ComponentModel.Component\n  isExternal: false\n  name: CanRaiseEvents\n  nameWithType: Component.CanRaiseEvents\n  fullName: Component.CanRaiseEvents\n- uid: System.ComponentModel.Component.Container\n  parent: System.ComponentModel.Component\n  isExternal: false\n  name: Container\n  nameWithType: Component.Container\n  fullName: Component.Container\n- uid: System.ComponentModel.Component.DesignMode\n  parent: System.ComponentModel.Component\n  isExternal: false\n  name: DesignMode\n  nameWithType: Component.DesignMode\n  fullName: Component.DesignMode\n- uid: System.ComponentModel.Component.Dispose\n  parent: System.ComponentModel.Component\n  isExternal: false\n  name: Dispose()\n  nameWithType: Component.Dispose()\n  fullName: Component.Dispose()\n- uid: System.ComponentModel.Component.Dispose(System.Boolean)\n  parent: System.ComponentModel.Component\n  isExternal: false\n  name: Dispose(Boolean)\n  nameWithType: Component.Dispose(Boolean)\n  fullName: Component.Dispose(Boolean)\n- uid: System.ComponentModel.Component.Disposed\n  parent: System.ComponentModel.Component\n  isExternal: false\n  name: Disposed\n  nameWithType: Component.Disposed\n  fullName: Component.Disposed\n- uid: System.ComponentModel.Component.Events\n  parent: System.ComponentModel.Component\n  isExternal: false\n  name: Events\n  nameWithType: Component.Events\n  fullName: Component.Events\n- uid: System.ComponentModel.Component.GetService(System.Type)\n  parent: System.ComponentModel.Component\n  isExternal: false\n  name: GetService(Type)\n  nameWithType: Component.GetService(Type)\n  fullName: Component.GetService(Type)\n- uid: System.ComponentModel.Component.Site\n  parent: System.ComponentModel.Component\n  isExternal: false\n  name: Site\n  nameWithType: Component.Site\n  fullName: Component.Site\n- uid: System.Runtime.Serialization.ISerializable\n  parent: System.Runtime.Serialization\n  isExternal: false\n  name: ISerializable\n  nameWithType: ISerializable\n  fullName: System.Runtime.Serialization.ISerializable\n"}