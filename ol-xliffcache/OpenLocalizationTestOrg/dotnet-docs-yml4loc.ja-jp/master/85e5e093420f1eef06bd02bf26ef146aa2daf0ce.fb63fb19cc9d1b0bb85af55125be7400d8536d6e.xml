{"nodes":[{"content":"Reports information about XAML types as part of the overall XAML system that is implemented in .NET Framework XAML Services.","nodes":[{"pos":[0,124],"content":"Reports information about XAML types as part of the overall XAML system that is implemented in .NET Framework XAML Services.","nodes":[{"content":"Reports information about XAML types as part of the overall XAML system that is implemented in .NET Framework XAML Services.","pos":[0,124]}]}],"pos":[4558,4683],"yaml":true},{"content":"Many APIs in the <xref:System.Xaml.XamlType> class provide information about XAML types, where the concept they report on is similar to particular sections of the XAML specification [MS-XAML].  \n  \n <xref:System.Xaml.XamlType> is used extensively in the .NET Framework XAML Services API for reporting information about a XAML type. <xref:System.Xaml.XamlType> reports the information that you might need to know about a XAML type in order to work with an instance or to access its members from a XAML node stream, or a similar XAML representation. Its reporting is similar to how the <xref:System.Type> in the CLR type system, together with reflection classes such as <xref:System.Reflection.MemberInfo>, provide information about a CLR type and its usage.  \n  \n To extend the XAML type system, you can derive from <xref:System.Xaml.XamlType>. To do so effectively, you might also need to implement a <xref:System.Xaml.Schema.XamlTypeInvoker>. The <xref:System.Xaml.Schema.XamlTypeInvoker> enables the generalized XAML type system to work with the type system backing that you specify as part of the invocation behavior. The specific custom <xref:System.Xaml.Schema.XamlTypeInvoker> provides a way to reduce the dependencies on the CLR type system, which are used by the default <xref:System.Xaml.XamlType> behavior.","nodes":[{"pos":[0,192],"content":"Many APIs in the <xref:System.Xaml.XamlType> class provide information about XAML types, where the concept they report on is similar to particular sections of the XAML specification [MS-XAML].","nodes":[{"content":"Many APIs in the <ph id=\"ph1\">&lt;xref:System.Xaml.XamlType&gt;</ph> class provide information about XAML types, where the concept they report on is similar to particular sections of the XAML specification [MS-XAML].","pos":[0,192],"source":"Many APIs in the <xref:System.Xaml.XamlType> class provide information about XAML types, where the concept they report on is similar to particular sections of the XAML specification [MS-XAML]."}]},{"pos":[199,756],"content":"<xref:System.Xaml.XamlType> is used extensively in the .NET Framework XAML Services API for reporting information about a XAML type. <xref:System.Xaml.XamlType> reports the information that you might need to know about a XAML type in order to work with an instance or to access its members from a XAML node stream, or a similar XAML representation. Its reporting is similar to how the <xref:System.Type> in the CLR type system, together with reflection classes such as <xref:System.Reflection.MemberInfo>, provide information about a CLR type and its usage.","nodes":[{"content":"<xref:System.Xaml.XamlType> is used extensively in the .NET Framework XAML Services API for reporting information about a XAML type. <xref:System.Xaml.XamlType> reports the information that you might need to know about a XAML type in order to work with an instance or to access its members from a XAML node stream, or a similar XAML representation. Its reporting is similar to how the <xref:System.Type> in the CLR type system, together with reflection classes such as <xref:System.Reflection.MemberInfo>, provide information about a CLR type and its usage.","pos":[0,557],"nodes":[{"content":"<ph id=\"ph1\">&lt;xref:System.Xaml.XamlType&gt;</ph> is used extensively in the .NET Framework XAML Services API for reporting information about a XAML type.","pos":[0,132],"source":"<xref:System.Xaml.XamlType> is used extensively in the .NET Framework XAML Services API for reporting information about a XAML type."},{"content":"<ph id=\"ph1\">&lt;xref:System.Xaml.XamlType&gt;</ph> reports the information that you might need to know about a XAML type in order to work with an instance or to access its members from a XAML node stream, or a similar XAML representation.","pos":[133,348],"source":" <xref:System.Xaml.XamlType> reports the information that you might need to know about a XAML type in order to work with an instance or to access its members from a XAML node stream, or a similar XAML representation."},{"content":"Its reporting is similar to how the <ph id=\"ph1\">&lt;xref:System.Type&gt;</ph> in the CLR type system, together with reflection classes such as <ph id=\"ph2\">&lt;xref:System.Reflection.MemberInfo&gt;</ph>, provide information about a CLR type and its usage.","pos":[349,557],"source":" Its reporting is similar to how the <xref:System.Type> in the CLR type system, together with reflection classes such as <xref:System.Reflection.MemberInfo>, provide information about a CLR type and its usage."}]}]},{"pos":[763,1316],"content":"To extend the XAML type system, you can derive from <xref:System.Xaml.XamlType>. To do so effectively, you might also need to implement a <xref:System.Xaml.Schema.XamlTypeInvoker>. The <xref:System.Xaml.Schema.XamlTypeInvoker> enables the generalized XAML type system to work with the type system backing that you specify as part of the invocation behavior. The specific custom <xref:System.Xaml.Schema.XamlTypeInvoker> provides a way to reduce the dependencies on the CLR type system, which are used by the default <xref:System.Xaml.XamlType> behavior.","nodes":[{"content":"To extend the XAML type system, you can derive from <xref:System.Xaml.XamlType>. To do so effectively, you might also need to implement a <xref:System.Xaml.Schema.XamlTypeInvoker>. The <xref:System.Xaml.Schema.XamlTypeInvoker> enables the generalized XAML type system to work with the type system backing that you specify as part of the invocation behavior. The specific custom <xref:System.Xaml.Schema.XamlTypeInvoker> provides a way to reduce the dependencies on the CLR type system, which are used by the default <xref:System.Xaml.XamlType> behavior.","pos":[0,553],"nodes":[{"content":"To extend the XAML type system, you can derive from <ph id=\"ph1\">&lt;xref:System.Xaml.XamlType&gt;</ph>.","pos":[0,80],"source":"To extend the XAML type system, you can derive from <xref:System.Xaml.XamlType>."},{"content":"To do so effectively, you might also need to implement a <ph id=\"ph1\">&lt;xref:System.Xaml.Schema.XamlTypeInvoker&gt;</ph>.","pos":[81,180],"source":" To do so effectively, you might also need to implement a <xref:System.Xaml.Schema.XamlTypeInvoker>."},{"content":"The <ph id=\"ph1\">&lt;xref:System.Xaml.Schema.XamlTypeInvoker&gt;</ph> enables the generalized XAML type system to work with the type system backing that you specify as part of the invocation behavior.","pos":[181,357],"source":" The <xref:System.Xaml.Schema.XamlTypeInvoker> enables the generalized XAML type system to work with the type system backing that you specify as part of the invocation behavior."},{"content":"The specific custom <ph id=\"ph1\">&lt;xref:System.Xaml.Schema.XamlTypeInvoker&gt;</ph> provides a way to reduce the dependencies on the CLR type system, which are used by the default <ph id=\"ph2\">&lt;xref:System.Xaml.XamlType&gt;</ph> behavior.","pos":[358,553],"source":" The specific custom <xref:System.Xaml.Schema.XamlTypeInvoker> provides a way to reduce the dependencies on the CLR type system, which are used by the default <xref:System.Xaml.XamlType> behavior."}]}]}],"pos":[4694,6017],"yaml":true,"extradata":"MT"},{"content":"Initializes a new instance of the <xref href=\"System.Xaml.XamlType\"></xref> class based on the underlying CLR type information.","nodes":[{"pos":[0,127],"content":"Initializes a new instance of the <ph id=\"ph1\">&lt;xref href=\"System.Xaml.XamlType\"&gt;&lt;/xref&gt;</ph> class based on the underlying CLR type information.","source":"Initializes a new instance of the <xref href=\"System.Xaml.XamlType\"></xref> class based on the underlying CLR type information."}],"pos":[7375,7503],"yaml":true},{"content":"The underlying CLR <xref href=\"System.Type\"></xref> for the XAML type to construct.","nodes":[{"pos":[0,83],"content":"The underlying CLR <ph id=\"ph1\">&lt;xref href=\"System.Type\"&gt;&lt;/xref&gt;</ph> for the XAML type to construct.","source":"The underlying CLR <xref href=\"System.Type\"></xref> for the XAML type to construct."}],"pos":[7694,7778],"yaml":true},{"content":"XAML schema context for XAML readers or XAML writers.","nodes":[{"pos":[0,53],"content":"XAML schema context for XAML readers or XAML writers.","nodes":[{"content":"XAML schema context for XAML readers or XAML writers.","pos":[0,53]}]}],"pos":[7863,7917],"yaml":true},{"content":"One or more of <code>underlyingType</code> or <code>schemaContext</code> are `null`.","nodes":[{"pos":[0,84],"content":"One or more of <bpt id=\"p1\">&lt;code&gt;</bpt><ph id=\"ph1\">underlyingType</ph><ept id=\"p1\">&lt;/code&gt;</ept> or <bpt id=\"p2\">&lt;code&gt;</bpt><ph id=\"ph2\">schemaContext</ph><ept id=\"p2\">&lt;/code&gt;</ept> are <ph id=\"ph3\">`null`</ph>.","source":"One or more of <code>underlyingType</code> or <code>schemaContext</code> are `null`."}],"pos":[8073,8158],"yaml":true},{"content":"Initializes a new instance of the <xref href=\"System.Xaml.XamlType\"></xref> class based on a string name for the type.","nodes":[{"pos":[0,118],"content":"Initializes a new instance of the <ph id=\"ph1\">&lt;xref href=\"System.Xaml.XamlType\"&gt;&lt;/xref&gt;</ph> class based on a string name for the type.","source":"Initializes a new instance of the <xref href=\"System.Xaml.XamlType\"></xref> class based on a string name for the type."}],"pos":[9374,9493],"yaml":true},{"content":"This is a protected constructor. No current public derived classes exist that use this particular path for construction. As a consumer of the existing <xref:System.Xaml.XamlType>, you must use the other constructor signatures (<xref:System.Xaml.XamlType.%23ctor%28System.Type%2CSystem.Xaml.XamlSchemaContext%2CSystem.Xaml.Schema.XamlTypeInvoker%29>, <xref:System.Xaml.XamlType.%23ctor%28System.Type%2CSystem.Xaml.XamlSchemaContext%29>, or <xref:System.Xaml.XamlType.%23ctor%28System.String%2CSystem.String%2CSystem.Collections.Generic.IList%7BSystem.Xaml.XamlType%7D%2CSystem.Xaml.XamlSchemaContext%29>) to initialize a <xref:System.Xaml.XamlType> object.","nodes":[{"pos":[0,655],"content":"This is a protected constructor. No current public derived classes exist that use this particular path for construction. As a consumer of the existing <xref:System.Xaml.XamlType>, you must use the other constructor signatures (<xref:System.Xaml.XamlType.%23ctor%28System.Type%2CSystem.Xaml.XamlSchemaContext%2CSystem.Xaml.Schema.XamlTypeInvoker%29>, <xref:System.Xaml.XamlType.%23ctor%28System.Type%2CSystem.Xaml.XamlSchemaContext%29>, or <xref:System.Xaml.XamlType.%23ctor%28System.String%2CSystem.String%2CSystem.Collections.Generic.IList%7BSystem.Xaml.XamlType%7D%2CSystem.Xaml.XamlSchemaContext%29>) to initialize a <xref:System.Xaml.XamlType> object.","nodes":[{"content":"This is a protected constructor. No current public derived classes exist that use this particular path for construction. As a consumer of the existing <xref:System.Xaml.XamlType>, you must use the other constructor signatures (<xref:System.Xaml.XamlType.%23ctor%28System.Type%2CSystem.Xaml.XamlSchemaContext%2CSystem.Xaml.Schema.XamlTypeInvoker%29>, <xref:System.Xaml.XamlType.%23ctor%28System.Type%2CSystem.Xaml.XamlSchemaContext%29>, or <xref:System.Xaml.XamlType.%23ctor%28System.String%2CSystem.String%2CSystem.Collections.Generic.IList%7BSystem.Xaml.XamlType%7D%2CSystem.Xaml.XamlSchemaContext%29>) to initialize a <xref:System.Xaml.XamlType> object.","pos":[0,655],"nodes":[{"content":"This is a protected constructor.","pos":[0,32]},{"content":"No current public derived classes exist that use this particular path for construction.","pos":[33,120]},{"content":"As a consumer of the existing <ph id=\"ph1\">&lt;xref:System.Xaml.XamlType&gt;</ph>, you must use the other constructor signatures (<ph id=\"ph2\">&lt;xref:System.Xaml.XamlType.%23ctor%28System.Type%2CSystem.Xaml.XamlSchemaContext%2CSystem.Xaml.Schema.XamlTypeInvoker%29&gt;</ph>, <ph id=\"ph3\">&lt;xref:System.Xaml.XamlType.%23ctor%28System.Type%2CSystem.Xaml.XamlSchemaContext%29&gt;</ph>, or <ph id=\"ph4\">&lt;xref:System.Xaml.XamlType.%23ctor%28System.String%2CSystem.String%2CSystem.Collections.Generic.IList%7BSystem.Xaml.XamlType%7D%2CSystem.Xaml.XamlSchemaContext%29&gt;</ph>) to initialize a <ph id=\"ph5\">&lt;xref:System.Xaml.XamlType&gt;</ph> object.","pos":[121,655],"source":" As a consumer of the existing <xref:System.Xaml.XamlType>, you must use the other constructor signatures (<xref:System.Xaml.XamlType.%23ctor%28System.Type%2CSystem.Xaml.XamlSchemaContext%2CSystem.Xaml.Schema.XamlTypeInvoker%29>, <xref:System.Xaml.XamlType.%23ctor%28System.Type%2CSystem.Xaml.XamlSchemaContext%29>, or <xref:System.Xaml.XamlType.%23ctor%28System.String%2CSystem.String%2CSystem.Collections.Generic.IList%7BSystem.Xaml.XamlType%7D%2CSystem.Xaml.XamlSchemaContext%29>) to initialize a <xref:System.Xaml.XamlType> object."}]}]}],"pos":[9504,10160],"yaml":true,"extradata":"MT"},{"content":"The name of the type to create.","nodes":[{"pos":[0,31],"content":"The name of the type to create.","nodes":[{"content":"The name of the type to create.","pos":[0,31]}]}],"pos":[10416,10448],"yaml":true},{"content":"The type arguments for a <xref href=\"System.Xaml.XamlType\"></xref> that represents a generic type. Can be (and often is) `null`, which indicates that the represented type is not a generic type.","nodes":[{"pos":[0,193],"content":"The type arguments for a <xref href=\"System.Xaml.XamlType\"></xref> that represents a generic type. Can be (and often is) `null`, which indicates that the represented type is not a generic type.","nodes":[{"content":"The type arguments for a <ph id=\"ph1\">&lt;xref href=\"System.Xaml.XamlType\"&gt;&lt;/xref&gt;</ph> that represents a generic type.","pos":[0,98],"source":"The type arguments for a <xref href=\"System.Xaml.XamlType\"></xref> that represents a generic type."},{"content":"Can be (and often is) <ph id=\"ph1\">`null`</ph>, which indicates that the represented type is not a generic type.","pos":[99,193],"source":" Can be (and often is) `null`, which indicates that the represented type is not a generic type."}]}],"pos":[10558,10752],"yaml":true},{"content":"XAML schema context for XAML readers and XAML writers.","nodes":[{"pos":[0,54],"content":"XAML schema context for XAML readers and XAML writers.","nodes":[{"content":"XAML schema context for XAML readers and XAML writers.","pos":[0,54]}]}],"pos":[10837,10892],"yaml":true},{"content":"One or more of <code>typeName</code> or <code>schemaContext</code> are `null`.","nodes":[{"pos":[0,78],"content":"One or more of <bpt id=\"p1\">&lt;code&gt;</bpt><ph id=\"ph1\">typeName</ph><ept id=\"p1\">&lt;/code&gt;</ept> or <bpt id=\"p2\">&lt;code&gt;</bpt><ph id=\"ph2\">schemaContext</ph><ept id=\"p2\">&lt;/code&gt;</ept> are <ph id=\"ph3\">`null`</ph>.","source":"One or more of <code>typeName</code> or <code>schemaContext</code> are `null`."}],"pos":[11048,11127],"yaml":true},{"content":"Initializes a new instance of the <xref href=\"System.Xaml.XamlType\"></xref> class based on underlying type information and a <xref href=\"System.Xaml.Schema.XamlTypeInvoker\"></xref> implementation.","nodes":[{"pos":[0,196],"content":"Initializes a new instance of the <ph id=\"ph1\">&lt;xref href=\"System.Xaml.XamlType\"&gt;&lt;/xref&gt;</ph> class based on underlying type information and a <ph id=\"ph2\">&lt;xref href=\"System.Xaml.Schema.XamlTypeInvoker\"&gt;&lt;/xref&gt;</ph> implementation.","source":"Initializes a new instance of the <xref href=\"System.Xaml.XamlType\"></xref> class based on underlying type information and a <xref href=\"System.Xaml.Schema.XamlTypeInvoker\"></xref> implementation."}],"pos":[12271,12468],"yaml":true},{"content":"The underlying type for the XAML type to construct.","nodes":[{"pos":[0,51],"content":"The underlying type for the XAML type to construct.","nodes":[{"content":"The underlying type for the XAML type to construct.","pos":[0,51]}]}],"pos":[12703,12755],"yaml":true},{"content":"XAML schema context for the XAML reader.","nodes":[{"pos":[0,40],"content":"XAML schema context for the XAML reader.","nodes":[{"content":"XAML schema context for the XAML reader.","pos":[0,40]}]}],"pos":[12840,12881],"yaml":true},{"content":"The <xref href=\"System.Xaml.Schema.XamlTypeInvoker\"></xref> implementation that handles run-time reflection calls against the <xref href=\"System.Xaml.XamlType\"></xref>.","nodes":[{"pos":[0,168],"content":"The <ph id=\"ph1\">&lt;xref href=\"System.Xaml.Schema.XamlTypeInvoker\"&gt;&lt;/xref&gt;</ph> implementation that handles run-time reflection calls against the <ph id=\"ph2\">&lt;xref href=\"System.Xaml.XamlType\"&gt;&lt;/xref&gt;</ph>.","source":"The <xref href=\"System.Xaml.Schema.XamlTypeInvoker\"></xref> implementation that handles run-time reflection calls against the <xref href=\"System.Xaml.XamlType\"></xref>."}],"pos":[12965,13134],"yaml":true},{"content":"One or more of <code>underlyingType</code> or <code>schemaContext</code> are `null`.","nodes":[{"pos":[0,84],"content":"One or more of <bpt id=\"p1\">&lt;code&gt;</bpt><ph id=\"ph1\">underlyingType</ph><ept id=\"p1\">&lt;/code&gt;</ept> or <bpt id=\"p2\">&lt;code&gt;</bpt><ph id=\"ph2\">schemaContext</ph><ept id=\"p2\">&lt;/code&gt;</ept> are <ph id=\"ph3\">`null`</ph>.","source":"One or more of <code>underlyingType</code> or <code>schemaContext</code> are `null`."}],"pos":[13290,13375],"yaml":true},{"content":"Initializes a new instance of the <xref href=\"System.Xaml.XamlType\"></xref> class based on the XAML namespace and a string name for the type. This constructor is exclusively for analysis and XAML-node recording of type usages that are known to not have backing in the supporting type system and XAML schema context.","nodes":[{"pos":[0,315],"content":"Initializes a new instance of the <xref href=\"System.Xaml.XamlType\"></xref> class based on the XAML namespace and a string name for the type. This constructor is exclusively for analysis and XAML-node recording of type usages that are known to not have backing in the supporting type system and XAML schema context.","nodes":[{"content":"Initializes a new instance of the <ph id=\"ph1\">&lt;xref href=\"System.Xaml.XamlType\"&gt;&lt;/xref&gt;</ph> class based on the XAML namespace and a string name for the type.","pos":[0,141],"source":"Initializes a new instance of the <xref href=\"System.Xaml.XamlType\"></xref> class based on the XAML namespace and a string name for the type."},{"content":"This constructor is exclusively for analysis and XAML-node recording of type usages that are known to not have backing in the supporting type system and XAML schema context.","pos":[142,315]}]}],"pos":[14657,14973],"yaml":true},{"content":"Use this constructor only for \"unknown\" types where a XAML type that maps to an underlying type system is unavailable. This constructor might not produce a result where <xref:System.Xaml.XamlType.IsUnknown%2A?displayProperty=fullName> is `true`. Instead, the default reflector logic reports the underlying type as <xref:System.Xaml.XamlLanguage.Object%2A?displayProperty=fullName>. However, this behavior can change because of the <xref:System.Xaml.XamlType.LookupIsUnknown%2A> override.","nodes":[{"pos":[0,487],"content":"Use this constructor only for \"unknown\" types where a XAML type that maps to an underlying type system is unavailable. This constructor might not produce a result where <xref:System.Xaml.XamlType.IsUnknown%2A?displayProperty=fullName> is `true`. Instead, the default reflector logic reports the underlying type as <xref:System.Xaml.XamlLanguage.Object%2A?displayProperty=fullName>. However, this behavior can change because of the <xref:System.Xaml.XamlType.LookupIsUnknown%2A> override.","nodes":[{"content":"Use this constructor only for \"unknown\" types where a XAML type that maps to an underlying type system is unavailable.","pos":[0,118]},{"content":"This constructor might not produce a result where <ph id=\"ph1\">&lt;xref:System.Xaml.XamlType.IsUnknown%2A?displayProperty=fullName&gt;</ph> is <ph id=\"ph2\">`true`</ph>.","pos":[119,245],"source":" This constructor might not produce a result where <xref:System.Xaml.XamlType.IsUnknown%2A?displayProperty=fullName> is `true`."},{"content":"Instead, the default reflector logic reports the underlying type as <ph id=\"ph1\">&lt;xref:System.Xaml.XamlLanguage.Object%2A?displayProperty=fullName&gt;</ph>.","pos":[246,381],"source":" Instead, the default reflector logic reports the underlying type as <xref:System.Xaml.XamlLanguage.Object%2A?displayProperty=fullName>."},{"content":"However, this behavior can change because of the <ph id=\"ph1\">&lt;xref:System.Xaml.XamlType.LookupIsUnknown%2A&gt;</ph> override.","pos":[382,487],"source":" However, this behavior can change because of the <xref:System.Xaml.XamlType.LookupIsUnknown%2A> override."}]}],"pos":[14984,15472],"yaml":true,"extradata":"MT"},{"content":"The XAML namespace for the type, as a string.","nodes":[{"pos":[0,45],"content":"The XAML namespace for the type, as a string.","nodes":[{"content":"The XAML namespace for the type, as a string.","pos":[0,45]}]}],"pos":[15773,15819],"yaml":true},{"content":"The name of the type in the provided <code>unknownTypeNamespace</code> XAML namespace.","nodes":[{"pos":[0,86],"content":"The name of the type in the provided <bpt id=\"p1\">&lt;code&gt;</bpt><ph id=\"ph1\">unknownTypeNamespace</ph><ept id=\"p1\">&lt;/code&gt;</ept> XAML namespace.","source":"The name of the type in the provided <code>unknownTypeNamespace</code> XAML namespace."}],"pos":[15890,15977],"yaml":true},{"content":"The type arguments for a <xref href=\"System.Xaml.XamlType\"></xref> that represents a generic type. Can be (and often is) `null`, which indicates that the represented type is not a generic type.","nodes":[{"pos":[0,193],"content":"The type arguments for a <xref href=\"System.Xaml.XamlType\"></xref> that represents a generic type. Can be (and often is) `null`, which indicates that the represented type is not a generic type.","nodes":[{"content":"The type arguments for a <ph id=\"ph1\">&lt;xref href=\"System.Xaml.XamlType\"&gt;&lt;/xref&gt;</ph> that represents a generic type.","pos":[0,98],"source":"The type arguments for a <xref href=\"System.Xaml.XamlType\"></xref> that represents a generic type."},{"content":"Can be (and often is) <ph id=\"ph1\">`null`</ph>, which indicates that the represented type is not a generic type.","pos":[99,193],"source":" Can be (and often is) `null`, which indicates that the represented type is not a generic type."}]}],"pos":[16087,16281],"yaml":true},{"content":"XAML schema context for XAML readers or XAML writers.","nodes":[{"pos":[0,53],"content":"XAML schema context for XAML readers or XAML writers.","nodes":[{"content":"XAML schema context for XAML readers or XAML writers.","pos":[0,53]}]}],"pos":[16366,16420],"yaml":true},{"content":"One or more of <code>unknownTypeNamespace</code>, <code>unknownTypeName</code>, or <code>schemaContext</code> are `null`.","nodes":[{"pos":[0,121],"content":"One or more of <bpt id=\"p1\">&lt;code&gt;</bpt><ph id=\"ph1\">unknownTypeNamespace</ph><ept id=\"p1\">&lt;/code&gt;</ept>, <bpt id=\"p2\">&lt;code&gt;</bpt><ph id=\"ph2\">unknownTypeName</ph><ept id=\"p2\">&lt;/code&gt;</ept>, or <bpt id=\"p3\">&lt;code&gt;</bpt><ph id=\"ph3\">schemaContext</ph><ept id=\"p3\">&lt;/code&gt;</ept> are <ph id=\"ph4\">`null`</ph>.","source":"One or more of <code>unknownTypeNamespace</code>, <code>unknownTypeName</code>, or <code>schemaContext</code> are `null`."}],"pos":[16576,16698],"yaml":true},{"content":"Gets a read-only collection of the types that are usable as the <xref href=\"System.Xaml.XamlType.ContentProperty\"></xref> value for this <xref href=\"System.Xaml.XamlType\"></xref>.","nodes":[{"pos":[0,179],"content":"Gets a read-only collection of the types that are usable as the <ph id=\"ph1\">&lt;xref href=\"System.Xaml.XamlType.ContentProperty\"&gt;&lt;/xref&gt;</ph> value for this <ph id=\"ph2\">&lt;xref href=\"System.Xaml.XamlType\"&gt;&lt;/xref&gt;</ph>.","source":"Gets a read-only collection of the types that are usable as the <xref href=\"System.Xaml.XamlType.ContentProperty\"></xref> value for this <xref href=\"System.Xaml.XamlType\"></xref>."}],"pos":[17552,17732],"yaml":true},{"content":"Types that are assignable a specific content type (for example, assignable to a base type that is an allowed content type) are not considered multiple types for purposes of <xref:System.Xaml.XamlType.AllowedContentTypes%2A>.  \n  \n If you do not use the default internal CLR reflection technique for a <xref:System.Xaml.XamlType>, calls to this property can invoke <xref:System.Xaml.XamlType.LookupAllowedContentTypes%2A> overrides on <xref:System.Xaml.XamlType> derived classes.","nodes":[{"pos":[0,224],"content":"Types that are assignable a specific content type (for example, assignable to a base type that is an allowed content type) are not considered multiple types for purposes of <xref:System.Xaml.XamlType.AllowedContentTypes%2A>.","nodes":[{"content":"Types that are assignable a specific content type (for example, assignable to a base type that is an allowed content type) are not considered multiple types for purposes of <ph id=\"ph1\">&lt;xref:System.Xaml.XamlType.AllowedContentTypes%2A&gt;</ph>.","pos":[0,224],"source":"Types that are assignable a specific content type (for example, assignable to a base type that is an allowed content type) are not considered multiple types for purposes of <xref:System.Xaml.XamlType.AllowedContentTypes%2A>."}]},{"pos":[231,478],"content":"If you do not use the default internal CLR reflection technique for a <xref:System.Xaml.XamlType>, calls to this property can invoke <xref:System.Xaml.XamlType.LookupAllowedContentTypes%2A> overrides on <xref:System.Xaml.XamlType> derived classes.","nodes":[{"content":"If you do not use the default internal CLR reflection technique for a <ph id=\"ph1\">&lt;xref:System.Xaml.XamlType&gt;</ph>, calls to this property can invoke <ph id=\"ph2\">&lt;xref:System.Xaml.XamlType.LookupAllowedContentTypes%2A&gt;</ph> overrides on <ph id=\"ph3\">&lt;xref:System.Xaml.XamlType&gt;</ph> derived classes.","pos":[0,247],"source":"If you do not use the default internal CLR reflection technique for a <xref:System.Xaml.XamlType>, calls to this property can invoke <xref:System.Xaml.XamlType.LookupAllowedContentTypes%2A> overrides on <xref:System.Xaml.XamlType> derived classes."}]}],"pos":[17743,18226],"yaml":true,"extradata":"MT"},{"content":"A read-only collection of possible content types.","nodes":[{"pos":[0,49],"content":"A read-only collection of possible content types.","nodes":[{"content":"A read-only collection of possible content types.","pos":[0,49]}]}],"pos":[18438,18488],"yaml":true},{"content":"Gets the <xref href=\"System.Xaml.XamlType\"></xref> for the immediate base type of this XAML type. Determination of this value is based on the underlying type of this <xref href=\"System.Xaml.XamlType\"></xref> and schema context.","nodes":[{"pos":[0,227],"content":"Gets the <xref href=\"System.Xaml.XamlType\"></xref> for the immediate base type of this XAML type. Determination of this value is based on the underlying type of this <xref href=\"System.Xaml.XamlType\"></xref> and schema context.","nodes":[{"content":"Gets the <ph id=\"ph1\">&lt;xref href=\"System.Xaml.XamlType\"&gt;&lt;/xref&gt;</ph> for the immediate base type of this XAML type.","pos":[0,97],"source":"Gets the <xref href=\"System.Xaml.XamlType\"></xref> for the immediate base type of this XAML type."},{"content":"Determination of this value is based on the underlying type of this <ph id=\"ph1\">&lt;xref href=\"System.Xaml.XamlType\"&gt;&lt;/xref&gt;</ph> and schema context.","pos":[98,227],"source":" Determination of this value is based on the underlying type of this <xref href=\"System.Xaml.XamlType\"></xref> and schema context."}]}],"pos":[19347,19575],"yaml":true},{"content":"If you do not use the default internal CLR reflection technique for a <xref:System.Xaml.XamlType>, calls to this property can invoke <xref:System.Xaml.XamlType.LookupBaseType%2A> overrides on <xref:System.Xaml.XamlType> derived classes. For more information about return values and other behavior, see the documentation for <xref:System.Xaml.XamlType.LookupBaseType%2A> on this type. By default, <xref:System.Xaml.XamlType.BaseType%2A> returns an internal constant that represents an <xref:System.Object> if <xref:System.Xaml.XamlType.UnderlyingType%2A> is `null`.  \n  \n> [!IMPORTANT]\n>  <xref:System.Xaml.XamlType.LookupBaseType%2A> is virtual, and therefore, can be overridden. The override has the potential (whether for malicious purposes or otherwise) to change the reported type information about a XAML type so that it no longer aligns in an expected way with the type system information of its underlying CLR type. For any security-critical checks of assignment operations and access, use the underlying CLR type instead.","nodes":[{"pos":[0,564],"content":"If you do not use the default internal CLR reflection technique for a <xref:System.Xaml.XamlType>, calls to this property can invoke <xref:System.Xaml.XamlType.LookupBaseType%2A> overrides on <xref:System.Xaml.XamlType> derived classes. For more information about return values and other behavior, see the documentation for <xref:System.Xaml.XamlType.LookupBaseType%2A> on this type. By default, <xref:System.Xaml.XamlType.BaseType%2A> returns an internal constant that represents an <xref:System.Object> if <xref:System.Xaml.XamlType.UnderlyingType%2A> is `null`.","nodes":[{"content":"If you do not use the default internal CLR reflection technique for a <ph id=\"ph1\">&lt;xref:System.Xaml.XamlType&gt;</ph>, calls to this property can invoke <ph id=\"ph2\">&lt;xref:System.Xaml.XamlType.LookupBaseType%2A&gt;</ph> overrides on <ph id=\"ph3\">&lt;xref:System.Xaml.XamlType&gt;</ph> derived classes.","pos":[0,236],"source":"If you do not use the default internal CLR reflection technique for a <xref:System.Xaml.XamlType>, calls to this property can invoke <xref:System.Xaml.XamlType.LookupBaseType%2A> overrides on <xref:System.Xaml.XamlType> derived classes."},{"content":"For more information about return values and other behavior, see the documentation for <ph id=\"ph1\">&lt;xref:System.Xaml.XamlType.LookupBaseType%2A&gt;</ph> on this type.","pos":[237,383],"source":" For more information about return values and other behavior, see the documentation for <xref:System.Xaml.XamlType.LookupBaseType%2A> on this type."},{"content":"By default, <ph id=\"ph1\">&lt;xref:System.Xaml.XamlType.BaseType%2A&gt;</ph> returns an internal constant that represents an <ph id=\"ph2\">&lt;xref:System.Object&gt;</ph> if <ph id=\"ph3\">&lt;xref:System.Xaml.XamlType.UnderlyingType%2A&gt;</ph> is <ph id=\"ph4\">`null`</ph>.","pos":[384,564],"source":" By default, <xref:System.Xaml.XamlType.BaseType%2A> returns an internal constant that represents an <xref:System.Object> if <xref:System.Xaml.XamlType.UnderlyingType%2A> is `null`."}]},{"pos":[572,1029],"content":"[!IMPORTANT]\n <xref:System.Xaml.XamlType.LookupBaseType%2A> is virtual, and therefore, can be overridden. The override has the potential (whether for malicious purposes or otherwise) to change the reported type information about a XAML type so that it no longer aligns in an expected way with the type system information of its underlying CLR type. For any security-critical checks of assignment operations and access, use the underlying CLR type instead.","leadings":["","> "],"nodes":[{"content":" <xref:System.Xaml.XamlType.LookupBaseType%2A> is virtual, and therefore, can be overridden. The override has the potential (whether for malicious purposes or otherwise) to change the reported type information about a XAML type so that it no longer aligns in an expected way with the type system information of its underlying CLR type. For any security-critical checks of assignment operations and access, use the underlying CLR type instead.","pos":[13,455],"nodes":[{"content":"<ph id=\"ph1\">&lt;xref:System.Xaml.XamlType.LookupBaseType%2A&gt;</ph> is virtual, and therefore, can be overridden.","pos":[1,92],"source":" <xref:System.Xaml.XamlType.LookupBaseType%2A> is virtual, and therefore, can be overridden."},{"content":"The override has the potential (whether for malicious purposes or otherwise) to change the reported type information about a XAML type so that it no longer aligns in an expected way with the type system information of its underlying CLR type.","pos":[93,335]},{"content":"For any security-critical checks of assignment operations and access, use the underlying CLR type instead.","pos":[336,442]}]}]}],"pos":[19586,20621],"yaml":true,"extradata":"MT"},{"content":"The <xref href=\"System.Xaml.XamlType\"></xref> for the immediate base type of this XAML type.","nodes":[{"pos":[0,92],"content":"The <ph id=\"ph1\">&lt;xref href=\"System.Xaml.XamlType\"&gt;&lt;/xref&gt;</ph> for the immediate base type of this XAML type.","source":"The <xref href=\"System.Xaml.XamlType\"></xref> for the immediate base type of this XAML type."}],"pos":[20754,20847],"yaml":true},{"content":"Returns a value that indicates whether an instance of this <xref href=\"System.Xaml.XamlType\"></xref> has the specified <xref href=\"System.Xaml.XamlType\"></xref> in its list of assignable types.","nodes":[{"pos":[0,193],"content":"Returns a value that indicates whether an instance of this <ph id=\"ph1\">&lt;xref href=\"System.Xaml.XamlType\"&gt;&lt;/xref&gt;</ph> has the specified <ph id=\"ph2\">&lt;xref href=\"System.Xaml.XamlType\"&gt;&lt;/xref&gt;</ph> in its list of assignable types.","source":"Returns a value that indicates whether an instance of this <xref href=\"System.Xaml.XamlType\"></xref> has the specified <xref href=\"System.Xaml.XamlType\"></xref> in its list of assignable types."}],"pos":[21807,22001],"yaml":true},{"content":"Although the assignable type does not have all the capabilities of the reference type, you can use it for assignment. For example, you can use assignment to make type matches for the values of a property. The concept of assignable types in XAML is similar to the concept of casting up in the CLR type system. For example, under a CLR type system, every type has an <xref:System.Object> in its assignable type list.  \n  \n If one of the two <xref:System.Xaml.XamlType> instances that are used for comparison has <xref:System.Xaml.XamlType.IsUnknown%2A> equal to `true`, this method has a special Unknown mode that returns `true` if the two <xref:System.Xaml.XamlType> instances are equivalent.  \n  \n The default implementation uses the CLR <xref:System.Type> from <xref:System.Xaml.XamlType.UnderlyingType%2A> for this <xref:System.Xaml.XamlType> and the input <xref:System.Xaml.XamlType>, and calls <xref:System.Type.IsAssignableFrom%2A>. Override this method if you want a different determination of assignable types.  \n  \n Passing a null `xamlType` does not throw an exception and always returns `false`.  \n  \n> [!IMPORTANT]\n>  <xref:System.Xaml.XamlType.CanAssignTo%2A> is virtual, and therefore, can be overridden. The override has the potential (whether for malicious purposes or otherwise) to change the assignability of a XAML type so that it no longer aligns in an expected way with the type-casting behavior of its underlying CLR type. For any security-critical checks of assignment operations and access, use the underlying CLR type instead.","nodes":[{"pos":[0,414],"content":"Although the assignable type does not have all the capabilities of the reference type, you can use it for assignment. For example, you can use assignment to make type matches for the values of a property. The concept of assignable types in XAML is similar to the concept of casting up in the CLR type system. For example, under a CLR type system, every type has an <xref:System.Object> in its assignable type list.","nodes":[{"content":"Although the assignable type does not have all the capabilities of the reference type, you can use it for assignment. For example, you can use assignment to make type matches for the values of a property. The concept of assignable types in XAML is similar to the concept of casting up in the CLR type system. For example, under a CLR type system, every type has an <xref:System.Object> in its assignable type list.","pos":[0,414],"nodes":[{"content":"Although the assignable type does not have all the capabilities of the reference type, you can use it for assignment.","pos":[0,117]},{"content":"For example, you can use assignment to make type matches for the values of a property.","pos":[118,204]},{"content":"The concept of assignable types in XAML is similar to the concept of casting up in the CLR type system.","pos":[205,308]},{"content":"For example, under a CLR type system, every type has an <ph id=\"ph1\">&lt;xref:System.Object&gt;</ph> in its assignable type list.","pos":[309,414],"source":" For example, under a CLR type system, every type has an <xref:System.Object> in its assignable type list."}]}]},{"pos":[421,691],"content":"If one of the two <ph id=\"ph1\">&lt;xref:System.Xaml.XamlType&gt;</ph> instances that are used for comparison has <ph id=\"ph2\">&lt;xref:System.Xaml.XamlType.IsUnknown%2A&gt;</ph> equal to <ph id=\"ph3\">`true`</ph>, this method has a special Unknown mode that returns <ph id=\"ph4\">`true`</ph> if the two <ph id=\"ph5\">&lt;xref:System.Xaml.XamlType&gt;</ph> instances are equivalent.","source":"If one of the two <xref:System.Xaml.XamlType> instances that are used for comparison has <xref:System.Xaml.XamlType.IsUnknown%2A> equal to `true`, this method has a special Unknown mode that returns `true` if the two <xref:System.Xaml.XamlType> instances are equivalent."},{"pos":[698,1017],"content":"The default implementation uses the CLR <xref:System.Type> from <xref:System.Xaml.XamlType.UnderlyingType%2A> for this <xref:System.Xaml.XamlType> and the input <xref:System.Xaml.XamlType>, and calls <xref:System.Type.IsAssignableFrom%2A>. Override this method if you want a different determination of assignable types.","nodes":[{"content":"The default implementation uses the CLR <xref:System.Type> from <xref:System.Xaml.XamlType.UnderlyingType%2A> for this <xref:System.Xaml.XamlType> and the input <xref:System.Xaml.XamlType>, and calls <xref:System.Type.IsAssignableFrom%2A>. Override this method if you want a different determination of assignable types.","pos":[0,319],"nodes":[{"content":"The default implementation uses the CLR <ph id=\"ph1\">&lt;xref:System.Type&gt;</ph> from <ph id=\"ph2\">&lt;xref:System.Xaml.XamlType.UnderlyingType%2A&gt;</ph> for this <ph id=\"ph3\">&lt;xref:System.Xaml.XamlType&gt;</ph> and the input <ph id=\"ph4\">&lt;xref:System.Xaml.XamlType&gt;</ph>, and calls <ph id=\"ph5\">&lt;xref:System.Type.IsAssignableFrom%2A&gt;</ph>.","pos":[0,239],"source":"The default implementation uses the CLR <xref:System.Type> from <xref:System.Xaml.XamlType.UnderlyingType%2A> for this <xref:System.Xaml.XamlType> and the input <xref:System.Xaml.XamlType>, and calls <xref:System.Type.IsAssignableFrom%2A>."},{"content":"Override this method if you want a different determination of assignable types.","pos":[240,319]}]}]},{"pos":[1024,1105],"content":"Passing a null <ph id=\"ph1\">`xamlType`</ph> does not throw an exception and always returns <ph id=\"ph2\">`false`</ph>.","source":"Passing a null `xamlType` does not throw an exception and always returns `false`."},{"pos":[1113,1550],"content":"[!IMPORTANT]\n <xref:System.Xaml.XamlType.CanAssignTo%2A> is virtual, and therefore, can be overridden. The override has the potential (whether for malicious purposes or otherwise) to change the assignability of a XAML type so that it no longer aligns in an expected way with the type-casting behavior of its underlying CLR type. For any security-critical checks of assignment operations and access, use the underlying CLR type instead.","leadings":["","> "],"nodes":[{"content":" <xref:System.Xaml.XamlType.CanAssignTo%2A> is virtual, and therefore, can be overridden. The override has the potential (whether for malicious purposes or otherwise) to change the assignability of a XAML type so that it no longer aligns in an expected way with the type-casting behavior of its underlying CLR type. For any security-critical checks of assignment operations and access, use the underlying CLR type instead.","pos":[13,435],"nodes":[{"content":"<ph id=\"ph1\">&lt;xref:System.Xaml.XamlType.CanAssignTo%2A&gt;</ph> is virtual, and therefore, can be overridden.","pos":[1,89],"source":" <xref:System.Xaml.XamlType.CanAssignTo%2A> is virtual, and therefore, can be overridden."},{"content":"The override has the potential (whether for malicious purposes or otherwise) to change the assignability of a XAML type so that it no longer aligns in an expected way with the type-casting behavior of its underlying CLR type.","pos":[90,315]},{"content":"For any security-critical checks of assignment operations and access, use the underlying CLR type instead.","pos":[316,422]}]}]}],"pos":[22012,23574],"yaml":true,"extradata":"MT"},{"content":"The type to check against the current <xref href=\"System.Xaml.XamlType\"></xref> .","nodes":[{"pos":[0,81],"content":"The type to check against the current <ph id=\"ph1\">&lt;xref href=\"System.Xaml.XamlType\"&gt;&lt;/xref&gt;</ph> .","source":"The type to check against the current <xref href=\"System.Xaml.XamlType\"></xref> ."}],"pos":[23749,23831],"yaml":true},{"content":"`true` if <code>xamlType</code> is in the assignable types list; otherwise, `false`.","nodes":[{"pos":[0,84],"content":"<ph id=\"ph1\">`true`</ph> if <bpt id=\"p1\">&lt;code&gt;</bpt><ph id=\"ph2\">xamlType</ph><ept id=\"p1\">&lt;/code&gt;</ept> is in the assignable types list; otherwise, <ph id=\"ph3\">`false`</ph>.","source":"`true` if <code>xamlType</code> is in the assignable types list; otherwise, `false`."}],"pos":[23889,23976],"yaml":true},{"content":"Gets a value that indicates whether this <xref href=\"System.Xaml.XamlType\"></xref> must have arguments (generic constraints through `x:TypeArguments`, initialization text, or other XAML techniques) to construct a valid instance of the type.","nodes":[{"pos":[0,240],"content":"Gets a value that indicates whether this <ph id=\"ph1\">&lt;xref href=\"System.Xaml.XamlType\"&gt;&lt;/xref&gt;</ph> must have arguments (generic constraints through <ph id=\"ph2\">`x:TypeArguments`</ph>, initialization text, or other XAML techniques) to construct a valid instance of the type.","source":"Gets a value that indicates whether this <xref href=\"System.Xaml.XamlType\"></xref> must have arguments (generic constraints through `x:TypeArguments`, initialization text, or other XAML techniques) to construct a valid instance of the type."}],"pos":[24953,25194],"yaml":true},{"content":"If you do not use the default internal CLR reflection technique for a <xref:System.Xaml.XamlType>, calls to this property can invoke <xref:System.Xaml.XamlType.LookupConstructionRequiresArguments%2A> overrides on <xref:System.Xaml.XamlType> derived classes. For more information about return values and other behavior, see the documentation for <xref:System.Xaml.XamlType.LookupConstructionRequiresArguments%2A> on this type.","nodes":[{"pos":[0,425],"content":"If you do not use the default internal CLR reflection technique for a <xref:System.Xaml.XamlType>, calls to this property can invoke <xref:System.Xaml.XamlType.LookupConstructionRequiresArguments%2A> overrides on <xref:System.Xaml.XamlType> derived classes. For more information about return values and other behavior, see the documentation for <xref:System.Xaml.XamlType.LookupConstructionRequiresArguments%2A> on this type.","nodes":[{"content":"If you do not use the default internal CLR reflection technique for a <xref:System.Xaml.XamlType>, calls to this property can invoke <xref:System.Xaml.XamlType.LookupConstructionRequiresArguments%2A> overrides on <xref:System.Xaml.XamlType> derived classes. For more information about return values and other behavior, see the documentation for <xref:System.Xaml.XamlType.LookupConstructionRequiresArguments%2A> on this type.","pos":[0,425],"nodes":[{"content":"If you do not use the default internal CLR reflection technique for a <ph id=\"ph1\">&lt;xref:System.Xaml.XamlType&gt;</ph>, calls to this property can invoke <ph id=\"ph2\">&lt;xref:System.Xaml.XamlType.LookupConstructionRequiresArguments%2A&gt;</ph> overrides on <ph id=\"ph3\">&lt;xref:System.Xaml.XamlType&gt;</ph> derived classes.","pos":[0,257],"source":"If you do not use the default internal CLR reflection technique for a <xref:System.Xaml.XamlType>, calls to this property can invoke <xref:System.Xaml.XamlType.LookupConstructionRequiresArguments%2A> overrides on <xref:System.Xaml.XamlType> derived classes."},{"content":"For more information about return values and other behavior, see the documentation for <ph id=\"ph1\">&lt;xref:System.Xaml.XamlType.LookupConstructionRequiresArguments%2A&gt;</ph> on this type.","pos":[258,425],"source":" For more information about return values and other behavior, see the documentation for <xref:System.Xaml.XamlType.LookupConstructionRequiresArguments%2A> on this type."}]}]}],"pos":[25205,25631],"yaml":true,"extradata":"MT"},{"content":"`true` if construction of an instance requires some argument value; otherwise, `false`.","nodes":[{"pos":[0,87],"content":"<ph id=\"ph1\">`true`</ph> if construction of an instance requires some argument value; otherwise, <ph id=\"ph2\">`false`</ph>.","source":"`true` if construction of an instance requires some argument value; otherwise, `false`."}],"pos":[25763,25853],"yaml":true},{"content":"Gets the <xref href=\"System.Xaml.XamlMember\"></xref> information for the content property of this <xref href=\"System.Xaml.XamlType\"></xref>.","nodes":[{"pos":[0,140],"content":"Gets the <ph id=\"ph1\">&lt;xref href=\"System.Xaml.XamlMember\"&gt;&lt;/xref&gt;</ph> information for the content property of this <ph id=\"ph2\">&lt;xref href=\"System.Xaml.XamlType\"&gt;&lt;/xref&gt;</ph>.","source":"Gets the <xref href=\"System.Xaml.XamlMember\"></xref> information for the content property of this <xref href=\"System.Xaml.XamlType\"></xref>."}],"pos":[26764,26905],"yaml":true},{"content":"When using the binding or backing of the CLR type system, the XAML content property can be specified on a type by applying <xref:System.Windows.Markup.ContentPropertyAttribute> to the type definition.  \n  \n This property aligns to the `[content property]` information item in the [MS-XAML] specification.  \n  \n If you do not use the default internal CLR reflection technique for a <xref:System.Xaml.XamlType>, calls to this property can invoke <xref:System.Xaml.XamlType.LookupContentProperty%2A> overrides on <xref:System.Xaml.XamlType> derived classes. For more information about return values and other behavior, see the documentation for <xref:System.Xaml.XamlType.LookupContentProperty%2A> on this type.","nodes":[{"pos":[0,200],"content":"When using the binding or backing of the CLR type system, the XAML content property can be specified on a type by applying <xref:System.Windows.Markup.ContentPropertyAttribute> to the type definition.","nodes":[{"content":"When using the binding or backing of the CLR type system, the XAML content property can be specified on a type by applying <ph id=\"ph1\">&lt;xref:System.Windows.Markup.ContentPropertyAttribute&gt;</ph> to the type definition.","pos":[0,200],"source":"When using the binding or backing of the CLR type system, the XAML content property can be specified on a type by applying <xref:System.Windows.Markup.ContentPropertyAttribute> to the type definition."}]},{"pos":[207,304],"content":"This property aligns to the <ph id=\"ph1\">`[content property]`</ph> information item in the [MS-XAML] specification.","source":"This property aligns to the `[content property]` information item in the [MS-XAML] specification."},{"pos":[311,708],"content":"If you do not use the default internal CLR reflection technique for a <xref:System.Xaml.XamlType>, calls to this property can invoke <xref:System.Xaml.XamlType.LookupContentProperty%2A> overrides on <xref:System.Xaml.XamlType> derived classes. For more information about return values and other behavior, see the documentation for <xref:System.Xaml.XamlType.LookupContentProperty%2A> on this type.","nodes":[{"content":"If you do not use the default internal CLR reflection technique for a <xref:System.Xaml.XamlType>, calls to this property can invoke <xref:System.Xaml.XamlType.LookupContentProperty%2A> overrides on <xref:System.Xaml.XamlType> derived classes. For more information about return values and other behavior, see the documentation for <xref:System.Xaml.XamlType.LookupContentProperty%2A> on this type.","pos":[0,397],"nodes":[{"content":"If you do not use the default internal CLR reflection technique for a <ph id=\"ph1\">&lt;xref:System.Xaml.XamlType&gt;</ph>, calls to this property can invoke <ph id=\"ph2\">&lt;xref:System.Xaml.XamlType.LookupContentProperty%2A&gt;</ph> overrides on <ph id=\"ph3\">&lt;xref:System.Xaml.XamlType&gt;</ph> derived classes.","pos":[0,243],"source":"If you do not use the default internal CLR reflection technique for a <xref:System.Xaml.XamlType>, calls to this property can invoke <xref:System.Xaml.XamlType.LookupContentProperty%2A> overrides on <xref:System.Xaml.XamlType> derived classes."},{"content":"For more information about return values and other behavior, see the documentation for <ph id=\"ph1\">&lt;xref:System.Xaml.XamlType.LookupContentProperty%2A&gt;</ph> on this type.","pos":[244,397],"source":" For more information about return values and other behavior, see the documentation for <xref:System.Xaml.XamlType.LookupContentProperty%2A> on this type."}]}]}],"pos":[26916,27631],"yaml":true,"extradata":"MT"},{"content":"<xref href=\"System.Xaml.XamlMember\"></xref> information for the content property of this <xref href=\"System.Xaml.XamlType\"></xref>. May be `null` if no content property exists.","nodes":[{"pos":[0,176],"content":"<xref href=\"System.Xaml.XamlMember\"></xref> information for the content property of this <xref href=\"System.Xaml.XamlType\"></xref>. May be `null` if no content property exists.","nodes":[{"content":"<ph id=\"ph1\">&lt;xref href=\"System.Xaml.XamlMember\"&gt;&lt;/xref&gt;</ph> information for the content property of this <ph id=\"ph2\">&lt;xref href=\"System.Xaml.XamlType\"&gt;&lt;/xref&gt;</ph>.","pos":[0,131],"source":"<xref href=\"System.Xaml.XamlMember\"></xref> information for the content property of this <xref href=\"System.Xaml.XamlType\"></xref>."},{"content":"May be <ph id=\"ph1\">`null`</ph> if no content property exists.","pos":[132,176],"source":" May be `null` if no content property exists."}]}],"pos":[27775,27952],"yaml":true},{"content":"Gets the types that are used to wrap content for a content property when it is not a strict type match, such as strings in a strongly typed `Collection<T>`.","nodes":[{"pos":[0,156],"content":"Gets the types that are used to wrap content for a content property when it is not a strict type match, such as strings in a strongly typed <ph id=\"ph1\">`Collection&lt;T&gt;`</ph>.","source":"Gets the types that are used to wrap content for a content property when it is not a strict type match, such as strings in a strongly typed `Collection<T>`."}],"pos":[28849,29006],"yaml":true},{"content":"If there are no wrappers to account for type match loosening, this property is `null`.  \n  \n Types that evaluate as <xref:System.Xaml.XamlType.CanAssignTo%2A> for a specific content type are not considered multiple types for purposes of <xref:System.Xaml.XamlType.ContentWrappers%2A>.  \n  \n In the CLR binding for <xref:System.Xaml> and <xref:System.Xaml.XamlType>, the XAML content wrapper type can be specified on a type as a <xref:System.Windows.Markup.ContentWrapperAttribute>.  \n  \n If you do not use the default internal CLR reflection technique for a <xref:System.Xaml.XamlType>, calls to this property can invoke <xref:System.Xaml.XamlType.LookupContentWrappers%2A> overrides on <xref:System.Xaml.XamlType> derived classes. For more information about return values and other behavior, see the documentation for <xref:System.Xaml.XamlType.LookupContentWrappers%2A> on this type.","nodes":[{"pos":[0,86],"content":"If there are no wrappers to account for type match loosening, this property is <ph id=\"ph1\">`null`</ph>.","source":"If there are no wrappers to account for type match loosening, this property is `null`."},{"pos":[93,284],"content":"Types that evaluate as <xref:System.Xaml.XamlType.CanAssignTo%2A> for a specific content type are not considered multiple types for purposes of <xref:System.Xaml.XamlType.ContentWrappers%2A>.","nodes":[{"content":"Types that evaluate as <ph id=\"ph1\">&lt;xref:System.Xaml.XamlType.CanAssignTo%2A&gt;</ph> for a specific content type are not considered multiple types for purposes of <ph id=\"ph2\">&lt;xref:System.Xaml.XamlType.ContentWrappers%2A&gt;</ph>.","pos":[0,191],"source":"Types that evaluate as <xref:System.Xaml.XamlType.CanAssignTo%2A> for a specific content type are not considered multiple types for purposes of <xref:System.Xaml.XamlType.ContentWrappers%2A>."}]},{"pos":[291,481],"content":"In the CLR binding for <xref:System.Xaml> and <xref:System.Xaml.XamlType>, the XAML content wrapper type can be specified on a type as a <xref:System.Windows.Markup.ContentWrapperAttribute>.","nodes":[{"content":"In the CLR binding for <ph id=\"ph1\">&lt;xref:System.Xaml&gt;</ph> and <ph id=\"ph2\">&lt;xref:System.Xaml.XamlType&gt;</ph>, the XAML content wrapper type can be specified on a type as a <ph id=\"ph3\">&lt;xref:System.Windows.Markup.ContentWrapperAttribute&gt;</ph>.","pos":[0,190],"source":"In the CLR binding for <xref:System.Xaml> and <xref:System.Xaml.XamlType>, the XAML content wrapper type can be specified on a type as a <xref:System.Windows.Markup.ContentWrapperAttribute>."}]},{"pos":[488,885],"content":"If you do not use the default internal CLR reflection technique for a <xref:System.Xaml.XamlType>, calls to this property can invoke <xref:System.Xaml.XamlType.LookupContentWrappers%2A> overrides on <xref:System.Xaml.XamlType> derived classes. For more information about return values and other behavior, see the documentation for <xref:System.Xaml.XamlType.LookupContentWrappers%2A> on this type.","nodes":[{"content":"If you do not use the default internal CLR reflection technique for a <xref:System.Xaml.XamlType>, calls to this property can invoke <xref:System.Xaml.XamlType.LookupContentWrappers%2A> overrides on <xref:System.Xaml.XamlType> derived classes. For more information about return values and other behavior, see the documentation for <xref:System.Xaml.XamlType.LookupContentWrappers%2A> on this type.","pos":[0,397],"nodes":[{"content":"If you do not use the default internal CLR reflection technique for a <ph id=\"ph1\">&lt;xref:System.Xaml.XamlType&gt;</ph>, calls to this property can invoke <ph id=\"ph2\">&lt;xref:System.Xaml.XamlType.LookupContentWrappers%2A&gt;</ph> overrides on <ph id=\"ph3\">&lt;xref:System.Xaml.XamlType&gt;</ph> derived classes.","pos":[0,243],"source":"If you do not use the default internal CLR reflection technique for a <xref:System.Xaml.XamlType>, calls to this property can invoke <xref:System.Xaml.XamlType.LookupContentWrappers%2A> overrides on <xref:System.Xaml.XamlType> derived classes."},{"content":"For more information about return values and other behavior, see the documentation for <ph id=\"ph1\">&lt;xref:System.Xaml.XamlType.LookupContentWrappers%2A&gt;</ph> on this type.","pos":[244,397],"source":" For more information about return values and other behavior, see the documentation for <xref:System.Xaml.XamlType.LookupContentWrappers%2A> on this type."}]}]}],"pos":[29017,29911],"yaml":true,"extradata":"MT"},{"content":"A read-only collection of possible content wrapper types; otherwise, `null`.","nodes":[{"pos":[0,76],"content":"A read-only collection of possible content wrapper types; otherwise, <ph id=\"ph1\">`null`</ph>.","source":"A read-only collection of possible content wrapper types; otherwise, `null`."}],"pos":[30119,30196],"yaml":true},{"content":"Gets the <xref href=\"System.Xaml.Schema.XamlValueConverter`1\"></xref> that represents the deferred loading conversion behavior for this type.","nodes":[{"pos":[0,141],"content":"Gets the <ph id=\"ph1\">&lt;xref href=\"System.Xaml.Schema.XamlValueConverter`1\"&gt;&lt;/xref&gt;</ph> that represents the deferred loading conversion behavior for this type.","source":"Gets the <xref href=\"System.Xaml.Schema.XamlValueConverter`1\"></xref> that represents the deferred loading conversion behavior for this type."}],"pos":[31093,31235],"yaml":true},{"content":"XAML template behavior in WPF is an example of deferred loading behavior.  \n  \n If you do not use the default internal CLR reflection technique for a <xref:System.Xaml.XamlType>, calls to this property can invoke <xref:System.Xaml.XamlType.LookupDeferringLoader%2A> overrides on <xref:System.Xaml.XamlType> derived classes. For more information about return values and other behavior, see the documentation for <xref:System.Xaml.XamlType.LookupDeferringLoader%2A> on this type.","nodes":[{"pos":[0,73],"content":"XAML template behavior in WPF is an example of deferred loading behavior.","nodes":[{"content":"XAML template behavior in WPF is an example of deferred loading behavior.","pos":[0,73]}]},{"pos":[80,477],"content":"If you do not use the default internal CLR reflection technique for a <xref:System.Xaml.XamlType>, calls to this property can invoke <xref:System.Xaml.XamlType.LookupDeferringLoader%2A> overrides on <xref:System.Xaml.XamlType> derived classes. For more information about return values and other behavior, see the documentation for <xref:System.Xaml.XamlType.LookupDeferringLoader%2A> on this type.","nodes":[{"content":"If you do not use the default internal CLR reflection technique for a <xref:System.Xaml.XamlType>, calls to this property can invoke <xref:System.Xaml.XamlType.LookupDeferringLoader%2A> overrides on <xref:System.Xaml.XamlType> derived classes. For more information about return values and other behavior, see the documentation for <xref:System.Xaml.XamlType.LookupDeferringLoader%2A> on this type.","pos":[0,397],"nodes":[{"content":"If you do not use the default internal CLR reflection technique for a <ph id=\"ph1\">&lt;xref:System.Xaml.XamlType&gt;</ph>, calls to this property can invoke <ph id=\"ph2\">&lt;xref:System.Xaml.XamlType.LookupDeferringLoader%2A&gt;</ph> overrides on <ph id=\"ph3\">&lt;xref:System.Xaml.XamlType&gt;</ph> derived classes.","pos":[0,243],"source":"If you do not use the default internal CLR reflection technique for a <xref:System.Xaml.XamlType>, calls to this property can invoke <xref:System.Xaml.XamlType.LookupDeferringLoader%2A> overrides on <xref:System.Xaml.XamlType> derived classes."},{"content":"For more information about return values and other behavior, see the documentation for <ph id=\"ph1\">&lt;xref:System.Xaml.XamlType.LookupDeferringLoader%2A&gt;</ph> on this type.","pos":[244,397],"source":" For more information about return values and other behavior, see the documentation for <xref:System.Xaml.XamlType.LookupDeferringLoader%2A> on this type."}]}]}],"pos":[31246,31728],"yaml":true,"extradata":"MT"},{"content":"The <xref href=\"System.Xaml.Schema.XamlValueConverter`1\"></xref> with <xref href=\"System.Xaml.XamlDeferringLoader\"></xref> constraint that represents the deferred loading behavior for this type.","nodes":[{"pos":[0,194],"content":"The <ph id=\"ph1\">&lt;xref href=\"System.Xaml.Schema.XamlValueConverter`1\"&gt;&lt;/xref&gt;</ph> with <ph id=\"ph2\">&lt;xref href=\"System.Xaml.XamlDeferringLoader\"&gt;&lt;/xref&gt;</ph> constraint that represents the deferred loading behavior for this type.","source":"The <xref href=\"System.Xaml.Schema.XamlValueConverter`1\"></xref> with <xref href=\"System.Xaml.XamlDeferringLoader\"></xref> constraint that represents the deferred loading behavior for this type."}],"pos":[31968,32163],"yaml":true},{"content":"Indicates whether the current object is equal to another object.","nodes":[{"pos":[0,64],"content":"Indicates whether the current object is equal to another object.","nodes":[{"content":"Indicates whether the current object is equal to another object.","pos":[0,64]}]}],"pos":[33073,33138],"yaml":true},{"content":"The object to compare with this object.","nodes":[{"pos":[0,39],"content":"The object to compare with this object.","nodes":[{"content":"The object to compare with this object.","pos":[0,39]}]}],"pos":[33278,33318],"yaml":true},{"content":"`true` if the current object is equal to the <code>obj</code> parameter; otherwise, `false`.","nodes":[{"pos":[0,92],"content":"<ph id=\"ph1\">`true`</ph> if the current object is equal to the <bpt id=\"p1\">&lt;code&gt;</bpt><ph id=\"ph2\">obj</ph><ept id=\"p1\">&lt;/code&gt;</ept> parameter; otherwise, <ph id=\"ph3\">`false`</ph>.","source":"`true` if the current object is equal to the <code>obj</code> parameter; otherwise, `false`."}],"pos":[33376,33471],"yaml":true},{"content":"Indicates whether the current object is equal to another object of the same type.","nodes":[{"pos":[0,81],"content":"Indicates whether the current object is equal to another object of the same type.","nodes":[{"content":"Indicates whether the current object is equal to another object of the same type.","pos":[0,81]}]}],"pos":[34399,34481],"yaml":true},{"content":"An object to compare with this object.","nodes":[{"pos":[0,38],"content":"An object to compare with this object.","nodes":[{"content":"An object to compare with this object.","pos":[0,38]}]}],"pos":[34637,34676],"yaml":true},{"content":"`true` if the current object is equal to the <code>other</code> parameter; otherwise, `false`.","nodes":[{"pos":[0,94],"content":"<ph id=\"ph1\">`true`</ph> if the current object is equal to the <bpt id=\"p1\">&lt;code&gt;</bpt><ph id=\"ph2\">other</ph><ept id=\"p1\">&lt;/code&gt;</ept> parameter; otherwise, <ph id=\"ph3\">`false`</ph>.","source":"`true` if the current object is equal to the <code>other</code> parameter; otherwise, `false`."}],"pos":[34734,34831],"yaml":true},{"content":"Returns the XAML member that is aliased to a XAML directive by this <xref href=\"System.Xaml.XamlType\"></xref>.","nodes":[{"pos":[0,110],"content":"Returns the XAML member that is aliased to a XAML directive by this <ph id=\"ph1\">&lt;xref href=\"System.Xaml.XamlType\"&gt;&lt;/xref&gt;</ph>.","source":"Returns the XAML member that is aliased to a XAML directive by this <xref href=\"System.Xaml.XamlType\"></xref>."}],"pos":[35861,35972],"yaml":true},{"content":"If you do not use the default internal CLR reflection technique for a <xref:System.Xaml.XamlType>, calls to this method can invoke <xref:System.Xaml.XamlType.LookupAliasedProperty%2A> overrides on <xref:System.Xaml.XamlType> derived classes. For more information about return values and other behavior, see the documentation for <xref:System.Xaml.XamlType.LookupAliasedProperty%2A> on this type.","nodes":[{"pos":[0,395],"content":"If you do not use the default internal CLR reflection technique for a <xref:System.Xaml.XamlType>, calls to this method can invoke <xref:System.Xaml.XamlType.LookupAliasedProperty%2A> overrides on <xref:System.Xaml.XamlType> derived classes. For more information about return values and other behavior, see the documentation for <xref:System.Xaml.XamlType.LookupAliasedProperty%2A> on this type.","nodes":[{"content":"If you do not use the default internal CLR reflection technique for a <xref:System.Xaml.XamlType>, calls to this method can invoke <xref:System.Xaml.XamlType.LookupAliasedProperty%2A> overrides on <xref:System.Xaml.XamlType> derived classes. For more information about return values and other behavior, see the documentation for <xref:System.Xaml.XamlType.LookupAliasedProperty%2A> on this type.","pos":[0,395],"nodes":[{"content":"If you do not use the default internal CLR reflection technique for a <ph id=\"ph1\">&lt;xref:System.Xaml.XamlType&gt;</ph>, calls to this method can invoke <ph id=\"ph2\">&lt;xref:System.Xaml.XamlType.LookupAliasedProperty%2A&gt;</ph> overrides on <ph id=\"ph3\">&lt;xref:System.Xaml.XamlType&gt;</ph> derived classes.","pos":[0,241],"source":"If you do not use the default internal CLR reflection technique for a <xref:System.Xaml.XamlType>, calls to this method can invoke <xref:System.Xaml.XamlType.LookupAliasedProperty%2A> overrides on <xref:System.Xaml.XamlType> derived classes."},{"content":"For more information about return values and other behavior, see the documentation for <ph id=\"ph1\">&lt;xref:System.Xaml.XamlType.LookupAliasedProperty%2A&gt;</ph> on this type.","pos":[242,395],"source":" For more information about return values and other behavior, see the documentation for <xref:System.Xaml.XamlType.LookupAliasedProperty%2A> on this type."}]}]}],"pos":[35983,36379],"yaml":true,"extradata":"MT"},{"content":"The directive for which to find the aliased member.","nodes":[{"pos":[0,51],"content":"The directive for which to find the aliased member.","nodes":[{"content":"The directive for which to find the aliased member.","pos":[0,51]}]}],"pos":[36583,36635],"yaml":true},{"content":"The aliased member, if found; otherwise, `null`.","nodes":[{"pos":[0,48],"content":"The aliased member, if found; otherwise, <ph id=\"ph1\">`null`</ph>.","source":"The aliased member, if found; otherwise, `null`."}],"pos":[36701,36750],"yaml":true},{"content":"Returns a collection that contains all the attachable properties that are exposed by this <xref href=\"System.Xaml.XamlType\"></xref>.","nodes":[{"pos":[0,132],"content":"Returns a collection that contains all the attachable properties that are exposed by this <ph id=\"ph1\">&lt;xref href=\"System.Xaml.XamlType\"&gt;&lt;/xref&gt;</ph>.","source":"Returns a collection that contains all the attachable properties that are exposed by this <xref href=\"System.Xaml.XamlType\"></xref>."}],"pos":[37702,37835],"yaml":true},{"content":"Each <xref:System.Xaml.XamlMember> in the returned collection should contain values that support the concept that the <xref:System.Xaml.XamlMember> is an attachable member. For example, members should return `true` for <xref:System.Xaml.XamlMember.IsAttachable%2A>, a type for <xref:System.Xaml.XamlMember.TargetType%2A>, and so on.  \n  \n If you do not use the default internal CLR reflection technique for a <xref:System.Xaml.XamlType>, calls to this method can invoke <xref:System.Xaml.XamlType.LookupAllAttachableMembers%2A> overrides on <xref:System.Xaml.XamlType> derived classes. For more information about return values and other behavior, see the documentation for <xref:System.Xaml.XamlType.LookupAllAttachableMembers%2A> on this type.","nodes":[{"pos":[0,332],"content":"Each <xref:System.Xaml.XamlMember> in the returned collection should contain values that support the concept that the <xref:System.Xaml.XamlMember> is an attachable member. For example, members should return `true` for <xref:System.Xaml.XamlMember.IsAttachable%2A>, a type for <xref:System.Xaml.XamlMember.TargetType%2A>, and so on.","nodes":[{"content":"Each <ph id=\"ph1\">&lt;xref:System.Xaml.XamlMember&gt;</ph> in the returned collection should contain values that support the concept that the <ph id=\"ph2\">&lt;xref:System.Xaml.XamlMember&gt;</ph> is an attachable member.","pos":[0,172],"source":"Each <xref:System.Xaml.XamlMember> in the returned collection should contain values that support the concept that the <xref:System.Xaml.XamlMember> is an attachable member."},{"content":"For example, members should return <ph id=\"ph1\">`true`</ph> for <ph id=\"ph2\">&lt;xref:System.Xaml.XamlMember.IsAttachable%2A&gt;</ph>, a type for <ph id=\"ph3\">&lt;xref:System.Xaml.XamlMember.TargetType%2A&gt;</ph>, and so on.","pos":[173,332],"source":" For example, members should return `true` for <xref:System.Xaml.XamlMember.IsAttachable%2A>, a type for <xref:System.Xaml.XamlMember.TargetType%2A>, and so on."}]},{"pos":[339,744],"content":"If you do not use the default internal CLR reflection technique for a <xref:System.Xaml.XamlType>, calls to this method can invoke <xref:System.Xaml.XamlType.LookupAllAttachableMembers%2A> overrides on <xref:System.Xaml.XamlType> derived classes. For more information about return values and other behavior, see the documentation for <xref:System.Xaml.XamlType.LookupAllAttachableMembers%2A> on this type.","nodes":[{"content":"If you do not use the default internal CLR reflection technique for a <xref:System.Xaml.XamlType>, calls to this method can invoke <xref:System.Xaml.XamlType.LookupAllAttachableMembers%2A> overrides on <xref:System.Xaml.XamlType> derived classes. For more information about return values and other behavior, see the documentation for <xref:System.Xaml.XamlType.LookupAllAttachableMembers%2A> on this type.","pos":[0,405],"nodes":[{"content":"If you do not use the default internal CLR reflection technique for a <ph id=\"ph1\">&lt;xref:System.Xaml.XamlType&gt;</ph>, calls to this method can invoke <ph id=\"ph2\">&lt;xref:System.Xaml.XamlType.LookupAllAttachableMembers%2A&gt;</ph> overrides on <ph id=\"ph3\">&lt;xref:System.Xaml.XamlType&gt;</ph> derived classes.","pos":[0,246],"source":"If you do not use the default internal CLR reflection technique for a <xref:System.Xaml.XamlType>, calls to this method can invoke <xref:System.Xaml.XamlType.LookupAllAttachableMembers%2A> overrides on <xref:System.Xaml.XamlType> derived classes."},{"content":"For more information about return values and other behavior, see the documentation for <ph id=\"ph1\">&lt;xref:System.Xaml.XamlType.LookupAllAttachableMembers%2A&gt;</ph> on this type.","pos":[247,405],"source":" For more information about return values and other behavior, see the documentation for <xref:System.Xaml.XamlType.LookupAllAttachableMembers%2A> on this type."}]}]}],"pos":[37846,38595],"yaml":true,"extradata":"MT"},{"content":"A collection that contains zero or more <xref href=\"System.Xaml.XamlMember\"></xref> values.","nodes":[{"pos":[0,91],"content":"A collection that contains zero or more <ph id=\"ph1\">&lt;xref href=\"System.Xaml.XamlMember\"&gt;&lt;/xref&gt;</ph> values.","source":"A collection that contains zero or more <xref href=\"System.Xaml.XamlMember\"></xref> values."}],"pos":[38841,38933],"yaml":true},{"content":"Returns a collection that contains all the members that are exposed by this <xref href=\"System.Xaml.XamlType\"></xref>.","nodes":[{"pos":[0,118],"content":"Returns a collection that contains all the members that are exposed by this <ph id=\"ph1\">&lt;xref href=\"System.Xaml.XamlType\"&gt;&lt;/xref&gt;</ph>.","source":"Returns a collection that contains all the members that are exposed by this <xref href=\"System.Xaml.XamlType\"></xref>."}],"pos":[39830,39949],"yaml":true},{"content":"Calls to this method can invoke <xref:System.Xaml.XamlType.LookupAllMembers%2A> overrides on <xref:System.Xaml.XamlType> derived classes.","nodes":[{"pos":[0,137],"content":"Calls to this method can invoke <xref:System.Xaml.XamlType.LookupAllMembers%2A> overrides on <xref:System.Xaml.XamlType> derived classes.","nodes":[{"content":"Calls to this method can invoke <ph id=\"ph1\">&lt;xref:System.Xaml.XamlType.LookupAllMembers%2A&gt;</ph> overrides on <ph id=\"ph2\">&lt;xref:System.Xaml.XamlType&gt;</ph> derived classes.","pos":[0,137],"source":"Calls to this method can invoke <xref:System.Xaml.XamlType.LookupAllMembers%2A> overrides on <xref:System.Xaml.XamlType> derived classes."}]}],"pos":[39960,40098],"yaml":true,"extradata":"MT"},{"content":"A collection that contains zero or more <xref href=\"System.Xaml.XamlMember\"></xref> values.","nodes":[{"pos":[0,91],"content":"A collection that contains zero or more <ph id=\"ph1\">&lt;xref href=\"System.Xaml.XamlMember\"&gt;&lt;/xref&gt;</ph> values.","source":"A collection that contains zero or more <xref href=\"System.Xaml.XamlMember\"></xref> values."}],"pos":[40334,40426],"yaml":true},{"content":"Returns a <xref href=\"System.Xaml.XamlMember\"></xref> representing a specific named attachable member of this <xref href=\"System.Xaml.XamlType\"></xref>.","nodes":[{"pos":[0,152],"content":"Returns a <ph id=\"ph1\">&lt;xref href=\"System.Xaml.XamlMember\"&gt;&lt;/xref&gt;</ph> representing a specific named attachable member of this <ph id=\"ph2\">&lt;xref href=\"System.Xaml.XamlType\"&gt;&lt;/xref&gt;</ph>.","source":"Returns a <xref href=\"System.Xaml.XamlMember\"></xref> representing a specific named attachable member of this <xref href=\"System.Xaml.XamlType\"></xref>."}],"pos":[41412,41565],"yaml":true},{"content":"Calls to this method can invoke <xref:System.Xaml.XamlType.LookupAttachableMember%2A> overrides on <xref:System.Xaml.XamlType> derived classes.  \n  \n> [!IMPORTANT]\n>  <xref:System.Xaml.XamlType.LookupAttachableMember%2A> is virtual, and therefore, can be overridden. The override has the potential (whether for malicious purposes or otherwise) to change the reported members of a XAML type so that they no longer align in an expected way with the <xref:System.ComponentModel.TypeDescriptor> `Get*` information about the underlying CLR type. For any security-critical checks of member reporting, use the underlying CLR type instead.","nodes":[{"pos":[0,143],"content":"Calls to this method can invoke <xref:System.Xaml.XamlType.LookupAttachableMember%2A> overrides on <xref:System.Xaml.XamlType> derived classes.","nodes":[{"content":"Calls to this method can invoke <ph id=\"ph1\">&lt;xref:System.Xaml.XamlType.LookupAttachableMember%2A&gt;</ph> overrides on <ph id=\"ph2\">&lt;xref:System.Xaml.XamlType&gt;</ph> derived classes.","pos":[0,143],"source":"Calls to this method can invoke <xref:System.Xaml.XamlType.LookupAttachableMember%2A> overrides on <xref:System.Xaml.XamlType> derived classes."}]},{"pos":[151,631],"content":"[!IMPORTANT]\n <xref:System.Xaml.XamlType.LookupAttachableMember%2A> is virtual, and therefore, can be overridden. The override has the potential (whether for malicious purposes or otherwise) to change the reported members of a XAML type so that they no longer align in an expected way with the <xref:System.ComponentModel.TypeDescriptor> `Get*` information about the underlying CLR type. For any security-critical checks of member reporting, use the underlying CLR type instead.","leadings":["","> "],"nodes":[{"content":" <xref:System.Xaml.XamlType.LookupAttachableMember%2A> is virtual, and therefore, can be overridden. The override has the potential (whether for malicious purposes or otherwise) to change the reported members of a XAML type so that they no longer align in an expected way with the <xref:System.ComponentModel.TypeDescriptor> `Get*` information about the underlying CLR type. For any security-critical checks of member reporting, use the underlying CLR type instead.","pos":[13,478],"nodes":[{"content":"<ph id=\"ph1\">&lt;xref:System.Xaml.XamlType.LookupAttachableMember%2A&gt;</ph> is virtual, and therefore, can be overridden.","pos":[1,100],"source":" <xref:System.Xaml.XamlType.LookupAttachableMember%2A> is virtual, and therefore, can be overridden."},{"content":"The override has the potential (whether for malicious purposes or otherwise) to change the reported members of a XAML type so that they no longer align in an expected way with the <ph id=\"ph1\">&lt;xref:System.ComponentModel.TypeDescriptor&gt;</ph> <ph id=\"ph2\">`Get*`</ph> information about the underlying CLR type.","pos":[101,374],"source":" The override has the potential (whether for malicious purposes or otherwise) to change the reported members of a XAML type so that they no longer align in an expected way with the <xref:System.ComponentModel.TypeDescriptor> `Get*` information about the underlying CLR type."},{"content":"For any security-critical checks of member reporting, use the underlying CLR type instead.","pos":[375,465]}]}]}],"pos":[41576,42213],"yaml":true,"extradata":"MT"},{"content":"The name of the attachable member to get, in <code>ownerTypeName.MemberName</code> form.","nodes":[{"pos":[0,88],"content":"The name of the attachable member to get, in <bpt id=\"p1\">&lt;code&gt;</bpt><ph id=\"ph1\">ownerTypeName.MemberName</ph><ept id=\"p1\">&lt;/code&gt;</ept> form.","source":"The name of the attachable member to get, in <code>ownerTypeName.MemberName</code> form."}],"pos":[42377,42466],"yaml":true},{"content":"A <xref href=\"System.Xaml.XamlMember\"></xref> object for the requested attachable member; otherwise, `null`, if no attachable member by that name exists.","nodes":[{"pos":[0,153],"content":"A <ph id=\"ph1\">&lt;xref href=\"System.Xaml.XamlMember\"&gt;&lt;/xref&gt;</ph> object for the requested attachable member; otherwise, <ph id=\"ph2\">`null`</ph>, if no attachable member by that name exists.","source":"A <xref href=\"System.Xaml.XamlMember\"></xref> object for the requested attachable member; otherwise, `null`, if no attachable member by that name exists."}],"pos":[42532,42686],"yaml":true},{"content":"Returns the hash code for this object.","nodes":[{"pos":[0,38],"content":"Returns the hash code for this object.","nodes":[{"content":"Returns the hash code for this object.","pos":[0,38]}]}],"pos":[43567,43606],"yaml":true},{"content":"An integer hash code.","nodes":[{"pos":[0,21],"content":"An integer hash code.","nodes":[{"content":"An integer hash code.","pos":[0,21]}]}],"pos":[43740,43762],"yaml":true},{"content":"Returns a <xref href=\"System.Xaml.XamlMember\"></xref> for a specific named member from this <xref href=\"System.Xaml.XamlType\"></xref>.","nodes":[{"pos":[0,134],"content":"Returns a <ph id=\"ph1\">&lt;xref href=\"System.Xaml.XamlMember\"&gt;&lt;/xref&gt;</ph> for a specific named member from this <ph id=\"ph2\">&lt;xref href=\"System.Xaml.XamlType\"&gt;&lt;/xref&gt;</ph>.","source":"Returns a <xref href=\"System.Xaml.XamlMember\"></xref> for a specific named member from this <xref href=\"System.Xaml.XamlType\"></xref>."}],"pos":[44686,44821],"yaml":true},{"content":"The value for `name` is expected to be unqualified. Type-qualified names that indicate an attached member should be submitted to <xref:System.Xaml.XamlType.GetAttachableMember%2A> instead. Prefixed member names should not be used; a prefix is situational to a usage and the XAML type system cannot know the context of such a usage and how the prefix is mapped.  \n  \n Calls to this method can invoke <xref:System.Xaml.XamlType.LookupMember%2A> overrides on <xref:System.Xaml.XamlType> derived classes.  \n  \n> [!IMPORTANT]\n>  <xref:System.Xaml.XamlType.LookupMember%2A> is virtual, and therefore, can be overridden. The override has the potential (whether for malicious purposes or otherwise) to change the reported members of a XAML type so that they no longer align in an expected way with the <xref:System.ComponentModel.TypeDescriptor> `Get*` information about the underlying CLR type. For any security-critical checks of member reporting, use the underlying CLR type instead.","nodes":[{"pos":[0,360],"content":"The value for `name` is expected to be unqualified. Type-qualified names that indicate an attached member should be submitted to <xref:System.Xaml.XamlType.GetAttachableMember%2A> instead. Prefixed member names should not be used; a prefix is situational to a usage and the XAML type system cannot know the context of such a usage and how the prefix is mapped.","nodes":[{"content":"The value for <ph id=\"ph1\">`name`</ph> is expected to be unqualified.","pos":[0,51],"source":"The value for `name` is expected to be unqualified."},{"content":"Type-qualified names that indicate an attached member should be submitted to <ph id=\"ph1\">&lt;xref:System.Xaml.XamlType.GetAttachableMember%2A&gt;</ph> instead.","pos":[52,188],"source":" Type-qualified names that indicate an attached member should be submitted to <xref:System.Xaml.XamlType.GetAttachableMember%2A> instead."},{"content":"Prefixed member names should not be used; a prefix is situational to a usage and the XAML type system cannot know the context of such a usage and how the prefix is mapped.","pos":[189,360]}]},{"pos":[367,500],"content":"Calls to this method can invoke <xref:System.Xaml.XamlType.LookupMember%2A> overrides on <xref:System.Xaml.XamlType> derived classes.","nodes":[{"content":"Calls to this method can invoke <ph id=\"ph1\">&lt;xref:System.Xaml.XamlType.LookupMember%2A&gt;</ph> overrides on <ph id=\"ph2\">&lt;xref:System.Xaml.XamlType&gt;</ph> derived classes.","pos":[0,133],"source":"Calls to this method can invoke <xref:System.Xaml.XamlType.LookupMember%2A> overrides on <xref:System.Xaml.XamlType> derived classes."}]},{"pos":[508,978],"content":"[!IMPORTANT]\n <xref:System.Xaml.XamlType.LookupMember%2A> is virtual, and therefore, can be overridden. The override has the potential (whether for malicious purposes or otherwise) to change the reported members of a XAML type so that they no longer align in an expected way with the <xref:System.ComponentModel.TypeDescriptor> `Get*` information about the underlying CLR type. For any security-critical checks of member reporting, use the underlying CLR type instead.","leadings":["","> "],"nodes":[{"content":" <xref:System.Xaml.XamlType.LookupMember%2A> is virtual, and therefore, can be overridden. The override has the potential (whether for malicious purposes or otherwise) to change the reported members of a XAML type so that they no longer align in an expected way with the <xref:System.ComponentModel.TypeDescriptor> `Get*` information about the underlying CLR type. For any security-critical checks of member reporting, use the underlying CLR type instead.","pos":[13,468],"nodes":[{"content":"<ph id=\"ph1\">&lt;xref:System.Xaml.XamlType.LookupMember%2A&gt;</ph> is virtual, and therefore, can be overridden.","pos":[1,90],"source":" <xref:System.Xaml.XamlType.LookupMember%2A> is virtual, and therefore, can be overridden."},{"content":"The override has the potential (whether for malicious purposes or otherwise) to change the reported members of a XAML type so that they no longer align in an expected way with the <ph id=\"ph1\">&lt;xref:System.ComponentModel.TypeDescriptor&gt;</ph> <ph id=\"ph2\">`Get*`</ph> information about the underlying CLR type.","pos":[91,364],"source":" The override has the potential (whether for malicious purposes or otherwise) to change the reported members of a XAML type so that they no longer align in an expected way with the <xref:System.ComponentModel.TypeDescriptor> `Get*` information about the underlying CLR type."},{"content":"For any security-critical checks of member reporting, use the underlying CLR type instead.","pos":[365,455]}]}]}],"pos":[44832,45818],"yaml":true,"extradata":"MT"},{"content":"The name of the member to get (as a string).","nodes":[{"pos":[0,44],"content":"The name of the member to get (as a string).","nodes":[{"content":"The name of the member to get (as a string).","pos":[0,44]}]}],"pos":[45972,46017],"yaml":true},{"content":"The <xref href=\"System.Xaml.XamlMember\"></xref> information for the member, if such a member was found; otherwise, `null`.","nodes":[{"pos":[0,122],"content":"The <ph id=\"ph1\">&lt;xref href=\"System.Xaml.XamlMember\"&gt;&lt;/xref&gt;</ph> information for the member, if such a member was found; otherwise, <ph id=\"ph2\">`null`</ph>.","source":"The <xref href=\"System.Xaml.XamlMember\"></xref> information for the member, if such a member was found; otherwise, `null`."}],"pos":[46083,46206],"yaml":true},{"content":"For markup extension types, returns the types of the positional parameters that are supported in a specific markup extension usage for this <xref href=\"System.Xaml.XamlType\"></xref>.","nodes":[{"pos":[0,182],"content":"For markup extension types, returns the types of the positional parameters that are supported in a specific markup extension usage for this <ph id=\"ph1\">&lt;xref href=\"System.Xaml.XamlType\"&gt;&lt;/xref&gt;</ph>.","source":"For markup extension types, returns the types of the positional parameters that are supported in a specific markup extension usage for this <xref href=\"System.Xaml.XamlType\"></xref>."}],"pos":[47206,47389],"yaml":true},{"content":"This API is only relevant if this <xref:System.Xaml.XamlType> represents a markup extension (<xref:System.Xaml.XamlType.IsMarkupExtension%2A> is `true`).  \n  \n The input `parameterCount` is not for requesting the type of a specific positional parameter. It is for specifying the arity of a markup extension usage. Markup extension usage often has multiple \"signatures\" and uses different parameter arity (count) of positional parameters to differentiate. However, you can configure a schema context to allow duplicate arities and use types of the positional parameters for differentiation. For more information, see <xref:System.Xaml.XamlSchemaContext.SupportMarkupExtensionsWithDuplicateArity%2A>. For a specific arity (count), the parameter positions and types can vary. To get the positional type of a specific arity's markup extension usage, you first call <xref:System.Xaml.XamlType.GetPositionalParameters%2A> specifying the arity count. Then get the item at that position from the returned collection.  \n  \n Calls to this method can invoke <xref:System.Xaml.XamlType.LookupPositionalParameters%2A> overrides on <xref:System.Xaml.XamlType> derived classes.","nodes":[{"pos":[0,153],"content":"This API is only relevant if this <ph id=\"ph1\">&lt;xref:System.Xaml.XamlType&gt;</ph> represents a markup extension (<ph id=\"ph2\">&lt;xref:System.Xaml.XamlType.IsMarkupExtension%2A&gt;</ph> is <ph id=\"ph3\">`true`</ph>).","source":"This API is only relevant if this <xref:System.Xaml.XamlType> represents a markup extension (<xref:System.Xaml.XamlType.IsMarkupExtension%2A> is `true`)."},{"pos":[160,1008],"content":"The input `parameterCount` is not for requesting the type of a specific positional parameter. It is for specifying the arity of a markup extension usage. Markup extension usage often has multiple \"signatures\" and uses different parameter arity (count) of positional parameters to differentiate. However, you can configure a schema context to allow duplicate arities and use types of the positional parameters for differentiation. For more information, see <xref:System.Xaml.XamlSchemaContext.SupportMarkupExtensionsWithDuplicateArity%2A>. For a specific arity (count), the parameter positions and types can vary. To get the positional type of a specific arity's markup extension usage, you first call <xref:System.Xaml.XamlType.GetPositionalParameters%2A> specifying the arity count. Then get the item at that position from the returned collection.","nodes":[{"content":"The input <ph id=\"ph1\">`parameterCount`</ph> is not for requesting the type of a specific positional parameter.","pos":[0,93],"source":"The input `parameterCount` is not for requesting the type of a specific positional parameter."},{"content":"It is for specifying the arity of a markup extension usage.","pos":[94,153]},{"content":"Markup extension usage often has multiple \"signatures\" and uses different parameter arity (count) of positional parameters to differentiate.","pos":[154,294]},{"content":"However, you can configure a schema context to allow duplicate arities and use types of the positional parameters for differentiation.","pos":[295,429]},{"content":"For more information, see <ph id=\"ph1\">&lt;xref:System.Xaml.XamlSchemaContext.SupportMarkupExtensionsWithDuplicateArity%2A&gt;</ph>.","pos":[430,538],"source":" For more information, see <xref:System.Xaml.XamlSchemaContext.SupportMarkupExtensionsWithDuplicateArity%2A>."},{"content":"For a specific arity (count), the parameter positions and types can vary.","pos":[539,612]},{"content":"To get the positional type of a specific arity's markup extension usage, you first call <ph id=\"ph1\">&lt;xref:System.Xaml.XamlType.GetPositionalParameters%2A&gt;</ph> specifying the arity count.","pos":[613,783],"source":" To get the positional type of a specific arity's markup extension usage, you first call <xref:System.Xaml.XamlType.GetPositionalParameters%2A> specifying the arity count."},{"content":"Then get the item at that position from the returned collection.","pos":[784,848]}]},{"pos":[1015,1162],"content":"Calls to this method can invoke <xref:System.Xaml.XamlType.LookupPositionalParameters%2A> overrides on <xref:System.Xaml.XamlType> derived classes.","nodes":[{"content":"Calls to this method can invoke <ph id=\"ph1\">&lt;xref:System.Xaml.XamlType.LookupPositionalParameters%2A&gt;</ph> overrides on <ph id=\"ph2\">&lt;xref:System.Xaml.XamlType&gt;</ph> derived classes.","pos":[0,147],"source":"Calls to this method can invoke <xref:System.Xaml.XamlType.LookupPositionalParameters%2A> overrides on <xref:System.Xaml.XamlType> derived classes."}]}],"pos":[47400,48571],"yaml":true,"extradata":"MT"},{"content":"The count (arity) of the particular syntax or constructor mode that you want information about.","nodes":[{"pos":[0,95],"content":"The count (arity) of the particular syntax or constructor mode that you want information about.","nodes":[{"content":"The count (arity) of the particular syntax or constructor mode that you want information about.","pos":[0,95]}]}],"pos":[48787,48883],"yaml":true},{"content":"A list of <xref href=\"System.Xaml.XamlType\"></xref> values, where each <xref href=\"System.Xaml.XamlType\"></xref> is the type for that position in the syntax. You must specify the types in the same order when you supply markup input for the markup extension.","nodes":[{"pos":[0,257],"content":"A list of <xref href=\"System.Xaml.XamlType\"></xref> values, where each <xref href=\"System.Xaml.XamlType\"></xref> is the type for that position in the syntax. You must specify the types in the same order when you supply markup input for the markup extension.","nodes":[{"content":"A list of <ph id=\"ph1\">&lt;xref href=\"System.Xaml.XamlType\"&gt;&lt;/xref&gt;</ph> values, where each <ph id=\"ph2\">&lt;xref href=\"System.Xaml.XamlType\"&gt;&lt;/xref&gt;</ph> is the type for that position in the syntax.","pos":[0,157],"source":"A list of <xref href=\"System.Xaml.XamlType\"></xref> values, where each <xref href=\"System.Xaml.XamlType\"></xref> is the type for that position in the syntax."},{"content":"You must specify the types in the same order when you supply markup input for the markup extension.","pos":[158,257]}]}],"pos":[48981,49239],"yaml":true},{"content":"Returns a list of string identifiers for XAML namespaces that the type is included in.","nodes":[{"pos":[0,86],"content":"Returns a list of string identifiers for XAML namespaces that the type is included in.","nodes":[{"content":"Returns a list of string identifiers for XAML namespaces that the type is included in.","pos":[0,86]}]}],"pos":[50160,50247],"yaml":true},{"content":"Typical XAML namespace identifiers are strings in URI form.  \n  \n The default implementation checks the following, in order: the XAML namespace that is supplied in construction (<xref:System.Xaml.XamlType.%23ctor%28System.String%2CSystem.String%2CSystem.Collections.Generic.IList%7BSystem.Xaml.XamlType%7D%2CSystem.Xaml.XamlSchemaContext%29> signature only); and the namespaces that are available from the schema context. If these are each `null`, a new list is generated that contains a single empty string. You can override this method to change the lookup methodology.","nodes":[{"pos":[0,59],"content":"Typical XAML namespace identifiers are strings in URI form.","nodes":[{"content":"Typical XAML namespace identifiers are strings in URI form.","pos":[0,59]}]},{"pos":[66,571],"content":"The default implementation checks the following, in order: the XAML namespace that is supplied in construction (<xref:System.Xaml.XamlType.%23ctor%28System.String%2CSystem.String%2CSystem.Collections.Generic.IList%7BSystem.Xaml.XamlType%7D%2CSystem.Xaml.XamlSchemaContext%29> signature only); and the namespaces that are available from the schema context. If these are each `null`, a new list is generated that contains a single empty string. You can override this method to change the lookup methodology.","nodes":[{"content":"The default implementation checks the following, in order: the XAML namespace that is supplied in construction (<ph id=\"ph1\">&lt;xref:System.Xaml.XamlType.%23ctor%28System.String%2CSystem.String%2CSystem.Collections.Generic.IList%7BSystem.Xaml.XamlType%7D%2CSystem.Xaml.XamlSchemaContext%29&gt;</ph> signature only); and the namespaces that are available from the schema context.","pos":[0,355],"source":"The default implementation checks the following, in order: the XAML namespace that is supplied in construction (<xref:System.Xaml.XamlType.%23ctor%28System.String%2CSystem.String%2CSystem.Collections.Generic.IList%7BSystem.Xaml.XamlType%7D%2CSystem.Xaml.XamlSchemaContext%29> signature only); and the namespaces that are available from the schema context."},{"content":"If these are each <ph id=\"ph1\">`null`</ph>, a new list is generated that contains a single empty string.","pos":[356,442],"source":" If these are each `null`, a new list is generated that contains a single empty string."},{"content":"You can override this method to change the lookup methodology.","pos":[443,505]}]}],"pos":[50258,50834],"yaml":true,"extradata":"MT"},{"content":"A list of string values, where each string is the URI identifier for a XAML namespace.","nodes":[{"pos":[0,86],"content":"A list of string values, where each string is the URI identifier for a XAML namespace.","nodes":[{"content":"A list of string values, where each string is the URI identifier for a XAML namespace.","pos":[0,86]}]}],"pos":[51045,51132],"yaml":true},{"content":"Gets the <xref href=\"System.Xaml.Schema.XamlTypeInvoker\"></xref> implementation that is associated with this <xref href=\"System.Xaml.XamlType\"></xref>.","nodes":[{"pos":[0,151],"content":"Gets the <ph id=\"ph1\">&lt;xref href=\"System.Xaml.Schema.XamlTypeInvoker\"&gt;&lt;/xref&gt;</ph> implementation that is associated with this <ph id=\"ph2\">&lt;xref href=\"System.Xaml.XamlType\"&gt;&lt;/xref&gt;</ph>.","source":"Gets the <xref href=\"System.Xaml.Schema.XamlTypeInvoker\"></xref> implementation that is associated with this <xref href=\"System.Xaml.XamlType\"></xref>."}],"pos":[51983,52135],"yaml":true},{"content":"If you do not use the default internal CLR reflection technique for a <xref:System.Xaml.XamlType>, calling <xref:System.Xaml.XamlType.Invoker%2A> can invoke either <xref:System.Xaml.XamlType.LookupInvoker%2A> or a specific override of that method. For more information about return values and other behavior, see the documentation for <xref:System.Xaml.XamlType.LookupInvoker%2A> on this type.  \n  \n If a <xref:System.Xaml.XamlType.LookupInvoker%2A> override returns `null`, or if the default implementation returns `null` because of lack of <xref:System.Xaml.XamlType.UnderlyingType%2A> for this <xref:System.Xaml.XamlType>, then <xref:System.Xaml.XamlType.Invoker%2A> returns <xref:System.Xaml.Schema.XamlTypeInvoker.UnknownInvoker%2A?displayProperty=fullName>.","nodes":[{"pos":[0,393],"content":"If you do not use the default internal CLR reflection technique for a <xref:System.Xaml.XamlType>, calling <xref:System.Xaml.XamlType.Invoker%2A> can invoke either <xref:System.Xaml.XamlType.LookupInvoker%2A> or a specific override of that method. For more information about return values and other behavior, see the documentation for <xref:System.Xaml.XamlType.LookupInvoker%2A> on this type.","nodes":[{"content":"If you do not use the default internal CLR reflection technique for a <xref:System.Xaml.XamlType>, calling <xref:System.Xaml.XamlType.Invoker%2A> can invoke either <xref:System.Xaml.XamlType.LookupInvoker%2A> or a specific override of that method. For more information about return values and other behavior, see the documentation for <xref:System.Xaml.XamlType.LookupInvoker%2A> on this type.","pos":[0,393],"nodes":[{"content":"If you do not use the default internal CLR reflection technique for a <ph id=\"ph1\">&lt;xref:System.Xaml.XamlType&gt;</ph>, calling <ph id=\"ph2\">&lt;xref:System.Xaml.XamlType.Invoker%2A&gt;</ph> can invoke either <ph id=\"ph3\">&lt;xref:System.Xaml.XamlType.LookupInvoker%2A&gt;</ph> or a specific override of that method.","pos":[0,247],"source":"If you do not use the default internal CLR reflection technique for a <xref:System.Xaml.XamlType>, calling <xref:System.Xaml.XamlType.Invoker%2A> can invoke either <xref:System.Xaml.XamlType.LookupInvoker%2A> or a specific override of that method."},{"content":"For more information about return values and other behavior, see the documentation for <ph id=\"ph1\">&lt;xref:System.Xaml.XamlType.LookupInvoker%2A&gt;</ph> on this type.","pos":[248,393],"source":" For more information about return values and other behavior, see the documentation for <xref:System.Xaml.XamlType.LookupInvoker%2A> on this type."}]}]},{"pos":[400,763],"content":"If a <ph id=\"ph1\">&lt;xref:System.Xaml.XamlType.LookupInvoker%2A&gt;</ph> override returns <ph id=\"ph2\">`null`</ph>, or if the default implementation returns <ph id=\"ph3\">`null`</ph> because of lack of <ph id=\"ph4\">&lt;xref:System.Xaml.XamlType.UnderlyingType%2A&gt;</ph> for this <ph id=\"ph5\">&lt;xref:System.Xaml.XamlType&gt;</ph>, then <ph id=\"ph6\">&lt;xref:System.Xaml.XamlType.Invoker%2A&gt;</ph> returns <ph id=\"ph7\">&lt;xref:System.Xaml.Schema.XamlTypeInvoker.UnknownInvoker%2A?displayProperty=fullName&gt;</ph>.","source":"If a <xref:System.Xaml.XamlType.LookupInvoker%2A> override returns `null`, or if the default implementation returns `null` because of lack of <xref:System.Xaml.XamlType.UnderlyingType%2A> for this <xref:System.Xaml.XamlType>, then <xref:System.Xaml.XamlType.Invoker%2A> returns <xref:System.Xaml.Schema.XamlTypeInvoker.UnknownInvoker%2A?displayProperty=fullName>."}],"pos":[52146,52914],"yaml":true,"extradata":"MT"},{"content":"The <xref href=\"System.Xaml.Schema.XamlTypeInvoker\"></xref> implementation that is associated with this <xref href=\"System.Xaml.XamlType\"></xref>.","nodes":[{"pos":[0,146],"content":"The <ph id=\"ph1\">&lt;xref href=\"System.Xaml.Schema.XamlTypeInvoker\"&gt;&lt;/xref&gt;</ph> implementation that is associated with this <ph id=\"ph2\">&lt;xref href=\"System.Xaml.XamlType\"&gt;&lt;/xref&gt;</ph>.","source":"The <xref href=\"System.Xaml.Schema.XamlTypeInvoker\"></xref> implementation that is associated with this <xref href=\"System.Xaml.XamlType\"></xref>."}],"pos":[53074,53221],"yaml":true},{"content":"Gets a value that indicates whether this <xref href=\"System.Xaml.XamlType\"></xref> represents an ambient type, as per the XAML definition.","nodes":[{"pos":[0,138],"content":"Gets a value that indicates whether this <ph id=\"ph1\">&lt;xref href=\"System.Xaml.XamlType\"&gt;&lt;/xref&gt;</ph> represents an ambient type, as per the XAML definition.","source":"Gets a value that indicates whether this <xref href=\"System.Xaml.XamlType\"></xref> represents an ambient type, as per the XAML definition."}],"pos":[54074,54213],"yaml":true},{"content":"If you do not use the default internal CLR reflection technique for a <xref:System.Xaml.XamlType>, calls to this property can invoke <xref:System.Xaml.XamlType.LookupIsAmbient%2A> overrides on <xref:System.Xaml.XamlType> derived classes. For more information about return values and other behavior, see the documentation for <xref:System.Xaml.XamlType.LookupIsAmbient%2A> on this type.","nodes":[{"pos":[0,385],"content":"If you do not use the default internal CLR reflection technique for a <xref:System.Xaml.XamlType>, calls to this property can invoke <xref:System.Xaml.XamlType.LookupIsAmbient%2A> overrides on <xref:System.Xaml.XamlType> derived classes. For more information about return values and other behavior, see the documentation for <xref:System.Xaml.XamlType.LookupIsAmbient%2A> on this type.","nodes":[{"content":"If you do not use the default internal CLR reflection technique for a <xref:System.Xaml.XamlType>, calls to this property can invoke <xref:System.Xaml.XamlType.LookupIsAmbient%2A> overrides on <xref:System.Xaml.XamlType> derived classes. For more information about return values and other behavior, see the documentation for <xref:System.Xaml.XamlType.LookupIsAmbient%2A> on this type.","pos":[0,385],"nodes":[{"content":"If you do not use the default internal CLR reflection technique for a <ph id=\"ph1\">&lt;xref:System.Xaml.XamlType&gt;</ph>, calls to this property can invoke <ph id=\"ph2\">&lt;xref:System.Xaml.XamlType.LookupIsAmbient%2A&gt;</ph> overrides on <ph id=\"ph3\">&lt;xref:System.Xaml.XamlType&gt;</ph> derived classes.","pos":[0,237],"source":"If you do not use the default internal CLR reflection technique for a <xref:System.Xaml.XamlType>, calls to this property can invoke <xref:System.Xaml.XamlType.LookupIsAmbient%2A> overrides on <xref:System.Xaml.XamlType> derived classes."},{"content":"For more information about return values and other behavior, see the documentation for <ph id=\"ph1\">&lt;xref:System.Xaml.XamlType.LookupIsAmbient%2A&gt;</ph> on this type.","pos":[238,385],"source":" For more information about return values and other behavior, see the documentation for <xref:System.Xaml.XamlType.LookupIsAmbient%2A> on this type."}]}]}],"pos":[54224,54610],"yaml":true,"extradata":"MT"},{"content":"`true` if this <xref href=\"System.Xaml.XamlType\"></xref> represents an ambient type; otherwise, `false`.","nodes":[{"pos":[0,104],"content":"<ph id=\"ph1\">`true`</ph> if this <ph id=\"ph2\">&lt;xref href=\"System.Xaml.XamlType\"&gt;&lt;/xref&gt;</ph> represents an ambient type; otherwise, <ph id=\"ph3\">`false`</ph>.","source":"`true` if this <xref href=\"System.Xaml.XamlType\"></xref> represents an ambient type; otherwise, `false`."}],"pos":[54722,54829],"yaml":true},{"content":"Gets a value that indicates whether this <xref href=\"System.Xaml.XamlType\"></xref> represents an array.","nodes":[{"pos":[0,103],"content":"Gets a value that indicates whether this <ph id=\"ph1\">&lt;xref href=\"System.Xaml.XamlType\"&gt;&lt;/xref&gt;</ph> represents an array.","source":"Gets a value that indicates whether this <xref href=\"System.Xaml.XamlType\"></xref> represents an array."}],"pos":[55672,55776],"yaml":true},{"content":"If you do not use the default internal CLR reflection technique for a <xref:System.Xaml.XamlType>, calls to this property can invoke <xref:System.Xaml.XamlType.LookupCollectionKind%2A> overrides on <xref:System.Xaml.XamlType> derived classes. For more information about return values and other behavior, see the documentation for <xref:System.Xaml.XamlType.LookupCollectionKind%2A> on this type.","nodes":[{"pos":[0,395],"content":"If you do not use the default internal CLR reflection technique for a <xref:System.Xaml.XamlType>, calls to this property can invoke <xref:System.Xaml.XamlType.LookupCollectionKind%2A> overrides on <xref:System.Xaml.XamlType> derived classes. For more information about return values and other behavior, see the documentation for <xref:System.Xaml.XamlType.LookupCollectionKind%2A> on this type.","nodes":[{"content":"If you do not use the default internal CLR reflection technique for a <xref:System.Xaml.XamlType>, calls to this property can invoke <xref:System.Xaml.XamlType.LookupCollectionKind%2A> overrides on <xref:System.Xaml.XamlType> derived classes. For more information about return values and other behavior, see the documentation for <xref:System.Xaml.XamlType.LookupCollectionKind%2A> on this type.","pos":[0,395],"nodes":[{"content":"If you do not use the default internal CLR reflection technique for a <ph id=\"ph1\">&lt;xref:System.Xaml.XamlType&gt;</ph>, calls to this property can invoke <ph id=\"ph2\">&lt;xref:System.Xaml.XamlType.LookupCollectionKind%2A&gt;</ph> overrides on <ph id=\"ph3\">&lt;xref:System.Xaml.XamlType&gt;</ph> derived classes.","pos":[0,242],"source":"If you do not use the default internal CLR reflection technique for a <xref:System.Xaml.XamlType>, calls to this property can invoke <xref:System.Xaml.XamlType.LookupCollectionKind%2A> overrides on <xref:System.Xaml.XamlType> derived classes."},{"content":"For more information about return values and other behavior, see the documentation for <ph id=\"ph1\">&lt;xref:System.Xaml.XamlType.LookupCollectionKind%2A&gt;</ph> on this type.","pos":[243,395],"source":" For more information about return values and other behavior, see the documentation for <xref:System.Xaml.XamlType.LookupCollectionKind%2A> on this type."}]}]}],"pos":[55787,56183],"yaml":true,"extradata":"MT"},{"content":"`true` if this <xref href=\"System.Xaml.XamlType\"></xref> represents an array; otherwise, `false`.","nodes":[{"pos":[0,97],"content":"<ph id=\"ph1\">`true`</ph> if this <ph id=\"ph2\">&lt;xref href=\"System.Xaml.XamlType\"&gt;&lt;/xref&gt;</ph> represents an array; otherwise, <ph id=\"ph3\">`false`</ph>.","source":"`true` if this <xref href=\"System.Xaml.XamlType\"></xref> represents an array; otherwise, `false`."}],"pos":[56293,56393],"yaml":true},{"content":"Gets a value that indicates whether this <xref href=\"System.Xaml.XamlType\"></xref> represents a collection.","nodes":[{"pos":[0,107],"content":"Gets a value that indicates whether this <ph id=\"ph1\">&lt;xref href=\"System.Xaml.XamlType\"&gt;&lt;/xref&gt;</ph> represents a collection.","source":"Gets a value that indicates whether this <xref href=\"System.Xaml.XamlType\"></xref> represents a collection."}],"pos":[57264,57372],"yaml":true},{"content":"If you do not use the default internal CLR reflection technique for a <xref:System.Xaml.XamlType>, calls to this property can invoke <xref:System.Xaml.XamlType.LookupCollectionKind%2A> overrides on <xref:System.Xaml.XamlType> derived classes. For more information about return values and other behavior, see the documentation for <xref:System.Xaml.XamlType.LookupCollectionKind%2A> on this type.","nodes":[{"pos":[0,395],"content":"If you do not use the default internal CLR reflection technique for a <xref:System.Xaml.XamlType>, calls to this property can invoke <xref:System.Xaml.XamlType.LookupCollectionKind%2A> overrides on <xref:System.Xaml.XamlType> derived classes. For more information about return values and other behavior, see the documentation for <xref:System.Xaml.XamlType.LookupCollectionKind%2A> on this type.","nodes":[{"content":"If you do not use the default internal CLR reflection technique for a <xref:System.Xaml.XamlType>, calls to this property can invoke <xref:System.Xaml.XamlType.LookupCollectionKind%2A> overrides on <xref:System.Xaml.XamlType> derived classes. For more information about return values and other behavior, see the documentation for <xref:System.Xaml.XamlType.LookupCollectionKind%2A> on this type.","pos":[0,395],"nodes":[{"content":"If you do not use the default internal CLR reflection technique for a <ph id=\"ph1\">&lt;xref:System.Xaml.XamlType&gt;</ph>, calls to this property can invoke <ph id=\"ph2\">&lt;xref:System.Xaml.XamlType.LookupCollectionKind%2A&gt;</ph> overrides on <ph id=\"ph3\">&lt;xref:System.Xaml.XamlType&gt;</ph> derived classes.","pos":[0,242],"source":"If you do not use the default internal CLR reflection technique for a <xref:System.Xaml.XamlType>, calls to this property can invoke <xref:System.Xaml.XamlType.LookupCollectionKind%2A> overrides on <xref:System.Xaml.XamlType> derived classes."},{"content":"For more information about return values and other behavior, see the documentation for <ph id=\"ph1\">&lt;xref:System.Xaml.XamlType.LookupCollectionKind%2A&gt;</ph> on this type.","pos":[243,395],"source":" For more information about return values and other behavior, see the documentation for <xref:System.Xaml.XamlType.LookupCollectionKind%2A> on this type."}]}]}],"pos":[57383,57779],"yaml":true,"extradata":"MT"},{"content":"`true` if this <xref href=\"System.Xaml.XamlType\"></xref> represents a collection; otherwise, `false`.","nodes":[{"pos":[0,101],"content":"<ph id=\"ph1\">`true`</ph> if this <ph id=\"ph2\">&lt;xref href=\"System.Xaml.XamlType\"&gt;&lt;/xref&gt;</ph> represents a collection; otherwise, <ph id=\"ph3\">`false`</ph>.","source":"`true` if this <xref href=\"System.Xaml.XamlType\"></xref> represents a collection; otherwise, `false`."}],"pos":[57894,57998],"yaml":true},{"content":"Gets a value that indicates whether this <xref href=\"System.Xaml.XamlType\"></xref> represents a constructible type, as per the XAML definition.","nodes":[{"pos":[0,143],"content":"Gets a value that indicates whether this <ph id=\"ph1\">&lt;xref href=\"System.Xaml.XamlType\"&gt;&lt;/xref&gt;</ph> represents a constructible type, as per the XAML definition.","source":"Gets a value that indicates whether this <xref href=\"System.Xaml.XamlType\"></xref> represents a constructible type, as per the XAML definition."}],"pos":[58892,59036],"yaml":true},{"content":"This property aligns to the `[is default constructible]` information item in the [MS-XAML] specification.  \n  \n If you do not use the default internal CLR reflection technique for a <xref:System.Xaml.XamlType>, calls to this property can invoke <xref:System.Xaml.XamlType.LookupIsConstructible%2A> overrides on <xref:System.Xaml.XamlType> derived classes. For more information about return values and other behavior, see the documentation for <xref:System.Xaml.XamlType.LookupIsConstructible%2A> on this type.","nodes":[{"pos":[0,105],"content":"This property aligns to the <ph id=\"ph1\">`[is default constructible]`</ph> information item in the [MS-XAML] specification.","source":"This property aligns to the `[is default constructible]` information item in the [MS-XAML] specification."},{"pos":[112,509],"content":"If you do not use the default internal CLR reflection technique for a <xref:System.Xaml.XamlType>, calls to this property can invoke <xref:System.Xaml.XamlType.LookupIsConstructible%2A> overrides on <xref:System.Xaml.XamlType> derived classes. For more information about return values and other behavior, see the documentation for <xref:System.Xaml.XamlType.LookupIsConstructible%2A> on this type.","nodes":[{"content":"If you do not use the default internal CLR reflection technique for a <xref:System.Xaml.XamlType>, calls to this property can invoke <xref:System.Xaml.XamlType.LookupIsConstructible%2A> overrides on <xref:System.Xaml.XamlType> derived classes. For more information about return values and other behavior, see the documentation for <xref:System.Xaml.XamlType.LookupIsConstructible%2A> on this type.","pos":[0,397],"nodes":[{"content":"If you do not use the default internal CLR reflection technique for a <ph id=\"ph1\">&lt;xref:System.Xaml.XamlType&gt;</ph>, calls to this property can invoke <ph id=\"ph2\">&lt;xref:System.Xaml.XamlType.LookupIsConstructible%2A&gt;</ph> overrides on <ph id=\"ph3\">&lt;xref:System.Xaml.XamlType&gt;</ph> derived classes.","pos":[0,243],"source":"If you do not use the default internal CLR reflection technique for a <xref:System.Xaml.XamlType>, calls to this property can invoke <xref:System.Xaml.XamlType.LookupIsConstructible%2A> overrides on <xref:System.Xaml.XamlType> derived classes."},{"content":"For more information about return values and other behavior, see the documentation for <ph id=\"ph1\">&lt;xref:System.Xaml.XamlType.LookupIsConstructible%2A&gt;</ph> on this type.","pos":[244,397],"source":" For more information about return values and other behavior, see the documentation for <xref:System.Xaml.XamlType.LookupIsConstructible%2A> on this type."}]}]}],"pos":[59047,59561],"yaml":true,"extradata":"MT"},{"content":"`true` if this <xref href=\"System.Xaml.XamlType\"></xref> represents a constructible type; otherwise, `false`.","nodes":[{"pos":[0,109],"content":"<ph id=\"ph1\">`true`</ph> if this <ph id=\"ph2\">&lt;xref href=\"System.Xaml.XamlType\"&gt;&lt;/xref&gt;</ph> represents a constructible type; otherwise, <ph id=\"ph3\">`false`</ph>.","source":"`true` if this <xref href=\"System.Xaml.XamlType\"></xref> represents a constructible type; otherwise, `false`."}],"pos":[59679,59791],"yaml":true},{"content":"Gets a value that indicates whether this <xref href=\"System.Xaml.XamlType\"></xref> represents a dictionary, as per the XAML definition.","nodes":[{"pos":[0,135],"content":"Gets a value that indicates whether this <ph id=\"ph1\">&lt;xref href=\"System.Xaml.XamlType\"&gt;&lt;/xref&gt;</ph> represents a dictionary, as per the XAML definition.","source":"Gets a value that indicates whether this <xref href=\"System.Xaml.XamlType\"></xref> represents a dictionary, as per the XAML definition."}],"pos":[60670,60806],"yaml":true},{"content":"This property aligns to the `[is dictionary]` information item in the [MS-XAML] specification.  \n  \n If you do not use the default internal CLR reflection technique for a <xref:System.Xaml.XamlType>, calls to this property can invoke <xref:System.Xaml.XamlType.LookupCollectionKind%2A> overrides on <xref:System.Xaml.XamlType> derived classes. For more information about return values and other behavior, see the documentation for <xref:System.Xaml.XamlType.LookupCollectionKind%2A> on this type.","nodes":[{"pos":[0,94],"content":"This property aligns to the <ph id=\"ph1\">`[is dictionary]`</ph> information item in the [MS-XAML] specification.","source":"This property aligns to the `[is dictionary]` information item in the [MS-XAML] specification."},{"pos":[101,496],"content":"If you do not use the default internal CLR reflection technique for a <xref:System.Xaml.XamlType>, calls to this property can invoke <xref:System.Xaml.XamlType.LookupCollectionKind%2A> overrides on <xref:System.Xaml.XamlType> derived classes. For more information about return values and other behavior, see the documentation for <xref:System.Xaml.XamlType.LookupCollectionKind%2A> on this type.","nodes":[{"content":"If you do not use the default internal CLR reflection technique for a <xref:System.Xaml.XamlType>, calls to this property can invoke <xref:System.Xaml.XamlType.LookupCollectionKind%2A> overrides on <xref:System.Xaml.XamlType> derived classes. For more information about return values and other behavior, see the documentation for <xref:System.Xaml.XamlType.LookupCollectionKind%2A> on this type.","pos":[0,395],"nodes":[{"content":"If you do not use the default internal CLR reflection technique for a <ph id=\"ph1\">&lt;xref:System.Xaml.XamlType&gt;</ph>, calls to this property can invoke <ph id=\"ph2\">&lt;xref:System.Xaml.XamlType.LookupCollectionKind%2A&gt;</ph> overrides on <ph id=\"ph3\">&lt;xref:System.Xaml.XamlType&gt;</ph> derived classes.","pos":[0,242],"source":"If you do not use the default internal CLR reflection technique for a <xref:System.Xaml.XamlType>, calls to this property can invoke <xref:System.Xaml.XamlType.LookupCollectionKind%2A> overrides on <xref:System.Xaml.XamlType> derived classes."},{"content":"For more information about return values and other behavior, see the documentation for <ph id=\"ph1\">&lt;xref:System.Xaml.XamlType.LookupCollectionKind%2A&gt;</ph> on this type.","pos":[243,395],"source":" For more information about return values and other behavior, see the documentation for <xref:System.Xaml.XamlType.LookupCollectionKind%2A> on this type."}]}]}],"pos":[60817,61318],"yaml":true,"extradata":"MT"},{"content":"`true` if this <xref href=\"System.Xaml.XamlType\"></xref> represents a dictionary; otherwise, `false`.","nodes":[{"pos":[0,101],"content":"<ph id=\"ph1\">`true`</ph> if this <ph id=\"ph2\">&lt;xref href=\"System.Xaml.XamlType\"&gt;&lt;/xref&gt;</ph> represents a dictionary; otherwise, <ph id=\"ph3\">`false`</ph>.","source":"`true` if this <xref href=\"System.Xaml.XamlType\"></xref> represents a dictionary; otherwise, `false`."}],"pos":[61433,61537],"yaml":true},{"content":"Gets a value that indicates whether this <xref href=\"System.Xaml.XamlType\"></xref> represents a generic type.","nodes":[{"pos":[0,109],"content":"Gets a value that indicates whether this <ph id=\"ph1\">&lt;xref href=\"System.Xaml.XamlType\"&gt;&lt;/xref&gt;</ph> represents a generic type.","source":"Gets a value that indicates whether this <xref href=\"System.Xaml.XamlType\"></xref> represents a generic type."}],"pos":[62395,62505],"yaml":true},{"content":"This property is a helper property that checks for a null value of <xref:System.Xaml.XamlType.TypeArguments%2A>. There is no specific `Lookup` method related to <xref:System.Xaml.XamlType.IsGeneric%2A>.","nodes":[{"pos":[0,202],"content":"This property is a helper property that checks for a null value of <xref:System.Xaml.XamlType.TypeArguments%2A>. There is no specific `Lookup` method related to <xref:System.Xaml.XamlType.IsGeneric%2A>.","nodes":[{"content":"This property is a helper property that checks for a null value of <ph id=\"ph1\">&lt;xref:System.Xaml.XamlType.TypeArguments%2A&gt;</ph>.","pos":[0,112],"source":"This property is a helper property that checks for a null value of <xref:System.Xaml.XamlType.TypeArguments%2A>."},{"content":"There is no specific <ph id=\"ph1\">`Lookup`</ph> method related to <ph id=\"ph2\">&lt;xref:System.Xaml.XamlType.IsGeneric%2A&gt;</ph>.","pos":[113,202],"source":" There is no specific `Lookup` method related to <xref:System.Xaml.XamlType.IsGeneric%2A>."}]}],"pos":[62516,62719],"yaml":true,"extradata":"MT"},{"content":"`true` if this <xref href=\"System.Xaml.XamlType\"></xref> represents a generic type; otherwise, `false`.","nodes":[{"pos":[0,103],"content":"<ph id=\"ph1\">`true`</ph> if this <ph id=\"ph2\">&lt;xref href=\"System.Xaml.XamlType\"&gt;&lt;/xref&gt;</ph> represents a generic type; otherwise, <ph id=\"ph3\">`false`</ph>.","source":"`true` if this <xref href=\"System.Xaml.XamlType\"></xref> represents a generic type; otherwise, `false`."}],"pos":[62831,62937],"yaml":true},{"content":"Gets a value that indicates whether this <xref href=\"System.Xaml.XamlType\"></xref> represents a markup extension.","nodes":[{"pos":[0,113],"content":"Gets a value that indicates whether this <ph id=\"ph1\">&lt;xref href=\"System.Xaml.XamlType\"&gt;&lt;/xref&gt;</ph> represents a markup extension.","source":"Gets a value that indicates whether this <xref href=\"System.Xaml.XamlType\"></xref> represents a markup extension."}],"pos":[63840,63954],"yaml":true},{"content":"In XAML specification terms, this type must be assignable to `x:MarkupExtension` in order to return `true` for <xref:System.Xaml.XamlType.IsMarkupExtension%2A>.  \n  \n If you do not use the default internal CLR reflection technique for a <xref:System.Xaml.XamlType>, calls to this property can invoke <xref:System.Xaml.XamlType.LookupIsMarkupExtension%2A> overrides on <xref:System.Xaml.XamlType> derived classes. For more information about return values and other behavior, see the documentation for <xref:System.Xaml.XamlType.LookupIsMarkupExtension%2A> on this type.","nodes":[{"pos":[0,160],"content":"In XAML specification terms, this type must be assignable to <ph id=\"ph1\">`x:MarkupExtension`</ph> in order to return <ph id=\"ph2\">`true`</ph> for <ph id=\"ph3\">&lt;xref:System.Xaml.XamlType.IsMarkupExtension%2A&gt;</ph>.","source":"In XAML specification terms, this type must be assignable to `x:MarkupExtension` in order to return `true` for <xref:System.Xaml.XamlType.IsMarkupExtension%2A>."},{"pos":[167,568],"content":"If you do not use the default internal CLR reflection technique for a <xref:System.Xaml.XamlType>, calls to this property can invoke <xref:System.Xaml.XamlType.LookupIsMarkupExtension%2A> overrides on <xref:System.Xaml.XamlType> derived classes. For more information about return values and other behavior, see the documentation for <xref:System.Xaml.XamlType.LookupIsMarkupExtension%2A> on this type.","nodes":[{"content":"If you do not use the default internal CLR reflection technique for a <xref:System.Xaml.XamlType>, calls to this property can invoke <xref:System.Xaml.XamlType.LookupIsMarkupExtension%2A> overrides on <xref:System.Xaml.XamlType> derived classes. For more information about return values and other behavior, see the documentation for <xref:System.Xaml.XamlType.LookupIsMarkupExtension%2A> on this type.","pos":[0,401],"nodes":[{"content":"If you do not use the default internal CLR reflection technique for a <ph id=\"ph1\">&lt;xref:System.Xaml.XamlType&gt;</ph>, calls to this property can invoke <ph id=\"ph2\">&lt;xref:System.Xaml.XamlType.LookupIsMarkupExtension%2A&gt;</ph> overrides on <ph id=\"ph3\">&lt;xref:System.Xaml.XamlType&gt;</ph> derived classes.","pos":[0,245],"source":"If you do not use the default internal CLR reflection technique for a <xref:System.Xaml.XamlType>, calls to this property can invoke <xref:System.Xaml.XamlType.LookupIsMarkupExtension%2A> overrides on <xref:System.Xaml.XamlType> derived classes."},{"content":"For more information about return values and other behavior, see the documentation for <ph id=\"ph1\">&lt;xref:System.Xaml.XamlType.LookupIsMarkupExtension%2A&gt;</ph> on this type.","pos":[246,401],"source":" For more information about return values and other behavior, see the documentation for <xref:System.Xaml.XamlType.LookupIsMarkupExtension%2A> on this type."}]}]}],"pos":[63965,64538],"yaml":true,"extradata":"MT"},{"content":"`true` if this <xref href=\"System.Xaml.XamlType\"></xref> represents a markup extension; otherwise, `false`.","nodes":[{"pos":[0,107],"content":"<ph id=\"ph1\">`true`</ph> if this <ph id=\"ph2\">&lt;xref href=\"System.Xaml.XamlType\"&gt;&lt;/xref&gt;</ph> represents a markup extension; otherwise, <ph id=\"ph3\">`false`</ph>.","source":"`true` if this <xref href=\"System.Xaml.XamlType\"></xref> represents a markup extension; otherwise, `false`."}],"pos":[64658,64768],"yaml":true},{"content":"Gets a value that indicates whether this <xref href=\"System.Xaml.XamlType\"></xref> represents a XAML namescope, as per the XAML definition.","nodes":[{"pos":[0,139],"content":"Gets a value that indicates whether this <ph id=\"ph1\">&lt;xref href=\"System.Xaml.XamlType\"&gt;&lt;/xref&gt;</ph> represents a XAML namescope, as per the XAML definition.","source":"Gets a value that indicates whether this <xref href=\"System.Xaml.XamlType\"></xref> represents a XAML namescope, as per the XAML definition."}],"pos":[65643,65783],"yaml":true},{"content":"A XAML namescope enforces the name uniqueness of the property or properties used for `x:Name` / `[name property]`. If <xref:System.Xaml.XamlType.IsNameScope%2A> is `true`, some mechanism for enforcing uniqueness should exist and should evaluate from the perspective of this type owning a XAML namescope. The XAML namescope then extends to the content of the type until another XAML namescope-owning type is encountered.  \n  \n This property aligns to the `[is name scope]` information item in the [MS-XAML] specification.  \n  \n If you do not use the default internal CLR reflection technique for a <xref:System.Xaml.XamlType>, calls to this property can invoke <xref:System.Xaml.XamlType.LookupIsNameScope%2A> overrides on <xref:System.Xaml.XamlType> derived classes.","nodes":[{"pos":[0,419],"content":"A XAML namescope enforces the name uniqueness of the property or properties used for `x:Name` / `[name property]`. If <xref:System.Xaml.XamlType.IsNameScope%2A> is `true`, some mechanism for enforcing uniqueness should exist and should evaluate from the perspective of this type owning a XAML namescope. The XAML namescope then extends to the content of the type until another XAML namescope-owning type is encountered.","nodes":[{"content":"A XAML namescope enforces the name uniqueness of the property or properties used for <ph id=\"ph1\">`x:Name`</ph><ph id=\"ph2\"> / </ph><ph id=\"ph3\">`[name property]`</ph>.","pos":[0,114],"source":"A XAML namescope enforces the name uniqueness of the property or properties used for `x:Name` / `[name property]`."},{"content":"If <ph id=\"ph1\">&lt;xref:System.Xaml.XamlType.IsNameScope%2A&gt;</ph> is <ph id=\"ph2\">`true`</ph>, some mechanism for enforcing uniqueness should exist and should evaluate from the perspective of this type owning a XAML namescope.","pos":[115,303],"source":" If <xref:System.Xaml.XamlType.IsNameScope%2A> is `true`, some mechanism for enforcing uniqueness should exist and should evaluate from the perspective of this type owning a XAML namescope."},{"content":"The XAML namescope then extends to the content of the type until another XAML namescope-owning type is encountered.","pos":[304,419]}]},{"pos":[426,520],"content":"This property aligns to the <ph id=\"ph1\">`[is name scope]`</ph> information item in the [MS-XAML] specification.","source":"This property aligns to the `[is name scope]` information item in the [MS-XAML] specification."},{"pos":[527,766],"content":"If you do not use the default internal CLR reflection technique for a <xref:System.Xaml.XamlType>, calls to this property can invoke <xref:System.Xaml.XamlType.LookupIsNameScope%2A> overrides on <xref:System.Xaml.XamlType> derived classes.","nodes":[{"content":"If you do not use the default internal CLR reflection technique for a <ph id=\"ph1\">&lt;xref:System.Xaml.XamlType&gt;</ph>, calls to this property can invoke <ph id=\"ph2\">&lt;xref:System.Xaml.XamlType.LookupIsNameScope%2A&gt;</ph> overrides on <ph id=\"ph3\">&lt;xref:System.Xaml.XamlType&gt;</ph> derived classes.","pos":[0,239],"source":"If you do not use the default internal CLR reflection technique for a <xref:System.Xaml.XamlType>, calls to this property can invoke <xref:System.Xaml.XamlType.LookupIsNameScope%2A> overrides on <xref:System.Xaml.XamlType> derived classes."}]}],"pos":[65794,66567],"yaml":true,"extradata":"MT"},{"content":"`true` if this <xref href=\"System.Xaml.XamlType\"></xref> represents a XAML namescope; otherwise, `false`.","nodes":[{"pos":[0,105],"content":"<ph id=\"ph1\">`true`</ph> if this <ph id=\"ph2\">&lt;xref href=\"System.Xaml.XamlType\"&gt;&lt;/xref&gt;</ph> represents a XAML namescope; otherwise, <ph id=\"ph3\">`false`</ph>.","source":"`true` if this <xref href=\"System.Xaml.XamlType\"></xref> represents a XAML namescope; otherwise, `false`."}],"pos":[66681,66789],"yaml":true},{"content":"Gets a value that indicates whether this <xref href=\"System.Xaml.XamlType\"></xref> is initialized by using a valid `xamlName` string as its <xref href=\"System.Xaml.XamlType.Name\"></xref>.","nodes":[{"pos":[0,187],"content":"Gets a value that indicates whether this <ph id=\"ph1\">&lt;xref href=\"System.Xaml.XamlType\"&gt;&lt;/xref&gt;</ph> is initialized by using a valid <ph id=\"ph2\">`xamlName`</ph> string as its <ph id=\"ph3\">&lt;xref href=\"System.Xaml.XamlType.Name\"&gt;&lt;/xref&gt;</ph>.","source":"Gets a value that indicates whether this <xref href=\"System.Xaml.XamlType\"></xref> is initialized by using a valid `xamlName` string as its <xref href=\"System.Xaml.XamlType.Name\"></xref>."}],"pos":[67658,67846],"yaml":true},{"content":"`true` if this <xref href=\"System.Xaml.XamlType\"></xref> is initialized by using a valid `xamlName` string; otherwise, `false`.","nodes":[{"pos":[0,127],"content":"<ph id=\"ph1\">`true`</ph> if this <ph id=\"ph2\">&lt;xref href=\"System.Xaml.XamlType\"&gt;&lt;/xref&gt;</ph> is initialized by using a valid <ph id=\"ph3\">`xamlName`</ph> string; otherwise, <ph id=\"ph4\">`false`</ph>.","source":"`true` if this <xref href=\"System.Xaml.XamlType\"></xref> is initialized by using a valid `xamlName` string; otherwise, `false`."}],"pos":[67960,68090],"yaml":true},{"content":"Gets a value that indicates whether this <xref href=\"System.Xaml.XamlType\"></xref> represents a nullable type, as per the XAML definition.","nodes":[{"pos":[0,138],"content":"Gets a value that indicates whether this <ph id=\"ph1\">&lt;xref href=\"System.Xaml.XamlType\"&gt;&lt;/xref&gt;</ph> represents a nullable type, as per the XAML definition.","source":"Gets a value that indicates whether this <xref href=\"System.Xaml.XamlType\"></xref> represents a nullable type, as per the XAML definition."}],"pos":[68953,69092],"yaml":true},{"content":"This property aligns to the `[is nullable]` information item in the [MS-XAML] specification.  \n  \n If you are not using the default internal CLR reflection technique for a <xref:System.Xaml.XamlType>, calls to this property can invoke <xref:System.Xaml.XamlType.LookupIsNullable%2A> overrides on <xref:System.Xaml.XamlType> derived classes.","nodes":[{"pos":[0,92],"content":"This property aligns to the <ph id=\"ph1\">`[is nullable]`</ph> information item in the [MS-XAML] specification.","source":"This property aligns to the `[is nullable]` information item in the [MS-XAML] specification."},{"pos":[99,340],"content":"If you are not using the default internal CLR reflection technique for a <xref:System.Xaml.XamlType>, calls to this property can invoke <xref:System.Xaml.XamlType.LookupIsNullable%2A> overrides on <xref:System.Xaml.XamlType> derived classes.","nodes":[{"content":"If you are not using the default internal CLR reflection technique for a <ph id=\"ph1\">&lt;xref:System.Xaml.XamlType&gt;</ph>, calls to this property can invoke <ph id=\"ph2\">&lt;xref:System.Xaml.XamlType.LookupIsNullable%2A&gt;</ph> overrides on <ph id=\"ph3\">&lt;xref:System.Xaml.XamlType&gt;</ph> derived classes.","pos":[0,241],"source":"If you are not using the default internal CLR reflection technique for a <xref:System.Xaml.XamlType>, calls to this property can invoke <xref:System.Xaml.XamlType.LookupIsNullable%2A> overrides on <xref:System.Xaml.XamlType> derived classes."}]}],"pos":[69103,69448],"yaml":true,"extradata":"MT"},{"content":"`true` if this <xref href=\"System.Xaml.XamlType\"></xref> represents a nullable type; otherwise, `false`.","nodes":[{"pos":[0,104],"content":"<ph id=\"ph1\">`true`</ph> if this <ph id=\"ph2\">&lt;xref href=\"System.Xaml.XamlType\"&gt;&lt;/xref&gt;</ph> represents a nullable type; otherwise, <ph id=\"ph3\">`false`</ph>.","source":"`true` if this <xref href=\"System.Xaml.XamlType\"></xref> represents a nullable type; otherwise, `false`."}],"pos":[69561,69668],"yaml":true},{"content":"Gets a value that indicates whether this <xref href=\"System.Xaml.XamlType\"></xref> represents a public type in the relevant type system.","nodes":[{"pos":[0,136],"content":"Gets a value that indicates whether this <ph id=\"ph1\">&lt;xref href=\"System.Xaml.XamlType\"&gt;&lt;/xref&gt;</ph> represents a public type in the relevant type system.","source":"Gets a value that indicates whether this <xref href=\"System.Xaml.XamlType\"></xref> represents a public type in the relevant type system."}],"pos":[70518,70655],"yaml":true},{"content":"If you do not use the default internal CLR reflection technique for a <xref:System.Xaml.XamlType>, calls to this property can invoke <xref:System.Xaml.XamlType.LookupIsPublic%2A> overrides on <xref:System.Xaml.XamlType> derived classes.  \n  \n> [!IMPORTANT]\n>  <xref:System.Xaml.XamlType.LookupIsPublic%2A> is virtual, and therefore, can be overridden. The override has the potential (whether for malicious purposes or otherwise) to change the reported access information about a XAML type so that it no longer aligns in an expected way with the type system and access information of its underlying CLR type. For any security-critical checks of assignment operations and access, use the underlying CLR type instead.","nodes":[{"pos":[0,236],"content":"If you do not use the default internal CLR reflection technique for a <xref:System.Xaml.XamlType>, calls to this property can invoke <xref:System.Xaml.XamlType.LookupIsPublic%2A> overrides on <xref:System.Xaml.XamlType> derived classes.","nodes":[{"content":"If you do not use the default internal CLR reflection technique for a <ph id=\"ph1\">&lt;xref:System.Xaml.XamlType&gt;</ph>, calls to this property can invoke <ph id=\"ph2\">&lt;xref:System.Xaml.XamlType.LookupIsPublic%2A&gt;</ph> overrides on <ph id=\"ph3\">&lt;xref:System.Xaml.XamlType&gt;</ph> derived classes.","pos":[0,236],"source":"If you do not use the default internal CLR reflection technique for a <xref:System.Xaml.XamlType>, calls to this property can invoke <xref:System.Xaml.XamlType.LookupIsPublic%2A> overrides on <xref:System.Xaml.XamlType> derived classes."}]},{"pos":[244,714],"content":"[!IMPORTANT]\n <xref:System.Xaml.XamlType.LookupIsPublic%2A> is virtual, and therefore, can be overridden. The override has the potential (whether for malicious purposes or otherwise) to change the reported access information about a XAML type so that it no longer aligns in an expected way with the type system and access information of its underlying CLR type. For any security-critical checks of assignment operations and access, use the underlying CLR type instead.","leadings":["","> "],"nodes":[{"content":" <xref:System.Xaml.XamlType.LookupIsPublic%2A> is virtual, and therefore, can be overridden. The override has the potential (whether for malicious purposes or otherwise) to change the reported access information about a XAML type so that it no longer aligns in an expected way with the type system and access information of its underlying CLR type. For any security-critical checks of assignment operations and access, use the underlying CLR type instead.","pos":[13,468],"nodes":[{"content":"<ph id=\"ph1\">&lt;xref:System.Xaml.XamlType.LookupIsPublic%2A&gt;</ph> is virtual, and therefore, can be overridden.","pos":[1,92],"source":" <xref:System.Xaml.XamlType.LookupIsPublic%2A> is virtual, and therefore, can be overridden."},{"content":"The override has the potential (whether for malicious purposes or otherwise) to change the reported access information about a XAML type so that it no longer aligns in an expected way with the type system and access information of its underlying CLR type.","pos":[93,348]},{"content":"For any security-critical checks of assignment operations and access, use the underlying CLR type instead.","pos":[349,455]}]}]}],"pos":[70666,71386],"yaml":true,"extradata":"MT"},{"content":"`true` if this <xref href=\"System.Xaml.XamlType\"></xref> represents a public type; otherwise, `false`.","nodes":[{"pos":[0,102],"content":"<ph id=\"ph1\">`true`</ph> if this <ph id=\"ph2\">&lt;xref href=\"System.Xaml.XamlType\"&gt;&lt;/xref&gt;</ph> represents a public type; otherwise, <ph id=\"ph3\">`false`</ph>.","source":"`true` if this <xref href=\"System.Xaml.XamlType\"></xref> represents a public type; otherwise, `false`."}],"pos":[71497,71602],"yaml":true},{"content":"Gets a value that indicates whether this <xref href=\"System.Xaml.XamlType\"></xref> represents a type that cannot be resolved in the underlying type system.","nodes":[{"pos":[0,155],"content":"Gets a value that indicates whether this <ph id=\"ph1\">&lt;xref href=\"System.Xaml.XamlType\"&gt;&lt;/xref&gt;</ph> represents a type that cannot be resolved in the underlying type system.","source":"Gets a value that indicates whether this <xref href=\"System.Xaml.XamlType\"></xref> represents a type that cannot be resolved in the underlying type system."}],"pos":[72456,72612],"yaml":true},{"content":"If you do not use the default internal CLR reflection technique for a <xref:System.Xaml.XamlType>, calls to this property can invoke <xref:System.Xaml.XamlType.LookupIsUnknown%2A> overrides on <xref:System.Xaml.XamlType>derived classes.  \n  \n For a load path that involves <xref:System.Xaml.XamlObjectWriter>, a <xref:System.Xaml.XamlType> that has `true` for <xref:System.Xaml.XamlType.IsUnknown%2A> cannot be written into an object graph. Under the default implementations in <xref:System.Xaml> , the <xref:System.Xaml.XamlObjectWriter.WriteStartObject%2A?displayProperty=fullName> call throws a <xref:System.Xaml.XamlObjectWriterException> when the relevant <xref:System.Xaml.XamlType> reports `true` for <xref:System.Xaml.XamlType.IsUnknown%2A>. You should not pass a <xref:System.Xaml.XamlType> that has <xref:System.Xaml.XamlType.IsUnknown%2A> as `true` unless you are prepared to handle the exceptions from <xref:System.Xaml.XamlObjectWriter>, or you have other ways to adjust the <xref:System.Xaml.XamlObjectWriter> behavior or the XAML node stream prior to writing the object graph.","nodes":[{"pos":[0,236],"content":"If you do not use the default internal CLR reflection technique for a <xref:System.Xaml.XamlType>, calls to this property can invoke <xref:System.Xaml.XamlType.LookupIsUnknown%2A> overrides on <xref:System.Xaml.XamlType>derived classes.","nodes":[{"content":"If you do not use the default internal CLR reflection technique for a <ph id=\"ph1\">&lt;xref:System.Xaml.XamlType&gt;</ph>, calls to this property can invoke <ph id=\"ph2\">&lt;xref:System.Xaml.XamlType.LookupIsUnknown%2A&gt;</ph> overrides on <ph id=\"ph3\">&lt;xref:System.Xaml.XamlType&gt;</ph>derived classes.","pos":[0,236],"source":"If you do not use the default internal CLR reflection technique for a <xref:System.Xaml.XamlType>, calls to this property can invoke <xref:System.Xaml.XamlType.LookupIsUnknown%2A> overrides on <xref:System.Xaml.XamlType>derived classes."}]},{"pos":[243,1091],"content":"For a load path that involves <xref:System.Xaml.XamlObjectWriter>, a <xref:System.Xaml.XamlType> that has `true` for <xref:System.Xaml.XamlType.IsUnknown%2A> cannot be written into an object graph. Under the default implementations in <xref:System.Xaml> , the <xref:System.Xaml.XamlObjectWriter.WriteStartObject%2A?displayProperty=fullName> call throws a <xref:System.Xaml.XamlObjectWriterException> when the relevant <xref:System.Xaml.XamlType> reports `true` for <xref:System.Xaml.XamlType.IsUnknown%2A>. You should not pass a <xref:System.Xaml.XamlType> that has <xref:System.Xaml.XamlType.IsUnknown%2A> as `true` unless you are prepared to handle the exceptions from <xref:System.Xaml.XamlObjectWriter>, or you have other ways to adjust the <xref:System.Xaml.XamlObjectWriter> behavior or the XAML node stream prior to writing the object graph.","nodes":[{"content":"For a load path that involves <ph id=\"ph1\">&lt;xref:System.Xaml.XamlObjectWriter&gt;</ph>, a <ph id=\"ph2\">&lt;xref:System.Xaml.XamlType&gt;</ph> that has <ph id=\"ph3\">`true`</ph> for <ph id=\"ph4\">&lt;xref:System.Xaml.XamlType.IsUnknown%2A&gt;</ph> cannot be written into an object graph.","pos":[0,197],"source":"For a load path that involves <xref:System.Xaml.XamlObjectWriter>, a <xref:System.Xaml.XamlType> that has `true` for <xref:System.Xaml.XamlType.IsUnknown%2A> cannot be written into an object graph."},{"content":"Under the default implementations in <ph id=\"ph1\">&lt;xref:System.Xaml&gt;</ph> , the <ph id=\"ph2\">&lt;xref:System.Xaml.XamlObjectWriter.WriteStartObject%2A?displayProperty=fullName&gt;</ph> call throws a <ph id=\"ph3\">&lt;xref:System.Xaml.XamlObjectWriterException&gt;</ph> when the relevant <ph id=\"ph4\">&lt;xref:System.Xaml.XamlType&gt;</ph> reports <ph id=\"ph5\">`true`</ph> for <ph id=\"ph6\">&lt;xref:System.Xaml.XamlType.IsUnknown%2A&gt;</ph>.","pos":[198,506],"source":" Under the default implementations in <xref:System.Xaml> , the <xref:System.Xaml.XamlObjectWriter.WriteStartObject%2A?displayProperty=fullName> call throws a <xref:System.Xaml.XamlObjectWriterException> when the relevant <xref:System.Xaml.XamlType> reports `true` for <xref:System.Xaml.XamlType.IsUnknown%2A>."},{"content":"You should not pass a <ph id=\"ph1\">&lt;xref:System.Xaml.XamlType&gt;</ph> that has <ph id=\"ph2\">&lt;xref:System.Xaml.XamlType.IsUnknown%2A&gt;</ph> as <ph id=\"ph3\">`true`</ph> unless you are prepared to handle the exceptions from <ph id=\"ph4\">&lt;xref:System.Xaml.XamlObjectWriter&gt;</ph>, or you have other ways to adjust the <ph id=\"ph5\">&lt;xref:System.Xaml.XamlObjectWriter&gt;</ph> behavior or the XAML node stream prior to writing the object graph.","pos":[507,848],"source":" You should not pass a <xref:System.Xaml.XamlType> that has <xref:System.Xaml.XamlType.IsUnknown%2A> as `true` unless you are prepared to handle the exceptions from <xref:System.Xaml.XamlObjectWriter>, or you have other ways to adjust the <xref:System.Xaml.XamlObjectWriter> behavior or the XAML node stream prior to writing the object graph."}]}],"pos":[72623,73719],"yaml":true,"extradata":"MT"},{"content":"`true` if this <xref href=\"System.Xaml.XamlType\"></xref> represents an unresolvable type; otherwise, `false`.","nodes":[{"pos":[0,109],"content":"<ph id=\"ph1\">`true`</ph> if this <ph id=\"ph2\">&lt;xref href=\"System.Xaml.XamlType\"&gt;&lt;/xref&gt;</ph> represents an unresolvable type; otherwise, <ph id=\"ph3\">`false`</ph>.","source":"`true` if this <xref href=\"System.Xaml.XamlType\"></xref> represents an unresolvable type; otherwise, `false`."}],"pos":[73831,73943],"yaml":true},{"content":"Gets a value that indicates whether this <xref href=\"System.Xaml.XamlType\"></xref> is built top-down during XAML initialization.","nodes":[{"pos":[0,128],"content":"Gets a value that indicates whether this <ph id=\"ph1\">&lt;xref href=\"System.Xaml.XamlType\"&gt;&lt;/xref&gt;</ph> is built top-down during XAML initialization.","source":"Gets a value that indicates whether this <xref href=\"System.Xaml.XamlType\"></xref> is built top-down during XAML initialization."}],"pos":[74912,75041],"yaml":true},{"content":"Top-down is a metaphor that approximates XAML processor behavior when creating the object graph. When built top-down, a type is instantiated, attached to the parent, and then has its properties set. Top-down construction avoids invoking property-changed handlers multiple times. Such handling ripples up the object graph and therefore, eliminates the multiple handler calls and provides a performance optimization for startup of the object graph.  \n  \n If you do not use the default internal CLR reflection technique for a <xref:System.Xaml.XamlType>, calls to this property can invoke <xref:System.Xaml.XamlType.LookupUsableDuringInitialization%2A> overrides on <xref:System.Xaml.XamlType> derived classes. For more information about return values and other behavior, see the documentation for <xref:System.Xaml.XamlType.LookupUsableDuringInitialization%2A> on this type.","nodes":[{"pos":[0,446],"content":"Top-down is a metaphor that approximates XAML processor behavior when creating the object graph. When built top-down, a type is instantiated, attached to the parent, and then has its properties set. Top-down construction avoids invoking property-changed handlers multiple times. Such handling ripples up the object graph and therefore, eliminates the multiple handler calls and provides a performance optimization for startup of the object graph.","nodes":[{"content":"Top-down is a metaphor that approximates XAML processor behavior when creating the object graph. When built top-down, a type is instantiated, attached to the parent, and then has its properties set. Top-down construction avoids invoking property-changed handlers multiple times. Such handling ripples up the object graph and therefore, eliminates the multiple handler calls and provides a performance optimization for startup of the object graph.","pos":[0,446],"nodes":[{"content":"Top-down is a metaphor that approximates XAML processor behavior when creating the object graph.","pos":[0,96]},{"content":"When built top-down, a type is instantiated, attached to the parent, and then has its properties set.","pos":[97,198]},{"content":"Top-down construction avoids invoking property-changed handlers multiple times.","pos":[199,278]},{"content":"Such handling ripples up the object graph and therefore, eliminates the multiple handler calls and provides a performance optimization for startup of the object graph.","pos":[279,446]}]}]},{"pos":[453,872],"content":"If you do not use the default internal CLR reflection technique for a <xref:System.Xaml.XamlType>, calls to this property can invoke <xref:System.Xaml.XamlType.LookupUsableDuringInitialization%2A> overrides on <xref:System.Xaml.XamlType> derived classes. For more information about return values and other behavior, see the documentation for <xref:System.Xaml.XamlType.LookupUsableDuringInitialization%2A> on this type.","nodes":[{"content":"If you do not use the default internal CLR reflection technique for a <xref:System.Xaml.XamlType>, calls to this property can invoke <xref:System.Xaml.XamlType.LookupUsableDuringInitialization%2A> overrides on <xref:System.Xaml.XamlType> derived classes. For more information about return values and other behavior, see the documentation for <xref:System.Xaml.XamlType.LookupUsableDuringInitialization%2A> on this type.","pos":[0,419],"nodes":[{"content":"If you do not use the default internal CLR reflection technique for a <ph id=\"ph1\">&lt;xref:System.Xaml.XamlType&gt;</ph>, calls to this property can invoke <ph id=\"ph2\">&lt;xref:System.Xaml.XamlType.LookupUsableDuringInitialization%2A&gt;</ph> overrides on <ph id=\"ph3\">&lt;xref:System.Xaml.XamlType&gt;</ph> derived classes.","pos":[0,254],"source":"If you do not use the default internal CLR reflection technique for a <xref:System.Xaml.XamlType>, calls to this property can invoke <xref:System.Xaml.XamlType.LookupUsableDuringInitialization%2A> overrides on <xref:System.Xaml.XamlType> derived classes."},{"content":"For more information about return values and other behavior, see the documentation for <ph id=\"ph1\">&lt;xref:System.Xaml.XamlType.LookupUsableDuringInitialization%2A&gt;</ph> on this type.","pos":[255,419],"source":" For more information about return values and other behavior, see the documentation for <xref:System.Xaml.XamlType.LookupUsableDuringInitialization%2A> on this type."}]}]}],"pos":[75052,75929],"yaml":true,"extradata":"MT"},{"content":"`true` if this <xref href=\"System.Xaml.XamlType\"></xref> is built top-down during XAML initialization; otherwise, `false`. The default is `false`.","nodes":[{"pos":[0,146],"content":"`true` if this <xref href=\"System.Xaml.XamlType\"></xref> is built top-down during XAML initialization; otherwise, `false`. The default is `false`.","nodes":[{"content":"<ph id=\"ph1\">`true`</ph> if this <ph id=\"ph2\">&lt;xref href=\"System.Xaml.XamlType\"&gt;&lt;/xref&gt;</ph> is built top-down during XAML initialization; otherwise, <ph id=\"ph3\">`false`</ph>.","pos":[0,122],"source":"`true` if this <xref href=\"System.Xaml.XamlType\"></xref> is built top-down during XAML initialization; otherwise, `false`."},{"content":"The default is <ph id=\"ph1\">`false`</ph>.","pos":[123,146],"source":" The default is `false`."}]}],"pos":[76060,76209],"yaml":true},{"content":"Gets a value that indicates whether this <xref href=\"System.Xaml.XamlType\"></xref> represents a whitespace significant collection, as per the XML definition.","nodes":[{"pos":[0,157],"content":"Gets a value that indicates whether this <ph id=\"ph1\">&lt;xref href=\"System.Xaml.XamlType\"&gt;&lt;/xref&gt;</ph> represents a whitespace significant collection, as per the XML definition.","source":"Gets a value that indicates whether this <xref href=\"System.Xaml.XamlType\"></xref> represents a whitespace significant collection, as per the XML definition."}],"pos":[77227,77385],"yaml":true},{"content":"If you do not use the default internal CLR reflection technique for a <xref:System.Xaml.XamlType>, calls to this property can invoke <xref:System.Xaml.XamlType.LookupIsWhitespaceSignificantCollection%2A> overrides on <xref:System.Xaml.XamlType> derived classes. For more information about return values and other behavior, see the documentation for <xref:System.Xaml.XamlType.LookupIsWhitespaceSignificantCollection%2A> on this type.","nodes":[{"pos":[0,433],"content":"If you do not use the default internal CLR reflection technique for a <xref:System.Xaml.XamlType>, calls to this property can invoke <xref:System.Xaml.XamlType.LookupIsWhitespaceSignificantCollection%2A> overrides on <xref:System.Xaml.XamlType> derived classes. For more information about return values and other behavior, see the documentation for <xref:System.Xaml.XamlType.LookupIsWhitespaceSignificantCollection%2A> on this type.","nodes":[{"content":"If you do not use the default internal CLR reflection technique for a <xref:System.Xaml.XamlType>, calls to this property can invoke <xref:System.Xaml.XamlType.LookupIsWhitespaceSignificantCollection%2A> overrides on <xref:System.Xaml.XamlType> derived classes. For more information about return values and other behavior, see the documentation for <xref:System.Xaml.XamlType.LookupIsWhitespaceSignificantCollection%2A> on this type.","pos":[0,433],"nodes":[{"content":"If you do not use the default internal CLR reflection technique for a <ph id=\"ph1\">&lt;xref:System.Xaml.XamlType&gt;</ph>, calls to this property can invoke <ph id=\"ph2\">&lt;xref:System.Xaml.XamlType.LookupIsWhitespaceSignificantCollection%2A&gt;</ph> overrides on <ph id=\"ph3\">&lt;xref:System.Xaml.XamlType&gt;</ph> derived classes.","pos":[0,261],"source":"If you do not use the default internal CLR reflection technique for a <xref:System.Xaml.XamlType>, calls to this property can invoke <xref:System.Xaml.XamlType.LookupIsWhitespaceSignificantCollection%2A> overrides on <xref:System.Xaml.XamlType> derived classes."},{"content":"For more information about return values and other behavior, see the documentation for <ph id=\"ph1\">&lt;xref:System.Xaml.XamlType.LookupIsWhitespaceSignificantCollection%2A&gt;</ph> on this type.","pos":[262,433],"source":" For more information about return values and other behavior, see the documentation for <xref:System.Xaml.XamlType.LookupIsWhitespaceSignificantCollection%2A> on this type."}]}]}],"pos":[77396,77830],"yaml":true,"extradata":"MT"},{"content":"`true` if this <xref href=\"System.Xaml.XamlType\"></xref> represents a whitespace significant collection; otherwise, `false`.","nodes":[{"pos":[0,124],"content":"<ph id=\"ph1\">`true`</ph> if this <ph id=\"ph2\">&lt;xref href=\"System.Xaml.XamlType\"&gt;&lt;/xref&gt;</ph> represents a whitespace significant collection; otherwise, <ph id=\"ph3\">`false`</ph>.","source":"`true` if this <xref href=\"System.Xaml.XamlType\"></xref> represents a whitespace significant collection; otherwise, `false`."}],"pos":[77966,78093],"yaml":true},{"content":"Gets a value that indicates whether this <xref href=\"System.Xaml.XamlType\"></xref> represents XML `XDATA`, as per the XAML definition.","nodes":[{"pos":[0,134],"content":"Gets a value that indicates whether this <ph id=\"ph1\">&lt;xref href=\"System.Xaml.XamlType\"&gt;&lt;/xref&gt;</ph> represents XML <ph id=\"ph2\">`XDATA`</ph>, as per the XAML definition.","source":"Gets a value that indicates whether this <xref href=\"System.Xaml.XamlType\"></xref> represents XML `XDATA`, as per the XAML definition."}],"pos":[78960,79095],"yaml":true},{"content":"This property aligns to the `[is xdata]` information item in the [MS-XAML] specification.  \n  \n If you do not use the default internal CLR reflection technique for a <xref:System.Xaml.XamlType>, calls to this property can invoke <xref:System.Xaml.XamlType.LookupIsXData%2A> overrides on <xref:System.Xaml.XamlType> derived classes. For more information about return values and other behavior, see the documentation for <xref:System.Xaml.XamlType.LookupIsXData%2A> on this type.","nodes":[{"pos":[0,89],"content":"This property aligns to the <ph id=\"ph1\">`[is xdata]`</ph> information item in the [MS-XAML] specification.","source":"This property aligns to the `[is xdata]` information item in the [MS-XAML] specification."},{"pos":[96,477],"content":"If you do not use the default internal CLR reflection technique for a <xref:System.Xaml.XamlType>, calls to this property can invoke <xref:System.Xaml.XamlType.LookupIsXData%2A> overrides on <xref:System.Xaml.XamlType> derived classes. For more information about return values and other behavior, see the documentation for <xref:System.Xaml.XamlType.LookupIsXData%2A> on this type.","nodes":[{"content":"If you do not use the default internal CLR reflection technique for a <xref:System.Xaml.XamlType>, calls to this property can invoke <xref:System.Xaml.XamlType.LookupIsXData%2A> overrides on <xref:System.Xaml.XamlType> derived classes. For more information about return values and other behavior, see the documentation for <xref:System.Xaml.XamlType.LookupIsXData%2A> on this type.","pos":[0,381],"nodes":[{"content":"If you do not use the default internal CLR reflection technique for a <ph id=\"ph1\">&lt;xref:System.Xaml.XamlType&gt;</ph>, calls to this property can invoke <ph id=\"ph2\">&lt;xref:System.Xaml.XamlType.LookupIsXData%2A&gt;</ph> overrides on <ph id=\"ph3\">&lt;xref:System.Xaml.XamlType&gt;</ph> derived classes.","pos":[0,235],"source":"If you do not use the default internal CLR reflection technique for a <xref:System.Xaml.XamlType>, calls to this property can invoke <xref:System.Xaml.XamlType.LookupIsXData%2A> overrides on <xref:System.Xaml.XamlType> derived classes."},{"content":"For more information about return values and other behavior, see the documentation for <ph id=\"ph1\">&lt;xref:System.Xaml.XamlType.LookupIsXData%2A&gt;</ph> on this type.","pos":[236,381],"source":" For more information about return values and other behavior, see the documentation for <xref:System.Xaml.XamlType.LookupIsXData%2A> on this type."}]}]}],"pos":[79106,79588],"yaml":true,"extradata":"MT"},{"content":"`true` if this <xref href=\"System.Xaml.XamlType\"></xref> represents `XDATA`; otherwise, `false`.","nodes":[{"pos":[0,96],"content":"<ph id=\"ph1\">`true`</ph> if this <ph id=\"ph2\">&lt;xref href=\"System.Xaml.XamlType\"&gt;&lt;/xref&gt;</ph> represents <ph id=\"ph3\">`XDATA`</ph>; otherwise, <ph id=\"ph4\">`false`</ph>.","source":"`true` if this <xref href=\"System.Xaml.XamlType\"></xref> represents `XDATA`; otherwise, `false`."}],"pos":[79698,79797],"yaml":true},{"content":"Gets a value that provides the type information for the `Items` property of this <xref href=\"System.Xaml.XamlType\"></xref>.","nodes":[{"pos":[0,123],"content":"Gets a value that provides the type information for the <ph id=\"ph1\">`Items`</ph> property of this <ph id=\"ph2\">&lt;xref href=\"System.Xaml.XamlType\"&gt;&lt;/xref&gt;</ph>.","source":"Gets a value that provides the type information for the `Items` property of this <xref href=\"System.Xaml.XamlType\"></xref>."}],"pos":[80644,80768],"yaml":true},{"content":"This property is only relevant if this <xref:System.Xaml.XamlType> represents a collection (<xref:System.Xaml.XamlType.IsCollection%2A> is `true`). The `Items` property is whatever property holds items in that type of collection or array.  \n  \n If you do not use the default internal CLR reflection technique for a <xref:System.Xaml.XamlType>, calls to this property can invoke <xref:System.Xaml.XamlType.LookupItemType%2A> overrides on <xref:System.Xaml.XamlType> derived classes. For more information about return values and other behavior, see the documentation for <xref:System.Xaml.XamlType.LookupItemType%2A> on this type.","nodes":[{"pos":[0,238],"content":"This property is only relevant if this <xref:System.Xaml.XamlType> represents a collection (<xref:System.Xaml.XamlType.IsCollection%2A> is `true`). The `Items` property is whatever property holds items in that type of collection or array.","nodes":[{"content":"This property is only relevant if this <ph id=\"ph1\">&lt;xref:System.Xaml.XamlType&gt;</ph> represents a collection (<ph id=\"ph2\">&lt;xref:System.Xaml.XamlType.IsCollection%2A&gt;</ph> is <ph id=\"ph3\">`true`</ph>).","pos":[0,147],"source":"This property is only relevant if this <xref:System.Xaml.XamlType> represents a collection (<xref:System.Xaml.XamlType.IsCollection%2A> is `true`)."},{"content":"The <ph id=\"ph1\">`Items`</ph> property is whatever property holds items in that type of collection or array.","pos":[148,238],"source":" The `Items` property is whatever property holds items in that type of collection or array."}]},{"pos":[245,628],"content":"If you do not use the default internal CLR reflection technique for a <xref:System.Xaml.XamlType>, calls to this property can invoke <xref:System.Xaml.XamlType.LookupItemType%2A> overrides on <xref:System.Xaml.XamlType> derived classes. For more information about return values and other behavior, see the documentation for <xref:System.Xaml.XamlType.LookupItemType%2A> on this type.","nodes":[{"content":"If you do not use the default internal CLR reflection technique for a <xref:System.Xaml.XamlType>, calls to this property can invoke <xref:System.Xaml.XamlType.LookupItemType%2A> overrides on <xref:System.Xaml.XamlType> derived classes. For more information about return values and other behavior, see the documentation for <xref:System.Xaml.XamlType.LookupItemType%2A> on this type.","pos":[0,383],"nodes":[{"content":"If you do not use the default internal CLR reflection technique for a <ph id=\"ph1\">&lt;xref:System.Xaml.XamlType&gt;</ph>, calls to this property can invoke <ph id=\"ph2\">&lt;xref:System.Xaml.XamlType.LookupItemType%2A&gt;</ph> overrides on <ph id=\"ph3\">&lt;xref:System.Xaml.XamlType&gt;</ph> derived classes.","pos":[0,236],"source":"If you do not use the default internal CLR reflection technique for a <xref:System.Xaml.XamlType>, calls to this property can invoke <xref:System.Xaml.XamlType.LookupItemType%2A> overrides on <xref:System.Xaml.XamlType> derived classes."},{"content":"For more information about return values and other behavior, see the documentation for <ph id=\"ph1\">&lt;xref:System.Xaml.XamlType.LookupItemType%2A&gt;</ph> on this type.","pos":[237,383],"source":" For more information about return values and other behavior, see the documentation for <xref:System.Xaml.XamlType.LookupItemType%2A> on this type."}]}]}],"pos":[80779,81412],"yaml":true,"extradata":"MT"},{"content":"A <xref href=\"System.Xaml.XamlType\"></xref> object for the type of the items in the collection; otherwise, `null`, if this <xref href=\"System.Xaml.XamlType\"></xref> does not represent a collection.","nodes":[{"pos":[0,197],"content":"A <ph id=\"ph1\">&lt;xref href=\"System.Xaml.XamlType\"&gt;&lt;/xref&gt;</ph> object for the type of the items in the collection; otherwise, <ph id=\"ph2\">`null`</ph>, if this <ph id=\"ph3\">&lt;xref href=\"System.Xaml.XamlType\"&gt;&lt;/xref&gt;</ph> does not represent a collection.","source":"A <xref href=\"System.Xaml.XamlType\"></xref> object for the type of the items in the collection; otherwise, `null`, if this <xref href=\"System.Xaml.XamlType\"></xref> does not represent a collection."}],"pos":[81545,81743],"yaml":true},{"content":"Gets a value that provides the type information for the key property of this <xref href=\"System.Xaml.XamlType\"></xref>, if the <xref href=\"System.Xaml.XamlType\"></xref> represents a dictionary.","nodes":[{"pos":[0,193],"content":"Gets a value that provides the type information for the key property of this <ph id=\"ph1\">&lt;xref href=\"System.Xaml.XamlType\"&gt;&lt;/xref&gt;</ph>, if the <ph id=\"ph2\">&lt;xref href=\"System.Xaml.XamlType\"&gt;&lt;/xref&gt;</ph> represents a dictionary.","source":"Gets a value that provides the type information for the key property of this <xref href=\"System.Xaml.XamlType\"></xref>, if the <xref href=\"System.Xaml.XamlType\"></xref> represents a dictionary."}],"pos":[82585,82779],"yaml":true},{"content":"This property is only relevant if this <xref:System.Xaml.XamlType> represents a dictionary (<xref:System.Xaml.XamlType.IsDictionary%2A> is `true`).  \n  \n If you do not use the default internal CLR reflection technique for a <xref:System.Xaml.XamlType>, calls to this property can invoke <xref:System.Xaml.XamlType.LookupKeyType%2A> overrides on <xref:System.Xaml.XamlType> derived classes. For more information about return values and other behavior, see the documentation for <xref:System.Xaml.XamlType.LookupKeyType%2A> on this type.","nodes":[{"pos":[0,147],"content":"This property is only relevant if this <ph id=\"ph1\">&lt;xref:System.Xaml.XamlType&gt;</ph> represents a dictionary (<ph id=\"ph2\">&lt;xref:System.Xaml.XamlType.IsDictionary%2A&gt;</ph> is <ph id=\"ph3\">`true`</ph>).","source":"This property is only relevant if this <xref:System.Xaml.XamlType> represents a dictionary (<xref:System.Xaml.XamlType.IsDictionary%2A> is `true`)."},{"pos":[154,535],"content":"If you do not use the default internal CLR reflection technique for a <xref:System.Xaml.XamlType>, calls to this property can invoke <xref:System.Xaml.XamlType.LookupKeyType%2A> overrides on <xref:System.Xaml.XamlType> derived classes. For more information about return values and other behavior, see the documentation for <xref:System.Xaml.XamlType.LookupKeyType%2A> on this type.","nodes":[{"content":"If you do not use the default internal CLR reflection technique for a <xref:System.Xaml.XamlType>, calls to this property can invoke <xref:System.Xaml.XamlType.LookupKeyType%2A> overrides on <xref:System.Xaml.XamlType> derived classes. For more information about return values and other behavior, see the documentation for <xref:System.Xaml.XamlType.LookupKeyType%2A> on this type.","pos":[0,381],"nodes":[{"content":"If you do not use the default internal CLR reflection technique for a <ph id=\"ph1\">&lt;xref:System.Xaml.XamlType&gt;</ph>, calls to this property can invoke <ph id=\"ph2\">&lt;xref:System.Xaml.XamlType.LookupKeyType%2A&gt;</ph> overrides on <ph id=\"ph3\">&lt;xref:System.Xaml.XamlType&gt;</ph> derived classes.","pos":[0,235],"source":"If you do not use the default internal CLR reflection technique for a <xref:System.Xaml.XamlType>, calls to this property can invoke <xref:System.Xaml.XamlType.LookupKeyType%2A> overrides on <xref:System.Xaml.XamlType> derived classes."},{"content":"For more information about return values and other behavior, see the documentation for <ph id=\"ph1\">&lt;xref:System.Xaml.XamlType.LookupKeyType%2A&gt;</ph> on this type.","pos":[236,381],"source":" For more information about return values and other behavior, see the documentation for <xref:System.Xaml.XamlType.LookupKeyType%2A> on this type."}]}]}],"pos":[82790,83330],"yaml":true,"extradata":"MT"},{"content":"A <xref href=\"System.Xaml.XamlType\"></xref> object for the type of the key for dictionary usage, otherwise, `null`, if this <xref href=\"System.Xaml.XamlType\"></xref> does not represent a dictionary.","nodes":[{"pos":[0,198],"content":"A <ph id=\"ph1\">&lt;xref href=\"System.Xaml.XamlType\"&gt;&lt;/xref&gt;</ph> object for the type of the key for dictionary usage, otherwise, <ph id=\"ph2\">`null`</ph>, if this <ph id=\"ph3\">&lt;xref href=\"System.Xaml.XamlType\"&gt;&lt;/xref&gt;</ph> does not represent a dictionary.","source":"A <xref href=\"System.Xaml.XamlType\"></xref> object for the type of the key for dictionary usage, otherwise, `null`, if this <xref href=\"System.Xaml.XamlType\"></xref> does not represent a dictionary."}],"pos":[83462,83661],"yaml":true},{"content":"Returns the XAML member that is aliased to a XAML directive by this <xref href=\"System.Xaml.XamlType\"></xref>.","nodes":[{"pos":[0,110],"content":"Returns the XAML member that is aliased to a XAML directive by this <ph id=\"ph1\">&lt;xref href=\"System.Xaml.XamlType\"&gt;&lt;/xref&gt;</ph>.","source":"Returns the XAML member that is aliased to a XAML directive by this <xref href=\"System.Xaml.XamlType\"></xref>."}],"pos":[84710,84821],"yaml":true},{"content":"This method can be invoked when a caller gets a value from <xref:System.Xaml.XamlType.GetAliasedProperty%2A>.  \n  \n The default implementation can return results for the following XAML directives: `Key`; `Name`; `Uid`; and `xml:lang`. Values for these depend on underlying reflection and might still return `null` if no aliased property is found.  \n  \n Override this method if you are not relying on default internal CLR reflection and are using metadata or other techniques for reporting the XAML type system information or the schema information of a type.","nodes":[{"pos":[0,109],"content":"This method can be invoked when a caller gets a value from <xref:System.Xaml.XamlType.GetAliasedProperty%2A>.","nodes":[{"content":"This method can be invoked when a caller gets a value from <ph id=\"ph1\">&lt;xref:System.Xaml.XamlType.GetAliasedProperty%2A&gt;</ph>.","pos":[0,109],"source":"This method can be invoked when a caller gets a value from <xref:System.Xaml.XamlType.GetAliasedProperty%2A>."}]},{"pos":[116,346],"content":"The default implementation can return results for the following XAML directives: `Key`; `Name`; `Uid`; and `xml:lang`. Values for these depend on underlying reflection and might still return `null` if no aliased property is found.","nodes":[{"content":"The default implementation can return results for the following XAML directives: <ph id=\"ph1\">`Key`</ph>; <ph id=\"ph2\">`Name`</ph>; <ph id=\"ph3\">`Uid`</ph>; and <ph id=\"ph4\">`xml:lang`</ph>.","pos":[0,118],"source":"The default implementation can return results for the following XAML directives: `Key`; `Name`; `Uid`; and `xml:lang`."},{"content":"Values for these depend on underlying reflection and might still return <ph id=\"ph1\">`null`</ph> if no aliased property is found.","pos":[119,230],"source":" Values for these depend on underlying reflection and might still return `null` if no aliased property is found."}]},{"pos":[353,558],"content":"Override this method if you are not relying on default internal CLR reflection and are using metadata or other techniques for reporting the XAML type system information or the schema information of a type.","nodes":[{"content":"Override this method if you are not relying on default internal CLR reflection and are using metadata or other techniques for reporting the XAML type system information or the schema information of a type.","pos":[0,205]}]}],"pos":[84832,85397],"yaml":true,"extradata":"MT"},{"content":"The directive for which to find the aliased member.","nodes":[{"pos":[0,51],"content":"The directive for which to find the aliased member.","nodes":[{"content":"The directive for which to find the aliased member.","pos":[0,51]}]}],"pos":[85615,85667],"yaml":true},{"content":"The aliased member, if found; otherwise, `null`.","nodes":[{"pos":[0,48],"content":"The aliased member, if found; otherwise, <ph id=\"ph1\">`null`</ph>.","source":"The aliased member, if found; otherwise, `null`."}],"pos":[85733,85782],"yaml":true},{"content":"Returns an enumerable set that contains all attachable properties that are exposed by this <xref href=\"System.Xaml.XamlType\"></xref>.","nodes":[{"pos":[0,133],"content":"Returns an enumerable set that contains all attachable properties that are exposed by this <ph id=\"ph1\">&lt;xref href=\"System.Xaml.XamlType\"&gt;&lt;/xref&gt;</ph>.","source":"Returns an enumerable set that contains all attachable properties that are exposed by this <xref href=\"System.Xaml.XamlType\"></xref>."}],"pos":[86755,86889],"yaml":true},{"content":"This method can be invoked when a caller gets a value from <xref:System.Xaml.XamlType.GetAllAttachableMembers%2A>.  \n  \n Although <xref:System.Xaml.XamlType.GetAllAttachableMembers%2A> returns a generic collection, this `Lookup` method returns a generic enumerable set.  \n  \n The default implementation uses the internal CLR reflection. When <xref:System.Xaml.XamlType.UnderlyingType%2A> is `null`, the default implementation can use <xref:System.Xaml.XamlType.BaseType%2A>, if it is available. This behavior calls <xref:System.Xaml.XamlType.LookupAllAttachableMembers%2A> recursively to attempt to find a valid base type and returns `null` if no valid base type exists.  \n  \n Override this method if you are not relying on default internal CLR reflection and are using metadata or other techniques for reporting the XAML type system information or schema information of a type. A null return should be reserved for cases where information cannot be determined because of lack of type system or reflection support. If a type is valid and reflection or other techniques are available, but a type does not have attachable members, you should instead return an empty <xref:System.Collections.Generic.IEnumerable%601> set.","nodes":[{"pos":[0,114],"content":"This method can be invoked when a caller gets a value from <xref:System.Xaml.XamlType.GetAllAttachableMembers%2A>.","nodes":[{"content":"This method can be invoked when a caller gets a value from <ph id=\"ph1\">&lt;xref:System.Xaml.XamlType.GetAllAttachableMembers%2A&gt;</ph>.","pos":[0,114],"source":"This method can be invoked when a caller gets a value from <xref:System.Xaml.XamlType.GetAllAttachableMembers%2A>."}]},{"pos":[121,269],"content":"Although <ph id=\"ph1\">&lt;xref:System.Xaml.XamlType.GetAllAttachableMembers%2A&gt;</ph> returns a generic collection, this <ph id=\"ph2\">`Lookup`</ph> method returns a generic enumerable set.","source":"Although <xref:System.Xaml.XamlType.GetAllAttachableMembers%2A> returns a generic collection, this `Lookup` method returns a generic enumerable set."},{"pos":[276,670],"content":"The default implementation uses the internal CLR reflection. When <xref:System.Xaml.XamlType.UnderlyingType%2A> is `null`, the default implementation can use <xref:System.Xaml.XamlType.BaseType%2A>, if it is available. This behavior calls <xref:System.Xaml.XamlType.LookupAllAttachableMembers%2A> recursively to attempt to find a valid base type and returns `null` if no valid base type exists.","nodes":[{"content":"The default implementation uses the internal CLR reflection.","pos":[0,60]},{"content":"When <ph id=\"ph1\">&lt;xref:System.Xaml.XamlType.UnderlyingType%2A&gt;</ph> is <ph id=\"ph2\">`null`</ph>, the default implementation can use <ph id=\"ph3\">&lt;xref:System.Xaml.XamlType.BaseType%2A&gt;</ph>, if it is available.","pos":[61,218],"source":" When <xref:System.Xaml.XamlType.UnderlyingType%2A> is `null`, the default implementation can use <xref:System.Xaml.XamlType.BaseType%2A>, if it is available."},{"content":"This behavior calls <ph id=\"ph1\">&lt;xref:System.Xaml.XamlType.LookupAllAttachableMembers%2A&gt;</ph> recursively to attempt to find a valid base type and returns <ph id=\"ph2\">`null`</ph> if no valid base type exists.","pos":[219,394],"source":" This behavior calls <xref:System.Xaml.XamlType.LookupAllAttachableMembers%2A> recursively to attempt to find a valid base type and returns `null` if no valid base type exists."}]},{"pos":[677,1218],"content":"Override this method if you are not relying on default internal CLR reflection and are using metadata or other techniques for reporting the XAML type system information or schema information of a type. A null return should be reserved for cases where information cannot be determined because of lack of type system or reflection support. If a type is valid and reflection or other techniques are available, but a type does not have attachable members, you should instead return an empty <xref:System.Collections.Generic.IEnumerable%601> set.","nodes":[{"content":"Override this method if you are not relying on default internal CLR reflection and are using metadata or other techniques for reporting the XAML type system information or schema information of a type. A null return should be reserved for cases where information cannot be determined because of lack of type system or reflection support. If a type is valid and reflection or other techniques are available, but a type does not have attachable members, you should instead return an empty <xref:System.Collections.Generic.IEnumerable%601> set.","pos":[0,541],"nodes":[{"content":"Override this method if you are not relying on default internal CLR reflection and are using metadata or other techniques for reporting the XAML type system information or schema information of a type.","pos":[0,201]},{"content":"A null return should be reserved for cases where information cannot be determined because of lack of type system or reflection support.","pos":[202,337]},{"content":"If a type is valid and reflection or other techniques are available, but a type does not have attachable members, you should instead return an empty <ph id=\"ph1\">&lt;xref:System.Collections.Generic.IEnumerable%601&gt;</ph> set.","pos":[338,541],"source":" If a type is valid and reflection or other techniques are available, but a type does not have attachable members, you should instead return an empty <xref:System.Collections.Generic.IEnumerable%601> set."}]}]}],"pos":[86900,88127],"yaml":true,"extradata":"MT"},{"content":"An enumerable set that contains zero or more <xref href=\"System.Xaml.XamlMember\"></xref> values; otherwise, `null`.","nodes":[{"pos":[0,115],"content":"An enumerable set that contains zero or more <ph id=\"ph1\">&lt;xref href=\"System.Xaml.XamlMember\"&gt;&lt;/xref&gt;</ph> values; otherwise, <ph id=\"ph2\">`null`</ph>.","source":"An enumerable set that contains zero or more <xref href=\"System.Xaml.XamlMember\"></xref> values; otherwise, `null`."}],"pos":[88387,88503],"yaml":true},{"content":"Returns an enumerable set that contains all the members that are exposed by this <xref href=\"System.Xaml.XamlType\"></xref>.","nodes":[{"pos":[0,123],"content":"Returns an enumerable set that contains all the members that are exposed by this <ph id=\"ph1\">&lt;xref href=\"System.Xaml.XamlType\"&gt;&lt;/xref&gt;</ph>.","source":"Returns an enumerable set that contains all the members that are exposed by this <xref href=\"System.Xaml.XamlType\"></xref>."}],"pos":[89421,89545],"yaml":true},{"content":"This method can be invoked when a caller gets a value from <xref:System.Xaml.XamlType.GetAllMembers%2A>.  \n  \n Although <xref:System.Xaml.XamlType.GetAllMembers%2A> returns a generic collection, this `Lookup` method returns a generic enumerable set.  \n  \n The default implementation uses the internal CLR reflection. For cases where <xref:System.Xaml.XamlType.UnderlyingType%2A> is `null`, the default implementation can use <xref:System.Xaml.XamlType.BaseType%2A>, if it is available. This behavior calls <xref:System.Xaml.XamlType.LookupAllMembers%2A> recursively to attempt to find a valid base type, and returns `null` if no valid base type exists.  \n  \n Override this method if you are not relying on default internal CLR reflection and are using metadata or other techniques for reporting the XAML type system information or schema information of a type. A null return should be reserved for cases where information cannot be determined because of lack of type system or reflection support. If a type is valid, reflection or other techniques are available; if a type does not have members, you should instead return an empty <xref:System.Collections.Generic.IEnumerable%601> set.  \n  \n Return values for <xref:System.Xaml.XamlType.LookupAllMembers%2A> and <xref:System.Xaml.XamlType.LookupAllAttachableMembers%2A> should be mutually exclusive. If you have a situation where a backing type system property can support a standard instance usage as well as an attachable usage, that member should be reported as two different <xref:System.Xaml.XamlMember> values, with one value appearing in the attachable list and another in the standard members list.","nodes":[{"pos":[0,104],"content":"This method can be invoked when a caller gets a value from <xref:System.Xaml.XamlType.GetAllMembers%2A>.","nodes":[{"content":"This method can be invoked when a caller gets a value from <ph id=\"ph1\">&lt;xref:System.Xaml.XamlType.GetAllMembers%2A&gt;</ph>.","pos":[0,104],"source":"This method can be invoked when a caller gets a value from <xref:System.Xaml.XamlType.GetAllMembers%2A>."}]},{"pos":[111,249],"content":"Although <ph id=\"ph1\">&lt;xref:System.Xaml.XamlType.GetAllMembers%2A&gt;</ph> returns a generic collection, this <ph id=\"ph2\">`Lookup`</ph> method returns a generic enumerable set.","source":"Although <xref:System.Xaml.XamlType.GetAllMembers%2A> returns a generic collection, this `Lookup` method returns a generic enumerable set."},{"pos":[256,652],"content":"The default implementation uses the internal CLR reflection. For cases where <xref:System.Xaml.XamlType.UnderlyingType%2A> is `null`, the default implementation can use <xref:System.Xaml.XamlType.BaseType%2A>, if it is available. This behavior calls <xref:System.Xaml.XamlType.LookupAllMembers%2A> recursively to attempt to find a valid base type, and returns `null` if no valid base type exists.","nodes":[{"content":"The default implementation uses the internal CLR reflection.","pos":[0,60]},{"content":"For cases where <ph id=\"ph1\">&lt;xref:System.Xaml.XamlType.UnderlyingType%2A&gt;</ph> is <ph id=\"ph2\">`null`</ph>, the default implementation can use <ph id=\"ph3\">&lt;xref:System.Xaml.XamlType.BaseType%2A&gt;</ph>, if it is available.","pos":[61,229],"source":" For cases where <xref:System.Xaml.XamlType.UnderlyingType%2A> is `null`, the default implementation can use <xref:System.Xaml.XamlType.BaseType%2A>, if it is available."},{"content":"This behavior calls <ph id=\"ph1\">&lt;xref:System.Xaml.XamlType.LookupAllMembers%2A&gt;</ph> recursively to attempt to find a valid base type, and returns <ph id=\"ph2\">`null`</ph> if no valid base type exists.","pos":[230,396],"source":" This behavior calls <xref:System.Xaml.XamlType.LookupAllMembers%2A> recursively to attempt to find a valid base type, and returns `null` if no valid base type exists."}]},{"pos":[659,1185],"content":"Override this method if you are not relying on default internal CLR reflection and are using metadata or other techniques for reporting the XAML type system information or schema information of a type. A null return should be reserved for cases where information cannot be determined because of lack of type system or reflection support. If a type is valid, reflection or other techniques are available; if a type does not have members, you should instead return an empty <xref:System.Collections.Generic.IEnumerable%601> set.","nodes":[{"content":"Override this method if you are not relying on default internal CLR reflection and are using metadata or other techniques for reporting the XAML type system information or schema information of a type. A null return should be reserved for cases where information cannot be determined because of lack of type system or reflection support. If a type is valid, reflection or other techniques are available; if a type does not have members, you should instead return an empty <xref:System.Collections.Generic.IEnumerable%601> set.","pos":[0,526],"nodes":[{"content":"Override this method if you are not relying on default internal CLR reflection and are using metadata or other techniques for reporting the XAML type system information or schema information of a type.","pos":[0,201]},{"content":"A null return should be reserved for cases where information cannot be determined because of lack of type system or reflection support.","pos":[202,337]},{"content":"If a type is valid, reflection or other techniques are available; if a type does not have members, you should instead return an empty <ph id=\"ph1\">&lt;xref:System.Collections.Generic.IEnumerable%601&gt;</ph> set.","pos":[338,526],"source":" If a type is valid, reflection or other techniques are available; if a type does not have members, you should instead return an empty <xref:System.Collections.Generic.IEnumerable%601> set."}]}]},{"pos":[1192,1656],"content":"Return values for <xref:System.Xaml.XamlType.LookupAllMembers%2A> and <xref:System.Xaml.XamlType.LookupAllAttachableMembers%2A> should be mutually exclusive. If you have a situation where a backing type system property can support a standard instance usage as well as an attachable usage, that member should be reported as two different <xref:System.Xaml.XamlMember> values, with one value appearing in the attachable list and another in the standard members list.","nodes":[{"content":"Return values for <xref:System.Xaml.XamlType.LookupAllMembers%2A> and <xref:System.Xaml.XamlType.LookupAllAttachableMembers%2A> should be mutually exclusive. If you have a situation where a backing type system property can support a standard instance usage as well as an attachable usage, that member should be reported as two different <xref:System.Xaml.XamlMember> values, with one value appearing in the attachable list and another in the standard members list.","pos":[0,464],"nodes":[{"content":"Return values for <ph id=\"ph1\">&lt;xref:System.Xaml.XamlType.LookupAllMembers%2A&gt;</ph> and <ph id=\"ph2\">&lt;xref:System.Xaml.XamlType.LookupAllAttachableMembers%2A&gt;</ph> should be mutually exclusive.","pos":[0,157],"source":"Return values for <xref:System.Xaml.XamlType.LookupAllMembers%2A> and <xref:System.Xaml.XamlType.LookupAllAttachableMembers%2A> should be mutually exclusive."},{"content":"If you have a situation where a backing type system property can support a standard instance usage as well as an attachable usage, that member should be reported as two different <ph id=\"ph1\">&lt;xref:System.Xaml.XamlMember&gt;</ph> values, with one value appearing in the attachable list and another in the standard members list.","pos":[158,464],"source":" If you have a situation where a backing type system property can support a standard instance usage as well as an attachable usage, that member should be reported as two different <xref:System.Xaml.XamlMember> values, with one value appearing in the attachable list and another in the standard members list."}]}]}],"pos":[89556,91223],"yaml":true,"extradata":"MT"},{"content":"An enumerable set that contains zero or more <xref href=\"System.Xaml.XamlMember\"></xref> values.","nodes":[{"pos":[0,96],"content":"An enumerable set that contains zero or more <ph id=\"ph1\">&lt;xref href=\"System.Xaml.XamlMember\"&gt;&lt;/xref&gt;</ph> values.","source":"An enumerable set that contains zero or more <xref href=\"System.Xaml.XamlMember\"></xref> values."}],"pos":[91473,91570],"yaml":true},{"content":"Returns a list of the types that are usable as the <xref href=\"System.Xaml.XamlType.ContentProperty\"></xref> value for this <xref href=\"System.Xaml.XamlType\"></xref>.","nodes":[{"pos":[0,166],"content":"Returns a list of the types that are usable as the <ph id=\"ph1\">&lt;xref href=\"System.Xaml.XamlType.ContentProperty\"&gt;&lt;/xref&gt;</ph> value for this <ph id=\"ph2\">&lt;xref href=\"System.Xaml.XamlType\"&gt;&lt;/xref&gt;</ph>.","source":"Returns a list of the types that are usable as the <xref href=\"System.Xaml.XamlType.ContentProperty\"></xref> value for this <xref href=\"System.Xaml.XamlType\"></xref>."}],"pos":[92532,92699],"yaml":true},{"content":"This method can be invoked when a caller gets a value from <xref:System.Xaml.XamlType.AllowedContentTypes%2A>.  \n  \n Types that evaluate as <xref:System.Xaml.XamlType.CanAssignTo%2A> for a specific content type are not considered multiple types for purposes of <xref:System.Xaml.XamlType.AllowedContentTypes%2A>.  \n  \n The default implementation can use other properties of <xref:System.Xaml.XamlType> (<xref:System.Xaml.XamlType.ContentWrappers%2A>, <xref:System.Xaml.XamlType.ContentProperty%2A>, or <xref:System.Xaml.XamlType.ItemType%2A>) to obtain a result. The `Lookup` overrides for the preceding property list can also be invoked in this determination.  \n  \n Override this method if you are not relying on default internal CLR reflection and are using metadata or other techniques for reporting the XAML type system information or schema information of a type.","nodes":[{"pos":[0,110],"content":"This method can be invoked when a caller gets a value from <xref:System.Xaml.XamlType.AllowedContentTypes%2A>.","nodes":[{"content":"This method can be invoked when a caller gets a value from <ph id=\"ph1\">&lt;xref:System.Xaml.XamlType.AllowedContentTypes%2A&gt;</ph>.","pos":[0,110],"source":"This method can be invoked when a caller gets a value from <xref:System.Xaml.XamlType.AllowedContentTypes%2A>."}]},{"pos":[117,312],"content":"Types that evaluate as <xref:System.Xaml.XamlType.CanAssignTo%2A> for a specific content type are not considered multiple types for purposes of <xref:System.Xaml.XamlType.AllowedContentTypes%2A>.","nodes":[{"content":"Types that evaluate as <ph id=\"ph1\">&lt;xref:System.Xaml.XamlType.CanAssignTo%2A&gt;</ph> for a specific content type are not considered multiple types for purposes of <ph id=\"ph2\">&lt;xref:System.Xaml.XamlType.AllowedContentTypes%2A&gt;</ph>.","pos":[0,195],"source":"Types that evaluate as <xref:System.Xaml.XamlType.CanAssignTo%2A> for a specific content type are not considered multiple types for purposes of <xref:System.Xaml.XamlType.AllowedContentTypes%2A>."}]},{"pos":[319,660],"content":"The default implementation can use other properties of <xref:System.Xaml.XamlType> (<xref:System.Xaml.XamlType.ContentWrappers%2A>, <xref:System.Xaml.XamlType.ContentProperty%2A>, or <xref:System.Xaml.XamlType.ItemType%2A>) to obtain a result. The `Lookup` overrides for the preceding property list can also be invoked in this determination.","nodes":[{"content":"The default implementation can use other properties of <ph id=\"ph1\">&lt;xref:System.Xaml.XamlType&gt;</ph> (<ph id=\"ph2\">&lt;xref:System.Xaml.XamlType.ContentWrappers%2A&gt;</ph>, <ph id=\"ph3\">&lt;xref:System.Xaml.XamlType.ContentProperty%2A&gt;</ph>, or <ph id=\"ph4\">&lt;xref:System.Xaml.XamlType.ItemType%2A&gt;</ph>) to obtain a result.","pos":[0,243],"source":"The default implementation can use other properties of <xref:System.Xaml.XamlType> (<xref:System.Xaml.XamlType.ContentWrappers%2A>, <xref:System.Xaml.XamlType.ContentProperty%2A>, or <xref:System.Xaml.XamlType.ItemType%2A>) to obtain a result."},{"content":"The <ph id=\"ph1\">`Lookup`</ph> overrides for the preceding property list can also be invoked in this determination.","pos":[244,341],"source":" The `Lookup` overrides for the preceding property list can also be invoked in this determination."}]},{"pos":[667,868],"content":"Override this method if you are not relying on default internal CLR reflection and are using metadata or other techniques for reporting the XAML type system information or schema information of a type.","nodes":[{"content":"Override this method if you are not relying on default internal CLR reflection and are using metadata or other techniques for reporting the XAML type system information or schema information of a type.","pos":[0,201]}]}],"pos":[92710,93587],"yaml":true,"extradata":"MT"},{"content":"A list of possible content types.","nodes":[{"pos":[0,33],"content":"A list of possible content types.","nodes":[{"content":"A list of possible content types.","pos":[0,33]}]}],"pos":[93830,93864],"yaml":true},{"content":"Returns a <xref href=\"System.Xaml.XamlMember\"></xref> for a specific named attachable from this <xref href=\"System.Xaml.XamlType\"></xref>.","nodes":[{"pos":[0,138],"content":"Returns a <ph id=\"ph1\">&lt;xref href=\"System.Xaml.XamlMember\"&gt;&lt;/xref&gt;</ph> for a specific named attachable from this <ph id=\"ph2\">&lt;xref href=\"System.Xaml.XamlType\"&gt;&lt;/xref&gt;</ph>.","source":"Returns a <xref href=\"System.Xaml.XamlMember\"></xref> for a specific named attachable from this <xref href=\"System.Xaml.XamlType\"></xref>."}],"pos":[94880,95019],"yaml":true},{"content":"This method can be invoked when a caller gets a value from <xref:System.Xaml.XamlType.GetAttachableMember%2A>.  \n  \n The default implementation uses the internal CLR reflection. When <xref:System.Xaml.XamlType.UnderlyingType%2A> is `null`, the default implementation can use <xref:System.Xaml.XamlType.BaseType%2A>, if it is available. This behavior calls <xref:System.Xaml.XamlType.LookupAttachableMember%2A> recursively to attempt to find a valid base type and returns `null` if no valid base type exists.  \n  \n Override this method if you are not relying on default internal CLR reflection and are using metadata or other techniques for reporting the XAML type system information or schema information of a type.  \n  \n> [!IMPORTANT]\n>  <xref:System.Xaml.XamlType.LookupAttachableMember%2A> is virtual, and therefore, can be overridden. The override has the potential (whether for malicious purposes or otherwise) to change the reported members of a XAML type so that they no longer align in an expected way with the <xref:System.ComponentModel.TypeDescriptor> `Get*` information about the underlying CLR type. For any security-critical checks of member reporting, use the underlying CLR type instead.","nodes":[{"pos":[0,110],"content":"This method can be invoked when a caller gets a value from <xref:System.Xaml.XamlType.GetAttachableMember%2A>.","nodes":[{"content":"This method can be invoked when a caller gets a value from <ph id=\"ph1\">&lt;xref:System.Xaml.XamlType.GetAttachableMember%2A&gt;</ph>.","pos":[0,110],"source":"This method can be invoked when a caller gets a value from <xref:System.Xaml.XamlType.GetAttachableMember%2A>."}]},{"pos":[117,507],"content":"The default implementation uses the internal CLR reflection. When <xref:System.Xaml.XamlType.UnderlyingType%2A> is `null`, the default implementation can use <xref:System.Xaml.XamlType.BaseType%2A>, if it is available. This behavior calls <xref:System.Xaml.XamlType.LookupAttachableMember%2A> recursively to attempt to find a valid base type and returns `null` if no valid base type exists.","nodes":[{"content":"The default implementation uses the internal CLR reflection.","pos":[0,60]},{"content":"When <ph id=\"ph1\">&lt;xref:System.Xaml.XamlType.UnderlyingType%2A&gt;</ph> is <ph id=\"ph2\">`null`</ph>, the default implementation can use <ph id=\"ph3\">&lt;xref:System.Xaml.XamlType.BaseType%2A&gt;</ph>, if it is available.","pos":[61,218],"source":" When <xref:System.Xaml.XamlType.UnderlyingType%2A> is `null`, the default implementation can use <xref:System.Xaml.XamlType.BaseType%2A>, if it is available."},{"content":"This behavior calls <ph id=\"ph1\">&lt;xref:System.Xaml.XamlType.LookupAttachableMember%2A&gt;</ph> recursively to attempt to find a valid base type and returns <ph id=\"ph2\">`null`</ph> if no valid base type exists.","pos":[219,390],"source":" This behavior calls <xref:System.Xaml.XamlType.LookupAttachableMember%2A> recursively to attempt to find a valid base type and returns `null` if no valid base type exists."}]},{"pos":[514,715],"content":"Override this method if you are not relying on default internal CLR reflection and are using metadata or other techniques for reporting the XAML type system information or schema information of a type.","nodes":[{"content":"Override this method if you are not relying on default internal CLR reflection and are using metadata or other techniques for reporting the XAML type system information or schema information of a type.","pos":[0,201]}]},{"pos":[723,1203],"content":"[!IMPORTANT]\n <xref:System.Xaml.XamlType.LookupAttachableMember%2A> is virtual, and therefore, can be overridden. The override has the potential (whether for malicious purposes or otherwise) to change the reported members of a XAML type so that they no longer align in an expected way with the <xref:System.ComponentModel.TypeDescriptor> `Get*` information about the underlying CLR type. For any security-critical checks of member reporting, use the underlying CLR type instead.","leadings":["","> "],"nodes":[{"content":" <xref:System.Xaml.XamlType.LookupAttachableMember%2A> is virtual, and therefore, can be overridden. The override has the potential (whether for malicious purposes or otherwise) to change the reported members of a XAML type so that they no longer align in an expected way with the <xref:System.ComponentModel.TypeDescriptor> `Get*` information about the underlying CLR type. For any security-critical checks of member reporting, use the underlying CLR type instead.","pos":[13,478],"nodes":[{"content":"<ph id=\"ph1\">&lt;xref:System.Xaml.XamlType.LookupAttachableMember%2A&gt;</ph> is virtual, and therefore, can be overridden.","pos":[1,100],"source":" <xref:System.Xaml.XamlType.LookupAttachableMember%2A> is virtual, and therefore, can be overridden."},{"content":"The override has the potential (whether for malicious purposes or otherwise) to change the reported members of a XAML type so that they no longer align in an expected way with the <ph id=\"ph1\">&lt;xref:System.ComponentModel.TypeDescriptor&gt;</ph> <ph id=\"ph2\">`Get*`</ph> information about the underlying CLR type.","pos":[101,374],"source":" The override has the potential (whether for malicious purposes or otherwise) to change the reported members of a XAML type so that they no longer align in an expected way with the <xref:System.ComponentModel.TypeDescriptor> `Get*` information about the underlying CLR type."},{"content":"For any security-critical checks of member reporting, use the underlying CLR type instead.","pos":[375,465]}]}]}],"pos":[95030,96243],"yaml":true,"extradata":"MT"},{"content":"The name of the attachable member to get, in <code>ownerTypeName.MemberName</code> form.","nodes":[{"pos":[0,88],"content":"The name of the attachable member to get, in <bpt id=\"p1\">&lt;code&gt;</bpt><ph id=\"ph1\">ownerTypeName.MemberName</ph><ept id=\"p1\">&lt;/code&gt;</ept> form.","source":"The name of the attachable member to get, in <code>ownerTypeName.MemberName</code> form."}],"pos":[96421,96510],"yaml":true},{"content":"A <xref href=\"System.Xaml.XamlMember\"></xref> object for the requested attachable member; otherwise, `null`, if no attachable member by that name exists.","nodes":[{"pos":[0,153],"content":"A <ph id=\"ph1\">&lt;xref href=\"System.Xaml.XamlMember\"&gt;&lt;/xref&gt;</ph> object for the requested attachable member; otherwise, <ph id=\"ph2\">`null`</ph>, if no attachable member by that name exists.","source":"A <xref href=\"System.Xaml.XamlMember\"></xref> object for the requested attachable member; otherwise, `null`, if no attachable member by that name exists."}],"pos":[96576,96730],"yaml":true},{"content":"Returns the <xref href=\"System.Xaml.XamlType\"></xref> for the immediate base type of this XAML type. Determination of this value is based on the underlying type of this <xref href=\"System.Xaml.XamlType\"></xref> and schema context.","nodes":[{"pos":[0,230],"content":"Returns the <xref href=\"System.Xaml.XamlType\"></xref> for the immediate base type of this XAML type. Determination of this value is based on the underlying type of this <xref href=\"System.Xaml.XamlType\"></xref> and schema context.","nodes":[{"content":"Returns the <ph id=\"ph1\">&lt;xref href=\"System.Xaml.XamlType\"&gt;&lt;/xref&gt;</ph> for the immediate base type of this XAML type.","pos":[0,100],"source":"Returns the <xref href=\"System.Xaml.XamlType\"></xref> for the immediate base type of this XAML type."},{"content":"Determination of this value is based on the underlying type of this <ph id=\"ph1\">&lt;xref href=\"System.Xaml.XamlType\"&gt;&lt;/xref&gt;</ph> and schema context.","pos":[101,230],"source":" Determination of this value is based on the underlying type of this <xref href=\"System.Xaml.XamlType\"></xref> and schema context."}]}],"pos":[97632,97863],"yaml":true},{"content":"This method can be invoked when a caller gets a value from <xref:System.Xaml.XamlType.BaseType%2A>.  \n  \n The default implementation might return an internal constant that represents the <xref:System.Object> if <xref:System.Xaml.XamlType.UnderlyingType%2A> is `null`.  \n  \n Override this method if you are not relying on default internal CLR reflection and are using metadata or other techniques for reporting the XAML type system information or schema information of a type.  \n  \n> [!IMPORTANT]\n>  <xref:System.Xaml.XamlType.LookupBaseType%2A> is virtual, and therefore, can be overridden. The override has the potential (whether for malicious purposes or otherwise) to change the reported type information about a XAML type so that it no longer aligns in an expected way with the type system information of its underlying CLR type. For any security-critical checks of assignment operations and access, use the underlying CLR type instead.","nodes":[{"pos":[0,99],"content":"This method can be invoked when a caller gets a value from <xref:System.Xaml.XamlType.BaseType%2A>.","nodes":[{"content":"This method can be invoked when a caller gets a value from <ph id=\"ph1\">&lt;xref:System.Xaml.XamlType.BaseType%2A&gt;</ph>.","pos":[0,99],"source":"This method can be invoked when a caller gets a value from <xref:System.Xaml.XamlType.BaseType%2A>."}]},{"pos":[106,267],"content":"The default implementation might return an internal constant that represents the <ph id=\"ph1\">&lt;xref:System.Object&gt;</ph> if <ph id=\"ph2\">&lt;xref:System.Xaml.XamlType.UnderlyingType%2A&gt;</ph> is <ph id=\"ph3\">`null`</ph>.","source":"The default implementation might return an internal constant that represents the <xref:System.Object> if <xref:System.Xaml.XamlType.UnderlyingType%2A> is `null`."},{"pos":[274,475],"content":"Override this method if you are not relying on default internal CLR reflection and are using metadata or other techniques for reporting the XAML type system information or schema information of a type.","nodes":[{"content":"Override this method if you are not relying on default internal CLR reflection and are using metadata or other techniques for reporting the XAML type system information or schema information of a type.","pos":[0,201]}]},{"pos":[483,940],"content":"[!IMPORTANT]\n <xref:System.Xaml.XamlType.LookupBaseType%2A> is virtual, and therefore, can be overridden. The override has the potential (whether for malicious purposes or otherwise) to change the reported type information about a XAML type so that it no longer aligns in an expected way with the type system information of its underlying CLR type. For any security-critical checks of assignment operations and access, use the underlying CLR type instead.","leadings":["","> "],"nodes":[{"content":" <xref:System.Xaml.XamlType.LookupBaseType%2A> is virtual, and therefore, can be overridden. The override has the potential (whether for malicious purposes or otherwise) to change the reported type information about a XAML type so that it no longer aligns in an expected way with the type system information of its underlying CLR type. For any security-critical checks of assignment operations and access, use the underlying CLR type instead.","pos":[13,455],"nodes":[{"content":"<ph id=\"ph1\">&lt;xref:System.Xaml.XamlType.LookupBaseType%2A&gt;</ph> is virtual, and therefore, can be overridden.","pos":[1,92],"source":" <xref:System.Xaml.XamlType.LookupBaseType%2A> is virtual, and therefore, can be overridden."},{"content":"The override has the potential (whether for malicious purposes or otherwise) to change the reported type information about a XAML type so that it no longer aligns in an expected way with the type system information of its underlying CLR type.","pos":[93,335]},{"content":"For any security-critical checks of assignment operations and access, use the underlying CLR type instead.","pos":[336,442]}]}]}],"pos":[97874,98824],"yaml":true,"extradata":"MT"},{"content":"The <xref href=\"System.Xaml.XamlType\"></xref> for the immediate base type of this XAML type.","nodes":[{"pos":[0,92],"content":"The <ph id=\"ph1\">&lt;xref href=\"System.Xaml.XamlType\"&gt;&lt;/xref&gt;</ph> for the immediate base type of this XAML type.","source":"The <xref href=\"System.Xaml.XamlType\"></xref> for the immediate base type of this XAML type."}],"pos":[98988,99081],"yaml":true},{"content":"Returns a value of the <xref href=\"System.Xaml.Schema.XamlCollectionKind\"></xref> enumeration that declares which specific collection type this <xref href=\"System.Xaml.XamlType\"></xref> uses.","nodes":[{"pos":[0,191],"content":"Returns a value of the <ph id=\"ph1\">&lt;xref href=\"System.Xaml.Schema.XamlCollectionKind\"&gt;&lt;/xref&gt;</ph> enumeration that declares which specific collection type this <ph id=\"ph2\">&lt;xref href=\"System.Xaml.XamlType\"&gt;&lt;/xref&gt;</ph> uses.","source":"Returns a value of the <xref href=\"System.Xaml.Schema.XamlCollectionKind\"></xref> enumeration that declares which specific collection type this <xref href=\"System.Xaml.XamlType\"></xref> uses."}],"pos":[100011,100203],"yaml":true},{"content":"This method is invoked by an internal private method (no public `CollectionKind` or `GetCollectionKind` API exists on <xref:System.Xaml.XamlType>).  \n  \n The default implementation uses the internal CLR reflection. For cases where <xref:System.Xaml.XamlType.UnderlyingType%2A> is `null`, the default implementation can use <xref:System.Xaml.XamlType.BaseType%2A>, if it is available. This behavior indirectly calls <xref:System.Xaml.XamlType.LookupCollectionKind%2A> recursively to attempt to find a valid base type; it returns <xref:System.Xaml.Schema.XamlCollectionKind?displayProperty=fullName> if no valid base type exists. In general, the default implementation attempts to find the `Add` method of the underlying type by reflection. If found, the <xref:System.Reflection.MethodInfo> of the `Add` method is enough information to determine which <xref:System.Xaml.Schema.XamlCollectionKind> value should be returned. Otherwise, it returns <xref:System.Xaml.Schema.XamlCollectionKind?displayProperty=fullName>.  \n  \n Override this method if you are not relying on default internal CLR reflection and are using metadata or other techniques for reporting the XAML type system information or schema information of a type.","nodes":[{"pos":[0,147],"content":"This method is invoked by an internal private method (no public <ph id=\"ph1\">`CollectionKind`</ph> or <ph id=\"ph2\">`GetCollectionKind`</ph> API exists on <ph id=\"ph3\">&lt;xref:System.Xaml.XamlType&gt;</ph>).","source":"This method is invoked by an internal private method (no public `CollectionKind` or `GetCollectionKind` API exists on <xref:System.Xaml.XamlType>)."},{"pos":[154,1013],"content":"The default implementation uses the internal CLR reflection. For cases where <xref:System.Xaml.XamlType.UnderlyingType%2A> is `null`, the default implementation can use <xref:System.Xaml.XamlType.BaseType%2A>, if it is available. This behavior indirectly calls <xref:System.Xaml.XamlType.LookupCollectionKind%2A> recursively to attempt to find a valid base type; it returns <xref:System.Xaml.Schema.XamlCollectionKind?displayProperty=fullName> if no valid base type exists. In general, the default implementation attempts to find the `Add` method of the underlying type by reflection. If found, the <xref:System.Reflection.MethodInfo> of the `Add` method is enough information to determine which <xref:System.Xaml.Schema.XamlCollectionKind> value should be returned. Otherwise, it returns <xref:System.Xaml.Schema.XamlCollectionKind?displayProperty=fullName>.","nodes":[{"content":"The default implementation uses the internal CLR reflection.","pos":[0,60]},{"content":"For cases where <ph id=\"ph1\">&lt;xref:System.Xaml.XamlType.UnderlyingType%2A&gt;</ph> is <ph id=\"ph2\">`null`</ph>, the default implementation can use <ph id=\"ph3\">&lt;xref:System.Xaml.XamlType.BaseType%2A&gt;</ph>, if it is available.","pos":[61,229],"source":" For cases where <xref:System.Xaml.XamlType.UnderlyingType%2A> is `null`, the default implementation can use <xref:System.Xaml.XamlType.BaseType%2A>, if it is available."},{"content":"This behavior indirectly calls <ph id=\"ph1\">&lt;xref:System.Xaml.XamlType.LookupCollectionKind%2A&gt;</ph> recursively to attempt to find a valid base type; it returns <ph id=\"ph2\">&lt;xref:System.Xaml.Schema.XamlCollectionKind?displayProperty=fullName&gt;</ph> if no valid base type exists.","pos":[230,473],"source":" This behavior indirectly calls <xref:System.Xaml.XamlType.LookupCollectionKind%2A> recursively to attempt to find a valid base type; it returns <xref:System.Xaml.Schema.XamlCollectionKind?displayProperty=fullName> if no valid base type exists."},{"content":"In general, the default implementation attempts to find the <ph id=\"ph1\">`Add`</ph> method of the underlying type by reflection.","pos":[474,584],"source":" In general, the default implementation attempts to find the `Add` method of the underlying type by reflection."},{"content":"If found, the <ph id=\"ph1\">&lt;xref:System.Reflection.MethodInfo&gt;</ph> of the <ph id=\"ph2\">`Add`</ph> method is enough information to determine which <ph id=\"ph3\">&lt;xref:System.Xaml.Schema.XamlCollectionKind&gt;</ph> value should be returned.","pos":[585,766],"source":" If found, the <xref:System.Reflection.MethodInfo> of the `Add` method is enough information to determine which <xref:System.Xaml.Schema.XamlCollectionKind> value should be returned."},{"content":"Otherwise, it returns <ph id=\"ph1\">&lt;xref:System.Xaml.Schema.XamlCollectionKind?displayProperty=fullName&gt;</ph>.","pos":[767,859],"source":" Otherwise, it returns <xref:System.Xaml.Schema.XamlCollectionKind?displayProperty=fullName>."}]},{"pos":[1020,1221],"content":"Override this method if you are not relying on default internal CLR reflection and are using metadata or other techniques for reporting the XAML type system information or schema information of a type.","nodes":[{"content":"Override this method if you are not relying on default internal CLR reflection and are using metadata or other techniques for reporting the XAML type system information or schema information of a type.","pos":[0,201]}]}],"pos":[100214,101442],"yaml":true,"extradata":"MT"},{"content":"A value of the <xref href=\"System.Xaml.Schema.XamlCollectionKind\"></xref> enumeration.","nodes":[{"pos":[0,86],"content":"A value of the <ph id=\"ph1\">&lt;xref href=\"System.Xaml.Schema.XamlCollectionKind\"&gt;&lt;/xref&gt;</ph> enumeration.","source":"A value of the <xref href=\"System.Xaml.Schema.XamlCollectionKind\"></xref> enumeration."}],"pos":[101646,101733],"yaml":true},{"content":"Returns a value that indicates whether this <xref href=\"System.Xaml.XamlType\"></xref> must have arguments (generic constraints through `x:TypeArguments`, initialization text, or other XAML techniques) to construct a valid instance of the type.","nodes":[{"pos":[0,243],"content":"Returns a value that indicates whether this <ph id=\"ph1\">&lt;xref href=\"System.Xaml.XamlType\"&gt;&lt;/xref&gt;</ph> must have arguments (generic constraints through <ph id=\"ph2\">`x:TypeArguments`</ph>, initialization text, or other XAML techniques) to construct a valid instance of the type.","source":"Returns a value that indicates whether this <xref href=\"System.Xaml.XamlType\"></xref> must have arguments (generic constraints through `x:TypeArguments`, initialization text, or other XAML techniques) to construct a valid instance of the type."}],"pos":[102759,103003],"yaml":true},{"content":"This method can be invoked when a caller gets a value from <xref:System.Xaml.XamlType.ConstructionRequiresArguments%2A>.  \n  \n The default implementation returns `false` for types considered value types in the CLR type system. For other than value types, CLR reflection <xref:System.Reflection.ConstructorInfo> is used to determine whether a default constructor exists.  \n  \n Override this method if you are not relying on default internal CLR reflection and are using metadata or other techniques for reporting the XAML type system information or schema information of a type.","nodes":[{"pos":[0,120],"content":"This method can be invoked when a caller gets a value from <xref:System.Xaml.XamlType.ConstructionRequiresArguments%2A>.","nodes":[{"content":"This method can be invoked when a caller gets a value from <ph id=\"ph1\">&lt;xref:System.Xaml.XamlType.ConstructionRequiresArguments%2A&gt;</ph>.","pos":[0,120],"source":"This method can be invoked when a caller gets a value from <xref:System.Xaml.XamlType.ConstructionRequiresArguments%2A>."}]},{"pos":[127,369],"content":"The default implementation returns `false` for types considered value types in the CLR type system. For other than value types, CLR reflection <xref:System.Reflection.ConstructorInfo> is used to determine whether a default constructor exists.","nodes":[{"content":"The default implementation returns <ph id=\"ph1\">`false`</ph> for types considered value types in the CLR type system.","pos":[0,99],"source":"The default implementation returns `false` for types considered value types in the CLR type system."},{"content":"For other than value types, CLR reflection <ph id=\"ph1\">&lt;xref:System.Reflection.ConstructorInfo&gt;</ph> is used to determine whether a default constructor exists.","pos":[100,242],"source":" For other than value types, CLR reflection <xref:System.Reflection.ConstructorInfo> is used to determine whether a default constructor exists."}]},{"pos":[376,577],"content":"Override this method if you are not relying on default internal CLR reflection and are using metadata or other techniques for reporting the XAML type system information or schema information of a type.","nodes":[{"content":"Override this method if you are not relying on default internal CLR reflection and are using metadata or other techniques for reporting the XAML type system information or schema information of a type.","pos":[0,201]}]}],"pos":[103014,103598],"yaml":true,"extradata":"MT"},{"content":"`true` if construction of an instance requires some argument value; otherwise, false.","nodes":[{"pos":[0,85],"content":"<ph id=\"ph1\">`true`</ph> if construction of an instance requires some argument value; otherwise, false.","source":"`true` if construction of an instance requires some argument value; otherwise, false."}],"pos":[103761,103849],"yaml":true},{"content":"Returns <xref href=\"System.Xaml.XamlMember\"></xref> information for the content property of this <xref href=\"System.Xaml.XamlType\"></xref>.","nodes":[{"pos":[0,139],"content":"Returns <ph id=\"ph1\">&lt;xref href=\"System.Xaml.XamlMember\"&gt;&lt;/xref&gt;</ph> information for the content property of this <ph id=\"ph2\">&lt;xref href=\"System.Xaml.XamlType\"&gt;&lt;/xref&gt;</ph>.","source":"Returns <xref href=\"System.Xaml.XamlMember\"></xref> information for the content property of this <xref href=\"System.Xaml.XamlType\"></xref>."}],"pos":[104806,104946],"yaml":true},{"content":"This method can be invoked when a caller gets a value from <xref:System.Xaml.XamlType.ContentProperty%2A>.  \n  \n The default implementation checks for <xref:System.Windows.Markup.ContentPropertyAttribute> on the type definition. It can also check <xref:System.Xaml.XamlType.BaseType%2A> for the attribute if no attribute is found on the immediate underlying type. If these checks do not discover a content type, the default implementation returns `null`.  \n  \n Override this method if you are not relying on default internal CLR reflection and are using metadata or other techniques for reporting the XAML type system information or schema information of a type.","nodes":[{"pos":[0,106],"content":"This method can be invoked when a caller gets a value from <xref:System.Xaml.XamlType.ContentProperty%2A>.","nodes":[{"content":"This method can be invoked when a caller gets a value from <ph id=\"ph1\">&lt;xref:System.Xaml.XamlType.ContentProperty%2A&gt;</ph>.","pos":[0,106],"source":"This method can be invoked when a caller gets a value from <xref:System.Xaml.XamlType.ContentProperty%2A>."}]},{"pos":[113,454],"content":"The default implementation checks for <xref:System.Windows.Markup.ContentPropertyAttribute> on the type definition. It can also check <xref:System.Xaml.XamlType.BaseType%2A> for the attribute if no attribute is found on the immediate underlying type. If these checks do not discover a content type, the default implementation returns `null`.","nodes":[{"content":"The default implementation checks for <ph id=\"ph1\">&lt;xref:System.Windows.Markup.ContentPropertyAttribute&gt;</ph> on the type definition.","pos":[0,115],"source":"The default implementation checks for <xref:System.Windows.Markup.ContentPropertyAttribute> on the type definition."},{"content":"It can also check <ph id=\"ph1\">&lt;xref:System.Xaml.XamlType.BaseType%2A&gt;</ph> for the attribute if no attribute is found on the immediate underlying type.","pos":[116,250],"source":" It can also check <xref:System.Xaml.XamlType.BaseType%2A> for the attribute if no attribute is found on the immediate underlying type."},{"content":"If these checks do not discover a content type, the default implementation returns <ph id=\"ph1\">`null`</ph>.","pos":[251,341],"source":" If these checks do not discover a content type, the default implementation returns `null`."}]},{"pos":[461,662],"content":"Override this method if you are not relying on default internal CLR reflection and are using metadata or other techniques for reporting the XAML type system information or schema information of a type.","nodes":[{"content":"Override this method if you are not relying on default internal CLR reflection and are using metadata or other techniques for reporting the XAML type system information or schema information of a type.","pos":[0,201]}]}],"pos":[104957,105626],"yaml":true,"extradata":"MT"},{"content":"<xref href=\"System.Xaml.XamlMember\"></xref> information for the content property of this <xref href=\"System.Xaml.XamlType\"></xref>. May be `null`.","nodes":[{"pos":[0,146],"content":"<xref href=\"System.Xaml.XamlMember\"></xref> information for the content property of this <xref href=\"System.Xaml.XamlType\"></xref>. May be `null`.","nodes":[{"content":"<ph id=\"ph1\">&lt;xref href=\"System.Xaml.XamlMember\"&gt;&lt;/xref&gt;</ph> information for the content property of this <ph id=\"ph2\">&lt;xref href=\"System.Xaml.XamlType\"&gt;&lt;/xref&gt;</ph>.","pos":[0,131],"source":"<xref href=\"System.Xaml.XamlMember\"></xref> information for the content property of this <xref href=\"System.Xaml.XamlType\"></xref>."},{"content":"May be <ph id=\"ph1\">`null`</ph>.","pos":[132,146],"source":" May be `null`."}]}],"pos":[105801,105948],"yaml":true},{"content":"Gets a list of <xref href=\"System.Xaml.XamlType\"></xref> values that represent the content wrappers for this <xref href=\"System.Xaml.XamlType\"></xref>.","nodes":[{"pos":[0,151],"content":"Gets a list of <ph id=\"ph1\">&lt;xref href=\"System.Xaml.XamlType\"&gt;&lt;/xref&gt;</ph> values that represent the content wrappers for this <ph id=\"ph2\">&lt;xref href=\"System.Xaml.XamlType\"&gt;&lt;/xref&gt;</ph>.","source":"Gets a list of <xref href=\"System.Xaml.XamlType\"></xref> values that represent the content wrappers for this <xref href=\"System.Xaml.XamlType\"></xref>."}],"pos":[106891,107043],"yaml":true},{"content":"A content wrapper is a class that represents the content collection type when the types that are used in that collection are not contiguous to the type system. The types of collection items for the content wrapper are expected to be limited in some manner beyond <xref:System.Object> or a neutral object equivalent. However, this limitation is only enforced by the design or purpose of the properties that use that type, and not by the type system. More than one content wrapper can exist on a type.  \n  \n For an example class and scenario from the WPF XAML implementation, see <xref:System.Windows.Documents.InlineCollection>.","nodes":[{"pos":[0,499],"content":"A content wrapper is a class that represents the content collection type when the types that are used in that collection are not contiguous to the type system. The types of collection items for the content wrapper are expected to be limited in some manner beyond <xref:System.Object> or a neutral object equivalent. However, this limitation is only enforced by the design or purpose of the properties that use that type, and not by the type system. More than one content wrapper can exist on a type.","nodes":[{"content":"A content wrapper is a class that represents the content collection type when the types that are used in that collection are not contiguous to the type system. The types of collection items for the content wrapper are expected to be limited in some manner beyond <xref:System.Object> or a neutral object equivalent. However, this limitation is only enforced by the design or purpose of the properties that use that type, and not by the type system. More than one content wrapper can exist on a type.","pos":[0,499],"nodes":[{"content":"A content wrapper is a class that represents the content collection type when the types that are used in that collection are not contiguous to the type system.","pos":[0,159]},{"content":"The types of collection items for the content wrapper are expected to be limited in some manner beyond <ph id=\"ph1\">&lt;xref:System.Object&gt;</ph> or a neutral object equivalent.","pos":[160,315],"source":" The types of collection items for the content wrapper are expected to be limited in some manner beyond <xref:System.Object> or a neutral object equivalent."},{"content":"However, this limitation is only enforced by the design or purpose of the properties that use that type, and not by the type system.","pos":[316,448]},{"content":"More than one content wrapper can exist on a type.","pos":[449,499]}]}]},{"pos":[506,627],"content":"For an example class and scenario from the WPF XAML implementation, see <xref:System.Windows.Documents.InlineCollection>.","nodes":[{"content":"For an example class and scenario from the WPF XAML implementation, see <ph id=\"ph1\">&lt;xref:System.Windows.Documents.InlineCollection&gt;</ph>.","pos":[0,121],"source":"For an example class and scenario from the WPF XAML implementation, see <xref:System.Windows.Documents.InlineCollection>."}]}],"pos":[107054,107686],"yaml":true,"extradata":"MT"},{"content":"A list of <xref href=\"System.Xaml.XamlType\"></xref> values that represent the content wrappers for this <xref href=\"System.Xaml.XamlType\"></xref>.","nodes":[{"pos":[0,146],"content":"A list of <ph id=\"ph1\">&lt;xref href=\"System.Xaml.XamlType\"&gt;&lt;/xref&gt;</ph> values that represent the content wrappers for this <ph id=\"ph2\">&lt;xref href=\"System.Xaml.XamlType\"&gt;&lt;/xref&gt;</ph>.","source":"A list of <xref href=\"System.Xaml.XamlType\"></xref> values that represent the content wrappers for this <xref href=\"System.Xaml.XamlType\"></xref>."}],"pos":[107925,108072],"yaml":true},{"content":"When implemented in a derived class, returns an <xref href=\"System.Reflection.ICustomAttributeProvider\"></xref> implementation.","nodes":[{"pos":[0,127],"content":"When implemented in a derived class, returns an <ph id=\"ph1\">&lt;xref href=\"System.Reflection.ICustomAttributeProvider\"&gt;&lt;/xref&gt;</ph> implementation.","source":"When implemented in a derived class, returns an <xref href=\"System.Reflection.ICustomAttributeProvider\"></xref> implementation."}],"pos":[109063,109191],"yaml":true},{"content":"Override this method to provide the internal reflection with an alternative way to obtain CLR attribute values. In absence of an override, the internal reflector uses typical CLR reflection logic.  \n  \n The default implementation returns `null`.","nodes":[{"pos":[0,196],"content":"Override this method to provide the internal reflection with an alternative way to obtain CLR attribute values. In absence of an override, the internal reflector uses typical CLR reflection logic.","nodes":[{"content":"Override this method to provide the internal reflection with an alternative way to obtain CLR attribute values. In absence of an override, the internal reflector uses typical CLR reflection logic.","pos":[0,196],"nodes":[{"content":"Override this method to provide the internal reflection with an alternative way to obtain CLR attribute values.","pos":[0,111]},{"content":"In absence of an override, the internal reflector uses typical CLR reflection logic.","pos":[112,196]}]}]},{"pos":[203,245],"content":"The default implementation returns <ph id=\"ph1\">`null`</ph>.","source":"The default implementation returns `null`."}],"pos":[109202,109452],"yaml":true,"extradata":"MT"},{"content":"An <xref href=\"System.Reflection.ICustomAttributeProvider\"></xref> implementation.","nodes":[{"pos":[0,82],"content":"An <ph id=\"ph1\">&lt;xref href=\"System.Reflection.ICustomAttributeProvider\"&gt;&lt;/xref&gt;</ph> implementation.","source":"An <xref href=\"System.Reflection.ICustomAttributeProvider\"></xref> implementation."}],"pos":[109675,109758],"yaml":true},{"content":"Returns a <xref href=\"System.Xaml.Schema.XamlValueConverter`1\"></xref> object, which is used for deferred loading of XAML-declared objects.","nodes":[{"pos":[0,139],"content":"Returns a <ph id=\"ph1\">&lt;xref href=\"System.Xaml.Schema.XamlValueConverter`1\"&gt;&lt;/xref&gt;</ph> object, which is used for deferred loading of XAML-declared objects.","source":"Returns a <xref href=\"System.Xaml.Schema.XamlValueConverter`1\"></xref> object, which is used for deferred loading of XAML-declared objects."}],"pos":[110709,110849],"yaml":true},{"content":"This method can be invoked when a caller gets a value from <xref:System.Xaml.XamlType.DeferringLoader%2A>. Override this method if you want <xref:System.Xaml.XamlType.DeferringLoader%2A> to return a different value than is enabled by default internal reflection and are also providing custom <xref:System.Xaml.Schema.XamlTypeInvoker> information.  \n  \n The default implementation returns an object on the basis of reading <xref:System.Windows.Markup.XamlDeferLoadAttribute>. It can also  check <xref:System.Xaml.XamlType.BaseType%2A> for the attribute if no attribute is found on the immediate underlying type. If a value is unavailable, this method returns `null`.","nodes":[{"pos":[0,346],"content":"This method can be invoked when a caller gets a value from <xref:System.Xaml.XamlType.DeferringLoader%2A>. Override this method if you want <xref:System.Xaml.XamlType.DeferringLoader%2A> to return a different value than is enabled by default internal reflection and are also providing custom <xref:System.Xaml.Schema.XamlTypeInvoker> information.","nodes":[{"content":"This method can be invoked when a caller gets a value from <xref:System.Xaml.XamlType.DeferringLoader%2A>. Override this method if you want <xref:System.Xaml.XamlType.DeferringLoader%2A> to return a different value than is enabled by default internal reflection and are also providing custom <xref:System.Xaml.Schema.XamlTypeInvoker> information.","pos":[0,346],"nodes":[{"content":"This method can be invoked when a caller gets a value from <ph id=\"ph1\">&lt;xref:System.Xaml.XamlType.DeferringLoader%2A&gt;</ph>.","pos":[0,106],"source":"This method can be invoked when a caller gets a value from <xref:System.Xaml.XamlType.DeferringLoader%2A>."},{"content":"Override this method if you want <ph id=\"ph1\">&lt;xref:System.Xaml.XamlType.DeferringLoader%2A&gt;</ph> to return a different value than is enabled by default internal reflection and are also providing custom <ph id=\"ph2\">&lt;xref:System.Xaml.Schema.XamlTypeInvoker&gt;</ph> information.","pos":[107,346],"source":" Override this method if you want <xref:System.Xaml.XamlType.DeferringLoader%2A> to return a different value than is enabled by default internal reflection and are also providing custom <xref:System.Xaml.Schema.XamlTypeInvoker> information."}]}]},{"pos":[353,665],"content":"The default implementation returns an object on the basis of reading <xref:System.Windows.Markup.XamlDeferLoadAttribute>. It can also  check <xref:System.Xaml.XamlType.BaseType%2A> for the attribute if no attribute is found on the immediate underlying type. If a value is unavailable, this method returns `null`.","nodes":[{"content":"The default implementation returns an object on the basis of reading <ph id=\"ph1\">&lt;xref:System.Windows.Markup.XamlDeferLoadAttribute&gt;</ph>.","pos":[0,121],"source":"The default implementation returns an object on the basis of reading <xref:System.Windows.Markup.XamlDeferLoadAttribute>."},{"content":"It can also  check <ph id=\"ph1\">&lt;xref:System.Xaml.XamlType.BaseType%2A&gt;</ph> for the attribute if no attribute is found on the immediate underlying type.","pos":[122,257],"source":" It can also  check <xref:System.Xaml.XamlType.BaseType%2A> for the attribute if no attribute is found on the immediate underlying type."},{"content":"If a value is unavailable, this method returns <ph id=\"ph1\">`null`</ph>.","pos":[258,312],"source":" If a value is unavailable, this method returns `null`."}]}],"pos":[110860,111530],"yaml":true,"extradata":"MT"},{"content":"A <xref href=\"System.Xaml.Schema.XamlValueConverter`1\"></xref> that has a <xref href=\"System.Xaml.XamlDeferringLoader\"></xref> constraint on the generic.","nodes":[{"pos":[0,153],"content":"A <ph id=\"ph1\">&lt;xref href=\"System.Xaml.Schema.XamlValueConverter`1\"&gt;&lt;/xref&gt;</ph> that has a <ph id=\"ph2\">&lt;xref href=\"System.Xaml.XamlDeferringLoader\"&gt;&lt;/xref&gt;</ph> constraint on the generic.","source":"A <xref href=\"System.Xaml.Schema.XamlValueConverter`1\"></xref> that has a <xref href=\"System.Xaml.XamlDeferringLoader\"></xref> constraint on the generic."}],"pos":[111801,111955],"yaml":true},{"content":"Returns a <xref href=\"System.Xaml.Schema.XamlTypeInvoker\"></xref> that is associated with this <xref href=\"System.Xaml.XamlType\"></xref>.","nodes":[{"pos":[0,137],"content":"Returns a <ph id=\"ph1\">&lt;xref href=\"System.Xaml.Schema.XamlTypeInvoker\"&gt;&lt;/xref&gt;</ph> that is associated with this <ph id=\"ph2\">&lt;xref href=\"System.Xaml.XamlType\"&gt;&lt;/xref&gt;</ph>.","source":"Returns a <xref href=\"System.Xaml.Schema.XamlTypeInvoker\"></xref> that is associated with this <xref href=\"System.Xaml.XamlType\"></xref>."}],"pos":[112850,112988],"yaml":true},{"content":"This method can be invoked by calls to <xref:System.Xaml.XamlType.Invoker%2A>.  \n  \n The default implementation does not require that a <xref:System.Xaml.XamlType> be constructed by using one of the constructors that pass an initial <xref:System.Xaml.Schema.XamlTypeInvoker>. However, an <xref:System.Xaml.XamlType.UnderlyingType%2A> value must exist for the <xref:System.Xaml.XamlType>; otherwise, the default implementation returns `null`.  \n  \n Override this method if you also create a derived class from <xref:System.Xaml.Schema.XamlTypeInvoker> and intend to return the derived class. If you return `null`, <xref:System.Xaml.XamlType.Invoker%2A> returns <xref:System.Xaml.Schema.XamlTypeInvoker.UnknownInvoker%2A?displayProperty=fullName> to callers.","nodes":[{"pos":[0,78],"content":"This method can be invoked by calls to <xref:System.Xaml.XamlType.Invoker%2A>.","nodes":[{"content":"This method can be invoked by calls to <ph id=\"ph1\">&lt;xref:System.Xaml.XamlType.Invoker%2A&gt;</ph>.","pos":[0,78],"source":"This method can be invoked by calls to <xref:System.Xaml.XamlType.Invoker%2A>."}]},{"pos":[85,441],"content":"The default implementation does not require that a <xref:System.Xaml.XamlType> be constructed by using one of the constructors that pass an initial <xref:System.Xaml.Schema.XamlTypeInvoker>. However, an <xref:System.Xaml.XamlType.UnderlyingType%2A> value must exist for the <xref:System.Xaml.XamlType>; otherwise, the default implementation returns `null`.","nodes":[{"content":"The default implementation does not require that a <ph id=\"ph1\">&lt;xref:System.Xaml.XamlType&gt;</ph> be constructed by using one of the constructors that pass an initial <ph id=\"ph2\">&lt;xref:System.Xaml.Schema.XamlTypeInvoker&gt;</ph>.","pos":[0,190],"source":"The default implementation does not require that a <xref:System.Xaml.XamlType> be constructed by using one of the constructors that pass an initial <xref:System.Xaml.Schema.XamlTypeInvoker>."},{"content":"However, an <ph id=\"ph1\">&lt;xref:System.Xaml.XamlType.UnderlyingType%2A&gt;</ph> value must exist for the <ph id=\"ph2\">&lt;xref:System.Xaml.XamlType&gt;</ph>; otherwise, the default implementation returns <ph id=\"ph3\">`null`</ph>.","pos":[191,356],"source":" However, an <xref:System.Xaml.XamlType.UnderlyingType%2A> value must exist for the <xref:System.Xaml.XamlType>; otherwise, the default implementation returns `null`."}]},{"pos":[448,756],"content":"Override this method if you also create a derived class from <xref:System.Xaml.Schema.XamlTypeInvoker> and intend to return the derived class. If you return `null`, <xref:System.Xaml.XamlType.Invoker%2A> returns <xref:System.Xaml.Schema.XamlTypeInvoker.UnknownInvoker%2A?displayProperty=fullName> to callers.","nodes":[{"content":"Override this method if you also create a derived class from <ph id=\"ph1\">&lt;xref:System.Xaml.Schema.XamlTypeInvoker&gt;</ph> and intend to return the derived class.","pos":[0,142],"source":"Override this method if you also create a derived class from <xref:System.Xaml.Schema.XamlTypeInvoker> and intend to return the derived class."},{"content":"If you return <ph id=\"ph1\">`null`</ph>, <ph id=\"ph2\">&lt;xref:System.Xaml.XamlType.Invoker%2A&gt;</ph> returns <ph id=\"ph3\">&lt;xref:System.Xaml.Schema.XamlTypeInvoker.UnknownInvoker%2A?displayProperty=fullName&gt;</ph> to callers.","pos":[143,308],"source":" If you return `null`, <xref:System.Xaml.XamlType.Invoker%2A> returns <xref:System.Xaml.Schema.XamlTypeInvoker.UnknownInvoker%2A?displayProperty=fullName> to callers."}]}],"pos":[112999,113762],"yaml":true,"extradata":"MT"},{"content":"The <xref href=\"System.Xaml.Schema.XamlTypeInvoker\"></xref> information for this <xref href=\"System.Xaml.XamlType\"></xref>; otherwise, `null`.","nodes":[{"pos":[0,142],"content":"The <ph id=\"ph1\">&lt;xref href=\"System.Xaml.Schema.XamlTypeInvoker\"&gt;&lt;/xref&gt;</ph> information for this <ph id=\"ph2\">&lt;xref href=\"System.Xaml.XamlType\"&gt;&lt;/xref&gt;</ph>; otherwise, <ph id=\"ph3\">`null`</ph>.","source":"The <xref href=\"System.Xaml.Schema.XamlTypeInvoker\"></xref> information for this <xref href=\"System.Xaml.XamlType\"></xref>; otherwise, `null`."}],"pos":[113953,114096],"yaml":true},{"content":"Returns a value that indicates whether this <xref href=\"System.Xaml.XamlType\"></xref> represents an ambient type, as per the XAML definition.","nodes":[{"pos":[0,141],"content":"Returns a value that indicates whether this <ph id=\"ph1\">&lt;xref href=\"System.Xaml.XamlType\"&gt;&lt;/xref&gt;</ph> represents an ambient type, as per the XAML definition.","source":"Returns a value that indicates whether this <xref href=\"System.Xaml.XamlType\"></xref> represents an ambient type, as per the XAML definition."}],"pos":[114995,115137],"yaml":true},{"content":"This method can be invoked by calls to <xref:System.Xaml.XamlType.IsAmbient%2A>.  \n  \n The default implementation uses CLR reflection on the <xref:System.Xaml.XamlType.UnderlyingType%2A> and can check the base types. This implementation checks for the <xref:System.Windows.Markup.AmbientAttribute> that is applied to the relevant type's definition at the class level and returns `true` in this case. All other cases return `false`.  \n  \n Override this method if you want <xref:System.Xaml.XamlType.IsAmbient%2A> to return a different value than is enabled by default internal reflection.","nodes":[{"pos":[0,80],"content":"This method can be invoked by calls to <xref:System.Xaml.XamlType.IsAmbient%2A>.","nodes":[{"content":"This method can be invoked by calls to <ph id=\"ph1\">&lt;xref:System.Xaml.XamlType.IsAmbient%2A&gt;</ph>.","pos":[0,80],"source":"This method can be invoked by calls to <xref:System.Xaml.XamlType.IsAmbient%2A>."}]},{"pos":[87,431],"content":"The default implementation uses CLR reflection on the <xref:System.Xaml.XamlType.UnderlyingType%2A> and can check the base types. This implementation checks for the <xref:System.Windows.Markup.AmbientAttribute> that is applied to the relevant type's definition at the class level and returns `true` in this case. All other cases return `false`.","nodes":[{"content":"The default implementation uses CLR reflection on the <ph id=\"ph1\">&lt;xref:System.Xaml.XamlType.UnderlyingType%2A&gt;</ph> and can check the base types.","pos":[0,129],"source":"The default implementation uses CLR reflection on the <xref:System.Xaml.XamlType.UnderlyingType%2A> and can check the base types."},{"content":"This implementation checks for the <ph id=\"ph1\">&lt;xref:System.Windows.Markup.AmbientAttribute&gt;</ph> that is applied to the relevant type's definition at the class level and returns <ph id=\"ph2\">`true`</ph> in this case.","pos":[130,312],"source":" This implementation checks for the <xref:System.Windows.Markup.AmbientAttribute> that is applied to the relevant type's definition at the class level and returns `true` in this case."},{"content":"All other cases return <ph id=\"ph1\">`false`</ph>.","pos":[313,344],"source":" All other cases return `false`."}]},{"pos":[438,587],"content":"Override this method if you want <xref:System.Xaml.XamlType.IsAmbient%2A> to return a different value than is enabled by default internal reflection.","nodes":[{"content":"Override this method if you want <ph id=\"ph1\">&lt;xref:System.Xaml.XamlType.IsAmbient%2A&gt;</ph> to return a different value than is enabled by default internal reflection.","pos":[0,149],"source":"Override this method if you want <xref:System.Xaml.XamlType.IsAmbient%2A> to return a different value than is enabled by default internal reflection."}]}],"pos":[115148,115742],"yaml":true,"extradata":"MT"},{"content":"`true` if this <xref href=\"System.Xaml.XamlType\"></xref> represents an ambient type; otherwise, `false`.","nodes":[{"pos":[0,104],"content":"<ph id=\"ph1\">`true`</ph> if this <ph id=\"ph2\">&lt;xref href=\"System.Xaml.XamlType\"&gt;&lt;/xref&gt;</ph> represents an ambient type; otherwise, <ph id=\"ph3\">`false`</ph>.","source":"`true` if this <xref href=\"System.Xaml.XamlType\"></xref> represents an ambient type; otherwise, `false`."}],"pos":[115885,115992],"yaml":true},{"content":"Returns a value that indicates whether this <xref href=\"System.Xaml.XamlType\"></xref> represents a constructible type, as per the XAML definition.","nodes":[{"pos":[0,146],"content":"Returns a value that indicates whether this <ph id=\"ph1\">&lt;xref href=\"System.Xaml.XamlType\"&gt;&lt;/xref&gt;</ph> represents a constructible type, as per the XAML definition.","source":"Returns a value that indicates whether this <xref href=\"System.Xaml.XamlType\"></xref> represents a constructible type, as per the XAML definition."}],"pos":[116929,117076],"yaml":true},{"content":"This method can be invoked by calls to <xref:System.Xaml.XamlType.IsConstructible%2A>.  \n  \n The default implementation uses CLR reflection on the <xref:System.Xaml.XamlType.UnderlyingType%2A>. The type must be concrete, non-nested, and closed. The default implementation checks whether the type is a value type and the return of <xref:System.Xaml.XamlType.ConstructionRequiresArguments%2A>. For a null <xref:System.Xaml.XamlType.UnderlyingType%2A>, this method returns `true`.  \n  \n Override this method if you want <xref:System.Xaml.XamlType.IsConstructible%2A> to return a different value than is enabled by default internal reflection.","nodes":[{"pos":[0,86],"content":"This method can be invoked by calls to <xref:System.Xaml.XamlType.IsConstructible%2A>.","nodes":[{"content":"This method can be invoked by calls to <ph id=\"ph1\">&lt;xref:System.Xaml.XamlType.IsConstructible%2A&gt;</ph>.","pos":[0,86],"source":"This method can be invoked by calls to <xref:System.Xaml.XamlType.IsConstructible%2A>."}]},{"pos":[93,477],"content":"The default implementation uses CLR reflection on the <xref:System.Xaml.XamlType.UnderlyingType%2A>. The type must be concrete, non-nested, and closed. The default implementation checks whether the type is a value type and the return of <xref:System.Xaml.XamlType.ConstructionRequiresArguments%2A>. For a null <xref:System.Xaml.XamlType.UnderlyingType%2A>, this method returns `true`.","nodes":[{"content":"The default implementation uses CLR reflection on the <ph id=\"ph1\">&lt;xref:System.Xaml.XamlType.UnderlyingType%2A&gt;</ph>.","pos":[0,100],"source":"The default implementation uses CLR reflection on the <xref:System.Xaml.XamlType.UnderlyingType%2A>."},{"content":"The type must be concrete, non-nested, and closed.","pos":[101,151]},{"content":"The default implementation checks whether the type is a value type and the return of <ph id=\"ph1\">&lt;xref:System.Xaml.XamlType.ConstructionRequiresArguments%2A&gt;</ph>.","pos":[152,298],"source":" The default implementation checks whether the type is a value type and the return of <xref:System.Xaml.XamlType.ConstructionRequiresArguments%2A>."},{"content":"For a null <ph id=\"ph1\">&lt;xref:System.Xaml.XamlType.UnderlyingType%2A&gt;</ph>, this method returns <ph id=\"ph2\">`true`</ph>.","pos":[299,384],"source":" For a null <xref:System.Xaml.XamlType.UnderlyingType%2A>, this method returns `true`."}]},{"pos":[484,639],"content":"Override this method if you want <xref:System.Xaml.XamlType.IsConstructible%2A> to return a different value than is enabled by default internal reflection.","nodes":[{"content":"Override this method if you want <ph id=\"ph1\">&lt;xref:System.Xaml.XamlType.IsConstructible%2A&gt;</ph> to return a different value than is enabled by default internal reflection.","pos":[0,155],"source":"Override this method if you want <xref:System.Xaml.XamlType.IsConstructible%2A> to return a different value than is enabled by default internal reflection."}]}],"pos":[117087,117733],"yaml":true,"extradata":"MT"},{"content":"`true` if this <xref href=\"System.Xaml.XamlType\"></xref> represents a constructible type; otherwise, `false`.","nodes":[{"pos":[0,109],"content":"<ph id=\"ph1\">`true`</ph> if this <ph id=\"ph2\">&lt;xref href=\"System.Xaml.XamlType\"&gt;&lt;/xref&gt;</ph> represents a constructible type; otherwise, <ph id=\"ph3\">`false`</ph>.","source":"`true` if this <xref href=\"System.Xaml.XamlType\"></xref> represents a constructible type; otherwise, `false`."}],"pos":[117882,117994],"yaml":true},{"content":"Returns a value that indicates whether this <xref href=\"System.Xaml.XamlType\"></xref> represents a markup extension.","nodes":[{"pos":[0,116],"content":"Returns a value that indicates whether this <ph id=\"ph1\">&lt;xref href=\"System.Xaml.XamlType\"&gt;&lt;/xref&gt;</ph> represents a markup extension.","source":"Returns a value that indicates whether this <xref href=\"System.Xaml.XamlType\"></xref> represents a markup extension."}],"pos":[118949,119066],"yaml":true},{"content":"This method can be invoked by calls to <xref:System.Xaml.XamlType.IsMarkupExtension%2A>.  \n  \n The default implementation consists only of this call:  \n  \n `return CanAssignTo(XamlLanguage.MarkupExtension);`  \n  \n Override this method if you want <xref:System.Xaml.XamlType.IsMarkupExtension%2A> to use different logic.  \n  \n In XAML specification terms, this type must be assignable to `x:MarkupExtension` in order to return `true` for <xref:System.Xaml.XamlType.IsMarkupExtension%2A>.","nodes":[{"pos":[0,88],"content":"This method can be invoked by calls to <xref:System.Xaml.XamlType.IsMarkupExtension%2A>.","nodes":[{"content":"This method can be invoked by calls to <ph id=\"ph1\">&lt;xref:System.Xaml.XamlType.IsMarkupExtension%2A&gt;</ph>.","pos":[0,88],"source":"This method can be invoked by calls to <xref:System.Xaml.XamlType.IsMarkupExtension%2A>."}]},{"pos":[95,149],"content":"The default implementation consists only of this call:","nodes":[{"content":"The default implementation consists only of this call:","pos":[0,54]}]},{"pos":[214,319],"content":"Override this method if you want <xref:System.Xaml.XamlType.IsMarkupExtension%2A> to use different logic.","nodes":[{"content":"Override this method if you want <ph id=\"ph1\">&lt;xref:System.Xaml.XamlType.IsMarkupExtension%2A&gt;</ph> to use different logic.","pos":[0,105],"source":"Override this method if you want <xref:System.Xaml.XamlType.IsMarkupExtension%2A> to use different logic."}]},{"pos":[326,486],"content":"In XAML specification terms, this type must be assignable to <ph id=\"ph1\">`x:MarkupExtension`</ph> in order to return <ph id=\"ph2\">`true`</ph> for <ph id=\"ph3\">&lt;xref:System.Xaml.XamlType.IsMarkupExtension%2A&gt;</ph>.","source":"In XAML specification terms, this type must be assignable to `x:MarkupExtension` in order to return `true` for <xref:System.Xaml.XamlType.IsMarkupExtension%2A>."}],"pos":[119077,119574],"yaml":true,"extradata":"MT"},{"content":"`true` if this <xref href=\"System.Xaml.XamlType\"></xref> represents a markup extension; otherwise, `false`.","nodes":[{"pos":[0,107],"content":"<ph id=\"ph1\">`true`</ph> if this <ph id=\"ph2\">&lt;xref href=\"System.Xaml.XamlType\"&gt;&lt;/xref&gt;</ph> represents a markup extension; otherwise, <ph id=\"ph3\">`false`</ph>.","source":"`true` if this <xref href=\"System.Xaml.XamlType\"></xref> represents a markup extension; otherwise, `false`."}],"pos":[119725,119835],"yaml":true},{"content":"Returns a value that indicates whether this <xref href=\"System.Xaml.XamlType\"></xref> represents a XAML namescope, as per the XAML definition.","nodes":[{"pos":[0,142],"content":"Returns a value that indicates whether this <ph id=\"ph1\">&lt;xref href=\"System.Xaml.XamlType\"&gt;&lt;/xref&gt;</ph> represents a XAML namescope, as per the XAML definition.","source":"Returns a value that indicates whether this <xref href=\"System.Xaml.XamlType\"></xref> represents a XAML namescope, as per the XAML definition."}],"pos":[120756,120899],"yaml":true},{"content":"This method can be invoked by calls to <xref:System.Xaml.XamlType.IsNameScope%2A>.  \n  \n The default implementation makes a <xref:System.Xaml.XamlType.CanAssignTo%2A> call indirectly against the type <xref:System.Windows.Markup.INameScope>. <xref:System.Windows.Markup.INameScope> is an interface that is defined in the assembly WindowsBase. This technique for XAML namescope identification is used both by WPF and [!INCLUDE[TLA#tla_workflow](~/includes/tlasharptla-workflow-md.md)] implementations of XAML.  \n  \n Override this method if you want <xref:System.Xaml.XamlType.IsNameScope%2A> to use different logic.  \n  \n A XAML namescope enforces the name uniqueness of the property or properties that are used for `x:Name` / `[name property]`. If <xref:System.Xaml.XamlType.IsNameScope%2A> is `true`, then some mechanism for enforcing uniqueness should exist and should evaluate from the perspective of this type owning a XAML namescope. The XAML namescope then extends to the content of the type until another XAML namescope owning type is encountered.","nodes":[{"pos":[0,82],"content":"This method can be invoked by calls to <xref:System.Xaml.XamlType.IsNameScope%2A>.","nodes":[{"content":"This method can be invoked by calls to <ph id=\"ph1\">&lt;xref:System.Xaml.XamlType.IsNameScope%2A&gt;</ph>.","pos":[0,82],"source":"This method can be invoked by calls to <xref:System.Xaml.XamlType.IsNameScope%2A>."}]},{"pos":[89,507],"content":"The default implementation makes a <xref:System.Xaml.XamlType.CanAssignTo%2A> call indirectly against the type <xref:System.Windows.Markup.INameScope>. <xref:System.Windows.Markup.INameScope> is an interface that is defined in the assembly WindowsBase. This technique for XAML namescope identification is used both by WPF and [!INCLUDE[TLA#tla_workflow](~/includes/tlasharptla-workflow-md.md)] implementations of XAML.","nodes":[{"content":"The default implementation makes a <ph id=\"ph1\">&lt;xref:System.Xaml.XamlType.CanAssignTo%2A&gt;</ph> call indirectly against the type <ph id=\"ph2\">&lt;xref:System.Windows.Markup.INameScope&gt;</ph>.","pos":[0,151],"source":"The default implementation makes a <xref:System.Xaml.XamlType.CanAssignTo%2A> call indirectly against the type <xref:System.Windows.Markup.INameScope>."},{"content":"<ph id=\"ph1\">&lt;xref:System.Windows.Markup.INameScope&gt;</ph> is an interface that is defined in the assembly WindowsBase.","pos":[152,252],"source":" <xref:System.Windows.Markup.INameScope> is an interface that is defined in the assembly WindowsBase."},{"content":"This technique for XAML namescope identification is used both by WPF and <ph id=\"ph1\">[!INCLUDE[TLA#tla_workflow](~/includes/tlasharptla-workflow-md.md)]</ph> implementations of XAML.","pos":[253,418],"source":" This technique for XAML namescope identification is used both by WPF and [!INCLUDE[TLA#tla_workflow](~/includes/tlasharptla-workflow-md.md)] implementations of XAML."}]},{"pos":[514,613],"content":"Override this method if you want <xref:System.Xaml.XamlType.IsNameScope%2A> to use different logic.","nodes":[{"content":"Override this method if you want <ph id=\"ph1\">&lt;xref:System.Xaml.XamlType.IsNameScope%2A&gt;</ph> to use different logic.","pos":[0,99],"source":"Override this method if you want <xref:System.Xaml.XamlType.IsNameScope%2A> to use different logic."}]},{"pos":[620,1053],"content":"A XAML namescope enforces the name uniqueness of the property or properties that are used for `x:Name` / `[name property]`. If <xref:System.Xaml.XamlType.IsNameScope%2A> is `true`, then some mechanism for enforcing uniqueness should exist and should evaluate from the perspective of this type owning a XAML namescope. The XAML namescope then extends to the content of the type until another XAML namescope owning type is encountered.","nodes":[{"content":"A XAML namescope enforces the name uniqueness of the property or properties that are used for <ph id=\"ph1\">`x:Name`</ph><ph id=\"ph2\"> / </ph><ph id=\"ph3\">`[name property]`</ph>.","pos":[0,123],"source":"A XAML namescope enforces the name uniqueness of the property or properties that are used for `x:Name` / `[name property]`."},{"content":"If <ph id=\"ph1\">&lt;xref:System.Xaml.XamlType.IsNameScope%2A&gt;</ph> is <ph id=\"ph2\">`true`</ph>, then some mechanism for enforcing uniqueness should exist and should evaluate from the perspective of this type owning a XAML namescope.","pos":[124,317],"source":" If <xref:System.Xaml.XamlType.IsNameScope%2A> is `true`, then some mechanism for enforcing uniqueness should exist and should evaluate from the perspective of this type owning a XAML namescope."},{"content":"The XAML namescope then extends to the content of the type until another XAML namescope owning type is encountered.","pos":[318,433]}]}],"pos":[120910,121972],"yaml":true,"extradata":"MT"},{"content":"`true` if this <xref href=\"System.Xaml.XamlType\"></xref> represents a XAML namescope; otherwise, `false`.","nodes":[{"pos":[0,105],"content":"<ph id=\"ph1\">`true`</ph> if this <ph id=\"ph2\">&lt;xref href=\"System.Xaml.XamlType\"&gt;&lt;/xref&gt;</ph> represents a XAML namescope; otherwise, <ph id=\"ph3\">`false`</ph>.","source":"`true` if this <xref href=\"System.Xaml.XamlType\"></xref> represents a XAML namescope; otherwise, `false`."}],"pos":[122117,122225],"yaml":true},{"content":"Returns a value that indicates whether this <xref href=\"System.Xaml.XamlType\"></xref> represents a nullable type, as per the XAML definition.","nodes":[{"pos":[0,141],"content":"Returns a value that indicates whether this <ph id=\"ph1\">&lt;xref href=\"System.Xaml.XamlType\"&gt;&lt;/xref&gt;</ph> represents a nullable type, as per the XAML definition.","source":"Returns a value that indicates whether this <xref href=\"System.Xaml.XamlType\"></xref> represents a nullable type, as per the XAML definition."}],"pos":[123134,123276],"yaml":true},{"content":"This method can be invoked by calls to <xref:System.Xaml.XamlType.IsNullable%2A>.  \n  \n The default implementation makes a determination based on the CLR core library nullable concept, checked against <xref:System.Xaml.XamlType.UnderlyingType%2A>. For a null <xref:System.Xaml.XamlType.UnderlyingType%2A>, it returns `true`.  \n  \n Override this method if you want <xref:System.Xaml.XamlType.IsNullable%2A> to use different logic.","nodes":[{"pos":[0,81],"content":"This method can be invoked by calls to <xref:System.Xaml.XamlType.IsNullable%2A>.","nodes":[{"content":"This method can be invoked by calls to <ph id=\"ph1\">&lt;xref:System.Xaml.XamlType.IsNullable%2A&gt;</ph>.","pos":[0,81],"source":"This method can be invoked by calls to <xref:System.Xaml.XamlType.IsNullable%2A>."}]},{"pos":[88,324],"content":"The default implementation makes a determination based on the CLR core library nullable concept, checked against <xref:System.Xaml.XamlType.UnderlyingType%2A>. For a null <xref:System.Xaml.XamlType.UnderlyingType%2A>, it returns `true`.","nodes":[{"content":"The default implementation makes a determination based on the CLR core library nullable concept, checked against <ph id=\"ph1\">&lt;xref:System.Xaml.XamlType.UnderlyingType%2A&gt;</ph>.","pos":[0,159],"source":"The default implementation makes a determination based on the CLR core library nullable concept, checked against <xref:System.Xaml.XamlType.UnderlyingType%2A>."},{"content":"For a null <ph id=\"ph1\">&lt;xref:System.Xaml.XamlType.UnderlyingType%2A&gt;</ph>, it returns <ph id=\"ph2\">`true`</ph>.","pos":[160,236],"source":" For a null <xref:System.Xaml.XamlType.UnderlyingType%2A>, it returns `true`."}]},{"pos":[331,429],"content":"Override this method if you want <xref:System.Xaml.XamlType.IsNullable%2A> to use different logic.","nodes":[{"content":"Override this method if you want <ph id=\"ph1\">&lt;xref:System.Xaml.XamlType.IsNullable%2A&gt;</ph> to use different logic.","pos":[0,98],"source":"Override this method if you want <xref:System.Xaml.XamlType.IsNullable%2A> to use different logic."}]}],"pos":[123287,123723],"yaml":true,"extradata":"MT"},{"content":"`true` if this <xref href=\"System.Xaml.XamlType\"></xref> represents a nullable type; otherwise, `false`.","nodes":[{"pos":[0,104],"content":"<ph id=\"ph1\">`true`</ph> if this <ph id=\"ph2\">&lt;xref href=\"System.Xaml.XamlType\"&gt;&lt;/xref&gt;</ph> represents a nullable type; otherwise, <ph id=\"ph3\">`false`</ph>.","source":"`true` if this <xref href=\"System.Xaml.XamlType\"></xref> represents a nullable type; otherwise, `false`."}],"pos":[123867,123974],"yaml":true},{"content":"Returns a value that indicates whether this <xref href=\"System.Xaml.XamlType\"></xref> represents a public type in the relevant type system.","nodes":[{"pos":[0,139],"content":"Returns a value that indicates whether this <ph id=\"ph1\">&lt;xref href=\"System.Xaml.XamlType\"&gt;&lt;/xref&gt;</ph> represents a public type in the relevant type system.","source":"Returns a value that indicates whether this <xref href=\"System.Xaml.XamlType\"></xref> represents a public type in the relevant type system."}],"pos":[124870,125010],"yaml":true},{"content":"This method can be invoked by calls to <xref:System.Xaml.XamlType.IsPublic%2A>.  \n  \n The default implementation uses CLR reflection against a non-null <xref:System.Xaml.XamlType.UnderlyingType%2A>. For a null <xref:System.Xaml.XamlType.UnderlyingType%2A>, it returns `true`.  \n  \n Override this method if you want <xref:System.Xaml.XamlType.IsPublic%2A> to use different logic.  \n  \n> [!IMPORTANT]\n>  <xref:System.Xaml.XamlType.LookupIsPublic%2A> is virtual, and therefore, can be overridden. The override has the potential (whether for malicious purposes or otherwise) to change the reported access information about a XAML type so that it no longer aligns in an expected way with the type system or access information of its underlying CLR type. For any security-critical checks of assignment operations and access, use the underlying CLR type instead.","nodes":[{"pos":[0,79],"content":"This method can be invoked by calls to <xref:System.Xaml.XamlType.IsPublic%2A>.","nodes":[{"content":"This method can be invoked by calls to <ph id=\"ph1\">&lt;xref:System.Xaml.XamlType.IsPublic%2A&gt;</ph>.","pos":[0,79],"source":"This method can be invoked by calls to <xref:System.Xaml.XamlType.IsPublic%2A>."}]},{"pos":[86,275],"content":"The default implementation uses CLR reflection against a non-null <xref:System.Xaml.XamlType.UnderlyingType%2A>. For a null <xref:System.Xaml.XamlType.UnderlyingType%2A>, it returns `true`.","nodes":[{"content":"The default implementation uses CLR reflection against a non-null <ph id=\"ph1\">&lt;xref:System.Xaml.XamlType.UnderlyingType%2A&gt;</ph>.","pos":[0,112],"source":"The default implementation uses CLR reflection against a non-null <xref:System.Xaml.XamlType.UnderlyingType%2A>."},{"content":"For a null <ph id=\"ph1\">&lt;xref:System.Xaml.XamlType.UnderlyingType%2A&gt;</ph>, it returns <ph id=\"ph2\">`true`</ph>.","pos":[113,189],"source":" For a null <xref:System.Xaml.XamlType.UnderlyingType%2A>, it returns `true`."}]},{"pos":[282,378],"content":"Override this method if you want <xref:System.Xaml.XamlType.IsPublic%2A> to use different logic.","nodes":[{"content":"Override this method if you want <ph id=\"ph1\">&lt;xref:System.Xaml.XamlType.IsPublic%2A&gt;</ph> to use different logic.","pos":[0,96],"source":"Override this method if you want <xref:System.Xaml.XamlType.IsPublic%2A> to use different logic."}]},{"pos":[386,855],"content":"[!IMPORTANT]\n <xref:System.Xaml.XamlType.LookupIsPublic%2A> is virtual, and therefore, can be overridden. The override has the potential (whether for malicious purposes or otherwise) to change the reported access information about a XAML type so that it no longer aligns in an expected way with the type system or access information of its underlying CLR type. For any security-critical checks of assignment operations and access, use the underlying CLR type instead.","leadings":["","> "],"nodes":[{"content":" <xref:System.Xaml.XamlType.LookupIsPublic%2A> is virtual, and therefore, can be overridden. The override has the potential (whether for malicious purposes or otherwise) to change the reported access information about a XAML type so that it no longer aligns in an expected way with the type system or access information of its underlying CLR type. For any security-critical checks of assignment operations and access, use the underlying CLR type instead.","pos":[13,467],"nodes":[{"content":"<ph id=\"ph1\">&lt;xref:System.Xaml.XamlType.LookupIsPublic%2A&gt;</ph> is virtual, and therefore, can be overridden.","pos":[1,92],"source":" <xref:System.Xaml.XamlType.LookupIsPublic%2A> is virtual, and therefore, can be overridden."},{"content":"The override has the potential (whether for malicious purposes or otherwise) to change the reported access information about a XAML type so that it no longer aligns in an expected way with the type system or access information of its underlying CLR type.","pos":[93,347]},{"content":"For any security-critical checks of assignment operations and access, use the underlying CLR type instead.","pos":[348,454]}]}]}],"pos":[125021,125886],"yaml":true,"extradata":"MT"},{"content":"`true` if this <xref href=\"System.Xaml.XamlType\"></xref> represents a public type; otherwise, `false`.","nodes":[{"pos":[0,102],"content":"<ph id=\"ph1\">`true`</ph> if this <ph id=\"ph2\">&lt;xref href=\"System.Xaml.XamlType\"&gt;&lt;/xref&gt;</ph> represents a public type; otherwise, <ph id=\"ph3\">`false`</ph>.","source":"`true` if this <xref href=\"System.Xaml.XamlType\"></xref> represents a public type; otherwise, `false`."}],"pos":[126028,126133],"yaml":true},{"content":"Returns a value that indicates whether this <xref href=\"System.Xaml.XamlType\"></xref> represents a type that cannot be resolved in the underlying type system.","nodes":[{"pos":[0,158],"content":"Returns a value that indicates whether this <ph id=\"ph1\">&lt;xref href=\"System.Xaml.XamlType\"&gt;&lt;/xref&gt;</ph> represents a type that cannot be resolved in the underlying type system.","source":"Returns a value that indicates whether this <xref href=\"System.Xaml.XamlType\"></xref> represents a type that cannot be resolved in the underlying type system."}],"pos":[127033,127192],"yaml":true},{"content":"This method can be invoked by calls to <xref:System.Xaml.XamlType.IsUnknown%2A>.  \n  \n The default implementation can use CLR reflection. For a null <xref:System.Xaml.XamlType.UnderlyingType%2A>, it returns `true`.  \n  \n Override this method if you want <xref:System.Xaml.XamlType.IsUnknown%2A> to use different logic.","nodes":[{"pos":[0,80],"content":"This method can be invoked by calls to <xref:System.Xaml.XamlType.IsUnknown%2A>.","nodes":[{"content":"This method can be invoked by calls to <ph id=\"ph1\">&lt;xref:System.Xaml.XamlType.IsUnknown%2A&gt;</ph>.","pos":[0,80],"source":"This method can be invoked by calls to <xref:System.Xaml.XamlType.IsUnknown%2A>."}]},{"pos":[87,214],"content":"The default implementation can use CLR reflection. For a null <xref:System.Xaml.XamlType.UnderlyingType%2A>, it returns `true`.","nodes":[{"content":"The default implementation can use CLR reflection.","pos":[0,50]},{"content":"For a null <ph id=\"ph1\">&lt;xref:System.Xaml.XamlType.UnderlyingType%2A&gt;</ph>, it returns <ph id=\"ph2\">`true`</ph>.","pos":[51,127],"source":" For a null <xref:System.Xaml.XamlType.UnderlyingType%2A>, it returns `true`."}]},{"pos":[221,318],"content":"Override this method if you want <xref:System.Xaml.XamlType.IsUnknown%2A> to use different logic.","nodes":[{"content":"Override this method if you want <ph id=\"ph1\">&lt;xref:System.Xaml.XamlType.IsUnknown%2A&gt;</ph> to use different logic.","pos":[0,97],"source":"Override this method if you want <xref:System.Xaml.XamlType.IsUnknown%2A> to use different logic."}]}],"pos":[127203,127528],"yaml":true,"extradata":"MT"},{"content":"`true` if this <xref href=\"System.Xaml.XamlType\"></xref> represents a nonresolvable type; otherwise, `false`.","nodes":[{"pos":[0,109],"content":"<ph id=\"ph1\">`true`</ph> if this <ph id=\"ph2\">&lt;xref href=\"System.Xaml.XamlType\"&gt;&lt;/xref&gt;</ph> represents a nonresolvable type; otherwise, <ph id=\"ph3\">`false`</ph>.","source":"`true` if this <xref href=\"System.Xaml.XamlType\"></xref> represents a nonresolvable type; otherwise, `false`."}],"pos":[127671,127783],"yaml":true},{"content":"Returns a value that indicates whether this <xref href=\"System.Xaml.XamlType\"></xref> represents a whitespace significant collection, as per the XML definition.","nodes":[{"pos":[0,160],"content":"Returns a value that indicates whether this <ph id=\"ph1\">&lt;xref href=\"System.Xaml.XamlType\"&gt;&lt;/xref&gt;</ph> represents a whitespace significant collection, as per the XML definition.","source":"Returns a value that indicates whether this <xref href=\"System.Xaml.XamlType\"></xref> represents a whitespace significant collection, as per the XML definition."}],"pos":[128828,128989],"yaml":true},{"content":"This method can be invoked by calls to <xref:System.Xaml.XamlType.IsWhitespaceSignificantCollection%2A>.  \n  \n The default implementation returns a value based on reading <xref:System.Windows.Markup.WhitespaceSignificantCollectionAttribute>. It can also check the <xref:System.Xaml.XamlType.BaseType%2A> for the attribute if no attribute is found on the immediate underlying type. If a value is not available, it returns `false`.  \n  \n Override this method if you want <xref:System.Xaml.XamlType.IsWhitespaceSignificantCollection%2A> to use different logic.","nodes":[{"pos":[0,104],"content":"This method can be invoked by calls to <xref:System.Xaml.XamlType.IsWhitespaceSignificantCollection%2A>.","nodes":[{"content":"This method can be invoked by calls to <ph id=\"ph1\">&lt;xref:System.Xaml.XamlType.IsWhitespaceSignificantCollection%2A&gt;</ph>.","pos":[0,104],"source":"This method can be invoked by calls to <xref:System.Xaml.XamlType.IsWhitespaceSignificantCollection%2A>."}]},{"pos":[111,429],"content":"The default implementation returns a value based on reading <xref:System.Windows.Markup.WhitespaceSignificantCollectionAttribute>. It can also check the <xref:System.Xaml.XamlType.BaseType%2A> for the attribute if no attribute is found on the immediate underlying type. If a value is not available, it returns `false`.","nodes":[{"content":"The default implementation returns a value based on reading <ph id=\"ph1\">&lt;xref:System.Windows.Markup.WhitespaceSignificantCollectionAttribute&gt;</ph>.","pos":[0,130],"source":"The default implementation returns a value based on reading <xref:System.Windows.Markup.WhitespaceSignificantCollectionAttribute>."},{"content":"It can also check the <ph id=\"ph1\">&lt;xref:System.Xaml.XamlType.BaseType%2A&gt;</ph> for the attribute if no attribute is found on the immediate underlying type.","pos":[131,269],"source":" It can also check the <xref:System.Xaml.XamlType.BaseType%2A> for the attribute if no attribute is found on the immediate underlying type."},{"content":"If a value is not available, it returns <ph id=\"ph1\">`false`</ph>.","pos":[270,318],"source":" If a value is not available, it returns `false`."}]},{"pos":[436,557],"content":"Override this method if you want <xref:System.Xaml.XamlType.IsWhitespaceSignificantCollection%2A> to use different logic.","nodes":[{"content":"Override this method if you want <ph id=\"ph1\">&lt;xref:System.Xaml.XamlType.IsWhitespaceSignificantCollection%2A&gt;</ph> to use different logic.","pos":[0,121],"source":"Override this method if you want <xref:System.Xaml.XamlType.IsWhitespaceSignificantCollection%2A> to use different logic."}]}],"pos":[129000,129564],"yaml":true,"extradata":"MT"},{"content":"`true` if this <xref href=\"System.Xaml.XamlType\"></xref> represents a white-space significant collection; otherwise, `false`.","nodes":[{"pos":[0,125],"content":"<ph id=\"ph1\">`true`</ph> if this <ph id=\"ph2\">&lt;xref href=\"System.Xaml.XamlType\"&gt;&lt;/xref&gt;</ph> represents a white-space significant collection; otherwise, <ph id=\"ph3\">`false`</ph>.","source":"`true` if this <xref href=\"System.Xaml.XamlType\"></xref> represents a white-space significant collection; otherwise, `false`."}],"pos":[129731,129859],"yaml":true},{"content":"Returns a value that indicates whether this <xref href=\"System.Xaml.XamlType\"></xref> represents XML `XDATA`, as per the XAML definition.","nodes":[{"pos":[0,137],"content":"Returns a value that indicates whether this <ph id=\"ph1\">&lt;xref href=\"System.Xaml.XamlType\"&gt;&lt;/xref&gt;</ph> represents XML <ph id=\"ph2\">`XDATA`</ph>, as per the XAML definition.","source":"Returns a value that indicates whether this <xref href=\"System.Xaml.XamlType\"></xref> represents XML `XDATA`, as per the XAML definition."}],"pos":[130772,130910],"yaml":true},{"content":"This method can be invoked by calls to <xref:System.Xaml.XamlType.IsXData%2A>.  \n  \n The default implementation makes a <xref:System.Xaml.XamlType.CanAssignTo%2A> call indirectly against the type <xref:System.Xml.Serialization.IXmlSerializable>.  \n  \n Override this method if you want <xref:System.Xaml.XamlType.IsXData%2A> to use different logic.","nodes":[{"pos":[0,78],"content":"This method can be invoked by calls to <xref:System.Xaml.XamlType.IsXData%2A>.","nodes":[{"content":"This method can be invoked by calls to <ph id=\"ph1\">&lt;xref:System.Xaml.XamlType.IsXData%2A&gt;</ph>.","pos":[0,78],"source":"This method can be invoked by calls to <xref:System.Xaml.XamlType.IsXData%2A>."}]},{"pos":[85,245],"content":"The default implementation makes a <xref:System.Xaml.XamlType.CanAssignTo%2A> call indirectly against the type <xref:System.Xml.Serialization.IXmlSerializable>.","nodes":[{"content":"The default implementation makes a <ph id=\"ph1\">&lt;xref:System.Xaml.XamlType.CanAssignTo%2A&gt;</ph> call indirectly against the type <ph id=\"ph2\">&lt;xref:System.Xml.Serialization.IXmlSerializable&gt;</ph>.","pos":[0,160],"source":"The default implementation makes a <xref:System.Xaml.XamlType.CanAssignTo%2A> call indirectly against the type <xref:System.Xml.Serialization.IXmlSerializable>."}]},{"pos":[252,347],"content":"Override this method if you want <xref:System.Xaml.XamlType.IsXData%2A> to use different logic.","nodes":[{"content":"Override this method if you want <ph id=\"ph1\">&lt;xref:System.Xaml.XamlType.IsXData%2A&gt;</ph> to use different logic.","pos":[0,95],"source":"Override this method if you want <xref:System.Xaml.XamlType.IsXData%2A> to use different logic."}]}],"pos":[130921,131275],"yaml":true,"extradata":"MT"},{"content":"`true` if this <xref href=\"System.Xaml.XamlType\"></xref> represents `XDATA`; otherwise, `false`.","nodes":[{"pos":[0,96],"content":"<ph id=\"ph1\">`true`</ph> if this <ph id=\"ph2\">&lt;xref href=\"System.Xaml.XamlType\"&gt;&lt;/xref&gt;</ph> represents <ph id=\"ph3\">`XDATA`</ph>; otherwise, <ph id=\"ph4\">`false`</ph>.","source":"`true` if this <xref href=\"System.Xaml.XamlType\"></xref> represents `XDATA`; otherwise, `false`."}],"pos":[131416,131515],"yaml":true},{"content":"Returns a value that provides the type information for the `Items` property of this <xref href=\"System.Xaml.XamlType\"></xref>.","nodes":[{"pos":[0,126],"content":"Returns a value that provides the type information for the <ph id=\"ph1\">`Items`</ph> property of this <ph id=\"ph2\">&lt;xref href=\"System.Xaml.XamlType\"&gt;&lt;/xref&gt;</ph>.","source":"Returns a value that provides the type information for the `Items` property of this <xref href=\"System.Xaml.XamlType\"></xref>."}],"pos":[132408,132535],"yaml":true},{"content":"This method can be invoked by calls to <xref:System.Xaml.XamlType.ItemType%2A>.  \n  \n The default implementation can use CLR reflection concepts, such as checking for an `Add` method by <xref:System.Reflection.MethodInfo> and using the <xref:System.Reflection.ParameterInfo>; checking <xref:System.Xaml.XamlType.IsArray%2A>; and checking <xref:System.Xaml.XamlType.BaseType%2A> and trying the same logic there.  \n  \n Override this method if you want <xref:System.Xaml.XamlType.ItemType%2A> to use different logic. Cases where <xref:System.Xaml.XamlType.LookupCollectionKind%2A> returns <xref:System.Xaml.Schema.XamlCollectionKind?displayProperty=fullName> should return `null`.","nodes":[{"pos":[0,79],"content":"This method can be invoked by calls to <xref:System.Xaml.XamlType.ItemType%2A>.","nodes":[{"content":"This method can be invoked by calls to <ph id=\"ph1\">&lt;xref:System.Xaml.XamlType.ItemType%2A&gt;</ph>.","pos":[0,79],"source":"This method can be invoked by calls to <xref:System.Xaml.XamlType.ItemType%2A>."}]},{"pos":[86,410],"content":"The default implementation can use CLR reflection concepts, such as checking for an <ph id=\"ph1\">`Add`</ph> method by <ph id=\"ph2\">&lt;xref:System.Reflection.MethodInfo&gt;</ph> and using the <ph id=\"ph3\">&lt;xref:System.Reflection.ParameterInfo&gt;</ph>; checking <ph id=\"ph4\">&lt;xref:System.Xaml.XamlType.IsArray%2A&gt;</ph>; and checking <ph id=\"ph5\">&lt;xref:System.Xaml.XamlType.BaseType%2A&gt;</ph> and trying the same logic there.","source":"The default implementation can use CLR reflection concepts, such as checking for an `Add` method by <xref:System.Reflection.MethodInfo> and using the <xref:System.Reflection.ParameterInfo>; checking <xref:System.Xaml.XamlType.IsArray%2A>; and checking <xref:System.Xaml.XamlType.BaseType%2A> and trying the same logic there."},{"pos":[417,677],"content":"Override this method if you want <xref:System.Xaml.XamlType.ItemType%2A> to use different logic. Cases where <xref:System.Xaml.XamlType.LookupCollectionKind%2A> returns <xref:System.Xaml.Schema.XamlCollectionKind?displayProperty=fullName> should return `null`.","nodes":[{"content":"Override this method if you want <ph id=\"ph1\">&lt;xref:System.Xaml.XamlType.ItemType%2A&gt;</ph> to use different logic.","pos":[0,96],"source":"Override this method if you want <xref:System.Xaml.XamlType.ItemType%2A> to use different logic."},{"content":"Cases where <ph id=\"ph1\">&lt;xref:System.Xaml.XamlType.LookupCollectionKind%2A&gt;</ph> returns <ph id=\"ph2\">&lt;xref:System.Xaml.Schema.XamlCollectionKind?displayProperty=fullName&gt;</ph> should return <ph id=\"ph3\">`null`</ph>.","pos":[97,260],"source":" Cases where <xref:System.Xaml.XamlType.LookupCollectionKind%2A> returns <xref:System.Xaml.Schema.XamlCollectionKind?displayProperty=fullName> should return `null`."}]}],"pos":[132546,133230],"yaml":true,"extradata":"MT"},{"content":"A <xref href=\"System.Xaml.XamlType\"></xref> object for the type of the items in the collection; otherwise, `null` if this <xref href=\"System.Xaml.XamlType\"></xref> does not represent a collection.","nodes":[{"pos":[0,196],"content":"A <ph id=\"ph1\">&lt;xref href=\"System.Xaml.XamlType\"&gt;&lt;/xref&gt;</ph> object for the type of the items in the collection; otherwise, <ph id=\"ph2\">`null`</ph> if this <ph id=\"ph3\">&lt;xref href=\"System.Xaml.XamlType\"&gt;&lt;/xref&gt;</ph> does not represent a collection.","source":"A <xref href=\"System.Xaml.XamlType\"></xref> object for the type of the items in the collection; otherwise, `null` if this <xref href=\"System.Xaml.XamlType\"></xref> does not represent a collection."}],"pos":[133394,133591],"yaml":true},{"content":"Returns a value that provides the type information for the key property of this <xref href=\"System.Xaml.XamlType\"></xref>, if the <xref href=\"System.Xaml.XamlType\"></xref> represents a dictionary.","nodes":[{"pos":[0,196],"content":"Returns a value that provides the type information for the key property of this <ph id=\"ph1\">&lt;xref href=\"System.Xaml.XamlType\"&gt;&lt;/xref&gt;</ph>, if the <ph id=\"ph2\">&lt;xref href=\"System.Xaml.XamlType\"&gt;&lt;/xref&gt;</ph> represents a dictionary.","source":"Returns a value that provides the type information for the key property of this <xref href=\"System.Xaml.XamlType\"></xref>, if the <xref href=\"System.Xaml.XamlType\"></xref> represents a dictionary."}],"pos":[134479,134676],"yaml":true},{"content":"This method can be invoked by calls to <xref:System.Xaml.XamlType.KeyType%2A>.  \n  \n The default implementation can use CLR reflection concepts, such as checking for an `Add` method by <xref:System.Reflection.MethodInfo> and using the <xref:System.Reflection.ParameterInfo>; and checking <xref:System.Xaml.XamlType.BaseType%2A> and trying the same logic there.  \n  \n Override this method if you want <xref:System.Xaml.XamlType.KeyType%2A> to use different logic. Cases where <xref:System.Xaml.XamlType.LookupCollectionKind%2A> does not return <xref:System.Xaml.Schema.XamlCollectionKind?displayProperty=fullName> should return `null`.","nodes":[{"pos":[0,78],"content":"This method can be invoked by calls to <xref:System.Xaml.XamlType.KeyType%2A>.","nodes":[{"content":"This method can be invoked by calls to <ph id=\"ph1\">&lt;xref:System.Xaml.XamlType.KeyType%2A&gt;</ph>.","pos":[0,78],"source":"This method can be invoked by calls to <xref:System.Xaml.XamlType.KeyType%2A>."}]},{"pos":[85,360],"content":"The default implementation can use CLR reflection concepts, such as checking for an <ph id=\"ph1\">`Add`</ph> method by <ph id=\"ph2\">&lt;xref:System.Reflection.MethodInfo&gt;</ph> and using the <ph id=\"ph3\">&lt;xref:System.Reflection.ParameterInfo&gt;</ph>; and checking <ph id=\"ph4\">&lt;xref:System.Xaml.XamlType.BaseType%2A&gt;</ph> and trying the same logic there.","source":"The default implementation can use CLR reflection concepts, such as checking for an `Add` method by <xref:System.Reflection.MethodInfo> and using the <xref:System.Reflection.ParameterInfo>; and checking <xref:System.Xaml.XamlType.BaseType%2A> and trying the same logic there."},{"pos":[367,634],"content":"Override this method if you want <xref:System.Xaml.XamlType.KeyType%2A> to use different logic. Cases where <xref:System.Xaml.XamlType.LookupCollectionKind%2A> does not return <xref:System.Xaml.Schema.XamlCollectionKind?displayProperty=fullName> should return `null`.","nodes":[{"content":"Override this method if you want <ph id=\"ph1\">&lt;xref:System.Xaml.XamlType.KeyType%2A&gt;</ph> to use different logic.","pos":[0,95],"source":"Override this method if you want <xref:System.Xaml.XamlType.KeyType%2A> to use different logic."},{"content":"Cases where <ph id=\"ph1\">&lt;xref:System.Xaml.XamlType.LookupCollectionKind%2A&gt;</ph> does not return <ph id=\"ph2\">&lt;xref:System.Xaml.Schema.XamlCollectionKind?displayProperty=fullName&gt;</ph> should return <ph id=\"ph3\">`null`</ph>.","pos":[96,267],"source":" Cases where <xref:System.Xaml.XamlType.LookupCollectionKind%2A> does not return <xref:System.Xaml.Schema.XamlCollectionKind?displayProperty=fullName> should return `null`."}]}],"pos":[134687,135328],"yaml":true,"extradata":"MT"},{"content":"A <xref href=\"System.Xaml.XamlType\"></xref> object for the type of the key for dictionary usage, or `null` if this <xref href=\"System.Xaml.XamlType\"></xref> does not represent a dictionary,","nodes":[{"pos":[0,189],"content":"A <ph id=\"ph1\">&lt;xref href=\"System.Xaml.XamlType\"&gt;&lt;/xref&gt;</ph> object for the type of the key for dictionary usage, or <ph id=\"ph2\">`null`</ph> if this <ph id=\"ph3\">&lt;xref href=\"System.Xaml.XamlType\"&gt;&lt;/xref&gt;</ph> does not represent a dictionary,","source":"A <xref href=\"System.Xaml.XamlType\"></xref> object for the type of the key for dictionary usage, or `null` if this <xref href=\"System.Xaml.XamlType\"></xref> does not represent a dictionary,"}],"pos":[135491,135681],"yaml":true},{"content":"Returns a value that provides the type information for the returned `ProvideValue` of this <xref href=\"System.Xaml.XamlType\"></xref>, if it represents a markup extension.","nodes":[{"pos":[0,170],"content":"Returns a value that provides the type information for the returned <ph id=\"ph1\">`ProvideValue`</ph> of this <ph id=\"ph2\">&lt;xref href=\"System.Xaml.XamlType\"&gt;&lt;/xref&gt;</ph>, if it represents a markup extension.","source":"Returns a value that provides the type information for the returned `ProvideValue` of this <xref href=\"System.Xaml.XamlType\"></xref>, if it represents a markup extension."}],"pos":[136676,136847],"yaml":true},{"content":"This method can be invoked by calls to <xref:System.Xaml.XamlType.MarkupExtensionReturnType%2A>.  \n  \n The default implementation returns a <xref:System.Xaml.XamlType> on the basis of reading <xref:System.Windows.Markup.MarkupExtensionReturnTypeAttribute>. It can also check <xref:System.Xaml.XamlType.BaseType%2A> for the attribute if no attribute is found on the immediate underlying type. If a value is not available, it returns `null`.  \n  \n Override this method if you want <xref:System.Xaml.XamlType.MarkupExtensionReturnType%2A> to use different logic.","nodes":[{"pos":[0,96],"content":"This method can be invoked by calls to <xref:System.Xaml.XamlType.MarkupExtensionReturnType%2A>.","nodes":[{"content":"This method can be invoked by calls to <ph id=\"ph1\">&lt;xref:System.Xaml.XamlType.MarkupExtensionReturnType%2A&gt;</ph>.","pos":[0,96],"source":"This method can be invoked by calls to <xref:System.Xaml.XamlType.MarkupExtensionReturnType%2A>."}]},{"pos":[103,439],"content":"The default implementation returns a <xref:System.Xaml.XamlType> on the basis of reading <xref:System.Windows.Markup.MarkupExtensionReturnTypeAttribute>. It can also check <xref:System.Xaml.XamlType.BaseType%2A> for the attribute if no attribute is found on the immediate underlying type. If a value is not available, it returns `null`.","nodes":[{"content":"The default implementation returns a <ph id=\"ph1\">&lt;xref:System.Xaml.XamlType&gt;</ph> on the basis of reading <ph id=\"ph2\">&lt;xref:System.Windows.Markup.MarkupExtensionReturnTypeAttribute&gt;</ph>.","pos":[0,153],"source":"The default implementation returns a <xref:System.Xaml.XamlType> on the basis of reading <xref:System.Windows.Markup.MarkupExtensionReturnTypeAttribute>."},{"content":"It can also check <ph id=\"ph1\">&lt;xref:System.Xaml.XamlType.BaseType%2A&gt;</ph> for the attribute if no attribute is found on the immediate underlying type.","pos":[154,288],"source":" It can also check <xref:System.Xaml.XamlType.BaseType%2A> for the attribute if no attribute is found on the immediate underlying type."},{"content":"If a value is not available, it returns <ph id=\"ph1\">`null`</ph>.","pos":[289,336],"source":" If a value is not available, it returns `null`."}]},{"pos":[446,559],"content":"Override this method if you want <xref:System.Xaml.XamlType.MarkupExtensionReturnType%2A> to use different logic.","nodes":[{"content":"Override this method if you want <ph id=\"ph1\">&lt;xref:System.Xaml.XamlType.MarkupExtensionReturnType%2A&gt;</ph> to use different logic.","pos":[0,113],"source":"Override this method if you want <xref:System.Xaml.XamlType.MarkupExtensionReturnType%2A> to use different logic."}]}],"pos":[136858,137424],"yaml":true,"extradata":"MT"},{"content":"A <xref href=\"System.Xaml.XamlType\"></xref> object for the return type for markup extension usage; otherwise, `null`, if this <xref href=\"System.Xaml.XamlType\"></xref> does not represent a markup extension.","nodes":[{"pos":[0,206],"content":"A <ph id=\"ph1\">&lt;xref href=\"System.Xaml.XamlType\"&gt;&lt;/xref&gt;</ph> object for the return type for markup extension usage; otherwise, <ph id=\"ph2\">`null`</ph>, if this <ph id=\"ph3\">&lt;xref href=\"System.Xaml.XamlType\"&gt;&lt;/xref&gt;</ph> does not represent a markup extension.","source":"A <xref href=\"System.Xaml.XamlType\"></xref> object for the return type for markup extension usage; otherwise, `null`, if this <xref href=\"System.Xaml.XamlType\"></xref> does not represent a markup extension."}],"pos":[137605,137812],"yaml":true},{"content":"Returns the <xref href=\"System.Xaml.XamlMember\"></xref> for a specific named member from this <xref href=\"System.Xaml.XamlType\"></xref>.","nodes":[{"pos":[0,136],"content":"Returns the <ph id=\"ph1\">&lt;xref href=\"System.Xaml.XamlMember\"&gt;&lt;/xref&gt;</ph> for a specific named member from this <ph id=\"ph2\">&lt;xref href=\"System.Xaml.XamlType\"&gt;&lt;/xref&gt;</ph>.","source":"Returns the <xref href=\"System.Xaml.XamlMember\"></xref> for a specific named member from this <xref href=\"System.Xaml.XamlType\"></xref>."}],"pos":[138846,138983],"yaml":true},{"content":"This method can be invoked by calls to <xref:System.Xaml.XamlType.GetMember%2A>.  \n  \n The default implementation returns a <xref:System.Xaml.XamlType> based on internal CLR reflection and evaluation against the schema context.  \n  \n Override this method if you want <xref:System.Xaml.XamlType.GetMember%2A> to use different logic.  \n  \n> [!IMPORTANT]\n>  <xref:System.Xaml.XamlType.LookupMember%2A> is virtual, and therefore, can be overridden. The override has the potential (whether for malicious purposes or otherwise) to change the reported members of a XAML type so that they no longer align in an expected way with the <xref:System.ComponentModel.TypeDescriptor> `Get*` information about the underlying CLR type. For any security-critical checks of member reporting, use the underlying CLR type instead.","nodes":[{"pos":[0,80],"content":"This method can be invoked by calls to <xref:System.Xaml.XamlType.GetMember%2A>.","nodes":[{"content":"This method can be invoked by calls to <ph id=\"ph1\">&lt;xref:System.Xaml.XamlType.GetMember%2A&gt;</ph>.","pos":[0,80],"source":"This method can be invoked by calls to <xref:System.Xaml.XamlType.GetMember%2A>."}]},{"pos":[87,227],"content":"The default implementation returns a <xref:System.Xaml.XamlType> based on internal CLR reflection and evaluation against the schema context.","nodes":[{"content":"The default implementation returns a <ph id=\"ph1\">&lt;xref:System.Xaml.XamlType&gt;</ph> based on internal CLR reflection and evaluation against the schema context.","pos":[0,140],"source":"The default implementation returns a <xref:System.Xaml.XamlType> based on internal CLR reflection and evaluation against the schema context."}]},{"pos":[234,331],"content":"Override this method if you want <xref:System.Xaml.XamlType.GetMember%2A> to use different logic.","nodes":[{"content":"Override this method if you want <ph id=\"ph1\">&lt;xref:System.Xaml.XamlType.GetMember%2A&gt;</ph> to use different logic.","pos":[0,97],"source":"Override this method if you want <xref:System.Xaml.XamlType.GetMember%2A> to use different logic."}]},{"pos":[339,809],"content":"[!IMPORTANT]\n <xref:System.Xaml.XamlType.LookupMember%2A> is virtual, and therefore, can be overridden. The override has the potential (whether for malicious purposes or otherwise) to change the reported members of a XAML type so that they no longer align in an expected way with the <xref:System.ComponentModel.TypeDescriptor> `Get*` information about the underlying CLR type. For any security-critical checks of member reporting, use the underlying CLR type instead.","leadings":["","> "],"nodes":[{"content":" <xref:System.Xaml.XamlType.LookupMember%2A> is virtual, and therefore, can be overridden. The override has the potential (whether for malicious purposes or otherwise) to change the reported members of a XAML type so that they no longer align in an expected way with the <xref:System.ComponentModel.TypeDescriptor> `Get*` information about the underlying CLR type. For any security-critical checks of member reporting, use the underlying CLR type instead.","pos":[13,468],"nodes":[{"content":"<ph id=\"ph1\">&lt;xref:System.Xaml.XamlType.LookupMember%2A&gt;</ph> is virtual, and therefore, can be overridden.","pos":[1,90],"source":" <xref:System.Xaml.XamlType.LookupMember%2A> is virtual, and therefore, can be overridden."},{"content":"The override has the potential (whether for malicious purposes or otherwise) to change the reported members of a XAML type so that they no longer align in an expected way with the <ph id=\"ph1\">&lt;xref:System.ComponentModel.TypeDescriptor&gt;</ph> <ph id=\"ph2\">`Get*`</ph> information about the underlying CLR type.","pos":[91,364],"source":" The override has the potential (whether for malicious purposes or otherwise) to change the reported members of a XAML type so that they no longer align in an expected way with the <xref:System.ComponentModel.TypeDescriptor> `Get*` information about the underlying CLR type."},{"content":"For any security-critical checks of member reporting, use the underlying CLR type instead.","pos":[365,455]}]}]}],"pos":[138994,139813],"yaml":true,"extradata":"MT"},{"content":"The name of the member to get (as a string).","nodes":[{"pos":[0,44],"content":"The name of the member to get (as a string).","nodes":[{"content":"The name of the member to get (as a string).","pos":[0,44]}]}],"pos":[140005,140050],"yaml":true},{"content":"`true` to return a member even if that member has a `true` value for <xref href=\"System.Xaml.XamlMember.IsReadOnly\"></xref>; `false` to not return a <xref href=\"System.Xaml.XamlMember.IsReadOnly\"></xref> member. The default is `false`.","nodes":[{"pos":[0,235],"content":"`true` to return a member even if that member has a `true` value for <xref href=\"System.Xaml.XamlMember.IsReadOnly\"></xref>; `false` to not return a <xref href=\"System.Xaml.XamlMember.IsReadOnly\"></xref> member. The default is `false`.","nodes":[{"content":"<ph id=\"ph1\">`true`</ph> to return a member even if that member has a <ph id=\"ph2\">`true`</ph> value for <ph id=\"ph3\">&lt;xref href=\"System.Xaml.XamlMember.IsReadOnly\"&gt;&lt;/xref&gt;</ph>; <ph id=\"ph4\">`false`</ph> to not return a <ph id=\"ph5\">&lt;xref href=\"System.Xaml.XamlMember.IsReadOnly\"&gt;&lt;/xref&gt;</ph> member.","pos":[0,211],"source":"`true` to return a member even if that member has a `true` value for <xref href=\"System.Xaml.XamlMember.IsReadOnly\"></xref>; `false` to not return a <xref href=\"System.Xaml.XamlMember.IsReadOnly\"></xref> member."},{"content":"The default is <ph id=\"ph1\">`false`</ph>.","pos":[212,235],"source":" The default is `false`."}]}],"pos":[140124,140362],"yaml":true},{"content":"The <xref href=\"System.Xaml.XamlMember\"></xref> information for the member, if a member was found; otherwise, `null`.","nodes":[{"pos":[0,117],"content":"The <ph id=\"ph1\">&lt;xref href=\"System.Xaml.XamlMember\"&gt;&lt;/xref&gt;</ph> information for the member, if a member was found; otherwise, <ph id=\"ph2\">`null`</ph>.","source":"The <xref href=\"System.Xaml.XamlMember\"></xref> information for the member, if a member was found; otherwise, `null`."}],"pos":[140428,140546],"yaml":true},{"content":"For markup extension types, returns the types of the positional parameters that are supported in a specific markup extension usage for this <xref href=\"System.Xaml.XamlType\"></xref>.","nodes":[{"pos":[0,182],"content":"For markup extension types, returns the types of the positional parameters that are supported in a specific markup extension usage for this <ph id=\"ph1\">&lt;xref href=\"System.Xaml.XamlType\"&gt;&lt;/xref&gt;</ph>.","source":"For markup extension types, returns the types of the positional parameters that are supported in a specific markup extension usage for this <xref href=\"System.Xaml.XamlType\"></xref>."}],"pos":[141567,141750],"yaml":true},{"content":"This method can be invoked by calls to <xref:System.Xaml.XamlType.GetPositionalParameters%2A>.  \n  \n The default implementation uses internal reflection information based on finding constructors and checking the arity. Override this method if you want <xref:System.Xaml.XamlType.GetPositionalParameters%2A> to use different logic.  \n  \n This API is only relevant if this <xref:System.Xaml.XamlType> represents a markup extension (<xref:System.Xaml.XamlType.IsMarkupExtension%2A> is `true`).  \n  \n The input `parameterCount` is not for requesting the type of a specific positional parameter. It is for specifying the arity of a markup extension usage. Markup extension usage often has multiple signatures and uses different parameter arity (count) of positional parameters to differentiate. However, you can configure a schema context to allow duplicate arities and use types of the positional parameters for differentiation. For more information, see <xref:System.Xaml.XamlSchemaContext.SupportMarkupExtensionsWithDuplicateArity%2A>. For a specific arity count, the parameter positions and types can vary. To get the positional type of a specific arity's markup extension usage, you first call <xref:System.Xaml.XamlType.GetPositionalParameters%2A> with the arity count. Then get the item at that position from the returned collection.","nodes":[{"pos":[0,94],"content":"This method can be invoked by calls to <xref:System.Xaml.XamlType.GetPositionalParameters%2A>.","nodes":[{"content":"This method can be invoked by calls to <ph id=\"ph1\">&lt;xref:System.Xaml.XamlType.GetPositionalParameters%2A&gt;</ph>.","pos":[0,94],"source":"This method can be invoked by calls to <xref:System.Xaml.XamlType.GetPositionalParameters%2A>."}]},{"pos":[101,330],"content":"The default implementation uses internal reflection information based on finding constructors and checking the arity. Override this method if you want <xref:System.Xaml.XamlType.GetPositionalParameters%2A> to use different logic.","nodes":[{"content":"The default implementation uses internal reflection information based on finding constructors and checking the arity. Override this method if you want <xref:System.Xaml.XamlType.GetPositionalParameters%2A> to use different logic.","pos":[0,229],"nodes":[{"content":"The default implementation uses internal reflection information based on finding constructors and checking the arity.","pos":[0,117]},{"content":"Override this method if you want <ph id=\"ph1\">&lt;xref:System.Xaml.XamlType.GetPositionalParameters%2A&gt;</ph> to use different logic.","pos":[118,229],"source":" Override this method if you want <xref:System.Xaml.XamlType.GetPositionalParameters%2A> to use different logic."}]}]},{"pos":[337,490],"content":"This API is only relevant if this <ph id=\"ph1\">&lt;xref:System.Xaml.XamlType&gt;</ph> represents a markup extension (<ph id=\"ph2\">&lt;xref:System.Xaml.XamlType.IsMarkupExtension%2A&gt;</ph> is <ph id=\"ph3\">`true`</ph>).","source":"This API is only relevant if this <xref:System.Xaml.XamlType> represents a markup extension (<xref:System.Xaml.XamlType.IsMarkupExtension%2A> is `true`)."},{"pos":[497,1335],"content":"The input `parameterCount` is not for requesting the type of a specific positional parameter. It is for specifying the arity of a markup extension usage. Markup extension usage often has multiple signatures and uses different parameter arity (count) of positional parameters to differentiate. However, you can configure a schema context to allow duplicate arities and use types of the positional parameters for differentiation. For more information, see <xref:System.Xaml.XamlSchemaContext.SupportMarkupExtensionsWithDuplicateArity%2A>. For a specific arity count, the parameter positions and types can vary. To get the positional type of a specific arity's markup extension usage, you first call <xref:System.Xaml.XamlType.GetPositionalParameters%2A> with the arity count. Then get the item at that position from the returned collection.","nodes":[{"content":"The input <ph id=\"ph1\">`parameterCount`</ph> is not for requesting the type of a specific positional parameter.","pos":[0,93],"source":"The input `parameterCount` is not for requesting the type of a specific positional parameter."},{"content":"It is for specifying the arity of a markup extension usage.","pos":[94,153]},{"content":"Markup extension usage often has multiple signatures and uses different parameter arity (count) of positional parameters to differentiate.","pos":[154,292]},{"content":"However, you can configure a schema context to allow duplicate arities and use types of the positional parameters for differentiation.","pos":[293,427]},{"content":"For more information, see <ph id=\"ph1\">&lt;xref:System.Xaml.XamlSchemaContext.SupportMarkupExtensionsWithDuplicateArity%2A&gt;</ph>.","pos":[428,536],"source":" For more information, see <xref:System.Xaml.XamlSchemaContext.SupportMarkupExtensionsWithDuplicateArity%2A>."},{"content":"For a specific arity count, the parameter positions and types can vary.","pos":[537,608]},{"content":"To get the positional type of a specific arity's markup extension usage, you first call <ph id=\"ph1\">&lt;xref:System.Xaml.XamlType.GetPositionalParameters%2A&gt;</ph> with the arity count.","pos":[609,773],"source":" To get the positional type of a specific arity's markup extension usage, you first call <xref:System.Xaml.XamlType.GetPositionalParameters%2A> with the arity count."},{"content":"Then get the item at that position from the returned collection.","pos":[774,838]}]}],"pos":[141761,143105],"yaml":true,"extradata":"MT"},{"content":"The count (arity) of the particular syntax or constructor mode that you want information about.","nodes":[{"pos":[0,95],"content":"The count (arity) of the particular syntax or constructor mode that you want information about.","nodes":[{"content":"The count (arity) of the particular syntax or constructor mode that you want information about.","pos":[0,95]}]}],"pos":[143335,143431],"yaml":true},{"content":"A list of <xref href=\"System.Xaml.XamlType\"></xref> values where each such <xref href=\"System.Xaml.XamlType\"></xref> is the type for that position in the syntax. You must specify those types in the same order when supplying markup input for the markup extension.","nodes":[{"pos":[0,262],"content":"A list of <xref href=\"System.Xaml.XamlType\"></xref> values where each such <xref href=\"System.Xaml.XamlType\"></xref> is the type for that position in the syntax. You must specify those types in the same order when supplying markup input for the markup extension.","nodes":[{"content":"A list of <ph id=\"ph1\">&lt;xref href=\"System.Xaml.XamlType\"&gt;&lt;/xref&gt;</ph> values where each such <ph id=\"ph2\">&lt;xref href=\"System.Xaml.XamlType\"&gt;&lt;/xref&gt;</ph> is the type for that position in the syntax.","pos":[0,161],"source":"A list of <xref href=\"System.Xaml.XamlType\"></xref> values where each such <xref href=\"System.Xaml.XamlType\"></xref> is the type for that position in the syntax."},{"content":"You must specify those types in the same order when supplying markup input for the markup extension.","pos":[162,262]}]}],"pos":[143529,143792],"yaml":true},{"content":"Returns a handler callback to use for the set operations of markup extensions.","nodes":[{"pos":[0,78],"content":"Returns a handler callback to use for the set operations of markup extensions.","nodes":[{"content":"Returns a handler callback to use for the set operations of markup extensions.","pos":[0,78]}]}],"pos":[144800,144879],"yaml":true},{"content":"The default implementation returns a value based on reading <xref:System.Windows.Markup.XamlSetMarkupExtensionAttribute>. It can also check <xref:System.Xaml.XamlType.BaseType%2A> for the attribute if no attribute is found on the immediate underlying type. If a value is unavailable, it returns `null`.","nodes":[{"pos":[0,302],"content":"The default implementation returns a value based on reading <xref:System.Windows.Markup.XamlSetMarkupExtensionAttribute>. It can also check <xref:System.Xaml.XamlType.BaseType%2A> for the attribute if no attribute is found on the immediate underlying type. If a value is unavailable, it returns `null`.","nodes":[{"content":"The default implementation returns a value based on reading <ph id=\"ph1\">&lt;xref:System.Windows.Markup.XamlSetMarkupExtensionAttribute&gt;</ph>.","pos":[0,121],"source":"The default implementation returns a value based on reading <xref:System.Windows.Markup.XamlSetMarkupExtensionAttribute>."},{"content":"It can also check <ph id=\"ph1\">&lt;xref:System.Xaml.XamlType.BaseType%2A&gt;</ph> for the attribute if no attribute is found on the immediate underlying type.","pos":[122,256],"source":" It can also check <xref:System.Xaml.XamlType.BaseType%2A> for the attribute if no attribute is found on the immediate underlying type."},{"content":"If a value is unavailable, it returns <ph id=\"ph1\">`null`</ph>.","pos":[257,302],"source":" If a value is unavailable, it returns `null`."}]}],"pos":[144890,145193],"yaml":true,"extradata":"MT"},{"content":"A handler callback to use for the set operations of markup extensions.","nodes":[{"pos":[0,70],"content":"A handler callback to use for the set operations of markup extensions.","nodes":[{"content":"A handler callback to use for the set operations of markup extensions.","pos":[0,70]}]}],"pos":[145475,145546],"yaml":true},{"content":"Returns a handler to use for type converter setting cases.","nodes":[{"pos":[0,58],"content":"Returns a handler to use for type converter setting cases.","nodes":[{"content":"Returns a handler to use for type converter setting cases.","pos":[0,58]}]}],"pos":[146547,146606],"yaml":true},{"content":"The default implementation returns a value based on reading <xref:System.Windows.Markup.XamlSetTypeConverterAttribute>. It can also check <xref:System.Xaml.XamlType.BaseType%2A> for the attribute if no attribute is found on the immediate underlying type. If a value is unavailable, it returns `null`.","nodes":[{"pos":[0,300],"content":"The default implementation returns a value based on reading <xref:System.Windows.Markup.XamlSetTypeConverterAttribute>. It can also check <xref:System.Xaml.XamlType.BaseType%2A> for the attribute if no attribute is found on the immediate underlying type. If a value is unavailable, it returns `null`.","nodes":[{"content":"The default implementation returns a value based on reading <ph id=\"ph1\">&lt;xref:System.Windows.Markup.XamlSetTypeConverterAttribute&gt;</ph>.","pos":[0,119],"source":"The default implementation returns a value based on reading <xref:System.Windows.Markup.XamlSetTypeConverterAttribute>."},{"content":"It can also check <ph id=\"ph1\">&lt;xref:System.Xaml.XamlType.BaseType%2A&gt;</ph> for the attribute if no attribute is found on the immediate underlying type.","pos":[120,254],"source":" It can also check <xref:System.Xaml.XamlType.BaseType%2A> for the attribute if no attribute is found on the immediate underlying type."},{"content":"If a value is unavailable, it returns <ph id=\"ph1\">`null`</ph>.","pos":[255,300],"source":" If a value is unavailable, it returns `null`."}]}],"pos":[146617,146918],"yaml":true,"extradata":"MT"},{"content":"A handler to use for type converter setting cases.","nodes":[{"pos":[0,50],"content":"A handler to use for type converter setting cases.","nodes":[{"content":"A handler to use for type converter setting cases.","pos":[0,50]}]}],"pos":[147194,147245],"yaml":true},{"content":"Returns a value that indicates whether this <xref href=\"System.Xaml.XamlType\"></xref> should be serialized using a mode that  trims surrounding whitespace.","nodes":[{"pos":[0,155],"content":"Returns a value that indicates whether this <ph id=\"ph1\">&lt;xref href=\"System.Xaml.XamlType\"&gt;&lt;/xref&gt;</ph> should be serialized using a mode that  trims surrounding whitespace.","source":"Returns a value that indicates whether this <xref href=\"System.Xaml.XamlType\"></xref> should be serialized using a mode that  trims surrounding whitespace."}],"pos":[148256,148412],"yaml":true},{"content":"This method can be invoked by calls to <xref:System.Xaml.XamlType.TrimSurroundingWhitespace%2A>.  \n  \n The default implementation returns a value based on reading <xref:System.Windows.Markup.TrimSurroundingWhitespaceAttribute>. It can also check <xref:System.Xaml.XamlType.BaseType%2A> for the attribute if no attribute is found on the immediate underlying type. If a value is unavailable, it returns `false`.","nodes":[{"pos":[0,96],"content":"This method can be invoked by calls to <xref:System.Xaml.XamlType.TrimSurroundingWhitespace%2A>.","nodes":[{"content":"This method can be invoked by calls to <ph id=\"ph1\">&lt;xref:System.Xaml.XamlType.TrimSurroundingWhitespace%2A&gt;</ph>.","pos":[0,96],"source":"This method can be invoked by calls to <xref:System.Xaml.XamlType.TrimSurroundingWhitespace%2A>."}]},{"pos":[103,409],"content":"The default implementation returns a value based on reading <xref:System.Windows.Markup.TrimSurroundingWhitespaceAttribute>. It can also check <xref:System.Xaml.XamlType.BaseType%2A> for the attribute if no attribute is found on the immediate underlying type. If a value is unavailable, it returns `false`.","nodes":[{"content":"The default implementation returns a value based on reading <ph id=\"ph1\">&lt;xref:System.Windows.Markup.TrimSurroundingWhitespaceAttribute&gt;</ph>.","pos":[0,124],"source":"The default implementation returns a value based on reading <xref:System.Windows.Markup.TrimSurroundingWhitespaceAttribute>."},{"content":"It can also check <ph id=\"ph1\">&lt;xref:System.Xaml.XamlType.BaseType%2A&gt;</ph> for the attribute if no attribute is found on the immediate underlying type.","pos":[125,259],"source":" It can also check <xref:System.Xaml.XamlType.BaseType%2A> for the attribute if no attribute is found on the immediate underlying type."},{"content":"If a value is unavailable, it returns <ph id=\"ph1\">`false`</ph>.","pos":[260,306],"source":" If a value is unavailable, it returns `false`."}]}],"pos":[148423,148837],"yaml":true,"extradata":"MT"},{"content":"`true` if this <xref href=\"System.Xaml.XamlType\"></xref> should be serialized in a mode that trims surrounding whitespace; otherwise, `false`.","nodes":[{"pos":[0,142],"content":"<ph id=\"ph1\">`true`</ph> if this <ph id=\"ph2\">&lt;xref href=\"System.Xaml.XamlType\"&gt;&lt;/xref&gt;</ph> should be serialized in a mode that trims surrounding whitespace; otherwise, <ph id=\"ph3\">`false`</ph>.","source":"`true` if this <xref href=\"System.Xaml.XamlType\"></xref> should be serialized in a mode that trims surrounding whitespace; otherwise, `false`."}],"pos":[148996,149141],"yaml":true},{"content":"Returns a <xref href=\"System.Xaml.Schema.XamlValueConverter`1\"></xref> that has a <xref href=\"System.ComponentModel.TypeConverter\"></xref> constraint, which represents type-conversion behavior for values of this <xref href=\"System.Xaml.XamlType\"></xref>.","nodes":[{"pos":[0,254],"content":"Returns a <ph id=\"ph1\">&lt;xref href=\"System.Xaml.Schema.XamlValueConverter`1\"&gt;&lt;/xref&gt;</ph> that has a <ph id=\"ph2\">&lt;xref href=\"System.ComponentModel.TypeConverter\"&gt;&lt;/xref&gt;</ph> constraint, which represents type-conversion behavior for values of this <ph id=\"ph3\">&lt;xref href=\"System.Xaml.XamlType\"&gt;&lt;/xref&gt;</ph>.","source":"Returns a <xref href=\"System.Xaml.Schema.XamlValueConverter`1\"></xref> that has a <xref href=\"System.ComponentModel.TypeConverter\"></xref> constraint, which represents type-conversion behavior for values of this <xref href=\"System.Xaml.XamlType\"></xref>."}],"pos":[150082,150337],"yaml":true},{"content":"This method can be invoked by calls to <xref:System.Xaml.XamlType.TypeConverter%2A>.  \n  \n The default implementation returns a value based on reading <xref:System.ComponentModel.TypeConverterAttribute>. The default implementation can also check <xref:System.Xaml.XamlType.BaseType%2A> for the attribute if no attribute is found on the immediate underlying type. It also includes special logic for default conversion of enumerations, common value types, and generics. If a value is unavailable, it returns `null`.  \n  \n Override this method if you want <xref:System.Xaml.XamlType.TypeConverter%2A> to use different logic.","nodes":[{"pos":[0,84],"content":"This method can be invoked by calls to <xref:System.Xaml.XamlType.TypeConverter%2A>.","nodes":[{"content":"This method can be invoked by calls to <ph id=\"ph1\">&lt;xref:System.Xaml.XamlType.TypeConverter%2A&gt;</ph>.","pos":[0,84],"source":"This method can be invoked by calls to <xref:System.Xaml.XamlType.TypeConverter%2A>."}]},{"pos":[91,513],"content":"The default implementation returns a value based on reading <xref:System.ComponentModel.TypeConverterAttribute>. The default implementation can also check <xref:System.Xaml.XamlType.BaseType%2A> for the attribute if no attribute is found on the immediate underlying type. It also includes special logic for default conversion of enumerations, common value types, and generics. If a value is unavailable, it returns `null`.","nodes":[{"content":"The default implementation returns a value based on reading <ph id=\"ph1\">&lt;xref:System.ComponentModel.TypeConverterAttribute&gt;</ph>.","pos":[0,112],"source":"The default implementation returns a value based on reading <xref:System.ComponentModel.TypeConverterAttribute>."},{"content":"The default implementation can also check <ph id=\"ph1\">&lt;xref:System.Xaml.XamlType.BaseType%2A&gt;</ph> for the attribute if no attribute is found on the immediate underlying type.","pos":[113,271],"source":" The default implementation can also check <xref:System.Xaml.XamlType.BaseType%2A> for the attribute if no attribute is found on the immediate underlying type."},{"content":"It also includes special logic for default conversion of enumerations, common value types, and generics.","pos":[272,376]},{"content":"If a value is unavailable, it returns <ph id=\"ph1\">`null`</ph>.","pos":[377,422],"source":" If a value is unavailable, it returns `null`."}]},{"pos":[520,621],"content":"Override this method if you want <xref:System.Xaml.XamlType.TypeConverter%2A> to use different logic.","nodes":[{"content":"Override this method if you want <ph id=\"ph1\">&lt;xref:System.Xaml.XamlType.TypeConverter%2A&gt;</ph> to use different logic.","pos":[0,101],"source":"Override this method if you want <xref:System.Xaml.XamlType.TypeConverter%2A> to use different logic."}]}],"pos":[150348,150976],"yaml":true,"extradata":"MT"},{"content":"A <xref href=\"System.Xaml.Schema.XamlValueConverter`1\"></xref> with <xref href=\"System.ComponentModel.TypeConverter\"></xref> constraint that represents type-conversion behavior for values of this <xref href=\"System.Xaml.XamlType\"></xref>; otherwise, `null`.","nodes":[{"pos":[0,257],"content":"A <ph id=\"ph1\">&lt;xref href=\"System.Xaml.Schema.XamlValueConverter`1\"&gt;&lt;/xref&gt;</ph> with <ph id=\"ph2\">&lt;xref href=\"System.ComponentModel.TypeConverter\"&gt;&lt;/xref&gt;</ph> constraint that represents type-conversion behavior for values of this <ph id=\"ph3\">&lt;xref href=\"System.Xaml.XamlType\"&gt;&lt;/xref&gt;</ph>; otherwise, <ph id=\"ph4\">`null`</ph>.","source":"A <xref href=\"System.Xaml.Schema.XamlValueConverter`1\"></xref> with <xref href=\"System.ComponentModel.TypeConverter\"></xref> constraint that represents type-conversion behavior for values of this <xref href=\"System.Xaml.XamlType\"></xref>; otherwise, `null`."}],"pos":[151253,151511],"yaml":true},{"content":"Returns the CLR <xref href=\"System.Type\"></xref> that underlies this <xref href=\"System.Xaml.XamlType\"></xref>.","nodes":[{"pos":[0,111],"content":"Returns the CLR <ph id=\"ph1\">&lt;xref href=\"System.Type\"&gt;&lt;/xref&gt;</ph> that underlies this <ph id=\"ph2\">&lt;xref href=\"System.Xaml.XamlType\"&gt;&lt;/xref&gt;</ph>.","source":"Returns the CLR <xref href=\"System.Type\"></xref> that underlies this <xref href=\"System.Xaml.XamlType\"></xref>."}],"pos":[152446,152558],"yaml":true},{"content":"This method can be invoked by calls to <xref:System.Xaml.XamlType.UnderlyingType%2A>.  \n  \n The default implementation returns an internal field. That field is generally initialized during construction and its value is based on which constructor was called and the information that you provided.  \n  \n Override this method if you want <xref:System.Xaml.XamlType.UnderlyingType%2A> to use different logic.","nodes":[{"pos":[0,85],"content":"This method can be invoked by calls to <xref:System.Xaml.XamlType.UnderlyingType%2A>.","nodes":[{"content":"This method can be invoked by calls to <ph id=\"ph1\">&lt;xref:System.Xaml.XamlType.UnderlyingType%2A&gt;</ph>.","pos":[0,85],"source":"This method can be invoked by calls to <xref:System.Xaml.XamlType.UnderlyingType%2A>."}]},{"pos":[92,295],"content":"The default implementation returns an internal field. That field is generally initialized during construction and its value is based on which constructor was called and the information that you provided.","nodes":[{"content":"The default implementation returns an internal field. That field is generally initialized during construction and its value is based on which constructor was called and the information that you provided.","pos":[0,203],"nodes":[{"content":"The default implementation returns an internal field.","pos":[0,53]},{"content":"That field is generally initialized during construction and its value is based on which constructor was called and the information that you provided.","pos":[54,203]}]}]},{"pos":[302,404],"content":"Override this method if you want <xref:System.Xaml.XamlType.UnderlyingType%2A> to use different logic.","nodes":[{"content":"Override this method if you want <ph id=\"ph1\">&lt;xref:System.Xaml.XamlType.UnderlyingType%2A&gt;</ph> to use different logic.","pos":[0,102],"source":"Override this method if you want <xref:System.Xaml.XamlType.UnderlyingType%2A> to use different logic."}]}],"pos":[152569,152980],"yaml":true,"extradata":"MT"},{"content":"The CLR <xref href=\"System.Type\"></xref> that underlies this <xref href=\"System.Xaml.XamlType\"></xref>; otherwise, `null`.","nodes":[{"pos":[0,122],"content":"The CLR <ph id=\"ph1\">&lt;xref href=\"System.Type\"&gt;&lt;/xref&gt;</ph> that underlies this <ph id=\"ph2\">&lt;xref href=\"System.Xaml.XamlType\"&gt;&lt;/xref&gt;</ph>; otherwise, <ph id=\"ph3\">`null`</ph>.","source":"The CLR <xref href=\"System.Type\"></xref> that underlies this <xref href=\"System.Xaml.XamlType\"></xref>; otherwise, `null`."}],"pos":[153125,153248],"yaml":true},{"content":"Returns a value that indicates whether this <xref href=\"System.Xaml.XamlType\"></xref> is built top-down during XAML initialization.","nodes":[{"pos":[0,131],"content":"Returns a value that indicates whether this <ph id=\"ph1\">&lt;xref href=\"System.Xaml.XamlType\"&gt;&lt;/xref&gt;</ph> is built top-down during XAML initialization.","source":"Returns a value that indicates whether this <xref href=\"System.Xaml.XamlType\"></xref> is built top-down during XAML initialization."}],"pos":[154256,154388],"yaml":true},{"content":"Top-down is a metaphor that approximates XAML processor behavior when it creates the object graph. When built top-down, a type is instantiated, attached to the parent, and has its properties set. Top-down construction avoids invoking property-changed handlers multiple times. Such handling ripples up the object graph and therefore, eliminates the multiple handler calls and provides a performance optimization for startup of the object graph.  \n  \n This method can be invoked by calls to <xref:System.Xaml.XamlType.IsUsableDuringInitialization%2A>.  \n  \n The default implementation returns a value based on reading <xref:System.Windows.Markup.UsableDuringInitializationAttribute>. It can also check <xref:System.Xaml.XamlType.BaseType%2A> for the attribute if no attribute is found on the immediate underlying type. If a value is unavailable, it returns `false`.  \n  \n Override this method if you want <xref:System.Xaml.XamlType.IsUsableDuringInitialization%2A> to use different logic.","nodes":[{"pos":[0,443],"content":"Top-down is a metaphor that approximates XAML processor behavior when it creates the object graph. When built top-down, a type is instantiated, attached to the parent, and has its properties set. Top-down construction avoids invoking property-changed handlers multiple times. Such handling ripples up the object graph and therefore, eliminates the multiple handler calls and provides a performance optimization for startup of the object graph.","nodes":[{"content":"Top-down is a metaphor that approximates XAML processor behavior when it creates the object graph. When built top-down, a type is instantiated, attached to the parent, and has its properties set. Top-down construction avoids invoking property-changed handlers multiple times. Such handling ripples up the object graph and therefore, eliminates the multiple handler calls and provides a performance optimization for startup of the object graph.","pos":[0,443],"nodes":[{"content":"Top-down is a metaphor that approximates XAML processor behavior when it creates the object graph.","pos":[0,98]},{"content":"When built top-down, a type is instantiated, attached to the parent, and has its properties set.","pos":[99,195]},{"content":"Top-down construction avoids invoking property-changed handlers multiple times.","pos":[196,275]},{"content":"Such handling ripples up the object graph and therefore, eliminates the multiple handler calls and provides a performance optimization for startup of the object graph.","pos":[276,443]}]}]},{"pos":[450,549],"content":"This method can be invoked by calls to <xref:System.Xaml.XamlType.IsUsableDuringInitialization%2A>.","nodes":[{"content":"This method can be invoked by calls to <ph id=\"ph1\">&lt;xref:System.Xaml.XamlType.IsUsableDuringInitialization%2A&gt;</ph>.","pos":[0,99],"source":"This method can be invoked by calls to <xref:System.Xaml.XamlType.IsUsableDuringInitialization%2A>."}]},{"pos":[556,863],"content":"The default implementation returns a value based on reading <xref:System.Windows.Markup.UsableDuringInitializationAttribute>. It can also check <xref:System.Xaml.XamlType.BaseType%2A> for the attribute if no attribute is found on the immediate underlying type. If a value is unavailable, it returns `false`.","nodes":[{"content":"The default implementation returns a value based on reading <ph id=\"ph1\">&lt;xref:System.Windows.Markup.UsableDuringInitializationAttribute&gt;</ph>.","pos":[0,125],"source":"The default implementation returns a value based on reading <xref:System.Windows.Markup.UsableDuringInitializationAttribute>."},{"content":"It can also check <ph id=\"ph1\">&lt;xref:System.Xaml.XamlType.BaseType%2A&gt;</ph> for the attribute if no attribute is found on the immediate underlying type.","pos":[126,260],"source":" It can also check <xref:System.Xaml.XamlType.BaseType%2A> for the attribute if no attribute is found on the immediate underlying type."},{"content":"If a value is unavailable, it returns <ph id=\"ph1\">`false`</ph>.","pos":[261,307],"source":" If a value is unavailable, it returns `false`."}]},{"pos":[870,986],"content":"Override this method if you want <xref:System.Xaml.XamlType.IsUsableDuringInitialization%2A> to use different logic.","nodes":[{"content":"Override this method if you want <ph id=\"ph1\">&lt;xref:System.Xaml.XamlType.IsUsableDuringInitialization%2A&gt;</ph> to use different logic.","pos":[0,116],"source":"Override this method if you want <xref:System.Xaml.XamlType.IsUsableDuringInitialization%2A> to use different logic."}]}],"pos":[154399,155394],"yaml":true,"extradata":"MT"},{"content":"`true` if this <xref href=\"System.Xaml.XamlType\"></xref> is built top-down during XAML initialization; otherwise, `false`.","nodes":[{"pos":[0,122],"content":"<ph id=\"ph1\">`true`</ph> if this <ph id=\"ph2\">&lt;xref href=\"System.Xaml.XamlType\"&gt;&lt;/xref&gt;</ph> is built top-down during XAML initialization; otherwise, <ph id=\"ph3\">`false`</ph>.","source":"`true` if this <xref href=\"System.Xaml.XamlType\"></xref> is built top-down during XAML initialization; otherwise, `false`."}],"pos":[155554,155679],"yaml":true},{"content":"Returns a <xref href=\"System.Xaml.Schema.XamlValueConverter`1\"></xref> that has a <xref href=\"System.Windows.Markup.ValueSerializer\"></xref> constraint, which represents value serialization behavior for values of this <xref href=\"System.Xaml.XamlType\"></xref>.","nodes":[{"pos":[0,260],"content":"Returns a <ph id=\"ph1\">&lt;xref href=\"System.Xaml.Schema.XamlValueConverter`1\"&gt;&lt;/xref&gt;</ph> that has a <ph id=\"ph2\">&lt;xref href=\"System.Windows.Markup.ValueSerializer\"&gt;&lt;/xref&gt;</ph> constraint, which represents value serialization behavior for values of this <ph id=\"ph3\">&lt;xref href=\"System.Xaml.XamlType\"&gt;&lt;/xref&gt;</ph>.","source":"Returns a <xref href=\"System.Xaml.Schema.XamlValueConverter`1\"></xref> that has a <xref href=\"System.Windows.Markup.ValueSerializer\"></xref> constraint, which represents value serialization behavior for values of this <xref href=\"System.Xaml.XamlType\"></xref>."}],"pos":[156633,156894],"yaml":true},{"content":"This method can be invoked by calls to <xref:System.Xaml.XamlType.ValueSerializer%2A>.  \n  \n The default implementation returns a value based on reading <xref:System.Windows.Markup.ValueSerializerAttribute>. It can also check <xref:System.Xaml.XamlType.BaseType%2A> for the attribute if no attribute is found on the immediate underlying type. It also includes special logic for default serialization of enumerations, common value types, or generics. If a value is unavailable, it returns `null`.  \n  \n Override this method if you want <xref:System.Xaml.XamlType.ValueSerializer%2A> to use different logic.","nodes":[{"pos":[0,86],"content":"This method can be invoked by calls to <xref:System.Xaml.XamlType.ValueSerializer%2A>.","nodes":[{"content":"This method can be invoked by calls to <ph id=\"ph1\">&lt;xref:System.Xaml.XamlType.ValueSerializer%2A&gt;</ph>.","pos":[0,86],"source":"This method can be invoked by calls to <xref:System.Xaml.XamlType.ValueSerializer%2A>."}]},{"pos":[93,495],"content":"The default implementation returns a value based on reading <xref:System.Windows.Markup.ValueSerializerAttribute>. It can also check <xref:System.Xaml.XamlType.BaseType%2A> for the attribute if no attribute is found on the immediate underlying type. It also includes special logic for default serialization of enumerations, common value types, or generics. If a value is unavailable, it returns `null`.","nodes":[{"content":"The default implementation returns a value based on reading <ph id=\"ph1\">&lt;xref:System.Windows.Markup.ValueSerializerAttribute&gt;</ph>.","pos":[0,114],"source":"The default implementation returns a value based on reading <xref:System.Windows.Markup.ValueSerializerAttribute>."},{"content":"It can also check <ph id=\"ph1\">&lt;xref:System.Xaml.XamlType.BaseType%2A&gt;</ph> for the attribute if no attribute is found on the immediate underlying type.","pos":[115,249],"source":" It can also check <xref:System.Xaml.XamlType.BaseType%2A> for the attribute if no attribute is found on the immediate underlying type."},{"content":"It also includes special logic for default serialization of enumerations, common value types, or generics.","pos":[250,356]},{"content":"If a value is unavailable, it returns <ph id=\"ph1\">`null`</ph>.","pos":[357,402],"source":" If a value is unavailable, it returns `null`."}]},{"pos":[502,605],"content":"Override this method if you want <xref:System.Xaml.XamlType.ValueSerializer%2A> to use different logic.","nodes":[{"content":"Override this method if you want <ph id=\"ph1\">&lt;xref:System.Xaml.XamlType.ValueSerializer%2A&gt;</ph> to use different logic.","pos":[0,103],"source":"Override this method if you want <xref:System.Xaml.XamlType.ValueSerializer%2A> to use different logic."}]}],"pos":[156905,157517],"yaml":true,"extradata":"MT"},{"content":"A <xref href=\"System.Xaml.Schema.XamlValueConverter`1\"></xref> with <xref href=\"System.Windows.Markup.ValueSerializer\"></xref> constraint that represents value serialization behavior for values of this <xref href=\"System.Xaml.XamlType\"></xref>; otherwise, `null`.","nodes":[{"pos":[0,263],"content":"A <ph id=\"ph1\">&lt;xref href=\"System.Xaml.Schema.XamlValueConverter`1\"&gt;&lt;/xref&gt;</ph> with <ph id=\"ph2\">&lt;xref href=\"System.Windows.Markup.ValueSerializer\"&gt;&lt;/xref&gt;</ph> constraint that represents value serialization behavior for values of this <ph id=\"ph3\">&lt;xref href=\"System.Xaml.XamlType\"&gt;&lt;/xref&gt;</ph>; otherwise, <ph id=\"ph4\">`null`</ph>.","source":"A <xref href=\"System.Xaml.Schema.XamlValueConverter`1\"></xref> with <xref href=\"System.Windows.Markup.ValueSerializer\"></xref> constraint that represents value serialization behavior for values of this <xref href=\"System.Xaml.XamlType\"></xref>; otherwise, `null`."}],"pos":[157800,158064],"yaml":true},{"content":"Gets a value that provides the type information for the returned `ProvideValue` of this <xref href=\"System.Xaml.XamlType\"></xref>, if it represents a markup extension.","nodes":[{"pos":[0,167],"content":"Gets a value that provides the type information for the returned <ph id=\"ph1\">`ProvideValue`</ph> of this <ph id=\"ph2\">&lt;xref href=\"System.Xaml.XamlType\"&gt;&lt;/xref&gt;</ph>, if it represents a markup extension.","source":"Gets a value that provides the type information for the returned `ProvideValue` of this <xref href=\"System.Xaml.XamlType\"></xref>, if it represents a markup extension."}],"pos":[159027,159195],"yaml":true},{"content":"This property is only relevant if this <xref:System.Xaml.XamlType> represents a markup extension (`x:MarkupExtension` is in the assignable types list).  \n  \n If you do not use the default internal CLR reflection technique for a <xref:System.Xaml.XamlType>, calls to this property can invoke <xref:System.Xaml.XamlType.LookupMarkupExtensionReturnType%2A> overrides on <xref:System.Xaml.XamlType> derived classes. For more information about return values and other behavior, see the documentation for <xref:System.Xaml.XamlType.LookupMarkupExtensionReturnType%2A> on this type.","nodes":[{"pos":[0,151],"content":"This property is only relevant if this <ph id=\"ph1\">&lt;xref:System.Xaml.XamlType&gt;</ph> represents a markup extension (<ph id=\"ph2\">`x:MarkupExtension`</ph> is in the assignable types list).","source":"This property is only relevant if this <xref:System.Xaml.XamlType> represents a markup extension (`x:MarkupExtension` is in the assignable types list)."},{"pos":[158,575],"content":"If you do not use the default internal CLR reflection technique for a <xref:System.Xaml.XamlType>, calls to this property can invoke <xref:System.Xaml.XamlType.LookupMarkupExtensionReturnType%2A> overrides on <xref:System.Xaml.XamlType> derived classes. For more information about return values and other behavior, see the documentation for <xref:System.Xaml.XamlType.LookupMarkupExtensionReturnType%2A> on this type.","nodes":[{"content":"If you do not use the default internal CLR reflection technique for a <xref:System.Xaml.XamlType>, calls to this property can invoke <xref:System.Xaml.XamlType.LookupMarkupExtensionReturnType%2A> overrides on <xref:System.Xaml.XamlType> derived classes. For more information about return values and other behavior, see the documentation for <xref:System.Xaml.XamlType.LookupMarkupExtensionReturnType%2A> on this type.","pos":[0,417],"nodes":[{"content":"If you do not use the default internal CLR reflection technique for a <ph id=\"ph1\">&lt;xref:System.Xaml.XamlType&gt;</ph>, calls to this property can invoke <ph id=\"ph2\">&lt;xref:System.Xaml.XamlType.LookupMarkupExtensionReturnType%2A&gt;</ph> overrides on <ph id=\"ph3\">&lt;xref:System.Xaml.XamlType&gt;</ph> derived classes.","pos":[0,253],"source":"If you do not use the default internal CLR reflection technique for a <xref:System.Xaml.XamlType>, calls to this property can invoke <xref:System.Xaml.XamlType.LookupMarkupExtensionReturnType%2A> overrides on <xref:System.Xaml.XamlType> derived classes."},{"content":"For more information about return values and other behavior, see the documentation for <ph id=\"ph1\">&lt;xref:System.Xaml.XamlType.LookupMarkupExtensionReturnType%2A&gt;</ph> on this type.","pos":[254,417],"source":" For more information about return values and other behavior, see the documentation for <xref:System.Xaml.XamlType.LookupMarkupExtensionReturnType%2A> on this type."}]}]}],"pos":[159206,159786],"yaml":true,"extradata":"MT"},{"content":"A <xref href=\"System.Xaml.XamlType\"></xref> object for the return type for markup extension usage; otherwise, `null`, if this <xref href=\"System.Xaml.XamlType\"></xref> does not represent a markup extension.","nodes":[{"pos":[0,206],"content":"A <ph id=\"ph1\">&lt;xref href=\"System.Xaml.XamlType\"&gt;&lt;/xref&gt;</ph> object for the return type for markup extension usage; otherwise, <ph id=\"ph2\">`null`</ph>, if this <ph id=\"ph3\">&lt;xref href=\"System.Xaml.XamlType\"&gt;&lt;/xref&gt;</ph> does not represent a markup extension.","source":"A <xref href=\"System.Xaml.XamlType\"></xref> object for the return type for markup extension usage; otherwise, `null`, if this <xref href=\"System.Xaml.XamlType\"></xref> does not represent a markup extension."}],"pos":[159936,160143],"yaml":true},{"content":"Gets the string name of the type that this <xref href=\"System.Xaml.XamlType\"></xref> represents.","nodes":[{"pos":[0,96],"content":"Gets the string name of the type that this <ph id=\"ph1\">&lt;xref href=\"System.Xaml.XamlType\"&gt;&lt;/xref&gt;</ph> represents.","source":"Gets the string name of the type that this <xref href=\"System.Xaml.XamlType\"></xref> represents."}],"pos":[160984,161081],"yaml":true},{"content":"This property typically gets the schema-constructed name (per the <xref:System.Xaml.XamlType.%23ctor%2A> signature), or the name of the <xref:System.Type>, if it is constructed by using the pertinent constructor of the CLR type system.","nodes":[{"pos":[0,235],"content":"This property typically gets the schema-constructed name (per the <xref:System.Xaml.XamlType.%23ctor%2A> signature), or the name of the <xref:System.Type>, if it is constructed by using the pertinent constructor of the CLR type system.","nodes":[{"content":"This property typically gets the schema-constructed name (per the <ph id=\"ph1\">&lt;xref:System.Xaml.XamlType.%23ctor%2A&gt;</ph> signature), or the name of the <ph id=\"ph2\">&lt;xref:System.Type&gt;</ph>, if it is constructed by using the pertinent constructor of the CLR type system.","pos":[0,235],"source":"This property typically gets the schema-constructed name (per the <xref:System.Xaml.XamlType.%23ctor%2A> signature), or the name of the <xref:System.Type>, if it is constructed by using the pertinent constructor of the CLR type system."}]}],"pos":[161092,161328],"yaml":true,"extradata":"MT"},{"content":"The string name of this XAML type.","nodes":[{"pos":[0,34],"content":"The string name of this XAML type.","nodes":[{"content":"The string name of this XAML type.","pos":[0,34]}]}],"pos":[161436,161471],"yaml":true},{"content":"Determines whether two specified <xref href=\"System.Xaml.XamlType\"></xref> objects have the same value.","nodes":[{"pos":[0,103],"content":"Determines whether two specified <ph id=\"ph1\">&lt;xref href=\"System.Xaml.XamlType\"&gt;&lt;/xref&gt;</ph> objects have the same value.","source":"Determines whether two specified <xref href=\"System.Xaml.XamlType\"></xref> objects have the same value."}],"pos":[162522,162626],"yaml":true},{"content":"A <xref href=\"System.Xaml.XamlType\"></xref> or `null`.","nodes":[{"pos":[0,54],"content":"A <ph id=\"ph1\">&lt;xref href=\"System.Xaml.XamlType\"&gt;&lt;/xref&gt;</ph> or <ph id=\"ph2\">`null`</ph>.","source":"A <xref href=\"System.Xaml.XamlType\"></xref> or `null`."}],"pos":[162834,162889],"yaml":true},{"content":"A <xref href=\"System.Xaml.XamlType\"></xref> or `null`.","nodes":[{"pos":[0,54],"content":"A <ph id=\"ph1\">&lt;xref href=\"System.Xaml.XamlType\"&gt;&lt;/xref&gt;</ph> or <ph id=\"ph2\">`null`</ph>.","source":"A <xref href=\"System.Xaml.XamlType\"></xref> or `null`."}],"pos":[162961,163016],"yaml":true},{"content":"`true` if the value of <code>xamlType1</code> is the same as the value of <code>xamlType2</code>; otherwise, `false`.","nodes":[{"pos":[0,117],"content":"<ph id=\"ph1\">`true`</ph> if the value of <bpt id=\"p1\">&lt;code&gt;</bpt><ph id=\"ph2\">xamlType1</ph><ept id=\"p1\">&lt;/code&gt;</ept> is the same as the value of <bpt id=\"p2\">&lt;code&gt;</bpt><ph id=\"ph3\">xamlType2</ph><ept id=\"p2\">&lt;/code&gt;</ept>; otherwise, <ph id=\"ph4\">`false`</ph>.","source":"`true` if the value of <code>xamlType1</code> is the same as the value of <code>xamlType2</code>; otherwise, `false`."}],"pos":[163074,163194],"yaml":true},{"content":"Determines whether two specified <xref href=\"System.Xaml.XamlType\"></xref> objects have different values.","nodes":[{"pos":[0,105],"content":"Determines whether two specified <ph id=\"ph1\">&lt;xref href=\"System.Xaml.XamlType\"&gt;&lt;/xref&gt;</ph> objects have different values.","source":"Determines whether two specified <xref href=\"System.Xaml.XamlType\"></xref> objects have different values."}],"pos":[164264,164370],"yaml":true},{"content":"A <xref href=\"System.Xaml.XamlType\"></xref> or `null`.","nodes":[{"pos":[0,54],"content":"A <ph id=\"ph1\">&lt;xref href=\"System.Xaml.XamlType\"&gt;&lt;/xref&gt;</ph> or <ph id=\"ph2\">`null`</ph>.","source":"A <xref href=\"System.Xaml.XamlType\"></xref> or `null`."}],"pos":[164580,164635],"yaml":true},{"content":"A <xref href=\"System.Xaml.XamlType\"></xref> or `null`.","nodes":[{"pos":[0,54],"content":"A <ph id=\"ph1\">&lt;xref href=\"System.Xaml.XamlType\"&gt;&lt;/xref&gt;</ph> or <ph id=\"ph2\">`null`</ph>.","source":"A <xref href=\"System.Xaml.XamlType\"></xref> or `null`."}],"pos":[164707,164762],"yaml":true},{"content":"`true` if the value of <code>xamlType1</code> is different from the value of <code>xamlType2</code>; otherwise, `false`.","nodes":[{"pos":[0,120],"content":"<ph id=\"ph1\">`true`</ph> if the value of <bpt id=\"p1\">&lt;code&gt;</bpt><ph id=\"ph2\">xamlType1</ph><ept id=\"p1\">&lt;/code&gt;</ept> is different from the value of <bpt id=\"p2\">&lt;code&gt;</bpt><ph id=\"ph3\">xamlType2</ph><ept id=\"p2\">&lt;/code&gt;</ept>; otherwise, <ph id=\"ph4\">`false`</ph>.","source":"`true` if the value of <code>xamlType1</code> is different from the value of <code>xamlType2</code>; otherwise, `false`."}],"pos":[164820,164943],"yaml":true},{"content":"Gets the single XAML namespace that is the primary XAML namespace for this <xref href=\"System.Xaml.XamlType\"></xref>.","nodes":[{"pos":[0,117],"content":"Gets the single XAML namespace that is the primary XAML namespace for this <ph id=\"ph1\">&lt;xref href=\"System.Xaml.XamlType\"&gt;&lt;/xref&gt;</ph>.","source":"Gets the single XAML namespace that is the primary XAML namespace for this <xref href=\"System.Xaml.XamlType\"></xref>."}],"pos":[165880,165998],"yaml":true},{"content":"This implementation provides the same value as calling <xref:System.Xaml.XamlType.GetXamlNamespaces%2A> and then getting the first value string from the returned enumerable set.","nodes":[{"pos":[0,177],"content":"This implementation provides the same value as calling <xref:System.Xaml.XamlType.GetXamlNamespaces%2A> and then getting the first value string from the returned enumerable set.","nodes":[{"content":"This implementation provides the same value as calling <ph id=\"ph1\">&lt;xref:System.Xaml.XamlType.GetXamlNamespaces%2A&gt;</ph> and then getting the first value string from the returned enumerable set.","pos":[0,177],"source":"This implementation provides the same value as calling <xref:System.Xaml.XamlType.GetXamlNamespaces%2A> and then getting the first value string from the returned enumerable set."}]}],"pos":[166009,166187],"yaml":true,"extradata":"MT"},{"content":"The identifier, as a string, of the primary XAML namespace for this XAML type.","nodes":[{"pos":[0,78],"content":"The identifier, as a string, of the primary XAML namespace for this XAML type.","nodes":[{"content":"The identifier, as a string, of the primary XAML namespace for this XAML type.","pos":[0,78]}]}],"pos":[166313,166392],"yaml":true},{"content":"Gets the active <xref href=\"System.Xaml.XamlSchemaContext\"></xref> for processing this <xref href=\"System.Xaml.XamlType\"></xref>.","nodes":[{"pos":[0,129],"content":"Gets the active <ph id=\"ph1\">&lt;xref href=\"System.Xaml.XamlSchemaContext\"&gt;&lt;/xref&gt;</ph> for processing this <ph id=\"ph2\">&lt;xref href=\"System.Xaml.XamlType\"&gt;&lt;/xref&gt;</ph>.","source":"Gets the active <xref href=\"System.Xaml.XamlSchemaContext\"></xref> for processing this <xref href=\"System.Xaml.XamlType\"></xref>."}],"pos":[167284,167414],"yaml":true},{"content":"<xref:System.Xaml.XamlSchemaContext> is a required parameter entry when constructing a <xref:System.Xaml.XamlType>.","nodes":[{"pos":[0,115],"content":"<xref:System.Xaml.XamlSchemaContext> is a required parameter entry when constructing a <xref:System.Xaml.XamlType>.","nodes":[{"content":"<ph id=\"ph1\">&lt;xref:System.Xaml.XamlSchemaContext&gt;</ph> is a required parameter entry when constructing a <ph id=\"ph2\">&lt;xref:System.Xaml.XamlType&gt;</ph>.","pos":[0,115],"source":"<xref:System.Xaml.XamlSchemaContext> is a required parameter entry when constructing a <xref:System.Xaml.XamlType>."}]}],"pos":[167425,167541],"yaml":true,"extradata":"MT"},{"content":"The active <xref href=\"System.Xaml.XamlSchemaContext\"></xref> for processing this <xref href=\"System.Xaml.XamlType\"></xref>.","nodes":[{"pos":[0,124],"content":"The active <ph id=\"ph1\">&lt;xref href=\"System.Xaml.XamlSchemaContext\"&gt;&lt;/xref&gt;</ph> for processing this <ph id=\"ph2\">&lt;xref href=\"System.Xaml.XamlType\"&gt;&lt;/xref&gt;</ph>.","source":"The active <xref href=\"System.Xaml.XamlSchemaContext\"></xref> for processing this <xref href=\"System.Xaml.XamlType\"></xref>."}],"pos":[167697,167822],"yaml":true},{"content":"Returns a string representation of this <xref href=\"System.Xaml.XamlType\"></xref>.","nodes":[{"pos":[0,82],"content":"Returns a string representation of this <ph id=\"ph1\">&lt;xref href=\"System.Xaml.XamlType\"&gt;&lt;/xref&gt;</ph>.","source":"Returns a string representation of this <xref href=\"System.Xaml.XamlType\"></xref>."}],"pos":[168679,168762],"yaml":true},{"content":"The <xref:System.Xaml.XamlType> implementation of <xref:System.Object.ToString%2A> returns the <xref:System.Xaml.XamlType.Name%2A> property of the <xref:System.Xaml.XamlType>.","nodes":[{"pos":[0,175],"content":"The <xref:System.Xaml.XamlType> implementation of <xref:System.Object.ToString%2A> returns the <xref:System.Xaml.XamlType.Name%2A> property of the <xref:System.Xaml.XamlType>.","nodes":[{"content":"The <ph id=\"ph1\">&lt;xref:System.Xaml.XamlType&gt;</ph> implementation of <ph id=\"ph2\">&lt;xref:System.Object.ToString%2A&gt;</ph> returns the <ph id=\"ph3\">&lt;xref:System.Xaml.XamlType.Name%2A&gt;</ph> property of the <ph id=\"ph4\">&lt;xref:System.Xaml.XamlType&gt;</ph>.","pos":[0,175],"source":"The <xref:System.Xaml.XamlType> implementation of <xref:System.Object.ToString%2A> returns the <xref:System.Xaml.XamlType.Name%2A> property of the <xref:System.Xaml.XamlType>."}]}],"pos":[168773,168949],"yaml":true,"extradata":"MT"},{"content":"A string representation of this <xref href=\"System.Xaml.XamlType\"></xref>.","nodes":[{"pos":[0,74],"content":"A string representation of this <ph id=\"ph1\">&lt;xref href=\"System.Xaml.XamlType\"&gt;&lt;/xref&gt;</ph>.","source":"A string representation of this <xref href=\"System.Xaml.XamlType\"></xref>."}],"pos":[169084,169159],"yaml":true},{"content":"Gets a value that indicates whether this <xref href=\"System.Xaml.XamlType\"></xref> has whitespace handling behavior for serialization that trims the surrounding whitespace in its content.","nodes":[{"pos":[0,187],"content":"Gets a value that indicates whether this <ph id=\"ph1\">&lt;xref href=\"System.Xaml.XamlType\"&gt;&lt;/xref&gt;</ph> has whitespace handling behavior for serialization that trims the surrounding whitespace in its content.","source":"Gets a value that indicates whether this <xref href=\"System.Xaml.XamlType\"></xref> has whitespace handling behavior for serialization that trims the surrounding whitespace in its content."}],"pos":[170109,170297],"yaml":true},{"content":"If you do not use the default internal CLR reflection technique for a <xref:System.Xaml.XamlType>, calls to this property can invoke <xref:System.Xaml.XamlType.LookupIsWhitespaceSignificantCollection%2A> overrides on <xref:System.Xaml.XamlType> derived classes. For more information about return values and other behavior, see the documentation for <xref:System.Xaml.XamlType.LookupIsWhitespaceSignificantCollection%2A> on this type.","nodes":[{"pos":[0,433],"content":"If you do not use the default internal CLR reflection technique for a <xref:System.Xaml.XamlType>, calls to this property can invoke <xref:System.Xaml.XamlType.LookupIsWhitespaceSignificantCollection%2A> overrides on <xref:System.Xaml.XamlType> derived classes. For more information about return values and other behavior, see the documentation for <xref:System.Xaml.XamlType.LookupIsWhitespaceSignificantCollection%2A> on this type.","nodes":[{"content":"If you do not use the default internal CLR reflection technique for a <xref:System.Xaml.XamlType>, calls to this property can invoke <xref:System.Xaml.XamlType.LookupIsWhitespaceSignificantCollection%2A> overrides on <xref:System.Xaml.XamlType> derived classes. For more information about return values and other behavior, see the documentation for <xref:System.Xaml.XamlType.LookupIsWhitespaceSignificantCollection%2A> on this type.","pos":[0,433],"nodes":[{"content":"If you do not use the default internal CLR reflection technique for a <ph id=\"ph1\">&lt;xref:System.Xaml.XamlType&gt;</ph>, calls to this property can invoke <ph id=\"ph2\">&lt;xref:System.Xaml.XamlType.LookupIsWhitespaceSignificantCollection%2A&gt;</ph> overrides on <ph id=\"ph3\">&lt;xref:System.Xaml.XamlType&gt;</ph> derived classes.","pos":[0,261],"source":"If you do not use the default internal CLR reflection technique for a <xref:System.Xaml.XamlType>, calls to this property can invoke <xref:System.Xaml.XamlType.LookupIsWhitespaceSignificantCollection%2A> overrides on <xref:System.Xaml.XamlType> derived classes."},{"content":"For more information about return values and other behavior, see the documentation for <ph id=\"ph1\">&lt;xref:System.Xaml.XamlType.LookupIsWhitespaceSignificantCollection%2A&gt;</ph> on this type.","pos":[262,433],"source":" For more information about return values and other behavior, see the documentation for <xref:System.Xaml.XamlType.LookupIsWhitespaceSignificantCollection%2A> on this type."}]}]}],"pos":[170308,170742],"yaml":true,"extradata":"MT"},{"content":"`true` if this <xref href=\"System.Xaml.XamlType\"></xref> represents a type that uses whitespace trimming; otherwise, `false`.","nodes":[{"pos":[0,125],"content":"<ph id=\"ph1\">`true`</ph> if this <ph id=\"ph2\">&lt;xref href=\"System.Xaml.XamlType\"&gt;&lt;/xref&gt;</ph> represents a type that uses whitespace trimming; otherwise, <ph id=\"ph3\">`false`</ph>.","source":"`true` if this <xref href=\"System.Xaml.XamlType\"></xref> represents a type that uses whitespace trimming; otherwise, `false`."}],"pos":[170870,170998],"yaml":true},{"content":"Gets a list of type arguments for cases where this <xref href=\"System.Xaml.XamlType\"></xref> represents a generic.","nodes":[{"pos":[0,114],"content":"Gets a list of type arguments for cases where this <ph id=\"ph1\">&lt;xref href=\"System.Xaml.XamlType\"&gt;&lt;/xref&gt;</ph> represents a generic.","source":"Gets a list of type arguments for cases where this <xref href=\"System.Xaml.XamlType\"></xref> represents a generic."}],"pos":[171893,172008],"yaml":true},{"content":"There are certain scenarios for a <xref:System.Xaml.XamlType> where calling the <xref:System.Xaml.XamlType.TypeArguments%2A> parameter returns a list where the types are still open. In this case, one or more of the returned <xref:System.Xaml.XamlType> values will have placeholder values for <xref:System.Xaml.XamlType.Name%2A?displayProperty=fullName>, such as `T`, to represent that the generic is still open. This scenario can occur if you get a <xref:System.Xaml.XamlType> from a call to <xref:System.Xaml.XamlSchemaContext.GetXamlType%2A>, instead of from a XAML reader implementation.","nodes":[{"pos":[0,590],"content":"There are certain scenarios for a <xref:System.Xaml.XamlType> where calling the <xref:System.Xaml.XamlType.TypeArguments%2A> parameter returns a list where the types are still open. In this case, one or more of the returned <xref:System.Xaml.XamlType> values will have placeholder values for <xref:System.Xaml.XamlType.Name%2A?displayProperty=fullName>, such as `T`, to represent that the generic is still open. This scenario can occur if you get a <xref:System.Xaml.XamlType> from a call to <xref:System.Xaml.XamlSchemaContext.GetXamlType%2A>, instead of from a XAML reader implementation.","nodes":[{"content":"There are certain scenarios for a <ph id=\"ph1\">&lt;xref:System.Xaml.XamlType&gt;</ph> where calling the <ph id=\"ph2\">&lt;xref:System.Xaml.XamlType.TypeArguments%2A&gt;</ph> parameter returns a list where the types are still open.","pos":[0,181],"source":"There are certain scenarios for a <xref:System.Xaml.XamlType> where calling the <xref:System.Xaml.XamlType.TypeArguments%2A> parameter returns a list where the types are still open."},{"content":"In this case, one or more of the returned <ph id=\"ph1\">&lt;xref:System.Xaml.XamlType&gt;</ph> values will have placeholder values for <ph id=\"ph2\">&lt;xref:System.Xaml.XamlType.Name%2A?displayProperty=fullName&gt;</ph>, such as <ph id=\"ph3\">`T`</ph>, to represent that the generic is still open.","pos":[182,411],"source":" In this case, one or more of the returned <xref:System.Xaml.XamlType> values will have placeholder values for <xref:System.Xaml.XamlType.Name%2A?displayProperty=fullName>, such as `T`, to represent that the generic is still open."},{"content":"This scenario can occur if you get a <ph id=\"ph1\">&lt;xref:System.Xaml.XamlType&gt;</ph> from a call to <ph id=\"ph2\">&lt;xref:System.Xaml.XamlSchemaContext.GetXamlType%2A&gt;</ph>, instead of from a XAML reader implementation.","pos":[412,590],"source":" This scenario can occur if you get a <xref:System.Xaml.XamlType> from a call to <xref:System.Xaml.XamlSchemaContext.GetXamlType%2A>, instead of from a XAML reader implementation."}]}],"pos":[172019,172610],"yaml":true,"extradata":"MT"},{"content":"A list of type argument types; otherwise, `null`, if this <xref href=\"System.Xaml.XamlType\"></xref> does not represent a generic.","nodes":[{"pos":[0,129],"content":"A list of type argument types; otherwise, <ph id=\"ph1\">`null`</ph>, if this <ph id=\"ph2\">&lt;xref href=\"System.Xaml.XamlType\"&gt;&lt;/xref&gt;</ph> does not represent a generic.","source":"A list of type argument types; otherwise, `null`, if this <xref href=\"System.Xaml.XamlType\"></xref> does not represent a generic."}],"pos":[172816,172946],"yaml":true},{"content":"Gets a <xref href=\"System.Xaml.Schema.XamlValueConverter`1\"></xref> with <xref href=\"System.ComponentModel.TypeConverter\"></xref> constraint that represents type conversion behavior for values of this <xref href=\"System.Xaml.XamlType\"></xref>.","nodes":[{"pos":[0,243],"content":"Gets a <ph id=\"ph1\">&lt;xref href=\"System.Xaml.Schema.XamlValueConverter`1\"&gt;&lt;/xref&gt;</ph> with <ph id=\"ph2\">&lt;xref href=\"System.ComponentModel.TypeConverter\"&gt;&lt;/xref&gt;</ph> constraint that represents type conversion behavior for values of this <ph id=\"ph3\">&lt;xref href=\"System.Xaml.XamlType\"&gt;&lt;/xref&gt;</ph>.","source":"Gets a <xref href=\"System.Xaml.Schema.XamlValueConverter`1\"></xref> with <xref href=\"System.ComponentModel.TypeConverter\"></xref> constraint that represents type conversion behavior for values of this <xref href=\"System.Xaml.XamlType\"></xref>."}],"pos":[173829,174073],"yaml":true},{"content":"If you do not use the default internal CLR reflection technique for a <xref:System.Xaml.XamlType>, calls to this property can invoke <xref:System.Xaml.XamlType.LookupTypeConverter%2A> overrides on <xref:System.Xaml.XamlType> derived classes. For more information about return values and other behavior, see the documentation for <xref:System.Xaml.XamlType.LookupTypeConverter%2A> on this type.","nodes":[{"pos":[0,393],"content":"If you do not use the default internal CLR reflection technique for a <xref:System.Xaml.XamlType>, calls to this property can invoke <xref:System.Xaml.XamlType.LookupTypeConverter%2A> overrides on <xref:System.Xaml.XamlType> derived classes. For more information about return values and other behavior, see the documentation for <xref:System.Xaml.XamlType.LookupTypeConverter%2A> on this type.","nodes":[{"content":"If you do not use the default internal CLR reflection technique for a <xref:System.Xaml.XamlType>, calls to this property can invoke <xref:System.Xaml.XamlType.LookupTypeConverter%2A> overrides on <xref:System.Xaml.XamlType> derived classes. For more information about return values and other behavior, see the documentation for <xref:System.Xaml.XamlType.LookupTypeConverter%2A> on this type.","pos":[0,393],"nodes":[{"content":"If you do not use the default internal CLR reflection technique for a <ph id=\"ph1\">&lt;xref:System.Xaml.XamlType&gt;</ph>, calls to this property can invoke <ph id=\"ph2\">&lt;xref:System.Xaml.XamlType.LookupTypeConverter%2A&gt;</ph> overrides on <ph id=\"ph3\">&lt;xref:System.Xaml.XamlType&gt;</ph> derived classes.","pos":[0,241],"source":"If you do not use the default internal CLR reflection technique for a <xref:System.Xaml.XamlType>, calls to this property can invoke <xref:System.Xaml.XamlType.LookupTypeConverter%2A> overrides on <xref:System.Xaml.XamlType> derived classes."},{"content":"For more information about return values and other behavior, see the documentation for <ph id=\"ph1\">&lt;xref:System.Xaml.XamlType.LookupTypeConverter%2A&gt;</ph> on this type.","pos":[242,393],"source":" For more information about return values and other behavior, see the documentation for <xref:System.Xaml.XamlType.LookupTypeConverter%2A> on this type."}]}]}],"pos":[174084,174478],"yaml":true,"extradata":"MT"},{"content":"A <xref href=\"System.Xaml.Schema.XamlValueConverter`1\"></xref> with <xref href=\"System.ComponentModel.TypeConverter\"></xref> constraint that represents type conversion behavior for values of this <xref href=\"System.Xaml.XamlType\"></xref>.","nodes":[{"pos":[0,238],"content":"A <ph id=\"ph1\">&lt;xref href=\"System.Xaml.Schema.XamlValueConverter`1\"&gt;&lt;/xref&gt;</ph> with <ph id=\"ph2\">&lt;xref href=\"System.ComponentModel.TypeConverter\"&gt;&lt;/xref&gt;</ph> constraint that represents type conversion behavior for values of this <ph id=\"ph3\">&lt;xref href=\"System.Xaml.XamlType\"&gt;&lt;/xref&gt;</ph>.","source":"A <xref href=\"System.Xaml.Schema.XamlValueConverter`1\"></xref> with <xref href=\"System.ComponentModel.TypeConverter\"></xref> constraint that represents type conversion behavior for values of this <xref href=\"System.Xaml.XamlType\"></xref>."}],"pos":[174724,174963],"yaml":true},{"content":"Gets the CLR <xref href=\"System.Type\"></xref> that underlies this <xref href=\"System.Xaml.XamlType\"></xref>.","nodes":[{"pos":[0,108],"content":"Gets the CLR <ph id=\"ph1\">&lt;xref href=\"System.Type\"&gt;&lt;/xref&gt;</ph> that underlies this <ph id=\"ph2\">&lt;xref href=\"System.Xaml.XamlType\"&gt;&lt;/xref&gt;</ph>.","source":"Gets the CLR <xref href=\"System.Type\"></xref> that underlies this <xref href=\"System.Xaml.XamlType\"></xref>."}],"pos":[175852,175961],"yaml":true},{"content":"The CLR <xref href=\"System.Type\"></xref> that underlies this <xref href=\"System.Xaml.XamlType\"></xref>.","nodes":[{"pos":[0,103],"content":"The CLR <ph id=\"ph1\">&lt;xref href=\"System.Type\"&gt;&lt;/xref&gt;</ph> that underlies this <ph id=\"ph2\">&lt;xref href=\"System.Xaml.XamlType\"&gt;&lt;/xref&gt;</ph>.","source":"The CLR <xref href=\"System.Type\"></xref> that underlies this <xref href=\"System.Xaml.XamlType\"></xref>."}],"pos":[176135,176239],"yaml":true},{"content":"Gets a <xref href=\"System.Xaml.Schema.XamlValueConverter`1\"></xref> with <xref href=\"System.Windows.Markup.ValueSerializer\"></xref> constraint that represents value serialization behavior for values of this <xref href=\"System.Xaml.XamlType\"></xref>.","nodes":[{"pos":[0,249],"content":"Gets a <ph id=\"ph1\">&lt;xref href=\"System.Xaml.Schema.XamlValueConverter`1\"&gt;&lt;/xref&gt;</ph> with <ph id=\"ph2\">&lt;xref href=\"System.Windows.Markup.ValueSerializer\"&gt;&lt;/xref&gt;</ph> constraint that represents value serialization behavior for values of this <ph id=\"ph3\">&lt;xref href=\"System.Xaml.XamlType\"&gt;&lt;/xref&gt;</ph>.","source":"Gets a <xref href=\"System.Xaml.Schema.XamlValueConverter`1\"></xref> with <xref href=\"System.Windows.Markup.ValueSerializer\"></xref> constraint that represents value serialization behavior for values of this <xref href=\"System.Xaml.XamlType\"></xref>."}],"pos":[177203,177453],"yaml":true},{"content":"If you do not use the default internal CLR reflection technique for a <xref:System.Xaml.XamlType>, calls to this property can invoke <xref:System.Xaml.XamlType.LookupValueSerializer%2A> overrides on <xref:System.Xaml.XamlType> derived classes. For more information about return values and other behavior, see the documentation for <xref:System.Xaml.XamlType.LookupValueSerializer%2A> on this type.","nodes":[{"pos":[0,397],"content":"If you do not use the default internal CLR reflection technique for a <xref:System.Xaml.XamlType>, calls to this property can invoke <xref:System.Xaml.XamlType.LookupValueSerializer%2A> overrides on <xref:System.Xaml.XamlType> derived classes. For more information about return values and other behavior, see the documentation for <xref:System.Xaml.XamlType.LookupValueSerializer%2A> on this type.","nodes":[{"content":"If you do not use the default internal CLR reflection technique for a <xref:System.Xaml.XamlType>, calls to this property can invoke <xref:System.Xaml.XamlType.LookupValueSerializer%2A> overrides on <xref:System.Xaml.XamlType> derived classes. For more information about return values and other behavior, see the documentation for <xref:System.Xaml.XamlType.LookupValueSerializer%2A> on this type.","pos":[0,397],"nodes":[{"content":"If you do not use the default internal CLR reflection technique for a <ph id=\"ph1\">&lt;xref:System.Xaml.XamlType&gt;</ph>, calls to this property can invoke <ph id=\"ph2\">&lt;xref:System.Xaml.XamlType.LookupValueSerializer%2A&gt;</ph> overrides on <ph id=\"ph3\">&lt;xref:System.Xaml.XamlType&gt;</ph> derived classes.","pos":[0,243],"source":"If you do not use the default internal CLR reflection technique for a <xref:System.Xaml.XamlType>, calls to this property can invoke <xref:System.Xaml.XamlType.LookupValueSerializer%2A> overrides on <xref:System.Xaml.XamlType> derived classes."},{"content":"For more information about return values and other behavior, see the documentation for <ph id=\"ph1\">&lt;xref:System.Xaml.XamlType.LookupValueSerializer%2A&gt;</ph> on this type.","pos":[244,397],"source":" For more information about return values and other behavior, see the documentation for <xref:System.Xaml.XamlType.LookupValueSerializer%2A> on this type."}]}]}],"pos":[177464,177862],"yaml":true,"extradata":"MT"},{"content":"A <xref href=\"System.Xaml.Schema.XamlValueConverter`1\"></xref> with <xref href=\"System.Windows.Markup.ValueSerializer\"></xref> constraint that represents value serialization behavior for values of this <xref href=\"System.Xaml.XamlType\"></xref>; otherwise, `null`.","nodes":[{"pos":[0,263],"content":"A <ph id=\"ph1\">&lt;xref href=\"System.Xaml.Schema.XamlValueConverter`1\"&gt;&lt;/xref&gt;</ph> with <ph id=\"ph2\">&lt;xref href=\"System.Windows.Markup.ValueSerializer\"&gt;&lt;/xref&gt;</ph> constraint that represents value serialization behavior for values of this <ph id=\"ph3\">&lt;xref href=\"System.Xaml.XamlType\"&gt;&lt;/xref&gt;</ph>; otherwise, <ph id=\"ph4\">`null`</ph>.","source":"A <xref href=\"System.Xaml.Schema.XamlValueConverter`1\"></xref> with <xref href=\"System.Windows.Markup.ValueSerializer\"></xref> constraint that represents value serialization behavior for values of this <xref href=\"System.Xaml.XamlType\"></xref>; otherwise, `null`."}],"pos":[178114,178378],"yaml":true}],"content":"### YamlMime:ManagedReference\nitems:\n- uid: System.Xaml.XamlType\n  commentId: T:System.Xaml.XamlType\n  id: XamlType\n  children:\n  - System.Xaml.XamlType.#ctor(System.Type,System.Xaml.XamlSchemaContext)\n  - System.Xaml.XamlType.#ctor(System.String,System.Collections.Generic.IList{System.Xaml.XamlType},System.Xaml.XamlSchemaContext)\n  - System.Xaml.XamlType.#ctor(System.Type,System.Xaml.XamlSchemaContext,System.Xaml.Schema.XamlTypeInvoker)\n  - System.Xaml.XamlType.#ctor(System.String,System.String,System.Collections.Generic.IList{System.Xaml.XamlType},System.Xaml.XamlSchemaContext)\n  - System.Xaml.XamlType.AllowedContentTypes\n  - System.Xaml.XamlType.BaseType\n  - System.Xaml.XamlType.CanAssignTo(System.Xaml.XamlType)\n  - System.Xaml.XamlType.ConstructionRequiresArguments\n  - System.Xaml.XamlType.ContentProperty\n  - System.Xaml.XamlType.ContentWrappers\n  - System.Xaml.XamlType.DeferringLoader\n  - System.Xaml.XamlType.Equals(System.Object)\n  - System.Xaml.XamlType.Equals(System.Xaml.XamlType)\n  - System.Xaml.XamlType.GetAliasedProperty(System.Xaml.XamlDirective)\n  - System.Xaml.XamlType.GetAllAttachableMembers\n  - System.Xaml.XamlType.GetAllMembers\n  - System.Xaml.XamlType.GetAttachableMember(System.String)\n  - System.Xaml.XamlType.GetHashCode\n  - System.Xaml.XamlType.GetMember(System.String)\n  - System.Xaml.XamlType.GetPositionalParameters(System.Int32)\n  - System.Xaml.XamlType.GetXamlNamespaces\n  - System.Xaml.XamlType.Invoker\n  - System.Xaml.XamlType.IsAmbient\n  - System.Xaml.XamlType.IsArray\n  - System.Xaml.XamlType.IsCollection\n  - System.Xaml.XamlType.IsConstructible\n  - System.Xaml.XamlType.IsDictionary\n  - System.Xaml.XamlType.IsGeneric\n  - System.Xaml.XamlType.IsMarkupExtension\n  - System.Xaml.XamlType.IsNameScope\n  - System.Xaml.XamlType.IsNameValid\n  - System.Xaml.XamlType.IsNullable\n  - System.Xaml.XamlType.IsPublic\n  - System.Xaml.XamlType.IsUnknown\n  - System.Xaml.XamlType.IsUsableDuringInitialization\n  - System.Xaml.XamlType.IsWhitespaceSignificantCollection\n  - System.Xaml.XamlType.IsXData\n  - System.Xaml.XamlType.ItemType\n  - System.Xaml.XamlType.KeyType\n  - System.Xaml.XamlType.LookupAliasedProperty(System.Xaml.XamlDirective)\n  - System.Xaml.XamlType.LookupAllAttachableMembers\n  - System.Xaml.XamlType.LookupAllMembers\n  - System.Xaml.XamlType.LookupAllowedContentTypes\n  - System.Xaml.XamlType.LookupAttachableMember(System.String)\n  - System.Xaml.XamlType.LookupBaseType\n  - System.Xaml.XamlType.LookupCollectionKind\n  - System.Xaml.XamlType.LookupConstructionRequiresArguments\n  - System.Xaml.XamlType.LookupContentProperty\n  - System.Xaml.XamlType.LookupContentWrappers\n  - System.Xaml.XamlType.LookupCustomAttributeProvider\n  - System.Xaml.XamlType.LookupDeferringLoader\n  - System.Xaml.XamlType.LookupInvoker\n  - System.Xaml.XamlType.LookupIsAmbient\n  - System.Xaml.XamlType.LookupIsConstructible\n  - System.Xaml.XamlType.LookupIsMarkupExtension\n  - System.Xaml.XamlType.LookupIsNameScope\n  - System.Xaml.XamlType.LookupIsNullable\n  - System.Xaml.XamlType.LookupIsPublic\n  - System.Xaml.XamlType.LookupIsUnknown\n  - System.Xaml.XamlType.LookupIsWhitespaceSignificantCollection\n  - System.Xaml.XamlType.LookupIsXData\n  - System.Xaml.XamlType.LookupItemType\n  - System.Xaml.XamlType.LookupKeyType\n  - System.Xaml.XamlType.LookupMarkupExtensionReturnType\n  - System.Xaml.XamlType.LookupMember(System.String,System.Boolean)\n  - System.Xaml.XamlType.LookupPositionalParameters(System.Int32)\n  - System.Xaml.XamlType.LookupSetMarkupExtensionHandler\n  - System.Xaml.XamlType.LookupSetTypeConverterHandler\n  - System.Xaml.XamlType.LookupTrimSurroundingWhitespace\n  - System.Xaml.XamlType.LookupTypeConverter\n  - System.Xaml.XamlType.LookupUnderlyingType\n  - System.Xaml.XamlType.LookupUsableDuringInitialization\n  - System.Xaml.XamlType.LookupValueSerializer\n  - System.Xaml.XamlType.MarkupExtensionReturnType\n  - System.Xaml.XamlType.Name\n  - System.Xaml.XamlType.op_Equality(System.Xaml.XamlType,System.Xaml.XamlType)\n  - System.Xaml.XamlType.op_Inequality(System.Xaml.XamlType,System.Xaml.XamlType)\n  - System.Xaml.XamlType.PreferredXamlNamespace\n  - System.Xaml.XamlType.SchemaContext\n  - System.Xaml.XamlType.ToString\n  - System.Xaml.XamlType.TrimSurroundingWhitespace\n  - System.Xaml.XamlType.TypeArguments\n  - System.Xaml.XamlType.TypeConverter\n  - System.Xaml.XamlType.UnderlyingType\n  - System.Xaml.XamlType.ValueSerializer\n  langs:\n  - csharp\n  name: XamlType\n  nameWithType: XamlType\n  fullName: System.Xaml.XamlType\n  type: Class\n  assemblies:\n  - System.Xaml\n  namespace: System.Xaml\n  summary: Reports information about XAML types as part of the overall XAML system that is implemented in .NET Framework XAML Services.\n  remarks: \"Many APIs in the <xref:System.Xaml.XamlType> class provide information about XAML types, where the concept they report on is similar to particular sections of the XAML specification [MS-XAML].  \\n  \\n <xref:System.Xaml.XamlType> is used extensively in the .NET Framework XAML Services API for reporting information about a XAML type. <xref:System.Xaml.XamlType> reports the information that you might need to know about a XAML type in order to work with an instance or to access its members from a XAML node stream, or a similar XAML representation. Its reporting is similar to how the <xref:System.Type> in the CLR type system, together with reflection classes such as <xref:System.Reflection.MemberInfo>, provide information about a CLR type and its usage.  \\n  \\n To extend the XAML type system, you can derive from <xref:System.Xaml.XamlType>. To do so effectively, you might also need to implement a <xref:System.Xaml.Schema.XamlTypeInvoker>. The <xref:System.Xaml.Schema.XamlTypeInvoker> enables the generalized XAML type system to work with the type system backing that you specify as part of the invocation behavior. The specific custom <xref:System.Xaml.Schema.XamlTypeInvoker> provides a way to reduce the dependencies on the CLR type system, which are used by the default <xref:System.Xaml.XamlType> behavior.\"\n  syntax:\n    content: 'public class XamlType : IEquatable<System.Xaml.XamlType>'\n  inheritance:\n  - System.Object\n  implements:\n  - System.IEquatable{System.Xaml.XamlType}\n  inheritedMembers:\n  - System.Object.Equals(System.Object,System.Object)\n  - System.Object.GetType\n  - System.Object.MemberwiseClone\n  - System.Object.ReferenceEquals(System.Object,System.Object)\n  version:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Xaml/XamlType.xml\n  ms.technology:\n  - dotnet-wpf\n  manager: martinek\n- uid: System.Xaml.XamlType.#ctor(System.Type,System.Xaml.XamlSchemaContext)\n  commentId: M:System.Xaml.XamlType.#ctor(System.Type,System.Xaml.XamlSchemaContext)\n  id: '#ctor(System.Type,System.Xaml.XamlSchemaContext)'\n  parent: System.Xaml.XamlType\n  langs:\n  - csharp\n  name: XamlType(Type, XamlSchemaContext)\n  nameWithType: XamlType.XamlType(Type, XamlSchemaContext)\n  fullName: XamlType.XamlType(Type, XamlSchemaContext)\n  type: Constructor\n  assemblies:\n  - System.Xaml\n  namespace: System.Xaml\n  summary: Initializes a new instance of the <xref href=\"System.Xaml.XamlType\"></xref> class based on the underlying CLR type information.\n  syntax:\n    content: public XamlType (Type underlyingType, System.Xaml.XamlSchemaContext schemaContext);\n    parameters:\n    - id: underlyingType\n      type: System.Type\n      description: The underlying CLR <xref href=\"System.Type\"></xref> for the XAML type to construct.\n    - id: schemaContext\n      type: System.Xaml.XamlSchemaContext\n      description: XAML schema context for XAML readers or XAML writers.\n  overload: System.Xaml.XamlType.#ctor*\n  exceptions:\n  - type: System.ArgumentNullException\n    commentId: T:System.ArgumentNullException\n    description: One or more of <code>underlyingType</code> or <code>schemaContext</code> are `null`.\n  version:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Xaml/XamlType.xml\n  ms.technology:\n  - dotnet-wpf\n  manager: martinek\n- uid: System.Xaml.XamlType.#ctor(System.String,System.Collections.Generic.IList{System.Xaml.XamlType},System.Xaml.XamlSchemaContext)\n  commentId: M:System.Xaml.XamlType.#ctor(System.String,System.Collections.Generic.IList{System.Xaml.XamlType},System.Xaml.XamlSchemaContext)\n  id: '#ctor(System.String,System.Collections.Generic.IList{System.Xaml.XamlType},System.Xaml.XamlSchemaContext)'\n  parent: System.Xaml.XamlType\n  langs:\n  - csharp\n  name: XamlType(String, IList<XamlType>, XamlSchemaContext)\n  nameWithType: XamlType.XamlType(String, IList<XamlType>, XamlSchemaContext)\n  fullName: XamlType.XamlType(String, IList<XamlType>, XamlSchemaContext)\n  type: Constructor\n  assemblies:\n  - System.Xaml\n  namespace: System.Xaml\n  summary: Initializes a new instance of the <xref href=\"System.Xaml.XamlType\"></xref> class based on a string name for the type.\n  remarks: This is a protected constructor. No current public derived classes exist that use this particular path for construction. As a consumer of the existing <xref:System.Xaml.XamlType>, you must use the other constructor signatures (<xref:System.Xaml.XamlType.%23ctor%28System.Type%2CSystem.Xaml.XamlSchemaContext%2CSystem.Xaml.Schema.XamlTypeInvoker%29>, <xref:System.Xaml.XamlType.%23ctor%28System.Type%2CSystem.Xaml.XamlSchemaContext%29>, or <xref:System.Xaml.XamlType.%23ctor%28System.String%2CSystem.String%2CSystem.Collections.Generic.IList%7BSystem.Xaml.XamlType%7D%2CSystem.Xaml.XamlSchemaContext%29>) to initialize a <xref:System.Xaml.XamlType> object.\n  syntax:\n    content: protected XamlType (string typeName, System.Collections.Generic.IList<System.Xaml.XamlType> typeArguments, System.Xaml.XamlSchemaContext schemaContext);\n    parameters:\n    - id: typeName\n      type: System.String\n      description: The name of the type to create.\n    - id: typeArguments\n      type: System.Collections.Generic.IList{System.Xaml.XamlType}\n      description: The type arguments for a <xref href=\"System.Xaml.XamlType\"></xref> that represents a generic type. Can be (and often is) `null`, which indicates that the represented type is not a generic type.\n    - id: schemaContext\n      type: System.Xaml.XamlSchemaContext\n      description: XAML schema context for XAML readers and XAML writers.\n  overload: System.Xaml.XamlType.#ctor*\n  exceptions:\n  - type: System.ArgumentNullException\n    commentId: T:System.ArgumentNullException\n    description: One or more of <code>typeName</code> or <code>schemaContext</code> are `null`.\n  version:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Xaml/XamlType.xml\n  ms.technology:\n  - dotnet-wpf\n  manager: martinek\n- uid: System.Xaml.XamlType.#ctor(System.Type,System.Xaml.XamlSchemaContext,System.Xaml.Schema.XamlTypeInvoker)\n  commentId: M:System.Xaml.XamlType.#ctor(System.Type,System.Xaml.XamlSchemaContext,System.Xaml.Schema.XamlTypeInvoker)\n  id: '#ctor(System.Type,System.Xaml.XamlSchemaContext,System.Xaml.Schema.XamlTypeInvoker)'\n  parent: System.Xaml.XamlType\n  langs:\n  - csharp\n  name: XamlType(Type, XamlSchemaContext, XamlTypeInvoker)\n  nameWithType: XamlType.XamlType(Type, XamlSchemaContext, XamlTypeInvoker)\n  fullName: XamlType.XamlType(Type, XamlSchemaContext, XamlTypeInvoker)\n  type: Constructor\n  assemblies:\n  - System.Xaml\n  namespace: System.Xaml\n  summary: Initializes a new instance of the <xref href=\"System.Xaml.XamlType\"></xref> class based on underlying type information and a <xref href=\"System.Xaml.Schema.XamlTypeInvoker\"></xref> implementation.\n  syntax:\n    content: public XamlType (Type underlyingType, System.Xaml.XamlSchemaContext schemaContext, System.Xaml.Schema.XamlTypeInvoker invoker);\n    parameters:\n    - id: underlyingType\n      type: System.Type\n      description: The underlying type for the XAML type to construct.\n    - id: schemaContext\n      type: System.Xaml.XamlSchemaContext\n      description: XAML schema context for the XAML reader.\n    - id: invoker\n      type: System.Xaml.Schema.XamlTypeInvoker\n      description: The <xref href=\"System.Xaml.Schema.XamlTypeInvoker\"></xref> implementation that handles run-time reflection calls against the <xref href=\"System.Xaml.XamlType\"></xref>.\n  overload: System.Xaml.XamlType.#ctor*\n  exceptions:\n  - type: System.ArgumentNullException\n    commentId: T:System.ArgumentNullException\n    description: One or more of <code>underlyingType</code> or <code>schemaContext</code> are `null`.\n  version:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Xaml/XamlType.xml\n  ms.technology:\n  - dotnet-wpf\n  manager: martinek\n- uid: System.Xaml.XamlType.#ctor(System.String,System.String,System.Collections.Generic.IList{System.Xaml.XamlType},System.Xaml.XamlSchemaContext)\n  commentId: M:System.Xaml.XamlType.#ctor(System.String,System.String,System.Collections.Generic.IList{System.Xaml.XamlType},System.Xaml.XamlSchemaContext)\n  id: '#ctor(System.String,System.String,System.Collections.Generic.IList{System.Xaml.XamlType},System.Xaml.XamlSchemaContext)'\n  parent: System.Xaml.XamlType\n  langs:\n  - csharp\n  name: XamlType(String, String, IList<XamlType>, XamlSchemaContext)\n  nameWithType: XamlType.XamlType(String, String, IList<XamlType>, XamlSchemaContext)\n  fullName: XamlType.XamlType(String, String, IList<XamlType>, XamlSchemaContext)\n  type: Constructor\n  assemblies:\n  - System.Xaml\n  namespace: System.Xaml\n  summary: Initializes a new instance of the <xref href=\"System.Xaml.XamlType\"></xref> class based on the XAML namespace and a string name for the type. This constructor is exclusively for analysis and XAML-node recording of type usages that are known to not have backing in the supporting type system and XAML schema context.\n  remarks: Use this constructor only for \"unknown\" types where a XAML type that maps to an underlying type system is unavailable. This constructor might not produce a result where <xref:System.Xaml.XamlType.IsUnknown%2A?displayProperty=fullName> is `true`. Instead, the default reflector logic reports the underlying type as <xref:System.Xaml.XamlLanguage.Object%2A?displayProperty=fullName>. However, this behavior can change because of the <xref:System.Xaml.XamlType.LookupIsUnknown%2A> override.\n  syntax:\n    content: public XamlType (string unknownTypeNamespace, string unknownTypeName, System.Collections.Generic.IList<System.Xaml.XamlType> typeArguments, System.Xaml.XamlSchemaContext schemaContext);\n    parameters:\n    - id: unknownTypeNamespace\n      type: System.String\n      description: The XAML namespace for the type, as a string.\n    - id: unknownTypeName\n      type: System.String\n      description: The name of the type in the provided <code>unknownTypeNamespace</code> XAML namespace.\n    - id: typeArguments\n      type: System.Collections.Generic.IList{System.Xaml.XamlType}\n      description: The type arguments for a <xref href=\"System.Xaml.XamlType\"></xref> that represents a generic type. Can be (and often is) `null`, which indicates that the represented type is not a generic type.\n    - id: schemaContext\n      type: System.Xaml.XamlSchemaContext\n      description: XAML schema context for XAML readers or XAML writers.\n  overload: System.Xaml.XamlType.#ctor*\n  exceptions:\n  - type: System.ArgumentNullException\n    commentId: T:System.ArgumentNullException\n    description: One or more of <code>unknownTypeNamespace</code>, <code>unknownTypeName</code>, or <code>schemaContext</code> are `null`.\n  version:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Xaml/XamlType.xml\n  ms.technology:\n  - dotnet-wpf\n  manager: martinek\n- uid: System.Xaml.XamlType.AllowedContentTypes\n  commentId: P:System.Xaml.XamlType.AllowedContentTypes\n  id: AllowedContentTypes\n  parent: System.Xaml.XamlType\n  langs:\n  - csharp\n  name: AllowedContentTypes\n  nameWithType: XamlType.AllowedContentTypes\n  fullName: XamlType.AllowedContentTypes\n  type: Property\n  assemblies:\n  - System.Xaml\n  namespace: System.Xaml\n  summary: Gets a read-only collection of the types that are usable as the <xref href=\"System.Xaml.XamlType.ContentProperty\"></xref> value for this <xref href=\"System.Xaml.XamlType\"></xref>.\n  remarks: \"Types that are assignable a specific content type (for example, assignable to a base type that is an allowed content type) are not considered multiple types for purposes of <xref:System.Xaml.XamlType.AllowedContentTypes%2A>.  \\n  \\n If you do not use the default internal CLR reflection technique for a <xref:System.Xaml.XamlType>, calls to this property can invoke <xref:System.Xaml.XamlType.LookupAllowedContentTypes%2A> overrides on <xref:System.Xaml.XamlType> derived classes.\"\n  syntax:\n    content: public System.Collections.Generic.IList<System.Xaml.XamlType> AllowedContentTypes { get; }\n    return:\n      type: System.Collections.Generic.IList{System.Xaml.XamlType}\n      description: A read-only collection of possible content types.\n  overload: System.Xaml.XamlType.AllowedContentTypes*\n  exceptions: []\n  version:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Xaml/XamlType.xml\n  ms.technology:\n  - dotnet-wpf\n  manager: martinek\n- uid: System.Xaml.XamlType.BaseType\n  commentId: P:System.Xaml.XamlType.BaseType\n  id: BaseType\n  parent: System.Xaml.XamlType\n  langs:\n  - csharp\n  name: BaseType\n  nameWithType: XamlType.BaseType\n  fullName: XamlType.BaseType\n  type: Property\n  assemblies:\n  - System.Xaml\n  namespace: System.Xaml\n  summary: Gets the <xref href=\"System.Xaml.XamlType\"></xref> for the immediate base type of this XAML type. Determination of this value is based on the underlying type of this <xref href=\"System.Xaml.XamlType\"></xref> and schema context.\n  remarks: \"If you do not use the default internal CLR reflection technique for a <xref:System.Xaml.XamlType>, calls to this property can invoke <xref:System.Xaml.XamlType.LookupBaseType%2A> overrides on <xref:System.Xaml.XamlType> derived classes. For more information about return values and other behavior, see the documentation for <xref:System.Xaml.XamlType.LookupBaseType%2A> on this type. By default, <xref:System.Xaml.XamlType.BaseType%2A> returns an internal constant that represents an <xref:System.Object> if <xref:System.Xaml.XamlType.UnderlyingType%2A> is `null`.  \\n  \\n> [!IMPORTANT]\\n>  <xref:System.Xaml.XamlType.LookupBaseType%2A> is virtual, and therefore, can be overridden. The override has the potential (whether for malicious purposes or otherwise) to change the reported type information about a XAML type so that it no longer aligns in an expected way with the type system information of its underlying CLR type. For any security-critical checks of assignment operations and access, use the underlying CLR type instead.\"\n  syntax:\n    content: public System.Xaml.XamlType BaseType { get; }\n    return:\n      type: System.Xaml.XamlType\n      description: The <xref href=\"System.Xaml.XamlType\"></xref> for the immediate base type of this XAML type.\n  overload: System.Xaml.XamlType.BaseType*\n  exceptions: []\n  version:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Xaml/XamlType.xml\n  ms.technology:\n  - dotnet-wpf\n  manager: martinek\n- uid: System.Xaml.XamlType.CanAssignTo(System.Xaml.XamlType)\n  commentId: M:System.Xaml.XamlType.CanAssignTo(System.Xaml.XamlType)\n  id: CanAssignTo(System.Xaml.XamlType)\n  parent: System.Xaml.XamlType\n  langs:\n  - csharp\n  name: CanAssignTo(XamlType)\n  nameWithType: XamlType.CanAssignTo(XamlType)\n  fullName: XamlType.CanAssignTo(XamlType)\n  type: Method\n  assemblies:\n  - System.Xaml\n  namespace: System.Xaml\n  summary: Returns a value that indicates whether an instance of this <xref href=\"System.Xaml.XamlType\"></xref> has the specified <xref href=\"System.Xaml.XamlType\"></xref> in its list of assignable types.\n  remarks: \"Although the assignable type does not have all the capabilities of the reference type, you can use it for assignment. For example, you can use assignment to make type matches for the values of a property. The concept of assignable types in XAML is similar to the concept of casting up in the CLR type system. For example, under a CLR type system, every type has an <xref:System.Object> in its assignable type list.  \\n  \\n If one of the two <xref:System.Xaml.XamlType> instances that are used for comparison has <xref:System.Xaml.XamlType.IsUnknown%2A> equal to `true`, this method has a special Unknown mode that returns `true` if the two <xref:System.Xaml.XamlType> instances are equivalent.  \\n  \\n The default implementation uses the CLR <xref:System.Type> from <xref:System.Xaml.XamlType.UnderlyingType%2A> for this <xref:System.Xaml.XamlType> and the input <xref:System.Xaml.XamlType>, and calls <xref:System.Type.IsAssignableFrom%2A>. Override this method if you want a different determination of assignable types.  \\n  \\n Passing a null `xamlType` does not throw an exception and always returns `false`.  \\n  \\n> [!IMPORTANT]\\n>  <xref:System.Xaml.XamlType.CanAssignTo%2A> is virtual, and therefore, can be overridden. The override has the potential (whether for malicious purposes or otherwise) to change the assignability of a XAML type so that it no longer aligns in an expected way with the type-casting behavior of its underlying CLR type. For any security-critical checks of assignment operations and access, use the underlying CLR type instead.\"\n  syntax:\n    content: public virtual bool CanAssignTo (System.Xaml.XamlType xamlType);\n    parameters:\n    - id: xamlType\n      type: System.Xaml.XamlType\n      description: The type to check against the current <xref href=\"System.Xaml.XamlType\"></xref> .\n    return:\n      type: System.Boolean\n      description: '`true` if <code>xamlType</code> is in the assignable types list; otherwise, `false`.'\n  overload: System.Xaml.XamlType.CanAssignTo*\n  exceptions: []\n  version:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Xaml/XamlType.xml\n  ms.technology:\n  - dotnet-wpf\n  manager: martinek\n- uid: System.Xaml.XamlType.ConstructionRequiresArguments\n  commentId: P:System.Xaml.XamlType.ConstructionRequiresArguments\n  id: ConstructionRequiresArguments\n  parent: System.Xaml.XamlType\n  langs:\n  - csharp\n  name: ConstructionRequiresArguments\n  nameWithType: XamlType.ConstructionRequiresArguments\n  fullName: XamlType.ConstructionRequiresArguments\n  type: Property\n  assemblies:\n  - System.Xaml\n  namespace: System.Xaml\n  summary: Gets a value that indicates whether this <xref href=\"System.Xaml.XamlType\"></xref> must have arguments (generic constraints through `x:TypeArguments`, initialization text, or other XAML techniques) to construct a valid instance of the type.\n  remarks: If you do not use the default internal CLR reflection technique for a <xref:System.Xaml.XamlType>, calls to this property can invoke <xref:System.Xaml.XamlType.LookupConstructionRequiresArguments%2A> overrides on <xref:System.Xaml.XamlType> derived classes. For more information about return values and other behavior, see the documentation for <xref:System.Xaml.XamlType.LookupConstructionRequiresArguments%2A> on this type.\n  syntax:\n    content: public bool ConstructionRequiresArguments { get; }\n    return:\n      type: System.Boolean\n      description: '`true` if construction of an instance requires some argument value; otherwise, `false`.'\n  overload: System.Xaml.XamlType.ConstructionRequiresArguments*\n  exceptions: []\n  version:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Xaml/XamlType.xml\n  ms.technology:\n  - dotnet-wpf\n  manager: martinek\n- uid: System.Xaml.XamlType.ContentProperty\n  commentId: P:System.Xaml.XamlType.ContentProperty\n  id: ContentProperty\n  parent: System.Xaml.XamlType\n  langs:\n  - csharp\n  name: ContentProperty\n  nameWithType: XamlType.ContentProperty\n  fullName: XamlType.ContentProperty\n  type: Property\n  assemblies:\n  - System.Xaml\n  namespace: System.Xaml\n  summary: Gets the <xref href=\"System.Xaml.XamlMember\"></xref> information for the content property of this <xref href=\"System.Xaml.XamlType\"></xref>.\n  remarks: \"When using the binding or backing of the CLR type system, the XAML content property can be specified on a type by applying <xref:System.Windows.Markup.ContentPropertyAttribute> to the type definition.  \\n  \\n This property aligns to the `[content property]` information item in the [MS-XAML] specification.  \\n  \\n If you do not use the default internal CLR reflection technique for a <xref:System.Xaml.XamlType>, calls to this property can invoke <xref:System.Xaml.XamlType.LookupContentProperty%2A> overrides on <xref:System.Xaml.XamlType> derived classes. For more information about return values and other behavior, see the documentation for <xref:System.Xaml.XamlType.LookupContentProperty%2A> on this type.\"\n  syntax:\n    content: public System.Xaml.XamlMember ContentProperty { get; }\n    return:\n      type: System.Xaml.XamlMember\n      description: <xref href=\"System.Xaml.XamlMember\"></xref> information for the content property of this <xref href=\"System.Xaml.XamlType\"></xref>. May be `null` if no content property exists.\n  overload: System.Xaml.XamlType.ContentProperty*\n  exceptions: []\n  version:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Xaml/XamlType.xml\n  ms.technology:\n  - dotnet-wpf\n  manager: martinek\n- uid: System.Xaml.XamlType.ContentWrappers\n  commentId: P:System.Xaml.XamlType.ContentWrappers\n  id: ContentWrappers\n  parent: System.Xaml.XamlType\n  langs:\n  - csharp\n  name: ContentWrappers\n  nameWithType: XamlType.ContentWrappers\n  fullName: XamlType.ContentWrappers\n  type: Property\n  assemblies:\n  - System.Xaml\n  namespace: System.Xaml\n  summary: Gets the types that are used to wrap content for a content property when it is not a strict type match, such as strings in a strongly typed `Collection<T>`.\n  remarks: \"If there are no wrappers to account for type match loosening, this property is `null`.  \\n  \\n Types that evaluate as <xref:System.Xaml.XamlType.CanAssignTo%2A> for a specific content type are not considered multiple types for purposes of <xref:System.Xaml.XamlType.ContentWrappers%2A>.  \\n  \\n In the CLR binding for <xref:System.Xaml> and <xref:System.Xaml.XamlType>, the XAML content wrapper type can be specified on a type as a <xref:System.Windows.Markup.ContentWrapperAttribute>.  \\n  \\n If you do not use the default internal CLR reflection technique for a <xref:System.Xaml.XamlType>, calls to this property can invoke <xref:System.Xaml.XamlType.LookupContentWrappers%2A> overrides on <xref:System.Xaml.XamlType> derived classes. For more information about return values and other behavior, see the documentation for <xref:System.Xaml.XamlType.LookupContentWrappers%2A> on this type.\"\n  syntax:\n    content: public System.Collections.Generic.IList<System.Xaml.XamlType> ContentWrappers { get; }\n    return:\n      type: System.Collections.Generic.IList{System.Xaml.XamlType}\n      description: A read-only collection of possible content wrapper types; otherwise, `null`.\n  overload: System.Xaml.XamlType.ContentWrappers*\n  exceptions: []\n  version:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Xaml/XamlType.xml\n  ms.technology:\n  - dotnet-wpf\n  manager: martinek\n- uid: System.Xaml.XamlType.DeferringLoader\n  commentId: P:System.Xaml.XamlType.DeferringLoader\n  id: DeferringLoader\n  parent: System.Xaml.XamlType\n  langs:\n  - csharp\n  name: DeferringLoader\n  nameWithType: XamlType.DeferringLoader\n  fullName: XamlType.DeferringLoader\n  type: Property\n  assemblies:\n  - System.Xaml\n  namespace: System.Xaml\n  summary: Gets the <xref href=\"System.Xaml.Schema.XamlValueConverter`1\"></xref> that represents the deferred loading conversion behavior for this type.\n  remarks: \"XAML template behavior in WPF is an example of deferred loading behavior.  \\n  \\n If you do not use the default internal CLR reflection technique for a <xref:System.Xaml.XamlType>, calls to this property can invoke <xref:System.Xaml.XamlType.LookupDeferringLoader%2A> overrides on <xref:System.Xaml.XamlType> derived classes. For more information about return values and other behavior, see the documentation for <xref:System.Xaml.XamlType.LookupDeferringLoader%2A> on this type.\"\n  syntax:\n    content: public System.Xaml.Schema.XamlValueConverter<System.Xaml.XamlDeferringLoader> DeferringLoader { get; }\n    return:\n      type: System.Xaml.Schema.XamlValueConverter{System.Xaml.XamlDeferringLoader}\n      description: The <xref href=\"System.Xaml.Schema.XamlValueConverter`1\"></xref> with <xref href=\"System.Xaml.XamlDeferringLoader\"></xref> constraint that represents the deferred loading behavior for this type.\n  overload: System.Xaml.XamlType.DeferringLoader*\n  exceptions: []\n  version:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Xaml/XamlType.xml\n  ms.technology:\n  - dotnet-wpf\n  manager: martinek\n- uid: System.Xaml.XamlType.Equals(System.Object)\n  commentId: M:System.Xaml.XamlType.Equals(System.Object)\n  id: Equals(System.Object)\n  parent: System.Xaml.XamlType\n  langs:\n  - csharp\n  name: Equals(Object)\n  nameWithType: XamlType.Equals(Object)\n  fullName: XamlType.Equals(Object)\n  type: Method\n  assemblies:\n  - System.Xaml\n  namespace: System.Xaml\n  summary: Indicates whether the current object is equal to another object.\n  syntax:\n    content: public override bool Equals (object obj);\n    parameters:\n    - id: obj\n      type: System.Object\n      description: The object to compare with this object.\n    return:\n      type: System.Boolean\n      description: '`true` if the current object is equal to the <code>obj</code> parameter; otherwise, `false`.'\n  overload: System.Xaml.XamlType.Equals*\n  exceptions: []\n  version:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Xaml/XamlType.xml\n  ms.technology:\n  - dotnet-wpf\n  manager: martinek\n- uid: System.Xaml.XamlType.Equals(System.Xaml.XamlType)\n  commentId: M:System.Xaml.XamlType.Equals(System.Xaml.XamlType)\n  id: Equals(System.Xaml.XamlType)\n  parent: System.Xaml.XamlType\n  langs:\n  - csharp\n  name: Equals(XamlType)\n  nameWithType: XamlType.Equals(XamlType)\n  fullName: XamlType.Equals(XamlType)\n  type: Method\n  assemblies:\n  - System.Xaml\n  namespace: System.Xaml\n  summary: Indicates whether the current object is equal to another object of the same type.\n  syntax:\n    content: public bool Equals (System.Xaml.XamlType other);\n    parameters:\n    - id: other\n      type: System.Xaml.XamlType\n      description: An object to compare with this object.\n    return:\n      type: System.Boolean\n      description: '`true` if the current object is equal to the <code>other</code> parameter; otherwise, `false`.'\n  overload: System.Xaml.XamlType.Equals*\n  exceptions: []\n  version:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Xaml/XamlType.xml\n  ms.technology:\n  - dotnet-wpf\n  manager: martinek\n- uid: System.Xaml.XamlType.GetAliasedProperty(System.Xaml.XamlDirective)\n  commentId: M:System.Xaml.XamlType.GetAliasedProperty(System.Xaml.XamlDirective)\n  id: GetAliasedProperty(System.Xaml.XamlDirective)\n  parent: System.Xaml.XamlType\n  langs:\n  - csharp\n  name: GetAliasedProperty(XamlDirective)\n  nameWithType: XamlType.GetAliasedProperty(XamlDirective)\n  fullName: XamlType.GetAliasedProperty(XamlDirective)\n  type: Method\n  assemblies:\n  - System.Xaml\n  namespace: System.Xaml\n  summary: Returns the XAML member that is aliased to a XAML directive by this <xref href=\"System.Xaml.XamlType\"></xref>.\n  remarks: If you do not use the default internal CLR reflection technique for a <xref:System.Xaml.XamlType>, calls to this method can invoke <xref:System.Xaml.XamlType.LookupAliasedProperty%2A> overrides on <xref:System.Xaml.XamlType> derived classes. For more information about return values and other behavior, see the documentation for <xref:System.Xaml.XamlType.LookupAliasedProperty%2A> on this type.\n  syntax:\n    content: public System.Xaml.XamlMember GetAliasedProperty (System.Xaml.XamlDirective directive);\n    parameters:\n    - id: directive\n      type: System.Xaml.XamlDirective\n      description: The directive for which to find the aliased member.\n    return:\n      type: System.Xaml.XamlMember\n      description: The aliased member, if found; otherwise, `null`.\n  overload: System.Xaml.XamlType.GetAliasedProperty*\n  exceptions: []\n  version:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Xaml/XamlType.xml\n  ms.technology:\n  - dotnet-wpf\n  manager: martinek\n- uid: System.Xaml.XamlType.GetAllAttachableMembers\n  commentId: M:System.Xaml.XamlType.GetAllAttachableMembers\n  id: GetAllAttachableMembers\n  parent: System.Xaml.XamlType\n  langs:\n  - csharp\n  name: GetAllAttachableMembers()\n  nameWithType: XamlType.GetAllAttachableMembers()\n  fullName: XamlType.GetAllAttachableMembers()\n  type: Method\n  assemblies:\n  - System.Xaml\n  namespace: System.Xaml\n  summary: Returns a collection that contains all the attachable properties that are exposed by this <xref href=\"System.Xaml.XamlType\"></xref>.\n  remarks: \"Each <xref:System.Xaml.XamlMember> in the returned collection should contain values that support the concept that the <xref:System.Xaml.XamlMember> is an attachable member. For example, members should return `true` for <xref:System.Xaml.XamlMember.IsAttachable%2A>, a type for <xref:System.Xaml.XamlMember.TargetType%2A>, and so on.  \\n  \\n If you do not use the default internal CLR reflection technique for a <xref:System.Xaml.XamlType>, calls to this method can invoke <xref:System.Xaml.XamlType.LookupAllAttachableMembers%2A> overrides on <xref:System.Xaml.XamlType> derived classes. For more information about return values and other behavior, see the documentation for <xref:System.Xaml.XamlType.LookupAllAttachableMembers%2A> on this type.\"\n  syntax:\n    content: public System.Collections.Generic.ICollection<System.Xaml.XamlMember> GetAllAttachableMembers ();\n    parameters: []\n    return:\n      type: System.Collections.Generic.ICollection{System.Xaml.XamlMember}\n      description: A collection that contains zero or more <xref href=\"System.Xaml.XamlMember\"></xref> values.\n  overload: System.Xaml.XamlType.GetAllAttachableMembers*\n  exceptions: []\n  version:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Xaml/XamlType.xml\n  ms.technology:\n  - dotnet-wpf\n  manager: martinek\n- uid: System.Xaml.XamlType.GetAllMembers\n  commentId: M:System.Xaml.XamlType.GetAllMembers\n  id: GetAllMembers\n  parent: System.Xaml.XamlType\n  langs:\n  - csharp\n  name: GetAllMembers()\n  nameWithType: XamlType.GetAllMembers()\n  fullName: XamlType.GetAllMembers()\n  type: Method\n  assemblies:\n  - System.Xaml\n  namespace: System.Xaml\n  summary: Returns a collection that contains all the members that are exposed by this <xref href=\"System.Xaml.XamlType\"></xref>.\n  remarks: Calls to this method can invoke <xref:System.Xaml.XamlType.LookupAllMembers%2A> overrides on <xref:System.Xaml.XamlType> derived classes.\n  syntax:\n    content: public System.Collections.Generic.ICollection<System.Xaml.XamlMember> GetAllMembers ();\n    parameters: []\n    return:\n      type: System.Collections.Generic.ICollection{System.Xaml.XamlMember}\n      description: A collection that contains zero or more <xref href=\"System.Xaml.XamlMember\"></xref> values.\n  overload: System.Xaml.XamlType.GetAllMembers*\n  exceptions: []\n  version:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Xaml/XamlType.xml\n  ms.technology:\n  - dotnet-wpf\n  manager: martinek\n- uid: System.Xaml.XamlType.GetAttachableMember(System.String)\n  commentId: M:System.Xaml.XamlType.GetAttachableMember(System.String)\n  id: GetAttachableMember(System.String)\n  parent: System.Xaml.XamlType\n  langs:\n  - csharp\n  name: GetAttachableMember(String)\n  nameWithType: XamlType.GetAttachableMember(String)\n  fullName: XamlType.GetAttachableMember(String)\n  type: Method\n  assemblies:\n  - System.Xaml\n  namespace: System.Xaml\n  summary: Returns a <xref href=\"System.Xaml.XamlMember\"></xref> representing a specific named attachable member of this <xref href=\"System.Xaml.XamlType\"></xref>.\n  remarks: \"Calls to this method can invoke <xref:System.Xaml.XamlType.LookupAttachableMember%2A> overrides on <xref:System.Xaml.XamlType> derived classes.  \\n  \\n> [!IMPORTANT]\\n>  <xref:System.Xaml.XamlType.LookupAttachableMember%2A> is virtual, and therefore, can be overridden. The override has the potential (whether for malicious purposes or otherwise) to change the reported members of a XAML type so that they no longer align in an expected way with the <xref:System.ComponentModel.TypeDescriptor> `Get*` information about the underlying CLR type. For any security-critical checks of member reporting, use the underlying CLR type instead.\"\n  syntax:\n    content: public System.Xaml.XamlMember GetAttachableMember (string name);\n    parameters:\n    - id: name\n      type: System.String\n      description: The name of the attachable member to get, in <code>ownerTypeName.MemberName</code> form.\n    return:\n      type: System.Xaml.XamlMember\n      description: A <xref href=\"System.Xaml.XamlMember\"></xref> object for the requested attachable member; otherwise, `null`, if no attachable member by that name exists.\n  overload: System.Xaml.XamlType.GetAttachableMember*\n  exceptions: []\n  version:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Xaml/XamlType.xml\n  ms.technology:\n  - dotnet-wpf\n  manager: martinek\n- uid: System.Xaml.XamlType.GetHashCode\n  commentId: M:System.Xaml.XamlType.GetHashCode\n  id: GetHashCode\n  parent: System.Xaml.XamlType\n  langs:\n  - csharp\n  name: GetHashCode()\n  nameWithType: XamlType.GetHashCode()\n  fullName: XamlType.GetHashCode()\n  type: Method\n  assemblies:\n  - System.Xaml\n  namespace: System.Xaml\n  summary: Returns the hash code for this object.\n  syntax:\n    content: public override int GetHashCode ();\n    parameters: []\n    return:\n      type: System.Int32\n      description: An integer hash code.\n  overload: System.Xaml.XamlType.GetHashCode*\n  exceptions: []\n  version:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Xaml/XamlType.xml\n  ms.technology:\n  - dotnet-wpf\n  manager: martinek\n- uid: System.Xaml.XamlType.GetMember(System.String)\n  commentId: M:System.Xaml.XamlType.GetMember(System.String)\n  id: GetMember(System.String)\n  parent: System.Xaml.XamlType\n  langs:\n  - csharp\n  name: GetMember(String)\n  nameWithType: XamlType.GetMember(String)\n  fullName: XamlType.GetMember(String)\n  type: Method\n  assemblies:\n  - System.Xaml\n  namespace: System.Xaml\n  summary: Returns a <xref href=\"System.Xaml.XamlMember\"></xref> for a specific named member from this <xref href=\"System.Xaml.XamlType\"></xref>.\n  remarks: \"The value for `name` is expected to be unqualified. Type-qualified names that indicate an attached member should be submitted to <xref:System.Xaml.XamlType.GetAttachableMember%2A> instead. Prefixed member names should not be used; a prefix is situational to a usage and the XAML type system cannot know the context of such a usage and how the prefix is mapped.  \\n  \\n Calls to this method can invoke <xref:System.Xaml.XamlType.LookupMember%2A> overrides on <xref:System.Xaml.XamlType> derived classes.  \\n  \\n> [!IMPORTANT]\\n>  <xref:System.Xaml.XamlType.LookupMember%2A> is virtual, and therefore, can be overridden. The override has the potential (whether for malicious purposes or otherwise) to change the reported members of a XAML type so that they no longer align in an expected way with the <xref:System.ComponentModel.TypeDescriptor> `Get*` information about the underlying CLR type. For any security-critical checks of member reporting, use the underlying CLR type instead.\"\n  syntax:\n    content: public System.Xaml.XamlMember GetMember (string name);\n    parameters:\n    - id: name\n      type: System.String\n      description: The name of the member to get (as a string).\n    return:\n      type: System.Xaml.XamlMember\n      description: The <xref href=\"System.Xaml.XamlMember\"></xref> information for the member, if such a member was found; otherwise, `null`.\n  overload: System.Xaml.XamlType.GetMember*\n  exceptions: []\n  version:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Xaml/XamlType.xml\n  ms.technology:\n  - dotnet-wpf\n  manager: martinek\n- uid: System.Xaml.XamlType.GetPositionalParameters(System.Int32)\n  commentId: M:System.Xaml.XamlType.GetPositionalParameters(System.Int32)\n  id: GetPositionalParameters(System.Int32)\n  parent: System.Xaml.XamlType\n  langs:\n  - csharp\n  name: GetPositionalParameters(Int32)\n  nameWithType: XamlType.GetPositionalParameters(Int32)\n  fullName: XamlType.GetPositionalParameters(Int32)\n  type: Method\n  assemblies:\n  - System.Xaml\n  namespace: System.Xaml\n  summary: For markup extension types, returns the types of the positional parameters that are supported in a specific markup extension usage for this <xref href=\"System.Xaml.XamlType\"></xref>.\n  remarks: \"This API is only relevant if this <xref:System.Xaml.XamlType> represents a markup extension (<xref:System.Xaml.XamlType.IsMarkupExtension%2A> is `true`).  \\n  \\n The input `parameterCount` is not for requesting the type of a specific positional parameter. It is for specifying the arity of a markup extension usage. Markup extension usage often has multiple \\\"signatures\\\" and uses different parameter arity (count) of positional parameters to differentiate. However, you can configure a schema context to allow duplicate arities and use types of the positional parameters for differentiation. For more information, see <xref:System.Xaml.XamlSchemaContext.SupportMarkupExtensionsWithDuplicateArity%2A>. For a specific arity (count), the parameter positions and types can vary. To get the positional type of a specific arity's markup extension usage, you first call <xref:System.Xaml.XamlType.GetPositionalParameters%2A> specifying the arity count. Then get the item at that position from the returned collection.  \\n  \\n Calls to this method can invoke <xref:System.Xaml.XamlType.LookupPositionalParameters%2A> overrides on <xref:System.Xaml.XamlType> derived classes.\"\n  syntax:\n    content: public System.Collections.Generic.IList<System.Xaml.XamlType> GetPositionalParameters (int parameterCount);\n    parameters:\n    - id: parameterCount\n      type: System.Int32\n      description: The count (arity) of the particular syntax or constructor mode that you want information about.\n    return:\n      type: System.Collections.Generic.IList{System.Xaml.XamlType}\n      description: A list of <xref href=\"System.Xaml.XamlType\"></xref> values, where each <xref href=\"System.Xaml.XamlType\"></xref> is the type for that position in the syntax. You must specify the types in the same order when you supply markup input for the markup extension.\n  overload: System.Xaml.XamlType.GetPositionalParameters*\n  exceptions: []\n  version:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Xaml/XamlType.xml\n  ms.technology:\n  - dotnet-wpf\n  manager: martinek\n- uid: System.Xaml.XamlType.GetXamlNamespaces\n  commentId: M:System.Xaml.XamlType.GetXamlNamespaces\n  id: GetXamlNamespaces\n  parent: System.Xaml.XamlType\n  langs:\n  - csharp\n  name: GetXamlNamespaces()\n  nameWithType: XamlType.GetXamlNamespaces()\n  fullName: XamlType.GetXamlNamespaces()\n  type: Method\n  assemblies:\n  - System.Xaml\n  namespace: System.Xaml\n  summary: Returns a list of string identifiers for XAML namespaces that the type is included in.\n  remarks: \"Typical XAML namespace identifiers are strings in URI form.  \\n  \\n The default implementation checks the following, in order: the XAML namespace that is supplied in construction (<xref:System.Xaml.XamlType.%23ctor%28System.String%2CSystem.String%2CSystem.Collections.Generic.IList%7BSystem.Xaml.XamlType%7D%2CSystem.Xaml.XamlSchemaContext%29> signature only); and the namespaces that are available from the schema context. If these are each `null`, a new list is generated that contains a single empty string. You can override this method to change the lookup methodology.\"\n  syntax:\n    content: public virtual System.Collections.Generic.IList<string> GetXamlNamespaces ();\n    parameters: []\n    return:\n      type: System.Collections.Generic.IList{System.String}\n      description: A list of string values, where each string is the URI identifier for a XAML namespace.\n  overload: System.Xaml.XamlType.GetXamlNamespaces*\n  exceptions: []\n  version:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Xaml/XamlType.xml\n  ms.technology:\n  - dotnet-wpf\n  manager: martinek\n- uid: System.Xaml.XamlType.Invoker\n  commentId: P:System.Xaml.XamlType.Invoker\n  id: Invoker\n  parent: System.Xaml.XamlType\n  langs:\n  - csharp\n  name: Invoker\n  nameWithType: XamlType.Invoker\n  fullName: XamlType.Invoker\n  type: Property\n  assemblies:\n  - System.Xaml\n  namespace: System.Xaml\n  summary: Gets the <xref href=\"System.Xaml.Schema.XamlTypeInvoker\"></xref> implementation that is associated with this <xref href=\"System.Xaml.XamlType\"></xref>.\n  remarks: \"If you do not use the default internal CLR reflection technique for a <xref:System.Xaml.XamlType>, calling <xref:System.Xaml.XamlType.Invoker%2A> can invoke either <xref:System.Xaml.XamlType.LookupInvoker%2A> or a specific override of that method. For more information about return values and other behavior, see the documentation for <xref:System.Xaml.XamlType.LookupInvoker%2A> on this type.  \\n  \\n If a <xref:System.Xaml.XamlType.LookupInvoker%2A> override returns `null`, or if the default implementation returns `null` because of lack of <xref:System.Xaml.XamlType.UnderlyingType%2A> for this <xref:System.Xaml.XamlType>, then <xref:System.Xaml.XamlType.Invoker%2A> returns <xref:System.Xaml.Schema.XamlTypeInvoker.UnknownInvoker%2A?displayProperty=fullName>.\"\n  syntax:\n    content: public System.Xaml.Schema.XamlTypeInvoker Invoker { get; }\n    return:\n      type: System.Xaml.Schema.XamlTypeInvoker\n      description: The <xref href=\"System.Xaml.Schema.XamlTypeInvoker\"></xref> implementation that is associated with this <xref href=\"System.Xaml.XamlType\"></xref>.\n  overload: System.Xaml.XamlType.Invoker*\n  exceptions: []\n  version:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Xaml/XamlType.xml\n  ms.technology:\n  - dotnet-wpf\n  manager: martinek\n- uid: System.Xaml.XamlType.IsAmbient\n  commentId: P:System.Xaml.XamlType.IsAmbient\n  id: IsAmbient\n  parent: System.Xaml.XamlType\n  langs:\n  - csharp\n  name: IsAmbient\n  nameWithType: XamlType.IsAmbient\n  fullName: XamlType.IsAmbient\n  type: Property\n  assemblies:\n  - System.Xaml\n  namespace: System.Xaml\n  summary: Gets a value that indicates whether this <xref href=\"System.Xaml.XamlType\"></xref> represents an ambient type, as per the XAML definition.\n  remarks: If you do not use the default internal CLR reflection technique for a <xref:System.Xaml.XamlType>, calls to this property can invoke <xref:System.Xaml.XamlType.LookupIsAmbient%2A> overrides on <xref:System.Xaml.XamlType> derived classes. For more information about return values and other behavior, see the documentation for <xref:System.Xaml.XamlType.LookupIsAmbient%2A> on this type.\n  syntax:\n    content: public bool IsAmbient { get; }\n    return:\n      type: System.Boolean\n      description: '`true` if this <xref href=\"System.Xaml.XamlType\"></xref> represents an ambient type; otherwise, `false`.'\n  overload: System.Xaml.XamlType.IsAmbient*\n  exceptions: []\n  version:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Xaml/XamlType.xml\n  ms.technology:\n  - dotnet-wpf\n  manager: martinek\n- uid: System.Xaml.XamlType.IsArray\n  commentId: P:System.Xaml.XamlType.IsArray\n  id: IsArray\n  parent: System.Xaml.XamlType\n  langs:\n  - csharp\n  name: IsArray\n  nameWithType: XamlType.IsArray\n  fullName: XamlType.IsArray\n  type: Property\n  assemblies:\n  - System.Xaml\n  namespace: System.Xaml\n  summary: Gets a value that indicates whether this <xref href=\"System.Xaml.XamlType\"></xref> represents an array.\n  remarks: If you do not use the default internal CLR reflection technique for a <xref:System.Xaml.XamlType>, calls to this property can invoke <xref:System.Xaml.XamlType.LookupCollectionKind%2A> overrides on <xref:System.Xaml.XamlType> derived classes. For more information about return values and other behavior, see the documentation for <xref:System.Xaml.XamlType.LookupCollectionKind%2A> on this type.\n  syntax:\n    content: public bool IsArray { get; }\n    return:\n      type: System.Boolean\n      description: '`true` if this <xref href=\"System.Xaml.XamlType\"></xref> represents an array; otherwise, `false`.'\n  overload: System.Xaml.XamlType.IsArray*\n  exceptions: []\n  version:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Xaml/XamlType.xml\n  ms.technology:\n  - dotnet-wpf\n  manager: martinek\n- uid: System.Xaml.XamlType.IsCollection\n  commentId: P:System.Xaml.XamlType.IsCollection\n  id: IsCollection\n  parent: System.Xaml.XamlType\n  langs:\n  - csharp\n  name: IsCollection\n  nameWithType: XamlType.IsCollection\n  fullName: XamlType.IsCollection\n  type: Property\n  assemblies:\n  - System.Xaml\n  namespace: System.Xaml\n  summary: Gets a value that indicates whether this <xref href=\"System.Xaml.XamlType\"></xref> represents a collection.\n  remarks: If you do not use the default internal CLR reflection technique for a <xref:System.Xaml.XamlType>, calls to this property can invoke <xref:System.Xaml.XamlType.LookupCollectionKind%2A> overrides on <xref:System.Xaml.XamlType> derived classes. For more information about return values and other behavior, see the documentation for <xref:System.Xaml.XamlType.LookupCollectionKind%2A> on this type.\n  syntax:\n    content: public bool IsCollection { get; }\n    return:\n      type: System.Boolean\n      description: '`true` if this <xref href=\"System.Xaml.XamlType\"></xref> represents a collection; otherwise, `false`.'\n  overload: System.Xaml.XamlType.IsCollection*\n  exceptions: []\n  version:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Xaml/XamlType.xml\n  ms.technology:\n  - dotnet-wpf\n  manager: martinek\n- uid: System.Xaml.XamlType.IsConstructible\n  commentId: P:System.Xaml.XamlType.IsConstructible\n  id: IsConstructible\n  parent: System.Xaml.XamlType\n  langs:\n  - csharp\n  name: IsConstructible\n  nameWithType: XamlType.IsConstructible\n  fullName: XamlType.IsConstructible\n  type: Property\n  assemblies:\n  - System.Xaml\n  namespace: System.Xaml\n  summary: Gets a value that indicates whether this <xref href=\"System.Xaml.XamlType\"></xref> represents a constructible type, as per the XAML definition.\n  remarks: \"This property aligns to the `[is default constructible]` information item in the [MS-XAML] specification.  \\n  \\n If you do not use the default internal CLR reflection technique for a <xref:System.Xaml.XamlType>, calls to this property can invoke <xref:System.Xaml.XamlType.LookupIsConstructible%2A> overrides on <xref:System.Xaml.XamlType> derived classes. For more information about return values and other behavior, see the documentation for <xref:System.Xaml.XamlType.LookupIsConstructible%2A> on this type.\"\n  syntax:\n    content: public bool IsConstructible { get; }\n    return:\n      type: System.Boolean\n      description: '`true` if this <xref href=\"System.Xaml.XamlType\"></xref> represents a constructible type; otherwise, `false`.'\n  overload: System.Xaml.XamlType.IsConstructible*\n  exceptions: []\n  version:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Xaml/XamlType.xml\n  ms.technology:\n  - dotnet-wpf\n  manager: martinek\n- uid: System.Xaml.XamlType.IsDictionary\n  commentId: P:System.Xaml.XamlType.IsDictionary\n  id: IsDictionary\n  parent: System.Xaml.XamlType\n  langs:\n  - csharp\n  name: IsDictionary\n  nameWithType: XamlType.IsDictionary\n  fullName: XamlType.IsDictionary\n  type: Property\n  assemblies:\n  - System.Xaml\n  namespace: System.Xaml\n  summary: Gets a value that indicates whether this <xref href=\"System.Xaml.XamlType\"></xref> represents a dictionary, as per the XAML definition.\n  remarks: \"This property aligns to the `[is dictionary]` information item in the [MS-XAML] specification.  \\n  \\n If you do not use the default internal CLR reflection technique for a <xref:System.Xaml.XamlType>, calls to this property can invoke <xref:System.Xaml.XamlType.LookupCollectionKind%2A> overrides on <xref:System.Xaml.XamlType> derived classes. For more information about return values and other behavior, see the documentation for <xref:System.Xaml.XamlType.LookupCollectionKind%2A> on this type.\"\n  syntax:\n    content: public bool IsDictionary { get; }\n    return:\n      type: System.Boolean\n      description: '`true` if this <xref href=\"System.Xaml.XamlType\"></xref> represents a dictionary; otherwise, `false`.'\n  overload: System.Xaml.XamlType.IsDictionary*\n  exceptions: []\n  version:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Xaml/XamlType.xml\n  ms.technology:\n  - dotnet-wpf\n  manager: martinek\n- uid: System.Xaml.XamlType.IsGeneric\n  commentId: P:System.Xaml.XamlType.IsGeneric\n  id: IsGeneric\n  parent: System.Xaml.XamlType\n  langs:\n  - csharp\n  name: IsGeneric\n  nameWithType: XamlType.IsGeneric\n  fullName: XamlType.IsGeneric\n  type: Property\n  assemblies:\n  - System.Xaml\n  namespace: System.Xaml\n  summary: Gets a value that indicates whether this <xref href=\"System.Xaml.XamlType\"></xref> represents a generic type.\n  remarks: This property is a helper property that checks for a null value of <xref:System.Xaml.XamlType.TypeArguments%2A>. There is no specific `Lookup` method related to <xref:System.Xaml.XamlType.IsGeneric%2A>.\n  syntax:\n    content: public bool IsGeneric { get; }\n    return:\n      type: System.Boolean\n      description: '`true` if this <xref href=\"System.Xaml.XamlType\"></xref> represents a generic type; otherwise, `false`.'\n  overload: System.Xaml.XamlType.IsGeneric*\n  exceptions: []\n  version:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Xaml/XamlType.xml\n  ms.technology:\n  - dotnet-wpf\n  manager: martinek\n- uid: System.Xaml.XamlType.IsMarkupExtension\n  commentId: P:System.Xaml.XamlType.IsMarkupExtension\n  id: IsMarkupExtension\n  parent: System.Xaml.XamlType\n  langs:\n  - csharp\n  name: IsMarkupExtension\n  nameWithType: XamlType.IsMarkupExtension\n  fullName: XamlType.IsMarkupExtension\n  type: Property\n  assemblies:\n  - System.Xaml\n  namespace: System.Xaml\n  summary: Gets a value that indicates whether this <xref href=\"System.Xaml.XamlType\"></xref> represents a markup extension.\n  remarks: \"In XAML specification terms, this type must be assignable to `x:MarkupExtension` in order to return `true` for <xref:System.Xaml.XamlType.IsMarkupExtension%2A>.  \\n  \\n If you do not use the default internal CLR reflection technique for a <xref:System.Xaml.XamlType>, calls to this property can invoke <xref:System.Xaml.XamlType.LookupIsMarkupExtension%2A> overrides on <xref:System.Xaml.XamlType> derived classes. For more information about return values and other behavior, see the documentation for <xref:System.Xaml.XamlType.LookupIsMarkupExtension%2A> on this type.\"\n  syntax:\n    content: public bool IsMarkupExtension { get; }\n    return:\n      type: System.Boolean\n      description: '`true` if this <xref href=\"System.Xaml.XamlType\"></xref> represents a markup extension; otherwise, `false`.'\n  overload: System.Xaml.XamlType.IsMarkupExtension*\n  exceptions: []\n  version:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Xaml/XamlType.xml\n  ms.technology:\n  - dotnet-wpf\n  manager: martinek\n- uid: System.Xaml.XamlType.IsNameScope\n  commentId: P:System.Xaml.XamlType.IsNameScope\n  id: IsNameScope\n  parent: System.Xaml.XamlType\n  langs:\n  - csharp\n  name: IsNameScope\n  nameWithType: XamlType.IsNameScope\n  fullName: XamlType.IsNameScope\n  type: Property\n  assemblies:\n  - System.Xaml\n  namespace: System.Xaml\n  summary: Gets a value that indicates whether this <xref href=\"System.Xaml.XamlType\"></xref> represents a XAML namescope, as per the XAML definition.\n  remarks: \"A XAML namescope enforces the name uniqueness of the property or properties used for `x:Name` / `[name property]`. If <xref:System.Xaml.XamlType.IsNameScope%2A> is `true`, some mechanism for enforcing uniqueness should exist and should evaluate from the perspective of this type owning a XAML namescope. The XAML namescope then extends to the content of the type until another XAML namescope-owning type is encountered.  \\n  \\n This property aligns to the `[is name scope]` information item in the [MS-XAML] specification.  \\n  \\n If you do not use the default internal CLR reflection technique for a <xref:System.Xaml.XamlType>, calls to this property can invoke <xref:System.Xaml.XamlType.LookupIsNameScope%2A> overrides on <xref:System.Xaml.XamlType> derived classes.\"\n  syntax:\n    content: public bool IsNameScope { get; }\n    return:\n      type: System.Boolean\n      description: '`true` if this <xref href=\"System.Xaml.XamlType\"></xref> represents a XAML namescope; otherwise, `false`.'\n  overload: System.Xaml.XamlType.IsNameScope*\n  exceptions: []\n  version:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Xaml/XamlType.xml\n  ms.technology:\n  - dotnet-wpf\n  manager: martinek\n- uid: System.Xaml.XamlType.IsNameValid\n  commentId: P:System.Xaml.XamlType.IsNameValid\n  id: IsNameValid\n  parent: System.Xaml.XamlType\n  langs:\n  - csharp\n  name: IsNameValid\n  nameWithType: XamlType.IsNameValid\n  fullName: XamlType.IsNameValid\n  type: Property\n  assemblies:\n  - System.Xaml\n  namespace: System.Xaml\n  summary: Gets a value that indicates whether this <xref href=\"System.Xaml.XamlType\"></xref> is initialized by using a valid `xamlName` string as its <xref href=\"System.Xaml.XamlType.Name\"></xref>.\n  syntax:\n    content: public bool IsNameValid { get; }\n    return:\n      type: System.Boolean\n      description: '`true` if this <xref href=\"System.Xaml.XamlType\"></xref> is initialized by using a valid `xamlName` string; otherwise, `false`.'\n  overload: System.Xaml.XamlType.IsNameValid*\n  exceptions: []\n  version:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Xaml/XamlType.xml\n  ms.technology:\n  - dotnet-wpf\n  manager: martinek\n- uid: System.Xaml.XamlType.IsNullable\n  commentId: P:System.Xaml.XamlType.IsNullable\n  id: IsNullable\n  parent: System.Xaml.XamlType\n  langs:\n  - csharp\n  name: IsNullable\n  nameWithType: XamlType.IsNullable\n  fullName: XamlType.IsNullable\n  type: Property\n  assemblies:\n  - System.Xaml\n  namespace: System.Xaml\n  summary: Gets a value that indicates whether this <xref href=\"System.Xaml.XamlType\"></xref> represents a nullable type, as per the XAML definition.\n  remarks: \"This property aligns to the `[is nullable]` information item in the [MS-XAML] specification.  \\n  \\n If you are not using the default internal CLR reflection technique for a <xref:System.Xaml.XamlType>, calls to this property can invoke <xref:System.Xaml.XamlType.LookupIsNullable%2A> overrides on <xref:System.Xaml.XamlType> derived classes.\"\n  syntax:\n    content: public bool IsNullable { get; }\n    return:\n      type: System.Boolean\n      description: '`true` if this <xref href=\"System.Xaml.XamlType\"></xref> represents a nullable type; otherwise, `false`.'\n  overload: System.Xaml.XamlType.IsNullable*\n  exceptions: []\n  version:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Xaml/XamlType.xml\n  ms.technology:\n  - dotnet-wpf\n  manager: martinek\n- uid: System.Xaml.XamlType.IsPublic\n  commentId: P:System.Xaml.XamlType.IsPublic\n  id: IsPublic\n  parent: System.Xaml.XamlType\n  langs:\n  - csharp\n  name: IsPublic\n  nameWithType: XamlType.IsPublic\n  fullName: XamlType.IsPublic\n  type: Property\n  assemblies:\n  - System.Xaml\n  namespace: System.Xaml\n  summary: Gets a value that indicates whether this <xref href=\"System.Xaml.XamlType\"></xref> represents a public type in the relevant type system.\n  remarks: \"If you do not use the default internal CLR reflection technique for a <xref:System.Xaml.XamlType>, calls to this property can invoke <xref:System.Xaml.XamlType.LookupIsPublic%2A> overrides on <xref:System.Xaml.XamlType> derived classes.  \\n  \\n> [!IMPORTANT]\\n>  <xref:System.Xaml.XamlType.LookupIsPublic%2A> is virtual, and therefore, can be overridden. The override has the potential (whether for malicious purposes or otherwise) to change the reported access information about a XAML type so that it no longer aligns in an expected way with the type system and access information of its underlying CLR type. For any security-critical checks of assignment operations and access, use the underlying CLR type instead.\"\n  syntax:\n    content: public bool IsPublic { get; }\n    return:\n      type: System.Boolean\n      description: '`true` if this <xref href=\"System.Xaml.XamlType\"></xref> represents a public type; otherwise, `false`.'\n  overload: System.Xaml.XamlType.IsPublic*\n  exceptions: []\n  version:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Xaml/XamlType.xml\n  ms.technology:\n  - dotnet-wpf\n  manager: martinek\n- uid: System.Xaml.XamlType.IsUnknown\n  commentId: P:System.Xaml.XamlType.IsUnknown\n  id: IsUnknown\n  parent: System.Xaml.XamlType\n  langs:\n  - csharp\n  name: IsUnknown\n  nameWithType: XamlType.IsUnknown\n  fullName: XamlType.IsUnknown\n  type: Property\n  assemblies:\n  - System.Xaml\n  namespace: System.Xaml\n  summary: Gets a value that indicates whether this <xref href=\"System.Xaml.XamlType\"></xref> represents a type that cannot be resolved in the underlying type system.\n  remarks: \"If you do not use the default internal CLR reflection technique for a <xref:System.Xaml.XamlType>, calls to this property can invoke <xref:System.Xaml.XamlType.LookupIsUnknown%2A> overrides on <xref:System.Xaml.XamlType>derived classes.  \\n  \\n For a load path that involves <xref:System.Xaml.XamlObjectWriter>, a <xref:System.Xaml.XamlType> that has `true` for <xref:System.Xaml.XamlType.IsUnknown%2A> cannot be written into an object graph. Under the default implementations in <xref:System.Xaml> , the <xref:System.Xaml.XamlObjectWriter.WriteStartObject%2A?displayProperty=fullName> call throws a <xref:System.Xaml.XamlObjectWriterException> when the relevant <xref:System.Xaml.XamlType> reports `true` for <xref:System.Xaml.XamlType.IsUnknown%2A>. You should not pass a <xref:System.Xaml.XamlType> that has <xref:System.Xaml.XamlType.IsUnknown%2A> as `true` unless you are prepared to handle the exceptions from <xref:System.Xaml.XamlObjectWriter>, or you have other ways to adjust the <xref:System.Xaml.XamlObjectWriter> behavior or the XAML node stream prior to writing the object graph.\"\n  syntax:\n    content: public bool IsUnknown { get; }\n    return:\n      type: System.Boolean\n      description: '`true` if this <xref href=\"System.Xaml.XamlType\"></xref> represents an unresolvable type; otherwise, `false`.'\n  overload: System.Xaml.XamlType.IsUnknown*\n  exceptions: []\n  version:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Xaml/XamlType.xml\n  ms.technology:\n  - dotnet-wpf\n  manager: martinek\n- uid: System.Xaml.XamlType.IsUsableDuringInitialization\n  commentId: P:System.Xaml.XamlType.IsUsableDuringInitialization\n  id: IsUsableDuringInitialization\n  parent: System.Xaml.XamlType\n  langs:\n  - csharp\n  name: IsUsableDuringInitialization\n  nameWithType: XamlType.IsUsableDuringInitialization\n  fullName: XamlType.IsUsableDuringInitialization\n  type: Property\n  assemblies:\n  - System.Xaml\n  namespace: System.Xaml\n  summary: Gets a value that indicates whether this <xref href=\"System.Xaml.XamlType\"></xref> is built top-down during XAML initialization.\n  remarks: \"Top-down is a metaphor that approximates XAML processor behavior when creating the object graph. When built top-down, a type is instantiated, attached to the parent, and then has its properties set. Top-down construction avoids invoking property-changed handlers multiple times. Such handling ripples up the object graph and therefore, eliminates the multiple handler calls and provides a performance optimization for startup of the object graph.  \\n  \\n If you do not use the default internal CLR reflection technique for a <xref:System.Xaml.XamlType>, calls to this property can invoke <xref:System.Xaml.XamlType.LookupUsableDuringInitialization%2A> overrides on <xref:System.Xaml.XamlType> derived classes. For more information about return values and other behavior, see the documentation for <xref:System.Xaml.XamlType.LookupUsableDuringInitialization%2A> on this type.\"\n  syntax:\n    content: public bool IsUsableDuringInitialization { get; }\n    return:\n      type: System.Boolean\n      description: '`true` if this <xref href=\"System.Xaml.XamlType\"></xref> is built top-down during XAML initialization; otherwise, `false`. The default is `false`.'\n  overload: System.Xaml.XamlType.IsUsableDuringInitialization*\n  exceptions: []\n  version:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Xaml/XamlType.xml\n  ms.technology:\n  - dotnet-wpf\n  manager: martinek\n- uid: System.Xaml.XamlType.IsWhitespaceSignificantCollection\n  commentId: P:System.Xaml.XamlType.IsWhitespaceSignificantCollection\n  id: IsWhitespaceSignificantCollection\n  parent: System.Xaml.XamlType\n  langs:\n  - csharp\n  name: IsWhitespaceSignificantCollection\n  nameWithType: XamlType.IsWhitespaceSignificantCollection\n  fullName: XamlType.IsWhitespaceSignificantCollection\n  type: Property\n  assemblies:\n  - System.Xaml\n  namespace: System.Xaml\n  summary: Gets a value that indicates whether this <xref href=\"System.Xaml.XamlType\"></xref> represents a whitespace significant collection, as per the XML definition.\n  remarks: If you do not use the default internal CLR reflection technique for a <xref:System.Xaml.XamlType>, calls to this property can invoke <xref:System.Xaml.XamlType.LookupIsWhitespaceSignificantCollection%2A> overrides on <xref:System.Xaml.XamlType> derived classes. For more information about return values and other behavior, see the documentation for <xref:System.Xaml.XamlType.LookupIsWhitespaceSignificantCollection%2A> on this type.\n  syntax:\n    content: public bool IsWhitespaceSignificantCollection { get; }\n    return:\n      type: System.Boolean\n      description: '`true` if this <xref href=\"System.Xaml.XamlType\"></xref> represents a whitespace significant collection; otherwise, `false`.'\n  overload: System.Xaml.XamlType.IsWhitespaceSignificantCollection*\n  exceptions: []\n  version:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Xaml/XamlType.xml\n  ms.technology:\n  - dotnet-wpf\n  manager: martinek\n- uid: System.Xaml.XamlType.IsXData\n  commentId: P:System.Xaml.XamlType.IsXData\n  id: IsXData\n  parent: System.Xaml.XamlType\n  langs:\n  - csharp\n  name: IsXData\n  nameWithType: XamlType.IsXData\n  fullName: XamlType.IsXData\n  type: Property\n  assemblies:\n  - System.Xaml\n  namespace: System.Xaml\n  summary: Gets a value that indicates whether this <xref href=\"System.Xaml.XamlType\"></xref> represents XML `XDATA`, as per the XAML definition.\n  remarks: \"This property aligns to the `[is xdata]` information item in the [MS-XAML] specification.  \\n  \\n If you do not use the default internal CLR reflection technique for a <xref:System.Xaml.XamlType>, calls to this property can invoke <xref:System.Xaml.XamlType.LookupIsXData%2A> overrides on <xref:System.Xaml.XamlType> derived classes. For more information about return values and other behavior, see the documentation for <xref:System.Xaml.XamlType.LookupIsXData%2A> on this type.\"\n  syntax:\n    content: public bool IsXData { get; }\n    return:\n      type: System.Boolean\n      description: '`true` if this <xref href=\"System.Xaml.XamlType\"></xref> represents `XDATA`; otherwise, `false`.'\n  overload: System.Xaml.XamlType.IsXData*\n  exceptions: []\n  version:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Xaml/XamlType.xml\n  ms.technology:\n  - dotnet-wpf\n  manager: martinek\n- uid: System.Xaml.XamlType.ItemType\n  commentId: P:System.Xaml.XamlType.ItemType\n  id: ItemType\n  parent: System.Xaml.XamlType\n  langs:\n  - csharp\n  name: ItemType\n  nameWithType: XamlType.ItemType\n  fullName: XamlType.ItemType\n  type: Property\n  assemblies:\n  - System.Xaml\n  namespace: System.Xaml\n  summary: Gets a value that provides the type information for the `Items` property of this <xref href=\"System.Xaml.XamlType\"></xref>.\n  remarks: \"This property is only relevant if this <xref:System.Xaml.XamlType> represents a collection (<xref:System.Xaml.XamlType.IsCollection%2A> is `true`). The `Items` property is whatever property holds items in that type of collection or array.  \\n  \\n If you do not use the default internal CLR reflection technique for a <xref:System.Xaml.XamlType>, calls to this property can invoke <xref:System.Xaml.XamlType.LookupItemType%2A> overrides on <xref:System.Xaml.XamlType> derived classes. For more information about return values and other behavior, see the documentation for <xref:System.Xaml.XamlType.LookupItemType%2A> on this type.\"\n  syntax:\n    content: public System.Xaml.XamlType ItemType { get; }\n    return:\n      type: System.Xaml.XamlType\n      description: A <xref href=\"System.Xaml.XamlType\"></xref> object for the type of the items in the collection; otherwise, `null`, if this <xref href=\"System.Xaml.XamlType\"></xref> does not represent a collection.\n  overload: System.Xaml.XamlType.ItemType*\n  exceptions: []\n  version:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Xaml/XamlType.xml\n  ms.technology:\n  - dotnet-wpf\n  manager: martinek\n- uid: System.Xaml.XamlType.KeyType\n  commentId: P:System.Xaml.XamlType.KeyType\n  id: KeyType\n  parent: System.Xaml.XamlType\n  langs:\n  - csharp\n  name: KeyType\n  nameWithType: XamlType.KeyType\n  fullName: XamlType.KeyType\n  type: Property\n  assemblies:\n  - System.Xaml\n  namespace: System.Xaml\n  summary: Gets a value that provides the type information for the key property of this <xref href=\"System.Xaml.XamlType\"></xref>, if the <xref href=\"System.Xaml.XamlType\"></xref> represents a dictionary.\n  remarks: \"This property is only relevant if this <xref:System.Xaml.XamlType> represents a dictionary (<xref:System.Xaml.XamlType.IsDictionary%2A> is `true`).  \\n  \\n If you do not use the default internal CLR reflection technique for a <xref:System.Xaml.XamlType>, calls to this property can invoke <xref:System.Xaml.XamlType.LookupKeyType%2A> overrides on <xref:System.Xaml.XamlType> derived classes. For more information about return values and other behavior, see the documentation for <xref:System.Xaml.XamlType.LookupKeyType%2A> on this type.\"\n  syntax:\n    content: public System.Xaml.XamlType KeyType { get; }\n    return:\n      type: System.Xaml.XamlType\n      description: A <xref href=\"System.Xaml.XamlType\"></xref> object for the type of the key for dictionary usage, otherwise, `null`, if this <xref href=\"System.Xaml.XamlType\"></xref> does not represent a dictionary.\n  overload: System.Xaml.XamlType.KeyType*\n  exceptions: []\n  version:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Xaml/XamlType.xml\n  ms.technology:\n  - dotnet-wpf\n  manager: martinek\n- uid: System.Xaml.XamlType.LookupAliasedProperty(System.Xaml.XamlDirective)\n  commentId: M:System.Xaml.XamlType.LookupAliasedProperty(System.Xaml.XamlDirective)\n  id: LookupAliasedProperty(System.Xaml.XamlDirective)\n  parent: System.Xaml.XamlType\n  langs:\n  - csharp\n  name: LookupAliasedProperty(XamlDirective)\n  nameWithType: XamlType.LookupAliasedProperty(XamlDirective)\n  fullName: XamlType.LookupAliasedProperty(XamlDirective)\n  type: Method\n  assemblies:\n  - System.Xaml\n  namespace: System.Xaml\n  summary: Returns the XAML member that is aliased to a XAML directive by this <xref href=\"System.Xaml.XamlType\"></xref>.\n  remarks: \"This method can be invoked when a caller gets a value from <xref:System.Xaml.XamlType.GetAliasedProperty%2A>.  \\n  \\n The default implementation can return results for the following XAML directives: `Key`; `Name`; `Uid`; and `xml:lang`. Values for these depend on underlying reflection and might still return `null` if no aliased property is found.  \\n  \\n Override this method if you are not relying on default internal CLR reflection and are using metadata or other techniques for reporting the XAML type system information or the schema information of a type.\"\n  syntax:\n    content: protected virtual System.Xaml.XamlMember LookupAliasedProperty (System.Xaml.XamlDirective directive);\n    parameters:\n    - id: directive\n      type: System.Xaml.XamlDirective\n      description: The directive for which to find the aliased member.\n    return:\n      type: System.Xaml.XamlMember\n      description: The aliased member, if found; otherwise, `null`.\n  overload: System.Xaml.XamlType.LookupAliasedProperty*\n  exceptions: []\n  version:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Xaml/XamlType.xml\n  ms.technology:\n  - dotnet-wpf\n  manager: martinek\n- uid: System.Xaml.XamlType.LookupAllAttachableMembers\n  commentId: M:System.Xaml.XamlType.LookupAllAttachableMembers\n  id: LookupAllAttachableMembers\n  parent: System.Xaml.XamlType\n  langs:\n  - csharp\n  name: LookupAllAttachableMembers()\n  nameWithType: XamlType.LookupAllAttachableMembers()\n  fullName: XamlType.LookupAllAttachableMembers()\n  type: Method\n  assemblies:\n  - System.Xaml\n  namespace: System.Xaml\n  summary: Returns an enumerable set that contains all attachable properties that are exposed by this <xref href=\"System.Xaml.XamlType\"></xref>.\n  remarks: \"This method can be invoked when a caller gets a value from <xref:System.Xaml.XamlType.GetAllAttachableMembers%2A>.  \\n  \\n Although <xref:System.Xaml.XamlType.GetAllAttachableMembers%2A> returns a generic collection, this `Lookup` method returns a generic enumerable set.  \\n  \\n The default implementation uses the internal CLR reflection. When <xref:System.Xaml.XamlType.UnderlyingType%2A> is `null`, the default implementation can use <xref:System.Xaml.XamlType.BaseType%2A>, if it is available. This behavior calls <xref:System.Xaml.XamlType.LookupAllAttachableMembers%2A> recursively to attempt to find a valid base type and returns `null` if no valid base type exists.  \\n  \\n Override this method if you are not relying on default internal CLR reflection and are using metadata or other techniques for reporting the XAML type system information or schema information of a type. A null return should be reserved for cases where information cannot be determined because of lack of type system or reflection support. If a type is valid and reflection or other techniques are available, but a type does not have attachable members, you should instead return an empty <xref:System.Collections.Generic.IEnumerable%601> set.\"\n  syntax:\n    content: protected virtual System.Collections.Generic.IEnumerable<System.Xaml.XamlMember> LookupAllAttachableMembers ();\n    parameters: []\n    return:\n      type: System.Collections.Generic.IEnumerable{System.Xaml.XamlMember}\n      description: An enumerable set that contains zero or more <xref href=\"System.Xaml.XamlMember\"></xref> values; otherwise, `null`.\n  overload: System.Xaml.XamlType.LookupAllAttachableMembers*\n  exceptions: []\n  version:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Xaml/XamlType.xml\n  ms.technology:\n  - dotnet-wpf\n  manager: martinek\n- uid: System.Xaml.XamlType.LookupAllMembers\n  commentId: M:System.Xaml.XamlType.LookupAllMembers\n  id: LookupAllMembers\n  parent: System.Xaml.XamlType\n  langs:\n  - csharp\n  name: LookupAllMembers()\n  nameWithType: XamlType.LookupAllMembers()\n  fullName: XamlType.LookupAllMembers()\n  type: Method\n  assemblies:\n  - System.Xaml\n  namespace: System.Xaml\n  summary: Returns an enumerable set that contains all the members that are exposed by this <xref href=\"System.Xaml.XamlType\"></xref>.\n  remarks: \"This method can be invoked when a caller gets a value from <xref:System.Xaml.XamlType.GetAllMembers%2A>.  \\n  \\n Although <xref:System.Xaml.XamlType.GetAllMembers%2A> returns a generic collection, this `Lookup` method returns a generic enumerable set.  \\n  \\n The default implementation uses the internal CLR reflection. For cases where <xref:System.Xaml.XamlType.UnderlyingType%2A> is `null`, the default implementation can use <xref:System.Xaml.XamlType.BaseType%2A>, if it is available. This behavior calls <xref:System.Xaml.XamlType.LookupAllMembers%2A> recursively to attempt to find a valid base type, and returns `null` if no valid base type exists.  \\n  \\n Override this method if you are not relying on default internal CLR reflection and are using metadata or other techniques for reporting the XAML type system information or schema information of a type. A null return should be reserved for cases where information cannot be determined because of lack of type system or reflection support. If a type is valid, reflection or other techniques are available; if a type does not have members, you should instead return an empty <xref:System.Collections.Generic.IEnumerable%601> set.  \\n  \\n Return values for <xref:System.Xaml.XamlType.LookupAllMembers%2A> and <xref:System.Xaml.XamlType.LookupAllAttachableMembers%2A> should be mutually exclusive. If you have a situation where a backing type system property can support a standard instance usage as well as an attachable usage, that member should be reported as two different <xref:System.Xaml.XamlMember> values, with one value appearing in the attachable list and another in the standard members list.\"\n  syntax:\n    content: protected virtual System.Collections.Generic.IEnumerable<System.Xaml.XamlMember> LookupAllMembers ();\n    parameters: []\n    return:\n      type: System.Collections.Generic.IEnumerable{System.Xaml.XamlMember}\n      description: An enumerable set that contains zero or more <xref href=\"System.Xaml.XamlMember\"></xref> values.\n  overload: System.Xaml.XamlType.LookupAllMembers*\n  exceptions: []\n  version:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Xaml/XamlType.xml\n  ms.technology:\n  - dotnet-wpf\n  manager: martinek\n- uid: System.Xaml.XamlType.LookupAllowedContentTypes\n  commentId: M:System.Xaml.XamlType.LookupAllowedContentTypes\n  id: LookupAllowedContentTypes\n  parent: System.Xaml.XamlType\n  langs:\n  - csharp\n  name: LookupAllowedContentTypes()\n  nameWithType: XamlType.LookupAllowedContentTypes()\n  fullName: XamlType.LookupAllowedContentTypes()\n  type: Method\n  assemblies:\n  - System.Xaml\n  namespace: System.Xaml\n  summary: Returns a list of the types that are usable as the <xref href=\"System.Xaml.XamlType.ContentProperty\"></xref> value for this <xref href=\"System.Xaml.XamlType\"></xref>.\n  remarks: \"This method can be invoked when a caller gets a value from <xref:System.Xaml.XamlType.AllowedContentTypes%2A>.  \\n  \\n Types that evaluate as <xref:System.Xaml.XamlType.CanAssignTo%2A> for a specific content type are not considered multiple types for purposes of <xref:System.Xaml.XamlType.AllowedContentTypes%2A>.  \\n  \\n The default implementation can use other properties of <xref:System.Xaml.XamlType> (<xref:System.Xaml.XamlType.ContentWrappers%2A>, <xref:System.Xaml.XamlType.ContentProperty%2A>, or <xref:System.Xaml.XamlType.ItemType%2A>) to obtain a result. The `Lookup` overrides for the preceding property list can also be invoked in this determination.  \\n  \\n Override this method if you are not relying on default internal CLR reflection and are using metadata or other techniques for reporting the XAML type system information or schema information of a type.\"\n  syntax:\n    content: protected virtual System.Collections.Generic.IList<System.Xaml.XamlType> LookupAllowedContentTypes ();\n    parameters: []\n    return:\n      type: System.Collections.Generic.IList{System.Xaml.XamlType}\n      description: A list of possible content types.\n  overload: System.Xaml.XamlType.LookupAllowedContentTypes*\n  exceptions: []\n  version:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Xaml/XamlType.xml\n  ms.technology:\n  - dotnet-wpf\n  manager: martinek\n- uid: System.Xaml.XamlType.LookupAttachableMember(System.String)\n  commentId: M:System.Xaml.XamlType.LookupAttachableMember(System.String)\n  id: LookupAttachableMember(System.String)\n  parent: System.Xaml.XamlType\n  langs:\n  - csharp\n  name: LookupAttachableMember(String)\n  nameWithType: XamlType.LookupAttachableMember(String)\n  fullName: XamlType.LookupAttachableMember(String)\n  type: Method\n  assemblies:\n  - System.Xaml\n  namespace: System.Xaml\n  summary: Returns a <xref href=\"System.Xaml.XamlMember\"></xref> for a specific named attachable from this <xref href=\"System.Xaml.XamlType\"></xref>.\n  remarks: \"This method can be invoked when a caller gets a value from <xref:System.Xaml.XamlType.GetAttachableMember%2A>.  \\n  \\n The default implementation uses the internal CLR reflection. When <xref:System.Xaml.XamlType.UnderlyingType%2A> is `null`, the default implementation can use <xref:System.Xaml.XamlType.BaseType%2A>, if it is available. This behavior calls <xref:System.Xaml.XamlType.LookupAttachableMember%2A> recursively to attempt to find a valid base type and returns `null` if no valid base type exists.  \\n  \\n Override this method if you are not relying on default internal CLR reflection and are using metadata or other techniques for reporting the XAML type system information or schema information of a type.  \\n  \\n> [!IMPORTANT]\\n>  <xref:System.Xaml.XamlType.LookupAttachableMember%2A> is virtual, and therefore, can be overridden. The override has the potential (whether for malicious purposes or otherwise) to change the reported members of a XAML type so that they no longer align in an expected way with the <xref:System.ComponentModel.TypeDescriptor> `Get*` information about the underlying CLR type. For any security-critical checks of member reporting, use the underlying CLR type instead.\"\n  syntax:\n    content: protected virtual System.Xaml.XamlMember LookupAttachableMember (string name);\n    parameters:\n    - id: name\n      type: System.String\n      description: The name of the attachable member to get, in <code>ownerTypeName.MemberName</code> form.\n    return:\n      type: System.Xaml.XamlMember\n      description: A <xref href=\"System.Xaml.XamlMember\"></xref> object for the requested attachable member; otherwise, `null`, if no attachable member by that name exists.\n  overload: System.Xaml.XamlType.LookupAttachableMember*\n  exceptions: []\n  version:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Xaml/XamlType.xml\n  ms.technology:\n  - dotnet-wpf\n  manager: martinek\n- uid: System.Xaml.XamlType.LookupBaseType\n  commentId: M:System.Xaml.XamlType.LookupBaseType\n  id: LookupBaseType\n  parent: System.Xaml.XamlType\n  langs:\n  - csharp\n  name: LookupBaseType()\n  nameWithType: XamlType.LookupBaseType()\n  fullName: XamlType.LookupBaseType()\n  type: Method\n  assemblies:\n  - System.Xaml\n  namespace: System.Xaml\n  summary: Returns the <xref href=\"System.Xaml.XamlType\"></xref> for the immediate base type of this XAML type. Determination of this value is based on the underlying type of this <xref href=\"System.Xaml.XamlType\"></xref> and schema context.\n  remarks: \"This method can be invoked when a caller gets a value from <xref:System.Xaml.XamlType.BaseType%2A>.  \\n  \\n The default implementation might return an internal constant that represents the <xref:System.Object> if <xref:System.Xaml.XamlType.UnderlyingType%2A> is `null`.  \\n  \\n Override this method if you are not relying on default internal CLR reflection and are using metadata or other techniques for reporting the XAML type system information or schema information of a type.  \\n  \\n> [!IMPORTANT]\\n>  <xref:System.Xaml.XamlType.LookupBaseType%2A> is virtual, and therefore, can be overridden. The override has the potential (whether for malicious purposes or otherwise) to change the reported type information about a XAML type so that it no longer aligns in an expected way with the type system information of its underlying CLR type. For any security-critical checks of assignment operations and access, use the underlying CLR type instead.\"\n  syntax:\n    content: protected virtual System.Xaml.XamlType LookupBaseType ();\n    parameters: []\n    return:\n      type: System.Xaml.XamlType\n      description: The <xref href=\"System.Xaml.XamlType\"></xref> for the immediate base type of this XAML type.\n  overload: System.Xaml.XamlType.LookupBaseType*\n  exceptions: []\n  version:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Xaml/XamlType.xml\n  ms.technology:\n  - dotnet-wpf\n  manager: martinek\n- uid: System.Xaml.XamlType.LookupCollectionKind\n  commentId: M:System.Xaml.XamlType.LookupCollectionKind\n  id: LookupCollectionKind\n  parent: System.Xaml.XamlType\n  langs:\n  - csharp\n  name: LookupCollectionKind()\n  nameWithType: XamlType.LookupCollectionKind()\n  fullName: XamlType.LookupCollectionKind()\n  type: Method\n  assemblies:\n  - System.Xaml\n  namespace: System.Xaml\n  summary: Returns a value of the <xref href=\"System.Xaml.Schema.XamlCollectionKind\"></xref> enumeration that declares which specific collection type this <xref href=\"System.Xaml.XamlType\"></xref> uses.\n  remarks: \"This method is invoked by an internal private method (no public `CollectionKind` or `GetCollectionKind` API exists on <xref:System.Xaml.XamlType>).  \\n  \\n The default implementation uses the internal CLR reflection. For cases where <xref:System.Xaml.XamlType.UnderlyingType%2A> is `null`, the default implementation can use <xref:System.Xaml.XamlType.BaseType%2A>, if it is available. This behavior indirectly calls <xref:System.Xaml.XamlType.LookupCollectionKind%2A> recursively to attempt to find a valid base type; it returns <xref:System.Xaml.Schema.XamlCollectionKind?displayProperty=fullName> if no valid base type exists. In general, the default implementation attempts to find the `Add` method of the underlying type by reflection. If found, the <xref:System.Reflection.MethodInfo> of the `Add` method is enough information to determine which <xref:System.Xaml.Schema.XamlCollectionKind> value should be returned. Otherwise, it returns <xref:System.Xaml.Schema.XamlCollectionKind?displayProperty=fullName>.  \\n  \\n Override this method if you are not relying on default internal CLR reflection and are using metadata or other techniques for reporting the XAML type system information or schema information of a type.\"\n  syntax:\n    content: protected virtual System.Xaml.Schema.XamlCollectionKind LookupCollectionKind ();\n    parameters: []\n    return:\n      type: System.Xaml.Schema.XamlCollectionKind\n      description: A value of the <xref href=\"System.Xaml.Schema.XamlCollectionKind\"></xref> enumeration.\n  overload: System.Xaml.XamlType.LookupCollectionKind*\n  exceptions: []\n  version:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Xaml/XamlType.xml\n  ms.technology:\n  - dotnet-wpf\n  manager: martinek\n- uid: System.Xaml.XamlType.LookupConstructionRequiresArguments\n  commentId: M:System.Xaml.XamlType.LookupConstructionRequiresArguments\n  id: LookupConstructionRequiresArguments\n  parent: System.Xaml.XamlType\n  langs:\n  - csharp\n  name: LookupConstructionRequiresArguments()\n  nameWithType: XamlType.LookupConstructionRequiresArguments()\n  fullName: XamlType.LookupConstructionRequiresArguments()\n  type: Method\n  assemblies:\n  - System.Xaml\n  namespace: System.Xaml\n  summary: Returns a value that indicates whether this <xref href=\"System.Xaml.XamlType\"></xref> must have arguments (generic constraints through `x:TypeArguments`, initialization text, or other XAML techniques) to construct a valid instance of the type.\n  remarks: \"This method can be invoked when a caller gets a value from <xref:System.Xaml.XamlType.ConstructionRequiresArguments%2A>.  \\n  \\n The default implementation returns `false` for types considered value types in the CLR type system. For other than value types, CLR reflection <xref:System.Reflection.ConstructorInfo> is used to determine whether a default constructor exists.  \\n  \\n Override this method if you are not relying on default internal CLR reflection and are using metadata or other techniques for reporting the XAML type system information or schema information of a type.\"\n  syntax:\n    content: protected virtual bool LookupConstructionRequiresArguments ();\n    parameters: []\n    return:\n      type: System.Boolean\n      description: '`true` if construction of an instance requires some argument value; otherwise, false.'\n  overload: System.Xaml.XamlType.LookupConstructionRequiresArguments*\n  exceptions: []\n  version:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Xaml/XamlType.xml\n  ms.technology:\n  - dotnet-wpf\n  manager: martinek\n- uid: System.Xaml.XamlType.LookupContentProperty\n  commentId: M:System.Xaml.XamlType.LookupContentProperty\n  id: LookupContentProperty\n  parent: System.Xaml.XamlType\n  langs:\n  - csharp\n  name: LookupContentProperty()\n  nameWithType: XamlType.LookupContentProperty()\n  fullName: XamlType.LookupContentProperty()\n  type: Method\n  assemblies:\n  - System.Xaml\n  namespace: System.Xaml\n  summary: Returns <xref href=\"System.Xaml.XamlMember\"></xref> information for the content property of this <xref href=\"System.Xaml.XamlType\"></xref>.\n  remarks: \"This method can be invoked when a caller gets a value from <xref:System.Xaml.XamlType.ContentProperty%2A>.  \\n  \\n The default implementation checks for <xref:System.Windows.Markup.ContentPropertyAttribute> on the type definition. It can also check <xref:System.Xaml.XamlType.BaseType%2A> for the attribute if no attribute is found on the immediate underlying type. If these checks do not discover a content type, the default implementation returns `null`.  \\n  \\n Override this method if you are not relying on default internal CLR reflection and are using metadata or other techniques for reporting the XAML type system information or schema information of a type.\"\n  syntax:\n    content: protected virtual System.Xaml.XamlMember LookupContentProperty ();\n    parameters: []\n    return:\n      type: System.Xaml.XamlMember\n      description: <xref href=\"System.Xaml.XamlMember\"></xref> information for the content property of this <xref href=\"System.Xaml.XamlType\"></xref>. May be `null`.\n  overload: System.Xaml.XamlType.LookupContentProperty*\n  exceptions: []\n  version:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Xaml/XamlType.xml\n  ms.technology:\n  - dotnet-wpf\n  manager: martinek\n- uid: System.Xaml.XamlType.LookupContentWrappers\n  commentId: M:System.Xaml.XamlType.LookupContentWrappers\n  id: LookupContentWrappers\n  parent: System.Xaml.XamlType\n  langs:\n  - csharp\n  name: LookupContentWrappers()\n  nameWithType: XamlType.LookupContentWrappers()\n  fullName: XamlType.LookupContentWrappers()\n  type: Method\n  assemblies:\n  - System.Xaml\n  namespace: System.Xaml\n  summary: Gets a list of <xref href=\"System.Xaml.XamlType\"></xref> values that represent the content wrappers for this <xref href=\"System.Xaml.XamlType\"></xref>.\n  remarks: \"A content wrapper is a class that represents the content collection type when the types that are used in that collection are not contiguous to the type system. The types of collection items for the content wrapper are expected to be limited in some manner beyond <xref:System.Object> or a neutral object equivalent. However, this limitation is only enforced by the design or purpose of the properties that use that type, and not by the type system. More than one content wrapper can exist on a type.  \\n  \\n For an example class and scenario from the WPF XAML implementation, see <xref:System.Windows.Documents.InlineCollection>.\"\n  syntax:\n    content: protected virtual System.Collections.Generic.IList<System.Xaml.XamlType> LookupContentWrappers ();\n    parameters: []\n    return:\n      type: System.Collections.Generic.IList{System.Xaml.XamlType}\n      description: A list of <xref href=\"System.Xaml.XamlType\"></xref> values that represent the content wrappers for this <xref href=\"System.Xaml.XamlType\"></xref>.\n  overload: System.Xaml.XamlType.LookupContentWrappers*\n  exceptions: []\n  version:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Xaml/XamlType.xml\n  ms.technology:\n  - dotnet-wpf\n  manager: martinek\n- uid: System.Xaml.XamlType.LookupCustomAttributeProvider\n  commentId: M:System.Xaml.XamlType.LookupCustomAttributeProvider\n  id: LookupCustomAttributeProvider\n  parent: System.Xaml.XamlType\n  langs:\n  - csharp\n  name: LookupCustomAttributeProvider()\n  nameWithType: XamlType.LookupCustomAttributeProvider()\n  fullName: XamlType.LookupCustomAttributeProvider()\n  type: Method\n  assemblies:\n  - System.Xaml\n  namespace: System.Xaml\n  summary: When implemented in a derived class, returns an <xref href=\"System.Reflection.ICustomAttributeProvider\"></xref> implementation.\n  remarks: \"Override this method to provide the internal reflection with an alternative way to obtain CLR attribute values. In absence of an override, the internal reflector uses typical CLR reflection logic.  \\n  \\n The default implementation returns `null`.\"\n  syntax:\n    content: protected virtual System.Reflection.ICustomAttributeProvider LookupCustomAttributeProvider ();\n    parameters: []\n    return:\n      type: System.Reflection.ICustomAttributeProvider\n      description: An <xref href=\"System.Reflection.ICustomAttributeProvider\"></xref> implementation.\n  overload: System.Xaml.XamlType.LookupCustomAttributeProvider*\n  exceptions: []\n  version:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Xaml/XamlType.xml\n  ms.technology:\n  - dotnet-wpf\n  manager: martinek\n- uid: System.Xaml.XamlType.LookupDeferringLoader\n  commentId: M:System.Xaml.XamlType.LookupDeferringLoader\n  id: LookupDeferringLoader\n  parent: System.Xaml.XamlType\n  langs:\n  - csharp\n  name: LookupDeferringLoader()\n  nameWithType: XamlType.LookupDeferringLoader()\n  fullName: XamlType.LookupDeferringLoader()\n  type: Method\n  assemblies:\n  - System.Xaml\n  namespace: System.Xaml\n  summary: Returns a <xref href=\"System.Xaml.Schema.XamlValueConverter`1\"></xref> object, which is used for deferred loading of XAML-declared objects.\n  remarks: \"This method can be invoked when a caller gets a value from <xref:System.Xaml.XamlType.DeferringLoader%2A>. Override this method if you want <xref:System.Xaml.XamlType.DeferringLoader%2A> to return a different value than is enabled by default internal reflection and are also providing custom <xref:System.Xaml.Schema.XamlTypeInvoker> information.  \\n  \\n The default implementation returns an object on the basis of reading <xref:System.Windows.Markup.XamlDeferLoadAttribute>. It can also  check <xref:System.Xaml.XamlType.BaseType%2A> for the attribute if no attribute is found on the immediate underlying type. If a value is unavailable, this method returns `null`.\"\n  syntax:\n    content: protected virtual System.Xaml.Schema.XamlValueConverter<System.Xaml.XamlDeferringLoader> LookupDeferringLoader ();\n    parameters: []\n    return:\n      type: System.Xaml.Schema.XamlValueConverter{System.Xaml.XamlDeferringLoader}\n      description: A <xref href=\"System.Xaml.Schema.XamlValueConverter`1\"></xref> that has a <xref href=\"System.Xaml.XamlDeferringLoader\"></xref> constraint on the generic.\n  overload: System.Xaml.XamlType.LookupDeferringLoader*\n  exceptions: []\n  version:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Xaml/XamlType.xml\n  ms.technology:\n  - dotnet-wpf\n  manager: martinek\n- uid: System.Xaml.XamlType.LookupInvoker\n  commentId: M:System.Xaml.XamlType.LookupInvoker\n  id: LookupInvoker\n  parent: System.Xaml.XamlType\n  langs:\n  - csharp\n  name: LookupInvoker()\n  nameWithType: XamlType.LookupInvoker()\n  fullName: XamlType.LookupInvoker()\n  type: Method\n  assemblies:\n  - System.Xaml\n  namespace: System.Xaml\n  summary: Returns a <xref href=\"System.Xaml.Schema.XamlTypeInvoker\"></xref> that is associated with this <xref href=\"System.Xaml.XamlType\"></xref>.\n  remarks: \"This method can be invoked by calls to <xref:System.Xaml.XamlType.Invoker%2A>.  \\n  \\n The default implementation does not require that a <xref:System.Xaml.XamlType> be constructed by using one of the constructors that pass an initial <xref:System.Xaml.Schema.XamlTypeInvoker>. However, an <xref:System.Xaml.XamlType.UnderlyingType%2A> value must exist for the <xref:System.Xaml.XamlType>; otherwise, the default implementation returns `null`.  \\n  \\n Override this method if you also create a derived class from <xref:System.Xaml.Schema.XamlTypeInvoker> and intend to return the derived class. If you return `null`, <xref:System.Xaml.XamlType.Invoker%2A> returns <xref:System.Xaml.Schema.XamlTypeInvoker.UnknownInvoker%2A?displayProperty=fullName> to callers.\"\n  syntax:\n    content: protected virtual System.Xaml.Schema.XamlTypeInvoker LookupInvoker ();\n    parameters: []\n    return:\n      type: System.Xaml.Schema.XamlTypeInvoker\n      description: The <xref href=\"System.Xaml.Schema.XamlTypeInvoker\"></xref> information for this <xref href=\"System.Xaml.XamlType\"></xref>; otherwise, `null`.\n  overload: System.Xaml.XamlType.LookupInvoker*\n  exceptions: []\n  version:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Xaml/XamlType.xml\n  ms.technology:\n  - dotnet-wpf\n  manager: martinek\n- uid: System.Xaml.XamlType.LookupIsAmbient\n  commentId: M:System.Xaml.XamlType.LookupIsAmbient\n  id: LookupIsAmbient\n  parent: System.Xaml.XamlType\n  langs:\n  - csharp\n  name: LookupIsAmbient()\n  nameWithType: XamlType.LookupIsAmbient()\n  fullName: XamlType.LookupIsAmbient()\n  type: Method\n  assemblies:\n  - System.Xaml\n  namespace: System.Xaml\n  summary: Returns a value that indicates whether this <xref href=\"System.Xaml.XamlType\"></xref> represents an ambient type, as per the XAML definition.\n  remarks: \"This method can be invoked by calls to <xref:System.Xaml.XamlType.IsAmbient%2A>.  \\n  \\n The default implementation uses CLR reflection on the <xref:System.Xaml.XamlType.UnderlyingType%2A> and can check the base types. This implementation checks for the <xref:System.Windows.Markup.AmbientAttribute> that is applied to the relevant type's definition at the class level and returns `true` in this case. All other cases return `false`.  \\n  \\n Override this method if you want <xref:System.Xaml.XamlType.IsAmbient%2A> to return a different value than is enabled by default internal reflection.\"\n  syntax:\n    content: protected virtual bool LookupIsAmbient ();\n    parameters: []\n    return:\n      type: System.Boolean\n      description: '`true` if this <xref href=\"System.Xaml.XamlType\"></xref> represents an ambient type; otherwise, `false`.'\n  overload: System.Xaml.XamlType.LookupIsAmbient*\n  exceptions: []\n  version:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Xaml/XamlType.xml\n  ms.technology:\n  - dotnet-wpf\n  manager: martinek\n- uid: System.Xaml.XamlType.LookupIsConstructible\n  commentId: M:System.Xaml.XamlType.LookupIsConstructible\n  id: LookupIsConstructible\n  parent: System.Xaml.XamlType\n  langs:\n  - csharp\n  name: LookupIsConstructible()\n  nameWithType: XamlType.LookupIsConstructible()\n  fullName: XamlType.LookupIsConstructible()\n  type: Method\n  assemblies:\n  - System.Xaml\n  namespace: System.Xaml\n  summary: Returns a value that indicates whether this <xref href=\"System.Xaml.XamlType\"></xref> represents a constructible type, as per the XAML definition.\n  remarks: \"This method can be invoked by calls to <xref:System.Xaml.XamlType.IsConstructible%2A>.  \\n  \\n The default implementation uses CLR reflection on the <xref:System.Xaml.XamlType.UnderlyingType%2A>. The type must be concrete, non-nested, and closed. The default implementation checks whether the type is a value type and the return of <xref:System.Xaml.XamlType.ConstructionRequiresArguments%2A>. For a null <xref:System.Xaml.XamlType.UnderlyingType%2A>, this method returns `true`.  \\n  \\n Override this method if you want <xref:System.Xaml.XamlType.IsConstructible%2A> to return a different value than is enabled by default internal reflection.\"\n  syntax:\n    content: protected virtual bool LookupIsConstructible ();\n    parameters: []\n    return:\n      type: System.Boolean\n      description: '`true` if this <xref href=\"System.Xaml.XamlType\"></xref> represents a constructible type; otherwise, `false`.'\n  overload: System.Xaml.XamlType.LookupIsConstructible*\n  exceptions: []\n  version:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Xaml/XamlType.xml\n  ms.technology:\n  - dotnet-wpf\n  manager: martinek\n- uid: System.Xaml.XamlType.LookupIsMarkupExtension\n  commentId: M:System.Xaml.XamlType.LookupIsMarkupExtension\n  id: LookupIsMarkupExtension\n  parent: System.Xaml.XamlType\n  langs:\n  - csharp\n  name: LookupIsMarkupExtension()\n  nameWithType: XamlType.LookupIsMarkupExtension()\n  fullName: XamlType.LookupIsMarkupExtension()\n  type: Method\n  assemblies:\n  - System.Xaml\n  namespace: System.Xaml\n  summary: Returns a value that indicates whether this <xref href=\"System.Xaml.XamlType\"></xref> represents a markup extension.\n  remarks: \"This method can be invoked by calls to <xref:System.Xaml.XamlType.IsMarkupExtension%2A>.  \\n  \\n The default implementation consists only of this call:  \\n  \\n `return CanAssignTo(XamlLanguage.MarkupExtension);`  \\n  \\n Override this method if you want <xref:System.Xaml.XamlType.IsMarkupExtension%2A> to use different logic.  \\n  \\n In XAML specification terms, this type must be assignable to `x:MarkupExtension` in order to return `true` for <xref:System.Xaml.XamlType.IsMarkupExtension%2A>.\"\n  syntax:\n    content: protected virtual bool LookupIsMarkupExtension ();\n    parameters: []\n    return:\n      type: System.Boolean\n      description: '`true` if this <xref href=\"System.Xaml.XamlType\"></xref> represents a markup extension; otherwise, `false`.'\n  overload: System.Xaml.XamlType.LookupIsMarkupExtension*\n  exceptions: []\n  version:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Xaml/XamlType.xml\n  ms.technology:\n  - dotnet-wpf\n  manager: martinek\n- uid: System.Xaml.XamlType.LookupIsNameScope\n  commentId: M:System.Xaml.XamlType.LookupIsNameScope\n  id: LookupIsNameScope\n  parent: System.Xaml.XamlType\n  langs:\n  - csharp\n  name: LookupIsNameScope()\n  nameWithType: XamlType.LookupIsNameScope()\n  fullName: XamlType.LookupIsNameScope()\n  type: Method\n  assemblies:\n  - System.Xaml\n  namespace: System.Xaml\n  summary: Returns a value that indicates whether this <xref href=\"System.Xaml.XamlType\"></xref> represents a XAML namescope, as per the XAML definition.\n  remarks: \"This method can be invoked by calls to <xref:System.Xaml.XamlType.IsNameScope%2A>.  \\n  \\n The default implementation makes a <xref:System.Xaml.XamlType.CanAssignTo%2A> call indirectly against the type <xref:System.Windows.Markup.INameScope>. <xref:System.Windows.Markup.INameScope> is an interface that is defined in the assembly WindowsBase. This technique for XAML namescope identification is used both by WPF and [!INCLUDE[TLA#tla_workflow](~/includes/tlasharptla-workflow-md.md)] implementations of XAML.  \\n  \\n Override this method if you want <xref:System.Xaml.XamlType.IsNameScope%2A> to use different logic.  \\n  \\n A XAML namescope enforces the name uniqueness of the property or properties that are used for `x:Name` / `[name property]`. If <xref:System.Xaml.XamlType.IsNameScope%2A> is `true`, then some mechanism for enforcing uniqueness should exist and should evaluate from the perspective of this type owning a XAML namescope. The XAML namescope then extends to the content of the type until another XAML namescope owning type is encountered.\"\n  syntax:\n    content: protected virtual bool LookupIsNameScope ();\n    parameters: []\n    return:\n      type: System.Boolean\n      description: '`true` if this <xref href=\"System.Xaml.XamlType\"></xref> represents a XAML namescope; otherwise, `false`.'\n  overload: System.Xaml.XamlType.LookupIsNameScope*\n  exceptions: []\n  version:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Xaml/XamlType.xml\n  ms.technology:\n  - dotnet-wpf\n  manager: martinek\n- uid: System.Xaml.XamlType.LookupIsNullable\n  commentId: M:System.Xaml.XamlType.LookupIsNullable\n  id: LookupIsNullable\n  parent: System.Xaml.XamlType\n  langs:\n  - csharp\n  name: LookupIsNullable()\n  nameWithType: XamlType.LookupIsNullable()\n  fullName: XamlType.LookupIsNullable()\n  type: Method\n  assemblies:\n  - System.Xaml\n  namespace: System.Xaml\n  summary: Returns a value that indicates whether this <xref href=\"System.Xaml.XamlType\"></xref> represents a nullable type, as per the XAML definition.\n  remarks: \"This method can be invoked by calls to <xref:System.Xaml.XamlType.IsNullable%2A>.  \\n  \\n The default implementation makes a determination based on the CLR core library nullable concept, checked against <xref:System.Xaml.XamlType.UnderlyingType%2A>. For a null <xref:System.Xaml.XamlType.UnderlyingType%2A>, it returns `true`.  \\n  \\n Override this method if you want <xref:System.Xaml.XamlType.IsNullable%2A> to use different logic.\"\n  syntax:\n    content: protected virtual bool LookupIsNullable ();\n    parameters: []\n    return:\n      type: System.Boolean\n      description: '`true` if this <xref href=\"System.Xaml.XamlType\"></xref> represents a nullable type; otherwise, `false`.'\n  overload: System.Xaml.XamlType.LookupIsNullable*\n  exceptions: []\n  version:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Xaml/XamlType.xml\n  ms.technology:\n  - dotnet-wpf\n  manager: martinek\n- uid: System.Xaml.XamlType.LookupIsPublic\n  commentId: M:System.Xaml.XamlType.LookupIsPublic\n  id: LookupIsPublic\n  parent: System.Xaml.XamlType\n  langs:\n  - csharp\n  name: LookupIsPublic()\n  nameWithType: XamlType.LookupIsPublic()\n  fullName: XamlType.LookupIsPublic()\n  type: Method\n  assemblies:\n  - System.Xaml\n  namespace: System.Xaml\n  summary: Returns a value that indicates whether this <xref href=\"System.Xaml.XamlType\"></xref> represents a public type in the relevant type system.\n  remarks: \"This method can be invoked by calls to <xref:System.Xaml.XamlType.IsPublic%2A>.  \\n  \\n The default implementation uses CLR reflection against a non-null <xref:System.Xaml.XamlType.UnderlyingType%2A>. For a null <xref:System.Xaml.XamlType.UnderlyingType%2A>, it returns `true`.  \\n  \\n Override this method if you want <xref:System.Xaml.XamlType.IsPublic%2A> to use different logic.  \\n  \\n> [!IMPORTANT]\\n>  <xref:System.Xaml.XamlType.LookupIsPublic%2A> is virtual, and therefore, can be overridden. The override has the potential (whether for malicious purposes or otherwise) to change the reported access information about a XAML type so that it no longer aligns in an expected way with the type system or access information of its underlying CLR type. For any security-critical checks of assignment operations and access, use the underlying CLR type instead.\"\n  syntax:\n    content: protected virtual bool LookupIsPublic ();\n    parameters: []\n    return:\n      type: System.Boolean\n      description: '`true` if this <xref href=\"System.Xaml.XamlType\"></xref> represents a public type; otherwise, `false`.'\n  overload: System.Xaml.XamlType.LookupIsPublic*\n  exceptions: []\n  version:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Xaml/XamlType.xml\n  ms.technology:\n  - dotnet-wpf\n  manager: martinek\n- uid: System.Xaml.XamlType.LookupIsUnknown\n  commentId: M:System.Xaml.XamlType.LookupIsUnknown\n  id: LookupIsUnknown\n  parent: System.Xaml.XamlType\n  langs:\n  - csharp\n  name: LookupIsUnknown()\n  nameWithType: XamlType.LookupIsUnknown()\n  fullName: XamlType.LookupIsUnknown()\n  type: Method\n  assemblies:\n  - System.Xaml\n  namespace: System.Xaml\n  summary: Returns a value that indicates whether this <xref href=\"System.Xaml.XamlType\"></xref> represents a type that cannot be resolved in the underlying type system.\n  remarks: \"This method can be invoked by calls to <xref:System.Xaml.XamlType.IsUnknown%2A>.  \\n  \\n The default implementation can use CLR reflection. For a null <xref:System.Xaml.XamlType.UnderlyingType%2A>, it returns `true`.  \\n  \\n Override this method if you want <xref:System.Xaml.XamlType.IsUnknown%2A> to use different logic.\"\n  syntax:\n    content: protected virtual bool LookupIsUnknown ();\n    parameters: []\n    return:\n      type: System.Boolean\n      description: '`true` if this <xref href=\"System.Xaml.XamlType\"></xref> represents a nonresolvable type; otherwise, `false`.'\n  overload: System.Xaml.XamlType.LookupIsUnknown*\n  exceptions: []\n  version:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Xaml/XamlType.xml\n  ms.technology:\n  - dotnet-wpf\n  manager: martinek\n- uid: System.Xaml.XamlType.LookupIsWhitespaceSignificantCollection\n  commentId: M:System.Xaml.XamlType.LookupIsWhitespaceSignificantCollection\n  id: LookupIsWhitespaceSignificantCollection\n  parent: System.Xaml.XamlType\n  langs:\n  - csharp\n  name: LookupIsWhitespaceSignificantCollection()\n  nameWithType: XamlType.LookupIsWhitespaceSignificantCollection()\n  fullName: XamlType.LookupIsWhitespaceSignificantCollection()\n  type: Method\n  assemblies:\n  - System.Xaml\n  namespace: System.Xaml\n  summary: Returns a value that indicates whether this <xref href=\"System.Xaml.XamlType\"></xref> represents a whitespace significant collection, as per the XML definition.\n  remarks: \"This method can be invoked by calls to <xref:System.Xaml.XamlType.IsWhitespaceSignificantCollection%2A>.  \\n  \\n The default implementation returns a value based on reading <xref:System.Windows.Markup.WhitespaceSignificantCollectionAttribute>. It can also check the <xref:System.Xaml.XamlType.BaseType%2A> for the attribute if no attribute is found on the immediate underlying type. If a value is not available, it returns `false`.  \\n  \\n Override this method if you want <xref:System.Xaml.XamlType.IsWhitespaceSignificantCollection%2A> to use different logic.\"\n  syntax:\n    content: protected virtual bool LookupIsWhitespaceSignificantCollection ();\n    parameters: []\n    return:\n      type: System.Boolean\n      description: '`true` if this <xref href=\"System.Xaml.XamlType\"></xref> represents a white-space significant collection; otherwise, `false`.'\n  overload: System.Xaml.XamlType.LookupIsWhitespaceSignificantCollection*\n  exceptions: []\n  version:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Xaml/XamlType.xml\n  ms.technology:\n  - dotnet-wpf\n  manager: martinek\n- uid: System.Xaml.XamlType.LookupIsXData\n  commentId: M:System.Xaml.XamlType.LookupIsXData\n  id: LookupIsXData\n  parent: System.Xaml.XamlType\n  langs:\n  - csharp\n  name: LookupIsXData()\n  nameWithType: XamlType.LookupIsXData()\n  fullName: XamlType.LookupIsXData()\n  type: Method\n  assemblies:\n  - System.Xaml\n  namespace: System.Xaml\n  summary: Returns a value that indicates whether this <xref href=\"System.Xaml.XamlType\"></xref> represents XML `XDATA`, as per the XAML definition.\n  remarks: \"This method can be invoked by calls to <xref:System.Xaml.XamlType.IsXData%2A>.  \\n  \\n The default implementation makes a <xref:System.Xaml.XamlType.CanAssignTo%2A> call indirectly against the type <xref:System.Xml.Serialization.IXmlSerializable>.  \\n  \\n Override this method if you want <xref:System.Xaml.XamlType.IsXData%2A> to use different logic.\"\n  syntax:\n    content: protected virtual bool LookupIsXData ();\n    parameters: []\n    return:\n      type: System.Boolean\n      description: '`true` if this <xref href=\"System.Xaml.XamlType\"></xref> represents `XDATA`; otherwise, `false`.'\n  overload: System.Xaml.XamlType.LookupIsXData*\n  exceptions: []\n  version:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Xaml/XamlType.xml\n  ms.technology:\n  - dotnet-wpf\n  manager: martinek\n- uid: System.Xaml.XamlType.LookupItemType\n  commentId: M:System.Xaml.XamlType.LookupItemType\n  id: LookupItemType\n  parent: System.Xaml.XamlType\n  langs:\n  - csharp\n  name: LookupItemType()\n  nameWithType: XamlType.LookupItemType()\n  fullName: XamlType.LookupItemType()\n  type: Method\n  assemblies:\n  - System.Xaml\n  namespace: System.Xaml\n  summary: Returns a value that provides the type information for the `Items` property of this <xref href=\"System.Xaml.XamlType\"></xref>.\n  remarks: \"This method can be invoked by calls to <xref:System.Xaml.XamlType.ItemType%2A>.  \\n  \\n The default implementation can use CLR reflection concepts, such as checking for an `Add` method by <xref:System.Reflection.MethodInfo> and using the <xref:System.Reflection.ParameterInfo>; checking <xref:System.Xaml.XamlType.IsArray%2A>; and checking <xref:System.Xaml.XamlType.BaseType%2A> and trying the same logic there.  \\n  \\n Override this method if you want <xref:System.Xaml.XamlType.ItemType%2A> to use different logic. Cases where <xref:System.Xaml.XamlType.LookupCollectionKind%2A> returns <xref:System.Xaml.Schema.XamlCollectionKind?displayProperty=fullName> should return `null`.\"\n  syntax:\n    content: protected virtual System.Xaml.XamlType LookupItemType ();\n    parameters: []\n    return:\n      type: System.Xaml.XamlType\n      description: A <xref href=\"System.Xaml.XamlType\"></xref> object for the type of the items in the collection; otherwise, `null` if this <xref href=\"System.Xaml.XamlType\"></xref> does not represent a collection.\n  overload: System.Xaml.XamlType.LookupItemType*\n  exceptions: []\n  version:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Xaml/XamlType.xml\n  ms.technology:\n  - dotnet-wpf\n  manager: martinek\n- uid: System.Xaml.XamlType.LookupKeyType\n  commentId: M:System.Xaml.XamlType.LookupKeyType\n  id: LookupKeyType\n  parent: System.Xaml.XamlType\n  langs:\n  - csharp\n  name: LookupKeyType()\n  nameWithType: XamlType.LookupKeyType()\n  fullName: XamlType.LookupKeyType()\n  type: Method\n  assemblies:\n  - System.Xaml\n  namespace: System.Xaml\n  summary: Returns a value that provides the type information for the key property of this <xref href=\"System.Xaml.XamlType\"></xref>, if the <xref href=\"System.Xaml.XamlType\"></xref> represents a dictionary.\n  remarks: \"This method can be invoked by calls to <xref:System.Xaml.XamlType.KeyType%2A>.  \\n  \\n The default implementation can use CLR reflection concepts, such as checking for an `Add` method by <xref:System.Reflection.MethodInfo> and using the <xref:System.Reflection.ParameterInfo>; and checking <xref:System.Xaml.XamlType.BaseType%2A> and trying the same logic there.  \\n  \\n Override this method if you want <xref:System.Xaml.XamlType.KeyType%2A> to use different logic. Cases where <xref:System.Xaml.XamlType.LookupCollectionKind%2A> does not return <xref:System.Xaml.Schema.XamlCollectionKind?displayProperty=fullName> should return `null`.\"\n  syntax:\n    content: protected virtual System.Xaml.XamlType LookupKeyType ();\n    parameters: []\n    return:\n      type: System.Xaml.XamlType\n      description: A <xref href=\"System.Xaml.XamlType\"></xref> object for the type of the key for dictionary usage, or `null` if this <xref href=\"System.Xaml.XamlType\"></xref> does not represent a dictionary,\n  overload: System.Xaml.XamlType.LookupKeyType*\n  exceptions: []\n  version:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Xaml/XamlType.xml\n  ms.technology:\n  - dotnet-wpf\n  manager: martinek\n- uid: System.Xaml.XamlType.LookupMarkupExtensionReturnType\n  commentId: M:System.Xaml.XamlType.LookupMarkupExtensionReturnType\n  id: LookupMarkupExtensionReturnType\n  parent: System.Xaml.XamlType\n  langs:\n  - csharp\n  name: LookupMarkupExtensionReturnType()\n  nameWithType: XamlType.LookupMarkupExtensionReturnType()\n  fullName: XamlType.LookupMarkupExtensionReturnType()\n  type: Method\n  assemblies:\n  - System.Xaml\n  namespace: System.Xaml\n  summary: Returns a value that provides the type information for the returned `ProvideValue` of this <xref href=\"System.Xaml.XamlType\"></xref>, if it represents a markup extension.\n  remarks: \"This method can be invoked by calls to <xref:System.Xaml.XamlType.MarkupExtensionReturnType%2A>.  \\n  \\n The default implementation returns a <xref:System.Xaml.XamlType> on the basis of reading <xref:System.Windows.Markup.MarkupExtensionReturnTypeAttribute>. It can also check <xref:System.Xaml.XamlType.BaseType%2A> for the attribute if no attribute is found on the immediate underlying type. If a value is not available, it returns `null`.  \\n  \\n Override this method if you want <xref:System.Xaml.XamlType.MarkupExtensionReturnType%2A> to use different logic.\"\n  syntax:\n    content: protected virtual System.Xaml.XamlType LookupMarkupExtensionReturnType ();\n    parameters: []\n    return:\n      type: System.Xaml.XamlType\n      description: A <xref href=\"System.Xaml.XamlType\"></xref> object for the return type for markup extension usage; otherwise, `null`, if this <xref href=\"System.Xaml.XamlType\"></xref> does not represent a markup extension.\n  overload: System.Xaml.XamlType.LookupMarkupExtensionReturnType*\n  exceptions: []\n  version:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Xaml/XamlType.xml\n  ms.technology:\n  - dotnet-wpf\n  manager: martinek\n- uid: System.Xaml.XamlType.LookupMember(System.String,System.Boolean)\n  commentId: M:System.Xaml.XamlType.LookupMember(System.String,System.Boolean)\n  id: LookupMember(System.String,System.Boolean)\n  parent: System.Xaml.XamlType\n  langs:\n  - csharp\n  name: LookupMember(String, Boolean)\n  nameWithType: XamlType.LookupMember(String, Boolean)\n  fullName: XamlType.LookupMember(String, Boolean)\n  type: Method\n  assemblies:\n  - System.Xaml\n  namespace: System.Xaml\n  summary: Returns the <xref href=\"System.Xaml.XamlMember\"></xref> for a specific named member from this <xref href=\"System.Xaml.XamlType\"></xref>.\n  remarks: \"This method can be invoked by calls to <xref:System.Xaml.XamlType.GetMember%2A>.  \\n  \\n The default implementation returns a <xref:System.Xaml.XamlType> based on internal CLR reflection and evaluation against the schema context.  \\n  \\n Override this method if you want <xref:System.Xaml.XamlType.GetMember%2A> to use different logic.  \\n  \\n> [!IMPORTANT]\\n>  <xref:System.Xaml.XamlType.LookupMember%2A> is virtual, and therefore, can be overridden. The override has the potential (whether for malicious purposes or otherwise) to change the reported members of a XAML type so that they no longer align in an expected way with the <xref:System.ComponentModel.TypeDescriptor> `Get*` information about the underlying CLR type. For any security-critical checks of member reporting, use the underlying CLR type instead.\"\n  syntax:\n    content: protected virtual System.Xaml.XamlMember LookupMember (string name, bool skipReadOnlyCheck);\n    parameters:\n    - id: name\n      type: System.String\n      description: The name of the member to get (as a string).\n    - id: skipReadOnlyCheck\n      type: System.Boolean\n      description: '`true` to return a member even if that member has a `true` value for <xref href=\"System.Xaml.XamlMember.IsReadOnly\"></xref>; `false` to not return a <xref href=\"System.Xaml.XamlMember.IsReadOnly\"></xref> member. The default is `false`.'\n    return:\n      type: System.Xaml.XamlMember\n      description: The <xref href=\"System.Xaml.XamlMember\"></xref> information for the member, if a member was found; otherwise, `null`.\n  overload: System.Xaml.XamlType.LookupMember*\n  exceptions: []\n  version:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Xaml/XamlType.xml\n  ms.technology:\n  - dotnet-wpf\n  manager: martinek\n- uid: System.Xaml.XamlType.LookupPositionalParameters(System.Int32)\n  commentId: M:System.Xaml.XamlType.LookupPositionalParameters(System.Int32)\n  id: LookupPositionalParameters(System.Int32)\n  parent: System.Xaml.XamlType\n  langs:\n  - csharp\n  name: LookupPositionalParameters(Int32)\n  nameWithType: XamlType.LookupPositionalParameters(Int32)\n  fullName: XamlType.LookupPositionalParameters(Int32)\n  type: Method\n  assemblies:\n  - System.Xaml\n  namespace: System.Xaml\n  summary: For markup extension types, returns the types of the positional parameters that are supported in a specific markup extension usage for this <xref href=\"System.Xaml.XamlType\"></xref>.\n  remarks: \"This method can be invoked by calls to <xref:System.Xaml.XamlType.GetPositionalParameters%2A>.  \\n  \\n The default implementation uses internal reflection information based on finding constructors and checking the arity. Override this method if you want <xref:System.Xaml.XamlType.GetPositionalParameters%2A> to use different logic.  \\n  \\n This API is only relevant if this <xref:System.Xaml.XamlType> represents a markup extension (<xref:System.Xaml.XamlType.IsMarkupExtension%2A> is `true`).  \\n  \\n The input `parameterCount` is not for requesting the type of a specific positional parameter. It is for specifying the arity of a markup extension usage. Markup extension usage often has multiple signatures and uses different parameter arity (count) of positional parameters to differentiate. However, you can configure a schema context to allow duplicate arities and use types of the positional parameters for differentiation. For more information, see <xref:System.Xaml.XamlSchemaContext.SupportMarkupExtensionsWithDuplicateArity%2A>. For a specific arity count, the parameter positions and types can vary. To get the positional type of a specific arity's markup extension usage, you first call <xref:System.Xaml.XamlType.GetPositionalParameters%2A> with the arity count. Then get the item at that position from the returned collection.\"\n  syntax:\n    content: protected virtual System.Collections.Generic.IList<System.Xaml.XamlType> LookupPositionalParameters (int parameterCount);\n    parameters:\n    - id: parameterCount\n      type: System.Int32\n      description: The count (arity) of the particular syntax or constructor mode that you want information about.\n    return:\n      type: System.Collections.Generic.IList{System.Xaml.XamlType}\n      description: A list of <xref href=\"System.Xaml.XamlType\"></xref> values where each such <xref href=\"System.Xaml.XamlType\"></xref> is the type for that position in the syntax. You must specify those types in the same order when supplying markup input for the markup extension.\n  overload: System.Xaml.XamlType.LookupPositionalParameters*\n  exceptions: []\n  version:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Xaml/XamlType.xml\n  ms.technology:\n  - dotnet-wpf\n  manager: martinek\n- uid: System.Xaml.XamlType.LookupSetMarkupExtensionHandler\n  commentId: M:System.Xaml.XamlType.LookupSetMarkupExtensionHandler\n  id: LookupSetMarkupExtensionHandler\n  parent: System.Xaml.XamlType\n  langs:\n  - csharp\n  name: LookupSetMarkupExtensionHandler()\n  nameWithType: XamlType.LookupSetMarkupExtensionHandler()\n  fullName: XamlType.LookupSetMarkupExtensionHandler()\n  type: Method\n  assemblies:\n  - System.Xaml\n  namespace: System.Xaml\n  summary: Returns a handler callback to use for the set operations of markup extensions.\n  remarks: The default implementation returns a value based on reading <xref:System.Windows.Markup.XamlSetMarkupExtensionAttribute>. It can also check <xref:System.Xaml.XamlType.BaseType%2A> for the attribute if no attribute is found on the immediate underlying type. If a value is unavailable, it returns `null`.\n  syntax:\n    content: protected virtual EventHandler<System.Windows.Markup.XamlSetMarkupExtensionEventArgs> LookupSetMarkupExtensionHandler ();\n    parameters: []\n    return:\n      type: System.EventHandler{System.Windows.Markup.XamlSetMarkupExtensionEventArgs}\n      description: A handler callback to use for the set operations of markup extensions.\n  overload: System.Xaml.XamlType.LookupSetMarkupExtensionHandler*\n  exceptions: []\n  version:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Xaml/XamlType.xml\n  ms.technology:\n  - dotnet-wpf\n  manager: martinek\n- uid: System.Xaml.XamlType.LookupSetTypeConverterHandler\n  commentId: M:System.Xaml.XamlType.LookupSetTypeConverterHandler\n  id: LookupSetTypeConverterHandler\n  parent: System.Xaml.XamlType\n  langs:\n  - csharp\n  name: LookupSetTypeConverterHandler()\n  nameWithType: XamlType.LookupSetTypeConverterHandler()\n  fullName: XamlType.LookupSetTypeConverterHandler()\n  type: Method\n  assemblies:\n  - System.Xaml\n  namespace: System.Xaml\n  summary: Returns a handler to use for type converter setting cases.\n  remarks: The default implementation returns a value based on reading <xref:System.Windows.Markup.XamlSetTypeConverterAttribute>. It can also check <xref:System.Xaml.XamlType.BaseType%2A> for the attribute if no attribute is found on the immediate underlying type. If a value is unavailable, it returns `null`.\n  syntax:\n    content: protected virtual EventHandler<System.Windows.Markup.XamlSetTypeConverterEventArgs> LookupSetTypeConverterHandler ();\n    parameters: []\n    return:\n      type: System.EventHandler{System.Windows.Markup.XamlSetTypeConverterEventArgs}\n      description: A handler to use for type converter setting cases.\n  overload: System.Xaml.XamlType.LookupSetTypeConverterHandler*\n  exceptions: []\n  version:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Xaml/XamlType.xml\n  ms.technology:\n  - dotnet-wpf\n  manager: martinek\n- uid: System.Xaml.XamlType.LookupTrimSurroundingWhitespace\n  commentId: M:System.Xaml.XamlType.LookupTrimSurroundingWhitespace\n  id: LookupTrimSurroundingWhitespace\n  parent: System.Xaml.XamlType\n  langs:\n  - csharp\n  name: LookupTrimSurroundingWhitespace()\n  nameWithType: XamlType.LookupTrimSurroundingWhitespace()\n  fullName: XamlType.LookupTrimSurroundingWhitespace()\n  type: Method\n  assemblies:\n  - System.Xaml\n  namespace: System.Xaml\n  summary: Returns a value that indicates whether this <xref href=\"System.Xaml.XamlType\"></xref> should be serialized using a mode that  trims surrounding whitespace.\n  remarks: \"This method can be invoked by calls to <xref:System.Xaml.XamlType.TrimSurroundingWhitespace%2A>.  \\n  \\n The default implementation returns a value based on reading <xref:System.Windows.Markup.TrimSurroundingWhitespaceAttribute>. It can also check <xref:System.Xaml.XamlType.BaseType%2A> for the attribute if no attribute is found on the immediate underlying type. If a value is unavailable, it returns `false`.\"\n  syntax:\n    content: protected virtual bool LookupTrimSurroundingWhitespace ();\n    parameters: []\n    return:\n      type: System.Boolean\n      description: '`true` if this <xref href=\"System.Xaml.XamlType\"></xref> should be serialized in a mode that trims surrounding whitespace; otherwise, `false`.'\n  overload: System.Xaml.XamlType.LookupTrimSurroundingWhitespace*\n  exceptions: []\n  version:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Xaml/XamlType.xml\n  ms.technology:\n  - dotnet-wpf\n  manager: martinek\n- uid: System.Xaml.XamlType.LookupTypeConverter\n  commentId: M:System.Xaml.XamlType.LookupTypeConverter\n  id: LookupTypeConverter\n  parent: System.Xaml.XamlType\n  langs:\n  - csharp\n  name: LookupTypeConverter()\n  nameWithType: XamlType.LookupTypeConverter()\n  fullName: XamlType.LookupTypeConverter()\n  type: Method\n  assemblies:\n  - System.Xaml\n  namespace: System.Xaml\n  summary: Returns a <xref href=\"System.Xaml.Schema.XamlValueConverter`1\"></xref> that has a <xref href=\"System.ComponentModel.TypeConverter\"></xref> constraint, which represents type-conversion behavior for values of this <xref href=\"System.Xaml.XamlType\"></xref>.\n  remarks: \"This method can be invoked by calls to <xref:System.Xaml.XamlType.TypeConverter%2A>.  \\n  \\n The default implementation returns a value based on reading <xref:System.ComponentModel.TypeConverterAttribute>. The default implementation can also check <xref:System.Xaml.XamlType.BaseType%2A> for the attribute if no attribute is found on the immediate underlying type. It also includes special logic for default conversion of enumerations, common value types, and generics. If a value is unavailable, it returns `null`.  \\n  \\n Override this method if you want <xref:System.Xaml.XamlType.TypeConverter%2A> to use different logic.\"\n  syntax:\n    content: protected virtual System.Xaml.Schema.XamlValueConverter<System.ComponentModel.TypeConverter> LookupTypeConverter ();\n    parameters: []\n    return:\n      type: System.Xaml.Schema.XamlValueConverter{System.ComponentModel.TypeConverter}\n      description: A <xref href=\"System.Xaml.Schema.XamlValueConverter`1\"></xref> with <xref href=\"System.ComponentModel.TypeConverter\"></xref> constraint that represents type-conversion behavior for values of this <xref href=\"System.Xaml.XamlType\"></xref>; otherwise, `null`.\n  overload: System.Xaml.XamlType.LookupTypeConverter*\n  exceptions: []\n  version:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Xaml/XamlType.xml\n  ms.technology:\n  - dotnet-wpf\n  manager: martinek\n- uid: System.Xaml.XamlType.LookupUnderlyingType\n  commentId: M:System.Xaml.XamlType.LookupUnderlyingType\n  id: LookupUnderlyingType\n  parent: System.Xaml.XamlType\n  langs:\n  - csharp\n  name: LookupUnderlyingType()\n  nameWithType: XamlType.LookupUnderlyingType()\n  fullName: XamlType.LookupUnderlyingType()\n  type: Method\n  assemblies:\n  - System.Xaml\n  namespace: System.Xaml\n  summary: Returns the CLR <xref href=\"System.Type\"></xref> that underlies this <xref href=\"System.Xaml.XamlType\"></xref>.\n  remarks: \"This method can be invoked by calls to <xref:System.Xaml.XamlType.UnderlyingType%2A>.  \\n  \\n The default implementation returns an internal field. That field is generally initialized during construction and its value is based on which constructor was called and the information that you provided.  \\n  \\n Override this method if you want <xref:System.Xaml.XamlType.UnderlyingType%2A> to use different logic.\"\n  syntax:\n    content: protected virtual Type LookupUnderlyingType ();\n    parameters: []\n    return:\n      type: System.Type\n      description: The CLR <xref href=\"System.Type\"></xref> that underlies this <xref href=\"System.Xaml.XamlType\"></xref>; otherwise, `null`.\n  overload: System.Xaml.XamlType.LookupUnderlyingType*\n  exceptions: []\n  version:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Xaml/XamlType.xml\n  ms.technology:\n  - dotnet-wpf\n  manager: martinek\n- uid: System.Xaml.XamlType.LookupUsableDuringInitialization\n  commentId: M:System.Xaml.XamlType.LookupUsableDuringInitialization\n  id: LookupUsableDuringInitialization\n  parent: System.Xaml.XamlType\n  langs:\n  - csharp\n  name: LookupUsableDuringInitialization()\n  nameWithType: XamlType.LookupUsableDuringInitialization()\n  fullName: XamlType.LookupUsableDuringInitialization()\n  type: Method\n  assemblies:\n  - System.Xaml\n  namespace: System.Xaml\n  summary: Returns a value that indicates whether this <xref href=\"System.Xaml.XamlType\"></xref> is built top-down during XAML initialization.\n  remarks: \"Top-down is a metaphor that approximates XAML processor behavior when it creates the object graph. When built top-down, a type is instantiated, attached to the parent, and has its properties set. Top-down construction avoids invoking property-changed handlers multiple times. Such handling ripples up the object graph and therefore, eliminates the multiple handler calls and provides a performance optimization for startup of the object graph.  \\n  \\n This method can be invoked by calls to <xref:System.Xaml.XamlType.IsUsableDuringInitialization%2A>.  \\n  \\n The default implementation returns a value based on reading <xref:System.Windows.Markup.UsableDuringInitializationAttribute>. It can also check <xref:System.Xaml.XamlType.BaseType%2A> for the attribute if no attribute is found on the immediate underlying type. If a value is unavailable, it returns `false`.  \\n  \\n Override this method if you want <xref:System.Xaml.XamlType.IsUsableDuringInitialization%2A> to use different logic.\"\n  syntax:\n    content: protected virtual bool LookupUsableDuringInitialization ();\n    parameters: []\n    return:\n      type: System.Boolean\n      description: '`true` if this <xref href=\"System.Xaml.XamlType\"></xref> is built top-down during XAML initialization; otherwise, `false`.'\n  overload: System.Xaml.XamlType.LookupUsableDuringInitialization*\n  exceptions: []\n  version:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Xaml/XamlType.xml\n  ms.technology:\n  - dotnet-wpf\n  manager: martinek\n- uid: System.Xaml.XamlType.LookupValueSerializer\n  commentId: M:System.Xaml.XamlType.LookupValueSerializer\n  id: LookupValueSerializer\n  parent: System.Xaml.XamlType\n  langs:\n  - csharp\n  name: LookupValueSerializer()\n  nameWithType: XamlType.LookupValueSerializer()\n  fullName: XamlType.LookupValueSerializer()\n  type: Method\n  assemblies:\n  - System.Xaml\n  namespace: System.Xaml\n  summary: Returns a <xref href=\"System.Xaml.Schema.XamlValueConverter`1\"></xref> that has a <xref href=\"System.Windows.Markup.ValueSerializer\"></xref> constraint, which represents value serialization behavior for values of this <xref href=\"System.Xaml.XamlType\"></xref>.\n  remarks: \"This method can be invoked by calls to <xref:System.Xaml.XamlType.ValueSerializer%2A>.  \\n  \\n The default implementation returns a value based on reading <xref:System.Windows.Markup.ValueSerializerAttribute>. It can also check <xref:System.Xaml.XamlType.BaseType%2A> for the attribute if no attribute is found on the immediate underlying type. It also includes special logic for default serialization of enumerations, common value types, or generics. If a value is unavailable, it returns `null`.  \\n  \\n Override this method if you want <xref:System.Xaml.XamlType.ValueSerializer%2A> to use different logic.\"\n  syntax:\n    content: protected virtual System.Xaml.Schema.XamlValueConverter<System.Windows.Markup.ValueSerializer> LookupValueSerializer ();\n    parameters: []\n    return:\n      type: System.Xaml.Schema.XamlValueConverter{System.Windows.Markup.ValueSerializer}\n      description: A <xref href=\"System.Xaml.Schema.XamlValueConverter`1\"></xref> with <xref href=\"System.Windows.Markup.ValueSerializer\"></xref> constraint that represents value serialization behavior for values of this <xref href=\"System.Xaml.XamlType\"></xref>; otherwise, `null`.\n  overload: System.Xaml.XamlType.LookupValueSerializer*\n  exceptions: []\n  version:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Xaml/XamlType.xml\n  ms.technology:\n  - dotnet-wpf\n  manager: martinek\n- uid: System.Xaml.XamlType.MarkupExtensionReturnType\n  commentId: P:System.Xaml.XamlType.MarkupExtensionReturnType\n  id: MarkupExtensionReturnType\n  parent: System.Xaml.XamlType\n  langs:\n  - csharp\n  name: MarkupExtensionReturnType\n  nameWithType: XamlType.MarkupExtensionReturnType\n  fullName: XamlType.MarkupExtensionReturnType\n  type: Property\n  assemblies:\n  - System.Xaml\n  namespace: System.Xaml\n  summary: Gets a value that provides the type information for the returned `ProvideValue` of this <xref href=\"System.Xaml.XamlType\"></xref>, if it represents a markup extension.\n  remarks: \"This property is only relevant if this <xref:System.Xaml.XamlType> represents a markup extension (`x:MarkupExtension` is in the assignable types list).  \\n  \\n If you do not use the default internal CLR reflection technique for a <xref:System.Xaml.XamlType>, calls to this property can invoke <xref:System.Xaml.XamlType.LookupMarkupExtensionReturnType%2A> overrides on <xref:System.Xaml.XamlType> derived classes. For more information about return values and other behavior, see the documentation for <xref:System.Xaml.XamlType.LookupMarkupExtensionReturnType%2A> on this type.\"\n  syntax:\n    content: public System.Xaml.XamlType MarkupExtensionReturnType { get; }\n    return:\n      type: System.Xaml.XamlType\n      description: A <xref href=\"System.Xaml.XamlType\"></xref> object for the return type for markup extension usage; otherwise, `null`, if this <xref href=\"System.Xaml.XamlType\"></xref> does not represent a markup extension.\n  overload: System.Xaml.XamlType.MarkupExtensionReturnType*\n  exceptions: []\n  version:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Xaml/XamlType.xml\n  ms.technology:\n  - dotnet-wpf\n  manager: martinek\n- uid: System.Xaml.XamlType.Name\n  commentId: P:System.Xaml.XamlType.Name\n  id: Name\n  parent: System.Xaml.XamlType\n  langs:\n  - csharp\n  name: Name\n  nameWithType: XamlType.Name\n  fullName: XamlType.Name\n  type: Property\n  assemblies:\n  - System.Xaml\n  namespace: System.Xaml\n  summary: Gets the string name of the type that this <xref href=\"System.Xaml.XamlType\"></xref> represents.\n  remarks: This property typically gets the schema-constructed name (per the <xref:System.Xaml.XamlType.%23ctor%2A> signature), or the name of the <xref:System.Type>, if it is constructed by using the pertinent constructor of the CLR type system.\n  syntax:\n    content: public string Name { get; }\n    return:\n      type: System.String\n      description: The string name of this XAML type.\n  overload: System.Xaml.XamlType.Name*\n  exceptions: []\n  version:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Xaml/XamlType.xml\n  ms.technology:\n  - dotnet-wpf\n  manager: martinek\n- uid: System.Xaml.XamlType.op_Equality(System.Xaml.XamlType,System.Xaml.XamlType)\n  commentId: M:System.Xaml.XamlType.op_Equality(System.Xaml.XamlType,System.Xaml.XamlType)\n  id: op_Equality(System.Xaml.XamlType,System.Xaml.XamlType)\n  parent: System.Xaml.XamlType\n  langs:\n  - csharp\n  name: op_Equality(XamlType, XamlType)\n  nameWithType: XamlType.op_Equality(XamlType, XamlType)\n  fullName: XamlType.op_Equality(XamlType, XamlType)\n  type: Operator\n  assemblies:\n  - System.Xaml\n  namespace: System.Xaml\n  summary: Determines whether two specified <xref href=\"System.Xaml.XamlType\"></xref> objects have the same value.\n  syntax:\n    content: public static bool op_Equality (System.Xaml.XamlType xamlType1, System.Xaml.XamlType xamlType2);\n    parameters:\n    - id: xamlType1\n      type: System.Xaml.XamlType\n      description: A <xref href=\"System.Xaml.XamlType\"></xref> or `null`.\n    - id: xamlType2\n      type: System.Xaml.XamlType\n      description: A <xref href=\"System.Xaml.XamlType\"></xref> or `null`.\n    return:\n      type: System.Boolean\n      description: '`true` if the value of <code>xamlType1</code> is the same as the value of <code>xamlType2</code>; otherwise, `false`.'\n  overload: System.Xaml.XamlType.op_Equality*\n  exceptions: []\n  version:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Xaml/XamlType.xml\n  ms.technology:\n  - dotnet-wpf\n  manager: martinek\n- uid: System.Xaml.XamlType.op_Inequality(System.Xaml.XamlType,System.Xaml.XamlType)\n  commentId: M:System.Xaml.XamlType.op_Inequality(System.Xaml.XamlType,System.Xaml.XamlType)\n  id: op_Inequality(System.Xaml.XamlType,System.Xaml.XamlType)\n  parent: System.Xaml.XamlType\n  langs:\n  - csharp\n  name: op_Inequality(XamlType, XamlType)\n  nameWithType: XamlType.op_Inequality(XamlType, XamlType)\n  fullName: XamlType.op_Inequality(XamlType, XamlType)\n  type: Operator\n  assemblies:\n  - System.Xaml\n  namespace: System.Xaml\n  summary: Determines whether two specified <xref href=\"System.Xaml.XamlType\"></xref> objects have different values.\n  syntax:\n    content: public static bool op_Inequality (System.Xaml.XamlType xamlType1, System.Xaml.XamlType xamlType2);\n    parameters:\n    - id: xamlType1\n      type: System.Xaml.XamlType\n      description: A <xref href=\"System.Xaml.XamlType\"></xref> or `null`.\n    - id: xamlType2\n      type: System.Xaml.XamlType\n      description: A <xref href=\"System.Xaml.XamlType\"></xref> or `null`.\n    return:\n      type: System.Boolean\n      description: '`true` if the value of <code>xamlType1</code> is different from the value of <code>xamlType2</code>; otherwise, `false`.'\n  overload: System.Xaml.XamlType.op_Inequality*\n  exceptions: []\n  version:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Xaml/XamlType.xml\n  ms.technology:\n  - dotnet-wpf\n  manager: martinek\n- uid: System.Xaml.XamlType.PreferredXamlNamespace\n  commentId: P:System.Xaml.XamlType.PreferredXamlNamespace\n  id: PreferredXamlNamespace\n  parent: System.Xaml.XamlType\n  langs:\n  - csharp\n  name: PreferredXamlNamespace\n  nameWithType: XamlType.PreferredXamlNamespace\n  fullName: XamlType.PreferredXamlNamespace\n  type: Property\n  assemblies:\n  - System.Xaml\n  namespace: System.Xaml\n  summary: Gets the single XAML namespace that is the primary XAML namespace for this <xref href=\"System.Xaml.XamlType\"></xref>.\n  remarks: This implementation provides the same value as calling <xref:System.Xaml.XamlType.GetXamlNamespaces%2A> and then getting the first value string from the returned enumerable set.\n  syntax:\n    content: public string PreferredXamlNamespace { get; }\n    return:\n      type: System.String\n      description: The identifier, as a string, of the primary XAML namespace for this XAML type.\n  overload: System.Xaml.XamlType.PreferredXamlNamespace*\n  exceptions: []\n  version:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Xaml/XamlType.xml\n  ms.technology:\n  - dotnet-wpf\n  manager: martinek\n- uid: System.Xaml.XamlType.SchemaContext\n  commentId: P:System.Xaml.XamlType.SchemaContext\n  id: SchemaContext\n  parent: System.Xaml.XamlType\n  langs:\n  - csharp\n  name: SchemaContext\n  nameWithType: XamlType.SchemaContext\n  fullName: XamlType.SchemaContext\n  type: Property\n  assemblies:\n  - System.Xaml\n  namespace: System.Xaml\n  summary: Gets the active <xref href=\"System.Xaml.XamlSchemaContext\"></xref> for processing this <xref href=\"System.Xaml.XamlType\"></xref>.\n  remarks: <xref:System.Xaml.XamlSchemaContext> is a required parameter entry when constructing a <xref:System.Xaml.XamlType>.\n  syntax:\n    content: public System.Xaml.XamlSchemaContext SchemaContext { get; }\n    return:\n      type: System.Xaml.XamlSchemaContext\n      description: The active <xref href=\"System.Xaml.XamlSchemaContext\"></xref> for processing this <xref href=\"System.Xaml.XamlType\"></xref>.\n  overload: System.Xaml.XamlType.SchemaContext*\n  exceptions: []\n  version:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Xaml/XamlType.xml\n  ms.technology:\n  - dotnet-wpf\n  manager: martinek\n- uid: System.Xaml.XamlType.ToString\n  commentId: M:System.Xaml.XamlType.ToString\n  id: ToString\n  parent: System.Xaml.XamlType\n  langs:\n  - csharp\n  name: ToString()\n  nameWithType: XamlType.ToString()\n  fullName: XamlType.ToString()\n  type: Method\n  assemblies:\n  - System.Xaml\n  namespace: System.Xaml\n  summary: Returns a string representation of this <xref href=\"System.Xaml.XamlType\"></xref>.\n  remarks: The <xref:System.Xaml.XamlType> implementation of <xref:System.Object.ToString%2A> returns the <xref:System.Xaml.XamlType.Name%2A> property of the <xref:System.Xaml.XamlType>.\n  syntax:\n    content: public override string ToString ();\n    parameters: []\n    return:\n      type: System.String\n      description: A string representation of this <xref href=\"System.Xaml.XamlType\"></xref>.\n  overload: System.Xaml.XamlType.ToString*\n  exceptions: []\n  version:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Xaml/XamlType.xml\n  ms.technology:\n  - dotnet-wpf\n  manager: martinek\n- uid: System.Xaml.XamlType.TrimSurroundingWhitespace\n  commentId: P:System.Xaml.XamlType.TrimSurroundingWhitespace\n  id: TrimSurroundingWhitespace\n  parent: System.Xaml.XamlType\n  langs:\n  - csharp\n  name: TrimSurroundingWhitespace\n  nameWithType: XamlType.TrimSurroundingWhitespace\n  fullName: XamlType.TrimSurroundingWhitespace\n  type: Property\n  assemblies:\n  - System.Xaml\n  namespace: System.Xaml\n  summary: Gets a value that indicates whether this <xref href=\"System.Xaml.XamlType\"></xref> has whitespace handling behavior for serialization that trims the surrounding whitespace in its content.\n  remarks: If you do not use the default internal CLR reflection technique for a <xref:System.Xaml.XamlType>, calls to this property can invoke <xref:System.Xaml.XamlType.LookupIsWhitespaceSignificantCollection%2A> overrides on <xref:System.Xaml.XamlType> derived classes. For more information about return values and other behavior, see the documentation for <xref:System.Xaml.XamlType.LookupIsWhitespaceSignificantCollection%2A> on this type.\n  syntax:\n    content: public bool TrimSurroundingWhitespace { get; }\n    return:\n      type: System.Boolean\n      description: '`true` if this <xref href=\"System.Xaml.XamlType\"></xref> represents a type that uses whitespace trimming; otherwise, `false`.'\n  overload: System.Xaml.XamlType.TrimSurroundingWhitespace*\n  exceptions: []\n  version:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Xaml/XamlType.xml\n  ms.technology:\n  - dotnet-wpf\n  manager: martinek\n- uid: System.Xaml.XamlType.TypeArguments\n  commentId: P:System.Xaml.XamlType.TypeArguments\n  id: TypeArguments\n  parent: System.Xaml.XamlType\n  langs:\n  - csharp\n  name: TypeArguments\n  nameWithType: XamlType.TypeArguments\n  fullName: XamlType.TypeArguments\n  type: Property\n  assemblies:\n  - System.Xaml\n  namespace: System.Xaml\n  summary: Gets a list of type arguments for cases where this <xref href=\"System.Xaml.XamlType\"></xref> represents a generic.\n  remarks: There are certain scenarios for a <xref:System.Xaml.XamlType> where calling the <xref:System.Xaml.XamlType.TypeArguments%2A> parameter returns a list where the types are still open. In this case, one or more of the returned <xref:System.Xaml.XamlType> values will have placeholder values for <xref:System.Xaml.XamlType.Name%2A?displayProperty=fullName>, such as `T`, to represent that the generic is still open. This scenario can occur if you get a <xref:System.Xaml.XamlType> from a call to <xref:System.Xaml.XamlSchemaContext.GetXamlType%2A>, instead of from a XAML reader implementation.\n  syntax:\n    content: public System.Collections.Generic.IList<System.Xaml.XamlType> TypeArguments { get; }\n    return:\n      type: System.Collections.Generic.IList{System.Xaml.XamlType}\n      description: A list of type argument types; otherwise, `null`, if this <xref href=\"System.Xaml.XamlType\"></xref> does not represent a generic.\n  overload: System.Xaml.XamlType.TypeArguments*\n  exceptions: []\n  version:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Xaml/XamlType.xml\n  ms.technology:\n  - dotnet-wpf\n  manager: martinek\n- uid: System.Xaml.XamlType.TypeConverter\n  commentId: P:System.Xaml.XamlType.TypeConverter\n  id: TypeConverter\n  parent: System.Xaml.XamlType\n  langs:\n  - csharp\n  name: TypeConverter\n  nameWithType: XamlType.TypeConverter\n  fullName: XamlType.TypeConverter\n  type: Property\n  assemblies:\n  - System.Xaml\n  namespace: System.Xaml\n  summary: Gets a <xref href=\"System.Xaml.Schema.XamlValueConverter`1\"></xref> with <xref href=\"System.ComponentModel.TypeConverter\"></xref> constraint that represents type conversion behavior for values of this <xref href=\"System.Xaml.XamlType\"></xref>.\n  remarks: If you do not use the default internal CLR reflection technique for a <xref:System.Xaml.XamlType>, calls to this property can invoke <xref:System.Xaml.XamlType.LookupTypeConverter%2A> overrides on <xref:System.Xaml.XamlType> derived classes. For more information about return values and other behavior, see the documentation for <xref:System.Xaml.XamlType.LookupTypeConverter%2A> on this type.\n  syntax:\n    content: public System.Xaml.Schema.XamlValueConverter<System.ComponentModel.TypeConverter> TypeConverter { get; }\n    return:\n      type: System.Xaml.Schema.XamlValueConverter{System.ComponentModel.TypeConverter}\n      description: A <xref href=\"System.Xaml.Schema.XamlValueConverter`1\"></xref> with <xref href=\"System.ComponentModel.TypeConverter\"></xref> constraint that represents type conversion behavior for values of this <xref href=\"System.Xaml.XamlType\"></xref>.\n  overload: System.Xaml.XamlType.TypeConverter*\n  exceptions: []\n  version:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Xaml/XamlType.xml\n  ms.technology:\n  - dotnet-wpf\n  manager: martinek\n- uid: System.Xaml.XamlType.UnderlyingType\n  commentId: P:System.Xaml.XamlType.UnderlyingType\n  id: UnderlyingType\n  parent: System.Xaml.XamlType\n  langs:\n  - csharp\n  name: UnderlyingType\n  nameWithType: XamlType.UnderlyingType\n  fullName: XamlType.UnderlyingType\n  type: Property\n  assemblies:\n  - System.Xaml\n  namespace: System.Xaml\n  summary: Gets the CLR <xref href=\"System.Type\"></xref> that underlies this <xref href=\"System.Xaml.XamlType\"></xref>.\n  syntax:\n    content: >-\n      [get: System.Security.SecuritySafeCritical]\n\n      public Type UnderlyingType { get; }\n    return:\n      type: System.Type\n      description: The CLR <xref href=\"System.Type\"></xref> that underlies this <xref href=\"System.Xaml.XamlType\"></xref>.\n  overload: System.Xaml.XamlType.UnderlyingType*\n  exceptions: []\n  attributes:\n  - type: 'get: System.Security.SecuritySafeCritical'\n  version:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Xaml/XamlType.xml\n  ms.technology:\n  - dotnet-wpf\n  manager: martinek\n- uid: System.Xaml.XamlType.ValueSerializer\n  commentId: P:System.Xaml.XamlType.ValueSerializer\n  id: ValueSerializer\n  parent: System.Xaml.XamlType\n  langs:\n  - csharp\n  name: ValueSerializer\n  nameWithType: XamlType.ValueSerializer\n  fullName: XamlType.ValueSerializer\n  type: Property\n  assemblies:\n  - System.Xaml\n  namespace: System.Xaml\n  summary: Gets a <xref href=\"System.Xaml.Schema.XamlValueConverter`1\"></xref> with <xref href=\"System.Windows.Markup.ValueSerializer\"></xref> constraint that represents value serialization behavior for values of this <xref href=\"System.Xaml.XamlType\"></xref>.\n  remarks: If you do not use the default internal CLR reflection technique for a <xref:System.Xaml.XamlType>, calls to this property can invoke <xref:System.Xaml.XamlType.LookupValueSerializer%2A> overrides on <xref:System.Xaml.XamlType> derived classes. For more information about return values and other behavior, see the documentation for <xref:System.Xaml.XamlType.LookupValueSerializer%2A> on this type.\n  syntax:\n    content: public System.Xaml.Schema.XamlValueConverter<System.Windows.Markup.ValueSerializer> ValueSerializer { get; }\n    return:\n      type: System.Xaml.Schema.XamlValueConverter{System.Windows.Markup.ValueSerializer}\n      description: A <xref href=\"System.Xaml.Schema.XamlValueConverter`1\"></xref> with <xref href=\"System.Windows.Markup.ValueSerializer\"></xref> constraint that represents value serialization behavior for values of this <xref href=\"System.Xaml.XamlType\"></xref>; otherwise, `null`.\n  overload: System.Xaml.XamlType.ValueSerializer*\n  exceptions: []\n  version:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Xaml/XamlType.xml\n  ms.technology:\n  - dotnet-wpf\n  manager: martinek\nreferences:\n- uid: System.Object\n  parent: System\n  isExternal: false\n  name: Object\n  nameWithType: Object\n  fullName: System.Object\n- uid: System.ArgumentNullException\n  parent: System\n  isExternal: false\n  name: ArgumentNullException\n  nameWithType: ArgumentNullException\n  fullName: System.ArgumentNullException\n- uid: System.Xaml.XamlType.#ctor(System.Type,System.Xaml.XamlSchemaContext)\n  parent: System.Xaml.XamlType\n  isExternal: false\n  name: XamlType(Type, XamlSchemaContext)\n  nameWithType: XamlType.XamlType(Type, XamlSchemaContext)\n  fullName: XamlType.XamlType(Type, XamlSchemaContext)\n- uid: System.Type\n  parent: System\n  isExternal: false\n  name: Type\n  nameWithType: Type\n  fullName: System.Type\n- uid: System.Xaml.XamlSchemaContext\n  parent: System.Xaml\n  isExternal: false\n  name: XamlSchemaContext\n  nameWithType: XamlSchemaContext\n  fullName: System.Xaml.XamlSchemaContext\n- uid: System.Xaml.XamlType.#ctor(System.String,System.Collections.Generic.IList{System.Xaml.XamlType},System.Xaml.XamlSchemaContext)\n  parent: System.Xaml.XamlType\n  isExternal: false\n  name: XamlType(String, IList<XamlType>, XamlSchemaContext)\n  nameWithType: XamlType.XamlType(String, IList<XamlType>, XamlSchemaContext)\n  fullName: XamlType.XamlType(String, IList<XamlType>, XamlSchemaContext)\n- uid: System.String\n  parent: System\n  isExternal: false\n  name: String\n  nameWithType: String\n  fullName: System.String\n- uid: System.Collections.Generic.IList`1\n  name: IList<T>\n  nameWithType: IList<T>\n  fullName: System.Collections.Generic.IList<T>\n- uid: System.Xaml.XamlType\n  name: XamlType\n  nameWithType: XamlType\n  fullName: System.Xaml.XamlType\n- uid: System.Collections.Generic.IList{System.Xaml.XamlType}\n  parent: System.Collections.Generic\n  isExternal: false\n  name: IList<XamlType>\n  nameWithType: IList<XamlType>\n  fullName: System.Collections.Generic.IList<System.Xaml.XamlType>\n  spec.csharp:\n  - uid: System.Collections.Generic.IList`1\n    name: IList\n    nameWithType: IList\n    fullName: System.Collections.Generic.IList\n  - name: <\n    nameWithType: <\n    fullName: <\n  - uid: System.Xaml.XamlType\n    name: XamlType\n    nameWithType: XamlType\n    fullName: System.Xaml.XamlType\n  - name: '>'\n    nameWithType: '>'\n    fullName: '>'\n- uid: System.Xaml.XamlType.#ctor(System.Type,System.Xaml.XamlSchemaContext,System.Xaml.Schema.XamlTypeInvoker)\n  parent: System.Xaml.XamlType\n  isExternal: false\n  name: XamlType(Type, XamlSchemaContext, XamlTypeInvoker)\n  nameWithType: XamlType.XamlType(Type, XamlSchemaContext, XamlTypeInvoker)\n  fullName: XamlType.XamlType(Type, XamlSchemaContext, XamlTypeInvoker)\n- uid: System.Xaml.Schema.XamlTypeInvoker\n  parent: System.Xaml.Schema\n  isExternal: false\n  name: XamlTypeInvoker\n  nameWithType: XamlTypeInvoker\n  fullName: System.Xaml.Schema.XamlTypeInvoker\n- uid: System.Xaml.XamlType.#ctor(System.String,System.String,System.Collections.Generic.IList{System.Xaml.XamlType},System.Xaml.XamlSchemaContext)\n  parent: System.Xaml.XamlType\n  isExternal: false\n  name: XamlType(String, String, IList<XamlType>, XamlSchemaContext)\n  nameWithType: XamlType.XamlType(String, String, IList<XamlType>, XamlSchemaContext)\n  fullName: XamlType.XamlType(String, String, IList<XamlType>, XamlSchemaContext)\n- uid: System.Xaml.XamlType.AllowedContentTypes\n  parent: System.Xaml.XamlType\n  isExternal: false\n  name: AllowedContentTypes\n  nameWithType: XamlType.AllowedContentTypes\n  fullName: XamlType.AllowedContentTypes\n- uid: System.Xaml.XamlType.BaseType\n  parent: System.Xaml.XamlType\n  isExternal: false\n  name: BaseType\n  nameWithType: XamlType.BaseType\n  fullName: XamlType.BaseType\n- uid: System.Xaml.XamlType.CanAssignTo(System.Xaml.XamlType)\n  parent: System.Xaml.XamlType\n  isExternal: false\n  name: CanAssignTo(XamlType)\n  nameWithType: XamlType.CanAssignTo(XamlType)\n  fullName: XamlType.CanAssignTo(XamlType)\n- uid: System.Boolean\n  parent: System\n  isExternal: false\n  name: Boolean\n  nameWithType: Boolean\n  fullName: System.Boolean\n- uid: System.Xaml.XamlType.ConstructionRequiresArguments\n  parent: System.Xaml.XamlType\n  isExternal: false\n  name: ConstructionRequiresArguments\n  nameWithType: XamlType.ConstructionRequiresArguments\n  fullName: XamlType.ConstructionRequiresArguments\n- uid: System.Xaml.XamlType.ContentProperty\n  parent: System.Xaml.XamlType\n  isExternal: false\n  name: ContentProperty\n  nameWithType: XamlType.ContentProperty\n  fullName: XamlType.ContentProperty\n- uid: System.Xaml.XamlMember\n  parent: System.Xaml\n  isExternal: false\n  name: XamlMember\n  nameWithType: XamlMember\n  fullName: System.Xaml.XamlMember\n- uid: System.Xaml.XamlType.ContentWrappers\n  parent: System.Xaml.XamlType\n  isExternal: false\n  name: ContentWrappers\n  nameWithType: XamlType.ContentWrappers\n  fullName: XamlType.ContentWrappers\n- uid: System.Xaml.XamlType.DeferringLoader\n  parent: System.Xaml.XamlType\n  isExternal: false\n  name: DeferringLoader\n  nameWithType: XamlType.DeferringLoader\n  fullName: XamlType.DeferringLoader\n- uid: System.Xaml.Schema.XamlValueConverter`1\n  name: XamlValueConverter<TConverterBase>\n  nameWithType: XamlValueConverter<TConverterBase>\n  fullName: System.Xaml.Schema.XamlValueConverter<TConverterBase>\n- uid: System.Xaml.XamlDeferringLoader\n  name: XamlDeferringLoader\n  nameWithType: XamlDeferringLoader\n  fullName: System.Xaml.XamlDeferringLoader\n- uid: System.Xaml.Schema.XamlValueConverter{System.Xaml.XamlDeferringLoader}\n  parent: System.Xaml.Schema\n  isExternal: false\n  name: XamlValueConverter<XamlDeferringLoader>\n  nameWithType: XamlValueConverter<XamlDeferringLoader>\n  fullName: System.Xaml.Schema.XamlValueConverter<System.Xaml.XamlDeferringLoader>\n  spec.csharp:\n  - uid: System.Xaml.Schema.XamlValueConverter`1\n    name: XamlValueConverter\n    nameWithType: XamlValueConverter\n    fullName: System.Xaml.Schema.XamlValueConverter\n  - name: <\n    nameWithType: <\n    fullName: <\n  - uid: System.Xaml.XamlDeferringLoader\n    name: XamlDeferringLoader\n    nameWithType: XamlDeferringLoader\n    fullName: System.Xaml.XamlDeferringLoader\n  - name: '>'\n    nameWithType: '>'\n    fullName: '>'\n- uid: System.Xaml.XamlType.Equals(System.Object)\n  parent: System.Xaml.XamlType\n  isExternal: false\n  name: Equals(Object)\n  nameWithType: XamlType.Equals(Object)\n  fullName: XamlType.Equals(Object)\n- uid: System.Xaml.XamlType.Equals(System.Xaml.XamlType)\n  parent: System.Xaml.XamlType\n  isExternal: false\n  name: Equals(XamlType)\n  nameWithType: XamlType.Equals(XamlType)\n  fullName: XamlType.Equals(XamlType)\n- uid: System.Xaml.XamlType.GetAliasedProperty(System.Xaml.XamlDirective)\n  parent: System.Xaml.XamlType\n  isExternal: false\n  name: GetAliasedProperty(XamlDirective)\n  nameWithType: XamlType.GetAliasedProperty(XamlDirective)\n  fullName: XamlType.GetAliasedProperty(XamlDirective)\n- uid: System.Xaml.XamlDirective\n  parent: System.Xaml\n  isExternal: false\n  name: XamlDirective\n  nameWithType: XamlDirective\n  fullName: System.Xaml.XamlDirective\n- uid: System.Xaml.XamlType.GetAllAttachableMembers\n  parent: System.Xaml.XamlType\n  isExternal: false\n  name: GetAllAttachableMembers()\n  nameWithType: XamlType.GetAllAttachableMembers()\n  fullName: XamlType.GetAllAttachableMembers()\n- uid: System.Collections.Generic.ICollection`1\n  name: ICollection<T>\n  nameWithType: ICollection<T>\n  fullName: System.Collections.Generic.ICollection<T>\n- uid: System.Collections.Generic.ICollection{System.Xaml.XamlMember}\n  parent: System.Collections.Generic\n  isExternal: false\n  name: ICollection<XamlMember>\n  nameWithType: ICollection<XamlMember>\n  fullName: System.Collections.Generic.ICollection<System.Xaml.XamlMember>\n  spec.csharp:\n  - uid: System.Collections.Generic.ICollection`1\n    name: ICollection\n    nameWithType: ICollection\n    fullName: System.Collections.Generic.ICollection\n  - name: <\n    nameWithType: <\n    fullName: <\n  - uid: System.Xaml.XamlMember\n    name: XamlMember\n    nameWithType: XamlMember\n    fullName: System.Xaml.XamlMember\n  - name: '>'\n    nameWithType: '>'\n    fullName: '>'\n- uid: System.Xaml.XamlType.GetAllMembers\n  parent: System.Xaml.XamlType\n  isExternal: false\n  name: GetAllMembers()\n  nameWithType: XamlType.GetAllMembers()\n  fullName: XamlType.GetAllMembers()\n- uid: System.Xaml.XamlType.GetAttachableMember(System.String)\n  parent: System.Xaml.XamlType\n  isExternal: false\n  name: GetAttachableMember(String)\n  nameWithType: XamlType.GetAttachableMember(String)\n  fullName: XamlType.GetAttachableMember(String)\n- uid: System.Xaml.XamlType.GetHashCode\n  parent: System.Xaml.XamlType\n  isExternal: false\n  name: GetHashCode()\n  nameWithType: XamlType.GetHashCode()\n  fullName: XamlType.GetHashCode()\n- uid: System.Int32\n  parent: System\n  isExternal: false\n  name: Int32\n  nameWithType: Int32\n  fullName: System.Int32\n- uid: System.Xaml.XamlType.GetMember(System.String)\n  parent: System.Xaml.XamlType\n  isExternal: false\n  name: GetMember(String)\n  nameWithType: XamlType.GetMember(String)\n  fullName: XamlType.GetMember(String)\n- uid: System.Xaml.XamlType.GetPositionalParameters(System.Int32)\n  parent: System.Xaml.XamlType\n  isExternal: false\n  name: GetPositionalParameters(Int32)\n  nameWithType: XamlType.GetPositionalParameters(Int32)\n  fullName: XamlType.GetPositionalParameters(Int32)\n- uid: System.Xaml.XamlType.GetXamlNamespaces\n  parent: System.Xaml.XamlType\n  isExternal: false\n  name: GetXamlNamespaces()\n  nameWithType: XamlType.GetXamlNamespaces()\n  fullName: XamlType.GetXamlNamespaces()\n- uid: System.Collections.Generic.IList{System.String}\n  parent: System.Collections.Generic\n  isExternal: false\n  name: IList<String>\n  nameWithType: IList<String>\n  fullName: System.Collections.Generic.IList<System.String>\n  spec.csharp:\n  - uid: System.Collections.Generic.IList`1\n    name: IList\n    nameWithType: IList\n    fullName: System.Collections.Generic.IList\n  - name: <\n    nameWithType: <\n    fullName: <\n  - uid: System.String\n    name: String\n    nameWithType: String\n    fullName: System.String\n  - name: '>'\n    nameWithType: '>'\n    fullName: '>'\n- uid: System.Xaml.XamlType.Invoker\n  parent: System.Xaml.XamlType\n  isExternal: false\n  name: Invoker\n  nameWithType: XamlType.Invoker\n  fullName: XamlType.Invoker\n- uid: System.Xaml.XamlType.IsAmbient\n  parent: System.Xaml.XamlType\n  isExternal: false\n  name: IsAmbient\n  nameWithType: XamlType.IsAmbient\n  fullName: XamlType.IsAmbient\n- uid: System.Xaml.XamlType.IsArray\n  parent: System.Xaml.XamlType\n  isExternal: false\n  name: IsArray\n  nameWithType: XamlType.IsArray\n  fullName: XamlType.IsArray\n- uid: System.Xaml.XamlType.IsCollection\n  parent: System.Xaml.XamlType\n  isExternal: false\n  name: IsCollection\n  nameWithType: XamlType.IsCollection\n  fullName: XamlType.IsCollection\n- uid: System.Xaml.XamlType.IsConstructible\n  parent: System.Xaml.XamlType\n  isExternal: false\n  name: IsConstructible\n  nameWithType: XamlType.IsConstructible\n  fullName: XamlType.IsConstructible\n- uid: System.Xaml.XamlType.IsDictionary\n  parent: System.Xaml.XamlType\n  isExternal: false\n  name: IsDictionary\n  nameWithType: XamlType.IsDictionary\n  fullName: XamlType.IsDictionary\n- uid: System.Xaml.XamlType.IsGeneric\n  parent: System.Xaml.XamlType\n  isExternal: false\n  name: IsGeneric\n  nameWithType: XamlType.IsGeneric\n  fullName: XamlType.IsGeneric\n- uid: System.Xaml.XamlType.IsMarkupExtension\n  parent: System.Xaml.XamlType\n  isExternal: false\n  name: IsMarkupExtension\n  nameWithType: XamlType.IsMarkupExtension\n  fullName: XamlType.IsMarkupExtension\n- uid: System.Xaml.XamlType.IsNameScope\n  parent: System.Xaml.XamlType\n  isExternal: false\n  name: IsNameScope\n  nameWithType: XamlType.IsNameScope\n  fullName: XamlType.IsNameScope\n- uid: System.Xaml.XamlType.IsNameValid\n  parent: System.Xaml.XamlType\n  isExternal: false\n  name: IsNameValid\n  nameWithType: XamlType.IsNameValid\n  fullName: XamlType.IsNameValid\n- uid: System.Xaml.XamlType.IsNullable\n  parent: System.Xaml.XamlType\n  isExternal: false\n  name: IsNullable\n  nameWithType: XamlType.IsNullable\n  fullName: XamlType.IsNullable\n- uid: System.Xaml.XamlType.IsPublic\n  parent: System.Xaml.XamlType\n  isExternal: false\n  name: IsPublic\n  nameWithType: XamlType.IsPublic\n  fullName: XamlType.IsPublic\n- uid: System.Xaml.XamlType.IsUnknown\n  parent: System.Xaml.XamlType\n  isExternal: false\n  name: IsUnknown\n  nameWithType: XamlType.IsUnknown\n  fullName: XamlType.IsUnknown\n- uid: System.Xaml.XamlType.IsUsableDuringInitialization\n  parent: System.Xaml.XamlType\n  isExternal: false\n  name: IsUsableDuringInitialization\n  nameWithType: XamlType.IsUsableDuringInitialization\n  fullName: XamlType.IsUsableDuringInitialization\n- uid: System.Xaml.XamlType.IsWhitespaceSignificantCollection\n  parent: System.Xaml.XamlType\n  isExternal: false\n  name: IsWhitespaceSignificantCollection\n  nameWithType: XamlType.IsWhitespaceSignificantCollection\n  fullName: XamlType.IsWhitespaceSignificantCollection\n- uid: System.Xaml.XamlType.IsXData\n  parent: System.Xaml.XamlType\n  isExternal: false\n  name: IsXData\n  nameWithType: XamlType.IsXData\n  fullName: XamlType.IsXData\n- uid: System.Xaml.XamlType.ItemType\n  parent: System.Xaml.XamlType\n  isExternal: false\n  name: ItemType\n  nameWithType: XamlType.ItemType\n  fullName: XamlType.ItemType\n- uid: System.Xaml.XamlType.KeyType\n  parent: System.Xaml.XamlType\n  isExternal: false\n  name: KeyType\n  nameWithType: XamlType.KeyType\n  fullName: XamlType.KeyType\n- uid: System.Xaml.XamlType.LookupAliasedProperty(System.Xaml.XamlDirective)\n  parent: System.Xaml.XamlType\n  isExternal: false\n  name: LookupAliasedProperty(XamlDirective)\n  nameWithType: XamlType.LookupAliasedProperty(XamlDirective)\n  fullName: XamlType.LookupAliasedProperty(XamlDirective)\n- uid: System.Xaml.XamlType.LookupAllAttachableMembers\n  parent: System.Xaml.XamlType\n  isExternal: false\n  name: LookupAllAttachableMembers()\n  nameWithType: XamlType.LookupAllAttachableMembers()\n  fullName: XamlType.LookupAllAttachableMembers()\n- uid: System.Collections.Generic.IEnumerable`1\n  name: IEnumerable<T>\n  nameWithType: IEnumerable<T>\n  fullName: System.Collections.Generic.IEnumerable<T>\n- uid: System.Collections.Generic.IEnumerable{System.Xaml.XamlMember}\n  parent: System.Collections.Generic\n  isExternal: false\n  name: IEnumerable<XamlMember>\n  nameWithType: IEnumerable<XamlMember>\n  fullName: System.Collections.Generic.IEnumerable<System.Xaml.XamlMember>\n  spec.csharp:\n  - uid: System.Collections.Generic.IEnumerable`1\n    name: IEnumerable\n    nameWithType: IEnumerable\n    fullName: System.Collections.Generic.IEnumerable\n  - name: <\n    nameWithType: <\n    fullName: <\n  - uid: System.Xaml.XamlMember\n    name: XamlMember\n    nameWithType: XamlMember\n    fullName: System.Xaml.XamlMember\n  - name: '>'\n    nameWithType: '>'\n    fullName: '>'\n- uid: System.Xaml.XamlType.LookupAllMembers\n  parent: System.Xaml.XamlType\n  isExternal: false\n  name: LookupAllMembers()\n  nameWithType: XamlType.LookupAllMembers()\n  fullName: XamlType.LookupAllMembers()\n- uid: System.Xaml.XamlType.LookupAllowedContentTypes\n  parent: System.Xaml.XamlType\n  isExternal: false\n  name: LookupAllowedContentTypes()\n  nameWithType: XamlType.LookupAllowedContentTypes()\n  fullName: XamlType.LookupAllowedContentTypes()\n- uid: System.Xaml.XamlType.LookupAttachableMember(System.String)\n  parent: System.Xaml.XamlType\n  isExternal: false\n  name: LookupAttachableMember(String)\n  nameWithType: XamlType.LookupAttachableMember(String)\n  fullName: XamlType.LookupAttachableMember(String)\n- uid: System.Xaml.XamlType.LookupBaseType\n  parent: System.Xaml.XamlType\n  isExternal: false\n  name: LookupBaseType()\n  nameWithType: XamlType.LookupBaseType()\n  fullName: XamlType.LookupBaseType()\n- uid: System.Xaml.XamlType.LookupCollectionKind\n  parent: System.Xaml.XamlType\n  isExternal: false\n  name: LookupCollectionKind()\n  nameWithType: XamlType.LookupCollectionKind()\n  fullName: XamlType.LookupCollectionKind()\n- uid: System.Xaml.Schema.XamlCollectionKind\n  parent: System.Xaml.Schema\n  isExternal: false\n  name: XamlCollectionKind\n  nameWithType: XamlCollectionKind\n  fullName: System.Xaml.Schema.XamlCollectionKind\n- uid: System.Xaml.XamlType.LookupConstructionRequiresArguments\n  parent: System.Xaml.XamlType\n  isExternal: false\n  name: LookupConstructionRequiresArguments()\n  nameWithType: XamlType.LookupConstructionRequiresArguments()\n  fullName: XamlType.LookupConstructionRequiresArguments()\n- uid: System.Xaml.XamlType.LookupContentProperty\n  parent: System.Xaml.XamlType\n  isExternal: false\n  name: LookupContentProperty()\n  nameWithType: XamlType.LookupContentProperty()\n  fullName: XamlType.LookupContentProperty()\n- uid: System.Xaml.XamlType.LookupContentWrappers\n  parent: System.Xaml.XamlType\n  isExternal: false\n  name: LookupContentWrappers()\n  nameWithType: XamlType.LookupContentWrappers()\n  fullName: XamlType.LookupContentWrappers()\n- uid: System.Xaml.XamlType.LookupCustomAttributeProvider\n  parent: System.Xaml.XamlType\n  isExternal: false\n  name: LookupCustomAttributeProvider()\n  nameWithType: XamlType.LookupCustomAttributeProvider()\n  fullName: XamlType.LookupCustomAttributeProvider()\n- uid: System.Reflection.ICustomAttributeProvider\n  parent: System.Reflection\n  isExternal: false\n  name: ICustomAttributeProvider\n  nameWithType: ICustomAttributeProvider\n  fullName: System.Reflection.ICustomAttributeProvider\n- uid: System.Xaml.XamlType.LookupDeferringLoader\n  parent: System.Xaml.XamlType\n  isExternal: false\n  name: LookupDeferringLoader()\n  nameWithType: XamlType.LookupDeferringLoader()\n  fullName: XamlType.LookupDeferringLoader()\n- uid: System.Xaml.XamlType.LookupInvoker\n  parent: System.Xaml.XamlType\n  isExternal: false\n  name: LookupInvoker()\n  nameWithType: XamlType.LookupInvoker()\n  fullName: XamlType.LookupInvoker()\n- uid: System.Xaml.XamlType.LookupIsAmbient\n  parent: System.Xaml.XamlType\n  isExternal: false\n  name: LookupIsAmbient()\n  nameWithType: XamlType.LookupIsAmbient()\n  fullName: XamlType.LookupIsAmbient()\n- uid: System.Xaml.XamlType.LookupIsConstructible\n  parent: System.Xaml.XamlType\n  isExternal: false\n  name: LookupIsConstructible()\n  nameWithType: XamlType.LookupIsConstructible()\n  fullName: XamlType.LookupIsConstructible()\n- uid: System.Xaml.XamlType.LookupIsMarkupExtension\n  parent: System.Xaml.XamlType\n  isExternal: false\n  name: LookupIsMarkupExtension()\n  nameWithType: XamlType.LookupIsMarkupExtension()\n  fullName: XamlType.LookupIsMarkupExtension()\n- uid: System.Xaml.XamlType.LookupIsNameScope\n  parent: System.Xaml.XamlType\n  isExternal: false\n  name: LookupIsNameScope()\n  nameWithType: XamlType.LookupIsNameScope()\n  fullName: XamlType.LookupIsNameScope()\n- uid: System.Xaml.XamlType.LookupIsNullable\n  parent: System.Xaml.XamlType\n  isExternal: false\n  name: LookupIsNullable()\n  nameWithType: XamlType.LookupIsNullable()\n  fullName: XamlType.LookupIsNullable()\n- uid: System.Xaml.XamlType.LookupIsPublic\n  parent: System.Xaml.XamlType\n  isExternal: false\n  name: LookupIsPublic()\n  nameWithType: XamlType.LookupIsPublic()\n  fullName: XamlType.LookupIsPublic()\n- uid: System.Xaml.XamlType.LookupIsUnknown\n  parent: System.Xaml.XamlType\n  isExternal: false\n  name: LookupIsUnknown()\n  nameWithType: XamlType.LookupIsUnknown()\n  fullName: XamlType.LookupIsUnknown()\n- uid: System.Xaml.XamlType.LookupIsWhitespaceSignificantCollection\n  parent: System.Xaml.XamlType\n  isExternal: false\n  name: LookupIsWhitespaceSignificantCollection()\n  nameWithType: XamlType.LookupIsWhitespaceSignificantCollection()\n  fullName: XamlType.LookupIsWhitespaceSignificantCollection()\n- uid: System.Xaml.XamlType.LookupIsXData\n  parent: System.Xaml.XamlType\n  isExternal: false\n  name: LookupIsXData()\n  nameWithType: XamlType.LookupIsXData()\n  fullName: XamlType.LookupIsXData()\n- uid: System.Xaml.XamlType.LookupItemType\n  parent: System.Xaml.XamlType\n  isExternal: false\n  name: LookupItemType()\n  nameWithType: XamlType.LookupItemType()\n  fullName: XamlType.LookupItemType()\n- uid: System.Xaml.XamlType.LookupKeyType\n  parent: System.Xaml.XamlType\n  isExternal: false\n  name: LookupKeyType()\n  nameWithType: XamlType.LookupKeyType()\n  fullName: XamlType.LookupKeyType()\n- uid: System.Xaml.XamlType.LookupMarkupExtensionReturnType\n  parent: System.Xaml.XamlType\n  isExternal: false\n  name: LookupMarkupExtensionReturnType()\n  nameWithType: XamlType.LookupMarkupExtensionReturnType()\n  fullName: XamlType.LookupMarkupExtensionReturnType()\n- uid: System.Xaml.XamlType.LookupMember(System.String,System.Boolean)\n  parent: System.Xaml.XamlType\n  isExternal: false\n  name: LookupMember(String, Boolean)\n  nameWithType: XamlType.LookupMember(String, Boolean)\n  fullName: XamlType.LookupMember(String, Boolean)\n- uid: System.Xaml.XamlType.LookupPositionalParameters(System.Int32)\n  parent: System.Xaml.XamlType\n  isExternal: false\n  name: LookupPositionalParameters(Int32)\n  nameWithType: XamlType.LookupPositionalParameters(Int32)\n  fullName: XamlType.LookupPositionalParameters(Int32)\n- uid: System.Xaml.XamlType.LookupSetMarkupExtensionHandler\n  parent: System.Xaml.XamlType\n  isExternal: false\n  name: LookupSetMarkupExtensionHandler()\n  nameWithType: XamlType.LookupSetMarkupExtensionHandler()\n  fullName: XamlType.LookupSetMarkupExtensionHandler()\n- uid: System.EventHandler`1\n  name: EventHandler<TEventArgs>\n  nameWithType: EventHandler<TEventArgs>\n  fullName: System.EventHandler<TEventArgs>\n- uid: System.Windows.Markup.XamlSetMarkupExtensionEventArgs\n  name: XamlSetMarkupExtensionEventArgs\n  nameWithType: XamlSetMarkupExtensionEventArgs\n  fullName: System.Windows.Markup.XamlSetMarkupExtensionEventArgs\n- uid: System.EventHandler{System.Windows.Markup.XamlSetMarkupExtensionEventArgs}\n  parent: System\n  isExternal: false\n  name: EventHandler<XamlSetMarkupExtensionEventArgs>\n  nameWithType: EventHandler<XamlSetMarkupExtensionEventArgs>\n  fullName: System.EventHandler<System.Windows.Markup.XamlSetMarkupExtensionEventArgs>\n  spec.csharp:\n  - uid: System.EventHandler`1\n    name: EventHandler\n    nameWithType: EventHandler\n    fullName: System.EventHandler\n  - name: <\n    nameWithType: <\n    fullName: <\n  - uid: System.Windows.Markup.XamlSetMarkupExtensionEventArgs\n    name: XamlSetMarkupExtensionEventArgs\n    nameWithType: XamlSetMarkupExtensionEventArgs\n    fullName: System.Windows.Markup.XamlSetMarkupExtensionEventArgs\n  - name: '>'\n    nameWithType: '>'\n    fullName: '>'\n- uid: System.Xaml.XamlType.LookupSetTypeConverterHandler\n  parent: System.Xaml.XamlType\n  isExternal: false\n  name: LookupSetTypeConverterHandler()\n  nameWithType: XamlType.LookupSetTypeConverterHandler()\n  fullName: XamlType.LookupSetTypeConverterHandler()\n- uid: System.Windows.Markup.XamlSetTypeConverterEventArgs\n  name: XamlSetTypeConverterEventArgs\n  nameWithType: XamlSetTypeConverterEventArgs\n  fullName: System.Windows.Markup.XamlSetTypeConverterEventArgs\n- uid: System.EventHandler{System.Windows.Markup.XamlSetTypeConverterEventArgs}\n  parent: System\n  isExternal: false\n  name: EventHandler<XamlSetTypeConverterEventArgs>\n  nameWithType: EventHandler<XamlSetTypeConverterEventArgs>\n  fullName: System.EventHandler<System.Windows.Markup.XamlSetTypeConverterEventArgs>\n  spec.csharp:\n  - uid: System.EventHandler`1\n    name: EventHandler\n    nameWithType: EventHandler\n    fullName: System.EventHandler\n  - name: <\n    nameWithType: <\n    fullName: <\n  - uid: System.Windows.Markup.XamlSetTypeConverterEventArgs\n    name: XamlSetTypeConverterEventArgs\n    nameWithType: XamlSetTypeConverterEventArgs\n    fullName: System.Windows.Markup.XamlSetTypeConverterEventArgs\n  - name: '>'\n    nameWithType: '>'\n    fullName: '>'\n- uid: System.Xaml.XamlType.LookupTrimSurroundingWhitespace\n  parent: System.Xaml.XamlType\n  isExternal: false\n  name: LookupTrimSurroundingWhitespace()\n  nameWithType: XamlType.LookupTrimSurroundingWhitespace()\n  fullName: XamlType.LookupTrimSurroundingWhitespace()\n- uid: System.Xaml.XamlType.LookupTypeConverter\n  parent: System.Xaml.XamlType\n  isExternal: false\n  name: LookupTypeConverter()\n  nameWithType: XamlType.LookupTypeConverter()\n  fullName: XamlType.LookupTypeConverter()\n- uid: System.ComponentModel.TypeConverter\n  name: TypeConverter\n  nameWithType: TypeConverter\n  fullName: System.ComponentModel.TypeConverter\n- uid: System.Xaml.Schema.XamlValueConverter{System.ComponentModel.TypeConverter}\n  parent: System.Xaml.Schema\n  isExternal: false\n  name: XamlValueConverter<TypeConverter>\n  nameWithType: XamlValueConverter<TypeConverter>\n  fullName: System.Xaml.Schema.XamlValueConverter<System.ComponentModel.TypeConverter>\n  spec.csharp:\n  - uid: System.Xaml.Schema.XamlValueConverter`1\n    name: XamlValueConverter\n    nameWithType: XamlValueConverter\n    fullName: System.Xaml.Schema.XamlValueConverter\n  - name: <\n    nameWithType: <\n    fullName: <\n  - uid: System.ComponentModel.TypeConverter\n    name: TypeConverter\n    nameWithType: TypeConverter\n    fullName: System.ComponentModel.TypeConverter\n  - name: '>'\n    nameWithType: '>'\n    fullName: '>'\n- uid: System.Xaml.XamlType.LookupUnderlyingType\n  parent: System.Xaml.XamlType\n  isExternal: false\n  name: LookupUnderlyingType()\n  nameWithType: XamlType.LookupUnderlyingType()\n  fullName: XamlType.LookupUnderlyingType()\n- uid: System.Xaml.XamlType.LookupUsableDuringInitialization\n  parent: System.Xaml.XamlType\n  isExternal: false\n  name: LookupUsableDuringInitialization()\n  nameWithType: XamlType.LookupUsableDuringInitialization()\n  fullName: XamlType.LookupUsableDuringInitialization()\n- uid: System.Xaml.XamlType.LookupValueSerializer\n  parent: System.Xaml.XamlType\n  isExternal: false\n  name: LookupValueSerializer()\n  nameWithType: XamlType.LookupValueSerializer()\n  fullName: XamlType.LookupValueSerializer()\n- uid: System.Windows.Markup.ValueSerializer\n  name: ValueSerializer\n  nameWithType: ValueSerializer\n  fullName: System.Windows.Markup.ValueSerializer\n- uid: System.Xaml.Schema.XamlValueConverter{System.Windows.Markup.ValueSerializer}\n  parent: System.Xaml.Schema\n  isExternal: false\n  name: XamlValueConverter<ValueSerializer>\n  nameWithType: XamlValueConverter<ValueSerializer>\n  fullName: System.Xaml.Schema.XamlValueConverter<System.Windows.Markup.ValueSerializer>\n  spec.csharp:\n  - uid: System.Xaml.Schema.XamlValueConverter`1\n    name: XamlValueConverter\n    nameWithType: XamlValueConverter\n    fullName: System.Xaml.Schema.XamlValueConverter\n  - name: <\n    nameWithType: <\n    fullName: <\n  - uid: System.Windows.Markup.ValueSerializer\n    name: ValueSerializer\n    nameWithType: ValueSerializer\n    fullName: System.Windows.Markup.ValueSerializer\n  - name: '>'\n    nameWithType: '>'\n    fullName: '>'\n- uid: System.Xaml.XamlType.MarkupExtensionReturnType\n  parent: System.Xaml.XamlType\n  isExternal: false\n  name: MarkupExtensionReturnType\n  nameWithType: XamlType.MarkupExtensionReturnType\n  fullName: XamlType.MarkupExtensionReturnType\n- uid: System.Xaml.XamlType.Name\n  parent: System.Xaml.XamlType\n  isExternal: false\n  name: Name\n  nameWithType: XamlType.Name\n  fullName: XamlType.Name\n- uid: System.Xaml.XamlType.op_Equality(System.Xaml.XamlType,System.Xaml.XamlType)\n  parent: System.Xaml.XamlType\n  isExternal: false\n  name: op_Equality(XamlType, XamlType)\n  nameWithType: XamlType.op_Equality(XamlType, XamlType)\n  fullName: XamlType.op_Equality(XamlType, XamlType)\n- uid: System.Xaml.XamlType.op_Inequality(System.Xaml.XamlType,System.Xaml.XamlType)\n  parent: System.Xaml.XamlType\n  isExternal: false\n  name: op_Inequality(XamlType, XamlType)\n  nameWithType: XamlType.op_Inequality(XamlType, XamlType)\n  fullName: XamlType.op_Inequality(XamlType, XamlType)\n- uid: System.Xaml.XamlType.PreferredXamlNamespace\n  parent: System.Xaml.XamlType\n  isExternal: false\n  name: PreferredXamlNamespace\n  nameWithType: XamlType.PreferredXamlNamespace\n  fullName: XamlType.PreferredXamlNamespace\n- uid: System.Xaml.XamlType.SchemaContext\n  parent: System.Xaml.XamlType\n  isExternal: false\n  name: SchemaContext\n  nameWithType: XamlType.SchemaContext\n  fullName: XamlType.SchemaContext\n- uid: System.Xaml.XamlType.ToString\n  parent: System.Xaml.XamlType\n  isExternal: false\n  name: ToString()\n  nameWithType: XamlType.ToString()\n  fullName: XamlType.ToString()\n- uid: System.Xaml.XamlType.TrimSurroundingWhitespace\n  parent: System.Xaml.XamlType\n  isExternal: false\n  name: TrimSurroundingWhitespace\n  nameWithType: XamlType.TrimSurroundingWhitespace\n  fullName: XamlType.TrimSurroundingWhitespace\n- uid: System.Xaml.XamlType.TypeArguments\n  parent: System.Xaml.XamlType\n  isExternal: false\n  name: TypeArguments\n  nameWithType: XamlType.TypeArguments\n  fullName: XamlType.TypeArguments\n- uid: System.Xaml.XamlType.TypeConverter\n  parent: System.Xaml.XamlType\n  isExternal: false\n  name: TypeConverter\n  nameWithType: XamlType.TypeConverter\n  fullName: XamlType.TypeConverter\n- uid: System.Xaml.XamlType.UnderlyingType\n  parent: System.Xaml.XamlType\n  isExternal: false\n  name: UnderlyingType\n  nameWithType: XamlType.UnderlyingType\n  fullName: XamlType.UnderlyingType\n- uid: System.Xaml.XamlType.ValueSerializer\n  parent: System.Xaml.XamlType\n  isExternal: false\n  name: ValueSerializer\n  nameWithType: XamlType.ValueSerializer\n  fullName: XamlType.ValueSerializer\n- uid: System.Xaml.XamlType.#ctor*\n  parent: System.Xaml.XamlType\n  isExternal: false\n  name: XamlType\n  nameWithType: XamlType.XamlType\n  fullName: XamlType.XamlType\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Xaml/XamlType.xml\n- uid: System.Xaml.XamlType.AllowedContentTypes*\n  parent: System.Xaml.XamlType\n  isExternal: false\n  name: AllowedContentTypes\n  nameWithType: XamlType.AllowedContentTypes\n  fullName: XamlType.AllowedContentTypes\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Xaml/XamlType.xml\n- uid: System.Xaml.XamlType.BaseType*\n  parent: System.Xaml.XamlType\n  isExternal: false\n  name: BaseType\n  nameWithType: XamlType.BaseType\n  fullName: XamlType.BaseType\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Xaml/XamlType.xml\n- uid: System.Xaml.XamlType.CanAssignTo*\n  parent: System.Xaml.XamlType\n  isExternal: false\n  name: CanAssignTo\n  nameWithType: XamlType.CanAssignTo\n  fullName: XamlType.CanAssignTo\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Xaml/XamlType.xml\n- uid: System.Xaml.XamlType.ConstructionRequiresArguments*\n  parent: System.Xaml.XamlType\n  isExternal: false\n  name: ConstructionRequiresArguments\n  nameWithType: XamlType.ConstructionRequiresArguments\n  fullName: XamlType.ConstructionRequiresArguments\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Xaml/XamlType.xml\n- uid: System.Xaml.XamlType.ContentProperty*\n  parent: System.Xaml.XamlType\n  isExternal: false\n  name: ContentProperty\n  nameWithType: XamlType.ContentProperty\n  fullName: XamlType.ContentProperty\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Xaml/XamlType.xml\n- uid: System.Xaml.XamlType.ContentWrappers*\n  parent: System.Xaml.XamlType\n  isExternal: false\n  name: ContentWrappers\n  nameWithType: XamlType.ContentWrappers\n  fullName: XamlType.ContentWrappers\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Xaml/XamlType.xml\n- uid: System.Xaml.XamlType.DeferringLoader*\n  parent: System.Xaml.XamlType\n  isExternal: false\n  name: DeferringLoader\n  nameWithType: XamlType.DeferringLoader\n  fullName: XamlType.DeferringLoader\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Xaml/XamlType.xml\n- uid: System.Xaml.XamlType.Equals*\n  parent: System.Xaml.XamlType\n  isExternal: false\n  name: Equals\n  nameWithType: XamlType.Equals\n  fullName: XamlType.Equals\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Xaml/XamlType.xml\n- uid: System.Xaml.XamlType.GetAliasedProperty*\n  parent: System.Xaml.XamlType\n  isExternal: false\n  name: GetAliasedProperty\n  nameWithType: XamlType.GetAliasedProperty\n  fullName: XamlType.GetAliasedProperty\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Xaml/XamlType.xml\n- uid: System.Xaml.XamlType.GetAllAttachableMembers*\n  parent: System.Xaml.XamlType\n  isExternal: false\n  name: GetAllAttachableMembers\n  nameWithType: XamlType.GetAllAttachableMembers\n  fullName: XamlType.GetAllAttachableMembers\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Xaml/XamlType.xml\n- uid: System.Xaml.XamlType.GetAllMembers*\n  parent: System.Xaml.XamlType\n  isExternal: false\n  name: GetAllMembers\n  nameWithType: XamlType.GetAllMembers\n  fullName: XamlType.GetAllMembers\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Xaml/XamlType.xml\n- uid: System.Xaml.XamlType.GetAttachableMember*\n  parent: System.Xaml.XamlType\n  isExternal: false\n  name: GetAttachableMember\n  nameWithType: XamlType.GetAttachableMember\n  fullName: XamlType.GetAttachableMember\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Xaml/XamlType.xml\n- uid: System.Xaml.XamlType.GetHashCode*\n  parent: System.Xaml.XamlType\n  isExternal: false\n  name: GetHashCode\n  nameWithType: XamlType.GetHashCode\n  fullName: XamlType.GetHashCode\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Xaml/XamlType.xml\n- uid: System.Xaml.XamlType.GetMember*\n  parent: System.Xaml.XamlType\n  isExternal: false\n  name: GetMember\n  nameWithType: XamlType.GetMember\n  fullName: XamlType.GetMember\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Xaml/XamlType.xml\n- uid: System.Xaml.XamlType.GetPositionalParameters*\n  parent: System.Xaml.XamlType\n  isExternal: false\n  name: GetPositionalParameters\n  nameWithType: XamlType.GetPositionalParameters\n  fullName: XamlType.GetPositionalParameters\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Xaml/XamlType.xml\n- uid: System.Xaml.XamlType.GetXamlNamespaces*\n  parent: System.Xaml.XamlType\n  isExternal: false\n  name: GetXamlNamespaces\n  nameWithType: XamlType.GetXamlNamespaces\n  fullName: XamlType.GetXamlNamespaces\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Xaml/XamlType.xml\n- uid: System.Xaml.XamlType.Invoker*\n  parent: System.Xaml.XamlType\n  isExternal: false\n  name: Invoker\n  nameWithType: XamlType.Invoker\n  fullName: XamlType.Invoker\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Xaml/XamlType.xml\n- uid: System.Xaml.XamlType.IsAmbient*\n  parent: System.Xaml.XamlType\n  isExternal: false\n  name: IsAmbient\n  nameWithType: XamlType.IsAmbient\n  fullName: XamlType.IsAmbient\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Xaml/XamlType.xml\n- uid: System.Xaml.XamlType.IsArray*\n  parent: System.Xaml.XamlType\n  isExternal: false\n  name: IsArray\n  nameWithType: XamlType.IsArray\n  fullName: XamlType.IsArray\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Xaml/XamlType.xml\n- uid: System.Xaml.XamlType.IsCollection*\n  parent: System.Xaml.XamlType\n  isExternal: false\n  name: IsCollection\n  nameWithType: XamlType.IsCollection\n  fullName: XamlType.IsCollection\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Xaml/XamlType.xml\n- uid: System.Xaml.XamlType.IsConstructible*\n  parent: System.Xaml.XamlType\n  isExternal: false\n  name: IsConstructible\n  nameWithType: XamlType.IsConstructible\n  fullName: XamlType.IsConstructible\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Xaml/XamlType.xml\n- uid: System.Xaml.XamlType.IsDictionary*\n  parent: System.Xaml.XamlType\n  isExternal: false\n  name: IsDictionary\n  nameWithType: XamlType.IsDictionary\n  fullName: XamlType.IsDictionary\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Xaml/XamlType.xml\n- uid: System.Xaml.XamlType.IsGeneric*\n  parent: System.Xaml.XamlType\n  isExternal: false\n  name: IsGeneric\n  nameWithType: XamlType.IsGeneric\n  fullName: XamlType.IsGeneric\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Xaml/XamlType.xml\n- uid: System.Xaml.XamlType.IsMarkupExtension*\n  parent: System.Xaml.XamlType\n  isExternal: false\n  name: IsMarkupExtension\n  nameWithType: XamlType.IsMarkupExtension\n  fullName: XamlType.IsMarkupExtension\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Xaml/XamlType.xml\n- uid: System.Xaml.XamlType.IsNameScope*\n  parent: System.Xaml.XamlType\n  isExternal: false\n  name: IsNameScope\n  nameWithType: XamlType.IsNameScope\n  fullName: XamlType.IsNameScope\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Xaml/XamlType.xml\n- uid: System.Xaml.XamlType.IsNameValid*\n  parent: System.Xaml.XamlType\n  isExternal: false\n  name: IsNameValid\n  nameWithType: XamlType.IsNameValid\n  fullName: XamlType.IsNameValid\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Xaml/XamlType.xml\n- uid: System.Xaml.XamlType.IsNullable*\n  parent: System.Xaml.XamlType\n  isExternal: false\n  name: IsNullable\n  nameWithType: XamlType.IsNullable\n  fullName: XamlType.IsNullable\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Xaml/XamlType.xml\n- uid: System.Xaml.XamlType.IsPublic*\n  parent: System.Xaml.XamlType\n  isExternal: false\n  name: IsPublic\n  nameWithType: XamlType.IsPublic\n  fullName: XamlType.IsPublic\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Xaml/XamlType.xml\n- uid: System.Xaml.XamlType.IsUnknown*\n  parent: System.Xaml.XamlType\n  isExternal: false\n  name: IsUnknown\n  nameWithType: XamlType.IsUnknown\n  fullName: XamlType.IsUnknown\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Xaml/XamlType.xml\n- uid: System.Xaml.XamlType.IsUsableDuringInitialization*\n  parent: System.Xaml.XamlType\n  isExternal: false\n  name: IsUsableDuringInitialization\n  nameWithType: XamlType.IsUsableDuringInitialization\n  fullName: XamlType.IsUsableDuringInitialization\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Xaml/XamlType.xml\n- uid: System.Xaml.XamlType.IsWhitespaceSignificantCollection*\n  parent: System.Xaml.XamlType\n  isExternal: false\n  name: IsWhitespaceSignificantCollection\n  nameWithType: XamlType.IsWhitespaceSignificantCollection\n  fullName: XamlType.IsWhitespaceSignificantCollection\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Xaml/XamlType.xml\n- uid: System.Xaml.XamlType.IsXData*\n  parent: System.Xaml.XamlType\n  isExternal: false\n  name: IsXData\n  nameWithType: XamlType.IsXData\n  fullName: XamlType.IsXData\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Xaml/XamlType.xml\n- uid: System.Xaml.XamlType.ItemType*\n  parent: System.Xaml.XamlType\n  isExternal: false\n  name: ItemType\n  nameWithType: XamlType.ItemType\n  fullName: XamlType.ItemType\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Xaml/XamlType.xml\n- uid: System.Xaml.XamlType.KeyType*\n  parent: System.Xaml.XamlType\n  isExternal: false\n  name: KeyType\n  nameWithType: XamlType.KeyType\n  fullName: XamlType.KeyType\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Xaml/XamlType.xml\n- uid: System.Xaml.XamlType.LookupAliasedProperty*\n  parent: System.Xaml.XamlType\n  isExternal: false\n  name: LookupAliasedProperty\n  nameWithType: XamlType.LookupAliasedProperty\n  fullName: XamlType.LookupAliasedProperty\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Xaml/XamlType.xml\n- uid: System.Xaml.XamlType.LookupAllAttachableMembers*\n  parent: System.Xaml.XamlType\n  isExternal: false\n  name: LookupAllAttachableMembers\n  nameWithType: XamlType.LookupAllAttachableMembers\n  fullName: XamlType.LookupAllAttachableMembers\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Xaml/XamlType.xml\n- uid: System.Xaml.XamlType.LookupAllMembers*\n  parent: System.Xaml.XamlType\n  isExternal: false\n  name: LookupAllMembers\n  nameWithType: XamlType.LookupAllMembers\n  fullName: XamlType.LookupAllMembers\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Xaml/XamlType.xml\n- uid: System.Xaml.XamlType.LookupAllowedContentTypes*\n  parent: System.Xaml.XamlType\n  isExternal: false\n  name: LookupAllowedContentTypes\n  nameWithType: XamlType.LookupAllowedContentTypes\n  fullName: XamlType.LookupAllowedContentTypes\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Xaml/XamlType.xml\n- uid: System.Xaml.XamlType.LookupAttachableMember*\n  parent: System.Xaml.XamlType\n  isExternal: false\n  name: LookupAttachableMember\n  nameWithType: XamlType.LookupAttachableMember\n  fullName: XamlType.LookupAttachableMember\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Xaml/XamlType.xml\n- uid: System.Xaml.XamlType.LookupBaseType*\n  parent: System.Xaml.XamlType\n  isExternal: false\n  name: LookupBaseType\n  nameWithType: XamlType.LookupBaseType\n  fullName: XamlType.LookupBaseType\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Xaml/XamlType.xml\n- uid: System.Xaml.XamlType.LookupCollectionKind*\n  parent: System.Xaml.XamlType\n  isExternal: false\n  name: LookupCollectionKind\n  nameWithType: XamlType.LookupCollectionKind\n  fullName: XamlType.LookupCollectionKind\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Xaml/XamlType.xml\n- uid: System.Xaml.XamlType.LookupConstructionRequiresArguments*\n  parent: System.Xaml.XamlType\n  isExternal: false\n  name: LookupConstructionRequiresArguments\n  nameWithType: XamlType.LookupConstructionRequiresArguments\n  fullName: XamlType.LookupConstructionRequiresArguments\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Xaml/XamlType.xml\n- uid: System.Xaml.XamlType.LookupContentProperty*\n  parent: System.Xaml.XamlType\n  isExternal: false\n  name: LookupContentProperty\n  nameWithType: XamlType.LookupContentProperty\n  fullName: XamlType.LookupContentProperty\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Xaml/XamlType.xml\n- uid: System.Xaml.XamlType.LookupContentWrappers*\n  parent: System.Xaml.XamlType\n  isExternal: false\n  name: LookupContentWrappers\n  nameWithType: XamlType.LookupContentWrappers\n  fullName: XamlType.LookupContentWrappers\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Xaml/XamlType.xml\n- uid: System.Xaml.XamlType.LookupCustomAttributeProvider*\n  parent: System.Xaml.XamlType\n  isExternal: false\n  name: LookupCustomAttributeProvider\n  nameWithType: XamlType.LookupCustomAttributeProvider\n  fullName: XamlType.LookupCustomAttributeProvider\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Xaml/XamlType.xml\n- uid: System.Xaml.XamlType.LookupDeferringLoader*\n  parent: System.Xaml.XamlType\n  isExternal: false\n  name: LookupDeferringLoader\n  nameWithType: XamlType.LookupDeferringLoader\n  fullName: XamlType.LookupDeferringLoader\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Xaml/XamlType.xml\n- uid: System.Xaml.XamlType.LookupInvoker*\n  parent: System.Xaml.XamlType\n  isExternal: false\n  name: LookupInvoker\n  nameWithType: XamlType.LookupInvoker\n  fullName: XamlType.LookupInvoker\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Xaml/XamlType.xml\n- uid: System.Xaml.XamlType.LookupIsAmbient*\n  parent: System.Xaml.XamlType\n  isExternal: false\n  name: LookupIsAmbient\n  nameWithType: XamlType.LookupIsAmbient\n  fullName: XamlType.LookupIsAmbient\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Xaml/XamlType.xml\n- uid: System.Xaml.XamlType.LookupIsConstructible*\n  parent: System.Xaml.XamlType\n  isExternal: false\n  name: LookupIsConstructible\n  nameWithType: XamlType.LookupIsConstructible\n  fullName: XamlType.LookupIsConstructible\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Xaml/XamlType.xml\n- uid: System.Xaml.XamlType.LookupIsMarkupExtension*\n  parent: System.Xaml.XamlType\n  isExternal: false\n  name: LookupIsMarkupExtension\n  nameWithType: XamlType.LookupIsMarkupExtension\n  fullName: XamlType.LookupIsMarkupExtension\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Xaml/XamlType.xml\n- uid: System.Xaml.XamlType.LookupIsNameScope*\n  parent: System.Xaml.XamlType\n  isExternal: false\n  name: LookupIsNameScope\n  nameWithType: XamlType.LookupIsNameScope\n  fullName: XamlType.LookupIsNameScope\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Xaml/XamlType.xml\n- uid: System.Xaml.XamlType.LookupIsNullable*\n  parent: System.Xaml.XamlType\n  isExternal: false\n  name: LookupIsNullable\n  nameWithType: XamlType.LookupIsNullable\n  fullName: XamlType.LookupIsNullable\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Xaml/XamlType.xml\n- uid: System.Xaml.XamlType.LookupIsPublic*\n  parent: System.Xaml.XamlType\n  isExternal: false\n  name: LookupIsPublic\n  nameWithType: XamlType.LookupIsPublic\n  fullName: XamlType.LookupIsPublic\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Xaml/XamlType.xml\n- uid: System.Xaml.XamlType.LookupIsUnknown*\n  parent: System.Xaml.XamlType\n  isExternal: false\n  name: LookupIsUnknown\n  nameWithType: XamlType.LookupIsUnknown\n  fullName: XamlType.LookupIsUnknown\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Xaml/XamlType.xml\n- uid: System.Xaml.XamlType.LookupIsWhitespaceSignificantCollection*\n  parent: System.Xaml.XamlType\n  isExternal: false\n  name: LookupIsWhitespaceSignificantCollection\n  nameWithType: XamlType.LookupIsWhitespaceSignificantCollection\n  fullName: XamlType.LookupIsWhitespaceSignificantCollection\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Xaml/XamlType.xml\n- uid: System.Xaml.XamlType.LookupIsXData*\n  parent: System.Xaml.XamlType\n  isExternal: false\n  name: LookupIsXData\n  nameWithType: XamlType.LookupIsXData\n  fullName: XamlType.LookupIsXData\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Xaml/XamlType.xml\n- uid: System.Xaml.XamlType.LookupItemType*\n  parent: System.Xaml.XamlType\n  isExternal: false\n  name: LookupItemType\n  nameWithType: XamlType.LookupItemType\n  fullName: XamlType.LookupItemType\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Xaml/XamlType.xml\n- uid: System.Xaml.XamlType.LookupKeyType*\n  parent: System.Xaml.XamlType\n  isExternal: false\n  name: LookupKeyType\n  nameWithType: XamlType.LookupKeyType\n  fullName: XamlType.LookupKeyType\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Xaml/XamlType.xml\n- uid: System.Xaml.XamlType.LookupMarkupExtensionReturnType*\n  parent: System.Xaml.XamlType\n  isExternal: false\n  name: LookupMarkupExtensionReturnType\n  nameWithType: XamlType.LookupMarkupExtensionReturnType\n  fullName: XamlType.LookupMarkupExtensionReturnType\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Xaml/XamlType.xml\n- uid: System.Xaml.XamlType.LookupMember*\n  parent: System.Xaml.XamlType\n  isExternal: false\n  name: LookupMember\n  nameWithType: XamlType.LookupMember\n  fullName: XamlType.LookupMember\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Xaml/XamlType.xml\n- uid: System.Xaml.XamlType.LookupPositionalParameters*\n  parent: System.Xaml.XamlType\n  isExternal: false\n  name: LookupPositionalParameters\n  nameWithType: XamlType.LookupPositionalParameters\n  fullName: XamlType.LookupPositionalParameters\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Xaml/XamlType.xml\n- uid: System.Xaml.XamlType.LookupSetMarkupExtensionHandler*\n  parent: System.Xaml.XamlType\n  isExternal: false\n  name: LookupSetMarkupExtensionHandler\n  nameWithType: XamlType.LookupSetMarkupExtensionHandler\n  fullName: XamlType.LookupSetMarkupExtensionHandler\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Xaml/XamlType.xml\n- uid: System.Xaml.XamlType.LookupSetTypeConverterHandler*\n  parent: System.Xaml.XamlType\n  isExternal: false\n  name: LookupSetTypeConverterHandler\n  nameWithType: XamlType.LookupSetTypeConverterHandler\n  fullName: XamlType.LookupSetTypeConverterHandler\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Xaml/XamlType.xml\n- uid: System.Xaml.XamlType.LookupTrimSurroundingWhitespace*\n  parent: System.Xaml.XamlType\n  isExternal: false\n  name: LookupTrimSurroundingWhitespace\n  nameWithType: XamlType.LookupTrimSurroundingWhitespace\n  fullName: XamlType.LookupTrimSurroundingWhitespace\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Xaml/XamlType.xml\n- uid: System.Xaml.XamlType.LookupTypeConverter*\n  parent: System.Xaml.XamlType\n  isExternal: false\n  name: LookupTypeConverter\n  nameWithType: XamlType.LookupTypeConverter\n  fullName: XamlType.LookupTypeConverter\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Xaml/XamlType.xml\n- uid: System.Xaml.XamlType.LookupUnderlyingType*\n  parent: System.Xaml.XamlType\n  isExternal: false\n  name: LookupUnderlyingType\n  nameWithType: XamlType.LookupUnderlyingType\n  fullName: XamlType.LookupUnderlyingType\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Xaml/XamlType.xml\n- uid: System.Xaml.XamlType.LookupUsableDuringInitialization*\n  parent: System.Xaml.XamlType\n  isExternal: false\n  name: LookupUsableDuringInitialization\n  nameWithType: XamlType.LookupUsableDuringInitialization\n  fullName: XamlType.LookupUsableDuringInitialization\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Xaml/XamlType.xml\n- uid: System.Xaml.XamlType.LookupValueSerializer*\n  parent: System.Xaml.XamlType\n  isExternal: false\n  name: LookupValueSerializer\n  nameWithType: XamlType.LookupValueSerializer\n  fullName: XamlType.LookupValueSerializer\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Xaml/XamlType.xml\n- uid: System.Xaml.XamlType.MarkupExtensionReturnType*\n  parent: System.Xaml.XamlType\n  isExternal: false\n  name: MarkupExtensionReturnType\n  nameWithType: XamlType.MarkupExtensionReturnType\n  fullName: XamlType.MarkupExtensionReturnType\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Xaml/XamlType.xml\n- uid: System.Xaml.XamlType.Name*\n  parent: System.Xaml.XamlType\n  isExternal: false\n  name: Name\n  nameWithType: XamlType.Name\n  fullName: XamlType.Name\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Xaml/XamlType.xml\n- uid: System.Xaml.XamlType.op_Equality*\n  parent: System.Xaml.XamlType\n  isExternal: false\n  name: op_Equality\n  nameWithType: XamlType.op_Equality\n  fullName: XamlType.op_Equality\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Xaml/XamlType.xml\n- uid: System.Xaml.XamlType.op_Inequality*\n  parent: System.Xaml.XamlType\n  isExternal: false\n  name: op_Inequality\n  nameWithType: XamlType.op_Inequality\n  fullName: XamlType.op_Inequality\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Xaml/XamlType.xml\n- uid: System.Xaml.XamlType.PreferredXamlNamespace*\n  parent: System.Xaml.XamlType\n  isExternal: false\n  name: PreferredXamlNamespace\n  nameWithType: XamlType.PreferredXamlNamespace\n  fullName: XamlType.PreferredXamlNamespace\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Xaml/XamlType.xml\n- uid: System.Xaml.XamlType.SchemaContext*\n  parent: System.Xaml.XamlType\n  isExternal: false\n  name: SchemaContext\n  nameWithType: XamlType.SchemaContext\n  fullName: XamlType.SchemaContext\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Xaml/XamlType.xml\n- uid: System.Xaml.XamlType.ToString*\n  parent: System.Xaml.XamlType\n  isExternal: false\n  name: ToString\n  nameWithType: XamlType.ToString\n  fullName: XamlType.ToString\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Xaml/XamlType.xml\n- uid: System.Xaml.XamlType.TrimSurroundingWhitespace*\n  parent: System.Xaml.XamlType\n  isExternal: false\n  name: TrimSurroundingWhitespace\n  nameWithType: XamlType.TrimSurroundingWhitespace\n  fullName: XamlType.TrimSurroundingWhitespace\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Xaml/XamlType.xml\n- uid: System.Xaml.XamlType.TypeArguments*\n  parent: System.Xaml.XamlType\n  isExternal: false\n  name: TypeArguments\n  nameWithType: XamlType.TypeArguments\n  fullName: XamlType.TypeArguments\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Xaml/XamlType.xml\n- uid: System.Xaml.XamlType.TypeConverter*\n  parent: System.Xaml.XamlType\n  isExternal: false\n  name: TypeConverter\n  nameWithType: XamlType.TypeConverter\n  fullName: XamlType.TypeConverter\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Xaml/XamlType.xml\n- uid: System.Xaml.XamlType.UnderlyingType*\n  parent: System.Xaml.XamlType\n  isExternal: false\n  name: UnderlyingType\n  nameWithType: XamlType.UnderlyingType\n  fullName: XamlType.UnderlyingType\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Xaml/XamlType.xml\n- uid: System.Xaml.XamlType.ValueSerializer*\n  parent: System.Xaml.XamlType\n  isExternal: false\n  name: ValueSerializer\n  nameWithType: XamlType.ValueSerializer\n  fullName: XamlType.ValueSerializer\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Xaml/XamlType.xml\n- uid: System.Object.Equals(System.Object,System.Object)\n  parent: System.Object\n  isExternal: false\n  name: Equals(Object, Object)\n  nameWithType: Object.Equals(Object, Object)\n  fullName: Object.Equals(Object, Object)\n- uid: System.Object.GetType\n  parent: System.Object\n  isExternal: false\n  name: GetType()\n  nameWithType: Object.GetType()\n  fullName: Object.GetType()\n- uid: System.Object.MemberwiseClone\n  parent: System.Object\n  isExternal: false\n  name: MemberwiseClone()\n  nameWithType: Object.MemberwiseClone()\n  fullName: Object.MemberwiseClone()\n- uid: System.Object.ReferenceEquals(System.Object,System.Object)\n  parent: System.Object\n  isExternal: false\n  name: ReferenceEquals(Object, Object)\n  nameWithType: Object.ReferenceEquals(Object, Object)\n  fullName: Object.ReferenceEquals(Object, Object)\n- uid: System.IEquatable`1\n  name: IEquatable<T>\n  nameWithType: IEquatable<T>\n  fullName: System.IEquatable<T>\n- uid: System.IEquatable{System.Xaml.XamlType}\n  parent: System\n  isExternal: false\n  name: IEquatable<XamlType>\n  nameWithType: IEquatable<XamlType>\n  fullName: System.IEquatable<System.Xaml.XamlType>\n  spec.csharp:\n  - uid: System.IEquatable`1\n    name: IEquatable\n    nameWithType: IEquatable\n    fullName: System.IEquatable\n  - name: <\n    nameWithType: <\n    fullName: <\n  - uid: System.Xaml.XamlType\n    name: XamlType\n    nameWithType: XamlType\n    fullName: System.Xaml.XamlType\n  - name: '>'\n    nameWithType: '>'\n    fullName: '>'\n"}