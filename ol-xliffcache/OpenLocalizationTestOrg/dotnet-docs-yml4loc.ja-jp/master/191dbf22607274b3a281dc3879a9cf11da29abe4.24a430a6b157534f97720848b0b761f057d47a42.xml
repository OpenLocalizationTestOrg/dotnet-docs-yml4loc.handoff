{"nodes":[{"content":"Holds an exported value created by an <xref href=\"System.ComponentModel.Composition.ExportFactory`1\"></xref> object and a reference to a method to release that object.","nodes":[{"pos":[0,167],"content":"Holds an exported value created by an <ph id=\"ph1\">&lt;xref href=\"System.ComponentModel.Composition.ExportFactory`1\"&gt;&lt;/xref&gt;</ph> object and a reference to a method to release that object.","source":"Holds an exported value created by an <xref href=\"System.ComponentModel.Composition.ExportFactory`1\"></xref> object and a reference to a method to release that object."}],"pos":[729,897],"yaml":true},{"content":"> [!IMPORTANT]\n>  This type implements the <xref:System.IDisposable> interface. When you have finished using the type, you should dispose of it either directly or indirectly. To dispose of the type directly, call its <xref:System.IDisposable.Dispose%2A> method in a `try`/`catch` block. To dispose of it indirectly, use a language construct such as `using` (in C#) or `Using` (in Visual Basic). For more information, see the \"Using an Object that Implements IDisposable\" section in the <xref:System.IDisposable> interface topic.","nodes":[{"pos":[2,528],"content":"[!IMPORTANT]\n This type implements the <xref:System.IDisposable> interface. When you have finished using the type, you should dispose of it either directly or indirectly. To dispose of the type directly, call its <xref:System.IDisposable.Dispose%2A> method in a `try`/`catch` block. To dispose of it indirectly, use a language construct such as `using` (in C#) or `Using` (in Visual Basic). For more information, see the \"Using an Object that Implements IDisposable\" section in the <xref:System.IDisposable> interface topic.","leadings":["","> "],"nodes":[{"content":" This type implements the <xref:System.IDisposable> interface. When you have finished using the type, you should dispose of it either directly or indirectly. To dispose of the type directly, call its <xref:System.IDisposable.Dispose%2A> method in a `try`/`catch` block. To dispose of it indirectly, use a language construct such as `using` (in C#) or `Using` (in Visual Basic). For more information, see the \"Using an Object that Implements IDisposable\" section in the <xref:System.IDisposable> interface topic.","pos":[13,524],"nodes":[{"content":"This type implements the <ph id=\"ph1\">&lt;xref:System.IDisposable&gt;</ph> interface.","pos":[1,62],"source":" This type implements the <xref:System.IDisposable> interface."},{"content":"When you have finished using the type, you should dispose of it either directly or indirectly.","pos":[63,157]},{"content":"To dispose of the type directly, call its <ph id=\"ph1\">&lt;xref:System.IDisposable.Dispose%2A&gt;</ph> method in a <ph id=\"ph2\">`try`</ph><ph id=\"ph3\">/</ph><ph id=\"ph4\">`catch`</ph> block.","pos":[158,269],"source":" To dispose of the type directly, call its <xref:System.IDisposable.Dispose%2A> method in a `try`/`catch` block."},{"content":"To dispose of it indirectly, use a language construct such as <ph id=\"ph1\">`using`</ph> (in C#) or <ph id=\"ph2\">`Using`</ph> (in Visual Basic).","pos":[270,377],"source":" To dispose of it indirectly, use a language construct such as `using` (in C#) or `Using` (in Visual Basic)."},{"content":"For more information, see the \"Using an Object that Implements IDisposable\" section in the <ph id=\"ph1\">&lt;xref:System.IDisposable&gt;</ph> interface topic.","pos":[378,511],"source":" For more information, see the \"Using an Object that Implements IDisposable\" section in the <xref:System.IDisposable> interface topic."}]}]}],"pos":[908,1449],"yaml":true,"extradata":"MT"},{"content":"The type of the exported value.","nodes":[{"pos":[0,31],"content":"The type of the exported value.","nodes":[{"content":"The type of the exported value.","pos":[0,31]}]}],"pos":[1584,1616],"yaml":true},{"content":"Initializes a new instance of the <xref href=\"System.ComponentModel.Composition.ExportLifetimeContext`1\"></xref> class.","nodes":[{"pos":[0,119],"content":"Initializes a new instance of the <ph id=\"ph1\">&lt;xref href=\"System.ComponentModel.Composition.ExportLifetimeContext`1\"&gt;&lt;/xref&gt;</ph> class.","source":"Initializes a new instance of the <xref href=\"System.ComponentModel.Composition.ExportLifetimeContext`1\"></xref> class."}],"pos":[3292,3412],"yaml":true},{"content":"The exported value.","nodes":[{"pos":[0,19],"content":"The exported value.","nodes":[{"content":"The exported value.","pos":[0,19]}]}],"pos":[3562,3582],"yaml":true},{"content":"A reference to a method to release the object.","nodes":[{"pos":[0,46],"content":"A reference to a method to release the object.","nodes":[{"content":"A reference to a method to release the object.","pos":[0,46]}]}],"pos":[3651,3698],"yaml":true},{"content":"Releases all resources used by the current instance of the <xref href=\"System.ComponentModel.Composition.ExportLifetimeContext`1\"></xref> class, including its associated export.","nodes":[{"pos":[0,177],"content":"Releases all resources used by the current instance of the <ph id=\"ph1\">&lt;xref href=\"System.ComponentModel.Composition.ExportLifetimeContext`1\"&gt;&lt;/xref&gt;</ph> class, including its associated export.","source":"Releases all resources used by the current instance of the <xref href=\"System.ComponentModel.Composition.ExportLifetimeContext`1\"></xref> class, including its associated export."}],"pos":[4971,5149],"yaml":true},{"content":"Calling the `Dispose` method of a <xref:System.ComponentModel.Composition.ExportLifetimeContext%601> object calls the referenced method to release its associated export.  \n  \n Call `Dispose` when you are finished using the <xref:System.ComponentModel.Composition.ExportLifetimeContext%601>. The `Dispose` method leaves the <xref:System.ComponentModel.Composition.ExportLifetimeContext%601> in an unusable state. After calling `Dispose`, you must release all references to the <xref:System.ComponentModel.Composition.ExportLifetimeContext%601> so the garbage collector can reclaim the memory that the <xref:System.ComponentModel.Composition.ExportLifetimeContext%601> was occupying.  \n  \n For more information, see [Cleaning Up Unmanaged Resources](http://go.microsoft.com/fwlink/?LinkId=187455) and [Implementing a Dispose Method](http://go.microsoft.com/fwlink/?LinkId=187456).  \n  \n> [!NOTE]\n>  Always call `Dispose` before you release your last reference to the <xref:System.ComponentModel.Composition.ExportLifetimeContext%601>. Otherwise, the resources it is using will not be freed until the garbage collector calls the <xref:System.ComponentModel.Composition.ExportLifetimeContext%601> object's `Finalize` method.","nodes":[{"pos":[0,169],"content":"Calling the <ph id=\"ph1\">`Dispose`</ph> method of a <ph id=\"ph2\">&lt;xref:System.ComponentModel.Composition.ExportLifetimeContext%601&gt;</ph> object calls the referenced method to release its associated export.","source":"Calling the `Dispose` method of a <xref:System.ComponentModel.Composition.ExportLifetimeContext%601> object calls the referenced method to release its associated export."},{"pos":[176,681],"content":"Call `Dispose` when you are finished using the <xref:System.ComponentModel.Composition.ExportLifetimeContext%601>. The `Dispose` method leaves the <xref:System.ComponentModel.Composition.ExportLifetimeContext%601> in an unusable state. After calling `Dispose`, you must release all references to the <xref:System.ComponentModel.Composition.ExportLifetimeContext%601> so the garbage collector can reclaim the memory that the <xref:System.ComponentModel.Composition.ExportLifetimeContext%601> was occupying.","nodes":[{"content":"Call <ph id=\"ph1\">`Dispose`</ph> when you are finished using the <ph id=\"ph2\">&lt;xref:System.ComponentModel.Composition.ExportLifetimeContext%601&gt;</ph>.","pos":[0,114],"source":"Call `Dispose` when you are finished using the <xref:System.ComponentModel.Composition.ExportLifetimeContext%601>."},{"content":"The <ph id=\"ph1\">`Dispose`</ph> method leaves the <ph id=\"ph2\">&lt;xref:System.ComponentModel.Composition.ExportLifetimeContext%601&gt;</ph> in an unusable state.","pos":[115,235],"source":" The `Dispose` method leaves the <xref:System.ComponentModel.Composition.ExportLifetimeContext%601> in an unusable state."},{"content":"After calling <ph id=\"ph1\">`Dispose`</ph>, you must release all references to the <ph id=\"ph2\">&lt;xref:System.ComponentModel.Composition.ExportLifetimeContext%601&gt;</ph> so the garbage collector can reclaim the memory that the <ph id=\"ph3\">&lt;xref:System.ComponentModel.Composition.ExportLifetimeContext%601&gt;</ph> was occupying.","pos":[236,505],"source":" After calling `Dispose`, you must release all references to the <xref:System.ComponentModel.Composition.ExportLifetimeContext%601> so the garbage collector can reclaim the memory that the <xref:System.ComponentModel.Composition.ExportLifetimeContext%601> was occupying."}]},{"pos":[688,878],"content":"For more information, see <bpt id=\"p1\">[</bpt>Cleaning Up Unmanaged Resources<ept id=\"p1\">](http://go.microsoft.com/fwlink/?LinkId=187455)</ept> and <bpt id=\"p2\">[</bpt>Implementing a Dispose Method<ept id=\"p2\">](http://go.microsoft.com/fwlink/?LinkId=187456)</ept>.","source":"For more information, see [Cleaning Up Unmanaged Resources](http://go.microsoft.com/fwlink/?LinkId=187455) and [Implementing a Dispose Method](http://go.microsoft.com/fwlink/?LinkId=187456)."},{"pos":[886,1220],"content":"[!NOTE]\n Always call `Dispose` before you release your last reference to the <xref:System.ComponentModel.Composition.ExportLifetimeContext%601>. Otherwise, the resources it is using will not be freed until the garbage collector calls the <xref:System.ComponentModel.Composition.ExportLifetimeContext%601> object's `Finalize` method.","leadings":["","> "],"nodes":[{"content":" Always call `Dispose` before you release your last reference to the <xref:System.ComponentModel.Composition.ExportLifetimeContext%601>. Otherwise, the resources it is using will not be freed until the garbage collector calls the <xref:System.ComponentModel.Composition.ExportLifetimeContext%601> object's `Finalize` method.","pos":[8,332],"nodes":[{"content":"Always call <ph id=\"ph1\">`Dispose`</ph> before you release your last reference to the <ph id=\"ph2\">&lt;xref:System.ComponentModel.Composition.ExportLifetimeContext%601&gt;</ph>.","pos":[1,136],"source":" Always call `Dispose` before you release your last reference to the <xref:System.ComponentModel.Composition.ExportLifetimeContext%601>."},{"content":"Otherwise, the resources it is using will not be freed until the garbage collector calls the <ph id=\"ph1\">&lt;xref:System.ComponentModel.Composition.ExportLifetimeContext%601&gt;</ph> object's <ph id=\"ph2\">`Finalize`</ph> method.","pos":[137,324],"source":" Otherwise, the resources it is using will not be freed until the garbage collector calls the <xref:System.ComponentModel.Composition.ExportLifetimeContext%601> object's `Finalize` method."}]}]}],"pos":[5160,6390],"yaml":true,"extradata":"MT"},{"content":"Gets the exported value of a <xref href=\"System.ComponentModel.Composition.ExportFactory`1\"></xref> object.","nodes":[{"pos":[0,107],"content":"Gets the exported value of a <ph id=\"ph1\">&lt;xref href=\"System.ComponentModel.Composition.ExportFactory`1\"&gt;&lt;/xref&gt;</ph> object.","source":"Gets the exported value of a <xref href=\"System.ComponentModel.Composition.ExportFactory`1\"></xref> object."}],"pos":[7715,7823],"yaml":true},{"content":"The exported value.","nodes":[{"pos":[0,19],"content":"The exported value.","nodes":[{"content":"The exported value.","pos":[0,19]}]}],"pos":[7915,7935],"yaml":true}],"content":"### YamlMime:ManagedReference\nitems:\n- uid: System.ComponentModel.Composition.ExportLifetimeContext`1\n  commentId: T:System.ComponentModel.Composition.ExportLifetimeContext`1\n  id: ExportLifetimeContext`1\n  children:\n  - System.ComponentModel.Composition.ExportLifetimeContext`1.#ctor(`0,System.Action)\n  - System.ComponentModel.Composition.ExportLifetimeContext`1.Dispose\n  - System.ComponentModel.Composition.ExportLifetimeContext`1.Value\n  langs:\n  - csharp\n  name: ExportLifetimeContext<T>\n  nameWithType: ExportLifetimeContext<T>\n  fullName: System.ComponentModel.Composition.ExportLifetimeContext<T>\n  type: Class\n  assemblies:\n  - System.ComponentModel.Composition\n  namespace: System.ComponentModel.Composition\n  summary: Holds an exported value created by an <xref href=\"System.ComponentModel.Composition.ExportFactory`1\"></xref> object and a reference to a method to release that object.\n  remarks: >-\n    > [!IMPORTANT]\n\n    >  This type implements the <xref:System.IDisposable> interface. When you have finished using the type, you should dispose of it either directly or indirectly. To dispose of the type directly, call its <xref:System.IDisposable.Dispose%2A> method in a `try`/`catch` block. To dispose of it indirectly, use a language construct such as `using` (in C#) or `Using` (in Visual Basic). For more information, see the \"Using an Object that Implements IDisposable\" section in the <xref:System.IDisposable> interface topic.\n  syntax:\n    content: 'public sealed class ExportLifetimeContext<T> : IDisposable'\n    typeParameters:\n    - id: T\n      description: The type of the exported value.\n  inheritance:\n  - System.Object\n  implements:\n  - System.IDisposable\n  inheritedMembers:\n  - System.Object.Equals(System.Object)\n  - System.Object.Equals(System.Object,System.Object)\n  - System.Object.GetHashCode\n  - System.Object.GetType\n  - System.Object.MemberwiseClone\n  - System.Object.ReferenceEquals(System.Object,System.Object)\n  - System.Object.ToString\n  version:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.ComponentModel.Composition/ExportLifetimeContext`1.xml\n  ms.technology:\n  - dotnet-standard\n  author: rpetrusha\n  ms.author: ronpet\n  manager: wpickett\n- uid: System.ComponentModel.Composition.ExportLifetimeContext`1.#ctor(`0,System.Action)\n  commentId: M:System.ComponentModel.Composition.ExportLifetimeContext`1.#ctor(`0,System.Action)\n  id: '#ctor(`0,System.Action)'\n  parent: System.ComponentModel.Composition.ExportLifetimeContext`1\n  langs:\n  - csharp\n  name: ExportLifetimeContext<T>(T, Action)\n  nameWithType: ExportLifetimeContext<T>.ExportLifetimeContext<T>(T, Action)\n  fullName: ExportLifetimeContext<T>.ExportLifetimeContext<T>(T, Action)\n  type: Constructor\n  assemblies:\n  - System.ComponentModel.Composition\n  namespace: System.ComponentModel.Composition\n  summary: Initializes a new instance of the <xref href=\"System.ComponentModel.Composition.ExportLifetimeContext`1\"></xref> class.\n  syntax:\n    content: public ExportLifetimeContext (T value, Action disposeAction);\n    parameters:\n    - id: value\n      type: T\n      description: The exported value.\n    - id: disposeAction\n      type: System.Action\n      description: A reference to a method to release the object.\n  overload: System.ComponentModel.Composition.ExportLifetimeContext`1.#ctor*\n  exceptions: []\n  version:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.ComponentModel.Composition/ExportLifetimeContext`1.xml\n  ms.technology:\n  - dotnet-standard\n  author: rpetrusha\n  ms.author: ronpet\n  manager: wpickett\n- uid: System.ComponentModel.Composition.ExportLifetimeContext`1.Dispose\n  commentId: M:System.ComponentModel.Composition.ExportLifetimeContext`1.Dispose\n  id: Dispose\n  parent: System.ComponentModel.Composition.ExportLifetimeContext`1\n  langs:\n  - csharp\n  name: Dispose()\n  nameWithType: ExportLifetimeContext<T>.Dispose()\n  fullName: ExportLifetimeContext<T>.Dispose()\n  type: Method\n  assemblies:\n  - System.ComponentModel.Composition\n  namespace: System.ComponentModel.Composition\n  summary: Releases all resources used by the current instance of the <xref href=\"System.ComponentModel.Composition.ExportLifetimeContext`1\"></xref> class, including its associated export.\n  remarks: \"Calling the `Dispose` method of a <xref:System.ComponentModel.Composition.ExportLifetimeContext%601> object calls the referenced method to release its associated export.  \\n  \\n Call `Dispose` when you are finished using the <xref:System.ComponentModel.Composition.ExportLifetimeContext%601>. The `Dispose` method leaves the <xref:System.ComponentModel.Composition.ExportLifetimeContext%601> in an unusable state. After calling `Dispose`, you must release all references to the <xref:System.ComponentModel.Composition.ExportLifetimeContext%601> so the garbage collector can reclaim the memory that the <xref:System.ComponentModel.Composition.ExportLifetimeContext%601> was occupying.  \\n  \\n For more information, see [Cleaning Up Unmanaged Resources](http://go.microsoft.com/fwlink/?LinkId=187455) and [Implementing a Dispose Method](http://go.microsoft.com/fwlink/?LinkId=187456).  \\n  \\n> [!NOTE]\\n>  Always call `Dispose` before you release your last reference to the <xref:System.ComponentModel.Composition.ExportLifetimeContext%601>. Otherwise, the resources it is using will not be freed until the garbage collector calls the <xref:System.ComponentModel.Composition.ExportLifetimeContext%601> object's `Finalize` method.\"\n  syntax:\n    content: public void Dispose ();\n    parameters: []\n  overload: System.ComponentModel.Composition.ExportLifetimeContext`1.Dispose*\n  exceptions: []\n  version:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.ComponentModel.Composition/ExportLifetimeContext`1.xml\n  ms.technology:\n  - dotnet-standard\n  author: rpetrusha\n  ms.author: ronpet\n  manager: wpickett\n- uid: System.ComponentModel.Composition.ExportLifetimeContext`1.Value\n  commentId: P:System.ComponentModel.Composition.ExportLifetimeContext`1.Value\n  id: Value\n  parent: System.ComponentModel.Composition.ExportLifetimeContext`1\n  langs:\n  - csharp\n  name: Value\n  nameWithType: ExportLifetimeContext<T>.Value\n  fullName: ExportLifetimeContext<T>.Value\n  type: Property\n  assemblies:\n  - System.ComponentModel.Composition\n  namespace: System.ComponentModel.Composition\n  summary: Gets the exported value of a <xref href=\"System.ComponentModel.Composition.ExportFactory`1\"></xref> object.\n  syntax:\n    content: public T Value { get; }\n    return:\n      type: T\n      description: The exported value.\n  overload: System.ComponentModel.Composition.ExportLifetimeContext`1.Value*\n  exceptions: []\n  version:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.ComponentModel.Composition/ExportLifetimeContext`1.xml\n  ms.technology:\n  - dotnet-standard\n  author: rpetrusha\n  ms.author: ronpet\n  manager: wpickett\nreferences:\n- uid: System.Object\n  parent: System\n  isExternal: false\n  name: Object\n  nameWithType: Object\n  fullName: System.Object\n- uid: System.ComponentModel.Composition.ExportLifetimeContext`1.#ctor(`0,System.Action)\n  parent: System.ComponentModel.Composition.ExportLifetimeContext`1\n  isExternal: false\n  name: ExportLifetimeContext<T>(T, Action)\n  nameWithType: ExportLifetimeContext<T>.ExportLifetimeContext<T>(T, Action)\n  fullName: ExportLifetimeContext<T>.ExportLifetimeContext<T>(T, Action)\n- uid: T\n  isExternal: true\n  name: T\n  nameWithType: T\n  fullName: T\n- uid: System.Action\n  parent: System\n  isExternal: false\n  name: Action\n  nameWithType: Action\n  fullName: System.Action\n- uid: System.ComponentModel.Composition.ExportLifetimeContext`1.Dispose\n  parent: System.ComponentModel.Composition.ExportLifetimeContext`1\n  isExternal: false\n  name: Dispose()\n  nameWithType: ExportLifetimeContext<T>.Dispose()\n  fullName: ExportLifetimeContext<T>.Dispose()\n- uid: System.ComponentModel.Composition.ExportLifetimeContext`1.Value\n  parent: System.ComponentModel.Composition.ExportLifetimeContext`1\n  isExternal: false\n  name: Value\n  nameWithType: ExportLifetimeContext<T>.Value\n  fullName: ExportLifetimeContext<T>.Value\n- uid: System.ComponentModel.Composition.ExportLifetimeContext`1.#ctor*\n  parent: System.ComponentModel.Composition.ExportLifetimeContext`1\n  isExternal: false\n  name: ExportLifetimeContext<T>\n  nameWithType: ExportLifetimeContext<T>.ExportLifetimeContext<T>\n  fullName: ExportLifetimeContext<T>.ExportLifetimeContext<T>\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.ComponentModel.Composition/ExportLifetimeContext`1.xml\n- uid: System.ComponentModel.Composition.ExportLifetimeContext`1.Dispose*\n  parent: System.ComponentModel.Composition.ExportLifetimeContext`1\n  isExternal: false\n  name: Dispose\n  nameWithType: ExportLifetimeContext<T>.Dispose\n  fullName: ExportLifetimeContext<T>.Dispose\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.ComponentModel.Composition/ExportLifetimeContext`1.xml\n- uid: System.ComponentModel.Composition.ExportLifetimeContext`1.Value*\n  parent: System.ComponentModel.Composition.ExportLifetimeContext`1\n  isExternal: false\n  name: Value\n  nameWithType: ExportLifetimeContext<T>.Value\n  fullName: ExportLifetimeContext<T>.Value\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.ComponentModel.Composition/ExportLifetimeContext`1.xml\n- uid: System.Object.Equals(System.Object)\n  parent: System.Object\n  isExternal: false\n  name: Equals(Object)\n  nameWithType: Object.Equals(Object)\n  fullName: Object.Equals(Object)\n- uid: System.Object.Equals(System.Object,System.Object)\n  parent: System.Object\n  isExternal: false\n  name: Equals(Object, Object)\n  nameWithType: Object.Equals(Object, Object)\n  fullName: Object.Equals(Object, Object)\n- uid: System.Object.GetHashCode\n  parent: System.Object\n  isExternal: false\n  name: GetHashCode()\n  nameWithType: Object.GetHashCode()\n  fullName: Object.GetHashCode()\n- uid: System.Object.GetType\n  parent: System.Object\n  isExternal: false\n  name: GetType()\n  nameWithType: Object.GetType()\n  fullName: Object.GetType()\n- uid: System.Object.MemberwiseClone\n  parent: System.Object\n  isExternal: false\n  name: MemberwiseClone()\n  nameWithType: Object.MemberwiseClone()\n  fullName: Object.MemberwiseClone()\n- uid: System.Object.ReferenceEquals(System.Object,System.Object)\n  parent: System.Object\n  isExternal: false\n  name: ReferenceEquals(Object, Object)\n  nameWithType: Object.ReferenceEquals(Object, Object)\n  fullName: Object.ReferenceEquals(Object, Object)\n- uid: System.Object.ToString\n  parent: System.Object\n  isExternal: false\n  name: ToString()\n  nameWithType: Object.ToString()\n  fullName: Object.ToString()\n- uid: System.IDisposable\n  parent: System\n  isExternal: false\n  name: IDisposable\n  nameWithType: IDisposable\n  fullName: System.IDisposable\n"}