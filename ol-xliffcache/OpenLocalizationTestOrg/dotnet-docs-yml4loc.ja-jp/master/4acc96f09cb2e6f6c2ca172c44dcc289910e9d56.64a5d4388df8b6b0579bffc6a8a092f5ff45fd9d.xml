{"nodes":[{"content":"The `VbMath` module contains procedures used to perform mathematical operations.","nodes":[{"pos":[0,80],"content":"The <ph id=\"ph1\">`VbMath`</ph> module contains procedures used to perform mathematical operations.","source":"The `VbMath` module contains procedures used to perform mathematical operations."}],"pos":[530,611],"yaml":true},{"content":"This module supports the Visual Basic language keywords and run-time library members for generating random numbers.","nodes":[{"pos":[0,115],"content":"This module supports the Visual Basic language keywords and run-time library members for generating random numbers.","nodes":[{"content":"This module supports the Visual Basic language keywords and run-time library members for generating random numbers.","pos":[0,115]}]}],"pos":[622,738],"yaml":true,"extradata":"MT"},{"content":"Initializes the random-number generator.","nodes":[{"pos":[0,40],"content":"Initializes the random-number generator.","nodes":[{"content":"Initializes the random-number generator.","pos":[0,40]}]}],"pos":[2375,2416],"yaml":true},{"content":"This overload of the `Randomize` method does not take a seed value. Instead, the value returned by the system timer is used as the new seed value.  \n  \n If `Randomize` is not used, the `Rnd` function (with no arguments) uses the same number as a seed the first time it is called, and thereafter uses the last-generated number as a seed value.  \n  \n> [!NOTE]\n>  To repeat sequences of random numbers, call `Rnd` with a negative argument immediately before using `Randomize` with a numeric argument.  \n  \n> [!IMPORTANT]\n>  Because the `Random` statement and the `Rnd` function start with a seed value and generate numbers that fall within a finite range, the results may be predictable by someone who knows the algorithm used to generate them. Consequently, the `Random` statement and the `Rnd` function should not be used to generate random numbers for use in cryptography. For more information, see <xref:System.Security.Cryptography.RandomNumberGenerator>.","nodes":[{"pos":[0,146],"content":"This overload of the `Randomize` method does not take a seed value. Instead, the value returned by the system timer is used as the new seed value.","nodes":[{"content":"This overload of the <ph id=\"ph1\">`Randomize`</ph> method does not take a seed value.","pos":[0,67],"source":"This overload of the `Randomize` method does not take a seed value."},{"content":"Instead, the value returned by the system timer is used as the new seed value.","pos":[68,146]}]},{"pos":[153,342],"content":"If <ph id=\"ph1\">`Randomize`</ph> is not used, the <ph id=\"ph2\">`Rnd`</ph> function (with no arguments) uses the same number as a seed the first time it is called, and thereafter uses the last-generated number as a seed value.","source":"If `Randomize` is not used, the `Rnd` function (with no arguments) uses the same number as a seed the first time it is called, and thereafter uses the last-generated number as a seed value."},{"pos":[350,497],"content":"[!NOTE]\n To repeat sequences of random numbers, call `Rnd` with a negative argument immediately before using `Randomize` with a numeric argument.","leadings":["","> "],"nodes":[{"content":"To repeat sequences of random numbers, call <ph id=\"ph1\">`Rnd`</ph> with a negative argument immediately before using <ph id=\"ph2\">`Randomize`</ph> with a numeric argument.","pos":[9,145],"source":" To repeat sequences of random numbers, call `Rnd` with a negative argument immediately before using `Randomize` with a numeric argument."}]},{"pos":[505,957],"content":"[!IMPORTANT]\n Because the `Random` statement and the `Rnd` function start with a seed value and generate numbers that fall within a finite range, the results may be predictable by someone who knows the algorithm used to generate them. Consequently, the `Random` statement and the `Rnd` function should not be used to generate random numbers for use in cryptography. For more information, see <xref:System.Security.Cryptography.RandomNumberGenerator>.","leadings":["","> "],"nodes":[{"content":" Because the `Random` statement and the `Rnd` function start with a seed value and generate numbers that fall within a finite range, the results may be predictable by someone who knows the algorithm used to generate them. Consequently, the `Random` statement and the `Rnd` function should not be used to generate random numbers for use in cryptography. For more information, see <xref:System.Security.Cryptography.RandomNumberGenerator>.","pos":[13,450],"nodes":[{"content":"Because the <ph id=\"ph1\">`Random`</ph> statement and the <ph id=\"ph2\">`Rnd`</ph> function start with a seed value and generate numbers that fall within a finite range, the results may be predictable by someone who knows the algorithm used to generate them.","pos":[1,221],"source":" Because the `Random` statement and the `Rnd` function start with a seed value and generate numbers that fall within a finite range, the results may be predictable by someone who knows the algorithm used to generate them."},{"content":"Consequently, the <ph id=\"ph1\">`Random`</ph> statement and the <ph id=\"ph2\">`Rnd`</ph> function should not be used to generate random numbers for use in cryptography.","pos":[222,352],"source":" Consequently, the `Random` statement and the `Rnd` function should not be used to generate random numbers for use in cryptography."},{"content":"For more information, see <ph id=\"ph1\">&lt;xref:System.Security.Cryptography.RandomNumberGenerator&gt;</ph>.","pos":[353,437],"source":" For more information, see <xref:System.Security.Cryptography.RandomNumberGenerator>."}]}]}],"pos":[2427,3395],"yaml":true,"extradata":"MT"},{"content":"Initializes the random-number generator.","nodes":[{"pos":[0,40],"content":"Initializes the random-number generator.","nodes":[{"content":"Initializes the random-number generator.","pos":[0,40]}]}],"pos":[4804,4845],"yaml":true},{"content":"`Randomize` uses `Number` to initialize the `Rnd` function's random-number generator, giving it a new seed value. If you omit `Number`, the value returned by the system timer is used as the new seed value.  \n  \n If `Randomize` is not used, the `Rnd` function (with no arguments) uses the same number as a seed the first time it is called, and thereafter uses the last-generated number as a seed value.  \n  \n> [!NOTE]\n>  To repeat sequences of random numbers, call `Rnd` with a negative argument immediately before using `Randomize` with a numeric argument. Using `Randomize` with the same value for `Number` does not repeat the previous sequence.  \n  \n> [!IMPORTANT]\n>  Because the `Random` statement and the `Rnd` function start with a seed value and generate numbers that fall within a finite range, the results may be predictable by someone who knows the algorithm used to generate them. Consequently, the `Random` statement and the `Rnd` function should not be used to generate random numbers for use in cryptography. For more information, see <xref:System.Security.Cryptography.RandomNumberGenerator>.","nodes":[{"pos":[0,205],"content":"`Randomize` uses `Number` to initialize the `Rnd` function's random-number generator, giving it a new seed value. If you omit `Number`, the value returned by the system timer is used as the new seed value.","nodes":[{"content":"<ph id=\"ph1\">`Randomize`</ph> uses <ph id=\"ph2\">`Number`</ph> to initialize the <ph id=\"ph3\">`Rnd`</ph> function's random-number generator, giving it a new seed value.","pos":[0,113],"source":"`Randomize` uses `Number` to initialize the `Rnd` function's random-number generator, giving it a new seed value."},{"content":"If you omit <ph id=\"ph1\">`Number`</ph>, the value returned by the system timer is used as the new seed value.","pos":[114,205],"source":" If you omit `Number`, the value returned by the system timer is used as the new seed value."}]},{"pos":[212,401],"content":"If <ph id=\"ph1\">`Randomize`</ph> is not used, the <ph id=\"ph2\">`Rnd`</ph> function (with no arguments) uses the same number as a seed the first time it is called, and thereafter uses the last-generated number as a seed value.","source":"If `Randomize` is not used, the `Rnd` function (with no arguments) uses the same number as a seed the first time it is called, and thereafter uses the last-generated number as a seed value."},{"pos":[409,646],"content":"[!NOTE]\n To repeat sequences of random numbers, call `Rnd` with a negative argument immediately before using `Randomize` with a numeric argument. Using `Randomize` with the same value for `Number` does not repeat the previous sequence.","leadings":["","> "],"nodes":[{"content":" To repeat sequences of random numbers, call `Rnd` with a negative argument immediately before using `Randomize` with a numeric argument. Using `Randomize` with the same value for `Number` does not repeat the previous sequence.","pos":[8,235],"nodes":[{"content":"To repeat sequences of random numbers, call <ph id=\"ph1\">`Rnd`</ph> with a negative argument immediately before using <ph id=\"ph2\">`Randomize`</ph> with a numeric argument.","pos":[1,137],"source":" To repeat sequences of random numbers, call `Rnd` with a negative argument immediately before using `Randomize` with a numeric argument."},{"content":"Using <ph id=\"ph1\">`Randomize`</ph> with the same value for <ph id=\"ph2\">`Number`</ph> does not repeat the previous sequence.","pos":[138,227],"source":" Using `Randomize` with the same value for `Number` does not repeat the previous sequence."}]}]},{"pos":[654,1106],"content":"[!IMPORTANT]\n Because the `Random` statement and the `Rnd` function start with a seed value and generate numbers that fall within a finite range, the results may be predictable by someone who knows the algorithm used to generate them. Consequently, the `Random` statement and the `Rnd` function should not be used to generate random numbers for use in cryptography. For more information, see <xref:System.Security.Cryptography.RandomNumberGenerator>.","leadings":["","> "],"nodes":[{"content":" Because the `Random` statement and the `Rnd` function start with a seed value and generate numbers that fall within a finite range, the results may be predictable by someone who knows the algorithm used to generate them. Consequently, the `Random` statement and the `Rnd` function should not be used to generate random numbers for use in cryptography. For more information, see <xref:System.Security.Cryptography.RandomNumberGenerator>.","pos":[13,450],"nodes":[{"content":"Because the <ph id=\"ph1\">`Random`</ph> statement and the <ph id=\"ph2\">`Rnd`</ph> function start with a seed value and generate numbers that fall within a finite range, the results may be predictable by someone who knows the algorithm used to generate them.","pos":[1,221],"source":" Because the `Random` statement and the `Rnd` function start with a seed value and generate numbers that fall within a finite range, the results may be predictable by someone who knows the algorithm used to generate them."},{"content":"Consequently, the <ph id=\"ph1\">`Random`</ph> statement and the <ph id=\"ph2\">`Rnd`</ph> function should not be used to generate random numbers for use in cryptography.","pos":[222,352],"source":" Consequently, the `Random` statement and the `Rnd` function should not be used to generate random numbers for use in cryptography."},{"content":"For more information, see <ph id=\"ph1\">&lt;xref:System.Security.Cryptography.RandomNumberGenerator&gt;</ph>.","pos":[353,437],"source":" For more information, see <xref:System.Security.Cryptography.RandomNumberGenerator>."}]}]}],"pos":[4856,5973],"yaml":true,"extradata":"MT"},{"content":"Optional. An `Object` or any valid numeric expression.","nodes":[{"pos":[0,54],"content":"Optional. An `Object` or any valid numeric expression.","nodes":[{"content":"Optional.","pos":[0,9]},{"content":"An <ph id=\"ph1\">`Object`</ph> or any valid numeric expression.","pos":[10,54],"source":" An `Object` or any valid numeric expression."}]}],"pos":[6469,6524],"yaml":true},{"content":"Returns a random number of type `Single`.","nodes":[{"pos":[0,41],"content":"Returns a random number of type <ph id=\"ph1\">`Single`</ph>.","source":"Returns a random number of type `Single`."}],"pos":[7410,7452],"yaml":true},{"content":"The `Rnd` function returns a value less than 1, but greater than or equal to zero.  \n  \n Before calling `Rnd`, use the `Randomize` statement without an argument to initialize the random-number generator with a seed based on the system timer.  \n  \n To produce random integers in a given range, use the following formula.  \n  \n [!code-vb[VbVbalrMath#30](~/samples/snippets/visualbasic/VS_Snippets_VBCSharp/VbVbalrMath/VB/Class1.vb#30)]  \n  \n Here, `upperbound` is the highest number in the range, and `lowerbound` is the lowest number in the range.  \n  \n> [!NOTE]\n>  To repeat sequences of random numbers, call `Rnd` with a negative argument immediately before using `Randomize` with a numeric argument.  \n  \n> [!IMPORTANT]\n>  Because the `Random` statement and the `Rnd` function start with a seed value and generate numbers that fall within a finite range, the results may be predictable by someone who knows the algorithm used to generate them. Consequently, the `Random` statement and the `Rnd` function should not be used to generate random numbers for use in cryptography.","nodes":[{"pos":[0,82],"content":"The <ph id=\"ph1\">`Rnd`</ph> function returns a value less than 1, but greater than or equal to zero.","source":"The `Rnd` function returns a value less than 1, but greater than or equal to zero."},{"pos":[89,241],"content":"Before calling <ph id=\"ph1\">`Rnd`</ph>, use the <ph id=\"ph2\">`Randomize`</ph> statement without an argument to initialize the random-number generator with a seed based on the system timer.","source":"Before calling `Rnd`, use the `Randomize` statement without an argument to initialize the random-number generator with a seed based on the system timer."},{"pos":[248,319],"content":"To produce random integers in a given range, use the following formula.","nodes":[{"content":"To produce random integers in a given range, use the following formula.","pos":[0,71]}]},{"pos":[326,433],"content":"<bpt id=\"p1\">[!code-vb</bpt><bpt id=\"p2\">[</bpt>VbVbalrMath#30<ept id=\"p2\">](~/samples/snippets/visualbasic/VS_Snippets_VBCSharp/VbVbalrMath/VB/Class1.vb#30)</ept><ept id=\"p1\">]</ept>","source":"[!code-vb[VbVbalrMath#30](~/samples/snippets/visualbasic/VS_Snippets_VBCSharp/VbVbalrMath/VB/Class1.vb#30)]"},{"pos":[440,546],"content":"Here, <ph id=\"ph1\">`upperbound`</ph> is the highest number in the range, and <ph id=\"ph2\">`lowerbound`</ph> is the lowest number in the range.","source":"Here, `upperbound` is the highest number in the range, and `lowerbound` is the lowest number in the range."},{"pos":[554,701],"content":"[!NOTE]\n To repeat sequences of random numbers, call `Rnd` with a negative argument immediately before using `Randomize` with a numeric argument.","leadings":["","> "],"nodes":[{"content":"To repeat sequences of random numbers, call <ph id=\"ph1\">`Rnd`</ph> with a negative argument immediately before using <ph id=\"ph2\">`Randomize`</ph> with a numeric argument.","pos":[9,145],"source":" To repeat sequences of random numbers, call `Rnd` with a negative argument immediately before using `Randomize` with a numeric argument."}]},{"pos":[709,1076],"content":"[!IMPORTANT]\n Because the `Random` statement and the `Rnd` function start with a seed value and generate numbers that fall within a finite range, the results may be predictable by someone who knows the algorithm used to generate them. Consequently, the `Random` statement and the `Rnd` function should not be used to generate random numbers for use in cryptography.","leadings":["","> "],"nodes":[{"content":" Because the `Random` statement and the `Rnd` function start with a seed value and generate numbers that fall within a finite range, the results may be predictable by someone who knows the algorithm used to generate them. Consequently, the `Random` statement and the `Rnd` function should not be used to generate random numbers for use in cryptography.","pos":[13,365],"nodes":[{"content":"Because the <ph id=\"ph1\">`Random`</ph> statement and the <ph id=\"ph2\">`Rnd`</ph> function start with a seed value and generate numbers that fall within a finite range, the results may be predictable by someone who knows the algorithm used to generate them.","pos":[1,221],"source":" Because the `Random` statement and the `Rnd` function start with a seed value and generate numbers that fall within a finite range, the results may be predictable by someone who knows the algorithm used to generate them."},{"content":"Consequently, the <ph id=\"ph1\">`Random`</ph> statement and the <ph id=\"ph2\">`Rnd`</ph> function should not be used to generate random numbers for use in cryptography.","pos":[222,352],"source":" Consequently, the `Random` statement and the `Rnd` function should not be used to generate random numbers for use in cryptography."}]}]}],"pos":[7463,8556],"yaml":true,"extradata":"MT"},{"content":"The next random number in the sequence.","nodes":[{"pos":[0,39],"content":"The next random number in the sequence.","nodes":[{"content":"The next random number in the sequence.","pos":[0,39]}]}],"pos":[8914,8954],"yaml":true},{"content":"Returns a random number of type `Single`.","nodes":[{"pos":[0,41],"content":"Returns a random number of type <ph id=\"ph1\">`Single`</ph>.","source":"Returns a random number of type `Single`."}],"pos":[9897,9939],"yaml":true},{"content":"The `Rnd` function returns a value less than 1, but greater than or equal to zero.  \n  \n The value of `Number` determines how `Rnd` generates a random number.  \n  \n For any given initial seed, the same number sequence is generated because each successive call to the `Rnd` function uses the previously generated number as a seed for the next number in the sequence.  \n  \n Before calling `Rnd`, use the `Randomize` statement without an argument to initialize the random-number generator with a seed based on the system timer.  \n  \n To produce random integers in a given range, use the following formula.  \n  \n [!code-vb[VbVbalrMath#30](~/samples/snippets/visualbasic/VS_Snippets_VBCSharp/VbVbalrMath/VB/Class1.vb#30)]  \n  \n Here, `upperbound` is the highest number in the range, and `lowerbound` is the lowest number in the range.  \n  \n> [!NOTE]\n>  To repeat sequences of random numbers, call `Rnd` with a negative argument immediately before using `Randomize` with a numeric argument. Using `Randomize` with the same value for `Number` does not repeat the previous sequence.  \n  \n> [!IMPORTANT]\n>  Because the `Random` statement and the `Rnd` function start with a seed value and generate numbers that fall within a finite range, the results may be predictable by someone who knows the algorithm used to generate them. Consequently, the `Random` statement and the `Rnd` function should not be used to generate random numbers for use in cryptography.","nodes":[{"pos":[0,82],"content":"The <ph id=\"ph1\">`Rnd`</ph> function returns a value less than 1, but greater than or equal to zero.","source":"The `Rnd` function returns a value less than 1, but greater than or equal to zero."},{"pos":[89,158],"content":"The value of <ph id=\"ph1\">`Number`</ph> determines how <ph id=\"ph2\">`Rnd`</ph> generates a random number.","source":"The value of `Number` determines how `Rnd` generates a random number."},{"pos":[165,365],"content":"For any given initial seed, the same number sequence is generated because each successive call to the <ph id=\"ph1\">`Rnd`</ph> function uses the previously generated number as a seed for the next number in the sequence.","source":"For any given initial seed, the same number sequence is generated because each successive call to the `Rnd` function uses the previously generated number as a seed for the next number in the sequence."},{"pos":[372,524],"content":"Before calling <ph id=\"ph1\">`Rnd`</ph>, use the <ph id=\"ph2\">`Randomize`</ph> statement without an argument to initialize the random-number generator with a seed based on the system timer.","source":"Before calling `Rnd`, use the `Randomize` statement without an argument to initialize the random-number generator with a seed based on the system timer."},{"pos":[531,602],"content":"To produce random integers in a given range, use the following formula.","nodes":[{"content":"To produce random integers in a given range, use the following formula.","pos":[0,71]}]},{"pos":[609,716],"content":"<bpt id=\"p1\">[!code-vb</bpt><bpt id=\"p2\">[</bpt>VbVbalrMath#30<ept id=\"p2\">](~/samples/snippets/visualbasic/VS_Snippets_VBCSharp/VbVbalrMath/VB/Class1.vb#30)</ept><ept id=\"p1\">]</ept>","source":"[!code-vb[VbVbalrMath#30](~/samples/snippets/visualbasic/VS_Snippets_VBCSharp/VbVbalrMath/VB/Class1.vb#30)]"},{"pos":[723,829],"content":"Here, <ph id=\"ph1\">`upperbound`</ph> is the highest number in the range, and <ph id=\"ph2\">`lowerbound`</ph> is the lowest number in the range.","source":"Here, `upperbound` is the highest number in the range, and `lowerbound` is the lowest number in the range."},{"pos":[837,1074],"content":"[!NOTE]\n To repeat sequences of random numbers, call `Rnd` with a negative argument immediately before using `Randomize` with a numeric argument. Using `Randomize` with the same value for `Number` does not repeat the previous sequence.","leadings":["","> "],"nodes":[{"content":" To repeat sequences of random numbers, call `Rnd` with a negative argument immediately before using `Randomize` with a numeric argument. Using `Randomize` with the same value for `Number` does not repeat the previous sequence.","pos":[8,235],"nodes":[{"content":"To repeat sequences of random numbers, call <ph id=\"ph1\">`Rnd`</ph> with a negative argument immediately before using <ph id=\"ph2\">`Randomize`</ph> with a numeric argument.","pos":[1,137],"source":" To repeat sequences of random numbers, call `Rnd` with a negative argument immediately before using `Randomize` with a numeric argument."},{"content":"Using <ph id=\"ph1\">`Randomize`</ph> with the same value for <ph id=\"ph2\">`Number`</ph> does not repeat the previous sequence.","pos":[138,227],"source":" Using `Randomize` with the same value for `Number` does not repeat the previous sequence."}]}]},{"pos":[1082,1449],"content":"[!IMPORTANT]\n Because the `Random` statement and the `Rnd` function start with a seed value and generate numbers that fall within a finite range, the results may be predictable by someone who knows the algorithm used to generate them. Consequently, the `Random` statement and the `Rnd` function should not be used to generate random numbers for use in cryptography.","leadings":["","> "],"nodes":[{"content":" Because the `Random` statement and the `Rnd` function start with a seed value and generate numbers that fall within a finite range, the results may be predictable by someone who knows the algorithm used to generate them. Consequently, the `Random` statement and the `Rnd` function should not be used to generate random numbers for use in cryptography.","pos":[13,365],"nodes":[{"content":"Because the <ph id=\"ph1\">`Random`</ph> statement and the <ph id=\"ph2\">`Rnd`</ph> function start with a seed value and generate numbers that fall within a finite range, the results may be predictable by someone who knows the algorithm used to generate them.","pos":[1,221],"source":" Because the `Random` statement and the `Rnd` function start with a seed value and generate numbers that fall within a finite range, the results may be predictable by someone who knows the algorithm used to generate them."},{"content":"Consequently, the <ph id=\"ph1\">`Random`</ph> statement and the <ph id=\"ph2\">`Rnd`</ph> function should not be used to generate random numbers for use in cryptography.","pos":[222,352],"source":" Consequently, the `Random` statement and the `Rnd` function should not be used to generate random numbers for use in cryptography."}]}]}],"pos":[9950,11420],"yaml":true,"extradata":"MT"},{"content":"Optional. A `Single` value or any valid `Single` expression.","nodes":[{"pos":[0,60],"content":"Optional. A `Single` value or any valid `Single` expression.","nodes":[{"content":"Optional.","pos":[0,9]},{"content":"A <ph id=\"ph1\">`Single`</ph> value or any valid <ph id=\"ph2\">`Single`</ph> expression.","pos":[10,60],"source":" A `Single` value or any valid `Single` expression."}]}],"pos":[11792,11853],"yaml":true},{"content":"If number is less than zero, Rnd generates the same number every time, using <code>Number</code> as the seed. If number is greater than zero, Rnd generates the next random number in the sequence. If number is equal to zero, Rnd generates the most recently generated number. If number is not supplied, Rnd generates the next random number in the sequence.","nodes":[{"pos":[0,354],"content":"If number is less than zero, Rnd generates the same number every time, using <code>Number</code> as the seed. If number is greater than zero, Rnd generates the next random number in the sequence. If number is equal to zero, Rnd generates the most recently generated number. If number is not supplied, Rnd generates the next random number in the sequence.","nodes":[{"content":"If number is less than zero, Rnd generates the same number every time, using <bpt id=\"p1\">&lt;code&gt;</bpt><ph id=\"ph1\">Number</ph><ept id=\"p1\">&lt;/code&gt;</ept> as the seed.","pos":[0,109],"source":"If number is less than zero, Rnd generates the same number every time, using <code>Number</code> as the seed."},{"content":"If number is greater than zero, Rnd generates the next random number in the sequence.","pos":[110,195]},{"content":"If number is equal to zero, Rnd generates the most recently generated number.","pos":[196,273]},{"content":"If number is not supplied, Rnd generates the next random number in the sequence.","pos":[274,354]}]}],"pos":[11910,12265],"yaml":true}],"content":"### YamlMime:ManagedReference\nitems:\n- uid: Microsoft.VisualBasic.VBMath\n  commentId: T:Microsoft.VisualBasic.VBMath\n  id: VBMath\n  children:\n  - Microsoft.VisualBasic.VBMath.Randomize\n  - Microsoft.VisualBasic.VBMath.Randomize(System.Double)\n  - Microsoft.VisualBasic.VBMath.Rnd\n  - Microsoft.VisualBasic.VBMath.Rnd(System.Single)\n  langs:\n  - csharp\n  name: VBMath\n  nameWithType: VBMath\n  fullName: Microsoft.VisualBasic.VBMath\n  type: Class\n  assemblies:\n  - Microsoft.VisualBasic\n  namespace: Microsoft.VisualBasic\n  summary: The `VbMath` module contains procedures used to perform mathematical operations.\n  remarks: This module supports the Visual Basic language keywords and run-time library members for generating random numbers.\n  example:\n  - \"This example uses the `Rnd` function to generate a random integer value in the range from 1 to 6.  \\n  \\n [!code-vb[VbVbalrMath#21](~/samples/snippets/visualbasic/VS_Snippets_VBCSharp/VbVbalrMath/VB/Class1.vb#21)]\"\n  syntax:\n    content: >-\n      [Microsoft.VisualBasic.CompilerServices.StandardModule]\n\n      public sealed class VBMath\n  inheritance:\n  - System.Object\n  implements: []\n  inheritedMembers:\n  - System.Object.Equals(System.Object)\n  - System.Object.Equals(System.Object,System.Object)\n  - System.Object.GetHashCode\n  - System.Object.GetType\n  - System.Object.MemberwiseClone\n  - System.Object.ReferenceEquals(System.Object,System.Object)\n  - System.Object.ToString\n  attributes:\n  - type: Microsoft.VisualBasic.CompilerServices.StandardModuleAttribute\n  version:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/Microsoft.VisualBasic/VBMath.xml\n  author: stevehoag\n  ms.author: shoag\n  manager: wpickett\n- uid: Microsoft.VisualBasic.VBMath.Randomize\n  commentId: M:Microsoft.VisualBasic.VBMath.Randomize\n  id: Randomize\n  parent: Microsoft.VisualBasic.VBMath\n  langs:\n  - csharp\n  name: Randomize()\n  nameWithType: VBMath.Randomize()\n  fullName: VBMath.Randomize()\n  type: Method\n  assemblies:\n  - Microsoft.VisualBasic\n  namespace: Microsoft.VisualBasic\n  summary: Initializes the random-number generator.\n  remarks: \"This overload of the `Randomize` method does not take a seed value. Instead, the value returned by the system timer is used as the new seed value.  \\n  \\n If `Randomize` is not used, the `Rnd` function (with no arguments) uses the same number as a seed the first time it is called, and thereafter uses the last-generated number as a seed value.  \\n  \\n> [!NOTE]\\n>  To repeat sequences of random numbers, call `Rnd` with a negative argument immediately before using `Randomize` with a numeric argument.  \\n  \\n> [!IMPORTANT]\\n>  Because the `Random` statement and the `Rnd` function start with a seed value and generate numbers that fall within a finite range, the results may be predictable by someone who knows the algorithm used to generate them. Consequently, the `Random` statement and the `Rnd` function should not be used to generate random numbers for use in cryptography. For more information, see <xref:System.Security.Cryptography.RandomNumberGenerator>.\"\n  example:\n  - \"This example uses the `Randomize` statement to initialize the random-number generator. Because the number argument has been omitted, `Randomize` uses the return value from the `Timer` function as the new seed value.  \\n  \\n [!code-vb[VbVbalrMath#21](~/samples/snippets/visualbasic/VS_Snippets_VBCSharp/VbVbalrMath/VB/Class1.vb#21)]\"\n  syntax:\n    content: public static void Randomize ();\n    parameters: []\n  overload: Microsoft.VisualBasic.VBMath.Randomize*\n  exceptions: []\n  version:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/Microsoft.VisualBasic/VBMath.xml\n  author: stevehoag\n  ms.author: shoag\n  manager: wpickett\n- uid: Microsoft.VisualBasic.VBMath.Randomize(System.Double)\n  commentId: M:Microsoft.VisualBasic.VBMath.Randomize(System.Double)\n  id: Randomize(System.Double)\n  parent: Microsoft.VisualBasic.VBMath\n  langs:\n  - csharp\n  name: Randomize(Double)\n  nameWithType: VBMath.Randomize(Double)\n  fullName: VBMath.Randomize(Double)\n  type: Method\n  assemblies:\n  - Microsoft.VisualBasic\n  namespace: Microsoft.VisualBasic\n  summary: Initializes the random-number generator.\n  remarks: \"`Randomize` uses `Number` to initialize the `Rnd` function's random-number generator, giving it a new seed value. If you omit `Number`, the value returned by the system timer is used as the new seed value.  \\n  \\n If `Randomize` is not used, the `Rnd` function (with no arguments) uses the same number as a seed the first time it is called, and thereafter uses the last-generated number as a seed value.  \\n  \\n> [!NOTE]\\n>  To repeat sequences of random numbers, call `Rnd` with a negative argument immediately before using `Randomize` with a numeric argument. Using `Randomize` with the same value for `Number` does not repeat the previous sequence.  \\n  \\n> [!IMPORTANT]\\n>  Because the `Random` statement and the `Rnd` function start with a seed value and generate numbers that fall within a finite range, the results may be predictable by someone who knows the algorithm used to generate them. Consequently, the `Random` statement and the `Rnd` function should not be used to generate random numbers for use in cryptography. For more information, see <xref:System.Security.Cryptography.RandomNumberGenerator>.\"\n  example:\n  - \"This example uses the `Randomize` statement to initialize the random-number generator. Because the number argument has been omitted, `Randomize` uses the return value from the `Timer` function as the new seed value.  \\n  \\n [!code-vb[VbVbalrMath#21](~/samples/snippets/visualbasic/VS_Snippets_VBCSharp/VbVbalrMath/VB/Class1.vb#21)]\"\n  syntax:\n    content: public static void Randomize (double Number);\n    parameters:\n    - id: Number\n      type: System.Double\n      description: Optional. An `Object` or any valid numeric expression.\n  overload: Microsoft.VisualBasic.VBMath.Randomize*\n  exceptions: []\n  version:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/Microsoft.VisualBasic/VBMath.xml\n  author: stevehoag\n  ms.author: shoag\n  manager: wpickett\n- uid: Microsoft.VisualBasic.VBMath.Rnd\n  commentId: M:Microsoft.VisualBasic.VBMath.Rnd\n  id: Rnd\n  parent: Microsoft.VisualBasic.VBMath\n  langs:\n  - csharp\n  name: Rnd()\n  nameWithType: VBMath.Rnd()\n  fullName: VBMath.Rnd()\n  type: Method\n  assemblies:\n  - Microsoft.VisualBasic\n  namespace: Microsoft.VisualBasic\n  summary: Returns a random number of type `Single`.\n  remarks: \"The `Rnd` function returns a value less than 1, but greater than or equal to zero.  \\n  \\n Before calling `Rnd`, use the `Randomize` statement without an argument to initialize the random-number generator with a seed based on the system timer.  \\n  \\n To produce random integers in a given range, use the following formula.  \\n  \\n [!code-vb[VbVbalrMath#30](~/samples/snippets/visualbasic/VS_Snippets_VBCSharp/VbVbalrMath/VB/Class1.vb#30)]  \\n  \\n Here, `upperbound` is the highest number in the range, and `lowerbound` is the lowest number in the range.  \\n  \\n> [!NOTE]\\n>  To repeat sequences of random numbers, call `Rnd` with a negative argument immediately before using `Randomize` with a numeric argument.  \\n  \\n> [!IMPORTANT]\\n>  Because the `Random` statement and the `Rnd` function start with a seed value and generate numbers that fall within a finite range, the results may be predictable by someone who knows the algorithm used to generate them. Consequently, the `Random` statement and the `Rnd` function should not be used to generate random numbers for use in cryptography.\"\n  example:\n  - \"This example uses the `Rnd` function to generate a random integer value in the range from 1 to 6.  \\n  \\n [!code-vb[VbVbalrMath#21](~/samples/snippets/visualbasic/VS_Snippets_VBCSharp/VbVbalrMath/VB/Class1.vb#21)]\"\n  syntax:\n    content: public static float Rnd ();\n    parameters: []\n    return:\n      type: System.Single\n      description: The next random number in the sequence.\n  overload: Microsoft.VisualBasic.VBMath.Rnd*\n  exceptions: []\n  version:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/Microsoft.VisualBasic/VBMath.xml\n  author: stevehoag\n  ms.author: shoag\n  manager: wpickett\n- uid: Microsoft.VisualBasic.VBMath.Rnd(System.Single)\n  commentId: M:Microsoft.VisualBasic.VBMath.Rnd(System.Single)\n  id: Rnd(System.Single)\n  parent: Microsoft.VisualBasic.VBMath\n  langs:\n  - csharp\n  name: Rnd(Single)\n  nameWithType: VBMath.Rnd(Single)\n  fullName: VBMath.Rnd(Single)\n  type: Method\n  assemblies:\n  - Microsoft.VisualBasic\n  namespace: Microsoft.VisualBasic\n  summary: Returns a random number of type `Single`.\n  remarks: \"The `Rnd` function returns a value less than 1, but greater than or equal to zero.  \\n  \\n The value of `Number` determines how `Rnd` generates a random number.  \\n  \\n For any given initial seed, the same number sequence is generated because each successive call to the `Rnd` function uses the previously generated number as a seed for the next number in the sequence.  \\n  \\n Before calling `Rnd`, use the `Randomize` statement without an argument to initialize the random-number generator with a seed based on the system timer.  \\n  \\n To produce random integers in a given range, use the following formula.  \\n  \\n [!code-vb[VbVbalrMath#30](~/samples/snippets/visualbasic/VS_Snippets_VBCSharp/VbVbalrMath/VB/Class1.vb#30)]  \\n  \\n Here, `upperbound` is the highest number in the range, and `lowerbound` is the lowest number in the range.  \\n  \\n> [!NOTE]\\n>  To repeat sequences of random numbers, call `Rnd` with a negative argument immediately before using `Randomize` with a numeric argument. Using `Randomize` with the same value for `Number` does not repeat the previous sequence.  \\n  \\n> [!IMPORTANT]\\n>  Because the `Random` statement and the `Rnd` function start with a seed value and generate numbers that fall within a finite range, the results may be predictable by someone who knows the algorithm used to generate them. Consequently, the `Random` statement and the `Rnd` function should not be used to generate random numbers for use in cryptography.\"\n  example:\n  - \"This example uses the `Rnd` function to generate a random integer value in the range from 1 to 6.  \\n  \\n [!code-vb[VbVbalrMath#21](~/samples/snippets/visualbasic/VS_Snippets_VBCSharp/VbVbalrMath/VB/Class1.vb#21)]\"\n  syntax:\n    content: public static float Rnd (float Number);\n    parameters:\n    - id: Number\n      type: System.Single\n      description: Optional. A `Single` value or any valid `Single` expression.\n    return:\n      type: System.Single\n      description: If number is less than zero, Rnd generates the same number every time, using <code>Number</code> as the seed. If number is greater than zero, Rnd generates the next random number in the sequence. If number is equal to zero, Rnd generates the most recently generated number. If number is not supplied, Rnd generates the next random number in the sequence.\n  overload: Microsoft.VisualBasic.VBMath.Rnd*\n  exceptions: []\n  version:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/Microsoft.VisualBasic/VBMath.xml\n  author: stevehoag\n  ms.author: shoag\n  manager: wpickett\nreferences:\n- uid: System.Object\n  parent: System\n  isExternal: false\n  name: Object\n  nameWithType: Object\n  fullName: System.Object\n- uid: Microsoft.VisualBasic.VBMath.Randomize\n  parent: Microsoft.VisualBasic.VBMath\n  isExternal: false\n  name: Randomize()\n  nameWithType: VBMath.Randomize()\n  fullName: VBMath.Randomize()\n- uid: Microsoft.VisualBasic.VBMath.Randomize(System.Double)\n  parent: Microsoft.VisualBasic.VBMath\n  isExternal: false\n  name: Randomize(Double)\n  nameWithType: VBMath.Randomize(Double)\n  fullName: VBMath.Randomize(Double)\n- uid: System.Double\n  parent: System\n  isExternal: false\n  name: Double\n  nameWithType: Double\n  fullName: System.Double\n- uid: Microsoft.VisualBasic.VBMath.Rnd\n  parent: Microsoft.VisualBasic.VBMath\n  isExternal: false\n  name: Rnd()\n  nameWithType: VBMath.Rnd()\n  fullName: VBMath.Rnd()\n- uid: System.Single\n  parent: System\n  isExternal: false\n  name: Single\n  nameWithType: Single\n  fullName: System.Single\n- uid: Microsoft.VisualBasic.VBMath.Rnd(System.Single)\n  parent: Microsoft.VisualBasic.VBMath\n  isExternal: false\n  name: Rnd(Single)\n  nameWithType: VBMath.Rnd(Single)\n  fullName: VBMath.Rnd(Single)\n- uid: Microsoft.VisualBasic.VBMath.Randomize*\n  parent: Microsoft.VisualBasic.VBMath\n  isExternal: false\n  name: Randomize\n  nameWithType: VBMath.Randomize\n  fullName: VBMath.Randomize\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/Microsoft.VisualBasic/VBMath.xml\n- uid: Microsoft.VisualBasic.VBMath.Rnd*\n  parent: Microsoft.VisualBasic.VBMath\n  isExternal: false\n  name: Rnd\n  nameWithType: VBMath.Rnd\n  fullName: VBMath.Rnd\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/Microsoft.VisualBasic/VBMath.xml\n- uid: System.Object.Equals(System.Object)\n  parent: System.Object\n  isExternal: false\n  name: Equals(Object)\n  nameWithType: Object.Equals(Object)\n  fullName: Object.Equals(Object)\n- uid: System.Object.Equals(System.Object,System.Object)\n  parent: System.Object\n  isExternal: false\n  name: Equals(Object, Object)\n  nameWithType: Object.Equals(Object, Object)\n  fullName: Object.Equals(Object, Object)\n- uid: System.Object.GetHashCode\n  parent: System.Object\n  isExternal: false\n  name: GetHashCode()\n  nameWithType: Object.GetHashCode()\n  fullName: Object.GetHashCode()\n- uid: System.Object.GetType\n  parent: System.Object\n  isExternal: false\n  name: GetType()\n  nameWithType: Object.GetType()\n  fullName: Object.GetType()\n- uid: System.Object.MemberwiseClone\n  parent: System.Object\n  isExternal: false\n  name: MemberwiseClone()\n  nameWithType: Object.MemberwiseClone()\n  fullName: Object.MemberwiseClone()\n- uid: System.Object.ReferenceEquals(System.Object,System.Object)\n  parent: System.Object\n  isExternal: false\n  name: ReferenceEquals(Object, Object)\n  nameWithType: Object.ReferenceEquals(Object, Object)\n  fullName: Object.ReferenceEquals(Object, Object)\n- uid: System.Object.ToString\n  parent: System.Object\n  isExternal: false\n  name: ToString()\n  nameWithType: Object.ToString()\n  fullName: Object.ToString()\n"}