{"nodes":[{"content":"Identifies whether a profile property can be set or accessed for an anonymous user.","nodes":[{"pos":[0,83],"content":"Identifies whether a profile property can be set or accessed for an anonymous user.","nodes":[{"content":"Identifies whether a profile property can be set or accessed for an anonymous user.","pos":[0,83]}]}],"pos":[679,763],"yaml":true},{"content":"The <xref:System.Web.Profile.SettingsAllowAnonymousAttribute> class is used to identify whether a property of a custom profile implementation can be accessed if the user is an anonymous user. For information about enabling anonymous identification, see the documentation provided for the  configuration element.  \n  \n If no <xref:System.Web.Profile.SettingsAllowAnonymousAttribute> is specified for a profile property, anonymous access of the profile property is not allowed.  \n  \n A custom profile implementation is a class that inherits from the <xref:System.Web.Profile.ProfileBase> abstract class and defines properties for the user profile that are not specified in the  configuration element. You can specify a custom user-profile type in the application's Web.config file with the `inherits` attribute of the  configuration element as shown in the following example.  \n  \n `<configuration>`  \n  \n `<connectionStrings>`  \n  \n `<add`  \n  \n `name=\"SqlServices\"`  \n  \n `connectionString=\"Data Source=localhost;Integrated Security=SSPI;Initial Catalog=aspnetdb;\" />`  \n  \n `</connectionStrings>`  \n  \n `<system.web>`  \n  \n `<authentication mode=\"Forms\" >`  \n  \n `<forms`  \n  \n `loginUrl=\"login.aspx\"`  \n  \n `name=\".ASPXFORMSAUTH\" />`  \n  \n `</authentication>`  \n  \n `<authorization>`  \n  \n `<deny users=\"?\" />`  \n  \n `</authorization>`  \n  \n `<profile inherits=\"Samples.AspNet.Profile.EmployeeProfile\"`  \n  \n `defaultProvider=\"SqlProvider\">`  \n  \n `<providers>`  \n  \n `<clear />`  \n  \n `<add`  \n  \n `name=\"SqlProvider\"`  \n  \n `type=\"System.Web.Profile.SqlProfileProvider\"`  \n  \n `connectionStringName=\"SqlServices\"`  \n  \n `description=\"SQL Profile Provider for Sample\"/>`  \n  \n `<add`  \n  \n `name=\"EmployeeInfoProvider\"`  \n  \n `type=\"System.Web.Profile.SqlProfileProvider\"`  \n  \n `connectionStringName=\"SqlServices\"`  \n  \n `description=\"SQL Profile Provider for Employee Info\"/>`  \n  \n `</providers>`  \n  \n `<properties>`  \n  \n `<add name=\"GarmentSize\" />`  \n  \n `</properties>`  \n  \n `</profile>`  \n  \n `</system.web>`  \n  \n `</configuration>`","nodes":[{"pos":[0,311],"content":"The <xref:System.Web.Profile.SettingsAllowAnonymousAttribute> class is used to identify whether a property of a custom profile implementation can be accessed if the user is an anonymous user. For information about enabling anonymous identification, see the documentation provided for the  configuration element.","nodes":[{"content":"The <xref:System.Web.Profile.SettingsAllowAnonymousAttribute> class is used to identify whether a property of a custom profile implementation can be accessed if the user is an anonymous user. For information about enabling anonymous identification, see the documentation provided for the  configuration element.","pos":[0,311],"nodes":[{"content":"The <ph id=\"ph1\">&lt;xref:System.Web.Profile.SettingsAllowAnonymousAttribute&gt;</ph> class is used to identify whether a property of a custom profile implementation can be accessed if the user is an anonymous user.","pos":[0,191],"source":"The <xref:System.Web.Profile.SettingsAllowAnonymousAttribute> class is used to identify whether a property of a custom profile implementation can be accessed if the user is an anonymous user."},{"content":"For information about enabling anonymous identification, see the documentation provided for the  configuration element.","pos":[192,311]}]}]},{"pos":[318,475],"content":"If no <xref:System.Web.Profile.SettingsAllowAnonymousAttribute> is specified for a profile property, anonymous access of the profile property is not allowed.","nodes":[{"content":"If no <ph id=\"ph1\">&lt;xref:System.Web.Profile.SettingsAllowAnonymousAttribute&gt;</ph> is specified for a profile property, anonymous access of the profile property is not allowed.","pos":[0,157],"source":"If no <xref:System.Web.Profile.SettingsAllowAnonymousAttribute> is specified for a profile property, anonymous access of the profile property is not allowed."}]},{"pos":[482,873],"content":"A custom profile implementation is a class that inherits from the <xref:System.Web.Profile.ProfileBase> abstract class and defines properties for the user profile that are not specified in the  configuration element. You can specify a custom user-profile type in the application's Web.config file with the `inherits` attribute of the  configuration element as shown in the following example.","nodes":[{"content":"A custom profile implementation is a class that inherits from the <ph id=\"ph1\">&lt;xref:System.Web.Profile.ProfileBase&gt;</ph> abstract class and defines properties for the user profile that are not specified in the  configuration element.","pos":[0,216],"source":"A custom profile implementation is a class that inherits from the <xref:System.Web.Profile.ProfileBase> abstract class and defines properties for the user profile that are not specified in the  configuration element."},{"content":"You can specify a custom user-profile type in the application's Web.config file with the <ph id=\"ph1\">`inherits`</ph> attribute of the  configuration element as shown in the following example.","pos":[217,391],"source":" You can specify a custom user-profile type in the application's Web.config file with the `inherits` attribute of the  configuration element as shown in the following example."}]}],"pos":[774,2933],"yaml":true,"extradata":"MT"},{"content":"Creates a new instance of the <xref href=\"System.Web.Profile.SettingsAllowAnonymousAttribute\"></xref> class and specifies whether to allow anonymous access to the associated profile property.","nodes":[{"pos":[0,191],"content":"Creates a new instance of the <ph id=\"ph1\">&lt;xref href=\"System.Web.Profile.SettingsAllowAnonymousAttribute\"&gt;&lt;/xref&gt;</ph> class and specifies whether to allow anonymous access to the associated profile property.","source":"Creates a new instance of the <xref href=\"System.Web.Profile.SettingsAllowAnonymousAttribute\"></xref> class and specifies whether to allow anonymous access to the associated profile property."}],"pos":[8550,8742],"yaml":true},{"content":"The <xref:System.Web.Profile.SettingsAllowAnonymousAttribute> class is used to identify whether a property of a custom profile implementation can be accessed if the user is an anonymous user. For information about enabling anonymous identification, see the  configuration element.  \n  \n If no <xref:System.Web.Profile.SettingsAllowAnonymousAttribute> is specified for a profile property, anonymous access to the profile property is not allowed.  \n  \n A custom profile implementation is a class that inherits from the <xref:System.Web.Profile.ProfileBase> abstract class and defines properties for the user profile that are not specified in the  configuration element.","nodes":[{"pos":[0,280],"content":"The <xref:System.Web.Profile.SettingsAllowAnonymousAttribute> class is used to identify whether a property of a custom profile implementation can be accessed if the user is an anonymous user. For information about enabling anonymous identification, see the  configuration element.","nodes":[{"content":"The <xref:System.Web.Profile.SettingsAllowAnonymousAttribute> class is used to identify whether a property of a custom profile implementation can be accessed if the user is an anonymous user. For information about enabling anonymous identification, see the  configuration element.","pos":[0,280],"nodes":[{"content":"The <ph id=\"ph1\">&lt;xref:System.Web.Profile.SettingsAllowAnonymousAttribute&gt;</ph> class is used to identify whether a property of a custom profile implementation can be accessed if the user is an anonymous user.","pos":[0,191],"source":"The <xref:System.Web.Profile.SettingsAllowAnonymousAttribute> class is used to identify whether a property of a custom profile implementation can be accessed if the user is an anonymous user."},{"content":"For information about enabling anonymous identification, see the  configuration element.","pos":[192,280]}]}]},{"pos":[287,444],"content":"If no <xref:System.Web.Profile.SettingsAllowAnonymousAttribute> is specified for a profile property, anonymous access to the profile property is not allowed.","nodes":[{"content":"If no <ph id=\"ph1\">&lt;xref:System.Web.Profile.SettingsAllowAnonymousAttribute&gt;</ph> is specified for a profile property, anonymous access to the profile property is not allowed.","pos":[0,157],"source":"If no <xref:System.Web.Profile.SettingsAllowAnonymousAttribute> is specified for a profile property, anonymous access to the profile property is not allowed."}]},{"pos":[451,667],"content":"A custom profile implementation is a class that inherits from the <xref:System.Web.Profile.ProfileBase> abstract class and defines properties for the user profile that are not specified in the  configuration element.","nodes":[{"content":"A custom profile implementation is a class that inherits from the <ph id=\"ph1\">&lt;xref:System.Web.Profile.ProfileBase&gt;</ph> abstract class and defines properties for the user profile that are not specified in the  configuration element.","pos":[0,216],"source":"A custom profile implementation is a class that inherits from the <xref:System.Web.Profile.ProfileBase> abstract class and defines properties for the user profile that are not specified in the  configuration element."}]}],"pos":[8753,9427],"yaml":true,"extradata":"MT"},{"content":"`true` if anonymous users can access the associated profile property; otherwise `false`.","nodes":[{"pos":[0,88],"content":"<ph id=\"ph1\">`true`</ph> if anonymous users can access the associated profile property; otherwise <ph id=\"ph2\">`false`</ph>.","source":"`true` if anonymous users can access the associated profile property; otherwise `false`."}],"pos":[10356,10447],"yaml":true},{"content":"Gets a value indicating whether the associated property of a custom profile implementation can be accessed if the user is an anonymous user.","nodes":[{"pos":[0,140],"content":"Gets a value indicating whether the associated property of a custom profile implementation can be accessed if the user is an anonymous user.","nodes":[{"content":"Gets a value indicating whether the associated property of a custom profile implementation can be accessed if the user is an anonymous user.","pos":[0,140]}]}],"pos":[11501,11642],"yaml":true},{"content":"`true` if anonymous users can access the associated profile property; otherwise, `false`.","nodes":[{"pos":[0,89],"content":"<ph id=\"ph1\">`true`</ph> if anonymous users can access the associated profile property; otherwise, <ph id=\"ph2\">`false`</ph>.","source":"`true` if anonymous users can access the associated profile property; otherwise, `false`."}],"pos":[11750,11842],"yaml":true},{"content":"Gets a value indicating whether the <xref href=\"System.Web.Profile.SettingsAllowAnonymousAttribute.Allow\"></xref> property is set to the default value.","nodes":[{"pos":[0,151],"content":"Gets a value indicating whether the <ph id=\"ph1\">&lt;xref href=\"System.Web.Profile.SettingsAllowAnonymousAttribute.Allow\"&gt;&lt;/xref&gt;</ph> property is set to the default value.","source":"Gets a value indicating whether the <xref href=\"System.Web.Profile.SettingsAllowAnonymousAttribute.Allow\"></xref> property is set to the default value."}],"pos":[12978,13130],"yaml":true},{"content":"`true` if the <xref href=\"System.Web.Profile.SettingsAllowAnonymousAttribute.Allow\"></xref> property is set to the default value; otherwise `false`.","nodes":[{"pos":[0,148],"content":"<ph id=\"ph1\">`true`</ph> if the <ph id=\"ph2\">&lt;xref href=\"System.Web.Profile.SettingsAllowAnonymousAttribute.Allow\"&gt;&lt;/xref&gt;</ph> property is set to the default value; otherwise <ph id=\"ph3\">`false`</ph>.","source":"`true` if the <xref href=\"System.Web.Profile.SettingsAllowAnonymousAttribute.Allow\"></xref> property is set to the default value; otherwise `false`."}],"pos":[13274,13425],"yaml":true}],"content":"### YamlMime:ManagedReference\nitems:\n- uid: System.Web.Profile.SettingsAllowAnonymousAttribute\n  commentId: T:System.Web.Profile.SettingsAllowAnonymousAttribute\n  id: SettingsAllowAnonymousAttribute\n  children:\n  - System.Web.Profile.SettingsAllowAnonymousAttribute.#ctor(System.Boolean)\n  - System.Web.Profile.SettingsAllowAnonymousAttribute.Allow\n  - System.Web.Profile.SettingsAllowAnonymousAttribute.IsDefaultAttribute\n  langs:\n  - csharp\n  name: SettingsAllowAnonymousAttribute\n  nameWithType: SettingsAllowAnonymousAttribute\n  fullName: System.Web.Profile.SettingsAllowAnonymousAttribute\n  type: Class\n  assemblies:\n  - System.Web\n  namespace: System.Web.Profile\n  summary: Identifies whether a profile property can be set or accessed for an anonymous user.\n  remarks: \"The <xref:System.Web.Profile.SettingsAllowAnonymousAttribute> class is used to identify whether a property of a custom profile implementation can be accessed if the user is an anonymous user. For information about enabling anonymous identification, see the documentation provided for the  configuration element.  \\n  \\n If no <xref:System.Web.Profile.SettingsAllowAnonymousAttribute> is specified for a profile property, anonymous access of the profile property is not allowed.  \\n  \\n A custom profile implementation is a class that inherits from the <xref:System.Web.Profile.ProfileBase> abstract class and defines properties for the user profile that are not specified in the  configuration element. You can specify a custom user-profile type in the application's Web.config file with the `inherits` attribute of the  configuration element as shown in the following example.  \\n  \\n `<configuration>`  \\n  \\n `<connectionStrings>`  \\n  \\n `<add`  \\n  \\n `name=\\\"SqlServices\\\"`  \\n  \\n `connectionString=\\\"Data Source=localhost;Integrated Security=SSPI;Initial Catalog=aspnetdb;\\\" />`  \\n  \\n `</connectionStrings>`  \\n  \\n `<system.web>`  \\n  \\n `<authentication mode=\\\"Forms\\\" >`  \\n  \\n `<forms`  \\n  \\n `loginUrl=\\\"login.aspx\\\"`  \\n  \\n `name=\\\".ASPXFORMSAUTH\\\" />`  \\n  \\n `</authentication>`  \\n  \\n `<authorization>`  \\n  \\n `<deny users=\\\"?\\\" />`  \\n  \\n `</authorization>`  \\n  \\n `<profile inherits=\\\"Samples.AspNet.Profile.EmployeeProfile\\\"`  \\n  \\n `defaultProvider=\\\"SqlProvider\\\">`  \\n  \\n `<providers>`  \\n  \\n `<clear />`  \\n  \\n `<add`  \\n  \\n `name=\\\"SqlProvider\\\"`  \\n  \\n `type=\\\"System.Web.Profile.SqlProfileProvider\\\"`  \\n  \\n `connectionStringName=\\\"SqlServices\\\"`  \\n  \\n `description=\\\"SQL Profile Provider for Sample\\\"/>`  \\n  \\n `<add`  \\n  \\n `name=\\\"EmployeeInfoProvider\\\"`  \\n  \\n `type=\\\"System.Web.Profile.SqlProfileProvider\\\"`  \\n  \\n `connectionStringName=\\\"SqlServices\\\"`  \\n  \\n `description=\\\"SQL Profile Provider for Employee Info\\\"/>`  \\n  \\n `</providers>`  \\n  \\n `<properties>`  \\n  \\n `<add name=\\\"GarmentSize\\\" />`  \\n  \\n `</properties>`  \\n  \\n `</profile>`  \\n  \\n `</system.web>`  \\n  \\n `</configuration>`\"\n  example:\n  - \"The following code example defines a class that inherits from the <xref:System.Web.Profile.ProfileBase> to create a custom profile. The type of the custom profile is specified in the `inherits` attribute of the  configuration element in the Web.config file for an application.  \\n  \\n [!code-csharp[System.Web.Profile.ProfileBase#1](~/samples/snippets/csharp/VS_Snippets_WebNet/System.Web.Profile.ProfileBase/CS/employeeprofile.cs#1)]\\n [!code-vb[System.Web.Profile.ProfileBase#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/System.Web.Profile.ProfileBase/VB/employeeprofile.vb#1)]\"\n  syntax:\n    content: >-\n      [System.AttributeUsage(System.AttributeTargets.Property)]\n\n      public sealed class SettingsAllowAnonymousAttribute : Attribute\n  inheritance:\n  - System.Object\n  - System.Attribute\n  implements: []\n  inheritedMembers:\n  - System.Attribute.Equals(System.Object)\n  - System.Attribute.GetCustomAttribute(System.Reflection.Assembly,System.Type)\n  - System.Attribute.GetCustomAttribute(System.Reflection.Assembly,System.Type,System.Boolean)\n  - System.Attribute.GetCustomAttribute(System.Reflection.MemberInfo,System.Type)\n  - System.Attribute.GetCustomAttribute(System.Reflection.MemberInfo,System.Type,System.Boolean)\n  - System.Attribute.GetCustomAttribute(System.Reflection.Module,System.Type)\n  - System.Attribute.GetCustomAttribute(System.Reflection.Module,System.Type,System.Boolean)\n  - System.Attribute.GetCustomAttribute(System.Reflection.ParameterInfo,System.Type)\n  - System.Attribute.GetCustomAttribute(System.Reflection.ParameterInfo,System.Type,System.Boolean)\n  - System.Attribute.GetCustomAttributes(System.Reflection.Assembly)\n  - System.Attribute.GetCustomAttributes(System.Reflection.Assembly,System.Boolean)\n  - System.Attribute.GetCustomAttributes(System.Reflection.Assembly,System.Type)\n  - System.Attribute.GetCustomAttributes(System.Reflection.Assembly,System.Type,System.Boolean)\n  - System.Attribute.GetCustomAttributes(System.Reflection.MemberInfo)\n  - System.Attribute.GetCustomAttributes(System.Reflection.MemberInfo,System.Boolean)\n  - System.Attribute.GetCustomAttributes(System.Reflection.MemberInfo,System.Type)\n  - System.Attribute.GetCustomAttributes(System.Reflection.MemberInfo,System.Type,System.Boolean)\n  - System.Attribute.GetCustomAttributes(System.Reflection.Module)\n  - System.Attribute.GetCustomAttributes(System.Reflection.Module,System.Boolean)\n  - System.Attribute.GetCustomAttributes(System.Reflection.Module,System.Type)\n  - System.Attribute.GetCustomAttributes(System.Reflection.Module,System.Type,System.Boolean)\n  - System.Attribute.GetCustomAttributes(System.Reflection.ParameterInfo)\n  - System.Attribute.GetCustomAttributes(System.Reflection.ParameterInfo,System.Boolean)\n  - System.Attribute.GetCustomAttributes(System.Reflection.ParameterInfo,System.Type)\n  - System.Attribute.GetCustomAttributes(System.Reflection.ParameterInfo,System.Type,System.Boolean)\n  - System.Attribute.GetHashCode\n  - System.Attribute.IsDefined(System.Reflection.Assembly,System.Type)\n  - System.Attribute.IsDefined(System.Reflection.Assembly,System.Type,System.Boolean)\n  - System.Attribute.IsDefined(System.Reflection.MemberInfo,System.Type)\n  - System.Attribute.IsDefined(System.Reflection.MemberInfo,System.Type,System.Boolean)\n  - System.Attribute.IsDefined(System.Reflection.Module,System.Type)\n  - System.Attribute.IsDefined(System.Reflection.Module,System.Type,System.Boolean)\n  - System.Attribute.IsDefined(System.Reflection.ParameterInfo,System.Type)\n  - System.Attribute.IsDefined(System.Reflection.ParameterInfo,System.Type,System.Boolean)\n  - System.Attribute.Match(System.Object)\n  - System.Attribute.System#Runtime#InteropServices#_Attribute#GetIDsOfNames(System.Guid@,System.IntPtr,System.UInt32,System.UInt32,System.IntPtr)\n  - System.Attribute.System#Runtime#InteropServices#_Attribute#GetTypeInfo(System.UInt32,System.UInt32,System.IntPtr)\n  - System.Attribute.System#Runtime#InteropServices#_Attribute#GetTypeInfoCount(System.UInt32@)\n  - System.Attribute.System#Runtime#InteropServices#_Attribute#Invoke(System.UInt32,System.Guid@,System.UInt32,System.Int16,System.IntPtr,System.IntPtr,System.IntPtr,System.IntPtr)\n  - System.Attribute.TypeId\n  - System.Object.Equals(System.Object,System.Object)\n  - System.Object.GetType\n  - System.Object.MemberwiseClone\n  - System.Object.ReferenceEquals(System.Object,System.Object)\n  - System.Object.ToString\n  attributes:\n  - type: System.AttributeUsageAttribute\n  version:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Web.Profile/SettingsAllowAnonymousAttribute.xml\n  ms.technology:\n  - dotnet-webforms\n  ms.author: riande\n  manager: wpickett\n- uid: System.Web.Profile.SettingsAllowAnonymousAttribute.#ctor(System.Boolean)\n  commentId: M:System.Web.Profile.SettingsAllowAnonymousAttribute.#ctor(System.Boolean)\n  id: '#ctor(System.Boolean)'\n  parent: System.Web.Profile.SettingsAllowAnonymousAttribute\n  langs:\n  - csharp\n  name: SettingsAllowAnonymousAttribute(Boolean)\n  nameWithType: SettingsAllowAnonymousAttribute.SettingsAllowAnonymousAttribute(Boolean)\n  fullName: SettingsAllowAnonymousAttribute.SettingsAllowAnonymousAttribute(Boolean)\n  type: Constructor\n  assemblies:\n  - System.Web\n  namespace: System.Web.Profile\n  summary: Creates a new instance of the <xref href=\"System.Web.Profile.SettingsAllowAnonymousAttribute\"></xref> class and specifies whether to allow anonymous access to the associated profile property.\n  remarks: \"The <xref:System.Web.Profile.SettingsAllowAnonymousAttribute> class is used to identify whether a property of a custom profile implementation can be accessed if the user is an anonymous user. For information about enabling anonymous identification, see the  configuration element.  \\n  \\n If no <xref:System.Web.Profile.SettingsAllowAnonymousAttribute> is specified for a profile property, anonymous access to the profile property is not allowed.  \\n  \\n A custom profile implementation is a class that inherits from the <xref:System.Web.Profile.ProfileBase> abstract class and defines properties for the user profile that are not specified in the  configuration element.\"\n  example:\n  - \"The following example defines a class that inherits from the <xref:System.Web.Profile.ProfileBase> class to create a custom profile. The type of the custom profile is specified in the `inherits` attribute of the  configuration element in the Web.config file for an application. For an example of a configuration file that specifies a custom profile implementation, see the <xref:System.Web.Profile.SettingsAllowAnonymousAttribute> class overview.  \\n  \\n [!code-csharp[System.Web.Profile.ProfileBase#1](~/samples/snippets/csharp/VS_Snippets_WebNet/System.Web.Profile.ProfileBase/CS/employeeprofile.cs#1)]\\n [!code-vb[System.Web.Profile.ProfileBase#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/System.Web.Profile.ProfileBase/VB/employeeprofile.vb#1)]\"\n  syntax:\n    content: public SettingsAllowAnonymousAttribute (bool allow);\n    parameters:\n    - id: allow\n      type: System.Boolean\n      description: '`true` if anonymous users can access the associated profile property; otherwise `false`.'\n  overload: System.Web.Profile.SettingsAllowAnonymousAttribute.#ctor*\n  exceptions: []\n  version:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Web.Profile/SettingsAllowAnonymousAttribute.xml\n  ms.technology:\n  - dotnet-webforms\n  ms.author: riande\n  manager: wpickett\n- uid: System.Web.Profile.SettingsAllowAnonymousAttribute.Allow\n  commentId: P:System.Web.Profile.SettingsAllowAnonymousAttribute.Allow\n  id: Allow\n  parent: System.Web.Profile.SettingsAllowAnonymousAttribute\n  langs:\n  - csharp\n  name: Allow\n  nameWithType: SettingsAllowAnonymousAttribute.Allow\n  fullName: SettingsAllowAnonymousAttribute.Allow\n  type: Property\n  assemblies:\n  - System.Web\n  namespace: System.Web.Profile\n  summary: Gets a value indicating whether the associated property of a custom profile implementation can be accessed if the user is an anonymous user.\n  syntax:\n    content: public bool Allow { get; }\n    return:\n      type: System.Boolean\n      description: '`true` if anonymous users can access the associated profile property; otherwise, `false`.'\n  overload: System.Web.Profile.SettingsAllowAnonymousAttribute.Allow*\n  exceptions: []\n  version:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Web.Profile/SettingsAllowAnonymousAttribute.xml\n  ms.technology:\n  - dotnet-webforms\n  ms.author: riande\n  manager: wpickett\n- uid: System.Web.Profile.SettingsAllowAnonymousAttribute.IsDefaultAttribute\n  commentId: M:System.Web.Profile.SettingsAllowAnonymousAttribute.IsDefaultAttribute\n  id: IsDefaultAttribute\n  parent: System.Web.Profile.SettingsAllowAnonymousAttribute\n  langs:\n  - csharp\n  name: IsDefaultAttribute()\n  nameWithType: SettingsAllowAnonymousAttribute.IsDefaultAttribute()\n  fullName: SettingsAllowAnonymousAttribute.IsDefaultAttribute()\n  type: Method\n  assemblies:\n  - System.Web\n  namespace: System.Web.Profile\n  summary: Gets a value indicating whether the <xref href=\"System.Web.Profile.SettingsAllowAnonymousAttribute.Allow\"></xref> property is set to the default value.\n  syntax:\n    content: public override bool IsDefaultAttribute ();\n    parameters: []\n    return:\n      type: System.Boolean\n      description: '`true` if the <xref href=\"System.Web.Profile.SettingsAllowAnonymousAttribute.Allow\"></xref> property is set to the default value; otherwise `false`.'\n  overload: System.Web.Profile.SettingsAllowAnonymousAttribute.IsDefaultAttribute*\n  exceptions: []\n  version:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Web.Profile/SettingsAllowAnonymousAttribute.xml\n  ms.technology:\n  - dotnet-webforms\n  ms.author: riande\n  manager: wpickett\nreferences:\n- uid: System.Attribute\n  parent: System\n  isExternal: false\n  name: Attribute\n  nameWithType: Attribute\n  fullName: System.Attribute\n- uid: System.Web.Profile.SettingsAllowAnonymousAttribute.#ctor(System.Boolean)\n  parent: System.Web.Profile.SettingsAllowAnonymousAttribute\n  isExternal: false\n  name: SettingsAllowAnonymousAttribute(Boolean)\n  nameWithType: SettingsAllowAnonymousAttribute.SettingsAllowAnonymousAttribute(Boolean)\n  fullName: SettingsAllowAnonymousAttribute.SettingsAllowAnonymousAttribute(Boolean)\n- uid: System.Boolean\n  parent: System\n  isExternal: false\n  name: Boolean\n  nameWithType: Boolean\n  fullName: System.Boolean\n- uid: System.Web.Profile.SettingsAllowAnonymousAttribute.Allow\n  parent: System.Web.Profile.SettingsAllowAnonymousAttribute\n  isExternal: false\n  name: Allow\n  nameWithType: SettingsAllowAnonymousAttribute.Allow\n  fullName: SettingsAllowAnonymousAttribute.Allow\n- uid: System.Web.Profile.SettingsAllowAnonymousAttribute.IsDefaultAttribute\n  parent: System.Web.Profile.SettingsAllowAnonymousAttribute\n  isExternal: false\n  name: IsDefaultAttribute()\n  nameWithType: SettingsAllowAnonymousAttribute.IsDefaultAttribute()\n  fullName: SettingsAllowAnonymousAttribute.IsDefaultAttribute()\n- uid: System.Web.Profile.SettingsAllowAnonymousAttribute.#ctor*\n  parent: System.Web.Profile.SettingsAllowAnonymousAttribute\n  isExternal: false\n  name: SettingsAllowAnonymousAttribute\n  nameWithType: SettingsAllowAnonymousAttribute.SettingsAllowAnonymousAttribute\n  fullName: SettingsAllowAnonymousAttribute.SettingsAllowAnonymousAttribute\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Web.Profile/SettingsAllowAnonymousAttribute.xml\n- uid: System.Web.Profile.SettingsAllowAnonymousAttribute.Allow*\n  parent: System.Web.Profile.SettingsAllowAnonymousAttribute\n  isExternal: false\n  name: Allow\n  nameWithType: SettingsAllowAnonymousAttribute.Allow\n  fullName: SettingsAllowAnonymousAttribute.Allow\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Web.Profile/SettingsAllowAnonymousAttribute.xml\n- uid: System.Web.Profile.SettingsAllowAnonymousAttribute.IsDefaultAttribute*\n  parent: System.Web.Profile.SettingsAllowAnonymousAttribute\n  isExternal: false\n  name: IsDefaultAttribute\n  nameWithType: SettingsAllowAnonymousAttribute.IsDefaultAttribute\n  fullName: SettingsAllowAnonymousAttribute.IsDefaultAttribute\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Web.Profile/SettingsAllowAnonymousAttribute.xml\n- uid: System.Attribute.Equals(System.Object)\n  parent: System.Attribute\n  isExternal: false\n  name: Equals(Object)\n  nameWithType: Attribute.Equals(Object)\n  fullName: Attribute.Equals(Object)\n- uid: System.Object.Equals(System.Object,System.Object)\n  parent: System.Object\n  isExternal: false\n  name: Equals(Object, Object)\n  nameWithType: Object.Equals(Object, Object)\n  fullName: Object.Equals(Object, Object)\n- uid: System.Attribute.GetHashCode\n  parent: System.Attribute\n  isExternal: false\n  name: GetHashCode()\n  nameWithType: Attribute.GetHashCode()\n  fullName: Attribute.GetHashCode()\n- uid: System.Object.GetType\n  parent: System.Object\n  isExternal: false\n  name: GetType()\n  nameWithType: Object.GetType()\n  fullName: Object.GetType()\n- uid: System.Object.MemberwiseClone\n  parent: System.Object\n  isExternal: false\n  name: MemberwiseClone()\n  nameWithType: Object.MemberwiseClone()\n  fullName: Object.MemberwiseClone()\n- uid: System.Object.ReferenceEquals(System.Object,System.Object)\n  parent: System.Object\n  isExternal: false\n  name: ReferenceEquals(Object, Object)\n  nameWithType: Object.ReferenceEquals(Object, Object)\n  fullName: Object.ReferenceEquals(Object, Object)\n- uid: System.Object.ToString\n  parent: System.Object\n  isExternal: false\n  name: ToString()\n  nameWithType: Object.ToString()\n  fullName: Object.ToString()\n- uid: System.Attribute.GetCustomAttribute(System.Reflection.ParameterInfo,System.Type,System.Boolean)\n  parent: System.Attribute\n  isExternal: false\n  name: GetCustomAttribute(ParameterInfo, Type, Boolean)\n  nameWithType: Attribute.GetCustomAttribute(ParameterInfo, Type, Boolean)\n  fullName: Attribute.GetCustomAttribute(ParameterInfo, Type, Boolean)\n- uid: System.Attribute.GetCustomAttribute(System.Reflection.MemberInfo,System.Type,System.Boolean)\n  parent: System.Attribute\n  isExternal: false\n  name: GetCustomAttribute(MemberInfo, Type, Boolean)\n  nameWithType: Attribute.GetCustomAttribute(MemberInfo, Type, Boolean)\n  fullName: Attribute.GetCustomAttribute(MemberInfo, Type, Boolean)\n- uid: System.Attribute.GetCustomAttribute(System.Reflection.Assembly,System.Type,System.Boolean)\n  parent: System.Attribute\n  isExternal: false\n  name: GetCustomAttribute(Assembly, Type, Boolean)\n  nameWithType: Attribute.GetCustomAttribute(Assembly, Type, Boolean)\n  fullName: Attribute.GetCustomAttribute(Assembly, Type, Boolean)\n- uid: System.Attribute.GetCustomAttribute(System.Reflection.Module,System.Type,System.Boolean)\n  parent: System.Attribute\n  isExternal: false\n  name: GetCustomAttribute(Module, Type, Boolean)\n  nameWithType: Attribute.GetCustomAttribute(Module, Type, Boolean)\n  fullName: Attribute.GetCustomAttribute(Module, Type, Boolean)\n- uid: System.Attribute.GetCustomAttribute(System.Reflection.Module,System.Type)\n  parent: System.Attribute\n  isExternal: false\n  name: GetCustomAttribute(Module, Type)\n  nameWithType: Attribute.GetCustomAttribute(Module, Type)\n  fullName: Attribute.GetCustomAttribute(Module, Type)\n- uid: System.Attribute.GetCustomAttribute(System.Reflection.MemberInfo,System.Type)\n  parent: System.Attribute\n  isExternal: false\n  name: GetCustomAttribute(MemberInfo, Type)\n  nameWithType: Attribute.GetCustomAttribute(MemberInfo, Type)\n  fullName: Attribute.GetCustomAttribute(MemberInfo, Type)\n- uid: System.Attribute.GetCustomAttribute(System.Reflection.Assembly,System.Type)\n  parent: System.Attribute\n  isExternal: false\n  name: GetCustomAttribute(Assembly, Type)\n  nameWithType: Attribute.GetCustomAttribute(Assembly, Type)\n  fullName: Attribute.GetCustomAttribute(Assembly, Type)\n- uid: System.Attribute.GetCustomAttribute(System.Reflection.ParameterInfo,System.Type)\n  parent: System.Attribute\n  isExternal: false\n  name: GetCustomAttribute(ParameterInfo, Type)\n  nameWithType: Attribute.GetCustomAttribute(ParameterInfo, Type)\n  fullName: Attribute.GetCustomAttribute(ParameterInfo, Type)\n- uid: System.Attribute.GetCustomAttributes(System.Reflection.Module,System.Type)\n  parent: System.Attribute\n  isExternal: false\n  name: GetCustomAttributes(Module, Type)\n  nameWithType: Attribute.GetCustomAttributes(Module, Type)\n  fullName: Attribute.GetCustomAttributes(Module, Type)\n- uid: System.Attribute.GetCustomAttributes(System.Reflection.ParameterInfo,System.Type,System.Boolean)\n  parent: System.Attribute\n  isExternal: false\n  name: GetCustomAttributes(ParameterInfo, Type, Boolean)\n  nameWithType: Attribute.GetCustomAttributes(ParameterInfo, Type, Boolean)\n  fullName: Attribute.GetCustomAttributes(ParameterInfo, Type, Boolean)\n- uid: System.Attribute.GetCustomAttributes(System.Reflection.Module,System.Type,System.Boolean)\n  parent: System.Attribute\n  isExternal: false\n  name: GetCustomAttributes(Module, Type, Boolean)\n  nameWithType: Attribute.GetCustomAttributes(Module, Type, Boolean)\n  fullName: Attribute.GetCustomAttributes(Module, Type, Boolean)\n- uid: System.Attribute.GetCustomAttributes(System.Reflection.MemberInfo,System.Type,System.Boolean)\n  parent: System.Attribute\n  isExternal: false\n  name: GetCustomAttributes(MemberInfo, Type, Boolean)\n  nameWithType: Attribute.GetCustomAttributes(MemberInfo, Type, Boolean)\n  fullName: Attribute.GetCustomAttributes(MemberInfo, Type, Boolean)\n- uid: System.Attribute.GetCustomAttributes(System.Reflection.Assembly,System.Type,System.Boolean)\n  parent: System.Attribute\n  isExternal: false\n  name: GetCustomAttributes(Assembly, Type, Boolean)\n  nameWithType: Attribute.GetCustomAttributes(Assembly, Type, Boolean)\n  fullName: Attribute.GetCustomAttributes(Assembly, Type, Boolean)\n- uid: System.Attribute.GetCustomAttributes(System.Reflection.ParameterInfo,System.Type)\n  parent: System.Attribute\n  isExternal: false\n  name: GetCustomAttributes(ParameterInfo, Type)\n  nameWithType: Attribute.GetCustomAttributes(ParameterInfo, Type)\n  fullName: Attribute.GetCustomAttributes(ParameterInfo, Type)\n- uid: System.Attribute.GetCustomAttributes(System.Reflection.Module,System.Boolean)\n  parent: System.Attribute\n  isExternal: false\n  name: GetCustomAttributes(Module, Boolean)\n  nameWithType: Attribute.GetCustomAttributes(Module, Boolean)\n  fullName: Attribute.GetCustomAttributes(Module, Boolean)\n- uid: System.Attribute.GetCustomAttributes(System.Reflection.ParameterInfo,System.Boolean)\n  parent: System.Attribute\n  isExternal: false\n  name: GetCustomAttributes(ParameterInfo, Boolean)\n  nameWithType: Attribute.GetCustomAttributes(ParameterInfo, Boolean)\n  fullName: Attribute.GetCustomAttributes(ParameterInfo, Boolean)\n- uid: System.Attribute.GetCustomAttributes(System.Reflection.MemberInfo,System.Boolean)\n  parent: System.Attribute\n  isExternal: false\n  name: GetCustomAttributes(MemberInfo, Boolean)\n  nameWithType: Attribute.GetCustomAttributes(MemberInfo, Boolean)\n  fullName: Attribute.GetCustomAttributes(MemberInfo, Boolean)\n- uid: System.Attribute.GetCustomAttributes(System.Reflection.Assembly,System.Type)\n  parent: System.Attribute\n  isExternal: false\n  name: GetCustomAttributes(Assembly, Type)\n  nameWithType: Attribute.GetCustomAttributes(Assembly, Type)\n  fullName: Attribute.GetCustomAttributes(Assembly, Type)\n- uid: System.Attribute.GetCustomAttributes(System.Reflection.Assembly,System.Boolean)\n  parent: System.Attribute\n  isExternal: false\n  name: GetCustomAttributes(Assembly, Boolean)\n  nameWithType: Attribute.GetCustomAttributes(Assembly, Boolean)\n  fullName: Attribute.GetCustomAttributes(Assembly, Boolean)\n- uid: System.Attribute.GetCustomAttributes(System.Reflection.ParameterInfo)\n  parent: System.Attribute\n  isExternal: false\n  name: GetCustomAttributes(ParameterInfo)\n  nameWithType: Attribute.GetCustomAttributes(ParameterInfo)\n  fullName: Attribute.GetCustomAttributes(ParameterInfo)\n- uid: System.Attribute.GetCustomAttributes(System.Reflection.Module)\n  parent: System.Attribute\n  isExternal: false\n  name: GetCustomAttributes(Module)\n  nameWithType: Attribute.GetCustomAttributes(Module)\n  fullName: Attribute.GetCustomAttributes(Module)\n- uid: System.Attribute.GetCustomAttributes(System.Reflection.MemberInfo)\n  parent: System.Attribute\n  isExternal: false\n  name: GetCustomAttributes(MemberInfo)\n  nameWithType: Attribute.GetCustomAttributes(MemberInfo)\n  fullName: Attribute.GetCustomAttributes(MemberInfo)\n- uid: System.Attribute.GetCustomAttributes(System.Reflection.Assembly)\n  parent: System.Attribute\n  isExternal: false\n  name: GetCustomAttributes(Assembly)\n  nameWithType: Attribute.GetCustomAttributes(Assembly)\n  fullName: Attribute.GetCustomAttributes(Assembly)\n- uid: System.Attribute.GetCustomAttributes(System.Reflection.MemberInfo,System.Type)\n  parent: System.Attribute\n  isExternal: false\n  name: GetCustomAttributes(MemberInfo, Type)\n  nameWithType: Attribute.GetCustomAttributes(MemberInfo, Type)\n  fullName: Attribute.GetCustomAttributes(MemberInfo, Type)\n- uid: System.Attribute.IsDefined(System.Reflection.ParameterInfo,System.Type,System.Boolean)\n  parent: System.Attribute\n  isExternal: false\n  name: IsDefined(ParameterInfo, Type, Boolean)\n  nameWithType: Attribute.IsDefined(ParameterInfo, Type, Boolean)\n  fullName: Attribute.IsDefined(ParameterInfo, Type, Boolean)\n- uid: System.Attribute.IsDefined(System.Reflection.Module,System.Type,System.Boolean)\n  parent: System.Attribute\n  isExternal: false\n  name: IsDefined(Module, Type, Boolean)\n  nameWithType: Attribute.IsDefined(Module, Type, Boolean)\n  fullName: Attribute.IsDefined(Module, Type, Boolean)\n- uid: System.Attribute.IsDefined(System.Reflection.MemberInfo,System.Type,System.Boolean)\n  parent: System.Attribute\n  isExternal: false\n  name: IsDefined(MemberInfo, Type, Boolean)\n  nameWithType: Attribute.IsDefined(MemberInfo, Type, Boolean)\n  fullName: Attribute.IsDefined(MemberInfo, Type, Boolean)\n- uid: System.Attribute.IsDefined(System.Reflection.Assembly,System.Type,System.Boolean)\n  parent: System.Attribute\n  isExternal: false\n  name: IsDefined(Assembly, Type, Boolean)\n  nameWithType: Attribute.IsDefined(Assembly, Type, Boolean)\n  fullName: Attribute.IsDefined(Assembly, Type, Boolean)\n- uid: System.Attribute.IsDefined(System.Reflection.MemberInfo,System.Type)\n  parent: System.Attribute\n  isExternal: false\n  name: IsDefined(MemberInfo, Type)\n  nameWithType: Attribute.IsDefined(MemberInfo, Type)\n  fullName: Attribute.IsDefined(MemberInfo, Type)\n- uid: System.Attribute.IsDefined(System.Reflection.Module,System.Type)\n  parent: System.Attribute\n  isExternal: false\n  name: IsDefined(Module, Type)\n  nameWithType: Attribute.IsDefined(Module, Type)\n  fullName: Attribute.IsDefined(Module, Type)\n- uid: System.Attribute.IsDefined(System.Reflection.Assembly,System.Type)\n  parent: System.Attribute\n  isExternal: false\n  name: IsDefined(Assembly, Type)\n  nameWithType: Attribute.IsDefined(Assembly, Type)\n  fullName: Attribute.IsDefined(Assembly, Type)\n- uid: System.Attribute.IsDefined(System.Reflection.ParameterInfo,System.Type)\n  parent: System.Attribute\n  isExternal: false\n  name: IsDefined(ParameterInfo, Type)\n  nameWithType: Attribute.IsDefined(ParameterInfo, Type)\n  fullName: Attribute.IsDefined(ParameterInfo, Type)\n- uid: System.Attribute.Match(System.Object)\n  parent: System.Attribute\n  isExternal: false\n  name: Match(Object)\n  nameWithType: Attribute.Match(Object)\n  fullName: Attribute.Match(Object)\n- uid: System.Attribute.TypeId\n  parent: System.Attribute\n  isExternal: false\n  name: TypeId\n  nameWithType: Attribute.TypeId\n  fullName: Attribute.TypeId\n- uid: System.Attribute.System#Runtime#InteropServices#_Attribute#GetIDsOfNames(System.Guid@,System.IntPtr,System.UInt32,System.UInt32,System.IntPtr)\n  parent: System.Attribute\n  isExternal: false\n  name: _Attribute.GetIDsOfNames(Guid, IntPtr, UInt32, UInt32, IntPtr)\n  nameWithType: Attribute._Attribute.GetIDsOfNames(Guid, IntPtr, UInt32, UInt32, IntPtr)\n  fullName: Attribute._Attribute.GetIDsOfNames(Guid, IntPtr, UInt32, UInt32, IntPtr)\n- uid: System.Attribute.System#Runtime#InteropServices#_Attribute#GetTypeInfo(System.UInt32,System.UInt32,System.IntPtr)\n  parent: System.Attribute\n  isExternal: false\n  name: _Attribute.GetTypeInfo(UInt32, UInt32, IntPtr)\n  nameWithType: Attribute._Attribute.GetTypeInfo(UInt32, UInt32, IntPtr)\n  fullName: Attribute._Attribute.GetTypeInfo(UInt32, UInt32, IntPtr)\n- uid: System.Attribute.System#Runtime#InteropServices#_Attribute#GetTypeInfoCount(System.UInt32@)\n  parent: System.Attribute\n  isExternal: false\n  name: _Attribute.GetTypeInfoCount(UInt32)\n  nameWithType: Attribute._Attribute.GetTypeInfoCount(UInt32)\n  fullName: Attribute._Attribute.GetTypeInfoCount(UInt32)\n- uid: System.Attribute.System#Runtime#InteropServices#_Attribute#Invoke(System.UInt32,System.Guid@,System.UInt32,System.Int16,System.IntPtr,System.IntPtr,System.IntPtr,System.IntPtr)\n  parent: System.Attribute\n  isExternal: false\n  name: _Attribute.Invoke(UInt32, Guid, UInt32, Int16, IntPtr, IntPtr, IntPtr, IntPtr)\n  nameWithType: Attribute._Attribute.Invoke(UInt32, Guid, UInt32, Int16, IntPtr, IntPtr, IntPtr, IntPtr)\n  fullName: Attribute._Attribute.Invoke(UInt32, Guid, UInt32, Int16, IntPtr, IntPtr, IntPtr, IntPtr)\n"}