{"nodes":[{"content":"Specifies the types of acknowledgment message that Message Queuing returns to the sending application.","nodes":[{"pos":[0,102],"content":"Specifies the types of acknowledgment message that Message Queuing returns to the sending application.","nodes":[{"content":"Specifies the types of acknowledgment message that Message Queuing returns to the sending application.","pos":[0,102]}]}],"pos":[805,908],"yaml":true},{"content":"The <xref:System.Messaging.AcknowledgeTypes> class provides a set of flags that you can combine to request one or more categories of acknowledgment messages.  \n  \n When an application sends a message, it can request that Message Queuing return acknowledgment messages indicating the success or failure of the original message. Message Queuing sends these acknowledgment messages to the administration queue you specify. Acknowledgment types can be divided broadly into four groups: positive arrival acknowledgments, positive read acknowledgments, negative arrival acknowledgments, and negative read acknowledgments. Requesting acknowledgments enables your application to receive notification of certain occurrences—for example, a message reaching its destination queue, a message being retrieved, or a time-out preventing a message from reaching or being retrieved from the destination queue.  \n  \n When you are using the <xref:System.Messaging.Message> class to send messages to a queue, you specify the types of acknowledgments your application should receive in the <xref:System.Messaging.Message.AcknowledgeType%2A> property, as well as the administration queue that receives the acknowledgment messages in the <xref:System.Messaging.Message.AdministrationQueue%2A> property.  \n  \n When you use the <xref:System.Messaging.Message> class to read acknowledgment messages in the administration queue, the instance's <xref:System.Messaging.Message.Acknowledgment%2A> property indicates the condition responsible for the acknowledgment message, for example, if a time-out expired before the original message was read from the queue.","nodes":[{"pos":[0,157],"content":"The <xref:System.Messaging.AcknowledgeTypes> class provides a set of flags that you can combine to request one or more categories of acknowledgment messages.","nodes":[{"content":"The <ph id=\"ph1\">&lt;xref:System.Messaging.AcknowledgeTypes&gt;</ph> class provides a set of flags that you can combine to request one or more categories of acknowledgment messages.","pos":[0,157],"source":"The <xref:System.Messaging.AcknowledgeTypes> class provides a set of flags that you can combine to request one or more categories of acknowledgment messages."}]},{"pos":[164,892],"content":"When an application sends a message, it can request that Message Queuing return acknowledgment messages indicating the success or failure of the original message. Message Queuing sends these acknowledgment messages to the administration queue you specify. Acknowledgment types can be divided broadly into four groups: positive arrival acknowledgments, positive read acknowledgments, negative arrival acknowledgments, and negative read acknowledgments. Requesting acknowledgments enables your application to receive notification of certain occurrences—for example, a message reaching its destination queue, a message being retrieved, or a time-out preventing a message from reaching or being retrieved from the destination queue.","nodes":[{"content":"When an application sends a message, it can request that Message Queuing return acknowledgment messages indicating the success or failure of the original message. Message Queuing sends these acknowledgment messages to the administration queue you specify. Acknowledgment types can be divided broadly into four groups: positive arrival acknowledgments, positive read acknowledgments, negative arrival acknowledgments, and negative read acknowledgments. Requesting acknowledgments enables your application to receive notification of certain occurrences—for example, a message reaching its destination queue, a message being retrieved, or a time-out preventing a message from reaching or being retrieved from the destination queue.","pos":[0,728],"nodes":[{"content":"When an application sends a message, it can request that Message Queuing return acknowledgment messages indicating the success or failure of the original message.","pos":[0,162]},{"content":"Message Queuing sends these acknowledgment messages to the administration queue you specify.","pos":[163,255]},{"content":"Acknowledgment types can be divided broadly into four groups: positive arrival acknowledgments, positive read acknowledgments, negative arrival acknowledgments, and negative read acknowledgments.","pos":[256,451]},{"content":"Requesting acknowledgments enables your application to receive notification of certain occurrences—for example, a message reaching its destination queue, a message being retrieved, or a time-out preventing a message from reaching or being retrieved from the destination queue.","pos":[452,728]}]}]},{"pos":[899,1279],"content":"When you are using the <xref:System.Messaging.Message> class to send messages to a queue, you specify the types of acknowledgments your application should receive in the <xref:System.Messaging.Message.AcknowledgeType%2A> property, as well as the administration queue that receives the acknowledgment messages in the <xref:System.Messaging.Message.AdministrationQueue%2A> property.","nodes":[{"content":"When you are using the <ph id=\"ph1\">&lt;xref:System.Messaging.Message&gt;</ph> class to send messages to a queue, you specify the types of acknowledgments your application should receive in the <ph id=\"ph2\">&lt;xref:System.Messaging.Message.AcknowledgeType%2A&gt;</ph> property, as well as the administration queue that receives the acknowledgment messages in the <ph id=\"ph3\">&lt;xref:System.Messaging.Message.AdministrationQueue%2A&gt;</ph> property.","pos":[0,380],"source":"When you are using the <xref:System.Messaging.Message> class to send messages to a queue, you specify the types of acknowledgments your application should receive in the <xref:System.Messaging.Message.AcknowledgeType%2A> property, as well as the administration queue that receives the acknowledgment messages in the <xref:System.Messaging.Message.AdministrationQueue%2A> property."}]},{"pos":[1286,1631],"content":"When you use the <xref:System.Messaging.Message> class to read acknowledgment messages in the administration queue, the instance's <xref:System.Messaging.Message.Acknowledgment%2A> property indicates the condition responsible for the acknowledgment message, for example, if a time-out expired before the original message was read from the queue.","nodes":[{"content":"When you use the <ph id=\"ph1\">&lt;xref:System.Messaging.Message&gt;</ph> class to read acknowledgment messages in the administration queue, the instance's <ph id=\"ph2\">&lt;xref:System.Messaging.Message.Acknowledgment%2A&gt;</ph> property indicates the condition responsible for the acknowledgment message, for example, if a time-out expired before the original message was read from the queue.","pos":[0,345],"source":"When you use the <xref:System.Messaging.Message> class to read acknowledgment messages in the administration queue, the instance's <xref:System.Messaging.Message.Acknowledgment%2A> property indicates the condition responsible for the acknowledgment message, for example, if a time-out expired before the original message was read from the queue."}]}],"pos":[919,2559],"yaml":true,"extradata":"MT"},{"content":"A mask used to request positive acknowledgment if the original message reaches the queue or negative acknowledgment if the time-to-reach-queue timer expires or if the original message cannot be authenticated.","nodes":[{"pos":[0,208],"content":"A mask used to request positive acknowledgment if the original message reaches the queue or negative acknowledgment if the time-to-reach-queue timer expires or if the original message cannot be authenticated.","nodes":[{"content":"A mask used to request positive acknowledgment if the original message reaches the queue or negative acknowledgment if the time-to-reach-queue timer expires or if the original message cannot be authenticated.","pos":[0,208]}]}],"pos":[4370,4579],"yaml":true},{"content":"A mask used to request positive acknowledgment if the original message is received from the queue before its time-to-be-received timer expires or negative acknowledgment otherwise.","nodes":[{"pos":[0,180],"content":"A mask used to request positive acknowledgment if the original message is received from the queue before its time-to-be-received timer expires or negative acknowledgment otherwise.","nodes":[{"content":"A mask used to request positive acknowledgment if the original message is received from the queue before its time-to-be-received timer expires or negative acknowledgment otherwise.","pos":[0,180]}]}],"pos":[5581,5762],"yaml":true},{"content":"A mask used to request a negative acknowledgment when the original message fails to be received from the queue.","nodes":[{"pos":[0,111],"content":"A mask used to request a negative acknowledgment when the original message fails to be received from the queue.","nodes":[{"content":"A mask used to request a negative acknowledgment when the original message fails to be received from the queue.","pos":[0,111]}]}],"pos":[6785,6897],"yaml":true},{"content":"Using the <xref:System.Messaging.MessageQueue.Peek%2A?displayProperty=fullName> method does not remove a message from the queue, so this acknowledgment type could be returned even if you did peek the message. Only the <xref:System.Messaging.MessageQueue.Receive%2A?displayProperty=fullName> method (or the related asynchronous <xref:System.Messaging.MessageQueue.BeginReceive%2A?displayProperty=fullName> method) removes a message from the queue.","nodes":[{"pos":[0,446],"content":"Using the <xref:System.Messaging.MessageQueue.Peek%2A?displayProperty=fullName> method does not remove a message from the queue, so this acknowledgment type could be returned even if you did peek the message. Only the <xref:System.Messaging.MessageQueue.Receive%2A?displayProperty=fullName> method (or the related asynchronous <xref:System.Messaging.MessageQueue.BeginReceive%2A?displayProperty=fullName> method) removes a message from the queue.","nodes":[{"content":"Using the <xref:System.Messaging.MessageQueue.Peek%2A?displayProperty=fullName> method does not remove a message from the queue, so this acknowledgment type could be returned even if you did peek the message. Only the <xref:System.Messaging.MessageQueue.Receive%2A?displayProperty=fullName> method (or the related asynchronous <xref:System.Messaging.MessageQueue.BeginReceive%2A?displayProperty=fullName> method) removes a message from the queue.","pos":[0,446],"nodes":[{"content":"Using the <ph id=\"ph1\">&lt;xref:System.Messaging.MessageQueue.Peek%2A?displayProperty=fullName&gt;</ph> method does not remove a message from the queue, so this acknowledgment type could be returned even if you did peek the message.","pos":[0,208],"source":"Using the <xref:System.Messaging.MessageQueue.Peek%2A?displayProperty=fullName> method does not remove a message from the queue, so this acknowledgment type could be returned even if you did peek the message."},{"content":"Only the <ph id=\"ph1\">&lt;xref:System.Messaging.MessageQueue.Receive%2A?displayProperty=fullName&gt;</ph> method (or the related asynchronous <ph id=\"ph2\">&lt;xref:System.Messaging.MessageQueue.BeginReceive%2A?displayProperty=fullName&gt;</ph> method) removes a message from the queue.","pos":[209,446],"source":" Only the <xref:System.Messaging.MessageQueue.Receive%2A?displayProperty=fullName> method (or the related asynchronous <xref:System.Messaging.MessageQueue.BeginReceive%2A?displayProperty=fullName> method) removes a message from the queue."}]}]}],"pos":[6908,7355],"yaml":true,"extradata":"MT"},{"content":"A mask used to request that no acknowledgment messages (positive or negative) be posted.","nodes":[{"pos":[0,88],"content":"A mask used to request that no acknowledgment messages (positive or negative) be posted.","nodes":[{"content":"A mask used to request that no acknowledgment messages (positive or negative) be posted.","pos":[0,88]}]}],"pos":[8316,8405],"yaml":true},{"content":"A mask used to request a negative acknowledgment when the original message cannot reach the queue. This can happen when the time-to-reach-queue timer expires or if a message cannot be authenticated.","nodes":[{"pos":[0,198],"content":"A mask used to request a negative acknowledgment when the original message cannot reach the queue. This can happen when the time-to-reach-queue timer expires or if a message cannot be authenticated.","nodes":[{"content":"A mask used to request a negative acknowledgment when the original message cannot reach the queue. This can happen when the time-to-reach-queue timer expires or if a message cannot be authenticated.","pos":[0,198],"nodes":[{"content":"A mask used to request a negative acknowledgment when the original message cannot reach the queue.","pos":[0,98]},{"content":"This can happen when the time-to-reach-queue timer expires or if a message cannot be authenticated.","pos":[99,198]}]}]}],"pos":[9475,9674],"yaml":true},{"content":"A mask used to request a negative acknowledgment when an error occurs that prevents the original message from being received from the queue before its time-to-be-received timer expires.","nodes":[{"pos":[0,185],"content":"A mask used to request a negative acknowledgment when an error occurs that prevents the original message from being received from the queue before its time-to-be-received timer expires.","nodes":[{"content":"A mask used to request a negative acknowledgment when an error occurs that prevents the original message from being received from the queue before its time-to-be-received timer expires.","pos":[0,185]}]}],"pos":[10746,10932],"yaml":true},{"content":"A mask used to request a positive acknowledgment when the original message reaches the queue.","nodes":[{"pos":[0,93],"content":"A mask used to request a positive acknowledgment when the original message reaches the queue.","nodes":[{"content":"A mask used to request a positive acknowledgment when the original message reaches the queue.","pos":[0,93]}]}],"pos":[11965,12059],"yaml":true},{"content":"A mask used to request a positive acknowledgment when the original message is successfully retrieved from the queue.","nodes":[{"pos":[0,116],"content":"A mask used to request a positive acknowledgment when the original message is successfully retrieved from the queue.","nodes":[{"content":"A mask used to request a positive acknowledgment when the original message is successfully retrieved from the queue.","pos":[0,116]}]}],"pos":[13086,13203],"yaml":true}],"content":"### YamlMime:ManagedReference\nitems:\n- uid: System.Messaging.AcknowledgeTypes\n  commentId: T:System.Messaging.AcknowledgeTypes\n  id: AcknowledgeTypes\n  children:\n  - System.Messaging.AcknowledgeTypes.FullReachQueue\n  - System.Messaging.AcknowledgeTypes.FullReceive\n  - System.Messaging.AcknowledgeTypes.NegativeReceive\n  - System.Messaging.AcknowledgeTypes.None\n  - System.Messaging.AcknowledgeTypes.NotAcknowledgeReachQueue\n  - System.Messaging.AcknowledgeTypes.NotAcknowledgeReceive\n  - System.Messaging.AcknowledgeTypes.PositiveArrival\n  - System.Messaging.AcknowledgeTypes.PositiveReceive\n  langs:\n  - csharp\n  name: AcknowledgeTypes\n  nameWithType: AcknowledgeTypes\n  fullName: System.Messaging.AcknowledgeTypes\n  type: Enum\n  assemblies:\n  - System.Messaging\n  namespace: System.Messaging\n  summary: Specifies the types of acknowledgment message that Message Queuing returns to the sending application.\n  remarks: \"The <xref:System.Messaging.AcknowledgeTypes> class provides a set of flags that you can combine to request one or more categories of acknowledgment messages.  \\n  \\n When an application sends a message, it can request that Message Queuing return acknowledgment messages indicating the success or failure of the original message. Message Queuing sends these acknowledgment messages to the administration queue you specify. Acknowledgment types can be divided broadly into four groups: positive arrival acknowledgments, positive read acknowledgments, negative arrival acknowledgments, and negative read acknowledgments. Requesting acknowledgments enables your application to receive notification of certain occurrences—for example, a message reaching its destination queue, a message being retrieved, or a time-out preventing a message from reaching or being retrieved from the destination queue.  \\n  \\n When you are using the <xref:System.Messaging.Message> class to send messages to a queue, you specify the types of acknowledgments your application should receive in the <xref:System.Messaging.Message.AcknowledgeType%2A> property, as well as the administration queue that receives the acknowledgment messages in the <xref:System.Messaging.Message.AdministrationQueue%2A> property.  \\n  \\n When you use the <xref:System.Messaging.Message> class to read acknowledgment messages in the administration queue, the instance's <xref:System.Messaging.Message.Acknowledgment%2A> property indicates the condition responsible for the acknowledgment message, for example, if a time-out expired before the original message was read from the queue.\"\n  example:\n  - \"The following code example sends and receives a message that contains an order to and from a queue. It specifically requests a positive acknowledgment when the original message reaches or is retrieved from the queue.  \\n  \\n [!code-cpp[Message.Acknowledgment#1](~/samples/snippets/cpp/VS_Snippets_Remoting/Message.Acknowledgment/CPP/message_acknowledgment.cpp#1)]\\n [!code-csharp[Message.Acknowledgment#1](~/samples/snippets/csharp/VS_Snippets_Remoting/Message.Acknowledgment/CS/message_acknowledgment.cs#1)]\\n [!code-vb[Message.Acknowledgment#1](~/samples/snippets/visualbasic/VS_Snippets_Remoting/Message.Acknowledgment/VB/message_acknowledgment.vb#1)]\"\n  syntax:\n    content: >-\n      [System.Flags]\n\n      public enum AcknowledgeTypes\n  inheritance:\n  - System.Object\n  - System.ValueType\n  - System.Enum\n  attributes:\n  - type: System.FlagsAttribute\n  version:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - xamarinmac-3.0\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - xamarinmac-3.0\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Messaging/AcknowledgeTypes.xml\n  ms.technology:\n  - dotnet-standard\n  manager: tyoung\n- uid: System.Messaging.AcknowledgeTypes.FullReachQueue\n  commentId: F:System.Messaging.AcknowledgeTypes.FullReachQueue\n  id: FullReachQueue\n  parent: System.Messaging.AcknowledgeTypes\n  langs:\n  - csharp\n  name: FullReachQueue\n  nameWithType: AcknowledgeTypes.FullReachQueue\n  fullName: AcknowledgeTypes.FullReachQueue\n  type: Field\n  assemblies:\n  - System.Messaging\n  namespace: System.Messaging\n  summary: A mask used to request positive acknowledgment if the original message reaches the queue or negative acknowledgment if the time-to-reach-queue timer expires or if the original message cannot be authenticated.\n  syntax:\n    content: FullReachQueue\n    return:\n      type: System.Messaging.AcknowledgeTypes\n      description: ''\n  exceptions: []\n  version:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - xamarinmac-3.0\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - xamarinmac-3.0\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Messaging/AcknowledgeTypes.xml\n- uid: System.Messaging.AcknowledgeTypes.FullReceive\n  commentId: F:System.Messaging.AcknowledgeTypes.FullReceive\n  id: FullReceive\n  parent: System.Messaging.AcknowledgeTypes\n  langs:\n  - csharp\n  name: FullReceive\n  nameWithType: AcknowledgeTypes.FullReceive\n  fullName: AcknowledgeTypes.FullReceive\n  type: Field\n  assemblies:\n  - System.Messaging\n  namespace: System.Messaging\n  summary: A mask used to request positive acknowledgment if the original message is received from the queue before its time-to-be-received timer expires or negative acknowledgment otherwise.\n  syntax:\n    content: FullReceive\n    return:\n      type: System.Messaging.AcknowledgeTypes\n      description: ''\n  exceptions: []\n  version:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - xamarinmac-3.0\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - xamarinmac-3.0\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Messaging/AcknowledgeTypes.xml\n- uid: System.Messaging.AcknowledgeTypes.NegativeReceive\n  commentId: F:System.Messaging.AcknowledgeTypes.NegativeReceive\n  id: NegativeReceive\n  parent: System.Messaging.AcknowledgeTypes\n  langs:\n  - csharp\n  name: NegativeReceive\n  nameWithType: AcknowledgeTypes.NegativeReceive\n  fullName: AcknowledgeTypes.NegativeReceive\n  type: Field\n  assemblies:\n  - System.Messaging\n  namespace: System.Messaging\n  summary: A mask used to request a negative acknowledgment when the original message fails to be received from the queue.\n  remarks: Using the <xref:System.Messaging.MessageQueue.Peek%2A?displayProperty=fullName> method does not remove a message from the queue, so this acknowledgment type could be returned even if you did peek the message. Only the <xref:System.Messaging.MessageQueue.Receive%2A?displayProperty=fullName> method (or the related asynchronous <xref:System.Messaging.MessageQueue.BeginReceive%2A?displayProperty=fullName> method) removes a message from the queue.\n  syntax:\n    content: NegativeReceive\n    return:\n      type: System.Messaging.AcknowledgeTypes\n      description: ''\n  exceptions: []\n  version:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - xamarinmac-3.0\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - xamarinmac-3.0\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Messaging/AcknowledgeTypes.xml\n- uid: System.Messaging.AcknowledgeTypes.None\n  commentId: F:System.Messaging.AcknowledgeTypes.None\n  id: None\n  parent: System.Messaging.AcknowledgeTypes\n  langs:\n  - csharp\n  name: None\n  nameWithType: AcknowledgeTypes.None\n  fullName: AcknowledgeTypes.None\n  type: Field\n  assemblies:\n  - System.Messaging\n  namespace: System.Messaging\n  summary: A mask used to request that no acknowledgment messages (positive or negative) be posted.\n  syntax:\n    content: None\n    return:\n      type: System.Messaging.AcknowledgeTypes\n      description: ''\n  exceptions: []\n  version:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - xamarinmac-3.0\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - xamarinmac-3.0\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Messaging/AcknowledgeTypes.xml\n- uid: System.Messaging.AcknowledgeTypes.NotAcknowledgeReachQueue\n  commentId: F:System.Messaging.AcknowledgeTypes.NotAcknowledgeReachQueue\n  id: NotAcknowledgeReachQueue\n  parent: System.Messaging.AcknowledgeTypes\n  langs:\n  - csharp\n  name: NotAcknowledgeReachQueue\n  nameWithType: AcknowledgeTypes.NotAcknowledgeReachQueue\n  fullName: AcknowledgeTypes.NotAcknowledgeReachQueue\n  type: Field\n  assemblies:\n  - System.Messaging\n  namespace: System.Messaging\n  summary: A mask used to request a negative acknowledgment when the original message cannot reach the queue. This can happen when the time-to-reach-queue timer expires or if a message cannot be authenticated.\n  syntax:\n    content: NotAcknowledgeReachQueue\n    return:\n      type: System.Messaging.AcknowledgeTypes\n      description: ''\n  exceptions: []\n  version:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - xamarinmac-3.0\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - xamarinmac-3.0\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Messaging/AcknowledgeTypes.xml\n- uid: System.Messaging.AcknowledgeTypes.NotAcknowledgeReceive\n  commentId: F:System.Messaging.AcknowledgeTypes.NotAcknowledgeReceive\n  id: NotAcknowledgeReceive\n  parent: System.Messaging.AcknowledgeTypes\n  langs:\n  - csharp\n  name: NotAcknowledgeReceive\n  nameWithType: AcknowledgeTypes.NotAcknowledgeReceive\n  fullName: AcknowledgeTypes.NotAcknowledgeReceive\n  type: Field\n  assemblies:\n  - System.Messaging\n  namespace: System.Messaging\n  summary: A mask used to request a negative acknowledgment when an error occurs that prevents the original message from being received from the queue before its time-to-be-received timer expires.\n  syntax:\n    content: NotAcknowledgeReceive\n    return:\n      type: System.Messaging.AcknowledgeTypes\n      description: ''\n  exceptions: []\n  version:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - xamarinmac-3.0\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - xamarinmac-3.0\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Messaging/AcknowledgeTypes.xml\n- uid: System.Messaging.AcknowledgeTypes.PositiveArrival\n  commentId: F:System.Messaging.AcknowledgeTypes.PositiveArrival\n  id: PositiveArrival\n  parent: System.Messaging.AcknowledgeTypes\n  langs:\n  - csharp\n  name: PositiveArrival\n  nameWithType: AcknowledgeTypes.PositiveArrival\n  fullName: AcknowledgeTypes.PositiveArrival\n  type: Field\n  assemblies:\n  - System.Messaging\n  namespace: System.Messaging\n  summary: A mask used to request a positive acknowledgment when the original message reaches the queue.\n  syntax:\n    content: PositiveArrival\n    return:\n      type: System.Messaging.AcknowledgeTypes\n      description: ''\n  exceptions: []\n  version:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - xamarinmac-3.0\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - xamarinmac-3.0\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Messaging/AcknowledgeTypes.xml\n- uid: System.Messaging.AcknowledgeTypes.PositiveReceive\n  commentId: F:System.Messaging.AcknowledgeTypes.PositiveReceive\n  id: PositiveReceive\n  parent: System.Messaging.AcknowledgeTypes\n  langs:\n  - csharp\n  name: PositiveReceive\n  nameWithType: AcknowledgeTypes.PositiveReceive\n  fullName: AcknowledgeTypes.PositiveReceive\n  type: Field\n  assemblies:\n  - System.Messaging\n  namespace: System.Messaging\n  summary: A mask used to request a positive acknowledgment when the original message is successfully retrieved from the queue.\n  syntax:\n    content: PositiveReceive\n    return:\n      type: System.Messaging.AcknowledgeTypes\n      description: ''\n  exceptions: []\n  version:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - xamarinmac-3.0\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - xamarinmac-3.0\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Messaging/AcknowledgeTypes.xml\nreferences:\n- uid: System.Enum\n  parent: System\n  isExternal: false\n  name: Enum\n  nameWithType: Enum\n  fullName: System.Enum\n- uid: System.Messaging.AcknowledgeTypes.FullReachQueue\n  parent: System.Messaging.AcknowledgeTypes\n  isExternal: false\n  name: FullReachQueue\n  nameWithType: AcknowledgeTypes.FullReachQueue\n  fullName: AcknowledgeTypes.FullReachQueue\n- uid: System.Messaging.AcknowledgeTypes\n  parent: System.Messaging\n  isExternal: false\n  name: AcknowledgeTypes\n  nameWithType: AcknowledgeTypes\n  fullName: System.Messaging.AcknowledgeTypes\n- uid: System.Messaging.AcknowledgeTypes.FullReceive\n  parent: System.Messaging.AcknowledgeTypes\n  isExternal: false\n  name: FullReceive\n  nameWithType: AcknowledgeTypes.FullReceive\n  fullName: AcknowledgeTypes.FullReceive\n- uid: System.Messaging.AcknowledgeTypes.NegativeReceive\n  parent: System.Messaging.AcknowledgeTypes\n  isExternal: false\n  name: NegativeReceive\n  nameWithType: AcknowledgeTypes.NegativeReceive\n  fullName: AcknowledgeTypes.NegativeReceive\n- uid: System.Messaging.AcknowledgeTypes.None\n  parent: System.Messaging.AcknowledgeTypes\n  isExternal: false\n  name: None\n  nameWithType: AcknowledgeTypes.None\n  fullName: AcknowledgeTypes.None\n- uid: System.Messaging.AcknowledgeTypes.NotAcknowledgeReachQueue\n  parent: System.Messaging.AcknowledgeTypes\n  isExternal: false\n  name: NotAcknowledgeReachQueue\n  nameWithType: AcknowledgeTypes.NotAcknowledgeReachQueue\n  fullName: AcknowledgeTypes.NotAcknowledgeReachQueue\n- uid: System.Messaging.AcknowledgeTypes.NotAcknowledgeReceive\n  parent: System.Messaging.AcknowledgeTypes\n  isExternal: false\n  name: NotAcknowledgeReceive\n  nameWithType: AcknowledgeTypes.NotAcknowledgeReceive\n  fullName: AcknowledgeTypes.NotAcknowledgeReceive\n- uid: System.Messaging.AcknowledgeTypes.PositiveArrival\n  parent: System.Messaging.AcknowledgeTypes\n  isExternal: false\n  name: PositiveArrival\n  nameWithType: AcknowledgeTypes.PositiveArrival\n  fullName: AcknowledgeTypes.PositiveArrival\n- uid: System.Messaging.AcknowledgeTypes.PositiveReceive\n  parent: System.Messaging.AcknowledgeTypes\n  isExternal: false\n  name: PositiveReceive\n  nameWithType: AcknowledgeTypes.PositiveReceive\n  fullName: AcknowledgeTypes.PositiveReceive\n"}