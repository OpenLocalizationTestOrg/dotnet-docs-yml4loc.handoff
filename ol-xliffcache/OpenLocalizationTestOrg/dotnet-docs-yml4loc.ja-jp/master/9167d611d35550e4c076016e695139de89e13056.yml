### YamlMime:ManagedReference
items:
- uid: System.IComparable`1
  commentId: T:System.IComparable`1
  id: IComparable`1
  children:
  - System.IComparable`1.CompareTo(`0)
  langs:
  - csharp
  name: IComparable<T>
  nameWithType: IComparable<T>
  fullName: System.IComparable<T>
  type: Interface
  assemblies:
  - System.Runtime
  - mscorlib
  - netstandard
  namespace: System
  summary: Defines a generalized comparison method that a value type or class implements to create a type-specific comparison method for ordering or sorting its instances.
  remarks: "This interface is implemented by types whose values can be ordered or sorted and provides a strongly typed comparison method for ordering members of a generic collection object. For example, one number can be larger than a second number, and one string can appear in alphabetical order before another. It requires that implementing types define a single method, <xref:System.IComparable%601.CompareTo%28%600%29>, that indicates whether the position of the current instance in the sort order is before, after, or the same as a second object of the same type. Typically, the method is not called directly from developer code. Instead, it is called automatically by methods such as <xref:System.Collections.Generic.List%601.Sort?displayProperty=fullName> and <xref:System.Collections.Generic.SortedList%602.Add%2A>.  \n  \n Typically, types that provide an <xref:System.IComparable%601> implementation also implement the <xref:System.IEquatable%601> interface. The <xref:System.IEquatable%601> interface defines the <xref:System.IEquatable%601.Equals%2A> method, which determines the equality of instances of the implementing type.  \n  \n The implementation of the <xref:System.IComparable%601.CompareTo%28%600%29> method must return an <xref:System.Int32> that has one of three values, as shown in the following table.  \n  \n|Value|Meaning|  \n|-----------|-------------|  \n|Less than zero|This object precedes the object specified by the <xref:System.IComparable%601.CompareTo%2A> method in the sort order.|  \n|Zero|This current instance occurs in the same position in the sort order as the object specified by the <xref:System.IComparable%601.CompareTo%2A> method argument.|  \n|Greater than zero|This current instance follows the object specified by the <xref:System.IComparable%601.CompareTo%2A> method argument in the sort order.|  \n  \n All numeric types (such as <xref:System.Int32> and <xref:System.Double>) implement <xref:System.IComparable%601>, as do <xref:System.String>, <xref:System.Char>, and <xref:System.DateTime>. Custom types should also provide their own implementation of <xref:System.IComparable%601> to enable object instances to be ordered or sorted."
  example:
  - "The following code example illustrates the implementation of  <xref:System.IComparable%601> for a simple `Temperature` object. The example creates a <xref:System.Collections.Generic.SortedList%602> collection of strings with `Temperature` object keys, and adds several pairs of temperatures and strings to the list out of sequence. In the call to the <xref:System.Collections.Generic.SortedList%602.Add%2A> method, the <xref:System.Collections.Generic.SortedList%602> collection uses the <xref:System.IComparable%601> implementation to sort the list entries, which are then displayed in order of increasing temperature.  \n  \n [!code-cpp[IComparable\\`1 Example#1](~/samples/snippets/cpp/VS_Snippets_CLR/IComparable`1 Example/CPP/source.cpp#1)]\n [!code-csharp[IComparable\\`1 Example#1](~/samples/snippets/csharp/VS_Snippets_CLR/IComparable`1 Example/CS/source.cs#1)]\n [!code-vb[IComparable\\`1 Example#1](~/samples/snippets/visualbasic/VS_Snippets_CLR/IComparable`1 Example/VB/source.vb#1)]"
  syntax:
    content: public interface IComparable<in T>
    typeParameters:
    - id: T
      description: The type of object to compare.
  derivedClasses:
  - Microsoft.FSharp.Collections.FSharpList`1
  - Microsoft.FSharp.Core.FSharpChoice`2
  - Microsoft.FSharp.Core.FSharpChoice`3
  - Microsoft.FSharp.Core.FSharpChoice`4
  - Microsoft.FSharp.Core.FSharpChoice`5
  - Microsoft.FSharp.Core.FSharpChoice`6
  - Microsoft.FSharp.Core.FSharpChoice`7
  - Microsoft.FSharp.Core.FSharpOption`1
  - Microsoft.FSharp.Core.FSharpRef`1
  - System.Boolean
  - System.Byte
  - System.Char
  - System.DateTime
  - System.DateTimeOffset
  - System.Decimal
  - System.Double
  - System.Guid
  - System.Int16
  - System.Int32
  - System.Int64
  - System.SByte
  - System.Single
  - System.String
  - System.TimeSpan
  - System.UInt16
  - System.UInt32
  - System.UInt64
  - System.ValueTuple
  - System.ValueTuple`1
  - System.ValueTuple`2
  - System.ValueTuple`3
  - System.ValueTuple`4
  - System.ValueTuple`5
  - System.ValueTuple`6
  - System.ValueTuple`7
  - System.ValueTuple`8
  - System.Version
  - System.IO.Log.SequenceNumber
  - System.Numerics.BigInteger
  - System.Security.Principal.SecurityIdentifier
  - System.ServiceModel.Discovery.DiscoveryMessageSequence
  implements: []
  version:
  - netcore-1.0
  - netcore-1.1
  - netcore-2.0
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  - netstandard-1.0
  - netstandard-1.1
  - netstandard-1.2
  - netstandard-1.3
  - netstandard-1.4
  - netstandard-1.5
  - netstandard-1.6
  - netstandard-2.0
  - xamarinandroid-7.1
  - xamarinios-10.8
  - xamarinmac-3.0
  monikers:
  - netcore-1.0
  - netcore-1.1
  - netcore-2.0
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  - netstandard-1.0
  - netstandard-1.1
  - netstandard-1.2
  - netstandard-1.3
  - netstandard-1.4
  - netstandard-1.5
  - netstandard-1.6
  - netstandard-2.0
  - xamarinandroid-7.1
  - xamarinios-10.8
  - xamarinmac-3.0
  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System/IComparable`1.xml
  ms.technology:
  - dotnet-standard
  author: rpetrusha
  ms.author: ronpet
  manager: wpickett
- uid: System.IComparable`1.CompareTo(`0)
  commentId: M:System.IComparable`1.CompareTo(`0)
  id: CompareTo(`0)
  parent: System.IComparable`1
  langs:
  - csharp
  name: CompareTo(T)
  nameWithType: IComparable<T>.CompareTo(T)
  fullName: IComparable<T>.CompareTo(T)
  type: Method
  assemblies:
  - System.Runtime
  - mscorlib
  - netstandard
  namespace: System
  summary: Compares the current instance with another object of the same type and returns an integer that indicates whether the current instance precedes, follows, or occurs in the same position in the sort order as the other object.
  remarks: "<xref:System.IComparable%601.CompareTo%2A> provides a strongly typed comparison method for ordering members of a generic collection object. Because of this, it is usually not called directly from developer code. Instead, it is called automatically by methods such as <xref:System.Collections.Generic.List%601.Sort?displayProperty=fullName> and <xref:System.Collections.Generic.SortedList%602.Add%2A>.  \n  \n This method is only a definition and must be implemented by a specific class or value type to have effect. The meaning of the comparisons specified in the Return Values section (\"precedes\", \"occurs in the same position as\", and \"follows) depends on the particular implementation.  \n  \n By definition, any object compares greater than `null`, and two null references compare equal to each other."
  example:
  - "The following code example illustrates the implementation of <xref:System.IComparable> for a simple `Temperature` object. The example creates a <xref:System.Collections.Generic.SortedList%602> collection of strings with `Temperature` object keys, and adds several pairs of temperatures and strings to the list out of sequence. In the call to the <xref:System.Collections.Generic.SortedList%602.Add%2A> method, the <xref:System.Collections.Generic.SortedList%602> collection uses the <xref:System.IComparable%601> implementation to sort the list entries, which are then displayed in order of increasing temperature.  \n  \n [!code-cpp[IComparable\\`1 Example#1](~/samples/snippets/cpp/VS_Snippets_CLR/IComparable`1 Example/CPP/source.cpp#1)]\n [!code-csharp[IComparable\\`1 Example#1](~/samples/snippets/csharp/VS_Snippets_CLR/IComparable`1 Example/CS/source.cs#1)]\n [!code-vb[IComparable\\`1 Example#1](~/samples/snippets/visualbasic/VS_Snippets_CLR/IComparable`1 Example/VB/source.vb#1)]"
  syntax:
    content: public int CompareTo (T other);
    parameters:
    - id: other
      type: T
      description: An object to compare with this instance.
    return:
      type: System.Int32
      description: "A value that indicates the relative order of the objects being compared. The return value has these meanings:  \n  \n <table><thead><tr><th> Value  \n  \n </th><th> Meaning  \n  \n </th></tr></thead><tbody><tr><td> Less than zero  \n  \n </td><td> This instance precedes <code>other</code> in the sort order.  \n  \n </td></tr><tr><td> Zero  \n  \n </td><td> This instance occurs in the same position in the sort order as <code>other</code>.  \n  \n </td></tr><tr><td> Greater than zero  \n  \n </td><td> This instance follows <code>other</code> in the sort order.  \n  \n </td></tr></tbody></table>"
  overload: System.IComparable`1.CompareTo*
  exceptions: []
  version:
  - netcore-1.0
  - netcore-1.1
  - netcore-2.0
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  - netstandard-1.0
  - netstandard-1.1
  - netstandard-1.2
  - netstandard-1.3
  - netstandard-1.4
  - netstandard-1.5
  - netstandard-1.6
  - netstandard-2.0
  - xamarinandroid-7.1
  - xamarinios-10.8
  - xamarinmac-3.0
  monikers:
  - netcore-1.0
  - netcore-1.1
  - netcore-2.0
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  - netstandard-1.0
  - netstandard-1.1
  - netstandard-1.2
  - netstandard-1.3
  - netstandard-1.4
  - netstandard-1.5
  - netstandard-1.6
  - netstandard-2.0
  - xamarinandroid-7.1
  - xamarinios-10.8
  - xamarinmac-3.0
  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System/IComparable`1.xml
  ms.technology:
  - dotnet-standard
  author: rpetrusha
  ms.author: ronpet
  manager: wpickett
references:
- uid: System.IComparable`1.CompareTo(`0)
  parent: System.IComparable`1
  isExternal: false
  name: CompareTo(T)
  nameWithType: IComparable<T>.CompareTo(T)
  fullName: IComparable<T>.CompareTo(T)
- uid: System.Int32
  parent: System
  isExternal: false
  name: Int32
  nameWithType: Int32
  fullName: System.Int32
- uid: T
  isExternal: true
  name: T
  nameWithType: T
  fullName: T
- uid: System.IComparable`1.CompareTo*
  parent: System.IComparable`1
  isExternal: false
  name: CompareTo
  nameWithType: IComparable<T>.CompareTo
  fullName: IComparable<T>.CompareTo
  monikers:
  - netcore-1.0
  - netcore-1.1
  - netcore-2.0
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  - netstandard-1.0
  - netstandard-1.1
  - netstandard-1.2
  - netstandard-1.3
  - netstandard-1.4
  - netstandard-1.5
  - netstandard-1.6
  - netstandard-2.0
  - xamarinandroid-7.1
  - xamarinios-10.8
  - xamarinmac-3.0
  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System/IComparable`1.xml
