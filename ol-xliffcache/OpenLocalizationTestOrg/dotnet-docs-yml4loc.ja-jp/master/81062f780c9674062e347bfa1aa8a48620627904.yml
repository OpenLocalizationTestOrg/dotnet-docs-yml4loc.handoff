### YamlMime:ManagedReference
items:
- uid: System.Windows.Media.RenderCapability
  commentId: T:System.Windows.Media.RenderCapability
  id: RenderCapability
  children:
  - System.Windows.Media.RenderCapability.IsPixelShaderVersionSupported(System.Int16,System.Int16)
  - System.Windows.Media.RenderCapability.IsPixelShaderVersionSupportedInSoftware(System.Int16,System.Int16)
  - System.Windows.Media.RenderCapability.IsShaderEffectSoftwareRenderingSupported
  - System.Windows.Media.RenderCapability.MaxHardwareTextureSize
  - System.Windows.Media.RenderCapability.MaxPixelShaderInstructionSlots(System.Int16,System.Int16)
  - System.Windows.Media.RenderCapability.Tier
  - System.Windows.Media.RenderCapability.TierChanged
  langs:
  - csharp
  name: RenderCapability
  nameWithType: RenderCapability
  fullName: System.Windows.Media.RenderCapability
  type: Class
  assemblies:
  - PresentationCore
  namespace: System.Windows.Media
  summary: Enables WPF applications to query for the current rendering tier for their associated <xref href="System.Windows.Threading.Dispatcher"></xref> object and to register for notification of changes.
  remarks: "A rendering tier defines a level of graphics hardware capability and performance for a device that runs a [!INCLUDE[TLA2#tla_winclient](~/includes/tla2sharptla-winclient-md.md)] application. The features of the graphics hardware that most affect the rendering tier levels are the following:  \n  \n-   Video RAM: The amount of video memory on the graphics hardware determines the size and number of buffers that can be used for compositing graphics.  \n  \n-   Pixel Shader: A pixel shader is a graphics processing function that calculates effects on a per-pixel basis. Depending on the resolution of the displayed graphics, there could be several million pixels that need to be processed for each display frame.  \n  \n-   Vertex Shader: A vertex shader is a graphics processing function that performs mathematical operations on the vertex data of the object.  \n  \n-   Multitexture Support: Multitexture support refers to the ability to apply two or more distinct textures during a blending operation on a 3D graphics object. The degree of multitexture support is determined by the number of multitexture units on the graphics hardware.  \n  \n The pixel shader, vertex shader, and multitexture features are used to define specific [!INCLUDE[TLA2#tla_dx](~/includes/tla2sharptla-dx-md.md)] version levels, which, in turn, are used to define the different rendering tiers in [!INCLUDE[TLA2#tla_winclient](~/includes/tla2sharptla-winclient-md.md)]. For a full description of the rendering tiers, see [Graphics Rendering Tiers](~/docs/framework/wpf/advanced/graphics-rendering-tiers.md)."
  syntax:
    content: public static class RenderCapability
  inheritance:
  - System.Object
  implements: []
  inheritedMembers:
  - System.Object.Equals(System.Object)
  - System.Object.Equals(System.Object,System.Object)
  - System.Object.GetHashCode
  - System.Object.GetType
  - System.Object.MemberwiseClone
  - System.Object.ReferenceEquals(System.Object,System.Object)
  - System.Object.ToString
  version:
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  monikers:
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Windows.Media/RenderCapability.xml
  ms.technology:
  - dotnet-wpf
  ms.author: kempb
  manager: ghogen
- uid: System.Windows.Media.RenderCapability.IsPixelShaderVersionSupported(System.Int16,System.Int16)
  commentId: M:System.Windows.Media.RenderCapability.IsPixelShaderVersionSupported(System.Int16,System.Int16)
  id: IsPixelShaderVersionSupported(System.Int16,System.Int16)
  parent: System.Windows.Media.RenderCapability
  langs:
  - csharp
  name: IsPixelShaderVersionSupported(Int16, Int16)
  nameWithType: RenderCapability.IsPixelShaderVersionSupported(Int16, Int16)
  fullName: RenderCapability.IsPixelShaderVersionSupported(Int16, Int16)
  type: Method
  assemblies:
  - PresentationCore
  namespace: System.Windows.Media
  summary: Gets a value that indicates whether the specified pixel shader version is supported.
  remarks: The <xref:System.Windows.Media.RenderCapability.IsPixelShaderVersionSupported%2A> method returns `true` if the pixel shader version is supported by the current version of WPF, and if an <xref:System.Windows.Media.Effects.Effect> using the specified major/minor version can run on the GPU.
  syntax:
    content: public static bool IsPixelShaderVersionSupported (short majorVersionRequested, short minorVersionRequested);
    parameters:
    - id: majorVersionRequested
      type: System.Int16
      description: The major version of the pixel shader.
    - id: minorVersionRequested
      type: System.Int16
      description: The minor version of the pixel shader.
    return:
      type: System.Boolean
      description: '`true` if the pixel shader version is supported by the current version of WPF; otherwise, `false`.'
  overload: System.Windows.Media.RenderCapability.IsPixelShaderVersionSupported*
  exceptions: []
  version:
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  monikers:
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Windows.Media/RenderCapability.xml
  ms.technology:
  - dotnet-wpf
  author: stevehoag
  ms.author: shoag
  manager: wpickett
- uid: System.Windows.Media.RenderCapability.IsPixelShaderVersionSupportedInSoftware(System.Int16,System.Int16)
  commentId: M:System.Windows.Media.RenderCapability.IsPixelShaderVersionSupportedInSoftware(System.Int16,System.Int16)
  id: IsPixelShaderVersionSupportedInSoftware(System.Int16,System.Int16)
  parent: System.Windows.Media.RenderCapability
  langs:
  - csharp
  name: IsPixelShaderVersionSupportedInSoftware(Int16, Int16)
  nameWithType: RenderCapability.IsPixelShaderVersionSupportedInSoftware(Int16, Int16)
  fullName: RenderCapability.IsPixelShaderVersionSupportedInSoftware(Int16, Int16)
  type: Method
  assemblies:
  - PresentationCore
  namespace: System.Windows.Media
  summary: Gets a value that indicates whether the specified pixel shader version can be rendered in software on the current system.
  remarks: Software rendering is only supported for Pixel Shader 2.0.
  syntax:
    content: public static bool IsPixelShaderVersionSupportedInSoftware (short majorVersionRequested, short minorVersionRequested);
    parameters:
    - id: majorVersionRequested
      type: System.Int16
      description: The major version of the pixel shader.
    - id: minorVersionRequested
      type: System.Int16
      description: The minor version of the pixel shader.
    return:
      type: System.Boolean
      description: '`true` if the pixel shader can be rendered in software on the current system; otherwise, `false`.'
  overload: System.Windows.Media.RenderCapability.IsPixelShaderVersionSupportedInSoftware*
  exceptions: []
  version:
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  monikers:
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Windows.Media/RenderCapability.xml
  ms.technology:
  - dotnet-wpf
  author: stevehoag
  ms.author: shoag
  manager: wpickett
- uid: System.Windows.Media.RenderCapability.IsShaderEffectSoftwareRenderingSupported
  commentId: P:System.Windows.Media.RenderCapability.IsShaderEffectSoftwareRenderingSupported
  id: IsShaderEffectSoftwareRenderingSupported
  parent: System.Windows.Media.RenderCapability
  langs:
  - csharp
  name: IsShaderEffectSoftwareRenderingSupported
  nameWithType: RenderCapability.IsShaderEffectSoftwareRenderingSupported
  fullName: RenderCapability.IsShaderEffectSoftwareRenderingSupported
  type: Property
  assemblies:
  - PresentationCore
  namespace: System.Windows.Media
  summary: Gets a value that indicates whether the system can render bitmap effects in software.
  syntax:
    content: >-
      [System.Obsolete("IsShaderEffectSoftwareRenderingSupported property is deprecated.  Use IsPixelShaderVersionSupportedInSoftware static method instead.")]

      public static bool IsShaderEffectSoftwareRenderingSupported { get; }
    return:
      type: System.Boolean
      description: '`true` if the system can render bitmap effects in software; otherwise, `false`.'
  overload: System.Windows.Media.RenderCapability.IsShaderEffectSoftwareRenderingSupported*
  exceptions: []
  attributes:
  - type: System.ObsoleteAttribute
  version:
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  monikers:
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Windows.Media/RenderCapability.xml
  ms.technology:
  - dotnet-wpf
  ms.author: kempb
  manager: ghogen
- uid: System.Windows.Media.RenderCapability.MaxHardwareTextureSize
  commentId: P:System.Windows.Media.RenderCapability.MaxHardwareTextureSize
  id: MaxHardwareTextureSize
  parent: System.Windows.Media.RenderCapability
  langs:
  - csharp
  name: MaxHardwareTextureSize
  nameWithType: RenderCapability.MaxHardwareTextureSize
  fullName: RenderCapability.MaxHardwareTextureSize
  type: Property
  assemblies:
  - PresentationCore
  namespace: System.Windows.Media
  summary: Gets the maximum width and height for bitmap creation of the underlying hardware device.
  remarks: If there are multiple devices, <xref:System.Windows.Media.RenderCapability.MaxHardwareTextureSize%2A> returns the minimum size among them.
  syntax:
    content: public static System.Windows.Size MaxHardwareTextureSize { get; }
    return:
      type: System.Windows.Size
      description: A <xref href="System.Windows.Size"></xref> that represents the maximum width and height for hardware bitmap creation.
  overload: System.Windows.Media.RenderCapability.MaxHardwareTextureSize*
  exceptions: []
  version:
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  monikers:
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Windows.Media/RenderCapability.xml
  ms.technology:
  - dotnet-wpf
  author: stevehoag
  ms.author: shoag
  manager: wpickett
- uid: System.Windows.Media.RenderCapability.MaxPixelShaderInstructionSlots(System.Int16,System.Int16)
  commentId: M:System.Windows.Media.RenderCapability.MaxPixelShaderInstructionSlots(System.Int16,System.Int16)
  id: MaxPixelShaderInstructionSlots(System.Int16,System.Int16)
  parent: System.Windows.Media.RenderCapability
  langs:
  - csharp
  name: MaxPixelShaderInstructionSlots(Int16, Int16)
  nameWithType: RenderCapability.MaxPixelShaderInstructionSlots(Int16, Int16)
  fullName: RenderCapability.MaxPixelShaderInstructionSlots(Int16, Int16)
  type: Method
  assemblies:
  - PresentationCore
  namespace: System.Windows.Media
  summary: Gets the maximum number of instruction slots supported by the specified pixel shader version.
  remarks: "The number of instruction slots supported by Pixel Shader 3.0 varies, but is always 512 or greater.  \n  \n Only Pixel Shader 2.0 and 3.0 are supported."
  syntax:
    content: public static int MaxPixelShaderInstructionSlots (short majorVersionRequested, short minorVersionRequested);
    parameters:
    - id: majorVersionRequested
      type: System.Int16
      description: The major version of the pixel shader.
    - id: minorVersionRequested
      type: System.Int16
      description: The minor version of the pixel shader.
    return:
      type: System.Int32
      description: 96 for Pixel Shader 2.0, 512 or greater for Pixel Shader 3.0, or 0 for any other version of Pixel Shader.
  overload: System.Windows.Media.RenderCapability.MaxPixelShaderInstructionSlots*
  exceptions: []
  version:
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  monikers:
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Windows.Media/RenderCapability.xml
  ms.technology:
  - dotnet-wpf
  author: stevehoag
  ms.author: shoag
  manager: wpickett
- uid: System.Windows.Media.RenderCapability.Tier
  commentId: P:System.Windows.Media.RenderCapability.Tier
  id: Tier
  parent: System.Windows.Media.RenderCapability
  langs:
  - csharp
  name: Tier
  nameWithType: RenderCapability.Tier
  fullName: RenderCapability.Tier
  type: Property
  assemblies:
  - PresentationCore
  namespace: System.Windows.Media
  summary: Gets a value that indicates the rendering tier for the current thread.
  remarks: "> [!NOTE]\n>  Starting in the .NET Framework 4, rendering tier 1 has been redefined to only include graphics hardware that supports [!INCLUDE[TLA2#tla_dx](~/includes/tla2sharptla-dx-md.md)] 9.0 or greater. Graphics hardware that supports [!INCLUDE[TLA2#tla_dx](~/includes/tla2sharptla-dx-md.md)] 7 or 8 is now defined as rendering tier 0.  \n  \n The return value is one of three possible values:  \n  \n|Return value|Rendering tier|Notes|  \n|------------------|--------------------|-----------|  \n|0x00000000|0|No graphics hardware acceleration is available for the application on the device. All graphics features use software acceleration. The [!INCLUDE[TLA2#tla_dx](~/includes/tla2sharptla-dx-md.md)] version level is less than version 9.0.|  \n|0x00010000|1|Most of the graphics features of [!INCLUDE[TLA2#tla_winclient](~/includes/tla2sharptla-winclient-md.md)] will use hardware acceleration if the necessary system resources are available and have not been exhausted. This corresponds to a [!INCLUDE[TLA2#tla_dx](~/includes/tla2sharptla-dx-md.md)] version that is greater than or equal to 9.0.|  \n|0x00020000|2|Most of the graphics features of [!INCLUDE[TLA2#tla_winclient](~/includes/tla2sharptla-winclient-md.md)] will use hardware acceleration provided the necessary system resources have not been exhausted. This corresponds to a [!INCLUDE[TLA2#tla_dx](~/includes/tla2sharptla-dx-md.md)] version that is greater than or equal to 9.0.|  \n  \n The following table shows the differences in graphics hardware requirements for rendering tier 1 and rendering tier 2:  \n  \n|Feature|Tier 1|Tier 2|  \n|-------------|------------|------------|  \n|[!INCLUDE[TLA2#tla_dx](~/includes/tla2sharptla-dx-md.md)] version|Must be greater than or equal to 9.0.|Must be greater than or equal to 9.0.|  \n|Video RAM|Must be greater than or equal to 60MB.|Must be greater than or equal to 120MB.|  \n|Pixel shader|Version level must greater than or equal to 2.0.|Version level must greater than or equal to 2.0.|  \n|Vertex shader|No requirement.|Version level must greater than or equal to 2.0.|  \n|Multitexture units|No requirement.|Number of units must greater than or equal to 4.|  \n  \n For more information on the definitions for the rendering tiers, see [Graphics Rendering Tiers](~/docs/framework/wpf/advanced/graphics-rendering-tiers.md).  \n  \n If the current thread does not have an associated <xref:System.Windows.Threading.Dispatcher> object, one is automatically created."
  example:
  - "The following example shows how to return the rendering tier for the current thread.  \n  \n [!code-csharp[RenderOptions#RenderCapability1](~/samples/snippets/csharp/VS_Snippets_Wpf/RenderOptions/CSharp/Window1.xaml.cs#rendercapability1)]\n [!code-vb[RenderOptions#RenderCapability1](~/samples/snippets/visualbasic/VS_Snippets_Wpf/RenderOptions/visualbasic/window1.xaml.vb#rendercapability1)]"
  syntax:
    content: public static int Tier { get; }
    return:
      type: System.Int32
      description: An <xref href="System.Int32"></xref> value whose high-order word corresponds to the rendering tier for the current thread.
  overload: System.Windows.Media.RenderCapability.Tier*
  exceptions: []
  version:
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  monikers:
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Windows.Media/RenderCapability.xml
  ms.technology:
  - dotnet-wpf
  author: stevehoag
  ms.author: shoag
  manager: wpickett
- uid: System.Windows.Media.RenderCapability.TierChanged
  commentId: E:System.Windows.Media.RenderCapability.TierChanged
  id: TierChanged
  parent: System.Windows.Media.RenderCapability
  langs:
  - csharp
  name: TierChanged
  nameWithType: RenderCapability.TierChanged
  fullName: RenderCapability.TierChanged
  type: Event
  assemblies:
  - PresentationCore
  namespace: System.Windows.Media
  summary: Occurs when the rendering tier has changed for the <xref href="System.Windows.Threading.Dispatcher"></xref> object of the current thread.
  remarks: If the current thread does not have an associated <xref:System.Windows.Threading.Dispatcher> object, one is automatically created.
  syntax:
    content: public static event EventHandler TierChanged;
    return:
      type: System.EventHandler
      description: ''
  exceptions: []
  version:
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  monikers:
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Windows.Media/RenderCapability.xml
  ms.technology:
  - dotnet-wpf
  author: stevehoag
  ms.author: shoag
  manager: wpickett
references:
- uid: System.Object
  parent: System
  isExternal: false
  name: Object
  nameWithType: Object
  fullName: System.Object
- uid: System.Windows.Media.RenderCapability.IsPixelShaderVersionSupported(System.Int16,System.Int16)
  parent: System.Windows.Media.RenderCapability
  isExternal: false
  name: IsPixelShaderVersionSupported(Int16, Int16)
  nameWithType: RenderCapability.IsPixelShaderVersionSupported(Int16, Int16)
  fullName: RenderCapability.IsPixelShaderVersionSupported(Int16, Int16)
- uid: System.Boolean
  parent: System
  isExternal: false
  name: Boolean
  nameWithType: Boolean
  fullName: System.Boolean
- uid: System.Int16
  parent: System
  isExternal: false
  name: Int16
  nameWithType: Int16
  fullName: System.Int16
- uid: System.Windows.Media.RenderCapability.IsPixelShaderVersionSupportedInSoftware(System.Int16,System.Int16)
  parent: System.Windows.Media.RenderCapability
  isExternal: false
  name: IsPixelShaderVersionSupportedInSoftware(Int16, Int16)
  nameWithType: RenderCapability.IsPixelShaderVersionSupportedInSoftware(Int16, Int16)
  fullName: RenderCapability.IsPixelShaderVersionSupportedInSoftware(Int16, Int16)
- uid: System.Windows.Media.RenderCapability.IsShaderEffectSoftwareRenderingSupported
  parent: System.Windows.Media.RenderCapability
  isExternal: false
  name: IsShaderEffectSoftwareRenderingSupported
  nameWithType: RenderCapability.IsShaderEffectSoftwareRenderingSupported
  fullName: RenderCapability.IsShaderEffectSoftwareRenderingSupported
- uid: System.Windows.Media.RenderCapability.MaxHardwareTextureSize
  parent: System.Windows.Media.RenderCapability
  isExternal: false
  name: MaxHardwareTextureSize
  nameWithType: RenderCapability.MaxHardwareTextureSize
  fullName: RenderCapability.MaxHardwareTextureSize
- uid: System.Windows.Size
  parent: System.Windows
  isExternal: false
  name: Size
  nameWithType: Size
  fullName: System.Windows.Size
- uid: System.Windows.Media.RenderCapability.MaxPixelShaderInstructionSlots(System.Int16,System.Int16)
  parent: System.Windows.Media.RenderCapability
  isExternal: false
  name: MaxPixelShaderInstructionSlots(Int16, Int16)
  nameWithType: RenderCapability.MaxPixelShaderInstructionSlots(Int16, Int16)
  fullName: RenderCapability.MaxPixelShaderInstructionSlots(Int16, Int16)
- uid: System.Int32
  parent: System
  isExternal: false
  name: Int32
  nameWithType: Int32
  fullName: System.Int32
- uid: System.Windows.Media.RenderCapability.Tier
  parent: System.Windows.Media.RenderCapability
  isExternal: false
  name: Tier
  nameWithType: RenderCapability.Tier
  fullName: RenderCapability.Tier
- uid: System.Windows.Media.RenderCapability.TierChanged
  parent: System.Windows.Media.RenderCapability
  isExternal: false
  name: TierChanged
  nameWithType: RenderCapability.TierChanged
  fullName: RenderCapability.TierChanged
- uid: System.EventHandler
  parent: System
  isExternal: false
  name: EventHandler
  nameWithType: EventHandler
  fullName: System.EventHandler
- uid: System.Windows.Media.RenderCapability.IsPixelShaderVersionSupported*
  parent: System.Windows.Media.RenderCapability
  isExternal: false
  name: IsPixelShaderVersionSupported
  nameWithType: RenderCapability.IsPixelShaderVersionSupported
  fullName: RenderCapability.IsPixelShaderVersionSupported
  monikers:
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Windows.Media/RenderCapability.xml
- uid: System.Windows.Media.RenderCapability.IsPixelShaderVersionSupportedInSoftware*
  parent: System.Windows.Media.RenderCapability
  isExternal: false
  name: IsPixelShaderVersionSupportedInSoftware
  nameWithType: RenderCapability.IsPixelShaderVersionSupportedInSoftware
  fullName: RenderCapability.IsPixelShaderVersionSupportedInSoftware
  monikers:
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Windows.Media/RenderCapability.xml
- uid: System.Windows.Media.RenderCapability.IsShaderEffectSoftwareRenderingSupported*
  parent: System.Windows.Media.RenderCapability
  isExternal: false
  name: IsShaderEffectSoftwareRenderingSupported
  nameWithType: RenderCapability.IsShaderEffectSoftwareRenderingSupported
  fullName: RenderCapability.IsShaderEffectSoftwareRenderingSupported
  monikers:
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Windows.Media/RenderCapability.xml
- uid: System.Windows.Media.RenderCapability.MaxHardwareTextureSize*
  parent: System.Windows.Media.RenderCapability
  isExternal: false
  name: MaxHardwareTextureSize
  nameWithType: RenderCapability.MaxHardwareTextureSize
  fullName: RenderCapability.MaxHardwareTextureSize
  monikers:
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Windows.Media/RenderCapability.xml
- uid: System.Windows.Media.RenderCapability.MaxPixelShaderInstructionSlots*
  parent: System.Windows.Media.RenderCapability
  isExternal: false
  name: MaxPixelShaderInstructionSlots
  nameWithType: RenderCapability.MaxPixelShaderInstructionSlots
  fullName: RenderCapability.MaxPixelShaderInstructionSlots
  monikers:
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Windows.Media/RenderCapability.xml
- uid: System.Windows.Media.RenderCapability.Tier*
  parent: System.Windows.Media.RenderCapability
  isExternal: false
  name: Tier
  nameWithType: RenderCapability.Tier
  fullName: RenderCapability.Tier
  monikers:
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Windows.Media/RenderCapability.xml
- uid: System.Object.Equals(System.Object)
  parent: System.Object
  isExternal: false
  name: Equals(Object)
  nameWithType: Object.Equals(Object)
  fullName: Object.Equals(Object)
- uid: System.Object.Equals(System.Object,System.Object)
  parent: System.Object
  isExternal: false
  name: Equals(Object, Object)
  nameWithType: Object.Equals(Object, Object)
  fullName: Object.Equals(Object, Object)
- uid: System.Object.GetHashCode
  parent: System.Object
  isExternal: false
  name: GetHashCode()
  nameWithType: Object.GetHashCode()
  fullName: Object.GetHashCode()
- uid: System.Object.GetType
  parent: System.Object
  isExternal: false
  name: GetType()
  nameWithType: Object.GetType()
  fullName: Object.GetType()
- uid: System.Object.MemberwiseClone
  parent: System.Object
  isExternal: false
  name: MemberwiseClone()
  nameWithType: Object.MemberwiseClone()
  fullName: Object.MemberwiseClone()
- uid: System.Object.ReferenceEquals(System.Object,System.Object)
  parent: System.Object
  isExternal: false
  name: ReferenceEquals(Object, Object)
  nameWithType: Object.ReferenceEquals(Object, Object)
  fullName: Object.ReferenceEquals(Object, Object)
- uid: System.Object.ToString
  parent: System.Object
  isExternal: false
  name: ToString()
  nameWithType: Object.ToString()
  fullName: Object.ToString()
