{"nodes":[{"content":"Models workflows using the familiar state machine paradigm.","nodes":[{"pos":[0,59],"content":"Models workflows using the familiar state machine paradigm.","nodes":[{"content":"Models workflows using the familiar state machine paradigm.","pos":[0,59]}]}],"pos":[980,1040],"yaml":true},{"content":"Initializes a new instance of the <xref href=\"System.Activities.Statements.StateMachine\"></xref> class.","nodes":[{"pos":[0,103],"content":"Initializes a new instance of the <ph id=\"ph1\">&lt;xref href=\"System.Activities.Statements.StateMachine\"&gt;&lt;/xref&gt;</ph> class.","source":"Initializes a new instance of the <xref href=\"System.Activities.Statements.StateMachine\"></xref> class."}],"pos":[3543,3647],"yaml":true},{"content":"Gets or sets the start state of the <xref href=\"System.Activities.Statements.StateMachine\"></xref>.","nodes":[{"pos":[0,99],"content":"Gets or sets the start state of the <ph id=\"ph1\">&lt;xref href=\"System.Activities.Statements.StateMachine\"&gt;&lt;/xref&gt;</ph>.","source":"Gets or sets the start state of the <xref href=\"System.Activities.Statements.StateMachine\"></xref>."}],"pos":[7452,7552],"yaml":true},{"content":"There must only be one <xref:System.Activities.Statements.StateMachine.InitialState%2A>.","nodes":[{"pos":[0,88],"content":"There must only be one <xref:System.Activities.Statements.StateMachine.InitialState%2A>.","nodes":[{"content":"There must only be one <ph id=\"ph1\">&lt;xref:System.Activities.Statements.StateMachine.InitialState%2A&gt;</ph>.","pos":[0,88],"source":"There must only be one <xref:System.Activities.Statements.StateMachine.InitialState%2A>."}]}],"pos":[7563,7652],"yaml":true,"extradata":"MT"},{"content":"Returns <xref href=\"System.Activities.Statements.State\"></xref>.","nodes":[{"pos":[0,64],"content":"Returns <ph id=\"ph1\">&lt;xref href=\"System.Activities.Statements.State\"&gt;&lt;/xref&gt;</ph>.","source":"Returns <xref href=\"System.Activities.Statements.State\"></xref>."}],"pos":[7822,7887],"yaml":true},{"content":"Gets the collection of all root level states in the <xref href=\"System.Activities.Statements.StateMachine\"></xref>.","nodes":[{"pos":[0,115],"content":"Gets the collection of all root level states in the <ph id=\"ph1\">&lt;xref href=\"System.Activities.Statements.StateMachine\"&gt;&lt;/xref&gt;</ph>.","source":"Gets the collection of all root level states in the <xref href=\"System.Activities.Statements.StateMachine\"></xref>."}],"pos":[10770,10886],"yaml":true},{"content":"Returns <xref href=\"System.Collections.ObjectModel.Collection`1\"></xref>.","nodes":[{"pos":[0,73],"content":"Returns <ph id=\"ph1\">&lt;xref href=\"System.Collections.ObjectModel.Collection`1\"&gt;&lt;/xref&gt;</ph>.","source":"Returns <xref href=\"System.Collections.ObjectModel.Collection`1\"></xref>."}],"pos":[11197,11271],"yaml":true},{"content":"Gets the collection of variables which can be used within the <xref href=\"System.Activities.Statements.StateMachine\"></xref> scope.","nodes":[{"pos":[0,131],"content":"Gets the collection of variables which can be used within the <ph id=\"ph1\">&lt;xref href=\"System.Activities.Statements.StateMachine\"&gt;&lt;/xref&gt;</ph> scope.","source":"Gets the collection of variables which can be used within the <xref href=\"System.Activities.Statements.StateMachine\"></xref> scope."}],"pos":[12364,12496],"yaml":true},{"content":"Returns <xref href=\"System.Collections.ObjectModel.Collection`1\"></xref>.","nodes":[{"pos":[0,73],"content":"Returns <ph id=\"ph1\">&lt;xref href=\"System.Collections.ObjectModel.Collection`1\"&gt;&lt;/xref&gt;</ph>.","source":"Returns <xref href=\"System.Collections.ObjectModel.Collection`1\"></xref>."}],"pos":[12788,12862],"yaml":true}],"content":"### YamlMime:ManagedReference\nitems:\n- uid: System.Activities.Statements.StateMachine\n  commentId: T:System.Activities.Statements.StateMachine\n  id: StateMachine\n  children:\n  - System.Activities.Statements.StateMachine.#ctor\n  - System.Activities.Statements.StateMachine.CacheMetadata(System.Activities.NativeActivityMetadata)\n  - System.Activities.Statements.StateMachine.Execute(System.Activities.NativeActivityContext)\n  - System.Activities.Statements.StateMachine.InitialState\n  - System.Activities.Statements.StateMachine.OnCreateDynamicUpdateMap(System.Activities.DynamicUpdate.NativeActivityUpdateMapMetadata,System.Activities.Activity)\n  - System.Activities.Statements.StateMachine.States\n  - System.Activities.Statements.StateMachine.Variables\n  langs:\n  - csharp\n  name: StateMachine\n  nameWithType: StateMachine\n  fullName: System.Activities.Statements.StateMachine\n  type: Class\n  assemblies:\n  - System.Activities\n  namespace: System.Activities.Statements\n  summary: Models workflows using the familiar state machine paradigm.\n  syntax:\n    content: >-\n      [System.Windows.Markup.ContentProperty(\"States\")]\n\n      public sealed class StateMachine : System.Activities.NativeActivity\n  inheritance:\n  - System.Object\n  - System.Activities.Activity\n  - System.Activities.NativeActivity\n  implements: []\n  inheritedMembers:\n  - System.Activities.Activity.CacheId\n  - System.Activities.Activity.Constraints\n  - System.Activities.Activity.DisplayName\n  - System.Activities.Activity.Id\n  - System.Activities.Activity.ShouldSerializeDisplayName\n  - System.Activities.Activity.ToString\n  - System.Activities.NativeActivity.Abort(System.Activities.NativeActivityAbortContext)\n  - System.Activities.NativeActivity.CacheMetadata(System.Activities.ActivityMetadata)\n  - System.Activities.NativeActivity.Cancel(System.Activities.NativeActivityContext)\n  - System.Activities.NativeActivity.CanInduceIdle\n  - System.Activities.NativeActivity.Implementation\n  - System.Activities.NativeActivity.ImplementationVersion\n  - System.Activities.NativeActivity.OnCreateDynamicUpdateMap(System.Activities.DynamicUpdate.UpdateMapMetadata,System.Activities.Activity)\n  - System.Activities.NativeActivity.UpdateInstance(System.Activities.DynamicUpdate.NativeActivityUpdateContext)\n  - System.Object.Equals(System.Object)\n  - System.Object.Equals(System.Object,System.Object)\n  - System.Object.GetHashCode\n  - System.Object.GetType\n  - System.Object.MemberwiseClone\n  - System.Object.ReferenceEquals(System.Object,System.Object)\n  attributes:\n  - type: System.Windows.Markup.ContentPropertyAttribute\n  version:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Activities.Statements/StateMachine.xml\n  ms.technology:\n  - dotnet-standard\n  author: Erikre\n  ms.author: erikre\n  manager: erikre\n- uid: System.Activities.Statements.StateMachine.#ctor\n  commentId: M:System.Activities.Statements.StateMachine.#ctor\n  id: '#ctor'\n  parent: System.Activities.Statements.StateMachine\n  langs:\n  - csharp\n  name: StateMachine()\n  nameWithType: StateMachine.StateMachine()\n  fullName: StateMachine.StateMachine()\n  type: Constructor\n  assemblies:\n  - System.Activities\n  namespace: System.Activities.Statements\n  summary: Initializes a new instance of the <xref href=\"System.Activities.Statements.StateMachine\"></xref> class.\n  syntax:\n    content: public StateMachine ();\n    parameters: []\n  overload: System.Activities.Statements.StateMachine.#ctor*\n  exceptions: []\n  version:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Activities.Statements/StateMachine.xml\n  ms.technology:\n  - dotnet-standard\n  author: Erikre\n  ms.author: erikre\n  manager: erikre\n- uid: System.Activities.Statements.StateMachine.CacheMetadata(System.Activities.NativeActivityMetadata)\n  commentId: M:System.Activities.Statements.StateMachine.CacheMetadata(System.Activities.NativeActivityMetadata)\n  id: CacheMetadata(System.Activities.NativeActivityMetadata)\n  parent: System.Activities.Statements.StateMachine\n  langs:\n  - csharp\n  name: CacheMetadata(NativeActivityMetadata)\n  nameWithType: StateMachine.CacheMetadata(NativeActivityMetadata)\n  fullName: StateMachine.CacheMetadata(NativeActivityMetadata)\n  type: Method\n  assemblies:\n  - System.Activities\n  namespace: System.Activities.Statements\n  syntax:\n    content: protected override void CacheMetadata (System.Activities.NativeActivityMetadata metadata);\n    parameters:\n    - id: metadata\n      type: System.Activities.NativeActivityMetadata\n      description: ''\n  overload: System.Activities.Statements.StateMachine.CacheMetadata*\n  exceptions: []\n  version:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Activities.Statements/StateMachine.xml\n- uid: System.Activities.Statements.StateMachine.Execute(System.Activities.NativeActivityContext)\n  commentId: M:System.Activities.Statements.StateMachine.Execute(System.Activities.NativeActivityContext)\n  id: Execute(System.Activities.NativeActivityContext)\n  parent: System.Activities.Statements.StateMachine\n  langs:\n  - csharp\n  name: Execute(NativeActivityContext)\n  nameWithType: StateMachine.Execute(NativeActivityContext)\n  fullName: StateMachine.Execute(NativeActivityContext)\n  type: Method\n  assemblies:\n  - System.Activities\n  namespace: System.Activities.Statements\n  syntax:\n    content: protected override void Execute (System.Activities.NativeActivityContext context);\n    parameters:\n    - id: context\n      type: System.Activities.NativeActivityContext\n      description: ''\n  overload: System.Activities.Statements.StateMachine.Execute*\n  exceptions: []\n  version:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Activities.Statements/StateMachine.xml\n- uid: System.Activities.Statements.StateMachine.InitialState\n  commentId: P:System.Activities.Statements.StateMachine.InitialState\n  id: InitialState\n  parent: System.Activities.Statements.StateMachine\n  langs:\n  - csharp\n  name: InitialState\n  nameWithType: StateMachine.InitialState\n  fullName: StateMachine.InitialState\n  type: Property\n  assemblies:\n  - System.Activities\n  namespace: System.Activities.Statements\n  summary: Gets or sets the start state of the <xref href=\"System.Activities.Statements.StateMachine\"></xref>.\n  remarks: There must only be one <xref:System.Activities.Statements.StateMachine.InitialState%2A>.\n  syntax:\n    content: public System.Activities.Statements.State InitialState { get; set; }\n    return:\n      type: System.Activities.Statements.State\n      description: Returns <xref href=\"System.Activities.Statements.State\"></xref>.\n  overload: System.Activities.Statements.StateMachine.InitialState*\n  exceptions: []\n  attributes: []\n  version:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Activities.Statements/StateMachine.xml\n  ms.technology:\n  - dotnet-standard\n  author: Erikre\n  ms.author: erikre\n  manager: erikre\n- uid: System.Activities.Statements.StateMachine.OnCreateDynamicUpdateMap(System.Activities.DynamicUpdate.NativeActivityUpdateMapMetadata,System.Activities.Activity)\n  commentId: M:System.Activities.Statements.StateMachine.OnCreateDynamicUpdateMap(System.Activities.DynamicUpdate.NativeActivityUpdateMapMetadata,System.Activities.Activity)\n  id: OnCreateDynamicUpdateMap(System.Activities.DynamicUpdate.NativeActivityUpdateMapMetadata,System.Activities.Activity)\n  parent: System.Activities.Statements.StateMachine\n  langs:\n  - csharp\n  name: OnCreateDynamicUpdateMap(NativeActivityUpdateMapMetadata, Activity)\n  nameWithType: StateMachine.OnCreateDynamicUpdateMap(NativeActivityUpdateMapMetadata, Activity)\n  fullName: StateMachine.OnCreateDynamicUpdateMap(NativeActivityUpdateMapMetadata, Activity)\n  type: Method\n  assemblies:\n  - System.Activities\n  namespace: System.Activities.Statements\n  syntax:\n    content: protected override void OnCreateDynamicUpdateMap (System.Activities.DynamicUpdate.NativeActivityUpdateMapMetadata metadata, System.Activities.Activity originalActivity);\n    parameters:\n    - id: metadata\n      type: System.Activities.DynamicUpdate.NativeActivityUpdateMapMetadata\n      description: ''\n    - id: originalActivity\n      type: System.Activities.Activity\n      description: ''\n  overload: System.Activities.Statements.StateMachine.OnCreateDynamicUpdateMap*\n  exceptions: []\n  version:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Activities.Statements/StateMachine.xml\n- uid: System.Activities.Statements.StateMachine.States\n  commentId: P:System.Activities.Statements.StateMachine.States\n  id: States\n  parent: System.Activities.Statements.StateMachine\n  langs:\n  - csharp\n  name: States\n  nameWithType: StateMachine.States\n  fullName: StateMachine.States\n  type: Property\n  assemblies:\n  - System.Activities\n  namespace: System.Activities.Statements\n  summary: Gets the collection of all root level states in the <xref href=\"System.Activities.Statements.StateMachine\"></xref>.\n  syntax:\n    content: >-\n      [System.Windows.Markup.DependsOn(\"InitialState\")]\n\n      public System.Collections.ObjectModel.Collection<System.Activities.Statements.State> States { get; }\n    return:\n      type: System.Collections.ObjectModel.Collection{System.Activities.Statements.State}\n      description: Returns <xref href=\"System.Collections.ObjectModel.Collection`1\"></xref>.\n  overload: System.Activities.Statements.StateMachine.States*\n  exceptions: []\n  attributes:\n  - type: System.Windows.Markup.DependsOnAttribute\n  version:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Activities.Statements/StateMachine.xml\n  ms.technology:\n  - dotnet-standard\n  author: Erikre\n  ms.author: erikre\n  manager: erikre\n- uid: System.Activities.Statements.StateMachine.Variables\n  commentId: P:System.Activities.Statements.StateMachine.Variables\n  id: Variables\n  parent: System.Activities.Statements.StateMachine\n  langs:\n  - csharp\n  name: Variables\n  nameWithType: StateMachine.Variables\n  fullName: StateMachine.Variables\n  type: Property\n  assemblies:\n  - System.Activities\n  namespace: System.Activities.Statements\n  summary: Gets the collection of variables which can be used within the <xref href=\"System.Activities.Statements.StateMachine\"></xref> scope.\n  syntax:\n    content: >-\n      [System.Windows.Markup.DependsOn(\"States\")]\n\n      public System.Collections.ObjectModel.Collection<System.Activities.Variable> Variables { get; }\n    return:\n      type: System.Collections.ObjectModel.Collection{System.Activities.Variable}\n      description: Returns <xref href=\"System.Collections.ObjectModel.Collection`1\"></xref>.\n  overload: System.Activities.Statements.StateMachine.Variables*\n  exceptions: []\n  attributes:\n  - type: System.Windows.Markup.DependsOnAttribute\n  version:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Activities.Statements/StateMachine.xml\n  ms.technology:\n  - dotnet-standard\n  author: Erikre\n  ms.author: erikre\n  manager: erikre\nreferences:\n- uid: System.Activities.NativeActivity\n  parent: System.Activities\n  isExternal: false\n  name: NativeActivity\n  nameWithType: NativeActivity\n  fullName: System.Activities.NativeActivity\n- uid: System.Activities.Statements.StateMachine.#ctor\n  parent: System.Activities.Statements.StateMachine\n  isExternal: false\n  name: StateMachine()\n  nameWithType: StateMachine.StateMachine()\n  fullName: StateMachine.StateMachine()\n- uid: System.Activities.Statements.StateMachine.CacheMetadata(System.Activities.NativeActivityMetadata)\n  parent: System.Activities.Statements.StateMachine\n  isExternal: false\n  name: CacheMetadata(NativeActivityMetadata)\n  nameWithType: StateMachine.CacheMetadata(NativeActivityMetadata)\n  fullName: StateMachine.CacheMetadata(NativeActivityMetadata)\n- uid: System.Activities.NativeActivityMetadata\n  parent: System.Activities\n  isExternal: false\n  name: NativeActivityMetadata\n  nameWithType: NativeActivityMetadata\n  fullName: System.Activities.NativeActivityMetadata\n- uid: System.Activities.Statements.StateMachine.Execute(System.Activities.NativeActivityContext)\n  parent: System.Activities.Statements.StateMachine\n  isExternal: false\n  name: Execute(NativeActivityContext)\n  nameWithType: StateMachine.Execute(NativeActivityContext)\n  fullName: StateMachine.Execute(NativeActivityContext)\n- uid: System.Activities.NativeActivityContext\n  parent: System.Activities\n  isExternal: false\n  name: NativeActivityContext\n  nameWithType: NativeActivityContext\n  fullName: System.Activities.NativeActivityContext\n- uid: System.Activities.Statements.StateMachine.InitialState\n  parent: System.Activities.Statements.StateMachine\n  isExternal: false\n  name: InitialState\n  nameWithType: StateMachine.InitialState\n  fullName: StateMachine.InitialState\n- uid: System.Activities.Statements.State\n  parent: System.Activities.Statements\n  isExternal: false\n  name: State\n  nameWithType: State\n  fullName: System.Activities.Statements.State\n- uid: System.Activities.Statements.StateMachine.OnCreateDynamicUpdateMap(System.Activities.DynamicUpdate.NativeActivityUpdateMapMetadata,System.Activities.Activity)\n  parent: System.Activities.Statements.StateMachine\n  isExternal: false\n  name: OnCreateDynamicUpdateMap(NativeActivityUpdateMapMetadata, Activity)\n  nameWithType: StateMachine.OnCreateDynamicUpdateMap(NativeActivityUpdateMapMetadata, Activity)\n  fullName: StateMachine.OnCreateDynamicUpdateMap(NativeActivityUpdateMapMetadata, Activity)\n- uid: System.Activities.DynamicUpdate.NativeActivityUpdateMapMetadata\n  parent: System.Activities.DynamicUpdate\n  isExternal: false\n  name: NativeActivityUpdateMapMetadata\n  nameWithType: NativeActivityUpdateMapMetadata\n  fullName: System.Activities.DynamicUpdate.NativeActivityUpdateMapMetadata\n- uid: System.Activities.Activity\n  parent: System.Activities\n  isExternal: false\n  name: Activity\n  nameWithType: Activity\n  fullName: System.Activities.Activity\n- uid: System.Activities.Statements.StateMachine.States\n  parent: System.Activities.Statements.StateMachine\n  isExternal: false\n  name: States\n  nameWithType: StateMachine.States\n  fullName: StateMachine.States\n- uid: System.Collections.ObjectModel.Collection`1\n  name: Collection<T>\n  nameWithType: Collection<T>\n  fullName: System.Collections.ObjectModel.Collection<T>\n- uid: System.Collections.ObjectModel.Collection{System.Activities.Statements.State}\n  parent: System.Collections.ObjectModel\n  isExternal: false\n  name: Collection<State>\n  nameWithType: Collection<State>\n  fullName: System.Collections.ObjectModel.Collection<System.Activities.Statements.State>\n  spec.csharp:\n  - uid: System.Collections.ObjectModel.Collection`1\n    name: Collection\n    nameWithType: Collection\n    fullName: System.Collections.ObjectModel.Collection\n  - name: <\n    nameWithType: <\n    fullName: <\n  - uid: System.Activities.Statements.State\n    name: State\n    nameWithType: State\n    fullName: System.Activities.Statements.State\n  - name: '>'\n    nameWithType: '>'\n    fullName: '>'\n- uid: System.Activities.Statements.StateMachine.Variables\n  parent: System.Activities.Statements.StateMachine\n  isExternal: false\n  name: Variables\n  nameWithType: StateMachine.Variables\n  fullName: StateMachine.Variables\n- uid: System.Activities.Variable\n  name: Variable\n  nameWithType: Variable\n  fullName: System.Activities.Variable\n- uid: System.Collections.ObjectModel.Collection{System.Activities.Variable}\n  parent: System.Collections.ObjectModel\n  isExternal: false\n  name: Collection<Variable>\n  nameWithType: Collection<Variable>\n  fullName: System.Collections.ObjectModel.Collection<System.Activities.Variable>\n  spec.csharp:\n  - uid: System.Collections.ObjectModel.Collection`1\n    name: Collection\n    nameWithType: Collection\n    fullName: System.Collections.ObjectModel.Collection\n  - name: <\n    nameWithType: <\n    fullName: <\n  - uid: System.Activities.Variable\n    name: Variable\n    nameWithType: Variable\n    fullName: System.Activities.Variable\n  - name: '>'\n    nameWithType: '>'\n    fullName: '>'\n- uid: System.Activities.Statements.StateMachine.#ctor*\n  parent: System.Activities.Statements.StateMachine\n  isExternal: false\n  name: StateMachine\n  nameWithType: StateMachine.StateMachine\n  fullName: StateMachine.StateMachine\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Activities.Statements/StateMachine.xml\n- uid: System.Activities.Statements.StateMachine.CacheMetadata*\n  parent: System.Activities.Statements.StateMachine\n  isExternal: false\n  name: CacheMetadata\n  nameWithType: StateMachine.CacheMetadata\n  fullName: StateMachine.CacheMetadata\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Activities.Statements/StateMachine.xml\n- uid: System.Activities.Statements.StateMachine.Execute*\n  parent: System.Activities.Statements.StateMachine\n  isExternal: false\n  name: Execute\n  nameWithType: StateMachine.Execute\n  fullName: StateMachine.Execute\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Activities.Statements/StateMachine.xml\n- uid: System.Activities.Statements.StateMachine.InitialState*\n  parent: System.Activities.Statements.StateMachine\n  isExternal: false\n  name: InitialState\n  nameWithType: StateMachine.InitialState\n  fullName: StateMachine.InitialState\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Activities.Statements/StateMachine.xml\n- uid: System.Activities.Statements.StateMachine.OnCreateDynamicUpdateMap*\n  parent: System.Activities.Statements.StateMachine\n  isExternal: false\n  name: OnCreateDynamicUpdateMap\n  nameWithType: StateMachine.OnCreateDynamicUpdateMap\n  fullName: StateMachine.OnCreateDynamicUpdateMap\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Activities.Statements/StateMachine.xml\n- uid: System.Activities.Statements.StateMachine.States*\n  parent: System.Activities.Statements.StateMachine\n  isExternal: false\n  name: States\n  nameWithType: StateMachine.States\n  fullName: StateMachine.States\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Activities.Statements/StateMachine.xml\n- uid: System.Activities.Statements.StateMachine.Variables*\n  parent: System.Activities.Statements.StateMachine\n  isExternal: false\n  name: Variables\n  nameWithType: StateMachine.Variables\n  fullName: StateMachine.Variables\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Activities.Statements/StateMachine.xml\n- uid: System.Object.Equals(System.Object)\n  parent: System.Object\n  isExternal: false\n  name: Equals(Object)\n  nameWithType: Object.Equals(Object)\n  fullName: Object.Equals(Object)\n- uid: System.Object.Equals(System.Object,System.Object)\n  parent: System.Object\n  isExternal: false\n  name: Equals(Object, Object)\n  nameWithType: Object.Equals(Object, Object)\n  fullName: Object.Equals(Object, Object)\n- uid: System.Object.GetHashCode\n  parent: System.Object\n  isExternal: false\n  name: GetHashCode()\n  nameWithType: Object.GetHashCode()\n  fullName: Object.GetHashCode()\n- uid: System.Object.GetType\n  parent: System.Object\n  isExternal: false\n  name: GetType()\n  nameWithType: Object.GetType()\n  fullName: Object.GetType()\n- uid: System.Object.MemberwiseClone\n  parent: System.Object\n  isExternal: false\n  name: MemberwiseClone()\n  nameWithType: Object.MemberwiseClone()\n  fullName: Object.MemberwiseClone()\n- uid: System.Object.ReferenceEquals(System.Object,System.Object)\n  parent: System.Object\n  isExternal: false\n  name: ReferenceEquals(Object, Object)\n  nameWithType: Object.ReferenceEquals(Object, Object)\n  fullName: Object.ReferenceEquals(Object, Object)\n- uid: System.Activities.Activity.ToString\n  parent: System.Activities.Activity\n  isExternal: false\n  name: ToString()\n  nameWithType: Activity.ToString()\n  fullName: Activity.ToString()\n- uid: System.Activities.Activity.CacheId\n  parent: System.Activities.Activity\n  isExternal: false\n  name: CacheId\n  nameWithType: Activity.CacheId\n  fullName: Activity.CacheId\n- uid: System.Activities.NativeActivity.CacheMetadata(System.Activities.ActivityMetadata)\n  parent: System.Activities.NativeActivity\n  isExternal: false\n  name: CacheMetadata(ActivityMetadata)\n  nameWithType: NativeActivity.CacheMetadata(ActivityMetadata)\n  fullName: NativeActivity.CacheMetadata(ActivityMetadata)\n- uid: System.Activities.Activity.Constraints\n  parent: System.Activities.Activity\n  isExternal: false\n  name: Constraints\n  nameWithType: Activity.Constraints\n  fullName: Activity.Constraints\n- uid: System.Activities.Activity.DisplayName\n  parent: System.Activities.Activity\n  isExternal: false\n  name: DisplayName\n  nameWithType: Activity.DisplayName\n  fullName: Activity.DisplayName\n- uid: System.Activities.Activity.Id\n  parent: System.Activities.Activity\n  isExternal: false\n  name: Id\n  nameWithType: Activity.Id\n  fullName: Activity.Id\n- uid: System.Activities.NativeActivity.Implementation\n  parent: System.Activities.NativeActivity\n  isExternal: false\n  name: Implementation\n  nameWithType: NativeActivity.Implementation\n  fullName: NativeActivity.Implementation\n- uid: System.Activities.NativeActivity.ImplementationVersion\n  parent: System.Activities.NativeActivity\n  isExternal: false\n  name: ImplementationVersion\n  nameWithType: NativeActivity.ImplementationVersion\n  fullName: NativeActivity.ImplementationVersion\n- uid: System.Activities.NativeActivity.OnCreateDynamicUpdateMap(System.Activities.DynamicUpdate.UpdateMapMetadata,System.Activities.Activity)\n  parent: System.Activities.NativeActivity\n  isExternal: false\n  name: OnCreateDynamicUpdateMap(UpdateMapMetadata, Activity)\n  nameWithType: NativeActivity.OnCreateDynamicUpdateMap(UpdateMapMetadata, Activity)\n  fullName: NativeActivity.OnCreateDynamicUpdateMap(UpdateMapMetadata, Activity)\n- uid: System.Activities.Activity.ShouldSerializeDisplayName\n  parent: System.Activities.Activity\n  isExternal: false\n  name: ShouldSerializeDisplayName()\n  nameWithType: Activity.ShouldSerializeDisplayName()\n  fullName: Activity.ShouldSerializeDisplayName()\n- uid: System.Activities.NativeActivity.Abort(System.Activities.NativeActivityAbortContext)\n  parent: System.Activities.NativeActivity\n  isExternal: false\n  name: Abort(NativeActivityAbortContext)\n  nameWithType: NativeActivity.Abort(NativeActivityAbortContext)\n  fullName: NativeActivity.Abort(NativeActivityAbortContext)\n- uid: System.Activities.NativeActivity.Cancel(System.Activities.NativeActivityContext)\n  parent: System.Activities.NativeActivity\n  isExternal: false\n  name: Cancel(NativeActivityContext)\n  nameWithType: NativeActivity.Cancel(NativeActivityContext)\n  fullName: NativeActivity.Cancel(NativeActivityContext)\n- uid: System.Activities.NativeActivity.CanInduceIdle\n  parent: System.Activities.NativeActivity\n  isExternal: false\n  name: CanInduceIdle\n  nameWithType: NativeActivity.CanInduceIdle\n  fullName: NativeActivity.CanInduceIdle\n- uid: System.Activities.NativeActivity.UpdateInstance(System.Activities.DynamicUpdate.NativeActivityUpdateContext)\n  parent: System.Activities.NativeActivity\n  isExternal: false\n  name: UpdateInstance(NativeActivityUpdateContext)\n  nameWithType: NativeActivity.UpdateInstance(NativeActivityUpdateContext)\n  fullName: NativeActivity.UpdateInstance(NativeActivityUpdateContext)\n"}