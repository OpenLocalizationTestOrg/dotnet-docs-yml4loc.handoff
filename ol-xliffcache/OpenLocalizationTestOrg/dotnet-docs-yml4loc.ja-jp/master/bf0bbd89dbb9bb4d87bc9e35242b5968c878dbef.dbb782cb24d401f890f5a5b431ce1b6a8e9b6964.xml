{"nodes":[{"content":"Indicates that an interface or a class defines a service contract in a Windows Communication Foundation (WCF) application.","nodes":[{"pos":[0,122],"content":"Indicates that an interface or a class defines a service contract in a Windows Communication Foundation (WCF) application.","nodes":[{"content":"Indicates that an interface or a class defines a service contract in a Windows Communication Foundation (WCF) application.","pos":[0,122]}]}],"pos":[933,1056],"yaml":true},{"content":"Use the <xref:System.ServiceModel.ServiceContractAttribute> attribute on an interface (or class) to define a service contract. Then use the <xref:System.ServiceModel.OperationContractAttribute> attribute on one or more of the class (or interface) methods to define the contract's service operations. When the service contract is implemented and combined with a [Bindings](~/docs/framework/wcf/bindings.md) and an <xref:System.ServiceModel.EndpointAddress> object, the service contract is exposed for use by clients. For an overview of the process using simple examples, see [Getting Started Tutorial](~/docs/framework/wcf/getting-started-tutorial.md). For more information about creating service contracts, see [Designing and Implementing Services](~/docs/framework/wcf/designing-and-implementing-services.md).  \n  \n The information expressed by a <xref:System.ServiceModel.ServiceContractAttribute> and its interface is loosely related to the Web Services Description Language (WSDL) `<portType>` element. A service contract is used on the service side to specify what the serviceâ€™s endpoint exposes to callers. It is also used on the client side to specify the contract of the endpoint with which the client communicates and, in the case of duplex contracts, to specify the callback contract (using the <xref:System.ServiceModel.ServiceContractAttribute.CallbackContract%2A> property) that the client must implement in order to participate in a duplex conversation.  \n  \n> [!NOTE]\n>  An interface or class that is decorated with <xref:System.ServiceModel.ServiceContractAttribute> must also have at least one method marked with the <xref:System.ServiceModel.OperationContractAttribute> attribute to expose any functionality. See the Examples section for a code example of the simplest use of the two attributes to define and implement a service.  \n  \n Use the <xref:System.ServiceModel.ServiceContractAttribute> properties to modify the service contract.  \n  \n-   The <xref:System.ServiceModel.ServiceContractAttribute.ConfigurationName%2A> property specifies the name of the service element in the configuration file to use.  \n  \n-   The <xref:System.ServiceModel.ServiceContractAttribute.Name%2A> and <xref:System.ServiceModel.ServiceContractAttribute.Namespace%2A> properties control the name and namespace of the contract in the WSDL `<portType>` element.  \n  \n-   The <xref:System.ServiceModel.ServiceContractAttribute.SessionMode%2A> property specifies whether the contract requires a binding that supports sessions.  \n  \n-   The <xref:System.ServiceModel.ServiceContractAttribute.CallbackContract%2A> property specifies the return contract in a two-way (duplex) conversation.  \n  \n-   The <xref:System.ServiceModel.ServiceContractAttribute.HasProtectionLevel%2A> and <xref:System.ServiceModel.ServiceContractAttribute.ProtectionLevel%2A> properties indicate whether all messages supporting the contract have a explicit <xref:System.ServiceModel.ServiceContractAttribute.ProtectionLevel%2A> value, and if so, what that level is.  \n  \n Services implement service contracts, which represent the data exchange that a service type supports. A service class can implement a service contract (by implementing an interface marked with <xref:System.ServiceModel.ServiceContractAttribute> that has methods marked with <xref:System.ServiceModel.OperationContractAttribute>) or it can be marked with the <xref:System.ServiceModel.ServiceContractAttribute> and apply the <xref:System.ServiceModel.OperationContractAttribute> attribute to its own methods. (If a class implements an interface marked with <xref:System.ServiceModel.ServiceContractAttribute>, it cannot be itself marked with <xref:System.ServiceModel.ServiceContractAttribute>.) Methods on service types that are marked with the <xref:System.ServiceModel.OperationContractAttribute> are treated as part of a default service contract specified by the service type itself. For details about service operations, see <xref:System.ServiceModel.OperationContractAttribute>.  \n  \n By default, the <xref:System.ServiceModel.ServiceContractAttribute.Name%2A> and <xref:System.ServiceModel.ServiceContractAttribute.Namespace%2A> properties are the name of the contract type and `http://tempuri.org`, respectively, and <xref:System.ServiceModel.ServiceContractAttribute.ProtectionLevel%2A> is <xref:System.Net.Security.ProtectionLevel?displayProperty=fullName>. It is recommended that service contracts explicitly set their names, namespaces, and protection levels using these properties. Doing so accomplishes two goals. First, it builds a contract that is not directly connected to the managed type information, enabling you to refactor your managed code and namespaces without breaking the contract as it is expressed in WSDL. Second, explicitly requiring a certain level of protection on the contract itself enables the runtime to validate whether the binding configuration supports that level of security, preventing poor configuration from exposing sensitive information. For more information about protection levels, see [Understanding Protection Level](~/docs/framework/wcf/understanding-protection-level.md).  \n  \n To expose a service for use by client applications, create a host application to register your service endpoint with [!INCLUDE[indigo1](~/includes/indigo1-md.md)]. You can host [!INCLUDE[indigo2](~/includes/indigo2-md.md)] services using Windows Activation Services (WAS), in console applications, Windows Service applications, ASP.NET applications, Windows Forms applications, or any other kind of application domain.  \n  \n Hosting in the WAS is very similar to creating an ASP.NET application. For details, see [How to: Host a WCF Service in IIS](~/docs/framework/wcf/feature-details/how-to-host-a-wcf-service-in-iis.md).  \n  \n Clients either use the service contract interface (the interface marked with <xref:System.ServiceModel.ServiceContractAttribute>) to create a channel to the service or they use the client objects (which combine the type information of the service contract interface with the <xref:System.ServiceModel.ClientBase%601> class) to communicate with your service. For details on client channels to services, see the <xref:System.ServiceModel.ChannelFactory%601> class and [WCF Client Overview](~/docs/framework/wcf/wcf-client-overview.md).  \n  \n Using a <xref:System.ServiceModel.ServiceContractAttribute> class or interface to inherit from another <xref:System.ServiceModel.ServiceContractAttribute> class or interface extends the parent contract. For example, if an `IChildContract` interface is marked with <xref:System.ServiceModel.ServiceContractAttribute> and inherited from another service contract interface, `IParentContract`, the `IChildContract` service contract contains the methods of both `IParentContract` and `IChildContract`. Extending contracts (whether on classes or interfaces) is very similar to extending managed classes and interfaces.  \n  \n The most flexible approach to creating services is to define service contract interfaces first and then have your service class implement that interface. (This is also the simplest way to build your services if you must implement service contracts that have been defined by others.) Building services directly by marking a class with <xref:System.ServiceModel.ServiceContractAttribute> and its methods with <xref:System.ServiceModel.OperationContractAttribute> works when the service exposes only one contract (but that contract can be exposed by more than one endpoint).  \n  \n Use the <xref:System.ServiceModel.ServiceContractAttribute.CallbackContract%2A>property to indicate another service contract that, when bound together with the original service contract, define a message exchange that can flow in two ways independently. For details, see <xref:System.ServiceModel.ServiceContractAttribute.CallbackContract%2A>.","nodes":[{"pos":[0,810],"content":"Use the <xref:System.ServiceModel.ServiceContractAttribute> attribute on an interface (or class) to define a service contract. Then use the <xref:System.ServiceModel.OperationContractAttribute> attribute on one or more of the class (or interface) methods to define the contract's service operations. When the service contract is implemented and combined with a [Bindings](~/docs/framework/wcf/bindings.md) and an <xref:System.ServiceModel.EndpointAddress> object, the service contract is exposed for use by clients. For an overview of the process using simple examples, see [Getting Started Tutorial](~/docs/framework/wcf/getting-started-tutorial.md). For more information about creating service contracts, see [Designing and Implementing Services](~/docs/framework/wcf/designing-and-implementing-services.md).","nodes":[{"content":"Use the <ph id=\"ph1\">&lt;xref:System.ServiceModel.ServiceContractAttribute&gt;</ph> attribute on an interface (or class) to define a service contract.","pos":[0,126],"source":"Use the <xref:System.ServiceModel.ServiceContractAttribute> attribute on an interface (or class) to define a service contract."},{"content":"Then use the <ph id=\"ph1\">&lt;xref:System.ServiceModel.OperationContractAttribute&gt;</ph> attribute on one or more of the class (or interface) methods to define the contract's service operations.","pos":[127,299],"source":" Then use the <xref:System.ServiceModel.OperationContractAttribute> attribute on one or more of the class (or interface) methods to define the contract's service operations."},{"content":"When the service contract is implemented and combined with a <bpt id=\"p1\">[</bpt>Bindings<ept id=\"p1\">](~/docs/framework/wcf/bindings.md)</ept> and an <ph id=\"ph1\">&lt;xref:System.ServiceModel.EndpointAddress&gt;</ph> object, the service contract is exposed for use by clients.","pos":[300,515],"source":" When the service contract is implemented and combined with a [Bindings](~/docs/framework/wcf/bindings.md) and an <xref:System.ServiceModel.EndpointAddress> object, the service contract is exposed for use by clients."},{"content":"For an overview of the process using simple examples, see <bpt id=\"p1\">[</bpt>Getting Started Tutorial<ept id=\"p1\">](~/docs/framework/wcf/getting-started-tutorial.md)</ept>.","pos":[516,651],"source":" For an overview of the process using simple examples, see [Getting Started Tutorial](~/docs/framework/wcf/getting-started-tutorial.md)."},{"content":"For more information about creating service contracts, see <bpt id=\"p1\">[</bpt>Designing and Implementing Services<ept id=\"p1\">](~/docs/framework/wcf/designing-and-implementing-services.md)</ept>.","pos":[652,810],"source":" For more information about creating service contracts, see [Designing and Implementing Services](~/docs/framework/wcf/designing-and-implementing-services.md)."}]},{"pos":[817,1467],"content":"The information expressed by a <xref:System.ServiceModel.ServiceContractAttribute> and its interface is loosely related to the Web Services Description Language (WSDL) `<portType>` element. A service contract is used on the service side to specify what the serviceâ€™s endpoint exposes to callers. It is also used on the client side to specify the contract of the endpoint with which the client communicates and, in the case of duplex contracts, to specify the callback contract (using the <xref:System.ServiceModel.ServiceContractAttribute.CallbackContract%2A> property) that the client must implement in order to participate in a duplex conversation.","nodes":[{"content":"The information expressed by a <ph id=\"ph1\">&lt;xref:System.ServiceModel.ServiceContractAttribute&gt;</ph> and its interface is loosely related to the Web Services Description Language (WSDL) <ph id=\"ph2\">`&lt;portType&gt;`</ph> element.","pos":[0,189],"source":"The information expressed by a <xref:System.ServiceModel.ServiceContractAttribute> and its interface is loosely related to the Web Services Description Language (WSDL) `<portType>` element."},{"content":"A service contract is used on the service side to specify what the serviceâ€™s endpoint exposes to callers.","pos":[190,295]},{"content":"It is also used on the client side to specify the contract of the endpoint with which the client communicates and, in the case of duplex contracts, to specify the callback contract (using the <ph id=\"ph1\">&lt;xref:System.ServiceModel.ServiceContractAttribute.CallbackContract%2A&gt;</ph> property) that the client must implement in order to participate in a duplex conversation.","pos":[296,650],"source":" It is also used on the client side to specify the contract of the endpoint with which the client communicates and, in the case of duplex contracts, to specify the callback contract (using the <xref:System.ServiceModel.ServiceContractAttribute.CallbackContract%2A> property) that the client must implement in order to participate in a duplex conversation."}]},{"pos":[1475,1847],"content":"[!NOTE]\n An interface or class that is decorated with <xref:System.ServiceModel.ServiceContractAttribute> must also have at least one method marked with the <xref:System.ServiceModel.OperationContractAttribute> attribute to expose any functionality. See the Examples section for a code example of the simplest use of the two attributes to define and implement a service.","leadings":["","> "],"nodes":[{"content":" An interface or class that is decorated with <xref:System.ServiceModel.ServiceContractAttribute> must also have at least one method marked with the <xref:System.ServiceModel.OperationContractAttribute> attribute to expose any functionality. See the Examples section for a code example of the simplest use of the two attributes to define and implement a service.","pos":[8,370],"nodes":[{"content":"An interface or class that is decorated with <ph id=\"ph1\">&lt;xref:System.ServiceModel.ServiceContractAttribute&gt;</ph> must also have at least one method marked with the <ph id=\"ph2\">&lt;xref:System.ServiceModel.OperationContractAttribute&gt;</ph> attribute to expose any functionality.","pos":[1,241],"source":" An interface or class that is decorated with <xref:System.ServiceModel.ServiceContractAttribute> must also have at least one method marked with the <xref:System.ServiceModel.OperationContractAttribute> attribute to expose any functionality."},{"content":"See the Examples section for a code example of the simplest use of the two attributes to define and implement a service.","pos":[242,362]}]}]},{"pos":[1854,1956],"content":"Use the <xref:System.ServiceModel.ServiceContractAttribute> properties to modify the service contract.","nodes":[{"content":"Use the <ph id=\"ph1\">&lt;xref:System.ServiceModel.ServiceContractAttribute&gt;</ph> properties to modify the service contract.","pos":[0,102],"source":"Use the <xref:System.ServiceModel.ServiceContractAttribute> properties to modify the service contract."}]},{"pos":[1966,2127],"content":"The <xref:System.ServiceModel.ServiceContractAttribute.ConfigurationName%2A> property specifies the name of the service element in the configuration file to use.","nodes":[{"content":"The <ph id=\"ph1\">&lt;xref:System.ServiceModel.ServiceContractAttribute.ConfigurationName%2A&gt;</ph> property specifies the name of the service element in the configuration file to use.","pos":[0,161],"source":"The <xref:System.ServiceModel.ServiceContractAttribute.ConfigurationName%2A> property specifies the name of the service element in the configuration file to use."}]},{"pos":[2137,2361],"content":"The <ph id=\"ph1\">&lt;xref:System.ServiceModel.ServiceContractAttribute.Name%2A&gt;</ph> and <ph id=\"ph2\">&lt;xref:System.ServiceModel.ServiceContractAttribute.Namespace%2A&gt;</ph> properties control the name and namespace of the contract in the WSDL <ph id=\"ph3\">`&lt;portType&gt;`</ph> element.","source":"The <xref:System.ServiceModel.ServiceContractAttribute.Name%2A> and <xref:System.ServiceModel.ServiceContractAttribute.Namespace%2A> properties control the name and namespace of the contract in the WSDL `<portType>` element."},{"pos":[2371,2524],"content":"The <xref:System.ServiceModel.ServiceContractAttribute.SessionMode%2A> property specifies whether the contract requires a binding that supports sessions.","nodes":[{"content":"The <ph id=\"ph1\">&lt;xref:System.ServiceModel.ServiceContractAttribute.SessionMode%2A&gt;</ph> property specifies whether the contract requires a binding that supports sessions.","pos":[0,153],"source":"The <xref:System.ServiceModel.ServiceContractAttribute.SessionMode%2A> property specifies whether the contract requires a binding that supports sessions."}]},{"pos":[2534,2684],"content":"The <xref:System.ServiceModel.ServiceContractAttribute.CallbackContract%2A> property specifies the return contract in a two-way (duplex) conversation.","nodes":[{"content":"The <ph id=\"ph1\">&lt;xref:System.ServiceModel.ServiceContractAttribute.CallbackContract%2A&gt;</ph> property specifies the return contract in a two-way (duplex) conversation.","pos":[0,150],"source":"The <xref:System.ServiceModel.ServiceContractAttribute.CallbackContract%2A> property specifies the return contract in a two-way (duplex) conversation."}]},{"pos":[2694,3036],"content":"The <xref:System.ServiceModel.ServiceContractAttribute.HasProtectionLevel%2A> and <xref:System.ServiceModel.ServiceContractAttribute.ProtectionLevel%2A> properties indicate whether all messages supporting the contract have a explicit <xref:System.ServiceModel.ServiceContractAttribute.ProtectionLevel%2A> value, and if so, what that level is.","nodes":[{"content":"The <ph id=\"ph1\">&lt;xref:System.ServiceModel.ServiceContractAttribute.HasProtectionLevel%2A&gt;</ph> and <ph id=\"ph2\">&lt;xref:System.ServiceModel.ServiceContractAttribute.ProtectionLevel%2A&gt;</ph> properties indicate whether all messages supporting the contract have a explicit <ph id=\"ph3\">&lt;xref:System.ServiceModel.ServiceContractAttribute.ProtectionLevel%2A&gt;</ph> value, and if so, what that level is.","pos":[0,342],"source":"The <xref:System.ServiceModel.ServiceContractAttribute.HasProtectionLevel%2A> and <xref:System.ServiceModel.ServiceContractAttribute.ProtectionLevel%2A> properties indicate whether all messages supporting the contract have a explicit <xref:System.ServiceModel.ServiceContractAttribute.ProtectionLevel%2A> value, and if so, what that level is."}]},{"pos":[3043,4026],"content":"Services implement service contracts, which represent the data exchange that a service type supports. A service class can implement a service contract (by implementing an interface marked with <xref:System.ServiceModel.ServiceContractAttribute> that has methods marked with <xref:System.ServiceModel.OperationContractAttribute>) or it can be marked with the <xref:System.ServiceModel.ServiceContractAttribute> and apply the <xref:System.ServiceModel.OperationContractAttribute> attribute to its own methods. (If a class implements an interface marked with <xref:System.ServiceModel.ServiceContractAttribute>, it cannot be itself marked with <xref:System.ServiceModel.ServiceContractAttribute>.) Methods on service types that are marked with the <xref:System.ServiceModel.OperationContractAttribute> are treated as part of a default service contract specified by the service type itself. For details about service operations, see <xref:System.ServiceModel.OperationContractAttribute>.","nodes":[{"content":"Services implement service contracts, which represent the data exchange that a service type supports. A service class can implement a service contract (by implementing an interface marked with <xref:System.ServiceModel.ServiceContractAttribute> that has methods marked with <xref:System.ServiceModel.OperationContractAttribute>) or it can be marked with the <xref:System.ServiceModel.ServiceContractAttribute> and apply the <xref:System.ServiceModel.OperationContractAttribute> attribute to its own methods. (If a class implements an interface marked with <xref:System.ServiceModel.ServiceContractAttribute>, it cannot be itself marked with <xref:System.ServiceModel.ServiceContractAttribute>.) Methods on service types that are marked with the <xref:System.ServiceModel.OperationContractAttribute> are treated as part of a default service contract specified by the service type itself. For details about service operations, see <xref:System.ServiceModel.OperationContractAttribute>.","pos":[0,983],"nodes":[{"content":"Services implement service contracts, which represent the data exchange that a service type supports.","pos":[0,101]},{"content":"A service class can implement a service contract (by implementing an interface marked with <ph id=\"ph1\">&lt;xref:System.ServiceModel.ServiceContractAttribute&gt;</ph> that has methods marked with <ph id=\"ph2\">&lt;xref:System.ServiceModel.OperationContractAttribute&gt;</ph>) or it can be marked with the <ph id=\"ph3\">&lt;xref:System.ServiceModel.ServiceContractAttribute&gt;</ph> and apply the <ph id=\"ph4\">&lt;xref:System.ServiceModel.OperationContractAttribute&gt;</ph> attribute to its own methods.","pos":[102,507],"source":" A service class can implement a service contract (by implementing an interface marked with <xref:System.ServiceModel.ServiceContractAttribute> that has methods marked with <xref:System.ServiceModel.OperationContractAttribute>) or it can be marked with the <xref:System.ServiceModel.ServiceContractAttribute> and apply the <xref:System.ServiceModel.OperationContractAttribute> attribute to its own methods."},{"content":"(If a class implements an interface marked with <ph id=\"ph1\">&lt;xref:System.ServiceModel.ServiceContractAttribute&gt;</ph>, it cannot be itself marked with <ph id=\"ph2\">&lt;xref:System.ServiceModel.ServiceContractAttribute&gt;</ph>.) Methods on service types that are marked with the <ph id=\"ph3\">&lt;xref:System.ServiceModel.OperationContractAttribute&gt;</ph> are treated as part of a default service contract specified by the service type itself.","pos":[508,886],"source":" (If a class implements an interface marked with <xref:System.ServiceModel.ServiceContractAttribute>, it cannot be itself marked with <xref:System.ServiceModel.ServiceContractAttribute>.) Methods on service types that are marked with the <xref:System.ServiceModel.OperationContractAttribute> are treated as part of a default service contract specified by the service type itself."},{"content":"For details about service operations, see <ph id=\"ph1\">&lt;xref:System.ServiceModel.OperationContractAttribute&gt;</ph>.","pos":[887,983],"source":" For details about service operations, see <xref:System.ServiceModel.OperationContractAttribute>."}]}]},{"pos":[4033,5165],"content":"By default, the <xref:System.ServiceModel.ServiceContractAttribute.Name%2A> and <xref:System.ServiceModel.ServiceContractAttribute.Namespace%2A> properties are the name of the contract type and `http://tempuri.org`, respectively, and <xref:System.ServiceModel.ServiceContractAttribute.ProtectionLevel%2A> is <xref:System.Net.Security.ProtectionLevel?displayProperty=fullName>. It is recommended that service contracts explicitly set their names, namespaces, and protection levels using these properties. Doing so accomplishes two goals. First, it builds a contract that is not directly connected to the managed type information, enabling you to refactor your managed code and namespaces without breaking the contract as it is expressed in WSDL. Second, explicitly requiring a certain level of protection on the contract itself enables the runtime to validate whether the binding configuration supports that level of security, preventing poor configuration from exposing sensitive information. For more information about protection levels, see [Understanding Protection Level](~/docs/framework/wcf/understanding-protection-level.md).","nodes":[{"content":"By default, the <ph id=\"ph1\">&lt;xref:System.ServiceModel.ServiceContractAttribute.Name%2A&gt;</ph> and <ph id=\"ph2\">&lt;xref:System.ServiceModel.ServiceContractAttribute.Namespace%2A&gt;</ph> properties are the name of the contract type and <ph id=\"ph3\">`http://tempuri.org`</ph>, respectively, and <ph id=\"ph4\">&lt;xref:System.ServiceModel.ServiceContractAttribute.ProtectionLevel%2A&gt;</ph> is <ph id=\"ph5\">&lt;xref:System.Net.Security.ProtectionLevel?displayProperty=fullName&gt;</ph>.","pos":[0,376],"source":"By default, the <xref:System.ServiceModel.ServiceContractAttribute.Name%2A> and <xref:System.ServiceModel.ServiceContractAttribute.Namespace%2A> properties are the name of the contract type and `http://tempuri.org`, respectively, and <xref:System.ServiceModel.ServiceContractAttribute.ProtectionLevel%2A> is <xref:System.Net.Security.ProtectionLevel?displayProperty=fullName>."},{"content":"It is recommended that service contracts explicitly set their names, namespaces, and protection levels using these properties.","pos":[377,503]},{"content":"Doing so accomplishes two goals.","pos":[504,536]},{"content":"First, it builds a contract that is not directly connected to the managed type information, enabling you to refactor your managed code and namespaces without breaking the contract as it is expressed in WSDL.","pos":[537,744]},{"content":"Second, explicitly requiring a certain level of protection on the contract itself enables the runtime to validate whether the binding configuration supports that level of security, preventing poor configuration from exposing sensitive information.","pos":[745,992]},{"content":"For more information about protection levels, see <bpt id=\"p1\">[</bpt>Understanding Protection Level<ept id=\"p1\">](~/docs/framework/wcf/understanding-protection-level.md)</ept>.","pos":[993,1132],"source":" For more information about protection levels, see [Understanding Protection Level](~/docs/framework/wcf/understanding-protection-level.md)."}]},{"pos":[5172,5590],"content":"To expose a service for use by client applications, create a host application to register your service endpoint with [!INCLUDE[indigo1](~/includes/indigo1-md.md)]. You can host [!INCLUDE[indigo2](~/includes/indigo2-md.md)] services using Windows Activation Services (WAS), in console applications, Windows Service applications, ASP.NET applications, Windows Forms applications, or any other kind of application domain.","nodes":[{"content":"To expose a service for use by client applications, create a host application to register your service endpoint with <ph id=\"ph1\">[!INCLUDE[indigo1](~/includes/indigo1-md.md)]</ph>.","pos":[0,163],"source":"To expose a service for use by client applications, create a host application to register your service endpoint with [!INCLUDE[indigo1](~/includes/indigo1-md.md)]."},{"content":"You can host <ph id=\"ph1\">[!INCLUDE[indigo2](~/includes/indigo2-md.md)]</ph> services using Windows Activation Services (WAS), in console applications, Windows Service applications, ASP.NET applications, Windows Forms applications, or any other kind of application domain.","pos":[164,418],"source":" You can host [!INCLUDE[indigo2](~/includes/indigo2-md.md)] services using Windows Activation Services (WAS), in console applications, Windows Service applications, ASP.NET applications, Windows Forms applications, or any other kind of application domain."}]},{"pos":[5597,5795],"content":"Hosting in the WAS is very similar to creating an ASP.NET application. For details, see [How to: Host a WCF Service in IIS](~/docs/framework/wcf/feature-details/how-to-host-a-wcf-service-in-iis.md).","nodes":[{"content":"Hosting in the WAS is very similar to creating an ASP.NET application.","pos":[0,70]},{"content":"For details, see <bpt id=\"p1\">[</bpt>How to: Host a WCF Service in IIS<ept id=\"p1\">](~/docs/framework/wcf/feature-details/how-to-host-a-wcf-service-in-iis.md)</ept>.","pos":[71,198],"source":" For details, see [How to: Host a WCF Service in IIS](~/docs/framework/wcf/feature-details/how-to-host-a-wcf-service-in-iis.md)."}]},{"pos":[5802,6335],"content":"Clients either use the service contract interface (the interface marked with <xref:System.ServiceModel.ServiceContractAttribute>) to create a channel to the service or they use the client objects (which combine the type information of the service contract interface with the <xref:System.ServiceModel.ClientBase%601> class) to communicate with your service. For details on client channels to services, see the <xref:System.ServiceModel.ChannelFactory%601> class and [WCF Client Overview](~/docs/framework/wcf/wcf-client-overview.md).","nodes":[{"content":"Clients either use the service contract interface (the interface marked with <ph id=\"ph1\">&lt;xref:System.ServiceModel.ServiceContractAttribute&gt;</ph>) to create a channel to the service or they use the client objects (which combine the type information of the service contract interface with the <ph id=\"ph2\">&lt;xref:System.ServiceModel.ClientBase%601&gt;</ph> class) to communicate with your service.","pos":[0,357],"source":"Clients either use the service contract interface (the interface marked with <xref:System.ServiceModel.ServiceContractAttribute>) to create a channel to the service or they use the client objects (which combine the type information of the service contract interface with the <xref:System.ServiceModel.ClientBase%601> class) to communicate with your service."},{"content":"For details on client channels to services, see the <ph id=\"ph1\">&lt;xref:System.ServiceModel.ChannelFactory%601&gt;</ph> class and <bpt id=\"p1\">[</bpt>WCF Client Overview<ept id=\"p1\">](~/docs/framework/wcf/wcf-client-overview.md)</ept>.","pos":[358,533],"source":" For details on client channels to services, see the <xref:System.ServiceModel.ChannelFactory%601> class and [WCF Client Overview](~/docs/framework/wcf/wcf-client-overview.md)."}]},{"pos":[6342,6954],"content":"Using a <xref:System.ServiceModel.ServiceContractAttribute> class or interface to inherit from another <xref:System.ServiceModel.ServiceContractAttribute> class or interface extends the parent contract. For example, if an `IChildContract` interface is marked with <xref:System.ServiceModel.ServiceContractAttribute> and inherited from another service contract interface, `IParentContract`, the `IChildContract` service contract contains the methods of both `IParentContract` and `IChildContract`. Extending contracts (whether on classes or interfaces) is very similar to extending managed classes and interfaces.","nodes":[{"content":"Using a <ph id=\"ph1\">&lt;xref:System.ServiceModel.ServiceContractAttribute&gt;</ph> class or interface to inherit from another <ph id=\"ph2\">&lt;xref:System.ServiceModel.ServiceContractAttribute&gt;</ph> class or interface extends the parent contract.","pos":[0,202],"source":"Using a <xref:System.ServiceModel.ServiceContractAttribute> class or interface to inherit from another <xref:System.ServiceModel.ServiceContractAttribute> class or interface extends the parent contract."},{"content":"For example, if an <ph id=\"ph1\">`IChildContract`</ph> interface is marked with <ph id=\"ph2\">&lt;xref:System.ServiceModel.ServiceContractAttribute&gt;</ph> and inherited from another service contract interface, <ph id=\"ph3\">`IParentContract`</ph>, the <ph id=\"ph4\">`IChildContract`</ph> service contract contains the methods of both <ph id=\"ph5\">`IParentContract`</ph> and <ph id=\"ph6\">`IChildContract`</ph>.","pos":[203,496],"source":" For example, if an `IChildContract` interface is marked with <xref:System.ServiceModel.ServiceContractAttribute> and inherited from another service contract interface, `IParentContract`, the `IChildContract` service contract contains the methods of both `IParentContract` and `IChildContract`."},{"content":"Extending contracts (whether on classes or interfaces) is very similar to extending managed classes and interfaces.","pos":[497,612]}]},{"pos":[6961,7532],"content":"The most flexible approach to creating services is to define service contract interfaces first and then have your service class implement that interface. (This is also the simplest way to build your services if you must implement service contracts that have been defined by others.) Building services directly by marking a class with <xref:System.ServiceModel.ServiceContractAttribute> and its methods with <xref:System.ServiceModel.OperationContractAttribute> works when the service exposes only one contract (but that contract can be exposed by more than one endpoint).","nodes":[{"content":"The most flexible approach to creating services is to define service contract interfaces first and then have your service class implement that interface. (This is also the simplest way to build your services if you must implement service contracts that have been defined by others.) Building services directly by marking a class with <xref:System.ServiceModel.ServiceContractAttribute> and its methods with <xref:System.ServiceModel.OperationContractAttribute> works when the service exposes only one contract (but that contract can be exposed by more than one endpoint).","pos":[0,571],"nodes":[{"content":"The most flexible approach to creating services is to define service contract interfaces first and then have your service class implement that interface.","pos":[0,153]},{"content":"(This is also the simplest way to build your services if you must implement service contracts that have been defined by others.) Building services directly by marking a class with <ph id=\"ph1\">&lt;xref:System.ServiceModel.ServiceContractAttribute&gt;</ph> and its methods with <ph id=\"ph2\">&lt;xref:System.ServiceModel.OperationContractAttribute&gt;</ph> works when the service exposes only one contract (but that contract can be exposed by more than one endpoint).","pos":[154,571],"source":" (This is also the simplest way to build your services if you must implement service contracts that have been defined by others.) Building services directly by marking a class with <xref:System.ServiceModel.ServiceContractAttribute> and its methods with <xref:System.ServiceModel.OperationContractAttribute> works when the service exposes only one contract (but that contract can be exposed by more than one endpoint)."}]}]},{"pos":[7539,7882],"content":"Use the <xref:System.ServiceModel.ServiceContractAttribute.CallbackContract%2A>property to indicate another service contract that, when bound together with the original service contract, define a message exchange that can flow in two ways independently. For details, see <xref:System.ServiceModel.ServiceContractAttribute.CallbackContract%2A>.","nodes":[{"content":"Use the <xref:System.ServiceModel.ServiceContractAttribute.CallbackContract%2A>property to indicate another service contract that, when bound together with the original service contract, define a message exchange that can flow in two ways independently. For details, see <xref:System.ServiceModel.ServiceContractAttribute.CallbackContract%2A>.","pos":[0,343],"nodes":[{"content":"Use the <ph id=\"ph1\">&lt;xref:System.ServiceModel.ServiceContractAttribute.CallbackContract%2A&gt;</ph>property to indicate another service contract that, when bound together with the original service contract, define a message exchange that can flow in two ways independently.","pos":[0,253],"source":"Use the <xref:System.ServiceModel.ServiceContractAttribute.CallbackContract%2A>property to indicate another service contract that, when bound together with the original service contract, define a message exchange that can flow in two ways independently."},{"content":"For details, see <ph id=\"ph1\">&lt;xref:System.ServiceModel.ServiceContractAttribute.CallbackContract%2A&gt;</ph>.","pos":[254,343],"source":" For details, see <xref:System.ServiceModel.ServiceContractAttribute.CallbackContract%2A>."}]}]}],"pos":[1067,8985],"yaml":true,"extradata":"MT"},{"content":"Initializes a new instance of the <xref href=\"System.ServiceModel.ServiceContractAttribute\"></xref> class.","nodes":[{"pos":[0,106],"content":"Initializes a new instance of the <ph id=\"ph1\">&lt;xref href=\"System.ServiceModel.ServiceContractAttribute\"&gt;&lt;/xref&gt;</ph> class.","source":"Initializes a new instance of the <xref href=\"System.ServiceModel.ServiceContractAttribute\"></xref> class."}],"pos":[15494,15601],"yaml":true},{"content":"The constructor creates an instance of the attribute with no session requirements, no callback contract, and the default name and namespace.","nodes":[{"pos":[0,140],"content":"The constructor creates an instance of the attribute with no session requirements, no callback contract, and the default name and namespace.","nodes":[{"content":"The constructor creates an instance of the attribute with no session requirements, no callback contract, and the default name and namespace.","pos":[0,140]}]}],"pos":[15612,15753],"yaml":true,"extradata":"MT"},{"content":"Gets or sets the type of callback contract when the contract is a duplex contract.","nodes":[{"pos":[0,82],"content":"Gets or sets the type of callback contract when the contract is a duplex contract.","nodes":[{"content":"Gets or sets the type of callback contract when the contract is a duplex contract.","pos":[0,82]}]}],"pos":[17056,17139],"yaml":true},{"content":"Specify an interface in the <xref:System.ServiceModel.ServiceContractAttribute.CallbackContract%2A> property that represents the required opposite contract in a two-way (or duplex) message exchange. This enables client applications to listen for inbound operation calls that the server-side service application can send independently of client activity. Callback contracts that have one-way operations represent calls from the service that the client can handle.  \n  \n> [!NOTE]\n>  The <xref:System.ServiceModel.ServiceContractAttribute> attribute is ignored on callback contracts. To configure runtime behavior of callback objects, use the <xref:System.ServiceModel.CallbackBehaviorAttribute?displayProperty=fullName>.","nodes":[{"pos":[0,462],"content":"Specify an interface in the <xref:System.ServiceModel.ServiceContractAttribute.CallbackContract%2A> property that represents the required opposite contract in a two-way (or duplex) message exchange. This enables client applications to listen for inbound operation calls that the server-side service application can send independently of client activity. Callback contracts that have one-way operations represent calls from the service that the client can handle.","nodes":[{"content":"Specify an interface in the <xref:System.ServiceModel.ServiceContractAttribute.CallbackContract%2A> property that represents the required opposite contract in a two-way (or duplex) message exchange. This enables client applications to listen for inbound operation calls that the server-side service application can send independently of client activity. Callback contracts that have one-way operations represent calls from the service that the client can handle.","pos":[0,462],"nodes":[{"content":"Specify an interface in the <ph id=\"ph1\">&lt;xref:System.ServiceModel.ServiceContractAttribute.CallbackContract%2A&gt;</ph> property that represents the required opposite contract in a two-way (or duplex) message exchange.","pos":[0,198],"source":"Specify an interface in the <xref:System.ServiceModel.ServiceContractAttribute.CallbackContract%2A> property that represents the required opposite contract in a two-way (or duplex) message exchange."},{"content":"This enables client applications to listen for inbound operation calls that the server-side service application can send independently of client activity.","pos":[199,353]},{"content":"Callback contracts that have one-way operations represent calls from the service that the client can handle.","pos":[354,462]}]}]},{"pos":[470,718],"content":"[!NOTE]\n The <xref:System.ServiceModel.ServiceContractAttribute> attribute is ignored on callback contracts. To configure runtime behavior of callback objects, use the <xref:System.ServiceModel.CallbackBehaviorAttribute?displayProperty=fullName>.","leadings":["","> "],"nodes":[{"content":" The <xref:System.ServiceModel.ServiceContractAttribute> attribute is ignored on callback contracts. To configure runtime behavior of callback objects, use the <xref:System.ServiceModel.CallbackBehaviorAttribute?displayProperty=fullName>.","pos":[8,246],"nodes":[{"content":"The <ph id=\"ph1\">&lt;xref:System.ServiceModel.ServiceContractAttribute&gt;</ph> attribute is ignored on callback contracts.","pos":[1,100],"source":" The <xref:System.ServiceModel.ServiceContractAttribute> attribute is ignored on callback contracts."},{"content":"To configure runtime behavior of callback objects, use the <ph id=\"ph1\">&lt;xref:System.ServiceModel.CallbackBehaviorAttribute?displayProperty=fullName&gt;</ph>.","pos":[101,238],"source":" To configure runtime behavior of callback objects, use the <xref:System.ServiceModel.CallbackBehaviorAttribute?displayProperty=fullName>."}]}]}],"pos":[17150,17874],"yaml":true,"extradata":"MT"},{"content":"A <xref href=\"System.Type\"></xref> that indicates the callback contract. The default is `null`.","nodes":[{"pos":[0,95],"content":"A <xref href=\"System.Type\"></xref> that indicates the callback contract. The default is `null`.","nodes":[{"content":"A <ph id=\"ph1\">&lt;xref href=\"System.Type\"&gt;&lt;/xref&gt;</ph> that indicates the callback contract.","pos":[0,72],"source":"A <xref href=\"System.Type\"></xref> that indicates the callback contract."},{"content":"The default is <ph id=\"ph1\">`null`</ph>.","pos":[73,95],"source":" The default is `null`."}]}],"pos":[18673,18769],"yaml":true},{"content":"Gets or sets the name used to locate the service in an application configuration file.","nodes":[{"pos":[0,86],"content":"Gets or sets the name used to locate the service in an application configuration file.","nodes":[{"content":"Gets or sets the name used to locate the service in an application configuration file.","pos":[0,86]}]}],"pos":[20011,20098],"yaml":true},{"content":"To set the value by which the configuration system locates a contract value in the configuration file, see <xref:System.ServiceModel.ServiceBehaviorAttribute.ConfigurationName%2A>.","nodes":[{"pos":[0,180],"content":"To set the value by which the configuration system locates a contract value in the configuration file, see <xref:System.ServiceModel.ServiceBehaviorAttribute.ConfigurationName%2A>.","nodes":[{"content":"To set the value by which the configuration system locates a contract value in the configuration file, see <ph id=\"ph1\">&lt;xref:System.ServiceModel.ServiceBehaviorAttribute.ConfigurationName%2A&gt;</ph>.","pos":[0,180],"source":"To set the value by which the configuration system locates a contract value in the configuration file, see <xref:System.ServiceModel.ServiceBehaviorAttribute.ConfigurationName%2A>."}]}],"pos":[20109,20290],"yaml":true,"extradata":"MT"},{"content":"The name used to locate the service element in an application configuration file. The default is the name of the service implementation class.","nodes":[{"pos":[0,142],"content":"The name used to locate the service element in an application configuration file. The default is the name of the service implementation class.","nodes":[{"content":"The name used to locate the service element in an application configuration file. The default is the name of the service implementation class.","pos":[0,142],"nodes":[{"content":"The name used to locate the service element in an application configuration file.","pos":[0,81]},{"content":"The default is the name of the service implementation class.","pos":[82,142]}]}]}],"pos":[20416,20559],"yaml":true},{"content":"The value is null.","nodes":[{"pos":[0,18],"content":"The value is null.","nodes":[{"content":"The value is null.","pos":[0,18]}]}],"pos":[20751,20770],"yaml":true},{"content":"The value is an empty string.","nodes":[{"pos":[0,29],"content":"The value is an empty string.","nodes":[{"content":"The value is an empty string.","pos":[0,29]}]}],"pos":[20884,20914],"yaml":true},{"content":"Gets a value that indicates whether the member has a protection level assigned.","nodes":[{"pos":[0,79],"content":"Gets a value that indicates whether the member has a protection level assigned.","nodes":[{"content":"Gets a value that indicates whether the member has a protection level assigned.","pos":[0,79]}]}],"pos":[22070,22150],"yaml":true},{"content":"The <xref:System.ServiceModel.ServiceContractAttribute.HasProtectionLevel%2A> property indicates whether a protection level value other than `false` has been set for the contract.","nodes":[{"pos":[0,179],"content":"The <ph id=\"ph1\">&lt;xref:System.ServiceModel.ServiceContractAttribute.HasProtectionLevel%2A&gt;</ph> property indicates whether a protection level value other than <ph id=\"ph2\">`false`</ph> has been set for the contract.","source":"The <xref:System.ServiceModel.ServiceContractAttribute.HasProtectionLevel%2A> property indicates whether a protection level value other than `false` has been set for the contract."}],"pos":[22161,22341],"yaml":true,"extradata":"MT"},{"content":"`true` if the <xref href=\"System.ServiceModel.ServiceContractAttribute.ProtectionLevel\"></xref> property is not <xref href=\"System.Net.Security.ProtectionLevel.None\"></xref>; otherwise, `false`. The default is `false`.","nodes":[{"pos":[0,218],"content":"`true` if the <xref href=\"System.ServiceModel.ServiceContractAttribute.ProtectionLevel\"></xref> property is not <xref href=\"System.Net.Security.ProtectionLevel.None\"></xref>; otherwise, `false`. The default is `false`.","nodes":[{"content":"<ph id=\"ph1\">`true`</ph> if the <ph id=\"ph2\">&lt;xref href=\"System.ServiceModel.ServiceContractAttribute.ProtectionLevel\"&gt;&lt;/xref&gt;</ph> property is not <ph id=\"ph3\">&lt;xref href=\"System.Net.Security.ProtectionLevel.None\"&gt;&lt;/xref&gt;</ph>; otherwise, <ph id=\"ph4\">`false`</ph>.","pos":[0,194],"source":"`true` if the <xref href=\"System.ServiceModel.ServiceContractAttribute.ProtectionLevel\"></xref> property is not <xref href=\"System.Net.Security.ProtectionLevel.None\"></xref>; otherwise, `false`."},{"content":"The default is <ph id=\"ph1\">`false`</ph>.","pos":[195,218],"source":" The default is `false`."}]}],"pos":[22462,22683],"yaml":true},{"content":"Gets or sets the name for the `<portType>` element in Web Services Description Language (WSDL).","nodes":[{"pos":[0,95],"content":"Gets or sets the name for the <ph id=\"ph1\">`&lt;portType&gt;`</ph> element in Web Services Description Language (WSDL).","source":"Gets or sets the name for the `<portType>` element in Web Services Description Language (WSDL)."}],"pos":[23849,23945],"yaml":true},{"content":"Use the <xref:System.ServiceModel.ServiceContractAttribute.Name%2A> and the <xref:System.ServiceModel.ServiceContractAttribute.Namespace%2A> properties to control the name and namespace of the `<portType>` element in WSDL.","nodes":[{"pos":[0,222],"content":"Use the <ph id=\"ph1\">&lt;xref:System.ServiceModel.ServiceContractAttribute.Name%2A&gt;</ph> and the <ph id=\"ph2\">&lt;xref:System.ServiceModel.ServiceContractAttribute.Namespace%2A&gt;</ph> properties to control the name and namespace of the <ph id=\"ph3\">`&lt;portType&gt;`</ph> element in WSDL.","source":"Use the <xref:System.ServiceModel.ServiceContractAttribute.Name%2A> and the <xref:System.ServiceModel.ServiceContractAttribute.Namespace%2A> properties to control the name and namespace of the `<portType>` element in WSDL."}],"pos":[23956,24179],"yaml":true,"extradata":"MT"},{"content":"The default value is the name of the class or interface to which the <xref href=\"System.ServiceModel.ServiceContractAttribute\"></xref> is applied.","nodes":[{"pos":[0,146],"content":"The default value is the name of the class or interface to which the <ph id=\"ph1\">&lt;xref href=\"System.ServiceModel.ServiceContractAttribute\"&gt;&lt;/xref&gt;</ph> is applied.","source":"The default value is the name of the class or interface to which the <xref href=\"System.ServiceModel.ServiceContractAttribute\"></xref> is applied."}],"pos":[25481,25628],"yaml":true},{"content":"The value is null.","nodes":[{"pos":[0,18],"content":"The value is null.","nodes":[{"content":"The value is null.","pos":[0,18]}]}],"pos":[25807,25826],"yaml":true},{"content":"The value is an empty string.","nodes":[{"pos":[0,29],"content":"The value is an empty string.","nodes":[{"content":"The value is an empty string.","pos":[0,29]}]}],"pos":[25940,25970],"yaml":true},{"content":"Gets or sets the namespace of the `<portType>` element in Web Services Description Language (WSDL).","nodes":[{"pos":[0,99],"content":"Gets or sets the namespace of the <ph id=\"ph1\">`&lt;portType&gt;`</ph> element in Web Services Description Language (WSDL).","source":"Gets or sets the namespace of the `<portType>` element in Web Services Description Language (WSDL)."}],"pos":[27072,27172],"yaml":true},{"content":"The WSDL namespace of the `<portType>` element. The default value is \"http://tempuri.org\".","nodes":[{"pos":[0,90],"content":"The WSDL namespace of the `<portType>` element. The default value is \"http://tempuri.org\".","nodes":[{"content":"The WSDL namespace of the <ph id=\"ph1\">`&lt;portType&gt;`</ph> element.","pos":[0,47],"source":"The WSDL namespace of the `<portType>` element."},{"content":"The default value is \"http://tempuri.org\".","pos":[48,90]}]}],"pos":[28495,28586],"yaml":true},{"content":"Specifies whether the binding for the contract must support the value of the <xref href=\"System.ServiceModel.ServiceContractAttribute.ProtectionLevel\"></xref> property.","nodes":[{"pos":[0,168],"content":"Specifies whether the binding for the contract must support the value of the <ph id=\"ph1\">&lt;xref href=\"System.ServiceModel.ServiceContractAttribute.ProtectionLevel\"&gt;&lt;/xref&gt;</ph> property.","source":"Specifies whether the binding for the contract must support the value of the <xref href=\"System.ServiceModel.ServiceContractAttribute.ProtectionLevel\"></xref> property."}],"pos":[29809,29978],"yaml":true},{"content":"Use the <xref:System.ServiceModel.ServiceContractAttribute.ProtectionLevel%2A> property to specify the degree to which the contract binding requires encryption, digital signatures, or both for endpoints that expose the contract. The value set here is the default value for all operation messages including faults.  \n  \n It is important to remember that the protection behavior at runtime is the combination of the protection-level values set on the following properties. These properties have a hierarchical structure. Setting the outermost value establishes the default setting for all narrower scopes unless a different value for a narrower scope is explicitly set. In this case, the outer value remains the default for all narrower scopes with the exception of that specifically set.  \n  \n For example, if <xref:System.ServiceModel.ServiceContractAttribute.ProtectionLevel%2A?displayProperty=fullName> is set to <xref:System.Net.Security.ProtectionLevel?displayProperty=fullName> and no other narrower scopes have protection level settings, all messages in an operation contract are encrypted and signed. If, however, one of those operations has the <xref:System.ServiceModel.OperationContractAttribute> set to <xref:System.Net.Security.ProtectionLevel?displayProperty=fullName>, then the messages for that operation are signed but all other messages in the contract are encrypted and signed.  \n  \n For details about protection levels and their assumptions and scopes, see [Understanding Protection Level](~/docs/framework/wcf/understanding-protection-level.md).  \n  \n The scopes at which these values are set are:  \n  \n <xref:System.ServiceModel.ServiceContractAttribute.ProtectionLevel%2A?displayProperty=fullName>  \n  \n <xref:System.ServiceModel.OperationContractAttribute.ProtectionLevel%2A?displayProperty=fullName>  \n  \n <xref:System.ServiceModel.FaultContractAttribute.ProtectionLevel%2A?displayProperty=fullName>  \n  \n <xref:System.ServiceModel.MessageContractAttribute.ProtectionLevel%2A?displayProperty=fullName>  \n  \n The <xref:System.ServiceModel.MessageContractMemberAttribute.ProtectionLevel%2A?displayProperty=fullName> property on <xref:System.ServiceModel.MessageHeaderAttribute?displayProperty=fullName>.  \n  \n The <xref:System.ServiceModel.MessageContractMemberAttribute.ProtectionLevel%2A?displayProperty=fullName> property on <xref:System.ServiceModel.MessageBodyMemberAttribute?displayProperty=fullName>.  \n  \n When there is no protection level explicitly specified on the contract and the underlying binding supports security (whether at the transport or message level), the effective protection level for the whole contract is <xref:System.Net.Security.ProtectionLevel?displayProperty=fullName>. If the binding does not support security (such as <xref:System.ServiceModel.BasicHttpBinding>), the effective <xref:System.Net.Security.ProtectionLevel?displayProperty=fullName> is <xref:System.Net.Security.ProtectionLevel?displayProperty=fullName> for the whole contract. The result is that depending upon the endpoint binding, clients can require different message or transport level security protection even when the contract specifies <xref:System.Net.Security.ProtectionLevel?displayProperty=fullName>.","nodes":[{"pos":[0,313],"content":"Use the <xref:System.ServiceModel.ServiceContractAttribute.ProtectionLevel%2A> property to specify the degree to which the contract binding requires encryption, digital signatures, or both for endpoints that expose the contract. The value set here is the default value for all operation messages including faults.","nodes":[{"content":"Use the <xref:System.ServiceModel.ServiceContractAttribute.ProtectionLevel%2A> property to specify the degree to which the contract binding requires encryption, digital signatures, or both for endpoints that expose the contract. The value set here is the default value for all operation messages including faults.","pos":[0,313],"nodes":[{"content":"Use the <ph id=\"ph1\">&lt;xref:System.ServiceModel.ServiceContractAttribute.ProtectionLevel%2A&gt;</ph> property to specify the degree to which the contract binding requires encryption, digital signatures, or both for endpoints that expose the contract.","pos":[0,228],"source":"Use the <xref:System.ServiceModel.ServiceContractAttribute.ProtectionLevel%2A> property to specify the degree to which the contract binding requires encryption, digital signatures, or both for endpoints that expose the contract."},{"content":"The value set here is the default value for all operation messages including faults.","pos":[229,313]}]}]},{"pos":[320,786],"content":"It is important to remember that the protection behavior at runtime is the combination of the protection-level values set on the following properties. These properties have a hierarchical structure. Setting the outermost value establishes the default setting for all narrower scopes unless a different value for a narrower scope is explicitly set. In this case, the outer value remains the default for all narrower scopes with the exception of that specifically set.","nodes":[{"content":"It is important to remember that the protection behavior at runtime is the combination of the protection-level values set on the following properties. These properties have a hierarchical structure. Setting the outermost value establishes the default setting for all narrower scopes unless a different value for a narrower scope is explicitly set. In this case, the outer value remains the default for all narrower scopes with the exception of that specifically set.","pos":[0,466],"nodes":[{"content":"It is important to remember that the protection behavior at runtime is the combination of the protection-level values set on the following properties.","pos":[0,150]},{"content":"These properties have a hierarchical structure.","pos":[151,198]},{"content":"Setting the outermost value establishes the default setting for all narrower scopes unless a different value for a narrower scope is explicitly set.","pos":[199,347]},{"content":"In this case, the outer value remains the default for all narrower scopes with the exception of that specifically set.","pos":[348,466]}]}]},{"pos":[793,1395],"content":"For example, if <xref:System.ServiceModel.ServiceContractAttribute.ProtectionLevel%2A?displayProperty=fullName> is set to <xref:System.Net.Security.ProtectionLevel?displayProperty=fullName> and no other narrower scopes have protection level settings, all messages in an operation contract are encrypted and signed. If, however, one of those operations has the <xref:System.ServiceModel.OperationContractAttribute> set to <xref:System.Net.Security.ProtectionLevel?displayProperty=fullName>, then the messages for that operation are signed but all other messages in the contract are encrypted and signed.","nodes":[{"content":"For example, if <xref:System.ServiceModel.ServiceContractAttribute.ProtectionLevel%2A?displayProperty=fullName> is set to <xref:System.Net.Security.ProtectionLevel?displayProperty=fullName> and no other narrower scopes have protection level settings, all messages in an operation contract are encrypted and signed. If, however, one of those operations has the <xref:System.ServiceModel.OperationContractAttribute> set to <xref:System.Net.Security.ProtectionLevel?displayProperty=fullName>, then the messages for that operation are signed but all other messages in the contract are encrypted and signed.","pos":[0,602],"nodes":[{"content":"For example, if <ph id=\"ph1\">&lt;xref:System.ServiceModel.ServiceContractAttribute.ProtectionLevel%2A?displayProperty=fullName&gt;</ph> is set to <ph id=\"ph2\">&lt;xref:System.Net.Security.ProtectionLevel?displayProperty=fullName&gt;</ph> and no other narrower scopes have protection level settings, all messages in an operation contract are encrypted and signed.","pos":[0,314],"source":"For example, if <xref:System.ServiceModel.ServiceContractAttribute.ProtectionLevel%2A?displayProperty=fullName> is set to <xref:System.Net.Security.ProtectionLevel?displayProperty=fullName> and no other narrower scopes have protection level settings, all messages in an operation contract are encrypted and signed."},{"content":"If, however, one of those operations has the <ph id=\"ph1\">&lt;xref:System.ServiceModel.OperationContractAttribute&gt;</ph> set to <ph id=\"ph2\">&lt;xref:System.Net.Security.ProtectionLevel?displayProperty=fullName&gt;</ph>, then the messages for that operation are signed but all other messages in the contract are encrypted and signed.","pos":[315,602],"source":" If, however, one of those operations has the <xref:System.ServiceModel.OperationContractAttribute> set to <xref:System.Net.Security.ProtectionLevel?displayProperty=fullName>, then the messages for that operation are signed but all other messages in the contract are encrypted and signed."}]}]},{"pos":[1402,1565],"content":"For details about protection levels and their assumptions and scopes, see <bpt id=\"p1\">[</bpt>Understanding Protection Level<ept id=\"p1\">](~/docs/framework/wcf/understanding-protection-level.md)</ept>.","source":"For details about protection levels and their assumptions and scopes, see [Understanding Protection Level](~/docs/framework/wcf/understanding-protection-level.md)."},{"pos":[1572,1617],"content":"The scopes at which these values are set are:","nodes":[{"content":"The scopes at which these values are set are:","pos":[0,45]}]},{"pos":[1624,1719],"content":"<xref:System.ServiceModel.ServiceContractAttribute.ProtectionLevel%2A?displayProperty=fullName>","nodes":[]},{"pos":[1726,1823],"content":"<xref:System.ServiceModel.OperationContractAttribute.ProtectionLevel%2A?displayProperty=fullName>","nodes":[]},{"pos":[1830,1923],"content":"<xref:System.ServiceModel.FaultContractAttribute.ProtectionLevel%2A?displayProperty=fullName>","nodes":[]},{"pos":[1930,2025],"content":"<xref:System.ServiceModel.MessageContractAttribute.ProtectionLevel%2A?displayProperty=fullName>","nodes":[]},{"pos":[2032,2225],"content":"The <xref:System.ServiceModel.MessageContractMemberAttribute.ProtectionLevel%2A?displayProperty=fullName> property on <xref:System.ServiceModel.MessageHeaderAttribute?displayProperty=fullName>.","nodes":[{"content":"The <ph id=\"ph1\">&lt;xref:System.ServiceModel.MessageContractMemberAttribute.ProtectionLevel%2A?displayProperty=fullName&gt;</ph> property on <ph id=\"ph2\">&lt;xref:System.ServiceModel.MessageHeaderAttribute?displayProperty=fullName&gt;</ph>.","pos":[0,193],"source":"The <xref:System.ServiceModel.MessageContractMemberAttribute.ProtectionLevel%2A?displayProperty=fullName> property on <xref:System.ServiceModel.MessageHeaderAttribute?displayProperty=fullName>."}]},{"pos":[2232,2429],"content":"The <xref:System.ServiceModel.MessageContractMemberAttribute.ProtectionLevel%2A?displayProperty=fullName> property on <xref:System.ServiceModel.MessageBodyMemberAttribute?displayProperty=fullName>.","nodes":[{"content":"The <ph id=\"ph1\">&lt;xref:System.ServiceModel.MessageContractMemberAttribute.ProtectionLevel%2A?displayProperty=fullName&gt;</ph> property on <ph id=\"ph2\">&lt;xref:System.ServiceModel.MessageBodyMemberAttribute?displayProperty=fullName&gt;</ph>.","pos":[0,197],"source":"The <xref:System.ServiceModel.MessageContractMemberAttribute.ProtectionLevel%2A?displayProperty=fullName> property on <xref:System.ServiceModel.MessageBodyMemberAttribute?displayProperty=fullName>."}]},{"pos":[2436,3230],"content":"When there is no protection level explicitly specified on the contract and the underlying binding supports security (whether at the transport or message level), the effective protection level for the whole contract is <xref:System.Net.Security.ProtectionLevel?displayProperty=fullName>. If the binding does not support security (such as <xref:System.ServiceModel.BasicHttpBinding>), the effective <xref:System.Net.Security.ProtectionLevel?displayProperty=fullName> is <xref:System.Net.Security.ProtectionLevel?displayProperty=fullName> for the whole contract. The result is that depending upon the endpoint binding, clients can require different message or transport level security protection even when the contract specifies <xref:System.Net.Security.ProtectionLevel?displayProperty=fullName>.","nodes":[{"content":"When there is no protection level explicitly specified on the contract and the underlying binding supports security (whether at the transport or message level), the effective protection level for the whole contract is <xref:System.Net.Security.ProtectionLevel?displayProperty=fullName>. If the binding does not support security (such as <xref:System.ServiceModel.BasicHttpBinding>), the effective <xref:System.Net.Security.ProtectionLevel?displayProperty=fullName> is <xref:System.Net.Security.ProtectionLevel?displayProperty=fullName> for the whole contract. The result is that depending upon the endpoint binding, clients can require different message or transport level security protection even when the contract specifies <xref:System.Net.Security.ProtectionLevel?displayProperty=fullName>.","pos":[0,794],"nodes":[{"content":"When there is no protection level explicitly specified on the contract and the underlying binding supports security (whether at the transport or message level), the effective protection level for the whole contract is <ph id=\"ph1\">&lt;xref:System.Net.Security.ProtectionLevel?displayProperty=fullName&gt;</ph>.","pos":[0,286],"source":"When there is no protection level explicitly specified on the contract and the underlying binding supports security (whether at the transport or message level), the effective protection level for the whole contract is <xref:System.Net.Security.ProtectionLevel?displayProperty=fullName>."},{"content":"If the binding does not support security (such as <ph id=\"ph1\">&lt;xref:System.ServiceModel.BasicHttpBinding&gt;</ph>), the effective <ph id=\"ph2\">&lt;xref:System.Net.Security.ProtectionLevel?displayProperty=fullName&gt;</ph> is <ph id=\"ph3\">&lt;xref:System.Net.Security.ProtectionLevel?displayProperty=fullName&gt;</ph> for the whole contract.","pos":[287,559],"source":" If the binding does not support security (such as <xref:System.ServiceModel.BasicHttpBinding>), the effective <xref:System.Net.Security.ProtectionLevel?displayProperty=fullName> is <xref:System.Net.Security.ProtectionLevel?displayProperty=fullName> for the whole contract."},{"content":"The result is that depending upon the endpoint binding, clients can require different message or transport level security protection even when the contract specifies <ph id=\"ph1\">&lt;xref:System.Net.Security.ProtectionLevel?displayProperty=fullName&gt;</ph>.","pos":[560,794],"source":" The result is that depending upon the endpoint binding, clients can require different message or transport level security protection even when the contract specifies <xref:System.Net.Security.ProtectionLevel?displayProperty=fullName>."}]}]}],"pos":[29989,33244],"yaml":true,"extradata":"MT"},{"content":"One of the <xref href=\"System.Net.Security.ProtectionLevel\"></xref> values. The default is <xref href=\"System.Net.Security.ProtectionLevel.None\"></xref>.","nodes":[{"pos":[0,153],"content":"One of the <xref href=\"System.Net.Security.ProtectionLevel\"></xref> values. The default is <xref href=\"System.Net.Security.ProtectionLevel.None\"></xref>.","nodes":[{"content":"One of the <ph id=\"ph1\">&lt;xref href=\"System.Net.Security.ProtectionLevel\"&gt;&lt;/xref&gt;</ph> values.","pos":[0,75],"source":"One of the <xref href=\"System.Net.Security.ProtectionLevel\"></xref> values."},{"content":"The default is <ph id=\"ph1\">&lt;xref href=\"System.Net.Security.ProtectionLevel.None\"&gt;&lt;/xref&gt;</ph>.","pos":[76,153],"source":" The default is <xref href=\"System.Net.Security.ProtectionLevel.None\"></xref>."}]}],"pos":[33419,33573],"yaml":true},{"content":"The value is not one of the <xref href=\"System.Net.Security.ProtectionLevel\"></xref> values.","nodes":[{"pos":[0,92],"content":"The value is not one of the <ph id=\"ph1\">&lt;xref href=\"System.Net.Security.ProtectionLevel\"&gt;&lt;/xref&gt;</ph> values.","source":"The value is not one of the <xref href=\"System.Net.Security.ProtectionLevel\"></xref> values."}],"pos":[33775,33868],"yaml":true},{"content":"Gets or sets whether sessions are allowed, not allowed or required.","nodes":[{"pos":[0,67],"content":"Gets or sets whether sessions are allowed, not allowed or required.","nodes":[{"content":"Gets or sets whether sessions are allowed, not allowed or required.","pos":[0,67]}]}],"pos":[34982,35050],"yaml":true},{"content":"Use the <xref:System.ServiceModel.ServiceContractAttribute.SessionMode%2A> property to require bindings that support sessions between endpoints. A session is a way of correlating a set of messages exchanged between two or more endpoints. If your service supports channel sessions, you can then use the <xref:System.ServiceModel.ServiceBehaviorAttribute.InstanceContextMode%2A> property to specify the relationship between instances your service contract implementation and the channel session. If a binding does not support sessions, an exception is thrown.  \n  \n For example, if the <xref:System.ServiceModel.ServiceContractAttribute.SessionMode%2A> property is set to <xref:System.ServiceModel.SessionMode?displayProperty=fullName> and the <xref:System.ServiceModel.ServiceBehaviorAttribute.InstanceContextMode%2A> property is set to <xref:System.ServiceModel.InstanceContextMode.PerSession>, clients can use the same connection to make repeated calls to the same service object.  \n  \n For more information about sessions and service instances, see [Using Sessions](~/docs/framework/wcf/using-sessions.md) and [Sessions, Instancing, and Concurrency](~/docs/framework/wcf/feature-details/sessions-instancing-and-concurrency.md).  \n  \n> [!NOTE]\n>  A channel that supports sessions supports the default association of a service instance with a particular session. However, different session implementations support different features in addition to session-based instancing control. [!INCLUDE[indigo2](~/includes/indigo2-md.md)] provides four types of sessions that you can use to provide sessionful application behavior; each type of session provides additional behavior specific to the type of session it is.  \n  \n1.  The <xref:System.ServiceModel.Channels.SecurityBindingElement?displayProperty=fullName> supports security sessions, in which both ends of communication have agreed upon an encryption and/or digital signature process; all messages are correlated with that specific secure conversation. For more information, see [Securing Services](~/docs/framework/wcf/securing-services.md). For example, the <xref:System.ServiceModel.WSHttpBinding?displayProperty=fullName>, which contains support for both security sessions and reliable sessions, by default uses only a secure session which encrypts and digitally signs messages.  \n  \n2.  The <xref:System.ServiceModel.NetTcpBinding?displayProperty=fullName> supports the sessions exposed by the TCP/IP connections to ensure that all messages are correlated by the connection session at the socket level.  \n  \n3.  The <xref:System.ServiceModel.Channels.ReliableSessionBindingElement?displayProperty=fullName>, which implements the WS-ReliableMessaging specification, provides support for reliable sessions in which messages are delivered in order and exactly once, enabling confidence even when messages travel across multiple nodes during the conversation. For more information, see [Reliable Sessions](~/docs/framework/wcf/feature-details/reliable-sessions.md).  \n  \n4.  The <xref:System.ServiceModel.NetMsmqBinding?displayProperty=fullName> provides MSMQ datagram sessions. For more information, see [Queues in WCF](~/docs/framework/wcf/feature-details/queues-in-wcf.md).  \n  \n Remember that setting the <xref:System.ServiceModel.ServiceContractAttribute.SessionMode%2A> property does not specify the type of session the contract requires, only that it requires one.","nodes":[{"pos":[0,557],"content":"Use the <xref:System.ServiceModel.ServiceContractAttribute.SessionMode%2A> property to require bindings that support sessions between endpoints. A session is a way of correlating a set of messages exchanged between two or more endpoints. If your service supports channel sessions, you can then use the <xref:System.ServiceModel.ServiceBehaviorAttribute.InstanceContextMode%2A> property to specify the relationship between instances your service contract implementation and the channel session. If a binding does not support sessions, an exception is thrown.","nodes":[{"content":"Use the <xref:System.ServiceModel.ServiceContractAttribute.SessionMode%2A> property to require bindings that support sessions between endpoints. A session is a way of correlating a set of messages exchanged between two or more endpoints. If your service supports channel sessions, you can then use the <xref:System.ServiceModel.ServiceBehaviorAttribute.InstanceContextMode%2A> property to specify the relationship between instances your service contract implementation and the channel session. If a binding does not support sessions, an exception is thrown.","pos":[0,557],"nodes":[{"content":"Use the <ph id=\"ph1\">&lt;xref:System.ServiceModel.ServiceContractAttribute.SessionMode%2A&gt;</ph> property to require bindings that support sessions between endpoints.","pos":[0,144],"source":"Use the <xref:System.ServiceModel.ServiceContractAttribute.SessionMode%2A> property to require bindings that support sessions between endpoints."},{"content":"A session is a way of correlating a set of messages exchanged between two or more endpoints.","pos":[145,237]},{"content":"If your service supports channel sessions, you can then use the <ph id=\"ph1\">&lt;xref:System.ServiceModel.ServiceBehaviorAttribute.InstanceContextMode%2A&gt;</ph> property to specify the relationship between instances your service contract implementation and the channel session.","pos":[238,493],"source":" If your service supports channel sessions, you can then use the <xref:System.ServiceModel.ServiceBehaviorAttribute.InstanceContextMode%2A> property to specify the relationship between instances your service contract implementation and the channel session."},{"content":"If a binding does not support sessions, an exception is thrown.","pos":[494,557]}]}]},{"pos":[564,981],"content":"For example, if the <xref:System.ServiceModel.ServiceContractAttribute.SessionMode%2A> property is set to <xref:System.ServiceModel.SessionMode?displayProperty=fullName> and the <xref:System.ServiceModel.ServiceBehaviorAttribute.InstanceContextMode%2A> property is set to <xref:System.ServiceModel.InstanceContextMode.PerSession>, clients can use the same connection to make repeated calls to the same service object.","nodes":[{"content":"For example, if the <ph id=\"ph1\">&lt;xref:System.ServiceModel.ServiceContractAttribute.SessionMode%2A&gt;</ph> property is set to <ph id=\"ph2\">&lt;xref:System.ServiceModel.SessionMode?displayProperty=fullName&gt;</ph> and the <ph id=\"ph3\">&lt;xref:System.ServiceModel.ServiceBehaviorAttribute.InstanceContextMode%2A&gt;</ph> property is set to <ph id=\"ph4\">&lt;xref:System.ServiceModel.InstanceContextMode.PerSession&gt;</ph>, clients can use the same connection to make repeated calls to the same service object.","pos":[0,417],"source":"For example, if the <xref:System.ServiceModel.ServiceContractAttribute.SessionMode%2A> property is set to <xref:System.ServiceModel.SessionMode?displayProperty=fullName> and the <xref:System.ServiceModel.ServiceBehaviorAttribute.InstanceContextMode%2A> property is set to <xref:System.ServiceModel.InstanceContextMode.PerSession>, clients can use the same connection to make repeated calls to the same service object."}]},{"pos":[988,1229],"content":"For more information about sessions and service instances, see <bpt id=\"p1\">[</bpt>Using Sessions<ept id=\"p1\">](~/docs/framework/wcf/using-sessions.md)</ept> and <bpt id=\"p2\">[</bpt>Sessions, Instancing, and Concurrency<ept id=\"p2\">](~/docs/framework/wcf/feature-details/sessions-instancing-and-concurrency.md)</ept>.","source":"For more information about sessions and service instances, see [Using Sessions](~/docs/framework/wcf/using-sessions.md) and [Sessions, Instancing, and Concurrency](~/docs/framework/wcf/feature-details/sessions-instancing-and-concurrency.md)."},{"pos":[1237,1709],"content":"[!NOTE]\n A channel that supports sessions supports the default association of a service instance with a particular session. However, different session implementations support different features in addition to session-based instancing control. [!INCLUDE[indigo2](~/includes/indigo2-md.md)] provides four types of sessions that you can use to provide sessionful application behavior; each type of session provides additional behavior specific to the type of session it is.","leadings":["","> "],"nodes":[{"content":" A channel that supports sessions supports the default association of a service instance with a particular session. However, different session implementations support different features in addition to session-based instancing control. [!INCLUDE[indigo2](~/includes/indigo2-md.md)] provides four types of sessions that you can use to provide sessionful application behavior; each type of session provides additional behavior specific to the type of session it is.","pos":[8,470],"nodes":[{"content":"A channel that supports sessions supports the default association of a service instance with a particular session.","pos":[1,115]},{"content":"However, different session implementations support different features in addition to session-based instancing control.","pos":[116,234]},{"content":"<ph id=\"ph1\">[!INCLUDE[indigo2](~/includes/indigo2-md.md)]</ph> provides four types of sessions that you can use to provide sessionful application behavior; each type of session provides additional behavior specific to the type of session it is.","pos":[235,462],"source":"[!INCLUDE[indigo2](~/includes/indigo2-md.md)] provides four types of sessions that you can use to provide sessionful application behavior; each type of session provides additional behavior specific to the type of session it is."}]}]},{"pos":[1719,2333],"content":"The <xref:System.ServiceModel.Channels.SecurityBindingElement?displayProperty=fullName> supports security sessions, in which both ends of communication have agreed upon an encryption and/or digital signature process; all messages are correlated with that specific secure conversation. For more information, see [Securing Services](~/docs/framework/wcf/securing-services.md). For example, the <xref:System.ServiceModel.WSHttpBinding?displayProperty=fullName>, which contains support for both security sessions and reliable sessions, by default uses only a secure session which encrypts and digitally signs messages.","nodes":[{"content":"The <ph id=\"ph1\">&lt;xref:System.ServiceModel.Channels.SecurityBindingElement?displayProperty=fullName&gt;</ph> supports security sessions, in which both ends of communication have agreed upon an encryption and/or digital signature process; all messages are correlated with that specific secure conversation.","pos":[0,284],"source":"The <xref:System.ServiceModel.Channels.SecurityBindingElement?displayProperty=fullName> supports security sessions, in which both ends of communication have agreed upon an encryption and/or digital signature process; all messages are correlated with that specific secure conversation."},{"content":"For more information, see <bpt id=\"p1\">[</bpt>Securing Services<ept id=\"p1\">](~/docs/framework/wcf/securing-services.md)</ept>.","pos":[285,374],"source":" For more information, see [Securing Services](~/docs/framework/wcf/securing-services.md)."},{"content":"For example, the <ph id=\"ph1\">&lt;xref:System.ServiceModel.WSHttpBinding?displayProperty=fullName&gt;</ph>, which contains support for both security sessions and reliable sessions, by default uses only a secure session which encrypts and digitally signs messages.","pos":[375,614],"source":" For example, the <xref:System.ServiceModel.WSHttpBinding?displayProperty=fullName>, which contains support for both security sessions and reliable sessions, by default uses only a secure session which encrypts and digitally signs messages."}]},{"pos":[2343,2558],"content":"The <xref:System.ServiceModel.NetTcpBinding?displayProperty=fullName> supports the sessions exposed by the TCP/IP connections to ensure that all messages are correlated by the connection session at the socket level.","nodes":[{"content":"The <ph id=\"ph1\">&lt;xref:System.ServiceModel.NetTcpBinding?displayProperty=fullName&gt;</ph> supports the sessions exposed by the TCP/IP connections to ensure that all messages are correlated by the connection session at the socket level.","pos":[0,215],"source":"The <xref:System.ServiceModel.NetTcpBinding?displayProperty=fullName> supports the sessions exposed by the TCP/IP connections to ensure that all messages are correlated by the connection session at the socket level."}]},{"pos":[2568,3017],"content":"The <xref:System.ServiceModel.Channels.ReliableSessionBindingElement?displayProperty=fullName>, which implements the WS-ReliableMessaging specification, provides support for reliable sessions in which messages are delivered in order and exactly once, enabling confidence even when messages travel across multiple nodes during the conversation. For more information, see [Reliable Sessions](~/docs/framework/wcf/feature-details/reliable-sessions.md).","nodes":[{"content":"The <ph id=\"ph1\">&lt;xref:System.ServiceModel.Channels.ReliableSessionBindingElement?displayProperty=fullName&gt;</ph>, which implements the WS-ReliableMessaging specification, provides support for reliable sessions in which messages are delivered in order and exactly once, enabling confidence even when messages travel across multiple nodes during the conversation.","pos":[0,343],"source":"The <xref:System.ServiceModel.Channels.ReliableSessionBindingElement?displayProperty=fullName>, which implements the WS-ReliableMessaging specification, provides support for reliable sessions in which messages are delivered in order and exactly once, enabling confidence even when messages travel across multiple nodes during the conversation."},{"content":"For more information, see <bpt id=\"p1\">[</bpt>Reliable Sessions<ept id=\"p1\">](~/docs/framework/wcf/feature-details/reliable-sessions.md)</ept>.","pos":[344,449],"source":" For more information, see [Reliable Sessions](~/docs/framework/wcf/feature-details/reliable-sessions.md)."}]},{"pos":[3027,3228],"content":"The <xref:System.ServiceModel.NetMsmqBinding?displayProperty=fullName> provides MSMQ datagram sessions. For more information, see [Queues in WCF](~/docs/framework/wcf/feature-details/queues-in-wcf.md).","nodes":[{"content":"The <ph id=\"ph1\">&lt;xref:System.ServiceModel.NetMsmqBinding?displayProperty=fullName&gt;</ph> provides MSMQ datagram sessions.","pos":[0,103],"source":"The <xref:System.ServiceModel.NetMsmqBinding?displayProperty=fullName> provides MSMQ datagram sessions."},{"content":"For more information, see <bpt id=\"p1\">[</bpt>Queues in WCF<ept id=\"p1\">](~/docs/framework/wcf/feature-details/queues-in-wcf.md)</ept>.","pos":[104,201],"source":" For more information, see [Queues in WCF](~/docs/framework/wcf/feature-details/queues-in-wcf.md)."}]},{"pos":[3235,3423],"content":"Remember that setting the <xref:System.ServiceModel.ServiceContractAttribute.SessionMode%2A> property does not specify the type of session the contract requires, only that it requires one.","nodes":[{"content":"Remember that setting the <ph id=\"ph1\">&lt;xref:System.ServiceModel.ServiceContractAttribute.SessionMode%2A&gt;</ph> property does not specify the type of session the contract requires, only that it requires one.","pos":[0,188],"source":"Remember that setting the <xref:System.ServiceModel.ServiceContractAttribute.SessionMode%2A> property does not specify the type of session the contract requires, only that it requires one."}]}],"pos":[35061,38504],"yaml":true,"extradata":"MT"},{"content":"A <xref href=\"System.ServiceModel.SessionMode\"></xref> that indicates whether sessions are allowed, not allowed, or required.","nodes":[{"pos":[0,125],"content":"A <ph id=\"ph1\">&lt;xref href=\"System.ServiceModel.SessionMode\"&gt;&lt;/xref&gt;</ph> that indicates whether sessions are allowed, not allowed, or required.","source":"A <xref href=\"System.ServiceModel.SessionMode\"></xref> that indicates whether sessions are allowed, not allowed, or required."}],"pos":[39044,39170],"yaml":true},{"content":"The value is not one of the <xref href=\"System.ServiceModel.SessionMode\"></xref> values.","nodes":[{"pos":[0,88],"content":"The value is not one of the <ph id=\"ph1\">&lt;xref href=\"System.ServiceModel.SessionMode\"&gt;&lt;/xref&gt;</ph> values.","source":"The value is not one of the <xref href=\"System.ServiceModel.SessionMode\"></xref> values."}],"pos":[39368,39457],"yaml":true}],"content":"### YamlMime:ManagedReference\nitems:\n- uid: System.ServiceModel.ServiceContractAttribute\n  commentId: T:System.ServiceModel.ServiceContractAttribute\n  id: ServiceContractAttribute\n  children:\n  - System.ServiceModel.ServiceContractAttribute.#ctor\n  - System.ServiceModel.ServiceContractAttribute.CallbackContract\n  - System.ServiceModel.ServiceContractAttribute.ConfigurationName\n  - System.ServiceModel.ServiceContractAttribute.HasProtectionLevel\n  - System.ServiceModel.ServiceContractAttribute.Name\n  - System.ServiceModel.ServiceContractAttribute.Namespace\n  - System.ServiceModel.ServiceContractAttribute.ProtectionLevel\n  - System.ServiceModel.ServiceContractAttribute.SessionMode\n  langs:\n  - csharp\n  name: ServiceContractAttribute\n  nameWithType: ServiceContractAttribute\n  fullName: System.ServiceModel.ServiceContractAttribute\n  type: Class\n  assemblies:\n  - System.ServiceModel\n  namespace: System.ServiceModel\n  summary: Indicates that an interface or a class defines a service contract in a Windows Communication Foundation (WCF) application.\n  remarks: \"Use the <xref:System.ServiceModel.ServiceContractAttribute> attribute on an interface (or class) to define a service contract. Then use the <xref:System.ServiceModel.OperationContractAttribute> attribute on one or more of the class (or interface) methods to define the contract's service operations. When the service contract is implemented and combined with a [Bindings](~/docs/framework/wcf/bindings.md) and an <xref:System.ServiceModel.EndpointAddress> object, the service contract is exposed for use by clients. For an overview of the process using simple examples, see [Getting Started Tutorial](~/docs/framework/wcf/getting-started-tutorial.md). For more information about creating service contracts, see [Designing and Implementing Services](~/docs/framework/wcf/designing-and-implementing-services.md).  \\n  \\n The information expressed by a <xref:System.ServiceModel.ServiceContractAttribute> and its interface is loosely related to the Web Services Description Language (WSDL) `<portType>` element. A service contract is used on the service side to specify what the serviceâ€™s endpoint exposes to callers. It is also used on the client side to specify the contract of the endpoint with which the client communicates and, in the case of duplex contracts, to specify the callback contract (using the <xref:System.ServiceModel.ServiceContractAttribute.CallbackContract%2A> property) that the client must implement in order to participate in a duplex conversation.  \\n  \\n> [!NOTE]\\n>  An interface or class that is decorated with <xref:System.ServiceModel.ServiceContractAttribute> must also have at least one method marked with the <xref:System.ServiceModel.OperationContractAttribute> attribute to expose any functionality. See the Examples section for a code example of the simplest use of the two attributes to define and implement a service.  \\n  \\n Use the <xref:System.ServiceModel.ServiceContractAttribute> properties to modify the service contract.  \\n  \\n-   The <xref:System.ServiceModel.ServiceContractAttribute.ConfigurationName%2A> property specifies the name of the service element in the configuration file to use.  \\n  \\n-   The <xref:System.ServiceModel.ServiceContractAttribute.Name%2A> and <xref:System.ServiceModel.ServiceContractAttribute.Namespace%2A> properties control the name and namespace of the contract in the WSDL `<portType>` element.  \\n  \\n-   The <xref:System.ServiceModel.ServiceContractAttribute.SessionMode%2A> property specifies whether the contract requires a binding that supports sessions.  \\n  \\n-   The <xref:System.ServiceModel.ServiceContractAttribute.CallbackContract%2A> property specifies the return contract in a two-way (duplex) conversation.  \\n  \\n-   The <xref:System.ServiceModel.ServiceContractAttribute.HasProtectionLevel%2A> and <xref:System.ServiceModel.ServiceContractAttribute.ProtectionLevel%2A> properties indicate whether all messages supporting the contract have a explicit <xref:System.ServiceModel.ServiceContractAttribute.ProtectionLevel%2A> value, and if so, what that level is.  \\n  \\n Services implement service contracts, which represent the data exchange that a service type supports. A service class can implement a service contract (by implementing an interface marked with <xref:System.ServiceModel.ServiceContractAttribute> that has methods marked with <xref:System.ServiceModel.OperationContractAttribute>) or it can be marked with the <xref:System.ServiceModel.ServiceContractAttribute> and apply the <xref:System.ServiceModel.OperationContractAttribute> attribute to its own methods. (If a class implements an interface marked with <xref:System.ServiceModel.ServiceContractAttribute>, it cannot be itself marked with <xref:System.ServiceModel.ServiceContractAttribute>.) Methods on service types that are marked with the <xref:System.ServiceModel.OperationContractAttribute> are treated as part of a default service contract specified by the service type itself. For details about service operations, see <xref:System.ServiceModel.OperationContractAttribute>.  \\n  \\n By default, the <xref:System.ServiceModel.ServiceContractAttribute.Name%2A> and <xref:System.ServiceModel.ServiceContractAttribute.Namespace%2A> properties are the name of the contract type and `http://tempuri.org`, respectively, and <xref:System.ServiceModel.ServiceContractAttribute.ProtectionLevel%2A> is <xref:System.Net.Security.ProtectionLevel?displayProperty=fullName>. It is recommended that service contracts explicitly set their names, namespaces, and protection levels using these properties. Doing so accomplishes two goals. First, it builds a contract that is not directly connected to the managed type information, enabling you to refactor your managed code and namespaces without breaking the contract as it is expressed in WSDL. Second, explicitly requiring a certain level of protection on the contract itself enables the runtime to validate whether the binding configuration supports that level of security, preventing poor configuration from exposing sensitive information. For more information about protection levels, see [Understanding Protection Level](~/docs/framework/wcf/understanding-protection-level.md).  \\n  \\n To expose a service for use by client applications, create a host application to register your service endpoint with [!INCLUDE[indigo1](~/includes/indigo1-md.md)]. You can host [!INCLUDE[indigo2](~/includes/indigo2-md.md)] services using Windows Activation Services (WAS), in console applications, Windows Service applications, ASP.NET applications, Windows Forms applications, or any other kind of application domain.  \\n  \\n Hosting in the WAS is very similar to creating an ASP.NET application. For details, see [How to: Host a WCF Service in IIS](~/docs/framework/wcf/feature-details/how-to-host-a-wcf-service-in-iis.md).  \\n  \\n Clients either use the service contract interface (the interface marked with <xref:System.ServiceModel.ServiceContractAttribute>) to create a channel to the service or they use the client objects (which combine the type information of the service contract interface with the <xref:System.ServiceModel.ClientBase%601> class) to communicate with your service. For details on client channels to services, see the <xref:System.ServiceModel.ChannelFactory%601> class and [WCF Client Overview](~/docs/framework/wcf/wcf-client-overview.md).  \\n  \\n Using a <xref:System.ServiceModel.ServiceContractAttribute> class or interface to inherit from another <xref:System.ServiceModel.ServiceContractAttribute> class or interface extends the parent contract. For example, if an `IChildContract` interface is marked with <xref:System.ServiceModel.ServiceContractAttribute> and inherited from another service contract interface, `IParentContract`, the `IChildContract` service contract contains the methods of both `IParentContract` and `IChildContract`. Extending contracts (whether on classes or interfaces) is very similar to extending managed classes and interfaces.  \\n  \\n The most flexible approach to creating services is to define service contract interfaces first and then have your service class implement that interface. (This is also the simplest way to build your services if you must implement service contracts that have been defined by others.) Building services directly by marking a class with <xref:System.ServiceModel.ServiceContractAttribute> and its methods with <xref:System.ServiceModel.OperationContractAttribute> works when the service exposes only one contract (but that contract can be exposed by more than one endpoint).  \\n  \\n Use the <xref:System.ServiceModel.ServiceContractAttribute.CallbackContract%2A>property to indicate another service contract that, when bound together with the original service contract, define a message exchange that can flow in two ways independently. For details, see <xref:System.ServiceModel.ServiceContractAttribute.CallbackContract%2A>.\"\n  example:\n  - \"The following code example shows how to apply the <xref:System.ServiceModel.ServiceContractAttribute> to an interface to define a service contract with one service method, indicated by the <xref:System.ServiceModel.OperationContractAttribute>. In this case, the protection level required of bindings for all messages is <xref:System.Net.Security.ProtectionLevel?displayProperty=fullName>.  \\n  \\n The code example then implements that contract on the `SampleService` class.  \\n  \\n [!code-csharp[ServiceContractAttribute#1](~/samples/snippets/csharp/VS_Snippets_CFX/servicecontractattribute/cs/services.cs#1)]\\n [!code-vb[ServiceContractAttribute#1](~/samples/snippets/visualbasic/VS_Snippets_CFX/servicecontractattribute/vb/services.vb#1)]  \\n  \\n The following code example shows a simple configuration file for the preceding service that creates one endpoint.  \\n  \\n [!code-xml[ServiceContractAttribute#2](~/samples/snippets/csharp/VS_Snippets_CFX/servicecontractattribute/cs/hostapplication.exe.config#2)]   \\n  \\n The following code example shows a simple client that invokes the preceding `SampleService`.  \\n  \\n [!code-csharp[ServiceContractAttribute#3](~/samples/snippets/csharp/VS_Snippets_CFX/servicecontractattribute/cs/client.cs#3)]\\n [!code-vb[ServiceContractAttribute#3](~/samples/snippets/visualbasic/VS_Snippets_CFX/servicecontractattribute/vb/client.vb#3)]\"\n  syntax:\n    content: >-\n      [System.AttributeUsage(System.AttributeTargets.Class | System.AttributeTargets.Interface, Inherited=false)]\n\n      public sealed class ServiceContractAttribute : Attribute\n  inheritance:\n  - System.Object\n  - System.Attribute\n  implements: []\n  inheritedMembers:\n  - System.Attribute.Equals(System.Object)\n  - System.Attribute.GetCustomAttribute(System.Reflection.Assembly,System.Type)\n  - System.Attribute.GetCustomAttribute(System.Reflection.Assembly,System.Type,System.Boolean)\n  - System.Attribute.GetCustomAttribute(System.Reflection.MemberInfo,System.Type)\n  - System.Attribute.GetCustomAttribute(System.Reflection.MemberInfo,System.Type,System.Boolean)\n  - System.Attribute.GetCustomAttribute(System.Reflection.Module,System.Type)\n  - System.Attribute.GetCustomAttribute(System.Reflection.Module,System.Type,System.Boolean)\n  - System.Attribute.GetCustomAttribute(System.Reflection.ParameterInfo,System.Type)\n  - System.Attribute.GetCustomAttribute(System.Reflection.ParameterInfo,System.Type,System.Boolean)\n  - System.Attribute.GetCustomAttributes(System.Reflection.Assembly)\n  - System.Attribute.GetCustomAttributes(System.Reflection.Assembly,System.Boolean)\n  - System.Attribute.GetCustomAttributes(System.Reflection.Assembly,System.Type)\n  - System.Attribute.GetCustomAttributes(System.Reflection.Assembly,System.Type,System.Boolean)\n  - System.Attribute.GetCustomAttributes(System.Reflection.MemberInfo)\n  - System.Attribute.GetCustomAttributes(System.Reflection.MemberInfo,System.Boolean)\n  - System.Attribute.GetCustomAttributes(System.Reflection.MemberInfo,System.Type)\n  - System.Attribute.GetCustomAttributes(System.Reflection.MemberInfo,System.Type,System.Boolean)\n  - System.Attribute.GetCustomAttributes(System.Reflection.Module)\n  - System.Attribute.GetCustomAttributes(System.Reflection.Module,System.Boolean)\n  - System.Attribute.GetCustomAttributes(System.Reflection.Module,System.Type)\n  - System.Attribute.GetCustomAttributes(System.Reflection.Module,System.Type,System.Boolean)\n  - System.Attribute.GetCustomAttributes(System.Reflection.ParameterInfo)\n  - System.Attribute.GetCustomAttributes(System.Reflection.ParameterInfo,System.Boolean)\n  - System.Attribute.GetCustomAttributes(System.Reflection.ParameterInfo,System.Type)\n  - System.Attribute.GetCustomAttributes(System.Reflection.ParameterInfo,System.Type,System.Boolean)\n  - System.Attribute.GetHashCode\n  - System.Attribute.IsDefaultAttribute\n  - System.Attribute.IsDefined(System.Reflection.Assembly,System.Type)\n  - System.Attribute.IsDefined(System.Reflection.Assembly,System.Type,System.Boolean)\n  - System.Attribute.IsDefined(System.Reflection.MemberInfo,System.Type)\n  - System.Attribute.IsDefined(System.Reflection.MemberInfo,System.Type,System.Boolean)\n  - System.Attribute.IsDefined(System.Reflection.Module,System.Type)\n  - System.Attribute.IsDefined(System.Reflection.Module,System.Type,System.Boolean)\n  - System.Attribute.IsDefined(System.Reflection.ParameterInfo,System.Type)\n  - System.Attribute.IsDefined(System.Reflection.ParameterInfo,System.Type,System.Boolean)\n  - System.Attribute.Match(System.Object)\n  - System.Attribute.System#Runtime#InteropServices#_Attribute#GetIDsOfNames(System.Guid@,System.IntPtr,System.UInt32,System.UInt32,System.IntPtr)\n  - System.Attribute.System#Runtime#InteropServices#_Attribute#GetTypeInfo(System.UInt32,System.UInt32,System.IntPtr)\n  - System.Attribute.System#Runtime#InteropServices#_Attribute#GetTypeInfoCount(System.UInt32@)\n  - System.Attribute.System#Runtime#InteropServices#_Attribute#Invoke(System.UInt32,System.Guid@,System.UInt32,System.Int16,System.IntPtr,System.IntPtr,System.IntPtr,System.IntPtr)\n  - System.Attribute.TypeId\n  - System.Object.Equals(System.Object,System.Object)\n  - System.Object.GetType\n  - System.Object.MemberwiseClone\n  - System.Object.ReferenceEquals(System.Object,System.Object)\n  - System.Object.ToString\n  attributes:\n  - type: System.AttributeUsageAttribute\n  version:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.ServiceModel/ServiceContractAttribute.xml\n  ms.technology:\n  - dotnet-standard\n  author: Erikre\n  ms.author: erikre\n  manager: erikre\n- uid: System.ServiceModel.ServiceContractAttribute.#ctor\n  commentId: M:System.ServiceModel.ServiceContractAttribute.#ctor\n  id: '#ctor'\n  parent: System.ServiceModel.ServiceContractAttribute\n  langs:\n  - csharp\n  name: ServiceContractAttribute()\n  nameWithType: ServiceContractAttribute.ServiceContractAttribute()\n  fullName: ServiceContractAttribute.ServiceContractAttribute()\n  type: Constructor\n  assemblies:\n  - System.ServiceModel\n  namespace: System.ServiceModel\n  summary: Initializes a new instance of the <xref href=\"System.ServiceModel.ServiceContractAttribute\"></xref> class.\n  remarks: The constructor creates an instance of the attribute with no session requirements, no callback contract, and the default name and namespace.\n  syntax:\n    content: public ServiceContractAttribute ();\n    parameters: []\n  overload: System.ServiceModel.ServiceContractAttribute.#ctor*\n  exceptions: []\n  version:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.ServiceModel/ServiceContractAttribute.xml\n  ms.technology:\n  - dotnet-standard\n  author: Erikre\n  ms.author: erikre\n  manager: erikre\n- uid: System.ServiceModel.ServiceContractAttribute.CallbackContract\n  commentId: P:System.ServiceModel.ServiceContractAttribute.CallbackContract\n  id: CallbackContract\n  parent: System.ServiceModel.ServiceContractAttribute\n  langs:\n  - csharp\n  name: CallbackContract\n  nameWithType: ServiceContractAttribute.CallbackContract\n  fullName: ServiceContractAttribute.CallbackContract\n  type: Property\n  assemblies:\n  - System.ServiceModel\n  namespace: System.ServiceModel\n  summary: Gets or sets the type of callback contract when the contract is a duplex contract.\n  remarks: \"Specify an interface in the <xref:System.ServiceModel.ServiceContractAttribute.CallbackContract%2A> property that represents the required opposite contract in a two-way (or duplex) message exchange. This enables client applications to listen for inbound operation calls that the server-side service application can send independently of client activity. Callback contracts that have one-way operations represent calls from the service that the client can handle.  \\n  \\n> [!NOTE]\\n>  The <xref:System.ServiceModel.ServiceContractAttribute> attribute is ignored on callback contracts. To configure runtime behavior of callback objects, use the <xref:System.ServiceModel.CallbackBehaviorAttribute?displayProperty=fullName>.\"\n  example:\n  - \"The following code example shows a service that specifies a callback contract, which indicates that a service of type `IDuplexHello` must have a correspondent that implements a service of type `IHelloCallbackContract`. In addition, `IHelloCallbackContract` implements a one-way callback method, enabling the service to call the client without waiting for a reply to support a distributed, event-driven client.  \\n  \\n [!code-csharp[SCA.CallbackContract#1](~/samples/snippets/csharp/VS_Snippets_CFX/sca.callbackcontract/cs/services.cs#1)]\\n [!code-vb[SCA.CallbackContract#1](~/samples/snippets/visualbasic/VS_Snippets_CFX/sca.callbackcontract/vb/services.vb#1)]\"\n  syntax:\n    content: public Type CallbackContract { get; set; }\n    return:\n      type: System.Type\n      description: A <xref href=\"System.Type\"></xref> that indicates the callback contract. The default is `null`.\n  overload: System.ServiceModel.ServiceContractAttribute.CallbackContract*\n  exceptions: []\n  version:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.ServiceModel/ServiceContractAttribute.xml\n  ms.technology:\n  - dotnet-standard\n  author: Erikre\n  ms.author: erikre\n  manager: erikre\n- uid: System.ServiceModel.ServiceContractAttribute.ConfigurationName\n  commentId: P:System.ServiceModel.ServiceContractAttribute.ConfigurationName\n  id: ConfigurationName\n  parent: System.ServiceModel.ServiceContractAttribute\n  langs:\n  - csharp\n  name: ConfigurationName\n  nameWithType: ServiceContractAttribute.ConfigurationName\n  fullName: ServiceContractAttribute.ConfigurationName\n  type: Property\n  assemblies:\n  - System.ServiceModel\n  namespace: System.ServiceModel\n  summary: Gets or sets the name used to locate the service in an application configuration file.\n  remarks: To set the value by which the configuration system locates a contract value in the configuration file, see <xref:System.ServiceModel.ServiceBehaviorAttribute.ConfigurationName%2A>.\n  syntax:\n    content: public string ConfigurationName { get; set; }\n    return:\n      type: System.String\n      description: The name used to locate the service element in an application configuration file. The default is the name of the service implementation class.\n  overload: System.ServiceModel.ServiceContractAttribute.ConfigurationName*\n  exceptions:\n  - type: System.ArgumentNullException\n    commentId: T:System.ArgumentNullException\n    description: The value is null.\n  - type: System.ArgumentOutOfRangeException\n    commentId: T:System.ArgumentOutOfRangeException\n    description: The value is an empty string.\n  version:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.ServiceModel/ServiceContractAttribute.xml\n  ms.technology:\n  - dotnet-standard\n  author: Erikre\n  ms.author: erikre\n  manager: erikre\n- uid: System.ServiceModel.ServiceContractAttribute.HasProtectionLevel\n  commentId: P:System.ServiceModel.ServiceContractAttribute.HasProtectionLevel\n  id: HasProtectionLevel\n  parent: System.ServiceModel.ServiceContractAttribute\n  langs:\n  - csharp\n  name: HasProtectionLevel\n  nameWithType: ServiceContractAttribute.HasProtectionLevel\n  fullName: ServiceContractAttribute.HasProtectionLevel\n  type: Property\n  assemblies:\n  - System.ServiceModel\n  namespace: System.ServiceModel\n  summary: Gets a value that indicates whether the member has a protection level assigned.\n  remarks: The <xref:System.ServiceModel.ServiceContractAttribute.HasProtectionLevel%2A> property indicates whether a protection level value other than `false` has been set for the contract.\n  syntax:\n    content: public bool HasProtectionLevel { get; }\n    return:\n      type: System.Boolean\n      description: '`true` if the <xref href=\"System.ServiceModel.ServiceContractAttribute.ProtectionLevel\"></xref> property is not <xref href=\"System.Net.Security.ProtectionLevel.None\"></xref>; otherwise, `false`. The default is `false`.'\n  overload: System.ServiceModel.ServiceContractAttribute.HasProtectionLevel*\n  exceptions: []\n  version:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.ServiceModel/ServiceContractAttribute.xml\n  ms.technology:\n  - dotnet-standard\n  author: Erikre\n  ms.author: erikre\n  manager: erikre\n- uid: System.ServiceModel.ServiceContractAttribute.Name\n  commentId: P:System.ServiceModel.ServiceContractAttribute.Name\n  id: Name\n  parent: System.ServiceModel.ServiceContractAttribute\n  langs:\n  - csharp\n  name: Name\n  nameWithType: ServiceContractAttribute.Name\n  fullName: ServiceContractAttribute.Name\n  type: Property\n  assemblies:\n  - System.ServiceModel\n  namespace: System.ServiceModel\n  summary: Gets or sets the name for the `<portType>` element in Web Services Description Language (WSDL).\n  remarks: Use the <xref:System.ServiceModel.ServiceContractAttribute.Name%2A> and the <xref:System.ServiceModel.ServiceContractAttribute.Namespace%2A> properties to control the name and namespace of the `<portType>` element in WSDL.\n  example:\n  - \"The following code example shows how to use the <xref:System.ServiceModel.ServiceContractAttribute.Name%2A> and <xref:System.ServiceModel.ServiceContractAttribute.Namespace%2A> properties of the <xref:System.ServiceModel.ServiceContractAttribute> to set the corresponding values in WSDL.  \\n  \\n [!code-csharp[SCA.Names#1](~/samples/snippets/csharp/VS_Snippets_CFX/sca.names/cs/services.cs#1)]\\n [!code-vb[SCA.Names#1](~/samples/snippets/visualbasic/VS_Snippets_CFX/sca.names/vb/services.vb#1)]  \\n  \\n The following code example shows an [!INCLUDE[indigo1](~/includes/indigo1-md.md)] client for the preceding service that imported WSDL using the [ServiceModel Metadata Utility Tool (Svcutil.exe)](~/docs/framework/wcf/servicemodel-metadata-utility-tool-svcutil-exe.md). This client uses a `HelloWorldProxy` client rather than a `SampleServiceProxy` client (as is the case with the sample in the Example section of <xref:System.ServiceModel.ServiceContractAttribute>).  \\n  \\n [!code-csharp[SCA.Names#3](~/samples/snippets/csharp/VS_Snippets_CFX/sca.names/cs/client.cs#3)]\\n [!code-vb[SCA.Names#3](~/samples/snippets/visualbasic/VS_Snippets_CFX/sca.names/vb/client.vb#3)]\"\n  syntax:\n    content: public string Name { get; set; }\n    return:\n      type: System.String\n      description: The default value is the name of the class or interface to which the <xref href=\"System.ServiceModel.ServiceContractAttribute\"></xref> is applied.\n  overload: System.ServiceModel.ServiceContractAttribute.Name*\n  exceptions:\n  - type: System.ArgumentNullException\n    commentId: T:System.ArgumentNullException\n    description: The value is null.\n  - type: System.ArgumentOutOfRangeException\n    commentId: T:System.ArgumentOutOfRangeException\n    description: The value is an empty string.\n  version:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.ServiceModel/ServiceContractAttribute.xml\n  ms.technology:\n  - dotnet-standard\n  author: Erikre\n  ms.author: erikre\n  manager: erikre\n- uid: System.ServiceModel.ServiceContractAttribute.Namespace\n  commentId: P:System.ServiceModel.ServiceContractAttribute.Namespace\n  id: Namespace\n  parent: System.ServiceModel.ServiceContractAttribute\n  langs:\n  - csharp\n  name: Namespace\n  nameWithType: ServiceContractAttribute.Namespace\n  fullName: ServiceContractAttribute.Namespace\n  type: Property\n  assemblies:\n  - System.ServiceModel\n  namespace: System.ServiceModel\n  summary: Gets or sets the namespace of the `<portType>` element in Web Services Description Language (WSDL).\n  remarks: ''\n  example:\n  - \"The following code example shows how to use the <xref:System.ServiceModel.ServiceContractAttribute.Name%2A> and <xref:System.ServiceModel.ServiceContractAttribute.Namespace%2A> properties of the <xref:System.ServiceModel.ServiceContractAttribute> to set the corresponding values in WSDL.  \\n  \\n [!code-csharp[SCA.Names#1](~/samples/snippets/csharp/VS_Snippets_CFX/sca.names/cs/services.cs#1)]\\n [!code-vb[SCA.Names#1](~/samples/snippets/visualbasic/VS_Snippets_CFX/sca.names/vb/services.vb#1)]  \\n  \\n The following code example shows an [!INCLUDE[indigo1](~/includes/indigo1-md.md)] client for the preceding service that imported WSDL using the [ServiceModel Metadata Utility Tool (Svcutil.exe)](~/docs/framework/wcf/servicemodel-metadata-utility-tool-svcutil-exe.md). This client uses a `HelloWorldClient` client rather than a `SampleServiceClient` client (as is the case with the sample in the Example section of <xref:System.ServiceModel.ServiceContractAttribute>).  \\n  \\n [!code-csharp[SCA.Names#3](~/samples/snippets/csharp/VS_Snippets_CFX/sca.names/cs/client.cs#3)]\\n [!code-vb[SCA.Names#3](~/samples/snippets/visualbasic/VS_Snippets_CFX/sca.names/vb/client.vb#3)]\"\n  syntax:\n    content: public string Namespace { get; set; }\n    return:\n      type: System.String\n      description: The WSDL namespace of the `<portType>` element. The default value is \"http://tempuri.org\".\n  overload: System.ServiceModel.ServiceContractAttribute.Namespace*\n  exceptions: []\n  version:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.ServiceModel/ServiceContractAttribute.xml\n  ms.technology:\n  - dotnet-standard\n  author: Erikre\n  ms.author: erikre\n  manager: erikre\n- uid: System.ServiceModel.ServiceContractAttribute.ProtectionLevel\n  commentId: P:System.ServiceModel.ServiceContractAttribute.ProtectionLevel\n  id: ProtectionLevel\n  parent: System.ServiceModel.ServiceContractAttribute\n  langs:\n  - csharp\n  name: ProtectionLevel\n  nameWithType: ServiceContractAttribute.ProtectionLevel\n  fullName: ServiceContractAttribute.ProtectionLevel\n  type: Property\n  assemblies:\n  - System.ServiceModel\n  namespace: System.ServiceModel\n  summary: Specifies whether the binding for the contract must support the value of the <xref href=\"System.ServiceModel.ServiceContractAttribute.ProtectionLevel\"></xref> property.\n  remarks: \"Use the <xref:System.ServiceModel.ServiceContractAttribute.ProtectionLevel%2A> property to specify the degree to which the contract binding requires encryption, digital signatures, or both for endpoints that expose the contract. The value set here is the default value for all operation messages including faults.  \\n  \\n It is important to remember that the protection behavior at runtime is the combination of the protection-level values set on the following properties. These properties have a hierarchical structure. Setting the outermost value establishes the default setting for all narrower scopes unless a different value for a narrower scope is explicitly set. In this case, the outer value remains the default for all narrower scopes with the exception of that specifically set.  \\n  \\n For example, if <xref:System.ServiceModel.ServiceContractAttribute.ProtectionLevel%2A?displayProperty=fullName> is set to <xref:System.Net.Security.ProtectionLevel?displayProperty=fullName> and no other narrower scopes have protection level settings, all messages in an operation contract are encrypted and signed. If, however, one of those operations has the <xref:System.ServiceModel.OperationContractAttribute> set to <xref:System.Net.Security.ProtectionLevel?displayProperty=fullName>, then the messages for that operation are signed but all other messages in the contract are encrypted and signed.  \\n  \\n For details about protection levels and their assumptions and scopes, see [Understanding Protection Level](~/docs/framework/wcf/understanding-protection-level.md).  \\n  \\n The scopes at which these values are set are:  \\n  \\n <xref:System.ServiceModel.ServiceContractAttribute.ProtectionLevel%2A?displayProperty=fullName>  \\n  \\n <xref:System.ServiceModel.OperationContractAttribute.ProtectionLevel%2A?displayProperty=fullName>  \\n  \\n <xref:System.ServiceModel.FaultContractAttribute.ProtectionLevel%2A?displayProperty=fullName>  \\n  \\n <xref:System.ServiceModel.MessageContractAttribute.ProtectionLevel%2A?displayProperty=fullName>  \\n  \\n The <xref:System.ServiceModel.MessageContractMemberAttribute.ProtectionLevel%2A?displayProperty=fullName> property on <xref:System.ServiceModel.MessageHeaderAttribute?displayProperty=fullName>.  \\n  \\n The <xref:System.ServiceModel.MessageContractMemberAttribute.ProtectionLevel%2A?displayProperty=fullName> property on <xref:System.ServiceModel.MessageBodyMemberAttribute?displayProperty=fullName>.  \\n  \\n When there is no protection level explicitly specified on the contract and the underlying binding supports security (whether at the transport or message level), the effective protection level for the whole contract is <xref:System.Net.Security.ProtectionLevel?displayProperty=fullName>. If the binding does not support security (such as <xref:System.ServiceModel.BasicHttpBinding>), the effective <xref:System.Net.Security.ProtectionLevel?displayProperty=fullName> is <xref:System.Net.Security.ProtectionLevel?displayProperty=fullName> for the whole contract. The result is that depending upon the endpoint binding, clients can require different message or transport level security protection even when the contract specifies <xref:System.Net.Security.ProtectionLevel?displayProperty=fullName>.\"\n  syntax:\n    content: public System.Net.Security.ProtectionLevel ProtectionLevel { get; set; }\n    return:\n      type: System.Net.Security.ProtectionLevel\n      description: One of the <xref href=\"System.Net.Security.ProtectionLevel\"></xref> values. The default is <xref href=\"System.Net.Security.ProtectionLevel.None\"></xref>.\n  overload: System.ServiceModel.ServiceContractAttribute.ProtectionLevel*\n  exceptions:\n  - type: System.ArgumentOutOfRangeException\n    commentId: T:System.ArgumentOutOfRangeException\n    description: The value is not one of the <xref href=\"System.Net.Security.ProtectionLevel\"></xref> values.\n  version:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.ServiceModel/ServiceContractAttribute.xml\n  ms.technology:\n  - dotnet-standard\n  author: Erikre\n  ms.author: erikre\n  manager: erikre\n- uid: System.ServiceModel.ServiceContractAttribute.SessionMode\n  commentId: P:System.ServiceModel.ServiceContractAttribute.SessionMode\n  id: SessionMode\n  parent: System.ServiceModel.ServiceContractAttribute\n  langs:\n  - csharp\n  name: SessionMode\n  nameWithType: ServiceContractAttribute.SessionMode\n  fullName: ServiceContractAttribute.SessionMode\n  type: Property\n  assemblies:\n  - System.ServiceModel\n  namespace: System.ServiceModel\n  summary: Gets or sets whether sessions are allowed, not allowed or required.\n  remarks: \"Use the <xref:System.ServiceModel.ServiceContractAttribute.SessionMode%2A> property to require bindings that support sessions between endpoints. A session is a way of correlating a set of messages exchanged between two or more endpoints. If your service supports channel sessions, you can then use the <xref:System.ServiceModel.ServiceBehaviorAttribute.InstanceContextMode%2A> property to specify the relationship between instances your service contract implementation and the channel session. If a binding does not support sessions, an exception is thrown.  \\n  \\n For example, if the <xref:System.ServiceModel.ServiceContractAttribute.SessionMode%2A> property is set to <xref:System.ServiceModel.SessionMode?displayProperty=fullName> and the <xref:System.ServiceModel.ServiceBehaviorAttribute.InstanceContextMode%2A> property is set to <xref:System.ServiceModel.InstanceContextMode.PerSession>, clients can use the same connection to make repeated calls to the same service object.  \\n  \\n For more information about sessions and service instances, see [Using Sessions](~/docs/framework/wcf/using-sessions.md) and [Sessions, Instancing, and Concurrency](~/docs/framework/wcf/feature-details/sessions-instancing-and-concurrency.md).  \\n  \\n> [!NOTE]\\n>  A channel that supports sessions supports the default association of a service instance with a particular session. However, different session implementations support different features in addition to session-based instancing control. [!INCLUDE[indigo2](~/includes/indigo2-md.md)] provides four types of sessions that you can use to provide sessionful application behavior; each type of session provides additional behavior specific to the type of session it is.  \\n  \\n1.  The <xref:System.ServiceModel.Channels.SecurityBindingElement?displayProperty=fullName> supports security sessions, in which both ends of communication have agreed upon an encryption and/or digital signature process; all messages are correlated with that specific secure conversation. For more information, see [Securing Services](~/docs/framework/wcf/securing-services.md). For example, the <xref:System.ServiceModel.WSHttpBinding?displayProperty=fullName>, which contains support for both security sessions and reliable sessions, by default uses only a secure session which encrypts and digitally signs messages.  \\n  \\n2.  The <xref:System.ServiceModel.NetTcpBinding?displayProperty=fullName> supports the sessions exposed by the TCP/IP connections to ensure that all messages are correlated by the connection session at the socket level.  \\n  \\n3.  The <xref:System.ServiceModel.Channels.ReliableSessionBindingElement?displayProperty=fullName>, which implements the WS-ReliableMessaging specification, provides support for reliable sessions in which messages are delivered in order and exactly once, enabling confidence even when messages travel across multiple nodes during the conversation. For more information, see [Reliable Sessions](~/docs/framework/wcf/feature-details/reliable-sessions.md).  \\n  \\n4.  The <xref:System.ServiceModel.NetMsmqBinding?displayProperty=fullName> provides MSMQ datagram sessions. For more information, see [Queues in WCF](~/docs/framework/wcf/feature-details/queues-in-wcf.md).  \\n  \\n Remember that setting the <xref:System.ServiceModel.ServiceContractAttribute.SessionMode%2A> property does not specify the type of session the contract requires, only that it requires one.\"\n  example:\n  - \"The following service contract requires that configured bindings use sessions when interacting with `SampleDuplexHello` service implementations.  \\n  \\n [!code-csharp[SCA.Session#1](~/samples/snippets/csharp/VS_Snippets_CFX/sca.session/cs/services.cs#1)]\\n [!code-vb[SCA.Session#1](~/samples/snippets/visualbasic/VS_Snippets_CFX/sca.session/vb/services.vb#1)]\"\n  syntax:\n    content: public System.ServiceModel.SessionMode SessionMode { get; set; }\n    return:\n      type: System.ServiceModel.SessionMode\n      description: A <xref href=\"System.ServiceModel.SessionMode\"></xref> that indicates whether sessions are allowed, not allowed, or required.\n  overload: System.ServiceModel.ServiceContractAttribute.SessionMode*\n  exceptions:\n  - type: System.ArgumentOutOfRangeException\n    commentId: T:System.ArgumentOutOfRangeException\n    description: The value is not one of the <xref href=\"System.ServiceModel.SessionMode\"></xref> values.\n  version:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.ServiceModel/ServiceContractAttribute.xml\n  ms.technology:\n  - dotnet-standard\n  author: Erikre\n  ms.author: erikre\n  manager: erikre\nreferences:\n- uid: System.Attribute\n  parent: System\n  isExternal: false\n  name: Attribute\n  nameWithType: Attribute\n  fullName: System.Attribute\n- uid: System.ArgumentNullException\n  parent: System\n  isExternal: false\n  name: ArgumentNullException\n  nameWithType: ArgumentNullException\n  fullName: System.ArgumentNullException\n- uid: System.ArgumentOutOfRangeException\n  parent: System\n  isExternal: false\n  name: ArgumentOutOfRangeException\n  nameWithType: ArgumentOutOfRangeException\n  fullName: System.ArgumentOutOfRangeException\n- uid: System.ServiceModel.ServiceContractAttribute.#ctor\n  parent: System.ServiceModel.ServiceContractAttribute\n  isExternal: false\n  name: ServiceContractAttribute()\n  nameWithType: ServiceContractAttribute.ServiceContractAttribute()\n  fullName: ServiceContractAttribute.ServiceContractAttribute()\n- uid: System.ServiceModel.ServiceContractAttribute.CallbackContract\n  parent: System.ServiceModel.ServiceContractAttribute\n  isExternal: false\n  name: CallbackContract\n  nameWithType: ServiceContractAttribute.CallbackContract\n  fullName: ServiceContractAttribute.CallbackContract\n- uid: System.Type\n  parent: System\n  isExternal: false\n  name: Type\n  nameWithType: Type\n  fullName: System.Type\n- uid: System.ServiceModel.ServiceContractAttribute.ConfigurationName\n  parent: System.ServiceModel.ServiceContractAttribute\n  isExternal: false\n  name: ConfigurationName\n  nameWithType: ServiceContractAttribute.ConfigurationName\n  fullName: ServiceContractAttribute.ConfigurationName\n- uid: System.String\n  parent: System\n  isExternal: false\n  name: String\n  nameWithType: String\n  fullName: System.String\n- uid: System.ServiceModel.ServiceContractAttribute.HasProtectionLevel\n  parent: System.ServiceModel.ServiceContractAttribute\n  isExternal: false\n  name: HasProtectionLevel\n  nameWithType: ServiceContractAttribute.HasProtectionLevel\n  fullName: ServiceContractAttribute.HasProtectionLevel\n- uid: System.Boolean\n  parent: System\n  isExternal: false\n  name: Boolean\n  nameWithType: Boolean\n  fullName: System.Boolean\n- uid: System.ServiceModel.ServiceContractAttribute.Name\n  parent: System.ServiceModel.ServiceContractAttribute\n  isExternal: false\n  name: Name\n  nameWithType: ServiceContractAttribute.Name\n  fullName: ServiceContractAttribute.Name\n- uid: System.ServiceModel.ServiceContractAttribute.Namespace\n  parent: System.ServiceModel.ServiceContractAttribute\n  isExternal: false\n  name: Namespace\n  nameWithType: ServiceContractAttribute.Namespace\n  fullName: ServiceContractAttribute.Namespace\n- uid: System.ServiceModel.ServiceContractAttribute.ProtectionLevel\n  parent: System.ServiceModel.ServiceContractAttribute\n  isExternal: false\n  name: ProtectionLevel\n  nameWithType: ServiceContractAttribute.ProtectionLevel\n  fullName: ServiceContractAttribute.ProtectionLevel\n- uid: System.Net.Security.ProtectionLevel\n  parent: System.Net.Security\n  isExternal: false\n  name: ProtectionLevel\n  nameWithType: ProtectionLevel\n  fullName: System.Net.Security.ProtectionLevel\n- uid: System.ServiceModel.ServiceContractAttribute.SessionMode\n  parent: System.ServiceModel.ServiceContractAttribute\n  isExternal: false\n  name: SessionMode\n  nameWithType: ServiceContractAttribute.SessionMode\n  fullName: ServiceContractAttribute.SessionMode\n- uid: System.ServiceModel.SessionMode\n  parent: System.ServiceModel\n  isExternal: false\n  name: SessionMode\n  nameWithType: SessionMode\n  fullName: System.ServiceModel.SessionMode\n- uid: System.ServiceModel.ServiceContractAttribute.#ctor*\n  parent: System.ServiceModel.ServiceContractAttribute\n  isExternal: false\n  name: ServiceContractAttribute\n  nameWithType: ServiceContractAttribute.ServiceContractAttribute\n  fullName: ServiceContractAttribute.ServiceContractAttribute\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.ServiceModel/ServiceContractAttribute.xml\n- uid: System.ServiceModel.ServiceContractAttribute.CallbackContract*\n  parent: System.ServiceModel.ServiceContractAttribute\n  isExternal: false\n  name: CallbackContract\n  nameWithType: ServiceContractAttribute.CallbackContract\n  fullName: ServiceContractAttribute.CallbackContract\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.ServiceModel/ServiceContractAttribute.xml\n- uid: System.ServiceModel.ServiceContractAttribute.ConfigurationName*\n  parent: System.ServiceModel.ServiceContractAttribute\n  isExternal: false\n  name: ConfigurationName\n  nameWithType: ServiceContractAttribute.ConfigurationName\n  fullName: ServiceContractAttribute.ConfigurationName\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.ServiceModel/ServiceContractAttribute.xml\n- uid: System.ServiceModel.ServiceContractAttribute.HasProtectionLevel*\n  parent: System.ServiceModel.ServiceContractAttribute\n  isExternal: false\n  name: HasProtectionLevel\n  nameWithType: ServiceContractAttribute.HasProtectionLevel\n  fullName: ServiceContractAttribute.HasProtectionLevel\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.ServiceModel/ServiceContractAttribute.xml\n- uid: System.ServiceModel.ServiceContractAttribute.Name*\n  parent: System.ServiceModel.ServiceContractAttribute\n  isExternal: false\n  name: Name\n  nameWithType: ServiceContractAttribute.Name\n  fullName: ServiceContractAttribute.Name\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.ServiceModel/ServiceContractAttribute.xml\n- uid: System.ServiceModel.ServiceContractAttribute.Namespace*\n  parent: System.ServiceModel.ServiceContractAttribute\n  isExternal: false\n  name: Namespace\n  nameWithType: ServiceContractAttribute.Namespace\n  fullName: ServiceContractAttribute.Namespace\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.ServiceModel/ServiceContractAttribute.xml\n- uid: System.ServiceModel.ServiceContractAttribute.ProtectionLevel*\n  parent: System.ServiceModel.ServiceContractAttribute\n  isExternal: false\n  name: ProtectionLevel\n  nameWithType: ServiceContractAttribute.ProtectionLevel\n  fullName: ServiceContractAttribute.ProtectionLevel\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.ServiceModel/ServiceContractAttribute.xml\n- uid: System.ServiceModel.ServiceContractAttribute.SessionMode*\n  parent: System.ServiceModel.ServiceContractAttribute\n  isExternal: false\n  name: SessionMode\n  nameWithType: ServiceContractAttribute.SessionMode\n  fullName: ServiceContractAttribute.SessionMode\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.ServiceModel/ServiceContractAttribute.xml\n- uid: System.Attribute.Equals(System.Object)\n  parent: System.Attribute\n  isExternal: false\n  name: Equals(Object)\n  nameWithType: Attribute.Equals(Object)\n  fullName: Attribute.Equals(Object)\n- uid: System.Object.Equals(System.Object,System.Object)\n  parent: System.Object\n  isExternal: false\n  name: Equals(Object, Object)\n  nameWithType: Object.Equals(Object, Object)\n  fullName: Object.Equals(Object, Object)\n- uid: System.Attribute.GetHashCode\n  parent: System.Attribute\n  isExternal: false\n  name: GetHashCode()\n  nameWithType: Attribute.GetHashCode()\n  fullName: Attribute.GetHashCode()\n- uid: System.Object.GetType\n  parent: System.Object\n  isExternal: false\n  name: GetType()\n  nameWithType: Object.GetType()\n  fullName: Object.GetType()\n- uid: System.Object.MemberwiseClone\n  parent: System.Object\n  isExternal: false\n  name: MemberwiseClone()\n  nameWithType: Object.MemberwiseClone()\n  fullName: Object.MemberwiseClone()\n- uid: System.Object.ReferenceEquals(System.Object,System.Object)\n  parent: System.Object\n  isExternal: false\n  name: ReferenceEquals(Object, Object)\n  nameWithType: Object.ReferenceEquals(Object, Object)\n  fullName: Object.ReferenceEquals(Object, Object)\n- uid: System.Object.ToString\n  parent: System.Object\n  isExternal: false\n  name: ToString()\n  nameWithType: Object.ToString()\n  fullName: Object.ToString()\n- uid: System.Attribute.GetCustomAttribute(System.Reflection.ParameterInfo,System.Type,System.Boolean)\n  parent: System.Attribute\n  isExternal: false\n  name: GetCustomAttribute(ParameterInfo, Type, Boolean)\n  nameWithType: Attribute.GetCustomAttribute(ParameterInfo, Type, Boolean)\n  fullName: Attribute.GetCustomAttribute(ParameterInfo, Type, Boolean)\n- uid: System.Attribute.GetCustomAttribute(System.Reflection.MemberInfo,System.Type,System.Boolean)\n  parent: System.Attribute\n  isExternal: false\n  name: GetCustomAttribute(MemberInfo, Type, Boolean)\n  nameWithType: Attribute.GetCustomAttribute(MemberInfo, Type, Boolean)\n  fullName: Attribute.GetCustomAttribute(MemberInfo, Type, Boolean)\n- uid: System.Attribute.GetCustomAttribute(System.Reflection.Assembly,System.Type,System.Boolean)\n  parent: System.Attribute\n  isExternal: false\n  name: GetCustomAttribute(Assembly, Type, Boolean)\n  nameWithType: Attribute.GetCustomAttribute(Assembly, Type, Boolean)\n  fullName: Attribute.GetCustomAttribute(Assembly, Type, Boolean)\n- uid: System.Attribute.GetCustomAttribute(System.Reflection.Module,System.Type,System.Boolean)\n  parent: System.Attribute\n  isExternal: false\n  name: GetCustomAttribute(Module, Type, Boolean)\n  nameWithType: Attribute.GetCustomAttribute(Module, Type, Boolean)\n  fullName: Attribute.GetCustomAttribute(Module, Type, Boolean)\n- uid: System.Attribute.GetCustomAttribute(System.Reflection.Module,System.Type)\n  parent: System.Attribute\n  isExternal: false\n  name: GetCustomAttribute(Module, Type)\n  nameWithType: Attribute.GetCustomAttribute(Module, Type)\n  fullName: Attribute.GetCustomAttribute(Module, Type)\n- uid: System.Attribute.GetCustomAttribute(System.Reflection.MemberInfo,System.Type)\n  parent: System.Attribute\n  isExternal: false\n  name: GetCustomAttribute(MemberInfo, Type)\n  nameWithType: Attribute.GetCustomAttribute(MemberInfo, Type)\n  fullName: Attribute.GetCustomAttribute(MemberInfo, Type)\n- uid: System.Attribute.GetCustomAttribute(System.Reflection.Assembly,System.Type)\n  parent: System.Attribute\n  isExternal: false\n  name: GetCustomAttribute(Assembly, Type)\n  nameWithType: Attribute.GetCustomAttribute(Assembly, Type)\n  fullName: Attribute.GetCustomAttribute(Assembly, Type)\n- uid: System.Attribute.GetCustomAttribute(System.Reflection.ParameterInfo,System.Type)\n  parent: System.Attribute\n  isExternal: false\n  name: GetCustomAttribute(ParameterInfo, Type)\n  nameWithType: Attribute.GetCustomAttribute(ParameterInfo, Type)\n  fullName: Attribute.GetCustomAttribute(ParameterInfo, Type)\n- uid: System.Attribute.GetCustomAttributes(System.Reflection.Module,System.Type)\n  parent: System.Attribute\n  isExternal: false\n  name: GetCustomAttributes(Module, Type)\n  nameWithType: Attribute.GetCustomAttributes(Module, Type)\n  fullName: Attribute.GetCustomAttributes(Module, Type)\n- uid: System.Attribute.GetCustomAttributes(System.Reflection.ParameterInfo,System.Type,System.Boolean)\n  parent: System.Attribute\n  isExternal: false\n  name: GetCustomAttributes(ParameterInfo, Type, Boolean)\n  nameWithType: Attribute.GetCustomAttributes(ParameterInfo, Type, Boolean)\n  fullName: Attribute.GetCustomAttributes(ParameterInfo, Type, Boolean)\n- uid: System.Attribute.GetCustomAttributes(System.Reflection.Module,System.Type,System.Boolean)\n  parent: System.Attribute\n  isExternal: false\n  name: GetCustomAttributes(Module, Type, Boolean)\n  nameWithType: Attribute.GetCustomAttributes(Module, Type, Boolean)\n  fullName: Attribute.GetCustomAttributes(Module, Type, Boolean)\n- uid: System.Attribute.GetCustomAttributes(System.Reflection.MemberInfo,System.Type,System.Boolean)\n  parent: System.Attribute\n  isExternal: false\n  name: GetCustomAttributes(MemberInfo, Type, Boolean)\n  nameWithType: Attribute.GetCustomAttributes(MemberInfo, Type, Boolean)\n  fullName: Attribute.GetCustomAttributes(MemberInfo, Type, Boolean)\n- uid: System.Attribute.GetCustomAttributes(System.Reflection.Assembly,System.Type,System.Boolean)\n  parent: System.Attribute\n  isExternal: false\n  name: GetCustomAttributes(Assembly, Type, Boolean)\n  nameWithType: Attribute.GetCustomAttributes(Assembly, Type, Boolean)\n  fullName: Attribute.GetCustomAttributes(Assembly, Type, Boolean)\n- uid: System.Attribute.GetCustomAttributes(System.Reflection.ParameterInfo,System.Type)\n  parent: System.Attribute\n  isExternal: false\n  name: GetCustomAttributes(ParameterInfo, Type)\n  nameWithType: Attribute.GetCustomAttributes(ParameterInfo, Type)\n  fullName: Attribute.GetCustomAttributes(ParameterInfo, Type)\n- uid: System.Attribute.GetCustomAttributes(System.Reflection.Module,System.Boolean)\n  parent: System.Attribute\n  isExternal: false\n  name: GetCustomAttributes(Module, Boolean)\n  nameWithType: Attribute.GetCustomAttributes(Module, Boolean)\n  fullName: Attribute.GetCustomAttributes(Module, Boolean)\n- uid: System.Attribute.GetCustomAttributes(System.Reflection.ParameterInfo,System.Boolean)\n  parent: System.Attribute\n  isExternal: false\n  name: GetCustomAttributes(ParameterInfo, Boolean)\n  nameWithType: Attribute.GetCustomAttributes(ParameterInfo, Boolean)\n  fullName: Attribute.GetCustomAttributes(ParameterInfo, Boolean)\n- uid: System.Attribute.GetCustomAttributes(System.Reflection.MemberInfo,System.Boolean)\n  parent: System.Attribute\n  isExternal: false\n  name: GetCustomAttributes(MemberInfo, Boolean)\n  nameWithType: Attribute.GetCustomAttributes(MemberInfo, Boolean)\n  fullName: Attribute.GetCustomAttributes(MemberInfo, Boolean)\n- uid: System.Attribute.GetCustomAttributes(System.Reflection.Assembly,System.Type)\n  parent: System.Attribute\n  isExternal: false\n  name: GetCustomAttributes(Assembly, Type)\n  nameWithType: Attribute.GetCustomAttributes(Assembly, Type)\n  fullName: Attribute.GetCustomAttributes(Assembly, Type)\n- uid: System.Attribute.GetCustomAttributes(System.Reflection.Assembly,System.Boolean)\n  parent: System.Attribute\n  isExternal: false\n  name: GetCustomAttributes(Assembly, Boolean)\n  nameWithType: Attribute.GetCustomAttributes(Assembly, Boolean)\n  fullName: Attribute.GetCustomAttributes(Assembly, Boolean)\n- uid: System.Attribute.GetCustomAttributes(System.Reflection.ParameterInfo)\n  parent: System.Attribute\n  isExternal: false\n  name: GetCustomAttributes(ParameterInfo)\n  nameWithType: Attribute.GetCustomAttributes(ParameterInfo)\n  fullName: Attribute.GetCustomAttributes(ParameterInfo)\n- uid: System.Attribute.GetCustomAttributes(System.Reflection.Module)\n  parent: System.Attribute\n  isExternal: false\n  name: GetCustomAttributes(Module)\n  nameWithType: Attribute.GetCustomAttributes(Module)\n  fullName: Attribute.GetCustomAttributes(Module)\n- uid: System.Attribute.GetCustomAttributes(System.Reflection.MemberInfo)\n  parent: System.Attribute\n  isExternal: false\n  name: GetCustomAttributes(MemberInfo)\n  nameWithType: Attribute.GetCustomAttributes(MemberInfo)\n  fullName: Attribute.GetCustomAttributes(MemberInfo)\n- uid: System.Attribute.GetCustomAttributes(System.Reflection.Assembly)\n  parent: System.Attribute\n  isExternal: false\n  name: GetCustomAttributes(Assembly)\n  nameWithType: Attribute.GetCustomAttributes(Assembly)\n  fullName: Attribute.GetCustomAttributes(Assembly)\n- uid: System.Attribute.GetCustomAttributes(System.Reflection.MemberInfo,System.Type)\n  parent: System.Attribute\n  isExternal: false\n  name: GetCustomAttributes(MemberInfo, Type)\n  nameWithType: Attribute.GetCustomAttributes(MemberInfo, Type)\n  fullName: Attribute.GetCustomAttributes(MemberInfo, Type)\n- uid: System.Attribute.IsDefaultAttribute\n  parent: System.Attribute\n  isExternal: false\n  name: IsDefaultAttribute()\n  nameWithType: Attribute.IsDefaultAttribute()\n  fullName: Attribute.IsDefaultAttribute()\n- uid: System.Attribute.IsDefined(System.Reflection.ParameterInfo,System.Type,System.Boolean)\n  parent: System.Attribute\n  isExternal: false\n  name: IsDefined(ParameterInfo, Type, Boolean)\n  nameWithType: Attribute.IsDefined(ParameterInfo, Type, Boolean)\n  fullName: Attribute.IsDefined(ParameterInfo, Type, Boolean)\n- uid: System.Attribute.IsDefined(System.Reflection.Module,System.Type,System.Boolean)\n  parent: System.Attribute\n  isExternal: false\n  name: IsDefined(Module, Type, Boolean)\n  nameWithType: Attribute.IsDefined(Module, Type, Boolean)\n  fullName: Attribute.IsDefined(Module, Type, Boolean)\n- uid: System.Attribute.IsDefined(System.Reflection.MemberInfo,System.Type,System.Boolean)\n  parent: System.Attribute\n  isExternal: false\n  name: IsDefined(MemberInfo, Type, Boolean)\n  nameWithType: Attribute.IsDefined(MemberInfo, Type, Boolean)\n  fullName: Attribute.IsDefined(MemberInfo, Type, Boolean)\n- uid: System.Attribute.IsDefined(System.Reflection.Assembly,System.Type,System.Boolean)\n  parent: System.Attribute\n  isExternal: false\n  name: IsDefined(Assembly, Type, Boolean)\n  nameWithType: Attribute.IsDefined(Assembly, Type, Boolean)\n  fullName: Attribute.IsDefined(Assembly, Type, Boolean)\n- uid: System.Attribute.IsDefined(System.Reflection.MemberInfo,System.Type)\n  parent: System.Attribute\n  isExternal: false\n  name: IsDefined(MemberInfo, Type)\n  nameWithType: Attribute.IsDefined(MemberInfo, Type)\n  fullName: Attribute.IsDefined(MemberInfo, Type)\n- uid: System.Attribute.IsDefined(System.Reflection.Module,System.Type)\n  parent: System.Attribute\n  isExternal: false\n  name: IsDefined(Module, Type)\n  nameWithType: Attribute.IsDefined(Module, Type)\n  fullName: Attribute.IsDefined(Module, Type)\n- uid: System.Attribute.IsDefined(System.Reflection.Assembly,System.Type)\n  parent: System.Attribute\n  isExternal: false\n  name: IsDefined(Assembly, Type)\n  nameWithType: Attribute.IsDefined(Assembly, Type)\n  fullName: Attribute.IsDefined(Assembly, Type)\n- uid: System.Attribute.IsDefined(System.Reflection.ParameterInfo,System.Type)\n  parent: System.Attribute\n  isExternal: false\n  name: IsDefined(ParameterInfo, Type)\n  nameWithType: Attribute.IsDefined(ParameterInfo, Type)\n  fullName: Attribute.IsDefined(ParameterInfo, Type)\n- uid: System.Attribute.Match(System.Object)\n  parent: System.Attribute\n  isExternal: false\n  name: Match(Object)\n  nameWithType: Attribute.Match(Object)\n  fullName: Attribute.Match(Object)\n- uid: System.Attribute.TypeId\n  parent: System.Attribute\n  isExternal: false\n  name: TypeId\n  nameWithType: Attribute.TypeId\n  fullName: Attribute.TypeId\n- uid: System.Attribute.System#Runtime#InteropServices#_Attribute#GetIDsOfNames(System.Guid@,System.IntPtr,System.UInt32,System.UInt32,System.IntPtr)\n  parent: System.Attribute\n  isExternal: false\n  name: _Attribute.GetIDsOfNames(Guid, IntPtr, UInt32, UInt32, IntPtr)\n  nameWithType: Attribute._Attribute.GetIDsOfNames(Guid, IntPtr, UInt32, UInt32, IntPtr)\n  fullName: Attribute._Attribute.GetIDsOfNames(Guid, IntPtr, UInt32, UInt32, IntPtr)\n- uid: System.Attribute.System#Runtime#InteropServices#_Attribute#GetTypeInfo(System.UInt32,System.UInt32,System.IntPtr)\n  parent: System.Attribute\n  isExternal: false\n  name: _Attribute.GetTypeInfo(UInt32, UInt32, IntPtr)\n  nameWithType: Attribute._Attribute.GetTypeInfo(UInt32, UInt32, IntPtr)\n  fullName: Attribute._Attribute.GetTypeInfo(UInt32, UInt32, IntPtr)\n- uid: System.Attribute.System#Runtime#InteropServices#_Attribute#GetTypeInfoCount(System.UInt32@)\n  parent: System.Attribute\n  isExternal: false\n  name: _Attribute.GetTypeInfoCount(UInt32)\n  nameWithType: Attribute._Attribute.GetTypeInfoCount(UInt32)\n  fullName: Attribute._Attribute.GetTypeInfoCount(UInt32)\n- uid: System.Attribute.System#Runtime#InteropServices#_Attribute#Invoke(System.UInt32,System.Guid@,System.UInt32,System.Int16,System.IntPtr,System.IntPtr,System.IntPtr,System.IntPtr)\n  parent: System.Attribute\n  isExternal: false\n  name: _Attribute.Invoke(UInt32, Guid, UInt32, Int16, IntPtr, IntPtr, IntPtr, IntPtr)\n  nameWithType: Attribute._Attribute.Invoke(UInt32, Guid, UInt32, Int16, IntPtr, IntPtr, IntPtr, IntPtr)\n  fullName: Attribute._Attribute.Invoke(UInt32, Guid, UInt32, Int16, IntPtr, IntPtr, IntPtr, IntPtr)\n"}