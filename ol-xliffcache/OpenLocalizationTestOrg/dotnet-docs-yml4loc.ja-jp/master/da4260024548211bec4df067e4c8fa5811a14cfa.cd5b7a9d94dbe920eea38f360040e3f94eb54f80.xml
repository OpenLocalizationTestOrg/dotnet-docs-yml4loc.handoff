{"nodes":[{"content":"Represents a point in time, typically expressed as a date and time of day, relative to Coordinated Universal Time (UTC).","nodes":[{"pos":[0,120],"content":"Represents a point in time, typically expressed as a date and time of day, relative to Coordinated Universal Time (UTC).","nodes":[{"content":"Represents a point in time, typically expressed as a date and time of day, relative to Coordinated Universal Time (UTC).","pos":[0,120]}]}],"pos":[5594,5715],"yaml":true},{"content":"The <xref:System.DateTimeOffset> structure includes a <xref:System.DateTime> value, together with an <xref:System.DateTimeOffset.Offset%2A> property that defines the difference between the current <xref:System.DateTimeOffset> instance's date and time and Coordinated Universal Time (UTC). Because it exactly defines a date and time relative to UTC, the <xref:System.DateTimeOffset> structure does not include a `Kind` member, as the <xref:System.DateTime> structure does. It represents dates and times with values whose UTC ranges from 12:00:00 midnight, January 1, 0001 Anno Domini (Common Era), to 11:59:59 P.M., December 31, 9999 A.D. (C.E.).  \n  \n The time component of a <xref:System.DateTimeOffset> value is measured in 100-nanosecond units called ticks, and a particular date is the number of ticks since 12:00 midnight, January 1, 0001 A.D. (C.E.) in the <xref:System.Globalization.GregorianCalendar> calendar. A <xref:System.DateTimeOffset> value is always expressed in the context of an explicit or default calendar. Ticks that are attributable to leap seconds are not included in the total number of ticks.  \n  \n> [!NOTE]\n>  If you are working with a ticks value that you want to convert to some other time interval, such as minutes or seconds, you should use the <xref:System.TimeSpan.TicksPerDay?displayProperty=fullName>, <xref:System.TimeSpan.TicksPerHour?displayProperty=fullName>, <xref:System.TimeSpan.TicksPerMinute?displayProperty=fullName>, <xref:System.TimeSpan.TicksPerSecond?displayProperty=fullName>, or <xref:System.TimeSpan.TicksPerMillisecond?displayProperty=fullName> constant to perform the conversion. For example, to add the number of seconds represented by a specified number of ticks to the <xref:System.DateTimeOffset.Second%2A> component of a <xref:System.DateTimeOffset> value, you can use the expression `dateValue.Second + nTicks/Timespan.TicksPerSecond`.  \n  \n Although a <xref:System.DateTimeOffset> value includes an offset, it is not a fully time zone-aware data structure. While an offset from UTC is one characteristic of a time zone, it does not unambiguously identify a time zone. Not only do multiple time zones share the same offset from UTC, but the offset of a single time zone changes if it observes daylight saving time. This means that, as soon as a <xref:System.DateTimeOffset> value is disassociated from its time zone, it can no longer be unambiguously linked back to its original time zone.  \n  \n Because <xref:System.DateTimeOffset> is a structure, a <xref:System.DateTimeOffset> object that has been declared but not otherwise initialized contains the default values for each of its member fields. This means that its <xref:System.DateTimeOffset.DateTime%2A> property is set to <xref:System.DateTimeOffset.MinValue?displayProperty=fullName> and its <xref:System.DateTimeOffset.Offset%2A> property is set to <xref:System.TimeSpan.Zero?displayProperty=fullName>.  \n  \n You can create a new <xref:System.DateTimeOffset> value by calling any of the overloads of its constructor, which are similar to the overloaded constructors for the <xref:System.DateTime> structure. You can also create a new <xref:System.DateTimeOffset> value by assigning it a <xref:System.DateTime> value. This is an implicit conversion; it does not require a casting operator (in C#) or call to a conversion method (in Visual Basic). You can also initialize a <xref:System.DateTimeOffset> value from the string representation of a date and time by calling a number of static string parsing methods, which include <xref:System.DateTimeOffset.Parse%2A>, <xref:System.DateTimeOffset.ParseExact%2A>, <xref:System.DateTimeOffset.TryParse%2A>, and <xref:System.DateTimeOffset.TryParseExact%2A>.  \n  \n The members of the <xref:System.DateTimeOffset> structure provide functionality in the following areas:  \n  \n-   Date and time arithmetic.  \n  \n     You can add or subtract either dates or time intervals from a particular <xref:System.DateTimeOffset> value. Arithmetic operations with <xref:System.DateTimeOffset> values, unlike those with <xref:System.DateTime> values, adjust for differences in time offsets when returning a result. For example, the following code uses <xref:System.DateTime> variables to subtract the current local time from the current UTC time. The code then uses <xref:System.DateTimeOffset> variables to perform the same operation. The subtraction with <xref:System.DateTime> values returns the local time zone's difference from UTC, while the subtraction with <xref:System.DateTimeOffset> values returns <xref:System.TimeSpan.Zero?displayProperty=fullName>.  \n  \n     [!code-csharp[System.DateTimeOffset.Type#1](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.DateTimeOffset.Type/cs/Type.cs#1)]\n     [!code-vb[System.DateTimeOffset.Type#1](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.DateTimeOffset.Type/vb/Type.vb#1)]  \n  \n-   Type conversion operations.  \n  \n     You can convert <xref:System.DateTimeOffset> values to <xref:System.DateTimeOffset.DateTime%2A> values and vice versa.  \n  \n-   Time manipulation and extraction operations.  \n  \n     You can extract either the date or the time of a <xref:System.DateTimeOffset> value. You can also retrieve the value of a particular <xref:System.DateTimeOffset> component, such as its year or its month.  \n  \n-   Date and time conversion.  \n  \n     You can convert any <xref:System.DateTimeOffset> value to another <xref:System.DateTimeOffset> value that represents the same point in time in another time zone. However, a time zone's adjustment rules are applied only in the case of the <xref:System.DateTimeOffset.ToLocalTime%2A> method, which converts a <xref:System.DateTimeOffset> value to the date and time in the local system zone.  \n  \n-   Date and time comparison.  \n  \n     You can determine whether any particular <xref:System.DateTimeOffset> value is earlier than, the same as, or later than another <xref:System.DateTimeOffset> value. Before the comparison is performed, all values are converted to UTC.","nodes":[{"pos":[0,645],"content":"The <xref:System.DateTimeOffset> structure includes a <xref:System.DateTime> value, together with an <xref:System.DateTimeOffset.Offset%2A> property that defines the difference between the current <xref:System.DateTimeOffset> instance's date and time and Coordinated Universal Time (UTC). Because it exactly defines a date and time relative to UTC, the <xref:System.DateTimeOffset> structure does not include a `Kind` member, as the <xref:System.DateTime> structure does. It represents dates and times with values whose UTC ranges from 12:00:00 midnight, January 1, 0001 Anno Domini (Common Era), to 11:59:59 P.M., December 31, 9999 A.D. (C.E.).","nodes":[{"content":"The <ph id=\"ph1\">&lt;xref:System.DateTimeOffset&gt;</ph> structure includes a <ph id=\"ph2\">&lt;xref:System.DateTime&gt;</ph> value, together with an <ph id=\"ph3\">&lt;xref:System.DateTimeOffset.Offset%2A&gt;</ph> property that defines the difference between the current <ph id=\"ph4\">&lt;xref:System.DateTimeOffset&gt;</ph> instance's date and time and Coordinated Universal Time (UTC).","pos":[0,288],"source":"The <xref:System.DateTimeOffset> structure includes a <xref:System.DateTime> value, together with an <xref:System.DateTimeOffset.Offset%2A> property that defines the difference between the current <xref:System.DateTimeOffset> instance's date and time and Coordinated Universal Time (UTC)."},{"content":"Because it exactly defines a date and time relative to UTC, the <ph id=\"ph1\">&lt;xref:System.DateTimeOffset&gt;</ph> structure does not include a <ph id=\"ph2\">`Kind`</ph> member, as the <ph id=\"ph3\">&lt;xref:System.DateTime&gt;</ph> structure does.","pos":[289,471],"source":" Because it exactly defines a date and time relative to UTC, the <xref:System.DateTimeOffset> structure does not include a `Kind` member, as the <xref:System.DateTime> structure does."},{"content":"It represents dates and times with values whose UTC ranges from 12:00:00 midnight, January 1, 0001 Anno Domini (Common Era), to 11:59:59 P.M., December 31, 9999 A.D.","pos":[472,637]},{"content":"(C.E.).","pos":[638,645]}]},{"pos":[652,1117],"content":"The time component of a <xref:System.DateTimeOffset> value is measured in 100-nanosecond units called ticks, and a particular date is the number of ticks since 12:00 midnight, January 1, 0001 A.D. (C.E.) in the <xref:System.Globalization.GregorianCalendar> calendar. A <xref:System.DateTimeOffset> value is always expressed in the context of an explicit or default calendar. Ticks that are attributable to leap seconds are not included in the total number of ticks.","nodes":[{"content":"The time component of a <xref:System.DateTimeOffset> value is measured in 100-nanosecond units called ticks, and a particular date is the number of ticks since 12:00 midnight, January 1, 0001 A.D. (C.E.) in the <xref:System.Globalization.GregorianCalendar> calendar. A <xref:System.DateTimeOffset> value is always expressed in the context of an explicit or default calendar. Ticks that are attributable to leap seconds are not included in the total number of ticks.","pos":[0,465],"nodes":[{"content":"The time component of a <ph id=\"ph1\">&lt;xref:System.DateTimeOffset&gt;</ph> value is measured in 100-nanosecond units called ticks, and a particular date is the number of ticks since 12:00 midnight, January 1, 0001 A.D.","pos":[0,196],"source":"The time component of a <xref:System.DateTimeOffset> value is measured in 100-nanosecond units called ticks, and a particular date is the number of ticks since 12:00 midnight, January 1, 0001 A.D."},{"content":"(C.E.) in the <ph id=\"ph1\">&lt;xref:System.Globalization.GregorianCalendar&gt;</ph> calendar.","pos":[197,266],"source":" (C.E.) in the <xref:System.Globalization.GregorianCalendar> calendar."},{"content":"A <ph id=\"ph1\">&lt;xref:System.DateTimeOffset&gt;</ph> value is always expressed in the context of an explicit or default calendar.","pos":[267,374],"source":" A <xref:System.DateTimeOffset> value is always expressed in the context of an explicit or default calendar."},{"content":"Ticks that are attributable to leap seconds are not included in the total number of ticks.","pos":[375,465]}]}]},{"pos":[1125,1894],"content":"[!NOTE]\n If you are working with a ticks value that you want to convert to some other time interval, such as minutes or seconds, you should use the <xref:System.TimeSpan.TicksPerDay?displayProperty=fullName>, <xref:System.TimeSpan.TicksPerHour?displayProperty=fullName>, <xref:System.TimeSpan.TicksPerMinute?displayProperty=fullName>, <xref:System.TimeSpan.TicksPerSecond?displayProperty=fullName>, or <xref:System.TimeSpan.TicksPerMillisecond?displayProperty=fullName> constant to perform the conversion. For example, to add the number of seconds represented by a specified number of ticks to the <xref:System.DateTimeOffset.Second%2A> component of a <xref:System.DateTimeOffset> value, you can use the expression `dateValue.Second + nTicks/Timespan.TicksPerSecond`.","leadings":["","> "],"nodes":[{"content":" If you are working with a ticks value that you want to convert to some other time interval, such as minutes or seconds, you should use the <xref:System.TimeSpan.TicksPerDay?displayProperty=fullName>, <xref:System.TimeSpan.TicksPerHour?displayProperty=fullName>, <xref:System.TimeSpan.TicksPerMinute?displayProperty=fullName>, <xref:System.TimeSpan.TicksPerSecond?displayProperty=fullName>, or <xref:System.TimeSpan.TicksPerMillisecond?displayProperty=fullName> constant to perform the conversion. For example, to add the number of seconds represented by a specified number of ticks to the <xref:System.DateTimeOffset.Second%2A> component of a <xref:System.DateTimeOffset> value, you can use the expression `dateValue.Second + nTicks/Timespan.TicksPerSecond`.","pos":[8,767],"nodes":[{"content":"If you are working with a ticks value that you want to convert to some other time interval, such as minutes or seconds, you should use the <ph id=\"ph1\">&lt;xref:System.TimeSpan.TicksPerDay?displayProperty=fullName&gt;</ph>, <ph id=\"ph2\">&lt;xref:System.TimeSpan.TicksPerHour?displayProperty=fullName&gt;</ph>, <ph id=\"ph3\">&lt;xref:System.TimeSpan.TicksPerMinute?displayProperty=fullName&gt;</ph>, <ph id=\"ph4\">&lt;xref:System.TimeSpan.TicksPerSecond?displayProperty=fullName&gt;</ph>, or <ph id=\"ph5\">&lt;xref:System.TimeSpan.TicksPerMillisecond?displayProperty=fullName&gt;</ph> constant to perform the conversion.","pos":[1,497],"source":" If you are working with a ticks value that you want to convert to some other time interval, such as minutes or seconds, you should use the <xref:System.TimeSpan.TicksPerDay?displayProperty=fullName>, <xref:System.TimeSpan.TicksPerHour?displayProperty=fullName>, <xref:System.TimeSpan.TicksPerMinute?displayProperty=fullName>, <xref:System.TimeSpan.TicksPerSecond?displayProperty=fullName>, or <xref:System.TimeSpan.TicksPerMillisecond?displayProperty=fullName> constant to perform the conversion."},{"content":"For example, to add the number of seconds represented by a specified number of ticks to the <ph id=\"ph1\">&lt;xref:System.DateTimeOffset.Second%2A&gt;</ph> component of a <ph id=\"ph2\">&lt;xref:System.DateTimeOffset&gt;</ph> value, you can use the expression <ph id=\"ph3\">`dateValue.Second + nTicks/Timespan.TicksPerSecond`</ph>.","pos":[498,759],"source":" For example, to add the number of seconds represented by a specified number of ticks to the <xref:System.DateTimeOffset.Second%2A> component of a <xref:System.DateTimeOffset> value, you can use the expression `dateValue.Second + nTicks/Timespan.TicksPerSecond`."}]}]},{"pos":[1901,2448],"content":"Although a <xref:System.DateTimeOffset> value includes an offset, it is not a fully time zone-aware data structure. While an offset from UTC is one characteristic of a time zone, it does not unambiguously identify a time zone. Not only do multiple time zones share the same offset from UTC, but the offset of a single time zone changes if it observes daylight saving time. This means that, as soon as a <xref:System.DateTimeOffset> value is disassociated from its time zone, it can no longer be unambiguously linked back to its original time zone.","nodes":[{"content":"Although a <xref:System.DateTimeOffset> value includes an offset, it is not a fully time zone-aware data structure. While an offset from UTC is one characteristic of a time zone, it does not unambiguously identify a time zone. Not only do multiple time zones share the same offset from UTC, but the offset of a single time zone changes if it observes daylight saving time. This means that, as soon as a <xref:System.DateTimeOffset> value is disassociated from its time zone, it can no longer be unambiguously linked back to its original time zone.","pos":[0,547],"nodes":[{"content":"Although a <ph id=\"ph1\">&lt;xref:System.DateTimeOffset&gt;</ph> value includes an offset, it is not a fully time zone-aware data structure.","pos":[0,115],"source":"Although a <xref:System.DateTimeOffset> value includes an offset, it is not a fully time zone-aware data structure."},{"content":"While an offset from UTC is one characteristic of a time zone, it does not unambiguously identify a time zone.","pos":[116,226]},{"content":"Not only do multiple time zones share the same offset from UTC, but the offset of a single time zone changes if it observes daylight saving time.","pos":[227,372]},{"content":"This means that, as soon as a <ph id=\"ph1\">&lt;xref:System.DateTimeOffset&gt;</ph> value is disassociated from its time zone, it can no longer be unambiguously linked back to its original time zone.","pos":[373,547],"source":" This means that, as soon as a <xref:System.DateTimeOffset> value is disassociated from its time zone, it can no longer be unambiguously linked back to its original time zone."}]}]},{"pos":[2455,2920],"content":"Because <xref:System.DateTimeOffset> is a structure, a <xref:System.DateTimeOffset> object that has been declared but not otherwise initialized contains the default values for each of its member fields. This means that its <xref:System.DateTimeOffset.DateTime%2A> property is set to <xref:System.DateTimeOffset.MinValue?displayProperty=fullName> and its <xref:System.DateTimeOffset.Offset%2A> property is set to <xref:System.TimeSpan.Zero?displayProperty=fullName>.","nodes":[{"content":"Because <xref:System.DateTimeOffset> is a structure, a <xref:System.DateTimeOffset> object that has been declared but not otherwise initialized contains the default values for each of its member fields. This means that its <xref:System.DateTimeOffset.DateTime%2A> property is set to <xref:System.DateTimeOffset.MinValue?displayProperty=fullName> and its <xref:System.DateTimeOffset.Offset%2A> property is set to <xref:System.TimeSpan.Zero?displayProperty=fullName>.","pos":[0,465],"nodes":[{"content":"Because <ph id=\"ph1\">&lt;xref:System.DateTimeOffset&gt;</ph> is a structure, a <ph id=\"ph2\">&lt;xref:System.DateTimeOffset&gt;</ph> object that has been declared but not otherwise initialized contains the default values for each of its member fields.","pos":[0,202],"source":"Because <xref:System.DateTimeOffset> is a structure, a <xref:System.DateTimeOffset> object that has been declared but not otherwise initialized contains the default values for each of its member fields."},{"content":"This means that its <ph id=\"ph1\">&lt;xref:System.DateTimeOffset.DateTime%2A&gt;</ph> property is set to <ph id=\"ph2\">&lt;xref:System.DateTimeOffset.MinValue?displayProperty=fullName&gt;</ph> and its <ph id=\"ph3\">&lt;xref:System.DateTimeOffset.Offset%2A&gt;</ph> property is set to <ph id=\"ph4\">&lt;xref:System.TimeSpan.Zero?displayProperty=fullName&gt;</ph>.","pos":[203,465],"source":" This means that its <xref:System.DateTimeOffset.DateTime%2A> property is set to <xref:System.DateTimeOffset.MinValue?displayProperty=fullName> and its <xref:System.DateTimeOffset.Offset%2A> property is set to <xref:System.TimeSpan.Zero?displayProperty=fullName>."}]}]},{"pos":[2927,3718],"content":"You can create a new <xref:System.DateTimeOffset> value by calling any of the overloads of its constructor, which are similar to the overloaded constructors for the <xref:System.DateTime> structure. You can also create a new <xref:System.DateTimeOffset> value by assigning it a <xref:System.DateTime> value. This is an implicit conversion; it does not require a casting operator (in C#) or call to a conversion method (in Visual Basic). You can also initialize a <xref:System.DateTimeOffset> value from the string representation of a date and time by calling a number of static string parsing methods, which include <xref:System.DateTimeOffset.Parse%2A>, <xref:System.DateTimeOffset.ParseExact%2A>, <xref:System.DateTimeOffset.TryParse%2A>, and <xref:System.DateTimeOffset.TryParseExact%2A>.","nodes":[{"content":"You can create a new <xref:System.DateTimeOffset> value by calling any of the overloads of its constructor, which are similar to the overloaded constructors for the <xref:System.DateTime> structure. You can also create a new <xref:System.DateTimeOffset> value by assigning it a <xref:System.DateTime> value. This is an implicit conversion; it does not require a casting operator (in C#) or call to a conversion method (in Visual Basic). You can also initialize a <xref:System.DateTimeOffset> value from the string representation of a date and time by calling a number of static string parsing methods, which include <xref:System.DateTimeOffset.Parse%2A>, <xref:System.DateTimeOffset.ParseExact%2A>, <xref:System.DateTimeOffset.TryParse%2A>, and <xref:System.DateTimeOffset.TryParseExact%2A>.","pos":[0,791],"nodes":[{"content":"You can create a new <ph id=\"ph1\">&lt;xref:System.DateTimeOffset&gt;</ph> value by calling any of the overloads of its constructor, which are similar to the overloaded constructors for the <ph id=\"ph2\">&lt;xref:System.DateTime&gt;</ph> structure.","pos":[0,198],"source":"You can create a new <xref:System.DateTimeOffset> value by calling any of the overloads of its constructor, which are similar to the overloaded constructors for the <xref:System.DateTime> structure."},{"content":"You can also create a new <ph id=\"ph1\">&lt;xref:System.DateTimeOffset&gt;</ph> value by assigning it a <ph id=\"ph2\">&lt;xref:System.DateTime&gt;</ph> value.","pos":[199,307],"source":" You can also create a new <xref:System.DateTimeOffset> value by assigning it a <xref:System.DateTime> value."},{"content":"This is an implicit conversion; it does not require a casting operator (in C#) or call to a conversion method (in Visual Basic).","pos":[308,436]},{"content":"You can also initialize a <ph id=\"ph1\">&lt;xref:System.DateTimeOffset&gt;</ph> value from the string representation of a date and time by calling a number of static string parsing methods, which include <ph id=\"ph2\">&lt;xref:System.DateTimeOffset.Parse%2A&gt;</ph>, <ph id=\"ph3\">&lt;xref:System.DateTimeOffset.ParseExact%2A&gt;</ph>, <ph id=\"ph4\">&lt;xref:System.DateTimeOffset.TryParse%2A&gt;</ph>, and <ph id=\"ph5\">&lt;xref:System.DateTimeOffset.TryParseExact%2A&gt;</ph>.","pos":[437,791],"source":" You can also initialize a <xref:System.DateTimeOffset> value from the string representation of a date and time by calling a number of static string parsing methods, which include <xref:System.DateTimeOffset.Parse%2A>, <xref:System.DateTimeOffset.ParseExact%2A>, <xref:System.DateTimeOffset.TryParse%2A>, and <xref:System.DateTimeOffset.TryParseExact%2A>."}]}]},{"pos":[3725,3828],"content":"The members of the <xref:System.DateTimeOffset> structure provide functionality in the following areas:","nodes":[{"content":"The members of the <ph id=\"ph1\">&lt;xref:System.DateTimeOffset&gt;</ph> structure provide functionality in the following areas:","pos":[0,103],"source":"The members of the <xref:System.DateTimeOffset> structure provide functionality in the following areas:"}]},{"pos":[3838,3863],"content":"Date and time arithmetic.","nodes":[{"content":"Date and time arithmetic.","pos":[0,25]}]},{"pos":[3874,4607],"content":"You can add or subtract either dates or time intervals from a particular <xref:System.DateTimeOffset> value. Arithmetic operations with <xref:System.DateTimeOffset> values, unlike those with <xref:System.DateTime> values, adjust for differences in time offsets when returning a result. For example, the following code uses <xref:System.DateTime> variables to subtract the current local time from the current UTC time. The code then uses <xref:System.DateTimeOffset> variables to perform the same operation. The subtraction with <xref:System.DateTime> values returns the local time zone's difference from UTC, while the subtraction with <xref:System.DateTimeOffset> values returns <xref:System.TimeSpan.Zero?displayProperty=fullName>.","nodes":[{"content":"You can add or subtract either dates or time intervals from a particular <xref:System.DateTimeOffset> value. Arithmetic operations with <xref:System.DateTimeOffset> values, unlike those with <xref:System.DateTime> values, adjust for differences in time offsets when returning a result. For example, the following code uses <xref:System.DateTime> variables to subtract the current local time from the current UTC time. The code then uses <xref:System.DateTimeOffset> variables to perform the same operation. The subtraction with <xref:System.DateTime> values returns the local time zone's difference from UTC, while the subtraction with <xref:System.DateTimeOffset> values returns <xref:System.TimeSpan.Zero?displayProperty=fullName>.","pos":[0,733],"nodes":[{"content":"You can add or subtract either dates or time intervals from a particular <ph id=\"ph1\">&lt;xref:System.DateTimeOffset&gt;</ph> value.","pos":[0,108],"source":"You can add or subtract either dates or time intervals from a particular <xref:System.DateTimeOffset> value."},{"content":"Arithmetic operations with <ph id=\"ph1\">&lt;xref:System.DateTimeOffset&gt;</ph> values, unlike those with <ph id=\"ph2\">&lt;xref:System.DateTime&gt;</ph> values, adjust for differences in time offsets when returning a result.","pos":[109,285],"source":" Arithmetic operations with <xref:System.DateTimeOffset> values, unlike those with <xref:System.DateTime> values, adjust for differences in time offsets when returning a result."},{"content":"For example, the following code uses <ph id=\"ph1\">&lt;xref:System.DateTime&gt;</ph> variables to subtract the current local time from the current UTC time.","pos":[286,417],"source":" For example, the following code uses <xref:System.DateTime> variables to subtract the current local time from the current UTC time."},{"content":"The code then uses <ph id=\"ph1\">&lt;xref:System.DateTimeOffset&gt;</ph> variables to perform the same operation.","pos":[418,506],"source":" The code then uses <xref:System.DateTimeOffset> variables to perform the same operation."},{"content":"The subtraction with <ph id=\"ph1\">&lt;xref:System.DateTime&gt;</ph> values returns the local time zone's difference from UTC, while the subtraction with <ph id=\"ph2\">&lt;xref:System.DateTimeOffset&gt;</ph> values returns <ph id=\"ph3\">&lt;xref:System.TimeSpan.Zero?displayProperty=fullName&gt;</ph>.","pos":[507,733],"source":" The subtraction with <xref:System.DateTime> values returns the local time zone's difference from UTC, while the subtraction with <xref:System.DateTimeOffset> values returns <xref:System.TimeSpan.Zero?displayProperty=fullName>."}]}]},{"pos":[4618,4893],"content":"<bpt id=\"p1\">[!code-csharp</bpt><bpt id=\"p2\">[</bpt>System.DateTimeOffset.Type#1<ept id=\"p2\">](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.DateTimeOffset.Type/cs/Type.cs#1)</ept><ept id=\"p1\">]</ept>  <bpt id=\"p3\">[!code-vb</bpt><bpt id=\"p4\">[</bpt>System.DateTimeOffset.Type#1<ept id=\"p4\">](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.DateTimeOffset.Type/vb/Type.vb#1)</ept><ept id=\"p3\">]</ept>","leadings":["","    "],"source":"[!code-csharp[System.DateTimeOffset.Type#1](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.DateTimeOffset.Type/cs/Type.cs#1)]\n [!code-vb[System.DateTimeOffset.Type#1](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.DateTimeOffset.Type/vb/Type.vb#1)]"},{"pos":[4903,4930],"content":"Type conversion operations.","nodes":[{"content":"Type conversion operations.","pos":[0,27]}]},{"pos":[4941,5059],"content":"You can convert <xref:System.DateTimeOffset> values to <xref:System.DateTimeOffset.DateTime%2A> values and vice versa.","nodes":[{"content":"You can convert <ph id=\"ph1\">&lt;xref:System.DateTimeOffset&gt;</ph> values to <ph id=\"ph2\">&lt;xref:System.DateTimeOffset.DateTime%2A&gt;</ph> values and vice versa.","pos":[0,118],"source":"You can convert <xref:System.DateTimeOffset> values to <xref:System.DateTimeOffset.DateTime%2A> values and vice versa."}]},{"pos":[5069,5113],"content":"Time manipulation and extraction operations.","nodes":[{"content":"Time manipulation and extraction operations.","pos":[0,44]}]},{"pos":[5124,5327],"content":"You can extract either the date or the time of a <xref:System.DateTimeOffset> value. You can also retrieve the value of a particular <xref:System.DateTimeOffset> component, such as its year or its month.","nodes":[{"content":"You can extract either the date or the time of a <xref:System.DateTimeOffset> value. You can also retrieve the value of a particular <xref:System.DateTimeOffset> component, such as its year or its month.","pos":[0,203],"nodes":[{"content":"You can extract either the date or the time of a <ph id=\"ph1\">&lt;xref:System.DateTimeOffset&gt;</ph> value.","pos":[0,84],"source":"You can extract either the date or the time of a <xref:System.DateTimeOffset> value."},{"content":"You can also retrieve the value of a particular <ph id=\"ph1\">&lt;xref:System.DateTimeOffset&gt;</ph> component, such as its year or its month.","pos":[85,203],"source":" You can also retrieve the value of a particular <xref:System.DateTimeOffset> component, such as its year or its month."}]}]},{"pos":[5337,5362],"content":"Date and time conversion.","nodes":[{"content":"Date and time conversion.","pos":[0,25]}]},{"pos":[5373,5761],"content":"You can convert any <xref:System.DateTimeOffset> value to another <xref:System.DateTimeOffset> value that represents the same point in time in another time zone. However, a time zone's adjustment rules are applied only in the case of the <xref:System.DateTimeOffset.ToLocalTime%2A> method, which converts a <xref:System.DateTimeOffset> value to the date and time in the local system zone.","nodes":[{"content":"You can convert any <xref:System.DateTimeOffset> value to another <xref:System.DateTimeOffset> value that represents the same point in time in another time zone. However, a time zone's adjustment rules are applied only in the case of the <xref:System.DateTimeOffset.ToLocalTime%2A> method, which converts a <xref:System.DateTimeOffset> value to the date and time in the local system zone.","pos":[0,388],"nodes":[{"content":"You can convert any <ph id=\"ph1\">&lt;xref:System.DateTimeOffset&gt;</ph> value to another <ph id=\"ph2\">&lt;xref:System.DateTimeOffset&gt;</ph> value that represents the same point in time in another time zone.","pos":[0,161],"source":"You can convert any <xref:System.DateTimeOffset> value to another <xref:System.DateTimeOffset> value that represents the same point in time in another time zone."},{"content":"However, a time zone's adjustment rules are applied only in the case of the <ph id=\"ph1\">&lt;xref:System.DateTimeOffset.ToLocalTime%2A&gt;</ph> method, which converts a <ph id=\"ph2\">&lt;xref:System.DateTimeOffset&gt;</ph> value to the date and time in the local system zone.","pos":[162,388],"source":" However, a time zone's adjustment rules are applied only in the case of the <xref:System.DateTimeOffset.ToLocalTime%2A> method, which converts a <xref:System.DateTimeOffset> value to the date and time in the local system zone."}]}]},{"pos":[5771,5796],"content":"Date and time comparison.","nodes":[{"content":"Date and time comparison.","pos":[0,25]}]},{"pos":[5807,6039],"content":"You can determine whether any particular <xref:System.DateTimeOffset> value is earlier than, the same as, or later than another <xref:System.DateTimeOffset> value. Before the comparison is performed, all values are converted to UTC.","nodes":[{"content":"You can determine whether any particular <xref:System.DateTimeOffset> value is earlier than, the same as, or later than another <xref:System.DateTimeOffset> value. Before the comparison is performed, all values are converted to UTC.","pos":[0,232],"nodes":[{"content":"You can determine whether any particular <ph id=\"ph1\">&lt;xref:System.DateTimeOffset&gt;</ph> value is earlier than, the same as, or later than another <ph id=\"ph2\">&lt;xref:System.DateTimeOffset&gt;</ph> value.","pos":[0,163],"source":"You can determine whether any particular <xref:System.DateTimeOffset> value is earlier than, the same as, or later than another <xref:System.DateTimeOffset> value."},{"content":"Before the comparison is performed, all values are converted to UTC.","pos":[164,232]}]}]}],"pos":[5726,11804],"yaml":true,"extradata":"MT"},{"content":"Initializes a new instance of the <xref href=\"System.DateTimeOffset\"></xref> structure using the specified <xref href=\"System.DateTime\"></xref> value.","nodes":[{"pos":[0,150],"content":"Initializes a new instance of the <ph id=\"ph1\">&lt;xref href=\"System.DateTimeOffset\"&gt;&lt;/xref&gt;</ph> structure using the specified <ph id=\"ph2\">&lt;xref href=\"System.DateTime\"&gt;&lt;/xref&gt;</ph> value.","source":"Initializes a new instance of the <xref href=\"System.DateTimeOffset\"></xref> structure using the specified <xref href=\"System.DateTime\"></xref> value."}],"pos":[13864,14015],"yaml":true},{"content":"This constructor's behavior depends on the value of the <xref:System.DateTime.Kind%2A?displayProperty=fullName> property of the `dateTime` parameter:  \n  \n-   If the value of <xref:System.DateTime.Kind%2A?displayProperty=fullName> is <xref:System.DateTimeKind?displayProperty=fullName>, the <xref:System.DateTimeOffset.DateTime%2A> property of the new instance is set equal to `dateTime`, and the <xref:System.DateTimeOffset.Offset%2A> property is set equal to <xref:System.TimeSpan.Zero>.  \n  \n-   If the value of <xref:System.DateTime.Kind%2A?displayProperty=fullName> is <xref:System.DateTimeKind?displayProperty=fullName> or <xref:System.DateTimeKind?displayProperty=fullName>, the <xref:System.DateTimeOffset.DateTime%2A> property of the new instance is set equal to `dateTime`, and the <xref:System.DateTimeOffset.Offset%2A> property is set equal to the offset of the local system's current time zone.","nodes":[{"pos":[0,149],"content":"This constructor's behavior depends on the value of the <ph id=\"ph1\">&lt;xref:System.DateTime.Kind%2A?displayProperty=fullName&gt;</ph> property of the <ph id=\"ph2\">`dateTime`</ph> parameter:","source":"This constructor's behavior depends on the value of the <xref:System.DateTime.Kind%2A?displayProperty=fullName> property of the `dateTime` parameter:"},{"pos":[159,489],"content":"If the value of <ph id=\"ph1\">&lt;xref:System.DateTime.Kind%2A?displayProperty=fullName&gt;</ph> is <ph id=\"ph2\">&lt;xref:System.DateTimeKind?displayProperty=fullName&gt;</ph>, the <ph id=\"ph3\">&lt;xref:System.DateTimeOffset.DateTime%2A&gt;</ph> property of the new instance is set equal to <ph id=\"ph4\">`dateTime`</ph>, and the <ph id=\"ph5\">&lt;xref:System.DateTimeOffset.Offset%2A&gt;</ph> property is set equal to <ph id=\"ph6\">&lt;xref:System.TimeSpan.Zero&gt;</ph>.","source":"If the value of <xref:System.DateTime.Kind%2A?displayProperty=fullName> is <xref:System.DateTimeKind?displayProperty=fullName>, the <xref:System.DateTimeOffset.DateTime%2A> property of the new instance is set equal to `dateTime`, and the <xref:System.DateTimeOffset.Offset%2A> property is set equal to <xref:System.TimeSpan.Zero>."},{"pos":[499,907],"content":"If the value of <ph id=\"ph1\">&lt;xref:System.DateTime.Kind%2A?displayProperty=fullName&gt;</ph> is <ph id=\"ph2\">&lt;xref:System.DateTimeKind?displayProperty=fullName&gt;</ph> or <ph id=\"ph3\">&lt;xref:System.DateTimeKind?displayProperty=fullName&gt;</ph>, the <ph id=\"ph4\">&lt;xref:System.DateTimeOffset.DateTime%2A&gt;</ph> property of the new instance is set equal to <ph id=\"ph5\">`dateTime`</ph>, and the <ph id=\"ph6\">&lt;xref:System.DateTimeOffset.Offset%2A&gt;</ph> property is set equal to the offset of the local system's current time zone.","source":"If the value of <xref:System.DateTime.Kind%2A?displayProperty=fullName> is <xref:System.DateTimeKind?displayProperty=fullName> or <xref:System.DateTimeKind?displayProperty=fullName>, the <xref:System.DateTimeOffset.DateTime%2A> property of the new instance is set equal to `dateTime`, and the <xref:System.DateTimeOffset.Offset%2A> property is set equal to the offset of the local system's current time zone."}],"pos":[14026,14940],"yaml":true,"extradata":"MT"},{"content":"A date and time.","nodes":[{"pos":[0,16],"content":"A date and time.","nodes":[{"content":"A date and time.","pos":[0,16]}]}],"pos":[15652,15669],"yaml":true},{"content":"The Coordinated Universal Time (UTC) date and time that results from applying the offset is earlier than <xref href=\"System.DateTimeOffset.MinValue\"></xref>.  \n  \n -or-  \n  \n The UTC date and time that results from applying the offset is later than <xref href=\"System.DateTimeOffset.MaxValue\"></xref>.","nodes":[{"pos":[0,157],"content":"The Coordinated Universal Time (UTC) date and time that results from applying the offset is earlier than <ph id=\"ph1\">&lt;xref href=\"System.DateTimeOffset.MinValue\"&gt;&lt;/xref&gt;</ph>.","source":"The Coordinated Universal Time (UTC) date and time that results from applying the offset is earlier than <xref href=\"System.DateTimeOffset.MinValue\"></xref>."},{"pos":[164,168],"content":"-or-","nodes":[{"content":"-or-","pos":[0,4]}]},{"pos":[175,301],"content":"The UTC date and time that results from applying the offset is later than <ph id=\"ph1\">&lt;xref href=\"System.DateTimeOffset.MaxValue\"&gt;&lt;/xref&gt;</ph>.","source":"The UTC date and time that results from applying the offset is later than <xref href=\"System.DateTimeOffset.MaxValue\"></xref>."}],"pos":[15838,16150],"yaml":true},{"content":"Initializes a new instance of the <xref href=\"System.DateTimeOffset\"></xref> structure using the specified <xref href=\"System.DateTime\"></xref> value and offset.","nodes":[{"pos":[0,161],"content":"Initializes a new instance of the <ph id=\"ph1\">&lt;xref href=\"System.DateTimeOffset\"&gt;&lt;/xref&gt;</ph> structure using the specified <ph id=\"ph2\">&lt;xref href=\"System.DateTime\"&gt;&lt;/xref&gt;</ph> value and offset.","source":"Initializes a new instance of the <xref href=\"System.DateTimeOffset\"></xref> structure using the specified <xref href=\"System.DateTime\"></xref> value and offset."}],"pos":[17739,17901],"yaml":true},{"content":"This constructor's behavior depends in part on the value of the <xref:System.DateTime.Kind%2A> property of the `dateTime` parameter:  \n  \n-   If the value of <xref:System.DateTime.Kind%2A> is <xref:System.DateTimeKind?displayProperty=fullName>, the value of the `offset` parameter must be 0 or an <xref:System.ArgumentException> is thrown.  \n  \n-   If the value of <xref:System.DateTime.Kind%2A> is <xref:System.DateTimeKind?displayProperty=fullName>, the value of the `offset` parameter must be equal to the local time zone's offset from Coordinated Universal Time (UTC) for that particular date or an <xref:System.ArgumentException> is thrown.  \n  \n-   If the value of <xref:System.DateTime.Kind%2A> is <xref:System.DateTimeKind?displayProperty=fullName>, the `offset` parameter can have any valid value.","nodes":[{"pos":[0,132],"content":"This constructor's behavior depends in part on the value of the <ph id=\"ph1\">&lt;xref:System.DateTime.Kind%2A&gt;</ph> property of the <ph id=\"ph2\">`dateTime`</ph> parameter:","source":"This constructor's behavior depends in part on the value of the <xref:System.DateTime.Kind%2A> property of the `dateTime` parameter:"},{"pos":[142,339],"content":"If the value of <ph id=\"ph1\">&lt;xref:System.DateTime.Kind%2A&gt;</ph> is <ph id=\"ph2\">&lt;xref:System.DateTimeKind?displayProperty=fullName&gt;</ph>, the value of the <ph id=\"ph3\">`offset`</ph> parameter must be 0 or an <ph id=\"ph4\">&lt;xref:System.ArgumentException&gt;</ph> is thrown.","source":"If the value of <xref:System.DateTime.Kind%2A> is <xref:System.DateTimeKind?displayProperty=fullName>, the value of the `offset` parameter must be 0 or an <xref:System.ArgumentException> is thrown."},{"pos":[349,645],"content":"If the value of <ph id=\"ph1\">&lt;xref:System.DateTime.Kind%2A&gt;</ph> is <ph id=\"ph2\">&lt;xref:System.DateTimeKind?displayProperty=fullName&gt;</ph>, the value of the <ph id=\"ph3\">`offset`</ph> parameter must be equal to the local time zone's offset from Coordinated Universal Time (UTC) for that particular date or an <ph id=\"ph4\">&lt;xref:System.ArgumentException&gt;</ph> is thrown.","source":"If the value of <xref:System.DateTime.Kind%2A> is <xref:System.DateTimeKind?displayProperty=fullName>, the value of the `offset` parameter must be equal to the local time zone's offset from Coordinated Universal Time (UTC) for that particular date or an <xref:System.ArgumentException> is thrown."},{"pos":[655,806],"content":"If the value of <ph id=\"ph1\">&lt;xref:System.DateTime.Kind%2A&gt;</ph> is <ph id=\"ph2\">&lt;xref:System.DateTimeKind?displayProperty=fullName&gt;</ph>, the <ph id=\"ph3\">`offset`</ph> parameter can have any valid value.","source":"If the value of <xref:System.DateTime.Kind%2A> is <xref:System.DateTimeKind?displayProperty=fullName>, the `offset` parameter can have any valid value."}],"pos":[17912,18727],"yaml":true,"extradata":"MT"},{"content":"A date and time.","nodes":[{"pos":[0,16],"content":"A date and time.","nodes":[{"content":"A date and time.","pos":[0,16]}]}],"pos":[19426,19443],"yaml":true},{"content":"The time's offset from Coordinated Universal Time (UTC).","nodes":[{"pos":[0,56],"content":"The time's offset from Coordinated Universal Time (UTC).","nodes":[{"content":"The time's offset from Coordinated Universal Time (UTC).","pos":[0,56]}]}],"pos":[19507,19564],"yaml":true},{"content":"<code>dateTime.Kind</code> equals <xref href=\"System.DateTimeKind.Utc\"></xref> and <code>offset</code> does not equal zero.  \n  \n -or-  \n  \n <code>dateTime.Kind</code> equals <xref href=\"System.DateTimeKind.Local\"></xref> and <code>offset</code> does not equal the offset of the system's local time zone.  \n  \n -or-  \n  \n <code>offset</code> is not specified in whole minutes.","nodes":[{"pos":[0,123],"content":"<ph id=\"ph1\">&lt;code&gt;dateTime.Kind&lt;/code&gt;</ph> equals <ph id=\"ph2\">&lt;xref href=\"System.DateTimeKind.Utc\"&gt;&lt;/xref&gt;</ph> and <ph id=\"ph3\">&lt;code&gt;offset&lt;/code&gt;</ph> does not equal zero.","source":"<code>dateTime.Kind</code> equals <xref href=\"System.DateTimeKind.Utc\"></xref> and <code>offset</code> does not equal zero."},{"pos":[130,134],"content":"-or-","nodes":[{"content":"-or-","pos":[0,4]}]},{"pos":[141,304],"content":"<ph id=\"ph1\">&lt;code&gt;dateTime.Kind&lt;/code&gt;</ph> equals <ph id=\"ph2\">&lt;xref href=\"System.DateTimeKind.Local\"&gt;&lt;/xref&gt;</ph> and <ph id=\"ph3\">&lt;code&gt;offset&lt;/code&gt;</ph> does not equal the offset of the system's local time zone.","source":"<code>dateTime.Kind</code> equals <xref href=\"System.DateTimeKind.Local\"></xref> and <code>offset</code> does not equal the offset of the system's local time zone."},{"pos":[311,315],"content":"-or-","nodes":[{"content":"-or-","pos":[0,4]}]},{"pos":[322,376],"content":"<ph id=\"ph1\">&lt;code&gt;offset&lt;/code&gt;</ph> is not specified in whole minutes.","source":"<code>offset</code> is not specified in whole minutes."}],"pos":[19713,20104],"yaml":true},{"content":"<code>offset</code> is less than -14 hours or greater than 14 hours.  \n  \n -or-  \n  \n <xref href=\"System.DateTimeOffset.UtcDateTime\"></xref> is less than <xref href=\"System.DateTimeOffset.MinValue\"></xref> or greater than <xref href=\"System.DateTimeOffset.MaxValue\"></xref>.","nodes":[{"pos":[0,68],"content":"<ph id=\"ph1\">&lt;code&gt;offset&lt;/code&gt;</ph> is less than -14 hours or greater than 14 hours.","source":"<code>offset</code> is less than -14 hours or greater than 14 hours."},{"pos":[75,79],"content":"-or-","nodes":[{"content":"-or-","pos":[0,4]}]},{"pos":[86,274],"content":"<ph id=\"ph1\">&lt;xref href=\"System.DateTimeOffset.UtcDateTime\"&gt;&lt;/xref&gt;</ph> is less than <ph id=\"ph2\">&lt;xref href=\"System.DateTimeOffset.MinValue\"&gt;&lt;/xref&gt;</ph> or greater than <ph id=\"ph3\">&lt;xref href=\"System.DateTimeOffset.MaxValue\"&gt;&lt;/xref&gt;</ph>.","source":"<xref href=\"System.DateTimeOffset.UtcDateTime\"></xref> is less than <xref href=\"System.DateTimeOffset.MinValue\"></xref> or greater than <xref href=\"System.DateTimeOffset.MaxValue\"></xref>."}],"pos":[20218,20505],"yaml":true},{"content":"Initializes a new instance of the <xref href=\"System.DateTimeOffset\"></xref> structure using the specified number of ticks and offset.","nodes":[{"pos":[0,134],"content":"Initializes a new instance of the <ph id=\"ph1\">&lt;xref href=\"System.DateTimeOffset\"&gt;&lt;/xref&gt;</ph> structure using the specified number of ticks and offset.","source":"Initializes a new instance of the <xref href=\"System.DateTimeOffset\"></xref> structure using the specified number of ticks and offset."}],"pos":[22076,22211],"yaml":true},{"content":"Ordinarily, trying to call the <xref:System.DateTimeOffset.%23ctor%2A> constructor to instantiate a <xref:System.DateTimeOffset> value with a local time and an offset other than that of the local time zone throws an <xref:System.ArgumentException>. You can use this overload of the <xref:System.DateTimeOffset> constructor to work around this limitation. The following example uses the local time's number of ticks to instantiate a <xref:System.DateTimeOffset> value whose offset does not necessarily represent that of the local time:  \n  \n [!code-csharp[System.DateTimeOffset.Constructors#4](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.DateTimeOffset.Constructors/cs/Constructors.cs#4)]\n [!code-vb[System.DateTimeOffset.Constructors#4](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.DateTimeOffset.Constructors/vb/Constructors.vb#4)]","nodes":[{"pos":[0,534],"content":"Ordinarily, trying to call the <xref:System.DateTimeOffset.%23ctor%2A> constructor to instantiate a <xref:System.DateTimeOffset> value with a local time and an offset other than that of the local time zone throws an <xref:System.ArgumentException>. You can use this overload of the <xref:System.DateTimeOffset> constructor to work around this limitation. The following example uses the local time's number of ticks to instantiate a <xref:System.DateTimeOffset> value whose offset does not necessarily represent that of the local time:","nodes":[{"content":"Ordinarily, trying to call the <xref:System.DateTimeOffset.%23ctor%2A> constructor to instantiate a <xref:System.DateTimeOffset> value with a local time and an offset other than that of the local time zone throws an <xref:System.ArgumentException>. You can use this overload of the <xref:System.DateTimeOffset> constructor to work around this limitation. The following example uses the local time's number of ticks to instantiate a <xref:System.DateTimeOffset> value whose offset does not necessarily represent that of the local time:","pos":[0,534],"nodes":[{"content":"Ordinarily, trying to call the <ph id=\"ph1\">&lt;xref:System.DateTimeOffset.%23ctor%2A&gt;</ph> constructor to instantiate a <ph id=\"ph2\">&lt;xref:System.DateTimeOffset&gt;</ph> value with a local time and an offset other than that of the local time zone throws an <ph id=\"ph3\">&lt;xref:System.ArgumentException&gt;</ph>.","pos":[0,248],"source":"Ordinarily, trying to call the <xref:System.DateTimeOffset.%23ctor%2A> constructor to instantiate a <xref:System.DateTimeOffset> value with a local time and an offset other than that of the local time zone throws an <xref:System.ArgumentException>."},{"content":"You can use this overload of the <ph id=\"ph1\">&lt;xref:System.DateTimeOffset&gt;</ph> constructor to work around this limitation.","pos":[249,354],"source":" You can use this overload of the <xref:System.DateTimeOffset> constructor to work around this limitation."},{"content":"The following example uses the local time's number of ticks to instantiate a <ph id=\"ph1\">&lt;xref:System.DateTimeOffset&gt;</ph> value whose offset does not necessarily represent that of the local time:","pos":[355,534],"source":" The following example uses the local time's number of ticks to instantiate a <xref:System.DateTimeOffset> value whose offset does not necessarily represent that of the local time:"}]}]},{"pos":[541,860],"content":"<bpt id=\"p1\">[!code-csharp</bpt><bpt id=\"p2\">[</bpt>System.DateTimeOffset.Constructors#4<ept id=\"p2\">](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.DateTimeOffset.Constructors/cs/Constructors.cs#4)</ept><ept id=\"p1\">]</ept> <bpt id=\"p3\">[!code-vb</bpt><bpt id=\"p4\">[</bpt>System.DateTimeOffset.Constructors#4<ept id=\"p4\">](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.DateTimeOffset.Constructors/vb/Constructors.vb#4)</ept><ept id=\"p3\">]</ept>","source":"[!code-csharp[System.DateTimeOffset.Constructors#4](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.DateTimeOffset.Constructors/cs/Constructors.cs#4)]\n [!code-vb[System.DateTimeOffset.Constructors#4](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.DateTimeOffset.Constructors/vb/Constructors.vb#4)]"}],"pos":[22222,23088],"yaml":true,"extradata":"MT"},{"content":"A date and time expressed as the number of 100-nanosecond intervals that have elapsed since 12:00:00 midnight on January 1, 0001.","nodes":[{"pos":[0,129],"content":"A date and time expressed as the number of 100-nanosecond intervals that have elapsed since 12:00:00 midnight on January 1, 0001.","nodes":[{"content":"A date and time expressed as the number of 100-nanosecond intervals that have elapsed since 12:00:00 midnight on January 1, 0001.","pos":[0,129]}]}],"pos":[23772,23902],"yaml":true},{"content":"The time's offset from Coordinated Universal Time (UTC).","nodes":[{"pos":[0,56],"content":"The time's offset from Coordinated Universal Time (UTC).","nodes":[{"content":"The time's offset from Coordinated Universal Time (UTC).","pos":[0,56]}]}],"pos":[23966,24023],"yaml":true},{"content":"<code>offset</code> is not specified in whole minutes.","nodes":[{"pos":[0,54],"content":"<ph id=\"ph1\">&lt;code&gt;offset&lt;/code&gt;</ph> is not specified in whole minutes.","source":"<code>offset</code> is not specified in whole minutes."}],"pos":[24172,24227],"yaml":true},{"content":"The <xref href=\"System.DateTimeOffset.UtcDateTime\"></xref> property is earlier than <xref href=\"System.DateTimeOffset.MinValue\"></xref> or later than <xref href=\"System.DateTimeOffset.MaxValue\"></xref>.  \n  \n -or-  \n  \n <code>ticks</code> is less than `DateTimeOffset.MinValue.Ticks` or greater than `DateTimeOffset.MaxValue.Ticks`.  \n  \n -or-  \n  \n <code>Offset</code> s less than -14 hours or greater than 14 hours.","nodes":[{"pos":[0,202],"content":"The <ph id=\"ph1\">&lt;xref href=\"System.DateTimeOffset.UtcDateTime\"&gt;&lt;/xref&gt;</ph> property is earlier than <ph id=\"ph2\">&lt;xref href=\"System.DateTimeOffset.MinValue\"&gt;&lt;/xref&gt;</ph> or later than <ph id=\"ph3\">&lt;xref href=\"System.DateTimeOffset.MaxValue\"&gt;&lt;/xref&gt;</ph>.","source":"The <xref href=\"System.DateTimeOffset.UtcDateTime\"></xref> property is earlier than <xref href=\"System.DateTimeOffset.MinValue\"></xref> or later than <xref href=\"System.DateTimeOffset.MaxValue\"></xref>."},{"pos":[209,213],"content":"-or-","nodes":[{"content":"-or-","pos":[0,4]}]},{"pos":[220,332],"content":"<ph id=\"ph1\">&lt;code&gt;ticks&lt;/code&gt;</ph> is less than <ph id=\"ph2\">`DateTimeOffset.MinValue.Ticks`</ph> or greater than <ph id=\"ph3\">`DateTimeOffset.MaxValue.Ticks`</ph>.","source":"<code>ticks</code> is less than `DateTimeOffset.MinValue.Ticks` or greater than `DateTimeOffset.MaxValue.Ticks`."},{"pos":[339,343],"content":"-or-","nodes":[{"content":"-or-","pos":[0,4]}]},{"pos":[350,417],"content":"<ph id=\"ph1\">&lt;code&gt;Offset&lt;/code&gt;</ph> s less than -14 hours or greater than 14 hours.","source":"<code>Offset</code> s less than -14 hours or greater than 14 hours."}],"pos":[24341,24775],"yaml":true},{"content":"Initializes a new instance of the <xref href=\"System.DateTimeOffset\"></xref> structure using the specified year, month, day, hour, minute, second, and offset.","nodes":[{"pos":[0,158],"content":"Initializes a new instance of the <ph id=\"ph1\">&lt;xref href=\"System.DateTimeOffset\"&gt;&lt;/xref&gt;</ph> structure using the specified year, month, day, hour, minute, second, and offset.","source":"Initializes a new instance of the <xref href=\"System.DateTimeOffset\"></xref> structure using the specified year, month, day, hour, minute, second, and offset."}],"pos":[26646,26805],"yaml":true},{"content":"This constructor interprets `year`, `month`, and `day` as a year, month, and day in the Gregorian calendar. To instantiate a <xref:System.DateTimeOffset> value by using the year, month, and day in another calendar, call the <xref:System.DateTimeOffset.%23ctor%28System.Int32%2CSystem.Int32%2CSystem.Int32%2CSystem.Int32%2CSystem.Int32%2CSystem.Int32%2CSystem.Int32%2CSystem.Globalization.Calendar%2CSystem.TimeSpan%29> constructor.","nodes":[{"pos":[0,431],"content":"This constructor interprets `year`, `month`, and `day` as a year, month, and day in the Gregorian calendar. To instantiate a <xref:System.DateTimeOffset> value by using the year, month, and day in another calendar, call the <xref:System.DateTimeOffset.%23ctor%28System.Int32%2CSystem.Int32%2CSystem.Int32%2CSystem.Int32%2CSystem.Int32%2CSystem.Int32%2CSystem.Int32%2CSystem.Globalization.Calendar%2CSystem.TimeSpan%29> constructor.","nodes":[{"content":"This constructor interprets <ph id=\"ph1\">`year`</ph>, <ph id=\"ph2\">`month`</ph>, and <ph id=\"ph3\">`day`</ph> as a year, month, and day in the Gregorian calendar.","pos":[0,107],"source":"This constructor interprets `year`, `month`, and `day` as a year, month, and day in the Gregorian calendar."},{"content":"To instantiate a <ph id=\"ph1\">&lt;xref:System.DateTimeOffset&gt;</ph> value by using the year, month, and day in another calendar, call the <ph id=\"ph2\">&lt;xref:System.DateTimeOffset.%23ctor%28System.Int32%2CSystem.Int32%2CSystem.Int32%2CSystem.Int32%2CSystem.Int32%2CSystem.Int32%2CSystem.Int32%2CSystem.Globalization.Calendar%2CSystem.TimeSpan%29&gt;</ph> constructor.","pos":[108,431],"source":" To instantiate a <xref:System.DateTimeOffset> value by using the year, month, and day in another calendar, call the <xref:System.DateTimeOffset.%23ctor%28System.Int32%2CSystem.Int32%2CSystem.Int32%2CSystem.Int32%2CSystem.Int32%2CSystem.Int32%2CSystem.Int32%2CSystem.Globalization.Calendar%2CSystem.TimeSpan%29> constructor."}]}],"pos":[26816,27248],"yaml":true,"extradata":"MT"},{"content":"The year (1 through 9999).","nodes":[{"pos":[0,26],"content":"The year (1 through 9999).","nodes":[{"content":"The year (1 through 9999).","pos":[0,26]}]}],"pos":[28078,28105],"yaml":true},{"content":"The month (1 through 12).","nodes":[{"pos":[0,25],"content":"The month (1 through 12).","nodes":[{"content":"The month (1 through 12).","pos":[0,25]}]}],"pos":[28165,28191],"yaml":true},{"content":"The day (1 through the number of days in <code>month</code>).","nodes":[{"pos":[0,61],"content":"The day (1 through the number of days in <bpt id=\"p1\">&lt;code&gt;</bpt><ph id=\"ph1\">month</ph><ept id=\"p1\">&lt;/code&gt;</ept>).","source":"The day (1 through the number of days in <code>month</code>)."}],"pos":[28249,28311],"yaml":true},{"content":"The hours (0 through 23).","nodes":[{"pos":[0,25],"content":"The hours (0 through 23).","nodes":[{"content":"The hours (0 through 23).","pos":[0,25]}]}],"pos":[28370,28396],"yaml":true},{"content":"The minutes (0 through 59).","nodes":[{"pos":[0,27],"content":"The minutes (0 through 59).","nodes":[{"content":"The minutes (0 through 59).","pos":[0,27]}]}],"pos":[28457,28485],"yaml":true},{"content":"The seconds (0 through 59).","nodes":[{"pos":[0,27],"content":"The seconds (0 through 59).","nodes":[{"content":"The seconds (0 through 59).","pos":[0,27]}]}],"pos":[28546,28574],"yaml":true},{"content":"The time's offset from Coordinated Universal Time (UTC).","nodes":[{"pos":[0,56],"content":"The time's offset from Coordinated Universal Time (UTC).","nodes":[{"content":"The time's offset from Coordinated Universal Time (UTC).","pos":[0,56]}]}],"pos":[28638,28695],"yaml":true},{"content":"<code>offset</code> does not represent whole minutes.","nodes":[{"pos":[0,53],"content":"<ph id=\"ph1\">&lt;code&gt;offset&lt;/code&gt;</ph> does not represent whole minutes.","source":"<code>offset</code> does not represent whole minutes."}],"pos":[28844,28898],"yaml":true},{"content":"<code>year</code> is less than one or greater than 9999.  \n  \n -or-  \n  \n <code>month</code> is less than one or greater than 12.  \n  \n -or-  \n  \n <code>day</code> is less than one or greater than the number of days in <code>month</code>.  \n  \n -or-  \n  \n <code>hour</code> is less than zero or greater than 23.  \n  \n -or-  \n  \n <code>minute</code> is less than 0 or greater than 59.  \n  \n -or-  \n  \n <code>second</code> is less than 0 or greater than 59.  \n  \n -or-  \n  \n <code>offset</code> is less than -14 hours or greater than 14 hours.  \n  \n -or-  \n  \n The <xref href=\"System.DateTimeOffset.UtcDateTime\"></xref> property is earlier than <xref href=\"System.DateTimeOffset.MinValue\"></xref> or later than <xref href=\"System.DateTimeOffset.MaxValue\"></xref>.","nodes":[{"pos":[0,56],"content":"<ph id=\"ph1\">&lt;code&gt;year&lt;/code&gt;</ph> is less than one or greater than 9999.","source":"<code>year</code> is less than one or greater than 9999."},{"pos":[63,67],"content":"-or-","nodes":[{"content":"-or-","pos":[0,4]}]},{"pos":[74,129],"content":"<ph id=\"ph1\">&lt;code&gt;month&lt;/code&gt;</ph> is less than one or greater than 12.","source":"<code>month</code> is less than one or greater than 12."},{"pos":[136,140],"content":"-or-","nodes":[{"content":"-or-","pos":[0,4]}]},{"pos":[147,238],"content":"<ph id=\"ph1\">&lt;code&gt;day&lt;/code&gt;</ph> is less than one or greater than the number of days in <ph id=\"ph2\">&lt;code&gt;month&lt;/code&gt;</ph>.","source":"<code>day</code> is less than one or greater than the number of days in <code>month</code>."},{"pos":[245,249],"content":"-or-","nodes":[{"content":"-or-","pos":[0,4]}]},{"pos":[256,311],"content":"<ph id=\"ph1\">&lt;code&gt;hour&lt;/code&gt;</ph> is less than zero or greater than 23.","source":"<code>hour</code> is less than zero or greater than 23."},{"pos":[318,322],"content":"-or-","nodes":[{"content":"-or-","pos":[0,4]}]},{"pos":[329,383],"content":"<ph id=\"ph1\">&lt;code&gt;minute&lt;/code&gt;</ph> is less than 0 or greater than 59.","source":"<code>minute</code> is less than 0 or greater than 59."},{"pos":[390,394],"content":"-or-","nodes":[{"content":"-or-","pos":[0,4]}]},{"pos":[401,455],"content":"<ph id=\"ph1\">&lt;code&gt;second&lt;/code&gt;</ph> is less than 0 or greater than 59.","source":"<code>second</code> is less than 0 or greater than 59."},{"pos":[462,466],"content":"-or-","nodes":[{"content":"-or-","pos":[0,4]}]},{"pos":[473,541],"content":"<ph id=\"ph1\">&lt;code&gt;offset&lt;/code&gt;</ph> is less than -14 hours or greater than 14 hours.","source":"<code>offset</code> is less than -14 hours or greater than 14 hours."},{"pos":[548,552],"content":"-or-","nodes":[{"content":"-or-","pos":[0,4]}]},{"pos":[559,761],"content":"The <ph id=\"ph1\">&lt;xref href=\"System.DateTimeOffset.UtcDateTime\"&gt;&lt;/xref&gt;</ph> property is earlier than <ph id=\"ph2\">&lt;xref href=\"System.DateTimeOffset.MinValue\"&gt;&lt;/xref&gt;</ph> or later than <ph id=\"ph3\">&lt;xref href=\"System.DateTimeOffset.MaxValue\"&gt;&lt;/xref&gt;</ph>.","source":"The <xref href=\"System.DateTimeOffset.UtcDateTime\"></xref> property is earlier than <xref href=\"System.DateTimeOffset.MinValue\"></xref> or later than <xref href=\"System.DateTimeOffset.MaxValue\"></xref>."}],"pos":[29012,29810],"yaml":true},{"content":"Initializes a new instance of the <xref href=\"System.DateTimeOffset\"></xref> structure using the specified year, month, day, hour, minute, second, millisecond, and offset.","nodes":[{"pos":[0,171],"content":"Initializes a new instance of the <ph id=\"ph1\">&lt;xref href=\"System.DateTimeOffset\"&gt;&lt;/xref&gt;</ph> structure using the specified year, month, day, hour, minute, second, millisecond, and offset.","source":"Initializes a new instance of the <xref href=\"System.DateTimeOffset\"></xref> structure using the specified year, month, day, hour, minute, second, millisecond, and offset."}],"pos":[31741,31913],"yaml":true},{"content":"This constructor interprets `year`, `month`, and `day` as a year, month, and day in the Gregorian calendar. To instantiate a <xref:System.DateTimeOffset> value by using the year, month, and day in another calendar, call the <xref:System.DateTimeOffset.%23ctor%28System.Int32%2CSystem.Int32%2CSystem.Int32%2CSystem.Int32%2CSystem.Int32%2CSystem.Int32%2CSystem.Int32%2CSystem.Globalization.Calendar%2CSystem.TimeSpan%29> constructor.","nodes":[{"pos":[0,431],"content":"This constructor interprets `year`, `month`, and `day` as a year, month, and day in the Gregorian calendar. To instantiate a <xref:System.DateTimeOffset> value by using the year, month, and day in another calendar, call the <xref:System.DateTimeOffset.%23ctor%28System.Int32%2CSystem.Int32%2CSystem.Int32%2CSystem.Int32%2CSystem.Int32%2CSystem.Int32%2CSystem.Int32%2CSystem.Globalization.Calendar%2CSystem.TimeSpan%29> constructor.","nodes":[{"content":"This constructor interprets <ph id=\"ph1\">`year`</ph>, <ph id=\"ph2\">`month`</ph>, and <ph id=\"ph3\">`day`</ph> as a year, month, and day in the Gregorian calendar.","pos":[0,107],"source":"This constructor interprets `year`, `month`, and `day` as a year, month, and day in the Gregorian calendar."},{"content":"To instantiate a <ph id=\"ph1\">&lt;xref:System.DateTimeOffset&gt;</ph> value by using the year, month, and day in another calendar, call the <ph id=\"ph2\">&lt;xref:System.DateTimeOffset.%23ctor%28System.Int32%2CSystem.Int32%2CSystem.Int32%2CSystem.Int32%2CSystem.Int32%2CSystem.Int32%2CSystem.Int32%2CSystem.Globalization.Calendar%2CSystem.TimeSpan%29&gt;</ph> constructor.","pos":[108,431],"source":" To instantiate a <xref:System.DateTimeOffset> value by using the year, month, and day in another calendar, call the <xref:System.DateTimeOffset.%23ctor%28System.Int32%2CSystem.Int32%2CSystem.Int32%2CSystem.Int32%2CSystem.Int32%2CSystem.Int32%2CSystem.Int32%2CSystem.Globalization.Calendar%2CSystem.TimeSpan%29> constructor."}]}],"pos":[31924,32356],"yaml":true,"extradata":"MT"},{"content":"The year (1 through 9999).","nodes":[{"pos":[0,26],"content":"The year (1 through 9999).","nodes":[{"content":"The year (1 through 9999).","pos":[0,26]}]}],"pos":[33218,33245],"yaml":true},{"content":"The month (1 through 12).","nodes":[{"pos":[0,25],"content":"The month (1 through 12).","nodes":[{"content":"The month (1 through 12).","pos":[0,25]}]}],"pos":[33305,33331],"yaml":true},{"content":"The day (1 through the number of days in <code>month</code>).","nodes":[{"pos":[0,61],"content":"The day (1 through the number of days in <bpt id=\"p1\">&lt;code&gt;</bpt><ph id=\"ph1\">month</ph><ept id=\"p1\">&lt;/code&gt;</ept>).","source":"The day (1 through the number of days in <code>month</code>)."}],"pos":[33389,33451],"yaml":true},{"content":"The hours (0 through 23).","nodes":[{"pos":[0,25],"content":"The hours (0 through 23).","nodes":[{"content":"The hours (0 through 23).","pos":[0,25]}]}],"pos":[33510,33536],"yaml":true},{"content":"The minutes (0 through 59).","nodes":[{"pos":[0,27],"content":"The minutes (0 through 59).","nodes":[{"content":"The minutes (0 through 59).","pos":[0,27]}]}],"pos":[33597,33625],"yaml":true},{"content":"The seconds (0 through 59).","nodes":[{"pos":[0,27],"content":"The seconds (0 through 59).","nodes":[{"content":"The seconds (0 through 59).","pos":[0,27]}]}],"pos":[33686,33714],"yaml":true},{"content":"The milliseconds (0 through 999).","nodes":[{"pos":[0,33],"content":"The milliseconds (0 through 999).","nodes":[{"content":"The milliseconds (0 through 999).","pos":[0,33]}]}],"pos":[33780,33814],"yaml":true},{"content":"The time's offset from Coordinated Universal Time (UTC).","nodes":[{"pos":[0,56],"content":"The time's offset from Coordinated Universal Time (UTC).","nodes":[{"content":"The time's offset from Coordinated Universal Time (UTC).","pos":[0,56]}]}],"pos":[33878,33935],"yaml":true},{"content":"<code>offset</code> does not represent whole minutes.","nodes":[{"pos":[0,53],"content":"<ph id=\"ph1\">&lt;code&gt;offset&lt;/code&gt;</ph> does not represent whole minutes.","source":"<code>offset</code> does not represent whole minutes."}],"pos":[34084,34138],"yaml":true},{"content":"<code>year</code> is less than one or greater than 9999.  \n  \n -or-  \n  \n <code>month</code> is less than one or greater than 12.  \n  \n -or-  \n  \n <code>day</code> is less than one or greater than the number of days in <code>month</code>.  \n  \n -or-  \n  \n <code>hour</code> is less than zero or greater than 23.  \n  \n -or-  \n  \n <code>minute</code> is less than 0 or greater than 59.  \n  \n -or-  \n  \n <code>second</code> is less than 0 or greater than 59.  \n  \n -or-  \n  \n <code>millisecond</code> is less than 0 or greater than 999.  \n  \n -or-  \n  \n <code>offset</code> is less than -14 or greater than 14.  \n  \n -or-  \n  \n The <xref href=\"System.DateTimeOffset.UtcDateTime\"></xref> property is earlier than <xref href=\"System.DateTimeOffset.MinValue\"></xref> or later than <xref href=\"System.DateTimeOffset.MaxValue\"></xref>.","nodes":[{"pos":[0,56],"content":"<ph id=\"ph1\">&lt;code&gt;year&lt;/code&gt;</ph> is less than one or greater than 9999.","source":"<code>year</code> is less than one or greater than 9999."},{"pos":[63,67],"content":"-or-","nodes":[{"content":"-or-","pos":[0,4]}]},{"pos":[74,129],"content":"<ph id=\"ph1\">&lt;code&gt;month&lt;/code&gt;</ph> is less than one or greater than 12.","source":"<code>month</code> is less than one or greater than 12."},{"pos":[136,140],"content":"-or-","nodes":[{"content":"-or-","pos":[0,4]}]},{"pos":[147,238],"content":"<ph id=\"ph1\">&lt;code&gt;day&lt;/code&gt;</ph> is less than one or greater than the number of days in <ph id=\"ph2\">&lt;code&gt;month&lt;/code&gt;</ph>.","source":"<code>day</code> is less than one or greater than the number of days in <code>month</code>."},{"pos":[245,249],"content":"-or-","nodes":[{"content":"-or-","pos":[0,4]}]},{"pos":[256,311],"content":"<ph id=\"ph1\">&lt;code&gt;hour&lt;/code&gt;</ph> is less than zero or greater than 23.","source":"<code>hour</code> is less than zero or greater than 23."},{"pos":[318,322],"content":"-or-","nodes":[{"content":"-or-","pos":[0,4]}]},{"pos":[329,383],"content":"<ph id=\"ph1\">&lt;code&gt;minute&lt;/code&gt;</ph> is less than 0 or greater than 59.","source":"<code>minute</code> is less than 0 or greater than 59."},{"pos":[390,394],"content":"-or-","nodes":[{"content":"-or-","pos":[0,4]}]},{"pos":[401,455],"content":"<ph id=\"ph1\">&lt;code&gt;second&lt;/code&gt;</ph> is less than 0 or greater than 59.","source":"<code>second</code> is less than 0 or greater than 59."},{"pos":[462,466],"content":"-or-","nodes":[{"content":"-or-","pos":[0,4]}]},{"pos":[473,533],"content":"<ph id=\"ph1\">&lt;code&gt;millisecond&lt;/code&gt;</ph> is less than 0 or greater than 999.","source":"<code>millisecond</code> is less than 0 or greater than 999."},{"pos":[540,544],"content":"-or-","nodes":[{"content":"-or-","pos":[0,4]}]},{"pos":[551,607],"content":"<ph id=\"ph1\">&lt;code&gt;offset&lt;/code&gt;</ph> is less than -14 or greater than 14.","source":"<code>offset</code> is less than -14 or greater than 14."},{"pos":[614,618],"content":"-or-","nodes":[{"content":"-or-","pos":[0,4]}]},{"pos":[625,827],"content":"The <ph id=\"ph1\">&lt;xref href=\"System.DateTimeOffset.UtcDateTime\"&gt;&lt;/xref&gt;</ph> property is earlier than <ph id=\"ph2\">&lt;xref href=\"System.DateTimeOffset.MinValue\"&gt;&lt;/xref&gt;</ph> or later than <ph id=\"ph3\">&lt;xref href=\"System.DateTimeOffset.MaxValue\"&gt;&lt;/xref&gt;</ph>.","source":"The <xref href=\"System.DateTimeOffset.UtcDateTime\"></xref> property is earlier than <xref href=\"System.DateTimeOffset.MinValue\"></xref> or later than <xref href=\"System.DateTimeOffset.MaxValue\"></xref>."}],"pos":[34252,35120],"yaml":true},{"content":"Initializes a new instance of the <xref href=\"System.DateTimeOffset\"></xref> structure using the specified year, month, day, hour, minute, second, millisecond, and offset of a specified calendar.","nodes":[{"pos":[0,195],"content":"Initializes a new instance of the <ph id=\"ph1\">&lt;xref href=\"System.DateTimeOffset\"&gt;&lt;/xref&gt;</ph> structure using the specified year, month, day, hour, minute, second, millisecond, and offset of a specified calendar.","source":"Initializes a new instance of the <xref href=\"System.DateTimeOffset\"></xref> structure using the specified year, month, day, hour, minute, second, millisecond, and offset of a specified calendar."}],"pos":[37171,37367],"yaml":true},{"content":"The `year`, `month`, `day`, `hour`, `minute`, `second`, and `millisecond` parameters all reflect values expressed in the calendar specified by the `calendar` parameter. An exception is thrown if these values form a date and time that cannot be expressed by using this calendar.","nodes":[{"pos":[0,277],"content":"The `year`, `month`, `day`, `hour`, `minute`, `second`, and `millisecond` parameters all reflect values expressed in the calendar specified by the `calendar` parameter. An exception is thrown if these values form a date and time that cannot be expressed by using this calendar.","nodes":[{"content":"The <ph id=\"ph1\">`year`</ph>, <ph id=\"ph2\">`month`</ph>, <ph id=\"ph3\">`day`</ph>, <ph id=\"ph4\">`hour`</ph>, <ph id=\"ph5\">`minute`</ph>, <ph id=\"ph6\">`second`</ph>, and <ph id=\"ph7\">`millisecond`</ph> parameters all reflect values expressed in the calendar specified by the <ph id=\"ph8\">`calendar`</ph> parameter.","pos":[0,168],"source":"The `year`, `month`, `day`, `hour`, `minute`, `second`, and `millisecond` parameters all reflect values expressed in the calendar specified by the `calendar` parameter."},{"content":"An exception is thrown if these values form a date and time that cannot be expressed by using this calendar.","pos":[169,277]}]}],"pos":[37378,37656],"yaml":true,"extradata":"MT"},{"content":"The year.","nodes":[{"pos":[0,9],"content":"The year.","nodes":[{"content":"The year.","pos":[0,9]}]}],"pos":[38571,38581],"yaml":true},{"content":"The month (1 through 12).","nodes":[{"pos":[0,25],"content":"The month (1 through 12).","nodes":[{"content":"The month (1 through 12).","pos":[0,25]}]}],"pos":[38641,38667],"yaml":true},{"content":"The day (1 through the number of days in <code>month</code>).","nodes":[{"pos":[0,61],"content":"The day (1 through the number of days in <bpt id=\"p1\">&lt;code&gt;</bpt><ph id=\"ph1\">month</ph><ept id=\"p1\">&lt;/code&gt;</ept>).","source":"The day (1 through the number of days in <code>month</code>)."}],"pos":[38725,38787],"yaml":true},{"content":"The hours (0 through 23).","nodes":[{"pos":[0,25],"content":"The hours (0 through 23).","nodes":[{"content":"The hours (0 through 23).","pos":[0,25]}]}],"pos":[38846,38872],"yaml":true},{"content":"The minutes (0 through 59).","nodes":[{"pos":[0,27],"content":"The minutes (0 through 59).","nodes":[{"content":"The minutes (0 through 59).","pos":[0,27]}]}],"pos":[38933,38961],"yaml":true},{"content":"The seconds (0 through 59).","nodes":[{"pos":[0,27],"content":"The seconds (0 through 59).","nodes":[{"content":"The seconds (0 through 59).","pos":[0,27]}]}],"pos":[39022,39050],"yaml":true},{"content":"The milliseconds (0 through 999).","nodes":[{"pos":[0,33],"content":"The milliseconds (0 through 999).","nodes":[{"content":"The milliseconds (0 through 999).","pos":[0,33]}]}],"pos":[39116,39150],"yaml":true},{"content":"The calendar that is used to interpret <code>year</code>, <code>month</code>, and <code>day</code>.","nodes":[{"pos":[0,99],"content":"The calendar that is used to interpret <bpt id=\"p1\">&lt;code&gt;</bpt><ph id=\"ph1\">year</ph><ept id=\"p1\">&lt;/code&gt;</ept>, <bpt id=\"p2\">&lt;code&gt;</bpt><ph id=\"ph2\">month</ph><ept id=\"p2\">&lt;/code&gt;</ept>, and <bpt id=\"p3\">&lt;code&gt;</bpt><ph id=\"ph3\">day</ph><ept id=\"p3\">&lt;/code&gt;</ept>.","source":"The calendar that is used to interpret <code>year</code>, <code>month</code>, and <code>day</code>."}],"pos":[39230,39330],"yaml":true},{"content":"The time's offset from Coordinated Universal Time (UTC).","nodes":[{"pos":[0,56],"content":"The time's offset from Coordinated Universal Time (UTC).","nodes":[{"content":"The time's offset from Coordinated Universal Time (UTC).","pos":[0,56]}]}],"pos":[39394,39451],"yaml":true},{"content":"<code>offset</code> does not represent whole minutes.","nodes":[{"pos":[0,53],"content":"<ph id=\"ph1\">&lt;code&gt;offset&lt;/code&gt;</ph> does not represent whole minutes.","source":"<code>offset</code> does not represent whole minutes."}],"pos":[39600,39654],"yaml":true},{"content":"<code>calendar</code> cannot be `null`.","nodes":[{"pos":[0,39],"content":"<ph id=\"ph1\">&lt;code&gt;calendar&lt;/code&gt;</ph> cannot be <ph id=\"ph2\">`null`</ph>.","source":"<code>calendar</code> cannot be `null`."}],"pos":[39756,39796],"yaml":true},{"content":"<code>year</code> is less than the <code>calendar</code> parameter's `MinSupportedDateTime.Year` or greater than `MaxSupportedDateTime.Year`.  \n  \n -or-  \n  \n <code>month</code> is either less than or greater than the number of months in <code>year</code> in the <code>calendar</code>.  \n  \n -or-  \n  \n <code>day</code> is less than one or greater than the number of days in <code>month</code>.  \n  \n -or-  \n  \n <code>hour</code> is less than zero or greater than 23.  \n  \n -or-  \n  \n <code>minute</code> is less than 0 or greater than 59.  \n  \n -or-  \n  \n <code>second</code> is less than 0 or greater than 59.  \n  \n -or-  \n  \n <code>millisecond</code> is less than 0 or greater than 999.  \n  \n -or-  \n  \n <code>offset</code> is less than -14 hours or greater than 14 hours.  \n  \n -or-  \n  \n The <code>year</code>, <code>month</code>, and <code>day</code> parameters cannot be represented as a date and time value.  \n  \n -or-  \n  \n The <xref href=\"System.DateTimeOffset.UtcDateTime\"></xref> property is earlier than <xref href=\"System.DateTimeOffset.MinValue\"></xref> or later than <xref href=\"System.DateTimeOffset.MaxValue\"></xref>.","nodes":[{"pos":[0,141],"content":"<ph id=\"ph1\">&lt;code&gt;year&lt;/code&gt;</ph> is less than the <ph id=\"ph2\">&lt;code&gt;calendar&lt;/code&gt;</ph> parameter's <ph id=\"ph3\">`MinSupportedDateTime.Year`</ph> or greater than <ph id=\"ph4\">`MaxSupportedDateTime.Year`</ph>.","source":"<code>year</code> is less than the <code>calendar</code> parameter's `MinSupportedDateTime.Year` or greater than `MaxSupportedDateTime.Year`."},{"pos":[148,152],"content":"-or-","nodes":[{"content":"-or-","pos":[0,4]}]},{"pos":[159,285],"content":"<ph id=\"ph1\">&lt;code&gt;month&lt;/code&gt;</ph> is either less than or greater than the number of months in <ph id=\"ph2\">&lt;code&gt;year&lt;/code&gt;</ph> in the <ph id=\"ph3\">&lt;code&gt;calendar&lt;/code&gt;</ph>.","source":"<code>month</code> is either less than or greater than the number of months in <code>year</code> in the <code>calendar</code>."},{"pos":[292,296],"content":"-or-","nodes":[{"content":"-or-","pos":[0,4]}]},{"pos":[303,394],"content":"<ph id=\"ph1\">&lt;code&gt;day&lt;/code&gt;</ph> is less than one or greater than the number of days in <ph id=\"ph2\">&lt;code&gt;month&lt;/code&gt;</ph>.","source":"<code>day</code> is less than one or greater than the number of days in <code>month</code>."},{"pos":[401,405],"content":"-or-","nodes":[{"content":"-or-","pos":[0,4]}]},{"pos":[412,467],"content":"<ph id=\"ph1\">&lt;code&gt;hour&lt;/code&gt;</ph> is less than zero or greater than 23.","source":"<code>hour</code> is less than zero or greater than 23."},{"pos":[474,478],"content":"-or-","nodes":[{"content":"-or-","pos":[0,4]}]},{"pos":[485,539],"content":"<ph id=\"ph1\">&lt;code&gt;minute&lt;/code&gt;</ph> is less than 0 or greater than 59.","source":"<code>minute</code> is less than 0 or greater than 59."},{"pos":[546,550],"content":"-or-","nodes":[{"content":"-or-","pos":[0,4]}]},{"pos":[557,611],"content":"<ph id=\"ph1\">&lt;code&gt;second&lt;/code&gt;</ph> is less than 0 or greater than 59.","source":"<code>second</code> is less than 0 or greater than 59."},{"pos":[618,622],"content":"-or-","nodes":[{"content":"-or-","pos":[0,4]}]},{"pos":[629,689],"content":"<ph id=\"ph1\">&lt;code&gt;millisecond&lt;/code&gt;</ph> is less than 0 or greater than 999.","source":"<code>millisecond</code> is less than 0 or greater than 999."},{"pos":[696,700],"content":"-or-","nodes":[{"content":"-or-","pos":[0,4]}]},{"pos":[707,775],"content":"<ph id=\"ph1\">&lt;code&gt;offset&lt;/code&gt;</ph> is less than -14 hours or greater than 14 hours.","source":"<code>offset</code> is less than -14 hours or greater than 14 hours."},{"pos":[782,786],"content":"-or-","nodes":[{"content":"-or-","pos":[0,4]}]},{"pos":[793,915],"content":"The <bpt id=\"p1\">&lt;code&gt;</bpt><ph id=\"ph1\">year</ph><ept id=\"p1\">&lt;/code&gt;</ept>, <bpt id=\"p2\">&lt;code&gt;</bpt><ph id=\"ph2\">month</ph><ept id=\"p2\">&lt;/code&gt;</ept>, and <bpt id=\"p3\">&lt;code&gt;</bpt><ph id=\"ph3\">day</ph><ept id=\"p3\">&lt;/code&gt;</ept> parameters cannot be represented as a date and time value.","source":"The <code>year</code>, <code>month</code>, and <code>day</code> parameters cannot be represented as a date and time value."},{"pos":[922,926],"content":"-or-","nodes":[{"content":"-or-","pos":[0,4]}]},{"pos":[933,1135],"content":"The <ph id=\"ph1\">&lt;xref href=\"System.DateTimeOffset.UtcDateTime\"&gt;&lt;/xref&gt;</ph> property is earlier than <ph id=\"ph2\">&lt;xref href=\"System.DateTimeOffset.MinValue\"&gt;&lt;/xref&gt;</ph> or later than <ph id=\"ph3\">&lt;xref href=\"System.DateTimeOffset.MaxValue\"&gt;&lt;/xref&gt;</ph>.","source":"The <xref href=\"System.DateTimeOffset.UtcDateTime\"></xref> property is earlier than <xref href=\"System.DateTimeOffset.MinValue\"></xref> or later than <xref href=\"System.DateTimeOffset.MaxValue\"></xref>."}],"pos":[39910,41090],"yaml":true},{"content":"Returns a new <xref href=\"System.DateTimeOffset\"></xref> object that adds a specified time interval to the value of this instance.","nodes":[{"pos":[0,130],"content":"Returns a new <ph id=\"ph1\">&lt;xref href=\"System.DateTimeOffset\"&gt;&lt;/xref&gt;</ph> object that adds a specified time interval to the value of this instance.","source":"Returns a new <xref href=\"System.DateTimeOffset\"></xref> object that adds a specified time interval to the value of this instance."}],"pos":[42211,42342],"yaml":true},{"content":"You can use the <xref:System.DateTimeOffset.Add%2A> method to add more than one kind of time interval (days, hours, minutes, seconds, or milliseconds) in a single operation. This method's behavior is identical to the addition operator. The <xref:System.DateTimeOffset> structure also supports specialized addition methods (such as <xref:System.DateTimeOffset.AddDays%2A>, <xref:System.DateTimeOffset.AddHours%2A>, and <xref:System.DateTimeOffset.AddMinutes%2A>) for each time interval.  \n  \n> [!NOTE]\n>  This method returns a new <xref:System.DateTimeOffset> object. It does not modify the value of the current object by adding `timeSpan` to its date and time.  \n  \n The <xref:System.DateTimeOffset.Add%2A> method does not affect the value of the current <xref:System.DateTimeOffset> object's <xref:System.DateTimeOffset.Offset%2A> property.  \n  \n Because a <xref:System.DateTimeOffset> object does not represent the date and time in a specific time zone, the <xref:System.DateTimeOffset.Add%2A> method does not consider a particular time zone's adjustment rules when it performs date and time arithmetic.  \n  \n If the `timeSpan` parameter is `null`, this method returns the value of the original <xref:System.DateTimeOffset> object unchanged.","nodes":[{"pos":[0,485],"content":"You can use the <xref:System.DateTimeOffset.Add%2A> method to add more than one kind of time interval (days, hours, minutes, seconds, or milliseconds) in a single operation. This method's behavior is identical to the addition operator. The <xref:System.DateTimeOffset> structure also supports specialized addition methods (such as <xref:System.DateTimeOffset.AddDays%2A>, <xref:System.DateTimeOffset.AddHours%2A>, and <xref:System.DateTimeOffset.AddMinutes%2A>) for each time interval.","nodes":[{"content":"You can use the <xref:System.DateTimeOffset.Add%2A> method to add more than one kind of time interval (days, hours, minutes, seconds, or milliseconds) in a single operation. This method's behavior is identical to the addition operator. The <xref:System.DateTimeOffset> structure also supports specialized addition methods (such as <xref:System.DateTimeOffset.AddDays%2A>, <xref:System.DateTimeOffset.AddHours%2A>, and <xref:System.DateTimeOffset.AddMinutes%2A>) for each time interval.","pos":[0,485],"nodes":[{"content":"You can use the <ph id=\"ph1\">&lt;xref:System.DateTimeOffset.Add%2A&gt;</ph> method to add more than one kind of time interval (days, hours, minutes, seconds, or milliseconds) in a single operation.","pos":[0,173],"source":"You can use the <xref:System.DateTimeOffset.Add%2A> method to add more than one kind of time interval (days, hours, minutes, seconds, or milliseconds) in a single operation."},{"content":"This method's behavior is identical to the addition operator.","pos":[174,235]},{"content":"The <ph id=\"ph1\">&lt;xref:System.DateTimeOffset&gt;</ph> structure also supports specialized addition methods (such as <ph id=\"ph2\">&lt;xref:System.DateTimeOffset.AddDays%2A&gt;</ph>, <ph id=\"ph3\">&lt;xref:System.DateTimeOffset.AddHours%2A&gt;</ph>, and <ph id=\"ph4\">&lt;xref:System.DateTimeOffset.AddMinutes%2A&gt;</ph>) for each time interval.","pos":[236,485],"source":" The <xref:System.DateTimeOffset> structure also supports specialized addition methods (such as <xref:System.DateTimeOffset.AddDays%2A>, <xref:System.DateTimeOffset.AddHours%2A>, and <xref:System.DateTimeOffset.AddMinutes%2A>) for each time interval."}]}]},{"pos":[493,660],"content":"[!NOTE]\n This method returns a new <xref:System.DateTimeOffset> object. It does not modify the value of the current object by adding `timeSpan` to its date and time.","leadings":["","> "],"nodes":[{"content":" This method returns a new <xref:System.DateTimeOffset> object. It does not modify the value of the current object by adding `timeSpan` to its date and time.","pos":[8,165],"nodes":[{"content":"This method returns a new <ph id=\"ph1\">&lt;xref:System.DateTimeOffset&gt;</ph> object.","pos":[1,63],"source":" This method returns a new <xref:System.DateTimeOffset> object."},{"content":"It does not modify the value of the current object by adding <ph id=\"ph1\">`timeSpan`</ph> to its date and time.","pos":[64,157],"source":" It does not modify the value of the current object by adding `timeSpan` to its date and time."}]}]},{"pos":[667,841],"content":"The <xref:System.DateTimeOffset.Add%2A> method does not affect the value of the current <xref:System.DateTimeOffset> object's <xref:System.DateTimeOffset.Offset%2A> property.","nodes":[{"content":"The <ph id=\"ph1\">&lt;xref:System.DateTimeOffset.Add%2A&gt;</ph> method does not affect the value of the current <ph id=\"ph2\">&lt;xref:System.DateTimeOffset&gt;</ph> object's <ph id=\"ph3\">&lt;xref:System.DateTimeOffset.Offset%2A&gt;</ph> property.","pos":[0,174],"source":"The <xref:System.DateTimeOffset.Add%2A> method does not affect the value of the current <xref:System.DateTimeOffset> object's <xref:System.DateTimeOffset.Offset%2A> property."}]},{"pos":[848,1105],"content":"Because a <xref:System.DateTimeOffset> object does not represent the date and time in a specific time zone, the <xref:System.DateTimeOffset.Add%2A> method does not consider a particular time zone's adjustment rules when it performs date and time arithmetic.","nodes":[{"content":"Because a <ph id=\"ph1\">&lt;xref:System.DateTimeOffset&gt;</ph> object does not represent the date and time in a specific time zone, the <ph id=\"ph2\">&lt;xref:System.DateTimeOffset.Add%2A&gt;</ph> method does not consider a particular time zone's adjustment rules when it performs date and time arithmetic.","pos":[0,257],"source":"Because a <xref:System.DateTimeOffset> object does not represent the date and time in a specific time zone, the <xref:System.DateTimeOffset.Add%2A> method does not consider a particular time zone's adjustment rules when it performs date and time arithmetic."}]},{"pos":[1112,1243],"content":"If the <ph id=\"ph1\">`timeSpan`</ph> parameter is <ph id=\"ph2\">`null`</ph>, this method returns the value of the original <ph id=\"ph3\">&lt;xref:System.DateTimeOffset&gt;</ph> object unchanged.","source":"If the `timeSpan` parameter is `null`, this method returns the value of the original <xref:System.DateTimeOffset> object unchanged."}],"pos":[42353,43608],"yaml":true,"extradata":"MT"},{"content":"A <xref href=\"System.TimeSpan\"></xref> object that represents a positive or a negative time interval.","nodes":[{"pos":[0,101],"content":"A <ph id=\"ph1\">&lt;xref href=\"System.TimeSpan\"&gt;&lt;/xref&gt;</ph> object that represents a positive or a negative time interval.","source":"A <xref href=\"System.TimeSpan\"></xref> object that represents a positive or a negative time interval."}],"pos":[44430,44532],"yaml":true},{"content":"An object whose value is the sum of the date and time represented by the current <xref href=\"System.DateTimeOffset\"></xref> object and the time interval represented by <code>timeSpan</code>.","nodes":[{"pos":[0,190],"content":"An object whose value is the sum of the date and time represented by the current <ph id=\"ph1\">&lt;xref href=\"System.DateTimeOffset\"&gt;&lt;/xref&gt;</ph> object and the time interval represented by <bpt id=\"p1\">&lt;code&gt;</bpt><ph id=\"ph2\">timeSpan</ph><ept id=\"p1\">&lt;/code&gt;</ept>.","source":"An object whose value is the sum of the date and time represented by the current <xref href=\"System.DateTimeOffset\"></xref> object and the time interval represented by <code>timeSpan</code>."}],"pos":[44597,44788],"yaml":true},{"content":"The resulting <xref href=\"System.DateTimeOffset\"></xref> value is less than <xref href=\"System.DateTimeOffset.MinValue\"></xref>.  \n  \n -or-  \n  \n The resulting <xref href=\"System.DateTimeOffset\"></xref> value is greater than <xref href=\"System.DateTimeOffset.MaxValue\"></xref>.","nodes":[{"pos":[0,128],"content":"The resulting <ph id=\"ph1\">&lt;xref href=\"System.DateTimeOffset\"&gt;&lt;/xref&gt;</ph> value is less than <ph id=\"ph2\">&lt;xref href=\"System.DateTimeOffset.MinValue\"&gt;&lt;/xref&gt;</ph>.","source":"The resulting <xref href=\"System.DateTimeOffset\"></xref> value is less than <xref href=\"System.DateTimeOffset.MinValue\"></xref>."},{"pos":[135,139],"content":"-or-","nodes":[{"content":"-or-","pos":[0,4]}]},{"pos":[146,277],"content":"The resulting <ph id=\"ph1\">&lt;xref href=\"System.DateTimeOffset\"&gt;&lt;/xref&gt;</ph> value is greater than <ph id=\"ph2\">&lt;xref href=\"System.DateTimeOffset.MaxValue\"&gt;&lt;/xref&gt;</ph>.","source":"The resulting <xref href=\"System.DateTimeOffset\"></xref> value is greater than <xref href=\"System.DateTimeOffset.MaxValue\"></xref>."}],"pos":[44955,45247],"yaml":true},{"content":"Returns a new <xref href=\"System.DateTimeOffset\"></xref> object that adds a specified number of whole and fractional days to the value of this instance.","nodes":[{"pos":[0,152],"content":"Returns a new <ph id=\"ph1\">&lt;xref href=\"System.DateTimeOffset\"&gt;&lt;/xref&gt;</ph> object that adds a specified number of whole and fractional days to the value of this instance.","source":"Returns a new <xref href=\"System.DateTimeOffset\"></xref> object that adds a specified number of whole and fractional days to the value of this instance."}],"pos":[46724,46877],"yaml":true},{"content":"The fractional part of the `days` parameter is the fractional part of a day. For example, 4.5 is equivalent to 4 days, 12 hours, 0 minutes, 0 seconds, 0 milliseconds. The `days` parameter is rounded to the nearest millisecond.  \n  \n> [!NOTE]\n>  This method returns a new <xref:System.DateTimeOffset> object. It does not modify the value of the current object by adding `days` to its date and time.  \n  \n Because a <xref:System.DateTimeOffset> object does not represent the date and time in a specific time zone, the <xref:System.DateTimeOffset.AddDays%2A> method does not consider a particular time zone's adjustment rules when it performs date and time arithmetic.  \n  \n Converting time intervals of less than a day to a fraction can involve a loss of precision. If this is problematic, you can use the <xref:System.DateTimeOffset.Add%2A> method, which enables you to specify more than one kind of time interval in a single method call and eliminates the need to convert time intervals to fractional parts of a day.","nodes":[{"pos":[0,226],"content":"The fractional part of the `days` parameter is the fractional part of a day. For example, 4.5 is equivalent to 4 days, 12 hours, 0 minutes, 0 seconds, 0 milliseconds. The `days` parameter is rounded to the nearest millisecond.","nodes":[{"content":"The fractional part of the <ph id=\"ph1\">`days`</ph> parameter is the fractional part of a day.","pos":[0,76],"source":"The fractional part of the `days` parameter is the fractional part of a day."},{"content":"For example, 4.5 is equivalent to 4 days, 12 hours, 0 minutes, 0 seconds, 0 milliseconds.","pos":[77,166]},{"content":"The <ph id=\"ph1\">`days`</ph> parameter is rounded to the nearest millisecond.","pos":[167,226],"source":" The `days` parameter is rounded to the nearest millisecond."}]},{"pos":[234,397],"content":"[!NOTE]\n This method returns a new <xref:System.DateTimeOffset> object. It does not modify the value of the current object by adding `days` to its date and time.","leadings":["","> "],"nodes":[{"content":" This method returns a new <xref:System.DateTimeOffset> object. It does not modify the value of the current object by adding `days` to its date and time.","pos":[8,161],"nodes":[{"content":"This method returns a new <ph id=\"ph1\">&lt;xref:System.DateTimeOffset&gt;</ph> object.","pos":[1,63],"source":" This method returns a new <xref:System.DateTimeOffset> object."},{"content":"It does not modify the value of the current object by adding <ph id=\"ph1\">`days`</ph> to its date and time.","pos":[64,153],"source":" It does not modify the value of the current object by adding `days` to its date and time."}]}]},{"pos":[404,665],"content":"Because a <xref:System.DateTimeOffset> object does not represent the date and time in a specific time zone, the <xref:System.DateTimeOffset.AddDays%2A> method does not consider a particular time zone's adjustment rules when it performs date and time arithmetic.","nodes":[{"content":"Because a <ph id=\"ph1\">&lt;xref:System.DateTimeOffset&gt;</ph> object does not represent the date and time in a specific time zone, the <ph id=\"ph2\">&lt;xref:System.DateTimeOffset.AddDays%2A&gt;</ph> method does not consider a particular time zone's adjustment rules when it performs date and time arithmetic.","pos":[0,261],"source":"Because a <xref:System.DateTimeOffset> object does not represent the date and time in a specific time zone, the <xref:System.DateTimeOffset.AddDays%2A> method does not consider a particular time zone's adjustment rules when it performs date and time arithmetic."}]},{"pos":[672,1016],"content":"Converting time intervals of less than a day to a fraction can involve a loss of precision. If this is problematic, you can use the <xref:System.DateTimeOffset.Add%2A> method, which enables you to specify more than one kind of time interval in a single method call and eliminates the need to convert time intervals to fractional parts of a day.","nodes":[{"content":"Converting time intervals of less than a day to a fraction can involve a loss of precision. If this is problematic, you can use the <xref:System.DateTimeOffset.Add%2A> method, which enables you to specify more than one kind of time interval in a single method call and eliminates the need to convert time intervals to fractional parts of a day.","pos":[0,344],"nodes":[{"content":"Converting time intervals of less than a day to a fraction can involve a loss of precision.","pos":[0,91]},{"content":"If this is problematic, you can use the <ph id=\"ph1\">&lt;xref:System.DateTimeOffset.Add%2A&gt;</ph> method, which enables you to specify more than one kind of time interval in a single method call and eliminates the need to convert time intervals to fractional parts of a day.","pos":[92,344],"source":" If this is problematic, you can use the <xref:System.DateTimeOffset.Add%2A> method, which enables you to specify more than one kind of time interval in a single method call and eliminates the need to convert time intervals to fractional parts of a day."}]}]}],"pos":[46888,47914],"yaml":true,"extradata":"MT"},{"content":"A number of whole and fractional days. The number can be negative or positive.","nodes":[{"pos":[0,78],"content":"A number of whole and fractional days. The number can be negative or positive.","nodes":[{"content":"A number of whole and fractional days. The number can be negative or positive.","pos":[0,78],"nodes":[{"content":"A number of whole and fractional days.","pos":[0,38]},{"content":"The number can be negative or positive.","pos":[39,78]}]}]}],"pos":[48534,48613],"yaml":true},{"content":"An object whose value is the sum of the date and time represented by the current <xref href=\"System.DateTimeOffset\"></xref> object and the number of days represented by <code>days</code>.","nodes":[{"pos":[0,187],"content":"An object whose value is the sum of the date and time represented by the current <ph id=\"ph1\">&lt;xref href=\"System.DateTimeOffset\"&gt;&lt;/xref&gt;</ph> object and the number of days represented by <bpt id=\"p1\">&lt;code&gt;</bpt><ph id=\"ph2\">days</ph><ept id=\"p1\">&lt;/code&gt;</ept>.","source":"An object whose value is the sum of the date and time represented by the current <xref href=\"System.DateTimeOffset\"></xref> object and the number of days represented by <code>days</code>."}],"pos":[48678,48866],"yaml":true},{"content":"The resulting <xref href=\"System.DateTimeOffset\"></xref> value is less than <xref href=\"System.DateTimeOffset.MinValue\"></xref>.  \n  \n -or-  \n  \n The resulting <xref href=\"System.DateTimeOffset\"></xref> value is greater than <xref href=\"System.DateTimeOffset.MaxValue\"></xref>.","nodes":[{"pos":[0,128],"content":"The resulting <ph id=\"ph1\">&lt;xref href=\"System.DateTimeOffset\"&gt;&lt;/xref&gt;</ph> value is less than <ph id=\"ph2\">&lt;xref href=\"System.DateTimeOffset.MinValue\"&gt;&lt;/xref&gt;</ph>.","source":"The resulting <xref href=\"System.DateTimeOffset\"></xref> value is less than <xref href=\"System.DateTimeOffset.MinValue\"></xref>."},{"pos":[135,139],"content":"-or-","nodes":[{"content":"-or-","pos":[0,4]}]},{"pos":[146,277],"content":"The resulting <ph id=\"ph1\">&lt;xref href=\"System.DateTimeOffset\"&gt;&lt;/xref&gt;</ph> value is greater than <ph id=\"ph2\">&lt;xref href=\"System.DateTimeOffset.MaxValue\"&gt;&lt;/xref&gt;</ph>.","source":"The resulting <xref href=\"System.DateTimeOffset\"></xref> value is greater than <xref href=\"System.DateTimeOffset.MaxValue\"></xref>."}],"pos":[49037,49329],"yaml":true},{"content":"Returns a new <xref href=\"System.DateTimeOffset\"></xref> object that adds a specified number of whole and fractional hours to the value of this instance.","nodes":[{"pos":[0,153],"content":"Returns a new <ph id=\"ph1\">&lt;xref href=\"System.DateTimeOffset\"&gt;&lt;/xref&gt;</ph> object that adds a specified number of whole and fractional hours to the value of this instance.","source":"Returns a new <xref href=\"System.DateTimeOffset\"></xref> object that adds a specified number of whole and fractional hours to the value of this instance."}],"pos":[50812,50966],"yaml":true},{"content":"The fractional part of the `hours` parameter is the fractional part of an hour. For example, 4.5 is equivalent to 4 hours, 30 minutes, 0 seconds, 0 milliseconds. The `hours` parameter is rounded to the nearest millisecond.  \n  \n> [!NOTE]\n>  This method returns a new <xref:System.DateTimeOffset> object. It does not modify the value of the current object by adding `hours` to its date and time.  \n  \n Because a <xref:System.DateTimeOffset> object does not represent the date and time in a specific time zone, the <xref:System.DateTimeOffset.AddHours%2A> method does not consider a particular time zone's adjustment rules when it performs date and time arithmetic.  \n  \n Converting time intervals of less than an hour to a fraction can involve a loss of precision. (For example, one minute is 0.01666 of an hour.) If this is problematic, you can use the <xref:System.DateTimeOffset.Add%2A> method, which enables you to specify more than one kind of time interval in a single method call and eliminates the need to convert time intervals to fractional parts of an hour.","nodes":[{"pos":[0,222],"content":"The fractional part of the `hours` parameter is the fractional part of an hour. For example, 4.5 is equivalent to 4 hours, 30 minutes, 0 seconds, 0 milliseconds. The `hours` parameter is rounded to the nearest millisecond.","nodes":[{"content":"The fractional part of the <ph id=\"ph1\">`hours`</ph> parameter is the fractional part of an hour.","pos":[0,79],"source":"The fractional part of the `hours` parameter is the fractional part of an hour."},{"content":"For example, 4.5 is equivalent to 4 hours, 30 minutes, 0 seconds, 0 milliseconds.","pos":[80,161]},{"content":"The <ph id=\"ph1\">`hours`</ph> parameter is rounded to the nearest millisecond.","pos":[162,222],"source":" The `hours` parameter is rounded to the nearest millisecond."}]},{"pos":[230,394],"content":"[!NOTE]\n This method returns a new <xref:System.DateTimeOffset> object. It does not modify the value of the current object by adding `hours` to its date and time.","leadings":["","> "],"nodes":[{"content":" This method returns a new <xref:System.DateTimeOffset> object. It does not modify the value of the current object by adding `hours` to its date and time.","pos":[8,162],"nodes":[{"content":"This method returns a new <ph id=\"ph1\">&lt;xref:System.DateTimeOffset&gt;</ph> object.","pos":[1,63],"source":" This method returns a new <xref:System.DateTimeOffset> object."},{"content":"It does not modify the value of the current object by adding <ph id=\"ph1\">`hours`</ph> to its date and time.","pos":[64,154],"source":" It does not modify the value of the current object by adding `hours` to its date and time."}]}]},{"pos":[401,663],"content":"Because a <xref:System.DateTimeOffset> object does not represent the date and time in a specific time zone, the <xref:System.DateTimeOffset.AddHours%2A> method does not consider a particular time zone's adjustment rules when it performs date and time arithmetic.","nodes":[{"content":"Because a <ph id=\"ph1\">&lt;xref:System.DateTimeOffset&gt;</ph> object does not represent the date and time in a specific time zone, the <ph id=\"ph2\">&lt;xref:System.DateTimeOffset.AddHours%2A&gt;</ph> method does not consider a particular time zone's adjustment rules when it performs date and time arithmetic.","pos":[0,262],"source":"Because a <xref:System.DateTimeOffset> object does not represent the date and time in a specific time zone, the <xref:System.DateTimeOffset.AddHours%2A> method does not consider a particular time zone's adjustment rules when it performs date and time arithmetic."}]},{"pos":[670,1067],"content":"Converting time intervals of less than an hour to a fraction can involve a loss of precision. (For example, one minute is 0.01666 of an hour.) If this is problematic, you can use the <xref:System.DateTimeOffset.Add%2A> method, which enables you to specify more than one kind of time interval in a single method call and eliminates the need to convert time intervals to fractional parts of an hour.","nodes":[{"content":"Converting time intervals of less than an hour to a fraction can involve a loss of precision. (For example, one minute is 0.01666 of an hour.) If this is problematic, you can use the <xref:System.DateTimeOffset.Add%2A> method, which enables you to specify more than one kind of time interval in a single method call and eliminates the need to convert time intervals to fractional parts of an hour.","pos":[0,397],"nodes":[{"content":"Converting time intervals of less than an hour to a fraction can involve a loss of precision.","pos":[0,93]},{"content":"(For example, one minute is 0.01666 of an hour.) If this is problematic, you can use the <ph id=\"ph1\">&lt;xref:System.DateTimeOffset.Add%2A&gt;</ph> method, which enables you to specify more than one kind of time interval in a single method call and eliminates the need to convert time intervals to fractional parts of an hour.","pos":[94,397],"source":" (For example, one minute is 0.01666 of an hour.) If this is problematic, you can use the <xref:System.DateTimeOffset.Add%2A> method, which enables you to specify more than one kind of time interval in a single method call and eliminates the need to convert time intervals to fractional parts of an hour."}]}]}],"pos":[50977,52054],"yaml":true,"extradata":"MT"},{"content":"A number of whole and fractional hours. The number can be negative or positive.","nodes":[{"pos":[0,79],"content":"A number of whole and fractional hours. The number can be negative or positive.","nodes":[{"content":"A number of whole and fractional hours. The number can be negative or positive.","pos":[0,79],"nodes":[{"content":"A number of whole and fractional hours.","pos":[0,39]},{"content":"The number can be negative or positive.","pos":[40,79]}]}]}],"pos":[52710,52790],"yaml":true},{"content":"An object whose value is the sum of the date and time represented by the current <xref href=\"System.DateTimeOffset\"></xref> object and the number of hours represented by <code>hours</code>.","nodes":[{"pos":[0,189],"content":"An object whose value is the sum of the date and time represented by the current <ph id=\"ph1\">&lt;xref href=\"System.DateTimeOffset\"&gt;&lt;/xref&gt;</ph> object and the number of hours represented by <bpt id=\"p1\">&lt;code&gt;</bpt><ph id=\"ph2\">hours</ph><ept id=\"p1\">&lt;/code&gt;</ept>.","source":"An object whose value is the sum of the date and time represented by the current <xref href=\"System.DateTimeOffset\"></xref> object and the number of hours represented by <code>hours</code>."}],"pos":[52855,53045],"yaml":true},{"content":"The resulting <xref href=\"System.DateTimeOffset\"></xref> value is less than <xref href=\"System.DateTimeOffset.MinValue\"></xref>.  \n  \n -or-  \n  \n The resulting <xref href=\"System.DateTimeOffset\"></xref> value is greater than <xref href=\"System.DateTimeOffset.MaxValue\"></xref>.","nodes":[{"pos":[0,128],"content":"The resulting <ph id=\"ph1\">&lt;xref href=\"System.DateTimeOffset\"&gt;&lt;/xref&gt;</ph> value is less than <ph id=\"ph2\">&lt;xref href=\"System.DateTimeOffset.MinValue\"&gt;&lt;/xref&gt;</ph>.","source":"The resulting <xref href=\"System.DateTimeOffset\"></xref> value is less than <xref href=\"System.DateTimeOffset.MinValue\"></xref>."},{"pos":[135,139],"content":"-or-","nodes":[{"content":"-or-","pos":[0,4]}]},{"pos":[146,277],"content":"The resulting <ph id=\"ph1\">&lt;xref href=\"System.DateTimeOffset\"&gt;&lt;/xref&gt;</ph> value is greater than <ph id=\"ph2\">&lt;xref href=\"System.DateTimeOffset.MaxValue\"&gt;&lt;/xref&gt;</ph>.","source":"The resulting <xref href=\"System.DateTimeOffset\"></xref> value is greater than <xref href=\"System.DateTimeOffset.MaxValue\"></xref>."}],"pos":[53217,53509],"yaml":true},{"content":"Returns a new <xref href=\"System.DateTimeOffset\"></xref> object that adds a specified number of milliseconds to the value of this instance.","nodes":[{"pos":[0,139],"content":"Returns a new <ph id=\"ph1\">&lt;xref href=\"System.DateTimeOffset\"&gt;&lt;/xref&gt;</ph> object that adds a specified number of milliseconds to the value of this instance.","source":"Returns a new <xref href=\"System.DateTimeOffset\"></xref> object that adds a specified number of milliseconds to the value of this instance."}],"pos":[55034,55174],"yaml":true},{"content":"The fractional part of the `milliseconds` parameter is the fractional part of a millisecond. For example, 4.5 is equivalent to 4 milliseconds and 5000 ticks, where one millisecond equals 10,000 ticks. However, `milliseconds` is rounded to the nearest millisecond; all values of .5 or greater are rounded up.  \n  \n> [!NOTE]\n>  This method returns a new <xref:System.DateTimeOffset> object. It does not modify the value of the current object by adding `milliseconds` to its date and time.  \n  \n Because a <xref:System.DateTimeOffset> object does not represent the date and time in a specific time zone, the <xref:System.DateTimeOffset.AddMilliseconds%2A> method does not consider a particular time zone's adjustment rules when it performs date and time arithmetic.","nodes":[{"pos":[0,307],"content":"The fractional part of the `milliseconds` parameter is the fractional part of a millisecond. For example, 4.5 is equivalent to 4 milliseconds and 5000 ticks, where one millisecond equals 10,000 ticks. However, `milliseconds` is rounded to the nearest millisecond; all values of .5 or greater are rounded up.","nodes":[{"content":"The fractional part of the <ph id=\"ph1\">`milliseconds`</ph> parameter is the fractional part of a millisecond.","pos":[0,92],"source":"The fractional part of the `milliseconds` parameter is the fractional part of a millisecond."},{"content":"For example, 4.5 is equivalent to 4 milliseconds and 5000 ticks, where one millisecond equals 10,000 ticks.","pos":[93,200]},{"content":"However, <ph id=\"ph1\">`milliseconds`</ph> is rounded to the nearest millisecond; all values of .5 or greater are rounded up.","pos":[201,307],"source":" However, `milliseconds` is rounded to the nearest millisecond; all values of .5 or greater are rounded up."}]},{"pos":[315,486],"content":"[!NOTE]\n This method returns a new <xref:System.DateTimeOffset> object. It does not modify the value of the current object by adding `milliseconds` to its date and time.","leadings":["","> "],"nodes":[{"content":" This method returns a new <xref:System.DateTimeOffset> object. It does not modify the value of the current object by adding `milliseconds` to its date and time.","pos":[8,169],"nodes":[{"content":"This method returns a new <ph id=\"ph1\">&lt;xref:System.DateTimeOffset&gt;</ph> object.","pos":[1,63],"source":" This method returns a new <xref:System.DateTimeOffset> object."},{"content":"It does not modify the value of the current object by adding <ph id=\"ph1\">`milliseconds`</ph> to its date and time.","pos":[64,161],"source":" It does not modify the value of the current object by adding `milliseconds` to its date and time."}]}]},{"pos":[493,762],"content":"Because a <xref:System.DateTimeOffset> object does not represent the date and time in a specific time zone, the <xref:System.DateTimeOffset.AddMilliseconds%2A> method does not consider a particular time zone's adjustment rules when it performs date and time arithmetic.","nodes":[{"content":"Because a <ph id=\"ph1\">&lt;xref:System.DateTimeOffset&gt;</ph> object does not represent the date and time in a specific time zone, the <ph id=\"ph2\">&lt;xref:System.DateTimeOffset.AddMilliseconds%2A&gt;</ph> method does not consider a particular time zone's adjustment rules when it performs date and time arithmetic.","pos":[0,269],"source":"Because a <xref:System.DateTimeOffset> object does not represent the date and time in a specific time zone, the <xref:System.DateTimeOffset.AddMilliseconds%2A> method does not consider a particular time zone's adjustment rules when it performs date and time arithmetic."}]}],"pos":[55185,55955],"yaml":true,"extradata":"MT"},{"content":"A number of whole and fractional milliseconds. The number can be negative or positive.","nodes":[{"pos":[0,86],"content":"A number of whole and fractional milliseconds. The number can be negative or positive.","nodes":[{"content":"A number of whole and fractional milliseconds. The number can be negative or positive.","pos":[0,86],"nodes":[{"content":"A number of whole and fractional milliseconds.","pos":[0,46]},{"content":"The number can be negative or positive.","pos":[47,86]}]}]}],"pos":[56123,56210],"yaml":true},{"content":"An object whose value is the sum of the date and time represented by the current <xref href=\"System.DateTimeOffset\"></xref> object and the number of whole milliseconds represented by <code>milliseconds</code>.","nodes":[{"pos":[0,209],"content":"An object whose value is the sum of the date and time represented by the current <ph id=\"ph1\">&lt;xref href=\"System.DateTimeOffset\"&gt;&lt;/xref&gt;</ph> object and the number of whole milliseconds represented by <bpt id=\"p1\">&lt;code&gt;</bpt><ph id=\"ph2\">milliseconds</ph><ept id=\"p1\">&lt;/code&gt;</ept>.","source":"An object whose value is the sum of the date and time represented by the current <xref href=\"System.DateTimeOffset\"></xref> object and the number of whole milliseconds represented by <code>milliseconds</code>."}],"pos":[56275,56485],"yaml":true},{"content":"The resulting <xref href=\"System.DateTimeOffset\"></xref> value is less than <xref href=\"System.DateTimeOffset.MinValue\"></xref>.  \n  \n -or-  \n  \n The resulting <xref href=\"System.DateTimeOffset\"></xref> value is greater than <xref href=\"System.DateTimeOffset.MaxValue\"></xref>.","nodes":[{"pos":[0,128],"content":"The resulting <ph id=\"ph1\">&lt;xref href=\"System.DateTimeOffset\"&gt;&lt;/xref&gt;</ph> value is less than <ph id=\"ph2\">&lt;xref href=\"System.DateTimeOffset.MinValue\"&gt;&lt;/xref&gt;</ph>.","source":"The resulting <xref href=\"System.DateTimeOffset\"></xref> value is less than <xref href=\"System.DateTimeOffset.MinValue\"></xref>."},{"pos":[135,139],"content":"-or-","nodes":[{"content":"-or-","pos":[0,4]}]},{"pos":[146,277],"content":"The resulting <ph id=\"ph1\">&lt;xref href=\"System.DateTimeOffset\"&gt;&lt;/xref&gt;</ph> value is greater than <ph id=\"ph2\">&lt;xref href=\"System.DateTimeOffset.MaxValue\"&gt;&lt;/xref&gt;</ph>.","source":"The resulting <xref href=\"System.DateTimeOffset\"></xref> value is greater than <xref href=\"System.DateTimeOffset.MaxValue\"></xref>."}],"pos":[56664,56956],"yaml":true},{"content":"Returns a new <xref href=\"System.DateTimeOffset\"></xref> object that adds a specified number of whole and fractional minutes to the value of this instance.","nodes":[{"pos":[0,155],"content":"Returns a new <ph id=\"ph1\">&lt;xref href=\"System.DateTimeOffset\"&gt;&lt;/xref&gt;</ph> object that adds a specified number of whole and fractional minutes to the value of this instance.","source":"Returns a new <xref href=\"System.DateTimeOffset\"></xref> object that adds a specified number of whole and fractional minutes to the value of this instance."}],"pos":[58451,58607],"yaml":true},{"content":"The fractional part of the `minutes` parameter is the fractional part of a minute. For example, 4.5 is equivalent to 4 minutes, 30 seconds, 0 milliseconds. The `minutes` parameter is rounded to the nearest millisecond.  \n  \n> [!NOTE]\n>  This method returns a new <xref:System.DateTimeOffset> object. It does not modify the value of the current object by adding `minutes` to its date and time.  \n  \n Because a <xref:System.DateTimeOffset> object does not represent the date and time in a specific time zone, the <xref:System.DateTimeOffset.AddMinutes%2A> method does not consider a particular time zone's adjustment rules when it performs date and time arithmetic.  \n  \n Converting time intervals of less than a minute to a fraction can involve a loss of precision. (For example, one second is 0.01666 of a minute.) If this is problematic, you can use the <xref:System.DateTimeOffset.Add%2A> method, which enables you to specify more than one kind of time interval in a single method call and eliminates the need to convert time intervals to fractional parts of a minute.","nodes":[{"pos":[0,218],"content":"The fractional part of the `minutes` parameter is the fractional part of a minute. For example, 4.5 is equivalent to 4 minutes, 30 seconds, 0 milliseconds. The `minutes` parameter is rounded to the nearest millisecond.","nodes":[{"content":"The fractional part of the <ph id=\"ph1\">`minutes`</ph> parameter is the fractional part of a minute.","pos":[0,82],"source":"The fractional part of the `minutes` parameter is the fractional part of a minute."},{"content":"For example, 4.5 is equivalent to 4 minutes, 30 seconds, 0 milliseconds.","pos":[83,155]},{"content":"The <ph id=\"ph1\">`minutes`</ph> parameter is rounded to the nearest millisecond.","pos":[156,218],"source":" The `minutes` parameter is rounded to the nearest millisecond."}]},{"pos":[226,392],"content":"[!NOTE]\n This method returns a new <xref:System.DateTimeOffset> object. It does not modify the value of the current object by adding `minutes` to its date and time.","leadings":["","> "],"nodes":[{"content":" This method returns a new <xref:System.DateTimeOffset> object. It does not modify the value of the current object by adding `minutes` to its date and time.","pos":[8,164],"nodes":[{"content":"This method returns a new <ph id=\"ph1\">&lt;xref:System.DateTimeOffset&gt;</ph> object.","pos":[1,63],"source":" This method returns a new <xref:System.DateTimeOffset> object."},{"content":"It does not modify the value of the current object by adding <ph id=\"ph1\">`minutes`</ph> to its date and time.","pos":[64,156],"source":" It does not modify the value of the current object by adding `minutes` to its date and time."}]}]},{"pos":[399,663],"content":"Because a <xref:System.DateTimeOffset> object does not represent the date and time in a specific time zone, the <xref:System.DateTimeOffset.AddMinutes%2A> method does not consider a particular time zone's adjustment rules when it performs date and time arithmetic.","nodes":[{"content":"Because a <ph id=\"ph1\">&lt;xref:System.DateTimeOffset&gt;</ph> object does not represent the date and time in a specific time zone, the <ph id=\"ph2\">&lt;xref:System.DateTimeOffset.AddMinutes%2A&gt;</ph> method does not consider a particular time zone's adjustment rules when it performs date and time arithmetic.","pos":[0,264],"source":"Because a <xref:System.DateTimeOffset> object does not represent the date and time in a specific time zone, the <xref:System.DateTimeOffset.AddMinutes%2A> method does not consider a particular time zone's adjustment rules when it performs date and time arithmetic."}]},{"pos":[670,1070],"content":"Converting time intervals of less than a minute to a fraction can involve a loss of precision. (For example, one second is 0.01666 of a minute.) If this is problematic, you can use the <xref:System.DateTimeOffset.Add%2A> method, which enables you to specify more than one kind of time interval in a single method call and eliminates the need to convert time intervals to fractional parts of a minute.","nodes":[{"content":"Converting time intervals of less than a minute to a fraction can involve a loss of precision. (For example, one second is 0.01666 of a minute.) If this is problematic, you can use the <xref:System.DateTimeOffset.Add%2A> method, which enables you to specify more than one kind of time interval in a single method call and eliminates the need to convert time intervals to fractional parts of a minute.","pos":[0,400],"nodes":[{"content":"Converting time intervals of less than a minute to a fraction can involve a loss of precision.","pos":[0,94]},{"content":"(For example, one second is 0.01666 of a minute.) If this is problematic, you can use the <ph id=\"ph1\">&lt;xref:System.DateTimeOffset.Add%2A&gt;</ph> method, which enables you to specify more than one kind of time interval in a single method call and eliminates the need to convert time intervals to fractional parts of a minute.","pos":[95,400],"source":" (For example, one second is 0.01666 of a minute.) If this is problematic, you can use the <xref:System.DateTimeOffset.Add%2A> method, which enables you to specify more than one kind of time interval in a single method call and eliminates the need to convert time intervals to fractional parts of a minute."}]}]}],"pos":[58618,59698],"yaml":true,"extradata":"MT"},{"content":"A number of whole and fractional minutes. The number can be negative or positive.","nodes":[{"pos":[0,81],"content":"A number of whole and fractional minutes. The number can be negative or positive.","nodes":[{"content":"A number of whole and fractional minutes. The number can be negative or positive.","pos":[0,81],"nodes":[{"content":"A number of whole and fractional minutes.","pos":[0,41]},{"content":"The number can be negative or positive.","pos":[42,81]}]}]}],"pos":[59851,59933],"yaml":true},{"content":"An object whose value is the sum of the date and time represented by the current <xref href=\"System.DateTimeOffset\"></xref> object and the number of minutes represented by <code>minutes</code>.","nodes":[{"pos":[0,193],"content":"An object whose value is the sum of the date and time represented by the current <ph id=\"ph1\">&lt;xref href=\"System.DateTimeOffset\"&gt;&lt;/xref&gt;</ph> object and the number of minutes represented by <bpt id=\"p1\">&lt;code&gt;</bpt><ph id=\"ph2\">minutes</ph><ept id=\"p1\">&lt;/code&gt;</ept>.","source":"An object whose value is the sum of the date and time represented by the current <xref href=\"System.DateTimeOffset\"></xref> object and the number of minutes represented by <code>minutes</code>."}],"pos":[59998,60192],"yaml":true},{"content":"The resulting <xref href=\"System.DateTimeOffset\"></xref> value is less than <xref href=\"System.DateTimeOffset.MinValue\"></xref>.  \n  \n -or-  \n  \n The resulting <xref href=\"System.DateTimeOffset\"></xref> value is greater than <xref href=\"System.DateTimeOffset.MaxValue\"></xref>.","nodes":[{"pos":[0,128],"content":"The resulting <ph id=\"ph1\">&lt;xref href=\"System.DateTimeOffset\"&gt;&lt;/xref&gt;</ph> value is less than <ph id=\"ph2\">&lt;xref href=\"System.DateTimeOffset.MinValue\"&gt;&lt;/xref&gt;</ph>.","source":"The resulting <xref href=\"System.DateTimeOffset\"></xref> value is less than <xref href=\"System.DateTimeOffset.MinValue\"></xref>."},{"pos":[135,139],"content":"-or-","nodes":[{"content":"-or-","pos":[0,4]}]},{"pos":[146,277],"content":"The resulting <ph id=\"ph1\">&lt;xref href=\"System.DateTimeOffset\"&gt;&lt;/xref&gt;</ph> value is greater than <ph id=\"ph2\">&lt;xref href=\"System.DateTimeOffset.MaxValue\"&gt;&lt;/xref&gt;</ph>.","source":"The resulting <xref href=\"System.DateTimeOffset\"></xref> value is greater than <xref href=\"System.DateTimeOffset.MaxValue\"></xref>."}],"pos":[60366,60658],"yaml":true},{"content":"Returns a new <xref href=\"System.DateTimeOffset\"></xref> object that adds a specified number of months to the value of this instance.","nodes":[{"pos":[0,133],"content":"Returns a new <ph id=\"ph1\">&lt;xref href=\"System.DateTimeOffset\"&gt;&lt;/xref&gt;</ph> object that adds a specified number of months to the value of this instance.","source":"Returns a new <xref href=\"System.DateTimeOffset\"></xref> object that adds a specified number of months to the value of this instance."}],"pos":[62141,62275],"yaml":true},{"content":"Unlike most of the other methods that add a single time interval unit (such as minutes or days) to a date and time value, <xref:System.DateTimeOffset.AddMonths%2A> does not enable you to add fractional parts of a month. To add a time that consists of other time units in addition to months to a <xref:System.DateTimeOffset> object, use the <xref:System.DateTimeOffset.Add%2A> method.  \n  \n> [!NOTE]\n>  This method returns a new <xref:System.DateTimeOffset> object. It does not modify the value of the current object by adding `months` to its date and time.","nodes":[{"pos":[0,383],"content":"Unlike most of the other methods that add a single time interval unit (such as minutes or days) to a date and time value, <xref:System.DateTimeOffset.AddMonths%2A> does not enable you to add fractional parts of a month. To add a time that consists of other time units in addition to months to a <xref:System.DateTimeOffset> object, use the <xref:System.DateTimeOffset.Add%2A> method.","nodes":[{"content":"Unlike most of the other methods that add a single time interval unit (such as minutes or days) to a date and time value, <xref:System.DateTimeOffset.AddMonths%2A> does not enable you to add fractional parts of a month. To add a time that consists of other time units in addition to months to a <xref:System.DateTimeOffset> object, use the <xref:System.DateTimeOffset.Add%2A> method.","pos":[0,383],"nodes":[{"content":"Unlike most of the other methods that add a single time interval unit (such as minutes or days) to a date and time value, <ph id=\"ph1\">&lt;xref:System.DateTimeOffset.AddMonths%2A&gt;</ph> does not enable you to add fractional parts of a month.","pos":[0,219],"source":"Unlike most of the other methods that add a single time interval unit (such as minutes or days) to a date and time value, <xref:System.DateTimeOffset.AddMonths%2A> does not enable you to add fractional parts of a month."},{"content":"To add a time that consists of other time units in addition to months to a <ph id=\"ph1\">&lt;xref:System.DateTimeOffset&gt;</ph> object, use the <ph id=\"ph2\">&lt;xref:System.DateTimeOffset.Add%2A&gt;</ph> method.","pos":[220,383],"source":" To add a time that consists of other time units in addition to months to a <xref:System.DateTimeOffset> object, use the <xref:System.DateTimeOffset.Add%2A> method."}]}]},{"pos":[391,556],"content":"[!NOTE]\n This method returns a new <xref:System.DateTimeOffset> object. It does not modify the value of the current object by adding `months` to its date and time.","leadings":["","> "],"nodes":[{"content":" This method returns a new <xref:System.DateTimeOffset> object. It does not modify the value of the current object by adding `months` to its date and time.","pos":[8,163],"nodes":[{"content":"This method returns a new <ph id=\"ph1\">&lt;xref:System.DateTimeOffset&gt;</ph> object.","pos":[1,63],"source":" This method returns a new <xref:System.DateTimeOffset> object."},{"content":"It does not modify the value of the current object by adding <ph id=\"ph1\">`months`</ph> to its date and time.","pos":[64,155],"source":" It does not modify the value of the current object by adding `months` to its date and time."}]}]}],"pos":[62286,62848],"yaml":true,"extradata":"MT"},{"content":"A number of whole months. The number can be negative or positive.","nodes":[{"pos":[0,65],"content":"A number of whole months. The number can be negative or positive.","nodes":[{"content":"A number of whole months. The number can be negative or positive.","pos":[0,65],"nodes":[{"content":"A number of whole months.","pos":[0,25]},{"content":"The number can be negative or positive.","pos":[26,65]}]}]}],"pos":[63450,63516],"yaml":true},{"content":"An object whose value is the sum of the date and time represented by the current <xref href=\"System.DateTimeOffset\"></xref> object and the number of months represented by <code>months</code>.","nodes":[{"pos":[0,191],"content":"An object whose value is the sum of the date and time represented by the current <ph id=\"ph1\">&lt;xref href=\"System.DateTimeOffset\"&gt;&lt;/xref&gt;</ph> object and the number of months represented by <bpt id=\"p1\">&lt;code&gt;</bpt><ph id=\"ph2\">months</ph><ept id=\"p1\">&lt;/code&gt;</ept>.","source":"An object whose value is the sum of the date and time represented by the current <xref href=\"System.DateTimeOffset\"></xref> object and the number of months represented by <code>months</code>."}],"pos":[63581,63773],"yaml":true},{"content":"The resulting <xref href=\"System.DateTimeOffset\"></xref> value is less than <xref href=\"System.DateTimeOffset.MinValue\"></xref>.  \n  \n -or-  \n  \n The resulting <xref href=\"System.DateTimeOffset\"></xref> value is greater than <xref href=\"System.DateTimeOffset.MaxValue\"></xref>.","nodes":[{"pos":[0,128],"content":"The resulting <ph id=\"ph1\">&lt;xref href=\"System.DateTimeOffset\"&gt;&lt;/xref&gt;</ph> value is less than <ph id=\"ph2\">&lt;xref href=\"System.DateTimeOffset.MinValue\"&gt;&lt;/xref&gt;</ph>.","source":"The resulting <xref href=\"System.DateTimeOffset\"></xref> value is less than <xref href=\"System.DateTimeOffset.MinValue\"></xref>."},{"pos":[135,139],"content":"-or-","nodes":[{"content":"-or-","pos":[0,4]}]},{"pos":[146,277],"content":"The resulting <ph id=\"ph1\">&lt;xref href=\"System.DateTimeOffset\"&gt;&lt;/xref&gt;</ph> value is greater than <ph id=\"ph2\">&lt;xref href=\"System.DateTimeOffset.MaxValue\"&gt;&lt;/xref&gt;</ph>.","source":"The resulting <xref href=\"System.DateTimeOffset\"></xref> value is greater than <xref href=\"System.DateTimeOffset.MaxValue\"></xref>."}],"pos":[63946,64238],"yaml":true},{"content":"Returns a new <xref href=\"System.DateTimeOffset\"></xref> object that adds a specified number of whole and fractional seconds to the value of this instance.","nodes":[{"pos":[0,155],"content":"Returns a new <ph id=\"ph1\">&lt;xref href=\"System.DateTimeOffset\"&gt;&lt;/xref&gt;</ph> object that adds a specified number of whole and fractional seconds to the value of this instance.","source":"Returns a new <xref href=\"System.DateTimeOffset\"></xref> object that adds a specified number of whole and fractional seconds to the value of this instance."}],"pos":[65733,65889],"yaml":true},{"content":"The fractional part of the `seconds` parameter is the fractional part of a second. The value of fractional parts of a second are shown in the following table.  \n  \n|Second value|Equivalent|  \n|------------------|----------------|  \n|.1 second|100 milliseconds|  \n|.01 second|10 milliseconds|  \n|.001 second|1 millisecond|  \n  \n The `seconds` parameter is rounded to the nearest millisecond.  \n  \n> [!NOTE]\n>  This method returns a new <xref:System.DateTimeOffset> object. It does not modify the value of the current object by adding `minutes` to its date and time.  \n  \n Because a <xref:System.DateTimeOffset> object does not represent the date and time in a specific time zone, the <xref:System.DateTimeOffset.AddSeconds%2A> method does not consider a particular time zone's adjustment rules when it performs date and time arithmetic.","nodes":[{"pos":[0,158],"content":"The fractional part of the `seconds` parameter is the fractional part of a second. The value of fractional parts of a second are shown in the following table.","nodes":[{"content":"The fractional part of the <ph id=\"ph1\">`seconds`</ph> parameter is the fractional part of a second.","pos":[0,82],"source":"The fractional part of the `seconds` parameter is the fractional part of a second."},{"content":"The value of fractional parts of a second are shown in the following table.","pos":[83,158]}]},{"pos":[165,177],"content":"Second value","nodes":[{"content":"Second value","pos":[0,12]}]},{"pos":[178,188],"content":"Equivalent","nodes":[{"content":"Equivalent","pos":[0,10]}]},{"pos":[233,242],"content":".1 second","nodes":[{"content":".1 second","pos":[0,9]}]},{"pos":[243,259],"content":"100 milliseconds","nodes":[{"content":"100 milliseconds","pos":[0,16]}]},{"pos":[264,274],"content":".01 second","nodes":[{"content":".01 second","pos":[0,10]}]},{"pos":[275,290],"content":"10 milliseconds","nodes":[{"content":"10 milliseconds","pos":[0,15]}]},{"pos":[295,306],"content":".001 second","nodes":[{"content":".001 second","pos":[0,11]}]},{"pos":[307,320],"content":"1 millisecond","nodes":[{"content":"1 millisecond","pos":[0,13]}]},{"pos":[328,390],"content":"The <ph id=\"ph1\">`seconds`</ph> parameter is rounded to the nearest millisecond.","source":"The `seconds` parameter is rounded to the nearest millisecond."},{"pos":[398,564],"content":"[!NOTE]\n This method returns a new <xref:System.DateTimeOffset> object. It does not modify the value of the current object by adding `minutes` to its date and time.","leadings":["","> "],"nodes":[{"content":" This method returns a new <xref:System.DateTimeOffset> object. It does not modify the value of the current object by adding `minutes` to its date and time.","pos":[8,164],"nodes":[{"content":"This method returns a new <ph id=\"ph1\">&lt;xref:System.DateTimeOffset&gt;</ph> object.","pos":[1,63],"source":" This method returns a new <xref:System.DateTimeOffset> object."},{"content":"It does not modify the value of the current object by adding <ph id=\"ph1\">`minutes`</ph> to its date and time.","pos":[64,156],"source":" It does not modify the value of the current object by adding `minutes` to its date and time."}]}]},{"pos":[571,835],"content":"Because a <xref:System.DateTimeOffset> object does not represent the date and time in a specific time zone, the <xref:System.DateTimeOffset.AddSeconds%2A> method does not consider a particular time zone's adjustment rules when it performs date and time arithmetic.","nodes":[{"content":"Because a <ph id=\"ph1\">&lt;xref:System.DateTimeOffset&gt;</ph> object does not represent the date and time in a specific time zone, the <ph id=\"ph2\">&lt;xref:System.DateTimeOffset.AddSeconds%2A&gt;</ph> method does not consider a particular time zone's adjustment rules when it performs date and time arithmetic.","pos":[0,264],"source":"Because a <xref:System.DateTimeOffset> object does not represent the date and time in a specific time zone, the <xref:System.DateTimeOffset.AddSeconds%2A> method does not consider a particular time zone's adjustment rules when it performs date and time arithmetic."}]}],"pos":[65900,66751],"yaml":true,"extradata":"MT"},{"content":"A number of whole and fractional seconds. The number can be negative or positive.","nodes":[{"pos":[0,81],"content":"A number of whole and fractional seconds. The number can be negative or positive.","nodes":[{"content":"A number of whole and fractional seconds. The number can be negative or positive.","pos":[0,81],"nodes":[{"content":"A number of whole and fractional seconds.","pos":[0,41]},{"content":"The number can be negative or positive.","pos":[42,81]}]}]}],"pos":[66904,66986],"yaml":true},{"content":"An object whose value is the sum of the date and time represented by the current <xref href=\"System.DateTimeOffset\"></xref> object and the number of seconds represented by <code>seconds</code>.","nodes":[{"pos":[0,193],"content":"An object whose value is the sum of the date and time represented by the current <ph id=\"ph1\">&lt;xref href=\"System.DateTimeOffset\"&gt;&lt;/xref&gt;</ph> object and the number of seconds represented by <bpt id=\"p1\">&lt;code&gt;</bpt><ph id=\"ph2\">seconds</ph><ept id=\"p1\">&lt;/code&gt;</ept>.","source":"An object whose value is the sum of the date and time represented by the current <xref href=\"System.DateTimeOffset\"></xref> object and the number of seconds represented by <code>seconds</code>."}],"pos":[67051,67245],"yaml":true},{"content":"The resulting <xref href=\"System.DateTimeOffset\"></xref> value is less than <xref href=\"System.DateTimeOffset.MinValue\"></xref>.  \n  \n -or-  \n  \n The resulting <xref href=\"System.DateTimeOffset\"></xref> value is greater than <xref href=\"System.DateTimeOffset.MaxValue\"></xref>.","nodes":[{"pos":[0,128],"content":"The resulting <ph id=\"ph1\">&lt;xref href=\"System.DateTimeOffset\"&gt;&lt;/xref&gt;</ph> value is less than <ph id=\"ph2\">&lt;xref href=\"System.DateTimeOffset.MinValue\"&gt;&lt;/xref&gt;</ph>.","source":"The resulting <xref href=\"System.DateTimeOffset\"></xref> value is less than <xref href=\"System.DateTimeOffset.MinValue\"></xref>."},{"pos":[135,139],"content":"-or-","nodes":[{"content":"-or-","pos":[0,4]}]},{"pos":[146,277],"content":"The resulting <ph id=\"ph1\">&lt;xref href=\"System.DateTimeOffset\"&gt;&lt;/xref&gt;</ph> value is greater than <ph id=\"ph2\">&lt;xref href=\"System.DateTimeOffset.MaxValue\"&gt;&lt;/xref&gt;</ph>.","source":"The resulting <xref href=\"System.DateTimeOffset\"></xref> value is greater than <xref href=\"System.DateTimeOffset.MaxValue\"></xref>."}],"pos":[67419,67711],"yaml":true},{"content":"Returns a new <xref href=\"System.DateTimeOffset\"></xref> object that adds a specified number of ticks to the value of this instance.","nodes":[{"pos":[0,132],"content":"Returns a new <ph id=\"ph1\">&lt;xref href=\"System.DateTimeOffset\"&gt;&lt;/xref&gt;</ph> object that adds a specified number of ticks to the value of this instance.","source":"Returns a new <xref href=\"System.DateTimeOffset\"></xref> object that adds a specified number of ticks to the value of this instance."}],"pos":[69188,69321],"yaml":true},{"content":"A tick represents 100 nanoseconds, or one-ten millionth of a second. Because a tick is a very small and precise time interval, any larger time unit can be expressed as a number of ticks without a loss of precision.  \n  \n> [!NOTE]\n>  This method returns a new <xref:System.DateTimeOffset> object. It does not modify the value of the current object by adding `minutes` to its date and time.  \n  \n The following table lists the number of ticks in a particular time interval.  \n  \n|Time interval|Number of ticks|  \n|-------------------|---------------------|  \n|Second|10,000,000|  \n|Minute|600,000,000|  \n|Hour|36,000,000,000|  \n|Day|864,000,000,000|  \n|Week|6,048,000,000,000|  \n|Month|Depends on number of days in the month.|  \n|Non-leap year|315,360,000,000,000|  \n|Leap year|316,224,000,000,000|  \n  \n Because a <xref:System.DateTimeOffset> object does not represent the date and time in a specific time zone, the <xref:System.DateTimeOffset.AddTicks%2A> method does not consider a particular time zone's adjustment rules when it performs date and time arithmetic.","nodes":[{"pos":[0,214],"content":"A tick represents 100 nanoseconds, or one-ten millionth of a second. Because a tick is a very small and precise time interval, any larger time unit can be expressed as a number of ticks without a loss of precision.","nodes":[{"content":"A tick represents 100 nanoseconds, or one-ten millionth of a second. Because a tick is a very small and precise time interval, any larger time unit can be expressed as a number of ticks without a loss of precision.","pos":[0,214],"nodes":[{"content":"A tick represents 100 nanoseconds, or one-ten millionth of a second.","pos":[0,68]},{"content":"Because a tick is a very small and precise time interval, any larger time unit can be expressed as a number of ticks without a loss of precision.","pos":[69,214]}]}]},{"pos":[222,388],"content":"[!NOTE]\n This method returns a new <xref:System.DateTimeOffset> object. It does not modify the value of the current object by adding `minutes` to its date and time.","leadings":["","> "],"nodes":[{"content":" This method returns a new <xref:System.DateTimeOffset> object. It does not modify the value of the current object by adding `minutes` to its date and time.","pos":[8,164],"nodes":[{"content":"This method returns a new <ph id=\"ph1\">&lt;xref:System.DateTimeOffset&gt;</ph> object.","pos":[1,63],"source":" This method returns a new <xref:System.DateTimeOffset> object."},{"content":"It does not modify the value of the current object by adding <ph id=\"ph1\">`minutes`</ph> to its date and time.","pos":[64,156],"source":" It does not modify the value of the current object by adding `minutes` to its date and time."}]}]},{"pos":[395,471],"content":"The following table lists the number of ticks in a particular time interval.","nodes":[{"content":"The following table lists the number of ticks in a particular time interval.","pos":[0,76]}]},{"pos":[478,491],"content":"Time interval","nodes":[{"content":"Time interval","pos":[0,13]}]},{"pos":[492,507],"content":"Number of ticks","nodes":[{"content":"Number of ticks","pos":[0,15]}]},{"pos":[558,564],"content":"Second","nodes":[{"content":"Second","pos":[0,6]}]},{"pos":[565,575],"content":"10,000,000","nodes":[{"content":"10,000,000","pos":[0,10]}]},{"pos":[580,586],"content":"Minute","nodes":[{"content":"Minute","pos":[0,6]}]},{"pos":[587,598],"content":"600,000,000","nodes":[{"content":"600,000,000","pos":[0,11]}]},{"pos":[603,607],"content":"Hour","nodes":[{"content":"Hour","pos":[0,4]}]},{"pos":[608,622],"content":"36,000,000,000","nodes":[{"content":"36,000,000,000","pos":[0,14]}]},{"pos":[627,630],"content":"Day","nodes":[{"content":"Day","pos":[0,3]}]},{"pos":[631,646],"content":"864,000,000,000","nodes":[{"content":"864,000,000,000","pos":[0,15]}]},{"pos":[651,655],"content":"Week","nodes":[{"content":"Week","pos":[0,4]}]},{"pos":[656,673],"content":"6,048,000,000,000","nodes":[{"content":"6,048,000,000,000","pos":[0,17]}]},{"pos":[678,683],"content":"Month","nodes":[{"content":"Month","pos":[0,5]}]},{"pos":[684,723],"content":"Depends on number of days in the month.","nodes":[{"content":"Depends on number of days in the month.","pos":[0,39]}]},{"pos":[728,741],"content":"Non-leap year","nodes":[{"content":"Non-leap year","pos":[0,13]}]},{"pos":[742,761],"content":"315,360,000,000,000","nodes":[{"content":"315,360,000,000,000","pos":[0,19]}]},{"pos":[766,775],"content":"Leap year","nodes":[{"content":"Leap year","pos":[0,9]}]},{"pos":[776,795],"content":"316,224,000,000,000","nodes":[{"content":"316,224,000,000,000","pos":[0,19]}]},{"pos":[803,1065],"content":"Because a <xref:System.DateTimeOffset> object does not represent the date and time in a specific time zone, the <xref:System.DateTimeOffset.AddTicks%2A> method does not consider a particular time zone's adjustment rules when it performs date and time arithmetic.","nodes":[{"content":"Because a <ph id=\"ph1\">&lt;xref:System.DateTimeOffset&gt;</ph> object does not represent the date and time in a specific time zone, the <ph id=\"ph2\">&lt;xref:System.DateTimeOffset.AddTicks%2A&gt;</ph> method does not consider a particular time zone's adjustment rules when it performs date and time arithmetic.","pos":[0,262],"source":"Because a <xref:System.DateTimeOffset> object does not represent the date and time in a specific time zone, the <xref:System.DateTimeOffset.AddTicks%2A> method does not consider a particular time zone's adjustment rules when it performs date and time arithmetic."}]}],"pos":[69332,70418],"yaml":true,"extradata":"MT"},{"content":"A number of 100-nanosecond ticks. The number can be negative or positive.","nodes":[{"pos":[0,73],"content":"A number of 100-nanosecond ticks. The number can be negative or positive.","nodes":[{"content":"A number of 100-nanosecond ticks. The number can be negative or positive.","pos":[0,73],"nodes":[{"content":"A number of 100-nanosecond ticks.","pos":[0,33]},{"content":"The number can be negative or positive.","pos":[34,73]}]}]}],"pos":[70562,70636],"yaml":true},{"content":"An object whose value is the sum of the date and time represented by the current <xref href=\"System.DateTimeOffset\"></xref> object and the number of ticks represented by <code>ticks</code>.","nodes":[{"pos":[0,189],"content":"An object whose value is the sum of the date and time represented by the current <ph id=\"ph1\">&lt;xref href=\"System.DateTimeOffset\"&gt;&lt;/xref&gt;</ph> object and the number of ticks represented by <bpt id=\"p1\">&lt;code&gt;</bpt><ph id=\"ph2\">ticks</ph><ept id=\"p1\">&lt;/code&gt;</ept>.","source":"An object whose value is the sum of the date and time represented by the current <xref href=\"System.DateTimeOffset\"></xref> object and the number of ticks represented by <code>ticks</code>."}],"pos":[70701,70891],"yaml":true},{"content":"The resulting <xref href=\"System.DateTimeOffset\"></xref> value is less than <xref href=\"System.DateTimeOffset.MinValue\"></xref>.  \n  \n -or-  \n  \n The resulting <xref href=\"System.DateTimeOffset\"></xref> value is greater than <xref href=\"System.DateTimeOffset.MaxValue\"></xref>.","nodes":[{"pos":[0,128],"content":"The resulting <ph id=\"ph1\">&lt;xref href=\"System.DateTimeOffset\"&gt;&lt;/xref&gt;</ph> value is less than <ph id=\"ph2\">&lt;xref href=\"System.DateTimeOffset.MinValue\"&gt;&lt;/xref&gt;</ph>.","source":"The resulting <xref href=\"System.DateTimeOffset\"></xref> value is less than <xref href=\"System.DateTimeOffset.MinValue\"></xref>."},{"pos":[135,139],"content":"-or-","nodes":[{"content":"-or-","pos":[0,4]}]},{"pos":[146,277],"content":"The resulting <ph id=\"ph1\">&lt;xref href=\"System.DateTimeOffset\"&gt;&lt;/xref&gt;</ph> value is greater than <ph id=\"ph2\">&lt;xref href=\"System.DateTimeOffset.MaxValue\"&gt;&lt;/xref&gt;</ph>.","source":"The resulting <xref href=\"System.DateTimeOffset\"></xref> value is greater than <xref href=\"System.DateTimeOffset.MaxValue\"></xref>."}],"pos":[71063,71355],"yaml":true},{"content":"Returns a new <xref href=\"System.DateTimeOffset\"></xref> object that adds a specified number of years to the value of this instance.","nodes":[{"pos":[0,132],"content":"Returns a new <ph id=\"ph1\">&lt;xref href=\"System.DateTimeOffset\"&gt;&lt;/xref&gt;</ph> object that adds a specified number of years to the value of this instance.","source":"Returns a new <xref href=\"System.DateTimeOffset\"></xref> object that adds a specified number of years to the value of this instance."}],"pos":[72832,72965],"yaml":true},{"content":"Unlike most of the other methods that add a single time interval unit (such as minutes or days) to a date and time value, <xref:System.DateTimeOffset.AddYears%2A> does not enable you to add fractional parts of a year. To add a time that consists of other time units in addition to years to a <xref:System.DateTimeOffset> object, use the <xref:System.DateTimeOffset.Add%2A> method.  \n  \n> [!NOTE]\n>  This method returns a new <xref:System.DateTimeOffset> object. It does not modify the value of the current object by adding `months` to its date and time.","nodes":[{"pos":[0,380],"content":"Unlike most of the other methods that add a single time interval unit (such as minutes or days) to a date and time value, <xref:System.DateTimeOffset.AddYears%2A> does not enable you to add fractional parts of a year. To add a time that consists of other time units in addition to years to a <xref:System.DateTimeOffset> object, use the <xref:System.DateTimeOffset.Add%2A> method.","nodes":[{"content":"Unlike most of the other methods that add a single time interval unit (such as minutes or days) to a date and time value, <xref:System.DateTimeOffset.AddYears%2A> does not enable you to add fractional parts of a year. To add a time that consists of other time units in addition to years to a <xref:System.DateTimeOffset> object, use the <xref:System.DateTimeOffset.Add%2A> method.","pos":[0,380],"nodes":[{"content":"Unlike most of the other methods that add a single time interval unit (such as minutes or days) to a date and time value, <ph id=\"ph1\">&lt;xref:System.DateTimeOffset.AddYears%2A&gt;</ph> does not enable you to add fractional parts of a year.","pos":[0,217],"source":"Unlike most of the other methods that add a single time interval unit (such as minutes or days) to a date and time value, <xref:System.DateTimeOffset.AddYears%2A> does not enable you to add fractional parts of a year."},{"content":"To add a time that consists of other time units in addition to years to a <ph id=\"ph1\">&lt;xref:System.DateTimeOffset&gt;</ph> object, use the <ph id=\"ph2\">&lt;xref:System.DateTimeOffset.Add%2A&gt;</ph> method.","pos":[218,380],"source":" To add a time that consists of other time units in addition to years to a <xref:System.DateTimeOffset> object, use the <xref:System.DateTimeOffset.Add%2A> method."}]}]},{"pos":[388,553],"content":"[!NOTE]\n This method returns a new <xref:System.DateTimeOffset> object. It does not modify the value of the current object by adding `months` to its date and time.","leadings":["","> "],"nodes":[{"content":" This method returns a new <xref:System.DateTimeOffset> object. It does not modify the value of the current object by adding `months` to its date and time.","pos":[8,163],"nodes":[{"content":"This method returns a new <ph id=\"ph1\">&lt;xref:System.DateTimeOffset&gt;</ph> object.","pos":[1,63],"source":" This method returns a new <xref:System.DateTimeOffset> object."},{"content":"It does not modify the value of the current object by adding <ph id=\"ph1\">`months`</ph> to its date and time.","pos":[64,155],"source":" It does not modify the value of the current object by adding `months` to its date and time."}]}]}],"pos":[72976,73535],"yaml":true,"extradata":"MT"},{"content":"A number of years. The number can be negative or positive.","nodes":[{"pos":[0,58],"content":"A number of years. The number can be negative or positive.","nodes":[{"content":"A number of years. The number can be negative or positive.","pos":[0,58],"nodes":[{"content":"A number of years.","pos":[0,18]},{"content":"The number can be negative or positive.","pos":[19,58]}]}]}],"pos":[74222,74281],"yaml":true},{"content":"An object whose value is the sum of the date and time represented by the current <xref href=\"System.DateTimeOffset\"></xref> object and the number of years represented by <code>years</code>.","nodes":[{"pos":[0,189],"content":"An object whose value is the sum of the date and time represented by the current <ph id=\"ph1\">&lt;xref href=\"System.DateTimeOffset\"&gt;&lt;/xref&gt;</ph> object and the number of years represented by <bpt id=\"p1\">&lt;code&gt;</bpt><ph id=\"ph2\">years</ph><ept id=\"p1\">&lt;/code&gt;</ept>.","source":"An object whose value is the sum of the date and time represented by the current <xref href=\"System.DateTimeOffset\"></xref> object and the number of years represented by <code>years</code>."}],"pos":[74346,74536],"yaml":true},{"content":"The resulting <xref href=\"System.DateTimeOffset\"></xref> value is less than <xref href=\"System.DateTimeOffset.MinValue\"></xref>.  \n  \n -or-  \n  \n The resulting <xref href=\"System.DateTimeOffset\"></xref> value is greater than <xref href=\"System.DateTimeOffset.MaxValue\"></xref>.","nodes":[{"pos":[0,128],"content":"The resulting <ph id=\"ph1\">&lt;xref href=\"System.DateTimeOffset\"&gt;&lt;/xref&gt;</ph> value is less than <ph id=\"ph2\">&lt;xref href=\"System.DateTimeOffset.MinValue\"&gt;&lt;/xref&gt;</ph>.","source":"The resulting <xref href=\"System.DateTimeOffset\"></xref> value is less than <xref href=\"System.DateTimeOffset.MinValue\"></xref>."},{"pos":[135,139],"content":"-or-","nodes":[{"content":"-or-","pos":[0,4]}]},{"pos":[146,277],"content":"The resulting <ph id=\"ph1\">&lt;xref href=\"System.DateTimeOffset\"&gt;&lt;/xref&gt;</ph> value is greater than <ph id=\"ph2\">&lt;xref href=\"System.DateTimeOffset.MaxValue\"&gt;&lt;/xref&gt;</ph>.","source":"The resulting <xref href=\"System.DateTimeOffset\"></xref> value is greater than <xref href=\"System.DateTimeOffset.MaxValue\"></xref>."}],"pos":[74708,75000],"yaml":true},{"content":"Compares two <xref href=\"System.DateTimeOffset\"></xref> objects and indicates whether the first is earlier than the second, equal to the second, or later than the second.","nodes":[{"pos":[0,170],"content":"Compares two <ph id=\"ph1\">&lt;xref href=\"System.DateTimeOffset\"&gt;&lt;/xref&gt;</ph> objects and indicates whether the first is earlier than the second, equal to the second, or later than the second.","source":"Compares two <xref href=\"System.DateTimeOffset\"></xref> objects and indicates whether the first is earlier than the second, equal to the second, or later than the second."}],"pos":[76639,76810],"yaml":true},{"content":"In performing the comparison, the method converts both the `first` and the `second` parameters to Coordinated Universal Time (UTC) before it performs the comparison. The method is equivalent to the following:  \n  \n [!code-csharp[System.DateTimeOffset.Syntax#1](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.DateTimeOffset.Syntax/cs/Syntax.cs#1)]\n [!code-vb[System.DateTimeOffset.Syntax#1](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.DateTimeOffset.Syntax/vb/Syntax.vb#1)]  \n  \n In other words, the <xref:System.DateTimeOffset.Compare%2A> method determines whether two <xref:System.DateTimeOffset> objects represent a single point in time. It directly compares neither dates and times nor offsets.","nodes":[{"pos":[0,208],"content":"In performing the comparison, the method converts both the `first` and the `second` parameters to Coordinated Universal Time (UTC) before it performs the comparison. The method is equivalent to the following:","nodes":[{"content":"In performing the comparison, the method converts both the <ph id=\"ph1\">`first`</ph> and the <ph id=\"ph2\">`second`</ph> parameters to Coordinated Universal Time (UTC) before it performs the comparison.","pos":[0,165],"source":"In performing the comparison, the method converts both the `first` and the `second` parameters to Coordinated Universal Time (UTC) before it performs the comparison."},{"content":"The method is equivalent to the following:","pos":[166,208]}]},{"pos":[215,498],"content":"<bpt id=\"p1\">[!code-csharp</bpt><bpt id=\"p2\">[</bpt>System.DateTimeOffset.Syntax#1<ept id=\"p2\">](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.DateTimeOffset.Syntax/cs/Syntax.cs#1)</ept><ept id=\"p1\">]</ept> <bpt id=\"p3\">[!code-vb</bpt><bpt id=\"p4\">[</bpt>System.DateTimeOffset.Syntax#1<ept id=\"p4\">](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.DateTimeOffset.Syntax/vb/Syntax.vb#1)</ept><ept id=\"p3\">]</ept>","source":"[!code-csharp[System.DateTimeOffset.Syntax#1](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.DateTimeOffset.Syntax/cs/Syntax.cs#1)]\n [!code-vb[System.DateTimeOffset.Syntax#1](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.DateTimeOffset.Syntax/vb/Syntax.vb#1)]"},{"pos":[505,723],"content":"In other words, the <xref:System.DateTimeOffset.Compare%2A> method determines whether two <xref:System.DateTimeOffset> objects represent a single point in time. It directly compares neither dates and times nor offsets.","nodes":[{"content":"In other words, the <xref:System.DateTimeOffset.Compare%2A> method determines whether two <xref:System.DateTimeOffset> objects represent a single point in time. It directly compares neither dates and times nor offsets.","pos":[0,218],"nodes":[{"content":"In other words, the <ph id=\"ph1\">&lt;xref:System.DateTimeOffset.Compare%2A&gt;</ph> method determines whether two <ph id=\"ph2\">&lt;xref:System.DateTimeOffset&gt;</ph> objects represent a single point in time.","pos":[0,160],"source":"In other words, the <xref:System.DateTimeOffset.Compare%2A> method determines whether two <xref:System.DateTimeOffset> objects represent a single point in time."},{"content":"It directly compares neither dates and times nor offsets.","pos":[161,218]}]}]}],"pos":[76821,77552],"yaml":true,"extradata":"MT"},{"content":"The first object to compare.","nodes":[{"pos":[0,28],"content":"The first object to compare.","nodes":[{"content":"The first object to compare.","pos":[0,28]}]}],"pos":[78194,78223],"yaml":true},{"content":"The second object to compare.","nodes":[{"pos":[0,29],"content":"The second object to compare.","nodes":[{"content":"The second object to compare.","pos":[0,29]}]}],"pos":[78293,78323],"yaml":true},{"content":"A signed integer that indicates whether the value of the <code>first</code> parameter is earlier than, later than, or the same time as the value of the <code>second</code> parameter, as the following table shows.  \n  \n <table><thead><tr><th> Return value  \n  \n </th><th> Meaning  \n  \n </th></tr></thead><tbody><tr><td> Less than zero  \n  \n </td><td><code>first</code> is earlier than <code>second</code>.  \n  \n </td></tr><tr><td> Zero  \n  \n </td><td><code>first</code> is equal to <code>second</code>.  \n  \n </td></tr><tr><td> Greater than zero  \n  \n </td><td><code>first</code> is later than <code>second</code>.  \n  \n </td></tr></tbody></table>","nodes":[{"pos":[0,212],"content":"A signed integer that indicates whether the value of the <bpt id=\"p1\">&lt;code&gt;</bpt><ph id=\"ph1\">first</ph><ept id=\"p1\">&lt;/code&gt;</ept> parameter is earlier than, later than, or the same time as the value of the <bpt id=\"p2\">&lt;code&gt;</bpt><ph id=\"ph2\">second</ph><ept id=\"p2\">&lt;/code&gt;</ept> parameter, as the following table shows.","source":"A signed integer that indicates whether the value of the <code>first</code> parameter is earlier than, later than, or the same time as the value of the <code>second</code> parameter, as the following table shows."},{"pos":[219,647],"content":"<table><thead><tr><th> Return value  \n  \n </th><th> Meaning  \n  \n </th></tr></thead><tbody><tr><td> Less than zero  \n  \n </td><td><code>first</code> is earlier than <code>second</code>.  \n  \n </td></tr><tr><td> Zero  \n  \n </td><td><code>first</code> is equal to <code>second</code>.  \n  \n </td></tr><tr><td> Greater than zero  \n  \n </td><td><code>first</code> is later than <code>second</code>.  \n  \n </td></tr></tbody></table>","nodes":[{"content":"Return value","pos":[23,40],"source":" Return value  \n  \n "},{"content":"Meaning","pos":[52,64],"source":" Meaning  \n  \n "},{"content":"Less than zero","pos":[100,119],"source":" Less than zero  \n  \n "},{"content":"<code>first</code> is earlier than <code>second</code>.  \n  \n ","pos":[130,192],"nodes":[{"content":"<ph id=\"ph1\">&lt;code&gt;first&lt;/code&gt;</ph> is earlier than <ph id=\"ph2\">&lt;code&gt;second&lt;/code&gt;</ph>.","pos":[0,55],"source":"<code>first</code> is earlier than <code>second</code>."}]},{"content":"Zero","pos":[211,220],"source":" Zero  \n  \n "},{"content":"<code>first</code> is equal to <code>second</code>.  \n  \n ","pos":[231,289],"nodes":[{"content":"<ph id=\"ph1\">&lt;code&gt;first&lt;/code&gt;</ph> is equal to <ph id=\"ph2\">&lt;code&gt;second&lt;/code&gt;</ph>.","pos":[0,51],"source":"<code>first</code> is equal to <code>second</code>."}]},{"content":"Greater than zero","pos":[308,330],"source":" Greater than zero  \n  \n "},{"content":"<code>first</code> is later than <code>second</code>.  \n  \n ","pos":[341,401],"nodes":[{"content":"<ph id=\"ph1\">&lt;code&gt;first&lt;/code&gt;</ph> is later than <ph id=\"ph2\">&lt;code&gt;second&lt;/code&gt;</ph>.","pos":[0,53],"source":"<code>first</code> is later than <code>second</code>."}]}]}],"pos":[78379,79046],"yaml":true},{"content":"Compares the current <xref href=\"System.DateTimeOffset\"></xref> object to a specified <xref href=\"System.DateTimeOffset\"></xref> object and indicates whether the current object is earlier than, the same as, or later than the second <xref href=\"System.DateTimeOffset\"></xref> object.","nodes":[{"pos":[0,282],"content":"Compares the current <ph id=\"ph1\">&lt;xref href=\"System.DateTimeOffset\"&gt;&lt;/xref&gt;</ph> object to a specified <ph id=\"ph2\">&lt;xref href=\"System.DateTimeOffset\"&gt;&lt;/xref&gt;</ph> object and indicates whether the current object is earlier than, the same as, or later than the second <ph id=\"ph3\">&lt;xref href=\"System.DateTimeOffset\"&gt;&lt;/xref&gt;</ph> object.","source":"Compares the current <xref href=\"System.DateTimeOffset\"></xref> object to a specified <xref href=\"System.DateTimeOffset\"></xref> object and indicates whether the current object is earlier than, the same as, or later than the second <xref href=\"System.DateTimeOffset\"></xref> object."}],"pos":[80643,80926],"yaml":true},{"content":"This method compares <xref:System.DateTimeOffset> objects by comparing their <xref:System.DateTimeOffset.UtcDateTime%2A> values; that is, it determines whether the two objects represent a single point in time, and indicates whether the current object is earlier than, later than, or the same as the `other` parameter.","nodes":[{"pos":[0,317],"content":"This method compares <ph id=\"ph1\">&lt;xref:System.DateTimeOffset&gt;</ph> objects by comparing their <ph id=\"ph2\">&lt;xref:System.DateTimeOffset.UtcDateTime%2A&gt;</ph> values; that is, it determines whether the two objects represent a single point in time, and indicates whether the current object is earlier than, later than, or the same as the <ph id=\"ph3\">`other`</ph> parameter.","source":"This method compares <xref:System.DateTimeOffset> objects by comparing their <xref:System.DateTimeOffset.UtcDateTime%2A> values; that is, it determines whether the two objects represent a single point in time, and indicates whether the current object is earlier than, later than, or the same as the `other` parameter."}],"pos":[80937,81255],"yaml":true,"extradata":"MT"},{"content":"An object to compare with the current <xref href=\"System.DateTimeOffset\"></xref> object.","nodes":[{"pos":[0,88],"content":"An object to compare with the current <ph id=\"ph1\">&lt;xref href=\"System.DateTimeOffset\"&gt;&lt;/xref&gt;</ph> object.","source":"An object to compare with the current <xref href=\"System.DateTimeOffset\"></xref> object."}],"pos":[81871,81960],"yaml":true},{"content":"A signed integer that indicates the relationship between the current <xref href=\"System.DateTimeOffset\"></xref> object and <code>other</code>, as the following table shows.  \n  \n <table><thead><tr><th> Return Value  \n  \n </th><th> Description  \n  \n </th></tr></thead><tbody><tr><td> Less than zero  \n  \n </td><td> The current <xref href=\"System.DateTimeOffset\"></xref> object is earlier than <code>other</code>.  \n  \n </td></tr><tr><td> Zero  \n  \n </td><td> The current <xref href=\"System.DateTimeOffset\"></xref> object is the same as <code>other</code>.  \n  \n </td></tr><tr><td> Greater than zero.  \n  \n </td><td> The current <xref href=\"System.DateTimeOffset\"></xref> object is later than <code>other</code>.  \n  \n </td></tr></tbody></table>","nodes":[{"pos":[0,172],"content":"A signed integer that indicates the relationship between the current <ph id=\"ph1\">&lt;xref href=\"System.DateTimeOffset\"&gt;&lt;/xref&gt;</ph> object and <bpt id=\"p1\">&lt;code&gt;</bpt><ph id=\"ph2\">other</ph><ept id=\"p1\">&lt;/code&gt;</ept>, as the following table shows.","source":"A signed integer that indicates the relationship between the current <xref href=\"System.DateTimeOffset\"></xref> object and <code>other</code>, as the following table shows."},{"pos":[179,744],"content":"<table><thead><tr><th> Return Value  \n  \n </th><th> Description  \n  \n </th></tr></thead><tbody><tr><td> Less than zero  \n  \n </td><td> The current <xref href=\"System.DateTimeOffset\"></xref> object is earlier than <code>other</code>.  \n  \n </td></tr><tr><td> Zero  \n  \n </td><td> The current <xref href=\"System.DateTimeOffset\"></xref> object is the same as <code>other</code>.  \n  \n </td></tr><tr><td> Greater than zero.  \n  \n </td><td> The current <xref href=\"System.DateTimeOffset\"></xref> object is later than <code>other</code>.  \n  \n </td></tr></tbody></table>","nodes":[{"content":"Return Value","pos":[23,40],"source":" Return Value  \n  \n "},{"content":"Description","pos":[52,68],"source":" Description  \n  \n "},{"content":"Less than zero","pos":[104,123],"source":" Less than zero  \n  \n "},{"content":" The current <xref href=\"System.DateTimeOffset\"></xref> object is earlier than <code>other</code>.  \n  \n ","pos":[134,239],"nodes":[{"content":"The current <ph id=\"ph1\">&lt;xref href=\"System.DateTimeOffset\"&gt;&lt;/xref&gt;</ph> object is earlier than <ph id=\"ph2\">&lt;code&gt;other&lt;/code&gt;</ph>.","pos":[1,98],"source":" The current <xref href=\"System.DateTimeOffset\"></xref> object is earlier than <code>other</code>."}]},{"content":"Zero","pos":[258,267],"source":" Zero  \n  \n "},{"content":" The current <xref href=\"System.DateTimeOffset\"></xref> object is the same as <code>other</code>.  \n  \n ","pos":[278,382],"nodes":[{"content":"The current <ph id=\"ph1\">&lt;xref href=\"System.DateTimeOffset\"&gt;&lt;/xref&gt;</ph> object is the same as <ph id=\"ph2\">&lt;code&gt;other&lt;/code&gt;</ph>.","pos":[1,97],"source":" The current <xref href=\"System.DateTimeOffset\"></xref> object is the same as <code>other</code>."}]},{"content":" Greater than zero.  \n  \n ","pos":[400,426],"nodes":[{"content":"Greater than zero.","pos":[1,19]}]},{"content":" The current <xref href=\"System.DateTimeOffset\"></xref> object is later than <code>other</code>.  \n  \n ","pos":[435,538],"nodes":[{"content":"The current <ph id=\"ph1\">&lt;xref href=\"System.DateTimeOffset\"&gt;&lt;/xref&gt;</ph> object is later than <ph id=\"ph2\">&lt;code&gt;other&lt;/code&gt;</ph>.","pos":[1,96],"source":" The current <xref href=\"System.DateTimeOffset\"></xref> object is later than <code>other</code>."}]}]}],"pos":[82016,82788],"yaml":true},{"content":"Gets a <xref href=\"System.DateTime\"></xref> value that represents the date component of the current <xref href=\"System.DateTimeOffset\"></xref> object.","nodes":[{"pos":[0,150],"content":"Gets a <ph id=\"ph1\">&lt;xref href=\"System.DateTime\"&gt;&lt;/xref&gt;</ph> value that represents the date component of the current <ph id=\"ph2\">&lt;xref href=\"System.DateTimeOffset\"&gt;&lt;/xref&gt;</ph> object.","source":"Gets a <xref href=\"System.DateTime\"></xref> value that represents the date component of the current <xref href=\"System.DateTimeOffset\"></xref> object."}],"pos":[84242,84393],"yaml":true},{"content":"This property removes any significant part of the time component from a <xref:System.DateTimeOffset> object and returns only its significant date component. For example, if the <xref:System.DateTimeOffset> object has a date and time value of \"1/12/07 4:01pm +7:30\", the property returns a <xref:System.DateTime> value of \"1/12/07 12:00:00 AM\". The <xref:System.DateTime> value can then be displayed by using any of the standard or custom format specifiers that display dates only. (See the Example section for an illustration.)  \n  \n The value of the <xref:System.DateTime.Kind%2A?displayProperty=fullName> property of the returned <xref:System.DateTime> object is always <xref:System.DateTimeKind?displayProperty=fullName>. It is not affected by the value of the <xref:System.DateTimeOffset.Offset%2A> property.  \n  \n To display a date without its time component, you can also use the \"D\" or \"d\" format specifiers; for an illustration, see the Example section.","nodes":[{"pos":[0,527],"content":"This property removes any significant part of the time component from a <xref:System.DateTimeOffset> object and returns only its significant date component. For example, if the <xref:System.DateTimeOffset> object has a date and time value of \"1/12/07 4:01pm +7:30\", the property returns a <xref:System.DateTime> value of \"1/12/07 12:00:00 AM\". The <xref:System.DateTime> value can then be displayed by using any of the standard or custom format specifiers that display dates only. (See the Example section for an illustration.)","nodes":[{"content":"This property removes any significant part of the time component from a <xref:System.DateTimeOffset> object and returns only its significant date component. For example, if the <xref:System.DateTimeOffset> object has a date and time value of \"1/12/07 4:01pm +7:30\", the property returns a <xref:System.DateTime> value of \"1/12/07 12:00:00 AM\". The <xref:System.DateTime> value can then be displayed by using any of the standard or custom format specifiers that display dates only. (See the Example section for an illustration.)","pos":[0,527],"nodes":[{"content":"This property removes any significant part of the time component from a <ph id=\"ph1\">&lt;xref:System.DateTimeOffset&gt;</ph> object and returns only its significant date component.","pos":[0,156],"source":"This property removes any significant part of the time component from a <xref:System.DateTimeOffset> object and returns only its significant date component."},{"content":"For example, if the <ph id=\"ph1\">&lt;xref:System.DateTimeOffset&gt;</ph> object has a date and time value of \"1/12/07 4:01pm +7:30\", the property returns a <ph id=\"ph2\">&lt;xref:System.DateTime&gt;</ph> value of \"1/12/07 12:00:00 AM\".","pos":[157,343],"source":" For example, if the <xref:System.DateTimeOffset> object has a date and time value of \"1/12/07 4:01pm +7:30\", the property returns a <xref:System.DateTime> value of \"1/12/07 12:00:00 AM\"."},{"content":"The <ph id=\"ph1\">&lt;xref:System.DateTime&gt;</ph> value can then be displayed by using any of the standard or custom format specifiers that display dates only.","pos":[344,480],"source":" The <xref:System.DateTime> value can then be displayed by using any of the standard or custom format specifiers that display dates only."},{"content":"(See the Example section for an illustration.)","pos":[481,527]}]}]},{"pos":[534,812],"content":"The value of the <xref:System.DateTime.Kind%2A?displayProperty=fullName> property of the returned <xref:System.DateTime> object is always <xref:System.DateTimeKind?displayProperty=fullName>. It is not affected by the value of the <xref:System.DateTimeOffset.Offset%2A> property.","nodes":[{"content":"The value of the <xref:System.DateTime.Kind%2A?displayProperty=fullName> property of the returned <xref:System.DateTime> object is always <xref:System.DateTimeKind?displayProperty=fullName>. It is not affected by the value of the <xref:System.DateTimeOffset.Offset%2A> property.","pos":[0,278],"nodes":[{"content":"The value of the <ph id=\"ph1\">&lt;xref:System.DateTime.Kind%2A?displayProperty=fullName&gt;</ph> property of the returned <ph id=\"ph2\">&lt;xref:System.DateTime&gt;</ph> object is always <ph id=\"ph3\">&lt;xref:System.DateTimeKind?displayProperty=fullName&gt;</ph>.","pos":[0,190],"source":"The value of the <xref:System.DateTime.Kind%2A?displayProperty=fullName> property of the returned <xref:System.DateTime> object is always <xref:System.DateTimeKind?displayProperty=fullName>."},{"content":"It is not affected by the value of the <ph id=\"ph1\">&lt;xref:System.DateTimeOffset.Offset%2A&gt;</ph> property.","pos":[191,278],"source":" It is not affected by the value of the <xref:System.DateTimeOffset.Offset%2A> property."}]}]},{"pos":[819,961],"content":"To display a date without its time component, you can also use the \"D\" or \"d\" format specifiers; for an illustration, see the Example section.","nodes":[{"content":"To display a date without its time component, you can also use the \"D\" or \"d\" format specifiers; for an illustration, see the Example section.","pos":[0,142]}]}],"pos":[84404,85380],"yaml":true,"extradata":"MT"},{"content":"A <xref href=\"System.DateTime\"></xref> value that represents the date component of the current <xref href=\"System.DateTimeOffset\"></xref> object.","nodes":[{"pos":[0,145],"content":"A <ph id=\"ph1\">&lt;xref href=\"System.DateTime\"&gt;&lt;/xref&gt;</ph> value that represents the date component of the current <ph id=\"ph2\">&lt;xref href=\"System.DateTimeOffset\"&gt;&lt;/xref&gt;</ph> object.","source":"A <xref href=\"System.DateTime\"></xref> value that represents the date component of the current <xref href=\"System.DateTimeOffset\"></xref> object."}],"pos":[86045,86191],"yaml":true},{"content":"Gets a <xref href=\"System.DateTime\"></xref> value that represents the date and time of the current <xref href=\"System.DateTimeOffset\"></xref> object.","nodes":[{"pos":[0,149],"content":"Gets a <ph id=\"ph1\">&lt;xref href=\"System.DateTime\"&gt;&lt;/xref&gt;</ph> value that represents the date and time of the current <ph id=\"ph2\">&lt;xref href=\"System.DateTimeOffset\"&gt;&lt;/xref&gt;</ph> object.","source":"Gets a <xref href=\"System.DateTime\"></xref> value that represents the date and time of the current <xref href=\"System.DateTimeOffset\"></xref> object."}],"pos":[87664,87814],"yaml":true},{"content":"The <xref:System.DateTimeOffset.DateTime%2A> property is not affected by the value of the <xref:System.DateTimeOffset.Offset%2A> property.  \n  \n This property returns both the date and the time component of a <xref:System.DateTimeOffset> object, which makes it useful for performing <xref:System.DateTimeOffset> to <xref:System.DateTime> conversion. For example, if the <xref:System.DateTimeOffset> object has a date and time value of \"1/12/07 4:01pm + 7:30\", the property returns a date of \"1/12/07 4:01pm\".  \n  \n The value of the <xref:System.DateTime.Kind%2A?displayProperty=fullName> property of the returned <xref:System.DateTime> object is <xref:System.DateTimeKind?displayProperty=fullName>.","nodes":[{"pos":[0,138],"content":"The <xref:System.DateTimeOffset.DateTime%2A> property is not affected by the value of the <xref:System.DateTimeOffset.Offset%2A> property.","nodes":[{"content":"The <ph id=\"ph1\">&lt;xref:System.DateTimeOffset.DateTime%2A&gt;</ph> property is not affected by the value of the <ph id=\"ph2\">&lt;xref:System.DateTimeOffset.Offset%2A&gt;</ph> property.","pos":[0,138],"source":"The <xref:System.DateTimeOffset.DateTime%2A> property is not affected by the value of the <xref:System.DateTimeOffset.Offset%2A> property."}]},{"pos":[145,508],"content":"This property returns both the date and the time component of a <xref:System.DateTimeOffset> object, which makes it useful for performing <xref:System.DateTimeOffset> to <xref:System.DateTime> conversion. For example, if the <xref:System.DateTimeOffset> object has a date and time value of \"1/12/07 4:01pm + 7:30\", the property returns a date of \"1/12/07 4:01pm\".","nodes":[{"content":"This property returns both the date and the time component of a <xref:System.DateTimeOffset> object, which makes it useful for performing <xref:System.DateTimeOffset> to <xref:System.DateTime> conversion. For example, if the <xref:System.DateTimeOffset> object has a date and time value of \"1/12/07 4:01pm + 7:30\", the property returns a date of \"1/12/07 4:01pm\".","pos":[0,363],"nodes":[{"content":"This property returns both the date and the time component of a <ph id=\"ph1\">&lt;xref:System.DateTimeOffset&gt;</ph> object, which makes it useful for performing <ph id=\"ph2\">&lt;xref:System.DateTimeOffset&gt;</ph> to <ph id=\"ph3\">&lt;xref:System.DateTime&gt;</ph> conversion.","pos":[0,204],"source":"This property returns both the date and the time component of a <xref:System.DateTimeOffset> object, which makes it useful for performing <xref:System.DateTimeOffset> to <xref:System.DateTime> conversion."},{"content":"For example, if the <ph id=\"ph1\">&lt;xref:System.DateTimeOffset&gt;</ph> object has a date and time value of \"1/12/07 4:01pm + 7:30\", the property returns a date of \"1/12/07 4:01pm\".","pos":[205,363],"source":" For example, if the <xref:System.DateTimeOffset> object has a date and time value of \"1/12/07 4:01pm + 7:30\", the property returns a date of \"1/12/07 4:01pm\"."}]}]},{"pos":[515,698],"content":"The value of the <xref:System.DateTime.Kind%2A?displayProperty=fullName> property of the returned <xref:System.DateTime> object is <xref:System.DateTimeKind?displayProperty=fullName>.","nodes":[{"content":"The value of the <ph id=\"ph1\">&lt;xref:System.DateTime.Kind%2A?displayProperty=fullName&gt;</ph> property of the returned <ph id=\"ph2\">&lt;xref:System.DateTime&gt;</ph> object is <ph id=\"ph3\">&lt;xref:System.DateTimeKind?displayProperty=fullName&gt;</ph>.","pos":[0,183],"source":"The value of the <xref:System.DateTime.Kind%2A?displayProperty=fullName> property of the returned <xref:System.DateTime> object is <xref:System.DateTimeKind?displayProperty=fullName>."}]}],"pos":[87825,88534],"yaml":true,"extradata":"MT"},{"content":"The date and time of the current <xref href=\"System.DateTimeOffset\"></xref> object.","nodes":[{"pos":[0,83],"content":"The date and time of the current <ph id=\"ph1\">&lt;xref href=\"System.DateTimeOffset\"&gt;&lt;/xref&gt;</ph> object.","source":"The date and time of the current <xref href=\"System.DateTimeOffset\"></xref> object."}],"pos":[89243,89327],"yaml":true},{"content":"Gets the day of the month represented by the current <xref href=\"System.DateTimeOffset\"></xref> object.","nodes":[{"pos":[0,103],"content":"Gets the day of the month represented by the current <ph id=\"ph1\">&lt;xref href=\"System.DateTimeOffset\"&gt;&lt;/xref&gt;</ph> object.","source":"Gets the day of the month represented by the current <xref href=\"System.DateTimeOffset\"></xref> object."}],"pos":[90774,90878],"yaml":true},{"content":"The <xref:System.DateTimeOffset.Day%2A> property is not affected by the value of the <xref:System.DateTimeOffset.Offset%2A> property.  \n  \n You can also create a string representation of a <xref:System.DateTimeOffset> object's day component by calling the <xref:System.DateTimeOffset.ToString%2A> method with the \"d\" or \"dd\" custom format specifiers.","nodes":[{"pos":[0,133],"content":"The <xref:System.DateTimeOffset.Day%2A> property is not affected by the value of the <xref:System.DateTimeOffset.Offset%2A> property.","nodes":[{"content":"The <ph id=\"ph1\">&lt;xref:System.DateTimeOffset.Day%2A&gt;</ph> property is not affected by the value of the <ph id=\"ph2\">&lt;xref:System.DateTimeOffset.Offset%2A&gt;</ph> property.","pos":[0,133],"source":"The <xref:System.DateTimeOffset.Day%2A> property is not affected by the value of the <xref:System.DateTimeOffset.Offset%2A> property."}]},{"pos":[140,350],"content":"You can also create a string representation of a <xref:System.DateTimeOffset> object's day component by calling the <xref:System.DateTimeOffset.ToString%2A> method with the \"d\" or \"dd\" custom format specifiers.","nodes":[{"content":"You can also create a string representation of a <ph id=\"ph1\">&lt;xref:System.DateTimeOffset&gt;</ph> object's day component by calling the <ph id=\"ph2\">&lt;xref:System.DateTimeOffset.ToString%2A&gt;</ph> method with the \"d\" or \"dd\" custom format specifiers.","pos":[0,210],"source":"You can also create a string representation of a <xref:System.DateTimeOffset> object's day component by calling the <xref:System.DateTimeOffset.ToString%2A> method with the \"d\" or \"dd\" custom format specifiers."}]}],"pos":[90889,91248],"yaml":true,"extradata":"MT"},{"content":"The day component of the current <xref href=\"System.DateTimeOffset\"></xref> object, expressed as a value between 1 and 31.","nodes":[{"pos":[0,122],"content":"The day component of the current <ph id=\"ph1\">&lt;xref href=\"System.DateTimeOffset\"&gt;&lt;/xref&gt;</ph> object, expressed as a value between 1 and 31.","source":"The day component of the current <xref href=\"System.DateTimeOffset\"></xref> object, expressed as a value between 1 and 31."}],"pos":[92139,92262],"yaml":true},{"content":"Gets the day of the week represented by the current <xref href=\"System.DateTimeOffset\"></xref> object.","nodes":[{"pos":[0,102],"content":"Gets the day of the week represented by the current <ph id=\"ph1\">&lt;xref href=\"System.DateTimeOffset\"&gt;&lt;/xref&gt;</ph> object.","source":"Gets the day of the week represented by the current <xref href=\"System.DateTimeOffset\"></xref> object."}],"pos":[93740,93843],"yaml":true},{"content":"The value of the constants in the <xref:System.DayOfWeek> enumeration ranges from <xref:System.DayOfWeek?displayProperty=fullName> to <xref:System.DayOfWeek?displayProperty=fullName>. If cast to an integer, its value ranges from zero (which indicates <xref:System.DayOfWeek?displayProperty=fullName>) to six (which indicates <xref:System.DayOfWeek?displayProperty=fullName>).  \n  \n You can also display the weekday name of a particular date by using the \"D\" format specifier or the \"dddd\" custom format specifier. For example:  \n  \n [!code-csharp[System.DateTimeOffset.Properties#4](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.DateTimeOffset.Properties/cs/Properties.cs#4)]\n [!code-vb[System.DateTimeOffset.Properties#4](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.DateTimeOffset.Properties/vb/Properties.vb#4)]  \n  \n Note that the string returned by calling the `ToString` method of the <xref:System.DayOfWeek> enumeration member that is returned by this property is not localized. To extract a string that contains the weekday name of the current culture or of a specific culture, call the <xref:System.DateTimeOffset.ToString%2A> method with the \"dddd\" custom format specifier. For example, the following code displays the weekday name for a date using the `fr-fr` culture.  \n  \n [!code-csharp[System.DateTimeOffset.Properties#5](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.DateTimeOffset.Properties/cs/Properties.cs#5)]\n [!code-vb[System.DateTimeOffset.Properties#5](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.DateTimeOffset.Properties/vb/Properties.vb#5)]","nodes":[{"pos":[0,375],"content":"The value of the constants in the <xref:System.DayOfWeek> enumeration ranges from <xref:System.DayOfWeek?displayProperty=fullName> to <xref:System.DayOfWeek?displayProperty=fullName>. If cast to an integer, its value ranges from zero (which indicates <xref:System.DayOfWeek?displayProperty=fullName>) to six (which indicates <xref:System.DayOfWeek?displayProperty=fullName>).","nodes":[{"content":"The value of the constants in the <xref:System.DayOfWeek> enumeration ranges from <xref:System.DayOfWeek?displayProperty=fullName> to <xref:System.DayOfWeek?displayProperty=fullName>. If cast to an integer, its value ranges from zero (which indicates <xref:System.DayOfWeek?displayProperty=fullName>) to six (which indicates <xref:System.DayOfWeek?displayProperty=fullName>).","pos":[0,375],"nodes":[{"content":"The value of the constants in the <ph id=\"ph1\">&lt;xref:System.DayOfWeek&gt;</ph> enumeration ranges from <ph id=\"ph2\">&lt;xref:System.DayOfWeek?displayProperty=fullName&gt;</ph> to <ph id=\"ph3\">&lt;xref:System.DayOfWeek?displayProperty=fullName&gt;</ph>.","pos":[0,183],"source":"The value of the constants in the <xref:System.DayOfWeek> enumeration ranges from <xref:System.DayOfWeek?displayProperty=fullName> to <xref:System.DayOfWeek?displayProperty=fullName>."},{"content":"If cast to an integer, its value ranges from zero (which indicates <ph id=\"ph1\">&lt;xref:System.DayOfWeek?displayProperty=fullName&gt;</ph>) to six (which indicates <ph id=\"ph2\">&lt;xref:System.DayOfWeek?displayProperty=fullName&gt;</ph>).","pos":[184,375],"source":" If cast to an integer, its value ranges from zero (which indicates <xref:System.DayOfWeek?displayProperty=fullName>) to six (which indicates <xref:System.DayOfWeek?displayProperty=fullName>)."}]}]},{"pos":[382,526],"content":"You can also display the weekday name of a particular date by using the \"D\" format specifier or the \"dddd\" custom format specifier. For example:","nodes":[{"content":"You can also display the weekday name of a particular date by using the \"D\" format specifier or the \"dddd\" custom format specifier. For example:","pos":[0,144],"nodes":[{"content":"You can also display the weekday name of a particular date by using the \"D\" format specifier or the \"dddd\" custom format specifier.","pos":[0,131]},{"content":"For example:","pos":[132,144]}]}]},{"pos":[533,840],"content":"<bpt id=\"p1\">[!code-csharp</bpt><bpt id=\"p2\">[</bpt>System.DateTimeOffset.Properties#4<ept id=\"p2\">](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.DateTimeOffset.Properties/cs/Properties.cs#4)</ept><ept id=\"p1\">]</ept> <bpt id=\"p3\">[!code-vb</bpt><bpt id=\"p4\">[</bpt>System.DateTimeOffset.Properties#4<ept id=\"p4\">](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.DateTimeOffset.Properties/vb/Properties.vb#4)</ept><ept id=\"p3\">]</ept>","source":"[!code-csharp[System.DateTimeOffset.Properties#4](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.DateTimeOffset.Properties/cs/Properties.cs#4)]\n [!code-vb[System.DateTimeOffset.Properties#4](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.DateTimeOffset.Properties/vb/Properties.vb#4)]"},{"pos":[847,1305],"content":"Note that the string returned by calling the `ToString` method of the <xref:System.DayOfWeek> enumeration member that is returned by this property is not localized. To extract a string that contains the weekday name of the current culture or of a specific culture, call the <xref:System.DateTimeOffset.ToString%2A> method with the \"dddd\" custom format specifier. For example, the following code displays the weekday name for a date using the `fr-fr` culture.","nodes":[{"content":"Note that the string returned by calling the <ph id=\"ph1\">`ToString`</ph> method of the <ph id=\"ph2\">&lt;xref:System.DayOfWeek&gt;</ph> enumeration member that is returned by this property is not localized.","pos":[0,164],"source":"Note that the string returned by calling the `ToString` method of the <xref:System.DayOfWeek> enumeration member that is returned by this property is not localized."},{"content":"To extract a string that contains the weekday name of the current culture or of a specific culture, call the <ph id=\"ph1\">&lt;xref:System.DateTimeOffset.ToString%2A&gt;</ph> method with the \"dddd\" custom format specifier.","pos":[165,362],"source":" To extract a string that contains the weekday name of the current culture or of a specific culture, call the <xref:System.DateTimeOffset.ToString%2A> method with the \"dddd\" custom format specifier."},{"content":"For example, the following code displays the weekday name for a date using the <ph id=\"ph1\">`fr-fr`</ph> culture.","pos":[363,458],"source":" For example, the following code displays the weekday name for a date using the `fr-fr` culture."}]},{"pos":[1312,1619],"content":"<bpt id=\"p1\">[!code-csharp</bpt><bpt id=\"p2\">[</bpt>System.DateTimeOffset.Properties#5<ept id=\"p2\">](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.DateTimeOffset.Properties/cs/Properties.cs#5)</ept><ept id=\"p1\">]</ept> <bpt id=\"p3\">[!code-vb</bpt><bpt id=\"p4\">[</bpt>System.DateTimeOffset.Properties#5<ept id=\"p4\">](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.DateTimeOffset.Properties/vb/Properties.vb#5)</ept><ept id=\"p3\">]</ept>","source":"[!code-csharp[System.DateTimeOffset.Properties#5](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.DateTimeOffset.Properties/cs/Properties.cs#5)]\n [!code-vb[System.DateTimeOffset.Properties#5](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.DateTimeOffset.Properties/vb/Properties.vb#5)]"}],"pos":[93854,95492],"yaml":true,"extradata":"MT"},{"content":"One of the enumeration values that indicates the day of the week of the current <xref href=\"System.DateTimeOffset\"></xref> object.","nodes":[{"pos":[0,130],"content":"One of the enumeration values that indicates the day of the week of the current <ph id=\"ph1\">&lt;xref href=\"System.DateTimeOffset\"&gt;&lt;/xref&gt;</ph> object.","source":"One of the enumeration values that indicates the day of the week of the current <xref href=\"System.DateTimeOffset\"></xref> object."}],"pos":[96042,96173],"yaml":true},{"content":"Gets the day of the year represented by the current <xref href=\"System.DateTimeOffset\"></xref> object.","nodes":[{"pos":[0,102],"content":"Gets the day of the year represented by the current <ph id=\"ph1\">&lt;xref href=\"System.DateTimeOffset\"&gt;&lt;/xref&gt;</ph> object.","source":"Gets the day of the year represented by the current <xref href=\"System.DateTimeOffset\"></xref> object."}],"pos":[97657,97760],"yaml":true},{"content":"The day of the year of the current <xref href=\"System.DateTimeOffset\"></xref> object, expressed as a value between 1 and 366.","nodes":[{"pos":[0,125],"content":"The day of the year of the current <ph id=\"ph1\">&lt;xref href=\"System.DateTimeOffset\"&gt;&lt;/xref&gt;</ph> object, expressed as a value between 1 and 366.","source":"The day of the year of the current <xref href=\"System.DateTimeOffset\"></xref> object, expressed as a value between 1 and 366."}],"pos":[97869,97995],"yaml":true},{"content":"Determines whether the current <xref href=\"System.DateTimeOffset\"></xref> object represents the same point in time as a specified <xref href=\"System.DateTimeOffset\"></xref> object.","nodes":[{"pos":[0,180],"content":"Determines whether the current <ph id=\"ph1\">&lt;xref href=\"System.DateTimeOffset\"&gt;&lt;/xref&gt;</ph> object represents the same point in time as a specified <ph id=\"ph2\">&lt;xref href=\"System.DateTimeOffset\"&gt;&lt;/xref&gt;</ph> object.","source":"Determines whether the current <xref href=\"System.DateTimeOffset\"></xref> object represents the same point in time as a specified <xref href=\"System.DateTimeOffset\"></xref> object."}],"pos":[99576,99757],"yaml":true},{"content":"Before it performs the comparison, this method converts the values of both <xref:System.DateTimeOffset> objects to Coordinated Universal Time (UTC). The method is equivalent to the following:  \n  \n [!code-csharp[System.DateTimeOffset.Syntax#2](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.DateTimeOffset.Syntax/cs/Syntax.cs#2)]\n [!code-vb[System.DateTimeOffset.Syntax#2](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.DateTimeOffset.Syntax/vb/Syntax.vb#2)]  \n  \n In other words, the <xref:System.DateTimeOffset.Equals%28System.DateTimeOffset%29> method determines whether two <xref:System.DateTimeOffset> objects represent a single point in time. It directly compares neither dates and times nor offsets. To determine whether two <xref:System.DateTimeOffset> objects represent the same time and have the same offset value, use the <xref:System.DateTimeOffset.EqualsExact%2A> method.  \n  \n A <xref:System.DateTimeOffset> object that is not `null` is considered to be later (or greater) than one that is `null`.  \n  \n This overload of the <xref:System.DateTimeOffset.Equals%28System.DateTimeOffset%29> method implements the <xref:System.IEquatable%601.Equals%2A?displayProperty=fullName> method. It offers slightly better performance than the <xref:System.DateTimeOffset.Equals%28System.Object%29?displayProperty=fullName> overload because the `other` parameter does not have to be converted from an object.","nodes":[{"pos":[0,191],"content":"Before it performs the comparison, this method converts the values of both <xref:System.DateTimeOffset> objects to Coordinated Universal Time (UTC). The method is equivalent to the following:","nodes":[{"content":"Before it performs the comparison, this method converts the values of both <xref:System.DateTimeOffset> objects to Coordinated Universal Time (UTC). The method is equivalent to the following:","pos":[0,191],"nodes":[{"content":"Before it performs the comparison, this method converts the values of both <ph id=\"ph1\">&lt;xref:System.DateTimeOffset&gt;</ph> objects to Coordinated Universal Time (UTC).","pos":[0,148],"source":"Before it performs the comparison, this method converts the values of both <xref:System.DateTimeOffset> objects to Coordinated Universal Time (UTC)."},{"content":"The method is equivalent to the following:","pos":[149,191]}]}]},{"pos":[198,481],"content":"<bpt id=\"p1\">[!code-csharp</bpt><bpt id=\"p2\">[</bpt>System.DateTimeOffset.Syntax#2<ept id=\"p2\">](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.DateTimeOffset.Syntax/cs/Syntax.cs#2)</ept><ept id=\"p1\">]</ept> <bpt id=\"p3\">[!code-vb</bpt><bpt id=\"p4\">[</bpt>System.DateTimeOffset.Syntax#2<ept id=\"p4\">](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.DateTimeOffset.Syntax/vb/Syntax.vb#2)</ept><ept id=\"p3\">]</ept>","source":"[!code-csharp[System.DateTimeOffset.Syntax#2](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.DateTimeOffset.Syntax/cs/Syntax.cs#2)]\n [!code-vb[System.DateTimeOffset.Syntax#2](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.DateTimeOffset.Syntax/vb/Syntax.vb#2)]"},{"pos":[488,907],"content":"In other words, the <xref:System.DateTimeOffset.Equals%28System.DateTimeOffset%29> method determines whether two <xref:System.DateTimeOffset> objects represent a single point in time. It directly compares neither dates and times nor offsets. To determine whether two <xref:System.DateTimeOffset> objects represent the same time and have the same offset value, use the <xref:System.DateTimeOffset.EqualsExact%2A> method.","nodes":[{"content":"In other words, the <xref:System.DateTimeOffset.Equals%28System.DateTimeOffset%29> method determines whether two <xref:System.DateTimeOffset> objects represent a single point in time. It directly compares neither dates and times nor offsets. To determine whether two <xref:System.DateTimeOffset> objects represent the same time and have the same offset value, use the <xref:System.DateTimeOffset.EqualsExact%2A> method.","pos":[0,419],"nodes":[{"content":"In other words, the <ph id=\"ph1\">&lt;xref:System.DateTimeOffset.Equals%28System.DateTimeOffset%29&gt;</ph> method determines whether two <ph id=\"ph2\">&lt;xref:System.DateTimeOffset&gt;</ph> objects represent a single point in time.","pos":[0,183],"source":"In other words, the <xref:System.DateTimeOffset.Equals%28System.DateTimeOffset%29> method determines whether two <xref:System.DateTimeOffset> objects represent a single point in time."},{"content":"It directly compares neither dates and times nor offsets.","pos":[184,241]},{"content":"To determine whether two <ph id=\"ph1\">&lt;xref:System.DateTimeOffset&gt;</ph> objects represent the same time and have the same offset value, use the <ph id=\"ph2\">&lt;xref:System.DateTimeOffset.EqualsExact%2A&gt;</ph> method.","pos":[242,419],"source":" To determine whether two <xref:System.DateTimeOffset> objects represent the same time and have the same offset value, use the <xref:System.DateTimeOffset.EqualsExact%2A> method."}]}]},{"pos":[914,1034],"content":"A <ph id=\"ph1\">&lt;xref:System.DateTimeOffset&gt;</ph> object that is not <ph id=\"ph2\">`null`</ph> is considered to be later (or greater) than one that is <ph id=\"ph3\">`null`</ph>.","source":"A <xref:System.DateTimeOffset> object that is not `null` is considered to be later (or greater) than one that is `null`."},{"pos":[1041,1430],"content":"This overload of the <xref:System.DateTimeOffset.Equals%28System.DateTimeOffset%29> method implements the <xref:System.IEquatable%601.Equals%2A?displayProperty=fullName> method. It offers slightly better performance than the <xref:System.DateTimeOffset.Equals%28System.Object%29?displayProperty=fullName> overload because the `other` parameter does not have to be converted from an object.","nodes":[{"content":"This overload of the <ph id=\"ph1\">&lt;xref:System.DateTimeOffset.Equals%28System.DateTimeOffset%29&gt;</ph> method implements the <ph id=\"ph2\">&lt;xref:System.IEquatable%601.Equals%2A?displayProperty=fullName&gt;</ph> method.","pos":[0,177],"source":"This overload of the <xref:System.DateTimeOffset.Equals%28System.DateTimeOffset%29> method implements the <xref:System.IEquatable%601.Equals%2A?displayProperty=fullName> method."},{"content":"It offers slightly better performance than the <ph id=\"ph1\">&lt;xref:System.DateTimeOffset.Equals%28System.Object%29?displayProperty=fullName&gt;</ph> overload because the <ph id=\"ph2\">`other`</ph> parameter does not have to be converted from an object.","pos":[178,389],"source":" It offers slightly better performance than the <xref:System.DateTimeOffset.Equals%28System.Object%29?displayProperty=fullName> overload because the `other` parameter does not have to be converted from an object."}]}],"pos":[99768,101210],"yaml":true,"extradata":"MT"},{"content":"An object to compare to the current <xref href=\"System.DateTimeOffset\"></xref> object.","nodes":[{"pos":[0,86],"content":"An object to compare to the current <ph id=\"ph1\">&lt;xref href=\"System.DateTimeOffset\"&gt;&lt;/xref&gt;</ph> object.","source":"An object to compare to the current <xref href=\"System.DateTimeOffset\"></xref> object."}],"pos":[101906,101993],"yaml":true},{"content":"`true` if both <xref href=\"System.DateTimeOffset\"></xref> objects have the same <xref href=\"System.DateTimeOffset.UtcDateTime\"></xref> value; otherwise, `false`.","nodes":[{"pos":[0,161],"content":"<ph id=\"ph1\">`true`</ph> if both <ph id=\"ph2\">&lt;xref href=\"System.DateTimeOffset\"&gt;&lt;/xref&gt;</ph> objects have the same <ph id=\"ph3\">&lt;xref href=\"System.DateTimeOffset.UtcDateTime\"&gt;&lt;/xref&gt;</ph> value; otherwise, <ph id=\"ph4\">`false`</ph>.","source":"`true` if both <xref href=\"System.DateTimeOffset\"></xref> objects have the same <xref href=\"System.DateTimeOffset.UtcDateTime\"></xref> value; otherwise, `false`."}],"pos":[102051,102215],"yaml":true},{"content":"Determines whether a <xref href=\"System.DateTimeOffset\"></xref> object represents the same point in time as a specified object.","nodes":[{"pos":[0,127],"content":"Determines whether a <ph id=\"ph1\">&lt;xref href=\"System.DateTimeOffset\"&gt;&lt;/xref&gt;</ph> object represents the same point in time as a specified object.","source":"Determines whether a <xref href=\"System.DateTimeOffset\"></xref> object represents the same point in time as a specified object."}],"pos":[103745,103873],"yaml":true},{"content":"Before it performs the comparison, this method converts the values of both the current <xref:System.DateTimeOffset> object and the `obj` parameter to Coordinated Universal Time (UTC). The method is equivalent to the following:  \n  \n [!code-csharp[System.DateTimeOffset.Syntax#3](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.DateTimeOffset.Syntax/cs/Syntax.cs#3)]\n [!code-vb[System.DateTimeOffset.Syntax#3](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.DateTimeOffset.Syntax/vb/Syntax.vb#3)]  \n  \n In other words, the <xref:System.DateTimeOffset.Equals%28System.Object%29?displayProperty=fullName> method determines whether the current <xref:System.DateTimeOffset> object and a specified object represent a single point in time. It directly compares neither dates and times nor offsets. To determine whether two <xref:System.DateTimeOffset> objects represent the same time and have the same offset value, use the <xref:System.DateTimeOffset.EqualsExact%2A> method.  \n  \n If `obj` is `null`, or if the run-time type of `obj` is not <xref:System.DateTimeOffset>, the method returns `false`.","nodes":[{"pos":[0,226],"content":"Before it performs the comparison, this method converts the values of both the current <xref:System.DateTimeOffset> object and the `obj` parameter to Coordinated Universal Time (UTC). The method is equivalent to the following:","nodes":[{"content":"Before it performs the comparison, this method converts the values of both the current <ph id=\"ph1\">&lt;xref:System.DateTimeOffset&gt;</ph> object and the <ph id=\"ph2\">`obj`</ph> parameter to Coordinated Universal Time (UTC).","pos":[0,183],"source":"Before it performs the comparison, this method converts the values of both the current <xref:System.DateTimeOffset> object and the `obj` parameter to Coordinated Universal Time (UTC)."},{"content":"The method is equivalent to the following:","pos":[184,226]}]},{"pos":[233,516],"content":"<bpt id=\"p1\">[!code-csharp</bpt><bpt id=\"p2\">[</bpt>System.DateTimeOffset.Syntax#3<ept id=\"p2\">](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.DateTimeOffset.Syntax/cs/Syntax.cs#3)</ept><ept id=\"p1\">]</ept> <bpt id=\"p3\">[!code-vb</bpt><bpt id=\"p4\">[</bpt>System.DateTimeOffset.Syntax#3<ept id=\"p4\">](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.DateTimeOffset.Syntax/vb/Syntax.vb#3)</ept><ept id=\"p3\">]</ept>","source":"[!code-csharp[System.DateTimeOffset.Syntax#3](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.DateTimeOffset.Syntax/cs/Syntax.cs#3)]\n [!code-vb[System.DateTimeOffset.Syntax#3](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.DateTimeOffset.Syntax/vb/Syntax.vb#3)]"},{"pos":[523,989],"content":"In other words, the <xref:System.DateTimeOffset.Equals%28System.Object%29?displayProperty=fullName> method determines whether the current <xref:System.DateTimeOffset> object and a specified object represent a single point in time. It directly compares neither dates and times nor offsets. To determine whether two <xref:System.DateTimeOffset> objects represent the same time and have the same offset value, use the <xref:System.DateTimeOffset.EqualsExact%2A> method.","nodes":[{"content":"In other words, the <xref:System.DateTimeOffset.Equals%28System.Object%29?displayProperty=fullName> method determines whether the current <xref:System.DateTimeOffset> object and a specified object represent a single point in time. It directly compares neither dates and times nor offsets. To determine whether two <xref:System.DateTimeOffset> objects represent the same time and have the same offset value, use the <xref:System.DateTimeOffset.EqualsExact%2A> method.","pos":[0,466],"nodes":[{"content":"In other words, the <ph id=\"ph1\">&lt;xref:System.DateTimeOffset.Equals%28System.Object%29?displayProperty=fullName&gt;</ph> method determines whether the current <ph id=\"ph2\">&lt;xref:System.DateTimeOffset&gt;</ph> object and a specified object represent a single point in time.","pos":[0,230],"source":"In other words, the <xref:System.DateTimeOffset.Equals%28System.Object%29?displayProperty=fullName> method determines whether the current <xref:System.DateTimeOffset> object and a specified object represent a single point in time."},{"content":"It directly compares neither dates and times nor offsets.","pos":[231,288]},{"content":"To determine whether two <ph id=\"ph1\">&lt;xref:System.DateTimeOffset&gt;</ph> objects represent the same time and have the same offset value, use the <ph id=\"ph2\">&lt;xref:System.DateTimeOffset.EqualsExact%2A&gt;</ph> method.","pos":[289,466],"source":" To determine whether two <xref:System.DateTimeOffset> objects represent the same time and have the same offset value, use the <xref:System.DateTimeOffset.EqualsExact%2A> method."}]}]},{"pos":[996,1113],"content":"If <ph id=\"ph1\">`obj`</ph> is <ph id=\"ph2\">`null`</ph>, or if the run-time type of <ph id=\"ph3\">`obj`</ph> is not <ph id=\"ph4\">&lt;xref:System.DateTimeOffset&gt;</ph>, the method returns <ph id=\"ph5\">`false`</ph>.","source":"If `obj` is `null`, or if the run-time type of `obj` is not <xref:System.DateTimeOffset>, the method returns `false`."}],"pos":[103884,105007],"yaml":true,"extradata":"MT"},{"content":"The object to compare to the current <xref href=\"System.DateTimeOffset\"></xref> object.","nodes":[{"pos":[0,87],"content":"The object to compare to the current <ph id=\"ph1\">&lt;xref href=\"System.DateTimeOffset\"&gt;&lt;/xref&gt;</ph> object.","source":"The object to compare to the current <xref href=\"System.DateTimeOffset\"></xref> object."}],"pos":[105687,105775],"yaml":true},{"content":"`true` if the <code>obj</code> parameter is a <xref href=\"System.DateTimeOffset\"></xref> object and represents the same point in time as the current <xref href=\"System.DateTimeOffset\"></xref> object; otherwise, `false`.","nodes":[{"pos":[0,219],"content":"<ph id=\"ph1\">`true`</ph> if the <bpt id=\"p1\">&lt;code&gt;</bpt><ph id=\"ph2\">obj</ph><ept id=\"p1\">&lt;/code&gt;</ept> parameter is a <ph id=\"ph3\">&lt;xref href=\"System.DateTimeOffset\"&gt;&lt;/xref&gt;</ph> object and represents the same point in time as the current <ph id=\"ph4\">&lt;xref href=\"System.DateTimeOffset\"&gt;&lt;/xref&gt;</ph> object; otherwise, <ph id=\"ph5\">`false`</ph>.","source":"`true` if the <code>obj</code> parameter is a <xref href=\"System.DateTimeOffset\"></xref> object and represents the same point in time as the current <xref href=\"System.DateTimeOffset\"></xref> object; otherwise, `false`."}],"pos":[105833,106055],"yaml":true},{"content":"Determines whether two specified <xref href=\"System.DateTimeOffset\"></xref> objects represent the same point in time.","nodes":[{"pos":[0,117],"content":"Determines whether two specified <ph id=\"ph1\">&lt;xref href=\"System.DateTimeOffset\"&gt;&lt;/xref&gt;</ph> objects represent the same point in time.","source":"Determines whether two specified <xref href=\"System.DateTimeOffset\"></xref> objects represent the same point in time."}],"pos":[107747,107865],"yaml":true},{"content":"Before it performs the comparison, this method converts both <xref:System.DateTimeOffset> objects to Coordinated Universal Time (UTC). The method is equivalent to the following:  \n  \n [!code-csharp[System.DateTimeOffset.Syntax#4](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.DateTimeOffset.Syntax/cs/Syntax.cs#4)]\n [!code-vb[System.DateTimeOffset.Syntax#4](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.DateTimeOffset.Syntax/vb/Syntax.vb#4)]  \n  \n In other words, the <xref:System.DateTimeOffset.Equals%28System.DateTimeOffset%2CSystem.DateTimeOffset%29> method determines whether the two <xref:System.DateTimeOffset> objects represent a single point in time. It directly compares neither dates and times nor offsets. To determine whether two <xref:System.DateTimeOffset> objects represent the same time and have the same offset value, use the <xref:System.DateTimeOffset.EqualsExact%2A> method.","nodes":[{"pos":[0,177],"content":"Before it performs the comparison, this method converts both <xref:System.DateTimeOffset> objects to Coordinated Universal Time (UTC). The method is equivalent to the following:","nodes":[{"content":"Before it performs the comparison, this method converts both <xref:System.DateTimeOffset> objects to Coordinated Universal Time (UTC). The method is equivalent to the following:","pos":[0,177],"nodes":[{"content":"Before it performs the comparison, this method converts both <ph id=\"ph1\">&lt;xref:System.DateTimeOffset&gt;</ph> objects to Coordinated Universal Time (UTC).","pos":[0,134],"source":"Before it performs the comparison, this method converts both <xref:System.DateTimeOffset> objects to Coordinated Universal Time (UTC)."},{"content":"The method is equivalent to the following:","pos":[135,177]}]}]},{"pos":[184,467],"content":"<bpt id=\"p1\">[!code-csharp</bpt><bpt id=\"p2\">[</bpt>System.DateTimeOffset.Syntax#4<ept id=\"p2\">](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.DateTimeOffset.Syntax/cs/Syntax.cs#4)</ept><ept id=\"p1\">]</ept> <bpt id=\"p3\">[!code-vb</bpt><bpt id=\"p4\">[</bpt>System.DateTimeOffset.Syntax#4<ept id=\"p4\">](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.DateTimeOffset.Syntax/vb/Syntax.vb#4)</ept><ept id=\"p3\">]</ept>","source":"[!code-csharp[System.DateTimeOffset.Syntax#4](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.DateTimeOffset.Syntax/cs/Syntax.cs#4)]\n [!code-vb[System.DateTimeOffset.Syntax#4](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.DateTimeOffset.Syntax/vb/Syntax.vb#4)]"},{"pos":[474,921],"content":"In other words, the <xref:System.DateTimeOffset.Equals%28System.DateTimeOffset%2CSystem.DateTimeOffset%29> method determines whether the two <xref:System.DateTimeOffset> objects represent a single point in time. It directly compares neither dates and times nor offsets. To determine whether two <xref:System.DateTimeOffset> objects represent the same time and have the same offset value, use the <xref:System.DateTimeOffset.EqualsExact%2A> method.","nodes":[{"content":"In other words, the <xref:System.DateTimeOffset.Equals%28System.DateTimeOffset%2CSystem.DateTimeOffset%29> method determines whether the two <xref:System.DateTimeOffset> objects represent a single point in time. It directly compares neither dates and times nor offsets. To determine whether two <xref:System.DateTimeOffset> objects represent the same time and have the same offset value, use the <xref:System.DateTimeOffset.EqualsExact%2A> method.","pos":[0,447],"nodes":[{"content":"In other words, the <ph id=\"ph1\">&lt;xref:System.DateTimeOffset.Equals%28System.DateTimeOffset%2CSystem.DateTimeOffset%29&gt;</ph> method determines whether the two <ph id=\"ph2\">&lt;xref:System.DateTimeOffset&gt;</ph> objects represent a single point in time.","pos":[0,211],"source":"In other words, the <xref:System.DateTimeOffset.Equals%28System.DateTimeOffset%2CSystem.DateTimeOffset%29> method determines whether the two <xref:System.DateTimeOffset> objects represent a single point in time."},{"content":"It directly compares neither dates and times nor offsets.","pos":[212,269]},{"content":"To determine whether two <ph id=\"ph1\">&lt;xref:System.DateTimeOffset&gt;</ph> objects represent the same time and have the same offset value, use the <ph id=\"ph2\">&lt;xref:System.DateTimeOffset.EqualsExact%2A&gt;</ph> method.","pos":[270,447],"source":" To determine whether two <xref:System.DateTimeOffset> objects represent the same time and have the same offset value, use the <xref:System.DateTimeOffset.EqualsExact%2A> method."}]}]}],"pos":[107876,108805],"yaml":true,"extradata":"MT"},{"content":"The first object to compare.","nodes":[{"pos":[0,28],"content":"The first object to compare.","nodes":[{"content":"The first object to compare.","pos":[0,28]}]}],"pos":[109523,109552],"yaml":true},{"content":"The second object to compare.","nodes":[{"pos":[0,29],"content":"The second object to compare.","nodes":[{"content":"The second object to compare.","pos":[0,29]}]}],"pos":[109622,109652],"yaml":true},{"content":"`true` if the two <xref href=\"System.DateTimeOffset\"></xref> objects have the same <xref href=\"System.DateTimeOffset.UtcDateTime\"></xref> value; otherwise, `false`.","nodes":[{"pos":[0,164],"content":"<ph id=\"ph1\">`true`</ph> if the two <ph id=\"ph2\">&lt;xref href=\"System.DateTimeOffset\"&gt;&lt;/xref&gt;</ph> objects have the same <ph id=\"ph3\">&lt;xref href=\"System.DateTimeOffset.UtcDateTime\"&gt;&lt;/xref&gt;</ph> value; otherwise, <ph id=\"ph4\">`false`</ph>.","source":"`true` if the two <xref href=\"System.DateTimeOffset\"></xref> objects have the same <xref href=\"System.DateTimeOffset.UtcDateTime\"></xref> value; otherwise, `false`."}],"pos":[109710,109877],"yaml":true},{"content":"Determines whether the current <xref href=\"System.DateTimeOffset\"></xref> object represents the same time and has the same offset as a specified <xref href=\"System.DateTimeOffset\"></xref> object.","nodes":[{"pos":[0,195],"content":"Determines whether the current <ph id=\"ph1\">&lt;xref href=\"System.DateTimeOffset\"&gt;&lt;/xref&gt;</ph> object represents the same time and has the same offset as a specified <ph id=\"ph2\">&lt;xref href=\"System.DateTimeOffset\"&gt;&lt;/xref&gt;</ph> object.","source":"Determines whether the current <xref href=\"System.DateTimeOffset\"></xref> object represents the same time and has the same offset as a specified <xref href=\"System.DateTimeOffset\"></xref> object."}],"pos":[111485,111681],"yaml":true},{"content":"Because multiple time zones share a single offset, a return value of `true` does not guarantee that the current and the `other` object represent times in the same time zone.  \n  \n Unlike the <xref:System.DateTimeOffset.EqualsExact%2A> method, the overloads of the <xref:System.DateTimeOffset.Equals%2A> method determine only whether two <xref:System.DateTimeOffset> values represent a single point in time. They do not indicate that two values have the same date and time as well as the same offset.","nodes":[{"pos":[0,173],"content":"Because multiple time zones share a single offset, a return value of <ph id=\"ph1\">`true`</ph> does not guarantee that the current and the <ph id=\"ph2\">`other`</ph> object represent times in the same time zone.","source":"Because multiple time zones share a single offset, a return value of `true` does not guarantee that the current and the `other` object represent times in the same time zone."},{"pos":[180,499],"content":"Unlike the <xref:System.DateTimeOffset.EqualsExact%2A> method, the overloads of the <xref:System.DateTimeOffset.Equals%2A> method determine only whether two <xref:System.DateTimeOffset> values represent a single point in time. They do not indicate that two values have the same date and time as well as the same offset.","nodes":[{"content":"Unlike the <xref:System.DateTimeOffset.EqualsExact%2A> method, the overloads of the <xref:System.DateTimeOffset.Equals%2A> method determine only whether two <xref:System.DateTimeOffset> values represent a single point in time. They do not indicate that two values have the same date and time as well as the same offset.","pos":[0,319],"nodes":[{"content":"Unlike the <ph id=\"ph1\">&lt;xref:System.DateTimeOffset.EqualsExact%2A&gt;</ph> method, the overloads of the <ph id=\"ph2\">&lt;xref:System.DateTimeOffset.Equals%2A&gt;</ph> method determine only whether two <ph id=\"ph3\">&lt;xref:System.DateTimeOffset&gt;</ph> values represent a single point in time.","pos":[0,226],"source":"Unlike the <xref:System.DateTimeOffset.EqualsExact%2A> method, the overloads of the <xref:System.DateTimeOffset.Equals%2A> method determine only whether two <xref:System.DateTimeOffset> values represent a single point in time."},{"content":"They do not indicate that two values have the same date and time as well as the same offset.","pos":[227,319]}]}]}],"pos":[111692,112196],"yaml":true,"extradata":"MT"},{"content":"The object to compare to the current <xref href=\"System.DateTimeOffset\"></xref> object.","nodes":[{"pos":[0,87],"content":"The object to compare to the current <ph id=\"ph1\">&lt;xref href=\"System.DateTimeOffset\"&gt;&lt;/xref&gt;</ph> object.","source":"The object to compare to the current <xref href=\"System.DateTimeOffset\"></xref> object."}],"pos":[112829,112917],"yaml":true},{"content":"`true` if the current <xref href=\"System.DateTimeOffset\"></xref> object and <code>other</code> have the same date and time value and the same <xref href=\"System.DateTimeOffset.Offset\"></xref> value; otherwise, `false`.","nodes":[{"pos":[0,218],"content":"<ph id=\"ph1\">`true`</ph> if the current <ph id=\"ph2\">&lt;xref href=\"System.DateTimeOffset\"&gt;&lt;/xref&gt;</ph> object and <bpt id=\"p1\">&lt;code&gt;</bpt><ph id=\"ph3\">other</ph><ept id=\"p1\">&lt;/code&gt;</ept> have the same date and time value and the same <ph id=\"ph4\">&lt;xref href=\"System.DateTimeOffset.Offset\"&gt;&lt;/xref&gt;</ph> value; otherwise, <ph id=\"ph5\">`false`</ph>.","source":"`true` if the current <xref href=\"System.DateTimeOffset\"></xref> object and <code>other</code> have the same date and time value and the same <xref href=\"System.DateTimeOffset.Offset\"></xref> value; otherwise, `false`."}],"pos":[112975,113196],"yaml":true},{"content":"Converts the specified Windows file time to an equivalent local time.","nodes":[{"pos":[0,69],"content":"Converts the specified Windows file time to an equivalent local time.","nodes":[{"content":"Converts the specified Windows file time to an equivalent local time.","pos":[0,69]}]}],"pos":[114761,114831],"yaml":true},{"content":"A Windows file time is a 64-bit value that represents the number of 100-nanosecond intervals that have elapsed since 12:00 midnight, January 1, 1601 A.D. (C.E.) Coordinated Universal Time (UTC). Windows uses a file time to record when an application creates, accesses, or writes to a file.  \n  \n A Windows file time is directly accessible through the Windows API by calling the `GetFileTime` function, which returns a `FILETIME` structure. The single function parameter is the handle of the file whose file time information is to be retrieved. The file handle is retrieved by calling the `CreateFile` function. The `FILETIME` structure's `dwHighDateTime` member contains the four high-order bytes of the file time, and its `dwLowDateTime` member contains the four low-order bytes. The example that follows illustrates how to retrieve Windows file time values and convert them to <xref:System.DateTimeOffset> values.  \n  \n Windows file time values can also be created from <xref:System.DateTime> values by calling the <xref:System.DateTime.ToFileTime%2A?displayProperty=fullName> and <xref:System.DateTime.ToFileTimeUtc%2A?displayProperty=fullName> methods, and from <xref:System.DateTimeOffset> values by calling the <xref:System.DateTimeOffset.ToFileTime%2A?displayProperty=fullName> method.","nodes":[{"pos":[0,289],"content":"A Windows file time is a 64-bit value that represents the number of 100-nanosecond intervals that have elapsed since 12:00 midnight, January 1, 1601 A.D. (C.E.) Coordinated Universal Time (UTC). Windows uses a file time to record when an application creates, accesses, or writes to a file.","nodes":[{"content":"A Windows file time is a 64-bit value that represents the number of 100-nanosecond intervals that have elapsed since 12:00 midnight, January 1, 1601 A.D. (C.E.) Coordinated Universal Time (UTC). Windows uses a file time to record when an application creates, accesses, or writes to a file.","pos":[0,289],"nodes":[{"content":"A Windows file time is a 64-bit value that represents the number of 100-nanosecond intervals that have elapsed since 12:00 midnight, January 1, 1601 A.D.","pos":[0,153]},{"content":"(C.E.) Coordinated Universal Time (UTC).","pos":[154,194]},{"content":"Windows uses a file time to record when an application creates, accesses, or writes to a file.","pos":[195,289]}]}]},{"pos":[296,915],"content":"A Windows file time is directly accessible through the Windows API by calling the `GetFileTime` function, which returns a `FILETIME` structure. The single function parameter is the handle of the file whose file time information is to be retrieved. The file handle is retrieved by calling the `CreateFile` function. The `FILETIME` structure's `dwHighDateTime` member contains the four high-order bytes of the file time, and its `dwLowDateTime` member contains the four low-order bytes. The example that follows illustrates how to retrieve Windows file time values and convert them to <xref:System.DateTimeOffset> values.","nodes":[{"content":"A Windows file time is directly accessible through the Windows API by calling the <ph id=\"ph1\">`GetFileTime`</ph> function, which returns a <ph id=\"ph2\">`FILETIME`</ph> structure.","pos":[0,143],"source":"A Windows file time is directly accessible through the Windows API by calling the `GetFileTime` function, which returns a `FILETIME` structure."},{"content":"The single function parameter is the handle of the file whose file time information is to be retrieved.","pos":[144,247]},{"content":"The file handle is retrieved by calling the <ph id=\"ph1\">`CreateFile`</ph> function.","pos":[248,314],"source":" The file handle is retrieved by calling the `CreateFile` function."},{"content":"The <ph id=\"ph1\">`FILETIME`</ph> structure's <ph id=\"ph2\">`dwHighDateTime`</ph> member contains the four high-order bytes of the file time, and its <ph id=\"ph3\">`dwLowDateTime`</ph> member contains the four low-order bytes.","pos":[315,484],"source":" The `FILETIME` structure's `dwHighDateTime` member contains the four high-order bytes of the file time, and its `dwLowDateTime` member contains the four low-order bytes."},{"content":"The example that follows illustrates how to retrieve Windows file time values and convert them to <ph id=\"ph1\">&lt;xref:System.DateTimeOffset&gt;</ph> values.","pos":[485,619],"source":" The example that follows illustrates how to retrieve Windows file time values and convert them to <xref:System.DateTimeOffset> values."}]},{"pos":[922,1292],"content":"Windows file time values can also be created from <xref:System.DateTime> values by calling the <xref:System.DateTime.ToFileTime%2A?displayProperty=fullName> and <xref:System.DateTime.ToFileTimeUtc%2A?displayProperty=fullName> methods, and from <xref:System.DateTimeOffset> values by calling the <xref:System.DateTimeOffset.ToFileTime%2A?displayProperty=fullName> method.","nodes":[{"content":"Windows file time values can also be created from <ph id=\"ph1\">&lt;xref:System.DateTime&gt;</ph> values by calling the <ph id=\"ph2\">&lt;xref:System.DateTime.ToFileTime%2A?displayProperty=fullName&gt;</ph> and <ph id=\"ph3\">&lt;xref:System.DateTime.ToFileTimeUtc%2A?displayProperty=fullName&gt;</ph> methods, and from <ph id=\"ph4\">&lt;xref:System.DateTimeOffset&gt;</ph> values by calling the <ph id=\"ph5\">&lt;xref:System.DateTimeOffset.ToFileTime%2A?displayProperty=fullName&gt;</ph> method.","pos":[0,370],"source":"Windows file time values can also be created from <xref:System.DateTime> values by calling the <xref:System.DateTime.ToFileTime%2A?displayProperty=fullName> and <xref:System.DateTime.ToFileTimeUtc%2A?displayProperty=fullName> methods, and from <xref:System.DateTimeOffset> values by calling the <xref:System.DateTimeOffset.ToFileTime%2A?displayProperty=fullName> method."}]}],"pos":[114842,116141],"yaml":true,"extradata":"MT"},{"content":"A Windows file time, expressed in ticks.","nodes":[{"pos":[0,40],"content":"A Windows file time, expressed in ticks.","nodes":[{"content":"A Windows file time, expressed in ticks.","pos":[0,40]}]}],"pos":[116746,116787],"yaml":true},{"content":"An object that represents the date and time of <code>fileTime</code> with the offset set to the local time offset.","nodes":[{"pos":[0,114],"content":"An object that represents the date and time of <bpt id=\"p1\">&lt;code&gt;</bpt><ph id=\"ph1\">fileTime</ph><ept id=\"p1\">&lt;/code&gt;</ept> with the offset set to the local time offset.","source":"An object that represents the date and time of <code>fileTime</code> with the offset set to the local time offset."}],"pos":[116852,116967],"yaml":true},{"content":"<code>filetime</code> is less than zero.  \n  \n -or-  \n  \n <code>filetime</code> is greater than `DateTimeOffset.MaxValue.Ticks`.","nodes":[{"pos":[0,40],"content":"<ph id=\"ph1\">&lt;code&gt;filetime&lt;/code&gt;</ph> is less than zero.","source":"<code>filetime</code> is less than zero."},{"pos":[47,51],"content":"-or-","nodes":[{"content":"-or-","pos":[0,4]}]},{"pos":[58,128],"content":"<ph id=\"ph1\">&lt;code&gt;filetime&lt;/code&gt;</ph> is greater than <ph id=\"ph2\">`DateTimeOffset.MaxValue.Ticks`</ph>.","source":"<code>filetime</code> is greater than `DateTimeOffset.MaxValue.Ticks`."}],"pos":[117143,117278],"yaml":true},{"content":"Converts a Unix time expressed as the number of milliseconds that have elapsed since 1970-01-01T00:00:00Z to a <xref href=\"System.DateTimeOffset\"></xref> value.","nodes":[{"pos":[0,160],"content":"Converts a Unix time expressed as the number of milliseconds that have elapsed since 1970-01-01T00:00:00Z to a <ph id=\"ph1\">&lt;xref href=\"System.DateTimeOffset\"&gt;&lt;/xref&gt;</ph> value.","source":"Converts a Unix time expressed as the number of milliseconds that have elapsed since 1970-01-01T00:00:00Z to a <xref href=\"System.DateTimeOffset\"></xref> value."}],"pos":[118851,119012],"yaml":true},{"content":"The <xref:System.DateTimeOffset.Offset%2A> property value of the returned <xref:System.DateTimeOffset> instance is <xref:System.TimeSpan.Zero?displayProperty=fullName>, which represents Coordinated Universal Time. You can convert it to the time in a specific time zone by calling the <xref:System.TimeZoneInfo.ConvertTime%28System.DateTimeOffset%2CSystem.TimeZoneInfo%29?displayProperty=fullName> method.","nodes":[{"pos":[0,404],"content":"The <xref:System.DateTimeOffset.Offset%2A> property value of the returned <xref:System.DateTimeOffset> instance is <xref:System.TimeSpan.Zero?displayProperty=fullName>, which represents Coordinated Universal Time. You can convert it to the time in a specific time zone by calling the <xref:System.TimeZoneInfo.ConvertTime%28System.DateTimeOffset%2CSystem.TimeZoneInfo%29?displayProperty=fullName> method.","nodes":[{"content":"The <xref:System.DateTimeOffset.Offset%2A> property value of the returned <xref:System.DateTimeOffset> instance is <xref:System.TimeSpan.Zero?displayProperty=fullName>, which represents Coordinated Universal Time. You can convert it to the time in a specific time zone by calling the <xref:System.TimeZoneInfo.ConvertTime%28System.DateTimeOffset%2CSystem.TimeZoneInfo%29?displayProperty=fullName> method.","pos":[0,404],"nodes":[{"content":"The <ph id=\"ph1\">&lt;xref:System.DateTimeOffset.Offset%2A&gt;</ph> property value of the returned <ph id=\"ph2\">&lt;xref:System.DateTimeOffset&gt;</ph> instance is <ph id=\"ph3\">&lt;xref:System.TimeSpan.Zero?displayProperty=fullName&gt;</ph>, which represents Coordinated Universal Time.","pos":[0,213],"source":"The <xref:System.DateTimeOffset.Offset%2A> property value of the returned <xref:System.DateTimeOffset> instance is <xref:System.TimeSpan.Zero?displayProperty=fullName>, which represents Coordinated Universal Time."},{"content":"You can convert it to the time in a specific time zone by calling the <ph id=\"ph1\">&lt;xref:System.TimeZoneInfo.ConvertTime%28System.DateTimeOffset%2CSystem.TimeZoneInfo%29?displayProperty=fullName&gt;</ph> method.","pos":[214,404],"source":" You can convert it to the time in a specific time zone by calling the <xref:System.TimeZoneInfo.ConvertTime%28System.DateTimeOffset%2CSystem.TimeZoneInfo%29?displayProperty=fullName> method."}]}]}],"pos":[119023,119428],"yaml":true,"extradata":"MT"},{"content":"A Unix time, expressed as the number of milliseconds that have elapsed since 1970-01-01T00:00:00Z (January 1, 1970, at 12:00 AM UTC). For Unix times before this date, its value is negative.","nodes":[{"pos":[0,189],"content":"A Unix time, expressed as the number of milliseconds that have elapsed since 1970-01-01T00:00:00Z (January 1, 1970, at 12:00 AM UTC). For Unix times before this date, its value is negative.","nodes":[{"content":"A Unix time, expressed as the number of milliseconds that have elapsed since 1970-01-01T00:00:00Z (January 1, 1970, at 12:00 AM UTC). For Unix times before this date, its value is negative.","pos":[0,189],"nodes":[{"content":"A Unix time, expressed as the number of milliseconds that have elapsed since 1970-01-01T00:00:00Z (January 1, 1970, at 12:00 AM UTC).","pos":[0,133]},{"content":"For Unix times before this date, its value is negative.","pos":[134,189]}]}]}],"pos":[119609,119799],"yaml":true},{"content":"A date and time value that represents the same moment in time as the Unix time.","nodes":[{"pos":[0,79],"content":"A date and time value that represents the same moment in time as the Unix time.","nodes":[{"content":"A date and time value that represents the same moment in time as the Unix time.","pos":[0,79]}]}],"pos":[119864,119944],"yaml":true},{"content":"<code>milliseconds</code> is less than  -62,135,596,800,000.  \n  \n -or-  \n  \n <code>milliseconds</code> is greater than 253,402,300,799,999.","nodes":[{"pos":[0,60],"content":"<ph id=\"ph1\">&lt;code&gt;milliseconds&lt;/code&gt;</ph> is less than  -62,135,596,800,000.","source":"<code>milliseconds</code> is less than  -62,135,596,800,000."},{"pos":[67,71],"content":"-or-","nodes":[{"content":"-or-","pos":[0,4]}]},{"pos":[78,140],"content":"<ph id=\"ph1\">&lt;code&gt;milliseconds&lt;/code&gt;</ph> is greater than 253,402,300,799,999.","source":"<code>milliseconds</code> is greater than 253,402,300,799,999."}],"pos":[120132,120279],"yaml":true},{"content":"Converts a Unix time expressed as the number of seconds that have elapsed since 1970-01-01T00:00:00Z to a <xref href=\"System.DateTimeOffset\"></xref> value.","nodes":[{"pos":[0,155],"content":"Converts a Unix time expressed as the number of seconds that have elapsed since 1970-01-01T00:00:00Z to a <ph id=\"ph1\">&lt;xref href=\"System.DateTimeOffset\"&gt;&lt;/xref&gt;</ph> value.","source":"Converts a Unix time expressed as the number of seconds that have elapsed since 1970-01-01T00:00:00Z to a <xref href=\"System.DateTimeOffset\"></xref> value."}],"pos":[121568,121724],"yaml":true},{"content":"The <xref:System.DateTimeOffset.Offset%2A> property value of the returned <xref:System.DateTimeOffset> instance is <xref:System.TimeSpan.Zero?displayProperty=fullName>, which represents Coordinated Universal Time. You can convert it to the time in a specific time zone by calling the <xref:System.TimeZoneInfo.ConvertTime%28System.DateTimeOffset%2CSystem.TimeZoneInfo%29?displayProperty=fullName> method.","nodes":[{"pos":[0,404],"content":"The <xref:System.DateTimeOffset.Offset%2A> property value of the returned <xref:System.DateTimeOffset> instance is <xref:System.TimeSpan.Zero?displayProperty=fullName>, which represents Coordinated Universal Time. You can convert it to the time in a specific time zone by calling the <xref:System.TimeZoneInfo.ConvertTime%28System.DateTimeOffset%2CSystem.TimeZoneInfo%29?displayProperty=fullName> method.","nodes":[{"content":"The <xref:System.DateTimeOffset.Offset%2A> property value of the returned <xref:System.DateTimeOffset> instance is <xref:System.TimeSpan.Zero?displayProperty=fullName>, which represents Coordinated Universal Time. You can convert it to the time in a specific time zone by calling the <xref:System.TimeZoneInfo.ConvertTime%28System.DateTimeOffset%2CSystem.TimeZoneInfo%29?displayProperty=fullName> method.","pos":[0,404],"nodes":[{"content":"The <ph id=\"ph1\">&lt;xref:System.DateTimeOffset.Offset%2A&gt;</ph> property value of the returned <ph id=\"ph2\">&lt;xref:System.DateTimeOffset&gt;</ph> instance is <ph id=\"ph3\">&lt;xref:System.TimeSpan.Zero?displayProperty=fullName&gt;</ph>, which represents Coordinated Universal Time.","pos":[0,213],"source":"The <xref:System.DateTimeOffset.Offset%2A> property value of the returned <xref:System.DateTimeOffset> instance is <xref:System.TimeSpan.Zero?displayProperty=fullName>, which represents Coordinated Universal Time."},{"content":"You can convert it to the time in a specific time zone by calling the <ph id=\"ph1\">&lt;xref:System.TimeZoneInfo.ConvertTime%28System.DateTimeOffset%2CSystem.TimeZoneInfo%29?displayProperty=fullName&gt;</ph> method.","pos":[214,404],"source":" You can convert it to the time in a specific time zone by calling the <xref:System.TimeZoneInfo.ConvertTime%28System.DateTimeOffset%2CSystem.TimeZoneInfo%29?displayProperty=fullName> method."}]}]}],"pos":[121735,122140],"yaml":true,"extradata":"MT"},{"content":"A Unix time, expressed as the number of seconds that have elapsed since 1970-01-01T00:00:00Z (January 1, 1970, at 12:00 AM UTC). For Unix times before this date, its value is negative.","nodes":[{"pos":[0,184],"content":"A Unix time, expressed as the number of seconds that have elapsed since 1970-01-01T00:00:00Z (January 1, 1970, at 12:00 AM UTC). For Unix times before this date, its value is negative.","nodes":[{"content":"A Unix time, expressed as the number of seconds that have elapsed since 1970-01-01T00:00:00Z (January 1, 1970, at 12:00 AM UTC). For Unix times before this date, its value is negative.","pos":[0,184],"nodes":[{"content":"A Unix time, expressed as the number of seconds that have elapsed since 1970-01-01T00:00:00Z (January 1, 1970, at 12:00 AM UTC).","pos":[0,128]},{"content":"For Unix times before this date, its value is negative.","pos":[129,184]}]}]}],"pos":[122306,122491],"yaml":true},{"content":"A date and time value that represents the same moment in time as the Unix time.","nodes":[{"pos":[0,79],"content":"A date and time value that represents the same moment in time as the Unix time.","nodes":[{"content":"A date and time value that represents the same moment in time as the Unix time.","pos":[0,79]}]}],"pos":[122556,122636],"yaml":true},{"content":"<code>seconds</code> is less than  -62,135,596,800.  \n  \n -or-  \n  \n <code>seconds</code> is greater than 253,402,300,799.","nodes":[{"pos":[0,51],"content":"<ph id=\"ph1\">&lt;code&gt;seconds&lt;/code&gt;</ph> is less than  -62,135,596,800.","source":"<code>seconds</code> is less than  -62,135,596,800."},{"pos":[58,62],"content":"-or-","nodes":[{"content":"-or-","pos":[0,4]}]},{"pos":[69,122],"content":"<ph id=\"ph1\">&lt;code&gt;seconds&lt;/code&gt;</ph> is greater than 253,402,300,799.","source":"<code>seconds</code> is greater than 253,402,300,799."}],"pos":[122819,122948],"yaml":true},{"content":"Returns the hash code for the current <xref href=\"System.DateTimeOffset\"></xref> object.","nodes":[{"pos":[0,88],"content":"Returns the hash code for the current <ph id=\"ph1\">&lt;xref href=\"System.DateTimeOffset\"&gt;&lt;/xref&gt;</ph> object.","source":"Returns the hash code for the current <xref href=\"System.DateTimeOffset\"></xref> object."}],"pos":[124132,124221],"yaml":true},{"content":"A 32-bit signed integer hash code.","nodes":[{"pos":[0,34],"content":"A 32-bit signed integer hash code.","nodes":[{"content":"A 32-bit signed integer hash code.","pos":[0,34]}]}],"pos":[124355,124390],"yaml":true},{"content":"Gets the hour component of the time represented by the current <xref href=\"System.DateTimeOffset\"></xref> object.","nodes":[{"pos":[0,113],"content":"Gets the hour component of the time represented by the current <ph id=\"ph1\">&lt;xref href=\"System.DateTimeOffset\"&gt;&lt;/xref&gt;</ph> object.","source":"Gets the hour component of the time represented by the current <xref href=\"System.DateTimeOffset\"></xref> object."}],"pos":[125846,125960],"yaml":true},{"content":"The <xref:System.DateTimeOffset.Hour%2A> property is not affected by the value of the <xref:System.DateTimeOffset.Offset%2A> property.  \n  \n You can also create a string representation of a <xref:System.DateTimeOffset> object's hour component by calling the <xref:System.DateTimeOffset.ToString%2A> method with the \"H\", or \"HH\" custom format specifiers.","nodes":[{"pos":[0,134],"content":"The <xref:System.DateTimeOffset.Hour%2A> property is not affected by the value of the <xref:System.DateTimeOffset.Offset%2A> property.","nodes":[{"content":"The <ph id=\"ph1\">&lt;xref:System.DateTimeOffset.Hour%2A&gt;</ph> property is not affected by the value of the <ph id=\"ph2\">&lt;xref:System.DateTimeOffset.Offset%2A&gt;</ph> property.","pos":[0,134],"source":"The <xref:System.DateTimeOffset.Hour%2A> property is not affected by the value of the <xref:System.DateTimeOffset.Offset%2A> property."}]},{"pos":[141,353],"content":"You can also create a string representation of a <xref:System.DateTimeOffset> object's hour component by calling the <xref:System.DateTimeOffset.ToString%2A> method with the \"H\", or \"HH\" custom format specifiers.","nodes":[{"content":"You can also create a string representation of a <ph id=\"ph1\">&lt;xref:System.DateTimeOffset&gt;</ph> object's hour component by calling the <ph id=\"ph2\">&lt;xref:System.DateTimeOffset.ToString%2A&gt;</ph> method with the \"H\", or \"HH\" custom format specifiers.","pos":[0,212],"source":"You can also create a string representation of a <xref:System.DateTimeOffset> object's hour component by calling the <xref:System.DateTimeOffset.ToString%2A> method with the \"H\", or \"HH\" custom format specifiers."}]}],"pos":[125971,126333],"yaml":true,"extradata":"MT"},{"content":"The hour component of the current <xref href=\"System.DateTimeOffset\"></xref> object. This property uses a 24-hour clock; the value ranges from 0 to 23.","nodes":[{"pos":[0,151],"content":"The hour component of the current <xref href=\"System.DateTimeOffset\"></xref> object. This property uses a 24-hour clock; the value ranges from 0 to 23.","nodes":[{"content":"The hour component of the current <ph id=\"ph1\">&lt;xref href=\"System.DateTimeOffset\"&gt;&lt;/xref&gt;</ph> object.","pos":[0,84],"source":"The hour component of the current <xref href=\"System.DateTimeOffset\"></xref> object."},{"content":"This property uses a 24-hour clock; the value ranges from 0 to 23.","pos":[85,151]}]}],"pos":[127223,127375],"yaml":true},{"content":"Gets a <xref href=\"System.DateTime\"></xref> value that represents the local date and time of the current <xref href=\"System.DateTimeOffset\"></xref> object.","nodes":[{"pos":[0,155],"content":"Gets a <ph id=\"ph1\">&lt;xref href=\"System.DateTime\"&gt;&lt;/xref&gt;</ph> value that represents the local date and time of the current <ph id=\"ph2\">&lt;xref href=\"System.DateTimeOffset\"&gt;&lt;/xref&gt;</ph> object.","source":"Gets a <xref href=\"System.DateTime\"></xref> value that represents the local date and time of the current <xref href=\"System.DateTimeOffset\"></xref> object."}],"pos":[128878,129034],"yaml":true},{"content":"If necessary, the <xref:System.DateTimeOffset.LocalDateTime%2A> property converts the current <xref:System.DateTimeOffset> object's date and time to the local system's date and time. The conversion is a two-step operation:  \n  \n1.  The property converts the current <xref:System.DateTimeOffset> object's time to Coordinated Universal Time (UTC).  \n  \n2.  The property then converts UTC to local time.  \n  \n There are no invalid times and ambiguous times are mapped to the local zone's standard time. (However, the conversion can create an anomaly: if a <xref:System.DateTimeOffset> value that is derived from the local computer reflects an ambiguous date and time, that value can be converted to UTC and then back to a local time that differs from the original time.)  The property applies any adjustment rules in the local time zone when it performs this conversion.  \n  \n This property returns both the date and the time component of a <xref:System.DateTimeOffset> object, which makes it useful for <xref:System.DateTimeOffset> to <xref:System.DateTime> conversion. In addition to performing any necessary time conversion, this property differs from the <xref:System.DateTimeOffset.DateTime%2A> property by setting the value of the <xref:System.DateTime.Kind%2A> property of the returned <xref:System.DateTime> object to <xref:System.DateTimeKind?displayProperty=fullName>.","nodes":[{"pos":[0,222],"content":"If necessary, the <xref:System.DateTimeOffset.LocalDateTime%2A> property converts the current <xref:System.DateTimeOffset> object's date and time to the local system's date and time. The conversion is a two-step operation:","nodes":[{"content":"If necessary, the <xref:System.DateTimeOffset.LocalDateTime%2A> property converts the current <xref:System.DateTimeOffset> object's date and time to the local system's date and time. The conversion is a two-step operation:","pos":[0,222],"nodes":[{"content":"If necessary, the <ph id=\"ph1\">&lt;xref:System.DateTimeOffset.LocalDateTime%2A&gt;</ph> property converts the current <ph id=\"ph2\">&lt;xref:System.DateTimeOffset&gt;</ph> object's date and time to the local system's date and time.","pos":[0,182],"source":"If necessary, the <xref:System.DateTimeOffset.LocalDateTime%2A> property converts the current <xref:System.DateTimeOffset> object's date and time to the local system's date and time."},{"content":"The conversion is a two-step operation:","pos":[183,222]}]}]},{"pos":[232,345],"content":"The property converts the current <xref:System.DateTimeOffset> object's time to Coordinated Universal Time (UTC).","nodes":[{"content":"The property converts the current <ph id=\"ph1\">&lt;xref:System.DateTimeOffset&gt;</ph> object's time to Coordinated Universal Time (UTC).","pos":[0,113],"source":"The property converts the current <xref:System.DateTimeOffset> object's time to Coordinated Universal Time (UTC)."}]},{"pos":[355,400],"content":"The property then converts UTC to local time.","nodes":[{"content":"The property then converts UTC to local time.","pos":[0,45]}]},{"pos":[407,867],"content":"There are no invalid times and ambiguous times are mapped to the local zone's standard time. (However, the conversion can create an anomaly: if a <xref:System.DateTimeOffset> value that is derived from the local computer reflects an ambiguous date and time, that value can be converted to UTC and then back to a local time that differs from the original time.)  The property applies any adjustment rules in the local time zone when it performs this conversion.","nodes":[{"content":"There are no invalid times and ambiguous times are mapped to the local zone's standard time. (However, the conversion can create an anomaly: if a <xref:System.DateTimeOffset> value that is derived from the local computer reflects an ambiguous date and time, that value can be converted to UTC and then back to a local time that differs from the original time.)  The property applies any adjustment rules in the local time zone when it performs this conversion.","pos":[0,460],"nodes":[{"content":"There are no invalid times and ambiguous times are mapped to the local zone's standard time.","pos":[0,92]},{"content":"(However, the conversion can create an anomaly: if a <ph id=\"ph1\">&lt;xref:System.DateTimeOffset&gt;</ph> value that is derived from the local computer reflects an ambiguous date and time, that value can be converted to UTC and then back to a local time that differs from the original time.)  The property applies any adjustment rules in the local time zone when it performs this conversion.","pos":[93,460],"source":" (However, the conversion can create an anomaly: if a <xref:System.DateTimeOffset> value that is derived from the local computer reflects an ambiguous date and time, that value can be converted to UTC and then back to a local time that differs from the original time.)  The property applies any adjustment rules in the local time zone when it performs this conversion."}]}]},{"pos":[874,1375],"content":"This property returns both the date and the time component of a <xref:System.DateTimeOffset> object, which makes it useful for <xref:System.DateTimeOffset> to <xref:System.DateTime> conversion. In addition to performing any necessary time conversion, this property differs from the <xref:System.DateTimeOffset.DateTime%2A> property by setting the value of the <xref:System.DateTime.Kind%2A> property of the returned <xref:System.DateTime> object to <xref:System.DateTimeKind?displayProperty=fullName>.","nodes":[{"content":"This property returns both the date and the time component of a <xref:System.DateTimeOffset> object, which makes it useful for <xref:System.DateTimeOffset> to <xref:System.DateTime> conversion. In addition to performing any necessary time conversion, this property differs from the <xref:System.DateTimeOffset.DateTime%2A> property by setting the value of the <xref:System.DateTime.Kind%2A> property of the returned <xref:System.DateTime> object to <xref:System.DateTimeKind?displayProperty=fullName>.","pos":[0,501],"nodes":[{"content":"This property returns both the date and the time component of a <ph id=\"ph1\">&lt;xref:System.DateTimeOffset&gt;</ph> object, which makes it useful for <ph id=\"ph2\">&lt;xref:System.DateTimeOffset&gt;</ph> to <ph id=\"ph3\">&lt;xref:System.DateTime&gt;</ph> conversion.","pos":[0,193],"source":"This property returns both the date and the time component of a <xref:System.DateTimeOffset> object, which makes it useful for <xref:System.DateTimeOffset> to <xref:System.DateTime> conversion."},{"content":"In addition to performing any necessary time conversion, this property differs from the <ph id=\"ph1\">&lt;xref:System.DateTimeOffset.DateTime%2A&gt;</ph> property by setting the value of the <ph id=\"ph2\">&lt;xref:System.DateTime.Kind%2A&gt;</ph> property of the returned <ph id=\"ph3\">&lt;xref:System.DateTime&gt;</ph> object to <ph id=\"ph4\">&lt;xref:System.DateTimeKind?displayProperty=fullName&gt;</ph>.","pos":[194,501],"source":" In addition to performing any necessary time conversion, this property differs from the <xref:System.DateTimeOffset.DateTime%2A> property by setting the value of the <xref:System.DateTime.Kind%2A> property of the returned <xref:System.DateTime> object to <xref:System.DateTimeKind?displayProperty=fullName>."}]}]}],"pos":[129045,130431],"yaml":true,"extradata":"MT"},{"content":"The local date and time of the current <xref href=\"System.DateTimeOffset\"></xref> object.","nodes":[{"pos":[0,89],"content":"The local date and time of the current <ph id=\"ph1\">&lt;xref href=\"System.DateTimeOffset\"&gt;&lt;/xref&gt;</ph> object.","source":"The local date and time of the current <xref href=\"System.DateTimeOffset\"></xref> object."}],"pos":[131175,131265],"yaml":true},{"content":"Represents the greatest possible value of <xref href=\"System.DateTimeOffset\"></xref>. This field is read-only.","nodes":[{"pos":[0,110],"content":"Represents the greatest possible value of <xref href=\"System.DateTimeOffset\"></xref>. This field is read-only.","nodes":[{"content":"Represents the greatest possible value of <ph id=\"ph1\">&lt;xref href=\"System.DateTimeOffset\"&gt;&lt;/xref&gt;</ph>.","pos":[0,85],"source":"Represents the greatest possible value of <xref href=\"System.DateTimeOffset\"></xref>."},{"content":"This field is read-only.","pos":[86,110]}]}],"pos":[132744,132855],"yaml":true},{"content":"The value of this constant is 12/31/9999 11:59:59 PM +00:00.  \n  \n The <xref:System.DateTimeOffset.MaxValue> property is used to determine whether the value of a new <xref:System.DateTimeOffset> object or the <xref:System.DateTimeOffset> value returned by an arithmetic operation is the same as or earlier than this maximum range value. If it is not, the method throws an <xref:System.ArgumentOutOfRangeException>. Any <xref:System.DateTimeOffset> value is converted to Coordinated Universal Time (UTC) before the method compares it with <xref:System.DateTimeOffset.MaxValue>.  This means that a <xref:System.DateTimeOffset> value whose date and time are close to the maximum range, but whose offset is negative, may throw an exception. For example, the value 12/31/9999 11:00 PM -02:00 is out of range because it is one hour later than <xref:System.DateTimeOffset.MaxValue> when it is converted to UTC.  \n  \n Some calendars, such as the <xref:System.Globalization.UmAlQuraCalendar>, support an upper date range that is earlier than <xref:System.DateTime.MaxValue>. In these cases, trying to access <xref:System.DateTime.MaxValue> in variable assignments or formatting and parsing operations can throw an <xref:System.ArgumentOutOfRangeException>. Instead of retrieving the value of <xref:System.DateTime.MaxValue?displayProperty=fullName>, you can retrieve the value of the specified culture's latest valid date value from the <xref:System.Globalization.Calendar.MaxSupportedDateTime%2A?displayProperty=fullName> property.","nodes":[{"pos":[0,60],"content":"The value of this constant is 12/31/9999 11:59:59 PM +00:00.","nodes":[{"content":"The value of this constant is 12/31/9999 11:59:59 PM +00:00.","pos":[0,60]}]},{"pos":[67,903],"content":"The <xref:System.DateTimeOffset.MaxValue> property is used to determine whether the value of a new <xref:System.DateTimeOffset> object or the <xref:System.DateTimeOffset> value returned by an arithmetic operation is the same as or earlier than this maximum range value. If it is not, the method throws an <xref:System.ArgumentOutOfRangeException>. Any <xref:System.DateTimeOffset> value is converted to Coordinated Universal Time (UTC) before the method compares it with <xref:System.DateTimeOffset.MaxValue>.  This means that a <xref:System.DateTimeOffset> value whose date and time are close to the maximum range, but whose offset is negative, may throw an exception. For example, the value 12/31/9999 11:00 PM -02:00 is out of range because it is one hour later than <xref:System.DateTimeOffset.MaxValue> when it is converted to UTC.","nodes":[{"content":"The <xref:System.DateTimeOffset.MaxValue> property is used to determine whether the value of a new <xref:System.DateTimeOffset> object or the <xref:System.DateTimeOffset> value returned by an arithmetic operation is the same as or earlier than this maximum range value. If it is not, the method throws an <xref:System.ArgumentOutOfRangeException>. Any <xref:System.DateTimeOffset> value is converted to Coordinated Universal Time (UTC) before the method compares it with <xref:System.DateTimeOffset.MaxValue>.  This means that a <xref:System.DateTimeOffset> value whose date and time are close to the maximum range, but whose offset is negative, may throw an exception. For example, the value 12/31/9999 11:00 PM -02:00 is out of range because it is one hour later than <xref:System.DateTimeOffset.MaxValue> when it is converted to UTC.","pos":[0,836],"nodes":[{"content":"The <ph id=\"ph1\">&lt;xref:System.DateTimeOffset.MaxValue&gt;</ph> property is used to determine whether the value of a new <ph id=\"ph2\">&lt;xref:System.DateTimeOffset&gt;</ph> object or the <ph id=\"ph3\">&lt;xref:System.DateTimeOffset&gt;</ph> value returned by an arithmetic operation is the same as or earlier than this maximum range value.","pos":[0,269],"source":"The <xref:System.DateTimeOffset.MaxValue> property is used to determine whether the value of a new <xref:System.DateTimeOffset> object or the <xref:System.DateTimeOffset> value returned by an arithmetic operation is the same as or earlier than this maximum range value."},{"content":"If it is not, the method throws an <ph id=\"ph1\">&lt;xref:System.ArgumentOutOfRangeException&gt;</ph>.","pos":[270,347],"source":" If it is not, the method throws an <xref:System.ArgumentOutOfRangeException>."},{"content":"Any <ph id=\"ph1\">&lt;xref:System.DateTimeOffset&gt;</ph> value is converted to Coordinated Universal Time (UTC) before the method compares it with <ph id=\"ph2\">&lt;xref:System.DateTimeOffset.MaxValue&gt;</ph>.","pos":[348,509],"source":" Any <xref:System.DateTimeOffset> value is converted to Coordinated Universal Time (UTC) before the method compares it with <xref:System.DateTimeOffset.MaxValue>."},{"content":"This means that a <ph id=\"ph1\">&lt;xref:System.DateTimeOffset&gt;</ph> value whose date and time are close to the maximum range, but whose offset is negative, may throw an exception.","pos":[511,669],"source":"  This means that a <xref:System.DateTimeOffset> value whose date and time are close to the maximum range, but whose offset is negative, may throw an exception."},{"content":"For example, the value 12/31/9999 11:00 PM -02:00 is out of range because it is one hour later than <ph id=\"ph1\">&lt;xref:System.DateTimeOffset.MaxValue&gt;</ph> when it is converted to UTC.","pos":[670,836],"source":" For example, the value 12/31/9999 11:00 PM -02:00 is out of range because it is one hour later than <xref:System.DateTimeOffset.MaxValue> when it is converted to UTC."}]}]},{"pos":[910,1523],"content":"Some calendars, such as the <xref:System.Globalization.UmAlQuraCalendar>, support an upper date range that is earlier than <xref:System.DateTime.MaxValue>. In these cases, trying to access <xref:System.DateTime.MaxValue> in variable assignments or formatting and parsing operations can throw an <xref:System.ArgumentOutOfRangeException>. Instead of retrieving the value of <xref:System.DateTime.MaxValue?displayProperty=fullName>, you can retrieve the value of the specified culture's latest valid date value from the <xref:System.Globalization.Calendar.MaxSupportedDateTime%2A?displayProperty=fullName> property.","nodes":[{"content":"Some calendars, such as the <xref:System.Globalization.UmAlQuraCalendar>, support an upper date range that is earlier than <xref:System.DateTime.MaxValue>. In these cases, trying to access <xref:System.DateTime.MaxValue> in variable assignments or formatting and parsing operations can throw an <xref:System.ArgumentOutOfRangeException>. Instead of retrieving the value of <xref:System.DateTime.MaxValue?displayProperty=fullName>, you can retrieve the value of the specified culture's latest valid date value from the <xref:System.Globalization.Calendar.MaxSupportedDateTime%2A?displayProperty=fullName> property.","pos":[0,613],"nodes":[{"content":"Some calendars, such as the <ph id=\"ph1\">&lt;xref:System.Globalization.UmAlQuraCalendar&gt;</ph>, support an upper date range that is earlier than <ph id=\"ph2\">&lt;xref:System.DateTime.MaxValue&gt;</ph>.","pos":[0,155],"source":"Some calendars, such as the <xref:System.Globalization.UmAlQuraCalendar>, support an upper date range that is earlier than <xref:System.DateTime.MaxValue>."},{"content":"In these cases, trying to access <ph id=\"ph1\">&lt;xref:System.DateTime.MaxValue&gt;</ph> in variable assignments or formatting and parsing operations can throw an <ph id=\"ph2\">&lt;xref:System.ArgumentOutOfRangeException&gt;</ph>.","pos":[156,337],"source":" In these cases, trying to access <xref:System.DateTime.MaxValue> in variable assignments or formatting and parsing operations can throw an <xref:System.ArgumentOutOfRangeException>."},{"content":"Instead of retrieving the value of <ph id=\"ph1\">&lt;xref:System.DateTime.MaxValue?displayProperty=fullName&gt;</ph>, you can retrieve the value of the specified culture's latest valid date value from the <ph id=\"ph2\">&lt;xref:System.Globalization.Calendar.MaxSupportedDateTime%2A?displayProperty=fullName&gt;</ph> property.","pos":[338,613],"source":" Instead of retrieving the value of <xref:System.DateTime.MaxValue?displayProperty=fullName>, you can retrieve the value of the specified culture's latest valid date value from the <xref:System.Globalization.Calendar.MaxSupportedDateTime%2A?displayProperty=fullName> property."}]}]}],"pos":[132866,134396],"yaml":true,"extradata":"MT"},{"content":"<xref href=\"System.DateTime.MaxValue\"></xref> is outside the range of the current or specified culture's default calendar.","nodes":[{"pos":[0,122],"content":"<ph id=\"ph1\">&lt;xref href=\"System.DateTime.MaxValue\"&gt;&lt;/xref&gt;</ph> is outside the range of the current or specified culture's default calendar.","source":"<xref href=\"System.DateTime.MaxValue\"></xref> is outside the range of the current or specified culture's default calendar."}],"pos":[134663,134786],"yaml":true},{"content":"Gets the millisecond component of the time represented by the current <xref href=\"System.DateTimeOffset\"></xref> object.","nodes":[{"pos":[0,120],"content":"Gets the millisecond component of the time represented by the current <ph id=\"ph1\">&lt;xref href=\"System.DateTimeOffset\"&gt;&lt;/xref&gt;</ph> object.","source":"Gets the millisecond component of the time represented by the current <xref href=\"System.DateTimeOffset\"></xref> object."}],"pos":[136220,136341],"yaml":true},{"content":"You can also create a string representation of a <xref:System.DateTimeOffset> object's millisecond component by calling the <xref:System.DateTimeOffset.ToString%2A> method with the \"fff\" custom format specifier.  \n  \n If you rely on properties such as <xref:System.DateTimeOffset.Now%2A> or <xref:System.DateTimeOffset.UtcNow%2A> to accurately track the number of elapsed milliseconds, the precision of the time's millisecond component depends on the resolution of the system clock. On Windows NT 3.5 and later, and Windows Vista operating systems, the clock's resolution is approximately 10-15 milliseconds.","nodes":[{"pos":[0,211],"content":"You can also create a string representation of a <xref:System.DateTimeOffset> object's millisecond component by calling the <xref:System.DateTimeOffset.ToString%2A> method with the \"fff\" custom format specifier.","nodes":[{"content":"You can also create a string representation of a <ph id=\"ph1\">&lt;xref:System.DateTimeOffset&gt;</ph> object's millisecond component by calling the <ph id=\"ph2\">&lt;xref:System.DateTimeOffset.ToString%2A&gt;</ph> method with the \"fff\" custom format specifier.","pos":[0,211],"source":"You can also create a string representation of a <xref:System.DateTimeOffset> object's millisecond component by calling the <xref:System.DateTimeOffset.ToString%2A> method with the \"fff\" custom format specifier."}]},{"pos":[218,608],"content":"If you rely on properties such as <xref:System.DateTimeOffset.Now%2A> or <xref:System.DateTimeOffset.UtcNow%2A> to accurately track the number of elapsed milliseconds, the precision of the time's millisecond component depends on the resolution of the system clock. On Windows NT 3.5 and later, and Windows Vista operating systems, the clock's resolution is approximately 10-15 milliseconds.","nodes":[{"content":"If you rely on properties such as <xref:System.DateTimeOffset.Now%2A> or <xref:System.DateTimeOffset.UtcNow%2A> to accurately track the number of elapsed milliseconds, the precision of the time's millisecond component depends on the resolution of the system clock. On Windows NT 3.5 and later, and Windows Vista operating systems, the clock's resolution is approximately 10-15 milliseconds.","pos":[0,390],"nodes":[{"content":"If you rely on properties such as <ph id=\"ph1\">&lt;xref:System.DateTimeOffset.Now%2A&gt;</ph> or <ph id=\"ph2\">&lt;xref:System.DateTimeOffset.UtcNow%2A&gt;</ph> to accurately track the number of elapsed milliseconds, the precision of the time's millisecond component depends on the resolution of the system clock.","pos":[0,264],"source":"If you rely on properties such as <xref:System.DateTimeOffset.Now%2A> or <xref:System.DateTimeOffset.UtcNow%2A> to accurately track the number of elapsed milliseconds, the precision of the time's millisecond component depends on the resolution of the system clock."},{"content":"On Windows NT 3.5 and later, and Windows Vista operating systems, the clock's resolution is approximately 10-15 milliseconds.","pos":[265,390]}]}]}],"pos":[136352,136967],"yaml":true,"extradata":"MT"},{"content":"The millisecond component of the current <xref href=\"System.DateTimeOffset\"></xref> object, expressed as an integer between 0 and 999.","nodes":[{"pos":[0,134],"content":"The millisecond component of the current <ph id=\"ph1\">&lt;xref href=\"System.DateTimeOffset\"&gt;&lt;/xref&gt;</ph> object, expressed as an integer between 0 and 999.","source":"The millisecond component of the current <xref href=\"System.DateTimeOffset\"></xref> object, expressed as an integer between 0 and 999."}],"pos":[137634,137769],"yaml":true},{"content":"Gets the minute component of the time represented by the current <xref href=\"System.DateTimeOffset\"></xref> object.","nodes":[{"pos":[0,115],"content":"Gets the minute component of the time represented by the current <ph id=\"ph1\">&lt;xref href=\"System.DateTimeOffset\"&gt;&lt;/xref&gt;</ph> object.","source":"Gets the minute component of the time represented by the current <xref href=\"System.DateTimeOffset\"></xref> object."}],"pos":[139237,139353],"yaml":true},{"content":"The <xref:System.DateTimeOffset.Minute%2A> property is not affected by the value of the <xref:System.DateTimeOffset.Offset%2A> property.  \n  \n You can also create a string representation of a <xref:System.DateTimeOffset> object's minute component by calling the <xref:System.DateTimeOffset.ToString%2A> method with the \"m\", or \"mm\" custom format specifiers.","nodes":[{"pos":[0,136],"content":"The <xref:System.DateTimeOffset.Minute%2A> property is not affected by the value of the <xref:System.DateTimeOffset.Offset%2A> property.","nodes":[{"content":"The <ph id=\"ph1\">&lt;xref:System.DateTimeOffset.Minute%2A&gt;</ph> property is not affected by the value of the <ph id=\"ph2\">&lt;xref:System.DateTimeOffset.Offset%2A&gt;</ph> property.","pos":[0,136],"source":"The <xref:System.DateTimeOffset.Minute%2A> property is not affected by the value of the <xref:System.DateTimeOffset.Offset%2A> property."}]},{"pos":[143,357],"content":"You can also create a string representation of a <xref:System.DateTimeOffset> object's minute component by calling the <xref:System.DateTimeOffset.ToString%2A> method with the \"m\", or \"mm\" custom format specifiers.","nodes":[{"content":"You can also create a string representation of a <ph id=\"ph1\">&lt;xref:System.DateTimeOffset&gt;</ph> object's minute component by calling the <ph id=\"ph2\">&lt;xref:System.DateTimeOffset.ToString%2A&gt;</ph> method with the \"m\", or \"mm\" custom format specifiers.","pos":[0,214],"source":"You can also create a string representation of a <xref:System.DateTimeOffset> object's minute component by calling the <xref:System.DateTimeOffset.ToString%2A> method with the \"m\", or \"mm\" custom format specifiers."}]}],"pos":[139364,139730],"yaml":true,"extradata":"MT"},{"content":"The minute component of the current <xref href=\"System.DateTimeOffset\"></xref> object, expressed as an integer between 0 and 59.","nodes":[{"pos":[0,128],"content":"The minute component of the current <ph id=\"ph1\">&lt;xref href=\"System.DateTimeOffset\"&gt;&lt;/xref&gt;</ph> object, expressed as an integer between 0 and 59.","source":"The minute component of the current <xref href=\"System.DateTimeOffset\"></xref> object, expressed as an integer between 0 and 59."}],"pos":[140626,140755],"yaml":true},{"content":"Represents the earliest possible <xref href=\"System.DateTimeOffset\"></xref> value. This field is read-only.","nodes":[{"pos":[0,107],"content":"Represents the earliest possible <xref href=\"System.DateTimeOffset\"></xref> value. This field is read-only.","nodes":[{"content":"Represents the earliest possible <ph id=\"ph1\">&lt;xref href=\"System.DateTimeOffset\"&gt;&lt;/xref&gt;</ph> value.","pos":[0,82],"source":"Represents the earliest possible <xref href=\"System.DateTimeOffset\"></xref> value."},{"content":"This field is read-only.","pos":[83,107]}]}],"pos":[142227,142335],"yaml":true},{"content":"The value of this constant is 1/1/0001 12:00:00 AM +00:00.  \n  \n The <xref:System.DateTimeOffset.MinValue> property is used to determine whether the value of a new <xref:System.DateTimeOffset> object or the <xref:System.DateTimeOffset> value returned by an arithmetic operation is the same as or later than this minimum range value. If it is not, the method throws an <xref:System.ArgumentOutOfRangeException>. Any <xref:System.DateTimeOffset> value is converted to Coordinated Universal Time (UTC) before the method performs the comparison with <xref:System.DateTimeOffset.MinValue>.  This means that a <xref:System.DateTimeOffset> value whose date and time are close to the minimum range, but whose offset is positive, may throw an exception. For example, the value 1/1/0001 1:00:00 AM +02:00 is out of range because it is one hour earlier than <xref:System.DateTimeOffset.MinValue> when it is converted to UTC.","nodes":[{"pos":[0,58],"content":"The value of this constant is 1/1/0001 12:00:00 AM +00:00.","nodes":[{"content":"The value of this constant is 1/1/0001 12:00:00 AM +00:00.","pos":[0,58]}]},{"pos":[65,913],"content":"The <xref:System.DateTimeOffset.MinValue> property is used to determine whether the value of a new <xref:System.DateTimeOffset> object or the <xref:System.DateTimeOffset> value returned by an arithmetic operation is the same as or later than this minimum range value. If it is not, the method throws an <xref:System.ArgumentOutOfRangeException>. Any <xref:System.DateTimeOffset> value is converted to Coordinated Universal Time (UTC) before the method performs the comparison with <xref:System.DateTimeOffset.MinValue>.  This means that a <xref:System.DateTimeOffset> value whose date and time are close to the minimum range, but whose offset is positive, may throw an exception. For example, the value 1/1/0001 1:00:00 AM +02:00 is out of range because it is one hour earlier than <xref:System.DateTimeOffset.MinValue> when it is converted to UTC.","nodes":[{"content":"The <xref:System.DateTimeOffset.MinValue> property is used to determine whether the value of a new <xref:System.DateTimeOffset> object or the <xref:System.DateTimeOffset> value returned by an arithmetic operation is the same as or later than this minimum range value. If it is not, the method throws an <xref:System.ArgumentOutOfRangeException>. Any <xref:System.DateTimeOffset> value is converted to Coordinated Universal Time (UTC) before the method performs the comparison with <xref:System.DateTimeOffset.MinValue>.  This means that a <xref:System.DateTimeOffset> value whose date and time are close to the minimum range, but whose offset is positive, may throw an exception. For example, the value 1/1/0001 1:00:00 AM +02:00 is out of range because it is one hour earlier than <xref:System.DateTimeOffset.MinValue> when it is converted to UTC.","pos":[0,848],"nodes":[{"content":"The <ph id=\"ph1\">&lt;xref:System.DateTimeOffset.MinValue&gt;</ph> property is used to determine whether the value of a new <ph id=\"ph2\">&lt;xref:System.DateTimeOffset&gt;</ph> object or the <ph id=\"ph3\">&lt;xref:System.DateTimeOffset&gt;</ph> value returned by an arithmetic operation is the same as or later than this minimum range value.","pos":[0,267],"source":"The <xref:System.DateTimeOffset.MinValue> property is used to determine whether the value of a new <xref:System.DateTimeOffset> object or the <xref:System.DateTimeOffset> value returned by an arithmetic operation is the same as or later than this minimum range value."},{"content":"If it is not, the method throws an <ph id=\"ph1\">&lt;xref:System.ArgumentOutOfRangeException&gt;</ph>.","pos":[268,345],"source":" If it is not, the method throws an <xref:System.ArgumentOutOfRangeException>."},{"content":"Any <ph id=\"ph1\">&lt;xref:System.DateTimeOffset&gt;</ph> value is converted to Coordinated Universal Time (UTC) before the method performs the comparison with <ph id=\"ph2\">&lt;xref:System.DateTimeOffset.MinValue&gt;</ph>.","pos":[346,519],"source":" Any <xref:System.DateTimeOffset> value is converted to Coordinated Universal Time (UTC) before the method performs the comparison with <xref:System.DateTimeOffset.MinValue>."},{"content":"This means that a <ph id=\"ph1\">&lt;xref:System.DateTimeOffset&gt;</ph> value whose date and time are close to the minimum range, but whose offset is positive, may throw an exception.","pos":[521,679],"source":"  This means that a <xref:System.DateTimeOffset> value whose date and time are close to the minimum range, but whose offset is positive, may throw an exception."},{"content":"For example, the value 1/1/0001 1:00:00 AM +02:00 is out of range because it is one hour earlier than <ph id=\"ph1\">&lt;xref:System.DateTimeOffset.MinValue&gt;</ph> when it is converted to UTC.","pos":[680,848],"source":" For example, the value 1/1/0001 1:00:00 AM +02:00 is out of range because it is one hour earlier than <xref:System.DateTimeOffset.MinValue> when it is converted to UTC."}]}]}],"pos":[142346,143264],"yaml":true,"extradata":"MT"},{"content":"Gets the month component of the date represented by the current <xref href=\"System.DateTimeOffset\"></xref> object.","nodes":[{"pos":[0,114],"content":"Gets the month component of the date represented by the current <ph id=\"ph1\">&lt;xref href=\"System.DateTimeOffset\"&gt;&lt;/xref&gt;</ph> object.","source":"Gets the month component of the date represented by the current <xref href=\"System.DateTimeOffset\"></xref> object."}],"pos":[144818,144933],"yaml":true},{"content":"The <xref:System.DateTimeOffset.Month%2A> property is not affected by the value of the <xref:System.DateTimeOffset.Offset%2A> property.  \n  \n You can also create a string representation of a <xref:System.DateTimeOffset> object's month component by calling the <xref:System.DateTimeOffset.ToString%2A> method with the \"M\" or \"MM\" custom format specifiers.","nodes":[{"pos":[0,135],"content":"The <xref:System.DateTimeOffset.Month%2A> property is not affected by the value of the <xref:System.DateTimeOffset.Offset%2A> property.","nodes":[{"content":"The <ph id=\"ph1\">&lt;xref:System.DateTimeOffset.Month%2A&gt;</ph> property is not affected by the value of the <ph id=\"ph2\">&lt;xref:System.DateTimeOffset.Offset%2A&gt;</ph> property.","pos":[0,135],"source":"The <xref:System.DateTimeOffset.Month%2A> property is not affected by the value of the <xref:System.DateTimeOffset.Offset%2A> property."}]},{"pos":[142,354],"content":"You can also create a string representation of a <xref:System.DateTimeOffset> object's month component by calling the <xref:System.DateTimeOffset.ToString%2A> method with the \"M\" or \"MM\" custom format specifiers.","nodes":[{"content":"You can also create a string representation of a <ph id=\"ph1\">&lt;xref:System.DateTimeOffset&gt;</ph> object's month component by calling the <ph id=\"ph2\">&lt;xref:System.DateTimeOffset.ToString%2A&gt;</ph> method with the \"M\" or \"MM\" custom format specifiers.","pos":[0,212],"source":"You can also create a string representation of a <xref:System.DateTimeOffset> object's month component by calling the <xref:System.DateTimeOffset.ToString%2A> method with the \"M\" or \"MM\" custom format specifiers."}]}],"pos":[144944,145307],"yaml":true,"extradata":"MT"},{"content":"The month component of the current <xref href=\"System.DateTimeOffset\"></xref> object, expressed as an integer between 1 and 12.","nodes":[{"pos":[0,127],"content":"The month component of the current <ph id=\"ph1\">&lt;xref href=\"System.DateTimeOffset\"&gt;&lt;/xref&gt;</ph> object, expressed as an integer between 1 and 12.","source":"The month component of the current <xref href=\"System.DateTimeOffset\"></xref> object, expressed as an integer between 1 and 12."}],"pos":[146199,146327],"yaml":true},{"content":"Gets a <xref href=\"System.DateTimeOffset\"></xref> object that is set to the current date and time on the current computer, with the offset set to the local time's offset from Coordinated Universal Time (UTC).","nodes":[{"pos":[0,208],"content":"Gets a <ph id=\"ph1\">&lt;xref href=\"System.DateTimeOffset\"&gt;&lt;/xref&gt;</ph> object that is set to the current date and time on the current computer, with the offset set to the local time's offset from Coordinated Universal Time (UTC).","source":"Gets a <xref href=\"System.DateTimeOffset\"></xref> object that is set to the current date and time on the current computer, with the offset set to the local time's offset from Coordinated Universal Time (UTC)."}],"pos":[147771,147980],"yaml":true},{"content":"The precision of the current local time's millisecond component depends on the resolution of the system clock. On Windows NT 3.5 and later, and Windows Vista operating systems, the clock's resolution is approximately 10-15 milliseconds.","nodes":[{"pos":[0,236],"content":"The precision of the current local time's millisecond component depends on the resolution of the system clock. On Windows NT 3.5 and later, and Windows Vista operating systems, the clock's resolution is approximately 10-15 milliseconds.","nodes":[{"content":"The precision of the current local time's millisecond component depends on the resolution of the system clock. On Windows NT 3.5 and later, and Windows Vista operating systems, the clock's resolution is approximately 10-15 milliseconds.","pos":[0,236],"nodes":[{"content":"The precision of the current local time's millisecond component depends on the resolution of the system clock.","pos":[0,110]},{"content":"On Windows NT 3.5 and later, and Windows Vista operating systems, the clock's resolution is approximately 10-15 milliseconds.","pos":[111,236]}]}]}],"pos":[147991,148228],"yaml":true,"extradata":"MT"},{"content":"A <xref href=\"System.DateTimeOffset\"></xref> object whose date and time is the current local time and whose offset is the local time zone's offset from Coordinated Universal Time (UTC).","nodes":[{"pos":[0,185],"content":"A <ph id=\"ph1\">&lt;xref href=\"System.DateTimeOffset\"&gt;&lt;/xref&gt;</ph> object whose date and time is the current local time and whose offset is the local time zone's offset from Coordinated Universal Time (UTC).","source":"A <xref href=\"System.DateTimeOffset\"></xref> object whose date and time is the current local time and whose offset is the local time zone's offset from Coordinated Universal Time (UTC)."}],"pos":[149551,149737],"yaml":true},{"content":"Gets the time's offset from Coordinated Universal Time (UTC).","nodes":[{"pos":[0,61],"content":"Gets the time's offset from Coordinated Universal Time (UTC).","nodes":[{"content":"Gets the time's offset from Coordinated Universal Time (UTC).","pos":[0,61]}]}],"pos":[151197,151259],"yaml":true},{"content":"The value of the <xref:System.TimeSpan.Hours%2A> property of the returned <xref:System.TimeSpan> object can range from -14 hours to 14 hours.  \n  \n The value of the <xref:System.DateTimeOffset.Offset%2A> property is precise to the minute.","nodes":[{"pos":[0,141],"content":"The value of the <xref:System.TimeSpan.Hours%2A> property of the returned <xref:System.TimeSpan> object can range from -14 hours to 14 hours.","nodes":[{"content":"The value of the <ph id=\"ph1\">&lt;xref:System.TimeSpan.Hours%2A&gt;</ph> property of the returned <ph id=\"ph2\">&lt;xref:System.TimeSpan&gt;</ph> object can range from -14 hours to 14 hours.","pos":[0,141],"source":"The value of the <xref:System.TimeSpan.Hours%2A> property of the returned <xref:System.TimeSpan> object can range from -14 hours to 14 hours."}]},{"pos":[148,238],"content":"The value of the <xref:System.DateTimeOffset.Offset%2A> property is precise to the minute.","nodes":[{"content":"The value of the <ph id=\"ph1\">&lt;xref:System.DateTimeOffset.Offset%2A&gt;</ph> property is precise to the minute.","pos":[0,90],"source":"The value of the <xref:System.DateTimeOffset.Offset%2A> property is precise to the minute."}]}],"pos":[151270,151513],"yaml":true,"extradata":"MT"},{"content":"The difference between the current <xref href=\"System.DateTimeOffset\"></xref> object's time value and Coordinated Universal Time (UTC).","nodes":[{"pos":[0,135],"content":"The difference between the current <ph id=\"ph1\">&lt;xref href=\"System.DateTimeOffset\"&gt;&lt;/xref&gt;</ph> object's time value and Coordinated Universal Time (UTC).","source":"The difference between the current <xref href=\"System.DateTimeOffset\"></xref> object's time value and Coordinated Universal Time (UTC)."}],"pos":[152122,152258],"yaml":true},{"content":"Adds a specified time interval to a <xref href=\"System.DateTimeOffset\"></xref> object that has a specified date and time, and yields a <xref href=\"System.DateTimeOffset\"></xref> object that has new a date and time.","nodes":[{"pos":[0,214],"content":"Adds a specified time interval to a <ph id=\"ph1\">&lt;xref href=\"System.DateTimeOffset\"&gt;&lt;/xref&gt;</ph> object that has a specified date and time, and yields a <ph id=\"ph2\">&lt;xref href=\"System.DateTimeOffset\"&gt;&lt;/xref&gt;</ph> object that has new a date and time.","source":"Adds a specified time interval to a <xref href=\"System.DateTimeOffset\"></xref> object that has a specified date and time, and yields a <xref href=\"System.DateTimeOffset\"></xref> object that has new a date and time."}],"pos":[153946,154161],"yaml":true},{"content":"The <xref:System.DateTimeOffset.op_Addition%2A> method defines the addition operation for <xref:System.DateTimeOffset> values. It enables code such as the following:  \n  \n [!code-csharp[System.DateTimeOffset.Operators#1](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.DateTimeOffset.Operators/cs/Operators.cs#1)]\n [!code-vb[System.DateTimeOffset.Operators#1](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.DateTimeOffset.Operators/vb/Operators.vb#1)]  \n  \n Languages that do not support custom operators and operator overloading can call the <xref:System.DateTimeOffset.Add%2A> method instead.  \n  \n The equivalent method for this operator is <xref:System.DateTimeOffset.Add%28System.DateTimeOffset%2CSystem.TimeSpan%29?displayProperty=fullName>","nodes":[{"pos":[0,165],"content":"The <xref:System.DateTimeOffset.op_Addition%2A> method defines the addition operation for <xref:System.DateTimeOffset> values. It enables code such as the following:","nodes":[{"content":"The <xref:System.DateTimeOffset.op_Addition%2A> method defines the addition operation for <xref:System.DateTimeOffset> values. It enables code such as the following:","pos":[0,165],"nodes":[{"content":"The <ph id=\"ph1\">&lt;xref:System.DateTimeOffset.op_Addition%2A&gt;</ph> method defines the addition operation for <ph id=\"ph2\">&lt;xref:System.DateTimeOffset&gt;</ph> values.","pos":[0,126],"source":"The <xref:System.DateTimeOffset.op_Addition%2A> method defines the addition operation for <xref:System.DateTimeOffset> values."},{"content":"It enables code such as the following:","pos":[127,165]}]}]},{"pos":[172,473],"content":"<bpt id=\"p1\">[!code-csharp</bpt><bpt id=\"p2\">[</bpt>System.DateTimeOffset.Operators#1<ept id=\"p2\">](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.DateTimeOffset.Operators/cs/Operators.cs#1)</ept><ept id=\"p1\">]</ept> <bpt id=\"p3\">[!code-vb</bpt><bpt id=\"p4\">[</bpt>System.DateTimeOffset.Operators#1<ept id=\"p4\">](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.DateTimeOffset.Operators/vb/Operators.vb#1)</ept><ept id=\"p3\">]</ept>","source":"[!code-csharp[System.DateTimeOffset.Operators#1](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.DateTimeOffset.Operators/cs/Operators.cs#1)]\n [!code-vb[System.DateTimeOffset.Operators#1](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.DateTimeOffset.Operators/vb/Operators.vb#1)]"},{"pos":[480,616],"content":"Languages that do not support custom operators and operator overloading can call the <xref:System.DateTimeOffset.Add%2A> method instead.","nodes":[{"content":"Languages that do not support custom operators and operator overloading can call the <ph id=\"ph1\">&lt;xref:System.DateTimeOffset.Add%2A&gt;</ph> method instead.","pos":[0,136],"source":"Languages that do not support custom operators and operator overloading can call the <xref:System.DateTimeOffset.Add%2A> method instead."}]},{"pos":[623,768],"content":"The equivalent method for this operator is <xref:System.DateTimeOffset.Add%28System.DateTimeOffset%2CSystem.TimeSpan%29?displayProperty=fullName>","nodes":[{"content":"The equivalent method for this operator is <ph id=\"ph1\">&lt;xref:System.DateTimeOffset.Add%28System.DateTimeOffset%2CSystem.TimeSpan%29?displayProperty=fullName&gt;</ph>","pos":[0,145],"source":"The equivalent method for this operator is <xref:System.DateTimeOffset.Add%28System.DateTimeOffset%2CSystem.TimeSpan%29?displayProperty=fullName>"}]}],"pos":[154172,154950],"yaml":true,"extradata":"MT"},{"content":"The object to add the time interval to.","nodes":[{"pos":[0,39],"content":"The object to add the time interval to.","nodes":[{"content":"The object to add the time interval to.","pos":[0,39]}]}],"pos":[155160,155200],"yaml":true},{"content":"The time interval to add.","nodes":[{"pos":[0,25],"content":"The time interval to add.","nodes":[{"content":"The time interval to add.","pos":[0,25]}]}],"pos":[155266,155292],"yaml":true},{"content":"An object whose value is the sum of the values of <code>dateTimeTz</code> and <code>timeSpan</code>.","nodes":[{"pos":[0,100],"content":"An object whose value is the sum of the values of <bpt id=\"p1\">&lt;code&gt;</bpt><ph id=\"ph1\">dateTimeTz</ph><ept id=\"p1\">&lt;/code&gt;</ept> and <bpt id=\"p2\">&lt;code&gt;</bpt><ph id=\"ph2\">timeSpan</ph><ept id=\"p2\">&lt;/code&gt;</ept>.","source":"An object whose value is the sum of the values of <code>dateTimeTz</code> and <code>timeSpan</code>."}],"pos":[155357,155458],"yaml":true},{"content":"The resulting <xref href=\"System.DateTimeOffset\"></xref> value is less than <xref href=\"System.DateTimeOffset.MinValue\"></xref>.  \n  \n -or-  \n  \n The resulting <xref href=\"System.DateTimeOffset\"></xref> value is greater than <xref href=\"System.DateTimeOffset.MaxValue\"></xref>.","nodes":[{"pos":[0,128],"content":"The resulting <ph id=\"ph1\">&lt;xref href=\"System.DateTimeOffset\"&gt;&lt;/xref&gt;</ph> value is less than <ph id=\"ph2\">&lt;xref href=\"System.DateTimeOffset.MinValue\"&gt;&lt;/xref&gt;</ph>.","source":"The resulting <xref href=\"System.DateTimeOffset\"></xref> value is less than <xref href=\"System.DateTimeOffset.MinValue\"></xref>."},{"pos":[135,139],"content":"-or-","nodes":[{"content":"-or-","pos":[0,4]}]},{"pos":[146,277],"content":"The resulting <ph id=\"ph1\">&lt;xref href=\"System.DateTimeOffset\"&gt;&lt;/xref&gt;</ph> value is greater than <ph id=\"ph2\">&lt;xref href=\"System.DateTimeOffset.MaxValue\"&gt;&lt;/xref&gt;</ph>.","source":"The resulting <xref href=\"System.DateTimeOffset\"></xref> value is greater than <xref href=\"System.DateTimeOffset.MaxValue\"></xref>."}],"pos":[155633,155925],"yaml":true},{"content":"Determines whether two specified <xref href=\"System.DateTimeOffset\"></xref> objects represent the same point in time.","nodes":[{"pos":[0,117],"content":"Determines whether two specified <ph id=\"ph1\">&lt;xref href=\"System.DateTimeOffset\"&gt;&lt;/xref&gt;</ph> objects represent the same point in time.","source":"Determines whether two specified <xref href=\"System.DateTimeOffset\"></xref> objects represent the same point in time."}],"pos":[157590,157708],"yaml":true},{"content":"The <xref:System.DateTimeOffset.op_Equality%2A> method defines the operation of the equality operator for <xref:System.DateTimeOffset> objects. It enables code such as the following:  \n  \n [!code-csharp[System.DateTimeOffset.Operators#2](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.DateTimeOffset.Operators/cs/Operators.cs#2)]\n [!code-vb[System.DateTimeOffset.Operators#2](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.DateTimeOffset.Operators/vb/Operators.vb#2)]  \n  \n Before evaluating the `left` and `right` operands for equality, the operator converts both values to Coordinated Universal Time (UTC). The operation is equivalent to the following:  \n  \n [!code-csharp[System.DateTimeOffset.Syntax#4](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.DateTimeOffset.Syntax/cs/Syntax.cs#4)]\n [!code-vb[System.DateTimeOffset.Syntax#4](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.DateTimeOffset.Syntax/vb/Syntax.vb#4)]  \n  \n In other words, the <xref:System.DateTimeOffset.op_Equality%2A> method determines whether the two <xref:System.DateTimeOffset> objects represent a single point in time. It directly compares neither dates and times nor offsets. To determine whether two <xref:System.DateTimeOffset> objects represent the same time and have the same offset value, use the <xref:System.DateTimeOffset.EqualsExact%2A> method.  \n  \n The equivalent method for this operator is <xref:System.DateTimeOffset.Equals%28System.DateTimeOffset%2CSystem.DateTimeOffset%29?displayProperty=fullName>","nodes":[{"pos":[0,182],"content":"The <xref:System.DateTimeOffset.op_Equality%2A> method defines the operation of the equality operator for <xref:System.DateTimeOffset> objects. It enables code such as the following:","nodes":[{"content":"The <xref:System.DateTimeOffset.op_Equality%2A> method defines the operation of the equality operator for <xref:System.DateTimeOffset> objects. It enables code such as the following:","pos":[0,182],"nodes":[{"content":"The <ph id=\"ph1\">&lt;xref:System.DateTimeOffset.op_Equality%2A&gt;</ph> method defines the operation of the equality operator for <ph id=\"ph2\">&lt;xref:System.DateTimeOffset&gt;</ph> objects.","pos":[0,143],"source":"The <xref:System.DateTimeOffset.op_Equality%2A> method defines the operation of the equality operator for <xref:System.DateTimeOffset> objects."},{"content":"It enables code such as the following:","pos":[144,182]}]}]},{"pos":[189,490],"content":"<bpt id=\"p1\">[!code-csharp</bpt><bpt id=\"p2\">[</bpt>System.DateTimeOffset.Operators#2<ept id=\"p2\">](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.DateTimeOffset.Operators/cs/Operators.cs#2)</ept><ept id=\"p1\">]</ept> <bpt id=\"p3\">[!code-vb</bpt><bpt id=\"p4\">[</bpt>System.DateTimeOffset.Operators#2<ept id=\"p4\">](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.DateTimeOffset.Operators/vb/Operators.vb#2)</ept><ept id=\"p3\">]</ept>","source":"[!code-csharp[System.DateTimeOffset.Operators#2](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.DateTimeOffset.Operators/cs/Operators.cs#2)]\n [!code-vb[System.DateTimeOffset.Operators#2](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.DateTimeOffset.Operators/vb/Operators.vb#2)]"},{"pos":[497,677],"content":"Before evaluating the `left` and `right` operands for equality, the operator converts both values to Coordinated Universal Time (UTC). The operation is equivalent to the following:","nodes":[{"content":"Before evaluating the <ph id=\"ph1\">`left`</ph> and <ph id=\"ph2\">`right`</ph> operands for equality, the operator converts both values to Coordinated Universal Time (UTC).","pos":[0,134],"source":"Before evaluating the `left` and `right` operands for equality, the operator converts both values to Coordinated Universal Time (UTC)."},{"content":"The operation is equivalent to the following:","pos":[135,180]}]},{"pos":[684,967],"content":"<bpt id=\"p1\">[!code-csharp</bpt><bpt id=\"p2\">[</bpt>System.DateTimeOffset.Syntax#4<ept id=\"p2\">](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.DateTimeOffset.Syntax/cs/Syntax.cs#4)</ept><ept id=\"p1\">]</ept> <bpt id=\"p3\">[!code-vb</bpt><bpt id=\"p4\">[</bpt>System.DateTimeOffset.Syntax#4<ept id=\"p4\">](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.DateTimeOffset.Syntax/vb/Syntax.vb#4)</ept><ept id=\"p3\">]</ept>","source":"[!code-csharp[System.DateTimeOffset.Syntax#4](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.DateTimeOffset.Syntax/cs/Syntax.cs#4)]\n [!code-vb[System.DateTimeOffset.Syntax#4](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.DateTimeOffset.Syntax/vb/Syntax.vb#4)]"},{"pos":[974,1378],"content":"In other words, the <xref:System.DateTimeOffset.op_Equality%2A> method determines whether the two <xref:System.DateTimeOffset> objects represent a single point in time. It directly compares neither dates and times nor offsets. To determine whether two <xref:System.DateTimeOffset> objects represent the same time and have the same offset value, use the <xref:System.DateTimeOffset.EqualsExact%2A> method.","nodes":[{"content":"In other words, the <xref:System.DateTimeOffset.op_Equality%2A> method determines whether the two <xref:System.DateTimeOffset> objects represent a single point in time. It directly compares neither dates and times nor offsets. To determine whether two <xref:System.DateTimeOffset> objects represent the same time and have the same offset value, use the <xref:System.DateTimeOffset.EqualsExact%2A> method.","pos":[0,404],"nodes":[{"content":"In other words, the <ph id=\"ph1\">&lt;xref:System.DateTimeOffset.op_Equality%2A&gt;</ph> method determines whether the two <ph id=\"ph2\">&lt;xref:System.DateTimeOffset&gt;</ph> objects represent a single point in time.","pos":[0,168],"source":"In other words, the <xref:System.DateTimeOffset.op_Equality%2A> method determines whether the two <xref:System.DateTimeOffset> objects represent a single point in time."},{"content":"It directly compares neither dates and times nor offsets.","pos":[169,226]},{"content":"To determine whether two <ph id=\"ph1\">&lt;xref:System.DateTimeOffset&gt;</ph> objects represent the same time and have the same offset value, use the <ph id=\"ph2\">&lt;xref:System.DateTimeOffset.EqualsExact%2A&gt;</ph> method.","pos":[227,404],"source":" To determine whether two <xref:System.DateTimeOffset> objects represent the same time and have the same offset value, use the <xref:System.DateTimeOffset.EqualsExact%2A> method."}]}]},{"pos":[1385,1539],"content":"The equivalent method for this operator is <xref:System.DateTimeOffset.Equals%28System.DateTimeOffset%2CSystem.DateTimeOffset%29?displayProperty=fullName>","nodes":[{"content":"The equivalent method for this operator is <ph id=\"ph1\">&lt;xref:System.DateTimeOffset.Equals%28System.DateTimeOffset%2CSystem.DateTimeOffset%29?displayProperty=fullName&gt;</ph>","pos":[0,154],"source":"The equivalent method for this operator is <xref:System.DateTimeOffset.Equals%28System.DateTimeOffset%2CSystem.DateTimeOffset%29?displayProperty=fullName>"}]}],"pos":[157719,159273],"yaml":true,"extradata":"MT"},{"content":"The first object to compare.","nodes":[{"pos":[0,28],"content":"The first object to compare.","nodes":[{"content":"The first object to compare.","pos":[0,28]}]}],"pos":[159456,159485],"yaml":true},{"content":"The second object to compare.","nodes":[{"pos":[0,29],"content":"The second object to compare.","nodes":[{"content":"The second object to compare.","pos":[0,29]}]}],"pos":[159554,159584],"yaml":true},{"content":"`true` if both <xref href=\"System.DateTimeOffset\"></xref> objects have the same <xref href=\"System.DateTimeOffset.UtcDateTime\"></xref> value; otherwise, `false`.","nodes":[{"pos":[0,161],"content":"<ph id=\"ph1\">`true`</ph> if both <ph id=\"ph2\">&lt;xref href=\"System.DateTimeOffset\"&gt;&lt;/xref&gt;</ph> objects have the same <ph id=\"ph3\">&lt;xref href=\"System.DateTimeOffset.UtcDateTime\"&gt;&lt;/xref&gt;</ph> value; otherwise, <ph id=\"ph4\">`false`</ph>.","source":"`true` if both <xref href=\"System.DateTimeOffset\"></xref> objects have the same <xref href=\"System.DateTimeOffset.UtcDateTime\"></xref> value; otherwise, `false`."}],"pos":[159642,159806],"yaml":true},{"content":"Determines whether one specified <xref href=\"System.DateTimeOffset\"></xref> object is greater than (or later than) a second specified <xref href=\"System.DateTimeOffset\"></xref> object.","nodes":[{"pos":[0,184],"content":"Determines whether one specified <ph id=\"ph1\">&lt;xref href=\"System.DateTimeOffset\"&gt;&lt;/xref&gt;</ph> object is greater than (or later than) a second specified <ph id=\"ph2\">&lt;xref href=\"System.DateTimeOffset\"&gt;&lt;/xref&gt;</ph> object.","source":"Determines whether one specified <xref href=\"System.DateTimeOffset\"></xref> object is greater than (or later than) a second specified <xref href=\"System.DateTimeOffset\"></xref> object."}],"pos":[161553,161738],"yaml":true},{"content":"The <xref:System.DateTimeOffset.op_GreaterThan%2A> method defines the operation of the greater than operator for <xref:System.DateTimeOffset> objects. It enables code such as the following:  \n  \n [!code-csharp[System.DateTimeOffset.Operators#3](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.DateTimeOffset.Operators/cs/Operators.cs#3)]\n [!code-vb[System.DateTimeOffset.Operators#3](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.DateTimeOffset.Operators/vb/Operators.vb#3)]  \n  \n Languages that do not support custom operators can call the <xref:System.DateTimeOffset.Compare%2A> method instead. They can also call the <xref:System.DateTimeOffset.op_GreaterThan%2A> method directly, as the following example shows.  \n  \n [!code-vb[System.DateTimeOffset.Operators#4](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.DateTimeOffset.Operators/vb/Operators.vb#4)]  \n  \n Before evaluating the `left` and `right` operands, the operator converts both values to Coordinated Universal Time (UTC). The operation is equivalent to the following:  \n  \n [!code-csharp[System.DateTimeOffset.Syntax#5](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.DateTimeOffset.Syntax/cs/Syntax.cs#5)]\n [!code-vb[System.DateTimeOffset.Syntax#5](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.DateTimeOffset.Syntax/vb/Syntax.vb#5)]  \n  \n The equivalent method for this operator is <xref:System.DateTimeOffset.Compare%28System.DateTimeOffset%2CSystem.DateTimeOffset%29?displayProperty=fullName>","nodes":[{"pos":[0,189],"content":"The <xref:System.DateTimeOffset.op_GreaterThan%2A> method defines the operation of the greater than operator for <xref:System.DateTimeOffset> objects. It enables code such as the following:","nodes":[{"content":"The <xref:System.DateTimeOffset.op_GreaterThan%2A> method defines the operation of the greater than operator for <xref:System.DateTimeOffset> objects. It enables code such as the following:","pos":[0,189],"nodes":[{"content":"The <ph id=\"ph1\">&lt;xref:System.DateTimeOffset.op_GreaterThan%2A&gt;</ph> method defines the operation of the greater than operator for <ph id=\"ph2\">&lt;xref:System.DateTimeOffset&gt;</ph> objects.","pos":[0,150],"source":"The <xref:System.DateTimeOffset.op_GreaterThan%2A> method defines the operation of the greater than operator for <xref:System.DateTimeOffset> objects."},{"content":"It enables code such as the following:","pos":[151,189]}]}]},{"pos":[196,497],"content":"<bpt id=\"p1\">[!code-csharp</bpt><bpt id=\"p2\">[</bpt>System.DateTimeOffset.Operators#3<ept id=\"p2\">](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.DateTimeOffset.Operators/cs/Operators.cs#3)</ept><ept id=\"p1\">]</ept> <bpt id=\"p3\">[!code-vb</bpt><bpt id=\"p4\">[</bpt>System.DateTimeOffset.Operators#3<ept id=\"p4\">](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.DateTimeOffset.Operators/vb/Operators.vb#3)</ept><ept id=\"p3\">]</ept>","source":"[!code-csharp[System.DateTimeOffset.Operators#3](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.DateTimeOffset.Operators/cs/Operators.cs#3)]\n [!code-vb[System.DateTimeOffset.Operators#3](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.DateTimeOffset.Operators/vb/Operators.vb#3)]"},{"pos":[504,738],"content":"Languages that do not support custom operators can call the <xref:System.DateTimeOffset.Compare%2A> method instead. They can also call the <xref:System.DateTimeOffset.op_GreaterThan%2A> method directly, as the following example shows.","nodes":[{"content":"Languages that do not support custom operators can call the <xref:System.DateTimeOffset.Compare%2A> method instead. They can also call the <xref:System.DateTimeOffset.op_GreaterThan%2A> method directly, as the following example shows.","pos":[0,234],"nodes":[{"content":"Languages that do not support custom operators can call the <ph id=\"ph1\">&lt;xref:System.DateTimeOffset.Compare%2A&gt;</ph> method instead.","pos":[0,115],"source":"Languages that do not support custom operators can call the <xref:System.DateTimeOffset.Compare%2A> method instead."},{"content":"They can also call the <ph id=\"ph1\">&lt;xref:System.DateTimeOffset.op_GreaterThan%2A&gt;</ph> method directly, as the following example shows.","pos":[116,234],"source":" They can also call the <xref:System.DateTimeOffset.op_GreaterThan%2A> method directly, as the following example shows."}]}]},{"pos":[745,895],"content":"<bpt id=\"p1\">[!code-vb</bpt><bpt id=\"p2\">[</bpt>System.DateTimeOffset.Operators#4<ept id=\"p2\">](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.DateTimeOffset.Operators/vb/Operators.vb#4)</ept><ept id=\"p1\">]</ept>","source":"[!code-vb[System.DateTimeOffset.Operators#4](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.DateTimeOffset.Operators/vb/Operators.vb#4)]"},{"pos":[902,1069],"content":"Before evaluating the `left` and `right` operands, the operator converts both values to Coordinated Universal Time (UTC). The operation is equivalent to the following:","nodes":[{"content":"Before evaluating the <ph id=\"ph1\">`left`</ph> and <ph id=\"ph2\">`right`</ph> operands, the operator converts both values to Coordinated Universal Time (UTC).","pos":[0,121],"source":"Before evaluating the `left` and `right` operands, the operator converts both values to Coordinated Universal Time (UTC)."},{"content":"The operation is equivalent to the following:","pos":[122,167]}]},{"pos":[1076,1359],"content":"<bpt id=\"p1\">[!code-csharp</bpt><bpt id=\"p2\">[</bpt>System.DateTimeOffset.Syntax#5<ept id=\"p2\">](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.DateTimeOffset.Syntax/cs/Syntax.cs#5)</ept><ept id=\"p1\">]</ept> <bpt id=\"p3\">[!code-vb</bpt><bpt id=\"p4\">[</bpt>System.DateTimeOffset.Syntax#5<ept id=\"p4\">](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.DateTimeOffset.Syntax/vb/Syntax.vb#5)</ept><ept id=\"p3\">]</ept>","source":"[!code-csharp[System.DateTimeOffset.Syntax#5](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.DateTimeOffset.Syntax/cs/Syntax.cs#5)]\n [!code-vb[System.DateTimeOffset.Syntax#5](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.DateTimeOffset.Syntax/vb/Syntax.vb#5)]"},{"pos":[1366,1521],"content":"The equivalent method for this operator is <xref:System.DateTimeOffset.Compare%28System.DateTimeOffset%2CSystem.DateTimeOffset%29?displayProperty=fullName>","nodes":[{"content":"The equivalent method for this operator is <ph id=\"ph1\">&lt;xref:System.DateTimeOffset.Compare%28System.DateTimeOffset%2CSystem.DateTimeOffset%29?displayProperty=fullName&gt;</ph>","pos":[0,155],"source":"The equivalent method for this operator is <xref:System.DateTimeOffset.Compare%28System.DateTimeOffset%2CSystem.DateTimeOffset%29?displayProperty=fullName>"}]}],"pos":[161749,163287],"yaml":true,"extradata":"MT"},{"content":"The first object to compare.","nodes":[{"pos":[0,28],"content":"The first object to compare.","nodes":[{"content":"The first object to compare.","pos":[0,28]}]}],"pos":[163473,163502],"yaml":true},{"content":"The second object to compare.","nodes":[{"pos":[0,29],"content":"The second object to compare.","nodes":[{"content":"The second object to compare.","pos":[0,29]}]}],"pos":[163571,163601],"yaml":true},{"content":"`true` if the <xref href=\"System.DateTimeOffset.UtcDateTime\"></xref> value of <code>left</code> is later than the <xref href=\"System.DateTimeOffset.UtcDateTime\"></xref> value of <code>right</code>; otherwise, `false`.","nodes":[{"pos":[0,217],"content":"<ph id=\"ph1\">`true`</ph> if the <ph id=\"ph2\">&lt;xref href=\"System.DateTimeOffset.UtcDateTime\"&gt;&lt;/xref&gt;</ph> value of <bpt id=\"p1\">&lt;code&gt;</bpt><ph id=\"ph3\">left</ph><ept id=\"p1\">&lt;/code&gt;</ept> is later than the <ph id=\"ph4\">&lt;xref href=\"System.DateTimeOffset.UtcDateTime\"&gt;&lt;/xref&gt;</ph> value of <bpt id=\"p2\">&lt;code&gt;</bpt><ph id=\"ph5\">right</ph><ept id=\"p2\">&lt;/code&gt;</ept>; otherwise, <ph id=\"ph6\">`false`</ph>.","source":"`true` if the <xref href=\"System.DateTimeOffset.UtcDateTime\"></xref> value of <code>left</code> is later than the <xref href=\"System.DateTimeOffset.UtcDateTime\"></xref> value of <code>right</code>; otherwise, `false`."}],"pos":[163659,163879],"yaml":true},{"content":"Determines whether one specified <xref href=\"System.DateTimeOffset\"></xref> object is greater than or equal to a second specified <xref href=\"System.DateTimeOffset\"></xref> object.","nodes":[{"pos":[0,180],"content":"Determines whether one specified <ph id=\"ph1\">&lt;xref href=\"System.DateTimeOffset\"&gt;&lt;/xref&gt;</ph> object is greater than or equal to a second specified <ph id=\"ph2\">&lt;xref href=\"System.DateTimeOffset\"&gt;&lt;/xref&gt;</ph> object.","source":"Determines whether one specified <xref href=\"System.DateTimeOffset\"></xref> object is greater than or equal to a second specified <xref href=\"System.DateTimeOffset\"></xref> object."}],"pos":[165671,165852],"yaml":true},{"content":"The <xref:System.DateTimeOffset.op_GreaterThan%2A> method defines the operation of the greater than or equal to operator for <xref:System.DateTimeOffset> objects. It enables code such as the following:  \n  \n [!code-csharp[System.DateTimeOffset.Operators#5](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.DateTimeOffset.Operators/cs/Operators.cs#5)]\n [!code-vb[System.DateTimeOffset.Operators#5](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.DateTimeOffset.Operators/vb/Operators.vb#5)]  \n  \n Languages that do not support custom operators can call the <xref:System.DateTimeOffset.Compare%2A> method instead. Some languages can also call the <xref:System.DateTimeOffset.op_GreaterThanOrEqual%2A> method directly, as the following example shows.  \n  \n [!code-vb[System.DateTimeOffset.Operators#6](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.DateTimeOffset.Operators/vb/Operators.vb#6)]  \n  \n Before evaluating the `left` and `right` operands, the operator converts both values to Coordinated Universal Time (UTC). The operation is equivalent to the following:  \n  \n [!code-csharp[System.DateTimeOffset.Syntax#6](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.DateTimeOffset.Syntax/cs/Syntax.cs#6)]\n [!code-vb[System.DateTimeOffset.Syntax#6](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.DateTimeOffset.Syntax/vb/Syntax.vb#6)]  \n  \n The equivalent method for this operator is <xref:System.DateTimeOffset.Compare%28System.DateTimeOffset%2CSystem.DateTimeOffset%29?displayProperty=fullName>","nodes":[{"pos":[0,201],"content":"The <xref:System.DateTimeOffset.op_GreaterThan%2A> method defines the operation of the greater than or equal to operator for <xref:System.DateTimeOffset> objects. It enables code such as the following:","nodes":[{"content":"The <xref:System.DateTimeOffset.op_GreaterThan%2A> method defines the operation of the greater than or equal to operator for <xref:System.DateTimeOffset> objects. It enables code such as the following:","pos":[0,201],"nodes":[{"content":"The <ph id=\"ph1\">&lt;xref:System.DateTimeOffset.op_GreaterThan%2A&gt;</ph> method defines the operation of the greater than or equal to operator for <ph id=\"ph2\">&lt;xref:System.DateTimeOffset&gt;</ph> objects.","pos":[0,162],"source":"The <xref:System.DateTimeOffset.op_GreaterThan%2A> method defines the operation of the greater than or equal to operator for <xref:System.DateTimeOffset> objects."},{"content":"It enables code such as the following:","pos":[163,201]}]}]},{"pos":[208,509],"content":"<bpt id=\"p1\">[!code-csharp</bpt><bpt id=\"p2\">[</bpt>System.DateTimeOffset.Operators#5<ept id=\"p2\">](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.DateTimeOffset.Operators/cs/Operators.cs#5)</ept><ept id=\"p1\">]</ept> <bpt id=\"p3\">[!code-vb</bpt><bpt id=\"p4\">[</bpt>System.DateTimeOffset.Operators#5<ept id=\"p4\">](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.DateTimeOffset.Operators/vb/Operators.vb#5)</ept><ept id=\"p3\">]</ept>","source":"[!code-csharp[System.DateTimeOffset.Operators#5](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.DateTimeOffset.Operators/cs/Operators.cs#5)]\n [!code-vb[System.DateTimeOffset.Operators#5](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.DateTimeOffset.Operators/vb/Operators.vb#5)]"},{"pos":[516,767],"content":"Languages that do not support custom operators can call the <xref:System.DateTimeOffset.Compare%2A> method instead. Some languages can also call the <xref:System.DateTimeOffset.op_GreaterThanOrEqual%2A> method directly, as the following example shows.","nodes":[{"content":"Languages that do not support custom operators can call the <xref:System.DateTimeOffset.Compare%2A> method instead. Some languages can also call the <xref:System.DateTimeOffset.op_GreaterThanOrEqual%2A> method directly, as the following example shows.","pos":[0,251],"nodes":[{"content":"Languages that do not support custom operators can call the <ph id=\"ph1\">&lt;xref:System.DateTimeOffset.Compare%2A&gt;</ph> method instead.","pos":[0,115],"source":"Languages that do not support custom operators can call the <xref:System.DateTimeOffset.Compare%2A> method instead."},{"content":"Some languages can also call the <ph id=\"ph1\">&lt;xref:System.DateTimeOffset.op_GreaterThanOrEqual%2A&gt;</ph> method directly, as the following example shows.","pos":[116,251],"source":" Some languages can also call the <xref:System.DateTimeOffset.op_GreaterThanOrEqual%2A> method directly, as the following example shows."}]}]},{"pos":[774,924],"content":"<bpt id=\"p1\">[!code-vb</bpt><bpt id=\"p2\">[</bpt>System.DateTimeOffset.Operators#6<ept id=\"p2\">](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.DateTimeOffset.Operators/vb/Operators.vb#6)</ept><ept id=\"p1\">]</ept>","source":"[!code-vb[System.DateTimeOffset.Operators#6](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.DateTimeOffset.Operators/vb/Operators.vb#6)]"},{"pos":[931,1098],"content":"Before evaluating the `left` and `right` operands, the operator converts both values to Coordinated Universal Time (UTC). The operation is equivalent to the following:","nodes":[{"content":"Before evaluating the <ph id=\"ph1\">`left`</ph> and <ph id=\"ph2\">`right`</ph> operands, the operator converts both values to Coordinated Universal Time (UTC).","pos":[0,121],"source":"Before evaluating the `left` and `right` operands, the operator converts both values to Coordinated Universal Time (UTC)."},{"content":"The operation is equivalent to the following:","pos":[122,167]}]},{"pos":[1105,1388],"content":"<bpt id=\"p1\">[!code-csharp</bpt><bpt id=\"p2\">[</bpt>System.DateTimeOffset.Syntax#6<ept id=\"p2\">](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.DateTimeOffset.Syntax/cs/Syntax.cs#6)</ept><ept id=\"p1\">]</ept> <bpt id=\"p3\">[!code-vb</bpt><bpt id=\"p4\">[</bpt>System.DateTimeOffset.Syntax#6<ept id=\"p4\">](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.DateTimeOffset.Syntax/vb/Syntax.vb#6)</ept><ept id=\"p3\">]</ept>","source":"[!code-csharp[System.DateTimeOffset.Syntax#6](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.DateTimeOffset.Syntax/cs/Syntax.cs#6)]\n [!code-vb[System.DateTimeOffset.Syntax#6](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.DateTimeOffset.Syntax/vb/Syntax.vb#6)]"},{"pos":[1395,1550],"content":"The equivalent method for this operator is <xref:System.DateTimeOffset.Compare%28System.DateTimeOffset%2CSystem.DateTimeOffset%29?displayProperty=fullName>","nodes":[{"content":"The equivalent method for this operator is <ph id=\"ph1\">&lt;xref:System.DateTimeOffset.Compare%28System.DateTimeOffset%2CSystem.DateTimeOffset%29?displayProperty=fullName&gt;</ph>","pos":[0,155],"source":"The equivalent method for this operator is <xref:System.DateTimeOffset.Compare%28System.DateTimeOffset%2CSystem.DateTimeOffset%29?displayProperty=fullName>"}]}],"pos":[165863,167430],"yaml":true,"extradata":"MT"},{"content":"The first object to compare.","nodes":[{"pos":[0,28],"content":"The first object to compare.","nodes":[{"content":"The first object to compare.","pos":[0,28]}]}],"pos":[167623,167652],"yaml":true},{"content":"The second object to compare.","nodes":[{"pos":[0,29],"content":"The second object to compare.","nodes":[{"content":"The second object to compare.","pos":[0,29]}]}],"pos":[167721,167751],"yaml":true},{"content":"`true` if the <xref href=\"System.DateTimeOffset.UtcDateTime\"></xref> value of <code>left</code> is the same as or later than the <xref href=\"System.DateTimeOffset.UtcDateTime\"></xref> value of <code>right</code>; otherwise, `false`.","nodes":[{"pos":[0,232],"content":"<ph id=\"ph1\">`true`</ph> if the <ph id=\"ph2\">&lt;xref href=\"System.DateTimeOffset.UtcDateTime\"&gt;&lt;/xref&gt;</ph> value of <bpt id=\"p1\">&lt;code&gt;</bpt><ph id=\"ph3\">left</ph><ept id=\"p1\">&lt;/code&gt;</ept> is the same as or later than the <ph id=\"ph4\">&lt;xref href=\"System.DateTimeOffset.UtcDateTime\"&gt;&lt;/xref&gt;</ph> value of <bpt id=\"p2\">&lt;code&gt;</bpt><ph id=\"ph5\">right</ph><ept id=\"p2\">&lt;/code&gt;</ept>; otherwise, <ph id=\"ph6\">`false`</ph>.","source":"`true` if the <xref href=\"System.DateTimeOffset.UtcDateTime\"></xref> value of <code>left</code> is the same as or later than the <xref href=\"System.DateTimeOffset.UtcDateTime\"></xref> value of <code>right</code>; otherwise, `false`."}],"pos":[167809,168044],"yaml":true},{"content":"Determines whether two specified <xref href=\"System.DateTimeOffset\"></xref> objects refer to different points in time.","nodes":[{"pos":[0,118],"content":"Determines whether two specified <ph id=\"ph1\">&lt;xref href=\"System.DateTimeOffset\"&gt;&lt;/xref&gt;</ph> objects refer to different points in time.","source":"Determines whether two specified <xref href=\"System.DateTimeOffset\"></xref> objects refer to different points in time."}],"pos":[171630,171749],"yaml":true},{"content":"The <xref:System.DateTimeOffset.op_Inequality%2A> method defines the operation of the inequality operator for <xref:System.DateTimeOffset> objects. It always returns the opposite result from <xref:System.DateTimeOffset.op_Equality%2A>. The <xref:System.DateTimeOffset.op_Inequality%2A> method enables code such as the following:  \n  \n [!code-csharp[System.DateTimeOffset.Operators#8](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.DateTimeOffset.Operators/cs/Operators.cs#8)]\n [!code-vb[System.DateTimeOffset.Operators#8](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.DateTimeOffset.Operators/vb/Operators.vb#8)]  \n  \n Before evaluating the `left` and `right` operands for equality, the operator converts both values to Coordinated Universal Time (UTC). The operation is equivalent to the following:  \n  \n [!code-csharp[System.DateTimeOffset.Syntax#4](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.DateTimeOffset.Syntax/cs/Syntax.cs#4)]\n [!code-vb[System.DateTimeOffset.Syntax#4](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.DateTimeOffset.Syntax/vb/Syntax.vb#4)]  \n  \n In other words, the <xref:System.DateTimeOffset.op_Inequality%2A> method determines whether the two <xref:System.DateTimeOffset> objects represent different points in time. It directly compares neither dates and times nor offsets.  \n  \n Languages that do not support custom operators can call the <xref:System.DateTimeOffset.Compare%2A> method instead. In addition, some languages can also call the <xref:System.DateTimeOffset.op_Inequality%2A> method directly, as the following example shows.  \n  \n [!code-vb[System.DateTimeOffset.Operators#9](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.DateTimeOffset.Operators/vb/Operators.vb#9)]  \n  \n The equivalent method for this operator is <xref:System.DateTimeOffset.Compare%28System.DateTimeOffset%2CSystem.DateTimeOffset%29?displayProperty=fullName>","nodes":[{"pos":[0,328],"content":"The <xref:System.DateTimeOffset.op_Inequality%2A> method defines the operation of the inequality operator for <xref:System.DateTimeOffset> objects. It always returns the opposite result from <xref:System.DateTimeOffset.op_Equality%2A>. The <xref:System.DateTimeOffset.op_Inequality%2A> method enables code such as the following:","nodes":[{"content":"The <xref:System.DateTimeOffset.op_Inequality%2A> method defines the operation of the inequality operator for <xref:System.DateTimeOffset> objects. It always returns the opposite result from <xref:System.DateTimeOffset.op_Equality%2A>. The <xref:System.DateTimeOffset.op_Inequality%2A> method enables code such as the following:","pos":[0,328],"nodes":[{"content":"The <ph id=\"ph1\">&lt;xref:System.DateTimeOffset.op_Inequality%2A&gt;</ph> method defines the operation of the inequality operator for <ph id=\"ph2\">&lt;xref:System.DateTimeOffset&gt;</ph> objects.","pos":[0,147],"source":"The <xref:System.DateTimeOffset.op_Inequality%2A> method defines the operation of the inequality operator for <xref:System.DateTimeOffset> objects."},{"content":"It always returns the opposite result from <ph id=\"ph1\">&lt;xref:System.DateTimeOffset.op_Equality%2A&gt;</ph>.","pos":[148,235],"source":" It always returns the opposite result from <xref:System.DateTimeOffset.op_Equality%2A>."},{"content":"The <ph id=\"ph1\">&lt;xref:System.DateTimeOffset.op_Inequality%2A&gt;</ph> method enables code such as the following:","pos":[236,328],"source":" The <xref:System.DateTimeOffset.op_Inequality%2A> method enables code such as the following:"}]}]},{"pos":[335,636],"content":"<bpt id=\"p1\">[!code-csharp</bpt><bpt id=\"p2\">[</bpt>System.DateTimeOffset.Operators#8<ept id=\"p2\">](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.DateTimeOffset.Operators/cs/Operators.cs#8)</ept><ept id=\"p1\">]</ept> <bpt id=\"p3\">[!code-vb</bpt><bpt id=\"p4\">[</bpt>System.DateTimeOffset.Operators#8<ept id=\"p4\">](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.DateTimeOffset.Operators/vb/Operators.vb#8)</ept><ept id=\"p3\">]</ept>","source":"[!code-csharp[System.DateTimeOffset.Operators#8](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.DateTimeOffset.Operators/cs/Operators.cs#8)]\n [!code-vb[System.DateTimeOffset.Operators#8](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.DateTimeOffset.Operators/vb/Operators.vb#8)]"},{"pos":[643,823],"content":"Before evaluating the `left` and `right` operands for equality, the operator converts both values to Coordinated Universal Time (UTC). The operation is equivalent to the following:","nodes":[{"content":"Before evaluating the <ph id=\"ph1\">`left`</ph> and <ph id=\"ph2\">`right`</ph> operands for equality, the operator converts both values to Coordinated Universal Time (UTC).","pos":[0,134],"source":"Before evaluating the `left` and `right` operands for equality, the operator converts both values to Coordinated Universal Time (UTC)."},{"content":"The operation is equivalent to the following:","pos":[135,180]}]},{"pos":[830,1113],"content":"<bpt id=\"p1\">[!code-csharp</bpt><bpt id=\"p2\">[</bpt>System.DateTimeOffset.Syntax#4<ept id=\"p2\">](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.DateTimeOffset.Syntax/cs/Syntax.cs#4)</ept><ept id=\"p1\">]</ept> <bpt id=\"p3\">[!code-vb</bpt><bpt id=\"p4\">[</bpt>System.DateTimeOffset.Syntax#4<ept id=\"p4\">](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.DateTimeOffset.Syntax/vb/Syntax.vb#4)</ept><ept id=\"p3\">]</ept>","source":"[!code-csharp[System.DateTimeOffset.Syntax#4](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.DateTimeOffset.Syntax/cs/Syntax.cs#4)]\n [!code-vb[System.DateTimeOffset.Syntax#4](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.DateTimeOffset.Syntax/vb/Syntax.vb#4)]"},{"pos":[1120,1350],"content":"In other words, the <xref:System.DateTimeOffset.op_Inequality%2A> method determines whether the two <xref:System.DateTimeOffset> objects represent different points in time. It directly compares neither dates and times nor offsets.","nodes":[{"content":"In other words, the <xref:System.DateTimeOffset.op_Inequality%2A> method determines whether the two <xref:System.DateTimeOffset> objects represent different points in time. It directly compares neither dates and times nor offsets.","pos":[0,230],"nodes":[{"content":"In other words, the <ph id=\"ph1\">&lt;xref:System.DateTimeOffset.op_Inequality%2A&gt;</ph> method determines whether the two <ph id=\"ph2\">&lt;xref:System.DateTimeOffset&gt;</ph> objects represent different points in time.","pos":[0,172],"source":"In other words, the <xref:System.DateTimeOffset.op_Inequality%2A> method determines whether the two <xref:System.DateTimeOffset> objects represent different points in time."},{"content":"It directly compares neither dates and times nor offsets.","pos":[173,230]}]}]},{"pos":[1357,1613],"content":"Languages that do not support custom operators can call the <xref:System.DateTimeOffset.Compare%2A> method instead. In addition, some languages can also call the <xref:System.DateTimeOffset.op_Inequality%2A> method directly, as the following example shows.","nodes":[{"content":"Languages that do not support custom operators can call the <xref:System.DateTimeOffset.Compare%2A> method instead. In addition, some languages can also call the <xref:System.DateTimeOffset.op_Inequality%2A> method directly, as the following example shows.","pos":[0,256],"nodes":[{"content":"Languages that do not support custom operators can call the <ph id=\"ph1\">&lt;xref:System.DateTimeOffset.Compare%2A&gt;</ph> method instead.","pos":[0,115],"source":"Languages that do not support custom operators can call the <xref:System.DateTimeOffset.Compare%2A> method instead."},{"content":"In addition, some languages can also call the <ph id=\"ph1\">&lt;xref:System.DateTimeOffset.op_Inequality%2A&gt;</ph> method directly, as the following example shows.","pos":[116,256],"source":" In addition, some languages can also call the <xref:System.DateTimeOffset.op_Inequality%2A> method directly, as the following example shows."}]}]},{"pos":[1620,1770],"content":"<bpt id=\"p1\">[!code-vb</bpt><bpt id=\"p2\">[</bpt>System.DateTimeOffset.Operators#9<ept id=\"p2\">](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.DateTimeOffset.Operators/vb/Operators.vb#9)</ept><ept id=\"p1\">]</ept>","source":"[!code-vb[System.DateTimeOffset.Operators#9](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.DateTimeOffset.Operators/vb/Operators.vb#9)]"},{"pos":[1777,1932],"content":"The equivalent method for this operator is <xref:System.DateTimeOffset.Compare%28System.DateTimeOffset%2CSystem.DateTimeOffset%29?displayProperty=fullName>","nodes":[{"content":"The equivalent method for this operator is <ph id=\"ph1\">&lt;xref:System.DateTimeOffset.Compare%28System.DateTimeOffset%2CSystem.DateTimeOffset%29?displayProperty=fullName&gt;</ph>","pos":[0,155],"source":"The equivalent method for this operator is <xref:System.DateTimeOffset.Compare%28System.DateTimeOffset%2CSystem.DateTimeOffset%29?displayProperty=fullName>"}]}],"pos":[171760,173711],"yaml":true,"extradata":"MT"},{"content":"The first object to compare.","nodes":[{"pos":[0,28],"content":"The first object to compare.","nodes":[{"content":"The first object to compare.","pos":[0,28]}]}],"pos":[173896,173925],"yaml":true},{"content":"The second object to compare.","nodes":[{"pos":[0,29],"content":"The second object to compare.","nodes":[{"content":"The second object to compare.","pos":[0,29]}]}],"pos":[173994,174024],"yaml":true},{"content":"`true` if <code>left</code> and <code>right</code> do not have the same <xref href=\"System.DateTimeOffset.UtcDateTime\"></xref> value; otherwise, `false`.","nodes":[{"pos":[0,153],"content":"<ph id=\"ph1\">`true`</ph> if <bpt id=\"p1\">&lt;code&gt;</bpt><ph id=\"ph2\">left</ph><ept id=\"p1\">&lt;/code&gt;</ept> and <bpt id=\"p2\">&lt;code&gt;</bpt><ph id=\"ph3\">right</ph><ept id=\"p2\">&lt;/code&gt;</ept> do not have the same <ph id=\"ph4\">&lt;xref href=\"System.DateTimeOffset.UtcDateTime\"&gt;&lt;/xref&gt;</ph> value; otherwise, <ph id=\"ph5\">`false`</ph>.","source":"`true` if <code>left</code> and <code>right</code> do not have the same <xref href=\"System.DateTimeOffset.UtcDateTime\"></xref> value; otherwise, `false`."}],"pos":[174082,174238],"yaml":true},{"content":"Determines whether one specified <xref href=\"System.DateTimeOffset\"></xref> object is less than a second specified <xref href=\"System.DateTimeOffset\"></xref> object.","nodes":[{"pos":[0,165],"content":"Determines whether one specified <ph id=\"ph1\">&lt;xref href=\"System.DateTimeOffset\"&gt;&lt;/xref&gt;</ph> object is less than a second specified <ph id=\"ph2\">&lt;xref href=\"System.DateTimeOffset\"&gt;&lt;/xref&gt;</ph> object.","source":"Determines whether one specified <xref href=\"System.DateTimeOffset\"></xref> object is less than a second specified <xref href=\"System.DateTimeOffset\"></xref> object."}],"pos":[175969,176135],"yaml":true},{"content":"The <xref:System.DateTimeOffset.op_LessThan%2A> method defines the operation of the less than operator for <xref:System.DateTimeOffset> objects. It enables code such as the following:  \n  \n [!code-csharp[System.DateTimeOffset.Operators#10](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.DateTimeOffset.Operators/cs/Operators.cs#10)]\n [!code-vb[System.DateTimeOffset.Operators#10](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.DateTimeOffset.Operators/vb/Operators.vb#10)]  \n  \n Before evaluating the `left` and `right` operands, the operator converts both operands to Coordinated Universal Time (UTC). The operation is equivalent to the following:  \n  \n [!code-csharp[System.DateTimeOffset.Syntax#8](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.DateTimeOffset.Syntax/cs/Syntax.cs#8)]\n [!code-vb[System.DateTimeOffset.Syntax#8](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.DateTimeOffset.Syntax/vb/Syntax.vb#8)]  \n  \n Languages that do not support custom operators can call the <xref:System.DateTimeOffset.Compare%2A> method instead. In addition, some languages can also call the <xref:System.DateTimeOffset.op_LessThan%2A> method directly, as the following example shows.  \n  \n [!code-vb[System.DateTimeOffset.Operators#11](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.DateTimeOffset.Operators/vb/Operators.vb#11)]  \n  \n The equivalent method for this operator is <xref:System.DateTimeOffset.Compare%28System.DateTimeOffset%2CSystem.DateTimeOffset%29?displayProperty=fullName>","nodes":[{"pos":[0,183],"content":"The <xref:System.DateTimeOffset.op_LessThan%2A> method defines the operation of the less than operator for <xref:System.DateTimeOffset> objects. It enables code such as the following:","nodes":[{"content":"The <xref:System.DateTimeOffset.op_LessThan%2A> method defines the operation of the less than operator for <xref:System.DateTimeOffset> objects. It enables code such as the following:","pos":[0,183],"nodes":[{"content":"The <ph id=\"ph1\">&lt;xref:System.DateTimeOffset.op_LessThan%2A&gt;</ph> method defines the operation of the less than operator for <ph id=\"ph2\">&lt;xref:System.DateTimeOffset&gt;</ph> objects.","pos":[0,144],"source":"The <xref:System.DateTimeOffset.op_LessThan%2A> method defines the operation of the less than operator for <xref:System.DateTimeOffset> objects."},{"content":"It enables code such as the following:","pos":[145,183]}]}]},{"pos":[190,495],"content":"<bpt id=\"p1\">[!code-csharp</bpt><bpt id=\"p2\">[</bpt>System.DateTimeOffset.Operators#10<ept id=\"p2\">](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.DateTimeOffset.Operators/cs/Operators.cs#10)</ept><ept id=\"p1\">]</ept> <bpt id=\"p3\">[!code-vb</bpt><bpt id=\"p4\">[</bpt>System.DateTimeOffset.Operators#10<ept id=\"p4\">](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.DateTimeOffset.Operators/vb/Operators.vb#10)</ept><ept id=\"p3\">]</ept>","source":"[!code-csharp[System.DateTimeOffset.Operators#10](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.DateTimeOffset.Operators/cs/Operators.cs#10)]\n [!code-vb[System.DateTimeOffset.Operators#10](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.DateTimeOffset.Operators/vb/Operators.vb#10)]"},{"pos":[502,671],"content":"Before evaluating the `left` and `right` operands, the operator converts both operands to Coordinated Universal Time (UTC). The operation is equivalent to the following:","nodes":[{"content":"Before evaluating the <ph id=\"ph1\">`left`</ph> and <ph id=\"ph2\">`right`</ph> operands, the operator converts both operands to Coordinated Universal Time (UTC).","pos":[0,123],"source":"Before evaluating the `left` and `right` operands, the operator converts both operands to Coordinated Universal Time (UTC)."},{"content":"The operation is equivalent to the following:","pos":[124,169]}]},{"pos":[678,961],"content":"<bpt id=\"p1\">[!code-csharp</bpt><bpt id=\"p2\">[</bpt>System.DateTimeOffset.Syntax#8<ept id=\"p2\">](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.DateTimeOffset.Syntax/cs/Syntax.cs#8)</ept><ept id=\"p1\">]</ept> <bpt id=\"p3\">[!code-vb</bpt><bpt id=\"p4\">[</bpt>System.DateTimeOffset.Syntax#8<ept id=\"p4\">](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.DateTimeOffset.Syntax/vb/Syntax.vb#8)</ept><ept id=\"p3\">]</ept>","source":"[!code-csharp[System.DateTimeOffset.Syntax#8](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.DateTimeOffset.Syntax/cs/Syntax.cs#8)]\n [!code-vb[System.DateTimeOffset.Syntax#8](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.DateTimeOffset.Syntax/vb/Syntax.vb#8)]"},{"pos":[968,1222],"content":"Languages that do not support custom operators can call the <xref:System.DateTimeOffset.Compare%2A> method instead. In addition, some languages can also call the <xref:System.DateTimeOffset.op_LessThan%2A> method directly, as the following example shows.","nodes":[{"content":"Languages that do not support custom operators can call the <xref:System.DateTimeOffset.Compare%2A> method instead. In addition, some languages can also call the <xref:System.DateTimeOffset.op_LessThan%2A> method directly, as the following example shows.","pos":[0,254],"nodes":[{"content":"Languages that do not support custom operators can call the <ph id=\"ph1\">&lt;xref:System.DateTimeOffset.Compare%2A&gt;</ph> method instead.","pos":[0,115],"source":"Languages that do not support custom operators can call the <xref:System.DateTimeOffset.Compare%2A> method instead."},{"content":"In addition, some languages can also call the <ph id=\"ph1\">&lt;xref:System.DateTimeOffset.op_LessThan%2A&gt;</ph> method directly, as the following example shows.","pos":[116,254],"source":" In addition, some languages can also call the <xref:System.DateTimeOffset.op_LessThan%2A> method directly, as the following example shows."}]}]},{"pos":[1229,1381],"content":"<bpt id=\"p1\">[!code-vb</bpt><bpt id=\"p2\">[</bpt>System.DateTimeOffset.Operators#11<ept id=\"p2\">](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.DateTimeOffset.Operators/vb/Operators.vb#11)</ept><ept id=\"p1\">]</ept>","source":"[!code-vb[System.DateTimeOffset.Operators#11](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.DateTimeOffset.Operators/vb/Operators.vb#11)]"},{"pos":[1388,1543],"content":"The equivalent method for this operator is <xref:System.DateTimeOffset.Compare%28System.DateTimeOffset%2CSystem.DateTimeOffset%29?displayProperty=fullName>","nodes":[{"content":"The equivalent method for this operator is <ph id=\"ph1\">&lt;xref:System.DateTimeOffset.Compare%28System.DateTimeOffset%2CSystem.DateTimeOffset%29?displayProperty=fullName&gt;</ph>","pos":[0,155],"source":"The equivalent method for this operator is <xref:System.DateTimeOffset.Compare%28System.DateTimeOffset%2CSystem.DateTimeOffset%29?displayProperty=fullName>"}]}],"pos":[176146,177706],"yaml":true,"extradata":"MT"},{"content":"The first object to compare.","nodes":[{"pos":[0,28],"content":"The first object to compare.","nodes":[{"content":"The first object to compare.","pos":[0,28]}]}],"pos":[177889,177918],"yaml":true},{"content":"The second object to compare.","nodes":[{"pos":[0,29],"content":"The second object to compare.","nodes":[{"content":"The second object to compare.","pos":[0,29]}]}],"pos":[177987,178017],"yaml":true},{"content":"`true` if the <xref href=\"System.DateTimeOffset.UtcDateTime\"></xref> value of <code>left</code> is earlier than the <xref href=\"System.DateTimeOffset.UtcDateTime\"></xref> value of <code>right</code>; otherwise, `false`.","nodes":[{"pos":[0,219],"content":"<ph id=\"ph1\">`true`</ph> if the <ph id=\"ph2\">&lt;xref href=\"System.DateTimeOffset.UtcDateTime\"&gt;&lt;/xref&gt;</ph> value of <bpt id=\"p1\">&lt;code&gt;</bpt><ph id=\"ph3\">left</ph><ept id=\"p1\">&lt;/code&gt;</ept> is earlier than the <ph id=\"ph4\">&lt;xref href=\"System.DateTimeOffset.UtcDateTime\"&gt;&lt;/xref&gt;</ph> value of <bpt id=\"p2\">&lt;code&gt;</bpt><ph id=\"ph5\">right</ph><ept id=\"p2\">&lt;/code&gt;</ept>; otherwise, <ph id=\"ph6\">`false`</ph>.","source":"`true` if the <xref href=\"System.DateTimeOffset.UtcDateTime\"></xref> value of <code>left</code> is earlier than the <xref href=\"System.DateTimeOffset.UtcDateTime\"></xref> value of <code>right</code>; otherwise, `false`."}],"pos":[178075,178297],"yaml":true},{"content":"Determines whether one specified <xref href=\"System.DateTimeOffset\"></xref> object is less than a second specified <xref href=\"System.DateTimeOffset\"></xref> object.","nodes":[{"pos":[0,165],"content":"Determines whether one specified <ph id=\"ph1\">&lt;xref href=\"System.DateTimeOffset\"&gt;&lt;/xref&gt;</ph> object is less than a second specified <ph id=\"ph2\">&lt;xref href=\"System.DateTimeOffset\"&gt;&lt;/xref&gt;</ph> object.","source":"Determines whether one specified <xref href=\"System.DateTimeOffset\"></xref> object is less than a second specified <xref href=\"System.DateTimeOffset\"></xref> object."}],"pos":[180068,180234],"yaml":true},{"content":"The <xref:System.DateTimeOffset.op_LessThanOrEqual%2A> method defines the operation of the less than or equal to operator for <xref:System.DateTimeOffset> objects. It enables code such as the following:  \n  \n [!code-csharp[System.DateTimeOffset.Operators#12](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.DateTimeOffset.Operators/cs/Operators.cs#12)]\n [!code-vb[System.DateTimeOffset.Operators#12](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.DateTimeOffset.Operators/vb/Operators.vb#12)]  \n  \n Languages that do not support custom operators can call the <xref:System.DateTimeOffset.Compare%2A> method instead. Some languages can also call the <xref:System.DateTimeOffset.op_LessThanOrEqual%2A> method directly, as the following example shows.  \n  \n [!code-vb[System.DateTimeOffset.Operators#13](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.DateTimeOffset.Operators/vb/Operators.vb#13)]  \n  \n Before evaluating the `left` and `right` operands, the operator converts both values to Coordinated Universal Time (UTC). The operation is equivalent to the following:  \n  \n [!code-csharp[System.DateTimeOffset.Syntax#9](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.DateTimeOffset.Syntax/cs/Syntax.cs#9)]\n [!code-vb[System.DateTimeOffset.Syntax#9](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.DateTimeOffset.Syntax/vb/Syntax.vb#9)]  \n  \n The equivalent method for this operator is <xref:System.DateTimeOffset.Compare%28System.DateTimeOffset%2CSystem.DateTimeOffset%29?displayProperty=fullName>","nodes":[{"pos":[0,202],"content":"The <xref:System.DateTimeOffset.op_LessThanOrEqual%2A> method defines the operation of the less than or equal to operator for <xref:System.DateTimeOffset> objects. It enables code such as the following:","nodes":[{"content":"The <xref:System.DateTimeOffset.op_LessThanOrEqual%2A> method defines the operation of the less than or equal to operator for <xref:System.DateTimeOffset> objects. It enables code such as the following:","pos":[0,202],"nodes":[{"content":"The <ph id=\"ph1\">&lt;xref:System.DateTimeOffset.op_LessThanOrEqual%2A&gt;</ph> method defines the operation of the less than or equal to operator for <ph id=\"ph2\">&lt;xref:System.DateTimeOffset&gt;</ph> objects.","pos":[0,163],"source":"The <xref:System.DateTimeOffset.op_LessThanOrEqual%2A> method defines the operation of the less than or equal to operator for <xref:System.DateTimeOffset> objects."},{"content":"It enables code such as the following:","pos":[164,202]}]}]},{"pos":[209,514],"content":"<bpt id=\"p1\">[!code-csharp</bpt><bpt id=\"p2\">[</bpt>System.DateTimeOffset.Operators#12<ept id=\"p2\">](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.DateTimeOffset.Operators/cs/Operators.cs#12)</ept><ept id=\"p1\">]</ept> <bpt id=\"p3\">[!code-vb</bpt><bpt id=\"p4\">[</bpt>System.DateTimeOffset.Operators#12<ept id=\"p4\">](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.DateTimeOffset.Operators/vb/Operators.vb#12)</ept><ept id=\"p3\">]</ept>","source":"[!code-csharp[System.DateTimeOffset.Operators#12](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.DateTimeOffset.Operators/cs/Operators.cs#12)]\n [!code-vb[System.DateTimeOffset.Operators#12](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.DateTimeOffset.Operators/vb/Operators.vb#12)]"},{"pos":[521,769],"content":"Languages that do not support custom operators can call the <xref:System.DateTimeOffset.Compare%2A> method instead. Some languages can also call the <xref:System.DateTimeOffset.op_LessThanOrEqual%2A> method directly, as the following example shows.","nodes":[{"content":"Languages that do not support custom operators can call the <xref:System.DateTimeOffset.Compare%2A> method instead. Some languages can also call the <xref:System.DateTimeOffset.op_LessThanOrEqual%2A> method directly, as the following example shows.","pos":[0,248],"nodes":[{"content":"Languages that do not support custom operators can call the <ph id=\"ph1\">&lt;xref:System.DateTimeOffset.Compare%2A&gt;</ph> method instead.","pos":[0,115],"source":"Languages that do not support custom operators can call the <xref:System.DateTimeOffset.Compare%2A> method instead."},{"content":"Some languages can also call the <ph id=\"ph1\">&lt;xref:System.DateTimeOffset.op_LessThanOrEqual%2A&gt;</ph> method directly, as the following example shows.","pos":[116,248],"source":" Some languages can also call the <xref:System.DateTimeOffset.op_LessThanOrEqual%2A> method directly, as the following example shows."}]}]},{"pos":[776,928],"content":"<bpt id=\"p1\">[!code-vb</bpt><bpt id=\"p2\">[</bpt>System.DateTimeOffset.Operators#13<ept id=\"p2\">](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.DateTimeOffset.Operators/vb/Operators.vb#13)</ept><ept id=\"p1\">]</ept>","source":"[!code-vb[System.DateTimeOffset.Operators#13](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.DateTimeOffset.Operators/vb/Operators.vb#13)]"},{"pos":[935,1102],"content":"Before evaluating the `left` and `right` operands, the operator converts both values to Coordinated Universal Time (UTC). The operation is equivalent to the following:","nodes":[{"content":"Before evaluating the <ph id=\"ph1\">`left`</ph> and <ph id=\"ph2\">`right`</ph> operands, the operator converts both values to Coordinated Universal Time (UTC).","pos":[0,121],"source":"Before evaluating the `left` and `right` operands, the operator converts both values to Coordinated Universal Time (UTC)."},{"content":"The operation is equivalent to the following:","pos":[122,167]}]},{"pos":[1109,1392],"content":"<bpt id=\"p1\">[!code-csharp</bpt><bpt id=\"p2\">[</bpt>System.DateTimeOffset.Syntax#9<ept id=\"p2\">](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.DateTimeOffset.Syntax/cs/Syntax.cs#9)</ept><ept id=\"p1\">]</ept> <bpt id=\"p3\">[!code-vb</bpt><bpt id=\"p4\">[</bpt>System.DateTimeOffset.Syntax#9<ept id=\"p4\">](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.DateTimeOffset.Syntax/vb/Syntax.vb#9)</ept><ept id=\"p3\">]</ept>","source":"[!code-csharp[System.DateTimeOffset.Syntax#9](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.DateTimeOffset.Syntax/cs/Syntax.cs#9)]\n [!code-vb[System.DateTimeOffset.Syntax#9](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.DateTimeOffset.Syntax/vb/Syntax.vb#9)]"},{"pos":[1399,1554],"content":"The equivalent method for this operator is <xref:System.DateTimeOffset.Compare%28System.DateTimeOffset%2CSystem.DateTimeOffset%29?displayProperty=fullName>","nodes":[{"content":"The equivalent method for this operator is <ph id=\"ph1\">&lt;xref:System.DateTimeOffset.Compare%28System.DateTimeOffset%2CSystem.DateTimeOffset%29?displayProperty=fullName&gt;</ph>","pos":[0,155],"source":"The equivalent method for this operator is <xref:System.DateTimeOffset.Compare%28System.DateTimeOffset%2CSystem.DateTimeOffset%29?displayProperty=fullName>"}]}],"pos":[180245,181816],"yaml":true,"extradata":"MT"},{"content":"The first object to compare.","nodes":[{"pos":[0,28],"content":"The first object to compare.","nodes":[{"content":"The first object to compare.","pos":[0,28]}]}],"pos":[182006,182035],"yaml":true},{"content":"The second object to compare.","nodes":[{"pos":[0,29],"content":"The second object to compare.","nodes":[{"content":"The second object to compare.","pos":[0,29]}]}],"pos":[182104,182134],"yaml":true},{"content":"`true` if the <xref href=\"System.DateTimeOffset.UtcDateTime\"></xref> value of <code>left</code> is earlier than the <xref href=\"System.DateTimeOffset.UtcDateTime\"></xref> value of <code>right</code>; otherwise, `false`.","nodes":[{"pos":[0,219],"content":"<ph id=\"ph1\">`true`</ph> if the <ph id=\"ph2\">&lt;xref href=\"System.DateTimeOffset.UtcDateTime\"&gt;&lt;/xref&gt;</ph> value of <bpt id=\"p1\">&lt;code&gt;</bpt><ph id=\"ph3\">left</ph><ept id=\"p1\">&lt;/code&gt;</ept> is earlier than the <ph id=\"ph4\">&lt;xref href=\"System.DateTimeOffset.UtcDateTime\"&gt;&lt;/xref&gt;</ph> value of <bpt id=\"p2\">&lt;code&gt;</bpt><ph id=\"ph5\">right</ph><ept id=\"p2\">&lt;/code&gt;</ept>; otherwise, <ph id=\"ph6\">`false`</ph>.","source":"`true` if the <xref href=\"System.DateTimeOffset.UtcDateTime\"></xref> value of <code>left</code> is earlier than the <xref href=\"System.DateTimeOffset.UtcDateTime\"></xref> value of <code>right</code>; otherwise, `false`."}],"pos":[182192,182414],"yaml":true},{"content":"Subtracts one <xref href=\"System.DateTimeOffset\"></xref> object from another and yields a time interval.","nodes":[{"pos":[0,104],"content":"Subtracts one <ph id=\"ph1\">&lt;xref href=\"System.DateTimeOffset\"&gt;&lt;/xref&gt;</ph> object from another and yields a time interval.","source":"Subtracts one <xref href=\"System.DateTimeOffset\"></xref> object from another and yields a time interval."}],"pos":[184168,184273],"yaml":true},{"content":"The <xref:System.DateTimeOffset.op_Subtraction%2A> method defines the subtraction operation for <xref:System.DateTimeOffset> objects. It enables code such as the following:  \n  \n [!code-csharp[System.DateTimeOffset.Operators#14](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.DateTimeOffset.Operators/cs/Operators.cs#14)]\n [!code-vb[System.DateTimeOffset.Operators#14](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.DateTimeOffset.Operators/vb/Operators.vb#14)]  \n  \n Languages that do not support custom operators and operator overloading can call the <xref:System.DateTimeOffset.Subtract%28System.DateTimeOffset%29?displayProperty=fullName> method instead.  \n  \n The equivalent method for this operator is <xref:System.DateTimeOffset.Subtract%28System.DateTimeOffset%2CSystem.DateTimeOffset%29?displayProperty=fullName>","nodes":[{"pos":[0,172],"content":"The <xref:System.DateTimeOffset.op_Subtraction%2A> method defines the subtraction operation for <xref:System.DateTimeOffset> objects. It enables code such as the following:","nodes":[{"content":"The <xref:System.DateTimeOffset.op_Subtraction%2A> method defines the subtraction operation for <xref:System.DateTimeOffset> objects. It enables code such as the following:","pos":[0,172],"nodes":[{"content":"The <ph id=\"ph1\">&lt;xref:System.DateTimeOffset.op_Subtraction%2A&gt;</ph> method defines the subtraction operation for <ph id=\"ph2\">&lt;xref:System.DateTimeOffset&gt;</ph> objects.","pos":[0,133],"source":"The <xref:System.DateTimeOffset.op_Subtraction%2A> method defines the subtraction operation for <xref:System.DateTimeOffset> objects."},{"content":"It enables code such as the following:","pos":[134,172]}]}]},{"pos":[179,484],"content":"<bpt id=\"p1\">[!code-csharp</bpt><bpt id=\"p2\">[</bpt>System.DateTimeOffset.Operators#14<ept id=\"p2\">](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.DateTimeOffset.Operators/cs/Operators.cs#14)</ept><ept id=\"p1\">]</ept> <bpt id=\"p3\">[!code-vb</bpt><bpt id=\"p4\">[</bpt>System.DateTimeOffset.Operators#14<ept id=\"p4\">](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.DateTimeOffset.Operators/vb/Operators.vb#14)</ept><ept id=\"p3\">]</ept>","source":"[!code-csharp[System.DateTimeOffset.Operators#14](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.DateTimeOffset.Operators/cs/Operators.cs#14)]\n [!code-vb[System.DateTimeOffset.Operators#14](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.DateTimeOffset.Operators/vb/Operators.vb#14)]"},{"pos":[491,681],"content":"Languages that do not support custom operators and operator overloading can call the <xref:System.DateTimeOffset.Subtract%28System.DateTimeOffset%29?displayProperty=fullName> method instead.","nodes":[{"content":"Languages that do not support custom operators and operator overloading can call the <ph id=\"ph1\">&lt;xref:System.DateTimeOffset.Subtract%28System.DateTimeOffset%29?displayProperty=fullName&gt;</ph> method instead.","pos":[0,190],"source":"Languages that do not support custom operators and operator overloading can call the <xref:System.DateTimeOffset.Subtract%28System.DateTimeOffset%29?displayProperty=fullName> method instead."}]},{"pos":[688,844],"content":"The equivalent method for this operator is <xref:System.DateTimeOffset.Subtract%28System.DateTimeOffset%2CSystem.DateTimeOffset%29?displayProperty=fullName>","nodes":[{"content":"The equivalent method for this operator is <ph id=\"ph1\">&lt;xref:System.DateTimeOffset.Subtract%28System.DateTimeOffset%2CSystem.DateTimeOffset%29?displayProperty=fullName&gt;</ph>","pos":[0,156],"source":"The equivalent method for this operator is <xref:System.DateTimeOffset.Subtract%28System.DateTimeOffset%2CSystem.DateTimeOffset%29?displayProperty=fullName>"}]}],"pos":[184284,185138],"yaml":true,"extradata":"MT"},{"content":"The minuend.","nodes":[{"pos":[0,12],"content":"The minuend.","nodes":[{"content":"The minuend.","pos":[0,12]}]}],"pos":[185328,185341],"yaml":true},{"content":"The subtrahend.","nodes":[{"pos":[0,15],"content":"The subtrahend.","nodes":[{"content":"The subtrahend.","pos":[0,15]}]}],"pos":[185410,185426],"yaml":true},{"content":"An object that represents the difference between <code>left</code> and <code>right</code>.","nodes":[{"pos":[0,90],"content":"An object that represents the difference between <bpt id=\"p1\">&lt;code&gt;</bpt><ph id=\"ph1\">left</ph><ept id=\"p1\">&lt;/code&gt;</ept> and <bpt id=\"p2\">&lt;code&gt;</bpt><ph id=\"ph2\">right</ph><ept id=\"p2\">&lt;/code&gt;</ept>.","source":"An object that represents the difference between <code>left</code> and <code>right</code>."}],"pos":[185485,185576],"yaml":true},{"content":"Subtracts a specified time interval from a specified date and time, and yields a new date and time.","nodes":[{"pos":[0,99],"content":"Subtracts a specified time interval from a specified date and time, and yields a new date and time.","nodes":[{"content":"Subtracts a specified time interval from a specified date and time, and yields a new date and time.","pos":[0,99]}]}],"pos":[187290,187390],"yaml":true},{"content":"The <xref:System.DateTimeOffset.op_Subtraction%2A> method defines the subtraction operation for <xref:System.DateTimeOffset> objects. It enables code such as the following:  \n  \n [!code-csharp[System.DateTimeOffset.Operators#15](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.DateTimeOffset.Operators/cs/Operators.cs#15)]\n [!code-vb[System.DateTimeOffset.Operators#15](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.DateTimeOffset.Operators/vb/Operators.vb#15)]  \n  \n Languages that do not support custom operators and operator overloading can call the <xref:System.DateTimeOffset.Subtract%28System.TimeSpan%29?displayProperty=fullName> method instead.  \n  \n The equivalent method for this operator is <xref:System.DateTimeOffset.Subtract%28System.DateTimeOffset%2CSystem.TimeSpan%29?displayProperty=fullName>","nodes":[{"pos":[0,172],"content":"The <xref:System.DateTimeOffset.op_Subtraction%2A> method defines the subtraction operation for <xref:System.DateTimeOffset> objects. It enables code such as the following:","nodes":[{"content":"The <xref:System.DateTimeOffset.op_Subtraction%2A> method defines the subtraction operation for <xref:System.DateTimeOffset> objects. It enables code such as the following:","pos":[0,172],"nodes":[{"content":"The <ph id=\"ph1\">&lt;xref:System.DateTimeOffset.op_Subtraction%2A&gt;</ph> method defines the subtraction operation for <ph id=\"ph2\">&lt;xref:System.DateTimeOffset&gt;</ph> objects.","pos":[0,133],"source":"The <xref:System.DateTimeOffset.op_Subtraction%2A> method defines the subtraction operation for <xref:System.DateTimeOffset> objects."},{"content":"It enables code such as the following:","pos":[134,172]}]}]},{"pos":[179,484],"content":"<bpt id=\"p1\">[!code-csharp</bpt><bpt id=\"p2\">[</bpt>System.DateTimeOffset.Operators#15<ept id=\"p2\">](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.DateTimeOffset.Operators/cs/Operators.cs#15)</ept><ept id=\"p1\">]</ept> <bpt id=\"p3\">[!code-vb</bpt><bpt id=\"p4\">[</bpt>System.DateTimeOffset.Operators#15<ept id=\"p4\">](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.DateTimeOffset.Operators/vb/Operators.vb#15)</ept><ept id=\"p3\">]</ept>","source":"[!code-csharp[System.DateTimeOffset.Operators#15](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.DateTimeOffset.Operators/cs/Operators.cs#15)]\n [!code-vb[System.DateTimeOffset.Operators#15](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.DateTimeOffset.Operators/vb/Operators.vb#15)]"},{"pos":[491,675],"content":"Languages that do not support custom operators and operator overloading can call the <xref:System.DateTimeOffset.Subtract%28System.TimeSpan%29?displayProperty=fullName> method instead.","nodes":[{"content":"Languages that do not support custom operators and operator overloading can call the <ph id=\"ph1\">&lt;xref:System.DateTimeOffset.Subtract%28System.TimeSpan%29?displayProperty=fullName&gt;</ph> method instead.","pos":[0,184],"source":"Languages that do not support custom operators and operator overloading can call the <xref:System.DateTimeOffset.Subtract%28System.TimeSpan%29?displayProperty=fullName> method instead."}]},{"pos":[682,832],"content":"The equivalent method for this operator is <xref:System.DateTimeOffset.Subtract%28System.DateTimeOffset%2CSystem.TimeSpan%29?displayProperty=fullName>","nodes":[{"content":"The equivalent method for this operator is <ph id=\"ph1\">&lt;xref:System.DateTimeOffset.Subtract%28System.DateTimeOffset%2CSystem.TimeSpan%29?displayProperty=fullName&gt;</ph>","pos":[0,150],"source":"The equivalent method for this operator is <xref:System.DateTimeOffset.Subtract%28System.DateTimeOffset%2CSystem.TimeSpan%29?displayProperty=fullName>"}]}],"pos":[187401,188243],"yaml":true,"extradata":"MT"},{"content":"The date and time object to subtract from.","nodes":[{"pos":[0,42],"content":"The date and time object to subtract from.","nodes":[{"content":"The date and time object to subtract from.","pos":[0,42]}]}],"pos":[188456,188499],"yaml":true},{"content":"The time interval to subtract.","nodes":[{"pos":[0,30],"content":"The time interval to subtract.","nodes":[{"content":"The time interval to subtract.","pos":[0,30]}]}],"pos":[188565,188596],"yaml":true},{"content":"An object that is equal to the value of <code>dateTimeOffset</code> minus <code>timeSpan</code>.","nodes":[{"pos":[0,96],"content":"An object that is equal to the value of <bpt id=\"p1\">&lt;code&gt;</bpt><ph id=\"ph1\">dateTimeOffset</ph><ept id=\"p1\">&lt;/code&gt;</ept> minus <bpt id=\"p2\">&lt;code&gt;</bpt><ph id=\"ph2\">timeSpan</ph><ept id=\"p2\">&lt;/code&gt;</ept>.","source":"An object that is equal to the value of <code>dateTimeOffset</code> minus <code>timeSpan</code>."}],"pos":[188661,188758],"yaml":true},{"content":"The resulting <xref href=\"System.DateTimeOffset\"></xref> value is less than <xref href=\"System.DateTimeOffset.MinValue\"></xref> or greater than <xref href=\"System.DateTimeOffset.MaxValue\"></xref>.","nodes":[{"pos":[0,196],"content":"The resulting <ph id=\"ph1\">&lt;xref href=\"System.DateTimeOffset\"&gt;&lt;/xref&gt;</ph> value is less than <ph id=\"ph2\">&lt;xref href=\"System.DateTimeOffset.MinValue\"&gt;&lt;/xref&gt;</ph> or greater than <ph id=\"ph3\">&lt;xref href=\"System.DateTimeOffset.MaxValue\"&gt;&lt;/xref&gt;</ph>.","source":"The resulting <xref href=\"System.DateTimeOffset\"></xref> value is less than <xref href=\"System.DateTimeOffset.MinValue\"></xref> or greater than <xref href=\"System.DateTimeOffset.MaxValue\"></xref>."}],"pos":[188936,189133],"yaml":true},{"content":"Converts the specified string representation of a date, time, and offset to its <xref href=\"System.DateTimeOffset\"></xref> equivalent.","nodes":[{"pos":[0,134],"content":"Converts the specified string representation of a date, time, and offset to its <ph id=\"ph1\">&lt;xref href=\"System.DateTimeOffset\"&gt;&lt;/xref&gt;</ph> equivalent.","source":"Converts the specified string representation of a date, time, and offset to its <xref href=\"System.DateTimeOffset\"></xref> equivalent."}],"pos":[190598,190733],"yaml":true},{"content":"<xref:System.DateTimeOffset.Parse%28System.String%29> parses a string with three elements that can appear in any order and are delimited by white space. These three elements are as shown in the following table.  \n  \n|Element|Example|  \n|-------------|-------------|  \n|\\<Date>|\"2/10/2007\"|  \n|\\<Time>|\"1:02:03 PM\"|  \n|\\<Offset>|\"-7:30\"|  \n  \n Although each of these elements is optional, \\<Offset> cannot appear by itself. It must be provided together with either \\<Date> or \\<Time>. If \\<Date> is missing, its default value is the current day. If \\<Time> is missing, its default value is 12:00:00 AM. If \\<Date> is present but its year component consists of only two digits, it is converted to a year in the current culture's current calendar based on the value of the <xref:System.Globalization.Calendar.TwoDigitYearMax%2A?displayProperty=fullName> property. If \\<Offset> is missing, its default value is the offset of the local time zone. \\<Offset> can represent either a negative or a positive offset from Coordinated Universal Time (UTC). In either case, \\<Offset> must include a sign symbol.  \n  \n The `input` string is parsed by using the formatting information in a <xref:System.Globalization.DateTimeFormatInfo> object that is initialized for the current culture. To parse a string that contains designated formatting that does not necessarily correspond to the formatting of the current culture, use the <xref:System.DateTimeOffset.ParseExact%2A> method and provide a format specifier.","nodes":[{"pos":[0,210],"content":"<xref:System.DateTimeOffset.Parse%28System.String%29> parses a string with three elements that can appear in any order and are delimited by white space. These three elements are as shown in the following table.","nodes":[{"content":"<xref:System.DateTimeOffset.Parse%28System.String%29> parses a string with three elements that can appear in any order and are delimited by white space. These three elements are as shown in the following table.","pos":[0,210],"nodes":[{"content":"<ph id=\"ph1\">&lt;xref:System.DateTimeOffset.Parse%28System.String%29&gt;</ph> parses a string with three elements that can appear in any order and are delimited by white space.","pos":[0,152],"source":"<xref:System.DateTimeOffset.Parse%28System.String%29> parses a string with three elements that can appear in any order and are delimited by white space."},{"content":"These three elements are as shown in the following table.","pos":[153,210]}]}]},{"pos":[217,224],"content":"Element","nodes":[{"content":"Element","pos":[0,7]}]},{"pos":[225,232],"content":"Example","nodes":[{"content":"Example","pos":[0,7]}]},{"pos":[269,276],"content":"\\<Date>","nodes":[{"content":"<ph id=\"ph1\">\\&lt;</ph>Date&gt;","pos":[0,7],"source":"\\<Date>"}]},{"pos":[277,288],"content":"\"2/10/2007\"","nodes":[{"content":"\"2/10/2007\"","pos":[0,11]}]},{"pos":[293,300],"content":"\\<Time>","nodes":[{"content":"<ph id=\"ph1\">\\&lt;</ph>Time&gt;","pos":[0,7],"source":"\\<Time>"}]},{"pos":[301,313],"content":"\"1:02:03 PM\"","nodes":[{"content":"\"1:02:03 PM\"","pos":[0,12]}]},{"pos":[318,327],"content":"\\<Offset>","nodes":[{"content":"<ph id=\"ph1\">\\&lt;</ph>Offset&gt;","pos":[0,9],"source":"\\<Offset>"}]},{"pos":[328,335],"content":"\"-7:30\"","nodes":[{"content":"\"-7:30\"","pos":[0,7]}]},{"pos":[343,1097],"content":"Although each of these elements is optional, \\<Offset> cannot appear by itself. It must be provided together with either \\<Date> or \\<Time>. If \\<Date> is missing, its default value is the current day. If \\<Time> is missing, its default value is 12:00:00 AM. If \\<Date> is present but its year component consists of only two digits, it is converted to a year in the current culture's current calendar based on the value of the <xref:System.Globalization.Calendar.TwoDigitYearMax%2A?displayProperty=fullName> property. If \\<Offset> is missing, its default value is the offset of the local time zone. \\<Offset> can represent either a negative or a positive offset from Coordinated Universal Time (UTC). In either case, \\<Offset> must include a sign symbol.","nodes":[{"content":"Although each of these elements is optional, \\<Offset> cannot appear by itself. It must be provided together with either \\<Date> or \\<Time>. If \\<Date> is missing, its default value is the current day. If \\<Time> is missing, its default value is 12:00:00 AM. If \\<Date> is present but its year component consists of only two digits, it is converted to a year in the current culture's current calendar based on the value of the <xref:System.Globalization.Calendar.TwoDigitYearMax%2A?displayProperty=fullName> property. If \\<Offset> is missing, its default value is the offset of the local time zone. \\<Offset> can represent either a negative or a positive offset from Coordinated Universal Time (UTC). In either case, \\<Offset> must include a sign symbol.","pos":[0,754],"nodes":[{"content":"Although each of these elements is optional, <ph id=\"ph1\">\\&lt;</ph>Offset&gt; cannot appear by itself.","pos":[0,79],"source":"Although each of these elements is optional, \\<Offset> cannot appear by itself."},{"content":"It must be provided together with either <ph id=\"ph1\">\\&lt;</ph>Date&gt; or <ph id=\"ph2\">\\&lt;</ph>Time&gt;.","pos":[80,140],"source":" It must be provided together with either \\<Date> or \\<Time>."},{"content":"If <ph id=\"ph1\">\\&lt;</ph>Date&gt; is missing, its default value is the current day.","pos":[141,201],"source":" If \\<Date> is missing, its default value is the current day."},{"content":"If <ph id=\"ph1\">\\&lt;</ph>Time&gt; is missing, its default value is 12:00:00 AM.","pos":[202,258],"source":" If \\<Time> is missing, its default value is 12:00:00 AM."},{"content":"If <ph id=\"ph1\">\\&lt;</ph>Date&gt; is present but its year component consists of only two digits, it is converted to a year in the current culture's current calendar based on the value of the <ph id=\"ph2\">&lt;xref:System.Globalization.Calendar.TwoDigitYearMax%2A?displayProperty=fullName&gt;</ph> property.","pos":[259,517],"source":" If \\<Date> is present but its year component consists of only two digits, it is converted to a year in the current culture's current calendar based on the value of the <xref:System.Globalization.Calendar.TwoDigitYearMax%2A?displayProperty=fullName> property."},{"content":"If <ph id=\"ph1\">\\&lt;</ph>Offset&gt; is missing, its default value is the offset of the local time zone.","pos":[518,598],"source":" If \\<Offset> is missing, its default value is the offset of the local time zone."},{"content":"<ph id=\"ph1\">\\&lt;</ph>Offset&gt; can represent either a negative or a positive offset from Coordinated Universal Time (UTC).","pos":[599,700],"source":" \\<Offset> can represent either a negative or a positive offset from Coordinated Universal Time (UTC)."},{"content":"In either case, <ph id=\"ph1\">\\&lt;</ph>Offset&gt; must include a sign symbol.","pos":[701,754],"source":" In either case, \\<Offset> must include a sign symbol."}]}]},{"pos":[1104,1495],"content":"The `input` string is parsed by using the formatting information in a <xref:System.Globalization.DateTimeFormatInfo> object that is initialized for the current culture. To parse a string that contains designated formatting that does not necessarily correspond to the formatting of the current culture, use the <xref:System.DateTimeOffset.ParseExact%2A> method and provide a format specifier.","nodes":[{"content":"The <ph id=\"ph1\">`input`</ph> string is parsed by using the formatting information in a <ph id=\"ph2\">&lt;xref:System.Globalization.DateTimeFormatInfo&gt;</ph> object that is initialized for the current culture.","pos":[0,168],"source":"The `input` string is parsed by using the formatting information in a <xref:System.Globalization.DateTimeFormatInfo> object that is initialized for the current culture."},{"content":"To parse a string that contains designated formatting that does not necessarily correspond to the formatting of the current culture, use the <ph id=\"ph1\">&lt;xref:System.DateTimeOffset.ParseExact%2A&gt;</ph> method and provide a format specifier.","pos":[169,391],"source":" To parse a string that contains designated formatting that does not necessarily correspond to the formatting of the current culture, use the <xref:System.DateTimeOffset.ParseExact%2A> method and provide a format specifier."}]}],"pos":[190744,192270],"yaml":true,"extradata":"MT"},{"content":"A string that contains a date and time to convert.","nodes":[{"pos":[0,50],"content":"A string that contains a date and time to convert.","nodes":[{"content":"A string that contains a date and time to convert.","pos":[0,50]}]}],"pos":[192959,193010],"yaml":true},{"content":"An object that is equivalent to the date and time that is contained in <code>input</code>.","nodes":[{"pos":[0,90],"content":"An object that is equivalent to the date and time that is contained in <bpt id=\"p1\">&lt;code&gt;</bpt><ph id=\"ph1\">input</ph><ept id=\"p1\">&lt;/code&gt;</ept>.","source":"An object that is equivalent to the date and time that is contained in <code>input</code>."}],"pos":[193075,193166],"yaml":true},{"content":"The offset is greater than 14 hours or less than -14 hours.","nodes":[{"pos":[0,59],"content":"The offset is greater than 14 hours or less than -14 hours.","nodes":[{"content":"The offset is greater than 14 hours or less than -14 hours.","pos":[0,59]}]}],"pos":[193315,193375],"yaml":true},{"content":"<code>input</code> is `null`.","nodes":[{"pos":[0,29],"content":"<ph id=\"ph1\">&lt;code&gt;input&lt;/code&gt;</ph> is <ph id=\"ph2\">`null`</ph>.","source":"<code>input</code> is `null`."}],"pos":[193477,193507],"yaml":true},{"content":"<code>input</code> does not contain a valid string representation of a date and time.  \n  \n -or-  \n  \n <code>input</code> contains the string representation of an offset value without a date or time.","nodes":[{"pos":[0,85],"content":"<ph id=\"ph1\">&lt;code&gt;input&lt;/code&gt;</ph> does not contain a valid string representation of a date and time.","source":"<code>input</code> does not contain a valid string representation of a date and time."},{"pos":[92,96],"content":"-or-","nodes":[{"content":"-or-","pos":[0,4]}]},{"pos":[103,199],"content":"<ph id=\"ph1\">&lt;code&gt;input&lt;/code&gt;</ph> contains the string representation of an offset value without a date or time.","source":"<code>input</code> contains the string representation of an offset value without a date or time."}],"pos":[193597,193803],"yaml":true},{"content":"Converts the specified string representation of a date and time to its <xref href=\"System.DateTimeOffset\"></xref> equivalent using the specified culture-specific format information.","nodes":[{"pos":[0,181],"content":"Converts the specified string representation of a date and time to its <ph id=\"ph1\">&lt;xref href=\"System.DateTimeOffset\"&gt;&lt;/xref&gt;</ph> equivalent using the specified culture-specific format information.","source":"Converts the specified string representation of a date and time to its <xref href=\"System.DateTimeOffset\"></xref> equivalent using the specified culture-specific format information."}],"pos":[195388,195570],"yaml":true},{"content":"This method parses a string with three elements that can appear in any order and are delimited by white space. These three elements are shown in the following table.  \n  \n|Element|Example|  \n|-------------|-------------|  \n|\\<Date>|\"2/10/2007\"|  \n|\\<Time>|\"1:02:03 PM\"|  \n|\\<Offset>|\"-7:30\"|  \n  \n Although each of these elements is optional, \\<Offset> cannot appear by itself. It must be provided together with either \\<Date> or \\<Time>. If \\<Date> is missing, its default value is the current day. If \\<Date> is present but its year component consists of only two digits, it is converted to a year in the `provider` parameter's current calendar based on the value of the <xref:System.Globalization.Calendar.TwoDigitYearMax%2A?displayProperty=fullName> property. If \\<Time> is missing, its default value is 12:00:00 AM. If \\<Offset> is missing, its default value is the offset of the local time zone. \\<Offset> can represent either a negative or a positive offset from Coordinated Universal Time (UTC). In either case, \\<Offset> must include a sign symbol.  \n  \n The format of these three elements is defined by the `formatProvider` parameter, which can be either of the following:  \n  \n-   A <xref:System.Globalization.CultureInfo> object that represents the culture whose formatting is used in the `input` parameter. The <xref:System.Globalization.DateTimeFormatInfo> object returned by the <xref:System.Globalization.CultureInfo.DateTimeFormat%2A?displayProperty=fullName> property defines the formatting used in `input`.  \n  \n-   A <xref:System.Globalization.DateTimeFormatInfo> object that defines the format of date and time data.  \n  \n If `formatprovider` is `null`, the <xref:System.Globalization.CultureInfo> object that corresponds to the current culture is used.  \n  \n The positive or negative sign used in \\<Offset> must be either + or -. It is not defined by the <xref:System.Globalization.NumberFormatInfo.PositiveSign%2A> or <xref:System.Globalization.NumberFormatInfo.NegativeSign%2A> properties of the <xref:System.Globalization.NumberFormatInfo> object of the `formatProvider` parameter.","nodes":[{"pos":[0,165],"content":"This method parses a string with three elements that can appear in any order and are delimited by white space. These three elements are shown in the following table.","nodes":[{"content":"This method parses a string with three elements that can appear in any order and are delimited by white space. These three elements are shown in the following table.","pos":[0,165],"nodes":[{"content":"This method parses a string with three elements that can appear in any order and are delimited by white space.","pos":[0,110]},{"content":"These three elements are shown in the following table.","pos":[111,165]}]}]},{"pos":[172,179],"content":"Element","nodes":[{"content":"Element","pos":[0,7]}]},{"pos":[180,187],"content":"Example","nodes":[{"content":"Example","pos":[0,7]}]},{"pos":[224,231],"content":"\\<Date>","nodes":[{"content":"<ph id=\"ph1\">\\&lt;</ph>Date&gt;","pos":[0,7],"source":"\\<Date>"}]},{"pos":[232,243],"content":"\"2/10/2007\"","nodes":[{"content":"\"2/10/2007\"","pos":[0,11]}]},{"pos":[248,255],"content":"\\<Time>","nodes":[{"content":"<ph id=\"ph1\">\\&lt;</ph>Time&gt;","pos":[0,7],"source":"\\<Time>"}]},{"pos":[256,268],"content":"\"1:02:03 PM\"","nodes":[{"content":"\"1:02:03 PM\"","pos":[0,12]}]},{"pos":[273,282],"content":"\\<Offset>","nodes":[{"content":"<ph id=\"ph1\">\\&lt;</ph>Offset&gt;","pos":[0,9],"source":"\\<Offset>"}]},{"pos":[283,290],"content":"\"-7:30\"","nodes":[{"content":"\"-7:30\"","pos":[0,7]}]},{"pos":[298,1057],"content":"Although each of these elements is optional, \\<Offset> cannot appear by itself. It must be provided together with either \\<Date> or \\<Time>. If \\<Date> is missing, its default value is the current day. If \\<Date> is present but its year component consists of only two digits, it is converted to a year in the `provider` parameter's current calendar based on the value of the <xref:System.Globalization.Calendar.TwoDigitYearMax%2A?displayProperty=fullName> property. If \\<Time> is missing, its default value is 12:00:00 AM. If \\<Offset> is missing, its default value is the offset of the local time zone. \\<Offset> can represent either a negative or a positive offset from Coordinated Universal Time (UTC). In either case, \\<Offset> must include a sign symbol.","nodes":[{"content":"Although each of these elements is optional, <ph id=\"ph1\">\\&lt;</ph>Offset&gt; cannot appear by itself.","pos":[0,79],"source":"Although each of these elements is optional, \\<Offset> cannot appear by itself."},{"content":"It must be provided together with either <ph id=\"ph1\">\\&lt;</ph>Date&gt; or <ph id=\"ph2\">\\&lt;</ph>Time&gt;.","pos":[80,140],"source":" It must be provided together with either \\<Date> or \\<Time>."},{"content":"If <ph id=\"ph1\">\\&lt;</ph>Date&gt; is missing, its default value is the current day.","pos":[141,201],"source":" If \\<Date> is missing, its default value is the current day."},{"content":"If <ph id=\"ph1\">\\&lt;</ph>Date&gt; is present but its year component consists of only two digits, it is converted to a year in the <ph id=\"ph2\">`provider`</ph> parameter's current calendar based on the value of the <ph id=\"ph3\">&lt;xref:System.Globalization.Calendar.TwoDigitYearMax%2A?displayProperty=fullName&gt;</ph> property.","pos":[202,465],"source":" If \\<Date> is present but its year component consists of only two digits, it is converted to a year in the `provider` parameter's current calendar based on the value of the <xref:System.Globalization.Calendar.TwoDigitYearMax%2A?displayProperty=fullName> property."},{"content":"If <ph id=\"ph1\">\\&lt;</ph>Time&gt; is missing, its default value is 12:00:00 AM.","pos":[466,522],"source":" If \\<Time> is missing, its default value is 12:00:00 AM."},{"content":"If <ph id=\"ph1\">\\&lt;</ph>Offset&gt; is missing, its default value is the offset of the local time zone.","pos":[523,603],"source":" If \\<Offset> is missing, its default value is the offset of the local time zone."},{"content":"<ph id=\"ph1\">\\&lt;</ph>Offset&gt; can represent either a negative or a positive offset from Coordinated Universal Time (UTC).","pos":[604,705],"source":" \\<Offset> can represent either a negative or a positive offset from Coordinated Universal Time (UTC)."},{"content":"In either case, <ph id=\"ph1\">\\&lt;</ph>Offset&gt; must include a sign symbol.","pos":[706,759],"source":" In either case, \\<Offset> must include a sign symbol."}]},{"pos":[1064,1182],"content":"The format of these three elements is defined by the <ph id=\"ph1\">`formatProvider`</ph> parameter, which can be either of the following:","source":"The format of these three elements is defined by the `formatProvider` parameter, which can be either of the following:"},{"pos":[1192,1525],"content":"A <xref:System.Globalization.CultureInfo> object that represents the culture whose formatting is used in the `input` parameter. The <xref:System.Globalization.DateTimeFormatInfo> object returned by the <xref:System.Globalization.CultureInfo.DateTimeFormat%2A?displayProperty=fullName> property defines the formatting used in `input`.","nodes":[{"content":"A <ph id=\"ph1\">&lt;xref:System.Globalization.CultureInfo&gt;</ph> object that represents the culture whose formatting is used in the <ph id=\"ph2\">`input`</ph> parameter.","pos":[0,127],"source":"A <xref:System.Globalization.CultureInfo> object that represents the culture whose formatting is used in the `input` parameter."},{"content":"The <ph id=\"ph1\">&lt;xref:System.Globalization.DateTimeFormatInfo&gt;</ph> object returned by the <ph id=\"ph2\">&lt;xref:System.Globalization.CultureInfo.DateTimeFormat%2A?displayProperty=fullName&gt;</ph> property defines the formatting used in <ph id=\"ph3\">`input`</ph>.","pos":[128,333],"source":" The <xref:System.Globalization.DateTimeFormatInfo> object returned by the <xref:System.Globalization.CultureInfo.DateTimeFormat%2A?displayProperty=fullName> property defines the formatting used in `input`."}]},{"pos":[1535,1637],"content":"A <xref:System.Globalization.DateTimeFormatInfo> object that defines the format of date and time data.","nodes":[{"content":"A <ph id=\"ph1\">&lt;xref:System.Globalization.DateTimeFormatInfo&gt;</ph> object that defines the format of date and time data.","pos":[0,102],"source":"A <xref:System.Globalization.DateTimeFormatInfo> object that defines the format of date and time data."}]},{"pos":[1644,1774],"content":"If <ph id=\"ph1\">`formatprovider`</ph> is <ph id=\"ph2\">`null`</ph>, the <ph id=\"ph3\">&lt;xref:System.Globalization.CultureInfo&gt;</ph> object that corresponds to the current culture is used.","source":"If `formatprovider` is `null`, the <xref:System.Globalization.CultureInfo> object that corresponds to the current culture is used."},{"pos":[1781,2106],"content":"The positive or negative sign used in \\<Offset> must be either + or -. It is not defined by the <xref:System.Globalization.NumberFormatInfo.PositiveSign%2A> or <xref:System.Globalization.NumberFormatInfo.NegativeSign%2A> properties of the <xref:System.Globalization.NumberFormatInfo> object of the `formatProvider` parameter.","nodes":[{"content":"The positive or negative sign used in <ph id=\"ph1\">\\&lt;</ph>Offset&gt; must be either + or -.","pos":[0,70],"source":"The positive or negative sign used in \\<Offset> must be either + or -."},{"content":"It is not defined by the <ph id=\"ph1\">&lt;xref:System.Globalization.NumberFormatInfo.PositiveSign%2A&gt;</ph> or <ph id=\"ph2\">&lt;xref:System.Globalization.NumberFormatInfo.NegativeSign%2A&gt;</ph> properties of the <ph id=\"ph3\">&lt;xref:System.Globalization.NumberFormatInfo&gt;</ph> object of the <ph id=\"ph4\">`formatProvider`</ph> parameter.","pos":[71,325],"source":" It is not defined by the <xref:System.Globalization.NumberFormatInfo.PositiveSign%2A> or <xref:System.Globalization.NumberFormatInfo.NegativeSign%2A> properties of the <xref:System.Globalization.NumberFormatInfo> object of the `formatProvider` parameter."}]}],"pos":[195581,197727],"yaml":true,"extradata":"MT"},{"content":"A string that contains a date and time to convert.","nodes":[{"pos":[0,50],"content":"A string that contains a date and time to convert.","nodes":[{"content":"A string that contains a date and time to convert.","pos":[0,50]}]}],"pos":[198388,198439],"yaml":true},{"content":"An object that provides culture-specific format information about <code>input</code>.","nodes":[{"pos":[0,85],"content":"An object that provides culture-specific format information about <bpt id=\"p1\">&lt;code&gt;</bpt><ph id=\"ph1\">input</ph><ept id=\"p1\">&lt;/code&gt;</ept>.","source":"An object that provides culture-specific format information about <code>input</code>."}],"pos":[198518,198604],"yaml":true},{"content":"An object that is equivalent to the date and time that is contained in <code>input</code>, as specified by <code>formatProvider</code>.","nodes":[{"pos":[0,135],"content":"An object that is equivalent to the date and time that is contained in <bpt id=\"p1\">&lt;code&gt;</bpt><ph id=\"ph1\">input</ph><ept id=\"p1\">&lt;/code&gt;</ept>, as specified by <bpt id=\"p2\">&lt;code&gt;</bpt><ph id=\"ph2\">formatProvider</ph><ept id=\"p2\">&lt;/code&gt;</ept>.","source":"An object that is equivalent to the date and time that is contained in <code>input</code>, as specified by <code>formatProvider</code>."}],"pos":[198669,198805],"yaml":true},{"content":"The offset is greater than 14 hours or less than -14 hours.","nodes":[{"pos":[0,59],"content":"The offset is greater than 14 hours or less than -14 hours.","nodes":[{"content":"The offset is greater than 14 hours or less than -14 hours.","pos":[0,59]}]}],"pos":[198954,199014],"yaml":true},{"content":"<code>input</code> is `null`.","nodes":[{"pos":[0,29],"content":"<ph id=\"ph1\">&lt;code&gt;input&lt;/code&gt;</ph> is <ph id=\"ph2\">`null`</ph>.","source":"<code>input</code> is `null`."}],"pos":[199116,199146],"yaml":true},{"content":"<code>input</code> does not contain a valid string representation of a date and time.  \n  \n -or-  \n  \n <code>input</code> contains the string representation of an offset value without a date or time.","nodes":[{"pos":[0,85],"content":"<ph id=\"ph1\">&lt;code&gt;input&lt;/code&gt;</ph> does not contain a valid string representation of a date and time.","source":"<code>input</code> does not contain a valid string representation of a date and time."},{"pos":[92,96],"content":"-or-","nodes":[{"content":"-or-","pos":[0,4]}]},{"pos":[103,199],"content":"<ph id=\"ph1\">&lt;code&gt;input&lt;/code&gt;</ph> contains the string representation of an offset value without a date or time.","source":"<code>input</code> contains the string representation of an offset value without a date or time."}],"pos":[199236,199442],"yaml":true},{"content":"Converts the specified string representation of a date and time to its <xref href=\"System.DateTimeOffset\"></xref> equivalent using the specified culture-specific format information and formatting style.","nodes":[{"pos":[0,202],"content":"Converts the specified string representation of a date and time to its <ph id=\"ph1\">&lt;xref href=\"System.DateTimeOffset\"&gt;&lt;/xref&gt;</ph> equivalent using the specified culture-specific format information and formatting style.","source":"Converts the specified string representation of a date and time to its <xref href=\"System.DateTimeOffset\"></xref> equivalent using the specified culture-specific format information and formatting style."}],"pos":[201183,201386],"yaml":true},{"content":"This method parses a string with three elements that can appear in any order and are delimited by white space. These three elements are shown in the following table.  \n  \n|Element|Example|  \n|-------------|-------------|  \n|\\<Date>|\"2/10/2007\"|  \n|\\<Time>|\"1:02:03 PM\"|  \n|\\<Offset>|\"-7:30\"|  \n  \n Although each of these elements is optional, \\<Offset> cannot appear by itself. It must be provided together with either \\<Date> or \\<Time>. If \\<Date> is missing, its default value is the current day. If \\<Date> is present but its year component consists of only two digits, it is converted to a year in the `provider` parameter's current calendar based on the value of the <xref:System.Globalization.Calendar.TwoDigitYearMax%2A?displayProperty=fullName> property. If \\<Time> is missing, its default value is 12:00:00 AM. If \\<Offset> is missing, its default value is the offset of the local time zone, or <xref:System.TimeSpan.Zero?displayProperty=fullName> if either the <xref:System.Globalization.DateTimeStyles?displayProperty=fullName> or <xref:System.Globalization.DateTimeStyles?displayProperty=fullName> value is specified in the `styles` parameter. If \\<Offset> is present, it can represent either a negative or a positive offset from Coordinated Universal Time (UTC). In either case, \\<Offset> must include a sign symbol.  \n  \n The format of these three elements is defined by the `formatProvider` parameter, which can be either of the following:  \n  \n-   A <xref:System.Globalization.CultureInfo> object that represents the culture whose formatting is used in the `input` parameter. The <xref:System.Globalization.DateTimeFormatInfo> object returned by the <xref:System.Globalization.CultureInfo.DateTimeFormat%2A?displayProperty=fullName> property defines the formatting used in `input`.  \n  \n-   A <xref:System.Globalization.DateTimeFormatInfo> object that defines the format of date and time data.  \n  \n Each element can also be enclosed by leading or trailing white space, and the \\<Date> and \\<Time> elements can include inner white space (such as 6:   00:00). Only the \\<Offset> component cannot include inner white space.  \n  \n If `formatprovider` is `null`, the <xref:System.Globalization.CultureInfo> object that corresponds to the current culture is used.  \n  \n The positive or negative sign used in \\<Offset> must be either + or -. It is not defined by the <xref:System.Globalization.NumberFormatInfo.PositiveSign%2A> or <xref:System.Globalization.NumberFormatInfo.NegativeSign%2A> properties of the <xref:System.Globalization.NumberFormatInfo> object returned by the `formatProvider` parameter.  \n  \n The following table shows the members of the <xref:System.Globalization.DateTimeStyles?displayProperty=fullName> enumeration that are supported.  \n  \n|DateTimeStyles member|Description|  \n|---------------------------|-----------------|  \n|<xref:System.Globalization.DateTimeStyles.AdjustToUniversal>|Parses the string represented by `input` and, if necessary, converts it to UTC. It is equivalent to parsing a string and then calling the <xref:System.DateTimeOffset.ToUniversalTime%2A?displayProperty=fullName> method of the returned <xref:System.DateTimeOffset> object.|  \n|<xref:System.Globalization.DateTimeStyles.AllowInnerWhite>|Although valid, this value is ignored. Inner white space is permitted in the \\<Date> and \\<Time> elements.|  \n|<xref:System.Globalization.DateTimeStyles.AllowLeadingWhite>|Although valid, this value is ignored. Leading white space is permitted in front of each component in the parsed string.|  \n|<xref:System.Globalization.DateTimeStyles.AllowTrailingWhite>|Although valid, this value is ignored. Trailing white space is permitted in front of each component in the parsed string.|  \n|<xref:System.Globalization.DateTimeStyles.AllowWhiteSpaces>|This is the default behavior. It cannot be overridden by supplying a more restrictive <xref:System.Globalization.DateTimeStyles> enumeration value, such as <xref:System.Globalization.DateTimeStyles?displayProperty=fullName>.|  \n|<xref:System.Globalization.DateTimeStyles.AssumeLocal>|Indicates that, if the `input` parameter lacks an \\<Offset> element, the offset of the local time zone should be provided. This is the default behavior of the <xref:System.DateTimeOffset.Parse%2A> method.|  \n|<xref:System.Globalization.DateTimeStyles.AssumeUniversal>|Indicates that, if the `input` parameter lacks an \\<Offset> element, the UTC offset (00:00) should be provided.|  \n|<xref:System.Globalization.DateTimeStyles.None>|Although valid, this value is ignored and has no effect.|  \n|<xref:System.Globalization.DateTimeStyles.RoundtripKind>|Because the <xref:System.DateTimeOffset> structure does not include a `Kind` property, this value has no effect.|  \n  \n Only the <xref:System.Globalization.DateTimeStyles?displayProperty=fullName> value is not supported. An <xref:System.ArgumentException> is thrown if this value is included in the `styles` parameter.","nodes":[{"pos":[0,165],"content":"This method parses a string with three elements that can appear in any order and are delimited by white space. These three elements are shown in the following table.","nodes":[{"content":"This method parses a string with three elements that can appear in any order and are delimited by white space. These three elements are shown in the following table.","pos":[0,165],"nodes":[{"content":"This method parses a string with three elements that can appear in any order and are delimited by white space.","pos":[0,110]},{"content":"These three elements are shown in the following table.","pos":[111,165]}]}]},{"pos":[172,179],"content":"Element","nodes":[{"content":"Element","pos":[0,7]}]},{"pos":[180,187],"content":"Example","nodes":[{"content":"Example","pos":[0,7]}]},{"pos":[224,231],"content":"\\<Date>","nodes":[{"content":"<ph id=\"ph1\">\\&lt;</ph>Date&gt;","pos":[0,7],"source":"\\<Date>"}]},{"pos":[232,243],"content":"\"2/10/2007\"","nodes":[{"content":"\"2/10/2007\"","pos":[0,11]}]},{"pos":[248,255],"content":"\\<Time>","nodes":[{"content":"<ph id=\"ph1\">\\&lt;</ph>Time&gt;","pos":[0,7],"source":"\\<Time>"}]},{"pos":[256,268],"content":"\"1:02:03 PM\"","nodes":[{"content":"\"1:02:03 PM\"","pos":[0,12]}]},{"pos":[273,282],"content":"\\<Offset>","nodes":[{"content":"<ph id=\"ph1\">\\&lt;</ph>Offset&gt;","pos":[0,9],"source":"\\<Offset>"}]},{"pos":[283,290],"content":"\"-7:30\"","nodes":[{"content":"\"-7:30\"","pos":[0,7]}]},{"pos":[298,1330],"content":"Although each of these elements is optional, \\<Offset> cannot appear by itself. It must be provided together with either \\<Date> or \\<Time>. If \\<Date> is missing, its default value is the current day. If \\<Date> is present but its year component consists of only two digits, it is converted to a year in the `provider` parameter's current calendar based on the value of the <xref:System.Globalization.Calendar.TwoDigitYearMax%2A?displayProperty=fullName> property. If \\<Time> is missing, its default value is 12:00:00 AM. If \\<Offset> is missing, its default value is the offset of the local time zone, or <xref:System.TimeSpan.Zero?displayProperty=fullName> if either the <xref:System.Globalization.DateTimeStyles?displayProperty=fullName> or <xref:System.Globalization.DateTimeStyles?displayProperty=fullName> value is specified in the `styles` parameter. If \\<Offset> is present, it can represent either a negative or a positive offset from Coordinated Universal Time (UTC). In either case, \\<Offset> must include a sign symbol.","nodes":[{"content":"Although each of these elements is optional, <ph id=\"ph1\">\\&lt;</ph>Offset&gt; cannot appear by itself.","pos":[0,79],"source":"Although each of these elements is optional, \\<Offset> cannot appear by itself."},{"content":"It must be provided together with either <ph id=\"ph1\">\\&lt;</ph>Date&gt; or <ph id=\"ph2\">\\&lt;</ph>Time&gt;.","pos":[80,140],"source":" It must be provided together with either \\<Date> or \\<Time>."},{"content":"If <ph id=\"ph1\">\\&lt;</ph>Date&gt; is missing, its default value is the current day.","pos":[141,201],"source":" If \\<Date> is missing, its default value is the current day."},{"content":"If <ph id=\"ph1\">\\&lt;</ph>Date&gt; is present but its year component consists of only two digits, it is converted to a year in the <ph id=\"ph2\">`provider`</ph> parameter's current calendar based on the value of the <ph id=\"ph3\">&lt;xref:System.Globalization.Calendar.TwoDigitYearMax%2A?displayProperty=fullName&gt;</ph> property.","pos":[202,465],"source":" If \\<Date> is present but its year component consists of only two digits, it is converted to a year in the `provider` parameter's current calendar based on the value of the <xref:System.Globalization.Calendar.TwoDigitYearMax%2A?displayProperty=fullName> property."},{"content":"If <ph id=\"ph1\">\\&lt;</ph>Time&gt; is missing, its default value is 12:00:00 AM.","pos":[466,522],"source":" If \\<Time> is missing, its default value is 12:00:00 AM."},{"content":"If <ph id=\"ph1\">\\&lt;</ph>Offset&gt; is missing, its default value is the offset of the local time zone, or <ph id=\"ph2\">&lt;xref:System.TimeSpan.Zero?displayProperty=fullName&gt;</ph> if either the <ph id=\"ph3\">&lt;xref:System.Globalization.DateTimeStyles?displayProperty=fullName&gt;</ph> or <ph id=\"ph4\">&lt;xref:System.Globalization.DateTimeStyles?displayProperty=fullName&gt;</ph> value is specified in the <ph id=\"ph5\">`styles`</ph> parameter.","pos":[523,858],"source":" If \\<Offset> is missing, its default value is the offset of the local time zone, or <xref:System.TimeSpan.Zero?displayProperty=fullName> if either the <xref:System.Globalization.DateTimeStyles?displayProperty=fullName> or <xref:System.Globalization.DateTimeStyles?displayProperty=fullName> value is specified in the `styles` parameter."},{"content":"If <ph id=\"ph1\">\\&lt;</ph>Offset&gt; is present, it can represent either a negative or a positive offset from Coordinated Universal Time (UTC).","pos":[859,978],"source":" If \\<Offset> is present, it can represent either a negative or a positive offset from Coordinated Universal Time (UTC)."},{"content":"In either case, <ph id=\"ph1\">\\&lt;</ph>Offset&gt; must include a sign symbol.","pos":[979,1032],"source":" In either case, \\<Offset> must include a sign symbol."}]},{"pos":[1337,1455],"content":"The format of these three elements is defined by the <ph id=\"ph1\">`formatProvider`</ph> parameter, which can be either of the following:","source":"The format of these three elements is defined by the `formatProvider` parameter, which can be either of the following:"},{"pos":[1465,1798],"content":"A <xref:System.Globalization.CultureInfo> object that represents the culture whose formatting is used in the `input` parameter. The <xref:System.Globalization.DateTimeFormatInfo> object returned by the <xref:System.Globalization.CultureInfo.DateTimeFormat%2A?displayProperty=fullName> property defines the formatting used in `input`.","nodes":[{"content":"A <ph id=\"ph1\">&lt;xref:System.Globalization.CultureInfo&gt;</ph> object that represents the culture whose formatting is used in the <ph id=\"ph2\">`input`</ph> parameter.","pos":[0,127],"source":"A <xref:System.Globalization.CultureInfo> object that represents the culture whose formatting is used in the `input` parameter."},{"content":"The <ph id=\"ph1\">&lt;xref:System.Globalization.DateTimeFormatInfo&gt;</ph> object returned by the <ph id=\"ph2\">&lt;xref:System.Globalization.CultureInfo.DateTimeFormat%2A?displayProperty=fullName&gt;</ph> property defines the formatting used in <ph id=\"ph3\">`input`</ph>.","pos":[128,333],"source":" The <xref:System.Globalization.DateTimeFormatInfo> object returned by the <xref:System.Globalization.CultureInfo.DateTimeFormat%2A?displayProperty=fullName> property defines the formatting used in `input`."}]},{"pos":[1808,1910],"content":"A <xref:System.Globalization.DateTimeFormatInfo> object that defines the format of date and time data.","nodes":[{"content":"A <ph id=\"ph1\">&lt;xref:System.Globalization.DateTimeFormatInfo&gt;</ph> object that defines the format of date and time data.","pos":[0,102],"source":"A <xref:System.Globalization.DateTimeFormatInfo> object that defines the format of date and time data."}]},{"pos":[1917,2138],"content":"Each element can also be enclosed by leading or trailing white space, and the \\<Date> and \\<Time> elements can include inner white space (such as 6:   00:00). Only the \\<Offset> component cannot include inner white space.","nodes":[{"content":"Each element can also be enclosed by leading or trailing white space, and the \\<Date> and \\<Time> elements can include inner white space (such as 6:   00:00). Only the \\<Offset> component cannot include inner white space.","pos":[0,221],"nodes":[{"content":"Each element can also be enclosed by leading or trailing white space, and the <ph id=\"ph1\">\\&lt;</ph>Date&gt; and <ph id=\"ph2\">\\&lt;</ph>Time&gt; elements can include inner white space (such as 6:   00:00).","pos":[0,158],"source":"Each element can also be enclosed by leading or trailing white space, and the \\<Date> and \\<Time> elements can include inner white space (such as 6:   00:00)."},{"content":"Only the <ph id=\"ph1\">\\&lt;</ph>Offset&gt; component cannot include inner white space.","pos":[159,221],"source":" Only the \\<Offset> component cannot include inner white space."}]}]},{"pos":[2145,2275],"content":"If <ph id=\"ph1\">`formatprovider`</ph> is <ph id=\"ph2\">`null`</ph>, the <ph id=\"ph3\">&lt;xref:System.Globalization.CultureInfo&gt;</ph> object that corresponds to the current culture is used.","source":"If `formatprovider` is `null`, the <xref:System.Globalization.CultureInfo> object that corresponds to the current culture is used."},{"pos":[2282,2616],"content":"The positive or negative sign used in \\<Offset> must be either + or -. It is not defined by the <xref:System.Globalization.NumberFormatInfo.PositiveSign%2A> or <xref:System.Globalization.NumberFormatInfo.NegativeSign%2A> properties of the <xref:System.Globalization.NumberFormatInfo> object returned by the `formatProvider` parameter.","nodes":[{"content":"The positive or negative sign used in <ph id=\"ph1\">\\&lt;</ph>Offset&gt; must be either + or -.","pos":[0,70],"source":"The positive or negative sign used in \\<Offset> must be either + or -."},{"content":"It is not defined by the <ph id=\"ph1\">&lt;xref:System.Globalization.NumberFormatInfo.PositiveSign%2A&gt;</ph> or <ph id=\"ph2\">&lt;xref:System.Globalization.NumberFormatInfo.NegativeSign%2A&gt;</ph> properties of the <ph id=\"ph3\">&lt;xref:System.Globalization.NumberFormatInfo&gt;</ph> object returned by the <ph id=\"ph4\">`formatProvider`</ph> parameter.","pos":[71,334],"source":" It is not defined by the <xref:System.Globalization.NumberFormatInfo.PositiveSign%2A> or <xref:System.Globalization.NumberFormatInfo.NegativeSign%2A> properties of the <xref:System.Globalization.NumberFormatInfo> object returned by the `formatProvider` parameter."}]},{"pos":[2623,2767],"content":"The following table shows the members of the <xref:System.Globalization.DateTimeStyles?displayProperty=fullName> enumeration that are supported.","nodes":[{"content":"The following table shows the members of the <ph id=\"ph1\">&lt;xref:System.Globalization.DateTimeStyles?displayProperty=fullName&gt;</ph> enumeration that are supported.","pos":[0,144],"source":"The following table shows the members of the <xref:System.Globalization.DateTimeStyles?displayProperty=fullName> enumeration that are supported."}]},{"pos":[2774,2795],"content":"DateTimeStyles member","nodes":[{"content":"DateTimeStyles member","pos":[0,21]}]},{"pos":[2796,2807],"content":"Description","nodes":[{"content":"Description","pos":[0,11]}]},{"pos":[2862,2922],"content":"<xref:System.Globalization.DateTimeStyles.AdjustToUniversal>","nodes":[]},{"pos":[2923,3193],"content":"Parses the string represented by `input` and, if necessary, converts it to UTC. It is equivalent to parsing a string and then calling the <xref:System.DateTimeOffset.ToUniversalTime%2A?displayProperty=fullName> method of the returned <xref:System.DateTimeOffset> object.","nodes":[{"content":"Parses the string represented by <ph id=\"ph1\">`input`</ph> and, if necessary, converts it to UTC.","pos":[0,79],"source":"Parses the string represented by `input` and, if necessary, converts it to UTC."},{"content":"It is equivalent to parsing a string and then calling the <ph id=\"ph1\">&lt;xref:System.DateTimeOffset.ToUniversalTime%2A?displayProperty=fullName&gt;</ph> method of the returned <ph id=\"ph2\">&lt;xref:System.DateTimeOffset&gt;</ph> object.","pos":[80,270],"source":" It is equivalent to parsing a string and then calling the <xref:System.DateTimeOffset.ToUniversalTime%2A?displayProperty=fullName> method of the returned <xref:System.DateTimeOffset> object."}]},{"pos":[3198,3256],"content":"<xref:System.Globalization.DateTimeStyles.AllowInnerWhite>","nodes":[]},{"pos":[3257,3363],"content":"Although valid, this value is ignored. Inner white space is permitted in the \\<Date> and \\<Time> elements.","nodes":[{"content":"Although valid, this value is ignored. Inner white space is permitted in the \\<Date> and \\<Time> elements.","pos":[0,106],"nodes":[{"content":"Although valid, this value is ignored.","pos":[0,38]},{"content":"Inner white space is permitted in the <ph id=\"ph1\">\\&lt;</ph>Date&gt; and <ph id=\"ph2\">\\&lt;</ph>Time&gt; elements.","pos":[39,106],"source":" Inner white space is permitted in the \\<Date> and \\<Time> elements."}]}]},{"pos":[3368,3428],"content":"<xref:System.Globalization.DateTimeStyles.AllowLeadingWhite>","nodes":[]},{"pos":[3429,3549],"content":"Although valid, this value is ignored. Leading white space is permitted in front of each component in the parsed string.","nodes":[{"content":"Although valid, this value is ignored. Leading white space is permitted in front of each component in the parsed string.","pos":[0,120],"nodes":[{"content":"Although valid, this value is ignored.","pos":[0,38]},{"content":"Leading white space is permitted in front of each component in the parsed string.","pos":[39,120]}]}]},{"pos":[3554,3615],"content":"<xref:System.Globalization.DateTimeStyles.AllowTrailingWhite>","nodes":[]},{"pos":[3616,3737],"content":"Although valid, this value is ignored. Trailing white space is permitted in front of each component in the parsed string.","nodes":[{"content":"Although valid, this value is ignored. Trailing white space is permitted in front of each component in the parsed string.","pos":[0,121],"nodes":[{"content":"Although valid, this value is ignored.","pos":[0,38]},{"content":"Trailing white space is permitted in front of each component in the parsed string.","pos":[39,121]}]}]},{"pos":[3742,3801],"content":"<xref:System.Globalization.DateTimeStyles.AllowWhiteSpaces>","nodes":[]},{"pos":[3802,4026],"content":"This is the default behavior. It cannot be overridden by supplying a more restrictive <xref:System.Globalization.DateTimeStyles> enumeration value, such as <xref:System.Globalization.DateTimeStyles?displayProperty=fullName>.","nodes":[{"content":"This is the default behavior. It cannot be overridden by supplying a more restrictive <xref:System.Globalization.DateTimeStyles> enumeration value, such as <xref:System.Globalization.DateTimeStyles?displayProperty=fullName>.","pos":[0,224],"nodes":[{"content":"This is the default behavior.","pos":[0,29]},{"content":"It cannot be overridden by supplying a more restrictive <ph id=\"ph1\">&lt;xref:System.Globalization.DateTimeStyles&gt;</ph> enumeration value, such as <ph id=\"ph2\">&lt;xref:System.Globalization.DateTimeStyles?displayProperty=fullName&gt;</ph>.","pos":[30,224],"source":" It cannot be overridden by supplying a more restrictive <xref:System.Globalization.DateTimeStyles> enumeration value, such as <xref:System.Globalization.DateTimeStyles?displayProperty=fullName>."}]}]},{"pos":[4031,4085],"content":"<xref:System.Globalization.DateTimeStyles.AssumeLocal>","nodes":[]},{"pos":[4086,4290],"content":"Indicates that, if the `input` parameter lacks an \\<Offset> element, the offset of the local time zone should be provided. This is the default behavior of the <xref:System.DateTimeOffset.Parse%2A> method.","nodes":[{"content":"Indicates that, if the <ph id=\"ph1\">`input`</ph> parameter lacks an <ph id=\"ph2\">\\&lt;</ph>Offset&gt; element, the offset of the local time zone should be provided.","pos":[0,122],"source":"Indicates that, if the `input` parameter lacks an \\<Offset> element, the offset of the local time zone should be provided."},{"content":"This is the default behavior of the <ph id=\"ph1\">&lt;xref:System.DateTimeOffset.Parse%2A&gt;</ph> method.","pos":[123,204],"source":" This is the default behavior of the <xref:System.DateTimeOffset.Parse%2A> method."}]},{"pos":[4295,4353],"content":"<xref:System.Globalization.DateTimeStyles.AssumeUniversal>","nodes":[]},{"pos":[4354,4465],"content":"Indicates that, if the <ph id=\"ph1\">`input`</ph> parameter lacks an <ph id=\"ph2\">\\&lt;</ph>Offset&gt; element, the UTC offset (00:00) should be provided.","source":"Indicates that, if the `input` parameter lacks an \\<Offset> element, the UTC offset (00:00) should be provided."},{"pos":[4470,4517],"content":"<xref:System.Globalization.DateTimeStyles.None>","nodes":[]},{"pos":[4518,4574],"content":"Although valid, this value is ignored and has no effect.","nodes":[{"content":"Although valid, this value is ignored and has no effect.","pos":[0,56]}]},{"pos":[4579,4635],"content":"<xref:System.Globalization.DateTimeStyles.RoundtripKind>","nodes":[]},{"pos":[4636,4748],"content":"Because the <ph id=\"ph1\">&lt;xref:System.DateTimeOffset&gt;</ph> structure does not include a <ph id=\"ph2\">`Kind`</ph> property, this value has no effect.","source":"Because the <xref:System.DateTimeOffset> structure does not include a `Kind` property, this value has no effect."},{"pos":[4756,4954],"content":"Only the <xref:System.Globalization.DateTimeStyles?displayProperty=fullName> value is not supported. An <xref:System.ArgumentException> is thrown if this value is included in the `styles` parameter.","nodes":[{"content":"Only the <ph id=\"ph1\">&lt;xref:System.Globalization.DateTimeStyles?displayProperty=fullName&gt;</ph> value is not supported.","pos":[0,100],"source":"Only the <xref:System.Globalization.DateTimeStyles?displayProperty=fullName> value is not supported."},{"content":"An <ph id=\"ph1\">&lt;xref:System.ArgumentException&gt;</ph> is thrown if this value is included in the <ph id=\"ph2\">`styles`</ph> parameter.","pos":[101,198],"source":" An <xref:System.ArgumentException> is thrown if this value is included in the `styles` parameter."}]}],"pos":[201397,206416],"yaml":true,"extradata":"MT"},{"content":"A string that contains a date and time to convert.","nodes":[{"pos":[0,50],"content":"A string that contains a date and time to convert.","nodes":[{"content":"A string that contains a date and time to convert.","pos":[0,50]}]}],"pos":[207398,207449],"yaml":true},{"content":"An object that provides culture-specific format information about <code>input</code>.","nodes":[{"pos":[0,85],"content":"An object that provides culture-specific format information about <bpt id=\"p1\">&lt;code&gt;</bpt><ph id=\"ph1\">input</ph><ept id=\"p1\">&lt;/code&gt;</ept>.","source":"An object that provides culture-specific format information about <code>input</code>."}],"pos":[207528,207614],"yaml":true},{"content":"A bitwise combination of enumeration values that indicates the permitted format of <code>input</code>. A typical value to specify is <xref href=\"System.Globalization.DateTimeStyles.None\"></xref>.","nodes":[{"pos":[0,195],"content":"A bitwise combination of enumeration values that indicates the permitted format of <code>input</code>. A typical value to specify is <xref href=\"System.Globalization.DateTimeStyles.None\"></xref>.","nodes":[{"content":"A bitwise combination of enumeration values that indicates the permitted format of <bpt id=\"p1\">&lt;code&gt;</bpt><ph id=\"ph1\">input</ph><ept id=\"p1\">&lt;/code&gt;</ept>.","pos":[0,102],"source":"A bitwise combination of enumeration values that indicates the permitted format of <code>input</code>."},{"content":"A typical value to specify is <ph id=\"ph1\">&lt;xref href=\"System.Globalization.DateTimeStyles.None\"&gt;&lt;/xref&gt;</ph>.","pos":[103,195],"source":" A typical value to specify is <xref href=\"System.Globalization.DateTimeStyles.None\"></xref>."}]}],"pos":[207698,207894],"yaml":true},{"content":"An object that is equivalent to the date and time that is contained in <code>input</code> as specified by <code>formatProvider</code> and <code>styles</code>.","nodes":[{"pos":[0,158],"content":"An object that is equivalent to the date and time that is contained in <bpt id=\"p1\">&lt;code&gt;</bpt><ph id=\"ph1\">input</ph><ept id=\"p1\">&lt;/code&gt;</ept> as specified by <bpt id=\"p2\">&lt;code&gt;</bpt><ph id=\"ph2\">formatProvider</ph><ept id=\"p2\">&lt;/code&gt;</ept> and <bpt id=\"p3\">&lt;code&gt;</bpt><ph id=\"ph3\">styles</ph><ept id=\"p3\">&lt;/code&gt;</ept>.","source":"An object that is equivalent to the date and time that is contained in <code>input</code> as specified by <code>formatProvider</code> and <code>styles</code>."}],"pos":[207959,208118],"yaml":true},{"content":"The offset is greater than 14 hours or less than -14 hours.  \n  \n -or-  \n  \n <code>styles</code> is not a valid <xref href=\"System.Globalization.DateTimeStyles\"></xref> value.  \n  \n -or-  \n  \n <code>styles</code> includes an unsupported <xref href=\"System.Globalization.DateTimeStyles\"></xref> value.  \n  \n -or-  \n  \n <code>styles</code> includes <xref href=\"System.Globalization.DateTimeStyles\"></xref> values that cannot be used together.","nodes":[{"pos":[0,59],"content":"The offset is greater than 14 hours or less than -14 hours.","nodes":[{"content":"The offset is greater than 14 hours or less than -14 hours.","pos":[0,59]}]},{"pos":[66,70],"content":"-or-","nodes":[{"content":"-or-","pos":[0,4]}]},{"pos":[77,175],"content":"<ph id=\"ph1\">&lt;code&gt;styles&lt;/code&gt;</ph> is not a valid <ph id=\"ph2\">&lt;xref href=\"System.Globalization.DateTimeStyles\"&gt;&lt;/xref&gt;</ph> value.","source":"<code>styles</code> is not a valid <xref href=\"System.Globalization.DateTimeStyles\"></xref> value."},{"pos":[182,186],"content":"-or-","nodes":[{"content":"-or-","pos":[0,4]}]},{"pos":[193,300],"content":"<ph id=\"ph1\">&lt;code&gt;styles&lt;/code&gt;</ph> includes an unsupported <ph id=\"ph2\">&lt;xref href=\"System.Globalization.DateTimeStyles\"&gt;&lt;/xref&gt;</ph> value.","source":"<code>styles</code> includes an unsupported <xref href=\"System.Globalization.DateTimeStyles\"></xref> value."},{"pos":[307,311],"content":"-or-","nodes":[{"content":"-or-","pos":[0,4]}]},{"pos":[318,440],"content":"<ph id=\"ph1\">&lt;code&gt;styles&lt;/code&gt;</ph> includes <ph id=\"ph2\">&lt;xref href=\"System.Globalization.DateTimeStyles\"&gt;&lt;/xref&gt;</ph> values that cannot be used together.","source":"<code>styles</code> includes <xref href=\"System.Globalization.DateTimeStyles\"></xref> values that cannot be used together."}],"pos":[208267,208728],"yaml":true},{"content":"<code>input</code> is `null`.","nodes":[{"pos":[0,29],"content":"<ph id=\"ph1\">&lt;code&gt;input&lt;/code&gt;</ph> is <ph id=\"ph2\">`null`</ph>.","source":"<code>input</code> is `null`."}],"pos":[208830,208860],"yaml":true},{"content":"<code>input</code> does not contain a valid string representation of a date and time.  \n  \n -or-  \n  \n <code>input</code> contains the string representation of an offset value without a date or time.","nodes":[{"pos":[0,85],"content":"<ph id=\"ph1\">&lt;code&gt;input&lt;/code&gt;</ph> does not contain a valid string representation of a date and time.","source":"<code>input</code> does not contain a valid string representation of a date and time."},{"pos":[92,96],"content":"-or-","nodes":[{"content":"-or-","pos":[0,4]}]},{"pos":[103,199],"content":"<ph id=\"ph1\">&lt;code&gt;input&lt;/code&gt;</ph> contains the string representation of an offset value without a date or time.","source":"<code>input</code> contains the string representation of an offset value without a date or time."}],"pos":[208950,209156],"yaml":true},{"content":"Converts the specified string representation of a date and time to its <xref href=\"System.DateTimeOffset\"></xref> equivalent using the specified format and culture-specific format information. The format of the string representation must match the specified format exactly.","nodes":[{"pos":[0,273],"content":"Converts the specified string representation of a date and time to its <xref href=\"System.DateTimeOffset\"></xref> equivalent using the specified format and culture-specific format information. The format of the string representation must match the specified format exactly.","nodes":[{"content":"Converts the specified string representation of a date and time to its <ph id=\"ph1\">&lt;xref href=\"System.DateTimeOffset\"&gt;&lt;/xref&gt;</ph> equivalent using the specified format and culture-specific format information.","pos":[0,192],"source":"Converts the specified string representation of a date and time to its <xref href=\"System.DateTimeOffset\"></xref> equivalent using the specified format and culture-specific format information."},{"content":"The format of the string representation must match the specified format exactly.","pos":[193,273]}]}],"pos":[210837,211111],"yaml":true},{"content":"The <xref:System.DateTimeOffset.ParseExact%28System.String%2CSystem.String%2CSystem.IFormatProvider%29> method parses the string representation of a date, which must be in the format defined by the `format` parameter. It also requires that the \\<Date>, \\<Time>, and \\<Offset> elements of the string representation of a date and time appear in the order specified by `format`. If the `input` string does not match this `format` parameter, the method throws a <xref:System.FormatException>.  In contrast, the <xref:System.DateTimeOffset.Parse%28System.String%2CSystem.IFormatProvider%29?displayProperty=fullName> method parses the string representation of a date in any one of the formats recognized by the format provider's <xref:System.Globalization.DateTimeFormatInfo> object. <xref:System.DateTimeOffset.Parse%2A> also allows the \\<Date>, \\<Time>, and \\<Offset> elements of the string representation of a date and time to appear in any order.  \n  \n The `format` parameter is a string that contains either a single standard format specifier or one or more custom format specifiers that define the required format of the `input` parameter. For details about valid formatting codes, see [Standard Date and Time Format Strings](~/docs/standard/base-types/standard-date-and-time-format-strings.md) and [Custom Date and Time Format Strings](~/docs/standard/base-types/custom-date-and-time-format-strings.md). If `format` includes the `z`, `zz`, or `zzz` custom format specifiers to indicate that an offset must be present in `input`, that offset must include either a negative sign or a positive sign. If the sign is missing, the method throws a <xref:System.FormatException>.  \n  \n If `format` requires that `input` contain a date but not a time, the resulting <xref:System.DateTimeOffset> object is assigned a time of midnight (0:00:00). If `format` requires that `input` contain a time but not a date, the resulting <xref:System.DateTimeOffset> object is assigned the current date on the local system. If `format` does not require that `input` contain an offset, the resulting <xref:System.DateTimeOffset> object is assigned the time zone offset of the local system.  \n  \n The particular date and time symbols and strings used in `input` are defined by the `formatProvider` parameter, as is the precise format of `input` if `format` is a standard format specifier string. The `formatProvider` parameter can be either of the following:  \n  \n-   A <xref:System.Globalization.CultureInfo> object that represents the culture based on which `input` is interpreted. The <xref:System.Globalization.DateTimeFormatInfo> object returned by its <xref:System.Globalization.CultureInfo.DateTimeFormat%2A> property defines the symbols and formatting in `input`.  \n  \n-   A <xref:System.Globalization.DateTimeFormatInfo> object that defines the format of date and time data.  \n  \n If `formatprovider` is `null`, the <xref:System.Globalization.CultureInfo> object that corresponds to the current culture is used.","nodes":[{"pos":[0,944],"content":"The <xref:System.DateTimeOffset.ParseExact%28System.String%2CSystem.String%2CSystem.IFormatProvider%29> method parses the string representation of a date, which must be in the format defined by the `format` parameter. It also requires that the \\<Date>, \\<Time>, and \\<Offset> elements of the string representation of a date and time appear in the order specified by `format`. If the `input` string does not match this `format` parameter, the method throws a <xref:System.FormatException>.  In contrast, the <xref:System.DateTimeOffset.Parse%28System.String%2CSystem.IFormatProvider%29?displayProperty=fullName> method parses the string representation of a date in any one of the formats recognized by the format provider's <xref:System.Globalization.DateTimeFormatInfo> object. <xref:System.DateTimeOffset.Parse%2A> also allows the \\<Date>, \\<Time>, and \\<Offset> elements of the string representation of a date and time to appear in any order.","nodes":[{"content":"The <ph id=\"ph1\">&lt;xref:System.DateTimeOffset.ParseExact%28System.String%2CSystem.String%2CSystem.IFormatProvider%29&gt;</ph> method parses the string representation of a date, which must be in the format defined by the <ph id=\"ph2\">`format`</ph> parameter.","pos":[0,217],"source":"The <xref:System.DateTimeOffset.ParseExact%28System.String%2CSystem.String%2CSystem.IFormatProvider%29> method parses the string representation of a date, which must be in the format defined by the `format` parameter."},{"content":"It also requires that the <ph id=\"ph1\">\\&lt;</ph>Date&gt;, <ph id=\"ph2\">\\&lt;</ph>Time&gt;, and <ph id=\"ph3\">\\&lt;</ph>Offset&gt; elements of the string representation of a date and time appear in the order specified by <ph id=\"ph4\">`format`</ph>.","pos":[218,375],"source":" It also requires that the \\<Date>, \\<Time>, and \\<Offset> elements of the string representation of a date and time appear in the order specified by `format`."},{"content":"If the <ph id=\"ph1\">`input`</ph> string does not match this <ph id=\"ph2\">`format`</ph> parameter, the method throws a <ph id=\"ph3\">&lt;xref:System.FormatException&gt;</ph>.","pos":[376,488],"source":" If the `input` string does not match this `format` parameter, the method throws a <xref:System.FormatException>."},{"content":"In contrast, the <ph id=\"ph1\">&lt;xref:System.DateTimeOffset.Parse%28System.String%2CSystem.IFormatProvider%29?displayProperty=fullName&gt;</ph> method parses the string representation of a date in any one of the formats recognized by the format provider's <ph id=\"ph2\">&lt;xref:System.Globalization.DateTimeFormatInfo&gt;</ph> object.","pos":[490,777],"source":"  In contrast, the <xref:System.DateTimeOffset.Parse%28System.String%2CSystem.IFormatProvider%29?displayProperty=fullName> method parses the string representation of a date in any one of the formats recognized by the format provider's <xref:System.Globalization.DateTimeFormatInfo> object."},{"content":"<ph id=\"ph1\">&lt;xref:System.DateTimeOffset.Parse%2A&gt;</ph> also allows the <ph id=\"ph2\">\\&lt;</ph>Date&gt;, <ph id=\"ph3\">\\&lt;</ph>Time&gt;, and <ph id=\"ph4\">\\&lt;</ph>Offset&gt; elements of the string representation of a date and time to appear in any order.","pos":[778,944],"source":" <xref:System.DateTimeOffset.Parse%2A> also allows the \\<Date>, \\<Time>, and \\<Offset> elements of the string representation of a date and time to appear in any order."}]},{"pos":[951,1672],"content":"The `format` parameter is a string that contains either a single standard format specifier or one or more custom format specifiers that define the required format of the `input` parameter. For details about valid formatting codes, see [Standard Date and Time Format Strings](~/docs/standard/base-types/standard-date-and-time-format-strings.md) and [Custom Date and Time Format Strings](~/docs/standard/base-types/custom-date-and-time-format-strings.md). If `format` includes the `z`, `zz`, or `zzz` custom format specifiers to indicate that an offset must be present in `input`, that offset must include either a negative sign or a positive sign. If the sign is missing, the method throws a <xref:System.FormatException>.","nodes":[{"content":"The <ph id=\"ph1\">`format`</ph> parameter is a string that contains either a single standard format specifier or one or more custom format specifiers that define the required format of the <ph id=\"ph2\">`input`</ph> parameter.","pos":[0,188],"source":"The `format` parameter is a string that contains either a single standard format specifier or one or more custom format specifiers that define the required format of the `input` parameter."},{"content":"For details about valid formatting codes, see <bpt id=\"p1\">[</bpt>Standard Date and Time Format Strings<ept id=\"p1\">](~/docs/standard/base-types/standard-date-and-time-format-strings.md)</ept> and <bpt id=\"p2\">[</bpt>Custom Date and Time Format Strings<ept id=\"p2\">](~/docs/standard/base-types/custom-date-and-time-format-strings.md)</ept>.","pos":[189,453],"source":" For details about valid formatting codes, see [Standard Date and Time Format Strings](~/docs/standard/base-types/standard-date-and-time-format-strings.md) and [Custom Date and Time Format Strings](~/docs/standard/base-types/custom-date-and-time-format-strings.md)."},{"content":"If <ph id=\"ph1\">`format`</ph> includes the <ph id=\"ph2\">`z`</ph>, <ph id=\"ph3\">`zz`</ph>, or <ph id=\"ph4\">`zzz`</ph> custom format specifiers to indicate that an offset must be present in <ph id=\"ph5\">`input`</ph>, that offset must include either a negative sign or a positive sign.","pos":[454,646],"source":" If `format` includes the `z`, `zz`, or `zzz` custom format specifiers to indicate that an offset must be present in `input`, that offset must include either a negative sign or a positive sign."},{"content":"If the sign is missing, the method throws a <ph id=\"ph1\">&lt;xref:System.FormatException&gt;</ph>.","pos":[647,721],"source":" If the sign is missing, the method throws a <xref:System.FormatException>."}]},{"pos":[1679,2165],"content":"If `format` requires that `input` contain a date but not a time, the resulting <xref:System.DateTimeOffset> object is assigned a time of midnight (0:00:00). If `format` requires that `input` contain a time but not a date, the resulting <xref:System.DateTimeOffset> object is assigned the current date on the local system. If `format` does not require that `input` contain an offset, the resulting <xref:System.DateTimeOffset> object is assigned the time zone offset of the local system.","nodes":[{"content":"If <ph id=\"ph1\">`format`</ph> requires that <ph id=\"ph2\">`input`</ph> contain a date but not a time, the resulting <ph id=\"ph3\">&lt;xref:System.DateTimeOffset&gt;</ph> object is assigned a time of midnight (0:00:00).","pos":[0,156],"source":"If `format` requires that `input` contain a date but not a time, the resulting <xref:System.DateTimeOffset> object is assigned a time of midnight (0:00:00)."},{"content":"If <ph id=\"ph1\">`format`</ph> requires that <ph id=\"ph2\">`input`</ph> contain a time but not a date, the resulting <ph id=\"ph3\">&lt;xref:System.DateTimeOffset&gt;</ph> object is assigned the current date on the local system.","pos":[157,321],"source":" If `format` requires that `input` contain a time but not a date, the resulting <xref:System.DateTimeOffset> object is assigned the current date on the local system."},{"content":"If <ph id=\"ph1\">`format`</ph> does not require that <ph id=\"ph2\">`input`</ph> contain an offset, the resulting <ph id=\"ph3\">&lt;xref:System.DateTimeOffset&gt;</ph> object is assigned the time zone offset of the local system.","pos":[322,486],"source":" If `format` does not require that `input` contain an offset, the resulting <xref:System.DateTimeOffset> object is assigned the time zone offset of the local system."}]},{"pos":[2172,2433],"content":"The particular date and time symbols and strings used in `input` are defined by the `formatProvider` parameter, as is the precise format of `input` if `format` is a standard format specifier string. The `formatProvider` parameter can be either of the following:","nodes":[{"content":"The particular date and time symbols and strings used in <ph id=\"ph1\">`input`</ph> are defined by the <ph id=\"ph2\">`formatProvider`</ph> parameter, as is the precise format of <ph id=\"ph3\">`input`</ph> if <ph id=\"ph4\">`format`</ph> is a standard format specifier string.","pos":[0,198],"source":"The particular date and time symbols and strings used in `input` are defined by the `formatProvider` parameter, as is the precise format of `input` if `format` is a standard format specifier string."},{"content":"The <ph id=\"ph1\">`formatProvider`</ph> parameter can be either of the following:","pos":[199,261],"source":" The `formatProvider` parameter can be either of the following:"}]},{"pos":[2443,2746],"content":"A <xref:System.Globalization.CultureInfo> object that represents the culture based on which `input` is interpreted. The <xref:System.Globalization.DateTimeFormatInfo> object returned by its <xref:System.Globalization.CultureInfo.DateTimeFormat%2A> property defines the symbols and formatting in `input`.","nodes":[{"content":"A <ph id=\"ph1\">&lt;xref:System.Globalization.CultureInfo&gt;</ph> object that represents the culture based on which <ph id=\"ph2\">`input`</ph> is interpreted.","pos":[0,115],"source":"A <xref:System.Globalization.CultureInfo> object that represents the culture based on which `input` is interpreted."},{"content":"The <ph id=\"ph1\">&lt;xref:System.Globalization.DateTimeFormatInfo&gt;</ph> object returned by its <ph id=\"ph2\">&lt;xref:System.Globalization.CultureInfo.DateTimeFormat%2A&gt;</ph> property defines the symbols and formatting in <ph id=\"ph3\">`input`</ph>.","pos":[116,303],"source":" The <xref:System.Globalization.DateTimeFormatInfo> object returned by its <xref:System.Globalization.CultureInfo.DateTimeFormat%2A> property defines the symbols and formatting in `input`."}]},{"pos":[2756,2858],"content":"A <xref:System.Globalization.DateTimeFormatInfo> object that defines the format of date and time data.","nodes":[{"content":"A <ph id=\"ph1\">&lt;xref:System.Globalization.DateTimeFormatInfo&gt;</ph> object that defines the format of date and time data.","pos":[0,102],"source":"A <xref:System.Globalization.DateTimeFormatInfo> object that defines the format of date and time data."}]},{"pos":[2865,2995],"content":"If <ph id=\"ph1\">`formatprovider`</ph> is <ph id=\"ph2\">`null`</ph>, the <ph id=\"ph3\">&lt;xref:System.Globalization.CultureInfo&gt;</ph> object that corresponds to the current culture is used.","source":"If `formatprovider` is `null`, the <xref:System.Globalization.CultureInfo> object that corresponds to the current culture is used."}],"pos":[211122,214138],"yaml":true,"extradata":"MT"},{"content":"A string that contains a date and time to convert.","nodes":[{"pos":[0,50],"content":"A string that contains a date and time to convert.","nodes":[{"content":"A string that contains a date and time to convert.","pos":[0,50]}]}],"pos":[214947,214998],"yaml":true},{"content":"A format specifier that defines the expected format of <code>input</code>.","nodes":[{"pos":[0,74],"content":"A format specifier that defines the expected format of <bpt id=\"p1\">&lt;code&gt;</bpt><ph id=\"ph1\">input</ph><ept id=\"p1\">&lt;/code&gt;</ept>.","source":"A format specifier that defines the expected format of <code>input</code>."}],"pos":[215060,215135],"yaml":true},{"content":"An object that supplies culture-specific formatting information about <code>input</code>.","nodes":[{"pos":[0,89],"content":"An object that supplies culture-specific formatting information about <bpt id=\"p1\">&lt;code&gt;</bpt><ph id=\"ph1\">input</ph><ept id=\"p1\">&lt;/code&gt;</ept>.","source":"An object that supplies culture-specific formatting information about <code>input</code>."}],"pos":[215214,215304],"yaml":true},{"content":"An object that is equivalent to the date and time that is contained in <code>input</code> as specified by <code>format</code> and <code>formatProvider</code>.","nodes":[{"pos":[0,158],"content":"An object that is equivalent to the date and time that is contained in <bpt id=\"p1\">&lt;code&gt;</bpt><ph id=\"ph1\">input</ph><ept id=\"p1\">&lt;/code&gt;</ept> as specified by <bpt id=\"p2\">&lt;code&gt;</bpt><ph id=\"ph2\">format</ph><ept id=\"p2\">&lt;/code&gt;</ept> and <bpt id=\"p3\">&lt;code&gt;</bpt><ph id=\"ph3\">formatProvider</ph><ept id=\"p3\">&lt;/code&gt;</ept>.","source":"An object that is equivalent to the date and time that is contained in <code>input</code> as specified by <code>format</code> and <code>formatProvider</code>."}],"pos":[215369,215528],"yaml":true},{"content":"The offset is greater than 14 hours or less than -14 hours.","nodes":[{"pos":[0,59],"content":"The offset is greater than 14 hours or less than -14 hours.","nodes":[{"content":"The offset is greater than 14 hours or less than -14 hours.","pos":[0,59]}]}],"pos":[215682,215742],"yaml":true},{"content":"<code>input</code> is `null`.  \n  \n -or-  \n  \n <code>format</code> is `null`.","nodes":[{"pos":[0,29],"content":"<ph id=\"ph1\">&lt;code&gt;input&lt;/code&gt;</ph> is <ph id=\"ph2\">`null`</ph>.","source":"<code>input</code> is `null`."},{"pos":[36,40],"content":"-or-","nodes":[{"content":"-or-","pos":[0,4]}]},{"pos":[47,77],"content":"<ph id=\"ph1\">&lt;code&gt;format&lt;/code&gt;</ph> is <ph id=\"ph2\">`null`</ph>.","source":"<code>format</code> is `null`."}],"pos":[215844,215928],"yaml":true},{"content":"<code>input</code> is an empty string (\"\").  \n  \n -or-  \n  \n <code>input</code> does not contain a valid string representation of a date and time.  \n  \n -or-  \n  \n <code>format</code> is an empty string.  \n  \n -or-  \n  \n The hour component and the AM/PM designator in <code>input</code> do not agree.","nodes":[{"pos":[0,43],"content":"<ph id=\"ph1\">&lt;code&gt;input&lt;/code&gt;</ph> is an empty string (\"\").","source":"<code>input</code> is an empty string (\"\")."},{"pos":[50,54],"content":"-or-","nodes":[{"content":"-or-","pos":[0,4]}]},{"pos":[61,146],"content":"<ph id=\"ph1\">&lt;code&gt;input&lt;/code&gt;</ph> does not contain a valid string representation of a date and time.","source":"<code>input</code> does not contain a valid string representation of a date and time."},{"pos":[153,157],"content":"-or-","nodes":[{"content":"-or-","pos":[0,4]}]},{"pos":[164,203],"content":"<ph id=\"ph1\">&lt;code&gt;format&lt;/code&gt;</ph> is an empty string.","source":"<code>format</code> is an empty string."},{"pos":[210,214],"content":"-or-","nodes":[{"content":"-or-","pos":[0,4]}]},{"pos":[221,300],"content":"The hour component and the AM/PM designator in <bpt id=\"p1\">&lt;code&gt;</bpt><ph id=\"ph1\">input</ph><ept id=\"p1\">&lt;/code&gt;</ept> do not agree.","source":"The hour component and the AM/PM designator in <code>input</code> do not agree."}],"pos":[216018,216335],"yaml":true},{"content":"Converts the specified string representation of a date and time to its <xref href=\"System.DateTimeOffset\"></xref> equivalent using the specified format, culture-specific format information, and style. The format of the string representation must match the specified format exactly.","nodes":[{"pos":[0,281],"content":"Converts the specified string representation of a date and time to its <xref href=\"System.DateTimeOffset\"></xref> equivalent using the specified format, culture-specific format information, and style. The format of the string representation must match the specified format exactly.","nodes":[{"content":"Converts the specified string representation of a date and time to its <ph id=\"ph1\">&lt;xref href=\"System.DateTimeOffset\"&gt;&lt;/xref&gt;</ph> equivalent using the specified format, culture-specific format information, and style.","pos":[0,200],"source":"Converts the specified string representation of a date and time to its <xref href=\"System.DateTimeOffset\"></xref> equivalent using the specified format, culture-specific format information, and style."},{"content":"The format of the string representation must match the specified format exactly.","pos":[201,281]}]}],"pos":[218172,218454],"yaml":true},{"content":"The <xref:System.DateTimeOffset.ParseExact%28System.String%2CSystem.String%2CSystem.IFormatProvider%2CSystem.Globalization.DateTimeStyles%29?displayProperty=fullName> method parses the string representation of a date, which must be in the format defined by the `format` parameter. It also requires that the \\<Date>, \\<Time>, and \\<Offset> elements of the string representation of a date and time appear in the order specified by `format`. If the `input` string does not match the pattern of the `format` parameter, with any variations defined by the `styles` parameter, the method throws a <xref:System.FormatException>.  In contrast, the <xref:System.DateTimeOffset.Parse%28System.String%2CSystem.IFormatProvider%2CSystem.Globalization.DateTimeStyles%29?displayProperty=fullName> method parses the string representation of a date in any one of the formats recognized by the format provider's <xref:System.Globalization.DateTimeFormatInfo> object. <xref:System.DateTimeOffset.Parse%2A> also allows the \\<Date>, \\<Time>, and \\<Offset> elements of the string representation of a date and time to appear in any order.  \n  \n The `format` parameter is a string that contains either a single standard format specifier or one or more custom format specifiers that define the required pattern of the `input` parameter. For details about valid formatting codes, see [Standard Date and Time Format Strings](~/docs/standard/base-types/standard-date-and-time-format-strings.md) and [Custom Date and Time Format Strings](~/docs/standard/base-types/custom-date-and-time-format-strings.md). If `format` includes the `z`, `zz`, or `zzz` custom format specifiers to indicate that an offset must be present in `input`, that offset must include either a negative sign or a positive sign. If the sign is missing, the method throws a <xref:System.FormatException>.  \n  \n If `format` requires that `input` contain a date but not a time, the resulting <xref:System.DateTimeOffset> object is assigned a time of midnight (0:00:00). If `format` requires that `input` contain a time but not a date, the resulting <xref:System.DateTimeOffset> object is assigned the current date on the local system. If `format` does not require that `input` contain an offset, the offset of the resulting <xref:System.DateTimeOffset> object depends on the value of the `styles` parameter. If `styles` includes <xref:System.Globalization.DateTimeStyles.AssumeLocal>, the offset of the local time zone is assigned to the <xref:System.DateTimeOffset> object. If `styles` includes <xref:System.Globalization.DateTimeStyles.AssumeUniversal>, the Coordinated Universal Time (UTC) offset, or +00:00, is assigned to the <xref:System.DateTimeOffset> object. If neither value is specified, the offset of the local time zone is used.  \n  \n The particular date and time symbols and strings used in `input` are defined by the `formatProvider` parameter. The same is true for the precise format of `input`, if `format` is a standard format specifier string. The `formatProvider` parameter can be either of the following:  \n  \n-   A <xref:System.Globalization.CultureInfo> object that represents the culture based on which `input` is interpreted. The <xref:System.Globalization.DateTimeFormatInfo> object returned by the <xref:System.Globalization.CultureInfo.DateTimeFormat%2A?displayProperty=fullName> property defines the symbols and formatting in `input`.  \n  \n-   A <xref:System.Globalization.DateTimeFormatInfo> object that defines the format of date and time data.  \n  \n If `formatprovider` is `null`, the <xref:System.Globalization.CultureInfo> object that corresponds to the current culture is used.  \n  \n The `styles` parameter defines whether white space is allowed in the input string, indicates how strings without an explicit offset component are parsed, and supports UTC conversion as part of the parsing operation. All members of the <xref:System.Globalization.DateTimeStyles> enumeration are supported except <xref:System.Globalization.DateTimeStyles.NoCurrentDateDefault>. The following table lists the effect of each supported member.  \n  \n|`DateTimeStyles` member|Behavior|  \n|-----------------------------|--------------|  \n|<xref:System.Globalization.DateTimeStyles.AdjustToUniversal>|Parses `input` and, if necessary, converts it to UTC. It is equivalent to parsing a string, and then calling the <xref:System.DateTimeOffset.ToUniversalTime%2A?displayProperty=fullName> method of the returned <xref:System.DateTimeOffset> object.|  \n|<xref:System.Globalization.DateTimeStyles.AssumeLocal>|If `format` does not require that `input` contain an offset value, the returned <xref:System.DateTimeOffset> object is given the offset of the local time zone. This is the default value.|  \n|<xref:System.Globalization.DateTimeStyles.AssumeUniversal>|If `format` does not require that `input` contain an offset value, the returned <xref:System.DateTimeOffset> object is given the UTC offset (+00:00).|  \n|<xref:System.Globalization.DateTimeStyles.AllowInnerWhite>|Allows `input` to include inner white space not specified by `format`. Extra white space can appear between date and time components and within individual components, and is ignored when parsing the string.|  \n|<xref:System.Globalization.DateTimeStyles.AllowLeadingWhite>|Allows `input` to include leading spaces not specified by `format`. These are ignored when parsing the string.|  \n|<xref:System.Globalization.DateTimeStyles.AllowTrailingWhite>|Allows `input` to include trailing spaces not specified by `format`. These are ignored when parsing the string.|  \n|<xref:System.Globalization.DateTimeStyles.AllowWhiteSpaces>|Allows `input` to include leading, trailing, and inner spaces not specified by `format`. All extra white-space characters not specified in `format` are ignored when parsing the string.|  \n|<xref:System.Globalization.DateTimeStyles.None>|Indicates that additional white space is not permitted in `input`. White space must appear exactly as specified in `format`. This is the default behavior.|  \n|<xref:System.Globalization.DateTimeStyles.RoundtripKind>|Has no effect because the <xref:System.DateTimeOffset> structure does not include a `Kind` property.|","nodes":[{"pos":[0,1114],"content":"The <xref:System.DateTimeOffset.ParseExact%28System.String%2CSystem.String%2CSystem.IFormatProvider%2CSystem.Globalization.DateTimeStyles%29?displayProperty=fullName> method parses the string representation of a date, which must be in the format defined by the `format` parameter. It also requires that the \\<Date>, \\<Time>, and \\<Offset> elements of the string representation of a date and time appear in the order specified by `format`. If the `input` string does not match the pattern of the `format` parameter, with any variations defined by the `styles` parameter, the method throws a <xref:System.FormatException>.  In contrast, the <xref:System.DateTimeOffset.Parse%28System.String%2CSystem.IFormatProvider%2CSystem.Globalization.DateTimeStyles%29?displayProperty=fullName> method parses the string representation of a date in any one of the formats recognized by the format provider's <xref:System.Globalization.DateTimeFormatInfo> object. <xref:System.DateTimeOffset.Parse%2A> also allows the \\<Date>, \\<Time>, and \\<Offset> elements of the string representation of a date and time to appear in any order.","nodes":[{"content":"The <ph id=\"ph1\">&lt;xref:System.DateTimeOffset.ParseExact%28System.String%2CSystem.String%2CSystem.IFormatProvider%2CSystem.Globalization.DateTimeStyles%29?displayProperty=fullName&gt;</ph> method parses the string representation of a date, which must be in the format defined by the <ph id=\"ph2\">`format`</ph> parameter.","pos":[0,280],"source":"The <xref:System.DateTimeOffset.ParseExact%28System.String%2CSystem.String%2CSystem.IFormatProvider%2CSystem.Globalization.DateTimeStyles%29?displayProperty=fullName> method parses the string representation of a date, which must be in the format defined by the `format` parameter."},{"content":"It also requires that the <ph id=\"ph1\">\\&lt;</ph>Date&gt;, <ph id=\"ph2\">\\&lt;</ph>Time&gt;, and <ph id=\"ph3\">\\&lt;</ph>Offset&gt; elements of the string representation of a date and time appear in the order specified by <ph id=\"ph4\">`format`</ph>.","pos":[281,438],"source":" It also requires that the \\<Date>, \\<Time>, and \\<Offset> elements of the string representation of a date and time appear in the order specified by `format`."},{"content":"If the <ph id=\"ph1\">`input`</ph> string does not match the pattern of the <ph id=\"ph2\">`format`</ph> parameter, with any variations defined by the <ph id=\"ph3\">`styles`</ph> parameter, the method throws a <ph id=\"ph4\">&lt;xref:System.FormatException&gt;</ph>.","pos":[439,620],"source":" If the `input` string does not match the pattern of the `format` parameter, with any variations defined by the `styles` parameter, the method throws a <xref:System.FormatException>."},{"content":"In contrast, the <ph id=\"ph1\">&lt;xref:System.DateTimeOffset.Parse%28System.String%2CSystem.IFormatProvider%2CSystem.Globalization.DateTimeStyles%29?displayProperty=fullName&gt;</ph> method parses the string representation of a date in any one of the formats recognized by the format provider's <ph id=\"ph2\">&lt;xref:System.Globalization.DateTimeFormatInfo&gt;</ph> object.","pos":[622,947],"source":"  In contrast, the <xref:System.DateTimeOffset.Parse%28System.String%2CSystem.IFormatProvider%2CSystem.Globalization.DateTimeStyles%29?displayProperty=fullName> method parses the string representation of a date in any one of the formats recognized by the format provider's <xref:System.Globalization.DateTimeFormatInfo> object."},{"content":"<ph id=\"ph1\">&lt;xref:System.DateTimeOffset.Parse%2A&gt;</ph> also allows the <ph id=\"ph2\">\\&lt;</ph>Date&gt;, <ph id=\"ph3\">\\&lt;</ph>Time&gt;, and <ph id=\"ph4\">\\&lt;</ph>Offset&gt; elements of the string representation of a date and time to appear in any order.","pos":[948,1114],"source":" <xref:System.DateTimeOffset.Parse%2A> also allows the \\<Date>, \\<Time>, and \\<Offset> elements of the string representation of a date and time to appear in any order."}]},{"pos":[1121,1843],"content":"The `format` parameter is a string that contains either a single standard format specifier or one or more custom format specifiers that define the required pattern of the `input` parameter. For details about valid formatting codes, see [Standard Date and Time Format Strings](~/docs/standard/base-types/standard-date-and-time-format-strings.md) and [Custom Date and Time Format Strings](~/docs/standard/base-types/custom-date-and-time-format-strings.md). If `format` includes the `z`, `zz`, or `zzz` custom format specifiers to indicate that an offset must be present in `input`, that offset must include either a negative sign or a positive sign. If the sign is missing, the method throws a <xref:System.FormatException>.","nodes":[{"content":"The <ph id=\"ph1\">`format`</ph> parameter is a string that contains either a single standard format specifier or one or more custom format specifiers that define the required pattern of the <ph id=\"ph2\">`input`</ph> parameter.","pos":[0,189],"source":"The `format` parameter is a string that contains either a single standard format specifier or one or more custom format specifiers that define the required pattern of the `input` parameter."},{"content":"For details about valid formatting codes, see <bpt id=\"p1\">[</bpt>Standard Date and Time Format Strings<ept id=\"p1\">](~/docs/standard/base-types/standard-date-and-time-format-strings.md)</ept> and <bpt id=\"p2\">[</bpt>Custom Date and Time Format Strings<ept id=\"p2\">](~/docs/standard/base-types/custom-date-and-time-format-strings.md)</ept>.","pos":[190,454],"source":" For details about valid formatting codes, see [Standard Date and Time Format Strings](~/docs/standard/base-types/standard-date-and-time-format-strings.md) and [Custom Date and Time Format Strings](~/docs/standard/base-types/custom-date-and-time-format-strings.md)."},{"content":"If <ph id=\"ph1\">`format`</ph> includes the <ph id=\"ph2\">`z`</ph>, <ph id=\"ph3\">`zz`</ph>, or <ph id=\"ph4\">`zzz`</ph> custom format specifiers to indicate that an offset must be present in <ph id=\"ph5\">`input`</ph>, that offset must include either a negative sign or a positive sign.","pos":[455,647],"source":" If `format` includes the `z`, `zz`, or `zzz` custom format specifiers to indicate that an offset must be present in `input`, that offset must include either a negative sign or a positive sign."},{"content":"If the sign is missing, the method throws a <ph id=\"ph1\">&lt;xref:System.FormatException&gt;</ph>.","pos":[648,722],"source":" If the sign is missing, the method throws a <xref:System.FormatException>."}]},{"pos":[1850,2778],"content":"If `format` requires that `input` contain a date but not a time, the resulting <xref:System.DateTimeOffset> object is assigned a time of midnight (0:00:00). If `format` requires that `input` contain a time but not a date, the resulting <xref:System.DateTimeOffset> object is assigned the current date on the local system. If `format` does not require that `input` contain an offset, the offset of the resulting <xref:System.DateTimeOffset> object depends on the value of the `styles` parameter. If `styles` includes <xref:System.Globalization.DateTimeStyles.AssumeLocal>, the offset of the local time zone is assigned to the <xref:System.DateTimeOffset> object. If `styles` includes <xref:System.Globalization.DateTimeStyles.AssumeUniversal>, the Coordinated Universal Time (UTC) offset, or +00:00, is assigned to the <xref:System.DateTimeOffset> object. If neither value is specified, the offset of the local time zone is used.","nodes":[{"content":"If <ph id=\"ph1\">`format`</ph> requires that <ph id=\"ph2\">`input`</ph> contain a date but not a time, the resulting <ph id=\"ph3\">&lt;xref:System.DateTimeOffset&gt;</ph> object is assigned a time of midnight (0:00:00).","pos":[0,156],"source":"If `format` requires that `input` contain a date but not a time, the resulting <xref:System.DateTimeOffset> object is assigned a time of midnight (0:00:00)."},{"content":"If <ph id=\"ph1\">`format`</ph> requires that <ph id=\"ph2\">`input`</ph> contain a time but not a date, the resulting <ph id=\"ph3\">&lt;xref:System.DateTimeOffset&gt;</ph> object is assigned the current date on the local system.","pos":[157,321],"source":" If `format` requires that `input` contain a time but not a date, the resulting <xref:System.DateTimeOffset> object is assigned the current date on the local system."},{"content":"If <ph id=\"ph1\">`format`</ph> does not require that <ph id=\"ph2\">`input`</ph> contain an offset, the offset of the resulting <ph id=\"ph3\">&lt;xref:System.DateTimeOffset&gt;</ph> object depends on the value of the <ph id=\"ph4\">`styles`</ph> parameter.","pos":[322,494],"source":" If `format` does not require that `input` contain an offset, the offset of the resulting <xref:System.DateTimeOffset> object depends on the value of the `styles` parameter."},{"content":"If <ph id=\"ph1\">`styles`</ph> includes <ph id=\"ph2\">&lt;xref:System.Globalization.DateTimeStyles.AssumeLocal&gt;</ph>, the offset of the local time zone is assigned to the <ph id=\"ph3\">&lt;xref:System.DateTimeOffset&gt;</ph> object.","pos":[495,661],"source":" If `styles` includes <xref:System.Globalization.DateTimeStyles.AssumeLocal>, the offset of the local time zone is assigned to the <xref:System.DateTimeOffset> object."},{"content":"If <ph id=\"ph1\">`styles`</ph> includes <ph id=\"ph2\">&lt;xref:System.Globalization.DateTimeStyles.AssumeUniversal&gt;</ph>, the Coordinated Universal Time (UTC) offset, or +00:00, is assigned to the <ph id=\"ph3\">&lt;xref:System.DateTimeOffset&gt;</ph> object.","pos":[662,854],"source":" If `styles` includes <xref:System.Globalization.DateTimeStyles.AssumeUniversal>, the Coordinated Universal Time (UTC) offset, or +00:00, is assigned to the <xref:System.DateTimeOffset> object."},{"content":"If neither value is specified, the offset of the local time zone is used.","pos":[855,928]}]},{"pos":[2785,3062],"content":"The particular date and time symbols and strings used in `input` are defined by the `formatProvider` parameter. The same is true for the precise format of `input`, if `format` is a standard format specifier string. The `formatProvider` parameter can be either of the following:","nodes":[{"content":"The particular date and time symbols and strings used in <ph id=\"ph1\">`input`</ph> are defined by the <ph id=\"ph2\">`formatProvider`</ph> parameter.","pos":[0,111],"source":"The particular date and time symbols and strings used in `input` are defined by the `formatProvider` parameter."},{"content":"The same is true for the precise format of <ph id=\"ph1\">`input`</ph>, if <ph id=\"ph2\">`format`</ph> is a standard format specifier string.","pos":[112,214],"source":" The same is true for the precise format of `input`, if `format` is a standard format specifier string."},{"content":"The <ph id=\"ph1\">`formatProvider`</ph> parameter can be either of the following:","pos":[215,277],"source":" The `formatProvider` parameter can be either of the following:"}]},{"pos":[3072,3400],"content":"A <xref:System.Globalization.CultureInfo> object that represents the culture based on which `input` is interpreted. The <xref:System.Globalization.DateTimeFormatInfo> object returned by the <xref:System.Globalization.CultureInfo.DateTimeFormat%2A?displayProperty=fullName> property defines the symbols and formatting in `input`.","nodes":[{"content":"A <ph id=\"ph1\">&lt;xref:System.Globalization.CultureInfo&gt;</ph> object that represents the culture based on which <ph id=\"ph2\">`input`</ph> is interpreted.","pos":[0,115],"source":"A <xref:System.Globalization.CultureInfo> object that represents the culture based on which `input` is interpreted."},{"content":"The <ph id=\"ph1\">&lt;xref:System.Globalization.DateTimeFormatInfo&gt;</ph> object returned by the <ph id=\"ph2\">&lt;xref:System.Globalization.CultureInfo.DateTimeFormat%2A?displayProperty=fullName&gt;</ph> property defines the symbols and formatting in <ph id=\"ph3\">`input`</ph>.","pos":[116,328],"source":" The <xref:System.Globalization.DateTimeFormatInfo> object returned by the <xref:System.Globalization.CultureInfo.DateTimeFormat%2A?displayProperty=fullName> property defines the symbols and formatting in `input`."}]},{"pos":[3410,3512],"content":"A <xref:System.Globalization.DateTimeFormatInfo> object that defines the format of date and time data.","nodes":[{"content":"A <ph id=\"ph1\">&lt;xref:System.Globalization.DateTimeFormatInfo&gt;</ph> object that defines the format of date and time data.","pos":[0,102],"source":"A <xref:System.Globalization.DateTimeFormatInfo> object that defines the format of date and time data."}]},{"pos":[3519,3649],"content":"If <ph id=\"ph1\">`formatprovider`</ph> is <ph id=\"ph2\">`null`</ph>, the <ph id=\"ph3\">&lt;xref:System.Globalization.CultureInfo&gt;</ph> object that corresponds to the current culture is used.","source":"If `formatprovider` is `null`, the <xref:System.Globalization.CultureInfo> object that corresponds to the current culture is used."},{"pos":[3656,4094],"content":"The `styles` parameter defines whether white space is allowed in the input string, indicates how strings without an explicit offset component are parsed, and supports UTC conversion as part of the parsing operation. All members of the <xref:System.Globalization.DateTimeStyles> enumeration are supported except <xref:System.Globalization.DateTimeStyles.NoCurrentDateDefault>. The following table lists the effect of each supported member.","nodes":[{"content":"The <ph id=\"ph1\">`styles`</ph> parameter defines whether white space is allowed in the input string, indicates how strings without an explicit offset component are parsed, and supports UTC conversion as part of the parsing operation.","pos":[0,215],"source":"The `styles` parameter defines whether white space is allowed in the input string, indicates how strings without an explicit offset component are parsed, and supports UTC conversion as part of the parsing operation."},{"content":"All members of the <ph id=\"ph1\">&lt;xref:System.Globalization.DateTimeStyles&gt;</ph> enumeration are supported except <ph id=\"ph2\">&lt;xref:System.Globalization.DateTimeStyles.NoCurrentDateDefault&gt;</ph>.","pos":[216,375],"source":" All members of the <xref:System.Globalization.DateTimeStyles> enumeration are supported except <xref:System.Globalization.DateTimeStyles.NoCurrentDateDefault>."},{"content":"The following table lists the effect of each supported member.","pos":[376,438]}]},{"pos":[4101,4124],"content":"<ph id=\"ph1\">`DateTimeStyles`</ph> member","source":"`DateTimeStyles` member"},{"pos":[4125,4133],"content":"Behavior","nodes":[{"content":"Behavior","pos":[0,8]}]},{"pos":[4187,4247],"content":"<xref:System.Globalization.DateTimeStyles.AdjustToUniversal>","nodes":[]},{"pos":[4248,4493],"content":"Parses `input` and, if necessary, converts it to UTC. It is equivalent to parsing a string, and then calling the <xref:System.DateTimeOffset.ToUniversalTime%2A?displayProperty=fullName> method of the returned <xref:System.DateTimeOffset> object.","nodes":[{"content":"Parses <ph id=\"ph1\">`input`</ph> and, if necessary, converts it to UTC.","pos":[0,53],"source":"Parses `input` and, if necessary, converts it to UTC."},{"content":"It is equivalent to parsing a string, and then calling the <ph id=\"ph1\">&lt;xref:System.DateTimeOffset.ToUniversalTime%2A?displayProperty=fullName&gt;</ph> method of the returned <ph id=\"ph2\">&lt;xref:System.DateTimeOffset&gt;</ph> object.","pos":[54,245],"source":" It is equivalent to parsing a string, and then calling the <xref:System.DateTimeOffset.ToUniversalTime%2A?displayProperty=fullName> method of the returned <xref:System.DateTimeOffset> object."}]},{"pos":[4498,4552],"content":"<xref:System.Globalization.DateTimeStyles.AssumeLocal>","nodes":[]},{"pos":[4553,4739],"content":"If `format` does not require that `input` contain an offset value, the returned <xref:System.DateTimeOffset> object is given the offset of the local time zone. This is the default value.","nodes":[{"content":"If <ph id=\"ph1\">`format`</ph> does not require that <ph id=\"ph2\">`input`</ph> contain an offset value, the returned <ph id=\"ph3\">&lt;xref:System.DateTimeOffset&gt;</ph> object is given the offset of the local time zone.","pos":[0,159],"source":"If `format` does not require that `input` contain an offset value, the returned <xref:System.DateTimeOffset> object is given the offset of the local time zone."},{"content":"This is the default value.","pos":[160,186]}]},{"pos":[4744,4802],"content":"<xref:System.Globalization.DateTimeStyles.AssumeUniversal>","nodes":[]},{"pos":[4803,4952],"content":"If <ph id=\"ph1\">`format`</ph> does not require that <ph id=\"ph2\">`input`</ph> contain an offset value, the returned <ph id=\"ph3\">&lt;xref:System.DateTimeOffset&gt;</ph> object is given the UTC offset (+00:00).","source":"If `format` does not require that `input` contain an offset value, the returned <xref:System.DateTimeOffset> object is given the UTC offset (+00:00)."},{"pos":[4957,5015],"content":"<xref:System.Globalization.DateTimeStyles.AllowInnerWhite>","nodes":[]},{"pos":[5016,5222],"content":"Allows `input` to include inner white space not specified by `format`. Extra white space can appear between date and time components and within individual components, and is ignored when parsing the string.","nodes":[{"content":"Allows <ph id=\"ph1\">`input`</ph> to include inner white space not specified by <ph id=\"ph2\">`format`</ph>.","pos":[0,70],"source":"Allows `input` to include inner white space not specified by `format`."},{"content":"Extra white space can appear between date and time components and within individual components, and is ignored when parsing the string.","pos":[71,206]}]},{"pos":[5227,5287],"content":"<xref:System.Globalization.DateTimeStyles.AllowLeadingWhite>","nodes":[]},{"pos":[5288,5398],"content":"Allows `input` to include leading spaces not specified by `format`. These are ignored when parsing the string.","nodes":[{"content":"Allows <ph id=\"ph1\">`input`</ph> to include leading spaces not specified by <ph id=\"ph2\">`format`</ph>.","pos":[0,67],"source":"Allows `input` to include leading spaces not specified by `format`."},{"content":"These are ignored when parsing the string.","pos":[68,110]}]},{"pos":[5403,5464],"content":"<xref:System.Globalization.DateTimeStyles.AllowTrailingWhite>","nodes":[]},{"pos":[5465,5576],"content":"Allows `input` to include trailing spaces not specified by `format`. These are ignored when parsing the string.","nodes":[{"content":"Allows <ph id=\"ph1\">`input`</ph> to include trailing spaces not specified by <ph id=\"ph2\">`format`</ph>.","pos":[0,68],"source":"Allows `input` to include trailing spaces not specified by `format`."},{"content":"These are ignored when parsing the string.","pos":[69,111]}]},{"pos":[5581,5640],"content":"<xref:System.Globalization.DateTimeStyles.AllowWhiteSpaces>","nodes":[]},{"pos":[5641,5825],"content":"Allows `input` to include leading, trailing, and inner spaces not specified by `format`. All extra white-space characters not specified in `format` are ignored when parsing the string.","nodes":[{"content":"Allows <ph id=\"ph1\">`input`</ph> to include leading, trailing, and inner spaces not specified by <ph id=\"ph2\">`format`</ph>.","pos":[0,88],"source":"Allows `input` to include leading, trailing, and inner spaces not specified by `format`."},{"content":"All extra white-space characters not specified in <ph id=\"ph1\">`format`</ph> are ignored when parsing the string.","pos":[89,184],"source":" All extra white-space characters not specified in `format` are ignored when parsing the string."}]},{"pos":[5830,5877],"content":"<xref:System.Globalization.DateTimeStyles.None>","nodes":[]},{"pos":[5878,6032],"content":"Indicates that additional white space is not permitted in `input`. White space must appear exactly as specified in `format`. This is the default behavior.","nodes":[{"content":"Indicates that additional white space is not permitted in <ph id=\"ph1\">`input`</ph>.","pos":[0,66],"source":"Indicates that additional white space is not permitted in `input`."},{"content":"White space must appear exactly as specified in <ph id=\"ph1\">`format`</ph>.","pos":[67,124],"source":" White space must appear exactly as specified in `format`."},{"content":"This is the default behavior.","pos":[125,154]}]},{"pos":[6037,6093],"content":"<xref:System.Globalization.DateTimeStyles.RoundtripKind>","nodes":[]},{"pos":[6094,6194],"content":"Has no effect because the <ph id=\"ph1\">&lt;xref:System.DateTimeOffset&gt;</ph> structure does not include a <ph id=\"ph2\">`Kind`</ph> property.","source":"Has no effect because the <xref:System.DateTimeOffset> structure does not include a `Kind` property."}],"pos":[218465,224695],"yaml":true,"extradata":"MT"},{"content":"A string that contains a date and time to convert.","nodes":[{"pos":[0,50],"content":"A string that contains a date and time to convert.","nodes":[{"content":"A string that contains a date and time to convert.","pos":[0,50]}]}],"pos":[225646,225697],"yaml":true},{"content":"A format specifier that defines the expected format of <code>input</code>.","nodes":[{"pos":[0,74],"content":"A format specifier that defines the expected format of <bpt id=\"p1\">&lt;code&gt;</bpt><ph id=\"ph1\">input</ph><ept id=\"p1\">&lt;/code&gt;</ept>.","source":"A format specifier that defines the expected format of <code>input</code>."}],"pos":[225759,225834],"yaml":true},{"content":"An object that supplies culture-specific formatting information about <code>input</code>.","nodes":[{"pos":[0,89],"content":"An object that supplies culture-specific formatting information about <bpt id=\"p1\">&lt;code&gt;</bpt><ph id=\"ph1\">input</ph><ept id=\"p1\">&lt;/code&gt;</ept>.","source":"An object that supplies culture-specific formatting information about <code>input</code>."}],"pos":[225913,226003],"yaml":true},{"content":"A bitwise combination of enumeration values that indicates the permitted format of <code>input</code>.","nodes":[{"pos":[0,102],"content":"A bitwise combination of enumeration values that indicates the permitted format of <bpt id=\"p1\">&lt;code&gt;</bpt><ph id=\"ph1\">input</ph><ept id=\"p1\">&lt;/code&gt;</ept>.","source":"A bitwise combination of enumeration values that indicates the permitted format of <code>input</code>."}],"pos":[226087,226190],"yaml":true},{"content":"An object that is equivalent to the date and time that is contained in the <code>input</code> parameter, as specified by the <code>format</code>, <code>formatProvider</code>, and <code>styles</code> parameters.","nodes":[{"pos":[0,210],"content":"An object that is equivalent to the date and time that is contained in the <bpt id=\"p1\">&lt;code&gt;</bpt><ph id=\"ph1\">input</ph><ept id=\"p1\">&lt;/code&gt;</ept> parameter, as specified by the <bpt id=\"p2\">&lt;code&gt;</bpt><ph id=\"ph2\">format</ph><ept id=\"p2\">&lt;/code&gt;</ept>, <bpt id=\"p3\">&lt;code&gt;</bpt><ph id=\"ph3\">formatProvider</ph><ept id=\"p3\">&lt;/code&gt;</ept>, and <bpt id=\"p4\">&lt;code&gt;</bpt><ph id=\"ph4\">styles</ph><ept id=\"p4\">&lt;/code&gt;</ept> parameters.","source":"An object that is equivalent to the date and time that is contained in the <code>input</code> parameter, as specified by the <code>format</code>, <code>formatProvider</code>, and <code>styles</code> parameters."}],"pos":[226255,226466],"yaml":true},{"content":"The offset is greater than 14 hours or less than -14 hours.  \n  \n -or-  \n  \n The <code>styles</code> parameter includes an unsupported value.  \n  \n -or-  \n  \n The <code>styles</code> parameter contains <xref href=\"System.Globalization.DateTimeStyles\"></xref> values that cannot be used together.","nodes":[{"pos":[0,59],"content":"The offset is greater than 14 hours or less than -14 hours.","nodes":[{"content":"The offset is greater than 14 hours or less than -14 hours.","pos":[0,59]}]},{"pos":[66,70],"content":"-or-","nodes":[{"content":"-or-","pos":[0,4]}]},{"pos":[77,141],"content":"The <bpt id=\"p1\">&lt;code&gt;</bpt><ph id=\"ph1\">styles</ph><ept id=\"p1\">&lt;/code&gt;</ept> parameter includes an unsupported value.","source":"The <code>styles</code> parameter includes an unsupported value."},{"pos":[148,152],"content":"-or-","nodes":[{"content":"-or-","pos":[0,4]}]},{"pos":[159,295],"content":"The <bpt id=\"p1\">&lt;code&gt;</bpt><ph id=\"ph1\">styles</ph><ept id=\"p1\">&lt;/code&gt;</ept> parameter contains <ph id=\"ph2\">&lt;xref href=\"System.Globalization.DateTimeStyles\"&gt;&lt;/xref&gt;</ph> values that cannot be used together.","source":"The <code>styles</code> parameter contains <xref href=\"System.Globalization.DateTimeStyles\"></xref> values that cannot be used together."}],"pos":[226620,226928],"yaml":true},{"content":"<code>input</code> is `null`.  \n  \n -or-  \n  \n <code>format</code> is `null`.","nodes":[{"pos":[0,29],"content":"<ph id=\"ph1\">&lt;code&gt;input&lt;/code&gt;</ph> is <ph id=\"ph2\">`null`</ph>.","source":"<code>input</code> is `null`."},{"pos":[36,40],"content":"-or-","nodes":[{"content":"-or-","pos":[0,4]}]},{"pos":[47,77],"content":"<ph id=\"ph1\">&lt;code&gt;format&lt;/code&gt;</ph> is <ph id=\"ph2\">`null`</ph>.","source":"<code>format</code> is `null`."}],"pos":[227030,227114],"yaml":true},{"content":"<code>input</code> is an empty string (\"\").  \n  \n -or-  \n  \n <code>input</code> does not contain a valid string representation of a date and time.  \n  \n -or-  \n  \n <code>format</code> is an empty string.  \n  \n -or-  \n  \n The hour component and the AM/PM designator in <code>input</code> do not agree.","nodes":[{"pos":[0,43],"content":"<ph id=\"ph1\">&lt;code&gt;input&lt;/code&gt;</ph> is an empty string (\"\").","source":"<code>input</code> is an empty string (\"\")."},{"pos":[50,54],"content":"-or-","nodes":[{"content":"-or-","pos":[0,4]}]},{"pos":[61,146],"content":"<ph id=\"ph1\">&lt;code&gt;input&lt;/code&gt;</ph> does not contain a valid string representation of a date and time.","source":"<code>input</code> does not contain a valid string representation of a date and time."},{"pos":[153,157],"content":"-or-","nodes":[{"content":"-or-","pos":[0,4]}]},{"pos":[164,203],"content":"<ph id=\"ph1\">&lt;code&gt;format&lt;/code&gt;</ph> is an empty string.","source":"<code>format</code> is an empty string."},{"pos":[210,214],"content":"-or-","nodes":[{"content":"-or-","pos":[0,4]}]},{"pos":[221,300],"content":"The hour component and the AM/PM designator in <bpt id=\"p1\">&lt;code&gt;</bpt><ph id=\"ph1\">input</ph><ept id=\"p1\">&lt;/code&gt;</ept> do not agree.","source":"The hour component and the AM/PM designator in <code>input</code> do not agree."}],"pos":[227204,227521],"yaml":true},{"content":"Converts the specified string representation of a date and time to its <xref href=\"System.DateTimeOffset\"></xref> equivalent using the specified formats, culture-specific format information, and style. The format of the string representation must match one of the specified formats exactly.","nodes":[{"pos":[0,290],"content":"Converts the specified string representation of a date and time to its <xref href=\"System.DateTimeOffset\"></xref> equivalent using the specified formats, culture-specific format information, and style. The format of the string representation must match one of the specified formats exactly.","nodes":[{"content":"Converts the specified string representation of a date and time to its <ph id=\"ph1\">&lt;xref href=\"System.DateTimeOffset\"&gt;&lt;/xref&gt;</ph> equivalent using the specified formats, culture-specific format information, and style.","pos":[0,201],"source":"Converts the specified string representation of a date and time to its <xref href=\"System.DateTimeOffset\"></xref> equivalent using the specified formats, culture-specific format information, and style."},{"content":"The format of the string representation must match one of the specified formats exactly.","pos":[202,290]}]}],"pos":[229370,229661],"yaml":true},{"content":"The <xref:System.DateTimeOffset.ParseExact%28System.String%2CSystem.String%5B%5D%2CSystem.IFormatProvider%2CSystem.Globalization.DateTimeStyles%29?displayProperty=fullName> method parses the string representation of a date that matches any one of the patterns assigned to the `formats` parameter. If the `input` string does not match any one of these patterns with any of the variations defined by the `styles` parameter, the method throws a <xref:System.FormatException>. Aside from comparing `input` to multiple formatting patterns, this overload behaves identically to the <xref:System.DateTimeOffset.ParseExact%28System.String%2CSystem.String%2CSystem.IFormatProvider%2CSystem.Globalization.DateTimeStyles%29?displayProperty=fullName> method.  \n  \n The `formats` parameter is a string array whose elements contain either a single standard format specifier or one or more custom format specifiers that define the possible pattern of the `input` parameter. When the method is called, `input` must match one of these patterns. For details about valid formatting codes, see [Standard Date and Time Format Strings](~/docs/standard/base-types/standard-date-and-time-format-strings.md) and [Custom Date and Time Format Strings](~/docs/standard/base-types/custom-date-and-time-format-strings.md). If the matched element in `formats` includes the `z`, `zz`, or `zzz` custom format specifiers to indicate that an offset must be present in `input`, that offset must include either a negative sign or a positive sign. If the sign is missing, the method throws a <xref:System.FormatException>.  \n  \n> [!IMPORTANT]\n>  Using the `formats` parameter of this overload to specify multiple formats can help reduce the frustration many users experience when they enter dates and times. In particular, the ability to define multiple input patterns enables an application to handle date and time representations that can either include or lack leading zeros in months, days, hours, minutes, and seconds. The example provides an illustration of this.  \n  \n If the matched element in `formats` requires that `input` contain a date but not a time, the resulting <xref:System.DateTimeOffset> object is assigned a time of midnight (0:00:00). If the matched element in `formats` requires that `input` contain a time but not a date, the resulting <xref:System.DateTimeOffset> object is assigned the current date on the local system. If the matched element in `formats` does not require that `input` contain an offset, the offset of the resulting <xref:System.DateTimeOffset> object depends on the value of the `styles` parameter. If `styles` includes <xref:System.Globalization.DateTimeStyles.AssumeLocal>, the offset of the local time zone is assigned to the <xref:System.DateTimeOffset> object. If `styles` includes <xref:System.Globalization.DateTimeStyles.AssumeUniversal>, the Coordinated Universal Time (UTC) offset, or +00:00, is assigned to the <xref:System.DateTimeOffset> object. If neither value is specified, the offset of the local time zone is used.  \n  \n The particular date and time symbols and strings used in `input` are defined by the `formatProvider` parameter. The same is true for the precise format of `input`, if the matching element of `formats` is a standard format specifier string. The `formatProvider` parameter can be either of the following:  \n  \n-   A <xref:System.Globalization.CultureInfo> object that represents the culture based on which `input` is interpreted. The <xref:System.Globalization.DateTimeFormatInfo> object returned by the <xref:System.Globalization.CultureInfo.DateTimeFormat%2A?displayProperty=fullName> property defines the symbols and formatting in `input`.  \n  \n-   A <xref:System.Globalization.DateTimeFormatInfo> object that defines the format of date and time data.  \n  \n If `formatprovider` is `null`, the <xref:System.Globalization.CultureInfo> object that corresponds to the current culture is used.  \n  \n The `styles` parameter defines whether white space is permitted in the input string, indicates how strings without an explicit offset component are parsed, and supports UTC conversion as part of the parsing operation. All members of the <xref:System.Globalization.DateTimeStyles> enumeration are supported except <xref:System.Globalization.DateTimeStyles.NoCurrentDateDefault>. The following table lists the effect of each supported member.  \n  \n|`DateTimeStyles` member|Behavior|  \n|-----------------------------|--------------|  \n|<xref:System.Globalization.DateTimeStyles.AdjustToUniversal>|Parses `input` and, if necessary, converts it to UTC. It is equivalent to parsing a string, and then calling the <xref:System.DateTimeOffset.ToUniversalTime%2A?displayProperty=fullName> method of the returned <xref:System.DateTimeOffset> object.|  \n|<xref:System.Globalization.DateTimeStyles.AssumeLocal>|If the matched element in `formats` does not require that `input` contain an offset value, the returned <xref:System.DateTimeOffset> object is given the offset of the local time zone. This is the default value.|  \n|<xref:System.Globalization.DateTimeStyles.AssumeUniversal>|If the matched element in `formats` does not require that `input` contain an offset value, the returned <xref:System.DateTimeOffset> object is given the UTC offset (+00:00).|  \n|<xref:System.Globalization.DateTimeStyles.AllowInnerWhite>|Allows `input` to include inner white space not specified by `format`. Extra white space can appear between date and time components and within individual components (except the offset), and is ignored when parsing the string.|  \n|<xref:System.Globalization.DateTimeStyles.AllowLeadingWhite>|Allows `input` to include leading spaces not specified by `formats`. These are ignored when parsing the string.|  \n|<xref:System.Globalization.DateTimeStyles.AllowTrailingWhite>|Allows `input` to include trailing spaces not specified by `formats`. These are ignored when parsing the string.|  \n|<xref:System.Globalization.DateTimeStyles.AllowWhiteSpaces>|Allows `input` to include leading, trailing, and inner spaces not specified by `formats`. All extra white-space characters not specified in the matched element in `formats` are ignored when parsing the string.|  \n|<xref:System.Globalization.DateTimeStyles.None>|Indicates that additional white space is not permitted in `input`. White space must appear exactly as specified in a particular element of `formats` for a match to occur. This is the default behavior.|  \n|<xref:System.Globalization.DateTimeStyles.RoundtripKind>|Has no effect because the <xref:System.DateTimeOffset> structure does not include a `Kind` property.|","nodes":[{"pos":[0,746],"content":"The <xref:System.DateTimeOffset.ParseExact%28System.String%2CSystem.String%5B%5D%2CSystem.IFormatProvider%2CSystem.Globalization.DateTimeStyles%29?displayProperty=fullName> method parses the string representation of a date that matches any one of the patterns assigned to the `formats` parameter. If the `input` string does not match any one of these patterns with any of the variations defined by the `styles` parameter, the method throws a <xref:System.FormatException>. Aside from comparing `input` to multiple formatting patterns, this overload behaves identically to the <xref:System.DateTimeOffset.ParseExact%28System.String%2CSystem.String%2CSystem.IFormatProvider%2CSystem.Globalization.DateTimeStyles%29?displayProperty=fullName> method.","nodes":[{"content":"The <ph id=\"ph1\">&lt;xref:System.DateTimeOffset.ParseExact%28System.String%2CSystem.String%5B%5D%2CSystem.IFormatProvider%2CSystem.Globalization.DateTimeStyles%29?displayProperty=fullName&gt;</ph> method parses the string representation of a date that matches any one of the patterns assigned to the <ph id=\"ph2\">`formats`</ph> parameter.","pos":[0,296],"source":"The <xref:System.DateTimeOffset.ParseExact%28System.String%2CSystem.String%5B%5D%2CSystem.IFormatProvider%2CSystem.Globalization.DateTimeStyles%29?displayProperty=fullName> method parses the string representation of a date that matches any one of the patterns assigned to the `formats` parameter."},{"content":"If the <ph id=\"ph1\">`input`</ph> string does not match any one of these patterns with any of the variations defined by the <ph id=\"ph2\">`styles`</ph> parameter, the method throws a <ph id=\"ph3\">&lt;xref:System.FormatException&gt;</ph>.","pos":[297,472],"source":" If the `input` string does not match any one of these patterns with any of the variations defined by the `styles` parameter, the method throws a <xref:System.FormatException>."},{"content":"Aside from comparing <ph id=\"ph1\">`input`</ph> to multiple formatting patterns, this overload behaves identically to the <ph id=\"ph2\">&lt;xref:System.DateTimeOffset.ParseExact%28System.String%2CSystem.String%2CSystem.IFormatProvider%2CSystem.Globalization.DateTimeStyles%29?displayProperty=fullName&gt;</ph> method.","pos":[473,746],"source":" Aside from comparing `input` to multiple formatting patterns, this overload behaves identically to the <xref:System.DateTimeOffset.ParseExact%28System.String%2CSystem.String%2CSystem.IFormatProvider%2CSystem.Globalization.DateTimeStyles%29?displayProperty=fullName> method."}]},{"pos":[753,1584],"content":"The `formats` parameter is a string array whose elements contain either a single standard format specifier or one or more custom format specifiers that define the possible pattern of the `input` parameter. When the method is called, `input` must match one of these patterns. For details about valid formatting codes, see [Standard Date and Time Format Strings](~/docs/standard/base-types/standard-date-and-time-format-strings.md) and [Custom Date and Time Format Strings](~/docs/standard/base-types/custom-date-and-time-format-strings.md). If the matched element in `formats` includes the `z`, `zz`, or `zzz` custom format specifiers to indicate that an offset must be present in `input`, that offset must include either a negative sign or a positive sign. If the sign is missing, the method throws a <xref:System.FormatException>.","nodes":[{"content":"The <ph id=\"ph1\">`formats`</ph> parameter is a string array whose elements contain either a single standard format specifier or one or more custom format specifiers that define the possible pattern of the <ph id=\"ph2\">`input`</ph> parameter.","pos":[0,205],"source":"The `formats` parameter is a string array whose elements contain either a single standard format specifier or one or more custom format specifiers that define the possible pattern of the `input` parameter."},{"content":"When the method is called, <ph id=\"ph1\">`input`</ph> must match one of these patterns.","pos":[206,274],"source":" When the method is called, `input` must match one of these patterns."},{"content":"For details about valid formatting codes, see <bpt id=\"p1\">[</bpt>Standard Date and Time Format Strings<ept id=\"p1\">](~/docs/standard/base-types/standard-date-and-time-format-strings.md)</ept> and <bpt id=\"p2\">[</bpt>Custom Date and Time Format Strings<ept id=\"p2\">](~/docs/standard/base-types/custom-date-and-time-format-strings.md)</ept>.","pos":[275,539],"source":" For details about valid formatting codes, see [Standard Date and Time Format Strings](~/docs/standard/base-types/standard-date-and-time-format-strings.md) and [Custom Date and Time Format Strings](~/docs/standard/base-types/custom-date-and-time-format-strings.md)."},{"content":"If the matched element in <ph id=\"ph1\">`formats`</ph> includes the <ph id=\"ph2\">`z`</ph>, <ph id=\"ph3\">`zz`</ph>, or <ph id=\"ph4\">`zzz`</ph> custom format specifiers to indicate that an offset must be present in <ph id=\"ph5\">`input`</ph>, that offset must include either a negative sign or a positive sign.","pos":[540,756],"source":" If the matched element in `formats` includes the `z`, `zz`, or `zzz` custom format specifiers to indicate that an offset must be present in `input`, that offset must include either a negative sign or a positive sign."},{"content":"If the sign is missing, the method throws a <ph id=\"ph1\">&lt;xref:System.FormatException&gt;</ph>.","pos":[757,831],"source":" If the sign is missing, the method throws a <xref:System.FormatException>."}]},{"pos":[1592,2031],"content":"[!IMPORTANT]\n Using the `formats` parameter of this overload to specify multiple formats can help reduce the frustration many users experience when they enter dates and times. In particular, the ability to define multiple input patterns enables an application to handle date and time representations that can either include or lack leading zeros in months, days, hours, minutes, and seconds. The example provides an illustration of this.","leadings":["","> "],"nodes":[{"content":" Using the `formats` parameter of this overload to specify multiple formats can help reduce the frustration many users experience when they enter dates and times. In particular, the ability to define multiple input patterns enables an application to handle date and time representations that can either include or lack leading zeros in months, days, hours, minutes, and seconds. The example provides an illustration of this.","pos":[13,437],"nodes":[{"content":"Using the <ph id=\"ph1\">`formats`</ph> parameter of this overload to specify multiple formats can help reduce the frustration many users experience when they enter dates and times.","pos":[1,162],"source":" Using the `formats` parameter of this overload to specify multiple formats can help reduce the frustration many users experience when they enter dates and times."},{"content":"In particular, the ability to define multiple input patterns enables an application to handle date and time representations that can either include or lack leading zeros in months, days, hours, minutes, and seconds.","pos":[163,378]},{"content":"The example provides an illustration of this.","pos":[379,424]}]}]},{"pos":[2038,3038],"content":"If the matched element in `formats` requires that `input` contain a date but not a time, the resulting <xref:System.DateTimeOffset> object is assigned a time of midnight (0:00:00). If the matched element in `formats` requires that `input` contain a time but not a date, the resulting <xref:System.DateTimeOffset> object is assigned the current date on the local system. If the matched element in `formats` does not require that `input` contain an offset, the offset of the resulting <xref:System.DateTimeOffset> object depends on the value of the `styles` parameter. If `styles` includes <xref:System.Globalization.DateTimeStyles.AssumeLocal>, the offset of the local time zone is assigned to the <xref:System.DateTimeOffset> object. If `styles` includes <xref:System.Globalization.DateTimeStyles.AssumeUniversal>, the Coordinated Universal Time (UTC) offset, or +00:00, is assigned to the <xref:System.DateTimeOffset> object. If neither value is specified, the offset of the local time zone is used.","nodes":[{"content":"If the matched element in <ph id=\"ph1\">`formats`</ph> requires that <ph id=\"ph2\">`input`</ph> contain a date but not a time, the resulting <ph id=\"ph3\">&lt;xref:System.DateTimeOffset&gt;</ph> object is assigned a time of midnight (0:00:00).","pos":[0,180],"source":"If the matched element in `formats` requires that `input` contain a date but not a time, the resulting <xref:System.DateTimeOffset> object is assigned a time of midnight (0:00:00)."},{"content":"If the matched element in <ph id=\"ph1\">`formats`</ph> requires that <ph id=\"ph2\">`input`</ph> contain a time but not a date, the resulting <ph id=\"ph3\">&lt;xref:System.DateTimeOffset&gt;</ph> object is assigned the current date on the local system.","pos":[181,369],"source":" If the matched element in `formats` requires that `input` contain a time but not a date, the resulting <xref:System.DateTimeOffset> object is assigned the current date on the local system."},{"content":"If the matched element in <ph id=\"ph1\">`formats`</ph> does not require that <ph id=\"ph2\">`input`</ph> contain an offset, the offset of the resulting <ph id=\"ph3\">&lt;xref:System.DateTimeOffset&gt;</ph> object depends on the value of the <ph id=\"ph4\">`styles`</ph> parameter.","pos":[370,566],"source":" If the matched element in `formats` does not require that `input` contain an offset, the offset of the resulting <xref:System.DateTimeOffset> object depends on the value of the `styles` parameter."},{"content":"If <ph id=\"ph1\">`styles`</ph> includes <ph id=\"ph2\">&lt;xref:System.Globalization.DateTimeStyles.AssumeLocal&gt;</ph>, the offset of the local time zone is assigned to the <ph id=\"ph3\">&lt;xref:System.DateTimeOffset&gt;</ph> object.","pos":[567,733],"source":" If `styles` includes <xref:System.Globalization.DateTimeStyles.AssumeLocal>, the offset of the local time zone is assigned to the <xref:System.DateTimeOffset> object."},{"content":"If <ph id=\"ph1\">`styles`</ph> includes <ph id=\"ph2\">&lt;xref:System.Globalization.DateTimeStyles.AssumeUniversal&gt;</ph>, the Coordinated Universal Time (UTC) offset, or +00:00, is assigned to the <ph id=\"ph3\">&lt;xref:System.DateTimeOffset&gt;</ph> object.","pos":[734,926],"source":" If `styles` includes <xref:System.Globalization.DateTimeStyles.AssumeUniversal>, the Coordinated Universal Time (UTC) offset, or +00:00, is assigned to the <xref:System.DateTimeOffset> object."},{"content":"If neither value is specified, the offset of the local time zone is used.","pos":[927,1000]}]},{"pos":[3045,3347],"content":"The particular date and time symbols and strings used in `input` are defined by the `formatProvider` parameter. The same is true for the precise format of `input`, if the matching element of `formats` is a standard format specifier string. The `formatProvider` parameter can be either of the following:","nodes":[{"content":"The particular date and time symbols and strings used in <ph id=\"ph1\">`input`</ph> are defined by the <ph id=\"ph2\">`formatProvider`</ph> parameter.","pos":[0,111],"source":"The particular date and time symbols and strings used in `input` are defined by the `formatProvider` parameter."},{"content":"The same is true for the precise format of <ph id=\"ph1\">`input`</ph>, if the matching element of <ph id=\"ph2\">`formats`</ph> is a standard format specifier string.","pos":[112,239],"source":" The same is true for the precise format of `input`, if the matching element of `formats` is a standard format specifier string."},{"content":"The <ph id=\"ph1\">`formatProvider`</ph> parameter can be either of the following:","pos":[240,302],"source":" The `formatProvider` parameter can be either of the following:"}]},{"pos":[3357,3685],"content":"A <xref:System.Globalization.CultureInfo> object that represents the culture based on which `input` is interpreted. The <xref:System.Globalization.DateTimeFormatInfo> object returned by the <xref:System.Globalization.CultureInfo.DateTimeFormat%2A?displayProperty=fullName> property defines the symbols and formatting in `input`.","nodes":[{"content":"A <ph id=\"ph1\">&lt;xref:System.Globalization.CultureInfo&gt;</ph> object that represents the culture based on which <ph id=\"ph2\">`input`</ph> is interpreted.","pos":[0,115],"source":"A <xref:System.Globalization.CultureInfo> object that represents the culture based on which `input` is interpreted."},{"content":"The <ph id=\"ph1\">&lt;xref:System.Globalization.DateTimeFormatInfo&gt;</ph> object returned by the <ph id=\"ph2\">&lt;xref:System.Globalization.CultureInfo.DateTimeFormat%2A?displayProperty=fullName&gt;</ph> property defines the symbols and formatting in <ph id=\"ph3\">`input`</ph>.","pos":[116,328],"source":" The <xref:System.Globalization.DateTimeFormatInfo> object returned by the <xref:System.Globalization.CultureInfo.DateTimeFormat%2A?displayProperty=fullName> property defines the symbols and formatting in `input`."}]},{"pos":[3695,3797],"content":"A <xref:System.Globalization.DateTimeFormatInfo> object that defines the format of date and time data.","nodes":[{"content":"A <ph id=\"ph1\">&lt;xref:System.Globalization.DateTimeFormatInfo&gt;</ph> object that defines the format of date and time data.","pos":[0,102],"source":"A <xref:System.Globalization.DateTimeFormatInfo> object that defines the format of date and time data."}]},{"pos":[3804,3934],"content":"If <ph id=\"ph1\">`formatprovider`</ph> is <ph id=\"ph2\">`null`</ph>, the <ph id=\"ph3\">&lt;xref:System.Globalization.CultureInfo&gt;</ph> object that corresponds to the current culture is used.","source":"If `formatprovider` is `null`, the <xref:System.Globalization.CultureInfo> object that corresponds to the current culture is used."},{"pos":[3941,4381],"content":"The `styles` parameter defines whether white space is permitted in the input string, indicates how strings without an explicit offset component are parsed, and supports UTC conversion as part of the parsing operation. All members of the <xref:System.Globalization.DateTimeStyles> enumeration are supported except <xref:System.Globalization.DateTimeStyles.NoCurrentDateDefault>. The following table lists the effect of each supported member.","nodes":[{"content":"The <ph id=\"ph1\">`styles`</ph> parameter defines whether white space is permitted in the input string, indicates how strings without an explicit offset component are parsed, and supports UTC conversion as part of the parsing operation.","pos":[0,217],"source":"The `styles` parameter defines whether white space is permitted in the input string, indicates how strings without an explicit offset component are parsed, and supports UTC conversion as part of the parsing operation."},{"content":"All members of the <ph id=\"ph1\">&lt;xref:System.Globalization.DateTimeStyles&gt;</ph> enumeration are supported except <ph id=\"ph2\">&lt;xref:System.Globalization.DateTimeStyles.NoCurrentDateDefault&gt;</ph>.","pos":[218,377],"source":" All members of the <xref:System.Globalization.DateTimeStyles> enumeration are supported except <xref:System.Globalization.DateTimeStyles.NoCurrentDateDefault>."},{"content":"The following table lists the effect of each supported member.","pos":[378,440]}]},{"pos":[4388,4411],"content":"<ph id=\"ph1\">`DateTimeStyles`</ph> member","source":"`DateTimeStyles` member"},{"pos":[4412,4420],"content":"Behavior","nodes":[{"content":"Behavior","pos":[0,8]}]},{"pos":[4474,4534],"content":"<xref:System.Globalization.DateTimeStyles.AdjustToUniversal>","nodes":[]},{"pos":[4535,4780],"content":"Parses `input` and, if necessary, converts it to UTC. It is equivalent to parsing a string, and then calling the <xref:System.DateTimeOffset.ToUniversalTime%2A?displayProperty=fullName> method of the returned <xref:System.DateTimeOffset> object.","nodes":[{"content":"Parses <ph id=\"ph1\">`input`</ph> and, if necessary, converts it to UTC.","pos":[0,53],"source":"Parses `input` and, if necessary, converts it to UTC."},{"content":"It is equivalent to parsing a string, and then calling the <ph id=\"ph1\">&lt;xref:System.DateTimeOffset.ToUniversalTime%2A?displayProperty=fullName&gt;</ph> method of the returned <ph id=\"ph2\">&lt;xref:System.DateTimeOffset&gt;</ph> object.","pos":[54,245],"source":" It is equivalent to parsing a string, and then calling the <xref:System.DateTimeOffset.ToUniversalTime%2A?displayProperty=fullName> method of the returned <xref:System.DateTimeOffset> object."}]},{"pos":[4785,4839],"content":"<xref:System.Globalization.DateTimeStyles.AssumeLocal>","nodes":[]},{"pos":[4840,5050],"content":"If the matched element in `formats` does not require that `input` contain an offset value, the returned <xref:System.DateTimeOffset> object is given the offset of the local time zone. This is the default value.","nodes":[{"content":"If the matched element in <ph id=\"ph1\">`formats`</ph> does not require that <ph id=\"ph2\">`input`</ph> contain an offset value, the returned <ph id=\"ph3\">&lt;xref:System.DateTimeOffset&gt;</ph> object is given the offset of the local time zone.","pos":[0,183],"source":"If the matched element in `formats` does not require that `input` contain an offset value, the returned <xref:System.DateTimeOffset> object is given the offset of the local time zone."},{"content":"This is the default value.","pos":[184,210]}]},{"pos":[5055,5113],"content":"<xref:System.Globalization.DateTimeStyles.AssumeUniversal>","nodes":[]},{"pos":[5114,5287],"content":"If the matched element in <ph id=\"ph1\">`formats`</ph> does not require that <ph id=\"ph2\">`input`</ph> contain an offset value, the returned <ph id=\"ph3\">&lt;xref:System.DateTimeOffset&gt;</ph> object is given the UTC offset (+00:00).","source":"If the matched element in `formats` does not require that `input` contain an offset value, the returned <xref:System.DateTimeOffset> object is given the UTC offset (+00:00)."},{"pos":[5292,5350],"content":"<xref:System.Globalization.DateTimeStyles.AllowInnerWhite>","nodes":[]},{"pos":[5351,5577],"content":"Allows `input` to include inner white space not specified by `format`. Extra white space can appear between date and time components and within individual components (except the offset), and is ignored when parsing the string.","nodes":[{"content":"Allows <ph id=\"ph1\">`input`</ph> to include inner white space not specified by <ph id=\"ph2\">`format`</ph>.","pos":[0,70],"source":"Allows `input` to include inner white space not specified by `format`."},{"content":"Extra white space can appear between date and time components and within individual components (except the offset), and is ignored when parsing the string.","pos":[71,226]}]},{"pos":[5582,5642],"content":"<xref:System.Globalization.DateTimeStyles.AllowLeadingWhite>","nodes":[]},{"pos":[5643,5754],"content":"Allows `input` to include leading spaces not specified by `formats`. These are ignored when parsing the string.","nodes":[{"content":"Allows <ph id=\"ph1\">`input`</ph> to include leading spaces not specified by <ph id=\"ph2\">`formats`</ph>.","pos":[0,68],"source":"Allows `input` to include leading spaces not specified by `formats`."},{"content":"These are ignored when parsing the string.","pos":[69,111]}]},{"pos":[5759,5820],"content":"<xref:System.Globalization.DateTimeStyles.AllowTrailingWhite>","nodes":[]},{"pos":[5821,5933],"content":"Allows `input` to include trailing spaces not specified by `formats`. These are ignored when parsing the string.","nodes":[{"content":"Allows <ph id=\"ph1\">`input`</ph> to include trailing spaces not specified by <ph id=\"ph2\">`formats`</ph>.","pos":[0,69],"source":"Allows `input` to include trailing spaces not specified by `formats`."},{"content":"These are ignored when parsing the string.","pos":[70,112]}]},{"pos":[5938,5997],"content":"<xref:System.Globalization.DateTimeStyles.AllowWhiteSpaces>","nodes":[]},{"pos":[5998,6207],"content":"Allows `input` to include leading, trailing, and inner spaces not specified by `formats`. All extra white-space characters not specified in the matched element in `formats` are ignored when parsing the string.","nodes":[{"content":"Allows <ph id=\"ph1\">`input`</ph> to include leading, trailing, and inner spaces not specified by <ph id=\"ph2\">`formats`</ph>.","pos":[0,89],"source":"Allows `input` to include leading, trailing, and inner spaces not specified by `formats`."},{"content":"All extra white-space characters not specified in the matched element in <ph id=\"ph1\">`formats`</ph> are ignored when parsing the string.","pos":[90,209],"source":" All extra white-space characters not specified in the matched element in `formats` are ignored when parsing the string."}]},{"pos":[6212,6259],"content":"<xref:System.Globalization.DateTimeStyles.None>","nodes":[]},{"pos":[6260,6460],"content":"Indicates that additional white space is not permitted in `input`. White space must appear exactly as specified in a particular element of `formats` for a match to occur. This is the default behavior.","nodes":[{"content":"Indicates that additional white space is not permitted in <ph id=\"ph1\">`input`</ph>.","pos":[0,66],"source":"Indicates that additional white space is not permitted in `input`."},{"content":"White space must appear exactly as specified in a particular element of <ph id=\"ph1\">`formats`</ph> for a match to occur.","pos":[67,170],"source":" White space must appear exactly as specified in a particular element of `formats` for a match to occur."},{"content":"This is the default behavior.","pos":[171,200]}]},{"pos":[6465,6521],"content":"<xref:System.Globalization.DateTimeStyles.RoundtripKind>","nodes":[]},{"pos":[6522,6622],"content":"Has no effect because the <ph id=\"ph1\">&lt;xref:System.DateTimeOffset&gt;</ph> structure does not include a <ph id=\"ph2\">`Kind`</ph> property.","source":"Has no effect because the <xref:System.DateTimeOffset> structure does not include a `Kind` property."}],"pos":[229672,236327],"yaml":true,"extradata":"MT"},{"content":"A string that contains a date and time to convert.","nodes":[{"pos":[0,50],"content":"A string that contains a date and time to convert.","nodes":[{"content":"A string that contains a date and time to convert.","pos":[0,50]}]}],"pos":[237270,237321],"yaml":true},{"content":"An array of format specifiers that define the expected formats of <code>input</code>.","nodes":[{"pos":[0,85],"content":"An array of format specifiers that define the expected formats of <bpt id=\"p1\">&lt;code&gt;</bpt><ph id=\"ph1\">input</ph><ept id=\"p1\">&lt;/code&gt;</ept>.","source":"An array of format specifiers that define the expected formats of <code>input</code>."}],"pos":[237386,237472],"yaml":true},{"content":"An object that supplies culture-specific formatting information about <code>input</code>.","nodes":[{"pos":[0,89],"content":"An object that supplies culture-specific formatting information about <bpt id=\"p1\">&lt;code&gt;</bpt><ph id=\"ph1\">input</ph><ept id=\"p1\">&lt;/code&gt;</ept>.","source":"An object that supplies culture-specific formatting information about <code>input</code>."}],"pos":[237551,237641],"yaml":true},{"content":"A bitwise combination of enumeration values that indicates the permitted format of <code>input</code>.","nodes":[{"pos":[0,102],"content":"A bitwise combination of enumeration values that indicates the permitted format of <bpt id=\"p1\">&lt;code&gt;</bpt><ph id=\"ph1\">input</ph><ept id=\"p1\">&lt;/code&gt;</ept>.","source":"A bitwise combination of enumeration values that indicates the permitted format of <code>input</code>."}],"pos":[237725,237828],"yaml":true},{"content":"An object that is equivalent to the date and time that is contained in the <code>input</code> parameter, as specified by the <code>formats</code>, <code>formatProvider</code>, and <code>styles</code> parameters.","nodes":[{"pos":[0,211],"content":"An object that is equivalent to the date and time that is contained in the <bpt id=\"p1\">&lt;code&gt;</bpt><ph id=\"ph1\">input</ph><ept id=\"p1\">&lt;/code&gt;</ept> parameter, as specified by the <bpt id=\"p2\">&lt;code&gt;</bpt><ph id=\"ph2\">formats</ph><ept id=\"p2\">&lt;/code&gt;</ept>, <bpt id=\"p3\">&lt;code&gt;</bpt><ph id=\"ph3\">formatProvider</ph><ept id=\"p3\">&lt;/code&gt;</ept>, and <bpt id=\"p4\">&lt;code&gt;</bpt><ph id=\"ph4\">styles</ph><ept id=\"p4\">&lt;/code&gt;</ept> parameters.","source":"An object that is equivalent to the date and time that is contained in the <code>input</code> parameter, as specified by the <code>formats</code>, <code>formatProvider</code>, and <code>styles</code> parameters."}],"pos":[237893,238105],"yaml":true},{"content":"The offset is greater than 14 hours or less than -14 hours.  \n  \n -or-  \n  \n <code>styles</code> includes an unsupported value.  \n  \n -or-  \n  \n The <code>styles</code> parameter contains <xref href=\"System.Globalization.DateTimeStyles\"></xref> values that cannot be used together.","nodes":[{"pos":[0,59],"content":"The offset is greater than 14 hours or less than -14 hours.","nodes":[{"content":"The offset is greater than 14 hours or less than -14 hours.","pos":[0,59]}]},{"pos":[66,70],"content":"-or-","nodes":[{"content":"-or-","pos":[0,4]}]},{"pos":[77,127],"content":"<ph id=\"ph1\">&lt;code&gt;styles&lt;/code&gt;</ph> includes an unsupported value.","source":"<code>styles</code> includes an unsupported value."},{"pos":[134,138],"content":"-or-","nodes":[{"content":"-or-","pos":[0,4]}]},{"pos":[145,281],"content":"The <bpt id=\"p1\">&lt;code&gt;</bpt><ph id=\"ph1\">styles</ph><ept id=\"p1\">&lt;/code&gt;</ept> parameter contains <ph id=\"ph2\">&lt;xref href=\"System.Globalization.DateTimeStyles\"&gt;&lt;/xref&gt;</ph> values that cannot be used together.","source":"The <code>styles</code> parameter contains <xref href=\"System.Globalization.DateTimeStyles\"></xref> values that cannot be used together."}],"pos":[238259,238553],"yaml":true},{"content":"<code>input</code> is `null`.","nodes":[{"pos":[0,29],"content":"<ph id=\"ph1\">&lt;code&gt;input&lt;/code&gt;</ph> is <ph id=\"ph2\">`null`</ph>.","source":"<code>input</code> is `null`."}],"pos":[238655,238685],"yaml":true},{"content":"<code>input</code> is an empty string (\"\").  \n  \n -or-  \n  \n <code>input</code> does not contain a valid string representation of a date and time.  \n  \n -or-  \n  \n No element of <code>formats</code> contains a valid format specifier.  \n  \n -or-  \n  \n The hour component and the AM/PM designator in <code>input</code> do not agree.","nodes":[{"pos":[0,43],"content":"<ph id=\"ph1\">&lt;code&gt;input&lt;/code&gt;</ph> is an empty string (\"\").","source":"<code>input</code> is an empty string (\"\")."},{"pos":[50,54],"content":"-or-","nodes":[{"content":"-or-","pos":[0,4]}]},{"pos":[61,146],"content":"<ph id=\"ph1\">&lt;code&gt;input&lt;/code&gt;</ph> does not contain a valid string representation of a date and time.","source":"<code>input</code> does not contain a valid string representation of a date and time."},{"pos":[153,157],"content":"-or-","nodes":[{"content":"-or-","pos":[0,4]}]},{"pos":[164,233],"content":"No element of <bpt id=\"p1\">&lt;code&gt;</bpt><ph id=\"ph1\">formats</ph><ept id=\"p1\">&lt;/code&gt;</ept> contains a valid format specifier.","source":"No element of <code>formats</code> contains a valid format specifier."},{"pos":[240,244],"content":"-or-","nodes":[{"content":"-or-","pos":[0,4]}]},{"pos":[251,330],"content":"The hour component and the AM/PM designator in <bpt id=\"p1\">&lt;code&gt;</bpt><ph id=\"ph1\">input</ph><ept id=\"p1\">&lt;/code&gt;</ept> do not agree.","source":"The hour component and the AM/PM designator in <code>input</code> do not agree."}],"pos":[238775,239122],"yaml":true},{"content":"Gets the second component of the clock time represented by the current <xref href=\"System.DateTimeOffset\"></xref> object.","nodes":[{"pos":[0,121],"content":"Gets the second component of the clock time represented by the current <ph id=\"ph1\">&lt;xref href=\"System.DateTimeOffset\"&gt;&lt;/xref&gt;</ph> object.","source":"Gets the second component of the clock time represented by the current <xref href=\"System.DateTimeOffset\"></xref> object."}],"pos":[240526,240648],"yaml":true},{"content":"The <xref:System.DateTimeOffset.Second%2A> property is not affected by the value of the <xref:System.DateTimeOffset.Offset%2A> property.  \n  \n You can also create a string representation of a <xref:System.DateTimeOffset> object's second component by calling the <xref:System.DateTimeOffset.ToString%2A> method with the \"s\", or \"ss\" custom format specifiers.","nodes":[{"pos":[0,136],"content":"The <xref:System.DateTimeOffset.Second%2A> property is not affected by the value of the <xref:System.DateTimeOffset.Offset%2A> property.","nodes":[{"content":"The <ph id=\"ph1\">&lt;xref:System.DateTimeOffset.Second%2A&gt;</ph> property is not affected by the value of the <ph id=\"ph2\">&lt;xref:System.DateTimeOffset.Offset%2A&gt;</ph> property.","pos":[0,136],"source":"The <xref:System.DateTimeOffset.Second%2A> property is not affected by the value of the <xref:System.DateTimeOffset.Offset%2A> property."}]},{"pos":[143,357],"content":"You can also create a string representation of a <xref:System.DateTimeOffset> object's second component by calling the <xref:System.DateTimeOffset.ToString%2A> method with the \"s\", or \"ss\" custom format specifiers.","nodes":[{"content":"You can also create a string representation of a <ph id=\"ph1\">&lt;xref:System.DateTimeOffset&gt;</ph> object's second component by calling the <ph id=\"ph2\">&lt;xref:System.DateTimeOffset.ToString%2A&gt;</ph> method with the \"s\", or \"ss\" custom format specifiers.","pos":[0,214],"source":"You can also create a string representation of a <xref:System.DateTimeOffset> object's second component by calling the <xref:System.DateTimeOffset.ToString%2A> method with the \"s\", or \"ss\" custom format specifiers."}]}],"pos":[240659,241025],"yaml":true,"extradata":"MT"},{"content":"The second component of the <xref href=\"System.DateTimeOffset\"></xref> object, expressed as an integer value between 0 and 59.","nodes":[{"pos":[0,126],"content":"The second component of the <ph id=\"ph1\">&lt;xref href=\"System.DateTimeOffset\"&gt;&lt;/xref&gt;</ph> object, expressed as an integer value between 0 and 59.","source":"The second component of the <xref href=\"System.DateTimeOffset\"></xref> object, expressed as an integer value between 0 and 59."}],"pos":[241925,242052],"yaml":true},{"content":"Subtracts a specified time interval from the current <xref href=\"System.DateTimeOffset\"></xref> object.","nodes":[{"pos":[0,103],"content":"Subtracts a specified time interval from the current <ph id=\"ph1\">&lt;xref href=\"System.DateTimeOffset\"&gt;&lt;/xref&gt;</ph> object.","source":"Subtracts a specified time interval from the current <xref href=\"System.DateTimeOffset\"></xref> object."}],"pos":[243606,243710],"yaml":true},{"content":"You can use the <xref:System.DateTimeOffset.Subtract%2A> method to subtract more than one kind of time interval (days, hours, minutes, seconds, or milliseconds) in a single operation. Its behavior is identical to the <xref:System.DateTimeOffset.op_Subtraction%28System.DateTimeOffset%2CSystem.TimeSpan%29> method, which defines the subtraction operator. The <xref:System.DateTimeOffset> structure also supports specialized addition methods (such as <xref:System.DateTimeOffset.AddDays%2A>, <xref:System.DateTimeOffset.AddHours%2A>, and <xref:System.DateTimeOffset.AddMinutes%2A>) that allow you to perform subtraction by assigning a negative value to the method parameter.  \n  \n> [!NOTE]\n>  This method returns a new <xref:System.DateTimeOffset> object. It does not modify the value of the current object by adding `timeSpan` to its date and time.  \n  \n The <xref:System.DateTimeOffset.Subtract%2A> method does not affect the value of the <xref:System.DateTimeOffset> object's <xref:System.DateTimeOffset.Offset%2A> property. The returned <xref:System.DateTimeOffset> object has the same offset as the original object.  \n  \n Because the current <xref:System.DateTimeOffset> object does not represent the date and time in a specific time zone, the <xref:System.DateTimeOffset.Subtract%28System.TimeSpan%29> method does not consider a particular time zone's adjustment rules when it performs the subtraction.","nodes":[{"pos":[0,672],"content":"You can use the <xref:System.DateTimeOffset.Subtract%2A> method to subtract more than one kind of time interval (days, hours, minutes, seconds, or milliseconds) in a single operation. Its behavior is identical to the <xref:System.DateTimeOffset.op_Subtraction%28System.DateTimeOffset%2CSystem.TimeSpan%29> method, which defines the subtraction operator. The <xref:System.DateTimeOffset> structure also supports specialized addition methods (such as <xref:System.DateTimeOffset.AddDays%2A>, <xref:System.DateTimeOffset.AddHours%2A>, and <xref:System.DateTimeOffset.AddMinutes%2A>) that allow you to perform subtraction by assigning a negative value to the method parameter.","nodes":[{"content":"You can use the <xref:System.DateTimeOffset.Subtract%2A> method to subtract more than one kind of time interval (days, hours, minutes, seconds, or milliseconds) in a single operation. Its behavior is identical to the <xref:System.DateTimeOffset.op_Subtraction%28System.DateTimeOffset%2CSystem.TimeSpan%29> method, which defines the subtraction operator. The <xref:System.DateTimeOffset> structure also supports specialized addition methods (such as <xref:System.DateTimeOffset.AddDays%2A>, <xref:System.DateTimeOffset.AddHours%2A>, and <xref:System.DateTimeOffset.AddMinutes%2A>) that allow you to perform subtraction by assigning a negative value to the method parameter.","pos":[0,672],"nodes":[{"content":"You can use the <ph id=\"ph1\">&lt;xref:System.DateTimeOffset.Subtract%2A&gt;</ph> method to subtract more than one kind of time interval (days, hours, minutes, seconds, or milliseconds) in a single operation.","pos":[0,183],"source":"You can use the <xref:System.DateTimeOffset.Subtract%2A> method to subtract more than one kind of time interval (days, hours, minutes, seconds, or milliseconds) in a single operation."},{"content":"Its behavior is identical to the <ph id=\"ph1\">&lt;xref:System.DateTimeOffset.op_Subtraction%28System.DateTimeOffset%2CSystem.TimeSpan%29&gt;</ph> method, which defines the subtraction operator.","pos":[184,353],"source":" Its behavior is identical to the <xref:System.DateTimeOffset.op_Subtraction%28System.DateTimeOffset%2CSystem.TimeSpan%29> method, which defines the subtraction operator."},{"content":"The <ph id=\"ph1\">&lt;xref:System.DateTimeOffset&gt;</ph> structure also supports specialized addition methods (such as <ph id=\"ph2\">&lt;xref:System.DateTimeOffset.AddDays%2A&gt;</ph>, <ph id=\"ph3\">&lt;xref:System.DateTimeOffset.AddHours%2A&gt;</ph>, and <ph id=\"ph4\">&lt;xref:System.DateTimeOffset.AddMinutes%2A&gt;</ph>) that allow you to perform subtraction by assigning a negative value to the method parameter.","pos":[354,672],"source":" The <xref:System.DateTimeOffset> structure also supports specialized addition methods (such as <xref:System.DateTimeOffset.AddDays%2A>, <xref:System.DateTimeOffset.AddHours%2A>, and <xref:System.DateTimeOffset.AddMinutes%2A>) that allow you to perform subtraction by assigning a negative value to the method parameter."}]}]},{"pos":[680,847],"content":"[!NOTE]\n This method returns a new <xref:System.DateTimeOffset> object. It does not modify the value of the current object by adding `timeSpan` to its date and time.","leadings":["","> "],"nodes":[{"content":" This method returns a new <xref:System.DateTimeOffset> object. It does not modify the value of the current object by adding `timeSpan` to its date and time.","pos":[8,165],"nodes":[{"content":"This method returns a new <ph id=\"ph1\">&lt;xref:System.DateTimeOffset&gt;</ph> object.","pos":[1,63],"source":" This method returns a new <xref:System.DateTimeOffset> object."},{"content":"It does not modify the value of the current object by adding <ph id=\"ph1\">`timeSpan`</ph> to its date and time.","pos":[64,157],"source":" It does not modify the value of the current object by adding `timeSpan` to its date and time."}]}]},{"pos":[854,1118],"content":"The <xref:System.DateTimeOffset.Subtract%2A> method does not affect the value of the <xref:System.DateTimeOffset> object's <xref:System.DateTimeOffset.Offset%2A> property. The returned <xref:System.DateTimeOffset> object has the same offset as the original object.","nodes":[{"content":"The <xref:System.DateTimeOffset.Subtract%2A> method does not affect the value of the <xref:System.DateTimeOffset> object's <xref:System.DateTimeOffset.Offset%2A> property. The returned <xref:System.DateTimeOffset> object has the same offset as the original object.","pos":[0,264],"nodes":[{"content":"The <ph id=\"ph1\">&lt;xref:System.DateTimeOffset.Subtract%2A&gt;</ph> method does not affect the value of the <ph id=\"ph2\">&lt;xref:System.DateTimeOffset&gt;</ph> object's <ph id=\"ph3\">&lt;xref:System.DateTimeOffset.Offset%2A&gt;</ph> property.","pos":[0,171],"source":"The <xref:System.DateTimeOffset.Subtract%2A> method does not affect the value of the <xref:System.DateTimeOffset> object's <xref:System.DateTimeOffset.Offset%2A> property."},{"content":"The returned <ph id=\"ph1\">&lt;xref:System.DateTimeOffset&gt;</ph> object has the same offset as the original object.","pos":[172,264],"source":" The returned <xref:System.DateTimeOffset> object has the same offset as the original object."}]}]},{"pos":[1125,1406],"content":"Because the current <xref:System.DateTimeOffset> object does not represent the date and time in a specific time zone, the <xref:System.DateTimeOffset.Subtract%28System.TimeSpan%29> method does not consider a particular time zone's adjustment rules when it performs the subtraction.","nodes":[{"content":"Because the current <ph id=\"ph1\">&lt;xref:System.DateTimeOffset&gt;</ph> object does not represent the date and time in a specific time zone, the <ph id=\"ph2\">&lt;xref:System.DateTimeOffset.Subtract%28System.TimeSpan%29&gt;</ph> method does not consider a particular time zone's adjustment rules when it performs the subtraction.","pos":[0,281],"source":"Because the current <xref:System.DateTimeOffset> object does not represent the date and time in a specific time zone, the <xref:System.DateTimeOffset.Subtract%28System.TimeSpan%29> method does not consider a particular time zone's adjustment rules when it performs the subtraction."}]}],"pos":[243721,245137],"yaml":true,"extradata":"MT"},{"content":"The time interval to subtract.","nodes":[{"pos":[0,30],"content":"The time interval to subtract.","nodes":[{"content":"The time interval to subtract.","pos":[0,30]}]}],"pos":[245717,245748],"yaml":true},{"content":"An object that is equal to the date and time represented by the current <xref href=\"System.DateTimeOffset\"></xref> object, minus the time interval represented by <code>value</code>.","nodes":[{"pos":[0,181],"content":"An object that is equal to the date and time represented by the current <ph id=\"ph1\">&lt;xref href=\"System.DateTimeOffset\"&gt;&lt;/xref&gt;</ph> object, minus the time interval represented by <bpt id=\"p1\">&lt;code&gt;</bpt><ph id=\"ph2\">value</ph><ept id=\"p1\">&lt;/code&gt;</ept>.","source":"An object that is equal to the date and time represented by the current <xref href=\"System.DateTimeOffset\"></xref> object, minus the time interval represented by <code>value</code>."}],"pos":[245813,245995],"yaml":true},{"content":"The resulting <xref href=\"System.DateTimeOffset\"></xref> value is less than <xref href=\"System.DateTimeOffset.MinValue\"></xref>.  \n  \n -or-  \n  \n The resulting <xref href=\"System.DateTimeOffset\"></xref> value is greater than <xref href=\"System.DateTimeOffset.MaxValue\"></xref>.","nodes":[{"pos":[0,128],"content":"The resulting <ph id=\"ph1\">&lt;xref href=\"System.DateTimeOffset\"&gt;&lt;/xref&gt;</ph> value is less than <ph id=\"ph2\">&lt;xref href=\"System.DateTimeOffset.MinValue\"&gt;&lt;/xref&gt;</ph>.","source":"The resulting <xref href=\"System.DateTimeOffset\"></xref> value is less than <xref href=\"System.DateTimeOffset.MinValue\"></xref>."},{"pos":[135,139],"content":"-or-","nodes":[{"content":"-or-","pos":[0,4]}]},{"pos":[146,277],"content":"The resulting <ph id=\"ph1\">&lt;xref href=\"System.DateTimeOffset\"&gt;&lt;/xref&gt;</ph> value is greater than <ph id=\"ph2\">&lt;xref href=\"System.DateTimeOffset.MaxValue\"&gt;&lt;/xref&gt;</ph>.","source":"The resulting <xref href=\"System.DateTimeOffset\"></xref> value is greater than <xref href=\"System.DateTimeOffset.MaxValue\"></xref>."}],"pos":[246167,246459],"yaml":true},{"content":"Subtracts a <xref href=\"System.DateTimeOffset\"></xref> value that represents a specific date and time from the current <xref href=\"System.DateTimeOffset\"></xref> object.","nodes":[{"pos":[0,169],"content":"Subtracts a <ph id=\"ph1\">&lt;xref href=\"System.DateTimeOffset\"&gt;&lt;/xref&gt;</ph> value that represents a specific date and time from the current <ph id=\"ph2\">&lt;xref href=\"System.DateTimeOffset\"&gt;&lt;/xref&gt;</ph> object.","source":"Subtracts a <xref href=\"System.DateTimeOffset\"></xref> value that represents a specific date and time from the current <xref href=\"System.DateTimeOffset\"></xref> object."}],"pos":[247990,248160],"yaml":true},{"content":"This method converts both <xref:System.DateTimeOffset> objects to Coordinated Universal Time (UTC) before calculating the time interval that separates them. This removes any effect that different offsets from UTC may have on the comparison.  \n  \n> [!NOTE]\n>  For languages that support custom operators, you can also perform date and time subtraction by using the subtraction operator. For details, see the <xref:System.DateTimeOffset.op_Subtraction%2A> method.  \n  \n Because neither the current <xref:System.DateTimeOffset> object nor the `value` parameter represent the date and time in a specific time zone, the <xref:System.DateTimeOffset.Subtract%28System.DateTimeOffset%29> method does not consider a particular time zone's adjustment rules when it subtracts dates and times.","nodes":[{"pos":[0,240],"content":"This method converts both <xref:System.DateTimeOffset> objects to Coordinated Universal Time (UTC) before calculating the time interval that separates them. This removes any effect that different offsets from UTC may have on the comparison.","nodes":[{"content":"This method converts both <xref:System.DateTimeOffset> objects to Coordinated Universal Time (UTC) before calculating the time interval that separates them. This removes any effect that different offsets from UTC may have on the comparison.","pos":[0,240],"nodes":[{"content":"This method converts both <ph id=\"ph1\">&lt;xref:System.DateTimeOffset&gt;</ph> objects to Coordinated Universal Time (UTC) before calculating the time interval that separates them.","pos":[0,156],"source":"This method converts both <xref:System.DateTimeOffset> objects to Coordinated Universal Time (UTC) before calculating the time interval that separates them."},{"content":"This removes any effect that different offsets from UTC may have on the comparison.","pos":[157,240]}]}]},{"pos":[248,461],"content":"[!NOTE]\n For languages that support custom operators, you can also perform date and time subtraction by using the subtraction operator. For details, see the <xref:System.DateTimeOffset.op_Subtraction%2A> method.","leadings":["","> "],"nodes":[{"content":" For languages that support custom operators, you can also perform date and time subtraction by using the subtraction operator. For details, see the <xref:System.DateTimeOffset.op_Subtraction%2A> method.","pos":[8,211],"nodes":[{"content":"For languages that support custom operators, you can also perform date and time subtraction by using the subtraction operator.","pos":[1,127]},{"content":"For details, see the <ph id=\"ph1\">&lt;xref:System.DateTimeOffset.op_Subtraction%2A&gt;</ph> method.","pos":[128,203],"source":" For details, see the <xref:System.DateTimeOffset.op_Subtraction%2A> method."}]}]},{"pos":[468,781],"content":"Because neither the current <ph id=\"ph1\">&lt;xref:System.DateTimeOffset&gt;</ph> object nor the <ph id=\"ph2\">`value`</ph> parameter represent the date and time in a specific time zone, the <ph id=\"ph3\">&lt;xref:System.DateTimeOffset.Subtract%28System.DateTimeOffset%29&gt;</ph> method does not consider a particular time zone's adjustment rules when it subtracts dates and times.","source":"Because neither the current <xref:System.DateTimeOffset> object nor the `value` parameter represent the date and time in a specific time zone, the <xref:System.DateTimeOffset.Subtract%28System.DateTimeOffset%29> method does not consider a particular time zone's adjustment rules when it subtracts dates and times."}],"pos":[248171,248960],"yaml":true,"extradata":"MT"},{"content":"An object that represents the value to subtract.","nodes":[{"pos":[0,48],"content":"An object that represents the value to subtract.","nodes":[{"content":"An object that represents the value to subtract.","pos":[0,48]}]}],"pos":[249570,249619],"yaml":true},{"content":"An object that specifies the interval between the two <xref href=\"System.DateTimeOffset\"></xref> objects.","nodes":[{"pos":[0,105],"content":"An object that specifies the interval between the two <ph id=\"ph1\">&lt;xref href=\"System.DateTimeOffset\"&gt;&lt;/xref&gt;</ph> objects.","source":"An object that specifies the interval between the two <xref href=\"System.DateTimeOffset\"></xref> objects."}],"pos":[249678,249784],"yaml":true},{"content":"Gets the number of ticks that represents the date and time of the current <xref href=\"System.DateTimeOffset\"></xref> object in clock time.","nodes":[{"pos":[0,138],"content":"Gets the number of ticks that represents the date and time of the current <ph id=\"ph1\">&lt;xref href=\"System.DateTimeOffset\"&gt;&lt;/xref&gt;</ph> object in clock time.","source":"Gets the number of ticks that represents the date and time of the current <xref href=\"System.DateTimeOffset\"></xref> object in clock time."}],"pos":[251243,251382],"yaml":true},{"content":"The <xref:System.DateTimeOffset.Ticks%2A> property is not affected by the value of the <xref:System.DateTimeOffset.Offset%2A> property.  \n  \n The value of the <xref:System.DateTimeOffset.Ticks%2A> property represents the number of 100-nanosecond intervals that have elapsed since 12:00:00 midnight on January 1, 0001 (the value of <xref:System.DateTimeOffset.MinValue>). It does not include ticks that would be added by leap seconds. A nanosecond is one billionth of a second; there are ten million ticks in a second. The value of the <xref:System.DateTimeOffset.Ticks%2A> property ranges from `DateTimeOffset.MinValue.Ticks` to `DateTimeOffset.MaxValue.Ticks`.  \n  \n You can assign the number of ticks to a <xref:System.DateTimeOffset> object by using the <xref:System.DateTimeOffset.%23ctor%28System.Int64%2CSystem.TimeSpan%29> constructor overload.","nodes":[{"pos":[0,135],"content":"The <xref:System.DateTimeOffset.Ticks%2A> property is not affected by the value of the <xref:System.DateTimeOffset.Offset%2A> property.","nodes":[{"content":"The <ph id=\"ph1\">&lt;xref:System.DateTimeOffset.Ticks%2A&gt;</ph> property is not affected by the value of the <ph id=\"ph2\">&lt;xref:System.DateTimeOffset.Offset%2A&gt;</ph> property.","pos":[0,135],"source":"The <xref:System.DateTimeOffset.Ticks%2A> property is not affected by the value of the <xref:System.DateTimeOffset.Offset%2A> property."}]},{"pos":[142,661],"content":"The value of the <xref:System.DateTimeOffset.Ticks%2A> property represents the number of 100-nanosecond intervals that have elapsed since 12:00:00 midnight on January 1, 0001 (the value of <xref:System.DateTimeOffset.MinValue>). It does not include ticks that would be added by leap seconds. A nanosecond is one billionth of a second; there are ten million ticks in a second. The value of the <xref:System.DateTimeOffset.Ticks%2A> property ranges from `DateTimeOffset.MinValue.Ticks` to `DateTimeOffset.MaxValue.Ticks`.","nodes":[{"content":"The value of the <ph id=\"ph1\">&lt;xref:System.DateTimeOffset.Ticks%2A&gt;</ph> property represents the number of 100-nanosecond intervals that have elapsed since 12:00:00 midnight on January 1, 0001 (the value of <ph id=\"ph2\">&lt;xref:System.DateTimeOffset.MinValue&gt;</ph>).","pos":[0,228],"source":"The value of the <xref:System.DateTimeOffset.Ticks%2A> property represents the number of 100-nanosecond intervals that have elapsed since 12:00:00 midnight on January 1, 0001 (the value of <xref:System.DateTimeOffset.MinValue>)."},{"content":"It does not include ticks that would be added by leap seconds.","pos":[229,291]},{"content":"A nanosecond is one billionth of a second; there are ten million ticks in a second.","pos":[292,375]},{"content":"The value of the <ph id=\"ph1\">&lt;xref:System.DateTimeOffset.Ticks%2A&gt;</ph> property ranges from <ph id=\"ph2\">`DateTimeOffset.MinValue.Ticks`</ph> to <ph id=\"ph3\">`DateTimeOffset.MaxValue.Ticks`</ph>.","pos":[376,519],"source":" The value of the <xref:System.DateTimeOffset.Ticks%2A> property ranges from `DateTimeOffset.MinValue.Ticks` to `DateTimeOffset.MaxValue.Ticks`."}]},{"pos":[668,851],"content":"You can assign the number of ticks to a <xref:System.DateTimeOffset> object by using the <xref:System.DateTimeOffset.%23ctor%28System.Int64%2CSystem.TimeSpan%29> constructor overload.","nodes":[{"content":"You can assign the number of ticks to a <ph id=\"ph1\">&lt;xref:System.DateTimeOffset&gt;</ph> object by using the <ph id=\"ph2\">&lt;xref:System.DateTimeOffset.%23ctor%28System.Int64%2CSystem.TimeSpan%29&gt;</ph> constructor overload.","pos":[0,183],"source":"You can assign the number of ticks to a <xref:System.DateTimeOffset> object by using the <xref:System.DateTimeOffset.%23ctor%28System.Int64%2CSystem.TimeSpan%29> constructor overload."}]}],"pos":[251393,252251],"yaml":true,"extradata":"MT"},{"content":"The number of ticks in the <xref href=\"System.DateTimeOffset\"></xref> object's clock time.","nodes":[{"pos":[0,90],"content":"The number of ticks in the <ph id=\"ph1\">&lt;xref href=\"System.DateTimeOffset\"&gt;&lt;/xref&gt;</ph> object's clock time.","source":"The number of ticks in the <xref href=\"System.DateTimeOffset\"></xref> object's clock time."}],"pos":[252929,253020],"yaml":true},{"content":"Gets the time of day for the current <xref href=\"System.DateTimeOffset\"></xref> object.","nodes":[{"pos":[0,87],"content":"Gets the time of day for the current <ph id=\"ph1\">&lt;xref href=\"System.DateTimeOffset\"&gt;&lt;/xref&gt;</ph> object.","source":"Gets the time of day for the current <xref href=\"System.DateTimeOffset\"></xref> object."}],"pos":[254500,254588],"yaml":true},{"content":"The <xref:System.DateTimeOffset.TimeOfDay%2A> property is not affected by the value of the <xref:System.DateTimeOffset.Offset%2A> property.  \n  \n The <xref:System.DateTimeOffset.TimeOfDay%2A> property returns the time component of a <xref:System.DateTimeOffset> object in the form of a <xref:System.TimeSpan> object. It is equivalent to the <xref:System.DateTime.TimeOfDay%2A?displayProperty=fullName> property.","nodes":[{"pos":[0,139],"content":"The <xref:System.DateTimeOffset.TimeOfDay%2A> property is not affected by the value of the <xref:System.DateTimeOffset.Offset%2A> property.","nodes":[{"content":"The <ph id=\"ph1\">&lt;xref:System.DateTimeOffset.TimeOfDay%2A&gt;</ph> property is not affected by the value of the <ph id=\"ph2\">&lt;xref:System.DateTimeOffset.Offset%2A&gt;</ph> property.","pos":[0,139],"source":"The <xref:System.DateTimeOffset.TimeOfDay%2A> property is not affected by the value of the <xref:System.DateTimeOffset.Offset%2A> property."}]},{"pos":[146,411],"content":"The <xref:System.DateTimeOffset.TimeOfDay%2A> property returns the time component of a <xref:System.DateTimeOffset> object in the form of a <xref:System.TimeSpan> object. It is equivalent to the <xref:System.DateTime.TimeOfDay%2A?displayProperty=fullName> property.","nodes":[{"content":"The <xref:System.DateTimeOffset.TimeOfDay%2A> property returns the time component of a <xref:System.DateTimeOffset> object in the form of a <xref:System.TimeSpan> object. It is equivalent to the <xref:System.DateTime.TimeOfDay%2A?displayProperty=fullName> property.","pos":[0,265],"nodes":[{"content":"The <ph id=\"ph1\">&lt;xref:System.DateTimeOffset.TimeOfDay%2A&gt;</ph> property returns the time component of a <ph id=\"ph2\">&lt;xref:System.DateTimeOffset&gt;</ph> object in the form of a <ph id=\"ph3\">&lt;xref:System.TimeSpan&gt;</ph> object.","pos":[0,170],"source":"The <xref:System.DateTimeOffset.TimeOfDay%2A> property returns the time component of a <xref:System.DateTimeOffset> object in the form of a <xref:System.TimeSpan> object."},{"content":"It is equivalent to the <ph id=\"ph1\">&lt;xref:System.DateTime.TimeOfDay%2A?displayProperty=fullName&gt;</ph> property.","pos":[171,265],"source":" It is equivalent to the <xref:System.DateTime.TimeOfDay%2A?displayProperty=fullName> property."}]}]}],"pos":[254599,255015],"yaml":true,"extradata":"MT"},{"content":"The time interval of the current date that has elapsed since midnight.","nodes":[{"pos":[0,70],"content":"The time interval of the current date that has elapsed since midnight.","nodes":[{"content":"The time interval of the current date that has elapsed since midnight.","pos":[0,70]}]}],"pos":[255603,255674],"yaml":true},{"content":"Converts the value of the current <xref href=\"System.DateTimeOffset\"></xref> object to a Windows file time.","nodes":[{"pos":[0,107],"content":"Converts the value of the current <ph id=\"ph1\">&lt;xref href=\"System.DateTimeOffset\"&gt;&lt;/xref&gt;</ph> object to a Windows file time.","source":"Converts the value of the current <xref href=\"System.DateTimeOffset\"></xref> object to a Windows file time."}],"pos":[257168,257276],"yaml":true},{"content":"A Windows file time is a 64-bit value that represents the number of 100-nanosecond intervals that have elapsed since 12:00 midnight, January 1, 1601 A.D. (C.E.) Coordinated Universal Time (UTC). Windows uses a file time to record when an application creates, accesses, or writes to a file.  \n  \n The <xref:System.DateTimeOffset.ToFileTime%2A> method converts the current <xref:System.DateTimeOffset> object's date and time to UTC before it performs the conversion. In other words, calling the <xref:System.DateTimeOffset.ToFileTime%2A> method is equivalent to the following method call:  \n  \n```csharp  \nthis.ToUtcDateTime().ToFileTime();  \n```  \n  \n```vb  \nMe.ToUtcDateTime().ToFileTime()  \n```","nodes":[{"pos":[0,289],"content":"A Windows file time is a 64-bit value that represents the number of 100-nanosecond intervals that have elapsed since 12:00 midnight, January 1, 1601 A.D. (C.E.) Coordinated Universal Time (UTC). Windows uses a file time to record when an application creates, accesses, or writes to a file.","nodes":[{"content":"A Windows file time is a 64-bit value that represents the number of 100-nanosecond intervals that have elapsed since 12:00 midnight, January 1, 1601 A.D. (C.E.) Coordinated Universal Time (UTC). Windows uses a file time to record when an application creates, accesses, or writes to a file.","pos":[0,289],"nodes":[{"content":"A Windows file time is a 64-bit value that represents the number of 100-nanosecond intervals that have elapsed since 12:00 midnight, January 1, 1601 A.D.","pos":[0,153]},{"content":"(C.E.) Coordinated Universal Time (UTC).","pos":[154,194]},{"content":"Windows uses a file time to record when an application creates, accesses, or writes to a file.","pos":[195,289]}]}]},{"pos":[296,586],"content":"The <xref:System.DateTimeOffset.ToFileTime%2A> method converts the current <xref:System.DateTimeOffset> object's date and time to UTC before it performs the conversion. In other words, calling the <xref:System.DateTimeOffset.ToFileTime%2A> method is equivalent to the following method call:","nodes":[{"content":"The <xref:System.DateTimeOffset.ToFileTime%2A> method converts the current <xref:System.DateTimeOffset> object's date and time to UTC before it performs the conversion. In other words, calling the <xref:System.DateTimeOffset.ToFileTime%2A> method is equivalent to the following method call:","pos":[0,290],"nodes":[{"content":"The <ph id=\"ph1\">&lt;xref:System.DateTimeOffset.ToFileTime%2A&gt;</ph> method converts the current <ph id=\"ph2\">&lt;xref:System.DateTimeOffset&gt;</ph> object's date and time to UTC before it performs the conversion.","pos":[0,168],"source":"The <xref:System.DateTimeOffset.ToFileTime%2A> method converts the current <xref:System.DateTimeOffset> object's date and time to UTC before it performs the conversion."},{"content":"In other words, calling the <ph id=\"ph1\">&lt;xref:System.DateTimeOffset.ToFileTime%2A&gt;</ph> method is equivalent to the following method call:","pos":[169,290],"source":" In other words, calling the <xref:System.DateTimeOffset.ToFileTime%2A> method is equivalent to the following method call:"}]}]}],"pos":[257287,257995],"yaml":true,"extradata":"MT"},{"content":"The value of the current <xref href=\"System.DateTimeOffset\"></xref> object, expressed as a Windows file time.","nodes":[{"pos":[0,109],"content":"The value of the current <ph id=\"ph1\">&lt;xref href=\"System.DateTimeOffset\"&gt;&lt;/xref&gt;</ph> object, expressed as a Windows file time.","source":"The value of the current <xref href=\"System.DateTimeOffset\"></xref> object, expressed as a Windows file time."}],"pos":[258120,258230],"yaml":true},{"content":"The resulting file time would represent a date and time before midnight on January 1, 1601 C.E. Coordinated Universal Time (UTC).","nodes":[{"pos":[0,129],"content":"The resulting file time would represent a date and time before midnight on January 1, 1601 C.E. Coordinated Universal Time (UTC).","nodes":[{"content":"The resulting file time would represent a date and time before midnight on January 1, 1601 C.E. Coordinated Universal Time (UTC).","pos":[0,129],"nodes":[{"content":"The resulting file time would represent a date and time before midnight on January 1, 1601 C.E.","pos":[0,95]},{"content":"Coordinated Universal Time (UTC).","pos":[96,129]}]}]}],"pos":[258404,258534],"yaml":true},{"content":"Converts the current <xref href=\"System.DateTimeOffset\"></xref> object to a <xref href=\"System.DateTimeOffset\"></xref> object that represents the local time.","nodes":[{"pos":[0,157],"content":"Converts the current <ph id=\"ph1\">&lt;xref href=\"System.DateTimeOffset\"&gt;&lt;/xref&gt;</ph> object to a <ph id=\"ph2\">&lt;xref href=\"System.DateTimeOffset\"&gt;&lt;/xref&gt;</ph> object that represents the local time.","source":"Converts the current <xref href=\"System.DateTimeOffset\"></xref> object to a <xref href=\"System.DateTimeOffset\"></xref> object that represents the local time."}],"pos":[259972,260130],"yaml":true},{"content":"In performing the conversion to local time, the method first converts the current <xref:System.DateTimeOffset> object's date and time to Coordinated Universal Time (UTC) by subtracting the offset from the time. It then converts the UTC date and time to local time by adding the local time zone offset. In doing this, it takes account of any adjustment rules for the local time zone.  \n  \n Both the value of the current <xref:System.DateTimeOffset> object and the value of the <xref:System.DateTimeOffset> object returned by the method call represent the same point in time. That is, if both are passed to the <xref:System.DateTimeOffset.Equals%28System.DateTimeOffset%2CSystem.DateTimeOffset%29?displayProperty=fullName> method, the method will return `true`.  \n  \n If the conversion causes a time that is out of range of the <xref:System.DateTimeOffset> type, the <xref:System.DateTimeOffset.ToLocalTime%2A> method returns a <xref:System.DateTimeOffset> object that has the date and time set to either <xref:System.DateTimeOffset.MaxValue> or <xref:System.DateTimeOffset.MinValue> and the offset set to the local time zone offset.","nodes":[{"pos":[0,382],"content":"In performing the conversion to local time, the method first converts the current <xref:System.DateTimeOffset> object's date and time to Coordinated Universal Time (UTC) by subtracting the offset from the time. It then converts the UTC date and time to local time by adding the local time zone offset. In doing this, it takes account of any adjustment rules for the local time zone.","nodes":[{"content":"In performing the conversion to local time, the method first converts the current <xref:System.DateTimeOffset> object's date and time to Coordinated Universal Time (UTC) by subtracting the offset from the time. It then converts the UTC date and time to local time by adding the local time zone offset. In doing this, it takes account of any adjustment rules for the local time zone.","pos":[0,382],"nodes":[{"content":"In performing the conversion to local time, the method first converts the current <ph id=\"ph1\">&lt;xref:System.DateTimeOffset&gt;</ph> object's date and time to Coordinated Universal Time (UTC) by subtracting the offset from the time.","pos":[0,210],"source":"In performing the conversion to local time, the method first converts the current <xref:System.DateTimeOffset> object's date and time to Coordinated Universal Time (UTC) by subtracting the offset from the time."},{"content":"It then converts the UTC date and time to local time by adding the local time zone offset.","pos":[211,301]},{"content":"In doing this, it takes account of any adjustment rules for the local time zone.","pos":[302,382]}]}]},{"pos":[389,759],"content":"Both the value of the current <xref:System.DateTimeOffset> object and the value of the <xref:System.DateTimeOffset> object returned by the method call represent the same point in time. That is, if both are passed to the <xref:System.DateTimeOffset.Equals%28System.DateTimeOffset%2CSystem.DateTimeOffset%29?displayProperty=fullName> method, the method will return `true`.","nodes":[{"content":"Both the value of the current <ph id=\"ph1\">&lt;xref:System.DateTimeOffset&gt;</ph> object and the value of the <ph id=\"ph2\">&lt;xref:System.DateTimeOffset&gt;</ph> object returned by the method call represent the same point in time.","pos":[0,184],"source":"Both the value of the current <xref:System.DateTimeOffset> object and the value of the <xref:System.DateTimeOffset> object returned by the method call represent the same point in time."},{"content":"That is, if both are passed to the <ph id=\"ph1\">&lt;xref:System.DateTimeOffset.Equals%28System.DateTimeOffset%2CSystem.DateTimeOffset%29?displayProperty=fullName&gt;</ph> method, the method will return <ph id=\"ph2\">`true`</ph>.","pos":[185,370],"source":" That is, if both are passed to the <xref:System.DateTimeOffset.Equals%28System.DateTimeOffset%2CSystem.DateTimeOffset%29?displayProperty=fullName> method, the method will return `true`."}]},{"pos":[766,1131],"content":"If the conversion causes a time that is out of range of the <xref:System.DateTimeOffset> type, the <xref:System.DateTimeOffset.ToLocalTime%2A> method returns a <xref:System.DateTimeOffset> object that has the date and time set to either <xref:System.DateTimeOffset.MaxValue> or <xref:System.DateTimeOffset.MinValue> and the offset set to the local time zone offset.","nodes":[{"content":"If the conversion causes a time that is out of range of the <ph id=\"ph1\">&lt;xref:System.DateTimeOffset&gt;</ph> type, the <ph id=\"ph2\">&lt;xref:System.DateTimeOffset.ToLocalTime%2A&gt;</ph> method returns a <ph id=\"ph3\">&lt;xref:System.DateTimeOffset&gt;</ph> object that has the date and time set to either <ph id=\"ph4\">&lt;xref:System.DateTimeOffset.MaxValue&gt;</ph> or <ph id=\"ph5\">&lt;xref:System.DateTimeOffset.MinValue&gt;</ph> and the offset set to the local time zone offset.","pos":[0,365],"source":"If the conversion causes a time that is out of range of the <xref:System.DateTimeOffset> type, the <xref:System.DateTimeOffset.ToLocalTime%2A> method returns a <xref:System.DateTimeOffset> object that has the date and time set to either <xref:System.DateTimeOffset.MaxValue> or <xref:System.DateTimeOffset.MinValue> and the offset set to the local time zone offset."}]}],"pos":[260141,261279],"yaml":true,"extradata":"MT"},{"content":"An object that represents the date and time of the current <xref href=\"System.DateTimeOffset\"></xref> object converted to local time.","nodes":[{"pos":[0,133],"content":"An object that represents the date and time of the current <ph id=\"ph1\">&lt;xref href=\"System.DateTimeOffset\"&gt;&lt;/xref&gt;</ph> object converted to local time.","source":"An object that represents the date and time of the current <xref href=\"System.DateTimeOffset\"></xref> object converted to local time."}],"pos":[262008,262142],"yaml":true},{"content":"Converts the value of the current <xref href=\"System.DateTimeOffset\"></xref> object to the date and time specified by an offset value.","nodes":[{"pos":[0,134],"content":"Converts the value of the current <ph id=\"ph1\">&lt;xref href=\"System.DateTimeOffset\"&gt;&lt;/xref&gt;</ph> object to the date and time specified by an offset value.","source":"Converts the value of the current <xref href=\"System.DateTimeOffset\"></xref> object to the date and time specified by an offset value."}],"pos":[263701,263836],"yaml":true},{"content":"The <xref:System.DateTimeOffset.ToOffset%2A> method is an alternative to calling the <xref:System.TimeZoneInfo.ConvertTime%28System.DateTimeOffset%2CSystem.TimeZoneInfo%29?displayProperty=fullName> method. It can be useful for performing simple conversions from one time zone to another when the time zones' offsets from Coordinated Universal Time (UTC) are known. However, because neither the original <xref:System.DateTimeOffset> object nor the new <xref:System.DateTimeOffset> object returned by the method call are unambiguously related to a particular time zone, the method does not apply any time zone adjustment rules in the conversion.","nodes":[{"pos":[0,643],"content":"The <xref:System.DateTimeOffset.ToOffset%2A> method is an alternative to calling the <xref:System.TimeZoneInfo.ConvertTime%28System.DateTimeOffset%2CSystem.TimeZoneInfo%29?displayProperty=fullName> method. It can be useful for performing simple conversions from one time zone to another when the time zones' offsets from Coordinated Universal Time (UTC) are known. However, because neither the original <xref:System.DateTimeOffset> object nor the new <xref:System.DateTimeOffset> object returned by the method call are unambiguously related to a particular time zone, the method does not apply any time zone adjustment rules in the conversion.","nodes":[{"content":"The <xref:System.DateTimeOffset.ToOffset%2A> method is an alternative to calling the <xref:System.TimeZoneInfo.ConvertTime%28System.DateTimeOffset%2CSystem.TimeZoneInfo%29?displayProperty=fullName> method. It can be useful for performing simple conversions from one time zone to another when the time zones' offsets from Coordinated Universal Time (UTC) are known. However, because neither the original <xref:System.DateTimeOffset> object nor the new <xref:System.DateTimeOffset> object returned by the method call are unambiguously related to a particular time zone, the method does not apply any time zone adjustment rules in the conversion.","pos":[0,643],"nodes":[{"content":"The <ph id=\"ph1\">&lt;xref:System.DateTimeOffset.ToOffset%2A&gt;</ph> method is an alternative to calling the <ph id=\"ph2\">&lt;xref:System.TimeZoneInfo.ConvertTime%28System.DateTimeOffset%2CSystem.TimeZoneInfo%29?displayProperty=fullName&gt;</ph> method.","pos":[0,205],"source":"The <xref:System.DateTimeOffset.ToOffset%2A> method is an alternative to calling the <xref:System.TimeZoneInfo.ConvertTime%28System.DateTimeOffset%2CSystem.TimeZoneInfo%29?displayProperty=fullName> method."},{"content":"It can be useful for performing simple conversions from one time zone to another when the time zones' offsets from Coordinated Universal Time (UTC) are known.","pos":[206,364]},{"content":"However, because neither the original <ph id=\"ph1\">&lt;xref:System.DateTimeOffset&gt;</ph> object nor the new <ph id=\"ph2\">&lt;xref:System.DateTimeOffset&gt;</ph> object returned by the method call are unambiguously related to a particular time zone, the method does not apply any time zone adjustment rules in the conversion.","pos":[365,643],"source":" However, because neither the original <xref:System.DateTimeOffset> object nor the new <xref:System.DateTimeOffset> object returned by the method call are unambiguously related to a particular time zone, the method does not apply any time zone adjustment rules in the conversion."}]}]}],"pos":[263847,264491],"yaml":true,"extradata":"MT"},{"content":"The offset to convert the <xref href=\"System.DateTimeOffset\"></xref> value to.","nodes":[{"pos":[0,78],"content":"The offset to convert the <ph id=\"ph1\">&lt;xref href=\"System.DateTimeOffset\"&gt;&lt;/xref&gt;</ph> value to.","source":"The offset to convert the <xref href=\"System.DateTimeOffset\"></xref> value to."}],"pos":[265178,265257],"yaml":true},{"content":"An object that is equal to the original <xref href=\"System.DateTimeOffset\"></xref> object (that is, their <xref href=\"System.DateTimeOffset.ToUniversalTime\"></xref> methods return identical points in time) but whose <xref href=\"System.DateTimeOffset.Offset\"></xref> property is set to <code>offset</code>.","nodes":[{"pos":[0,305],"content":"An object that is equal to the original <ph id=\"ph1\">&lt;xref href=\"System.DateTimeOffset\"&gt;&lt;/xref&gt;</ph> object (that is, their <ph id=\"ph2\">&lt;xref href=\"System.DateTimeOffset.ToUniversalTime\"&gt;&lt;/xref&gt;</ph> methods return identical points in time) but whose <ph id=\"ph3\">&lt;xref href=\"System.DateTimeOffset.Offset\"&gt;&lt;/xref&gt;</ph> property is set to <bpt id=\"p1\">&lt;code&gt;</bpt><ph id=\"ph4\">offset</ph><ept id=\"p1\">&lt;/code&gt;</ept>.","source":"An object that is equal to the original <xref href=\"System.DateTimeOffset\"></xref> object (that is, their <xref href=\"System.DateTimeOffset.ToUniversalTime\"></xref> methods return identical points in time) but whose <xref href=\"System.DateTimeOffset.Offset\"></xref> property is set to <code>offset</code>."}],"pos":[265322,265628],"yaml":true},{"content":"The resulting <xref href=\"System.DateTimeOffset\"></xref> object has a <xref href=\"System.DateTimeOffset.DateTime\"></xref> value earlier than <xref href=\"System.DateTimeOffset.MinValue\"></xref>.  \n  \n -or-  \n  \n The resulting <xref href=\"System.DateTimeOffset\"></xref> object has a <xref href=\"System.DateTimeOffset.DateTime\"></xref> value later than <xref href=\"System.DateTimeOffset.MaxValue\"></xref>.","nodes":[{"pos":[0,193],"content":"The resulting <ph id=\"ph1\">&lt;xref href=\"System.DateTimeOffset\"&gt;&lt;/xref&gt;</ph> object has a <ph id=\"ph2\">&lt;xref href=\"System.DateTimeOffset.DateTime\"&gt;&lt;/xref&gt;</ph> value earlier than <ph id=\"ph3\">&lt;xref href=\"System.DateTimeOffset.MinValue\"&gt;&lt;/xref&gt;</ph>.","source":"The resulting <xref href=\"System.DateTimeOffset\"></xref> object has a <xref href=\"System.DateTimeOffset.DateTime\"></xref> value earlier than <xref href=\"System.DateTimeOffset.MinValue\"></xref>."},{"pos":[200,204],"content":"-or-","nodes":[{"content":"-or-","pos":[0,4]}]},{"pos":[211,402],"content":"The resulting <ph id=\"ph1\">&lt;xref href=\"System.DateTimeOffset\"&gt;&lt;/xref&gt;</ph> object has a <ph id=\"ph2\">&lt;xref href=\"System.DateTimeOffset.DateTime\"&gt;&lt;/xref&gt;</ph> value later than <ph id=\"ph3\">&lt;xref href=\"System.DateTimeOffset.MaxValue\"&gt;&lt;/xref&gt;</ph>.","source":"The resulting <xref href=\"System.DateTimeOffset\"></xref> object has a <xref href=\"System.DateTimeOffset.DateTime\"></xref> value later than <xref href=\"System.DateTimeOffset.MaxValue\"></xref>."}],"pos":[265780,266201],"yaml":true},{"content":"<code>offset</code> is less than -14 hours.  \n  \n -or-  \n  \n <code>offset</code> is greater than 14 hours.","nodes":[{"pos":[0,43],"content":"<ph id=\"ph1\">&lt;code&gt;offset&lt;/code&gt;</ph> is less than -14 hours.","source":"<code>offset</code> is less than -14 hours."},{"pos":[50,54],"content":"-or-","nodes":[{"content":"-or-","pos":[0,4]}]},{"pos":[61,106],"content":"<ph id=\"ph1\">&lt;code&gt;offset&lt;/code&gt;</ph> is greater than 14 hours.","source":"<code>offset</code> is greater than 14 hours."}],"pos":[266315,266428],"yaml":true},{"content":"Converts the value of the current <xref href=\"System.DateTimeOffset\"></xref> object to its equivalent string representation.","nodes":[{"pos":[0,124],"content":"Converts the value of the current <ph id=\"ph1\">&lt;xref href=\"System.DateTimeOffset\"&gt;&lt;/xref&gt;</ph> object to its equivalent string representation.","source":"Converts the value of the current <xref href=\"System.DateTimeOffset\"></xref> object to its equivalent string representation."}],"pos":[267848,267973],"yaml":true},{"content":"The return value of this method is identical to that of the <xref:System.DateTime.ToString?displayProperty=fullName> method, except that it includes a space followed by the offset appended at the end of the string. In other words, it formats output using the short date pattern, the long time pattern, and the `zzz` custom format string, with each element separated from the previous element by a space. For example, if <xref:System.DateTime.ToString?displayProperty=fullName> returns a value of 1/12/2008 6:15:50 PM, <xref:System.DateTimeOffset.ToString> returns a value of 1/12/2008 6:15:50 PM -08:00 for a time that is eight hours behind Coordinated Universal Time (UTC).  \n  \n This method uses formatting information derived from the current culture. For more information, see <xref:System.Globalization.CultureInfo.CurrentCulture%2A>. Other overloads of the <xref:System.DateTimeOffset.ToString%2A> method enable you to specify the culture whose formatting to use, and to define the output pattern of the <xref:System.DateTimeOffset> value.","nodes":[{"pos":[0,674],"content":"The return value of this method is identical to that of the <xref:System.DateTime.ToString?displayProperty=fullName> method, except that it includes a space followed by the offset appended at the end of the string. In other words, it formats output using the short date pattern, the long time pattern, and the `zzz` custom format string, with each element separated from the previous element by a space. For example, if <xref:System.DateTime.ToString?displayProperty=fullName> returns a value of 1/12/2008 6:15:50 PM, <xref:System.DateTimeOffset.ToString> returns a value of 1/12/2008 6:15:50 PM -08:00 for a time that is eight hours behind Coordinated Universal Time (UTC).","nodes":[{"content":"The return value of this method is identical to that of the <ph id=\"ph1\">&lt;xref:System.DateTime.ToString?displayProperty=fullName&gt;</ph> method, except that it includes a space followed by the offset appended at the end of the string.","pos":[0,214],"source":"The return value of this method is identical to that of the <xref:System.DateTime.ToString?displayProperty=fullName> method, except that it includes a space followed by the offset appended at the end of the string."},{"content":"In other words, it formats output using the short date pattern, the long time pattern, and the <ph id=\"ph1\">`zzz`</ph> custom format string, with each element separated from the previous element by a space.","pos":[215,403],"source":" In other words, it formats output using the short date pattern, the long time pattern, and the `zzz` custom format string, with each element separated from the previous element by a space."},{"content":"For example, if <ph id=\"ph1\">&lt;xref:System.DateTime.ToString?displayProperty=fullName&gt;</ph> returns a value of 1/12/2008 6:15:50 PM, <ph id=\"ph2\">&lt;xref:System.DateTimeOffset.ToString&gt;</ph> returns a value of 1/12/2008 6:15:50 PM -08:00 for a time that is eight hours behind Coordinated Universal Time (UTC).","pos":[404,674],"source":" For example, if <xref:System.DateTime.ToString?displayProperty=fullName> returns a value of 1/12/2008 6:15:50 PM, <xref:System.DateTimeOffset.ToString> returns a value of 1/12/2008 6:15:50 PM -08:00 for a time that is eight hours behind Coordinated Universal Time (UTC)."}]},{"pos":[681,1045],"content":"This method uses formatting information derived from the current culture. For more information, see <xref:System.Globalization.CultureInfo.CurrentCulture%2A>. Other overloads of the <xref:System.DateTimeOffset.ToString%2A> method enable you to specify the culture whose formatting to use, and to define the output pattern of the <xref:System.DateTimeOffset> value.","nodes":[{"content":"This method uses formatting information derived from the current culture. For more information, see <xref:System.Globalization.CultureInfo.CurrentCulture%2A>. Other overloads of the <xref:System.DateTimeOffset.ToString%2A> method enable you to specify the culture whose formatting to use, and to define the output pattern of the <xref:System.DateTimeOffset> value.","pos":[0,364],"nodes":[{"content":"This method uses formatting information derived from the current culture.","pos":[0,73]},{"content":"For more information, see <ph id=\"ph1\">&lt;xref:System.Globalization.CultureInfo.CurrentCulture%2A&gt;</ph>.","pos":[74,158],"source":" For more information, see <xref:System.Globalization.CultureInfo.CurrentCulture%2A>."},{"content":"Other overloads of the <ph id=\"ph1\">&lt;xref:System.DateTimeOffset.ToString%2A&gt;</ph> method enable you to specify the culture whose formatting to use, and to define the output pattern of the <ph id=\"ph2\">&lt;xref:System.DateTimeOffset&gt;</ph> value.","pos":[159,364],"source":" Other overloads of the <xref:System.DateTimeOffset.ToString%2A> method enable you to specify the culture whose formatting to use, and to define the output pattern of the <xref:System.DateTimeOffset> value."}]}]}],"pos":[267984,269034],"yaml":true,"extradata":"MT"},{"content":"A string representation of a <xref href=\"System.DateTimeOffset\"></xref> object that includes the offset appended at the end of the string.","nodes":[{"pos":[0,138],"content":"A string representation of a <ph id=\"ph1\">&lt;xref href=\"System.DateTimeOffset\"&gt;&lt;/xref&gt;</ph> object that includes the offset appended at the end of the string.","source":"A string representation of a <xref href=\"System.DateTimeOffset\"></xref> object that includes the offset appended at the end of the string."}],"pos":[269651,269790],"yaml":true},{"content":"The date and time is outside the range of dates supported by the calendar used by the current culture.","nodes":[{"pos":[0,102],"content":"The date and time is outside the range of dates supported by the calendar used by the current culture.","nodes":[{"content":"The date and time is outside the range of dates supported by the calendar used by the current culture.","pos":[0,102]}]}],"pos":[269962,270065],"yaml":true},{"content":"Converts the value of the current <xref href=\"System.DateTimeOffset\"></xref> object to its equivalent string representation using the specified culture-specific formatting information.","nodes":[{"pos":[0,184],"content":"Converts the value of the current <ph id=\"ph1\">&lt;xref href=\"System.DateTimeOffset\"&gt;&lt;/xref&gt;</ph> object to its equivalent string representation using the specified culture-specific formatting information.","source":"Converts the value of the current <xref href=\"System.DateTimeOffset\"></xref> object to its equivalent string representation using the specified culture-specific formatting information."}],"pos":[271602,271787],"yaml":true},{"content":"The return value of this method is identical to that of its equivalent overload of the <xref:System.DateTime.ToString%2A?displayProperty=fullName> method, except that it includes a space followed by the offset appended at the end of the string. In other words, it formats output using the short date pattern, the long time pattern, and the `zzz` custom format string, with each element separated from the previous element by a space.  \n  \n The format of these three elements is defined by the `formatProvider` parameter. The `formatProvider` parameter can be either of the following:  \n  \n-   A <xref:System.Globalization.CultureInfo> object that represents the culture whose formatting conventions are applied to the returned string. The <xref:System.Globalization.DateTimeFormatInfo> object returned by the <xref:System.Globalization.CultureInfo.DateTimeFormat%2A?displayProperty=fullName> property defines the formatting of the returned string.  \n  \n-   A <xref:System.Globalization.DateTimeFormatInfo> object that defines the format of date and time data.  \n  \n If `formatProvider` is `null`, the <xref:System.Globalization.DateTimeFormatInfo> object associated with the current culture is used (see <xref:System.Globalization.CultureInfo.CurrentCulture%2A>).","nodes":[{"pos":[0,433],"content":"The return value of this method is identical to that of its equivalent overload of the <xref:System.DateTime.ToString%2A?displayProperty=fullName> method, except that it includes a space followed by the offset appended at the end of the string. In other words, it formats output using the short date pattern, the long time pattern, and the `zzz` custom format string, with each element separated from the previous element by a space.","nodes":[{"content":"The return value of this method is identical to that of its equivalent overload of the <ph id=\"ph1\">&lt;xref:System.DateTime.ToString%2A?displayProperty=fullName&gt;</ph> method, except that it includes a space followed by the offset appended at the end of the string.","pos":[0,244],"source":"The return value of this method is identical to that of its equivalent overload of the <xref:System.DateTime.ToString%2A?displayProperty=fullName> method, except that it includes a space followed by the offset appended at the end of the string."},{"content":"In other words, it formats output using the short date pattern, the long time pattern, and the <ph id=\"ph1\">`zzz`</ph> custom format string, with each element separated from the previous element by a space.","pos":[245,433],"source":" In other words, it formats output using the short date pattern, the long time pattern, and the `zzz` custom format string, with each element separated from the previous element by a space."}]},{"pos":[440,583],"content":"The format of these three elements is defined by the `formatProvider` parameter. The `formatProvider` parameter can be either of the following:","nodes":[{"content":"The format of these three elements is defined by the <ph id=\"ph1\">`formatProvider`</ph> parameter.","pos":[0,80],"source":"The format of these three elements is defined by the `formatProvider` parameter."},{"content":"The <ph id=\"ph1\">`formatProvider`</ph> parameter can be either of the following:","pos":[81,143],"source":" The `formatProvider` parameter can be either of the following:"}]},{"pos":[593,947],"content":"A <xref:System.Globalization.CultureInfo> object that represents the culture whose formatting conventions are applied to the returned string. The <xref:System.Globalization.DateTimeFormatInfo> object returned by the <xref:System.Globalization.CultureInfo.DateTimeFormat%2A?displayProperty=fullName> property defines the formatting of the returned string.","nodes":[{"content":"A <xref:System.Globalization.CultureInfo> object that represents the culture whose formatting conventions are applied to the returned string. The <xref:System.Globalization.DateTimeFormatInfo> object returned by the <xref:System.Globalization.CultureInfo.DateTimeFormat%2A?displayProperty=fullName> property defines the formatting of the returned string.","pos":[0,354],"nodes":[{"content":"A <ph id=\"ph1\">&lt;xref:System.Globalization.CultureInfo&gt;</ph> object that represents the culture whose formatting conventions are applied to the returned string.","pos":[0,141],"source":"A <xref:System.Globalization.CultureInfo> object that represents the culture whose formatting conventions are applied to the returned string."},{"content":"The <ph id=\"ph1\">&lt;xref:System.Globalization.DateTimeFormatInfo&gt;</ph> object returned by the <ph id=\"ph2\">&lt;xref:System.Globalization.CultureInfo.DateTimeFormat%2A?displayProperty=fullName&gt;</ph> property defines the formatting of the returned string.","pos":[142,354],"source":" The <xref:System.Globalization.DateTimeFormatInfo> object returned by the <xref:System.Globalization.CultureInfo.DateTimeFormat%2A?displayProperty=fullName> property defines the formatting of the returned string."}]}]},{"pos":[957,1059],"content":"A <xref:System.Globalization.DateTimeFormatInfo> object that defines the format of date and time data.","nodes":[{"content":"A <ph id=\"ph1\">&lt;xref:System.Globalization.DateTimeFormatInfo&gt;</ph> object that defines the format of date and time data.","pos":[0,102],"source":"A <xref:System.Globalization.DateTimeFormatInfo> object that defines the format of date and time data."}]},{"pos":[1066,1263],"content":"If <ph id=\"ph1\">`formatProvider`</ph> is <ph id=\"ph2\">`null`</ph>, the <ph id=\"ph3\">&lt;xref:System.Globalization.DateTimeFormatInfo&gt;</ph> object associated with the current culture is used (see <ph id=\"ph4\">&lt;xref:System.Globalization.CultureInfo.CurrentCulture%2A&gt;</ph>).","source":"If `formatProvider` is `null`, the <xref:System.Globalization.DateTimeFormatInfo> object associated with the current culture is used (see <xref:System.Globalization.CultureInfo.CurrentCulture%2A>)."}],"pos":[271798,273072],"yaml":true,"extradata":"MT"},{"content":"An object that supplies culture-specific formatting information.","nodes":[{"pos":[0,64],"content":"An object that supplies culture-specific formatting information.","nodes":[{"content":"An object that supplies culture-specific formatting information.","pos":[0,64]}]}],"pos":[273762,273827],"yaml":true},{"content":"A string representation of the value of the current <xref href=\"System.DateTimeOffset\"></xref> object, as specified by <code>formatProvider</code>.","nodes":[{"pos":[0,147],"content":"A string representation of the value of the current <ph id=\"ph1\">&lt;xref href=\"System.DateTimeOffset\"&gt;&lt;/xref&gt;</ph> object, as specified by <bpt id=\"p1\">&lt;code&gt;</bpt><ph id=\"ph2\">formatProvider</ph><ept id=\"p1\">&lt;/code&gt;</ept>.","source":"A string representation of the value of the current <xref href=\"System.DateTimeOffset\"></xref> object, as specified by <code>formatProvider</code>."}],"pos":[273884,274032],"yaml":true},{"content":"The date and time is outside the range of dates supported by the calendar used by <code>formatProvider</code>.","nodes":[{"pos":[0,110],"content":"The date and time is outside the range of dates supported by the calendar used by <bpt id=\"p1\">&lt;code&gt;</bpt><ph id=\"ph1\">formatProvider</ph><ept id=\"p1\">&lt;/code&gt;</ept>.","source":"The date and time is outside the range of dates supported by the calendar used by <code>formatProvider</code>."}],"pos":[274204,274315],"yaml":true},{"content":"Converts the value of the current <xref href=\"System.DateTimeOffset\"></xref> object to its equivalent string representation using the specified format.","nodes":[{"pos":[0,151],"content":"Converts the value of the current <ph id=\"ph1\">&lt;xref href=\"System.DateTimeOffset\"&gt;&lt;/xref&gt;</ph> object to its equivalent string representation using the specified format.","source":"Converts the value of the current <xref href=\"System.DateTimeOffset\"></xref> object to its equivalent string representation using the specified format."}],"pos":[275798,275950],"yaml":true},{"content":"The `format` parameter should contain either a single format specifier character (see [Standard Date and Time Format Strings](~/docs/standard/base-types/standard-date-and-time-format-strings.md)) or a custom format pattern (see [Custom Date and Time Format Strings](~/docs/standard/base-types/custom-date-and-time-format-strings.md)) that defines the format of the returned string. If `format` is a null or empty string (\"\"), the <xref:System.DateTimeOffset> value is output using the default format.  \n  \n The following table shows the exact operation of certain format specifiers when used with <xref:System.DateTimeOffset>, which differs from their behavior when used with <xref:System.DateTime>.  \n  \n|Existing format specifier|New behavior|  \n|-------------------------------|------------------|  \n|\"K\"|Designed to round-trip a date and time. With <xref:System.DateTimeOffset>, maps to \"zzz\" (the offset is always displayed with hours and minutes). Note that \"K\" is a custom format specifier; it cannot appear as the single character in `format`.|  \n|\"U\"|Not supported.|  \n|\"r\"|Converts the <xref:System.DateTimeOffset> object to Coordinated Universal Time (UTC) and outputs it using the custom format string `ddd, dd MMM yyyy HH:mm:ss GMT`.|  \n|\"u\"|Converts the <xref:System.DateTimeOffset> object to UTC and outputs it using the format `yyyy-MM-dd HH:mm:ssZ`.|  \n  \n The remaining standard date and time format specifiers behave the same with the <xref:System.DateTimeOffset.ToString%28System.String%29> method as they do with the <xref:System.DateTime.ToString%2A> method.  \n  \n This method uses formatting information derived from the current culture. For more information, see <xref:System.Globalization.CultureInfo.CurrentCulture%2A>.","nodes":[{"pos":[0,500],"content":"The `format` parameter should contain either a single format specifier character (see [Standard Date and Time Format Strings](~/docs/standard/base-types/standard-date-and-time-format-strings.md)) or a custom format pattern (see [Custom Date and Time Format Strings](~/docs/standard/base-types/custom-date-and-time-format-strings.md)) that defines the format of the returned string. If `format` is a null or empty string (\"\"), the <xref:System.DateTimeOffset> value is output using the default format.","nodes":[{"content":"The <ph id=\"ph1\">`format`</ph> parameter should contain either a single format specifier character (see <bpt id=\"p1\">[</bpt>Standard Date and Time Format Strings<ept id=\"p1\">](~/docs/standard/base-types/standard-date-and-time-format-strings.md)</ept>) or a custom format pattern (see <bpt id=\"p2\">[</bpt>Custom Date and Time Format Strings<ept id=\"p2\">](~/docs/standard/base-types/custom-date-and-time-format-strings.md)</ept>) that defines the format of the returned string.","pos":[0,381],"source":"The `format` parameter should contain either a single format specifier character (see [Standard Date and Time Format Strings](~/docs/standard/base-types/standard-date-and-time-format-strings.md)) or a custom format pattern (see [Custom Date and Time Format Strings](~/docs/standard/base-types/custom-date-and-time-format-strings.md)) that defines the format of the returned string."},{"content":"If <ph id=\"ph1\">`format`</ph> is a null or empty string (\"\"), the <ph id=\"ph2\">&lt;xref:System.DateTimeOffset&gt;</ph> value is output using the default format.","pos":[382,500],"source":" If `format` is a null or empty string (\"\"), the <xref:System.DateTimeOffset> value is output using the default format."}]},{"pos":[507,699],"content":"The following table shows the exact operation of certain format specifiers when used with <xref:System.DateTimeOffset>, which differs from their behavior when used with <xref:System.DateTime>.","nodes":[{"content":"The following table shows the exact operation of certain format specifiers when used with <ph id=\"ph1\">&lt;xref:System.DateTimeOffset&gt;</ph>, which differs from their behavior when used with <ph id=\"ph2\">&lt;xref:System.DateTime&gt;</ph>.","pos":[0,192],"source":"The following table shows the exact operation of certain format specifiers when used with <xref:System.DateTimeOffset>, which differs from their behavior when used with <xref:System.DateTime>."}]},{"pos":[706,731],"content":"Existing format specifier","nodes":[{"content":"Existing format specifier","pos":[0,25]}]},{"pos":[732,744],"content":"New behavior","nodes":[{"content":"New behavior","pos":[0,12]}]},{"pos":[804,807],"content":"\"K\"","nodes":[{"content":"\"K\"","pos":[0,3]}]},{"pos":[808,1051],"content":"Designed to round-trip a date and time. With <xref:System.DateTimeOffset>, maps to \"zzz\" (the offset is always displayed with hours and minutes). Note that \"K\" is a custom format specifier; it cannot appear as the single character in `format`.","nodes":[{"content":"Designed to round-trip a date and time.","pos":[0,39]},{"content":"With <ph id=\"ph1\">&lt;xref:System.DateTimeOffset&gt;</ph>, maps to \"zzz\" (the offset is always displayed with hours and minutes).","pos":[40,145],"source":" With <xref:System.DateTimeOffset>, maps to \"zzz\" (the offset is always displayed with hours and minutes)."},{"content":"Note that \"K\" is a custom format specifier; it cannot appear as the single character in <ph id=\"ph1\">`format`</ph>.","pos":[146,243],"source":" Note that \"K\" is a custom format specifier; it cannot appear as the single character in `format`."}]},{"pos":[1056,1059],"content":"\"U\"","nodes":[{"content":"\"U\"","pos":[0,3]}]},{"pos":[1060,1074],"content":"Not supported.","nodes":[{"content":"Not supported.","pos":[0,14]}]},{"pos":[1079,1082],"content":"\"r\"","nodes":[{"content":"\"r\"","pos":[0,3]}]},{"pos":[1083,1246],"content":"Converts the <ph id=\"ph1\">&lt;xref:System.DateTimeOffset&gt;</ph> object to Coordinated Universal Time (UTC) and outputs it using the custom format string <ph id=\"ph2\">`ddd, dd MMM yyyy HH:mm:ss GMT`</ph>.","source":"Converts the <xref:System.DateTimeOffset> object to Coordinated Universal Time (UTC) and outputs it using the custom format string `ddd, dd MMM yyyy HH:mm:ss GMT`."},{"pos":[1251,1254],"content":"\"u\"","nodes":[{"content":"\"u\"","pos":[0,3]}]},{"pos":[1255,1366],"content":"Converts the <ph id=\"ph1\">&lt;xref:System.DateTimeOffset&gt;</ph> object to UTC and outputs it using the format <ph id=\"ph2\">`yyyy-MM-dd HH:mm:ssZ`</ph>.","source":"Converts the <xref:System.DateTimeOffset> object to UTC and outputs it using the format `yyyy-MM-dd HH:mm:ssZ`."},{"pos":[1374,1580],"content":"The remaining standard date and time format specifiers behave the same with the <xref:System.DateTimeOffset.ToString%28System.String%29> method as they do with the <xref:System.DateTime.ToString%2A> method.","nodes":[{"content":"The remaining standard date and time format specifiers behave the same with the <ph id=\"ph1\">&lt;xref:System.DateTimeOffset.ToString%28System.String%29&gt;</ph> method as they do with the <ph id=\"ph2\">&lt;xref:System.DateTime.ToString%2A&gt;</ph> method.","pos":[0,206],"source":"The remaining standard date and time format specifiers behave the same with the <xref:System.DateTimeOffset.ToString%28System.String%29> method as they do with the <xref:System.DateTime.ToString%2A> method."}]},{"pos":[1587,1745],"content":"This method uses formatting information derived from the current culture. For more information, see <xref:System.Globalization.CultureInfo.CurrentCulture%2A>.","nodes":[{"content":"This method uses formatting information derived from the current culture. For more information, see <xref:System.Globalization.CultureInfo.CurrentCulture%2A>.","pos":[0,158],"nodes":[{"content":"This method uses formatting information derived from the current culture.","pos":[0,73]},{"content":"For more information, see <ph id=\"ph1\">&lt;xref:System.Globalization.CultureInfo.CurrentCulture%2A&gt;</ph>.","pos":[74,158],"source":" For more information, see <xref:System.Globalization.CultureInfo.CurrentCulture%2A>."}]}]}],"pos":[275961,277736],"yaml":true,"extradata":"MT"},{"content":"A format string.","nodes":[{"pos":[0,16],"content":"A format string.","nodes":[{"content":"A format string.","pos":[0,16]}]}],"pos":[278395,278412],"yaml":true},{"content":"A string representation of the value of the current <xref href=\"System.DateTimeOffset\"></xref> object, as specified by <code>format</code>.","nodes":[{"pos":[0,139],"content":"A string representation of the value of the current <ph id=\"ph1\">&lt;xref href=\"System.DateTimeOffset\"&gt;&lt;/xref&gt;</ph> object, as specified by <bpt id=\"p1\">&lt;code&gt;</bpt><ph id=\"ph2\">format</ph><ept id=\"p1\">&lt;/code&gt;</ept>.","source":"A string representation of the value of the current <xref href=\"System.DateTimeOffset\"></xref> object, as specified by <code>format</code>."}],"pos":[278469,278609],"yaml":true},{"content":"The length of <code>format</code> is one, and it is not one of the standard format specifier characters defined for <xref href=\"System.Globalization.DateTimeFormatInfo\"></xref>.  \n  \n -or-  \n  \n <code>format</code> does not contain a valid custom format pattern.","nodes":[{"pos":[0,177],"content":"The length of <bpt id=\"p1\">&lt;code&gt;</bpt><ph id=\"ph1\">format</ph><ept id=\"p1\">&lt;/code&gt;</ept> is one, and it is not one of the standard format specifier characters defined for <ph id=\"ph2\">&lt;xref href=\"System.Globalization.DateTimeFormatInfo\"&gt;&lt;/xref&gt;</ph>.","source":"The length of <code>format</code> is one, and it is not one of the standard format specifier characters defined for <xref href=\"System.Globalization.DateTimeFormatInfo\"></xref>."},{"pos":[184,188],"content":"-or-","nodes":[{"content":"-or-","pos":[0,4]}]},{"pos":[195,262],"content":"<ph id=\"ph1\">&lt;code&gt;format&lt;/code&gt;</ph> does not contain a valid custom format pattern.","source":"<code>format</code> does not contain a valid custom format pattern."}],"pos":[278757,279028],"yaml":true},{"content":"The date and time is outside the range of dates supported by the calendar used by the current culture.","nodes":[{"pos":[0,102],"content":"The date and time is outside the range of dates supported by the calendar used by the current culture.","nodes":[{"content":"The date and time is outside the range of dates supported by the calendar used by the current culture.","pos":[0,102]}]}],"pos":[279142,279245],"yaml":true},{"content":"Converts the value of the current <xref href=\"System.DateTimeOffset\"></xref> object to its equivalent string representation using the specified format and culture-specific format information.","nodes":[{"pos":[0,191],"content":"Converts the value of the current <ph id=\"ph1\">&lt;xref href=\"System.DateTimeOffset\"&gt;&lt;/xref&gt;</ph> object to its equivalent string representation using the specified format and culture-specific format information.","source":"Converts the value of the current <xref href=\"System.DateTimeOffset\"></xref> object to its equivalent string representation using the specified format and culture-specific format information."}],"pos":[280848,281040],"yaml":true},{"content":"The `format` parameter should contain either a single format specifier character (see [Standard Date and Time Format Strings](~/docs/standard/base-types/standard-date-and-time-format-strings.md)) or a custom format pattern (see [Custom Date and Time Format Strings](~/docs/standard/base-types/custom-date-and-time-format-strings.md)). If `format` is a null or empty string (\"\"), the <xref:System.DateTimeOffset> object is output using the default format.  \n  \n The following table shows the exact operation of certain format specifiers when used with <xref:System.DateTimeOffset>, which differs from their behavior when used with <xref:System.DateTime>.  \n  \n|Existing format specifier|New behavior|  \n|-------------------------------|------------------|  \n|\"K\"|Designed to round-trip a date and time. With <xref:System.DateTimeOffset>, maps to \"zzz\" (the offset is always displayed with hours and minutes). Note that \"K\" is a custom format specifier; it cannot appear as the single character in `format`.|  \n|\"U\"|Not supported.|  \n|\"r\"|Converts the <xref:System.DateTimeOffset> object to Coordinated Universal Time (UTC) and outputs it using the custom format string `ddd, dd MMM yyyy HH:mm:ss GMT`.|  \n|\"u\"|Converts the <xref:System.DateTimeOffset> value to UTC and outputs it using the format `yyyy-MM-dd HH:mm:ssZ`.|  \n  \n The remaining standard date and time format specifiers behave the same with the <xref:System.DateTimeOffset.ToString%28System.String%29> method as they do with the <xref:System.DateTime.ToString%2A> method.  \n  \n The pattern that corresponds to standard format specifiers, as well as the symbols and names of date and time components, is defined by the `formatProvider` parameter. The `formatProvider` parameter can be either of the following:  \n  \n-   A <xref:System.Globalization.CultureInfo> object that represents the culture whose formatting is used in `input`. The <xref:System.Globalization.DateTimeFormatInfo> object returned by the <xref:System.Globalization.CultureInfo.DateTimeFormat%2A?displayProperty=fullName> property defines the formatting used in `input`.  \n  \n-   A <xref:System.Globalization.DateTimeFormatInfo> object that defines the format of date and time data.  \n  \n If `formatProvider` is `null`, the <xref:System.Globalization.DateTimeFormatInfo> object associated with the current culture is used (see <xref:System.Globalization.CultureInfo.CurrentCulture%2A>).","nodes":[{"pos":[0,454],"content":"The `format` parameter should contain either a single format specifier character (see [Standard Date and Time Format Strings](~/docs/standard/base-types/standard-date-and-time-format-strings.md)) or a custom format pattern (see [Custom Date and Time Format Strings](~/docs/standard/base-types/custom-date-and-time-format-strings.md)). If `format` is a null or empty string (\"\"), the <xref:System.DateTimeOffset> object is output using the default format.","nodes":[{"content":"The <ph id=\"ph1\">`format`</ph> parameter should contain either a single format specifier character (see <bpt id=\"p1\">[</bpt>Standard Date and Time Format Strings<ept id=\"p1\">](~/docs/standard/base-types/standard-date-and-time-format-strings.md)</ept>) or a custom format pattern (see <bpt id=\"p2\">[</bpt>Custom Date and Time Format Strings<ept id=\"p2\">](~/docs/standard/base-types/custom-date-and-time-format-strings.md)</ept>).","pos":[0,334],"source":"The `format` parameter should contain either a single format specifier character (see [Standard Date and Time Format Strings](~/docs/standard/base-types/standard-date-and-time-format-strings.md)) or a custom format pattern (see [Custom Date and Time Format Strings](~/docs/standard/base-types/custom-date-and-time-format-strings.md))."},{"content":"If <ph id=\"ph1\">`format`</ph> is a null or empty string (\"\"), the <ph id=\"ph2\">&lt;xref:System.DateTimeOffset&gt;</ph> object is output using the default format.","pos":[335,454],"source":" If `format` is a null or empty string (\"\"), the <xref:System.DateTimeOffset> object is output using the default format."}]},{"pos":[461,653],"content":"The following table shows the exact operation of certain format specifiers when used with <xref:System.DateTimeOffset>, which differs from their behavior when used with <xref:System.DateTime>.","nodes":[{"content":"The following table shows the exact operation of certain format specifiers when used with <ph id=\"ph1\">&lt;xref:System.DateTimeOffset&gt;</ph>, which differs from their behavior when used with <ph id=\"ph2\">&lt;xref:System.DateTime&gt;</ph>.","pos":[0,192],"source":"The following table shows the exact operation of certain format specifiers when used with <xref:System.DateTimeOffset>, which differs from their behavior when used with <xref:System.DateTime>."}]},{"pos":[660,685],"content":"Existing format specifier","nodes":[{"content":"Existing format specifier","pos":[0,25]}]},{"pos":[686,698],"content":"New behavior","nodes":[{"content":"New behavior","pos":[0,12]}]},{"pos":[758,761],"content":"\"K\"","nodes":[{"content":"\"K\"","pos":[0,3]}]},{"pos":[762,1005],"content":"Designed to round-trip a date and time. With <xref:System.DateTimeOffset>, maps to \"zzz\" (the offset is always displayed with hours and minutes). Note that \"K\" is a custom format specifier; it cannot appear as the single character in `format`.","nodes":[{"content":"Designed to round-trip a date and time.","pos":[0,39]},{"content":"With <ph id=\"ph1\">&lt;xref:System.DateTimeOffset&gt;</ph>, maps to \"zzz\" (the offset is always displayed with hours and minutes).","pos":[40,145],"source":" With <xref:System.DateTimeOffset>, maps to \"zzz\" (the offset is always displayed with hours and minutes)."},{"content":"Note that \"K\" is a custom format specifier; it cannot appear as the single character in <ph id=\"ph1\">`format`</ph>.","pos":[146,243],"source":" Note that \"K\" is a custom format specifier; it cannot appear as the single character in `format`."}]},{"pos":[1010,1013],"content":"\"U\"","nodes":[{"content":"\"U\"","pos":[0,3]}]},{"pos":[1014,1028],"content":"Not supported.","nodes":[{"content":"Not supported.","pos":[0,14]}]},{"pos":[1033,1036],"content":"\"r\"","nodes":[{"content":"\"r\"","pos":[0,3]}]},{"pos":[1037,1200],"content":"Converts the <ph id=\"ph1\">&lt;xref:System.DateTimeOffset&gt;</ph> object to Coordinated Universal Time (UTC) and outputs it using the custom format string <ph id=\"ph2\">`ddd, dd MMM yyyy HH:mm:ss GMT`</ph>.","source":"Converts the <xref:System.DateTimeOffset> object to Coordinated Universal Time (UTC) and outputs it using the custom format string `ddd, dd MMM yyyy HH:mm:ss GMT`."},{"pos":[1205,1208],"content":"\"u\"","nodes":[{"content":"\"u\"","pos":[0,3]}]},{"pos":[1209,1319],"content":"Converts the <ph id=\"ph1\">&lt;xref:System.DateTimeOffset&gt;</ph> value to UTC and outputs it using the format <ph id=\"ph2\">`yyyy-MM-dd HH:mm:ssZ`</ph>.","source":"Converts the <xref:System.DateTimeOffset> value to UTC and outputs it using the format `yyyy-MM-dd HH:mm:ssZ`."},{"pos":[1327,1533],"content":"The remaining standard date and time format specifiers behave the same with the <xref:System.DateTimeOffset.ToString%28System.String%29> method as they do with the <xref:System.DateTime.ToString%2A> method.","nodes":[{"content":"The remaining standard date and time format specifiers behave the same with the <ph id=\"ph1\">&lt;xref:System.DateTimeOffset.ToString%28System.String%29&gt;</ph> method as they do with the <ph id=\"ph2\">&lt;xref:System.DateTime.ToString%2A&gt;</ph> method.","pos":[0,206],"source":"The remaining standard date and time format specifiers behave the same with the <xref:System.DateTimeOffset.ToString%28System.String%29> method as they do with the <xref:System.DateTime.ToString%2A> method."}]},{"pos":[1540,1770],"content":"The pattern that corresponds to standard format specifiers, as well as the symbols and names of date and time components, is defined by the `formatProvider` parameter. The `formatProvider` parameter can be either of the following:","nodes":[{"content":"The pattern that corresponds to standard format specifiers, as well as the symbols and names of date and time components, is defined by the <ph id=\"ph1\">`formatProvider`</ph> parameter.","pos":[0,167],"source":"The pattern that corresponds to standard format specifiers, as well as the symbols and names of date and time components, is defined by the `formatProvider` parameter."},{"content":"The <ph id=\"ph1\">`formatProvider`</ph> parameter can be either of the following:","pos":[168,230],"source":" The `formatProvider` parameter can be either of the following:"}]},{"pos":[1780,2099],"content":"A <xref:System.Globalization.CultureInfo> object that represents the culture whose formatting is used in `input`. The <xref:System.Globalization.DateTimeFormatInfo> object returned by the <xref:System.Globalization.CultureInfo.DateTimeFormat%2A?displayProperty=fullName> property defines the formatting used in `input`.","nodes":[{"content":"A <ph id=\"ph1\">&lt;xref:System.Globalization.CultureInfo&gt;</ph> object that represents the culture whose formatting is used in <ph id=\"ph2\">`input`</ph>.","pos":[0,113],"source":"A <xref:System.Globalization.CultureInfo> object that represents the culture whose formatting is used in `input`."},{"content":"The <ph id=\"ph1\">&lt;xref:System.Globalization.DateTimeFormatInfo&gt;</ph> object returned by the <ph id=\"ph2\">&lt;xref:System.Globalization.CultureInfo.DateTimeFormat%2A?displayProperty=fullName&gt;</ph> property defines the formatting used in <ph id=\"ph3\">`input`</ph>.","pos":[114,319],"source":" The <xref:System.Globalization.DateTimeFormatInfo> object returned by the <xref:System.Globalization.CultureInfo.DateTimeFormat%2A?displayProperty=fullName> property defines the formatting used in `input`."}]},{"pos":[2109,2211],"content":"A <xref:System.Globalization.DateTimeFormatInfo> object that defines the format of date and time data.","nodes":[{"content":"A <ph id=\"ph1\">&lt;xref:System.Globalization.DateTimeFormatInfo&gt;</ph> object that defines the format of date and time data.","pos":[0,102],"source":"A <xref:System.Globalization.DateTimeFormatInfo> object that defines the format of date and time data."}]},{"pos":[2218,2415],"content":"If <ph id=\"ph1\">`formatProvider`</ph> is <ph id=\"ph2\">`null`</ph>, the <ph id=\"ph3\">&lt;xref:System.Globalization.DateTimeFormatInfo&gt;</ph> object associated with the current culture is used (see <ph id=\"ph4\">&lt;xref:System.Globalization.CultureInfo.CurrentCulture%2A&gt;</ph>).","source":"If `formatProvider` is `null`, the <xref:System.Globalization.DateTimeFormatInfo> object associated with the current culture is used (see <xref:System.Globalization.CultureInfo.CurrentCulture%2A>)."}],"pos":[281051,283502],"yaml":true,"extradata":"MT"},{"content":"A format string.","nodes":[{"pos":[0,16],"content":"A format string.","nodes":[{"content":"A format string.","pos":[0,16]}]}],"pos":[284227,284244],"yaml":true},{"content":"An object that supplies culture-specific formatting information.","nodes":[{"pos":[0,64],"content":"An object that supplies culture-specific formatting information.","nodes":[{"content":"An object that supplies culture-specific formatting information.","pos":[0,64]}]}],"pos":[284323,284388],"yaml":true},{"content":"A string representation of the value of the current <xref href=\"System.DateTimeOffset\"></xref> object, as specified by <code>format</code> and <code>provider</code>.","nodes":[{"pos":[0,165],"content":"A string representation of the value of the current <ph id=\"ph1\">&lt;xref href=\"System.DateTimeOffset\"&gt;&lt;/xref&gt;</ph> object, as specified by <bpt id=\"p1\">&lt;code&gt;</bpt><ph id=\"ph2\">format</ph><ept id=\"p1\">&lt;/code&gt;</ept> and <bpt id=\"p2\">&lt;code&gt;</bpt><ph id=\"ph3\">provider</ph><ept id=\"p2\">&lt;/code&gt;</ept>.","source":"A string representation of the value of the current <xref href=\"System.DateTimeOffset\"></xref> object, as specified by <code>format</code> and <code>provider</code>."}],"pos":[284445,284611],"yaml":true},{"content":"The length of <code>format</code> is one, and it is not one of the standard format specifier characters defined for <xref href=\"System.Globalization.DateTimeFormatInfo\"></xref>.  \n  \n -or-  \n  \n <code>format</code> does not contain a valid custom format pattern.","nodes":[{"pos":[0,177],"content":"The length of <bpt id=\"p1\">&lt;code&gt;</bpt><ph id=\"ph1\">format</ph><ept id=\"p1\">&lt;/code&gt;</ept> is one, and it is not one of the standard format specifier characters defined for <ph id=\"ph2\">&lt;xref href=\"System.Globalization.DateTimeFormatInfo\"&gt;&lt;/xref&gt;</ph>.","source":"The length of <code>format</code> is one, and it is not one of the standard format specifier characters defined for <xref href=\"System.Globalization.DateTimeFormatInfo\"></xref>."},{"pos":[184,188],"content":"-or-","nodes":[{"content":"-or-","pos":[0,4]}]},{"pos":[195,262],"content":"<ph id=\"ph1\">&lt;code&gt;format&lt;/code&gt;</ph> does not contain a valid custom format pattern.","source":"<code>format</code> does not contain a valid custom format pattern."}],"pos":[284759,285030],"yaml":true},{"content":"The date and time is outside the range of dates supported by the calendar used by <code>formatProvider</code>.","nodes":[{"pos":[0,110],"content":"The date and time is outside the range of dates supported by the calendar used by <bpt id=\"p1\">&lt;code&gt;</bpt><ph id=\"ph1\">formatProvider</ph><ept id=\"p1\">&lt;/code&gt;</ept>.","source":"The date and time is outside the range of dates supported by the calendar used by <code>formatProvider</code>."}],"pos":[285144,285255],"yaml":true},{"content":"Converts the current <xref href=\"System.DateTimeOffset\"></xref> object to a <xref href=\"System.DateTimeOffset\"></xref> value that represents the Coordinated Universal Time (UTC).","nodes":[{"pos":[0,178],"content":"Converts the current <ph id=\"ph1\">&lt;xref href=\"System.DateTimeOffset\"&gt;&lt;/xref&gt;</ph> object to a <ph id=\"ph2\">&lt;xref href=\"System.DateTimeOffset\"&gt;&lt;/xref&gt;</ph> value that represents the Coordinated Universal Time (UTC).","source":"Converts the current <xref href=\"System.DateTimeOffset\"></xref> object to a <xref href=\"System.DateTimeOffset\"></xref> value that represents the Coordinated Universal Time (UTC)."}],"pos":[286717,286896],"yaml":true},{"content":"This method returns a <xref:System.DateTimeOffset> object whose <xref:System.DateTimeOffset.Offset%2A> property is set to zero.  \n  \n Both the value of the current <xref:System.DateTimeOffset> object and the value of the <xref:System.DateTimeOffset> object returned by the method call represent the same point in time. That is, if both are passed to the <xref:System.DateTimeOffset.Equals%28System.DateTimeOffset%2CSystem.DateTimeOffset%29?displayProperty=fullName> method, the method will return `true`.","nodes":[{"pos":[0,127],"content":"This method returns a <xref:System.DateTimeOffset> object whose <xref:System.DateTimeOffset.Offset%2A> property is set to zero.","nodes":[{"content":"This method returns a <ph id=\"ph1\">&lt;xref:System.DateTimeOffset&gt;</ph> object whose <ph id=\"ph2\">&lt;xref:System.DateTimeOffset.Offset%2A&gt;</ph> property is set to zero.","pos":[0,127],"source":"This method returns a <xref:System.DateTimeOffset> object whose <xref:System.DateTimeOffset.Offset%2A> property is set to zero."}]},{"pos":[134,504],"content":"Both the value of the current <xref:System.DateTimeOffset> object and the value of the <xref:System.DateTimeOffset> object returned by the method call represent the same point in time. That is, if both are passed to the <xref:System.DateTimeOffset.Equals%28System.DateTimeOffset%2CSystem.DateTimeOffset%29?displayProperty=fullName> method, the method will return `true`.","nodes":[{"content":"Both the value of the current <ph id=\"ph1\">&lt;xref:System.DateTimeOffset&gt;</ph> object and the value of the <ph id=\"ph2\">&lt;xref:System.DateTimeOffset&gt;</ph> object returned by the method call represent the same point in time.","pos":[0,184],"source":"Both the value of the current <xref:System.DateTimeOffset> object and the value of the <xref:System.DateTimeOffset> object returned by the method call represent the same point in time."},{"content":"That is, if both are passed to the <ph id=\"ph1\">&lt;xref:System.DateTimeOffset.Equals%28System.DateTimeOffset%2CSystem.DateTimeOffset%29?displayProperty=fullName&gt;</ph> method, the method will return <ph id=\"ph2\">`true`</ph>.","pos":[185,370],"source":" That is, if both are passed to the <xref:System.DateTimeOffset.Equals%28System.DateTimeOffset%2CSystem.DateTimeOffset%29?displayProperty=fullName> method, the method will return `true`."}]}],"pos":[286907,287416],"yaml":true,"extradata":"MT"},{"content":"An object that represents the date and time of the current <xref href=\"System.DateTimeOffset\"></xref> object converted to Coordinated Universal Time (UTC).","nodes":[{"pos":[0,155],"content":"An object that represents the date and time of the current <ph id=\"ph1\">&lt;xref href=\"System.DateTimeOffset\"&gt;&lt;/xref&gt;</ph> object converted to Coordinated Universal Time (UTC).","source":"An object that represents the date and time of the current <xref href=\"System.DateTimeOffset\"></xref> object converted to Coordinated Universal Time (UTC)."}],"pos":[288057,288213],"yaml":true},{"content":"Returns the number of milliseconds that have elapsed since 1970-01-01T00:00:00.000Z.","nodes":[{"pos":[0,84],"content":"Returns the number of milliseconds that have elapsed since 1970-01-01T00:00:00.000Z.","nodes":[{"content":"Returns the number of milliseconds that have elapsed since 1970-01-01T00:00:00.000Z.","pos":[0,84]}]}],"pos":[289785,289870],"yaml":true},{"content":"Unix time represents the number of seconds that have elapsed since 1970-01-01T00:00:00Z (January 1, 1970, at 12:00 AM UTC). It does not take leap seconds into account. This method returns the number of milliseconds in Unix time.  \n  \n This method first converts the current instance to UTC before returning the number of milliseconds in its Unix time. For date and time values before 1970-01-01T00:00:00Z, this method returns a negative value.","nodes":[{"pos":[0,228],"content":"Unix time represents the number of seconds that have elapsed since 1970-01-01T00:00:00Z (January 1, 1970, at 12:00 AM UTC). It does not take leap seconds into account. This method returns the number of milliseconds in Unix time.","nodes":[{"content":"Unix time represents the number of seconds that have elapsed since 1970-01-01T00:00:00Z (January 1, 1970, at 12:00 AM UTC). It does not take leap seconds into account. This method returns the number of milliseconds in Unix time.","pos":[0,228],"nodes":[{"content":"Unix time represents the number of seconds that have elapsed since 1970-01-01T00:00:00Z (January 1, 1970, at 12:00 AM UTC).","pos":[0,123]},{"content":"It does not take leap seconds into account.","pos":[124,167]},{"content":"This method returns the number of milliseconds in Unix time.","pos":[168,228]}]}]},{"pos":[235,443],"content":"This method first converts the current instance to UTC before returning the number of milliseconds in its Unix time. For date and time values before 1970-01-01T00:00:00Z, this method returns a negative value.","nodes":[{"content":"This method first converts the current instance to UTC before returning the number of milliseconds in its Unix time. For date and time values before 1970-01-01T00:00:00Z, this method returns a negative value.","pos":[0,208],"nodes":[{"content":"This method first converts the current instance to UTC before returning the number of milliseconds in its Unix time.","pos":[0,116]},{"content":"For date and time values before 1970-01-01T00:00:00Z, this method returns a negative value.","pos":[117,208]}]}]}],"pos":[289881,290329],"yaml":true,"extradata":"MT"},{"content":"The number of milliseconds that have elapsed since 1970-01-01T00:00:00.000Z.","nodes":[{"pos":[0,76],"content":"The number of milliseconds that have elapsed since 1970-01-01T00:00:00.000Z.","nodes":[{"content":"The number of milliseconds that have elapsed since 1970-01-01T00:00:00.000Z.","pos":[0,76]}]}],"pos":[290466,290543],"yaml":true},{"content":"Returns the number of seconds that have elapsed since 1970-01-01T00:00:00Z.","nodes":[{"pos":[0,75],"content":"Returns the number of seconds that have elapsed since 1970-01-01T00:00:00Z.","nodes":[{"content":"Returns the number of seconds that have elapsed since 1970-01-01T00:00:00Z.","pos":[0,75]}]}],"pos":[291838,291914],"yaml":true},{"content":"Unix time represents the number of seconds that have elapsed since 1970-01-01T00:00:00Z (January 1, 1970, at 12:00 AM UTC). It does not take leap seconds into account.  \n  \n This method first converts the current instance to UTC before returning its Unix time. For date and time values before 1970-01-01T00:00:00Z, this method returns a negative value.","nodes":[{"pos":[0,167],"content":"Unix time represents the number of seconds that have elapsed since 1970-01-01T00:00:00Z (January 1, 1970, at 12:00 AM UTC). It does not take leap seconds into account.","nodes":[{"content":"Unix time represents the number of seconds that have elapsed since 1970-01-01T00:00:00Z (January 1, 1970, at 12:00 AM UTC). It does not take leap seconds into account.","pos":[0,167],"nodes":[{"content":"Unix time represents the number of seconds that have elapsed since 1970-01-01T00:00:00Z (January 1, 1970, at 12:00 AM UTC).","pos":[0,123]},{"content":"It does not take leap seconds into account.","pos":[124,167]}]}]},{"pos":[174,352],"content":"This method first converts the current instance to UTC before returning its Unix time. For date and time values before 1970-01-01T00:00:00Z, this method returns a negative value.","nodes":[{"content":"This method first converts the current instance to UTC before returning its Unix time. For date and time values before 1970-01-01T00:00:00Z, this method returns a negative value.","pos":[0,178],"nodes":[{"content":"This method first converts the current instance to UTC before returning its Unix time.","pos":[0,86]},{"content":"For date and time values before 1970-01-01T00:00:00Z, this method returns a negative value.","pos":[87,178]}]}]}],"pos":[291925,292282],"yaml":true,"extradata":"MT"},{"content":"The number of seconds that have elapsed since 1970-01-01T00:00:00Z.","nodes":[{"pos":[0,67],"content":"The number of seconds that have elapsed since 1970-01-01T00:00:00Z.","nodes":[{"content":"The number of seconds that have elapsed since 1970-01-01T00:00:00Z.","pos":[0,67]}]}],"pos":[292990,293058],"yaml":true},{"content":"Tries to convert a specified string representation of a date and time to its <xref href=\"System.DateTimeOffset\"></xref> equivalent, and returns a value that indicates whether the conversion succeeded.","nodes":[{"pos":[0,200],"content":"Tries to convert a specified string representation of a date and time to its <ph id=\"ph1\">&lt;xref href=\"System.DateTimeOffset\"&gt;&lt;/xref&gt;</ph> equivalent, and returns a value that indicates whether the conversion succeeded.","source":"Tries to convert a specified string representation of a date and time to its <xref href=\"System.DateTimeOffset\"></xref> equivalent, and returns a value that indicates whether the conversion succeeded."}],"pos":[294750,294951],"yaml":true},{"content":"This overload of the <xref:System.DateTimeOffset.TryParse%28System.String%2CSystem.IFormatProvider%2CSystem.Globalization.DateTimeStyles%2CSystem.DateTimeOffset%40%29> method is like the <xref:System.DateTimeOffset.Parse%28System.String%2CSystem.IFormatProvider%2CSystem.Globalization.DateTimeStyles%29?displayProperty=fullName> method, except that it does not throw an exception if the conversion fails. The method parses a string with three elements that can appear in any order and are delimited by white space. These three elements are shown in the following table.  \n  \n|Element|Example|  \n|-------------|-------------|  \n|\\<Date>|\"2/10/2007\"|  \n|\\<Time>|\"1:02:03 PM\"|  \n|\\<Offset>|\"-7:30\"|  \n  \n Although each of these elements is optional, \\<Offset> cannot appear by itself. It must be provided together with either \\<Date> or \\<Time>. If \\<Date> is missing, its default value is the current day. If \\<Date> is present but its year component consists of only two digits, it is converted to a year in the `provider` parameter's current calendar based on the value of the <xref:System.Globalization.Calendar.TwoDigitYearMax%2A?displayProperty=fullName> property. If \\<Time> is missing, its default value is 12:00:00 AM. If \\<Offset> is missing, its default value is the offset of the local time zone, or <xref:System.TimeSpan.Zero> if either the <xref:System.Globalization.DateTimeStyles?displayProperty=fullName> or <xref:System.Globalization.DateTimeStyles?displayProperty=fullName> value is specified in `styles`. If \\<Offset> is present, it can represent either a negative or a positive offset from Coordinated Universal Time (UTC). In either case, \\<Offset> must include a sign symbol or the method returns `false`.  \n  \n The `input` string is parsed by using the culture-specific formatting information in a <xref:System.Globalization.DateTimeFormatInfo> object supplied by the `formatProvider` parameter. The `formatProvider` parameter can be either of the following:  \n  \n-   A <xref:System.Globalization.CultureInfo> object that represents the culture whose formatting is used in `input`. The <xref:System.Globalization.DateTimeFormatInfo> object returned by the <xref:System.Globalization.CultureInfo.DateTimeFormat%2A?displayProperty=fullName> property defines the format that is used in `input`.  \n  \n-   A <xref:System.Globalization.DateTimeFormatInfo> object that defines the format of date and time data.  \n  \n In addition, each element can be delimited by leading or trailing white space, and the \\<Date> and \\<Time> components can include inner white space (such as 6:   00:00). Only the \\<Offset> component cannot include inner white space.  \n  \n If `provider` is `null`, the <xref:System.Globalization.CultureInfo> object that corresponds to the current culture is used.  \n  \n The positive or negative sign used in \\<Offset> must be either + or -. It is not defined by the <xref:System.Globalization.NumberFormatInfo.PositiveSign%2A> or <xref:System.Globalization.NumberFormatInfo.NegativeSign%2A> properties of the <xref:System.Globalization.NumberFormatInfo> object returned by the `formatprovider` parameter's <xref:System.Globalization.CultureInfo.NumberFormat%2A> property.  \n  \n The following members of the <xref:System.Globalization.DateTimeStyles> enumeration are supported:  \n  \n|DateTimeStyles Member|Comments|  \n|---------------------------|--------------|  \n|<xref:System.Globalization.DateTimeStyles.AdjustToUniversal>|Parses the string represented by `input` and, if necessary, converts it to UTC. It is equivalent to parsing a string, and then calling the returned object's <xref:System.DateTimeOffset.ToUniversalTime> method.|  \n|<xref:System.Globalization.DateTimeStyles.AllowInnerWhite>|Although valid, this value is ignored. Inner white space is allowed in the \\<Date> and \\<Time> components.|  \n|<xref:System.Globalization.DateTimeStyles.AllowLeadingWhite>|Although valid, this value is ignored. Leading white space is allowed in front of each component in the parsed string.|  \n|<xref:System.Globalization.DateTimeStyles.AllowTrailingWhite>|Although valid, this value is ignored. Trailing white space is allowed in front of each component in the parsed string.|  \n|<xref:System.Globalization.DateTimeStyles.AllowWhiteSpaces>|This is the default behavior. It cannot be overridden by supplying a more restrictive <xref:System.Globalization.DateTimeStyles> enumeration value, such as <xref:System.Globalization.DateTimeStyles?displayProperty=fullName>.|  \n|<xref:System.Globalization.DateTimeStyles.AssumeLocal>|Indicates that, if the `input` parameter lacks an \\<Offset> element, the offset of the local time zone should be provided. This is the default behavior of the <xref:System.DateTimeOffset.TryParse%28System.String%2CSystem.IFormatProvider%2CSystem.Globalization.DateTimeStyles%2CSystem.DateTimeOffset%40%29> method.|  \n|<xref:System.Globalization.DateTimeStyles.AssumeUniversal>|Indicates that, if the `input` parameter lacks an \\<Offset> element, the UTC offset (00:00) should be provided.|  \n|<xref:System.Globalization.DateTimeStyles.None>|Although valid, this value is ignored and has no effect.|  \n|<xref:System.Globalization.DateTimeStyles.RoundtripKind>|Because the <xref:System.DateTimeOffset> structure does not include a `Kind` property, this value has no effect.|  \n  \n Only the <xref:System.Globalization.DateTimeStyles?displayProperty=fullName> value is not supported. An <xref:System.ArgumentException> is thrown if this value is included in the `styles` parameter.","nodes":[{"pos":[0,569],"content":"This overload of the <xref:System.DateTimeOffset.TryParse%28System.String%2CSystem.IFormatProvider%2CSystem.Globalization.DateTimeStyles%2CSystem.DateTimeOffset%40%29> method is like the <xref:System.DateTimeOffset.Parse%28System.String%2CSystem.IFormatProvider%2CSystem.Globalization.DateTimeStyles%29?displayProperty=fullName> method, except that it does not throw an exception if the conversion fails. The method parses a string with three elements that can appear in any order and are delimited by white space. These three elements are shown in the following table.","nodes":[{"content":"This overload of the <xref:System.DateTimeOffset.TryParse%28System.String%2CSystem.IFormatProvider%2CSystem.Globalization.DateTimeStyles%2CSystem.DateTimeOffset%40%29> method is like the <xref:System.DateTimeOffset.Parse%28System.String%2CSystem.IFormatProvider%2CSystem.Globalization.DateTimeStyles%29?displayProperty=fullName> method, except that it does not throw an exception if the conversion fails. The method parses a string with three elements that can appear in any order and are delimited by white space. These three elements are shown in the following table.","pos":[0,569],"nodes":[{"content":"This overload of the <ph id=\"ph1\">&lt;xref:System.DateTimeOffset.TryParse%28System.String%2CSystem.IFormatProvider%2CSystem.Globalization.DateTimeStyles%2CSystem.DateTimeOffset%40%29&gt;</ph> method is like the <ph id=\"ph2\">&lt;xref:System.DateTimeOffset.Parse%28System.String%2CSystem.IFormatProvider%2CSystem.Globalization.DateTimeStyles%29?displayProperty=fullName&gt;</ph> method, except that it does not throw an exception if the conversion fails.","pos":[0,404],"source":"This overload of the <xref:System.DateTimeOffset.TryParse%28System.String%2CSystem.IFormatProvider%2CSystem.Globalization.DateTimeStyles%2CSystem.DateTimeOffset%40%29> method is like the <xref:System.DateTimeOffset.Parse%28System.String%2CSystem.IFormatProvider%2CSystem.Globalization.DateTimeStyles%29?displayProperty=fullName> method, except that it does not throw an exception if the conversion fails."},{"content":"The method parses a string with three elements that can appear in any order and are delimited by white space.","pos":[405,514]},{"content":"These three elements are shown in the following table.","pos":[515,569]}]}]},{"pos":[576,583],"content":"Element","nodes":[{"content":"Element","pos":[0,7]}]},{"pos":[584,591],"content":"Example","nodes":[{"content":"Example","pos":[0,7]}]},{"pos":[628,635],"content":"\\<Date>","nodes":[{"content":"<ph id=\"ph1\">\\&lt;</ph>Date&gt;","pos":[0,7],"source":"\\<Date>"}]},{"pos":[636,647],"content":"\"2/10/2007\"","nodes":[{"content":"\"2/10/2007\"","pos":[0,11]}]},{"pos":[652,659],"content":"\\<Time>","nodes":[{"content":"<ph id=\"ph1\">\\&lt;</ph>Time&gt;","pos":[0,7],"source":"\\<Time>"}]},{"pos":[660,672],"content":"\"1:02:03 PM\"","nodes":[{"content":"\"1:02:03 PM\"","pos":[0,12]}]},{"pos":[677,686],"content":"\\<Offset>","nodes":[{"content":"<ph id=\"ph1\">\\&lt;</ph>Offset&gt;","pos":[0,9],"source":"\\<Offset>"}]},{"pos":[687,694],"content":"\"-7:30\"","nodes":[{"content":"\"-7:30\"","pos":[0,7]}]},{"pos":[702,1725],"content":"Although each of these elements is optional, \\<Offset> cannot appear by itself. It must be provided together with either \\<Date> or \\<Time>. If \\<Date> is missing, its default value is the current day. If \\<Date> is present but its year component consists of only two digits, it is converted to a year in the `provider` parameter's current calendar based on the value of the <xref:System.Globalization.Calendar.TwoDigitYearMax%2A?displayProperty=fullName> property. If \\<Time> is missing, its default value is 12:00:00 AM. If \\<Offset> is missing, its default value is the offset of the local time zone, or <xref:System.TimeSpan.Zero> if either the <xref:System.Globalization.DateTimeStyles?displayProperty=fullName> or <xref:System.Globalization.DateTimeStyles?displayProperty=fullName> value is specified in `styles`. If \\<Offset> is present, it can represent either a negative or a positive offset from Coordinated Universal Time (UTC). In either case, \\<Offset> must include a sign symbol or the method returns `false`.","nodes":[{"content":"Although each of these elements is optional, <ph id=\"ph1\">\\&lt;</ph>Offset&gt; cannot appear by itself.","pos":[0,79],"source":"Although each of these elements is optional, \\<Offset> cannot appear by itself."},{"content":"It must be provided together with either <ph id=\"ph1\">\\&lt;</ph>Date&gt; or <ph id=\"ph2\">\\&lt;</ph>Time&gt;.","pos":[80,140],"source":" It must be provided together with either \\<Date> or \\<Time>."},{"content":"If <ph id=\"ph1\">\\&lt;</ph>Date&gt; is missing, its default value is the current day.","pos":[141,201],"source":" If \\<Date> is missing, its default value is the current day."},{"content":"If <ph id=\"ph1\">\\&lt;</ph>Date&gt; is present but its year component consists of only two digits, it is converted to a year in the <ph id=\"ph2\">`provider`</ph> parameter's current calendar based on the value of the <ph id=\"ph3\">&lt;xref:System.Globalization.Calendar.TwoDigitYearMax%2A?displayProperty=fullName&gt;</ph> property.","pos":[202,465],"source":" If \\<Date> is present but its year component consists of only two digits, it is converted to a year in the `provider` parameter's current calendar based on the value of the <xref:System.Globalization.Calendar.TwoDigitYearMax%2A?displayProperty=fullName> property."},{"content":"If <ph id=\"ph1\">\\&lt;</ph>Time&gt; is missing, its default value is 12:00:00 AM.","pos":[466,522],"source":" If \\<Time> is missing, its default value is 12:00:00 AM."},{"content":"If <ph id=\"ph1\">\\&lt;</ph>Offset&gt; is missing, its default value is the offset of the local time zone, or <ph id=\"ph2\">&lt;xref:System.TimeSpan.Zero&gt;</ph> if either the <ph id=\"ph3\">&lt;xref:System.Globalization.DateTimeStyles?displayProperty=fullName&gt;</ph> or <ph id=\"ph4\">&lt;xref:System.Globalization.DateTimeStyles?displayProperty=fullName&gt;</ph> value is specified in <ph id=\"ph5\">`styles`</ph>.","pos":[523,819],"source":" If \\<Offset> is missing, its default value is the offset of the local time zone, or <xref:System.TimeSpan.Zero> if either the <xref:System.Globalization.DateTimeStyles?displayProperty=fullName> or <xref:System.Globalization.DateTimeStyles?displayProperty=fullName> value is specified in `styles`."},{"content":"If <ph id=\"ph1\">\\&lt;</ph>Offset&gt; is present, it can represent either a negative or a positive offset from Coordinated Universal Time (UTC).","pos":[820,939],"source":" If \\<Offset> is present, it can represent either a negative or a positive offset from Coordinated Universal Time (UTC)."},{"content":"In either case, <ph id=\"ph1\">\\&lt;</ph>Offset&gt; must include a sign symbol or the method returns <ph id=\"ph2\">`false`</ph>.","pos":[940,1023],"source":" In either case, \\<Offset> must include a sign symbol or the method returns `false`."}]},{"pos":[1732,1979],"content":"The `input` string is parsed by using the culture-specific formatting information in a <xref:System.Globalization.DateTimeFormatInfo> object supplied by the `formatProvider` parameter. The `formatProvider` parameter can be either of the following:","nodes":[{"content":"The <ph id=\"ph1\">`input`</ph> string is parsed by using the culture-specific formatting information in a <ph id=\"ph2\">&lt;xref:System.Globalization.DateTimeFormatInfo&gt;</ph> object supplied by the <ph id=\"ph3\">`formatProvider`</ph> parameter.","pos":[0,184],"source":"The `input` string is parsed by using the culture-specific formatting information in a <xref:System.Globalization.DateTimeFormatInfo> object supplied by the `formatProvider` parameter."},{"content":"The <ph id=\"ph1\">`formatProvider`</ph> parameter can be either of the following:","pos":[185,247],"source":" The `formatProvider` parameter can be either of the following:"}]},{"pos":[1989,2312],"content":"A <xref:System.Globalization.CultureInfo> object that represents the culture whose formatting is used in `input`. The <xref:System.Globalization.DateTimeFormatInfo> object returned by the <xref:System.Globalization.CultureInfo.DateTimeFormat%2A?displayProperty=fullName> property defines the format that is used in `input`.","nodes":[{"content":"A <ph id=\"ph1\">&lt;xref:System.Globalization.CultureInfo&gt;</ph> object that represents the culture whose formatting is used in <ph id=\"ph2\">`input`</ph>.","pos":[0,113],"source":"A <xref:System.Globalization.CultureInfo> object that represents the culture whose formatting is used in `input`."},{"content":"The <ph id=\"ph1\">&lt;xref:System.Globalization.DateTimeFormatInfo&gt;</ph> object returned by the <ph id=\"ph2\">&lt;xref:System.Globalization.CultureInfo.DateTimeFormat%2A?displayProperty=fullName&gt;</ph> property defines the format that is used in <ph id=\"ph3\">`input`</ph>.","pos":[114,323],"source":" The <xref:System.Globalization.DateTimeFormatInfo> object returned by the <xref:System.Globalization.CultureInfo.DateTimeFormat%2A?displayProperty=fullName> property defines the format that is used in `input`."}]},{"pos":[2322,2424],"content":"A <xref:System.Globalization.DateTimeFormatInfo> object that defines the format of date and time data.","nodes":[{"content":"A <ph id=\"ph1\">&lt;xref:System.Globalization.DateTimeFormatInfo&gt;</ph> object that defines the format of date and time data.","pos":[0,102],"source":"A <xref:System.Globalization.DateTimeFormatInfo> object that defines the format of date and time data."}]},{"pos":[2431,2663],"content":"In addition, each element can be delimited by leading or trailing white space, and the \\<Date> and \\<Time> components can include inner white space (such as 6:   00:00). Only the \\<Offset> component cannot include inner white space.","nodes":[{"content":"In addition, each element can be delimited by leading or trailing white space, and the \\<Date> and \\<Time> components can include inner white space (such as 6:   00:00). Only the \\<Offset> component cannot include inner white space.","pos":[0,232],"nodes":[{"content":"In addition, each element can be delimited by leading or trailing white space, and the <ph id=\"ph1\">\\&lt;</ph>Date&gt; and <ph id=\"ph2\">\\&lt;</ph>Time&gt; components can include inner white space (such as 6:   00:00).","pos":[0,169],"source":"In addition, each element can be delimited by leading or trailing white space, and the \\<Date> and \\<Time> components can include inner white space (such as 6:   00:00)."},{"content":"Only the <ph id=\"ph1\">\\&lt;</ph>Offset&gt; component cannot include inner white space.","pos":[170,232],"source":" Only the \\<Offset> component cannot include inner white space."}]}]},{"pos":[2670,2794],"content":"If <ph id=\"ph1\">`provider`</ph> is <ph id=\"ph2\">`null`</ph>, the <ph id=\"ph3\">&lt;xref:System.Globalization.CultureInfo&gt;</ph> object that corresponds to the current culture is used.","source":"If `provider` is `null`, the <xref:System.Globalization.CultureInfo> object that corresponds to the current culture is used."},{"pos":[2801,3202],"content":"The positive or negative sign used in \\<Offset> must be either + or -. It is not defined by the <xref:System.Globalization.NumberFormatInfo.PositiveSign%2A> or <xref:System.Globalization.NumberFormatInfo.NegativeSign%2A> properties of the <xref:System.Globalization.NumberFormatInfo> object returned by the `formatprovider` parameter's <xref:System.Globalization.CultureInfo.NumberFormat%2A> property.","nodes":[{"content":"The positive or negative sign used in <ph id=\"ph1\">\\&lt;</ph>Offset&gt; must be either + or -.","pos":[0,70],"source":"The positive or negative sign used in \\<Offset> must be either + or -."},{"content":"It is not defined by the <ph id=\"ph1\">&lt;xref:System.Globalization.NumberFormatInfo.PositiveSign%2A&gt;</ph> or <ph id=\"ph2\">&lt;xref:System.Globalization.NumberFormatInfo.NegativeSign%2A&gt;</ph> properties of the <ph id=\"ph3\">&lt;xref:System.Globalization.NumberFormatInfo&gt;</ph> object returned by the <ph id=\"ph4\">`formatprovider`</ph> parameter's <ph id=\"ph5\">&lt;xref:System.Globalization.CultureInfo.NumberFormat%2A&gt;</ph> property.","pos":[71,401],"source":" It is not defined by the <xref:System.Globalization.NumberFormatInfo.PositiveSign%2A> or <xref:System.Globalization.NumberFormatInfo.NegativeSign%2A> properties of the <xref:System.Globalization.NumberFormatInfo> object returned by the `formatprovider` parameter's <xref:System.Globalization.CultureInfo.NumberFormat%2A> property."}]},{"pos":[3209,3307],"content":"The following members of the <xref:System.Globalization.DateTimeStyles> enumeration are supported:","nodes":[{"content":"The following members of the <ph id=\"ph1\">&lt;xref:System.Globalization.DateTimeStyles&gt;</ph> enumeration are supported:","pos":[0,98],"source":"The following members of the <xref:System.Globalization.DateTimeStyles> enumeration are supported:"}]},{"pos":[3314,3335],"content":"DateTimeStyles Member","nodes":[{"content":"DateTimeStyles Member","pos":[0,21]}]},{"pos":[3336,3344],"content":"Comments","nodes":[{"content":"Comments","pos":[0,8]}]},{"pos":[3396,3456],"content":"<xref:System.Globalization.DateTimeStyles.AdjustToUniversal>","nodes":[]},{"pos":[3457,3666],"content":"Parses the string represented by `input` and, if necessary, converts it to UTC. It is equivalent to parsing a string, and then calling the returned object's <xref:System.DateTimeOffset.ToUniversalTime> method.","nodes":[{"content":"Parses the string represented by <ph id=\"ph1\">`input`</ph> and, if necessary, converts it to UTC.","pos":[0,79],"source":"Parses the string represented by `input` and, if necessary, converts it to UTC."},{"content":"It is equivalent to parsing a string, and then calling the returned object's <ph id=\"ph1\">&lt;xref:System.DateTimeOffset.ToUniversalTime&gt;</ph> method.","pos":[80,209],"source":" It is equivalent to parsing a string, and then calling the returned object's <xref:System.DateTimeOffset.ToUniversalTime> method."}]},{"pos":[3671,3729],"content":"<xref:System.Globalization.DateTimeStyles.AllowInnerWhite>","nodes":[]},{"pos":[3730,3836],"content":"Although valid, this value is ignored. Inner white space is allowed in the \\<Date> and \\<Time> components.","nodes":[{"content":"Although valid, this value is ignored. Inner white space is allowed in the \\<Date> and \\<Time> components.","pos":[0,106],"nodes":[{"content":"Although valid, this value is ignored.","pos":[0,38]},{"content":"Inner white space is allowed in the <ph id=\"ph1\">\\&lt;</ph>Date&gt; and <ph id=\"ph2\">\\&lt;</ph>Time&gt; components.","pos":[39,106],"source":" Inner white space is allowed in the \\<Date> and \\<Time> components."}]}]},{"pos":[3841,3901],"content":"<xref:System.Globalization.DateTimeStyles.AllowLeadingWhite>","nodes":[]},{"pos":[3902,4020],"content":"Although valid, this value is ignored. Leading white space is allowed in front of each component in the parsed string.","nodes":[{"content":"Although valid, this value is ignored. Leading white space is allowed in front of each component in the parsed string.","pos":[0,118],"nodes":[{"content":"Although valid, this value is ignored.","pos":[0,38]},{"content":"Leading white space is allowed in front of each component in the parsed string.","pos":[39,118]}]}]},{"pos":[4025,4086],"content":"<xref:System.Globalization.DateTimeStyles.AllowTrailingWhite>","nodes":[]},{"pos":[4087,4206],"content":"Although valid, this value is ignored. Trailing white space is allowed in front of each component in the parsed string.","nodes":[{"content":"Although valid, this value is ignored. Trailing white space is allowed in front of each component in the parsed string.","pos":[0,119],"nodes":[{"content":"Although valid, this value is ignored.","pos":[0,38]},{"content":"Trailing white space is allowed in front of each component in the parsed string.","pos":[39,119]}]}]},{"pos":[4211,4270],"content":"<xref:System.Globalization.DateTimeStyles.AllowWhiteSpaces>","nodes":[]},{"pos":[4271,4495],"content":"This is the default behavior. It cannot be overridden by supplying a more restrictive <xref:System.Globalization.DateTimeStyles> enumeration value, such as <xref:System.Globalization.DateTimeStyles?displayProperty=fullName>.","nodes":[{"content":"This is the default behavior. It cannot be overridden by supplying a more restrictive <xref:System.Globalization.DateTimeStyles> enumeration value, such as <xref:System.Globalization.DateTimeStyles?displayProperty=fullName>.","pos":[0,224],"nodes":[{"content":"This is the default behavior.","pos":[0,29]},{"content":"It cannot be overridden by supplying a more restrictive <ph id=\"ph1\">&lt;xref:System.Globalization.DateTimeStyles&gt;</ph> enumeration value, such as <ph id=\"ph2\">&lt;xref:System.Globalization.DateTimeStyles?displayProperty=fullName&gt;</ph>.","pos":[30,224],"source":" It cannot be overridden by supplying a more restrictive <xref:System.Globalization.DateTimeStyles> enumeration value, such as <xref:System.Globalization.DateTimeStyles?displayProperty=fullName>."}]}]},{"pos":[4500,4554],"content":"<xref:System.Globalization.DateTimeStyles.AssumeLocal>","nodes":[]},{"pos":[4555,4868],"content":"Indicates that, if the `input` parameter lacks an \\<Offset> element, the offset of the local time zone should be provided. This is the default behavior of the <xref:System.DateTimeOffset.TryParse%28System.String%2CSystem.IFormatProvider%2CSystem.Globalization.DateTimeStyles%2CSystem.DateTimeOffset%40%29> method.","nodes":[{"content":"Indicates that, if the <ph id=\"ph1\">`input`</ph> parameter lacks an <ph id=\"ph2\">\\&lt;</ph>Offset&gt; element, the offset of the local time zone should be provided.","pos":[0,122],"source":"Indicates that, if the `input` parameter lacks an \\<Offset> element, the offset of the local time zone should be provided."},{"content":"This is the default behavior of the <ph id=\"ph1\">&lt;xref:System.DateTimeOffset.TryParse%28System.String%2CSystem.IFormatProvider%2CSystem.Globalization.DateTimeStyles%2CSystem.DateTimeOffset%40%29&gt;</ph> method.","pos":[123,313],"source":" This is the default behavior of the <xref:System.DateTimeOffset.TryParse%28System.String%2CSystem.IFormatProvider%2CSystem.Globalization.DateTimeStyles%2CSystem.DateTimeOffset%40%29> method."}]},{"pos":[4873,4931],"content":"<xref:System.Globalization.DateTimeStyles.AssumeUniversal>","nodes":[]},{"pos":[4932,5043],"content":"Indicates that, if the <ph id=\"ph1\">`input`</ph> parameter lacks an <ph id=\"ph2\">\\&lt;</ph>Offset&gt; element, the UTC offset (00:00) should be provided.","source":"Indicates that, if the `input` parameter lacks an \\<Offset> element, the UTC offset (00:00) should be provided."},{"pos":[5048,5095],"content":"<xref:System.Globalization.DateTimeStyles.None>","nodes":[]},{"pos":[5096,5152],"content":"Although valid, this value is ignored and has no effect.","nodes":[{"content":"Although valid, this value is ignored and has no effect.","pos":[0,56]}]},{"pos":[5157,5213],"content":"<xref:System.Globalization.DateTimeStyles.RoundtripKind>","nodes":[]},{"pos":[5214,5326],"content":"Because the <ph id=\"ph1\">&lt;xref:System.DateTimeOffset&gt;</ph> structure does not include a <ph id=\"ph2\">`Kind`</ph> property, this value has no effect.","source":"Because the <xref:System.DateTimeOffset> structure does not include a `Kind` property, this value has no effect."},{"pos":[5334,5532],"content":"Only the <xref:System.Globalization.DateTimeStyles?displayProperty=fullName> value is not supported. An <xref:System.ArgumentException> is thrown if this value is included in the `styles` parameter.","nodes":[{"content":"Only the <ph id=\"ph1\">&lt;xref:System.Globalization.DateTimeStyles?displayProperty=fullName&gt;</ph> value is not supported.","pos":[0,100],"source":"Only the <xref:System.Globalization.DateTimeStyles?displayProperty=fullName> value is not supported."},{"content":"An <ph id=\"ph1\">&lt;xref:System.ArgumentException&gt;</ph> is thrown if this value is included in the <ph id=\"ph2\">`styles`</ph> parameter.","pos":[101,198],"source":" An <xref:System.ArgumentException> is thrown if this value is included in the `styles` parameter."}]}],"pos":[294962,300559],"yaml":true,"extradata":"MT"},{"content":"A string that contains a date and time to convert.","nodes":[{"pos":[0,50],"content":"A string that contains a date and time to convert.","nodes":[{"content":"A string that contains a date and time to convert.","pos":[0,50]}]}],"pos":[301440,301491],"yaml":true},{"content":"An object that provides culture-specific formatting information about <code>input</code>.","nodes":[{"pos":[0,89],"content":"An object that provides culture-specific formatting information about <bpt id=\"p1\">&lt;code&gt;</bpt><ph id=\"ph1\">input</ph><ept id=\"p1\">&lt;/code&gt;</ept>.","source":"An object that provides culture-specific formatting information about <code>input</code>."}],"pos":[301570,301660],"yaml":true},{"content":"A bitwise combination of enumeration values that indicates the permitted format of <code>input</code>.","nodes":[{"pos":[0,102],"content":"A bitwise combination of enumeration values that indicates the permitted format of <bpt id=\"p1\">&lt;code&gt;</bpt><ph id=\"ph1\">input</ph><ept id=\"p1\">&lt;/code&gt;</ept>.","source":"A bitwise combination of enumeration values that indicates the permitted format of <code>input</code>."}],"pos":[301744,301847],"yaml":true},{"content":"When the method returns, contains the <xref href=\"System.DateTimeOffset\"></xref> value equivalent to the date and time of <code>input</code>, if the conversion succeeded, or <xref href=\"System.DateTimeOffset.MinValue\"></xref>, if the conversion failed. The conversion fails if the <code>input</code> parameter is `null` or does not contain a valid string representation of a date and time. This parameter is passed uninitialized.","nodes":[{"pos":[0,429],"content":"When the method returns, contains the <xref href=\"System.DateTimeOffset\"></xref> value equivalent to the date and time of <code>input</code>, if the conversion succeeded, or <xref href=\"System.DateTimeOffset.MinValue\"></xref>, if the conversion failed. The conversion fails if the <code>input</code> parameter is `null` or does not contain a valid string representation of a date and time. This parameter is passed uninitialized.","nodes":[{"content":"When the method returns, contains the <ph id=\"ph1\">&lt;xref href=\"System.DateTimeOffset\"&gt;&lt;/xref&gt;</ph> value equivalent to the date and time of <bpt id=\"p1\">&lt;code&gt;</bpt><ph id=\"ph2\">input</ph><ept id=\"p1\">&lt;/code&gt;</ept>, if the conversion succeeded, or <ph id=\"ph3\">&lt;xref href=\"System.DateTimeOffset.MinValue\"&gt;&lt;/xref&gt;</ph>, if the conversion failed.","pos":[0,252],"source":"When the method returns, contains the <xref href=\"System.DateTimeOffset\"></xref> value equivalent to the date and time of <code>input</code>, if the conversion succeeded, or <xref href=\"System.DateTimeOffset.MinValue\"></xref>, if the conversion failed."},{"content":"The conversion fails if the <bpt id=\"p1\">&lt;code&gt;</bpt><ph id=\"ph1\">input</ph><ept id=\"p1\">&lt;/code&gt;</ept> parameter is <ph id=\"ph2\">`null`</ph> or does not contain a valid string representation of a date and time.","pos":[253,389],"source":" The conversion fails if the <code>input</code> parameter is `null` or does not contain a valid string representation of a date and time."},{"content":"This parameter is passed uninitialized.","pos":[390,429]}]}],"pos":[301917,302347],"yaml":true},{"content":"`true` if the <code>input</code> parameter is successfully converted; otherwise, `false`.","nodes":[{"pos":[0,89],"content":"<ph id=\"ph1\">`true`</ph> if the <bpt id=\"p1\">&lt;code&gt;</bpt><ph id=\"ph2\">input</ph><ept id=\"p1\">&lt;/code&gt;</ept> parameter is successfully converted; otherwise, <ph id=\"ph3\">`false`</ph>.","source":"`true` if the <code>input</code> parameter is successfully converted; otherwise, `false`."}],"pos":[302405,302497],"yaml":true},{"content":"<code>styles</code> includes an undefined <xref href=\"System.Globalization.DateTimeStyles\"></xref> value.  \n  \n -or-  \n  \n <xref href=\"System.Globalization.DateTimeStyles.NoCurrentDateDefault\"></xref> is not supported.  \n  \n -or-  \n  \n <code>styles</code> includes mutually exclusive <xref href=\"System.Globalization.DateTimeStyles\"></xref> values.","nodes":[{"pos":[0,105],"content":"<ph id=\"ph1\">&lt;code&gt;styles&lt;/code&gt;</ph> includes an undefined <ph id=\"ph2\">&lt;xref href=\"System.Globalization.DateTimeStyles\"&gt;&lt;/xref&gt;</ph> value.","source":"<code>styles</code> includes an undefined <xref href=\"System.Globalization.DateTimeStyles\"></xref> value."},{"pos":[112,116],"content":"-or-","nodes":[{"content":"-or-","pos":[0,4]}]},{"pos":[123,218],"content":"<ph id=\"ph1\">&lt;xref href=\"System.Globalization.DateTimeStyles.NoCurrentDateDefault\"&gt;&lt;/xref&gt;</ph> is not supported.","source":"<xref href=\"System.Globalization.DateTimeStyles.NoCurrentDateDefault\"></xref> is not supported."},{"pos":[225,229],"content":"-or-","nodes":[{"content":"-or-","pos":[0,4]}]},{"pos":[236,348],"content":"<ph id=\"ph1\">&lt;code&gt;styles&lt;/code&gt;</ph> includes mutually exclusive <ph id=\"ph2\">&lt;xref href=\"System.Globalization.DateTimeStyles\"&gt;&lt;/xref&gt;</ph> values.","source":"<code>styles</code> includes mutually exclusive <xref href=\"System.Globalization.DateTimeStyles\"></xref> values."}],"pos":[302649,303014],"yaml":true},{"content":"Tries to converts a specified string representation of a date and time to its <xref href=\"System.DateTimeOffset\"></xref> equivalent, and returns a value that indicates whether the conversion succeeded.","nodes":[{"pos":[0,201],"content":"Tries to converts a specified string representation of a date and time to its <ph id=\"ph1\">&lt;xref href=\"System.DateTimeOffset\"&gt;&lt;/xref&gt;</ph> equivalent, and returns a value that indicates whether the conversion succeeded.","source":"Tries to converts a specified string representation of a date and time to its <xref href=\"System.DateTimeOffset\"></xref> equivalent, and returns a value that indicates whether the conversion succeeded."}],"pos":[304614,304816],"yaml":true},{"content":"This overload of the <xref:System.DateTimeOffset.TryParse%28System.String%2CSystem.DateTimeOffset%40%29> method is like the <xref:System.DateTimeOffset.Parse%28System.String%29?displayProperty=fullName> method, except that it does not throw an exception if the conversion fails. It parses a string with three elements that can appear in any order and are delimited by white space. These three elements are shown in the following table.  \n  \n|Element|Example|  \n|-------------|-------------|  \n|\\<Date>|\"2/10/2007\"|  \n|\\<Time>|\"1:02:03 PM\"|  \n|\\<Offset>|\"-7:30\"|  \n  \n Although each of these elements is optional, \\<Offset> cannot appear by itself. It must be provided together with either \\<Date> or \\<Time>. If \\<Date> is missing, its default value is the current day. If \\<Date> is present but its year component consists of only two digits, it is converted to a year in the current culture's current calendar based on the value of the <xref:System.Globalization.Calendar.TwoDigitYearMax%2A?displayProperty=fullName> property. If \\<Time> is missing, its default value is 12:00:00 AM. If \\<Offset> is missing, its default value is the offset of the local time zone. If \\<Offset> is present, it can represent either a negative or a positive offset from Coordinated Universal Time (UTC). In either case, \\<Offset> must include a sign symbol or the method returns `false`.  \n  \n The `input` string is parsed by using the formatting information in a <xref:System.Globalization.DateTimeFormatInfo> object initialized for the current culture. To parse a string that contains designated formatting that does not necessarily correspond to that of the current culture, use the <xref:System.DateTimeOffset.TryParseExact%2A> method and provide a format specifier.","nodes":[{"pos":[0,435],"content":"This overload of the <xref:System.DateTimeOffset.TryParse%28System.String%2CSystem.DateTimeOffset%40%29> method is like the <xref:System.DateTimeOffset.Parse%28System.String%29?displayProperty=fullName> method, except that it does not throw an exception if the conversion fails. It parses a string with three elements that can appear in any order and are delimited by white space. These three elements are shown in the following table.","nodes":[{"content":"This overload of the <xref:System.DateTimeOffset.TryParse%28System.String%2CSystem.DateTimeOffset%40%29> method is like the <xref:System.DateTimeOffset.Parse%28System.String%29?displayProperty=fullName> method, except that it does not throw an exception if the conversion fails. It parses a string with three elements that can appear in any order and are delimited by white space. These three elements are shown in the following table.","pos":[0,435],"nodes":[{"content":"This overload of the <ph id=\"ph1\">&lt;xref:System.DateTimeOffset.TryParse%28System.String%2CSystem.DateTimeOffset%40%29&gt;</ph> method is like the <ph id=\"ph2\">&lt;xref:System.DateTimeOffset.Parse%28System.String%29?displayProperty=fullName&gt;</ph> method, except that it does not throw an exception if the conversion fails.","pos":[0,278],"source":"This overload of the <xref:System.DateTimeOffset.TryParse%28System.String%2CSystem.DateTimeOffset%40%29> method is like the <xref:System.DateTimeOffset.Parse%28System.String%29?displayProperty=fullName> method, except that it does not throw an exception if the conversion fails."},{"content":"It parses a string with three elements that can appear in any order and are delimited by white space.","pos":[279,380]},{"content":"These three elements are shown in the following table.","pos":[381,435]}]}]},{"pos":[442,449],"content":"Element","nodes":[{"content":"Element","pos":[0,7]}]},{"pos":[450,457],"content":"Example","nodes":[{"content":"Example","pos":[0,7]}]},{"pos":[494,501],"content":"\\<Date>","nodes":[{"content":"<ph id=\"ph1\">\\&lt;</ph>Date&gt;","pos":[0,7],"source":"\\<Date>"}]},{"pos":[502,513],"content":"\"2/10/2007\"","nodes":[{"content":"\"2/10/2007\"","pos":[0,11]}]},{"pos":[518,525],"content":"\\<Time>","nodes":[{"content":"<ph id=\"ph1\">\\&lt;</ph>Time&gt;","pos":[0,7],"source":"\\<Time>"}]},{"pos":[526,538],"content":"\"1:02:03 PM\"","nodes":[{"content":"\"1:02:03 PM\"","pos":[0,12]}]},{"pos":[543,552],"content":"\\<Offset>","nodes":[{"content":"<ph id=\"ph1\">\\&lt;</ph>Offset&gt;","pos":[0,9],"source":"\\<Offset>"}]},{"pos":[553,560],"content":"\"-7:30\"","nodes":[{"content":"\"-7:30\"","pos":[0,7]}]},{"pos":[568,1370],"content":"Although each of these elements is optional, \\<Offset> cannot appear by itself. It must be provided together with either \\<Date> or \\<Time>. If \\<Date> is missing, its default value is the current day. If \\<Date> is present but its year component consists of only two digits, it is converted to a year in the current culture's current calendar based on the value of the <xref:System.Globalization.Calendar.TwoDigitYearMax%2A?displayProperty=fullName> property. If \\<Time> is missing, its default value is 12:00:00 AM. If \\<Offset> is missing, its default value is the offset of the local time zone. If \\<Offset> is present, it can represent either a negative or a positive offset from Coordinated Universal Time (UTC). In either case, \\<Offset> must include a sign symbol or the method returns `false`.","nodes":[{"content":"Although each of these elements is optional, <ph id=\"ph1\">\\&lt;</ph>Offset&gt; cannot appear by itself.","pos":[0,79],"source":"Although each of these elements is optional, \\<Offset> cannot appear by itself."},{"content":"It must be provided together with either <ph id=\"ph1\">\\&lt;</ph>Date&gt; or <ph id=\"ph2\">\\&lt;</ph>Time&gt;.","pos":[80,140],"source":" It must be provided together with either \\<Date> or \\<Time>."},{"content":"If <ph id=\"ph1\">\\&lt;</ph>Date&gt; is missing, its default value is the current day.","pos":[141,201],"source":" If \\<Date> is missing, its default value is the current day."},{"content":"If <ph id=\"ph1\">\\&lt;</ph>Date&gt; is present but its year component consists of only two digits, it is converted to a year in the current culture's current calendar based on the value of the <ph id=\"ph2\">&lt;xref:System.Globalization.Calendar.TwoDigitYearMax%2A?displayProperty=fullName&gt;</ph> property.","pos":[202,460],"source":" If \\<Date> is present but its year component consists of only two digits, it is converted to a year in the current culture's current calendar based on the value of the <xref:System.Globalization.Calendar.TwoDigitYearMax%2A?displayProperty=fullName> property."},{"content":"If <ph id=\"ph1\">\\&lt;</ph>Time&gt; is missing, its default value is 12:00:00 AM.","pos":[461,517],"source":" If \\<Time> is missing, its default value is 12:00:00 AM."},{"content":"If <ph id=\"ph1\">\\&lt;</ph>Offset&gt; is missing, its default value is the offset of the local time zone.","pos":[518,598],"source":" If \\<Offset> is missing, its default value is the offset of the local time zone."},{"content":"If <ph id=\"ph1\">\\&lt;</ph>Offset&gt; is present, it can represent either a negative or a positive offset from Coordinated Universal Time (UTC).","pos":[599,718],"source":" If \\<Offset> is present, it can represent either a negative or a positive offset from Coordinated Universal Time (UTC)."},{"content":"In either case, <ph id=\"ph1\">\\&lt;</ph>Offset&gt; must include a sign symbol or the method returns <ph id=\"ph2\">`false`</ph>.","pos":[719,802],"source":" In either case, \\<Offset> must include a sign symbol or the method returns `false`."}]},{"pos":[1377,1753],"content":"The `input` string is parsed by using the formatting information in a <xref:System.Globalization.DateTimeFormatInfo> object initialized for the current culture. To parse a string that contains designated formatting that does not necessarily correspond to that of the current culture, use the <xref:System.DateTimeOffset.TryParseExact%2A> method and provide a format specifier.","nodes":[{"content":"The <ph id=\"ph1\">`input`</ph> string is parsed by using the formatting information in a <ph id=\"ph2\">&lt;xref:System.Globalization.DateTimeFormatInfo&gt;</ph> object initialized for the current culture.","pos":[0,160],"source":"The `input` string is parsed by using the formatting information in a <xref:System.Globalization.DateTimeFormatInfo> object initialized for the current culture."},{"content":"To parse a string that contains designated formatting that does not necessarily correspond to that of the current culture, use the <ph id=\"ph1\">&lt;xref:System.DateTimeOffset.TryParseExact%2A&gt;</ph> method and provide a format specifier.","pos":[161,376],"source":" To parse a string that contains designated formatting that does not necessarily correspond to that of the current culture, use the <xref:System.DateTimeOffset.TryParseExact%2A> method and provide a format specifier."}]}],"pos":[304827,306611],"yaml":true,"extradata":"MT"},{"content":"A string that contains a date and time to convert.","nodes":[{"pos":[0,50],"content":"A string that contains a date and time to convert.","nodes":[{"content":"A string that contains a date and time to convert.","pos":[0,50]}]}],"pos":[307288,307339],"yaml":true},{"content":"When the method returns, contains the <xref href=\"System.DateTimeOffset\"></xref> equivalent to the date and time of <code>input</code>, if the conversion succeeded, or <xref href=\"System.DateTimeOffset.MinValue\"></xref>, if the conversion failed. The conversion fails if the <code>input</code> parameter is `null` or does not contain a valid string representation of a date and time. This parameter is passed uninitialized.","nodes":[{"pos":[0,423],"content":"When the method returns, contains the <xref href=\"System.DateTimeOffset\"></xref> equivalent to the date and time of <code>input</code>, if the conversion succeeded, or <xref href=\"System.DateTimeOffset.MinValue\"></xref>, if the conversion failed. The conversion fails if the <code>input</code> parameter is `null` or does not contain a valid string representation of a date and time. This parameter is passed uninitialized.","nodes":[{"content":"When the method returns, contains the <ph id=\"ph1\">&lt;xref href=\"System.DateTimeOffset\"&gt;&lt;/xref&gt;</ph> equivalent to the date and time of <bpt id=\"p1\">&lt;code&gt;</bpt><ph id=\"ph2\">input</ph><ept id=\"p1\">&lt;/code&gt;</ept>, if the conversion succeeded, or <ph id=\"ph3\">&lt;xref href=\"System.DateTimeOffset.MinValue\"&gt;&lt;/xref&gt;</ph>, if the conversion failed.","pos":[0,246],"source":"When the method returns, contains the <xref href=\"System.DateTimeOffset\"></xref> equivalent to the date and time of <code>input</code>, if the conversion succeeded, or <xref href=\"System.DateTimeOffset.MinValue\"></xref>, if the conversion failed."},{"content":"The conversion fails if the <bpt id=\"p1\">&lt;code&gt;</bpt><ph id=\"ph1\">input</ph><ept id=\"p1\">&lt;/code&gt;</ept> parameter is <ph id=\"ph2\">`null`</ph> or does not contain a valid string representation of a date and time.","pos":[247,383],"source":" The conversion fails if the <code>input</code> parameter is `null` or does not contain a valid string representation of a date and time."},{"content":"This parameter is passed uninitialized.","pos":[384,423]}]}],"pos":[307409,307833],"yaml":true},{"content":"`true` if the <code>input</code> parameter is successfully converted; otherwise, `false`.","nodes":[{"pos":[0,89],"content":"<ph id=\"ph1\">`true`</ph> if the <bpt id=\"p1\">&lt;code&gt;</bpt><ph id=\"ph2\">input</ph><ept id=\"p1\">&lt;/code&gt;</ept> parameter is successfully converted; otherwise, <ph id=\"ph3\">`false`</ph>.","source":"`true` if the <code>input</code> parameter is successfully converted; otherwise, `false`."}],"pos":[307891,307983],"yaml":true},{"content":"Converts the specified string representation of a date and time to its <xref href=\"System.DateTimeOffset\"></xref> equivalent using the specified array of formats, culture-specific format information, and style. The format of the string representation must match one of the specified formats exactly.","nodes":[{"pos":[0,299],"content":"Converts the specified string representation of a date and time to its <xref href=\"System.DateTimeOffset\"></xref> equivalent using the specified array of formats, culture-specific format information, and style. The format of the string representation must match one of the specified formats exactly.","nodes":[{"content":"Converts the specified string representation of a date and time to its <ph id=\"ph1\">&lt;xref href=\"System.DateTimeOffset\"&gt;&lt;/xref&gt;</ph> equivalent using the specified array of formats, culture-specific format information, and style.","pos":[0,210],"source":"Converts the specified string representation of a date and time to its <xref href=\"System.DateTimeOffset\"></xref> equivalent using the specified array of formats, culture-specific format information, and style."},{"content":"The format of the string representation must match one of the specified formats exactly.","pos":[211,299]}]}],"pos":[310028,310328],"yaml":true},{"content":"The <xref:System.DateTimeOffset.TryParseExact%28System.String%2CSystem.String%5B%5D%2CSystem.IFormatProvider%2CSystem.Globalization.DateTimeStyles%2CSystem.DateTimeOffset%40%29> method parses the string representation of a date that matches any one of the patterns assigned to the `formats` array. If the `input` string does not match any one of these patterns with any variations defined by the `styles` parameter, the parsing operation fails and the method returns `false`. Aside from comparing `input` to multiple strings that contain format specifiers, this overload behaves identically to the <xref:System.DateTimeOffset.ParseExact%28System.String%2CSystem.String%5B%5D%2CSystem.IFormatProvider%2CSystem.Globalization.DateTimeStyles%29?displayProperty=fullName> method.  \n  \n The `formats` parameter is a string array whose elements contain either a single standard format specifier or one or more custom format specifiers that define the possible pattern of `input`. For details about valid formatting codes, see [Standard Date and Time Format Strings](~/docs/standard/base-types/standard-date-and-time-format-strings.md) and [Custom Date and Time Format Strings](~/docs/standard/base-types/custom-date-and-time-format-strings.md). If the matched element in `formats` includes the `z`, `zz`, or `zzz` custom format specifiers to indicate that an offset must be present in `input`, that offset must include either a negative sign or a positive sign. If the sign is missing, the parse operation fails and the method returns `false`.  \n  \n> [!IMPORTANT]\n>  Using the `formats` parameter of this overload to specify multiple formats can help reduce the frustration many users experience when they enter dates and times. In particular, the ability to define multiple input patterns enables an application to handle date and time representations that can either include or lack leading zeros in months, days, hours, minutes, and seconds. The example provides an illustration of this.  \n  \n If the matched element in `formats` requires that `input` contain a date but not a time, the resulting <xref:System.DateTimeOffset> object is assigned a time of midnight (0:00:00). If the matched element in `formats` requires that input contain a time but not a date, the resulting <xref:System.DateTimeOffset> object is assigned the current date on the local system. If the matched element in `formats` does not require that `input` contain an offset, the offset of the resulting <xref:System.DateTimeOffset> object depends on the value of the `styles` parameter. If `styles` includes <xref:System.Globalization.DateTimeStyles.AssumeLocal>, the offset of the local time zone is assigned to the <xref:System.DateTimeOffset> object. If `styles` includes <xref:System.Globalization.DateTimeStyles.AssumeUniversal>, the Coordinated Universal Time (UTC) offset, or +00:00, is assigned to the <xref:System.DateTimeOffset> object. If neither value is specified, the offset of the local time zone is used.  \n  \n The particular date and time symbols and strings used in `input` are defined by the `formatProvider` parameter. The same is true for the precise pattern of `input` if the matching element of `formats` is a standard format specifier string. The `formatProvider` parameter can be either of the following:  \n  \n-   A <xref:System.Globalization.CultureInfo> object that represents the culture based on which `input` is interpreted. The <xref:System.Globalization.DateTimeFormatInfo> object returned by the <xref:System.Globalization.CultureInfo.DateTimeFormat%2A?displayProperty=fullName> property defines the symbols and formatting in `input`.  \n  \n-   A <xref:System.Globalization.DateTimeFormatInfo> object that defines the format of date and time data.  \n  \n If `formatprovider` is `null`, the <xref:System.Globalization.CultureInfo> object that corresponds to the current culture is used.  \n  \n The `styles` parameter defines whether white space is permitted in the input string, indicates how strings without an explicit offset component are parsed, and supports UTC conversion as part of the parsing operation. All members of the <xref:System.Globalization.DateTimeStyles> enumeration are supported except <xref:System.Globalization.DateTimeStyles.NoCurrentDateDefault>. The following table lists the effect of each supported member.  \n  \n|`DateTimeStyles` member|Behavior|  \n|-----------------------------|--------------|  \n|<xref:System.Globalization.DateTimeStyles.AdjustToUniversal>|Parses `input` and, if necessary, converts it to UTC. It is equivalent to parsing a string, and then calling the <xref:System.DateTimeOffset.ToUniversalTime%2A?displayProperty=fullName> method of the returned <xref:System.DateTimeOffset> object.|  \n|<xref:System.Globalization.DateTimeStyles.AssumeLocal>|If the matched element in `formats` does not require that `input` contain an offset value, the returned <xref:System.DateTimeOffset> object is given the offset of the local time zone. This is the default value.|  \n|<xref:System.Globalization.DateTimeStyles.AssumeUniversal>|If the matched element in `formats` does not require that `input` contain an offset value, the returned <xref:System.DateTimeOffset> object is given the UTC offset (+00:00).|  \n|<xref:System.Globalization.DateTimeStyles.AllowInnerWhite>|Allows `input` to include inner white space not specified by the elements in `formats`. Extra white space can appear between date and time components and within individual components (except for the offset) and is ignored when parsing the string.|  \n|<xref:System.Globalization.DateTimeStyles.AllowLeadingWhite>|Allows `input` to include leading spaces not specified by the elements in `formats`. These are ignored when parsing the string.|  \n|<xref:System.Globalization.DateTimeStyles.AllowTrailingWhite>|Allows `input` to include trailing spaces not specified by the elements in `formats`. These are ignored when parsing the string.|  \n|<xref:System.Globalization.DateTimeStyles.AllowWhiteSpaces>|Allows `input` to include leading, trailing, and inner spaces not specified by the elements in `formats`. All extra white-space characters not specified in the matched element in `formats` are ignored when parsing the string.|  \n|<xref:System.Globalization.DateTimeStyles.None>|Indicates that additional white space is not permitted in `input`. White space must appear exactly as specified in a particular element in `formats` for a successful match to occur. This is the default behavior.|  \n|<xref:System.Globalization.DateTimeStyles.RoundtripKind>|Has no effect because the <xref:System.DateTimeOffset> structure does not include a `Kind` property.|","nodes":[{"pos":[0,774],"content":"The <xref:System.DateTimeOffset.TryParseExact%28System.String%2CSystem.String%5B%5D%2CSystem.IFormatProvider%2CSystem.Globalization.DateTimeStyles%2CSystem.DateTimeOffset%40%29> method parses the string representation of a date that matches any one of the patterns assigned to the `formats` array. If the `input` string does not match any one of these patterns with any variations defined by the `styles` parameter, the parsing operation fails and the method returns `false`. Aside from comparing `input` to multiple strings that contain format specifiers, this overload behaves identically to the <xref:System.DateTimeOffset.ParseExact%28System.String%2CSystem.String%5B%5D%2CSystem.IFormatProvider%2CSystem.Globalization.DateTimeStyles%29?displayProperty=fullName> method.","nodes":[{"content":"The <ph id=\"ph1\">&lt;xref:System.DateTimeOffset.TryParseExact%28System.String%2CSystem.String%5B%5D%2CSystem.IFormatProvider%2CSystem.Globalization.DateTimeStyles%2CSystem.DateTimeOffset%40%29&gt;</ph> method parses the string representation of a date that matches any one of the patterns assigned to the <ph id=\"ph2\">`formats`</ph> array.","pos":[0,297],"source":"The <xref:System.DateTimeOffset.TryParseExact%28System.String%2CSystem.String%5B%5D%2CSystem.IFormatProvider%2CSystem.Globalization.DateTimeStyles%2CSystem.DateTimeOffset%40%29> method parses the string representation of a date that matches any one of the patterns assigned to the `formats` array."},{"content":"If the <ph id=\"ph1\">`input`</ph> string does not match any one of these patterns with any variations defined by the <ph id=\"ph2\">`styles`</ph> parameter, the parsing operation fails and the method returns <ph id=\"ph3\">`false`</ph>.","pos":[298,475],"source":" If the `input` string does not match any one of these patterns with any variations defined by the `styles` parameter, the parsing operation fails and the method returns `false`."},{"content":"Aside from comparing <ph id=\"ph1\">`input`</ph> to multiple strings that contain format specifiers, this overload behaves identically to the <ph id=\"ph2\">&lt;xref:System.DateTimeOffset.ParseExact%28System.String%2CSystem.String%5B%5D%2CSystem.IFormatProvider%2CSystem.Globalization.DateTimeStyles%29?displayProperty=fullName&gt;</ph> method.","pos":[476,774],"source":" Aside from comparing `input` to multiple strings that contain format specifiers, this overload behaves identically to the <xref:System.DateTimeOffset.ParseExact%28System.String%2CSystem.String%5B%5D%2CSystem.IFormatProvider%2CSystem.Globalization.DateTimeStyles%29?displayProperty=fullName> method."}]},{"pos":[781,1536],"content":"The `formats` parameter is a string array whose elements contain either a single standard format specifier or one or more custom format specifiers that define the possible pattern of `input`. For details about valid formatting codes, see [Standard Date and Time Format Strings](~/docs/standard/base-types/standard-date-and-time-format-strings.md) and [Custom Date and Time Format Strings](~/docs/standard/base-types/custom-date-and-time-format-strings.md). If the matched element in `formats` includes the `z`, `zz`, or `zzz` custom format specifiers to indicate that an offset must be present in `input`, that offset must include either a negative sign or a positive sign. If the sign is missing, the parse operation fails and the method returns `false`.","nodes":[{"content":"The <ph id=\"ph1\">`formats`</ph> parameter is a string array whose elements contain either a single standard format specifier or one or more custom format specifiers that define the possible pattern of <ph id=\"ph2\">`input`</ph>.","pos":[0,191],"source":"The `formats` parameter is a string array whose elements contain either a single standard format specifier or one or more custom format specifiers that define the possible pattern of `input`."},{"content":"For details about valid formatting codes, see <bpt id=\"p1\">[</bpt>Standard Date and Time Format Strings<ept id=\"p1\">](~/docs/standard/base-types/standard-date-and-time-format-strings.md)</ept> and <bpt id=\"p2\">[</bpt>Custom Date and Time Format Strings<ept id=\"p2\">](~/docs/standard/base-types/custom-date-and-time-format-strings.md)</ept>.","pos":[192,456],"source":" For details about valid formatting codes, see [Standard Date and Time Format Strings](~/docs/standard/base-types/standard-date-and-time-format-strings.md) and [Custom Date and Time Format Strings](~/docs/standard/base-types/custom-date-and-time-format-strings.md)."},{"content":"If the matched element in <ph id=\"ph1\">`formats`</ph> includes the <ph id=\"ph2\">`z`</ph>, <ph id=\"ph3\">`zz`</ph>, or <ph id=\"ph4\">`zzz`</ph> custom format specifiers to indicate that an offset must be present in <ph id=\"ph5\">`input`</ph>, that offset must include either a negative sign or a positive sign.","pos":[457,673],"source":" If the matched element in `formats` includes the `z`, `zz`, or `zzz` custom format specifiers to indicate that an offset must be present in `input`, that offset must include either a negative sign or a positive sign."},{"content":"If the sign is missing, the parse operation fails and the method returns <ph id=\"ph1\">`false`</ph>.","pos":[674,755],"source":" If the sign is missing, the parse operation fails and the method returns `false`."}]},{"pos":[1544,1983],"content":"[!IMPORTANT]\n Using the `formats` parameter of this overload to specify multiple formats can help reduce the frustration many users experience when they enter dates and times. In particular, the ability to define multiple input patterns enables an application to handle date and time representations that can either include or lack leading zeros in months, days, hours, minutes, and seconds. The example provides an illustration of this.","leadings":["","> "],"nodes":[{"content":" Using the `formats` parameter of this overload to specify multiple formats can help reduce the frustration many users experience when they enter dates and times. In particular, the ability to define multiple input patterns enables an application to handle date and time representations that can either include or lack leading zeros in months, days, hours, minutes, and seconds. The example provides an illustration of this.","pos":[13,437],"nodes":[{"content":"Using the <ph id=\"ph1\">`formats`</ph> parameter of this overload to specify multiple formats can help reduce the frustration many users experience when they enter dates and times.","pos":[1,162],"source":" Using the `formats` parameter of this overload to specify multiple formats can help reduce the frustration many users experience when they enter dates and times."},{"content":"In particular, the ability to define multiple input patterns enables an application to handle date and time representations that can either include or lack leading zeros in months, days, hours, minutes, and seconds.","pos":[163,378]},{"content":"The example provides an illustration of this.","pos":[379,424]}]}]},{"pos":[1990,2988],"content":"If the matched element in `formats` requires that `input` contain a date but not a time, the resulting <xref:System.DateTimeOffset> object is assigned a time of midnight (0:00:00). If the matched element in `formats` requires that input contain a time but not a date, the resulting <xref:System.DateTimeOffset> object is assigned the current date on the local system. If the matched element in `formats` does not require that `input` contain an offset, the offset of the resulting <xref:System.DateTimeOffset> object depends on the value of the `styles` parameter. If `styles` includes <xref:System.Globalization.DateTimeStyles.AssumeLocal>, the offset of the local time zone is assigned to the <xref:System.DateTimeOffset> object. If `styles` includes <xref:System.Globalization.DateTimeStyles.AssumeUniversal>, the Coordinated Universal Time (UTC) offset, or +00:00, is assigned to the <xref:System.DateTimeOffset> object. If neither value is specified, the offset of the local time zone is used.","nodes":[{"content":"If the matched element in <ph id=\"ph1\">`formats`</ph> requires that <ph id=\"ph2\">`input`</ph> contain a date but not a time, the resulting <ph id=\"ph3\">&lt;xref:System.DateTimeOffset&gt;</ph> object is assigned a time of midnight (0:00:00).","pos":[0,180],"source":"If the matched element in `formats` requires that `input` contain a date but not a time, the resulting <xref:System.DateTimeOffset> object is assigned a time of midnight (0:00:00)."},{"content":"If the matched element in <ph id=\"ph1\">`formats`</ph> requires that input contain a time but not a date, the resulting <ph id=\"ph2\">&lt;xref:System.DateTimeOffset&gt;</ph> object is assigned the current date on the local system.","pos":[181,367],"source":" If the matched element in `formats` requires that input contain a time but not a date, the resulting <xref:System.DateTimeOffset> object is assigned the current date on the local system."},{"content":"If the matched element in <ph id=\"ph1\">`formats`</ph> does not require that <ph id=\"ph2\">`input`</ph> contain an offset, the offset of the resulting <ph id=\"ph3\">&lt;xref:System.DateTimeOffset&gt;</ph> object depends on the value of the <ph id=\"ph4\">`styles`</ph> parameter.","pos":[368,564],"source":" If the matched element in `formats` does not require that `input` contain an offset, the offset of the resulting <xref:System.DateTimeOffset> object depends on the value of the `styles` parameter."},{"content":"If <ph id=\"ph1\">`styles`</ph> includes <ph id=\"ph2\">&lt;xref:System.Globalization.DateTimeStyles.AssumeLocal&gt;</ph>, the offset of the local time zone is assigned to the <ph id=\"ph3\">&lt;xref:System.DateTimeOffset&gt;</ph> object.","pos":[565,731],"source":" If `styles` includes <xref:System.Globalization.DateTimeStyles.AssumeLocal>, the offset of the local time zone is assigned to the <xref:System.DateTimeOffset> object."},{"content":"If <ph id=\"ph1\">`styles`</ph> includes <ph id=\"ph2\">&lt;xref:System.Globalization.DateTimeStyles.AssumeUniversal&gt;</ph>, the Coordinated Universal Time (UTC) offset, or +00:00, is assigned to the <ph id=\"ph3\">&lt;xref:System.DateTimeOffset&gt;</ph> object.","pos":[732,924],"source":" If `styles` includes <xref:System.Globalization.DateTimeStyles.AssumeUniversal>, the Coordinated Universal Time (UTC) offset, or +00:00, is assigned to the <xref:System.DateTimeOffset> object."},{"content":"If neither value is specified, the offset of the local time zone is used.","pos":[925,998]}]},{"pos":[2995,3297],"content":"The particular date and time symbols and strings used in `input` are defined by the `formatProvider` parameter. The same is true for the precise pattern of `input` if the matching element of `formats` is a standard format specifier string. The `formatProvider` parameter can be either of the following:","nodes":[{"content":"The particular date and time symbols and strings used in <ph id=\"ph1\">`input`</ph> are defined by the <ph id=\"ph2\">`formatProvider`</ph> parameter.","pos":[0,111],"source":"The particular date and time symbols and strings used in `input` are defined by the `formatProvider` parameter."},{"content":"The same is true for the precise pattern of <ph id=\"ph1\">`input`</ph> if the matching element of <ph id=\"ph2\">`formats`</ph> is a standard format specifier string.","pos":[112,239],"source":" The same is true for the precise pattern of `input` if the matching element of `formats` is a standard format specifier string."},{"content":"The <ph id=\"ph1\">`formatProvider`</ph> parameter can be either of the following:","pos":[240,302],"source":" The `formatProvider` parameter can be either of the following:"}]},{"pos":[3307,3635],"content":"A <xref:System.Globalization.CultureInfo> object that represents the culture based on which `input` is interpreted. The <xref:System.Globalization.DateTimeFormatInfo> object returned by the <xref:System.Globalization.CultureInfo.DateTimeFormat%2A?displayProperty=fullName> property defines the symbols and formatting in `input`.","nodes":[{"content":"A <ph id=\"ph1\">&lt;xref:System.Globalization.CultureInfo&gt;</ph> object that represents the culture based on which <ph id=\"ph2\">`input`</ph> is interpreted.","pos":[0,115],"source":"A <xref:System.Globalization.CultureInfo> object that represents the culture based on which `input` is interpreted."},{"content":"The <ph id=\"ph1\">&lt;xref:System.Globalization.DateTimeFormatInfo&gt;</ph> object returned by the <ph id=\"ph2\">&lt;xref:System.Globalization.CultureInfo.DateTimeFormat%2A?displayProperty=fullName&gt;</ph> property defines the symbols and formatting in <ph id=\"ph3\">`input`</ph>.","pos":[116,328],"source":" The <xref:System.Globalization.DateTimeFormatInfo> object returned by the <xref:System.Globalization.CultureInfo.DateTimeFormat%2A?displayProperty=fullName> property defines the symbols and formatting in `input`."}]},{"pos":[3645,3747],"content":"A <xref:System.Globalization.DateTimeFormatInfo> object that defines the format of date and time data.","nodes":[{"content":"A <ph id=\"ph1\">&lt;xref:System.Globalization.DateTimeFormatInfo&gt;</ph> object that defines the format of date and time data.","pos":[0,102],"source":"A <xref:System.Globalization.DateTimeFormatInfo> object that defines the format of date and time data."}]},{"pos":[3754,3884],"content":"If <ph id=\"ph1\">`formatprovider`</ph> is <ph id=\"ph2\">`null`</ph>, the <ph id=\"ph3\">&lt;xref:System.Globalization.CultureInfo&gt;</ph> object that corresponds to the current culture is used.","source":"If `formatprovider` is `null`, the <xref:System.Globalization.CultureInfo> object that corresponds to the current culture is used."},{"pos":[3891,4331],"content":"The `styles` parameter defines whether white space is permitted in the input string, indicates how strings without an explicit offset component are parsed, and supports UTC conversion as part of the parsing operation. All members of the <xref:System.Globalization.DateTimeStyles> enumeration are supported except <xref:System.Globalization.DateTimeStyles.NoCurrentDateDefault>. The following table lists the effect of each supported member.","nodes":[{"content":"The <ph id=\"ph1\">`styles`</ph> parameter defines whether white space is permitted in the input string, indicates how strings without an explicit offset component are parsed, and supports UTC conversion as part of the parsing operation.","pos":[0,217],"source":"The `styles` parameter defines whether white space is permitted in the input string, indicates how strings without an explicit offset component are parsed, and supports UTC conversion as part of the parsing operation."},{"content":"All members of the <ph id=\"ph1\">&lt;xref:System.Globalization.DateTimeStyles&gt;</ph> enumeration are supported except <ph id=\"ph2\">&lt;xref:System.Globalization.DateTimeStyles.NoCurrentDateDefault&gt;</ph>.","pos":[218,377],"source":" All members of the <xref:System.Globalization.DateTimeStyles> enumeration are supported except <xref:System.Globalization.DateTimeStyles.NoCurrentDateDefault>."},{"content":"The following table lists the effect of each supported member.","pos":[378,440]}]},{"pos":[4338,4361],"content":"<ph id=\"ph1\">`DateTimeStyles`</ph> member","source":"`DateTimeStyles` member"},{"pos":[4362,4370],"content":"Behavior","nodes":[{"content":"Behavior","pos":[0,8]}]},{"pos":[4424,4484],"content":"<xref:System.Globalization.DateTimeStyles.AdjustToUniversal>","nodes":[]},{"pos":[4485,4730],"content":"Parses `input` and, if necessary, converts it to UTC. It is equivalent to parsing a string, and then calling the <xref:System.DateTimeOffset.ToUniversalTime%2A?displayProperty=fullName> method of the returned <xref:System.DateTimeOffset> object.","nodes":[{"content":"Parses <ph id=\"ph1\">`input`</ph> and, if necessary, converts it to UTC.","pos":[0,53],"source":"Parses `input` and, if necessary, converts it to UTC."},{"content":"It is equivalent to parsing a string, and then calling the <ph id=\"ph1\">&lt;xref:System.DateTimeOffset.ToUniversalTime%2A?displayProperty=fullName&gt;</ph> method of the returned <ph id=\"ph2\">&lt;xref:System.DateTimeOffset&gt;</ph> object.","pos":[54,245],"source":" It is equivalent to parsing a string, and then calling the <xref:System.DateTimeOffset.ToUniversalTime%2A?displayProperty=fullName> method of the returned <xref:System.DateTimeOffset> object."}]},{"pos":[4735,4789],"content":"<xref:System.Globalization.DateTimeStyles.AssumeLocal>","nodes":[]},{"pos":[4790,5000],"content":"If the matched element in `formats` does not require that `input` contain an offset value, the returned <xref:System.DateTimeOffset> object is given the offset of the local time zone. This is the default value.","nodes":[{"content":"If the matched element in <ph id=\"ph1\">`formats`</ph> does not require that <ph id=\"ph2\">`input`</ph> contain an offset value, the returned <ph id=\"ph3\">&lt;xref:System.DateTimeOffset&gt;</ph> object is given the offset of the local time zone.","pos":[0,183],"source":"If the matched element in `formats` does not require that `input` contain an offset value, the returned <xref:System.DateTimeOffset> object is given the offset of the local time zone."},{"content":"This is the default value.","pos":[184,210]}]},{"pos":[5005,5063],"content":"<xref:System.Globalization.DateTimeStyles.AssumeUniversal>","nodes":[]},{"pos":[5064,5237],"content":"If the matched element in <ph id=\"ph1\">`formats`</ph> does not require that <ph id=\"ph2\">`input`</ph> contain an offset value, the returned <ph id=\"ph3\">&lt;xref:System.DateTimeOffset&gt;</ph> object is given the UTC offset (+00:00).","source":"If the matched element in `formats` does not require that `input` contain an offset value, the returned <xref:System.DateTimeOffset> object is given the UTC offset (+00:00)."},{"pos":[5242,5300],"content":"<xref:System.Globalization.DateTimeStyles.AllowInnerWhite>","nodes":[]},{"pos":[5301,5547],"content":"Allows `input` to include inner white space not specified by the elements in `formats`. Extra white space can appear between date and time components and within individual components (except for the offset) and is ignored when parsing the string.","nodes":[{"content":"Allows <ph id=\"ph1\">`input`</ph> to include inner white space not specified by the elements in <ph id=\"ph2\">`formats`</ph>.","pos":[0,87],"source":"Allows `input` to include inner white space not specified by the elements in `formats`."},{"content":"Extra white space can appear between date and time components and within individual components (except for the offset) and is ignored when parsing the string.","pos":[88,246]}]},{"pos":[5552,5612],"content":"<xref:System.Globalization.DateTimeStyles.AllowLeadingWhite>","nodes":[]},{"pos":[5613,5740],"content":"Allows `input` to include leading spaces not specified by the elements in `formats`. These are ignored when parsing the string.","nodes":[{"content":"Allows <ph id=\"ph1\">`input`</ph> to include leading spaces not specified by the elements in <ph id=\"ph2\">`formats`</ph>.","pos":[0,84],"source":"Allows `input` to include leading spaces not specified by the elements in `formats`."},{"content":"These are ignored when parsing the string.","pos":[85,127]}]},{"pos":[5745,5806],"content":"<xref:System.Globalization.DateTimeStyles.AllowTrailingWhite>","nodes":[]},{"pos":[5807,5935],"content":"Allows `input` to include trailing spaces not specified by the elements in `formats`. These are ignored when parsing the string.","nodes":[{"content":"Allows <ph id=\"ph1\">`input`</ph> to include trailing spaces not specified by the elements in <ph id=\"ph2\">`formats`</ph>.","pos":[0,85],"source":"Allows `input` to include trailing spaces not specified by the elements in `formats`."},{"content":"These are ignored when parsing the string.","pos":[86,128]}]},{"pos":[5940,5999],"content":"<xref:System.Globalization.DateTimeStyles.AllowWhiteSpaces>","nodes":[]},{"pos":[6000,6225],"content":"Allows `input` to include leading, trailing, and inner spaces not specified by the elements in `formats`. All extra white-space characters not specified in the matched element in `formats` are ignored when parsing the string.","nodes":[{"content":"Allows <ph id=\"ph1\">`input`</ph> to include leading, trailing, and inner spaces not specified by the elements in <ph id=\"ph2\">`formats`</ph>.","pos":[0,105],"source":"Allows `input` to include leading, trailing, and inner spaces not specified by the elements in `formats`."},{"content":"All extra white-space characters not specified in the matched element in <ph id=\"ph1\">`formats`</ph> are ignored when parsing the string.","pos":[106,225],"source":" All extra white-space characters not specified in the matched element in `formats` are ignored when parsing the string."}]},{"pos":[6230,6277],"content":"<xref:System.Globalization.DateTimeStyles.None>","nodes":[]},{"pos":[6278,6489],"content":"Indicates that additional white space is not permitted in `input`. White space must appear exactly as specified in a particular element in `formats` for a successful match to occur. This is the default behavior.","nodes":[{"content":"Indicates that additional white space is not permitted in <ph id=\"ph1\">`input`</ph>.","pos":[0,66],"source":"Indicates that additional white space is not permitted in `input`."},{"content":"White space must appear exactly as specified in a particular element in <ph id=\"ph1\">`formats`</ph> for a successful match to occur.","pos":[67,181],"source":" White space must appear exactly as specified in a particular element in `formats` for a successful match to occur."},{"content":"This is the default behavior.","pos":[182,211]}]},{"pos":[6494,6550],"content":"<xref:System.Globalization.DateTimeStyles.RoundtripKind>","nodes":[]},{"pos":[6551,6651],"content":"Has no effect because the <ph id=\"ph1\">&lt;xref:System.DateTimeOffset&gt;</ph> structure does not include a <ph id=\"ph2\">`Kind`</ph> property.","source":"Has no effect because the <xref:System.DateTimeOffset> structure does not include a `Kind` property."}],"pos":[310339,317023],"yaml":true,"extradata":"MT"},{"content":"A string that contains a date and time to convert.","nodes":[{"pos":[0,50],"content":"A string that contains a date and time to convert.","nodes":[{"content":"A string that contains a date and time to convert.","pos":[0,50]}]}],"pos":[318009,318060],"yaml":true},{"content":"An array that defines the expected formats of <code>input</code>.","nodes":[{"pos":[0,65],"content":"An array that defines the expected formats of <bpt id=\"p1\">&lt;code&gt;</bpt><ph id=\"ph1\">input</ph><ept id=\"p1\">&lt;/code&gt;</ept>.","source":"An array that defines the expected formats of <code>input</code>."}],"pos":[318125,318191],"yaml":true},{"content":"An object that supplies culture-specific formatting information about <code>input</code>.","nodes":[{"pos":[0,89],"content":"An object that supplies culture-specific formatting information about <bpt id=\"p1\">&lt;code&gt;</bpt><ph id=\"ph1\">input</ph><ept id=\"p1\">&lt;/code&gt;</ept>.","source":"An object that supplies culture-specific formatting information about <code>input</code>."}],"pos":[318270,318360],"yaml":true},{"content":"A bitwise combination of enumeration values that indicates the permitted format of input. A typical value to specify is `None`.","nodes":[{"pos":[0,127],"content":"A bitwise combination of enumeration values that indicates the permitted format of input. A typical value to specify is `None`.","nodes":[{"content":"A bitwise combination of enumeration values that indicates the permitted format of input.","pos":[0,89]},{"content":"A typical value to specify is <ph id=\"ph1\">`None`</ph>.","pos":[90,127],"source":" A typical value to specify is `None`."}]}],"pos":[318444,318572],"yaml":true},{"content":"When the method returns, contains the <xref href=\"System.DateTimeOffset\"></xref> equivalent to the date and time of <code>input</code>, if the conversion succeeded, or <xref href=\"System.DateTimeOffset.MinValue\"></xref>, if the conversion failed. The conversion fails if the <code>input</code> does not contain a valid string representation of a date and time, or does not contain the date and time in the expected format defined by <code>format</code>, or if <code>formats</code> is `null`. This parameter is passed uninitialized.","nodes":[{"pos":[0,531],"content":"When the method returns, contains the <xref href=\"System.DateTimeOffset\"></xref> equivalent to the date and time of <code>input</code>, if the conversion succeeded, or <xref href=\"System.DateTimeOffset.MinValue\"></xref>, if the conversion failed. The conversion fails if the <code>input</code> does not contain a valid string representation of a date and time, or does not contain the date and time in the expected format defined by <code>format</code>, or if <code>formats</code> is `null`. This parameter is passed uninitialized.","nodes":[{"content":"When the method returns, contains the <ph id=\"ph1\">&lt;xref href=\"System.DateTimeOffset\"&gt;&lt;/xref&gt;</ph> equivalent to the date and time of <bpt id=\"p1\">&lt;code&gt;</bpt><ph id=\"ph2\">input</ph><ept id=\"p1\">&lt;/code&gt;</ept>, if the conversion succeeded, or <ph id=\"ph3\">&lt;xref href=\"System.DateTimeOffset.MinValue\"&gt;&lt;/xref&gt;</ph>, if the conversion failed.","pos":[0,246],"source":"When the method returns, contains the <xref href=\"System.DateTimeOffset\"></xref> equivalent to the date and time of <code>input</code>, if the conversion succeeded, or <xref href=\"System.DateTimeOffset.MinValue\"></xref>, if the conversion failed."},{"content":"The conversion fails if the <bpt id=\"p1\">&lt;code&gt;</bpt><ph id=\"ph1\">input</ph><ept id=\"p1\">&lt;/code&gt;</ept> does not contain a valid string representation of a date and time, or does not contain the date and time in the expected format defined by <bpt id=\"p2\">&lt;code&gt;</bpt><ph id=\"ph2\">format</ph><ept id=\"p2\">&lt;/code&gt;</ept>, or if <bpt id=\"p3\">&lt;code&gt;</bpt><ph id=\"ph3\">formats</ph><ept id=\"p3\">&lt;/code&gt;</ept> is <ph id=\"ph4\">`null`</ph>.","pos":[247,491],"source":" The conversion fails if the <code>input</code> does not contain a valid string representation of a date and time, or does not contain the date and time in the expected format defined by <code>format</code>, or if <code>formats</code> is `null`."},{"content":"This parameter is passed uninitialized.","pos":[492,531]}]}],"pos":[318642,319174],"yaml":true},{"content":"`true` if the <code>input</code> parameter is successfully converted; otherwise, `false`.","nodes":[{"pos":[0,89],"content":"<ph id=\"ph1\">`true`</ph> if the <bpt id=\"p1\">&lt;code&gt;</bpt><ph id=\"ph2\">input</ph><ept id=\"p1\">&lt;/code&gt;</ept> parameter is successfully converted; otherwise, <ph id=\"ph3\">`false`</ph>.","source":"`true` if the <code>input</code> parameter is successfully converted; otherwise, `false`."}],"pos":[319232,319324],"yaml":true},{"content":"<code>styles</code> includes an undefined <xref href=\"System.Globalization.DateTimeStyles\"></xref> value.  \n  \n -or-  \n  \n <xref href=\"System.Globalization.DateTimeStyles.NoCurrentDateDefault\"></xref> is not supported.  \n  \n -or-  \n  \n <code>styles</code> includes mutually exclusive <xref href=\"System.Globalization.DateTimeStyles\"></xref> values.","nodes":[{"pos":[0,105],"content":"<ph id=\"ph1\">&lt;code&gt;styles&lt;/code&gt;</ph> includes an undefined <ph id=\"ph2\">&lt;xref href=\"System.Globalization.DateTimeStyles\"&gt;&lt;/xref&gt;</ph> value.","source":"<code>styles</code> includes an undefined <xref href=\"System.Globalization.DateTimeStyles\"></xref> value."},{"pos":[112,116],"content":"-or-","nodes":[{"content":"-or-","pos":[0,4]}]},{"pos":[123,218],"content":"<ph id=\"ph1\">&lt;xref href=\"System.Globalization.DateTimeStyles.NoCurrentDateDefault\"&gt;&lt;/xref&gt;</ph> is not supported.","source":"<xref href=\"System.Globalization.DateTimeStyles.NoCurrentDateDefault\"></xref> is not supported."},{"pos":[225,229],"content":"-or-","nodes":[{"content":"-or-","pos":[0,4]}]},{"pos":[236,348],"content":"<ph id=\"ph1\">&lt;code&gt;styles&lt;/code&gt;</ph> includes mutually exclusive <ph id=\"ph2\">&lt;xref href=\"System.Globalization.DateTimeStyles\"&gt;&lt;/xref&gt;</ph> values.","source":"<code>styles</code> includes mutually exclusive <xref href=\"System.Globalization.DateTimeStyles\"></xref> values."}],"pos":[319481,319846],"yaml":true},{"content":"Converts the specified string representation of a date and time to its <xref href=\"System.DateTimeOffset\"></xref> equivalent using the specified format, culture-specific format information, and style. The format of the string representation must match the specified format exactly.","nodes":[{"pos":[0,281],"content":"Converts the specified string representation of a date and time to its <xref href=\"System.DateTimeOffset\"></xref> equivalent using the specified format, culture-specific format information, and style. The format of the string representation must match the specified format exactly.","nodes":[{"content":"Converts the specified string representation of a date and time to its <ph id=\"ph1\">&lt;xref href=\"System.DateTimeOffset\"&gt;&lt;/xref&gt;</ph> equivalent using the specified format, culture-specific format information, and style.","pos":[0,200],"source":"Converts the specified string representation of a date and time to its <xref href=\"System.DateTimeOffset\"></xref> equivalent using the specified format, culture-specific format information, and style."},{"content":"The format of the string representation must match the specified format exactly.","pos":[201,281]}]}],"pos":[321818,322100],"yaml":true},{"content":"This overload of the <xref:System.DateTimeOffset.TryParseExact%28System.String%2CSystem.String%2CSystem.IFormatProvider%2CSystem.Globalization.DateTimeStyles%2CSystem.DateTimeOffset%40%29> method is like the <xref:System.DateTimeOffset.ParseExact%28System.String%2CSystem.String%2CSystem.IFormatProvider%2CSystem.Globalization.DateTimeStyles%29?displayProperty=fullName> method, except that this method does not throw an exception if the conversion fails. It parses the string representation of a date and time that must exactly match the pattern specified by the `format` parameter. If the `input` string does not match this pattern, with some possible variations in white space defined by the `styles` parameter, the parsing operation fails and the method returns `false`.  \n  \n The `format` parameter is a string that contains either a single standard format specifier or one or more custom format specifiers that define the required pattern of `input`. For details about valid formatting codes, see [Standard Date and Time Format Strings](~/docs/standard/base-types/standard-date-and-time-format-strings.md) and [Custom Date and Time Format Strings](~/docs/standard/base-types/custom-date-and-time-format-strings.md). If `format` includes the `z`, `zz`, or `zzz` custom format specifiers to indicate that an offset must be present in `input`, that offset must include either a negative sign or a positive sign. If the sign is missing, the parsing operation fails and the method returns `false`.  \n  \n If `format` requires that `input` contain a date but not a time, the resulting <xref:System.DateTimeOffset> object is assigned a time of midnight (0:00:00). If `format` requires that `input` contain a time but not a date, the resulting <xref:System.DateTimeOffset> object is assigned the current date on the local system. If `format` does not require that `input` contain an offset, the offset of the resulting <xref:System.DateTimeOffset> object depends on the value of the `styles` parameter. If `styles` includes <xref:System.Globalization.DateTimeStyles.AssumeLocal>, the offset of the local time zone is assigned to the <xref:System.DateTimeOffset> object. If `styles` includes <xref:System.Globalization.DateTimeStyles.AssumeUniversal>, the Coordinated Universal Time (UTC) offset, or +00:00, is assigned to the <xref:System.DateTimeOffset> object. If neither value is specified, the offset of the local time zone is used.  \n  \n The particular date and time symbols and strings used in `input` are defined by the `formatProvider` parameter. The same is true for the precise pattern of `input` if `format` is a standard format specifier string. The `formatProvider` parameter can be either of the following:  \n  \n-   A <xref:System.Globalization.CultureInfo> object that represents the culture based on which `input` is interpreted. The <xref:System.Globalization.DateTimeFormatInfo> object returned by the <xref:System.Globalization.CultureInfo.DateTimeFormat%2A?displayProperty=fullName> property defines the symbols and standard formats allowed in `input`.  \n  \n-   A <xref:System.Globalization.DateTimeFormatInfo> object that defines the format of date and time data.  \n  \n If `formatprovider` is `null`, the <xref:System.Globalization.CultureInfo> object that corresponds to the current culture is used.  \n  \n The `styles` parameter defines whether white space is allowed in the input string, indicates how strings without an explicit offset component are parsed, and supports UTC conversion as part of the parsing operation. All members of the <xref:System.Globalization.DateTimeStyles> enumeration are supported except <xref:System.Globalization.DateTimeStyles.NoCurrentDateDefault>. The following table lists the effect of each supported member.  \n  \n|`DateTimeStyles` member|Behavior|  \n|-----------------------------|--------------|  \n|<xref:System.Globalization.DateTimeStyles.AdjustToUniversal>|Parses `input` and, if necessary, converts it to UTC. It is equivalent to parsing a string, and then calling the <xref:System.DateTimeOffset.ToUniversalTime%2A?displayProperty=fullName> method of the returned <xref:System.DateTimeOffset> object.|  \n|<xref:System.Globalization.DateTimeStyles.AssumeLocal>|If `format` does not require that `input` contain an offset value, the returned <xref:System.DateTimeOffset> object is given the offset of the local time zone. This is the default behavior.|  \n|<xref:System.Globalization.DateTimeStyles.AssumeUniversal>|If `format` does not require that `input` contain an offset value, the returned <xref:System.DateTimeOffset> object is given the UTC offset (+00:00).|  \n|<xref:System.Globalization.DateTimeStyles.AllowInnerWhite>|Allows `input` to include inner white space not specified by format. Extra white space can appear between date and time components and within individual components, other than the offset, and is ignored when parsing the string.|  \n|<xref:System.Globalization.DateTimeStyles.AllowLeadingWhite>|Allows `input` to include leading spaces not specified by `format`. These are ignored when parsing the string.|  \n|<xref:System.Globalization.DateTimeStyles.AllowTrailingWhite>|Allows `input` to include trailing spaces not specified by `format`. These are ignored when parsing the string.|  \n|<xref:System.Globalization.DateTimeStyles.AllowWhiteSpaces>|Allows `input` to include leading, trailing, and inner spaces not specified by `format`. All extra white-space characters not specified in `format` are ignored when parsing the string.|  \n|<xref:System.Globalization.DateTimeStyles.None>|Indicates that additional white space is not permitted in `input`. White space must appear exactly as specified in `format`. This is the default behavior.|  \n|<xref:System.Globalization.DateTimeStyles.RoundtripKind>|Has no effect, because the <xref:System.DateTimeOffset> structure does not include a `Kind` property.|","nodes":[{"pos":[0,774],"content":"This overload of the <xref:System.DateTimeOffset.TryParseExact%28System.String%2CSystem.String%2CSystem.IFormatProvider%2CSystem.Globalization.DateTimeStyles%2CSystem.DateTimeOffset%40%29> method is like the <xref:System.DateTimeOffset.ParseExact%28System.String%2CSystem.String%2CSystem.IFormatProvider%2CSystem.Globalization.DateTimeStyles%29?displayProperty=fullName> method, except that this method does not throw an exception if the conversion fails. It parses the string representation of a date and time that must exactly match the pattern specified by the `format` parameter. If the `input` string does not match this pattern, with some possible variations in white space defined by the `styles` parameter, the parsing operation fails and the method returns `false`.","nodes":[{"content":"This overload of the <ph id=\"ph1\">&lt;xref:System.DateTimeOffset.TryParseExact%28System.String%2CSystem.String%2CSystem.IFormatProvider%2CSystem.Globalization.DateTimeStyles%2CSystem.DateTimeOffset%40%29&gt;</ph> method is like the <ph id=\"ph2\">&lt;xref:System.DateTimeOffset.ParseExact%28System.String%2CSystem.String%2CSystem.IFormatProvider%2CSystem.Globalization.DateTimeStyles%29?displayProperty=fullName&gt;</ph> method, except that this method does not throw an exception if the conversion fails.","pos":[0,455],"source":"This overload of the <xref:System.DateTimeOffset.TryParseExact%28System.String%2CSystem.String%2CSystem.IFormatProvider%2CSystem.Globalization.DateTimeStyles%2CSystem.DateTimeOffset%40%29> method is like the <xref:System.DateTimeOffset.ParseExact%28System.String%2CSystem.String%2CSystem.IFormatProvider%2CSystem.Globalization.DateTimeStyles%29?displayProperty=fullName> method, except that this method does not throw an exception if the conversion fails."},{"content":"It parses the string representation of a date and time that must exactly match the pattern specified by the <ph id=\"ph1\">`format`</ph> parameter.","pos":[456,583],"source":" It parses the string representation of a date and time that must exactly match the pattern specified by the `format` parameter."},{"content":"If the <ph id=\"ph1\">`input`</ph> string does not match this pattern, with some possible variations in white space defined by the <ph id=\"ph2\">`styles`</ph> parameter, the parsing operation fails and the method returns <ph id=\"ph3\">`false`</ph>.","pos":[584,774],"source":" If the `input` string does not match this pattern, with some possible variations in white space defined by the `styles` parameter, the parsing operation fails and the method returns `false`."}]},{"pos":[781,1498],"content":"The `format` parameter is a string that contains either a single standard format specifier or one or more custom format specifiers that define the required pattern of `input`. For details about valid formatting codes, see [Standard Date and Time Format Strings](~/docs/standard/base-types/standard-date-and-time-format-strings.md) and [Custom Date and Time Format Strings](~/docs/standard/base-types/custom-date-and-time-format-strings.md). If `format` includes the `z`, `zz`, or `zzz` custom format specifiers to indicate that an offset must be present in `input`, that offset must include either a negative sign or a positive sign. If the sign is missing, the parsing operation fails and the method returns `false`.","nodes":[{"content":"The <ph id=\"ph1\">`format`</ph> parameter is a string that contains either a single standard format specifier or one or more custom format specifiers that define the required pattern of <ph id=\"ph2\">`input`</ph>.","pos":[0,175],"source":"The `format` parameter is a string that contains either a single standard format specifier or one or more custom format specifiers that define the required pattern of `input`."},{"content":"For details about valid formatting codes, see <bpt id=\"p1\">[</bpt>Standard Date and Time Format Strings<ept id=\"p1\">](~/docs/standard/base-types/standard-date-and-time-format-strings.md)</ept> and <bpt id=\"p2\">[</bpt>Custom Date and Time Format Strings<ept id=\"p2\">](~/docs/standard/base-types/custom-date-and-time-format-strings.md)</ept>.","pos":[176,440],"source":" For details about valid formatting codes, see [Standard Date and Time Format Strings](~/docs/standard/base-types/standard-date-and-time-format-strings.md) and [Custom Date and Time Format Strings](~/docs/standard/base-types/custom-date-and-time-format-strings.md)."},{"content":"If <ph id=\"ph1\">`format`</ph> includes the <ph id=\"ph2\">`z`</ph>, <ph id=\"ph3\">`zz`</ph>, or <ph id=\"ph4\">`zzz`</ph> custom format specifiers to indicate that an offset must be present in <ph id=\"ph5\">`input`</ph>, that offset must include either a negative sign or a positive sign.","pos":[441,633],"source":" If `format` includes the `z`, `zz`, or `zzz` custom format specifiers to indicate that an offset must be present in `input`, that offset must include either a negative sign or a positive sign."},{"content":"If the sign is missing, the parsing operation fails and the method returns <ph id=\"ph1\">`false`</ph>.","pos":[634,717],"source":" If the sign is missing, the parsing operation fails and the method returns `false`."}]},{"pos":[1505,2433],"content":"If `format` requires that `input` contain a date but not a time, the resulting <xref:System.DateTimeOffset> object is assigned a time of midnight (0:00:00). If `format` requires that `input` contain a time but not a date, the resulting <xref:System.DateTimeOffset> object is assigned the current date on the local system. If `format` does not require that `input` contain an offset, the offset of the resulting <xref:System.DateTimeOffset> object depends on the value of the `styles` parameter. If `styles` includes <xref:System.Globalization.DateTimeStyles.AssumeLocal>, the offset of the local time zone is assigned to the <xref:System.DateTimeOffset> object. If `styles` includes <xref:System.Globalization.DateTimeStyles.AssumeUniversal>, the Coordinated Universal Time (UTC) offset, or +00:00, is assigned to the <xref:System.DateTimeOffset> object. If neither value is specified, the offset of the local time zone is used.","nodes":[{"content":"If <ph id=\"ph1\">`format`</ph> requires that <ph id=\"ph2\">`input`</ph> contain a date but not a time, the resulting <ph id=\"ph3\">&lt;xref:System.DateTimeOffset&gt;</ph> object is assigned a time of midnight (0:00:00).","pos":[0,156],"source":"If `format` requires that `input` contain a date but not a time, the resulting <xref:System.DateTimeOffset> object is assigned a time of midnight (0:00:00)."},{"content":"If <ph id=\"ph1\">`format`</ph> requires that <ph id=\"ph2\">`input`</ph> contain a time but not a date, the resulting <ph id=\"ph3\">&lt;xref:System.DateTimeOffset&gt;</ph> object is assigned the current date on the local system.","pos":[157,321],"source":" If `format` requires that `input` contain a time but not a date, the resulting <xref:System.DateTimeOffset> object is assigned the current date on the local system."},{"content":"If <ph id=\"ph1\">`format`</ph> does not require that <ph id=\"ph2\">`input`</ph> contain an offset, the offset of the resulting <ph id=\"ph3\">&lt;xref:System.DateTimeOffset&gt;</ph> object depends on the value of the <ph id=\"ph4\">`styles`</ph> parameter.","pos":[322,494],"source":" If `format` does not require that `input` contain an offset, the offset of the resulting <xref:System.DateTimeOffset> object depends on the value of the `styles` parameter."},{"content":"If <ph id=\"ph1\">`styles`</ph> includes <ph id=\"ph2\">&lt;xref:System.Globalization.DateTimeStyles.AssumeLocal&gt;</ph>, the offset of the local time zone is assigned to the <ph id=\"ph3\">&lt;xref:System.DateTimeOffset&gt;</ph> object.","pos":[495,661],"source":" If `styles` includes <xref:System.Globalization.DateTimeStyles.AssumeLocal>, the offset of the local time zone is assigned to the <xref:System.DateTimeOffset> object."},{"content":"If <ph id=\"ph1\">`styles`</ph> includes <ph id=\"ph2\">&lt;xref:System.Globalization.DateTimeStyles.AssumeUniversal&gt;</ph>, the Coordinated Universal Time (UTC) offset, or +00:00, is assigned to the <ph id=\"ph3\">&lt;xref:System.DateTimeOffset&gt;</ph> object.","pos":[662,854],"source":" If `styles` includes <xref:System.Globalization.DateTimeStyles.AssumeUniversal>, the Coordinated Universal Time (UTC) offset, or +00:00, is assigned to the <xref:System.DateTimeOffset> object."},{"content":"If neither value is specified, the offset of the local time zone is used.","pos":[855,928]}]},{"pos":[2440,2717],"content":"The particular date and time symbols and strings used in `input` are defined by the `formatProvider` parameter. The same is true for the precise pattern of `input` if `format` is a standard format specifier string. The `formatProvider` parameter can be either of the following:","nodes":[{"content":"The particular date and time symbols and strings used in <ph id=\"ph1\">`input`</ph> are defined by the <ph id=\"ph2\">`formatProvider`</ph> parameter.","pos":[0,111],"source":"The particular date and time symbols and strings used in `input` are defined by the `formatProvider` parameter."},{"content":"The same is true for the precise pattern of <ph id=\"ph1\">`input`</ph> if <ph id=\"ph2\">`format`</ph> is a standard format specifier string.","pos":[112,214],"source":" The same is true for the precise pattern of `input` if `format` is a standard format specifier string."},{"content":"The <ph id=\"ph1\">`formatProvider`</ph> parameter can be either of the following:","pos":[215,277],"source":" The `formatProvider` parameter can be either of the following:"}]},{"pos":[2727,3069],"content":"A <xref:System.Globalization.CultureInfo> object that represents the culture based on which `input` is interpreted. The <xref:System.Globalization.DateTimeFormatInfo> object returned by the <xref:System.Globalization.CultureInfo.DateTimeFormat%2A?displayProperty=fullName> property defines the symbols and standard formats allowed in `input`.","nodes":[{"content":"A <ph id=\"ph1\">&lt;xref:System.Globalization.CultureInfo&gt;</ph> object that represents the culture based on which <ph id=\"ph2\">`input`</ph> is interpreted.","pos":[0,115],"source":"A <xref:System.Globalization.CultureInfo> object that represents the culture based on which `input` is interpreted."},{"content":"The <ph id=\"ph1\">&lt;xref:System.Globalization.DateTimeFormatInfo&gt;</ph> object returned by the <ph id=\"ph2\">&lt;xref:System.Globalization.CultureInfo.DateTimeFormat%2A?displayProperty=fullName&gt;</ph> property defines the symbols and standard formats allowed in <ph id=\"ph3\">`input`</ph>.","pos":[116,342],"source":" The <xref:System.Globalization.DateTimeFormatInfo> object returned by the <xref:System.Globalization.CultureInfo.DateTimeFormat%2A?displayProperty=fullName> property defines the symbols and standard formats allowed in `input`."}]},{"pos":[3079,3181],"content":"A <xref:System.Globalization.DateTimeFormatInfo> object that defines the format of date and time data.","nodes":[{"content":"A <ph id=\"ph1\">&lt;xref:System.Globalization.DateTimeFormatInfo&gt;</ph> object that defines the format of date and time data.","pos":[0,102],"source":"A <xref:System.Globalization.DateTimeFormatInfo> object that defines the format of date and time data."}]},{"pos":[3188,3318],"content":"If <ph id=\"ph1\">`formatprovider`</ph> is <ph id=\"ph2\">`null`</ph>, the <ph id=\"ph3\">&lt;xref:System.Globalization.CultureInfo&gt;</ph> object that corresponds to the current culture is used.","source":"If `formatprovider` is `null`, the <xref:System.Globalization.CultureInfo> object that corresponds to the current culture is used."},{"pos":[3325,3763],"content":"The `styles` parameter defines whether white space is allowed in the input string, indicates how strings without an explicit offset component are parsed, and supports UTC conversion as part of the parsing operation. All members of the <xref:System.Globalization.DateTimeStyles> enumeration are supported except <xref:System.Globalization.DateTimeStyles.NoCurrentDateDefault>. The following table lists the effect of each supported member.","nodes":[{"content":"The <ph id=\"ph1\">`styles`</ph> parameter defines whether white space is allowed in the input string, indicates how strings without an explicit offset component are parsed, and supports UTC conversion as part of the parsing operation.","pos":[0,215],"source":"The `styles` parameter defines whether white space is allowed in the input string, indicates how strings without an explicit offset component are parsed, and supports UTC conversion as part of the parsing operation."},{"content":"All members of the <ph id=\"ph1\">&lt;xref:System.Globalization.DateTimeStyles&gt;</ph> enumeration are supported except <ph id=\"ph2\">&lt;xref:System.Globalization.DateTimeStyles.NoCurrentDateDefault&gt;</ph>.","pos":[216,375],"source":" All members of the <xref:System.Globalization.DateTimeStyles> enumeration are supported except <xref:System.Globalization.DateTimeStyles.NoCurrentDateDefault>."},{"content":"The following table lists the effect of each supported member.","pos":[376,438]}]},{"pos":[3770,3793],"content":"<ph id=\"ph1\">`DateTimeStyles`</ph> member","source":"`DateTimeStyles` member"},{"pos":[3794,3802],"content":"Behavior","nodes":[{"content":"Behavior","pos":[0,8]}]},{"pos":[3856,3916],"content":"<xref:System.Globalization.DateTimeStyles.AdjustToUniversal>","nodes":[]},{"pos":[3917,4162],"content":"Parses `input` and, if necessary, converts it to UTC. It is equivalent to parsing a string, and then calling the <xref:System.DateTimeOffset.ToUniversalTime%2A?displayProperty=fullName> method of the returned <xref:System.DateTimeOffset> object.","nodes":[{"content":"Parses <ph id=\"ph1\">`input`</ph> and, if necessary, converts it to UTC.","pos":[0,53],"source":"Parses `input` and, if necessary, converts it to UTC."},{"content":"It is equivalent to parsing a string, and then calling the <ph id=\"ph1\">&lt;xref:System.DateTimeOffset.ToUniversalTime%2A?displayProperty=fullName&gt;</ph> method of the returned <ph id=\"ph2\">&lt;xref:System.DateTimeOffset&gt;</ph> object.","pos":[54,245],"source":" It is equivalent to parsing a string, and then calling the <xref:System.DateTimeOffset.ToUniversalTime%2A?displayProperty=fullName> method of the returned <xref:System.DateTimeOffset> object."}]},{"pos":[4167,4221],"content":"<xref:System.Globalization.DateTimeStyles.AssumeLocal>","nodes":[]},{"pos":[4222,4411],"content":"If `format` does not require that `input` contain an offset value, the returned <xref:System.DateTimeOffset> object is given the offset of the local time zone. This is the default behavior.","nodes":[{"content":"If <ph id=\"ph1\">`format`</ph> does not require that <ph id=\"ph2\">`input`</ph> contain an offset value, the returned <ph id=\"ph3\">&lt;xref:System.DateTimeOffset&gt;</ph> object is given the offset of the local time zone.","pos":[0,159],"source":"If `format` does not require that `input` contain an offset value, the returned <xref:System.DateTimeOffset> object is given the offset of the local time zone."},{"content":"This is the default behavior.","pos":[160,189]}]},{"pos":[4416,4474],"content":"<xref:System.Globalization.DateTimeStyles.AssumeUniversal>","nodes":[]},{"pos":[4475,4624],"content":"If <ph id=\"ph1\">`format`</ph> does not require that <ph id=\"ph2\">`input`</ph> contain an offset value, the returned <ph id=\"ph3\">&lt;xref:System.DateTimeOffset&gt;</ph> object is given the UTC offset (+00:00).","source":"If `format` does not require that `input` contain an offset value, the returned <xref:System.DateTimeOffset> object is given the UTC offset (+00:00)."},{"pos":[4629,4687],"content":"<xref:System.Globalization.DateTimeStyles.AllowInnerWhite>","nodes":[]},{"pos":[4688,4915],"content":"Allows `input` to include inner white space not specified by format. Extra white space can appear between date and time components and within individual components, other than the offset, and is ignored when parsing the string.","nodes":[{"content":"Allows <ph id=\"ph1\">`input`</ph> to include inner white space not specified by format.","pos":[0,68],"source":"Allows `input` to include inner white space not specified by format."},{"content":"Extra white space can appear between date and time components and within individual components, other than the offset, and is ignored when parsing the string.","pos":[69,227]}]},{"pos":[4920,4980],"content":"<xref:System.Globalization.DateTimeStyles.AllowLeadingWhite>","nodes":[]},{"pos":[4981,5091],"content":"Allows `input` to include leading spaces not specified by `format`. These are ignored when parsing the string.","nodes":[{"content":"Allows <ph id=\"ph1\">`input`</ph> to include leading spaces not specified by <ph id=\"ph2\">`format`</ph>.","pos":[0,67],"source":"Allows `input` to include leading spaces not specified by `format`."},{"content":"These are ignored when parsing the string.","pos":[68,110]}]},{"pos":[5096,5157],"content":"<xref:System.Globalization.DateTimeStyles.AllowTrailingWhite>","nodes":[]},{"pos":[5158,5269],"content":"Allows `input` to include trailing spaces not specified by `format`. These are ignored when parsing the string.","nodes":[{"content":"Allows <ph id=\"ph1\">`input`</ph> to include trailing spaces not specified by <ph id=\"ph2\">`format`</ph>.","pos":[0,68],"source":"Allows `input` to include trailing spaces not specified by `format`."},{"content":"These are ignored when parsing the string.","pos":[69,111]}]},{"pos":[5274,5333],"content":"<xref:System.Globalization.DateTimeStyles.AllowWhiteSpaces>","nodes":[]},{"pos":[5334,5518],"content":"Allows `input` to include leading, trailing, and inner spaces not specified by `format`. All extra white-space characters not specified in `format` are ignored when parsing the string.","nodes":[{"content":"Allows <ph id=\"ph1\">`input`</ph> to include leading, trailing, and inner spaces not specified by <ph id=\"ph2\">`format`</ph>.","pos":[0,88],"source":"Allows `input` to include leading, trailing, and inner spaces not specified by `format`."},{"content":"All extra white-space characters not specified in <ph id=\"ph1\">`format`</ph> are ignored when parsing the string.","pos":[89,184],"source":" All extra white-space characters not specified in `format` are ignored when parsing the string."}]},{"pos":[5523,5570],"content":"<xref:System.Globalization.DateTimeStyles.None>","nodes":[]},{"pos":[5571,5725],"content":"Indicates that additional white space is not permitted in `input`. White space must appear exactly as specified in `format`. This is the default behavior.","nodes":[{"content":"Indicates that additional white space is not permitted in <ph id=\"ph1\">`input`</ph>.","pos":[0,66],"source":"Indicates that additional white space is not permitted in `input`."},{"content":"White space must appear exactly as specified in <ph id=\"ph1\">`format`</ph>.","pos":[67,124],"source":" White space must appear exactly as specified in `format`."},{"content":"This is the default behavior.","pos":[125,154]}]},{"pos":[5730,5786],"content":"<xref:System.Globalization.DateTimeStyles.RoundtripKind>","nodes":[]},{"pos":[5787,5888],"content":"Has no effect, because the <ph id=\"ph1\">&lt;xref:System.DateTimeOffset&gt;</ph> structure does not include a <ph id=\"ph2\">`Kind`</ph> property.","source":"Has no effect, because the <xref:System.DateTimeOffset> structure does not include a `Kind` property."}],"pos":[322111,328029],"yaml":true,"extradata":"MT"},{"content":"A string that contains a date and time to convert.","nodes":[{"pos":[0,50],"content":"A string that contains a date and time to convert.","nodes":[{"content":"A string that contains a date and time to convert.","pos":[0,50]}]}],"pos":[329023,329074],"yaml":true},{"content":"A format specifier that defines the required format of <code>input</code>.","nodes":[{"pos":[0,74],"content":"A format specifier that defines the required format of <bpt id=\"p1\">&lt;code&gt;</bpt><ph id=\"ph1\">input</ph><ept id=\"p1\">&lt;/code&gt;</ept>.","source":"A format specifier that defines the required format of <code>input</code>."}],"pos":[329136,329211],"yaml":true},{"content":"An object that supplies culture-specific formatting information about <code>input</code>.","nodes":[{"pos":[0,89],"content":"An object that supplies culture-specific formatting information about <bpt id=\"p1\">&lt;code&gt;</bpt><ph id=\"ph1\">input</ph><ept id=\"p1\">&lt;/code&gt;</ept>.","source":"An object that supplies culture-specific formatting information about <code>input</code>."}],"pos":[329290,329380],"yaml":true},{"content":"A bitwise combination of enumeration values that indicates the permitted format of input. A typical value to specify is `None`.","nodes":[{"pos":[0,127],"content":"A bitwise combination of enumeration values that indicates the permitted format of input. A typical value to specify is `None`.","nodes":[{"content":"A bitwise combination of enumeration values that indicates the permitted format of input.","pos":[0,89]},{"content":"A typical value to specify is <ph id=\"ph1\">`None`</ph>.","pos":[90,127],"source":" A typical value to specify is `None`."}]}],"pos":[329464,329592],"yaml":true},{"content":"When the method returns, contains the <xref href=\"System.DateTimeOffset\"></xref> equivalent to the date and time of <code>input</code>, if the conversion succeeded, or <xref href=\"System.DateTimeOffset.MinValue\"></xref>, if the conversion failed. The conversion fails if the <code>input</code> parameter is `null`, or does not contain a valid string representation of a date and time in the expected format defined by <code>format</code> and <code>provider</code>. This parameter is passed uninitialized.","nodes":[{"pos":[0,504],"content":"When the method returns, contains the <xref href=\"System.DateTimeOffset\"></xref> equivalent to the date and time of <code>input</code>, if the conversion succeeded, or <xref href=\"System.DateTimeOffset.MinValue\"></xref>, if the conversion failed. The conversion fails if the <code>input</code> parameter is `null`, or does not contain a valid string representation of a date and time in the expected format defined by <code>format</code> and <code>provider</code>. This parameter is passed uninitialized.","nodes":[{"content":"When the method returns, contains the <ph id=\"ph1\">&lt;xref href=\"System.DateTimeOffset\"&gt;&lt;/xref&gt;</ph> equivalent to the date and time of <bpt id=\"p1\">&lt;code&gt;</bpt><ph id=\"ph2\">input</ph><ept id=\"p1\">&lt;/code&gt;</ept>, if the conversion succeeded, or <ph id=\"ph3\">&lt;xref href=\"System.DateTimeOffset.MinValue\"&gt;&lt;/xref&gt;</ph>, if the conversion failed.","pos":[0,246],"source":"When the method returns, contains the <xref href=\"System.DateTimeOffset\"></xref> equivalent to the date and time of <code>input</code>, if the conversion succeeded, or <xref href=\"System.DateTimeOffset.MinValue\"></xref>, if the conversion failed."},{"content":"The conversion fails if the <bpt id=\"p1\">&lt;code&gt;</bpt><ph id=\"ph1\">input</ph><ept id=\"p1\">&lt;/code&gt;</ept> parameter is <ph id=\"ph2\">`null`</ph>, or does not contain a valid string representation of a date and time in the expected format defined by <bpt id=\"p2\">&lt;code&gt;</bpt><ph id=\"ph3\">format</ph><ept id=\"p2\">&lt;/code&gt;</ept> and <bpt id=\"p3\">&lt;code&gt;</bpt><ph id=\"ph4\">provider</ph><ept id=\"p3\">&lt;/code&gt;</ept>.","pos":[247,464],"source":" The conversion fails if the <code>input</code> parameter is `null`, or does not contain a valid string representation of a date and time in the expected format defined by <code>format</code> and <code>provider</code>."},{"content":"This parameter is passed uninitialized.","pos":[465,504]}]}],"pos":[329662,330167],"yaml":true},{"content":"`true` if the <code>input</code> parameter is successfully converted; otherwise, `false`.","nodes":[{"pos":[0,89],"content":"<ph id=\"ph1\">`true`</ph> if the <bpt id=\"p1\">&lt;code&gt;</bpt><ph id=\"ph2\">input</ph><ept id=\"p1\">&lt;/code&gt;</ept> parameter is successfully converted; otherwise, <ph id=\"ph3\">`false`</ph>.","source":"`true` if the <code>input</code> parameter is successfully converted; otherwise, `false`."}],"pos":[330225,330317],"yaml":true},{"content":"<code>styles</code> includes an undefined <xref href=\"System.Globalization.DateTimeStyles\"></xref> value.  \n  \n -or-  \n  \n <xref href=\"System.Globalization.DateTimeStyles.NoCurrentDateDefault\"></xref> is not supported.  \n  \n -or-  \n  \n <code>styles</code> includes mutually exclusive <xref href=\"System.Globalization.DateTimeStyles\"></xref> values.","nodes":[{"pos":[0,105],"content":"<ph id=\"ph1\">&lt;code&gt;styles&lt;/code&gt;</ph> includes an undefined <ph id=\"ph2\">&lt;xref href=\"System.Globalization.DateTimeStyles\"&gt;&lt;/xref&gt;</ph> value.","source":"<code>styles</code> includes an undefined <xref href=\"System.Globalization.DateTimeStyles\"></xref> value."},{"pos":[112,116],"content":"-or-","nodes":[{"content":"-or-","pos":[0,4]}]},{"pos":[123,218],"content":"<ph id=\"ph1\">&lt;xref href=\"System.Globalization.DateTimeStyles.NoCurrentDateDefault\"&gt;&lt;/xref&gt;</ph> is not supported.","source":"<xref href=\"System.Globalization.DateTimeStyles.NoCurrentDateDefault\"></xref> is not supported."},{"pos":[225,229],"content":"-or-","nodes":[{"content":"-or-","pos":[0,4]}]},{"pos":[236,348],"content":"<ph id=\"ph1\">&lt;code&gt;styles&lt;/code&gt;</ph> includes mutually exclusive <ph id=\"ph2\">&lt;xref href=\"System.Globalization.DateTimeStyles\"&gt;&lt;/xref&gt;</ph> values.","source":"<code>styles</code> includes mutually exclusive <xref href=\"System.Globalization.DateTimeStyles\"></xref> values."}],"pos":[330474,330839],"yaml":true},{"content":"Gets a <xref href=\"System.DateTime\"></xref> value that represents the Coordinated Universal Time (UTC) date and time of the current <xref href=\"System.DateTimeOffset\"></xref> object.","nodes":[{"pos":[0,182],"content":"Gets a <ph id=\"ph1\">&lt;xref href=\"System.DateTime\"&gt;&lt;/xref&gt;</ph> value that represents the Coordinated Universal Time (UTC) date and time of the current <ph id=\"ph2\">&lt;xref href=\"System.DateTimeOffset\"&gt;&lt;/xref&gt;</ph> object.","source":"Gets a <xref href=\"System.DateTime\"></xref> value that represents the Coordinated Universal Time (UTC) date and time of the current <xref href=\"System.DateTimeOffset\"></xref> object."}],"pos":[332273,332456],"yaml":true},{"content":"The <xref:System.DateTimeOffset.UtcDateTime%2A> property performs a dual conversion:  \n  \n-   It converts the date and time of the current <xref:System.DateTimeOffset> object to Coordinated Universal Time (UTC). The conversion is performed by subtracting the value of the <xref:System.DateTimeOffset.Offset%2A> property from the date and time of the current <xref:System.DateTimeOffset> object.  \n  \n-   It converts the <xref:System.DateTimeOffset> value to a <xref:System.DateTime> value.  \n  \n The <xref:System.DateTime.Kind%2A> property of the returned <xref:System.DateTimeOffset.DateTime%2A> value is set to <xref:System.DateTimeKind?displayProperty=fullName>.  \n  \n Retrieving the value of the <xref:System.DateTimeOffset.UtcDateTime%2A> property is equivalent to calling the current <xref:System.DateTimeOffset> object's `ToUniversalTime.DateTime` property, except that the <xref:System.DateTime.Kind%2A> property of the latter <xref:System.DateTime> value is <xref:System.DateTimeKind?displayProperty=fullName>.","nodes":[{"pos":[0,84],"content":"The <xref:System.DateTimeOffset.UtcDateTime%2A> property performs a dual conversion:","nodes":[{"content":"The <ph id=\"ph1\">&lt;xref:System.DateTimeOffset.UtcDateTime%2A&gt;</ph> property performs a dual conversion:","pos":[0,84],"source":"The <xref:System.DateTimeOffset.UtcDateTime%2A> property performs a dual conversion:"}]},{"pos":[94,394],"content":"It converts the date and time of the current <xref:System.DateTimeOffset> object to Coordinated Universal Time (UTC). The conversion is performed by subtracting the value of the <xref:System.DateTimeOffset.Offset%2A> property from the date and time of the current <xref:System.DateTimeOffset> object.","nodes":[{"content":"It converts the date and time of the current <xref:System.DateTimeOffset> object to Coordinated Universal Time (UTC). The conversion is performed by subtracting the value of the <xref:System.DateTimeOffset.Offset%2A> property from the date and time of the current <xref:System.DateTimeOffset> object.","pos":[0,300],"nodes":[{"content":"It converts the date and time of the current <ph id=\"ph1\">&lt;xref:System.DateTimeOffset&gt;</ph> object to Coordinated Universal Time (UTC).","pos":[0,117],"source":"It converts the date and time of the current <xref:System.DateTimeOffset> object to Coordinated Universal Time (UTC)."},{"content":"The conversion is performed by subtracting the value of the <ph id=\"ph1\">&lt;xref:System.DateTimeOffset.Offset%2A&gt;</ph> property from the date and time of the current <ph id=\"ph2\">&lt;xref:System.DateTimeOffset&gt;</ph> object.","pos":[118,300],"source":" The conversion is performed by subtracting the value of the <xref:System.DateTimeOffset.Offset%2A> property from the date and time of the current <xref:System.DateTimeOffset> object."}]}]},{"pos":[404,489],"content":"It converts the <xref:System.DateTimeOffset> value to a <xref:System.DateTime> value.","nodes":[{"content":"It converts the <ph id=\"ph1\">&lt;xref:System.DateTimeOffset&gt;</ph> value to a <ph id=\"ph2\">&lt;xref:System.DateTime&gt;</ph> value.","pos":[0,85],"source":"It converts the <xref:System.DateTimeOffset> value to a <xref:System.DateTime> value."}]},{"pos":[496,665],"content":"The <xref:System.DateTime.Kind%2A> property of the returned <xref:System.DateTimeOffset.DateTime%2A> value is set to <xref:System.DateTimeKind?displayProperty=fullName>.","nodes":[{"content":"The <ph id=\"ph1\">&lt;xref:System.DateTime.Kind%2A&gt;</ph> property of the returned <ph id=\"ph2\">&lt;xref:System.DateTimeOffset.DateTime%2A&gt;</ph> value is set to <ph id=\"ph3\">&lt;xref:System.DateTimeKind?displayProperty=fullName&gt;</ph>.","pos":[0,169],"source":"The <xref:System.DateTime.Kind%2A> property of the returned <xref:System.DateTimeOffset.DateTime%2A> value is set to <xref:System.DateTimeKind?displayProperty=fullName>."}]},{"pos":[672,1019],"content":"Retrieving the value of the <ph id=\"ph1\">&lt;xref:System.DateTimeOffset.UtcDateTime%2A&gt;</ph> property is equivalent to calling the current <ph id=\"ph2\">&lt;xref:System.DateTimeOffset&gt;</ph> object's <ph id=\"ph3\">`ToUniversalTime.DateTime`</ph> property, except that the <ph id=\"ph4\">&lt;xref:System.DateTime.Kind%2A&gt;</ph> property of the latter <ph id=\"ph5\">&lt;xref:System.DateTime&gt;</ph> value is <ph id=\"ph6\">&lt;xref:System.DateTimeKind?displayProperty=fullName&gt;</ph>.","source":"Retrieving the value of the <xref:System.DateTimeOffset.UtcDateTime%2A> property is equivalent to calling the current <xref:System.DateTimeOffset> object's `ToUniversalTime.DateTime` property, except that the <xref:System.DateTime.Kind%2A> property of the latter <xref:System.DateTime> value is <xref:System.DateTimeKind?displayProperty=fullName>."}],"pos":[332467,333497],"yaml":true,"extradata":"MT"},{"content":"The Coordinated Universal Time (UTC) date and time of the current <xref href=\"System.DateTimeOffset\"></xref> object.","nodes":[{"pos":[0,116],"content":"The Coordinated Universal Time (UTC) date and time of the current <ph id=\"ph1\">&lt;xref href=\"System.DateTimeOffset\"&gt;&lt;/xref&gt;</ph> object.","source":"The Coordinated Universal Time (UTC) date and time of the current <xref href=\"System.DateTimeOffset\"></xref> object."}],"pos":[334133,334250],"yaml":true},{"content":"Gets a <xref href=\"System.DateTimeOffset\"></xref> object whose date and time are set to the current Coordinated Universal Time (UTC) date and time and whose offset is <xref href=\"System.TimeSpan.Zero\"></xref>.","nodes":[{"pos":[0,209],"content":"Gets a <ph id=\"ph1\">&lt;xref href=\"System.DateTimeOffset\"&gt;&lt;/xref&gt;</ph> object whose date and time are set to the current Coordinated Universal Time (UTC) date and time and whose offset is <ph id=\"ph2\">&lt;xref href=\"System.TimeSpan.Zero\"&gt;&lt;/xref&gt;</ph>.","source":"Gets a <xref href=\"System.DateTimeOffset\"></xref> object whose date and time are set to the current Coordinated Universal Time (UTC) date and time and whose offset is <xref href=\"System.TimeSpan.Zero\"></xref>."}],"pos":[335718,335928],"yaml":true},{"content":"The <xref:System.DateTimeOffset.UtcNow%2A> property computes the current Universal Coordinated Time (UTC) based on the local system's clock time and an offset defined by the local system's time zone.  \n  \n The precision of the current UTC time's millisecond component depends on the resolution of the system clock. On Windows NT 3.5 and later, and Windows Vista operating systems, the clock's resolution is approximately 10-15 milliseconds.","nodes":[{"pos":[0,199],"content":"The <xref:System.DateTimeOffset.UtcNow%2A> property computes the current Universal Coordinated Time (UTC) based on the local system's clock time and an offset defined by the local system's time zone.","nodes":[{"content":"The <ph id=\"ph1\">&lt;xref:System.DateTimeOffset.UtcNow%2A&gt;</ph> property computes the current Universal Coordinated Time (UTC) based on the local system's clock time and an offset defined by the local system's time zone.","pos":[0,199],"source":"The <xref:System.DateTimeOffset.UtcNow%2A> property computes the current Universal Coordinated Time (UTC) based on the local system's clock time and an offset defined by the local system's time zone."}]},{"pos":[206,440],"content":"The precision of the current UTC time's millisecond component depends on the resolution of the system clock. On Windows NT 3.5 and later, and Windows Vista operating systems, the clock's resolution is approximately 10-15 milliseconds.","nodes":[{"content":"The precision of the current UTC time's millisecond component depends on the resolution of the system clock. On Windows NT 3.5 and later, and Windows Vista operating systems, the clock's resolution is approximately 10-15 milliseconds.","pos":[0,234],"nodes":[{"content":"The precision of the current UTC time's millisecond component depends on the resolution of the system clock.","pos":[0,108]},{"content":"On Windows NT 3.5 and later, and Windows Vista operating systems, the clock's resolution is approximately 10-15 milliseconds.","pos":[109,234]}]}]}],"pos":[335939,336384],"yaml":true,"extradata":"MT"},{"content":"An object whose date and time is the current Coordinated Universal Time (UTC) and whose offset is <xref href=\"System.TimeSpan.Zero\"></xref>.","nodes":[{"pos":[0,140],"content":"An object whose date and time is the current Coordinated Universal Time (UTC) and whose offset is <ph id=\"ph1\">&lt;xref href=\"System.TimeSpan.Zero\"&gt;&lt;/xref&gt;</ph>.","source":"An object whose date and time is the current Coordinated Universal Time (UTC) and whose offset is <xref href=\"System.TimeSpan.Zero\"></xref>."}],"pos":[336963,337104],"yaml":true},{"content":"Gets the number of ticks that represents the date and time of the current <xref href=\"System.DateTimeOffset\"></xref> object in Coordinated Universal Time (UTC).","nodes":[{"pos":[0,160],"content":"Gets the number of ticks that represents the date and time of the current <ph id=\"ph1\">&lt;xref href=\"System.DateTimeOffset\"&gt;&lt;/xref&gt;</ph> object in Coordinated Universal Time (UTC).","source":"Gets the number of ticks that represents the date and time of the current <xref href=\"System.DateTimeOffset\"></xref> object in Coordinated Universal Time (UTC)."}],"pos":[338579,338740],"yaml":true},{"content":"The value of the <xref:System.DateTimeOffset.UtcTicks%2A> property represents the number of 100-nanosecond intervals that have elapsed since 12:00:00 midnight on January 1, 0001 (the value of <xref:System.DateTimeOffset.MinValue>). It does not include ticks that would be added by leap seconds. A nanosecond is one billionth of a second; there are ten million ticks in a second. The value of the <xref:System.DateTimeOffset.UtcTicks%2A> property ranges from `DateTimeOffset.MinValue.Ticks` to `DateTimeOffset.MaxValue.Ticks`.","nodes":[{"pos":[0,525],"content":"The value of the <xref:System.DateTimeOffset.UtcTicks%2A> property represents the number of 100-nanosecond intervals that have elapsed since 12:00:00 midnight on January 1, 0001 (the value of <xref:System.DateTimeOffset.MinValue>). It does not include ticks that would be added by leap seconds. A nanosecond is one billionth of a second; there are ten million ticks in a second. The value of the <xref:System.DateTimeOffset.UtcTicks%2A> property ranges from `DateTimeOffset.MinValue.Ticks` to `DateTimeOffset.MaxValue.Ticks`.","nodes":[{"content":"The value of the <ph id=\"ph1\">&lt;xref:System.DateTimeOffset.UtcTicks%2A&gt;</ph> property represents the number of 100-nanosecond intervals that have elapsed since 12:00:00 midnight on January 1, 0001 (the value of <ph id=\"ph2\">&lt;xref:System.DateTimeOffset.MinValue&gt;</ph>).","pos":[0,231],"source":"The value of the <xref:System.DateTimeOffset.UtcTicks%2A> property represents the number of 100-nanosecond intervals that have elapsed since 12:00:00 midnight on January 1, 0001 (the value of <xref:System.DateTimeOffset.MinValue>)."},{"content":"It does not include ticks that would be added by leap seconds.","pos":[232,294]},{"content":"A nanosecond is one billionth of a second; there are ten million ticks in a second.","pos":[295,378]},{"content":"The value of the <ph id=\"ph1\">&lt;xref:System.DateTimeOffset.UtcTicks%2A&gt;</ph> property ranges from <ph id=\"ph2\">`DateTimeOffset.MinValue.Ticks`</ph> to <ph id=\"ph3\">`DateTimeOffset.MaxValue.Ticks`</ph>.","pos":[379,525],"source":" The value of the <xref:System.DateTimeOffset.UtcTicks%2A> property ranges from `DateTimeOffset.MinValue.Ticks` to `DateTimeOffset.MaxValue.Ticks`."}]}],"pos":[338751,339277],"yaml":true,"extradata":"MT"},{"content":"The number of ticks in the <xref href=\"System.DateTimeOffset\"></xref> object's Coordinated Universal Time (UTC).","nodes":[{"pos":[0,112],"content":"The number of ticks in the <ph id=\"ph1\">&lt;xref href=\"System.DateTimeOffset\"&gt;&lt;/xref&gt;</ph> object's Coordinated Universal Time (UTC).","source":"The number of ticks in the <xref href=\"System.DateTimeOffset\"></xref> object's Coordinated Universal Time (UTC)."}],"pos":[339386,339499],"yaml":true},{"content":"Gets the year component of the date represented by the current <xref href=\"System.DateTimeOffset\"></xref> object.","nodes":[{"pos":[0,113],"content":"Gets the year component of the date represented by the current <ph id=\"ph1\">&lt;xref href=\"System.DateTimeOffset\"&gt;&lt;/xref&gt;</ph> object.","source":"Gets the year component of the date represented by the current <xref href=\"System.DateTimeOffset\"></xref> object."}],"pos":[340952,341066],"yaml":true},{"content":"The <xref:System.DateTimeOffset.Year%2A> property is not affected by the value of the <xref:System.DateTimeOffset.Offset%2A> property.  \n  \n You can also create a string representation of a <xref:System.DateTimeOffset> object's year component by calling the <xref:System.DateTimeOffset.ToString%2A> method with the \"y\", \"yy\", or \"yyyy\" custom format specifiers.","nodes":[{"pos":[0,134],"content":"The <xref:System.DateTimeOffset.Year%2A> property is not affected by the value of the <xref:System.DateTimeOffset.Offset%2A> property.","nodes":[{"content":"The <ph id=\"ph1\">&lt;xref:System.DateTimeOffset.Year%2A&gt;</ph> property is not affected by the value of the <ph id=\"ph2\">&lt;xref:System.DateTimeOffset.Offset%2A&gt;</ph> property.","pos":[0,134],"source":"The <xref:System.DateTimeOffset.Year%2A> property is not affected by the value of the <xref:System.DateTimeOffset.Offset%2A> property."}]},{"pos":[141,361],"content":"You can also create a string representation of a <xref:System.DateTimeOffset> object's year component by calling the <xref:System.DateTimeOffset.ToString%2A> method with the \"y\", \"yy\", or \"yyyy\" custom format specifiers.","nodes":[{"content":"You can also create a string representation of a <ph id=\"ph1\">&lt;xref:System.DateTimeOffset&gt;</ph> object's year component by calling the <ph id=\"ph2\">&lt;xref:System.DateTimeOffset.ToString%2A&gt;</ph> method with the \"y\", \"yy\", or \"yyyy\" custom format specifiers.","pos":[0,220],"source":"You can also create a string representation of a <xref:System.DateTimeOffset> object's year component by calling the <xref:System.DateTimeOffset.ToString%2A> method with the \"y\", \"yy\", or \"yyyy\" custom format specifiers."}]}],"pos":[341077,341449],"yaml":true,"extradata":"MT"},{"content":"The year component of the current <xref href=\"System.DateTimeOffset\"></xref> object, expressed as an integer value between 0 and 9999.","nodes":[{"pos":[0,134],"content":"The year component of the current <ph id=\"ph1\">&lt;xref href=\"System.DateTimeOffset\"&gt;&lt;/xref&gt;</ph> object, expressed as an integer value between 0 and 9999.","source":"The year component of the current <xref href=\"System.DateTimeOffset\"></xref> object, expressed as an integer value between 0 and 9999."}],"pos":[342467,342602],"yaml":true},{"content":"Compares the value of the current <xref href=\"System.DateTimeOffset\"></xref> object with another object of the same type.","nodes":[{"pos":[0,121],"content":"Compares the value of the current <ph id=\"ph1\">&lt;xref href=\"System.DateTimeOffset\"&gt;&lt;/xref&gt;</ph> object with another object of the same type.","source":"Compares the value of the current <xref href=\"System.DateTimeOffset\"></xref> object with another object of the same type."}],"pos":[344255,344377],"yaml":true},{"content":"The object to compare with the current <xref href=\"System.DateTimeOffset\"></xref> object.","nodes":[{"pos":[0,89],"content":"The object to compare with the current <ph id=\"ph1\">&lt;xref href=\"System.DateTimeOffset\"&gt;&lt;/xref&gt;</ph> object.","source":"The object to compare with the current <xref href=\"System.DateTimeOffset\"></xref> object."}],"pos":[344515,344605],"yaml":true},{"content":"A 32-bit signed integer that indicates whether the current <xref href=\"System.DateTimeOffset\"></xref> object is less than, equal to, or greater than <code>obj</code>. The return values of the method are interpreted as follows:  \n  \n <table><thead><tr><th> Return Value  \n  \n </th><th> Description  \n  \n </th></tr></thead><tbody><tr><td> Less than zero  \n  \n </td><td> The current <xref href=\"System.DateTimeOffset\"></xref> object is less than (earlier than) <code>obj</code>.  \n  \n </td></tr><tr><td> Zero  \n  \n </td><td> The current <xref href=\"System.DateTimeOffset\"></xref> object is equal to (the same point in time as) <code>obj</code>.  \n  \n </td></tr><tr><td> Greater than zero  \n  \n </td><td> The current <xref href=\"System.DateTimeOffset\"></xref> object is greater than (later than) <code>obj</code>.  \n  \n </td></tr></tbody></table>","nodes":[{"pos":[0,226],"content":"A 32-bit signed integer that indicates whether the current <xref href=\"System.DateTimeOffset\"></xref> object is less than, equal to, or greater than <code>obj</code>. The return values of the method are interpreted as follows:","nodes":[{"content":"A 32-bit signed integer that indicates whether the current <ph id=\"ph1\">&lt;xref href=\"System.DateTimeOffset\"&gt;&lt;/xref&gt;</ph> object is less than, equal to, or greater than <bpt id=\"p1\">&lt;code&gt;</bpt><ph id=\"ph2\">obj</ph><ept id=\"p1\">&lt;/code&gt;</ept>.","pos":[0,166],"source":"A 32-bit signed integer that indicates whether the current <xref href=\"System.DateTimeOffset\"></xref> object is less than, equal to, or greater than <code>obj</code>."},{"content":"The return values of the method are interpreted as follows:","pos":[167,226]}]},{"pos":[233,843],"content":"<table><thead><tr><th> Return Value  \n  \n </th><th> Description  \n  \n </th></tr></thead><tbody><tr><td> Less than zero  \n  \n </td><td> The current <xref href=\"System.DateTimeOffset\"></xref> object is less than (earlier than) <code>obj</code>.  \n  \n </td></tr><tr><td> Zero  \n  \n </td><td> The current <xref href=\"System.DateTimeOffset\"></xref> object is equal to (the same point in time as) <code>obj</code>.  \n  \n </td></tr><tr><td> Greater than zero  \n  \n </td><td> The current <xref href=\"System.DateTimeOffset\"></xref> object is greater than (later than) <code>obj</code>.  \n  \n </td></tr></tbody></table>","nodes":[{"content":"Return Value","pos":[23,40],"source":" Return Value  \n  \n "},{"content":"Description","pos":[52,68],"source":" Description  \n  \n "},{"content":"Less than zero","pos":[104,123],"source":" Less than zero  \n  \n "},{"content":" The current <xref href=\"System.DateTimeOffset\"></xref> object is less than (earlier than) <code>obj</code>.  \n  \n ","pos":[134,249],"nodes":[{"content":"The current <ph id=\"ph1\">&lt;xref href=\"System.DateTimeOffset\"&gt;&lt;/xref&gt;</ph> object is less than (earlier than) <ph id=\"ph2\">&lt;code&gt;obj&lt;/code&gt;</ph>.","pos":[1,108],"source":" The current <xref href=\"System.DateTimeOffset\"></xref> object is less than (earlier than) <code>obj</code>."}]},{"content":"Zero","pos":[268,277],"source":" Zero  \n  \n "},{"content":" The current <xref href=\"System.DateTimeOffset\"></xref> object is equal to (the same point in time as) <code>obj</code>.  \n  \n ","pos":[288,415],"nodes":[{"content":"The current <ph id=\"ph1\">&lt;xref href=\"System.DateTimeOffset\"&gt;&lt;/xref&gt;</ph> object is equal to (the same point in time as) <ph id=\"ph2\">&lt;code&gt;obj&lt;/code&gt;</ph>.","pos":[1,120],"source":" The current <xref href=\"System.DateTimeOffset\"></xref> object is equal to (the same point in time as) <code>obj</code>."}]},{"content":"Greater than zero","pos":[434,456],"source":" Greater than zero  \n  \n "},{"content":" The current <xref href=\"System.DateTimeOffset\"></xref> object is greater than (later than) <code>obj</code>.  \n  \n ","pos":[467,583],"nodes":[{"content":"The current <ph id=\"ph1\">&lt;xref href=\"System.DateTimeOffset\"&gt;&lt;/xref&gt;</ph> object is greater than (later than) <ph id=\"ph2\">&lt;code&gt;obj&lt;/code&gt;</ph>.","pos":[1,109],"source":" The current <xref href=\"System.DateTimeOffset\"></xref> object is greater than (later than) <code>obj</code>."}]}]}],"pos":[344661,345532],"yaml":true},{"content":"Runs when the deserialization of an object has been completed.","nodes":[{"pos":[0,62],"content":"Runs when the deserialization of an object has been completed.","nodes":[{"content":"Runs when the deserialization of an object has been completed.","pos":[0,62]}]}],"pos":[347401,347464],"yaml":true},{"content":"The object that initiated the callback. The functionality for this parameter is not currently implemented.","nodes":[{"pos":[0,106],"content":"The object that initiated the callback. The functionality for this parameter is not currently implemented.","nodes":[{"content":"The object that initiated the callback. The functionality for this parameter is not currently implemented.","pos":[0,106],"nodes":[{"content":"The object that initiated the callback.","pos":[0,39]},{"content":"The functionality for this parameter is not currently implemented.","pos":[40,106]}]}]}],"pos":[347630,347737],"yaml":true},{"content":"Populates a <xref href=\"System.Runtime.Serialization.SerializationInfo\"></xref> object with the data required to serialize the current <xref href=\"System.DateTimeOffset\"></xref> object.","nodes":[{"pos":[0,185],"content":"Populates a <ph id=\"ph1\">&lt;xref href=\"System.Runtime.Serialization.SerializationInfo\"&gt;&lt;/xref&gt;</ph> object with the data required to serialize the current <ph id=\"ph2\">&lt;xref href=\"System.DateTimeOffset\"&gt;&lt;/xref&gt;</ph> object.","source":"Populates a <xref href=\"System.Runtime.Serialization.SerializationInfo\"></xref> object with the data required to serialize the current <xref href=\"System.DateTimeOffset\"></xref> object."}],"pos":[349539,349725],"yaml":true},{"content":"The object to populate with data.","nodes":[{"pos":[0,33],"content":"The object to populate with data.","nodes":[{"content":"The object to populate with data.","pos":[0,33]}]}],"pos":[350051,350085],"yaml":true},{"content":"The destination for this serialization (see <xref href=\"System.Runtime.Serialization.StreamingContext\"></xref>).","nodes":[{"pos":[0,112],"content":"The destination for this serialization (see <ph id=\"ph1\">&lt;xref href=\"System.Runtime.Serialization.StreamingContext\"&gt;&lt;/xref&gt;</ph>).","source":"The destination for this serialization (see <xref href=\"System.Runtime.Serialization.StreamingContext\"></xref>)."}],"pos":[350180,350293],"yaml":true},{"content":"The <code>info</code> parameter is `null`.","nodes":[{"pos":[0,42],"content":"The <bpt id=\"p1\">&lt;code&gt;</bpt><ph id=\"ph1\">info</ph><ept id=\"p1\">&lt;/code&gt;</ept> parameter is <ph id=\"ph2\">`null`</ph>.","source":"The <code>info</code> parameter is `null`."}],"pos":[350501,350544],"yaml":true}],"content":"### YamlMime:ManagedReference\nitems:\n- uid: System.DateTimeOffset\n  commentId: T:System.DateTimeOffset\n  id: DateTimeOffset\n  children:\n  - System.DateTimeOffset.#ctor(System.DateTime)\n  - System.DateTimeOffset.#ctor(System.DateTime,System.TimeSpan)\n  - System.DateTimeOffset.#ctor(System.Int64,System.TimeSpan)\n  - System.DateTimeOffset.#ctor(System.Int32,System.Int32,System.Int32,System.Int32,System.Int32,System.Int32,System.TimeSpan)\n  - System.DateTimeOffset.#ctor(System.Int32,System.Int32,System.Int32,System.Int32,System.Int32,System.Int32,System.Int32,System.TimeSpan)\n  - System.DateTimeOffset.#ctor(System.Int32,System.Int32,System.Int32,System.Int32,System.Int32,System.Int32,System.Int32,System.Globalization.Calendar,System.TimeSpan)\n  - System.DateTimeOffset.Add(System.TimeSpan)\n  - System.DateTimeOffset.AddDays(System.Double)\n  - System.DateTimeOffset.AddHours(System.Double)\n  - System.DateTimeOffset.AddMilliseconds(System.Double)\n  - System.DateTimeOffset.AddMinutes(System.Double)\n  - System.DateTimeOffset.AddMonths(System.Int32)\n  - System.DateTimeOffset.AddSeconds(System.Double)\n  - System.DateTimeOffset.AddTicks(System.Int64)\n  - System.DateTimeOffset.AddYears(System.Int32)\n  - System.DateTimeOffset.Compare(System.DateTimeOffset,System.DateTimeOffset)\n  - System.DateTimeOffset.CompareTo(System.DateTimeOffset)\n  - System.DateTimeOffset.Date\n  - System.DateTimeOffset.DateTime\n  - System.DateTimeOffset.Day\n  - System.DateTimeOffset.DayOfWeek\n  - System.DateTimeOffset.DayOfYear\n  - System.DateTimeOffset.Equals(System.DateTimeOffset)\n  - System.DateTimeOffset.Equals(System.Object)\n  - System.DateTimeOffset.Equals(System.DateTimeOffset,System.DateTimeOffset)\n  - System.DateTimeOffset.EqualsExact(System.DateTimeOffset)\n  - System.DateTimeOffset.FromFileTime(System.Int64)\n  - System.DateTimeOffset.FromUnixTimeMilliseconds(System.Int64)\n  - System.DateTimeOffset.FromUnixTimeSeconds(System.Int64)\n  - System.DateTimeOffset.GetHashCode\n  - System.DateTimeOffset.Hour\n  - System.DateTimeOffset.LocalDateTime\n  - System.DateTimeOffset.MaxValue\n  - System.DateTimeOffset.Millisecond\n  - System.DateTimeOffset.Minute\n  - System.DateTimeOffset.MinValue\n  - System.DateTimeOffset.Month\n  - System.DateTimeOffset.Now\n  - System.DateTimeOffset.Offset\n  - System.DateTimeOffset.op_Addition(System.DateTimeOffset,System.TimeSpan)\n  - System.DateTimeOffset.op_Equality(System.DateTimeOffset,System.DateTimeOffset)\n  - System.DateTimeOffset.op_GreaterThan(System.DateTimeOffset,System.DateTimeOffset)\n  - System.DateTimeOffset.op_GreaterThanOrEqual(System.DateTimeOffset,System.DateTimeOffset)\n  - System.DateTimeOffset.op_Implicit(System.DateTime to System.DateTimeOffset)\n  - System.DateTimeOffset.op_Inequality(System.DateTimeOffset,System.DateTimeOffset)\n  - System.DateTimeOffset.op_LessThan(System.DateTimeOffset,System.DateTimeOffset)\n  - System.DateTimeOffset.op_LessThanOrEqual(System.DateTimeOffset,System.DateTimeOffset)\n  - System.DateTimeOffset.op_Subtraction(System.DateTimeOffset,System.DateTimeOffset)\n  - System.DateTimeOffset.op_Subtraction(System.DateTimeOffset,System.TimeSpan)\n  - System.DateTimeOffset.Parse(System.String)\n  - System.DateTimeOffset.Parse(System.String,System.IFormatProvider)\n  - System.DateTimeOffset.Parse(System.String,System.IFormatProvider,System.Globalization.DateTimeStyles)\n  - System.DateTimeOffset.ParseExact(System.String,System.String,System.IFormatProvider)\n  - System.DateTimeOffset.ParseExact(System.String,System.String,System.IFormatProvider,System.Globalization.DateTimeStyles)\n  - System.DateTimeOffset.ParseExact(System.String,System.String[],System.IFormatProvider,System.Globalization.DateTimeStyles)\n  - System.DateTimeOffset.Second\n  - System.DateTimeOffset.Subtract(System.TimeSpan)\n  - System.DateTimeOffset.Subtract(System.DateTimeOffset)\n  - System.DateTimeOffset.Ticks\n  - System.DateTimeOffset.TimeOfDay\n  - System.DateTimeOffset.ToFileTime\n  - System.DateTimeOffset.ToLocalTime\n  - System.DateTimeOffset.ToOffset(System.TimeSpan)\n  - System.DateTimeOffset.ToString\n  - System.DateTimeOffset.ToString(System.IFormatProvider)\n  - System.DateTimeOffset.ToString(System.String)\n  - System.DateTimeOffset.ToString(System.String,System.IFormatProvider)\n  - System.DateTimeOffset.ToUniversalTime\n  - System.DateTimeOffset.ToUnixTimeMilliseconds\n  - System.DateTimeOffset.ToUnixTimeSeconds\n  - System.DateTimeOffset.TryParse(System.String,System.IFormatProvider,System.Globalization.DateTimeStyles,System.DateTimeOffset@)\n  - System.DateTimeOffset.TryParse(System.String,System.DateTimeOffset@)\n  - System.DateTimeOffset.TryParseExact(System.String,System.String[],System.IFormatProvider,System.Globalization.DateTimeStyles,System.DateTimeOffset@)\n  - System.DateTimeOffset.TryParseExact(System.String,System.String,System.IFormatProvider,System.Globalization.DateTimeStyles,System.DateTimeOffset@)\n  - System.DateTimeOffset.UtcDateTime\n  - System.DateTimeOffset.UtcNow\n  - System.DateTimeOffset.UtcTicks\n  - System.DateTimeOffset.Year\n  - System.DateTimeOffset.System#IComparable#CompareTo(System.Object)\n  - System.DateTimeOffset.System#Runtime#Serialization#IDeserializationCallback#OnDeserialization(System.Object)\n  - System.DateTimeOffset.System#Runtime#Serialization#ISerializable#GetObjectData(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)\n  langs:\n  - csharp\n  name: DateTimeOffset\n  nameWithType: DateTimeOffset\n  fullName: System.DateTimeOffset\n  type: Struct\n  assemblies:\n  - System.Runtime\n  - mscorlib\n  - netstandard\n  namespace: System\n  summary: Represents a point in time, typically expressed as a date and time of day, relative to Coordinated Universal Time (UTC).\n  remarks: \"The <xref:System.DateTimeOffset> structure includes a <xref:System.DateTime> value, together with an <xref:System.DateTimeOffset.Offset%2A> property that defines the difference between the current <xref:System.DateTimeOffset> instance's date and time and Coordinated Universal Time (UTC). Because it exactly defines a date and time relative to UTC, the <xref:System.DateTimeOffset> structure does not include a `Kind` member, as the <xref:System.DateTime> structure does. It represents dates and times with values whose UTC ranges from 12:00:00 midnight, January 1, 0001 Anno Domini (Common Era), to 11:59:59 P.M., December 31, 9999 A.D. (C.E.).  \\n  \\n The time component of a <xref:System.DateTimeOffset> value is measured in 100-nanosecond units called ticks, and a particular date is the number of ticks since 12:00 midnight, January 1, 0001 A.D. (C.E.) in the <xref:System.Globalization.GregorianCalendar> calendar. A <xref:System.DateTimeOffset> value is always expressed in the context of an explicit or default calendar. Ticks that are attributable to leap seconds are not included in the total number of ticks.  \\n  \\n> [!NOTE]\\n>  If you are working with a ticks value that you want to convert to some other time interval, such as minutes or seconds, you should use the <xref:System.TimeSpan.TicksPerDay?displayProperty=fullName>, <xref:System.TimeSpan.TicksPerHour?displayProperty=fullName>, <xref:System.TimeSpan.TicksPerMinute?displayProperty=fullName>, <xref:System.TimeSpan.TicksPerSecond?displayProperty=fullName>, or <xref:System.TimeSpan.TicksPerMillisecond?displayProperty=fullName> constant to perform the conversion. For example, to add the number of seconds represented by a specified number of ticks to the <xref:System.DateTimeOffset.Second%2A> component of a <xref:System.DateTimeOffset> value, you can use the expression `dateValue.Second + nTicks/Timespan.TicksPerSecond`.  \\n  \\n Although a <xref:System.DateTimeOffset> value includes an offset, it is not a fully time zone-aware data structure. While an offset from UTC is one characteristic of a time zone, it does not unambiguously identify a time zone. Not only do multiple time zones share the same offset from UTC, but the offset of a single time zone changes if it observes daylight saving time. This means that, as soon as a <xref:System.DateTimeOffset> value is disassociated from its time zone, it can no longer be unambiguously linked back to its original time zone.  \\n  \\n Because <xref:System.DateTimeOffset> is a structure, a <xref:System.DateTimeOffset> object that has been declared but not otherwise initialized contains the default values for each of its member fields. This means that its <xref:System.DateTimeOffset.DateTime%2A> property is set to <xref:System.DateTimeOffset.MinValue?displayProperty=fullName> and its <xref:System.DateTimeOffset.Offset%2A> property is set to <xref:System.TimeSpan.Zero?displayProperty=fullName>.  \\n  \\n You can create a new <xref:System.DateTimeOffset> value by calling any of the overloads of its constructor, which are similar to the overloaded constructors for the <xref:System.DateTime> structure. You can also create a new <xref:System.DateTimeOffset> value by assigning it a <xref:System.DateTime> value. This is an implicit conversion; it does not require a casting operator (in C#) or call to a conversion method (in Visual Basic). You can also initialize a <xref:System.DateTimeOffset> value from the string representation of a date and time by calling a number of static string parsing methods, which include <xref:System.DateTimeOffset.Parse%2A>, <xref:System.DateTimeOffset.ParseExact%2A>, <xref:System.DateTimeOffset.TryParse%2A>, and <xref:System.DateTimeOffset.TryParseExact%2A>.  \\n  \\n The members of the <xref:System.DateTimeOffset> structure provide functionality in the following areas:  \\n  \\n-   Date and time arithmetic.  \\n  \\n     You can add or subtract either dates or time intervals from a particular <xref:System.DateTimeOffset> value. Arithmetic operations with <xref:System.DateTimeOffset> values, unlike those with <xref:System.DateTime> values, adjust for differences in time offsets when returning a result. For example, the following code uses <xref:System.DateTime> variables to subtract the current local time from the current UTC time. The code then uses <xref:System.DateTimeOffset> variables to perform the same operation. The subtraction with <xref:System.DateTime> values returns the local time zone's difference from UTC, while the subtraction with <xref:System.DateTimeOffset> values returns <xref:System.TimeSpan.Zero?displayProperty=fullName>.  \\n  \\n     [!code-csharp[System.DateTimeOffset.Type#1](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.DateTimeOffset.Type/cs/Type.cs#1)]\\n     [!code-vb[System.DateTimeOffset.Type#1](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.DateTimeOffset.Type/vb/Type.vb#1)]  \\n  \\n-   Type conversion operations.  \\n  \\n     You can convert <xref:System.DateTimeOffset> values to <xref:System.DateTimeOffset.DateTime%2A> values and vice versa.  \\n  \\n-   Time manipulation and extraction operations.  \\n  \\n     You can extract either the date or the time of a <xref:System.DateTimeOffset> value. You can also retrieve the value of a particular <xref:System.DateTimeOffset> component, such as its year or its month.  \\n  \\n-   Date and time conversion.  \\n  \\n     You can convert any <xref:System.DateTimeOffset> value to another <xref:System.DateTimeOffset> value that represents the same point in time in another time zone. However, a time zone's adjustment rules are applied only in the case of the <xref:System.DateTimeOffset.ToLocalTime%2A> method, which converts a <xref:System.DateTimeOffset> value to the date and time in the local system zone.  \\n  \\n-   Date and time comparison.  \\n  \\n     You can determine whether any particular <xref:System.DateTimeOffset> value is earlier than, the same as, or later than another <xref:System.DateTimeOffset> value. Before the comparison is performed, all values are converted to UTC.\"\n  syntax:\n    content: 'public struct DateTimeOffset : IComparable, IComparable<DateTimeOffset>, IEquatable<DateTimeOffset>, IFormattable, System.Runtime.Serialization.IDeserializationCallback, System.Runtime.Serialization.ISerializable'\n  inheritance:\n  - System.Object\n  - System.ValueType\n  implements:\n  - System.IComparable\n  - System.IComparable{System.DateTimeOffset}\n  - System.IEquatable{System.DateTimeOffset}\n  - System.IFormattable\n  - System.Runtime.Serialization.IDeserializationCallback\n  - System.Runtime.Serialization.ISerializable\n  version:\n  - netcore-1.0\n  - netcore-1.1\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - netstandard-1.0\n  - netstandard-1.1\n  - netstandard-1.2\n  - netstandard-1.3\n  - netstandard-1.4\n  - netstandard-1.5\n  - netstandard-1.6\n  - netstandard-2.0\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  monikers:\n  - netcore-1.0\n  - netcore-1.1\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - netstandard-1.0\n  - netstandard-1.1\n  - netstandard-1.2\n  - netstandard-1.3\n  - netstandard-1.4\n  - netstandard-1.5\n  - netstandard-1.6\n  - netstandard-2.0\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System/DateTimeOffset.xml\n  ms.technology:\n  - dotnet-standard\n  author: rpetrusha\n  ms.author: ronpet\n  manager: wpickett\n- uid: System.DateTimeOffset.#ctor(System.DateTime)\n  commentId: M:System.DateTimeOffset.#ctor(System.DateTime)\n  id: '#ctor(System.DateTime)'\n  parent: System.DateTimeOffset\n  langs:\n  - csharp\n  name: DateTimeOffset(DateTime)\n  nameWithType: DateTimeOffset.DateTimeOffset(DateTime)\n  fullName: DateTimeOffset.DateTimeOffset(DateTime)\n  type: Constructor\n  assemblies:\n  - System.Runtime\n  - mscorlib\n  - netstandard\n  namespace: System\n  summary: Initializes a new instance of the <xref href=\"System.DateTimeOffset\"></xref> structure using the specified <xref href=\"System.DateTime\"></xref> value.\n  remarks: \"This constructor's behavior depends on the value of the <xref:System.DateTime.Kind%2A?displayProperty=fullName> property of the `dateTime` parameter:  \\n  \\n-   If the value of <xref:System.DateTime.Kind%2A?displayProperty=fullName> is <xref:System.DateTimeKind?displayProperty=fullName>, the <xref:System.DateTimeOffset.DateTime%2A> property of the new instance is set equal to `dateTime`, and the <xref:System.DateTimeOffset.Offset%2A> property is set equal to <xref:System.TimeSpan.Zero>.  \\n  \\n-   If the value of <xref:System.DateTime.Kind%2A?displayProperty=fullName> is <xref:System.DateTimeKind?displayProperty=fullName> or <xref:System.DateTimeKind?displayProperty=fullName>, the <xref:System.DateTimeOffset.DateTime%2A> property of the new instance is set equal to `dateTime`, and the <xref:System.DateTimeOffset.Offset%2A> property is set equal to the offset of the local system's current time zone.\"\n  example:\n  - \"The following example illustrates how the value of the <xref:System.DateTime.Kind%2A?displayProperty=fullName> property of the `dateTime` parameter affects the date and time value that is returned by this constructor.  \\n  \\n [!code-csharp[System.DateTimeOffset.Constructors#1](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.DateTimeOffset.Constructors/cs/Constructors.cs#1)]\\n [!code-vb[System.DateTimeOffset.Constructors#1](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.DateTimeOffset.Constructors/vb/Constructors.vb#1)]\"\n  syntax:\n    content: public DateTimeOffset (DateTime dateTime);\n    parameters:\n    - id: dateTime\n      type: System.DateTime\n      description: A date and time.\n  overload: System.DateTimeOffset.#ctor*\n  exceptions:\n  - type: System.ArgumentOutOfRangeException\n    commentId: T:System.ArgumentOutOfRangeException\n    description: \"The Coordinated Universal Time (UTC) date and time that results from applying the offset is earlier than <xref href=\\\"System.DateTimeOffset.MinValue\\\"></xref>.  \\n  \\n -or-  \\n  \\n The UTC date and time that results from applying the offset is later than <xref href=\\\"System.DateTimeOffset.MaxValue\\\"></xref>.\"\n  version:\n  - netcore-1.0\n  - netcore-1.1\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - netstandard-1.0\n  - netstandard-1.1\n  - netstandard-1.2\n  - netstandard-1.3\n  - netstandard-1.4\n  - netstandard-1.5\n  - netstandard-1.6\n  - netstandard-2.0\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  monikers:\n  - netcore-1.0\n  - netcore-1.1\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - netstandard-1.0\n  - netstandard-1.1\n  - netstandard-1.2\n  - netstandard-1.3\n  - netstandard-1.4\n  - netstandard-1.5\n  - netstandard-1.6\n  - netstandard-2.0\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System/DateTimeOffset.xml\n  ms.technology:\n  - dotnet-standard\n  author: rpetrusha\n  ms.author: ronpet\n  manager: wpickett\n- uid: System.DateTimeOffset.#ctor(System.DateTime,System.TimeSpan)\n  commentId: M:System.DateTimeOffset.#ctor(System.DateTime,System.TimeSpan)\n  id: '#ctor(System.DateTime,System.TimeSpan)'\n  parent: System.DateTimeOffset\n  langs:\n  - csharp\n  name: DateTimeOffset(DateTime, TimeSpan)\n  nameWithType: DateTimeOffset.DateTimeOffset(DateTime, TimeSpan)\n  fullName: DateTimeOffset.DateTimeOffset(DateTime, TimeSpan)\n  type: Constructor\n  assemblies:\n  - System.Runtime\n  - mscorlib\n  - netstandard\n  namespace: System\n  summary: Initializes a new instance of the <xref href=\"System.DateTimeOffset\"></xref> structure using the specified <xref href=\"System.DateTime\"></xref> value and offset.\n  remarks: \"This constructor's behavior depends in part on the value of the <xref:System.DateTime.Kind%2A> property of the `dateTime` parameter:  \\n  \\n-   If the value of <xref:System.DateTime.Kind%2A> is <xref:System.DateTimeKind?displayProperty=fullName>, the value of the `offset` parameter must be 0 or an <xref:System.ArgumentException> is thrown.  \\n  \\n-   If the value of <xref:System.DateTime.Kind%2A> is <xref:System.DateTimeKind?displayProperty=fullName>, the value of the `offset` parameter must be equal to the local time zone's offset from Coordinated Universal Time (UTC) for that particular date or an <xref:System.ArgumentException> is thrown.  \\n  \\n-   If the value of <xref:System.DateTime.Kind%2A> is <xref:System.DateTimeKind?displayProperty=fullName>, the `offset` parameter can have any valid value.\"\n  example:\n  - \"The following example shows how to initialize a <xref:System.DateTimeOffset> object with a date and time and the offset of the local time zone when that time zone is not known in advance.  \\n  \\n [!code-csharp[System.DateTimeOffset.Constructors#3](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.DateTimeOffset.Constructors/cs/Constructors.cs#3)]\\n [!code-vb[System.DateTimeOffset.Constructors#3](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.DateTimeOffset.Constructors/vb/Constructors.vb#3)]\"\n  syntax:\n    content: public DateTimeOffset (DateTime dateTime, TimeSpan offset);\n    parameters:\n    - id: dateTime\n      type: System.DateTime\n      description: A date and time.\n    - id: offset\n      type: System.TimeSpan\n      description: The time's offset from Coordinated Universal Time (UTC).\n  overload: System.DateTimeOffset.#ctor*\n  exceptions:\n  - type: System.ArgumentException\n    commentId: T:System.ArgumentException\n    description: \"<code>dateTime.Kind</code> equals <xref href=\\\"System.DateTimeKind.Utc\\\"></xref> and <code>offset</code> does not equal zero.  \\n  \\n -or-  \\n  \\n <code>dateTime.Kind</code> equals <xref href=\\\"System.DateTimeKind.Local\\\"></xref> and <code>offset</code> does not equal the offset of the system's local time zone.  \\n  \\n -or-  \\n  \\n <code>offset</code> is not specified in whole minutes.\"\n  - type: System.ArgumentOutOfRangeException\n    commentId: T:System.ArgumentOutOfRangeException\n    description: \"<code>offset</code> is less than -14 hours or greater than 14 hours.  \\n  \\n -or-  \\n  \\n <xref href=\\\"System.DateTimeOffset.UtcDateTime\\\"></xref> is less than <xref href=\\\"System.DateTimeOffset.MinValue\\\"></xref> or greater than <xref href=\\\"System.DateTimeOffset.MaxValue\\\"></xref>.\"\n  version:\n  - netcore-1.0\n  - netcore-1.1\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - netstandard-1.0\n  - netstandard-1.1\n  - netstandard-1.2\n  - netstandard-1.3\n  - netstandard-1.4\n  - netstandard-1.5\n  - netstandard-1.6\n  - netstandard-2.0\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  monikers:\n  - netcore-1.0\n  - netcore-1.1\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - netstandard-1.0\n  - netstandard-1.1\n  - netstandard-1.2\n  - netstandard-1.3\n  - netstandard-1.4\n  - netstandard-1.5\n  - netstandard-1.6\n  - netstandard-2.0\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System/DateTimeOffset.xml\n  ms.technology:\n  - dotnet-standard\n  author: rpetrusha\n  ms.author: ronpet\n  manager: wpickett\n- uid: System.DateTimeOffset.#ctor(System.Int64,System.TimeSpan)\n  commentId: M:System.DateTimeOffset.#ctor(System.Int64,System.TimeSpan)\n  id: '#ctor(System.Int64,System.TimeSpan)'\n  parent: System.DateTimeOffset\n  langs:\n  - csharp\n  name: DateTimeOffset(Int64, TimeSpan)\n  nameWithType: DateTimeOffset.DateTimeOffset(Int64, TimeSpan)\n  fullName: DateTimeOffset.DateTimeOffset(Int64, TimeSpan)\n  type: Constructor\n  assemblies:\n  - System.Runtime\n  - mscorlib\n  - netstandard\n  namespace: System\n  summary: Initializes a new instance of the <xref href=\"System.DateTimeOffset\"></xref> structure using the specified number of ticks and offset.\n  remarks: \"Ordinarily, trying to call the <xref:System.DateTimeOffset.%23ctor%2A> constructor to instantiate a <xref:System.DateTimeOffset> value with a local time and an offset other than that of the local time zone throws an <xref:System.ArgumentException>. You can use this overload of the <xref:System.DateTimeOffset> constructor to work around this limitation. The following example uses the local time's number of ticks to instantiate a <xref:System.DateTimeOffset> value whose offset does not necessarily represent that of the local time:  \\n  \\n [!code-csharp[System.DateTimeOffset.Constructors#4](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.DateTimeOffset.Constructors/cs/Constructors.cs#4)]\\n [!code-vb[System.DateTimeOffset.Constructors#4](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.DateTimeOffset.Constructors/vb/Constructors.vb#4)]\"\n  example:\n  - \"The following example initializes a <xref:System.DateTimeOffset> object by using the number of ticks in an arbitrary date (in this case, July 16, 2007, at 1:32 PM) with an offset of -5.  \\n  \\n [!code-csharp[System.DateTimeOffset.Constructors#2](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.DateTimeOffset.Constructors/cs/Constructors.cs#2)]\\n [!code-vb[System.DateTimeOffset.Constructors#2](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.DateTimeOffset.Constructors/vb/Constructors.vb#2)]\"\n  syntax:\n    content: public DateTimeOffset (long ticks, TimeSpan offset);\n    parameters:\n    - id: ticks\n      type: System.Int64\n      description: A date and time expressed as the number of 100-nanosecond intervals that have elapsed since 12:00:00 midnight on January 1, 0001.\n    - id: offset\n      type: System.TimeSpan\n      description: The time's offset from Coordinated Universal Time (UTC).\n  overload: System.DateTimeOffset.#ctor*\n  exceptions:\n  - type: System.ArgumentException\n    commentId: T:System.ArgumentException\n    description: <code>offset</code> is not specified in whole minutes.\n  - type: System.ArgumentOutOfRangeException\n    commentId: T:System.ArgumentOutOfRangeException\n    description: \"The <xref href=\\\"System.DateTimeOffset.UtcDateTime\\\"></xref> property is earlier than <xref href=\\\"System.DateTimeOffset.MinValue\\\"></xref> or later than <xref href=\\\"System.DateTimeOffset.MaxValue\\\"></xref>.  \\n  \\n -or-  \\n  \\n <code>ticks</code> is less than `DateTimeOffset.MinValue.Ticks` or greater than `DateTimeOffset.MaxValue.Ticks`.  \\n  \\n -or-  \\n  \\n <code>Offset</code> s less than -14 hours or greater than 14 hours.\"\n  version:\n  - netcore-1.0\n  - netcore-1.1\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - netstandard-1.0\n  - netstandard-1.1\n  - netstandard-1.2\n  - netstandard-1.3\n  - netstandard-1.4\n  - netstandard-1.5\n  - netstandard-1.6\n  - netstandard-2.0\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  monikers:\n  - netcore-1.0\n  - netcore-1.1\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - netstandard-1.0\n  - netstandard-1.1\n  - netstandard-1.2\n  - netstandard-1.3\n  - netstandard-1.4\n  - netstandard-1.5\n  - netstandard-1.6\n  - netstandard-2.0\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System/DateTimeOffset.xml\n  ms.technology:\n  - dotnet-standard\n  author: rpetrusha\n  ms.author: ronpet\n  manager: wpickett\n- uid: System.DateTimeOffset.#ctor(System.Int32,System.Int32,System.Int32,System.Int32,System.Int32,System.Int32,System.TimeSpan)\n  commentId: M:System.DateTimeOffset.#ctor(System.Int32,System.Int32,System.Int32,System.Int32,System.Int32,System.Int32,System.TimeSpan)\n  id: '#ctor(System.Int32,System.Int32,System.Int32,System.Int32,System.Int32,System.Int32,System.TimeSpan)'\n  parent: System.DateTimeOffset\n  langs:\n  - csharp\n  name: DateTimeOffset(Int32, Int32, Int32, Int32, Int32, Int32, TimeSpan)\n  nameWithType: DateTimeOffset.DateTimeOffset(Int32, Int32, Int32, Int32, Int32, Int32, TimeSpan)\n  fullName: DateTimeOffset.DateTimeOffset(Int32, Int32, Int32, Int32, Int32, Int32, TimeSpan)\n  type: Constructor\n  assemblies:\n  - System.Runtime\n  - mscorlib\n  - netstandard\n  namespace: System\n  summary: Initializes a new instance of the <xref href=\"System.DateTimeOffset\"></xref> structure using the specified year, month, day, hour, minute, second, and offset.\n  remarks: This constructor interprets `year`, `month`, and `day` as a year, month, and day in the Gregorian calendar. To instantiate a <xref:System.DateTimeOffset> value by using the year, month, and day in another calendar, call the <xref:System.DateTimeOffset.%23ctor%28System.Int32%2CSystem.Int32%2CSystem.Int32%2CSystem.Int32%2CSystem.Int32%2CSystem.Int32%2CSystem.Int32%2CSystem.Globalization.Calendar%2CSystem.TimeSpan%29> constructor.\n  example:\n  - \"The following example instantiates a <xref:System.DateTimeOffset> object by using the <xref:System.DateTimeOffset.%23ctor%28System.Int32%2CSystem.Int32%2CSystem.Int32%2CSystem.Int32%2CSystem.Int32%2CSystem.Int32%2CSystem.TimeSpan%29?displayProperty=fullName> constructor overload.  \\n  \\n [!code-csharp[System.DateTimeOffset.Constructors#5](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.DateTimeOffset.Constructors/cs/Constructors.cs#5)]\\n [!code-vb[System.DateTimeOffset.Constructors#5](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.DateTimeOffset.Constructors/vb/Constructors.vb#5)]\"\n  syntax:\n    content: public DateTimeOffset (int year, int month, int day, int hour, int minute, int second, TimeSpan offset);\n    parameters:\n    - id: year\n      type: System.Int32\n      description: The year (1 through 9999).\n    - id: month\n      type: System.Int32\n      description: The month (1 through 12).\n    - id: day\n      type: System.Int32\n      description: The day (1 through the number of days in <code>month</code>).\n    - id: hour\n      type: System.Int32\n      description: The hours (0 through 23).\n    - id: minute\n      type: System.Int32\n      description: The minutes (0 through 59).\n    - id: second\n      type: System.Int32\n      description: The seconds (0 through 59).\n    - id: offset\n      type: System.TimeSpan\n      description: The time's offset from Coordinated Universal Time (UTC).\n  overload: System.DateTimeOffset.#ctor*\n  exceptions:\n  - type: System.ArgumentException\n    commentId: T:System.ArgumentException\n    description: <code>offset</code> does not represent whole minutes.\n  - type: System.ArgumentOutOfRangeException\n    commentId: T:System.ArgumentOutOfRangeException\n    description: \"<code>year</code> is less than one or greater than 9999.  \\n  \\n -or-  \\n  \\n <code>month</code> is less than one or greater than 12.  \\n  \\n -or-  \\n  \\n <code>day</code> is less than one or greater than the number of days in <code>month</code>.  \\n  \\n -or-  \\n  \\n <code>hour</code> is less than zero or greater than 23.  \\n  \\n -or-  \\n  \\n <code>minute</code> is less than 0 or greater than 59.  \\n  \\n -or-  \\n  \\n <code>second</code> is less than 0 or greater than 59.  \\n  \\n -or-  \\n  \\n <code>offset</code> is less than -14 hours or greater than 14 hours.  \\n  \\n -or-  \\n  \\n The <xref href=\\\"System.DateTimeOffset.UtcDateTime\\\"></xref> property is earlier than <xref href=\\\"System.DateTimeOffset.MinValue\\\"></xref> or later than <xref href=\\\"System.DateTimeOffset.MaxValue\\\"></xref>.\"\n  version:\n  - netcore-1.0\n  - netcore-1.1\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - netstandard-1.0\n  - netstandard-1.1\n  - netstandard-1.2\n  - netstandard-1.3\n  - netstandard-1.4\n  - netstandard-1.5\n  - netstandard-1.6\n  - netstandard-2.0\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  monikers:\n  - netcore-1.0\n  - netcore-1.1\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - netstandard-1.0\n  - netstandard-1.1\n  - netstandard-1.2\n  - netstandard-1.3\n  - netstandard-1.4\n  - netstandard-1.5\n  - netstandard-1.6\n  - netstandard-2.0\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System/DateTimeOffset.xml\n  ms.technology:\n  - dotnet-standard\n  author: rpetrusha\n  ms.author: ronpet\n  manager: wpickett\n- uid: System.DateTimeOffset.#ctor(System.Int32,System.Int32,System.Int32,System.Int32,System.Int32,System.Int32,System.Int32,System.TimeSpan)\n  commentId: M:System.DateTimeOffset.#ctor(System.Int32,System.Int32,System.Int32,System.Int32,System.Int32,System.Int32,System.Int32,System.TimeSpan)\n  id: '#ctor(System.Int32,System.Int32,System.Int32,System.Int32,System.Int32,System.Int32,System.Int32,System.TimeSpan)'\n  parent: System.DateTimeOffset\n  langs:\n  - csharp\n  name: DateTimeOffset(Int32, Int32, Int32, Int32, Int32, Int32, Int32, TimeSpan)\n  nameWithType: DateTimeOffset.DateTimeOffset(Int32, Int32, Int32, Int32, Int32, Int32, Int32, TimeSpan)\n  fullName: DateTimeOffset.DateTimeOffset(Int32, Int32, Int32, Int32, Int32, Int32, Int32, TimeSpan)\n  type: Constructor\n  assemblies:\n  - System.Runtime\n  - mscorlib\n  - netstandard\n  namespace: System\n  summary: Initializes a new instance of the <xref href=\"System.DateTimeOffset\"></xref> structure using the specified year, month, day, hour, minute, second, millisecond, and offset.\n  remarks: This constructor interprets `year`, `month`, and `day` as a year, month, and day in the Gregorian calendar. To instantiate a <xref:System.DateTimeOffset> value by using the year, month, and day in another calendar, call the <xref:System.DateTimeOffset.%23ctor%28System.Int32%2CSystem.Int32%2CSystem.Int32%2CSystem.Int32%2CSystem.Int32%2CSystem.Int32%2CSystem.Int32%2CSystem.Globalization.Calendar%2CSystem.TimeSpan%29> constructor.\n  example:\n  - \"The following example instantiates a <xref:System.DateTimeOffset> object by using the <xref:System.DateTimeOffset.%23ctor%28System.Int32%2CSystem.Int32%2CSystem.Int32%2CSystem.Int32%2CSystem.Int32%2CSystem.Int32%2CSystem.Int32%2CSystem.TimeSpan%29?displayProperty=fullName> constructor overload.  \\n  \\n [!code-csharp[System.DateTimeOffset.Constructors#7](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.DateTimeOffset.Constructors/cs/Constructors.cs#7)]\\n [!code-vb[System.DateTimeOffset.Constructors#7](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.DateTimeOffset.Constructors/vb/Constructors.vb#7)]\"\n  syntax:\n    content: public DateTimeOffset (int year, int month, int day, int hour, int minute, int second, int millisecond, TimeSpan offset);\n    parameters:\n    - id: year\n      type: System.Int32\n      description: The year (1 through 9999).\n    - id: month\n      type: System.Int32\n      description: The month (1 through 12).\n    - id: day\n      type: System.Int32\n      description: The day (1 through the number of days in <code>month</code>).\n    - id: hour\n      type: System.Int32\n      description: The hours (0 through 23).\n    - id: minute\n      type: System.Int32\n      description: The minutes (0 through 59).\n    - id: second\n      type: System.Int32\n      description: The seconds (0 through 59).\n    - id: millisecond\n      type: System.Int32\n      description: The milliseconds (0 through 999).\n    - id: offset\n      type: System.TimeSpan\n      description: The time's offset from Coordinated Universal Time (UTC).\n  overload: System.DateTimeOffset.#ctor*\n  exceptions:\n  - type: System.ArgumentException\n    commentId: T:System.ArgumentException\n    description: <code>offset</code> does not represent whole minutes.\n  - type: System.ArgumentOutOfRangeException\n    commentId: T:System.ArgumentOutOfRangeException\n    description: \"<code>year</code> is less than one or greater than 9999.  \\n  \\n -or-  \\n  \\n <code>month</code> is less than one or greater than 12.  \\n  \\n -or-  \\n  \\n <code>day</code> is less than one or greater than the number of days in <code>month</code>.  \\n  \\n -or-  \\n  \\n <code>hour</code> is less than zero or greater than 23.  \\n  \\n -or-  \\n  \\n <code>minute</code> is less than 0 or greater than 59.  \\n  \\n -or-  \\n  \\n <code>second</code> is less than 0 or greater than 59.  \\n  \\n -or-  \\n  \\n <code>millisecond</code> is less than 0 or greater than 999.  \\n  \\n -or-  \\n  \\n <code>offset</code> is less than -14 or greater than 14.  \\n  \\n -or-  \\n  \\n The <xref href=\\\"System.DateTimeOffset.UtcDateTime\\\"></xref> property is earlier than <xref href=\\\"System.DateTimeOffset.MinValue\\\"></xref> or later than <xref href=\\\"System.DateTimeOffset.MaxValue\\\"></xref>.\"\n  version:\n  - netcore-1.0\n  - netcore-1.1\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - netstandard-1.0\n  - netstandard-1.1\n  - netstandard-1.2\n  - netstandard-1.3\n  - netstandard-1.4\n  - netstandard-1.5\n  - netstandard-1.6\n  - netstandard-2.0\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  monikers:\n  - netcore-1.0\n  - netcore-1.1\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - netstandard-1.0\n  - netstandard-1.1\n  - netstandard-1.2\n  - netstandard-1.3\n  - netstandard-1.4\n  - netstandard-1.5\n  - netstandard-1.6\n  - netstandard-2.0\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System/DateTimeOffset.xml\n  ms.technology:\n  - dotnet-standard\n  author: rpetrusha\n  ms.author: ronpet\n  manager: wpickett\n- uid: System.DateTimeOffset.#ctor(System.Int32,System.Int32,System.Int32,System.Int32,System.Int32,System.Int32,System.Int32,System.Globalization.Calendar,System.TimeSpan)\n  commentId: M:System.DateTimeOffset.#ctor(System.Int32,System.Int32,System.Int32,System.Int32,System.Int32,System.Int32,System.Int32,System.Globalization.Calendar,System.TimeSpan)\n  id: '#ctor(System.Int32,System.Int32,System.Int32,System.Int32,System.Int32,System.Int32,System.Int32,System.Globalization.Calendar,System.TimeSpan)'\n  parent: System.DateTimeOffset\n  langs:\n  - csharp\n  name: DateTimeOffset(Int32, Int32, Int32, Int32, Int32, Int32, Int32, Calendar, TimeSpan)\n  nameWithType: DateTimeOffset.DateTimeOffset(Int32, Int32, Int32, Int32, Int32, Int32, Int32, Calendar, TimeSpan)\n  fullName: DateTimeOffset.DateTimeOffset(Int32, Int32, Int32, Int32, Int32, Int32, Int32, Calendar, TimeSpan)\n  type: Constructor\n  assemblies:\n  - mscorlib\n  - netstandard\n  - System.Runtime\n  namespace: System\n  summary: Initializes a new instance of the <xref href=\"System.DateTimeOffset\"></xref> structure using the specified year, month, day, hour, minute, second, millisecond, and offset of a specified calendar.\n  remarks: The `year`, `month`, `day`, `hour`, `minute`, `second`, and `millisecond` parameters all reflect values expressed in the calendar specified by the `calendar` parameter. An exception is thrown if these values form a date and time that cannot be expressed by using this calendar.\n  example:\n  - \"The following example uses instances of both the <xref:System.Globalization.HebrewCalendar> class and the <xref:System.Globalization.HijriCalendar> class to instantiate a <xref:System.DateTimeOffset> value. That date is then displayed to the console using the respective calendars and the Gregorian calendar.  \\n  \\n [!code-csharp[System.DateTimeOffset.Constructors#8](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.DateTimeOffset.Constructors/cs/Constructors.cs#8)]\\n [!code-vb[System.DateTimeOffset.Constructors#8](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.DateTimeOffset.Constructors/vb/Constructors.vb#8)]\"\n  syntax:\n    content: public DateTimeOffset (int year, int month, int day, int hour, int minute, int second, int millisecond, System.Globalization.Calendar calendar, TimeSpan offset);\n    parameters:\n    - id: year\n      type: System.Int32\n      description: The year.\n    - id: month\n      type: System.Int32\n      description: The month (1 through 12).\n    - id: day\n      type: System.Int32\n      description: The day (1 through the number of days in <code>month</code>).\n    - id: hour\n      type: System.Int32\n      description: The hours (0 through 23).\n    - id: minute\n      type: System.Int32\n      description: The minutes (0 through 59).\n    - id: second\n      type: System.Int32\n      description: The seconds (0 through 59).\n    - id: millisecond\n      type: System.Int32\n      description: The milliseconds (0 through 999).\n    - id: calendar\n      type: System.Globalization.Calendar\n      description: The calendar that is used to interpret <code>year</code>, <code>month</code>, and <code>day</code>.\n    - id: offset\n      type: System.TimeSpan\n      description: The time's offset from Coordinated Universal Time (UTC).\n  overload: System.DateTimeOffset.#ctor*\n  exceptions:\n  - type: System.ArgumentException\n    commentId: T:System.ArgumentException\n    description: <code>offset</code> does not represent whole minutes.\n  - type: System.ArgumentNullException\n    commentId: T:System.ArgumentNullException\n    description: <code>calendar</code> cannot be `null`.\n  - type: System.ArgumentOutOfRangeException\n    commentId: T:System.ArgumentOutOfRangeException\n    description: \"<code>year</code> is less than the <code>calendar</code> parameter's `MinSupportedDateTime.Year` or greater than `MaxSupportedDateTime.Year`.  \\n  \\n -or-  \\n  \\n <code>month</code> is either less than or greater than the number of months in <code>year</code> in the <code>calendar</code>.  \\n  \\n -or-  \\n  \\n <code>day</code> is less than one or greater than the number of days in <code>month</code>.  \\n  \\n -or-  \\n  \\n <code>hour</code> is less than zero or greater than 23.  \\n  \\n -or-  \\n  \\n <code>minute</code> is less than 0 or greater than 59.  \\n  \\n -or-  \\n  \\n <code>second</code> is less than 0 or greater than 59.  \\n  \\n -or-  \\n  \\n <code>millisecond</code> is less than 0 or greater than 999.  \\n  \\n -or-  \\n  \\n <code>offset</code> is less than -14 hours or greater than 14 hours.  \\n  \\n -or-  \\n  \\n The <code>year</code>, <code>month</code>, and <code>day</code> parameters cannot be represented as a date and time value.  \\n  \\n -or-  \\n  \\n The <xref href=\\\"System.DateTimeOffset.UtcDateTime\\\"></xref> property is earlier than <xref href=\\\"System.DateTimeOffset.MinValue\\\"></xref> or later than <xref href=\\\"System.DateTimeOffset.MaxValue\\\"></xref>.\"\n  version:\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - netstandard-2.0\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  monikers:\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - netstandard-2.0\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System/DateTimeOffset.xml\n  ms.technology:\n  - dotnet-standard\n  author: rpetrusha\n  ms.author: ronpet\n  manager: wpickett\n- uid: System.DateTimeOffset.Add(System.TimeSpan)\n  commentId: M:System.DateTimeOffset.Add(System.TimeSpan)\n  id: Add(System.TimeSpan)\n  parent: System.DateTimeOffset\n  langs:\n  - csharp\n  name: Add(TimeSpan)\n  nameWithType: DateTimeOffset.Add(TimeSpan)\n  fullName: DateTimeOffset.Add(TimeSpan)\n  type: Method\n  assemblies:\n  - System.Runtime\n  - mscorlib\n  - netstandard\n  namespace: System\n  summary: Returns a new <xref href=\"System.DateTimeOffset\"></xref> object that adds a specified time interval to the value of this instance.\n  remarks: \"You can use the <xref:System.DateTimeOffset.Add%2A> method to add more than one kind of time interval (days, hours, minutes, seconds, or milliseconds) in a single operation. This method's behavior is identical to the addition operator. The <xref:System.DateTimeOffset> structure also supports specialized addition methods (such as <xref:System.DateTimeOffset.AddDays%2A>, <xref:System.DateTimeOffset.AddHours%2A>, and <xref:System.DateTimeOffset.AddMinutes%2A>) for each time interval.  \\n  \\n> [!NOTE]\\n>  This method returns a new <xref:System.DateTimeOffset> object. It does not modify the value of the current object by adding `timeSpan` to its date and time.  \\n  \\n The <xref:System.DateTimeOffset.Add%2A> method does not affect the value of the current <xref:System.DateTimeOffset> object's <xref:System.DateTimeOffset.Offset%2A> property.  \\n  \\n Because a <xref:System.DateTimeOffset> object does not represent the date and time in a specific time zone, the <xref:System.DateTimeOffset.Add%2A> method does not consider a particular time zone's adjustment rules when it performs date and time arithmetic.  \\n  \\n If the `timeSpan` parameter is `null`, this method returns the value of the original <xref:System.DateTimeOffset> object unchanged.\"\n  example:\n  - \"The following example creates an array of <xref:System.TimeSpan> objects that represent the flight times between destinations. The <xref:System.DateTimeOffset.Add%2A> method then adds these times to a <xref:System.DateTimeOffset> object that represents a flight's initial takeoff time. The result reflects the scheduled arrival time at each destination.  \\n  \\n [!code-csharp[System.DateTimeOffset.Methods#1](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.DateTimeOffset.Methods/cs/Methods.cs#1)]\\n [!code-vb[System.DateTimeOffset.Methods#1](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.DateTimeOffset.Methods/vb/Methods.vb#1)]\"\n  syntax:\n    content: public DateTimeOffset Add (TimeSpan timeSpan);\n    parameters:\n    - id: timeSpan\n      type: System.TimeSpan\n      description: A <xref href=\"System.TimeSpan\"></xref> object that represents a positive or a negative time interval.\n    return:\n      type: System.DateTimeOffset\n      description: An object whose value is the sum of the date and time represented by the current <xref href=\"System.DateTimeOffset\"></xref> object and the time interval represented by <code>timeSpan</code>.\n  overload: System.DateTimeOffset.Add*\n  exceptions:\n  - type: System.ArgumentOutOfRangeException\n    commentId: T:System.ArgumentOutOfRangeException\n    description: \"The resulting <xref href=\\\"System.DateTimeOffset\\\"></xref> value is less than <xref href=\\\"System.DateTimeOffset.MinValue\\\"></xref>.  \\n  \\n -or-  \\n  \\n The resulting <xref href=\\\"System.DateTimeOffset\\\"></xref> value is greater than <xref href=\\\"System.DateTimeOffset.MaxValue\\\"></xref>.\"\n  version:\n  - netcore-1.0\n  - netcore-1.1\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - netstandard-1.0\n  - netstandard-1.1\n  - netstandard-1.2\n  - netstandard-1.3\n  - netstandard-1.4\n  - netstandard-1.5\n  - netstandard-1.6\n  - netstandard-2.0\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  monikers:\n  - netcore-1.0\n  - netcore-1.1\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - netstandard-1.0\n  - netstandard-1.1\n  - netstandard-1.2\n  - netstandard-1.3\n  - netstandard-1.4\n  - netstandard-1.5\n  - netstandard-1.6\n  - netstandard-2.0\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System/DateTimeOffset.xml\n  ms.technology:\n  - dotnet-standard\n  author: rpetrusha\n  ms.author: ronpet\n  manager: wpickett\n- uid: System.DateTimeOffset.AddDays(System.Double)\n  commentId: M:System.DateTimeOffset.AddDays(System.Double)\n  id: AddDays(System.Double)\n  parent: System.DateTimeOffset\n  langs:\n  - csharp\n  name: AddDays(Double)\n  nameWithType: DateTimeOffset.AddDays(Double)\n  fullName: DateTimeOffset.AddDays(Double)\n  type: Method\n  assemblies:\n  - System.Runtime\n  - mscorlib\n  - netstandard\n  namespace: System\n  summary: Returns a new <xref href=\"System.DateTimeOffset\"></xref> object that adds a specified number of whole and fractional days to the value of this instance.\n  remarks: \"The fractional part of the `days` parameter is the fractional part of a day. For example, 4.5 is equivalent to 4 days, 12 hours, 0 minutes, 0 seconds, 0 milliseconds. The `days` parameter is rounded to the nearest millisecond.  \\n  \\n> [!NOTE]\\n>  This method returns a new <xref:System.DateTimeOffset> object. It does not modify the value of the current object by adding `days` to its date and time.  \\n  \\n Because a <xref:System.DateTimeOffset> object does not represent the date and time in a specific time zone, the <xref:System.DateTimeOffset.AddDays%2A> method does not consider a particular time zone's adjustment rules when it performs date and time arithmetic.  \\n  \\n Converting time intervals of less than a day to a fraction can involve a loss of precision. If this is problematic, you can use the <xref:System.DateTimeOffset.Add%2A> method, which enables you to specify more than one kind of time interval in a single method call and eliminates the need to convert time intervals to fractional parts of a day.\"\n  example:\n  - \"The following example uses the <xref:System.DateTimeOffset.AddDays%2A> method to list the dates that fall on Monday, the start of the work week, in March 2008.  \\n  \\n [!code-csharp[System.DateTimeOffset.Methods#2](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.DateTimeOffset.Methods/cs/Methods.cs#2)]\\n [!code-vb[System.DateTimeOffset.Methods#2](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.DateTimeOffset.Methods/vb/Methods.vb#2)]\"\n  syntax:\n    content: public DateTimeOffset AddDays (double days);\n    parameters:\n    - id: days\n      type: System.Double\n      description: A number of whole and fractional days. The number can be negative or positive.\n    return:\n      type: System.DateTimeOffset\n      description: An object whose value is the sum of the date and time represented by the current <xref href=\"System.DateTimeOffset\"></xref> object and the number of days represented by <code>days</code>.\n  overload: System.DateTimeOffset.AddDays*\n  exceptions:\n  - type: System.ArgumentOutOfRangeException\n    commentId: T:System.ArgumentOutOfRangeException\n    description: \"The resulting <xref href=\\\"System.DateTimeOffset\\\"></xref> value is less than <xref href=\\\"System.DateTimeOffset.MinValue\\\"></xref>.  \\n  \\n -or-  \\n  \\n The resulting <xref href=\\\"System.DateTimeOffset\\\"></xref> value is greater than <xref href=\\\"System.DateTimeOffset.MaxValue\\\"></xref>.\"\n  version:\n  - netcore-1.0\n  - netcore-1.1\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - netstandard-1.0\n  - netstandard-1.1\n  - netstandard-1.2\n  - netstandard-1.3\n  - netstandard-1.4\n  - netstandard-1.5\n  - netstandard-1.6\n  - netstandard-2.0\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  monikers:\n  - netcore-1.0\n  - netcore-1.1\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - netstandard-1.0\n  - netstandard-1.1\n  - netstandard-1.2\n  - netstandard-1.3\n  - netstandard-1.4\n  - netstandard-1.5\n  - netstandard-1.6\n  - netstandard-2.0\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System/DateTimeOffset.xml\n  ms.technology:\n  - dotnet-standard\n  author: rpetrusha\n  ms.author: ronpet\n  manager: wpickett\n- uid: System.DateTimeOffset.AddHours(System.Double)\n  commentId: M:System.DateTimeOffset.AddHours(System.Double)\n  id: AddHours(System.Double)\n  parent: System.DateTimeOffset\n  langs:\n  - csharp\n  name: AddHours(Double)\n  nameWithType: DateTimeOffset.AddHours(Double)\n  fullName: DateTimeOffset.AddHours(Double)\n  type: Method\n  assemblies:\n  - System.Runtime\n  - mscorlib\n  - netstandard\n  namespace: System\n  summary: Returns a new <xref href=\"System.DateTimeOffset\"></xref> object that adds a specified number of whole and fractional hours to the value of this instance.\n  remarks: \"The fractional part of the `hours` parameter is the fractional part of an hour. For example, 4.5 is equivalent to 4 hours, 30 minutes, 0 seconds, 0 milliseconds. The `hours` parameter is rounded to the nearest millisecond.  \\n  \\n> [!NOTE]\\n>  This method returns a new <xref:System.DateTimeOffset> object. It does not modify the value of the current object by adding `hours` to its date and time.  \\n  \\n Because a <xref:System.DateTimeOffset> object does not represent the date and time in a specific time zone, the <xref:System.DateTimeOffset.AddHours%2A> method does not consider a particular time zone's adjustment rules when it performs date and time arithmetic.  \\n  \\n Converting time intervals of less than an hour to a fraction can involve a loss of precision. (For example, one minute is 0.01666 of an hour.) If this is problematic, you can use the <xref:System.DateTimeOffset.Add%2A> method, which enables you to specify more than one kind of time interval in a single method call and eliminates the need to convert time intervals to fractional parts of an hour.\"\n  example:\n  - \"The following example uses the <xref:System.DateTimeOffset.AddHours%2A> method to list the start times of work shifts for a particular week at an office that has two eight-hour shifts per day.  \\n  \\n [!code-csharp[System.DateTimeOffset.Methods#3](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.DateTimeOffset.Methods/cs/Methods.cs#3)]\\n [!code-vb[System.DateTimeOffset.Methods#3](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.DateTimeOffset.Methods/vb/Methods.vb#3)]\"\n  syntax:\n    content: public DateTimeOffset AddHours (double hours);\n    parameters:\n    - id: hours\n      type: System.Double\n      description: A number of whole and fractional hours. The number can be negative or positive.\n    return:\n      type: System.DateTimeOffset\n      description: An object whose value is the sum of the date and time represented by the current <xref href=\"System.DateTimeOffset\"></xref> object and the number of hours represented by <code>hours</code>.\n  overload: System.DateTimeOffset.AddHours*\n  exceptions:\n  - type: System.ArgumentOutOfRangeException\n    commentId: T:System.ArgumentOutOfRangeException\n    description: \"The resulting <xref href=\\\"System.DateTimeOffset\\\"></xref> value is less than <xref href=\\\"System.DateTimeOffset.MinValue\\\"></xref>.  \\n  \\n -or-  \\n  \\n The resulting <xref href=\\\"System.DateTimeOffset\\\"></xref> value is greater than <xref href=\\\"System.DateTimeOffset.MaxValue\\\"></xref>.\"\n  version:\n  - netcore-1.0\n  - netcore-1.1\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - netstandard-1.0\n  - netstandard-1.1\n  - netstandard-1.2\n  - netstandard-1.3\n  - netstandard-1.4\n  - netstandard-1.5\n  - netstandard-1.6\n  - netstandard-2.0\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  monikers:\n  - netcore-1.0\n  - netcore-1.1\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - netstandard-1.0\n  - netstandard-1.1\n  - netstandard-1.2\n  - netstandard-1.3\n  - netstandard-1.4\n  - netstandard-1.5\n  - netstandard-1.6\n  - netstandard-2.0\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System/DateTimeOffset.xml\n  ms.technology:\n  - dotnet-standard\n  author: rpetrusha\n  ms.author: ronpet\n  manager: wpickett\n- uid: System.DateTimeOffset.AddMilliseconds(System.Double)\n  commentId: M:System.DateTimeOffset.AddMilliseconds(System.Double)\n  id: AddMilliseconds(System.Double)\n  parent: System.DateTimeOffset\n  langs:\n  - csharp\n  name: AddMilliseconds(Double)\n  nameWithType: DateTimeOffset.AddMilliseconds(Double)\n  fullName: DateTimeOffset.AddMilliseconds(Double)\n  type: Method\n  assemblies:\n  - System.Runtime\n  - mscorlib\n  - netstandard\n  namespace: System\n  summary: Returns a new <xref href=\"System.DateTimeOffset\"></xref> object that adds a specified number of milliseconds to the value of this instance.\n  remarks: \"The fractional part of the `milliseconds` parameter is the fractional part of a millisecond. For example, 4.5 is equivalent to 4 milliseconds and 5000 ticks, where one millisecond equals 10,000 ticks. However, `milliseconds` is rounded to the nearest millisecond; all values of .5 or greater are rounded up.  \\n  \\n> [!NOTE]\\n>  This method returns a new <xref:System.DateTimeOffset> object. It does not modify the value of the current object by adding `milliseconds` to its date and time.  \\n  \\n Because a <xref:System.DateTimeOffset> object does not represent the date and time in a specific time zone, the <xref:System.DateTimeOffset.AddMilliseconds%2A> method does not consider a particular time zone's adjustment rules when it performs date and time arithmetic.\"\n  syntax:\n    content: public DateTimeOffset AddMilliseconds (double milliseconds);\n    parameters:\n    - id: milliseconds\n      type: System.Double\n      description: A number of whole and fractional milliseconds. The number can be negative or positive.\n    return:\n      type: System.DateTimeOffset\n      description: An object whose value is the sum of the date and time represented by the current <xref href=\"System.DateTimeOffset\"></xref> object and the number of whole milliseconds represented by <code>milliseconds</code>.\n  overload: System.DateTimeOffset.AddMilliseconds*\n  exceptions:\n  - type: System.ArgumentOutOfRangeException\n    commentId: T:System.ArgumentOutOfRangeException\n    description: \"The resulting <xref href=\\\"System.DateTimeOffset\\\"></xref> value is less than <xref href=\\\"System.DateTimeOffset.MinValue\\\"></xref>.  \\n  \\n -or-  \\n  \\n The resulting <xref href=\\\"System.DateTimeOffset\\\"></xref> value is greater than <xref href=\\\"System.DateTimeOffset.MaxValue\\\"></xref>.\"\n  version:\n  - netcore-1.0\n  - netcore-1.1\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - netstandard-1.0\n  - netstandard-1.1\n  - netstandard-1.2\n  - netstandard-1.3\n  - netstandard-1.4\n  - netstandard-1.5\n  - netstandard-1.6\n  - netstandard-2.0\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  monikers:\n  - netcore-1.0\n  - netcore-1.1\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - netstandard-1.0\n  - netstandard-1.1\n  - netstandard-1.2\n  - netstandard-1.3\n  - netstandard-1.4\n  - netstandard-1.5\n  - netstandard-1.6\n  - netstandard-2.0\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System/DateTimeOffset.xml\n  ms.technology:\n  - dotnet-standard\n  author: rpetrusha\n  ms.author: ronpet\n  manager: wpickett\n- uid: System.DateTimeOffset.AddMinutes(System.Double)\n  commentId: M:System.DateTimeOffset.AddMinutes(System.Double)\n  id: AddMinutes(System.Double)\n  parent: System.DateTimeOffset\n  langs:\n  - csharp\n  name: AddMinutes(Double)\n  nameWithType: DateTimeOffset.AddMinutes(Double)\n  fullName: DateTimeOffset.AddMinutes(Double)\n  type: Method\n  assemblies:\n  - System.Runtime\n  - mscorlib\n  - netstandard\n  namespace: System\n  summary: Returns a new <xref href=\"System.DateTimeOffset\"></xref> object that adds a specified number of whole and fractional minutes to the value of this instance.\n  remarks: \"The fractional part of the `minutes` parameter is the fractional part of a minute. For example, 4.5 is equivalent to 4 minutes, 30 seconds, 0 milliseconds. The `minutes` parameter is rounded to the nearest millisecond.  \\n  \\n> [!NOTE]\\n>  This method returns a new <xref:System.DateTimeOffset> object. It does not modify the value of the current object by adding `minutes` to its date and time.  \\n  \\n Because a <xref:System.DateTimeOffset> object does not represent the date and time in a specific time zone, the <xref:System.DateTimeOffset.AddMinutes%2A> method does not consider a particular time zone's adjustment rules when it performs date and time arithmetic.  \\n  \\n Converting time intervals of less than a minute to a fraction can involve a loss of precision. (For example, one second is 0.01666 of a minute.) If this is problematic, you can use the <xref:System.DateTimeOffset.Add%2A> method, which enables you to specify more than one kind of time interval in a single method call and eliminates the need to convert time intervals to fractional parts of a minute.\"\n  syntax:\n    content: public DateTimeOffset AddMinutes (double minutes);\n    parameters:\n    - id: minutes\n      type: System.Double\n      description: A number of whole and fractional minutes. The number can be negative or positive.\n    return:\n      type: System.DateTimeOffset\n      description: An object whose value is the sum of the date and time represented by the current <xref href=\"System.DateTimeOffset\"></xref> object and the number of minutes represented by <code>minutes</code>.\n  overload: System.DateTimeOffset.AddMinutes*\n  exceptions:\n  - type: System.ArgumentOutOfRangeException\n    commentId: T:System.ArgumentOutOfRangeException\n    description: \"The resulting <xref href=\\\"System.DateTimeOffset\\\"></xref> value is less than <xref href=\\\"System.DateTimeOffset.MinValue\\\"></xref>.  \\n  \\n -or-  \\n  \\n The resulting <xref href=\\\"System.DateTimeOffset\\\"></xref> value is greater than <xref href=\\\"System.DateTimeOffset.MaxValue\\\"></xref>.\"\n  version:\n  - netcore-1.0\n  - netcore-1.1\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - netstandard-1.0\n  - netstandard-1.1\n  - netstandard-1.2\n  - netstandard-1.3\n  - netstandard-1.4\n  - netstandard-1.5\n  - netstandard-1.6\n  - netstandard-2.0\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  monikers:\n  - netcore-1.0\n  - netcore-1.1\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - netstandard-1.0\n  - netstandard-1.1\n  - netstandard-1.2\n  - netstandard-1.3\n  - netstandard-1.4\n  - netstandard-1.5\n  - netstandard-1.6\n  - netstandard-2.0\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System/DateTimeOffset.xml\n  ms.technology:\n  - dotnet-standard\n  author: rpetrusha\n  ms.author: ronpet\n  manager: wpickett\n- uid: System.DateTimeOffset.AddMonths(System.Int32)\n  commentId: M:System.DateTimeOffset.AddMonths(System.Int32)\n  id: AddMonths(System.Int32)\n  parent: System.DateTimeOffset\n  langs:\n  - csharp\n  name: AddMonths(Int32)\n  nameWithType: DateTimeOffset.AddMonths(Int32)\n  fullName: DateTimeOffset.AddMonths(Int32)\n  type: Method\n  assemblies:\n  - System.Runtime\n  - mscorlib\n  - netstandard\n  namespace: System\n  summary: Returns a new <xref href=\"System.DateTimeOffset\"></xref> object that adds a specified number of months to the value of this instance.\n  remarks: \"Unlike most of the other methods that add a single time interval unit (such as minutes or days) to a date and time value, <xref:System.DateTimeOffset.AddMonths%2A> does not enable you to add fractional parts of a month. To add a time that consists of other time units in addition to months to a <xref:System.DateTimeOffset> object, use the <xref:System.DateTimeOffset.Add%2A> method.  \\n  \\n> [!NOTE]\\n>  This method returns a new <xref:System.DateTimeOffset> object. It does not modify the value of the current object by adding `months` to its date and time.\"\n  example:\n  - \"The following example uses the <xref:System.DateTimeOffset.AddMonths%2A> method to display the start date of each quarter of the year 2007.  \\n  \\n [!code-csharp[System.DateTimeOffset.Methods#4](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.DateTimeOffset.Methods/cs/Methods.cs#4)]\\n [!code-vb[System.DateTimeOffset.Methods#4](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.DateTimeOffset.Methods/vb/Methods.vb#4)]\"\n  syntax:\n    content: public DateTimeOffset AddMonths (int months);\n    parameters:\n    - id: months\n      type: System.Int32\n      description: A number of whole months. The number can be negative or positive.\n    return:\n      type: System.DateTimeOffset\n      description: An object whose value is the sum of the date and time represented by the current <xref href=\"System.DateTimeOffset\"></xref> object and the number of months represented by <code>months</code>.\n  overload: System.DateTimeOffset.AddMonths*\n  exceptions:\n  - type: System.ArgumentOutOfRangeException\n    commentId: T:System.ArgumentOutOfRangeException\n    description: \"The resulting <xref href=\\\"System.DateTimeOffset\\\"></xref> value is less than <xref href=\\\"System.DateTimeOffset.MinValue\\\"></xref>.  \\n  \\n -or-  \\n  \\n The resulting <xref href=\\\"System.DateTimeOffset\\\"></xref> value is greater than <xref href=\\\"System.DateTimeOffset.MaxValue\\\"></xref>.\"\n  version:\n  - netcore-1.0\n  - netcore-1.1\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - netstandard-1.0\n  - netstandard-1.1\n  - netstandard-1.2\n  - netstandard-1.3\n  - netstandard-1.4\n  - netstandard-1.5\n  - netstandard-1.6\n  - netstandard-2.0\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  monikers:\n  - netcore-1.0\n  - netcore-1.1\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - netstandard-1.0\n  - netstandard-1.1\n  - netstandard-1.2\n  - netstandard-1.3\n  - netstandard-1.4\n  - netstandard-1.5\n  - netstandard-1.6\n  - netstandard-2.0\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System/DateTimeOffset.xml\n  ms.technology:\n  - dotnet-standard\n  author: rpetrusha\n  ms.author: ronpet\n  manager: wpickett\n- uid: System.DateTimeOffset.AddSeconds(System.Double)\n  commentId: M:System.DateTimeOffset.AddSeconds(System.Double)\n  id: AddSeconds(System.Double)\n  parent: System.DateTimeOffset\n  langs:\n  - csharp\n  name: AddSeconds(Double)\n  nameWithType: DateTimeOffset.AddSeconds(Double)\n  fullName: DateTimeOffset.AddSeconds(Double)\n  type: Method\n  assemblies:\n  - System.Runtime\n  - mscorlib\n  - netstandard\n  namespace: System\n  summary: Returns a new <xref href=\"System.DateTimeOffset\"></xref> object that adds a specified number of whole and fractional seconds to the value of this instance.\n  remarks: \"The fractional part of the `seconds` parameter is the fractional part of a second. The value of fractional parts of a second are shown in the following table.  \\n  \\n|Second value|Equivalent|  \\n|------------------|----------------|  \\n|.1 second|100 milliseconds|  \\n|.01 second|10 milliseconds|  \\n|.001 second|1 millisecond|  \\n  \\n The `seconds` parameter is rounded to the nearest millisecond.  \\n  \\n> [!NOTE]\\n>  This method returns a new <xref:System.DateTimeOffset> object. It does not modify the value of the current object by adding `minutes` to its date and time.  \\n  \\n Because a <xref:System.DateTimeOffset> object does not represent the date and time in a specific time zone, the <xref:System.DateTimeOffset.AddSeconds%2A> method does not consider a particular time zone's adjustment rules when it performs date and time arithmetic.\"\n  syntax:\n    content: public DateTimeOffset AddSeconds (double seconds);\n    parameters:\n    - id: seconds\n      type: System.Double\n      description: A number of whole and fractional seconds. The number can be negative or positive.\n    return:\n      type: System.DateTimeOffset\n      description: An object whose value is the sum of the date and time represented by the current <xref href=\"System.DateTimeOffset\"></xref> object and the number of seconds represented by <code>seconds</code>.\n  overload: System.DateTimeOffset.AddSeconds*\n  exceptions:\n  - type: System.ArgumentOutOfRangeException\n    commentId: T:System.ArgumentOutOfRangeException\n    description: \"The resulting <xref href=\\\"System.DateTimeOffset\\\"></xref> value is less than <xref href=\\\"System.DateTimeOffset.MinValue\\\"></xref>.  \\n  \\n -or-  \\n  \\n The resulting <xref href=\\\"System.DateTimeOffset\\\"></xref> value is greater than <xref href=\\\"System.DateTimeOffset.MaxValue\\\"></xref>.\"\n  version:\n  - netcore-1.0\n  - netcore-1.1\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - netstandard-1.0\n  - netstandard-1.1\n  - netstandard-1.2\n  - netstandard-1.3\n  - netstandard-1.4\n  - netstandard-1.5\n  - netstandard-1.6\n  - netstandard-2.0\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  monikers:\n  - netcore-1.0\n  - netcore-1.1\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - netstandard-1.0\n  - netstandard-1.1\n  - netstandard-1.2\n  - netstandard-1.3\n  - netstandard-1.4\n  - netstandard-1.5\n  - netstandard-1.6\n  - netstandard-2.0\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System/DateTimeOffset.xml\n  ms.technology:\n  - dotnet-standard\n  author: rpetrusha\n  ms.author: ronpet\n  manager: wpickett\n- uid: System.DateTimeOffset.AddTicks(System.Int64)\n  commentId: M:System.DateTimeOffset.AddTicks(System.Int64)\n  id: AddTicks(System.Int64)\n  parent: System.DateTimeOffset\n  langs:\n  - csharp\n  name: AddTicks(Int64)\n  nameWithType: DateTimeOffset.AddTicks(Int64)\n  fullName: DateTimeOffset.AddTicks(Int64)\n  type: Method\n  assemblies:\n  - System.Runtime\n  - mscorlib\n  - netstandard\n  namespace: System\n  summary: Returns a new <xref href=\"System.DateTimeOffset\"></xref> object that adds a specified number of ticks to the value of this instance.\n  remarks: \"A tick represents 100 nanoseconds, or one-ten millionth of a second. Because a tick is a very small and precise time interval, any larger time unit can be expressed as a number of ticks without a loss of precision.  \\n  \\n> [!NOTE]\\n>  This method returns a new <xref:System.DateTimeOffset> object. It does not modify the value of the current object by adding `minutes` to its date and time.  \\n  \\n The following table lists the number of ticks in a particular time interval.  \\n  \\n|Time interval|Number of ticks|  \\n|-------------------|---------------------|  \\n|Second|10,000,000|  \\n|Minute|600,000,000|  \\n|Hour|36,000,000,000|  \\n|Day|864,000,000,000|  \\n|Week|6,048,000,000,000|  \\n|Month|Depends on number of days in the month.|  \\n|Non-leap year|315,360,000,000,000|  \\n|Leap year|316,224,000,000,000|  \\n  \\n Because a <xref:System.DateTimeOffset> object does not represent the date and time in a specific time zone, the <xref:System.DateTimeOffset.AddTicks%2A> method does not consider a particular time zone's adjustment rules when it performs date and time arithmetic.\"\n  syntax:\n    content: public DateTimeOffset AddTicks (long ticks);\n    parameters:\n    - id: ticks\n      type: System.Int64\n      description: A number of 100-nanosecond ticks. The number can be negative or positive.\n    return:\n      type: System.DateTimeOffset\n      description: An object whose value is the sum of the date and time represented by the current <xref href=\"System.DateTimeOffset\"></xref> object and the number of ticks represented by <code>ticks</code>.\n  overload: System.DateTimeOffset.AddTicks*\n  exceptions:\n  - type: System.ArgumentOutOfRangeException\n    commentId: T:System.ArgumentOutOfRangeException\n    description: \"The resulting <xref href=\\\"System.DateTimeOffset\\\"></xref> value is less than <xref href=\\\"System.DateTimeOffset.MinValue\\\"></xref>.  \\n  \\n -or-  \\n  \\n The resulting <xref href=\\\"System.DateTimeOffset\\\"></xref> value is greater than <xref href=\\\"System.DateTimeOffset.MaxValue\\\"></xref>.\"\n  version:\n  - netcore-1.0\n  - netcore-1.1\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - netstandard-1.0\n  - netstandard-1.1\n  - netstandard-1.2\n  - netstandard-1.3\n  - netstandard-1.4\n  - netstandard-1.5\n  - netstandard-1.6\n  - netstandard-2.0\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  monikers:\n  - netcore-1.0\n  - netcore-1.1\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - netstandard-1.0\n  - netstandard-1.1\n  - netstandard-1.2\n  - netstandard-1.3\n  - netstandard-1.4\n  - netstandard-1.5\n  - netstandard-1.6\n  - netstandard-2.0\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System/DateTimeOffset.xml\n  ms.technology:\n  - dotnet-standard\n  author: rpetrusha\n  ms.author: ronpet\n  manager: wpickett\n- uid: System.DateTimeOffset.AddYears(System.Int32)\n  commentId: M:System.DateTimeOffset.AddYears(System.Int32)\n  id: AddYears(System.Int32)\n  parent: System.DateTimeOffset\n  langs:\n  - csharp\n  name: AddYears(Int32)\n  nameWithType: DateTimeOffset.AddYears(Int32)\n  fullName: DateTimeOffset.AddYears(Int32)\n  type: Method\n  assemblies:\n  - System.Runtime\n  - mscorlib\n  - netstandard\n  namespace: System\n  summary: Returns a new <xref href=\"System.DateTimeOffset\"></xref> object that adds a specified number of years to the value of this instance.\n  remarks: \"Unlike most of the other methods that add a single time interval unit (such as minutes or days) to a date and time value, <xref:System.DateTimeOffset.AddYears%2A> does not enable you to add fractional parts of a year. To add a time that consists of other time units in addition to years to a <xref:System.DateTimeOffset> object, use the <xref:System.DateTimeOffset.Add%2A> method.  \\n  \\n> [!NOTE]\\n>  This method returns a new <xref:System.DateTimeOffset> object. It does not modify the value of the current object by adding `months` to its date and time.\"\n  example:\n  - \"In the United States, driver's licenses cannot be issued to persons under 16 years of age. The following example displays the latest possible date on which a person must be born in order to legally be issued a driver's license.  \\n  \\n [!code-csharp[System.DateTimeOffset.Methods#6](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.DateTimeOffset.Methods/cs/Methods.cs#6)]\\n [!code-vb[System.DateTimeOffset.Methods#6](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.DateTimeOffset.Methods/vb/Methods.vb#6)]\"\n  syntax:\n    content: public DateTimeOffset AddYears (int years);\n    parameters:\n    - id: years\n      type: System.Int32\n      description: A number of years. The number can be negative or positive.\n    return:\n      type: System.DateTimeOffset\n      description: An object whose value is the sum of the date and time represented by the current <xref href=\"System.DateTimeOffset\"></xref> object and the number of years represented by <code>years</code>.\n  overload: System.DateTimeOffset.AddYears*\n  exceptions:\n  - type: System.ArgumentOutOfRangeException\n    commentId: T:System.ArgumentOutOfRangeException\n    description: \"The resulting <xref href=\\\"System.DateTimeOffset\\\"></xref> value is less than <xref href=\\\"System.DateTimeOffset.MinValue\\\"></xref>.  \\n  \\n -or-  \\n  \\n The resulting <xref href=\\\"System.DateTimeOffset\\\"></xref> value is greater than <xref href=\\\"System.DateTimeOffset.MaxValue\\\"></xref>.\"\n  version:\n  - netcore-1.0\n  - netcore-1.1\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - netstandard-1.0\n  - netstandard-1.1\n  - netstandard-1.2\n  - netstandard-1.3\n  - netstandard-1.4\n  - netstandard-1.5\n  - netstandard-1.6\n  - netstandard-2.0\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  monikers:\n  - netcore-1.0\n  - netcore-1.1\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - netstandard-1.0\n  - netstandard-1.1\n  - netstandard-1.2\n  - netstandard-1.3\n  - netstandard-1.4\n  - netstandard-1.5\n  - netstandard-1.6\n  - netstandard-2.0\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System/DateTimeOffset.xml\n  ms.technology:\n  - dotnet-standard\n  author: rpetrusha\n  ms.author: ronpet\n  manager: wpickett\n- uid: System.DateTimeOffset.Compare(System.DateTimeOffset,System.DateTimeOffset)\n  commentId: M:System.DateTimeOffset.Compare(System.DateTimeOffset,System.DateTimeOffset)\n  id: Compare(System.DateTimeOffset,System.DateTimeOffset)\n  parent: System.DateTimeOffset\n  langs:\n  - csharp\n  name: Compare(DateTimeOffset, DateTimeOffset)\n  nameWithType: DateTimeOffset.Compare(DateTimeOffset, DateTimeOffset)\n  fullName: DateTimeOffset.Compare(DateTimeOffset, DateTimeOffset)\n  type: Method\n  assemblies:\n  - System.Runtime\n  - mscorlib\n  - netstandard\n  namespace: System\n  summary: Compares two <xref href=\"System.DateTimeOffset\"></xref> objects and indicates whether the first is earlier than the second, equal to the second, or later than the second.\n  remarks: \"In performing the comparison, the method converts both the `first` and the `second` parameters to Coordinated Universal Time (UTC) before it performs the comparison. The method is equivalent to the following:  \\n  \\n [!code-csharp[System.DateTimeOffset.Syntax#1](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.DateTimeOffset.Syntax/cs/Syntax.cs#1)]\\n [!code-vb[System.DateTimeOffset.Syntax#1](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.DateTimeOffset.Syntax/vb/Syntax.vb#1)]  \\n  \\n In other words, the <xref:System.DateTimeOffset.Compare%2A> method determines whether two <xref:System.DateTimeOffset> objects represent a single point in time. It directly compares neither dates and times nor offsets.\"\n  example:\n  - \"The following example illustrates calls to the <xref:System.DateTimeOffset.Compare%2A> method to compare <xref:System.DateTimeOffset> objects.  \\n  \\n [!code-csharp[System.DateTimeOffset.Methods#7](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.DateTimeOffset.Methods/cs/Methods2.cs#7)]\\n [!code-vb[System.DateTimeOffset.Methods#7](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.DateTimeOffset.Methods/vb/Methods2.vb#7)]\"\n  syntax:\n    content: public static int Compare (DateTimeOffset first, DateTimeOffset second);\n    parameters:\n    - id: first\n      type: System.DateTimeOffset\n      description: The first object to compare.\n    - id: second\n      type: System.DateTimeOffset\n      description: The second object to compare.\n    return:\n      type: System.Int32\n      description: \"A signed integer that indicates whether the value of the <code>first</code> parameter is earlier than, later than, or the same time as the value of the <code>second</code> parameter, as the following table shows.  \\n  \\n <table><thead><tr><th> Return value  \\n  \\n </th><th> Meaning  \\n  \\n </th></tr></thead><tbody><tr><td> Less than zero  \\n  \\n </td><td><code>first</code> is earlier than <code>second</code>.  \\n  \\n </td></tr><tr><td> Zero  \\n  \\n </td><td><code>first</code> is equal to <code>second</code>.  \\n  \\n </td></tr><tr><td> Greater than zero  \\n  \\n </td><td><code>first</code> is later than <code>second</code>.  \\n  \\n </td></tr></tbody></table>\"\n  overload: System.DateTimeOffset.Compare*\n  exceptions: []\n  version:\n  - netcore-1.0\n  - netcore-1.1\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - netstandard-1.0\n  - netstandard-1.1\n  - netstandard-1.2\n  - netstandard-1.3\n  - netstandard-1.4\n  - netstandard-1.5\n  - netstandard-1.6\n  - netstandard-2.0\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  monikers:\n  - netcore-1.0\n  - netcore-1.1\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - netstandard-1.0\n  - netstandard-1.1\n  - netstandard-1.2\n  - netstandard-1.3\n  - netstandard-1.4\n  - netstandard-1.5\n  - netstandard-1.6\n  - netstandard-2.0\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System/DateTimeOffset.xml\n  ms.technology:\n  - dotnet-standard\n  author: rpetrusha\n  ms.author: ronpet\n  manager: wpickett\n- uid: System.DateTimeOffset.CompareTo(System.DateTimeOffset)\n  commentId: M:System.DateTimeOffset.CompareTo(System.DateTimeOffset)\n  id: CompareTo(System.DateTimeOffset)\n  parent: System.DateTimeOffset\n  langs:\n  - csharp\n  name: CompareTo(DateTimeOffset)\n  nameWithType: DateTimeOffset.CompareTo(DateTimeOffset)\n  fullName: DateTimeOffset.CompareTo(DateTimeOffset)\n  type: Method\n  assemblies:\n  - System.Runtime\n  - mscorlib\n  - netstandard\n  namespace: System\n  summary: Compares the current <xref href=\"System.DateTimeOffset\"></xref> object to a specified <xref href=\"System.DateTimeOffset\"></xref> object and indicates whether the current object is earlier than, the same as, or later than the second <xref href=\"System.DateTimeOffset\"></xref> object.\n  remarks: This method compares <xref:System.DateTimeOffset> objects by comparing their <xref:System.DateTimeOffset.UtcDateTime%2A> values; that is, it determines whether the two objects represent a single point in time, and indicates whether the current object is earlier than, later than, or the same as the `other` parameter.\n  example:\n  - \"The following example illustrates calls to the <xref:System.DateTimeOffset.CompareTo%2A> method to compare <xref:System.DateTimeOffset> objects.  \\n  \\n [!code-csharp[System.DateTimeOffset.Methods#8](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.DateTimeOffset.Methods/cs/Methods3.cs#8)]\\n [!code-vb[System.DateTimeOffset.Methods#8](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.DateTimeOffset.Methods/vb/Methods3.vb#8)]\"\n  syntax:\n    content: public int CompareTo (DateTimeOffset other);\n    parameters:\n    - id: other\n      type: System.DateTimeOffset\n      description: An object to compare with the current <xref href=\"System.DateTimeOffset\"></xref> object.\n    return:\n      type: System.Int32\n      description: \"A signed integer that indicates the relationship between the current <xref href=\\\"System.DateTimeOffset\\\"></xref> object and <code>other</code>, as the following table shows.  \\n  \\n <table><thead><tr><th> Return Value  \\n  \\n </th><th> Description  \\n  \\n </th></tr></thead><tbody><tr><td> Less than zero  \\n  \\n </td><td> The current <xref href=\\\"System.DateTimeOffset\\\"></xref> object is earlier than <code>other</code>.  \\n  \\n </td></tr><tr><td> Zero  \\n  \\n </td><td> The current <xref href=\\\"System.DateTimeOffset\\\"></xref> object is the same as <code>other</code>.  \\n  \\n </td></tr><tr><td> Greater than zero.  \\n  \\n </td><td> The current <xref href=\\\"System.DateTimeOffset\\\"></xref> object is later than <code>other</code>.  \\n  \\n </td></tr></tbody></table>\"\n  overload: System.DateTimeOffset.CompareTo*\n  exceptions: []\n  version:\n  - netcore-1.0\n  - netcore-1.1\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - netstandard-1.0\n  - netstandard-1.1\n  - netstandard-1.2\n  - netstandard-1.3\n  - netstandard-1.4\n  - netstandard-1.5\n  - netstandard-1.6\n  - netstandard-2.0\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  monikers:\n  - netcore-1.0\n  - netcore-1.1\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - netstandard-1.0\n  - netstandard-1.1\n  - netstandard-1.2\n  - netstandard-1.3\n  - netstandard-1.4\n  - netstandard-1.5\n  - netstandard-1.6\n  - netstandard-2.0\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System/DateTimeOffset.xml\n  ms.technology:\n  - dotnet-standard\n  author: rpetrusha\n  ms.author: ronpet\n  manager: wpickett\n- uid: System.DateTimeOffset.Date\n  commentId: P:System.DateTimeOffset.Date\n  id: Date\n  parent: System.DateTimeOffset\n  langs:\n  - csharp\n  name: Date\n  nameWithType: DateTimeOffset.Date\n  fullName: DateTimeOffset.Date\n  type: Property\n  assemblies:\n  - System.Runtime\n  - mscorlib\n  - netstandard\n  namespace: System\n  summary: Gets a <xref href=\"System.DateTime\"></xref> value that represents the date component of the current <xref href=\"System.DateTimeOffset\"></xref> object.\n  remarks: \"This property removes any significant part of the time component from a <xref:System.DateTimeOffset> object and returns only its significant date component. For example, if the <xref:System.DateTimeOffset> object has a date and time value of \\\"1/12/07 4:01pm +7:30\\\", the property returns a <xref:System.DateTime> value of \\\"1/12/07 12:00:00 AM\\\". The <xref:System.DateTime> value can then be displayed by using any of the standard or custom format specifiers that display dates only. (See the Example section for an illustration.)  \\n  \\n The value of the <xref:System.DateTime.Kind%2A?displayProperty=fullName> property of the returned <xref:System.DateTime> object is always <xref:System.DateTimeKind?displayProperty=fullName>. It is not affected by the value of the <xref:System.DateTimeOffset.Offset%2A> property.  \\n  \\n To display a date without its time component, you can also use the \\\"D\\\" or \\\"d\\\" format specifiers; for an illustration, see the Example section.\"\n  example:\n  - \"The following example retrieves the value of the <xref:System.DateTimeOffset.Date%2A> property for a specific date. It then displays that value to the console using some standard and custom date-only format specifiers.  \\n  \\n [!code-csharp[System.DateTimeOffset.Properties#1](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.DateTimeOffset.Properties/cs/Properties.cs#1)]\\n [!code-vb[System.DateTimeOffset.Properties#1](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.DateTimeOffset.Properties/vb/Properties.vb#1)]\"\n  syntax:\n    content: public DateTime Date { get; }\n    return:\n      type: System.DateTime\n      description: A <xref href=\"System.DateTime\"></xref> value that represents the date component of the current <xref href=\"System.DateTimeOffset\"></xref> object.\n  overload: System.DateTimeOffset.Date*\n  exceptions: []\n  version:\n  - netcore-1.0\n  - netcore-1.1\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - netstandard-1.0\n  - netstandard-1.1\n  - netstandard-1.2\n  - netstandard-1.3\n  - netstandard-1.4\n  - netstandard-1.5\n  - netstandard-1.6\n  - netstandard-2.0\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  monikers:\n  - netcore-1.0\n  - netcore-1.1\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - netstandard-1.0\n  - netstandard-1.1\n  - netstandard-1.2\n  - netstandard-1.3\n  - netstandard-1.4\n  - netstandard-1.5\n  - netstandard-1.6\n  - netstandard-2.0\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System/DateTimeOffset.xml\n  ms.technology:\n  - dotnet-standard\n  author: rpetrusha\n  ms.author: ronpet\n  manager: wpickett\n- uid: System.DateTimeOffset.DateTime\n  commentId: P:System.DateTimeOffset.DateTime\n  id: DateTime\n  parent: System.DateTimeOffset\n  langs:\n  - csharp\n  name: DateTime\n  nameWithType: DateTimeOffset.DateTime\n  fullName: DateTimeOffset.DateTime\n  type: Property\n  assemblies:\n  - System.Runtime\n  - mscorlib\n  - netstandard\n  namespace: System\n  summary: Gets a <xref href=\"System.DateTime\"></xref> value that represents the date and time of the current <xref href=\"System.DateTimeOffset\"></xref> object.\n  remarks: \"The <xref:System.DateTimeOffset.DateTime%2A> property is not affected by the value of the <xref:System.DateTimeOffset.Offset%2A> property.  \\n  \\n This property returns both the date and the time component of a <xref:System.DateTimeOffset> object, which makes it useful for performing <xref:System.DateTimeOffset> to <xref:System.DateTime> conversion. For example, if the <xref:System.DateTimeOffset> object has a date and time value of \\\"1/12/07 4:01pm + 7:30\\\", the property returns a date of \\\"1/12/07 4:01pm\\\".  \\n  \\n The value of the <xref:System.DateTime.Kind%2A?displayProperty=fullName> property of the returned <xref:System.DateTime> object is <xref:System.DateTimeKind?displayProperty=fullName>.\"\n  example:\n  - \"The following example illustrates the use of the <xref:System.DateTimeOffset.DateTime%2A> property to convert the time returned by the <xref:System.DateTimeOffset.Now%2A> and <xref:System.DateTimeOffset.UtcNow%2A> properties to <xref:System.DateTime> values.  \\n  \\n [!code-csharp[System.DateTimeOffset.Properties#2](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.DateTimeOffset.Properties/cs/Properties.cs#2)]\\n [!code-vb[System.DateTimeOffset.Properties#2](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.DateTimeOffset.Properties/vb/Properties.vb#2)]\"\n  syntax:\n    content: public DateTime DateTime { get; }\n    return:\n      type: System.DateTime\n      description: The date and time of the current <xref href=\"System.DateTimeOffset\"></xref> object.\n  overload: System.DateTimeOffset.DateTime*\n  exceptions: []\n  version:\n  - netcore-1.0\n  - netcore-1.1\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - netstandard-1.0\n  - netstandard-1.1\n  - netstandard-1.2\n  - netstandard-1.3\n  - netstandard-1.4\n  - netstandard-1.5\n  - netstandard-1.6\n  - netstandard-2.0\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  monikers:\n  - netcore-1.0\n  - netcore-1.1\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - netstandard-1.0\n  - netstandard-1.1\n  - netstandard-1.2\n  - netstandard-1.3\n  - netstandard-1.4\n  - netstandard-1.5\n  - netstandard-1.6\n  - netstandard-2.0\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System/DateTimeOffset.xml\n  ms.technology:\n  - dotnet-standard\n  author: rpetrusha\n  ms.author: ronpet\n  manager: wpickett\n- uid: System.DateTimeOffset.Day\n  commentId: P:System.DateTimeOffset.Day\n  id: Day\n  parent: System.DateTimeOffset\n  langs:\n  - csharp\n  name: Day\n  nameWithType: DateTimeOffset.Day\n  fullName: DateTimeOffset.Day\n  type: Property\n  assemblies:\n  - System.Runtime\n  - mscorlib\n  - netstandard\n  namespace: System\n  summary: Gets the day of the month represented by the current <xref href=\"System.DateTimeOffset\"></xref> object.\n  remarks: \"The <xref:System.DateTimeOffset.Day%2A> property is not affected by the value of the <xref:System.DateTimeOffset.Offset%2A> property.  \\n  \\n You can also create a string representation of a <xref:System.DateTimeOffset> object's day component by calling the <xref:System.DateTimeOffset.ToString%2A> method with the \\\"d\\\" or \\\"dd\\\" custom format specifiers.\"\n  example:\n  - \"The following example displays the day component of a <xref:System.DateTimeOffset> object in three different ways:  \\n  \\n-   By retrieving the value of the <xref:System.DateTimeOffset.Day%2A> property.  \\n  \\n-   By calling the <xref:System.DateTimeOffset.ToString%28System.String%29> method with the \\\"d\\\" format specifier.  \\n  \\n-   By calling the <xref:System.DateTimeOffset.ToString%28System.String%29> method with the \\\"dd\\\" format specifier.  \\n  \\n [!code-csharp[System.DateTimeOffset.Properties#10](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.DateTimeOffset.Properties/cs/Properties.cs#10)]\\n [!code-vb[System.DateTimeOffset.Properties#10](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.DateTimeOffset.Properties/vb/Properties.vb#10)]\"\n  syntax:\n    content: public int Day { get; }\n    return:\n      type: System.Int32\n      description: The day component of the current <xref href=\"System.DateTimeOffset\"></xref> object, expressed as a value between 1 and 31.\n  overload: System.DateTimeOffset.Day*\n  exceptions: []\n  version:\n  - netcore-1.0\n  - netcore-1.1\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - netstandard-1.0\n  - netstandard-1.1\n  - netstandard-1.2\n  - netstandard-1.3\n  - netstandard-1.4\n  - netstandard-1.5\n  - netstandard-1.6\n  - netstandard-2.0\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  monikers:\n  - netcore-1.0\n  - netcore-1.1\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - netstandard-1.0\n  - netstandard-1.1\n  - netstandard-1.2\n  - netstandard-1.3\n  - netstandard-1.4\n  - netstandard-1.5\n  - netstandard-1.6\n  - netstandard-2.0\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System/DateTimeOffset.xml\n  ms.technology:\n  - dotnet-standard\n  author: rpetrusha\n  ms.author: ronpet\n  manager: wpickett\n- uid: System.DateTimeOffset.DayOfWeek\n  commentId: P:System.DateTimeOffset.DayOfWeek\n  id: DayOfWeek\n  parent: System.DateTimeOffset\n  langs:\n  - csharp\n  name: DayOfWeek\n  nameWithType: DateTimeOffset.DayOfWeek\n  fullName: DateTimeOffset.DayOfWeek\n  type: Property\n  assemblies:\n  - System.Runtime\n  - mscorlib\n  - netstandard\n  namespace: System\n  summary: Gets the day of the week represented by the current <xref href=\"System.DateTimeOffset\"></xref> object.\n  remarks: \"The value of the constants in the <xref:System.DayOfWeek> enumeration ranges from <xref:System.DayOfWeek?displayProperty=fullName> to <xref:System.DayOfWeek?displayProperty=fullName>. If cast to an integer, its value ranges from zero (which indicates <xref:System.DayOfWeek?displayProperty=fullName>) to six (which indicates <xref:System.DayOfWeek?displayProperty=fullName>).  \\n  \\n You can also display the weekday name of a particular date by using the \\\"D\\\" format specifier or the \\\"dddd\\\" custom format specifier. For example:  \\n  \\n [!code-csharp[System.DateTimeOffset.Properties#4](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.DateTimeOffset.Properties/cs/Properties.cs#4)]\\n [!code-vb[System.DateTimeOffset.Properties#4](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.DateTimeOffset.Properties/vb/Properties.vb#4)]  \\n  \\n Note that the string returned by calling the `ToString` method of the <xref:System.DayOfWeek> enumeration member that is returned by this property is not localized. To extract a string that contains the weekday name of the current culture or of a specific culture, call the <xref:System.DateTimeOffset.ToString%2A> method with the \\\"dddd\\\" custom format specifier. For example, the following code displays the weekday name for a date using the `fr-fr` culture.  \\n  \\n [!code-csharp[System.DateTimeOffset.Properties#5](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.DateTimeOffset.Properties/cs/Properties.cs#5)]\\n [!code-vb[System.DateTimeOffset.Properties#5](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.DateTimeOffset.Properties/vb/Properties.vb#5)]\"\n  example:\n  - \"The following example displays the weekday name of the first day of each month of the year 2008.  \\n  \\n [!code-csharp[System.DateTimeOffset.Properties#3](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.DateTimeOffset.Properties/cs/Properties.cs#3)]\\n [!code-vb[System.DateTimeOffset.Properties#3](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.DateTimeOffset.Properties/vb/Properties.vb#3)]\"\n  syntax:\n    content: public DayOfWeek DayOfWeek { get; }\n    return:\n      type: System.DayOfWeek\n      description: One of the enumeration values that indicates the day of the week of the current <xref href=\"System.DateTimeOffset\"></xref> object.\n  overload: System.DateTimeOffset.DayOfWeek*\n  exceptions: []\n  version:\n  - netcore-1.0\n  - netcore-1.1\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - netstandard-1.0\n  - netstandard-1.1\n  - netstandard-1.2\n  - netstandard-1.3\n  - netstandard-1.4\n  - netstandard-1.5\n  - netstandard-1.6\n  - netstandard-2.0\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  monikers:\n  - netcore-1.0\n  - netcore-1.1\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - netstandard-1.0\n  - netstandard-1.1\n  - netstandard-1.2\n  - netstandard-1.3\n  - netstandard-1.4\n  - netstandard-1.5\n  - netstandard-1.6\n  - netstandard-2.0\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System/DateTimeOffset.xml\n  ms.technology:\n  - dotnet-standard\n  author: rpetrusha\n  ms.author: ronpet\n  manager: wpickett\n- uid: System.DateTimeOffset.DayOfYear\n  commentId: P:System.DateTimeOffset.DayOfYear\n  id: DayOfYear\n  parent: System.DateTimeOffset\n  langs:\n  - csharp\n  name: DayOfYear\n  nameWithType: DateTimeOffset.DayOfYear\n  fullName: DateTimeOffset.DayOfYear\n  type: Property\n  assemblies:\n  - System.Runtime\n  - mscorlib\n  - netstandard\n  namespace: System\n  summary: Gets the day of the year represented by the current <xref href=\"System.DateTimeOffset\"></xref> object.\n  syntax:\n    content: public int DayOfYear { get; }\n    return:\n      type: System.Int32\n      description: The day of the year of the current <xref href=\"System.DateTimeOffset\"></xref> object, expressed as a value between 1 and 366.\n  overload: System.DateTimeOffset.DayOfYear*\n  exceptions: []\n  version:\n  - netcore-1.0\n  - netcore-1.1\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - netstandard-1.0\n  - netstandard-1.1\n  - netstandard-1.2\n  - netstandard-1.3\n  - netstandard-1.4\n  - netstandard-1.5\n  - netstandard-1.6\n  - netstandard-2.0\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  monikers:\n  - netcore-1.0\n  - netcore-1.1\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - netstandard-1.0\n  - netstandard-1.1\n  - netstandard-1.2\n  - netstandard-1.3\n  - netstandard-1.4\n  - netstandard-1.5\n  - netstandard-1.6\n  - netstandard-2.0\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System/DateTimeOffset.xml\n  ms.technology:\n  - dotnet-standard\n  author: rpetrusha\n  ms.author: ronpet\n  manager: wpickett\n- uid: System.DateTimeOffset.Equals(System.DateTimeOffset)\n  commentId: M:System.DateTimeOffset.Equals(System.DateTimeOffset)\n  id: Equals(System.DateTimeOffset)\n  parent: System.DateTimeOffset\n  langs:\n  - csharp\n  name: Equals(DateTimeOffset)\n  nameWithType: DateTimeOffset.Equals(DateTimeOffset)\n  fullName: DateTimeOffset.Equals(DateTimeOffset)\n  type: Method\n  assemblies:\n  - System.Runtime\n  - mscorlib\n  - netstandard\n  namespace: System\n  summary: Determines whether the current <xref href=\"System.DateTimeOffset\"></xref> object represents the same point in time as a specified <xref href=\"System.DateTimeOffset\"></xref> object.\n  remarks: \"Before it performs the comparison, this method converts the values of both <xref:System.DateTimeOffset> objects to Coordinated Universal Time (UTC). The method is equivalent to the following:  \\n  \\n [!code-csharp[System.DateTimeOffset.Syntax#2](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.DateTimeOffset.Syntax/cs/Syntax.cs#2)]\\n [!code-vb[System.DateTimeOffset.Syntax#2](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.DateTimeOffset.Syntax/vb/Syntax.vb#2)]  \\n  \\n In other words, the <xref:System.DateTimeOffset.Equals%28System.DateTimeOffset%29> method determines whether two <xref:System.DateTimeOffset> objects represent a single point in time. It directly compares neither dates and times nor offsets. To determine whether two <xref:System.DateTimeOffset> objects represent the same time and have the same offset value, use the <xref:System.DateTimeOffset.EqualsExact%2A> method.  \\n  \\n A <xref:System.DateTimeOffset> object that is not `null` is considered to be later (or greater) than one that is `null`.  \\n  \\n This overload of the <xref:System.DateTimeOffset.Equals%28System.DateTimeOffset%29> method implements the <xref:System.IEquatable%601.Equals%2A?displayProperty=fullName> method. It offers slightly better performance than the <xref:System.DateTimeOffset.Equals%28System.Object%29?displayProperty=fullName> overload because the `other` parameter does not have to be converted from an object.\"\n  example:\n  - \"The following example illustrates calls to the <xref:System.DateTimeOffset.Equals%28System.DateTimeOffset%29> method to test <xref:System.DateTimeOffset> objects for equality with the current <xref:System.DateTimeOffset> object.  \\n  \\n [!code-csharp[System.DateTimeOffset.Methods#9](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.DateTimeOffset.Methods/cs/Methods.cs#9)]\\n [!code-vb[System.DateTimeOffset.Methods#9](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.DateTimeOffset.Methods/vb/Methods.vb#9)]\"\n  syntax:\n    content: public bool Equals (DateTimeOffset other);\n    parameters:\n    - id: other\n      type: System.DateTimeOffset\n      description: An object to compare to the current <xref href=\"System.DateTimeOffset\"></xref> object.\n    return:\n      type: System.Boolean\n      description: '`true` if both <xref href=\"System.DateTimeOffset\"></xref> objects have the same <xref href=\"System.DateTimeOffset.UtcDateTime\"></xref> value; otherwise, `false`.'\n  overload: System.DateTimeOffset.Equals*\n  exceptions: []\n  version:\n  - netcore-1.0\n  - netcore-1.1\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - netstandard-1.0\n  - netstandard-1.1\n  - netstandard-1.2\n  - netstandard-1.3\n  - netstandard-1.4\n  - netstandard-1.5\n  - netstandard-1.6\n  - netstandard-2.0\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  monikers:\n  - netcore-1.0\n  - netcore-1.1\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - netstandard-1.0\n  - netstandard-1.1\n  - netstandard-1.2\n  - netstandard-1.3\n  - netstandard-1.4\n  - netstandard-1.5\n  - netstandard-1.6\n  - netstandard-2.0\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System/DateTimeOffset.xml\n  ms.technology:\n  - dotnet-standard\n  author: rpetrusha\n  ms.author: ronpet\n  manager: wpickett\n- uid: System.DateTimeOffset.Equals(System.Object)\n  commentId: M:System.DateTimeOffset.Equals(System.Object)\n  id: Equals(System.Object)\n  parent: System.DateTimeOffset\n  langs:\n  - csharp\n  name: Equals(Object)\n  nameWithType: DateTimeOffset.Equals(Object)\n  fullName: DateTimeOffset.Equals(Object)\n  type: Method\n  assemblies:\n  - System.Runtime\n  - mscorlib\n  - netstandard\n  namespace: System\n  summary: Determines whether a <xref href=\"System.DateTimeOffset\"></xref> object represents the same point in time as a specified object.\n  remarks: \"Before it performs the comparison, this method converts the values of both the current <xref:System.DateTimeOffset> object and the `obj` parameter to Coordinated Universal Time (UTC). The method is equivalent to the following:  \\n  \\n [!code-csharp[System.DateTimeOffset.Syntax#3](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.DateTimeOffset.Syntax/cs/Syntax.cs#3)]\\n [!code-vb[System.DateTimeOffset.Syntax#3](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.DateTimeOffset.Syntax/vb/Syntax.vb#3)]  \\n  \\n In other words, the <xref:System.DateTimeOffset.Equals%28System.Object%29?displayProperty=fullName> method determines whether the current <xref:System.DateTimeOffset> object and a specified object represent a single point in time. It directly compares neither dates and times nor offsets. To determine whether two <xref:System.DateTimeOffset> objects represent the same time and have the same offset value, use the <xref:System.DateTimeOffset.EqualsExact%2A> method.  \\n  \\n If `obj` is `null`, or if the run-time type of `obj` is not <xref:System.DateTimeOffset>, the method returns `false`.\"\n  example:\n  - \"The following example indicates whether the current <xref:System.DateTimeOffset> object is equal to several other <xref:System.DateTimeOffset> objects, as well as to a null reference and a <xref:System.DateTime> object.  \\n  \\n [!code-csharp[System.DateTimeOffset.Methods#10](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.DateTimeOffset.Methods/cs/Methods.cs#10)]\\n [!code-vb[System.DateTimeOffset.Methods#10](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.DateTimeOffset.Methods/vb/Methods.vb#10)]\"\n  syntax:\n    content: public override bool Equals (object obj);\n    parameters:\n    - id: obj\n      type: System.Object\n      description: The object to compare to the current <xref href=\"System.DateTimeOffset\"></xref> object.\n    return:\n      type: System.Boolean\n      description: '`true` if the <code>obj</code> parameter is a <xref href=\"System.DateTimeOffset\"></xref> object and represents the same point in time as the current <xref href=\"System.DateTimeOffset\"></xref> object; otherwise, `false`.'\n  overload: System.DateTimeOffset.Equals*\n  exceptions: []\n  version:\n  - netcore-1.0\n  - netcore-1.1\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - netstandard-1.0\n  - netstandard-1.1\n  - netstandard-1.2\n  - netstandard-1.3\n  - netstandard-1.4\n  - netstandard-1.5\n  - netstandard-1.6\n  - netstandard-2.0\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  monikers:\n  - netcore-1.0\n  - netcore-1.1\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - netstandard-1.0\n  - netstandard-1.1\n  - netstandard-1.2\n  - netstandard-1.3\n  - netstandard-1.4\n  - netstandard-1.5\n  - netstandard-1.6\n  - netstandard-2.0\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System/DateTimeOffset.xml\n  ms.technology:\n  - dotnet-standard\n  author: rpetrusha\n  ms.author: ronpet\n  manager: wpickett\n- uid: System.DateTimeOffset.Equals(System.DateTimeOffset,System.DateTimeOffset)\n  commentId: M:System.DateTimeOffset.Equals(System.DateTimeOffset,System.DateTimeOffset)\n  id: Equals(System.DateTimeOffset,System.DateTimeOffset)\n  parent: System.DateTimeOffset\n  langs:\n  - csharp\n  name: Equals(DateTimeOffset, DateTimeOffset)\n  nameWithType: DateTimeOffset.Equals(DateTimeOffset, DateTimeOffset)\n  fullName: DateTimeOffset.Equals(DateTimeOffset, DateTimeOffset)\n  type: Method\n  assemblies:\n  - System.Runtime\n  - mscorlib\n  - netstandard\n  namespace: System\n  summary: Determines whether two specified <xref href=\"System.DateTimeOffset\"></xref> objects represent the same point in time.\n  remarks: \"Before it performs the comparison, this method converts both <xref:System.DateTimeOffset> objects to Coordinated Universal Time (UTC). The method is equivalent to the following:  \\n  \\n [!code-csharp[System.DateTimeOffset.Syntax#4](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.DateTimeOffset.Syntax/cs/Syntax.cs#4)]\\n [!code-vb[System.DateTimeOffset.Syntax#4](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.DateTimeOffset.Syntax/vb/Syntax.vb#4)]  \\n  \\n In other words, the <xref:System.DateTimeOffset.Equals%28System.DateTimeOffset%2CSystem.DateTimeOffset%29> method determines whether the two <xref:System.DateTimeOffset> objects represent a single point in time. It directly compares neither dates and times nor offsets. To determine whether two <xref:System.DateTimeOffset> objects represent the same time and have the same offset value, use the <xref:System.DateTimeOffset.EqualsExact%2A> method.\"\n  example:\n  - \"The following example illustrates calls to the <xref:System.DateTimeOffset.Equals%28System.DateTimeOffset%2CSystem.DateTimeOffset%29> method to test various pairs of <xref:System.DateTimeOffset> objects for equality.  \\n  \\n [!code-csharp[System.DateTimeOffset.Methods#11](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.DateTimeOffset.Methods/cs/Methods.cs#11)]\\n [!code-vb[System.DateTimeOffset.Methods#11](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.DateTimeOffset.Methods/vb/Methods.vb#11)]\"\n  syntax:\n    content: public static bool Equals (DateTimeOffset first, DateTimeOffset second);\n    parameters:\n    - id: first\n      type: System.DateTimeOffset\n      description: The first object to compare.\n    - id: second\n      type: System.DateTimeOffset\n      description: The second object to compare.\n    return:\n      type: System.Boolean\n      description: '`true` if the two <xref href=\"System.DateTimeOffset\"></xref> objects have the same <xref href=\"System.DateTimeOffset.UtcDateTime\"></xref> value; otherwise, `false`.'\n  overload: System.DateTimeOffset.Equals*\n  exceptions: []\n  version:\n  - netcore-1.0\n  - netcore-1.1\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - netstandard-1.0\n  - netstandard-1.1\n  - netstandard-1.2\n  - netstandard-1.3\n  - netstandard-1.4\n  - netstandard-1.5\n  - netstandard-1.6\n  - netstandard-2.0\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  monikers:\n  - netcore-1.0\n  - netcore-1.1\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - netstandard-1.0\n  - netstandard-1.1\n  - netstandard-1.2\n  - netstandard-1.3\n  - netstandard-1.4\n  - netstandard-1.5\n  - netstandard-1.6\n  - netstandard-2.0\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System/DateTimeOffset.xml\n  ms.technology:\n  - dotnet-standard\n  author: rpetrusha\n  ms.author: ronpet\n  manager: wpickett\n- uid: System.DateTimeOffset.EqualsExact(System.DateTimeOffset)\n  commentId: M:System.DateTimeOffset.EqualsExact(System.DateTimeOffset)\n  id: EqualsExact(System.DateTimeOffset)\n  parent: System.DateTimeOffset\n  langs:\n  - csharp\n  name: EqualsExact(DateTimeOffset)\n  nameWithType: DateTimeOffset.EqualsExact(DateTimeOffset)\n  fullName: DateTimeOffset.EqualsExact(DateTimeOffset)\n  type: Method\n  assemblies:\n  - System.Runtime\n  - mscorlib\n  - netstandard\n  namespace: System\n  summary: Determines whether the current <xref href=\"System.DateTimeOffset\"></xref> object represents the same time and has the same offset as a specified <xref href=\"System.DateTimeOffset\"></xref> object.\n  remarks: \"Because multiple time zones share a single offset, a return value of `true` does not guarantee that the current and the `other` object represent times in the same time zone.  \\n  \\n Unlike the <xref:System.DateTimeOffset.EqualsExact%2A> method, the overloads of the <xref:System.DateTimeOffset.Equals%2A> method determine only whether two <xref:System.DateTimeOffset> values represent a single point in time. They do not indicate that two values have the same date and time as well as the same offset.\"\n  example:\n  - \"The following example illustrates the use of the <xref:System.DateTimeOffset.EqualsExact%2A> method to compare similar <xref:System.DateTimeOffset> objects.  \\n  \\n [!code-csharp[System.DateTimeOffset.Methods#12](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.DateTimeOffset.Methods/cs/Methods.cs#12)]\\n [!code-vb[System.DateTimeOffset.Methods#12](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.DateTimeOffset.Methods/vb/Methods.vb#12)]\"\n  syntax:\n    content: public bool EqualsExact (DateTimeOffset other);\n    parameters:\n    - id: other\n      type: System.DateTimeOffset\n      description: The object to compare to the current <xref href=\"System.DateTimeOffset\"></xref> object.\n    return:\n      type: System.Boolean\n      description: '`true` if the current <xref href=\"System.DateTimeOffset\"></xref> object and <code>other</code> have the same date and time value and the same <xref href=\"System.DateTimeOffset.Offset\"></xref> value; otherwise, `false`.'\n  overload: System.DateTimeOffset.EqualsExact*\n  exceptions: []\n  version:\n  - netcore-1.0\n  - netcore-1.1\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - netstandard-1.0\n  - netstandard-1.1\n  - netstandard-1.2\n  - netstandard-1.3\n  - netstandard-1.4\n  - netstandard-1.5\n  - netstandard-1.6\n  - netstandard-2.0\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  monikers:\n  - netcore-1.0\n  - netcore-1.1\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - netstandard-1.0\n  - netstandard-1.1\n  - netstandard-1.2\n  - netstandard-1.3\n  - netstandard-1.4\n  - netstandard-1.5\n  - netstandard-1.6\n  - netstandard-2.0\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System/DateTimeOffset.xml\n  ms.technology:\n  - dotnet-standard\n  author: rpetrusha\n  ms.author: ronpet\n  manager: wpickett\n- uid: System.DateTimeOffset.FromFileTime(System.Int64)\n  commentId: M:System.DateTimeOffset.FromFileTime(System.Int64)\n  id: FromFileTime(System.Int64)\n  parent: System.DateTimeOffset\n  langs:\n  - csharp\n  name: FromFileTime(Int64)\n  nameWithType: DateTimeOffset.FromFileTime(Int64)\n  fullName: DateTimeOffset.FromFileTime(Int64)\n  type: Method\n  assemblies:\n  - System.Runtime\n  - mscorlib\n  - netstandard\n  namespace: System\n  summary: Converts the specified Windows file time to an equivalent local time.\n  remarks: \"A Windows file time is a 64-bit value that represents the number of 100-nanosecond intervals that have elapsed since 12:00 midnight, January 1, 1601 A.D. (C.E.) Coordinated Universal Time (UTC). Windows uses a file time to record when an application creates, accesses, or writes to a file.  \\n  \\n A Windows file time is directly accessible through the Windows API by calling the `GetFileTime` function, which returns a `FILETIME` structure. The single function parameter is the handle of the file whose file time information is to be retrieved. The file handle is retrieved by calling the `CreateFile` function. The `FILETIME` structure's `dwHighDateTime` member contains the four high-order bytes of the file time, and its `dwLowDateTime` member contains the four low-order bytes. The example that follows illustrates how to retrieve Windows file time values and convert them to <xref:System.DateTimeOffset> values.  \\n  \\n Windows file time values can also be created from <xref:System.DateTime> values by calling the <xref:System.DateTime.ToFileTime%2A?displayProperty=fullName> and <xref:System.DateTime.ToFileTimeUtc%2A?displayProperty=fullName> methods, and from <xref:System.DateTimeOffset> values by calling the <xref:System.DateTimeOffset.ToFileTime%2A?displayProperty=fullName> method.\"\n  example:\n  - \"The following example uses the Windows API to retrieve the Windows file times for the WordPad executable.  \\n  \\n [!code-csharp[System.DateTimeOffset.FromFileTime#1](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.DateTimeOffset.FromFileTime/cs/FileTime.cs#1)]\\n [!code-vb[System.DateTimeOffset.FromFileTime#1](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.DateTimeOffset.FromFileTime/vb/FileTime.vb#1)]\"\n  syntax:\n    content: public static DateTimeOffset FromFileTime (long fileTime);\n    parameters:\n    - id: fileTime\n      type: System.Int64\n      description: A Windows file time, expressed in ticks.\n    return:\n      type: System.DateTimeOffset\n      description: An object that represents the date and time of <code>fileTime</code> with the offset set to the local time offset.\n  overload: System.DateTimeOffset.FromFileTime*\n  exceptions:\n  - type: System.ArgumentOutOfRangeException\n    commentId: T:System.ArgumentOutOfRangeException\n    description: \"<code>filetime</code> is less than zero.  \\n  \\n -or-  \\n  \\n <code>filetime</code> is greater than `DateTimeOffset.MaxValue.Ticks`.\"\n  version:\n  - netcore-1.0\n  - netcore-1.1\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - netstandard-1.0\n  - netstandard-1.1\n  - netstandard-1.2\n  - netstandard-1.3\n  - netstandard-1.4\n  - netstandard-1.5\n  - netstandard-1.6\n  - netstandard-2.0\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  monikers:\n  - netcore-1.0\n  - netcore-1.1\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - netstandard-1.0\n  - netstandard-1.1\n  - netstandard-1.2\n  - netstandard-1.3\n  - netstandard-1.4\n  - netstandard-1.5\n  - netstandard-1.6\n  - netstandard-2.0\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System/DateTimeOffset.xml\n  ms.technology:\n  - dotnet-standard\n  author: rpetrusha\n  ms.author: ronpet\n  manager: wpickett\n- uid: System.DateTimeOffset.FromUnixTimeMilliseconds(System.Int64)\n  commentId: M:System.DateTimeOffset.FromUnixTimeMilliseconds(System.Int64)\n  id: FromUnixTimeMilliseconds(System.Int64)\n  parent: System.DateTimeOffset\n  langs:\n  - csharp\n  name: FromUnixTimeMilliseconds(Int64)\n  nameWithType: DateTimeOffset.FromUnixTimeMilliseconds(Int64)\n  fullName: DateTimeOffset.FromUnixTimeMilliseconds(Int64)\n  type: Method\n  assemblies:\n  - System.Runtime\n  - mscorlib\n  - netstandard\n  namespace: System\n  summary: Converts a Unix time expressed as the number of milliseconds that have elapsed since 1970-01-01T00:00:00Z to a <xref href=\"System.DateTimeOffset\"></xref> value.\n  remarks: The <xref:System.DateTimeOffset.Offset%2A> property value of the returned <xref:System.DateTimeOffset> instance is <xref:System.TimeSpan.Zero?displayProperty=fullName>, which represents Coordinated Universal Time. You can convert it to the time in a specific time zone by calling the <xref:System.TimeZoneInfo.ConvertTime%28System.DateTimeOffset%2CSystem.TimeZoneInfo%29?displayProperty=fullName> method.\n  syntax:\n    content: public static DateTimeOffset FromUnixTimeMilliseconds (long milliseconds);\n    parameters:\n    - id: milliseconds\n      type: System.Int64\n      description: A Unix time, expressed as the number of milliseconds that have elapsed since 1970-01-01T00:00:00Z (January 1, 1970, at 12:00 AM UTC). For Unix times before this date, its value is negative.\n    return:\n      type: System.DateTimeOffset\n      description: A date and time value that represents the same moment in time as the Unix time.\n  overload: System.DateTimeOffset.FromUnixTimeMilliseconds*\n  exceptions:\n  - type: System.ArgumentOutOfRangeException\n    commentId: T:System.ArgumentOutOfRangeException\n    description: \"<code>milliseconds</code> is less than  -62,135,596,800,000.  \\n  \\n -or-  \\n  \\n <code>milliseconds</code> is greater than 253,402,300,799,999.\"\n  version:\n  - netcore-1.0\n  - netcore-1.1\n  - netcore-2.0\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - netstandard-1.3\n  - netstandard-1.4\n  - netstandard-1.5\n  - netstandard-1.6\n  - netstandard-2.0\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  monikers:\n  - netcore-1.0\n  - netcore-1.1\n  - netcore-2.0\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - netstandard-1.3\n  - netstandard-1.4\n  - netstandard-1.5\n  - netstandard-1.6\n  - netstandard-2.0\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System/DateTimeOffset.xml\n  ms.technology:\n  - dotnet-standard\n  author: rpetrusha\n  ms.author: ronpet\n  manager: wpickett\n- uid: System.DateTimeOffset.FromUnixTimeSeconds(System.Int64)\n  commentId: M:System.DateTimeOffset.FromUnixTimeSeconds(System.Int64)\n  id: FromUnixTimeSeconds(System.Int64)\n  parent: System.DateTimeOffset\n  langs:\n  - csharp\n  name: FromUnixTimeSeconds(Int64)\n  nameWithType: DateTimeOffset.FromUnixTimeSeconds(Int64)\n  fullName: DateTimeOffset.FromUnixTimeSeconds(Int64)\n  type: Method\n  assemblies:\n  - System.Runtime\n  - mscorlib\n  - netstandard\n  namespace: System\n  summary: Converts a Unix time expressed as the number of seconds that have elapsed since 1970-01-01T00:00:00Z to a <xref href=\"System.DateTimeOffset\"></xref> value.\n  remarks: The <xref:System.DateTimeOffset.Offset%2A> property value of the returned <xref:System.DateTimeOffset> instance is <xref:System.TimeSpan.Zero?displayProperty=fullName>, which represents Coordinated Universal Time. You can convert it to the time in a specific time zone by calling the <xref:System.TimeZoneInfo.ConvertTime%28System.DateTimeOffset%2CSystem.TimeZoneInfo%29?displayProperty=fullName> method.\n  syntax:\n    content: public static DateTimeOffset FromUnixTimeSeconds (long seconds);\n    parameters:\n    - id: seconds\n      type: System.Int64\n      description: A Unix time, expressed as the number of seconds that have elapsed since 1970-01-01T00:00:00Z (January 1, 1970, at 12:00 AM UTC). For Unix times before this date, its value is negative.\n    return:\n      type: System.DateTimeOffset\n      description: A date and time value that represents the same moment in time as the Unix time.\n  overload: System.DateTimeOffset.FromUnixTimeSeconds*\n  exceptions:\n  - type: System.ArgumentOutOfRangeException\n    commentId: T:System.ArgumentOutOfRangeException\n    description: \"<code>seconds</code> is less than  -62,135,596,800.  \\n  \\n -or-  \\n  \\n <code>seconds</code> is greater than 253,402,300,799.\"\n  version:\n  - netcore-1.0\n  - netcore-1.1\n  - netcore-2.0\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - netstandard-1.3\n  - netstandard-1.4\n  - netstandard-1.5\n  - netstandard-1.6\n  - netstandard-2.0\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  monikers:\n  - netcore-1.0\n  - netcore-1.1\n  - netcore-2.0\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - netstandard-1.3\n  - netstandard-1.4\n  - netstandard-1.5\n  - netstandard-1.6\n  - netstandard-2.0\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System/DateTimeOffset.xml\n  ms.technology:\n  - dotnet-standard\n  author: rpetrusha\n  ms.author: ronpet\n  manager: wpickett\n- uid: System.DateTimeOffset.GetHashCode\n  commentId: M:System.DateTimeOffset.GetHashCode\n  id: GetHashCode\n  parent: System.DateTimeOffset\n  langs:\n  - csharp\n  name: GetHashCode()\n  nameWithType: DateTimeOffset.GetHashCode()\n  fullName: DateTimeOffset.GetHashCode()\n  type: Method\n  assemblies:\n  - System.Runtime\n  - mscorlib\n  - netstandard\n  namespace: System\n  summary: Returns the hash code for the current <xref href=\"System.DateTimeOffset\"></xref> object.\n  syntax:\n    content: public override int GetHashCode ();\n    parameters: []\n    return:\n      type: System.Int32\n      description: A 32-bit signed integer hash code.\n  overload: System.DateTimeOffset.GetHashCode*\n  exceptions: []\n  version:\n  - netcore-1.0\n  - netcore-1.1\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - netstandard-1.0\n  - netstandard-1.1\n  - netstandard-1.2\n  - netstandard-1.3\n  - netstandard-1.4\n  - netstandard-1.5\n  - netstandard-1.6\n  - netstandard-2.0\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  monikers:\n  - netcore-1.0\n  - netcore-1.1\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - netstandard-1.0\n  - netstandard-1.1\n  - netstandard-1.2\n  - netstandard-1.3\n  - netstandard-1.4\n  - netstandard-1.5\n  - netstandard-1.6\n  - netstandard-2.0\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System/DateTimeOffset.xml\n  ms.technology:\n  - dotnet-standard\n  author: rpetrusha\n  ms.author: ronpet\n  manager: wpickett\n- uid: System.DateTimeOffset.Hour\n  commentId: P:System.DateTimeOffset.Hour\n  id: Hour\n  parent: System.DateTimeOffset\n  langs:\n  - csharp\n  name: Hour\n  nameWithType: DateTimeOffset.Hour\n  fullName: DateTimeOffset.Hour\n  type: Property\n  assemblies:\n  - System.Runtime\n  - mscorlib\n  - netstandard\n  namespace: System\n  summary: Gets the hour component of the time represented by the current <xref href=\"System.DateTimeOffset\"></xref> object.\n  remarks: \"The <xref:System.DateTimeOffset.Hour%2A> property is not affected by the value of the <xref:System.DateTimeOffset.Offset%2A> property.  \\n  \\n You can also create a string representation of a <xref:System.DateTimeOffset> object's hour component by calling the <xref:System.DateTimeOffset.ToString%2A> method with the \\\"H\\\", or \\\"HH\\\" custom format specifiers.\"\n  example:\n  - \"The following example displays the hour component of a <xref:System.DateTimeOffset> object in three different ways:  \\n  \\n-   By retrieving the value of the <xref:System.DateTimeOffset.Hour%2A> property.  \\n  \\n-   By calling the <xref:System.DateTimeOffset.ToString%28System.String%29> method with the \\\"H\\\" format specifier.  \\n  \\n-   By calling the <xref:System.DateTimeOffset.ToString%28System.String%29> method with the \\\"HH\\\" format specifier.  \\n  \\n [!code-csharp[System.DateTimeOffset.Properties#6](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.DateTimeOffset.Properties/cs/Properties.cs#6)]\\n [!code-vb[System.DateTimeOffset.Properties#6](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.DateTimeOffset.Properties/vb/Properties.vb#6)]\"\n  syntax:\n    content: public int Hour { get; }\n    return:\n      type: System.Int32\n      description: The hour component of the current <xref href=\"System.DateTimeOffset\"></xref> object. This property uses a 24-hour clock; the value ranges from 0 to 23.\n  overload: System.DateTimeOffset.Hour*\n  exceptions: []\n  version:\n  - netcore-1.0\n  - netcore-1.1\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - netstandard-1.0\n  - netstandard-1.1\n  - netstandard-1.2\n  - netstandard-1.3\n  - netstandard-1.4\n  - netstandard-1.5\n  - netstandard-1.6\n  - netstandard-2.0\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  monikers:\n  - netcore-1.0\n  - netcore-1.1\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - netstandard-1.0\n  - netstandard-1.1\n  - netstandard-1.2\n  - netstandard-1.3\n  - netstandard-1.4\n  - netstandard-1.5\n  - netstandard-1.6\n  - netstandard-2.0\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System/DateTimeOffset.xml\n  ms.technology:\n  - dotnet-standard\n  author: rpetrusha\n  ms.author: ronpet\n  manager: wpickett\n- uid: System.DateTimeOffset.LocalDateTime\n  commentId: P:System.DateTimeOffset.LocalDateTime\n  id: LocalDateTime\n  parent: System.DateTimeOffset\n  langs:\n  - csharp\n  name: LocalDateTime\n  nameWithType: DateTimeOffset.LocalDateTime\n  fullName: DateTimeOffset.LocalDateTime\n  type: Property\n  assemblies:\n  - System.Runtime\n  - mscorlib\n  - netstandard\n  namespace: System\n  summary: Gets a <xref href=\"System.DateTime\"></xref> value that represents the local date and time of the current <xref href=\"System.DateTimeOffset\"></xref> object.\n  remarks: \"If necessary, the <xref:System.DateTimeOffset.LocalDateTime%2A> property converts the current <xref:System.DateTimeOffset> object's date and time to the local system's date and time. The conversion is a two-step operation:  \\n  \\n1.  The property converts the current <xref:System.DateTimeOffset> object's time to Coordinated Universal Time (UTC).  \\n  \\n2.  The property then converts UTC to local time.  \\n  \\n There are no invalid times and ambiguous times are mapped to the local zone's standard time. (However, the conversion can create an anomaly: if a <xref:System.DateTimeOffset> value that is derived from the local computer reflects an ambiguous date and time, that value can be converted to UTC and then back to a local time that differs from the original time.)  The property applies any adjustment rules in the local time zone when it performs this conversion.  \\n  \\n This property returns both the date and the time component of a <xref:System.DateTimeOffset> object, which makes it useful for <xref:System.DateTimeOffset> to <xref:System.DateTime> conversion. In addition to performing any necessary time conversion, this property differs from the <xref:System.DateTimeOffset.DateTime%2A> property by setting the value of the <xref:System.DateTime.Kind%2A> property of the returned <xref:System.DateTime> object to <xref:System.DateTimeKind?displayProperty=fullName>.\"\n  example:\n  - \"The following example illustrates several conversions of <xref:System.DateTimeOffset> values to local times in the U.S. Pacific Standard Time zone. Note that the last three times are all ambiguous; the property maps all of them to a single date and time in the Pacific Standard Time zone.  \\n  \\n [!code-csharp[System.DateTimeOffset.Properties#7](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.DateTimeOffset.Properties/cs/Properties.cs#7)]\\n [!code-vb[System.DateTimeOffset.Properties#7](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.DateTimeOffset.Properties/vb/Properties.vb#7)]\"\n  syntax:\n    content: public DateTime LocalDateTime { get; }\n    return:\n      type: System.DateTime\n      description: The local date and time of the current <xref href=\"System.DateTimeOffset\"></xref> object.\n  overload: System.DateTimeOffset.LocalDateTime*\n  exceptions: []\n  version:\n  - netcore-1.0\n  - netcore-1.1\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - netstandard-1.0\n  - netstandard-1.1\n  - netstandard-1.2\n  - netstandard-1.3\n  - netstandard-1.4\n  - netstandard-1.5\n  - netstandard-1.6\n  - netstandard-2.0\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  monikers:\n  - netcore-1.0\n  - netcore-1.1\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - netstandard-1.0\n  - netstandard-1.1\n  - netstandard-1.2\n  - netstandard-1.3\n  - netstandard-1.4\n  - netstandard-1.5\n  - netstandard-1.6\n  - netstandard-2.0\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System/DateTimeOffset.xml\n  ms.technology:\n  - dotnet-standard\n  author: rpetrusha\n  ms.author: ronpet\n  manager: wpickett\n- uid: System.DateTimeOffset.MaxValue\n  commentId: F:System.DateTimeOffset.MaxValue\n  id: MaxValue\n  parent: System.DateTimeOffset\n  langs:\n  - csharp\n  name: MaxValue\n  nameWithType: DateTimeOffset.MaxValue\n  fullName: DateTimeOffset.MaxValue\n  type: Field\n  assemblies:\n  - System.Runtime\n  - mscorlib\n  - netstandard\n  namespace: System\n  summary: Represents the greatest possible value of <xref href=\"System.DateTimeOffset\"></xref>. This field is read-only.\n  remarks: \"The value of this constant is 12/31/9999 11:59:59 PM +00:00.  \\n  \\n The <xref:System.DateTimeOffset.MaxValue> property is used to determine whether the value of a new <xref:System.DateTimeOffset> object or the <xref:System.DateTimeOffset> value returned by an arithmetic operation is the same as or earlier than this maximum range value. If it is not, the method throws an <xref:System.ArgumentOutOfRangeException>. Any <xref:System.DateTimeOffset> value is converted to Coordinated Universal Time (UTC) before the method compares it with <xref:System.DateTimeOffset.MaxValue>.  This means that a <xref:System.DateTimeOffset> value whose date and time are close to the maximum range, but whose offset is negative, may throw an exception. For example, the value 12/31/9999 11:00 PM -02:00 is out of range because it is one hour later than <xref:System.DateTimeOffset.MaxValue> when it is converted to UTC.  \\n  \\n Some calendars, such as the <xref:System.Globalization.UmAlQuraCalendar>, support an upper date range that is earlier than <xref:System.DateTime.MaxValue>. In these cases, trying to access <xref:System.DateTime.MaxValue> in variable assignments or formatting and parsing operations can throw an <xref:System.ArgumentOutOfRangeException>. Instead of retrieving the value of <xref:System.DateTime.MaxValue?displayProperty=fullName>, you can retrieve the value of the specified culture's latest valid date value from the <xref:System.Globalization.Calendar.MaxSupportedDateTime%2A?displayProperty=fullName> property.\"\n  syntax:\n    content: public static readonly DateTimeOffset MaxValue;\n    return:\n      type: System.DateTimeOffset\n      description: ''\n  exceptions:\n  - type: System.ArgumentOutOfRangeException\n    commentId: T:System.ArgumentOutOfRangeException\n    description: <xref href=\"System.DateTime.MaxValue\"></xref> is outside the range of the current or specified culture's default calendar.\n  version:\n  - netcore-1.0\n  - netcore-1.1\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - netstandard-1.0\n  - netstandard-1.1\n  - netstandard-1.2\n  - netstandard-1.3\n  - netstandard-1.4\n  - netstandard-1.5\n  - netstandard-1.6\n  - netstandard-2.0\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  monikers:\n  - netcore-1.0\n  - netcore-1.1\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - netstandard-1.0\n  - netstandard-1.1\n  - netstandard-1.2\n  - netstandard-1.3\n  - netstandard-1.4\n  - netstandard-1.5\n  - netstandard-1.6\n  - netstandard-2.0\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System/DateTimeOffset.xml\n  ms.technology:\n  - dotnet-standard\n  author: rpetrusha\n  ms.author: ronpet\n  manager: wpickett\n- uid: System.DateTimeOffset.Millisecond\n  commentId: P:System.DateTimeOffset.Millisecond\n  id: Millisecond\n  parent: System.DateTimeOffset\n  langs:\n  - csharp\n  name: Millisecond\n  nameWithType: DateTimeOffset.Millisecond\n  fullName: DateTimeOffset.Millisecond\n  type: Property\n  assemblies:\n  - System.Runtime\n  - mscorlib\n  - netstandard\n  namespace: System\n  summary: Gets the millisecond component of the time represented by the current <xref href=\"System.DateTimeOffset\"></xref> object.\n  remarks: \"You can also create a string representation of a <xref:System.DateTimeOffset> object's millisecond component by calling the <xref:System.DateTimeOffset.ToString%2A> method with the \\\"fff\\\" custom format specifier.  \\n  \\n If you rely on properties such as <xref:System.DateTimeOffset.Now%2A> or <xref:System.DateTimeOffset.UtcNow%2A> to accurately track the number of elapsed milliseconds, the precision of the time's millisecond component depends on the resolution of the system clock. On Windows NT 3.5 and later, and Windows Vista operating systems, the clock's resolution is approximately 10-15 milliseconds.\"\n  example:\n  - \"The following example displays the number of milliseconds of a <xref:System.DateTimeOffset> object by using a custom format specifier and by directly accessing the <xref:System.DateTimeOffset.Millisecond%2A> property.  \\n  \\n [!code-csharp[System.DateTimeOffset.Properties#12](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.DateTimeOffset.Properties/cs/Properties.cs#12)]\\n [!code-vb[System.DateTimeOffset.Properties#12](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.DateTimeOffset.Properties/vb/Properties.vb#12)]\"\n  syntax:\n    content: public int Millisecond { get; }\n    return:\n      type: System.Int32\n      description: The millisecond component of the current <xref href=\"System.DateTimeOffset\"></xref> object, expressed as an integer between 0 and 999.\n  overload: System.DateTimeOffset.Millisecond*\n  exceptions: []\n  version:\n  - netcore-1.0\n  - netcore-1.1\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - netstandard-1.0\n  - netstandard-1.1\n  - netstandard-1.2\n  - netstandard-1.3\n  - netstandard-1.4\n  - netstandard-1.5\n  - netstandard-1.6\n  - netstandard-2.0\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  monikers:\n  - netcore-1.0\n  - netcore-1.1\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - netstandard-1.0\n  - netstandard-1.1\n  - netstandard-1.2\n  - netstandard-1.3\n  - netstandard-1.4\n  - netstandard-1.5\n  - netstandard-1.6\n  - netstandard-2.0\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System/DateTimeOffset.xml\n  ms.technology:\n  - dotnet-standard\n  author: rpetrusha\n  ms.author: ronpet\n  manager: wpickett\n- uid: System.DateTimeOffset.Minute\n  commentId: P:System.DateTimeOffset.Minute\n  id: Minute\n  parent: System.DateTimeOffset\n  langs:\n  - csharp\n  name: Minute\n  nameWithType: DateTimeOffset.Minute\n  fullName: DateTimeOffset.Minute\n  type: Property\n  assemblies:\n  - System.Runtime\n  - mscorlib\n  - netstandard\n  namespace: System\n  summary: Gets the minute component of the time represented by the current <xref href=\"System.DateTimeOffset\"></xref> object.\n  remarks: \"The <xref:System.DateTimeOffset.Minute%2A> property is not affected by the value of the <xref:System.DateTimeOffset.Offset%2A> property.  \\n  \\n You can also create a string representation of a <xref:System.DateTimeOffset> object's minute component by calling the <xref:System.DateTimeOffset.ToString%2A> method with the \\\"m\\\", or \\\"mm\\\" custom format specifiers.\"\n  example:\n  - \"The following example displays the minute component of a <xref:System.DateTimeOffset> object in three different ways:  \\n  \\n-   By retrieving the value of the <xref:System.DateTimeOffset.Minute%2A> property.  \\n  \\n-   By calling the <xref:System.DateTimeOffset.ToString%28System.String%29> method with the \\\"m\\\" format specifier.  \\n  \\n-   By calling the <xref:System.DateTimeOffset.ToString%28System.String%29> method with the \\\"mm\\\" format specifier.  \\n  \\n [!code-csharp[System.DateTimeOffset.Properties#8](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.DateTimeOffset.Properties/cs/Properties.cs#8)]\\n [!code-vb[System.DateTimeOffset.Properties#8](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.DateTimeOffset.Properties/vb/Properties.vb#8)]\"\n  syntax:\n    content: public int Minute { get; }\n    return:\n      type: System.Int32\n      description: The minute component of the current <xref href=\"System.DateTimeOffset\"></xref> object, expressed as an integer between 0 and 59.\n  overload: System.DateTimeOffset.Minute*\n  exceptions: []\n  version:\n  - netcore-1.0\n  - netcore-1.1\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - netstandard-1.0\n  - netstandard-1.1\n  - netstandard-1.2\n  - netstandard-1.3\n  - netstandard-1.4\n  - netstandard-1.5\n  - netstandard-1.6\n  - netstandard-2.0\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  monikers:\n  - netcore-1.0\n  - netcore-1.1\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - netstandard-1.0\n  - netstandard-1.1\n  - netstandard-1.2\n  - netstandard-1.3\n  - netstandard-1.4\n  - netstandard-1.5\n  - netstandard-1.6\n  - netstandard-2.0\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System/DateTimeOffset.xml\n  ms.technology:\n  - dotnet-standard\n  author: rpetrusha\n  ms.author: ronpet\n  manager: wpickett\n- uid: System.DateTimeOffset.MinValue\n  commentId: F:System.DateTimeOffset.MinValue\n  id: MinValue\n  parent: System.DateTimeOffset\n  langs:\n  - csharp\n  name: MinValue\n  nameWithType: DateTimeOffset.MinValue\n  fullName: DateTimeOffset.MinValue\n  type: Field\n  assemblies:\n  - System.Runtime\n  - mscorlib\n  - netstandard\n  namespace: System\n  summary: Represents the earliest possible <xref href=\"System.DateTimeOffset\"></xref> value. This field is read-only.\n  remarks: \"The value of this constant is 1/1/0001 12:00:00 AM +00:00.  \\n  \\n The <xref:System.DateTimeOffset.MinValue> property is used to determine whether the value of a new <xref:System.DateTimeOffset> object or the <xref:System.DateTimeOffset> value returned by an arithmetic operation is the same as or later than this minimum range value. If it is not, the method throws an <xref:System.ArgumentOutOfRangeException>. Any <xref:System.DateTimeOffset> value is converted to Coordinated Universal Time (UTC) before the method performs the comparison with <xref:System.DateTimeOffset.MinValue>.  This means that a <xref:System.DateTimeOffset> value whose date and time are close to the minimum range, but whose offset is positive, may throw an exception. For example, the value 1/1/0001 1:00:00 AM +02:00 is out of range because it is one hour earlier than <xref:System.DateTimeOffset.MinValue> when it is converted to UTC.\"\n  syntax:\n    content: public static readonly DateTimeOffset MinValue;\n    return:\n      type: System.DateTimeOffset\n      description: ''\n  exceptions: []\n  version:\n  - netcore-1.0\n  - netcore-1.1\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - netstandard-1.0\n  - netstandard-1.1\n  - netstandard-1.2\n  - netstandard-1.3\n  - netstandard-1.4\n  - netstandard-1.5\n  - netstandard-1.6\n  - netstandard-2.0\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  monikers:\n  - netcore-1.0\n  - netcore-1.1\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - netstandard-1.0\n  - netstandard-1.1\n  - netstandard-1.2\n  - netstandard-1.3\n  - netstandard-1.4\n  - netstandard-1.5\n  - netstandard-1.6\n  - netstandard-2.0\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System/DateTimeOffset.xml\n  ms.technology:\n  - dotnet-standard\n  author: rpetrusha\n  ms.author: ronpet\n  manager: wpickett\n- uid: System.DateTimeOffset.Month\n  commentId: P:System.DateTimeOffset.Month\n  id: Month\n  parent: System.DateTimeOffset\n  langs:\n  - csharp\n  name: Month\n  nameWithType: DateTimeOffset.Month\n  fullName: DateTimeOffset.Month\n  type: Property\n  assemblies:\n  - System.Runtime\n  - mscorlib\n  - netstandard\n  namespace: System\n  summary: Gets the month component of the date represented by the current <xref href=\"System.DateTimeOffset\"></xref> object.\n  remarks: \"The <xref:System.DateTimeOffset.Month%2A> property is not affected by the value of the <xref:System.DateTimeOffset.Offset%2A> property.  \\n  \\n You can also create a string representation of a <xref:System.DateTimeOffset> object's month component by calling the <xref:System.DateTimeOffset.ToString%2A> method with the \\\"M\\\" or \\\"MM\\\" custom format specifiers.\"\n  example:\n  - \"The following example displays the month component of a <xref:System.DateTimeOffset> value in three different ways:  \\n  \\n-   By retrieving the value of the <xref:System.DateTimeOffset.Month%2A> property.  \\n  \\n-   By calling the <xref:System.DateTimeOffset.ToString%28System.String%29> method with the \\\"M\\\" format specifier.  \\n  \\n-   By calling the <xref:System.DateTimeOffset.ToString%28System.String%29> method with the \\\"MM\\\" format specifier.  \\n  \\n [!code-csharp[System.DateTimeOffset.Properties#9](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.DateTimeOffset.Properties/cs/Properties.cs#9)]\\n [!code-vb[System.DateTimeOffset.Properties#9](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.DateTimeOffset.Properties/vb/Properties.vb#9)]\"\n  syntax:\n    content: public int Month { get; }\n    return:\n      type: System.Int32\n      description: The month component of the current <xref href=\"System.DateTimeOffset\"></xref> object, expressed as an integer between 1 and 12.\n  overload: System.DateTimeOffset.Month*\n  exceptions: []\n  version:\n  - netcore-1.0\n  - netcore-1.1\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - netstandard-1.0\n  - netstandard-1.1\n  - netstandard-1.2\n  - netstandard-1.3\n  - netstandard-1.4\n  - netstandard-1.5\n  - netstandard-1.6\n  - netstandard-2.0\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  monikers:\n  - netcore-1.0\n  - netcore-1.1\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - netstandard-1.0\n  - netstandard-1.1\n  - netstandard-1.2\n  - netstandard-1.3\n  - netstandard-1.4\n  - netstandard-1.5\n  - netstandard-1.6\n  - netstandard-2.0\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System/DateTimeOffset.xml\n  ms.technology:\n  - dotnet-standard\n  author: rpetrusha\n  ms.author: ronpet\n  manager: wpickett\n- uid: System.DateTimeOffset.Now\n  commentId: P:System.DateTimeOffset.Now\n  id: Now\n  parent: System.DateTimeOffset\n  langs:\n  - csharp\n  name: Now\n  nameWithType: DateTimeOffset.Now\n  fullName: DateTimeOffset.Now\n  type: Property\n  assemblies:\n  - System.Runtime\n  - mscorlib\n  - netstandard\n  namespace: System\n  summary: Gets a <xref href=\"System.DateTimeOffset\"></xref> object that is set to the current date and time on the current computer, with the offset set to the local time's offset from Coordinated Universal Time (UTC).\n  remarks: The precision of the current local time's millisecond component depends on the resolution of the system clock. On Windows NT 3.5 and later, and Windows Vista operating systems, the clock's resolution is approximately 10-15 milliseconds.\n  example:\n  - \"The following example uses the <xref:System.DateTimeOffset.Now%2A> property to retrieve the current date and time and displays it by using each of the [standard date and time format strings](~/docs/standard/base-types/standard-date-and-time-format-strings.md) supported by the <xref:System.DateTimeOffset> type.  \\n  \\n [!code-csharp[System.DateTimeOffset.Now#1](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.datetimeoffset.now/cs/now1.cs#1)]\\n [!code-vb[System.DateTimeOffset.Now#1](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.datetimeoffset.now/vb/now1.vb#1)]  \\n  \\n The following example uses the <xref:System.DateTimeOffset.Now%2A> and <xref:System.DateTimeOffset.Millisecond%2A> properties to determine the resolution of the system clock. It displays the time only when the value of its millisecond component has changed.  \\n  \\n [!code-csharp[System.DateTimeOffset.Properties#11](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.DateTimeOffset.Properties/cs/Properties.cs#11)]\\n [!code-vb[System.DateTimeOffset.Properties#11](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.DateTimeOffset.Properties/vb/Properties.vb#11)]\"\n  syntax:\n    content: public static DateTimeOffset Now { get; }\n    return:\n      type: System.DateTimeOffset\n      description: A <xref href=\"System.DateTimeOffset\"></xref> object whose date and time is the current local time and whose offset is the local time zone's offset from Coordinated Universal Time (UTC).\n  overload: System.DateTimeOffset.Now*\n  exceptions: []\n  version:\n  - netcore-1.0\n  - netcore-1.1\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - netstandard-1.0\n  - netstandard-1.1\n  - netstandard-1.2\n  - netstandard-1.3\n  - netstandard-1.4\n  - netstandard-1.5\n  - netstandard-1.6\n  - netstandard-2.0\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  monikers:\n  - netcore-1.0\n  - netcore-1.1\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - netstandard-1.0\n  - netstandard-1.1\n  - netstandard-1.2\n  - netstandard-1.3\n  - netstandard-1.4\n  - netstandard-1.5\n  - netstandard-1.6\n  - netstandard-2.0\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System/DateTimeOffset.xml\n  ms.technology:\n  - dotnet-standard\n  author: rpetrusha\n  ms.author: ronpet\n  manager: wpickett\n- uid: System.DateTimeOffset.Offset\n  commentId: P:System.DateTimeOffset.Offset\n  id: Offset\n  parent: System.DateTimeOffset\n  langs:\n  - csharp\n  name: Offset\n  nameWithType: DateTimeOffset.Offset\n  fullName: DateTimeOffset.Offset\n  type: Property\n  assemblies:\n  - System.Runtime\n  - mscorlib\n  - netstandard\n  namespace: System\n  summary: Gets the time's offset from Coordinated Universal Time (UTC).\n  remarks: \"The value of the <xref:System.TimeSpan.Hours%2A> property of the returned <xref:System.TimeSpan> object can range from -14 hours to 14 hours.  \\n  \\n The value of the <xref:System.DateTimeOffset.Offset%2A> property is precise to the minute.\"\n  example:\n  - \"The following example uses the <xref:System.DateTimeOffset.Offset%2A> property to display the local time's difference from Coordinated Universal Time (UTC).  \\n  \\n [!code-csharp[System.DateTimeOffset.Properties#13](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.DateTimeOffset.Properties/cs/Properties.cs#13)]\\n [!code-vb[System.DateTimeOffset.Properties#13](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.DateTimeOffset.Properties/vb/Properties.vb#13)]\"\n  syntax:\n    content: public TimeSpan Offset { get; }\n    return:\n      type: System.TimeSpan\n      description: The difference between the current <xref href=\"System.DateTimeOffset\"></xref> object's time value and Coordinated Universal Time (UTC).\n  overload: System.DateTimeOffset.Offset*\n  exceptions: []\n  version:\n  - netcore-1.0\n  - netcore-1.1\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - netstandard-1.0\n  - netstandard-1.1\n  - netstandard-1.2\n  - netstandard-1.3\n  - netstandard-1.4\n  - netstandard-1.5\n  - netstandard-1.6\n  - netstandard-2.0\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  monikers:\n  - netcore-1.0\n  - netcore-1.1\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - netstandard-1.0\n  - netstandard-1.1\n  - netstandard-1.2\n  - netstandard-1.3\n  - netstandard-1.4\n  - netstandard-1.5\n  - netstandard-1.6\n  - netstandard-2.0\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System/DateTimeOffset.xml\n  ms.technology:\n  - dotnet-standard\n  author: rpetrusha\n  ms.author: ronpet\n  manager: wpickett\n- uid: System.DateTimeOffset.op_Addition(System.DateTimeOffset,System.TimeSpan)\n  commentId: M:System.DateTimeOffset.op_Addition(System.DateTimeOffset,System.TimeSpan)\n  id: op_Addition(System.DateTimeOffset,System.TimeSpan)\n  parent: System.DateTimeOffset\n  langs:\n  - csharp\n  name: op_Addition(DateTimeOffset, TimeSpan)\n  nameWithType: DateTimeOffset.op_Addition(DateTimeOffset, TimeSpan)\n  fullName: DateTimeOffset.op_Addition(DateTimeOffset, TimeSpan)\n  type: Operator\n  assemblies:\n  - System.Runtime\n  - mscorlib\n  - netstandard\n  namespace: System\n  summary: Adds a specified time interval to a <xref href=\"System.DateTimeOffset\"></xref> object that has a specified date and time, and yields a <xref href=\"System.DateTimeOffset\"></xref> object that has new a date and time.\n  remarks: \"The <xref:System.DateTimeOffset.op_Addition%2A> method defines the addition operation for <xref:System.DateTimeOffset> values. It enables code such as the following:  \\n  \\n [!code-csharp[System.DateTimeOffset.Operators#1](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.DateTimeOffset.Operators/cs/Operators.cs#1)]\\n [!code-vb[System.DateTimeOffset.Operators#1](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.DateTimeOffset.Operators/vb/Operators.vb#1)]  \\n  \\n Languages that do not support custom operators and operator overloading can call the <xref:System.DateTimeOffset.Add%2A> method instead.  \\n  \\n The equivalent method for this operator is <xref:System.DateTimeOffset.Add%28System.DateTimeOffset%2CSystem.TimeSpan%29?displayProperty=fullName>\"\n  syntax:\n    content: public static DateTimeOffset op_Addition (DateTimeOffset dateTimeOffset, TimeSpan timeSpan);\n    parameters:\n    - id: dateTimeOffset\n      type: System.DateTimeOffset\n      description: The object to add the time interval to.\n    - id: timeSpan\n      type: System.TimeSpan\n      description: The time interval to add.\n    return:\n      type: System.DateTimeOffset\n      description: An object whose value is the sum of the values of <code>dateTimeTz</code> and <code>timeSpan</code>.\n  overload: System.DateTimeOffset.op_Addition*\n  exceptions:\n  - type: System.ArgumentOutOfRangeException\n    commentId: T:System.ArgumentOutOfRangeException\n    description: \"The resulting <xref href=\\\"System.DateTimeOffset\\\"></xref> value is less than <xref href=\\\"System.DateTimeOffset.MinValue\\\"></xref>.  \\n  \\n -or-  \\n  \\n The resulting <xref href=\\\"System.DateTimeOffset\\\"></xref> value is greater than <xref href=\\\"System.DateTimeOffset.MaxValue\\\"></xref>.\"\n  version:\n  - netcore-1.0\n  - netcore-1.1\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - netstandard-1.0\n  - netstandard-1.1\n  - netstandard-1.2\n  - netstandard-1.3\n  - netstandard-1.4\n  - netstandard-1.5\n  - netstandard-1.6\n  - netstandard-2.0\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  monikers:\n  - netcore-1.0\n  - netcore-1.1\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - netstandard-1.0\n  - netstandard-1.1\n  - netstandard-1.2\n  - netstandard-1.3\n  - netstandard-1.4\n  - netstandard-1.5\n  - netstandard-1.6\n  - netstandard-2.0\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System/DateTimeOffset.xml\n  ms.technology:\n  - dotnet-standard\n  author: rpetrusha\n  ms.author: ronpet\n  manager: wpickett\n- uid: System.DateTimeOffset.op_Equality(System.DateTimeOffset,System.DateTimeOffset)\n  commentId: M:System.DateTimeOffset.op_Equality(System.DateTimeOffset,System.DateTimeOffset)\n  id: op_Equality(System.DateTimeOffset,System.DateTimeOffset)\n  parent: System.DateTimeOffset\n  langs:\n  - csharp\n  name: op_Equality(DateTimeOffset, DateTimeOffset)\n  nameWithType: DateTimeOffset.op_Equality(DateTimeOffset, DateTimeOffset)\n  fullName: DateTimeOffset.op_Equality(DateTimeOffset, DateTimeOffset)\n  type: Operator\n  assemblies:\n  - System.Runtime\n  - mscorlib\n  - netstandard\n  namespace: System\n  summary: Determines whether two specified <xref href=\"System.DateTimeOffset\"></xref> objects represent the same point in time.\n  remarks: \"The <xref:System.DateTimeOffset.op_Equality%2A> method defines the operation of the equality operator for <xref:System.DateTimeOffset> objects. It enables code such as the following:  \\n  \\n [!code-csharp[System.DateTimeOffset.Operators#2](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.DateTimeOffset.Operators/cs/Operators.cs#2)]\\n [!code-vb[System.DateTimeOffset.Operators#2](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.DateTimeOffset.Operators/vb/Operators.vb#2)]  \\n  \\n Before evaluating the `left` and `right` operands for equality, the operator converts both values to Coordinated Universal Time (UTC). The operation is equivalent to the following:  \\n  \\n [!code-csharp[System.DateTimeOffset.Syntax#4](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.DateTimeOffset.Syntax/cs/Syntax.cs#4)]\\n [!code-vb[System.DateTimeOffset.Syntax#4](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.DateTimeOffset.Syntax/vb/Syntax.vb#4)]  \\n  \\n In other words, the <xref:System.DateTimeOffset.op_Equality%2A> method determines whether the two <xref:System.DateTimeOffset> objects represent a single point in time. It directly compares neither dates and times nor offsets. To determine whether two <xref:System.DateTimeOffset> objects represent the same time and have the same offset value, use the <xref:System.DateTimeOffset.EqualsExact%2A> method.  \\n  \\n The equivalent method for this operator is <xref:System.DateTimeOffset.Equals%28System.DateTimeOffset%2CSystem.DateTimeOffset%29?displayProperty=fullName>\"\n  syntax:\n    content: public static bool op_Equality (DateTimeOffset left, DateTimeOffset right);\n    parameters:\n    - id: left\n      type: System.DateTimeOffset\n      description: The first object to compare.\n    - id: right\n      type: System.DateTimeOffset\n      description: The second object to compare.\n    return:\n      type: System.Boolean\n      description: '`true` if both <xref href=\"System.DateTimeOffset\"></xref> objects have the same <xref href=\"System.DateTimeOffset.UtcDateTime\"></xref> value; otherwise, `false`.'\n  overload: System.DateTimeOffset.op_Equality*\n  exceptions: []\n  version:\n  - netcore-1.0\n  - netcore-1.1\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - netstandard-1.0\n  - netstandard-1.1\n  - netstandard-1.2\n  - netstandard-1.3\n  - netstandard-1.4\n  - netstandard-1.5\n  - netstandard-1.6\n  - netstandard-2.0\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  monikers:\n  - netcore-1.0\n  - netcore-1.1\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - netstandard-1.0\n  - netstandard-1.1\n  - netstandard-1.2\n  - netstandard-1.3\n  - netstandard-1.4\n  - netstandard-1.5\n  - netstandard-1.6\n  - netstandard-2.0\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System/DateTimeOffset.xml\n  ms.technology:\n  - dotnet-standard\n  author: rpetrusha\n  ms.author: ronpet\n  manager: wpickett\n- uid: System.DateTimeOffset.op_GreaterThan(System.DateTimeOffset,System.DateTimeOffset)\n  commentId: M:System.DateTimeOffset.op_GreaterThan(System.DateTimeOffset,System.DateTimeOffset)\n  id: op_GreaterThan(System.DateTimeOffset,System.DateTimeOffset)\n  parent: System.DateTimeOffset\n  langs:\n  - csharp\n  name: op_GreaterThan(DateTimeOffset, DateTimeOffset)\n  nameWithType: DateTimeOffset.op_GreaterThan(DateTimeOffset, DateTimeOffset)\n  fullName: DateTimeOffset.op_GreaterThan(DateTimeOffset, DateTimeOffset)\n  type: Operator\n  assemblies:\n  - System.Runtime\n  - mscorlib\n  - netstandard\n  namespace: System\n  summary: Determines whether one specified <xref href=\"System.DateTimeOffset\"></xref> object is greater than (or later than) a second specified <xref href=\"System.DateTimeOffset\"></xref> object.\n  remarks: \"The <xref:System.DateTimeOffset.op_GreaterThan%2A> method defines the operation of the greater than operator for <xref:System.DateTimeOffset> objects. It enables code such as the following:  \\n  \\n [!code-csharp[System.DateTimeOffset.Operators#3](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.DateTimeOffset.Operators/cs/Operators.cs#3)]\\n [!code-vb[System.DateTimeOffset.Operators#3](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.DateTimeOffset.Operators/vb/Operators.vb#3)]  \\n  \\n Languages that do not support custom operators can call the <xref:System.DateTimeOffset.Compare%2A> method instead. They can also call the <xref:System.DateTimeOffset.op_GreaterThan%2A> method directly, as the following example shows.  \\n  \\n [!code-vb[System.DateTimeOffset.Operators#4](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.DateTimeOffset.Operators/vb/Operators.vb#4)]  \\n  \\n Before evaluating the `left` and `right` operands, the operator converts both values to Coordinated Universal Time (UTC). The operation is equivalent to the following:  \\n  \\n [!code-csharp[System.DateTimeOffset.Syntax#5](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.DateTimeOffset.Syntax/cs/Syntax.cs#5)]\\n [!code-vb[System.DateTimeOffset.Syntax#5](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.DateTimeOffset.Syntax/vb/Syntax.vb#5)]  \\n  \\n The equivalent method for this operator is <xref:System.DateTimeOffset.Compare%28System.DateTimeOffset%2CSystem.DateTimeOffset%29?displayProperty=fullName>\"\n  syntax:\n    content: public static bool op_GreaterThan (DateTimeOffset left, DateTimeOffset right);\n    parameters:\n    - id: left\n      type: System.DateTimeOffset\n      description: The first object to compare.\n    - id: right\n      type: System.DateTimeOffset\n      description: The second object to compare.\n    return:\n      type: System.Boolean\n      description: '`true` if the <xref href=\"System.DateTimeOffset.UtcDateTime\"></xref> value of <code>left</code> is later than the <xref href=\"System.DateTimeOffset.UtcDateTime\"></xref> value of <code>right</code>; otherwise, `false`.'\n  overload: System.DateTimeOffset.op_GreaterThan*\n  exceptions: []\n  version:\n  - netcore-1.0\n  - netcore-1.1\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - netstandard-1.0\n  - netstandard-1.1\n  - netstandard-1.2\n  - netstandard-1.3\n  - netstandard-1.4\n  - netstandard-1.5\n  - netstandard-1.6\n  - netstandard-2.0\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  monikers:\n  - netcore-1.0\n  - netcore-1.1\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - netstandard-1.0\n  - netstandard-1.1\n  - netstandard-1.2\n  - netstandard-1.3\n  - netstandard-1.4\n  - netstandard-1.5\n  - netstandard-1.6\n  - netstandard-2.0\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System/DateTimeOffset.xml\n  ms.technology:\n  - dotnet-standard\n  author: rpetrusha\n  ms.author: ronpet\n  manager: wpickett\n- uid: System.DateTimeOffset.op_GreaterThanOrEqual(System.DateTimeOffset,System.DateTimeOffset)\n  commentId: M:System.DateTimeOffset.op_GreaterThanOrEqual(System.DateTimeOffset,System.DateTimeOffset)\n  id: op_GreaterThanOrEqual(System.DateTimeOffset,System.DateTimeOffset)\n  parent: System.DateTimeOffset\n  langs:\n  - csharp\n  name: op_GreaterThanOrEqual(DateTimeOffset, DateTimeOffset)\n  nameWithType: DateTimeOffset.op_GreaterThanOrEqual(DateTimeOffset, DateTimeOffset)\n  fullName: DateTimeOffset.op_GreaterThanOrEqual(DateTimeOffset, DateTimeOffset)\n  type: Operator\n  assemblies:\n  - System.Runtime\n  - mscorlib\n  - netstandard\n  namespace: System\n  summary: Determines whether one specified <xref href=\"System.DateTimeOffset\"></xref> object is greater than or equal to a second specified <xref href=\"System.DateTimeOffset\"></xref> object.\n  remarks: \"The <xref:System.DateTimeOffset.op_GreaterThan%2A> method defines the operation of the greater than or equal to operator for <xref:System.DateTimeOffset> objects. It enables code such as the following:  \\n  \\n [!code-csharp[System.DateTimeOffset.Operators#5](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.DateTimeOffset.Operators/cs/Operators.cs#5)]\\n [!code-vb[System.DateTimeOffset.Operators#5](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.DateTimeOffset.Operators/vb/Operators.vb#5)]  \\n  \\n Languages that do not support custom operators can call the <xref:System.DateTimeOffset.Compare%2A> method instead. Some languages can also call the <xref:System.DateTimeOffset.op_GreaterThanOrEqual%2A> method directly, as the following example shows.  \\n  \\n [!code-vb[System.DateTimeOffset.Operators#6](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.DateTimeOffset.Operators/vb/Operators.vb#6)]  \\n  \\n Before evaluating the `left` and `right` operands, the operator converts both values to Coordinated Universal Time (UTC). The operation is equivalent to the following:  \\n  \\n [!code-csharp[System.DateTimeOffset.Syntax#6](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.DateTimeOffset.Syntax/cs/Syntax.cs#6)]\\n [!code-vb[System.DateTimeOffset.Syntax#6](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.DateTimeOffset.Syntax/vb/Syntax.vb#6)]  \\n  \\n The equivalent method for this operator is <xref:System.DateTimeOffset.Compare%28System.DateTimeOffset%2CSystem.DateTimeOffset%29?displayProperty=fullName>\"\n  syntax:\n    content: public static bool op_GreaterThanOrEqual (DateTimeOffset left, DateTimeOffset right);\n    parameters:\n    - id: left\n      type: System.DateTimeOffset\n      description: The first object to compare.\n    - id: right\n      type: System.DateTimeOffset\n      description: The second object to compare.\n    return:\n      type: System.Boolean\n      description: '`true` if the <xref href=\"System.DateTimeOffset.UtcDateTime\"></xref> value of <code>left</code> is the same as or later than the <xref href=\"System.DateTimeOffset.UtcDateTime\"></xref> value of <code>right</code>; otherwise, `false`.'\n  overload: System.DateTimeOffset.op_GreaterThanOrEqual*\n  exceptions: []\n  version:\n  - netcore-1.0\n  - netcore-1.1\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - netstandard-1.0\n  - netstandard-1.1\n  - netstandard-1.2\n  - netstandard-1.3\n  - netstandard-1.4\n  - netstandard-1.5\n  - netstandard-1.6\n  - netstandard-2.0\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  monikers:\n  - netcore-1.0\n  - netcore-1.1\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - netstandard-1.0\n  - netstandard-1.1\n  - netstandard-1.2\n  - netstandard-1.3\n  - netstandard-1.4\n  - netstandard-1.5\n  - netstandard-1.6\n  - netstandard-2.0\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System/DateTimeOffset.xml\n  ms.technology:\n  - dotnet-standard\n  author: rpetrusha\n  ms.author: ronpet\n  manager: wpickett\n- uid: System.DateTimeOffset.op_Implicit(System.DateTime to System.DateTimeOffset)\n  commentId: M:System.DateTimeOffset.op_Implicit(System.DateTime)~System.DateTimeOffset\n  id: op_Implicit(System.DateTime to System.DateTimeOffset)\n  parent: System.DateTimeOffset\n  langs:\n  - csharp\n  name: op_Implicit(DateTime to DateTimeOffset)\n  nameWithType: DateTimeOffset.op_Implicit(DateTime to DateTimeOffset)\n  fullName: DateTimeOffset.op_Implicit(DateTime to DateTimeOffset)\n  type: Operator\n  assemblies:\n  - System.Runtime\n  - mscorlib\n  - netstandard\n  namespace: System\n  syntax:\n    content: public static DateTimeOffset op_Implicit (DateTime dateTime);\n    parameters:\n    - id: dateTime\n      type: System.DateTime\n      description: ''\n    return:\n      type: System.DateTimeOffset\n      description: ''\n  overload: System.DateTimeOffset.op_Implicit*\n  exceptions: []\n  version:\n  - netcore-1.0\n  - netcore-1.1\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - netstandard-1.0\n  - netstandard-1.1\n  - netstandard-1.2\n  - netstandard-1.3\n  - netstandard-1.4\n  - netstandard-1.5\n  - netstandard-1.6\n  - netstandard-2.0\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  monikers:\n  - netcore-1.0\n  - netcore-1.1\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - netstandard-1.0\n  - netstandard-1.1\n  - netstandard-1.2\n  - netstandard-1.3\n  - netstandard-1.4\n  - netstandard-1.5\n  - netstandard-1.6\n  - netstandard-2.0\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System/DateTimeOffset.xml\n- uid: System.DateTimeOffset.op_Inequality(System.DateTimeOffset,System.DateTimeOffset)\n  commentId: M:System.DateTimeOffset.op_Inequality(System.DateTimeOffset,System.DateTimeOffset)\n  id: op_Inequality(System.DateTimeOffset,System.DateTimeOffset)\n  parent: System.DateTimeOffset\n  langs:\n  - csharp\n  name: op_Inequality(DateTimeOffset, DateTimeOffset)\n  nameWithType: DateTimeOffset.op_Inequality(DateTimeOffset, DateTimeOffset)\n  fullName: DateTimeOffset.op_Inequality(DateTimeOffset, DateTimeOffset)\n  type: Operator\n  assemblies:\n  - System.Runtime\n  - mscorlib\n  - netstandard\n  namespace: System\n  summary: Determines whether two specified <xref href=\"System.DateTimeOffset\"></xref> objects refer to different points in time.\n  remarks: \"The <xref:System.DateTimeOffset.op_Inequality%2A> method defines the operation of the inequality operator for <xref:System.DateTimeOffset> objects. It always returns the opposite result from <xref:System.DateTimeOffset.op_Equality%2A>. The <xref:System.DateTimeOffset.op_Inequality%2A> method enables code such as the following:  \\n  \\n [!code-csharp[System.DateTimeOffset.Operators#8](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.DateTimeOffset.Operators/cs/Operators.cs#8)]\\n [!code-vb[System.DateTimeOffset.Operators#8](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.DateTimeOffset.Operators/vb/Operators.vb#8)]  \\n  \\n Before evaluating the `left` and `right` operands for equality, the operator converts both values to Coordinated Universal Time (UTC). The operation is equivalent to the following:  \\n  \\n [!code-csharp[System.DateTimeOffset.Syntax#4](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.DateTimeOffset.Syntax/cs/Syntax.cs#4)]\\n [!code-vb[System.DateTimeOffset.Syntax#4](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.DateTimeOffset.Syntax/vb/Syntax.vb#4)]  \\n  \\n In other words, the <xref:System.DateTimeOffset.op_Inequality%2A> method determines whether the two <xref:System.DateTimeOffset> objects represent different points in time. It directly compares neither dates and times nor offsets.  \\n  \\n Languages that do not support custom operators can call the <xref:System.DateTimeOffset.Compare%2A> method instead. In addition, some languages can also call the <xref:System.DateTimeOffset.op_Inequality%2A> method directly, as the following example shows.  \\n  \\n [!code-vb[System.DateTimeOffset.Operators#9](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.DateTimeOffset.Operators/vb/Operators.vb#9)]  \\n  \\n The equivalent method for this operator is <xref:System.DateTimeOffset.Compare%28System.DateTimeOffset%2CSystem.DateTimeOffset%29?displayProperty=fullName>\"\n  syntax:\n    content: public static bool op_Inequality (DateTimeOffset left, DateTimeOffset right);\n    parameters:\n    - id: left\n      type: System.DateTimeOffset\n      description: The first object to compare.\n    - id: right\n      type: System.DateTimeOffset\n      description: The second object to compare.\n    return:\n      type: System.Boolean\n      description: '`true` if <code>left</code> and <code>right</code> do not have the same <xref href=\"System.DateTimeOffset.UtcDateTime\"></xref> value; otherwise, `false`.'\n  overload: System.DateTimeOffset.op_Inequality*\n  exceptions: []\n  version:\n  - netcore-1.0\n  - netcore-1.1\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - netstandard-1.0\n  - netstandard-1.1\n  - netstandard-1.2\n  - netstandard-1.3\n  - netstandard-1.4\n  - netstandard-1.5\n  - netstandard-1.6\n  - netstandard-2.0\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  monikers:\n  - netcore-1.0\n  - netcore-1.1\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - netstandard-1.0\n  - netstandard-1.1\n  - netstandard-1.2\n  - netstandard-1.3\n  - netstandard-1.4\n  - netstandard-1.5\n  - netstandard-1.6\n  - netstandard-2.0\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System/DateTimeOffset.xml\n  ms.technology:\n  - dotnet-standard\n  author: rpetrusha\n  ms.author: ronpet\n  manager: wpickett\n- uid: System.DateTimeOffset.op_LessThan(System.DateTimeOffset,System.DateTimeOffset)\n  commentId: M:System.DateTimeOffset.op_LessThan(System.DateTimeOffset,System.DateTimeOffset)\n  id: op_LessThan(System.DateTimeOffset,System.DateTimeOffset)\n  parent: System.DateTimeOffset\n  langs:\n  - csharp\n  name: op_LessThan(DateTimeOffset, DateTimeOffset)\n  nameWithType: DateTimeOffset.op_LessThan(DateTimeOffset, DateTimeOffset)\n  fullName: DateTimeOffset.op_LessThan(DateTimeOffset, DateTimeOffset)\n  type: Operator\n  assemblies:\n  - System.Runtime\n  - mscorlib\n  - netstandard\n  namespace: System\n  summary: Determines whether one specified <xref href=\"System.DateTimeOffset\"></xref> object is less than a second specified <xref href=\"System.DateTimeOffset\"></xref> object.\n  remarks: \"The <xref:System.DateTimeOffset.op_LessThan%2A> method defines the operation of the less than operator for <xref:System.DateTimeOffset> objects. It enables code such as the following:  \\n  \\n [!code-csharp[System.DateTimeOffset.Operators#10](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.DateTimeOffset.Operators/cs/Operators.cs#10)]\\n [!code-vb[System.DateTimeOffset.Operators#10](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.DateTimeOffset.Operators/vb/Operators.vb#10)]  \\n  \\n Before evaluating the `left` and `right` operands, the operator converts both operands to Coordinated Universal Time (UTC). The operation is equivalent to the following:  \\n  \\n [!code-csharp[System.DateTimeOffset.Syntax#8](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.DateTimeOffset.Syntax/cs/Syntax.cs#8)]\\n [!code-vb[System.DateTimeOffset.Syntax#8](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.DateTimeOffset.Syntax/vb/Syntax.vb#8)]  \\n  \\n Languages that do not support custom operators can call the <xref:System.DateTimeOffset.Compare%2A> method instead. In addition, some languages can also call the <xref:System.DateTimeOffset.op_LessThan%2A> method directly, as the following example shows.  \\n  \\n [!code-vb[System.DateTimeOffset.Operators#11](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.DateTimeOffset.Operators/vb/Operators.vb#11)]  \\n  \\n The equivalent method for this operator is <xref:System.DateTimeOffset.Compare%28System.DateTimeOffset%2CSystem.DateTimeOffset%29?displayProperty=fullName>\"\n  syntax:\n    content: public static bool op_LessThan (DateTimeOffset left, DateTimeOffset right);\n    parameters:\n    - id: left\n      type: System.DateTimeOffset\n      description: The first object to compare.\n    - id: right\n      type: System.DateTimeOffset\n      description: The second object to compare.\n    return:\n      type: System.Boolean\n      description: '`true` if the <xref href=\"System.DateTimeOffset.UtcDateTime\"></xref> value of <code>left</code> is earlier than the <xref href=\"System.DateTimeOffset.UtcDateTime\"></xref> value of <code>right</code>; otherwise, `false`.'\n  overload: System.DateTimeOffset.op_LessThan*\n  exceptions: []\n  version:\n  - netcore-1.0\n  - netcore-1.1\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - netstandard-1.0\n  - netstandard-1.1\n  - netstandard-1.2\n  - netstandard-1.3\n  - netstandard-1.4\n  - netstandard-1.5\n  - netstandard-1.6\n  - netstandard-2.0\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  monikers:\n  - netcore-1.0\n  - netcore-1.1\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - netstandard-1.0\n  - netstandard-1.1\n  - netstandard-1.2\n  - netstandard-1.3\n  - netstandard-1.4\n  - netstandard-1.5\n  - netstandard-1.6\n  - netstandard-2.0\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System/DateTimeOffset.xml\n  ms.technology:\n  - dotnet-standard\n  author: rpetrusha\n  ms.author: ronpet\n  manager: wpickett\n- uid: System.DateTimeOffset.op_LessThanOrEqual(System.DateTimeOffset,System.DateTimeOffset)\n  commentId: M:System.DateTimeOffset.op_LessThanOrEqual(System.DateTimeOffset,System.DateTimeOffset)\n  id: op_LessThanOrEqual(System.DateTimeOffset,System.DateTimeOffset)\n  parent: System.DateTimeOffset\n  langs:\n  - csharp\n  name: op_LessThanOrEqual(DateTimeOffset, DateTimeOffset)\n  nameWithType: DateTimeOffset.op_LessThanOrEqual(DateTimeOffset, DateTimeOffset)\n  fullName: DateTimeOffset.op_LessThanOrEqual(DateTimeOffset, DateTimeOffset)\n  type: Operator\n  assemblies:\n  - System.Runtime\n  - mscorlib\n  - netstandard\n  namespace: System\n  summary: Determines whether one specified <xref href=\"System.DateTimeOffset\"></xref> object is less than a second specified <xref href=\"System.DateTimeOffset\"></xref> object.\n  remarks: \"The <xref:System.DateTimeOffset.op_LessThanOrEqual%2A> method defines the operation of the less than or equal to operator for <xref:System.DateTimeOffset> objects. It enables code such as the following:  \\n  \\n [!code-csharp[System.DateTimeOffset.Operators#12](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.DateTimeOffset.Operators/cs/Operators.cs#12)]\\n [!code-vb[System.DateTimeOffset.Operators#12](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.DateTimeOffset.Operators/vb/Operators.vb#12)]  \\n  \\n Languages that do not support custom operators can call the <xref:System.DateTimeOffset.Compare%2A> method instead. Some languages can also call the <xref:System.DateTimeOffset.op_LessThanOrEqual%2A> method directly, as the following example shows.  \\n  \\n [!code-vb[System.DateTimeOffset.Operators#13](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.DateTimeOffset.Operators/vb/Operators.vb#13)]  \\n  \\n Before evaluating the `left` and `right` operands, the operator converts both values to Coordinated Universal Time (UTC). The operation is equivalent to the following:  \\n  \\n [!code-csharp[System.DateTimeOffset.Syntax#9](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.DateTimeOffset.Syntax/cs/Syntax.cs#9)]\\n [!code-vb[System.DateTimeOffset.Syntax#9](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.DateTimeOffset.Syntax/vb/Syntax.vb#9)]  \\n  \\n The equivalent method for this operator is <xref:System.DateTimeOffset.Compare%28System.DateTimeOffset%2CSystem.DateTimeOffset%29?displayProperty=fullName>\"\n  syntax:\n    content: public static bool op_LessThanOrEqual (DateTimeOffset left, DateTimeOffset right);\n    parameters:\n    - id: left\n      type: System.DateTimeOffset\n      description: The first object to compare.\n    - id: right\n      type: System.DateTimeOffset\n      description: The second object to compare.\n    return:\n      type: System.Boolean\n      description: '`true` if the <xref href=\"System.DateTimeOffset.UtcDateTime\"></xref> value of <code>left</code> is earlier than the <xref href=\"System.DateTimeOffset.UtcDateTime\"></xref> value of <code>right</code>; otherwise, `false`.'\n  overload: System.DateTimeOffset.op_LessThanOrEqual*\n  exceptions: []\n  version:\n  - netcore-1.0\n  - netcore-1.1\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - netstandard-1.0\n  - netstandard-1.1\n  - netstandard-1.2\n  - netstandard-1.3\n  - netstandard-1.4\n  - netstandard-1.5\n  - netstandard-1.6\n  - netstandard-2.0\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  monikers:\n  - netcore-1.0\n  - netcore-1.1\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - netstandard-1.0\n  - netstandard-1.1\n  - netstandard-1.2\n  - netstandard-1.3\n  - netstandard-1.4\n  - netstandard-1.5\n  - netstandard-1.6\n  - netstandard-2.0\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System/DateTimeOffset.xml\n  ms.technology:\n  - dotnet-standard\n  author: rpetrusha\n  ms.author: ronpet\n  manager: wpickett\n- uid: System.DateTimeOffset.op_Subtraction(System.DateTimeOffset,System.DateTimeOffset)\n  commentId: M:System.DateTimeOffset.op_Subtraction(System.DateTimeOffset,System.DateTimeOffset)\n  id: op_Subtraction(System.DateTimeOffset,System.DateTimeOffset)\n  parent: System.DateTimeOffset\n  langs:\n  - csharp\n  name: op_Subtraction(DateTimeOffset, DateTimeOffset)\n  nameWithType: DateTimeOffset.op_Subtraction(DateTimeOffset, DateTimeOffset)\n  fullName: DateTimeOffset.op_Subtraction(DateTimeOffset, DateTimeOffset)\n  type: Operator\n  assemblies:\n  - System.Runtime\n  - mscorlib\n  - netstandard\n  namespace: System\n  summary: Subtracts one <xref href=\"System.DateTimeOffset\"></xref> object from another and yields a time interval.\n  remarks: \"The <xref:System.DateTimeOffset.op_Subtraction%2A> method defines the subtraction operation for <xref:System.DateTimeOffset> objects. It enables code such as the following:  \\n  \\n [!code-csharp[System.DateTimeOffset.Operators#14](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.DateTimeOffset.Operators/cs/Operators.cs#14)]\\n [!code-vb[System.DateTimeOffset.Operators#14](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.DateTimeOffset.Operators/vb/Operators.vb#14)]  \\n  \\n Languages that do not support custom operators and operator overloading can call the <xref:System.DateTimeOffset.Subtract%28System.DateTimeOffset%29?displayProperty=fullName> method instead.  \\n  \\n The equivalent method for this operator is <xref:System.DateTimeOffset.Subtract%28System.DateTimeOffset%2CSystem.DateTimeOffset%29?displayProperty=fullName>\"\n  syntax:\n    content: public static TimeSpan op_Subtraction (DateTimeOffset left, DateTimeOffset right);\n    parameters:\n    - id: left\n      type: System.DateTimeOffset\n      description: The minuend.\n    - id: right\n      type: System.DateTimeOffset\n      description: The subtrahend.\n    return:\n      type: System.TimeSpan\n      description: An object that represents the difference between <code>left</code> and <code>right</code>.\n  overload: System.DateTimeOffset.op_Subtraction*\n  exceptions: []\n  version:\n  - netcore-1.0\n  - netcore-1.1\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - netstandard-1.0\n  - netstandard-1.1\n  - netstandard-1.2\n  - netstandard-1.3\n  - netstandard-1.4\n  - netstandard-1.5\n  - netstandard-1.6\n  - netstandard-2.0\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  monikers:\n  - netcore-1.0\n  - netcore-1.1\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - netstandard-1.0\n  - netstandard-1.1\n  - netstandard-1.2\n  - netstandard-1.3\n  - netstandard-1.4\n  - netstandard-1.5\n  - netstandard-1.6\n  - netstandard-2.0\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System/DateTimeOffset.xml\n  ms.technology:\n  - dotnet-standard\n  author: rpetrusha\n  ms.author: ronpet\n  manager: wpickett\n- uid: System.DateTimeOffset.op_Subtraction(System.DateTimeOffset,System.TimeSpan)\n  commentId: M:System.DateTimeOffset.op_Subtraction(System.DateTimeOffset,System.TimeSpan)\n  id: op_Subtraction(System.DateTimeOffset,System.TimeSpan)\n  parent: System.DateTimeOffset\n  langs:\n  - csharp\n  name: op_Subtraction(DateTimeOffset, TimeSpan)\n  nameWithType: DateTimeOffset.op_Subtraction(DateTimeOffset, TimeSpan)\n  fullName: DateTimeOffset.op_Subtraction(DateTimeOffset, TimeSpan)\n  type: Operator\n  assemblies:\n  - System.Runtime\n  - mscorlib\n  - netstandard\n  namespace: System\n  summary: Subtracts a specified time interval from a specified date and time, and yields a new date and time.\n  remarks: \"The <xref:System.DateTimeOffset.op_Subtraction%2A> method defines the subtraction operation for <xref:System.DateTimeOffset> objects. It enables code such as the following:  \\n  \\n [!code-csharp[System.DateTimeOffset.Operators#15](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.DateTimeOffset.Operators/cs/Operators.cs#15)]\\n [!code-vb[System.DateTimeOffset.Operators#15](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.DateTimeOffset.Operators/vb/Operators.vb#15)]  \\n  \\n Languages that do not support custom operators and operator overloading can call the <xref:System.DateTimeOffset.Subtract%28System.TimeSpan%29?displayProperty=fullName> method instead.  \\n  \\n The equivalent method for this operator is <xref:System.DateTimeOffset.Subtract%28System.DateTimeOffset%2CSystem.TimeSpan%29?displayProperty=fullName>\"\n  syntax:\n    content: public static DateTimeOffset op_Subtraction (DateTimeOffset dateTimeOffset, TimeSpan timeSpan);\n    parameters:\n    - id: dateTimeOffset\n      type: System.DateTimeOffset\n      description: The date and time object to subtract from.\n    - id: timeSpan\n      type: System.TimeSpan\n      description: The time interval to subtract.\n    return:\n      type: System.DateTimeOffset\n      description: An object that is equal to the value of <code>dateTimeOffset</code> minus <code>timeSpan</code>.\n  overload: System.DateTimeOffset.op_Subtraction*\n  exceptions:\n  - type: System.ArgumentOutOfRangeException\n    commentId: T:System.ArgumentOutOfRangeException\n    description: The resulting <xref href=\"System.DateTimeOffset\"></xref> value is less than <xref href=\"System.DateTimeOffset.MinValue\"></xref> or greater than <xref href=\"System.DateTimeOffset.MaxValue\"></xref>.\n  version:\n  - netcore-1.0\n  - netcore-1.1\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - netstandard-1.0\n  - netstandard-1.1\n  - netstandard-1.2\n  - netstandard-1.3\n  - netstandard-1.4\n  - netstandard-1.5\n  - netstandard-1.6\n  - netstandard-2.0\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  monikers:\n  - netcore-1.0\n  - netcore-1.1\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - netstandard-1.0\n  - netstandard-1.1\n  - netstandard-1.2\n  - netstandard-1.3\n  - netstandard-1.4\n  - netstandard-1.5\n  - netstandard-1.6\n  - netstandard-2.0\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System/DateTimeOffset.xml\n  ms.technology:\n  - dotnet-standard\n  author: rpetrusha\n  ms.author: ronpet\n  manager: wpickett\n- uid: System.DateTimeOffset.Parse(System.String)\n  commentId: M:System.DateTimeOffset.Parse(System.String)\n  id: Parse(System.String)\n  parent: System.DateTimeOffset\n  langs:\n  - csharp\n  name: Parse(String)\n  nameWithType: DateTimeOffset.Parse(String)\n  fullName: DateTimeOffset.Parse(String)\n  type: Method\n  assemblies:\n  - System.Runtime\n  - mscorlib\n  - netstandard\n  namespace: System\n  summary: Converts the specified string representation of a date, time, and offset to its <xref href=\"System.DateTimeOffset\"></xref> equivalent.\n  remarks: \"<xref:System.DateTimeOffset.Parse%28System.String%29> parses a string with three elements that can appear in any order and are delimited by white space. These three elements are as shown in the following table.  \\n  \\n|Element|Example|  \\n|-------------|-------------|  \\n|\\\\<Date>|\\\"2/10/2007\\\"|  \\n|\\\\<Time>|\\\"1:02:03 PM\\\"|  \\n|\\\\<Offset>|\\\"-7:30\\\"|  \\n  \\n Although each of these elements is optional, \\\\<Offset> cannot appear by itself. It must be provided together with either \\\\<Date> or \\\\<Time>. If \\\\<Date> is missing, its default value is the current day. If \\\\<Time> is missing, its default value is 12:00:00 AM. If \\\\<Date> is present but its year component consists of only two digits, it is converted to a year in the current culture's current calendar based on the value of the <xref:System.Globalization.Calendar.TwoDigitYearMax%2A?displayProperty=fullName> property. If \\\\<Offset> is missing, its default value is the offset of the local time zone. \\\\<Offset> can represent either a negative or a positive offset from Coordinated Universal Time (UTC). In either case, \\\\<Offset> must include a sign symbol.  \\n  \\n The `input` string is parsed by using the formatting information in a <xref:System.Globalization.DateTimeFormatInfo> object that is initialized for the current culture. To parse a string that contains designated formatting that does not necessarily correspond to the formatting of the current culture, use the <xref:System.DateTimeOffset.ParseExact%2A> method and provide a format specifier.\"\n  example:\n  - \"The following example calls the <xref:System.DateTimeOffset.Parse%28System.String%29> method to parse several date and time strings. The example includes output from March 22, 2007, on a system whose culture is en-us.  \\n  \\n [!code-csharp[System.DateTimeOffset.Parse#1](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.DateTimeOffset.Parse/cs/ParseExamples.cs#1)]\\n [!code-vb[System.DateTimeOffset.Parse#1](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.DateTimeOffset.Parse/vb/ParseExamples.vb#1)]\"\n  syntax:\n    content: public static DateTimeOffset Parse (string input);\n    parameters:\n    - id: input\n      type: System.String\n      description: A string that contains a date and time to convert.\n    return:\n      type: System.DateTimeOffset\n      description: An object that is equivalent to the date and time that is contained in <code>input</code>.\n  overload: System.DateTimeOffset.Parse*\n  exceptions:\n  - type: System.ArgumentException\n    commentId: T:System.ArgumentException\n    description: The offset is greater than 14 hours or less than -14 hours.\n  - type: System.ArgumentNullException\n    commentId: T:System.ArgumentNullException\n    description: <code>input</code> is `null`.\n  - type: System.FormatException\n    commentId: T:System.FormatException\n    description: \"<code>input</code> does not contain a valid string representation of a date and time.  \\n  \\n -or-  \\n  \\n <code>input</code> contains the string representation of an offset value without a date or time.\"\n  version:\n  - netcore-1.0\n  - netcore-1.1\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - netstandard-1.0\n  - netstandard-1.1\n  - netstandard-1.2\n  - netstandard-1.3\n  - netstandard-1.4\n  - netstandard-1.5\n  - netstandard-1.6\n  - netstandard-2.0\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  monikers:\n  - netcore-1.0\n  - netcore-1.1\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - netstandard-1.0\n  - netstandard-1.1\n  - netstandard-1.2\n  - netstandard-1.3\n  - netstandard-1.4\n  - netstandard-1.5\n  - netstandard-1.6\n  - netstandard-2.0\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System/DateTimeOffset.xml\n  ms.technology:\n  - dotnet-standard\n  author: rpetrusha\n  ms.author: ronpet\n  manager: wpickett\n- uid: System.DateTimeOffset.Parse(System.String,System.IFormatProvider)\n  commentId: M:System.DateTimeOffset.Parse(System.String,System.IFormatProvider)\n  id: Parse(System.String,System.IFormatProvider)\n  parent: System.DateTimeOffset\n  langs:\n  - csharp\n  name: Parse(String, IFormatProvider)\n  nameWithType: DateTimeOffset.Parse(String, IFormatProvider)\n  fullName: DateTimeOffset.Parse(String, IFormatProvider)\n  type: Method\n  assemblies:\n  - System.Runtime\n  - mscorlib\n  - netstandard\n  namespace: System\n  summary: Converts the specified string representation of a date and time to its <xref href=\"System.DateTimeOffset\"></xref> equivalent using the specified culture-specific format information.\n  remarks: \"This method parses a string with three elements that can appear in any order and are delimited by white space. These three elements are shown in the following table.  \\n  \\n|Element|Example|  \\n|-------------|-------------|  \\n|\\\\<Date>|\\\"2/10/2007\\\"|  \\n|\\\\<Time>|\\\"1:02:03 PM\\\"|  \\n|\\\\<Offset>|\\\"-7:30\\\"|  \\n  \\n Although each of these elements is optional, \\\\<Offset> cannot appear by itself. It must be provided together with either \\\\<Date> or \\\\<Time>. If \\\\<Date> is missing, its default value is the current day. If \\\\<Date> is present but its year component consists of only two digits, it is converted to a year in the `provider` parameter's current calendar based on the value of the <xref:System.Globalization.Calendar.TwoDigitYearMax%2A?displayProperty=fullName> property. If \\\\<Time> is missing, its default value is 12:00:00 AM. If \\\\<Offset> is missing, its default value is the offset of the local time zone. \\\\<Offset> can represent either a negative or a positive offset from Coordinated Universal Time (UTC). In either case, \\\\<Offset> must include a sign symbol.  \\n  \\n The format of these three elements is defined by the `formatProvider` parameter, which can be either of the following:  \\n  \\n-   A <xref:System.Globalization.CultureInfo> object that represents the culture whose formatting is used in the `input` parameter. The <xref:System.Globalization.DateTimeFormatInfo> object returned by the <xref:System.Globalization.CultureInfo.DateTimeFormat%2A?displayProperty=fullName> property defines the formatting used in `input`.  \\n  \\n-   A <xref:System.Globalization.DateTimeFormatInfo> object that defines the format of date and time data.  \\n  \\n If `formatprovider` is `null`, the <xref:System.Globalization.CultureInfo> object that corresponds to the current culture is used.  \\n  \\n The positive or negative sign used in \\\\<Offset> must be either + or -. It is not defined by the <xref:System.Globalization.NumberFormatInfo.PositiveSign%2A> or <xref:System.Globalization.NumberFormatInfo.NegativeSign%2A> properties of the <xref:System.Globalization.NumberFormatInfo> object of the `formatProvider` parameter.\"\n  example:\n  - \"The following example parses date and time strings that are formatted for the fr-fr culture and displays them using the local system's default en-us culture.  \\n  \\n [!code-csharp[System.DateTimeOffset.Parse#2](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.DateTimeOffset.Parse/cs/ParseExamples.cs#2)]\\n [!code-vb[System.DateTimeOffset.Parse#2](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.DateTimeOffset.Parse/vb/ParseExamples.vb#2)]\"\n  syntax:\n    content: public static DateTimeOffset Parse (string input, IFormatProvider formatProvider);\n    parameters:\n    - id: input\n      type: System.String\n      description: A string that contains a date and time to convert.\n    - id: formatProvider\n      type: System.IFormatProvider\n      description: An object that provides culture-specific format information about <code>input</code>.\n    return:\n      type: System.DateTimeOffset\n      description: An object that is equivalent to the date and time that is contained in <code>input</code>, as specified by <code>formatProvider</code>.\n  overload: System.DateTimeOffset.Parse*\n  exceptions:\n  - type: System.ArgumentException\n    commentId: T:System.ArgumentException\n    description: The offset is greater than 14 hours or less than -14 hours.\n  - type: System.ArgumentNullException\n    commentId: T:System.ArgumentNullException\n    description: <code>input</code> is `null`.\n  - type: System.FormatException\n    commentId: T:System.FormatException\n    description: \"<code>input</code> does not contain a valid string representation of a date and time.  \\n  \\n -or-  \\n  \\n <code>input</code> contains the string representation of an offset value without a date or time.\"\n  version:\n  - netcore-1.0\n  - netcore-1.1\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - netstandard-1.0\n  - netstandard-1.1\n  - netstandard-1.2\n  - netstandard-1.3\n  - netstandard-1.4\n  - netstandard-1.5\n  - netstandard-1.6\n  - netstandard-2.0\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  monikers:\n  - netcore-1.0\n  - netcore-1.1\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - netstandard-1.0\n  - netstandard-1.1\n  - netstandard-1.2\n  - netstandard-1.3\n  - netstandard-1.4\n  - netstandard-1.5\n  - netstandard-1.6\n  - netstandard-2.0\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System/DateTimeOffset.xml\n  ms.technology:\n  - dotnet-standard\n  author: rpetrusha\n  ms.author: ronpet\n  manager: wpickett\n- uid: System.DateTimeOffset.Parse(System.String,System.IFormatProvider,System.Globalization.DateTimeStyles)\n  commentId: M:System.DateTimeOffset.Parse(System.String,System.IFormatProvider,System.Globalization.DateTimeStyles)\n  id: Parse(System.String,System.IFormatProvider,System.Globalization.DateTimeStyles)\n  parent: System.DateTimeOffset\n  langs:\n  - csharp\n  name: Parse(String, IFormatProvider, DateTimeStyles)\n  nameWithType: DateTimeOffset.Parse(String, IFormatProvider, DateTimeStyles)\n  fullName: DateTimeOffset.Parse(String, IFormatProvider, DateTimeStyles)\n  type: Method\n  assemblies:\n  - System.Runtime\n  - mscorlib\n  - netstandard\n  namespace: System\n  summary: Converts the specified string representation of a date and time to its <xref href=\"System.DateTimeOffset\"></xref> equivalent using the specified culture-specific format information and formatting style.\n  remarks: \"This method parses a string with three elements that can appear in any order and are delimited by white space. These three elements are shown in the following table.  \\n  \\n|Element|Example|  \\n|-------------|-------------|  \\n|\\\\<Date>|\\\"2/10/2007\\\"|  \\n|\\\\<Time>|\\\"1:02:03 PM\\\"|  \\n|\\\\<Offset>|\\\"-7:30\\\"|  \\n  \\n Although each of these elements is optional, \\\\<Offset> cannot appear by itself. It must be provided together with either \\\\<Date> or \\\\<Time>. If \\\\<Date> is missing, its default value is the current day. If \\\\<Date> is present but its year component consists of only two digits, it is converted to a year in the `provider` parameter's current calendar based on the value of the <xref:System.Globalization.Calendar.TwoDigitYearMax%2A?displayProperty=fullName> property. If \\\\<Time> is missing, its default value is 12:00:00 AM. If \\\\<Offset> is missing, its default value is the offset of the local time zone, or <xref:System.TimeSpan.Zero?displayProperty=fullName> if either the <xref:System.Globalization.DateTimeStyles?displayProperty=fullName> or <xref:System.Globalization.DateTimeStyles?displayProperty=fullName> value is specified in the `styles` parameter. If \\\\<Offset> is present, it can represent either a negative or a positive offset from Coordinated Universal Time (UTC). In either case, \\\\<Offset> must include a sign symbol.  \\n  \\n The format of these three elements is defined by the `formatProvider` parameter, which can be either of the following:  \\n  \\n-   A <xref:System.Globalization.CultureInfo> object that represents the culture whose formatting is used in the `input` parameter. The <xref:System.Globalization.DateTimeFormatInfo> object returned by the <xref:System.Globalization.CultureInfo.DateTimeFormat%2A?displayProperty=fullName> property defines the formatting used in `input`.  \\n  \\n-   A <xref:System.Globalization.DateTimeFormatInfo> object that defines the format of date and time data.  \\n  \\n Each element can also be enclosed by leading or trailing white space, and the \\\\<Date> and \\\\<Time> elements can include inner white space (such as 6:   00:00). Only the \\\\<Offset> component cannot include inner white space.  \\n  \\n If `formatprovider` is `null`, the <xref:System.Globalization.CultureInfo> object that corresponds to the current culture is used.  \\n  \\n The positive or negative sign used in \\\\<Offset> must be either + or -. It is not defined by the <xref:System.Globalization.NumberFormatInfo.PositiveSign%2A> or <xref:System.Globalization.NumberFormatInfo.NegativeSign%2A> properties of the <xref:System.Globalization.NumberFormatInfo> object returned by the `formatProvider` parameter.  \\n  \\n The following table shows the members of the <xref:System.Globalization.DateTimeStyles?displayProperty=fullName> enumeration that are supported.  \\n  \\n|DateTimeStyles member|Description|  \\n|---------------------------|-----------------|  \\n|<xref:System.Globalization.DateTimeStyles.AdjustToUniversal>|Parses the string represented by `input` and, if necessary, converts it to UTC. It is equivalent to parsing a string and then calling the <xref:System.DateTimeOffset.ToUniversalTime%2A?displayProperty=fullName> method of the returned <xref:System.DateTimeOffset> object.|  \\n|<xref:System.Globalization.DateTimeStyles.AllowInnerWhite>|Although valid, this value is ignored. Inner white space is permitted in the \\\\<Date> and \\\\<Time> elements.|  \\n|<xref:System.Globalization.DateTimeStyles.AllowLeadingWhite>|Although valid, this value is ignored. Leading white space is permitted in front of each component in the parsed string.|  \\n|<xref:System.Globalization.DateTimeStyles.AllowTrailingWhite>|Although valid, this value is ignored. Trailing white space is permitted in front of each component in the parsed string.|  \\n|<xref:System.Globalization.DateTimeStyles.AllowWhiteSpaces>|This is the default behavior. It cannot be overridden by supplying a more restrictive <xref:System.Globalization.DateTimeStyles> enumeration value, such as <xref:System.Globalization.DateTimeStyles?displayProperty=fullName>.|  \\n|<xref:System.Globalization.DateTimeStyles.AssumeLocal>|Indicates that, if the `input` parameter lacks an \\\\<Offset> element, the offset of the local time zone should be provided. This is the default behavior of the <xref:System.DateTimeOffset.Parse%2A> method.|  \\n|<xref:System.Globalization.DateTimeStyles.AssumeUniversal>|Indicates that, if the `input` parameter lacks an \\\\<Offset> element, the UTC offset (00:00) should be provided.|  \\n|<xref:System.Globalization.DateTimeStyles.None>|Although valid, this value is ignored and has no effect.|  \\n|<xref:System.Globalization.DateTimeStyles.RoundtripKind>|Because the <xref:System.DateTimeOffset> structure does not include a `Kind` property, this value has no effect.|  \\n  \\n Only the <xref:System.Globalization.DateTimeStyles?displayProperty=fullName> value is not supported. An <xref:System.ArgumentException> is thrown if this value is included in the `styles` parameter.\"\n  example:\n  - \"The following example illustrates the effect of passing the <xref:System.Globalization.DateTimeStyles?displayProperty=fullName>, <xref:System.Globalization.DateTimeStyles?displayProperty=fullName>, and <xref:System.Globalization.DateTimeStyles?displayProperty=fullName> values to the `styles` parameter of the <xref:System.DateTimeOffset.Parse%28System.String%2CSystem.IFormatProvider%2CSystem.Globalization.DateTimeStyles%29> method.  \\n  \\n [!code-csharp[System.DateTimeOffset.Parse#3](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.DateTimeOffset.Parse/cs/ParseExamples.cs#3)]\\n [!code-vb[System.DateTimeOffset.Parse#3](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.DateTimeOffset.Parse/vb/ParseExamples.vb#3)]\"\n  syntax:\n    content: public static DateTimeOffset Parse (string input, IFormatProvider formatProvider, System.Globalization.DateTimeStyles styles);\n    parameters:\n    - id: input\n      type: System.String\n      description: A string that contains a date and time to convert.\n    - id: formatProvider\n      type: System.IFormatProvider\n      description: An object that provides culture-specific format information about <code>input</code>.\n    - id: styles\n      type: System.Globalization.DateTimeStyles\n      description: A bitwise combination of enumeration values that indicates the permitted format of <code>input</code>. A typical value to specify is <xref href=\"System.Globalization.DateTimeStyles.None\"></xref>.\n    return:\n      type: System.DateTimeOffset\n      description: An object that is equivalent to the date and time that is contained in <code>input</code> as specified by <code>formatProvider</code> and <code>styles</code>.\n  overload: System.DateTimeOffset.Parse*\n  exceptions:\n  - type: System.ArgumentException\n    commentId: T:System.ArgumentException\n    description: \"The offset is greater than 14 hours or less than -14 hours.  \\n  \\n -or-  \\n  \\n <code>styles</code> is not a valid <xref href=\\\"System.Globalization.DateTimeStyles\\\"></xref> value.  \\n  \\n -or-  \\n  \\n <code>styles</code> includes an unsupported <xref href=\\\"System.Globalization.DateTimeStyles\\\"></xref> value.  \\n  \\n -or-  \\n  \\n <code>styles</code> includes <xref href=\\\"System.Globalization.DateTimeStyles\\\"></xref> values that cannot be used together.\"\n  - type: System.ArgumentNullException\n    commentId: T:System.ArgumentNullException\n    description: <code>input</code> is `null`.\n  - type: System.FormatException\n    commentId: T:System.FormatException\n    description: \"<code>input</code> does not contain a valid string representation of a date and time.  \\n  \\n -or-  \\n  \\n <code>input</code> contains the string representation of an offset value without a date or time.\"\n  version:\n  - netcore-1.0\n  - netcore-1.1\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - netstandard-1.0\n  - netstandard-1.1\n  - netstandard-1.2\n  - netstandard-1.3\n  - netstandard-1.4\n  - netstandard-1.5\n  - netstandard-1.6\n  - netstandard-2.0\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  monikers:\n  - netcore-1.0\n  - netcore-1.1\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - netstandard-1.0\n  - netstandard-1.1\n  - netstandard-1.2\n  - netstandard-1.3\n  - netstandard-1.4\n  - netstandard-1.5\n  - netstandard-1.6\n  - netstandard-2.0\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System/DateTimeOffset.xml\n  ms.technology:\n  - dotnet-standard\n  author: rpetrusha\n  ms.author: ronpet\n  manager: wpickett\n- uid: System.DateTimeOffset.ParseExact(System.String,System.String,System.IFormatProvider)\n  commentId: M:System.DateTimeOffset.ParseExact(System.String,System.String,System.IFormatProvider)\n  id: ParseExact(System.String,System.String,System.IFormatProvider)\n  parent: System.DateTimeOffset\n  langs:\n  - csharp\n  name: ParseExact(String, String, IFormatProvider)\n  nameWithType: DateTimeOffset.ParseExact(String, String, IFormatProvider)\n  fullName: DateTimeOffset.ParseExact(String, String, IFormatProvider)\n  type: Method\n  assemblies:\n  - System.Runtime\n  - mscorlib\n  - netstandard\n  namespace: System\n  summary: Converts the specified string representation of a date and time to its <xref href=\"System.DateTimeOffset\"></xref> equivalent using the specified format and culture-specific format information. The format of the string representation must match the specified format exactly.\n  remarks: \"The <xref:System.DateTimeOffset.ParseExact%28System.String%2CSystem.String%2CSystem.IFormatProvider%29> method parses the string representation of a date, which must be in the format defined by the `format` parameter. It also requires that the \\\\<Date>, \\\\<Time>, and \\\\<Offset> elements of the string representation of a date and time appear in the order specified by `format`. If the `input` string does not match this `format` parameter, the method throws a <xref:System.FormatException>.  In contrast, the <xref:System.DateTimeOffset.Parse%28System.String%2CSystem.IFormatProvider%29?displayProperty=fullName> method parses the string representation of a date in any one of the formats recognized by the format provider's <xref:System.Globalization.DateTimeFormatInfo> object. <xref:System.DateTimeOffset.Parse%2A> also allows the \\\\<Date>, \\\\<Time>, and \\\\<Offset> elements of the string representation of a date and time to appear in any order.  \\n  \\n The `format` parameter is a string that contains either a single standard format specifier or one or more custom format specifiers that define the required format of the `input` parameter. For details about valid formatting codes, see [Standard Date and Time Format Strings](~/docs/standard/base-types/standard-date-and-time-format-strings.md) and [Custom Date and Time Format Strings](~/docs/standard/base-types/custom-date-and-time-format-strings.md). If `format` includes the `z`, `zz`, or `zzz` custom format specifiers to indicate that an offset must be present in `input`, that offset must include either a negative sign or a positive sign. If the sign is missing, the method throws a <xref:System.FormatException>.  \\n  \\n If `format` requires that `input` contain a date but not a time, the resulting <xref:System.DateTimeOffset> object is assigned a time of midnight (0:00:00). If `format` requires that `input` contain a time but not a date, the resulting <xref:System.DateTimeOffset> object is assigned the current date on the local system. If `format` does not require that `input` contain an offset, the resulting <xref:System.DateTimeOffset> object is assigned the time zone offset of the local system.  \\n  \\n The particular date and time symbols and strings used in `input` are defined by the `formatProvider` parameter, as is the precise format of `input` if `format` is a standard format specifier string. The `formatProvider` parameter can be either of the following:  \\n  \\n-   A <xref:System.Globalization.CultureInfo> object that represents the culture based on which `input` is interpreted. The <xref:System.Globalization.DateTimeFormatInfo> object returned by its <xref:System.Globalization.CultureInfo.DateTimeFormat%2A> property defines the symbols and formatting in `input`.  \\n  \\n-   A <xref:System.Globalization.DateTimeFormatInfo> object that defines the format of date and time data.  \\n  \\n If `formatprovider` is `null`, the <xref:System.Globalization.CultureInfo> object that corresponds to the current culture is used.\"\n  example:\n  - \"The following example uses the <xref:System.DateTimeOffset.ParseExact%28System.String%2CSystem.String%2CSystem.IFormatProvider%29?displayProperty=fullName> method with standard and custom format specifiers and the invariant culture to parse several date and time strings.  \\n  \\n [!code-csharp[System.DateTimeOffset.ParseExact#1](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.DateTimeOffset.ParseExact/cs/ParseExact.cs#1)]\\n [!code-vb[System.DateTimeOffset.ParseExact#1](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.DateTimeOffset.ParseExact/vb/ParseExact.vb#1)]\"\n  syntax:\n    content: public static DateTimeOffset ParseExact (string input, string format, IFormatProvider formatProvider);\n    parameters:\n    - id: input\n      type: System.String\n      description: A string that contains a date and time to convert.\n    - id: format\n      type: System.String\n      description: A format specifier that defines the expected format of <code>input</code>.\n    - id: formatProvider\n      type: System.IFormatProvider\n      description: An object that supplies culture-specific formatting information about <code>input</code>.\n    return:\n      type: System.DateTimeOffset\n      description: An object that is equivalent to the date and time that is contained in <code>input</code> as specified by <code>format</code> and <code>formatProvider</code>.\n  overload: System.DateTimeOffset.ParseExact*\n  exceptions:\n  - type: System.ArgumentException\n    commentId: T:System.ArgumentException\n    description: The offset is greater than 14 hours or less than -14 hours.\n  - type: System.ArgumentNullException\n    commentId: T:System.ArgumentNullException\n    description: \"<code>input</code> is `null`.  \\n  \\n -or-  \\n  \\n <code>format</code> is `null`.\"\n  - type: System.FormatException\n    commentId: T:System.FormatException\n    description: \"<code>input</code> is an empty string (\\\"\\\").  \\n  \\n -or-  \\n  \\n <code>input</code> does not contain a valid string representation of a date and time.  \\n  \\n -or-  \\n  \\n <code>format</code> is an empty string.  \\n  \\n -or-  \\n  \\n The hour component and the AM/PM designator in <code>input</code> do not agree.\"\n  version:\n  - netcore-1.0\n  - netcore-1.1\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - netstandard-1.0\n  - netstandard-1.1\n  - netstandard-1.2\n  - netstandard-1.3\n  - netstandard-1.4\n  - netstandard-1.5\n  - netstandard-1.6\n  - netstandard-2.0\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  monikers:\n  - netcore-1.0\n  - netcore-1.1\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - netstandard-1.0\n  - netstandard-1.1\n  - netstandard-1.2\n  - netstandard-1.3\n  - netstandard-1.4\n  - netstandard-1.5\n  - netstandard-1.6\n  - netstandard-2.0\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System/DateTimeOffset.xml\n  ms.technology:\n  - dotnet-standard\n  author: rpetrusha\n  ms.author: ronpet\n  manager: wpickett\n- uid: System.DateTimeOffset.ParseExact(System.String,System.String,System.IFormatProvider,System.Globalization.DateTimeStyles)\n  commentId: M:System.DateTimeOffset.ParseExact(System.String,System.String,System.IFormatProvider,System.Globalization.DateTimeStyles)\n  id: ParseExact(System.String,System.String,System.IFormatProvider,System.Globalization.DateTimeStyles)\n  parent: System.DateTimeOffset\n  langs:\n  - csharp\n  name: ParseExact(String, String, IFormatProvider, DateTimeStyles)\n  nameWithType: DateTimeOffset.ParseExact(String, String, IFormatProvider, DateTimeStyles)\n  fullName: DateTimeOffset.ParseExact(String, String, IFormatProvider, DateTimeStyles)\n  type: Method\n  assemblies:\n  - System.Runtime\n  - mscorlib\n  - netstandard\n  namespace: System\n  summary: Converts the specified string representation of a date and time to its <xref href=\"System.DateTimeOffset\"></xref> equivalent using the specified format, culture-specific format information, and style. The format of the string representation must match the specified format exactly.\n  remarks: \"The <xref:System.DateTimeOffset.ParseExact%28System.String%2CSystem.String%2CSystem.IFormatProvider%2CSystem.Globalization.DateTimeStyles%29?displayProperty=fullName> method parses the string representation of a date, which must be in the format defined by the `format` parameter. It also requires that the \\\\<Date>, \\\\<Time>, and \\\\<Offset> elements of the string representation of a date and time appear in the order specified by `format`. If the `input` string does not match the pattern of the `format` parameter, with any variations defined by the `styles` parameter, the method throws a <xref:System.FormatException>.  In contrast, the <xref:System.DateTimeOffset.Parse%28System.String%2CSystem.IFormatProvider%2CSystem.Globalization.DateTimeStyles%29?displayProperty=fullName> method parses the string representation of a date in any one of the formats recognized by the format provider's <xref:System.Globalization.DateTimeFormatInfo> object. <xref:System.DateTimeOffset.Parse%2A> also allows the \\\\<Date>, \\\\<Time>, and \\\\<Offset> elements of the string representation of a date and time to appear in any order.  \\n  \\n The `format` parameter is a string that contains either a single standard format specifier or one or more custom format specifiers that define the required pattern of the `input` parameter. For details about valid formatting codes, see [Standard Date and Time Format Strings](~/docs/standard/base-types/standard-date-and-time-format-strings.md) and [Custom Date and Time Format Strings](~/docs/standard/base-types/custom-date-and-time-format-strings.md). If `format` includes the `z`, `zz`, or `zzz` custom format specifiers to indicate that an offset must be present in `input`, that offset must include either a negative sign or a positive sign. If the sign is missing, the method throws a <xref:System.FormatException>.  \\n  \\n If `format` requires that `input` contain a date but not a time, the resulting <xref:System.DateTimeOffset> object is assigned a time of midnight (0:00:00). If `format` requires that `input` contain a time but not a date, the resulting <xref:System.DateTimeOffset> object is assigned the current date on the local system. If `format` does not require that `input` contain an offset, the offset of the resulting <xref:System.DateTimeOffset> object depends on the value of the `styles` parameter. If `styles` includes <xref:System.Globalization.DateTimeStyles.AssumeLocal>, the offset of the local time zone is assigned to the <xref:System.DateTimeOffset> object. If `styles` includes <xref:System.Globalization.DateTimeStyles.AssumeUniversal>, the Coordinated Universal Time (UTC) offset, or +00:00, is assigned to the <xref:System.DateTimeOffset> object. If neither value is specified, the offset of the local time zone is used.  \\n  \\n The particular date and time symbols and strings used in `input` are defined by the `formatProvider` parameter. The same is true for the precise format of `input`, if `format` is a standard format specifier string. The `formatProvider` parameter can be either of the following:  \\n  \\n-   A <xref:System.Globalization.CultureInfo> object that represents the culture based on which `input` is interpreted. The <xref:System.Globalization.DateTimeFormatInfo> object returned by the <xref:System.Globalization.CultureInfo.DateTimeFormat%2A?displayProperty=fullName> property defines the symbols and formatting in `input`.  \\n  \\n-   A <xref:System.Globalization.DateTimeFormatInfo> object that defines the format of date and time data.  \\n  \\n If `formatprovider` is `null`, the <xref:System.Globalization.CultureInfo> object that corresponds to the current culture is used.  \\n  \\n The `styles` parameter defines whether white space is allowed in the input string, indicates how strings without an explicit offset component are parsed, and supports UTC conversion as part of the parsing operation. All members of the <xref:System.Globalization.DateTimeStyles> enumeration are supported except <xref:System.Globalization.DateTimeStyles.NoCurrentDateDefault>. The following table lists the effect of each supported member.  \\n  \\n|`DateTimeStyles` member|Behavior|  \\n|-----------------------------|--------------|  \\n|<xref:System.Globalization.DateTimeStyles.AdjustToUniversal>|Parses `input` and, if necessary, converts it to UTC. It is equivalent to parsing a string, and then calling the <xref:System.DateTimeOffset.ToUniversalTime%2A?displayProperty=fullName> method of the returned <xref:System.DateTimeOffset> object.|  \\n|<xref:System.Globalization.DateTimeStyles.AssumeLocal>|If `format` does not require that `input` contain an offset value, the returned <xref:System.DateTimeOffset> object is given the offset of the local time zone. This is the default value.|  \\n|<xref:System.Globalization.DateTimeStyles.AssumeUniversal>|If `format` does not require that `input` contain an offset value, the returned <xref:System.DateTimeOffset> object is given the UTC offset (+00:00).|  \\n|<xref:System.Globalization.DateTimeStyles.AllowInnerWhite>|Allows `input` to include inner white space not specified by `format`. Extra white space can appear between date and time components and within individual components, and is ignored when parsing the string.|  \\n|<xref:System.Globalization.DateTimeStyles.AllowLeadingWhite>|Allows `input` to include leading spaces not specified by `format`. These are ignored when parsing the string.|  \\n|<xref:System.Globalization.DateTimeStyles.AllowTrailingWhite>|Allows `input` to include trailing spaces not specified by `format`. These are ignored when parsing the string.|  \\n|<xref:System.Globalization.DateTimeStyles.AllowWhiteSpaces>|Allows `input` to include leading, trailing, and inner spaces not specified by `format`. All extra white-space characters not specified in `format` are ignored when parsing the string.|  \\n|<xref:System.Globalization.DateTimeStyles.None>|Indicates that additional white space is not permitted in `input`. White space must appear exactly as specified in `format`. This is the default behavior.|  \\n|<xref:System.Globalization.DateTimeStyles.RoundtripKind>|Has no effect because the <xref:System.DateTimeOffset> structure does not include a `Kind` property.|\"\n  example:\n  - \"The following example uses the <xref:System.DateTimeOffset.ParseExact%28System.String%2CSystem.String%2CSystem.IFormatProvider%2CSystem.Globalization.DateTimeStyles%29?displayProperty=fullName> method with standard and custom format specifiers, the invariant culture, and various <xref:System.Globalization.DateTimeStyles> values to parse several date and time strings.  \\n  \\n [!code-csharp[System.DateTimeOffset.ParseExact#2](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.DateTimeOffset.ParseExact/cs/ParseExact.cs#2)]\\n [!code-vb[System.DateTimeOffset.ParseExact#2](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.DateTimeOffset.ParseExact/vb/ParseExact.vb#2)]\"\n  syntax:\n    content: public static DateTimeOffset ParseExact (string input, string format, IFormatProvider formatProvider, System.Globalization.DateTimeStyles styles);\n    parameters:\n    - id: input\n      type: System.String\n      description: A string that contains a date and time to convert.\n    - id: format\n      type: System.String\n      description: A format specifier that defines the expected format of <code>input</code>.\n    - id: formatProvider\n      type: System.IFormatProvider\n      description: An object that supplies culture-specific formatting information about <code>input</code>.\n    - id: styles\n      type: System.Globalization.DateTimeStyles\n      description: A bitwise combination of enumeration values that indicates the permitted format of <code>input</code>.\n    return:\n      type: System.DateTimeOffset\n      description: An object that is equivalent to the date and time that is contained in the <code>input</code> parameter, as specified by the <code>format</code>, <code>formatProvider</code>, and <code>styles</code> parameters.\n  overload: System.DateTimeOffset.ParseExact*\n  exceptions:\n  - type: System.ArgumentException\n    commentId: T:System.ArgumentException\n    description: \"The offset is greater than 14 hours or less than -14 hours.  \\n  \\n -or-  \\n  \\n The <code>styles</code> parameter includes an unsupported value.  \\n  \\n -or-  \\n  \\n The <code>styles</code> parameter contains <xref href=\\\"System.Globalization.DateTimeStyles\\\"></xref> values that cannot be used together.\"\n  - type: System.ArgumentNullException\n    commentId: T:System.ArgumentNullException\n    description: \"<code>input</code> is `null`.  \\n  \\n -or-  \\n  \\n <code>format</code> is `null`.\"\n  - type: System.FormatException\n    commentId: T:System.FormatException\n    description: \"<code>input</code> is an empty string (\\\"\\\").  \\n  \\n -or-  \\n  \\n <code>input</code> does not contain a valid string representation of a date and time.  \\n  \\n -or-  \\n  \\n <code>format</code> is an empty string.  \\n  \\n -or-  \\n  \\n The hour component and the AM/PM designator in <code>input</code> do not agree.\"\n  version:\n  - netcore-1.0\n  - netcore-1.1\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - netstandard-1.0\n  - netstandard-1.1\n  - netstandard-1.2\n  - netstandard-1.3\n  - netstandard-1.4\n  - netstandard-1.5\n  - netstandard-1.6\n  - netstandard-2.0\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  monikers:\n  - netcore-1.0\n  - netcore-1.1\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - netstandard-1.0\n  - netstandard-1.1\n  - netstandard-1.2\n  - netstandard-1.3\n  - netstandard-1.4\n  - netstandard-1.5\n  - netstandard-1.6\n  - netstandard-2.0\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System/DateTimeOffset.xml\n  ms.technology:\n  - dotnet-standard\n  author: rpetrusha\n  ms.author: ronpet\n  manager: wpickett\n- uid: System.DateTimeOffset.ParseExact(System.String,System.String[],System.IFormatProvider,System.Globalization.DateTimeStyles)\n  commentId: M:System.DateTimeOffset.ParseExact(System.String,System.String[],System.IFormatProvider,System.Globalization.DateTimeStyles)\n  id: ParseExact(System.String,System.String[],System.IFormatProvider,System.Globalization.DateTimeStyles)\n  parent: System.DateTimeOffset\n  langs:\n  - csharp\n  name: ParseExact(String, String[], IFormatProvider, DateTimeStyles)\n  nameWithType: DateTimeOffset.ParseExact(String, String[], IFormatProvider, DateTimeStyles)\n  fullName: DateTimeOffset.ParseExact(String, String[], IFormatProvider, DateTimeStyles)\n  type: Method\n  assemblies:\n  - System.Runtime\n  - mscorlib\n  - netstandard\n  namespace: System\n  summary: Converts the specified string representation of a date and time to its <xref href=\"System.DateTimeOffset\"></xref> equivalent using the specified formats, culture-specific format information, and style. The format of the string representation must match one of the specified formats exactly.\n  remarks: \"The <xref:System.DateTimeOffset.ParseExact%28System.String%2CSystem.String%5B%5D%2CSystem.IFormatProvider%2CSystem.Globalization.DateTimeStyles%29?displayProperty=fullName> method parses the string representation of a date that matches any one of the patterns assigned to the `formats` parameter. If the `input` string does not match any one of these patterns with any of the variations defined by the `styles` parameter, the method throws a <xref:System.FormatException>. Aside from comparing `input` to multiple formatting patterns, this overload behaves identically to the <xref:System.DateTimeOffset.ParseExact%28System.String%2CSystem.String%2CSystem.IFormatProvider%2CSystem.Globalization.DateTimeStyles%29?displayProperty=fullName> method.  \\n  \\n The `formats` parameter is a string array whose elements contain either a single standard format specifier or one or more custom format specifiers that define the possible pattern of the `input` parameter. When the method is called, `input` must match one of these patterns. For details about valid formatting codes, see [Standard Date and Time Format Strings](~/docs/standard/base-types/standard-date-and-time-format-strings.md) and [Custom Date and Time Format Strings](~/docs/standard/base-types/custom-date-and-time-format-strings.md). If the matched element in `formats` includes the `z`, `zz`, or `zzz` custom format specifiers to indicate that an offset must be present in `input`, that offset must include either a negative sign or a positive sign. If the sign is missing, the method throws a <xref:System.FormatException>.  \\n  \\n> [!IMPORTANT]\\n>  Using the `formats` parameter of this overload to specify multiple formats can help reduce the frustration many users experience when they enter dates and times. In particular, the ability to define multiple input patterns enables an application to handle date and time representations that can either include or lack leading zeros in months, days, hours, minutes, and seconds. The example provides an illustration of this.  \\n  \\n If the matched element in `formats` requires that `input` contain a date but not a time, the resulting <xref:System.DateTimeOffset> object is assigned a time of midnight (0:00:00). If the matched element in `formats` requires that `input` contain a time but not a date, the resulting <xref:System.DateTimeOffset> object is assigned the current date on the local system. If the matched element in `formats` does not require that `input` contain an offset, the offset of the resulting <xref:System.DateTimeOffset> object depends on the value of the `styles` parameter. If `styles` includes <xref:System.Globalization.DateTimeStyles.AssumeLocal>, the offset of the local time zone is assigned to the <xref:System.DateTimeOffset> object. If `styles` includes <xref:System.Globalization.DateTimeStyles.AssumeUniversal>, the Coordinated Universal Time (UTC) offset, or +00:00, is assigned to the <xref:System.DateTimeOffset> object. If neither value is specified, the offset of the local time zone is used.  \\n  \\n The particular date and time symbols and strings used in `input` are defined by the `formatProvider` parameter. The same is true for the precise format of `input`, if the matching element of `formats` is a standard format specifier string. The `formatProvider` parameter can be either of the following:  \\n  \\n-   A <xref:System.Globalization.CultureInfo> object that represents the culture based on which `input` is interpreted. The <xref:System.Globalization.DateTimeFormatInfo> object returned by the <xref:System.Globalization.CultureInfo.DateTimeFormat%2A?displayProperty=fullName> property defines the symbols and formatting in `input`.  \\n  \\n-   A <xref:System.Globalization.DateTimeFormatInfo> object that defines the format of date and time data.  \\n  \\n If `formatprovider` is `null`, the <xref:System.Globalization.CultureInfo> object that corresponds to the current culture is used.  \\n  \\n The `styles` parameter defines whether white space is permitted in the input string, indicates how strings without an explicit offset component are parsed, and supports UTC conversion as part of the parsing operation. All members of the <xref:System.Globalization.DateTimeStyles> enumeration are supported except <xref:System.Globalization.DateTimeStyles.NoCurrentDateDefault>. The following table lists the effect of each supported member.  \\n  \\n|`DateTimeStyles` member|Behavior|  \\n|-----------------------------|--------------|  \\n|<xref:System.Globalization.DateTimeStyles.AdjustToUniversal>|Parses `input` and, if necessary, converts it to UTC. It is equivalent to parsing a string, and then calling the <xref:System.DateTimeOffset.ToUniversalTime%2A?displayProperty=fullName> method of the returned <xref:System.DateTimeOffset> object.|  \\n|<xref:System.Globalization.DateTimeStyles.AssumeLocal>|If the matched element in `formats` does not require that `input` contain an offset value, the returned <xref:System.DateTimeOffset> object is given the offset of the local time zone. This is the default value.|  \\n|<xref:System.Globalization.DateTimeStyles.AssumeUniversal>|If the matched element in `formats` does not require that `input` contain an offset value, the returned <xref:System.DateTimeOffset> object is given the UTC offset (+00:00).|  \\n|<xref:System.Globalization.DateTimeStyles.AllowInnerWhite>|Allows `input` to include inner white space not specified by `format`. Extra white space can appear between date and time components and within individual components (except the offset), and is ignored when parsing the string.|  \\n|<xref:System.Globalization.DateTimeStyles.AllowLeadingWhite>|Allows `input` to include leading spaces not specified by `formats`. These are ignored when parsing the string.|  \\n|<xref:System.Globalization.DateTimeStyles.AllowTrailingWhite>|Allows `input` to include trailing spaces not specified by `formats`. These are ignored when parsing the string.|  \\n|<xref:System.Globalization.DateTimeStyles.AllowWhiteSpaces>|Allows `input` to include leading, trailing, and inner spaces not specified by `formats`. All extra white-space characters not specified in the matched element in `formats` are ignored when parsing the string.|  \\n|<xref:System.Globalization.DateTimeStyles.None>|Indicates that additional white space is not permitted in `input`. White space must appear exactly as specified in a particular element of `formats` for a match to occur. This is the default behavior.|  \\n|<xref:System.Globalization.DateTimeStyles.RoundtripKind>|Has no effect because the <xref:System.DateTimeOffset> structure does not include a `Kind` property.|\"\n  example:\n  - \"The following example defines multiple input formats for the string representation of a date and time and offset value, and then passes the string that is entered by the user to the <xref:System.DateTimeOffset.ParseExact%28System.String%2CSystem.String%5B%5D%2CSystem.IFormatProvider%2CSystem.Globalization.DateTimeStyles%29?displayProperty=fullName> method.  \\n  \\n [!code-csharp[System.DateTimeOffset.ParseExact#3](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.DateTimeOffset.ParseExact/cs/ParseExact.cs#3)]\\n [!code-vb[System.DateTimeOffset.ParseExact#3](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.DateTimeOffset.ParseExact/vb/ParseExact.vb#3)]\"\n  syntax:\n    content: public static DateTimeOffset ParseExact (string input, string[] formats, IFormatProvider formatProvider, System.Globalization.DateTimeStyles styles);\n    parameters:\n    - id: input\n      type: System.String\n      description: A string that contains a date and time to convert.\n    - id: formats\n      type: System.String[]\n      description: An array of format specifiers that define the expected formats of <code>input</code>.\n    - id: formatProvider\n      type: System.IFormatProvider\n      description: An object that supplies culture-specific formatting information about <code>input</code>.\n    - id: styles\n      type: System.Globalization.DateTimeStyles\n      description: A bitwise combination of enumeration values that indicates the permitted format of <code>input</code>.\n    return:\n      type: System.DateTimeOffset\n      description: An object that is equivalent to the date and time that is contained in the <code>input</code> parameter, as specified by the <code>formats</code>, <code>formatProvider</code>, and <code>styles</code> parameters.\n  overload: System.DateTimeOffset.ParseExact*\n  exceptions:\n  - type: System.ArgumentException\n    commentId: T:System.ArgumentException\n    description: \"The offset is greater than 14 hours or less than -14 hours.  \\n  \\n -or-  \\n  \\n <code>styles</code> includes an unsupported value.  \\n  \\n -or-  \\n  \\n The <code>styles</code> parameter contains <xref href=\\\"System.Globalization.DateTimeStyles\\\"></xref> values that cannot be used together.\"\n  - type: System.ArgumentNullException\n    commentId: T:System.ArgumentNullException\n    description: <code>input</code> is `null`.\n  - type: System.FormatException\n    commentId: T:System.FormatException\n    description: \"<code>input</code> is an empty string (\\\"\\\").  \\n  \\n -or-  \\n  \\n <code>input</code> does not contain a valid string representation of a date and time.  \\n  \\n -or-  \\n  \\n No element of <code>formats</code> contains a valid format specifier.  \\n  \\n -or-  \\n  \\n The hour component and the AM/PM designator in <code>input</code> do not agree.\"\n  version:\n  - netcore-1.0\n  - netcore-1.1\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - netstandard-1.0\n  - netstandard-1.1\n  - netstandard-1.2\n  - netstandard-1.3\n  - netstandard-1.4\n  - netstandard-1.5\n  - netstandard-1.6\n  - netstandard-2.0\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  monikers:\n  - netcore-1.0\n  - netcore-1.1\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - netstandard-1.0\n  - netstandard-1.1\n  - netstandard-1.2\n  - netstandard-1.3\n  - netstandard-1.4\n  - netstandard-1.5\n  - netstandard-1.6\n  - netstandard-2.0\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System/DateTimeOffset.xml\n  ms.technology:\n  - dotnet-standard\n  author: rpetrusha\n  ms.author: ronpet\n  manager: wpickett\n- uid: System.DateTimeOffset.Second\n  commentId: P:System.DateTimeOffset.Second\n  id: Second\n  parent: System.DateTimeOffset\n  langs:\n  - csharp\n  name: Second\n  nameWithType: DateTimeOffset.Second\n  fullName: DateTimeOffset.Second\n  type: Property\n  assemblies:\n  - System.Runtime\n  - mscorlib\n  - netstandard\n  namespace: System\n  summary: Gets the second component of the clock time represented by the current <xref href=\"System.DateTimeOffset\"></xref> object.\n  remarks: \"The <xref:System.DateTimeOffset.Second%2A> property is not affected by the value of the <xref:System.DateTimeOffset.Offset%2A> property.  \\n  \\n You can also create a string representation of a <xref:System.DateTimeOffset> object's second component by calling the <xref:System.DateTimeOffset.ToString%2A> method with the \\\"s\\\", or \\\"ss\\\" custom format specifiers.\"\n  example:\n  - \"The following example displays the second component of a <xref:System.DateTimeOffset> object in three different ways:  \\n  \\n-   By retrieving the value of the <xref:System.DateTimeOffset.Second%2A> property.  \\n  \\n-   By calling the <xref:System.DateTimeOffset.ToString%28System.String%29> method with the \\\"s\\\" format specifier.  \\n  \\n-   By calling the <xref:System.DateTimeOffset.ToString%28System.String%29> method with the \\\"ss\\\" format specifier.  \\n  \\n [!code-csharp[System.DateTimeOffset.Properties#14](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.DateTimeOffset.Properties/cs/Properties.cs#14)]\\n [!code-vb[System.DateTimeOffset.Properties#14](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.DateTimeOffset.Properties/vb/Properties.vb#14)]\"\n  syntax:\n    content: public int Second { get; }\n    return:\n      type: System.Int32\n      description: The second component of the <xref href=\"System.DateTimeOffset\"></xref> object, expressed as an integer value between 0 and 59.\n  overload: System.DateTimeOffset.Second*\n  exceptions: []\n  version:\n  - netcore-1.0\n  - netcore-1.1\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - netstandard-1.0\n  - netstandard-1.1\n  - netstandard-1.2\n  - netstandard-1.3\n  - netstandard-1.4\n  - netstandard-1.5\n  - netstandard-1.6\n  - netstandard-2.0\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  monikers:\n  - netcore-1.0\n  - netcore-1.1\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - netstandard-1.0\n  - netstandard-1.1\n  - netstandard-1.2\n  - netstandard-1.3\n  - netstandard-1.4\n  - netstandard-1.5\n  - netstandard-1.6\n  - netstandard-2.0\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System/DateTimeOffset.xml\n  ms.technology:\n  - dotnet-standard\n  author: rpetrusha\n  ms.author: ronpet\n  manager: wpickett\n- uid: System.DateTimeOffset.Subtract(System.TimeSpan)\n  commentId: M:System.DateTimeOffset.Subtract(System.TimeSpan)\n  id: Subtract(System.TimeSpan)\n  parent: System.DateTimeOffset\n  langs:\n  - csharp\n  name: Subtract(TimeSpan)\n  nameWithType: DateTimeOffset.Subtract(TimeSpan)\n  fullName: DateTimeOffset.Subtract(TimeSpan)\n  type: Method\n  assemblies:\n  - System.Runtime\n  - mscorlib\n  - netstandard\n  namespace: System\n  summary: Subtracts a specified time interval from the current <xref href=\"System.DateTimeOffset\"></xref> object.\n  remarks: \"You can use the <xref:System.DateTimeOffset.Subtract%2A> method to subtract more than one kind of time interval (days, hours, minutes, seconds, or milliseconds) in a single operation. Its behavior is identical to the <xref:System.DateTimeOffset.op_Subtraction%28System.DateTimeOffset%2CSystem.TimeSpan%29> method, which defines the subtraction operator. The <xref:System.DateTimeOffset> structure also supports specialized addition methods (such as <xref:System.DateTimeOffset.AddDays%2A>, <xref:System.DateTimeOffset.AddHours%2A>, and <xref:System.DateTimeOffset.AddMinutes%2A>) that allow you to perform subtraction by assigning a negative value to the method parameter.  \\n  \\n> [!NOTE]\\n>  This method returns a new <xref:System.DateTimeOffset> object. It does not modify the value of the current object by adding `timeSpan` to its date and time.  \\n  \\n The <xref:System.DateTimeOffset.Subtract%2A> method does not affect the value of the <xref:System.DateTimeOffset> object's <xref:System.DateTimeOffset.Offset%2A> property. The returned <xref:System.DateTimeOffset> object has the same offset as the original object.  \\n  \\n Because the current <xref:System.DateTimeOffset> object does not represent the date and time in a specific time zone, the <xref:System.DateTimeOffset.Subtract%28System.TimeSpan%29> method does not consider a particular time zone's adjustment rules when it performs the subtraction.\"\n  example:\n  - \"The following example illustrates subtraction that uses the <xref:System.DateTimeOffset.Subtract%2A> method.  \\n  \\n [!code-csharp[System.DateTimeOffset.Methods#14](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.DateTimeOffset.Methods/cs/Methods.cs#14)]\\n [!code-vb[System.DateTimeOffset.Methods#14](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.DateTimeOffset.Methods/vb/Methods.vb#14)]\"\n  syntax:\n    content: public DateTimeOffset Subtract (TimeSpan value);\n    parameters:\n    - id: value\n      type: System.TimeSpan\n      description: The time interval to subtract.\n    return:\n      type: System.DateTimeOffset\n      description: An object that is equal to the date and time represented by the current <xref href=\"System.DateTimeOffset\"></xref> object, minus the time interval represented by <code>value</code>.\n  overload: System.DateTimeOffset.Subtract*\n  exceptions:\n  - type: System.ArgumentOutOfRangeException\n    commentId: T:System.ArgumentOutOfRangeException\n    description: \"The resulting <xref href=\\\"System.DateTimeOffset\\\"></xref> value is less than <xref href=\\\"System.DateTimeOffset.MinValue\\\"></xref>.  \\n  \\n -or-  \\n  \\n The resulting <xref href=\\\"System.DateTimeOffset\\\"></xref> value is greater than <xref href=\\\"System.DateTimeOffset.MaxValue\\\"></xref>.\"\n  version:\n  - netcore-1.0\n  - netcore-1.1\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - netstandard-1.0\n  - netstandard-1.1\n  - netstandard-1.2\n  - netstandard-1.3\n  - netstandard-1.4\n  - netstandard-1.5\n  - netstandard-1.6\n  - netstandard-2.0\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  monikers:\n  - netcore-1.0\n  - netcore-1.1\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - netstandard-1.0\n  - netstandard-1.1\n  - netstandard-1.2\n  - netstandard-1.3\n  - netstandard-1.4\n  - netstandard-1.5\n  - netstandard-1.6\n  - netstandard-2.0\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System/DateTimeOffset.xml\n  ms.technology:\n  - dotnet-standard\n  author: rpetrusha\n  ms.author: ronpet\n  manager: wpickett\n- uid: System.DateTimeOffset.Subtract(System.DateTimeOffset)\n  commentId: M:System.DateTimeOffset.Subtract(System.DateTimeOffset)\n  id: Subtract(System.DateTimeOffset)\n  parent: System.DateTimeOffset\n  langs:\n  - csharp\n  name: Subtract(DateTimeOffset)\n  nameWithType: DateTimeOffset.Subtract(DateTimeOffset)\n  fullName: DateTimeOffset.Subtract(DateTimeOffset)\n  type: Method\n  assemblies:\n  - System.Runtime\n  - mscorlib\n  - netstandard\n  namespace: System\n  summary: Subtracts a <xref href=\"System.DateTimeOffset\"></xref> value that represents a specific date and time from the current <xref href=\"System.DateTimeOffset\"></xref> object.\n  remarks: \"This method converts both <xref:System.DateTimeOffset> objects to Coordinated Universal Time (UTC) before calculating the time interval that separates them. This removes any effect that different offsets from UTC may have on the comparison.  \\n  \\n> [!NOTE]\\n>  For languages that support custom operators, you can also perform date and time subtraction by using the subtraction operator. For details, see the <xref:System.DateTimeOffset.op_Subtraction%2A> method.  \\n  \\n Because neither the current <xref:System.DateTimeOffset> object nor the `value` parameter represent the date and time in a specific time zone, the <xref:System.DateTimeOffset.Subtract%28System.DateTimeOffset%29> method does not consider a particular time zone's adjustment rules when it subtracts dates and times.\"\n  example:\n  - \"The following example illustrates subtraction that uses the <xref:System.DateTimeOffset.Subtract%28System.DateTimeOffset%29> method.  \\n  \\n [!code-csharp[System.DateTimeOffset.Methods#13](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.DateTimeOffset.Methods/cs/Methods.cs#13)]\\n [!code-vb[System.DateTimeOffset.Methods#13](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.DateTimeOffset.Methods/vb/Methods.vb#13)]\"\n  syntax:\n    content: public TimeSpan Subtract (DateTimeOffset value);\n    parameters:\n    - id: value\n      type: System.DateTimeOffset\n      description: An object that represents the value to subtract.\n    return:\n      type: System.TimeSpan\n      description: An object that specifies the interval between the two <xref href=\"System.DateTimeOffset\"></xref> objects.\n  overload: System.DateTimeOffset.Subtract*\n  exceptions: []\n  version:\n  - netcore-1.0\n  - netcore-1.1\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - netstandard-1.0\n  - netstandard-1.1\n  - netstandard-1.2\n  - netstandard-1.3\n  - netstandard-1.4\n  - netstandard-1.5\n  - netstandard-1.6\n  - netstandard-2.0\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  monikers:\n  - netcore-1.0\n  - netcore-1.1\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - netstandard-1.0\n  - netstandard-1.1\n  - netstandard-1.2\n  - netstandard-1.3\n  - netstandard-1.4\n  - netstandard-1.5\n  - netstandard-1.6\n  - netstandard-2.0\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System/DateTimeOffset.xml\n  ms.technology:\n  - dotnet-standard\n  author: rpetrusha\n  ms.author: ronpet\n  manager: wpickett\n- uid: System.DateTimeOffset.Ticks\n  commentId: P:System.DateTimeOffset.Ticks\n  id: Ticks\n  parent: System.DateTimeOffset\n  langs:\n  - csharp\n  name: Ticks\n  nameWithType: DateTimeOffset.Ticks\n  fullName: DateTimeOffset.Ticks\n  type: Property\n  assemblies:\n  - System.Runtime\n  - mscorlib\n  - netstandard\n  namespace: System\n  summary: Gets the number of ticks that represents the date and time of the current <xref href=\"System.DateTimeOffset\"></xref> object in clock time.\n  remarks: \"The <xref:System.DateTimeOffset.Ticks%2A> property is not affected by the value of the <xref:System.DateTimeOffset.Offset%2A> property.  \\n  \\n The value of the <xref:System.DateTimeOffset.Ticks%2A> property represents the number of 100-nanosecond intervals that have elapsed since 12:00:00 midnight on January 1, 0001 (the value of <xref:System.DateTimeOffset.MinValue>). It does not include ticks that would be added by leap seconds. A nanosecond is one billionth of a second; there are ten million ticks in a second. The value of the <xref:System.DateTimeOffset.Ticks%2A> property ranges from `DateTimeOffset.MinValue.Ticks` to `DateTimeOffset.MaxValue.Ticks`.  \\n  \\n You can assign the number of ticks to a <xref:System.DateTimeOffset> object by using the <xref:System.DateTimeOffset.%23ctor%28System.Int64%2CSystem.TimeSpan%29> constructor overload.\"\n  example:\n  - \"The following example initializes a <xref:System.DateTimeOffset> object by approximating the number of ticks in the date July 1, 2008 1:23:07. It then displays the date and the number of ticks represented by that date to the console.  \\n  \\n [!code-csharp[System.DateTimeOffset.Properties#15](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.DateTimeOffset.Properties/cs/Properties.cs#15)]\\n [!code-vb[System.DateTimeOffset.Properties#15](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.DateTimeOffset.Properties/vb/Properties.vb#15)]\"\n  syntax:\n    content: public long Ticks { get; }\n    return:\n      type: System.Int64\n      description: The number of ticks in the <xref href=\"System.DateTimeOffset\"></xref> object's clock time.\n  overload: System.DateTimeOffset.Ticks*\n  exceptions: []\n  version:\n  - netcore-1.0\n  - netcore-1.1\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - netstandard-1.0\n  - netstandard-1.1\n  - netstandard-1.2\n  - netstandard-1.3\n  - netstandard-1.4\n  - netstandard-1.5\n  - netstandard-1.6\n  - netstandard-2.0\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  monikers:\n  - netcore-1.0\n  - netcore-1.1\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - netstandard-1.0\n  - netstandard-1.1\n  - netstandard-1.2\n  - netstandard-1.3\n  - netstandard-1.4\n  - netstandard-1.5\n  - netstandard-1.6\n  - netstandard-2.0\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System/DateTimeOffset.xml\n  ms.technology:\n  - dotnet-standard\n  author: rpetrusha\n  ms.author: ronpet\n  manager: wpickett\n- uid: System.DateTimeOffset.TimeOfDay\n  commentId: P:System.DateTimeOffset.TimeOfDay\n  id: TimeOfDay\n  parent: System.DateTimeOffset\n  langs:\n  - csharp\n  name: TimeOfDay\n  nameWithType: DateTimeOffset.TimeOfDay\n  fullName: DateTimeOffset.TimeOfDay\n  type: Property\n  assemblies:\n  - System.Runtime\n  - mscorlib\n  - netstandard\n  namespace: System\n  summary: Gets the time of day for the current <xref href=\"System.DateTimeOffset\"></xref> object.\n  remarks: \"The <xref:System.DateTimeOffset.TimeOfDay%2A> property is not affected by the value of the <xref:System.DateTimeOffset.Offset%2A> property.  \\n  \\n The <xref:System.DateTimeOffset.TimeOfDay%2A> property returns the time component of a <xref:System.DateTimeOffset> object in the form of a <xref:System.TimeSpan> object. It is equivalent to the <xref:System.DateTime.TimeOfDay%2A?displayProperty=fullName> property.\"\n  example:\n  - \"The following example uses the <xref:System.DateTimeOffset.TimeOfDay%2A> property to extract the time and display it to the console.  \\n  \\n [!code-csharp[System.DateTimeOffset.Properties#16](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.DateTimeOffset.Properties/cs/Properties.cs#16)]\\n [!code-vb[System.DateTimeOffset.Properties#16](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.DateTimeOffset.Properties/vb/Properties.vb#16)]\"\n  syntax:\n    content: public TimeSpan TimeOfDay { get; }\n    return:\n      type: System.TimeSpan\n      description: The time interval of the current date that has elapsed since midnight.\n  overload: System.DateTimeOffset.TimeOfDay*\n  exceptions: []\n  version:\n  - netcore-1.0\n  - netcore-1.1\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - netstandard-1.0\n  - netstandard-1.1\n  - netstandard-1.2\n  - netstandard-1.3\n  - netstandard-1.4\n  - netstandard-1.5\n  - netstandard-1.6\n  - netstandard-2.0\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  monikers:\n  - netcore-1.0\n  - netcore-1.1\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - netstandard-1.0\n  - netstandard-1.1\n  - netstandard-1.2\n  - netstandard-1.3\n  - netstandard-1.4\n  - netstandard-1.5\n  - netstandard-1.6\n  - netstandard-2.0\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System/DateTimeOffset.xml\n  ms.technology:\n  - dotnet-standard\n  author: rpetrusha\n  ms.author: ronpet\n  manager: wpickett\n- uid: System.DateTimeOffset.ToFileTime\n  commentId: M:System.DateTimeOffset.ToFileTime\n  id: ToFileTime\n  parent: System.DateTimeOffset\n  langs:\n  - csharp\n  name: ToFileTime()\n  nameWithType: DateTimeOffset.ToFileTime()\n  fullName: DateTimeOffset.ToFileTime()\n  type: Method\n  assemblies:\n  - System.Runtime\n  - mscorlib\n  - netstandard\n  namespace: System\n  summary: Converts the value of the current <xref href=\"System.DateTimeOffset\"></xref> object to a Windows file time.\n  remarks: \"A Windows file time is a 64-bit value that represents the number of 100-nanosecond intervals that have elapsed since 12:00 midnight, January 1, 1601 A.D. (C.E.) Coordinated Universal Time (UTC). Windows uses a file time to record when an application creates, accesses, or writes to a file.  \\n  \\n The <xref:System.DateTimeOffset.ToFileTime%2A> method converts the current <xref:System.DateTimeOffset> object's date and time to UTC before it performs the conversion. In other words, calling the <xref:System.DateTimeOffset.ToFileTime%2A> method is equivalent to the following method call:  \\n  \\n```csharp  \\nthis.ToUtcDateTime().ToFileTime();  \\n```  \\n  \\n```vb  \\nMe.ToUtcDateTime().ToFileTime()  \\n```\"\n  syntax:\n    content: public long ToFileTime ();\n    parameters: []\n    return:\n      type: System.Int64\n      description: The value of the current <xref href=\"System.DateTimeOffset\"></xref> object, expressed as a Windows file time.\n  overload: System.DateTimeOffset.ToFileTime*\n  exceptions:\n  - type: System.ArgumentOutOfRangeException\n    commentId: T:System.ArgumentOutOfRangeException\n    description: The resulting file time would represent a date and time before midnight on January 1, 1601 C.E. Coordinated Universal Time (UTC).\n  version:\n  - netcore-1.0\n  - netcore-1.1\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - netstandard-1.0\n  - netstandard-1.1\n  - netstandard-1.2\n  - netstandard-1.3\n  - netstandard-1.4\n  - netstandard-1.5\n  - netstandard-1.6\n  - netstandard-2.0\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  monikers:\n  - netcore-1.0\n  - netcore-1.1\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - netstandard-1.0\n  - netstandard-1.1\n  - netstandard-1.2\n  - netstandard-1.3\n  - netstandard-1.4\n  - netstandard-1.5\n  - netstandard-1.6\n  - netstandard-2.0\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System/DateTimeOffset.xml\n  ms.technology:\n  - dotnet-standard\n  author: rpetrusha\n  ms.author: ronpet\n  manager: wpickett\n- uid: System.DateTimeOffset.ToLocalTime\n  commentId: M:System.DateTimeOffset.ToLocalTime\n  id: ToLocalTime\n  parent: System.DateTimeOffset\n  langs:\n  - csharp\n  name: ToLocalTime()\n  nameWithType: DateTimeOffset.ToLocalTime()\n  fullName: DateTimeOffset.ToLocalTime()\n  type: Method\n  assemblies:\n  - System.Runtime\n  - mscorlib\n  - netstandard\n  namespace: System\n  summary: Converts the current <xref href=\"System.DateTimeOffset\"></xref> object to a <xref href=\"System.DateTimeOffset\"></xref> object that represents the local time.\n  remarks: \"In performing the conversion to local time, the method first converts the current <xref:System.DateTimeOffset> object's date and time to Coordinated Universal Time (UTC) by subtracting the offset from the time. It then converts the UTC date and time to local time by adding the local time zone offset. In doing this, it takes account of any adjustment rules for the local time zone.  \\n  \\n Both the value of the current <xref:System.DateTimeOffset> object and the value of the <xref:System.DateTimeOffset> object returned by the method call represent the same point in time. That is, if both are passed to the <xref:System.DateTimeOffset.Equals%28System.DateTimeOffset%2CSystem.DateTimeOffset%29?displayProperty=fullName> method, the method will return `true`.  \\n  \\n If the conversion causes a time that is out of range of the <xref:System.DateTimeOffset> type, the <xref:System.DateTimeOffset.ToLocalTime%2A> method returns a <xref:System.DateTimeOffset> object that has the date and time set to either <xref:System.DateTimeOffset.MaxValue> or <xref:System.DateTimeOffset.MinValue> and the offset set to the local time zone offset.\"\n  example:\n  - \"The following example uses the <xref:System.DateTimeOffset.ToLocalTime%2A> method to convert a <xref:System.DateTimeOffset> value to local time in the Pacific Standard Time zone. It also illustrates the method's support for the local time zone's adjustment rules.  \\n  \\n [!code-csharp[System.DateTimeOffset.Methods#15](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.DateTimeOffset.Methods/cs/Methods.cs#15)]\\n [!code-vb[System.DateTimeOffset.Methods#15](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.DateTimeOffset.Methods/vb/Methods.vb#15)]\"\n  syntax:\n    content: public DateTimeOffset ToLocalTime ();\n    parameters: []\n    return:\n      type: System.DateTimeOffset\n      description: An object that represents the date and time of the current <xref href=\"System.DateTimeOffset\"></xref> object converted to local time.\n  overload: System.DateTimeOffset.ToLocalTime*\n  exceptions: []\n  version:\n  - netcore-1.0\n  - netcore-1.1\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - netstandard-1.0\n  - netstandard-1.1\n  - netstandard-1.2\n  - netstandard-1.3\n  - netstandard-1.4\n  - netstandard-1.5\n  - netstandard-1.6\n  - netstandard-2.0\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  monikers:\n  - netcore-1.0\n  - netcore-1.1\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - netstandard-1.0\n  - netstandard-1.1\n  - netstandard-1.2\n  - netstandard-1.3\n  - netstandard-1.4\n  - netstandard-1.5\n  - netstandard-1.6\n  - netstandard-2.0\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System/DateTimeOffset.xml\n  ms.technology:\n  - dotnet-standard\n  author: rpetrusha\n  ms.author: ronpet\n  manager: wpickett\n- uid: System.DateTimeOffset.ToOffset(System.TimeSpan)\n  commentId: M:System.DateTimeOffset.ToOffset(System.TimeSpan)\n  id: ToOffset(System.TimeSpan)\n  parent: System.DateTimeOffset\n  langs:\n  - csharp\n  name: ToOffset(TimeSpan)\n  nameWithType: DateTimeOffset.ToOffset(TimeSpan)\n  fullName: DateTimeOffset.ToOffset(TimeSpan)\n  type: Method\n  assemblies:\n  - System.Runtime\n  - mscorlib\n  - netstandard\n  namespace: System\n  summary: Converts the value of the current <xref href=\"System.DateTimeOffset\"></xref> object to the date and time specified by an offset value.\n  remarks: The <xref:System.DateTimeOffset.ToOffset%2A> method is an alternative to calling the <xref:System.TimeZoneInfo.ConvertTime%28System.DateTimeOffset%2CSystem.TimeZoneInfo%29?displayProperty=fullName> method. It can be useful for performing simple conversions from one time zone to another when the time zones' offsets from Coordinated Universal Time (UTC) are known. However, because neither the original <xref:System.DateTimeOffset> object nor the new <xref:System.DateTimeOffset> object returned by the method call are unambiguously related to a particular time zone, the method does not apply any time zone adjustment rules in the conversion.\n  example:\n  - \"The following example illustrates how to use the <xref:System.DateTimeOffset.ToOffset%2A> method to convert a <xref:System.DateTimeOffset> object to a <xref:System.DateTimeOffset> object with a different offset.  \\n  \\n [!code-csharp[System.DateTimeOffset.ToOffset#1](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.DateTimeOffset.ToOffset/cs/ToOffset.cs#1)]\\n [!code-vb[System.DateTimeOffset.ToOffset#1](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.DateTimeOffset.ToOffset/vb/ToOffset.vb#1)]\"\n  syntax:\n    content: public DateTimeOffset ToOffset (TimeSpan offset);\n    parameters:\n    - id: offset\n      type: System.TimeSpan\n      description: The offset to convert the <xref href=\"System.DateTimeOffset\"></xref> value to.\n    return:\n      type: System.DateTimeOffset\n      description: An object that is equal to the original <xref href=\"System.DateTimeOffset\"></xref> object (that is, their <xref href=\"System.DateTimeOffset.ToUniversalTime\"></xref> methods return identical points in time) but whose <xref href=\"System.DateTimeOffset.Offset\"></xref> property is set to <code>offset</code>.\n  overload: System.DateTimeOffset.ToOffset*\n  exceptions:\n  - type: System.ArgumentException\n    commentId: T:System.ArgumentException\n    description: \"The resulting <xref href=\\\"System.DateTimeOffset\\\"></xref> object has a <xref href=\\\"System.DateTimeOffset.DateTime\\\"></xref> value earlier than <xref href=\\\"System.DateTimeOffset.MinValue\\\"></xref>.  \\n  \\n -or-  \\n  \\n The resulting <xref href=\\\"System.DateTimeOffset\\\"></xref> object has a <xref href=\\\"System.DateTimeOffset.DateTime\\\"></xref> value later than <xref href=\\\"System.DateTimeOffset.MaxValue\\\"></xref>.\"\n  - type: System.ArgumentOutOfRangeException\n    commentId: T:System.ArgumentOutOfRangeException\n    description: \"<code>offset</code> is less than -14 hours.  \\n  \\n -or-  \\n  \\n <code>offset</code> is greater than 14 hours.\"\n  version:\n  - netcore-1.0\n  - netcore-1.1\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - netstandard-1.0\n  - netstandard-1.1\n  - netstandard-1.2\n  - netstandard-1.3\n  - netstandard-1.4\n  - netstandard-1.5\n  - netstandard-1.6\n  - netstandard-2.0\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  monikers:\n  - netcore-1.0\n  - netcore-1.1\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - netstandard-1.0\n  - netstandard-1.1\n  - netstandard-1.2\n  - netstandard-1.3\n  - netstandard-1.4\n  - netstandard-1.5\n  - netstandard-1.6\n  - netstandard-2.0\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System/DateTimeOffset.xml\n  ms.technology:\n  - dotnet-standard\n  author: rpetrusha\n  ms.author: ronpet\n  manager: wpickett\n- uid: System.DateTimeOffset.ToString\n  commentId: M:System.DateTimeOffset.ToString\n  id: ToString\n  parent: System.DateTimeOffset\n  langs:\n  - csharp\n  name: ToString()\n  nameWithType: DateTimeOffset.ToString()\n  fullName: DateTimeOffset.ToString()\n  type: Method\n  assemblies:\n  - System.Runtime\n  - mscorlib\n  - netstandard\n  namespace: System\n  summary: Converts the value of the current <xref href=\"System.DateTimeOffset\"></xref> object to its equivalent string representation.\n  remarks: \"The return value of this method is identical to that of the <xref:System.DateTime.ToString?displayProperty=fullName> method, except that it includes a space followed by the offset appended at the end of the string. In other words, it formats output using the short date pattern, the long time pattern, and the `zzz` custom format string, with each element separated from the previous element by a space. For example, if <xref:System.DateTime.ToString?displayProperty=fullName> returns a value of 1/12/2008 6:15:50 PM, <xref:System.DateTimeOffset.ToString> returns a value of 1/12/2008 6:15:50 PM -08:00 for a time that is eight hours behind Coordinated Universal Time (UTC).  \\n  \\n This method uses formatting information derived from the current culture. For more information, see <xref:System.Globalization.CultureInfo.CurrentCulture%2A>. Other overloads of the <xref:System.DateTimeOffset.ToString%2A> method enable you to specify the culture whose formatting to use, and to define the output pattern of the <xref:System.DateTimeOffset> value.\"\n  example:\n  - \"The following example illustrates calls to the <xref:System.DateTimeOffset.ToString> method and displays its output on a system whose current culture is en-us.  \\n  \\n [!code-csharp[System.DateTimeOffset.ToString#1](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.DateTimeOffset.ToString/cs/ToString.cs#1)]\\n [!code-vb[System.DateTimeOffset.ToString#1](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.DateTimeOffset.ToString/vb/ToString.vb#1)]\"\n  syntax:\n    content: public override string ToString ();\n    parameters: []\n    return:\n      type: System.String\n      description: A string representation of a <xref href=\"System.DateTimeOffset\"></xref> object that includes the offset appended at the end of the string.\n  overload: System.DateTimeOffset.ToString*\n  exceptions:\n  - type: System.ArgumentOutOfRangeException\n    commentId: T:System.ArgumentOutOfRangeException\n    description: The date and time is outside the range of dates supported by the calendar used by the current culture.\n  version:\n  - netcore-1.0\n  - netcore-1.1\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - netstandard-1.0\n  - netstandard-1.1\n  - netstandard-1.2\n  - netstandard-1.3\n  - netstandard-1.4\n  - netstandard-1.5\n  - netstandard-1.6\n  - netstandard-2.0\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  monikers:\n  - netcore-1.0\n  - netcore-1.1\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - netstandard-1.0\n  - netstandard-1.1\n  - netstandard-1.2\n  - netstandard-1.3\n  - netstandard-1.4\n  - netstandard-1.5\n  - netstandard-1.6\n  - netstandard-2.0\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System/DateTimeOffset.xml\n  ms.technology:\n  - dotnet-standard\n  author: rpetrusha\n  ms.author: ronpet\n  manager: wpickett\n- uid: System.DateTimeOffset.ToString(System.IFormatProvider)\n  commentId: M:System.DateTimeOffset.ToString(System.IFormatProvider)\n  id: ToString(System.IFormatProvider)\n  parent: System.DateTimeOffset\n  langs:\n  - csharp\n  name: ToString(IFormatProvider)\n  nameWithType: DateTimeOffset.ToString(IFormatProvider)\n  fullName: DateTimeOffset.ToString(IFormatProvider)\n  type: Method\n  assemblies:\n  - System.Runtime\n  - mscorlib\n  - netstandard\n  namespace: System\n  summary: Converts the value of the current <xref href=\"System.DateTimeOffset\"></xref> object to its equivalent string representation using the specified culture-specific formatting information.\n  remarks: \"The return value of this method is identical to that of its equivalent overload of the <xref:System.DateTime.ToString%2A?displayProperty=fullName> method, except that it includes a space followed by the offset appended at the end of the string. In other words, it formats output using the short date pattern, the long time pattern, and the `zzz` custom format string, with each element separated from the previous element by a space.  \\n  \\n The format of these three elements is defined by the `formatProvider` parameter. The `formatProvider` parameter can be either of the following:  \\n  \\n-   A <xref:System.Globalization.CultureInfo> object that represents the culture whose formatting conventions are applied to the returned string. The <xref:System.Globalization.DateTimeFormatInfo> object returned by the <xref:System.Globalization.CultureInfo.DateTimeFormat%2A?displayProperty=fullName> property defines the formatting of the returned string.  \\n  \\n-   A <xref:System.Globalization.DateTimeFormatInfo> object that defines the format of date and time data.  \\n  \\n If `formatProvider` is `null`, the <xref:System.Globalization.DateTimeFormatInfo> object associated with the current culture is used (see <xref:System.Globalization.CultureInfo.CurrentCulture%2A>).\"\n  example:\n  - \"The following example displays a <xref:System.DateTimeOffset> object using <xref:System.Globalization.CultureInfo> objects that represent the invariant culture, as well as four other cultures.  \\n  \\n [!code-csharp[System.DateTimeOffset.ToString#2](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.DateTimeOffset.ToString/cs/ToString.cs#2)]\\n [!code-vb[System.DateTimeOffset.ToString#2](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.DateTimeOffset.ToString/vb/ToString.vb#2)]\"\n  syntax:\n    content: public string ToString (IFormatProvider formatProvider);\n    parameters:\n    - id: formatProvider\n      type: System.IFormatProvider\n      description: An object that supplies culture-specific formatting information.\n    return:\n      type: System.String\n      description: A string representation of the value of the current <xref href=\"System.DateTimeOffset\"></xref> object, as specified by <code>formatProvider</code>.\n  overload: System.DateTimeOffset.ToString*\n  exceptions:\n  - type: System.ArgumentOutOfRangeException\n    commentId: T:System.ArgumentOutOfRangeException\n    description: The date and time is outside the range of dates supported by the calendar used by <code>formatProvider</code>.\n  version:\n  - netcore-1.0\n  - netcore-1.1\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - netstandard-1.0\n  - netstandard-1.1\n  - netstandard-1.2\n  - netstandard-1.3\n  - netstandard-1.4\n  - netstandard-1.5\n  - netstandard-1.6\n  - netstandard-2.0\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  monikers:\n  - netcore-1.0\n  - netcore-1.1\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - netstandard-1.0\n  - netstandard-1.1\n  - netstandard-1.2\n  - netstandard-1.3\n  - netstandard-1.4\n  - netstandard-1.5\n  - netstandard-1.6\n  - netstandard-2.0\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System/DateTimeOffset.xml\n  ms.technology:\n  - dotnet-standard\n  author: rpetrusha\n  ms.author: ronpet\n  manager: wpickett\n- uid: System.DateTimeOffset.ToString(System.String)\n  commentId: M:System.DateTimeOffset.ToString(System.String)\n  id: ToString(System.String)\n  parent: System.DateTimeOffset\n  langs:\n  - csharp\n  name: ToString(String)\n  nameWithType: DateTimeOffset.ToString(String)\n  fullName: DateTimeOffset.ToString(String)\n  type: Method\n  assemblies:\n  - System.Runtime\n  - mscorlib\n  - netstandard\n  namespace: System\n  summary: Converts the value of the current <xref href=\"System.DateTimeOffset\"></xref> object to its equivalent string representation using the specified format.\n  remarks: \"The `format` parameter should contain either a single format specifier character (see [Standard Date and Time Format Strings](~/docs/standard/base-types/standard-date-and-time-format-strings.md)) or a custom format pattern (see [Custom Date and Time Format Strings](~/docs/standard/base-types/custom-date-and-time-format-strings.md)) that defines the format of the returned string. If `format` is a null or empty string (\\\"\\\"), the <xref:System.DateTimeOffset> value is output using the default format.  \\n  \\n The following table shows the exact operation of certain format specifiers when used with <xref:System.DateTimeOffset>, which differs from their behavior when used with <xref:System.DateTime>.  \\n  \\n|Existing format specifier|New behavior|  \\n|-------------------------------|------------------|  \\n|\\\"K\\\"|Designed to round-trip a date and time. With <xref:System.DateTimeOffset>, maps to \\\"zzz\\\" (the offset is always displayed with hours and minutes). Note that \\\"K\\\" is a custom format specifier; it cannot appear as the single character in `format`.|  \\n|\\\"U\\\"|Not supported.|  \\n|\\\"r\\\"|Converts the <xref:System.DateTimeOffset> object to Coordinated Universal Time (UTC) and outputs it using the custom format string `ddd, dd MMM yyyy HH:mm:ss GMT`.|  \\n|\\\"u\\\"|Converts the <xref:System.DateTimeOffset> object to UTC and outputs it using the format `yyyy-MM-dd HH:mm:ssZ`.|  \\n  \\n The remaining standard date and time format specifiers behave the same with the <xref:System.DateTimeOffset.ToString%28System.String%29> method as they do with the <xref:System.DateTime.ToString%2A> method.  \\n  \\n This method uses formatting information derived from the current culture. For more information, see <xref:System.Globalization.CultureInfo.CurrentCulture%2A>.\"\n  example:\n  - \"The following example displays a <xref:System.DateTimeOffset> object to the console using each of the standard date and time format specifiers. The output is formatted by using the en-us culture.  \\n  \\n [!code-csharp[System.DateTimeOffset.ToString#3](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.DateTimeOffset.ToString/cs/ToString.cs#3)]\\n [!code-vb[System.DateTimeOffset.ToString#3](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.DateTimeOffset.ToString/vb/ToString.vb#3)]\"\n  syntax:\n    content: public string ToString (string format);\n    parameters:\n    - id: format\n      type: System.String\n      description: A format string.\n    return:\n      type: System.String\n      description: A string representation of the value of the current <xref href=\"System.DateTimeOffset\"></xref> object, as specified by <code>format</code>.\n  overload: System.DateTimeOffset.ToString*\n  exceptions:\n  - type: System.FormatException\n    commentId: T:System.FormatException\n    description: \"The length of <code>format</code> is one, and it is not one of the standard format specifier characters defined for <xref href=\\\"System.Globalization.DateTimeFormatInfo\\\"></xref>.  \\n  \\n -or-  \\n  \\n <code>format</code> does not contain a valid custom format pattern.\"\n  - type: System.ArgumentOutOfRangeException\n    commentId: T:System.ArgumentOutOfRangeException\n    description: The date and time is outside the range of dates supported by the calendar used by the current culture.\n  version:\n  - netcore-1.0\n  - netcore-1.1\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - netstandard-1.0\n  - netstandard-1.1\n  - netstandard-1.2\n  - netstandard-1.3\n  - netstandard-1.4\n  - netstandard-1.5\n  - netstandard-1.6\n  - netstandard-2.0\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  monikers:\n  - netcore-1.0\n  - netcore-1.1\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - netstandard-1.0\n  - netstandard-1.1\n  - netstandard-1.2\n  - netstandard-1.3\n  - netstandard-1.4\n  - netstandard-1.5\n  - netstandard-1.6\n  - netstandard-2.0\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System/DateTimeOffset.xml\n  ms.technology:\n  - dotnet-standard\n  author: rpetrusha\n  ms.author: ronpet\n  manager: wpickett\n- uid: System.DateTimeOffset.ToString(System.String,System.IFormatProvider)\n  commentId: M:System.DateTimeOffset.ToString(System.String,System.IFormatProvider)\n  id: ToString(System.String,System.IFormatProvider)\n  parent: System.DateTimeOffset\n  langs:\n  - csharp\n  name: ToString(String, IFormatProvider)\n  nameWithType: DateTimeOffset.ToString(String, IFormatProvider)\n  fullName: DateTimeOffset.ToString(String, IFormatProvider)\n  type: Method\n  assemblies:\n  - System.Runtime\n  - mscorlib\n  - netstandard\n  namespace: System\n  summary: Converts the value of the current <xref href=\"System.DateTimeOffset\"></xref> object to its equivalent string representation using the specified format and culture-specific format information.\n  remarks: \"The `format` parameter should contain either a single format specifier character (see [Standard Date and Time Format Strings](~/docs/standard/base-types/standard-date-and-time-format-strings.md)) or a custom format pattern (see [Custom Date and Time Format Strings](~/docs/standard/base-types/custom-date-and-time-format-strings.md)). If `format` is a null or empty string (\\\"\\\"), the <xref:System.DateTimeOffset> object is output using the default format.  \\n  \\n The following table shows the exact operation of certain format specifiers when used with <xref:System.DateTimeOffset>, which differs from their behavior when used with <xref:System.DateTime>.  \\n  \\n|Existing format specifier|New behavior|  \\n|-------------------------------|------------------|  \\n|\\\"K\\\"|Designed to round-trip a date and time. With <xref:System.DateTimeOffset>, maps to \\\"zzz\\\" (the offset is always displayed with hours and minutes). Note that \\\"K\\\" is a custom format specifier; it cannot appear as the single character in `format`.|  \\n|\\\"U\\\"|Not supported.|  \\n|\\\"r\\\"|Converts the <xref:System.DateTimeOffset> object to Coordinated Universal Time (UTC) and outputs it using the custom format string `ddd, dd MMM yyyy HH:mm:ss GMT`.|  \\n|\\\"u\\\"|Converts the <xref:System.DateTimeOffset> value to UTC and outputs it using the format `yyyy-MM-dd HH:mm:ssZ`.|  \\n  \\n The remaining standard date and time format specifiers behave the same with the <xref:System.DateTimeOffset.ToString%28System.String%29> method as they do with the <xref:System.DateTime.ToString%2A> method.  \\n  \\n The pattern that corresponds to standard format specifiers, as well as the symbols and names of date and time components, is defined by the `formatProvider` parameter. The `formatProvider` parameter can be either of the following:  \\n  \\n-   A <xref:System.Globalization.CultureInfo> object that represents the culture whose formatting is used in `input`. The <xref:System.Globalization.DateTimeFormatInfo> object returned by the <xref:System.Globalization.CultureInfo.DateTimeFormat%2A?displayProperty=fullName> property defines the formatting used in `input`.  \\n  \\n-   A <xref:System.Globalization.DateTimeFormatInfo> object that defines the format of date and time data.  \\n  \\n If `formatProvider` is `null`, the <xref:System.Globalization.DateTimeFormatInfo> object associated with the current culture is used (see <xref:System.Globalization.CultureInfo.CurrentCulture%2A>).\"\n  example:\n  - \"The following example uses the <xref:System.DateTimeOffset.ToString%28System.String%2CSystem.IFormatProvider%29> method to display a <xref:System.DateTimeOffset> object using a custom format string for several different cultures.  \\n  \\n [!code-csharp[System.DateTimeOffset.ToString#4](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.DateTimeOffset.ToString/cs/ToString.cs#4)]\\n [!code-vb[System.DateTimeOffset.ToString#4](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.DateTimeOffset.ToString/vb/ToString.vb#4)]\"\n  syntax:\n    content: public string ToString (string format, IFormatProvider formatProvider);\n    parameters:\n    - id: format\n      type: System.String\n      description: A format string.\n    - id: formatProvider\n      type: System.IFormatProvider\n      description: An object that supplies culture-specific formatting information.\n    return:\n      type: System.String\n      description: A string representation of the value of the current <xref href=\"System.DateTimeOffset\"></xref> object, as specified by <code>format</code> and <code>provider</code>.\n  overload: System.DateTimeOffset.ToString*\n  exceptions:\n  - type: System.FormatException\n    commentId: T:System.FormatException\n    description: \"The length of <code>format</code> is one, and it is not one of the standard format specifier characters defined for <xref href=\\\"System.Globalization.DateTimeFormatInfo\\\"></xref>.  \\n  \\n -or-  \\n  \\n <code>format</code> does not contain a valid custom format pattern.\"\n  - type: System.ArgumentOutOfRangeException\n    commentId: T:System.ArgumentOutOfRangeException\n    description: The date and time is outside the range of dates supported by the calendar used by <code>formatProvider</code>.\n  version:\n  - netcore-1.0\n  - netcore-1.1\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - netstandard-1.0\n  - netstandard-1.1\n  - netstandard-1.2\n  - netstandard-1.3\n  - netstandard-1.4\n  - netstandard-1.5\n  - netstandard-1.6\n  - netstandard-2.0\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  monikers:\n  - netcore-1.0\n  - netcore-1.1\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - netstandard-1.0\n  - netstandard-1.1\n  - netstandard-1.2\n  - netstandard-1.3\n  - netstandard-1.4\n  - netstandard-1.5\n  - netstandard-1.6\n  - netstandard-2.0\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System/DateTimeOffset.xml\n  ms.technology:\n  - dotnet-standard\n  author: rpetrusha\n  ms.author: ronpet\n  manager: wpickett\n- uid: System.DateTimeOffset.ToUniversalTime\n  commentId: M:System.DateTimeOffset.ToUniversalTime\n  id: ToUniversalTime\n  parent: System.DateTimeOffset\n  langs:\n  - csharp\n  name: ToUniversalTime()\n  nameWithType: DateTimeOffset.ToUniversalTime()\n  fullName: DateTimeOffset.ToUniversalTime()\n  type: Method\n  assemblies:\n  - System.Runtime\n  - mscorlib\n  - netstandard\n  namespace: System\n  summary: Converts the current <xref href=\"System.DateTimeOffset\"></xref> object to a <xref href=\"System.DateTimeOffset\"></xref> value that represents the Coordinated Universal Time (UTC).\n  remarks: \"This method returns a <xref:System.DateTimeOffset> object whose <xref:System.DateTimeOffset.Offset%2A> property is set to zero.  \\n  \\n Both the value of the current <xref:System.DateTimeOffset> object and the value of the <xref:System.DateTimeOffset> object returned by the method call represent the same point in time. That is, if both are passed to the <xref:System.DateTimeOffset.Equals%28System.DateTimeOffset%2CSystem.DateTimeOffset%29?displayProperty=fullName> method, the method will return `true`.\"\n  example:\n  - \"The following example calls the <xref:System.DateTimeOffset.ToUniversalTime%2A> method to convert a local time and several other times to Coordinated Universal Time (UTC).  \\n  \\n [!code-csharp[System.DateTimeOffset.Methods#16](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.DateTimeOffset.Methods/cs/Methods.cs#16)]\\n [!code-vb[System.DateTimeOffset.Methods#16](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.DateTimeOffset.Methods/vb/Methods.vb#16)]\"\n  syntax:\n    content: public DateTimeOffset ToUniversalTime ();\n    parameters: []\n    return:\n      type: System.DateTimeOffset\n      description: An object that represents the date and time of the current <xref href=\"System.DateTimeOffset\"></xref> object converted to Coordinated Universal Time (UTC).\n  overload: System.DateTimeOffset.ToUniversalTime*\n  exceptions: []\n  version:\n  - netcore-1.0\n  - netcore-1.1\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - netstandard-1.0\n  - netstandard-1.1\n  - netstandard-1.2\n  - netstandard-1.3\n  - netstandard-1.4\n  - netstandard-1.5\n  - netstandard-1.6\n  - netstandard-2.0\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  monikers:\n  - netcore-1.0\n  - netcore-1.1\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - netstandard-1.0\n  - netstandard-1.1\n  - netstandard-1.2\n  - netstandard-1.3\n  - netstandard-1.4\n  - netstandard-1.5\n  - netstandard-1.6\n  - netstandard-2.0\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System/DateTimeOffset.xml\n  ms.technology:\n  - dotnet-standard\n  author: rpetrusha\n  ms.author: ronpet\n  manager: wpickett\n- uid: System.DateTimeOffset.ToUnixTimeMilliseconds\n  commentId: M:System.DateTimeOffset.ToUnixTimeMilliseconds\n  id: ToUnixTimeMilliseconds\n  parent: System.DateTimeOffset\n  langs:\n  - csharp\n  name: ToUnixTimeMilliseconds()\n  nameWithType: DateTimeOffset.ToUnixTimeMilliseconds()\n  fullName: DateTimeOffset.ToUnixTimeMilliseconds()\n  type: Method\n  assemblies:\n  - System.Runtime\n  - mscorlib\n  - netstandard\n  namespace: System\n  summary: Returns the number of milliseconds that have elapsed since 1970-01-01T00:00:00.000Z.\n  remarks: \"Unix time represents the number of seconds that have elapsed since 1970-01-01T00:00:00Z (January 1, 1970, at 12:00 AM UTC). It does not take leap seconds into account. This method returns the number of milliseconds in Unix time.  \\n  \\n This method first converts the current instance to UTC before returning the number of milliseconds in its Unix time. For date and time values before 1970-01-01T00:00:00Z, this method returns a negative value.\"\n  syntax:\n    content: public long ToUnixTimeMilliseconds ();\n    parameters: []\n    return:\n      type: System.Int64\n      description: The number of milliseconds that have elapsed since 1970-01-01T00:00:00.000Z.\n  overload: System.DateTimeOffset.ToUnixTimeMilliseconds*\n  exceptions: []\n  version:\n  - netcore-1.0\n  - netcore-1.1\n  - netcore-2.0\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - netstandard-1.3\n  - netstandard-1.4\n  - netstandard-1.5\n  - netstandard-1.6\n  - netstandard-2.0\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  monikers:\n  - netcore-1.0\n  - netcore-1.1\n  - netcore-2.0\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - netstandard-1.3\n  - netstandard-1.4\n  - netstandard-1.5\n  - netstandard-1.6\n  - netstandard-2.0\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System/DateTimeOffset.xml\n  ms.technology:\n  - dotnet-standard\n  author: rpetrusha\n  ms.author: ronpet\n  manager: wpickett\n- uid: System.DateTimeOffset.ToUnixTimeSeconds\n  commentId: M:System.DateTimeOffset.ToUnixTimeSeconds\n  id: ToUnixTimeSeconds\n  parent: System.DateTimeOffset\n  langs:\n  - csharp\n  name: ToUnixTimeSeconds()\n  nameWithType: DateTimeOffset.ToUnixTimeSeconds()\n  fullName: DateTimeOffset.ToUnixTimeSeconds()\n  type: Method\n  assemblies:\n  - System.Runtime\n  - mscorlib\n  - netstandard\n  namespace: System\n  summary: Returns the number of seconds that have elapsed since 1970-01-01T00:00:00Z.\n  remarks: \"Unix time represents the number of seconds that have elapsed since 1970-01-01T00:00:00Z (January 1, 1970, at 12:00 AM UTC). It does not take leap seconds into account.  \\n  \\n This method first converts the current instance to UTC before returning its Unix time. For date and time values before 1970-01-01T00:00:00Z, this method returns a negative value.\"\n  example:\n  - \"The following example calls the <xref:System.DateTimeOffset.ToUnixTimeSeconds%2A> method to return the Unix time of values that are equal to, shortly before, and shortly after 1970-01-01T00:00:00Z.  \\n  \\n [!code-csharp[System.DateTimeOffset.ToUnixTimeSeconds#1](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.datetimeoffset.tounixtimeseconds/cs/tounixtimeseconds1.cs#1)]\\n [!code-vb[System.DateTimeOffset.ToUnixTimeSeconds#1](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.datetimeoffset.tounixtimeseconds/vb/tounixtimeseconds1.vb#1)]\"\n  syntax:\n    content: public long ToUnixTimeSeconds ();\n    parameters: []\n    return:\n      type: System.Int64\n      description: The number of seconds that have elapsed since 1970-01-01T00:00:00Z.\n  overload: System.DateTimeOffset.ToUnixTimeSeconds*\n  exceptions: []\n  version:\n  - netcore-1.0\n  - netcore-1.1\n  - netcore-2.0\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - netstandard-1.3\n  - netstandard-1.4\n  - netstandard-1.5\n  - netstandard-1.6\n  - netstandard-2.0\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  monikers:\n  - netcore-1.0\n  - netcore-1.1\n  - netcore-2.0\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - netstandard-1.3\n  - netstandard-1.4\n  - netstandard-1.5\n  - netstandard-1.6\n  - netstandard-2.0\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System/DateTimeOffset.xml\n  ms.technology:\n  - dotnet-standard\n  author: rpetrusha\n  ms.author: ronpet\n  manager: wpickett\n- uid: System.DateTimeOffset.TryParse(System.String,System.IFormatProvider,System.Globalization.DateTimeStyles,System.DateTimeOffset@)\n  commentId: M:System.DateTimeOffset.TryParse(System.String,System.IFormatProvider,System.Globalization.DateTimeStyles,System.DateTimeOffset@)\n  id: TryParse(System.String,System.IFormatProvider,System.Globalization.DateTimeStyles,System.DateTimeOffset@)\n  parent: System.DateTimeOffset\n  langs:\n  - csharp\n  name: TryParse(String, IFormatProvider, DateTimeStyles, DateTimeOffset)\n  nameWithType: DateTimeOffset.TryParse(String, IFormatProvider, DateTimeStyles, DateTimeOffset)\n  fullName: DateTimeOffset.TryParse(String, IFormatProvider, DateTimeStyles, DateTimeOffset)\n  type: Method\n  assemblies:\n  - System.Runtime\n  - mscorlib\n  - netstandard\n  namespace: System\n  summary: Tries to convert a specified string representation of a date and time to its <xref href=\"System.DateTimeOffset\"></xref> equivalent, and returns a value that indicates whether the conversion succeeded.\n  remarks: \"This overload of the <xref:System.DateTimeOffset.TryParse%28System.String%2CSystem.IFormatProvider%2CSystem.Globalization.DateTimeStyles%2CSystem.DateTimeOffset%40%29> method is like the <xref:System.DateTimeOffset.Parse%28System.String%2CSystem.IFormatProvider%2CSystem.Globalization.DateTimeStyles%29?displayProperty=fullName> method, except that it does not throw an exception if the conversion fails. The method parses a string with three elements that can appear in any order and are delimited by white space. These three elements are shown in the following table.  \\n  \\n|Element|Example|  \\n|-------------|-------------|  \\n|\\\\<Date>|\\\"2/10/2007\\\"|  \\n|\\\\<Time>|\\\"1:02:03 PM\\\"|  \\n|\\\\<Offset>|\\\"-7:30\\\"|  \\n  \\n Although each of these elements is optional, \\\\<Offset> cannot appear by itself. It must be provided together with either \\\\<Date> or \\\\<Time>. If \\\\<Date> is missing, its default value is the current day. If \\\\<Date> is present but its year component consists of only two digits, it is converted to a year in the `provider` parameter's current calendar based on the value of the <xref:System.Globalization.Calendar.TwoDigitYearMax%2A?displayProperty=fullName> property. If \\\\<Time> is missing, its default value is 12:00:00 AM. If \\\\<Offset> is missing, its default value is the offset of the local time zone, or <xref:System.TimeSpan.Zero> if either the <xref:System.Globalization.DateTimeStyles?displayProperty=fullName> or <xref:System.Globalization.DateTimeStyles?displayProperty=fullName> value is specified in `styles`. If \\\\<Offset> is present, it can represent either a negative or a positive offset from Coordinated Universal Time (UTC). In either case, \\\\<Offset> must include a sign symbol or the method returns `false`.  \\n  \\n The `input` string is parsed by using the culture-specific formatting information in a <xref:System.Globalization.DateTimeFormatInfo> object supplied by the `formatProvider` parameter. The `formatProvider` parameter can be either of the following:  \\n  \\n-   A <xref:System.Globalization.CultureInfo> object that represents the culture whose formatting is used in `input`. The <xref:System.Globalization.DateTimeFormatInfo> object returned by the <xref:System.Globalization.CultureInfo.DateTimeFormat%2A?displayProperty=fullName> property defines the format that is used in `input`.  \\n  \\n-   A <xref:System.Globalization.DateTimeFormatInfo> object that defines the format of date and time data.  \\n  \\n In addition, each element can be delimited by leading or trailing white space, and the \\\\<Date> and \\\\<Time> components can include inner white space (such as 6:   00:00). Only the \\\\<Offset> component cannot include inner white space.  \\n  \\n If `provider` is `null`, the <xref:System.Globalization.CultureInfo> object that corresponds to the current culture is used.  \\n  \\n The positive or negative sign used in \\\\<Offset> must be either + or -. It is not defined by the <xref:System.Globalization.NumberFormatInfo.PositiveSign%2A> or <xref:System.Globalization.NumberFormatInfo.NegativeSign%2A> properties of the <xref:System.Globalization.NumberFormatInfo> object returned by the `formatprovider` parameter's <xref:System.Globalization.CultureInfo.NumberFormat%2A> property.  \\n  \\n The following members of the <xref:System.Globalization.DateTimeStyles> enumeration are supported:  \\n  \\n|DateTimeStyles Member|Comments|  \\n|---------------------------|--------------|  \\n|<xref:System.Globalization.DateTimeStyles.AdjustToUniversal>|Parses the string represented by `input` and, if necessary, converts it to UTC. It is equivalent to parsing a string, and then calling the returned object's <xref:System.DateTimeOffset.ToUniversalTime> method.|  \\n|<xref:System.Globalization.DateTimeStyles.AllowInnerWhite>|Although valid, this value is ignored. Inner white space is allowed in the \\\\<Date> and \\\\<Time> components.|  \\n|<xref:System.Globalization.DateTimeStyles.AllowLeadingWhite>|Although valid, this value is ignored. Leading white space is allowed in front of each component in the parsed string.|  \\n|<xref:System.Globalization.DateTimeStyles.AllowTrailingWhite>|Although valid, this value is ignored. Trailing white space is allowed in front of each component in the parsed string.|  \\n|<xref:System.Globalization.DateTimeStyles.AllowWhiteSpaces>|This is the default behavior. It cannot be overridden by supplying a more restrictive <xref:System.Globalization.DateTimeStyles> enumeration value, such as <xref:System.Globalization.DateTimeStyles?displayProperty=fullName>.|  \\n|<xref:System.Globalization.DateTimeStyles.AssumeLocal>|Indicates that, if the `input` parameter lacks an \\\\<Offset> element, the offset of the local time zone should be provided. This is the default behavior of the <xref:System.DateTimeOffset.TryParse%28System.String%2CSystem.IFormatProvider%2CSystem.Globalization.DateTimeStyles%2CSystem.DateTimeOffset%40%29> method.|  \\n|<xref:System.Globalization.DateTimeStyles.AssumeUniversal>|Indicates that, if the `input` parameter lacks an \\\\<Offset> element, the UTC offset (00:00) should be provided.|  \\n|<xref:System.Globalization.DateTimeStyles.None>|Although valid, this value is ignored and has no effect.|  \\n|<xref:System.Globalization.DateTimeStyles.RoundtripKind>|Because the <xref:System.DateTimeOffset> structure does not include a `Kind` property, this value has no effect.|  \\n  \\n Only the <xref:System.Globalization.DateTimeStyles?displayProperty=fullName> value is not supported. An <xref:System.ArgumentException> is thrown if this value is included in the `styles` parameter.\"\n  example:\n  - \"The following example calls the <xref:System.DateTimeOffset.TryParse%28System.String%2CSystem.IFormatProvider%2CSystem.Globalization.DateTimeStyles%2CSystem.DateTimeOffset%40%29> method with a variety of <xref:System.Globalization.DateTimeStyles> values to parse some strings with various date and time formats.  \\n  \\n [!code-csharp[System.DateTimeOffset.TryParse#2](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.DateTimeOffset.TryParse/cs/TryParse.cs#2)]\\n [!code-vb[System.DateTimeOffset.TryParse#2](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.DateTimeOffset.TryParse/vb/TryParse.vb#2)]\"\n  syntax:\n    content: public static bool TryParse (string input, IFormatProvider formatProvider, System.Globalization.DateTimeStyles styles, out DateTimeOffset result);\n    parameters:\n    - id: input\n      type: System.String\n      description: A string that contains a date and time to convert.\n    - id: formatProvider\n      type: System.IFormatProvider\n      description: An object that provides culture-specific formatting information about <code>input</code>.\n    - id: styles\n      type: System.Globalization.DateTimeStyles\n      description: A bitwise combination of enumeration values that indicates the permitted format of <code>input</code>.\n    - id: result\n      type: System.DateTimeOffset\n      description: When the method returns, contains the <xref href=\"System.DateTimeOffset\"></xref> value equivalent to the date and time of <code>input</code>, if the conversion succeeded, or <xref href=\"System.DateTimeOffset.MinValue\"></xref>, if the conversion failed. The conversion fails if the <code>input</code> parameter is `null` or does not contain a valid string representation of a date and time. This parameter is passed uninitialized.\n    return:\n      type: System.Boolean\n      description: '`true` if the <code>input</code> parameter is successfully converted; otherwise, `false`.'\n  overload: System.DateTimeOffset.TryParse*\n  exceptions:\n  - type: System.ArgumentException\n    commentId: T:System.ArgumentException\n    description: \"<code>styles</code> includes an undefined <xref href=\\\"System.Globalization.DateTimeStyles\\\"></xref> value.  \\n  \\n -or-  \\n  \\n <xref href=\\\"System.Globalization.DateTimeStyles.NoCurrentDateDefault\\\"></xref> is not supported.  \\n  \\n -or-  \\n  \\n <code>styles</code> includes mutually exclusive <xref href=\\\"System.Globalization.DateTimeStyles\\\"></xref> values.\"\n  version:\n  - netcore-1.0\n  - netcore-1.1\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - netstandard-1.0\n  - netstandard-1.1\n  - netstandard-1.2\n  - netstandard-1.3\n  - netstandard-1.4\n  - netstandard-1.5\n  - netstandard-1.6\n  - netstandard-2.0\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  monikers:\n  - netcore-1.0\n  - netcore-1.1\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - netstandard-1.0\n  - netstandard-1.1\n  - netstandard-1.2\n  - netstandard-1.3\n  - netstandard-1.4\n  - netstandard-1.5\n  - netstandard-1.6\n  - netstandard-2.0\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System/DateTimeOffset.xml\n  ms.technology:\n  - dotnet-standard\n  author: rpetrusha\n  ms.author: ronpet\n  manager: wpickett\n- uid: System.DateTimeOffset.TryParse(System.String,System.DateTimeOffset@)\n  commentId: M:System.DateTimeOffset.TryParse(System.String,System.DateTimeOffset@)\n  id: TryParse(System.String,System.DateTimeOffset@)\n  parent: System.DateTimeOffset\n  langs:\n  - csharp\n  name: TryParse(String, DateTimeOffset)\n  nameWithType: DateTimeOffset.TryParse(String, DateTimeOffset)\n  fullName: DateTimeOffset.TryParse(String, DateTimeOffset)\n  type: Method\n  assemblies:\n  - System.Runtime\n  - mscorlib\n  - netstandard\n  namespace: System\n  summary: Tries to converts a specified string representation of a date and time to its <xref href=\"System.DateTimeOffset\"></xref> equivalent, and returns a value that indicates whether the conversion succeeded.\n  remarks: \"This overload of the <xref:System.DateTimeOffset.TryParse%28System.String%2CSystem.DateTimeOffset%40%29> method is like the <xref:System.DateTimeOffset.Parse%28System.String%29?displayProperty=fullName> method, except that it does not throw an exception if the conversion fails. It parses a string with three elements that can appear in any order and are delimited by white space. These three elements are shown in the following table.  \\n  \\n|Element|Example|  \\n|-------------|-------------|  \\n|\\\\<Date>|\\\"2/10/2007\\\"|  \\n|\\\\<Time>|\\\"1:02:03 PM\\\"|  \\n|\\\\<Offset>|\\\"-7:30\\\"|  \\n  \\n Although each of these elements is optional, \\\\<Offset> cannot appear by itself. It must be provided together with either \\\\<Date> or \\\\<Time>. If \\\\<Date> is missing, its default value is the current day. If \\\\<Date> is present but its year component consists of only two digits, it is converted to a year in the current culture's current calendar based on the value of the <xref:System.Globalization.Calendar.TwoDigitYearMax%2A?displayProperty=fullName> property. If \\\\<Time> is missing, its default value is 12:00:00 AM. If \\\\<Offset> is missing, its default value is the offset of the local time zone. If \\\\<Offset> is present, it can represent either a negative or a positive offset from Coordinated Universal Time (UTC). In either case, \\\\<Offset> must include a sign symbol or the method returns `false`.  \\n  \\n The `input` string is parsed by using the formatting information in a <xref:System.Globalization.DateTimeFormatInfo> object initialized for the current culture. To parse a string that contains designated formatting that does not necessarily correspond to that of the current culture, use the <xref:System.DateTimeOffset.TryParseExact%2A> method and provide a format specifier.\"\n  example:\n  - \"The following example calls the <xref:System.DateTimeOffset.TryParse%28System.String%2CSystem.DateTimeOffset%40%29> method to parse several strings with various date and time formats.  \\n  \\n [!code-csharp[System.DateTimeOffset.TryParse#1](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.DateTimeOffset.TryParse/cs/TryParse.cs#1)]\\n [!code-vb[System.DateTimeOffset.TryParse#1](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.DateTimeOffset.TryParse/vb/TryParse.vb#1)]\"\n  syntax:\n    content: public static bool TryParse (string input, out DateTimeOffset result);\n    parameters:\n    - id: input\n      type: System.String\n      description: A string that contains a date and time to convert.\n    - id: result\n      type: System.DateTimeOffset\n      description: When the method returns, contains the <xref href=\"System.DateTimeOffset\"></xref> equivalent to the date and time of <code>input</code>, if the conversion succeeded, or <xref href=\"System.DateTimeOffset.MinValue\"></xref>, if the conversion failed. The conversion fails if the <code>input</code> parameter is `null` or does not contain a valid string representation of a date and time. This parameter is passed uninitialized.\n    return:\n      type: System.Boolean\n      description: '`true` if the <code>input</code> parameter is successfully converted; otherwise, `false`.'\n  overload: System.DateTimeOffset.TryParse*\n  exceptions: []\n  version:\n  - netcore-1.0\n  - netcore-1.1\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - netstandard-1.0\n  - netstandard-1.1\n  - netstandard-1.2\n  - netstandard-1.3\n  - netstandard-1.4\n  - netstandard-1.5\n  - netstandard-1.6\n  - netstandard-2.0\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  monikers:\n  - netcore-1.0\n  - netcore-1.1\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - netstandard-1.0\n  - netstandard-1.1\n  - netstandard-1.2\n  - netstandard-1.3\n  - netstandard-1.4\n  - netstandard-1.5\n  - netstandard-1.6\n  - netstandard-2.0\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System/DateTimeOffset.xml\n  ms.technology:\n  - dotnet-standard\n  author: rpetrusha\n  ms.author: ronpet\n  manager: wpickett\n- uid: System.DateTimeOffset.TryParseExact(System.String,System.String[],System.IFormatProvider,System.Globalization.DateTimeStyles,System.DateTimeOffset@)\n  commentId: M:System.DateTimeOffset.TryParseExact(System.String,System.String[],System.IFormatProvider,System.Globalization.DateTimeStyles,System.DateTimeOffset@)\n  id: TryParseExact(System.String,System.String[],System.IFormatProvider,System.Globalization.DateTimeStyles,System.DateTimeOffset@)\n  parent: System.DateTimeOffset\n  langs:\n  - csharp\n  name: TryParseExact(String, String[], IFormatProvider, DateTimeStyles, DateTimeOffset)\n  nameWithType: DateTimeOffset.TryParseExact(String, String[], IFormatProvider, DateTimeStyles, DateTimeOffset)\n  fullName: DateTimeOffset.TryParseExact(String, String[], IFormatProvider, DateTimeStyles, DateTimeOffset)\n  type: Method\n  assemblies:\n  - System.Runtime\n  - mscorlib\n  - netstandard\n  namespace: System\n  summary: Converts the specified string representation of a date and time to its <xref href=\"System.DateTimeOffset\"></xref> equivalent using the specified array of formats, culture-specific format information, and style. The format of the string representation must match one of the specified formats exactly.\n  remarks: \"The <xref:System.DateTimeOffset.TryParseExact%28System.String%2CSystem.String%5B%5D%2CSystem.IFormatProvider%2CSystem.Globalization.DateTimeStyles%2CSystem.DateTimeOffset%40%29> method parses the string representation of a date that matches any one of the patterns assigned to the `formats` array. If the `input` string does not match any one of these patterns with any variations defined by the `styles` parameter, the parsing operation fails and the method returns `false`. Aside from comparing `input` to multiple strings that contain format specifiers, this overload behaves identically to the <xref:System.DateTimeOffset.ParseExact%28System.String%2CSystem.String%5B%5D%2CSystem.IFormatProvider%2CSystem.Globalization.DateTimeStyles%29?displayProperty=fullName> method.  \\n  \\n The `formats` parameter is a string array whose elements contain either a single standard format specifier or one or more custom format specifiers that define the possible pattern of `input`. For details about valid formatting codes, see [Standard Date and Time Format Strings](~/docs/standard/base-types/standard-date-and-time-format-strings.md) and [Custom Date and Time Format Strings](~/docs/standard/base-types/custom-date-and-time-format-strings.md). If the matched element in `formats` includes the `z`, `zz`, or `zzz` custom format specifiers to indicate that an offset must be present in `input`, that offset must include either a negative sign or a positive sign. If the sign is missing, the parse operation fails and the method returns `false`.  \\n  \\n> [!IMPORTANT]\\n>  Using the `formats` parameter of this overload to specify multiple formats can help reduce the frustration many users experience when they enter dates and times. In particular, the ability to define multiple input patterns enables an application to handle date and time representations that can either include or lack leading zeros in months, days, hours, minutes, and seconds. The example provides an illustration of this.  \\n  \\n If the matched element in `formats` requires that `input` contain a date but not a time, the resulting <xref:System.DateTimeOffset> object is assigned a time of midnight (0:00:00). If the matched element in `formats` requires that input contain a time but not a date, the resulting <xref:System.DateTimeOffset> object is assigned the current date on the local system. If the matched element in `formats` does not require that `input` contain an offset, the offset of the resulting <xref:System.DateTimeOffset> object depends on the value of the `styles` parameter. If `styles` includes <xref:System.Globalization.DateTimeStyles.AssumeLocal>, the offset of the local time zone is assigned to the <xref:System.DateTimeOffset> object. If `styles` includes <xref:System.Globalization.DateTimeStyles.AssumeUniversal>, the Coordinated Universal Time (UTC) offset, or +00:00, is assigned to the <xref:System.DateTimeOffset> object. If neither value is specified, the offset of the local time zone is used.  \\n  \\n The particular date and time symbols and strings used in `input` are defined by the `formatProvider` parameter. The same is true for the precise pattern of `input` if the matching element of `formats` is a standard format specifier string. The `formatProvider` parameter can be either of the following:  \\n  \\n-   A <xref:System.Globalization.CultureInfo> object that represents the culture based on which `input` is interpreted. The <xref:System.Globalization.DateTimeFormatInfo> object returned by the <xref:System.Globalization.CultureInfo.DateTimeFormat%2A?displayProperty=fullName> property defines the symbols and formatting in `input`.  \\n  \\n-   A <xref:System.Globalization.DateTimeFormatInfo> object that defines the format of date and time data.  \\n  \\n If `formatprovider` is `null`, the <xref:System.Globalization.CultureInfo> object that corresponds to the current culture is used.  \\n  \\n The `styles` parameter defines whether white space is permitted in the input string, indicates how strings without an explicit offset component are parsed, and supports UTC conversion as part of the parsing operation. All members of the <xref:System.Globalization.DateTimeStyles> enumeration are supported except <xref:System.Globalization.DateTimeStyles.NoCurrentDateDefault>. The following table lists the effect of each supported member.  \\n  \\n|`DateTimeStyles` member|Behavior|  \\n|-----------------------------|--------------|  \\n|<xref:System.Globalization.DateTimeStyles.AdjustToUniversal>|Parses `input` and, if necessary, converts it to UTC. It is equivalent to parsing a string, and then calling the <xref:System.DateTimeOffset.ToUniversalTime%2A?displayProperty=fullName> method of the returned <xref:System.DateTimeOffset> object.|  \\n|<xref:System.Globalization.DateTimeStyles.AssumeLocal>|If the matched element in `formats` does not require that `input` contain an offset value, the returned <xref:System.DateTimeOffset> object is given the offset of the local time zone. This is the default value.|  \\n|<xref:System.Globalization.DateTimeStyles.AssumeUniversal>|If the matched element in `formats` does not require that `input` contain an offset value, the returned <xref:System.DateTimeOffset> object is given the UTC offset (+00:00).|  \\n|<xref:System.Globalization.DateTimeStyles.AllowInnerWhite>|Allows `input` to include inner white space not specified by the elements in `formats`. Extra white space can appear between date and time components and within individual components (except for the offset) and is ignored when parsing the string.|  \\n|<xref:System.Globalization.DateTimeStyles.AllowLeadingWhite>|Allows `input` to include leading spaces not specified by the elements in `formats`. These are ignored when parsing the string.|  \\n|<xref:System.Globalization.DateTimeStyles.AllowTrailingWhite>|Allows `input` to include trailing spaces not specified by the elements in `formats`. These are ignored when parsing the string.|  \\n|<xref:System.Globalization.DateTimeStyles.AllowWhiteSpaces>|Allows `input` to include leading, trailing, and inner spaces not specified by the elements in `formats`. All extra white-space characters not specified in the matched element in `formats` are ignored when parsing the string.|  \\n|<xref:System.Globalization.DateTimeStyles.None>|Indicates that additional white space is not permitted in `input`. White space must appear exactly as specified in a particular element in `formats` for a successful match to occur. This is the default behavior.|  \\n|<xref:System.Globalization.DateTimeStyles.RoundtripKind>|Has no effect because the <xref:System.DateTimeOffset> structure does not include a `Kind` property.|\"\n  example:\n  - \"The following example defines multiple input formats for the string representation of a date and time and offset value, and then passes the string that is entered by the user to the <xref:System.DateTimeOffset.TryParseExact%28System.String%2CSystem.String%5B%5D%2CSystem.IFormatProvider%2CSystem.Globalization.DateTimeStyles%2CSystem.DateTimeOffset%40%29> method.  \\n  \\n [!code-csharp[System.DateTimeOffset.TryParseExact#2](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.DateTimeOffset.TryParseExact/cs/TryParseExact.cs#2)]\\n [!code-vb[System.DateTimeOffset.TryParseExact#2](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.DateTimeOffset.TryParseExact/vb/TryParseExact.vb#2)]\"\n  syntax:\n    content: public static bool TryParseExact (string input, string[] formats, IFormatProvider formatProvider, System.Globalization.DateTimeStyles styles, out DateTimeOffset result);\n    parameters:\n    - id: input\n      type: System.String\n      description: A string that contains a date and time to convert.\n    - id: formats\n      type: System.String[]\n      description: An array that defines the expected formats of <code>input</code>.\n    - id: formatProvider\n      type: System.IFormatProvider\n      description: An object that supplies culture-specific formatting information about <code>input</code>.\n    - id: styles\n      type: System.Globalization.DateTimeStyles\n      description: A bitwise combination of enumeration values that indicates the permitted format of input. A typical value to specify is `None`.\n    - id: result\n      type: System.DateTimeOffset\n      description: When the method returns, contains the <xref href=\"System.DateTimeOffset\"></xref> equivalent to the date and time of <code>input</code>, if the conversion succeeded, or <xref href=\"System.DateTimeOffset.MinValue\"></xref>, if the conversion failed. The conversion fails if the <code>input</code> does not contain a valid string representation of a date and time, or does not contain the date and time in the expected format defined by <code>format</code>, or if <code>formats</code> is `null`. This parameter is passed uninitialized.\n    return:\n      type: System.Boolean\n      description: '`true` if the <code>input</code> parameter is successfully converted; otherwise, `false`.'\n  overload: System.DateTimeOffset.TryParseExact*\n  exceptions:\n  - type: System.ArgumentException\n    commentId: T:System.ArgumentException\n    description: \"<code>styles</code> includes an undefined <xref href=\\\"System.Globalization.DateTimeStyles\\\"></xref> value.  \\n  \\n -or-  \\n  \\n <xref href=\\\"System.Globalization.DateTimeStyles.NoCurrentDateDefault\\\"></xref> is not supported.  \\n  \\n -or-  \\n  \\n <code>styles</code> includes mutually exclusive <xref href=\\\"System.Globalization.DateTimeStyles\\\"></xref> values.\"\n  version:\n  - netcore-1.0\n  - netcore-1.1\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - netstandard-1.0\n  - netstandard-1.1\n  - netstandard-1.2\n  - netstandard-1.3\n  - netstandard-1.4\n  - netstandard-1.5\n  - netstandard-1.6\n  - netstandard-2.0\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  monikers:\n  - netcore-1.0\n  - netcore-1.1\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - netstandard-1.0\n  - netstandard-1.1\n  - netstandard-1.2\n  - netstandard-1.3\n  - netstandard-1.4\n  - netstandard-1.5\n  - netstandard-1.6\n  - netstandard-2.0\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System/DateTimeOffset.xml\n  ms.technology:\n  - dotnet-standard\n  author: rpetrusha\n  ms.author: ronpet\n  manager: wpickett\n- uid: System.DateTimeOffset.TryParseExact(System.String,System.String,System.IFormatProvider,System.Globalization.DateTimeStyles,System.DateTimeOffset@)\n  commentId: M:System.DateTimeOffset.TryParseExact(System.String,System.String,System.IFormatProvider,System.Globalization.DateTimeStyles,System.DateTimeOffset@)\n  id: TryParseExact(System.String,System.String,System.IFormatProvider,System.Globalization.DateTimeStyles,System.DateTimeOffset@)\n  parent: System.DateTimeOffset\n  langs:\n  - csharp\n  name: TryParseExact(String, String, IFormatProvider, DateTimeStyles, DateTimeOffset)\n  nameWithType: DateTimeOffset.TryParseExact(String, String, IFormatProvider, DateTimeStyles, DateTimeOffset)\n  fullName: DateTimeOffset.TryParseExact(String, String, IFormatProvider, DateTimeStyles, DateTimeOffset)\n  type: Method\n  assemblies:\n  - System.Runtime\n  - mscorlib\n  - netstandard\n  namespace: System\n  summary: Converts the specified string representation of a date and time to its <xref href=\"System.DateTimeOffset\"></xref> equivalent using the specified format, culture-specific format information, and style. The format of the string representation must match the specified format exactly.\n  remarks: \"This overload of the <xref:System.DateTimeOffset.TryParseExact%28System.String%2CSystem.String%2CSystem.IFormatProvider%2CSystem.Globalization.DateTimeStyles%2CSystem.DateTimeOffset%40%29> method is like the <xref:System.DateTimeOffset.ParseExact%28System.String%2CSystem.String%2CSystem.IFormatProvider%2CSystem.Globalization.DateTimeStyles%29?displayProperty=fullName> method, except that this method does not throw an exception if the conversion fails. It parses the string representation of a date and time that must exactly match the pattern specified by the `format` parameter. If the `input` string does not match this pattern, with some possible variations in white space defined by the `styles` parameter, the parsing operation fails and the method returns `false`.  \\n  \\n The `format` parameter is a string that contains either a single standard format specifier or one or more custom format specifiers that define the required pattern of `input`. For details about valid formatting codes, see [Standard Date and Time Format Strings](~/docs/standard/base-types/standard-date-and-time-format-strings.md) and [Custom Date and Time Format Strings](~/docs/standard/base-types/custom-date-and-time-format-strings.md). If `format` includes the `z`, `zz`, or `zzz` custom format specifiers to indicate that an offset must be present in `input`, that offset must include either a negative sign or a positive sign. If the sign is missing, the parsing operation fails and the method returns `false`.  \\n  \\n If `format` requires that `input` contain a date but not a time, the resulting <xref:System.DateTimeOffset> object is assigned a time of midnight (0:00:00). If `format` requires that `input` contain a time but not a date, the resulting <xref:System.DateTimeOffset> object is assigned the current date on the local system. If `format` does not require that `input` contain an offset, the offset of the resulting <xref:System.DateTimeOffset> object depends on the value of the `styles` parameter. If `styles` includes <xref:System.Globalization.DateTimeStyles.AssumeLocal>, the offset of the local time zone is assigned to the <xref:System.DateTimeOffset> object. If `styles` includes <xref:System.Globalization.DateTimeStyles.AssumeUniversal>, the Coordinated Universal Time (UTC) offset, or +00:00, is assigned to the <xref:System.DateTimeOffset> object. If neither value is specified, the offset of the local time zone is used.  \\n  \\n The particular date and time symbols and strings used in `input` are defined by the `formatProvider` parameter. The same is true for the precise pattern of `input` if `format` is a standard format specifier string. The `formatProvider` parameter can be either of the following:  \\n  \\n-   A <xref:System.Globalization.CultureInfo> object that represents the culture based on which `input` is interpreted. The <xref:System.Globalization.DateTimeFormatInfo> object returned by the <xref:System.Globalization.CultureInfo.DateTimeFormat%2A?displayProperty=fullName> property defines the symbols and standard formats allowed in `input`.  \\n  \\n-   A <xref:System.Globalization.DateTimeFormatInfo> object that defines the format of date and time data.  \\n  \\n If `formatprovider` is `null`, the <xref:System.Globalization.CultureInfo> object that corresponds to the current culture is used.  \\n  \\n The `styles` parameter defines whether white space is allowed in the input string, indicates how strings without an explicit offset component are parsed, and supports UTC conversion as part of the parsing operation. All members of the <xref:System.Globalization.DateTimeStyles> enumeration are supported except <xref:System.Globalization.DateTimeStyles.NoCurrentDateDefault>. The following table lists the effect of each supported member.  \\n  \\n|`DateTimeStyles` member|Behavior|  \\n|-----------------------------|--------------|  \\n|<xref:System.Globalization.DateTimeStyles.AdjustToUniversal>|Parses `input` and, if necessary, converts it to UTC. It is equivalent to parsing a string, and then calling the <xref:System.DateTimeOffset.ToUniversalTime%2A?displayProperty=fullName> method of the returned <xref:System.DateTimeOffset> object.|  \\n|<xref:System.Globalization.DateTimeStyles.AssumeLocal>|If `format` does not require that `input` contain an offset value, the returned <xref:System.DateTimeOffset> object is given the offset of the local time zone. This is the default behavior.|  \\n|<xref:System.Globalization.DateTimeStyles.AssumeUniversal>|If `format` does not require that `input` contain an offset value, the returned <xref:System.DateTimeOffset> object is given the UTC offset (+00:00).|  \\n|<xref:System.Globalization.DateTimeStyles.AllowInnerWhite>|Allows `input` to include inner white space not specified by format. Extra white space can appear between date and time components and within individual components, other than the offset, and is ignored when parsing the string.|  \\n|<xref:System.Globalization.DateTimeStyles.AllowLeadingWhite>|Allows `input` to include leading spaces not specified by `format`. These are ignored when parsing the string.|  \\n|<xref:System.Globalization.DateTimeStyles.AllowTrailingWhite>|Allows `input` to include trailing spaces not specified by `format`. These are ignored when parsing the string.|  \\n|<xref:System.Globalization.DateTimeStyles.AllowWhiteSpaces>|Allows `input` to include leading, trailing, and inner spaces not specified by `format`. All extra white-space characters not specified in `format` are ignored when parsing the string.|  \\n|<xref:System.Globalization.DateTimeStyles.None>|Indicates that additional white space is not permitted in `input`. White space must appear exactly as specified in `format`. This is the default behavior.|  \\n|<xref:System.Globalization.DateTimeStyles.RoundtripKind>|Has no effect, because the <xref:System.DateTimeOffset> structure does not include a `Kind` property.|\"\n  example:\n  - \"The following example uses the <xref:System.DateTimeOffset.TryParseExact%28System.String%2CSystem.String%2CSystem.IFormatProvider%2CSystem.Globalization.DateTimeStyles%2CSystem.DateTimeOffset%40%29> method with standard and custom format specifiers, the invariant culture, and various <xref:System.Globalization.DateTimeStyles> values to parse several date and time strings.  \\n  \\n [!code-csharp[System.DateTimeOffset.TryParseExact#1](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.DateTimeOffset.TryParseExact/cs/TryParseExact.cs#1)]\\n [!code-vb[System.DateTimeOffset.TryParseExact#1](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.DateTimeOffset.TryParseExact/vb/TryParseExact.vb#1)]\"\n  syntax:\n    content: public static bool TryParseExact (string input, string format, IFormatProvider formatProvider, System.Globalization.DateTimeStyles styles, out DateTimeOffset result);\n    parameters:\n    - id: input\n      type: System.String\n      description: A string that contains a date and time to convert.\n    - id: format\n      type: System.String\n      description: A format specifier that defines the required format of <code>input</code>.\n    - id: formatProvider\n      type: System.IFormatProvider\n      description: An object that supplies culture-specific formatting information about <code>input</code>.\n    - id: styles\n      type: System.Globalization.DateTimeStyles\n      description: A bitwise combination of enumeration values that indicates the permitted format of input. A typical value to specify is `None`.\n    - id: result\n      type: System.DateTimeOffset\n      description: When the method returns, contains the <xref href=\"System.DateTimeOffset\"></xref> equivalent to the date and time of <code>input</code>, if the conversion succeeded, or <xref href=\"System.DateTimeOffset.MinValue\"></xref>, if the conversion failed. The conversion fails if the <code>input</code> parameter is `null`, or does not contain a valid string representation of a date and time in the expected format defined by <code>format</code> and <code>provider</code>. This parameter is passed uninitialized.\n    return:\n      type: System.Boolean\n      description: '`true` if the <code>input</code> parameter is successfully converted; otherwise, `false`.'\n  overload: System.DateTimeOffset.TryParseExact*\n  exceptions:\n  - type: System.ArgumentException\n    commentId: T:System.ArgumentException\n    description: \"<code>styles</code> includes an undefined <xref href=\\\"System.Globalization.DateTimeStyles\\\"></xref> value.  \\n  \\n -or-  \\n  \\n <xref href=\\\"System.Globalization.DateTimeStyles.NoCurrentDateDefault\\\"></xref> is not supported.  \\n  \\n -or-  \\n  \\n <code>styles</code> includes mutually exclusive <xref href=\\\"System.Globalization.DateTimeStyles\\\"></xref> values.\"\n  version:\n  - netcore-1.0\n  - netcore-1.1\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - netstandard-1.0\n  - netstandard-1.1\n  - netstandard-1.2\n  - netstandard-1.3\n  - netstandard-1.4\n  - netstandard-1.5\n  - netstandard-1.6\n  - netstandard-2.0\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  monikers:\n  - netcore-1.0\n  - netcore-1.1\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - netstandard-1.0\n  - netstandard-1.1\n  - netstandard-1.2\n  - netstandard-1.3\n  - netstandard-1.4\n  - netstandard-1.5\n  - netstandard-1.6\n  - netstandard-2.0\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System/DateTimeOffset.xml\n  ms.technology:\n  - dotnet-standard\n  author: rpetrusha\n  ms.author: ronpet\n  manager: wpickett\n- uid: System.DateTimeOffset.UtcDateTime\n  commentId: P:System.DateTimeOffset.UtcDateTime\n  id: UtcDateTime\n  parent: System.DateTimeOffset\n  langs:\n  - csharp\n  name: UtcDateTime\n  nameWithType: DateTimeOffset.UtcDateTime\n  fullName: DateTimeOffset.UtcDateTime\n  type: Property\n  assemblies:\n  - System.Runtime\n  - mscorlib\n  - netstandard\n  namespace: System\n  summary: Gets a <xref href=\"System.DateTime\"></xref> value that represents the Coordinated Universal Time (UTC) date and time of the current <xref href=\"System.DateTimeOffset\"></xref> object.\n  remarks: \"The <xref:System.DateTimeOffset.UtcDateTime%2A> property performs a dual conversion:  \\n  \\n-   It converts the date and time of the current <xref:System.DateTimeOffset> object to Coordinated Universal Time (UTC). The conversion is performed by subtracting the value of the <xref:System.DateTimeOffset.Offset%2A> property from the date and time of the current <xref:System.DateTimeOffset> object.  \\n  \\n-   It converts the <xref:System.DateTimeOffset> value to a <xref:System.DateTime> value.  \\n  \\n The <xref:System.DateTime.Kind%2A> property of the returned <xref:System.DateTimeOffset.DateTime%2A> value is set to <xref:System.DateTimeKind?displayProperty=fullName>.  \\n  \\n Retrieving the value of the <xref:System.DateTimeOffset.UtcDateTime%2A> property is equivalent to calling the current <xref:System.DateTimeOffset> object's `ToUniversalTime.DateTime` property, except that the <xref:System.DateTime.Kind%2A> property of the latter <xref:System.DateTime> value is <xref:System.DateTimeKind?displayProperty=fullName>.\"\n  example:\n  - \"The following example shows how to use of the <xref:System.DateTimeOffset.UtcDateTime%2A> property to display a <xref:System.DateTimeOffset> value and its corresponding UTC time.  \\n  \\n [!code-csharp[System.DateTimeOffset.Properties#17](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.DateTimeOffset.Properties/cs/Properties.cs#17)]\\n [!code-vb[System.DateTimeOffset.Properties#17](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.DateTimeOffset.Properties/vb/Properties.vb#17)]\"\n  syntax:\n    content: public DateTime UtcDateTime { get; }\n    return:\n      type: System.DateTime\n      description: The Coordinated Universal Time (UTC) date and time of the current <xref href=\"System.DateTimeOffset\"></xref> object.\n  overload: System.DateTimeOffset.UtcDateTime*\n  exceptions: []\n  version:\n  - netcore-1.0\n  - netcore-1.1\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - netstandard-1.0\n  - netstandard-1.1\n  - netstandard-1.2\n  - netstandard-1.3\n  - netstandard-1.4\n  - netstandard-1.5\n  - netstandard-1.6\n  - netstandard-2.0\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  monikers:\n  - netcore-1.0\n  - netcore-1.1\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - netstandard-1.0\n  - netstandard-1.1\n  - netstandard-1.2\n  - netstandard-1.3\n  - netstandard-1.4\n  - netstandard-1.5\n  - netstandard-1.6\n  - netstandard-2.0\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System/DateTimeOffset.xml\n  ms.technology:\n  - dotnet-standard\n  author: rpetrusha\n  ms.author: ronpet\n  manager: wpickett\n- uid: System.DateTimeOffset.UtcNow\n  commentId: P:System.DateTimeOffset.UtcNow\n  id: UtcNow\n  parent: System.DateTimeOffset\n  langs:\n  - csharp\n  name: UtcNow\n  nameWithType: DateTimeOffset.UtcNow\n  fullName: DateTimeOffset.UtcNow\n  type: Property\n  assemblies:\n  - System.Runtime\n  - mscorlib\n  - netstandard\n  namespace: System\n  summary: Gets a <xref href=\"System.DateTimeOffset\"></xref> object whose date and time are set to the current Coordinated Universal Time (UTC) date and time and whose offset is <xref href=\"System.TimeSpan.Zero\"></xref>.\n  remarks: \"The <xref:System.DateTimeOffset.UtcNow%2A> property computes the current Universal Coordinated Time (UTC) based on the local system's clock time and an offset defined by the local system's time zone.  \\n  \\n The precision of the current UTC time's millisecond component depends on the resolution of the system clock. On Windows NT 3.5 and later, and Windows Vista operating systems, the clock's resolution is approximately 10-15 milliseconds.\"\n  example:\n  - \"The following example illustrates the relationship between Coordinated Universal Time (UTC) and local time.  \\n  \\n [!code-csharp[System.DateTimeOffset.Properties#18](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.DateTimeOffset.Properties/cs/Properties.cs#18)]\\n [!code-vb[System.DateTimeOffset.Properties#18](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.DateTimeOffset.Properties/vb/Properties.vb#18)]\"\n  syntax:\n    content: public static DateTimeOffset UtcNow { get; }\n    return:\n      type: System.DateTimeOffset\n      description: An object whose date and time is the current Coordinated Universal Time (UTC) and whose offset is <xref href=\"System.TimeSpan.Zero\"></xref>.\n  overload: System.DateTimeOffset.UtcNow*\n  exceptions: []\n  version:\n  - netcore-1.0\n  - netcore-1.1\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - netstandard-1.0\n  - netstandard-1.1\n  - netstandard-1.2\n  - netstandard-1.3\n  - netstandard-1.4\n  - netstandard-1.5\n  - netstandard-1.6\n  - netstandard-2.0\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  monikers:\n  - netcore-1.0\n  - netcore-1.1\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - netstandard-1.0\n  - netstandard-1.1\n  - netstandard-1.2\n  - netstandard-1.3\n  - netstandard-1.4\n  - netstandard-1.5\n  - netstandard-1.6\n  - netstandard-2.0\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System/DateTimeOffset.xml\n  ms.technology:\n  - dotnet-standard\n  author: rpetrusha\n  ms.author: ronpet\n  manager: wpickett\n- uid: System.DateTimeOffset.UtcTicks\n  commentId: P:System.DateTimeOffset.UtcTicks\n  id: UtcTicks\n  parent: System.DateTimeOffset\n  langs:\n  - csharp\n  name: UtcTicks\n  nameWithType: DateTimeOffset.UtcTicks\n  fullName: DateTimeOffset.UtcTicks\n  type: Property\n  assemblies:\n  - System.Runtime\n  - mscorlib\n  - netstandard\n  namespace: System\n  summary: Gets the number of ticks that represents the date and time of the current <xref href=\"System.DateTimeOffset\"></xref> object in Coordinated Universal Time (UTC).\n  remarks: The value of the <xref:System.DateTimeOffset.UtcTicks%2A> property represents the number of 100-nanosecond intervals that have elapsed since 12:00:00 midnight on January 1, 0001 (the value of <xref:System.DateTimeOffset.MinValue>). It does not include ticks that would be added by leap seconds. A nanosecond is one billionth of a second; there are ten million ticks in a second. The value of the <xref:System.DateTimeOffset.UtcTicks%2A> property ranges from `DateTimeOffset.MinValue.Ticks` to `DateTimeOffset.MaxValue.Ticks`.\n  syntax:\n    content: public long UtcTicks { get; }\n    return:\n      type: System.Int64\n      description: The number of ticks in the <xref href=\"System.DateTimeOffset\"></xref> object's Coordinated Universal Time (UTC).\n  overload: System.DateTimeOffset.UtcTicks*\n  exceptions: []\n  version:\n  - netcore-1.0\n  - netcore-1.1\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - netstandard-1.0\n  - netstandard-1.1\n  - netstandard-1.2\n  - netstandard-1.3\n  - netstandard-1.4\n  - netstandard-1.5\n  - netstandard-1.6\n  - netstandard-2.0\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  monikers:\n  - netcore-1.0\n  - netcore-1.1\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - netstandard-1.0\n  - netstandard-1.1\n  - netstandard-1.2\n  - netstandard-1.3\n  - netstandard-1.4\n  - netstandard-1.5\n  - netstandard-1.6\n  - netstandard-2.0\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System/DateTimeOffset.xml\n  ms.technology:\n  - dotnet-standard\n  author: rpetrusha\n  ms.author: ronpet\n  manager: wpickett\n- uid: System.DateTimeOffset.Year\n  commentId: P:System.DateTimeOffset.Year\n  id: Year\n  parent: System.DateTimeOffset\n  langs:\n  - csharp\n  name: Year\n  nameWithType: DateTimeOffset.Year\n  fullName: DateTimeOffset.Year\n  type: Property\n  assemblies:\n  - System.Runtime\n  - mscorlib\n  - netstandard\n  namespace: System\n  summary: Gets the year component of the date represented by the current <xref href=\"System.DateTimeOffset\"></xref> object.\n  remarks: \"The <xref:System.DateTimeOffset.Year%2A> property is not affected by the value of the <xref:System.DateTimeOffset.Offset%2A> property.  \\n  \\n You can also create a string representation of a <xref:System.DateTimeOffset> object's year component by calling the <xref:System.DateTimeOffset.ToString%2A> method with the \\\"y\\\", \\\"yy\\\", or \\\"yyyy\\\" custom format specifiers.\"\n  example:\n  - \"The following example displays the year component of a <xref:System.DateTimeOffset> value in four different ways:  \\n  \\n-   By retrieving the value of the <xref:System.DateTimeOffset.Year%2A> property.  \\n  \\n-   By calling the <xref:System.DateTimeOffset.ToString%28System.String%29> method with the \\\"y\\\" format specifier.  \\n  \\n-   By calling the <xref:System.DateTimeOffset.ToString%28System.String%29> method with the \\\"yy\\\" format specifier.  \\n  \\n-   By calling the <xref:System.DateTimeOffset.ToString%28System.String%29> method with the \\\"yyyy\\\" format specifier.  \\n  \\n [!code-csharp[System.DateTimeOffset.Properties#19](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.DateTimeOffset.Properties/cs/Properties.cs#19)]\\n [!code-vb[System.DateTimeOffset.Properties#19](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.DateTimeOffset.Properties/vb/Properties.vb#19)]\"\n  syntax:\n    content: public int Year { get; }\n    return:\n      type: System.Int32\n      description: The year component of the current <xref href=\"System.DateTimeOffset\"></xref> object, expressed as an integer value between 0 and 9999.\n  overload: System.DateTimeOffset.Year*\n  exceptions: []\n  version:\n  - netcore-1.0\n  - netcore-1.1\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - netstandard-1.0\n  - netstandard-1.1\n  - netstandard-1.2\n  - netstandard-1.3\n  - netstandard-1.4\n  - netstandard-1.5\n  - netstandard-1.6\n  - netstandard-2.0\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  monikers:\n  - netcore-1.0\n  - netcore-1.1\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - netstandard-1.0\n  - netstandard-1.1\n  - netstandard-1.2\n  - netstandard-1.3\n  - netstandard-1.4\n  - netstandard-1.5\n  - netstandard-1.6\n  - netstandard-2.0\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System/DateTimeOffset.xml\n  ms.technology:\n  - dotnet-standard\n  author: rpetrusha\n  ms.author: ronpet\n  manager: wpickett\n- uid: System.DateTimeOffset.System#IComparable#CompareTo(System.Object)\n  commentId: M:System.DateTimeOffset.System#IComparable#CompareTo(System.Object)\n  id: System#IComparable#CompareTo(System.Object)\n  isEii: true\n  parent: System.DateTimeOffset\n  langs:\n  - csharp\n  name: IComparable.CompareTo(Object)\n  nameWithType: DateTimeOffset.IComparable.CompareTo(Object)\n  fullName: DateTimeOffset.IComparable.CompareTo(Object)\n  type: Method\n  assemblies:\n  - System.Runtime\n  - mscorlib\n  - netstandard\n  namespace: System\n  summary: Compares the value of the current <xref href=\"System.DateTimeOffset\"></xref> object with another object of the same type.\n  syntax:\n    content: int IComparable.CompareTo (object obj);\n    parameters:\n    - id: obj\n      type: System.Object\n      description: The object to compare with the current <xref href=\"System.DateTimeOffset\"></xref> object.\n    return:\n      type: System.Int32\n      description: \"A 32-bit signed integer that indicates whether the current <xref href=\\\"System.DateTimeOffset\\\"></xref> object is less than, equal to, or greater than <code>obj</code>. The return values of the method are interpreted as follows:  \\n  \\n <table><thead><tr><th> Return Value  \\n  \\n </th><th> Description  \\n  \\n </th></tr></thead><tbody><tr><td> Less than zero  \\n  \\n </td><td> The current <xref href=\\\"System.DateTimeOffset\\\"></xref> object is less than (earlier than) <code>obj</code>.  \\n  \\n </td></tr><tr><td> Zero  \\n  \\n </td><td> The current <xref href=\\\"System.DateTimeOffset\\\"></xref> object is equal to (the same point in time as) <code>obj</code>.  \\n  \\n </td></tr><tr><td> Greater than zero  \\n  \\n </td><td> The current <xref href=\\\"System.DateTimeOffset\\\"></xref> object is greater than (later than) <code>obj</code>.  \\n  \\n </td></tr></tbody></table>\"\n  overload: System.DateTimeOffset.System#IComparable#CompareTo*\n  exceptions: []\n  version:\n  - netcore-1.0\n  - netcore-1.1\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - netstandard-1.0\n  - netstandard-1.1\n  - netstandard-1.2\n  - netstandard-1.3\n  - netstandard-1.4\n  - netstandard-1.5\n  - netstandard-1.6\n  - netstandard-2.0\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  monikers:\n  - netcore-1.0\n  - netcore-1.1\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - netstandard-1.0\n  - netstandard-1.1\n  - netstandard-1.2\n  - netstandard-1.3\n  - netstandard-1.4\n  - netstandard-1.5\n  - netstandard-1.6\n  - netstandard-2.0\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System/DateTimeOffset.xml\n  ms.technology:\n  - dotnet-standard\n  author: rpetrusha\n  ms.author: ronpet\n  manager: wpickett\n- uid: System.DateTimeOffset.System#Runtime#Serialization#IDeserializationCallback#OnDeserialization(System.Object)\n  commentId: M:System.DateTimeOffset.System#Runtime#Serialization#IDeserializationCallback#OnDeserialization(System.Object)\n  id: System#Runtime#Serialization#IDeserializationCallback#OnDeserialization(System.Object)\n  isEii: true\n  parent: System.DateTimeOffset\n  langs:\n  - csharp\n  name: IDeserializationCallback.OnDeserialization(Object)\n  nameWithType: DateTimeOffset.IDeserializationCallback.OnDeserialization(Object)\n  fullName: DateTimeOffset.IDeserializationCallback.OnDeserialization(Object)\n  type: Method\n  assemblies:\n  - mscorlib\n  - netstandard\n  - System.Runtime\n  namespace: System\n  summary: Runs when the deserialization of an object has been completed.\n  syntax:\n    content: void IDeserializationCallback.OnDeserialization (object sender);\n    parameters:\n    - id: sender\n      type: System.Object\n      description: The object that initiated the callback. The functionality for this parameter is not currently implemented.\n  overload: System.DateTimeOffset.System#Runtime#Serialization#IDeserializationCallback#OnDeserialization*\n  exceptions: []\n  version:\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - netstandard-2.0\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  monikers:\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - netstandard-2.0\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System/DateTimeOffset.xml\n  ms.technology:\n  - dotnet-standard\n  author: rpetrusha\n  ms.author: ronpet\n  manager: wpickett\n- uid: System.DateTimeOffset.System#Runtime#Serialization#ISerializable#GetObjectData(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)\n  commentId: M:System.DateTimeOffset.System#Runtime#Serialization#ISerializable#GetObjectData(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)\n  id: System#Runtime#Serialization#ISerializable#GetObjectData(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)\n  isEii: true\n  parent: System.DateTimeOffset\n  langs:\n  - csharp\n  name: ISerializable.GetObjectData(SerializationInfo, StreamingContext)\n  nameWithType: DateTimeOffset.ISerializable.GetObjectData(SerializationInfo, StreamingContext)\n  fullName: DateTimeOffset.ISerializable.GetObjectData(SerializationInfo, StreamingContext)\n  type: Method\n  assemblies:\n  - mscorlib\n  - netstandard\n  - System.Runtime\n  namespace: System\n  summary: Populates a <xref href=\"System.Runtime.Serialization.SerializationInfo\"></xref> object with the data required to serialize the current <xref href=\"System.DateTimeOffset\"></xref> object.\n  syntax:\n    content: >-\n      [System.Security.SecurityCritical]\n\n      void ISerializable.GetObjectData (System.Runtime.Serialization.SerializationInfo info, System.Runtime.Serialization.StreamingContext context);\n    parameters:\n    - id: info\n      type: System.Runtime.Serialization.SerializationInfo\n      description: The object to populate with data.\n    - id: context\n      type: System.Runtime.Serialization.StreamingContext\n      description: The destination for this serialization (see <xref href=\"System.Runtime.Serialization.StreamingContext\"></xref>).\n  overload: System.DateTimeOffset.System#Runtime#Serialization#ISerializable#GetObjectData*\n  exceptions:\n  - type: System.ArgumentNullException\n    commentId: T:System.ArgumentNullException\n    description: The <code>info</code> parameter is `null`.\n  attributes:\n  - type: System.Security.SecurityCriticalAttribute\n  version:\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - netstandard-2.0\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  monikers:\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - netstandard-2.0\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System/DateTimeOffset.xml\n  ms.technology:\n  - dotnet-standard\n  author: rpetrusha\n  ms.author: ronpet\n  manager: wpickett\nreferences:\n- uid: System.ValueType\n  parent: System\n  isExternal: false\n  name: ValueType\n  nameWithType: ValueType\n  fullName: System.ValueType\n- uid: System.ArgumentOutOfRangeException\n  parent: System\n  isExternal: false\n  name: ArgumentOutOfRangeException\n  nameWithType: ArgumentOutOfRangeException\n  fullName: System.ArgumentOutOfRangeException\n- uid: System.ArgumentException\n  parent: System\n  isExternal: false\n  name: ArgumentException\n  nameWithType: ArgumentException\n  fullName: System.ArgumentException\n- uid: System.ArgumentNullException\n  parent: System\n  isExternal: false\n  name: ArgumentNullException\n  nameWithType: ArgumentNullException\n  fullName: System.ArgumentNullException\n- uid: System.FormatException\n  parent: System\n  isExternal: false\n  name: FormatException\n  nameWithType: FormatException\n  fullName: System.FormatException\n- uid: System.DateTimeOffset.#ctor(System.DateTime)\n  parent: System.DateTimeOffset\n  isExternal: false\n  name: DateTimeOffset(DateTime)\n  nameWithType: DateTimeOffset.DateTimeOffset(DateTime)\n  fullName: DateTimeOffset.DateTimeOffset(DateTime)\n- uid: System.DateTime\n  parent: System\n  isExternal: false\n  name: DateTime\n  nameWithType: DateTime\n  fullName: System.DateTime\n- uid: System.DateTimeOffset.#ctor(System.DateTime,System.TimeSpan)\n  parent: System.DateTimeOffset\n  isExternal: false\n  name: DateTimeOffset(DateTime, TimeSpan)\n  nameWithType: DateTimeOffset.DateTimeOffset(DateTime, TimeSpan)\n  fullName: DateTimeOffset.DateTimeOffset(DateTime, TimeSpan)\n- uid: System.TimeSpan\n  parent: System\n  isExternal: false\n  name: TimeSpan\n  nameWithType: TimeSpan\n  fullName: System.TimeSpan\n- uid: System.DateTimeOffset.#ctor(System.Int64,System.TimeSpan)\n  parent: System.DateTimeOffset\n  isExternal: false\n  name: DateTimeOffset(Int64, TimeSpan)\n  nameWithType: DateTimeOffset.DateTimeOffset(Int64, TimeSpan)\n  fullName: DateTimeOffset.DateTimeOffset(Int64, TimeSpan)\n- uid: System.Int64\n  parent: System\n  isExternal: false\n  name: Int64\n  nameWithType: Int64\n  fullName: System.Int64\n- uid: System.DateTimeOffset.#ctor(System.Int32,System.Int32,System.Int32,System.Int32,System.Int32,System.Int32,System.TimeSpan)\n  parent: System.DateTimeOffset\n  isExternal: false\n  name: DateTimeOffset(Int32, Int32, Int32, Int32, Int32, Int32, TimeSpan)\n  nameWithType: DateTimeOffset.DateTimeOffset(Int32, Int32, Int32, Int32, Int32, Int32, TimeSpan)\n  fullName: DateTimeOffset.DateTimeOffset(Int32, Int32, Int32, Int32, Int32, Int32, TimeSpan)\n- uid: System.Int32\n  parent: System\n  isExternal: false\n  name: Int32\n  nameWithType: Int32\n  fullName: System.Int32\n- uid: System.DateTimeOffset.#ctor(System.Int32,System.Int32,System.Int32,System.Int32,System.Int32,System.Int32,System.Int32,System.TimeSpan)\n  parent: System.DateTimeOffset\n  isExternal: false\n  name: DateTimeOffset(Int32, Int32, Int32, Int32, Int32, Int32, Int32, TimeSpan)\n  nameWithType: DateTimeOffset.DateTimeOffset(Int32, Int32, Int32, Int32, Int32, Int32, Int32, TimeSpan)\n  fullName: DateTimeOffset.DateTimeOffset(Int32, Int32, Int32, Int32, Int32, Int32, Int32, TimeSpan)\n- uid: System.DateTimeOffset.#ctor(System.Int32,System.Int32,System.Int32,System.Int32,System.Int32,System.Int32,System.Int32,System.Globalization.Calendar,System.TimeSpan)\n  parent: System.DateTimeOffset\n  isExternal: false\n  name: DateTimeOffset(Int32, Int32, Int32, Int32, Int32, Int32, Int32, Calendar, TimeSpan)\n  nameWithType: DateTimeOffset.DateTimeOffset(Int32, Int32, Int32, Int32, Int32, Int32, Int32, Calendar, TimeSpan)\n  fullName: DateTimeOffset.DateTimeOffset(Int32, Int32, Int32, Int32, Int32, Int32, Int32, Calendar, TimeSpan)\n- uid: System.Globalization.Calendar\n  parent: System.Globalization\n  isExternal: false\n  name: Calendar\n  nameWithType: Calendar\n  fullName: System.Globalization.Calendar\n- uid: System.DateTimeOffset.Add(System.TimeSpan)\n  parent: System.DateTimeOffset\n  isExternal: false\n  name: Add(TimeSpan)\n  nameWithType: DateTimeOffset.Add(TimeSpan)\n  fullName: DateTimeOffset.Add(TimeSpan)\n- uid: System.DateTimeOffset\n  parent: System\n  isExternal: false\n  name: DateTimeOffset\n  nameWithType: DateTimeOffset\n  fullName: System.DateTimeOffset\n- uid: System.DateTimeOffset.AddDays(System.Double)\n  parent: System.DateTimeOffset\n  isExternal: false\n  name: AddDays(Double)\n  nameWithType: DateTimeOffset.AddDays(Double)\n  fullName: DateTimeOffset.AddDays(Double)\n- uid: System.Double\n  parent: System\n  isExternal: false\n  name: Double\n  nameWithType: Double\n  fullName: System.Double\n- uid: System.DateTimeOffset.AddHours(System.Double)\n  parent: System.DateTimeOffset\n  isExternal: false\n  name: AddHours(Double)\n  nameWithType: DateTimeOffset.AddHours(Double)\n  fullName: DateTimeOffset.AddHours(Double)\n- uid: System.DateTimeOffset.AddMilliseconds(System.Double)\n  parent: System.DateTimeOffset\n  isExternal: false\n  name: AddMilliseconds(Double)\n  nameWithType: DateTimeOffset.AddMilliseconds(Double)\n  fullName: DateTimeOffset.AddMilliseconds(Double)\n- uid: System.DateTimeOffset.AddMinutes(System.Double)\n  parent: System.DateTimeOffset\n  isExternal: false\n  name: AddMinutes(Double)\n  nameWithType: DateTimeOffset.AddMinutes(Double)\n  fullName: DateTimeOffset.AddMinutes(Double)\n- uid: System.DateTimeOffset.AddMonths(System.Int32)\n  parent: System.DateTimeOffset\n  isExternal: false\n  name: AddMonths(Int32)\n  nameWithType: DateTimeOffset.AddMonths(Int32)\n  fullName: DateTimeOffset.AddMonths(Int32)\n- uid: System.DateTimeOffset.AddSeconds(System.Double)\n  parent: System.DateTimeOffset\n  isExternal: false\n  name: AddSeconds(Double)\n  nameWithType: DateTimeOffset.AddSeconds(Double)\n  fullName: DateTimeOffset.AddSeconds(Double)\n- uid: System.DateTimeOffset.AddTicks(System.Int64)\n  parent: System.DateTimeOffset\n  isExternal: false\n  name: AddTicks(Int64)\n  nameWithType: DateTimeOffset.AddTicks(Int64)\n  fullName: DateTimeOffset.AddTicks(Int64)\n- uid: System.DateTimeOffset.AddYears(System.Int32)\n  parent: System.DateTimeOffset\n  isExternal: false\n  name: AddYears(Int32)\n  nameWithType: DateTimeOffset.AddYears(Int32)\n  fullName: DateTimeOffset.AddYears(Int32)\n- uid: System.DateTimeOffset.Compare(System.DateTimeOffset,System.DateTimeOffset)\n  parent: System.DateTimeOffset\n  isExternal: false\n  name: Compare(DateTimeOffset, DateTimeOffset)\n  nameWithType: DateTimeOffset.Compare(DateTimeOffset, DateTimeOffset)\n  fullName: DateTimeOffset.Compare(DateTimeOffset, DateTimeOffset)\n- uid: System.DateTimeOffset.CompareTo(System.DateTimeOffset)\n  parent: System.DateTimeOffset\n  isExternal: false\n  name: CompareTo(DateTimeOffset)\n  nameWithType: DateTimeOffset.CompareTo(DateTimeOffset)\n  fullName: DateTimeOffset.CompareTo(DateTimeOffset)\n- uid: System.DateTimeOffset.Date\n  parent: System.DateTimeOffset\n  isExternal: false\n  name: Date\n  nameWithType: DateTimeOffset.Date\n  fullName: DateTimeOffset.Date\n- uid: System.DateTimeOffset.DateTime\n  parent: System.DateTimeOffset\n  isExternal: false\n  name: DateTime\n  nameWithType: DateTimeOffset.DateTime\n  fullName: DateTimeOffset.DateTime\n- uid: System.DateTimeOffset.Day\n  parent: System.DateTimeOffset\n  isExternal: false\n  name: Day\n  nameWithType: DateTimeOffset.Day\n  fullName: DateTimeOffset.Day\n- uid: System.DateTimeOffset.DayOfWeek\n  parent: System.DateTimeOffset\n  isExternal: false\n  name: DayOfWeek\n  nameWithType: DateTimeOffset.DayOfWeek\n  fullName: DateTimeOffset.DayOfWeek\n- uid: System.DayOfWeek\n  parent: System\n  isExternal: false\n  name: DayOfWeek\n  nameWithType: DayOfWeek\n  fullName: System.DayOfWeek\n- uid: System.DateTimeOffset.DayOfYear\n  parent: System.DateTimeOffset\n  isExternal: false\n  name: DayOfYear\n  nameWithType: DateTimeOffset.DayOfYear\n  fullName: DateTimeOffset.DayOfYear\n- uid: System.DateTimeOffset.Equals(System.DateTimeOffset)\n  parent: System.DateTimeOffset\n  isExternal: false\n  name: Equals(DateTimeOffset)\n  nameWithType: DateTimeOffset.Equals(DateTimeOffset)\n  fullName: DateTimeOffset.Equals(DateTimeOffset)\n- uid: System.Boolean\n  parent: System\n  isExternal: false\n  name: Boolean\n  nameWithType: Boolean\n  fullName: System.Boolean\n- uid: System.DateTimeOffset.Equals(System.Object)\n  parent: System.DateTimeOffset\n  isExternal: false\n  name: Equals(Object)\n  nameWithType: DateTimeOffset.Equals(Object)\n  fullName: DateTimeOffset.Equals(Object)\n- uid: System.Object\n  parent: System\n  isExternal: false\n  name: Object\n  nameWithType: Object\n  fullName: System.Object\n- uid: System.DateTimeOffset.Equals(System.DateTimeOffset,System.DateTimeOffset)\n  parent: System.DateTimeOffset\n  isExternal: false\n  name: Equals(DateTimeOffset, DateTimeOffset)\n  nameWithType: DateTimeOffset.Equals(DateTimeOffset, DateTimeOffset)\n  fullName: DateTimeOffset.Equals(DateTimeOffset, DateTimeOffset)\n- uid: System.DateTimeOffset.EqualsExact(System.DateTimeOffset)\n  parent: System.DateTimeOffset\n  isExternal: false\n  name: EqualsExact(DateTimeOffset)\n  nameWithType: DateTimeOffset.EqualsExact(DateTimeOffset)\n  fullName: DateTimeOffset.EqualsExact(DateTimeOffset)\n- uid: System.DateTimeOffset.FromFileTime(System.Int64)\n  parent: System.DateTimeOffset\n  isExternal: false\n  name: FromFileTime(Int64)\n  nameWithType: DateTimeOffset.FromFileTime(Int64)\n  fullName: DateTimeOffset.FromFileTime(Int64)\n- uid: System.DateTimeOffset.FromUnixTimeMilliseconds(System.Int64)\n  parent: System.DateTimeOffset\n  isExternal: false\n  name: FromUnixTimeMilliseconds(Int64)\n  nameWithType: DateTimeOffset.FromUnixTimeMilliseconds(Int64)\n  fullName: DateTimeOffset.FromUnixTimeMilliseconds(Int64)\n- uid: System.DateTimeOffset.FromUnixTimeSeconds(System.Int64)\n  parent: System.DateTimeOffset\n  isExternal: false\n  name: FromUnixTimeSeconds(Int64)\n  nameWithType: DateTimeOffset.FromUnixTimeSeconds(Int64)\n  fullName: DateTimeOffset.FromUnixTimeSeconds(Int64)\n- uid: System.DateTimeOffset.GetHashCode\n  parent: System.DateTimeOffset\n  isExternal: false\n  name: GetHashCode()\n  nameWithType: DateTimeOffset.GetHashCode()\n  fullName: DateTimeOffset.GetHashCode()\n- uid: System.DateTimeOffset.Hour\n  parent: System.DateTimeOffset\n  isExternal: false\n  name: Hour\n  nameWithType: DateTimeOffset.Hour\n  fullName: DateTimeOffset.Hour\n- uid: System.DateTimeOffset.LocalDateTime\n  parent: System.DateTimeOffset\n  isExternal: false\n  name: LocalDateTime\n  nameWithType: DateTimeOffset.LocalDateTime\n  fullName: DateTimeOffset.LocalDateTime\n- uid: System.DateTimeOffset.MaxValue\n  parent: System.DateTimeOffset\n  isExternal: false\n  name: MaxValue\n  nameWithType: DateTimeOffset.MaxValue\n  fullName: DateTimeOffset.MaxValue\n- uid: System.DateTimeOffset.Millisecond\n  parent: System.DateTimeOffset\n  isExternal: false\n  name: Millisecond\n  nameWithType: DateTimeOffset.Millisecond\n  fullName: DateTimeOffset.Millisecond\n- uid: System.DateTimeOffset.Minute\n  parent: System.DateTimeOffset\n  isExternal: false\n  name: Minute\n  nameWithType: DateTimeOffset.Minute\n  fullName: DateTimeOffset.Minute\n- uid: System.DateTimeOffset.MinValue\n  parent: System.DateTimeOffset\n  isExternal: false\n  name: MinValue\n  nameWithType: DateTimeOffset.MinValue\n  fullName: DateTimeOffset.MinValue\n- uid: System.DateTimeOffset.Month\n  parent: System.DateTimeOffset\n  isExternal: false\n  name: Month\n  nameWithType: DateTimeOffset.Month\n  fullName: DateTimeOffset.Month\n- uid: System.DateTimeOffset.Now\n  parent: System.DateTimeOffset\n  isExternal: false\n  name: Now\n  nameWithType: DateTimeOffset.Now\n  fullName: DateTimeOffset.Now\n- uid: System.DateTimeOffset.Offset\n  parent: System.DateTimeOffset\n  isExternal: false\n  name: Offset\n  nameWithType: DateTimeOffset.Offset\n  fullName: DateTimeOffset.Offset\n- uid: System.DateTimeOffset.op_Addition(System.DateTimeOffset,System.TimeSpan)\n  parent: System.DateTimeOffset\n  isExternal: false\n  name: op_Addition(DateTimeOffset, TimeSpan)\n  nameWithType: DateTimeOffset.op_Addition(DateTimeOffset, TimeSpan)\n  fullName: DateTimeOffset.op_Addition(DateTimeOffset, TimeSpan)\n- uid: System.DateTimeOffset.op_Equality(System.DateTimeOffset,System.DateTimeOffset)\n  parent: System.DateTimeOffset\n  isExternal: false\n  name: op_Equality(DateTimeOffset, DateTimeOffset)\n  nameWithType: DateTimeOffset.op_Equality(DateTimeOffset, DateTimeOffset)\n  fullName: DateTimeOffset.op_Equality(DateTimeOffset, DateTimeOffset)\n- uid: System.DateTimeOffset.op_GreaterThan(System.DateTimeOffset,System.DateTimeOffset)\n  parent: System.DateTimeOffset\n  isExternal: false\n  name: op_GreaterThan(DateTimeOffset, DateTimeOffset)\n  nameWithType: DateTimeOffset.op_GreaterThan(DateTimeOffset, DateTimeOffset)\n  fullName: DateTimeOffset.op_GreaterThan(DateTimeOffset, DateTimeOffset)\n- uid: System.DateTimeOffset.op_GreaterThanOrEqual(System.DateTimeOffset,System.DateTimeOffset)\n  parent: System.DateTimeOffset\n  isExternal: false\n  name: op_GreaterThanOrEqual(DateTimeOffset, DateTimeOffset)\n  nameWithType: DateTimeOffset.op_GreaterThanOrEqual(DateTimeOffset, DateTimeOffset)\n  fullName: DateTimeOffset.op_GreaterThanOrEqual(DateTimeOffset, DateTimeOffset)\n- uid: System.DateTimeOffset.op_Implicit(System.DateTime to System.DateTimeOffset)\n  parent: System.DateTimeOffset\n  isExternal: false\n  name: op_Implicit(DateTime to DateTimeOffset)\n  nameWithType: DateTimeOffset.op_Implicit(DateTime to DateTimeOffset)\n  fullName: DateTimeOffset.op_Implicit(DateTime to DateTimeOffset)\n- uid: System.DateTimeOffset.op_Inequality(System.DateTimeOffset,System.DateTimeOffset)\n  parent: System.DateTimeOffset\n  isExternal: false\n  name: op_Inequality(DateTimeOffset, DateTimeOffset)\n  nameWithType: DateTimeOffset.op_Inequality(DateTimeOffset, DateTimeOffset)\n  fullName: DateTimeOffset.op_Inequality(DateTimeOffset, DateTimeOffset)\n- uid: System.DateTimeOffset.op_LessThan(System.DateTimeOffset,System.DateTimeOffset)\n  parent: System.DateTimeOffset\n  isExternal: false\n  name: op_LessThan(DateTimeOffset, DateTimeOffset)\n  nameWithType: DateTimeOffset.op_LessThan(DateTimeOffset, DateTimeOffset)\n  fullName: DateTimeOffset.op_LessThan(DateTimeOffset, DateTimeOffset)\n- uid: System.DateTimeOffset.op_LessThanOrEqual(System.DateTimeOffset,System.DateTimeOffset)\n  parent: System.DateTimeOffset\n  isExternal: false\n  name: op_LessThanOrEqual(DateTimeOffset, DateTimeOffset)\n  nameWithType: DateTimeOffset.op_LessThanOrEqual(DateTimeOffset, DateTimeOffset)\n  fullName: DateTimeOffset.op_LessThanOrEqual(DateTimeOffset, DateTimeOffset)\n- uid: System.DateTimeOffset.op_Subtraction(System.DateTimeOffset,System.DateTimeOffset)\n  parent: System.DateTimeOffset\n  isExternal: false\n  name: op_Subtraction(DateTimeOffset, DateTimeOffset)\n  nameWithType: DateTimeOffset.op_Subtraction(DateTimeOffset, DateTimeOffset)\n  fullName: DateTimeOffset.op_Subtraction(DateTimeOffset, DateTimeOffset)\n- uid: System.DateTimeOffset.op_Subtraction(System.DateTimeOffset,System.TimeSpan)\n  parent: System.DateTimeOffset\n  isExternal: false\n  name: op_Subtraction(DateTimeOffset, TimeSpan)\n  nameWithType: DateTimeOffset.op_Subtraction(DateTimeOffset, TimeSpan)\n  fullName: DateTimeOffset.op_Subtraction(DateTimeOffset, TimeSpan)\n- uid: System.DateTimeOffset.Parse(System.String)\n  parent: System.DateTimeOffset\n  isExternal: false\n  name: Parse(String)\n  nameWithType: DateTimeOffset.Parse(String)\n  fullName: DateTimeOffset.Parse(String)\n- uid: System.String\n  parent: System\n  isExternal: false\n  name: String\n  nameWithType: String\n  fullName: System.String\n- uid: System.DateTimeOffset.Parse(System.String,System.IFormatProvider)\n  parent: System.DateTimeOffset\n  isExternal: false\n  name: Parse(String, IFormatProvider)\n  nameWithType: DateTimeOffset.Parse(String, IFormatProvider)\n  fullName: DateTimeOffset.Parse(String, IFormatProvider)\n- uid: System.IFormatProvider\n  parent: System\n  isExternal: false\n  name: IFormatProvider\n  nameWithType: IFormatProvider\n  fullName: System.IFormatProvider\n- uid: System.DateTimeOffset.Parse(System.String,System.IFormatProvider,System.Globalization.DateTimeStyles)\n  parent: System.DateTimeOffset\n  isExternal: false\n  name: Parse(String, IFormatProvider, DateTimeStyles)\n  nameWithType: DateTimeOffset.Parse(String, IFormatProvider, DateTimeStyles)\n  fullName: DateTimeOffset.Parse(String, IFormatProvider, DateTimeStyles)\n- uid: System.Globalization.DateTimeStyles\n  parent: System.Globalization\n  isExternal: false\n  name: DateTimeStyles\n  nameWithType: DateTimeStyles\n  fullName: System.Globalization.DateTimeStyles\n- uid: System.DateTimeOffset.ParseExact(System.String,System.String,System.IFormatProvider)\n  parent: System.DateTimeOffset\n  isExternal: false\n  name: ParseExact(String, String, IFormatProvider)\n  nameWithType: DateTimeOffset.ParseExact(String, String, IFormatProvider)\n  fullName: DateTimeOffset.ParseExact(String, String, IFormatProvider)\n- uid: System.DateTimeOffset.ParseExact(System.String,System.String,System.IFormatProvider,System.Globalization.DateTimeStyles)\n  parent: System.DateTimeOffset\n  isExternal: false\n  name: ParseExact(String, String, IFormatProvider, DateTimeStyles)\n  nameWithType: DateTimeOffset.ParseExact(String, String, IFormatProvider, DateTimeStyles)\n  fullName: DateTimeOffset.ParseExact(String, String, IFormatProvider, DateTimeStyles)\n- uid: System.DateTimeOffset.ParseExact(System.String,System.String[],System.IFormatProvider,System.Globalization.DateTimeStyles)\n  parent: System.DateTimeOffset\n  isExternal: false\n  name: ParseExact(String, String[], IFormatProvider, DateTimeStyles)\n  nameWithType: DateTimeOffset.ParseExact(String, String[], IFormatProvider, DateTimeStyles)\n  fullName: DateTimeOffset.ParseExact(String, String[], IFormatProvider, DateTimeStyles)\n- uid: System.String[]\n  parent: System\n  isExternal: false\n  name: String[]\n  nameWithType: String[]\n  fullName: System.String[]\n  spec.csharp:\n  - uid: System.String\n    name: String\n    nameWithType: String\n    fullName: System.String\n  - name: '[]'\n    nameWithType: '[]'\n    fullName: '[]'\n- uid: System.DateTimeOffset.Second\n  parent: System.DateTimeOffset\n  isExternal: false\n  name: Second\n  nameWithType: DateTimeOffset.Second\n  fullName: DateTimeOffset.Second\n- uid: System.DateTimeOffset.Subtract(System.TimeSpan)\n  parent: System.DateTimeOffset\n  isExternal: false\n  name: Subtract(TimeSpan)\n  nameWithType: DateTimeOffset.Subtract(TimeSpan)\n  fullName: DateTimeOffset.Subtract(TimeSpan)\n- uid: System.DateTimeOffset.Subtract(System.DateTimeOffset)\n  parent: System.DateTimeOffset\n  isExternal: false\n  name: Subtract(DateTimeOffset)\n  nameWithType: DateTimeOffset.Subtract(DateTimeOffset)\n  fullName: DateTimeOffset.Subtract(DateTimeOffset)\n- uid: System.DateTimeOffset.Ticks\n  parent: System.DateTimeOffset\n  isExternal: false\n  name: Ticks\n  nameWithType: DateTimeOffset.Ticks\n  fullName: DateTimeOffset.Ticks\n- uid: System.DateTimeOffset.TimeOfDay\n  parent: System.DateTimeOffset\n  isExternal: false\n  name: TimeOfDay\n  nameWithType: DateTimeOffset.TimeOfDay\n  fullName: DateTimeOffset.TimeOfDay\n- uid: System.DateTimeOffset.ToFileTime\n  parent: System.DateTimeOffset\n  isExternal: false\n  name: ToFileTime()\n  nameWithType: DateTimeOffset.ToFileTime()\n  fullName: DateTimeOffset.ToFileTime()\n- uid: System.DateTimeOffset.ToLocalTime\n  parent: System.DateTimeOffset\n  isExternal: false\n  name: ToLocalTime()\n  nameWithType: DateTimeOffset.ToLocalTime()\n  fullName: DateTimeOffset.ToLocalTime()\n- uid: System.DateTimeOffset.ToOffset(System.TimeSpan)\n  parent: System.DateTimeOffset\n  isExternal: false\n  name: ToOffset(TimeSpan)\n  nameWithType: DateTimeOffset.ToOffset(TimeSpan)\n  fullName: DateTimeOffset.ToOffset(TimeSpan)\n- uid: System.DateTimeOffset.ToString\n  parent: System.DateTimeOffset\n  isExternal: false\n  name: ToString()\n  nameWithType: DateTimeOffset.ToString()\n  fullName: DateTimeOffset.ToString()\n- uid: System.DateTimeOffset.ToString(System.IFormatProvider)\n  parent: System.DateTimeOffset\n  isExternal: false\n  name: ToString(IFormatProvider)\n  nameWithType: DateTimeOffset.ToString(IFormatProvider)\n  fullName: DateTimeOffset.ToString(IFormatProvider)\n- uid: System.DateTimeOffset.ToString(System.String)\n  parent: System.DateTimeOffset\n  isExternal: false\n  name: ToString(String)\n  nameWithType: DateTimeOffset.ToString(String)\n  fullName: DateTimeOffset.ToString(String)\n- uid: System.DateTimeOffset.ToString(System.String,System.IFormatProvider)\n  parent: System.DateTimeOffset\n  isExternal: false\n  name: ToString(String, IFormatProvider)\n  nameWithType: DateTimeOffset.ToString(String, IFormatProvider)\n  fullName: DateTimeOffset.ToString(String, IFormatProvider)\n- uid: System.DateTimeOffset.ToUniversalTime\n  parent: System.DateTimeOffset\n  isExternal: false\n  name: ToUniversalTime()\n  nameWithType: DateTimeOffset.ToUniversalTime()\n  fullName: DateTimeOffset.ToUniversalTime()\n- uid: System.DateTimeOffset.ToUnixTimeMilliseconds\n  parent: System.DateTimeOffset\n  isExternal: false\n  name: ToUnixTimeMilliseconds()\n  nameWithType: DateTimeOffset.ToUnixTimeMilliseconds()\n  fullName: DateTimeOffset.ToUnixTimeMilliseconds()\n- uid: System.DateTimeOffset.ToUnixTimeSeconds\n  parent: System.DateTimeOffset\n  isExternal: false\n  name: ToUnixTimeSeconds()\n  nameWithType: DateTimeOffset.ToUnixTimeSeconds()\n  fullName: DateTimeOffset.ToUnixTimeSeconds()\n- uid: System.DateTimeOffset.TryParse(System.String,System.IFormatProvider,System.Globalization.DateTimeStyles,System.DateTimeOffset@)\n  parent: System.DateTimeOffset\n  isExternal: false\n  name: TryParse(String, IFormatProvider, DateTimeStyles, DateTimeOffset)\n  nameWithType: DateTimeOffset.TryParse(String, IFormatProvider, DateTimeStyles, DateTimeOffset)\n  fullName: DateTimeOffset.TryParse(String, IFormatProvider, DateTimeStyles, DateTimeOffset)\n- uid: System.DateTimeOffset.TryParse(System.String,System.DateTimeOffset@)\n  parent: System.DateTimeOffset\n  isExternal: false\n  name: TryParse(String, DateTimeOffset)\n  nameWithType: DateTimeOffset.TryParse(String, DateTimeOffset)\n  fullName: DateTimeOffset.TryParse(String, DateTimeOffset)\n- uid: System.DateTimeOffset.TryParseExact(System.String,System.String[],System.IFormatProvider,System.Globalization.DateTimeStyles,System.DateTimeOffset@)\n  parent: System.DateTimeOffset\n  isExternal: false\n  name: TryParseExact(String, String[], IFormatProvider, DateTimeStyles, DateTimeOffset)\n  nameWithType: DateTimeOffset.TryParseExact(String, String[], IFormatProvider, DateTimeStyles, DateTimeOffset)\n  fullName: DateTimeOffset.TryParseExact(String, String[], IFormatProvider, DateTimeStyles, DateTimeOffset)\n- uid: System.DateTimeOffset.TryParseExact(System.String,System.String,System.IFormatProvider,System.Globalization.DateTimeStyles,System.DateTimeOffset@)\n  parent: System.DateTimeOffset\n  isExternal: false\n  name: TryParseExact(String, String, IFormatProvider, DateTimeStyles, DateTimeOffset)\n  nameWithType: DateTimeOffset.TryParseExact(String, String, IFormatProvider, DateTimeStyles, DateTimeOffset)\n  fullName: DateTimeOffset.TryParseExact(String, String, IFormatProvider, DateTimeStyles, DateTimeOffset)\n- uid: System.DateTimeOffset.UtcDateTime\n  parent: System.DateTimeOffset\n  isExternal: false\n  name: UtcDateTime\n  nameWithType: DateTimeOffset.UtcDateTime\n  fullName: DateTimeOffset.UtcDateTime\n- uid: System.DateTimeOffset.UtcNow\n  parent: System.DateTimeOffset\n  isExternal: false\n  name: UtcNow\n  nameWithType: DateTimeOffset.UtcNow\n  fullName: DateTimeOffset.UtcNow\n- uid: System.DateTimeOffset.UtcTicks\n  parent: System.DateTimeOffset\n  isExternal: false\n  name: UtcTicks\n  nameWithType: DateTimeOffset.UtcTicks\n  fullName: DateTimeOffset.UtcTicks\n- uid: System.DateTimeOffset.Year\n  parent: System.DateTimeOffset\n  isExternal: false\n  name: Year\n  nameWithType: DateTimeOffset.Year\n  fullName: DateTimeOffset.Year\n- uid: System.DateTimeOffset.System#IComparable#CompareTo(System.Object)\n  parent: System.DateTimeOffset\n  isExternal: false\n  name: IComparable.CompareTo(Object)\n  nameWithType: DateTimeOffset.IComparable.CompareTo(Object)\n  fullName: DateTimeOffset.IComparable.CompareTo(Object)\n- uid: System.DateTimeOffset.System#Runtime#Serialization#IDeserializationCallback#OnDeserialization(System.Object)\n  parent: System.DateTimeOffset\n  isExternal: false\n  name: IDeserializationCallback.OnDeserialization(Object)\n  nameWithType: DateTimeOffset.IDeserializationCallback.OnDeserialization(Object)\n  fullName: DateTimeOffset.IDeserializationCallback.OnDeserialization(Object)\n- uid: System.DateTimeOffset.System#Runtime#Serialization#ISerializable#GetObjectData(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)\n  parent: System.DateTimeOffset\n  isExternal: false\n  name: ISerializable.GetObjectData(SerializationInfo, StreamingContext)\n  nameWithType: DateTimeOffset.ISerializable.GetObjectData(SerializationInfo, StreamingContext)\n  fullName: DateTimeOffset.ISerializable.GetObjectData(SerializationInfo, StreamingContext)\n- uid: System.Runtime.Serialization.SerializationInfo\n  parent: System.Runtime.Serialization\n  isExternal: false\n  name: SerializationInfo\n  nameWithType: SerializationInfo\n  fullName: System.Runtime.Serialization.SerializationInfo\n- uid: System.Runtime.Serialization.StreamingContext\n  parent: System.Runtime.Serialization\n  isExternal: false\n  name: StreamingContext\n  nameWithType: StreamingContext\n  fullName: System.Runtime.Serialization.StreamingContext\n- uid: System.DateTimeOffset.#ctor*\n  parent: System.DateTimeOffset\n  isExternal: false\n  name: DateTimeOffset\n  nameWithType: DateTimeOffset.DateTimeOffset\n  fullName: DateTimeOffset.DateTimeOffset\n  monikers:\n  - netcore-1.0\n  - netcore-1.1\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - netstandard-1.0\n  - netstandard-1.1\n  - netstandard-1.2\n  - netstandard-1.3\n  - netstandard-1.4\n  - netstandard-1.5\n  - netstandard-1.6\n  - netstandard-2.0\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System/DateTimeOffset.xml\n- uid: System.DateTimeOffset.Add*\n  parent: System.DateTimeOffset\n  isExternal: false\n  name: Add\n  nameWithType: DateTimeOffset.Add\n  fullName: DateTimeOffset.Add\n  monikers:\n  - netcore-1.0\n  - netcore-1.1\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - netstandard-1.0\n  - netstandard-1.1\n  - netstandard-1.2\n  - netstandard-1.3\n  - netstandard-1.4\n  - netstandard-1.5\n  - netstandard-1.6\n  - netstandard-2.0\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System/DateTimeOffset.xml\n- uid: System.DateTimeOffset.AddDays*\n  parent: System.DateTimeOffset\n  isExternal: false\n  name: AddDays\n  nameWithType: DateTimeOffset.AddDays\n  fullName: DateTimeOffset.AddDays\n  monikers:\n  - netcore-1.0\n  - netcore-1.1\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - netstandard-1.0\n  - netstandard-1.1\n  - netstandard-1.2\n  - netstandard-1.3\n  - netstandard-1.4\n  - netstandard-1.5\n  - netstandard-1.6\n  - netstandard-2.0\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System/DateTimeOffset.xml\n- uid: System.DateTimeOffset.AddHours*\n  parent: System.DateTimeOffset\n  isExternal: false\n  name: AddHours\n  nameWithType: DateTimeOffset.AddHours\n  fullName: DateTimeOffset.AddHours\n  monikers:\n  - netcore-1.0\n  - netcore-1.1\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - netstandard-1.0\n  - netstandard-1.1\n  - netstandard-1.2\n  - netstandard-1.3\n  - netstandard-1.4\n  - netstandard-1.5\n  - netstandard-1.6\n  - netstandard-2.0\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System/DateTimeOffset.xml\n- uid: System.DateTimeOffset.AddMilliseconds*\n  parent: System.DateTimeOffset\n  isExternal: false\n  name: AddMilliseconds\n  nameWithType: DateTimeOffset.AddMilliseconds\n  fullName: DateTimeOffset.AddMilliseconds\n  monikers:\n  - netcore-1.0\n  - netcore-1.1\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - netstandard-1.0\n  - netstandard-1.1\n  - netstandard-1.2\n  - netstandard-1.3\n  - netstandard-1.4\n  - netstandard-1.5\n  - netstandard-1.6\n  - netstandard-2.0\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System/DateTimeOffset.xml\n- uid: System.DateTimeOffset.AddMinutes*\n  parent: System.DateTimeOffset\n  isExternal: false\n  name: AddMinutes\n  nameWithType: DateTimeOffset.AddMinutes\n  fullName: DateTimeOffset.AddMinutes\n  monikers:\n  - netcore-1.0\n  - netcore-1.1\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - netstandard-1.0\n  - netstandard-1.1\n  - netstandard-1.2\n  - netstandard-1.3\n  - netstandard-1.4\n  - netstandard-1.5\n  - netstandard-1.6\n  - netstandard-2.0\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System/DateTimeOffset.xml\n- uid: System.DateTimeOffset.AddMonths*\n  parent: System.DateTimeOffset\n  isExternal: false\n  name: AddMonths\n  nameWithType: DateTimeOffset.AddMonths\n  fullName: DateTimeOffset.AddMonths\n  monikers:\n  - netcore-1.0\n  - netcore-1.1\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - netstandard-1.0\n  - netstandard-1.1\n  - netstandard-1.2\n  - netstandard-1.3\n  - netstandard-1.4\n  - netstandard-1.5\n  - netstandard-1.6\n  - netstandard-2.0\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System/DateTimeOffset.xml\n- uid: System.DateTimeOffset.AddSeconds*\n  parent: System.DateTimeOffset\n  isExternal: false\n  name: AddSeconds\n  nameWithType: DateTimeOffset.AddSeconds\n  fullName: DateTimeOffset.AddSeconds\n  monikers:\n  - netcore-1.0\n  - netcore-1.1\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - netstandard-1.0\n  - netstandard-1.1\n  - netstandard-1.2\n  - netstandard-1.3\n  - netstandard-1.4\n  - netstandard-1.5\n  - netstandard-1.6\n  - netstandard-2.0\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System/DateTimeOffset.xml\n- uid: System.DateTimeOffset.AddTicks*\n  parent: System.DateTimeOffset\n  isExternal: false\n  name: AddTicks\n  nameWithType: DateTimeOffset.AddTicks\n  fullName: DateTimeOffset.AddTicks\n  monikers:\n  - netcore-1.0\n  - netcore-1.1\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - netstandard-1.0\n  - netstandard-1.1\n  - netstandard-1.2\n  - netstandard-1.3\n  - netstandard-1.4\n  - netstandard-1.5\n  - netstandard-1.6\n  - netstandard-2.0\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System/DateTimeOffset.xml\n- uid: System.DateTimeOffset.AddYears*\n  parent: System.DateTimeOffset\n  isExternal: false\n  name: AddYears\n  nameWithType: DateTimeOffset.AddYears\n  fullName: DateTimeOffset.AddYears\n  monikers:\n  - netcore-1.0\n  - netcore-1.1\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - netstandard-1.0\n  - netstandard-1.1\n  - netstandard-1.2\n  - netstandard-1.3\n  - netstandard-1.4\n  - netstandard-1.5\n  - netstandard-1.6\n  - netstandard-2.0\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System/DateTimeOffset.xml\n- uid: System.DateTimeOffset.Compare*\n  parent: System.DateTimeOffset\n  isExternal: false\n  name: Compare\n  nameWithType: DateTimeOffset.Compare\n  fullName: DateTimeOffset.Compare\n  monikers:\n  - netcore-1.0\n  - netcore-1.1\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - netstandard-1.0\n  - netstandard-1.1\n  - netstandard-1.2\n  - netstandard-1.3\n  - netstandard-1.4\n  - netstandard-1.5\n  - netstandard-1.6\n  - netstandard-2.0\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System/DateTimeOffset.xml\n- uid: System.DateTimeOffset.CompareTo*\n  parent: System.DateTimeOffset\n  isExternal: false\n  name: CompareTo\n  nameWithType: DateTimeOffset.CompareTo\n  fullName: DateTimeOffset.CompareTo\n  monikers:\n  - netcore-1.0\n  - netcore-1.1\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - netstandard-1.0\n  - netstandard-1.1\n  - netstandard-1.2\n  - netstandard-1.3\n  - netstandard-1.4\n  - netstandard-1.5\n  - netstandard-1.6\n  - netstandard-2.0\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System/DateTimeOffset.xml\n- uid: System.DateTimeOffset.Date*\n  parent: System.DateTimeOffset\n  isExternal: false\n  name: Date\n  nameWithType: DateTimeOffset.Date\n  fullName: DateTimeOffset.Date\n  monikers:\n  - netcore-1.0\n  - netcore-1.1\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - netstandard-1.0\n  - netstandard-1.1\n  - netstandard-1.2\n  - netstandard-1.3\n  - netstandard-1.4\n  - netstandard-1.5\n  - netstandard-1.6\n  - netstandard-2.0\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System/DateTimeOffset.xml\n- uid: System.DateTimeOffset.DateTime*\n  parent: System.DateTimeOffset\n  isExternal: false\n  name: DateTime\n  nameWithType: DateTimeOffset.DateTime\n  fullName: DateTimeOffset.DateTime\n  monikers:\n  - netcore-1.0\n  - netcore-1.1\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - netstandard-1.0\n  - netstandard-1.1\n  - netstandard-1.2\n  - netstandard-1.3\n  - netstandard-1.4\n  - netstandard-1.5\n  - netstandard-1.6\n  - netstandard-2.0\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System/DateTimeOffset.xml\n- uid: System.DateTimeOffset.Day*\n  parent: System.DateTimeOffset\n  isExternal: false\n  name: Day\n  nameWithType: DateTimeOffset.Day\n  fullName: DateTimeOffset.Day\n  monikers:\n  - netcore-1.0\n  - netcore-1.1\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - netstandard-1.0\n  - netstandard-1.1\n  - netstandard-1.2\n  - netstandard-1.3\n  - netstandard-1.4\n  - netstandard-1.5\n  - netstandard-1.6\n  - netstandard-2.0\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System/DateTimeOffset.xml\n- uid: System.DateTimeOffset.DayOfWeek*\n  parent: System.DateTimeOffset\n  isExternal: false\n  name: DayOfWeek\n  nameWithType: DateTimeOffset.DayOfWeek\n  fullName: DateTimeOffset.DayOfWeek\n  monikers:\n  - netcore-1.0\n  - netcore-1.1\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - netstandard-1.0\n  - netstandard-1.1\n  - netstandard-1.2\n  - netstandard-1.3\n  - netstandard-1.4\n  - netstandard-1.5\n  - netstandard-1.6\n  - netstandard-2.0\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System/DateTimeOffset.xml\n- uid: System.DateTimeOffset.DayOfYear*\n  parent: System.DateTimeOffset\n  isExternal: false\n  name: DayOfYear\n  nameWithType: DateTimeOffset.DayOfYear\n  fullName: DateTimeOffset.DayOfYear\n  monikers:\n  - netcore-1.0\n  - netcore-1.1\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - netstandard-1.0\n  - netstandard-1.1\n  - netstandard-1.2\n  - netstandard-1.3\n  - netstandard-1.4\n  - netstandard-1.5\n  - netstandard-1.6\n  - netstandard-2.0\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System/DateTimeOffset.xml\n- uid: System.DateTimeOffset.Equals*\n  parent: System.DateTimeOffset\n  isExternal: false\n  name: Equals\n  nameWithType: DateTimeOffset.Equals\n  fullName: DateTimeOffset.Equals\n  monikers:\n  - netcore-1.0\n  - netcore-1.1\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - netstandard-1.0\n  - netstandard-1.1\n  - netstandard-1.2\n  - netstandard-1.3\n  - netstandard-1.4\n  - netstandard-1.5\n  - netstandard-1.6\n  - netstandard-2.0\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System/DateTimeOffset.xml\n- uid: System.DateTimeOffset.EqualsExact*\n  parent: System.DateTimeOffset\n  isExternal: false\n  name: EqualsExact\n  nameWithType: DateTimeOffset.EqualsExact\n  fullName: DateTimeOffset.EqualsExact\n  monikers:\n  - netcore-1.0\n  - netcore-1.1\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - netstandard-1.0\n  - netstandard-1.1\n  - netstandard-1.2\n  - netstandard-1.3\n  - netstandard-1.4\n  - netstandard-1.5\n  - netstandard-1.6\n  - netstandard-2.0\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System/DateTimeOffset.xml\n- uid: System.DateTimeOffset.FromFileTime*\n  parent: System.DateTimeOffset\n  isExternal: false\n  name: FromFileTime\n  nameWithType: DateTimeOffset.FromFileTime\n  fullName: DateTimeOffset.FromFileTime\n  monikers:\n  - netcore-1.0\n  - netcore-1.1\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - netstandard-1.0\n  - netstandard-1.1\n  - netstandard-1.2\n  - netstandard-1.3\n  - netstandard-1.4\n  - netstandard-1.5\n  - netstandard-1.6\n  - netstandard-2.0\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System/DateTimeOffset.xml\n- uid: System.DateTimeOffset.FromUnixTimeMilliseconds*\n  parent: System.DateTimeOffset\n  isExternal: false\n  name: FromUnixTimeMilliseconds\n  nameWithType: DateTimeOffset.FromUnixTimeMilliseconds\n  fullName: DateTimeOffset.FromUnixTimeMilliseconds\n  monikers:\n  - netcore-1.0\n  - netcore-1.1\n  - netcore-2.0\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - netstandard-1.3\n  - netstandard-1.4\n  - netstandard-1.5\n  - netstandard-1.6\n  - netstandard-2.0\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System/DateTimeOffset.xml\n- uid: System.DateTimeOffset.FromUnixTimeSeconds*\n  parent: System.DateTimeOffset\n  isExternal: false\n  name: FromUnixTimeSeconds\n  nameWithType: DateTimeOffset.FromUnixTimeSeconds\n  fullName: DateTimeOffset.FromUnixTimeSeconds\n  monikers:\n  - netcore-1.0\n  - netcore-1.1\n  - netcore-2.0\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - netstandard-1.3\n  - netstandard-1.4\n  - netstandard-1.5\n  - netstandard-1.6\n  - netstandard-2.0\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System/DateTimeOffset.xml\n- uid: System.DateTimeOffset.GetHashCode*\n  parent: System.DateTimeOffset\n  isExternal: false\n  name: GetHashCode\n  nameWithType: DateTimeOffset.GetHashCode\n  fullName: DateTimeOffset.GetHashCode\n  monikers:\n  - netcore-1.0\n  - netcore-1.1\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - netstandard-1.0\n  - netstandard-1.1\n  - netstandard-1.2\n  - netstandard-1.3\n  - netstandard-1.4\n  - netstandard-1.5\n  - netstandard-1.6\n  - netstandard-2.0\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System/DateTimeOffset.xml\n- uid: System.DateTimeOffset.Hour*\n  parent: System.DateTimeOffset\n  isExternal: false\n  name: Hour\n  nameWithType: DateTimeOffset.Hour\n  fullName: DateTimeOffset.Hour\n  monikers:\n  - netcore-1.0\n  - netcore-1.1\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - netstandard-1.0\n  - netstandard-1.1\n  - netstandard-1.2\n  - netstandard-1.3\n  - netstandard-1.4\n  - netstandard-1.5\n  - netstandard-1.6\n  - netstandard-2.0\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System/DateTimeOffset.xml\n- uid: System.DateTimeOffset.LocalDateTime*\n  parent: System.DateTimeOffset\n  isExternal: false\n  name: LocalDateTime\n  nameWithType: DateTimeOffset.LocalDateTime\n  fullName: DateTimeOffset.LocalDateTime\n  monikers:\n  - netcore-1.0\n  - netcore-1.1\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - netstandard-1.0\n  - netstandard-1.1\n  - netstandard-1.2\n  - netstandard-1.3\n  - netstandard-1.4\n  - netstandard-1.5\n  - netstandard-1.6\n  - netstandard-2.0\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System/DateTimeOffset.xml\n- uid: System.DateTimeOffset.Millisecond*\n  parent: System.DateTimeOffset\n  isExternal: false\n  name: Millisecond\n  nameWithType: DateTimeOffset.Millisecond\n  fullName: DateTimeOffset.Millisecond\n  monikers:\n  - netcore-1.0\n  - netcore-1.1\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - netstandard-1.0\n  - netstandard-1.1\n  - netstandard-1.2\n  - netstandard-1.3\n  - netstandard-1.4\n  - netstandard-1.5\n  - netstandard-1.6\n  - netstandard-2.0\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System/DateTimeOffset.xml\n- uid: System.DateTimeOffset.Minute*\n  parent: System.DateTimeOffset\n  isExternal: false\n  name: Minute\n  nameWithType: DateTimeOffset.Minute\n  fullName: DateTimeOffset.Minute\n  monikers:\n  - netcore-1.0\n  - netcore-1.1\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - netstandard-1.0\n  - netstandard-1.1\n  - netstandard-1.2\n  - netstandard-1.3\n  - netstandard-1.4\n  - netstandard-1.5\n  - netstandard-1.6\n  - netstandard-2.0\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System/DateTimeOffset.xml\n- uid: System.DateTimeOffset.Month*\n  parent: System.DateTimeOffset\n  isExternal: false\n  name: Month\n  nameWithType: DateTimeOffset.Month\n  fullName: DateTimeOffset.Month\n  monikers:\n  - netcore-1.0\n  - netcore-1.1\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - netstandard-1.0\n  - netstandard-1.1\n  - netstandard-1.2\n  - netstandard-1.3\n  - netstandard-1.4\n  - netstandard-1.5\n  - netstandard-1.6\n  - netstandard-2.0\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System/DateTimeOffset.xml\n- uid: System.DateTimeOffset.Now*\n  parent: System.DateTimeOffset\n  isExternal: false\n  name: Now\n  nameWithType: DateTimeOffset.Now\n  fullName: DateTimeOffset.Now\n  monikers:\n  - netcore-1.0\n  - netcore-1.1\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - netstandard-1.0\n  - netstandard-1.1\n  - netstandard-1.2\n  - netstandard-1.3\n  - netstandard-1.4\n  - netstandard-1.5\n  - netstandard-1.6\n  - netstandard-2.0\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System/DateTimeOffset.xml\n- uid: System.DateTimeOffset.Offset*\n  parent: System.DateTimeOffset\n  isExternal: false\n  name: Offset\n  nameWithType: DateTimeOffset.Offset\n  fullName: DateTimeOffset.Offset\n  monikers:\n  - netcore-1.0\n  - netcore-1.1\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - netstandard-1.0\n  - netstandard-1.1\n  - netstandard-1.2\n  - netstandard-1.3\n  - netstandard-1.4\n  - netstandard-1.5\n  - netstandard-1.6\n  - netstandard-2.0\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System/DateTimeOffset.xml\n- uid: System.DateTimeOffset.op_Addition*\n  parent: System.DateTimeOffset\n  isExternal: false\n  name: op_Addition\n  nameWithType: DateTimeOffset.op_Addition\n  fullName: DateTimeOffset.op_Addition\n  monikers:\n  - netcore-1.0\n  - netcore-1.1\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - netstandard-1.0\n  - netstandard-1.1\n  - netstandard-1.2\n  - netstandard-1.3\n  - netstandard-1.4\n  - netstandard-1.5\n  - netstandard-1.6\n  - netstandard-2.0\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System/DateTimeOffset.xml\n- uid: System.DateTimeOffset.op_Equality*\n  parent: System.DateTimeOffset\n  isExternal: false\n  name: op_Equality\n  nameWithType: DateTimeOffset.op_Equality\n  fullName: DateTimeOffset.op_Equality\n  monikers:\n  - netcore-1.0\n  - netcore-1.1\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - netstandard-1.0\n  - netstandard-1.1\n  - netstandard-1.2\n  - netstandard-1.3\n  - netstandard-1.4\n  - netstandard-1.5\n  - netstandard-1.6\n  - netstandard-2.0\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System/DateTimeOffset.xml\n- uid: System.DateTimeOffset.op_GreaterThan*\n  parent: System.DateTimeOffset\n  isExternal: false\n  name: op_GreaterThan\n  nameWithType: DateTimeOffset.op_GreaterThan\n  fullName: DateTimeOffset.op_GreaterThan\n  monikers:\n  - netcore-1.0\n  - netcore-1.1\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - netstandard-1.0\n  - netstandard-1.1\n  - netstandard-1.2\n  - netstandard-1.3\n  - netstandard-1.4\n  - netstandard-1.5\n  - netstandard-1.6\n  - netstandard-2.0\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System/DateTimeOffset.xml\n- uid: System.DateTimeOffset.op_GreaterThanOrEqual*\n  parent: System.DateTimeOffset\n  isExternal: false\n  name: op_GreaterThanOrEqual\n  nameWithType: DateTimeOffset.op_GreaterThanOrEqual\n  fullName: DateTimeOffset.op_GreaterThanOrEqual\n  monikers:\n  - netcore-1.0\n  - netcore-1.1\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - netstandard-1.0\n  - netstandard-1.1\n  - netstandard-1.2\n  - netstandard-1.3\n  - netstandard-1.4\n  - netstandard-1.5\n  - netstandard-1.6\n  - netstandard-2.0\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System/DateTimeOffset.xml\n- uid: System.DateTimeOffset.op_Implicit*\n  parent: System.DateTimeOffset\n  isExternal: false\n  name: op_Implicit\n  nameWithType: DateTimeOffset.op_Implicit\n  fullName: DateTimeOffset.op_Implicit\n  monikers:\n  - netcore-1.0\n  - netcore-1.1\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - netstandard-1.0\n  - netstandard-1.1\n  - netstandard-1.2\n  - netstandard-1.3\n  - netstandard-1.4\n  - netstandard-1.5\n  - netstandard-1.6\n  - netstandard-2.0\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System/DateTimeOffset.xml\n- uid: System.DateTimeOffset.op_Inequality*\n  parent: System.DateTimeOffset\n  isExternal: false\n  name: op_Inequality\n  nameWithType: DateTimeOffset.op_Inequality\n  fullName: DateTimeOffset.op_Inequality\n  monikers:\n  - netcore-1.0\n  - netcore-1.1\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - netstandard-1.0\n  - netstandard-1.1\n  - netstandard-1.2\n  - netstandard-1.3\n  - netstandard-1.4\n  - netstandard-1.5\n  - netstandard-1.6\n  - netstandard-2.0\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System/DateTimeOffset.xml\n- uid: System.DateTimeOffset.op_LessThan*\n  parent: System.DateTimeOffset\n  isExternal: false\n  name: op_LessThan\n  nameWithType: DateTimeOffset.op_LessThan\n  fullName: DateTimeOffset.op_LessThan\n  monikers:\n  - netcore-1.0\n  - netcore-1.1\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - netstandard-1.0\n  - netstandard-1.1\n  - netstandard-1.2\n  - netstandard-1.3\n  - netstandard-1.4\n  - netstandard-1.5\n  - netstandard-1.6\n  - netstandard-2.0\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System/DateTimeOffset.xml\n- uid: System.DateTimeOffset.op_LessThanOrEqual*\n  parent: System.DateTimeOffset\n  isExternal: false\n  name: op_LessThanOrEqual\n  nameWithType: DateTimeOffset.op_LessThanOrEqual\n  fullName: DateTimeOffset.op_LessThanOrEqual\n  monikers:\n  - netcore-1.0\n  - netcore-1.1\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - netstandard-1.0\n  - netstandard-1.1\n  - netstandard-1.2\n  - netstandard-1.3\n  - netstandard-1.4\n  - netstandard-1.5\n  - netstandard-1.6\n  - netstandard-2.0\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System/DateTimeOffset.xml\n- uid: System.DateTimeOffset.op_Subtraction*\n  parent: System.DateTimeOffset\n  isExternal: false\n  name: op_Subtraction\n  nameWithType: DateTimeOffset.op_Subtraction\n  fullName: DateTimeOffset.op_Subtraction\n  monikers:\n  - netcore-1.0\n  - netcore-1.1\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - netstandard-1.0\n  - netstandard-1.1\n  - netstandard-1.2\n  - netstandard-1.3\n  - netstandard-1.4\n  - netstandard-1.5\n  - netstandard-1.6\n  - netstandard-2.0\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System/DateTimeOffset.xml\n- uid: System.DateTimeOffset.Parse*\n  parent: System.DateTimeOffset\n  isExternal: false\n  name: Parse\n  nameWithType: DateTimeOffset.Parse\n  fullName: DateTimeOffset.Parse\n  monikers:\n  - netcore-1.0\n  - netcore-1.1\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - netstandard-1.0\n  - netstandard-1.1\n  - netstandard-1.2\n  - netstandard-1.3\n  - netstandard-1.4\n  - netstandard-1.5\n  - netstandard-1.6\n  - netstandard-2.0\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System/DateTimeOffset.xml\n- uid: System.DateTimeOffset.ParseExact*\n  parent: System.DateTimeOffset\n  isExternal: false\n  name: ParseExact\n  nameWithType: DateTimeOffset.ParseExact\n  fullName: DateTimeOffset.ParseExact\n  monikers:\n  - netcore-1.0\n  - netcore-1.1\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - netstandard-1.0\n  - netstandard-1.1\n  - netstandard-1.2\n  - netstandard-1.3\n  - netstandard-1.4\n  - netstandard-1.5\n  - netstandard-1.6\n  - netstandard-2.0\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System/DateTimeOffset.xml\n- uid: System.DateTimeOffset.Second*\n  parent: System.DateTimeOffset\n  isExternal: false\n  name: Second\n  nameWithType: DateTimeOffset.Second\n  fullName: DateTimeOffset.Second\n  monikers:\n  - netcore-1.0\n  - netcore-1.1\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - netstandard-1.0\n  - netstandard-1.1\n  - netstandard-1.2\n  - netstandard-1.3\n  - netstandard-1.4\n  - netstandard-1.5\n  - netstandard-1.6\n  - netstandard-2.0\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System/DateTimeOffset.xml\n- uid: System.DateTimeOffset.Subtract*\n  parent: System.DateTimeOffset\n  isExternal: false\n  name: Subtract\n  nameWithType: DateTimeOffset.Subtract\n  fullName: DateTimeOffset.Subtract\n  monikers:\n  - netcore-1.0\n  - netcore-1.1\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - netstandard-1.0\n  - netstandard-1.1\n  - netstandard-1.2\n  - netstandard-1.3\n  - netstandard-1.4\n  - netstandard-1.5\n  - netstandard-1.6\n  - netstandard-2.0\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System/DateTimeOffset.xml\n- uid: System.DateTimeOffset.Ticks*\n  parent: System.DateTimeOffset\n  isExternal: false\n  name: Ticks\n  nameWithType: DateTimeOffset.Ticks\n  fullName: DateTimeOffset.Ticks\n  monikers:\n  - netcore-1.0\n  - netcore-1.1\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - netstandard-1.0\n  - netstandard-1.1\n  - netstandard-1.2\n  - netstandard-1.3\n  - netstandard-1.4\n  - netstandard-1.5\n  - netstandard-1.6\n  - netstandard-2.0\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System/DateTimeOffset.xml\n- uid: System.DateTimeOffset.TimeOfDay*\n  parent: System.DateTimeOffset\n  isExternal: false\n  name: TimeOfDay\n  nameWithType: DateTimeOffset.TimeOfDay\n  fullName: DateTimeOffset.TimeOfDay\n  monikers:\n  - netcore-1.0\n  - netcore-1.1\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - netstandard-1.0\n  - netstandard-1.1\n  - netstandard-1.2\n  - netstandard-1.3\n  - netstandard-1.4\n  - netstandard-1.5\n  - netstandard-1.6\n  - netstandard-2.0\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System/DateTimeOffset.xml\n- uid: System.DateTimeOffset.ToFileTime*\n  parent: System.DateTimeOffset\n  isExternal: false\n  name: ToFileTime\n  nameWithType: DateTimeOffset.ToFileTime\n  fullName: DateTimeOffset.ToFileTime\n  monikers:\n  - netcore-1.0\n  - netcore-1.1\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - netstandard-1.0\n  - netstandard-1.1\n  - netstandard-1.2\n  - netstandard-1.3\n  - netstandard-1.4\n  - netstandard-1.5\n  - netstandard-1.6\n  - netstandard-2.0\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System/DateTimeOffset.xml\n- uid: System.DateTimeOffset.ToLocalTime*\n  parent: System.DateTimeOffset\n  isExternal: false\n  name: ToLocalTime\n  nameWithType: DateTimeOffset.ToLocalTime\n  fullName: DateTimeOffset.ToLocalTime\n  monikers:\n  - netcore-1.0\n  - netcore-1.1\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - netstandard-1.0\n  - netstandard-1.1\n  - netstandard-1.2\n  - netstandard-1.3\n  - netstandard-1.4\n  - netstandard-1.5\n  - netstandard-1.6\n  - netstandard-2.0\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System/DateTimeOffset.xml\n- uid: System.DateTimeOffset.ToOffset*\n  parent: System.DateTimeOffset\n  isExternal: false\n  name: ToOffset\n  nameWithType: DateTimeOffset.ToOffset\n  fullName: DateTimeOffset.ToOffset\n  monikers:\n  - netcore-1.0\n  - netcore-1.1\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - netstandard-1.0\n  - netstandard-1.1\n  - netstandard-1.2\n  - netstandard-1.3\n  - netstandard-1.4\n  - netstandard-1.5\n  - netstandard-1.6\n  - netstandard-2.0\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System/DateTimeOffset.xml\n- uid: System.DateTimeOffset.ToString*\n  parent: System.DateTimeOffset\n  isExternal: false\n  name: ToString\n  nameWithType: DateTimeOffset.ToString\n  fullName: DateTimeOffset.ToString\n  monikers:\n  - netcore-1.0\n  - netcore-1.1\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - netstandard-1.0\n  - netstandard-1.1\n  - netstandard-1.2\n  - netstandard-1.3\n  - netstandard-1.4\n  - netstandard-1.5\n  - netstandard-1.6\n  - netstandard-2.0\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System/DateTimeOffset.xml\n- uid: System.DateTimeOffset.ToUniversalTime*\n  parent: System.DateTimeOffset\n  isExternal: false\n  name: ToUniversalTime\n  nameWithType: DateTimeOffset.ToUniversalTime\n  fullName: DateTimeOffset.ToUniversalTime\n  monikers:\n  - netcore-1.0\n  - netcore-1.1\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - netstandard-1.0\n  - netstandard-1.1\n  - netstandard-1.2\n  - netstandard-1.3\n  - netstandard-1.4\n  - netstandard-1.5\n  - netstandard-1.6\n  - netstandard-2.0\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System/DateTimeOffset.xml\n- uid: System.DateTimeOffset.ToUnixTimeMilliseconds*\n  parent: System.DateTimeOffset\n  isExternal: false\n  name: ToUnixTimeMilliseconds\n  nameWithType: DateTimeOffset.ToUnixTimeMilliseconds\n  fullName: DateTimeOffset.ToUnixTimeMilliseconds\n  monikers:\n  - netcore-1.0\n  - netcore-1.1\n  - netcore-2.0\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - netstandard-1.3\n  - netstandard-1.4\n  - netstandard-1.5\n  - netstandard-1.6\n  - netstandard-2.0\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System/DateTimeOffset.xml\n- uid: System.DateTimeOffset.ToUnixTimeSeconds*\n  parent: System.DateTimeOffset\n  isExternal: false\n  name: ToUnixTimeSeconds\n  nameWithType: DateTimeOffset.ToUnixTimeSeconds\n  fullName: DateTimeOffset.ToUnixTimeSeconds\n  monikers:\n  - netcore-1.0\n  - netcore-1.1\n  - netcore-2.0\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - netstandard-1.3\n  - netstandard-1.4\n  - netstandard-1.5\n  - netstandard-1.6\n  - netstandard-2.0\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System/DateTimeOffset.xml\n- uid: System.DateTimeOffset.TryParse*\n  parent: System.DateTimeOffset\n  isExternal: false\n  name: TryParse\n  nameWithType: DateTimeOffset.TryParse\n  fullName: DateTimeOffset.TryParse\n  monikers:\n  - netcore-1.0\n  - netcore-1.1\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - netstandard-1.0\n  - netstandard-1.1\n  - netstandard-1.2\n  - netstandard-1.3\n  - netstandard-1.4\n  - netstandard-1.5\n  - netstandard-1.6\n  - netstandard-2.0\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System/DateTimeOffset.xml\n- uid: System.DateTimeOffset.TryParseExact*\n  parent: System.DateTimeOffset\n  isExternal: false\n  name: TryParseExact\n  nameWithType: DateTimeOffset.TryParseExact\n  fullName: DateTimeOffset.TryParseExact\n  monikers:\n  - netcore-1.0\n  - netcore-1.1\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - netstandard-1.0\n  - netstandard-1.1\n  - netstandard-1.2\n  - netstandard-1.3\n  - netstandard-1.4\n  - netstandard-1.5\n  - netstandard-1.6\n  - netstandard-2.0\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System/DateTimeOffset.xml\n- uid: System.DateTimeOffset.UtcDateTime*\n  parent: System.DateTimeOffset\n  isExternal: false\n  name: UtcDateTime\n  nameWithType: DateTimeOffset.UtcDateTime\n  fullName: DateTimeOffset.UtcDateTime\n  monikers:\n  - netcore-1.0\n  - netcore-1.1\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - netstandard-1.0\n  - netstandard-1.1\n  - netstandard-1.2\n  - netstandard-1.3\n  - netstandard-1.4\n  - netstandard-1.5\n  - netstandard-1.6\n  - netstandard-2.0\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System/DateTimeOffset.xml\n- uid: System.DateTimeOffset.UtcNow*\n  parent: System.DateTimeOffset\n  isExternal: false\n  name: UtcNow\n  nameWithType: DateTimeOffset.UtcNow\n  fullName: DateTimeOffset.UtcNow\n  monikers:\n  - netcore-1.0\n  - netcore-1.1\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - netstandard-1.0\n  - netstandard-1.1\n  - netstandard-1.2\n  - netstandard-1.3\n  - netstandard-1.4\n  - netstandard-1.5\n  - netstandard-1.6\n  - netstandard-2.0\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System/DateTimeOffset.xml\n- uid: System.DateTimeOffset.UtcTicks*\n  parent: System.DateTimeOffset\n  isExternal: false\n  name: UtcTicks\n  nameWithType: DateTimeOffset.UtcTicks\n  fullName: DateTimeOffset.UtcTicks\n  monikers:\n  - netcore-1.0\n  - netcore-1.1\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - netstandard-1.0\n  - netstandard-1.1\n  - netstandard-1.2\n  - netstandard-1.3\n  - netstandard-1.4\n  - netstandard-1.5\n  - netstandard-1.6\n  - netstandard-2.0\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System/DateTimeOffset.xml\n- uid: System.DateTimeOffset.Year*\n  parent: System.DateTimeOffset\n  isExternal: false\n  name: Year\n  nameWithType: DateTimeOffset.Year\n  fullName: DateTimeOffset.Year\n  monikers:\n  - netcore-1.0\n  - netcore-1.1\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - netstandard-1.0\n  - netstandard-1.1\n  - netstandard-1.2\n  - netstandard-1.3\n  - netstandard-1.4\n  - netstandard-1.5\n  - netstandard-1.6\n  - netstandard-2.0\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System/DateTimeOffset.xml\n- uid: System.DateTimeOffset.System#IComparable#CompareTo*\n  parent: System.DateTimeOffset\n  isExternal: false\n  name: System.IComparable.CompareTo\n  nameWithType: DateTimeOffset.System.IComparable.CompareTo\n  fullName: DateTimeOffset.System.IComparable.CompareTo\n  monikers:\n  - netcore-1.0\n  - netcore-1.1\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - netstandard-1.0\n  - netstandard-1.1\n  - netstandard-1.2\n  - netstandard-1.3\n  - netstandard-1.4\n  - netstandard-1.5\n  - netstandard-1.6\n  - netstandard-2.0\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System/DateTimeOffset.xml\n- uid: System.DateTimeOffset.System#Runtime#Serialization#IDeserializationCallback#OnDeserialization*\n  parent: System.DateTimeOffset\n  isExternal: false\n  name: System.Runtime.Serialization.IDeserializationCallback.OnDeserialization\n  nameWithType: DateTimeOffset.System.Runtime.Serialization.IDeserializationCallback.OnDeserialization\n  fullName: DateTimeOffset.System.Runtime.Serialization.IDeserializationCallback.OnDeserialization\n  monikers:\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - netstandard-2.0\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System/DateTimeOffset.xml\n- uid: System.DateTimeOffset.System#Runtime#Serialization#ISerializable#GetObjectData*\n  parent: System.DateTimeOffset\n  isExternal: false\n  name: System.Runtime.Serialization.ISerializable.GetObjectData\n  nameWithType: DateTimeOffset.System.Runtime.Serialization.ISerializable.GetObjectData\n  fullName: DateTimeOffset.System.Runtime.Serialization.ISerializable.GetObjectData\n  monikers:\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - netstandard-2.0\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System/DateTimeOffset.xml\n- uid: System.IComparable\n  parent: System\n  isExternal: false\n  name: IComparable\n  nameWithType: IComparable\n  fullName: System.IComparable\n- uid: System.IComparable`1\n  name: IComparable<T>\n  nameWithType: IComparable<T>\n  fullName: System.IComparable<T>\n- uid: System.IComparable{System.DateTimeOffset}\n  parent: System\n  isExternal: false\n  name: IComparable<DateTimeOffset>\n  nameWithType: IComparable<DateTimeOffset>\n  fullName: System.IComparable<System.DateTimeOffset>\n  spec.csharp:\n  - uid: System.IComparable`1\n    name: IComparable\n    nameWithType: IComparable\n    fullName: System.IComparable\n  - name: <\n    nameWithType: <\n    fullName: <\n  - uid: System.DateTimeOffset\n    name: DateTimeOffset\n    nameWithType: DateTimeOffset\n    fullName: System.DateTimeOffset\n  - name: '>'\n    nameWithType: '>'\n    fullName: '>'\n- uid: System.IEquatable`1\n  name: IEquatable<T>\n  nameWithType: IEquatable<T>\n  fullName: System.IEquatable<T>\n- uid: System.IEquatable{System.DateTimeOffset}\n  parent: System\n  isExternal: false\n  name: IEquatable<DateTimeOffset>\n  nameWithType: IEquatable<DateTimeOffset>\n  fullName: System.IEquatable<System.DateTimeOffset>\n  spec.csharp:\n  - uid: System.IEquatable`1\n    name: IEquatable\n    nameWithType: IEquatable\n    fullName: System.IEquatable\n  - name: <\n    nameWithType: <\n    fullName: <\n  - uid: System.DateTimeOffset\n    name: DateTimeOffset\n    nameWithType: DateTimeOffset\n    fullName: System.DateTimeOffset\n  - name: '>'\n    nameWithType: '>'\n    fullName: '>'\n- uid: System.IFormattable\n  parent: System\n  isExternal: false\n  name: IFormattable\n  nameWithType: IFormattable\n  fullName: System.IFormattable\n- uid: System.Runtime.Serialization.IDeserializationCallback\n  parent: System.Runtime.Serialization\n  isExternal: false\n  name: IDeserializationCallback\n  nameWithType: IDeserializationCallback\n  fullName: System.Runtime.Serialization.IDeserializationCallback\n- uid: System.Runtime.Serialization.ISerializable\n  parent: System.Runtime.Serialization\n  isExternal: false\n  name: ISerializable\n  nameWithType: ISerializable\n  fullName: System.Runtime.Serialization.ISerializable\n"}