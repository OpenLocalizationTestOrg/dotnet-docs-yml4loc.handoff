{"nodes":[{"content":"Defines methods to support the comparison of objects for equality.","nodes":[{"pos":[0,66],"content":"Defines methods to support the comparison of objects for equality.","nodes":[{"content":"Defines methods to support the comparison of objects for equality.","pos":[0,66]}]}],"pos":[599,666],"yaml":true},{"content":"This interface allows the implementation of customized equality comparison for collections. That is, you can create your own definition of equality for type `T`, and specify that this definition be used with a collection type that accepts the <xref:System.Collections.Generic.IEqualityComparer%601> generic interface. In the .NET Framework, constructors of the <xref:System.Collections.Generic.Dictionary%602> generic collection type accept this interface.  \n  \n A default implementation of this interface is provided by the <xref:System.Collections.Generic.EqualityComparer%601.Default%2A> property of the <xref:System.Collections.Generic.EqualityComparer%601> generic class. The <xref:System.StringComparer> class implements <xref:System.Collections.Generic.IEqualityComparer%601> of type <xref:System.String>.  \n  \n This interface supports only equality comparisons. Customization of comparisons for sorting and ordering is provided by the <xref:System.Collections.Generic.IComparer%601> generic interface.  \n  \n We recommend that you derive from the <xref:System.Collections.Generic.EqualityComparer%601> class instead of implementing the <xref:System.Collections.Generic.IEqualityComparer%601> interface, because the <xref:System.Collections.Generic.EqualityComparer%601> class tests for equality using the <xref:System.IEquatable%601.Equals%2A?displayProperty=fullName> method instead of the <xref:System.Object.Equals%2A?displayProperty=fullName> method. This is consistent with the `Contains`, `IndexOf`, `LastIndexOf`, and `Remove` methods of the <xref:System.Collections.Generic.Dictionary%602> class and other generic collections.","nodes":[{"pos":[0,456],"content":"This interface allows the implementation of customized equality comparison for collections. That is, you can create your own definition of equality for type `T`, and specify that this definition be used with a collection type that accepts the <xref:System.Collections.Generic.IEqualityComparer%601> generic interface. In the .NET Framework, constructors of the <xref:System.Collections.Generic.Dictionary%602> generic collection type accept this interface.","nodes":[{"content":"This interface allows the implementation of customized equality comparison for collections.","pos":[0,91]},{"content":"That is, you can create your own definition of equality for type <ph id=\"ph1\">`T`</ph>, and specify that this definition be used with a collection type that accepts the <ph id=\"ph2\">&lt;xref:System.Collections.Generic.IEqualityComparer%601&gt;</ph> generic interface.","pos":[92,317],"source":" That is, you can create your own definition of equality for type `T`, and specify that this definition be used with a collection type that accepts the <xref:System.Collections.Generic.IEqualityComparer%601> generic interface."},{"content":"In the .NET Framework, constructors of the <ph id=\"ph1\">&lt;xref:System.Collections.Generic.Dictionary%602&gt;</ph> generic collection type accept this interface.","pos":[318,456],"source":" In the .NET Framework, constructors of the <xref:System.Collections.Generic.Dictionary%602> generic collection type accept this interface."}]},{"pos":[463,812],"content":"A default implementation of this interface is provided by the <xref:System.Collections.Generic.EqualityComparer%601.Default%2A> property of the <xref:System.Collections.Generic.EqualityComparer%601> generic class. The <xref:System.StringComparer> class implements <xref:System.Collections.Generic.IEqualityComparer%601> of type <xref:System.String>.","nodes":[{"content":"A default implementation of this interface is provided by the <xref:System.Collections.Generic.EqualityComparer%601.Default%2A> property of the <xref:System.Collections.Generic.EqualityComparer%601> generic class. The <xref:System.StringComparer> class implements <xref:System.Collections.Generic.IEqualityComparer%601> of type <xref:System.String>.","pos":[0,349],"nodes":[{"content":"A default implementation of this interface is provided by the <ph id=\"ph1\">&lt;xref:System.Collections.Generic.EqualityComparer%601.Default%2A&gt;</ph> property of the <ph id=\"ph2\">&lt;xref:System.Collections.Generic.EqualityComparer%601&gt;</ph> generic class.","pos":[0,213],"source":"A default implementation of this interface is provided by the <xref:System.Collections.Generic.EqualityComparer%601.Default%2A> property of the <xref:System.Collections.Generic.EqualityComparer%601> generic class."},{"content":"The <ph id=\"ph1\">&lt;xref:System.StringComparer&gt;</ph> class implements <ph id=\"ph2\">&lt;xref:System.Collections.Generic.IEqualityComparer%601&gt;</ph> of type <ph id=\"ph3\">&lt;xref:System.String&gt;</ph>.","pos":[214,349],"source":" The <xref:System.StringComparer> class implements <xref:System.Collections.Generic.IEqualityComparer%601> of type <xref:System.String>."}]}]},{"pos":[819,1009],"content":"This interface supports only equality comparisons. Customization of comparisons for sorting and ordering is provided by the <xref:System.Collections.Generic.IComparer%601> generic interface.","nodes":[{"content":"This interface supports only equality comparisons. Customization of comparisons for sorting and ordering is provided by the <xref:System.Collections.Generic.IComparer%601> generic interface.","pos":[0,190],"nodes":[{"content":"This interface supports only equality comparisons.","pos":[0,50]},{"content":"Customization of comparisons for sorting and ordering is provided by the <ph id=\"ph1\">&lt;xref:System.Collections.Generic.IComparer%601&gt;</ph> generic interface.","pos":[51,190],"source":" Customization of comparisons for sorting and ordering is provided by the <xref:System.Collections.Generic.IComparer%601> generic interface."}]}]},{"pos":[1016,1641],"content":"We recommend that you derive from the <xref:System.Collections.Generic.EqualityComparer%601> class instead of implementing the <xref:System.Collections.Generic.IEqualityComparer%601> interface, because the <xref:System.Collections.Generic.EqualityComparer%601> class tests for equality using the <xref:System.IEquatable%601.Equals%2A?displayProperty=fullName> method instead of the <xref:System.Object.Equals%2A?displayProperty=fullName> method. This is consistent with the `Contains`, `IndexOf`, `LastIndexOf`, and `Remove` methods of the <xref:System.Collections.Generic.Dictionary%602> class and other generic collections.","nodes":[{"content":"We recommend that you derive from the <ph id=\"ph1\">&lt;xref:System.Collections.Generic.EqualityComparer%601&gt;</ph> class instead of implementing the <ph id=\"ph2\">&lt;xref:System.Collections.Generic.IEqualityComparer%601&gt;</ph> interface, because the <ph id=\"ph3\">&lt;xref:System.Collections.Generic.EqualityComparer%601&gt;</ph> class tests for equality using the <ph id=\"ph4\">&lt;xref:System.IEquatable%601.Equals%2A?displayProperty=fullName&gt;</ph> method instead of the <ph id=\"ph5\">&lt;xref:System.Object.Equals%2A?displayProperty=fullName&gt;</ph> method.","pos":[0,445],"source":"We recommend that you derive from the <xref:System.Collections.Generic.EqualityComparer%601> class instead of implementing the <xref:System.Collections.Generic.IEqualityComparer%601> interface, because the <xref:System.Collections.Generic.EqualityComparer%601> class tests for equality using the <xref:System.IEquatable%601.Equals%2A?displayProperty=fullName> method instead of the <xref:System.Object.Equals%2A?displayProperty=fullName> method."},{"content":"This is consistent with the <ph id=\"ph1\">`Contains`</ph>, <ph id=\"ph2\">`IndexOf`</ph>, <ph id=\"ph3\">`LastIndexOf`</ph>, and <ph id=\"ph4\">`Remove`</ph> methods of the <ph id=\"ph5\">&lt;xref:System.Collections.Generic.Dictionary%602&gt;</ph> class and other generic collections.","pos":[446,625],"source":" This is consistent with the `Contains`, `IndexOf`, `LastIndexOf`, and `Remove` methods of the <xref:System.Collections.Generic.Dictionary%602> class and other generic collections."}]}],"pos":[677,2327],"yaml":true,"extradata":"MT"},{"content":"The type of objects to compare.","nodes":[{"pos":[0,31],"content":"The type of objects to compare.","nodes":[{"content":"The type of objects to compare.","pos":[0,31]}]}],"pos":[2967,2999],"yaml":true},{"content":"Determines whether the specified objects are equal.","nodes":[{"pos":[0,51],"content":"Determines whether the specified objects are equal.","nodes":[{"content":"Determines whether the specified objects are equal.","pos":[0,51]}]}],"pos":[4890,4942],"yaml":true},{"content":"Implement this method to provide a customized equality comparison for type `T`.","nodes":[{"pos":[0,79],"content":"Implement this method to provide a customized equality comparison for type <ph id=\"ph1\">`T`</ph>.","source":"Implement this method to provide a customized equality comparison for type `T`."}],"pos":[4953,5033],"yaml":true,"extradata":"MT"},{"content":"The first object of type <code>T</code> to compare.","nodes":[{"pos":[0,51],"content":"The first object of type <bpt id=\"p1\">&lt;code&gt;</bpt><ph id=\"ph1\">T</ph><ept id=\"p1\">&lt;/code&gt;</ept> to compare.","source":"The first object of type <code>T</code> to compare."}],"pos":[5148,5200],"yaml":true},{"content":"The second object of type <code>T</code> to compare.","nodes":[{"pos":[0,52],"content":"The second object of type <bpt id=\"p1\">&lt;code&gt;</bpt><ph id=\"ph1\">T</ph><ept id=\"p1\">&lt;/code&gt;</ept> to compare.","source":"The second object of type <code>T</code> to compare."}],"pos":[5245,5298],"yaml":true},{"content":"`true` if the specified objects are equal; otherwise, `false`.","nodes":[{"pos":[0,62],"content":"<ph id=\"ph1\">`true`</ph> if the specified objects are equal; otherwise, <ph id=\"ph2\">`false`</ph>.","source":"`true` if the specified objects are equal; otherwise, `false`."}],"pos":[5356,5421],"yaml":true},{"content":"Returns a hash code for the specified object.","nodes":[{"pos":[0,45],"content":"Returns a hash code for the specified object.","nodes":[{"content":"Returns a hash code for the specified object.","pos":[0,45]}]}],"pos":[7087,7133],"yaml":true},{"content":"Implement this method to provide a customized hash code for type `T`,corresponding to the customized equality comparison provided by the <xref:System.Collections.Generic.IEqualityComparer%601.Equals%2A> method.","nodes":[{"pos":[0,210],"content":"Implement this method to provide a customized hash code for type <ph id=\"ph1\">`T`</ph>,corresponding to the customized equality comparison provided by the <ph id=\"ph2\">&lt;xref:System.Collections.Generic.IEqualityComparer%601.Equals%2A&gt;</ph> method.","source":"Implement this method to provide a customized hash code for type `T`,corresponding to the customized equality comparison provided by the <xref:System.Collections.Generic.IEqualityComparer%601.Equals%2A> method."}],"pos":[7144,7355],"yaml":true,"extradata":"MT"},{"content":"The <xref href=\"System.Object\"></xref> for which a hash code is to be returned.","nodes":[{"pos":[0,79],"content":"The <ph id=\"ph1\">&lt;xref href=\"System.Object\"&gt;&lt;/xref&gt;</ph> for which a hash code is to be returned.","source":"The <xref href=\"System.Object\"></xref> for which a hash code is to be returned."}],"pos":[7473,7553],"yaml":true},{"content":"A hash code for the specified object.","nodes":[{"pos":[0,37],"content":"A hash code for the specified object.","nodes":[{"content":"A hash code for the specified object.","pos":[0,37]}]}],"pos":[7609,7647],"yaml":true},{"content":"The type of <code>obj</code> is a reference type and <code>obj</code> is `null`.","nodes":[{"pos":[0,80],"content":"The type of <bpt id=\"p1\">&lt;code&gt;</bpt><ph id=\"ph1\">obj</ph><ept id=\"p1\">&lt;/code&gt;</ept> is a reference type and <bpt id=\"p2\">&lt;code&gt;</bpt><ph id=\"ph2\">obj</ph><ept id=\"p2\">&lt;/code&gt;</ept> is <ph id=\"ph3\">`null`</ph>.","source":"The type of <code>obj</code> is a reference type and <code>obj</code> is `null`."}],"pos":[7835,7916],"yaml":true}],"content":"### YamlMime:ManagedReference\nitems:\n- uid: System.Collections.Generic.IEqualityComparer`1\n  commentId: T:System.Collections.Generic.IEqualityComparer`1\n  id: IEqualityComparer`1\n  children:\n  - System.Collections.Generic.IEqualityComparer`1.Equals(`0,`0)\n  - System.Collections.Generic.IEqualityComparer`1.GetHashCode(`0)\n  langs:\n  - csharp\n  name: IEqualityComparer<T>\n  nameWithType: IEqualityComparer<T>\n  fullName: System.Collections.Generic.IEqualityComparer<T>\n  type: Interface\n  assemblies:\n  - System.Runtime\n  - mscorlib\n  - netstandard\n  namespace: System.Collections.Generic\n  summary: Defines methods to support the comparison of objects for equality.\n  remarks: \"This interface allows the implementation of customized equality comparison for collections. That is, you can create your own definition of equality for type `T`, and specify that this definition be used with a collection type that accepts the <xref:System.Collections.Generic.IEqualityComparer%601> generic interface. In the .NET Framework, constructors of the <xref:System.Collections.Generic.Dictionary%602> generic collection type accept this interface.  \\n  \\n A default implementation of this interface is provided by the <xref:System.Collections.Generic.EqualityComparer%601.Default%2A> property of the <xref:System.Collections.Generic.EqualityComparer%601> generic class. The <xref:System.StringComparer> class implements <xref:System.Collections.Generic.IEqualityComparer%601> of type <xref:System.String>.  \\n  \\n This interface supports only equality comparisons. Customization of comparisons for sorting and ordering is provided by the <xref:System.Collections.Generic.IComparer%601> generic interface.  \\n  \\n We recommend that you derive from the <xref:System.Collections.Generic.EqualityComparer%601> class instead of implementing the <xref:System.Collections.Generic.IEqualityComparer%601> interface, because the <xref:System.Collections.Generic.EqualityComparer%601> class tests for equality using the <xref:System.IEquatable%601.Equals%2A?displayProperty=fullName> method instead of the <xref:System.Object.Equals%2A?displayProperty=fullName> method. This is consistent with the `Contains`, `IndexOf`, `LastIndexOf`, and `Remove` methods of the <xref:System.Collections.Generic.Dictionary%602> class and other generic collections.\"\n  example:\n  - \"The following example adds custom `Box` objects to a dictionary collection. The `Box` objects are considered equal if their dimensions are the same.  \\n  \\n [!code-csharp[System.Collections.Generic.IEqualityComparer#1](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.collections.generic.iequalitycomparer/cs/program.cs#1)]\\n [!code-vb[System.Collections.Generic.IEqualityComparer#1](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.collections.generic.iequalitycomparer/vb/program.vb#1)]\"\n  syntax:\n    content: public interface IEqualityComparer<in T>\n    typeParameters:\n    - id: T\n      description: The type of objects to compare.\n  derivedClasses:\n  - System.StringComparer\n  - System.UriTemplateEquivalenceComparer\n  - System.Collections.Generic.EqualityComparer`1\n  - System.Data.DataRowComparer`1\n  - System.Reflection.Metadata.HandleComparer\n  - System.Reflection.Metadata.HandleComparer\n  - System.Xml.Linq.XNodeEqualityComparer\n  implements: []\n  version:\n  - netcore-1.0\n  - netcore-1.1\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - netstandard-1.0\n  - netstandard-1.1\n  - netstandard-1.2\n  - netstandard-1.3\n  - netstandard-1.4\n  - netstandard-1.5\n  - netstandard-1.6\n  - netstandard-2.0\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  monikers:\n  - netcore-1.0\n  - netcore-1.1\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - netstandard-1.0\n  - netstandard-1.1\n  - netstandard-1.2\n  - netstandard-1.3\n  - netstandard-1.4\n  - netstandard-1.5\n  - netstandard-1.6\n  - netstandard-2.0\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Collections.Generic/IEqualityComparer`1.xml\n  ms.technology:\n  - dotnet-standard\n  author: mairaw\n  ms.author: mairaw\n  manager: wpickett\n- uid: System.Collections.Generic.IEqualityComparer`1.Equals(`0,`0)\n  commentId: M:System.Collections.Generic.IEqualityComparer`1.Equals(`0,`0)\n  id: Equals(`0,`0)\n  parent: System.Collections.Generic.IEqualityComparer`1\n  langs:\n  - csharp\n  name: Equals(T, T)\n  nameWithType: IEqualityComparer<T>.Equals(T, T)\n  fullName: IEqualityComparer<T>.Equals(T, T)\n  type: Method\n  assemblies:\n  - System.Runtime\n  - mscorlib\n  - netstandard\n  namespace: System.Collections.Generic\n  summary: Determines whether the specified objects are equal.\n  remarks: Implement this method to provide a customized equality comparison for type `T`.\n  syntax:\n    content: public bool Equals (T x, T y);\n    parameters:\n    - id: x\n      type: T\n      description: The first object of type <code>T</code> to compare.\n    - id: y\n      type: T\n      description: The second object of type <code>T</code> to compare.\n    return:\n      type: System.Boolean\n      description: '`true` if the specified objects are equal; otherwise, `false`.'\n  overload: System.Collections.Generic.IEqualityComparer`1.Equals*\n  exceptions: []\n  version:\n  - netcore-1.0\n  - netcore-1.1\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - netstandard-1.0\n  - netstandard-1.1\n  - netstandard-1.2\n  - netstandard-1.3\n  - netstandard-1.4\n  - netstandard-1.5\n  - netstandard-1.6\n  - netstandard-2.0\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  monikers:\n  - netcore-1.0\n  - netcore-1.1\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - netstandard-1.0\n  - netstandard-1.1\n  - netstandard-1.2\n  - netstandard-1.3\n  - netstandard-1.4\n  - netstandard-1.5\n  - netstandard-1.6\n  - netstandard-2.0\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Collections.Generic/IEqualityComparer`1.xml\n  ms.technology:\n  - dotnet-standard\n  author: mairaw\n  ms.author: mairaw\n  manager: wpickett\n- uid: System.Collections.Generic.IEqualityComparer`1.GetHashCode(`0)\n  commentId: M:System.Collections.Generic.IEqualityComparer`1.GetHashCode(`0)\n  id: GetHashCode(`0)\n  parent: System.Collections.Generic.IEqualityComparer`1\n  langs:\n  - csharp\n  name: GetHashCode(T)\n  nameWithType: IEqualityComparer<T>.GetHashCode(T)\n  fullName: IEqualityComparer<T>.GetHashCode(T)\n  type: Method\n  assemblies:\n  - System.Runtime\n  - mscorlib\n  - netstandard\n  namespace: System.Collections.Generic\n  summary: Returns a hash code for the specified object.\n  remarks: Implement this method to provide a customized hash code for type `T`,corresponding to the customized equality comparison provided by the <xref:System.Collections.Generic.IEqualityComparer%601.Equals%2A> method.\n  syntax:\n    content: public int GetHashCode (T obj);\n    parameters:\n    - id: obj\n      type: T\n      description: The <xref href=\"System.Object\"></xref> for which a hash code is to be returned.\n    return:\n      type: System.Int32\n      description: A hash code for the specified object.\n  overload: System.Collections.Generic.IEqualityComparer`1.GetHashCode*\n  exceptions:\n  - type: System.ArgumentNullException\n    commentId: T:System.ArgumentNullException\n    description: The type of <code>obj</code> is a reference type and <code>obj</code> is `null`.\n  version:\n  - netcore-1.0\n  - netcore-1.1\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - netstandard-1.0\n  - netstandard-1.1\n  - netstandard-1.2\n  - netstandard-1.3\n  - netstandard-1.4\n  - netstandard-1.5\n  - netstandard-1.6\n  - netstandard-2.0\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  monikers:\n  - netcore-1.0\n  - netcore-1.1\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - netstandard-1.0\n  - netstandard-1.1\n  - netstandard-1.2\n  - netstandard-1.3\n  - netstandard-1.4\n  - netstandard-1.5\n  - netstandard-1.6\n  - netstandard-2.0\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Collections.Generic/IEqualityComparer`1.xml\n  ms.technology:\n  - dotnet-standard\n  author: mairaw\n  ms.author: mairaw\n  manager: wpickett\nreferences:\n- uid: System.ArgumentNullException\n  parent: System\n  isExternal: false\n  name: ArgumentNullException\n  nameWithType: ArgumentNullException\n  fullName: System.ArgumentNullException\n- uid: System.Collections.Generic.IEqualityComparer`1.Equals(`0,`0)\n  parent: System.Collections.Generic.IEqualityComparer`1\n  isExternal: false\n  name: Equals(T, T)\n  nameWithType: IEqualityComparer<T>.Equals(T, T)\n  fullName: IEqualityComparer<T>.Equals(T, T)\n- uid: System.Boolean\n  parent: System\n  isExternal: false\n  name: Boolean\n  nameWithType: Boolean\n  fullName: System.Boolean\n- uid: T\n  isExternal: true\n  name: T\n  nameWithType: T\n  fullName: T\n- uid: System.Collections.Generic.IEqualityComparer`1.GetHashCode(`0)\n  parent: System.Collections.Generic.IEqualityComparer`1\n  isExternal: false\n  name: GetHashCode(T)\n  nameWithType: IEqualityComparer<T>.GetHashCode(T)\n  fullName: IEqualityComparer<T>.GetHashCode(T)\n- uid: System.Int32\n  parent: System\n  isExternal: false\n  name: Int32\n  nameWithType: Int32\n  fullName: System.Int32\n- uid: System.Collections.Generic.IEqualityComparer`1.Equals*\n  parent: System.Collections.Generic.IEqualityComparer`1\n  isExternal: false\n  name: Equals\n  nameWithType: IEqualityComparer<T>.Equals\n  fullName: IEqualityComparer<T>.Equals\n  monikers:\n  - netcore-1.0\n  - netcore-1.1\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - netstandard-1.0\n  - netstandard-1.1\n  - netstandard-1.2\n  - netstandard-1.3\n  - netstandard-1.4\n  - netstandard-1.5\n  - netstandard-1.6\n  - netstandard-2.0\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Collections.Generic/IEqualityComparer`1.xml\n- uid: System.Collections.Generic.IEqualityComparer`1.GetHashCode*\n  parent: System.Collections.Generic.IEqualityComparer`1\n  isExternal: false\n  name: GetHashCode\n  nameWithType: IEqualityComparer<T>.GetHashCode\n  fullName: IEqualityComparer<T>.GetHashCode\n  monikers:\n  - netcore-1.0\n  - netcore-1.1\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - netstandard-1.0\n  - netstandard-1.1\n  - netstandard-1.2\n  - netstandard-1.3\n  - netstandard-1.4\n  - netstandard-1.5\n  - netstandard-1.6\n  - netstandard-2.0\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Collections.Generic/IEqualityComparer`1.xml\n"}