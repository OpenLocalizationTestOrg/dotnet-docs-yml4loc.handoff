{"nodes":[{"content":"Provides information for the <xref href=\"System.ComponentModel.ICollectionView.CurrentChanging\"></xref> event.","nodes":[{"pos":[0,110],"content":"Provides information for the <ph id=\"ph1\">&lt;xref href=\"System.ComponentModel.ICollectionView.CurrentChanging\"&gt;&lt;/xref&gt;</ph> event.","source":"Provides information for the <xref href=\"System.ComponentModel.ICollectionView.CurrentChanging\"></xref> event."}],"pos":[690,801],"yaml":true},{"content":"A collection that supports <xref:System.ComponentModel.ICollectionView> raises this event when the <xref:System.ComponentModel.ICollectionView.CurrentItem%2A> is changing or when the content of the collection has been reset.  \n  \n By default, the event is cancelable when the cause is a move-current operation (such as the <xref:System.ComponentModel.ICollectionView.MoveCurrentTo%2A> and similar methods) and uncancelable when the cause is an irreversible change operation on the collection.","nodes":[{"pos":[0,224],"content":"A collection that supports <xref:System.ComponentModel.ICollectionView> raises this event when the <xref:System.ComponentModel.ICollectionView.CurrentItem%2A> is changing or when the content of the collection has been reset.","nodes":[{"content":"A collection that supports <ph id=\"ph1\">&lt;xref:System.ComponentModel.ICollectionView&gt;</ph> raises this event when the <ph id=\"ph2\">&lt;xref:System.ComponentModel.ICollectionView.CurrentItem%2A&gt;</ph> is changing or when the content of the collection has been reset.","pos":[0,224],"source":"A collection that supports <xref:System.ComponentModel.ICollectionView> raises this event when the <xref:System.ComponentModel.ICollectionView.CurrentItem%2A> is changing or when the content of the collection has been reset."}]},{"pos":[231,492],"content":"By default, the event is cancelable when the cause is a move-current operation (such as the <xref:System.ComponentModel.ICollectionView.MoveCurrentTo%2A> and similar methods) and uncancelable when the cause is an irreversible change operation on the collection.","nodes":[{"content":"By default, the event is cancelable when the cause is a move-current operation (such as the <ph id=\"ph1\">&lt;xref:System.ComponentModel.ICollectionView.MoveCurrentTo%2A&gt;</ph> and similar methods) and uncancelable when the cause is an irreversible change operation on the collection.","pos":[0,261],"source":"By default, the event is cancelable when the cause is a move-current operation (such as the <xref:System.ComponentModel.ICollectionView.MoveCurrentTo%2A> and similar methods) and uncancelable when the cause is an irreversible change operation on the collection."}]}],"pos":[812,1309],"yaml":true,"extradata":"MT"},{"content":"Initializes a new instance of the <xref href=\"System.ComponentModel.CurrentChangingEventArgs\"></xref> class.","nodes":[{"pos":[0,108],"content":"Initializes a new instance of the <ph id=\"ph1\">&lt;xref href=\"System.ComponentModel.CurrentChangingEventArgs\"&gt;&lt;/xref&gt;</ph> class.","source":"Initializes a new instance of the <xref href=\"System.ComponentModel.CurrentChangingEventArgs\"></xref> class."}],"pos":[2804,2913],"yaml":true},{"content":"The default value of the <xref:System.ComponentModel.CurrentChangingEventArgs.IsCancelable%2A> property is `true`.","nodes":[{"pos":[0,114],"content":"The default value of the <ph id=\"ph1\">&lt;xref:System.ComponentModel.CurrentChangingEventArgs.IsCancelable%2A&gt;</ph> property is <ph id=\"ph2\">`true`</ph>.","source":"The default value of the <xref:System.ComponentModel.CurrentChangingEventArgs.IsCancelable%2A> property is `true`."}],"pos":[2924,3039],"yaml":true,"extradata":"MT"},{"content":"Initializes a new instance of the <xref href=\"System.ComponentModel.CurrentChangingEventArgs\"></xref> class with the specified <code>isCancelable</code> value.","nodes":[{"pos":[0,159],"content":"Initializes a new instance of the <ph id=\"ph1\">&lt;xref href=\"System.ComponentModel.CurrentChangingEventArgs\"&gt;&lt;/xref&gt;</ph> class with the specified <bpt id=\"p1\">&lt;code&gt;</bpt><ph id=\"ph2\">isCancelable</ph><ept id=\"p1\">&lt;/code&gt;</ept> value.","source":"Initializes a new instance of the <xref href=\"System.ComponentModel.CurrentChangingEventArgs\"></xref> class with the specified <code>isCancelable</code> value."}],"pos":[4297,4457],"yaml":true},{"content":"A value that indicates whether the event is cancelable.","nodes":[{"pos":[0,55],"content":"A value that indicates whether the event is cancelable.","nodes":[{"content":"A value that indicates whether the event is cancelable.","pos":[0,55]}]}],"pos":[4618,4674],"yaml":true},{"content":"Gets or sets a value that indicates whether to cancel the event.","nodes":[{"pos":[0,64],"content":"Gets or sets a value that indicates whether to cancel the event.","nodes":[{"content":"Gets or sets a value that indicates whether to cancel the event.","pos":[0,64]}]}],"pos":[5723,5788],"yaml":true},{"content":"`true` if the event is to be canceled; otherwise, `false`. The default value is `false`.","nodes":[{"pos":[0,88],"content":"`true` if the event is to be canceled; otherwise, `false`. The default value is `false`.","nodes":[{"content":"<ph id=\"ph1\">`true`</ph> if the event is to be canceled; otherwise, <ph id=\"ph2\">`false`</ph>.","pos":[0,58],"source":"`true` if the event is to be canceled; otherwise, `false`."},{"content":"The default value is <ph id=\"ph1\">`false`</ph>.","pos":[59,88],"source":" The default value is `false`."}]}],"pos":[5902,5993],"yaml":true},{"content":"If the value of <xref href=\"System.ComponentModel.CurrentChangingEventArgs.IsCancelable\"></xref> is `false`.","nodes":[{"pos":[0,108],"content":"If the value of <ph id=\"ph1\">&lt;xref href=\"System.ComponentModel.CurrentChangingEventArgs.IsCancelable\"&gt;&lt;/xref&gt;</ph> is <ph id=\"ph2\">`false`</ph>.","source":"If the value of <xref href=\"System.ComponentModel.CurrentChangingEventArgs.IsCancelable\"></xref> is `false`."}],"pos":[6184,6293],"yaml":true},{"content":"Gets a value that indicates whether the event is cancelable.","nodes":[{"pos":[0,60],"content":"Gets a value that indicates whether the event is cancelable.","nodes":[{"content":"Gets a value that indicates whether the event is cancelable.","pos":[0,60]}]}],"pos":[7295,7356],"yaml":true},{"content":"By default, the event is cancelable when the cause is a move-current operation (such as the <xref:System.ComponentModel.ICollectionView.MoveCurrentTo%2A> and similar methods) and uncancelable when the cause is an irreversible change operation on the collection.","nodes":[{"pos":[0,261],"content":"By default, the event is cancelable when the cause is a move-current operation (such as the <xref:System.ComponentModel.ICollectionView.MoveCurrentTo%2A> and similar methods) and uncancelable when the cause is an irreversible change operation on the collection.","nodes":[{"content":"By default, the event is cancelable when the cause is a move-current operation (such as the <ph id=\"ph1\">&lt;xref:System.ComponentModel.ICollectionView.MoveCurrentTo%2A&gt;</ph> and similar methods) and uncancelable when the cause is an irreversible change operation on the collection.","pos":[0,261],"source":"By default, the event is cancelable when the cause is a move-current operation (such as the <xref:System.ComponentModel.ICollectionView.MoveCurrentTo%2A> and similar methods) and uncancelable when the cause is an irreversible change operation on the collection."}]}],"pos":[7367,7629],"yaml":true,"extradata":"MT"},{"content":"`true` if the event is cancelable, otherwise, `false`. The default value is `true`.","nodes":[{"pos":[0,83],"content":"`true` if the event is cancelable, otherwise, `false`. The default value is `true`.","nodes":[{"content":"<ph id=\"ph1\">`true`</ph> if the event is cancelable, otherwise, <ph id=\"ph2\">`false`</ph>.","pos":[0,54],"source":"`true` if the event is cancelable, otherwise, `false`."},{"content":"The default value is <ph id=\"ph1\">`true`</ph>.","pos":[55,83],"source":" The default value is `true`."}]}],"pos":[7744,7830],"yaml":true}],"content":"### YamlMime:ManagedReference\nitems:\n- uid: System.ComponentModel.CurrentChangingEventArgs\n  commentId: T:System.ComponentModel.CurrentChangingEventArgs\n  id: CurrentChangingEventArgs\n  children:\n  - System.ComponentModel.CurrentChangingEventArgs.#ctor\n  - System.ComponentModel.CurrentChangingEventArgs.#ctor(System.Boolean)\n  - System.ComponentModel.CurrentChangingEventArgs.Cancel\n  - System.ComponentModel.CurrentChangingEventArgs.IsCancelable\n  langs:\n  - csharp\n  name: CurrentChangingEventArgs\n  nameWithType: CurrentChangingEventArgs\n  fullName: System.ComponentModel.CurrentChangingEventArgs\n  type: Class\n  assemblies:\n  - WindowsBase\n  namespace: System.ComponentModel\n  summary: Provides information for the <xref href=\"System.ComponentModel.ICollectionView.CurrentChanging\"></xref> event.\n  remarks: \"A collection that supports <xref:System.ComponentModel.ICollectionView> raises this event when the <xref:System.ComponentModel.ICollectionView.CurrentItem%2A> is changing or when the content of the collection has been reset.  \\n  \\n By default, the event is cancelable when the cause is a move-current operation (such as the <xref:System.ComponentModel.ICollectionView.MoveCurrentTo%2A> and similar methods) and uncancelable when the cause is an irreversible change operation on the collection.\"\n  syntax:\n    content: 'public class CurrentChangingEventArgs : EventArgs'\n  inheritance:\n  - System.Object\n  - System.EventArgs\n  implements: []\n  inheritedMembers:\n  - System.EventArgs.Empty\n  - System.Object.Equals(System.Object)\n  - System.Object.Equals(System.Object,System.Object)\n  - System.Object.GetHashCode\n  - System.Object.GetType\n  - System.Object.MemberwiseClone\n  - System.Object.ReferenceEquals(System.Object,System.Object)\n  - System.Object.ToString\n  version:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.ComponentModel/CurrentChangingEventArgs.xml\n  ms.technology:\n  - dotnet-standard\n  author: stevehoag\n  ms.author: shoag\n  manager: wpickett\n- uid: System.ComponentModel.CurrentChangingEventArgs.#ctor\n  commentId: M:System.ComponentModel.CurrentChangingEventArgs.#ctor\n  id: '#ctor'\n  parent: System.ComponentModel.CurrentChangingEventArgs\n  langs:\n  - csharp\n  name: CurrentChangingEventArgs()\n  nameWithType: CurrentChangingEventArgs.CurrentChangingEventArgs()\n  fullName: CurrentChangingEventArgs.CurrentChangingEventArgs()\n  type: Constructor\n  assemblies:\n  - WindowsBase\n  namespace: System.ComponentModel\n  summary: Initializes a new instance of the <xref href=\"System.ComponentModel.CurrentChangingEventArgs\"></xref> class.\n  remarks: The default value of the <xref:System.ComponentModel.CurrentChangingEventArgs.IsCancelable%2A> property is `true`.\n  syntax:\n    content: public CurrentChangingEventArgs ();\n    parameters: []\n  overload: System.ComponentModel.CurrentChangingEventArgs.#ctor*\n  exceptions: []\n  version:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.ComponentModel/CurrentChangingEventArgs.xml\n  ms.technology:\n  - dotnet-standard\n  author: stevehoag\n  ms.author: shoag\n  manager: wpickett\n- uid: System.ComponentModel.CurrentChangingEventArgs.#ctor(System.Boolean)\n  commentId: M:System.ComponentModel.CurrentChangingEventArgs.#ctor(System.Boolean)\n  id: '#ctor(System.Boolean)'\n  parent: System.ComponentModel.CurrentChangingEventArgs\n  langs:\n  - csharp\n  name: CurrentChangingEventArgs(Boolean)\n  nameWithType: CurrentChangingEventArgs.CurrentChangingEventArgs(Boolean)\n  fullName: CurrentChangingEventArgs.CurrentChangingEventArgs(Boolean)\n  type: Constructor\n  assemblies:\n  - WindowsBase\n  namespace: System.ComponentModel\n  summary: Initializes a new instance of the <xref href=\"System.ComponentModel.CurrentChangingEventArgs\"></xref> class with the specified <code>isCancelable</code> value.\n  syntax:\n    content: public CurrentChangingEventArgs (bool isCancelable);\n    parameters:\n    - id: isCancelable\n      type: System.Boolean\n      description: A value that indicates whether the event is cancelable.\n  overload: System.ComponentModel.CurrentChangingEventArgs.#ctor*\n  exceptions: []\n  version:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.ComponentModel/CurrentChangingEventArgs.xml\n  ms.technology:\n  - dotnet-standard\n  author: stevehoag\n  ms.author: shoag\n  manager: wpickett\n- uid: System.ComponentModel.CurrentChangingEventArgs.Cancel\n  commentId: P:System.ComponentModel.CurrentChangingEventArgs.Cancel\n  id: Cancel\n  parent: System.ComponentModel.CurrentChangingEventArgs\n  langs:\n  - csharp\n  name: Cancel\n  nameWithType: CurrentChangingEventArgs.Cancel\n  fullName: CurrentChangingEventArgs.Cancel\n  type: Property\n  assemblies:\n  - WindowsBase\n  namespace: System.ComponentModel\n  summary: Gets or sets a value that indicates whether to cancel the event.\n  syntax:\n    content: public bool Cancel { get; set; }\n    return:\n      type: System.Boolean\n      description: '`true` if the event is to be canceled; otherwise, `false`. The default value is `false`.'\n  overload: System.ComponentModel.CurrentChangingEventArgs.Cancel*\n  exceptions:\n  - type: System.InvalidOperationException\n    commentId: T:System.InvalidOperationException\n    description: If the value of <xref href=\"System.ComponentModel.CurrentChangingEventArgs.IsCancelable\"></xref> is `false`.\n  version:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.ComponentModel/CurrentChangingEventArgs.xml\n  ms.technology:\n  - dotnet-standard\n  author: stevehoag\n  ms.author: shoag\n  manager: wpickett\n- uid: System.ComponentModel.CurrentChangingEventArgs.IsCancelable\n  commentId: P:System.ComponentModel.CurrentChangingEventArgs.IsCancelable\n  id: IsCancelable\n  parent: System.ComponentModel.CurrentChangingEventArgs\n  langs:\n  - csharp\n  name: IsCancelable\n  nameWithType: CurrentChangingEventArgs.IsCancelable\n  fullName: CurrentChangingEventArgs.IsCancelable\n  type: Property\n  assemblies:\n  - WindowsBase\n  namespace: System.ComponentModel\n  summary: Gets a value that indicates whether the event is cancelable.\n  remarks: By default, the event is cancelable when the cause is a move-current operation (such as the <xref:System.ComponentModel.ICollectionView.MoveCurrentTo%2A> and similar methods) and uncancelable when the cause is an irreversible change operation on the collection.\n  syntax:\n    content: public bool IsCancelable { get; }\n    return:\n      type: System.Boolean\n      description: '`true` if the event is cancelable, otherwise, `false`. The default value is `true`.'\n  overload: System.ComponentModel.CurrentChangingEventArgs.IsCancelable*\n  exceptions: []\n  version:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.ComponentModel/CurrentChangingEventArgs.xml\n  ms.technology:\n  - dotnet-standard\n  author: stevehoag\n  ms.author: shoag\n  manager: wpickett\nreferences:\n- uid: System.EventArgs\n  parent: System\n  isExternal: false\n  name: EventArgs\n  nameWithType: EventArgs\n  fullName: System.EventArgs\n- uid: System.InvalidOperationException\n  parent: System\n  isExternal: false\n  name: InvalidOperationException\n  nameWithType: InvalidOperationException\n  fullName: System.InvalidOperationException\n- uid: System.ComponentModel.CurrentChangingEventArgs.#ctor\n  parent: System.ComponentModel.CurrentChangingEventArgs\n  isExternal: false\n  name: CurrentChangingEventArgs()\n  nameWithType: CurrentChangingEventArgs.CurrentChangingEventArgs()\n  fullName: CurrentChangingEventArgs.CurrentChangingEventArgs()\n- uid: System.ComponentModel.CurrentChangingEventArgs.#ctor(System.Boolean)\n  parent: System.ComponentModel.CurrentChangingEventArgs\n  isExternal: false\n  name: CurrentChangingEventArgs(Boolean)\n  nameWithType: CurrentChangingEventArgs.CurrentChangingEventArgs(Boolean)\n  fullName: CurrentChangingEventArgs.CurrentChangingEventArgs(Boolean)\n- uid: System.Boolean\n  parent: System\n  isExternal: false\n  name: Boolean\n  nameWithType: Boolean\n  fullName: System.Boolean\n- uid: System.ComponentModel.CurrentChangingEventArgs.Cancel\n  parent: System.ComponentModel.CurrentChangingEventArgs\n  isExternal: false\n  name: Cancel\n  nameWithType: CurrentChangingEventArgs.Cancel\n  fullName: CurrentChangingEventArgs.Cancel\n- uid: System.ComponentModel.CurrentChangingEventArgs.IsCancelable\n  parent: System.ComponentModel.CurrentChangingEventArgs\n  isExternal: false\n  name: IsCancelable\n  nameWithType: CurrentChangingEventArgs.IsCancelable\n  fullName: CurrentChangingEventArgs.IsCancelable\n- uid: System.ComponentModel.CurrentChangingEventArgs.#ctor*\n  parent: System.ComponentModel.CurrentChangingEventArgs\n  isExternal: false\n  name: CurrentChangingEventArgs\n  nameWithType: CurrentChangingEventArgs.CurrentChangingEventArgs\n  fullName: CurrentChangingEventArgs.CurrentChangingEventArgs\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.ComponentModel/CurrentChangingEventArgs.xml\n- uid: System.ComponentModel.CurrentChangingEventArgs.Cancel*\n  parent: System.ComponentModel.CurrentChangingEventArgs\n  isExternal: false\n  name: Cancel\n  nameWithType: CurrentChangingEventArgs.Cancel\n  fullName: CurrentChangingEventArgs.Cancel\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.ComponentModel/CurrentChangingEventArgs.xml\n- uid: System.ComponentModel.CurrentChangingEventArgs.IsCancelable*\n  parent: System.ComponentModel.CurrentChangingEventArgs\n  isExternal: false\n  name: IsCancelable\n  nameWithType: CurrentChangingEventArgs.IsCancelable\n  fullName: CurrentChangingEventArgs.IsCancelable\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.ComponentModel/CurrentChangingEventArgs.xml\n- uid: System.Object.Equals(System.Object)\n  parent: System.Object\n  isExternal: false\n  name: Equals(Object)\n  nameWithType: Object.Equals(Object)\n  fullName: Object.Equals(Object)\n- uid: System.Object.Equals(System.Object,System.Object)\n  parent: System.Object\n  isExternal: false\n  name: Equals(Object, Object)\n  nameWithType: Object.Equals(Object, Object)\n  fullName: Object.Equals(Object, Object)\n- uid: System.Object.GetHashCode\n  parent: System.Object\n  isExternal: false\n  name: GetHashCode()\n  nameWithType: Object.GetHashCode()\n  fullName: Object.GetHashCode()\n- uid: System.Object.GetType\n  parent: System.Object\n  isExternal: false\n  name: GetType()\n  nameWithType: Object.GetType()\n  fullName: Object.GetType()\n- uid: System.Object.MemberwiseClone\n  parent: System.Object\n  isExternal: false\n  name: MemberwiseClone()\n  nameWithType: Object.MemberwiseClone()\n  fullName: Object.MemberwiseClone()\n- uid: System.Object.ReferenceEquals(System.Object,System.Object)\n  parent: System.Object\n  isExternal: false\n  name: ReferenceEquals(Object, Object)\n  nameWithType: Object.ReferenceEquals(Object, Object)\n  fullName: Object.ReferenceEquals(Object, Object)\n- uid: System.Object.ToString\n  parent: System.Object\n  isExternal: false\n  name: ToString()\n  nameWithType: Object.ToString()\n  fullName: Object.ToString()\n- uid: System.EventArgs.Empty\n  parent: System.EventArgs\n  isExternal: false\n  name: Empty\n  nameWithType: EventArgs.Empty\n  fullName: EventArgs.Empty\n"}