{"nodes":[{"content":"Allows security actions for <xref href=\"System.Security.Permissions.StorePermission\"></xref> to be applied to code using declarative security. This class cannot be inherited.","nodes":[{"pos":[0,174],"content":"Allows security actions for <xref href=\"System.Security.Permissions.StorePermission\"></xref> to be applied to code using declarative security. This class cannot be inherited.","nodes":[{"content":"Allows security actions for <ph id=\"ph1\">&lt;xref href=\"System.Security.Permissions.StorePermission\"&gt;&lt;/xref&gt;</ph> to be applied to code using declarative security.","pos":[0,142],"source":"Allows security actions for <xref href=\"System.Security.Permissions.StorePermission\"></xref> to be applied to code using declarative security."},{"content":"This class cannot be inherited.","pos":[143,174]}]}],"pos":[1231,1406],"yaml":true},{"content":"The scope of the declaration that is allowed depends on the <xref:System.Security.Permissions.SecurityAction> value that is used.  \n  \n The security information declared by a security attribute is stored in the metadata of the attribute target and is accessed by the system at run time. The <xref:System.Security.Permissions.StorePermissionAttribute> attribute is used only for declarative security. For imperative security, use the <xref:System.Security.Permissions.StorePermission> class.","nodes":[{"pos":[0,129],"content":"The scope of the declaration that is allowed depends on the <xref:System.Security.Permissions.SecurityAction> value that is used.","nodes":[{"content":"The scope of the declaration that is allowed depends on the <ph id=\"ph1\">&lt;xref:System.Security.Permissions.SecurityAction&gt;</ph> value that is used.","pos":[0,129],"source":"The scope of the declaration that is allowed depends on the <xref:System.Security.Permissions.SecurityAction> value that is used."}]},{"pos":[136,490],"content":"The security information declared by a security attribute is stored in the metadata of the attribute target and is accessed by the system at run time. The <xref:System.Security.Permissions.StorePermissionAttribute> attribute is used only for declarative security. For imperative security, use the <xref:System.Security.Permissions.StorePermission> class.","nodes":[{"content":"The security information declared by a security attribute is stored in the metadata of the attribute target and is accessed by the system at run time. The <xref:System.Security.Permissions.StorePermissionAttribute> attribute is used only for declarative security. For imperative security, use the <xref:System.Security.Permissions.StorePermission> class.","pos":[0,354],"nodes":[{"content":"The security information declared by a security attribute is stored in the metadata of the attribute target and is accessed by the system at run time.","pos":[0,150]},{"content":"The <ph id=\"ph1\">&lt;xref:System.Security.Permissions.StorePermissionAttribute&gt;</ph> attribute is used only for declarative security.","pos":[151,263],"source":" The <xref:System.Security.Permissions.StorePermissionAttribute> attribute is used only for declarative security."},{"content":"For imperative security, use the <ph id=\"ph1\">&lt;xref:System.Security.Permissions.StorePermission&gt;</ph> class.","pos":[264,354],"source":" For imperative security, use the <xref:System.Security.Permissions.StorePermission> class."}]}]}],"pos":[1417,1912],"yaml":true,"extradata":"MT"},{"content":"Initializes a new instance of the <xref href=\"System.Security.Permissions.StorePermissionAttribute\"></xref> class with the specified security action.","nodes":[{"pos":[0,149],"content":"Initializes a new instance of the <ph id=\"ph1\">&lt;xref href=\"System.Security.Permissions.StorePermissionAttribute\"&gt;&lt;/xref&gt;</ph> class with the specified security action.","source":"Initializes a new instance of the <xref href=\"System.Security.Permissions.StorePermissionAttribute\"></xref> class with the specified security action."}],"pos":[7608,7758],"yaml":true},{"content":"One of the <xref href=\"System.Security.Permissions.SecurityAction\"></xref> values.","nodes":[{"pos":[0,82],"content":"One of the <ph id=\"ph1\">&lt;xref href=\"System.Security.Permissions.SecurityAction\"&gt;&lt;/xref&gt;</ph> values.","source":"One of the <xref href=\"System.Security.Permissions.SecurityAction\"></xref> values."}],"pos":[7973,8056],"yaml":true},{"content":"Gets or sets a value indicating whether the code is permitted to add to a store.","nodes":[{"pos":[0,80],"content":"Gets or sets a value indicating whether the code is permitted to add to a store.","nodes":[{"content":"Gets or sets a value indicating whether the code is permitted to add to a store.","pos":[0,80]}]}],"pos":[9260,9341],"yaml":true},{"content":"For security reasons, this ability should be granted only to highly trusted code.","nodes":[{"pos":[0,81],"content":"For security reasons, this ability should be granted only to highly trusted code.","nodes":[{"content":"For security reasons, this ability should be granted only to highly trusted code.","pos":[0,81]}]}],"pos":[9352,9434],"yaml":true,"extradata":"MT"},{"content":"`true` if the ability to add to a store is allowed; otherwise, `false`.","nodes":[{"pos":[0,71],"content":"<ph id=\"ph1\">`true`</ph> if the ability to add to a store is allowed; otherwise, <ph id=\"ph2\">`false`</ph>.","source":"`true` if the ability to add to a store is allowed; otherwise, `false`."}],"pos":[9552,9626],"yaml":true},{"content":"Creates and returns a new <xref href=\"System.Security.Permissions.StorePermission\"></xref>.","nodes":[{"pos":[0,91],"content":"Creates and returns a new <ph id=\"ph1\">&lt;xref href=\"System.Security.Permissions.StorePermission\"&gt;&lt;/xref&gt;</ph>.","source":"Creates and returns a new <xref href=\"System.Security.Permissions.StorePermission\"></xref>."}],"pos":[10875,10967],"yaml":true},{"content":"This method should be called only by the security system, never by application code.  \n  \n At compile time, attributes convert security declarations to a serialized form in metadata. The metadata is created from the permission object that this method returns.","nodes":[{"pos":[0,84],"content":"This method should be called only by the security system, never by application code.","nodes":[{"content":"This method should be called only by the security system, never by application code.","pos":[0,84]}]},{"pos":[91,259],"content":"At compile time, attributes convert security declarations to a serialized form in metadata. The metadata is created from the permission object that this method returns.","nodes":[{"content":"At compile time, attributes convert security declarations to a serialized form in metadata. The metadata is created from the permission object that this method returns.","pos":[0,168],"nodes":[{"content":"At compile time, attributes convert security declarations to a serialized form in metadata.","pos":[0,91]},{"content":"The metadata is created from the permission object that this method returns.","pos":[92,168]}]}]}],"pos":[10978,11242],"yaml":true,"extradata":"MT"},{"content":"A <xref href=\"System.Security.Permissions.StorePermission\"></xref> that corresponds to the attribute.","nodes":[{"pos":[0,101],"content":"A <ph id=\"ph1\">&lt;xref href=\"System.Security.Permissions.StorePermission\"&gt;&lt;/xref&gt;</ph> that corresponds to the attribute.","source":"A <xref href=\"System.Security.Permissions.StorePermission\"></xref> that corresponds to the attribute."}],"pos":[11420,11522],"yaml":true},{"content":"Gets or sets a value indicating whether the code is permitted to create a store.","nodes":[{"pos":[0,80],"content":"Gets or sets a value indicating whether the code is permitted to create a store.","nodes":[{"content":"Gets or sets a value indicating whether the code is permitted to create a store.","pos":[0,80]}]}],"pos":[12743,12824],"yaml":true},{"content":"New stores are created by calling the <xref:System.Security.Cryptography.X509Certificates.X509Store.Open%2A?displayProperty=fullName> method.","nodes":[{"pos":[0,141],"content":"New stores are created by calling the <xref:System.Security.Cryptography.X509Certificates.X509Store.Open%2A?displayProperty=fullName> method.","nodes":[{"content":"New stores are created by calling the <ph id=\"ph1\">&lt;xref:System.Security.Cryptography.X509Certificates.X509Store.Open%2A?displayProperty=fullName&gt;</ph> method.","pos":[0,141],"source":"New stores are created by calling the <xref:System.Security.Cryptography.X509Certificates.X509Store.Open%2A?displayProperty=fullName> method."}]}],"pos":[12835,12977],"yaml":true,"extradata":"MT"},{"content":"`true` if the ability to create a store is allowed; otherwise, `false`.","nodes":[{"pos":[0,71],"content":"<ph id=\"ph1\">`true`</ph> if the ability to create a store is allowed; otherwise, <ph id=\"ph2\">`false`</ph>.","source":"`true` if the ability to create a store is allowed; otherwise, `false`."}],"pos":[13096,13170],"yaml":true},{"content":"Gets or sets a value indicating whether the code is permitted to delete a store.","nodes":[{"pos":[0,80],"content":"Gets or sets a value indicating whether the code is permitted to delete a store.","nodes":[{"content":"Gets or sets a value indicating whether the code is permitted to delete a store.","pos":[0,80]}]}],"pos":[14386,14467],"yaml":true},{"content":"This functionality is not exposed by the <xref:System.Security.Cryptography.X509Certificates.X509Store> class.","nodes":[{"pos":[0,110],"content":"This functionality is not exposed by the <xref:System.Security.Cryptography.X509Certificates.X509Store> class.","nodes":[{"content":"This functionality is not exposed by the <ph id=\"ph1\">&lt;xref:System.Security.Cryptography.X509Certificates.X509Store&gt;</ph> class.","pos":[0,110],"source":"This functionality is not exposed by the <xref:System.Security.Cryptography.X509Certificates.X509Store> class."}]}],"pos":[14478,14589],"yaml":true,"extradata":"MT"},{"content":"`true` if the ability to delete a store is allowed; otherwise, `false`.","nodes":[{"pos":[0,71],"content":"<ph id=\"ph1\">`true`</ph> if the ability to delete a store is allowed; otherwise, <ph id=\"ph2\">`false`</ph>.","source":"`true` if the ability to delete a store is allowed; otherwise, `false`."}],"pos":[14708,14782],"yaml":true},{"content":"Gets or sets a value indicating whether the code is permitted to enumerate the certificates in a store.","nodes":[{"pos":[0,103],"content":"Gets or sets a value indicating whether the code is permitted to enumerate the certificates in a store.","nodes":[{"content":"Gets or sets a value indicating whether the code is permitted to enumerate the certificates in a store.","pos":[0,103]}]}],"pos":[16058,16162],"yaml":true},{"content":"For privacy reasons, this ability should be granted only to fully trusted code.","nodes":[{"pos":[0,79],"content":"For privacy reasons, this ability should be granted only to fully trusted code.","nodes":[{"content":"For privacy reasons, this ability should be granted only to fully trusted code.","pos":[0,79]}]}],"pos":[16173,16253],"yaml":true,"extradata":"MT"},{"content":"`true` if the ability to enumerate certificates is allowed; otherwise, `false`.","nodes":[{"pos":[0,79],"content":"<ph id=\"ph1\">`true`</ph> if the ability to enumerate certificates is allowed; otherwise, <ph id=\"ph2\">`false`</ph>.","source":"`true` if the ability to enumerate certificates is allowed; otherwise, `false`."}],"pos":[16382,16464],"yaml":true},{"content":"Gets or sets a value indicating whether the code is permitted to enumerate stores.","nodes":[{"pos":[0,82],"content":"Gets or sets a value indicating whether the code is permitted to enumerate stores.","nodes":[{"content":"Gets or sets a value indicating whether the code is permitted to enumerate stores.","pos":[0,82]}]}],"pos":[17714,17797],"yaml":true},{"content":"This functionality is not exposed by the <xref:System.Security.Cryptography.X509Certificates.X509Store> class.","nodes":[{"pos":[0,110],"content":"This functionality is not exposed by the <xref:System.Security.Cryptography.X509Certificates.X509Store> class.","nodes":[{"content":"This functionality is not exposed by the <ph id=\"ph1\">&lt;xref:System.Security.Cryptography.X509Certificates.X509Store&gt;</ph> class.","pos":[0,110],"source":"This functionality is not exposed by the <xref:System.Security.Cryptography.X509Certificates.X509Store> class."}]}],"pos":[17808,17919],"yaml":true,"extradata":"MT"},{"content":"`true` if the ability to enumerate stores is allowed; otherwise, `false`.","nodes":[{"pos":[0,73],"content":"<ph id=\"ph1\">`true`</ph> if the ability to enumerate stores is allowed; otherwise, <ph id=\"ph2\">`false`</ph>.","source":"`true` if the ability to enumerate stores is allowed; otherwise, `false`."}],"pos":[18042,18118],"yaml":true},{"content":"Gets or sets the store permissions.","nodes":[{"pos":[0,35],"content":"Gets or sets the store permissions.","nodes":[{"content":"Gets or sets the store permissions.","pos":[0,35]}]}],"pos":[19302,19338],"yaml":true},{"content":"> [!CAUTION]\n>  Many of these flags are powerful and permit access to stores that should be granted only to highly trusted code.  \n  \n The most powerful of the flags are <xref:System.Security.Permissions.StorePermissionFlags.AddToStore>, <xref:System.Security.Permissions.StorePermissionFlags.CreateStore>, <xref:System.Security.Permissions.StorePermissionFlags.DeleteStore>, and <xref:System.Security.Permissions.StorePermissionFlags.AllFlags>. For specific threats posed by the use of these flags, see individual flag descriptions.","nodes":[{"pos":[2,128],"content":"[!CAUTION]\n Many of these flags are powerful and permit access to stores that should be granted only to highly trusted code.","leadings":["","> "],"nodes":[{"content":"Many of these flags are powerful and permit access to stores that should be granted only to highly trusted code.","pos":[12,124]}]},{"pos":[135,533],"content":"The most powerful of the flags are <xref:System.Security.Permissions.StorePermissionFlags.AddToStore>, <xref:System.Security.Permissions.StorePermissionFlags.CreateStore>, <xref:System.Security.Permissions.StorePermissionFlags.DeleteStore>, and <xref:System.Security.Permissions.StorePermissionFlags.AllFlags>. For specific threats posed by the use of these flags, see individual flag descriptions.","nodes":[{"content":"The most powerful of the flags are <xref:System.Security.Permissions.StorePermissionFlags.AddToStore>, <xref:System.Security.Permissions.StorePermissionFlags.CreateStore>, <xref:System.Security.Permissions.StorePermissionFlags.DeleteStore>, and <xref:System.Security.Permissions.StorePermissionFlags.AllFlags>. For specific threats posed by the use of these flags, see individual flag descriptions.","pos":[0,398],"nodes":[{"content":"The most powerful of the flags are <ph id=\"ph1\">&lt;xref:System.Security.Permissions.StorePermissionFlags.AddToStore&gt;</ph>, <ph id=\"ph2\">&lt;xref:System.Security.Permissions.StorePermissionFlags.CreateStore&gt;</ph>, <ph id=\"ph3\">&lt;xref:System.Security.Permissions.StorePermissionFlags.DeleteStore&gt;</ph>, and <ph id=\"ph4\">&lt;xref:System.Security.Permissions.StorePermissionFlags.AllFlags&gt;</ph>.","pos":[0,310],"source":"The most powerful of the flags are <xref:System.Security.Permissions.StorePermissionFlags.AddToStore>, <xref:System.Security.Permissions.StorePermissionFlags.CreateStore>, <xref:System.Security.Permissions.StorePermissionFlags.DeleteStore>, and <xref:System.Security.Permissions.StorePermissionFlags.AllFlags>."},{"content":"For specific threats posed by the use of these flags, see individual flag descriptions.","pos":[311,398]}]}]}],"pos":[19349,19888],"yaml":true,"extradata":"MT"},{"content":"A bitwise combination of the <xref href=\"System.Security.Permissions.StorePermissionFlags\"></xref> values. The default is <xref href=\"System.Security.Permissions.StorePermissionFlags.NoFlags\"></xref>.","nodes":[{"pos":[0,200],"content":"A bitwise combination of the <xref href=\"System.Security.Permissions.StorePermissionFlags\"></xref> values. The default is <xref href=\"System.Security.Permissions.StorePermissionFlags.NoFlags\"></xref>.","nodes":[{"content":"A bitwise combination of the <ph id=\"ph1\">&lt;xref href=\"System.Security.Permissions.StorePermissionFlags\"&gt;&lt;/xref&gt;</ph> values.","pos":[0,106],"source":"A bitwise combination of the <xref href=\"System.Security.Permissions.StorePermissionFlags\"></xref> values."},{"content":"The default is <ph id=\"ph1\">&lt;xref href=\"System.Security.Permissions.StorePermissionFlags.NoFlags\"&gt;&lt;/xref&gt;</ph>.","pos":[107,200],"source":" The default is <xref href=\"System.Security.Permissions.StorePermissionFlags.NoFlags\"></xref>."}]}],"pos":[20079,20280],"yaml":true},{"content":"Gets or sets a value indicating whether the code is permitted to open a store.","nodes":[{"pos":[0,78],"content":"Gets or sets a value indicating whether the code is permitted to open a store.","nodes":[{"content":"Gets or sets a value indicating whether the code is permitted to open a store.","pos":[0,78]}]}],"pos":[21478,21557],"yaml":true},{"content":"The ability to open a store does not include the ability to enumerate certificates (which raises privacy concerns) or to add or remove certificates (which raises security concerns).","nodes":[{"pos":[0,181],"content":"The ability to open a store does not include the ability to enumerate certificates (which raises privacy concerns) or to add or remove certificates (which raises security concerns).","nodes":[{"content":"The ability to open a store does not include the ability to enumerate certificates (which raises privacy concerns) or to add or remove certificates (which raises security concerns).","pos":[0,181]}]}],"pos":[21568,21750],"yaml":true,"extradata":"MT"},{"content":"`true` if the ability to open a store is allowed; otherwise, `false`.","nodes":[{"pos":[0,69],"content":"<ph id=\"ph1\">`true`</ph> if the ability to open a store is allowed; otherwise, <ph id=\"ph2\">`false`</ph>.","source":"`true` if the ability to open a store is allowed; otherwise, `false`."}],"pos":[21867,21939],"yaml":true},{"content":"Gets or sets a value indicating whether the code is permitted to remove a certificate from a store.","nodes":[{"pos":[0,99],"content":"Gets or sets a value indicating whether the code is permitted to remove a certificate from a store.","nodes":[{"content":"Gets or sets a value indicating whether the code is permitted to remove a certificate from a store.","pos":[0,99]}]}],"pos":[23177,23277],"yaml":true},{"content":"This ability should be granted only to highly trusted code because removing a certificate can result in a denial of service.","nodes":[{"pos":[0,124],"content":"This ability should be granted only to highly trusted code because removing a certificate can result in a denial of service.","nodes":[{"content":"This ability should be granted only to highly trusted code because removing a certificate can result in a denial of service.","pos":[0,124]}]}],"pos":[23288,23413],"yaml":true,"extradata":"MT"},{"content":"`true` if the ability to remove a certificate from a store is allowed; otherwise, `false`.","nodes":[{"pos":[0,90],"content":"<ph id=\"ph1\">`true`</ph> if the ability to remove a certificate from a store is allowed; otherwise, <ph id=\"ph2\">`false`</ph>.","source":"`true` if the ability to remove a certificate from a store is allowed; otherwise, `false`."}],"pos":[23536,23629],"yaml":true}],"content":"### YamlMime:ManagedReference\nitems:\n- uid: System.Security.Permissions.StorePermissionAttribute\n  commentId: T:System.Security.Permissions.StorePermissionAttribute\n  id: StorePermissionAttribute\n  children:\n  - System.Security.Permissions.StorePermissionAttribute.#ctor(System.Security.Permissions.SecurityAction)\n  - System.Security.Permissions.StorePermissionAttribute.AddToStore\n  - System.Security.Permissions.StorePermissionAttribute.CreatePermission\n  - System.Security.Permissions.StorePermissionAttribute.CreateStore\n  - System.Security.Permissions.StorePermissionAttribute.DeleteStore\n  - System.Security.Permissions.StorePermissionAttribute.EnumerateCertificates\n  - System.Security.Permissions.StorePermissionAttribute.EnumerateStores\n  - System.Security.Permissions.StorePermissionAttribute.Flags\n  - System.Security.Permissions.StorePermissionAttribute.OpenStore\n  - System.Security.Permissions.StorePermissionAttribute.RemoveFromStore\n  langs:\n  - csharp\n  name: StorePermissionAttribute\n  nameWithType: StorePermissionAttribute\n  fullName: System.Security.Permissions.StorePermissionAttribute\n  type: Class\n  assemblies:\n  - System\n  - System.Security.Permissions\n  namespace: System.Security.Permissions\n  summary: Allows security actions for <xref href=\"System.Security.Permissions.StorePermission\"></xref> to be applied to code using declarative security. This class cannot be inherited.\n  remarks: \"The scope of the declaration that is allowed depends on the <xref:System.Security.Permissions.SecurityAction> value that is used.  \\n  \\n The security information declared by a security attribute is stored in the metadata of the attribute target and is accessed by the system at run time. The <xref:System.Security.Permissions.StorePermissionAttribute> attribute is used only for declarative security. For imperative security, use the <xref:System.Security.Permissions.StorePermission> class.\"\n  syntax:\n    content: >-\n      [System.AttributeUsage(System.AttributeTargets.Assembly | System.AttributeTargets.Class | System.AttributeTargets.Struct | System.AttributeTargets.Constructor | System.AttributeTargets.Method, AllowMultiple=true, Inherited=false)]\n\n      public sealed class StorePermissionAttribute : System.Security.Permissions.CodeAccessSecurityAttribute\n  inheritance:\n  - System.Object\n  - System.Attribute\n  - System.Security.Permissions.SecurityAttribute\n  - System.Security.Permissions.CodeAccessSecurityAttribute\n  implements: []\n  inheritedMembers:\n  - System.Attribute.Equals(System.Object)\n  - System.Attribute.GetCustomAttribute(System.Reflection.Assembly,System.Type)\n  - System.Attribute.GetCustomAttribute(System.Reflection.Assembly,System.Type,System.Boolean)\n  - System.Attribute.GetCustomAttribute(System.Reflection.MemberInfo,System.Type)\n  - System.Attribute.GetCustomAttribute(System.Reflection.MemberInfo,System.Type,System.Boolean)\n  - System.Attribute.GetCustomAttribute(System.Reflection.Module,System.Type)\n  - System.Attribute.GetCustomAttribute(System.Reflection.Module,System.Type,System.Boolean)\n  - System.Attribute.GetCustomAttribute(System.Reflection.ParameterInfo,System.Type)\n  - System.Attribute.GetCustomAttribute(System.Reflection.ParameterInfo,System.Type,System.Boolean)\n  - System.Attribute.GetCustomAttributes(System.Reflection.Assembly)\n  - System.Attribute.GetCustomAttributes(System.Reflection.Assembly,System.Boolean)\n  - System.Attribute.GetCustomAttributes(System.Reflection.Assembly,System.Type)\n  - System.Attribute.GetCustomAttributes(System.Reflection.Assembly,System.Type,System.Boolean)\n  - System.Attribute.GetCustomAttributes(System.Reflection.MemberInfo)\n  - System.Attribute.GetCustomAttributes(System.Reflection.MemberInfo,System.Boolean)\n  - System.Attribute.GetCustomAttributes(System.Reflection.MemberInfo,System.Type)\n  - System.Attribute.GetCustomAttributes(System.Reflection.MemberInfo,System.Type,System.Boolean)\n  - System.Attribute.GetCustomAttributes(System.Reflection.Module)\n  - System.Attribute.GetCustomAttributes(System.Reflection.Module,System.Boolean)\n  - System.Attribute.GetCustomAttributes(System.Reflection.Module,System.Type)\n  - System.Attribute.GetCustomAttributes(System.Reflection.Module,System.Type,System.Boolean)\n  - System.Attribute.GetCustomAttributes(System.Reflection.ParameterInfo)\n  - System.Attribute.GetCustomAttributes(System.Reflection.ParameterInfo,System.Boolean)\n  - System.Attribute.GetCustomAttributes(System.Reflection.ParameterInfo,System.Type)\n  - System.Attribute.GetCustomAttributes(System.Reflection.ParameterInfo,System.Type,System.Boolean)\n  - System.Attribute.GetHashCode\n  - System.Attribute.IsDefaultAttribute\n  - System.Attribute.IsDefined(System.Reflection.Assembly,System.Type)\n  - System.Attribute.IsDefined(System.Reflection.Assembly,System.Type,System.Boolean)\n  - System.Attribute.IsDefined(System.Reflection.MemberInfo,System.Type)\n  - System.Attribute.IsDefined(System.Reflection.MemberInfo,System.Type,System.Boolean)\n  - System.Attribute.IsDefined(System.Reflection.Module,System.Type)\n  - System.Attribute.IsDefined(System.Reflection.Module,System.Type,System.Boolean)\n  - System.Attribute.IsDefined(System.Reflection.ParameterInfo,System.Type)\n  - System.Attribute.IsDefined(System.Reflection.ParameterInfo,System.Type,System.Boolean)\n  - System.Attribute.Match(System.Object)\n  - System.Attribute.System#Runtime#InteropServices#_Attribute#GetIDsOfNames(System.Guid@,System.IntPtr,System.UInt32,System.UInt32,System.IntPtr)\n  - System.Attribute.System#Runtime#InteropServices#_Attribute#GetTypeInfo(System.UInt32,System.UInt32,System.IntPtr)\n  - System.Attribute.System#Runtime#InteropServices#_Attribute#GetTypeInfoCount(System.UInt32@)\n  - System.Attribute.System#Runtime#InteropServices#_Attribute#Invoke(System.UInt32,System.Guid@,System.UInt32,System.Int16,System.IntPtr,System.IntPtr,System.IntPtr,System.IntPtr)\n  - System.Attribute.TypeId\n  - System.Object.Equals(System.Object,System.Object)\n  - System.Object.GetType\n  - System.Object.MemberwiseClone\n  - System.Object.ReferenceEquals(System.Object,System.Object)\n  - System.Object.ToString\n  - System.Security.Permissions.SecurityAttribute.Action\n  - System.Security.Permissions.SecurityAttribute.Unrestricted\n  attributes:\n  - type: System.AttributeUsageAttribute\n  version:\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - xamarinmac-3.0\n  monikers:\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - xamarinmac-3.0\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Security.Permissions/StorePermissionAttribute.xml\n  ms.technology:\n  - dotnet-standard\n  author: mairaw\n  ms.author: mairaw\n  manager: wpickett\n- uid: System.Security.Permissions.StorePermissionAttribute.#ctor(System.Security.Permissions.SecurityAction)\n  commentId: M:System.Security.Permissions.StorePermissionAttribute.#ctor(System.Security.Permissions.SecurityAction)\n  id: '#ctor(System.Security.Permissions.SecurityAction)'\n  parent: System.Security.Permissions.StorePermissionAttribute\n  langs:\n  - csharp\n  name: StorePermissionAttribute(SecurityAction)\n  nameWithType: StorePermissionAttribute.StorePermissionAttribute(SecurityAction)\n  fullName: StorePermissionAttribute.StorePermissionAttribute(SecurityAction)\n  type: Constructor\n  assemblies:\n  - System\n  - System.Security.Permissions\n  namespace: System.Security.Permissions\n  summary: Initializes a new instance of the <xref href=\"System.Security.Permissions.StorePermissionAttribute\"></xref> class with the specified security action.\n  syntax:\n    content: public StorePermissionAttribute (System.Security.Permissions.SecurityAction action);\n    parameters:\n    - id: action\n      type: System.Security.Permissions.SecurityAction\n      description: One of the <xref href=\"System.Security.Permissions.SecurityAction\"></xref> values.\n  overload: System.Security.Permissions.StorePermissionAttribute.#ctor*\n  exceptions: []\n  version:\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - xamarinmac-3.0\n  monikers:\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - xamarinmac-3.0\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Security.Permissions/StorePermissionAttribute.xml\n  ms.technology:\n  - dotnet-standard\n  author: mairaw\n  ms.author: mairaw\n  manager: wpickett\n- uid: System.Security.Permissions.StorePermissionAttribute.AddToStore\n  commentId: P:System.Security.Permissions.StorePermissionAttribute.AddToStore\n  id: AddToStore\n  parent: System.Security.Permissions.StorePermissionAttribute\n  langs:\n  - csharp\n  name: AddToStore\n  nameWithType: StorePermissionAttribute.AddToStore\n  fullName: StorePermissionAttribute.AddToStore\n  type: Property\n  assemblies:\n  - System\n  - System.Security.Permissions\n  namespace: System.Security.Permissions\n  summary: Gets or sets a value indicating whether the code is permitted to add to a store.\n  remarks: For security reasons, this ability should be granted only to highly trusted code.\n  syntax:\n    content: public bool AddToStore { get; set; }\n    return:\n      type: System.Boolean\n      description: '`true` if the ability to add to a store is allowed; otherwise, `false`.'\n  overload: System.Security.Permissions.StorePermissionAttribute.AddToStore*\n  exceptions: []\n  version:\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - xamarinmac-3.0\n  monikers:\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - xamarinmac-3.0\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Security.Permissions/StorePermissionAttribute.xml\n  ms.technology:\n  - dotnet-standard\n  author: mairaw\n  ms.author: mairaw\n  manager: wpickett\n- uid: System.Security.Permissions.StorePermissionAttribute.CreatePermission\n  commentId: M:System.Security.Permissions.StorePermissionAttribute.CreatePermission\n  id: CreatePermission\n  parent: System.Security.Permissions.StorePermissionAttribute\n  langs:\n  - csharp\n  name: CreatePermission()\n  nameWithType: StorePermissionAttribute.CreatePermission()\n  fullName: StorePermissionAttribute.CreatePermission()\n  type: Method\n  assemblies:\n  - System\n  - System.Security.Permissions\n  namespace: System.Security.Permissions\n  summary: Creates and returns a new <xref href=\"System.Security.Permissions.StorePermission\"></xref>.\n  remarks: \"This method should be called only by the security system, never by application code.  \\n  \\n At compile time, attributes convert security declarations to a serialized form in metadata. The metadata is created from the permission object that this method returns.\"\n  syntax:\n    content: public override System.Security.IPermission CreatePermission ();\n    parameters: []\n    return:\n      type: System.Security.IPermission\n      description: A <xref href=\"System.Security.Permissions.StorePermission\"></xref> that corresponds to the attribute.\n  overload: System.Security.Permissions.StorePermissionAttribute.CreatePermission*\n  exceptions: []\n  version:\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - xamarinmac-3.0\n  monikers:\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - xamarinmac-3.0\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Security.Permissions/StorePermissionAttribute.xml\n  ms.technology:\n  - dotnet-standard\n  author: mairaw\n  ms.author: mairaw\n  manager: wpickett\n- uid: System.Security.Permissions.StorePermissionAttribute.CreateStore\n  commentId: P:System.Security.Permissions.StorePermissionAttribute.CreateStore\n  id: CreateStore\n  parent: System.Security.Permissions.StorePermissionAttribute\n  langs:\n  - csharp\n  name: CreateStore\n  nameWithType: StorePermissionAttribute.CreateStore\n  fullName: StorePermissionAttribute.CreateStore\n  type: Property\n  assemblies:\n  - System\n  - System.Security.Permissions\n  namespace: System.Security.Permissions\n  summary: Gets or sets a value indicating whether the code is permitted to create a store.\n  remarks: New stores are created by calling the <xref:System.Security.Cryptography.X509Certificates.X509Store.Open%2A?displayProperty=fullName> method.\n  syntax:\n    content: public bool CreateStore { get; set; }\n    return:\n      type: System.Boolean\n      description: '`true` if the ability to create a store is allowed; otherwise, `false`.'\n  overload: System.Security.Permissions.StorePermissionAttribute.CreateStore*\n  exceptions: []\n  version:\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - xamarinmac-3.0\n  monikers:\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - xamarinmac-3.0\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Security.Permissions/StorePermissionAttribute.xml\n  ms.technology:\n  - dotnet-standard\n  author: mairaw\n  ms.author: mairaw\n  manager: wpickett\n- uid: System.Security.Permissions.StorePermissionAttribute.DeleteStore\n  commentId: P:System.Security.Permissions.StorePermissionAttribute.DeleteStore\n  id: DeleteStore\n  parent: System.Security.Permissions.StorePermissionAttribute\n  langs:\n  - csharp\n  name: DeleteStore\n  nameWithType: StorePermissionAttribute.DeleteStore\n  fullName: StorePermissionAttribute.DeleteStore\n  type: Property\n  assemblies:\n  - System\n  - System.Security.Permissions\n  namespace: System.Security.Permissions\n  summary: Gets or sets a value indicating whether the code is permitted to delete a store.\n  remarks: This functionality is not exposed by the <xref:System.Security.Cryptography.X509Certificates.X509Store> class.\n  syntax:\n    content: public bool DeleteStore { get; set; }\n    return:\n      type: System.Boolean\n      description: '`true` if the ability to delete a store is allowed; otherwise, `false`.'\n  overload: System.Security.Permissions.StorePermissionAttribute.DeleteStore*\n  exceptions: []\n  version:\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - xamarinmac-3.0\n  monikers:\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - xamarinmac-3.0\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Security.Permissions/StorePermissionAttribute.xml\n  ms.technology:\n  - dotnet-standard\n  author: mairaw\n  ms.author: mairaw\n  manager: wpickett\n- uid: System.Security.Permissions.StorePermissionAttribute.EnumerateCertificates\n  commentId: P:System.Security.Permissions.StorePermissionAttribute.EnumerateCertificates\n  id: EnumerateCertificates\n  parent: System.Security.Permissions.StorePermissionAttribute\n  langs:\n  - csharp\n  name: EnumerateCertificates\n  nameWithType: StorePermissionAttribute.EnumerateCertificates\n  fullName: StorePermissionAttribute.EnumerateCertificates\n  type: Property\n  assemblies:\n  - System\n  - System.Security.Permissions\n  namespace: System.Security.Permissions\n  summary: Gets or sets a value indicating whether the code is permitted to enumerate the certificates in a store.\n  remarks: For privacy reasons, this ability should be granted only to fully trusted code.\n  syntax:\n    content: public bool EnumerateCertificates { get; set; }\n    return:\n      type: System.Boolean\n      description: '`true` if the ability to enumerate certificates is allowed; otherwise, `false`.'\n  overload: System.Security.Permissions.StorePermissionAttribute.EnumerateCertificates*\n  exceptions: []\n  version:\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - xamarinmac-3.0\n  monikers:\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - xamarinmac-3.0\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Security.Permissions/StorePermissionAttribute.xml\n  ms.technology:\n  - dotnet-standard\n  author: mairaw\n  ms.author: mairaw\n  manager: wpickett\n- uid: System.Security.Permissions.StorePermissionAttribute.EnumerateStores\n  commentId: P:System.Security.Permissions.StorePermissionAttribute.EnumerateStores\n  id: EnumerateStores\n  parent: System.Security.Permissions.StorePermissionAttribute\n  langs:\n  - csharp\n  name: EnumerateStores\n  nameWithType: StorePermissionAttribute.EnumerateStores\n  fullName: StorePermissionAttribute.EnumerateStores\n  type: Property\n  assemblies:\n  - System\n  - System.Security.Permissions\n  namespace: System.Security.Permissions\n  summary: Gets or sets a value indicating whether the code is permitted to enumerate stores.\n  remarks: This functionality is not exposed by the <xref:System.Security.Cryptography.X509Certificates.X509Store> class.\n  syntax:\n    content: public bool EnumerateStores { get; set; }\n    return:\n      type: System.Boolean\n      description: '`true` if the ability to enumerate stores is allowed; otherwise, `false`.'\n  overload: System.Security.Permissions.StorePermissionAttribute.EnumerateStores*\n  exceptions: []\n  version:\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - xamarinmac-3.0\n  monikers:\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - xamarinmac-3.0\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Security.Permissions/StorePermissionAttribute.xml\n  ms.technology:\n  - dotnet-standard\n  author: mairaw\n  ms.author: mairaw\n  manager: wpickett\n- uid: System.Security.Permissions.StorePermissionAttribute.Flags\n  commentId: P:System.Security.Permissions.StorePermissionAttribute.Flags\n  id: Flags\n  parent: System.Security.Permissions.StorePermissionAttribute\n  langs:\n  - csharp\n  name: Flags\n  nameWithType: StorePermissionAttribute.Flags\n  fullName: StorePermissionAttribute.Flags\n  type: Property\n  assemblies:\n  - System\n  - System.Security.Permissions\n  namespace: System.Security.Permissions\n  summary: Gets or sets the store permissions.\n  remarks: \"> [!CAUTION]\\n>  Many of these flags are powerful and permit access to stores that should be granted only to highly trusted code.  \\n  \\n The most powerful of the flags are <xref:System.Security.Permissions.StorePermissionFlags.AddToStore>, <xref:System.Security.Permissions.StorePermissionFlags.CreateStore>, <xref:System.Security.Permissions.StorePermissionFlags.DeleteStore>, and <xref:System.Security.Permissions.StorePermissionFlags.AllFlags>. For specific threats posed by the use of these flags, see individual flag descriptions.\"\n  syntax:\n    content: public System.Security.Permissions.StorePermissionFlags Flags { get; set; }\n    return:\n      type: System.Security.Permissions.StorePermissionFlags\n      description: A bitwise combination of the <xref href=\"System.Security.Permissions.StorePermissionFlags\"></xref> values. The default is <xref href=\"System.Security.Permissions.StorePermissionFlags.NoFlags\"></xref>.\n  overload: System.Security.Permissions.StorePermissionAttribute.Flags*\n  exceptions: []\n  version:\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - xamarinmac-3.0\n  monikers:\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - xamarinmac-3.0\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Security.Permissions/StorePermissionAttribute.xml\n  ms.technology:\n  - dotnet-standard\n  author: mairaw\n  ms.author: mairaw\n  manager: wpickett\n- uid: System.Security.Permissions.StorePermissionAttribute.OpenStore\n  commentId: P:System.Security.Permissions.StorePermissionAttribute.OpenStore\n  id: OpenStore\n  parent: System.Security.Permissions.StorePermissionAttribute\n  langs:\n  - csharp\n  name: OpenStore\n  nameWithType: StorePermissionAttribute.OpenStore\n  fullName: StorePermissionAttribute.OpenStore\n  type: Property\n  assemblies:\n  - System\n  - System.Security.Permissions\n  namespace: System.Security.Permissions\n  summary: Gets or sets a value indicating whether the code is permitted to open a store.\n  remarks: The ability to open a store does not include the ability to enumerate certificates (which raises privacy concerns) or to add or remove certificates (which raises security concerns).\n  syntax:\n    content: public bool OpenStore { get; set; }\n    return:\n      type: System.Boolean\n      description: '`true` if the ability to open a store is allowed; otherwise, `false`.'\n  overload: System.Security.Permissions.StorePermissionAttribute.OpenStore*\n  exceptions: []\n  version:\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - xamarinmac-3.0\n  monikers:\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - xamarinmac-3.0\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Security.Permissions/StorePermissionAttribute.xml\n  ms.technology:\n  - dotnet-standard\n  author: mairaw\n  ms.author: mairaw\n  manager: wpickett\n- uid: System.Security.Permissions.StorePermissionAttribute.RemoveFromStore\n  commentId: P:System.Security.Permissions.StorePermissionAttribute.RemoveFromStore\n  id: RemoveFromStore\n  parent: System.Security.Permissions.StorePermissionAttribute\n  langs:\n  - csharp\n  name: RemoveFromStore\n  nameWithType: StorePermissionAttribute.RemoveFromStore\n  fullName: StorePermissionAttribute.RemoveFromStore\n  type: Property\n  assemblies:\n  - System\n  - System.Security.Permissions\n  namespace: System.Security.Permissions\n  summary: Gets or sets a value indicating whether the code is permitted to remove a certificate from a store.\n  remarks: This ability should be granted only to highly trusted code because removing a certificate can result in a denial of service.\n  syntax:\n    content: public bool RemoveFromStore { get; set; }\n    return:\n      type: System.Boolean\n      description: '`true` if the ability to remove a certificate from a store is allowed; otherwise, `false`.'\n  overload: System.Security.Permissions.StorePermissionAttribute.RemoveFromStore*\n  exceptions: []\n  version:\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - xamarinmac-3.0\n  monikers:\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - xamarinmac-3.0\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Security.Permissions/StorePermissionAttribute.xml\n  ms.technology:\n  - dotnet-standard\n  author: mairaw\n  ms.author: mairaw\n  manager: wpickett\nreferences:\n- uid: System.Security.Permissions.CodeAccessSecurityAttribute\n  parent: System.Security.Permissions\n  isExternal: false\n  name: CodeAccessSecurityAttribute\n  nameWithType: CodeAccessSecurityAttribute\n  fullName: System.Security.Permissions.CodeAccessSecurityAttribute\n- uid: System.Security.Permissions.StorePermissionAttribute.#ctor(System.Security.Permissions.SecurityAction)\n  parent: System.Security.Permissions.StorePermissionAttribute\n  isExternal: false\n  name: StorePermissionAttribute(SecurityAction)\n  nameWithType: StorePermissionAttribute.StorePermissionAttribute(SecurityAction)\n  fullName: StorePermissionAttribute.StorePermissionAttribute(SecurityAction)\n- uid: System.Security.Permissions.SecurityAction\n  parent: System.Security.Permissions\n  isExternal: false\n  name: SecurityAction\n  nameWithType: SecurityAction\n  fullName: System.Security.Permissions.SecurityAction\n- uid: System.Security.Permissions.StorePermissionAttribute.AddToStore\n  parent: System.Security.Permissions.StorePermissionAttribute\n  isExternal: false\n  name: AddToStore\n  nameWithType: StorePermissionAttribute.AddToStore\n  fullName: StorePermissionAttribute.AddToStore\n- uid: System.Boolean\n  parent: System\n  isExternal: false\n  name: Boolean\n  nameWithType: Boolean\n  fullName: System.Boolean\n- uid: System.Security.Permissions.StorePermissionAttribute.CreatePermission\n  parent: System.Security.Permissions.StorePermissionAttribute\n  isExternal: false\n  name: CreatePermission()\n  nameWithType: StorePermissionAttribute.CreatePermission()\n  fullName: StorePermissionAttribute.CreatePermission()\n- uid: System.Security.IPermission\n  parent: System.Security\n  isExternal: false\n  name: IPermission\n  nameWithType: IPermission\n  fullName: System.Security.IPermission\n- uid: System.Security.Permissions.StorePermissionAttribute.CreateStore\n  parent: System.Security.Permissions.StorePermissionAttribute\n  isExternal: false\n  name: CreateStore\n  nameWithType: StorePermissionAttribute.CreateStore\n  fullName: StorePermissionAttribute.CreateStore\n- uid: System.Security.Permissions.StorePermissionAttribute.DeleteStore\n  parent: System.Security.Permissions.StorePermissionAttribute\n  isExternal: false\n  name: DeleteStore\n  nameWithType: StorePermissionAttribute.DeleteStore\n  fullName: StorePermissionAttribute.DeleteStore\n- uid: System.Security.Permissions.StorePermissionAttribute.EnumerateCertificates\n  parent: System.Security.Permissions.StorePermissionAttribute\n  isExternal: false\n  name: EnumerateCertificates\n  nameWithType: StorePermissionAttribute.EnumerateCertificates\n  fullName: StorePermissionAttribute.EnumerateCertificates\n- uid: System.Security.Permissions.StorePermissionAttribute.EnumerateStores\n  parent: System.Security.Permissions.StorePermissionAttribute\n  isExternal: false\n  name: EnumerateStores\n  nameWithType: StorePermissionAttribute.EnumerateStores\n  fullName: StorePermissionAttribute.EnumerateStores\n- uid: System.Security.Permissions.StorePermissionAttribute.Flags\n  parent: System.Security.Permissions.StorePermissionAttribute\n  isExternal: false\n  name: Flags\n  nameWithType: StorePermissionAttribute.Flags\n  fullName: StorePermissionAttribute.Flags\n- uid: System.Security.Permissions.StorePermissionFlags\n  parent: System.Security.Permissions\n  isExternal: false\n  name: StorePermissionFlags\n  nameWithType: StorePermissionFlags\n  fullName: System.Security.Permissions.StorePermissionFlags\n- uid: System.Security.Permissions.StorePermissionAttribute.OpenStore\n  parent: System.Security.Permissions.StorePermissionAttribute\n  isExternal: false\n  name: OpenStore\n  nameWithType: StorePermissionAttribute.OpenStore\n  fullName: StorePermissionAttribute.OpenStore\n- uid: System.Security.Permissions.StorePermissionAttribute.RemoveFromStore\n  parent: System.Security.Permissions.StorePermissionAttribute\n  isExternal: false\n  name: RemoveFromStore\n  nameWithType: StorePermissionAttribute.RemoveFromStore\n  fullName: StorePermissionAttribute.RemoveFromStore\n- uid: System.Security.Permissions.StorePermissionAttribute.#ctor*\n  parent: System.Security.Permissions.StorePermissionAttribute\n  isExternal: false\n  name: StorePermissionAttribute\n  nameWithType: StorePermissionAttribute.StorePermissionAttribute\n  fullName: StorePermissionAttribute.StorePermissionAttribute\n  monikers:\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - xamarinmac-3.0\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Security.Permissions/StorePermissionAttribute.xml\n- uid: System.Security.Permissions.StorePermissionAttribute.AddToStore*\n  parent: System.Security.Permissions.StorePermissionAttribute\n  isExternal: false\n  name: AddToStore\n  nameWithType: StorePermissionAttribute.AddToStore\n  fullName: StorePermissionAttribute.AddToStore\n  monikers:\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - xamarinmac-3.0\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Security.Permissions/StorePermissionAttribute.xml\n- uid: System.Security.Permissions.StorePermissionAttribute.CreatePermission*\n  parent: System.Security.Permissions.StorePermissionAttribute\n  isExternal: false\n  name: CreatePermission\n  nameWithType: StorePermissionAttribute.CreatePermission\n  fullName: StorePermissionAttribute.CreatePermission\n  monikers:\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - xamarinmac-3.0\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Security.Permissions/StorePermissionAttribute.xml\n- uid: System.Security.Permissions.StorePermissionAttribute.CreateStore*\n  parent: System.Security.Permissions.StorePermissionAttribute\n  isExternal: false\n  name: CreateStore\n  nameWithType: StorePermissionAttribute.CreateStore\n  fullName: StorePermissionAttribute.CreateStore\n  monikers:\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - xamarinmac-3.0\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Security.Permissions/StorePermissionAttribute.xml\n- uid: System.Security.Permissions.StorePermissionAttribute.DeleteStore*\n  parent: System.Security.Permissions.StorePermissionAttribute\n  isExternal: false\n  name: DeleteStore\n  nameWithType: StorePermissionAttribute.DeleteStore\n  fullName: StorePermissionAttribute.DeleteStore\n  monikers:\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - xamarinmac-3.0\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Security.Permissions/StorePermissionAttribute.xml\n- uid: System.Security.Permissions.StorePermissionAttribute.EnumerateCertificates*\n  parent: System.Security.Permissions.StorePermissionAttribute\n  isExternal: false\n  name: EnumerateCertificates\n  nameWithType: StorePermissionAttribute.EnumerateCertificates\n  fullName: StorePermissionAttribute.EnumerateCertificates\n  monikers:\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - xamarinmac-3.0\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Security.Permissions/StorePermissionAttribute.xml\n- uid: System.Security.Permissions.StorePermissionAttribute.EnumerateStores*\n  parent: System.Security.Permissions.StorePermissionAttribute\n  isExternal: false\n  name: EnumerateStores\n  nameWithType: StorePermissionAttribute.EnumerateStores\n  fullName: StorePermissionAttribute.EnumerateStores\n  monikers:\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - xamarinmac-3.0\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Security.Permissions/StorePermissionAttribute.xml\n- uid: System.Security.Permissions.StorePermissionAttribute.Flags*\n  parent: System.Security.Permissions.StorePermissionAttribute\n  isExternal: false\n  name: Flags\n  nameWithType: StorePermissionAttribute.Flags\n  fullName: StorePermissionAttribute.Flags\n  monikers:\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - xamarinmac-3.0\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Security.Permissions/StorePermissionAttribute.xml\n- uid: System.Security.Permissions.StorePermissionAttribute.OpenStore*\n  parent: System.Security.Permissions.StorePermissionAttribute\n  isExternal: false\n  name: OpenStore\n  nameWithType: StorePermissionAttribute.OpenStore\n  fullName: StorePermissionAttribute.OpenStore\n  monikers:\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - xamarinmac-3.0\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Security.Permissions/StorePermissionAttribute.xml\n- uid: System.Security.Permissions.StorePermissionAttribute.RemoveFromStore*\n  parent: System.Security.Permissions.StorePermissionAttribute\n  isExternal: false\n  name: RemoveFromStore\n  nameWithType: StorePermissionAttribute.RemoveFromStore\n  fullName: StorePermissionAttribute.RemoveFromStore\n  monikers:\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - xamarinmac-3.0\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Security.Permissions/StorePermissionAttribute.xml\n- uid: System.Attribute.Equals(System.Object)\n  parent: System.Attribute\n  isExternal: false\n  name: Equals(Object)\n  nameWithType: Attribute.Equals(Object)\n  fullName: Attribute.Equals(Object)\n- uid: System.Object.Equals(System.Object,System.Object)\n  parent: System.Object\n  isExternal: false\n  name: Equals(Object, Object)\n  nameWithType: Object.Equals(Object, Object)\n  fullName: Object.Equals(Object, Object)\n- uid: System.Attribute.GetHashCode\n  parent: System.Attribute\n  isExternal: false\n  name: GetHashCode()\n  nameWithType: Attribute.GetHashCode()\n  fullName: Attribute.GetHashCode()\n- uid: System.Object.GetType\n  parent: System.Object\n  isExternal: false\n  name: GetType()\n  nameWithType: Object.GetType()\n  fullName: Object.GetType()\n- uid: System.Object.MemberwiseClone\n  parent: System.Object\n  isExternal: false\n  name: MemberwiseClone()\n  nameWithType: Object.MemberwiseClone()\n  fullName: Object.MemberwiseClone()\n- uid: System.Object.ReferenceEquals(System.Object,System.Object)\n  parent: System.Object\n  isExternal: false\n  name: ReferenceEquals(Object, Object)\n  nameWithType: Object.ReferenceEquals(Object, Object)\n  fullName: Object.ReferenceEquals(Object, Object)\n- uid: System.Object.ToString\n  parent: System.Object\n  isExternal: false\n  name: ToString()\n  nameWithType: Object.ToString()\n  fullName: Object.ToString()\n- uid: System.Attribute.GetCustomAttribute(System.Reflection.ParameterInfo,System.Type,System.Boolean)\n  parent: System.Attribute\n  isExternal: false\n  name: GetCustomAttribute(ParameterInfo, Type, Boolean)\n  nameWithType: Attribute.GetCustomAttribute(ParameterInfo, Type, Boolean)\n  fullName: Attribute.GetCustomAttribute(ParameterInfo, Type, Boolean)\n- uid: System.Attribute.GetCustomAttribute(System.Reflection.MemberInfo,System.Type,System.Boolean)\n  parent: System.Attribute\n  isExternal: false\n  name: GetCustomAttribute(MemberInfo, Type, Boolean)\n  nameWithType: Attribute.GetCustomAttribute(MemberInfo, Type, Boolean)\n  fullName: Attribute.GetCustomAttribute(MemberInfo, Type, Boolean)\n- uid: System.Attribute.GetCustomAttribute(System.Reflection.Assembly,System.Type,System.Boolean)\n  parent: System.Attribute\n  isExternal: false\n  name: GetCustomAttribute(Assembly, Type, Boolean)\n  nameWithType: Attribute.GetCustomAttribute(Assembly, Type, Boolean)\n  fullName: Attribute.GetCustomAttribute(Assembly, Type, Boolean)\n- uid: System.Attribute.GetCustomAttribute(System.Reflection.Module,System.Type,System.Boolean)\n  parent: System.Attribute\n  isExternal: false\n  name: GetCustomAttribute(Module, Type, Boolean)\n  nameWithType: Attribute.GetCustomAttribute(Module, Type, Boolean)\n  fullName: Attribute.GetCustomAttribute(Module, Type, Boolean)\n- uid: System.Attribute.GetCustomAttribute(System.Reflection.Module,System.Type)\n  parent: System.Attribute\n  isExternal: false\n  name: GetCustomAttribute(Module, Type)\n  nameWithType: Attribute.GetCustomAttribute(Module, Type)\n  fullName: Attribute.GetCustomAttribute(Module, Type)\n- uid: System.Attribute.GetCustomAttribute(System.Reflection.MemberInfo,System.Type)\n  parent: System.Attribute\n  isExternal: false\n  name: GetCustomAttribute(MemberInfo, Type)\n  nameWithType: Attribute.GetCustomAttribute(MemberInfo, Type)\n  fullName: Attribute.GetCustomAttribute(MemberInfo, Type)\n- uid: System.Attribute.GetCustomAttribute(System.Reflection.Assembly,System.Type)\n  parent: System.Attribute\n  isExternal: false\n  name: GetCustomAttribute(Assembly, Type)\n  nameWithType: Attribute.GetCustomAttribute(Assembly, Type)\n  fullName: Attribute.GetCustomAttribute(Assembly, Type)\n- uid: System.Attribute.GetCustomAttribute(System.Reflection.ParameterInfo,System.Type)\n  parent: System.Attribute\n  isExternal: false\n  name: GetCustomAttribute(ParameterInfo, Type)\n  nameWithType: Attribute.GetCustomAttribute(ParameterInfo, Type)\n  fullName: Attribute.GetCustomAttribute(ParameterInfo, Type)\n- uid: System.Attribute.GetCustomAttributes(System.Reflection.Module,System.Type)\n  parent: System.Attribute\n  isExternal: false\n  name: GetCustomAttributes(Module, Type)\n  nameWithType: Attribute.GetCustomAttributes(Module, Type)\n  fullName: Attribute.GetCustomAttributes(Module, Type)\n- uid: System.Attribute.GetCustomAttributes(System.Reflection.ParameterInfo,System.Type,System.Boolean)\n  parent: System.Attribute\n  isExternal: false\n  name: GetCustomAttributes(ParameterInfo, Type, Boolean)\n  nameWithType: Attribute.GetCustomAttributes(ParameterInfo, Type, Boolean)\n  fullName: Attribute.GetCustomAttributes(ParameterInfo, Type, Boolean)\n- uid: System.Attribute.GetCustomAttributes(System.Reflection.Module,System.Type,System.Boolean)\n  parent: System.Attribute\n  isExternal: false\n  name: GetCustomAttributes(Module, Type, Boolean)\n  nameWithType: Attribute.GetCustomAttributes(Module, Type, Boolean)\n  fullName: Attribute.GetCustomAttributes(Module, Type, Boolean)\n- uid: System.Attribute.GetCustomAttributes(System.Reflection.MemberInfo,System.Type,System.Boolean)\n  parent: System.Attribute\n  isExternal: false\n  name: GetCustomAttributes(MemberInfo, Type, Boolean)\n  nameWithType: Attribute.GetCustomAttributes(MemberInfo, Type, Boolean)\n  fullName: Attribute.GetCustomAttributes(MemberInfo, Type, Boolean)\n- uid: System.Attribute.GetCustomAttributes(System.Reflection.Assembly,System.Type,System.Boolean)\n  parent: System.Attribute\n  isExternal: false\n  name: GetCustomAttributes(Assembly, Type, Boolean)\n  nameWithType: Attribute.GetCustomAttributes(Assembly, Type, Boolean)\n  fullName: Attribute.GetCustomAttributes(Assembly, Type, Boolean)\n- uid: System.Attribute.GetCustomAttributes(System.Reflection.ParameterInfo,System.Type)\n  parent: System.Attribute\n  isExternal: false\n  name: GetCustomAttributes(ParameterInfo, Type)\n  nameWithType: Attribute.GetCustomAttributes(ParameterInfo, Type)\n  fullName: Attribute.GetCustomAttributes(ParameterInfo, Type)\n- uid: System.Attribute.GetCustomAttributes(System.Reflection.Module,System.Boolean)\n  parent: System.Attribute\n  isExternal: false\n  name: GetCustomAttributes(Module, Boolean)\n  nameWithType: Attribute.GetCustomAttributes(Module, Boolean)\n  fullName: Attribute.GetCustomAttributes(Module, Boolean)\n- uid: System.Attribute.GetCustomAttributes(System.Reflection.ParameterInfo,System.Boolean)\n  parent: System.Attribute\n  isExternal: false\n  name: GetCustomAttributes(ParameterInfo, Boolean)\n  nameWithType: Attribute.GetCustomAttributes(ParameterInfo, Boolean)\n  fullName: Attribute.GetCustomAttributes(ParameterInfo, Boolean)\n- uid: System.Attribute.GetCustomAttributes(System.Reflection.MemberInfo,System.Boolean)\n  parent: System.Attribute\n  isExternal: false\n  name: GetCustomAttributes(MemberInfo, Boolean)\n  nameWithType: Attribute.GetCustomAttributes(MemberInfo, Boolean)\n  fullName: Attribute.GetCustomAttributes(MemberInfo, Boolean)\n- uid: System.Attribute.GetCustomAttributes(System.Reflection.Assembly,System.Type)\n  parent: System.Attribute\n  isExternal: false\n  name: GetCustomAttributes(Assembly, Type)\n  nameWithType: Attribute.GetCustomAttributes(Assembly, Type)\n  fullName: Attribute.GetCustomAttributes(Assembly, Type)\n- uid: System.Attribute.GetCustomAttributes(System.Reflection.Assembly,System.Boolean)\n  parent: System.Attribute\n  isExternal: false\n  name: GetCustomAttributes(Assembly, Boolean)\n  nameWithType: Attribute.GetCustomAttributes(Assembly, Boolean)\n  fullName: Attribute.GetCustomAttributes(Assembly, Boolean)\n- uid: System.Attribute.GetCustomAttributes(System.Reflection.ParameterInfo)\n  parent: System.Attribute\n  isExternal: false\n  name: GetCustomAttributes(ParameterInfo)\n  nameWithType: Attribute.GetCustomAttributes(ParameterInfo)\n  fullName: Attribute.GetCustomAttributes(ParameterInfo)\n- uid: System.Attribute.GetCustomAttributes(System.Reflection.Module)\n  parent: System.Attribute\n  isExternal: false\n  name: GetCustomAttributes(Module)\n  nameWithType: Attribute.GetCustomAttributes(Module)\n  fullName: Attribute.GetCustomAttributes(Module)\n- uid: System.Attribute.GetCustomAttributes(System.Reflection.MemberInfo)\n  parent: System.Attribute\n  isExternal: false\n  name: GetCustomAttributes(MemberInfo)\n  nameWithType: Attribute.GetCustomAttributes(MemberInfo)\n  fullName: Attribute.GetCustomAttributes(MemberInfo)\n- uid: System.Attribute.GetCustomAttributes(System.Reflection.Assembly)\n  parent: System.Attribute\n  isExternal: false\n  name: GetCustomAttributes(Assembly)\n  nameWithType: Attribute.GetCustomAttributes(Assembly)\n  fullName: Attribute.GetCustomAttributes(Assembly)\n- uid: System.Attribute.GetCustomAttributes(System.Reflection.MemberInfo,System.Type)\n  parent: System.Attribute\n  isExternal: false\n  name: GetCustomAttributes(MemberInfo, Type)\n  nameWithType: Attribute.GetCustomAttributes(MemberInfo, Type)\n  fullName: Attribute.GetCustomAttributes(MemberInfo, Type)\n- uid: System.Attribute.IsDefaultAttribute\n  parent: System.Attribute\n  isExternal: false\n  name: IsDefaultAttribute()\n  nameWithType: Attribute.IsDefaultAttribute()\n  fullName: Attribute.IsDefaultAttribute()\n- uid: System.Attribute.IsDefined(System.Reflection.ParameterInfo,System.Type,System.Boolean)\n  parent: System.Attribute\n  isExternal: false\n  name: IsDefined(ParameterInfo, Type, Boolean)\n  nameWithType: Attribute.IsDefined(ParameterInfo, Type, Boolean)\n  fullName: Attribute.IsDefined(ParameterInfo, Type, Boolean)\n- uid: System.Attribute.IsDefined(System.Reflection.Module,System.Type,System.Boolean)\n  parent: System.Attribute\n  isExternal: false\n  name: IsDefined(Module, Type, Boolean)\n  nameWithType: Attribute.IsDefined(Module, Type, Boolean)\n  fullName: Attribute.IsDefined(Module, Type, Boolean)\n- uid: System.Attribute.IsDefined(System.Reflection.MemberInfo,System.Type,System.Boolean)\n  parent: System.Attribute\n  isExternal: false\n  name: IsDefined(MemberInfo, Type, Boolean)\n  nameWithType: Attribute.IsDefined(MemberInfo, Type, Boolean)\n  fullName: Attribute.IsDefined(MemberInfo, Type, Boolean)\n- uid: System.Attribute.IsDefined(System.Reflection.Assembly,System.Type,System.Boolean)\n  parent: System.Attribute\n  isExternal: false\n  name: IsDefined(Assembly, Type, Boolean)\n  nameWithType: Attribute.IsDefined(Assembly, Type, Boolean)\n  fullName: Attribute.IsDefined(Assembly, Type, Boolean)\n- uid: System.Attribute.IsDefined(System.Reflection.MemberInfo,System.Type)\n  parent: System.Attribute\n  isExternal: false\n  name: IsDefined(MemberInfo, Type)\n  nameWithType: Attribute.IsDefined(MemberInfo, Type)\n  fullName: Attribute.IsDefined(MemberInfo, Type)\n- uid: System.Attribute.IsDefined(System.Reflection.Module,System.Type)\n  parent: System.Attribute\n  isExternal: false\n  name: IsDefined(Module, Type)\n  nameWithType: Attribute.IsDefined(Module, Type)\n  fullName: Attribute.IsDefined(Module, Type)\n- uid: System.Attribute.IsDefined(System.Reflection.Assembly,System.Type)\n  parent: System.Attribute\n  isExternal: false\n  name: IsDefined(Assembly, Type)\n  nameWithType: Attribute.IsDefined(Assembly, Type)\n  fullName: Attribute.IsDefined(Assembly, Type)\n- uid: System.Attribute.IsDefined(System.Reflection.ParameterInfo,System.Type)\n  parent: System.Attribute\n  isExternal: false\n  name: IsDefined(ParameterInfo, Type)\n  nameWithType: Attribute.IsDefined(ParameterInfo, Type)\n  fullName: Attribute.IsDefined(ParameterInfo, Type)\n- uid: System.Attribute.Match(System.Object)\n  parent: System.Attribute\n  isExternal: false\n  name: Match(Object)\n  nameWithType: Attribute.Match(Object)\n  fullName: Attribute.Match(Object)\n- uid: System.Attribute.TypeId\n  parent: System.Attribute\n  isExternal: false\n  name: TypeId\n  nameWithType: Attribute.TypeId\n  fullName: Attribute.TypeId\n- uid: System.Attribute.System#Runtime#InteropServices#_Attribute#GetIDsOfNames(System.Guid@,System.IntPtr,System.UInt32,System.UInt32,System.IntPtr)\n  parent: System.Attribute\n  isExternal: false\n  name: _Attribute.GetIDsOfNames(Guid, IntPtr, UInt32, UInt32, IntPtr)\n  nameWithType: Attribute._Attribute.GetIDsOfNames(Guid, IntPtr, UInt32, UInt32, IntPtr)\n  fullName: Attribute._Attribute.GetIDsOfNames(Guid, IntPtr, UInt32, UInt32, IntPtr)\n- uid: System.Attribute.System#Runtime#InteropServices#_Attribute#GetTypeInfo(System.UInt32,System.UInt32,System.IntPtr)\n  parent: System.Attribute\n  isExternal: false\n  name: _Attribute.GetTypeInfo(UInt32, UInt32, IntPtr)\n  nameWithType: Attribute._Attribute.GetTypeInfo(UInt32, UInt32, IntPtr)\n  fullName: Attribute._Attribute.GetTypeInfo(UInt32, UInt32, IntPtr)\n- uid: System.Attribute.System#Runtime#InteropServices#_Attribute#GetTypeInfoCount(System.UInt32@)\n  parent: System.Attribute\n  isExternal: false\n  name: _Attribute.GetTypeInfoCount(UInt32)\n  nameWithType: Attribute._Attribute.GetTypeInfoCount(UInt32)\n  fullName: Attribute._Attribute.GetTypeInfoCount(UInt32)\n- uid: System.Attribute.System#Runtime#InteropServices#_Attribute#Invoke(System.UInt32,System.Guid@,System.UInt32,System.Int16,System.IntPtr,System.IntPtr,System.IntPtr,System.IntPtr)\n  parent: System.Attribute\n  isExternal: false\n  name: _Attribute.Invoke(UInt32, Guid, UInt32, Int16, IntPtr, IntPtr, IntPtr, IntPtr)\n  nameWithType: Attribute._Attribute.Invoke(UInt32, Guid, UInt32, Int16, IntPtr, IntPtr, IntPtr, IntPtr)\n  fullName: Attribute._Attribute.Invoke(UInt32, Guid, UInt32, Int16, IntPtr, IntPtr, IntPtr, IntPtr)\n- uid: System.Security.Permissions.SecurityAttribute.Action\n  parent: System.Security.Permissions.SecurityAttribute\n  isExternal: false\n  name: Action\n  nameWithType: SecurityAttribute.Action\n  fullName: SecurityAttribute.Action\n- uid: System.Security.Permissions.SecurityAttribute.Unrestricted\n  parent: System.Security.Permissions.SecurityAttribute\n  isExternal: false\n  name: Unrestricted\n  nameWithType: SecurityAttribute.Unrestricted\n  fullName: SecurityAttribute.Unrestricted\n"}