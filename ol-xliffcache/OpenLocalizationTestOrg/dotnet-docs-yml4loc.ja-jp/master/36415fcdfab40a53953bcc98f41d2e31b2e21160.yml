### YamlMime:ManagedReference
items:
- uid: System.Workflow.Runtime.Hosting.DefaultWorkflowSchedulerService
  commentId: T:System.Workflow.Runtime.Hosting.DefaultWorkflowSchedulerService
  id: DefaultWorkflowSchedulerService
  children:
  - System.Workflow.Runtime.Hosting.DefaultWorkflowSchedulerService.#ctor
  - System.Workflow.Runtime.Hosting.DefaultWorkflowSchedulerService.#ctor(System.Collections.Specialized.NameValueCollection)
  - System.Workflow.Runtime.Hosting.DefaultWorkflowSchedulerService.#ctor(System.Int32)
  - System.Workflow.Runtime.Hosting.DefaultWorkflowSchedulerService.Cancel(System.Guid)
  - System.Workflow.Runtime.Hosting.DefaultWorkflowSchedulerService.MaxSimultaneousWorkflows
  - System.Workflow.Runtime.Hosting.DefaultWorkflowSchedulerService.OnStarted
  - System.Workflow.Runtime.Hosting.DefaultWorkflowSchedulerService.Schedule(System.Threading.WaitCallback,System.Guid)
  - System.Workflow.Runtime.Hosting.DefaultWorkflowSchedulerService.Schedule(System.Threading.WaitCallback,System.Guid,System.DateTime,System.Guid)
  - System.Workflow.Runtime.Hosting.DefaultWorkflowSchedulerService.Stop
  langs:
  - csharp
  name: DefaultWorkflowSchedulerService
  nameWithType: DefaultWorkflowSchedulerService
  fullName: System.Workflow.Runtime.Hosting.DefaultWorkflowSchedulerService
  type: Class
  assemblies:
  - System.Workflow.Runtime
  namespace: System.Workflow.Runtime.Hosting
  summary: Creates and manages the threads that run workflow instances on the workflow runtime engine.
  remarks: "> [!NOTE]\n>  [!INCLUDE[DeprecatedContent](~/includes/deprecatedcontent-md.md)]  \n  \n <xref:System.Workflow.Runtime.Hosting.DefaultWorkflowSchedulerService> is used by the workflow runtime engine by default. It includes default support for having multiple workflow instances queued in the runtime thread pool. If you want to control the thread that is responsible for executing the workflow, use <xref:System.Workflow.Runtime.Hosting.ManualWorkflowSchedulerService>."
  syntax:
    content: >-
      [System.Obsolete("The System.Workflow.* types are deprecated.  Instead, please use the new types from System.Activities.*")]

      public class DefaultWorkflowSchedulerService : System.Workflow.Runtime.Hosting.WorkflowSchedulerService
  inheritance:
  - System.Object
  - System.Workflow.Runtime.Hosting.WorkflowRuntimeService
  - System.Workflow.Runtime.Hosting.WorkflowSchedulerService
  implements: []
  inheritedMembers:
  - System.Object.Equals(System.Object)
  - System.Object.Equals(System.Object,System.Object)
  - System.Object.GetHashCode
  - System.Object.GetType
  - System.Object.MemberwiseClone
  - System.Object.ReferenceEquals(System.Object,System.Object)
  - System.Object.ToString
  - System.Workflow.Runtime.Hosting.WorkflowRuntimeService.OnStopped
  - System.Workflow.Runtime.Hosting.WorkflowRuntimeService.RaiseServicesExceptionNotHandledEvent(System.Exception,System.Guid)
  - System.Workflow.Runtime.Hosting.WorkflowRuntimeService.Runtime
  - System.Workflow.Runtime.Hosting.WorkflowRuntimeService.Start
  - System.Workflow.Runtime.Hosting.WorkflowRuntimeService.State
  attributes:
  - type: System.ObsoleteAttribute
  version:
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  monikers:
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Workflow.Runtime.Hosting/DefaultWorkflowSchedulerService.xml
  author: Erikre
  ms.author: erikre
  manager: erikre
- uid: System.Workflow.Runtime.Hosting.DefaultWorkflowSchedulerService.#ctor
  commentId: M:System.Workflow.Runtime.Hosting.DefaultWorkflowSchedulerService.#ctor
  id: '#ctor'
  parent: System.Workflow.Runtime.Hosting.DefaultWorkflowSchedulerService
  langs:
  - csharp
  name: DefaultWorkflowSchedulerService()
  nameWithType: DefaultWorkflowSchedulerService.DefaultWorkflowSchedulerService()
  fullName: DefaultWorkflowSchedulerService.DefaultWorkflowSchedulerService()
  type: Constructor
  assemblies:
  - System.Workflow.Runtime
  namespace: System.Workflow.Runtime.Hosting
  summary: Initializes a new instance of the <xref href="System.Workflow.Runtime.Hosting.DefaultWorkflowSchedulerService"></xref> class.
  syntax:
    content: public DefaultWorkflowSchedulerService ();
    parameters: []
  overload: System.Workflow.Runtime.Hosting.DefaultWorkflowSchedulerService.#ctor*
  exceptions: []
  version:
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  monikers:
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Workflow.Runtime.Hosting/DefaultWorkflowSchedulerService.xml
  author: Erikre
  ms.author: erikre
  manager: erikre
- uid: System.Workflow.Runtime.Hosting.DefaultWorkflowSchedulerService.#ctor(System.Collections.Specialized.NameValueCollection)
  commentId: M:System.Workflow.Runtime.Hosting.DefaultWorkflowSchedulerService.#ctor(System.Collections.Specialized.NameValueCollection)
  id: '#ctor(System.Collections.Specialized.NameValueCollection)'
  parent: System.Workflow.Runtime.Hosting.DefaultWorkflowSchedulerService
  langs:
  - csharp
  name: DefaultWorkflowSchedulerService(NameValueCollection)
  nameWithType: DefaultWorkflowSchedulerService.DefaultWorkflowSchedulerService(NameValueCollection)
  fullName: DefaultWorkflowSchedulerService.DefaultWorkflowSchedulerService(NameValueCollection)
  type: Constructor
  assemblies:
  - System.Workflow.Runtime
  namespace: System.Workflow.Runtime.Hosting
  summary: Initializes a new instance of the <xref href="System.Workflow.Runtime.Hosting.DefaultWorkflowSchedulerService"></xref> class.
  remarks: "This constructor is invoked when the workflow runtime engine loads services from an application configuration file. The only valid parameter is `maxSimultaneousWorkflows`, which can specify the number of workflows that can be run at the same time.  \n  \n Setting `maxSimultaneousWorkflows` to a high value might cause the .NET thread pool to starve. This could cause time-outs when a persistence service tries to complete a persistence transaction because <xref:System.Transactions.Transaction> objects also use the .NET thread pool.  \n  \n If not specified in a constructor or configuration file, the default value for `maxSimultaneousWorkflows` is 5 for a single-processor machine, and (int)(5 * Environment.ProcessorCount * .8) for a multiple-processor machine. Note that (int)(5 * Environment.ProcessorCount * .8) is not always the same as (int)(4 * Environment.ProcessorCount), because of the rules of integer arithmetic."
  syntax:
    content: public DefaultWorkflowSchedulerService (System.Collections.Specialized.NameValueCollection parameters);
    parameters:
    - id: parameters
      type: System.Collections.Specialized.NameValueCollection
      description: A <xref href="System.Collections.Specialized.NameValueCollection"></xref> that holds initialization information.
  overload: System.Workflow.Runtime.Hosting.DefaultWorkflowSchedulerService.#ctor*
  exceptions:
  - type: System.ArgumentNullException
    commentId: T:System.ArgumentNullException
    description: <code>parameters</code> contains a null reference (`Nothing` in Visual Basic).
  - type: System.ArgumentException
    commentId: T:System.ArgumentException
    description: "One of the key values in the <code>parameters</code> collection contains a null reference (`Nothing`).  \n  \n --or--  \n  \n One of the key values in the <code>parameters</code> collection does not match the default key for <xref href=\"System.Workflow.Runtime.Hosting.DefaultWorkflowSchedulerService\"></xref>."
  - type: System.FormatException
    commentId: T:System.FormatException
    description: One of the parameters cannot be converted to a double-precision floating point number that matches <xref href="System.Workflow.Runtime.Hosting.DefaultWorkflowSchedulerService.MaxSimultaneousWorkflows"></xref>.
  - type: System.ArgumentOutOfRangeException
    commentId: T:System.ArgumentOutOfRangeException
    description: <xref href="System.Workflow.Runtime.Hosting.DefaultWorkflowSchedulerService.MaxSimultaneousWorkflows"></xref> is less than 1.
  version:
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  monikers:
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Workflow.Runtime.Hosting/DefaultWorkflowSchedulerService.xml
  author: Erikre
  ms.author: erikre
  manager: erikre
- uid: System.Workflow.Runtime.Hosting.DefaultWorkflowSchedulerService.#ctor(System.Int32)
  commentId: M:System.Workflow.Runtime.Hosting.DefaultWorkflowSchedulerService.#ctor(System.Int32)
  id: '#ctor(System.Int32)'
  parent: System.Workflow.Runtime.Hosting.DefaultWorkflowSchedulerService
  langs:
  - csharp
  name: DefaultWorkflowSchedulerService(Int32)
  nameWithType: DefaultWorkflowSchedulerService.DefaultWorkflowSchedulerService(Int32)
  fullName: DefaultWorkflowSchedulerService.DefaultWorkflowSchedulerService(Int32)
  type: Constructor
  assemblies:
  - System.Workflow.Runtime
  namespace: System.Workflow.Runtime.Hosting
  summary: Initializes a new instance of the <xref href="System.Workflow.Runtime.Hosting.DefaultWorkflowSchedulerService"></xref> class by using the specified maximum number of workflow instances that the service can run simultaneously.
  remarks: "Setting `maxSimultaneousWorkflows` to a high value might cause the .NET thread pool to starve. This could cause time-outs when a persistence service tries to complete a persistence transaction because <xref:System.Transactions.Transaction> objects also use the .NET thread pool.  \n  \n If not specified in a constructor or configuration file, the default value for `maxSimultaneousWorkflows` is 5 for a single-processor machine, and (int)(5 * Environment.ProcessorCount * .8) for a multiple-processor machine. Note that (int)(5 * Environment.ProcessorCount * .8) is not always the same as (int)(4 * Environment.ProcessorCount), because of the rules of integer arithmetic."
  syntax:
    content: public DefaultWorkflowSchedulerService (int maxSimultaneousWorkflows);
    parameters:
    - id: maxSimultaneousWorkflows
      type: System.Int32
      description: An integer that determines the maximum number of workflow instances that can be stored in the thread pool queue.
  overload: System.Workflow.Runtime.Hosting.DefaultWorkflowSchedulerService.#ctor*
  exceptions:
  - type: System.ArgumentOutOfRangeException
    commentId: T:System.ArgumentOutOfRangeException
    description: <code>maxSimultaneousWorkflows</code> is less than 1.
  version:
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  monikers:
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Workflow.Runtime.Hosting/DefaultWorkflowSchedulerService.xml
  author: Erikre
  ms.author: erikre
  manager: erikre
- uid: System.Workflow.Runtime.Hosting.DefaultWorkflowSchedulerService.Cancel(System.Guid)
  commentId: M:System.Workflow.Runtime.Hosting.DefaultWorkflowSchedulerService.Cancel(System.Guid)
  id: Cancel(System.Guid)
  parent: System.Workflow.Runtime.Hosting.DefaultWorkflowSchedulerService
  langs:
  - csharp
  name: Cancel(Guid)
  nameWithType: DefaultWorkflowSchedulerService.Cancel(Guid)
  fullName: DefaultWorkflowSchedulerService.Cancel(Guid)
  type: Method
  assemblies:
  - System.Workflow.Runtime
  namespace: System.Workflow.Runtime.Hosting
  summary: Cancels the specified existing workflow instance work item.
  syntax:
    content: protected override void Cancel (Guid timerId);
    parameters:
    - id: timerId
      type: System.Guid
      description: The <xref href="System.Guid"></xref> associated with the existing scheduled work item to cancel.
  overload: System.Workflow.Runtime.Hosting.DefaultWorkflowSchedulerService.Cancel*
  exceptions:
  - type: System.ArgumentException
    commentId: T:System.ArgumentException
    description: <code>timerId</code> is an empty GUID.
  version:
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  monikers:
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Workflow.Runtime.Hosting/DefaultWorkflowSchedulerService.xml
  author: Erikre
  ms.author: erikre
  manager: erikre
- uid: System.Workflow.Runtime.Hosting.DefaultWorkflowSchedulerService.MaxSimultaneousWorkflows
  commentId: P:System.Workflow.Runtime.Hosting.DefaultWorkflowSchedulerService.MaxSimultaneousWorkflows
  id: MaxSimultaneousWorkflows
  parent: System.Workflow.Runtime.Hosting.DefaultWorkflowSchedulerService
  langs:
  - csharp
  name: MaxSimultaneousWorkflows
  nameWithType: DefaultWorkflowSchedulerService.MaxSimultaneousWorkflows
  fullName: DefaultWorkflowSchedulerService.MaxSimultaneousWorkflows
  type: Property
  assemblies:
  - System.Workflow.Runtime
  namespace: System.Workflow.Runtime.Hosting
  summary: Gets the maximum number of workflow instances that can be stored in the thread pool queue.
  remarks: The default value for this method is 5 for a single-processor machine, and (int)(5 * Environment.ProcessorCount * .8) for a multiple-processor machine. Note that (int)(5 * Environment.ProcessorCount * .8) is not always the same as (int)(4 * Environment.ProcessorCount), because of the rules of integer arithmetic.
  syntax:
    content: public int MaxSimultaneousWorkflows { get; }
    return:
      type: System.Int32
      description: An integer that represents the maximum number of workflow instances that can be stored in the thread pool queue.
  overload: System.Workflow.Runtime.Hosting.DefaultWorkflowSchedulerService.MaxSimultaneousWorkflows*
  exceptions: []
  version:
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  monikers:
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Workflow.Runtime.Hosting/DefaultWorkflowSchedulerService.xml
  author: Erikre
  ms.author: erikre
  manager: erikre
- uid: System.Workflow.Runtime.Hosting.DefaultWorkflowSchedulerService.OnStarted
  commentId: M:System.Workflow.Runtime.Hosting.DefaultWorkflowSchedulerService.OnStarted
  id: OnStarted
  parent: System.Workflow.Runtime.Hosting.DefaultWorkflowSchedulerService
  langs:
  - csharp
  name: OnStarted()
  nameWithType: DefaultWorkflowSchedulerService.OnStarted()
  fullName: DefaultWorkflowSchedulerService.OnStarted()
  type: Method
  assemblies:
  - System.Workflow.Runtime
  namespace: System.Workflow.Runtime.Hosting
  summary: Notifies the <xref href="System.Workflow.Runtime.Hosting.DefaultWorkflowSchedulerService"></xref> that a workflow instance has started to run.
  remarks: <xref:System.Workflow.Runtime.Hosting.DefaultWorkflowSchedulerService.OnStarted%2A> creates a thread for the first work item in the list of items waiting to be included in the workflow instance thread pool.
  syntax:
    content: protected override void OnStarted ();
    parameters: []
  overload: System.Workflow.Runtime.Hosting.DefaultWorkflowSchedulerService.OnStarted*
  exceptions: []
  version:
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  monikers:
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Workflow.Runtime.Hosting/DefaultWorkflowSchedulerService.xml
  author: Erikre
  ms.author: erikre
  manager: erikre
- uid: System.Workflow.Runtime.Hosting.DefaultWorkflowSchedulerService.Schedule(System.Threading.WaitCallback,System.Guid)
  commentId: M:System.Workflow.Runtime.Hosting.DefaultWorkflowSchedulerService.Schedule(System.Threading.WaitCallback,System.Guid)
  id: Schedule(System.Threading.WaitCallback,System.Guid)
  parent: System.Workflow.Runtime.Hosting.DefaultWorkflowSchedulerService
  langs:
  - csharp
  name: Schedule(WaitCallback, Guid)
  nameWithType: DefaultWorkflowSchedulerService.Schedule(WaitCallback, Guid)
  fullName: DefaultWorkflowSchedulerService.Schedule(WaitCallback, Guid)
  type: Method
  assemblies:
  - System.Workflow.Runtime
  namespace: System.Workflow.Runtime.Hosting
  summary: Adds a workflow instance to the pending work items queue using the specified workflow instance using the specified multicast delegate.
  remarks: Use the <xref:System.Threading.WaitCallback> constructor to create your delegate method to run in the new thread.
  syntax:
    content: protected override void Schedule (System.Threading.WaitCallback callback, Guid workflowInstanceId);
    parameters:
    - id: callback
      type: System.Threading.WaitCallback
      description: A <xref href="System.Threading.WaitCallback"></xref> multicast delegate that represents the method to run.
    - id: workflowInstanceId
      type: System.Guid
      description: A <xref href="System.Guid"></xref> that represents the workflow instance.
  overload: System.Workflow.Runtime.Hosting.DefaultWorkflowSchedulerService.Schedule*
  exceptions:
  - type: System.ArgumentNullException
    commentId: T:System.ArgumentNullException
    description: <code>callback</code> contains a null reference (`Nothing` in Visual Basic).
  version:
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  monikers:
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Workflow.Runtime.Hosting/DefaultWorkflowSchedulerService.xml
  author: Erikre
  ms.author: erikre
  manager: erikre
- uid: System.Workflow.Runtime.Hosting.DefaultWorkflowSchedulerService.Schedule(System.Threading.WaitCallback,System.Guid,System.DateTime,System.Guid)
  commentId: M:System.Workflow.Runtime.Hosting.DefaultWorkflowSchedulerService.Schedule(System.Threading.WaitCallback,System.Guid,System.DateTime,System.Guid)
  id: Schedule(System.Threading.WaitCallback,System.Guid,System.DateTime,System.Guid)
  parent: System.Workflow.Runtime.Hosting.DefaultWorkflowSchedulerService
  langs:
  - csharp
  name: Schedule(WaitCallback, Guid, DateTime, Guid)
  nameWithType: DefaultWorkflowSchedulerService.Schedule(WaitCallback, Guid, DateTime, Guid)
  fullName: DefaultWorkflowSchedulerService.Schedule(WaitCallback, Guid, DateTime, Guid)
  type: Method
  assemblies:
  - System.Workflow.Runtime
  namespace: System.Workflow.Runtime.Hosting
  summary: Adds the specified workflow instance to the pending work item queue using the specified multicast delegate, <xref href="System.DateTime"></xref> and GUIDs.
  remarks: Use the <xref:System.Threading.WaitCallback> constructor to create your delegate method to run in the new thread.
  syntax:
    content: protected override void Schedule (System.Threading.WaitCallback callback, Guid workflowInstanceId, DateTime whenUtc, Guid timerId);
    parameters:
    - id: callback
      type: System.Threading.WaitCallback
      description: A <xref href="System.Threading.WaitCallback"></xref> multicast delegate that represents the method to run.
    - id: workflowInstanceId
      type: System.Guid
      description: A <xref href="System.Guid"></xref> that represents the workflow instance.
    - id: whenUtc
      type: System.DateTime
      description: The <xref href="System.DateTime"></xref> that indicates the time to begin running the thread.
    - id: timerId
      type: System.Guid
      description: A <xref href="System.Guid"></xref> that represents the scheduled thread.
  overload: System.Workflow.Runtime.Hosting.DefaultWorkflowSchedulerService.Schedule*
  exceptions:
  - type: System.ArgumentNullException
    commentId: T:System.ArgumentNullException
    description: <code>callback</code> contains a null reference (`Nothing` in Visual Basic).
  - type: System.ArgumentException
    commentId: T:System.ArgumentException
    description: <code>workflowInstanceId</code> or <code>timerId</code> is an empty GUID.
  version:
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  monikers:
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Workflow.Runtime.Hosting/DefaultWorkflowSchedulerService.xml
  author: Erikre
  ms.author: erikre
  manager: erikre
- uid: System.Workflow.Runtime.Hosting.DefaultWorkflowSchedulerService.Stop
  commentId: M:System.Workflow.Runtime.Hosting.DefaultWorkflowSchedulerService.Stop
  id: Stop
  parent: System.Workflow.Runtime.Hosting.DefaultWorkflowSchedulerService
  langs:
  - csharp
  name: Stop()
  nameWithType: DefaultWorkflowSchedulerService.Stop()
  fullName: DefaultWorkflowSchedulerService.Stop()
  type: Method
  assemblies:
  - System.Workflow.Runtime
  namespace: System.Workflow.Runtime.Hosting
  summary: Stops the currently running thread on the workflow instance and any timers that are running.
  syntax:
    content: protected override void Stop ();
    parameters: []
  overload: System.Workflow.Runtime.Hosting.DefaultWorkflowSchedulerService.Stop*
  exceptions: []
  version:
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  monikers:
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Workflow.Runtime.Hosting/DefaultWorkflowSchedulerService.xml
  author: Erikre
  ms.author: erikre
  manager: erikre
references:
- uid: System.Workflow.Runtime.Hosting.WorkflowSchedulerService
  parent: System.Workflow.Runtime.Hosting
  isExternal: false
  name: WorkflowSchedulerService
  nameWithType: WorkflowSchedulerService
  fullName: System.Workflow.Runtime.Hosting.WorkflowSchedulerService
- uid: System.ArgumentNullException
  parent: System
  isExternal: false
  name: ArgumentNullException
  nameWithType: ArgumentNullException
  fullName: System.ArgumentNullException
- uid: System.ArgumentException
  parent: System
  isExternal: false
  name: ArgumentException
  nameWithType: ArgumentException
  fullName: System.ArgumentException
- uid: System.FormatException
  parent: System
  isExternal: false
  name: FormatException
  nameWithType: FormatException
  fullName: System.FormatException
- uid: System.ArgumentOutOfRangeException
  parent: System
  isExternal: false
  name: ArgumentOutOfRangeException
  nameWithType: ArgumentOutOfRangeException
  fullName: System.ArgumentOutOfRangeException
- uid: System.Workflow.Runtime.Hosting.DefaultWorkflowSchedulerService.#ctor
  parent: System.Workflow.Runtime.Hosting.DefaultWorkflowSchedulerService
  isExternal: false
  name: DefaultWorkflowSchedulerService()
  nameWithType: DefaultWorkflowSchedulerService.DefaultWorkflowSchedulerService()
  fullName: DefaultWorkflowSchedulerService.DefaultWorkflowSchedulerService()
- uid: System.Workflow.Runtime.Hosting.DefaultWorkflowSchedulerService.#ctor(System.Collections.Specialized.NameValueCollection)
  parent: System.Workflow.Runtime.Hosting.DefaultWorkflowSchedulerService
  isExternal: false
  name: DefaultWorkflowSchedulerService(NameValueCollection)
  nameWithType: DefaultWorkflowSchedulerService.DefaultWorkflowSchedulerService(NameValueCollection)
  fullName: DefaultWorkflowSchedulerService.DefaultWorkflowSchedulerService(NameValueCollection)
- uid: System.Collections.Specialized.NameValueCollection
  parent: System.Collections.Specialized
  isExternal: false
  name: NameValueCollection
  nameWithType: NameValueCollection
  fullName: System.Collections.Specialized.NameValueCollection
- uid: System.Workflow.Runtime.Hosting.DefaultWorkflowSchedulerService.#ctor(System.Int32)
  parent: System.Workflow.Runtime.Hosting.DefaultWorkflowSchedulerService
  isExternal: false
  name: DefaultWorkflowSchedulerService(Int32)
  nameWithType: DefaultWorkflowSchedulerService.DefaultWorkflowSchedulerService(Int32)
  fullName: DefaultWorkflowSchedulerService.DefaultWorkflowSchedulerService(Int32)
- uid: System.Int32
  parent: System
  isExternal: false
  name: Int32
  nameWithType: Int32
  fullName: System.Int32
- uid: System.Workflow.Runtime.Hosting.DefaultWorkflowSchedulerService.Cancel(System.Guid)
  parent: System.Workflow.Runtime.Hosting.DefaultWorkflowSchedulerService
  isExternal: false
  name: Cancel(Guid)
  nameWithType: DefaultWorkflowSchedulerService.Cancel(Guid)
  fullName: DefaultWorkflowSchedulerService.Cancel(Guid)
- uid: System.Guid
  parent: System
  isExternal: false
  name: Guid
  nameWithType: Guid
  fullName: System.Guid
- uid: System.Workflow.Runtime.Hosting.DefaultWorkflowSchedulerService.MaxSimultaneousWorkflows
  parent: System.Workflow.Runtime.Hosting.DefaultWorkflowSchedulerService
  isExternal: false
  name: MaxSimultaneousWorkflows
  nameWithType: DefaultWorkflowSchedulerService.MaxSimultaneousWorkflows
  fullName: DefaultWorkflowSchedulerService.MaxSimultaneousWorkflows
- uid: System.Workflow.Runtime.Hosting.DefaultWorkflowSchedulerService.OnStarted
  parent: System.Workflow.Runtime.Hosting.DefaultWorkflowSchedulerService
  isExternal: false
  name: OnStarted()
  nameWithType: DefaultWorkflowSchedulerService.OnStarted()
  fullName: DefaultWorkflowSchedulerService.OnStarted()
- uid: System.Workflow.Runtime.Hosting.DefaultWorkflowSchedulerService.Schedule(System.Threading.WaitCallback,System.Guid)
  parent: System.Workflow.Runtime.Hosting.DefaultWorkflowSchedulerService
  isExternal: false
  name: Schedule(WaitCallback, Guid)
  nameWithType: DefaultWorkflowSchedulerService.Schedule(WaitCallback, Guid)
  fullName: DefaultWorkflowSchedulerService.Schedule(WaitCallback, Guid)
- uid: System.Threading.WaitCallback
  parent: System.Threading
  isExternal: false
  name: WaitCallback
  nameWithType: WaitCallback
  fullName: System.Threading.WaitCallback
- uid: System.Workflow.Runtime.Hosting.DefaultWorkflowSchedulerService.Schedule(System.Threading.WaitCallback,System.Guid,System.DateTime,System.Guid)
  parent: System.Workflow.Runtime.Hosting.DefaultWorkflowSchedulerService
  isExternal: false
  name: Schedule(WaitCallback, Guid, DateTime, Guid)
  nameWithType: DefaultWorkflowSchedulerService.Schedule(WaitCallback, Guid, DateTime, Guid)
  fullName: DefaultWorkflowSchedulerService.Schedule(WaitCallback, Guid, DateTime, Guid)
- uid: System.DateTime
  parent: System
  isExternal: false
  name: DateTime
  nameWithType: DateTime
  fullName: System.DateTime
- uid: System.Workflow.Runtime.Hosting.DefaultWorkflowSchedulerService.Stop
  parent: System.Workflow.Runtime.Hosting.DefaultWorkflowSchedulerService
  isExternal: false
  name: Stop()
  nameWithType: DefaultWorkflowSchedulerService.Stop()
  fullName: DefaultWorkflowSchedulerService.Stop()
- uid: System.Workflow.Runtime.Hosting.DefaultWorkflowSchedulerService.#ctor*
  parent: System.Workflow.Runtime.Hosting.DefaultWorkflowSchedulerService
  isExternal: false
  name: DefaultWorkflowSchedulerService
  nameWithType: DefaultWorkflowSchedulerService.DefaultWorkflowSchedulerService
  fullName: DefaultWorkflowSchedulerService.DefaultWorkflowSchedulerService
  monikers:
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Workflow.Runtime.Hosting/DefaultWorkflowSchedulerService.xml
- uid: System.Workflow.Runtime.Hosting.DefaultWorkflowSchedulerService.Cancel*
  parent: System.Workflow.Runtime.Hosting.DefaultWorkflowSchedulerService
  isExternal: false
  name: Cancel
  nameWithType: DefaultWorkflowSchedulerService.Cancel
  fullName: DefaultWorkflowSchedulerService.Cancel
  monikers:
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Workflow.Runtime.Hosting/DefaultWorkflowSchedulerService.xml
- uid: System.Workflow.Runtime.Hosting.DefaultWorkflowSchedulerService.MaxSimultaneousWorkflows*
  parent: System.Workflow.Runtime.Hosting.DefaultWorkflowSchedulerService
  isExternal: false
  name: MaxSimultaneousWorkflows
  nameWithType: DefaultWorkflowSchedulerService.MaxSimultaneousWorkflows
  fullName: DefaultWorkflowSchedulerService.MaxSimultaneousWorkflows
  monikers:
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Workflow.Runtime.Hosting/DefaultWorkflowSchedulerService.xml
- uid: System.Workflow.Runtime.Hosting.DefaultWorkflowSchedulerService.OnStarted*
  parent: System.Workflow.Runtime.Hosting.DefaultWorkflowSchedulerService
  isExternal: false
  name: OnStarted
  nameWithType: DefaultWorkflowSchedulerService.OnStarted
  fullName: DefaultWorkflowSchedulerService.OnStarted
  monikers:
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Workflow.Runtime.Hosting/DefaultWorkflowSchedulerService.xml
- uid: System.Workflow.Runtime.Hosting.DefaultWorkflowSchedulerService.Schedule*
  parent: System.Workflow.Runtime.Hosting.DefaultWorkflowSchedulerService
  isExternal: false
  name: Schedule
  nameWithType: DefaultWorkflowSchedulerService.Schedule
  fullName: DefaultWorkflowSchedulerService.Schedule
  monikers:
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Workflow.Runtime.Hosting/DefaultWorkflowSchedulerService.xml
- uid: System.Workflow.Runtime.Hosting.DefaultWorkflowSchedulerService.Stop*
  parent: System.Workflow.Runtime.Hosting.DefaultWorkflowSchedulerService
  isExternal: false
  name: Stop
  nameWithType: DefaultWorkflowSchedulerService.Stop
  fullName: DefaultWorkflowSchedulerService.Stop
  monikers:
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Workflow.Runtime.Hosting/DefaultWorkflowSchedulerService.xml
- uid: System.Object.Equals(System.Object)
  parent: System.Object
  isExternal: false
  name: Equals(Object)
  nameWithType: Object.Equals(Object)
  fullName: Object.Equals(Object)
- uid: System.Object.Equals(System.Object,System.Object)
  parent: System.Object
  isExternal: false
  name: Equals(Object, Object)
  nameWithType: Object.Equals(Object, Object)
  fullName: Object.Equals(Object, Object)
- uid: System.Object.GetHashCode
  parent: System.Object
  isExternal: false
  name: GetHashCode()
  nameWithType: Object.GetHashCode()
  fullName: Object.GetHashCode()
- uid: System.Object.GetType
  parent: System.Object
  isExternal: false
  name: GetType()
  nameWithType: Object.GetType()
  fullName: Object.GetType()
- uid: System.Object.MemberwiseClone
  parent: System.Object
  isExternal: false
  name: MemberwiseClone()
  nameWithType: Object.MemberwiseClone()
  fullName: Object.MemberwiseClone()
- uid: System.Object.ReferenceEquals(System.Object,System.Object)
  parent: System.Object
  isExternal: false
  name: ReferenceEquals(Object, Object)
  nameWithType: Object.ReferenceEquals(Object, Object)
  fullName: Object.ReferenceEquals(Object, Object)
- uid: System.Object.ToString
  parent: System.Object
  isExternal: false
  name: ToString()
  nameWithType: Object.ToString()
  fullName: Object.ToString()
- uid: System.Workflow.Runtime.Hosting.WorkflowRuntimeService.OnStopped
  parent: System.Workflow.Runtime.Hosting.WorkflowRuntimeService
  isExternal: false
  name: OnStopped()
  nameWithType: WorkflowRuntimeService.OnStopped()
  fullName: WorkflowRuntimeService.OnStopped()
- uid: System.Workflow.Runtime.Hosting.WorkflowRuntimeService.RaiseServicesExceptionNotHandledEvent(System.Exception,System.Guid)
  parent: System.Workflow.Runtime.Hosting.WorkflowRuntimeService
  isExternal: false
  name: RaiseServicesExceptionNotHandledEvent(Exception, Guid)
  nameWithType: WorkflowRuntimeService.RaiseServicesExceptionNotHandledEvent(Exception, Guid)
  fullName: WorkflowRuntimeService.RaiseServicesExceptionNotHandledEvent(Exception, Guid)
- uid: System.Workflow.Runtime.Hosting.WorkflowRuntimeService.Runtime
  parent: System.Workflow.Runtime.Hosting.WorkflowRuntimeService
  isExternal: false
  name: Runtime
  nameWithType: WorkflowRuntimeService.Runtime
  fullName: WorkflowRuntimeService.Runtime
- uid: System.Workflow.Runtime.Hosting.WorkflowRuntimeService.Start
  parent: System.Workflow.Runtime.Hosting.WorkflowRuntimeService
  isExternal: false
  name: Start()
  nameWithType: WorkflowRuntimeService.Start()
  fullName: WorkflowRuntimeService.Start()
- uid: System.Workflow.Runtime.Hosting.WorkflowRuntimeService.State
  parent: System.Workflow.Runtime.Hosting.WorkflowRuntimeService
  isExternal: false
  name: State
  nameWithType: WorkflowRuntimeService.State
  fullName: WorkflowRuntimeService.State
