{"nodes":[{"content":"Specifies whether a class or data table uses scaffolding.","nodes":[{"pos":[0,57],"content":"Specifies whether a class or data table uses scaffolding.","nodes":[{"content":"Specifies whether a class or data table uses scaffolding.","pos":[0,57]}]}],"pos":[677,735],"yaml":true},{"content":"Scaffolding is the mechanism for generating web page templates based on database schemas. ASP.NET Dynamic Data uses scaffolding to generate Web-based UI that lets a user to view and update a database. This class uses the <xref:System.ComponentModel.DataAnnotations.ScaffoldTableAttribute.Scaffold%2A> property to enable scaffolding of individual tables in a Dynamic Data Web Site. Scaffolding enhances the ASP.NET page framework by dynamically displaying pages based on the data model with no physical pages required.  \n  \n Scaffolding provides the following:  \n  \n-   Minimal or no code to create a data-driven Web application.  \n  \n-   Quick development time.  \n  \n-   Pages that are fully functional, including display, insert, edit, delete, sorting, and paging functionalities.  \n  \n-   Built-in data validation based on the database schema.  \n  \n-   Filters that are created for each foreign key or Boolean fields.  \n  \n This class can be used to enable or disable scaffolding of data tables in a data model by applying this attribute to the partial class that represents the table.","nodes":[{"pos":[0,517],"content":"Scaffolding is the mechanism for generating web page templates based on database schemas. ASP.NET Dynamic Data uses scaffolding to generate Web-based UI that lets a user to view and update a database. This class uses the <xref:System.ComponentModel.DataAnnotations.ScaffoldTableAttribute.Scaffold%2A> property to enable scaffolding of individual tables in a Dynamic Data Web Site. Scaffolding enhances the ASP.NET page framework by dynamically displaying pages based on the data model with no physical pages required.","nodes":[{"content":"Scaffolding is the mechanism for generating web page templates based on database schemas. ASP.NET Dynamic Data uses scaffolding to generate Web-based UI that lets a user to view and update a database. This class uses the <xref:System.ComponentModel.DataAnnotations.ScaffoldTableAttribute.Scaffold%2A> property to enable scaffolding of individual tables in a Dynamic Data Web Site. Scaffolding enhances the ASP.NET page framework by dynamically displaying pages based on the data model with no physical pages required.","pos":[0,517],"nodes":[{"content":"Scaffolding is the mechanism for generating web page templates based on database schemas.","pos":[0,89]},{"content":"ASP.NET Dynamic Data uses scaffolding to generate Web-based UI that lets a user to view and update a database.","pos":[90,200]},{"content":"This class uses the <ph id=\"ph1\">&lt;xref:System.ComponentModel.DataAnnotations.ScaffoldTableAttribute.Scaffold%2A&gt;</ph> property to enable scaffolding of individual tables in a Dynamic Data Web Site.","pos":[201,380],"source":" This class uses the <xref:System.ComponentModel.DataAnnotations.ScaffoldTableAttribute.Scaffold%2A> property to enable scaffolding of individual tables in a Dynamic Data Web Site."},{"content":"Scaffolding enhances the ASP.NET page framework by dynamically displaying pages based on the data model with no physical pages required.","pos":[381,517]}]}]},{"pos":[524,559],"content":"Scaffolding provides the following:","nodes":[{"content":"Scaffolding provides the following:","pos":[0,35]}]},{"pos":[569,628],"content":"Minimal or no code to create a data-driven Web application.","nodes":[{"content":"Minimal or no code to create a data-driven Web application.","pos":[0,59]}]},{"pos":[638,661],"content":"Quick development time.","nodes":[{"content":"Quick development time.","pos":[0,23]}]},{"pos":[671,781],"content":"Pages that are fully functional, including display, insert, edit, delete, sorting, and paging functionalities.","nodes":[{"content":"Pages that are fully functional, including display, insert, edit, delete, sorting, and paging functionalities.","pos":[0,110]}]},{"pos":[791,845],"content":"Built-in data validation based on the database schema.","nodes":[{"content":"Built-in data validation based on the database schema.","pos":[0,54]}]},{"pos":[855,919],"content":"Filters that are created for each foreign key or Boolean fields.","nodes":[{"content":"Filters that are created for each foreign key or Boolean fields.","pos":[0,64]}]},{"pos":[926,1087],"content":"This class can be used to enable or disable scaffolding of data tables in a data model by applying this attribute to the partial class that represents the table.","nodes":[{"content":"This class can be used to enable or disable scaffolding of data tables in a data model by applying this attribute to the partial class that represents the table.","pos":[0,161]}]}],"pos":[746,1850],"yaml":true,"extradata":"MT"},{"content":"Initializes a new instance of <xref href=\"System.ComponentModel.DataAnnotations.ScaffoldTableAttribute\"></xref> using the <xref href=\"System.ComponentModel.DataAnnotations.ScaffoldTableAttribute.Scaffold\"></xref> property.","nodes":[{"pos":[0,222],"content":"Initializes a new instance of <ph id=\"ph1\">&lt;xref href=\"System.ComponentModel.DataAnnotations.ScaffoldTableAttribute\"&gt;&lt;/xref&gt;</ph> using the <ph id=\"ph2\">&lt;xref href=\"System.ComponentModel.DataAnnotations.ScaffoldTableAttribute.Scaffold\"&gt;&lt;/xref&gt;</ph> property.","source":"Initializes a new instance of <xref href=\"System.ComponentModel.DataAnnotations.ScaffoldTableAttribute\"></xref> using the <xref href=\"System.ComponentModel.DataAnnotations.ScaffoldTableAttribute.Scaffold\"></xref> property."}],"pos":[8701,8924],"yaml":true},{"content":"You can set `scaffold` to `true` for the entire data model to expose all data tables in the database for CRUD (Create, Read, Update and Delete) operations or expose individual tables to CRUD operations by setting `scaffold` for individual tables to `true`.","nodes":[{"pos":[0,256],"content":"You can set <ph id=\"ph1\">`scaffold`</ph> to <ph id=\"ph2\">`true`</ph> for the entire data model to expose all data tables in the database for CRUD (Create, Read, Update and Delete) operations or expose individual tables to CRUD operations by setting <ph id=\"ph3\">`scaffold`</ph> for individual tables to <ph id=\"ph4\">`true`</ph>.","source":"You can set `scaffold` to `true` for the entire data model to expose all data tables in the database for CRUD (Create, Read, Update and Delete) operations or expose individual tables to CRUD operations by setting `scaffold` for individual tables to `true`."}],"pos":[8935,9192],"yaml":true,"extradata":"MT"},{"content":"The value that specifies whether scaffolding is enabled.","nodes":[{"pos":[0,56],"content":"The value that specifies whether scaffolding is enabled.","nodes":[{"content":"The value that specifies whether scaffolding is enabled.","pos":[0,56]}]}],"pos":[9343,9400],"yaml":true},{"content":"Gets or sets the value that specifies whether scaffolding is enabled.","nodes":[{"pos":[0,69],"content":"Gets or sets the value that specifies whether scaffolding is enabled.","nodes":[{"content":"Gets or sets the value that specifies whether scaffolding is enabled.","pos":[0,69]}]}],"pos":[10674,10744],"yaml":true},{"content":"Scaffolding is the mechanism of generating web page templates based on database schemas. ASP.NET Dynamic Data uses scaffolding to generate Web-based UI that lets a user to view and update a database. For more information about the Scaffold attribute, see <xref:System.ComponentModel.DataAnnotations.ScaffoldTableAttribute>.","nodes":[{"pos":[0,323],"content":"Scaffolding is the mechanism of generating web page templates based on database schemas. ASP.NET Dynamic Data uses scaffolding to generate Web-based UI that lets a user to view and update a database. For more information about the Scaffold attribute, see <xref:System.ComponentModel.DataAnnotations.ScaffoldTableAttribute>.","nodes":[{"content":"Scaffolding is the mechanism of generating web page templates based on database schemas. ASP.NET Dynamic Data uses scaffolding to generate Web-based UI that lets a user to view and update a database. For more information about the Scaffold attribute, see <xref:System.ComponentModel.DataAnnotations.ScaffoldTableAttribute>.","pos":[0,323],"nodes":[{"content":"Scaffolding is the mechanism of generating web page templates based on database schemas.","pos":[0,88]},{"content":"ASP.NET Dynamic Data uses scaffolding to generate Web-based UI that lets a user to view and update a database.","pos":[89,199]},{"content":"For more information about the Scaffold attribute, see <ph id=\"ph1\">&lt;xref:System.ComponentModel.DataAnnotations.ScaffoldTableAttribute&gt;</ph>.","pos":[200,323],"source":" For more information about the Scaffold attribute, see <xref:System.ComponentModel.DataAnnotations.ScaffoldTableAttribute>."}]}]}],"pos":[10755,11079],"yaml":true,"extradata":"MT"},{"content":"`true`, if scaffolding is enabled; otherwise `false`.","nodes":[{"pos":[0,53],"content":"<ph id=\"ph1\">`true`</ph>, if scaffolding is enabled; otherwise <ph id=\"ph2\">`false`</ph>.","source":"`true`, if scaffolding is enabled; otherwise `false`."}],"pos":[11190,11246],"yaml":true}],"content":"### YamlMime:ManagedReference\nitems:\n- uid: System.ComponentModel.DataAnnotations.ScaffoldTableAttribute\n  commentId: T:System.ComponentModel.DataAnnotations.ScaffoldTableAttribute\n  id: ScaffoldTableAttribute\n  children:\n  - System.ComponentModel.DataAnnotations.ScaffoldTableAttribute.#ctor(System.Boolean)\n  - System.ComponentModel.DataAnnotations.ScaffoldTableAttribute.Scaffold\n  langs:\n  - csharp\n  name: ScaffoldTableAttribute\n  nameWithType: ScaffoldTableAttribute\n  fullName: System.ComponentModel.DataAnnotations.ScaffoldTableAttribute\n  type: Class\n  assemblies:\n  - System.ComponentModel.DataAnnotations\n  namespace: System.ComponentModel.DataAnnotations\n  summary: Specifies whether a class or data table uses scaffolding.\n  remarks: \"Scaffolding is the mechanism for generating web page templates based on database schemas. ASP.NET Dynamic Data uses scaffolding to generate Web-based UI that lets a user to view and update a database. This class uses the <xref:System.ComponentModel.DataAnnotations.ScaffoldTableAttribute.Scaffold%2A> property to enable scaffolding of individual tables in a Dynamic Data Web Site. Scaffolding enhances the ASP.NET page framework by dynamically displaying pages based on the data model with no physical pages required.  \\n  \\n Scaffolding provides the following:  \\n  \\n-   Minimal or no code to create a data-driven Web application.  \\n  \\n-   Quick development time.  \\n  \\n-   Pages that are fully functional, including display, insert, edit, delete, sorting, and paging functionalities.  \\n  \\n-   Built-in data validation based on the database schema.  \\n  \\n-   Filters that are created for each foreign key or Boolean fields.  \\n  \\n This class can be used to enable or disable scaffolding of data tables in a data model by applying this attribute to the partial class that represents the table.\"\n  example:\n  - \"The following code example hides the ErrorLog Table in AdventureWorksLT database by applying the scaffold attribute to the ErrorLog partial class that represents the ErrorLog table. The scaffold property is set to `false.`  \\n  \\n```csharp  \\n[MetadataType (typeof(ErrorLogMetada))]  \\n[ScaffoldTable(false)]  \\npublic partial class ErrorLog  \\n{  \\n  \\n}  \\n  \\npublic class ErrorLogMetada  \\n{  \\n  \\n}  \\n```  \\n\\n```vb  \\n<MetadataType(GetType(ErrorLogMetada))> _   \\n<ScaffoldTable(False)>   \\nPublic Partial Class ErrorLog   \\n  \\nEnd Class   \\n  \\nPublic Class ErrorLogMetada  \\n  \\nEnd Class   \\n```  \\n  \\n To compile the example code, you need the following:  \\n  \\n-   Visual Studio 2008 Service Pack 1 or Visual Developer 2008 Express Edition Service Pack 1.  \\n  \\n-   The AdventureWorksLT sample database. For information about how to download and install the SQL Server sample database, see [Microsoft SQL Server Product Samples: Database](http://go.microsoft.com/fwlink/?LinkId=117483) on the CodePlex site. Make sure that you install the correct version of the sample database for the version of SQL Server that you are running (SQL Server 2005 or SQL Server 2008).  \\n  \\n-   A Dynamic Data Web site. This enables you to create a data context for the database and the class that contains the data field to customize and the methods to override. In addition, it creates the environment in which to use the page described before. For more information, see [Walkthrough: Creating a New Dynamic Data Web Site Using Scaffolding](http://msdn.microsoft.com/library/1564aef2-9103-436a-9806-c8ad7abd616a).\"\n  syntax:\n    content: >-\n      [System.AttributeUsage(System.AttributeTargets.Class, AllowMultiple=false)]\n\n      public class ScaffoldTableAttribute : Attribute\n  inheritance:\n  - System.Object\n  - System.Attribute\n  implements: []\n  inheritedMembers:\n  - System.Attribute.Equals(System.Object)\n  - System.Attribute.GetCustomAttribute(System.Reflection.Assembly,System.Type)\n  - System.Attribute.GetCustomAttribute(System.Reflection.Assembly,System.Type,System.Boolean)\n  - System.Attribute.GetCustomAttribute(System.Reflection.MemberInfo,System.Type)\n  - System.Attribute.GetCustomAttribute(System.Reflection.MemberInfo,System.Type,System.Boolean)\n  - System.Attribute.GetCustomAttribute(System.Reflection.Module,System.Type)\n  - System.Attribute.GetCustomAttribute(System.Reflection.Module,System.Type,System.Boolean)\n  - System.Attribute.GetCustomAttribute(System.Reflection.ParameterInfo,System.Type)\n  - System.Attribute.GetCustomAttribute(System.Reflection.ParameterInfo,System.Type,System.Boolean)\n  - System.Attribute.GetCustomAttributes(System.Reflection.Assembly)\n  - System.Attribute.GetCustomAttributes(System.Reflection.Assembly,System.Boolean)\n  - System.Attribute.GetCustomAttributes(System.Reflection.Assembly,System.Type)\n  - System.Attribute.GetCustomAttributes(System.Reflection.Assembly,System.Type,System.Boolean)\n  - System.Attribute.GetCustomAttributes(System.Reflection.MemberInfo)\n  - System.Attribute.GetCustomAttributes(System.Reflection.MemberInfo,System.Boolean)\n  - System.Attribute.GetCustomAttributes(System.Reflection.MemberInfo,System.Type)\n  - System.Attribute.GetCustomAttributes(System.Reflection.MemberInfo,System.Type,System.Boolean)\n  - System.Attribute.GetCustomAttributes(System.Reflection.Module)\n  - System.Attribute.GetCustomAttributes(System.Reflection.Module,System.Boolean)\n  - System.Attribute.GetCustomAttributes(System.Reflection.Module,System.Type)\n  - System.Attribute.GetCustomAttributes(System.Reflection.Module,System.Type,System.Boolean)\n  - System.Attribute.GetCustomAttributes(System.Reflection.ParameterInfo)\n  - System.Attribute.GetCustomAttributes(System.Reflection.ParameterInfo,System.Boolean)\n  - System.Attribute.GetCustomAttributes(System.Reflection.ParameterInfo,System.Type)\n  - System.Attribute.GetCustomAttributes(System.Reflection.ParameterInfo,System.Type,System.Boolean)\n  - System.Attribute.GetHashCode\n  - System.Attribute.IsDefaultAttribute\n  - System.Attribute.IsDefined(System.Reflection.Assembly,System.Type)\n  - System.Attribute.IsDefined(System.Reflection.Assembly,System.Type,System.Boolean)\n  - System.Attribute.IsDefined(System.Reflection.MemberInfo,System.Type)\n  - System.Attribute.IsDefined(System.Reflection.MemberInfo,System.Type,System.Boolean)\n  - System.Attribute.IsDefined(System.Reflection.Module,System.Type)\n  - System.Attribute.IsDefined(System.Reflection.Module,System.Type,System.Boolean)\n  - System.Attribute.IsDefined(System.Reflection.ParameterInfo,System.Type)\n  - System.Attribute.IsDefined(System.Reflection.ParameterInfo,System.Type,System.Boolean)\n  - System.Attribute.Match(System.Object)\n  - System.Attribute.System#Runtime#InteropServices#_Attribute#GetIDsOfNames(System.Guid@,System.IntPtr,System.UInt32,System.UInt32,System.IntPtr)\n  - System.Attribute.System#Runtime#InteropServices#_Attribute#GetTypeInfo(System.UInt32,System.UInt32,System.IntPtr)\n  - System.Attribute.System#Runtime#InteropServices#_Attribute#GetTypeInfoCount(System.UInt32@)\n  - System.Attribute.System#Runtime#InteropServices#_Attribute#Invoke(System.UInt32,System.Guid@,System.UInt32,System.Int16,System.IntPtr,System.IntPtr,System.IntPtr,System.IntPtr)\n  - System.Attribute.TypeId\n  - System.Object.Equals(System.Object,System.Object)\n  - System.Object.GetType\n  - System.Object.MemberwiseClone\n  - System.Object.ReferenceEquals(System.Object,System.Object)\n  - System.Object.ToString\n  attributes:\n  - type: System.AttributeUsageAttribute\n  version:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.ComponentModel.DataAnnotations/ScaffoldTableAttribute.xml\n  ms.technology:\n  - dotnet-standard\n  ms.author: riande\n  manager: wpickett\n- uid: System.ComponentModel.DataAnnotations.ScaffoldTableAttribute.#ctor(System.Boolean)\n  commentId: M:System.ComponentModel.DataAnnotations.ScaffoldTableAttribute.#ctor(System.Boolean)\n  id: '#ctor(System.Boolean)'\n  parent: System.ComponentModel.DataAnnotations.ScaffoldTableAttribute\n  langs:\n  - csharp\n  name: ScaffoldTableAttribute(Boolean)\n  nameWithType: ScaffoldTableAttribute.ScaffoldTableAttribute(Boolean)\n  fullName: ScaffoldTableAttribute.ScaffoldTableAttribute(Boolean)\n  type: Constructor\n  assemblies:\n  - System.ComponentModel.DataAnnotations\n  namespace: System.ComponentModel.DataAnnotations\n  summary: Initializes a new instance of <xref href=\"System.ComponentModel.DataAnnotations.ScaffoldTableAttribute\"></xref> using the <xref href=\"System.ComponentModel.DataAnnotations.ScaffoldTableAttribute.Scaffold\"></xref> property.\n  remarks: You can set `scaffold` to `true` for the entire data model to expose all data tables in the database for CRUD (Create, Read, Update and Delete) operations or expose individual tables to CRUD operations by setting `scaffold` for individual tables to `true`.\n  syntax:\n    content: public ScaffoldTableAttribute (bool scaffold);\n    parameters:\n    - id: scaffold\n      type: System.Boolean\n      description: The value that specifies whether scaffolding is enabled.\n  overload: System.ComponentModel.DataAnnotations.ScaffoldTableAttribute.#ctor*\n  exceptions: []\n  version:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.ComponentModel.DataAnnotations/ScaffoldTableAttribute.xml\n  ms.technology:\n  - dotnet-webforms\n  ms.author: riande\n  manager: wpickett\n- uid: System.ComponentModel.DataAnnotations.ScaffoldTableAttribute.Scaffold\n  commentId: P:System.ComponentModel.DataAnnotations.ScaffoldTableAttribute.Scaffold\n  id: Scaffold\n  parent: System.ComponentModel.DataAnnotations.ScaffoldTableAttribute\n  langs:\n  - csharp\n  name: Scaffold\n  nameWithType: ScaffoldTableAttribute.Scaffold\n  fullName: ScaffoldTableAttribute.Scaffold\n  type: Property\n  assemblies:\n  - System.ComponentModel.DataAnnotations\n  namespace: System.ComponentModel.DataAnnotations\n  summary: Gets or sets the value that specifies whether scaffolding is enabled.\n  remarks: Scaffolding is the mechanism of generating web page templates based on database schemas. ASP.NET Dynamic Data uses scaffolding to generate Web-based UI that lets a user to view and update a database. For more information about the Scaffold attribute, see <xref:System.ComponentModel.DataAnnotations.ScaffoldTableAttribute>.\n  syntax:\n    content: public bool Scaffold { get; }\n    return:\n      type: System.Boolean\n      description: '`true`, if scaffolding is enabled; otherwise `false`.'\n  overload: System.ComponentModel.DataAnnotations.ScaffoldTableAttribute.Scaffold*\n  exceptions: []\n  version:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.ComponentModel.DataAnnotations/ScaffoldTableAttribute.xml\n  ms.technology:\n  - dotnet-webforms\n  ms.author: riande\n  manager: wpickett\nreferences:\n- uid: System.Attribute\n  parent: System\n  isExternal: false\n  name: Attribute\n  nameWithType: Attribute\n  fullName: System.Attribute\n- uid: System.ComponentModel.DataAnnotations.ScaffoldTableAttribute.#ctor(System.Boolean)\n  parent: System.ComponentModel.DataAnnotations.ScaffoldTableAttribute\n  isExternal: false\n  name: ScaffoldTableAttribute(Boolean)\n  nameWithType: ScaffoldTableAttribute.ScaffoldTableAttribute(Boolean)\n  fullName: ScaffoldTableAttribute.ScaffoldTableAttribute(Boolean)\n- uid: System.Boolean\n  parent: System\n  isExternal: false\n  name: Boolean\n  nameWithType: Boolean\n  fullName: System.Boolean\n- uid: System.ComponentModel.DataAnnotations.ScaffoldTableAttribute.Scaffold\n  parent: System.ComponentModel.DataAnnotations.ScaffoldTableAttribute\n  isExternal: false\n  name: Scaffold\n  nameWithType: ScaffoldTableAttribute.Scaffold\n  fullName: ScaffoldTableAttribute.Scaffold\n- uid: System.ComponentModel.DataAnnotations.ScaffoldTableAttribute.#ctor*\n  parent: System.ComponentModel.DataAnnotations.ScaffoldTableAttribute\n  isExternal: false\n  name: ScaffoldTableAttribute\n  nameWithType: ScaffoldTableAttribute.ScaffoldTableAttribute\n  fullName: ScaffoldTableAttribute.ScaffoldTableAttribute\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.ComponentModel.DataAnnotations/ScaffoldTableAttribute.xml\n- uid: System.ComponentModel.DataAnnotations.ScaffoldTableAttribute.Scaffold*\n  parent: System.ComponentModel.DataAnnotations.ScaffoldTableAttribute\n  isExternal: false\n  name: Scaffold\n  nameWithType: ScaffoldTableAttribute.Scaffold\n  fullName: ScaffoldTableAttribute.Scaffold\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.ComponentModel.DataAnnotations/ScaffoldTableAttribute.xml\n- uid: System.Attribute.Equals(System.Object)\n  parent: System.Attribute\n  isExternal: false\n  name: Equals(Object)\n  nameWithType: Attribute.Equals(Object)\n  fullName: Attribute.Equals(Object)\n- uid: System.Object.Equals(System.Object,System.Object)\n  parent: System.Object\n  isExternal: false\n  name: Equals(Object, Object)\n  nameWithType: Object.Equals(Object, Object)\n  fullName: Object.Equals(Object, Object)\n- uid: System.Attribute.GetHashCode\n  parent: System.Attribute\n  isExternal: false\n  name: GetHashCode()\n  nameWithType: Attribute.GetHashCode()\n  fullName: Attribute.GetHashCode()\n- uid: System.Object.GetType\n  parent: System.Object\n  isExternal: false\n  name: GetType()\n  nameWithType: Object.GetType()\n  fullName: Object.GetType()\n- uid: System.Object.MemberwiseClone\n  parent: System.Object\n  isExternal: false\n  name: MemberwiseClone()\n  nameWithType: Object.MemberwiseClone()\n  fullName: Object.MemberwiseClone()\n- uid: System.Object.ReferenceEquals(System.Object,System.Object)\n  parent: System.Object\n  isExternal: false\n  name: ReferenceEquals(Object, Object)\n  nameWithType: Object.ReferenceEquals(Object, Object)\n  fullName: Object.ReferenceEquals(Object, Object)\n- uid: System.Object.ToString\n  parent: System.Object\n  isExternal: false\n  name: ToString()\n  nameWithType: Object.ToString()\n  fullName: Object.ToString()\n- uid: System.Attribute.GetCustomAttribute(System.Reflection.ParameterInfo,System.Type,System.Boolean)\n  parent: System.Attribute\n  isExternal: false\n  name: GetCustomAttribute(ParameterInfo, Type, Boolean)\n  nameWithType: Attribute.GetCustomAttribute(ParameterInfo, Type, Boolean)\n  fullName: Attribute.GetCustomAttribute(ParameterInfo, Type, Boolean)\n- uid: System.Attribute.GetCustomAttribute(System.Reflection.MemberInfo,System.Type,System.Boolean)\n  parent: System.Attribute\n  isExternal: false\n  name: GetCustomAttribute(MemberInfo, Type, Boolean)\n  nameWithType: Attribute.GetCustomAttribute(MemberInfo, Type, Boolean)\n  fullName: Attribute.GetCustomAttribute(MemberInfo, Type, Boolean)\n- uid: System.Attribute.GetCustomAttribute(System.Reflection.Assembly,System.Type,System.Boolean)\n  parent: System.Attribute\n  isExternal: false\n  name: GetCustomAttribute(Assembly, Type, Boolean)\n  nameWithType: Attribute.GetCustomAttribute(Assembly, Type, Boolean)\n  fullName: Attribute.GetCustomAttribute(Assembly, Type, Boolean)\n- uid: System.Attribute.GetCustomAttribute(System.Reflection.Module,System.Type,System.Boolean)\n  parent: System.Attribute\n  isExternal: false\n  name: GetCustomAttribute(Module, Type, Boolean)\n  nameWithType: Attribute.GetCustomAttribute(Module, Type, Boolean)\n  fullName: Attribute.GetCustomAttribute(Module, Type, Boolean)\n- uid: System.Attribute.GetCustomAttribute(System.Reflection.Module,System.Type)\n  parent: System.Attribute\n  isExternal: false\n  name: GetCustomAttribute(Module, Type)\n  nameWithType: Attribute.GetCustomAttribute(Module, Type)\n  fullName: Attribute.GetCustomAttribute(Module, Type)\n- uid: System.Attribute.GetCustomAttribute(System.Reflection.MemberInfo,System.Type)\n  parent: System.Attribute\n  isExternal: false\n  name: GetCustomAttribute(MemberInfo, Type)\n  nameWithType: Attribute.GetCustomAttribute(MemberInfo, Type)\n  fullName: Attribute.GetCustomAttribute(MemberInfo, Type)\n- uid: System.Attribute.GetCustomAttribute(System.Reflection.Assembly,System.Type)\n  parent: System.Attribute\n  isExternal: false\n  name: GetCustomAttribute(Assembly, Type)\n  nameWithType: Attribute.GetCustomAttribute(Assembly, Type)\n  fullName: Attribute.GetCustomAttribute(Assembly, Type)\n- uid: System.Attribute.GetCustomAttribute(System.Reflection.ParameterInfo,System.Type)\n  parent: System.Attribute\n  isExternal: false\n  name: GetCustomAttribute(ParameterInfo, Type)\n  nameWithType: Attribute.GetCustomAttribute(ParameterInfo, Type)\n  fullName: Attribute.GetCustomAttribute(ParameterInfo, Type)\n- uid: System.Attribute.GetCustomAttributes(System.Reflection.Module,System.Type)\n  parent: System.Attribute\n  isExternal: false\n  name: GetCustomAttributes(Module, Type)\n  nameWithType: Attribute.GetCustomAttributes(Module, Type)\n  fullName: Attribute.GetCustomAttributes(Module, Type)\n- uid: System.Attribute.GetCustomAttributes(System.Reflection.ParameterInfo,System.Type,System.Boolean)\n  parent: System.Attribute\n  isExternal: false\n  name: GetCustomAttributes(ParameterInfo, Type, Boolean)\n  nameWithType: Attribute.GetCustomAttributes(ParameterInfo, Type, Boolean)\n  fullName: Attribute.GetCustomAttributes(ParameterInfo, Type, Boolean)\n- uid: System.Attribute.GetCustomAttributes(System.Reflection.Module,System.Type,System.Boolean)\n  parent: System.Attribute\n  isExternal: false\n  name: GetCustomAttributes(Module, Type, Boolean)\n  nameWithType: Attribute.GetCustomAttributes(Module, Type, Boolean)\n  fullName: Attribute.GetCustomAttributes(Module, Type, Boolean)\n- uid: System.Attribute.GetCustomAttributes(System.Reflection.MemberInfo,System.Type,System.Boolean)\n  parent: System.Attribute\n  isExternal: false\n  name: GetCustomAttributes(MemberInfo, Type, Boolean)\n  nameWithType: Attribute.GetCustomAttributes(MemberInfo, Type, Boolean)\n  fullName: Attribute.GetCustomAttributes(MemberInfo, Type, Boolean)\n- uid: System.Attribute.GetCustomAttributes(System.Reflection.Assembly,System.Type,System.Boolean)\n  parent: System.Attribute\n  isExternal: false\n  name: GetCustomAttributes(Assembly, Type, Boolean)\n  nameWithType: Attribute.GetCustomAttributes(Assembly, Type, Boolean)\n  fullName: Attribute.GetCustomAttributes(Assembly, Type, Boolean)\n- uid: System.Attribute.GetCustomAttributes(System.Reflection.ParameterInfo,System.Type)\n  parent: System.Attribute\n  isExternal: false\n  name: GetCustomAttributes(ParameterInfo, Type)\n  nameWithType: Attribute.GetCustomAttributes(ParameterInfo, Type)\n  fullName: Attribute.GetCustomAttributes(ParameterInfo, Type)\n- uid: System.Attribute.GetCustomAttributes(System.Reflection.Module,System.Boolean)\n  parent: System.Attribute\n  isExternal: false\n  name: GetCustomAttributes(Module, Boolean)\n  nameWithType: Attribute.GetCustomAttributes(Module, Boolean)\n  fullName: Attribute.GetCustomAttributes(Module, Boolean)\n- uid: System.Attribute.GetCustomAttributes(System.Reflection.ParameterInfo,System.Boolean)\n  parent: System.Attribute\n  isExternal: false\n  name: GetCustomAttributes(ParameterInfo, Boolean)\n  nameWithType: Attribute.GetCustomAttributes(ParameterInfo, Boolean)\n  fullName: Attribute.GetCustomAttributes(ParameterInfo, Boolean)\n- uid: System.Attribute.GetCustomAttributes(System.Reflection.MemberInfo,System.Boolean)\n  parent: System.Attribute\n  isExternal: false\n  name: GetCustomAttributes(MemberInfo, Boolean)\n  nameWithType: Attribute.GetCustomAttributes(MemberInfo, Boolean)\n  fullName: Attribute.GetCustomAttributes(MemberInfo, Boolean)\n- uid: System.Attribute.GetCustomAttributes(System.Reflection.Assembly,System.Type)\n  parent: System.Attribute\n  isExternal: false\n  name: GetCustomAttributes(Assembly, Type)\n  nameWithType: Attribute.GetCustomAttributes(Assembly, Type)\n  fullName: Attribute.GetCustomAttributes(Assembly, Type)\n- uid: System.Attribute.GetCustomAttributes(System.Reflection.Assembly,System.Boolean)\n  parent: System.Attribute\n  isExternal: false\n  name: GetCustomAttributes(Assembly, Boolean)\n  nameWithType: Attribute.GetCustomAttributes(Assembly, Boolean)\n  fullName: Attribute.GetCustomAttributes(Assembly, Boolean)\n- uid: System.Attribute.GetCustomAttributes(System.Reflection.ParameterInfo)\n  parent: System.Attribute\n  isExternal: false\n  name: GetCustomAttributes(ParameterInfo)\n  nameWithType: Attribute.GetCustomAttributes(ParameterInfo)\n  fullName: Attribute.GetCustomAttributes(ParameterInfo)\n- uid: System.Attribute.GetCustomAttributes(System.Reflection.Module)\n  parent: System.Attribute\n  isExternal: false\n  name: GetCustomAttributes(Module)\n  nameWithType: Attribute.GetCustomAttributes(Module)\n  fullName: Attribute.GetCustomAttributes(Module)\n- uid: System.Attribute.GetCustomAttributes(System.Reflection.MemberInfo)\n  parent: System.Attribute\n  isExternal: false\n  name: GetCustomAttributes(MemberInfo)\n  nameWithType: Attribute.GetCustomAttributes(MemberInfo)\n  fullName: Attribute.GetCustomAttributes(MemberInfo)\n- uid: System.Attribute.GetCustomAttributes(System.Reflection.Assembly)\n  parent: System.Attribute\n  isExternal: false\n  name: GetCustomAttributes(Assembly)\n  nameWithType: Attribute.GetCustomAttributes(Assembly)\n  fullName: Attribute.GetCustomAttributes(Assembly)\n- uid: System.Attribute.GetCustomAttributes(System.Reflection.MemberInfo,System.Type)\n  parent: System.Attribute\n  isExternal: false\n  name: GetCustomAttributes(MemberInfo, Type)\n  nameWithType: Attribute.GetCustomAttributes(MemberInfo, Type)\n  fullName: Attribute.GetCustomAttributes(MemberInfo, Type)\n- uid: System.Attribute.IsDefaultAttribute\n  parent: System.Attribute\n  isExternal: false\n  name: IsDefaultAttribute()\n  nameWithType: Attribute.IsDefaultAttribute()\n  fullName: Attribute.IsDefaultAttribute()\n- uid: System.Attribute.IsDefined(System.Reflection.ParameterInfo,System.Type,System.Boolean)\n  parent: System.Attribute\n  isExternal: false\n  name: IsDefined(ParameterInfo, Type, Boolean)\n  nameWithType: Attribute.IsDefined(ParameterInfo, Type, Boolean)\n  fullName: Attribute.IsDefined(ParameterInfo, Type, Boolean)\n- uid: System.Attribute.IsDefined(System.Reflection.Module,System.Type,System.Boolean)\n  parent: System.Attribute\n  isExternal: false\n  name: IsDefined(Module, Type, Boolean)\n  nameWithType: Attribute.IsDefined(Module, Type, Boolean)\n  fullName: Attribute.IsDefined(Module, Type, Boolean)\n- uid: System.Attribute.IsDefined(System.Reflection.MemberInfo,System.Type,System.Boolean)\n  parent: System.Attribute\n  isExternal: false\n  name: IsDefined(MemberInfo, Type, Boolean)\n  nameWithType: Attribute.IsDefined(MemberInfo, Type, Boolean)\n  fullName: Attribute.IsDefined(MemberInfo, Type, Boolean)\n- uid: System.Attribute.IsDefined(System.Reflection.Assembly,System.Type,System.Boolean)\n  parent: System.Attribute\n  isExternal: false\n  name: IsDefined(Assembly, Type, Boolean)\n  nameWithType: Attribute.IsDefined(Assembly, Type, Boolean)\n  fullName: Attribute.IsDefined(Assembly, Type, Boolean)\n- uid: System.Attribute.IsDefined(System.Reflection.MemberInfo,System.Type)\n  parent: System.Attribute\n  isExternal: false\n  name: IsDefined(MemberInfo, Type)\n  nameWithType: Attribute.IsDefined(MemberInfo, Type)\n  fullName: Attribute.IsDefined(MemberInfo, Type)\n- uid: System.Attribute.IsDefined(System.Reflection.Module,System.Type)\n  parent: System.Attribute\n  isExternal: false\n  name: IsDefined(Module, Type)\n  nameWithType: Attribute.IsDefined(Module, Type)\n  fullName: Attribute.IsDefined(Module, Type)\n- uid: System.Attribute.IsDefined(System.Reflection.Assembly,System.Type)\n  parent: System.Attribute\n  isExternal: false\n  name: IsDefined(Assembly, Type)\n  nameWithType: Attribute.IsDefined(Assembly, Type)\n  fullName: Attribute.IsDefined(Assembly, Type)\n- uid: System.Attribute.IsDefined(System.Reflection.ParameterInfo,System.Type)\n  parent: System.Attribute\n  isExternal: false\n  name: IsDefined(ParameterInfo, Type)\n  nameWithType: Attribute.IsDefined(ParameterInfo, Type)\n  fullName: Attribute.IsDefined(ParameterInfo, Type)\n- uid: System.Attribute.Match(System.Object)\n  parent: System.Attribute\n  isExternal: false\n  name: Match(Object)\n  nameWithType: Attribute.Match(Object)\n  fullName: Attribute.Match(Object)\n- uid: System.Attribute.TypeId\n  parent: System.Attribute\n  isExternal: false\n  name: TypeId\n  nameWithType: Attribute.TypeId\n  fullName: Attribute.TypeId\n- uid: System.Attribute.System#Runtime#InteropServices#_Attribute#GetIDsOfNames(System.Guid@,System.IntPtr,System.UInt32,System.UInt32,System.IntPtr)\n  parent: System.Attribute\n  isExternal: false\n  name: _Attribute.GetIDsOfNames(Guid, IntPtr, UInt32, UInt32, IntPtr)\n  nameWithType: Attribute._Attribute.GetIDsOfNames(Guid, IntPtr, UInt32, UInt32, IntPtr)\n  fullName: Attribute._Attribute.GetIDsOfNames(Guid, IntPtr, UInt32, UInt32, IntPtr)\n- uid: System.Attribute.System#Runtime#InteropServices#_Attribute#GetTypeInfo(System.UInt32,System.UInt32,System.IntPtr)\n  parent: System.Attribute\n  isExternal: false\n  name: _Attribute.GetTypeInfo(UInt32, UInt32, IntPtr)\n  nameWithType: Attribute._Attribute.GetTypeInfo(UInt32, UInt32, IntPtr)\n  fullName: Attribute._Attribute.GetTypeInfo(UInt32, UInt32, IntPtr)\n- uid: System.Attribute.System#Runtime#InteropServices#_Attribute#GetTypeInfoCount(System.UInt32@)\n  parent: System.Attribute\n  isExternal: false\n  name: _Attribute.GetTypeInfoCount(UInt32)\n  nameWithType: Attribute._Attribute.GetTypeInfoCount(UInt32)\n  fullName: Attribute._Attribute.GetTypeInfoCount(UInt32)\n- uid: System.Attribute.System#Runtime#InteropServices#_Attribute#Invoke(System.UInt32,System.Guid@,System.UInt32,System.Int16,System.IntPtr,System.IntPtr,System.IntPtr,System.IntPtr)\n  parent: System.Attribute\n  isExternal: false\n  name: _Attribute.Invoke(UInt32, Guid, UInt32, Int16, IntPtr, IntPtr, IntPtr, IntPtr)\n  nameWithType: Attribute._Attribute.Invoke(UInt32, Guid, UInt32, Int16, IntPtr, IntPtr, IntPtr, IntPtr)\n  fullName: Attribute._Attribute.Invoke(UInt32, Guid, UInt32, Int16, IntPtr, IntPtr, IntPtr, IntPtr)\n"}