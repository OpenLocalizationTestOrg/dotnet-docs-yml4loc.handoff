{"nodes":[{"content":"Implements a server channel for remote calls that uses the TCP protocol to transmit messages.","nodes":[{"pos":[0,93],"content":"Implements a server channel for remote calls that uses the TCP protocol to transmit messages.","nodes":[{"content":"Implements a server channel for remote calls that uses the TCP protocol to transmit messages.","pos":[0,93]}]}],"pos":[1868,1962],"yaml":true},{"content":"Channels transport messages across remoting boundaries (for example, computers or application domains). The <xref:System.Runtime.Remoting.Channels.Tcp.TcpServerChannel> class transports messages using the TCP protocol.  \n  \n Channels are used by the .NET Framework remoting infrastructure to transport remote calls. When a client makes a call to a remote object, the call is serialized into a message that is sent by a client channel and received by a server channel. It is then deserialized and processed. Any returned values are transmitted by the server channel and received by the client channel.  \n  \n To perform additional processing of messages on the server side, you can specify an implementation of the <xref:System.Runtime.Remoting.Channels.IServerChannelSinkProvider> interface through which all messages processed by the <xref:System.Runtime.Remoting.Channels.Tcp.TcpServerChannel> instance are passed.  \n  \n The <xref:System.Runtime.Remoting.Channels.Tcp.TcpServerChannel> instance accepts messages serialized in either binary or SOAP format.  \n  \n A <xref:System.Runtime.Remoting.Channels.Tcp.TcpServerChannel> object has associated configuration properties that can be set at run time either in a configuration file (by invoking the static <xref:System.Runtime.Remoting.RemotingConfiguration.Configure%2A?displayProperty=fullName> method) or programmatically (by passing a <xref:System.Collections.IDictionary> collection to the <xref:System.Runtime.Remoting.Channels.Tcp.TcpServerChannel.%23ctor%2A> constructor). For a list of these configuration properties, see [Channel and Formatter Configuration Properties](http://msdn.microsoft.com/en-us/226ecf74-ebbd-4ea0-a701-dcf4441deefe).  \n  \n> [!NOTE]\n>  If the server computer is running Windows 95/98/Me, the <xref:System.Runtime.Remoting.Channels.Tcp.TcpServerChannel> cannot be specified as secure.","nodes":[{"pos":[0,218],"content":"Channels transport messages across remoting boundaries (for example, computers or application domains). The <xref:System.Runtime.Remoting.Channels.Tcp.TcpServerChannel> class transports messages using the TCP protocol.","nodes":[{"content":"Channels transport messages across remoting boundaries (for example, computers or application domains). The <xref:System.Runtime.Remoting.Channels.Tcp.TcpServerChannel> class transports messages using the TCP protocol.","pos":[0,218],"nodes":[{"content":"Channels transport messages across remoting boundaries (for example, computers or application domains).","pos":[0,103]},{"content":"The <ph id=\"ph1\">&lt;xref:System.Runtime.Remoting.Channels.Tcp.TcpServerChannel&gt;</ph> class transports messages using the TCP protocol.","pos":[104,218],"source":" The <xref:System.Runtime.Remoting.Channels.Tcp.TcpServerChannel> class transports messages using the TCP protocol."}]}]},{"pos":[225,600],"content":"Channels are used by the .NET Framework remoting infrastructure to transport remote calls. When a client makes a call to a remote object, the call is serialized into a message that is sent by a client channel and received by a server channel. It is then deserialized and processed. Any returned values are transmitted by the server channel and received by the client channel.","nodes":[{"content":"Channels are used by the .NET Framework remoting infrastructure to transport remote calls. When a client makes a call to a remote object, the call is serialized into a message that is sent by a client channel and received by a server channel. It is then deserialized and processed. Any returned values are transmitted by the server channel and received by the client channel.","pos":[0,375],"nodes":[{"content":"Channels are used by the .NET Framework remoting infrastructure to transport remote calls.","pos":[0,90]},{"content":"When a client makes a call to a remote object, the call is serialized into a message that is sent by a client channel and received by a server channel.","pos":[91,242]},{"content":"It is then deserialized and processed.","pos":[243,281]},{"content":"Any returned values are transmitted by the server channel and received by the client channel.","pos":[282,375]}]}]},{"pos":[607,915],"content":"To perform additional processing of messages on the server side, you can specify an implementation of the <xref:System.Runtime.Remoting.Channels.IServerChannelSinkProvider> interface through which all messages processed by the <xref:System.Runtime.Remoting.Channels.Tcp.TcpServerChannel> instance are passed.","nodes":[{"content":"To perform additional processing of messages on the server side, you can specify an implementation of the <ph id=\"ph1\">&lt;xref:System.Runtime.Remoting.Channels.IServerChannelSinkProvider&gt;</ph> interface through which all messages processed by the <ph id=\"ph2\">&lt;xref:System.Runtime.Remoting.Channels.Tcp.TcpServerChannel&gt;</ph> instance are passed.","pos":[0,308],"source":"To perform additional processing of messages on the server side, you can specify an implementation of the <xref:System.Runtime.Remoting.Channels.IServerChannelSinkProvider> interface through which all messages processed by the <xref:System.Runtime.Remoting.Channels.Tcp.TcpServerChannel> instance are passed."}]},{"pos":[922,1056],"content":"The <xref:System.Runtime.Remoting.Channels.Tcp.TcpServerChannel> instance accepts messages serialized in either binary or SOAP format.","nodes":[{"content":"The <ph id=\"ph1\">&lt;xref:System.Runtime.Remoting.Channels.Tcp.TcpServerChannel&gt;</ph> instance accepts messages serialized in either binary or SOAP format.","pos":[0,134],"source":"The <xref:System.Runtime.Remoting.Channels.Tcp.TcpServerChannel> instance accepts messages serialized in either binary or SOAP format."}]},{"pos":[1063,1700],"content":"A <xref:System.Runtime.Remoting.Channels.Tcp.TcpServerChannel> object has associated configuration properties that can be set at run time either in a configuration file (by invoking the static <xref:System.Runtime.Remoting.RemotingConfiguration.Configure%2A?displayProperty=fullName> method) or programmatically (by passing a <xref:System.Collections.IDictionary> collection to the <xref:System.Runtime.Remoting.Channels.Tcp.TcpServerChannel.%23ctor%2A> constructor). For a list of these configuration properties, see [Channel and Formatter Configuration Properties](http://msdn.microsoft.com/en-us/226ecf74-ebbd-4ea0-a701-dcf4441deefe).","nodes":[{"content":"A <ph id=\"ph1\">&lt;xref:System.Runtime.Remoting.Channels.Tcp.TcpServerChannel&gt;</ph> object has associated configuration properties that can be set at run time either in a configuration file (by invoking the static <ph id=\"ph2\">&lt;xref:System.Runtime.Remoting.RemotingConfiguration.Configure%2A?displayProperty=fullName&gt;</ph> method) or programmatically (by passing a <ph id=\"ph3\">&lt;xref:System.Collections.IDictionary&gt;</ph> collection to the <ph id=\"ph4\">&lt;xref:System.Runtime.Remoting.Channels.Tcp.TcpServerChannel.%23ctor%2A&gt;</ph> constructor).","pos":[0,467],"source":"A <xref:System.Runtime.Remoting.Channels.Tcp.TcpServerChannel> object has associated configuration properties that can be set at run time either in a configuration file (by invoking the static <xref:System.Runtime.Remoting.RemotingConfiguration.Configure%2A?displayProperty=fullName> method) or programmatically (by passing a <xref:System.Collections.IDictionary> collection to the <xref:System.Runtime.Remoting.Channels.Tcp.TcpServerChannel.%23ctor%2A> constructor)."},{"content":"For a list of these configuration properties, see <bpt id=\"p1\">[</bpt>Channel and Formatter Configuration Properties<ept id=\"p1\">](http://msdn.microsoft.com/en-us/226ecf74-ebbd-4ea0-a701-dcf4441deefe)</ept>.","pos":[468,637],"source":" For a list of these configuration properties, see [Channel and Formatter Configuration Properties](http://msdn.microsoft.com/en-us/226ecf74-ebbd-4ea0-a701-dcf4441deefe)."}]},{"pos":[1708,1866],"content":"[!NOTE]\n If the server computer is running Windows 95/98/Me, the <xref:System.Runtime.Remoting.Channels.Tcp.TcpServerChannel> cannot be specified as secure.","leadings":["","> "],"nodes":[{"content":"If the server computer is running Windows 95/98/Me, the <ph id=\"ph1\">&lt;xref:System.Runtime.Remoting.Channels.Tcp.TcpServerChannel&gt;</ph> cannot be specified as secure.","pos":[9,156],"source":" If the server computer is running Windows 95/98/Me, the <xref:System.Runtime.Remoting.Channels.Tcp.TcpServerChannel> cannot be specified as secure."}]}],"pos":[1973,3853],"yaml":true,"extradata":"MT"},{"content":"Initializes a new instance of the <xref href=\"System.Runtime.Remoting.Channels.Tcp.TcpServerChannel\"></xref> class that listens on the specified port.","nodes":[{"pos":[0,150],"content":"Initializes a new instance of the <ph id=\"ph1\">&lt;xref href=\"System.Runtime.Remoting.Channels.Tcp.TcpServerChannel\"&gt;&lt;/xref&gt;</ph> class that listens on the specified port.","source":"Initializes a new instance of the <xref href=\"System.Runtime.Remoting.Channels.Tcp.TcpServerChannel\"></xref> class that listens on the specified port."}],"pos":[6237,6388],"yaml":true},{"content":"To request that an available port be dynamically assigned, set the `port` parameter to 0 (zero).","nodes":[{"pos":[0,96],"content":"To request that an available port be dynamically assigned, set the <ph id=\"ph1\">`port`</ph> parameter to 0 (zero).","source":"To request that an available port be dynamically assigned, set the `port` parameter to 0 (zero)."}],"pos":[6399,6496],"yaml":true,"extradata":"MT"},{"content":"The port on which the channel listens.","nodes":[{"pos":[0,38],"content":"The port on which the channel listens.","nodes":[{"content":"The port on which the channel listens.","pos":[0,38]}]}],"pos":[6949,6988],"yaml":true},{"content":"Initializes a new instance of the <xref href=\"System.Runtime.Remoting.Channels.Tcp.TcpServerChannel\"></xref> class with the specified channel properties and sink.","nodes":[{"pos":[0,162],"content":"Initializes a new instance of the <ph id=\"ph1\">&lt;xref href=\"System.Runtime.Remoting.Channels.Tcp.TcpServerChannel\"&gt;&lt;/xref&gt;</ph> class with the specified channel properties and sink.","source":"Initializes a new instance of the <xref href=\"System.Runtime.Remoting.Channels.Tcp.TcpServerChannel\"></xref> class with the specified channel properties and sink."}],"pos":[8473,8636],"yaml":true},{"content":"For more information about channel configuration properties, see [Channel and Formatter Configuration Properties](http://msdn.microsoft.com/en-us/226ecf74-ebbd-4ea0-a701-dcf4441deefe).  \n  \n> [!NOTE]\n>  If the server computer is running Windows 95/98/Me, the <xref:System.Runtime.Remoting.Channels.Tcp.TcpServerChannel> cannot be specified as secure.  \n  \n If you do not require sink functionality, set the `sinkProvider` parameter to `null`.","nodes":[{"pos":[0,184],"content":"For more information about channel configuration properties, see <bpt id=\"p1\">[</bpt>Channel and Formatter Configuration Properties<ept id=\"p1\">](http://msdn.microsoft.com/en-us/226ecf74-ebbd-4ea0-a701-dcf4441deefe)</ept>.","source":"For more information about channel configuration properties, see [Channel and Formatter Configuration Properties](http://msdn.microsoft.com/en-us/226ecf74-ebbd-4ea0-a701-dcf4441deefe)."},{"pos":[192,350],"content":"[!NOTE]\n If the server computer is running Windows 95/98/Me, the <xref:System.Runtime.Remoting.Channels.Tcp.TcpServerChannel> cannot be specified as secure.","leadings":["","> "],"nodes":[{"content":"If the server computer is running Windows 95/98/Me, the <ph id=\"ph1\">&lt;xref:System.Runtime.Remoting.Channels.Tcp.TcpServerChannel&gt;</ph> cannot be specified as secure.","pos":[9,156],"source":" If the server computer is running Windows 95/98/Me, the <xref:System.Runtime.Remoting.Channels.Tcp.TcpServerChannel> cannot be specified as secure."}]},{"pos":[357,442],"content":"If you do not require sink functionality, set the <ph id=\"ph1\">`sinkProvider`</ph> parameter to <ph id=\"ph2\">`null`</ph>.","source":"If you do not require sink functionality, set the `sinkProvider` parameter to `null`."}],"pos":[8647,9097],"yaml":true,"extradata":"MT"},{"content":"A <xref href=\"System.Collections.IDictionary\"></xref> collection specifying values for configuration properties to be used by the channel.","nodes":[{"pos":[0,138],"content":"A <ph id=\"ph1\">&lt;xref href=\"System.Collections.IDictionary\"&gt;&lt;/xref&gt;</ph> collection specifying values for configuration properties to be used by the channel.","source":"A <xref href=\"System.Collections.IDictionary\"></xref> collection specifying values for configuration properties to be used by the channel."}],"pos":[9800,9939],"yaml":true},{"content":"The <xref href=\"System.Runtime.Remoting.Channels.IServerChannelSinkProvider\"></xref> implementation to be used by the channel.","nodes":[{"pos":[0,126],"content":"The <ph id=\"ph1\">&lt;xref href=\"System.Runtime.Remoting.Channels.IServerChannelSinkProvider\"&gt;&lt;/xref&gt;</ph> implementation to be used by the channel.","source":"The <xref href=\"System.Runtime.Remoting.Channels.IServerChannelSinkProvider\"></xref> implementation to be used by the channel."}],"pos":[10053,10180],"yaml":true},{"content":"A provided channel property was badly formatted.","nodes":[{"pos":[0,48],"content":"A provided channel property was badly formatted.","nodes":[{"content":"A provided channel property was badly formatted.","pos":[0,48]}]}],"pos":[10361,10410],"yaml":true},{"content":"Initializes a new instance of the <xref href=\"System.Runtime.Remoting.Channels.Tcp.TcpServerChannel\"></xref> class with the given name and that listens on the specified port.","nodes":[{"pos":[0,174],"content":"Initializes a new instance of the <ph id=\"ph1\">&lt;xref href=\"System.Runtime.Remoting.Channels.Tcp.TcpServerChannel\"&gt;&lt;/xref&gt;</ph> class with the given name and that listens on the specified port.","source":"Initializes a new instance of the <xref href=\"System.Runtime.Remoting.Channels.Tcp.TcpServerChannel\"></xref> class with the given name and that listens on the specified port."}],"pos":[11535,11710],"yaml":true},{"content":"This constructor sets the <xref:System.Runtime.Remoting.Channels.Tcp.TcpServerChannel.ChannelName%2A> property by using the `name` parameter. If you want to register more than one channel, each channel must have a unique name.  \n  \n To request that an available port be dynamically assigned, set the `port` parameter to 0 (zero).","nodes":[{"pos":[0,226],"content":"This constructor sets the <xref:System.Runtime.Remoting.Channels.Tcp.TcpServerChannel.ChannelName%2A> property by using the `name` parameter. If you want to register more than one channel, each channel must have a unique name.","nodes":[{"content":"This constructor sets the <ph id=\"ph1\">&lt;xref:System.Runtime.Remoting.Channels.Tcp.TcpServerChannel.ChannelName%2A&gt;</ph> property by using the <ph id=\"ph2\">`name`</ph> parameter.","pos":[0,141],"source":"This constructor sets the <xref:System.Runtime.Remoting.Channels.Tcp.TcpServerChannel.ChannelName%2A> property by using the `name` parameter."},{"content":"If you want to register more than one channel, each channel must have a unique name.","pos":[142,226]}]},{"pos":[233,329],"content":"To request that an available port be dynamically assigned, set the <ph id=\"ph1\">`port`</ph> parameter to 0 (zero).","source":"To request that an available port be dynamically assigned, set the `port` parameter to 0 (zero)."}],"pos":[11721,12055],"yaml":true,"extradata":"MT"},{"content":"The name of the channel.","nodes":[{"pos":[0,24],"content":"The name of the channel.","nodes":[{"content":"The name of the channel.","pos":[0,24]}]}],"pos":[12730,12755],"yaml":true},{"content":"The port on which the channel listens.","nodes":[{"pos":[0,38],"content":"The port on which the channel listens.","nodes":[{"content":"The port on which the channel listens.","pos":[0,38]}]}],"pos":[12814,12853],"yaml":true},{"content":"Initializes a new instance of the <xref href=\"System.Runtime.Remoting.Channels.Tcp.TcpServerChannel\"></xref> class with the specified channel properties, sink, and authorization provider.","nodes":[{"pos":[0,187],"content":"Initializes a new instance of the <ph id=\"ph1\">&lt;xref href=\"System.Runtime.Remoting.Channels.Tcp.TcpServerChannel\"&gt;&lt;/xref&gt;</ph> class with the specified channel properties, sink, and authorization provider.","source":"Initializes a new instance of the <xref href=\"System.Runtime.Remoting.Channels.Tcp.TcpServerChannel\"></xref> class with the specified channel properties, sink, and authorization provider."}],"pos":[14614,14802],"yaml":true},{"content":"For more information about channel configuration properties, see [Channel and Formatter Configuration Properties](http://msdn.microsoft.com/en-us/226ecf74-ebbd-4ea0-a701-dcf4441deefe).  \n  \n> [!NOTE]\n>  If the server computer is running Windows 95/98/Me, the <xref:System.Runtime.Remoting.Channels.Tcp.TcpServerChannel> cannot be specified as secure.","nodes":[{"pos":[0,184],"content":"For more information about channel configuration properties, see <bpt id=\"p1\">[</bpt>Channel and Formatter Configuration Properties<ept id=\"p1\">](http://msdn.microsoft.com/en-us/226ecf74-ebbd-4ea0-a701-dcf4441deefe)</ept>.","source":"For more information about channel configuration properties, see [Channel and Formatter Configuration Properties](http://msdn.microsoft.com/en-us/226ecf74-ebbd-4ea0-a701-dcf4441deefe)."},{"pos":[192,350],"content":"[!NOTE]\n If the server computer is running Windows 95/98/Me, the <xref:System.Runtime.Remoting.Channels.Tcp.TcpServerChannel> cannot be specified as secure.","leadings":["","> "],"nodes":[{"content":"If the server computer is running Windows 95/98/Me, the <ph id=\"ph1\">&lt;xref:System.Runtime.Remoting.Channels.Tcp.TcpServerChannel&gt;</ph> cannot be specified as secure.","pos":[9,156],"source":" If the server computer is running Windows 95/98/Me, the <xref:System.Runtime.Remoting.Channels.Tcp.TcpServerChannel> cannot be specified as secure."}]}],"pos":[14813,15169],"yaml":true,"extradata":"MT"},{"content":"A <xref href=\"System.Collections.IDictionary\"></xref> collection that specifies values for configuration properties to be used by the channel.","nodes":[{"pos":[0,142],"content":"A <ph id=\"ph1\">&lt;xref href=\"System.Collections.IDictionary\"&gt;&lt;/xref&gt;</ph> collection that specifies values for configuration properties to be used by the channel.","source":"A <xref href=\"System.Collections.IDictionary\"></xref> collection that specifies values for configuration properties to be used by the channel."}],"pos":[15515,15658],"yaml":true},{"content":"The <xref href=\"System.Runtime.Remoting.Channels.IServerChannelSinkProvider\"></xref> implementation to be used by the channel.","nodes":[{"pos":[0,126],"content":"The <ph id=\"ph1\">&lt;xref href=\"System.Runtime.Remoting.Channels.IServerChannelSinkProvider\"&gt;&lt;/xref&gt;</ph> implementation to be used by the channel.","source":"The <xref href=\"System.Runtime.Remoting.Channels.IServerChannelSinkProvider\"></xref> implementation to be used by the channel."}],"pos":[15772,15899],"yaml":true},{"content":"The <xref href=\"System.Runtime.Remoting.Channels.IAuthorizeRemotingConnection\"></xref> implementation to be used by the channel.","nodes":[{"pos":[0,128],"content":"The <ph id=\"ph1\">&lt;xref href=\"System.Runtime.Remoting.Channels.IAuthorizeRemotingConnection\"&gt;&lt;/xref&gt;</ph> implementation to be used by the channel.","source":"The <xref href=\"System.Runtime.Remoting.Channels.IAuthorizeRemotingConnection\"></xref> implementation to be used by the channel."}],"pos":[16020,16149],"yaml":true},{"content":"A provided channel property was badly formatted.","nodes":[{"pos":[0,48],"content":"A provided channel property was badly formatted.","nodes":[{"content":"A provided channel property was badly formatted.","pos":[0,48]}]}],"pos":[16330,16379],"yaml":true},{"content":"Initializes a new instance of the <xref href=\"System.Runtime.Remoting.Channels.Tcp.TcpServerChannel\"></xref> class with the given name, which listens on the specified port, and uses the specified sink.","nodes":[{"pos":[0,201],"content":"Initializes a new instance of the <ph id=\"ph1\">&lt;xref href=\"System.Runtime.Remoting.Channels.Tcp.TcpServerChannel\"&gt;&lt;/xref&gt;</ph> class with the given name, which listens on the specified port, and uses the specified sink.","source":"Initializes a new instance of the <xref href=\"System.Runtime.Remoting.Channels.Tcp.TcpServerChannel\"></xref> class with the given name, which listens on the specified port, and uses the specified sink."}],"pos":[17768,17970],"yaml":true},{"content":"This constructor sets the <xref:System.Runtime.Remoting.Channels.Tcp.TcpServerChannel.ChannelName%2A> property by using the `name` parameter. If you want to register more than one channel, each channel must have a unique name.  \n  \n To request that an available port be dynamically assigned, set the `port` parameter to 0 (zero).  \n  \n If you do not require sink functionality, set the `sinkProvider` parameter to `null`.","nodes":[{"pos":[0,226],"content":"This constructor sets the <xref:System.Runtime.Remoting.Channels.Tcp.TcpServerChannel.ChannelName%2A> property by using the `name` parameter. If you want to register more than one channel, each channel must have a unique name.","nodes":[{"content":"This constructor sets the <ph id=\"ph1\">&lt;xref:System.Runtime.Remoting.Channels.Tcp.TcpServerChannel.ChannelName%2A&gt;</ph> property by using the <ph id=\"ph2\">`name`</ph> parameter.","pos":[0,141],"source":"This constructor sets the <xref:System.Runtime.Remoting.Channels.Tcp.TcpServerChannel.ChannelName%2A> property by using the `name` parameter."},{"content":"If you want to register more than one channel, each channel must have a unique name.","pos":[142,226]}]},{"pos":[233,329],"content":"To request that an available port be dynamically assigned, set the <ph id=\"ph1\">`port`</ph> parameter to 0 (zero).","source":"To request that an available port be dynamically assigned, set the `port` parameter to 0 (zero)."},{"pos":[336,421],"content":"If you do not require sink functionality, set the <ph id=\"ph1\">`sinkProvider`</ph> parameter to <ph id=\"ph2\">`null`</ph>.","source":"If you do not require sink functionality, set the `sinkProvider` parameter to `null`."}],"pos":[17981,18409],"yaml":true,"extradata":"MT"},{"content":"The name of the channel.","nodes":[{"pos":[0,24],"content":"The name of the channel.","nodes":[{"content":"The name of the channel.","pos":[0,24]}]}],"pos":[19150,19175],"yaml":true},{"content":"The port on which the channel listens.","nodes":[{"pos":[0,38],"content":"The port on which the channel listens.","nodes":[{"content":"The port on which the channel listens.","pos":[0,38]}]}],"pos":[19234,19273],"yaml":true},{"content":"The <xref href=\"System.Runtime.Remoting.Channels.IServerChannelSinkProvider\"></xref> implementation to be used by the channel.","nodes":[{"pos":[0,126],"content":"The <ph id=\"ph1\">&lt;xref href=\"System.Runtime.Remoting.Channels.IServerChannelSinkProvider\"&gt;&lt;/xref&gt;</ph> implementation to be used by the channel.","source":"The <xref href=\"System.Runtime.Remoting.Channels.IServerChannelSinkProvider\"></xref> implementation to be used by the channel."}],"pos":[19387,19514],"yaml":true},{"content":"Gets channel-specific data.","nodes":[{"pos":[0,27],"content":"Gets channel-specific data.","nodes":[{"content":"Gets channel-specific data.","pos":[0,27]}]}],"pos":[20598,20626],"yaml":true},{"content":"Although returned as an instance of <xref:System.Object?displayProperty=fullName>, the value of this property can be cast to an instance of <xref:System.Runtime.Remoting.Channels.ChannelDataStore> describing the channel to which the <xref:System.Runtime.Remoting.Channels.Tcp.TcpServerChannel> object listens.","nodes":[{"pos":[0,309],"content":"Although returned as an instance of <xref:System.Object?displayProperty=fullName>, the value of this property can be cast to an instance of <xref:System.Runtime.Remoting.Channels.ChannelDataStore> describing the channel to which the <xref:System.Runtime.Remoting.Channels.Tcp.TcpServerChannel> object listens.","nodes":[{"content":"Although returned as an instance of <ph id=\"ph1\">&lt;xref:System.Object?displayProperty=fullName&gt;</ph>, the value of this property can be cast to an instance of <ph id=\"ph2\">&lt;xref:System.Runtime.Remoting.Channels.ChannelDataStore&gt;</ph> describing the channel to which the <ph id=\"ph3\">&lt;xref:System.Runtime.Remoting.Channels.Tcp.TcpServerChannel&gt;</ph> object listens.","pos":[0,309],"source":"Although returned as an instance of <xref:System.Object?displayProperty=fullName>, the value of this property can be cast to an instance of <xref:System.Runtime.Remoting.Channels.ChannelDataStore> describing the channel to which the <xref:System.Runtime.Remoting.Channels.Tcp.TcpServerChannel> object listens."}]}],"pos":[20637,20947],"yaml":true,"extradata":"MT"},{"content":"A <xref href=\"System.Runtime.Remoting.Channels.ChannelDataStore\"></xref> instance containing channel-specific data.","nodes":[{"pos":[0,115],"content":"A <ph id=\"ph1\">&lt;xref href=\"System.Runtime.Remoting.Channels.ChannelDataStore\"&gt;&lt;/xref&gt;</ph> instance containing channel-specific data.","source":"A <xref href=\"System.Runtime.Remoting.Channels.ChannelDataStore\"></xref> instance containing channel-specific data."}],"pos":[21378,21494],"yaml":true},{"content":"Gets the name of the current channel.","nodes":[{"pos":[0,37],"content":"Gets the name of the current channel.","nodes":[{"content":"Gets the name of the current channel.","pos":[0,37]}]}],"pos":[22584,22622],"yaml":true},{"content":"Every registered channel has a unique name. The name is used to retrieve a specific channel when calling <xref:System.Runtime.Remoting.Channels.ChannelServices.GetChannel%2A>.","nodes":[{"pos":[0,175],"content":"Every registered channel has a unique name. The name is used to retrieve a specific channel when calling <xref:System.Runtime.Remoting.Channels.ChannelServices.GetChannel%2A>.","nodes":[{"content":"Every registered channel has a unique name. The name is used to retrieve a specific channel when calling <xref:System.Runtime.Remoting.Channels.ChannelServices.GetChannel%2A>.","pos":[0,175],"nodes":[{"content":"Every registered channel has a unique name.","pos":[0,43]},{"content":"The name is used to retrieve a specific channel when calling <ph id=\"ph1\">&lt;xref:System.Runtime.Remoting.Channels.ChannelServices.GetChannel%2A&gt;</ph>.","pos":[44,175],"source":" The name is used to retrieve a specific channel when calling <xref:System.Runtime.Remoting.Channels.ChannelServices.GetChannel%2A>."}]}]}],"pos":[22633,22809],"yaml":true,"extradata":"MT"},{"content":"A <xref href=\"System.String\"></xref> instance that contains the name of the channel.","nodes":[{"pos":[0,84],"content":"A <ph id=\"ph1\">&lt;xref href=\"System.String\"&gt;&lt;/xref&gt;</ph> instance that contains the name of the channel.","source":"A <xref href=\"System.String\"></xref> instance that contains the name of the channel."}],"pos":[23240,23325],"yaml":true},{"content":"Gets the priority of the current channel.","nodes":[{"pos":[0,41],"content":"Gets the priority of the current channel.","nodes":[{"content":"Gets the priority of the current channel.","pos":[0,41]}]}],"pos":[24439,24481],"yaml":true},{"content":"The priority controls the order in which channel data appears in a <xref:System.Runtime.Remoting.ObjRef> instance; higher priority channels appear before lower priority channels. Clients try to connect to the server channels in the order that they are listed in the <xref:System.Runtime.Remoting.ObjRef> instance. The default priority is 1; negative priorities are allowed.","nodes":[{"pos":[0,373],"content":"The priority controls the order in which channel data appears in a <xref:System.Runtime.Remoting.ObjRef> instance; higher priority channels appear before lower priority channels. Clients try to connect to the server channels in the order that they are listed in the <xref:System.Runtime.Remoting.ObjRef> instance. The default priority is 1; negative priorities are allowed.","nodes":[{"content":"The priority controls the order in which channel data appears in a <xref:System.Runtime.Remoting.ObjRef> instance; higher priority channels appear before lower priority channels. Clients try to connect to the server channels in the order that they are listed in the <xref:System.Runtime.Remoting.ObjRef> instance. The default priority is 1; negative priorities are allowed.","pos":[0,373],"nodes":[{"content":"The priority controls the order in which channel data appears in a <ph id=\"ph1\">&lt;xref:System.Runtime.Remoting.ObjRef&gt;</ph> instance; higher priority channels appear before lower priority channels.","pos":[0,178],"source":"The priority controls the order in which channel data appears in a <xref:System.Runtime.Remoting.ObjRef> instance; higher priority channels appear before lower priority channels."},{"content":"Clients try to connect to the server channels in the order that they are listed in the <ph id=\"ph1\">&lt;xref:System.Runtime.Remoting.ObjRef&gt;</ph> instance.","pos":[179,313],"source":" Clients try to connect to the server channels in the order that they are listed in the <xref:System.Runtime.Remoting.ObjRef> instance."},{"content":"The default priority is 1; negative priorities are allowed.","pos":[314,373]}]}]}],"pos":[24492,24866],"yaml":true,"extradata":"MT"},{"content":"An integer that represents the priority assigned to the channel.","nodes":[{"pos":[0,64],"content":"An integer that represents the priority assigned to the channel.","nodes":[{"content":"An integer that represents the priority assigned to the channel.","pos":[0,64]}]}],"pos":[25297,25362],"yaml":true},{"content":"Returns the URI of the current channel.","nodes":[{"pos":[0,39],"content":"Returns the URI of the current channel.","nodes":[{"content":"Returns the URI of the current channel.","pos":[0,39]}]}],"pos":[26472,26512],"yaml":true},{"content":"The URI of the current channel.","nodes":[{"pos":[0,31],"content":"The URI of the current channel.","nodes":[{"content":"The URI of the current channel.","pos":[0,31]}]}],"pos":[27116,27148],"yaml":true},{"content":"Returns an array of all the URLs for an object with the specified URI, hosted on the current <xref href=\"System.Runtime.Remoting.Channels.Tcp.TcpChannel\"></xref> instance.","nodes":[{"pos":[0,171],"content":"Returns an array of all the URLs for an object with the specified URI, hosted on the current <ph id=\"ph1\">&lt;xref href=\"System.Runtime.Remoting.Channels.Tcp.TcpChannel\"&gt;&lt;/xref&gt;</ph> instance.","source":"Returns an array of all the URLs for an object with the specified URI, hosted on the current <xref href=\"System.Runtime.Remoting.Channels.Tcp.TcpChannel\"></xref> instance."}],"pos":[28319,28491],"yaml":true},{"content":"This method is used by <xref:System.Runtime.Remoting.Channels.ChannelServices.GetUrlsForObject%2A?displayProperty=fullName>.","nodes":[{"pos":[0,124],"content":"This method is used by <xref:System.Runtime.Remoting.Channels.ChannelServices.GetUrlsForObject%2A?displayProperty=fullName>.","nodes":[{"content":"This method is used by <ph id=\"ph1\">&lt;xref:System.Runtime.Remoting.Channels.ChannelServices.GetUrlsForObject%2A?displayProperty=fullName&gt;</ph>.","pos":[0,124],"source":"This method is used by <xref:System.Runtime.Remoting.Channels.ChannelServices.GetUrlsForObject%2A?displayProperty=fullName>."}]}],"pos":[28502,28627],"yaml":true,"extradata":"MT"},{"content":"The URI of the object for which URLs are required.","nodes":[{"pos":[0,50],"content":"The URI of the object for which URLs are required.","nodes":[{"content":"The URI of the object for which URLs are required.","pos":[0,50]}]}],"pos":[29378,29429],"yaml":true},{"content":"An array of the URLs for an object with the specified URI, hosted on the current <xref href=\"System.Runtime.Remoting.Channels.Tcp.TcpChannel\"></xref> instance.","nodes":[{"pos":[0,159],"content":"An array of the URLs for an object with the specified URI, hosted on the current <ph id=\"ph1\">&lt;xref href=\"System.Runtime.Remoting.Channels.Tcp.TcpChannel\"&gt;&lt;/xref&gt;</ph> instance.","source":"An array of the URLs for an object with the specified URI, hosted on the current <xref href=\"System.Runtime.Remoting.Channels.Tcp.TcpChannel\"></xref> instance."}],"pos":[29488,29648],"yaml":true},{"content":"Gets or sets a Boolean value that indicates whether the current channel is secure.","nodes":[{"pos":[0,82],"content":"Gets or sets a Boolean value that indicates whether the current channel is secure.","nodes":[{"content":"Gets or sets a Boolean value that indicates whether the current channel is secure.","pos":[0,82]}]}],"pos":[30728,30811],"yaml":true},{"content":"A Boolean value that indicates whether the current instance is secure.","nodes":[{"pos":[0,70],"content":"A Boolean value that indicates whether the current instance is secure.","nodes":[{"content":"A Boolean value that indicates whether the current instance is secure.","pos":[0,70]}]}],"pos":[30928,30999],"yaml":true},{"content":"Extracts the channel URI and the remote well-known object URI from the specified URL.","nodes":[{"pos":[0,85],"content":"Extracts the channel URI and the remote well-known object URI from the specified URL.","nodes":[{"content":"Extracts the channel URI and the remote well-known object URI from the specified URL.","pos":[0,85]}]}],"pos":[32187,32273],"yaml":true},{"content":"The URI of an object is a value that uniquely identifies a specific object instance.","nodes":[{"pos":[0,84],"content":"The URI of an object is a value that uniquely identifies a specific object instance.","nodes":[{"content":"The URI of an object is a value that uniquely identifies a specific object instance.","pos":[0,84]}]}],"pos":[32284,32369],"yaml":true,"extradata":"MT"},{"content":"The URL from which to extract the URI of the remote well-known object.","nodes":[{"pos":[0,70],"content":"The URL from which to extract the URI of the remote well-known object.","nodes":[{"content":"The URL from which to extract the URI of the remote well-known object.","pos":[0,70]}]}],"pos":[32982,33053],"yaml":true},{"content":"When this method returns, contains a <xref href=\"System.String\"></xref> instance that holds the URI of the remote well-known object. This parameter is passed uninitialized.","nodes":[{"pos":[0,172],"content":"When this method returns, contains a <xref href=\"System.String\"></xref> instance that holds the URI of the remote well-known object. This parameter is passed uninitialized.","nodes":[{"content":"When this method returns, contains a <ph id=\"ph1\">&lt;xref href=\"System.String\"&gt;&lt;/xref&gt;</ph> instance that holds the URI of the remote well-known object.","pos":[0,132],"source":"When this method returns, contains a <xref href=\"System.String\"></xref> instance that holds the URI of the remote well-known object."},{"content":"This parameter is passed uninitialized.","pos":[133,172]}]}],"pos":[33118,33291],"yaml":true},{"content":"The URI of the current channel.","nodes":[{"pos":[0,31],"content":"The URI of the current channel.","nodes":[{"content":"The URI of the current channel.","pos":[0,31]}]}],"pos":[33348,33380],"yaml":true},{"content":"Instructs the current channel to start listening for requests.","nodes":[{"pos":[0,62],"content":"Instructs the current channel to start listening for requests.","nodes":[{"content":"Instructs the current channel to start listening for requests.","pos":[0,62]}]}],"pos":[34549,34612],"yaml":true},{"content":"It is not necessary to call this method to begin listening on a newly initialized channel.  \n  \n Use this method to restart listening on a channel after the <xref:System.Runtime.Remoting.Channels.Tcp.TcpServerChannel.StopListening%2A> method has been called to stop listening on the channel.  \n  \n If your channel uses a dynamically assigned port number, your port number might change when you restart listening.  \n  \n The data object can be used to pass a specific initialization state to the channel. If you do not want to pass a specific state to the channel, set `data` to `null`.","nodes":[{"pos":[0,90],"content":"It is not necessary to call this method to begin listening on a newly initialized channel.","nodes":[{"content":"It is not necessary to call this method to begin listening on a newly initialized channel.","pos":[0,90]}]},{"pos":[97,291],"content":"Use this method to restart listening on a channel after the <xref:System.Runtime.Remoting.Channels.Tcp.TcpServerChannel.StopListening%2A> method has been called to stop listening on the channel.","nodes":[{"content":"Use this method to restart listening on a channel after the <ph id=\"ph1\">&lt;xref:System.Runtime.Remoting.Channels.Tcp.TcpServerChannel.StopListening%2A&gt;</ph> method has been called to stop listening on the channel.","pos":[0,194],"source":"Use this method to restart listening on a channel after the <xref:System.Runtime.Remoting.Channels.Tcp.TcpServerChannel.StopListening%2A> method has been called to stop listening on the channel."}]},{"pos":[298,412],"content":"If your channel uses a dynamically assigned port number, your port number might change when you restart listening.","nodes":[{"content":"If your channel uses a dynamically assigned port number, your port number might change when you restart listening.","pos":[0,114]}]},{"pos":[419,584],"content":"The data object can be used to pass a specific initialization state to the channel. If you do not want to pass a specific state to the channel, set `data` to `null`.","nodes":[{"content":"The data object can be used to pass a specific initialization state to the channel.","pos":[0,83]},{"content":"If you do not want to pass a specific state to the channel, set <ph id=\"ph1\">`data`</ph> to <ph id=\"ph2\">`null`</ph>.","pos":[84,165],"source":" If you do not want to pass a specific state to the channel, set `data` to `null`."}]}],"pos":[34623,35216],"yaml":true,"extradata":"MT"},{"content":"Optional initialization information.","nodes":[{"pos":[0,36],"content":"Optional initialization information.","nodes":[{"content":"Optional initialization information.","pos":[0,36]}]}],"pos":[35357,35394],"yaml":true},{"content":"Instructs the current channel to stop listening for requests.","nodes":[{"pos":[0,61],"content":"Instructs the current channel to stop listening for requests.","nodes":[{"content":"Instructs the current channel to stop listening for requests.","pos":[0,61]}]}],"pos":[36566,36628],"yaml":true},{"content":"Use this method to stop listening on a channel. To restart listening, use the <xref:System.Runtime.Remoting.Channels.Tcp.TcpServerChannel.StartListening%2A> method.  \n  \n If your channel uses a dynamically assigned port number, your port number might change when you restart listening.  \n  \n The data object can be used to pass a specific initialization state to the channel. If you do not want to pass a specific state to the channel, set `data` to `null`.","nodes":[{"pos":[0,164],"content":"Use this method to stop listening on a channel. To restart listening, use the <xref:System.Runtime.Remoting.Channels.Tcp.TcpServerChannel.StartListening%2A> method.","nodes":[{"content":"Use this method to stop listening on a channel. To restart listening, use the <xref:System.Runtime.Remoting.Channels.Tcp.TcpServerChannel.StartListening%2A> method.","pos":[0,164],"nodes":[{"content":"Use this method to stop listening on a channel.","pos":[0,47]},{"content":"To restart listening, use the <ph id=\"ph1\">&lt;xref:System.Runtime.Remoting.Channels.Tcp.TcpServerChannel.StartListening%2A&gt;</ph> method.","pos":[48,164],"source":" To restart listening, use the <xref:System.Runtime.Remoting.Channels.Tcp.TcpServerChannel.StartListening%2A> method."}]}]},{"pos":[171,285],"content":"If your channel uses a dynamically assigned port number, your port number might change when you restart listening.","nodes":[{"content":"If your channel uses a dynamically assigned port number, your port number might change when you restart listening.","pos":[0,114]}]},{"pos":[292,457],"content":"The data object can be used to pass a specific initialization state to the channel. If you do not want to pass a specific state to the channel, set `data` to `null`.","nodes":[{"content":"The data object can be used to pass a specific initialization state to the channel.","pos":[0,83]},{"content":"If you do not want to pass a specific state to the channel, set <ph id=\"ph1\">`data`</ph> to <ph id=\"ph2\">`null`</ph>.","pos":[84,165],"source":" If you do not want to pass a specific state to the channel, set `data` to `null`."}]}],"pos":[36639,37103],"yaml":true,"extradata":"MT"},{"content":"Optional state information for the channel.","nodes":[{"pos":[0,43],"content":"Optional state information for the channel.","nodes":[{"content":"Optional state information for the channel.","pos":[0,43]}]}],"pos":[37243,37287],"yaml":true}],"content":"### YamlMime:ManagedReference\nitems:\n- uid: System.Runtime.Remoting.Channels.Tcp.TcpServerChannel\n  commentId: T:System.Runtime.Remoting.Channels.Tcp.TcpServerChannel\n  id: TcpServerChannel\n  children:\n  - System.Runtime.Remoting.Channels.Tcp.TcpServerChannel.#ctor(System.Int32)\n  - System.Runtime.Remoting.Channels.Tcp.TcpServerChannel.#ctor(System.Collections.IDictionary,System.Runtime.Remoting.Channels.IServerChannelSinkProvider)\n  - System.Runtime.Remoting.Channels.Tcp.TcpServerChannel.#ctor(System.String,System.Int32)\n  - System.Runtime.Remoting.Channels.Tcp.TcpServerChannel.#ctor(System.Collections.IDictionary,System.Runtime.Remoting.Channels.IServerChannelSinkProvider,System.Runtime.Remoting.Channels.IAuthorizeRemotingConnection)\n  - System.Runtime.Remoting.Channels.Tcp.TcpServerChannel.#ctor(System.String,System.Int32,System.Runtime.Remoting.Channels.IServerChannelSinkProvider)\n  - System.Runtime.Remoting.Channels.Tcp.TcpServerChannel.ChannelData\n  - System.Runtime.Remoting.Channels.Tcp.TcpServerChannel.ChannelName\n  - System.Runtime.Remoting.Channels.Tcp.TcpServerChannel.ChannelPriority\n  - System.Runtime.Remoting.Channels.Tcp.TcpServerChannel.GetChannelUri\n  - System.Runtime.Remoting.Channels.Tcp.TcpServerChannel.GetUrlsForUri(System.String)\n  - System.Runtime.Remoting.Channels.Tcp.TcpServerChannel.IsSecured\n  - System.Runtime.Remoting.Channels.Tcp.TcpServerChannel.Parse(System.String,System.String@)\n  - System.Runtime.Remoting.Channels.Tcp.TcpServerChannel.StartListening(System.Object)\n  - System.Runtime.Remoting.Channels.Tcp.TcpServerChannel.StopListening(System.Object)\n  langs:\n  - csharp\n  name: TcpServerChannel\n  nameWithType: TcpServerChannel\n  fullName: System.Runtime.Remoting.Channels.Tcp.TcpServerChannel\n  type: Class\n  assemblies:\n  - System.Runtime.Remoting\n  namespace: System.Runtime.Remoting.Channels.Tcp\n  summary: Implements a server channel for remote calls that uses the TCP protocol to transmit messages.\n  remarks: \"Channels transport messages across remoting boundaries (for example, computers or application domains). The <xref:System.Runtime.Remoting.Channels.Tcp.TcpServerChannel> class transports messages using the TCP protocol.  \\n  \\n Channels are used by the .NET Framework remoting infrastructure to transport remote calls. When a client makes a call to a remote object, the call is serialized into a message that is sent by a client channel and received by a server channel. It is then deserialized and processed. Any returned values are transmitted by the server channel and received by the client channel.  \\n  \\n To perform additional processing of messages on the server side, you can specify an implementation of the <xref:System.Runtime.Remoting.Channels.IServerChannelSinkProvider> interface through which all messages processed by the <xref:System.Runtime.Remoting.Channels.Tcp.TcpServerChannel> instance are passed.  \\n  \\n The <xref:System.Runtime.Remoting.Channels.Tcp.TcpServerChannel> instance accepts messages serialized in either binary or SOAP format.  \\n  \\n A <xref:System.Runtime.Remoting.Channels.Tcp.TcpServerChannel> object has associated configuration properties that can be set at run time either in a configuration file (by invoking the static <xref:System.Runtime.Remoting.RemotingConfiguration.Configure%2A?displayProperty=fullName> method) or programmatically (by passing a <xref:System.Collections.IDictionary> collection to the <xref:System.Runtime.Remoting.Channels.Tcp.TcpServerChannel.%23ctor%2A> constructor). For a list of these configuration properties, see [Channel and Formatter Configuration Properties](http://msdn.microsoft.com/en-us/226ecf74-ebbd-4ea0-a701-dcf4441deefe).  \\n  \\n> [!NOTE]\\n>  If the server computer is running Windows 95/98/Me, the <xref:System.Runtime.Remoting.Channels.Tcp.TcpServerChannel> cannot be specified as secure.\"\n  example:\n  - \"The following code example shows the use of a remotable type.  \\n  \\n [!code-cpp[Remoting_TcpInfo#10](~/samples/snippets/cpp/VS_Snippets_Remoting/Remoting_TcpInfo/CPP/remotable.cpp#10)]\\n [!code-csharp[Remoting_TcpInfo#10](~/samples/snippets/csharp/VS_Snippets_Remoting/Remoting_TcpInfo/CS/remotable.cs#10)]  \\n  \\n The following code example shows the use of the <xref:System.Runtime.Remoting.Channels.Tcp.TcpServerChannel> class to expose a remotable type.  \\n  \\n [!code-cpp[Remoting_TcpInfo#30](~/samples/snippets/cpp/VS_Snippets_Remoting/Remoting_TcpInfo/CPP/server.cpp#30)]\\n [!code-csharp[Remoting_TcpInfo#30](~/samples/snippets/csharp/VS_Snippets_Remoting/Remoting_TcpInfo/CS/server.cs#30)]\"\n  syntax:\n    content: 'public class TcpServerChannel : System.Runtime.Remoting.Channels.IChannelReceiver, System.Runtime.Remoting.Channels.ISecurableChannel'\n  inheritance:\n  - System.Object\n  implements:\n  - System.Runtime.Remoting.Channels.IChannelReceiver\n  - System.Runtime.Remoting.Channels.ISecurableChannel\n  inheritedMembers:\n  - System.Object.Equals(System.Object)\n  - System.Object.Equals(System.Object,System.Object)\n  - System.Object.GetHashCode\n  - System.Object.GetType\n  - System.Object.MemberwiseClone\n  - System.Object.ReferenceEquals(System.Object,System.Object)\n  - System.Object.ToString\n  version:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Runtime.Remoting.Channels.Tcp/TcpServerChannel.xml\n  ms.technology:\n  - dotnet-standard\n  manager: ghogen\n- uid: System.Runtime.Remoting.Channels.Tcp.TcpServerChannel.#ctor(System.Int32)\n  commentId: M:System.Runtime.Remoting.Channels.Tcp.TcpServerChannel.#ctor(System.Int32)\n  id: '#ctor(System.Int32)'\n  parent: System.Runtime.Remoting.Channels.Tcp.TcpServerChannel\n  langs:\n  - csharp\n  name: TcpServerChannel(Int32)\n  nameWithType: TcpServerChannel.TcpServerChannel(Int32)\n  fullName: TcpServerChannel.TcpServerChannel(Int32)\n  type: Constructor\n  assemblies:\n  - System.Runtime.Remoting\n  namespace: System.Runtime.Remoting.Channels.Tcp\n  summary: Initializes a new instance of the <xref href=\"System.Runtime.Remoting.Channels.Tcp.TcpServerChannel\"></xref> class that listens on the specified port.\n  remarks: To request that an available port be dynamically assigned, set the `port` parameter to 0 (zero).\n  example:\n  - \"The following code example shows the use of this constructor.  \\n  \\n [!code-cpp[Remoting_TcpInfo#31](~/samples/snippets/cpp/VS_Snippets_Remoting/Remoting_TcpInfo/CPP/server.cpp#31)]\\n [!code-csharp[Remoting_TcpInfo#31](~/samples/snippets/csharp/VS_Snippets_Remoting/Remoting_TcpInfo/CS/server.cs#31)]\"\n  syntax:\n    content: public TcpServerChannel (int port);\n    parameters:\n    - id: port\n      type: System.Int32\n      description: The port on which the channel listens.\n  overload: System.Runtime.Remoting.Channels.Tcp.TcpServerChannel.#ctor*\n  exceptions: []\n  version:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Runtime.Remoting.Channels.Tcp/TcpServerChannel.xml\n  ms.technology:\n  - dotnet-standard\n  manager: ghogen\n- uid: System.Runtime.Remoting.Channels.Tcp.TcpServerChannel.#ctor(System.Collections.IDictionary,System.Runtime.Remoting.Channels.IServerChannelSinkProvider)\n  commentId: M:System.Runtime.Remoting.Channels.Tcp.TcpServerChannel.#ctor(System.Collections.IDictionary,System.Runtime.Remoting.Channels.IServerChannelSinkProvider)\n  id: '#ctor(System.Collections.IDictionary,System.Runtime.Remoting.Channels.IServerChannelSinkProvider)'\n  parent: System.Runtime.Remoting.Channels.Tcp.TcpServerChannel\n  langs:\n  - csharp\n  name: TcpServerChannel(IDictionary, IServerChannelSinkProvider)\n  nameWithType: TcpServerChannel.TcpServerChannel(IDictionary, IServerChannelSinkProvider)\n  fullName: TcpServerChannel.TcpServerChannel(IDictionary, IServerChannelSinkProvider)\n  type: Constructor\n  assemblies:\n  - System.Runtime.Remoting\n  namespace: System.Runtime.Remoting.Channels.Tcp\n  summary: Initializes a new instance of the <xref href=\"System.Runtime.Remoting.Channels.Tcp.TcpServerChannel\"></xref> class with the specified channel properties and sink.\n  remarks: \"For more information about channel configuration properties, see [Channel and Formatter Configuration Properties](http://msdn.microsoft.com/en-us/226ecf74-ebbd-4ea0-a701-dcf4441deefe).  \\n  \\n> [!NOTE]\\n>  If the server computer is running Windows 95/98/Me, the <xref:System.Runtime.Remoting.Channels.Tcp.TcpServerChannel> cannot be specified as secure.  \\n  \\n If you do not require sink functionality, set the `sinkProvider` parameter to `null`.\"\n  example:\n  - \"The following code example shows the use of this constructor to create a <xref:System.Runtime.Remoting.Channels.Tcp.TcpServerChannel> object with specific configuration properties.  \\n  \\n [!code-cpp[Remoting_TcpAuth#21](~/samples/snippets/cpp/VS_Snippets_Remoting/Remoting_TcpAuth/CPP/server.cpp#21)]\\n [!code-csharp[Remoting_TcpAuth#21](~/samples/snippets/csharp/VS_Snippets_Remoting/Remoting_TcpAuth/CS/server.cs#21)]\"\n  syntax:\n    content: public TcpServerChannel (System.Collections.IDictionary properties, System.Runtime.Remoting.Channels.IServerChannelSinkProvider sinkProvider);\n    parameters:\n    - id: properties\n      type: System.Collections.IDictionary\n      description: A <xref href=\"System.Collections.IDictionary\"></xref> collection specifying values for configuration properties to be used by the channel.\n    - id: sinkProvider\n      type: System.Runtime.Remoting.Channels.IServerChannelSinkProvider\n      description: The <xref href=\"System.Runtime.Remoting.Channels.IServerChannelSinkProvider\"></xref> implementation to be used by the channel.\n  overload: System.Runtime.Remoting.Channels.Tcp.TcpServerChannel.#ctor*\n  exceptions:\n  - type: System.ArgumentException\n    commentId: T:System.ArgumentException\n    description: A provided channel property was badly formatted.\n  version:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Runtime.Remoting.Channels.Tcp/TcpServerChannel.xml\n  ms.technology:\n  - dotnet-standard\n  manager: ghogen\n- uid: System.Runtime.Remoting.Channels.Tcp.TcpServerChannel.#ctor(System.String,System.Int32)\n  commentId: M:System.Runtime.Remoting.Channels.Tcp.TcpServerChannel.#ctor(System.String,System.Int32)\n  id: '#ctor(System.String,System.Int32)'\n  parent: System.Runtime.Remoting.Channels.Tcp.TcpServerChannel\n  langs:\n  - csharp\n  name: TcpServerChannel(String, Int32)\n  nameWithType: TcpServerChannel.TcpServerChannel(String, Int32)\n  fullName: TcpServerChannel.TcpServerChannel(String, Int32)\n  type: Constructor\n  assemblies:\n  - System.Runtime.Remoting\n  namespace: System.Runtime.Remoting.Channels.Tcp\n  summary: Initializes a new instance of the <xref href=\"System.Runtime.Remoting.Channels.Tcp.TcpServerChannel\"></xref> class with the given name and that listens on the specified port.\n  remarks: \"This constructor sets the <xref:System.Runtime.Remoting.Channels.Tcp.TcpServerChannel.ChannelName%2A> property by using the `name` parameter. If you want to register more than one channel, each channel must have a unique name.  \\n  \\n To request that an available port be dynamically assigned, set the `port` parameter to 0 (zero).\"\n  example:\n  - \"The following code example shows how to construct a <xref:System.Runtime.Remoting.Channels.Tcp.TcpServerChannel>.  \\n  \\n [!code-cpp[System.Runtime.Remoting.Channels.Tcp.TcpServerChannel.2#21](~/samples/snippets/cpp/VS_Snippets_Remoting/System.Runtime.Remoting.Channels.Tcp.TcpServerChannel.2/CPP/server.cpp#21)]\\n [!code-csharp[System.Runtime.Remoting.Channels.Tcp.TcpServerChannel.2#21](~/samples/snippets/csharp/VS_Snippets_Remoting/System.Runtime.Remoting.Channels.Tcp.TcpServerChannel.2/CS/server.cs#21)]\"\n  syntax:\n    content: public TcpServerChannel (string name, int port);\n    parameters:\n    - id: name\n      type: System.String\n      description: The name of the channel.\n    - id: port\n      type: System.Int32\n      description: The port on which the channel listens.\n  overload: System.Runtime.Remoting.Channels.Tcp.TcpServerChannel.#ctor*\n  exceptions: []\n  version:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Runtime.Remoting.Channels.Tcp/TcpServerChannel.xml\n  ms.technology:\n  - dotnet-standard\n  manager: ghogen\n- uid: System.Runtime.Remoting.Channels.Tcp.TcpServerChannel.#ctor(System.Collections.IDictionary,System.Runtime.Remoting.Channels.IServerChannelSinkProvider,System.Runtime.Remoting.Channels.IAuthorizeRemotingConnection)\n  commentId: M:System.Runtime.Remoting.Channels.Tcp.TcpServerChannel.#ctor(System.Collections.IDictionary,System.Runtime.Remoting.Channels.IServerChannelSinkProvider,System.Runtime.Remoting.Channels.IAuthorizeRemotingConnection)\n  id: '#ctor(System.Collections.IDictionary,System.Runtime.Remoting.Channels.IServerChannelSinkProvider,System.Runtime.Remoting.Channels.IAuthorizeRemotingConnection)'\n  parent: System.Runtime.Remoting.Channels.Tcp.TcpServerChannel\n  langs:\n  - csharp\n  name: TcpServerChannel(IDictionary, IServerChannelSinkProvider, IAuthorizeRemotingConnection)\n  nameWithType: TcpServerChannel.TcpServerChannel(IDictionary, IServerChannelSinkProvider, IAuthorizeRemotingConnection)\n  fullName: TcpServerChannel.TcpServerChannel(IDictionary, IServerChannelSinkProvider, IAuthorizeRemotingConnection)\n  type: Constructor\n  assemblies:\n  - System.Runtime.Remoting\n  namespace: System.Runtime.Remoting.Channels.Tcp\n  summary: Initializes a new instance of the <xref href=\"System.Runtime.Remoting.Channels.Tcp.TcpServerChannel\"></xref> class with the specified channel properties, sink, and authorization provider.\n  remarks: \"For more information about channel configuration properties, see [Channel and Formatter Configuration Properties](http://msdn.microsoft.com/en-us/226ecf74-ebbd-4ea0-a701-dcf4441deefe).  \\n  \\n> [!NOTE]\\n>  If the server computer is running Windows 95/98/Me, the <xref:System.Runtime.Remoting.Channels.Tcp.TcpServerChannel> cannot be specified as secure.\"\n  syntax:\n    content: public TcpServerChannel (System.Collections.IDictionary properties, System.Runtime.Remoting.Channels.IServerChannelSinkProvider sinkProvider, System.Runtime.Remoting.Channels.IAuthorizeRemotingConnection authorizeCallback);\n    parameters:\n    - id: properties\n      type: System.Collections.IDictionary\n      description: A <xref href=\"System.Collections.IDictionary\"></xref> collection that specifies values for configuration properties to be used by the channel.\n    - id: sinkProvider\n      type: System.Runtime.Remoting.Channels.IServerChannelSinkProvider\n      description: The <xref href=\"System.Runtime.Remoting.Channels.IServerChannelSinkProvider\"></xref> implementation to be used by the channel.\n    - id: authorizeCallback\n      type: System.Runtime.Remoting.Channels.IAuthorizeRemotingConnection\n      description: The <xref href=\"System.Runtime.Remoting.Channels.IAuthorizeRemotingConnection\"></xref> implementation to be used by the channel.\n  overload: System.Runtime.Remoting.Channels.Tcp.TcpServerChannel.#ctor*\n  exceptions:\n  - type: System.ArgumentException\n    commentId: T:System.ArgumentException\n    description: A provided channel property was badly formatted.\n  version:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Runtime.Remoting.Channels.Tcp/TcpServerChannel.xml\n  ms.technology:\n  - dotnet-standard\n  manager: ghogen\n- uid: System.Runtime.Remoting.Channels.Tcp.TcpServerChannel.#ctor(System.String,System.Int32,System.Runtime.Remoting.Channels.IServerChannelSinkProvider)\n  commentId: M:System.Runtime.Remoting.Channels.Tcp.TcpServerChannel.#ctor(System.String,System.Int32,System.Runtime.Remoting.Channels.IServerChannelSinkProvider)\n  id: '#ctor(System.String,System.Int32,System.Runtime.Remoting.Channels.IServerChannelSinkProvider)'\n  parent: System.Runtime.Remoting.Channels.Tcp.TcpServerChannel\n  langs:\n  - csharp\n  name: TcpServerChannel(String, Int32, IServerChannelSinkProvider)\n  nameWithType: TcpServerChannel.TcpServerChannel(String, Int32, IServerChannelSinkProvider)\n  fullName: TcpServerChannel.TcpServerChannel(String, Int32, IServerChannelSinkProvider)\n  type: Constructor\n  assemblies:\n  - System.Runtime.Remoting\n  namespace: System.Runtime.Remoting.Channels.Tcp\n  summary: Initializes a new instance of the <xref href=\"System.Runtime.Remoting.Channels.Tcp.TcpServerChannel\"></xref> class with the given name, which listens on the specified port, and uses the specified sink.\n  remarks: \"This constructor sets the <xref:System.Runtime.Remoting.Channels.Tcp.TcpServerChannel.ChannelName%2A> property by using the `name` parameter. If you want to register more than one channel, each channel must have a unique name.  \\n  \\n To request that an available port be dynamically assigned, set the `port` parameter to 0 (zero).  \\n  \\n If you do not require sink functionality, set the `sinkProvider` parameter to `null`.\"\n  example:\n  - \"The following code example shows how to construct a <xref:System.Runtime.Remoting.Channels.Tcp.TcpServerChannel>.  \\n  \\n [!code-cpp[System.Runtime.Remoting.Channels.Tcp.TcpServerChannel#21](~/samples/snippets/cpp/VS_Snippets_Remoting/System.Runtime.Remoting.Channels.Tcp.TcpServerChannel/CPP/server.cpp#21)]\\n [!code-csharp[System.Runtime.Remoting.Channels.Tcp.TcpServerChannel#21](~/samples/snippets/csharp/VS_Snippets_Remoting/System.Runtime.Remoting.Channels.Tcp.TcpServerChannel/CS/server.cs#21)]\"\n  syntax:\n    content: public TcpServerChannel (string name, int port, System.Runtime.Remoting.Channels.IServerChannelSinkProvider sinkProvider);\n    parameters:\n    - id: name\n      type: System.String\n      description: The name of the channel.\n    - id: port\n      type: System.Int32\n      description: The port on which the channel listens.\n    - id: sinkProvider\n      type: System.Runtime.Remoting.Channels.IServerChannelSinkProvider\n      description: The <xref href=\"System.Runtime.Remoting.Channels.IServerChannelSinkProvider\"></xref> implementation to be used by the channel.\n  overload: System.Runtime.Remoting.Channels.Tcp.TcpServerChannel.#ctor*\n  exceptions: []\n  version:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Runtime.Remoting.Channels.Tcp/TcpServerChannel.xml\n  ms.technology:\n  - dotnet-standard\n  manager: ghogen\n- uid: System.Runtime.Remoting.Channels.Tcp.TcpServerChannel.ChannelData\n  commentId: P:System.Runtime.Remoting.Channels.Tcp.TcpServerChannel.ChannelData\n  id: ChannelData\n  parent: System.Runtime.Remoting.Channels.Tcp.TcpServerChannel\n  langs:\n  - csharp\n  name: ChannelData\n  nameWithType: TcpServerChannel.ChannelData\n  fullName: TcpServerChannel.ChannelData\n  type: Property\n  assemblies:\n  - System.Runtime.Remoting\n  namespace: System.Runtime.Remoting.Channels.Tcp\n  summary: Gets channel-specific data.\n  remarks: Although returned as an instance of <xref:System.Object?displayProperty=fullName>, the value of this property can be cast to an instance of <xref:System.Runtime.Remoting.Channels.ChannelDataStore> describing the channel to which the <xref:System.Runtime.Remoting.Channels.Tcp.TcpServerChannel> object listens.\n  example:\n  - \"The following code example shows the use of this property.  \\n  \\n [!code-cpp[Remoting_TcpInfo#33](~/samples/snippets/cpp/VS_Snippets_Remoting/Remoting_TcpInfo/CPP/server.cpp#33)]\\n [!code-csharp[Remoting_TcpInfo#33](~/samples/snippets/csharp/VS_Snippets_Remoting/Remoting_TcpInfo/CS/server.cs#33)]\"\n  syntax:\n    content: public object ChannelData { get; }\n    return:\n      type: System.Object\n      description: A <xref href=\"System.Runtime.Remoting.Channels.ChannelDataStore\"></xref> instance containing channel-specific data.\n  overload: System.Runtime.Remoting.Channels.Tcp.TcpServerChannel.ChannelData*\n  exceptions: []\n  version:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Runtime.Remoting.Channels.Tcp/TcpServerChannel.xml\n  ms.technology:\n  - dotnet-standard\n  manager: ghogen\n- uid: System.Runtime.Remoting.Channels.Tcp.TcpServerChannel.ChannelName\n  commentId: P:System.Runtime.Remoting.Channels.Tcp.TcpServerChannel.ChannelName\n  id: ChannelName\n  parent: System.Runtime.Remoting.Channels.Tcp.TcpServerChannel\n  langs:\n  - csharp\n  name: ChannelName\n  nameWithType: TcpServerChannel.ChannelName\n  fullName: TcpServerChannel.ChannelName\n  type: Property\n  assemblies:\n  - System.Runtime.Remoting\n  namespace: System.Runtime.Remoting.Channels.Tcp\n  summary: Gets the name of the current channel.\n  remarks: Every registered channel has a unique name. The name is used to retrieve a specific channel when calling <xref:System.Runtime.Remoting.Channels.ChannelServices.GetChannel%2A>.\n  example:\n  - \"The following code example shows the use of this property.  \\n  \\n [!code-cpp[Remoting_TcpInfo#32](~/samples/snippets/cpp/VS_Snippets_Remoting/Remoting_TcpInfo/CPP/server.cpp#32)]\\n [!code-csharp[Remoting_TcpInfo#32](~/samples/snippets/csharp/VS_Snippets_Remoting/Remoting_TcpInfo/CS/server.cs#32)]\"\n  syntax:\n    content: public string ChannelName { get; }\n    return:\n      type: System.String\n      description: A <xref href=\"System.String\"></xref> instance that contains the name of the channel.\n  overload: System.Runtime.Remoting.Channels.Tcp.TcpServerChannel.ChannelName*\n  exceptions: []\n  version:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Runtime.Remoting.Channels.Tcp/TcpServerChannel.xml\n  ms.technology:\n  - dotnet-standard\n  manager: ghogen\n- uid: System.Runtime.Remoting.Channels.Tcp.TcpServerChannel.ChannelPriority\n  commentId: P:System.Runtime.Remoting.Channels.Tcp.TcpServerChannel.ChannelPriority\n  id: ChannelPriority\n  parent: System.Runtime.Remoting.Channels.Tcp.TcpServerChannel\n  langs:\n  - csharp\n  name: ChannelPriority\n  nameWithType: TcpServerChannel.ChannelPriority\n  fullName: TcpServerChannel.ChannelPriority\n  type: Property\n  assemblies:\n  - System.Runtime.Remoting\n  namespace: System.Runtime.Remoting.Channels.Tcp\n  summary: Gets the priority of the current channel.\n  remarks: The priority controls the order in which channel data appears in a <xref:System.Runtime.Remoting.ObjRef> instance; higher priority channels appear before lower priority channels. Clients try to connect to the server channels in the order that they are listed in the <xref:System.Runtime.Remoting.ObjRef> instance. The default priority is 1; negative priorities are allowed.\n  example:\n  - \"The following code example shows the use of this property.  \\n  \\n [!code-cpp[Remoting_TcpInfo#32](~/samples/snippets/cpp/VS_Snippets_Remoting/Remoting_TcpInfo/CPP/server.cpp#32)]\\n [!code-csharp[Remoting_TcpInfo#32](~/samples/snippets/csharp/VS_Snippets_Remoting/Remoting_TcpInfo/CS/server.cs#32)]\"\n  syntax:\n    content: public int ChannelPriority { get; }\n    return:\n      type: System.Int32\n      description: An integer that represents the priority assigned to the channel.\n  overload: System.Runtime.Remoting.Channels.Tcp.TcpServerChannel.ChannelPriority*\n  exceptions: []\n  version:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Runtime.Remoting.Channels.Tcp/TcpServerChannel.xml\n  ms.technology:\n  - dotnet-standard\n  manager: ghogen\n- uid: System.Runtime.Remoting.Channels.Tcp.TcpServerChannel.GetChannelUri\n  commentId: M:System.Runtime.Remoting.Channels.Tcp.TcpServerChannel.GetChannelUri\n  id: GetChannelUri\n  parent: System.Runtime.Remoting.Channels.Tcp.TcpServerChannel\n  langs:\n  - csharp\n  name: GetChannelUri()\n  nameWithType: TcpServerChannel.GetChannelUri()\n  fullName: TcpServerChannel.GetChannelUri()\n  type: Method\n  assemblies:\n  - System.Runtime.Remoting\n  namespace: System.Runtime.Remoting.Channels.Tcp\n  summary: Returns the URI of the current channel.\n  remarks: ''\n  example:\n  - \"The following code example shows the use this method.  \\n  \\n [!code-cpp[System.Runtime.Remoting.Channels.Tcp.TcpServerChannel#22](~/samples/snippets/cpp/VS_Snippets_Remoting/System.Runtime.Remoting.Channels.Tcp.TcpServerChannel/CPP/server.cpp#22)]\\n [!code-csharp[System.Runtime.Remoting.Channels.Tcp.TcpServerChannel#22](~/samples/snippets/csharp/VS_Snippets_Remoting/System.Runtime.Remoting.Channels.Tcp.TcpServerChannel/CS/server.cs#22)]\"\n  syntax:\n    content: public string GetChannelUri ();\n    parameters: []\n    return:\n      type: System.String\n      description: The URI of the current channel.\n  overload: System.Runtime.Remoting.Channels.Tcp.TcpServerChannel.GetChannelUri*\n  exceptions: []\n  version:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Runtime.Remoting.Channels.Tcp/TcpServerChannel.xml\n  ms.technology:\n  - dotnet-standard\n  manager: ghogen\n- uid: System.Runtime.Remoting.Channels.Tcp.TcpServerChannel.GetUrlsForUri(System.String)\n  commentId: M:System.Runtime.Remoting.Channels.Tcp.TcpServerChannel.GetUrlsForUri(System.String)\n  id: GetUrlsForUri(System.String)\n  parent: System.Runtime.Remoting.Channels.Tcp.TcpServerChannel\n  langs:\n  - csharp\n  name: GetUrlsForUri(String)\n  nameWithType: TcpServerChannel.GetUrlsForUri(String)\n  fullName: TcpServerChannel.GetUrlsForUri(String)\n  type: Method\n  assemblies:\n  - System.Runtime.Remoting\n  namespace: System.Runtime.Remoting.Channels.Tcp\n  summary: Returns an array of all the URLs for an object with the specified URI, hosted on the current <xref href=\"System.Runtime.Remoting.Channels.Tcp.TcpChannel\"></xref> instance.\n  remarks: This method is used by <xref:System.Runtime.Remoting.Channels.ChannelServices.GetUrlsForObject%2A?displayProperty=fullName>.\n  example:\n  - \"The following code example shows the use of the <xref:System.Runtime.Remoting.Channels.Tcp.TcpServerChannel.GetUrlsForUri%2A> method.  \\n  \\n [!code-cpp[TcpServerChannel.GetUrlsForUri#1](~/samples/snippets/cpp/VS_Snippets_Remoting/TcpServerChannel.GetUrlsForUri/CPP/class1.cpp#1)]\\n [!code-csharp[TcpServerChannel.GetUrlsForUri#1](~/samples/snippets/csharp/VS_Snippets_Remoting/TcpServerChannel.GetUrlsForUri/CS/class1.cs#1)]\\n [!code-vb[TcpServerChannel.GetUrlsForUri#1](~/samples/snippets/visualbasic/VS_Snippets_Remoting/TcpServerChannel.GetUrlsForUri/VB/class1.vb#1)]\"\n  syntax:\n    content: public virtual string[] GetUrlsForUri (string objectUri);\n    parameters:\n    - id: objectUri\n      type: System.String\n      description: The URI of the object for which URLs are required.\n    return:\n      type: System.String[]\n      description: An array of the URLs for an object with the specified URI, hosted on the current <xref href=\"System.Runtime.Remoting.Channels.Tcp.TcpChannel\"></xref> instance.\n  overload: System.Runtime.Remoting.Channels.Tcp.TcpServerChannel.GetUrlsForUri*\n  exceptions: []\n  version:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Runtime.Remoting.Channels.Tcp/TcpServerChannel.xml\n  ms.technology:\n  - dotnet-standard\n  manager: ghogen\n- uid: System.Runtime.Remoting.Channels.Tcp.TcpServerChannel.IsSecured\n  commentId: P:System.Runtime.Remoting.Channels.Tcp.TcpServerChannel.IsSecured\n  id: IsSecured\n  parent: System.Runtime.Remoting.Channels.Tcp.TcpServerChannel\n  langs:\n  - csharp\n  name: IsSecured\n  nameWithType: TcpServerChannel.IsSecured\n  fullName: TcpServerChannel.IsSecured\n  type: Property\n  assemblies:\n  - System.Runtime.Remoting\n  namespace: System.Runtime.Remoting.Channels.Tcp\n  summary: Gets or sets a Boolean value that indicates whether the current channel is secure.\n  syntax:\n    content: public bool IsSecured { get; set; }\n    return:\n      type: System.Boolean\n      description: A Boolean value that indicates whether the current instance is secure.\n  overload: System.Runtime.Remoting.Channels.Tcp.TcpServerChannel.IsSecured*\n  exceptions: []\n  version:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Runtime.Remoting.Channels.Tcp/TcpServerChannel.xml\n  ms.technology:\n  - dotnet-standard\n  manager: ghogen\n- uid: System.Runtime.Remoting.Channels.Tcp.TcpServerChannel.Parse(System.String,System.String@)\n  commentId: M:System.Runtime.Remoting.Channels.Tcp.TcpServerChannel.Parse(System.String,System.String@)\n  id: Parse(System.String,System.String@)\n  parent: System.Runtime.Remoting.Channels.Tcp.TcpServerChannel\n  langs:\n  - csharp\n  name: Parse(String, String)\n  nameWithType: TcpServerChannel.Parse(String, String)\n  fullName: TcpServerChannel.Parse(String, String)\n  type: Method\n  assemblies:\n  - System.Runtime.Remoting\n  namespace: System.Runtime.Remoting.Channels.Tcp\n  summary: Extracts the channel URI and the remote well-known object URI from the specified URL.\n  remarks: The URI of an object is a value that uniquely identifies a specific object instance.\n  example:\n  - \"The following code example shows the use this method.  \\n  \\n [!code-cpp[System.Runtime.Remoting.Channels.Tcp.TcpServerChannel#23](~/samples/snippets/cpp/VS_Snippets_Remoting/System.Runtime.Remoting.Channels.Tcp.TcpServerChannel/CPP/server.cpp#23)]\\n [!code-csharp[System.Runtime.Remoting.Channels.Tcp.TcpServerChannel#23](~/samples/snippets/csharp/VS_Snippets_Remoting/System.Runtime.Remoting.Channels.Tcp.TcpServerChannel/CS/server.cs#23)]\"\n  syntax:\n    content: public string Parse (string url, out string objectURI);\n    parameters:\n    - id: url\n      type: System.String\n      description: The URL from which to extract the URI of the remote well-known object.\n    - id: objectURI\n      type: System.String\n      description: When this method returns, contains a <xref href=\"System.String\"></xref> instance that holds the URI of the remote well-known object. This parameter is passed uninitialized.\n    return:\n      type: System.String\n      description: The URI of the current channel.\n  overload: System.Runtime.Remoting.Channels.Tcp.TcpServerChannel.Parse*\n  exceptions: []\n  version:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Runtime.Remoting.Channels.Tcp/TcpServerChannel.xml\n  ms.technology:\n  - dotnet-standard\n  manager: ghogen\n- uid: System.Runtime.Remoting.Channels.Tcp.TcpServerChannel.StartListening(System.Object)\n  commentId: M:System.Runtime.Remoting.Channels.Tcp.TcpServerChannel.StartListening(System.Object)\n  id: StartListening(System.Object)\n  parent: System.Runtime.Remoting.Channels.Tcp.TcpServerChannel\n  langs:\n  - csharp\n  name: StartListening(Object)\n  nameWithType: TcpServerChannel.StartListening(Object)\n  fullName: TcpServerChannel.StartListening(Object)\n  type: Method\n  assemblies:\n  - System.Runtime.Remoting\n  namespace: System.Runtime.Remoting.Channels.Tcp\n  summary: Instructs the current channel to start listening for requests.\n  remarks: \"It is not necessary to call this method to begin listening on a newly initialized channel.  \\n  \\n Use this method to restart listening on a channel after the <xref:System.Runtime.Remoting.Channels.Tcp.TcpServerChannel.StopListening%2A> method has been called to stop listening on the channel.  \\n  \\n If your channel uses a dynamically assigned port number, your port number might change when you restart listening.  \\n  \\n The data object can be used to pass a specific initialization state to the channel. If you do not want to pass a specific state to the channel, set `data` to `null`.\"\n  syntax:\n    content: public void StartListening (object data);\n    parameters:\n    - id: data\n      type: System.Object\n      description: Optional initialization information.\n  overload: System.Runtime.Remoting.Channels.Tcp.TcpServerChannel.StartListening*\n  exceptions: []\n  version:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Runtime.Remoting.Channels.Tcp/TcpServerChannel.xml\n  ms.technology:\n  - dotnet-standard\n  manager: ghogen\n- uid: System.Runtime.Remoting.Channels.Tcp.TcpServerChannel.StopListening(System.Object)\n  commentId: M:System.Runtime.Remoting.Channels.Tcp.TcpServerChannel.StopListening(System.Object)\n  id: StopListening(System.Object)\n  parent: System.Runtime.Remoting.Channels.Tcp.TcpServerChannel\n  langs:\n  - csharp\n  name: StopListening(Object)\n  nameWithType: TcpServerChannel.StopListening(Object)\n  fullName: TcpServerChannel.StopListening(Object)\n  type: Method\n  assemblies:\n  - System.Runtime.Remoting\n  namespace: System.Runtime.Remoting.Channels.Tcp\n  summary: Instructs the current channel to stop listening for requests.\n  remarks: \"Use this method to stop listening on a channel. To restart listening, use the <xref:System.Runtime.Remoting.Channels.Tcp.TcpServerChannel.StartListening%2A> method.  \\n  \\n If your channel uses a dynamically assigned port number, your port number might change when you restart listening.  \\n  \\n The data object can be used to pass a specific initialization state to the channel. If you do not want to pass a specific state to the channel, set `data` to `null`.\"\n  syntax:\n    content: public void StopListening (object data);\n    parameters:\n    - id: data\n      type: System.Object\n      description: Optional state information for the channel.\n  overload: System.Runtime.Remoting.Channels.Tcp.TcpServerChannel.StopListening*\n  exceptions: []\n  version:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Runtime.Remoting.Channels.Tcp/TcpServerChannel.xml\n  ms.technology:\n  - dotnet-standard\n  manager: ghogen\nreferences:\n- uid: System.Object\n  parent: System\n  isExternal: false\n  name: Object\n  nameWithType: Object\n  fullName: System.Object\n- uid: System.ArgumentException\n  parent: System\n  isExternal: false\n  name: ArgumentException\n  nameWithType: ArgumentException\n  fullName: System.ArgumentException\n- uid: System.Runtime.Remoting.Channels.Tcp.TcpServerChannel.#ctor(System.Int32)\n  parent: System.Runtime.Remoting.Channels.Tcp.TcpServerChannel\n  isExternal: false\n  name: TcpServerChannel(Int32)\n  nameWithType: TcpServerChannel.TcpServerChannel(Int32)\n  fullName: TcpServerChannel.TcpServerChannel(Int32)\n- uid: System.Int32\n  parent: System\n  isExternal: false\n  name: Int32\n  nameWithType: Int32\n  fullName: System.Int32\n- uid: System.Runtime.Remoting.Channels.Tcp.TcpServerChannel.#ctor(System.Collections.IDictionary,System.Runtime.Remoting.Channels.IServerChannelSinkProvider)\n  parent: System.Runtime.Remoting.Channels.Tcp.TcpServerChannel\n  isExternal: false\n  name: TcpServerChannel(IDictionary, IServerChannelSinkProvider)\n  nameWithType: TcpServerChannel.TcpServerChannel(IDictionary, IServerChannelSinkProvider)\n  fullName: TcpServerChannel.TcpServerChannel(IDictionary, IServerChannelSinkProvider)\n- uid: System.Collections.IDictionary\n  parent: System.Collections\n  isExternal: false\n  name: IDictionary\n  nameWithType: IDictionary\n  fullName: System.Collections.IDictionary\n- uid: System.Runtime.Remoting.Channels.IServerChannelSinkProvider\n  parent: System.Runtime.Remoting.Channels\n  isExternal: false\n  name: IServerChannelSinkProvider\n  nameWithType: IServerChannelSinkProvider\n  fullName: System.Runtime.Remoting.Channels.IServerChannelSinkProvider\n- uid: System.Runtime.Remoting.Channels.Tcp.TcpServerChannel.#ctor(System.String,System.Int32)\n  parent: System.Runtime.Remoting.Channels.Tcp.TcpServerChannel\n  isExternal: false\n  name: TcpServerChannel(String, Int32)\n  nameWithType: TcpServerChannel.TcpServerChannel(String, Int32)\n  fullName: TcpServerChannel.TcpServerChannel(String, Int32)\n- uid: System.String\n  parent: System\n  isExternal: false\n  name: String\n  nameWithType: String\n  fullName: System.String\n- uid: System.Runtime.Remoting.Channels.Tcp.TcpServerChannel.#ctor(System.Collections.IDictionary,System.Runtime.Remoting.Channels.IServerChannelSinkProvider,System.Runtime.Remoting.Channels.IAuthorizeRemotingConnection)\n  parent: System.Runtime.Remoting.Channels.Tcp.TcpServerChannel\n  isExternal: false\n  name: TcpServerChannel(IDictionary, IServerChannelSinkProvider, IAuthorizeRemotingConnection)\n  nameWithType: TcpServerChannel.TcpServerChannel(IDictionary, IServerChannelSinkProvider, IAuthorizeRemotingConnection)\n  fullName: TcpServerChannel.TcpServerChannel(IDictionary, IServerChannelSinkProvider, IAuthorizeRemotingConnection)\n- uid: System.Runtime.Remoting.Channels.IAuthorizeRemotingConnection\n  parent: System.Runtime.Remoting.Channels\n  isExternal: false\n  name: IAuthorizeRemotingConnection\n  nameWithType: IAuthorizeRemotingConnection\n  fullName: System.Runtime.Remoting.Channels.IAuthorizeRemotingConnection\n- uid: System.Runtime.Remoting.Channels.Tcp.TcpServerChannel.#ctor(System.String,System.Int32,System.Runtime.Remoting.Channels.IServerChannelSinkProvider)\n  parent: System.Runtime.Remoting.Channels.Tcp.TcpServerChannel\n  isExternal: false\n  name: TcpServerChannel(String, Int32, IServerChannelSinkProvider)\n  nameWithType: TcpServerChannel.TcpServerChannel(String, Int32, IServerChannelSinkProvider)\n  fullName: TcpServerChannel.TcpServerChannel(String, Int32, IServerChannelSinkProvider)\n- uid: System.Runtime.Remoting.Channels.Tcp.TcpServerChannel.ChannelData\n  parent: System.Runtime.Remoting.Channels.Tcp.TcpServerChannel\n  isExternal: false\n  name: ChannelData\n  nameWithType: TcpServerChannel.ChannelData\n  fullName: TcpServerChannel.ChannelData\n- uid: System.Runtime.Remoting.Channels.Tcp.TcpServerChannel.ChannelName\n  parent: System.Runtime.Remoting.Channels.Tcp.TcpServerChannel\n  isExternal: false\n  name: ChannelName\n  nameWithType: TcpServerChannel.ChannelName\n  fullName: TcpServerChannel.ChannelName\n- uid: System.Runtime.Remoting.Channels.Tcp.TcpServerChannel.ChannelPriority\n  parent: System.Runtime.Remoting.Channels.Tcp.TcpServerChannel\n  isExternal: false\n  name: ChannelPriority\n  nameWithType: TcpServerChannel.ChannelPriority\n  fullName: TcpServerChannel.ChannelPriority\n- uid: System.Runtime.Remoting.Channels.Tcp.TcpServerChannel.GetChannelUri\n  parent: System.Runtime.Remoting.Channels.Tcp.TcpServerChannel\n  isExternal: false\n  name: GetChannelUri()\n  nameWithType: TcpServerChannel.GetChannelUri()\n  fullName: TcpServerChannel.GetChannelUri()\n- uid: System.Runtime.Remoting.Channels.Tcp.TcpServerChannel.GetUrlsForUri(System.String)\n  parent: System.Runtime.Remoting.Channels.Tcp.TcpServerChannel\n  isExternal: false\n  name: GetUrlsForUri(String)\n  nameWithType: TcpServerChannel.GetUrlsForUri(String)\n  fullName: TcpServerChannel.GetUrlsForUri(String)\n- uid: System.String[]\n  parent: System\n  isExternal: false\n  name: String[]\n  nameWithType: String[]\n  fullName: System.String[]\n  spec.csharp:\n  - uid: System.String\n    name: String\n    nameWithType: String\n    fullName: System.String\n  - name: '[]'\n    nameWithType: '[]'\n    fullName: '[]'\n- uid: System.Runtime.Remoting.Channels.Tcp.TcpServerChannel.IsSecured\n  parent: System.Runtime.Remoting.Channels.Tcp.TcpServerChannel\n  isExternal: false\n  name: IsSecured\n  nameWithType: TcpServerChannel.IsSecured\n  fullName: TcpServerChannel.IsSecured\n- uid: System.Boolean\n  parent: System\n  isExternal: false\n  name: Boolean\n  nameWithType: Boolean\n  fullName: System.Boolean\n- uid: System.Runtime.Remoting.Channels.Tcp.TcpServerChannel.Parse(System.String,System.String@)\n  parent: System.Runtime.Remoting.Channels.Tcp.TcpServerChannel\n  isExternal: false\n  name: Parse(String, String)\n  nameWithType: TcpServerChannel.Parse(String, String)\n  fullName: TcpServerChannel.Parse(String, String)\n- uid: System.Runtime.Remoting.Channels.Tcp.TcpServerChannel.StartListening(System.Object)\n  parent: System.Runtime.Remoting.Channels.Tcp.TcpServerChannel\n  isExternal: false\n  name: StartListening(Object)\n  nameWithType: TcpServerChannel.StartListening(Object)\n  fullName: TcpServerChannel.StartListening(Object)\n- uid: System.Runtime.Remoting.Channels.Tcp.TcpServerChannel.StopListening(System.Object)\n  parent: System.Runtime.Remoting.Channels.Tcp.TcpServerChannel\n  isExternal: false\n  name: StopListening(Object)\n  nameWithType: TcpServerChannel.StopListening(Object)\n  fullName: TcpServerChannel.StopListening(Object)\n- uid: System.Runtime.Remoting.Channels.Tcp.TcpServerChannel.#ctor*\n  parent: System.Runtime.Remoting.Channels.Tcp.TcpServerChannel\n  isExternal: false\n  name: TcpServerChannel\n  nameWithType: TcpServerChannel.TcpServerChannel\n  fullName: TcpServerChannel.TcpServerChannel\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Runtime.Remoting.Channels.Tcp/TcpServerChannel.xml\n- uid: System.Runtime.Remoting.Channels.Tcp.TcpServerChannel.ChannelData*\n  parent: System.Runtime.Remoting.Channels.Tcp.TcpServerChannel\n  isExternal: false\n  name: ChannelData\n  nameWithType: TcpServerChannel.ChannelData\n  fullName: TcpServerChannel.ChannelData\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Runtime.Remoting.Channels.Tcp/TcpServerChannel.xml\n- uid: System.Runtime.Remoting.Channels.Tcp.TcpServerChannel.ChannelName*\n  parent: System.Runtime.Remoting.Channels.Tcp.TcpServerChannel\n  isExternal: false\n  name: ChannelName\n  nameWithType: TcpServerChannel.ChannelName\n  fullName: TcpServerChannel.ChannelName\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Runtime.Remoting.Channels.Tcp/TcpServerChannel.xml\n- uid: System.Runtime.Remoting.Channels.Tcp.TcpServerChannel.ChannelPriority*\n  parent: System.Runtime.Remoting.Channels.Tcp.TcpServerChannel\n  isExternal: false\n  name: ChannelPriority\n  nameWithType: TcpServerChannel.ChannelPriority\n  fullName: TcpServerChannel.ChannelPriority\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Runtime.Remoting.Channels.Tcp/TcpServerChannel.xml\n- uid: System.Runtime.Remoting.Channels.Tcp.TcpServerChannel.GetChannelUri*\n  parent: System.Runtime.Remoting.Channels.Tcp.TcpServerChannel\n  isExternal: false\n  name: GetChannelUri\n  nameWithType: TcpServerChannel.GetChannelUri\n  fullName: TcpServerChannel.GetChannelUri\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Runtime.Remoting.Channels.Tcp/TcpServerChannel.xml\n- uid: System.Runtime.Remoting.Channels.Tcp.TcpServerChannel.GetUrlsForUri*\n  parent: System.Runtime.Remoting.Channels.Tcp.TcpServerChannel\n  isExternal: false\n  name: GetUrlsForUri\n  nameWithType: TcpServerChannel.GetUrlsForUri\n  fullName: TcpServerChannel.GetUrlsForUri\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Runtime.Remoting.Channels.Tcp/TcpServerChannel.xml\n- uid: System.Runtime.Remoting.Channels.Tcp.TcpServerChannel.IsSecured*\n  parent: System.Runtime.Remoting.Channels.Tcp.TcpServerChannel\n  isExternal: false\n  name: IsSecured\n  nameWithType: TcpServerChannel.IsSecured\n  fullName: TcpServerChannel.IsSecured\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Runtime.Remoting.Channels.Tcp/TcpServerChannel.xml\n- uid: System.Runtime.Remoting.Channels.Tcp.TcpServerChannel.Parse*\n  parent: System.Runtime.Remoting.Channels.Tcp.TcpServerChannel\n  isExternal: false\n  name: Parse\n  nameWithType: TcpServerChannel.Parse\n  fullName: TcpServerChannel.Parse\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Runtime.Remoting.Channels.Tcp/TcpServerChannel.xml\n- uid: System.Runtime.Remoting.Channels.Tcp.TcpServerChannel.StartListening*\n  parent: System.Runtime.Remoting.Channels.Tcp.TcpServerChannel\n  isExternal: false\n  name: StartListening\n  nameWithType: TcpServerChannel.StartListening\n  fullName: TcpServerChannel.StartListening\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Runtime.Remoting.Channels.Tcp/TcpServerChannel.xml\n- uid: System.Runtime.Remoting.Channels.Tcp.TcpServerChannel.StopListening*\n  parent: System.Runtime.Remoting.Channels.Tcp.TcpServerChannel\n  isExternal: false\n  name: StopListening\n  nameWithType: TcpServerChannel.StopListening\n  fullName: TcpServerChannel.StopListening\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Runtime.Remoting.Channels.Tcp/TcpServerChannel.xml\n- uid: System.Object.Equals(System.Object)\n  parent: System.Object\n  isExternal: false\n  name: Equals(Object)\n  nameWithType: Object.Equals(Object)\n  fullName: Object.Equals(Object)\n- uid: System.Object.Equals(System.Object,System.Object)\n  parent: System.Object\n  isExternal: false\n  name: Equals(Object, Object)\n  nameWithType: Object.Equals(Object, Object)\n  fullName: Object.Equals(Object, Object)\n- uid: System.Object.GetHashCode\n  parent: System.Object\n  isExternal: false\n  name: GetHashCode()\n  nameWithType: Object.GetHashCode()\n  fullName: Object.GetHashCode()\n- uid: System.Object.GetType\n  parent: System.Object\n  isExternal: false\n  name: GetType()\n  nameWithType: Object.GetType()\n  fullName: Object.GetType()\n- uid: System.Object.MemberwiseClone\n  parent: System.Object\n  isExternal: false\n  name: MemberwiseClone()\n  nameWithType: Object.MemberwiseClone()\n  fullName: Object.MemberwiseClone()\n- uid: System.Object.ReferenceEquals(System.Object,System.Object)\n  parent: System.Object\n  isExternal: false\n  name: ReferenceEquals(Object, Object)\n  nameWithType: Object.ReferenceEquals(Object, Object)\n  fullName: Object.ReferenceEquals(Object, Object)\n- uid: System.Object.ToString\n  parent: System.Object\n  isExternal: false\n  name: ToString()\n  nameWithType: Object.ToString()\n  fullName: Object.ToString()\n- uid: System.Runtime.Remoting.Channels.IChannelReceiver\n  parent: System.Runtime.Remoting.Channels\n  isExternal: false\n  name: IChannelReceiver\n  nameWithType: IChannelReceiver\n  fullName: System.Runtime.Remoting.Channels.IChannelReceiver\n- uid: System.Runtime.Remoting.Channels.ISecurableChannel\n  parent: System.Runtime.Remoting.Channels\n  isExternal: false\n  name: ISecurableChannel\n  nameWithType: ISecurableChannel\n  fullName: System.Runtime.Remoting.Channels.ISecurableChannel\n"}