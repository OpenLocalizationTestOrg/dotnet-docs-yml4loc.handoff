{"nodes":[{"content":"A binding terminal that represents the flow of data out of an activity.","nodes":[{"pos":[0,71],"content":"A binding terminal that represents the flow of data out of an activity.","nodes":[{"content":"A binding terminal that represents the flow of data out of an activity.","pos":[0,71]}]}],"pos":[1725,1797],"yaml":true},{"content":"An <xref:System.Activities.OutArgument%601> is used to flow data out of an activity. If the activity is the root activity of a workflow, then it is also used to flow data out of the workflow to the workflow host. In this example, a custom `Divide` activity that has two input arguments and one output argument is used as the root activity of a workflow. The host application passes two values into the workflow and then retrieves the result of the division after the workflow completes.  \n  \n [!code-csharp[CFX_WorkflowInvokerExample#20](~/samples/snippets/csharp/VS_Snippets_CFX/cfx_workflowinvokerexample/cs/program.cs#20)]  \n  \n The `Divide` activity uses arguments to receive the input values and to provide the computed result values. The `Remainder` <xref:System.Activities.OutArgument%601> is used to pass out the remainder of the division, and the <xref:System.Activities.Activity%601.Result%2A> output argument provided by <xref:System.Activities.Activity%601> derived activities is used to pass out the quotient.  \n  \n> [!NOTE]\n>  If your custom activity is derived from the generic <xref:System.Activities.CodeActivity%601> with an <xref:System.Int32> as its generic type argument, when you invoke the activity with the <xref:System.Activities.WorkflowInvoker> Invoke method, it returns an <xref:System.Int32> value. In Addition, the <xref:System.Activities.CodeActivity%601.Execute%2A?displayProperty=fullName> method will return an <xref:System.Int32> value instead of `void` and you do not need to set a return value.  \n  \n [!code-csharp[CFX_WorkflowApplicationExample#120](~/samples/snippets/csharp/VS_Snippets_CFX/cfx_workflowapplicationexample/cs/program.cs#120)]","nodes":[{"pos":[0,486],"content":"An <xref:System.Activities.OutArgument%601> is used to flow data out of an activity. If the activity is the root activity of a workflow, then it is also used to flow data out of the workflow to the workflow host. In this example, a custom `Divide` activity that has two input arguments and one output argument is used as the root activity of a workflow. The host application passes two values into the workflow and then retrieves the result of the division after the workflow completes.","nodes":[{"content":"An <ph id=\"ph1\">&lt;xref:System.Activities.OutArgument%601&gt;</ph> is used to flow data out of an activity.","pos":[0,84],"source":"An <xref:System.Activities.OutArgument%601> is used to flow data out of an activity."},{"content":"If the activity is the root activity of a workflow, then it is also used to flow data out of the workflow to the workflow host.","pos":[85,212]},{"content":"In this example, a custom <ph id=\"ph1\">`Divide`</ph> activity that has two input arguments and one output argument is used as the root activity of a workflow.","pos":[213,353],"source":" In this example, a custom `Divide` activity that has two input arguments and one output argument is used as the root activity of a workflow."},{"content":"The host application passes two values into the workflow and then retrieves the result of the division after the workflow completes.","pos":[354,486]}]},{"pos":[493,625],"content":"<bpt id=\"p1\">[!code-csharp</bpt><bpt id=\"p2\">[</bpt>CFX_WorkflowInvokerExample#20<ept id=\"p2\">](~/samples/snippets/csharp/VS_Snippets_CFX/cfx_workflowinvokerexample/cs/program.cs#20)</ept><ept id=\"p1\">]</ept>","source":"[!code-csharp[CFX_WorkflowInvokerExample#20](~/samples/snippets/csharp/VS_Snippets_CFX/cfx_workflowinvokerexample/cs/program.cs#20)]"},{"pos":[632,1022],"content":"The `Divide` activity uses arguments to receive the input values and to provide the computed result values. The `Remainder` <xref:System.Activities.OutArgument%601> is used to pass out the remainder of the division, and the <xref:System.Activities.Activity%601.Result%2A> output argument provided by <xref:System.Activities.Activity%601> derived activities is used to pass out the quotient.","nodes":[{"content":"The <ph id=\"ph1\">`Divide`</ph> activity uses arguments to receive the input values and to provide the computed result values.","pos":[0,107],"source":"The `Divide` activity uses arguments to receive the input values and to provide the computed result values."},{"content":"The <ph id=\"ph1\">`Remainder`</ph> <ph id=\"ph2\">&lt;xref:System.Activities.OutArgument%601&gt;</ph> is used to pass out the remainder of the division, and the <ph id=\"ph3\">&lt;xref:System.Activities.Activity%601.Result%2A&gt;</ph> output argument provided by <ph id=\"ph4\">&lt;xref:System.Activities.Activity%601&gt;</ph> derived activities is used to pass out the quotient.","pos":[108,390],"source":" The `Remainder` <xref:System.Activities.OutArgument%601> is used to pass out the remainder of the division, and the <xref:System.Activities.Activity%601.Result%2A> output argument provided by <xref:System.Activities.Activity%601> derived activities is used to pass out the quotient."}]},{"pos":[1030,1531],"content":"[!NOTE]\n If your custom activity is derived from the generic <xref:System.Activities.CodeActivity%601> with an <xref:System.Int32> as its generic type argument, when you invoke the activity with the <xref:System.Activities.WorkflowInvoker> Invoke method, it returns an <xref:System.Int32> value. In Addition, the <xref:System.Activities.CodeActivity%601.Execute%2A?displayProperty=fullName> method will return an <xref:System.Int32> value instead of `void` and you do not need to set a return value.","leadings":["","> "],"nodes":[{"content":" If your custom activity is derived from the generic <xref:System.Activities.CodeActivity%601> with an <xref:System.Int32> as its generic type argument, when you invoke the activity with the <xref:System.Activities.WorkflowInvoker> Invoke method, it returns an <xref:System.Int32> value. In Addition, the <xref:System.Activities.CodeActivity%601.Execute%2A?displayProperty=fullName> method will return an <xref:System.Int32> value instead of `void` and you do not need to set a return value.","pos":[8,499],"nodes":[{"content":"If your custom activity is derived from the generic <ph id=\"ph1\">&lt;xref:System.Activities.CodeActivity%601&gt;</ph> with an <ph id=\"ph2\">&lt;xref:System.Int32&gt;</ph> as its generic type argument, when you invoke the activity with the <ph id=\"ph3\">&lt;xref:System.Activities.WorkflowInvoker&gt;</ph> Invoke method, it returns an <ph id=\"ph4\">&lt;xref:System.Int32&gt;</ph> value.","pos":[1,287],"source":" If your custom activity is derived from the generic <xref:System.Activities.CodeActivity%601> with an <xref:System.Int32> as its generic type argument, when you invoke the activity with the <xref:System.Activities.WorkflowInvoker> Invoke method, it returns an <xref:System.Int32> value."},{"content":"In Addition, the <ph id=\"ph1\">&lt;xref:System.Activities.CodeActivity%601.Execute%2A?displayProperty=fullName&gt;</ph> method will return an <ph id=\"ph2\">&lt;xref:System.Int32&gt;</ph> value instead of <ph id=\"ph3\">`void`</ph> and you do not need to set a return value.","pos":[288,491],"source":" In Addition, the <xref:System.Activities.CodeActivity%601.Execute%2A?displayProperty=fullName> method will return an <xref:System.Int32> value instead of `void` and you do not need to set a return value."}]}]},{"pos":[1538,1680],"content":"<bpt id=\"p1\">[!code-csharp</bpt><bpt id=\"p2\">[</bpt>CFX_WorkflowApplicationExample#120<ept id=\"p2\">](~/samples/snippets/csharp/VS_Snippets_CFX/cfx_workflowapplicationexample/cs/program.cs#120)</ept><ept id=\"p1\">]</ept>","source":"[!code-csharp[CFX_WorkflowApplicationExample#120](~/samples/snippets/csharp/VS_Snippets_CFX/cfx_workflowapplicationexample/cs/program.cs#120)]"}],"pos":[1808,3500],"yaml":true,"extradata":"MT"},{"content":"The data type of the <xref href=\"System.Activities.OutArgument`1\"></xref>.","nodes":[{"pos":[0,74],"content":"The data type of the <ph id=\"ph1\">&lt;xref href=\"System.Activities.OutArgument`1\"&gt;&lt;/xref&gt;</ph>.","source":"The data type of the <xref href=\"System.Activities.OutArgument`1\"></xref>."}],"pos":[4086,4161],"yaml":true},{"content":"Initialize a new instance of the <xref href=\"System.Activities.OutArgument`1\"></xref> class using default values.","nodes":[{"pos":[0,113],"content":"Initialize a new instance of the <ph id=\"ph1\">&lt;xref href=\"System.Activities.OutArgument`1\"&gt;&lt;/xref&gt;</ph> class using default values.","source":"Initialize a new instance of the <xref href=\"System.Activities.OutArgument`1\"></xref> class using default values."}],"pos":[6370,6484],"yaml":true},{"content":"Initializes a new instance of the <xref href=\"System.Activities.OutArgument`1\"></xref> class using the specified <xref href=\"System.Activities.Activity`1\"></xref>.","nodes":[{"pos":[0,163],"content":"Initializes a new instance of the <ph id=\"ph1\">&lt;xref href=\"System.Activities.OutArgument`1\"&gt;&lt;/xref&gt;</ph> class using the specified <ph id=\"ph2\">&lt;xref href=\"System.Activities.Activity`1\"&gt;&lt;/xref&gt;</ph>.","source":"Initializes a new instance of the <xref href=\"System.Activities.OutArgument`1\"></xref> class using the specified <xref href=\"System.Activities.Activity`1\"></xref>."}],"pos":[8056,8220],"yaml":true},{"content":"The value of the argument.","nodes":[{"pos":[0,26],"content":"The value of the argument.","nodes":[{"content":"The value of the argument.","pos":[0,26]}]}],"pos":[8460,8487],"yaml":true},{"content":"Initializes a new instance of the <xref href=\"System.Activities.OutArgument`1\"></xref> class using the specified <xref href=\"System.Activities.DelegateArgument\"></xref>.","nodes":[{"pos":[0,169],"content":"Initializes a new instance of the <ph id=\"ph1\">&lt;xref href=\"System.Activities.OutArgument`1\"&gt;&lt;/xref&gt;</ph> class using the specified <ph id=\"ph2\">&lt;xref href=\"System.Activities.DelegateArgument\"&gt;&lt;/xref&gt;</ph>.","source":"Initializes a new instance of the <xref href=\"System.Activities.OutArgument`1\"></xref> class using the specified <xref href=\"System.Activities.DelegateArgument\"></xref>."}],"pos":[9627,9797],"yaml":true},{"content":"The value of the argument.","nodes":[{"pos":[0,26],"content":"The value of the argument.","nodes":[{"content":"The value of the argument.","pos":[0,26]}]}],"pos":[10003,10030],"yaml":true},{"content":"Initializes a new instance of the <xref href=\"System.Activities.OutArgument`1\"></xref> class using the specified <xref href=\"System.Activities.Variable\"></xref>.","nodes":[{"pos":[0,161],"content":"Initializes a new instance of the <ph id=\"ph1\">&lt;xref href=\"System.Activities.OutArgument`1\"&gt;&lt;/xref&gt;</ph> class using the specified <ph id=\"ph2\">&lt;xref href=\"System.Activities.Variable\"&gt;&lt;/xref&gt;</ph>.","source":"Initializes a new instance of the <xref href=\"System.Activities.OutArgument`1\"></xref> class using the specified <xref href=\"System.Activities.Variable\"></xref>."}],"pos":[11122,11284],"yaml":true},{"content":"The value of the argument.","nodes":[{"pos":[0,26],"content":"The value of the argument.","nodes":[{"content":"The value of the argument.","pos":[0,26]}]}],"pos":[11458,11485],"yaml":true},{"content":"Initializes a new instance of the <xref href=\"System.Activities.OutArgument`1\"></xref> class using the specified expression.","nodes":[{"pos":[0,124],"content":"Initializes a new instance of the <ph id=\"ph1\">&lt;xref href=\"System.Activities.OutArgument`1\"&gt;&lt;/xref&gt;</ph> class using the specified expression.","source":"Initializes a new instance of the <xref href=\"System.Activities.OutArgument`1\"></xref> class using the specified expression."}],"pos":[12835,12960],"yaml":true},{"content":"The value of the argument.","nodes":[{"pos":[0,26],"content":"The value of the argument.","nodes":[{"content":"The value of the argument.","pos":[0,26]}]}],"pos":[13247,13274],"yaml":true},{"content":"Gets an <xref href=\"System.Activities.Activity`1\"></xref> that represents the value of this <xref href=\"System.Activities.OutArgument`1\"></xref>.","nodes":[{"pos":[0,145],"content":"Gets an <ph id=\"ph1\">&lt;xref href=\"System.Activities.Activity`1\"&gt;&lt;/xref&gt;</ph> that represents the value of this <ph id=\"ph2\">&lt;xref href=\"System.Activities.OutArgument`1\"&gt;&lt;/xref&gt;</ph>.","source":"Gets an <xref href=\"System.Activities.Activity`1\"></xref> that represents the value of this <xref href=\"System.Activities.OutArgument`1\"></xref>."}],"pos":[14250,14396],"yaml":true},{"content":"An activity that represents the value of the argument.","nodes":[{"pos":[0,54],"content":"An activity that represents the value of the argument.","nodes":[{"content":"An activity that represents the value of the argument.","pos":[0,54]}]}],"pos":[14610,14665],"yaml":true},{"content":"Initializes and returns a new <xref href=\"System.Activities.OutArgument`1\"></xref> constructed using the specified <xref href=\"System.Activities.DelegateArgument\"></xref>.","nodes":[{"pos":[0,171],"content":"Initializes and returns a new <ph id=\"ph1\">&lt;xref href=\"System.Activities.OutArgument`1\"&gt;&lt;/xref&gt;</ph> constructed using the specified <ph id=\"ph2\">&lt;xref href=\"System.Activities.DelegateArgument\"&gt;&lt;/xref&gt;</ph>.","source":"Initializes and returns a new <xref href=\"System.Activities.OutArgument`1\"></xref> constructed using the specified <xref href=\"System.Activities.DelegateArgument\"></xref>."}],"pos":[15883,16055],"yaml":true},{"content":"The value of the argument.","nodes":[{"pos":[0,26],"content":"The value of the argument.","nodes":[{"content":"The value of the argument.","pos":[0,26]}]}],"pos":[16310,16337],"yaml":true},{"content":"The new argument.","nodes":[{"pos":[0,17],"content":"The new argument.","nodes":[{"content":"The new argument.","pos":[0,17]}]}],"pos":[16412,16430],"yaml":true},{"content":"Initializes and returns a new <xref href=\"System.Activities.OutArgument`1\"></xref> constructed using the specified <xref href=\"System.Activities.Activity`1\"></xref>.","nodes":[{"pos":[0,165],"content":"Initializes and returns a new <ph id=\"ph1\">&lt;xref href=\"System.Activities.OutArgument`1\"&gt;&lt;/xref&gt;</ph> constructed using the specified <ph id=\"ph2\">&lt;xref href=\"System.Activities.Activity`1\"&gt;&lt;/xref&gt;</ph>.","source":"Initializes and returns a new <xref href=\"System.Activities.OutArgument`1\"></xref> constructed using the specified <xref href=\"System.Activities.Activity`1\"></xref>."}],"pos":[17692,17858],"yaml":true},{"content":"The value of the argument,","nodes":[{"pos":[0,26],"content":"The value of the argument,","nodes":[{"content":"The value of the argument,","pos":[0,26]}]}],"pos":[18141,18168],"yaml":true},{"content":"The new argument.","nodes":[{"pos":[0,17],"content":"The new argument.","nodes":[{"content":"The new argument.","pos":[0,17]}]}],"pos":[18243,18261],"yaml":true},{"content":"Initializes and returns a new <xref href=\"System.Activities.OutArgument`1\"></xref> constructed using the specified <xref href=\"System.Activities.Variable\"></xref>.","nodes":[{"pos":[0,163],"content":"Initializes and returns a new <ph id=\"ph1\">&lt;xref href=\"System.Activities.OutArgument`1\"&gt;&lt;/xref&gt;</ph> constructed using the specified <ph id=\"ph2\">&lt;xref href=\"System.Activities.Variable\"&gt;&lt;/xref&gt;</ph>.","source":"Initializes and returns a new <xref href=\"System.Activities.OutArgument`1\"></xref> constructed using the specified <xref href=\"System.Activities.Variable\"></xref>."}],"pos":[19370,19534],"yaml":true},{"content":"The value of the argument.","nodes":[{"pos":[0,26],"content":"The value of the argument.","nodes":[{"content":"The value of the argument.","pos":[0,26]}]}],"pos":[19749,19776],"yaml":true},{"content":"The new argument.","nodes":[{"pos":[0,17],"content":"The new argument.","nodes":[{"content":"The new argument.","pos":[0,17]}]}],"pos":[19851,19869],"yaml":true},{"content":"Gets the value of the <xref href=\"System.Activities.OutArgument`1\"></xref> using the specified activity context.","nodes":[{"pos":[0,112],"content":"Gets the value of the <ph id=\"ph1\">&lt;xref href=\"System.Activities.OutArgument`1\"&gt;&lt;/xref&gt;</ph> using the specified activity context.","source":"Gets the value of the <xref href=\"System.Activities.OutArgument`1\"></xref> using the specified activity context."}],"pos":[20964,21077],"yaml":true},{"content":"The current activity context.","nodes":[{"pos":[0,29],"content":"The current activity context.","nodes":[{"content":"The current activity context.","pos":[0,29]}]}],"pos":[21257,21287],"yaml":true},{"content":"The value of the argument.","nodes":[{"pos":[0,26],"content":"The value of the argument.","nodes":[{"content":"The value of the argument.","pos":[0,26]}]}],"pos":[21332,21359],"yaml":true},{"content":"Gets the location of the value for the <xref href=\"System.Activities.OutArgument`1\"></xref>.","nodes":[{"pos":[0,92],"content":"Gets the location of the value for the <ph id=\"ph1\">&lt;xref href=\"System.Activities.OutArgument`1\"&gt;&lt;/xref&gt;</ph>.","source":"Gets the location of the value for the <xref href=\"System.Activities.OutArgument`1\"></xref>."}],"pos":[22493,22586],"yaml":true},{"content":"The activity context that contains the value of the variable.","nodes":[{"pos":[0,61],"content":"The activity context that contains the value of the variable.","nodes":[{"content":"The activity context that contains the value of the variable.","pos":[0,61]}]}],"pos":[22802,22864],"yaml":true},{"content":"A reference to the location where the value of the argument is stored.","nodes":[{"pos":[0,70],"content":"A reference to the location where the value of the argument is stored.","nodes":[{"content":"A reference to the location where the value of the argument is stored.","pos":[0,70]}]}],"pos":[22936,23007],"yaml":true},{"content":"Sets the value of the <xref href=\"System.Activities.OutArgument`1\"></xref> using the specified activity context.","nodes":[{"pos":[0,112],"content":"Sets the value of the <ph id=\"ph1\">&lt;xref href=\"System.Activities.OutArgument`1\"&gt;&lt;/xref&gt;</ph> using the specified activity context.","source":"Sets the value of the <xref href=\"System.Activities.OutArgument`1\"></xref> using the specified activity context."}],"pos":[28760,28873],"yaml":true},{"content":"The current activity context.","nodes":[{"pos":[0,29],"content":"The current activity context.","nodes":[{"content":"The current activity context.","pos":[0,29]}]}],"pos":[29065,29095],"yaml":true},{"content":"The new value.","nodes":[{"pos":[0,14],"content":"The new value.","nodes":[{"content":"The new value.","pos":[0,14]}]}],"pos":[29144,29159],"yaml":true}],"content":"### YamlMime:ManagedReference\nitems:\n- uid: System.Activities.OutArgument`1\n  commentId: T:System.Activities.OutArgument`1\n  id: OutArgument`1\n  children:\n  - System.Activities.OutArgument`1.#ctor\n  - System.Activities.OutArgument`1.#ctor(System.Activities.Activity{System.Activities.Location{`0}})\n  - System.Activities.OutArgument`1.#ctor(System.Activities.DelegateArgument)\n  - System.Activities.OutArgument`1.#ctor(System.Activities.Variable)\n  - System.Activities.OutArgument`1.#ctor(System.Linq.Expressions.Expression{System.Func{System.Activities.ActivityContext,`0}})\n  - System.Activities.OutArgument`1.Expression\n  - System.Activities.OutArgument`1.FromDelegateArgument(System.Activities.DelegateArgument)\n  - System.Activities.OutArgument`1.FromExpression(System.Activities.Activity{System.Activities.Location{`0}})\n  - System.Activities.OutArgument`1.FromVariable(System.Activities.Variable)\n  - System.Activities.OutArgument`1.Get(System.Activities.ActivityContext)\n  - System.Activities.OutArgument`1.GetLocation(System.Activities.ActivityContext)\n  - System.Activities.OutArgument`1.op_Implicit(System.Activities.Activity{System.Activities.Location{T}} to System.Activities.OutArgument{T})\n  - System.Activities.OutArgument`1.op_Implicit(System.Activities.DelegateArgument to System.Activities.OutArgument{T})\n  - System.Activities.OutArgument`1.op_Implicit(System.Activities.Variable to System.Activities.OutArgument{T})\n  - System.Activities.OutArgument`1.Set(System.Activities.ActivityContext,`0)\n  langs:\n  - csharp\n  name: OutArgument<T>\n  nameWithType: OutArgument<T>\n  fullName: System.Activities.OutArgument<T>\n  type: Class\n  assemblies:\n  - System.Activities\n  namespace: System.Activities\n  summary: A binding terminal that represents the flow of data out of an activity.\n  remarks: \"An <xref:System.Activities.OutArgument%601> is used to flow data out of an activity. If the activity is the root activity of a workflow, then it is also used to flow data out of the workflow to the workflow host. In this example, a custom `Divide` activity that has two input arguments and one output argument is used as the root activity of a workflow. The host application passes two values into the workflow and then retrieves the result of the division after the workflow completes.  \\n  \\n [!code-csharp[CFX_WorkflowInvokerExample#20](~/samples/snippets/csharp/VS_Snippets_CFX/cfx_workflowinvokerexample/cs/program.cs#20)]  \\n  \\n The `Divide` activity uses arguments to receive the input values and to provide the computed result values. The `Remainder` <xref:System.Activities.OutArgument%601> is used to pass out the remainder of the division, and the <xref:System.Activities.Activity%601.Result%2A> output argument provided by <xref:System.Activities.Activity%601> derived activities is used to pass out the quotient.  \\n  \\n> [!NOTE]\\n>  If your custom activity is derived from the generic <xref:System.Activities.CodeActivity%601> with an <xref:System.Int32> as its generic type argument, when you invoke the activity with the <xref:System.Activities.WorkflowInvoker> Invoke method, it returns an <xref:System.Int32> value. In Addition, the <xref:System.Activities.CodeActivity%601.Execute%2A?displayProperty=fullName> method will return an <xref:System.Int32> value instead of `void` and you do not need to set a return value.  \\n  \\n [!code-csharp[CFX_WorkflowApplicationExample#120](~/samples/snippets/csharp/VS_Snippets_CFX/cfx_workflowapplicationexample/cs/program.cs#120)]\"\n  example:\n  - \"The following code sample demonstrates creating an <xref:System.Activities.OutArgument%601>. This example is from the Formatter sample.  \\n  \\n [!code-csharp[wfs_Formatter#1](~/samples/snippets/csharp/VS_Snippets_CFX/wfs_formatter/cs/program.cs#1)]\"\n  syntax:\n    content: >-\n      [System.ComponentModel.TypeConverter(typeof(System.Activities.XamlIntegration.OutArgumentConverter))]\n\n      [System.Windows.Markup.ContentProperty(\"Expression\")]\n\n      public sealed class OutArgument<T> : System.Activities.OutArgument\n    typeParameters:\n    - id: T\n      description: The data type of the <xref href=\"System.Activities.OutArgument`1\"></xref>.\n  inheritance:\n  - System.Object\n  - System.Activities.Argument\n  - System.Activities.OutArgument\n  implements: []\n  inheritedMembers:\n  - System.Activities.Argument.ArgumentType\n  - System.Activities.Argument.Create(System.Type,System.Activities.ArgumentDirection)\n  - System.Activities.Argument.CreateReference(System.Activities.Argument,System.String)\n  - System.Activities.Argument.Direction\n  - System.Activities.Argument.EvaluationOrder\n  - System.Activities.Argument.Get``1(System.Activities.ActivityContext)\n  - System.Activities.Argument.ResultValue\n  - System.Activities.Argument.Set(System.Activities.ActivityContext,System.Object)\n  - System.Activities.Argument.UnspecifiedEvaluationOrder\n  - System.Activities.OutArgument.CreateReference(System.Activities.InOutArgument,System.String)\n  - System.Activities.OutArgument.CreateReference(System.Activities.OutArgument,System.String)\n  - System.Object.Equals(System.Object)\n  - System.Object.Equals(System.Object,System.Object)\n  - System.Object.GetHashCode\n  - System.Object.GetType\n  - System.Object.MemberwiseClone\n  - System.Object.ReferenceEquals(System.Object,System.Object)\n  - System.Object.ToString\n  attributes:\n  - type: System.ComponentModel.TypeConverterAttribute\n  - type: System.Windows.Markup.ContentPropertyAttribute\n  version:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Activities/OutArgument`1.xml\n  ms.technology:\n  - dotnet-standard\n  author: Erikre\n  ms.author: erikre\n  manager: erikre\n- uid: System.Activities.OutArgument`1.#ctor\n  commentId: M:System.Activities.OutArgument`1.#ctor\n  id: '#ctor'\n  parent: System.Activities.OutArgument`1\n  langs:\n  - csharp\n  name: OutArgument<T>()\n  nameWithType: OutArgument<T>.OutArgument<T>()\n  fullName: OutArgument<T>.OutArgument<T>()\n  type: Constructor\n  assemblies:\n  - System.Activities\n  namespace: System.Activities\n  summary: Initialize a new instance of the <xref href=\"System.Activities.OutArgument`1\"></xref> class using default values.\n  remarks: ''\n  example:\n  - \"The following code sample demonstrates creating an <xref:System.Activities.OutArgument%601>. This example is from the Formatter sample.  \\n  \\n [!code-csharp[wfs_Formatter#1](~/samples/snippets/csharp/VS_Snippets_CFX/wfs_formatter/cs/program.cs#1)]\"\n  syntax:\n    content: public OutArgument ();\n    parameters: []\n  overload: System.Activities.OutArgument`1.#ctor*\n  exceptions: []\n  version:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Activities/OutArgument`1.xml\n  ms.technology:\n  - dotnet-standard\n  author: Erikre\n  ms.author: erikre\n  manager: erikre\n- uid: System.Activities.OutArgument`1.#ctor(System.Activities.Activity{System.Activities.Location{`0}})\n  commentId: M:System.Activities.OutArgument`1.#ctor(System.Activities.Activity{System.Activities.Location{`0}})\n  id: '#ctor(System.Activities.Activity{System.Activities.Location{`0}})'\n  parent: System.Activities.OutArgument`1\n  langs:\n  - csharp\n  name: OutArgument<T>(Activity<Location<T>>)\n  nameWithType: OutArgument<T>.OutArgument<T>(Activity<Location<T>>)\n  fullName: OutArgument<T>.OutArgument<T>(Activity<Location<T>>)\n  type: Constructor\n  assemblies:\n  - System.Activities\n  namespace: System.Activities\n  summary: Initializes a new instance of the <xref href=\"System.Activities.OutArgument`1\"></xref> class using the specified <xref href=\"System.Activities.Activity`1\"></xref>.\n  syntax:\n    content: public OutArgument (System.Activities.Activity<System.Activities.Location<T>> expression);\n    parameters:\n    - id: expression\n      type: System.Activities.Activity{System.Activities.Location{T}}\n      description: The value of the argument.\n  overload: System.Activities.OutArgument`1.#ctor*\n  exceptions: []\n  version:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Activities/OutArgument`1.xml\n  ms.technology:\n  - dotnet-standard\n  author: Erikre\n  ms.author: erikre\n  manager: erikre\n- uid: System.Activities.OutArgument`1.#ctor(System.Activities.DelegateArgument)\n  commentId: M:System.Activities.OutArgument`1.#ctor(System.Activities.DelegateArgument)\n  id: '#ctor(System.Activities.DelegateArgument)'\n  parent: System.Activities.OutArgument`1\n  langs:\n  - csharp\n  name: OutArgument<T>(DelegateArgument)\n  nameWithType: OutArgument<T>.OutArgument<T>(DelegateArgument)\n  fullName: OutArgument<T>.OutArgument<T>(DelegateArgument)\n  type: Constructor\n  assemblies:\n  - System.Activities\n  namespace: System.Activities\n  summary: Initializes a new instance of the <xref href=\"System.Activities.OutArgument`1\"></xref> class using the specified <xref href=\"System.Activities.DelegateArgument\"></xref>.\n  syntax:\n    content: public OutArgument (System.Activities.DelegateArgument delegateArgument);\n    parameters:\n    - id: delegateArgument\n      type: System.Activities.DelegateArgument\n      description: The value of the argument.\n  overload: System.Activities.OutArgument`1.#ctor*\n  exceptions: []\n  version:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Activities/OutArgument`1.xml\n  ms.technology:\n  - dotnet-standard\n  author: Erikre\n  ms.author: erikre\n  manager: erikre\n- uid: System.Activities.OutArgument`1.#ctor(System.Activities.Variable)\n  commentId: M:System.Activities.OutArgument`1.#ctor(System.Activities.Variable)\n  id: '#ctor(System.Activities.Variable)'\n  parent: System.Activities.OutArgument`1\n  langs:\n  - csharp\n  name: OutArgument<T>(Variable)\n  nameWithType: OutArgument<T>.OutArgument<T>(Variable)\n  fullName: OutArgument<T>.OutArgument<T>(Variable)\n  type: Constructor\n  assemblies:\n  - System.Activities\n  namespace: System.Activities\n  summary: Initializes a new instance of the <xref href=\"System.Activities.OutArgument`1\"></xref> class using the specified <xref href=\"System.Activities.Variable\"></xref>.\n  syntax:\n    content: public OutArgument (System.Activities.Variable variable);\n    parameters:\n    - id: variable\n      type: System.Activities.Variable\n      description: The value of the argument.\n  overload: System.Activities.OutArgument`1.#ctor*\n  exceptions: []\n  version:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Activities/OutArgument`1.xml\n  ms.technology:\n  - dotnet-standard\n  author: Erikre\n  ms.author: erikre\n  manager: erikre\n- uid: System.Activities.OutArgument`1.#ctor(System.Linq.Expressions.Expression{System.Func{System.Activities.ActivityContext,`0}})\n  commentId: M:System.Activities.OutArgument`1.#ctor(System.Linq.Expressions.Expression{System.Func{System.Activities.ActivityContext,`0}})\n  id: '#ctor(System.Linq.Expressions.Expression{System.Func{System.Activities.ActivityContext,`0}})'\n  parent: System.Activities.OutArgument`1\n  langs:\n  - csharp\n  name: OutArgument<T>(Expression<Func<ActivityContext,T>>)\n  nameWithType: OutArgument<T>.OutArgument<T>(Expression<Func<ActivityContext,T>>)\n  fullName: OutArgument<T>.OutArgument<T>(Expression<Func<ActivityContext,T>>)\n  type: Constructor\n  assemblies:\n  - System.Activities\n  namespace: System.Activities\n  summary: Initializes a new instance of the <xref href=\"System.Activities.OutArgument`1\"></xref> class using the specified expression.\n  syntax:\n    content: public OutArgument (System.Linq.Expressions.Expression<Func<System.Activities.ActivityContext,T>> expression);\n    parameters:\n    - id: expression\n      type: System.Linq.Expressions.Expression{System.Func{System.Activities.ActivityContext,T}}\n      description: The value of the argument.\n  overload: System.Activities.OutArgument`1.#ctor*\n  exceptions: []\n  version:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Activities/OutArgument`1.xml\n  ms.technology:\n  - dotnet-standard\n  author: Erikre\n  ms.author: erikre\n  manager: erikre\n- uid: System.Activities.OutArgument`1.Expression\n  commentId: P:System.Activities.OutArgument`1.Expression\n  id: Expression\n  parent: System.Activities.OutArgument`1\n  langs:\n  - csharp\n  name: Expression\n  nameWithType: OutArgument<T>.Expression\n  fullName: OutArgument<T>.Expression\n  type: Property\n  assemblies:\n  - System.Activities\n  namespace: System.Activities\n  summary: Gets an <xref href=\"System.Activities.Activity`1\"></xref> that represents the value of this <xref href=\"System.Activities.OutArgument`1\"></xref>.\n  syntax:\n    content: public System.Activities.Activity<System.Activities.Location<T>> Expression { get; set; }\n    return:\n      type: System.Activities.Activity{System.Activities.Location{T}}\n      description: An activity that represents the value of the argument.\n  overload: System.Activities.OutArgument`1.Expression*\n  exceptions: []\n  attributes: []\n  version:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Activities/OutArgument`1.xml\n  ms.technology:\n  - dotnet-standard\n  author: Erikre\n  ms.author: erikre\n  manager: erikre\n- uid: System.Activities.OutArgument`1.FromDelegateArgument(System.Activities.DelegateArgument)\n  commentId: M:System.Activities.OutArgument`1.FromDelegateArgument(System.Activities.DelegateArgument)\n  id: FromDelegateArgument(System.Activities.DelegateArgument)\n  parent: System.Activities.OutArgument`1\n  langs:\n  - csharp\n  name: FromDelegateArgument(DelegateArgument)\n  nameWithType: OutArgument<T>.FromDelegateArgument(DelegateArgument)\n  fullName: OutArgument<T>.FromDelegateArgument(DelegateArgument)\n  type: Method\n  assemblies:\n  - System.Activities\n  namespace: System.Activities\n  summary: Initializes and returns a new <xref href=\"System.Activities.OutArgument`1\"></xref> constructed using the specified <xref href=\"System.Activities.DelegateArgument\"></xref>.\n  syntax:\n    content: public static System.Activities.OutArgument<T> FromDelegateArgument (System.Activities.DelegateArgument delegateArgument);\n    parameters:\n    - id: delegateArgument\n      type: System.Activities.DelegateArgument\n      description: The value of the argument.\n    return:\n      type: System.Activities.OutArgument`1\n      description: The new argument.\n  overload: System.Activities.OutArgument`1.FromDelegateArgument*\n  exceptions: []\n  version:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Activities/OutArgument`1.xml\n  ms.technology:\n  - dotnet-standard\n  author: Erikre\n  ms.author: erikre\n  manager: erikre\n- uid: System.Activities.OutArgument`1.FromExpression(System.Activities.Activity{System.Activities.Location{`0}})\n  commentId: M:System.Activities.OutArgument`1.FromExpression(System.Activities.Activity{System.Activities.Location{`0}})\n  id: FromExpression(System.Activities.Activity{System.Activities.Location{`0}})\n  parent: System.Activities.OutArgument`1\n  langs:\n  - csharp\n  name: FromExpression(Activity<Location<T>>)\n  nameWithType: OutArgument<T>.FromExpression(Activity<Location<T>>)\n  fullName: OutArgument<T>.FromExpression(Activity<Location<T>>)\n  type: Method\n  assemblies:\n  - System.Activities\n  namespace: System.Activities\n  summary: Initializes and returns a new <xref href=\"System.Activities.OutArgument`1\"></xref> constructed using the specified <xref href=\"System.Activities.Activity`1\"></xref>.\n  syntax:\n    content: public static System.Activities.OutArgument<T> FromExpression (System.Activities.Activity<System.Activities.Location<T>> expression);\n    parameters:\n    - id: expression\n      type: System.Activities.Activity{System.Activities.Location{T}}\n      description: The value of the argument,\n    return:\n      type: System.Activities.OutArgument`1\n      description: The new argument.\n  overload: System.Activities.OutArgument`1.FromExpression*\n  exceptions: []\n  version:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Activities/OutArgument`1.xml\n  ms.technology:\n  - dotnet-standard\n  author: Erikre\n  ms.author: erikre\n  manager: erikre\n- uid: System.Activities.OutArgument`1.FromVariable(System.Activities.Variable)\n  commentId: M:System.Activities.OutArgument`1.FromVariable(System.Activities.Variable)\n  id: FromVariable(System.Activities.Variable)\n  parent: System.Activities.OutArgument`1\n  langs:\n  - csharp\n  name: FromVariable(Variable)\n  nameWithType: OutArgument<T>.FromVariable(Variable)\n  fullName: OutArgument<T>.FromVariable(Variable)\n  type: Method\n  assemblies:\n  - System.Activities\n  namespace: System.Activities\n  summary: Initializes and returns a new <xref href=\"System.Activities.OutArgument`1\"></xref> constructed using the specified <xref href=\"System.Activities.Variable\"></xref>.\n  syntax:\n    content: public static System.Activities.OutArgument<T> FromVariable (System.Activities.Variable variable);\n    parameters:\n    - id: variable\n      type: System.Activities.Variable\n      description: The value of the argument.\n    return:\n      type: System.Activities.OutArgument`1\n      description: The new argument.\n  overload: System.Activities.OutArgument`1.FromVariable*\n  exceptions: []\n  version:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Activities/OutArgument`1.xml\n  ms.technology:\n  - dotnet-standard\n  author: Erikre\n  ms.author: erikre\n  manager: erikre\n- uid: System.Activities.OutArgument`1.Get(System.Activities.ActivityContext)\n  commentId: M:System.Activities.OutArgument`1.Get(System.Activities.ActivityContext)\n  id: Get(System.Activities.ActivityContext)\n  parent: System.Activities.OutArgument`1\n  langs:\n  - csharp\n  name: Get(ActivityContext)\n  nameWithType: OutArgument<T>.Get(ActivityContext)\n  fullName: OutArgument<T>.Get(ActivityContext)\n  type: Method\n  assemblies:\n  - System.Activities\n  namespace: System.Activities\n  summary: Gets the value of the <xref href=\"System.Activities.OutArgument`1\"></xref> using the specified activity context.\n  syntax:\n    content: public T Get (System.Activities.ActivityContext context);\n    parameters:\n    - id: context\n      type: System.Activities.ActivityContext\n      description: The current activity context.\n    return:\n      type: T\n      description: The value of the argument.\n  overload: System.Activities.OutArgument`1.Get*\n  exceptions: []\n  version:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Activities/OutArgument`1.xml\n  ms.technology:\n  - dotnet-standard\n  author: Erikre\n  ms.author: erikre\n  manager: erikre\n- uid: System.Activities.OutArgument`1.GetLocation(System.Activities.ActivityContext)\n  commentId: M:System.Activities.OutArgument`1.GetLocation(System.Activities.ActivityContext)\n  id: GetLocation(System.Activities.ActivityContext)\n  parent: System.Activities.OutArgument`1\n  langs:\n  - csharp\n  name: GetLocation(ActivityContext)\n  nameWithType: OutArgument<T>.GetLocation(ActivityContext)\n  fullName: OutArgument<T>.GetLocation(ActivityContext)\n  type: Method\n  assemblies:\n  - System.Activities\n  namespace: System.Activities\n  summary: Gets the location of the value for the <xref href=\"System.Activities.OutArgument`1\"></xref>.\n  syntax:\n    content: public System.Activities.Location<T> GetLocation (System.Activities.ActivityContext context);\n    parameters:\n    - id: context\n      type: System.Activities.ActivityContext\n      description: The activity context that contains the value of the variable.\n    return:\n      type: System.Activities.Location`1\n      description: A reference to the location where the value of the argument is stored.\n  overload: System.Activities.OutArgument`1.GetLocation*\n  exceptions: []\n  version:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Activities/OutArgument`1.xml\n  ms.technology:\n  - dotnet-standard\n  author: Erikre\n  ms.author: erikre\n  manager: erikre\n- uid: System.Activities.OutArgument`1.op_Implicit(System.Activities.Activity{System.Activities.Location{T}} to System.Activities.OutArgument{T})\n  commentId: M:System.Activities.OutArgument`1.op_Implicit(System.Activities.Activity{System.Activities.Location{`0}})~System.Activities.OutArgument{`0}\n  id: op_Implicit(System.Activities.Activity{System.Activities.Location{T}} to System.Activities.OutArgument{T})\n  parent: System.Activities.OutArgument`1\n  langs:\n  - csharp\n  name: op_Implicit(Activity<Location<T>> to OutArgument<T>)\n  nameWithType: OutArgument<T>.op_Implicit(Activity<Location<T>> to OutArgument<T>)\n  fullName: OutArgument<T>.op_Implicit(Activity<Location<T>> to OutArgument<T>)\n  type: Operator\n  assemblies:\n  - System.Activities\n  namespace: System.Activities\n  syntax:\n    content: public static System.Activities.OutArgument<T> op_Implicit (System.Activities.Activity<System.Activities.Location<T>> expression);\n    parameters:\n    - id: expression\n      type: System.Activities.Activity{System.Activities.Location{T}}\n      description: ''\n    return:\n      type: System.Activities.OutArgument`1\n      description: ''\n  overload: System.Activities.OutArgument`1.op_Implicit*\n  exceptions: []\n  version:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Activities/OutArgument`1.xml\n- uid: System.Activities.OutArgument`1.op_Implicit(System.Activities.DelegateArgument to System.Activities.OutArgument{T})\n  commentId: M:System.Activities.OutArgument`1.op_Implicit(System.Activities.DelegateArgument)~System.Activities.OutArgument{`0}\n  id: op_Implicit(System.Activities.DelegateArgument to System.Activities.OutArgument{T})\n  parent: System.Activities.OutArgument`1\n  langs:\n  - csharp\n  name: op_Implicit(DelegateArgument to OutArgument<T>)\n  nameWithType: OutArgument<T>.op_Implicit(DelegateArgument to OutArgument<T>)\n  fullName: OutArgument<T>.op_Implicit(DelegateArgument to OutArgument<T>)\n  type: Operator\n  assemblies:\n  - System.Activities\n  namespace: System.Activities\n  syntax:\n    content: public static System.Activities.OutArgument<T> op_Implicit (System.Activities.DelegateArgument delegateArgument);\n    parameters:\n    - id: delegateArgument\n      type: System.Activities.DelegateArgument\n      description: ''\n    return:\n      type: System.Activities.OutArgument`1\n      description: ''\n  overload: System.Activities.OutArgument`1.op_Implicit*\n  exceptions: []\n  version:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Activities/OutArgument`1.xml\n- uid: System.Activities.OutArgument`1.op_Implicit(System.Activities.Variable to System.Activities.OutArgument{T})\n  commentId: M:System.Activities.OutArgument`1.op_Implicit(System.Activities.Variable)~System.Activities.OutArgument{`0}\n  id: op_Implicit(System.Activities.Variable to System.Activities.OutArgument{T})\n  parent: System.Activities.OutArgument`1\n  langs:\n  - csharp\n  name: op_Implicit(Variable to OutArgument<T>)\n  nameWithType: OutArgument<T>.op_Implicit(Variable to OutArgument<T>)\n  fullName: OutArgument<T>.op_Implicit(Variable to OutArgument<T>)\n  type: Operator\n  assemblies:\n  - System.Activities\n  namespace: System.Activities\n  syntax:\n    content: public static System.Activities.OutArgument<T> op_Implicit (System.Activities.Variable variable);\n    parameters:\n    - id: variable\n      type: System.Activities.Variable\n      description: ''\n    return:\n      type: System.Activities.OutArgument`1\n      description: ''\n  overload: System.Activities.OutArgument`1.op_Implicit*\n  exceptions: []\n  version:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Activities/OutArgument`1.xml\n- uid: System.Activities.OutArgument`1.Set(System.Activities.ActivityContext,`0)\n  commentId: M:System.Activities.OutArgument`1.Set(System.Activities.ActivityContext,`0)\n  id: Set(System.Activities.ActivityContext,`0)\n  parent: System.Activities.OutArgument`1\n  langs:\n  - csharp\n  name: Set(ActivityContext, T)\n  nameWithType: OutArgument<T>.Set(ActivityContext, T)\n  fullName: OutArgument<T>.Set(ActivityContext, T)\n  type: Method\n  assemblies:\n  - System.Activities\n  namespace: System.Activities\n  summary: Sets the value of the <xref href=\"System.Activities.OutArgument`1\"></xref> using the specified activity context.\n  syntax:\n    content: public void Set (System.Activities.ActivityContext context, T value);\n    parameters:\n    - id: context\n      type: System.Activities.ActivityContext\n      description: The current activity context.\n    - id: value\n      type: T\n      description: The new value.\n  overload: System.Activities.OutArgument`1.Set*\n  exceptions: []\n  version:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Activities/OutArgument`1.xml\n  ms.technology:\n  - dotnet-standard\n  author: Erikre\n  ms.author: erikre\n  manager: erikre\nreferences:\n- uid: System.Activities.OutArgument\n  parent: System.Activities\n  isExternal: false\n  name: OutArgument\n  nameWithType: OutArgument\n  fullName: System.Activities.OutArgument\n- uid: System.Activities.OutArgument`1.#ctor\n  parent: System.Activities.OutArgument`1\n  isExternal: false\n  name: OutArgument<T>()\n  nameWithType: OutArgument<T>.OutArgument<T>()\n  fullName: OutArgument<T>.OutArgument<T>()\n- uid: System.Activities.OutArgument`1.#ctor(System.Activities.Activity{System.Activities.Location{`0}})\n  parent: System.Activities.OutArgument`1\n  isExternal: false\n  name: OutArgument<T>(Activity<Location<T>>)\n  nameWithType: OutArgument<T>.OutArgument<T>(Activity<Location<T>>)\n  fullName: OutArgument<T>.OutArgument<T>(Activity<Location<T>>)\n- uid: System.Activities.Activity`1\n  name: Activity<TResult>\n  nameWithType: Activity<TResult>\n  fullName: System.Activities.Activity<TResult>\n- uid: System.Activities.Location`1\n  name: Location<T>\n  nameWithType: Location<T>\n  fullName: System.Activities.Location<T>\n- uid: T\n  name: T\n  nameWithType: T\n  fullName: T\n- uid: System.Activities.Activity{System.Activities.Location{T}}\n  parent: System.Activities\n  isExternal: false\n  name: Activity<Location<T>>\n  nameWithType: Activity<Location<T>>\n  fullName: System.Activities.Activity<System.Activities.Location<T>>\n  spec.csharp:\n  - uid: System.Activities.Activity`1\n    name: Activity\n    nameWithType: Activity\n    fullName: System.Activities.Activity\n  - name: <\n    nameWithType: <\n    fullName: <\n  - uid: System.Activities.Location`1\n    name: Location\n    nameWithType: Location\n    fullName: System.Activities.Location\n  - name: <\n    nameWithType: <\n    fullName: <\n  - uid: T\n    name: T\n    nameWithType: T\n    fullName: T\n  - name: '>'\n    nameWithType: '>'\n    fullName: '>'\n  - name: '>'\n    nameWithType: '>'\n    fullName: '>'\n- uid: System.Activities.OutArgument`1.#ctor(System.Activities.DelegateArgument)\n  parent: System.Activities.OutArgument`1\n  isExternal: false\n  name: OutArgument<T>(DelegateArgument)\n  nameWithType: OutArgument<T>.OutArgument<T>(DelegateArgument)\n  fullName: OutArgument<T>.OutArgument<T>(DelegateArgument)\n- uid: System.Activities.DelegateArgument\n  parent: System.Activities\n  isExternal: false\n  name: DelegateArgument\n  nameWithType: DelegateArgument\n  fullName: System.Activities.DelegateArgument\n- uid: System.Activities.OutArgument`1.#ctor(System.Activities.Variable)\n  parent: System.Activities.OutArgument`1\n  isExternal: false\n  name: OutArgument<T>(Variable)\n  nameWithType: OutArgument<T>.OutArgument<T>(Variable)\n  fullName: OutArgument<T>.OutArgument<T>(Variable)\n- uid: System.Activities.Variable\n  parent: System.Activities\n  isExternal: false\n  name: Variable\n  nameWithType: Variable\n  fullName: System.Activities.Variable\n- uid: System.Activities.OutArgument`1.#ctor(System.Linq.Expressions.Expression{System.Func{System.Activities.ActivityContext,`0}})\n  parent: System.Activities.OutArgument`1\n  isExternal: false\n  name: OutArgument<T>(Expression<Func<ActivityContext,T>>)\n  nameWithType: OutArgument<T>.OutArgument<T>(Expression<Func<ActivityContext,T>>)\n  fullName: OutArgument<T>.OutArgument<T>(Expression<Func<ActivityContext,T>>)\n- uid: System.Linq.Expressions.Expression`1\n  name: Expression<TDelegate>\n  nameWithType: Expression<TDelegate>\n  fullName: System.Linq.Expressions.Expression<TDelegate>\n- uid: System.Func`2\n  name: Func<T,TResult>\n  nameWithType: Func<T,TResult>\n  fullName: System.Func<T,TResult>\n- uid: System.Activities.ActivityContext\n  name: ActivityContext\n  nameWithType: ActivityContext\n  fullName: System.Activities.ActivityContext\n- uid: System.Linq.Expressions.Expression{System.Func{System.Activities.ActivityContext,T}}\n  parent: System.Linq.Expressions\n  isExternal: false\n  name: Expression<Func<ActivityContext,T>>\n  nameWithType: Expression<Func<ActivityContext,T>>\n  fullName: System.Linq.Expressions.Expression<System.Func<System.Activities.ActivityContext,T>>\n  spec.csharp:\n  - uid: System.Linq.Expressions.Expression`1\n    name: Expression\n    nameWithType: Expression\n    fullName: System.Linq.Expressions.Expression\n  - name: <\n    nameWithType: <\n    fullName: <\n  - uid: System.Func`2\n    name: Func\n    nameWithType: Func\n    fullName: System.Func\n  - name: <\n    nameWithType: <\n    fullName: <\n  - uid: System.Activities.ActivityContext\n    name: ActivityContext\n    nameWithType: ActivityContext\n    fullName: System.Activities.ActivityContext\n  - name: ','\n    nameWithType: ','\n    fullName: ','\n  - uid: T\n    name: T\n    nameWithType: T\n    fullName: T\n  - name: '>'\n    nameWithType: '>'\n    fullName: '>'\n  - name: '>'\n    nameWithType: '>'\n    fullName: '>'\n- uid: System.Activities.OutArgument`1.Expression\n  parent: System.Activities.OutArgument`1\n  isExternal: false\n  name: Expression\n  nameWithType: OutArgument<T>.Expression\n  fullName: OutArgument<T>.Expression\n- uid: System.Activities.OutArgument`1.FromDelegateArgument(System.Activities.DelegateArgument)\n  parent: System.Activities.OutArgument`1\n  isExternal: false\n  name: FromDelegateArgument(DelegateArgument)\n  nameWithType: OutArgument<T>.FromDelegateArgument(DelegateArgument)\n  fullName: OutArgument<T>.FromDelegateArgument(DelegateArgument)\n- uid: System.Activities.OutArgument`1\n  parent: System.Activities\n  isExternal: false\n  name: OutArgument<T>\n  nameWithType: OutArgument<T>\n  fullName: System.Activities.OutArgument<T>\n- uid: System.Activities.OutArgument`1.FromExpression(System.Activities.Activity{System.Activities.Location{`0}})\n  parent: System.Activities.OutArgument`1\n  isExternal: false\n  name: FromExpression(Activity<Location<T>>)\n  nameWithType: OutArgument<T>.FromExpression(Activity<Location<T>>)\n  fullName: OutArgument<T>.FromExpression(Activity<Location<T>>)\n- uid: System.Activities.OutArgument`1.FromVariable(System.Activities.Variable)\n  parent: System.Activities.OutArgument`1\n  isExternal: false\n  name: FromVariable(Variable)\n  nameWithType: OutArgument<T>.FromVariable(Variable)\n  fullName: OutArgument<T>.FromVariable(Variable)\n- uid: System.Activities.OutArgument`1.Get(System.Activities.ActivityContext)\n  parent: System.Activities.OutArgument`1\n  isExternal: false\n  name: Get(ActivityContext)\n  nameWithType: OutArgument<T>.Get(ActivityContext)\n  fullName: OutArgument<T>.Get(ActivityContext)\n- uid: System.Activities.OutArgument`1.GetLocation(System.Activities.ActivityContext)\n  parent: System.Activities.OutArgument`1\n  isExternal: false\n  name: GetLocation(ActivityContext)\n  nameWithType: OutArgument<T>.GetLocation(ActivityContext)\n  fullName: OutArgument<T>.GetLocation(ActivityContext)\n- uid: System.Activities.OutArgument`1.op_Implicit(System.Activities.Activity{System.Activities.Location{T}} to System.Activities.OutArgument{T})\n  parent: System.Activities.OutArgument`1\n  isExternal: false\n  name: op_Implicit(Activity<Location<T>> to OutArgument<T>)\n  nameWithType: OutArgument<T>.op_Implicit(Activity<Location<T>> to OutArgument<T>)\n  fullName: OutArgument<T>.op_Implicit(Activity<Location<T>> to OutArgument<T>)\n- uid: System.Activities.OutArgument`1.op_Implicit(System.Activities.DelegateArgument to System.Activities.OutArgument{T})\n  parent: System.Activities.OutArgument`1\n  isExternal: false\n  name: op_Implicit(DelegateArgument to OutArgument<T>)\n  nameWithType: OutArgument<T>.op_Implicit(DelegateArgument to OutArgument<T>)\n  fullName: OutArgument<T>.op_Implicit(DelegateArgument to OutArgument<T>)\n- uid: System.Activities.OutArgument`1.op_Implicit(System.Activities.Variable to System.Activities.OutArgument{T})\n  parent: System.Activities.OutArgument`1\n  isExternal: false\n  name: op_Implicit(Variable to OutArgument<T>)\n  nameWithType: OutArgument<T>.op_Implicit(Variable to OutArgument<T>)\n  fullName: OutArgument<T>.op_Implicit(Variable to OutArgument<T>)\n- uid: System.Activities.OutArgument`1.Set(System.Activities.ActivityContext,`0)\n  parent: System.Activities.OutArgument`1\n  isExternal: false\n  name: Set(ActivityContext, T)\n  nameWithType: OutArgument<T>.Set(ActivityContext, T)\n  fullName: OutArgument<T>.Set(ActivityContext, T)\n- uid: System.Activities.OutArgument`1.#ctor*\n  parent: System.Activities.OutArgument`1\n  isExternal: false\n  name: OutArgument<T>\n  nameWithType: OutArgument<T>.OutArgument<T>\n  fullName: OutArgument<T>.OutArgument<T>\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Activities/OutArgument`1.xml\n- uid: System.Activities.OutArgument`1.Expression*\n  parent: System.Activities.OutArgument`1\n  isExternal: false\n  name: Expression\n  nameWithType: OutArgument<T>.Expression\n  fullName: OutArgument<T>.Expression\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Activities/OutArgument`1.xml\n- uid: System.Activities.OutArgument`1.FromDelegateArgument*\n  parent: System.Activities.OutArgument`1\n  isExternal: false\n  name: FromDelegateArgument\n  nameWithType: OutArgument<T>.FromDelegateArgument\n  fullName: OutArgument<T>.FromDelegateArgument\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Activities/OutArgument`1.xml\n- uid: System.Activities.OutArgument`1.FromExpression*\n  parent: System.Activities.OutArgument`1\n  isExternal: false\n  name: FromExpression\n  nameWithType: OutArgument<T>.FromExpression\n  fullName: OutArgument<T>.FromExpression\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Activities/OutArgument`1.xml\n- uid: System.Activities.OutArgument`1.FromVariable*\n  parent: System.Activities.OutArgument`1\n  isExternal: false\n  name: FromVariable\n  nameWithType: OutArgument<T>.FromVariable\n  fullName: OutArgument<T>.FromVariable\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Activities/OutArgument`1.xml\n- uid: System.Activities.OutArgument`1.Get*\n  parent: System.Activities.OutArgument`1\n  isExternal: false\n  name: Get\n  nameWithType: OutArgument<T>.Get\n  fullName: OutArgument<T>.Get\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Activities/OutArgument`1.xml\n- uid: System.Activities.OutArgument`1.GetLocation*\n  parent: System.Activities.OutArgument`1\n  isExternal: false\n  name: GetLocation\n  nameWithType: OutArgument<T>.GetLocation\n  fullName: OutArgument<T>.GetLocation\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Activities/OutArgument`1.xml\n- uid: System.Activities.OutArgument`1.op_Implicit*\n  parent: System.Activities.OutArgument`1\n  isExternal: false\n  name: op_Implicit\n  nameWithType: OutArgument<T>.op_Implicit\n  fullName: OutArgument<T>.op_Implicit\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Activities/OutArgument`1.xml\n- uid: System.Activities.OutArgument`1.Set*\n  parent: System.Activities.OutArgument`1\n  isExternal: false\n  name: Set\n  nameWithType: OutArgument<T>.Set\n  fullName: OutArgument<T>.Set\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Activities/OutArgument`1.xml\n- uid: System.Object.Equals(System.Object)\n  parent: System.Object\n  isExternal: false\n  name: Equals(Object)\n  nameWithType: Object.Equals(Object)\n  fullName: Object.Equals(Object)\n- uid: System.Object.Equals(System.Object,System.Object)\n  parent: System.Object\n  isExternal: false\n  name: Equals(Object, Object)\n  nameWithType: Object.Equals(Object, Object)\n  fullName: Object.Equals(Object, Object)\n- uid: System.Object.GetHashCode\n  parent: System.Object\n  isExternal: false\n  name: GetHashCode()\n  nameWithType: Object.GetHashCode()\n  fullName: Object.GetHashCode()\n- uid: System.Object.GetType\n  parent: System.Object\n  isExternal: false\n  name: GetType()\n  nameWithType: Object.GetType()\n  fullName: Object.GetType()\n- uid: System.Object.MemberwiseClone\n  parent: System.Object\n  isExternal: false\n  name: MemberwiseClone()\n  nameWithType: Object.MemberwiseClone()\n  fullName: Object.MemberwiseClone()\n- uid: System.Object.ReferenceEquals(System.Object,System.Object)\n  parent: System.Object\n  isExternal: false\n  name: ReferenceEquals(Object, Object)\n  nameWithType: Object.ReferenceEquals(Object, Object)\n  fullName: Object.ReferenceEquals(Object, Object)\n- uid: System.Object.ToString\n  parent: System.Object\n  isExternal: false\n  name: ToString()\n  nameWithType: Object.ToString()\n  fullName: Object.ToString()\n- uid: System.Activities.Argument.ArgumentType\n  parent: System.Activities.Argument\n  isExternal: false\n  name: ArgumentType\n  nameWithType: Argument.ArgumentType\n  fullName: Argument.ArgumentType\n- uid: System.Activities.Argument.Create(System.Type,System.Activities.ArgumentDirection)\n  parent: System.Activities.Argument\n  isExternal: false\n  name: Create(Type, ArgumentDirection)\n  nameWithType: Argument.Create(Type, ArgumentDirection)\n  fullName: Argument.Create(Type, ArgumentDirection)\n- uid: System.Activities.Argument.CreateReference(System.Activities.Argument,System.String)\n  parent: System.Activities.Argument\n  isExternal: false\n  name: CreateReference(Argument, String)\n  nameWithType: Argument.CreateReference(Argument, String)\n  fullName: Argument.CreateReference(Argument, String)\n- uid: System.Activities.Argument.Direction\n  parent: System.Activities.Argument\n  isExternal: false\n  name: Direction\n  nameWithType: Argument.Direction\n  fullName: Argument.Direction\n- uid: System.Activities.Argument.EvaluationOrder\n  parent: System.Activities.Argument\n  isExternal: false\n  name: EvaluationOrder\n  nameWithType: Argument.EvaluationOrder\n  fullName: Argument.EvaluationOrder\n- uid: System.Activities.Argument.Get``1(System.Activities.ActivityContext)\n  parent: System.Activities.Argument\n  isExternal: false\n  name: Get<T>(ActivityContext)\n  nameWithType: Argument.Get<T>(ActivityContext)\n  fullName: Argument.Get<T>(ActivityContext)\n- uid: System.Activities.Argument.ResultValue\n  parent: System.Activities.Argument\n  isExternal: false\n  name: ResultValue\n  nameWithType: Argument.ResultValue\n  fullName: Argument.ResultValue\n- uid: System.Activities.Argument.Set(System.Activities.ActivityContext,System.Object)\n  parent: System.Activities.Argument\n  isExternal: false\n  name: Set(ActivityContext, Object)\n  nameWithType: Argument.Set(ActivityContext, Object)\n  fullName: Argument.Set(ActivityContext, Object)\n- uid: System.Activities.Argument.UnspecifiedEvaluationOrder\n  parent: System.Activities.Argument\n  isExternal: false\n  name: UnspecifiedEvaluationOrder\n  nameWithType: Argument.UnspecifiedEvaluationOrder\n  fullName: Argument.UnspecifiedEvaluationOrder\n- uid: System.Activities.OutArgument.CreateReference(System.Activities.InOutArgument,System.String)\n  parent: System.Activities.OutArgument\n  isExternal: false\n  name: CreateReference(InOutArgument, String)\n  nameWithType: OutArgument.CreateReference(InOutArgument, String)\n  fullName: OutArgument.CreateReference(InOutArgument, String)\n- uid: System.Activities.OutArgument.CreateReference(System.Activities.OutArgument,System.String)\n  parent: System.Activities.OutArgument\n  isExternal: false\n  name: CreateReference(OutArgument, String)\n  nameWithType: OutArgument.CreateReference(OutArgument, String)\n  fullName: OutArgument.CreateReference(OutArgument, String)\n"}