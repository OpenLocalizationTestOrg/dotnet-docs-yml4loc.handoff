{"nodes":[{"content":"Represents a callback delegate that has been registered with a <xref href=\"System.Threading.CancellationToken\"></xref>.","nodes":[{"pos":[0,119],"content":"Represents a callback delegate that has been registered with a <ph id=\"ph1\">&lt;xref href=\"System.Threading.CancellationToken\"&gt;&lt;/xref&gt;</ph>.","source":"Represents a callback delegate that has been registered with a <xref href=\"System.Threading.CancellationToken\"></xref>."}],"pos":[1127,1247],"yaml":true},{"content":"The callback is called when the token is canceled. To unregister a callback, dispose the corresponding Registration instance. For more information and code examples see [Cancellation in Managed Threads](~/docs/standard/threading/cancellation-in-managed-threads.md).","nodes":[{"pos":[0,265],"content":"The callback is called when the token is canceled. To unregister a callback, dispose the corresponding Registration instance. For more information and code examples see [Cancellation in Managed Threads](~/docs/standard/threading/cancellation-in-managed-threads.md).","nodes":[{"content":"The callback is called when the token is canceled.","pos":[0,50]},{"content":"To unregister a callback, dispose the corresponding Registration instance.","pos":[51,125]},{"content":"For more information and code examples see <bpt id=\"p1\">[</bpt>Cancellation in Managed Threads<ept id=\"p1\">](~/docs/standard/threading/cancellation-in-managed-threads.md)</ept>.","pos":[126,265],"source":" For more information and code examples see [Cancellation in Managed Threads](~/docs/standard/threading/cancellation-in-managed-threads.md)."}]}],"pos":[1258,1524],"yaml":true,"extradata":"MT"},{"content":"Releases all resources used by the current instance of the <xref href=\"System.Threading.CancellationTokenRegistration\"></xref> class.","nodes":[{"pos":[0,133],"content":"Releases all resources used by the current instance of the <ph id=\"ph1\">&lt;xref href=\"System.Threading.CancellationTokenRegistration\"&gt;&lt;/xref&gt;</ph> class.","source":"Releases all resources used by the current instance of the <xref href=\"System.Threading.CancellationTokenRegistration\"></xref> class."}],"pos":[3369,3503],"yaml":true},{"content":"Call `Dispose` when you are finished using the <xref:System.Threading.CancellationTokenRegistration>. The `Dispose` method leaves the <xref:System.Threading.CancellationTokenRegistration> in an unusable state. After calling `Dispose`, you must release all references to the <xref:System.Threading.CancellationTokenRegistration> so the garbage collector can reclaim the memory that the <xref:System.Threading.CancellationTokenRegistration> was occupying.  \n  \n For more information, see [Cleaning Up Unmanaged Resources](~/docs/standard/garbage-collection/unmanaged.md) and [Implementing a Dispose Method](~/docs/standard/garbage-collection/implementing-dispose.md).  \n  \n> [!NOTE]\n>  Always call `Dispose` before you release your last reference to the <xref:System.Threading.CancellationTokenRegistration>. Otherwise, the resources it is using will not be freed until the garbage collector calls the <xref:System.Threading.CancellationTokenRegistration> object's `Finalize` method.","nodes":[{"pos":[0,453],"content":"Call `Dispose` when you are finished using the <xref:System.Threading.CancellationTokenRegistration>. The `Dispose` method leaves the <xref:System.Threading.CancellationTokenRegistration> in an unusable state. After calling `Dispose`, you must release all references to the <xref:System.Threading.CancellationTokenRegistration> so the garbage collector can reclaim the memory that the <xref:System.Threading.CancellationTokenRegistration> was occupying.","nodes":[{"content":"Call <ph id=\"ph1\">`Dispose`</ph> when you are finished using the <ph id=\"ph2\">&lt;xref:System.Threading.CancellationTokenRegistration&gt;</ph>.","pos":[0,101],"source":"Call `Dispose` when you are finished using the <xref:System.Threading.CancellationTokenRegistration>."},{"content":"The <ph id=\"ph1\">`Dispose`</ph> method leaves the <ph id=\"ph2\">&lt;xref:System.Threading.CancellationTokenRegistration&gt;</ph> in an unusable state.","pos":[102,209],"source":" The `Dispose` method leaves the <xref:System.Threading.CancellationTokenRegistration> in an unusable state."},{"content":"After calling <ph id=\"ph1\">`Dispose`</ph>, you must release all references to the <ph id=\"ph2\">&lt;xref:System.Threading.CancellationTokenRegistration&gt;</ph> so the garbage collector can reclaim the memory that the <ph id=\"ph3\">&lt;xref:System.Threading.CancellationTokenRegistration&gt;</ph> was occupying.","pos":[210,453],"source":" After calling `Dispose`, you must release all references to the <xref:System.Threading.CancellationTokenRegistration> so the garbage collector can reclaim the memory that the <xref:System.Threading.CancellationTokenRegistration> was occupying."}]},{"pos":[460,665],"content":"For more information, see <bpt id=\"p1\">[</bpt>Cleaning Up Unmanaged Resources<ept id=\"p1\">](~/docs/standard/garbage-collection/unmanaged.md)</ept> and <bpt id=\"p2\">[</bpt>Implementing a Dispose Method<ept id=\"p2\">](~/docs/standard/garbage-collection/implementing-dispose.md)</ept>.","source":"For more information, see [Cleaning Up Unmanaged Resources](~/docs/standard/garbage-collection/unmanaged.md) and [Implementing a Dispose Method](~/docs/standard/garbage-collection/implementing-dispose.md)."},{"pos":[673,981],"content":"[!NOTE]\n Always call `Dispose` before you release your last reference to the <xref:System.Threading.CancellationTokenRegistration>. Otherwise, the resources it is using will not be freed until the garbage collector calls the <xref:System.Threading.CancellationTokenRegistration> object's `Finalize` method.","leadings":["","> "],"nodes":[{"content":" Always call `Dispose` before you release your last reference to the <xref:System.Threading.CancellationTokenRegistration>. Otherwise, the resources it is using will not be freed until the garbage collector calls the <xref:System.Threading.CancellationTokenRegistration> object's `Finalize` method.","pos":[8,306],"nodes":[{"content":"Always call <ph id=\"ph1\">`Dispose`</ph> before you release your last reference to the <ph id=\"ph2\">&lt;xref:System.Threading.CancellationTokenRegistration&gt;</ph>.","pos":[1,123],"source":" Always call `Dispose` before you release your last reference to the <xref:System.Threading.CancellationTokenRegistration>."},{"content":"Otherwise, the resources it is using will not be freed until the garbage collector calls the <ph id=\"ph1\">&lt;xref:System.Threading.CancellationTokenRegistration&gt;</ph> object's <ph id=\"ph2\">`Finalize`</ph> method.","pos":[124,298],"source":" Otherwise, the resources it is using will not be freed until the garbage collector calls the <xref:System.Threading.CancellationTokenRegistration> object's `Finalize` method."}]}]}],"pos":[3514,4503],"yaml":true,"extradata":"MT"},{"content":"Determines whether the current <xref href=\"System.Threading.CancellationTokenRegistration\"></xref> instance is equal to the specified <xref href=\"System.Threading.CancellationTokenRegistration\"></xref>.","nodes":[{"pos":[0,202],"content":"Determines whether the current <ph id=\"ph1\">&lt;xref href=\"System.Threading.CancellationTokenRegistration\"&gt;&lt;/xref&gt;</ph> instance is equal to the specified <ph id=\"ph2\">&lt;xref href=\"System.Threading.CancellationTokenRegistration\"&gt;&lt;/xref&gt;</ph>.","source":"Determines whether the current <xref href=\"System.Threading.CancellationTokenRegistration\"></xref> instance is equal to the specified <xref href=\"System.Threading.CancellationTokenRegistration\"></xref>."}],"pos":[6252,6455],"yaml":true},{"content":"The other object to which to compare this instance.","nodes":[{"pos":[0,51],"content":"The other object to which to compare this instance.","nodes":[{"content":"The other object to which to compare this instance.","pos":[0,51]}]}],"pos":[6595,6647],"yaml":true},{"content":"True, if both this and <code>obj</code> are equal. False, otherwise.  \n  \n Two <xref href=\"System.Threading.CancellationTokenRegistration\"></xref> instances are equal if they both refer to the output of a single call to the same Register method of a <xref href=\"System.Threading.CancellationToken\"></xref>.","nodes":[{"pos":[0,68],"content":"True, if both this and <code>obj</code> are equal. False, otherwise.","nodes":[{"content":"True, if both this and <bpt id=\"p1\">&lt;code&gt;</bpt><ph id=\"ph1\">obj</ph><ept id=\"p1\">&lt;/code&gt;</ept> are equal.","pos":[0,50],"source":"True, if both this and <code>obj</code> are equal."},{"content":"False, otherwise.","pos":[51,68]}]},{"pos":[75,306],"content":"Two <ph id=\"ph1\">&lt;xref href=\"System.Threading.CancellationTokenRegistration\"&gt;&lt;/xref&gt;</ph> instances are equal if they both refer to the output of a single call to the same Register method of a <ph id=\"ph2\">&lt;xref href=\"System.Threading.CancellationToken\"&gt;&lt;/xref&gt;</ph>.","source":"Two <xref href=\"System.Threading.CancellationTokenRegistration\"></xref> instances are equal if they both refer to the output of a single call to the same Register method of a <xref href=\"System.Threading.CancellationToken\"></xref>."}],"pos":[6705,7020],"yaml":true},{"content":"Determines whether the current <xref href=\"System.Threading.CancellationTokenRegistration\"></xref> instance is equal to the specified <xref href=\"System.Threading.CancellationTokenRegistration\"></xref>.","nodes":[{"pos":[0,202],"content":"Determines whether the current <ph id=\"ph1\">&lt;xref href=\"System.Threading.CancellationTokenRegistration\"&gt;&lt;/xref&gt;</ph> instance is equal to the specified <ph id=\"ph2\">&lt;xref href=\"System.Threading.CancellationTokenRegistration\"&gt;&lt;/xref&gt;</ph>.","source":"Determines whether the current <xref href=\"System.Threading.CancellationTokenRegistration\"></xref> instance is equal to the specified <xref href=\"System.Threading.CancellationTokenRegistration\"></xref>."}],"pos":[8870,9073],"yaml":true},{"content":"The other <xref href=\"System.Threading.CancellationTokenRegistration\"></xref> to which to compare this instance.","nodes":[{"pos":[0,112],"content":"The other <ph id=\"ph1\">&lt;xref href=\"System.Threading.CancellationTokenRegistration\"&gt;&lt;/xref&gt;</ph> to which to compare this instance.","source":"The other <xref href=\"System.Threading.CancellationTokenRegistration\"></xref> to which to compare this instance."}],"pos":[9281,9394],"yaml":true},{"content":"True, if both this and <code>other</code> are equal. False, otherwise.  \n  \n Two <xref href=\"System.Threading.CancellationTokenRegistration\"></xref> instances are equal if they both refer to the output of a single call to the same Register method of a <xref href=\"System.Threading.CancellationToken\"></xref>.","nodes":[{"pos":[0,70],"content":"True, if both this and <code>other</code> are equal. False, otherwise.","nodes":[{"content":"True, if both this and <bpt id=\"p1\">&lt;code&gt;</bpt><ph id=\"ph1\">other</ph><ept id=\"p1\">&lt;/code&gt;</ept> are equal.","pos":[0,52],"source":"True, if both this and <code>other</code> are equal."},{"content":"False, otherwise.","pos":[53,70]}]},{"pos":[77,308],"content":"Two <ph id=\"ph1\">&lt;xref href=\"System.Threading.CancellationTokenRegistration\"&gt;&lt;/xref&gt;</ph> instances are equal if they both refer to the output of a single call to the same Register method of a <ph id=\"ph2\">&lt;xref href=\"System.Threading.CancellationToken\"&gt;&lt;/xref&gt;</ph>.","source":"Two <xref href=\"System.Threading.CancellationTokenRegistration\"></xref> instances are equal if they both refer to the output of a single call to the same Register method of a <xref href=\"System.Threading.CancellationToken\"></xref>."}],"pos":[9452,9769],"yaml":true},{"content":"Serves as a hash function for a <xref href=\"System.Threading.CancellationTokenRegistration\"></xref>.","nodes":[{"pos":[0,100],"content":"Serves as a hash function for a <ph id=\"ph1\">&lt;xref href=\"System.Threading.CancellationTokenRegistration\"&gt;&lt;/xref&gt;</ph>.","source":"Serves as a hash function for a <xref href=\"System.Threading.CancellationTokenRegistration\"></xref>."}],"pos":[11418,11519],"yaml":true},{"content":"A hash code for the current <xref href=\"System.Threading.CancellationTokenRegistration\"></xref> instance.","nodes":[{"pos":[0,105],"content":"A hash code for the current <ph id=\"ph1\">&lt;xref href=\"System.Threading.CancellationTokenRegistration\"&gt;&lt;/xref&gt;</ph> instance.","source":"A hash code for the current <xref href=\"System.Threading.CancellationTokenRegistration\"></xref> instance."}],"pos":[11653,11759],"yaml":true},{"content":"Determines whether two <xref href=\"System.Threading.CancellationTokenRegistration\"></xref> instances are equal.","nodes":[{"pos":[0,111],"content":"Determines whether two <ph id=\"ph1\">&lt;xref href=\"System.Threading.CancellationTokenRegistration\"&gt;&lt;/xref&gt;</ph> instances are equal.","source":"Determines whether two <xref href=\"System.Threading.CancellationTokenRegistration\"></xref> instances are equal."}],"pos":[13880,13992],"yaml":true},{"content":"The first instance.","nodes":[{"pos":[0,19],"content":"The first instance.","nodes":[{"content":"The first instance.","pos":[0,19]}]}],"pos":[14264,14284],"yaml":true},{"content":"The second instance.","nodes":[{"pos":[0,20],"content":"The second instance.","nodes":[{"content":"The second instance.","pos":[0,20]}]}],"pos":[14378,14399],"yaml":true},{"content":"True if the instances are equal; otherwise, false.","nodes":[{"pos":[0,50],"content":"True if the instances are equal; otherwise, false.","nodes":[{"content":"True if the instances are equal; otherwise, false.","pos":[0,50]}]}],"pos":[14457,14508],"yaml":true},{"content":"Determines whether two <xref href=\"System.Threading.CancellationTokenRegistration\"></xref> instances are not equal.","nodes":[{"pos":[0,115],"content":"Determines whether two <ph id=\"ph1\">&lt;xref href=\"System.Threading.CancellationTokenRegistration\"&gt;&lt;/xref&gt;</ph> instances are not equal.","source":"Determines whether two <xref href=\"System.Threading.CancellationTokenRegistration\"></xref> instances are not equal."}],"pos":[16641,16757],"yaml":true},{"content":"The first instance.","nodes":[{"pos":[0,19],"content":"The first instance.","nodes":[{"content":"The first instance.","pos":[0,19]}]}],"pos":[17031,17051],"yaml":true},{"content":"The second instance.","nodes":[{"pos":[0,20],"content":"The second instance.","nodes":[{"content":"The second instance.","pos":[0,20]}]}],"pos":[17145,17166],"yaml":true},{"content":"True if the instances are not equal; otherwise, false.","nodes":[{"pos":[0,54],"content":"True if the instances are not equal; otherwise, false.","nodes":[{"content":"True if the instances are not equal; otherwise, false.","pos":[0,54]}]}],"pos":[17224,17279],"yaml":true}],"content":"### YamlMime:ManagedReference\nitems:\n- uid: System.Threading.CancellationTokenRegistration\n  commentId: T:System.Threading.CancellationTokenRegistration\n  id: CancellationTokenRegistration\n  children:\n  - System.Threading.CancellationTokenRegistration.Dispose\n  - System.Threading.CancellationTokenRegistration.Equals(System.Object)\n  - System.Threading.CancellationTokenRegistration.Equals(System.Threading.CancellationTokenRegistration)\n  - System.Threading.CancellationTokenRegistration.GetHashCode\n  - System.Threading.CancellationTokenRegistration.op_Equality(System.Threading.CancellationTokenRegistration,System.Threading.CancellationTokenRegistration)\n  - System.Threading.CancellationTokenRegistration.op_Inequality(System.Threading.CancellationTokenRegistration,System.Threading.CancellationTokenRegistration)\n  langs:\n  - csharp\n  name: CancellationTokenRegistration\n  nameWithType: CancellationTokenRegistration\n  fullName: System.Threading.CancellationTokenRegistration\n  type: Struct\n  assemblies:\n  - System.Threading.Tasks\n  - mscorlib\n  - netstandard\n  - System.Runtime\n  namespace: System.Threading\n  summary: Represents a callback delegate that has been registered with a <xref href=\"System.Threading.CancellationToken\"></xref>.\n  remarks: The callback is called when the token is canceled. To unregister a callback, dispose the corresponding Registration instance. For more information and code examples see [Cancellation in Managed Threads](~/docs/standard/threading/cancellation-in-managed-threads.md).\n  syntax:\n    content: 'public struct CancellationTokenRegistration : IDisposable, IEquatable<System.Threading.CancellationTokenRegistration>'\n  inheritance:\n  - System.Object\n  - System.ValueType\n  implements:\n  - System.IDisposable\n  - System.IEquatable{System.Threading.CancellationTokenRegistration}\n  version:\n  - netcore-1.0\n  - netcore-1.1\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - netstandard-1.0\n  - netstandard-1.1\n  - netstandard-1.2\n  - netstandard-1.3\n  - netstandard-1.4\n  - netstandard-1.6\n  - netstandard-2.0\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  monikers:\n  - netcore-1.0\n  - netcore-1.1\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - netstandard-1.0\n  - netstandard-1.1\n  - netstandard-1.2\n  - netstandard-1.3\n  - netstandard-1.4\n  - netstandard-1.6\n  - netstandard-2.0\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Threading/CancellationTokenRegistration.xml\n  ms.technology:\n  - dotnet-standard\n  author: rpetrusha\n  ms.author: ronpet\n  manager: wpickett\n- uid: System.Threading.CancellationTokenRegistration.Dispose\n  commentId: M:System.Threading.CancellationTokenRegistration.Dispose\n  id: Dispose\n  parent: System.Threading.CancellationTokenRegistration\n  langs:\n  - csharp\n  name: Dispose()\n  nameWithType: CancellationTokenRegistration.Dispose()\n  fullName: CancellationTokenRegistration.Dispose()\n  type: Method\n  assemblies:\n  - System.Threading.Tasks\n  - mscorlib\n  - netstandard\n  - System.Runtime\n  namespace: System.Threading\n  summary: Releases all resources used by the current instance of the <xref href=\"System.Threading.CancellationTokenRegistration\"></xref> class.\n  remarks: \"Call `Dispose` when you are finished using the <xref:System.Threading.CancellationTokenRegistration>. The `Dispose` method leaves the <xref:System.Threading.CancellationTokenRegistration> in an unusable state. After calling `Dispose`, you must release all references to the <xref:System.Threading.CancellationTokenRegistration> so the garbage collector can reclaim the memory that the <xref:System.Threading.CancellationTokenRegistration> was occupying.  \\n  \\n For more information, see [Cleaning Up Unmanaged Resources](~/docs/standard/garbage-collection/unmanaged.md) and [Implementing a Dispose Method](~/docs/standard/garbage-collection/implementing-dispose.md).  \\n  \\n> [!NOTE]\\n>  Always call `Dispose` before you release your last reference to the <xref:System.Threading.CancellationTokenRegistration>. Otherwise, the resources it is using will not be freed until the garbage collector calls the <xref:System.Threading.CancellationTokenRegistration> object's `Finalize` method.\"\n  syntax:\n    content: public void Dispose ();\n    parameters: []\n  overload: System.Threading.CancellationTokenRegistration.Dispose*\n  exceptions: []\n  version:\n  - netcore-1.0\n  - netcore-1.1\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - netstandard-1.0\n  - netstandard-1.1\n  - netstandard-1.2\n  - netstandard-1.3\n  - netstandard-1.4\n  - netstandard-1.6\n  - netstandard-2.0\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  monikers:\n  - netcore-1.0\n  - netcore-1.1\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - netstandard-1.0\n  - netstandard-1.1\n  - netstandard-1.2\n  - netstandard-1.3\n  - netstandard-1.4\n  - netstandard-1.6\n  - netstandard-2.0\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Threading/CancellationTokenRegistration.xml\n  ms.technology:\n  - dotnet-standard\n  author: rpetrusha\n  ms.author: ronpet\n  manager: wpickett\n- uid: System.Threading.CancellationTokenRegistration.Equals(System.Object)\n  commentId: M:System.Threading.CancellationTokenRegistration.Equals(System.Object)\n  id: Equals(System.Object)\n  parent: System.Threading.CancellationTokenRegistration\n  langs:\n  - csharp\n  name: Equals(Object)\n  nameWithType: CancellationTokenRegistration.Equals(Object)\n  fullName: CancellationTokenRegistration.Equals(Object)\n  type: Method\n  assemblies:\n  - System.Threading.Tasks\n  - mscorlib\n  - netstandard\n  - System.Runtime\n  namespace: System.Threading\n  summary: Determines whether the current <xref href=\"System.Threading.CancellationTokenRegistration\"></xref> instance is equal to the specified <xref href=\"System.Threading.CancellationTokenRegistration\"></xref>.\n  syntax:\n    content: public override bool Equals (object obj);\n    parameters:\n    - id: obj\n      type: System.Object\n      description: The other object to which to compare this instance.\n    return:\n      type: System.Boolean\n      description: \"True, if both this and <code>obj</code> are equal. False, otherwise.  \\n  \\n Two <xref href=\\\"System.Threading.CancellationTokenRegistration\\\"></xref> instances are equal if they both refer to the output of a single call to the same Register method of a <xref href=\\\"System.Threading.CancellationToken\\\"></xref>.\"\n  overload: System.Threading.CancellationTokenRegistration.Equals*\n  exceptions: []\n  version:\n  - netcore-1.0\n  - netcore-1.1\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - netstandard-1.0\n  - netstandard-1.1\n  - netstandard-1.2\n  - netstandard-1.3\n  - netstandard-1.4\n  - netstandard-1.6\n  - netstandard-2.0\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  monikers:\n  - netcore-1.0\n  - netcore-1.1\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - netstandard-1.0\n  - netstandard-1.1\n  - netstandard-1.2\n  - netstandard-1.3\n  - netstandard-1.4\n  - netstandard-1.6\n  - netstandard-2.0\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Threading/CancellationTokenRegistration.xml\n  ms.technology:\n  - dotnet-standard\n  author: rpetrusha\n  ms.author: ronpet\n  manager: wpickett\n- uid: System.Threading.CancellationTokenRegistration.Equals(System.Threading.CancellationTokenRegistration)\n  commentId: M:System.Threading.CancellationTokenRegistration.Equals(System.Threading.CancellationTokenRegistration)\n  id: Equals(System.Threading.CancellationTokenRegistration)\n  parent: System.Threading.CancellationTokenRegistration\n  langs:\n  - csharp\n  name: Equals(CancellationTokenRegistration)\n  nameWithType: CancellationTokenRegistration.Equals(CancellationTokenRegistration)\n  fullName: CancellationTokenRegistration.Equals(CancellationTokenRegistration)\n  type: Method\n  assemblies:\n  - System.Threading.Tasks\n  - mscorlib\n  - netstandard\n  - System.Runtime\n  namespace: System.Threading\n  summary: Determines whether the current <xref href=\"System.Threading.CancellationTokenRegistration\"></xref> instance is equal to the specified <xref href=\"System.Threading.CancellationTokenRegistration\"></xref>.\n  syntax:\n    content: public bool Equals (System.Threading.CancellationTokenRegistration other);\n    parameters:\n    - id: other\n      type: System.Threading.CancellationTokenRegistration\n      description: The other <xref href=\"System.Threading.CancellationTokenRegistration\"></xref> to which to compare this instance.\n    return:\n      type: System.Boolean\n      description: \"True, if both this and <code>other</code> are equal. False, otherwise.  \\n  \\n Two <xref href=\\\"System.Threading.CancellationTokenRegistration\\\"></xref> instances are equal if they both refer to the output of a single call to the same Register method of a <xref href=\\\"System.Threading.CancellationToken\\\"></xref>.\"\n  overload: System.Threading.CancellationTokenRegistration.Equals*\n  exceptions: []\n  version:\n  - netcore-1.0\n  - netcore-1.1\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - netstandard-1.0\n  - netstandard-1.1\n  - netstandard-1.2\n  - netstandard-1.3\n  - netstandard-1.4\n  - netstandard-1.6\n  - netstandard-2.0\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  monikers:\n  - netcore-1.0\n  - netcore-1.1\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - netstandard-1.0\n  - netstandard-1.1\n  - netstandard-1.2\n  - netstandard-1.3\n  - netstandard-1.4\n  - netstandard-1.6\n  - netstandard-2.0\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Threading/CancellationTokenRegistration.xml\n  ms.technology:\n  - dotnet-standard\n  author: rpetrusha\n  ms.author: ronpet\n  manager: wpickett\n- uid: System.Threading.CancellationTokenRegistration.GetHashCode\n  commentId: M:System.Threading.CancellationTokenRegistration.GetHashCode\n  id: GetHashCode\n  parent: System.Threading.CancellationTokenRegistration\n  langs:\n  - csharp\n  name: GetHashCode()\n  nameWithType: CancellationTokenRegistration.GetHashCode()\n  fullName: CancellationTokenRegistration.GetHashCode()\n  type: Method\n  assemblies:\n  - System.Threading.Tasks\n  - mscorlib\n  - netstandard\n  - System.Runtime\n  namespace: System.Threading\n  summary: Serves as a hash function for a <xref href=\"System.Threading.CancellationTokenRegistration\"></xref>.\n  syntax:\n    content: public override int GetHashCode ();\n    parameters: []\n    return:\n      type: System.Int32\n      description: A hash code for the current <xref href=\"System.Threading.CancellationTokenRegistration\"></xref> instance.\n  overload: System.Threading.CancellationTokenRegistration.GetHashCode*\n  exceptions: []\n  version:\n  - netcore-1.0\n  - netcore-1.1\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - netstandard-1.0\n  - netstandard-1.1\n  - netstandard-1.2\n  - netstandard-1.3\n  - netstandard-1.4\n  - netstandard-1.6\n  - netstandard-2.0\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  monikers:\n  - netcore-1.0\n  - netcore-1.1\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - netstandard-1.0\n  - netstandard-1.1\n  - netstandard-1.2\n  - netstandard-1.3\n  - netstandard-1.4\n  - netstandard-1.6\n  - netstandard-2.0\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Threading/CancellationTokenRegistration.xml\n  ms.technology:\n  - dotnet-standard\n  author: rpetrusha\n  ms.author: ronpet\n  manager: wpickett\n- uid: System.Threading.CancellationTokenRegistration.op_Equality(System.Threading.CancellationTokenRegistration,System.Threading.CancellationTokenRegistration)\n  commentId: M:System.Threading.CancellationTokenRegistration.op_Equality(System.Threading.CancellationTokenRegistration,System.Threading.CancellationTokenRegistration)\n  id: op_Equality(System.Threading.CancellationTokenRegistration,System.Threading.CancellationTokenRegistration)\n  parent: System.Threading.CancellationTokenRegistration\n  langs:\n  - csharp\n  name: op_Equality(CancellationTokenRegistration, CancellationTokenRegistration)\n  nameWithType: CancellationTokenRegistration.op_Equality(CancellationTokenRegistration, CancellationTokenRegistration)\n  fullName: CancellationTokenRegistration.op_Equality(CancellationTokenRegistration, CancellationTokenRegistration)\n  type: Operator\n  assemblies:\n  - System.Threading.Tasks\n  - mscorlib\n  - netstandard\n  - System.Runtime\n  namespace: System.Threading\n  summary: Determines whether two <xref href=\"System.Threading.CancellationTokenRegistration\"></xref> instances are equal.\n  syntax:\n    content: public static bool op_Equality (System.Threading.CancellationTokenRegistration left, System.Threading.CancellationTokenRegistration right);\n    parameters:\n    - id: left\n      type: System.Threading.CancellationTokenRegistration\n      description: The first instance.\n    - id: right\n      type: System.Threading.CancellationTokenRegistration\n      description: The second instance.\n    return:\n      type: System.Boolean\n      description: True if the instances are equal; otherwise, false.\n  overload: System.Threading.CancellationTokenRegistration.op_Equality*\n  exceptions: []\n  version:\n  - netcore-1.0\n  - netcore-1.1\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - netstandard-1.0\n  - netstandard-1.1\n  - netstandard-1.2\n  - netstandard-1.3\n  - netstandard-1.4\n  - netstandard-1.6\n  - netstandard-2.0\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  monikers:\n  - netcore-1.0\n  - netcore-1.1\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - netstandard-1.0\n  - netstandard-1.1\n  - netstandard-1.2\n  - netstandard-1.3\n  - netstandard-1.4\n  - netstandard-1.6\n  - netstandard-2.0\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Threading/CancellationTokenRegistration.xml\n  ms.technology:\n  - dotnet-standard\n  author: rpetrusha\n  ms.author: ronpet\n  manager: wpickett\n- uid: System.Threading.CancellationTokenRegistration.op_Inequality(System.Threading.CancellationTokenRegistration,System.Threading.CancellationTokenRegistration)\n  commentId: M:System.Threading.CancellationTokenRegistration.op_Inequality(System.Threading.CancellationTokenRegistration,System.Threading.CancellationTokenRegistration)\n  id: op_Inequality(System.Threading.CancellationTokenRegistration,System.Threading.CancellationTokenRegistration)\n  parent: System.Threading.CancellationTokenRegistration\n  langs:\n  - csharp\n  name: op_Inequality(CancellationTokenRegistration, CancellationTokenRegistration)\n  nameWithType: CancellationTokenRegistration.op_Inequality(CancellationTokenRegistration, CancellationTokenRegistration)\n  fullName: CancellationTokenRegistration.op_Inequality(CancellationTokenRegistration, CancellationTokenRegistration)\n  type: Operator\n  assemblies:\n  - System.Threading.Tasks\n  - mscorlib\n  - netstandard\n  - System.Runtime\n  namespace: System.Threading\n  summary: Determines whether two <xref href=\"System.Threading.CancellationTokenRegistration\"></xref> instances are not equal.\n  syntax:\n    content: public static bool op_Inequality (System.Threading.CancellationTokenRegistration left, System.Threading.CancellationTokenRegistration right);\n    parameters:\n    - id: left\n      type: System.Threading.CancellationTokenRegistration\n      description: The first instance.\n    - id: right\n      type: System.Threading.CancellationTokenRegistration\n      description: The second instance.\n    return:\n      type: System.Boolean\n      description: True if the instances are not equal; otherwise, false.\n  overload: System.Threading.CancellationTokenRegistration.op_Inequality*\n  exceptions: []\n  version:\n  - netcore-1.0\n  - netcore-1.1\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - netstandard-1.0\n  - netstandard-1.1\n  - netstandard-1.2\n  - netstandard-1.3\n  - netstandard-1.4\n  - netstandard-1.6\n  - netstandard-2.0\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  monikers:\n  - netcore-1.0\n  - netcore-1.1\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - netstandard-1.0\n  - netstandard-1.1\n  - netstandard-1.2\n  - netstandard-1.3\n  - netstandard-1.4\n  - netstandard-1.6\n  - netstandard-2.0\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Threading/CancellationTokenRegistration.xml\n  ms.technology:\n  - dotnet-standard\n  author: rpetrusha\n  ms.author: ronpet\n  manager: wpickett\nreferences:\n- uid: System.ValueType\n  parent: System\n  isExternal: false\n  name: ValueType\n  nameWithType: ValueType\n  fullName: System.ValueType\n- uid: System.Threading.CancellationTokenRegistration.Dispose\n  parent: System.Threading.CancellationTokenRegistration\n  isExternal: false\n  name: Dispose()\n  nameWithType: CancellationTokenRegistration.Dispose()\n  fullName: CancellationTokenRegistration.Dispose()\n- uid: System.Threading.CancellationTokenRegistration.Equals(System.Object)\n  parent: System.Threading.CancellationTokenRegistration\n  isExternal: false\n  name: Equals(Object)\n  nameWithType: CancellationTokenRegistration.Equals(Object)\n  fullName: CancellationTokenRegistration.Equals(Object)\n- uid: System.Boolean\n  parent: System\n  isExternal: false\n  name: Boolean\n  nameWithType: Boolean\n  fullName: System.Boolean\n- uid: System.Object\n  parent: System\n  isExternal: false\n  name: Object\n  nameWithType: Object\n  fullName: System.Object\n- uid: System.Threading.CancellationTokenRegistration.Equals(System.Threading.CancellationTokenRegistration)\n  parent: System.Threading.CancellationTokenRegistration\n  isExternal: false\n  name: Equals(CancellationTokenRegistration)\n  nameWithType: CancellationTokenRegistration.Equals(CancellationTokenRegistration)\n  fullName: CancellationTokenRegistration.Equals(CancellationTokenRegistration)\n- uid: System.Threading.CancellationTokenRegistration\n  parent: System.Threading\n  isExternal: false\n  name: CancellationTokenRegistration\n  nameWithType: CancellationTokenRegistration\n  fullName: System.Threading.CancellationTokenRegistration\n- uid: System.Threading.CancellationTokenRegistration.GetHashCode\n  parent: System.Threading.CancellationTokenRegistration\n  isExternal: false\n  name: GetHashCode()\n  nameWithType: CancellationTokenRegistration.GetHashCode()\n  fullName: CancellationTokenRegistration.GetHashCode()\n- uid: System.Int32\n  parent: System\n  isExternal: false\n  name: Int32\n  nameWithType: Int32\n  fullName: System.Int32\n- uid: System.Threading.CancellationTokenRegistration.op_Equality(System.Threading.CancellationTokenRegistration,System.Threading.CancellationTokenRegistration)\n  parent: System.Threading.CancellationTokenRegistration\n  isExternal: false\n  name: op_Equality(CancellationTokenRegistration, CancellationTokenRegistration)\n  nameWithType: CancellationTokenRegistration.op_Equality(CancellationTokenRegistration, CancellationTokenRegistration)\n  fullName: CancellationTokenRegistration.op_Equality(CancellationTokenRegistration, CancellationTokenRegistration)\n- uid: System.Threading.CancellationTokenRegistration.op_Inequality(System.Threading.CancellationTokenRegistration,System.Threading.CancellationTokenRegistration)\n  parent: System.Threading.CancellationTokenRegistration\n  isExternal: false\n  name: op_Inequality(CancellationTokenRegistration, CancellationTokenRegistration)\n  nameWithType: CancellationTokenRegistration.op_Inequality(CancellationTokenRegistration, CancellationTokenRegistration)\n  fullName: CancellationTokenRegistration.op_Inequality(CancellationTokenRegistration, CancellationTokenRegistration)\n- uid: System.Threading.CancellationTokenRegistration.Dispose*\n  parent: System.Threading.CancellationTokenRegistration\n  isExternal: false\n  name: Dispose\n  nameWithType: CancellationTokenRegistration.Dispose\n  fullName: CancellationTokenRegistration.Dispose\n  monikers:\n  - netcore-1.0\n  - netcore-1.1\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - netstandard-1.0\n  - netstandard-1.1\n  - netstandard-1.2\n  - netstandard-1.3\n  - netstandard-1.4\n  - netstandard-1.6\n  - netstandard-2.0\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Threading/CancellationTokenRegistration.xml\n- uid: System.Threading.CancellationTokenRegistration.Equals*\n  parent: System.Threading.CancellationTokenRegistration\n  isExternal: false\n  name: Equals\n  nameWithType: CancellationTokenRegistration.Equals\n  fullName: CancellationTokenRegistration.Equals\n  monikers:\n  - netcore-1.0\n  - netcore-1.1\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - netstandard-1.0\n  - netstandard-1.1\n  - netstandard-1.2\n  - netstandard-1.3\n  - netstandard-1.4\n  - netstandard-1.6\n  - netstandard-2.0\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Threading/CancellationTokenRegistration.xml\n- uid: System.Threading.CancellationTokenRegistration.GetHashCode*\n  parent: System.Threading.CancellationTokenRegistration\n  isExternal: false\n  name: GetHashCode\n  nameWithType: CancellationTokenRegistration.GetHashCode\n  fullName: CancellationTokenRegistration.GetHashCode\n  monikers:\n  - netcore-1.0\n  - netcore-1.1\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - netstandard-1.0\n  - netstandard-1.1\n  - netstandard-1.2\n  - netstandard-1.3\n  - netstandard-1.4\n  - netstandard-1.6\n  - netstandard-2.0\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Threading/CancellationTokenRegistration.xml\n- uid: System.Threading.CancellationTokenRegistration.op_Equality*\n  parent: System.Threading.CancellationTokenRegistration\n  isExternal: false\n  name: op_Equality\n  nameWithType: CancellationTokenRegistration.op_Equality\n  fullName: CancellationTokenRegistration.op_Equality\n  monikers:\n  - netcore-1.0\n  - netcore-1.1\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - netstandard-1.0\n  - netstandard-1.1\n  - netstandard-1.2\n  - netstandard-1.3\n  - netstandard-1.4\n  - netstandard-1.6\n  - netstandard-2.0\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Threading/CancellationTokenRegistration.xml\n- uid: System.Threading.CancellationTokenRegistration.op_Inequality*\n  parent: System.Threading.CancellationTokenRegistration\n  isExternal: false\n  name: op_Inequality\n  nameWithType: CancellationTokenRegistration.op_Inequality\n  fullName: CancellationTokenRegistration.op_Inequality\n  monikers:\n  - netcore-1.0\n  - netcore-1.1\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - netstandard-1.0\n  - netstandard-1.1\n  - netstandard-1.2\n  - netstandard-1.3\n  - netstandard-1.4\n  - netstandard-1.6\n  - netstandard-2.0\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Threading/CancellationTokenRegistration.xml\n- uid: System.IDisposable\n  parent: System\n  isExternal: false\n  name: IDisposable\n  nameWithType: IDisposable\n  fullName: System.IDisposable\n- uid: System.IEquatable`1\n  name: IEquatable<T>\n  nameWithType: IEquatable<T>\n  fullName: System.IEquatable<T>\n- uid: System.IEquatable{System.Threading.CancellationTokenRegistration}\n  parent: System\n  isExternal: false\n  name: IEquatable<CancellationTokenRegistration>\n  nameWithType: IEquatable<CancellationTokenRegistration>\n  fullName: System.IEquatable<System.Threading.CancellationTokenRegistration>\n  spec.csharp:\n  - uid: System.IEquatable`1\n    name: IEquatable\n    nameWithType: IEquatable\n    fullName: System.IEquatable\n  - name: <\n    nameWithType: <\n    fullName: <\n  - uid: System.Threading.CancellationTokenRegistration\n    name: CancellationTokenRegistration\n    nameWithType: CancellationTokenRegistration\n    fullName: System.Threading.CancellationTokenRegistration\n  - name: '>'\n    nameWithType: '>'\n    fullName: '>'\n"}