### YamlMime:ManagedReference
items:
- uid: System.Web.ApplicationServices.AuthenticatingEventArgs
  commentId: T:System.Web.ApplicationServices.AuthenticatingEventArgs
  id: AuthenticatingEventArgs
  children:
  - System.Web.ApplicationServices.AuthenticatingEventArgs.Authenticated
  - System.Web.ApplicationServices.AuthenticatingEventArgs.AuthenticationIsComplete
  - System.Web.ApplicationServices.AuthenticatingEventArgs.CustomCredential
  - System.Web.ApplicationServices.AuthenticatingEventArgs.Password
  - System.Web.ApplicationServices.AuthenticatingEventArgs.UserName
  langs:
  - csharp
  name: AuthenticatingEventArgs
  nameWithType: AuthenticatingEventArgs
  fullName: System.Web.ApplicationServices.AuthenticatingEventArgs
  type: Class
  assemblies:
  - System.Web.Extensions
  namespace: System.Web.ApplicationServices
  summary: Provides data for the <xref href="System.Web.ApplicationServices.AuthenticationService.Authenticating"></xref> event.
  remarks: "You create a handler for the <xref:System.Web.ApplicationServices.AuthenticationService.Authenticating> event when you want to customize how the user's credentials are authenticated at run time. The <xref:System.Web.ApplicationServices.AuthenticatingEventArgs> class supplies values to any <xref:System.Web.ApplicationServices.AuthenticationService.Authenticating> event handler. By using the properties available in this class, you can retrieve the user credentials to customize authentication.  \n  \n The <xref:System.Web.ApplicationServices.AuthenticationService> class raises the <xref:System.Web.ApplicationServices.AuthenticationService.Authenticating> event before validating the user credentials. The <xref:System.Web.ApplicationServices.AuthenticationService> class constructs an instance of the <xref:System.Web.ApplicationServices.AuthenticatingEventArgs> object and passes it to any <xref:System.Web.ApplicationServices.AuthenticationService.Authenticating> event handler.  \n  \n You can use the <xref:System.Web.ApplicationServices.AuthenticatingEventArgs.UserName%2A>, <xref:System.Web.ApplicationServices.AuthenticatingEventArgs.Password%2A> and <xref:System.Web.ApplicationServices.AuthenticatingEventArgs.CustomCredential%2A> properties to retrieve the user credentials. The <xref:System.Web.ApplicationServices.AuthenticatingEventArgs.CustomCredential%2A> property can contain additional values that are required for authentication, such as an identification number.  \n  \n The <xref:System.Web.ApplicationServices.AuthenticatingEventArgs.Authenticated%2A> property indicates whether the user credentials are valid. You set the <xref:System.Web.ApplicationServices.AuthenticatingEventArgs.Authenticated%2A> property to the result of your customized authentication. In addition, you set the <xref:System.Web.ApplicationServices.AuthenticatingEventArgs.AuthenticationIsComplete%2A> property to `true` if you have checked the user credentials and do not want the <xref:System.Web.ApplicationServices.AuthenticationService> class to check user credentials through the default membership provider."
  example:
  - "The following example shows an event handler that passes the <xref:System.Web.ApplicationServices.AuthenticatingEventArgs.UserName%2A> and <xref:System.Web.ApplicationServices.AuthenticatingEventArgs.Password%2A> values to a custom membership provider to validate the user credentials. The event handler sets <xref:System.Web.ApplicationServices.AuthenticatingEventArgs.Authenticated%2A> to the return value of the <xref:System.Web.Security.MembershipProvider.ValidateUser%2A> method and sets <xref:System.Web.ApplicationServices.AuthenticatingEventArgs.AuthenticationIsComplete%2A> to `true` so that the <xref:System.Web.ApplicationServices.AuthenticationService> class does not validate the credentials.  \n  \n [!code-csharp[System.Web.Security.LoginService_NonDefaultProvider#2](~/samples/snippets/csharp/VS_Snippets_WebNet/System.Web.Security.LoginService_NonDefaultProvider/cs/Global.asax#2)]\n [!code-vb[System.Web.Security.LoginService_NonDefaultProvider#2](~/samples/snippets/visualbasic/VS_Snippets_WebNet/System.Web.Security.LoginService_NonDefaultProvider/vb/Global.asax#2)]"
  syntax:
    content: 'public class AuthenticatingEventArgs : EventArgs'
  inheritance:
  - System.Object
  - System.EventArgs
  implements: []
  inheritedMembers:
  - System.EventArgs.Empty
  - System.Object.Equals(System.Object)
  - System.Object.Equals(System.Object,System.Object)
  - System.Object.GetHashCode
  - System.Object.GetType
  - System.Object.MemberwiseClone
  - System.Object.ReferenceEquals(System.Object,System.Object)
  - System.Object.ToString
  version:
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  monikers:
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Web.ApplicationServices/AuthenticatingEventArgs.xml
  ms.technology:
  - dotnet-webforms
  author: tdykstra
  ms.author: tdykstra
  manager: wpickett
- uid: System.Web.ApplicationServices.AuthenticatingEventArgs.Authenticated
  commentId: P:System.Web.ApplicationServices.AuthenticatingEventArgs.Authenticated
  id: Authenticated
  parent: System.Web.ApplicationServices.AuthenticatingEventArgs
  langs:
  - csharp
  name: Authenticated
  nameWithType: AuthenticatingEventArgs.Authenticated
  fullName: AuthenticatingEventArgs.Authenticated
  type: Property
  assemblies:
  - System.Web.Extensions
  namespace: System.Web.ApplicationServices
  summary: Gets or sets a value that indicates whether the user credentials are valid.
  remarks: If you authenticate user credentials in an event handler for the <xref:System.Web.ApplicationServices.AuthenticationService.Authenticating> event, set the <xref:System.Web.ApplicationServices.AuthenticatingEventArgs.Authenticated%2A> property to indicate whether the user credentials are valid. If the user credentials are valid and no additional validation is needed, set <xref:System.Web.ApplicationServices.AuthenticatingEventArgs.Authenticated%2A> to `true` and <xref:System.Web.ApplicationServices.AuthenticatingEventArgs.AuthenticationIsComplete%2A> to `true`. You set the <xref:System.Web.ApplicationServices.AuthenticatingEventArgs.AuthenticationIsComplete%2A> property to indicate that the authentication service should bypass the default steps for authenticating a user. The value in <xref:System.Web.ApplicationServices.AuthenticatingEventArgs.Authenticated%2A> is used by the <xref:System.Web.ApplicationServices.AuthenticationService> class only if <xref:System.Web.ApplicationServices.AuthenticatingEventArgs.AuthenticationIsComplete%2A> is set to `true`. If <xref:System.Web.ApplicationServices.AuthenticatingEventArgs.AuthenticationIsComplete%2A> is `false`, the <xref:System.Web.ApplicationServices.AuthenticationService> class calls the default membership provider to validate user credentials, and then overwrites the value in <xref:System.Web.ApplicationServices.AuthenticatingEventArgs.Authenticated%2A>.
  example:
  - "The following example shows an event handler that passes <xref:System.Web.ApplicationServices.AuthenticatingEventArgs.UserName%2A> and <xref:System.Web.ApplicationServices.AuthenticatingEventArgs.Password%2A> values to a custom membership provider to validate the user credentials. The event handler sets <xref:System.Web.ApplicationServices.AuthenticatingEventArgs.Authenticated%2A> to the return value of the <xref:System.Web.Security.MembershipProvider.ValidateUser%2A> method and sets <xref:System.Web.ApplicationServices.AuthenticatingEventArgs.AuthenticationIsComplete%2A> to `true` so that the <xref:System.Web.ApplicationServices.AuthenticationService> class does not validate the credentials.  \n  \n [!code-csharp[System.Web.Security.LoginService_NonDefaultProvider#2](~/samples/snippets/csharp/VS_Snippets_WebNet/System.Web.Security.LoginService_NonDefaultProvider/cs/Global.asax#2)]\n [!code-vb[System.Web.Security.LoginService_NonDefaultProvider#2](~/samples/snippets/visualbasic/VS_Snippets_WebNet/System.Web.Security.LoginService_NonDefaultProvider/vb/Global.asax#2)]"
  syntax:
    content: public bool Authenticated { get; set; }
    return:
      type: System.Boolean
      description: '`true` if the user credentials are valid; otherwise, `false`.'
  overload: System.Web.ApplicationServices.AuthenticatingEventArgs.Authenticated*
  exceptions: []
  version:
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  monikers:
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Web.ApplicationServices/AuthenticatingEventArgs.xml
  ms.technology:
  - dotnet-webforms
  author: tdykstra
  ms.author: tdykstra
  manager: wpickett
- uid: System.Web.ApplicationServices.AuthenticatingEventArgs.AuthenticationIsComplete
  commentId: P:System.Web.ApplicationServices.AuthenticatingEventArgs.AuthenticationIsComplete
  id: AuthenticationIsComplete
  parent: System.Web.ApplicationServices.AuthenticatingEventArgs
  langs:
  - csharp
  name: AuthenticationIsComplete
  nameWithType: AuthenticatingEventArgs.AuthenticationIsComplete
  fullName: AuthenticatingEventArgs.AuthenticationIsComplete
  type: Property
  assemblies:
  - System.Web.Extensions
  namespace: System.Web.ApplicationServices
  summary: Gets or sets a value that indicates whether the user credentials have been authenticated.
  remarks: "You can set the <xref:System.Web.ApplicationServices.AuthenticatingEventArgs.AuthenticationIsComplete%2A> property to indicate whether the <xref:System.Web.ApplicationServices.AuthenticationService> class must authenticate the user credentials. If <xref:System.Web.ApplicationServices.AuthenticatingEventArgs.AuthenticationIsComplete%2A> is `true`, the <xref:System.Web.ApplicationServices.AuthenticationService> class does not validate the user credentials through the default membership provider. Instead, it uses the value in <xref:System.Web.ApplicationServices.AuthenticatingEventArgs.Authenticated%2A> to determine whether to create an authentication cookie.  \n  \n If <xref:System.Web.ApplicationServices.AuthenticatingEventArgs.AuthenticationIsComplete%2A> is `false`, the <xref:System.Web.ApplicationServices.AuthenticationService> class validates the user credentials through the default membership provider and overwrites the value in the <xref:System.Web.ApplicationServices.AuthenticatingEventArgs.Authenticated%2A> property."
  example:
  - "The following example shows an event handler that passes <xref:System.Web.ApplicationServices.AuthenticatingEventArgs.UserName%2A> and <xref:System.Web.ApplicationServices.AuthenticatingEventArgs.Password%2A> values to a custom membership provider to validate the user credentials. The event handler sets <xref:System.Web.ApplicationServices.AuthenticatingEventArgs.Authenticated%2A> to the return value of the <xref:System.Web.Security.MembershipProvider.ValidateUser%2A> method and sets <xref:System.Web.ApplicationServices.AuthenticatingEventArgs.AuthenticationIsComplete%2A> to `true` so that the <xref:System.Web.ApplicationServices.AuthenticationService> class does not validate the credentials.  \n  \n [!code-csharp[System.Web.Security.LoginService_NonDefaultProvider#2](~/samples/snippets/csharp/VS_Snippets_WebNet/System.Web.Security.LoginService_NonDefaultProvider/cs/Global.asax#2)]\n [!code-vb[System.Web.Security.LoginService_NonDefaultProvider#2](~/samples/snippets/visualbasic/VS_Snippets_WebNet/System.Web.Security.LoginService_NonDefaultProvider/vb/Global.asax#2)]"
  syntax:
    content: public bool AuthenticationIsComplete { get; set; }
    return:
      type: System.Boolean
      description: '`true` if all the steps for validating the user credentials have been performed; otherwise, `false`.'
  overload: System.Web.ApplicationServices.AuthenticatingEventArgs.AuthenticationIsComplete*
  exceptions: []
  version:
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  monikers:
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Web.ApplicationServices/AuthenticatingEventArgs.xml
  ms.technology:
  - dotnet-webforms
  author: tdykstra
  ms.author: tdykstra
  manager: wpickett
- uid: System.Web.ApplicationServices.AuthenticatingEventArgs.CustomCredential
  commentId: P:System.Web.ApplicationServices.AuthenticatingEventArgs.CustomCredential
  id: CustomCredential
  parent: System.Web.ApplicationServices.AuthenticatingEventArgs
  langs:
  - csharp
  name: CustomCredential
  nameWithType: AuthenticatingEventArgs.CustomCredential
  fullName: AuthenticatingEventArgs.CustomCredential
  type: Property
  assemblies:
  - System.Web.Extensions
  namespace: System.Web.ApplicationServices
  summary: Gets additional user values for authentication.
  remarks: "You can use the <xref:System.Web.ApplicationServices.AuthenticatingEventArgs.CustomCredential%2A> property to retrieve authentication values other than user name and password during the <xref:System.Web.ApplicationServices.AuthenticationService.Authenticating> event. For example, an application might be configured to validate an identification number together with the user name and password. In that case, the identification number will be passed in the `CustomCredential` parameter of the <xref:System.Web.ApplicationServices.AuthenticationService.Login%2A> method. You can then retrieve the custom value through the <xref:System.Web.ApplicationServices.AuthenticatingEventArgs.CustomCredential%2A> property.  \n  \n The <xref:System.Web.ApplicationServices.AuthenticatingEventArgs.CustomCredential%2A> property contains the customized values in the same format as they are passed to the <xref:System.Web.ApplicationServices.AuthenticationService.Login%2A> method. In the <xref:System.Web.ApplicationServices.AuthenticationService.Authenticating> event handler, if more than one value is stored in the property, you must parse the value of the <xref:System.Web.ApplicationServices.AuthenticatingEventArgs.CustomCredential%2A> property to retrieve the values."
  example:
  - "The following example shows an event handler for the <xref:System.Web.ApplicationServices.AuthenticationService.Authenticating> event that parses two authentication values from the <xref:System.Web.ApplicationServices.AuthenticatingEventArgs.CustomCredential%2A> property. It passes the two values and the user name and password to a custom authentication class named `StudentAuthentication`.  \n  \n [!code-csharp[System.Web.Security.LoginService_MultipleCredentials#2](~/samples/snippets/csharp/VS_Snippets_WebNet/System.Web.Security.LoginService_MultipleCredentials/cs/Global.asax#2)]\n [!code-vb[System.Web.Security.LoginService_MultipleCredentials#2](~/samples/snippets/visualbasic/VS_Snippets_WebNet/System.Web.Security.LoginService_MultipleCredentials/vb/Global.asax#2)]"
  syntax:
    content: public string CustomCredential { get; }
    return:
      type: System.String
      description: The values required for authentication other than user name and password.
  overload: System.Web.ApplicationServices.AuthenticatingEventArgs.CustomCredential*
  exceptions: []
  version:
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  monikers:
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Web.ApplicationServices/AuthenticatingEventArgs.xml
  ms.technology:
  - dotnet-webforms
  author: tdykstra
  ms.author: tdykstra
  manager: wpickett
- uid: System.Web.ApplicationServices.AuthenticatingEventArgs.Password
  commentId: P:System.Web.ApplicationServices.AuthenticatingEventArgs.Password
  id: Password
  parent: System.Web.ApplicationServices.AuthenticatingEventArgs
  langs:
  - csharp
  name: Password
  nameWithType: AuthenticatingEventArgs.Password
  fullName: AuthenticatingEventArgs.Password
  type: Property
  assemblies:
  - System.Web.Extensions
  namespace: System.Web.ApplicationServices
  summary: Gets the password for the user.
  remarks: You use the <xref:System.Web.ApplicationServices.AuthenticatingEventArgs.Password%2A> property to retrieve the password during the <xref:System.Web.ApplicationServices.AuthenticationService.Authenticating> event.
  example:
  - "The following example shows an event handler that passes <xref:System.Web.ApplicationServices.AuthenticatingEventArgs.UserName%2A> and <xref:System.Web.ApplicationServices.AuthenticatingEventArgs.Password%2A> values to a custom membership provider to validate the user credentials. The event handler sets <xref:System.Web.ApplicationServices.AuthenticatingEventArgs.Authenticated%2A> to the return value of the <xref:System.Web.Security.MembershipProvider.ValidateUser%2A> method and sets <xref:System.Web.ApplicationServices.AuthenticatingEventArgs.AuthenticationIsComplete%2A> to `true` so that the <xref:System.Web.ApplicationServices.AuthenticationService> class does not validate the credentials.  \n  \n [!code-csharp[System.Web.Security.LoginService_NonDefaultProvider#2](~/samples/snippets/csharp/VS_Snippets_WebNet/System.Web.Security.LoginService_NonDefaultProvider/cs/Global.asax#2)]\n [!code-vb[System.Web.Security.LoginService_NonDefaultProvider#2](~/samples/snippets/visualbasic/VS_Snippets_WebNet/System.Web.Security.LoginService_NonDefaultProvider/vb/Global.asax#2)]"
  syntax:
    content: public string Password { get; }
    return:
      type: System.String
      description: The password to validate.
  overload: System.Web.ApplicationServices.AuthenticatingEventArgs.Password*
  exceptions: []
  version:
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  monikers:
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Web.ApplicationServices/AuthenticatingEventArgs.xml
  ms.technology:
  - dotnet-webforms
  author: tdykstra
  ms.author: tdykstra
  manager: wpickett
- uid: System.Web.ApplicationServices.AuthenticatingEventArgs.UserName
  commentId: P:System.Web.ApplicationServices.AuthenticatingEventArgs.UserName
  id: UserName
  parent: System.Web.ApplicationServices.AuthenticatingEventArgs
  langs:
  - csharp
  name: UserName
  nameWithType: AuthenticatingEventArgs.UserName
  fullName: AuthenticatingEventArgs.UserName
  type: Property
  assemblies:
  - System.Web.Extensions
  namespace: System.Web.ApplicationServices
  summary: Gets the authentication name for the user.
  remarks: You use the <xref:System.Web.ApplicationServices.AuthenticatingEventArgs.UserName%2A> property to retrieve the authentication name during the <xref:System.Web.ApplicationServices.AuthenticationService.Authenticating> event.
  example:
  - "The following example shows an event handler that selects a membership provider to use based on the value of the <xref:System.Web.ApplicationServices.AuthenticatingEventArgs.UserName%2A> property. The handler passes <xref:System.Web.ApplicationServices.AuthenticatingEventArgs.UserName%2A> and <xref:System.Web.ApplicationServices.AuthenticatingEventArgs.Password%2A> values to the custom membership provider to validate the user credentials. It sets <xref:System.Web.ApplicationServices.AuthenticatingEventArgs.Authenticated%2A> to the return value of the <xref:System.Web.Security.MembershipProvider.ValidateUser%2A> method and sets <xref:System.Web.ApplicationServices.AuthenticatingEventArgs.AuthenticationIsComplete%2A> to `true` so that the <xref:System.Web.ApplicationServices.AuthenticationService> class does not validate the credentials.  \n  \n [!code-csharp[System.Web.Security.LoginService_NonDefaultProvider#2](~/samples/snippets/csharp/VS_Snippets_WebNet/System.Web.Security.LoginService_NonDefaultProvider/cs/Global.asax#2)]\n [!code-vb[System.Web.Security.LoginService_NonDefaultProvider#2](~/samples/snippets/visualbasic/VS_Snippets_WebNet/System.Web.Security.LoginService_NonDefaultProvider/vb/Global.asax#2)]"
  syntax:
    content: public string UserName { get; }
    return:
      type: System.String
      description: The user name to validate.
  overload: System.Web.ApplicationServices.AuthenticatingEventArgs.UserName*
  exceptions: []
  version:
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  monikers:
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Web.ApplicationServices/AuthenticatingEventArgs.xml
  ms.technology:
  - dotnet-webforms
  author: tdykstra
  ms.author: tdykstra
  manager: wpickett
references:
- uid: System.EventArgs
  parent: System
  isExternal: false
  name: EventArgs
  nameWithType: EventArgs
  fullName: System.EventArgs
- uid: System.Web.ApplicationServices.AuthenticatingEventArgs.Authenticated
  parent: System.Web.ApplicationServices.AuthenticatingEventArgs
  isExternal: false
  name: Authenticated
  nameWithType: AuthenticatingEventArgs.Authenticated
  fullName: AuthenticatingEventArgs.Authenticated
- uid: System.Boolean
  parent: System
  isExternal: false
  name: Boolean
  nameWithType: Boolean
  fullName: System.Boolean
- uid: System.Web.ApplicationServices.AuthenticatingEventArgs.AuthenticationIsComplete
  parent: System.Web.ApplicationServices.AuthenticatingEventArgs
  isExternal: false
  name: AuthenticationIsComplete
  nameWithType: AuthenticatingEventArgs.AuthenticationIsComplete
  fullName: AuthenticatingEventArgs.AuthenticationIsComplete
- uid: System.Web.ApplicationServices.AuthenticatingEventArgs.CustomCredential
  parent: System.Web.ApplicationServices.AuthenticatingEventArgs
  isExternal: false
  name: CustomCredential
  nameWithType: AuthenticatingEventArgs.CustomCredential
  fullName: AuthenticatingEventArgs.CustomCredential
- uid: System.String
  parent: System
  isExternal: false
  name: String
  nameWithType: String
  fullName: System.String
- uid: System.Web.ApplicationServices.AuthenticatingEventArgs.Password
  parent: System.Web.ApplicationServices.AuthenticatingEventArgs
  isExternal: false
  name: Password
  nameWithType: AuthenticatingEventArgs.Password
  fullName: AuthenticatingEventArgs.Password
- uid: System.Web.ApplicationServices.AuthenticatingEventArgs.UserName
  parent: System.Web.ApplicationServices.AuthenticatingEventArgs
  isExternal: false
  name: UserName
  nameWithType: AuthenticatingEventArgs.UserName
  fullName: AuthenticatingEventArgs.UserName
- uid: System.Web.ApplicationServices.AuthenticatingEventArgs.Authenticated*
  parent: System.Web.ApplicationServices.AuthenticatingEventArgs
  isExternal: false
  name: Authenticated
  nameWithType: AuthenticatingEventArgs.Authenticated
  fullName: AuthenticatingEventArgs.Authenticated
  monikers:
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Web.ApplicationServices/AuthenticatingEventArgs.xml
- uid: System.Web.ApplicationServices.AuthenticatingEventArgs.AuthenticationIsComplete*
  parent: System.Web.ApplicationServices.AuthenticatingEventArgs
  isExternal: false
  name: AuthenticationIsComplete
  nameWithType: AuthenticatingEventArgs.AuthenticationIsComplete
  fullName: AuthenticatingEventArgs.AuthenticationIsComplete
  monikers:
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Web.ApplicationServices/AuthenticatingEventArgs.xml
- uid: System.Web.ApplicationServices.AuthenticatingEventArgs.CustomCredential*
  parent: System.Web.ApplicationServices.AuthenticatingEventArgs
  isExternal: false
  name: CustomCredential
  nameWithType: AuthenticatingEventArgs.CustomCredential
  fullName: AuthenticatingEventArgs.CustomCredential
  monikers:
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Web.ApplicationServices/AuthenticatingEventArgs.xml
- uid: System.Web.ApplicationServices.AuthenticatingEventArgs.Password*
  parent: System.Web.ApplicationServices.AuthenticatingEventArgs
  isExternal: false
  name: Password
  nameWithType: AuthenticatingEventArgs.Password
  fullName: AuthenticatingEventArgs.Password
  monikers:
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Web.ApplicationServices/AuthenticatingEventArgs.xml
- uid: System.Web.ApplicationServices.AuthenticatingEventArgs.UserName*
  parent: System.Web.ApplicationServices.AuthenticatingEventArgs
  isExternal: false
  name: UserName
  nameWithType: AuthenticatingEventArgs.UserName
  fullName: AuthenticatingEventArgs.UserName
  monikers:
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Web.ApplicationServices/AuthenticatingEventArgs.xml
- uid: System.Object.Equals(System.Object)
  parent: System.Object
  isExternal: false
  name: Equals(Object)
  nameWithType: Object.Equals(Object)
  fullName: Object.Equals(Object)
- uid: System.Object.Equals(System.Object,System.Object)
  parent: System.Object
  isExternal: false
  name: Equals(Object, Object)
  nameWithType: Object.Equals(Object, Object)
  fullName: Object.Equals(Object, Object)
- uid: System.Object.GetHashCode
  parent: System.Object
  isExternal: false
  name: GetHashCode()
  nameWithType: Object.GetHashCode()
  fullName: Object.GetHashCode()
- uid: System.Object.GetType
  parent: System.Object
  isExternal: false
  name: GetType()
  nameWithType: Object.GetType()
  fullName: Object.GetType()
- uid: System.Object.MemberwiseClone
  parent: System.Object
  isExternal: false
  name: MemberwiseClone()
  nameWithType: Object.MemberwiseClone()
  fullName: Object.MemberwiseClone()
- uid: System.Object.ReferenceEquals(System.Object,System.Object)
  parent: System.Object
  isExternal: false
  name: ReferenceEquals(Object, Object)
  nameWithType: Object.ReferenceEquals(Object, Object)
  fullName: Object.ReferenceEquals(Object, Object)
- uid: System.Object.ToString
  parent: System.Object
  isExternal: false
  name: ToString()
  nameWithType: Object.ToString()
  fullName: Object.ToString()
- uid: System.EventArgs.Empty
  parent: System.EventArgs
  isExternal: false
  name: Empty
  nameWithType: EventArgs.Empty
  fullName: EventArgs.Empty
