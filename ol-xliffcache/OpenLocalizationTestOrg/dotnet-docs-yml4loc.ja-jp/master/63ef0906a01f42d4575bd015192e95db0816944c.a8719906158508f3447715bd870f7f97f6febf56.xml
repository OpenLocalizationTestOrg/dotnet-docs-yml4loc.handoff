{"nodes":[{"content":"Represents an XML element that specifies a binding for peer channel-specific TCP messaging.","nodes":[{"pos":[0,91],"content":"Represents an XML element that specifies a binding for peer channel-specific TCP messaging.","nodes":[{"content":"Represents an XML element that specifies a binding for peer channel-specific TCP messaging.","pos":[0,91]}]}],"pos":[1973,2065],"yaml":true},{"content":"The netTcpBinding is a secure, reliable, optimized binding suitable for cross-machine communication. By default, it generates a run-time communication stack with WS-ReliableMessaging for reliability, Windows Security for message security and authentication, TCP for message delivery, and binary message encoding.","nodes":[{"pos":[0,312],"content":"The netTcpBinding is a secure, reliable, optimized binding suitable for cross-machine communication. By default, it generates a run-time communication stack with WS-ReliableMessaging for reliability, Windows Security for message security and authentication, TCP for message delivery, and binary message encoding.","nodes":[{"content":"The netTcpBinding is a secure, reliable, optimized binding suitable for cross-machine communication. By default, it generates a run-time communication stack with WS-ReliableMessaging for reliability, Windows Security for message security and authentication, TCP for message delivery, and binary message encoding.","pos":[0,312],"nodes":[{"content":"The netTcpBinding is a secure, reliable, optimized binding suitable for cross-machine communication.","pos":[0,100]},{"content":"By default, it generates a run-time communication stack with WS-ReliableMessaging for reliability, Windows Security for message security and authentication, TCP for message delivery, and binary message encoding.","pos":[101,312]}]}]}],"pos":[2076,2389],"yaml":true,"extradata":"MT"},{"content":"Initializes a new instance of the <xref href=\"System.ServiceModel.Configuration.NetTcpBindingElement\"></xref> class.","nodes":[{"pos":[0,116],"content":"Initializes a new instance of the <ph id=\"ph1\">&lt;xref href=\"System.ServiceModel.Configuration.NetTcpBindingElement\"&gt;&lt;/xref&gt;</ph> class.","source":"Initializes a new instance of the <xref href=\"System.ServiceModel.Configuration.NetTcpBindingElement\"></xref> class."}],"pos":[7417,7534],"yaml":true},{"content":"Initializes a new instance of the <xref href=\"System.ServiceModel.Configuration.NetTcpBindingElement\"></xref> class with the specified configuration name.","nodes":[{"pos":[0,154],"content":"Initializes a new instance of the <ph id=\"ph1\">&lt;xref href=\"System.ServiceModel.Configuration.NetTcpBindingElement\"&gt;&lt;/xref&gt;</ph> class with the specified configuration name.","source":"Initializes a new instance of the <xref href=\"System.ServiceModel.Configuration.NetTcpBindingElement\"></xref> class with the specified configuration name."}],"pos":[8818,8973],"yaml":true},{"content":"The configuration name of the binding. This value should be unique because it is used as identification for the binding.","nodes":[{"pos":[0,120],"content":"The configuration name of the binding. This value should be unique because it is used as identification for the binding.","nodes":[{"content":"The configuration name of the binding. This value should be unique because it is used as identification for the binding.","pos":[0,120],"nodes":[{"content":"The configuration name of the binding.","pos":[0,38]},{"content":"This value should be unique because it is used as identification for the binding.","pos":[39,120]}]}]}],"pos":[9115,9236],"yaml":true},{"content":"Gets the type of this configuration element.","nodes":[{"pos":[0,44],"content":"Gets the type of this configuration element.","nodes":[{"content":"Gets the type of this configuration element.","pos":[0,44]}]}],"pos":[10405,10450],"yaml":true},{"content":"The <xref href=\"System.Type\"></xref> of this configuration element.","nodes":[{"pos":[0,67],"content":"The <ph id=\"ph1\">&lt;xref href=\"System.Type\"&gt;&lt;/xref&gt;</ph> of this configuration element.","source":"The <xref href=\"System.Type\"></xref> of this configuration element."}],"pos":[10580,10648],"yaml":true},{"content":"Gets or sets a value that indicates whether the hostname is used to reach the service when matching the URI.","nodes":[{"pos":[0,108],"content":"Gets or sets a value that indicates whether the hostname is used to reach the service when matching the URI.","nodes":[{"content":"Gets or sets a value that indicates whether the hostname is used to reach the service when matching the URI.","pos":[0,108]}]}],"pos":[11854,11963],"yaml":true},{"content":"A valid <xref href=\"System.ServiceModel.Configuration.WSDualHttpBindingElement.HostNameComparisonMode\"></xref> value that specifies whether the hostname is used to reach the service when matching the URI. The default value is <xref href=\"System.ServiceModel.HostNameComparisonMode.StrongWildcard\"></xref>, which ignores the hostname in the match.","nodes":[{"pos":[0,346],"content":"A valid <xref href=\"System.ServiceModel.Configuration.WSDualHttpBindingElement.HostNameComparisonMode\"></xref> value that specifies whether the hostname is used to reach the service when matching the URI. The default value is <xref href=\"System.ServiceModel.HostNameComparisonMode.StrongWildcard\"></xref>, which ignores the hostname in the match.","nodes":[{"content":"A valid <ph id=\"ph1\">&lt;xref href=\"System.ServiceModel.Configuration.WSDualHttpBindingElement.HostNameComparisonMode\"&gt;&lt;/xref&gt;</ph> value that specifies whether the hostname is used to reach the service when matching the URI.","pos":[0,204],"source":"A valid <xref href=\"System.ServiceModel.Configuration.WSDualHttpBindingElement.HostNameComparisonMode\"></xref> value that specifies whether the hostname is used to reach the service when matching the URI."},{"content":"The default value is <ph id=\"ph1\">&lt;xref href=\"System.ServiceModel.HostNameComparisonMode.StrongWildcard\"&gt;&lt;/xref&gt;</ph>, which ignores the hostname in the match.","pos":[205,346],"source":" The default value is <xref href=\"System.ServiceModel.HostNameComparisonMode.StrongWildcard\"></xref>, which ignores the hostname in the match."}]}],"pos":[12295,12642],"yaml":true},{"content":"Initializes this binding configuration with the content of the specified binding.","nodes":[{"pos":[0,81],"content":"Initializes this binding configuration with the content of the specified binding.","nodes":[{"content":"Initializes this binding configuration with the content of the specified binding.","pos":[0,81]}]}],"pos":[14019,14101],"yaml":true},{"content":"A binding.","nodes":[{"pos":[0,10],"content":"A binding.","nodes":[{"content":"A binding.","pos":[0,10]}]}],"pos":[14313,14324],"yaml":true},{"content":"Gets or sets a value that specifies the maximum number of channels that can wait to be accepted on the listener.","nodes":[{"pos":[0,112],"content":"Gets or sets a value that specifies the maximum number of channels that can wait to be accepted on the listener.","nodes":[{"content":"Gets or sets a value that specifies the maximum number of channels that can wait to be accepted on the listener.","pos":[0,112]}]}],"pos":[15472,15585],"yaml":true},{"content":"Connections in excess of this limit are queued until space below the limit becomes available.","nodes":[{"pos":[0,93],"content":"Connections in excess of this limit are queued until space below the limit becomes available.","nodes":[{"content":"Connections in excess of this limit are queued until space below the limit becomes available.","pos":[0,93]}]}],"pos":[15596,15690],"yaml":true,"extradata":"MT"},{"content":"The maximum number of channels that can wait to be accepted on the listener. The default is 10.","nodes":[{"pos":[0,95],"content":"The maximum number of channels that can wait to be accepted on the listener. The default is 10.","nodes":[{"content":"The maximum number of channels that can wait to be accepted on the listener. The default is 10.","pos":[0,95],"nodes":[{"content":"The maximum number of channels that can wait to be accepted on the listener.","pos":[0,76]},{"content":"The default is 10.","pos":[77,95]}]}]}],"pos":[15994,16090],"yaml":true},{"content":"Gets or sets the maximum size, in bytes, for a buffer pool that stores TCP messages processed by the binding.","nodes":[{"pos":[0,109],"content":"Gets or sets the maximum size, in bytes, for a buffer pool that stores TCP messages processed by the binding.","nodes":[{"content":"Gets or sets the maximum size, in bytes, for a buffer pool that stores TCP messages processed by the binding.","pos":[0,109]}]}],"pos":[17394,17504],"yaml":true},{"content":"The maximum size (in bytes) used to buffer incoming messages in memory. The default value is 65,536 bytes.","nodes":[{"pos":[0,106],"content":"The maximum size (in bytes) used to buffer incoming messages in memory. The default value is 65,536 bytes.","nodes":[{"content":"The maximum size (in bytes) used to buffer incoming messages in memory. The default value is 65,536 bytes.","pos":[0,106],"nodes":[{"content":"The maximum size (in bytes) used to buffer incoming messages in memory.","pos":[0,71]},{"content":"The default value is 65,536 bytes.","pos":[72,106]}]}]}],"pos":[17814,17921],"yaml":true},{"content":"Gets or sets a value that specifies the maximum size, in bytes, of the buffer used to store messages in memory.","nodes":[{"pos":[0,111],"content":"Gets or sets a value that specifies the maximum size, in bytes, of the buffer used to store messages in memory.","nodes":[{"content":"Gets or sets a value that specifies the maximum size, in bytes, of the buffer used to store messages in memory.","pos":[0,111]}]}],"pos":[19202,19314],"yaml":true},{"content":"If the buffer is full, excess data remains in the underlying socket until the buffer has space again.  \n  \n This value cannot be less than <xref:System.ServiceModel.Configuration.NetTcpBindingElement.MaxReceivedMessageSize%2A>, whose default value is also 65,536 (64 KB).","nodes":[{"pos":[0,101],"content":"If the buffer is full, excess data remains in the underlying socket until the buffer has space again.","nodes":[{"content":"If the buffer is full, excess data remains in the underlying socket until the buffer has space again.","pos":[0,101]}]},{"pos":[108,271],"content":"This value cannot be less than <xref:System.ServiceModel.Configuration.NetTcpBindingElement.MaxReceivedMessageSize%2A>, whose default value is also 65,536 (64 KB).","nodes":[{"content":"This value cannot be less than <ph id=\"ph1\">&lt;xref:System.ServiceModel.Configuration.NetTcpBindingElement.MaxReceivedMessageSize%2A&gt;</ph>, whose default value is also 65,536 (64 KB).","pos":[0,163],"source":"This value cannot be less than <xref:System.ServiceModel.Configuration.NetTcpBindingElement.MaxReceivedMessageSize%2A>, whose default value is also 65,536 (64 KB)."}]}],"pos":[19325,19601],"yaml":true,"extradata":"MT"},{"content":"The maximum size, in bytes, of the buffer used to store messages in memory. The default is 65536.","nodes":[{"pos":[0,97],"content":"The maximum size, in bytes, of the buffer used to store messages in memory. The default is 65536.","nodes":[{"content":"The maximum size, in bytes, of the buffer used to store messages in memory. The default is 65536.","pos":[0,97],"nodes":[{"content":"The maximum size, in bytes, of the buffer used to store messages in memory.","pos":[0,75]},{"content":"The default is 65536.","pos":[76,97]}]}]}],"pos":[19905,20003],"yaml":true},{"content":"Gets or sets a value that specifies the maximum number of outbound and inbound connections the service creates and accepts respectively.","nodes":[{"pos":[0,136],"content":"Gets or sets a value that specifies the maximum number of outbound and inbound connections the service creates and accepts respectively.","nodes":[{"content":"Gets or sets a value that specifies the maximum number of outbound and inbound connections the service creates and accepts respectively.","pos":[0,136]}]}],"pos":[21289,21426],"yaml":true},{"content":"Incoming and outgoing connections are counted against a separate limit specified by this property. Any connection in excess of the limit is queued until a space below the limit becomes available.","nodes":[{"pos":[0,195],"content":"Incoming and outgoing connections are counted against a separate limit specified by this property. Any connection in excess of the limit is queued until a space below the limit becomes available.","nodes":[{"content":"Incoming and outgoing connections are counted against a separate limit specified by this property. Any connection in excess of the limit is queued until a space below the limit becomes available.","pos":[0,195],"nodes":[{"content":"Incoming and outgoing connections are counted against a separate limit specified by this property.","pos":[0,98]},{"content":"Any connection in excess of the limit is queued until a space below the limit becomes available.","pos":[99,195]}]}]}],"pos":[21437,21633],"yaml":true,"extradata":"MT"},{"content":"The maximum number of outbound and inbound connections the service creates and accepts respectively. The default is 10.","nodes":[{"pos":[0,119],"content":"The maximum number of outbound and inbound connections the service creates and accepts respectively. The default is 10.","nodes":[{"content":"The maximum number of outbound and inbound connections the service creates and accepts respectively. The default is 10.","pos":[0,119],"nodes":[{"content":"The maximum number of outbound and inbound connections the service creates and accepts respectively.","pos":[0,100]},{"content":"The default is 10.","pos":[101,119]}]}]}],"pos":[21939,22059],"yaml":true},{"content":"Gets or sets the maximum size, in bytes, of a message that can be received on a channel configured with this binding.","nodes":[{"pos":[0,117],"content":"Gets or sets the maximum size, in bytes, of a message that can be received on a channel configured with this binding.","nodes":[{"content":"Gets or sets the maximum size, in bytes, of a message that can be received on a channel configured with this binding.","pos":[0,117]}]}],"pos":[23394,23512],"yaml":true},{"content":"The maximum size, in bytes, of a message that is processed by this binding. The default value is 65,536 bytes.","nodes":[{"pos":[0,110],"content":"The maximum size, in bytes, of a message that is processed by this binding. The default value is 65,536 bytes.","nodes":[{"content":"The maximum size, in bytes, of a message that is processed by this binding. The default value is 65,536 bytes.","pos":[0,110],"nodes":[{"content":"The maximum size, in bytes, of a message that is processed by this binding.","pos":[0,75]},{"content":"The default value is 65,536 bytes.","pos":[76,110]}]}]}],"pos":[23832,23943],"yaml":true},{"content":"Applies the specified binding to this <xref href=\"System.ServiceModel.Configuration.NetNamedPipeBindingElement\"></xref> instance.","nodes":[{"pos":[0,129],"content":"Applies the specified binding to this <ph id=\"ph1\">&lt;xref href=\"System.ServiceModel.Configuration.NetNamedPipeBindingElement\"&gt;&lt;/xref&gt;</ph> instance.","source":"Applies the specified binding to this <xref href=\"System.ServiceModel.Configuration.NetNamedPipeBindingElement\"></xref> instance."}],"pos":[25410,25540],"yaml":true},{"content":"The binding to be applied.","nodes":[{"pos":[0,26],"content":"The binding to be applied.","nodes":[{"content":"The binding to be applied.","pos":[0,26]}]}],"pos":[25758,25785],"yaml":true},{"content":"Gets or sets a boolean value that specifies whether TCP port sharing is enabled for this connection.","nodes":[{"pos":[0,100],"content":"Gets or sets a boolean value that specifies whether TCP port sharing is enabled for this connection.","nodes":[{"content":"Gets or sets a boolean value that specifies whether TCP port sharing is enabled for this connection.","pos":[0,100]}]}],"pos":[26969,27070],"yaml":true},{"content":"`true` if TCP port sharing is enabled for this connection; otherwise, `false`.","nodes":[{"pos":[0,78],"content":"<ph id=\"ph1\">`true`</ph> if TCP port sharing is enabled for this connection; otherwise, <ph id=\"ph2\">`false`</ph>.","source":"`true` if TCP port sharing is enabled for this connection; otherwise, `false`."}],"pos":[27328,27409],"yaml":true},{"content":"Gets a <xref href=\"System.Configuration.ConfigurationPropertyCollection\"></xref> instance that contains a collection of <xref href=\"System.Configuration.ConfigurationProperty\"></xref> objects that can be attributes or <xref href=\"System.Configuration.ConfigurationElement\"></xref> objects of this configuration element.","nodes":[{"pos":[0,319],"content":"Gets a <ph id=\"ph1\">&lt;xref href=\"System.Configuration.ConfigurationPropertyCollection\"&gt;&lt;/xref&gt;</ph> instance that contains a collection of <ph id=\"ph2\">&lt;xref href=\"System.Configuration.ConfigurationProperty\"&gt;&lt;/xref&gt;</ph> objects that can be attributes or <ph id=\"ph3\">&lt;xref href=\"System.Configuration.ConfigurationElement\"&gt;&lt;/xref&gt;</ph> objects of this configuration element.","source":"Gets a <xref href=\"System.Configuration.ConfigurationPropertyCollection\"></xref> instance that contains a collection of <xref href=\"System.Configuration.ConfigurationProperty\"></xref> objects that can be attributes or <xref href=\"System.Configuration.ConfigurationElement\"></xref> objects of this configuration element."}],"pos":[28619,28939],"yaml":true},{"content":"A <xref href=\"System.Configuration.ConfigurationPropertyCollection\"></xref> instance that contains a collection of <xref href=\"System.Configuration.ConfigurationProperty\"></xref> objects that can be attributes or <xref href=\"System.Configuration.ConfigurationElement\"></xref> objects of this configuration element.","nodes":[{"pos":[0,314],"content":"A <ph id=\"ph1\">&lt;xref href=\"System.Configuration.ConfigurationPropertyCollection\"&gt;&lt;/xref&gt;</ph> instance that contains a collection of <ph id=\"ph2\">&lt;xref href=\"System.Configuration.ConfigurationProperty\"&gt;&lt;/xref&gt;</ph> objects that can be attributes or <ph id=\"ph3\">&lt;xref href=\"System.Configuration.ConfigurationElement\"&gt;&lt;/xref&gt;</ph> objects of this configuration element.","source":"A <xref href=\"System.Configuration.ConfigurationPropertyCollection\"></xref> instance that contains a collection of <xref href=\"System.Configuration.ConfigurationProperty\"></xref> objects that can be attributes or <xref href=\"System.Configuration.ConfigurationElement\"></xref> objects of this configuration element."}],"pos":[29150,29465],"yaml":true},{"content":"Gets the constraints on the complexity of SOAP messages that can be processed by endpoints configured with this binding.","nodes":[{"pos":[0,120],"content":"Gets the constraints on the complexity of SOAP messages that can be processed by endpoints configured with this binding.","nodes":[{"content":"Gets the constraints on the complexity of SOAP messages that can be processed by endpoints configured with this binding.","pos":[0,120]}]}],"pos":[30603,30724],"yaml":true},{"content":"The complexity constraints include items such as a maximum element depth, a maximum length for string content within the message. The constraints protect against a class of denial of service (DOS) attacks that attempt to use message complexity to tie up endpoint processing resources.","nodes":[{"pos":[0,284],"content":"The complexity constraints include items such as a maximum element depth, a maximum length for string content within the message. The constraints protect against a class of denial of service (DOS) attacks that attempt to use message complexity to tie up endpoint processing resources.","nodes":[{"content":"The complexity constraints include items such as a maximum element depth, a maximum length for string content within the message. The constraints protect against a class of denial of service (DOS) attacks that attempt to use message complexity to tie up endpoint processing resources.","pos":[0,284],"nodes":[{"content":"The complexity constraints include items such as a maximum element depth, a maximum length for string content within the message.","pos":[0,129]},{"content":"The constraints protect against a class of denial of service (DOS) attacks that attempt to use message complexity to tie up endpoint processing resources.","pos":[130,284]}]}]}],"pos":[30735,31020],"yaml":true,"extradata":"MT"},{"content":"The <xref href=\"System.Xml.XmlDictionaryReaderQuotas\"></xref> that specifies the complexity constraints.","nodes":[{"pos":[0,104],"content":"The <ph id=\"ph1\">&lt;xref href=\"System.Xml.XmlDictionaryReaderQuotas\"&gt;&lt;/xref&gt;</ph> that specifies the complexity constraints.","source":"The <xref href=\"System.Xml.XmlDictionaryReaderQuotas\"></xref> that specifies the complexity constraints."}],"pos":[31326,31431],"yaml":true},{"content":"Gets a configuration element that specifies whether reliable sessions are established between channel endpoints.","nodes":[{"pos":[0,112],"content":"Gets a configuration element that specifies whether reliable sessions are established between channel endpoints.","nodes":[{"content":"Gets a configuration element that specifies whether reliable sessions are established between channel endpoints.","pos":[0,112]}]}],"pos":[32665,32778],"yaml":true},{"content":"An <xref href=\"System.ServiceModel.Configuration.ReliableSessionElement\"></xref> that specifies whether reliable sessions are enabled.","nodes":[{"pos":[0,134],"content":"An <ph id=\"ph1\">&lt;xref href=\"System.ServiceModel.Configuration.ReliableSessionElement\"&gt;&lt;/xref&gt;</ph> that specifies whether reliable sessions are enabled.","source":"An <xref href=\"System.ServiceModel.Configuration.ReliableSessionElement\"></xref> that specifies whether reliable sessions are enabled."}],"pos":[33116,33251],"yaml":true},{"content":"Gets the type of security to be used with this binding.","nodes":[{"pos":[0,55],"content":"Gets the type of security to be used with this binding.","nodes":[{"content":"Gets the type of security to be used with this binding.","pos":[0,55]}]}],"pos":[34446,34502],"yaml":true},{"content":"The <xref href=\"System.ServiceModel.Configuration.NetTcpSecurityElement\"></xref> that is used with this binding.","nodes":[{"pos":[0,112],"content":"The <ph id=\"ph1\">&lt;xref href=\"System.ServiceModel.Configuration.NetTcpSecurityElement\"&gt;&lt;/xref&gt;</ph> that is used with this binding.","source":"The <xref href=\"System.ServiceModel.Configuration.NetTcpSecurityElement\"></xref> that is used with this binding."}],"pos":[34778,34891],"yaml":true},{"content":"Gets or sets a Boolean value that specifies whether the binding supports flowing WS-Transactions.","nodes":[{"pos":[0,97],"content":"Gets or sets a Boolean value that specifies whether the binding supports flowing WS-Transactions.","nodes":[{"content":"Gets or sets a Boolean value that specifies whether the binding supports flowing WS-Transactions.","pos":[0,97]}]}],"pos":[36121,36219],"yaml":true},{"content":"`true` if the binding supports flowing WS-Transactions; otherwise, `false`. The default is `false`.","nodes":[{"pos":[0,99],"content":"`true` if the binding supports flowing WS-Transactions; otherwise, `false`. The default is `false`.","nodes":[{"content":"<ph id=\"ph1\">`true`</ph> if the binding supports flowing WS-Transactions; otherwise, <ph id=\"ph2\">`false`</ph>.","pos":[0,75],"source":"`true` if the binding supports flowing WS-Transactions; otherwise, `false`."},{"content":"The default is <ph id=\"ph1\">`false`</ph>.","pos":[76,99],"source":" The default is `false`."}]}],"pos":[36471,36573],"yaml":true},{"content":"Gets or sets the transaction protocol to be used with this binding.","nodes":[{"pos":[0,67],"content":"Gets or sets the transaction protocol to be used with this binding.","nodes":[{"content":"Gets or sets the transaction protocol to be used with this binding.","pos":[0,67]}]}],"pos":[37834,37902],"yaml":true},{"content":"A <xref href=\"System.ServiceModel.TransactionProtocol\"></xref> that specifies the transaction protocol to be used with this binding.","nodes":[{"pos":[0,132],"content":"A <ph id=\"ph1\">&lt;xref href=\"System.ServiceModel.TransactionProtocol\"&gt;&lt;/xref&gt;</ph> that specifies the transaction protocol to be used with this binding.","source":"A <xref href=\"System.ServiceModel.TransactionProtocol\"></xref> that specifies the transaction protocol to be used with this binding."}],"pos":[38339,38472],"yaml":true},{"content":"Gets or sets a value that specifies whether messages are buffered or streamed or a request or response.","nodes":[{"pos":[0,103],"content":"Gets or sets a value that specifies whether messages are buffered or streamed or a request or response.","nodes":[{"content":"Gets or sets a value that specifies whether messages are buffered or streamed or a request or response.","pos":[0,103]}]}],"pos":[39750,39854],"yaml":true},{"content":"A valid <xref href=\"System.ServiceModel.TransferMode\"></xref> value that specifies whether messages are buffered or streamed or a request or response.","nodes":[{"pos":[0,150],"content":"A valid <ph id=\"ph1\">&lt;xref href=\"System.ServiceModel.TransferMode\"&gt;&lt;/xref&gt;</ph> value that specifies whether messages are buffered or streamed or a request or response.","source":"A valid <xref href=\"System.ServiceModel.TransferMode\"></xref> value that specifies whether messages are buffered or streamed or a request or response."}],"pos":[40146,40297],"yaml":true}],"content":"### YamlMime:ManagedReference\nitems:\n- uid: System.ServiceModel.Configuration.NetTcpBindingElement\n  commentId: T:System.ServiceModel.Configuration.NetTcpBindingElement\n  id: NetTcpBindingElement\n  children:\n  - System.ServiceModel.Configuration.NetTcpBindingElement.#ctor\n  - System.ServiceModel.Configuration.NetTcpBindingElement.#ctor(System.String)\n  - System.ServiceModel.Configuration.NetTcpBindingElement.BindingElementType\n  - System.ServiceModel.Configuration.NetTcpBindingElement.HostNameComparisonMode\n  - System.ServiceModel.Configuration.NetTcpBindingElement.InitializeFrom(System.ServiceModel.Channels.Binding)\n  - System.ServiceModel.Configuration.NetTcpBindingElement.ListenBacklog\n  - System.ServiceModel.Configuration.NetTcpBindingElement.MaxBufferPoolSize\n  - System.ServiceModel.Configuration.NetTcpBindingElement.MaxBufferSize\n  - System.ServiceModel.Configuration.NetTcpBindingElement.MaxConnections\n  - System.ServiceModel.Configuration.NetTcpBindingElement.MaxReceivedMessageSize\n  - System.ServiceModel.Configuration.NetTcpBindingElement.OnApplyConfiguration(System.ServiceModel.Channels.Binding)\n  - System.ServiceModel.Configuration.NetTcpBindingElement.PortSharingEnabled\n  - System.ServiceModel.Configuration.NetTcpBindingElement.Properties\n  - System.ServiceModel.Configuration.NetTcpBindingElement.ReaderQuotas\n  - System.ServiceModel.Configuration.NetTcpBindingElement.ReliableSession\n  - System.ServiceModel.Configuration.NetTcpBindingElement.Security\n  - System.ServiceModel.Configuration.NetTcpBindingElement.TransactionFlow\n  - System.ServiceModel.Configuration.NetTcpBindingElement.TransactionProtocol\n  - System.ServiceModel.Configuration.NetTcpBindingElement.TransferMode\n  langs:\n  - csharp\n  name: NetTcpBindingElement\n  nameWithType: NetTcpBindingElement\n  fullName: System.ServiceModel.Configuration.NetTcpBindingElement\n  type: Class\n  assemblies:\n  - System.ServiceModel\n  namespace: System.ServiceModel.Configuration\n  summary: Represents an XML element that specifies a binding for peer channel-specific TCP messaging.\n  remarks: The netTcpBinding is a secure, reliable, optimized binding suitable for cross-machine communication. By default, it generates a run-time communication stack with WS-ReliableMessaging for reliability, Windows Security for message security and authentication, TCP for message delivery, and binary message encoding.\n  syntax:\n    content: 'public class NetTcpBindingElement : System.ServiceModel.Configuration.StandardBindingElement'\n  inheritance:\n  - System.Object\n  - System.Configuration.ConfigurationElement\n  - System.ServiceModel.Configuration.ServiceModelConfigurationElement\n  - System.ServiceModel.Configuration.StandardBindingElement\n  derivedClasses:\n  - System.ServiceModel.Configuration.NetTcpContextBindingElement\n  implements: []\n  inheritedMembers:\n  - System.Configuration.ConfigurationElement.CurrentConfiguration\n  - System.Configuration.ConfigurationElement.DeserializeElement(System.Xml.XmlReader,System.Boolean)\n  - System.Configuration.ConfigurationElement.ElementInformation\n  - System.Configuration.ConfigurationElement.ElementProperty\n  - System.Configuration.ConfigurationElement.Equals(System.Object)\n  - System.Configuration.ConfigurationElement.EvaluationContext\n  - System.Configuration.ConfigurationElement.GetHashCode\n  - System.Configuration.ConfigurationElement.GetTransformedAssemblyString(System.String)\n  - System.Configuration.ConfigurationElement.GetTransformedTypeString(System.String)\n  - System.Configuration.ConfigurationElement.HasContext\n  - System.Configuration.ConfigurationElement.Init\n  - System.Configuration.ConfigurationElement.InitializeDefault\n  - System.Configuration.ConfigurationElement.IsModified\n  - System.Configuration.ConfigurationElement.IsReadOnly\n  - System.Configuration.ConfigurationElement.Item(System.Configuration.ConfigurationProperty)\n  - System.Configuration.ConfigurationElement.Item(System.String)\n  - System.Configuration.ConfigurationElement.ListErrors(System.Collections.IList)\n  - System.Configuration.ConfigurationElement.LockAllAttributesExcept\n  - System.Configuration.ConfigurationElement.LockAllElementsExcept\n  - System.Configuration.ConfigurationElement.LockAttributes\n  - System.Configuration.ConfigurationElement.LockElements\n  - System.Configuration.ConfigurationElement.LockItem\n  - System.Configuration.ConfigurationElement.OnDeserializeUnrecognizedAttribute(System.String,System.String)\n  - System.Configuration.ConfigurationElement.OnDeserializeUnrecognizedElement(System.String,System.Xml.XmlReader)\n  - System.Configuration.ConfigurationElement.OnRequiredPropertyNotFound(System.String)\n  - System.Configuration.ConfigurationElement.PostDeserialize\n  - System.Configuration.ConfigurationElement.PreSerialize(System.Xml.XmlWriter)\n  - System.Configuration.ConfigurationElement.ResetModified\n  - System.Configuration.ConfigurationElement.SerializeElement(System.Xml.XmlWriter,System.Boolean)\n  - System.Configuration.ConfigurationElement.SerializeToXmlElement(System.Xml.XmlWriter,System.String)\n  - System.Configuration.ConfigurationElement.SetPropertyValue(System.Configuration.ConfigurationProperty,System.Object,System.Boolean)\n  - System.Configuration.ConfigurationElement.SetReadOnly\n  - System.Configuration.ConfigurationElement.Unmerge(System.Configuration.ConfigurationElement,System.Configuration.ConfigurationElement,System.Configuration.ConfigurationSaveMode)\n  - System.Object.Equals(System.Object,System.Object)\n  - System.Object.GetType\n  - System.Object.MemberwiseClone\n  - System.Object.ReferenceEquals(System.Object,System.Object)\n  - System.Object.ToString\n  - System.ServiceModel.Configuration.ServiceModelConfigurationElement.SetPropertyValueIfNotDefaultValue``1(System.String,``0)\n  - System.ServiceModel.Configuration.StandardBindingElement.ApplyConfiguration(System.ServiceModel.Channels.Binding)\n  - System.ServiceModel.Configuration.StandardBindingElement.CloseTimeout\n  - System.ServiceModel.Configuration.StandardBindingElement.Name\n  - System.ServiceModel.Configuration.StandardBindingElement.OpenTimeout\n  - System.ServiceModel.Configuration.StandardBindingElement.ReceiveTimeout\n  - System.ServiceModel.Configuration.StandardBindingElement.Reset(System.Configuration.ConfigurationElement)\n  - System.ServiceModel.Configuration.StandardBindingElement.SendTimeout\n  version:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.ServiceModel.Configuration/NetTcpBindingElement.xml\n  ms.technology:\n  - dotnet-standard\n  author: Erikre\n  ms.author: erikre\n  manager: erikre\n- uid: System.ServiceModel.Configuration.NetTcpBindingElement.#ctor\n  commentId: M:System.ServiceModel.Configuration.NetTcpBindingElement.#ctor\n  id: '#ctor'\n  parent: System.ServiceModel.Configuration.NetTcpBindingElement\n  langs:\n  - csharp\n  name: NetTcpBindingElement()\n  nameWithType: NetTcpBindingElement.NetTcpBindingElement()\n  fullName: NetTcpBindingElement.NetTcpBindingElement()\n  type: Constructor\n  assemblies:\n  - System.ServiceModel\n  namespace: System.ServiceModel.Configuration\n  summary: Initializes a new instance of the <xref href=\"System.ServiceModel.Configuration.NetTcpBindingElement\"></xref> class.\n  syntax:\n    content: public NetTcpBindingElement ();\n    parameters: []\n  overload: System.ServiceModel.Configuration.NetTcpBindingElement.#ctor*\n  exceptions: []\n  version:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.ServiceModel.Configuration/NetTcpBindingElement.xml\n  ms.technology:\n  - dotnet-standard\n  author: Erikre\n  ms.author: erikre\n  manager: erikre\n- uid: System.ServiceModel.Configuration.NetTcpBindingElement.#ctor(System.String)\n  commentId: M:System.ServiceModel.Configuration.NetTcpBindingElement.#ctor(System.String)\n  id: '#ctor(System.String)'\n  parent: System.ServiceModel.Configuration.NetTcpBindingElement\n  langs:\n  - csharp\n  name: NetTcpBindingElement(String)\n  nameWithType: NetTcpBindingElement.NetTcpBindingElement(String)\n  fullName: NetTcpBindingElement.NetTcpBindingElement(String)\n  type: Constructor\n  assemblies:\n  - System.ServiceModel\n  namespace: System.ServiceModel.Configuration\n  summary: Initializes a new instance of the <xref href=\"System.ServiceModel.Configuration.NetTcpBindingElement\"></xref> class with the specified configuration name.\n  syntax:\n    content: public NetTcpBindingElement (string name);\n    parameters:\n    - id: name\n      type: System.String\n      description: The configuration name of the binding. This value should be unique because it is used as identification for the binding.\n  overload: System.ServiceModel.Configuration.NetTcpBindingElement.#ctor*\n  exceptions: []\n  version:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.ServiceModel.Configuration/NetTcpBindingElement.xml\n  ms.technology:\n  - dotnet-standard\n  author: Erikre\n  ms.author: erikre\n  manager: erikre\n- uid: System.ServiceModel.Configuration.NetTcpBindingElement.BindingElementType\n  commentId: P:System.ServiceModel.Configuration.NetTcpBindingElement.BindingElementType\n  id: BindingElementType\n  parent: System.ServiceModel.Configuration.NetTcpBindingElement\n  langs:\n  - csharp\n  name: BindingElementType\n  nameWithType: NetTcpBindingElement.BindingElementType\n  fullName: NetTcpBindingElement.BindingElementType\n  type: Property\n  assemblies:\n  - System.ServiceModel\n  namespace: System.ServiceModel.Configuration\n  summary: Gets the type of this configuration element.\n  syntax:\n    content: protected override Type BindingElementType { get; }\n    return:\n      type: System.Type\n      description: The <xref href=\"System.Type\"></xref> of this configuration element.\n  overload: System.ServiceModel.Configuration.NetTcpBindingElement.BindingElementType*\n  exceptions: []\n  version:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.ServiceModel.Configuration/NetTcpBindingElement.xml\n  ms.technology:\n  - dotnet-standard\n  author: Erikre\n  ms.author: erikre\n  manager: erikre\n- uid: System.ServiceModel.Configuration.NetTcpBindingElement.HostNameComparisonMode\n  commentId: P:System.ServiceModel.Configuration.NetTcpBindingElement.HostNameComparisonMode\n  id: HostNameComparisonMode\n  parent: System.ServiceModel.Configuration.NetTcpBindingElement\n  langs:\n  - csharp\n  name: HostNameComparisonMode\n  nameWithType: NetTcpBindingElement.HostNameComparisonMode\n  fullName: NetTcpBindingElement.HostNameComparisonMode\n  type: Property\n  assemblies:\n  - System.ServiceModel\n  namespace: System.ServiceModel.Configuration\n  summary: Gets or sets a value that indicates whether the hostname is used to reach the service when matching the URI.\n  syntax:\n    content: >-\n      [System.Configuration.ConfigurationProperty(\"hostNameComparisonMode\", DefaultValue=Mono.Cecil.CustomAttributeArgument)]\n\n      public System.ServiceModel.HostNameComparisonMode HostNameComparisonMode { get; set; }\n    return:\n      type: System.ServiceModel.HostNameComparisonMode\n      description: A valid <xref href=\"System.ServiceModel.Configuration.WSDualHttpBindingElement.HostNameComparisonMode\"></xref> value that specifies whether the hostname is used to reach the service when matching the URI. The default value is <xref href=\"System.ServiceModel.HostNameComparisonMode.StrongWildcard\"></xref>, which ignores the hostname in the match.\n  overload: System.ServiceModel.Configuration.NetTcpBindingElement.HostNameComparisonMode*\n  exceptions: []\n  attributes:\n  - type: System.Configuration.ConfigurationPropertyAttribute\n  version:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.ServiceModel.Configuration/NetTcpBindingElement.xml\n  ms.technology:\n  - dotnet-standard\n  author: Erikre\n  ms.author: erikre\n  manager: erikre\n- uid: System.ServiceModel.Configuration.NetTcpBindingElement.InitializeFrom(System.ServiceModel.Channels.Binding)\n  commentId: M:System.ServiceModel.Configuration.NetTcpBindingElement.InitializeFrom(System.ServiceModel.Channels.Binding)\n  id: InitializeFrom(System.ServiceModel.Channels.Binding)\n  parent: System.ServiceModel.Configuration.NetTcpBindingElement\n  langs:\n  - csharp\n  name: InitializeFrom(Binding)\n  nameWithType: NetTcpBindingElement.InitializeFrom(Binding)\n  fullName: NetTcpBindingElement.InitializeFrom(Binding)\n  type: Method\n  assemblies:\n  - System.ServiceModel\n  namespace: System.ServiceModel.Configuration\n  summary: Initializes this binding configuration with the content of the specified binding.\n  syntax:\n    content: protected override void InitializeFrom (System.ServiceModel.Channels.Binding binding);\n    parameters:\n    - id: binding\n      type: System.ServiceModel.Channels.Binding\n      description: A binding.\n  overload: System.ServiceModel.Configuration.NetTcpBindingElement.InitializeFrom*\n  exceptions: []\n  version:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.ServiceModel.Configuration/NetTcpBindingElement.xml\n  ms.technology:\n  - dotnet-standard\n  author: Erikre\n  ms.author: erikre\n  manager: erikre\n- uid: System.ServiceModel.Configuration.NetTcpBindingElement.ListenBacklog\n  commentId: P:System.ServiceModel.Configuration.NetTcpBindingElement.ListenBacklog\n  id: ListenBacklog\n  parent: System.ServiceModel.Configuration.NetTcpBindingElement\n  langs:\n  - csharp\n  name: ListenBacklog\n  nameWithType: NetTcpBindingElement.ListenBacklog\n  fullName: NetTcpBindingElement.ListenBacklog\n  type: Property\n  assemblies:\n  - System.ServiceModel\n  namespace: System.ServiceModel.Configuration\n  summary: Gets or sets a value that specifies the maximum number of channels that can wait to be accepted on the listener.\n  remarks: Connections in excess of this limit are queued until space below the limit becomes available.\n  syntax:\n    content: >-\n      [System.Configuration.ConfigurationProperty(\"listenBacklog\", DefaultValue=Mono.Cecil.CustomAttributeArgument)]\n\n      [System.Configuration.IntegerValidator(MinValue=0)]\n\n      public int ListenBacklog { get; set; }\n    return:\n      type: System.Int32\n      description: The maximum number of channels that can wait to be accepted on the listener. The default is 10.\n  overload: System.ServiceModel.Configuration.NetTcpBindingElement.ListenBacklog*\n  exceptions: []\n  attributes:\n  - type: System.Configuration.ConfigurationPropertyAttribute\n  - type: System.Configuration.IntegerValidatorAttribute\n  version:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.ServiceModel.Configuration/NetTcpBindingElement.xml\n  ms.technology:\n  - dotnet-standard\n  author: Erikre\n  ms.author: erikre\n  manager: erikre\n- uid: System.ServiceModel.Configuration.NetTcpBindingElement.MaxBufferPoolSize\n  commentId: P:System.ServiceModel.Configuration.NetTcpBindingElement.MaxBufferPoolSize\n  id: MaxBufferPoolSize\n  parent: System.ServiceModel.Configuration.NetTcpBindingElement\n  langs:\n  - csharp\n  name: MaxBufferPoolSize\n  nameWithType: NetTcpBindingElement.MaxBufferPoolSize\n  fullName: NetTcpBindingElement.MaxBufferPoolSize\n  type: Property\n  assemblies:\n  - System.ServiceModel\n  namespace: System.ServiceModel.Configuration\n  summary: Gets or sets the maximum size, in bytes, for a buffer pool that stores TCP messages processed by the binding.\n  syntax:\n    content: >-\n      [System.Configuration.ConfigurationProperty(\"maxBufferPoolSize\", DefaultValue=Mono.Cecil.CustomAttributeArgument)]\n\n      [System.Configuration.LongValidator(MinValue=0)]\n\n      public long MaxBufferPoolSize { get; set; }\n    return:\n      type: System.Int64\n      description: The maximum size (in bytes) used to buffer incoming messages in memory. The default value is 65,536 bytes.\n  overload: System.ServiceModel.Configuration.NetTcpBindingElement.MaxBufferPoolSize*\n  exceptions: []\n  attributes:\n  - type: System.Configuration.ConfigurationPropertyAttribute\n  - type: System.Configuration.LongValidatorAttribute\n  version:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.ServiceModel.Configuration/NetTcpBindingElement.xml\n  ms.technology:\n  - dotnet-standard\n  author: Erikre\n  ms.author: erikre\n  manager: erikre\n- uid: System.ServiceModel.Configuration.NetTcpBindingElement.MaxBufferSize\n  commentId: P:System.ServiceModel.Configuration.NetTcpBindingElement.MaxBufferSize\n  id: MaxBufferSize\n  parent: System.ServiceModel.Configuration.NetTcpBindingElement\n  langs:\n  - csharp\n  name: MaxBufferSize\n  nameWithType: NetTcpBindingElement.MaxBufferSize\n  fullName: NetTcpBindingElement.MaxBufferSize\n  type: Property\n  assemblies:\n  - System.ServiceModel\n  namespace: System.ServiceModel.Configuration\n  summary: Gets or sets a value that specifies the maximum size, in bytes, of the buffer used to store messages in memory.\n  remarks: \"If the buffer is full, excess data remains in the underlying socket until the buffer has space again.  \\n  \\n This value cannot be less than <xref:System.ServiceModel.Configuration.NetTcpBindingElement.MaxReceivedMessageSize%2A>, whose default value is also 65,536 (64 KB).\"\n  syntax:\n    content: >-\n      [System.Configuration.ConfigurationProperty(\"maxBufferSize\", DefaultValue=Mono.Cecil.CustomAttributeArgument)]\n\n      [System.Configuration.IntegerValidator(MinValue=1)]\n\n      public int MaxBufferSize { get; set; }\n    return:\n      type: System.Int32\n      description: The maximum size, in bytes, of the buffer used to store messages in memory. The default is 65536.\n  overload: System.ServiceModel.Configuration.NetTcpBindingElement.MaxBufferSize*\n  exceptions: []\n  attributes:\n  - type: System.Configuration.ConfigurationPropertyAttribute\n  - type: System.Configuration.IntegerValidatorAttribute\n  version:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.ServiceModel.Configuration/NetTcpBindingElement.xml\n  ms.technology:\n  - dotnet-standard\n  author: Erikre\n  ms.author: erikre\n  manager: erikre\n- uid: System.ServiceModel.Configuration.NetTcpBindingElement.MaxConnections\n  commentId: P:System.ServiceModel.Configuration.NetTcpBindingElement.MaxConnections\n  id: MaxConnections\n  parent: System.ServiceModel.Configuration.NetTcpBindingElement\n  langs:\n  - csharp\n  name: MaxConnections\n  nameWithType: NetTcpBindingElement.MaxConnections\n  fullName: NetTcpBindingElement.MaxConnections\n  type: Property\n  assemblies:\n  - System.ServiceModel\n  namespace: System.ServiceModel.Configuration\n  summary: Gets or sets a value that specifies the maximum number of outbound and inbound connections the service creates and accepts respectively.\n  remarks: Incoming and outgoing connections are counted against a separate limit specified by this property. Any connection in excess of the limit is queued until a space below the limit becomes available.\n  syntax:\n    content: >-\n      [System.Configuration.ConfigurationProperty(\"maxConnections\", DefaultValue=Mono.Cecil.CustomAttributeArgument)]\n\n      [System.Configuration.IntegerValidator(MinValue=0)]\n\n      public int MaxConnections { get; set; }\n    return:\n      type: System.Int32\n      description: The maximum number of outbound and inbound connections the service creates and accepts respectively. The default is 10.\n  overload: System.ServiceModel.Configuration.NetTcpBindingElement.MaxConnections*\n  exceptions: []\n  attributes:\n  - type: System.Configuration.ConfigurationPropertyAttribute\n  - type: System.Configuration.IntegerValidatorAttribute\n  version:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.ServiceModel.Configuration/NetTcpBindingElement.xml\n  ms.technology:\n  - dotnet-standard\n  author: Erikre\n  ms.author: erikre\n  manager: erikre\n- uid: System.ServiceModel.Configuration.NetTcpBindingElement.MaxReceivedMessageSize\n  commentId: P:System.ServiceModel.Configuration.NetTcpBindingElement.MaxReceivedMessageSize\n  id: MaxReceivedMessageSize\n  parent: System.ServiceModel.Configuration.NetTcpBindingElement\n  langs:\n  - csharp\n  name: MaxReceivedMessageSize\n  nameWithType: NetTcpBindingElement.MaxReceivedMessageSize\n  fullName: NetTcpBindingElement.MaxReceivedMessageSize\n  type: Property\n  assemblies:\n  - System.ServiceModel\n  namespace: System.ServiceModel.Configuration\n  summary: Gets or sets the maximum size, in bytes, of a message that can be received on a channel configured with this binding.\n  syntax:\n    content: >-\n      [System.Configuration.ConfigurationProperty(\"maxReceivedMessageSize\", DefaultValue=Mono.Cecil.CustomAttributeArgument)]\n\n      [System.Configuration.LongValidator(MinValue=1)]\n\n      public long MaxReceivedMessageSize { get; set; }\n    return:\n      type: System.Int64\n      description: The maximum size, in bytes, of a message that is processed by this binding. The default value is 65,536 bytes.\n  overload: System.ServiceModel.Configuration.NetTcpBindingElement.MaxReceivedMessageSize*\n  exceptions: []\n  attributes:\n  - type: System.Configuration.ConfigurationPropertyAttribute\n  - type: System.Configuration.LongValidatorAttribute\n  version:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.ServiceModel.Configuration/NetTcpBindingElement.xml\n  ms.technology:\n  - dotnet-standard\n  author: Erikre\n  ms.author: erikre\n  manager: erikre\n- uid: System.ServiceModel.Configuration.NetTcpBindingElement.OnApplyConfiguration(System.ServiceModel.Channels.Binding)\n  commentId: M:System.ServiceModel.Configuration.NetTcpBindingElement.OnApplyConfiguration(System.ServiceModel.Channels.Binding)\n  id: OnApplyConfiguration(System.ServiceModel.Channels.Binding)\n  parent: System.ServiceModel.Configuration.NetTcpBindingElement\n  langs:\n  - csharp\n  name: OnApplyConfiguration(Binding)\n  nameWithType: NetTcpBindingElement.OnApplyConfiguration(Binding)\n  fullName: NetTcpBindingElement.OnApplyConfiguration(Binding)\n  type: Method\n  assemblies:\n  - System.ServiceModel\n  namespace: System.ServiceModel.Configuration\n  summary: Applies the specified binding to this <xref href=\"System.ServiceModel.Configuration.NetNamedPipeBindingElement\"></xref> instance.\n  syntax:\n    content: protected override void OnApplyConfiguration (System.ServiceModel.Channels.Binding binding);\n    parameters:\n    - id: binding\n      type: System.ServiceModel.Channels.Binding\n      description: The binding to be applied.\n  overload: System.ServiceModel.Configuration.NetTcpBindingElement.OnApplyConfiguration*\n  exceptions: []\n  version:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.ServiceModel.Configuration/NetTcpBindingElement.xml\n  ms.technology:\n  - dotnet-standard\n  author: Erikre\n  ms.author: erikre\n  manager: erikre\n- uid: System.ServiceModel.Configuration.NetTcpBindingElement.PortSharingEnabled\n  commentId: P:System.ServiceModel.Configuration.NetTcpBindingElement.PortSharingEnabled\n  id: PortSharingEnabled\n  parent: System.ServiceModel.Configuration.NetTcpBindingElement\n  langs:\n  - csharp\n  name: PortSharingEnabled\n  nameWithType: NetTcpBindingElement.PortSharingEnabled\n  fullName: NetTcpBindingElement.PortSharingEnabled\n  type: Property\n  assemblies:\n  - System.ServiceModel\n  namespace: System.ServiceModel.Configuration\n  summary: Gets or sets a boolean value that specifies whether TCP port sharing is enabled for this connection.\n  syntax:\n    content: >-\n      [System.Configuration.ConfigurationProperty(\"portSharingEnabled\", DefaultValue=Mono.Cecil.CustomAttributeArgument)]\n\n      public bool PortSharingEnabled { get; set; }\n    return:\n      type: System.Boolean\n      description: '`true` if TCP port sharing is enabled for this connection; otherwise, `false`.'\n  overload: System.ServiceModel.Configuration.NetTcpBindingElement.PortSharingEnabled*\n  exceptions: []\n  attributes:\n  - type: System.Configuration.ConfigurationPropertyAttribute\n  version:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.ServiceModel.Configuration/NetTcpBindingElement.xml\n  ms.technology:\n  - dotnet-standard\n  author: Erikre\n  ms.author: erikre\n  manager: erikre\n- uid: System.ServiceModel.Configuration.NetTcpBindingElement.Properties\n  commentId: P:System.ServiceModel.Configuration.NetTcpBindingElement.Properties\n  id: Properties\n  parent: System.ServiceModel.Configuration.NetTcpBindingElement\n  langs:\n  - csharp\n  name: Properties\n  nameWithType: NetTcpBindingElement.Properties\n  fullName: NetTcpBindingElement.Properties\n  type: Property\n  assemblies:\n  - System.ServiceModel\n  namespace: System.ServiceModel.Configuration\n  summary: Gets a <xref href=\"System.Configuration.ConfigurationPropertyCollection\"></xref> instance that contains a collection of <xref href=\"System.Configuration.ConfigurationProperty\"></xref> objects that can be attributes or <xref href=\"System.Configuration.ConfigurationElement\"></xref> objects of this configuration element.\n  syntax:\n    content: protected override System.Configuration.ConfigurationPropertyCollection Properties { get; }\n    return:\n      type: System.Configuration.ConfigurationPropertyCollection\n      description: A <xref href=\"System.Configuration.ConfigurationPropertyCollection\"></xref> instance that contains a collection of <xref href=\"System.Configuration.ConfigurationProperty\"></xref> objects that can be attributes or <xref href=\"System.Configuration.ConfigurationElement\"></xref> objects of this configuration element.\n  overload: System.ServiceModel.Configuration.NetTcpBindingElement.Properties*\n  exceptions: []\n  version:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.ServiceModel.Configuration/NetTcpBindingElement.xml\n  ms.technology:\n  - dotnet-standard\n  author: Erikre\n  ms.author: erikre\n  manager: erikre\n- uid: System.ServiceModel.Configuration.NetTcpBindingElement.ReaderQuotas\n  commentId: P:System.ServiceModel.Configuration.NetTcpBindingElement.ReaderQuotas\n  id: ReaderQuotas\n  parent: System.ServiceModel.Configuration.NetTcpBindingElement\n  langs:\n  - csharp\n  name: ReaderQuotas\n  nameWithType: NetTcpBindingElement.ReaderQuotas\n  fullName: NetTcpBindingElement.ReaderQuotas\n  type: Property\n  assemblies:\n  - System.ServiceModel\n  namespace: System.ServiceModel.Configuration\n  summary: Gets the constraints on the complexity of SOAP messages that can be processed by endpoints configured with this binding.\n  remarks: The complexity constraints include items such as a maximum element depth, a maximum length for string content within the message. The constraints protect against a class of denial of service (DOS) attacks that attempt to use message complexity to tie up endpoint processing resources.\n  syntax:\n    content: >-\n      [System.Configuration.ConfigurationProperty(\"readerQuotas\")]\n\n      public System.ServiceModel.Configuration.XmlDictionaryReaderQuotasElement ReaderQuotas { get; }\n    return:\n      type: System.ServiceModel.Configuration.XmlDictionaryReaderQuotasElement\n      description: The <xref href=\"System.Xml.XmlDictionaryReaderQuotas\"></xref> that specifies the complexity constraints.\n  overload: System.ServiceModel.Configuration.NetTcpBindingElement.ReaderQuotas*\n  exceptions: []\n  attributes:\n  - type: System.Configuration.ConfigurationPropertyAttribute\n  version:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.ServiceModel.Configuration/NetTcpBindingElement.xml\n  ms.technology:\n  - dotnet-standard\n  author: Erikre\n  ms.author: erikre\n  manager: erikre\n- uid: System.ServiceModel.Configuration.NetTcpBindingElement.ReliableSession\n  commentId: P:System.ServiceModel.Configuration.NetTcpBindingElement.ReliableSession\n  id: ReliableSession\n  parent: System.ServiceModel.Configuration.NetTcpBindingElement\n  langs:\n  - csharp\n  name: ReliableSession\n  nameWithType: NetTcpBindingElement.ReliableSession\n  fullName: NetTcpBindingElement.ReliableSession\n  type: Property\n  assemblies:\n  - System.ServiceModel\n  namespace: System.ServiceModel.Configuration\n  summary: Gets a configuration element that specifies whether reliable sessions are established between channel endpoints.\n  syntax:\n    content: >-\n      [System.Configuration.ConfigurationProperty(\"reliableSession\")]\n\n      public System.ServiceModel.Configuration.StandardBindingOptionalReliableSessionElement ReliableSession { get; }\n    return:\n      type: System.ServiceModel.Configuration.StandardBindingOptionalReliableSessionElement\n      description: An <xref href=\"System.ServiceModel.Configuration.ReliableSessionElement\"></xref> that specifies whether reliable sessions are enabled.\n  overload: System.ServiceModel.Configuration.NetTcpBindingElement.ReliableSession*\n  exceptions: []\n  attributes:\n  - type: System.Configuration.ConfigurationPropertyAttribute\n  version:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.ServiceModel.Configuration/NetTcpBindingElement.xml\n  ms.technology:\n  - dotnet-standard\n  author: Erikre\n  ms.author: erikre\n  manager: erikre\n- uid: System.ServiceModel.Configuration.NetTcpBindingElement.Security\n  commentId: P:System.ServiceModel.Configuration.NetTcpBindingElement.Security\n  id: Security\n  parent: System.ServiceModel.Configuration.NetTcpBindingElement\n  langs:\n  - csharp\n  name: Security\n  nameWithType: NetTcpBindingElement.Security\n  fullName: NetTcpBindingElement.Security\n  type: Property\n  assemblies:\n  - System.ServiceModel\n  namespace: System.ServiceModel.Configuration\n  summary: Gets the type of security to be used with this binding.\n  syntax:\n    content: >-\n      [System.Configuration.ConfigurationProperty(\"security\")]\n\n      public System.ServiceModel.Configuration.NetTcpSecurityElement Security { get; }\n    return:\n      type: System.ServiceModel.Configuration.NetTcpSecurityElement\n      description: The <xref href=\"System.ServiceModel.Configuration.NetTcpSecurityElement\"></xref> that is used with this binding.\n  overload: System.ServiceModel.Configuration.NetTcpBindingElement.Security*\n  exceptions: []\n  attributes:\n  - type: System.Configuration.ConfigurationPropertyAttribute\n  version:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.ServiceModel.Configuration/NetTcpBindingElement.xml\n  ms.technology:\n  - dotnet-standard\n  author: Erikre\n  ms.author: erikre\n  manager: erikre\n- uid: System.ServiceModel.Configuration.NetTcpBindingElement.TransactionFlow\n  commentId: P:System.ServiceModel.Configuration.NetTcpBindingElement.TransactionFlow\n  id: TransactionFlow\n  parent: System.ServiceModel.Configuration.NetTcpBindingElement\n  langs:\n  - csharp\n  name: TransactionFlow\n  nameWithType: NetTcpBindingElement.TransactionFlow\n  fullName: NetTcpBindingElement.TransactionFlow\n  type: Property\n  assemblies:\n  - System.ServiceModel\n  namespace: System.ServiceModel.Configuration\n  summary: Gets or sets a Boolean value that specifies whether the binding supports flowing WS-Transactions.\n  syntax:\n    content: >-\n      [System.Configuration.ConfigurationProperty(\"transactionFlow\", DefaultValue=Mono.Cecil.CustomAttributeArgument)]\n\n      public bool TransactionFlow { get; set; }\n    return:\n      type: System.Boolean\n      description: '`true` if the binding supports flowing WS-Transactions; otherwise, `false`. The default is `false`.'\n  overload: System.ServiceModel.Configuration.NetTcpBindingElement.TransactionFlow*\n  exceptions: []\n  attributes:\n  - type: System.Configuration.ConfigurationPropertyAttribute\n  version:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.ServiceModel.Configuration/NetTcpBindingElement.xml\n  ms.technology:\n  - dotnet-standard\n  author: Erikre\n  ms.author: erikre\n  manager: erikre\n- uid: System.ServiceModel.Configuration.NetTcpBindingElement.TransactionProtocol\n  commentId: P:System.ServiceModel.Configuration.NetTcpBindingElement.TransactionProtocol\n  id: TransactionProtocol\n  parent: System.ServiceModel.Configuration.NetTcpBindingElement\n  langs:\n  - csharp\n  name: TransactionProtocol\n  nameWithType: NetTcpBindingElement.TransactionProtocol\n  fullName: NetTcpBindingElement.TransactionProtocol\n  type: Property\n  assemblies:\n  - System.ServiceModel\n  namespace: System.ServiceModel.Configuration\n  summary: Gets or sets the transaction protocol to be used with this binding.\n  syntax:\n    content: >-\n      [System.ComponentModel.TypeConverter(typeof(System.ServiceModel.Configuration.TransactionProtocolConverter))]\n\n      [System.Configuration.ConfigurationProperty(\"transactionProtocol\", DefaultValue=Mono.Cecil.CustomAttributeArgument)]\n\n      public System.ServiceModel.TransactionProtocol TransactionProtocol { get; set; }\n    return:\n      type: System.ServiceModel.TransactionProtocol\n      description: A <xref href=\"System.ServiceModel.TransactionProtocol\"></xref> that specifies the transaction protocol to be used with this binding.\n  overload: System.ServiceModel.Configuration.NetTcpBindingElement.TransactionProtocol*\n  exceptions: []\n  attributes:\n  - type: System.ComponentModel.TypeConverterAttribute\n  - type: System.Configuration.ConfigurationPropertyAttribute\n  version:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.ServiceModel.Configuration/NetTcpBindingElement.xml\n  ms.technology:\n  - dotnet-standard\n  author: Erikre\n  ms.author: erikre\n  manager: erikre\n- uid: System.ServiceModel.Configuration.NetTcpBindingElement.TransferMode\n  commentId: P:System.ServiceModel.Configuration.NetTcpBindingElement.TransferMode\n  id: TransferMode\n  parent: System.ServiceModel.Configuration.NetTcpBindingElement\n  langs:\n  - csharp\n  name: TransferMode\n  nameWithType: NetTcpBindingElement.TransferMode\n  fullName: NetTcpBindingElement.TransferMode\n  type: Property\n  assemblies:\n  - System.ServiceModel\n  namespace: System.ServiceModel.Configuration\n  summary: Gets or sets a value that specifies whether messages are buffered or streamed or a request or response.\n  syntax:\n    content: >-\n      [System.Configuration.ConfigurationProperty(\"transferMode\", DefaultValue=Mono.Cecil.CustomAttributeArgument)]\n\n      public System.ServiceModel.TransferMode TransferMode { get; set; }\n    return:\n      type: System.ServiceModel.TransferMode\n      description: A valid <xref href=\"System.ServiceModel.TransferMode\"></xref> value that specifies whether messages are buffered or streamed or a request or response.\n  overload: System.ServiceModel.Configuration.NetTcpBindingElement.TransferMode*\n  exceptions: []\n  attributes:\n  - type: System.Configuration.ConfigurationPropertyAttribute\n  version:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.ServiceModel.Configuration/NetTcpBindingElement.xml\n  ms.technology:\n  - dotnet-standard\n  author: Erikre\n  ms.author: erikre\n  manager: erikre\nreferences:\n- uid: System.ServiceModel.Configuration.StandardBindingElement\n  parent: System.ServiceModel.Configuration\n  isExternal: false\n  name: StandardBindingElement\n  nameWithType: StandardBindingElement\n  fullName: System.ServiceModel.Configuration.StandardBindingElement\n- uid: System.ServiceModel.Configuration.NetTcpBindingElement.#ctor\n  parent: System.ServiceModel.Configuration.NetTcpBindingElement\n  isExternal: false\n  name: NetTcpBindingElement()\n  nameWithType: NetTcpBindingElement.NetTcpBindingElement()\n  fullName: NetTcpBindingElement.NetTcpBindingElement()\n- uid: System.ServiceModel.Configuration.NetTcpBindingElement.#ctor(System.String)\n  parent: System.ServiceModel.Configuration.NetTcpBindingElement\n  isExternal: false\n  name: NetTcpBindingElement(String)\n  nameWithType: NetTcpBindingElement.NetTcpBindingElement(String)\n  fullName: NetTcpBindingElement.NetTcpBindingElement(String)\n- uid: System.String\n  parent: System\n  isExternal: false\n  name: String\n  nameWithType: String\n  fullName: System.String\n- uid: System.ServiceModel.Configuration.NetTcpBindingElement.BindingElementType\n  parent: System.ServiceModel.Configuration.NetTcpBindingElement\n  isExternal: false\n  name: BindingElementType\n  nameWithType: NetTcpBindingElement.BindingElementType\n  fullName: NetTcpBindingElement.BindingElementType\n- uid: System.Type\n  parent: System\n  isExternal: false\n  name: Type\n  nameWithType: Type\n  fullName: System.Type\n- uid: System.ServiceModel.Configuration.NetTcpBindingElement.HostNameComparisonMode\n  parent: System.ServiceModel.Configuration.NetTcpBindingElement\n  isExternal: false\n  name: HostNameComparisonMode\n  nameWithType: NetTcpBindingElement.HostNameComparisonMode\n  fullName: NetTcpBindingElement.HostNameComparisonMode\n- uid: System.ServiceModel.HostNameComparisonMode\n  parent: System.ServiceModel\n  isExternal: false\n  name: HostNameComparisonMode\n  nameWithType: HostNameComparisonMode\n  fullName: System.ServiceModel.HostNameComparisonMode\n- uid: System.ServiceModel.Configuration.NetTcpBindingElement.InitializeFrom(System.ServiceModel.Channels.Binding)\n  parent: System.ServiceModel.Configuration.NetTcpBindingElement\n  isExternal: false\n  name: InitializeFrom(Binding)\n  nameWithType: NetTcpBindingElement.InitializeFrom(Binding)\n  fullName: NetTcpBindingElement.InitializeFrom(Binding)\n- uid: System.ServiceModel.Channels.Binding\n  parent: System.ServiceModel.Channels\n  isExternal: false\n  name: Binding\n  nameWithType: Binding\n  fullName: System.ServiceModel.Channels.Binding\n- uid: System.ServiceModel.Configuration.NetTcpBindingElement.ListenBacklog\n  parent: System.ServiceModel.Configuration.NetTcpBindingElement\n  isExternal: false\n  name: ListenBacklog\n  nameWithType: NetTcpBindingElement.ListenBacklog\n  fullName: NetTcpBindingElement.ListenBacklog\n- uid: System.Int32\n  parent: System\n  isExternal: false\n  name: Int32\n  nameWithType: Int32\n  fullName: System.Int32\n- uid: System.ServiceModel.Configuration.NetTcpBindingElement.MaxBufferPoolSize\n  parent: System.ServiceModel.Configuration.NetTcpBindingElement\n  isExternal: false\n  name: MaxBufferPoolSize\n  nameWithType: NetTcpBindingElement.MaxBufferPoolSize\n  fullName: NetTcpBindingElement.MaxBufferPoolSize\n- uid: System.Int64\n  parent: System\n  isExternal: false\n  name: Int64\n  nameWithType: Int64\n  fullName: System.Int64\n- uid: System.ServiceModel.Configuration.NetTcpBindingElement.MaxBufferSize\n  parent: System.ServiceModel.Configuration.NetTcpBindingElement\n  isExternal: false\n  name: MaxBufferSize\n  nameWithType: NetTcpBindingElement.MaxBufferSize\n  fullName: NetTcpBindingElement.MaxBufferSize\n- uid: System.ServiceModel.Configuration.NetTcpBindingElement.MaxConnections\n  parent: System.ServiceModel.Configuration.NetTcpBindingElement\n  isExternal: false\n  name: MaxConnections\n  nameWithType: NetTcpBindingElement.MaxConnections\n  fullName: NetTcpBindingElement.MaxConnections\n- uid: System.ServiceModel.Configuration.NetTcpBindingElement.MaxReceivedMessageSize\n  parent: System.ServiceModel.Configuration.NetTcpBindingElement\n  isExternal: false\n  name: MaxReceivedMessageSize\n  nameWithType: NetTcpBindingElement.MaxReceivedMessageSize\n  fullName: NetTcpBindingElement.MaxReceivedMessageSize\n- uid: System.ServiceModel.Configuration.NetTcpBindingElement.OnApplyConfiguration(System.ServiceModel.Channels.Binding)\n  parent: System.ServiceModel.Configuration.NetTcpBindingElement\n  isExternal: false\n  name: OnApplyConfiguration(Binding)\n  nameWithType: NetTcpBindingElement.OnApplyConfiguration(Binding)\n  fullName: NetTcpBindingElement.OnApplyConfiguration(Binding)\n- uid: System.ServiceModel.Configuration.NetTcpBindingElement.PortSharingEnabled\n  parent: System.ServiceModel.Configuration.NetTcpBindingElement\n  isExternal: false\n  name: PortSharingEnabled\n  nameWithType: NetTcpBindingElement.PortSharingEnabled\n  fullName: NetTcpBindingElement.PortSharingEnabled\n- uid: System.Boolean\n  parent: System\n  isExternal: false\n  name: Boolean\n  nameWithType: Boolean\n  fullName: System.Boolean\n- uid: System.ServiceModel.Configuration.NetTcpBindingElement.Properties\n  parent: System.ServiceModel.Configuration.NetTcpBindingElement\n  isExternal: false\n  name: Properties\n  nameWithType: NetTcpBindingElement.Properties\n  fullName: NetTcpBindingElement.Properties\n- uid: System.Configuration.ConfigurationPropertyCollection\n  parent: System.Configuration\n  isExternal: false\n  name: ConfigurationPropertyCollection\n  nameWithType: ConfigurationPropertyCollection\n  fullName: System.Configuration.ConfigurationPropertyCollection\n- uid: System.ServiceModel.Configuration.NetTcpBindingElement.ReaderQuotas\n  parent: System.ServiceModel.Configuration.NetTcpBindingElement\n  isExternal: false\n  name: ReaderQuotas\n  nameWithType: NetTcpBindingElement.ReaderQuotas\n  fullName: NetTcpBindingElement.ReaderQuotas\n- uid: System.ServiceModel.Configuration.XmlDictionaryReaderQuotasElement\n  parent: System.ServiceModel.Configuration\n  isExternal: false\n  name: XmlDictionaryReaderQuotasElement\n  nameWithType: XmlDictionaryReaderQuotasElement\n  fullName: System.ServiceModel.Configuration.XmlDictionaryReaderQuotasElement\n- uid: System.ServiceModel.Configuration.NetTcpBindingElement.ReliableSession\n  parent: System.ServiceModel.Configuration.NetTcpBindingElement\n  isExternal: false\n  name: ReliableSession\n  nameWithType: NetTcpBindingElement.ReliableSession\n  fullName: NetTcpBindingElement.ReliableSession\n- uid: System.ServiceModel.Configuration.StandardBindingOptionalReliableSessionElement\n  parent: System.ServiceModel.Configuration\n  isExternal: false\n  name: StandardBindingOptionalReliableSessionElement\n  nameWithType: StandardBindingOptionalReliableSessionElement\n  fullName: System.ServiceModel.Configuration.StandardBindingOptionalReliableSessionElement\n- uid: System.ServiceModel.Configuration.NetTcpBindingElement.Security\n  parent: System.ServiceModel.Configuration.NetTcpBindingElement\n  isExternal: false\n  name: Security\n  nameWithType: NetTcpBindingElement.Security\n  fullName: NetTcpBindingElement.Security\n- uid: System.ServiceModel.Configuration.NetTcpSecurityElement\n  parent: System.ServiceModel.Configuration\n  isExternal: false\n  name: NetTcpSecurityElement\n  nameWithType: NetTcpSecurityElement\n  fullName: System.ServiceModel.Configuration.NetTcpSecurityElement\n- uid: System.ServiceModel.Configuration.NetTcpBindingElement.TransactionFlow\n  parent: System.ServiceModel.Configuration.NetTcpBindingElement\n  isExternal: false\n  name: TransactionFlow\n  nameWithType: NetTcpBindingElement.TransactionFlow\n  fullName: NetTcpBindingElement.TransactionFlow\n- uid: System.ServiceModel.Configuration.NetTcpBindingElement.TransactionProtocol\n  parent: System.ServiceModel.Configuration.NetTcpBindingElement\n  isExternal: false\n  name: TransactionProtocol\n  nameWithType: NetTcpBindingElement.TransactionProtocol\n  fullName: NetTcpBindingElement.TransactionProtocol\n- uid: System.ServiceModel.TransactionProtocol\n  parent: System.ServiceModel\n  isExternal: false\n  name: TransactionProtocol\n  nameWithType: TransactionProtocol\n  fullName: System.ServiceModel.TransactionProtocol\n- uid: System.ServiceModel.Configuration.NetTcpBindingElement.TransferMode\n  parent: System.ServiceModel.Configuration.NetTcpBindingElement\n  isExternal: false\n  name: TransferMode\n  nameWithType: NetTcpBindingElement.TransferMode\n  fullName: NetTcpBindingElement.TransferMode\n- uid: System.ServiceModel.TransferMode\n  parent: System.ServiceModel\n  isExternal: false\n  name: TransferMode\n  nameWithType: TransferMode\n  fullName: System.ServiceModel.TransferMode\n- uid: System.ServiceModel.Configuration.NetTcpBindingElement.#ctor*\n  parent: System.ServiceModel.Configuration.NetTcpBindingElement\n  isExternal: false\n  name: NetTcpBindingElement\n  nameWithType: NetTcpBindingElement.NetTcpBindingElement\n  fullName: NetTcpBindingElement.NetTcpBindingElement\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.ServiceModel.Configuration/NetTcpBindingElement.xml\n- uid: System.ServiceModel.Configuration.NetTcpBindingElement.BindingElementType*\n  parent: System.ServiceModel.Configuration.NetTcpBindingElement\n  isExternal: false\n  name: BindingElementType\n  nameWithType: NetTcpBindingElement.BindingElementType\n  fullName: NetTcpBindingElement.BindingElementType\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.ServiceModel.Configuration/NetTcpBindingElement.xml\n- uid: System.ServiceModel.Configuration.NetTcpBindingElement.HostNameComparisonMode*\n  parent: System.ServiceModel.Configuration.NetTcpBindingElement\n  isExternal: false\n  name: HostNameComparisonMode\n  nameWithType: NetTcpBindingElement.HostNameComparisonMode\n  fullName: NetTcpBindingElement.HostNameComparisonMode\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.ServiceModel.Configuration/NetTcpBindingElement.xml\n- uid: System.ServiceModel.Configuration.NetTcpBindingElement.InitializeFrom*\n  parent: System.ServiceModel.Configuration.NetTcpBindingElement\n  isExternal: false\n  name: InitializeFrom\n  nameWithType: NetTcpBindingElement.InitializeFrom\n  fullName: NetTcpBindingElement.InitializeFrom\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.ServiceModel.Configuration/NetTcpBindingElement.xml\n- uid: System.ServiceModel.Configuration.NetTcpBindingElement.ListenBacklog*\n  parent: System.ServiceModel.Configuration.NetTcpBindingElement\n  isExternal: false\n  name: ListenBacklog\n  nameWithType: NetTcpBindingElement.ListenBacklog\n  fullName: NetTcpBindingElement.ListenBacklog\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.ServiceModel.Configuration/NetTcpBindingElement.xml\n- uid: System.ServiceModel.Configuration.NetTcpBindingElement.MaxBufferPoolSize*\n  parent: System.ServiceModel.Configuration.NetTcpBindingElement\n  isExternal: false\n  name: MaxBufferPoolSize\n  nameWithType: NetTcpBindingElement.MaxBufferPoolSize\n  fullName: NetTcpBindingElement.MaxBufferPoolSize\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.ServiceModel.Configuration/NetTcpBindingElement.xml\n- uid: System.ServiceModel.Configuration.NetTcpBindingElement.MaxBufferSize*\n  parent: System.ServiceModel.Configuration.NetTcpBindingElement\n  isExternal: false\n  name: MaxBufferSize\n  nameWithType: NetTcpBindingElement.MaxBufferSize\n  fullName: NetTcpBindingElement.MaxBufferSize\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.ServiceModel.Configuration/NetTcpBindingElement.xml\n- uid: System.ServiceModel.Configuration.NetTcpBindingElement.MaxConnections*\n  parent: System.ServiceModel.Configuration.NetTcpBindingElement\n  isExternal: false\n  name: MaxConnections\n  nameWithType: NetTcpBindingElement.MaxConnections\n  fullName: NetTcpBindingElement.MaxConnections\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.ServiceModel.Configuration/NetTcpBindingElement.xml\n- uid: System.ServiceModel.Configuration.NetTcpBindingElement.MaxReceivedMessageSize*\n  parent: System.ServiceModel.Configuration.NetTcpBindingElement\n  isExternal: false\n  name: MaxReceivedMessageSize\n  nameWithType: NetTcpBindingElement.MaxReceivedMessageSize\n  fullName: NetTcpBindingElement.MaxReceivedMessageSize\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.ServiceModel.Configuration/NetTcpBindingElement.xml\n- uid: System.ServiceModel.Configuration.NetTcpBindingElement.OnApplyConfiguration*\n  parent: System.ServiceModel.Configuration.NetTcpBindingElement\n  isExternal: false\n  name: OnApplyConfiguration\n  nameWithType: NetTcpBindingElement.OnApplyConfiguration\n  fullName: NetTcpBindingElement.OnApplyConfiguration\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.ServiceModel.Configuration/NetTcpBindingElement.xml\n- uid: System.ServiceModel.Configuration.NetTcpBindingElement.PortSharingEnabled*\n  parent: System.ServiceModel.Configuration.NetTcpBindingElement\n  isExternal: false\n  name: PortSharingEnabled\n  nameWithType: NetTcpBindingElement.PortSharingEnabled\n  fullName: NetTcpBindingElement.PortSharingEnabled\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.ServiceModel.Configuration/NetTcpBindingElement.xml\n- uid: System.ServiceModel.Configuration.NetTcpBindingElement.Properties*\n  parent: System.ServiceModel.Configuration.NetTcpBindingElement\n  isExternal: false\n  name: Properties\n  nameWithType: NetTcpBindingElement.Properties\n  fullName: NetTcpBindingElement.Properties\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.ServiceModel.Configuration/NetTcpBindingElement.xml\n- uid: System.ServiceModel.Configuration.NetTcpBindingElement.ReaderQuotas*\n  parent: System.ServiceModel.Configuration.NetTcpBindingElement\n  isExternal: false\n  name: ReaderQuotas\n  nameWithType: NetTcpBindingElement.ReaderQuotas\n  fullName: NetTcpBindingElement.ReaderQuotas\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.ServiceModel.Configuration/NetTcpBindingElement.xml\n- uid: System.ServiceModel.Configuration.NetTcpBindingElement.ReliableSession*\n  parent: System.ServiceModel.Configuration.NetTcpBindingElement\n  isExternal: false\n  name: ReliableSession\n  nameWithType: NetTcpBindingElement.ReliableSession\n  fullName: NetTcpBindingElement.ReliableSession\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.ServiceModel.Configuration/NetTcpBindingElement.xml\n- uid: System.ServiceModel.Configuration.NetTcpBindingElement.Security*\n  parent: System.ServiceModel.Configuration.NetTcpBindingElement\n  isExternal: false\n  name: Security\n  nameWithType: NetTcpBindingElement.Security\n  fullName: NetTcpBindingElement.Security\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.ServiceModel.Configuration/NetTcpBindingElement.xml\n- uid: System.ServiceModel.Configuration.NetTcpBindingElement.TransactionFlow*\n  parent: System.ServiceModel.Configuration.NetTcpBindingElement\n  isExternal: false\n  name: TransactionFlow\n  nameWithType: NetTcpBindingElement.TransactionFlow\n  fullName: NetTcpBindingElement.TransactionFlow\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.ServiceModel.Configuration/NetTcpBindingElement.xml\n- uid: System.ServiceModel.Configuration.NetTcpBindingElement.TransactionProtocol*\n  parent: System.ServiceModel.Configuration.NetTcpBindingElement\n  isExternal: false\n  name: TransactionProtocol\n  nameWithType: NetTcpBindingElement.TransactionProtocol\n  fullName: NetTcpBindingElement.TransactionProtocol\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.ServiceModel.Configuration/NetTcpBindingElement.xml\n- uid: System.ServiceModel.Configuration.NetTcpBindingElement.TransferMode*\n  parent: System.ServiceModel.Configuration.NetTcpBindingElement\n  isExternal: false\n  name: TransferMode\n  nameWithType: NetTcpBindingElement.TransferMode\n  fullName: NetTcpBindingElement.TransferMode\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.ServiceModel.Configuration/NetTcpBindingElement.xml\n- uid: System.Configuration.ConfigurationElement.Equals(System.Object)\n  parent: System.Configuration.ConfigurationElement\n  isExternal: false\n  name: Equals(Object)\n  nameWithType: ConfigurationElement.Equals(Object)\n  fullName: ConfigurationElement.Equals(Object)\n- uid: System.Object.Equals(System.Object,System.Object)\n  parent: System.Object\n  isExternal: false\n  name: Equals(Object, Object)\n  nameWithType: Object.Equals(Object, Object)\n  fullName: Object.Equals(Object, Object)\n- uid: System.Configuration.ConfigurationElement.GetHashCode\n  parent: System.Configuration.ConfigurationElement\n  isExternal: false\n  name: GetHashCode()\n  nameWithType: ConfigurationElement.GetHashCode()\n  fullName: ConfigurationElement.GetHashCode()\n- uid: System.Object.GetType\n  parent: System.Object\n  isExternal: false\n  name: GetType()\n  nameWithType: Object.GetType()\n  fullName: Object.GetType()\n- uid: System.Object.MemberwiseClone\n  parent: System.Object\n  isExternal: false\n  name: MemberwiseClone()\n  nameWithType: Object.MemberwiseClone()\n  fullName: Object.MemberwiseClone()\n- uid: System.Object.ReferenceEquals(System.Object,System.Object)\n  parent: System.Object\n  isExternal: false\n  name: ReferenceEquals(Object, Object)\n  nameWithType: Object.ReferenceEquals(Object, Object)\n  fullName: Object.ReferenceEquals(Object, Object)\n- uid: System.Object.ToString\n  parent: System.Object\n  isExternal: false\n  name: ToString()\n  nameWithType: Object.ToString()\n  fullName: Object.ToString()\n- uid: System.Configuration.ConfigurationElement.CurrentConfiguration\n  parent: System.Configuration.ConfigurationElement\n  isExternal: false\n  name: CurrentConfiguration\n  nameWithType: ConfigurationElement.CurrentConfiguration\n  fullName: ConfigurationElement.CurrentConfiguration\n- uid: System.Configuration.ConfigurationElement.DeserializeElement(System.Xml.XmlReader,System.Boolean)\n  parent: System.Configuration.ConfigurationElement\n  isExternal: false\n  name: DeserializeElement(XmlReader, Boolean)\n  nameWithType: ConfigurationElement.DeserializeElement(XmlReader, Boolean)\n  fullName: ConfigurationElement.DeserializeElement(XmlReader, Boolean)\n- uid: System.Configuration.ConfigurationElement.ElementInformation\n  parent: System.Configuration.ConfigurationElement\n  isExternal: false\n  name: ElementInformation\n  nameWithType: ConfigurationElement.ElementInformation\n  fullName: ConfigurationElement.ElementInformation\n- uid: System.Configuration.ConfigurationElement.ElementProperty\n  parent: System.Configuration.ConfigurationElement\n  isExternal: false\n  name: ElementProperty\n  nameWithType: ConfigurationElement.ElementProperty\n  fullName: ConfigurationElement.ElementProperty\n- uid: System.Configuration.ConfigurationElement.EvaluationContext\n  parent: System.Configuration.ConfigurationElement\n  isExternal: false\n  name: EvaluationContext\n  nameWithType: ConfigurationElement.EvaluationContext\n  fullName: ConfigurationElement.EvaluationContext\n- uid: System.Configuration.ConfigurationElement.GetTransformedAssemblyString(System.String)\n  parent: System.Configuration.ConfigurationElement\n  isExternal: false\n  name: GetTransformedAssemblyString(String)\n  nameWithType: ConfigurationElement.GetTransformedAssemblyString(String)\n  fullName: ConfigurationElement.GetTransformedAssemblyString(String)\n- uid: System.Configuration.ConfigurationElement.GetTransformedTypeString(System.String)\n  parent: System.Configuration.ConfigurationElement\n  isExternal: false\n  name: GetTransformedTypeString(String)\n  nameWithType: ConfigurationElement.GetTransformedTypeString(String)\n  fullName: ConfigurationElement.GetTransformedTypeString(String)\n- uid: System.Configuration.ConfigurationElement.HasContext\n  parent: System.Configuration.ConfigurationElement\n  isExternal: false\n  name: HasContext\n  nameWithType: ConfigurationElement.HasContext\n  fullName: ConfigurationElement.HasContext\n- uid: System.Configuration.ConfigurationElement.Init\n  parent: System.Configuration.ConfigurationElement\n  isExternal: false\n  name: Init()\n  nameWithType: ConfigurationElement.Init()\n  fullName: ConfigurationElement.Init()\n- uid: System.Configuration.ConfigurationElement.InitializeDefault\n  parent: System.Configuration.ConfigurationElement\n  isExternal: false\n  name: InitializeDefault()\n  nameWithType: ConfigurationElement.InitializeDefault()\n  fullName: ConfigurationElement.InitializeDefault()\n- uid: System.Configuration.ConfigurationElement.IsModified\n  parent: System.Configuration.ConfigurationElement\n  isExternal: false\n  name: IsModified()\n  nameWithType: ConfigurationElement.IsModified()\n  fullName: ConfigurationElement.IsModified()\n- uid: System.Configuration.ConfigurationElement.IsReadOnly\n  parent: System.Configuration.ConfigurationElement\n  isExternal: false\n  name: IsReadOnly()\n  nameWithType: ConfigurationElement.IsReadOnly()\n  fullName: ConfigurationElement.IsReadOnly()\n- uid: System.Configuration.ConfigurationElement.Item(System.Configuration.ConfigurationProperty)\n  parent: System.Configuration.ConfigurationElement\n  isExternal: false\n  name: Item(ConfigurationProperty)\n  nameWithType: ConfigurationElement.Item(ConfigurationProperty)\n  fullName: ConfigurationElement.Item(ConfigurationProperty)\n- uid: System.Configuration.ConfigurationElement.Item(System.String)\n  parent: System.Configuration.ConfigurationElement\n  isExternal: false\n  name: Item(String)\n  nameWithType: ConfigurationElement.Item(String)\n  fullName: ConfigurationElement.Item(String)\n- uid: System.Configuration.ConfigurationElement.ListErrors(System.Collections.IList)\n  parent: System.Configuration.ConfigurationElement\n  isExternal: false\n  name: ListErrors(IList)\n  nameWithType: ConfigurationElement.ListErrors(IList)\n  fullName: ConfigurationElement.ListErrors(IList)\n- uid: System.Configuration.ConfigurationElement.LockAllAttributesExcept\n  parent: System.Configuration.ConfigurationElement\n  isExternal: false\n  name: LockAllAttributesExcept\n  nameWithType: ConfigurationElement.LockAllAttributesExcept\n  fullName: ConfigurationElement.LockAllAttributesExcept\n- uid: System.Configuration.ConfigurationElement.LockAllElementsExcept\n  parent: System.Configuration.ConfigurationElement\n  isExternal: false\n  name: LockAllElementsExcept\n  nameWithType: ConfigurationElement.LockAllElementsExcept\n  fullName: ConfigurationElement.LockAllElementsExcept\n- uid: System.Configuration.ConfigurationElement.LockAttributes\n  parent: System.Configuration.ConfigurationElement\n  isExternal: false\n  name: LockAttributes\n  nameWithType: ConfigurationElement.LockAttributes\n  fullName: ConfigurationElement.LockAttributes\n- uid: System.Configuration.ConfigurationElement.LockElements\n  parent: System.Configuration.ConfigurationElement\n  isExternal: false\n  name: LockElements\n  nameWithType: ConfigurationElement.LockElements\n  fullName: ConfigurationElement.LockElements\n- uid: System.Configuration.ConfigurationElement.LockItem\n  parent: System.Configuration.ConfigurationElement\n  isExternal: false\n  name: LockItem\n  nameWithType: ConfigurationElement.LockItem\n  fullName: ConfigurationElement.LockItem\n- uid: System.Configuration.ConfigurationElement.OnDeserializeUnrecognizedAttribute(System.String,System.String)\n  parent: System.Configuration.ConfigurationElement\n  isExternal: false\n  name: OnDeserializeUnrecognizedAttribute(String, String)\n  nameWithType: ConfigurationElement.OnDeserializeUnrecognizedAttribute(String, String)\n  fullName: ConfigurationElement.OnDeserializeUnrecognizedAttribute(String, String)\n- uid: System.Configuration.ConfigurationElement.OnDeserializeUnrecognizedElement(System.String,System.Xml.XmlReader)\n  parent: System.Configuration.ConfigurationElement\n  isExternal: false\n  name: OnDeserializeUnrecognizedElement(String, XmlReader)\n  nameWithType: ConfigurationElement.OnDeserializeUnrecognizedElement(String, XmlReader)\n  fullName: ConfigurationElement.OnDeserializeUnrecognizedElement(String, XmlReader)\n- uid: System.Configuration.ConfigurationElement.OnRequiredPropertyNotFound(System.String)\n  parent: System.Configuration.ConfigurationElement\n  isExternal: false\n  name: OnRequiredPropertyNotFound(String)\n  nameWithType: ConfigurationElement.OnRequiredPropertyNotFound(String)\n  fullName: ConfigurationElement.OnRequiredPropertyNotFound(String)\n- uid: System.Configuration.ConfigurationElement.PostDeserialize\n  parent: System.Configuration.ConfigurationElement\n  isExternal: false\n  name: PostDeserialize()\n  nameWithType: ConfigurationElement.PostDeserialize()\n  fullName: ConfigurationElement.PostDeserialize()\n- uid: System.Configuration.ConfigurationElement.PreSerialize(System.Xml.XmlWriter)\n  parent: System.Configuration.ConfigurationElement\n  isExternal: false\n  name: PreSerialize(XmlWriter)\n  nameWithType: ConfigurationElement.PreSerialize(XmlWriter)\n  fullName: ConfigurationElement.PreSerialize(XmlWriter)\n- uid: System.ServiceModel.Configuration.StandardBindingElement.Reset(System.Configuration.ConfigurationElement)\n  parent: System.ServiceModel.Configuration.StandardBindingElement\n  isExternal: false\n  name: Reset(ConfigurationElement)\n  nameWithType: StandardBindingElement.Reset(ConfigurationElement)\n  fullName: StandardBindingElement.Reset(ConfigurationElement)\n- uid: System.Configuration.ConfigurationElement.ResetModified\n  parent: System.Configuration.ConfigurationElement\n  isExternal: false\n  name: ResetModified()\n  nameWithType: ConfigurationElement.ResetModified()\n  fullName: ConfigurationElement.ResetModified()\n- uid: System.Configuration.ConfigurationElement.SerializeElement(System.Xml.XmlWriter,System.Boolean)\n  parent: System.Configuration.ConfigurationElement\n  isExternal: false\n  name: SerializeElement(XmlWriter, Boolean)\n  nameWithType: ConfigurationElement.SerializeElement(XmlWriter, Boolean)\n  fullName: ConfigurationElement.SerializeElement(XmlWriter, Boolean)\n- uid: System.Configuration.ConfigurationElement.SerializeToXmlElement(System.Xml.XmlWriter,System.String)\n  parent: System.Configuration.ConfigurationElement\n  isExternal: false\n  name: SerializeToXmlElement(XmlWriter, String)\n  nameWithType: ConfigurationElement.SerializeToXmlElement(XmlWriter, String)\n  fullName: ConfigurationElement.SerializeToXmlElement(XmlWriter, String)\n- uid: System.Configuration.ConfigurationElement.SetPropertyValue(System.Configuration.ConfigurationProperty,System.Object,System.Boolean)\n  parent: System.Configuration.ConfigurationElement\n  isExternal: false\n  name: SetPropertyValue(ConfigurationProperty, Object, Boolean)\n  nameWithType: ConfigurationElement.SetPropertyValue(ConfigurationProperty, Object, Boolean)\n  fullName: ConfigurationElement.SetPropertyValue(ConfigurationProperty, Object, Boolean)\n- uid: System.Configuration.ConfigurationElement.SetReadOnly\n  parent: System.Configuration.ConfigurationElement\n  isExternal: false\n  name: SetReadOnly()\n  nameWithType: ConfigurationElement.SetReadOnly()\n  fullName: ConfigurationElement.SetReadOnly()\n- uid: System.Configuration.ConfigurationElement.Unmerge(System.Configuration.ConfigurationElement,System.Configuration.ConfigurationElement,System.Configuration.ConfigurationSaveMode)\n  parent: System.Configuration.ConfigurationElement\n  isExternal: false\n  name: Unmerge(ConfigurationElement, ConfigurationElement, ConfigurationSaveMode)\n  nameWithType: ConfigurationElement.Unmerge(ConfigurationElement, ConfigurationElement, ConfigurationSaveMode)\n  fullName: ConfigurationElement.Unmerge(ConfigurationElement, ConfigurationElement, ConfigurationSaveMode)\n- uid: System.ServiceModel.Configuration.ServiceModelConfigurationElement.SetPropertyValueIfNotDefaultValue``1(System.String,``0)\n  parent: System.ServiceModel.Configuration.ServiceModelConfigurationElement\n  isExternal: false\n  name: SetPropertyValueIfNotDefaultValue<T>(String, T)\n  nameWithType: ServiceModelConfigurationElement.SetPropertyValueIfNotDefaultValue<T>(String, T)\n  fullName: ServiceModelConfigurationElement.SetPropertyValueIfNotDefaultValue<T>(String, T)\n- uid: System.ServiceModel.Configuration.StandardBindingElement.ApplyConfiguration(System.ServiceModel.Channels.Binding)\n  parent: System.ServiceModel.Configuration.StandardBindingElement\n  isExternal: false\n  name: ApplyConfiguration(Binding)\n  nameWithType: StandardBindingElement.ApplyConfiguration(Binding)\n  fullName: StandardBindingElement.ApplyConfiguration(Binding)\n- uid: System.ServiceModel.Configuration.StandardBindingElement.CloseTimeout\n  parent: System.ServiceModel.Configuration.StandardBindingElement\n  isExternal: false\n  name: CloseTimeout\n  nameWithType: StandardBindingElement.CloseTimeout\n  fullName: StandardBindingElement.CloseTimeout\n- uid: System.ServiceModel.Configuration.StandardBindingElement.Name\n  parent: System.ServiceModel.Configuration.StandardBindingElement\n  isExternal: false\n  name: Name\n  nameWithType: StandardBindingElement.Name\n  fullName: StandardBindingElement.Name\n- uid: System.ServiceModel.Configuration.StandardBindingElement.OpenTimeout\n  parent: System.ServiceModel.Configuration.StandardBindingElement\n  isExternal: false\n  name: OpenTimeout\n  nameWithType: StandardBindingElement.OpenTimeout\n  fullName: StandardBindingElement.OpenTimeout\n- uid: System.ServiceModel.Configuration.StandardBindingElement.ReceiveTimeout\n  parent: System.ServiceModel.Configuration.StandardBindingElement\n  isExternal: false\n  name: ReceiveTimeout\n  nameWithType: StandardBindingElement.ReceiveTimeout\n  fullName: StandardBindingElement.ReceiveTimeout\n- uid: System.ServiceModel.Configuration.StandardBindingElement.SendTimeout\n  parent: System.ServiceModel.Configuration.StandardBindingElement\n  isExternal: false\n  name: SendTimeout\n  nameWithType: StandardBindingElement.SendTimeout\n  fullName: StandardBindingElement.SendTimeout\n"}