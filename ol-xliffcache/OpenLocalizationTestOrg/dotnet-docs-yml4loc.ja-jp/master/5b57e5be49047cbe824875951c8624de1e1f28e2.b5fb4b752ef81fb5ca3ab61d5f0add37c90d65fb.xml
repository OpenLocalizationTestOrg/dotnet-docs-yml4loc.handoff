{"nodes":[{"content":"Represents an XML Document Type Definition (DTD).","nodes":[{"pos":[0,49],"content":"Represents an XML Document Type Definition (DTD).","nodes":[{"content":"Represents an XML Document Type Definition (DTD).","pos":[0,49]}]}],"pos":[946,996],"yaml":true},{"content":"Data Type Definitions (DTD) in XML are a way to do the following:  \n  \n-   Validate XML trees to a limited extent.  \n  \n-   Expand entities, which is a form of text replacement.  \n  \n-   Supply default attributes.  \n  \n This class represents the XML concept of a DTD.  \n  \n DTD support in [!INCLUDE[sqltecxlinq](~/includes/sqltecxlinq-md.md)] is limited.  \n  \n [!INCLUDE[sqltecxlinq](~/includes/sqltecxlinq-md.md)] will expand internal entities by default, but it will not resolve external entity references unless an <xref:System.Xml.XmlReader> with an associated <xref:System.Xml.XmlResolver> is used to load the XML tree.  \n  \n [!INCLUDE[sqltecxlinq](~/includes/sqltecxlinq-md.md)] will not validate a document against a DTD, but you can use a validating <xref:System.Xml.XmlReader> to perform DTD validation if necessary.  \n  \n To validate an [!INCLUDE[sqltecxlinq](~/includes/sqltecxlinq-md.md)] tree against an XML schema, use the <xref:System.Xml.Schema.Extensions.Validate%2A> method.  \n  \n When a document contains entity references that are defined in a DTD, the references are expanded upon creation of the XML tree. However, when you serialize or save the XML tree, the content of the expanded entities is preserved; the entity references are not.  \n  \n Default attributes from the DTD will be materialized as regular attributes in the XML tree. After a default attribute from the DTD is materialized, there is no way to determine that the attribute was a default attribute from the DTD.  \n  \n You can populate an XML tree with an XML document that contains an internal DTD. The XML tree will then contain a <xref:System.Xml.Linq.XDocument.DocumentType%2A> node. When you serialize or save the tree, the internal DTD will also be saved as part of the document.","nodes":[{"pos":[0,65],"content":"Data Type Definitions (DTD) in XML are a way to do the following:","nodes":[{"content":"Data Type Definitions (DTD) in XML are a way to do the following:","pos":[0,65]}]},{"pos":[75,114],"content":"Validate XML trees to a limited extent.","nodes":[{"content":"Validate XML trees to a limited extent.","pos":[0,39]}]},{"pos":[124,177],"content":"Expand entities, which is a form of text replacement.","nodes":[{"content":"Expand entities, which is a form of text replacement.","pos":[0,53]}]},{"pos":[187,213],"content":"Supply default attributes.","nodes":[{"content":"Supply default attributes.","pos":[0,26]}]},{"pos":[220,267],"content":"This class represents the XML concept of a DTD.","nodes":[{"content":"This class represents the XML concept of a DTD.","pos":[0,47]}]},{"pos":[274,354],"content":"DTD support in <ph id=\"ph1\">[!INCLUDE[sqltecxlinq](~/includes/sqltecxlinq-md.md)]</ph> is limited.","source":"DTD support in [!INCLUDE[sqltecxlinq](~/includes/sqltecxlinq-md.md)] is limited."},{"pos":[361,624],"content":"<ph id=\"ph1\">[!INCLUDE[sqltecxlinq](~/includes/sqltecxlinq-md.md)]</ph> will expand internal entities by default, but it will not resolve external entity references unless an <ph id=\"ph2\">&lt;xref:System.Xml.XmlReader&gt;</ph> with an associated <ph id=\"ph3\">&lt;xref:System.Xml.XmlResolver&gt;</ph> is used to load the XML tree.","source":"[!INCLUDE[sqltecxlinq](~/includes/sqltecxlinq-md.md)] will expand internal entities by default, but it will not resolve external entity references unless an <xref:System.Xml.XmlReader> with an associated <xref:System.Xml.XmlResolver> is used to load the XML tree."},{"pos":[631,825],"content":"<ph id=\"ph1\">[!INCLUDE[sqltecxlinq](~/includes/sqltecxlinq-md.md)]</ph> will not validate a document against a DTD, but you can use a validating <ph id=\"ph2\">&lt;xref:System.Xml.XmlReader&gt;</ph> to perform DTD validation if necessary.","source":"[!INCLUDE[sqltecxlinq](~/includes/sqltecxlinq-md.md)] will not validate a document against a DTD, but you can use a validating <xref:System.Xml.XmlReader> to perform DTD validation if necessary."},{"pos":[832,992],"content":"To validate an <ph id=\"ph1\">[!INCLUDE[sqltecxlinq](~/includes/sqltecxlinq-md.md)]</ph> tree against an XML schema, use the <ph id=\"ph2\">&lt;xref:System.Xml.Schema.Extensions.Validate%2A&gt;</ph> method.","source":"To validate an [!INCLUDE[sqltecxlinq](~/includes/sqltecxlinq-md.md)] tree against an XML schema, use the <xref:System.Xml.Schema.Extensions.Validate%2A> method."},{"pos":[999,1259],"content":"When a document contains entity references that are defined in a DTD, the references are expanded upon creation of the XML tree. However, when you serialize or save the XML tree, the content of the expanded entities is preserved; the entity references are not.","nodes":[{"content":"When a document contains entity references that are defined in a DTD, the references are expanded upon creation of the XML tree. However, when you serialize or save the XML tree, the content of the expanded entities is preserved; the entity references are not.","pos":[0,260],"nodes":[{"content":"When a document contains entity references that are defined in a DTD, the references are expanded upon creation of the XML tree.","pos":[0,128]},{"content":"However, when you serialize or save the XML tree, the content of the expanded entities is preserved; the entity references are not.","pos":[129,260]}]}]},{"pos":[1266,1499],"content":"Default attributes from the DTD will be materialized as regular attributes in the XML tree. After a default attribute from the DTD is materialized, there is no way to determine that the attribute was a default attribute from the DTD.","nodes":[{"content":"Default attributes from the DTD will be materialized as regular attributes in the XML tree. After a default attribute from the DTD is materialized, there is no way to determine that the attribute was a default attribute from the DTD.","pos":[0,233],"nodes":[{"content":"Default attributes from the DTD will be materialized as regular attributes in the XML tree.","pos":[0,91]},{"content":"After a default attribute from the DTD is materialized, there is no way to determine that the attribute was a default attribute from the DTD.","pos":[92,233]}]}]},{"pos":[1506,1772],"content":"You can populate an XML tree with an XML document that contains an internal DTD. The XML tree will then contain a <xref:System.Xml.Linq.XDocument.DocumentType%2A> node. When you serialize or save the tree, the internal DTD will also be saved as part of the document.","nodes":[{"content":"You can populate an XML tree with an XML document that contains an internal DTD. The XML tree will then contain a <xref:System.Xml.Linq.XDocument.DocumentType%2A> node. When you serialize or save the tree, the internal DTD will also be saved as part of the document.","pos":[0,266],"nodes":[{"content":"You can populate an XML tree with an XML document that contains an internal DTD.","pos":[0,80]},{"content":"The XML tree will then contain a <ph id=\"ph1\">&lt;xref:System.Xml.Linq.XDocument.DocumentType%2A&gt;</ph> node.","pos":[81,168],"source":" The XML tree will then contain a <xref:System.Xml.Linq.XDocument.DocumentType%2A> node."},{"content":"When you serialize or save the tree, the internal DTD will also be saved as part of the document.","pos":[169,266]}]}]}],"pos":[1007,2804],"yaml":true,"extradata":"MT"},{"content":"Initializes an instance of the <xref href=\"System.Xml.Linq.XDocumentType\"></xref> class from another <xref href=\"System.Xml.Linq.XDocumentType\"></xref> object.","nodes":[{"pos":[0,159],"content":"Initializes an instance of the <ph id=\"ph1\">&lt;xref href=\"System.Xml.Linq.XDocumentType\"&gt;&lt;/xref&gt;</ph> class from another <ph id=\"ph2\">&lt;xref href=\"System.Xml.Linq.XDocumentType\"&gt;&lt;/xref&gt;</ph> object.","source":"Initializes an instance of the <xref href=\"System.Xml.Linq.XDocumentType\"></xref> class from another <xref href=\"System.Xml.Linq.XDocumentType\"></xref> object."}],"pos":[8020,8180],"yaml":true},{"content":"This constructor is primarily used internally when making a deep copy of an XML tree.","nodes":[{"pos":[0,85],"content":"This constructor is primarily used internally when making a deep copy of an XML tree.","nodes":[{"content":"This constructor is primarily used internally when making a deep copy of an XML tree.","pos":[0,85]}]}],"pos":[8191,8277],"yaml":true,"extradata":"MT"},{"content":"An <xref href=\"System.Xml.Linq.XDocumentType\"></xref> object to copy from.","nodes":[{"pos":[0,74],"content":"An <ph id=\"ph1\">&lt;xref href=\"System.Xml.Linq.XDocumentType\"&gt;&lt;/xref&gt;</ph> object to copy from.","source":"An <xref href=\"System.Xml.Linq.XDocumentType\"></xref> object to copy from."}],"pos":[8453,8528],"yaml":true},{"content":"Initializes an instance of the <xref href=\"System.Xml.Linq.XDocumentType\"></xref> class.","nodes":[{"pos":[0,88],"content":"Initializes an instance of the <ph id=\"ph1\">&lt;xref href=\"System.Xml.Linq.XDocumentType\"&gt;&lt;/xref&gt;</ph> class.","source":"Initializes an instance of the <xref href=\"System.Xml.Linq.XDocumentType\"></xref> class."}],"pos":[10297,10386],"yaml":true},{"content":"A <xref href=\"System.String\"></xref> that contains the qualified name of the DTD, which is the same as the qualified name of the root element of the XML document.","nodes":[{"pos":[0,162],"content":"A <ph id=\"ph1\">&lt;xref href=\"System.String\"&gt;&lt;/xref&gt;</ph> that contains the qualified name of the DTD, which is the same as the qualified name of the root element of the XML document.","source":"A <xref href=\"System.String\"></xref> that contains the qualified name of the DTD, which is the same as the qualified name of the root element of the XML document."}],"pos":[13680,13843],"yaml":true},{"content":"A <xref href=\"System.String\"></xref> that contains the public identifier of an external public DTD.","nodes":[{"pos":[0,99],"content":"A <ph id=\"ph1\">&lt;xref href=\"System.String\"&gt;&lt;/xref&gt;</ph> that contains the public identifier of an external public DTD.","source":"A <xref href=\"System.String\"></xref> that contains the public identifier of an external public DTD."}],"pos":[13907,14007],"yaml":true},{"content":"A <xref href=\"System.String\"></xref> that contains the system identifier of an external private DTD.","nodes":[{"pos":[0,100],"content":"A <ph id=\"ph1\">&lt;xref href=\"System.String\"&gt;&lt;/xref&gt;</ph> that contains the system identifier of an external private DTD.","source":"A <xref href=\"System.String\"></xref> that contains the system identifier of an external private DTD."}],"pos":[14071,14172],"yaml":true},{"content":"A <xref href=\"System.String\"></xref> that contains the internal subset for an internal DTD.","nodes":[{"pos":[0,91],"content":"A <ph id=\"ph1\">&lt;xref href=\"System.String\"&gt;&lt;/xref&gt;</ph> that contains the internal subset for an internal DTD.","source":"A <xref href=\"System.String\"></xref> that contains the internal subset for an internal DTD."}],"pos":[14242,14334],"yaml":true},{"content":"Gets or sets the internal subset for this Document Type Definition (DTD).","nodes":[{"pos":[0,73],"content":"Gets or sets the internal subset for this Document Type Definition (DTD).","nodes":[{"content":"Gets or sets the internal subset for this Document Type Definition (DTD).","pos":[0,73]}]}],"pos":[15861,15935],"yaml":true},{"content":"A <xref href=\"System.String\"></xref> that contains the internal subset for this Document Type Definition (DTD).","nodes":[{"pos":[0,111],"content":"A <ph id=\"ph1\">&lt;xref href=\"System.String\"&gt;&lt;/xref&gt;</ph> that contains the internal subset for this Document Type Definition (DTD).","source":"A <xref href=\"System.String\"></xref> that contains the internal subset for this Document Type Definition (DTD)."}],"pos":[18506,18618],"yaml":true},{"content":"Gets or sets the name for this Document Type Definition (DTD).","nodes":[{"pos":[0,62],"content":"Gets or sets the name for this Document Type Definition (DTD).","nodes":[{"content":"Gets or sets the name for this Document Type Definition (DTD).","pos":[0,62]}]}],"pos":[20094,20157],"yaml":true},{"content":"A <xref href=\"System.String\"></xref> that contains the name for this Document Type Definition (DTD).","nodes":[{"pos":[0,100],"content":"A <ph id=\"ph1\">&lt;xref href=\"System.String\"&gt;&lt;/xref&gt;</ph> that contains the name for this Document Type Definition (DTD).","source":"A <xref href=\"System.String\"></xref> that contains the name for this Document Type Definition (DTD)."}],"pos":[22661,22762],"yaml":true},{"content":"Gets the node type for this node.","nodes":[{"pos":[0,33],"content":"Gets the node type for this node.","nodes":[{"content":"Gets the node type for this node.","pos":[0,33]}]}],"pos":[24252,24286],"yaml":true},{"content":"Because all classes that derive from <xref:System.Xml.Linq.XObject> contain a <xref:System.Xml.Linq.XObject.NodeType%2A> property, you can write code that operates on collections of concrete subclass of <xref:System.Xml.Linq.XObject>. Your code can then test for the node type of each node in the collection.","nodes":[{"pos":[0,308],"content":"Because all classes that derive from <xref:System.Xml.Linq.XObject> contain a <xref:System.Xml.Linq.XObject.NodeType%2A> property, you can write code that operates on collections of concrete subclass of <xref:System.Xml.Linq.XObject>. Your code can then test for the node type of each node in the collection.","nodes":[{"content":"Because all classes that derive from <xref:System.Xml.Linq.XObject> contain a <xref:System.Xml.Linq.XObject.NodeType%2A> property, you can write code that operates on collections of concrete subclass of <xref:System.Xml.Linq.XObject>. Your code can then test for the node type of each node in the collection.","pos":[0,308],"nodes":[{"content":"Because all classes that derive from <ph id=\"ph1\">&lt;xref:System.Xml.Linq.XObject&gt;</ph> contain a <ph id=\"ph2\">&lt;xref:System.Xml.Linq.XObject.NodeType%2A&gt;</ph> property, you can write code that operates on collections of concrete subclass of <ph id=\"ph3\">&lt;xref:System.Xml.Linq.XObject&gt;</ph>.","pos":[0,234],"source":"Because all classes that derive from <xref:System.Xml.Linq.XObject> contain a <xref:System.Xml.Linq.XObject.NodeType%2A> property, you can write code that operates on collections of concrete subclass of <xref:System.Xml.Linq.XObject>."},{"content":"Your code can then test for the node type of each node in the collection.","pos":[235,308]}]}]}],"pos":[24297,24606],"yaml":true,"extradata":"MT"},{"content":"The node type. For <xref href=\"System.Xml.Linq.XDocumentType\"></xref> objects, this value is <xref href=\"System.Xml.XmlNodeType.DocumentType\"></xref>.","nodes":[{"pos":[0,150],"content":"The node type. For <xref href=\"System.Xml.Linq.XDocumentType\"></xref> objects, this value is <xref href=\"System.Xml.XmlNodeType.DocumentType\"></xref>.","nodes":[{"content":"The node type.","pos":[0,14]},{"content":"For <ph id=\"ph1\">&lt;xref href=\"System.Xml.Linq.XDocumentType\"&gt;&lt;/xref&gt;</ph> objects, this value is <ph id=\"ph2\">&lt;xref href=\"System.Xml.XmlNodeType.DocumentType\"&gt;&lt;/xref&gt;</ph>.","pos":[15,150],"source":" For <xref href=\"System.Xml.Linq.XDocumentType\"></xref> objects, this value is <xref href=\"System.Xml.XmlNodeType.DocumentType\"></xref>."}]}],"pos":[27124,27275],"yaml":true},{"content":"Gets or sets the public identifier for this Document Type Definition (DTD).","nodes":[{"pos":[0,75],"content":"Gets or sets the public identifier for this Document Type Definition (DTD).","nodes":[{"content":"Gets or sets the public identifier for this Document Type Definition (DTD).","pos":[0,75]}]}],"pos":[28769,28845],"yaml":true},{"content":"If an XML document uses an external public DTD, this property will contain the public identifier of the external DTD.","nodes":[{"pos":[0,117],"content":"If an XML document uses an external public DTD, this property will contain the public identifier of the external DTD.","nodes":[{"content":"If an XML document uses an external public DTD, this property will contain the public identifier of the external DTD.","pos":[0,117]}]}],"pos":[28856,28974],"yaml":true,"extradata":"MT"},{"content":"A <xref href=\"System.String\"></xref> that contains the public identifier for this Document Type Definition (DTD).","nodes":[{"pos":[0,113],"content":"A <ph id=\"ph1\">&lt;xref href=\"System.String\"&gt;&lt;/xref&gt;</ph> that contains the public identifier for this Document Type Definition (DTD).","source":"A <xref href=\"System.String\"></xref> that contains the public identifier for this Document Type Definition (DTD)."}],"pos":[29091,29205],"yaml":true},{"content":"Gets or sets the system identifier for this Document Type Definition (DTD).","nodes":[{"pos":[0,75],"content":"Gets or sets the system identifier for this Document Type Definition (DTD).","nodes":[{"content":"Gets or sets the system identifier for this Document Type Definition (DTD).","pos":[0,75]}]}],"pos":[30699,30775],"yaml":true},{"content":"If an XML document uses an external private DTD, this property will contain the private identifier of the external DTD.","nodes":[{"pos":[0,119],"content":"If an XML document uses an external private DTD, this property will contain the private identifier of the external DTD.","nodes":[{"content":"If an XML document uses an external private DTD, this property will contain the private identifier of the external DTD.","pos":[0,119]}]}],"pos":[30786,30906],"yaml":true,"extradata":"MT"},{"content":"A <xref href=\"System.String\"></xref> that contains the system identifier for this Document Type Definition (DTD).","nodes":[{"pos":[0,113],"content":"A <ph id=\"ph1\">&lt;xref href=\"System.String\"&gt;&lt;/xref&gt;</ph> that contains the system identifier for this Document Type Definition (DTD).","source":"A <xref href=\"System.String\"></xref> that contains the system identifier for this Document Type Definition (DTD)."}],"pos":[34401,34515],"yaml":true},{"content":"Write this <xref href=\"System.Xml.Linq.XDocumentType\"></xref> to an <xref href=\"System.Xml.XmlWriter\"></xref>.","nodes":[{"pos":[0,110],"content":"Write this <ph id=\"ph1\">&lt;xref href=\"System.Xml.Linq.XDocumentType\"&gt;&lt;/xref&gt;</ph> to an <ph id=\"ph2\">&lt;xref href=\"System.Xml.XmlWriter\"&gt;&lt;/xref&gt;</ph>.","source":"Write this <xref href=\"System.Xml.Linq.XDocumentType\"></xref> to an <xref href=\"System.Xml.XmlWriter\"></xref>."}],"pos":[36100,36211],"yaml":true},{"content":"This method is primarily used internally by the methods that write an XML tree to an <xref:System.Xml.XmlWriter>.","nodes":[{"pos":[0,113],"content":"This method is primarily used internally by the methods that write an XML tree to an <xref:System.Xml.XmlWriter>.","nodes":[{"content":"This method is primarily used internally by the methods that write an XML tree to an <ph id=\"ph1\">&lt;xref:System.Xml.XmlWriter&gt;</ph>.","pos":[0,113],"source":"This method is primarily used internally by the methods that write an XML tree to an <xref:System.Xml.XmlWriter>."}]}],"pos":[36222,36336],"yaml":true,"extradata":"MT"},{"content":"An <xref href=\"System.Xml.XmlWriter\"></xref> into which this method will write.","nodes":[{"pos":[0,79],"content":"An <ph id=\"ph1\">&lt;xref href=\"System.Xml.XmlWriter\"&gt;&lt;/xref&gt;</ph> into which this method will write.","source":"An <xref href=\"System.Xml.XmlWriter\"></xref> into which this method will write."}],"pos":[36504,36584],"yaml":true}],"content":"### YamlMime:ManagedReference\nitems:\n- uid: System.Xml.Linq.XDocumentType\n  commentId: T:System.Xml.Linq.XDocumentType\n  id: XDocumentType\n  children:\n  - System.Xml.Linq.XDocumentType.#ctor(System.Xml.Linq.XDocumentType)\n  - System.Xml.Linq.XDocumentType.#ctor(System.String,System.String,System.String,System.String)\n  - System.Xml.Linq.XDocumentType.InternalSubset\n  - System.Xml.Linq.XDocumentType.Name\n  - System.Xml.Linq.XDocumentType.NodeType\n  - System.Xml.Linq.XDocumentType.PublicId\n  - System.Xml.Linq.XDocumentType.SystemId\n  - System.Xml.Linq.XDocumentType.WriteTo(System.Xml.XmlWriter)\n  - System.Xml.Linq.XDocumentType.WriteToAsync(System.Xml.XmlWriter,System.Threading.CancellationToken)\n  langs:\n  - csharp\n  name: XDocumentType\n  nameWithType: XDocumentType\n  fullName: System.Xml.Linq.XDocumentType\n  type: Class\n  assemblies:\n  - System.Xml.XDocument\n  - System.Xml.Linq\n  - netstandard\n  namespace: System.Xml.Linq\n  summary: Represents an XML Document Type Definition (DTD).\n  remarks: \"Data Type Definitions (DTD) in XML are a way to do the following:  \\n  \\n-   Validate XML trees to a limited extent.  \\n  \\n-   Expand entities, which is a form of text replacement.  \\n  \\n-   Supply default attributes.  \\n  \\n This class represents the XML concept of a DTD.  \\n  \\n DTD support in [!INCLUDE[sqltecxlinq](~/includes/sqltecxlinq-md.md)] is limited.  \\n  \\n [!INCLUDE[sqltecxlinq](~/includes/sqltecxlinq-md.md)] will expand internal entities by default, but it will not resolve external entity references unless an <xref:System.Xml.XmlReader> with an associated <xref:System.Xml.XmlResolver> is used to load the XML tree.  \\n  \\n [!INCLUDE[sqltecxlinq](~/includes/sqltecxlinq-md.md)] will not validate a document against a DTD, but you can use a validating <xref:System.Xml.XmlReader> to perform DTD validation if necessary.  \\n  \\n To validate an [!INCLUDE[sqltecxlinq](~/includes/sqltecxlinq-md.md)] tree against an XML schema, use the <xref:System.Xml.Schema.Extensions.Validate%2A> method.  \\n  \\n When a document contains entity references that are defined in a DTD, the references are expanded upon creation of the XML tree. However, when you serialize or save the XML tree, the content of the expanded entities is preserved; the entity references are not.  \\n  \\n Default attributes from the DTD will be materialized as regular attributes in the XML tree. After a default attribute from the DTD is materialized, there is no way to determine that the attribute was a default attribute from the DTD.  \\n  \\n You can populate an XML tree with an XML document that contains an internal DTD. The XML tree will then contain a <xref:System.Xml.Linq.XDocument.DocumentType%2A> node. When you serialize or save the tree, the internal DTD will also be saved as part of the document.\"\n  syntax:\n    content: 'public class XDocumentType : System.Xml.Linq.XNode'\n  inheritance:\n  - System.Object\n  - System.Xml.Linq.XObject\n  - System.Xml.Linq.XNode\n  implements: []\n  inheritedMembers:\n  - System.Object.Equals(System.Object)\n  - System.Object.Equals(System.Object,System.Object)\n  - System.Object.GetHashCode\n  - System.Object.GetType\n  - System.Object.MemberwiseClone\n  - System.Object.ReferenceEquals(System.Object,System.Object)\n  - System.Xml.Linq.XNode.AddAfterSelf(System.Object)\n  - System.Xml.Linq.XNode.AddAfterSelf(System.Object[])\n  - System.Xml.Linq.XNode.AddBeforeSelf(System.Object)\n  - System.Xml.Linq.XNode.AddBeforeSelf(System.Object[])\n  - System.Xml.Linq.XNode.Ancestors\n  - System.Xml.Linq.XNode.Ancestors(System.Xml.Linq.XName)\n  - System.Xml.Linq.XNode.CompareDocumentOrder(System.Xml.Linq.XNode,System.Xml.Linq.XNode)\n  - System.Xml.Linq.XNode.CreateReader\n  - System.Xml.Linq.XNode.CreateReader(System.Xml.Linq.ReaderOptions)\n  - System.Xml.Linq.XNode.DeepEquals(System.Xml.Linq.XNode,System.Xml.Linq.XNode)\n  - System.Xml.Linq.XNode.DocumentOrderComparer\n  - System.Xml.Linq.XNode.ElementsAfterSelf\n  - System.Xml.Linq.XNode.ElementsAfterSelf(System.Xml.Linq.XName)\n  - System.Xml.Linq.XNode.ElementsBeforeSelf\n  - System.Xml.Linq.XNode.ElementsBeforeSelf(System.Xml.Linq.XName)\n  - System.Xml.Linq.XNode.EqualityComparer\n  - System.Xml.Linq.XNode.IsAfter(System.Xml.Linq.XNode)\n  - System.Xml.Linq.XNode.IsBefore(System.Xml.Linq.XNode)\n  - System.Xml.Linq.XNode.NextNode\n  - System.Xml.Linq.XNode.NodesAfterSelf\n  - System.Xml.Linq.XNode.NodesBeforeSelf\n  - System.Xml.Linq.XNode.PreviousNode\n  - System.Xml.Linq.XNode.ReadFrom(System.Xml.XmlReader)\n  - System.Xml.Linq.XNode.ReadFromAsync(System.Xml.XmlReader,System.Threading.CancellationToken)\n  - System.Xml.Linq.XNode.Remove\n  - System.Xml.Linq.XNode.ReplaceWith(System.Object)\n  - System.Xml.Linq.XNode.ReplaceWith(System.Object[])\n  - System.Xml.Linq.XNode.ToString\n  - System.Xml.Linq.XNode.ToString(System.Xml.Linq.SaveOptions)\n  - System.Xml.Linq.XObject.AddAnnotation(System.Object)\n  - System.Xml.Linq.XObject.Annotation(System.Type)\n  - System.Xml.Linq.XObject.Annotation``1\n  - System.Xml.Linq.XObject.Annotations(System.Type)\n  - System.Xml.Linq.XObject.Annotations``1\n  - System.Xml.Linq.XObject.BaseUri\n  - System.Xml.Linq.XObject.Changed\n  - System.Xml.Linq.XObject.Changing\n  - System.Xml.Linq.XObject.Document\n  - System.Xml.Linq.XObject.Parent\n  - System.Xml.Linq.XObject.RemoveAnnotations(System.Type)\n  - System.Xml.Linq.XObject.RemoveAnnotations``1\n  - System.Xml.Linq.XObject.System#Xml#IXmlLineInfo#HasLineInfo\n  - System.Xml.Linq.XObject.System#Xml#IXmlLineInfo#LineNumber\n  - System.Xml.Linq.XObject.System#Xml#IXmlLineInfo#LinePosition\n  extensionMethods:\n  - System.Xml.XPath.Extensions.CreateNavigator(System.Xml.Linq.XNode)\n  - System.Xml.XPath.Extensions.CreateNavigator(System.Xml.Linq.XNode,System.Xml.XmlNameTable)\n  - System.Xml.XPath.Extensions.XPathEvaluate(System.Xml.Linq.XNode,System.String)\n  - System.Xml.XPath.Extensions.XPathEvaluate(System.Xml.Linq.XNode,System.String,System.Xml.IXmlNamespaceResolver)\n  - System.Xml.XPath.Extensions.XPathSelectElement(System.Xml.Linq.XNode,System.String)\n  - System.Xml.XPath.Extensions.XPathSelectElement(System.Xml.Linq.XNode,System.String,System.Xml.IXmlNamespaceResolver)\n  - System.Xml.XPath.Extensions.XPathSelectElements(System.Xml.Linq.XNode,System.String)\n  - System.Xml.XPath.Extensions.XPathSelectElements(System.Xml.Linq.XNode,System.String,System.Xml.IXmlNamespaceResolver)\n  - System.Xml.XPath.XDocumentExtensions.ToXPathNavigable(System.Xml.Linq.XNode)\n  version:\n  - netcore-1.0\n  - netcore-1.1\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - netstandard-1.0\n  - netstandard-1.1\n  - netstandard-1.2\n  - netstandard-1.3\n  - netstandard-1.4\n  - netstandard-1.6\n  - netstandard-2.0\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  monikers:\n  - netcore-1.0\n  - netcore-1.1\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - netstandard-1.0\n  - netstandard-1.1\n  - netstandard-1.2\n  - netstandard-1.3\n  - netstandard-1.4\n  - netstandard-1.6\n  - netstandard-2.0\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Xml.Linq/XDocumentType.xml\n  ms.technology:\n  - dotnet-standard\n  author: mairaw\n  ms.author: mairaw\n  manager: wpickett\n- uid: System.Xml.Linq.XDocumentType.#ctor(System.Xml.Linq.XDocumentType)\n  commentId: M:System.Xml.Linq.XDocumentType.#ctor(System.Xml.Linq.XDocumentType)\n  id: '#ctor(System.Xml.Linq.XDocumentType)'\n  parent: System.Xml.Linq.XDocumentType\n  langs:\n  - csharp\n  name: XDocumentType(XDocumentType)\n  nameWithType: XDocumentType.XDocumentType(XDocumentType)\n  fullName: XDocumentType.XDocumentType(XDocumentType)\n  type: Constructor\n  assemblies:\n  - System.Xml.XDocument\n  - System.Xml.Linq\n  - netstandard\n  namespace: System.Xml.Linq\n  summary: Initializes an instance of the <xref href=\"System.Xml.Linq.XDocumentType\"></xref> class from another <xref href=\"System.Xml.Linq.XDocumentType\"></xref> object.\n  remarks: This constructor is primarily used internally when making a deep copy of an XML tree.\n  syntax:\n    content: public XDocumentType (System.Xml.Linq.XDocumentType other);\n    parameters:\n    - id: other\n      type: System.Xml.Linq.XDocumentType\n      description: An <xref href=\"System.Xml.Linq.XDocumentType\"></xref> object to copy from.\n  overload: System.Xml.Linq.XDocumentType.#ctor*\n  exceptions: []\n  version:\n  - netcore-1.0\n  - netcore-1.1\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - netstandard-1.0\n  - netstandard-1.1\n  - netstandard-1.2\n  - netstandard-1.3\n  - netstandard-1.4\n  - netstandard-1.6\n  - netstandard-2.0\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  monikers:\n  - netcore-1.0\n  - netcore-1.1\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - netstandard-1.0\n  - netstandard-1.1\n  - netstandard-1.2\n  - netstandard-1.3\n  - netstandard-1.4\n  - netstandard-1.6\n  - netstandard-2.0\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Xml.Linq/XDocumentType.xml\n  ms.technology:\n  - dotnet-standard\n  author: mairaw\n  ms.author: mairaw\n  manager: wpickett\n- uid: System.Xml.Linq.XDocumentType.#ctor(System.String,System.String,System.String,System.String)\n  commentId: M:System.Xml.Linq.XDocumentType.#ctor(System.String,System.String,System.String,System.String)\n  id: '#ctor(System.String,System.String,System.String,System.String)'\n  parent: System.Xml.Linq.XDocumentType\n  langs:\n  - csharp\n  name: XDocumentType(String, String, String, String)\n  nameWithType: XDocumentType.XDocumentType(String, String, String, String)\n  fullName: XDocumentType.XDocumentType(String, String, String, String)\n  type: Constructor\n  assemblies:\n  - System.Xml.XDocument\n  - System.Xml.Linq\n  - netstandard\n  namespace: System.Xml.Linq\n  summary: Initializes an instance of the <xref href=\"System.Xml.Linq.XDocumentType\"></xref> class.\n  remarks: ''\n  example:\n  - \"The following example creates a document with an internal DTD. When it creates the <xref:System.Xml.Linq.XDocumentType> object, it specifies the qualified name of the DTD (Pubs), and a string that contains the internal subset. Because the document does not use a public or private external DTD, the `publicId` and `systemId` are set to `null`.  \\n  \\n```csharp  \\n  \\n                string internalSubset = @\\\"<!ELEMENT Pubs (Book+)>  \\n<!ELEMENT Book (Title, Author)>  \\n<!ELEMENT Title (#PCDATA)>  \\n<!ELEMENT Author (#PCDATA)>\\\";  \\n  \\nstring target = \\\"xml-stylesheet\\\";  \\nstring data = \\\"href=\\\\\\\"mystyle.css\\\\\\\" title=\\\\\\\"Compact\\\\\\\" type=\\\\\\\"text/css\\\\\\\"\\\";  \\n  \\nXDocument doc = new XDocument(  \\n    new XComment(\\\"This is a comment.\\\"),  \\n    new XProcessingInstruction(target, data),  \\n    new XDocumentType(\\\"Pubs\\\", null, null, internalSubset),  \\n    new XElement(\\\"Pubs\\\",   \\n        new XElement(\\\"Book\\\",  \\n            new XElement(\\\"Title\\\", \\\"Artifacts of Roman Civilization\\\"),  \\n            new XElement(\\\"Author\\\", \\\"Moreno, Jordao\\\")  \\n        ),  \\n        new XElement(\\\"Book\\\",  \\n            new XElement(\\\"Title\\\", \\\"Midieval Tools and Implements\\\"),  \\n            new XElement(\\\"Author\\\", \\\"Gazit, Inbar\\\")  \\n        )  \\n    ),  \\n    new XComment(\\\"This is another comment.\\\")  \\n);  \\ndoc.Declaration = new XDeclaration(\\\"1.0\\\", \\\"utf-8\\\", \\\"true\\\");  \\n  \\nConsole.WriteLine(doc);  \\n```  \\n  \\n```vb  \\n  \\n                Dim internalSubset = _  \\n    \\\"<!ELEMENT Pubs (Book+)>\\\" & Environment.NewLine & _  \\n    \\\"<!ELEMENT Book (Title, Author)>\\\" & Environment.NewLine & _  \\n    \\\"<!ELEMENT Title (#PCDATA)>\\\" & Environment.NewLine & _  \\n    \\\"<!ELEMENT Author (#PCDATA)>\\\"  \\n  \\nDim doc As XDocument = _  \\n    <?xml version=\\\"1.0\\\" encoding=\\\"utf-8\\\" standalone=\\\"yes\\\"?>  \\n    <!--This is a comment.-->  \\n    <?xml-stylesheet href=\\\"mystyle.css\\\" title=\\\"Compact\\\" type=\\\"text/css\\\"?>  \\n    <Pubs>  \\n        <Book>  \\n            <Title>Artifacts of Roman Civilization</Title>  \\n            <Author>Moreno, Jordao</Author>  \\n        </Book>  \\n        <Book>  \\n            <Title>Midieval Tools and Implements</Title>  \\n            <Author>Gazit, Inbar</Author>  \\n        </Book>  \\n    </Pubs>  \\n    <!--This is another comment.-->  \\n  \\ndoc.FirstNode.NextNode.AddAfterSelf(new XDocumentType(\\\"Pubs\\\", Nothing, Nothing, internalSubset))  \\n  \\nConsole.WriteLine(doc)  \\n```  \\n  \\n This example produces the following output:  \\n  \\n```xml  \\n  \\n                <!--This is a comment.-->  \\n<?xml-stylesheet href=\\\"mystyle.css\\\" title=\\\"Compact\\\" type=\\\"text/css\\\"?>  \\n<!DOCTYPE Pubs [<!ELEMENT Pubs (Book+)>  \\n<!ELEMENT Book (Title, Author)>  \\n<!ELEMENT Title (#PCDATA)>  \\n<!ELEMENT Author (#PCDATA)>]>  \\n<Pubs>  \\n  <Book>  \\n    <Title>Artifacts of Roman Civilization</Title>  \\n    <Author>Moreno, Jordao</Author>  \\n  </Book>  \\n  <Book>  \\n    <Title>Midieval Tools and Implements</Title>  \\n    <Author>Gazit, Inbar</Author>  \\n  </Book>  \\n</Pubs>  \\n<!--This is another comment.-->  \\n```\"\n  syntax:\n    content: public XDocumentType (string name, string publicId, string systemId, string internalSubset);\n    parameters:\n    - id: name\n      type: System.String\n      description: A <xref href=\"System.String\"></xref> that contains the qualified name of the DTD, which is the same as the qualified name of the root element of the XML document.\n    - id: publicId\n      type: System.String\n      description: A <xref href=\"System.String\"></xref> that contains the public identifier of an external public DTD.\n    - id: systemId\n      type: System.String\n      description: A <xref href=\"System.String\"></xref> that contains the system identifier of an external private DTD.\n    - id: internalSubset\n      type: System.String\n      description: A <xref href=\"System.String\"></xref> that contains the internal subset for an internal DTD.\n  overload: System.Xml.Linq.XDocumentType.#ctor*\n  exceptions: []\n  version:\n  - netcore-1.0\n  - netcore-1.1\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - netstandard-1.0\n  - netstandard-1.1\n  - netstandard-1.2\n  - netstandard-1.3\n  - netstandard-1.4\n  - netstandard-1.6\n  - netstandard-2.0\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  monikers:\n  - netcore-1.0\n  - netcore-1.1\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - netstandard-1.0\n  - netstandard-1.1\n  - netstandard-1.2\n  - netstandard-1.3\n  - netstandard-1.4\n  - netstandard-1.6\n  - netstandard-2.0\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Xml.Linq/XDocumentType.xml\n  ms.technology:\n  - dotnet-standard\n  author: mairaw\n  ms.author: mairaw\n  manager: wpickett\n- uid: System.Xml.Linq.XDocumentType.InternalSubset\n  commentId: P:System.Xml.Linq.XDocumentType.InternalSubset\n  id: InternalSubset\n  parent: System.Xml.Linq.XDocumentType\n  langs:\n  - csharp\n  name: InternalSubset\n  nameWithType: XDocumentType.InternalSubset\n  fullName: XDocumentType.InternalSubset\n  type: Property\n  assemblies:\n  - System.Xml.XDocument\n  - System.Xml.Linq\n  - netstandard\n  namespace: System.Xml.Linq\n  summary: Gets or sets the internal subset for this Document Type Definition (DTD).\n  remarks: ''\n  example:\n  - \"The following example creates a document with a DTD that contains an internal subset.  \\n  \\n```csharp  \\n  \\n                string internalSubset = @\\\"<!ELEMENT Pubs (Book+)>  \\n<!ELEMENT Book (Title, Author)>  \\n<!ELEMENT Title (#PCDATA)>  \\n<!ELEMENT Author (#PCDATA)>\\\";  \\n  \\nstring target = \\\"xml-stylesheet\\\";  \\nstring data = \\\"href=\\\\\\\"mystyle.css\\\\\\\" title=\\\\\\\"Compact\\\\\\\" type=\\\\\\\"text/css\\\\\\\"\\\";  \\n  \\nXDocument doc = new XDocument(  \\n    new XComment(\\\"This is a comment.\\\"),  \\n    new XProcessingInstruction(target, data),  \\n    new XDocumentType(\\\"Pubs\\\", null, null, internalSubset),  \\n    new XElement(\\\"Pubs\\\",   \\n        new XElement(\\\"Book\\\",  \\n            new XElement(\\\"Title\\\", \\\"Artifacts of Roman Civilization\\\"),  \\n            new XElement(\\\"Author\\\", \\\"Moreno, Jordao\\\")  \\n        ),  \\n        new XElement(\\\"Book\\\",  \\n            new XElement(\\\"Title\\\", \\\"Midieval Tools and Implements\\\"),  \\n            new XElement(\\\"Author\\\", \\\"Gazit, Inbar\\\")  \\n        )  \\n    ),  \\n    new XComment(\\\"This is another comment.\\\")  \\n);  \\ndoc.Declaration = new XDeclaration(\\\"1.0\\\", \\\"utf-8\\\", \\\"true\\\");  \\n  \\nConsole.WriteLine(doc.DocumentType.InternalSubset);  \\n```  \\n  \\n```vb  \\n  \\n                Dim internalSubset = _  \\n    \\\"<!ELEMENT Pubs (Book+)>\\\" & Environment.NewLine & _  \\n    \\\"<!ELEMENT Book (Title, Author)>\\\" & Environment.NewLine & _  \\n    \\\"<!ELEMENT Title (#PCDATA)>\\\" & Environment.NewLine & _  \\n    \\\"<!ELEMENT Author (#PCDATA)>\\\"  \\n  \\nDim doc As XDocument = _  \\n    <?xml version=\\\"1.0\\\" encoding=\\\"utf-8\\\" standalone=\\\"yes\\\"?>  \\n    <!--This is a comment.-->  \\n    <?xml-stylesheet href='mystyle.css' title='Compact' type='text/css'?>  \\n    <Pubs>  \\n        <Book>  \\n            <Title>Artifacts of Roman Civilization</Title>  \\n            <Author>Moreno, Jordao</Author>  \\n        </Book>  \\n        <Book>  \\n            <Title>Midieval Tools and Implements</Title>  \\n            <Author>Gazit, Inbar</Author>  \\n        </Book>  \\n    </Pubs>  \\n    <!--This is another comment.-->  \\n  \\ndoc.FirstNode.AddAfterSelf(new XDocumentType(\\\"Pubs\\\", Nothing, Nothing, internalSubset))  \\n  \\nConsole.WriteLine(doc.DocumentType.InternalSubset)  \\n```  \\n  \\n This example produces the following output:  \\n  \\n```  \\n<!ELEMENT Pubs (Book+)>  \\n<!ELEMENT Book (Title, Author)>  \\n<!ELEMENT Title (#PCDATA)>  \\n<!ELEMENT Author (#PCDATA)>  \\n```\"\n  syntax:\n    content: public string InternalSubset { get; set; }\n    return:\n      type: System.String\n      description: A <xref href=\"System.String\"></xref> that contains the internal subset for this Document Type Definition (DTD).\n  overload: System.Xml.Linq.XDocumentType.InternalSubset*\n  exceptions: []\n  version:\n  - netcore-1.0\n  - netcore-1.1\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - netstandard-1.0\n  - netstandard-1.1\n  - netstandard-1.2\n  - netstandard-1.3\n  - netstandard-1.4\n  - netstandard-1.6\n  - netstandard-2.0\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  monikers:\n  - netcore-1.0\n  - netcore-1.1\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - netstandard-1.0\n  - netstandard-1.1\n  - netstandard-1.2\n  - netstandard-1.3\n  - netstandard-1.4\n  - netstandard-1.6\n  - netstandard-2.0\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Xml.Linq/XDocumentType.xml\n  ms.technology:\n  - dotnet-standard\n  author: mairaw\n  ms.author: mairaw\n  manager: wpickett\n- uid: System.Xml.Linq.XDocumentType.Name\n  commentId: P:System.Xml.Linq.XDocumentType.Name\n  id: Name\n  parent: System.Xml.Linq.XDocumentType\n  langs:\n  - csharp\n  name: Name\n  nameWithType: XDocumentType.Name\n  fullName: XDocumentType.Name\n  type: Property\n  assemblies:\n  - System.Xml.XDocument\n  - System.Xml.Linq\n  - netstandard\n  namespace: System.Xml.Linq\n  summary: Gets or sets the name for this Document Type Definition (DTD).\n  remarks: ''\n  example:\n  - \"The following example creates an XML document that contains a DTD. After creating the document, it retrieves the qualified name of the DTD using this property.  \\n  \\n```csharp  \\n  \\n                string internalSubset = @\\\"<!ELEMENT Pubs (Book+)>  \\n<!ELEMENT Book (Title, Author)>  \\n<!ELEMENT Title (#PCDATA)>  \\n<!ELEMENT Author (#PCDATA)>\\\";  \\n  \\nstring target = \\\"xml-stylesheet\\\";  \\nstring data = \\\"href=\\\\\\\"mystyle.css\\\\\\\" title=\\\\\\\"Compact\\\\\\\" type=\\\\\\\"text/css\\\\\\\"\\\";  \\n  \\nXDocument doc = new XDocument(  \\n    new XComment(\\\"This is a comment.\\\"),  \\n    new XProcessingInstruction(target, data),  \\n    new XDocumentType(\\\"Pubs\\\", null, null, internalSubset),  \\n    new XElement(\\\"Pubs\\\",   \\n        new XElement(\\\"Book\\\",  \\n            new XElement(\\\"Title\\\", \\\"Artifacts of Roman Civilization\\\"),  \\n            new XElement(\\\"Author\\\", \\\"Moreno, Jordao\\\")  \\n        ),  \\n        new XElement(\\\"Book\\\",  \\n            new XElement(\\\"Title\\\", \\\"Midieval Tools and Implements\\\"),  \\n            new XElement(\\\"Author\\\", \\\"Gazit, Inbar\\\")  \\n        )  \\n    ),  \\n    new XComment(\\\"This is another comment.\\\")  \\n);  \\ndoc.Declaration = new XDeclaration(\\\"1.0\\\", \\\"utf-8\\\", \\\"true\\\");  \\n  \\nConsole.WriteLine(doc.DocumentType.Name);  \\n```  \\n  \\n```vb  \\n  \\n                Dim internalSubset = _  \\n    \\\"<!ELEMENT Pubs (Book+)>\\\" & Environment.NewLine & _  \\n    \\\"<!ELEMENT Book (Title, Author)>\\\" & Environment.NewLine & _  \\n    \\\"<!ELEMENT Title (#PCDATA)>\\\" & Environment.NewLine & _  \\n    \\\"<!ELEMENT Author (#PCDATA)>\\\"  \\n  \\nDim doc As XDocument = _  \\n    <?xml version=\\\"1.0\\\" encoding=\\\"utf-8\\\" standalone=\\\"yes\\\"?>  \\n    <!--This is a comment.-->  \\n    <?xml-stylesheet href='mystyle.css' title='Compact' type='text/css'?>  \\n    <Pubs>  \\n        <Book>  \\n            <Title>Artifacts of Roman Civilization</Title>  \\n            <Author>Moreno, Jordao</Author>  \\n            </Book>  \\n        <Book>  \\n            <Title>Midieval Tools and Implements</Title>  \\n            <Author>Gazit, Inbar</Author>  \\n        </Book>  \\n    </Pubs>  \\n    <!--This is another comment.-->  \\n  \\ndoc.FirstNode.AddAfterSelf(new XDocumentType(\\\"Pubs\\\", Nothing, Nothing, internalSubset))  \\n  \\nConsole.WriteLine(doc.DocumentType.Name)  \\n```  \\n  \\n This example produces the following output:  \\n  \\n```  \\nPubs  \\n```\"\n  syntax:\n    content: public string Name { get; set; }\n    return:\n      type: System.String\n      description: A <xref href=\"System.String\"></xref> that contains the name for this Document Type Definition (DTD).\n  overload: System.Xml.Linq.XDocumentType.Name*\n  exceptions: []\n  version:\n  - netcore-1.0\n  - netcore-1.1\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - netstandard-1.0\n  - netstandard-1.1\n  - netstandard-1.2\n  - netstandard-1.3\n  - netstandard-1.4\n  - netstandard-1.6\n  - netstandard-2.0\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  monikers:\n  - netcore-1.0\n  - netcore-1.1\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - netstandard-1.0\n  - netstandard-1.1\n  - netstandard-1.2\n  - netstandard-1.3\n  - netstandard-1.4\n  - netstandard-1.6\n  - netstandard-2.0\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Xml.Linq/XDocumentType.xml\n  ms.technology:\n  - dotnet-standard\n  author: mairaw\n  ms.author: mairaw\n  manager: wpickett\n- uid: System.Xml.Linq.XDocumentType.NodeType\n  commentId: P:System.Xml.Linq.XDocumentType.NodeType\n  id: NodeType\n  parent: System.Xml.Linq.XDocumentType\n  langs:\n  - csharp\n  name: NodeType\n  nameWithType: XDocumentType.NodeType\n  fullName: XDocumentType.NodeType\n  type: Property\n  assemblies:\n  - System.Xml.XDocument\n  - System.Xml.Linq\n  - netstandard\n  namespace: System.Xml.Linq\n  summary: Gets the node type for this node.\n  remarks: Because all classes that derive from <xref:System.Xml.Linq.XObject> contain a <xref:System.Xml.Linq.XObject.NodeType%2A> property, you can write code that operates on collections of concrete subclass of <xref:System.Xml.Linq.XObject>. Your code can then test for the node type of each node in the collection.\n  example:\n  - \"The following example shows the use of this property to retrieve the node type for an <xref:System.Xml.Linq.XDocumentType> object.  \\n  \\n```csharp  \\n  \\n                string internalSubset = @\\\"<!ELEMENT Pubs (Book+)>  \\n<!ELEMENT Book (Title, Author)>  \\n<!ELEMENT Title (#PCDATA)>  \\n<!ELEMENT Author (#PCDATA)>\\\";  \\n  \\nstring target = \\\"xml-stylesheet\\\";  \\nstring data = \\\"href=\\\\\\\"mystyle.css\\\\\\\" title=\\\\\\\"Compact\\\\\\\" type=\\\\\\\"text/css\\\\\\\"\\\";  \\n  \\nXDocument doc = new XDocument(  \\n    new XComment(\\\"This is a comment.\\\"),  \\n    new XProcessingInstruction(target, data),  \\n    new XDocumentType(\\\"Pubs\\\", null, null, internalSubset),  \\n    new XElement(\\\"Pubs\\\",   \\n        new XElement(\\\"Book\\\",  \\n            new XElement(\\\"Title\\\", \\\"Artifacts of Roman Civilization\\\"),  \\n            new XElement(\\\"Author\\\", \\\"Moreno, Jordao\\\")  \\n        ),  \\n        new XElement(\\\"Book\\\",  \\n            new XElement(\\\"Title\\\", \\\"Midieval Tools and Implements\\\"),  \\n            new XElement(\\\"Author\\\", \\\"Gazit, Inbar\\\")  \\n        )  \\n    ),  \\n    new XComment(\\\"This is another comment.\\\")  \\n);  \\ndoc.Declaration = new XDeclaration(\\\"1.0\\\", \\\"utf-8\\\", \\\"true\\\");  \\n  \\nConsole.WriteLine(doc.DocumentType.NodeType);  \\n```  \\n  \\n```vb  \\n  \\n                Dim internalSubset = _  \\n    \\\"<!ELEMENT Pubs (Book+)>\\\" & Environment.NewLine & _  \\n    \\\"<!ELEMENT Book (Title, Author)>\\\" & Environment.NewLine & _  \\n    \\\"<!ELEMENT Title (#PCDATA)>\\\" & Environment.NewLine & _  \\n    \\\"<!ELEMENT Author (#PCDATA)>\\\"  \\n  \\nDim doc As XDocument = _   \\n    <?xml version=\\\"1.0\\\" encoding=\\\"utf-8\\\" standalone=\\\"yes\\\"?>  \\n    <!--This is a comment.-->  \\n    <?xml-stylesheet href='mystyle.css' title='Compact' type='text/css'?>  \\n    <Pubs>  \\n        <Book>  \\n            <Title>Artifacts of Roman Civilization</Title>  \\n            <Author>Moreno, Jordao</Author>  \\n        </Book>  \\n        <Book>  \\n            <Title>Midieval Tools and Implements</Title>  \\n            <Author>Gazit, Inbar</Author>  \\n        </Book>  \\n    </Pubs>  \\n    <!--This is another comment.-->  \\n  \\ndoc.FirstNode.AddAfterSelf(new XDocumentType(\\\"Pubs\\\", Nothing, Nothing, internalSubset))  \\n  \\nConsole.WriteLine(doc.DocumentType.NodeType.ToString())  \\n```  \\n  \\n This example produces the following output:  \\n  \\n```  \\nDocumentType  \\n```\"\n  syntax:\n    content: public override System.Xml.XmlNodeType NodeType { get; }\n    return:\n      type: System.Xml.XmlNodeType\n      description: The node type. For <xref href=\"System.Xml.Linq.XDocumentType\"></xref> objects, this value is <xref href=\"System.Xml.XmlNodeType.DocumentType\"></xref>.\n  overload: System.Xml.Linq.XDocumentType.NodeType*\n  exceptions: []\n  version:\n  - netcore-1.0\n  - netcore-1.1\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - netstandard-1.0\n  - netstandard-1.1\n  - netstandard-1.2\n  - netstandard-1.3\n  - netstandard-1.4\n  - netstandard-1.6\n  - netstandard-2.0\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  monikers:\n  - netcore-1.0\n  - netcore-1.1\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - netstandard-1.0\n  - netstandard-1.1\n  - netstandard-1.2\n  - netstandard-1.3\n  - netstandard-1.4\n  - netstandard-1.6\n  - netstandard-2.0\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Xml.Linq/XDocumentType.xml\n  ms.technology:\n  - dotnet-standard\n  author: mairaw\n  ms.author: mairaw\n  manager: wpickett\n- uid: System.Xml.Linq.XDocumentType.PublicId\n  commentId: P:System.Xml.Linq.XDocumentType.PublicId\n  id: PublicId\n  parent: System.Xml.Linq.XDocumentType\n  langs:\n  - csharp\n  name: PublicId\n  nameWithType: XDocumentType.PublicId\n  fullName: XDocumentType.PublicId\n  type: Property\n  assemblies:\n  - System.Xml.XDocument\n  - System.Xml.Linq\n  - netstandard\n  namespace: System.Xml.Linq\n  summary: Gets or sets the public identifier for this Document Type Definition (DTD).\n  remarks: If an XML document uses an external public DTD, this property will contain the public identifier of the external DTD.\n  syntax:\n    content: public string PublicId { get; set; }\n    return:\n      type: System.String\n      description: A <xref href=\"System.String\"></xref> that contains the public identifier for this Document Type Definition (DTD).\n  overload: System.Xml.Linq.XDocumentType.PublicId*\n  exceptions: []\n  version:\n  - netcore-1.0\n  - netcore-1.1\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - netstandard-1.0\n  - netstandard-1.1\n  - netstandard-1.2\n  - netstandard-1.3\n  - netstandard-1.4\n  - netstandard-1.6\n  - netstandard-2.0\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  monikers:\n  - netcore-1.0\n  - netcore-1.1\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - netstandard-1.0\n  - netstandard-1.1\n  - netstandard-1.2\n  - netstandard-1.3\n  - netstandard-1.4\n  - netstandard-1.6\n  - netstandard-2.0\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Xml.Linq/XDocumentType.xml\n  ms.technology:\n  - dotnet-standard\n  author: mairaw\n  ms.author: mairaw\n  manager: wpickett\n- uid: System.Xml.Linq.XDocumentType.SystemId\n  commentId: P:System.Xml.Linq.XDocumentType.SystemId\n  id: SystemId\n  parent: System.Xml.Linq.XDocumentType\n  langs:\n  - csharp\n  name: SystemId\n  nameWithType: XDocumentType.SystemId\n  fullName: XDocumentType.SystemId\n  type: Property\n  assemblies:\n  - System.Xml.XDocument\n  - System.Xml.Linq\n  - netstandard\n  namespace: System.Xml.Linq\n  summary: Gets or sets the system identifier for this Document Type Definition (DTD).\n  remarks: If an XML document uses an external private DTD, this property will contain the private identifier of the external DTD.\n  example:\n  - \"The following example creates an XML document that refers to an external private DTD. The DTD does not have an internal subset. The call to the <xref:System.Xml.Linq.XDocumentType> constructor reflects the use of the external private DTD. It passes `null` for the internal subset.  \\n  \\n```csharp  \\n  \\n                string pubsDtd =  \\n@\\\"<!ELEMENT Pubs (Book+)>  \\n<!ELEMENT Book (Title, Author)>  \\n<!ELEMENT Title (#PCDATA)>  \\n<!ELEMENT Author (#PCDATA)>\\\";  \\nFile.WriteAllText(\\\"Pubs.dtd\\\", pubsDtd);  \\n  \\nstring target = \\\"xml-stylesheet\\\";  \\nstring data = \\\"href=\\\\\\\"mystyle.css\\\\\\\" title=\\\\\\\"Compact\\\\\\\" type=\\\\\\\"text/css\\\\\\\"\\\";  \\n  \\nXDocument doc = new XDocument(  \\n    new XDocumentType(\\\"Pubs\\\", null, \\\"Pubs.dtd\\\", null),  \\n    new XElement(\\\"Pubs\\\",   \\n        new XElement(\\\"Book\\\",  \\n            new XElement(\\\"Title\\\", \\\"Artifacts of Roman Civilization\\\"),  \\n            new XElement(\\\"Author\\\", \\\"Moreno, Jordao\\\")  \\n        ),  \\n        new XElement(\\\"Book\\\",  \\n            new XElement(\\\"Title\\\", \\\"Midieval Tools and Implements\\\"),  \\n            new XElement(\\\"Author\\\", \\\"Gazit, Inbar\\\")  \\n        )  \\n    ),  \\n    new XComment(\\\"This is another comment.\\\")  \\n);  \\ndoc.Declaration = new XDeclaration(\\\"1.0\\\", \\\"utf-8\\\", \\\"true\\\");  \\ndoc.Save(\\\"Pubs.xml\\\");  \\n  \\n// Validate Pubs.xml against Pubs.dtd.  \\nXmlReaderSettings xrs = new XmlReaderSettings();  \\nxrs.ProhibitDtd = false;  \\nxrs.ValidationType = ValidationType.DTD;  \\nxrs.ConformanceLevel = ConformanceLevel.Auto;  \\nXmlReader xr = XmlReader.Create(\\\"Pubs.xml\\\", xrs);  \\nXDocument doc2 = XDocument.Load(xr);  \\n  \\nXDocumentType dt = doc2.Document.DocumentType;  \\nConsole.WriteLine(\\\"SystemId:{0}\\\", dt.SystemId);  \\n```  \\n  \\n```vb  \\n  \\n                Dim pubsDtd As String = _   \\n    \\\"<!ELEMENT Pubs (Book+)>\\\" & Environment.NewLine & _  \\n    \\\"<!ELEMENT Book (Title, Author)>\\\" & Environment.NewLine & _  \\n    \\\"<!ELEMENT Title (#PCDATA)>\\\" & Environment.NewLine & _  \\n    \\\"<!ELEMENT Author (#PCDATA)>\\\"  \\nFile.WriteAllText(\\\"Pubs.dtd\\\", pubsDtd)  \\n  \\nDim target As String = \\\"xml-stylesheet\\\"  \\nDim data As String = \\\"href='mystyle.css' title='Compact' type='text/css'\\\"  \\n  \\nDim doc As XDocument = _  \\n    <?xml version='1.0'?>  \\n    <Pubs>  \\n        <Book>  \\n            <Title>Artifacts of Roman Civilization</Title>  \\n            <Author>Moreno, Jordao</Author>  \\n        </Book>  \\n        <Book>  \\n            <Title>Midieval Tools and Implements</Title>  \\n            <Author>Gazit, Inbar</Author>  \\n        </Book>  \\n    </Pubs>  \\n    <!--This is another comment.-->  \\n  \\ndoc _  \\n.FirstNode _  \\n.AddBeforeSelf(New XDocumentType(\\\"Pubs\\\", Nothing, \\\"Pubs.dtd\\\", Nothing))  \\n  \\ndoc.Declaration = New XDeclaration(\\\"1.0\\\", \\\"utf-8\\\", \\\"true\\\")  \\ndoc.Save(\\\"Pubs.xml\\\")  \\n  \\n' Validate Pubs.xml against Pubs.dtd.  \\nDim xrs As XmlReaderSettings = New XmlReaderSettings()  \\nxrs.ProhibitDtd = False  \\nxrs.ValidationType = ValidationType.DTD  \\nxrs.ConformanceLevel = ConformanceLevel.Auto  \\nDim xr As XmlReader = XmlReader.Create(\\\"Pubs.xml\\\", xrs)  \\nDim doc2 As XDocument = XDocument.Load(xr)  \\n  \\nDim dt As XDocumentType = doc2.Document.DocumentType  \\nConsole.WriteLine(\\\"SystemId:{0}\\\", dt.SystemId)  \\n```  \\n  \\n This example produces the following output:  \\n  \\n```  \\nSystemId:Pubs.dtd  \\n```\"\n  syntax:\n    content: public string SystemId { get; set; }\n    return:\n      type: System.String\n      description: A <xref href=\"System.String\"></xref> that contains the system identifier for this Document Type Definition (DTD).\n  overload: System.Xml.Linq.XDocumentType.SystemId*\n  exceptions: []\n  version:\n  - netcore-1.0\n  - netcore-1.1\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - netstandard-1.0\n  - netstandard-1.1\n  - netstandard-1.2\n  - netstandard-1.3\n  - netstandard-1.4\n  - netstandard-1.6\n  - netstandard-2.0\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  monikers:\n  - netcore-1.0\n  - netcore-1.1\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - netstandard-1.0\n  - netstandard-1.1\n  - netstandard-1.2\n  - netstandard-1.3\n  - netstandard-1.4\n  - netstandard-1.6\n  - netstandard-2.0\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Xml.Linq/XDocumentType.xml\n  ms.technology:\n  - dotnet-standard\n  author: mairaw\n  ms.author: mairaw\n  manager: wpickett\n- uid: System.Xml.Linq.XDocumentType.WriteTo(System.Xml.XmlWriter)\n  commentId: M:System.Xml.Linq.XDocumentType.WriteTo(System.Xml.XmlWriter)\n  id: WriteTo(System.Xml.XmlWriter)\n  parent: System.Xml.Linq.XDocumentType\n  langs:\n  - csharp\n  name: WriteTo(XmlWriter)\n  nameWithType: XDocumentType.WriteTo(XmlWriter)\n  fullName: XDocumentType.WriteTo(XmlWriter)\n  type: Method\n  assemblies:\n  - System.Xml.XDocument\n  - System.Xml.Linq\n  - netstandard\n  namespace: System.Xml.Linq\n  summary: Write this <xref href=\"System.Xml.Linq.XDocumentType\"></xref> to an <xref href=\"System.Xml.XmlWriter\"></xref>.\n  remarks: This method is primarily used internally by the methods that write an XML tree to an <xref:System.Xml.XmlWriter>.\n  syntax:\n    content: public override void WriteTo (System.Xml.XmlWriter writer);\n    parameters:\n    - id: writer\n      type: System.Xml.XmlWriter\n      description: An <xref href=\"System.Xml.XmlWriter\"></xref> into which this method will write.\n  overload: System.Xml.Linq.XDocumentType.WriteTo*\n  exceptions: []\n  version:\n  - netcore-1.0\n  - netcore-1.1\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - netstandard-1.0\n  - netstandard-1.1\n  - netstandard-1.2\n  - netstandard-1.3\n  - netstandard-1.4\n  - netstandard-1.6\n  - netstandard-2.0\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  monikers:\n  - netcore-1.0\n  - netcore-1.1\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - netstandard-1.0\n  - netstandard-1.1\n  - netstandard-1.2\n  - netstandard-1.3\n  - netstandard-1.4\n  - netstandard-1.6\n  - netstandard-2.0\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Xml.Linq/XDocumentType.xml\n  ms.technology:\n  - dotnet-standard\n  author: mairaw\n  ms.author: mairaw\n  manager: wpickett\n- uid: System.Xml.Linq.XDocumentType.WriteToAsync(System.Xml.XmlWriter,System.Threading.CancellationToken)\n  commentId: M:System.Xml.Linq.XDocumentType.WriteToAsync(System.Xml.XmlWriter,System.Threading.CancellationToken)\n  id: WriteToAsync(System.Xml.XmlWriter,System.Threading.CancellationToken)\n  parent: System.Xml.Linq.XDocumentType\n  langs:\n  - csharp\n  name: WriteToAsync(XmlWriter, CancellationToken)\n  nameWithType: XDocumentType.WriteToAsync(XmlWriter, CancellationToken)\n  fullName: XDocumentType.WriteToAsync(XmlWriter, CancellationToken)\n  type: Method\n  assemblies:\n  - System.Xml.XDocument\n  namespace: System.Xml.Linq\n  syntax:\n    content: public override System.Threading.Tasks.Task WriteToAsync (System.Xml.XmlWriter writer, System.Threading.CancellationToken cancellationToken);\n    parameters:\n    - id: writer\n      type: System.Xml.XmlWriter\n      description: ''\n    - id: cancellationToken\n      type: System.Threading.CancellationToken\n      description: ''\n    return:\n      type: System.Threading.Tasks.Task\n      description: ''\n  overload: System.Xml.Linq.XDocumentType.WriteToAsync*\n  exceptions: []\n  version:\n  - netcore-2.0\n  monikers:\n  - netcore-2.0\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Xml.Linq/XDocumentType.xml\nreferences:\n- uid: System.Xml.Linq.XNode\n  parent: System.Xml.Linq\n  isExternal: false\n  name: XNode\n  nameWithType: XNode\n  fullName: System.Xml.Linq.XNode\n- uid: System.Xml.Linq.XDocumentType.#ctor(System.Xml.Linq.XDocumentType)\n  parent: System.Xml.Linq.XDocumentType\n  isExternal: false\n  name: XDocumentType(XDocumentType)\n  nameWithType: XDocumentType.XDocumentType(XDocumentType)\n  fullName: XDocumentType.XDocumentType(XDocumentType)\n- uid: System.Xml.Linq.XDocumentType\n  parent: System.Xml.Linq\n  isExternal: false\n  name: XDocumentType\n  nameWithType: XDocumentType\n  fullName: System.Xml.Linq.XDocumentType\n- uid: System.Xml.Linq.XDocumentType.#ctor(System.String,System.String,System.String,System.String)\n  parent: System.Xml.Linq.XDocumentType\n  isExternal: false\n  name: XDocumentType(String, String, String, String)\n  nameWithType: XDocumentType.XDocumentType(String, String, String, String)\n  fullName: XDocumentType.XDocumentType(String, String, String, String)\n- uid: System.String\n  parent: System\n  isExternal: false\n  name: String\n  nameWithType: String\n  fullName: System.String\n- uid: System.Xml.Linq.XDocumentType.InternalSubset\n  parent: System.Xml.Linq.XDocumentType\n  isExternal: false\n  name: InternalSubset\n  nameWithType: XDocumentType.InternalSubset\n  fullName: XDocumentType.InternalSubset\n- uid: System.Xml.Linq.XDocumentType.Name\n  parent: System.Xml.Linq.XDocumentType\n  isExternal: false\n  name: Name\n  nameWithType: XDocumentType.Name\n  fullName: XDocumentType.Name\n- uid: System.Xml.Linq.XDocumentType.NodeType\n  parent: System.Xml.Linq.XDocumentType\n  isExternal: false\n  name: NodeType\n  nameWithType: XDocumentType.NodeType\n  fullName: XDocumentType.NodeType\n- uid: System.Xml.XmlNodeType\n  parent: System.Xml\n  isExternal: false\n  name: XmlNodeType\n  nameWithType: XmlNodeType\n  fullName: System.Xml.XmlNodeType\n- uid: System.Xml.Linq.XDocumentType.PublicId\n  parent: System.Xml.Linq.XDocumentType\n  isExternal: false\n  name: PublicId\n  nameWithType: XDocumentType.PublicId\n  fullName: XDocumentType.PublicId\n- uid: System.Xml.Linq.XDocumentType.SystemId\n  parent: System.Xml.Linq.XDocumentType\n  isExternal: false\n  name: SystemId\n  nameWithType: XDocumentType.SystemId\n  fullName: XDocumentType.SystemId\n- uid: System.Xml.Linq.XDocumentType.WriteTo(System.Xml.XmlWriter)\n  parent: System.Xml.Linq.XDocumentType\n  isExternal: false\n  name: WriteTo(XmlWriter)\n  nameWithType: XDocumentType.WriteTo(XmlWriter)\n  fullName: XDocumentType.WriteTo(XmlWriter)\n- uid: System.Xml.XmlWriter\n  parent: System.Xml\n  isExternal: false\n  name: XmlWriter\n  nameWithType: XmlWriter\n  fullName: System.Xml.XmlWriter\n- uid: System.Xml.Linq.XDocumentType.WriteToAsync(System.Xml.XmlWriter,System.Threading.CancellationToken)\n  parent: System.Xml.Linq.XDocumentType\n  isExternal: false\n  name: WriteToAsync(XmlWriter, CancellationToken)\n  nameWithType: XDocumentType.WriteToAsync(XmlWriter, CancellationToken)\n  fullName: XDocumentType.WriteToAsync(XmlWriter, CancellationToken)\n- uid: System.Threading.Tasks.Task\n  parent: System.Threading.Tasks\n  isExternal: false\n  name: Task\n  nameWithType: Task\n  fullName: System.Threading.Tasks.Task\n- uid: System.Threading.CancellationToken\n  parent: System.Threading\n  isExternal: false\n  name: CancellationToken\n  nameWithType: CancellationToken\n  fullName: System.Threading.CancellationToken\n- uid: System.Xml.Linq.XDocumentType.#ctor*\n  parent: System.Xml.Linq.XDocumentType\n  isExternal: false\n  name: XDocumentType\n  nameWithType: XDocumentType.XDocumentType\n  fullName: XDocumentType.XDocumentType\n  monikers:\n  - netcore-1.0\n  - netcore-1.1\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - netstandard-1.0\n  - netstandard-1.1\n  - netstandard-1.2\n  - netstandard-1.3\n  - netstandard-1.4\n  - netstandard-1.6\n  - netstandard-2.0\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Xml.Linq/XDocumentType.xml\n- uid: System.Xml.Linq.XDocumentType.InternalSubset*\n  parent: System.Xml.Linq.XDocumentType\n  isExternal: false\n  name: InternalSubset\n  nameWithType: XDocumentType.InternalSubset\n  fullName: XDocumentType.InternalSubset\n  monikers:\n  - netcore-1.0\n  - netcore-1.1\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - netstandard-1.0\n  - netstandard-1.1\n  - netstandard-1.2\n  - netstandard-1.3\n  - netstandard-1.4\n  - netstandard-1.6\n  - netstandard-2.0\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Xml.Linq/XDocumentType.xml\n- uid: System.Xml.Linq.XDocumentType.Name*\n  parent: System.Xml.Linq.XDocumentType\n  isExternal: false\n  name: Name\n  nameWithType: XDocumentType.Name\n  fullName: XDocumentType.Name\n  monikers:\n  - netcore-1.0\n  - netcore-1.1\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - netstandard-1.0\n  - netstandard-1.1\n  - netstandard-1.2\n  - netstandard-1.3\n  - netstandard-1.4\n  - netstandard-1.6\n  - netstandard-2.0\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Xml.Linq/XDocumentType.xml\n- uid: System.Xml.Linq.XDocumentType.NodeType*\n  parent: System.Xml.Linq.XDocumentType\n  isExternal: false\n  name: NodeType\n  nameWithType: XDocumentType.NodeType\n  fullName: XDocumentType.NodeType\n  monikers:\n  - netcore-1.0\n  - netcore-1.1\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - netstandard-1.0\n  - netstandard-1.1\n  - netstandard-1.2\n  - netstandard-1.3\n  - netstandard-1.4\n  - netstandard-1.6\n  - netstandard-2.0\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Xml.Linq/XDocumentType.xml\n- uid: System.Xml.Linq.XDocumentType.PublicId*\n  parent: System.Xml.Linq.XDocumentType\n  isExternal: false\n  name: PublicId\n  nameWithType: XDocumentType.PublicId\n  fullName: XDocumentType.PublicId\n  monikers:\n  - netcore-1.0\n  - netcore-1.1\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - netstandard-1.0\n  - netstandard-1.1\n  - netstandard-1.2\n  - netstandard-1.3\n  - netstandard-1.4\n  - netstandard-1.6\n  - netstandard-2.0\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Xml.Linq/XDocumentType.xml\n- uid: System.Xml.Linq.XDocumentType.SystemId*\n  parent: System.Xml.Linq.XDocumentType\n  isExternal: false\n  name: SystemId\n  nameWithType: XDocumentType.SystemId\n  fullName: XDocumentType.SystemId\n  monikers:\n  - netcore-1.0\n  - netcore-1.1\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - netstandard-1.0\n  - netstandard-1.1\n  - netstandard-1.2\n  - netstandard-1.3\n  - netstandard-1.4\n  - netstandard-1.6\n  - netstandard-2.0\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Xml.Linq/XDocumentType.xml\n- uid: System.Xml.Linq.XDocumentType.WriteTo*\n  parent: System.Xml.Linq.XDocumentType\n  isExternal: false\n  name: WriteTo\n  nameWithType: XDocumentType.WriteTo\n  fullName: XDocumentType.WriteTo\n  monikers:\n  - netcore-1.0\n  - netcore-1.1\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - netstandard-1.0\n  - netstandard-1.1\n  - netstandard-1.2\n  - netstandard-1.3\n  - netstandard-1.4\n  - netstandard-1.6\n  - netstandard-2.0\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Xml.Linq/XDocumentType.xml\n- uid: System.Xml.Linq.XDocumentType.WriteToAsync*\n  parent: System.Xml.Linq.XDocumentType\n  isExternal: false\n  name: WriteToAsync\n  nameWithType: XDocumentType.WriteToAsync\n  fullName: XDocumentType.WriteToAsync\n  monikers:\n  - netcore-2.0\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Xml.Linq/XDocumentType.xml\n- uid: System.Object.Equals(System.Object)\n  parent: System.Object\n  isExternal: false\n  name: Equals(Object)\n  nameWithType: Object.Equals(Object)\n  fullName: Object.Equals(Object)\n- uid: System.Object.Equals(System.Object,System.Object)\n  parent: System.Object\n  isExternal: false\n  name: Equals(Object, Object)\n  nameWithType: Object.Equals(Object, Object)\n  fullName: Object.Equals(Object, Object)\n- uid: System.Object.GetHashCode\n  parent: System.Object\n  isExternal: false\n  name: GetHashCode()\n  nameWithType: Object.GetHashCode()\n  fullName: Object.GetHashCode()\n- uid: System.Object.GetType\n  parent: System.Object\n  isExternal: false\n  name: GetType()\n  nameWithType: Object.GetType()\n  fullName: Object.GetType()\n- uid: System.Object.MemberwiseClone\n  parent: System.Object\n  isExternal: false\n  name: MemberwiseClone()\n  nameWithType: Object.MemberwiseClone()\n  fullName: Object.MemberwiseClone()\n- uid: System.Object.ReferenceEquals(System.Object,System.Object)\n  parent: System.Object\n  isExternal: false\n  name: ReferenceEquals(Object, Object)\n  nameWithType: Object.ReferenceEquals(Object, Object)\n  fullName: Object.ReferenceEquals(Object, Object)\n- uid: System.Xml.Linq.XNode.ToString\n  parent: System.Xml.Linq.XNode\n  isExternal: false\n  name: ToString()\n  nameWithType: XNode.ToString()\n  fullName: XNode.ToString()\n- uid: System.Xml.Linq.XObject.AddAnnotation(System.Object)\n  parent: System.Xml.Linq.XObject\n  isExternal: false\n  name: AddAnnotation(Object)\n  nameWithType: XObject.AddAnnotation(Object)\n  fullName: XObject.AddAnnotation(Object)\n- uid: System.Xml.Linq.XObject.Annotation(System.Type)\n  parent: System.Xml.Linq.XObject\n  isExternal: false\n  name: Annotation(Type)\n  nameWithType: XObject.Annotation(Type)\n  fullName: XObject.Annotation(Type)\n- uid: System.Xml.Linq.XObject.Annotation``1\n  parent: System.Xml.Linq.XObject\n  isExternal: false\n  name: Annotation<T>()\n  nameWithType: XObject.Annotation<T>()\n  fullName: XObject.Annotation<T>()\n- uid: System.Xml.Linq.XObject.Annotations(System.Type)\n  parent: System.Xml.Linq.XObject\n  isExternal: false\n  name: Annotations(Type)\n  nameWithType: XObject.Annotations(Type)\n  fullName: XObject.Annotations(Type)\n- uid: System.Xml.Linq.XObject.Annotations``1\n  parent: System.Xml.Linq.XObject\n  isExternal: false\n  name: Annotations<T>()\n  nameWithType: XObject.Annotations<T>()\n  fullName: XObject.Annotations<T>()\n- uid: System.Xml.Linq.XObject.BaseUri\n  parent: System.Xml.Linq.XObject\n  isExternal: false\n  name: BaseUri\n  nameWithType: XObject.BaseUri\n  fullName: XObject.BaseUri\n- uid: System.Xml.Linq.XObject.Changed\n  parent: System.Xml.Linq.XObject\n  isExternal: false\n  name: Changed\n  nameWithType: XObject.Changed\n  fullName: XObject.Changed\n- uid: System.Xml.Linq.XObject.Changing\n  parent: System.Xml.Linq.XObject\n  isExternal: false\n  name: Changing\n  nameWithType: XObject.Changing\n  fullName: XObject.Changing\n- uid: System.Xml.Linq.XObject.Document\n  parent: System.Xml.Linq.XObject\n  isExternal: false\n  name: Document\n  nameWithType: XObject.Document\n  fullName: XObject.Document\n- uid: System.Xml.Linq.XObject.Parent\n  parent: System.Xml.Linq.XObject\n  isExternal: false\n  name: Parent\n  nameWithType: XObject.Parent\n  fullName: XObject.Parent\n- uid: System.Xml.Linq.XObject.RemoveAnnotations(System.Type)\n  parent: System.Xml.Linq.XObject\n  isExternal: false\n  name: RemoveAnnotations(Type)\n  nameWithType: XObject.RemoveAnnotations(Type)\n  fullName: XObject.RemoveAnnotations(Type)\n- uid: System.Xml.Linq.XObject.RemoveAnnotations``1\n  parent: System.Xml.Linq.XObject\n  isExternal: false\n  name: RemoveAnnotations<T>()\n  nameWithType: XObject.RemoveAnnotations<T>()\n  fullName: XObject.RemoveAnnotations<T>()\n- uid: System.Xml.Linq.XObject.System#Xml#IXmlLineInfo#HasLineInfo\n  parent: System.Xml.Linq.XObject\n  isExternal: false\n  name: IXmlLineInfo.HasLineInfo()\n  nameWithType: XObject.IXmlLineInfo.HasLineInfo()\n  fullName: XObject.IXmlLineInfo.HasLineInfo()\n- uid: System.Xml.Linq.XObject.System#Xml#IXmlLineInfo#LineNumber\n  parent: System.Xml.Linq.XObject\n  isExternal: false\n  name: IXmlLineInfo.LineNumber\n  nameWithType: XObject.IXmlLineInfo.LineNumber\n  fullName: XObject.IXmlLineInfo.LineNumber\n- uid: System.Xml.Linq.XObject.System#Xml#IXmlLineInfo#LinePosition\n  parent: System.Xml.Linq.XObject\n  isExternal: false\n  name: IXmlLineInfo.LinePosition\n  nameWithType: XObject.IXmlLineInfo.LinePosition\n  fullName: XObject.IXmlLineInfo.LinePosition\n- uid: System.Xml.Linq.XNode.AddAfterSelf(System.Object)\n  parent: System.Xml.Linq.XNode\n  isExternal: false\n  name: AddAfterSelf(Object)\n  nameWithType: XNode.AddAfterSelf(Object)\n  fullName: XNode.AddAfterSelf(Object)\n- uid: System.Xml.Linq.XNode.AddAfterSelf(System.Object[])\n  parent: System.Xml.Linq.XNode\n  isExternal: false\n  name: AddAfterSelf(Object[])\n  nameWithType: XNode.AddAfterSelf(Object[])\n  fullName: XNode.AddAfterSelf(Object[])\n- uid: System.Xml.Linq.XNode.AddBeforeSelf(System.Object)\n  parent: System.Xml.Linq.XNode\n  isExternal: false\n  name: AddBeforeSelf(Object)\n  nameWithType: XNode.AddBeforeSelf(Object)\n  fullName: XNode.AddBeforeSelf(Object)\n- uid: System.Xml.Linq.XNode.AddBeforeSelf(System.Object[])\n  parent: System.Xml.Linq.XNode\n  isExternal: false\n  name: AddBeforeSelf(Object[])\n  nameWithType: XNode.AddBeforeSelf(Object[])\n  fullName: XNode.AddBeforeSelf(Object[])\n- uid: System.Xml.Linq.XNode.Ancestors\n  parent: System.Xml.Linq.XNode\n  isExternal: false\n  name: Ancestors()\n  nameWithType: XNode.Ancestors()\n  fullName: XNode.Ancestors()\n- uid: System.Xml.Linq.XNode.Ancestors(System.Xml.Linq.XName)\n  parent: System.Xml.Linq.XNode\n  isExternal: false\n  name: Ancestors(XName)\n  nameWithType: XNode.Ancestors(XName)\n  fullName: XNode.Ancestors(XName)\n- uid: System.Xml.Linq.XNode.CompareDocumentOrder(System.Xml.Linq.XNode,System.Xml.Linq.XNode)\n  parent: System.Xml.Linq.XNode\n  isExternal: false\n  name: CompareDocumentOrder(XNode, XNode)\n  nameWithType: XNode.CompareDocumentOrder(XNode, XNode)\n  fullName: XNode.CompareDocumentOrder(XNode, XNode)\n- uid: System.Xml.Linq.XNode.CreateReader\n  parent: System.Xml.Linq.XNode\n  isExternal: false\n  name: CreateReader()\n  nameWithType: XNode.CreateReader()\n  fullName: XNode.CreateReader()\n- uid: System.Xml.Linq.XNode.CreateReader(System.Xml.Linq.ReaderOptions)\n  parent: System.Xml.Linq.XNode\n  isExternal: false\n  name: CreateReader(ReaderOptions)\n  nameWithType: XNode.CreateReader(ReaderOptions)\n  fullName: XNode.CreateReader(ReaderOptions)\n- uid: System.Xml.Linq.XNode.DeepEquals(System.Xml.Linq.XNode,System.Xml.Linq.XNode)\n  parent: System.Xml.Linq.XNode\n  isExternal: false\n  name: DeepEquals(XNode, XNode)\n  nameWithType: XNode.DeepEquals(XNode, XNode)\n  fullName: XNode.DeepEquals(XNode, XNode)\n- uid: System.Xml.Linq.XNode.DocumentOrderComparer\n  parent: System.Xml.Linq.XNode\n  isExternal: false\n  name: DocumentOrderComparer\n  nameWithType: XNode.DocumentOrderComparer\n  fullName: XNode.DocumentOrderComparer\n- uid: System.Xml.Linq.XNode.ElementsAfterSelf\n  parent: System.Xml.Linq.XNode\n  isExternal: false\n  name: ElementsAfterSelf()\n  nameWithType: XNode.ElementsAfterSelf()\n  fullName: XNode.ElementsAfterSelf()\n- uid: System.Xml.Linq.XNode.ElementsAfterSelf(System.Xml.Linq.XName)\n  parent: System.Xml.Linq.XNode\n  isExternal: false\n  name: ElementsAfterSelf(XName)\n  nameWithType: XNode.ElementsAfterSelf(XName)\n  fullName: XNode.ElementsAfterSelf(XName)\n- uid: System.Xml.Linq.XNode.ElementsBeforeSelf\n  parent: System.Xml.Linq.XNode\n  isExternal: false\n  name: ElementsBeforeSelf()\n  nameWithType: XNode.ElementsBeforeSelf()\n  fullName: XNode.ElementsBeforeSelf()\n- uid: System.Xml.Linq.XNode.ElementsBeforeSelf(System.Xml.Linq.XName)\n  parent: System.Xml.Linq.XNode\n  isExternal: false\n  name: ElementsBeforeSelf(XName)\n  nameWithType: XNode.ElementsBeforeSelf(XName)\n  fullName: XNode.ElementsBeforeSelf(XName)\n- uid: System.Xml.Linq.XNode.EqualityComparer\n  parent: System.Xml.Linq.XNode\n  isExternal: false\n  name: EqualityComparer\n  nameWithType: XNode.EqualityComparer\n  fullName: XNode.EqualityComparer\n- uid: System.Xml.Linq.XNode.IsAfter(System.Xml.Linq.XNode)\n  parent: System.Xml.Linq.XNode\n  isExternal: false\n  name: IsAfter(XNode)\n  nameWithType: XNode.IsAfter(XNode)\n  fullName: XNode.IsAfter(XNode)\n- uid: System.Xml.Linq.XNode.IsBefore(System.Xml.Linq.XNode)\n  parent: System.Xml.Linq.XNode\n  isExternal: false\n  name: IsBefore(XNode)\n  nameWithType: XNode.IsBefore(XNode)\n  fullName: XNode.IsBefore(XNode)\n- uid: System.Xml.Linq.XNode.NextNode\n  parent: System.Xml.Linq.XNode\n  isExternal: false\n  name: NextNode\n  nameWithType: XNode.NextNode\n  fullName: XNode.NextNode\n- uid: System.Xml.Linq.XNode.NodesAfterSelf\n  parent: System.Xml.Linq.XNode\n  isExternal: false\n  name: NodesAfterSelf()\n  nameWithType: XNode.NodesAfterSelf()\n  fullName: XNode.NodesAfterSelf()\n- uid: System.Xml.Linq.XNode.NodesBeforeSelf\n  parent: System.Xml.Linq.XNode\n  isExternal: false\n  name: NodesBeforeSelf()\n  nameWithType: XNode.NodesBeforeSelf()\n  fullName: XNode.NodesBeforeSelf()\n- uid: System.Xml.Linq.XNode.PreviousNode\n  parent: System.Xml.Linq.XNode\n  isExternal: false\n  name: PreviousNode\n  nameWithType: XNode.PreviousNode\n  fullName: XNode.PreviousNode\n- uid: System.Xml.Linq.XNode.ReadFrom(System.Xml.XmlReader)\n  parent: System.Xml.Linq.XNode\n  isExternal: false\n  name: ReadFrom(XmlReader)\n  nameWithType: XNode.ReadFrom(XmlReader)\n  fullName: XNode.ReadFrom(XmlReader)\n- uid: System.Xml.Linq.XNode.ReadFromAsync(System.Xml.XmlReader,System.Threading.CancellationToken)\n  parent: System.Xml.Linq.XNode\n  isExternal: false\n  name: ReadFromAsync(XmlReader, CancellationToken)\n  nameWithType: XNode.ReadFromAsync(XmlReader, CancellationToken)\n  fullName: XNode.ReadFromAsync(XmlReader, CancellationToken)\n- uid: System.Xml.Linq.XNode.Remove\n  parent: System.Xml.Linq.XNode\n  isExternal: false\n  name: Remove()\n  nameWithType: XNode.Remove()\n  fullName: XNode.Remove()\n- uid: System.Xml.Linq.XNode.ReplaceWith(System.Object)\n  parent: System.Xml.Linq.XNode\n  isExternal: false\n  name: ReplaceWith(Object)\n  nameWithType: XNode.ReplaceWith(Object)\n  fullName: XNode.ReplaceWith(Object)\n- uid: System.Xml.Linq.XNode.ReplaceWith(System.Object[])\n  parent: System.Xml.Linq.XNode\n  isExternal: false\n  name: ReplaceWith(Object[])\n  nameWithType: XNode.ReplaceWith(Object[])\n  fullName: XNode.ReplaceWith(Object[])\n- uid: System.Xml.Linq.XNode.ToString(System.Xml.Linq.SaveOptions)\n  parent: System.Xml.Linq.XNode\n  isExternal: false\n  name: ToString(SaveOptions)\n  nameWithType: XNode.ToString(SaveOptions)\n  fullName: XNode.ToString(SaveOptions)\n- uid: System.Xml.XPath.Extensions.CreateNavigator(System.Xml.Linq.XNode)\n  parent: System.Xml.XPath.Extensions\n  isExternal: false\n  name: CreateNavigator(XNode)\n  nameWithType: Extensions.CreateNavigator(XNode)\n  fullName: Extensions.CreateNavigator(XNode)\n- uid: System.Xml.XPath.Extensions.CreateNavigator(System.Xml.Linq.XNode,System.Xml.XmlNameTable)\n  parent: System.Xml.XPath.Extensions\n  isExternal: false\n  name: CreateNavigator(XNode, XmlNameTable)\n  nameWithType: Extensions.CreateNavigator(XNode, XmlNameTable)\n  fullName: Extensions.CreateNavigator(XNode, XmlNameTable)\n- uid: System.Xml.XPath.Extensions.XPathEvaluate(System.Xml.Linq.XNode,System.String)\n  parent: System.Xml.XPath.Extensions\n  isExternal: false\n  name: XPathEvaluate(XNode, String)\n  nameWithType: Extensions.XPathEvaluate(XNode, String)\n  fullName: Extensions.XPathEvaluate(XNode, String)\n- uid: System.Xml.XPath.Extensions.XPathEvaluate(System.Xml.Linq.XNode,System.String,System.Xml.IXmlNamespaceResolver)\n  parent: System.Xml.XPath.Extensions\n  isExternal: false\n  name: XPathEvaluate(XNode, String, IXmlNamespaceResolver)\n  nameWithType: Extensions.XPathEvaluate(XNode, String, IXmlNamespaceResolver)\n  fullName: Extensions.XPathEvaluate(XNode, String, IXmlNamespaceResolver)\n- uid: System.Xml.XPath.Extensions.XPathSelectElement(System.Xml.Linq.XNode,System.String)\n  parent: System.Xml.XPath.Extensions\n  isExternal: false\n  name: XPathSelectElement(XNode, String)\n  nameWithType: Extensions.XPathSelectElement(XNode, String)\n  fullName: Extensions.XPathSelectElement(XNode, String)\n- uid: System.Xml.XPath.Extensions.XPathSelectElement(System.Xml.Linq.XNode,System.String,System.Xml.IXmlNamespaceResolver)\n  parent: System.Xml.XPath.Extensions\n  isExternal: false\n  name: XPathSelectElement(XNode, String, IXmlNamespaceResolver)\n  nameWithType: Extensions.XPathSelectElement(XNode, String, IXmlNamespaceResolver)\n  fullName: Extensions.XPathSelectElement(XNode, String, IXmlNamespaceResolver)\n- uid: System.Xml.XPath.Extensions.XPathSelectElements(System.Xml.Linq.XNode,System.String)\n  parent: System.Xml.XPath.Extensions\n  isExternal: false\n  name: XPathSelectElements(XNode, String)\n  nameWithType: Extensions.XPathSelectElements(XNode, String)\n  fullName: Extensions.XPathSelectElements(XNode, String)\n- uid: System.Xml.XPath.Extensions.XPathSelectElements(System.Xml.Linq.XNode,System.String,System.Xml.IXmlNamespaceResolver)\n  parent: System.Xml.XPath.Extensions\n  isExternal: false\n  name: XPathSelectElements(XNode, String, IXmlNamespaceResolver)\n  nameWithType: Extensions.XPathSelectElements(XNode, String, IXmlNamespaceResolver)\n  fullName: Extensions.XPathSelectElements(XNode, String, IXmlNamespaceResolver)\n- uid: System.Xml.XPath.XDocumentExtensions.ToXPathNavigable(System.Xml.Linq.XNode)\n  parent: System.Xml.XPath.XDocumentExtensions\n  isExternal: false\n  name: ToXPathNavigable(XNode)\n  nameWithType: XDocumentExtensions.ToXPathNavigable(XNode)\n  fullName: XDocumentExtensions.ToXPathNavigable(XNode)\n"}