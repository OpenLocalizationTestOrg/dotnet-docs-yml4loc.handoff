{"nodes":[{"content":"Provides the base functionality for creating event providers that send e-mail.","nodes":[{"pos":[0,78],"content":"Provides the base functionality for creating event providers that send e-mail.","nodes":[{"content":"Provides the base functionality for creating event providers that send e-mail.","pos":[0,78]}]}],"pos":[801,880],"yaml":true},{"content":"ASP.NET health monitoring allows production and operations staff to manage deployed Web applications. The <xref:System.Web.Management> namespace contains the health event types responsible for packaging application health-status data and the provider types responsible for processing this data. It also contains supporting types that help during the management of health events.  \n  \n The <xref:System.Web.Management.MailWebEventProvider> class is a base class for building providers that monitor Web events and send e-mail for selected events. This class supports the .NET Framework infrastructure and is not intended to be inherited from or used directly from your code.  \n  \n> [!NOTE]\n>  In most cases you will be able to use the ASP.NET health-monitoring types as implemented, and you will control the health-monitoring system by specifying values in the `<healthMonitoring>` configuration section. You can also derive from the health-monitoring types to create your own custom events and providers. For an example of creating a custom provider, see [How to: Implement the Health Monitoring Custom Provider Example](http://msdn.microsoft.com/library/bbb1c959-e6e4-42b2-be62-49b7ca5ab72c).","nodes":[{"pos":[0,378],"content":"ASP.NET health monitoring allows production and operations staff to manage deployed Web applications. The <xref:System.Web.Management> namespace contains the health event types responsible for packaging application health-status data and the provider types responsible for processing this data. It also contains supporting types that help during the management of health events.","nodes":[{"content":"ASP.NET health monitoring allows production and operations staff to manage deployed Web applications. The <xref:System.Web.Management> namespace contains the health event types responsible for packaging application health-status data and the provider types responsible for processing this data. It also contains supporting types that help during the management of health events.","pos":[0,378],"nodes":[{"content":"ASP.NET health monitoring allows production and operations staff to manage deployed Web applications.","pos":[0,101]},{"content":"The <ph id=\"ph1\">&lt;xref:System.Web.Management&gt;</ph> namespace contains the health event types responsible for packaging application health-status data and the provider types responsible for processing this data.","pos":[102,294],"source":" The <xref:System.Web.Management> namespace contains the health event types responsible for packaging application health-status data and the provider types responsible for processing this data."},{"content":"It also contains supporting types that help during the management of health events.","pos":[295,378]}]}]},{"pos":[385,672],"content":"The <xref:System.Web.Management.MailWebEventProvider> class is a base class for building providers that monitor Web events and send e-mail for selected events. This class supports the .NET Framework infrastructure and is not intended to be inherited from or used directly from your code.","nodes":[{"content":"The <xref:System.Web.Management.MailWebEventProvider> class is a base class for building providers that monitor Web events and send e-mail for selected events. This class supports the .NET Framework infrastructure and is not intended to be inherited from or used directly from your code.","pos":[0,287],"nodes":[{"content":"The <ph id=\"ph1\">&lt;xref:System.Web.Management.MailWebEventProvider&gt;</ph> class is a base class for building providers that monitor Web events and send e-mail for selected events.","pos":[0,159],"source":"The <xref:System.Web.Management.MailWebEventProvider> class is a base class for building providers that monitor Web events and send e-mail for selected events."},{"content":"This class supports the .NET Framework infrastructure and is not intended to be inherited from or used directly from your code.","pos":[160,287]}]}]},{"pos":[680,1192],"content":"[!NOTE]\n In most cases you will be able to use the ASP.NET health-monitoring types as implemented, and you will control the health-monitoring system by specifying values in the `<healthMonitoring>` configuration section. You can also derive from the health-monitoring types to create your own custom events and providers. For an example of creating a custom provider, see [How to: Implement the Health Monitoring Custom Provider Example](http://msdn.microsoft.com/library/bbb1c959-e6e4-42b2-be62-49b7ca5ab72c).","leadings":["","> "],"nodes":[{"content":" In most cases you will be able to use the ASP.NET health-monitoring types as implemented, and you will control the health-monitoring system by specifying values in the `<healthMonitoring>` configuration section. You can also derive from the health-monitoring types to create your own custom events and providers. For an example of creating a custom provider, see [How to: Implement the Health Monitoring Custom Provider Example](http://msdn.microsoft.com/library/bbb1c959-e6e4-42b2-be62-49b7ca5ab72c).","pos":[8,510],"nodes":[{"content":"In most cases you will be able to use the ASP.NET health-monitoring types as implemented, and you will control the health-monitoring system by specifying values in the <ph id=\"ph1\">`&lt;healthMonitoring&gt;`</ph> configuration section.","pos":[1,212],"source":" In most cases you will be able to use the ASP.NET health-monitoring types as implemented, and you will control the health-monitoring system by specifying values in the `<healthMonitoring>` configuration section."},{"content":"You can also derive from the health-monitoring types to create your own custom events and providers.","pos":[213,313]},{"content":"For an example of creating a custom provider, see <bpt id=\"p1\">[</bpt>How to: Implement the Health Monitoring Custom Provider Example<ept id=\"p1\">](http://msdn.microsoft.com/library/bbb1c959-e6e4-42b2-be62-49b7ca5ab72c)</ept>.","pos":[314,502],"source":" For an example of creating a custom provider, see [How to: Implement the Health Monitoring Custom Provider Example](http://msdn.microsoft.com/library/bbb1c959-e6e4-42b2-be62-49b7ca5ab72c)."}]}]}],"pos":[891,2091],"yaml":true,"extradata":"MT"},{"content":"Sets the initial values for this object.","nodes":[{"pos":[0,40],"content":"Sets the initial values for this object.","nodes":[{"content":"Sets the initial values for this object.","pos":[0,40]}]}],"pos":[4390,4431],"yaml":true},{"content":"This method is called to initialize the <xref:System.Web.Management.EventLogWebEventProvider> with the configuration settings and name as specified in the configuration file.","nodes":[{"pos":[0,174],"content":"This method is called to initialize the <xref:System.Web.Management.EventLogWebEventProvider> with the configuration settings and name as specified in the configuration file.","nodes":[{"content":"This method is called to initialize the <ph id=\"ph1\">&lt;xref:System.Web.Management.EventLogWebEventProvider&gt;</ph> with the configuration settings and name as specified in the configuration file.","pos":[0,174],"source":"This method is called to initialize the <xref:System.Web.Management.EventLogWebEventProvider> with the configuration settings and name as specified in the configuration file."}]}],"pos":[4442,4617],"yaml":true,"extradata":"MT"},{"content":"The name used in the configuration file to identify this provider.","nodes":[{"pos":[0,66],"content":"The name used in the configuration file to identify this provider.","nodes":[{"content":"The name used in the configuration file to identify this provider.","pos":[0,66]}]}],"pos":[4822,4889],"yaml":true},{"content":"A <xref href=\"System.Collections.Specialized.NameValueCollection\"></xref> that specifies the attributes assigned for this provider in the configuration file.","nodes":[{"pos":[0,157],"content":"A <ph id=\"ph1\">&lt;xref href=\"System.Collections.Specialized.NameValueCollection\"&gt;&lt;/xref&gt;</ph> that specifies the attributes assigned for this provider in the configuration file.","source":"A <xref href=\"System.Collections.Specialized.NameValueCollection\"></xref> that specifies the attributes assigned for this provider in the configuration file."}],"pos":[4988,5146],"yaml":true},{"content":"No recipients have been assigned in <code>config</code>.","nodes":[{"pos":[0,56],"content":"No recipients have been assigned in <bpt id=\"p1\">&lt;code&gt;</bpt><ph id=\"ph1\">config</ph><ept id=\"p1\">&lt;/code&gt;</ept>.","source":"No recipients have been assigned in <code>config</code>."}],"pos":[5371,5428],"yaml":true},{"content":"Processes the event passed to the provider.","nodes":[{"pos":[0,43],"content":"Processes the event passed to the provider.","nodes":[{"content":"Processes the event passed to the provider.","pos":[0,43]}]}],"pos":[6581,6625],"yaml":true},{"content":"This is the method that ASP.NET health monitoring calls to start the processing of the event.","nodes":[{"pos":[0,93],"content":"This is the method that ASP.NET health monitoring calls to start the processing of the event.","nodes":[{"content":"This is the method that ASP.NET health monitoring calls to start the processing of the event.","pos":[0,93]}]}],"pos":[6636,6730],"yaml":true,"extradata":"MT"},{"content":"The <xref href=\"System.Web.Management.WebBaseEvent\"></xref> object to process.","nodes":[{"pos":[0,78],"content":"The <ph id=\"ph1\">&lt;xref href=\"System.Web.Management.WebBaseEvent\"&gt;&lt;/xref&gt;</ph> object to process.","source":"The <xref href=\"System.Web.Management.WebBaseEvent\"></xref> object to process."}],"pos":[6941,7020],"yaml":true},{"content":"Removes all events from the provider's buffer.","nodes":[{"pos":[0,46],"content":"Removes all events from the provider's buffer.","nodes":[{"content":"Removes all events from the provider's buffer.","pos":[0,46]}]}],"pos":[8355,8402],"yaml":true},{"content":"This method is called by the health-monitoring system when an event buffer flush is required.  \n  \n When the event buffer is flushed, a notification occurs and the entire event buffer is sent to the recipients in as few messages as possible, regardless of the length of time elapsed since the last notification.","nodes":[{"pos":[0,93],"content":"This method is called by the health-monitoring system when an event buffer flush is required.","nodes":[{"content":"This method is called by the health-monitoring system when an event buffer flush is required.","pos":[0,93]}]},{"pos":[100,311],"content":"When the event buffer is flushed, a notification occurs and the entire event buffer is sent to the recipients in as few messages as possible, regardless of the length of time elapsed since the last notification.","nodes":[{"content":"When the event buffer is flushed, a notification occurs and the entire event buffer is sent to the recipients in as few messages as possible, regardless of the length of time elapsed since the last notification.","pos":[0,211]}]}],"pos":[8413,8729],"yaml":true,"extradata":"MT"},{"content":"The <xref href=\"System.Web.Management.WebEventBufferFlushInfo\"></xref> that contains the count of events waiting to send their notification.","nodes":[{"pos":[0,140],"content":"The <ph id=\"ph1\">&lt;xref href=\"System.Web.Management.WebEventBufferFlushInfo\"&gt;&lt;/xref&gt;</ph> that contains the count of events waiting to send their notification.","source":"The <xref href=\"System.Web.Management.WebEventBufferFlushInfo\"></xref> that contains the count of events waiting to send their notification."}],"pos":[8963,9104],"yaml":true},{"content":"Performs tasks associated with shutting down the provider.","nodes":[{"pos":[0,58],"content":"Performs tasks associated with shutting down the provider.","nodes":[{"content":"Performs tasks associated with shutting down the provider.","pos":[0,58]}]}],"pos":[10180,10239],"yaml":true},{"content":"ASP.NET calls the <xref:System.Web.Management.EventLogWebEventProvider.Shutdown%2A> method when the application domain hosting the Web application terminates. The method is called to perform tasks that will allow the application to end gracefully.","nodes":[{"pos":[0,247],"content":"ASP.NET calls the <xref:System.Web.Management.EventLogWebEventProvider.Shutdown%2A> method when the application domain hosting the Web application terminates. The method is called to perform tasks that will allow the application to end gracefully.","nodes":[{"content":"ASP.NET calls the <xref:System.Web.Management.EventLogWebEventProvider.Shutdown%2A> method when the application domain hosting the Web application terminates. The method is called to perform tasks that will allow the application to end gracefully.","pos":[0,247],"nodes":[{"content":"ASP.NET calls the <ph id=\"ph1\">&lt;xref:System.Web.Management.EventLogWebEventProvider.Shutdown%2A&gt;</ph> method when the application domain hosting the Web application terminates.","pos":[0,158],"source":"ASP.NET calls the <xref:System.Web.Management.EventLogWebEventProvider.Shutdown%2A> method when the application domain hosting the Web application terminates."},{"content":"The method is called to perform tasks that will allow the application to end gracefully.","pos":[159,247]}]}]}],"pos":[10250,10498],"yaml":true,"extradata":"MT"}],"content":"### YamlMime:ManagedReference\nitems:\n- uid: System.Web.Management.MailWebEventProvider\n  commentId: T:System.Web.Management.MailWebEventProvider\n  id: MailWebEventProvider\n  children:\n  - System.Web.Management.MailWebEventProvider.Initialize(System.String,System.Collections.Specialized.NameValueCollection)\n  - System.Web.Management.MailWebEventProvider.ProcessEvent(System.Web.Management.WebBaseEvent)\n  - System.Web.Management.MailWebEventProvider.ProcessEventFlush(System.Web.Management.WebEventBufferFlushInfo)\n  - System.Web.Management.MailWebEventProvider.Shutdown\n  langs:\n  - csharp\n  name: MailWebEventProvider\n  nameWithType: MailWebEventProvider\n  fullName: System.Web.Management.MailWebEventProvider\n  type: Class\n  assemblies:\n  - System.Web\n  namespace: System.Web.Management\n  summary: Provides the base functionality for creating event providers that send e-mail.\n  remarks: \"ASP.NET health monitoring allows production and operations staff to manage deployed Web applications. The <xref:System.Web.Management> namespace contains the health event types responsible for packaging application health-status data and the provider types responsible for processing this data. It also contains supporting types that help during the management of health events.  \\n  \\n The <xref:System.Web.Management.MailWebEventProvider> class is a base class for building providers that monitor Web events and send e-mail for selected events. This class supports the .NET Framework infrastructure and is not intended to be inherited from or used directly from your code.  \\n  \\n> [!NOTE]\\n>  In most cases you will be able to use the ASP.NET health-monitoring types as implemented, and you will control the health-monitoring system by specifying values in the `<healthMonitoring>` configuration section. You can also derive from the health-monitoring types to create your own custom events and providers. For an example of creating a custom provider, see [How to: Implement the Health Monitoring Custom Provider Example](http://msdn.microsoft.com/library/bbb1c959-e6e4-42b2-be62-49b7ca5ab72c).\"\n  syntax:\n    content: 'public abstract class MailWebEventProvider : System.Web.Management.BufferedWebEventProvider'\n  inheritance:\n  - System.Object\n  - System.Configuration.Provider.ProviderBase\n  - System.Web.Management.WebEventProvider\n  - System.Web.Management.BufferedWebEventProvider\n  derivedClasses:\n  - System.Web.Management.SimpleMailWebEventProvider\n  - System.Web.Management.TemplatedMailWebEventProvider\n  implements: []\n  inheritedMembers:\n  - System.Configuration.Provider.ProviderBase.Description\n  - System.Configuration.Provider.ProviderBase.Name\n  - System.Object.Equals(System.Object)\n  - System.Object.Equals(System.Object,System.Object)\n  - System.Object.GetHashCode\n  - System.Object.GetType\n  - System.Object.MemberwiseClone\n  - System.Object.ReferenceEquals(System.Object,System.Object)\n  - System.Object.ToString\n  - System.Web.Management.BufferedWebEventProvider.BufferMode\n  - System.Web.Management.BufferedWebEventProvider.Flush\n  - System.Web.Management.BufferedWebEventProvider.UseBuffering\n  version:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  internal_use_only: true\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Web.Management/MailWebEventProvider.xml\n  ms.technology:\n  - dotnet-webforms\n  author: tdykstra\n  ms.author: tdykstra\n  manager: wpickett\n- uid: System.Web.Management.MailWebEventProvider.Initialize(System.String,System.Collections.Specialized.NameValueCollection)\n  commentId: M:System.Web.Management.MailWebEventProvider.Initialize(System.String,System.Collections.Specialized.NameValueCollection)\n  id: Initialize(System.String,System.Collections.Specialized.NameValueCollection)\n  parent: System.Web.Management.MailWebEventProvider\n  langs:\n  - csharp\n  name: Initialize(String, NameValueCollection)\n  nameWithType: MailWebEventProvider.Initialize(String, NameValueCollection)\n  fullName: MailWebEventProvider.Initialize(String, NameValueCollection)\n  type: Method\n  assemblies:\n  - System.Web\n  namespace: System.Web.Management\n  summary: Sets the initial values for this object.\n  remarks: This method is called to initialize the <xref:System.Web.Management.EventLogWebEventProvider> with the configuration settings and name as specified in the configuration file.\n  syntax:\n    content: public override void Initialize (string name, System.Collections.Specialized.NameValueCollection config);\n    parameters:\n    - id: name\n      type: System.String\n      description: The name used in the configuration file to identify this provider.\n    - id: config\n      type: System.Collections.Specialized.NameValueCollection\n      description: A <xref href=\"System.Collections.Specialized.NameValueCollection\"></xref> that specifies the attributes assigned for this provider in the configuration file.\n  overload: System.Web.Management.MailWebEventProvider.Initialize*\n  exceptions:\n  - type: System.Configuration.ConfigurationErrorsException\n    commentId: T:System.Configuration.ConfigurationErrorsException\n    description: No recipients have been assigned in <code>config</code>.\n  version:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  internal_use_only: true\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Web.Management/MailWebEventProvider.xml\n  ms.technology:\n  - dotnet-webforms\n  author: tdykstra\n  ms.author: tdykstra\n  manager: wpickett\n- uid: System.Web.Management.MailWebEventProvider.ProcessEvent(System.Web.Management.WebBaseEvent)\n  commentId: M:System.Web.Management.MailWebEventProvider.ProcessEvent(System.Web.Management.WebBaseEvent)\n  id: ProcessEvent(System.Web.Management.WebBaseEvent)\n  parent: System.Web.Management.MailWebEventProvider\n  langs:\n  - csharp\n  name: ProcessEvent(WebBaseEvent)\n  nameWithType: MailWebEventProvider.ProcessEvent(WebBaseEvent)\n  fullName: MailWebEventProvider.ProcessEvent(WebBaseEvent)\n  type: Method\n  assemblies:\n  - System.Web\n  namespace: System.Web.Management\n  summary: Processes the event passed to the provider.\n  remarks: This is the method that ASP.NET health monitoring calls to start the processing of the event.\n  syntax:\n    content: public override void ProcessEvent (System.Web.Management.WebBaseEvent eventRaised);\n    parameters:\n    - id: eventRaised\n      type: System.Web.Management.WebBaseEvent\n      description: The <xref href=\"System.Web.Management.WebBaseEvent\"></xref> object to process.\n  overload: System.Web.Management.MailWebEventProvider.ProcessEvent*\n  exceptions: []\n  version:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  internal_use_only: true\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Web.Management/MailWebEventProvider.xml\n  ms.technology:\n  - dotnet-webforms\n  author: tdykstra\n  ms.author: tdykstra\n  manager: wpickett\n- uid: System.Web.Management.MailWebEventProvider.ProcessEventFlush(System.Web.Management.WebEventBufferFlushInfo)\n  commentId: M:System.Web.Management.MailWebEventProvider.ProcessEventFlush(System.Web.Management.WebEventBufferFlushInfo)\n  id: ProcessEventFlush(System.Web.Management.WebEventBufferFlushInfo)\n  parent: System.Web.Management.MailWebEventProvider\n  langs:\n  - csharp\n  name: ProcessEventFlush(WebEventBufferFlushInfo)\n  nameWithType: MailWebEventProvider.ProcessEventFlush(WebEventBufferFlushInfo)\n  fullName: MailWebEventProvider.ProcessEventFlush(WebEventBufferFlushInfo)\n  type: Method\n  assemblies:\n  - System.Web\n  namespace: System.Web.Management\n  summary: Removes all events from the provider's buffer.\n  remarks: \"This method is called by the health-monitoring system when an event buffer flush is required.  \\n  \\n When the event buffer is flushed, a notification occurs and the entire event buffer is sent to the recipients in as few messages as possible, regardless of the length of time elapsed since the last notification.\"\n  syntax:\n    content: public override void ProcessEventFlush (System.Web.Management.WebEventBufferFlushInfo flushInfo);\n    parameters:\n    - id: flushInfo\n      type: System.Web.Management.WebEventBufferFlushInfo\n      description: The <xref href=\"System.Web.Management.WebEventBufferFlushInfo\"></xref> that contains the count of events waiting to send their notification.\n  overload: System.Web.Management.MailWebEventProvider.ProcessEventFlush*\n  exceptions: []\n  version:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  internal_use_only: true\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Web.Management/MailWebEventProvider.xml\n  ms.technology:\n  - dotnet-webforms\n  author: tdykstra\n  ms.author: tdykstra\n  manager: wpickett\n- uid: System.Web.Management.MailWebEventProvider.Shutdown\n  commentId: M:System.Web.Management.MailWebEventProvider.Shutdown\n  id: Shutdown\n  parent: System.Web.Management.MailWebEventProvider\n  langs:\n  - csharp\n  name: Shutdown()\n  nameWithType: MailWebEventProvider.Shutdown()\n  fullName: MailWebEventProvider.Shutdown()\n  type: Method\n  assemblies:\n  - System.Web\n  namespace: System.Web.Management\n  summary: Performs tasks associated with shutting down the provider.\n  remarks: ASP.NET calls the <xref:System.Web.Management.EventLogWebEventProvider.Shutdown%2A> method when the application domain hosting the Web application terminates. The method is called to perform tasks that will allow the application to end gracefully.\n  syntax:\n    content: public override void Shutdown ();\n    parameters: []\n  overload: System.Web.Management.MailWebEventProvider.Shutdown*\n  exceptions: []\n  version:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  internal_use_only: true\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Web.Management/MailWebEventProvider.xml\n  ms.technology:\n  - dotnet-webforms\n  author: tdykstra\n  ms.author: tdykstra\n  manager: wpickett\nreferences:\n- uid: System.Web.Management.BufferedWebEventProvider\n  parent: System.Web.Management\n  isExternal: false\n  name: BufferedWebEventProvider\n  nameWithType: BufferedWebEventProvider\n  fullName: System.Web.Management.BufferedWebEventProvider\n- uid: System.Configuration.ConfigurationErrorsException\n  parent: System.Configuration\n  isExternal: false\n  name: ConfigurationErrorsException\n  nameWithType: ConfigurationErrorsException\n  fullName: System.Configuration.ConfigurationErrorsException\n- uid: System.Web.Management.MailWebEventProvider.Initialize(System.String,System.Collections.Specialized.NameValueCollection)\n  parent: System.Web.Management.MailWebEventProvider\n  isExternal: false\n  name: Initialize(String, NameValueCollection)\n  nameWithType: MailWebEventProvider.Initialize(String, NameValueCollection)\n  fullName: MailWebEventProvider.Initialize(String, NameValueCollection)\n- uid: System.String\n  parent: System\n  isExternal: false\n  name: String\n  nameWithType: String\n  fullName: System.String\n- uid: System.Collections.Specialized.NameValueCollection\n  parent: System.Collections.Specialized\n  isExternal: false\n  name: NameValueCollection\n  nameWithType: NameValueCollection\n  fullName: System.Collections.Specialized.NameValueCollection\n- uid: System.Web.Management.MailWebEventProvider.ProcessEvent(System.Web.Management.WebBaseEvent)\n  parent: System.Web.Management.MailWebEventProvider\n  isExternal: false\n  name: ProcessEvent(WebBaseEvent)\n  nameWithType: MailWebEventProvider.ProcessEvent(WebBaseEvent)\n  fullName: MailWebEventProvider.ProcessEvent(WebBaseEvent)\n- uid: System.Web.Management.WebBaseEvent\n  parent: System.Web.Management\n  isExternal: false\n  name: WebBaseEvent\n  nameWithType: WebBaseEvent\n  fullName: System.Web.Management.WebBaseEvent\n- uid: System.Web.Management.MailWebEventProvider.ProcessEventFlush(System.Web.Management.WebEventBufferFlushInfo)\n  parent: System.Web.Management.MailWebEventProvider\n  isExternal: false\n  name: ProcessEventFlush(WebEventBufferFlushInfo)\n  nameWithType: MailWebEventProvider.ProcessEventFlush(WebEventBufferFlushInfo)\n  fullName: MailWebEventProvider.ProcessEventFlush(WebEventBufferFlushInfo)\n- uid: System.Web.Management.WebEventBufferFlushInfo\n  parent: System.Web.Management\n  isExternal: false\n  name: WebEventBufferFlushInfo\n  nameWithType: WebEventBufferFlushInfo\n  fullName: System.Web.Management.WebEventBufferFlushInfo\n- uid: System.Web.Management.MailWebEventProvider.Shutdown\n  parent: System.Web.Management.MailWebEventProvider\n  isExternal: false\n  name: Shutdown()\n  nameWithType: MailWebEventProvider.Shutdown()\n  fullName: MailWebEventProvider.Shutdown()\n- uid: System.Web.Management.MailWebEventProvider.Initialize*\n  parent: System.Web.Management.MailWebEventProvider\n  isExternal: false\n  name: Initialize\n  nameWithType: MailWebEventProvider.Initialize\n  fullName: MailWebEventProvider.Initialize\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Web.Management/MailWebEventProvider.xml\n- uid: System.Web.Management.MailWebEventProvider.ProcessEvent*\n  parent: System.Web.Management.MailWebEventProvider\n  isExternal: false\n  name: ProcessEvent\n  nameWithType: MailWebEventProvider.ProcessEvent\n  fullName: MailWebEventProvider.ProcessEvent\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Web.Management/MailWebEventProvider.xml\n- uid: System.Web.Management.MailWebEventProvider.ProcessEventFlush*\n  parent: System.Web.Management.MailWebEventProvider\n  isExternal: false\n  name: ProcessEventFlush\n  nameWithType: MailWebEventProvider.ProcessEventFlush\n  fullName: MailWebEventProvider.ProcessEventFlush\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Web.Management/MailWebEventProvider.xml\n- uid: System.Web.Management.MailWebEventProvider.Shutdown*\n  parent: System.Web.Management.MailWebEventProvider\n  isExternal: false\n  name: Shutdown\n  nameWithType: MailWebEventProvider.Shutdown\n  fullName: MailWebEventProvider.Shutdown\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Web.Management/MailWebEventProvider.xml\n- uid: System.Object.Equals(System.Object)\n  parent: System.Object\n  isExternal: false\n  name: Equals(Object)\n  nameWithType: Object.Equals(Object)\n  fullName: Object.Equals(Object)\n- uid: System.Object.Equals(System.Object,System.Object)\n  parent: System.Object\n  isExternal: false\n  name: Equals(Object, Object)\n  nameWithType: Object.Equals(Object, Object)\n  fullName: Object.Equals(Object, Object)\n- uid: System.Object.GetHashCode\n  parent: System.Object\n  isExternal: false\n  name: GetHashCode()\n  nameWithType: Object.GetHashCode()\n  fullName: Object.GetHashCode()\n- uid: System.Object.GetType\n  parent: System.Object\n  isExternal: false\n  name: GetType()\n  nameWithType: Object.GetType()\n  fullName: Object.GetType()\n- uid: System.Object.MemberwiseClone\n  parent: System.Object\n  isExternal: false\n  name: MemberwiseClone()\n  nameWithType: Object.MemberwiseClone()\n  fullName: Object.MemberwiseClone()\n- uid: System.Object.ReferenceEquals(System.Object,System.Object)\n  parent: System.Object\n  isExternal: false\n  name: ReferenceEquals(Object, Object)\n  nameWithType: Object.ReferenceEquals(Object, Object)\n  fullName: Object.ReferenceEquals(Object, Object)\n- uid: System.Object.ToString\n  parent: System.Object\n  isExternal: false\n  name: ToString()\n  nameWithType: Object.ToString()\n  fullName: Object.ToString()\n- uid: System.Configuration.Provider.ProviderBase.Description\n  parent: System.Configuration.Provider.ProviderBase\n  isExternal: false\n  name: Description\n  nameWithType: ProviderBase.Description\n  fullName: ProviderBase.Description\n- uid: System.Configuration.Provider.ProviderBase.Name\n  parent: System.Configuration.Provider.ProviderBase\n  isExternal: false\n  name: Name\n  nameWithType: ProviderBase.Name\n  fullName: ProviderBase.Name\n- uid: System.Web.Management.BufferedWebEventProvider.Flush\n  parent: System.Web.Management.BufferedWebEventProvider\n  isExternal: false\n  name: Flush()\n  nameWithType: BufferedWebEventProvider.Flush()\n  fullName: BufferedWebEventProvider.Flush()\n- uid: System.Web.Management.BufferedWebEventProvider.BufferMode\n  parent: System.Web.Management.BufferedWebEventProvider\n  isExternal: false\n  name: BufferMode\n  nameWithType: BufferedWebEventProvider.BufferMode\n  fullName: BufferedWebEventProvider.BufferMode\n- uid: System.Web.Management.BufferedWebEventProvider.UseBuffering\n  parent: System.Web.Management.BufferedWebEventProvider\n  isExternal: false\n  name: UseBuffering\n  nameWithType: BufferedWebEventProvider.UseBuffering\n  fullName: BufferedWebEventProvider.UseBuffering\n"}