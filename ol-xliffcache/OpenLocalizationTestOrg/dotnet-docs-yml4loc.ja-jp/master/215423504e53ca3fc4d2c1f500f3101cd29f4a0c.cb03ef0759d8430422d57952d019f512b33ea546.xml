{"nodes":[{"content":"Represents a `for` statement, or a loop through a block of statements, using a test expression as a condition for continuing to loop.","nodes":[{"pos":[0,133],"content":"Represents a <ph id=\"ph1\">`for`</ph> statement, or a loop through a block of statements, using a test expression as a condition for continuing to loop.","source":"Represents a `for` statement, or a loop through a block of statements, using a test expression as a condition for continuing to loop."}],"pos":[855,989],"yaml":true},{"content":"A <xref:System.CodeDom.CodeIterationStatement> can represent a `for` loop or `while` loop.  \n  \n The <xref:System.CodeDom.CodeIterationStatement.InitStatement%2A> property specifies the statement to execute before the first loop iteration. The <xref:System.CodeDom.CodeIterationStatement.TestExpression%2A> property specifies the loop continuation expression, which must evaluate to `true` at the end of each loop iteration for another iteration to begin. The <xref:System.CodeDom.CodeIterationStatement.IncrementStatement%2A> property specifies the statement to execute at the end of each loop iteration. The <xref:System.CodeDom.CodeIterationStatement.Statements%2A> property specifies the collection of statements to execute within the loop.","nodes":[{"pos":[0,90],"content":"A <ph id=\"ph1\">&lt;xref:System.CodeDom.CodeIterationStatement&gt;</ph> can represent a <ph id=\"ph2\">`for`</ph> loop or <ph id=\"ph3\">`while`</ph> loop.","source":"A <xref:System.CodeDom.CodeIterationStatement> can represent a `for` loop or `while` loop."},{"pos":[97,744],"content":"The <xref:System.CodeDom.CodeIterationStatement.InitStatement%2A> property specifies the statement to execute before the first loop iteration. The <xref:System.CodeDom.CodeIterationStatement.TestExpression%2A> property specifies the loop continuation expression, which must evaluate to `true` at the end of each loop iteration for another iteration to begin. The <xref:System.CodeDom.CodeIterationStatement.IncrementStatement%2A> property specifies the statement to execute at the end of each loop iteration. The <xref:System.CodeDom.CodeIterationStatement.Statements%2A> property specifies the collection of statements to execute within the loop.","nodes":[{"content":"The <ph id=\"ph1\">&lt;xref:System.CodeDom.CodeIterationStatement.InitStatement%2A&gt;</ph> property specifies the statement to execute before the first loop iteration.","pos":[0,142],"source":"The <xref:System.CodeDom.CodeIterationStatement.InitStatement%2A> property specifies the statement to execute before the first loop iteration."},{"content":"The <ph id=\"ph1\">&lt;xref:System.CodeDom.CodeIterationStatement.TestExpression%2A&gt;</ph> property specifies the loop continuation expression, which must evaluate to <ph id=\"ph2\">`true`</ph> at the end of each loop iteration for another iteration to begin.","pos":[143,358],"source":" The <xref:System.CodeDom.CodeIterationStatement.TestExpression%2A> property specifies the loop continuation expression, which must evaluate to `true` at the end of each loop iteration for another iteration to begin."},{"content":"The <ph id=\"ph1\">&lt;xref:System.CodeDom.CodeIterationStatement.IncrementStatement%2A&gt;</ph> property specifies the statement to execute at the end of each loop iteration.","pos":[359,508],"source":" The <xref:System.CodeDom.CodeIterationStatement.IncrementStatement%2A> property specifies the statement to execute at the end of each loop iteration."},{"content":"The <ph id=\"ph1\">&lt;xref:System.CodeDom.CodeIterationStatement.Statements%2A&gt;</ph> property specifies the collection of statements to execute within the loop.","pos":[509,647],"source":" The <xref:System.CodeDom.CodeIterationStatement.Statements%2A> property specifies the collection of statements to execute within the loop."}]}],"pos":[1000,1749],"yaml":true,"extradata":"MT"},{"content":"Initializes a new instance of the <xref href=\"System.CodeDom.CodeIterationStatement\"></xref> class.","nodes":[{"pos":[0,99],"content":"Initializes a new instance of the <ph id=\"ph1\">&lt;xref href=\"System.CodeDom.CodeIterationStatement\"&gt;&lt;/xref&gt;</ph> class.","source":"Initializes a new instance of the <xref href=\"System.CodeDom.CodeIterationStatement\"></xref> class."}],"pos":[4419,4519],"yaml":true},{"content":"Initializes a new instance of the <xref href=\"System.CodeDom.CodeIterationStatement\"></xref> class using the specified parameters.","nodes":[{"pos":[0,130],"content":"Initializes a new instance of the <ph id=\"ph1\">&lt;xref href=\"System.CodeDom.CodeIterationStatement\"&gt;&lt;/xref&gt;</ph> class using the specified parameters.","source":"Initializes a new instance of the <xref href=\"System.CodeDom.CodeIterationStatement\"></xref> class using the specified parameters."}],"pos":[6272,6403],"yaml":true},{"content":"A <xref href=\"System.CodeDom.CodeStatement\"></xref> containing the loop initialization statement.","nodes":[{"pos":[0,97],"content":"A <ph id=\"ph1\">&lt;xref href=\"System.CodeDom.CodeStatement\"&gt;&lt;/xref&gt;</ph> containing the loop initialization statement.","source":"A <xref href=\"System.CodeDom.CodeStatement\"></xref> containing the loop initialization statement."}],"pos":[6740,6838],"yaml":true},{"content":"A <xref href=\"System.CodeDom.CodeExpression\"></xref> containing the expression to test for exit condition.","nodes":[{"pos":[0,106],"content":"A <ph id=\"ph1\">&lt;xref href=\"System.CodeDom.CodeExpression\"&gt;&lt;/xref&gt;</ph> containing the expression to test for exit condition.","source":"A <xref href=\"System.CodeDom.CodeExpression\"></xref> containing the expression to test for exit condition."}],"pos":[6924,7031],"yaml":true},{"content":"A <xref href=\"System.CodeDom.CodeStatement\"></xref> containing the per-cycle increment statement.","nodes":[{"pos":[0,97],"content":"A <ph id=\"ph1\">&lt;xref href=\"System.CodeDom.CodeStatement\"&gt;&lt;/xref&gt;</ph> containing the per-cycle increment statement.","source":"A <xref href=\"System.CodeDom.CodeStatement\"></xref> containing the per-cycle increment statement."}],"pos":[7120,7218],"yaml":true},{"content":"An array of type <xref href=\"System.CodeDom.CodeStatement\"></xref> containing the statements within the loop.","nodes":[{"pos":[0,109],"content":"An array of type <ph id=\"ph1\">&lt;xref href=\"System.CodeDom.CodeStatement\"&gt;&lt;/xref&gt;</ph> containing the statements within the loop.","source":"An array of type <xref href=\"System.CodeDom.CodeStatement\"></xref> containing the statements within the loop."}],"pos":[7301,7411],"yaml":true},{"content":"Gets or sets the statement that is called after each loop cycle.","nodes":[{"pos":[0,64],"content":"Gets or sets the statement that is called after each loop cycle.","nodes":[{"content":"Gets or sets the statement that is called after each loop cycle.","pos":[0,64]}]}],"pos":[8561,8626],"yaml":true},{"content":"This statement is called after each iteration.","nodes":[{"pos":[0,46],"content":"This statement is called after each iteration.","nodes":[{"content":"This statement is called after each iteration.","pos":[0,46]}]}],"pos":[8637,8684],"yaml":true,"extradata":"MT"},{"content":"A <xref href=\"System.CodeDom.CodeStatement\"></xref> that indicates the per cycle increment statement.","nodes":[{"pos":[0,101],"content":"A <ph id=\"ph1\">&lt;xref href=\"System.CodeDom.CodeStatement\"&gt;&lt;/xref&gt;</ph> that indicates the per cycle increment statement.","source":"A <xref href=\"System.CodeDom.CodeStatement\"></xref> that indicates the per cycle increment statement."}],"pos":[8848,8950],"yaml":true},{"content":"Gets or sets the loop initialization statement.","nodes":[{"pos":[0,47],"content":"Gets or sets the loop initialization statement.","nodes":[{"content":"Gets or sets the loop initialization statement.","pos":[0,47]}]}],"pos":[10083,10131],"yaml":true},{"content":"You can specify an empty initialization statement by setting this property to a <xref:System.CodeDom.CodeExpressionStatement> that contains a <xref:System.CodeDom.CodeSnippetExpression> that contains an empty string.","nodes":[{"pos":[0,216],"content":"You can specify an empty initialization statement by setting this property to a <xref:System.CodeDom.CodeExpressionStatement> that contains a <xref:System.CodeDom.CodeSnippetExpression> that contains an empty string.","nodes":[{"content":"You can specify an empty initialization statement by setting this property to a <ph id=\"ph1\">&lt;xref:System.CodeDom.CodeExpressionStatement&gt;</ph> that contains a <ph id=\"ph2\">&lt;xref:System.CodeDom.CodeSnippetExpression&gt;</ph> that contains an empty string.","pos":[0,216],"source":"You can specify an empty initialization statement by setting this property to a <xref:System.CodeDom.CodeExpressionStatement> that contains a <xref:System.CodeDom.CodeSnippetExpression> that contains an empty string."}]}],"pos":[10142,10359],"yaml":true,"extradata":"MT"},{"content":"A <xref href=\"System.CodeDom.CodeStatement\"></xref> that indicates the loop initialization statement.","nodes":[{"pos":[0,101],"content":"A <ph id=\"ph1\">&lt;xref href=\"System.CodeDom.CodeStatement\"&gt;&lt;/xref&gt;</ph> that indicates the loop initialization statement.","source":"A <xref href=\"System.CodeDom.CodeStatement\"></xref> that indicates the loop initialization statement."}],"pos":[10518,10620],"yaml":true},{"content":"Gets the collection of statements to be executed within the loop.","nodes":[{"pos":[0,65],"content":"Gets the collection of statements to be executed within the loop.","nodes":[{"content":"Gets the collection of statements to be executed within the loop.","pos":[0,65]}]}],"pos":[11730,11796],"yaml":true},{"content":"An array of type <xref href=\"System.CodeDom.CodeStatement\"></xref> that indicates the statements within the loop.","nodes":[{"pos":[0,113],"content":"An array of type <ph id=\"ph1\">&lt;xref href=\"System.CodeDom.CodeStatement\"&gt;&lt;/xref&gt;</ph> that indicates the statements within the loop.","source":"An array of type <xref href=\"System.CodeDom.CodeStatement\"></xref> that indicates the statements within the loop."}],"pos":[11967,12081],"yaml":true},{"content":"Gets or sets the expression to test as the condition that continues the loop.","nodes":[{"pos":[0,77],"content":"Gets or sets the expression to test as the condition that continues the loop.","nodes":[{"content":"Gets or sets the expression to test as the condition that continues the loop.","pos":[0,77]}]}],"pos":[13212,13290],"yaml":true},{"content":"If this expression resolves to `true`, the loop will continue.","nodes":[{"pos":[0,62],"content":"If this expression resolves to <ph id=\"ph1\">`true`</ph>, the loop will continue.","source":"If this expression resolves to `true`, the loop will continue."}],"pos":[13301,13364],"yaml":true,"extradata":"MT"},{"content":"A <xref href=\"System.CodeDom.CodeExpression\"></xref> that indicates the expression to test.","nodes":[{"pos":[0,91],"content":"A <ph id=\"ph1\">&lt;xref href=\"System.CodeDom.CodeExpression\"&gt;&lt;/xref&gt;</ph> that indicates the expression to test.","source":"A <xref href=\"System.CodeDom.CodeExpression\"></xref> that indicates the expression to test."}],"pos":[13526,13618],"yaml":true}],"content":"### YamlMime:ManagedReference\nitems:\n- uid: System.CodeDom.CodeIterationStatement\n  commentId: T:System.CodeDom.CodeIterationStatement\n  id: CodeIterationStatement\n  children:\n  - System.CodeDom.CodeIterationStatement.#ctor\n  - System.CodeDom.CodeIterationStatement.#ctor(System.CodeDom.CodeStatement,System.CodeDom.CodeExpression,System.CodeDom.CodeStatement,System.CodeDom.CodeStatement[])\n  - System.CodeDom.CodeIterationStatement.IncrementStatement\n  - System.CodeDom.CodeIterationStatement.InitStatement\n  - System.CodeDom.CodeIterationStatement.Statements\n  - System.CodeDom.CodeIterationStatement.TestExpression\n  langs:\n  - csharp\n  name: CodeIterationStatement\n  nameWithType: CodeIterationStatement\n  fullName: System.CodeDom.CodeIterationStatement\n  type: Class\n  assemblies:\n  - System\n  - System.CodeDom\n  namespace: System.CodeDom\n  summary: Represents a `for` statement, or a loop through a block of statements, using a test expression as a condition for continuing to loop.\n  remarks: \"A <xref:System.CodeDom.CodeIterationStatement> can represent a `for` loop or `while` loop.  \\n  \\n The <xref:System.CodeDom.CodeIterationStatement.InitStatement%2A> property specifies the statement to execute before the first loop iteration. The <xref:System.CodeDom.CodeIterationStatement.TestExpression%2A> property specifies the loop continuation expression, which must evaluate to `true` at the end of each loop iteration for another iteration to begin. The <xref:System.CodeDom.CodeIterationStatement.IncrementStatement%2A> property specifies the statement to execute at the end of each loop iteration. The <xref:System.CodeDom.CodeIterationStatement.Statements%2A> property specifies the collection of statements to execute within the loop.\"\n  example:\n  - \"This example demonstrates using a <xref:System.CodeDom.CodeIterationStatement> to represent a `for` loop.  \\n  \\n [!code-cpp[CodeIterationStatementExample#2](~/samples/snippets/cpp/VS_Snippets_CLR/CodeIterationStatementExample/CPP/codeiterationstatementexample.cpp#2)]\\n [!code-csharp[CodeIterationStatementExample#2](~/samples/snippets/csharp/VS_Snippets_CLR/CodeIterationStatementExample/CS/codeiterationstatementexample.cs#2)]\\n [!code-vb[CodeIterationStatementExample#2](~/samples/snippets/visualbasic/VS_Snippets_CLR/CodeIterationStatementExample/VB/codeiterationstatementexample.vb#2)]\"\n  syntax:\n    content: >-\n      [System.Runtime.InteropServices.ClassInterface(System.Runtime.InteropServices.ClassInterfaceType.AutoDispatch)]\n\n      [System.Runtime.InteropServices.ComVisible(true)]\n\n      public class CodeIterationStatement : System.CodeDom.CodeStatement\n  inheritance:\n  - System.Object\n  - System.CodeDom.CodeObject\n  - System.CodeDom.CodeStatement\n  implements: []\n  inheritedMembers:\n  - System.CodeDom.CodeObject.UserData\n  - System.CodeDom.CodeStatement.EndDirectives\n  - System.CodeDom.CodeStatement.LinePragma\n  - System.CodeDom.CodeStatement.StartDirectives\n  - System.Object.Equals(System.Object)\n  - System.Object.Equals(System.Object,System.Object)\n  - System.Object.GetHashCode\n  - System.Object.GetType\n  - System.Object.MemberwiseClone\n  - System.Object.ReferenceEquals(System.Object,System.Object)\n  - System.Object.ToString\n  attributes:\n  - type: System.Runtime.InteropServices.ClassInterfaceAttribute\n  - type: System.Runtime.InteropServices.ComVisibleAttribute\n  version:\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - xamarinmac-3.0\n  monikers:\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - xamarinmac-3.0\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.CodeDom/CodeIterationStatement.xml\n  ms.technology:\n  - dotnet-standard\n  author: rpetrusha\n  ms.author: ronpet\n  manager: wpickett\n- uid: System.CodeDom.CodeIterationStatement.#ctor\n  commentId: M:System.CodeDom.CodeIterationStatement.#ctor\n  id: '#ctor'\n  parent: System.CodeDom.CodeIterationStatement\n  langs:\n  - csharp\n  name: CodeIterationStatement()\n  nameWithType: CodeIterationStatement.CodeIterationStatement()\n  fullName: CodeIterationStatement.CodeIterationStatement()\n  type: Constructor\n  assemblies:\n  - System\n  - System.CodeDom\n  namespace: System.CodeDom\n  summary: Initializes a new instance of the <xref href=\"System.CodeDom.CodeIterationStatement\"></xref> class.\n  syntax:\n    content: public CodeIterationStatement ();\n    parameters: []\n  overload: System.CodeDom.CodeIterationStatement.#ctor*\n  exceptions: []\n  version:\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - xamarinmac-3.0\n  monikers:\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - xamarinmac-3.0\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.CodeDom/CodeIterationStatement.xml\n  ms.technology:\n  - dotnet-standard\n  author: rpetrusha\n  ms.author: ronpet\n  manager: wpickett\n- uid: System.CodeDom.CodeIterationStatement.#ctor(System.CodeDom.CodeStatement,System.CodeDom.CodeExpression,System.CodeDom.CodeStatement,System.CodeDom.CodeStatement[])\n  commentId: M:System.CodeDom.CodeIterationStatement.#ctor(System.CodeDom.CodeStatement,System.CodeDom.CodeExpression,System.CodeDom.CodeStatement,System.CodeDom.CodeStatement[])\n  id: '#ctor(System.CodeDom.CodeStatement,System.CodeDom.CodeExpression,System.CodeDom.CodeStatement,System.CodeDom.CodeStatement[])'\n  parent: System.CodeDom.CodeIterationStatement\n  langs:\n  - csharp\n  name: CodeIterationStatement(CodeStatement, CodeExpression, CodeStatement, CodeStatement[])\n  nameWithType: CodeIterationStatement.CodeIterationStatement(CodeStatement, CodeExpression, CodeStatement, CodeStatement[])\n  fullName: CodeIterationStatement.CodeIterationStatement(CodeStatement, CodeExpression, CodeStatement, CodeStatement[])\n  type: Constructor\n  assemblies:\n  - System\n  - System.CodeDom\n  namespace: System.CodeDom\n  summary: Initializes a new instance of the <xref href=\"System.CodeDom.CodeIterationStatement\"></xref> class using the specified parameters.\n  syntax:\n    content: public CodeIterationStatement (System.CodeDom.CodeStatement initStatement, System.CodeDom.CodeExpression testExpression, System.CodeDom.CodeStatement incrementStatement, System.CodeDom.CodeStatement[] statements);\n    parameters:\n    - id: initStatement\n      type: System.CodeDom.CodeStatement\n      description: A <xref href=\"System.CodeDom.CodeStatement\"></xref> containing the loop initialization statement.\n    - id: testExpression\n      type: System.CodeDom.CodeExpression\n      description: A <xref href=\"System.CodeDom.CodeExpression\"></xref> containing the expression to test for exit condition.\n    - id: incrementStatement\n      type: System.CodeDom.CodeStatement\n      description: A <xref href=\"System.CodeDom.CodeStatement\"></xref> containing the per-cycle increment statement.\n    - id: statements\n      type: System.CodeDom.CodeStatement[]\n      description: An array of type <xref href=\"System.CodeDom.CodeStatement\"></xref> containing the statements within the loop.\n  overload: System.CodeDom.CodeIterationStatement.#ctor*\n  exceptions: []\n  version:\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - xamarinmac-3.0\n  monikers:\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - xamarinmac-3.0\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.CodeDom/CodeIterationStatement.xml\n  ms.technology:\n  - dotnet-standard\n  author: rpetrusha\n  ms.author: ronpet\n  manager: wpickett\n- uid: System.CodeDom.CodeIterationStatement.IncrementStatement\n  commentId: P:System.CodeDom.CodeIterationStatement.IncrementStatement\n  id: IncrementStatement\n  parent: System.CodeDom.CodeIterationStatement\n  langs:\n  - csharp\n  name: IncrementStatement\n  nameWithType: CodeIterationStatement.IncrementStatement\n  fullName: CodeIterationStatement.IncrementStatement\n  type: Property\n  assemblies:\n  - System\n  - System.CodeDom\n  namespace: System.CodeDom\n  summary: Gets or sets the statement that is called after each loop cycle.\n  remarks: This statement is called after each iteration.\n  syntax:\n    content: public System.CodeDom.CodeStatement IncrementStatement { get; set; }\n    return:\n      type: System.CodeDom.CodeStatement\n      description: A <xref href=\"System.CodeDom.CodeStatement\"></xref> that indicates the per cycle increment statement.\n  overload: System.CodeDom.CodeIterationStatement.IncrementStatement*\n  exceptions: []\n  version:\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - xamarinmac-3.0\n  monikers:\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - xamarinmac-3.0\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.CodeDom/CodeIterationStatement.xml\n  ms.technology:\n  - dotnet-standard\n  author: rpetrusha\n  ms.author: ronpet\n  manager: wpickett\n- uid: System.CodeDom.CodeIterationStatement.InitStatement\n  commentId: P:System.CodeDom.CodeIterationStatement.InitStatement\n  id: InitStatement\n  parent: System.CodeDom.CodeIterationStatement\n  langs:\n  - csharp\n  name: InitStatement\n  nameWithType: CodeIterationStatement.InitStatement\n  fullName: CodeIterationStatement.InitStatement\n  type: Property\n  assemblies:\n  - System\n  - System.CodeDom\n  namespace: System.CodeDom\n  summary: Gets or sets the loop initialization statement.\n  remarks: You can specify an empty initialization statement by setting this property to a <xref:System.CodeDom.CodeExpressionStatement> that contains a <xref:System.CodeDom.CodeSnippetExpression> that contains an empty string.\n  syntax:\n    content: public System.CodeDom.CodeStatement InitStatement { get; set; }\n    return:\n      type: System.CodeDom.CodeStatement\n      description: A <xref href=\"System.CodeDom.CodeStatement\"></xref> that indicates the loop initialization statement.\n  overload: System.CodeDom.CodeIterationStatement.InitStatement*\n  exceptions: []\n  version:\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - xamarinmac-3.0\n  monikers:\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - xamarinmac-3.0\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.CodeDom/CodeIterationStatement.xml\n  ms.technology:\n  - dotnet-standard\n  author: rpetrusha\n  ms.author: ronpet\n  manager: wpickett\n- uid: System.CodeDom.CodeIterationStatement.Statements\n  commentId: P:System.CodeDom.CodeIterationStatement.Statements\n  id: Statements\n  parent: System.CodeDom.CodeIterationStatement\n  langs:\n  - csharp\n  name: Statements\n  nameWithType: CodeIterationStatement.Statements\n  fullName: CodeIterationStatement.Statements\n  type: Property\n  assemblies:\n  - System\n  - System.CodeDom\n  namespace: System.CodeDom\n  summary: Gets the collection of statements to be executed within the loop.\n  syntax:\n    content: public System.CodeDom.CodeStatementCollection Statements { get; }\n    return:\n      type: System.CodeDom.CodeStatementCollection\n      description: An array of type <xref href=\"System.CodeDom.CodeStatement\"></xref> that indicates the statements within the loop.\n  overload: System.CodeDom.CodeIterationStatement.Statements*\n  exceptions: []\n  version:\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - xamarinmac-3.0\n  monikers:\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - xamarinmac-3.0\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.CodeDom/CodeIterationStatement.xml\n  ms.technology:\n  - dotnet-standard\n  author: rpetrusha\n  ms.author: ronpet\n  manager: wpickett\n- uid: System.CodeDom.CodeIterationStatement.TestExpression\n  commentId: P:System.CodeDom.CodeIterationStatement.TestExpression\n  id: TestExpression\n  parent: System.CodeDom.CodeIterationStatement\n  langs:\n  - csharp\n  name: TestExpression\n  nameWithType: CodeIterationStatement.TestExpression\n  fullName: CodeIterationStatement.TestExpression\n  type: Property\n  assemblies:\n  - System\n  - System.CodeDom\n  namespace: System.CodeDom\n  summary: Gets or sets the expression to test as the condition that continues the loop.\n  remarks: If this expression resolves to `true`, the loop will continue.\n  syntax:\n    content: public System.CodeDom.CodeExpression TestExpression { get; set; }\n    return:\n      type: System.CodeDom.CodeExpression\n      description: A <xref href=\"System.CodeDom.CodeExpression\"></xref> that indicates the expression to test.\n  overload: System.CodeDom.CodeIterationStatement.TestExpression*\n  exceptions: []\n  version:\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - xamarinmac-3.0\n  monikers:\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - xamarinmac-3.0\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.CodeDom/CodeIterationStatement.xml\n  ms.technology:\n  - dotnet-standard\n  author: rpetrusha\n  ms.author: ronpet\n  manager: wpickett\nreferences:\n- uid: System.CodeDom.CodeStatement\n  parent: System.CodeDom\n  isExternal: false\n  name: CodeStatement\n  nameWithType: CodeStatement\n  fullName: System.CodeDom.CodeStatement\n- uid: System.CodeDom.CodeIterationStatement.#ctor\n  parent: System.CodeDom.CodeIterationStatement\n  isExternal: false\n  name: CodeIterationStatement()\n  nameWithType: CodeIterationStatement.CodeIterationStatement()\n  fullName: CodeIterationStatement.CodeIterationStatement()\n- uid: System.CodeDom.CodeIterationStatement.#ctor(System.CodeDom.CodeStatement,System.CodeDom.CodeExpression,System.CodeDom.CodeStatement,System.CodeDom.CodeStatement[])\n  parent: System.CodeDom.CodeIterationStatement\n  isExternal: false\n  name: CodeIterationStatement(CodeStatement, CodeExpression, CodeStatement, CodeStatement[])\n  nameWithType: CodeIterationStatement.CodeIterationStatement(CodeStatement, CodeExpression, CodeStatement, CodeStatement[])\n  fullName: CodeIterationStatement.CodeIterationStatement(CodeStatement, CodeExpression, CodeStatement, CodeStatement[])\n- uid: System.CodeDom.CodeExpression\n  parent: System.CodeDom\n  isExternal: false\n  name: CodeExpression\n  nameWithType: CodeExpression\n  fullName: System.CodeDom.CodeExpression\n- uid: System.CodeDom.CodeStatement[]\n  parent: System.CodeDom\n  isExternal: false\n  name: CodeStatement[]\n  nameWithType: CodeStatement[]\n  fullName: System.CodeDom.CodeStatement[]\n  spec.csharp:\n  - uid: System.CodeDom.CodeStatement\n    name: CodeStatement\n    nameWithType: CodeStatement\n    fullName: System.CodeDom.CodeStatement\n  - name: '[]'\n    nameWithType: '[]'\n    fullName: '[]'\n- uid: System.CodeDom.CodeIterationStatement.IncrementStatement\n  parent: System.CodeDom.CodeIterationStatement\n  isExternal: false\n  name: IncrementStatement\n  nameWithType: CodeIterationStatement.IncrementStatement\n  fullName: CodeIterationStatement.IncrementStatement\n- uid: System.CodeDom.CodeIterationStatement.InitStatement\n  parent: System.CodeDom.CodeIterationStatement\n  isExternal: false\n  name: InitStatement\n  nameWithType: CodeIterationStatement.InitStatement\n  fullName: CodeIterationStatement.InitStatement\n- uid: System.CodeDom.CodeIterationStatement.Statements\n  parent: System.CodeDom.CodeIterationStatement\n  isExternal: false\n  name: Statements\n  nameWithType: CodeIterationStatement.Statements\n  fullName: CodeIterationStatement.Statements\n- uid: System.CodeDom.CodeStatementCollection\n  parent: System.CodeDom\n  isExternal: false\n  name: CodeStatementCollection\n  nameWithType: CodeStatementCollection\n  fullName: System.CodeDom.CodeStatementCollection\n- uid: System.CodeDom.CodeIterationStatement.TestExpression\n  parent: System.CodeDom.CodeIterationStatement\n  isExternal: false\n  name: TestExpression\n  nameWithType: CodeIterationStatement.TestExpression\n  fullName: CodeIterationStatement.TestExpression\n- uid: System.CodeDom.CodeIterationStatement.#ctor*\n  parent: System.CodeDom.CodeIterationStatement\n  isExternal: false\n  name: CodeIterationStatement\n  nameWithType: CodeIterationStatement.CodeIterationStatement\n  fullName: CodeIterationStatement.CodeIterationStatement\n  monikers:\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - xamarinmac-3.0\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.CodeDom/CodeIterationStatement.xml\n- uid: System.CodeDom.CodeIterationStatement.IncrementStatement*\n  parent: System.CodeDom.CodeIterationStatement\n  isExternal: false\n  name: IncrementStatement\n  nameWithType: CodeIterationStatement.IncrementStatement\n  fullName: CodeIterationStatement.IncrementStatement\n  monikers:\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - xamarinmac-3.0\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.CodeDom/CodeIterationStatement.xml\n- uid: System.CodeDom.CodeIterationStatement.InitStatement*\n  parent: System.CodeDom.CodeIterationStatement\n  isExternal: false\n  name: InitStatement\n  nameWithType: CodeIterationStatement.InitStatement\n  fullName: CodeIterationStatement.InitStatement\n  monikers:\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - xamarinmac-3.0\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.CodeDom/CodeIterationStatement.xml\n- uid: System.CodeDom.CodeIterationStatement.Statements*\n  parent: System.CodeDom.CodeIterationStatement\n  isExternal: false\n  name: Statements\n  nameWithType: CodeIterationStatement.Statements\n  fullName: CodeIterationStatement.Statements\n  monikers:\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - xamarinmac-3.0\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.CodeDom/CodeIterationStatement.xml\n- uid: System.CodeDom.CodeIterationStatement.TestExpression*\n  parent: System.CodeDom.CodeIterationStatement\n  isExternal: false\n  name: TestExpression\n  nameWithType: CodeIterationStatement.TestExpression\n  fullName: CodeIterationStatement.TestExpression\n  monikers:\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - xamarinmac-3.0\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.CodeDom/CodeIterationStatement.xml\n- uid: System.Object.Equals(System.Object)\n  parent: System.Object\n  isExternal: false\n  name: Equals(Object)\n  nameWithType: Object.Equals(Object)\n  fullName: Object.Equals(Object)\n- uid: System.Object.Equals(System.Object,System.Object)\n  parent: System.Object\n  isExternal: false\n  name: Equals(Object, Object)\n  nameWithType: Object.Equals(Object, Object)\n  fullName: Object.Equals(Object, Object)\n- uid: System.Object.GetHashCode\n  parent: System.Object\n  isExternal: false\n  name: GetHashCode()\n  nameWithType: Object.GetHashCode()\n  fullName: Object.GetHashCode()\n- uid: System.Object.GetType\n  parent: System.Object\n  isExternal: false\n  name: GetType()\n  nameWithType: Object.GetType()\n  fullName: Object.GetType()\n- uid: System.Object.MemberwiseClone\n  parent: System.Object\n  isExternal: false\n  name: MemberwiseClone()\n  nameWithType: Object.MemberwiseClone()\n  fullName: Object.MemberwiseClone()\n- uid: System.Object.ReferenceEquals(System.Object,System.Object)\n  parent: System.Object\n  isExternal: false\n  name: ReferenceEquals(Object, Object)\n  nameWithType: Object.ReferenceEquals(Object, Object)\n  fullName: Object.ReferenceEquals(Object, Object)\n- uid: System.Object.ToString\n  parent: System.Object\n  isExternal: false\n  name: ToString()\n  nameWithType: Object.ToString()\n  fullName: Object.ToString()\n- uid: System.CodeDom.CodeObject.UserData\n  parent: System.CodeDom.CodeObject\n  isExternal: false\n  name: UserData\n  nameWithType: CodeObject.UserData\n  fullName: CodeObject.UserData\n- uid: System.CodeDom.CodeStatement.EndDirectives\n  parent: System.CodeDom.CodeStatement\n  isExternal: false\n  name: EndDirectives\n  nameWithType: CodeStatement.EndDirectives\n  fullName: CodeStatement.EndDirectives\n- uid: System.CodeDom.CodeStatement.LinePragma\n  parent: System.CodeDom.CodeStatement\n  isExternal: false\n  name: LinePragma\n  nameWithType: CodeStatement.LinePragma\n  fullName: CodeStatement.LinePragma\n- uid: System.CodeDom.CodeStatement.StartDirectives\n  parent: System.CodeDom.CodeStatement\n  isExternal: false\n  name: StartDirectives\n  nameWithType: CodeStatement.StartDirectives\n  fullName: CodeStatement.StartDirectives\n"}