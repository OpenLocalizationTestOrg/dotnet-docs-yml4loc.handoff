{"nodes":[{"content":"<xref href=\"System.Windows.FrameworkContentElement\"></xref> is the WPF framework-level implementation and expansion of the <xref href=\"System.Windows.ContentElement\"></xref> base class. <xref href=\"System.Windows.FrameworkContentElement\"></xref> adds support for additional input APIs (including tooltips and context menus), storyboards, data context for data binding, styles support, and logical tree helper APIs.","nodes":[{"pos":[0,414],"content":"<xref href=\"System.Windows.FrameworkContentElement\"></xref> is the WPF framework-level implementation and expansion of the <xref href=\"System.Windows.ContentElement\"></xref> base class. <xref href=\"System.Windows.FrameworkContentElement\"></xref> adds support for additional input APIs (including tooltips and context menus), storyboards, data context for data binding, styles support, and logical tree helper APIs.","nodes":[{"content":"<ph id=\"ph1\">&lt;xref href=\"System.Windows.FrameworkContentElement\"&gt;&lt;/xref&gt;</ph> is the WPF framework-level implementation and expansion of the <ph id=\"ph2\">&lt;xref href=\"System.Windows.ContentElement\"&gt;&lt;/xref&gt;</ph> base class.","pos":[0,185],"source":"<xref href=\"System.Windows.FrameworkContentElement\"></xref> is the WPF framework-level implementation and expansion of the <xref href=\"System.Windows.ContentElement\"></xref> base class."},{"content":"<ph id=\"ph1\">&lt;xref href=\"System.Windows.FrameworkContentElement\"&gt;&lt;/xref&gt;</ph> adds support for additional input APIs (including tooltips and context menus), storyboards, data context for data binding, styles support, and logical tree helper APIs.","pos":[186,414],"source":"<xref href=\"System.Windows.FrameworkContentElement\"></xref> adds support for additional input APIs (including tooltips and context menus), storyboards, data context for data binding, styles support, and logical tree helper APIs."}]}],"pos":[6262,6677],"yaml":true},{"content":"<xref:System.Windows.FrameworkContentElement> does not yet define its own rendering behavior; instantiating an actual <xref:System.Windows.FrameworkContentElement> class instance in code or markup is possible but displays nothing in a [!INCLUDE[TLA2#tla_winclient](~/includes/tla2sharptla-winclient-md.md)] application [!INCLUDE[TLA#tla_ui](~/includes/tlasharptla-ui-md.md)]. Rendering logic must be provided by classes that take <xref:System.Windows.FrameworkContentElement> child elements as part of their content model, or in <xref:System.Windows.FrameworkContentElement> derived classes.  \n  \n <xref:System.Windows.FrameworkContentElement> deliberately parallels many of the same [!INCLUDE[TLA2#tla_api#plural](~/includes/tla2sharptla-apisharpplural-md.md)] as <xref:System.Windows.FrameworkElement>. Note that certain [!INCLUDE[TLA2#tla_api#plural](~/includes/tla2sharptla-apisharpplural-md.md)] found on <xref:System.Windows.FrameworkElement> will not have a <xref:System.Windows.FrameworkContentElement> equivalent. Several of the <xref:System.Windows.FrameworkElement> [!INCLUDE[TLA2#tla_api#plural](~/includes/tla2sharptla-apisharpplural-md.md)] are for functionality such as geometry representation or layout, which are not relevant for a <xref:System.Windows.FrameworkContentElement>.  \n  \n The majority of existing <xref:System.Windows.FrameworkContentElement> derived classes will be found in the <xref:System.Windows.Documents> namespace. Many of these derived classes implement elements for the flow document model. Certain derived classes such as <xref:System.Windows.Documents.Hyperlink> have some control-like functionality, but are derived from <xref:System.Windows.FrameworkContentElement> such that the control-like elements can still participate in the flow document model.","nodes":[{"pos":[0,591],"content":"<xref:System.Windows.FrameworkContentElement> does not yet define its own rendering behavior; instantiating an actual <xref:System.Windows.FrameworkContentElement> class instance in code or markup is possible but displays nothing in a [!INCLUDE[TLA2#tla_winclient](~/includes/tla2sharptla-winclient-md.md)] application [!INCLUDE[TLA#tla_ui](~/includes/tlasharptla-ui-md.md)]. Rendering logic must be provided by classes that take <xref:System.Windows.FrameworkContentElement> child elements as part of their content model, or in <xref:System.Windows.FrameworkContentElement> derived classes.","nodes":[{"content":"<ph id=\"ph1\">&lt;xref:System.Windows.FrameworkContentElement&gt;</ph> does not yet define its own rendering behavior; instantiating an actual <ph id=\"ph2\">&lt;xref:System.Windows.FrameworkContentElement&gt;</ph> class instance in code or markup is possible but displays nothing in a <ph id=\"ph3\">[!INCLUDE[TLA2#tla_winclient](~/includes/tla2sharptla-winclient-md.md)]</ph> application <ph id=\"ph4\">[!INCLUDE[TLA#tla_ui](~/includes/tlasharptla-ui-md.md)]</ph>.","pos":[0,375],"source":"<xref:System.Windows.FrameworkContentElement> does not yet define its own rendering behavior; instantiating an actual <xref:System.Windows.FrameworkContentElement> class instance in code or markup is possible but displays nothing in a [!INCLUDE[TLA2#tla_winclient](~/includes/tla2sharptla-winclient-md.md)] application [!INCLUDE[TLA#tla_ui](~/includes/tlasharptla-ui-md.md)]."},{"content":"Rendering logic must be provided by classes that take <ph id=\"ph1\">&lt;xref:System.Windows.FrameworkContentElement&gt;</ph> child elements as part of their content model, or in <ph id=\"ph2\">&lt;xref:System.Windows.FrameworkContentElement&gt;</ph> derived classes.","pos":[376,591],"source":" Rendering logic must be provided by classes that take <xref:System.Windows.FrameworkContentElement> child elements as part of their content model, or in <xref:System.Windows.FrameworkContentElement> derived classes."}]},{"pos":[598,1295],"content":"<xref:System.Windows.FrameworkContentElement> deliberately parallels many of the same [!INCLUDE[TLA2#tla_api#plural](~/includes/tla2sharptla-apisharpplural-md.md)] as <xref:System.Windows.FrameworkElement>. Note that certain [!INCLUDE[TLA2#tla_api#plural](~/includes/tla2sharptla-apisharpplural-md.md)] found on <xref:System.Windows.FrameworkElement> will not have a <xref:System.Windows.FrameworkContentElement> equivalent. Several of the <xref:System.Windows.FrameworkElement> [!INCLUDE[TLA2#tla_api#plural](~/includes/tla2sharptla-apisharpplural-md.md)] are for functionality such as geometry representation or layout, which are not relevant for a <xref:System.Windows.FrameworkContentElement>.","nodes":[{"content":"<ph id=\"ph1\">&lt;xref:System.Windows.FrameworkContentElement&gt;</ph> deliberately parallels many of the same <ph id=\"ph2\">[!INCLUDE[TLA2#tla_api#plural](~/includes/tla2sharptla-apisharpplural-md.md)]</ph> as <ph id=\"ph3\">&lt;xref:System.Windows.FrameworkElement&gt;</ph>.","pos":[0,206],"source":"<xref:System.Windows.FrameworkContentElement> deliberately parallels many of the same [!INCLUDE[TLA2#tla_api#plural](~/includes/tla2sharptla-apisharpplural-md.md)] as <xref:System.Windows.FrameworkElement>."},{"content":"Note that certain <ph id=\"ph1\">[!INCLUDE[TLA2#tla_api#plural](~/includes/tla2sharptla-apisharpplural-md.md)]</ph> found on <ph id=\"ph2\">&lt;xref:System.Windows.FrameworkElement&gt;</ph> will not have a <ph id=\"ph3\">&lt;xref:System.Windows.FrameworkContentElement&gt;</ph> equivalent.","pos":[207,424],"source":" Note that certain [!INCLUDE[TLA2#tla_api#plural](~/includes/tla2sharptla-apisharpplural-md.md)] found on <xref:System.Windows.FrameworkElement> will not have a <xref:System.Windows.FrameworkContentElement> equivalent."},{"content":"Several of the <ph id=\"ph1\">&lt;xref:System.Windows.FrameworkElement&gt;</ph> <ph id=\"ph2\">[!INCLUDE[TLA2#tla_api#plural](~/includes/tla2sharptla-apisharpplural-md.md)]</ph> are for functionality such as geometry representation or layout, which are not relevant for a <ph id=\"ph3\">&lt;xref:System.Windows.FrameworkContentElement&gt;</ph>.","pos":[425,697],"source":" Several of the <xref:System.Windows.FrameworkElement> [!INCLUDE[TLA2#tla_api#plural](~/includes/tla2sharptla-apisharpplural-md.md)] are for functionality such as geometry representation or layout, which are not relevant for a <xref:System.Windows.FrameworkContentElement>."}]},{"pos":[1302,1795],"content":"The majority of existing <xref:System.Windows.FrameworkContentElement> derived classes will be found in the <xref:System.Windows.Documents> namespace. Many of these derived classes implement elements for the flow document model. Certain derived classes such as <xref:System.Windows.Documents.Hyperlink> have some control-like functionality, but are derived from <xref:System.Windows.FrameworkContentElement> such that the control-like elements can still participate in the flow document model.","nodes":[{"content":"The majority of existing <xref:System.Windows.FrameworkContentElement> derived classes will be found in the <xref:System.Windows.Documents> namespace. Many of these derived classes implement elements for the flow document model. Certain derived classes such as <xref:System.Windows.Documents.Hyperlink> have some control-like functionality, but are derived from <xref:System.Windows.FrameworkContentElement> such that the control-like elements can still participate in the flow document model.","pos":[0,493],"nodes":[{"content":"The majority of existing <ph id=\"ph1\">&lt;xref:System.Windows.FrameworkContentElement&gt;</ph> derived classes will be found in the <ph id=\"ph2\">&lt;xref:System.Windows.Documents&gt;</ph> namespace.","pos":[0,150],"source":"The majority of existing <xref:System.Windows.FrameworkContentElement> derived classes will be found in the <xref:System.Windows.Documents> namespace."},{"content":"Many of these derived classes implement elements for the flow document model.","pos":[151,228]},{"content":"Certain derived classes such as <ph id=\"ph1\">&lt;xref:System.Windows.Documents.Hyperlink&gt;</ph> have some control-like functionality, but are derived from <ph id=\"ph2\">&lt;xref:System.Windows.FrameworkContentElement&gt;</ph> such that the control-like elements can still participate in the flow document model.","pos":[229,493],"source":" Certain derived classes such as <xref:System.Windows.Documents.Hyperlink> have some control-like functionality, but are derived from <xref:System.Windows.FrameworkContentElement> such that the control-like elements can still participate in the flow document model."}]}]}],"pos":[6688,8490],"yaml":true,"extradata":"MT"},{"content":"Initializes a new instance of the <xref href=\"System.Windows.FrameworkContentElement\"></xref> class.","nodes":[{"pos":[0,100],"content":"Initializes a new instance of the <ph id=\"ph1\">&lt;xref href=\"System.Windows.FrameworkContentElement\"&gt;&lt;/xref&gt;</ph> class.","source":"Initializes a new instance of the <xref href=\"System.Windows.FrameworkContentElement\"></xref> class."}],"pos":[33194,33295],"yaml":true},{"content":"Adds the provided element as a child of this element.","nodes":[{"pos":[0,53],"content":"Adds the provided element as a child of this element.","nodes":[{"content":"Adds the provided element as a child of this element.","pos":[0,53]}]}],"pos":[34498,34552],"yaml":true},{"content":"This method can throw an exception if called at a time when the logical tree is being iterated by another process.  \n  \n Most <xref:System.Windows.FrameworkContentElement> derived classes expose dedicated collections that are responsible for containment (for example, <xref:System.Windows.Documents.Span.Inlines%2A> on the <xref:System.Windows.Documents.Span> class; <xref:System.Windows.Documents.Section.Blocks%2A> on the <xref:System.Windows.Documents.Section> class). You can typically avoid any need to manipulate the logical tree directly if you derive from these classes instead. Working with the logical tree for content elements is an advanced scenario that may require a specialized parser or a specialized <xref:System.Windows.FrameworkElement> that acts as the parent rendering element (content host).  \n  \n For more information about how to use <xref:System.Windows.FrameworkContentElement.LogicalChildren%2A> and <xref:System.Windows.FrameworkContentElement.AddLogicalChild%2A>, see [Trees in WPF](~/docs/framework/wpf/advanced/trees-in-wpf.md).","nodes":[{"pos":[0,114],"content":"This method can throw an exception if called at a time when the logical tree is being iterated by another process.","nodes":[{"content":"This method can throw an exception if called at a time when the logical tree is being iterated by another process.","pos":[0,114]}]},{"pos":[121,813],"content":"Most <xref:System.Windows.FrameworkContentElement> derived classes expose dedicated collections that are responsible for containment (for example, <xref:System.Windows.Documents.Span.Inlines%2A> on the <xref:System.Windows.Documents.Span> class; <xref:System.Windows.Documents.Section.Blocks%2A> on the <xref:System.Windows.Documents.Section> class). You can typically avoid any need to manipulate the logical tree directly if you derive from these classes instead. Working with the logical tree for content elements is an advanced scenario that may require a specialized parser or a specialized <xref:System.Windows.FrameworkElement> that acts as the parent rendering element (content host).","nodes":[{"content":"Most <xref:System.Windows.FrameworkContentElement> derived classes expose dedicated collections that are responsible for containment (for example, <xref:System.Windows.Documents.Span.Inlines%2A> on the <xref:System.Windows.Documents.Span> class; <xref:System.Windows.Documents.Section.Blocks%2A> on the <xref:System.Windows.Documents.Section> class). You can typically avoid any need to manipulate the logical tree directly if you derive from these classes instead. Working with the logical tree for content elements is an advanced scenario that may require a specialized parser or a specialized <xref:System.Windows.FrameworkElement> that acts as the parent rendering element (content host).","pos":[0,692],"nodes":[{"content":"Most <ph id=\"ph1\">&lt;xref:System.Windows.FrameworkContentElement&gt;</ph> derived classes expose dedicated collections that are responsible for containment (for example, <ph id=\"ph2\">&lt;xref:System.Windows.Documents.Span.Inlines%2A&gt;</ph> on the <ph id=\"ph3\">&lt;xref:System.Windows.Documents.Span&gt;</ph> class; <ph id=\"ph4\">&lt;xref:System.Windows.Documents.Section.Blocks%2A&gt;</ph> on the <ph id=\"ph5\">&lt;xref:System.Windows.Documents.Section&gt;</ph> class).","pos":[0,350],"source":"Most <xref:System.Windows.FrameworkContentElement> derived classes expose dedicated collections that are responsible for containment (for example, <xref:System.Windows.Documents.Span.Inlines%2A> on the <xref:System.Windows.Documents.Span> class; <xref:System.Windows.Documents.Section.Blocks%2A> on the <xref:System.Windows.Documents.Section> class)."},{"content":"You can typically avoid any need to manipulate the logical tree directly if you derive from these classes instead.","pos":[351,465]},{"content":"Working with the logical tree for content elements is an advanced scenario that may require a specialized parser or a specialized <ph id=\"ph1\">&lt;xref:System.Windows.FrameworkElement&gt;</ph> that acts as the parent rendering element (content host).","pos":[466,692],"source":" Working with the logical tree for content elements is an advanced scenario that may require a specialized parser or a specialized <xref:System.Windows.FrameworkElement> that acts as the parent rendering element (content host)."}]}]},{"pos":[820,1059],"content":"For more information about how to use <ph id=\"ph1\">&lt;xref:System.Windows.FrameworkContentElement.LogicalChildren%2A&gt;</ph> and <ph id=\"ph2\">&lt;xref:System.Windows.FrameworkContentElement.AddLogicalChild%2A&gt;</ph>, see <bpt id=\"p1\">[</bpt>Trees in WPF<ept id=\"p1\">](~/docs/framework/wpf/advanced/trees-in-wpf.md)</ept>.","source":"For more information about how to use <xref:System.Windows.FrameworkContentElement.LogicalChildren%2A> and <xref:System.Windows.FrameworkContentElement.AddLogicalChild%2A>, see [Trees in WPF](~/docs/framework/wpf/advanced/trees-in-wpf.md)."}],"pos":[34563,35629],"yaml":true,"extradata":"MT"},{"content":"The child element to be added.","nodes":[{"pos":[0,30],"content":"The child element to be added.","nodes":[{"content":"The child element to be added.","pos":[0,30]}]}],"pos":[35776,35807],"yaml":true},{"content":"Called before an element is initialized.","nodes":[{"pos":[0,40],"content":"Called before an element is initialized.","nodes":[{"content":"Called before an element is initialized.","pos":[0,40]}]}],"pos":[36844,36885],"yaml":true},{"content":"Begins the sequence of actions that are contained in the provided storyboard.","nodes":[{"pos":[0,77],"content":"Begins the sequence of actions that are contained in the provided storyboard.","nodes":[{"content":"Begins the sequence of actions that are contained in the provided storyboard.","pos":[0,77]}]}],"pos":[38165,38243],"yaml":true},{"content":"For the signatures that do not use the `isControllable`, parameter, or when that parameter is specified `false`, the timeline clocks associated with the animation are removed as soon as it reaches the \"Fill\" period. Therefore the animation cannot be restarted after being run once. Note that controlling an animation also requires that the storyboard be named or accessible as an instance in code.","nodes":[{"pos":[0,397],"content":"For the signatures that do not use the `isControllable`, parameter, or when that parameter is specified `false`, the timeline clocks associated with the animation are removed as soon as it reaches the \"Fill\" period. Therefore the animation cannot be restarted after being run once. Note that controlling an animation also requires that the storyboard be named or accessible as an instance in code.","nodes":[{"content":"For the signatures that do not use the <ph id=\"ph1\">`isControllable`</ph>, parameter, or when that parameter is specified <ph id=\"ph2\">`false`</ph>, the timeline clocks associated with the animation are removed as soon as it reaches the \"Fill\" period.","pos":[0,215],"source":"For the signatures that do not use the `isControllable`, parameter, or when that parameter is specified `false`, the timeline clocks associated with the animation are removed as soon as it reaches the \"Fill\" period."},{"content":"Therefore the animation cannot be restarted after being run once.","pos":[216,281]},{"content":"Note that controlling an animation also requires that the storyboard be named or accessible as an instance in code.","pos":[282,397]}]}],"pos":[38254,38652],"yaml":true,"extradata":"MT"},{"content":"The storyboard to begin.","nodes":[{"pos":[0,24],"content":"The storyboard to begin.","nodes":[{"content":"The storyboard to begin.","pos":[0,24]}]}],"pos":[38869,38894],"yaml":true},{"content":"Begins the sequence of actions that are contained in the provided storyboard, with options specified for what should occur if the property is already animated.","nodes":[{"pos":[0,159],"content":"Begins the sequence of actions that are contained in the provided storyboard, with options specified for what should occur if the property is already animated.","nodes":[{"content":"Begins the sequence of actions that are contained in the provided storyboard, with options specified for what should occur if the property is already animated.","pos":[0,159]}]}],"pos":[40318,40478],"yaml":true},{"content":"For the signatures that do not use the `isControllable`, parameter, or when that parameter is specified `false`, the timeline clocks associated with the animation are removed as soon as it reaches the \"Fill\" period. Therefore the animation cannot be restarted after being run once. Note that controlling an animation also requires that the storyboard be named or accessible as an instance in code.  \n  \n## Using the Compose HandoffBehavior  \n When you apply a <xref:System.Windows.Media.Animation.Storyboard>, <xref:System.Windows.Media.Animation.AnimationTimeline>, or <xref:System.Windows.Media.Animation.AnimationClock> to a property by using the <xref:System.Windows.Media.Animation.HandoffBehavior.Compose> <xref:System.Windows.Media.Animation.HandoffBehavior>, any <xref:System.Windows.Media.Animation.Clock> objects previously associated with that property continue to consume system resources; the timing system does not remove the clocks automatically.  \n  \n To avoid performance issues when you apply a large number of clocks by using <xref:System.Windows.Media.Animation.HandoffBehavior.Compose>, you should remove composing clocks from the animated property after they complete. There are several ways to remove a clock:  \n  \n-   To remove all clocks from a property, use the <xref:System.Windows.Media.Animation.Animatable.ApplyAnimationClock%28System.Windows.DependencyProperty%2CSystem.Windows.Media.Animation.AnimationClock%29> or <xref:System.Windows.Media.Animation.Animatable.BeginAnimation%28System.Windows.DependencyProperty%2CSystem.Windows.Media.Animation.AnimationTimeline%29> method of the animated object. Specify the property being animated as the first parameter, and `null` as the second. This removes all animation clocks from the property.  \n  \n-   To remove a specific <xref:System.Windows.Media.Animation.AnimationClock> from a list of clocks, use the <xref:System.Windows.Media.Animation.Clock.Controller%2A> property of the <xref:System.Windows.Media.Animation.AnimationClock> to retrieve a <xref:System.Windows.Media.Animation.ClockController>, then call the <xref:System.Windows.Media.Animation.ClockController.Remove%2A> method of the <xref:System.Windows.Media.Animation.ClockController>. This is typically done in the <xref:System.Windows.Media.Animation.Clock.Completed> event handler for a clock. Note that only root clocks can be controlled by a <xref:System.Windows.Media.Animation.ClockController>; the <xref:System.Windows.Media.Animation.Clock.Controller%2A> property of a child clock returns `null`. Note also that the <xref:System.Windows.Media.Animation.Clock.Completed> event is not raised if the effective duration of the clock is forever.  In that case, the user must determine when to call <xref:System.Windows.Media.Animation.ClockController.Remove%2A>.  \n  \n This is primarily an issue for animations on objects that have a long lifetime.  When an object is garbage collected, its clocks are also disconnected and garbage collected.  \n  \n For more information about clock objects, see [Animation and Timing System Overview](~/docs/framework/wpf/graphics-multimedia/animation-and-timing-system-overview.md).","nodes":[{"pos":[0,397],"content":"For the signatures that do not use the `isControllable`, parameter, or when that parameter is specified `false`, the timeline clocks associated with the animation are removed as soon as it reaches the \"Fill\" period. Therefore the animation cannot be restarted after being run once. Note that controlling an animation also requires that the storyboard be named or accessible as an instance in code.","nodes":[{"content":"For the signatures that do not use the <ph id=\"ph1\">`isControllable`</ph>, parameter, or when that parameter is specified <ph id=\"ph2\">`false`</ph>, the timeline clocks associated with the animation are removed as soon as it reaches the \"Fill\" period.","pos":[0,215],"source":"For the signatures that do not use the `isControllable`, parameter, or when that parameter is specified `false`, the timeline clocks associated with the animation are removed as soon as it reaches the \"Fill\" period."},{"content":"Therefore the animation cannot be restarted after being run once.","pos":[216,281]},{"content":"Note that controlling an animation also requires that the storyboard be named or accessible as an instance in code.","pos":[282,397]}]},{"pos":[406,439],"content":"Using the Compose HandoffBehavior","linkify":"Using the Compose HandoffBehavior","nodes":[{"content":"Using the Compose HandoffBehavior","pos":[0,33]}]},{"pos":[443,961],"content":"When you apply a <xref:System.Windows.Media.Animation.Storyboard>, <xref:System.Windows.Media.Animation.AnimationTimeline>, or <xref:System.Windows.Media.Animation.AnimationClock> to a property by using the <xref:System.Windows.Media.Animation.HandoffBehavior.Compose> <xref:System.Windows.Media.Animation.HandoffBehavior>, any <xref:System.Windows.Media.Animation.Clock> objects previously associated with that property continue to consume system resources; the timing system does not remove the clocks automatically.","nodes":[{"content":"When you apply a <ph id=\"ph1\">&lt;xref:System.Windows.Media.Animation.Storyboard&gt;</ph>, <ph id=\"ph2\">&lt;xref:System.Windows.Media.Animation.AnimationTimeline&gt;</ph>, or <ph id=\"ph3\">&lt;xref:System.Windows.Media.Animation.AnimationClock&gt;</ph> to a property by using the <ph id=\"ph4\">&lt;xref:System.Windows.Media.Animation.HandoffBehavior.Compose&gt;</ph> <ph id=\"ph5\">&lt;xref:System.Windows.Media.Animation.HandoffBehavior&gt;</ph>, any <ph id=\"ph6\">&lt;xref:System.Windows.Media.Animation.Clock&gt;</ph> objects previously associated with that property continue to consume system resources; the timing system does not remove the clocks automatically.","pos":[0,518],"source":"When you apply a <xref:System.Windows.Media.Animation.Storyboard>, <xref:System.Windows.Media.Animation.AnimationTimeline>, or <xref:System.Windows.Media.Animation.AnimationClock> to a property by using the <xref:System.Windows.Media.Animation.HandoffBehavior.Compose> <xref:System.Windows.Media.Animation.HandoffBehavior>, any <xref:System.Windows.Media.Animation.Clock> objects previously associated with that property continue to consume system resources; the timing system does not remove the clocks automatically."}]},{"pos":[968,1232],"content":"To avoid performance issues when you apply a large number of clocks by using <xref:System.Windows.Media.Animation.HandoffBehavior.Compose>, you should remove composing clocks from the animated property after they complete. There are several ways to remove a clock:","nodes":[{"content":"To avoid performance issues when you apply a large number of clocks by using <xref:System.Windows.Media.Animation.HandoffBehavior.Compose>, you should remove composing clocks from the animated property after they complete. There are several ways to remove a clock:","pos":[0,264],"nodes":[{"content":"To avoid performance issues when you apply a large number of clocks by using <ph id=\"ph1\">&lt;xref:System.Windows.Media.Animation.HandoffBehavior.Compose&gt;</ph>, you should remove composing clocks from the animated property after they complete.","pos":[0,222],"source":"To avoid performance issues when you apply a large number of clocks by using <xref:System.Windows.Media.Animation.HandoffBehavior.Compose>, you should remove composing clocks from the animated property after they complete."},{"content":"There are several ways to remove a clock:","pos":[223,264]}]}]},{"pos":[1242,1770],"content":"To remove all clocks from a property, use the <xref:System.Windows.Media.Animation.Animatable.ApplyAnimationClock%28System.Windows.DependencyProperty%2CSystem.Windows.Media.Animation.AnimationClock%29> or <xref:System.Windows.Media.Animation.Animatable.BeginAnimation%28System.Windows.DependencyProperty%2CSystem.Windows.Media.Animation.AnimationTimeline%29> method of the animated object. Specify the property being animated as the first parameter, and `null` as the second. This removes all animation clocks from the property.","nodes":[{"content":"To remove all clocks from a property, use the <ph id=\"ph1\">&lt;xref:System.Windows.Media.Animation.Animatable.ApplyAnimationClock%28System.Windows.DependencyProperty%2CSystem.Windows.Media.Animation.AnimationClock%29&gt;</ph> or <ph id=\"ph2\">&lt;xref:System.Windows.Media.Animation.Animatable.BeginAnimation%28System.Windows.DependencyProperty%2CSystem.Windows.Media.Animation.AnimationTimeline%29&gt;</ph> method of the animated object.","pos":[0,389],"source":"To remove all clocks from a property, use the <xref:System.Windows.Media.Animation.Animatable.ApplyAnimationClock%28System.Windows.DependencyProperty%2CSystem.Windows.Media.Animation.AnimationClock%29> or <xref:System.Windows.Media.Animation.Animatable.BeginAnimation%28System.Windows.DependencyProperty%2CSystem.Windows.Media.Animation.AnimationTimeline%29> method of the animated object."},{"content":"Specify the property being animated as the first parameter, and <ph id=\"ph1\">`null`</ph> as the second.","pos":[390,475],"source":" Specify the property being animated as the first parameter, and `null` as the second."},{"content":"This removes all animation clocks from the property.","pos":[476,528]}]},{"pos":[1780,2808],"content":"To remove a specific <xref:System.Windows.Media.Animation.AnimationClock> from a list of clocks, use the <xref:System.Windows.Media.Animation.Clock.Controller%2A> property of the <xref:System.Windows.Media.Animation.AnimationClock> to retrieve a <xref:System.Windows.Media.Animation.ClockController>, then call the <xref:System.Windows.Media.Animation.ClockController.Remove%2A> method of the <xref:System.Windows.Media.Animation.ClockController>. This is typically done in the <xref:System.Windows.Media.Animation.Clock.Completed> event handler for a clock. Note that only root clocks can be controlled by a <xref:System.Windows.Media.Animation.ClockController>; the <xref:System.Windows.Media.Animation.Clock.Controller%2A> property of a child clock returns `null`. Note also that the <xref:System.Windows.Media.Animation.Clock.Completed> event is not raised if the effective duration of the clock is forever.  In that case, the user must determine when to call <xref:System.Windows.Media.Animation.ClockController.Remove%2A>.","nodes":[{"content":"To remove a specific <ph id=\"ph1\">&lt;xref:System.Windows.Media.Animation.AnimationClock&gt;</ph> from a list of clocks, use the <ph id=\"ph2\">&lt;xref:System.Windows.Media.Animation.Clock.Controller%2A&gt;</ph> property of the <ph id=\"ph3\">&lt;xref:System.Windows.Media.Animation.AnimationClock&gt;</ph> to retrieve a <ph id=\"ph4\">&lt;xref:System.Windows.Media.Animation.ClockController&gt;</ph>, then call the <ph id=\"ph5\">&lt;xref:System.Windows.Media.Animation.ClockController.Remove%2A&gt;</ph> method of the <ph id=\"ph6\">&lt;xref:System.Windows.Media.Animation.ClockController&gt;</ph>.","pos":[0,447],"source":"To remove a specific <xref:System.Windows.Media.Animation.AnimationClock> from a list of clocks, use the <xref:System.Windows.Media.Animation.Clock.Controller%2A> property of the <xref:System.Windows.Media.Animation.AnimationClock> to retrieve a <xref:System.Windows.Media.Animation.ClockController>, then call the <xref:System.Windows.Media.Animation.ClockController.Remove%2A> method of the <xref:System.Windows.Media.Animation.ClockController>."},{"content":"This is typically done in the <ph id=\"ph1\">&lt;xref:System.Windows.Media.Animation.Clock.Completed&gt;</ph> event handler for a clock.","pos":[448,558],"source":" This is typically done in the <xref:System.Windows.Media.Animation.Clock.Completed> event handler for a clock."},{"content":"Note that only root clocks can be controlled by a <ph id=\"ph1\">&lt;xref:System.Windows.Media.Animation.ClockController&gt;</ph>; the <ph id=\"ph2\">&lt;xref:System.Windows.Media.Animation.Clock.Controller%2A&gt;</ph> property of a child clock returns <ph id=\"ph3\">`null`</ph>.","pos":[559,767],"source":" Note that only root clocks can be controlled by a <xref:System.Windows.Media.Animation.ClockController>; the <xref:System.Windows.Media.Animation.Clock.Controller%2A> property of a child clock returns `null`."},{"content":"Note also that the <ph id=\"ph1\">&lt;xref:System.Windows.Media.Animation.Clock.Completed&gt;</ph> event is not raised if the effective duration of the clock is forever.","pos":[768,911],"source":" Note also that the <xref:System.Windows.Media.Animation.Clock.Completed> event is not raised if the effective duration of the clock is forever."},{"content":"In that case, the user must determine when to call <ph id=\"ph1\">&lt;xref:System.Windows.Media.Animation.ClockController.Remove%2A&gt;</ph>.","pos":[913,1028],"source":"  In that case, the user must determine when to call <xref:System.Windows.Media.Animation.ClockController.Remove%2A>."}]},{"pos":[2815,2988],"content":"This is primarily an issue for animations on objects that have a long lifetime.  When an object is garbage collected, its clocks are also disconnected and garbage collected.","nodes":[{"content":"This is primarily an issue for animations on objects that have a long lifetime.  When an object is garbage collected, its clocks are also disconnected and garbage collected.","pos":[0,173],"nodes":[{"content":"This is primarily an issue for animations on objects that have a long lifetime.","pos":[0,79]},{"content":"When an object is garbage collected, its clocks are also disconnected and garbage collected.","pos":[81,173]}]}]},{"pos":[2995,3162],"content":"For more information about clock objects, see <bpt id=\"p1\">[</bpt>Animation and Timing System Overview<ept id=\"p1\">](~/docs/framework/wpf/graphics-multimedia/animation-and-timing-system-overview.md)</ept>.","source":"For more information about clock objects, see [Animation and Timing System Overview](~/docs/framework/wpf/graphics-multimedia/animation-and-timing-system-overview.md)."}],"pos":[40489,43669],"yaml":true,"extradata":"MT"},{"content":"The storyboard to begin.","nodes":[{"pos":[0,24],"content":"The storyboard to begin.","nodes":[{"content":"The storyboard to begin.","pos":[0,24]}]}],"pos":[43950,43975],"yaml":true},{"content":"A value of the enumeration that describes behavior to use if a property described in the storyboard is already animated.","nodes":[{"pos":[0,120],"content":"A value of the enumeration that describes behavior to use if a property described in the storyboard is already animated.","nodes":[{"content":"A value of the enumeration that describes behavior to use if a property described in the storyboard is already animated.","pos":[0,120]}]}],"pos":[44079,44200],"yaml":true},{"content":"Begins the sequence of actions that are contained in the provided storyboard, with specified state for control of the animation after it is started.","nodes":[{"pos":[0,148],"content":"Begins the sequence of actions that are contained in the provided storyboard, with specified state for control of the animation after it is started.","nodes":[{"content":"Begins the sequence of actions that are contained in the provided storyboard, with specified state for control of the animation after it is started.","pos":[0,148]}]}],"pos":[45696,45845],"yaml":true},{"content":"For the signatures that do not use the `isControllable`, parameter, or when that parameter is specified `false`, the timeline clocks associated with the animation are removed as soon as it reaches the \"Fill\" period. Therefore the animation cannot be restarted after being run once. Note that controlling an animation also requires that the storyboard be named or accessible as an instance in code.  \n  \n## Using the Compose HandoffBehavior  \n When you apply a <xref:System.Windows.Media.Animation.Storyboard>, <xref:System.Windows.Media.Animation.AnimationTimeline>, or <xref:System.Windows.Media.Animation.AnimationClock> to a property by using the <xref:System.Windows.Media.Animation.HandoffBehavior.Compose> <xref:System.Windows.Media.Animation.HandoffBehavior>, any <xref:System.Windows.Media.Animation.Clock> objects previously associated with that property continue to consume system resources; the timing system does not remove these clocks automatically.  \n  \n To avoid performance issues when you apply a large number of clocks by using <xref:System.Windows.Media.Animation.HandoffBehavior.Compose>, you should remove composing clocks from the animated property after they complete. There are several ways to remove a clock:  \n  \n-   To remove all clocks from a property, use the <xref:System.Windows.Media.Animation.Animatable.ApplyAnimationClock%28System.Windows.DependencyProperty%2CSystem.Windows.Media.Animation.AnimationClock%29> or <xref:System.Windows.Media.Animation.Animatable.BeginAnimation%28System.Windows.DependencyProperty%2CSystem.Windows.Media.Animation.AnimationTimeline%29> method of the animated object. Specify the property being animated as the first parameter, and `null` as the second. This removes all animation clocks from the property.  \n  \n-   To remove a specific <xref:System.Windows.Media.Animation.AnimationClock> from a list of clocks, use the <xref:System.Windows.Media.Animation.Clock.Controller%2A> property of the <xref:System.Windows.Media.Animation.AnimationClock> to retrieve a <xref:System.Windows.Media.Animation.ClockController>, then call the <xref:System.Windows.Media.Animation.ClockController.Remove%2A> method of the <xref:System.Windows.Media.Animation.ClockController>. This is typically done in the <xref:System.Windows.Media.Animation.Clock.Completed> event handler for a clock. Note that only root clocks can be controlled by a <xref:System.Windows.Media.Animation.ClockController>; the <xref:System.Windows.Media.Animation.Clock.Controller%2A> property of a child clock returns `null`. Note also that the <xref:System.Windows.Media.Animation.Clock.Completed> event is not raised if the effective duration of the clock is forever.  In that case, the user must determine when to call <xref:System.Windows.Media.Animation.ClockController.Remove%2A>.  \n  \n This is primarily an issue for animations on objects that have a long lifetime.  When an object is garbage collected, its clocks are also disconnected and garbage collected.  \n  \n For more information about clock objects, see [Animation and Timing System Overview](~/docs/framework/wpf/graphics-multimedia/animation-and-timing-system-overview.md).","nodes":[{"pos":[0,397],"content":"For the signatures that do not use the `isControllable`, parameter, or when that parameter is specified `false`, the timeline clocks associated with the animation are removed as soon as it reaches the \"Fill\" period. Therefore the animation cannot be restarted after being run once. Note that controlling an animation also requires that the storyboard be named or accessible as an instance in code.","nodes":[{"content":"For the signatures that do not use the <ph id=\"ph1\">`isControllable`</ph>, parameter, or when that parameter is specified <ph id=\"ph2\">`false`</ph>, the timeline clocks associated with the animation are removed as soon as it reaches the \"Fill\" period.","pos":[0,215],"source":"For the signatures that do not use the `isControllable`, parameter, or when that parameter is specified `false`, the timeline clocks associated with the animation are removed as soon as it reaches the \"Fill\" period."},{"content":"Therefore the animation cannot be restarted after being run once.","pos":[216,281]},{"content":"Note that controlling an animation also requires that the storyboard be named or accessible as an instance in code.","pos":[282,397]}]},{"pos":[406,439],"content":"Using the Compose HandoffBehavior","linkify":"Using the Compose HandoffBehavior","nodes":[{"content":"Using the Compose HandoffBehavior","pos":[0,33]}]},{"pos":[443,963],"content":"When you apply a <xref:System.Windows.Media.Animation.Storyboard>, <xref:System.Windows.Media.Animation.AnimationTimeline>, or <xref:System.Windows.Media.Animation.AnimationClock> to a property by using the <xref:System.Windows.Media.Animation.HandoffBehavior.Compose> <xref:System.Windows.Media.Animation.HandoffBehavior>, any <xref:System.Windows.Media.Animation.Clock> objects previously associated with that property continue to consume system resources; the timing system does not remove these clocks automatically.","nodes":[{"content":"When you apply a <ph id=\"ph1\">&lt;xref:System.Windows.Media.Animation.Storyboard&gt;</ph>, <ph id=\"ph2\">&lt;xref:System.Windows.Media.Animation.AnimationTimeline&gt;</ph>, or <ph id=\"ph3\">&lt;xref:System.Windows.Media.Animation.AnimationClock&gt;</ph> to a property by using the <ph id=\"ph4\">&lt;xref:System.Windows.Media.Animation.HandoffBehavior.Compose&gt;</ph> <ph id=\"ph5\">&lt;xref:System.Windows.Media.Animation.HandoffBehavior&gt;</ph>, any <ph id=\"ph6\">&lt;xref:System.Windows.Media.Animation.Clock&gt;</ph> objects previously associated with that property continue to consume system resources; the timing system does not remove these clocks automatically.","pos":[0,520],"source":"When you apply a <xref:System.Windows.Media.Animation.Storyboard>, <xref:System.Windows.Media.Animation.AnimationTimeline>, or <xref:System.Windows.Media.Animation.AnimationClock> to a property by using the <xref:System.Windows.Media.Animation.HandoffBehavior.Compose> <xref:System.Windows.Media.Animation.HandoffBehavior>, any <xref:System.Windows.Media.Animation.Clock> objects previously associated with that property continue to consume system resources; the timing system does not remove these clocks automatically."}]},{"pos":[970,1234],"content":"To avoid performance issues when you apply a large number of clocks by using <xref:System.Windows.Media.Animation.HandoffBehavior.Compose>, you should remove composing clocks from the animated property after they complete. There are several ways to remove a clock:","nodes":[{"content":"To avoid performance issues when you apply a large number of clocks by using <xref:System.Windows.Media.Animation.HandoffBehavior.Compose>, you should remove composing clocks from the animated property after they complete. There are several ways to remove a clock:","pos":[0,264],"nodes":[{"content":"To avoid performance issues when you apply a large number of clocks by using <ph id=\"ph1\">&lt;xref:System.Windows.Media.Animation.HandoffBehavior.Compose&gt;</ph>, you should remove composing clocks from the animated property after they complete.","pos":[0,222],"source":"To avoid performance issues when you apply a large number of clocks by using <xref:System.Windows.Media.Animation.HandoffBehavior.Compose>, you should remove composing clocks from the animated property after they complete."},{"content":"There are several ways to remove a clock:","pos":[223,264]}]}]},{"pos":[1244,1772],"content":"To remove all clocks from a property, use the <xref:System.Windows.Media.Animation.Animatable.ApplyAnimationClock%28System.Windows.DependencyProperty%2CSystem.Windows.Media.Animation.AnimationClock%29> or <xref:System.Windows.Media.Animation.Animatable.BeginAnimation%28System.Windows.DependencyProperty%2CSystem.Windows.Media.Animation.AnimationTimeline%29> method of the animated object. Specify the property being animated as the first parameter, and `null` as the second. This removes all animation clocks from the property.","nodes":[{"content":"To remove all clocks from a property, use the <ph id=\"ph1\">&lt;xref:System.Windows.Media.Animation.Animatable.ApplyAnimationClock%28System.Windows.DependencyProperty%2CSystem.Windows.Media.Animation.AnimationClock%29&gt;</ph> or <ph id=\"ph2\">&lt;xref:System.Windows.Media.Animation.Animatable.BeginAnimation%28System.Windows.DependencyProperty%2CSystem.Windows.Media.Animation.AnimationTimeline%29&gt;</ph> method of the animated object.","pos":[0,389],"source":"To remove all clocks from a property, use the <xref:System.Windows.Media.Animation.Animatable.ApplyAnimationClock%28System.Windows.DependencyProperty%2CSystem.Windows.Media.Animation.AnimationClock%29> or <xref:System.Windows.Media.Animation.Animatable.BeginAnimation%28System.Windows.DependencyProperty%2CSystem.Windows.Media.Animation.AnimationTimeline%29> method of the animated object."},{"content":"Specify the property being animated as the first parameter, and <ph id=\"ph1\">`null`</ph> as the second.","pos":[390,475],"source":" Specify the property being animated as the first parameter, and `null` as the second."},{"content":"This removes all animation clocks from the property.","pos":[476,528]}]},{"pos":[1782,2810],"content":"To remove a specific <xref:System.Windows.Media.Animation.AnimationClock> from a list of clocks, use the <xref:System.Windows.Media.Animation.Clock.Controller%2A> property of the <xref:System.Windows.Media.Animation.AnimationClock> to retrieve a <xref:System.Windows.Media.Animation.ClockController>, then call the <xref:System.Windows.Media.Animation.ClockController.Remove%2A> method of the <xref:System.Windows.Media.Animation.ClockController>. This is typically done in the <xref:System.Windows.Media.Animation.Clock.Completed> event handler for a clock. Note that only root clocks can be controlled by a <xref:System.Windows.Media.Animation.ClockController>; the <xref:System.Windows.Media.Animation.Clock.Controller%2A> property of a child clock returns `null`. Note also that the <xref:System.Windows.Media.Animation.Clock.Completed> event is not raised if the effective duration of the clock is forever.  In that case, the user must determine when to call <xref:System.Windows.Media.Animation.ClockController.Remove%2A>.","nodes":[{"content":"To remove a specific <ph id=\"ph1\">&lt;xref:System.Windows.Media.Animation.AnimationClock&gt;</ph> from a list of clocks, use the <ph id=\"ph2\">&lt;xref:System.Windows.Media.Animation.Clock.Controller%2A&gt;</ph> property of the <ph id=\"ph3\">&lt;xref:System.Windows.Media.Animation.AnimationClock&gt;</ph> to retrieve a <ph id=\"ph4\">&lt;xref:System.Windows.Media.Animation.ClockController&gt;</ph>, then call the <ph id=\"ph5\">&lt;xref:System.Windows.Media.Animation.ClockController.Remove%2A&gt;</ph> method of the <ph id=\"ph6\">&lt;xref:System.Windows.Media.Animation.ClockController&gt;</ph>.","pos":[0,447],"source":"To remove a specific <xref:System.Windows.Media.Animation.AnimationClock> from a list of clocks, use the <xref:System.Windows.Media.Animation.Clock.Controller%2A> property of the <xref:System.Windows.Media.Animation.AnimationClock> to retrieve a <xref:System.Windows.Media.Animation.ClockController>, then call the <xref:System.Windows.Media.Animation.ClockController.Remove%2A> method of the <xref:System.Windows.Media.Animation.ClockController>."},{"content":"This is typically done in the <ph id=\"ph1\">&lt;xref:System.Windows.Media.Animation.Clock.Completed&gt;</ph> event handler for a clock.","pos":[448,558],"source":" This is typically done in the <xref:System.Windows.Media.Animation.Clock.Completed> event handler for a clock."},{"content":"Note that only root clocks can be controlled by a <ph id=\"ph1\">&lt;xref:System.Windows.Media.Animation.ClockController&gt;</ph>; the <ph id=\"ph2\">&lt;xref:System.Windows.Media.Animation.Clock.Controller%2A&gt;</ph> property of a child clock returns <ph id=\"ph3\">`null`</ph>.","pos":[559,767],"source":" Note that only root clocks can be controlled by a <xref:System.Windows.Media.Animation.ClockController>; the <xref:System.Windows.Media.Animation.Clock.Controller%2A> property of a child clock returns `null`."},{"content":"Note also that the <ph id=\"ph1\">&lt;xref:System.Windows.Media.Animation.Clock.Completed&gt;</ph> event is not raised if the effective duration of the clock is forever.","pos":[768,911],"source":" Note also that the <xref:System.Windows.Media.Animation.Clock.Completed> event is not raised if the effective duration of the clock is forever."},{"content":"In that case, the user must determine when to call <ph id=\"ph1\">&lt;xref:System.Windows.Media.Animation.ClockController.Remove%2A&gt;</ph>.","pos":[913,1028],"source":"  In that case, the user must determine when to call <xref:System.Windows.Media.Animation.ClockController.Remove%2A>."}]},{"pos":[2817,2990],"content":"This is primarily an issue for animations on objects that have a long lifetime.  When an object is garbage collected, its clocks are also disconnected and garbage collected.","nodes":[{"content":"This is primarily an issue for animations on objects that have a long lifetime.  When an object is garbage collected, its clocks are also disconnected and garbage collected.","pos":[0,173],"nodes":[{"content":"This is primarily an issue for animations on objects that have a long lifetime.","pos":[0,79]},{"content":"When an object is garbage collected, its clocks are also disconnected and garbage collected.","pos":[81,173]}]}]},{"pos":[2997,3164],"content":"For more information about clock objects, see <bpt id=\"p1\">[</bpt>Animation and Timing System Overview<ept id=\"p1\">](~/docs/framework/wpf/graphics-multimedia/animation-and-timing-system-overview.md)</ept>.","source":"For more information about clock objects, see [Animation and Timing System Overview](~/docs/framework/wpf/graphics-multimedia/animation-and-timing-system-overview.md)."}],"pos":[45856,49038],"yaml":true,"extradata":"MT"},{"content":"The storyboard to begin.","nodes":[{"pos":[0,24],"content":"The storyboard to begin.","nodes":[{"content":"The storyboard to begin.","pos":[0,24]}]}],"pos":[49340,49365],"yaml":true},{"content":"A value of the enumeration that describes behavior to use if a  property described in the storyboard is already animated.","nodes":[{"pos":[0,121],"content":"A value of the enumeration that describes behavior to use if a  property described in the storyboard is already animated.","nodes":[{"content":"A value of the enumeration that describes behavior to use if a  property described in the storyboard is already animated.","pos":[0,121]}]}],"pos":[49469,49591],"yaml":true},{"content":"Declares whether the animation is controllable (can be paused) after it is started.","nodes":[{"pos":[0,83],"content":"Declares whether the animation is controllable (can be paused) after it is started.","nodes":[{"content":"Declares whether the animation is controllable (can be paused) after it is started.","pos":[0,83]}]}],"pos":[49662,49746],"yaml":true},{"content":"Gets or sets the <xref href=\"System.Windows.Data.BindingGroup\"></xref> that is used for the element.","nodes":[{"pos":[0,100],"content":"Gets or sets the <ph id=\"ph1\">&lt;xref href=\"System.Windows.Data.BindingGroup\"&gt;&lt;/xref&gt;</ph> that is used for the element.","source":"Gets or sets the <xref href=\"System.Windows.Data.BindingGroup\"></xref> that is used for the element."}],"pos":[50775,50876],"yaml":true},{"content":"A <xref:System.Windows.Data.BindingGroup> can be used to validate the values of multiple properties of an object. For example, suppose that an application prompts the user to enter an address and then populates an object of type `Address`, which has the properties `Street`, `City`, `ZipCode`, and `Country`, with the values that the user provided. The application has a panel that contains four <xref:System.Windows.Controls.TextBox> controls, each of which is bound to one of the object’s properties. You can use a <xref:System.Windows.Controls.ValidationRule> in a <xref:System.Windows.Data.BindingGroup> to validate the `Address` object. For example, the <xref:System.Windows.Controls.ValidationRule> can ensure that the zip code is valid for the country of the address.  \n  \n Child elements inherit the <xref:System.Windows.Data.BindingGroup> from their parent elements, just as with any other inheritable property.  \n  \n<a name=\"dependencyPropertyInfo_BindingGroup\"></a>   \n## Dependency Property Information  \n  \n|||  \n|-|-|  \n|Identifier field|<xref:System.Windows.FrameworkContentElement.BindingGroupProperty>|  \n|Metadata properties set to **true**|<xref:System.Windows.FrameworkPropertyMetadata.Inherits%2A>|","nodes":[{"pos":[0,774],"content":"A <xref:System.Windows.Data.BindingGroup> can be used to validate the values of multiple properties of an object. For example, suppose that an application prompts the user to enter an address and then populates an object of type `Address`, which has the properties `Street`, `City`, `ZipCode`, and `Country`, with the values that the user provided. The application has a panel that contains four <xref:System.Windows.Controls.TextBox> controls, each of which is bound to one of the object’s properties. You can use a <xref:System.Windows.Controls.ValidationRule> in a <xref:System.Windows.Data.BindingGroup> to validate the `Address` object. For example, the <xref:System.Windows.Controls.ValidationRule> can ensure that the zip code is valid for the country of the address.","nodes":[{"content":"A <ph id=\"ph1\">&lt;xref:System.Windows.Data.BindingGroup&gt;</ph> can be used to validate the values of multiple properties of an object.","pos":[0,113],"source":"A <xref:System.Windows.Data.BindingGroup> can be used to validate the values of multiple properties of an object."},{"content":"For example, suppose that an application prompts the user to enter an address and then populates an object of type <ph id=\"ph1\">`Address`</ph>, which has the properties <ph id=\"ph2\">`Street`</ph>, <ph id=\"ph3\">`City`</ph>, <ph id=\"ph4\">`ZipCode`</ph>, and <ph id=\"ph5\">`Country`</ph>, with the values that the user provided.","pos":[114,348],"source":" For example, suppose that an application prompts the user to enter an address and then populates an object of type `Address`, which has the properties `Street`, `City`, `ZipCode`, and `Country`, with the values that the user provided."},{"content":"The application has a panel that contains four <ph id=\"ph1\">&lt;xref:System.Windows.Controls.TextBox&gt;</ph> controls, each of which is bound to one of the object’s properties.","pos":[349,502],"source":" The application has a panel that contains four <xref:System.Windows.Controls.TextBox> controls, each of which is bound to one of the object’s properties."},{"content":"You can use a <ph id=\"ph1\">&lt;xref:System.Windows.Controls.ValidationRule&gt;</ph> in a <ph id=\"ph2\">&lt;xref:System.Windows.Data.BindingGroup&gt;</ph> to validate the <ph id=\"ph3\">`Address`</ph> object.","pos":[503,641],"source":" You can use a <xref:System.Windows.Controls.ValidationRule> in a <xref:System.Windows.Data.BindingGroup> to validate the `Address` object."},{"content":"For example, the <ph id=\"ph1\">&lt;xref:System.Windows.Controls.ValidationRule&gt;</ph> can ensure that the zip code is valid for the country of the address.","pos":[642,774],"source":" For example, the <xref:System.Windows.Controls.ValidationRule> can ensure that the zip code is valid for the country of the address."}]},{"pos":[781,920],"content":"Child elements inherit the <xref:System.Windows.Data.BindingGroup> from their parent elements, just as with any other inheritable property.","nodes":[{"content":"Child elements inherit the <ph id=\"ph1\">&lt;xref:System.Windows.Data.BindingGroup&gt;</ph> from their parent elements, just as with any other inheritable property.","pos":[0,139],"source":"Child elements inherit the <xref:System.Windows.Data.BindingGroup> from their parent elements, just as with any other inheritable property."}]},{"pos":[983,1014],"content":"Dependency Property Information","linkify":"Dependency Property Information","nodes":[{"content":"Dependency Property Information","pos":[0,31]}]},{"pos":[1035,1051],"content":"Identifier field","nodes":[{"content":"Identifier field","pos":[0,16]}]},{"pos":[1052,1118],"content":"<xref:System.Windows.FrameworkContentElement.BindingGroupProperty>","nodes":[]},{"pos":[1123,1158],"content":"Metadata properties set to <bpt id=\"p1\">**</bpt>true<ept id=\"p1\">**</ept>","source":"Metadata properties set to **true**"},{"pos":[1159,1218],"content":"<xref:System.Windows.FrameworkPropertyMetadata.Inherits%2A>","nodes":[]}],"pos":[50887,52121],"yaml":true,"extradata":"MT"},{"content":"The <xref href=\"System.Windows.Data.BindingGroup\"></xref> that is used for the element.","nodes":[{"pos":[0,87],"content":"The <ph id=\"ph1\">&lt;xref href=\"System.Windows.Data.BindingGroup\"&gt;&lt;/xref&gt;</ph> that is used for the element.","source":"The <xref href=\"System.Windows.Data.BindingGroup\"></xref> that is used for the element."}],"pos":[52386,52474],"yaml":true},{"content":"Identifies the <xref href=\"System.Windows.FrameworkContentElement.BindingGroup\"></xref> dependency property.","nodes":[{"pos":[0,108],"content":"Identifies the <ph id=\"ph1\">&lt;xref href=\"System.Windows.FrameworkContentElement.BindingGroup\"&gt;&lt;/xref&gt;</ph> dependency property.","source":"Identifies the <xref href=\"System.Windows.FrameworkContentElement.BindingGroup\"></xref> dependency property."}],"pos":[53630,53739],"yaml":true},{"content":"Attempts to bring this element into view, within any scrollable regions it is contained within.","nodes":[{"pos":[0,95],"content":"Attempts to bring this element into view, within any scrollable regions it is contained within.","nodes":[{"content":"Attempts to bring this element into view, within any scrollable regions it is contained within.","pos":[0,95]}]}],"pos":[54892,54988],"yaml":true},{"content":"By calling this method, you effectively will call <xref:System.Windows.Controls.ScrollContentPresenter.MakeVisible%2A> on any parent scrollable area that contains the element (the parent may very well be a <xref:System.Windows.FrameworkElement>, not a <xref:System.Windows.FrameworkContentElement>). If this element is not contained in a scrollable area, the event is still raised, but there will be no effect.","nodes":[{"pos":[0,410],"content":"By calling this method, you effectively will call <xref:System.Windows.Controls.ScrollContentPresenter.MakeVisible%2A> on any parent scrollable area that contains the element (the parent may very well be a <xref:System.Windows.FrameworkElement>, not a <xref:System.Windows.FrameworkContentElement>). If this element is not contained in a scrollable area, the event is still raised, but there will be no effect.","nodes":[{"content":"By calling this method, you effectively will call <xref:System.Windows.Controls.ScrollContentPresenter.MakeVisible%2A> on any parent scrollable area that contains the element (the parent may very well be a <xref:System.Windows.FrameworkElement>, not a <xref:System.Windows.FrameworkContentElement>). If this element is not contained in a scrollable area, the event is still raised, but there will be no effect.","pos":[0,410],"nodes":[{"content":"By calling this method, you effectively will call <ph id=\"ph1\">&lt;xref:System.Windows.Controls.ScrollContentPresenter.MakeVisible%2A&gt;</ph> on any parent scrollable area that contains the element (the parent may very well be a <ph id=\"ph2\">&lt;xref:System.Windows.FrameworkElement&gt;</ph>, not a <ph id=\"ph3\">&lt;xref:System.Windows.FrameworkContentElement&gt;</ph>).","pos":[0,299],"source":"By calling this method, you effectively will call <xref:System.Windows.Controls.ScrollContentPresenter.MakeVisible%2A> on any parent scrollable area that contains the element (the parent may very well be a <xref:System.Windows.FrameworkElement>, not a <xref:System.Windows.FrameworkContentElement>)."},{"content":"If this element is not contained in a scrollable area, the event is still raised, but there will be no effect.","pos":[300,410]}]}]}],"pos":[54999,55410],"yaml":true,"extradata":"MT"},{"content":"Gets or sets the context menu element that should appear whenever the context menu is requested via [!INCLUDE[TLA#tla_ui](~/includes/tlasharptla-ui-md.md)] from within this element.","nodes":[{"pos":[0,181],"content":"Gets or sets the context menu element that should appear whenever the context menu is requested via <ph id=\"ph1\">[!INCLUDE[TLA#tla_ui](~/includes/tlasharptla-ui-md.md)]</ph> from within this element.","source":"Gets or sets the context menu element that should appear whenever the context menu is requested via [!INCLUDE[TLA#tla_ui](~/includes/tlasharptla-ui-md.md)] from within this element."}],"pos":[56525,56707],"yaml":true},{"content":"<a name=\"dependencyPropertyInfo_ContextMenu\"></a>   \n## Dependency Property Information  \n  \n|||  \n|-|-|  \n|Identifier field|<xref:System.Windows.FrameworkContentElement.ContextMenuProperty>|  \n|Metadata properties set to `true`|None|","nodes":[{"pos":[56,87],"content":"Dependency Property Information","linkify":"Dependency Property Information","nodes":[{"content":"Dependency Property Information","pos":[0,31]}]},{"pos":[108,124],"content":"Identifier field","nodes":[{"content":"Identifier field","pos":[0,16]}]},{"pos":[125,190],"content":"<xref:System.Windows.FrameworkContentElement.ContextMenuProperty>","nodes":[]},{"pos":[195,228],"content":"Metadata properties set to <ph id=\"ph1\">`true`</ph>","source":"Metadata properties set to `true`"},{"pos":[229,233],"content":"None","nodes":[{"content":"None","pos":[0,4]}]}],"pos":[56718,56963],"yaml":true,"extradata":"MT"},{"content":"The context menu that this element uses.","nodes":[{"pos":[0,40],"content":"The context menu that this element uses.","nodes":[{"content":"The context menu that this element uses.","pos":[0,40]}]}],"pos":[57433,57474],"yaml":true},{"content":"Occurs just before any context menu on the element is closed.","nodes":[{"pos":[0,61],"content":"Occurs just before any context menu on the element is closed.","nodes":[{"content":"Occurs just before any context menu on the element is closed.","pos":[0,61]}]}],"pos":[58532,58594],"yaml":true},{"content":"To suppress closing context menus, handlers of the event should mark it as handled.  \n  \n To use this event as an <xref:System.Windows.EventTrigger> in a style, you must reference the underlying service event identifier:  \n  \n [!code-xml[CorePseudocode#FEContextMenuClosing](~/samples/snippets/csharp/VS_Snippets_Wpf/CorePseudocode/CSharp/pseudocode.xaml#fecontextmenuclosing)]  \n  \n (This usage is required because the event implementation on <xref:System.Windows.FrameworkContentElement> that exposes the underlying service event does not correctly map the <xref:System.Windows.FrameworkContentElement.ContextMenuClosing> identifier for use in triggers).  \n  \n<a name=\"routedEventInfo_ContextMenuClosing\"></a>   \n## Routed Event Information  \n  \n|||  \n|-|-|  \n|Identifier field|<xref:System.Windows.FrameworkContentElement.ContextMenuClosingEvent>|  \n|Routing strategy|Bubbling|  \n|Delegate|<xref:System.Windows.Controls.ContextMenuEventHandler>|","nodes":[{"pos":[0,83],"content":"To suppress closing context menus, handlers of the event should mark it as handled.","nodes":[{"content":"To suppress closing context menus, handlers of the event should mark it as handled.","pos":[0,83]}]},{"pos":[90,220],"content":"To use this event as an <xref:System.Windows.EventTrigger> in a style, you must reference the underlying service event identifier:","nodes":[{"content":"To use this event as an <ph id=\"ph1\">&lt;xref:System.Windows.EventTrigger&gt;</ph> in a style, you must reference the underlying service event identifier:","pos":[0,130],"source":"To use this event as an <xref:System.Windows.EventTrigger> in a style, you must reference the underlying service event identifier:"}]},{"pos":[227,377],"content":"<bpt id=\"p1\">[!code-xml</bpt><bpt id=\"p2\">[</bpt>CorePseudocode#FEContextMenuClosing<ept id=\"p2\">](~/samples/snippets/csharp/VS_Snippets_Wpf/CorePseudocode/CSharp/pseudocode.xaml#fecontextmenuclosing)</ept><ept id=\"p1\">]</ept>","source":"[!code-xml[CorePseudocode#FEContextMenuClosing](~/samples/snippets/csharp/VS_Snippets_Wpf/CorePseudocode/CSharp/pseudocode.xaml#fecontextmenuclosing)]"},{"pos":[384,656],"content":"(This usage is required because the event implementation on <xref:System.Windows.FrameworkContentElement> that exposes the underlying service event does not correctly map the <xref:System.Windows.FrameworkContentElement.ContextMenuClosing> identifier for use in triggers).","nodes":[{"content":"(This usage is required because the event implementation on <ph id=\"ph1\">&lt;xref:System.Windows.FrameworkContentElement&gt;</ph> that exposes the underlying service event does not correctly map the <ph id=\"ph2\">&lt;xref:System.Windows.FrameworkContentElement.ContextMenuClosing&gt;</ph> identifier for use in triggers).","pos":[0,272],"source":"(This usage is required because the event implementation on <xref:System.Windows.FrameworkContentElement> that exposes the underlying service event does not correctly map the <xref:System.Windows.FrameworkContentElement.ContextMenuClosing> identifier for use in triggers)."}]},{"pos":[718,742],"content":"Routed Event Information","linkify":"Routed Event Information","nodes":[{"content":"Routed Event Information","pos":[0,24]}]},{"pos":[763,779],"content":"Identifier field","nodes":[{"content":"Identifier field","pos":[0,16]}]},{"pos":[780,849],"content":"<xref:System.Windows.FrameworkContentElement.ContextMenuClosingEvent>","nodes":[]},{"pos":[854,870],"content":"Routing strategy","nodes":[{"content":"Routing strategy","pos":[0,16]}]},{"pos":[871,879],"content":"Bubbling","nodes":[{"content":"Bubbling","pos":[0,8]}]},{"pos":[884,892],"content":"Delegate","nodes":[{"content":"Delegate","pos":[0,8]}]},{"pos":[893,947],"content":"<xref:System.Windows.Controls.ContextMenuEventHandler>","nodes":[]}],"pos":[58605,59573],"yaml":true,"extradata":"MT"},{"content":"Identifies the <xref href=\"System.Windows.FrameworkContentElement.ContextMenuClosing\"></xref> [Routed Events Overview](~/docs/framework/wpf/advanced/routed-events-overview.md).","nodes":[{"pos":[0,176],"content":"Identifies the <ph id=\"ph1\">&lt;xref href=\"System.Windows.FrameworkContentElement.ContextMenuClosing\"&gt;&lt;/xref&gt;</ph> <bpt id=\"p1\">[</bpt>Routed Events Overview<ept id=\"p1\">](~/docs/framework/wpf/advanced/routed-events-overview.md)</ept>.","source":"Identifies the <xref href=\"System.Windows.FrameworkContentElement.ContextMenuClosing\"></xref> [Routed Events Overview](~/docs/framework/wpf/advanced/routed-events-overview.md)."}],"pos":[61394,61571],"yaml":true},{"content":"Event identifier objects are created when routed events are registered (see <xref:System.Windows.EventManager.RegisterRoutedEvent%2A>) and can then be used to add class handlers (see <xref:System.Windows.EventManager.RegisterClassHandler%2A>). Identifier objects contain an identifying name, owner type, handler type, routing strategy, and a utility method for adding owners for the event.","nodes":[{"pos":[0,389],"content":"Event identifier objects are created when routed events are registered (see <xref:System.Windows.EventManager.RegisterRoutedEvent%2A>) and can then be used to add class handlers (see <xref:System.Windows.EventManager.RegisterClassHandler%2A>). Identifier objects contain an identifying name, owner type, handler type, routing strategy, and a utility method for adding owners for the event.","nodes":[{"content":"Event identifier objects are created when routed events are registered (see <xref:System.Windows.EventManager.RegisterRoutedEvent%2A>) and can then be used to add class handlers (see <xref:System.Windows.EventManager.RegisterClassHandler%2A>). Identifier objects contain an identifying name, owner type, handler type, routing strategy, and a utility method for adding owners for the event.","pos":[0,389],"nodes":[{"content":"Event identifier objects are created when routed events are registered (see <ph id=\"ph1\">&lt;xref:System.Windows.EventManager.RegisterRoutedEvent%2A&gt;</ph>) and can then be used to add class handlers (see <ph id=\"ph2\">&lt;xref:System.Windows.EventManager.RegisterClassHandler%2A&gt;</ph>).","pos":[0,243],"source":"Event identifier objects are created when routed events are registered (see <xref:System.Windows.EventManager.RegisterRoutedEvent%2A>) and can then be used to add class handlers (see <xref:System.Windows.EventManager.RegisterClassHandler%2A>)."},{"content":"Identifier objects contain an identifying name, owner type, handler type, routing strategy, and a utility method for adding owners for the event.","pos":[244,389]}]}]}],"pos":[61582,61972],"yaml":true,"extradata":"MT"},{"content":"Occurs when any context menu on the element is opened.","nodes":[{"pos":[0,54],"content":"Occurs when any context menu on the element is opened.","nodes":[{"content":"Occurs when any context menu on the element is opened.","pos":[0,54]}]}],"pos":[63159,63214],"yaml":true},{"content":"To manually open context menus, handlers of the events should mark the relevant event as handled. Otherwise, the existing value of the <xref:System.Windows.FrameworkContentElement.ContextMenu%2A> property will be used to automatically open a context menu. Marking the event handled will effectively cancel the default action, and could be an opportunity to reset the value of the <xref:System.Windows.FrameworkContentElement.ContextMenu%2A> property and then open the new <xref:System.Windows.Controls.ContextMenu>. However, there is a timing issue you should be aware of. In order to completely replace the context menu through a <xref:System.Windows.FrameworkContentElement.ContextMenuOpening> handler, the initial context menu must not be null / empty. Alternatively, you might need to handle the event and then manually open a new context menu. For details, see [How to: Handle the ContextMenuOpening Event](~/docs/framework/wpf/advanced/how-to-handle-the-contextmenuopening-event.md).  \n  \n To use this event as an <xref:System.Windows.EventTrigger> in a style, you must reference the underlying service event identifier:  \n  \n [!code-xml[CorePseudocode#FEContextMenuOpening](~/samples/snippets/csharp/VS_Snippets_Wpf/CorePseudocode/CSharp/pseudocode.xaml#fecontextmenuopening)]  \n  \n (This usage is required because the event implementation on <xref:System.Windows.FrameworkContentElement> that exposes the underlying service event does not correctly map the <xref:System.Windows.FrameworkContentElement.ContextMenuOpening> identifier for use in triggers).  \n  \n<a name=\"routedEventInfo_ContextMenuOpening\"></a>   \n## Routed Event Information  \n  \n|||  \n|-|-|  \n|Identifier field|<xref:System.Windows.FrameworkContentElement.ContextMenuOpeningEvent>|  \n|Routing strategy|Bubbling|  \n|Delegate|<xref:System.Windows.Controls.ContextMenuEventHandler>|","nodes":[{"pos":[0,989],"content":"To manually open context menus, handlers of the events should mark the relevant event as handled. Otherwise, the existing value of the <xref:System.Windows.FrameworkContentElement.ContextMenu%2A> property will be used to automatically open a context menu. Marking the event handled will effectively cancel the default action, and could be an opportunity to reset the value of the <xref:System.Windows.FrameworkContentElement.ContextMenu%2A> property and then open the new <xref:System.Windows.Controls.ContextMenu>. However, there is a timing issue you should be aware of. In order to completely replace the context menu through a <xref:System.Windows.FrameworkContentElement.ContextMenuOpening> handler, the initial context menu must not be null / empty. Alternatively, you might need to handle the event and then manually open a new context menu. For details, see [How to: Handle the ContextMenuOpening Event](~/docs/framework/wpf/advanced/how-to-handle-the-contextmenuopening-event.md).","nodes":[{"content":"To manually open context menus, handlers of the events should mark the relevant event as handled.","pos":[0,97]},{"content":"Otherwise, the existing value of the <ph id=\"ph1\">&lt;xref:System.Windows.FrameworkContentElement.ContextMenu%2A&gt;</ph> property will be used to automatically open a context menu.","pos":[98,255],"source":" Otherwise, the existing value of the <xref:System.Windows.FrameworkContentElement.ContextMenu%2A> property will be used to automatically open a context menu."},{"content":"Marking the event handled will effectively cancel the default action, and could be an opportunity to reset the value of the <ph id=\"ph1\">&lt;xref:System.Windows.FrameworkContentElement.ContextMenu%2A&gt;</ph> property and then open the new <ph id=\"ph2\">&lt;xref:System.Windows.Controls.ContextMenu&gt;</ph>.","pos":[256,515],"source":" Marking the event handled will effectively cancel the default action, and could be an opportunity to reset the value of the <xref:System.Windows.FrameworkContentElement.ContextMenu%2A> property and then open the new <xref:System.Windows.Controls.ContextMenu>."},{"content":"However, there is a timing issue you should be aware of.","pos":[516,572]},{"content":"In order to completely replace the context menu through a <ph id=\"ph1\">&lt;xref:System.Windows.FrameworkContentElement.ContextMenuOpening&gt;</ph> handler, the initial context menu must not be null / empty.","pos":[573,755],"source":" In order to completely replace the context menu through a <xref:System.Windows.FrameworkContentElement.ContextMenuOpening> handler, the initial context menu must not be null / empty."},{"content":"Alternatively, you might need to handle the event and then manually open a new context menu.","pos":[756,848]},{"content":"For details, see <bpt id=\"p1\">[</bpt>How to: Handle the ContextMenuOpening Event<ept id=\"p1\">](~/docs/framework/wpf/advanced/how-to-handle-the-contextmenuopening-event.md)</ept>.","pos":[849,989],"source":" For details, see [How to: Handle the ContextMenuOpening Event](~/docs/framework/wpf/advanced/how-to-handle-the-contextmenuopening-event.md)."}]},{"pos":[996,1126],"content":"To use this event as an <xref:System.Windows.EventTrigger> in a style, you must reference the underlying service event identifier:","nodes":[{"content":"To use this event as an <ph id=\"ph1\">&lt;xref:System.Windows.EventTrigger&gt;</ph> in a style, you must reference the underlying service event identifier:","pos":[0,130],"source":"To use this event as an <xref:System.Windows.EventTrigger> in a style, you must reference the underlying service event identifier:"}]},{"pos":[1133,1283],"content":"<bpt id=\"p1\">[!code-xml</bpt><bpt id=\"p2\">[</bpt>CorePseudocode#FEContextMenuOpening<ept id=\"p2\">](~/samples/snippets/csharp/VS_Snippets_Wpf/CorePseudocode/CSharp/pseudocode.xaml#fecontextmenuopening)</ept><ept id=\"p1\">]</ept>","source":"[!code-xml[CorePseudocode#FEContextMenuOpening](~/samples/snippets/csharp/VS_Snippets_Wpf/CorePseudocode/CSharp/pseudocode.xaml#fecontextmenuopening)]"},{"pos":[1290,1562],"content":"(This usage is required because the event implementation on <xref:System.Windows.FrameworkContentElement> that exposes the underlying service event does not correctly map the <xref:System.Windows.FrameworkContentElement.ContextMenuOpening> identifier for use in triggers).","nodes":[{"content":"(This usage is required because the event implementation on <ph id=\"ph1\">&lt;xref:System.Windows.FrameworkContentElement&gt;</ph> that exposes the underlying service event does not correctly map the <ph id=\"ph2\">&lt;xref:System.Windows.FrameworkContentElement.ContextMenuOpening&gt;</ph> identifier for use in triggers).","pos":[0,272],"source":"(This usage is required because the event implementation on <xref:System.Windows.FrameworkContentElement> that exposes the underlying service event does not correctly map the <xref:System.Windows.FrameworkContentElement.ContextMenuOpening> identifier for use in triggers)."}]},{"pos":[1624,1648],"content":"Routed Event Information","linkify":"Routed Event Information","nodes":[{"content":"Routed Event Information","pos":[0,24]}]},{"pos":[1669,1685],"content":"Identifier field","nodes":[{"content":"Identifier field","pos":[0,16]}]},{"pos":[1686,1755],"content":"<xref:System.Windows.FrameworkContentElement.ContextMenuOpeningEvent>","nodes":[]},{"pos":[1760,1776],"content":"Routing strategy","nodes":[{"content":"Routing strategy","pos":[0,16]}]},{"pos":[1777,1785],"content":"Bubbling","nodes":[{"content":"Bubbling","pos":[0,8]}]},{"pos":[1790,1798],"content":"Delegate","nodes":[{"content":"Delegate","pos":[0,8]}]},{"pos":[1799,1853],"content":"<xref:System.Windows.Controls.ContextMenuEventHandler>","nodes":[]}],"pos":[63225,65099],"yaml":true,"extradata":"MT"},{"content":"Identifies the <xref href=\"System.Windows.FrameworkContentElement.ContextMenuOpening\"></xref> [Routed Events Overview](~/docs/framework/wpf/advanced/routed-events-overview.md).","nodes":[{"pos":[0,176],"content":"Identifies the <ph id=\"ph1\">&lt;xref href=\"System.Windows.FrameworkContentElement.ContextMenuOpening\"&gt;&lt;/xref&gt;</ph> <bpt id=\"p1\">[</bpt>Routed Events Overview<ept id=\"p1\">](~/docs/framework/wpf/advanced/routed-events-overview.md)</ept>.","source":"Identifies the <xref href=\"System.Windows.FrameworkContentElement.ContextMenuOpening\"></xref> [Routed Events Overview](~/docs/framework/wpf/advanced/routed-events-overview.md)."}],"pos":[66343,66520],"yaml":true},{"content":"Event identifier objects are created when routed events are registered (see <xref:System.Windows.EventManager.RegisterRoutedEvent%2A>) and can then be used to add class handlers (see <xref:System.Windows.EventManager.RegisterClassHandler%2A>). Identifier objects contain an identifying name, owner type, handler type, routing strategy, and a utility method for adding owners for the event.","nodes":[{"pos":[0,389],"content":"Event identifier objects are created when routed events are registered (see <xref:System.Windows.EventManager.RegisterRoutedEvent%2A>) and can then be used to add class handlers (see <xref:System.Windows.EventManager.RegisterClassHandler%2A>). Identifier objects contain an identifying name, owner type, handler type, routing strategy, and a utility method for adding owners for the event.","nodes":[{"content":"Event identifier objects are created when routed events are registered (see <xref:System.Windows.EventManager.RegisterRoutedEvent%2A>) and can then be used to add class handlers (see <xref:System.Windows.EventManager.RegisterClassHandler%2A>). Identifier objects contain an identifying name, owner type, handler type, routing strategy, and a utility method for adding owners for the event.","pos":[0,389],"nodes":[{"content":"Event identifier objects are created when routed events are registered (see <ph id=\"ph1\">&lt;xref:System.Windows.EventManager.RegisterRoutedEvent%2A&gt;</ph>) and can then be used to add class handlers (see <ph id=\"ph2\">&lt;xref:System.Windows.EventManager.RegisterClassHandler%2A&gt;</ph>).","pos":[0,243],"source":"Event identifier objects are created when routed events are registered (see <xref:System.Windows.EventManager.RegisterRoutedEvent%2A>) and can then be used to add class handlers (see <xref:System.Windows.EventManager.RegisterClassHandler%2A>)."},{"content":"Identifier objects contain an identifying name, owner type, handler type, routing strategy, and a utility method for adding owners for the event.","pos":[244,389]}]}]}],"pos":[66531,66921],"yaml":true,"extradata":"MT"},{"content":"Identifies the <xref href=\"System.Windows.FrameworkContentElement.ContextMenu\"></xref> dependency property.","nodes":[{"pos":[0,107],"content":"Identifies the <ph id=\"ph1\">&lt;xref href=\"System.Windows.FrameworkContentElement.ContextMenu\"&gt;&lt;/xref&gt;</ph> dependency property.","source":"Identifies the <xref href=\"System.Windows.FrameworkContentElement.ContextMenu\"></xref> dependency property."}],"pos":[68114,68222],"yaml":true},{"content":"Gets or sets the cursor that displays when the mouse pointer is over this element.","nodes":[{"pos":[0,82],"content":"Gets or sets the cursor that displays when the mouse pointer is over this element.","nodes":[{"content":"Gets or sets the cursor that displays when the mouse pointer is over this element.","pos":[0,82]}]}],"pos":[69328,69411],"yaml":true},{"content":"When setting this property in [!INCLUDE[TLA2#tla_xaml](~/includes/tla2sharptla-xaml-md.md)], the [!INCLUDE[TLA2#tla_xaml](~/includes/tla2sharptla-xaml-md.md)] processor relies on type conversion for the <xref:System.Windows.Input.Cursor> class to evaluate the string. The provided string should evaluate to a <xref:System.Windows.Input.CursorType> value. See <xref:System.Windows.Input.Cursor> for details.  \n  \n Whether the cursor as established by this property will or will not display when the mouse pointer is over this element is also dependent on the value of the <xref:System.Windows.FrameworkContentElement.ForceCursor%2A> property. Also, event-related considerations such as an active drag, mouse capture, text editing modes within controls, and so on, will also affect the cursor with higher priority than the value you specify in this property.  \n  \n To revert the behavior of setting this property to the eventual default, set it to `null` again.  \n  \n The `null` default really means that determination of the practical cursor value is deferred here and should be obtained from elsewhere. If presented with no programmatic values from any source, the default cursor over a [!INCLUDE[TLA#tla_winclient](~/includes/tlasharptla-winclient-md.md)] application will be an arrow.  \n  \n Each movement of the mouse over a [!INCLUDE[TLA2#tla_winclient](~/includes/tla2sharptla-winclient-md.md)] application raises a <xref:System.Windows.ContentElement.QueryCursor> event. The event bubbles, and any element along the route has the opportunity to handle the event and to set the value of the cursor via the arguments of this event. If that happens, the fact that the event is handled and has a changed value in the arguments takes precedence over the value of the <xref:System.Windows.FrameworkContentElement.Cursor%2A> property at any level, unless <xref:System.Windows.FrameworkContentElement.ForceCursor%2A> is set.  \n  \n If not creating a custom cursor, typically you set this property to a static property value of the <xref:System.Windows.Input.Cursors> class.  \n  \n Setting the <xref:System.Windows.Input.Cursor> to a custom value is not enabled in partial trust. For more information on custom cursors, see [Input Overview](~/docs/framework/wpf/advanced/input-overview.md).  \n  \n<a name=\"dependencyPropertyInfo_Cursor\"></a>   \n## Dependency Property Information  \n  \n|||  \n|-|-|  \n|Identifier field|<xref:System.Windows.FrameworkContentElement.CursorProperty>|  \n|Metadata properties set to `true`|None|","nodes":[{"pos":[0,406],"content":"When setting this property in [!INCLUDE[TLA2#tla_xaml](~/includes/tla2sharptla-xaml-md.md)], the [!INCLUDE[TLA2#tla_xaml](~/includes/tla2sharptla-xaml-md.md)] processor relies on type conversion for the <xref:System.Windows.Input.Cursor> class to evaluate the string. The provided string should evaluate to a <xref:System.Windows.Input.CursorType> value. See <xref:System.Windows.Input.Cursor> for details.","nodes":[{"content":"When setting this property in <ph id=\"ph1\">[!INCLUDE[TLA2#tla_xaml](~/includes/tla2sharptla-xaml-md.md)]</ph>, the <ph id=\"ph2\">[!INCLUDE[TLA2#tla_xaml](~/includes/tla2sharptla-xaml-md.md)]</ph> processor relies on type conversion for the <ph id=\"ph3\">&lt;xref:System.Windows.Input.Cursor&gt;</ph> class to evaluate the string.","pos":[0,267],"source":"When setting this property in [!INCLUDE[TLA2#tla_xaml](~/includes/tla2sharptla-xaml-md.md)], the [!INCLUDE[TLA2#tla_xaml](~/includes/tla2sharptla-xaml-md.md)] processor relies on type conversion for the <xref:System.Windows.Input.Cursor> class to evaluate the string."},{"content":"The provided string should evaluate to a <ph id=\"ph1\">&lt;xref:System.Windows.Input.CursorType&gt;</ph> value.","pos":[268,354],"source":" The provided string should evaluate to a <xref:System.Windows.Input.CursorType> value."},{"content":"See <ph id=\"ph1\">&lt;xref:System.Windows.Input.Cursor&gt;</ph> for details.","pos":[355,406],"source":" See <xref:System.Windows.Input.Cursor> for details."}]},{"pos":[413,856],"content":"Whether the cursor as established by this property will or will not display when the mouse pointer is over this element is also dependent on the value of the <xref:System.Windows.FrameworkContentElement.ForceCursor%2A> property. Also, event-related considerations such as an active drag, mouse capture, text editing modes within controls, and so on, will also affect the cursor with higher priority than the value you specify in this property.","nodes":[{"content":"Whether the cursor as established by this property will or will not display when the mouse pointer is over this element is also dependent on the value of the <xref:System.Windows.FrameworkContentElement.ForceCursor%2A> property. Also, event-related considerations such as an active drag, mouse capture, text editing modes within controls, and so on, will also affect the cursor with higher priority than the value you specify in this property.","pos":[0,443],"nodes":[{"content":"Whether the cursor as established by this property will or will not display when the mouse pointer is over this element is also dependent on the value of the <ph id=\"ph1\">&lt;xref:System.Windows.FrameworkContentElement.ForceCursor%2A&gt;</ph> property.","pos":[0,228],"source":"Whether the cursor as established by this property will or will not display when the mouse pointer is over this element is also dependent on the value of the <xref:System.Windows.FrameworkContentElement.ForceCursor%2A> property."},{"content":"Also, event-related considerations such as an active drag, mouse capture, text editing modes within controls, and so on, will also affect the cursor with higher priority than the value you specify in this property.","pos":[229,443]}]}]},{"pos":[863,959],"content":"To revert the behavior of setting this property to the eventual default, set it to <ph id=\"ph1\">`null`</ph> again.","source":"To revert the behavior of setting this property to the eventual default, set it to `null` again."},{"pos":[966,1286],"content":"The `null` default really means that determination of the practical cursor value is deferred here and should be obtained from elsewhere. If presented with no programmatic values from any source, the default cursor over a [!INCLUDE[TLA#tla_winclient](~/includes/tlasharptla-winclient-md.md)] application will be an arrow.","nodes":[{"content":"The <ph id=\"ph1\">`null`</ph> default really means that determination of the practical cursor value is deferred here and should be obtained from elsewhere.","pos":[0,136],"source":"The `null` default really means that determination of the practical cursor value is deferred here and should be obtained from elsewhere."},{"content":"If presented with no programmatic values from any source, the default cursor over a <ph id=\"ph1\">[!INCLUDE[TLA#tla_winclient](~/includes/tlasharptla-winclient-md.md)]</ph> application will be an arrow.","pos":[137,320],"source":" If presented with no programmatic values from any source, the default cursor over a [!INCLUDE[TLA#tla_winclient](~/includes/tlasharptla-winclient-md.md)] application will be an arrow."}]},{"pos":[1293,1921],"content":"Each movement of the mouse over a [!INCLUDE[TLA2#tla_winclient](~/includes/tla2sharptla-winclient-md.md)] application raises a <xref:System.Windows.ContentElement.QueryCursor> event. The event bubbles, and any element along the route has the opportunity to handle the event and to set the value of the cursor via the arguments of this event. If that happens, the fact that the event is handled and has a changed value in the arguments takes precedence over the value of the <xref:System.Windows.FrameworkContentElement.Cursor%2A> property at any level, unless <xref:System.Windows.FrameworkContentElement.ForceCursor%2A> is set.","nodes":[{"content":"Each movement of the mouse over a <ph id=\"ph1\">[!INCLUDE[TLA2#tla_winclient](~/includes/tla2sharptla-winclient-md.md)]</ph> application raises a <ph id=\"ph2\">&lt;xref:System.Windows.ContentElement.QueryCursor&gt;</ph> event.","pos":[0,182],"source":"Each movement of the mouse over a [!INCLUDE[TLA2#tla_winclient](~/includes/tla2sharptla-winclient-md.md)] application raises a <xref:System.Windows.ContentElement.QueryCursor> event."},{"content":"The event bubbles, and any element along the route has the opportunity to handle the event and to set the value of the cursor via the arguments of this event.","pos":[183,341]},{"content":"If that happens, the fact that the event is handled and has a changed value in the arguments takes precedence over the value of the <ph id=\"ph1\">&lt;xref:System.Windows.FrameworkContentElement.Cursor%2A&gt;</ph> property at any level, unless <ph id=\"ph2\">&lt;xref:System.Windows.FrameworkContentElement.ForceCursor%2A&gt;</ph> is set.","pos":[342,628],"source":" If that happens, the fact that the event is handled and has a changed value in the arguments takes precedence over the value of the <xref:System.Windows.FrameworkContentElement.Cursor%2A> property at any level, unless <xref:System.Windows.FrameworkContentElement.ForceCursor%2A> is set."}]},{"pos":[1928,2069],"content":"If not creating a custom cursor, typically you set this property to a static property value of the <xref:System.Windows.Input.Cursors> class.","nodes":[{"content":"If not creating a custom cursor, typically you set this property to a static property value of the <ph id=\"ph1\">&lt;xref:System.Windows.Input.Cursors&gt;</ph> class.","pos":[0,141],"source":"If not creating a custom cursor, typically you set this property to a static property value of the <xref:System.Windows.Input.Cursors> class."}]},{"pos":[2076,2284],"content":"Setting the <xref:System.Windows.Input.Cursor> to a custom value is not enabled in partial trust. For more information on custom cursors, see [Input Overview](~/docs/framework/wpf/advanced/input-overview.md).","nodes":[{"content":"Setting the <ph id=\"ph1\">&lt;xref:System.Windows.Input.Cursor&gt;</ph> to a custom value is not enabled in partial trust.","pos":[0,97],"source":"Setting the <xref:System.Windows.Input.Cursor> to a custom value is not enabled in partial trust."},{"content":"For more information on custom cursors, see <bpt id=\"p1\">[</bpt>Input Overview<ept id=\"p1\">](~/docs/framework/wpf/advanced/input-overview.md)</ept>.","pos":[98,208],"source":" For more information on custom cursors, see [Input Overview](~/docs/framework/wpf/advanced/input-overview.md)."}]},{"pos":[2341,2372],"content":"Dependency Property Information","linkify":"Dependency Property Information","nodes":[{"content":"Dependency Property Information","pos":[0,31]}]},{"pos":[2393,2409],"content":"Identifier field","nodes":[{"content":"Identifier field","pos":[0,16]}]},{"pos":[2410,2470],"content":"<xref:System.Windows.FrameworkContentElement.CursorProperty>","nodes":[]},{"pos":[2475,2508],"content":"Metadata properties set to <ph id=\"ph1\">`true`</ph>","source":"Metadata properties set to `true`"},{"pos":[2509,2513],"content":"None","nodes":[{"content":"None","pos":[0,4]}]}],"pos":[69422,71961],"yaml":true,"extradata":"MT"},{"content":"The cursor to display. The default value is defined as `null` per this dependency property. However, the practical default at run time will come from a variety of factors.","nodes":[{"pos":[0,171],"content":"The cursor to display. The default value is defined as `null` per this dependency property. However, the practical default at run time will come from a variety of factors.","nodes":[{"content":"The cursor to display.","pos":[0,22]},{"content":"The default value is defined as <ph id=\"ph1\">`null`</ph> per this dependency property.","pos":[23,91],"source":" The default value is defined as `null` per this dependency property."},{"content":"However, the practical default at run time will come from a variety of factors.","pos":[92,171]}]}],"pos":[72477,72649],"yaml":true},{"content":"Identifies the <xref href=\"System.Windows.FrameworkContentElement.Cursor\"></xref> dependency property.","nodes":[{"pos":[0,102],"content":"Identifies the <ph id=\"ph1\">&lt;xref href=\"System.Windows.FrameworkContentElement.Cursor\"&gt;&lt;/xref&gt;</ph> dependency property.","source":"Identifies the <xref href=\"System.Windows.FrameworkContentElement.Cursor\"></xref> dependency property."}],"pos":[73678,73781],"yaml":true},{"content":"Gets or sets the data context for an element when it participates in data binding.","nodes":[{"pos":[0,82],"content":"Gets or sets the data context for an element when it participates in data binding.","nodes":[{"content":"Gets or sets the data context for an element when it participates in data binding.","pos":[0,82]}]}],"pos":[74934,75017],"yaml":true},{"content":"*Data context* is a concept that allows elements to inherit information from their parent elements about the binding source that is used for binding, as well as other characteristics of the binding such as the path.  \n  \n Data context can be set directly to a [!INCLUDE[TLA#tla_clr](~/includes/tlasharptla-clr-md.md)] object, with the bindings evaluating to properties of that object. Alternatively, you can set the data context to a <xref:System.Windows.Data.DataSourceProvider> object.  \n  \n This dependency property inherits property values. If there are child elements with no other value for <xref:System.Windows.FrameworkContentElement.DataContext%2A> established through local values or styles, the property system will set the value to be the <xref:System.Windows.FrameworkContentElement.DataContext%2A> value of the nearest parent element with this value assigned.  \n  \n Alternatively, you can use one of the following properties of the <xref:System.Windows.Data.Binding> class to specify the binding source explicitly: <xref:System.Windows.Data.Binding.ElementName%2A>, <xref:System.Windows.Data.Binding.Source%2A>, or <xref:System.Windows.Data.Binding.RelativeSource%2A>. For more information, see [How to: Specify the Binding Source](~/docs/framework/wpf/data/how-to-specify-the-binding-source.md).  \n  \n In [!INCLUDE[TLA2#tla_xaml](~/includes/tla2sharptla-xaml-md.md)], <xref:System.Windows.FrameworkContentElement.DataContext%2A> is most commonly set to as a <xref:System.Windows.Data.Binding> declaration. You can use either property element syntax or attribute syntax. Attribute syntax is shown in the example on this page. You can also set <xref:System.Windows.FrameworkContentElement.DataContext%2A> in code.  \n  \n<a name=\"xamlPropertyElementUsage_DataContext\"></a>   \n## XAML Property Element Usage  \n  \n```  \n<object>  \n  <object.DataContext>  \n    <dataContextObject />  \n  </object.DataContext>  \n</object>  \n```  \n  \n<a name=\"xamlAttributeUsage_DataContext\"></a>   \n## XAML Attribute Usage  \n  \n```  \n<object DataContext=\"bindingUsage\"/>  \n- or -  \n<object DataContext=\"{resourceExtension contextResourceKey}\"/>  \n```  \n  \n<a name=\"xamlValues_DataContext\"></a>   \n## XAML Values  \n *dataContextObject*  \n A directly embedded object that serves as data context for any bindings within the parent element. Typically, this object is a <xref:System.Windows.Data.Binding> or another <xref:System.Windows.Data.BindingBase> subclass. Alternatively, raw data of any [!INCLUDE[TLA2#tla_clr](~/includes/tla2sharptla-clr-md.md)] object type intended for binding may be placed here, with the actual bindings defined later.  \n  \n *bindingUsage*  \n A binding usage that evaluates to an appropriate data context. For details, see [Binding Markup Extension](~/docs/framework/wpf/advanced/binding-markup-extension.md).  \n  \n *resourceExtension*  \n One of the following: `StaticResource`, or `DynamicResource`. This usage is used when referring to raw data defined as an object in resources. See [XAML Resources](~/docs/framework/wpf/advanced/xaml-resources.md).  \n  \n *contextResourceKey*  \n The key identifier for the object being requested from within a <xref:System.Windows.ResourceDictionary>.  \n  \n<a name=\"dependencyPropertyInfo_DataContext\"></a>   \n## Dependency Property Information  \n  \n|||  \n|-|-|  \n|Identifier field|<xref:System.Windows.FrameworkContentElement.DataContextProperty>|  \n|Metadata properties set to `true`|<xref:System.Windows.FrameworkPropertyMetadata.Inherits%2A>|","nodes":[{"pos":[0,215],"content":"<bpt id=\"p1\">*</bpt>Data context<ept id=\"p1\">*</ept> is a concept that allows elements to inherit information from their parent elements about the binding source that is used for binding, as well as other characteristics of the binding such as the path.","source":"*Data context* is a concept that allows elements to inherit information from their parent elements about the binding source that is used for binding, as well as other characteristics of the binding such as the path."},{"pos":[222,487],"content":"Data context can be set directly to a [!INCLUDE[TLA#tla_clr](~/includes/tlasharptla-clr-md.md)] object, with the bindings evaluating to properties of that object. Alternatively, you can set the data context to a <xref:System.Windows.Data.DataSourceProvider> object.","nodes":[{"content":"Data context can be set directly to a <ph id=\"ph1\">[!INCLUDE[TLA#tla_clr](~/includes/tlasharptla-clr-md.md)]</ph> object, with the bindings evaluating to properties of that object.","pos":[0,162],"source":"Data context can be set directly to a [!INCLUDE[TLA#tla_clr](~/includes/tlasharptla-clr-md.md)] object, with the bindings evaluating to properties of that object."},{"content":"Alternatively, you can set the data context to a <ph id=\"ph1\">&lt;xref:System.Windows.Data.DataSourceProvider&gt;</ph> object.","pos":[163,265],"source":" Alternatively, you can set the data context to a <xref:System.Windows.Data.DataSourceProvider> object."}]},{"pos":[494,873],"content":"This dependency property inherits property values. If there are child elements with no other value for <xref:System.Windows.FrameworkContentElement.DataContext%2A> established through local values or styles, the property system will set the value to be the <xref:System.Windows.FrameworkContentElement.DataContext%2A> value of the nearest parent element with this value assigned.","nodes":[{"content":"This dependency property inherits property values. If there are child elements with no other value for <xref:System.Windows.FrameworkContentElement.DataContext%2A> established through local values or styles, the property system will set the value to be the <xref:System.Windows.FrameworkContentElement.DataContext%2A> value of the nearest parent element with this value assigned.","pos":[0,379],"nodes":[{"content":"This dependency property inherits property values.","pos":[0,50]},{"content":"If there are child elements with no other value for <ph id=\"ph1\">&lt;xref:System.Windows.FrameworkContentElement.DataContext%2A&gt;</ph> established through local values or styles, the property system will set the value to be the <ph id=\"ph2\">&lt;xref:System.Windows.FrameworkContentElement.DataContext%2A&gt;</ph> value of the nearest parent element with this value assigned.","pos":[51,379],"source":" If there are child elements with no other value for <xref:System.Windows.FrameworkContentElement.DataContext%2A> established through local values or styles, the property system will set the value to be the <xref:System.Windows.FrameworkContentElement.DataContext%2A> value of the nearest parent element with this value assigned."}]}]},{"pos":[880,1310],"content":"Alternatively, you can use one of the following properties of the <xref:System.Windows.Data.Binding> class to specify the binding source explicitly: <xref:System.Windows.Data.Binding.ElementName%2A>, <xref:System.Windows.Data.Binding.Source%2A>, or <xref:System.Windows.Data.Binding.RelativeSource%2A>. For more information, see [How to: Specify the Binding Source](~/docs/framework/wpf/data/how-to-specify-the-binding-source.md).","nodes":[{"content":"Alternatively, you can use one of the following properties of the <ph id=\"ph1\">&lt;xref:System.Windows.Data.Binding&gt;</ph> class to specify the binding source explicitly: <ph id=\"ph2\">&lt;xref:System.Windows.Data.Binding.ElementName%2A&gt;</ph>, <ph id=\"ph3\">&lt;xref:System.Windows.Data.Binding.Source%2A&gt;</ph>, or <ph id=\"ph4\">&lt;xref:System.Windows.Data.Binding.RelativeSource%2A&gt;</ph>.","pos":[0,302],"source":"Alternatively, you can use one of the following properties of the <xref:System.Windows.Data.Binding> class to specify the binding source explicitly: <xref:System.Windows.Data.Binding.ElementName%2A>, <xref:System.Windows.Data.Binding.Source%2A>, or <xref:System.Windows.Data.Binding.RelativeSource%2A>."},{"content":"For more information, see <bpt id=\"p1\">[</bpt>How to: Specify the Binding Source<ept id=\"p1\">](~/docs/framework/wpf/data/how-to-specify-the-binding-source.md)</ept>.","pos":[303,430],"source":" For more information, see [How to: Specify the Binding Source](~/docs/framework/wpf/data/how-to-specify-the-binding-source.md)."}]},{"pos":[1317,1726],"content":"In [!INCLUDE[TLA2#tla_xaml](~/includes/tla2sharptla-xaml-md.md)], <xref:System.Windows.FrameworkContentElement.DataContext%2A> is most commonly set to as a <xref:System.Windows.Data.Binding> declaration. You can use either property element syntax or attribute syntax. Attribute syntax is shown in the example on this page. You can also set <xref:System.Windows.FrameworkContentElement.DataContext%2A> in code.","nodes":[{"content":"In <ph id=\"ph1\">[!INCLUDE[TLA2#tla_xaml](~/includes/tla2sharptla-xaml-md.md)]</ph>, <ph id=\"ph2\">&lt;xref:System.Windows.FrameworkContentElement.DataContext%2A&gt;</ph> is most commonly set to as a <ph id=\"ph3\">&lt;xref:System.Windows.Data.Binding&gt;</ph> declaration.","pos":[0,203],"source":"In [!INCLUDE[TLA2#tla_xaml](~/includes/tla2sharptla-xaml-md.md)], <xref:System.Windows.FrameworkContentElement.DataContext%2A> is most commonly set to as a <xref:System.Windows.Data.Binding> declaration."},{"content":"You can use either property element syntax or attribute syntax.","pos":[204,267]},{"content":"Attribute syntax is shown in the example on this page.","pos":[268,322]},{"content":"You can also set <ph id=\"ph1\">&lt;xref:System.Windows.FrameworkContentElement.DataContext%2A&gt;</ph> in code.","pos":[323,409],"source":" You can also set <xref:System.Windows.FrameworkContentElement.DataContext%2A> in code."}]},{"pos":[1790,1817],"content":"XAML Property Element Usage","linkify":"XAML Property Element Usage","nodes":[{"content":"XAML Property Element Usage","pos":[0,27]}]},{"pos":[1992,2012],"content":"XAML Attribute Usage","linkify":"XAML Attribute Usage","nodes":[{"content":"XAML Attribute Usage","pos":[0,20]}]},{"pos":[2190,2201],"content":"XAML Values","linkify":"XAML Values","nodes":[{"content":"XAML Values","pos":[0,11]}]},{"pos":[2205,2633],"content":"*dataContextObject*  \n A directly embedded object that serves as data context for any bindings within the parent element. Typically, this object is a <xref:System.Windows.Data.Binding> or another <xref:System.Windows.Data.BindingBase> subclass. Alternatively, raw data of any [!INCLUDE[TLA2#tla_clr](~/includes/tla2sharptla-clr-md.md)] object type intended for binding may be placed here, with the actual bindings defined later.","nodes":[{"content":"<bpt id=\"p1\">*</bpt>dataContextObject<ept id=\"p1\">*</ept>","pos":[0,19],"source":"*dataContextObject*"},{"content":" A directly embedded object that serves as data context for any bindings within the parent element. Typically, this object is a <xref:System.Windows.Data.Binding> or another <xref:System.Windows.Data.BindingBase> subclass. Alternatively, raw data of any [!INCLUDE[TLA2#tla_clr](~/includes/tla2sharptla-clr-md.md)] object type intended for binding may be placed here, with the actual bindings defined later.","pos":[22,428],"nodes":[{"content":"A directly embedded object that serves as data context for any bindings within the parent element.","pos":[1,99]},{"content":"Typically, this object is a <ph id=\"ph1\">&lt;xref:System.Windows.Data.Binding&gt;</ph> or another <ph id=\"ph2\">&lt;xref:System.Windows.Data.BindingBase&gt;</ph> subclass.","pos":[100,222],"source":" Typically, this object is a <xref:System.Windows.Data.Binding> or another <xref:System.Windows.Data.BindingBase> subclass."},{"content":"Alternatively, raw data of any <ph id=\"ph1\">[!INCLUDE[TLA2#tla_clr](~/includes/tla2sharptla-clr-md.md)]</ph> object type intended for binding may be placed here, with the actual bindings defined later.","pos":[223,406],"source":" Alternatively, raw data of any [!INCLUDE[TLA2#tla_clr](~/includes/tla2sharptla-clr-md.md)] object type intended for binding may be placed here, with the actual bindings defined later."}]}]},{"pos":[2640,2824],"content":"*bindingUsage*  \n A binding usage that evaluates to an appropriate data context. For details, see [Binding Markup Extension](~/docs/framework/wpf/advanced/binding-markup-extension.md).","nodes":[{"content":"<bpt id=\"p1\">*</bpt>bindingUsage<ept id=\"p1\">*</ept>","pos":[0,14],"source":"*bindingUsage*"},{"content":" A binding usage that evaluates to an appropriate data context. For details, see [Binding Markup Extension](~/docs/framework/wpf/advanced/binding-markup-extension.md).","pos":[17,184],"nodes":[{"content":"A binding usage that evaluates to an appropriate data context.","pos":[1,63]},{"content":"For details, see <bpt id=\"p1\">[</bpt>Binding Markup Extension<ept id=\"p1\">](~/docs/framework/wpf/advanced/binding-markup-extension.md)</ept>.","pos":[64,167],"source":" For details, see [Binding Markup Extension](~/docs/framework/wpf/advanced/binding-markup-extension.md)."}]}]},{"pos":[2831,3067],"content":"*resourceExtension*  \n One of the following: `StaticResource`, or `DynamicResource`. This usage is used when referring to raw data defined as an object in resources. See [XAML Resources](~/docs/framework/wpf/advanced/xaml-resources.md).","nodes":[{"content":"<bpt id=\"p1\">*</bpt>resourceExtension<ept id=\"p1\">*</ept>","pos":[0,19],"source":"*resourceExtension*"},{"content":" One of the following: `StaticResource`, or `DynamicResource`. This usage is used when referring to raw data defined as an object in resources. See [XAML Resources](~/docs/framework/wpf/advanced/xaml-resources.md).","pos":[22,236],"nodes":[{"content":"One of the following: <ph id=\"ph1\">`StaticResource`</ph>, or <ph id=\"ph2\">`DynamicResource`</ph>.","pos":[1,62],"source":" One of the following: `StaticResource`, or `DynamicResource`."},{"content":"This usage is used when referring to raw data defined as an object in resources.","pos":[63,143]},{"content":"See <bpt id=\"p1\">[</bpt>XAML Resources<ept id=\"p1\">](~/docs/framework/wpf/advanced/xaml-resources.md)</ept>.","pos":[144,214],"source":" See [XAML Resources](~/docs/framework/wpf/advanced/xaml-resources.md)."}]}]},{"pos":[3074,3203],"content":"*contextResourceKey*  \n The key identifier for the object being requested from within a <xref:System.Windows.ResourceDictionary>.","nodes":[{"content":"<bpt id=\"p1\">*</bpt>contextResourceKey<ept id=\"p1\">*</ept>","pos":[0,20],"source":"*contextResourceKey*"},{"content":"The key identifier for the object being requested from within a <ph id=\"ph1\">&lt;xref:System.Windows.ResourceDictionary&gt;</ph>.","pos":[24,129],"source":" The key identifier for the object being requested from within a <xref:System.Windows.ResourceDictionary>."}]},{"pos":[3265,3296],"content":"Dependency Property Information","linkify":"Dependency Property Information","nodes":[{"content":"Dependency Property Information","pos":[0,31]}]},{"pos":[3317,3333],"content":"Identifier field","nodes":[{"content":"Identifier field","pos":[0,16]}]},{"pos":[3334,3399],"content":"<xref:System.Windows.FrameworkContentElement.DataContextProperty>","nodes":[]},{"pos":[3404,3437],"content":"Metadata properties set to <ph id=\"ph1\">`true`</ph>","source":"Metadata properties set to `true`"},{"pos":[3438,3497],"content":"<xref:System.Windows.FrameworkPropertyMetadata.Inherits%2A>","nodes":[]}],"pos":[75028,78591],"yaml":true,"extradata":"MT"},{"content":"The object to use as data context.","nodes":[{"pos":[0,34],"content":"The object to use as data context.","nodes":[{"content":"The object to use as data context.","pos":[0,34]}]}],"pos":[79434,79469],"yaml":true},{"content":"Occurs when this element's data context changes.","nodes":[{"pos":[0,48],"content":"Occurs when this element's data context changes.","nodes":[{"content":"Occurs when this element's data context changes.","pos":[0,48]}]}],"pos":[80590,80639],"yaml":true},{"content":"For an explanation of data contexts and data binding, see [Data Binding Overview](~/docs/framework/wpf/data/data-binding-overview.md).  \n  \n> [!IMPORTANT]\n>  When an element's <xref:System.Windows.FrameworkContentElement.DataContext%2A> changes, all data-bound properties on this element are potentially affected. This applies to any elements that are descendant elements of the current element, which inherit the data context, and also the current element itself. All such bindings re-interpret the new <xref:System.Windows.FrameworkContentElement.DataContext%2A> to reflect the new value in bindings. There is no guarantee made about the order of these changes relative to the raising of the <xref:System.Windows.FrameworkContentElement.DataContextChanged> event.  The changes can occur before the event, after the event, or in any mixture.","nodes":[{"pos":[0,134],"content":"For an explanation of data contexts and data binding, see <bpt id=\"p1\">[</bpt>Data Binding Overview<ept id=\"p1\">](~/docs/framework/wpf/data/data-binding-overview.md)</ept>.","source":"For an explanation of data contexts and data binding, see [Data Binding Overview](~/docs/framework/wpf/data/data-binding-overview.md)."},{"pos":[142,842],"content":"[!IMPORTANT]\n When an element's <xref:System.Windows.FrameworkContentElement.DataContext%2A> changes, all data-bound properties on this element are potentially affected. This applies to any elements that are descendant elements of the current element, which inherit the data context, and also the current element itself. All such bindings re-interpret the new <xref:System.Windows.FrameworkContentElement.DataContext%2A> to reflect the new value in bindings. There is no guarantee made about the order of these changes relative to the raising of the <xref:System.Windows.FrameworkContentElement.DataContextChanged> event.  The changes can occur before the event, after the event, or in any mixture.","leadings":["","> "],"nodes":[{"content":" When an element's <xref:System.Windows.FrameworkContentElement.DataContext%2A> changes, all data-bound properties on this element are potentially affected. This applies to any elements that are descendant elements of the current element, which inherit the data context, and also the current element itself. All such bindings re-interpret the new <xref:System.Windows.FrameworkContentElement.DataContext%2A> to reflect the new value in bindings. There is no guarantee made about the order of these changes relative to the raising of the <xref:System.Windows.FrameworkContentElement.DataContextChanged> event.  The changes can occur before the event, after the event, or in any mixture.","pos":[13,698],"nodes":[{"content":"When an element's <ph id=\"ph1\">&lt;xref:System.Windows.FrameworkContentElement.DataContext%2A&gt;</ph> changes, all data-bound properties on this element are potentially affected.","pos":[1,156],"source":" When an element's <xref:System.Windows.FrameworkContentElement.DataContext%2A> changes, all data-bound properties on this element are potentially affected."},{"content":"This applies to any elements that are descendant elements of the current element, which inherit the data context, and also the current element itself.","pos":[157,307]},{"content":"All such bindings re-interpret the new <ph id=\"ph1\">&lt;xref:System.Windows.FrameworkContentElement.DataContext%2A&gt;</ph> to reflect the new value in bindings.","pos":[308,445],"source":" All such bindings re-interpret the new <xref:System.Windows.FrameworkContentElement.DataContext%2A> to reflect the new value in bindings."},{"content":"There is no guarantee made about the order of these changes relative to the raising of the <ph id=\"ph1\">&lt;xref:System.Windows.FrameworkContentElement.DataContextChanged&gt;</ph> event.","pos":[446,608],"source":" There is no guarantee made about the order of these changes relative to the raising of the <xref:System.Windows.FrameworkContentElement.DataContextChanged> event."},{"content":"The changes can occur before the event, after the event, or in any mixture.","pos":[610,685]}]}]}],"pos":[80650,81498],"yaml":true,"extradata":"MT"},{"content":"Identifies the <xref href=\"System.Windows.FrameworkContentElement.DataContext\"></xref> dependency property.","nodes":[{"pos":[0,107],"content":"Identifies the <ph id=\"ph1\">&lt;xref href=\"System.Windows.FrameworkContentElement.DataContext\"&gt;&lt;/xref&gt;</ph> dependency property.","source":"Identifies the <xref href=\"System.Windows.FrameworkContentElement.DataContext\"></xref> dependency property."}],"pos":[82728,82836],"yaml":true},{"content":"Gets or sets the key to use to find the style template for this control in themes.","nodes":[{"pos":[0,82],"content":"Gets or sets the key to use to find the style template for this control in themes.","nodes":[{"content":"Gets or sets the key to use to find the style template for this control in themes.","pos":[0,82]}]}],"pos":[84018,84101],"yaml":true},{"content":"This property is typically not set through any of its direct setters. Instead, you override the type-specific metadata of this dependency property every time you create a new subclass. When you subclass, call the <xref:System.Windows.DependencyProperty.OverrideMetadata%2A> method against the <xref:System.Windows.FrameworkContentElement.DefaultStyleKeyProperty> identifier, within the static constructor of the control subclass.  \n  \n For instance, an inline class such as <xref:System.Windows.Documents.Bold> actually has very little implementation beyond overriding the <xref:System.Windows.FrameworkContentElement.DefaultStyleKey%2A> metadata in its static constructor, and exposing several instance constructors. The fact that elements surrounded by the <xref:System.Windows.Documents.Bold> tag gain a <xref:System.Windows.Documents.TextElement.FontWeight%2A> property of <xref:System.Windows.FontWeights.Bold%2A> is implemented within the theme style that was referenced by setting the default value of <xref:System.Windows.FrameworkContentElement.DefaultStyleKey%2A> to `typeof(Bold)`.  \n  \n If you want your element or control to deliberately not use theme styles, set the <xref:System.Windows.FrameworkContentElement.OverridesDefaultStyle%2A> property to `true`.  \n  \n<a name=\"dependencyPropertyInfo_DefaultStyleKey\"></a>   \n## Dependency Property Information  \n  \n|||  \n|-|-|  \n|Identifier field|<xref:System.Windows.FrameworkContentElement.DefaultStyleKeyProperty>|  \n|Metadata properties set to `true`|<xref:System.Windows.FrameworkPropertyMetadata.AffectsMeasure%2A>|","nodes":[{"pos":[0,429],"content":"This property is typically not set through any of its direct setters. Instead, you override the type-specific metadata of this dependency property every time you create a new subclass. When you subclass, call the <xref:System.Windows.DependencyProperty.OverrideMetadata%2A> method against the <xref:System.Windows.FrameworkContentElement.DefaultStyleKeyProperty> identifier, within the static constructor of the control subclass.","nodes":[{"content":"This property is typically not set through any of its direct setters. Instead, you override the type-specific metadata of this dependency property every time you create a new subclass. When you subclass, call the <xref:System.Windows.DependencyProperty.OverrideMetadata%2A> method against the <xref:System.Windows.FrameworkContentElement.DefaultStyleKeyProperty> identifier, within the static constructor of the control subclass.","pos":[0,429],"nodes":[{"content":"This property is typically not set through any of its direct setters.","pos":[0,69]},{"content":"Instead, you override the type-specific metadata of this dependency property every time you create a new subclass.","pos":[70,184]},{"content":"When you subclass, call the <ph id=\"ph1\">&lt;xref:System.Windows.DependencyProperty.OverrideMetadata%2A&gt;</ph> method against the <ph id=\"ph2\">&lt;xref:System.Windows.FrameworkContentElement.DefaultStyleKeyProperty&gt;</ph> identifier, within the static constructor of the control subclass.","pos":[185,429],"source":" When you subclass, call the <xref:System.Windows.DependencyProperty.OverrideMetadata%2A> method against the <xref:System.Windows.FrameworkContentElement.DefaultStyleKeyProperty> identifier, within the static constructor of the control subclass."}]}]},{"pos":[436,1092],"content":"For instance, an inline class such as <xref:System.Windows.Documents.Bold> actually has very little implementation beyond overriding the <xref:System.Windows.FrameworkContentElement.DefaultStyleKey%2A> metadata in its static constructor, and exposing several instance constructors. The fact that elements surrounded by the <xref:System.Windows.Documents.Bold> tag gain a <xref:System.Windows.Documents.TextElement.FontWeight%2A> property of <xref:System.Windows.FontWeights.Bold%2A> is implemented within the theme style that was referenced by setting the default value of <xref:System.Windows.FrameworkContentElement.DefaultStyleKey%2A> to `typeof(Bold)`.","nodes":[{"content":"For instance, an inline class such as <ph id=\"ph1\">&lt;xref:System.Windows.Documents.Bold&gt;</ph> actually has very little implementation beyond overriding the <ph id=\"ph2\">&lt;xref:System.Windows.FrameworkContentElement.DefaultStyleKey%2A&gt;</ph> metadata in its static constructor, and exposing several instance constructors.","pos":[0,281],"source":"For instance, an inline class such as <xref:System.Windows.Documents.Bold> actually has very little implementation beyond overriding the <xref:System.Windows.FrameworkContentElement.DefaultStyleKey%2A> metadata in its static constructor, and exposing several instance constructors."},{"content":"The fact that elements surrounded by the <ph id=\"ph1\">&lt;xref:System.Windows.Documents.Bold&gt;</ph> tag gain a <ph id=\"ph2\">&lt;xref:System.Windows.Documents.TextElement.FontWeight%2A&gt;</ph> property of <ph id=\"ph3\">&lt;xref:System.Windows.FontWeights.Bold%2A&gt;</ph> is implemented within the theme style that was referenced by setting the default value of <ph id=\"ph4\">&lt;xref:System.Windows.FrameworkContentElement.DefaultStyleKey%2A&gt;</ph> to <ph id=\"ph5\">`typeof(Bold)`</ph>.","pos":[282,656],"source":" The fact that elements surrounded by the <xref:System.Windows.Documents.Bold> tag gain a <xref:System.Windows.Documents.TextElement.FontWeight%2A> property of <xref:System.Windows.FontWeights.Bold%2A> is implemented within the theme style that was referenced by setting the default value of <xref:System.Windows.FrameworkContentElement.DefaultStyleKey%2A> to `typeof(Bold)`."}]},{"pos":[1099,1271],"content":"If you want your element or control to deliberately not use theme styles, set the <ph id=\"ph1\">&lt;xref:System.Windows.FrameworkContentElement.OverridesDefaultStyle%2A&gt;</ph> property to <ph id=\"ph2\">`true`</ph>.","source":"If you want your element or control to deliberately not use theme styles, set the <xref:System.Windows.FrameworkContentElement.OverridesDefaultStyle%2A> property to `true`."},{"pos":[1337,1368],"content":"Dependency Property Information","linkify":"Dependency Property Information","nodes":[{"content":"Dependency Property Information","pos":[0,31]}]},{"pos":[1389,1405],"content":"Identifier field","nodes":[{"content":"Identifier field","pos":[0,16]}]},{"pos":[1406,1475],"content":"<xref:System.Windows.FrameworkContentElement.DefaultStyleKeyProperty>","nodes":[]},{"pos":[1480,1513],"content":"Metadata properties set to <ph id=\"ph1\">`true`</ph>","source":"Metadata properties set to `true`"},{"pos":[1514,1579],"content":"<xref:System.Windows.FrameworkPropertyMetadata.AffectsMeasure%2A>","nodes":[]}],"pos":[84112,85709],"yaml":true,"extradata":"MT"},{"content":"The style key. To work correctly as part of theme style lookup, this value is expected to be the <xref href=\"System.Type\"></xref> of the element being styled. `null` is an accepted value for a certain case.","nodes":[{"pos":[0,206],"content":"The style key. To work correctly as part of theme style lookup, this value is expected to be the <xref href=\"System.Type\"></xref> of the element being styled. `null` is an accepted value for a certain case.","nodes":[{"content":"The style key.","pos":[0,14]},{"content":"To work correctly as part of theme style lookup, this value is expected to be the <ph id=\"ph1\">&lt;xref href=\"System.Type\"&gt;&lt;/xref&gt;</ph> of the element being styled.","pos":[15,158],"source":" To work correctly as part of theme style lookup, this value is expected to be the <xref href=\"System.Type\"></xref> of the element being styled."},{"content":"<ph id=\"ph1\">`null`</ph> is an accepted value for a certain case.","pos":[159,206],"source":"`null` is an accepted value for a certain case."}]}],"pos":[85836,86043],"yaml":true},{"content":"Identifies the <xref href=\"System.Windows.FrameworkContentElement.DefaultStyleKey\"></xref> dependency property.","nodes":[{"pos":[0,111],"content":"Identifies the <ph id=\"ph1\">&lt;xref href=\"System.Windows.FrameworkContentElement.DefaultStyleKey\"&gt;&lt;/xref&gt;</ph> dependency property.","source":"Identifies the <xref href=\"System.Windows.FrameworkContentElement.DefaultStyleKey\"></xref> dependency property."}],"pos":[87157,87269],"yaml":true},{"content":"Called immediately after an element is initialized.","nodes":[{"pos":[0,51],"content":"Called immediately after an element is initialized.","nodes":[{"content":"Called immediately after an element is initialized.","pos":[0,51]}]}],"pos":[88414,88466],"yaml":true},{"content":"Implement this method to provide special handling that should occur when your element is initialized during the element loading process.  \n  \n Your implementation should call the base implementation, because the base (default) implementation sets some internal flags to keep track of initialization.  \n  \n If <xref:System.Windows.FrameworkContentElement.BeginInit%2A> was previously called, the base implementation will raise the <xref:System.Windows.FrameworkContentElement.Initialized> event. Otherwise, if <xref:System.Windows.FrameworkContentElement.BeginInit%2A> was not called or it could not be determined whether <xref:System.Windows.FrameworkContentElement.BeginInit%2A> was called, the event is not raised.","nodes":[{"pos":[0,136],"content":"Implement this method to provide special handling that should occur when your element is initialized during the element loading process.","nodes":[{"content":"Implement this method to provide special handling that should occur when your element is initialized during the element loading process.","pos":[0,136]}]},{"pos":[143,299],"content":"Your implementation should call the base implementation, because the base (default) implementation sets some internal flags to keep track of initialization.","nodes":[{"content":"Your implementation should call the base implementation, because the base (default) implementation sets some internal flags to keep track of initialization.","pos":[0,156]}]},{"pos":[306,716],"content":"If <xref:System.Windows.FrameworkContentElement.BeginInit%2A> was previously called, the base implementation will raise the <xref:System.Windows.FrameworkContentElement.Initialized> event. Otherwise, if <xref:System.Windows.FrameworkContentElement.BeginInit%2A> was not called or it could not be determined whether <xref:System.Windows.FrameworkContentElement.BeginInit%2A> was called, the event is not raised.","nodes":[{"content":"If <xref:System.Windows.FrameworkContentElement.BeginInit%2A> was previously called, the base implementation will raise the <xref:System.Windows.FrameworkContentElement.Initialized> event. Otherwise, if <xref:System.Windows.FrameworkContentElement.BeginInit%2A> was not called or it could not be determined whether <xref:System.Windows.FrameworkContentElement.BeginInit%2A> was called, the event is not raised.","pos":[0,410],"nodes":[{"content":"If <ph id=\"ph1\">&lt;xref:System.Windows.FrameworkContentElement.BeginInit%2A&gt;</ph> was previously called, the base implementation will raise the <ph id=\"ph2\">&lt;xref:System.Windows.FrameworkContentElement.Initialized&gt;</ph> event.","pos":[0,188],"source":"If <xref:System.Windows.FrameworkContentElement.BeginInit%2A> was previously called, the base implementation will raise the <xref:System.Windows.FrameworkContentElement.Initialized> event."},{"content":"Otherwise, if <ph id=\"ph1\">&lt;xref:System.Windows.FrameworkContentElement.BeginInit%2A&gt;</ph> was not called or it could not be determined whether <ph id=\"ph2\">&lt;xref:System.Windows.FrameworkContentElement.BeginInit%2A&gt;</ph> was called, the event is not raised.","pos":[189,410],"source":" Otherwise, if <xref:System.Windows.FrameworkContentElement.BeginInit%2A> was not called or it could not be determined whether <xref:System.Windows.FrameworkContentElement.BeginInit%2A> was called, the event is not raised."}]}]}],"pos":[88477,89200],"yaml":true,"extradata":"MT"},{"content":"Finds an element that has the provided identifier name.","nodes":[{"pos":[0,55],"content":"Finds an element that has the provided identifier name.","nodes":[{"content":"Finds an element that has the provided identifier name.","pos":[0,55]}]}],"pos":[90360,90416],"yaml":true},{"content":"If this element has child elements, these child elements are all searched recursively for the requested named element.","nodes":[{"pos":[0,118],"content":"If this element has child elements, these child elements are all searched recursively for the requested named element.","nodes":[{"content":"If this element has child elements, these child elements are all searched recursively for the requested named element.","pos":[0,118]}]}],"pos":[90427,90546],"yaml":true,"extradata":"MT"},{"content":"Name of the element to search for.","nodes":[{"pos":[0,34],"content":"Name of the element to search for.","nodes":[{"content":"Name of the element to search for.","pos":[0,34]}]}],"pos":[91162,91197],"yaml":true},{"content":"The requested element. May be `null` if no matching element was found.","nodes":[{"pos":[0,70],"content":"The requested element. May be `null` if no matching element was found.","nodes":[{"content":"The requested element.","pos":[0,22]},{"content":"May be <ph id=\"ph1\">`null`</ph> if no matching element was found.","pos":[23,70],"source":" May be `null` if no matching element was found."}]}],"pos":[91254,91325],"yaml":true},{"content":"Searches for a resource with the specified key, and will throw an exception if the requested resource is not found.","nodes":[{"pos":[0,115],"content":"Searches for a resource with the specified key, and will throw an exception if the requested resource is not found.","nodes":[{"content":"Searches for a resource with the specified key, and will throw an exception if the requested resource is not found.","pos":[0,115]}]}],"pos":[92414,92530],"yaml":true},{"content":"> [!IMPORTANT]\n>  If you call this method for a key that cannot be found, an exception is thrown. If you do not want to handle exceptions for this case, you should instead call <xref:System.Windows.FrameworkContentElement.TryFindResource%2A>. <xref:System.Windows.FrameworkContentElement.TryFindResource%2A> returns `null` when no resource is found, and does not throw an exception.  \n  \n If the resource is not found on the calling element, the parent tree is searched using the logical tree, in the same way that the tree would be searched if a resource were requested by key at run-time.  \n  \n Typically you would immediately cast the return value to the type of the property that you were attempting to set with the returned resource value.","nodes":[{"pos":[2,382],"content":"[!IMPORTANT]\n If you call this method for a key that cannot be found, an exception is thrown. If you do not want to handle exceptions for this case, you should instead call <xref:System.Windows.FrameworkContentElement.TryFindResource%2A>. <xref:System.Windows.FrameworkContentElement.TryFindResource%2A> returns `null` when no resource is found, and does not throw an exception.","leadings":["","> "],"nodes":[{"content":" If you call this method for a key that cannot be found, an exception is thrown. If you do not want to handle exceptions for this case, you should instead call <xref:System.Windows.FrameworkContentElement.TryFindResource%2A>. <xref:System.Windows.FrameworkContentElement.TryFindResource%2A> returns `null` when no resource is found, and does not throw an exception.","pos":[13,378],"nodes":[{"content":"If you call this method for a key that cannot be found, an exception is thrown.","pos":[1,80]},{"content":"If you do not want to handle exceptions for this case, you should instead call <ph id=\"ph1\">&lt;xref:System.Windows.FrameworkContentElement.TryFindResource%2A&gt;</ph>.","pos":[81,225],"source":" If you do not want to handle exceptions for this case, you should instead call <xref:System.Windows.FrameworkContentElement.TryFindResource%2A>."},{"content":"<ph id=\"ph1\">&lt;xref:System.Windows.FrameworkContentElement.TryFindResource%2A&gt;</ph> returns <ph id=\"ph2\">`null`</ph> when no resource is found, and does not throw an exception.","pos":[226,365],"source":" <xref:System.Windows.FrameworkContentElement.TryFindResource%2A> returns `null` when no resource is found, and does not throw an exception."}]}]},{"pos":[389,590],"content":"If the resource is not found on the calling element, the parent tree is searched using the logical tree, in the same way that the tree would be searched if a resource were requested by key at run-time.","nodes":[{"content":"If the resource is not found on the calling element, the parent tree is searched using the logical tree, in the same way that the tree would be searched if a resource were requested by key at run-time.","pos":[0,201]}]},{"pos":[597,744],"content":"Typically you would immediately cast the return value to the type of the property that you were attempting to set with the returned resource value.","nodes":[{"content":"Typically you would immediately cast the return value to the type of the property that you were attempting to set with the returned resource value.","pos":[0,147]}]}],"pos":[92541,93293],"yaml":true,"extradata":"MT"},{"content":"Key identifier of the resource to be found.","nodes":[{"pos":[0,43],"content":"Key identifier of the resource to be found.","nodes":[{"content":"Key identifier of the resource to be found.","pos":[0,43]}]}],"pos":[93943,93987],"yaml":true},{"content":"The found resource, or `null` if no matching resource was found (but will also throw an exception if `null`).","nodes":[{"pos":[0,109],"content":"The found resource, or <ph id=\"ph1\">`null`</ph> if no matching resource was found (but will also throw an exception if <ph id=\"ph2\">`null`</ph>).","source":"The found resource, or `null` if no matching resource was found (but will also throw an exception if `null`)."}],"pos":[94044,94154],"yaml":true},{"content":"The requested resource key was not found.","nodes":[{"pos":[0,41],"content":"The requested resource key was not found.","nodes":[{"content":"The requested resource key was not found.","pos":[0,41]}]}],"pos":[94383,94425],"yaml":true},{"content":"<code>resourceKey</code> is `null`.","nodes":[{"pos":[0,35],"content":"<ph id=\"ph1\">&lt;code&gt;resourceKey&lt;/code&gt;</ph> is <ph id=\"ph2\">`null`</ph>.","source":"<code>resourceKey</code> is `null`."}],"pos":[94527,94563],"yaml":true},{"content":"Gets or sets an object that enables customization of appearance, effects, or other style characteristics that will apply to this element when it captures keyboard focus.","nodes":[{"pos":[0,169],"content":"Gets or sets an object that enables customization of appearance, effects, or other style characteristics that will apply to this element when it captures keyboard focus.","nodes":[{"content":"Gets or sets an object that enables customization of appearance, effects, or other style characteristics that will apply to this element when it captures keyboard focus.","pos":[0,169]}]}],"pos":[95553,95723],"yaml":true},{"content":"When setting this property in [!INCLUDE[TLA2#tla_xaml](~/includes/tla2sharptla-xaml-md.md)], styles are almost always defined as a resource, rather than inline as an element, and that resource is usually referenced as a <xref:System.Windows.StaticResourceExtension>.  \n  \n Note that this property affects visual appearance but does not report so in metadata. This is because the visual appearance change is event-driven and may not apply at all times, and thus should not generally report any visual or layout information in metadata.  \n  \n Conceptually, the visual behavior of focus applied to a control should be coherent from element to element. The most sensible way to enforce coherence is to only change the focus visual style if you are composing an entire theme. Setting this property on individual styles and not as part of a theme is not the intended usage of this property, because it may lead to a confusing user experience regarding keyboard focus. If you are intending element-specific behavior that is deliberately not coherent across a theme, a much better approach is to use triggers in styles for individual input state properties, such as <xref:System.Windows.UIElement.IsFocused%2A> or <xref:System.Windows.UIElement.IsKeyboardFocusWithin%2A>, and to do so in a way that does not visually interfere with any existing focus visual style. For more information on the design intention of <xref:System.Windows.FrameworkContentElement.FocusVisualStyle%2A> and alternative focus properties, see [Styling for Focus in Controls, and FocusVisualStyle](~/docs/framework/wpf/advanced/styling-for-focus-in-controls-and-focusvisualstyle.md).  \n  \n<a name=\"xamlAttributeUsage_FocusVisualStyle\"></a>   \n## XAML Attribute Usage  \n  \n```  \n<object FocusVisualStyle=\"{resourceExtension styleResourceKey}\"/>  \n```  \n  \n<a name=\"xamlPropertyElementUsage_FocusVisualStyle\"></a>   \n## XAML Property Element Usage  \n  \n<a name=\"xamlValues_FocusVisualStyle\"></a>   \n## XAML Values  \n *resourceExtension*  \n One of the following: , or . See [XAML Resources](~/docs/framework/wpf/advanced/xaml-resources.md).  \n  \n *styleResourceKey*  \n The key that identifies the style being requested. The key refers to an existing resource in a <xref:System.Windows.ResourceDictionary>.  \n  \n> [!NOTE]\n>  Property element syntax is technically possible, but not recommended. See [Inline Styles and Templates](~/docs/framework/wpf/advanced/inline-styles-and-templates.md).  A binding reference using  or <xref:System.Windows.Data.Binding> is also possible, but uncommon.  \n  \n<a name=\"dependencyPropertyInfo_FocusVisualStyle\"></a>   \n## Dependency Property Information  \n  \n|||  \n|-|-|  \n|Identifier field|<xref:System.Windows.FrameworkContentElement.FocusVisualStyleProperty>|  \n|Metadata properties set to `true`|None|","nodes":[{"pos":[0,266],"content":"When setting this property in <ph id=\"ph1\">[!INCLUDE[TLA2#tla_xaml](~/includes/tla2sharptla-xaml-md.md)]</ph>, styles are almost always defined as a resource, rather than inline as an element, and that resource is usually referenced as a <ph id=\"ph2\">&lt;xref:System.Windows.StaticResourceExtension&gt;</ph>.","source":"When setting this property in [!INCLUDE[TLA2#tla_xaml](~/includes/tla2sharptla-xaml-md.md)], styles are almost always defined as a resource, rather than inline as an element, and that resource is usually referenced as a <xref:System.Windows.StaticResourceExtension>."},{"pos":[273,534],"content":"Note that this property affects visual appearance but does not report so in metadata. This is because the visual appearance change is event-driven and may not apply at all times, and thus should not generally report any visual or layout information in metadata.","nodes":[{"content":"Note that this property affects visual appearance but does not report so in metadata. This is because the visual appearance change is event-driven and may not apply at all times, and thus should not generally report any visual or layout information in metadata.","pos":[0,261],"nodes":[{"content":"Note that this property affects visual appearance but does not report so in metadata.","pos":[0,85]},{"content":"This is because the visual appearance change is event-driven and may not apply at all times, and thus should not generally report any visual or layout information in metadata.","pos":[86,261]}]}]},{"pos":[541,1648],"content":"Conceptually, the visual behavior of focus applied to a control should be coherent from element to element. The most sensible way to enforce coherence is to only change the focus visual style if you are composing an entire theme. Setting this property on individual styles and not as part of a theme is not the intended usage of this property, because it may lead to a confusing user experience regarding keyboard focus. If you are intending element-specific behavior that is deliberately not coherent across a theme, a much better approach is to use triggers in styles for individual input state properties, such as <xref:System.Windows.UIElement.IsFocused%2A> or <xref:System.Windows.UIElement.IsKeyboardFocusWithin%2A>, and to do so in a way that does not visually interfere with any existing focus visual style. For more information on the design intention of <xref:System.Windows.FrameworkContentElement.FocusVisualStyle%2A> and alternative focus properties, see [Styling for Focus in Controls, and FocusVisualStyle](~/docs/framework/wpf/advanced/styling-for-focus-in-controls-and-focusvisualstyle.md).","nodes":[{"content":"Conceptually, the visual behavior of focus applied to a control should be coherent from element to element.","pos":[0,107]},{"content":"The most sensible way to enforce coherence is to only change the focus visual style if you are composing an entire theme.","pos":[108,229]},{"content":"Setting this property on individual styles and not as part of a theme is not the intended usage of this property, because it may lead to a confusing user experience regarding keyboard focus.","pos":[230,420]},{"content":"If you are intending element-specific behavior that is deliberately not coherent across a theme, a much better approach is to use triggers in styles for individual input state properties, such as <ph id=\"ph1\">&lt;xref:System.Windows.UIElement.IsFocused%2A&gt;</ph> or <ph id=\"ph2\">&lt;xref:System.Windows.UIElement.IsKeyboardFocusWithin%2A&gt;</ph>, and to do so in a way that does not visually interfere with any existing focus visual style.","pos":[421,815],"source":" If you are intending element-specific behavior that is deliberately not coherent across a theme, a much better approach is to use triggers in styles for individual input state properties, such as <xref:System.Windows.UIElement.IsFocused%2A> or <xref:System.Windows.UIElement.IsKeyboardFocusWithin%2A>, and to do so in a way that does not visually interfere with any existing focus visual style."},{"content":"For more information on the design intention of <ph id=\"ph1\">&lt;xref:System.Windows.FrameworkContentElement.FocusVisualStyle%2A&gt;</ph> and alternative focus properties, see <bpt id=\"p1\">[</bpt>Styling for Focus in Controls, and FocusVisualStyle<ept id=\"p1\">](~/docs/framework/wpf/advanced/styling-for-focus-in-controls-and-focusvisualstyle.md)</ept>.","pos":[816,1107],"source":" For more information on the design intention of <xref:System.Windows.FrameworkContentElement.FocusVisualStyle%2A> and alternative focus properties, see [Styling for Focus in Controls, and FocusVisualStyle](~/docs/framework/wpf/advanced/styling-for-focus-in-controls-and-focusvisualstyle.md)."}]},{"pos":[1711,1731],"content":"XAML Attribute Usage","linkify":"XAML Attribute Usage","nodes":[{"content":"XAML Attribute Usage","pos":[0,20]}]},{"pos":[1883,1910],"content":"XAML Property Element Usage","linkify":"XAML Property Element Usage","nodes":[{"content":"XAML Property Element Usage","pos":[0,27]}]},{"pos":[1965,1976],"content":"XAML Values","linkify":"XAML Values","nodes":[{"content":"XAML Values","pos":[0,11]}]},{"pos":[1980,2102],"content":"*resourceExtension*  \n One of the following: , or . See [XAML Resources](~/docs/framework/wpf/advanced/xaml-resources.md).","nodes":[{"content":"<bpt id=\"p1\">*</bpt>resourceExtension<ept id=\"p1\">*</ept>","pos":[0,19],"source":"*resourceExtension*"},{"content":" One of the following: , or . See [XAML Resources](~/docs/framework/wpf/advanced/xaml-resources.md).","pos":[22,122],"nodes":[{"content":"One of the following: , or .","pos":[1,29]},{"content":"See <bpt id=\"p1\">[</bpt>XAML Resources<ept id=\"p1\">](~/docs/framework/wpf/advanced/xaml-resources.md)</ept>.","pos":[30,100],"source":" See [XAML Resources](~/docs/framework/wpf/advanced/xaml-resources.md)."}]}]},{"pos":[2109,2267],"content":"*styleResourceKey*  \n The key that identifies the style being requested. The key refers to an existing resource in a <xref:System.Windows.ResourceDictionary>.","nodes":[{"content":"<bpt id=\"p1\">*</bpt>styleResourceKey<ept id=\"p1\">*</ept>","pos":[0,18],"source":"*styleResourceKey*"},{"content":" The key that identifies the style being requested. The key refers to an existing resource in a <xref:System.Windows.ResourceDictionary>.","pos":[21,158],"nodes":[{"content":"The key that identifies the style being requested.","pos":[1,51]},{"content":"The key refers to an existing resource in a <ph id=\"ph1\">&lt;xref:System.Windows.ResourceDictionary&gt;</ph>.","pos":[52,137],"source":" The key refers to an existing resource in a <xref:System.Windows.ResourceDictionary>."}]}]},{"pos":[2275,2550],"content":"[!NOTE]\n Property element syntax is technically possible, but not recommended. See [Inline Styles and Templates](~/docs/framework/wpf/advanced/inline-styles-and-templates.md).  A binding reference using  or <xref:System.Windows.Data.Binding> is also possible, but uncommon.","leadings":["","> "],"nodes":[{"content":" Property element syntax is technically possible, but not recommended. See [Inline Styles and Templates](~/docs/framework/wpf/advanced/inline-styles-and-templates.md).  A binding reference using  or <xref:System.Windows.Data.Binding> is also possible, but uncommon.","pos":[8,273],"nodes":[{"content":"Property element syntax is technically possible, but not recommended.","pos":[1,70]},{"content":"See <bpt id=\"p1\">[</bpt>Inline Styles and Templates<ept id=\"p1\">](~/docs/framework/wpf/advanced/inline-styles-and-templates.md)</ept>.","pos":[71,167],"source":" See [Inline Styles and Templates](~/docs/framework/wpf/advanced/inline-styles-and-templates.md)."},{"content":"A binding reference using  or <ph id=\"ph1\">&lt;xref:System.Windows.Data.Binding&gt;</ph> is also possible, but uncommon.","pos":[169,265],"source":"  A binding reference using  or <xref:System.Windows.Data.Binding> is also possible, but uncommon."}]}]},{"pos":[2617,2648],"content":"Dependency Property Information","linkify":"Dependency Property Information","nodes":[{"content":"Dependency Property Information","pos":[0,31]}]},{"pos":[2669,2685],"content":"Identifier field","nodes":[{"content":"Identifier field","pos":[0,16]}]},{"pos":[2686,2756],"content":"<xref:System.Windows.FrameworkContentElement.FocusVisualStyleProperty>","nodes":[]},{"pos":[2761,2794],"content":"Metadata properties set to <ph id=\"ph1\">`true`</ph>","source":"Metadata properties set to `true`"},{"pos":[2795,2799],"content":"None","nodes":[{"content":"None","pos":[0,4]}]}],"pos":[95734,98580],"yaml":true,"extradata":"MT"},{"content":"The desired style to apply on focus. The default value as declared in the dependency property is an empty static <xref href=\"System.Windows.Style\"></xref>. However, the effective value at run time is often (but not always) a style as supplied by theme support for controls.","nodes":[{"pos":[0,273],"content":"The desired style to apply on focus. The default value as declared in the dependency property is an empty static <xref href=\"System.Windows.Style\"></xref>. However, the effective value at run time is often (but not always) a style as supplied by theme support for controls.","nodes":[{"content":"The desired style to apply on focus.","pos":[0,36]},{"content":"The default value as declared in the dependency property is an empty static <ph id=\"ph1\">&lt;xref href=\"System.Windows.Style\"&gt;&lt;/xref&gt;</ph>.","pos":[37,155],"source":" The default value as declared in the dependency property is an empty static <xref href=\"System.Windows.Style\"></xref>."},{"content":"However, the effective value at run time is often (but not always) a style as supplied by theme support for controls.","pos":[156,273]}]}],"pos":[98726,99000],"yaml":true},{"content":"Identifies the <xref href=\"System.Windows.FrameworkContentElement.FocusVisualStyle\"></xref> dependency property.","nodes":[{"pos":[0,112],"content":"Identifies the <ph id=\"ph1\">&lt;xref href=\"System.Windows.FrameworkContentElement.FocusVisualStyle\"&gt;&lt;/xref&gt;</ph> dependency property.","source":"Identifies the <xref href=\"System.Windows.FrameworkContentElement.FocusVisualStyle\"></xref> dependency property."}],"pos":[100121,100234],"yaml":true},{"content":"Gets or sets a value indicating whether this <xref href=\"System.Windows.FrameworkContentElement\"></xref> should force the [!INCLUDE[TLA#tla_ui](~/includes/tlasharptla-ui-md.md)] to render the cursor as declared by this instance's <xref href=\"System.Windows.FrameworkContentElement.Cursor\"></xref> property.","nodes":[{"pos":[0,306],"content":"Gets or sets a value indicating whether this <ph id=\"ph1\">&lt;xref href=\"System.Windows.FrameworkContentElement\"&gt;&lt;/xref&gt;</ph> should force the <ph id=\"ph2\">[!INCLUDE[TLA#tla_ui](~/includes/tlasharptla-ui-md.md)]</ph> to render the cursor as declared by this instance's <ph id=\"ph3\">&lt;xref href=\"System.Windows.FrameworkContentElement.Cursor\"&gt;&lt;/xref&gt;</ph> property.","source":"Gets or sets a value indicating whether this <xref href=\"System.Windows.FrameworkContentElement\"></xref> should force the [!INCLUDE[TLA#tla_ui](~/includes/tlasharptla-ui-md.md)] to render the cursor as declared by this instance's <xref href=\"System.Windows.FrameworkContentElement.Cursor\"></xref> property."}],"pos":[101397,101704],"yaml":true},{"content":"Setting this property to `true` will override the cursor preferences established by child elements. Doing so in general application [!INCLUDE[TLA2#tla_ui](~/includes/tla2sharptla-ui-md.md)] might be confusing for the user, particularly if child elements are attempting to specify cursors. Setting <xref:System.Windows.FrameworkElement.ForceCursor%2A> is more appropriate in control subclassing or compositing scenarios.  \n  \n<a name=\"dependencyPropertyInfo_ForceCursor\"></a>   \n## Dependency Property Information  \n  \n|||  \n|-|-|  \n|Identifier field|<xref:System.Windows.FrameworkContentElement.ForceCursorProperty>|  \n|Metadata properties set to `true`|None|","nodes":[{"pos":[0,419],"content":"Setting this property to `true` will override the cursor preferences established by child elements. Doing so in general application [!INCLUDE[TLA2#tla_ui](~/includes/tla2sharptla-ui-md.md)] might be confusing for the user, particularly if child elements are attempting to specify cursors. Setting <xref:System.Windows.FrameworkElement.ForceCursor%2A> is more appropriate in control subclassing or compositing scenarios.","nodes":[{"content":"Setting this property to <ph id=\"ph1\">`true`</ph> will override the cursor preferences established by child elements.","pos":[0,99],"source":"Setting this property to `true` will override the cursor preferences established by child elements."},{"content":"Doing so in general application <ph id=\"ph1\">[!INCLUDE[TLA2#tla_ui](~/includes/tla2sharptla-ui-md.md)]</ph> might be confusing for the user, particularly if child elements are attempting to specify cursors.","pos":[100,288],"source":" Doing so in general application [!INCLUDE[TLA2#tla_ui](~/includes/tla2sharptla-ui-md.md)] might be confusing for the user, particularly if child elements are attempting to specify cursors."},{"content":"Setting <ph id=\"ph1\">&lt;xref:System.Windows.FrameworkElement.ForceCursor%2A&gt;</ph> is more appropriate in control subclassing or compositing scenarios.","pos":[289,419],"source":" Setting <xref:System.Windows.FrameworkElement.ForceCursor%2A> is more appropriate in control subclassing or compositing scenarios."}]},{"pos":[481,512],"content":"Dependency Property Information","linkify":"Dependency Property Information","nodes":[{"content":"Dependency Property Information","pos":[0,31]}]},{"pos":[533,549],"content":"Identifier field","nodes":[{"content":"Identifier field","pos":[0,16]}]},{"pos":[550,615],"content":"<xref:System.Windows.FrameworkContentElement.ForceCursorProperty>","nodes":[]},{"pos":[620,653],"content":"Metadata properties set to <ph id=\"ph1\">`true`</ph>","source":"Metadata properties set to `true`"},{"pos":[654,658],"content":"None","nodes":[{"content":"None","pos":[0,4]}]}],"pos":[101715,102387],"yaml":true,"extradata":"MT"},{"content":"`true` to force cursor presentation while over this element to use this instance's setting for the cursor (including on all child elements); otherwise `false`. The default value is `false`.","nodes":[{"pos":[0,189],"content":"`true` to force cursor presentation while over this element to use this instance's setting for the cursor (including on all child elements); otherwise `false`. The default value is `false`.","nodes":[{"content":"<ph id=\"ph1\">`true`</ph> to force cursor presentation while over this element to use this instance's setting for the cursor (including on all child elements); otherwise <ph id=\"ph2\">`false`</ph>.","pos":[0,159],"source":"`true` to force cursor presentation while over this element to use this instance's setting for the cursor (including on all child elements); otherwise `false`."},{"content":"The default value is <ph id=\"ph1\">`false`</ph>.","pos":[160,189],"source":" The default value is `false`."}]}],"pos":[102715,102907],"yaml":true},{"content":"Identifies the <xref href=\"System.Windows.FrameworkContentElement.ForceCursor\"></xref> dependency property.","nodes":[{"pos":[0,107],"content":"Identifies the <ph id=\"ph1\">&lt;xref href=\"System.Windows.FrameworkContentElement.ForceCursor\"&gt;&lt;/xref&gt;</ph> dependency property.","source":"Identifies the <xref href=\"System.Windows.FrameworkContentElement.ForceCursor\"></xref> dependency property."}],"pos":[103993,104101],"yaml":true},{"content":"Gets the <xref href=\"System.Windows.Data.BindingExpression\"></xref> for the specified property's binding.","nodes":[{"pos":[0,105],"content":"Gets the <ph id=\"ph1\">&lt;xref href=\"System.Windows.Data.BindingExpression\"&gt;&lt;/xref&gt;</ph> for the specified property's binding.","source":"Gets the <xref href=\"System.Windows.Data.BindingExpression\"></xref> for the specified property's binding."}],"pos":[105476,105582],"yaml":true},{"content":"The target <xref href=\"System.Windows.DependencyProperty\"></xref> from which to get the binding.","nodes":[{"pos":[0,96],"content":"The target <ph id=\"ph1\">&lt;xref href=\"System.Windows.DependencyProperty\"&gt;&lt;/xref&gt;</ph> from which to get the binding.","source":"The target <xref href=\"System.Windows.DependencyProperty\"></xref> from which to get the binding."}],"pos":[106270,106367],"yaml":true},{"content":"Returns a <xref href=\"System.Windows.Data.BindingExpression\"></xref> if the target is data bound; otherwise, `null`.","nodes":[{"pos":[0,116],"content":"Returns a <ph id=\"ph1\">&lt;xref href=\"System.Windows.Data.BindingExpression\"&gt;&lt;/xref&gt;</ph> if the target is data bound; otherwise, <ph id=\"ph2\">`null`</ph>.","source":"Returns a <xref href=\"System.Windows.Data.BindingExpression\"></xref> if the target is data bound; otherwise, `null`."}],"pos":[106448,106565],"yaml":true},{"content":"Returns an alternative logical parent for this element if there is no visual parent. In this case, a <xref href=\"System.Windows.FrameworkContentElement\"></xref> parent is always the same value as the <xref href=\"System.Windows.FrameworkContentElement.Parent\"></xref> property.","nodes":[{"pos":[0,276],"content":"Returns an alternative logical parent for this element if there is no visual parent. In this case, a <xref href=\"System.Windows.FrameworkContentElement\"></xref> parent is always the same value as the <xref href=\"System.Windows.FrameworkContentElement.Parent\"></xref> property.","nodes":[{"content":"Returns an alternative logical parent for this element if there is no visual parent.","pos":[0,84]},{"content":"In this case, a <ph id=\"ph1\">&lt;xref href=\"System.Windows.FrameworkContentElement\"&gt;&lt;/xref&gt;</ph> parent is always the same value as the <ph id=\"ph2\">&lt;xref href=\"System.Windows.FrameworkContentElement.Parent\"&gt;&lt;/xref&gt;</ph> property.","pos":[85,276],"source":" In this case, a <xref href=\"System.Windows.FrameworkContentElement\"></xref> parent is always the same value as the <xref href=\"System.Windows.FrameworkContentElement.Parent\"></xref> property."}]}],"pos":[107643,107920],"yaml":true},{"content":"The default implementation returns the expected single visual parent. Custom implementations might return alternate parent relationships.","nodes":[{"pos":[0,137],"content":"The default implementation returns the expected single visual parent. Custom implementations might return alternate parent relationships.","nodes":[{"content":"The default implementation returns the expected single visual parent. Custom implementations might return alternate parent relationships.","pos":[0,137],"nodes":[{"content":"The default implementation returns the expected single visual parent.","pos":[0,69]},{"content":"Custom implementations might return alternate parent relationships.","pos":[70,137]}]}]}],"pos":[107931,108069],"yaml":true,"extradata":"MT"},{"content":"Returns something other than `null` whenever a WPF framework-level implementation of this method has a non-visual parent connection.","nodes":[{"pos":[0,132],"content":"Returns something other than <ph id=\"ph1\">`null`</ph> whenever a WPF framework-level implementation of this method has a non-visual parent connection.","source":"Returns something other than `null` whenever a WPF framework-level implementation of this method has a non-visual parent connection."}],"pos":[108257,108390],"yaml":true},{"content":"Occurs when this <xref href=\"System.Windows.FrameworkContentElement\"></xref> is initialized. This coincides with cases where the value of the <xref href=\"System.Windows.FrameworkContentElement.IsInitialized\"></xref> property changes from `false` (or undefined) to `true`.","nodes":[{"pos":[0,271],"content":"Occurs when this <xref href=\"System.Windows.FrameworkContentElement\"></xref> is initialized. This coincides with cases where the value of the <xref href=\"System.Windows.FrameworkContentElement.IsInitialized\"></xref> property changes from `false` (or undefined) to `true`.","nodes":[{"content":"Occurs when this <ph id=\"ph1\">&lt;xref href=\"System.Windows.FrameworkContentElement\"&gt;&lt;/xref&gt;</ph> is initialized.","pos":[0,92],"source":"Occurs when this <xref href=\"System.Windows.FrameworkContentElement\"></xref> is initialized."},{"content":"This coincides with cases where the value of the <ph id=\"ph1\">&lt;xref href=\"System.Windows.FrameworkContentElement.IsInitialized\"&gt;&lt;/xref&gt;</ph> property changes from <ph id=\"ph2\">`false`</ph> (or undefined) to <ph id=\"ph3\">`true`</ph>.","pos":[93,271],"source":" This coincides with cases where the value of the <xref href=\"System.Windows.FrameworkContentElement.IsInitialized\"></xref> property changes from `false` (or undefined) to `true`."}]}],"pos":[109432,109704],"yaml":true},{"content":"This event will be raised whenever the <xref:System.Windows.FrameworkContentElement.EndInit%2A> or <xref:System.Windows.FrameworkContentElement.OnInitialized%2A> methods are called. Calls to these methods could have been made by deliberate code, or by the [!INCLUDE[TLA#tla_xaml](~/includes/tlasharptla-xaml-md.md)] loading process.","nodes":[{"pos":[0,332],"content":"This event will be raised whenever the <xref:System.Windows.FrameworkContentElement.EndInit%2A> or <xref:System.Windows.FrameworkContentElement.OnInitialized%2A> methods are called. Calls to these methods could have been made by deliberate code, or by the [!INCLUDE[TLA#tla_xaml](~/includes/tlasharptla-xaml-md.md)] loading process.","nodes":[{"content":"This event will be raised whenever the <ph id=\"ph1\">&lt;xref:System.Windows.FrameworkContentElement.EndInit%2A&gt;</ph> or <ph id=\"ph2\">&lt;xref:System.Windows.FrameworkContentElement.OnInitialized%2A&gt;</ph> methods are called.","pos":[0,181],"source":"This event will be raised whenever the <xref:System.Windows.FrameworkContentElement.EndInit%2A> or <xref:System.Windows.FrameworkContentElement.OnInitialized%2A> methods are called."},{"content":"Calls to these methods could have been made by deliberate code, or by the <ph id=\"ph1\">[!INCLUDE[TLA#tla_xaml](~/includes/tlasharptla-xaml-md.md)]</ph> loading process.","pos":[182,332],"source":" Calls to these methods could have been made by deliberate code, or by the [!INCLUDE[TLA#tla_xaml](~/includes/tlasharptla-xaml-md.md)] loading process."}]}],"pos":[109715,110048],"yaml":true,"extradata":"MT"},{"content":"Gets or sets the context for input used by this <xref href=\"System.Windows.FrameworkContentElement\"></xref>.","nodes":[{"pos":[0,108],"content":"Gets or sets the context for input used by this <ph id=\"ph1\">&lt;xref href=\"System.Windows.FrameworkContentElement\"&gt;&lt;/xref&gt;</ph>.","source":"Gets or sets the context for input used by this <xref href=\"System.Windows.FrameworkContentElement\"></xref>."}],"pos":[111164,111273],"yaml":true},{"content":"This dependency property inherits property values. If there are child elements with no other value for <xref:System.Windows.FrameworkElement.InputScope%2A> established through local values or styles, the property system will set the value to be the <xref:System.Windows.FrameworkElement.InputScope%2A> value of the nearest parent element with this value assigned.  \n  \n Although a [!INCLUDE[TLA2#tla_xaml](~/includes/tla2sharptla-xaml-md.md)] syntax usage is listed and is syntactically allowed, setting this property in [!INCLUDE[TLA2#tla_xaml](~/includes/tla2sharptla-xaml-md.md)] is not common.  \n  \n<a name=\"dependencyPropertyInfo_InputScope\"></a>   \n## Dependency Property Information  \n  \n|||  \n|-|-|  \n|Identifier field|<xref:System.Windows.FrameworkContentElement.InputScopeProperty>|  \n|Metadata properties set to `true`|<xref:System.Windows.FrameworkPropertyMetadata.Inherits%2A>|","nodes":[{"pos":[0,363],"content":"This dependency property inherits property values. If there are child elements with no other value for <xref:System.Windows.FrameworkElement.InputScope%2A> established through local values or styles, the property system will set the value to be the <xref:System.Windows.FrameworkElement.InputScope%2A> value of the nearest parent element with this value assigned.","nodes":[{"content":"This dependency property inherits property values. If there are child elements with no other value for <xref:System.Windows.FrameworkElement.InputScope%2A> established through local values or styles, the property system will set the value to be the <xref:System.Windows.FrameworkElement.InputScope%2A> value of the nearest parent element with this value assigned.","pos":[0,363],"nodes":[{"content":"This dependency property inherits property values.","pos":[0,50]},{"content":"If there are child elements with no other value for <ph id=\"ph1\">&lt;xref:System.Windows.FrameworkElement.InputScope%2A&gt;</ph> established through local values or styles, the property system will set the value to be the <ph id=\"ph2\">&lt;xref:System.Windows.FrameworkElement.InputScope%2A&gt;</ph> value of the nearest parent element with this value assigned.","pos":[51,363],"source":" If there are child elements with no other value for <xref:System.Windows.FrameworkElement.InputScope%2A> established through local values or styles, the property system will set the value to be the <xref:System.Windows.FrameworkElement.InputScope%2A> value of the nearest parent element with this value assigned."}]}]},{"pos":[370,597],"content":"Although a <ph id=\"ph1\">[!INCLUDE[TLA2#tla_xaml](~/includes/tla2sharptla-xaml-md.md)]</ph> syntax usage is listed and is syntactically allowed, setting this property in <ph id=\"ph2\">[!INCLUDE[TLA2#tla_xaml](~/includes/tla2sharptla-xaml-md.md)]</ph> is not common.","source":"Although a [!INCLUDE[TLA2#tla_xaml](~/includes/tla2sharptla-xaml-md.md)] syntax usage is listed and is syntactically allowed, setting this property in [!INCLUDE[TLA2#tla_xaml](~/includes/tla2sharptla-xaml-md.md)] is not common."},{"pos":[658,689],"content":"Dependency Property Information","linkify":"Dependency Property Information","nodes":[{"content":"Dependency Property Information","pos":[0,31]}]},{"pos":[710,726],"content":"Identifier field","nodes":[{"content":"Identifier field","pos":[0,16]}]},{"pos":[727,791],"content":"<xref:System.Windows.FrameworkContentElement.InputScopeProperty>","nodes":[]},{"pos":[796,829],"content":"Metadata properties set to <ph id=\"ph1\">`true`</ph>","source":"Metadata properties set to `true`"},{"pos":[830,889],"content":"<xref:System.Windows.FrameworkPropertyMetadata.Inherits%2A>","nodes":[]}],"pos":[111284,112189],"yaml":true,"extradata":"MT"},{"content":"The input scope, which modifies how input from alternative input methods is interpreted. The default value is `null` (which results in a default handling of commands).","nodes":[{"pos":[0,167],"content":"The input scope, which modifies how input from alternative input methods is interpreted. The default value is `null` (which results in a default handling of commands).","nodes":[{"content":"The input scope, which modifies how input from alternative input methods is interpreted.","pos":[0,88]},{"content":"The default value is <ph id=\"ph1\">`null`</ph> (which results in a default handling of commands).","pos":[89,167],"source":" The default value is `null` (which results in a default handling of commands)."}]}],"pos":[112351,112519],"yaml":true},{"content":"Identifies the <xref href=\"System.Windows.FrameworkContentElement.InputScope\"></xref> dependency property.","nodes":[{"pos":[0,106],"content":"Identifies the <ph id=\"ph1\">&lt;xref href=\"System.Windows.FrameworkContentElement.InputScope\"&gt;&lt;/xref&gt;</ph> dependency property.","source":"Identifies the <xref href=\"System.Windows.FrameworkContentElement.InputScope\"></xref> dependency property."}],"pos":[113598,113705],"yaml":true},{"content":"Gets a value indicating whether this element has been initialized, either by being loaded as [!INCLUDE[TLA#tla_xaml](~/includes/tlasharptla-xaml-md.md)], or by explicitly having its <xref href=\"System.Windows.FrameworkContentElement.EndInit\"></xref> method called.","nodes":[{"pos":[0,264],"content":"Gets a value indicating whether this element has been initialized, either by being loaded as <ph id=\"ph1\">[!INCLUDE[TLA#tla_xaml](~/includes/tlasharptla-xaml-md.md)]</ph>, or by explicitly having its <ph id=\"ph2\">&lt;xref href=\"System.Windows.FrameworkContentElement.EndInit\"&gt;&lt;/xref&gt;</ph> method called.","source":"Gets a value indicating whether this element has been initialized, either by being loaded as [!INCLUDE[TLA#tla_xaml](~/includes/tlasharptla-xaml-md.md)], or by explicitly having its <xref href=\"System.Windows.FrameworkContentElement.EndInit\"></xref> method called."}],"pos":[114852,115117],"yaml":true},{"content":"This property may also be `true` if this element has been moved within the element tree such that it has a new parent element, and therefore becomes reloaded again.","nodes":[{"pos":[0,164],"content":"This property may also be <ph id=\"ph1\">`true`</ph> if this element has been moved within the element tree such that it has a new parent element, and therefore becomes reloaded again.","source":"This property may also be `true` if this element has been moved within the element tree such that it has a new parent element, and therefore becomes reloaded again."}],"pos":[115128,115293],"yaml":true,"extradata":"MT"},{"content":"`true` if the element is initialized per the aforementioned loading or method calls; otherwise, `false`.","nodes":[{"pos":[0,104],"content":"<ph id=\"ph1\">`true`</ph> if the element is initialized per the aforementioned loading or method calls; otherwise, <ph id=\"ph2\">`false`</ph>.","source":"`true` if the element is initialized per the aforementioned loading or method calls; otherwise, `false`."}],"pos":[115409,115516],"yaml":true},{"content":"Gets a value indicating whether this element has been loaded for presentation.","nodes":[{"pos":[0,78],"content":"Gets a value indicating whether this element has been loaded for presentation.","nodes":[{"content":"Gets a value indicating whether this element has been loaded for presentation.","pos":[0,78]}]}],"pos":[116558,116637],"yaml":true},{"content":"From a newly constructed instance, this property starts off `false`, and remains `true` once it is set to `true`, even if subsequently removed by  code.","nodes":[{"pos":[0,152],"content":"From a newly constructed instance, this property starts off <ph id=\"ph1\">`false`</ph>, and remains <ph id=\"ph2\">`true`</ph> once it is set to <ph id=\"ph3\">`true`</ph>, even if subsequently removed by  code.","source":"From a newly constructed instance, this property starts off `false`, and remains `true` once it is set to `true`, even if subsequently removed by  code."}],"pos":[116648,116801],"yaml":true,"extradata":"MT"},{"content":"`true` if the current element is attached to an element tree and has been rendered; `false` if the element has never been attached to a loaded element tree.","nodes":[{"pos":[0,156],"content":"<ph id=\"ph1\">`true`</ph> if the current element is attached to an element tree and has been rendered; <ph id=\"ph2\">`false`</ph> if the element has never been attached to a loaded element tree.","source":"`true` if the current element is attached to an element tree and has been rendered; `false` if the element has never been attached to a loaded element tree."}],"pos":[117609,117768],"yaml":true},{"content":"Gets or sets localization/globalization language information that applies to an individual element.","nodes":[{"pos":[0,99],"content":"Gets or sets localization/globalization language information that applies to an individual element.","nodes":[{"content":"Gets or sets localization/globalization language information that applies to an individual element.","pos":[0,99]}]}],"pos":[118788,118888],"yaml":true},{"content":"The string formats follow the RFC 3066 standard. For example, U.S. English is \"en-US\". See <xref:System.Windows.Markup.XmlLanguage> for more information on the values and format.  \n  \n This dependency property inherits property values. If there are child elements with no other value for <xref:System.Windows.FrameworkElement.Language%2A> established through local values or styles, the property system will set the value to be the <xref:System.Windows.FrameworkElement.Language%2A> value of the nearest parent element with this value assigned.  \n  \n<a name=\"dependencyPropertyInfo_CultureInfo\"></a>   \n## Dependency Property Information  \n  \n|||  \n|-|-|  \n|Identifier field|<xref:System.Windows.FrameworkContentElement.LanguageProperty>|  \n|Metadata properties set to `true`|<xref:System.Windows.FrameworkPropertyMetadata.Inherits%2A>|","nodes":[{"pos":[0,178],"content":"The string formats follow the RFC 3066 standard. For example, U.S. English is \"en-US\". See <xref:System.Windows.Markup.XmlLanguage> for more information on the values and format.","nodes":[{"content":"The string formats follow the RFC 3066 standard. For example, U.S. English is \"en-US\". See <xref:System.Windows.Markup.XmlLanguage> for more information on the values and format.","pos":[0,178],"nodes":[{"content":"The string formats follow the RFC 3066 standard.","pos":[0,48]},{"content":"For example, U.S. English is \"en-US\".","pos":[49,86]},{"content":"See <ph id=\"ph1\">&lt;xref:System.Windows.Markup.XmlLanguage&gt;</ph> for more information on the values and format.","pos":[87,178],"source":" See <xref:System.Windows.Markup.XmlLanguage> for more information on the values and format."}]}]},{"pos":[185,544],"content":"This dependency property inherits property values. If there are child elements with no other value for <xref:System.Windows.FrameworkElement.Language%2A> established through local values or styles, the property system will set the value to be the <xref:System.Windows.FrameworkElement.Language%2A> value of the nearest parent element with this value assigned.","nodes":[{"content":"This dependency property inherits property values. If there are child elements with no other value for <xref:System.Windows.FrameworkElement.Language%2A> established through local values or styles, the property system will set the value to be the <xref:System.Windows.FrameworkElement.Language%2A> value of the nearest parent element with this value assigned.","pos":[0,359],"nodes":[{"content":"This dependency property inherits property values.","pos":[0,50]},{"content":"If there are child elements with no other value for <ph id=\"ph1\">&lt;xref:System.Windows.FrameworkElement.Language%2A&gt;</ph> established through local values or styles, the property system will set the value to be the <ph id=\"ph2\">&lt;xref:System.Windows.FrameworkElement.Language%2A&gt;</ph> value of the nearest parent element with this value assigned.","pos":[51,359],"source":" If there are child elements with no other value for <xref:System.Windows.FrameworkElement.Language%2A> established through local values or styles, the property system will set the value to be the <xref:System.Windows.FrameworkElement.Language%2A> value of the nearest parent element with this value assigned."}]}]},{"pos":[606,637],"content":"Dependency Property Information","linkify":"Dependency Property Information","nodes":[{"content":"Dependency Property Information","pos":[0,31]}]},{"pos":[658,674],"content":"Identifier field","nodes":[{"content":"Identifier field","pos":[0,16]}]},{"pos":[675,737],"content":"<xref:System.Windows.FrameworkContentElement.LanguageProperty>","nodes":[]},{"pos":[742,775],"content":"Metadata properties set to <ph id=\"ph1\">`true`</ph>","source":"Metadata properties set to `true`"},{"pos":[776,835],"content":"<xref:System.Windows.FrameworkPropertyMetadata.Inherits%2A>","nodes":[]}],"pos":[118899,119752],"yaml":true,"extradata":"MT"},{"content":"The culture information for this element. The default value is an <xref href=\"System.Windows.Markup.XmlLanguage\"></xref> instance with its <xref href=\"System.Windows.Markup.XmlLanguage.IetfLanguageTag\"></xref> value set to the string \"en-US\".","nodes":[{"pos":[0,242],"content":"The culture information for this element. The default value is an <xref href=\"System.Windows.Markup.XmlLanguage\"></xref> instance with its <xref href=\"System.Windows.Markup.XmlLanguage.IetfLanguageTag\"></xref> value set to the string \"en-US\".","nodes":[{"content":"The culture information for this element.","pos":[0,41]},{"content":"The default value is an <ph id=\"ph1\">&lt;xref href=\"System.Windows.Markup.XmlLanguage\"&gt;&lt;/xref&gt;</ph> instance with its <ph id=\"ph2\">&lt;xref href=\"System.Windows.Markup.XmlLanguage.IetfLanguageTag\"&gt;&lt;/xref&gt;</ph> value set to the string \"en-US\".","pos":[42,242],"source":" The default value is an <xref href=\"System.Windows.Markup.XmlLanguage\"></xref> instance with its <xref href=\"System.Windows.Markup.XmlLanguage.IetfLanguageTag\"></xref> value set to the string \"en-US\"."}]}],"pos":[119916,120159],"yaml":true},{"content":"Identifies the <xref href=\"System.Windows.FrameworkContentElement.Language\"></xref> dependency property.","nodes":[{"pos":[0,104],"content":"Identifies the <ph id=\"ph1\">&lt;xref href=\"System.Windows.FrameworkContentElement.Language\"&gt;&lt;/xref&gt;</ph> dependency property.","source":"Identifies the <xref href=\"System.Windows.FrameworkContentElement.Language\"></xref> dependency property."}],"pos":[121224,121329],"yaml":true},{"content":"Occurs when the element is laid out, rendered, and ready for interaction.","nodes":[{"pos":[0,73],"content":"Occurs when the element is laid out, rendered, and ready for interaction.","nodes":[{"content":"Occurs when the element is laid out, rendered, and ready for interaction.","pos":[0,73]}]}],"pos":[122429,122503],"yaml":true},{"content":"Direct routed events do not follow a route, they are only handled within the same element on which they are raised. Direct routed events do support other routed event behavior: they support an accessible handlers collection, and can be used as an <xref:System.Windows.EventTrigger> in a style.  \n  \n<a name=\"routedEventInfo_Loaded\"></a>   \n## Routed Event Information  \n  \n|||  \n|-|-|  \n|Identifier field|<xref:System.Windows.FrameworkContentElement.LoadedEvent>|  \n|Routing strategy|Direct|  \n|Delegate|<xref:System.Windows.RoutedEventHandler>|","nodes":[{"pos":[0,293],"content":"Direct routed events do not follow a route, they are only handled within the same element on which they are raised. Direct routed events do support other routed event behavior: they support an accessible handlers collection, and can be used as an <xref:System.Windows.EventTrigger> in a style.","nodes":[{"content":"Direct routed events do not follow a route, they are only handled within the same element on which they are raised. Direct routed events do support other routed event behavior: they support an accessible handlers collection, and can be used as an <xref:System.Windows.EventTrigger> in a style.","pos":[0,293],"nodes":[{"content":"Direct routed events do not follow a route, they are only handled within the same element on which they are raised.","pos":[0,115]},{"content":"Direct routed events do support other routed event behavior: they support an accessible handlers collection, and can be used as an <ph id=\"ph1\">&lt;xref:System.Windows.EventTrigger&gt;</ph> in a style.","pos":[116,293],"source":" Direct routed events do support other routed event behavior: they support an accessible handlers collection, and can be used as an <xref:System.Windows.EventTrigger> in a style."}]}]},{"pos":[343,367],"content":"Routed Event Information","linkify":"Routed Event Information","nodes":[{"content":"Routed Event Information","pos":[0,24]}]},{"pos":[388,404],"content":"Identifier field","nodes":[{"content":"Identifier field","pos":[0,16]}]},{"pos":[405,462],"content":"<xref:System.Windows.FrameworkContentElement.LoadedEvent>","nodes":[]},{"pos":[467,483],"content":"Routing strategy","nodes":[{"content":"Routing strategy","pos":[0,16]}]},{"pos":[484,490],"content":"Direct","nodes":[{"content":"Direct","pos":[0,6]}]},{"pos":[495,503],"content":"Delegate","nodes":[{"content":"Delegate","pos":[0,8]}]},{"pos":[504,544],"content":"<xref:System.Windows.RoutedEventHandler>","nodes":[]}],"pos":[122514,123073],"yaml":true,"extradata":"MT"},{"content":"Identifies the <xref href=\"System.Windows.FrameworkContentElement.Loaded\"></xref> [Routed Events Overview](~/docs/framework/wpf/advanced/routed-events-overview.md).","nodes":[{"pos":[0,164],"content":"Identifies the <ph id=\"ph1\">&lt;xref href=\"System.Windows.FrameworkContentElement.Loaded\"&gt;&lt;/xref&gt;</ph> <bpt id=\"p1\">[</bpt>Routed Events Overview<ept id=\"p1\">](~/docs/framework/wpf/advanced/routed-events-overview.md)</ept>.","source":"Identifies the <xref href=\"System.Windows.FrameworkContentElement.Loaded\"></xref> [Routed Events Overview](~/docs/framework/wpf/advanced/routed-events-overview.md)."}],"pos":[124205,124370],"yaml":true},{"content":"Event identifier objects are created when routed events are registered (see <xref:System.Windows.EventManager.RegisterRoutedEvent%2A>) and can then be used to add class handlers (see <xref:System.Windows.EventManager.RegisterClassHandler%2A>). Identifier objects contain an identifying name, owner type, handler type, routing strategy, and a utility method for adding owners for the event.","nodes":[{"pos":[0,389],"content":"Event identifier objects are created when routed events are registered (see <xref:System.Windows.EventManager.RegisterRoutedEvent%2A>) and can then be used to add class handlers (see <xref:System.Windows.EventManager.RegisterClassHandler%2A>). Identifier objects contain an identifying name, owner type, handler type, routing strategy, and a utility method for adding owners for the event.","nodes":[{"content":"Event identifier objects are created when routed events are registered (see <xref:System.Windows.EventManager.RegisterRoutedEvent%2A>) and can then be used to add class handlers (see <xref:System.Windows.EventManager.RegisterClassHandler%2A>). Identifier objects contain an identifying name, owner type, handler type, routing strategy, and a utility method for adding owners for the event.","pos":[0,389],"nodes":[{"content":"Event identifier objects are created when routed events are registered (see <ph id=\"ph1\">&lt;xref:System.Windows.EventManager.RegisterRoutedEvent%2A&gt;</ph>) and can then be used to add class handlers (see <ph id=\"ph2\">&lt;xref:System.Windows.EventManager.RegisterClassHandler%2A&gt;</ph>).","pos":[0,243],"source":"Event identifier objects are created when routed events are registered (see <xref:System.Windows.EventManager.RegisterRoutedEvent%2A>) and can then be used to add class handlers (see <xref:System.Windows.EventManager.RegisterClassHandler%2A>)."},{"content":"Identifier objects contain an identifying name, owner type, handler type, routing strategy, and a utility method for adding owners for the event.","pos":[244,389]}]}]}],"pos":[124381,124771],"yaml":true,"extradata":"MT"},{"content":"Gets an enumerator for the logical child elements of this element.","nodes":[{"pos":[0,66],"content":"Gets an enumerator for the logical child elements of this element.","nodes":[{"content":"Gets an enumerator for the logical child elements of this element.","pos":[0,66]}]}],"pos":[125931,125998],"yaml":true},{"content":"For more information on how to use <xref:System.Windows.FrameworkContentElement.LogicalChildren%2A> and <xref:System.Windows.FrameworkContentElement.AddLogicalChild%2A>, see [Trees in WPF](~/docs/framework/wpf/advanced/trees-in-wpf.md).","nodes":[{"pos":[0,236],"content":"For more information on how to use <ph id=\"ph1\">&lt;xref:System.Windows.FrameworkContentElement.LogicalChildren%2A&gt;</ph> and <ph id=\"ph2\">&lt;xref:System.Windows.FrameworkContentElement.AddLogicalChild%2A&gt;</ph>, see <bpt id=\"p1\">[</bpt>Trees in WPF<ept id=\"p1\">](~/docs/framework/wpf/advanced/trees-in-wpf.md)</ept>.","source":"For more information on how to use <xref:System.Windows.FrameworkContentElement.LogicalChildren%2A> and <xref:System.Windows.FrameworkContentElement.AddLogicalChild%2A>, see [Trees in WPF](~/docs/framework/wpf/advanced/trees-in-wpf.md)."}],"pos":[126009,126246],"yaml":true,"extradata":"MT"},{"content":"An enumerator for logical child elements of this element.","nodes":[{"pos":[0,57],"content":"An enumerator for logical child elements of this element.","nodes":[{"content":"An enumerator for logical child elements of this element.","pos":[0,57]}]}],"pos":[126417,126475],"yaml":true},{"content":"Moves the keyboard focus from this element to another element.","nodes":[{"pos":[0,62],"content":"Moves the keyboard focus from this element to another element.","nodes":[{"content":"Moves the keyboard focus from this element to another element.","pos":[0,62]}]}],"pos":[127677,127740],"yaml":true},{"content":"The direction that focus is to be moved, as a value of the enumeration.","nodes":[{"pos":[0,71],"content":"The direction that focus is to be moved, as a value of the enumeration.","nodes":[{"content":"The direction that focus is to be moved, as a value of the enumeration.","pos":[0,71]}]}],"pos":[127953,128025],"yaml":true},{"content":"Returns `true` if focus is moved successfully; `false` if the target element in direction as specified does not exist.","nodes":[{"pos":[0,118],"content":"Returns <ph id=\"ph1\">`true`</ph> if focus is moved successfully; <ph id=\"ph2\">`false`</ph> if the target element in direction as specified does not exist.","source":"Returns `true` if focus is moved successfully; `false` if the target element in direction as specified does not exist."}],"pos":[128083,128202],"yaml":true},{"content":"Gets or sets the identifying name of the element. The name provides an instance reference so that programmatic code-behind, such as event handler code, can refer to an element once it is constructed during parsing of [!INCLUDE[TLA2#tla_xaml](~/includes/tla2sharptla-xaml-md.md)].","nodes":[{"pos":[0,279],"content":"Gets or sets the identifying name of the element. The name provides an instance reference so that programmatic code-behind, such as event handler code, can refer to an element once it is constructed during parsing of [!INCLUDE[TLA2#tla_xaml](~/includes/tla2sharptla-xaml-md.md)].","nodes":[{"content":"Gets or sets the identifying name of the element.","pos":[0,49]},{"content":"The name provides an instance reference so that programmatic code-behind, such as event handler code, can refer to an element once it is constructed during parsing of <ph id=\"ph1\">[!INCLUDE[TLA2#tla_xaml](~/includes/tla2sharptla-xaml-md.md)]</ph>.","pos":[50,279],"source":" The name provides an instance reference so that programmatic code-behind, such as event handler code, can refer to an element once it is constructed during parsing of [!INCLUDE[TLA2#tla_xaml](~/includes/tla2sharptla-xaml-md.md)]."}]}],"pos":[129199,129479],"yaml":true},{"content":"The most common usage of this property is when specifying a [!INCLUDE[TLA2#tla_xaml](~/includes/tla2sharptla-xaml-md.md)] element name in markup.  \n  \n This property essentially provides a WPF framework-level convenience property to set the [!INCLUDE[TLA2#tla_xaml](~/includes/tla2sharptla-xaml-md.md)] [x:Name Directive](~/docs/framework/xaml-services/x-name-directive.md).  \n  \n Getting a <xref:System.Windows.FrameworkContentElement.Name%2A> from code is not common, because if you have the appropriate reference in code already, you can just call methods and properties on the element reference and do not generally need the <xref:System.Windows.FrameworkContentElement.Name%2A>. An exception is if the string has some overloaded meaning, for instance if it is useful to display that name in [!INCLUDE[TLA2#tla_ui](~/includes/tla2sharptla-ui-md.md)]. Setting a <xref:System.Windows.FrameworkContentElement.Name%2A> from code if the original <xref:System.Windows.FrameworkContentElement.Name%2A> was set from markup is also not recommended, and changing the property will not change the object reference. Such object references are created only when the underlying namescopes are explicitly created during [!INCLUDE[TLA2#tla_xaml](~/includes/tla2sharptla-xaml-md.md)] loading.  \n  \n You must specifically call <xref:System.Windows.FrameworkContentElement.RegisterName%2A> to make an effective change on the <xref:System.Windows.FrameworkContentElement.Name%2A> property of an already loaded element.  \n  \n One notable case where setting <xref:System.Windows.FrameworkContentElement.Name%2A> from  code is important is for naming elements that storyboards will run against. Before you can register a name, might also need to instantiate and assign a <xref:System.Windows.NameScope> instance. See the Example section, or [Storyboards Overview](~/docs/framework/wpf/graphics-multimedia/storyboards-overview.md).  \n  \n Setting <xref:System.Windows.FrameworkContentElement.Name%2A> from code has limited applications, but looking up an element by name is more common, particularly if you are employing a navigation model where pages reload into the application and the run-time code is not necessarily the code-behind of that respective page. The utility method <xref:System.Windows.FrameworkContentElement.FindName%2A>, which is available from any <xref:System.Windows.FrameworkContentElement>, can find any element by <xref:System.Windows.FrameworkContentElement.Name%2A> in that element's logical tree recursively. Or you can use the <xref:System.Windows.LogicalTreeHelper.FindLogicalNode%2A> static method of <xref:System.Windows.LogicalTreeHelper>, which also takes the <xref:System.Windows.FrameworkContentElement.Name%2A> string as an argument.  \n  \n Commonly used root elements (<xref:System.Windows.Window>, <xref:System.Windows.Controls.Page> for example) implement the interface <xref:System.Windows.Markup.INameScope>. Implementations of this interface are expected to enforce that names be unambiguous within their scope.  \n  \n<a name=\"dependencyPropertyInfo_Name\"></a>   \n## Dependency Property Information  \n  \n|||  \n|-|-|  \n|Identifier field|<xref:System.Windows.FrameworkContentElement.NameProperty>|  \n|Metadata properties set to `true`|<xref:System.Windows.UIPropertyMetadata.IsAnimationProhibited%2A>|","nodes":[{"pos":[0,145],"content":"The most common usage of this property is when specifying a <ph id=\"ph1\">[!INCLUDE[TLA2#tla_xaml](~/includes/tla2sharptla-xaml-md.md)]</ph> element name in markup.","source":"The most common usage of this property is when specifying a [!INCLUDE[TLA2#tla_xaml](~/includes/tla2sharptla-xaml-md.md)] element name in markup."},{"pos":[152,374],"content":"This property essentially provides a WPF framework-level convenience property to set the <ph id=\"ph1\">[!INCLUDE[TLA2#tla_xaml](~/includes/tla2sharptla-xaml-md.md)]</ph> <bpt id=\"p1\">[</bpt>x:Name Directive<ept id=\"p1\">](~/docs/framework/xaml-services/x-name-directive.md)</ept>.","source":"This property essentially provides a WPF framework-level convenience property to set the [!INCLUDE[TLA2#tla_xaml](~/includes/tla2sharptla-xaml-md.md)] [x:Name Directive](~/docs/framework/xaml-services/x-name-directive.md)."},{"pos":[381,1279],"content":"Getting a <xref:System.Windows.FrameworkContentElement.Name%2A> from code is not common, because if you have the appropriate reference in code already, you can just call methods and properties on the element reference and do not generally need the <xref:System.Windows.FrameworkContentElement.Name%2A>. An exception is if the string has some overloaded meaning, for instance if it is useful to display that name in [!INCLUDE[TLA2#tla_ui](~/includes/tla2sharptla-ui-md.md)]. Setting a <xref:System.Windows.FrameworkContentElement.Name%2A> from code if the original <xref:System.Windows.FrameworkContentElement.Name%2A> was set from markup is also not recommended, and changing the property will not change the object reference. Such object references are created only when the underlying namescopes are explicitly created during [!INCLUDE[TLA2#tla_xaml](~/includes/tla2sharptla-xaml-md.md)] loading.","nodes":[{"content":"Getting a <ph id=\"ph1\">&lt;xref:System.Windows.FrameworkContentElement.Name%2A&gt;</ph> from code is not common, because if you have the appropriate reference in code already, you can just call methods and properties on the element reference and do not generally need the <ph id=\"ph2\">&lt;xref:System.Windows.FrameworkContentElement.Name%2A&gt;</ph>.","pos":[0,302],"source":"Getting a <xref:System.Windows.FrameworkContentElement.Name%2A> from code is not common, because if you have the appropriate reference in code already, you can just call methods and properties on the element reference and do not generally need the <xref:System.Windows.FrameworkContentElement.Name%2A>."},{"content":"An exception is if the string has some overloaded meaning, for instance if it is useful to display that name in <ph id=\"ph1\">[!INCLUDE[TLA2#tla_ui](~/includes/tla2sharptla-ui-md.md)]</ph>.","pos":[303,473],"source":" An exception is if the string has some overloaded meaning, for instance if it is useful to display that name in [!INCLUDE[TLA2#tla_ui](~/includes/tla2sharptla-ui-md.md)]."},{"content":"Setting a <ph id=\"ph1\">&lt;xref:System.Windows.FrameworkContentElement.Name%2A&gt;</ph> from code if the original <ph id=\"ph2\">&lt;xref:System.Windows.FrameworkContentElement.Name%2A&gt;</ph> was set from markup is also not recommended, and changing the property will not change the object reference.","pos":[474,726],"source":" Setting a <xref:System.Windows.FrameworkContentElement.Name%2A> from code if the original <xref:System.Windows.FrameworkContentElement.Name%2A> was set from markup is also not recommended, and changing the property will not change the object reference."},{"content":"Such object references are created only when the underlying namescopes are explicitly created during <ph id=\"ph1\">[!INCLUDE[TLA2#tla_xaml](~/includes/tla2sharptla-xaml-md.md)]</ph> loading.","pos":[727,898],"source":" Such object references are created only when the underlying namescopes are explicitly created during [!INCLUDE[TLA2#tla_xaml](~/includes/tla2sharptla-xaml-md.md)] loading."}]},{"pos":[1286,1502],"content":"You must specifically call <xref:System.Windows.FrameworkContentElement.RegisterName%2A> to make an effective change on the <xref:System.Windows.FrameworkContentElement.Name%2A> property of an already loaded element.","nodes":[{"content":"You must specifically call <ph id=\"ph1\">&lt;xref:System.Windows.FrameworkContentElement.RegisterName%2A&gt;</ph> to make an effective change on the <ph id=\"ph2\">&lt;xref:System.Windows.FrameworkContentElement.Name%2A&gt;</ph> property of an already loaded element.","pos":[0,216],"source":"You must specifically call <xref:System.Windows.FrameworkContentElement.RegisterName%2A> to make an effective change on the <xref:System.Windows.FrameworkContentElement.Name%2A> property of an already loaded element."}]},{"pos":[1509,1911],"content":"One notable case where setting <xref:System.Windows.FrameworkContentElement.Name%2A> from  code is important is for naming elements that storyboards will run against. Before you can register a name, might also need to instantiate and assign a <xref:System.Windows.NameScope> instance. See the Example section, or [Storyboards Overview](~/docs/framework/wpf/graphics-multimedia/storyboards-overview.md).","nodes":[{"content":"One notable case where setting <ph id=\"ph1\">&lt;xref:System.Windows.FrameworkContentElement.Name%2A&gt;</ph> from  code is important is for naming elements that storyboards will run against.","pos":[0,166],"source":"One notable case where setting <xref:System.Windows.FrameworkContentElement.Name%2A> from  code is important is for naming elements that storyboards will run against."},{"content":"Before you can register a name, might also need to instantiate and assign a <ph id=\"ph1\">&lt;xref:System.Windows.NameScope&gt;</ph> instance.","pos":[167,284],"source":" Before you can register a name, might also need to instantiate and assign a <xref:System.Windows.NameScope> instance."},{"content":"See the Example section, or <bpt id=\"p1\">[</bpt>Storyboards Overview<ept id=\"p1\">](~/docs/framework/wpf/graphics-multimedia/storyboards-overview.md)</ept>.","pos":[285,402],"source":" See the Example section, or [Storyboards Overview](~/docs/framework/wpf/graphics-multimedia/storyboards-overview.md)."}]},{"pos":[1918,2749],"content":"Setting <xref:System.Windows.FrameworkContentElement.Name%2A> from code has limited applications, but looking up an element by name is more common, particularly if you are employing a navigation model where pages reload into the application and the run-time code is not necessarily the code-behind of that respective page. The utility method <xref:System.Windows.FrameworkContentElement.FindName%2A>, which is available from any <xref:System.Windows.FrameworkContentElement>, can find any element by <xref:System.Windows.FrameworkContentElement.Name%2A> in that element's logical tree recursively. Or you can use the <xref:System.Windows.LogicalTreeHelper.FindLogicalNode%2A> static method of <xref:System.Windows.LogicalTreeHelper>, which also takes the <xref:System.Windows.FrameworkContentElement.Name%2A> string as an argument.","nodes":[{"content":"Setting <xref:System.Windows.FrameworkContentElement.Name%2A> from code has limited applications, but looking up an element by name is more common, particularly if you are employing a navigation model where pages reload into the application and the run-time code is not necessarily the code-behind of that respective page. The utility method <xref:System.Windows.FrameworkContentElement.FindName%2A>, which is available from any <xref:System.Windows.FrameworkContentElement>, can find any element by <xref:System.Windows.FrameworkContentElement.Name%2A> in that element's logical tree recursively. Or you can use the <xref:System.Windows.LogicalTreeHelper.FindLogicalNode%2A> static method of <xref:System.Windows.LogicalTreeHelper>, which also takes the <xref:System.Windows.FrameworkContentElement.Name%2A> string as an argument.","pos":[0,831],"nodes":[{"content":"Setting <ph id=\"ph1\">&lt;xref:System.Windows.FrameworkContentElement.Name%2A&gt;</ph> from code has limited applications, but looking up an element by name is more common, particularly if you are employing a navigation model where pages reload into the application and the run-time code is not necessarily the code-behind of that respective page.","pos":[0,322],"source":"Setting <xref:System.Windows.FrameworkContentElement.Name%2A> from code has limited applications, but looking up an element by name is more common, particularly if you are employing a navigation model where pages reload into the application and the run-time code is not necessarily the code-behind of that respective page."},{"content":"The utility method <ph id=\"ph1\">&lt;xref:System.Windows.FrameworkContentElement.FindName%2A&gt;</ph>, which is available from any <ph id=\"ph2\">&lt;xref:System.Windows.FrameworkContentElement&gt;</ph>, can find any element by <ph id=\"ph3\">&lt;xref:System.Windows.FrameworkContentElement.Name%2A&gt;</ph> in that element's logical tree recursively.","pos":[323,597],"source":" The utility method <xref:System.Windows.FrameworkContentElement.FindName%2A>, which is available from any <xref:System.Windows.FrameworkContentElement>, can find any element by <xref:System.Windows.FrameworkContentElement.Name%2A> in that element's logical tree recursively."},{"content":"Or you can use the <ph id=\"ph1\">&lt;xref:System.Windows.LogicalTreeHelper.FindLogicalNode%2A&gt;</ph> static method of <ph id=\"ph2\">&lt;xref:System.Windows.LogicalTreeHelper&gt;</ph>, which also takes the <ph id=\"ph3\">&lt;xref:System.Windows.FrameworkContentElement.Name%2A&gt;</ph> string as an argument.","pos":[598,831],"source":" Or you can use the <xref:System.Windows.LogicalTreeHelper.FindLogicalNode%2A> static method of <xref:System.Windows.LogicalTreeHelper>, which also takes the <xref:System.Windows.FrameworkContentElement.Name%2A> string as an argument."}]}]},{"pos":[2756,3032],"content":"Commonly used root elements (<xref:System.Windows.Window>, <xref:System.Windows.Controls.Page> for example) implement the interface <xref:System.Windows.Markup.INameScope>. Implementations of this interface are expected to enforce that names be unambiguous within their scope.","nodes":[{"content":"Commonly used root elements (<xref:System.Windows.Window>, <xref:System.Windows.Controls.Page> for example) implement the interface <xref:System.Windows.Markup.INameScope>. Implementations of this interface are expected to enforce that names be unambiguous within their scope.","pos":[0,276],"nodes":[{"content":"Commonly used root elements (<ph id=\"ph1\">&lt;xref:System.Windows.Window&gt;</ph>, <ph id=\"ph2\">&lt;xref:System.Windows.Controls.Page&gt;</ph> for example) implement the interface <ph id=\"ph3\">&lt;xref:System.Windows.Markup.INameScope&gt;</ph>.","pos":[0,172],"source":"Commonly used root elements (<xref:System.Windows.Window>, <xref:System.Windows.Controls.Page> for example) implement the interface <xref:System.Windows.Markup.INameScope>."},{"content":"Implementations of this interface are expected to enforce that names be unambiguous within their scope.","pos":[173,276]}]}]},{"pos":[3087,3118],"content":"Dependency Property Information","linkify":"Dependency Property Information","nodes":[{"content":"Dependency Property Information","pos":[0,31]}]},{"pos":[3139,3155],"content":"Identifier field","nodes":[{"content":"Identifier field","pos":[0,16]}]},{"pos":[3156,3214],"content":"<xref:System.Windows.FrameworkContentElement.NameProperty>","nodes":[]},{"pos":[3219,3252],"content":"Metadata properties set to <ph id=\"ph1\">`true`</ph>","source":"Metadata properties set to `true`"},{"pos":[3253,3318],"content":"<xref:System.Windows.UIPropertyMetadata.IsAnimationProhibited%2A>","nodes":[]}],"pos":[129490,132834],"yaml":true,"extradata":"MT"},{"content":"The name of the element.","nodes":[{"pos":[0,24],"content":"The name of the element.","nodes":[{"content":"The name of the element.","pos":[0,24]}]}],"pos":[133046,133071],"yaml":true},{"content":"Identifies the <xref href=\"System.Windows.FrameworkContentElement.Name\"></xref> dependency property.","nodes":[{"pos":[0,100],"content":"Identifies the <ph id=\"ph1\">&lt;xref href=\"System.Windows.FrameworkContentElement.Name\"&gt;&lt;/xref&gt;</ph> dependency property.","source":"Identifies the <xref href=\"System.Windows.FrameworkContentElement.Name\"></xref> dependency property."}],"pos":[134171,134272],"yaml":true},{"content":"Invoked whenever the <xref href=\"System.Windows.FrameworkContentElement.ContextMenuClosing\"></xref> routed event reaches this class in its route. Implement this method to add class handling for this event.","nodes":[{"pos":[0,205],"content":"Invoked whenever the <xref href=\"System.Windows.FrameworkContentElement.ContextMenuClosing\"></xref> routed event reaches this class in its route. Implement this method to add class handling for this event.","nodes":[{"content":"Invoked whenever the <ph id=\"ph1\">&lt;xref href=\"System.Windows.FrameworkContentElement.ContextMenuClosing\"&gt;&lt;/xref&gt;</ph> routed event reaches this class in its route.","pos":[0,145],"source":"Invoked whenever the <xref href=\"System.Windows.FrameworkContentElement.ContextMenuClosing\"></xref> routed event reaches this class in its route."},{"content":"Implement this method to add class handling for this event.","pos":[146,205]}]}],"pos":[135679,135885],"yaml":true},{"content":"This method has no default implementation. You should still call the base implementation in case an intermediate class in the inheritance has implemented this method.  \n  \n The purpose of this method is somewhat similar to [!INCLUDE[TLA#tla_clr](~/includes/tlasharptla-clr-md.md)] event pattern On* methods: it provides the means to handle the matching event from derived classes with a class handler instead of an instance handler. In this case the matching event is a routed event. The implementation pattern of the On* methods is different for routed events because the routed event may have been raised by a child element, not necessarily the element that will invoke handlers. Therefore, your implementation will have to take the event arguments' source properties into account (and should not try to re-raise the event in most cases). Subclasses of <xref:System.Windows.FrameworkContentElement> could choose to call private class handler methods when the event is received along the route. One potential scenario is to take the arguments of the event and deliberately mark the event as handled to shorten the route.","nodes":[{"pos":[0,166],"content":"This method has no default implementation. You should still call the base implementation in case an intermediate class in the inheritance has implemented this method.","nodes":[{"content":"This method has no default implementation. You should still call the base implementation in case an intermediate class in the inheritance has implemented this method.","pos":[0,166],"nodes":[{"content":"This method has no default implementation.","pos":[0,42]},{"content":"You should still call the base implementation in case an intermediate class in the inheritance has implemented this method.","pos":[43,166]}]}]},{"pos":[173,1121],"content":"The purpose of this method is somewhat similar to [!INCLUDE[TLA#tla_clr](~/includes/tlasharptla-clr-md.md)] event pattern On* methods: it provides the means to handle the matching event from derived classes with a class handler instead of an instance handler. In this case the matching event is a routed event. The implementation pattern of the On* methods is different for routed events because the routed event may have been raised by a child element, not necessarily the element that will invoke handlers. Therefore, your implementation will have to take the event arguments' source properties into account (and should not try to re-raise the event in most cases). Subclasses of <xref:System.Windows.FrameworkContentElement> could choose to call private class handler methods when the event is received along the route. One potential scenario is to take the arguments of the event and deliberately mark the event as handled to shorten the route.","nodes":[{"content":"The purpose of this method is somewhat similar to <ph id=\"ph1\">[!INCLUDE[TLA#tla_clr](~/includes/tlasharptla-clr-md.md)]</ph> event pattern On* methods: it provides the means to handle the matching event from derived classes with a class handler instead of an instance handler.","pos":[0,259],"source":"The purpose of this method is somewhat similar to [!INCLUDE[TLA#tla_clr](~/includes/tlasharptla-clr-md.md)] event pattern On* methods: it provides the means to handle the matching event from derived classes with a class handler instead of an instance handler."},{"content":"In this case the matching event is a routed event.","pos":[260,310]},{"content":"The implementation pattern of the On* methods is different for routed events because the routed event may have been raised by a child element, not necessarily the element that will invoke handlers.","pos":[311,508]},{"content":"Therefore, your implementation will have to take the event arguments' source properties into account (and should not try to re-raise the event in most cases).","pos":[509,667]},{"content":"Subclasses of <ph id=\"ph1\">&lt;xref:System.Windows.FrameworkContentElement&gt;</ph> could choose to call private class handler methods when the event is received along the route.","pos":[668,822],"source":" Subclasses of <xref:System.Windows.FrameworkContentElement> could choose to call private class handler methods when the event is received along the route."},{"content":"One potential scenario is to take the arguments of the event and deliberately mark the event as handled to shorten the route.","pos":[823,948]}]}],"pos":[135896,137022],"yaml":true,"extradata":"MT"},{"content":"Provides data about the event.","nodes":[{"pos":[0,30],"content":"Provides data about the event.","nodes":[{"content":"Provides data about the event.","pos":[0,30]}]}],"pos":[137243,137274],"yaml":true},{"content":"Invoked whenever the <xref href=\"System.Windows.FrameworkContentElement.ContextMenuOpening\"></xref> routed event reaches this class in its route. Implement this method to add class handling for this event.","nodes":[{"pos":[0,205],"content":"Invoked whenever the <xref href=\"System.Windows.FrameworkContentElement.ContextMenuOpening\"></xref> routed event reaches this class in its route. Implement this method to add class handling for this event.","nodes":[{"content":"Invoked whenever the <ph id=\"ph1\">&lt;xref href=\"System.Windows.FrameworkContentElement.ContextMenuOpening\"&gt;&lt;/xref&gt;</ph> routed event reaches this class in its route.","pos":[0,145],"source":"Invoked whenever the <xref href=\"System.Windows.FrameworkContentElement.ContextMenuOpening\"></xref> routed event reaches this class in its route."},{"content":"Implement this method to add class handling for this event.","pos":[146,205]}]}],"pos":[138580,138786],"yaml":true},{"content":"This method has no default implementation. You should still call base() in case an intermediate class in the inheritance has implemented this method.  \n  \n The purpose of this method is somewhat similar to [!INCLUDE[TLA#tla_clr](~/includes/tlasharptla-clr-md.md)] event pattern On* methods: it provides the means to handle the matching event from derived classes with a class handler instead of an instance handler. In this case the matching event is a routed event. The implementation pattern of the On* methods is different for routed events because the routed event may have been raised by a child element, not necessarily the element that will invoke handlers, so your implementation will have to take the event arguments' source properties into account (and should not try to re-raise the event in most cases). Subclasses of <xref:System.Windows.FrameworkContentElement> could choose to call private class handler methods when the event is received along the route. One potential scenario is to take the arguments of the event and deliberately mark the event as handled to shorten the route.","nodes":[{"pos":[0,149],"content":"This method has no default implementation. You should still call base() in case an intermediate class in the inheritance has implemented this method.","nodes":[{"content":"This method has no default implementation. You should still call base() in case an intermediate class in the inheritance has implemented this method.","pos":[0,149],"nodes":[{"content":"This method has no default implementation.","pos":[0,42]},{"content":"You should still call base() in case an intermediate class in the inheritance has implemented this method.","pos":[43,149]}]}]},{"pos":[156,1096],"content":"The purpose of this method is somewhat similar to [!INCLUDE[TLA#tla_clr](~/includes/tlasharptla-clr-md.md)] event pattern On* methods: it provides the means to handle the matching event from derived classes with a class handler instead of an instance handler. In this case the matching event is a routed event. The implementation pattern of the On* methods is different for routed events because the routed event may have been raised by a child element, not necessarily the element that will invoke handlers, so your implementation will have to take the event arguments' source properties into account (and should not try to re-raise the event in most cases). Subclasses of <xref:System.Windows.FrameworkContentElement> could choose to call private class handler methods when the event is received along the route. One potential scenario is to take the arguments of the event and deliberately mark the event as handled to shorten the route.","nodes":[{"content":"The purpose of this method is somewhat similar to <ph id=\"ph1\">[!INCLUDE[TLA#tla_clr](~/includes/tlasharptla-clr-md.md)]</ph> event pattern On* methods: it provides the means to handle the matching event from derived classes with a class handler instead of an instance handler.","pos":[0,259],"source":"The purpose of this method is somewhat similar to [!INCLUDE[TLA#tla_clr](~/includes/tlasharptla-clr-md.md)] event pattern On* methods: it provides the means to handle the matching event from derived classes with a class handler instead of an instance handler."},{"content":"In this case the matching event is a routed event.","pos":[260,310]},{"content":"The implementation pattern of the On* methods is different for routed events because the routed event may have been raised by a child element, not necessarily the element that will invoke handlers, so your implementation will have to take the event arguments' source properties into account (and should not try to re-raise the event in most cases).","pos":[311,659]},{"content":"Subclasses of <ph id=\"ph1\">&lt;xref:System.Windows.FrameworkContentElement&gt;</ph> could choose to call private class handler methods when the event is received along the route.","pos":[660,814],"source":" Subclasses of <xref:System.Windows.FrameworkContentElement> could choose to call private class handler methods when the event is received along the route."},{"content":"One potential scenario is to take the arguments of the event and deliberately mark the event as handled to shorten the route.","pos":[815,940]}]}],"pos":[138797,139898],"yaml":true,"extradata":"MT"},{"content":"Event data for the event.","nodes":[{"pos":[0,25],"content":"Event data for the event.","nodes":[{"content":"Event data for the event.","pos":[0,25]}]}],"pos":[140119,140145],"yaml":true},{"content":"Class handler for the <xref href=\"System.Windows.ContentElement.GotFocus\"></xref> event.","nodes":[{"pos":[0,88],"content":"Class handler for the <ph id=\"ph1\">&lt;xref href=\"System.Windows.ContentElement.GotFocus\"&gt;&lt;/xref&gt;</ph> event.","source":"Class handler for the <xref href=\"System.Windows.ContentElement.GotFocus\"></xref> event."}],"pos":[141334,141423],"yaml":true},{"content":"This class handler sets appropriate focus behavior on this element if the event originated from this element. If the event's source was another element in the tree, the handler does nothing.  \n  \n Override this method in order to change these default focusing behavior on your element.","nodes":[{"pos":[0,190],"content":"This class handler sets appropriate focus behavior on this element if the event originated from this element. If the event's source was another element in the tree, the handler does nothing.","nodes":[{"content":"This class handler sets appropriate focus behavior on this element if the event originated from this element. If the event's source was another element in the tree, the handler does nothing.","pos":[0,190],"nodes":[{"content":"This class handler sets appropriate focus behavior on this element if the event originated from this element.","pos":[0,109]},{"content":"If the event's source was another element in the tree, the handler does nothing.","pos":[110,190]}]}]},{"pos":[197,285],"content":"Override this method in order to change these default focusing behavior on your element.","nodes":[{"content":"Override this method in order to change these default focusing behavior on your element.","pos":[0,88]}]}],"pos":[141434,141724],"yaml":true,"extradata":"MT"},{"content":"Event data for the event.","nodes":[{"pos":[0,25],"content":"Event data for the event.","nodes":[{"content":"Event data for the event.","pos":[0,25]}]}],"pos":[141908,141934],"yaml":true},{"content":"Raises the <xref href=\"System.Windows.FrameworkContentElement.Initialized\"></xref> event. This method is invoked whenever <xref href=\"System.Windows.FrameworkContentElement.IsInitialized\"></xref> is set to `true`.","nodes":[{"pos":[0,213],"content":"Raises the <xref href=\"System.Windows.FrameworkContentElement.Initialized\"></xref> event. This method is invoked whenever <xref href=\"System.Windows.FrameworkContentElement.IsInitialized\"></xref> is set to `true`.","nodes":[{"content":"Raises the <ph id=\"ph1\">&lt;xref href=\"System.Windows.FrameworkContentElement.Initialized\"&gt;&lt;/xref&gt;</ph> event.","pos":[0,89],"source":"Raises the <xref href=\"System.Windows.FrameworkContentElement.Initialized\"></xref> event."},{"content":"This method is invoked whenever <ph id=\"ph1\">&lt;xref href=\"System.Windows.FrameworkContentElement.IsInitialized\"&gt;&lt;/xref&gt;</ph> is set to <ph id=\"ph2\">`true`</ph>.","pos":[90,213],"source":" This method is invoked whenever <xref href=\"System.Windows.FrameworkContentElement.IsInitialized\"></xref> is set to `true`."}]}],"pos":[143071,143285],"yaml":true},{"content":"The default implementation of this virtual method raises the event as described earlier in this topic. Overrides should call base() to preserve this behavior.  \n  \n Note that the <xref:System.Windows.FrameworkContentElement.IsInitialized%2A> property is read-only. Therefore, you cannot set it to force initialization behavior that way. Initialization setting is intended to be done only by the [!INCLUDE[TLA#tla_winclient](~/includes/tlasharptla-winclient-md.md)] framework.","nodes":[{"pos":[0,158],"content":"The default implementation of this virtual method raises the event as described earlier in this topic. Overrides should call base() to preserve this behavior.","nodes":[{"content":"The default implementation of this virtual method raises the event as described earlier in this topic. Overrides should call base() to preserve this behavior.","pos":[0,158],"nodes":[{"content":"The default implementation of this virtual method raises the event as described earlier in this topic.","pos":[0,102]},{"content":"Overrides should call base() to preserve this behavior.","pos":[103,158]}]}]},{"pos":[165,475],"content":"Note that the <xref:System.Windows.FrameworkContentElement.IsInitialized%2A> property is read-only. Therefore, you cannot set it to force initialization behavior that way. Initialization setting is intended to be done only by the [!INCLUDE[TLA#tla_winclient](~/includes/tlasharptla-winclient-md.md)] framework.","nodes":[{"content":"Note that the <ph id=\"ph1\">&lt;xref:System.Windows.FrameworkContentElement.IsInitialized%2A&gt;</ph> property is read-only.","pos":[0,99],"source":"Note that the <xref:System.Windows.FrameworkContentElement.IsInitialized%2A> property is read-only."},{"content":"Therefore, you cannot set it to force initialization behavior that way.","pos":[100,171]},{"content":"Initialization setting is intended to be done only by the <ph id=\"ph1\">[!INCLUDE[TLA#tla_winclient](~/includes/tlasharptla-winclient-md.md)]</ph> framework.","pos":[172,310],"source":" Initialization setting is intended to be done only by the [!INCLUDE[TLA#tla_winclient](~/includes/tlasharptla-winclient-md.md)] framework."}]}],"pos":[143296,143776],"yaml":true,"extradata":"MT"},{"content":"Event data for the event.","nodes":[{"pos":[0,25],"content":"Event data for the event.","nodes":[{"content":"Event data for the event.","pos":[0,25]}]}],"pos":[143927,143953],"yaml":true},{"content":"Invoked whenever the effective value of any dependency property on this <xref href=\"System.Windows.FrameworkContentElement\"></xref> has been updated. The specific dependency property that changed is reported in the arguments parameter. Overrides <xref href=\"System.Windows.DependencyObject.OnPropertyChanged(System.Windows.DependencyPropertyChangedEventArgs)\"></xref>.","nodes":[{"pos":[0,368],"content":"Invoked whenever the effective value of any dependency property on this <xref href=\"System.Windows.FrameworkContentElement\"></xref> has been updated. The specific dependency property that changed is reported in the arguments parameter. Overrides <xref href=\"System.Windows.DependencyObject.OnPropertyChanged(System.Windows.DependencyPropertyChangedEventArgs)\"></xref>.","nodes":[{"content":"Invoked whenever the effective value of any dependency property on this <ph id=\"ph1\">&lt;xref href=\"System.Windows.FrameworkContentElement\"&gt;&lt;/xref&gt;</ph> has been updated.","pos":[0,149],"source":"Invoked whenever the effective value of any dependency property on this <xref href=\"System.Windows.FrameworkContentElement\"></xref> has been updated."},{"content":"The specific dependency property that changed is reported in the arguments parameter.","pos":[150,235]},{"content":"Overrides <ph id=\"ph1\">&lt;xref href=\"System.Windows.DependencyObject.OnPropertyChanged(System.Windows.DependencyPropertyChangedEventArgs)\"&gt;&lt;/xref&gt;</ph>.","pos":[236,368],"source":" Overrides <xref href=\"System.Windows.DependencyObject.OnPropertyChanged(System.Windows.DependencyPropertyChangedEventArgs)\"></xref>."}]}],"pos":[145291,145660],"yaml":true},{"content":"This method is not intended to generally detect property changes or invalidations. It is instead intended for modifications of the general invalidation pattern if certain information is known about wide classifications of properties.  \n  \n This method is potentially invoked many times during the life of an object. Therefore, you can achieve better performance if you override the metadata of specific properties and then attach <xref:System.Windows.CoerceValueCallback> or <xref:System.Windows.PropertyChangedCallback> functions for individual properties. However, you would use this method if a <xref:System.Windows.FrameworkContentElement> includes a significant number of value-interrelated dependency properties, or if it includes logic such as rendering behavior that must be rerun for several related cases of property invalidations.  \n  \n Note that there is an identically named `OnPropertyChanged` method with a different signature (the parameter type is <xref:System.ComponentModel.PropertyChangedEventArgs>) that can appear on a number of classes. That `OnPropertyChanged` is used for data object notifications, and is part of the contract for <xref:System.ComponentModel.INotifyPropertyChanged>.","nodes":[{"pos":[0,233],"content":"This method is not intended to generally detect property changes or invalidations. It is instead intended for modifications of the general invalidation pattern if certain information is known about wide classifications of properties.","nodes":[{"content":"This method is not intended to generally detect property changes or invalidations. It is instead intended for modifications of the general invalidation pattern if certain information is known about wide classifications of properties.","pos":[0,233],"nodes":[{"content":"This method is not intended to generally detect property changes or invalidations.","pos":[0,82]},{"content":"It is instead intended for modifications of the general invalidation pattern if certain information is known about wide classifications of properties.","pos":[83,233]}]}]},{"pos":[240,841],"content":"This method is potentially invoked many times during the life of an object. Therefore, you can achieve better performance if you override the metadata of specific properties and then attach <xref:System.Windows.CoerceValueCallback> or <xref:System.Windows.PropertyChangedCallback> functions for individual properties. However, you would use this method if a <xref:System.Windows.FrameworkContentElement> includes a significant number of value-interrelated dependency properties, or if it includes logic such as rendering behavior that must be rerun for several related cases of property invalidations.","nodes":[{"content":"This method is potentially invoked many times during the life of an object. Therefore, you can achieve better performance if you override the metadata of specific properties and then attach <xref:System.Windows.CoerceValueCallback> or <xref:System.Windows.PropertyChangedCallback> functions for individual properties. However, you would use this method if a <xref:System.Windows.FrameworkContentElement> includes a significant number of value-interrelated dependency properties, or if it includes logic such as rendering behavior that must be rerun for several related cases of property invalidations.","pos":[0,601],"nodes":[{"content":"This method is potentially invoked many times during the life of an object.","pos":[0,75]},{"content":"Therefore, you can achieve better performance if you override the metadata of specific properties and then attach <ph id=\"ph1\">&lt;xref:System.Windows.CoerceValueCallback&gt;</ph> or <ph id=\"ph2\">&lt;xref:System.Windows.PropertyChangedCallback&gt;</ph> functions for individual properties.","pos":[76,317],"source":" Therefore, you can achieve better performance if you override the metadata of specific properties and then attach <xref:System.Windows.CoerceValueCallback> or <xref:System.Windows.PropertyChangedCallback> functions for individual properties."},{"content":"However, you would use this method if a <ph id=\"ph1\">&lt;xref:System.Windows.FrameworkContentElement&gt;</ph> includes a significant number of value-interrelated dependency properties, or if it includes logic such as rendering behavior that must be rerun for several related cases of property invalidations.","pos":[318,601],"source":" However, you would use this method if a <xref:System.Windows.FrameworkContentElement> includes a significant number of value-interrelated dependency properties, or if it includes logic such as rendering behavior that must be rerun for several related cases of property invalidations."}]}]},{"pos":[848,1208],"content":"Note that there is an identically named `OnPropertyChanged` method with a different signature (the parameter type is <xref:System.ComponentModel.PropertyChangedEventArgs>) that can appear on a number of classes. That `OnPropertyChanged` is used for data object notifications, and is part of the contract for <xref:System.ComponentModel.INotifyPropertyChanged>.","nodes":[{"content":"Note that there is an identically named <ph id=\"ph1\">`OnPropertyChanged`</ph> method with a different signature (the parameter type is <ph id=\"ph2\">&lt;xref:System.ComponentModel.PropertyChangedEventArgs&gt;</ph>) that can appear on a number of classes.","pos":[0,211],"source":"Note that there is an identically named `OnPropertyChanged` method with a different signature (the parameter type is <xref:System.ComponentModel.PropertyChangedEventArgs>) that can appear on a number of classes."},{"content":"That <ph id=\"ph1\">`OnPropertyChanged`</ph> is used for data object notifications, and is part of the contract for <ph id=\"ph2\">&lt;xref:System.ComponentModel.INotifyPropertyChanged&gt;</ph>.","pos":[212,360],"source":" That `OnPropertyChanged` is used for data object notifications, and is part of the contract for <xref:System.ComponentModel.INotifyPropertyChanged>."}]}],"pos":[145671,146886],"yaml":true,"extradata":"MT"},{"content":"The event data that describes the property that changed, including the old and new values.","nodes":[{"pos":[0,90],"content":"The event data that describes the property that changed, including the old and new values.","nodes":[{"content":"The event data that describes the property that changed, including the old and new values.","pos":[0,90]}]}],"pos":[147115,147206],"yaml":true},{"content":"Invoked when the style that is in use on this element changes.","nodes":[{"pos":[0,62],"content":"Invoked when the style that is in use on this element changes.","nodes":[{"content":"Invoked when the style that is in use on this element changes.","pos":[0,62]}]}],"pos":[148418,148481],"yaml":true},{"content":"This method has a default implementation that sets an internal flag noting the style changed condition.","nodes":[{"pos":[0,103],"content":"This method has a default implementation that sets an internal flag noting the style changed condition.","nodes":[{"content":"This method has a default implementation that sets an internal flag noting the style changed condition.","pos":[0,103]}]}],"pos":[148492,148596],"yaml":true,"extradata":"MT"},{"content":"The old style.","nodes":[{"pos":[0,14],"content":"The old style.","nodes":[{"content":"The old style.","pos":[0,14]}]}],"pos":[148808,148823],"yaml":true},{"content":"The new style.","nodes":[{"pos":[0,14],"content":"The new style.","nodes":[{"content":"The new style.","pos":[0,14]}]}],"pos":[148894,148909],"yaml":true},{"content":"Invoked whenever the <xref href=\"System.Windows.FrameworkContentElement.ToolTipClosing\"></xref> routed event reaches this class in its route. Implement this method to add class handling for this event.","nodes":[{"pos":[0,201],"content":"Invoked whenever the <xref href=\"System.Windows.FrameworkContentElement.ToolTipClosing\"></xref> routed event reaches this class in its route. Implement this method to add class handling for this event.","nodes":[{"content":"Invoked whenever the <ph id=\"ph1\">&lt;xref href=\"System.Windows.FrameworkContentElement.ToolTipClosing\"&gt;&lt;/xref&gt;</ph> routed event reaches this class in its route.","pos":[0,141],"source":"Invoked whenever the <xref href=\"System.Windows.FrameworkContentElement.ToolTipClosing\"></xref> routed event reaches this class in its route."},{"content":"Implement this method to add class handling for this event.","pos":[142,201]}]}],"pos":[150161,150363],"yaml":true},{"content":"This method has no default implementation. You should still call base() in case an intermediate class in the inheritance has implemented this method.  \n  \n The purpose of this method is somewhat similar to [!INCLUDE[TLA#tla_clr](~/includes/tlasharptla-clr-md.md)] event pattern On* methods: it provides the means to handle the matching event from derived classes with a class handler instead of an instance handler. In this case the matching event is a routed event. The implementation pattern of the On* methods is different for routed events because the routed event may have been raised by a child element, not necessarily the element that will invoke handlers, so your implementation will have to take the event arguments' source properties into account (and should not try to re-raise the event in most cases). Subclasses of <xref:System.Windows.FrameworkContentElement> could choose to call private class handler methods when the event is received along the route. One potential scenario is to take the arguments of the event and deliberately mark the event as handled to shorten the route.","nodes":[{"pos":[0,149],"content":"This method has no default implementation. You should still call base() in case an intermediate class in the inheritance has implemented this method.","nodes":[{"content":"This method has no default implementation. You should still call base() in case an intermediate class in the inheritance has implemented this method.","pos":[0,149],"nodes":[{"content":"This method has no default implementation.","pos":[0,42]},{"content":"You should still call base() in case an intermediate class in the inheritance has implemented this method.","pos":[43,149]}]}]},{"pos":[156,1096],"content":"The purpose of this method is somewhat similar to [!INCLUDE[TLA#tla_clr](~/includes/tlasharptla-clr-md.md)] event pattern On* methods: it provides the means to handle the matching event from derived classes with a class handler instead of an instance handler. In this case the matching event is a routed event. The implementation pattern of the On* methods is different for routed events because the routed event may have been raised by a child element, not necessarily the element that will invoke handlers, so your implementation will have to take the event arguments' source properties into account (and should not try to re-raise the event in most cases). Subclasses of <xref:System.Windows.FrameworkContentElement> could choose to call private class handler methods when the event is received along the route. One potential scenario is to take the arguments of the event and deliberately mark the event as handled to shorten the route.","nodes":[{"content":"The purpose of this method is somewhat similar to <ph id=\"ph1\">[!INCLUDE[TLA#tla_clr](~/includes/tlasharptla-clr-md.md)]</ph> event pattern On* methods: it provides the means to handle the matching event from derived classes with a class handler instead of an instance handler.","pos":[0,259],"source":"The purpose of this method is somewhat similar to [!INCLUDE[TLA#tla_clr](~/includes/tlasharptla-clr-md.md)] event pattern On* methods: it provides the means to handle the matching event from derived classes with a class handler instead of an instance handler."},{"content":"In this case the matching event is a routed event.","pos":[260,310]},{"content":"The implementation pattern of the On* methods is different for routed events because the routed event may have been raised by a child element, not necessarily the element that will invoke handlers, so your implementation will have to take the event arguments' source properties into account (and should not try to re-raise the event in most cases).","pos":[311,659]},{"content":"Subclasses of <ph id=\"ph1\">&lt;xref:System.Windows.FrameworkContentElement&gt;</ph> could choose to call private class handler methods when the event is received along the route.","pos":[660,814],"source":" Subclasses of <xref:System.Windows.FrameworkContentElement> could choose to call private class handler methods when the event is received along the route."},{"content":"One potential scenario is to take the arguments of the event and deliberately mark the event as handled to shorten the route.","pos":[815,940]}]}],"pos":[150374,151475],"yaml":true,"extradata":"MT"},{"content":"Provides data about the event.","nodes":[{"pos":[0,30],"content":"Provides data about the event.","nodes":[{"content":"Provides data about the event.","pos":[0,30]}]}],"pos":[151684,151715],"yaml":true},{"content":"Invoked whenever the <xref href=\"System.Windows.FrameworkContentElement.ToolTipOpening\"></xref> routed event reaches this class in its route. Implement this method to add class handling for this event.","nodes":[{"pos":[0,201],"content":"Invoked whenever the <xref href=\"System.Windows.FrameworkContentElement.ToolTipOpening\"></xref> routed event reaches this class in its route. Implement this method to add class handling for this event.","nodes":[{"content":"Invoked whenever the <ph id=\"ph1\">&lt;xref href=\"System.Windows.FrameworkContentElement.ToolTipOpening\"&gt;&lt;/xref&gt;</ph> routed event reaches this class in its route.","pos":[0,141],"source":"Invoked whenever the <xref href=\"System.Windows.FrameworkContentElement.ToolTipOpening\"></xref> routed event reaches this class in its route."},{"content":"Implement this method to add class handling for this event.","pos":[142,201]}]}],"pos":[152969,153171],"yaml":true},{"content":"This method has no default implementation. You should still call base() in case an intermediate class in the inheritance has implemented this method.  \n  \n The purpose of this method is somewhat similar to [!INCLUDE[TLA#tla_clr](~/includes/tlasharptla-clr-md.md)] event pattern On* methods: it provides the means to handle the matching event from derived classes with a class handler instead of an instance handler. In this case the matching event is a routed event. The implementation pattern of the On* methods is different for routed events because the routed event may have been raised by a child element, not necessarily the element that will invoke handlers, so your implementation will need to take the event arguments' source properties into account (and should not try to re-raise the event in most cases). Subclasses of <xref:System.Windows.FrameworkContentElement> could choose to call private class handler methods when the event is received along the route. One potential scenario is to take the arguments of the event and deliberately mark the event as handled to shorten the route.","nodes":[{"pos":[0,149],"content":"This method has no default implementation. You should still call base() in case an intermediate class in the inheritance has implemented this method.","nodes":[{"content":"This method has no default implementation. You should still call base() in case an intermediate class in the inheritance has implemented this method.","pos":[0,149],"nodes":[{"content":"This method has no default implementation.","pos":[0,42]},{"content":"You should still call base() in case an intermediate class in the inheritance has implemented this method.","pos":[43,149]}]}]},{"pos":[156,1096],"content":"The purpose of this method is somewhat similar to [!INCLUDE[TLA#tla_clr](~/includes/tlasharptla-clr-md.md)] event pattern On* methods: it provides the means to handle the matching event from derived classes with a class handler instead of an instance handler. In this case the matching event is a routed event. The implementation pattern of the On* methods is different for routed events because the routed event may have been raised by a child element, not necessarily the element that will invoke handlers, so your implementation will need to take the event arguments' source properties into account (and should not try to re-raise the event in most cases). Subclasses of <xref:System.Windows.FrameworkContentElement> could choose to call private class handler methods when the event is received along the route. One potential scenario is to take the arguments of the event and deliberately mark the event as handled to shorten the route.","nodes":[{"content":"The purpose of this method is somewhat similar to <ph id=\"ph1\">[!INCLUDE[TLA#tla_clr](~/includes/tlasharptla-clr-md.md)]</ph> event pattern On* methods: it provides the means to handle the matching event from derived classes with a class handler instead of an instance handler.","pos":[0,259],"source":"The purpose of this method is somewhat similar to [!INCLUDE[TLA#tla_clr](~/includes/tlasharptla-clr-md.md)] event pattern On* methods: it provides the means to handle the matching event from derived classes with a class handler instead of an instance handler."},{"content":"In this case the matching event is a routed event.","pos":[260,310]},{"content":"The implementation pattern of the On* methods is different for routed events because the routed event may have been raised by a child element, not necessarily the element that will invoke handlers, so your implementation will need to take the event arguments' source properties into account (and should not try to re-raise the event in most cases).","pos":[311,659]},{"content":"Subclasses of <ph id=\"ph1\">&lt;xref:System.Windows.FrameworkContentElement&gt;</ph> could choose to call private class handler methods when the event is received along the route.","pos":[660,814],"source":" Subclasses of <xref:System.Windows.FrameworkContentElement> could choose to call private class handler methods when the event is received along the route."},{"content":"One potential scenario is to take the arguments of the event and deliberately mark the event as handled to shorten the route.","pos":[815,940]}]}],"pos":[153182,154283],"yaml":true,"extradata":"MT"},{"content":"Provides data about the event.","nodes":[{"pos":[0,30],"content":"Provides data about the event.","nodes":[{"content":"Provides data about the event.","pos":[0,30]}]}],"pos":[154492,154523],"yaml":true},{"content":"Gets or sets a value indicating whether this element incorporates style properties from theme styles.","nodes":[{"pos":[0,101],"content":"Gets or sets a value indicating whether this element incorporates style properties from theme styles.","nodes":[{"content":"Gets or sets a value indicating whether this element incorporates style properties from theme styles.","pos":[0,101]}]}],"pos":[155629,155731],"yaml":true},{"content":"The most common usage of this property is an indirect usage within the setter of a style that is supplying a themed style.  \n  \n<a name=\"dependencyPropertyInfo_OverridesDefaultStyle\"></a>   \n## Dependency Property Information  \n  \n|||  \n|-|-|  \n|Identifier field|<xref:System.Windows.FrameworkContentElement.OverridesDefaultStyleProperty>|  \n|Metadata properties set to `true`|<xref:System.Windows.FrameworkPropertyMetadata.AffectsMeasure%2A>|","nodes":[{"pos":[0,122],"content":"The most common usage of this property is an indirect usage within the setter of a style that is supplying a themed style.","nodes":[{"content":"The most common usage of this property is an indirect usage within the setter of a style that is supplying a themed style.","pos":[0,122]}]},{"pos":[194,225],"content":"Dependency Property Information","linkify":"Dependency Property Information","nodes":[{"content":"Dependency Property Information","pos":[0,31]}]},{"pos":[246,262],"content":"Identifier field","nodes":[{"content":"Identifier field","pos":[0,16]}]},{"pos":[263,338],"content":"<xref:System.Windows.FrameworkContentElement.OverridesDefaultStyleProperty>","nodes":[]},{"pos":[343,376],"content":"Metadata properties set to <ph id=\"ph1\">`true`</ph>","source":"Metadata properties set to `true`"},{"pos":[377,442],"content":"<xref:System.Windows.FrameworkPropertyMetadata.AffectsMeasure%2A>","nodes":[]}],"pos":[155742,156198],"yaml":true,"extradata":"MT"},{"content":"`true` if this element does not use theme style properties; all style-originating properties come from local application styles, and theme style properties do not apply. `false` if application styles apply first, and then theme styles apply for properties that were not specifically set in application styles.","nodes":[{"pos":[0,309],"content":"`true` if this element does not use theme style properties; all style-originating properties come from local application styles, and theme style properties do not apply. `false` if application styles apply first, and then theme styles apply for properties that were not specifically set in application styles.","nodes":[{"content":"<ph id=\"ph1\">`true`</ph> if this element does not use theme style properties; all style-originating properties come from local application styles, and theme style properties do not apply.","pos":[0,169],"source":"`true` if this element does not use theme style properties; all style-originating properties come from local application styles, and theme style properties do not apply."},{"content":"<ph id=\"ph1\">`false`</ph> if application styles apply first, and then theme styles apply for properties that were not specifically set in application styles.","pos":[170,309],"source":"`false` if application styles apply first, and then theme styles apply for properties that were not specifically set in application styles."}]}],"pos":[156327,156639],"yaml":true},{"content":"Identifies the <xref href=\"System.Windows.FrameworkContentElement.OverridesDefaultStyle\"></xref> dependency property.","nodes":[{"pos":[0,117],"content":"Identifies the <ph id=\"ph1\">&lt;xref href=\"System.Windows.FrameworkContentElement.OverridesDefaultStyle\"&gt;&lt;/xref&gt;</ph> dependency property.","source":"Identifies the <xref href=\"System.Windows.FrameworkContentElement.OverridesDefaultStyle\"></xref> dependency property."}],"pos":[157795,157913],"yaml":true},{"content":"Gets the parent in the logical tree for this element.","nodes":[{"pos":[0,53],"content":"Gets the parent in the logical tree for this element.","nodes":[{"content":"Gets the parent in the logical tree for this element.","pos":[0,53]}]}],"pos":[159051,159105],"yaml":true},{"content":"Note that the logical parent of an element can potentially change depending on your application functionality, and keeping the value of this property will not reflect that change. You typically should get the value immediately before you need it.  \n  \n See [Trees in WPF](~/docs/framework/wpf/advanced/trees-in-wpf.md) for more information about traversing logical trees, and the scenarios where taking this approach towards element discovery is appropriate.  \n  \n The property system will potentially recalculate all property values of an element when it is reparented, because some properties inherit values through the logical tree. The <xref:System.Windows.FrameworkContentElement.DataContext%2A> that applies for bindings can also change when elements are reparented.  \n  \n Changing an element's parent is typically only done through manipulation of collections, by using dedicated add or remove methods, or through setting content properties of elements.  \n  \n The most typical scenario for using the <xref:System.Windows.FrameworkContentElement.Parent%2A> property is to obtain a reference and then get various <xref:System.Windows.FrameworkContentElement> property values from the parent. For templates, the <xref:System.Windows.FrameworkContentElement.Parent%2A> of the template eventually will be `null`. To get past this point and extend into the logical tree where the template is actually applied, use <xref:System.Windows.FrameworkContentElement.TemplatedParent%2A>.","nodes":[{"pos":[0,246],"content":"Note that the logical parent of an element can potentially change depending on your application functionality, and keeping the value of this property will not reflect that change. You typically should get the value immediately before you need it.","nodes":[{"content":"Note that the logical parent of an element can potentially change depending on your application functionality, and keeping the value of this property will not reflect that change. You typically should get the value immediately before you need it.","pos":[0,246],"nodes":[{"content":"Note that the logical parent of an element can potentially change depending on your application functionality, and keeping the value of this property will not reflect that change.","pos":[0,179]},{"content":"You typically should get the value immediately before you need it.","pos":[180,246]}]}]},{"pos":[253,458],"content":"See <bpt id=\"p1\">[</bpt>Trees in WPF<ept id=\"p1\">](~/docs/framework/wpf/advanced/trees-in-wpf.md)</ept> for more information about traversing logical trees, and the scenarios where taking this approach towards element discovery is appropriate.","source":"See [Trees in WPF](~/docs/framework/wpf/advanced/trees-in-wpf.md) for more information about traversing logical trees, and the scenarios where taking this approach towards element discovery is appropriate."},{"pos":[465,772],"content":"The property system will potentially recalculate all property values of an element when it is reparented, because some properties inherit values through the logical tree. The <xref:System.Windows.FrameworkContentElement.DataContext%2A> that applies for bindings can also change when elements are reparented.","nodes":[{"content":"The property system will potentially recalculate all property values of an element when it is reparented, because some properties inherit values through the logical tree. The <xref:System.Windows.FrameworkContentElement.DataContext%2A> that applies for bindings can also change when elements are reparented.","pos":[0,307],"nodes":[{"content":"The property system will potentially recalculate all property values of an element when it is reparented, because some properties inherit values through the logical tree.","pos":[0,170]},{"content":"The <ph id=\"ph1\">&lt;xref:System.Windows.FrameworkContentElement.DataContext%2A&gt;</ph> that applies for bindings can also change when elements are reparented.","pos":[171,307],"source":" The <xref:System.Windows.FrameworkContentElement.DataContext%2A> that applies for bindings can also change when elements are reparented."}]}]},{"pos":[779,960],"content":"Changing an element's parent is typically only done through manipulation of collections, by using dedicated add or remove methods, or through setting content properties of elements.","nodes":[{"content":"Changing an element's parent is typically only done through manipulation of collections, by using dedicated add or remove methods, or through setting content properties of elements.","pos":[0,181]}]},{"pos":[967,1480],"content":"The most typical scenario for using the <xref:System.Windows.FrameworkContentElement.Parent%2A> property is to obtain a reference and then get various <xref:System.Windows.FrameworkContentElement> property values from the parent. For templates, the <xref:System.Windows.FrameworkContentElement.Parent%2A> of the template eventually will be `null`. To get past this point and extend into the logical tree where the template is actually applied, use <xref:System.Windows.FrameworkContentElement.TemplatedParent%2A>.","nodes":[{"content":"The most typical scenario for using the <ph id=\"ph1\">&lt;xref:System.Windows.FrameworkContentElement.Parent%2A&gt;</ph> property is to obtain a reference and then get various <ph id=\"ph2\">&lt;xref:System.Windows.FrameworkContentElement&gt;</ph> property values from the parent.","pos":[0,229],"source":"The most typical scenario for using the <xref:System.Windows.FrameworkContentElement.Parent%2A> property is to obtain a reference and then get various <xref:System.Windows.FrameworkContentElement> property values from the parent."},{"content":"For templates, the <ph id=\"ph1\">&lt;xref:System.Windows.FrameworkContentElement.Parent%2A&gt;</ph> of the template eventually will be <ph id=\"ph2\">`null`</ph>.","pos":[230,347],"source":" For templates, the <xref:System.Windows.FrameworkContentElement.Parent%2A> of the template eventually will be `null`."},{"content":"To get past this point and extend into the logical tree where the template is actually applied, use <ph id=\"ph1\">&lt;xref:System.Windows.FrameworkContentElement.TemplatedParent%2A&gt;</ph>.","pos":[348,513],"source":" To get past this point and extend into the logical tree where the template is actually applied, use <xref:System.Windows.FrameworkContentElement.TemplatedParent%2A>."}]}],"pos":[159116,160607],"yaml":true,"extradata":"MT"},{"content":"The logical parent for this element.","nodes":[{"pos":[0,36],"content":"The logical parent for this element.","nodes":[{"content":"The logical parent for this element.","pos":[0,36]}]}],"pos":[161259,161296],"yaml":true},{"content":"Determines the next element that would receive focus relative to this element for a provided focus movement direction, but does not actually move the focus. This method is sealed and cannot be overridden.","nodes":[{"pos":[0,204],"content":"Determines the next element that would receive focus relative to this element for a provided focus movement direction, but does not actually move the focus. This method is sealed and cannot be overridden.","nodes":[{"content":"Determines the next element that would receive focus relative to this element for a provided focus movement direction, but does not actually move the focus. This method is sealed and cannot be overridden.","pos":[0,204],"nodes":[{"content":"Determines the next element that would receive focus relative to this element for a provided focus movement direction, but does not actually move the focus.","pos":[0,156]},{"content":"This method is sealed and cannot be overridden.","pos":[157,204]}]}]}],"pos":[162555,162760],"yaml":true},{"content":"<xref:System.Windows.FrameworkContentElement.MoveFocus%2A> is the related method that actually does move focus.","nodes":[{"pos":[0,111],"content":"<xref:System.Windows.FrameworkContentElement.MoveFocus%2A> is the related method that actually does move focus.","nodes":[{"content":"<ph id=\"ph1\">&lt;xref:System.Windows.FrameworkContentElement.MoveFocus%2A&gt;</ph> is the related method that actually does move focus.","pos":[0,111],"source":"<xref:System.Windows.FrameworkContentElement.MoveFocus%2A> is the related method that actually does move focus."}]}],"pos":[162771,162883],"yaml":true,"extradata":"MT"},{"content":"The direction for which a prospective focus change should be determined.","nodes":[{"pos":[0,72],"content":"The direction for which a prospective focus change should be determined.","nodes":[{"content":"The direction for which a prospective focus change should be determined.","pos":[0,72]}]}],"pos":[163146,163219],"yaml":true},{"content":"The next element that focus would move to if focus were actually traversed. May return `null` if focus cannot be moved relative to this element for the provided direction.","nodes":[{"pos":[0,171],"content":"The next element that focus would move to if focus were actually traversed. May return `null` if focus cannot be moved relative to this element for the provided direction.","nodes":[{"content":"The next element that focus would move to if focus were actually traversed.","pos":[0,75]},{"content":"May return <ph id=\"ph1\">`null`</ph> if focus cannot be moved relative to this element for the provided direction.","pos":[76,171],"source":" May return `null` if focus cannot be moved relative to this element for the provided direction."}]}],"pos":[163294,163466],"yaml":true},{"content":"Specified one of the following directions in the <xref href=\"System.Windows.Input.TraversalRequest\"></xref>: <xref href=\"System.Windows.Input.FocusNavigationDirection.Next\"></xref>, <xref href=\"System.Windows.Input.FocusNavigationDirection.Previous\"></xref>, <xref href=\"System.Windows.Input.FocusNavigationDirection.First\"></xref>, <xref href=\"System.Windows.Input.FocusNavigationDirection.Last\"></xref>. These directions are not legal for <xref href=\"System.Windows.FrameworkContentElement.PredictFocus(System.Windows.Input.FocusNavigationDirection)\"></xref> (but they are legal for <xref href=\"System.Windows.FrameworkContentElement.MoveFocus(System.Windows.Input.TraversalRequest)\"></xref>).","nodes":[{"pos":[0,695],"content":"Specified one of the following directions in the <xref href=\"System.Windows.Input.TraversalRequest\"></xref>: <xref href=\"System.Windows.Input.FocusNavigationDirection.Next\"></xref>, <xref href=\"System.Windows.Input.FocusNavigationDirection.Previous\"></xref>, <xref href=\"System.Windows.Input.FocusNavigationDirection.First\"></xref>, <xref href=\"System.Windows.Input.FocusNavigationDirection.Last\"></xref>. These directions are not legal for <xref href=\"System.Windows.FrameworkContentElement.PredictFocus(System.Windows.Input.FocusNavigationDirection)\"></xref> (but they are legal for <xref href=\"System.Windows.FrameworkContentElement.MoveFocus(System.Windows.Input.TraversalRequest)\"></xref>).","nodes":[{"content":"Specified one of the following directions in the <ph id=\"ph1\">&lt;xref href=\"System.Windows.Input.TraversalRequest\"&gt;&lt;/xref&gt;</ph>: <ph id=\"ph2\">&lt;xref href=\"System.Windows.Input.FocusNavigationDirection.Next\"&gt;&lt;/xref&gt;</ph>, <ph id=\"ph3\">&lt;xref href=\"System.Windows.Input.FocusNavigationDirection.Previous\"&gt;&lt;/xref&gt;</ph>, <ph id=\"ph4\">&lt;xref href=\"System.Windows.Input.FocusNavigationDirection.First\"&gt;&lt;/xref&gt;</ph>, <ph id=\"ph5\">&lt;xref href=\"System.Windows.Input.FocusNavigationDirection.Last\"&gt;&lt;/xref&gt;</ph>.","pos":[0,405],"source":"Specified one of the following directions in the <xref href=\"System.Windows.Input.TraversalRequest\"></xref>: <xref href=\"System.Windows.Input.FocusNavigationDirection.Next\"></xref>, <xref href=\"System.Windows.Input.FocusNavigationDirection.Previous\"></xref>, <xref href=\"System.Windows.Input.FocusNavigationDirection.First\"></xref>, <xref href=\"System.Windows.Input.FocusNavigationDirection.Last\"></xref>."},{"content":"These directions are not legal for <ph id=\"ph1\">&lt;xref href=\"System.Windows.FrameworkContentElement.PredictFocus(System.Windows.Input.FocusNavigationDirection)\"&gt;&lt;/xref&gt;</ph> (but they are legal for <ph id=\"ph2\">&lt;xref href=\"System.Windows.FrameworkContentElement.MoveFocus(System.Windows.Input.TraversalRequest)\"&gt;&lt;/xref&gt;</ph>).","pos":[406,695],"source":" These directions are not legal for <xref href=\"System.Windows.FrameworkContentElement.PredictFocus(System.Windows.Input.FocusNavigationDirection)\"></xref> (but they are legal for <xref href=\"System.Windows.FrameworkContentElement.MoveFocus(System.Windows.Input.TraversalRequest)\"></xref>)."}]}],"pos":[163691,164389],"yaml":true},{"content":"Provides an accessor that simplifies access to the <xref href=\"System.Windows.NameScope\"></xref> registration method.","nodes":[{"pos":[0,117],"content":"Provides an accessor that simplifies access to the <ph id=\"ph1\">&lt;xref href=\"System.Windows.NameScope\"&gt;&lt;/xref&gt;</ph> registration method.","source":"Provides an accessor that simplifies access to the <xref href=\"System.Windows.NameScope\"></xref> registration method."}],"pos":[165488,165606],"yaml":true},{"content":"This method is a convenience method for calling <xref:System.Windows.NameScope.RegisterName%2A>. The implementation will check successive parent elements until it finds the applicable <xref:System.Windows.NameScope> implementation, which is found by finding an element that implements <xref:System.Windows.Markup.INameScope>. For more information about namescopes, see [WPF XAML Namescopes](~/docs/framework/wpf/advanced/wpf-xaml-namescopes.md).  \n  \n Calling <xref:System.Windows.FrameworkContentElement.RegisterName%2A> is necessary in order to correctly hook up animation storyboards for applications when created in code. This is because one of the key storyboard properties, <xref:System.Windows.Media.Animation.Storyboard.TargetName%2A>, uses a run-time name lookup instead of being able to take a reference to a target element. This is true even if that element is accessible by reference from the code. For more information on why you need to register names for storyboard targets, see [Storyboards Overview](~/docs/framework/wpf/graphics-multimedia/storyboards-overview.md). Animations for content elements are less common than animations on controls, the [Storyboards Overview](~/docs/framework/wpf/graphics-multimedia/storyboards-overview.md) concentrates on control scenarios.","nodes":[{"pos":[0,445],"content":"This method is a convenience method for calling <xref:System.Windows.NameScope.RegisterName%2A>. The implementation will check successive parent elements until it finds the applicable <xref:System.Windows.NameScope> implementation, which is found by finding an element that implements <xref:System.Windows.Markup.INameScope>. For more information about namescopes, see [WPF XAML Namescopes](~/docs/framework/wpf/advanced/wpf-xaml-namescopes.md).","nodes":[{"content":"This method is a convenience method for calling <ph id=\"ph1\">&lt;xref:System.Windows.NameScope.RegisterName%2A&gt;</ph>.","pos":[0,96],"source":"This method is a convenience method for calling <xref:System.Windows.NameScope.RegisterName%2A>."},{"content":"The implementation will check successive parent elements until it finds the applicable <ph id=\"ph1\">&lt;xref:System.Windows.NameScope&gt;</ph> implementation, which is found by finding an element that implements <ph id=\"ph2\">&lt;xref:System.Windows.Markup.INameScope&gt;</ph>.","pos":[97,325],"source":" The implementation will check successive parent elements until it finds the applicable <xref:System.Windows.NameScope> implementation, which is found by finding an element that implements <xref:System.Windows.Markup.INameScope>."},{"content":"For more information about namescopes, see <bpt id=\"p1\">[</bpt>WPF XAML Namescopes<ept id=\"p1\">](~/docs/framework/wpf/advanced/wpf-xaml-namescopes.md)</ept>.","pos":[326,445],"source":" For more information about namescopes, see [WPF XAML Namescopes](~/docs/framework/wpf/advanced/wpf-xaml-namescopes.md)."}]},{"pos":[452,1288],"content":"Calling <xref:System.Windows.FrameworkContentElement.RegisterName%2A> is necessary in order to correctly hook up animation storyboards for applications when created in code. This is because one of the key storyboard properties, <xref:System.Windows.Media.Animation.Storyboard.TargetName%2A>, uses a run-time name lookup instead of being able to take a reference to a target element. This is true even if that element is accessible by reference from the code. For more information on why you need to register names for storyboard targets, see [Storyboards Overview](~/docs/framework/wpf/graphics-multimedia/storyboards-overview.md). Animations for content elements are less common than animations on controls, the [Storyboards Overview](~/docs/framework/wpf/graphics-multimedia/storyboards-overview.md) concentrates on control scenarios.","nodes":[{"content":"Calling <ph id=\"ph1\">&lt;xref:System.Windows.FrameworkContentElement.RegisterName%2A&gt;</ph> is necessary in order to correctly hook up animation storyboards for applications when created in code.","pos":[0,173],"source":"Calling <xref:System.Windows.FrameworkContentElement.RegisterName%2A> is necessary in order to correctly hook up animation storyboards for applications when created in code."},{"content":"This is because one of the key storyboard properties, <ph id=\"ph1\">&lt;xref:System.Windows.Media.Animation.Storyboard.TargetName%2A&gt;</ph>, uses a run-time name lookup instead of being able to take a reference to a target element.","pos":[174,382],"source":" This is because one of the key storyboard properties, <xref:System.Windows.Media.Animation.Storyboard.TargetName%2A>, uses a run-time name lookup instead of being able to take a reference to a target element."},{"content":"This is true even if that element is accessible by reference from the code.","pos":[383,458]},{"content":"For more information on why you need to register names for storyboard targets, see <bpt id=\"p1\">[</bpt>Storyboards Overview<ept id=\"p1\">](~/docs/framework/wpf/graphics-multimedia/storyboards-overview.md)</ept>.","pos":[459,631],"source":" For more information on why you need to register names for storyboard targets, see [Storyboards Overview](~/docs/framework/wpf/graphics-multimedia/storyboards-overview.md)."},{"content":"Animations for content elements are less common than animations on controls, the <bpt id=\"p1\">[</bpt>Storyboards Overview<ept id=\"p1\">](~/docs/framework/wpf/graphics-multimedia/storyboards-overview.md)</ept> concentrates on control scenarios.","pos":[632,836],"source":" Animations for content elements are less common than animations on controls, the [Storyboards Overview](~/docs/framework/wpf/graphics-multimedia/storyboards-overview.md) concentrates on control scenarios."}]}],"pos":[165617,166910],"yaml":true,"extradata":"MT"},{"content":"Name to use for the specified name-object mapping.","nodes":[{"pos":[0,50],"content":"Name to use for the specified name-object mapping.","nodes":[{"content":"Name to use for the specified name-object mapping.","pos":[0,50]}]}],"pos":[167071,167122],"yaml":true},{"content":"Object for the mapping.","nodes":[{"pos":[0,23],"content":"Object for the mapping.","nodes":[{"content":"Object for the mapping.","pos":[0,23]}]}],"pos":[167191,167215],"yaml":true},{"content":"Removes the specified element from the logical tree for this element.","nodes":[{"pos":[0,69],"content":"Removes the specified element from the logical tree for this element.","nodes":[{"content":"Removes the specified element from the logical tree for this element.","pos":[0,69]}]}],"pos":[168366,168436],"yaml":true},{"content":"This [!INCLUDE[TLA#tla_api](~/includes/tlasharptla-api-md.md)] is mainly relevant for class deriving scenarios, when adding support for child collections.  \n  \n Most <xref:System.Windows.FrameworkContentElement> derived classes expose dedicated collections that are responsible for containment (for example, <xref:System.Windows.Documents.Span.Inlines%2A> on the <xref:System.Windows.Documents.Span> class; <xref:System.Windows.Documents.Section.Blocks%2A> on the <xref:System.Windows.Documents.Section> class). Deriving from such classes typically can avoid any need to manipulate the logical tree directly.","nodes":[{"pos":[0,154],"content":"This <ph id=\"ph1\">[!INCLUDE[TLA#tla_api](~/includes/tlasharptla-api-md.md)]</ph> is mainly relevant for class deriving scenarios, when adding support for child collections.","source":"This [!INCLUDE[TLA#tla_api](~/includes/tlasharptla-api-md.md)] is mainly relevant for class deriving scenarios, when adding support for child collections."},{"pos":[161,608],"content":"Most <xref:System.Windows.FrameworkContentElement> derived classes expose dedicated collections that are responsible for containment (for example, <xref:System.Windows.Documents.Span.Inlines%2A> on the <xref:System.Windows.Documents.Span> class; <xref:System.Windows.Documents.Section.Blocks%2A> on the <xref:System.Windows.Documents.Section> class). Deriving from such classes typically can avoid any need to manipulate the logical tree directly.","nodes":[{"content":"Most <xref:System.Windows.FrameworkContentElement> derived classes expose dedicated collections that are responsible for containment (for example, <xref:System.Windows.Documents.Span.Inlines%2A> on the <xref:System.Windows.Documents.Span> class; <xref:System.Windows.Documents.Section.Blocks%2A> on the <xref:System.Windows.Documents.Section> class). Deriving from such classes typically can avoid any need to manipulate the logical tree directly.","pos":[0,447],"nodes":[{"content":"Most <ph id=\"ph1\">&lt;xref:System.Windows.FrameworkContentElement&gt;</ph> derived classes expose dedicated collections that are responsible for containment (for example, <ph id=\"ph2\">&lt;xref:System.Windows.Documents.Span.Inlines%2A&gt;</ph> on the <ph id=\"ph3\">&lt;xref:System.Windows.Documents.Span&gt;</ph> class; <ph id=\"ph4\">&lt;xref:System.Windows.Documents.Section.Blocks%2A&gt;</ph> on the <ph id=\"ph5\">&lt;xref:System.Windows.Documents.Section&gt;</ph> class).","pos":[0,350],"source":"Most <xref:System.Windows.FrameworkContentElement> derived classes expose dedicated collections that are responsible for containment (for example, <xref:System.Windows.Documents.Span.Inlines%2A> on the <xref:System.Windows.Documents.Span> class; <xref:System.Windows.Documents.Section.Blocks%2A> on the <xref:System.Windows.Documents.Section> class)."},{"content":"Deriving from such classes typically can avoid any need to manipulate the logical tree directly.","pos":[351,447]}]}]}],"pos":[168447,169060],"yaml":true,"extradata":"MT"},{"content":"The element to remove.","nodes":[{"pos":[0,22],"content":"The element to remove.","nodes":[{"content":"The element to remove.","pos":[0,22]}]}],"pos":[169210,169233],"yaml":true},{"content":"Gets or sets the current locally-defined resource dictionary.","nodes":[{"pos":[0,61],"content":"Gets or sets the current locally-defined resource dictionary.","nodes":[{"content":"Gets or sets the current locally-defined resource dictionary.","pos":[0,61]}]}],"pos":[170269,170331],"yaml":true},{"content":"Resource dictionaries that can be defined completely or partially in [!INCLUDE[TLA#tla_xaml](~/includes/tlasharptla-xaml-md.md)] are typically created as a property element, and are typically on the root element for any individual page or for the application. Placing the resource dictionary at this level makes it easier to find from individual child elements in the page (or from any page, in the application case). In most application scenarios, we recommend that styles be defined as object elements within a resource dictionary, or be defined as external resources so that the entire style resource can be self-contained (this approach helps separate designer responsibilities from developer responsibilities by separating the physical files that need to be edited).  \n  \n Note that this property returns only the resource dictionary declared directly within that element. This is different than the actual resource lookup process, where a child element can access any of the resources defined in each parent element, searching recursively upwards.  \n  \n Resources can also be referenced by code from within the collection, but be aware that resources created in [!INCLUDE[TLA2#tla_xaml](~/includes/tla2sharptla-xaml-md.md)] will definitely not be accessible until after <xref:System.Windows.FrameworkContentElement.Loaded> is raised by the element that declares the dictionary. In fact, resources are parsed asynchronously, and not even the <xref:System.Windows.FrameworkContentElement.Loaded> event is an assurance that you can reference a [!INCLUDE[TLA2#tla_xaml](~/includes/tla2sharptla-xaml-md.md)] defined resource. For this reason you should generally only access [!INCLUDE[TLA2#tla_xaml](~/includes/tla2sharptla-xaml-md.md)] defined resources as part of run-time code, or through other [!INCLUDE[TLA2#tla_xaml](~/includes/tla2sharptla-xaml-md.md)] techniques such as styles or resource extension references for attribute values. When you access resources through code, it is essentially equivalent to a  reference made from [!INCLUDE[TLA2#tla_xaml](~/includes/tla2sharptla-xaml-md.md)].  \n  \n The underlying <xref:System.Windows.ResourceDictionary> supports the methods required to add, remove, or query resources from within the collection by using code. The <xref:System.Windows.FrameworkContentElement.Resources%2A> property is settable to support the scenario of completely replacing the resources collection of an element to be a new or different <xref:System.Windows.ResourceDictionary>.  \n  \n Notice that the [!INCLUDE[TLA2#tla_xaml](~/includes/tla2sharptla-xaml-md.md)] syntax shown does not include an element for the <xref:System.Windows.ResourceDictionary>. This is an example of implicit collection syntax; a tag representing the collection element can be omitted. The elements that are added as items to the collection are specified instead. For more information about implicit collections and [!INCLUDE[TLA2#tla_xaml](~/includes/tla2sharptla-xaml-md.md)], see [XAML Syntax In Detail](~/docs/framework/wpf/advanced/xaml-syntax-in-detail.md). One case where a <xref:System.Windows.ResourceDictionary> is still specified explicitly as an element is if you are introducing a merged dictionary, in which case there are typically no child elements for that <xref:System.Windows.ResourceDictionary>. For details, see [Merged Resource Dictionaries](~/docs/framework/wpf/advanced/merged-resource-dictionaries.md).  \n  \n<a name=\"xamlPropertyElementUsage_Resources\"></a>   \n## XAML Property Element Usage  \n  \n```  \n<object>  \n  <object.Resources>  \n    oneOrMoreResourceElements  \n  </object.Resources>  \n</object>  \n```  \n  \n<a name=\"xamlValues_Resources\"></a>   \n## XAML Values  \n *oneOrMoreResourceElements*  \n One or more object elements, each of which defines a resource. Each resource property element within each <xref:System.Windows.ResourceDictionary> must have a unique value for the [x:Key Directive](~/docs/framework/xaml-services/x-key-directive.md), which serves as the unique key when values are retrieved from the <xref:System.Windows.ResourceDictionary>.","nodes":[{"pos":[0,771],"content":"Resource dictionaries that can be defined completely or partially in [!INCLUDE[TLA#tla_xaml](~/includes/tlasharptla-xaml-md.md)] are typically created as a property element, and are typically on the root element for any individual page or for the application. Placing the resource dictionary at this level makes it easier to find from individual child elements in the page (or from any page, in the application case). In most application scenarios, we recommend that styles be defined as object elements within a resource dictionary, or be defined as external resources so that the entire style resource can be self-contained (this approach helps separate designer responsibilities from developer responsibilities by separating the physical files that need to be edited).","nodes":[{"content":"Resource dictionaries that can be defined completely or partially in <ph id=\"ph1\">[!INCLUDE[TLA#tla_xaml](~/includes/tlasharptla-xaml-md.md)]</ph> are typically created as a property element, and are typically on the root element for any individual page or for the application.","pos":[0,259],"source":"Resource dictionaries that can be defined completely or partially in [!INCLUDE[TLA#tla_xaml](~/includes/tlasharptla-xaml-md.md)] are typically created as a property element, and are typically on the root element for any individual page or for the application."},{"content":"Placing the resource dictionary at this level makes it easier to find from individual child elements in the page (or from any page, in the application case).","pos":[260,417]},{"content":"In most application scenarios, we recommend that styles be defined as object elements within a resource dictionary, or be defined as external resources so that the entire style resource can be self-contained (this approach helps separate designer responsibilities from developer responsibilities by separating the physical files that need to be edited).","pos":[418,771]}]},{"pos":[778,1053],"content":"Note that this property returns only the resource dictionary declared directly within that element. This is different than the actual resource lookup process, where a child element can access any of the resources defined in each parent element, searching recursively upwards.","nodes":[{"content":"Note that this property returns only the resource dictionary declared directly within that element. This is different than the actual resource lookup process, where a child element can access any of the resources defined in each parent element, searching recursively upwards.","pos":[0,275],"nodes":[{"content":"Note that this property returns only the resource dictionary declared directly within that element.","pos":[0,99]},{"content":"This is different than the actual resource lookup process, where a child element can access any of the resources defined in each parent element, searching recursively upwards.","pos":[100,275]}]}]},{"pos":[1060,2099],"content":"Resources can also be referenced by code from within the collection, but be aware that resources created in [!INCLUDE[TLA2#tla_xaml](~/includes/tla2sharptla-xaml-md.md)] will definitely not be accessible until after <xref:System.Windows.FrameworkContentElement.Loaded> is raised by the element that declares the dictionary. In fact, resources are parsed asynchronously, and not even the <xref:System.Windows.FrameworkContentElement.Loaded> event is an assurance that you can reference a [!INCLUDE[TLA2#tla_xaml](~/includes/tla2sharptla-xaml-md.md)] defined resource. For this reason you should generally only access [!INCLUDE[TLA2#tla_xaml](~/includes/tla2sharptla-xaml-md.md)] defined resources as part of run-time code, or through other [!INCLUDE[TLA2#tla_xaml](~/includes/tla2sharptla-xaml-md.md)] techniques such as styles or resource extension references for attribute values. When you access resources through code, it is essentially equivalent to a  reference made from [!INCLUDE[TLA2#tla_xaml](~/includes/tla2sharptla-xaml-md.md)].","nodes":[{"content":"Resources can also be referenced by code from within the collection, but be aware that resources created in <ph id=\"ph1\">[!INCLUDE[TLA2#tla_xaml](~/includes/tla2sharptla-xaml-md.md)]</ph> will definitely not be accessible until after <ph id=\"ph2\">&lt;xref:System.Windows.FrameworkContentElement.Loaded&gt;</ph> is raised by the element that declares the dictionary.","pos":[0,323],"source":"Resources can also be referenced by code from within the collection, but be aware that resources created in [!INCLUDE[TLA2#tla_xaml](~/includes/tla2sharptla-xaml-md.md)] will definitely not be accessible until after <xref:System.Windows.FrameworkContentElement.Loaded> is raised by the element that declares the dictionary."},{"content":"In fact, resources are parsed asynchronously, and not even the <ph id=\"ph1\">&lt;xref:System.Windows.FrameworkContentElement.Loaded&gt;</ph> event is an assurance that you can reference a <ph id=\"ph2\">[!INCLUDE[TLA2#tla_xaml](~/includes/tla2sharptla-xaml-md.md)]</ph> defined resource.","pos":[324,566],"source":" In fact, resources are parsed asynchronously, and not even the <xref:System.Windows.FrameworkContentElement.Loaded> event is an assurance that you can reference a [!INCLUDE[TLA2#tla_xaml](~/includes/tla2sharptla-xaml-md.md)] defined resource."},{"content":"For this reason you should generally only access <ph id=\"ph1\">[!INCLUDE[TLA2#tla_xaml](~/includes/tla2sharptla-xaml-md.md)]</ph> defined resources as part of run-time code, or through other <ph id=\"ph2\">[!INCLUDE[TLA2#tla_xaml](~/includes/tla2sharptla-xaml-md.md)]</ph> techniques such as styles or resource extension references for attribute values.","pos":[567,881],"source":" For this reason you should generally only access [!INCLUDE[TLA2#tla_xaml](~/includes/tla2sharptla-xaml-md.md)] defined resources as part of run-time code, or through other [!INCLUDE[TLA2#tla_xaml](~/includes/tla2sharptla-xaml-md.md)] techniques such as styles or resource extension references for attribute values."},{"content":"When you access resources through code, it is essentially equivalent to a  reference made from <ph id=\"ph1\">[!INCLUDE[TLA2#tla_xaml](~/includes/tla2sharptla-xaml-md.md)]</ph>.","pos":[882,1039],"source":" When you access resources through code, it is essentially equivalent to a  reference made from [!INCLUDE[TLA2#tla_xaml](~/includes/tla2sharptla-xaml-md.md)]."}]},{"pos":[2106,2506],"content":"The underlying <xref:System.Windows.ResourceDictionary> supports the methods required to add, remove, or query resources from within the collection by using code. The <xref:System.Windows.FrameworkContentElement.Resources%2A> property is settable to support the scenario of completely replacing the resources collection of an element to be a new or different <xref:System.Windows.ResourceDictionary>.","nodes":[{"content":"The underlying <xref:System.Windows.ResourceDictionary> supports the methods required to add, remove, or query resources from within the collection by using code. The <xref:System.Windows.FrameworkContentElement.Resources%2A> property is settable to support the scenario of completely replacing the resources collection of an element to be a new or different <xref:System.Windows.ResourceDictionary>.","pos":[0,400],"nodes":[{"content":"The underlying <ph id=\"ph1\">&lt;xref:System.Windows.ResourceDictionary&gt;</ph> supports the methods required to add, remove, or query resources from within the collection by using code.","pos":[0,162],"source":"The underlying <xref:System.Windows.ResourceDictionary> supports the methods required to add, remove, or query resources from within the collection by using code."},{"content":"The <ph id=\"ph1\">&lt;xref:System.Windows.FrameworkContentElement.Resources%2A&gt;</ph> property is settable to support the scenario of completely replacing the resources collection of an element to be a new or different <ph id=\"ph2\">&lt;xref:System.Windows.ResourceDictionary&gt;</ph>.","pos":[163,400],"source":" The <xref:System.Windows.FrameworkContentElement.Resources%2A> property is settable to support the scenario of completely replacing the resources collection of an element to be a new or different <xref:System.Windows.ResourceDictionary>."}]}]},{"pos":[2513,3431],"content":"Notice that the [!INCLUDE[TLA2#tla_xaml](~/includes/tla2sharptla-xaml-md.md)] syntax shown does not include an element for the <xref:System.Windows.ResourceDictionary>. This is an example of implicit collection syntax; a tag representing the collection element can be omitted. The elements that are added as items to the collection are specified instead. For more information about implicit collections and [!INCLUDE[TLA2#tla_xaml](~/includes/tla2sharptla-xaml-md.md)], see [XAML Syntax In Detail](~/docs/framework/wpf/advanced/xaml-syntax-in-detail.md). One case where a <xref:System.Windows.ResourceDictionary> is still specified explicitly as an element is if you are introducing a merged dictionary, in which case there are typically no child elements for that <xref:System.Windows.ResourceDictionary>. For details, see [Merged Resource Dictionaries](~/docs/framework/wpf/advanced/merged-resource-dictionaries.md).","nodes":[{"content":"Notice that the <ph id=\"ph1\">[!INCLUDE[TLA2#tla_xaml](~/includes/tla2sharptla-xaml-md.md)]</ph> syntax shown does not include an element for the <ph id=\"ph2\">&lt;xref:System.Windows.ResourceDictionary&gt;</ph>.","pos":[0,168],"source":"Notice that the [!INCLUDE[TLA2#tla_xaml](~/includes/tla2sharptla-xaml-md.md)] syntax shown does not include an element for the <xref:System.Windows.ResourceDictionary>."},{"content":"This is an example of implicit collection syntax; a tag representing the collection element can be omitted.","pos":[169,276]},{"content":"The elements that are added as items to the collection are specified instead.","pos":[277,354]},{"content":"For more information about implicit collections and <ph id=\"ph1\">[!INCLUDE[TLA2#tla_xaml](~/includes/tla2sharptla-xaml-md.md)]</ph>, see <bpt id=\"p1\">[</bpt>XAML Syntax In Detail<ept id=\"p1\">](~/docs/framework/wpf/advanced/xaml-syntax-in-detail.md)</ept>.","pos":[355,554],"source":" For more information about implicit collections and [!INCLUDE[TLA2#tla_xaml](~/includes/tla2sharptla-xaml-md.md)], see [XAML Syntax In Detail](~/docs/framework/wpf/advanced/xaml-syntax-in-detail.md)."},{"content":"One case where a <ph id=\"ph1\">&lt;xref:System.Windows.ResourceDictionary&gt;</ph> is still specified explicitly as an element is if you are introducing a merged dictionary, in which case there are typically no child elements for that <ph id=\"ph2\">&lt;xref:System.Windows.ResourceDictionary&gt;</ph>.","pos":[555,806],"source":" One case where a <xref:System.Windows.ResourceDictionary> is still specified explicitly as an element is if you are introducing a merged dictionary, in which case there are typically no child elements for that <xref:System.Windows.ResourceDictionary>."},{"content":"For details, see <bpt id=\"p1\">[</bpt>Merged Resource Dictionaries<ept id=\"p1\">](~/docs/framework/wpf/advanced/merged-resource-dictionaries.md)</ept>.","pos":[807,918],"source":" For details, see [Merged Resource Dictionaries](~/docs/framework/wpf/advanced/merged-resource-dictionaries.md)."}]},{"pos":[3493,3520],"content":"XAML Property Element Usage","linkify":"XAML Property Element Usage","nodes":[{"content":"XAML Property Element Usage","pos":[0,27]}]},{"pos":[3685,3696],"content":"XAML Values","linkify":"XAML Values","nodes":[{"content":"XAML Values","pos":[0,11]}]},{"pos":[3700,4088],"content":"*oneOrMoreResourceElements*  \n One or more object elements, each of which defines a resource. Each resource property element within each <xref:System.Windows.ResourceDictionary> must have a unique value for the [x:Key Directive](~/docs/framework/xaml-services/x-key-directive.md), which serves as the unique key when values are retrieved from the <xref:System.Windows.ResourceDictionary>.","nodes":[{"content":"<bpt id=\"p1\">*</bpt>oneOrMoreResourceElements<ept id=\"p1\">*</ept>","pos":[0,27],"source":"*oneOrMoreResourceElements*"},{"content":" One or more object elements, each of which defines a resource. Each resource property element within each <xref:System.Windows.ResourceDictionary> must have a unique value for the [x:Key Directive](~/docs/framework/xaml-services/x-key-directive.md), which serves as the unique key when values are retrieved from the <xref:System.Windows.ResourceDictionary>.","pos":[30,388],"nodes":[{"content":"One or more object elements, each of which defines a resource.","pos":[1,63]},{"content":"Each resource property element within each <ph id=\"ph1\">&lt;xref:System.Windows.ResourceDictionary&gt;</ph> must have a unique value for the <bpt id=\"p1\">[</bpt>x:Key Directive<ept id=\"p1\">](~/docs/framework/xaml-services/x-key-directive.md)</ept>, which serves as the unique key when values are retrieved from the <ph id=\"ph2\">&lt;xref:System.Windows.ResourceDictionary&gt;</ph>.","pos":[64,358],"source":" Each resource property element within each <xref:System.Windows.ResourceDictionary> must have a unique value for the [x:Key Directive](~/docs/framework/xaml-services/x-key-directive.md), which serves as the unique key when values are retrieved from the <xref:System.Windows.ResourceDictionary>."}]}]}],"pos":[170342,174461],"yaml":true,"extradata":"MT"},{"content":"The current locally-defined resources. This is a dictionary of resources, where resources within the dictionary are accessed by key.","nodes":[{"pos":[0,132],"content":"The current locally-defined resources. This is a dictionary of resources, where resources within the dictionary are accessed by key.","nodes":[{"content":"The current locally-defined resources. This is a dictionary of resources, where resources within the dictionary are accessed by key.","pos":[0,132],"nodes":[{"content":"The current locally-defined resources.","pos":[0,38]},{"content":"This is a dictionary of resources, where resources within the dictionary are accessed by key.","pos":[39,132]}]}]}],"pos":[175311,175444],"yaml":true},{"content":"Attaches a binding to this element, based on the provided source property name as a path qualification to the data source.","nodes":[{"pos":[0,122],"content":"Attaches a binding to this element, based on the provided source property name as a path qualification to the data source.","nodes":[{"content":"Attaches a binding to this element, based on the provided source property name as a path qualification to the data source.","pos":[0,122]}]}],"pos":[176769,176892],"yaml":true},{"content":"This method is a convenience method for calling <xref:System.Windows.Data.BindingOperations.SetBinding%2A?displayProperty=fullName>, which passes the current instance as the <xref:System.Windows.DependencyObject>, and creates a new <xref:System.Windows.Data.Binding> based on the provided `path` parameter. This signature is more convenient if you are establishing a simple default binding. If you need to specify any binding properties to non-default conditions, or want to use a <xref:System.Windows.Data.MultiBinding> or <xref:System.Windows.Data.PriorityBinding>,you should use the <xref:System.Windows.FrameworkContentElement.SetBinding%28System.Windows.DependencyProperty%2CSystem.Windows.Data.BindingBase%29> signature.","nodes":[{"pos":[0,726],"content":"This method is a convenience method for calling <xref:System.Windows.Data.BindingOperations.SetBinding%2A?displayProperty=fullName>, which passes the current instance as the <xref:System.Windows.DependencyObject>, and creates a new <xref:System.Windows.Data.Binding> based on the provided `path` parameter. This signature is more convenient if you are establishing a simple default binding. If you need to specify any binding properties to non-default conditions, or want to use a <xref:System.Windows.Data.MultiBinding> or <xref:System.Windows.Data.PriorityBinding>,you should use the <xref:System.Windows.FrameworkContentElement.SetBinding%28System.Windows.DependencyProperty%2CSystem.Windows.Data.BindingBase%29> signature.","nodes":[{"content":"This method is a convenience method for calling <ph id=\"ph1\">&lt;xref:System.Windows.Data.BindingOperations.SetBinding%2A?displayProperty=fullName&gt;</ph>, which passes the current instance as the <ph id=\"ph2\">&lt;xref:System.Windows.DependencyObject&gt;</ph>, and creates a new <ph id=\"ph3\">&lt;xref:System.Windows.Data.Binding&gt;</ph> based on the provided <ph id=\"ph4\">`path`</ph> parameter.","pos":[0,306],"source":"This method is a convenience method for calling <xref:System.Windows.Data.BindingOperations.SetBinding%2A?displayProperty=fullName>, which passes the current instance as the <xref:System.Windows.DependencyObject>, and creates a new <xref:System.Windows.Data.Binding> based on the provided `path` parameter."},{"content":"This signature is more convenient if you are establishing a simple default binding.","pos":[307,390]},{"content":"If you need to specify any binding properties to non-default conditions, or want to use a <ph id=\"ph1\">&lt;xref:System.Windows.Data.MultiBinding&gt;</ph> or <ph id=\"ph2\">&lt;xref:System.Windows.Data.PriorityBinding&gt;</ph>,you should use the <ph id=\"ph3\">&lt;xref:System.Windows.FrameworkContentElement.SetBinding%28System.Windows.DependencyProperty%2CSystem.Windows.Data.BindingBase%29&gt;</ph> signature.","pos":[391,726],"source":" If you need to specify any binding properties to non-default conditions, or want to use a <xref:System.Windows.Data.MultiBinding> or <xref:System.Windows.Data.PriorityBinding>,you should use the <xref:System.Windows.FrameworkContentElement.SetBinding%28System.Windows.DependencyProperty%2CSystem.Windows.Data.BindingBase%29> signature."}]}],"pos":[176903,177630],"yaml":true,"extradata":"MT"},{"content":"Identifies the bound property.","nodes":[{"pos":[0,30],"content":"Identifies the bound property.","nodes":[{"content":"Identifies the bound property.","pos":[0,30]}]}],"pos":[178480,178511],"yaml":true},{"content":"The source property name or the path to the property used for the binding.","nodes":[{"pos":[0,74],"content":"The source property name or the path to the property used for the binding.","nodes":[{"content":"The source property name or the path to the property used for the binding.","pos":[0,74]}]}],"pos":[178571,178646],"yaml":true},{"content":"Records the conditions of the binding. This return value can be useful for error checking.","nodes":[{"pos":[0,90],"content":"Records the conditions of the binding. This return value can be useful for error checking.","nodes":[{"content":"Records the conditions of the binding. This return value can be useful for error checking.","pos":[0,90],"nodes":[{"content":"Records the conditions of the binding.","pos":[0,38]},{"content":"This return value can be useful for error checking.","pos":[39,90]}]}]}],"pos":[178727,178818],"yaml":true},{"content":"Attaches a binding to this element, based on the provided binding object.","nodes":[{"pos":[0,73],"content":"Attaches a binding to this element, based on the provided binding object.","nodes":[{"content":"Attaches a binding to this element, based on the provided binding object.","pos":[0,73]}]}],"pos":[180150,180224],"yaml":true},{"content":"This method is a convenience method for calling <xref:System.Windows.Data.BindingOperations.SetBinding%2A?displayProperty=fullName>, which passes the current instance as the <xref:System.Windows.DependencyObject>.","nodes":[{"pos":[0,213],"content":"This method is a convenience method for calling <xref:System.Windows.Data.BindingOperations.SetBinding%2A?displayProperty=fullName>, which passes the current instance as the <xref:System.Windows.DependencyObject>.","nodes":[{"content":"This method is a convenience method for calling <ph id=\"ph1\">&lt;xref:System.Windows.Data.BindingOperations.SetBinding%2A?displayProperty=fullName&gt;</ph>, which passes the current instance as the <ph id=\"ph2\">&lt;xref:System.Windows.DependencyObject&gt;</ph>.","pos":[0,213],"source":"This method is a convenience method for calling <xref:System.Windows.Data.BindingOperations.SetBinding%2A?displayProperty=fullName>, which passes the current instance as the <xref:System.Windows.DependencyObject>."}]}],"pos":[180235,180449],"yaml":true,"extradata":"MT"},{"content":"Identifies the bound property.","nodes":[{"pos":[0,30],"content":"Identifies the bound property.","nodes":[{"content":"Identifies the bound property.","pos":[0,30]}]}],"pos":[181257,181288],"yaml":true},{"content":"Represents a data binding.","nodes":[{"pos":[0,26],"content":"Represents a data binding.","nodes":[{"content":"Represents a data binding.","pos":[0,26]}]}],"pos":[181369,181396],"yaml":true},{"content":"Records the conditions of the binding. This return value can be useful for error checking.","nodes":[{"pos":[0,90],"content":"Records the conditions of the binding. This return value can be useful for error checking.","nodes":[{"content":"Records the conditions of the binding. This return value can be useful for error checking.","pos":[0,90],"nodes":[{"content":"Records the conditions of the binding.","pos":[0,38]},{"content":"This return value can be useful for error checking.","pos":[39,90]}]}]}],"pos":[181481,181572],"yaml":true},{"content":"Searches for a resource with the specified name and sets up a resource reference to it for the specified property.","nodes":[{"pos":[0,114],"content":"Searches for a resource with the specified name and sets up a resource reference to it for the specified property.","nodes":[{"content":"Searches for a resource with the specified name and sets up a resource reference to it for the specified property.","pos":[0,114]}]}],"pos":[182895,183010],"yaml":true},{"content":"A resource reference is similar to the use of a [DynamicResource Markup Extension](~/docs/framework/wpf/advanced/dynamicresource-markup-extension.md) in markup. The resource reference creates an internal expression that supplies the value of the specified property on a run-time deferred basis. The expression will be re-evaluated whenever the resource dictionary indicates a changed value through internal events, or whenever the current element is reparented (a parent change would change the dictionary lookup path).","nodes":[{"pos":[0,519],"content":"A resource reference is similar to the use of a [DynamicResource Markup Extension](~/docs/framework/wpf/advanced/dynamicresource-markup-extension.md) in markup. The resource reference creates an internal expression that supplies the value of the specified property on a run-time deferred basis. The expression will be re-evaluated whenever the resource dictionary indicates a changed value through internal events, or whenever the current element is reparented (a parent change would change the dictionary lookup path).","nodes":[{"content":"A resource reference is similar to the use of a <bpt id=\"p1\">[</bpt>DynamicResource Markup Extension<ept id=\"p1\">](~/docs/framework/wpf/advanced/dynamicresource-markup-extension.md)</ept> in markup.","pos":[0,160],"source":"A resource reference is similar to the use of a [DynamicResource Markup Extension](~/docs/framework/wpf/advanced/dynamicresource-markup-extension.md) in markup."},{"content":"The resource reference creates an internal expression that supplies the value of the specified property on a run-time deferred basis.","pos":[161,294]},{"content":"The expression will be re-evaluated whenever the resource dictionary indicates a changed value through internal events, or whenever the current element is reparented (a parent change would change the dictionary lookup path).","pos":[295,519]}]}],"pos":[183021,183541],"yaml":true,"extradata":"MT"},{"content":"The property to which the resource is bound.","nodes":[{"pos":[0,44],"content":"The property to which the resource is bound.","nodes":[{"content":"The property to which the resource is bound.","pos":[0,44]}]}],"pos":[183744,183789],"yaml":true},{"content":"The name of the resource.","nodes":[{"pos":[0,25],"content":"The name of the resource.","nodes":[{"content":"The name of the resource.","pos":[0,25]}]}],"pos":[183849,183875],"yaml":true},{"content":"Returns whether serialization processes should serialize the contents of the <xref href=\"System.Windows.FrameworkContentElement.Resources\"></xref> property on instances of this class.","nodes":[{"pos":[0,183],"content":"Returns whether serialization processes should serialize the contents of the <ph id=\"ph1\">&lt;xref href=\"System.Windows.FrameworkContentElement.Resources\"&gt;&lt;/xref&gt;</ph> property on instances of this class.","source":"Returns whether serialization processes should serialize the contents of the <xref href=\"System.Windows.FrameworkContentElement.Resources\"></xref> property on instances of this class."}],"pos":[185007,185191],"yaml":true},{"content":"This will return `true` so long as there is at least one keyed resource in the local <xref:System.Windows.FrameworkContentElement.Resources%2A>.","nodes":[{"pos":[0,144],"content":"This will return <ph id=\"ph1\">`true`</ph> so long as there is at least one keyed resource in the local <ph id=\"ph2\">&lt;xref:System.Windows.FrameworkContentElement.Resources%2A&gt;</ph>.","source":"This will return `true` so long as there is at least one keyed resource in the local <xref:System.Windows.FrameworkContentElement.Resources%2A>."}],"pos":[185202,185347],"yaml":true,"extradata":"MT"},{"content":"`true` if the <xref href=\"System.Windows.FrameworkContentElement.Resources\"></xref> property value should be serialized; otherwise, `false`.","nodes":[{"pos":[0,140],"content":"<ph id=\"ph1\">`true`</ph> if the <ph id=\"ph2\">&lt;xref href=\"System.Windows.FrameworkContentElement.Resources\"&gt;&lt;/xref&gt;</ph> property value should be serialized; otherwise, <ph id=\"ph3\">`false`</ph>.","source":"`true` if the <xref href=\"System.Windows.FrameworkContentElement.Resources\"></xref> property value should be serialized; otherwise, `false`."}],"pos":[185488,185631],"yaml":true},{"content":"Returns whether serialization processes should serialize the contents of the <xref href=\"System.Windows.FrameworkContentElement.Style\"></xref> property on instances of this class.","nodes":[{"pos":[0,179],"content":"Returns whether serialization processes should serialize the contents of the <ph id=\"ph1\">&lt;xref href=\"System.Windows.FrameworkContentElement.Style\"&gt;&lt;/xref&gt;</ph> property on instances of this class.","source":"Returns whether serialization processes should serialize the contents of the <xref href=\"System.Windows.FrameworkContentElement.Style\"></xref> property on instances of this class."}],"pos":[186760,186940],"yaml":true},{"content":"This will return `true` if the <xref:System.Windows.Style> is locally set.","nodes":[{"pos":[0,74],"content":"This will return <ph id=\"ph1\">`true`</ph> if the <ph id=\"ph2\">&lt;xref:System.Windows.Style&gt;</ph> is locally set.","source":"This will return `true` if the <xref:System.Windows.Style> is locally set."}],"pos":[186951,187026],"yaml":true,"extradata":"MT"},{"content":"`true` if the <xref href=\"System.Windows.FrameworkContentElement.Style\"></xref> property value should be serialized; otherwise, `false`.","nodes":[{"pos":[0,136],"content":"<ph id=\"ph1\">`true`</ph> if the <ph id=\"ph2\">&lt;xref href=\"System.Windows.FrameworkContentElement.Style\"&gt;&lt;/xref&gt;</ph> property value should be serialized; otherwise, <ph id=\"ph3\">`false`</ph>.","source":"`true` if the <xref href=\"System.Windows.FrameworkContentElement.Style\"></xref> property value should be serialized; otherwise, `false`."}],"pos":[187163,187302],"yaml":true},{"content":"Occurs when any associated data source participating in a binding on this element changes.","nodes":[{"pos":[0,90],"content":"Occurs when any associated data source participating in a binding on this element changes.","nodes":[{"content":"Occurs when any associated data source participating in a binding on this element changes.","pos":[0,90]}]}],"pos":[188378,188469],"yaml":true},{"content":"This event surfaces the <xref:System.Windows.Data.Binding.SourceUpdated> event that is raised by any <xref:System.Windows.Data.Binding> associated with this element.  \n  \n<a name=\"xamlAttributeUsage_SourceUpdated\"></a>   \n## XAML Attribute Usage  \n  \n```  \n<object SourceUpdated=\"EventHandler\"/>  \n```","nodes":[{"pos":[0,165],"content":"This event surfaces the <xref:System.Windows.Data.Binding.SourceUpdated> event that is raised by any <xref:System.Windows.Data.Binding> associated with this element.","nodes":[{"content":"This event surfaces the <ph id=\"ph1\">&lt;xref:System.Windows.Data.Binding.SourceUpdated&gt;</ph> event that is raised by any <ph id=\"ph2\">&lt;xref:System.Windows.Data.Binding&gt;</ph> associated with this element.","pos":[0,165],"source":"This event surfaces the <xref:System.Windows.Data.Binding.SourceUpdated> event that is raised by any <xref:System.Windows.Data.Binding> associated with this element."}]},{"pos":[225,245],"content":"XAML Attribute Usage","linkify":"XAML Attribute Usage","nodes":[{"content":"XAML Attribute Usage","pos":[0,20]}]}],"pos":[188480,188795],"yaml":true,"extradata":"MT"},{"content":"Gets or sets the style to be used by this element.","nodes":[{"pos":[0,50],"content":"Gets or sets the style to be used by this element.","nodes":[{"content":"Gets or sets the style to be used by this element.","pos":[0,50]}]}],"pos":[189952,190003],"yaml":true},{"content":"The current style is often provided by a default style from theming, or from styles generally applied to objects of that type by resources at page or application level (an implicit style). This property does not set or return default (theme) styles, but it does return the implicit style or an explicit style. In the case of implicit or explicit styles, it does not matter whether the style is accessed as a resource or defined locally.  \n  \n Setting the styles has some restrictions. You can reset the entire <xref:System.Windows.FrameworkContentElement.Style%2A> property to a new <xref:System.Windows.Style> at any time, which will force a layout recomposition. However, as soon as that style is placed in use by a loaded element, the <xref:System.Windows.Style> should be considered sealed. Attempting to make a change to any individual property of an in-use style (such as anything within the collection of <xref:System.Windows.Style.Setters%2A>) causes an exception to be thrown. A style that is defined in markup is considered to be in use as soon as it is loaded from a resource dictionary (for resources), or the page it is contained within is loaded (for inline styles).  \n  \n <xref:System.Windows.FrameworkContentElement.Style%2A> is a dependency property with special precedence. The locally set style generally operates at the highest precedence in the property system. If the <xref:System.Windows.FrameworkContentElement.Style%2A> is null at this point, during loading the property system checks for implicit styles as defined resources that specify that type. If the style is still null after this step, then the style comes from the default (theme) style, but the default style is not returned in the <xref:System.Windows.FrameworkContentElement.Style%2A> property value. See [Dependency Property Value Precedence](~/docs/framework/wpf/advanced/dependency-property-value-precedence.md).  \n  \n<a name=\"xamlAttributeUsage_Style\"></a>   \n## XAML Attribute Usage  \n  \n```  \n<object Style=\"{resourceExtension StyleResourceKey}\"/>  \n```  \n  \n<a name=\"xamlValues_Style\"></a>   \n## XAML Values  \n *resourceExtension*  \n One of the following: , or . See [XAML Resources](~/docs/framework/wpf/advanced/xaml-resources.md).  \n  \n *styleResourceKey*  \n The key that identifies the style being requested. The key refers to an existing resource in a <xref:System.Windows.ResourceDictionary>.  \n  \n> [!NOTE]\n>  Property element syntax is technically possible, but not recommended. See [Inline Styles and Templates](~/docs/framework/wpf/advanced/inline-styles-and-templates.md).  A binding reference using  or <xref:System.Windows.Data.Binding> is also possible, but uncommon.  \n  \n<a name=\"dependencyPropertyInfo_Style\"></a>   \n## Dependency Property Information  \n  \n|||  \n|-|-|  \n|Identifier field|<xref:System.Windows.FrameworkContentElement.StyleProperty>|  \n|Metadata properties set to `true`|<xref:System.Windows.FrameworkPropertyMetadata.AffectsMeasure%2A>|","nodes":[{"pos":[0,436],"content":"The current style is often provided by a default style from theming, or from styles generally applied to objects of that type by resources at page or application level (an implicit style). This property does not set or return default (theme) styles, but it does return the implicit style or an explicit style. In the case of implicit or explicit styles, it does not matter whether the style is accessed as a resource or defined locally.","nodes":[{"content":"The current style is often provided by a default style from theming, or from styles generally applied to objects of that type by resources at page or application level (an implicit style). This property does not set or return default (theme) styles, but it does return the implicit style or an explicit style. In the case of implicit or explicit styles, it does not matter whether the style is accessed as a resource or defined locally.","pos":[0,436],"nodes":[{"content":"The current style is often provided by a default style from theming, or from styles generally applied to objects of that type by resources at page or application level (an implicit style).","pos":[0,188]},{"content":"This property does not set or return default (theme) styles, but it does return the implicit style or an explicit style.","pos":[189,309]},{"content":"In the case of implicit or explicit styles, it does not matter whether the style is accessed as a resource or defined locally.","pos":[310,436]}]}]},{"pos":[443,1180],"content":"Setting the styles has some restrictions. You can reset the entire <xref:System.Windows.FrameworkContentElement.Style%2A> property to a new <xref:System.Windows.Style> at any time, which will force a layout recomposition. However, as soon as that style is placed in use by a loaded element, the <xref:System.Windows.Style> should be considered sealed. Attempting to make a change to any individual property of an in-use style (such as anything within the collection of <xref:System.Windows.Style.Setters%2A>) causes an exception to be thrown. A style that is defined in markup is considered to be in use as soon as it is loaded from a resource dictionary (for resources), or the page it is contained within is loaded (for inline styles).","nodes":[{"content":"Setting the styles has some restrictions. You can reset the entire <xref:System.Windows.FrameworkContentElement.Style%2A> property to a new <xref:System.Windows.Style> at any time, which will force a layout recomposition. However, as soon as that style is placed in use by a loaded element, the <xref:System.Windows.Style> should be considered sealed. Attempting to make a change to any individual property of an in-use style (such as anything within the collection of <xref:System.Windows.Style.Setters%2A>) causes an exception to be thrown. A style that is defined in markup is considered to be in use as soon as it is loaded from a resource dictionary (for resources), or the page it is contained within is loaded (for inline styles).","pos":[0,737],"nodes":[{"content":"Setting the styles has some restrictions.","pos":[0,41]},{"content":"You can reset the entire <ph id=\"ph1\">&lt;xref:System.Windows.FrameworkContentElement.Style%2A&gt;</ph> property to a new <ph id=\"ph2\">&lt;xref:System.Windows.Style&gt;</ph> at any time, which will force a layout recomposition.","pos":[42,221],"source":" You can reset the entire <xref:System.Windows.FrameworkContentElement.Style%2A> property to a new <xref:System.Windows.Style> at any time, which will force a layout recomposition."},{"content":"However, as soon as that style is placed in use by a loaded element, the <ph id=\"ph1\">&lt;xref:System.Windows.Style&gt;</ph> should be considered sealed.","pos":[222,351],"source":" However, as soon as that style is placed in use by a loaded element, the <xref:System.Windows.Style> should be considered sealed."},{"content":"Attempting to make a change to any individual property of an in-use style (such as anything within the collection of <ph id=\"ph1\">&lt;xref:System.Windows.Style.Setters%2A&gt;</ph>) causes an exception to be thrown.","pos":[352,542],"source":" Attempting to make a change to any individual property of an in-use style (such as anything within the collection of <xref:System.Windows.Style.Setters%2A>) causes an exception to be thrown."},{"content":"A style that is defined in markup is considered to be in use as soon as it is loaded from a resource dictionary (for resources), or the page it is contained within is loaded (for inline styles).","pos":[543,737]}]}]},{"pos":[1187,1902],"content":"<xref:System.Windows.FrameworkContentElement.Style%2A> is a dependency property with special precedence. The locally set style generally operates at the highest precedence in the property system. If the <xref:System.Windows.FrameworkContentElement.Style%2A> is null at this point, during loading the property system checks for implicit styles as defined resources that specify that type. If the style is still null after this step, then the style comes from the default (theme) style, but the default style is not returned in the <xref:System.Windows.FrameworkContentElement.Style%2A> property value. See [Dependency Property Value Precedence](~/docs/framework/wpf/advanced/dependency-property-value-precedence.md).","nodes":[{"content":"<ph id=\"ph1\">&lt;xref:System.Windows.FrameworkContentElement.Style%2A&gt;</ph> is a dependency property with special precedence.","pos":[0,104],"source":"<xref:System.Windows.FrameworkContentElement.Style%2A> is a dependency property with special precedence."},{"content":"The locally set style generally operates at the highest precedence in the property system.","pos":[105,195]},{"content":"If the <ph id=\"ph1\">&lt;xref:System.Windows.FrameworkContentElement.Style%2A&gt;</ph> is null at this point, during loading the property system checks for implicit styles as defined resources that specify that type.","pos":[196,387],"source":" If the <xref:System.Windows.FrameworkContentElement.Style%2A> is null at this point, during loading the property system checks for implicit styles as defined resources that specify that type."},{"content":"If the style is still null after this step, then the style comes from the default (theme) style, but the default style is not returned in the <ph id=\"ph1\">&lt;xref:System.Windows.FrameworkContentElement.Style%2A&gt;</ph> property value.","pos":[388,600],"source":" If the style is still null after this step, then the style comes from the default (theme) style, but the default style is not returned in the <xref:System.Windows.FrameworkContentElement.Style%2A> property value."},{"content":"See <bpt id=\"p1\">[</bpt>Dependency Property Value Precedence<ept id=\"p1\">](~/docs/framework/wpf/advanced/dependency-property-value-precedence.md)</ept>.","pos":[601,715],"source":" See [Dependency Property Value Precedence](~/docs/framework/wpf/advanced/dependency-property-value-precedence.md)."}]},{"pos":[1954,1974],"content":"XAML Attribute Usage","linkify":"XAML Attribute Usage","nodes":[{"content":"XAML Attribute Usage","pos":[0,20]}]},{"pos":[2090,2101],"content":"XAML Values","linkify":"XAML Values","nodes":[{"content":"XAML Values","pos":[0,11]}]},{"pos":[2105,2227],"content":"*resourceExtension*  \n One of the following: , or . See [XAML Resources](~/docs/framework/wpf/advanced/xaml-resources.md).","nodes":[{"content":"<bpt id=\"p1\">*</bpt>resourceExtension<ept id=\"p1\">*</ept>","pos":[0,19],"source":"*resourceExtension*"},{"content":" One of the following: , or . See [XAML Resources](~/docs/framework/wpf/advanced/xaml-resources.md).","pos":[22,122],"nodes":[{"content":"One of the following: , or .","pos":[1,29]},{"content":"See <bpt id=\"p1\">[</bpt>XAML Resources<ept id=\"p1\">](~/docs/framework/wpf/advanced/xaml-resources.md)</ept>.","pos":[30,100],"source":" See [XAML Resources](~/docs/framework/wpf/advanced/xaml-resources.md)."}]}]},{"pos":[2234,2392],"content":"*styleResourceKey*  \n The key that identifies the style being requested. The key refers to an existing resource in a <xref:System.Windows.ResourceDictionary>.","nodes":[{"content":"<bpt id=\"p1\">*</bpt>styleResourceKey<ept id=\"p1\">*</ept>","pos":[0,18],"source":"*styleResourceKey*"},{"content":" The key that identifies the style being requested. The key refers to an existing resource in a <xref:System.Windows.ResourceDictionary>.","pos":[21,158],"nodes":[{"content":"The key that identifies the style being requested.","pos":[1,51]},{"content":"The key refers to an existing resource in a <ph id=\"ph1\">&lt;xref:System.Windows.ResourceDictionary&gt;</ph>.","pos":[52,137],"source":" The key refers to an existing resource in a <xref:System.Windows.ResourceDictionary>."}]}]},{"pos":[2400,2675],"content":"[!NOTE]\n Property element syntax is technically possible, but not recommended. See [Inline Styles and Templates](~/docs/framework/wpf/advanced/inline-styles-and-templates.md).  A binding reference using  or <xref:System.Windows.Data.Binding> is also possible, but uncommon.","leadings":["","> "],"nodes":[{"content":" Property element syntax is technically possible, but not recommended. See [Inline Styles and Templates](~/docs/framework/wpf/advanced/inline-styles-and-templates.md).  A binding reference using  or <xref:System.Windows.Data.Binding> is also possible, but uncommon.","pos":[8,273],"nodes":[{"content":"Property element syntax is technically possible, but not recommended.","pos":[1,70]},{"content":"See <bpt id=\"p1\">[</bpt>Inline Styles and Templates<ept id=\"p1\">](~/docs/framework/wpf/advanced/inline-styles-and-templates.md)</ept>.","pos":[71,167],"source":" See [Inline Styles and Templates](~/docs/framework/wpf/advanced/inline-styles-and-templates.md)."},{"content":"A binding reference using  or <ph id=\"ph1\">&lt;xref:System.Windows.Data.Binding&gt;</ph> is also possible, but uncommon.","pos":[169,265],"source":"  A binding reference using  or <xref:System.Windows.Data.Binding> is also possible, but uncommon."}]}]},{"pos":[2731,2762],"content":"Dependency Property Information","linkify":"Dependency Property Information","nodes":[{"content":"Dependency Property Information","pos":[0,31]}]},{"pos":[2783,2799],"content":"Identifier field","nodes":[{"content":"Identifier field","pos":[0,16]}]},{"pos":[2800,2859],"content":"<xref:System.Windows.FrameworkContentElement.StyleProperty>","nodes":[]},{"pos":[2864,2897],"content":"Metadata properties set to <ph id=\"ph1\">`true`</ph>","source":"Metadata properties set to `true`"},{"pos":[2898,2963],"content":"<xref:System.Windows.FrameworkPropertyMetadata.AffectsMeasure%2A>","nodes":[]}],"pos":[190014,193019],"yaml":true,"extradata":"MT"},{"content":"The applied, nondefault style for the element, if present. Otherwise, `null`. The default for a default-constructed <xref href=\"System.Windows.FrameworkContentElement\"></xref> is `null`.","nodes":[{"pos":[0,186],"content":"The applied, nondefault style for the element, if present. Otherwise, `null`. The default for a default-constructed <xref href=\"System.Windows.FrameworkContentElement\"></xref> is `null`.","nodes":[{"content":"The applied, nondefault style for the element, if present.","pos":[0,58]},{"content":"Otherwise, <ph id=\"ph1\">`null`</ph>.","pos":[59,77],"source":" Otherwise, `null`."},{"content":"The default for a default-constructed <ph id=\"ph1\">&lt;xref href=\"System.Windows.FrameworkContentElement\"&gt;&lt;/xref&gt;</ph> is <ph id=\"ph2\">`null`</ph>.","pos":[78,186],"source":" The default for a default-constructed <xref href=\"System.Windows.FrameworkContentElement\"></xref> is `null`."}]}],"pos":[193608,193795],"yaml":true},{"content":"Identifies the <xref href=\"System.Windows.FrameworkContentElement.Style\"></xref> dependency property.","nodes":[{"pos":[0,101],"content":"Identifies the <ph id=\"ph1\">&lt;xref href=\"System.Windows.FrameworkContentElement.Style\"&gt;&lt;/xref&gt;</ph> dependency property.","source":"Identifies the <xref href=\"System.Windows.FrameworkContentElement.Style\"></xref> dependency property."}],"pos":[194839,194941],"yaml":true},{"content":"Gets or sets an arbitrary object value that can be used to store custom information about this element.","nodes":[{"pos":[0,103],"content":"Gets or sets an arbitrary object value that can be used to store custom information about this element.","nodes":[{"content":"Gets or sets an arbitrary object value that can be used to store custom information about this element.","pos":[0,103]}]}],"pos":[196045,196149],"yaml":true},{"content":"This property is analogous to Tag properties in other [!INCLUDE[TLA#tla_ms](~/includes/tlasharptla-ms-md.md)] programming models, such as [!INCLUDE[TLA#tla_vba](~/includes/tlasharptla-vba-md.md)] or [!INCLUDE[TLA#tla_winforms](~/includes/tlasharptla-winforms-md.md)]. It is intended to provide a pre-existing place to store some basic custom information about any element without forcing application developers to subclass.  \n  \n<a name=\"xamlValues_Tag\"></a>   \n## XAML Values  \n Because this property takes an object, you would need to use the property element usage in order to set the <xref:System.Windows.FrameworkContentElement.Tag%2A> property in [!INCLUDE[TLA#tla_xaml](~/includes/tlasharptla-xaml-md.md)] to anything other than an object with a known and built-in type converter, such as a string. Objects used in this way are typically not within the standard [!INCLUDE[TLA#tla_winclient](~/includes/tlasharptla-winclient-md.md)] namespaces and therefore may require namespace mapping to the external namespace in order to be introduced as [!INCLUDE[TLA2#tla_xaml](~/includes/tla2sharptla-xaml-md.md)] elements.  \n  \n<a name=\"dependencyPropertyInfo_Tag\"></a>   \n## Dependency Property Information  \n  \n|||  \n|-|-|  \n|Identifier field|<xref:System.Windows.FrameworkContentElement.TagProperty>|  \n|Metadata properties set to `true`|None|","nodes":[{"pos":[0,423],"content":"This property is analogous to Tag properties in other [!INCLUDE[TLA#tla_ms](~/includes/tlasharptla-ms-md.md)] programming models, such as [!INCLUDE[TLA#tla_vba](~/includes/tlasharptla-vba-md.md)] or [!INCLUDE[TLA#tla_winforms](~/includes/tlasharptla-winforms-md.md)]. It is intended to provide a pre-existing place to store some basic custom information about any element without forcing application developers to subclass.","nodes":[{"content":"This property is analogous to Tag properties in other <ph id=\"ph1\">[!INCLUDE[TLA#tla_ms](~/includes/tlasharptla-ms-md.md)]</ph> programming models, such as <ph id=\"ph2\">[!INCLUDE[TLA#tla_vba](~/includes/tlasharptla-vba-md.md)]</ph> or <ph id=\"ph3\">[!INCLUDE[TLA#tla_winforms](~/includes/tlasharptla-winforms-md.md)]</ph>.","pos":[0,267],"source":"This property is analogous to Tag properties in other [!INCLUDE[TLA#tla_ms](~/includes/tlasharptla-ms-md.md)] programming models, such as [!INCLUDE[TLA#tla_vba](~/includes/tlasharptla-vba-md.md)] or [!INCLUDE[TLA#tla_winforms](~/includes/tlasharptla-winforms-md.md)]."},{"content":"It is intended to provide a pre-existing place to store some basic custom information about any element without forcing application developers to subclass.","pos":[268,423]}]},{"pos":[465,476],"content":"XAML Values","linkify":"XAML Values","nodes":[{"content":"XAML Values","pos":[0,11]}]},{"pos":[480,1120],"content":"Because this property takes an object, you would need to use the property element usage in order to set the <xref:System.Windows.FrameworkContentElement.Tag%2A> property in [!INCLUDE[TLA#tla_xaml](~/includes/tlasharptla-xaml-md.md)] to anything other than an object with a known and built-in type converter, such as a string. Objects used in this way are typically not within the standard [!INCLUDE[TLA#tla_winclient](~/includes/tlasharptla-winclient-md.md)] namespaces and therefore may require namespace mapping to the external namespace in order to be introduced as [!INCLUDE[TLA2#tla_xaml](~/includes/tla2sharptla-xaml-md.md)] elements.","nodes":[{"content":"Because this property takes an object, you would need to use the property element usage in order to set the <ph id=\"ph1\">&lt;xref:System.Windows.FrameworkContentElement.Tag%2A&gt;</ph> property in <ph id=\"ph2\">[!INCLUDE[TLA#tla_xaml](~/includes/tlasharptla-xaml-md.md)]</ph> to anything other than an object with a known and built-in type converter, such as a string.","pos":[0,325],"source":"Because this property takes an object, you would need to use the property element usage in order to set the <xref:System.Windows.FrameworkContentElement.Tag%2A> property in [!INCLUDE[TLA#tla_xaml](~/includes/tlasharptla-xaml-md.md)] to anything other than an object with a known and built-in type converter, such as a string."},{"content":"Objects used in this way are typically not within the standard <ph id=\"ph1\">[!INCLUDE[TLA#tla_winclient](~/includes/tlasharptla-winclient-md.md)]</ph> namespaces and therefore may require namespace mapping to the external namespace in order to be introduced as <ph id=\"ph2\">[!INCLUDE[TLA2#tla_xaml](~/includes/tla2sharptla-xaml-md.md)]</ph> elements.","pos":[326,640],"source":" Objects used in this way are typically not within the standard [!INCLUDE[TLA#tla_winclient](~/includes/tlasharptla-winclient-md.md)] namespaces and therefore may require namespace mapping to the external namespace in order to be introduced as [!INCLUDE[TLA2#tla_xaml](~/includes/tla2sharptla-xaml-md.md)] elements."}]},{"pos":[1174,1205],"content":"Dependency Property Information","linkify":"Dependency Property Information","nodes":[{"content":"Dependency Property Information","pos":[0,31]}]},{"pos":[1226,1242],"content":"Identifier field","nodes":[{"content":"Identifier field","pos":[0,16]}]},{"pos":[1243,1300],"content":"<xref:System.Windows.FrameworkContentElement.TagProperty>","nodes":[]},{"pos":[1305,1338],"content":"Metadata properties set to <ph id=\"ph1\">`true`</ph>","source":"Metadata properties set to `true`"},{"pos":[1339,1343],"content":"None","nodes":[{"content":"None","pos":[0,4]}]}],"pos":[196160,197523],"yaml":true,"extradata":"MT"},{"content":"The intended value. This property has no default value.","nodes":[{"pos":[0,55],"content":"The intended value. This property has no default value.","nodes":[{"content":"The intended value. This property has no default value.","pos":[0,55],"nodes":[{"content":"The intended value.","pos":[0,19]},{"content":"This property has no default value.","pos":[20,55]}]}]}],"pos":[197635,197691],"yaml":true},{"content":"Identifies the <xref href=\"System.Windows.FrameworkContentElement.Tag\"></xref> dependency property.","nodes":[{"pos":[0,99],"content":"Identifies the <ph id=\"ph1\">&lt;xref href=\"System.Windows.FrameworkContentElement.Tag\"&gt;&lt;/xref&gt;</ph> dependency property.","source":"Identifies the <xref href=\"System.Windows.FrameworkContentElement.Tag\"></xref> dependency property."}],"pos":[198721,198821],"yaml":true},{"content":"Occurs when any associated target property participating in a binding on this element changes.","nodes":[{"pos":[0,94],"content":"Occurs when any associated target property participating in a binding on this element changes.","nodes":[{"content":"Occurs when any associated target property participating in a binding on this element changes.","pos":[0,94]}]}],"pos":[199980,200075],"yaml":true},{"content":"This event surfaces the <xref:System.Windows.Data.Binding.TargetUpdated> event that is raised by any <xref:System.Windows.Data.Binding> associated with this element. This usually means that the binding in question is a two-way binding, and that the bound  dependency property affirms an invalidation of the previous property value per any validation or caching scheme that the property supports.  \n  \n The event arguments of this event will inform you which bound property was changed.  \n  \n<a name=\"xamlAttributeUsage_TargetUpdated\"></a>   \n## XAML Attribute Usage  \n  \n```  \n<object TargetUpdated=\"EventHandler\"/>  \n```","nodes":[{"pos":[0,395],"content":"This event surfaces the <xref:System.Windows.Data.Binding.TargetUpdated> event that is raised by any <xref:System.Windows.Data.Binding> associated with this element. This usually means that the binding in question is a two-way binding, and that the bound  dependency property affirms an invalidation of the previous property value per any validation or caching scheme that the property supports.","nodes":[{"content":"This event surfaces the <xref:System.Windows.Data.Binding.TargetUpdated> event that is raised by any <xref:System.Windows.Data.Binding> associated with this element. This usually means that the binding in question is a two-way binding, and that the bound  dependency property affirms an invalidation of the previous property value per any validation or caching scheme that the property supports.","pos":[0,395],"nodes":[{"content":"This event surfaces the <ph id=\"ph1\">&lt;xref:System.Windows.Data.Binding.TargetUpdated&gt;</ph> event that is raised by any <ph id=\"ph2\">&lt;xref:System.Windows.Data.Binding&gt;</ph> associated with this element.","pos":[0,165],"source":"This event surfaces the <xref:System.Windows.Data.Binding.TargetUpdated> event that is raised by any <xref:System.Windows.Data.Binding> associated with this element."},{"content":"This usually means that the binding in question is a two-way binding, and that the bound  dependency property affirms an invalidation of the previous property value per any validation or caching scheme that the property supports.","pos":[166,395]}]}]},{"pos":[402,485],"content":"The event arguments of this event will inform you which bound property was changed.","nodes":[{"content":"The event arguments of this event will inform you which bound property was changed.","pos":[0,83]}]},{"pos":[545,565],"content":"XAML Attribute Usage","linkify":"XAML Attribute Usage","nodes":[{"content":"XAML Attribute Usage","pos":[0,20]}]}],"pos":[200086,200723],"yaml":true,"extradata":"MT"},{"content":"Gets a reference to the template parent of this element. This property is not relevant if the element was not created through a template.","nodes":[{"pos":[0,137],"content":"Gets a reference to the template parent of this element. This property is not relevant if the element was not created through a template.","nodes":[{"content":"Gets a reference to the template parent of this element. This property is not relevant if the element was not created through a template.","pos":[0,137],"nodes":[{"content":"Gets a reference to the template parent of this element.","pos":[0,56]},{"content":"This property is not relevant if the element was not created through a template.","pos":[57,137]}]}]}],"pos":[201940,202078],"yaml":true},{"content":"Templates are actually shared objects, where the contents of the template are created only once. Therefore, if you obtain an object reference to an element that came from a template, you may find that the apparent logical tree does not reach to the page root. In order to connect such a template reference to the page's logical tree, you should get the <xref:System.Windows.FrameworkContentElement.TemplatedParent%2A> value and continue to navigate that element tree as desired.  \n  \n <xref:System.Windows.FrameworkContentElement.TemplatedParent%2A> will frequently be `null` for common objects, because if you have obtained an object reference from out of a page in your application through typical means, that element probably was not created from a template. Cases where <xref:System.Windows.FrameworkContentElement.TemplatedParent%2A> might not be `null` would include operations such as hit-testing, event handling for certain low-level input events, or working with enumerators, which may have returned elements that came from templates.","nodes":[{"pos":[0,478],"content":"Templates are actually shared objects, where the contents of the template are created only once. Therefore, if you obtain an object reference to an element that came from a template, you may find that the apparent logical tree does not reach to the page root. In order to connect such a template reference to the page's logical tree, you should get the <xref:System.Windows.FrameworkContentElement.TemplatedParent%2A> value and continue to navigate that element tree as desired.","nodes":[{"content":"Templates are actually shared objects, where the contents of the template are created only once. Therefore, if you obtain an object reference to an element that came from a template, you may find that the apparent logical tree does not reach to the page root. In order to connect such a template reference to the page's logical tree, you should get the <xref:System.Windows.FrameworkContentElement.TemplatedParent%2A> value and continue to navigate that element tree as desired.","pos":[0,478],"nodes":[{"content":"Templates are actually shared objects, where the contents of the template are created only once.","pos":[0,96]},{"content":"Therefore, if you obtain an object reference to an element that came from a template, you may find that the apparent logical tree does not reach to the page root.","pos":[97,259]},{"content":"In order to connect such a template reference to the page's logical tree, you should get the <ph id=\"ph1\">&lt;xref:System.Windows.FrameworkContentElement.TemplatedParent%2A&gt;</ph> value and continue to navigate that element tree as desired.","pos":[260,478],"source":" In order to connect such a template reference to the page's logical tree, you should get the <xref:System.Windows.FrameworkContentElement.TemplatedParent%2A> value and continue to navigate that element tree as desired."}]}]},{"pos":[485,1043],"content":"<xref:System.Windows.FrameworkContentElement.TemplatedParent%2A> will frequently be `null` for common objects, because if you have obtained an object reference from out of a page in your application through typical means, that element probably was not created from a template. Cases where <xref:System.Windows.FrameworkContentElement.TemplatedParent%2A> might not be `null` would include operations such as hit-testing, event handling for certain low-level input events, or working with enumerators, which may have returned elements that came from templates.","nodes":[{"content":"<ph id=\"ph1\">&lt;xref:System.Windows.FrameworkContentElement.TemplatedParent%2A&gt;</ph> will frequently be <ph id=\"ph2\">`null`</ph> for common objects, because if you have obtained an object reference from out of a page in your application through typical means, that element probably was not created from a template.","pos":[0,276],"source":"<xref:System.Windows.FrameworkContentElement.TemplatedParent%2A> will frequently be `null` for common objects, because if you have obtained an object reference from out of a page in your application through typical means, that element probably was not created from a template."},{"content":"Cases where <ph id=\"ph1\">&lt;xref:System.Windows.FrameworkContentElement.TemplatedParent%2A&gt;</ph> might not be <ph id=\"ph2\">`null`</ph> would include operations such as hit-testing, event handling for certain low-level input events, or working with enumerators, which may have returned elements that came from templates.","pos":[277,558],"source":" Cases where <xref:System.Windows.FrameworkContentElement.TemplatedParent%2A> might not be `null` would include operations such as hit-testing, event handling for certain low-level input events, or working with enumerators, which may have returned elements that came from templates."}]}],"pos":[202089,203137],"yaml":true,"extradata":"MT"},{"content":"The element whose <xref href=\"System.Windows.FrameworkTemplate\"></xref><xref href=\"System.Windows.FrameworkTemplate.VisualTree\"></xref> caused this element to be created. This value is frequently `null`.","nodes":[{"pos":[0,203],"content":"The element whose <xref href=\"System.Windows.FrameworkTemplate\"></xref><xref href=\"System.Windows.FrameworkTemplate.VisualTree\"></xref> caused this element to be created. This value is frequently `null`.","nodes":[{"content":"The element whose <ph id=\"ph1\">&lt;xref href=\"System.Windows.FrameworkTemplate\"&gt;&lt;/xref&gt;</ph><ph id=\"ph2\">&lt;xref href=\"System.Windows.FrameworkTemplate.VisualTree\"&gt;&lt;/xref&gt;</ph> caused this element to be created.","pos":[0,170],"source":"The element whose <xref href=\"System.Windows.FrameworkTemplate\"></xref><xref href=\"System.Windows.FrameworkTemplate.VisualTree\"></xref> caused this element to be created."},{"content":"This value is frequently <ph id=\"ph1\">`null`</ph>.","pos":[171,203],"source":" This value is frequently `null`."}]}],"pos":[203299,203503],"yaml":true},{"content":"Gets or sets the tool-tip object that is displayed for this element in the [!INCLUDE[TLA#tla_ui](~/includes/tlasharptla-ui-md.md)].","nodes":[{"pos":[0,131],"content":"Gets or sets the tool-tip object that is displayed for this element in the <ph id=\"ph1\">[!INCLUDE[TLA#tla_ui](~/includes/tlasharptla-ui-md.md)]</ph>.","source":"Gets or sets the tool-tip object that is displayed for this element in the [!INCLUDE[TLA#tla_ui](~/includes/tlasharptla-ui-md.md)]."}],"pos":[204524,204656],"yaml":true},{"content":"If the value of this property is of type <xref:System.Windows.Controls.ToolTip>, then that is the tool-tip that will be used in the [!INCLUDE[TLA2#tla_ui](~/includes/tla2sharptla-ui-md.md)].  If the value is of any other type, then that value will be used as the *content* for a <xref:System.Windows.Controls.ToolTip> provided (constructed) by the system. For more information see <xref:System.Windows.Controls.ToolTipService>. The service class provides attached properties that can be used to further customize a tool-tip.  \n  \n<a name=\"xamlAttributeUsage_ToolTip\"></a>   \n## XAML Attribute Usage  \n  \n```  \n<object ToolTip=\"toolTipContent\"/>  \n```  \n  \n<a name=\"xamlPropertyElementUsage_ToolTip\"></a>   \n## XAML Property Element Usage  \n  \n```  \n<object>  \n  <object.ToolTip>  \n    <ToolTip .../>  \n  </object.ToolTip>  \n</object>  \n- or -  \n<object>  \n  <object.ToolTip>  \n    toolTipObjectContent  \n  </object.ToolTip>  \n</object>  \n```  \n  \n<a name=\"xamlValues_ToolTip\"></a>   \n## XAML Values  \n *toolTipContent*  \n A string that becomes the display text for the <xref:System.Windows.FrameworkContentElement.ToolTip%2A>.  \n  \n *toolTipObjectContent*  \n Some object, provided in object element form, that should be used as the content for the <xref:System.Windows.FrameworkContentElement> . Typically this would be a <xref:System.Windows.FrameworkElement> or some other element that creates layout compositing for the <xref:System.Windows.FrameworkContentElement.ToolTip%2A>, eventually containing text content within the compositing. In this usage, the <xref:System.Windows.Controls.ToolTip> element is created implicitly from the parsed [!INCLUDE[TLA2#tla_xaml](~/includes/tla2sharptla-xaml-md.md)], and the *toolTipObjectContent* content is set as its <xref:System.Windows.Controls.ContentControl.Content%2A?displayProperty=fullName> property.  \n  \n <`ToolTip` .../>  \n See <xref:System.Windows.Controls.ToolTip>.  \n  \n<a name=\"dependencyPropertyInfo_ToolTip\"></a>   \n## Dependency Property Information  \n  \n|||  \n|-|-|  \n|Identifier field|<xref:System.Windows.FrameworkContentElement.ToolTipProperty>|  \n|Metadata properties set to `true`|None|","nodes":[{"pos":[0,524],"content":"If the value of this property is of type <xref:System.Windows.Controls.ToolTip>, then that is the tool-tip that will be used in the [!INCLUDE[TLA2#tla_ui](~/includes/tla2sharptla-ui-md.md)].  If the value is of any other type, then that value will be used as the *content* for a <xref:System.Windows.Controls.ToolTip> provided (constructed) by the system. For more information see <xref:System.Windows.Controls.ToolTipService>. The service class provides attached properties that can be used to further customize a tool-tip.","nodes":[{"content":"If the value of this property is of type <ph id=\"ph1\">&lt;xref:System.Windows.Controls.ToolTip&gt;</ph>, then that is the tool-tip that will be used in the <ph id=\"ph2\">[!INCLUDE[TLA2#tla_ui](~/includes/tla2sharptla-ui-md.md)]</ph>.","pos":[0,190],"source":"If the value of this property is of type <xref:System.Windows.Controls.ToolTip>, then that is the tool-tip that will be used in the [!INCLUDE[TLA2#tla_ui](~/includes/tla2sharptla-ui-md.md)]."},{"content":"If the value is of any other type, then that value will be used as the <bpt id=\"p1\">*</bpt>content<ept id=\"p1\">*</ept> for a <ph id=\"ph1\">&lt;xref:System.Windows.Controls.ToolTip&gt;</ph> provided (constructed) by the system.","pos":[192,355],"source":"  If the value is of any other type, then that value will be used as the *content* for a <xref:System.Windows.Controls.ToolTip> provided (constructed) by the system."},{"content":"For more information see <ph id=\"ph1\">&lt;xref:System.Windows.Controls.ToolTipService&gt;</ph>.","pos":[356,427],"source":" For more information see <xref:System.Windows.Controls.ToolTipService>."},{"content":"The service class provides attached properties that can be used to further customize a tool-tip.","pos":[428,524]}]},{"pos":[578,598],"content":"XAML Attribute Usage","linkify":"XAML Attribute Usage","nodes":[{"content":"XAML Attribute Usage","pos":[0,20]}]},{"pos":[710,737],"content":"XAML Property Element Usage","linkify":"XAML Property Element Usage","nodes":[{"content":"XAML Property Element Usage","pos":[0,27]}]},{"pos":[987,998],"content":"XAML Values","linkify":"XAML Values","nodes":[{"content":"XAML Values","pos":[0,11]}]},{"pos":[1002,1126],"content":"*toolTipContent*  \n A string that becomes the display text for the <xref:System.Windows.FrameworkContentElement.ToolTip%2A>.","nodes":[{"content":"<bpt id=\"p1\">*</bpt>toolTipContent<ept id=\"p1\">*</ept>","pos":[0,16],"source":"*toolTipContent*"},{"content":"A string that becomes the display text for the <ph id=\"ph1\">&lt;xref:System.Windows.FrameworkContentElement.ToolTip%2A&gt;</ph>.","pos":[20,124],"source":" A string that becomes the display text for the <xref:System.Windows.FrameworkContentElement.ToolTip%2A>."}]},{"pos":[1133,1851],"content":"*toolTipObjectContent*  \n Some object, provided in object element form, that should be used as the content for the <xref:System.Windows.FrameworkContentElement> . Typically this would be a <xref:System.Windows.FrameworkElement> or some other element that creates layout compositing for the <xref:System.Windows.FrameworkContentElement.ToolTip%2A>, eventually containing text content within the compositing. In this usage, the <xref:System.Windows.Controls.ToolTip> element is created implicitly from the parsed [!INCLUDE[TLA2#tla_xaml](~/includes/tla2sharptla-xaml-md.md)], and the *toolTipObjectContent* content is set as its <xref:System.Windows.Controls.ContentControl.Content%2A?displayProperty=fullName> property.","nodes":[{"content":"<bpt id=\"p1\">*</bpt>toolTipObjectContent<ept id=\"p1\">*</ept>","pos":[0,22],"source":"*toolTipObjectContent*"},{"content":" Some object, provided in object element form, that should be used as the content for the <xref:System.Windows.FrameworkContentElement> . Typically this would be a <xref:System.Windows.FrameworkElement> or some other element that creates layout compositing for the <xref:System.Windows.FrameworkContentElement.ToolTip%2A>, eventually containing text content within the compositing. In this usage, the <xref:System.Windows.Controls.ToolTip> element is created implicitly from the parsed [!INCLUDE[TLA2#tla_xaml](~/includes/tla2sharptla-xaml-md.md)], and the *toolTipObjectContent* content is set as its <xref:System.Windows.Controls.ContentControl.Content%2A?displayProperty=fullName> property.","pos":[25,718],"nodes":[{"content":"Some object, provided in object element form, that should be used as the content for the <ph id=\"ph1\">&lt;xref:System.Windows.FrameworkContentElement&gt;</ph> .","pos":[1,137],"source":" Some object, provided in object element form, that should be used as the content for the <xref:System.Windows.FrameworkContentElement> ."},{"content":"Typically this would be a <ph id=\"ph1\">&lt;xref:System.Windows.FrameworkElement&gt;</ph> or some other element that creates layout compositing for the <ph id=\"ph2\">&lt;xref:System.Windows.FrameworkContentElement.ToolTip%2A&gt;</ph>, eventually containing text content within the compositing.","pos":[138,381],"source":" Typically this would be a <xref:System.Windows.FrameworkElement> or some other element that creates layout compositing for the <xref:System.Windows.FrameworkContentElement.ToolTip%2A>, eventually containing text content within the compositing."},{"content":"In this usage, the <ph id=\"ph1\">&lt;xref:System.Windows.Controls.ToolTip&gt;</ph> element is created implicitly from the parsed <ph id=\"ph2\">[!INCLUDE[TLA2#tla_xaml](~/includes/tla2sharptla-xaml-md.md)]</ph>, and the <bpt id=\"p1\">*</bpt>toolTipObjectContent<ept id=\"p1\">*</ept> content is set as its <ph id=\"ph3\">&lt;xref:System.Windows.Controls.ContentControl.Content%2A?displayProperty=fullName&gt;</ph> property.","pos":[382,693],"source":" In this usage, the <xref:System.Windows.Controls.ToolTip> element is created implicitly from the parsed [!INCLUDE[TLA2#tla_xaml](~/includes/tla2sharptla-xaml-md.md)], and the *toolTipObjectContent* content is set as its <xref:System.Windows.Controls.ContentControl.Content%2A?displayProperty=fullName> property."}]}]},{"pos":[1858,1921],"content":"<`ToolTip` .../>  \n See <xref:System.Windows.Controls.ToolTip>.","nodes":[{"content":"<ph id=\"ph1\">&lt;</ph><ph id=\"ph2\">`ToolTip`</ph> .../&gt;","pos":[0,16],"source":"<`ToolTip` .../>"},{"content":"See <ph id=\"ph1\">&lt;xref:System.Windows.Controls.ToolTip&gt;</ph>.","pos":[20,63],"source":" See <xref:System.Windows.Controls.ToolTip>."}]},{"pos":[1979,2010],"content":"Dependency Property Information","linkify":"Dependency Property Information","nodes":[{"content":"Dependency Property Information","pos":[0,31]}]},{"pos":[2031,2047],"content":"Identifier field","nodes":[{"content":"Identifier field","pos":[0,16]}]},{"pos":[2048,2109],"content":"<xref:System.Windows.FrameworkContentElement.ToolTipProperty>","nodes":[]},{"pos":[2114,2147],"content":"Metadata properties set to <ph id=\"ph1\">`true`</ph>","source":"Metadata properties set to `true`"},{"pos":[2148,2152],"content":"None","nodes":[{"content":"None","pos":[0,4]}]}],"pos":[204667,206876],"yaml":true,"extradata":"MT"},{"content":"The tooltip object.","nodes":[{"pos":[0,19],"content":"The tooltip object.","nodes":[{"content":"The tooltip object.","pos":[0,19]}]}],"pos":[207537,207557],"yaml":true},{"content":"Occurs just before any tooltip on the element is closed.","nodes":[{"pos":[0,56],"content":"Occurs just before any tooltip on the element is closed.","nodes":[{"content":"Occurs just before any tooltip on the element is closed.","pos":[0,56]}]}],"pos":[208673,208730],"yaml":true},{"content":"To suppress closing the tooltip, handlers of the event should mark it as handled.  \n  \n This event cannot be an <xref:System.Windows.EventTrigger> in a style. This is because the identifier field of this event re-uses an implementation from a service that does not expose add/remove methods on the event.  \n  \n<a name=\"routedEventInfo_ToolTipClosing\"></a>   \n## Routed Event Information  \n  \n|||  \n|-|-|  \n|Identifier field|<xref:System.Windows.FrameworkContentElement.ToolTipClosingEvent>|  \n|Routing strategy|Direct|  \n|Delegate|<xref:System.Windows.Controls.ToolTipEventHandler>|","nodes":[{"pos":[0,81],"content":"To suppress closing the tooltip, handlers of the event should mark it as handled.","nodes":[{"content":"To suppress closing the tooltip, handlers of the event should mark it as handled.","pos":[0,81]}]},{"pos":[88,304],"content":"This event cannot be an <xref:System.Windows.EventTrigger> in a style. This is because the identifier field of this event re-uses an implementation from a service that does not expose add/remove methods on the event.","nodes":[{"content":"This event cannot be an <xref:System.Windows.EventTrigger> in a style. This is because the identifier field of this event re-uses an implementation from a service that does not expose add/remove methods on the event.","pos":[0,216],"nodes":[{"content":"This event cannot be an <ph id=\"ph1\">&lt;xref:System.Windows.EventTrigger&gt;</ph> in a style.","pos":[0,70],"source":"This event cannot be an <xref:System.Windows.EventTrigger> in a style."},{"content":"This is because the identifier field of this event re-uses an implementation from a service that does not expose add/remove methods on the event.","pos":[71,216]}]}]},{"pos":[362,386],"content":"Routed Event Information","linkify":"Routed Event Information","nodes":[{"content":"Routed Event Information","pos":[0,24]}]},{"pos":[407,423],"content":"Identifier field","nodes":[{"content":"Identifier field","pos":[0,16]}]},{"pos":[424,489],"content":"<xref:System.Windows.FrameworkContentElement.ToolTipClosingEvent>","nodes":[]},{"pos":[494,510],"content":"Routing strategy","nodes":[{"content":"Routing strategy","pos":[0,16]}]},{"pos":[511,517],"content":"Direct","nodes":[{"content":"Direct","pos":[0,6]}]},{"pos":[522,530],"content":"Delegate","nodes":[{"content":"Delegate","pos":[0,8]}]},{"pos":[531,581],"content":"<xref:System.Windows.Controls.ToolTipEventHandler>","nodes":[]}],"pos":[208741,209339],"yaml":true,"extradata":"MT"},{"content":"Identifies the <xref href=\"System.Windows.FrameworkContentElement.ToolTipClosing\"></xref> [Routed Events Overview](~/docs/framework/wpf/advanced/routed-events-overview.md).","nodes":[{"pos":[0,172],"content":"Identifies the <ph id=\"ph1\">&lt;xref href=\"System.Windows.FrameworkContentElement.ToolTipClosing\"&gt;&lt;/xref&gt;</ph> <bpt id=\"p1\">[</bpt>Routed Events Overview<ept id=\"p1\">](~/docs/framework/wpf/advanced/routed-events-overview.md)</ept>.","source":"Identifies the <xref href=\"System.Windows.FrameworkContentElement.ToolTipClosing\"></xref> [Routed Events Overview](~/docs/framework/wpf/advanced/routed-events-overview.md)."}],"pos":[210547,210720],"yaml":true},{"content":"Event identifier objects are created when routed events are registered (see <xref:System.Windows.EventManager.RegisterRoutedEvent%2A>) and can then be used to add class handlers (see <xref:System.Windows.EventManager.RegisterClassHandler%2A>). Identifier objects contain an identifying name, owner type, handler type, routing strategy, and a utility method for adding owners for the event.","nodes":[{"pos":[0,389],"content":"Event identifier objects are created when routed events are registered (see <xref:System.Windows.EventManager.RegisterRoutedEvent%2A>) and can then be used to add class handlers (see <xref:System.Windows.EventManager.RegisterClassHandler%2A>). Identifier objects contain an identifying name, owner type, handler type, routing strategy, and a utility method for adding owners for the event.","nodes":[{"content":"Event identifier objects are created when routed events are registered (see <xref:System.Windows.EventManager.RegisterRoutedEvent%2A>) and can then be used to add class handlers (see <xref:System.Windows.EventManager.RegisterClassHandler%2A>). Identifier objects contain an identifying name, owner type, handler type, routing strategy, and a utility method for adding owners for the event.","pos":[0,389],"nodes":[{"content":"Event identifier objects are created when routed events are registered (see <ph id=\"ph1\">&lt;xref:System.Windows.EventManager.RegisterRoutedEvent%2A&gt;</ph>) and can then be used to add class handlers (see <ph id=\"ph2\">&lt;xref:System.Windows.EventManager.RegisterClassHandler%2A&gt;</ph>).","pos":[0,243],"source":"Event identifier objects are created when routed events are registered (see <xref:System.Windows.EventManager.RegisterRoutedEvent%2A>) and can then be used to add class handlers (see <xref:System.Windows.EventManager.RegisterClassHandler%2A>)."},{"content":"Identifier objects contain an identifying name, owner type, handler type, routing strategy, and a utility method for adding owners for the event.","pos":[244,389]}]}]}],"pos":[210731,211121],"yaml":true,"extradata":"MT"},{"content":"Occurs when any tooltip on the element is opened.","nodes":[{"pos":[0,49],"content":"Occurs when any tooltip on the element is opened.","nodes":[{"content":"Occurs when any tooltip on the element is opened.","pos":[0,49]}]}],"pos":[212280,212330],"yaml":true},{"content":"To manually open tooltips, handlers of the events should mark the relevant event as handled. Otherwise, the value of the <xref:System.Windows.FrameworkContentElement.ToolTip%2A> property will be used to automatically open a context menu. Marking the event handled will effectively cancel the default action, and could be an opportunity to reset the value of the <xref:System.Windows.FrameworkContentElement.ToolTip%2A> property and then open the new <xref:System.Windows.Controls.ContextMenu>. Note that this event will not be raised if <xref:System.Windows.FrameworkContentElement.ToolTip%2A> is a null reference or otherwise unset.  \n  \n This event cannot be an <xref:System.Windows.EventTrigger> in a style. This is because the identifier field of this event re-uses an implementation from a service that does not expose add/remove methods on the event.  \n  \n<a name=\"routedEventInfo_ToolTipOpening\"></a>   \n## Routed Event Information  \n  \n|||  \n|-|-|  \n|Identifier field|<xref:System.Windows.FrameworkContentElement.ToolTipOpeningEvent>|  \n|Routing strategy|Direct|  \n|Delegate|<xref:System.Windows.Controls.ToolTipEventHandler>|","nodes":[{"pos":[0,633],"content":"To manually open tooltips, handlers of the events should mark the relevant event as handled. Otherwise, the value of the <xref:System.Windows.FrameworkContentElement.ToolTip%2A> property will be used to automatically open a context menu. Marking the event handled will effectively cancel the default action, and could be an opportunity to reset the value of the <xref:System.Windows.FrameworkContentElement.ToolTip%2A> property and then open the new <xref:System.Windows.Controls.ContextMenu>. Note that this event will not be raised if <xref:System.Windows.FrameworkContentElement.ToolTip%2A> is a null reference or otherwise unset.","nodes":[{"content":"To manually open tooltips, handlers of the events should mark the relevant event as handled. Otherwise, the value of the <xref:System.Windows.FrameworkContentElement.ToolTip%2A> property will be used to automatically open a context menu. Marking the event handled will effectively cancel the default action, and could be an opportunity to reset the value of the <xref:System.Windows.FrameworkContentElement.ToolTip%2A> property and then open the new <xref:System.Windows.Controls.ContextMenu>. Note that this event will not be raised if <xref:System.Windows.FrameworkContentElement.ToolTip%2A> is a null reference or otherwise unset.","pos":[0,633],"nodes":[{"content":"To manually open tooltips, handlers of the events should mark the relevant event as handled.","pos":[0,92]},{"content":"Otherwise, the value of the <ph id=\"ph1\">&lt;xref:System.Windows.FrameworkContentElement.ToolTip%2A&gt;</ph> property will be used to automatically open a context menu.","pos":[93,237],"source":" Otherwise, the value of the <xref:System.Windows.FrameworkContentElement.ToolTip%2A> property will be used to automatically open a context menu."},{"content":"Marking the event handled will effectively cancel the default action, and could be an opportunity to reset the value of the <ph id=\"ph1\">&lt;xref:System.Windows.FrameworkContentElement.ToolTip%2A&gt;</ph> property and then open the new <ph id=\"ph2\">&lt;xref:System.Windows.Controls.ContextMenu&gt;</ph>.","pos":[238,493],"source":" Marking the event handled will effectively cancel the default action, and could be an opportunity to reset the value of the <xref:System.Windows.FrameworkContentElement.ToolTip%2A> property and then open the new <xref:System.Windows.Controls.ContextMenu>."},{"content":"Note that this event will not be raised if <ph id=\"ph1\">&lt;xref:System.Windows.FrameworkContentElement.ToolTip%2A&gt;</ph> is a null reference or otherwise unset.","pos":[494,633],"source":" Note that this event will not be raised if <xref:System.Windows.FrameworkContentElement.ToolTip%2A> is a null reference or otherwise unset."}]}]},{"pos":[640,856],"content":"This event cannot be an <xref:System.Windows.EventTrigger> in a style. This is because the identifier field of this event re-uses an implementation from a service that does not expose add/remove methods on the event.","nodes":[{"content":"This event cannot be an <xref:System.Windows.EventTrigger> in a style. This is because the identifier field of this event re-uses an implementation from a service that does not expose add/remove methods on the event.","pos":[0,216],"nodes":[{"content":"This event cannot be an <ph id=\"ph1\">&lt;xref:System.Windows.EventTrigger&gt;</ph> in a style.","pos":[0,70],"source":"This event cannot be an <xref:System.Windows.EventTrigger> in a style."},{"content":"This is because the identifier field of this event re-uses an implementation from a service that does not expose add/remove methods on the event.","pos":[71,216]}]}]},{"pos":[914,938],"content":"Routed Event Information","linkify":"Routed Event Information","nodes":[{"content":"Routed Event Information","pos":[0,24]}]},{"pos":[959,975],"content":"Identifier field","nodes":[{"content":"Identifier field","pos":[0,16]}]},{"pos":[976,1041],"content":"<xref:System.Windows.FrameworkContentElement.ToolTipOpeningEvent>","nodes":[]},{"pos":[1046,1062],"content":"Routing strategy","nodes":[{"content":"Routing strategy","pos":[0,16]}]},{"pos":[1063,1069],"content":"Direct","nodes":[{"content":"Direct","pos":[0,6]}]},{"pos":[1074,1082],"content":"Delegate","nodes":[{"content":"Delegate","pos":[0,8]}]},{"pos":[1083,1133],"content":"<xref:System.Windows.Controls.ToolTipEventHandler>","nodes":[]}],"pos":[212341,213491],"yaml":true,"extradata":"MT"},{"content":"Identifies the <xref href=\"System.Windows.FrameworkContentElement.ToolTipOpening\"></xref> [Routed Events Overview](~/docs/framework/wpf/advanced/routed-events-overview.md).","nodes":[{"pos":[0,172],"content":"Identifies the <ph id=\"ph1\">&lt;xref href=\"System.Windows.FrameworkContentElement.ToolTipOpening\"&gt;&lt;/xref&gt;</ph> <bpt id=\"p1\">[</bpt>Routed Events Overview<ept id=\"p1\">](~/docs/framework/wpf/advanced/routed-events-overview.md)</ept>.","source":"Identifies the <xref href=\"System.Windows.FrameworkContentElement.ToolTipOpening\"></xref> [Routed Events Overview](~/docs/framework/wpf/advanced/routed-events-overview.md)."}],"pos":[214699,214872],"yaml":true},{"content":"Event identifier objects are created when routed events are registered (see <xref:System.Windows.EventManager.RegisterRoutedEvent%2A>) and can then be used to add class handlers (see <xref:System.Windows.EventManager.RegisterClassHandler%2A>). Identifier objects contain an identifying name, owner type, handler type, routing strategy, and a utility method for adding owners for the event.","nodes":[{"pos":[0,389],"content":"Event identifier objects are created when routed events are registered (see <xref:System.Windows.EventManager.RegisterRoutedEvent%2A>) and can then be used to add class handlers (see <xref:System.Windows.EventManager.RegisterClassHandler%2A>). Identifier objects contain an identifying name, owner type, handler type, routing strategy, and a utility method for adding owners for the event.","nodes":[{"content":"Event identifier objects are created when routed events are registered (see <xref:System.Windows.EventManager.RegisterRoutedEvent%2A>) and can then be used to add class handlers (see <xref:System.Windows.EventManager.RegisterClassHandler%2A>). Identifier objects contain an identifying name, owner type, handler type, routing strategy, and a utility method for adding owners for the event.","pos":[0,389],"nodes":[{"content":"Event identifier objects are created when routed events are registered (see <ph id=\"ph1\">&lt;xref:System.Windows.EventManager.RegisterRoutedEvent%2A&gt;</ph>) and can then be used to add class handlers (see <ph id=\"ph2\">&lt;xref:System.Windows.EventManager.RegisterClassHandler%2A&gt;</ph>).","pos":[0,243],"source":"Event identifier objects are created when routed events are registered (see <xref:System.Windows.EventManager.RegisterRoutedEvent%2A>) and can then be used to add class handlers (see <xref:System.Windows.EventManager.RegisterClassHandler%2A>)."},{"content":"Identifier objects contain an identifying name, owner type, handler type, routing strategy, and a utility method for adding owners for the event.","pos":[244,389]}]}]}],"pos":[214883,215273],"yaml":true,"extradata":"MT"},{"content":"Identifies the <xref href=\"System.Windows.FrameworkContentElement.ToolTip\"></xref> dependency property.","nodes":[{"pos":[0,103],"content":"Identifies the <ph id=\"ph1\">&lt;xref href=\"System.Windows.FrameworkContentElement.ToolTip\"&gt;&lt;/xref&gt;</ph> dependency property.","source":"Identifies the <xref href=\"System.Windows.FrameworkContentElement.ToolTip\"></xref> dependency property."}],"pos":[216438,216542],"yaml":true},{"content":"Searches for a resource with the specified key, and returns that resource if found.","nodes":[{"pos":[0,83],"content":"Searches for a resource with the specified key, and returns that resource if found.","nodes":[{"content":"Searches for a resource with the specified key, and returns that resource if found.","pos":[0,83]}]}],"pos":[217787,217871],"yaml":true},{"content":"If the resource is not found on the calling element, the parent tree is searched using the logical tree, in the same way that the tree would be searched if a dynamic resource reference were requested by key at run-time.  \n  \n Typically you would immediately cast the return value to the type of the property that you were attempting to set with the returned resource value.  \n  \n The <xref:System.Windows.FrameworkContentElement.FindResource%2A> method has similar behavior, except that it will throw an exception in the case of not finding a resource with the provided key.","nodes":[{"pos":[0,219],"content":"If the resource is not found on the calling element, the parent tree is searched using the logical tree, in the same way that the tree would be searched if a dynamic resource reference were requested by key at run-time.","nodes":[{"content":"If the resource is not found on the calling element, the parent tree is searched using the logical tree, in the same way that the tree would be searched if a dynamic resource reference were requested by key at run-time.","pos":[0,219]}]},{"pos":[226,373],"content":"Typically you would immediately cast the return value to the type of the property that you were attempting to set with the returned resource value.","nodes":[{"content":"Typically you would immediately cast the return value to the type of the property that you were attempting to set with the returned resource value.","pos":[0,147]}]},{"pos":[380,574],"content":"The <xref:System.Windows.FrameworkContentElement.FindResource%2A> method has similar behavior, except that it will throw an exception in the case of not finding a resource with the provided key.","nodes":[{"content":"The <ph id=\"ph1\">&lt;xref:System.Windows.FrameworkContentElement.FindResource%2A&gt;</ph> method has similar behavior, except that it will throw an exception in the case of not finding a resource with the provided key.","pos":[0,194],"source":"The <xref:System.Windows.FrameworkContentElement.FindResource%2A> method has similar behavior, except that it will throw an exception in the case of not finding a resource with the provided key."}]}],"pos":[217882,218463],"yaml":true,"extradata":"MT"},{"content":"Key identifier of the resource to be found.","nodes":[{"pos":[0,43],"content":"Key identifier of the resource to be found.","nodes":[{"content":"Key identifier of the resource to be found.","pos":[0,43]}]}],"pos":[219128,219172],"yaml":true},{"content":"The found resource. If no resource was found, `null` is returned.","nodes":[{"pos":[0,65],"content":"The found resource. If no resource was found, `null` is returned.","nodes":[{"content":"The found resource.","pos":[0,19]},{"content":"If no resource was found, <ph id=\"ph1\">`null`</ph> is returned.","pos":[20,65],"source":" If no resource was found, `null` is returned."}]}],"pos":[219229,219295],"yaml":true},{"content":"Occurs when the element is removed from an element tree of loaded elements.","nodes":[{"pos":[0,75],"content":"Occurs when the element is removed from an element tree of loaded elements.","nodes":[{"content":"Occurs when the element is removed from an element tree of loaded elements.","pos":[0,75]}]}],"pos":[220319,220395],"yaml":true},{"content":"Direct routed events do not follow a route, they are only handled within the same element on which they are raised. Direct routed events do support other routed event behavior: they support an accessible handlers collection, and can be used as an <xref:System.Windows.EventTrigger> in a style.  \n  \n<a name=\"routedEventInfo_Unloaded\"></a>   \n## Routed Event Information  \n  \n|||  \n|-|-|  \n|Identifier field|<xref:System.Windows.FrameworkContentElement.UnloadedEvent>|  \n|Routing strategy|Direct|  \n|Delegate|<xref:System.Windows.RoutedEventHandler>|","nodes":[{"pos":[0,293],"content":"Direct routed events do not follow a route, they are only handled within the same element on which they are raised. Direct routed events do support other routed event behavior: they support an accessible handlers collection, and can be used as an <xref:System.Windows.EventTrigger> in a style.","nodes":[{"content":"Direct routed events do not follow a route, they are only handled within the same element on which they are raised. Direct routed events do support other routed event behavior: they support an accessible handlers collection, and can be used as an <xref:System.Windows.EventTrigger> in a style.","pos":[0,293],"nodes":[{"content":"Direct routed events do not follow a route, they are only handled within the same element on which they are raised.","pos":[0,115]},{"content":"Direct routed events do support other routed event behavior: they support an accessible handlers collection, and can be used as an <ph id=\"ph1\">&lt;xref:System.Windows.EventTrigger&gt;</ph> in a style.","pos":[116,293],"source":" Direct routed events do support other routed event behavior: they support an accessible handlers collection, and can be used as an <xref:System.Windows.EventTrigger> in a style."}]}]},{"pos":[345,369],"content":"Routed Event Information","linkify":"Routed Event Information","nodes":[{"content":"Routed Event Information","pos":[0,24]}]},{"pos":[390,406],"content":"Identifier field","nodes":[{"content":"Identifier field","pos":[0,16]}]},{"pos":[407,466],"content":"<xref:System.Windows.FrameworkContentElement.UnloadedEvent>","nodes":[]},{"pos":[471,487],"content":"Routing strategy","nodes":[{"content":"Routing strategy","pos":[0,16]}]},{"pos":[488,494],"content":"Direct","nodes":[{"content":"Direct","pos":[0,6]}]},{"pos":[499,507],"content":"Delegate","nodes":[{"content":"Delegate","pos":[0,8]}]},{"pos":[508,548],"content":"<xref:System.Windows.RoutedEventHandler>","nodes":[]}],"pos":[220406,220969],"yaml":true,"extradata":"MT"},{"content":"Identifies the <xref href=\"System.Windows.FrameworkContentElement.Unloaded\"></xref> [Routed Events Overview](~/docs/framework/wpf/advanced/routed-events-overview.md).","nodes":[{"pos":[0,166],"content":"Identifies the <ph id=\"ph1\">&lt;xref href=\"System.Windows.FrameworkContentElement.Unloaded\"&gt;&lt;/xref&gt;</ph> <bpt id=\"p1\">[</bpt>Routed Events Overview<ept id=\"p1\">](~/docs/framework/wpf/advanced/routed-events-overview.md)</ept>.","source":"Identifies the <xref href=\"System.Windows.FrameworkContentElement.Unloaded\"></xref> [Routed Events Overview](~/docs/framework/wpf/advanced/routed-events-overview.md)."}],"pos":[222115,222282],"yaml":true},{"content":"Event identifier objects are created when routed events are registered (see <xref:System.Windows.EventManager.RegisterRoutedEvent%2A>) and can then be used to add class handlers (see <xref:System.Windows.EventManager.RegisterClassHandler%2A>). Identifier objects contain an identifying name, owner type, handler type, routing strategy, and a utility method for adding owners for the event.","nodes":[{"pos":[0,389],"content":"Event identifier objects are created when routed events are registered (see <xref:System.Windows.EventManager.RegisterRoutedEvent%2A>) and can then be used to add class handlers (see <xref:System.Windows.EventManager.RegisterClassHandler%2A>). Identifier objects contain an identifying name, owner type, handler type, routing strategy, and a utility method for adding owners for the event.","nodes":[{"content":"Event identifier objects are created when routed events are registered (see <xref:System.Windows.EventManager.RegisterRoutedEvent%2A>) and can then be used to add class handlers (see <xref:System.Windows.EventManager.RegisterClassHandler%2A>). Identifier objects contain an identifying name, owner type, handler type, routing strategy, and a utility method for adding owners for the event.","pos":[0,389],"nodes":[{"content":"Event identifier objects are created when routed events are registered (see <ph id=\"ph1\">&lt;xref:System.Windows.EventManager.RegisterRoutedEvent%2A&gt;</ph>) and can then be used to add class handlers (see <ph id=\"ph2\">&lt;xref:System.Windows.EventManager.RegisterClassHandler%2A&gt;</ph>).","pos":[0,243],"source":"Event identifier objects are created when routed events are registered (see <xref:System.Windows.EventManager.RegisterRoutedEvent%2A>) and can then be used to add class handlers (see <xref:System.Windows.EventManager.RegisterClassHandler%2A>)."},{"content":"Identifier objects contain an identifying name, owner type, handler type, routing strategy, and a utility method for adding owners for the event.","pos":[244,389]}]}]}],"pos":[222293,222683],"yaml":true,"extradata":"MT"},{"content":"Simplifies access to the <xref href=\"System.Windows.NameScope\"></xref> de-registration method.","nodes":[{"pos":[0,94],"content":"Simplifies access to the <ph id=\"ph1\">&lt;xref href=\"System.Windows.NameScope\"&gt;&lt;/xref&gt;</ph> de-registration method.","source":"Simplifies access to the <xref href=\"System.Windows.NameScope\"></xref> de-registration method."}],"pos":[223906,224001],"yaml":true},{"content":"You only need to un-register names if you intend to re-register another element with that same name.","nodes":[{"pos":[0,100],"content":"You only need to un-register names if you intend to re-register another element with that same name.","nodes":[{"content":"You only need to un-register names if you intend to re-register another element with that same name.","pos":[0,100]}]}],"pos":[224012,224113],"yaml":true,"extradata":"MT"},{"content":"Name of the name-object pair to remove from the current scope.","nodes":[{"pos":[0,62],"content":"Name of the name-object pair to remove from the current scope.","nodes":[{"content":"Name of the name-object pair to remove from the current scope.","pos":[0,62]}]}],"pos":[224254,224317],"yaml":true},{"content":"Reapplies the default style to the current <xref href=\"System.Windows.FrameworkContentElement\"></xref>.","nodes":[{"pos":[0,103],"content":"Reapplies the default style to the current <ph id=\"ph1\">&lt;xref href=\"System.Windows.FrameworkContentElement\"&gt;&lt;/xref&gt;</ph>.","source":"Reapplies the default style to the current <xref href=\"System.Windows.FrameworkContentElement\"></xref>."}],"pos":[225407,225511],"yaml":true},{"content":"For a description of this member, see the <xref href=\"System.Windows.Markup.IQueryAmbient.IsAmbientPropertyAvailable(System.String)\"></xref> method.","nodes":[{"pos":[0,148],"content":"For a description of this member, see the <ph id=\"ph1\">&lt;xref href=\"System.Windows.Markup.IQueryAmbient.IsAmbientPropertyAvailable(System.String)\"&gt;&lt;/xref&gt;</ph> method.","source":"For a description of this member, see the <xref href=\"System.Windows.Markup.IQueryAmbient.IsAmbientPropertyAvailable(System.String)\"></xref> method."}],"pos":[226957,227106],"yaml":true},{"content":"This member is an explicit interface member implementation. It can be used only when the <xref:System.Windows.FrameworkContentElement> instance is cast to an <xref:System.Windows.Markup.IQueryAmbient> interface.","nodes":[{"pos":[0,211],"content":"This member is an explicit interface member implementation. It can be used only when the <xref:System.Windows.FrameworkContentElement> instance is cast to an <xref:System.Windows.Markup.IQueryAmbient> interface.","nodes":[{"content":"This member is an explicit interface member implementation. It can be used only when the <xref:System.Windows.FrameworkContentElement> instance is cast to an <xref:System.Windows.Markup.IQueryAmbient> interface.","pos":[0,211],"nodes":[{"content":"This member is an explicit interface member implementation.","pos":[0,59]},{"content":"It can be used only when the <ph id=\"ph1\">&lt;xref:System.Windows.FrameworkContentElement&gt;</ph> instance is cast to an <ph id=\"ph2\">&lt;xref:System.Windows.Markup.IQueryAmbient&gt;</ph> interface.","pos":[60,211],"source":" It can be used only when the <xref:System.Windows.FrameworkContentElement> instance is cast to an <xref:System.Windows.Markup.IQueryAmbient> interface."}]}]}],"pos":[227117,227329],"yaml":true,"extradata":"MT"},{"content":"The name of the requested ambient property.","nodes":[{"pos":[0,43],"content":"The name of the requested ambient property.","nodes":[{"content":"The name of the requested ambient property.","pos":[0,43]}]}],"pos":[227505,227549],"yaml":true},{"content":"`true` if <code>propertyName</code> is available; otherwise, `false`.","nodes":[{"pos":[0,69],"content":"<ph id=\"ph1\">`true`</ph> if <bpt id=\"p1\">&lt;code&gt;</bpt><ph id=\"ph2\">propertyName</ph><ept id=\"p1\">&lt;/code&gt;</ept> is available; otherwise, <ph id=\"ph3\">`false`</ph>.","source":"`true` if <code>propertyName</code> is available; otherwise, `false`."}],"pos":[227607,227679],"yaml":true}],"content":"### YamlMime:ManagedReference\nitems:\n- uid: System.Windows.FrameworkContentElement\n  commentId: T:System.Windows.FrameworkContentElement\n  id: FrameworkContentElement\n  children:\n  - System.Windows.FrameworkContentElement.#ctor\n  - System.Windows.FrameworkContentElement.AddLogicalChild(System.Object)\n  - System.Windows.FrameworkContentElement.BeginInit\n  - System.Windows.FrameworkContentElement.BeginStoryboard(System.Windows.Media.Animation.Storyboard)\n  - System.Windows.FrameworkContentElement.BeginStoryboard(System.Windows.Media.Animation.Storyboard,System.Windows.Media.Animation.HandoffBehavior)\n  - System.Windows.FrameworkContentElement.BeginStoryboard(System.Windows.Media.Animation.Storyboard,System.Windows.Media.Animation.HandoffBehavior,System.Boolean)\n  - System.Windows.FrameworkContentElement.BindingGroup\n  - System.Windows.FrameworkContentElement.BindingGroupProperty\n  - System.Windows.FrameworkContentElement.BringIntoView\n  - System.Windows.FrameworkContentElement.ContextMenu\n  - System.Windows.FrameworkContentElement.ContextMenuClosing\n  - System.Windows.FrameworkContentElement.ContextMenuClosingEvent\n  - System.Windows.FrameworkContentElement.ContextMenuOpening\n  - System.Windows.FrameworkContentElement.ContextMenuOpeningEvent\n  - System.Windows.FrameworkContentElement.ContextMenuProperty\n  - System.Windows.FrameworkContentElement.Cursor\n  - System.Windows.FrameworkContentElement.CursorProperty\n  - System.Windows.FrameworkContentElement.DataContext\n  - System.Windows.FrameworkContentElement.DataContextChanged\n  - System.Windows.FrameworkContentElement.DataContextProperty\n  - System.Windows.FrameworkContentElement.DefaultStyleKey\n  - System.Windows.FrameworkContentElement.DefaultStyleKeyProperty\n  - System.Windows.FrameworkContentElement.EndInit\n  - System.Windows.FrameworkContentElement.FindName(System.String)\n  - System.Windows.FrameworkContentElement.FindResource(System.Object)\n  - System.Windows.FrameworkContentElement.FocusVisualStyle\n  - System.Windows.FrameworkContentElement.FocusVisualStyleProperty\n  - System.Windows.FrameworkContentElement.ForceCursor\n  - System.Windows.FrameworkContentElement.ForceCursorProperty\n  - System.Windows.FrameworkContentElement.GetBindingExpression(System.Windows.DependencyProperty)\n  - System.Windows.FrameworkContentElement.GetUIParentCore\n  - System.Windows.FrameworkContentElement.Initialized\n  - System.Windows.FrameworkContentElement.InputScope\n  - System.Windows.FrameworkContentElement.InputScopeProperty\n  - System.Windows.FrameworkContentElement.IsInitialized\n  - System.Windows.FrameworkContentElement.IsLoaded\n  - System.Windows.FrameworkContentElement.Language\n  - System.Windows.FrameworkContentElement.LanguageProperty\n  - System.Windows.FrameworkContentElement.Loaded\n  - System.Windows.FrameworkContentElement.LoadedEvent\n  - System.Windows.FrameworkContentElement.LogicalChildren\n  - System.Windows.FrameworkContentElement.MoveFocus(System.Windows.Input.TraversalRequest)\n  - System.Windows.FrameworkContentElement.Name\n  - System.Windows.FrameworkContentElement.NameProperty\n  - System.Windows.FrameworkContentElement.OnContextMenuClosing(System.Windows.Controls.ContextMenuEventArgs)\n  - System.Windows.FrameworkContentElement.OnContextMenuOpening(System.Windows.Controls.ContextMenuEventArgs)\n  - System.Windows.FrameworkContentElement.OnGotFocus(System.Windows.RoutedEventArgs)\n  - System.Windows.FrameworkContentElement.OnInitialized(System.EventArgs)\n  - System.Windows.FrameworkContentElement.OnPropertyChanged(System.Windows.DependencyPropertyChangedEventArgs)\n  - System.Windows.FrameworkContentElement.OnStyleChanged(System.Windows.Style,System.Windows.Style)\n  - System.Windows.FrameworkContentElement.OnToolTipClosing(System.Windows.Controls.ToolTipEventArgs)\n  - System.Windows.FrameworkContentElement.OnToolTipOpening(System.Windows.Controls.ToolTipEventArgs)\n  - System.Windows.FrameworkContentElement.OverridesDefaultStyle\n  - System.Windows.FrameworkContentElement.OverridesDefaultStyleProperty\n  - System.Windows.FrameworkContentElement.Parent\n  - System.Windows.FrameworkContentElement.PredictFocus(System.Windows.Input.FocusNavigationDirection)\n  - System.Windows.FrameworkContentElement.RegisterName(System.String,System.Object)\n  - System.Windows.FrameworkContentElement.RemoveLogicalChild(System.Object)\n  - System.Windows.FrameworkContentElement.Resources\n  - System.Windows.FrameworkContentElement.SetBinding(System.Windows.DependencyProperty,System.String)\n  - System.Windows.FrameworkContentElement.SetBinding(System.Windows.DependencyProperty,System.Windows.Data.BindingBase)\n  - System.Windows.FrameworkContentElement.SetResourceReference(System.Windows.DependencyProperty,System.Object)\n  - System.Windows.FrameworkContentElement.ShouldSerializeResources\n  - System.Windows.FrameworkContentElement.ShouldSerializeStyle\n  - System.Windows.FrameworkContentElement.SourceUpdated\n  - System.Windows.FrameworkContentElement.Style\n  - System.Windows.FrameworkContentElement.StyleProperty\n  - System.Windows.FrameworkContentElement.Tag\n  - System.Windows.FrameworkContentElement.TagProperty\n  - System.Windows.FrameworkContentElement.TargetUpdated\n  - System.Windows.FrameworkContentElement.TemplatedParent\n  - System.Windows.FrameworkContentElement.ToolTip\n  - System.Windows.FrameworkContentElement.ToolTipClosing\n  - System.Windows.FrameworkContentElement.ToolTipClosingEvent\n  - System.Windows.FrameworkContentElement.ToolTipOpening\n  - System.Windows.FrameworkContentElement.ToolTipOpeningEvent\n  - System.Windows.FrameworkContentElement.ToolTipProperty\n  - System.Windows.FrameworkContentElement.TryFindResource(System.Object)\n  - System.Windows.FrameworkContentElement.Unloaded\n  - System.Windows.FrameworkContentElement.UnloadedEvent\n  - System.Windows.FrameworkContentElement.UnregisterName(System.String)\n  - System.Windows.FrameworkContentElement.UpdateDefaultStyle\n  - System.Windows.FrameworkContentElement.System#Windows#Markup#IQueryAmbient#IsAmbientPropertyAvailable(System.String)\n  langs:\n  - csharp\n  name: FrameworkContentElement\n  nameWithType: FrameworkContentElement\n  fullName: System.Windows.FrameworkContentElement\n  type: Class\n  assemblies:\n  - PresentationFramework\n  namespace: System.Windows\n  summary: <xref href=\"System.Windows.FrameworkContentElement\"></xref> is the WPF framework-level implementation and expansion of the <xref href=\"System.Windows.ContentElement\"></xref> base class. <xref href=\"System.Windows.FrameworkContentElement\"></xref> adds support for additional input APIs (including tooltips and context menus), storyboards, data context for data binding, styles support, and logical tree helper APIs.\n  remarks: \"<xref:System.Windows.FrameworkContentElement> does not yet define its own rendering behavior; instantiating an actual <xref:System.Windows.FrameworkContentElement> class instance in code or markup is possible but displays nothing in a [!INCLUDE[TLA2#tla_winclient](~/includes/tla2sharptla-winclient-md.md)] application [!INCLUDE[TLA#tla_ui](~/includes/tlasharptla-ui-md.md)]. Rendering logic must be provided by classes that take <xref:System.Windows.FrameworkContentElement> child elements as part of their content model, or in <xref:System.Windows.FrameworkContentElement> derived classes.  \\n  \\n <xref:System.Windows.FrameworkContentElement> deliberately parallels many of the same [!INCLUDE[TLA2#tla_api#plural](~/includes/tla2sharptla-apisharpplural-md.md)] as <xref:System.Windows.FrameworkElement>. Note that certain [!INCLUDE[TLA2#tla_api#plural](~/includes/tla2sharptla-apisharpplural-md.md)] found on <xref:System.Windows.FrameworkElement> will not have a <xref:System.Windows.FrameworkContentElement> equivalent. Several of the <xref:System.Windows.FrameworkElement> [!INCLUDE[TLA2#tla_api#plural](~/includes/tla2sharptla-apisharpplural-md.md)] are for functionality such as geometry representation or layout, which are not relevant for a <xref:System.Windows.FrameworkContentElement>.  \\n  \\n The majority of existing <xref:System.Windows.FrameworkContentElement> derived classes will be found in the <xref:System.Windows.Documents> namespace. Many of these derived classes implement elements for the flow document model. Certain derived classes such as <xref:System.Windows.Documents.Hyperlink> have some control-like functionality, but are derived from <xref:System.Windows.FrameworkContentElement> such that the control-like elements can still participate in the flow document model.\"\n  syntax:\n    content: >-\n      [System.Windows.Markup.RuntimeNameProperty(\"Name\")]\n\n      [System.Windows.Markup.UsableDuringInitialization(true)]\n\n      [System.Windows.Markup.XmlLangProperty(\"Language\")]\n\n      [System.Windows.StyleTypedProperty(Property=\"FocusVisualStyle\", StyleTargetType=typeof(System.Windows.Controls.Control))]\n\n      public class FrameworkContentElement : System.Windows.ContentElement, System.ComponentModel.ISupportInitialize, System.Windows.IFrameworkInputElement, System.Windows.Markup.IQueryAmbient\n  inheritance:\n  - System.Object\n  - System.Windows.Threading.DispatcherObject\n  - System.Windows.DependencyObject\n  - System.Windows.ContentElement\n  derivedClasses:\n  - System.Windows.Controls.DefinitionBase\n  - System.Windows.Documents.FixedDocument\n  - System.Windows.Documents.FixedDocumentSequence\n  - System.Windows.Documents.FlowDocument\n  - System.Windows.Documents.TableColumn\n  - System.Windows.Documents.TextElement\n  implements:\n  - System.ComponentModel.ISupportInitialize\n  - System.Windows.IFrameworkInputElement\n  - System.Windows.Markup.IQueryAmbient\n  inheritedMembers:\n  - System.Object.Equals(System.Object,System.Object)\n  - System.Object.GetType\n  - System.Object.MemberwiseClone\n  - System.Object.ReferenceEquals(System.Object,System.Object)\n  - System.Object.ToString\n  - System.Windows.ContentElement.AddHandler(System.Windows.RoutedEvent,System.Delegate)\n  - System.Windows.ContentElement.AddHandler(System.Windows.RoutedEvent,System.Delegate,System.Boolean)\n  - System.Windows.ContentElement.AddToEventRoute(System.Windows.EventRoute,System.Windows.RoutedEventArgs)\n  - System.Windows.ContentElement.AllowDrop\n  - System.Windows.ContentElement.AllowDropProperty\n  - System.Windows.ContentElement.ApplyAnimationClock(System.Windows.DependencyProperty,System.Windows.Media.Animation.AnimationClock)\n  - System.Windows.ContentElement.ApplyAnimationClock(System.Windows.DependencyProperty,System.Windows.Media.Animation.AnimationClock,System.Windows.Media.Animation.HandoffBehavior)\n  - System.Windows.ContentElement.AreAnyTouchesCaptured\n  - System.Windows.ContentElement.AreAnyTouchesCapturedProperty\n  - System.Windows.ContentElement.AreAnyTouchesCapturedWithin\n  - System.Windows.ContentElement.AreAnyTouchesCapturedWithinProperty\n  - System.Windows.ContentElement.AreAnyTouchesDirectlyOver\n  - System.Windows.ContentElement.AreAnyTouchesDirectlyOverProperty\n  - System.Windows.ContentElement.AreAnyTouchesOver\n  - System.Windows.ContentElement.AreAnyTouchesOverProperty\n  - System.Windows.ContentElement.BeginAnimation(System.Windows.DependencyProperty,System.Windows.Media.Animation.AnimationTimeline)\n  - System.Windows.ContentElement.BeginAnimation(System.Windows.DependencyProperty,System.Windows.Media.Animation.AnimationTimeline,System.Windows.Media.Animation.HandoffBehavior)\n  - System.Windows.ContentElement.CaptureMouse\n  - System.Windows.ContentElement.CaptureStylus\n  - System.Windows.ContentElement.CaptureTouch(System.Windows.Input.TouchDevice)\n  - System.Windows.ContentElement.CommandBindings\n  - System.Windows.ContentElement.DragEnter\n  - System.Windows.ContentElement.DragEnterEvent\n  - System.Windows.ContentElement.DragLeave\n  - System.Windows.ContentElement.DragLeaveEvent\n  - System.Windows.ContentElement.DragOver\n  - System.Windows.ContentElement.DragOverEvent\n  - System.Windows.ContentElement.Drop\n  - System.Windows.ContentElement.DropEvent\n  - System.Windows.ContentElement.Focus\n  - System.Windows.ContentElement.Focusable\n  - System.Windows.ContentElement.FocusableChanged\n  - System.Windows.ContentElement.FocusableProperty\n  - System.Windows.ContentElement.GetAnimationBaseValue(System.Windows.DependencyProperty)\n  - System.Windows.ContentElement.GiveFeedback\n  - System.Windows.ContentElement.GiveFeedbackEvent\n  - System.Windows.ContentElement.GotFocus\n  - System.Windows.ContentElement.GotFocusEvent\n  - System.Windows.ContentElement.GotKeyboardFocus\n  - System.Windows.ContentElement.GotKeyboardFocusEvent\n  - System.Windows.ContentElement.GotMouseCapture\n  - System.Windows.ContentElement.GotMouseCaptureEvent\n  - System.Windows.ContentElement.GotStylusCapture\n  - System.Windows.ContentElement.GotStylusCaptureEvent\n  - System.Windows.ContentElement.GotTouchCapture\n  - System.Windows.ContentElement.GotTouchCaptureEvent\n  - System.Windows.ContentElement.HasAnimatedProperties\n  - System.Windows.ContentElement.InputBindings\n  - System.Windows.ContentElement.IsEnabled\n  - System.Windows.ContentElement.IsEnabledChanged\n  - System.Windows.ContentElement.IsEnabledCore\n  - System.Windows.ContentElement.IsEnabledProperty\n  - System.Windows.ContentElement.IsFocused\n  - System.Windows.ContentElement.IsFocusedProperty\n  - System.Windows.ContentElement.IsInputMethodEnabled\n  - System.Windows.ContentElement.IsKeyboardFocused\n  - System.Windows.ContentElement.IsKeyboardFocusedChanged\n  - System.Windows.ContentElement.IsKeyboardFocusedProperty\n  - System.Windows.ContentElement.IsKeyboardFocusWithin\n  - System.Windows.ContentElement.IsKeyboardFocusWithinChanged\n  - System.Windows.ContentElement.IsKeyboardFocusWithinProperty\n  - System.Windows.ContentElement.IsMouseCaptured\n  - System.Windows.ContentElement.IsMouseCapturedChanged\n  - System.Windows.ContentElement.IsMouseCapturedProperty\n  - System.Windows.ContentElement.IsMouseCaptureWithin\n  - System.Windows.ContentElement.IsMouseCaptureWithinChanged\n  - System.Windows.ContentElement.IsMouseCaptureWithinProperty\n  - System.Windows.ContentElement.IsMouseDirectlyOver\n  - System.Windows.ContentElement.IsMouseDirectlyOverChanged\n  - System.Windows.ContentElement.IsMouseDirectlyOverProperty\n  - System.Windows.ContentElement.IsMouseOver\n  - System.Windows.ContentElement.IsMouseOverProperty\n  - System.Windows.ContentElement.IsStylusCaptured\n  - System.Windows.ContentElement.IsStylusCapturedChanged\n  - System.Windows.ContentElement.IsStylusCapturedProperty\n  - System.Windows.ContentElement.IsStylusCaptureWithin\n  - System.Windows.ContentElement.IsStylusCaptureWithinChanged\n  - System.Windows.ContentElement.IsStylusCaptureWithinProperty\n  - System.Windows.ContentElement.IsStylusDirectlyOver\n  - System.Windows.ContentElement.IsStylusDirectlyOverChanged\n  - System.Windows.ContentElement.IsStylusDirectlyOverProperty\n  - System.Windows.ContentElement.IsStylusOver\n  - System.Windows.ContentElement.IsStylusOverProperty\n  - System.Windows.ContentElement.KeyDown\n  - System.Windows.ContentElement.KeyDownEvent\n  - System.Windows.ContentElement.KeyUp\n  - System.Windows.ContentElement.KeyUpEvent\n  - System.Windows.ContentElement.LostFocus\n  - System.Windows.ContentElement.LostFocusEvent\n  - System.Windows.ContentElement.LostKeyboardFocus\n  - System.Windows.ContentElement.LostKeyboardFocusEvent\n  - System.Windows.ContentElement.LostMouseCapture\n  - System.Windows.ContentElement.LostMouseCaptureEvent\n  - System.Windows.ContentElement.LostStylusCapture\n  - System.Windows.ContentElement.LostStylusCaptureEvent\n  - System.Windows.ContentElement.LostTouchCapture\n  - System.Windows.ContentElement.LostTouchCaptureEvent\n  - System.Windows.ContentElement.MouseDown\n  - System.Windows.ContentElement.MouseDownEvent\n  - System.Windows.ContentElement.MouseEnter\n  - System.Windows.ContentElement.MouseEnterEvent\n  - System.Windows.ContentElement.MouseLeave\n  - System.Windows.ContentElement.MouseLeaveEvent\n  - System.Windows.ContentElement.MouseLeftButtonDown\n  - System.Windows.ContentElement.MouseLeftButtonDownEvent\n  - System.Windows.ContentElement.MouseLeftButtonUp\n  - System.Windows.ContentElement.MouseLeftButtonUpEvent\n  - System.Windows.ContentElement.MouseMove\n  - System.Windows.ContentElement.MouseMoveEvent\n  - System.Windows.ContentElement.MouseRightButtonDown\n  - System.Windows.ContentElement.MouseRightButtonDownEvent\n  - System.Windows.ContentElement.MouseRightButtonUp\n  - System.Windows.ContentElement.MouseRightButtonUpEvent\n  - System.Windows.ContentElement.MouseUp\n  - System.Windows.ContentElement.MouseUpEvent\n  - System.Windows.ContentElement.MouseWheel\n  - System.Windows.ContentElement.MouseWheelEvent\n  - System.Windows.ContentElement.OnCreateAutomationPeer\n  - System.Windows.ContentElement.OnDragEnter(System.Windows.DragEventArgs)\n  - System.Windows.ContentElement.OnDragLeave(System.Windows.DragEventArgs)\n  - System.Windows.ContentElement.OnDragOver(System.Windows.DragEventArgs)\n  - System.Windows.ContentElement.OnDrop(System.Windows.DragEventArgs)\n  - System.Windows.ContentElement.OnGiveFeedback(System.Windows.GiveFeedbackEventArgs)\n  - System.Windows.ContentElement.OnGotKeyboardFocus(System.Windows.Input.KeyboardFocusChangedEventArgs)\n  - System.Windows.ContentElement.OnGotMouseCapture(System.Windows.Input.MouseEventArgs)\n  - System.Windows.ContentElement.OnGotStylusCapture(System.Windows.Input.StylusEventArgs)\n  - System.Windows.ContentElement.OnGotTouchCapture(System.Windows.Input.TouchEventArgs)\n  - System.Windows.ContentElement.OnIsKeyboardFocusedChanged(System.Windows.DependencyPropertyChangedEventArgs)\n  - System.Windows.ContentElement.OnIsKeyboardFocusWithinChanged(System.Windows.DependencyPropertyChangedEventArgs)\n  - System.Windows.ContentElement.OnIsMouseCapturedChanged(System.Windows.DependencyPropertyChangedEventArgs)\n  - System.Windows.ContentElement.OnIsMouseCaptureWithinChanged(System.Windows.DependencyPropertyChangedEventArgs)\n  - System.Windows.ContentElement.OnIsMouseDirectlyOverChanged(System.Windows.DependencyPropertyChangedEventArgs)\n  - System.Windows.ContentElement.OnIsStylusCapturedChanged(System.Windows.DependencyPropertyChangedEventArgs)\n  - System.Windows.ContentElement.OnIsStylusCaptureWithinChanged(System.Windows.DependencyPropertyChangedEventArgs)\n  - System.Windows.ContentElement.OnIsStylusDirectlyOverChanged(System.Windows.DependencyPropertyChangedEventArgs)\n  - System.Windows.ContentElement.OnKeyDown(System.Windows.Input.KeyEventArgs)\n  - System.Windows.ContentElement.OnKeyUp(System.Windows.Input.KeyEventArgs)\n  - System.Windows.ContentElement.OnLostFocus(System.Windows.RoutedEventArgs)\n  - System.Windows.ContentElement.OnLostKeyboardFocus(System.Windows.Input.KeyboardFocusChangedEventArgs)\n  - System.Windows.ContentElement.OnLostMouseCapture(System.Windows.Input.MouseEventArgs)\n  - System.Windows.ContentElement.OnLostStylusCapture(System.Windows.Input.StylusEventArgs)\n  - System.Windows.ContentElement.OnLostTouchCapture(System.Windows.Input.TouchEventArgs)\n  - System.Windows.ContentElement.OnMouseDown(System.Windows.Input.MouseButtonEventArgs)\n  - System.Windows.ContentElement.OnMouseEnter(System.Windows.Input.MouseEventArgs)\n  - System.Windows.ContentElement.OnMouseLeave(System.Windows.Input.MouseEventArgs)\n  - System.Windows.ContentElement.OnMouseLeftButtonDown(System.Windows.Input.MouseButtonEventArgs)\n  - System.Windows.ContentElement.OnMouseLeftButtonUp(System.Windows.Input.MouseButtonEventArgs)\n  - System.Windows.ContentElement.OnMouseMove(System.Windows.Input.MouseEventArgs)\n  - System.Windows.ContentElement.OnMouseRightButtonDown(System.Windows.Input.MouseButtonEventArgs)\n  - System.Windows.ContentElement.OnMouseRightButtonUp(System.Windows.Input.MouseButtonEventArgs)\n  - System.Windows.ContentElement.OnMouseUp(System.Windows.Input.MouseButtonEventArgs)\n  - System.Windows.ContentElement.OnMouseWheel(System.Windows.Input.MouseWheelEventArgs)\n  - System.Windows.ContentElement.OnPreviewDragEnter(System.Windows.DragEventArgs)\n  - System.Windows.ContentElement.OnPreviewDragLeave(System.Windows.DragEventArgs)\n  - System.Windows.ContentElement.OnPreviewDragOver(System.Windows.DragEventArgs)\n  - System.Windows.ContentElement.OnPreviewDrop(System.Windows.DragEventArgs)\n  - System.Windows.ContentElement.OnPreviewGiveFeedback(System.Windows.GiveFeedbackEventArgs)\n  - System.Windows.ContentElement.OnPreviewGotKeyboardFocus(System.Windows.Input.KeyboardFocusChangedEventArgs)\n  - System.Windows.ContentElement.OnPreviewKeyDown(System.Windows.Input.KeyEventArgs)\n  - System.Windows.ContentElement.OnPreviewKeyUp(System.Windows.Input.KeyEventArgs)\n  - System.Windows.ContentElement.OnPreviewLostKeyboardFocus(System.Windows.Input.KeyboardFocusChangedEventArgs)\n  - System.Windows.ContentElement.OnPreviewMouseDown(System.Windows.Input.MouseButtonEventArgs)\n  - System.Windows.ContentElement.OnPreviewMouseLeftButtonDown(System.Windows.Input.MouseButtonEventArgs)\n  - System.Windows.ContentElement.OnPreviewMouseLeftButtonUp(System.Windows.Input.MouseButtonEventArgs)\n  - System.Windows.ContentElement.OnPreviewMouseMove(System.Windows.Input.MouseEventArgs)\n  - System.Windows.ContentElement.OnPreviewMouseRightButtonDown(System.Windows.Input.MouseButtonEventArgs)\n  - System.Windows.ContentElement.OnPreviewMouseRightButtonUp(System.Windows.Input.MouseButtonEventArgs)\n  - System.Windows.ContentElement.OnPreviewMouseUp(System.Windows.Input.MouseButtonEventArgs)\n  - System.Windows.ContentElement.OnPreviewMouseWheel(System.Windows.Input.MouseWheelEventArgs)\n  - System.Windows.ContentElement.OnPreviewQueryContinueDrag(System.Windows.QueryContinueDragEventArgs)\n  - System.Windows.ContentElement.OnPreviewStylusButtonDown(System.Windows.Input.StylusButtonEventArgs)\n  - System.Windows.ContentElement.OnPreviewStylusButtonUp(System.Windows.Input.StylusButtonEventArgs)\n  - System.Windows.ContentElement.OnPreviewStylusDown(System.Windows.Input.StylusDownEventArgs)\n  - System.Windows.ContentElement.OnPreviewStylusInAirMove(System.Windows.Input.StylusEventArgs)\n  - System.Windows.ContentElement.OnPreviewStylusInRange(System.Windows.Input.StylusEventArgs)\n  - System.Windows.ContentElement.OnPreviewStylusMove(System.Windows.Input.StylusEventArgs)\n  - System.Windows.ContentElement.OnPreviewStylusOutOfRange(System.Windows.Input.StylusEventArgs)\n  - System.Windows.ContentElement.OnPreviewStylusSystemGesture(System.Windows.Input.StylusSystemGestureEventArgs)\n  - System.Windows.ContentElement.OnPreviewStylusUp(System.Windows.Input.StylusEventArgs)\n  - System.Windows.ContentElement.OnPreviewTextInput(System.Windows.Input.TextCompositionEventArgs)\n  - System.Windows.ContentElement.OnPreviewTouchDown(System.Windows.Input.TouchEventArgs)\n  - System.Windows.ContentElement.OnPreviewTouchMove(System.Windows.Input.TouchEventArgs)\n  - System.Windows.ContentElement.OnPreviewTouchUp(System.Windows.Input.TouchEventArgs)\n  - System.Windows.ContentElement.OnQueryContinueDrag(System.Windows.QueryContinueDragEventArgs)\n  - System.Windows.ContentElement.OnQueryCursor(System.Windows.Input.QueryCursorEventArgs)\n  - System.Windows.ContentElement.OnStylusButtonDown(System.Windows.Input.StylusButtonEventArgs)\n  - System.Windows.ContentElement.OnStylusButtonUp(System.Windows.Input.StylusButtonEventArgs)\n  - System.Windows.ContentElement.OnStylusDown(System.Windows.Input.StylusDownEventArgs)\n  - System.Windows.ContentElement.OnStylusEnter(System.Windows.Input.StylusEventArgs)\n  - System.Windows.ContentElement.OnStylusInAirMove(System.Windows.Input.StylusEventArgs)\n  - System.Windows.ContentElement.OnStylusInRange(System.Windows.Input.StylusEventArgs)\n  - System.Windows.ContentElement.OnStylusLeave(System.Windows.Input.StylusEventArgs)\n  - System.Windows.ContentElement.OnStylusMove(System.Windows.Input.StylusEventArgs)\n  - System.Windows.ContentElement.OnStylusOutOfRange(System.Windows.Input.StylusEventArgs)\n  - System.Windows.ContentElement.OnStylusSystemGesture(System.Windows.Input.StylusSystemGestureEventArgs)\n  - System.Windows.ContentElement.OnStylusUp(System.Windows.Input.StylusEventArgs)\n  - System.Windows.ContentElement.OnTextInput(System.Windows.Input.TextCompositionEventArgs)\n  - System.Windows.ContentElement.OnTouchDown(System.Windows.Input.TouchEventArgs)\n  - System.Windows.ContentElement.OnTouchEnter(System.Windows.Input.TouchEventArgs)\n  - System.Windows.ContentElement.OnTouchLeave(System.Windows.Input.TouchEventArgs)\n  - System.Windows.ContentElement.OnTouchMove(System.Windows.Input.TouchEventArgs)\n  - System.Windows.ContentElement.OnTouchUp(System.Windows.Input.TouchEventArgs)\n  - System.Windows.ContentElement.PreviewDragEnter\n  - System.Windows.ContentElement.PreviewDragEnterEvent\n  - System.Windows.ContentElement.PreviewDragLeave\n  - System.Windows.ContentElement.PreviewDragLeaveEvent\n  - System.Windows.ContentElement.PreviewDragOver\n  - System.Windows.ContentElement.PreviewDragOverEvent\n  - System.Windows.ContentElement.PreviewDrop\n  - System.Windows.ContentElement.PreviewDropEvent\n  - System.Windows.ContentElement.PreviewGiveFeedback\n  - System.Windows.ContentElement.PreviewGiveFeedbackEvent\n  - System.Windows.ContentElement.PreviewGotKeyboardFocus\n  - System.Windows.ContentElement.PreviewGotKeyboardFocusEvent\n  - System.Windows.ContentElement.PreviewKeyDown\n  - System.Windows.ContentElement.PreviewKeyDownEvent\n  - System.Windows.ContentElement.PreviewKeyUp\n  - System.Windows.ContentElement.PreviewKeyUpEvent\n  - System.Windows.ContentElement.PreviewLostKeyboardFocus\n  - System.Windows.ContentElement.PreviewLostKeyboardFocusEvent\n  - System.Windows.ContentElement.PreviewMouseDown\n  - System.Windows.ContentElement.PreviewMouseDownEvent\n  - System.Windows.ContentElement.PreviewMouseLeftButtonDown\n  - System.Windows.ContentElement.PreviewMouseLeftButtonDownEvent\n  - System.Windows.ContentElement.PreviewMouseLeftButtonUp\n  - System.Windows.ContentElement.PreviewMouseLeftButtonUpEvent\n  - System.Windows.ContentElement.PreviewMouseMove\n  - System.Windows.ContentElement.PreviewMouseMoveEvent\n  - System.Windows.ContentElement.PreviewMouseRightButtonDown\n  - System.Windows.ContentElement.PreviewMouseRightButtonDownEvent\n  - System.Windows.ContentElement.PreviewMouseRightButtonUp\n  - System.Windows.ContentElement.PreviewMouseRightButtonUpEvent\n  - System.Windows.ContentElement.PreviewMouseUp\n  - System.Windows.ContentElement.PreviewMouseUpEvent\n  - System.Windows.ContentElement.PreviewMouseWheel\n  - System.Windows.ContentElement.PreviewMouseWheelEvent\n  - System.Windows.ContentElement.PreviewQueryContinueDrag\n  - System.Windows.ContentElement.PreviewQueryContinueDragEvent\n  - System.Windows.ContentElement.PreviewStylusButtonDown\n  - System.Windows.ContentElement.PreviewStylusButtonDownEvent\n  - System.Windows.ContentElement.PreviewStylusButtonUp\n  - System.Windows.ContentElement.PreviewStylusButtonUpEvent\n  - System.Windows.ContentElement.PreviewStylusDown\n  - System.Windows.ContentElement.PreviewStylusDownEvent\n  - System.Windows.ContentElement.PreviewStylusInAirMove\n  - System.Windows.ContentElement.PreviewStylusInAirMoveEvent\n  - System.Windows.ContentElement.PreviewStylusInRange\n  - System.Windows.ContentElement.PreviewStylusInRangeEvent\n  - System.Windows.ContentElement.PreviewStylusMove\n  - System.Windows.ContentElement.PreviewStylusMoveEvent\n  - System.Windows.ContentElement.PreviewStylusOutOfRange\n  - System.Windows.ContentElement.PreviewStylusOutOfRangeEvent\n  - System.Windows.ContentElement.PreviewStylusSystemGesture\n  - System.Windows.ContentElement.PreviewStylusSystemGestureEvent\n  - System.Windows.ContentElement.PreviewStylusUp\n  - System.Windows.ContentElement.PreviewStylusUpEvent\n  - System.Windows.ContentElement.PreviewTextInput\n  - System.Windows.ContentElement.PreviewTextInputEvent\n  - System.Windows.ContentElement.PreviewTouchDown\n  - System.Windows.ContentElement.PreviewTouchDownEvent\n  - System.Windows.ContentElement.PreviewTouchMove\n  - System.Windows.ContentElement.PreviewTouchMoveEvent\n  - System.Windows.ContentElement.PreviewTouchUp\n  - System.Windows.ContentElement.PreviewTouchUpEvent\n  - System.Windows.ContentElement.QueryContinueDrag\n  - System.Windows.ContentElement.QueryContinueDragEvent\n  - System.Windows.ContentElement.QueryCursor\n  - System.Windows.ContentElement.QueryCursorEvent\n  - System.Windows.ContentElement.RaiseEvent(System.Windows.RoutedEventArgs)\n  - System.Windows.ContentElement.ReleaseAllTouchCaptures\n  - System.Windows.ContentElement.ReleaseMouseCapture\n  - System.Windows.ContentElement.ReleaseStylusCapture\n  - System.Windows.ContentElement.ReleaseTouchCapture(System.Windows.Input.TouchDevice)\n  - System.Windows.ContentElement.RemoveHandler(System.Windows.RoutedEvent,System.Delegate)\n  - System.Windows.ContentElement.ShouldSerializeCommandBindings\n  - System.Windows.ContentElement.ShouldSerializeInputBindings\n  - System.Windows.ContentElement.StylusButtonDown\n  - System.Windows.ContentElement.StylusButtonDownEvent\n  - System.Windows.ContentElement.StylusButtonUp\n  - System.Windows.ContentElement.StylusButtonUpEvent\n  - System.Windows.ContentElement.StylusDown\n  - System.Windows.ContentElement.StylusDownEvent\n  - System.Windows.ContentElement.StylusEnter\n  - System.Windows.ContentElement.StylusEnterEvent\n  - System.Windows.ContentElement.StylusInAirMove\n  - System.Windows.ContentElement.StylusInAirMoveEvent\n  - System.Windows.ContentElement.StylusInRange\n  - System.Windows.ContentElement.StylusInRangeEvent\n  - System.Windows.ContentElement.StylusLeave\n  - System.Windows.ContentElement.StylusLeaveEvent\n  - System.Windows.ContentElement.StylusMove\n  - System.Windows.ContentElement.StylusMoveEvent\n  - System.Windows.ContentElement.StylusOutOfRange\n  - System.Windows.ContentElement.StylusOutOfRangeEvent\n  - System.Windows.ContentElement.StylusSystemGesture\n  - System.Windows.ContentElement.StylusSystemGestureEvent\n  - System.Windows.ContentElement.StylusUp\n  - System.Windows.ContentElement.StylusUpEvent\n  - System.Windows.ContentElement.TextInput\n  - System.Windows.ContentElement.TextInputEvent\n  - System.Windows.ContentElement.TouchDown\n  - System.Windows.ContentElement.TouchDownEvent\n  - System.Windows.ContentElement.TouchEnter\n  - System.Windows.ContentElement.TouchEnterEvent\n  - System.Windows.ContentElement.TouchesCaptured\n  - System.Windows.ContentElement.TouchesCapturedWithin\n  - System.Windows.ContentElement.TouchesDirectlyOver\n  - System.Windows.ContentElement.TouchesOver\n  - System.Windows.ContentElement.TouchLeave\n  - System.Windows.ContentElement.TouchLeaveEvent\n  - System.Windows.ContentElement.TouchMove\n  - System.Windows.ContentElement.TouchMoveEvent\n  - System.Windows.ContentElement.TouchUp\n  - System.Windows.ContentElement.TouchUpEvent\n  - System.Windows.DependencyObject.ClearValue(System.Windows.DependencyProperty)\n  - System.Windows.DependencyObject.ClearValue(System.Windows.DependencyPropertyKey)\n  - System.Windows.DependencyObject.CoerceValue(System.Windows.DependencyProperty)\n  - System.Windows.DependencyObject.DependencyObjectType\n  - System.Windows.DependencyObject.Equals(System.Object)\n  - System.Windows.DependencyObject.GetHashCode\n  - System.Windows.DependencyObject.GetLocalValueEnumerator\n  - System.Windows.DependencyObject.GetValue(System.Windows.DependencyProperty)\n  - System.Windows.DependencyObject.InvalidateProperty(System.Windows.DependencyProperty)\n  - System.Windows.DependencyObject.IsSealed\n  - System.Windows.DependencyObject.ReadLocalValue(System.Windows.DependencyProperty)\n  - System.Windows.DependencyObject.SetCurrentValue(System.Windows.DependencyProperty,System.Object)\n  - System.Windows.DependencyObject.SetValue(System.Windows.DependencyProperty,System.Object)\n  - System.Windows.DependencyObject.SetValue(System.Windows.DependencyPropertyKey,System.Object)\n  - System.Windows.DependencyObject.ShouldSerializeProperty(System.Windows.DependencyProperty)\n  - System.Windows.Threading.DispatcherObject.CheckAccess\n  - System.Windows.Threading.DispatcherObject.Dispatcher\n  - System.Windows.Threading.DispatcherObject.VerifyAccess\n  attributes:\n  - type: System.Windows.Markup.RuntimeNamePropertyAttribute\n  - type: System.Windows.Markup.UsableDuringInitializationAttribute\n  - type: System.Windows.Markup.XmlLangPropertyAttribute\n  - type: System.Windows.StyleTypedPropertyAttribute\n  version:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Windows/FrameworkContentElement.xml\n  ms.technology:\n  - dotnet-wpf\n  author: stevehoag\n  ms.author: shoag\n  manager: wpickett\n- uid: System.Windows.FrameworkContentElement.#ctor\n  commentId: M:System.Windows.FrameworkContentElement.#ctor\n  id: '#ctor'\n  parent: System.Windows.FrameworkContentElement\n  langs:\n  - csharp\n  name: FrameworkContentElement()\n  nameWithType: FrameworkContentElement.FrameworkContentElement()\n  fullName: FrameworkContentElement.FrameworkContentElement()\n  type: Constructor\n  assemblies:\n  - PresentationFramework\n  namespace: System.Windows\n  summary: Initializes a new instance of the <xref href=\"System.Windows.FrameworkContentElement\"></xref> class.\n  syntax:\n    content: public FrameworkContentElement ();\n    parameters: []\n  overload: System.Windows.FrameworkContentElement.#ctor*\n  exceptions: []\n  version:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Windows/FrameworkContentElement.xml\n  ms.technology:\n  - dotnet-wpf\n  author: stevehoag\n  ms.author: shoag\n  manager: wpickett\n- uid: System.Windows.FrameworkContentElement.AddLogicalChild(System.Object)\n  commentId: M:System.Windows.FrameworkContentElement.AddLogicalChild(System.Object)\n  id: AddLogicalChild(System.Object)\n  parent: System.Windows.FrameworkContentElement\n  langs:\n  - csharp\n  name: AddLogicalChild(Object)\n  nameWithType: FrameworkContentElement.AddLogicalChild(Object)\n  fullName: FrameworkContentElement.AddLogicalChild(Object)\n  type: Method\n  assemblies:\n  - PresentationFramework\n  namespace: System.Windows\n  summary: Adds the provided element as a child of this element.\n  remarks: \"This method can throw an exception if called at a time when the logical tree is being iterated by another process.  \\n  \\n Most <xref:System.Windows.FrameworkContentElement> derived classes expose dedicated collections that are responsible for containment (for example, <xref:System.Windows.Documents.Span.Inlines%2A> on the <xref:System.Windows.Documents.Span> class; <xref:System.Windows.Documents.Section.Blocks%2A> on the <xref:System.Windows.Documents.Section> class). You can typically avoid any need to manipulate the logical tree directly if you derive from these classes instead. Working with the logical tree for content elements is an advanced scenario that may require a specialized parser or a specialized <xref:System.Windows.FrameworkElement> that acts as the parent rendering element (content host).  \\n  \\n For more information about how to use <xref:System.Windows.FrameworkContentElement.LogicalChildren%2A> and <xref:System.Windows.FrameworkContentElement.AddLogicalChild%2A>, see [Trees in WPF](~/docs/framework/wpf/advanced/trees-in-wpf.md).\"\n  syntax:\n    content: protected void AddLogicalChild (object child);\n    parameters:\n    - id: child\n      type: System.Object\n      description: The child element to be added.\n  overload: System.Windows.FrameworkContentElement.AddLogicalChild*\n  exceptions: []\n  version:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Windows/FrameworkContentElement.xml\n  ms.technology:\n  - dotnet-wpf\n  author: stevehoag\n  ms.author: shoag\n  manager: wpickett\n- uid: System.Windows.FrameworkContentElement.BeginInit\n  commentId: M:System.Windows.FrameworkContentElement.BeginInit\n  id: BeginInit\n  parent: System.Windows.FrameworkContentElement\n  langs:\n  - csharp\n  name: BeginInit()\n  nameWithType: FrameworkContentElement.BeginInit()\n  fullName: FrameworkContentElement.BeginInit()\n  type: Method\n  assemblies:\n  - PresentationFramework\n  namespace: System.Windows\n  summary: Called before an element is initialized.\n  syntax:\n    content: public virtual void BeginInit ();\n    parameters: []\n  overload: System.Windows.FrameworkContentElement.BeginInit*\n  exceptions: []\n  version:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Windows/FrameworkContentElement.xml\n  ms.technology:\n  - dotnet-wpf\n  ms.author: kempb\n  manager: ghogen\n- uid: System.Windows.FrameworkContentElement.BeginStoryboard(System.Windows.Media.Animation.Storyboard)\n  commentId: M:System.Windows.FrameworkContentElement.BeginStoryboard(System.Windows.Media.Animation.Storyboard)\n  id: BeginStoryboard(System.Windows.Media.Animation.Storyboard)\n  parent: System.Windows.FrameworkContentElement\n  langs:\n  - csharp\n  name: BeginStoryboard(Storyboard)\n  nameWithType: FrameworkContentElement.BeginStoryboard(Storyboard)\n  fullName: FrameworkContentElement.BeginStoryboard(Storyboard)\n  type: Method\n  assemblies:\n  - PresentationFramework\n  namespace: System.Windows\n  summary: Begins the sequence of actions that are contained in the provided storyboard.\n  remarks: For the signatures that do not use the `isControllable`, parameter, or when that parameter is specified `false`, the timeline clocks associated with the animation are removed as soon as it reaches the \"Fill\" period. Therefore the animation cannot be restarted after being run once. Note that controlling an animation also requires that the storyboard be named or accessible as an instance in code.\n  syntax:\n    content: public void BeginStoryboard (System.Windows.Media.Animation.Storyboard storyboard);\n    parameters:\n    - id: storyboard\n      type: System.Windows.Media.Animation.Storyboard\n      description: The storyboard to begin.\n  overload: System.Windows.FrameworkContentElement.BeginStoryboard*\n  exceptions: []\n  version:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Windows/FrameworkContentElement.xml\n  ms.technology:\n  - dotnet-wpf\n  author: stevehoag\n  ms.author: shoag\n  manager: wpickett\n- uid: System.Windows.FrameworkContentElement.BeginStoryboard(System.Windows.Media.Animation.Storyboard,System.Windows.Media.Animation.HandoffBehavior)\n  commentId: M:System.Windows.FrameworkContentElement.BeginStoryboard(System.Windows.Media.Animation.Storyboard,System.Windows.Media.Animation.HandoffBehavior)\n  id: BeginStoryboard(System.Windows.Media.Animation.Storyboard,System.Windows.Media.Animation.HandoffBehavior)\n  parent: System.Windows.FrameworkContentElement\n  langs:\n  - csharp\n  name: BeginStoryboard(Storyboard, HandoffBehavior)\n  nameWithType: FrameworkContentElement.BeginStoryboard(Storyboard, HandoffBehavior)\n  fullName: FrameworkContentElement.BeginStoryboard(Storyboard, HandoffBehavior)\n  type: Method\n  assemblies:\n  - PresentationFramework\n  namespace: System.Windows\n  summary: Begins the sequence of actions that are contained in the provided storyboard, with options specified for what should occur if the property is already animated.\n  remarks: \"For the signatures that do not use the `isControllable`, parameter, or when that parameter is specified `false`, the timeline clocks associated with the animation are removed as soon as it reaches the \\\"Fill\\\" period. Therefore the animation cannot be restarted after being run once. Note that controlling an animation also requires that the storyboard be named or accessible as an instance in code.  \\n  \\n## Using the Compose HandoffBehavior  \\n When you apply a <xref:System.Windows.Media.Animation.Storyboard>, <xref:System.Windows.Media.Animation.AnimationTimeline>, or <xref:System.Windows.Media.Animation.AnimationClock> to a property by using the <xref:System.Windows.Media.Animation.HandoffBehavior.Compose> <xref:System.Windows.Media.Animation.HandoffBehavior>, any <xref:System.Windows.Media.Animation.Clock> objects previously associated with that property continue to consume system resources; the timing system does not remove the clocks automatically.  \\n  \\n To avoid performance issues when you apply a large number of clocks by using <xref:System.Windows.Media.Animation.HandoffBehavior.Compose>, you should remove composing clocks from the animated property after they complete. There are several ways to remove a clock:  \\n  \\n-   To remove all clocks from a property, use the <xref:System.Windows.Media.Animation.Animatable.ApplyAnimationClock%28System.Windows.DependencyProperty%2CSystem.Windows.Media.Animation.AnimationClock%29> or <xref:System.Windows.Media.Animation.Animatable.BeginAnimation%28System.Windows.DependencyProperty%2CSystem.Windows.Media.Animation.AnimationTimeline%29> method of the animated object. Specify the property being animated as the first parameter, and `null` as the second. This removes all animation clocks from the property.  \\n  \\n-   To remove a specific <xref:System.Windows.Media.Animation.AnimationClock> from a list of clocks, use the <xref:System.Windows.Media.Animation.Clock.Controller%2A> property of the <xref:System.Windows.Media.Animation.AnimationClock> to retrieve a <xref:System.Windows.Media.Animation.ClockController>, then call the <xref:System.Windows.Media.Animation.ClockController.Remove%2A> method of the <xref:System.Windows.Media.Animation.ClockController>. This is typically done in the <xref:System.Windows.Media.Animation.Clock.Completed> event handler for a clock. Note that only root clocks can be controlled by a <xref:System.Windows.Media.Animation.ClockController>; the <xref:System.Windows.Media.Animation.Clock.Controller%2A> property of a child clock returns `null`. Note also that the <xref:System.Windows.Media.Animation.Clock.Completed> event is not raised if the effective duration of the clock is forever.  In that case, the user must determine when to call <xref:System.Windows.Media.Animation.ClockController.Remove%2A>.  \\n  \\n This is primarily an issue for animations on objects that have a long lifetime.  When an object is garbage collected, its clocks are also disconnected and garbage collected.  \\n  \\n For more information about clock objects, see [Animation and Timing System Overview](~/docs/framework/wpf/graphics-multimedia/animation-and-timing-system-overview.md).\"\n  syntax:\n    content: public void BeginStoryboard (System.Windows.Media.Animation.Storyboard storyboard, System.Windows.Media.Animation.HandoffBehavior handoffBehavior);\n    parameters:\n    - id: storyboard\n      type: System.Windows.Media.Animation.Storyboard\n      description: The storyboard to begin.\n    - id: handoffBehavior\n      type: System.Windows.Media.Animation.HandoffBehavior\n      description: A value of the enumeration that describes behavior to use if a property described in the storyboard is already animated.\n  overload: System.Windows.FrameworkContentElement.BeginStoryboard*\n  exceptions: []\n  version:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Windows/FrameworkContentElement.xml\n  ms.technology:\n  - dotnet-wpf\n  author: stevehoag\n  ms.author: shoag\n  manager: wpickett\n- uid: System.Windows.FrameworkContentElement.BeginStoryboard(System.Windows.Media.Animation.Storyboard,System.Windows.Media.Animation.HandoffBehavior,System.Boolean)\n  commentId: M:System.Windows.FrameworkContentElement.BeginStoryboard(System.Windows.Media.Animation.Storyboard,System.Windows.Media.Animation.HandoffBehavior,System.Boolean)\n  id: BeginStoryboard(System.Windows.Media.Animation.Storyboard,System.Windows.Media.Animation.HandoffBehavior,System.Boolean)\n  parent: System.Windows.FrameworkContentElement\n  langs:\n  - csharp\n  name: BeginStoryboard(Storyboard, HandoffBehavior, Boolean)\n  nameWithType: FrameworkContentElement.BeginStoryboard(Storyboard, HandoffBehavior, Boolean)\n  fullName: FrameworkContentElement.BeginStoryboard(Storyboard, HandoffBehavior, Boolean)\n  type: Method\n  assemblies:\n  - PresentationFramework\n  namespace: System.Windows\n  summary: Begins the sequence of actions that are contained in the provided storyboard, with specified state for control of the animation after it is started.\n  remarks: \"For the signatures that do not use the `isControllable`, parameter, or when that parameter is specified `false`, the timeline clocks associated with the animation are removed as soon as it reaches the \\\"Fill\\\" period. Therefore the animation cannot be restarted after being run once. Note that controlling an animation also requires that the storyboard be named or accessible as an instance in code.  \\n  \\n## Using the Compose HandoffBehavior  \\n When you apply a <xref:System.Windows.Media.Animation.Storyboard>, <xref:System.Windows.Media.Animation.AnimationTimeline>, or <xref:System.Windows.Media.Animation.AnimationClock> to a property by using the <xref:System.Windows.Media.Animation.HandoffBehavior.Compose> <xref:System.Windows.Media.Animation.HandoffBehavior>, any <xref:System.Windows.Media.Animation.Clock> objects previously associated with that property continue to consume system resources; the timing system does not remove these clocks automatically.  \\n  \\n To avoid performance issues when you apply a large number of clocks by using <xref:System.Windows.Media.Animation.HandoffBehavior.Compose>, you should remove composing clocks from the animated property after they complete. There are several ways to remove a clock:  \\n  \\n-   To remove all clocks from a property, use the <xref:System.Windows.Media.Animation.Animatable.ApplyAnimationClock%28System.Windows.DependencyProperty%2CSystem.Windows.Media.Animation.AnimationClock%29> or <xref:System.Windows.Media.Animation.Animatable.BeginAnimation%28System.Windows.DependencyProperty%2CSystem.Windows.Media.Animation.AnimationTimeline%29> method of the animated object. Specify the property being animated as the first parameter, and `null` as the second. This removes all animation clocks from the property.  \\n  \\n-   To remove a specific <xref:System.Windows.Media.Animation.AnimationClock> from a list of clocks, use the <xref:System.Windows.Media.Animation.Clock.Controller%2A> property of the <xref:System.Windows.Media.Animation.AnimationClock> to retrieve a <xref:System.Windows.Media.Animation.ClockController>, then call the <xref:System.Windows.Media.Animation.ClockController.Remove%2A> method of the <xref:System.Windows.Media.Animation.ClockController>. This is typically done in the <xref:System.Windows.Media.Animation.Clock.Completed> event handler for a clock. Note that only root clocks can be controlled by a <xref:System.Windows.Media.Animation.ClockController>; the <xref:System.Windows.Media.Animation.Clock.Controller%2A> property of a child clock returns `null`. Note also that the <xref:System.Windows.Media.Animation.Clock.Completed> event is not raised if the effective duration of the clock is forever.  In that case, the user must determine when to call <xref:System.Windows.Media.Animation.ClockController.Remove%2A>.  \\n  \\n This is primarily an issue for animations on objects that have a long lifetime.  When an object is garbage collected, its clocks are also disconnected and garbage collected.  \\n  \\n For more information about clock objects, see [Animation and Timing System Overview](~/docs/framework/wpf/graphics-multimedia/animation-and-timing-system-overview.md).\"\n  syntax:\n    content: public void BeginStoryboard (System.Windows.Media.Animation.Storyboard storyboard, System.Windows.Media.Animation.HandoffBehavior handoffBehavior, bool isControllable);\n    parameters:\n    - id: storyboard\n      type: System.Windows.Media.Animation.Storyboard\n      description: The storyboard to begin.\n    - id: handoffBehavior\n      type: System.Windows.Media.Animation.HandoffBehavior\n      description: A value of the enumeration that describes behavior to use if a  property described in the storyboard is already animated.\n    - id: isControllable\n      type: System.Boolean\n      description: Declares whether the animation is controllable (can be paused) after it is started.\n  overload: System.Windows.FrameworkContentElement.BeginStoryboard*\n  exceptions: []\n  version:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Windows/FrameworkContentElement.xml\n  ms.technology:\n  - dotnet-wpf\n  ms.author: kempb\n  manager: ghogen\n- uid: System.Windows.FrameworkContentElement.BindingGroup\n  commentId: P:System.Windows.FrameworkContentElement.BindingGroup\n  id: BindingGroup\n  parent: System.Windows.FrameworkContentElement\n  langs:\n  - csharp\n  name: BindingGroup\n  nameWithType: FrameworkContentElement.BindingGroup\n  fullName: FrameworkContentElement.BindingGroup\n  type: Property\n  assemblies:\n  - PresentationFramework\n  namespace: System.Windows\n  summary: Gets or sets the <xref href=\"System.Windows.Data.BindingGroup\"></xref> that is used for the element.\n  remarks: \"A <xref:System.Windows.Data.BindingGroup> can be used to validate the values of multiple properties of an object. For example, suppose that an application prompts the user to enter an address and then populates an object of type `Address`, which has the properties `Street`, `City`, `ZipCode`, and `Country`, with the values that the user provided. The application has a panel that contains four <xref:System.Windows.Controls.TextBox> controls, each of which is bound to one of the object’s properties. You can use a <xref:System.Windows.Controls.ValidationRule> in a <xref:System.Windows.Data.BindingGroup> to validate the `Address` object. For example, the <xref:System.Windows.Controls.ValidationRule> can ensure that the zip code is valid for the country of the address.  \\n  \\n Child elements inherit the <xref:System.Windows.Data.BindingGroup> from their parent elements, just as with any other inheritable property.  \\n  \\n<a name=\\\"dependencyPropertyInfo_BindingGroup\\\"></a>   \\n## Dependency Property Information  \\n  \\n|||  \\n|-|-|  \\n|Identifier field|<xref:System.Windows.FrameworkContentElement.BindingGroupProperty>|  \\n|Metadata properties set to **true**|<xref:System.Windows.FrameworkPropertyMetadata.Inherits%2A>|\"\n  syntax:\n    content: >-\n      [System.Windows.Localizability(System.Windows.LocalizationCategory.NeverLocalize)]\n\n      public System.Windows.Data.BindingGroup BindingGroup { get; set; }\n    return:\n      type: System.Windows.Data.BindingGroup\n      description: The <xref href=\"System.Windows.Data.BindingGroup\"></xref> that is used for the element.\n  overload: System.Windows.FrameworkContentElement.BindingGroup*\n  exceptions: []\n  attributes:\n  - type: System.Windows.LocalizabilityAttribute\n  version:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Windows/FrameworkContentElement.xml\n  ms.technology:\n  - dotnet-wpf\n  author: stevehoag\n  ms.author: shoag\n  manager: wpickett\n- uid: System.Windows.FrameworkContentElement.BindingGroupProperty\n  commentId: F:System.Windows.FrameworkContentElement.BindingGroupProperty\n  id: BindingGroupProperty\n  parent: System.Windows.FrameworkContentElement\n  langs:\n  - csharp\n  name: BindingGroupProperty\n  nameWithType: FrameworkContentElement.BindingGroupProperty\n  fullName: FrameworkContentElement.BindingGroupProperty\n  type: Field\n  assemblies:\n  - PresentationFramework\n  namespace: System.Windows\n  summary: Identifies the <xref href=\"System.Windows.FrameworkContentElement.BindingGroup\"></xref> dependency property.\n  syntax:\n    content: public static readonly System.Windows.DependencyProperty BindingGroupProperty;\n    return:\n      type: System.Windows.DependencyProperty\n      description: ''\n  exceptions: []\n  version:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Windows/FrameworkContentElement.xml\n  ms.technology:\n  - dotnet-wpf\n  ms.author: kempb\n  manager: ghogen\n- uid: System.Windows.FrameworkContentElement.BringIntoView\n  commentId: M:System.Windows.FrameworkContentElement.BringIntoView\n  id: BringIntoView\n  parent: System.Windows.FrameworkContentElement\n  langs:\n  - csharp\n  name: BringIntoView()\n  nameWithType: FrameworkContentElement.BringIntoView()\n  fullName: FrameworkContentElement.BringIntoView()\n  type: Method\n  assemblies:\n  - PresentationFramework\n  namespace: System.Windows\n  summary: Attempts to bring this element into view, within any scrollable regions it is contained within.\n  remarks: By calling this method, you effectively will call <xref:System.Windows.Controls.ScrollContentPresenter.MakeVisible%2A> on any parent scrollable area that contains the element (the parent may very well be a <xref:System.Windows.FrameworkElement>, not a <xref:System.Windows.FrameworkContentElement>). If this element is not contained in a scrollable area, the event is still raised, but there will be no effect.\n  syntax:\n    content: public void BringIntoView ();\n    parameters: []\n  overload: System.Windows.FrameworkContentElement.BringIntoView*\n  exceptions: []\n  version:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Windows/FrameworkContentElement.xml\n  ms.technology:\n  - dotnet-wpf\n  author: stevehoag\n  ms.author: shoag\n  manager: wpickett\n- uid: System.Windows.FrameworkContentElement.ContextMenu\n  commentId: P:System.Windows.FrameworkContentElement.ContextMenu\n  id: ContextMenu\n  parent: System.Windows.FrameworkContentElement\n  langs:\n  - csharp\n  name: ContextMenu\n  nameWithType: FrameworkContentElement.ContextMenu\n  fullName: FrameworkContentElement.ContextMenu\n  type: Property\n  assemblies:\n  - PresentationFramework\n  namespace: System.Windows\n  summary: Gets or sets the context menu element that should appear whenever the context menu is requested via [!INCLUDE[TLA#tla_ui](~/includes/tlasharptla-ui-md.md)] from within this element.\n  remarks: \"<a name=\\\"dependencyPropertyInfo_ContextMenu\\\"></a>   \\n## Dependency Property Information  \\n  \\n|||  \\n|-|-|  \\n|Identifier field|<xref:System.Windows.FrameworkContentElement.ContextMenuProperty>|  \\n|Metadata properties set to `true`|None|\"\n  example:\n  - \"The following example places a <xref:System.Windows.Controls.ContextMenu> on a <xref:System.Windows.Documents.Paragraph>.  \\n  \\n [!code-xml[ContentElementsSmorgasbord#ContextMenu](~/samples/snippets/csharp/VS_Snippets_Wpf/ContentElementsSmorgasbord/CSharp/page1.xaml#contextmenu)]\"\n  syntax:\n    content: public System.Windows.Controls.ContextMenu ContextMenu { get; set; }\n    return:\n      type: System.Windows.Controls.ContextMenu\n      description: The context menu that this element uses.\n  overload: System.Windows.FrameworkContentElement.ContextMenu*\n  exceptions: []\n  version:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Windows/FrameworkContentElement.xml\n  ms.technology:\n  - dotnet-wpf\n  ms.author: kempb\n  manager: ghogen\n- uid: System.Windows.FrameworkContentElement.ContextMenuClosing\n  commentId: E:System.Windows.FrameworkContentElement.ContextMenuClosing\n  id: ContextMenuClosing\n  parent: System.Windows.FrameworkContentElement\n  langs:\n  - csharp\n  name: ContextMenuClosing\n  nameWithType: FrameworkContentElement.ContextMenuClosing\n  fullName: FrameworkContentElement.ContextMenuClosing\n  type: Event\n  assemblies:\n  - PresentationFramework\n  namespace: System.Windows\n  summary: Occurs just before any context menu on the element is closed.\n  remarks: \"To suppress closing context menus, handlers of the event should mark it as handled.  \\n  \\n To use this event as an <xref:System.Windows.EventTrigger> in a style, you must reference the underlying service event identifier:  \\n  \\n [!code-xml[CorePseudocode#FEContextMenuClosing](~/samples/snippets/csharp/VS_Snippets_Wpf/CorePseudocode/CSharp/pseudocode.xaml#fecontextmenuclosing)]  \\n  \\n (This usage is required because the event implementation on <xref:System.Windows.FrameworkContentElement> that exposes the underlying service event does not correctly map the <xref:System.Windows.FrameworkContentElement.ContextMenuClosing> identifier for use in triggers).  \\n  \\n<a name=\\\"routedEventInfo_ContextMenuClosing\\\"></a>   \\n## Routed Event Information  \\n  \\n|||  \\n|-|-|  \\n|Identifier field|<xref:System.Windows.FrameworkContentElement.ContextMenuClosingEvent>|  \\n|Routing strategy|Bubbling|  \\n|Delegate|<xref:System.Windows.Controls.ContextMenuEventHandler>|\"\n  example:\n  - \"The following example implements a handler that changes the cursor over a named region `DisplayArea` (not shown). The comment hints at a <xref:System.Windows.UIElement> usage, but in fact this sample would be identical if `DisplayArea` were a <xref:System.Windows.FrameworkContentElement>.  \\n  \\n [!code-csharp[cursors#ChangeCursorsSample](~/samples/snippets/csharp/VS_Snippets_Wpf/cursors/CSharp/Window1.xaml.cs#changecursorssample)]\\n [!code-vb[cursors#ChangeCursorsSample](~/samples/snippets/visualbasic/VS_Snippets_Wpf/cursors/VisualBasic/Window1.xaml.vb#changecursorssample)]\"\n  syntax:\n    content: public event System.Windows.Controls.ContextMenuEventHandler ContextMenuClosing;\n    return:\n      type: System.Windows.Controls.ContextMenuEventHandler\n      description: ''\n  exceptions: []\n  version:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Windows/FrameworkContentElement.xml\n  ms.technology:\n  - dotnet-wpf\n  ms.author: kempb\n  manager: ghogen\n- uid: System.Windows.FrameworkContentElement.ContextMenuClosingEvent\n  commentId: F:System.Windows.FrameworkContentElement.ContextMenuClosingEvent\n  id: ContextMenuClosingEvent\n  parent: System.Windows.FrameworkContentElement\n  langs:\n  - csharp\n  name: ContextMenuClosingEvent\n  nameWithType: FrameworkContentElement.ContextMenuClosingEvent\n  fullName: FrameworkContentElement.ContextMenuClosingEvent\n  type: Field\n  assemblies:\n  - PresentationFramework\n  namespace: System.Windows\n  summary: Identifies the <xref href=\"System.Windows.FrameworkContentElement.ContextMenuClosing\"></xref> [Routed Events Overview](~/docs/framework/wpf/advanced/routed-events-overview.md).\n  remarks: Event identifier objects are created when routed events are registered (see <xref:System.Windows.EventManager.RegisterRoutedEvent%2A>) and can then be used to add class handlers (see <xref:System.Windows.EventManager.RegisterClassHandler%2A>). Identifier objects contain an identifying name, owner type, handler type, routing strategy, and a utility method for adding owners for the event.\n  syntax:\n    content: public static readonly System.Windows.RoutedEvent ContextMenuClosingEvent;\n    return:\n      type: System.Windows.RoutedEvent\n      description: ''\n  exceptions: []\n  version:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Windows/FrameworkContentElement.xml\n  ms.technology:\n  - dotnet-wpf\n  author: stevehoag\n  ms.author: shoag\n  manager: wpickett\n- uid: System.Windows.FrameworkContentElement.ContextMenuOpening\n  commentId: E:System.Windows.FrameworkContentElement.ContextMenuOpening\n  id: ContextMenuOpening\n  parent: System.Windows.FrameworkContentElement\n  langs:\n  - csharp\n  name: ContextMenuOpening\n  nameWithType: FrameworkContentElement.ContextMenuOpening\n  fullName: FrameworkContentElement.ContextMenuOpening\n  type: Event\n  assemblies:\n  - PresentationFramework\n  namespace: System.Windows\n  summary: Occurs when any context menu on the element is opened.\n  remarks: \"To manually open context menus, handlers of the events should mark the relevant event as handled. Otherwise, the existing value of the <xref:System.Windows.FrameworkContentElement.ContextMenu%2A> property will be used to automatically open a context menu. Marking the event handled will effectively cancel the default action, and could be an opportunity to reset the value of the <xref:System.Windows.FrameworkContentElement.ContextMenu%2A> property and then open the new <xref:System.Windows.Controls.ContextMenu>. However, there is a timing issue you should be aware of. In order to completely replace the context menu through a <xref:System.Windows.FrameworkContentElement.ContextMenuOpening> handler, the initial context menu must not be null / empty. Alternatively, you might need to handle the event and then manually open a new context menu. For details, see [How to: Handle the ContextMenuOpening Event](~/docs/framework/wpf/advanced/how-to-handle-the-contextmenuopening-event.md).  \\n  \\n To use this event as an <xref:System.Windows.EventTrigger> in a style, you must reference the underlying service event identifier:  \\n  \\n [!code-xml[CorePseudocode#FEContextMenuOpening](~/samples/snippets/csharp/VS_Snippets_Wpf/CorePseudocode/CSharp/pseudocode.xaml#fecontextmenuopening)]  \\n  \\n (This usage is required because the event implementation on <xref:System.Windows.FrameworkContentElement> that exposes the underlying service event does not correctly map the <xref:System.Windows.FrameworkContentElement.ContextMenuOpening> identifier for use in triggers).  \\n  \\n<a name=\\\"routedEventInfo_ContextMenuOpening\\\"></a>   \\n## Routed Event Information  \\n  \\n|||  \\n|-|-|  \\n|Identifier field|<xref:System.Windows.FrameworkContentElement.ContextMenuOpeningEvent>|  \\n|Routing strategy|Bubbling|  \\n|Delegate|<xref:System.Windows.Controls.ContextMenuEventHandler>|\"\n  syntax:\n    content: public event System.Windows.Controls.ContextMenuEventHandler ContextMenuOpening;\n    return:\n      type: System.Windows.Controls.ContextMenuEventHandler\n      description: ''\n  exceptions: []\n  version:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Windows/FrameworkContentElement.xml\n  ms.technology:\n  - dotnet-wpf\n  author: stevehoag\n  ms.author: shoag\n  manager: wpickett\n- uid: System.Windows.FrameworkContentElement.ContextMenuOpeningEvent\n  commentId: F:System.Windows.FrameworkContentElement.ContextMenuOpeningEvent\n  id: ContextMenuOpeningEvent\n  parent: System.Windows.FrameworkContentElement\n  langs:\n  - csharp\n  name: ContextMenuOpeningEvent\n  nameWithType: FrameworkContentElement.ContextMenuOpeningEvent\n  fullName: FrameworkContentElement.ContextMenuOpeningEvent\n  type: Field\n  assemblies:\n  - PresentationFramework\n  namespace: System.Windows\n  summary: Identifies the <xref href=\"System.Windows.FrameworkContentElement.ContextMenuOpening\"></xref> [Routed Events Overview](~/docs/framework/wpf/advanced/routed-events-overview.md).\n  remarks: Event identifier objects are created when routed events are registered (see <xref:System.Windows.EventManager.RegisterRoutedEvent%2A>) and can then be used to add class handlers (see <xref:System.Windows.EventManager.RegisterClassHandler%2A>). Identifier objects contain an identifying name, owner type, handler type, routing strategy, and a utility method for adding owners for the event.\n  syntax:\n    content: public static readonly System.Windows.RoutedEvent ContextMenuOpeningEvent;\n    return:\n      type: System.Windows.RoutedEvent\n      description: ''\n  exceptions: []\n  version:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Windows/FrameworkContentElement.xml\n  ms.technology:\n  - dotnet-wpf\n  author: stevehoag\n  ms.author: shoag\n  manager: wpickett\n- uid: System.Windows.FrameworkContentElement.ContextMenuProperty\n  commentId: F:System.Windows.FrameworkContentElement.ContextMenuProperty\n  id: ContextMenuProperty\n  parent: System.Windows.FrameworkContentElement\n  langs:\n  - csharp\n  name: ContextMenuProperty\n  nameWithType: FrameworkContentElement.ContextMenuProperty\n  fullName: FrameworkContentElement.ContextMenuProperty\n  type: Field\n  assemblies:\n  - PresentationFramework\n  namespace: System.Windows\n  summary: Identifies the <xref href=\"System.Windows.FrameworkContentElement.ContextMenu\"></xref> dependency property.\n  syntax:\n    content: public static readonly System.Windows.DependencyProperty ContextMenuProperty;\n    return:\n      type: System.Windows.DependencyProperty\n      description: ''\n  exceptions: []\n  version:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Windows/FrameworkContentElement.xml\n  ms.technology:\n  - dotnet-wpf\n  ms.author: kempb\n  manager: ghogen\n- uid: System.Windows.FrameworkContentElement.Cursor\n  commentId: P:System.Windows.FrameworkContentElement.Cursor\n  id: Cursor\n  parent: System.Windows.FrameworkContentElement\n  langs:\n  - csharp\n  name: Cursor\n  nameWithType: FrameworkContentElement.Cursor\n  fullName: FrameworkContentElement.Cursor\n  type: Property\n  assemblies:\n  - PresentationFramework\n  namespace: System.Windows\n  summary: Gets or sets the cursor that displays when the mouse pointer is over this element.\n  remarks: \"When setting this property in [!INCLUDE[TLA2#tla_xaml](~/includes/tla2sharptla-xaml-md.md)], the [!INCLUDE[TLA2#tla_xaml](~/includes/tla2sharptla-xaml-md.md)] processor relies on type conversion for the <xref:System.Windows.Input.Cursor> class to evaluate the string. The provided string should evaluate to a <xref:System.Windows.Input.CursorType> value. See <xref:System.Windows.Input.Cursor> for details.  \\n  \\n Whether the cursor as established by this property will or will not display when the mouse pointer is over this element is also dependent on the value of the <xref:System.Windows.FrameworkContentElement.ForceCursor%2A> property. Also, event-related considerations such as an active drag, mouse capture, text editing modes within controls, and so on, will also affect the cursor with higher priority than the value you specify in this property.  \\n  \\n To revert the behavior of setting this property to the eventual default, set it to `null` again.  \\n  \\n The `null` default really means that determination of the practical cursor value is deferred here and should be obtained from elsewhere. If presented with no programmatic values from any source, the default cursor over a [!INCLUDE[TLA#tla_winclient](~/includes/tlasharptla-winclient-md.md)] application will be an arrow.  \\n  \\n Each movement of the mouse over a [!INCLUDE[TLA2#tla_winclient](~/includes/tla2sharptla-winclient-md.md)] application raises a <xref:System.Windows.ContentElement.QueryCursor> event. The event bubbles, and any element along the route has the opportunity to handle the event and to set the value of the cursor via the arguments of this event. If that happens, the fact that the event is handled and has a changed value in the arguments takes precedence over the value of the <xref:System.Windows.FrameworkContentElement.Cursor%2A> property at any level, unless <xref:System.Windows.FrameworkContentElement.ForceCursor%2A> is set.  \\n  \\n If not creating a custom cursor, typically you set this property to a static property value of the <xref:System.Windows.Input.Cursors> class.  \\n  \\n Setting the <xref:System.Windows.Input.Cursor> to a custom value is not enabled in partial trust. For more information on custom cursors, see [Input Overview](~/docs/framework/wpf/advanced/input-overview.md).  \\n  \\n<a name=\\\"dependencyPropertyInfo_Cursor\\\"></a>   \\n## Dependency Property Information  \\n  \\n|||  \\n|-|-|  \\n|Identifier field|<xref:System.Windows.FrameworkContentElement.CursorProperty>|  \\n|Metadata properties set to `true`|None|\"\n  example:\n  - \"The following example sets the cursor to a custom value.  \\n  \\n [!code-csharp[cursors#ChangeCursorsSample](~/samples/snippets/csharp/VS_Snippets_Wpf/cursors/CSharp/Window1.xaml.cs#changecursorssample)]\\n [!code-vb[cursors#ChangeCursorsSample](~/samples/snippets/visualbasic/VS_Snippets_Wpf/cursors/VisualBasic/Window1.xaml.vb#changecursorssample)]\"\n  syntax:\n    content: public System.Windows.Input.Cursor Cursor { get; set; }\n    return:\n      type: System.Windows.Input.Cursor\n      description: The cursor to display. The default value is defined as `null` per this dependency property. However, the practical default at run time will come from a variety of factors.\n  overload: System.Windows.FrameworkContentElement.Cursor*\n  exceptions: []\n  version:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Windows/FrameworkContentElement.xml\n  ms.technology:\n  - dotnet-wpf\n  ms.author: kempb\n  manager: ghogen\n- uid: System.Windows.FrameworkContentElement.CursorProperty\n  commentId: F:System.Windows.FrameworkContentElement.CursorProperty\n  id: CursorProperty\n  parent: System.Windows.FrameworkContentElement\n  langs:\n  - csharp\n  name: CursorProperty\n  nameWithType: FrameworkContentElement.CursorProperty\n  fullName: FrameworkContentElement.CursorProperty\n  type: Field\n  assemblies:\n  - PresentationFramework\n  namespace: System.Windows\n  summary: Identifies the <xref href=\"System.Windows.FrameworkContentElement.Cursor\"></xref> dependency property.\n  syntax:\n    content: public static readonly System.Windows.DependencyProperty CursorProperty;\n    return:\n      type: System.Windows.DependencyProperty\n      description: ''\n  exceptions: []\n  version:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Windows/FrameworkContentElement.xml\n  ms.technology:\n  - dotnet-wpf\n  author: stevehoag\n  ms.author: shoag\n  manager: wpickett\n- uid: System.Windows.FrameworkContentElement.DataContext\n  commentId: P:System.Windows.FrameworkContentElement.DataContext\n  id: DataContext\n  parent: System.Windows.FrameworkContentElement\n  langs:\n  - csharp\n  name: DataContext\n  nameWithType: FrameworkContentElement.DataContext\n  fullName: FrameworkContentElement.DataContext\n  type: Property\n  assemblies:\n  - PresentationFramework\n  namespace: System.Windows\n  summary: Gets or sets the data context for an element when it participates in data binding.\n  remarks: \"*Data context* is a concept that allows elements to inherit information from their parent elements about the binding source that is used for binding, as well as other characteristics of the binding such as the path.  \\n  \\n Data context can be set directly to a [!INCLUDE[TLA#tla_clr](~/includes/tlasharptla-clr-md.md)] object, with the bindings evaluating to properties of that object. Alternatively, you can set the data context to a <xref:System.Windows.Data.DataSourceProvider> object.  \\n  \\n This dependency property inherits property values. If there are child elements with no other value for <xref:System.Windows.FrameworkContentElement.DataContext%2A> established through local values or styles, the property system will set the value to be the <xref:System.Windows.FrameworkContentElement.DataContext%2A> value of the nearest parent element with this value assigned.  \\n  \\n Alternatively, you can use one of the following properties of the <xref:System.Windows.Data.Binding> class to specify the binding source explicitly: <xref:System.Windows.Data.Binding.ElementName%2A>, <xref:System.Windows.Data.Binding.Source%2A>, or <xref:System.Windows.Data.Binding.RelativeSource%2A>. For more information, see [How to: Specify the Binding Source](~/docs/framework/wpf/data/how-to-specify-the-binding-source.md).  \\n  \\n In [!INCLUDE[TLA2#tla_xaml](~/includes/tla2sharptla-xaml-md.md)], <xref:System.Windows.FrameworkContentElement.DataContext%2A> is most commonly set to as a <xref:System.Windows.Data.Binding> declaration. You can use either property element syntax or attribute syntax. Attribute syntax is shown in the example on this page. You can also set <xref:System.Windows.FrameworkContentElement.DataContext%2A> in code.  \\n  \\n<a name=\\\"xamlPropertyElementUsage_DataContext\\\"></a>   \\n## XAML Property Element Usage  \\n  \\n```  \\n<object>  \\n  <object.DataContext>  \\n    <dataContextObject />  \\n  </object.DataContext>  \\n</object>  \\n```  \\n  \\n<a name=\\\"xamlAttributeUsage_DataContext\\\"></a>   \\n## XAML Attribute Usage  \\n  \\n```  \\n<object DataContext=\\\"bindingUsage\\\"/>  \\n- or -  \\n<object DataContext=\\\"{resourceExtension contextResourceKey}\\\"/>  \\n```  \\n  \\n<a name=\\\"xamlValues_DataContext\\\"></a>   \\n## XAML Values  \\n *dataContextObject*  \\n A directly embedded object that serves as data context for any bindings within the parent element. Typically, this object is a <xref:System.Windows.Data.Binding> or another <xref:System.Windows.Data.BindingBase> subclass. Alternatively, raw data of any [!INCLUDE[TLA2#tla_clr](~/includes/tla2sharptla-clr-md.md)] object type intended for binding may be placed here, with the actual bindings defined later.  \\n  \\n *bindingUsage*  \\n A binding usage that evaluates to an appropriate data context. For details, see [Binding Markup Extension](~/docs/framework/wpf/advanced/binding-markup-extension.md).  \\n  \\n *resourceExtension*  \\n One of the following: `StaticResource`, or `DynamicResource`. This usage is used when referring to raw data defined as an object in resources. See [XAML Resources](~/docs/framework/wpf/advanced/xaml-resources.md).  \\n  \\n *contextResourceKey*  \\n The key identifier for the object being requested from within a <xref:System.Windows.ResourceDictionary>.  \\n  \\n<a name=\\\"dependencyPropertyInfo_DataContext\\\"></a>   \\n## Dependency Property Information  \\n  \\n|||  \\n|-|-|  \\n|Identifier field|<xref:System.Windows.FrameworkContentElement.DataContextProperty>|  \\n|Metadata properties set to `true`|<xref:System.Windows.FrameworkPropertyMetadata.Inherits%2A>|\"\n  example:\n  - \"The following example sets a binding on a <xref:System.Windows.Documents.Paragraph> element, by creating a new custom data object, establishing that object as <xref:System.Windows.FrameworkContentElement.DataContext%2A>, and setting the binding path to a property within it.  \\n  \\n [!code-csharp[ContentElementsSmorgasbord#DataContext](~/samples/snippets/csharp/VS_Snippets_Wpf/ContentElementsSmorgasbord/CSharp/page1.xaml.cs#datacontext)]\\n [!code-vb[ContentElementsSmorgasbord#DataContext](~/samples/snippets/visualbasic/VS_Snippets_Wpf/ContentElementsSmorgasbord/visualbasic/page1.xaml.vb#datacontext)]\"\n  syntax:\n    content: >-\n      [System.Windows.Localizability(System.Windows.LocalizationCategory.NeverLocalize)]\n\n      public object DataContext { get; set; }\n    return:\n      type: System.Object\n      description: The object to use as data context.\n  overload: System.Windows.FrameworkContentElement.DataContext*\n  exceptions: []\n  attributes:\n  - type: System.Windows.LocalizabilityAttribute\n  version:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Windows/FrameworkContentElement.xml\n  ms.technology:\n  - dotnet-wpf\n  ms.author: kempb\n  manager: ghogen\n- uid: System.Windows.FrameworkContentElement.DataContextChanged\n  commentId: E:System.Windows.FrameworkContentElement.DataContextChanged\n  id: DataContextChanged\n  parent: System.Windows.FrameworkContentElement\n  langs:\n  - csharp\n  name: DataContextChanged\n  nameWithType: FrameworkContentElement.DataContextChanged\n  fullName: FrameworkContentElement.DataContextChanged\n  type: Event\n  assemblies:\n  - PresentationFramework\n  namespace: System.Windows\n  summary: Occurs when this element's data context changes.\n  remarks: \"For an explanation of data contexts and data binding, see [Data Binding Overview](~/docs/framework/wpf/data/data-binding-overview.md).  \\n  \\n> [!IMPORTANT]\\n>  When an element's <xref:System.Windows.FrameworkContentElement.DataContext%2A> changes, all data-bound properties on this element are potentially affected. This applies to any elements that are descendant elements of the current element, which inherit the data context, and also the current element itself. All such bindings re-interpret the new <xref:System.Windows.FrameworkContentElement.DataContext%2A> to reflect the new value in bindings. There is no guarantee made about the order of these changes relative to the raising of the <xref:System.Windows.FrameworkContentElement.DataContextChanged> event.  The changes can occur before the event, after the event, or in any mixture.\"\n  syntax:\n    content: public event System.Windows.DependencyPropertyChangedEventHandler DataContextChanged;\n    return:\n      type: System.Windows.DependencyPropertyChangedEventHandler\n      description: ''\n  exceptions: []\n  version:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Windows/FrameworkContentElement.xml\n  ms.technology:\n  - dotnet-wpf\n  author: stevehoag\n  ms.author: shoag\n  manager: wpickett\n- uid: System.Windows.FrameworkContentElement.DataContextProperty\n  commentId: F:System.Windows.FrameworkContentElement.DataContextProperty\n  id: DataContextProperty\n  parent: System.Windows.FrameworkContentElement\n  langs:\n  - csharp\n  name: DataContextProperty\n  nameWithType: FrameworkContentElement.DataContextProperty\n  fullName: FrameworkContentElement.DataContextProperty\n  type: Field\n  assemblies:\n  - PresentationFramework\n  namespace: System.Windows\n  summary: Identifies the <xref href=\"System.Windows.FrameworkContentElement.DataContext\"></xref> dependency property.\n  syntax:\n    content: public static readonly System.Windows.DependencyProperty DataContextProperty;\n    return:\n      type: System.Windows.DependencyProperty\n      description: ''\n  exceptions: []\n  version:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Windows/FrameworkContentElement.xml\n  ms.technology:\n  - dotnet-wpf\n  author: stevehoag\n  ms.author: shoag\n  manager: wpickett\n- uid: System.Windows.FrameworkContentElement.DefaultStyleKey\n  commentId: P:System.Windows.FrameworkContentElement.DefaultStyleKey\n  id: DefaultStyleKey\n  parent: System.Windows.FrameworkContentElement\n  langs:\n  - csharp\n  name: DefaultStyleKey\n  nameWithType: FrameworkContentElement.DefaultStyleKey\n  fullName: FrameworkContentElement.DefaultStyleKey\n  type: Property\n  assemblies:\n  - PresentationFramework\n  namespace: System.Windows\n  summary: Gets or sets the key to use to find the style template for this control in themes.\n  remarks: \"This property is typically not set through any of its direct setters. Instead, you override the type-specific metadata of this dependency property every time you create a new subclass. When you subclass, call the <xref:System.Windows.DependencyProperty.OverrideMetadata%2A> method against the <xref:System.Windows.FrameworkContentElement.DefaultStyleKeyProperty> identifier, within the static constructor of the control subclass.  \\n  \\n For instance, an inline class such as <xref:System.Windows.Documents.Bold> actually has very little implementation beyond overriding the <xref:System.Windows.FrameworkContentElement.DefaultStyleKey%2A> metadata in its static constructor, and exposing several instance constructors. The fact that elements surrounded by the <xref:System.Windows.Documents.Bold> tag gain a <xref:System.Windows.Documents.TextElement.FontWeight%2A> property of <xref:System.Windows.FontWeights.Bold%2A> is implemented within the theme style that was referenced by setting the default value of <xref:System.Windows.FrameworkContentElement.DefaultStyleKey%2A> to `typeof(Bold)`.  \\n  \\n If you want your element or control to deliberately not use theme styles, set the <xref:System.Windows.FrameworkContentElement.OverridesDefaultStyle%2A> property to `true`.  \\n  \\n<a name=\\\"dependencyPropertyInfo_DefaultStyleKey\\\"></a>   \\n## Dependency Property Information  \\n  \\n|||  \\n|-|-|  \\n|Identifier field|<xref:System.Windows.FrameworkContentElement.DefaultStyleKeyProperty>|  \\n|Metadata properties set to `true`|<xref:System.Windows.FrameworkPropertyMetadata.AffectsMeasure%2A>|\"\n  syntax:\n    content: protected object DefaultStyleKey { get; set; }\n    return:\n      type: System.Object\n      description: The style key. To work correctly as part of theme style lookup, this value is expected to be the <xref href=\"System.Type\"></xref> of the element being styled. `null` is an accepted value for a certain case.\n  overload: System.Windows.FrameworkContentElement.DefaultStyleKey*\n  exceptions: []\n  version:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Windows/FrameworkContentElement.xml\n  ms.technology:\n  - dotnet-wpf\n  author: stevehoag\n  ms.author: shoag\n  manager: wpickett\n- uid: System.Windows.FrameworkContentElement.DefaultStyleKeyProperty\n  commentId: F:System.Windows.FrameworkContentElement.DefaultStyleKeyProperty\n  id: DefaultStyleKeyProperty\n  parent: System.Windows.FrameworkContentElement\n  langs:\n  - csharp\n  name: DefaultStyleKeyProperty\n  nameWithType: FrameworkContentElement.DefaultStyleKeyProperty\n  fullName: FrameworkContentElement.DefaultStyleKeyProperty\n  type: Field\n  assemblies:\n  - PresentationFramework\n  namespace: System.Windows\n  summary: Identifies the <xref href=\"System.Windows.FrameworkContentElement.DefaultStyleKey\"></xref> dependency property.\n  syntax:\n    content: protected static readonly System.Windows.DependencyProperty DefaultStyleKeyProperty;\n    return:\n      type: System.Windows.DependencyProperty\n      description: ''\n  exceptions: []\n  version:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Windows/FrameworkContentElement.xml\n  ms.technology:\n  - dotnet-wpf\n  author: stevehoag\n  ms.author: shoag\n  manager: wpickett\n- uid: System.Windows.FrameworkContentElement.EndInit\n  commentId: M:System.Windows.FrameworkContentElement.EndInit\n  id: EndInit\n  parent: System.Windows.FrameworkContentElement\n  langs:\n  - csharp\n  name: EndInit()\n  nameWithType: FrameworkContentElement.EndInit()\n  fullName: FrameworkContentElement.EndInit()\n  type: Method\n  assemblies:\n  - PresentationFramework\n  namespace: System.Windows\n  summary: Called immediately after an element is initialized.\n  remarks: \"Implement this method to provide special handling that should occur when your element is initialized during the element loading process.  \\n  \\n Your implementation should call the base implementation, because the base (default) implementation sets some internal flags to keep track of initialization.  \\n  \\n If <xref:System.Windows.FrameworkContentElement.BeginInit%2A> was previously called, the base implementation will raise the <xref:System.Windows.FrameworkContentElement.Initialized> event. Otherwise, if <xref:System.Windows.FrameworkContentElement.BeginInit%2A> was not called or it could not be determined whether <xref:System.Windows.FrameworkContentElement.BeginInit%2A> was called, the event is not raised.\"\n  syntax:\n    content: public virtual void EndInit ();\n    parameters: []\n  overload: System.Windows.FrameworkContentElement.EndInit*\n  exceptions: []\n  version:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Windows/FrameworkContentElement.xml\n  ms.technology:\n  - dotnet-wpf\n  author: stevehoag\n  ms.author: shoag\n  manager: wpickett\n- uid: System.Windows.FrameworkContentElement.FindName(System.String)\n  commentId: M:System.Windows.FrameworkContentElement.FindName(System.String)\n  id: FindName(System.String)\n  parent: System.Windows.FrameworkContentElement\n  langs:\n  - csharp\n  name: FindName(String)\n  nameWithType: FrameworkContentElement.FindName(String)\n  fullName: FrameworkContentElement.FindName(String)\n  type: Method\n  assemblies:\n  - PresentationFramework\n  namespace: System.Windows\n  summary: Finds an element that has the provided identifier name.\n  remarks: If this element has child elements, these child elements are all searched recursively for the requested named element.\n  example:\n  - \"The following example sets a property on an element found by name within a referenced <xref:System.Windows.Documents.FlowDocument> on a page.  \\n  \\n [!code-csharp[ContentElementsSmorgasbord#FindName](~/samples/snippets/csharp/VS_Snippets_Wpf/ContentElementsSmorgasbord/CSharp/page1.xaml.cs#findname)]\\n [!code-vb[ContentElementsSmorgasbord#FindName](~/samples/snippets/visualbasic/VS_Snippets_Wpf/ContentElementsSmorgasbord/visualbasic/page1.xaml.vb#findname)]\"\n  syntax:\n    content: public object FindName (string name);\n    parameters:\n    - id: name\n      type: System.String\n      description: Name of the element to search for.\n    return:\n      type: System.Object\n      description: The requested element. May be `null` if no matching element was found.\n  overload: System.Windows.FrameworkContentElement.FindName*\n  exceptions: []\n  version:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Windows/FrameworkContentElement.xml\n  ms.technology:\n  - dotnet-wpf\n  ms.author: kempb\n  manager: ghogen\n- uid: System.Windows.FrameworkContentElement.FindResource(System.Object)\n  commentId: M:System.Windows.FrameworkContentElement.FindResource(System.Object)\n  id: FindResource(System.Object)\n  parent: System.Windows.FrameworkContentElement\n  langs:\n  - csharp\n  name: FindResource(Object)\n  nameWithType: FrameworkContentElement.FindResource(Object)\n  fullName: FrameworkContentElement.FindResource(Object)\n  type: Method\n  assemblies:\n  - PresentationFramework\n  namespace: System.Windows\n  summary: Searches for a resource with the specified key, and will throw an exception if the requested resource is not found.\n  remarks: \"> [!IMPORTANT]\\n>  If you call this method for a key that cannot be found, an exception is thrown. If you do not want to handle exceptions for this case, you should instead call <xref:System.Windows.FrameworkContentElement.TryFindResource%2A>. <xref:System.Windows.FrameworkContentElement.TryFindResource%2A> returns `null` when no resource is found, and does not throw an exception.  \\n  \\n If the resource is not found on the calling element, the parent tree is searched using the logical tree, in the same way that the tree would be searched if a resource were requested by key at run-time.  \\n  \\n Typically you would immediately cast the return value to the type of the property that you were attempting to set with the returned resource value.\"\n  example:\n  - \"The following example finds a resource as defined in markup and applies it to a certain property of an element in response to a routed event.  \\n  \\n [!code-csharp[ContentElementsSmorgasbord#FindResource](~/samples/snippets/csharp/VS_Snippets_Wpf/ContentElementsSmorgasbord/CSharp/page1.xaml.cs#findresource)]\\n [!code-vb[ContentElementsSmorgasbord#FindResource](~/samples/snippets/visualbasic/VS_Snippets_Wpf/ContentElementsSmorgasbord/visualbasic/page1.xaml.vb#findresource)]\"\n  syntax:\n    content: public object FindResource (object resourceKey);\n    parameters:\n    - id: resourceKey\n      type: System.Object\n      description: Key identifier of the resource to be found.\n    return:\n      type: System.Object\n      description: The found resource, or `null` if no matching resource was found (but will also throw an exception if `null`).\n  overload: System.Windows.FrameworkContentElement.FindResource*\n  exceptions:\n  - type: System.Windows.ResourceReferenceKeyNotFoundException\n    commentId: T:System.Windows.ResourceReferenceKeyNotFoundException\n    description: The requested resource key was not found.\n  - type: System.ArgumentNullException\n    commentId: T:System.ArgumentNullException\n    description: <code>resourceKey</code> is `null`.\n  version:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Windows/FrameworkContentElement.xml\n  ms.technology:\n  - dotnet-wpf\n  author: stevehoag\n  ms.author: shoag\n  manager: wpickett\n- uid: System.Windows.FrameworkContentElement.FocusVisualStyle\n  commentId: P:System.Windows.FrameworkContentElement.FocusVisualStyle\n  id: FocusVisualStyle\n  parent: System.Windows.FrameworkContentElement\n  langs:\n  - csharp\n  name: FocusVisualStyle\n  nameWithType: FrameworkContentElement.FocusVisualStyle\n  fullName: FrameworkContentElement.FocusVisualStyle\n  type: Property\n  assemblies:\n  - PresentationFramework\n  namespace: System.Windows\n  summary: Gets or sets an object that enables customization of appearance, effects, or other style characteristics that will apply to this element when it captures keyboard focus.\n  remarks: \"When setting this property in [!INCLUDE[TLA2#tla_xaml](~/includes/tla2sharptla-xaml-md.md)], styles are almost always defined as a resource, rather than inline as an element, and that resource is usually referenced as a <xref:System.Windows.StaticResourceExtension>.  \\n  \\n Note that this property affects visual appearance but does not report so in metadata. This is because the visual appearance change is event-driven and may not apply at all times, and thus should not generally report any visual or layout information in metadata.  \\n  \\n Conceptually, the visual behavior of focus applied to a control should be coherent from element to element. The most sensible way to enforce coherence is to only change the focus visual style if you are composing an entire theme. Setting this property on individual styles and not as part of a theme is not the intended usage of this property, because it may lead to a confusing user experience regarding keyboard focus. If you are intending element-specific behavior that is deliberately not coherent across a theme, a much better approach is to use triggers in styles for individual input state properties, such as <xref:System.Windows.UIElement.IsFocused%2A> or <xref:System.Windows.UIElement.IsKeyboardFocusWithin%2A>, and to do so in a way that does not visually interfere with any existing focus visual style. For more information on the design intention of <xref:System.Windows.FrameworkContentElement.FocusVisualStyle%2A> and alternative focus properties, see [Styling for Focus in Controls, and FocusVisualStyle](~/docs/framework/wpf/advanced/styling-for-focus-in-controls-and-focusvisualstyle.md).  \\n  \\n<a name=\\\"xamlAttributeUsage_FocusVisualStyle\\\"></a>   \\n## XAML Attribute Usage  \\n  \\n```  \\n<object FocusVisualStyle=\\\"{resourceExtension styleResourceKey}\\\"/>  \\n```  \\n  \\n<a name=\\\"xamlPropertyElementUsage_FocusVisualStyle\\\"></a>   \\n## XAML Property Element Usage  \\n  \\n<a name=\\\"xamlValues_FocusVisualStyle\\\"></a>   \\n## XAML Values  \\n *resourceExtension*  \\n One of the following: , or . See [XAML Resources](~/docs/framework/wpf/advanced/xaml-resources.md).  \\n  \\n *styleResourceKey*  \\n The key that identifies the style being requested. The key refers to an existing resource in a <xref:System.Windows.ResourceDictionary>.  \\n  \\n> [!NOTE]\\n>  Property element syntax is technically possible, but not recommended. See [Inline Styles and Templates](~/docs/framework/wpf/advanced/inline-styles-and-templates.md).  A binding reference using  or <xref:System.Windows.Data.Binding> is also possible, but uncommon.  \\n  \\n<a name=\\\"dependencyPropertyInfo_FocusVisualStyle\\\"></a>   \\n## Dependency Property Information  \\n  \\n|||  \\n|-|-|  \\n|Identifier field|<xref:System.Windows.FrameworkContentElement.FocusVisualStyleProperty>|  \\n|Metadata properties set to `true`|None|\"\n  syntax:\n    content: public System.Windows.Style FocusVisualStyle { get; set; }\n    return:\n      type: System.Windows.Style\n      description: The desired style to apply on focus. The default value as declared in the dependency property is an empty static <xref href=\"System.Windows.Style\"></xref>. However, the effective value at run time is often (but not always) a style as supplied by theme support for controls.\n  overload: System.Windows.FrameworkContentElement.FocusVisualStyle*\n  exceptions: []\n  version:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Windows/FrameworkContentElement.xml\n  ms.technology:\n  - dotnet-wpf\n  author: stevehoag\n  ms.author: shoag\n  manager: wpickett\n- uid: System.Windows.FrameworkContentElement.FocusVisualStyleProperty\n  commentId: F:System.Windows.FrameworkContentElement.FocusVisualStyleProperty\n  id: FocusVisualStyleProperty\n  parent: System.Windows.FrameworkContentElement\n  langs:\n  - csharp\n  name: FocusVisualStyleProperty\n  nameWithType: FrameworkContentElement.FocusVisualStyleProperty\n  fullName: FrameworkContentElement.FocusVisualStyleProperty\n  type: Field\n  assemblies:\n  - PresentationFramework\n  namespace: System.Windows\n  summary: Identifies the <xref href=\"System.Windows.FrameworkContentElement.FocusVisualStyle\"></xref> dependency property.\n  syntax:\n    content: public static readonly System.Windows.DependencyProperty FocusVisualStyleProperty;\n    return:\n      type: System.Windows.DependencyProperty\n      description: ''\n  exceptions: []\n  version:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Windows/FrameworkContentElement.xml\n  ms.technology:\n  - dotnet-wpf\n  author: stevehoag\n  ms.author: shoag\n  manager: wpickett\n- uid: System.Windows.FrameworkContentElement.ForceCursor\n  commentId: P:System.Windows.FrameworkContentElement.ForceCursor\n  id: ForceCursor\n  parent: System.Windows.FrameworkContentElement\n  langs:\n  - csharp\n  name: ForceCursor\n  nameWithType: FrameworkContentElement.ForceCursor\n  fullName: FrameworkContentElement.ForceCursor\n  type: Property\n  assemblies:\n  - PresentationFramework\n  namespace: System.Windows\n  summary: Gets or sets a value indicating whether this <xref href=\"System.Windows.FrameworkContentElement\"></xref> should force the [!INCLUDE[TLA#tla_ui](~/includes/tlasharptla-ui-md.md)] to render the cursor as declared by this instance's <xref href=\"System.Windows.FrameworkContentElement.Cursor\"></xref> property.\n  remarks: \"Setting this property to `true` will override the cursor preferences established by child elements. Doing so in general application [!INCLUDE[TLA2#tla_ui](~/includes/tla2sharptla-ui-md.md)] might be confusing for the user, particularly if child elements are attempting to specify cursors. Setting <xref:System.Windows.FrameworkElement.ForceCursor%2A> is more appropriate in control subclassing or compositing scenarios.  \\n  \\n<a name=\\\"dependencyPropertyInfo_ForceCursor\\\"></a>   \\n## Dependency Property Information  \\n  \\n|||  \\n|-|-|  \\n|Identifier field|<xref:System.Windows.FrameworkContentElement.ForceCursorProperty>|  \\n|Metadata properties set to `true`|None|\"\n  example:\n  - \"The following example forces the cursor while over the element.  \\n  \\n [!code-xml[ForceCursor#ForceCursor](~/samples/snippets/csharp/VS_Snippets_Wpf/ForceCursor/CS/default.xaml#forcecursor)]\"\n  syntax:\n    content: public bool ForceCursor { get; set; }\n    return:\n      type: System.Boolean\n      description: \"`true` to force cursor presentation while over this element to use this instance's setting for the cursor (including on all child elements); otherwise `false`. The default value is `false`.\"\n  overload: System.Windows.FrameworkContentElement.ForceCursor*\n  exceptions: []\n  version:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Windows/FrameworkContentElement.xml\n  ms.technology:\n  - dotnet-wpf\n  author: stevehoag\n  ms.author: shoag\n  manager: wpickett\n- uid: System.Windows.FrameworkContentElement.ForceCursorProperty\n  commentId: F:System.Windows.FrameworkContentElement.ForceCursorProperty\n  id: ForceCursorProperty\n  parent: System.Windows.FrameworkContentElement\n  langs:\n  - csharp\n  name: ForceCursorProperty\n  nameWithType: FrameworkContentElement.ForceCursorProperty\n  fullName: FrameworkContentElement.ForceCursorProperty\n  type: Field\n  assemblies:\n  - PresentationFramework\n  namespace: System.Windows\n  summary: Identifies the <xref href=\"System.Windows.FrameworkContentElement.ForceCursor\"></xref> dependency property.\n  syntax:\n    content: public static readonly System.Windows.DependencyProperty ForceCursorProperty;\n    return:\n      type: System.Windows.DependencyProperty\n      description: ''\n  exceptions: []\n  version:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Windows/FrameworkContentElement.xml\n  ms.technology:\n  - dotnet-wpf\n  author: stevehoag\n  ms.author: shoag\n  manager: wpickett\n- uid: System.Windows.FrameworkContentElement.GetBindingExpression(System.Windows.DependencyProperty)\n  commentId: M:System.Windows.FrameworkContentElement.GetBindingExpression(System.Windows.DependencyProperty)\n  id: GetBindingExpression(System.Windows.DependencyProperty)\n  parent: System.Windows.FrameworkContentElement\n  langs:\n  - csharp\n  name: GetBindingExpression(DependencyProperty)\n  nameWithType: FrameworkContentElement.GetBindingExpression(DependencyProperty)\n  fullName: FrameworkContentElement.GetBindingExpression(DependencyProperty)\n  type: Method\n  assemblies:\n  - PresentationFramework\n  namespace: System.Windows\n  summary: Gets the <xref href=\"System.Windows.Data.BindingExpression\"></xref> for the specified property's binding.\n  remarks: ''\n  example:\n  - \"The following example retrieves a binding by querying a property.  \\n  \\n [!code-csharp[ContentElementsSmorgasbord#GetBindingExpression](~/samples/snippets/csharp/VS_Snippets_Wpf/ContentElementsSmorgasbord/CSharp/page1.xaml.cs#getbindingexpression)]\\n [!code-vb[ContentElementsSmorgasbord#GetBindingExpression](~/samples/snippets/visualbasic/VS_Snippets_Wpf/ContentElementsSmorgasbord/visualbasic/page1.xaml.vb#getbindingexpression)]\"\n  syntax:\n    content: public System.Windows.Data.BindingExpression GetBindingExpression (System.Windows.DependencyProperty dp);\n    parameters:\n    - id: dp\n      type: System.Windows.DependencyProperty\n      description: The target <xref href=\"System.Windows.DependencyProperty\"></xref> from which to get the binding.\n    return:\n      type: System.Windows.Data.BindingExpression\n      description: Returns a <xref href=\"System.Windows.Data.BindingExpression\"></xref> if the target is data bound; otherwise, `null`.\n  overload: System.Windows.FrameworkContentElement.GetBindingExpression*\n  exceptions: []\n  version:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Windows/FrameworkContentElement.xml\n  ms.technology:\n  - dotnet-wpf\n  author: stevehoag\n  ms.author: shoag\n  manager: wpickett\n- uid: System.Windows.FrameworkContentElement.GetUIParentCore\n  commentId: M:System.Windows.FrameworkContentElement.GetUIParentCore\n  id: GetUIParentCore\n  parent: System.Windows.FrameworkContentElement\n  langs:\n  - csharp\n  name: GetUIParentCore()\n  nameWithType: FrameworkContentElement.GetUIParentCore()\n  fullName: FrameworkContentElement.GetUIParentCore()\n  type: Method\n  assemblies:\n  - PresentationFramework\n  namespace: System.Windows\n  summary: Returns an alternative logical parent for this element if there is no visual parent. In this case, a <xref href=\"System.Windows.FrameworkContentElement\"></xref> parent is always the same value as the <xref href=\"System.Windows.FrameworkContentElement.Parent\"></xref> property.\n  remarks: The default implementation returns the expected single visual parent. Custom implementations might return alternate parent relationships.\n  syntax:\n    content: protected override System.Windows.DependencyObject GetUIParentCore ();\n    parameters: []\n    return:\n      type: System.Windows.DependencyObject\n      description: Returns something other than `null` whenever a WPF framework-level implementation of this method has a non-visual parent connection.\n  overload: System.Windows.FrameworkContentElement.GetUIParentCore*\n  exceptions: []\n  version:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Windows/FrameworkContentElement.xml\n  ms.technology:\n  - dotnet-wpf\n  author: stevehoag\n  ms.author: shoag\n  manager: wpickett\n- uid: System.Windows.FrameworkContentElement.Initialized\n  commentId: E:System.Windows.FrameworkContentElement.Initialized\n  id: Initialized\n  parent: System.Windows.FrameworkContentElement\n  langs:\n  - csharp\n  name: Initialized\n  nameWithType: FrameworkContentElement.Initialized\n  fullName: FrameworkContentElement.Initialized\n  type: Event\n  assemblies:\n  - PresentationFramework\n  namespace: System.Windows\n  summary: Occurs when this <xref href=\"System.Windows.FrameworkContentElement\"></xref> is initialized. This coincides with cases where the value of the <xref href=\"System.Windows.FrameworkContentElement.IsInitialized\"></xref> property changes from `false` (or undefined) to `true`.\n  remarks: This event will be raised whenever the <xref:System.Windows.FrameworkContentElement.EndInit%2A> or <xref:System.Windows.FrameworkContentElement.OnInitialized%2A> methods are called. Calls to these methods could have been made by deliberate code, or by the [!INCLUDE[TLA#tla_xaml](~/includes/tlasharptla-xaml-md.md)] loading process.\n  syntax:\n    content: public event EventHandler Initialized;\n    return:\n      type: System.EventHandler\n      description: ''\n  exceptions: []\n  attributes: []\n  version:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Windows/FrameworkContentElement.xml\n  ms.technology:\n  - dotnet-wpf\n  author: stevehoag\n  ms.author: shoag\n  manager: wpickett\n- uid: System.Windows.FrameworkContentElement.InputScope\n  commentId: P:System.Windows.FrameworkContentElement.InputScope\n  id: InputScope\n  parent: System.Windows.FrameworkContentElement\n  langs:\n  - csharp\n  name: InputScope\n  nameWithType: FrameworkContentElement.InputScope\n  fullName: FrameworkContentElement.InputScope\n  type: Property\n  assemblies:\n  - PresentationFramework\n  namespace: System.Windows\n  summary: Gets or sets the context for input used by this <xref href=\"System.Windows.FrameworkContentElement\"></xref>.\n  remarks: \"This dependency property inherits property values. If there are child elements with no other value for <xref:System.Windows.FrameworkElement.InputScope%2A> established through local values or styles, the property system will set the value to be the <xref:System.Windows.FrameworkElement.InputScope%2A> value of the nearest parent element with this value assigned.  \\n  \\n Although a [!INCLUDE[TLA2#tla_xaml](~/includes/tla2sharptla-xaml-md.md)] syntax usage is listed and is syntactically allowed, setting this property in [!INCLUDE[TLA2#tla_xaml](~/includes/tla2sharptla-xaml-md.md)] is not common.  \\n  \\n<a name=\\\"dependencyPropertyInfo_InputScope\\\"></a>   \\n## Dependency Property Information  \\n  \\n|||  \\n|-|-|  \\n|Identifier field|<xref:System.Windows.FrameworkContentElement.InputScopeProperty>|  \\n|Metadata properties set to `true`|<xref:System.Windows.FrameworkPropertyMetadata.Inherits%2A>|\"\n  syntax:\n    content: public System.Windows.Input.InputScope InputScope { get; set; }\n    return:\n      type: System.Windows.Input.InputScope\n      description: The input scope, which modifies how input from alternative input methods is interpreted. The default value is `null` (which results in a default handling of commands).\n  overload: System.Windows.FrameworkContentElement.InputScope*\n  exceptions: []\n  version:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Windows/FrameworkContentElement.xml\n  ms.technology:\n  - dotnet-wpf\n  author: stevehoag\n  ms.author: shoag\n  manager: wpickett\n- uid: System.Windows.FrameworkContentElement.InputScopeProperty\n  commentId: F:System.Windows.FrameworkContentElement.InputScopeProperty\n  id: InputScopeProperty\n  parent: System.Windows.FrameworkContentElement\n  langs:\n  - csharp\n  name: InputScopeProperty\n  nameWithType: FrameworkContentElement.InputScopeProperty\n  fullName: FrameworkContentElement.InputScopeProperty\n  type: Field\n  assemblies:\n  - PresentationFramework\n  namespace: System.Windows\n  summary: Identifies the <xref href=\"System.Windows.FrameworkContentElement.InputScope\"></xref> dependency property.\n  syntax:\n    content: public static readonly System.Windows.DependencyProperty InputScopeProperty;\n    return:\n      type: System.Windows.DependencyProperty\n      description: ''\n  exceptions: []\n  version:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Windows/FrameworkContentElement.xml\n  ms.technology:\n  - dotnet-wpf\n  ms.author: kempb\n  manager: ghogen\n- uid: System.Windows.FrameworkContentElement.IsInitialized\n  commentId: P:System.Windows.FrameworkContentElement.IsInitialized\n  id: IsInitialized\n  parent: System.Windows.FrameworkContentElement\n  langs:\n  - csharp\n  name: IsInitialized\n  nameWithType: FrameworkContentElement.IsInitialized\n  fullName: FrameworkContentElement.IsInitialized\n  type: Property\n  assemblies:\n  - PresentationFramework\n  namespace: System.Windows\n  summary: Gets a value indicating whether this element has been initialized, either by being loaded as [!INCLUDE[TLA#tla_xaml](~/includes/tlasharptla-xaml-md.md)], or by explicitly having its <xref href=\"System.Windows.FrameworkContentElement.EndInit\"></xref> method called.\n  remarks: This property may also be `true` if this element has been moved within the element tree such that it has a new parent element, and therefore becomes reloaded again.\n  syntax:\n    content: public bool IsInitialized { get; }\n    return:\n      type: System.Boolean\n      description: '`true` if the element is initialized per the aforementioned loading or method calls; otherwise, `false`.'\n  overload: System.Windows.FrameworkContentElement.IsInitialized*\n  exceptions: []\n  attributes: []\n  version:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Windows/FrameworkContentElement.xml\n  ms.technology:\n  - dotnet-wpf\n  author: stevehoag\n  ms.author: shoag\n  manager: wpickett\n- uid: System.Windows.FrameworkContentElement.IsLoaded\n  commentId: P:System.Windows.FrameworkContentElement.IsLoaded\n  id: IsLoaded\n  parent: System.Windows.FrameworkContentElement\n  langs:\n  - csharp\n  name: IsLoaded\n  nameWithType: FrameworkContentElement.IsLoaded\n  fullName: FrameworkContentElement.IsLoaded\n  type: Property\n  assemblies:\n  - PresentationFramework\n  namespace: System.Windows\n  summary: Gets a value indicating whether this element has been loaded for presentation.\n  remarks: From a newly constructed instance, this property starts off `false`, and remains `true` once it is set to `true`, even if subsequently removed by  code.\n  example:\n  - \"The following example code uses <xref:System.Windows.FrameworkContentElement.IsLoaded%2A> as a conditional check to assure that a function `displayData` (not shown) will have valid elements loaded on the page to work against, as part of an on-demand handler. That same logic is run as an event handler for <xref:System.Windows.FrameworkContentElement.Loaded>.  \\n  \\n [!code-csharp[ContentElementsSmorgasbord#IsLoaded](~/samples/snippets/csharp/VS_Snippets_Wpf/ContentElementsSmorgasbord/CSharp/page1.xaml.cs#isloaded)]\\n [!code-vb[ContentElementsSmorgasbord#IsLoaded](~/samples/snippets/visualbasic/VS_Snippets_Wpf/ContentElementsSmorgasbord/visualbasic/page1.xaml.vb#isloaded)]\"\n  syntax:\n    content: public bool IsLoaded { get; }\n    return:\n      type: System.Boolean\n      description: '`true` if the current element is attached to an element tree and has been rendered; `false` if the element has never been attached to a loaded element tree.'\n  overload: System.Windows.FrameworkContentElement.IsLoaded*\n  exceptions: []\n  version:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Windows/FrameworkContentElement.xml\n  ms.technology:\n  - dotnet-wpf\n  author: stevehoag\n  ms.author: shoag\n  manager: wpickett\n- uid: System.Windows.FrameworkContentElement.Language\n  commentId: P:System.Windows.FrameworkContentElement.Language\n  id: Language\n  parent: System.Windows.FrameworkContentElement\n  langs:\n  - csharp\n  name: Language\n  nameWithType: FrameworkContentElement.Language\n  fullName: FrameworkContentElement.Language\n  type: Property\n  assemblies:\n  - PresentationFramework\n  namespace: System.Windows\n  summary: Gets or sets localization/globalization language information that applies to an individual element.\n  remarks: \"The string formats follow the RFC 3066 standard. For example, U.S. English is \\\"en-US\\\". See <xref:System.Windows.Markup.XmlLanguage> for more information on the values and format.  \\n  \\n This dependency property inherits property values. If there are child elements with no other value for <xref:System.Windows.FrameworkElement.Language%2A> established through local values or styles, the property system will set the value to be the <xref:System.Windows.FrameworkElement.Language%2A> value of the nearest parent element with this value assigned.  \\n  \\n<a name=\\\"dependencyPropertyInfo_CultureInfo\\\"></a>   \\n## Dependency Property Information  \\n  \\n|||  \\n|-|-|  \\n|Identifier field|<xref:System.Windows.FrameworkContentElement.LanguageProperty>|  \\n|Metadata properties set to `true`|<xref:System.Windows.FrameworkPropertyMetadata.Inherits%2A>|\"\n  syntax:\n    content: public System.Windows.Markup.XmlLanguage Language { get; set; }\n    return:\n      type: System.Windows.Markup.XmlLanguage\n      description: The culture information for this element. The default value is an <xref href=\"System.Windows.Markup.XmlLanguage\"></xref> instance with its <xref href=\"System.Windows.Markup.XmlLanguage.IetfLanguageTag\"></xref> value set to the string \"en-US\".\n  overload: System.Windows.FrameworkContentElement.Language*\n  exceptions: []\n  version:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Windows/FrameworkContentElement.xml\n  ms.technology:\n  - dotnet-wpf\n  author: stevehoag\n  ms.author: shoag\n  manager: wpickett\n- uid: System.Windows.FrameworkContentElement.LanguageProperty\n  commentId: F:System.Windows.FrameworkContentElement.LanguageProperty\n  id: LanguageProperty\n  parent: System.Windows.FrameworkContentElement\n  langs:\n  - csharp\n  name: LanguageProperty\n  nameWithType: FrameworkContentElement.LanguageProperty\n  fullName: FrameworkContentElement.LanguageProperty\n  type: Field\n  assemblies:\n  - PresentationFramework\n  namespace: System.Windows\n  summary: Identifies the <xref href=\"System.Windows.FrameworkContentElement.Language\"></xref> dependency property.\n  syntax:\n    content: public static readonly System.Windows.DependencyProperty LanguageProperty;\n    return:\n      type: System.Windows.DependencyProperty\n      description: ''\n  exceptions: []\n  version:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Windows/FrameworkContentElement.xml\n  ms.technology:\n  - dotnet-wpf\n  ms.author: kempb\n  manager: ghogen\n- uid: System.Windows.FrameworkContentElement.Loaded\n  commentId: E:System.Windows.FrameworkContentElement.Loaded\n  id: Loaded\n  parent: System.Windows.FrameworkContentElement\n  langs:\n  - csharp\n  name: Loaded\n  nameWithType: FrameworkContentElement.Loaded\n  fullName: FrameworkContentElement.Loaded\n  type: Event\n  assemblies:\n  - PresentationFramework\n  namespace: System.Windows\n  summary: Occurs when the element is laid out, rendered, and ready for interaction.\n  remarks: \"Direct routed events do not follow a route, they are only handled within the same element on which they are raised. Direct routed events do support other routed event behavior: they support an accessible handlers collection, and can be used as an <xref:System.Windows.EventTrigger> in a style.  \\n  \\n<a name=\\\"routedEventInfo_Loaded\\\"></a>   \\n## Routed Event Information  \\n  \\n|||  \\n|-|-|  \\n|Identifier field|<xref:System.Windows.FrameworkContentElement.LoadedEvent>|  \\n|Routing strategy|Direct|  \\n|Delegate|<xref:System.Windows.RoutedEventHandler>|\"\n  syntax:\n    content: public event System.Windows.RoutedEventHandler Loaded;\n    return:\n      type: System.Windows.RoutedEventHandler\n      description: ''\n  exceptions: []\n  version:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Windows/FrameworkContentElement.xml\n  ms.technology:\n  - dotnet-wpf\n  author: stevehoag\n  ms.author: shoag\n  manager: wpickett\n- uid: System.Windows.FrameworkContentElement.LoadedEvent\n  commentId: F:System.Windows.FrameworkContentElement.LoadedEvent\n  id: LoadedEvent\n  parent: System.Windows.FrameworkContentElement\n  langs:\n  - csharp\n  name: LoadedEvent\n  nameWithType: FrameworkContentElement.LoadedEvent\n  fullName: FrameworkContentElement.LoadedEvent\n  type: Field\n  assemblies:\n  - PresentationFramework\n  namespace: System.Windows\n  summary: Identifies the <xref href=\"System.Windows.FrameworkContentElement.Loaded\"></xref> [Routed Events Overview](~/docs/framework/wpf/advanced/routed-events-overview.md).\n  remarks: Event identifier objects are created when routed events are registered (see <xref:System.Windows.EventManager.RegisterRoutedEvent%2A>) and can then be used to add class handlers (see <xref:System.Windows.EventManager.RegisterClassHandler%2A>). Identifier objects contain an identifying name, owner type, handler type, routing strategy, and a utility method for adding owners for the event.\n  syntax:\n    content: public static readonly System.Windows.RoutedEvent LoadedEvent;\n    return:\n      type: System.Windows.RoutedEvent\n      description: ''\n  exceptions: []\n  version:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Windows/FrameworkContentElement.xml\n  ms.technology:\n  - dotnet-wpf\n  author: stevehoag\n  ms.author: shoag\n  manager: wpickett\n- uid: System.Windows.FrameworkContentElement.LogicalChildren\n  commentId: P:System.Windows.FrameworkContentElement.LogicalChildren\n  id: LogicalChildren\n  parent: System.Windows.FrameworkContentElement\n  langs:\n  - csharp\n  name: LogicalChildren\n  nameWithType: FrameworkContentElement.LogicalChildren\n  fullName: FrameworkContentElement.LogicalChildren\n  type: Property\n  assemblies:\n  - PresentationFramework\n  namespace: System.Windows\n  summary: Gets an enumerator for the logical child elements of this element.\n  remarks: For more information on how to use <xref:System.Windows.FrameworkContentElement.LogicalChildren%2A> and <xref:System.Windows.FrameworkContentElement.AddLogicalChild%2A>, see [Trees in WPF](~/docs/framework/wpf/advanced/trees-in-wpf.md).\n  syntax:\n    content: protected virtual System.Collections.IEnumerator LogicalChildren { get; }\n    return:\n      type: System.Collections.IEnumerator\n      description: An enumerator for logical child elements of this element.\n  overload: System.Windows.FrameworkContentElement.LogicalChildren*\n  exceptions: []\n  version:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Windows/FrameworkContentElement.xml\n  ms.technology:\n  - dotnet-wpf\n  author: stevehoag\n  ms.author: shoag\n  manager: wpickett\n- uid: System.Windows.FrameworkContentElement.MoveFocus(System.Windows.Input.TraversalRequest)\n  commentId: M:System.Windows.FrameworkContentElement.MoveFocus(System.Windows.Input.TraversalRequest)\n  id: MoveFocus(System.Windows.Input.TraversalRequest)\n  parent: System.Windows.FrameworkContentElement\n  langs:\n  - csharp\n  name: MoveFocus(TraversalRequest)\n  nameWithType: FrameworkContentElement.MoveFocus(TraversalRequest)\n  fullName: FrameworkContentElement.MoveFocus(TraversalRequest)\n  type: Method\n  assemblies:\n  - PresentationFramework\n  namespace: System.Windows\n  summary: Moves the keyboard focus from this element to another element.\n  syntax:\n    content: public override sealed bool MoveFocus (System.Windows.Input.TraversalRequest request);\n    parameters:\n    - id: request\n      type: System.Windows.Input.TraversalRequest\n      description: The direction that focus is to be moved, as a value of the enumeration.\n    return:\n      type: System.Boolean\n      description: Returns `true` if focus is moved successfully; `false` if the target element in direction as specified does not exist.\n  overload: System.Windows.FrameworkContentElement.MoveFocus*\n  exceptions: []\n  version:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Windows/FrameworkContentElement.xml\n  ms.technology:\n  - dotnet-wpf\n  author: stevehoag\n  ms.author: shoag\n  manager: wpickett\n- uid: System.Windows.FrameworkContentElement.Name\n  commentId: P:System.Windows.FrameworkContentElement.Name\n  id: Name\n  parent: System.Windows.FrameworkContentElement\n  langs:\n  - csharp\n  name: Name\n  nameWithType: FrameworkContentElement.Name\n  fullName: FrameworkContentElement.Name\n  type: Property\n  assemblies:\n  - PresentationFramework\n  namespace: System.Windows\n  summary: Gets or sets the identifying name of the element. The name provides an instance reference so that programmatic code-behind, such as event handler code, can refer to an element once it is constructed during parsing of [!INCLUDE[TLA2#tla_xaml](~/includes/tla2sharptla-xaml-md.md)].\n  remarks: \"The most common usage of this property is when specifying a [!INCLUDE[TLA2#tla_xaml](~/includes/tla2sharptla-xaml-md.md)] element name in markup.  \\n  \\n This property essentially provides a WPF framework-level convenience property to set the [!INCLUDE[TLA2#tla_xaml](~/includes/tla2sharptla-xaml-md.md)] [x:Name Directive](~/docs/framework/xaml-services/x-name-directive.md).  \\n  \\n Getting a <xref:System.Windows.FrameworkContentElement.Name%2A> from code is not common, because if you have the appropriate reference in code already, you can just call methods and properties on the element reference and do not generally need the <xref:System.Windows.FrameworkContentElement.Name%2A>. An exception is if the string has some overloaded meaning, for instance if it is useful to display that name in [!INCLUDE[TLA2#tla_ui](~/includes/tla2sharptla-ui-md.md)]. Setting a <xref:System.Windows.FrameworkContentElement.Name%2A> from code if the original <xref:System.Windows.FrameworkContentElement.Name%2A> was set from markup is also not recommended, and changing the property will not change the object reference. Such object references are created only when the underlying namescopes are explicitly created during [!INCLUDE[TLA2#tla_xaml](~/includes/tla2sharptla-xaml-md.md)] loading.  \\n  \\n You must specifically call <xref:System.Windows.FrameworkContentElement.RegisterName%2A> to make an effective change on the <xref:System.Windows.FrameworkContentElement.Name%2A> property of an already loaded element.  \\n  \\n One notable case where setting <xref:System.Windows.FrameworkContentElement.Name%2A> from  code is important is for naming elements that storyboards will run against. Before you can register a name, might also need to instantiate and assign a <xref:System.Windows.NameScope> instance. See the Example section, or [Storyboards Overview](~/docs/framework/wpf/graphics-multimedia/storyboards-overview.md).  \\n  \\n Setting <xref:System.Windows.FrameworkContentElement.Name%2A> from code has limited applications, but looking up an element by name is more common, particularly if you are employing a navigation model where pages reload into the application and the run-time code is not necessarily the code-behind of that respective page. The utility method <xref:System.Windows.FrameworkContentElement.FindName%2A>, which is available from any <xref:System.Windows.FrameworkContentElement>, can find any element by <xref:System.Windows.FrameworkContentElement.Name%2A> in that element's logical tree recursively. Or you can use the <xref:System.Windows.LogicalTreeHelper.FindLogicalNode%2A> static method of <xref:System.Windows.LogicalTreeHelper>, which also takes the <xref:System.Windows.FrameworkContentElement.Name%2A> string as an argument.  \\n  \\n Commonly used root elements (<xref:System.Windows.Window>, <xref:System.Windows.Controls.Page> for example) implement the interface <xref:System.Windows.Markup.INameScope>. Implementations of this interface are expected to enforce that names be unambiguous within their scope.  \\n  \\n<a name=\\\"dependencyPropertyInfo_Name\\\"></a>   \\n## Dependency Property Information  \\n  \\n|||  \\n|-|-|  \\n|Identifier field|<xref:System.Windows.FrameworkContentElement.NameProperty>|  \\n|Metadata properties set to `true`|<xref:System.Windows.UIPropertyMetadata.IsAnimationProhibited%2A>|\"\n  syntax:\n    content: >-\n      [System.Windows.Localizability(System.Windows.LocalizationCategory.NeverLocalize)]\n\n      public string Name { get; set; }\n    return:\n      type: System.String\n      description: The name of the element.\n  overload: System.Windows.FrameworkContentElement.Name*\n  exceptions: []\n  attributes:\n  - type: System.Windows.LocalizabilityAttribute\n  version:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Windows/FrameworkContentElement.xml\n  ms.technology:\n  - dotnet-wpf\n  author: stevehoag\n  ms.author: shoag\n  manager: wpickett\n- uid: System.Windows.FrameworkContentElement.NameProperty\n  commentId: F:System.Windows.FrameworkContentElement.NameProperty\n  id: NameProperty\n  parent: System.Windows.FrameworkContentElement\n  langs:\n  - csharp\n  name: NameProperty\n  nameWithType: FrameworkContentElement.NameProperty\n  fullName: FrameworkContentElement.NameProperty\n  type: Field\n  assemblies:\n  - PresentationFramework\n  namespace: System.Windows\n  summary: Identifies the <xref href=\"System.Windows.FrameworkContentElement.Name\"></xref> dependency property.\n  syntax:\n    content: public static readonly System.Windows.DependencyProperty NameProperty;\n    return:\n      type: System.Windows.DependencyProperty\n      description: ''\n  exceptions: []\n  version:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Windows/FrameworkContentElement.xml\n  ms.technology:\n  - dotnet-wpf\n  author: stevehoag\n  ms.author: shoag\n  manager: wpickett\n- uid: System.Windows.FrameworkContentElement.OnContextMenuClosing(System.Windows.Controls.ContextMenuEventArgs)\n  commentId: M:System.Windows.FrameworkContentElement.OnContextMenuClosing(System.Windows.Controls.ContextMenuEventArgs)\n  id: OnContextMenuClosing(System.Windows.Controls.ContextMenuEventArgs)\n  parent: System.Windows.FrameworkContentElement\n  langs:\n  - csharp\n  name: OnContextMenuClosing(ContextMenuEventArgs)\n  nameWithType: FrameworkContentElement.OnContextMenuClosing(ContextMenuEventArgs)\n  fullName: FrameworkContentElement.OnContextMenuClosing(ContextMenuEventArgs)\n  type: Method\n  assemblies:\n  - PresentationFramework\n  namespace: System.Windows\n  summary: Invoked whenever the <xref href=\"System.Windows.FrameworkContentElement.ContextMenuClosing\"></xref> routed event reaches this class in its route. Implement this method to add class handling for this event.\n  remarks: \"This method has no default implementation. You should still call the base implementation in case an intermediate class in the inheritance has implemented this method.  \\n  \\n The purpose of this method is somewhat similar to [!INCLUDE[TLA#tla_clr](~/includes/tlasharptla-clr-md.md)] event pattern On* methods: it provides the means to handle the matching event from derived classes with a class handler instead of an instance handler. In this case the matching event is a routed event. The implementation pattern of the On* methods is different for routed events because the routed event may have been raised by a child element, not necessarily the element that will invoke handlers. Therefore, your implementation will have to take the event arguments' source properties into account (and should not try to re-raise the event in most cases). Subclasses of <xref:System.Windows.FrameworkContentElement> could choose to call private class handler methods when the event is received along the route. One potential scenario is to take the arguments of the event and deliberately mark the event as handled to shorten the route.\"\n  syntax:\n    content: protected virtual void OnContextMenuClosing (System.Windows.Controls.ContextMenuEventArgs e);\n    parameters:\n    - id: e\n      type: System.Windows.Controls.ContextMenuEventArgs\n      description: Provides data about the event.\n  overload: System.Windows.FrameworkContentElement.OnContextMenuClosing*\n  exceptions: []\n  version:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Windows/FrameworkContentElement.xml\n  ms.technology:\n  - dotnet-wpf\n  author: stevehoag\n  ms.author: shoag\n  manager: wpickett\n- uid: System.Windows.FrameworkContentElement.OnContextMenuOpening(System.Windows.Controls.ContextMenuEventArgs)\n  commentId: M:System.Windows.FrameworkContentElement.OnContextMenuOpening(System.Windows.Controls.ContextMenuEventArgs)\n  id: OnContextMenuOpening(System.Windows.Controls.ContextMenuEventArgs)\n  parent: System.Windows.FrameworkContentElement\n  langs:\n  - csharp\n  name: OnContextMenuOpening(ContextMenuEventArgs)\n  nameWithType: FrameworkContentElement.OnContextMenuOpening(ContextMenuEventArgs)\n  fullName: FrameworkContentElement.OnContextMenuOpening(ContextMenuEventArgs)\n  type: Method\n  assemblies:\n  - PresentationFramework\n  namespace: System.Windows\n  summary: Invoked whenever the <xref href=\"System.Windows.FrameworkContentElement.ContextMenuOpening\"></xref> routed event reaches this class in its route. Implement this method to add class handling for this event.\n  remarks: \"This method has no default implementation. You should still call base() in case an intermediate class in the inheritance has implemented this method.  \\n  \\n The purpose of this method is somewhat similar to [!INCLUDE[TLA#tla_clr](~/includes/tlasharptla-clr-md.md)] event pattern On* methods: it provides the means to handle the matching event from derived classes with a class handler instead of an instance handler. In this case the matching event is a routed event. The implementation pattern of the On* methods is different for routed events because the routed event may have been raised by a child element, not necessarily the element that will invoke handlers, so your implementation will have to take the event arguments' source properties into account (and should not try to re-raise the event in most cases). Subclasses of <xref:System.Windows.FrameworkContentElement> could choose to call private class handler methods when the event is received along the route. One potential scenario is to take the arguments of the event and deliberately mark the event as handled to shorten the route.\"\n  syntax:\n    content: protected virtual void OnContextMenuOpening (System.Windows.Controls.ContextMenuEventArgs e);\n    parameters:\n    - id: e\n      type: System.Windows.Controls.ContextMenuEventArgs\n      description: Event data for the event.\n  overload: System.Windows.FrameworkContentElement.OnContextMenuOpening*\n  exceptions: []\n  version:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Windows/FrameworkContentElement.xml\n  ms.technology:\n  - dotnet-wpf\n  author: stevehoag\n  ms.author: shoag\n  manager: wpickett\n- uid: System.Windows.FrameworkContentElement.OnGotFocus(System.Windows.RoutedEventArgs)\n  commentId: M:System.Windows.FrameworkContentElement.OnGotFocus(System.Windows.RoutedEventArgs)\n  id: OnGotFocus(System.Windows.RoutedEventArgs)\n  parent: System.Windows.FrameworkContentElement\n  langs:\n  - csharp\n  name: OnGotFocus(RoutedEventArgs)\n  nameWithType: FrameworkContentElement.OnGotFocus(RoutedEventArgs)\n  fullName: FrameworkContentElement.OnGotFocus(RoutedEventArgs)\n  type: Method\n  assemblies:\n  - PresentationFramework\n  namespace: System.Windows\n  summary: Class handler for the <xref href=\"System.Windows.ContentElement.GotFocus\"></xref> event.\n  remarks: \"This class handler sets appropriate focus behavior on this element if the event originated from this element. If the event's source was another element in the tree, the handler does nothing.  \\n  \\n Override this method in order to change these default focusing behavior on your element.\"\n  syntax:\n    content: protected override void OnGotFocus (System.Windows.RoutedEventArgs e);\n    parameters:\n    - id: e\n      type: System.Windows.RoutedEventArgs\n      description: Event data for the event.\n  overload: System.Windows.FrameworkContentElement.OnGotFocus*\n  exceptions: []\n  version:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Windows/FrameworkContentElement.xml\n  ms.technology:\n  - dotnet-wpf\n  author: stevehoag\n  ms.author: shoag\n  manager: wpickett\n- uid: System.Windows.FrameworkContentElement.OnInitialized(System.EventArgs)\n  commentId: M:System.Windows.FrameworkContentElement.OnInitialized(System.EventArgs)\n  id: OnInitialized(System.EventArgs)\n  parent: System.Windows.FrameworkContentElement\n  langs:\n  - csharp\n  name: OnInitialized(EventArgs)\n  nameWithType: FrameworkContentElement.OnInitialized(EventArgs)\n  fullName: FrameworkContentElement.OnInitialized(EventArgs)\n  type: Method\n  assemblies:\n  - PresentationFramework\n  namespace: System.Windows\n  summary: Raises the <xref href=\"System.Windows.FrameworkContentElement.Initialized\"></xref> event. This method is invoked whenever <xref href=\"System.Windows.FrameworkContentElement.IsInitialized\"></xref> is set to `true`.\n  remarks: \"The default implementation of this virtual method raises the event as described earlier in this topic. Overrides should call base() to preserve this behavior.  \\n  \\n Note that the <xref:System.Windows.FrameworkContentElement.IsInitialized%2A> property is read-only. Therefore, you cannot set it to force initialization behavior that way. Initialization setting is intended to be done only by the [!INCLUDE[TLA#tla_winclient](~/includes/tlasharptla-winclient-md.md)] framework.\"\n  syntax:\n    content: protected virtual void OnInitialized (EventArgs e);\n    parameters:\n    - id: e\n      type: System.EventArgs\n      description: Event data for the event.\n  overload: System.Windows.FrameworkContentElement.OnInitialized*\n  exceptions: []\n  version:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Windows/FrameworkContentElement.xml\n  ms.technology:\n  - dotnet-wpf\n  author: stevehoag\n  ms.author: shoag\n  manager: wpickett\n- uid: System.Windows.FrameworkContentElement.OnPropertyChanged(System.Windows.DependencyPropertyChangedEventArgs)\n  commentId: M:System.Windows.FrameworkContentElement.OnPropertyChanged(System.Windows.DependencyPropertyChangedEventArgs)\n  id: OnPropertyChanged(System.Windows.DependencyPropertyChangedEventArgs)\n  parent: System.Windows.FrameworkContentElement\n  langs:\n  - csharp\n  name: OnPropertyChanged(DependencyPropertyChangedEventArgs)\n  nameWithType: FrameworkContentElement.OnPropertyChanged(DependencyPropertyChangedEventArgs)\n  fullName: FrameworkContentElement.OnPropertyChanged(DependencyPropertyChangedEventArgs)\n  type: Method\n  assemblies:\n  - PresentationFramework\n  namespace: System.Windows\n  summary: Invoked whenever the effective value of any dependency property on this <xref href=\"System.Windows.FrameworkContentElement\"></xref> has been updated. The specific dependency property that changed is reported in the arguments parameter. Overrides <xref href=\"System.Windows.DependencyObject.OnPropertyChanged(System.Windows.DependencyPropertyChangedEventArgs)\"></xref>.\n  remarks: \"This method is not intended to generally detect property changes or invalidations. It is instead intended for modifications of the general invalidation pattern if certain information is known about wide classifications of properties.  \\n  \\n This method is potentially invoked many times during the life of an object. Therefore, you can achieve better performance if you override the metadata of specific properties and then attach <xref:System.Windows.CoerceValueCallback> or <xref:System.Windows.PropertyChangedCallback> functions for individual properties. However, you would use this method if a <xref:System.Windows.FrameworkContentElement> includes a significant number of value-interrelated dependency properties, or if it includes logic such as rendering behavior that must be rerun for several related cases of property invalidations.  \\n  \\n Note that there is an identically named `OnPropertyChanged` method with a different signature (the parameter type is <xref:System.ComponentModel.PropertyChangedEventArgs>) that can appear on a number of classes. That `OnPropertyChanged` is used for data object notifications, and is part of the contract for <xref:System.ComponentModel.INotifyPropertyChanged>.\"\n  syntax:\n    content: protected override void OnPropertyChanged (System.Windows.DependencyPropertyChangedEventArgs e);\n    parameters:\n    - id: e\n      type: System.Windows.DependencyPropertyChangedEventArgs\n      description: The event data that describes the property that changed, including the old and new values.\n  overload: System.Windows.FrameworkContentElement.OnPropertyChanged*\n  exceptions: []\n  version:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Windows/FrameworkContentElement.xml\n  ms.technology:\n  - dotnet-wpf\n  ms.author: kempb\n  manager: ghogen\n- uid: System.Windows.FrameworkContentElement.OnStyleChanged(System.Windows.Style,System.Windows.Style)\n  commentId: M:System.Windows.FrameworkContentElement.OnStyleChanged(System.Windows.Style,System.Windows.Style)\n  id: OnStyleChanged(System.Windows.Style,System.Windows.Style)\n  parent: System.Windows.FrameworkContentElement\n  langs:\n  - csharp\n  name: OnStyleChanged(Style, Style)\n  nameWithType: FrameworkContentElement.OnStyleChanged(Style, Style)\n  fullName: FrameworkContentElement.OnStyleChanged(Style, Style)\n  type: Method\n  assemblies:\n  - PresentationFramework\n  namespace: System.Windows\n  summary: Invoked when the style that is in use on this element changes.\n  remarks: This method has a default implementation that sets an internal flag noting the style changed condition.\n  syntax:\n    content: protected virtual void OnStyleChanged (System.Windows.Style oldStyle, System.Windows.Style newStyle);\n    parameters:\n    - id: oldStyle\n      type: System.Windows.Style\n      description: The old style.\n    - id: newStyle\n      type: System.Windows.Style\n      description: The new style.\n  overload: System.Windows.FrameworkContentElement.OnStyleChanged*\n  exceptions: []\n  version:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Windows/FrameworkContentElement.xml\n  ms.technology:\n  - dotnet-wpf\n  author: stevehoag\n  ms.author: shoag\n  manager: wpickett\n- uid: System.Windows.FrameworkContentElement.OnToolTipClosing(System.Windows.Controls.ToolTipEventArgs)\n  commentId: M:System.Windows.FrameworkContentElement.OnToolTipClosing(System.Windows.Controls.ToolTipEventArgs)\n  id: OnToolTipClosing(System.Windows.Controls.ToolTipEventArgs)\n  parent: System.Windows.FrameworkContentElement\n  langs:\n  - csharp\n  name: OnToolTipClosing(ToolTipEventArgs)\n  nameWithType: FrameworkContentElement.OnToolTipClosing(ToolTipEventArgs)\n  fullName: FrameworkContentElement.OnToolTipClosing(ToolTipEventArgs)\n  type: Method\n  assemblies:\n  - PresentationFramework\n  namespace: System.Windows\n  summary: Invoked whenever the <xref href=\"System.Windows.FrameworkContentElement.ToolTipClosing\"></xref> routed event reaches this class in its route. Implement this method to add class handling for this event.\n  remarks: \"This method has no default implementation. You should still call base() in case an intermediate class in the inheritance has implemented this method.  \\n  \\n The purpose of this method is somewhat similar to [!INCLUDE[TLA#tla_clr](~/includes/tlasharptla-clr-md.md)] event pattern On* methods: it provides the means to handle the matching event from derived classes with a class handler instead of an instance handler. In this case the matching event is a routed event. The implementation pattern of the On* methods is different for routed events because the routed event may have been raised by a child element, not necessarily the element that will invoke handlers, so your implementation will have to take the event arguments' source properties into account (and should not try to re-raise the event in most cases). Subclasses of <xref:System.Windows.FrameworkContentElement> could choose to call private class handler methods when the event is received along the route. One potential scenario is to take the arguments of the event and deliberately mark the event as handled to shorten the route.\"\n  syntax:\n    content: protected virtual void OnToolTipClosing (System.Windows.Controls.ToolTipEventArgs e);\n    parameters:\n    - id: e\n      type: System.Windows.Controls.ToolTipEventArgs\n      description: Provides data about the event.\n  overload: System.Windows.FrameworkContentElement.OnToolTipClosing*\n  exceptions: []\n  version:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Windows/FrameworkContentElement.xml\n  ms.technology:\n  - dotnet-wpf\n  author: stevehoag\n  ms.author: shoag\n  manager: wpickett\n- uid: System.Windows.FrameworkContentElement.OnToolTipOpening(System.Windows.Controls.ToolTipEventArgs)\n  commentId: M:System.Windows.FrameworkContentElement.OnToolTipOpening(System.Windows.Controls.ToolTipEventArgs)\n  id: OnToolTipOpening(System.Windows.Controls.ToolTipEventArgs)\n  parent: System.Windows.FrameworkContentElement\n  langs:\n  - csharp\n  name: OnToolTipOpening(ToolTipEventArgs)\n  nameWithType: FrameworkContentElement.OnToolTipOpening(ToolTipEventArgs)\n  fullName: FrameworkContentElement.OnToolTipOpening(ToolTipEventArgs)\n  type: Method\n  assemblies:\n  - PresentationFramework\n  namespace: System.Windows\n  summary: Invoked whenever the <xref href=\"System.Windows.FrameworkContentElement.ToolTipOpening\"></xref> routed event reaches this class in its route. Implement this method to add class handling for this event.\n  remarks: \"This method has no default implementation. You should still call base() in case an intermediate class in the inheritance has implemented this method.  \\n  \\n The purpose of this method is somewhat similar to [!INCLUDE[TLA#tla_clr](~/includes/tlasharptla-clr-md.md)] event pattern On* methods: it provides the means to handle the matching event from derived classes with a class handler instead of an instance handler. In this case the matching event is a routed event. The implementation pattern of the On* methods is different for routed events because the routed event may have been raised by a child element, not necessarily the element that will invoke handlers, so your implementation will need to take the event arguments' source properties into account (and should not try to re-raise the event in most cases). Subclasses of <xref:System.Windows.FrameworkContentElement> could choose to call private class handler methods when the event is received along the route. One potential scenario is to take the arguments of the event and deliberately mark the event as handled to shorten the route.\"\n  syntax:\n    content: protected virtual void OnToolTipOpening (System.Windows.Controls.ToolTipEventArgs e);\n    parameters:\n    - id: e\n      type: System.Windows.Controls.ToolTipEventArgs\n      description: Provides data about the event.\n  overload: System.Windows.FrameworkContentElement.OnToolTipOpening*\n  exceptions: []\n  version:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Windows/FrameworkContentElement.xml\n  ms.technology:\n  - dotnet-wpf\n  author: stevehoag\n  ms.author: shoag\n  manager: wpickett\n- uid: System.Windows.FrameworkContentElement.OverridesDefaultStyle\n  commentId: P:System.Windows.FrameworkContentElement.OverridesDefaultStyle\n  id: OverridesDefaultStyle\n  parent: System.Windows.FrameworkContentElement\n  langs:\n  - csharp\n  name: OverridesDefaultStyle\n  nameWithType: FrameworkContentElement.OverridesDefaultStyle\n  fullName: FrameworkContentElement.OverridesDefaultStyle\n  type: Property\n  assemblies:\n  - PresentationFramework\n  namespace: System.Windows\n  summary: Gets or sets a value indicating whether this element incorporates style properties from theme styles.\n  remarks: \"The most common usage of this property is an indirect usage within the setter of a style that is supplying a themed style.  \\n  \\n<a name=\\\"dependencyPropertyInfo_OverridesDefaultStyle\\\"></a>   \\n## Dependency Property Information  \\n  \\n|||  \\n|-|-|  \\n|Identifier field|<xref:System.Windows.FrameworkContentElement.OverridesDefaultStyleProperty>|  \\n|Metadata properties set to `true`|<xref:System.Windows.FrameworkPropertyMetadata.AffectsMeasure%2A>|\"\n  syntax:\n    content: public bool OverridesDefaultStyle { get; set; }\n    return:\n      type: System.Boolean\n      description: '`true` if this element does not use theme style properties; all style-originating properties come from local application styles, and theme style properties do not apply. `false` if application styles apply first, and then theme styles apply for properties that were not specifically set in application styles.'\n  overload: System.Windows.FrameworkContentElement.OverridesDefaultStyle*\n  exceptions: []\n  version:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Windows/FrameworkContentElement.xml\n  ms.technology:\n  - dotnet-wpf\n  author: stevehoag\n  ms.author: shoag\n  manager: wpickett\n- uid: System.Windows.FrameworkContentElement.OverridesDefaultStyleProperty\n  commentId: F:System.Windows.FrameworkContentElement.OverridesDefaultStyleProperty\n  id: OverridesDefaultStyleProperty\n  parent: System.Windows.FrameworkContentElement\n  langs:\n  - csharp\n  name: OverridesDefaultStyleProperty\n  nameWithType: FrameworkContentElement.OverridesDefaultStyleProperty\n  fullName: FrameworkContentElement.OverridesDefaultStyleProperty\n  type: Field\n  assemblies:\n  - PresentationFramework\n  namespace: System.Windows\n  summary: Identifies the <xref href=\"System.Windows.FrameworkContentElement.OverridesDefaultStyle\"></xref> dependency property.\n  syntax:\n    content: public static readonly System.Windows.DependencyProperty OverridesDefaultStyleProperty;\n    return:\n      type: System.Windows.DependencyProperty\n      description: ''\n  exceptions: []\n  version:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Windows/FrameworkContentElement.xml\n  ms.technology:\n  - dotnet-wpf\n  author: stevehoag\n  ms.author: shoag\n  manager: wpickett\n- uid: System.Windows.FrameworkContentElement.Parent\n  commentId: P:System.Windows.FrameworkContentElement.Parent\n  id: Parent\n  parent: System.Windows.FrameworkContentElement\n  langs:\n  - csharp\n  name: Parent\n  nameWithType: FrameworkContentElement.Parent\n  fullName: FrameworkContentElement.Parent\n  type: Property\n  assemblies:\n  - PresentationFramework\n  namespace: System.Windows\n  summary: Gets the parent in the logical tree for this element.\n  remarks: \"Note that the logical parent of an element can potentially change depending on your application functionality, and keeping the value of this property will not reflect that change. You typically should get the value immediately before you need it.  \\n  \\n See [Trees in WPF](~/docs/framework/wpf/advanced/trees-in-wpf.md) for more information about traversing logical trees, and the scenarios where taking this approach towards element discovery is appropriate.  \\n  \\n The property system will potentially recalculate all property values of an element when it is reparented, because some properties inherit values through the logical tree. The <xref:System.Windows.FrameworkContentElement.DataContext%2A> that applies for bindings can also change when elements are reparented.  \\n  \\n Changing an element's parent is typically only done through manipulation of collections, by using dedicated add or remove methods, or through setting content properties of elements.  \\n  \\n The most typical scenario for using the <xref:System.Windows.FrameworkContentElement.Parent%2A> property is to obtain a reference and then get various <xref:System.Windows.FrameworkContentElement> property values from the parent. For templates, the <xref:System.Windows.FrameworkContentElement.Parent%2A> of the template eventually will be `null`. To get past this point and extend into the logical tree where the template is actually applied, use <xref:System.Windows.FrameworkContentElement.TemplatedParent%2A>.\"\n  example:\n  - \"The following example checks to see whether the <xref:System.Windows.FrameworkContentElement.Parent%2A> of a <xref:System.Windows.Documents.TextPointer> is of a particular type.  \\n  \\n [!code-csharp[TextPointer_snippets#FCEParent](~/samples/snippets/csharp/VS_Snippets_Wpf/TextPointer_Snippets/CSharp/Window1.xaml.cs#fceparent)]\\n [!code-vb[TextPointer_snippets#FCEParent](~/samples/snippets/visualbasic/VS_Snippets_Wpf/TextPointer_Snippets/visualbasic/window1.xaml.vb#fceparent)]\"\n  syntax:\n    content: public System.Windows.DependencyObject Parent { get; }\n    return:\n      type: System.Windows.DependencyObject\n      description: The logical parent for this element.\n  overload: System.Windows.FrameworkContentElement.Parent*\n  exceptions: []\n  version:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Windows/FrameworkContentElement.xml\n  ms.technology:\n  - dotnet-wpf\n  author: stevehoag\n  ms.author: shoag\n  manager: wpickett\n- uid: System.Windows.FrameworkContentElement.PredictFocus(System.Windows.Input.FocusNavigationDirection)\n  commentId: M:System.Windows.FrameworkContentElement.PredictFocus(System.Windows.Input.FocusNavigationDirection)\n  id: PredictFocus(System.Windows.Input.FocusNavigationDirection)\n  parent: System.Windows.FrameworkContentElement\n  langs:\n  - csharp\n  name: PredictFocus(FocusNavigationDirection)\n  nameWithType: FrameworkContentElement.PredictFocus(FocusNavigationDirection)\n  fullName: FrameworkContentElement.PredictFocus(FocusNavigationDirection)\n  type: Method\n  assemblies:\n  - PresentationFramework\n  namespace: System.Windows\n  summary: Determines the next element that would receive focus relative to this element for a provided focus movement direction, but does not actually move the focus. This method is sealed and cannot be overridden.\n  remarks: <xref:System.Windows.FrameworkContentElement.MoveFocus%2A> is the related method that actually does move focus.\n  syntax:\n    content: public override sealed System.Windows.DependencyObject PredictFocus (System.Windows.Input.FocusNavigationDirection direction);\n    parameters:\n    - id: direction\n      type: System.Windows.Input.FocusNavigationDirection\n      description: The direction for which a prospective focus change should be determined.\n    return:\n      type: System.Windows.DependencyObject\n      description: The next element that focus would move to if focus were actually traversed. May return `null` if focus cannot be moved relative to this element for the provided direction.\n  overload: System.Windows.FrameworkContentElement.PredictFocus*\n  exceptions:\n  - type: System.ComponentModel.InvalidEnumArgumentException\n    commentId: T:System.ComponentModel.InvalidEnumArgumentException\n    description: 'Specified one of the following directions in the <xref href=\"System.Windows.Input.TraversalRequest\"></xref>: <xref href=\"System.Windows.Input.FocusNavigationDirection.Next\"></xref>, <xref href=\"System.Windows.Input.FocusNavigationDirection.Previous\"></xref>, <xref href=\"System.Windows.Input.FocusNavigationDirection.First\"></xref>, <xref href=\"System.Windows.Input.FocusNavigationDirection.Last\"></xref>. These directions are not legal for <xref href=\"System.Windows.FrameworkContentElement.PredictFocus(System.Windows.Input.FocusNavigationDirection)\"></xref> (but they are legal for <xref href=\"System.Windows.FrameworkContentElement.MoveFocus(System.Windows.Input.TraversalRequest)\"></xref>).'\n  version:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Windows/FrameworkContentElement.xml\n  ms.technology:\n  - dotnet-wpf\n  author: stevehoag\n  ms.author: shoag\n  manager: wpickett\n- uid: System.Windows.FrameworkContentElement.RegisterName(System.String,System.Object)\n  commentId: M:System.Windows.FrameworkContentElement.RegisterName(System.String,System.Object)\n  id: RegisterName(System.String,System.Object)\n  parent: System.Windows.FrameworkContentElement\n  langs:\n  - csharp\n  name: RegisterName(String, Object)\n  nameWithType: FrameworkContentElement.RegisterName(String, Object)\n  fullName: FrameworkContentElement.RegisterName(String, Object)\n  type: Method\n  assemblies:\n  - PresentationFramework\n  namespace: System.Windows\n  summary: Provides an accessor that simplifies access to the <xref href=\"System.Windows.NameScope\"></xref> registration method.\n  remarks: \"This method is a convenience method for calling <xref:System.Windows.NameScope.RegisterName%2A>. The implementation will check successive parent elements until it finds the applicable <xref:System.Windows.NameScope> implementation, which is found by finding an element that implements <xref:System.Windows.Markup.INameScope>. For more information about namescopes, see [WPF XAML Namescopes](~/docs/framework/wpf/advanced/wpf-xaml-namescopes.md).  \\n  \\n Calling <xref:System.Windows.FrameworkContentElement.RegisterName%2A> is necessary in order to correctly hook up animation storyboards for applications when created in code. This is because one of the key storyboard properties, <xref:System.Windows.Media.Animation.Storyboard.TargetName%2A>, uses a run-time name lookup instead of being able to take a reference to a target element. This is true even if that element is accessible by reference from the code. For more information on why you need to register names for storyboard targets, see [Storyboards Overview](~/docs/framework/wpf/graphics-multimedia/storyboards-overview.md). Animations for content elements are less common than animations on controls, the [Storyboards Overview](~/docs/framework/wpf/graphics-multimedia/storyboards-overview.md) concentrates on control scenarios.\"\n  syntax:\n    content: public void RegisterName (string name, object scopedElement);\n    parameters:\n    - id: name\n      type: System.String\n      description: Name to use for the specified name-object mapping.\n    - id: scopedElement\n      type: System.Object\n      description: Object for the mapping.\n  overload: System.Windows.FrameworkContentElement.RegisterName*\n  exceptions: []\n  version:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Windows/FrameworkContentElement.xml\n  ms.technology:\n  - dotnet-wpf\n  author: stevehoag\n  ms.author: shoag\n  manager: wpickett\n- uid: System.Windows.FrameworkContentElement.RemoveLogicalChild(System.Object)\n  commentId: M:System.Windows.FrameworkContentElement.RemoveLogicalChild(System.Object)\n  id: RemoveLogicalChild(System.Object)\n  parent: System.Windows.FrameworkContentElement\n  langs:\n  - csharp\n  name: RemoveLogicalChild(Object)\n  nameWithType: FrameworkContentElement.RemoveLogicalChild(Object)\n  fullName: FrameworkContentElement.RemoveLogicalChild(Object)\n  type: Method\n  assemblies:\n  - PresentationFramework\n  namespace: System.Windows\n  summary: Removes the specified element from the logical tree for this element.\n  remarks: \"This [!INCLUDE[TLA#tla_api](~/includes/tlasharptla-api-md.md)] is mainly relevant for class deriving scenarios, when adding support for child collections.  \\n  \\n Most <xref:System.Windows.FrameworkContentElement> derived classes expose dedicated collections that are responsible for containment (for example, <xref:System.Windows.Documents.Span.Inlines%2A> on the <xref:System.Windows.Documents.Span> class; <xref:System.Windows.Documents.Section.Blocks%2A> on the <xref:System.Windows.Documents.Section> class). Deriving from such classes typically can avoid any need to manipulate the logical tree directly.\"\n  syntax:\n    content: protected void RemoveLogicalChild (object child);\n    parameters:\n    - id: child\n      type: System.Object\n      description: The element to remove.\n  overload: System.Windows.FrameworkContentElement.RemoveLogicalChild*\n  exceptions: []\n  version:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Windows/FrameworkContentElement.xml\n  ms.technology:\n  - dotnet-wpf\n  author: stevehoag\n  ms.author: shoag\n  manager: wpickett\n- uid: System.Windows.FrameworkContentElement.Resources\n  commentId: P:System.Windows.FrameworkContentElement.Resources\n  id: Resources\n  parent: System.Windows.FrameworkContentElement\n  langs:\n  - csharp\n  name: Resources\n  nameWithType: FrameworkContentElement.Resources\n  fullName: FrameworkContentElement.Resources\n  type: Property\n  assemblies:\n  - PresentationFramework\n  namespace: System.Windows\n  summary: Gets or sets the current locally-defined resource dictionary.\n  remarks: \"Resource dictionaries that can be defined completely or partially in [!INCLUDE[TLA#tla_xaml](~/includes/tlasharptla-xaml-md.md)] are typically created as a property element, and are typically on the root element for any individual page or for the application. Placing the resource dictionary at this level makes it easier to find from individual child elements in the page (or from any page, in the application case). In most application scenarios, we recommend that styles be defined as object elements within a resource dictionary, or be defined as external resources so that the entire style resource can be self-contained (this approach helps separate designer responsibilities from developer responsibilities by separating the physical files that need to be edited).  \\n  \\n Note that this property returns only the resource dictionary declared directly within that element. This is different than the actual resource lookup process, where a child element can access any of the resources defined in each parent element, searching recursively upwards.  \\n  \\n Resources can also be referenced by code from within the collection, but be aware that resources created in [!INCLUDE[TLA2#tla_xaml](~/includes/tla2sharptla-xaml-md.md)] will definitely not be accessible until after <xref:System.Windows.FrameworkContentElement.Loaded> is raised by the element that declares the dictionary. In fact, resources are parsed asynchronously, and not even the <xref:System.Windows.FrameworkContentElement.Loaded> event is an assurance that you can reference a [!INCLUDE[TLA2#tla_xaml](~/includes/tla2sharptla-xaml-md.md)] defined resource. For this reason you should generally only access [!INCLUDE[TLA2#tla_xaml](~/includes/tla2sharptla-xaml-md.md)] defined resources as part of run-time code, or through other [!INCLUDE[TLA2#tla_xaml](~/includes/tla2sharptla-xaml-md.md)] techniques such as styles or resource extension references for attribute values. When you access resources through code, it is essentially equivalent to a  reference made from [!INCLUDE[TLA2#tla_xaml](~/includes/tla2sharptla-xaml-md.md)].  \\n  \\n The underlying <xref:System.Windows.ResourceDictionary> supports the methods required to add, remove, or query resources from within the collection by using code. The <xref:System.Windows.FrameworkContentElement.Resources%2A> property is settable to support the scenario of completely replacing the resources collection of an element to be a new or different <xref:System.Windows.ResourceDictionary>.  \\n  \\n Notice that the [!INCLUDE[TLA2#tla_xaml](~/includes/tla2sharptla-xaml-md.md)] syntax shown does not include an element for the <xref:System.Windows.ResourceDictionary>. This is an example of implicit collection syntax; a tag representing the collection element can be omitted. The elements that are added as items to the collection are specified instead. For more information about implicit collections and [!INCLUDE[TLA2#tla_xaml](~/includes/tla2sharptla-xaml-md.md)], see [XAML Syntax In Detail](~/docs/framework/wpf/advanced/xaml-syntax-in-detail.md). One case where a <xref:System.Windows.ResourceDictionary> is still specified explicitly as an element is if you are introducing a merged dictionary, in which case there are typically no child elements for that <xref:System.Windows.ResourceDictionary>. For details, see [Merged Resource Dictionaries](~/docs/framework/wpf/advanced/merged-resource-dictionaries.md).  \\n  \\n<a name=\\\"xamlPropertyElementUsage_Resources\\\"></a>   \\n## XAML Property Element Usage  \\n  \\n```  \\n<object>  \\n  <object.Resources>  \\n    oneOrMoreResourceElements  \\n  </object.Resources>  \\n</object>  \\n```  \\n  \\n<a name=\\\"xamlValues_Resources\\\"></a>   \\n## XAML Values  \\n *oneOrMoreResourceElements*  \\n One or more object elements, each of which defines a resource. Each resource property element within each <xref:System.Windows.ResourceDictionary> must have a unique value for the [x:Key Directive](~/docs/framework/xaml-services/x-key-directive.md), which serves as the unique key when values are retrieved from the <xref:System.Windows.ResourceDictionary>.\"\n  example:\n  - \"The following example establishes a <xref:System.Windows.FrameworkContentElement.Resources%2A> collection on a <xref:System.Windows.Documents.FlowDocument> root element. <xref:System.Windows.Documents.FlowDocument> is a typical choice because it is one of the few <xref:System.Windows.FrameworkContentElement> classes that make sense as a root element, and resources are generally stored at the page root or at even higher levels such as in the application.  \\n  \\n [!code-xml[ContentElementsSmorgasbord#FCEResources](~/samples/snippets/csharp/VS_Snippets_Wpf/ContentElementsSmorgasbord/CSharp/page2.xaml#fceresources)]\"\n  syntax:\n    content: >-\n      [System.Windows.Markup.Ambient]\n\n      public System.Windows.ResourceDictionary Resources { get; set; }\n    return:\n      type: System.Windows.ResourceDictionary\n      description: The current locally-defined resources. This is a dictionary of resources, where resources within the dictionary are accessed by key.\n  overload: System.Windows.FrameworkContentElement.Resources*\n  exceptions: []\n  attributes:\n  - type: System.Windows.Markup.AmbientAttribute\n  version:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Windows/FrameworkContentElement.xml\n  ms.technology:\n  - dotnet-wpf\n  author: stevehoag\n  ms.author: shoag\n  manager: wpickett\n- uid: System.Windows.FrameworkContentElement.SetBinding(System.Windows.DependencyProperty,System.String)\n  commentId: M:System.Windows.FrameworkContentElement.SetBinding(System.Windows.DependencyProperty,System.String)\n  id: SetBinding(System.Windows.DependencyProperty,System.String)\n  parent: System.Windows.FrameworkContentElement\n  langs:\n  - csharp\n  name: SetBinding(DependencyProperty, String)\n  nameWithType: FrameworkContentElement.SetBinding(DependencyProperty, String)\n  fullName: FrameworkContentElement.SetBinding(DependencyProperty, String)\n  type: Method\n  assemblies:\n  - PresentationFramework\n  namespace: System.Windows\n  summary: Attaches a binding to this element, based on the provided source property name as a path qualification to the data source.\n  remarks: This method is a convenience method for calling <xref:System.Windows.Data.BindingOperations.SetBinding%2A?displayProperty=fullName>, which passes the current instance as the <xref:System.Windows.DependencyObject>, and creates a new <xref:System.Windows.Data.Binding> based on the provided `path` parameter. This signature is more convenient if you are establishing a simple default binding. If you need to specify any binding properties to non-default conditions, or want to use a <xref:System.Windows.Data.MultiBinding> or <xref:System.Windows.Data.PriorityBinding>,you should use the <xref:System.Windows.FrameworkContentElement.SetBinding%28System.Windows.DependencyProperty%2CSystem.Windows.Data.BindingBase%29> signature.\n  example:\n  - \"The following example sets a binding on a <xref:System.Windows.Documents.Paragraph> element, by creating a new custom data object, establishing that object as <xref:System.Windows.FrameworkContentElement.DataContext%2A>, and setting the binding path to a property within it.  \\n  \\n [!code-csharp[ContentElementsSmorgasbord#DataContext](~/samples/snippets/csharp/VS_Snippets_Wpf/ContentElementsSmorgasbord/CSharp/page1.xaml.cs#datacontext)]\\n [!code-vb[ContentElementsSmorgasbord#DataContext](~/samples/snippets/visualbasic/VS_Snippets_Wpf/ContentElementsSmorgasbord/visualbasic/page1.xaml.vb#datacontext)]\"\n  syntax:\n    content: public System.Windows.Data.BindingExpression SetBinding (System.Windows.DependencyProperty dp, string path);\n    parameters:\n    - id: dp\n      type: System.Windows.DependencyProperty\n      description: Identifies the bound property.\n    - id: path\n      type: System.String\n      description: The source property name or the path to the property used for the binding.\n    return:\n      type: System.Windows.Data.BindingExpression\n      description: Records the conditions of the binding. This return value can be useful for error checking.\n  overload: System.Windows.FrameworkContentElement.SetBinding*\n  exceptions: []\n  version:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Windows/FrameworkContentElement.xml\n  ms.technology:\n  - dotnet-wpf\n  author: stevehoag\n  ms.author: shoag\n  manager: wpickett\n- uid: System.Windows.FrameworkContentElement.SetBinding(System.Windows.DependencyProperty,System.Windows.Data.BindingBase)\n  commentId: M:System.Windows.FrameworkContentElement.SetBinding(System.Windows.DependencyProperty,System.Windows.Data.BindingBase)\n  id: SetBinding(System.Windows.DependencyProperty,System.Windows.Data.BindingBase)\n  parent: System.Windows.FrameworkContentElement\n  langs:\n  - csharp\n  name: SetBinding(DependencyProperty, BindingBase)\n  nameWithType: FrameworkContentElement.SetBinding(DependencyProperty, BindingBase)\n  fullName: FrameworkContentElement.SetBinding(DependencyProperty, BindingBase)\n  type: Method\n  assemblies:\n  - PresentationFramework\n  namespace: System.Windows\n  summary: Attaches a binding to this element, based on the provided binding object.\n  remarks: This method is a convenience method for calling <xref:System.Windows.Data.BindingOperations.SetBinding%2A?displayProperty=fullName>, which passes the current instance as the <xref:System.Windows.DependencyObject>.\n  example:\n  - \"The following example sets a binding on a <xref:System.Windows.Documents.Paragraph> element, by creating a new <xref:System.Windows.Data.Binding> and setting the source to a newly built `DateTime` object.  \\n  \\n [!code-csharp[ContentElementsSmorgasbord#SetBinding](~/samples/snippets/csharp/VS_Snippets_Wpf/ContentElementsSmorgasbord/CSharp/page1.xaml.cs#setbinding)]\\n [!code-vb[ContentElementsSmorgasbord#SetBinding](~/samples/snippets/visualbasic/VS_Snippets_Wpf/ContentElementsSmorgasbord/visualbasic/page1.xaml.vb#setbinding)]\"\n  syntax:\n    content: public System.Windows.Data.BindingExpressionBase SetBinding (System.Windows.DependencyProperty dp, System.Windows.Data.BindingBase binding);\n    parameters:\n    - id: dp\n      type: System.Windows.DependencyProperty\n      description: Identifies the bound property.\n    - id: binding\n      type: System.Windows.Data.BindingBase\n      description: Represents a data binding.\n    return:\n      type: System.Windows.Data.BindingExpressionBase\n      description: Records the conditions of the binding. This return value can be useful for error checking.\n  overload: System.Windows.FrameworkContentElement.SetBinding*\n  exceptions: []\n  version:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Windows/FrameworkContentElement.xml\n  ms.technology:\n  - dotnet-wpf\n  author: stevehoag\n  ms.author: shoag\n  manager: wpickett\n- uid: System.Windows.FrameworkContentElement.SetResourceReference(System.Windows.DependencyProperty,System.Object)\n  commentId: M:System.Windows.FrameworkContentElement.SetResourceReference(System.Windows.DependencyProperty,System.Object)\n  id: SetResourceReference(System.Windows.DependencyProperty,System.Object)\n  parent: System.Windows.FrameworkContentElement\n  langs:\n  - csharp\n  name: SetResourceReference(DependencyProperty, Object)\n  nameWithType: FrameworkContentElement.SetResourceReference(DependencyProperty, Object)\n  fullName: FrameworkContentElement.SetResourceReference(DependencyProperty, Object)\n  type: Method\n  assemblies:\n  - PresentationFramework\n  namespace: System.Windows\n  summary: Searches for a resource with the specified name and sets up a resource reference to it for the specified property.\n  remarks: A resource reference is similar to the use of a [DynamicResource Markup Extension](~/docs/framework/wpf/advanced/dynamicresource-markup-extension.md) in markup. The resource reference creates an internal expression that supplies the value of the specified property on a run-time deferred basis. The expression will be re-evaluated whenever the resource dictionary indicates a changed value through internal events, or whenever the current element is reparented (a parent change would change the dictionary lookup path).\n  syntax:\n    content: public void SetResourceReference (System.Windows.DependencyProperty dp, object name);\n    parameters:\n    - id: dp\n      type: System.Windows.DependencyProperty\n      description: The property to which the resource is bound.\n    - id: name\n      type: System.Object\n      description: The name of the resource.\n  overload: System.Windows.FrameworkContentElement.SetResourceReference*\n  exceptions: []\n  version:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Windows/FrameworkContentElement.xml\n  ms.technology:\n  - dotnet-wpf\n  author: stevehoag\n  ms.author: shoag\n  manager: wpickett\n- uid: System.Windows.FrameworkContentElement.ShouldSerializeResources\n  commentId: M:System.Windows.FrameworkContentElement.ShouldSerializeResources\n  id: ShouldSerializeResources\n  parent: System.Windows.FrameworkContentElement\n  langs:\n  - csharp\n  name: ShouldSerializeResources()\n  nameWithType: FrameworkContentElement.ShouldSerializeResources()\n  fullName: FrameworkContentElement.ShouldSerializeResources()\n  type: Method\n  assemblies:\n  - PresentationFramework\n  namespace: System.Windows\n  summary: Returns whether serialization processes should serialize the contents of the <xref href=\"System.Windows.FrameworkContentElement.Resources\"></xref> property on instances of this class.\n  remarks: This will return `true` so long as there is at least one keyed resource in the local <xref:System.Windows.FrameworkContentElement.Resources%2A>.\n  syntax:\n    content: public bool ShouldSerializeResources ();\n    parameters: []\n    return:\n      type: System.Boolean\n      description: '`true` if the <xref href=\"System.Windows.FrameworkContentElement.Resources\"></xref> property value should be serialized; otherwise, `false`.'\n  overload: System.Windows.FrameworkContentElement.ShouldSerializeResources*\n  exceptions: []\n  attributes: []\n  version:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Windows/FrameworkContentElement.xml\n  ms.technology:\n  - dotnet-wpf\n  author: stevehoag\n  ms.author: shoag\n  manager: wpickett\n- uid: System.Windows.FrameworkContentElement.ShouldSerializeStyle\n  commentId: M:System.Windows.FrameworkContentElement.ShouldSerializeStyle\n  id: ShouldSerializeStyle\n  parent: System.Windows.FrameworkContentElement\n  langs:\n  - csharp\n  name: ShouldSerializeStyle()\n  nameWithType: FrameworkContentElement.ShouldSerializeStyle()\n  fullName: FrameworkContentElement.ShouldSerializeStyle()\n  type: Method\n  assemblies:\n  - PresentationFramework\n  namespace: System.Windows\n  summary: Returns whether serialization processes should serialize the contents of the <xref href=\"System.Windows.FrameworkContentElement.Style\"></xref> property on instances of this class.\n  remarks: This will return `true` if the <xref:System.Windows.Style> is locally set.\n  syntax:\n    content: public bool ShouldSerializeStyle ();\n    parameters: []\n    return:\n      type: System.Boolean\n      description: '`true` if the <xref href=\"System.Windows.FrameworkContentElement.Style\"></xref> property value should be serialized; otherwise, `false`.'\n  overload: System.Windows.FrameworkContentElement.ShouldSerializeStyle*\n  exceptions: []\n  attributes: []\n  version:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Windows/FrameworkContentElement.xml\n  ms.technology:\n  - dotnet-wpf\n  author: stevehoag\n  ms.author: shoag\n  manager: wpickett\n- uid: System.Windows.FrameworkContentElement.SourceUpdated\n  commentId: E:System.Windows.FrameworkContentElement.SourceUpdated\n  id: SourceUpdated\n  parent: System.Windows.FrameworkContentElement\n  langs:\n  - csharp\n  name: SourceUpdated\n  nameWithType: FrameworkContentElement.SourceUpdated\n  fullName: FrameworkContentElement.SourceUpdated\n  type: Event\n  assemblies:\n  - PresentationFramework\n  namespace: System.Windows\n  summary: Occurs when any associated data source participating in a binding on this element changes.\n  remarks: \"This event surfaces the <xref:System.Windows.Data.Binding.SourceUpdated> event that is raised by any <xref:System.Windows.Data.Binding> associated with this element.  \\n  \\n<a name=\\\"xamlAttributeUsage_SourceUpdated\\\"></a>   \\n## XAML Attribute Usage  \\n  \\n```  \\n<object SourceUpdated=\\\"EventHandler\\\"/>  \\n```\"\n  syntax:\n    content: public event EventHandler<System.Windows.Data.DataTransferEventArgs> SourceUpdated;\n    return:\n      type: System.EventHandler{System.Windows.Data.DataTransferEventArgs}\n      description: ''\n  exceptions: []\n  version:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Windows/FrameworkContentElement.xml\n  ms.technology:\n  - dotnet-wpf\n  author: stevehoag\n  ms.author: shoag\n  manager: wpickett\n- uid: System.Windows.FrameworkContentElement.Style\n  commentId: P:System.Windows.FrameworkContentElement.Style\n  id: Style\n  parent: System.Windows.FrameworkContentElement\n  langs:\n  - csharp\n  name: Style\n  nameWithType: FrameworkContentElement.Style\n  fullName: FrameworkContentElement.Style\n  type: Property\n  assemblies:\n  - PresentationFramework\n  namespace: System.Windows\n  summary: Gets or sets the style to be used by this element.\n  remarks: \"The current style is often provided by a default style from theming, or from styles generally applied to objects of that type by resources at page or application level (an implicit style). This property does not set or return default (theme) styles, but it does return the implicit style or an explicit style. In the case of implicit or explicit styles, it does not matter whether the style is accessed as a resource or defined locally.  \\n  \\n Setting the styles has some restrictions. You can reset the entire <xref:System.Windows.FrameworkContentElement.Style%2A> property to a new <xref:System.Windows.Style> at any time, which will force a layout recomposition. However, as soon as that style is placed in use by a loaded element, the <xref:System.Windows.Style> should be considered sealed. Attempting to make a change to any individual property of an in-use style (such as anything within the collection of <xref:System.Windows.Style.Setters%2A>) causes an exception to be thrown. A style that is defined in markup is considered to be in use as soon as it is loaded from a resource dictionary (for resources), or the page it is contained within is loaded (for inline styles).  \\n  \\n <xref:System.Windows.FrameworkContentElement.Style%2A> is a dependency property with special precedence. The locally set style generally operates at the highest precedence in the property system. If the <xref:System.Windows.FrameworkContentElement.Style%2A> is null at this point, during loading the property system checks for implicit styles as defined resources that specify that type. If the style is still null after this step, then the style comes from the default (theme) style, but the default style is not returned in the <xref:System.Windows.FrameworkContentElement.Style%2A> property value. See [Dependency Property Value Precedence](~/docs/framework/wpf/advanced/dependency-property-value-precedence.md).  \\n  \\n<a name=\\\"xamlAttributeUsage_Style\\\"></a>   \\n## XAML Attribute Usage  \\n  \\n```  \\n<object Style=\\\"{resourceExtension StyleResourceKey}\\\"/>  \\n```  \\n  \\n<a name=\\\"xamlValues_Style\\\"></a>   \\n## XAML Values  \\n *resourceExtension*  \\n One of the following: , or . See [XAML Resources](~/docs/framework/wpf/advanced/xaml-resources.md).  \\n  \\n *styleResourceKey*  \\n The key that identifies the style being requested. The key refers to an existing resource in a <xref:System.Windows.ResourceDictionary>.  \\n  \\n> [!NOTE]\\n>  Property element syntax is technically possible, but not recommended. See [Inline Styles and Templates](~/docs/framework/wpf/advanced/inline-styles-and-templates.md).  A binding reference using  or <xref:System.Windows.Data.Binding> is also possible, but uncommon.  \\n  \\n<a name=\\\"dependencyPropertyInfo_Style\\\"></a>   \\n## Dependency Property Information  \\n  \\n|||  \\n|-|-|  \\n|Identifier field|<xref:System.Windows.FrameworkContentElement.StyleProperty>|  \\n|Metadata properties set to `true`|<xref:System.Windows.FrameworkPropertyMetadata.AffectsMeasure%2A>|\"\n  example:\n  - \"The following example establishes a <xref:System.Windows.FrameworkContentElement.Resources%2A> collection on a <xref:System.Windows.Documents.FlowDocument> root element and then references it as a resource as a specific style for a <xref:System.Windows.Documents.Paragraph>.  \\n  \\n [!code-xml[ContentElementsSmorgasbord#FCEResources](~/samples/snippets/csharp/VS_Snippets_Wpf/ContentElementsSmorgasbord/CSharp/page2.xaml#fceresources)]\"\n  syntax:\n    content: public System.Windows.Style Style { get; set; }\n    return:\n      type: System.Windows.Style\n      description: The applied, nondefault style for the element, if present. Otherwise, `null`. The default for a default-constructed <xref href=\"System.Windows.FrameworkContentElement\"></xref> is `null`.\n  overload: System.Windows.FrameworkContentElement.Style*\n  exceptions: []\n  version:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Windows/FrameworkContentElement.xml\n  ms.technology:\n  - dotnet-wpf\n  author: stevehoag\n  ms.author: shoag\n  manager: wpickett\n- uid: System.Windows.FrameworkContentElement.StyleProperty\n  commentId: F:System.Windows.FrameworkContentElement.StyleProperty\n  id: StyleProperty\n  parent: System.Windows.FrameworkContentElement\n  langs:\n  - csharp\n  name: StyleProperty\n  nameWithType: FrameworkContentElement.StyleProperty\n  fullName: FrameworkContentElement.StyleProperty\n  type: Field\n  assemblies:\n  - PresentationFramework\n  namespace: System.Windows\n  summary: Identifies the <xref href=\"System.Windows.FrameworkContentElement.Style\"></xref> dependency property.\n  syntax:\n    content: public static readonly System.Windows.DependencyProperty StyleProperty;\n    return:\n      type: System.Windows.DependencyProperty\n      description: ''\n  exceptions: []\n  version:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Windows/FrameworkContentElement.xml\n  ms.technology:\n  - dotnet-wpf\n  author: stevehoag\n  ms.author: shoag\n  manager: wpickett\n- uid: System.Windows.FrameworkContentElement.Tag\n  commentId: P:System.Windows.FrameworkContentElement.Tag\n  id: Tag\n  parent: System.Windows.FrameworkContentElement\n  langs:\n  - csharp\n  name: Tag\n  nameWithType: FrameworkContentElement.Tag\n  fullName: FrameworkContentElement.Tag\n  type: Property\n  assemblies:\n  - PresentationFramework\n  namespace: System.Windows\n  summary: Gets or sets an arbitrary object value that can be used to store custom information about this element.\n  remarks: \"This property is analogous to Tag properties in other [!INCLUDE[TLA#tla_ms](~/includes/tlasharptla-ms-md.md)] programming models, such as [!INCLUDE[TLA#tla_vba](~/includes/tlasharptla-vba-md.md)] or [!INCLUDE[TLA#tla_winforms](~/includes/tlasharptla-winforms-md.md)]. It is intended to provide a pre-existing place to store some basic custom information about any element without forcing application developers to subclass.  \\n  \\n<a name=\\\"xamlValues_Tag\\\"></a>   \\n## XAML Values  \\n Because this property takes an object, you would need to use the property element usage in order to set the <xref:System.Windows.FrameworkContentElement.Tag%2A> property in [!INCLUDE[TLA#tla_xaml](~/includes/tlasharptla-xaml-md.md)] to anything other than an object with a known and built-in type converter, such as a string. Objects used in this way are typically not within the standard [!INCLUDE[TLA#tla_winclient](~/includes/tlasharptla-winclient-md.md)] namespaces and therefore may require namespace mapping to the external namespace in order to be introduced as [!INCLUDE[TLA2#tla_xaml](~/includes/tla2sharptla-xaml-md.md)] elements.  \\n  \\n<a name=\\\"dependencyPropertyInfo_Tag\\\"></a>   \\n## Dependency Property Information  \\n  \\n|||  \\n|-|-|  \\n|Identifier field|<xref:System.Windows.FrameworkContentElement.TagProperty>|  \\n|Metadata properties set to `true`|None|\"\n  syntax:\n    content: public object Tag { get; set; }\n    return:\n      type: System.Object\n      description: The intended value. This property has no default value.\n  overload: System.Windows.FrameworkContentElement.Tag*\n  exceptions: []\n  version:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Windows/FrameworkContentElement.xml\n  ms.technology:\n  - dotnet-wpf\n  author: stevehoag\n  ms.author: shoag\n  manager: wpickett\n- uid: System.Windows.FrameworkContentElement.TagProperty\n  commentId: F:System.Windows.FrameworkContentElement.TagProperty\n  id: TagProperty\n  parent: System.Windows.FrameworkContentElement\n  langs:\n  - csharp\n  name: TagProperty\n  nameWithType: FrameworkContentElement.TagProperty\n  fullName: FrameworkContentElement.TagProperty\n  type: Field\n  assemblies:\n  - PresentationFramework\n  namespace: System.Windows\n  summary: Identifies the <xref href=\"System.Windows.FrameworkContentElement.Tag\"></xref> dependency property.\n  syntax:\n    content: public static readonly System.Windows.DependencyProperty TagProperty;\n    return:\n      type: System.Windows.DependencyProperty\n      description: ''\n  exceptions: []\n  version:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Windows/FrameworkContentElement.xml\n  ms.technology:\n  - dotnet-wpf\n  author: stevehoag\n  ms.author: shoag\n  manager: wpickett\n- uid: System.Windows.FrameworkContentElement.TargetUpdated\n  commentId: E:System.Windows.FrameworkContentElement.TargetUpdated\n  id: TargetUpdated\n  parent: System.Windows.FrameworkContentElement\n  langs:\n  - csharp\n  name: TargetUpdated\n  nameWithType: FrameworkContentElement.TargetUpdated\n  fullName: FrameworkContentElement.TargetUpdated\n  type: Event\n  assemblies:\n  - PresentationFramework\n  namespace: System.Windows\n  summary: Occurs when any associated target property participating in a binding on this element changes.\n  remarks: \"This event surfaces the <xref:System.Windows.Data.Binding.TargetUpdated> event that is raised by any <xref:System.Windows.Data.Binding> associated with this element. This usually means that the binding in question is a two-way binding, and that the bound  dependency property affirms an invalidation of the previous property value per any validation or caching scheme that the property supports.  \\n  \\n The event arguments of this event will inform you which bound property was changed.  \\n  \\n<a name=\\\"xamlAttributeUsage_TargetUpdated\\\"></a>   \\n## XAML Attribute Usage  \\n  \\n```  \\n<object TargetUpdated=\\\"EventHandler\\\"/>  \\n```\"\n  syntax:\n    content: public event EventHandler<System.Windows.Data.DataTransferEventArgs> TargetUpdated;\n    return:\n      type: System.EventHandler{System.Windows.Data.DataTransferEventArgs}\n      description: ''\n  exceptions: []\n  version:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Windows/FrameworkContentElement.xml\n  ms.technology:\n  - dotnet-wpf\n  author: stevehoag\n  ms.author: shoag\n  manager: wpickett\n- uid: System.Windows.FrameworkContentElement.TemplatedParent\n  commentId: P:System.Windows.FrameworkContentElement.TemplatedParent\n  id: TemplatedParent\n  parent: System.Windows.FrameworkContentElement\n  langs:\n  - csharp\n  name: TemplatedParent\n  nameWithType: FrameworkContentElement.TemplatedParent\n  fullName: FrameworkContentElement.TemplatedParent\n  type: Property\n  assemblies:\n  - PresentationFramework\n  namespace: System.Windows\n  summary: Gets a reference to the template parent of this element. This property is not relevant if the element was not created through a template.\n  remarks: \"Templates are actually shared objects, where the contents of the template are created only once. Therefore, if you obtain an object reference to an element that came from a template, you may find that the apparent logical tree does not reach to the page root. In order to connect such a template reference to the page's logical tree, you should get the <xref:System.Windows.FrameworkContentElement.TemplatedParent%2A> value and continue to navigate that element tree as desired.  \\n  \\n <xref:System.Windows.FrameworkContentElement.TemplatedParent%2A> will frequently be `null` for common objects, because if you have obtained an object reference from out of a page in your application through typical means, that element probably was not created from a template. Cases where <xref:System.Windows.FrameworkContentElement.TemplatedParent%2A> might not be `null` would include operations such as hit-testing, event handling for certain low-level input events, or working with enumerators, which may have returned elements that came from templates.\"\n  syntax:\n    content: public System.Windows.DependencyObject TemplatedParent { get; }\n    return:\n      type: System.Windows.DependencyObject\n      description: The element whose <xref href=\"System.Windows.FrameworkTemplate\"></xref><xref href=\"System.Windows.FrameworkTemplate.VisualTree\"></xref> caused this element to be created. This value is frequently `null`.\n  overload: System.Windows.FrameworkContentElement.TemplatedParent*\n  exceptions: []\n  version:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Windows/FrameworkContentElement.xml\n  ms.technology:\n  - dotnet-wpf\n  author: stevehoag\n  ms.author: shoag\n  manager: wpickett\n- uid: System.Windows.FrameworkContentElement.ToolTip\n  commentId: P:System.Windows.FrameworkContentElement.ToolTip\n  id: ToolTip\n  parent: System.Windows.FrameworkContentElement\n  langs:\n  - csharp\n  name: ToolTip\n  nameWithType: FrameworkContentElement.ToolTip\n  fullName: FrameworkContentElement.ToolTip\n  type: Property\n  assemblies:\n  - PresentationFramework\n  namespace: System.Windows\n  summary: Gets or sets the tool-tip object that is displayed for this element in the [!INCLUDE[TLA#tla_ui](~/includes/tlasharptla-ui-md.md)].\n  remarks: \"If the value of this property is of type <xref:System.Windows.Controls.ToolTip>, then that is the tool-tip that will be used in the [!INCLUDE[TLA2#tla_ui](~/includes/tla2sharptla-ui-md.md)].  If the value is of any other type, then that value will be used as the *content* for a <xref:System.Windows.Controls.ToolTip> provided (constructed) by the system. For more information see <xref:System.Windows.Controls.ToolTipService>. The service class provides attached properties that can be used to further customize a tool-tip.  \\n  \\n<a name=\\\"xamlAttributeUsage_ToolTip\\\"></a>   \\n## XAML Attribute Usage  \\n  \\n```  \\n<object ToolTip=\\\"toolTipContent\\\"/>  \\n```  \\n  \\n<a name=\\\"xamlPropertyElementUsage_ToolTip\\\"></a>   \\n## XAML Property Element Usage  \\n  \\n```  \\n<object>  \\n  <object.ToolTip>  \\n    <ToolTip .../>  \\n  </object.ToolTip>  \\n</object>  \\n- or -  \\n<object>  \\n  <object.ToolTip>  \\n    toolTipObjectContent  \\n  </object.ToolTip>  \\n</object>  \\n```  \\n  \\n<a name=\\\"xamlValues_ToolTip\\\"></a>   \\n## XAML Values  \\n *toolTipContent*  \\n A string that becomes the display text for the <xref:System.Windows.FrameworkContentElement.ToolTip%2A>.  \\n  \\n *toolTipObjectContent*  \\n Some object, provided in object element form, that should be used as the content for the <xref:System.Windows.FrameworkContentElement> . Typically this would be a <xref:System.Windows.FrameworkElement> or some other element that creates layout compositing for the <xref:System.Windows.FrameworkContentElement.ToolTip%2A>, eventually containing text content within the compositing. In this usage, the <xref:System.Windows.Controls.ToolTip> element is created implicitly from the parsed [!INCLUDE[TLA2#tla_xaml](~/includes/tla2sharptla-xaml-md.md)], and the *toolTipObjectContent* content is set as its <xref:System.Windows.Controls.ContentControl.Content%2A?displayProperty=fullName> property.  \\n  \\n <`ToolTip` .../>  \\n See <xref:System.Windows.Controls.ToolTip>.  \\n  \\n<a name=\\\"dependencyPropertyInfo_ToolTip\\\"></a>   \\n## Dependency Property Information  \\n  \\n|||  \\n|-|-|  \\n|Identifier field|<xref:System.Windows.FrameworkContentElement.ToolTipProperty>|  \\n|Metadata properties set to `true`|None|\"\n  example:\n  - \"The following example sets the value of the <xref:System.Windows.FrameworkElement.ToolTip%2A> property directly to a string.  \\n  \\n [!code-csharp[TableSnippets2#_Table_RowGroups_ManipRows](~/samples/snippets/csharp/VS_Snippets_Wpf/TableSnippets2/CSharp/Window1.xaml.cs#_table_rowgroups_maniprows)]\\n [!code-vb[TableSnippets2#_Table_RowGroups_ManipRows](~/samples/snippets/visualbasic/VS_Snippets_Wpf/TableSnippets2/visualbasic/window1.xaml.vb#_table_rowgroups_maniprows)]\"\n  syntax:\n    content: >-\n      [System.ComponentModel.Bindable(true)]\n\n      public object ToolTip { get; set; }\n    return:\n      type: System.Object\n      description: The tooltip object.\n  overload: System.Windows.FrameworkContentElement.ToolTip*\n  exceptions: []\n  attributes:\n  - type: System.ComponentModel.BindableAttribute\n  version:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Windows/FrameworkContentElement.xml\n  ms.technology:\n  - dotnet-wpf\n  author: stevehoag\n  ms.author: shoag\n  manager: wpickett\n- uid: System.Windows.FrameworkContentElement.ToolTipClosing\n  commentId: E:System.Windows.FrameworkContentElement.ToolTipClosing\n  id: ToolTipClosing\n  parent: System.Windows.FrameworkContentElement\n  langs:\n  - csharp\n  name: ToolTipClosing\n  nameWithType: FrameworkContentElement.ToolTipClosing\n  fullName: FrameworkContentElement.ToolTipClosing\n  type: Event\n  assemblies:\n  - PresentationFramework\n  namespace: System.Windows\n  summary: Occurs just before any tooltip on the element is closed.\n  remarks: \"To suppress closing the tooltip, handlers of the event should mark it as handled.  \\n  \\n This event cannot be an <xref:System.Windows.EventTrigger> in a style. This is because the identifier field of this event re-uses an implementation from a service that does not expose add/remove methods on the event.  \\n  \\n<a name=\\\"routedEventInfo_ToolTipClosing\\\"></a>   \\n## Routed Event Information  \\n  \\n|||  \\n|-|-|  \\n|Identifier field|<xref:System.Windows.FrameworkContentElement.ToolTipClosingEvent>|  \\n|Routing strategy|Direct|  \\n|Delegate|<xref:System.Windows.Controls.ToolTipEventHandler>|\"\n  syntax:\n    content: public event System.Windows.Controls.ToolTipEventHandler ToolTipClosing;\n    return:\n      type: System.Windows.Controls.ToolTipEventHandler\n      description: ''\n  exceptions: []\n  version:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Windows/FrameworkContentElement.xml\n  ms.technology:\n  - dotnet-wpf\n  author: stevehoag\n  ms.author: shoag\n  manager: wpickett\n- uid: System.Windows.FrameworkContentElement.ToolTipClosingEvent\n  commentId: F:System.Windows.FrameworkContentElement.ToolTipClosingEvent\n  id: ToolTipClosingEvent\n  parent: System.Windows.FrameworkContentElement\n  langs:\n  - csharp\n  name: ToolTipClosingEvent\n  nameWithType: FrameworkContentElement.ToolTipClosingEvent\n  fullName: FrameworkContentElement.ToolTipClosingEvent\n  type: Field\n  assemblies:\n  - PresentationFramework\n  namespace: System.Windows\n  summary: Identifies the <xref href=\"System.Windows.FrameworkContentElement.ToolTipClosing\"></xref> [Routed Events Overview](~/docs/framework/wpf/advanced/routed-events-overview.md).\n  remarks: Event identifier objects are created when routed events are registered (see <xref:System.Windows.EventManager.RegisterRoutedEvent%2A>) and can then be used to add class handlers (see <xref:System.Windows.EventManager.RegisterClassHandler%2A>). Identifier objects contain an identifying name, owner type, handler type, routing strategy, and a utility method for adding owners for the event.\n  syntax:\n    content: public static readonly System.Windows.RoutedEvent ToolTipClosingEvent;\n    return:\n      type: System.Windows.RoutedEvent\n      description: ''\n  exceptions: []\n  version:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Windows/FrameworkContentElement.xml\n  ms.technology:\n  - dotnet-wpf\n  author: stevehoag\n  ms.author: shoag\n  manager: wpickett\n- uid: System.Windows.FrameworkContentElement.ToolTipOpening\n  commentId: E:System.Windows.FrameworkContentElement.ToolTipOpening\n  id: ToolTipOpening\n  parent: System.Windows.FrameworkContentElement\n  langs:\n  - csharp\n  name: ToolTipOpening\n  nameWithType: FrameworkContentElement.ToolTipOpening\n  fullName: FrameworkContentElement.ToolTipOpening\n  type: Event\n  assemblies:\n  - PresentationFramework\n  namespace: System.Windows\n  summary: Occurs when any tooltip on the element is opened.\n  remarks: \"To manually open tooltips, handlers of the events should mark the relevant event as handled. Otherwise, the value of the <xref:System.Windows.FrameworkContentElement.ToolTip%2A> property will be used to automatically open a context menu. Marking the event handled will effectively cancel the default action, and could be an opportunity to reset the value of the <xref:System.Windows.FrameworkContentElement.ToolTip%2A> property and then open the new <xref:System.Windows.Controls.ContextMenu>. Note that this event will not be raised if <xref:System.Windows.FrameworkContentElement.ToolTip%2A> is a null reference or otherwise unset.  \\n  \\n This event cannot be an <xref:System.Windows.EventTrigger> in a style. This is because the identifier field of this event re-uses an implementation from a service that does not expose add/remove methods on the event.  \\n  \\n<a name=\\\"routedEventInfo_ToolTipOpening\\\"></a>   \\n## Routed Event Information  \\n  \\n|||  \\n|-|-|  \\n|Identifier field|<xref:System.Windows.FrameworkContentElement.ToolTipOpeningEvent>|  \\n|Routing strategy|Direct|  \\n|Delegate|<xref:System.Windows.Controls.ToolTipEventHandler>|\"\n  syntax:\n    content: public event System.Windows.Controls.ToolTipEventHandler ToolTipOpening;\n    return:\n      type: System.Windows.Controls.ToolTipEventHandler\n      description: ''\n  exceptions: []\n  version:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Windows/FrameworkContentElement.xml\n  ms.technology:\n  - dotnet-wpf\n  author: stevehoag\n  ms.author: shoag\n  manager: wpickett\n- uid: System.Windows.FrameworkContentElement.ToolTipOpeningEvent\n  commentId: F:System.Windows.FrameworkContentElement.ToolTipOpeningEvent\n  id: ToolTipOpeningEvent\n  parent: System.Windows.FrameworkContentElement\n  langs:\n  - csharp\n  name: ToolTipOpeningEvent\n  nameWithType: FrameworkContentElement.ToolTipOpeningEvent\n  fullName: FrameworkContentElement.ToolTipOpeningEvent\n  type: Field\n  assemblies:\n  - PresentationFramework\n  namespace: System.Windows\n  summary: Identifies the <xref href=\"System.Windows.FrameworkContentElement.ToolTipOpening\"></xref> [Routed Events Overview](~/docs/framework/wpf/advanced/routed-events-overview.md).\n  remarks: Event identifier objects are created when routed events are registered (see <xref:System.Windows.EventManager.RegisterRoutedEvent%2A>) and can then be used to add class handlers (see <xref:System.Windows.EventManager.RegisterClassHandler%2A>). Identifier objects contain an identifying name, owner type, handler type, routing strategy, and a utility method for adding owners for the event.\n  syntax:\n    content: public static readonly System.Windows.RoutedEvent ToolTipOpeningEvent;\n    return:\n      type: System.Windows.RoutedEvent\n      description: ''\n  exceptions: []\n  version:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Windows/FrameworkContentElement.xml\n  ms.technology:\n  - dotnet-wpf\n  author: stevehoag\n  ms.author: shoag\n  manager: wpickett\n- uid: System.Windows.FrameworkContentElement.ToolTipProperty\n  commentId: F:System.Windows.FrameworkContentElement.ToolTipProperty\n  id: ToolTipProperty\n  parent: System.Windows.FrameworkContentElement\n  langs:\n  - csharp\n  name: ToolTipProperty\n  nameWithType: FrameworkContentElement.ToolTipProperty\n  fullName: FrameworkContentElement.ToolTipProperty\n  type: Field\n  assemblies:\n  - PresentationFramework\n  namespace: System.Windows\n  summary: Identifies the <xref href=\"System.Windows.FrameworkContentElement.ToolTip\"></xref> dependency property.\n  syntax:\n    content: public static readonly System.Windows.DependencyProperty ToolTipProperty;\n    return:\n      type: System.Windows.DependencyProperty\n      description: ''\n  exceptions: []\n  version:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Windows/FrameworkContentElement.xml\n  ms.technology:\n  - dotnet-wpf\n  author: stevehoag\n  ms.author: shoag\n  manager: wpickett\n- uid: System.Windows.FrameworkContentElement.TryFindResource(System.Object)\n  commentId: M:System.Windows.FrameworkContentElement.TryFindResource(System.Object)\n  id: TryFindResource(System.Object)\n  parent: System.Windows.FrameworkContentElement\n  langs:\n  - csharp\n  name: TryFindResource(Object)\n  nameWithType: FrameworkContentElement.TryFindResource(Object)\n  fullName: FrameworkContentElement.TryFindResource(Object)\n  type: Method\n  assemblies:\n  - PresentationFramework\n  namespace: System.Windows\n  summary: Searches for a resource with the specified key, and returns that resource if found.\n  remarks: \"If the resource is not found on the calling element, the parent tree is searched using the logical tree, in the same way that the tree would be searched if a dynamic resource reference were requested by key at run-time.  \\n  \\n Typically you would immediately cast the return value to the type of the property that you were attempting to set with the returned resource value.  \\n  \\n The <xref:System.Windows.FrameworkContentElement.FindResource%2A> method has similar behavior, except that it will throw an exception in the case of not finding a resource with the provided key.\"\n  example:\n  - \"The following example finds a resource as defined in markup and applies it to a certain property of an element in response to a routed event.  \\n  \\n [!code-csharp[ContentElementsSmorgasbord#TryFindResource](~/samples/snippets/csharp/VS_Snippets_Wpf/ContentElementsSmorgasbord/CSharp/page1.xaml.cs#tryfindresource)]\\n [!code-vb[ContentElementsSmorgasbord#TryFindResource](~/samples/snippets/visualbasic/VS_Snippets_Wpf/ContentElementsSmorgasbord/visualbasic/page1.xaml.vb#tryfindresource)]\"\n  syntax:\n    content: public object TryFindResource (object resourceKey);\n    parameters:\n    - id: resourceKey\n      type: System.Object\n      description: Key identifier of the resource to be found.\n    return:\n      type: System.Object\n      description: The found resource. If no resource was found, `null` is returned.\n  overload: System.Windows.FrameworkContentElement.TryFindResource*\n  exceptions: []\n  version:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Windows/FrameworkContentElement.xml\n  ms.technology:\n  - dotnet-wpf\n  author: stevehoag\n  ms.author: shoag\n  manager: wpickett\n- uid: System.Windows.FrameworkContentElement.Unloaded\n  commentId: E:System.Windows.FrameworkContentElement.Unloaded\n  id: Unloaded\n  parent: System.Windows.FrameworkContentElement\n  langs:\n  - csharp\n  name: Unloaded\n  nameWithType: FrameworkContentElement.Unloaded\n  fullName: FrameworkContentElement.Unloaded\n  type: Event\n  assemblies:\n  - PresentationFramework\n  namespace: System.Windows\n  summary: Occurs when the element is removed from an element tree of loaded elements.\n  remarks: \"Direct routed events do not follow a route, they are only handled within the same element on which they are raised. Direct routed events do support other routed event behavior: they support an accessible handlers collection, and can be used as an <xref:System.Windows.EventTrigger> in a style.  \\n  \\n<a name=\\\"routedEventInfo_Unloaded\\\"></a>   \\n## Routed Event Information  \\n  \\n|||  \\n|-|-|  \\n|Identifier field|<xref:System.Windows.FrameworkContentElement.UnloadedEvent>|  \\n|Routing strategy|Direct|  \\n|Delegate|<xref:System.Windows.RoutedEventHandler>|\"\n  syntax:\n    content: public event System.Windows.RoutedEventHandler Unloaded;\n    return:\n      type: System.Windows.RoutedEventHandler\n      description: ''\n  exceptions: []\n  version:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Windows/FrameworkContentElement.xml\n  ms.technology:\n  - dotnet-wpf\n  author: stevehoag\n  ms.author: shoag\n  manager: wpickett\n- uid: System.Windows.FrameworkContentElement.UnloadedEvent\n  commentId: F:System.Windows.FrameworkContentElement.UnloadedEvent\n  id: UnloadedEvent\n  parent: System.Windows.FrameworkContentElement\n  langs:\n  - csharp\n  name: UnloadedEvent\n  nameWithType: FrameworkContentElement.UnloadedEvent\n  fullName: FrameworkContentElement.UnloadedEvent\n  type: Field\n  assemblies:\n  - PresentationFramework\n  namespace: System.Windows\n  summary: Identifies the <xref href=\"System.Windows.FrameworkContentElement.Unloaded\"></xref> [Routed Events Overview](~/docs/framework/wpf/advanced/routed-events-overview.md).\n  remarks: Event identifier objects are created when routed events are registered (see <xref:System.Windows.EventManager.RegisterRoutedEvent%2A>) and can then be used to add class handlers (see <xref:System.Windows.EventManager.RegisterClassHandler%2A>). Identifier objects contain an identifying name, owner type, handler type, routing strategy, and a utility method for adding owners for the event.\n  syntax:\n    content: public static readonly System.Windows.RoutedEvent UnloadedEvent;\n    return:\n      type: System.Windows.RoutedEvent\n      description: ''\n  exceptions: []\n  version:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Windows/FrameworkContentElement.xml\n  ms.technology:\n  - dotnet-wpf\n  author: stevehoag\n  ms.author: shoag\n  manager: wpickett\n- uid: System.Windows.FrameworkContentElement.UnregisterName(System.String)\n  commentId: M:System.Windows.FrameworkContentElement.UnregisterName(System.String)\n  id: UnregisterName(System.String)\n  parent: System.Windows.FrameworkContentElement\n  langs:\n  - csharp\n  name: UnregisterName(String)\n  nameWithType: FrameworkContentElement.UnregisterName(String)\n  fullName: FrameworkContentElement.UnregisterName(String)\n  type: Method\n  assemblies:\n  - PresentationFramework\n  namespace: System.Windows\n  summary: Simplifies access to the <xref href=\"System.Windows.NameScope\"></xref> de-registration method.\n  remarks: You only need to un-register names if you intend to re-register another element with that same name.\n  syntax:\n    content: public void UnregisterName (string name);\n    parameters:\n    - id: name\n      type: System.String\n      description: Name of the name-object pair to remove from the current scope.\n  overload: System.Windows.FrameworkContentElement.UnregisterName*\n  exceptions: []\n  version:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Windows/FrameworkContentElement.xml\n  ms.technology:\n  - dotnet-wpf\n  author: stevehoag\n  ms.author: shoag\n  manager: wpickett\n- uid: System.Windows.FrameworkContentElement.UpdateDefaultStyle\n  commentId: M:System.Windows.FrameworkContentElement.UpdateDefaultStyle\n  id: UpdateDefaultStyle\n  parent: System.Windows.FrameworkContentElement\n  langs:\n  - csharp\n  name: UpdateDefaultStyle()\n  nameWithType: FrameworkContentElement.UpdateDefaultStyle()\n  fullName: FrameworkContentElement.UpdateDefaultStyle()\n  type: Method\n  assemblies:\n  - PresentationFramework\n  namespace: System.Windows\n  summary: Reapplies the default style to the current <xref href=\"System.Windows.FrameworkContentElement\"></xref>.\n  syntax:\n    content: public void UpdateDefaultStyle ();\n    parameters: []\n  overload: System.Windows.FrameworkContentElement.UpdateDefaultStyle*\n  exceptions: []\n  version:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Windows/FrameworkContentElement.xml\n  ms.technology:\n  - dotnet-wpf\n  author: stevehoag\n  ms.author: shoag\n  manager: wpickett\n- uid: System.Windows.FrameworkContentElement.System#Windows#Markup#IQueryAmbient#IsAmbientPropertyAvailable(System.String)\n  commentId: M:System.Windows.FrameworkContentElement.System#Windows#Markup#IQueryAmbient#IsAmbientPropertyAvailable(System.String)\n  id: System#Windows#Markup#IQueryAmbient#IsAmbientPropertyAvailable(System.String)\n  isEii: true\n  parent: System.Windows.FrameworkContentElement\n  langs:\n  - csharp\n  name: IQueryAmbient.IsAmbientPropertyAvailable(String)\n  nameWithType: FrameworkContentElement.IQueryAmbient.IsAmbientPropertyAvailable(String)\n  fullName: FrameworkContentElement.IQueryAmbient.IsAmbientPropertyAvailable(String)\n  type: Method\n  assemblies:\n  - PresentationFramework\n  namespace: System.Windows\n  summary: For a description of this member, see the <xref href=\"System.Windows.Markup.IQueryAmbient.IsAmbientPropertyAvailable(System.String)\"></xref> method.\n  remarks: This member is an explicit interface member implementation. It can be used only when the <xref:System.Windows.FrameworkContentElement> instance is cast to an <xref:System.Windows.Markup.IQueryAmbient> interface.\n  syntax:\n    content: bool IQueryAmbient.IsAmbientPropertyAvailable (string propertyName);\n    parameters:\n    - id: propertyName\n      type: System.String\n      description: The name of the requested ambient property.\n    return:\n      type: System.Boolean\n      description: '`true` if <code>propertyName</code> is available; otherwise, `false`.'\n  overload: System.Windows.FrameworkContentElement.System#Windows#Markup#IQueryAmbient#IsAmbientPropertyAvailable*\n  exceptions: []\n  version:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Windows/FrameworkContentElement.xml\n  ms.technology:\n  - dotnet-wpf\n  author: stevehoag\n  ms.author: shoag\n  manager: wpickett\nreferences:\n- uid: System.Windows.ContentElement\n  parent: System.Windows\n  isExternal: false\n  name: ContentElement\n  nameWithType: ContentElement\n  fullName: System.Windows.ContentElement\n- uid: System.Windows.ResourceReferenceKeyNotFoundException\n  parent: System.Windows\n  isExternal: false\n  name: ResourceReferenceKeyNotFoundException\n  nameWithType: ResourceReferenceKeyNotFoundException\n  fullName: System.Windows.ResourceReferenceKeyNotFoundException\n- uid: System.ArgumentNullException\n  parent: System\n  isExternal: false\n  name: ArgumentNullException\n  nameWithType: ArgumentNullException\n  fullName: System.ArgumentNullException\n- uid: System.ComponentModel.InvalidEnumArgumentException\n  parent: System.ComponentModel\n  isExternal: false\n  name: InvalidEnumArgumentException\n  nameWithType: InvalidEnumArgumentException\n  fullName: System.ComponentModel.InvalidEnumArgumentException\n- uid: System.Windows.FrameworkContentElement.#ctor\n  parent: System.Windows.FrameworkContentElement\n  isExternal: false\n  name: FrameworkContentElement()\n  nameWithType: FrameworkContentElement.FrameworkContentElement()\n  fullName: FrameworkContentElement.FrameworkContentElement()\n- uid: System.Windows.FrameworkContentElement.AddLogicalChild(System.Object)\n  parent: System.Windows.FrameworkContentElement\n  isExternal: false\n  name: AddLogicalChild(Object)\n  nameWithType: FrameworkContentElement.AddLogicalChild(Object)\n  fullName: FrameworkContentElement.AddLogicalChild(Object)\n- uid: System.Object\n  parent: System\n  isExternal: false\n  name: Object\n  nameWithType: Object\n  fullName: System.Object\n- uid: System.Windows.FrameworkContentElement.BeginInit\n  parent: System.Windows.FrameworkContentElement\n  isExternal: false\n  name: BeginInit()\n  nameWithType: FrameworkContentElement.BeginInit()\n  fullName: FrameworkContentElement.BeginInit()\n- uid: System.Windows.FrameworkContentElement.BeginStoryboard(System.Windows.Media.Animation.Storyboard)\n  parent: System.Windows.FrameworkContentElement\n  isExternal: false\n  name: BeginStoryboard(Storyboard)\n  nameWithType: FrameworkContentElement.BeginStoryboard(Storyboard)\n  fullName: FrameworkContentElement.BeginStoryboard(Storyboard)\n- uid: System.Windows.Media.Animation.Storyboard\n  parent: System.Windows.Media.Animation\n  isExternal: false\n  name: Storyboard\n  nameWithType: Storyboard\n  fullName: System.Windows.Media.Animation.Storyboard\n- uid: System.Windows.FrameworkContentElement.BeginStoryboard(System.Windows.Media.Animation.Storyboard,System.Windows.Media.Animation.HandoffBehavior)\n  parent: System.Windows.FrameworkContentElement\n  isExternal: false\n  name: BeginStoryboard(Storyboard, HandoffBehavior)\n  nameWithType: FrameworkContentElement.BeginStoryboard(Storyboard, HandoffBehavior)\n  fullName: FrameworkContentElement.BeginStoryboard(Storyboard, HandoffBehavior)\n- uid: System.Windows.Media.Animation.HandoffBehavior\n  parent: System.Windows.Media.Animation\n  isExternal: false\n  name: HandoffBehavior\n  nameWithType: HandoffBehavior\n  fullName: System.Windows.Media.Animation.HandoffBehavior\n- uid: System.Windows.FrameworkContentElement.BeginStoryboard(System.Windows.Media.Animation.Storyboard,System.Windows.Media.Animation.HandoffBehavior,System.Boolean)\n  parent: System.Windows.FrameworkContentElement\n  isExternal: false\n  name: BeginStoryboard(Storyboard, HandoffBehavior, Boolean)\n  nameWithType: FrameworkContentElement.BeginStoryboard(Storyboard, HandoffBehavior, Boolean)\n  fullName: FrameworkContentElement.BeginStoryboard(Storyboard, HandoffBehavior, Boolean)\n- uid: System.Boolean\n  parent: System\n  isExternal: false\n  name: Boolean\n  nameWithType: Boolean\n  fullName: System.Boolean\n- uid: System.Windows.FrameworkContentElement.BindingGroup\n  parent: System.Windows.FrameworkContentElement\n  isExternal: false\n  name: BindingGroup\n  nameWithType: FrameworkContentElement.BindingGroup\n  fullName: FrameworkContentElement.BindingGroup\n- uid: System.Windows.Data.BindingGroup\n  parent: System.Windows.Data\n  isExternal: false\n  name: BindingGroup\n  nameWithType: BindingGroup\n  fullName: System.Windows.Data.BindingGroup\n- uid: System.Windows.FrameworkContentElement.BindingGroupProperty\n  parent: System.Windows.FrameworkContentElement\n  isExternal: false\n  name: BindingGroupProperty\n  nameWithType: FrameworkContentElement.BindingGroupProperty\n  fullName: FrameworkContentElement.BindingGroupProperty\n- uid: System.Windows.DependencyProperty\n  parent: System.Windows\n  isExternal: false\n  name: DependencyProperty\n  nameWithType: DependencyProperty\n  fullName: System.Windows.DependencyProperty\n- uid: System.Windows.FrameworkContentElement.BringIntoView\n  parent: System.Windows.FrameworkContentElement\n  isExternal: false\n  name: BringIntoView()\n  nameWithType: FrameworkContentElement.BringIntoView()\n  fullName: FrameworkContentElement.BringIntoView()\n- uid: System.Windows.FrameworkContentElement.ContextMenu\n  parent: System.Windows.FrameworkContentElement\n  isExternal: false\n  name: ContextMenu\n  nameWithType: FrameworkContentElement.ContextMenu\n  fullName: FrameworkContentElement.ContextMenu\n- uid: System.Windows.Controls.ContextMenu\n  parent: System.Windows.Controls\n  isExternal: false\n  name: ContextMenu\n  nameWithType: ContextMenu\n  fullName: System.Windows.Controls.ContextMenu\n- uid: System.Windows.FrameworkContentElement.ContextMenuClosing\n  parent: System.Windows.FrameworkContentElement\n  isExternal: false\n  name: ContextMenuClosing\n  nameWithType: FrameworkContentElement.ContextMenuClosing\n  fullName: FrameworkContentElement.ContextMenuClosing\n- uid: System.Windows.Controls.ContextMenuEventHandler\n  parent: System.Windows.Controls\n  isExternal: false\n  name: ContextMenuEventHandler\n  nameWithType: ContextMenuEventHandler\n  fullName: System.Windows.Controls.ContextMenuEventHandler\n- uid: System.Windows.FrameworkContentElement.ContextMenuClosingEvent\n  parent: System.Windows.FrameworkContentElement\n  isExternal: false\n  name: ContextMenuClosingEvent\n  nameWithType: FrameworkContentElement.ContextMenuClosingEvent\n  fullName: FrameworkContentElement.ContextMenuClosingEvent\n- uid: System.Windows.RoutedEvent\n  parent: System.Windows\n  isExternal: false\n  name: RoutedEvent\n  nameWithType: RoutedEvent\n  fullName: System.Windows.RoutedEvent\n- uid: System.Windows.FrameworkContentElement.ContextMenuOpening\n  parent: System.Windows.FrameworkContentElement\n  isExternal: false\n  name: ContextMenuOpening\n  nameWithType: FrameworkContentElement.ContextMenuOpening\n  fullName: FrameworkContentElement.ContextMenuOpening\n- uid: System.Windows.FrameworkContentElement.ContextMenuOpeningEvent\n  parent: System.Windows.FrameworkContentElement\n  isExternal: false\n  name: ContextMenuOpeningEvent\n  nameWithType: FrameworkContentElement.ContextMenuOpeningEvent\n  fullName: FrameworkContentElement.ContextMenuOpeningEvent\n- uid: System.Windows.FrameworkContentElement.ContextMenuProperty\n  parent: System.Windows.FrameworkContentElement\n  isExternal: false\n  name: ContextMenuProperty\n  nameWithType: FrameworkContentElement.ContextMenuProperty\n  fullName: FrameworkContentElement.ContextMenuProperty\n- uid: System.Windows.FrameworkContentElement.Cursor\n  parent: System.Windows.FrameworkContentElement\n  isExternal: false\n  name: Cursor\n  nameWithType: FrameworkContentElement.Cursor\n  fullName: FrameworkContentElement.Cursor\n- uid: System.Windows.Input.Cursor\n  parent: System.Windows.Input\n  isExternal: false\n  name: Cursor\n  nameWithType: Cursor\n  fullName: System.Windows.Input.Cursor\n- uid: System.Windows.FrameworkContentElement.CursorProperty\n  parent: System.Windows.FrameworkContentElement\n  isExternal: false\n  name: CursorProperty\n  nameWithType: FrameworkContentElement.CursorProperty\n  fullName: FrameworkContentElement.CursorProperty\n- uid: System.Windows.FrameworkContentElement.DataContext\n  parent: System.Windows.FrameworkContentElement\n  isExternal: false\n  name: DataContext\n  nameWithType: FrameworkContentElement.DataContext\n  fullName: FrameworkContentElement.DataContext\n- uid: System.Windows.FrameworkContentElement.DataContextChanged\n  parent: System.Windows.FrameworkContentElement\n  isExternal: false\n  name: DataContextChanged\n  nameWithType: FrameworkContentElement.DataContextChanged\n  fullName: FrameworkContentElement.DataContextChanged\n- uid: System.Windows.DependencyPropertyChangedEventHandler\n  parent: System.Windows\n  isExternal: false\n  name: DependencyPropertyChangedEventHandler\n  nameWithType: DependencyPropertyChangedEventHandler\n  fullName: System.Windows.DependencyPropertyChangedEventHandler\n- uid: System.Windows.FrameworkContentElement.DataContextProperty\n  parent: System.Windows.FrameworkContentElement\n  isExternal: false\n  name: DataContextProperty\n  nameWithType: FrameworkContentElement.DataContextProperty\n  fullName: FrameworkContentElement.DataContextProperty\n- uid: System.Windows.FrameworkContentElement.DefaultStyleKey\n  parent: System.Windows.FrameworkContentElement\n  isExternal: false\n  name: DefaultStyleKey\n  nameWithType: FrameworkContentElement.DefaultStyleKey\n  fullName: FrameworkContentElement.DefaultStyleKey\n- uid: System.Windows.FrameworkContentElement.DefaultStyleKeyProperty\n  parent: System.Windows.FrameworkContentElement\n  isExternal: false\n  name: DefaultStyleKeyProperty\n  nameWithType: FrameworkContentElement.DefaultStyleKeyProperty\n  fullName: FrameworkContentElement.DefaultStyleKeyProperty\n- uid: System.Windows.FrameworkContentElement.EndInit\n  parent: System.Windows.FrameworkContentElement\n  isExternal: false\n  name: EndInit()\n  nameWithType: FrameworkContentElement.EndInit()\n  fullName: FrameworkContentElement.EndInit()\n- uid: System.Windows.FrameworkContentElement.FindName(System.String)\n  parent: System.Windows.FrameworkContentElement\n  isExternal: false\n  name: FindName(String)\n  nameWithType: FrameworkContentElement.FindName(String)\n  fullName: FrameworkContentElement.FindName(String)\n- uid: System.String\n  parent: System\n  isExternal: false\n  name: String\n  nameWithType: String\n  fullName: System.String\n- uid: System.Windows.FrameworkContentElement.FindResource(System.Object)\n  parent: System.Windows.FrameworkContentElement\n  isExternal: false\n  name: FindResource(Object)\n  nameWithType: FrameworkContentElement.FindResource(Object)\n  fullName: FrameworkContentElement.FindResource(Object)\n- uid: System.Windows.FrameworkContentElement.FocusVisualStyle\n  parent: System.Windows.FrameworkContentElement\n  isExternal: false\n  name: FocusVisualStyle\n  nameWithType: FrameworkContentElement.FocusVisualStyle\n  fullName: FrameworkContentElement.FocusVisualStyle\n- uid: System.Windows.Style\n  parent: System.Windows\n  isExternal: false\n  name: Style\n  nameWithType: Style\n  fullName: System.Windows.Style\n- uid: System.Windows.FrameworkContentElement.FocusVisualStyleProperty\n  parent: System.Windows.FrameworkContentElement\n  isExternal: false\n  name: FocusVisualStyleProperty\n  nameWithType: FrameworkContentElement.FocusVisualStyleProperty\n  fullName: FrameworkContentElement.FocusVisualStyleProperty\n- uid: System.Windows.FrameworkContentElement.ForceCursor\n  parent: System.Windows.FrameworkContentElement\n  isExternal: false\n  name: ForceCursor\n  nameWithType: FrameworkContentElement.ForceCursor\n  fullName: FrameworkContentElement.ForceCursor\n- uid: System.Windows.FrameworkContentElement.ForceCursorProperty\n  parent: System.Windows.FrameworkContentElement\n  isExternal: false\n  name: ForceCursorProperty\n  nameWithType: FrameworkContentElement.ForceCursorProperty\n  fullName: FrameworkContentElement.ForceCursorProperty\n- uid: System.Windows.FrameworkContentElement.GetBindingExpression(System.Windows.DependencyProperty)\n  parent: System.Windows.FrameworkContentElement\n  isExternal: false\n  name: GetBindingExpression(DependencyProperty)\n  nameWithType: FrameworkContentElement.GetBindingExpression(DependencyProperty)\n  fullName: FrameworkContentElement.GetBindingExpression(DependencyProperty)\n- uid: System.Windows.Data.BindingExpression\n  parent: System.Windows.Data\n  isExternal: false\n  name: BindingExpression\n  nameWithType: BindingExpression\n  fullName: System.Windows.Data.BindingExpression\n- uid: System.Windows.FrameworkContentElement.GetUIParentCore\n  parent: System.Windows.FrameworkContentElement\n  isExternal: false\n  name: GetUIParentCore()\n  nameWithType: FrameworkContentElement.GetUIParentCore()\n  fullName: FrameworkContentElement.GetUIParentCore()\n- uid: System.Windows.DependencyObject\n  parent: System.Windows\n  isExternal: false\n  name: DependencyObject\n  nameWithType: DependencyObject\n  fullName: System.Windows.DependencyObject\n- uid: System.Windows.FrameworkContentElement.Initialized\n  parent: System.Windows.FrameworkContentElement\n  isExternal: false\n  name: Initialized\n  nameWithType: FrameworkContentElement.Initialized\n  fullName: FrameworkContentElement.Initialized\n- uid: System.EventHandler\n  parent: System\n  isExternal: false\n  name: EventHandler\n  nameWithType: EventHandler\n  fullName: System.EventHandler\n- uid: System.Windows.FrameworkContentElement.InputScope\n  parent: System.Windows.FrameworkContentElement\n  isExternal: false\n  name: InputScope\n  nameWithType: FrameworkContentElement.InputScope\n  fullName: FrameworkContentElement.InputScope\n- uid: System.Windows.Input.InputScope\n  parent: System.Windows.Input\n  isExternal: false\n  name: InputScope\n  nameWithType: InputScope\n  fullName: System.Windows.Input.InputScope\n- uid: System.Windows.FrameworkContentElement.InputScopeProperty\n  parent: System.Windows.FrameworkContentElement\n  isExternal: false\n  name: InputScopeProperty\n  nameWithType: FrameworkContentElement.InputScopeProperty\n  fullName: FrameworkContentElement.InputScopeProperty\n- uid: System.Windows.FrameworkContentElement.IsInitialized\n  parent: System.Windows.FrameworkContentElement\n  isExternal: false\n  name: IsInitialized\n  nameWithType: FrameworkContentElement.IsInitialized\n  fullName: FrameworkContentElement.IsInitialized\n- uid: System.Windows.FrameworkContentElement.IsLoaded\n  parent: System.Windows.FrameworkContentElement\n  isExternal: false\n  name: IsLoaded\n  nameWithType: FrameworkContentElement.IsLoaded\n  fullName: FrameworkContentElement.IsLoaded\n- uid: System.Windows.FrameworkContentElement.Language\n  parent: System.Windows.FrameworkContentElement\n  isExternal: false\n  name: Language\n  nameWithType: FrameworkContentElement.Language\n  fullName: FrameworkContentElement.Language\n- uid: System.Windows.Markup.XmlLanguage\n  parent: System.Windows.Markup\n  isExternal: false\n  name: XmlLanguage\n  nameWithType: XmlLanguage\n  fullName: System.Windows.Markup.XmlLanguage\n- uid: System.Windows.FrameworkContentElement.LanguageProperty\n  parent: System.Windows.FrameworkContentElement\n  isExternal: false\n  name: LanguageProperty\n  nameWithType: FrameworkContentElement.LanguageProperty\n  fullName: FrameworkContentElement.LanguageProperty\n- uid: System.Windows.FrameworkContentElement.Loaded\n  parent: System.Windows.FrameworkContentElement\n  isExternal: false\n  name: Loaded\n  nameWithType: FrameworkContentElement.Loaded\n  fullName: FrameworkContentElement.Loaded\n- uid: System.Windows.RoutedEventHandler\n  parent: System.Windows\n  isExternal: false\n  name: RoutedEventHandler\n  nameWithType: RoutedEventHandler\n  fullName: System.Windows.RoutedEventHandler\n- uid: System.Windows.FrameworkContentElement.LoadedEvent\n  parent: System.Windows.FrameworkContentElement\n  isExternal: false\n  name: LoadedEvent\n  nameWithType: FrameworkContentElement.LoadedEvent\n  fullName: FrameworkContentElement.LoadedEvent\n- uid: System.Windows.FrameworkContentElement.LogicalChildren\n  parent: System.Windows.FrameworkContentElement\n  isExternal: false\n  name: LogicalChildren\n  nameWithType: FrameworkContentElement.LogicalChildren\n  fullName: FrameworkContentElement.LogicalChildren\n- uid: System.Collections.IEnumerator\n  parent: System.Collections\n  isExternal: false\n  name: IEnumerator\n  nameWithType: IEnumerator\n  fullName: System.Collections.IEnumerator\n- uid: System.Windows.FrameworkContentElement.MoveFocus(System.Windows.Input.TraversalRequest)\n  parent: System.Windows.FrameworkContentElement\n  isExternal: false\n  name: MoveFocus(TraversalRequest)\n  nameWithType: FrameworkContentElement.MoveFocus(TraversalRequest)\n  fullName: FrameworkContentElement.MoveFocus(TraversalRequest)\n- uid: System.Windows.Input.TraversalRequest\n  parent: System.Windows.Input\n  isExternal: false\n  name: TraversalRequest\n  nameWithType: TraversalRequest\n  fullName: System.Windows.Input.TraversalRequest\n- uid: System.Windows.FrameworkContentElement.Name\n  parent: System.Windows.FrameworkContentElement\n  isExternal: false\n  name: Name\n  nameWithType: FrameworkContentElement.Name\n  fullName: FrameworkContentElement.Name\n- uid: System.Windows.FrameworkContentElement.NameProperty\n  parent: System.Windows.FrameworkContentElement\n  isExternal: false\n  name: NameProperty\n  nameWithType: FrameworkContentElement.NameProperty\n  fullName: FrameworkContentElement.NameProperty\n- uid: System.Windows.FrameworkContentElement.OnContextMenuClosing(System.Windows.Controls.ContextMenuEventArgs)\n  parent: System.Windows.FrameworkContentElement\n  isExternal: false\n  name: OnContextMenuClosing(ContextMenuEventArgs)\n  nameWithType: FrameworkContentElement.OnContextMenuClosing(ContextMenuEventArgs)\n  fullName: FrameworkContentElement.OnContextMenuClosing(ContextMenuEventArgs)\n- uid: System.Windows.Controls.ContextMenuEventArgs\n  parent: System.Windows.Controls\n  isExternal: false\n  name: ContextMenuEventArgs\n  nameWithType: ContextMenuEventArgs\n  fullName: System.Windows.Controls.ContextMenuEventArgs\n- uid: System.Windows.FrameworkContentElement.OnContextMenuOpening(System.Windows.Controls.ContextMenuEventArgs)\n  parent: System.Windows.FrameworkContentElement\n  isExternal: false\n  name: OnContextMenuOpening(ContextMenuEventArgs)\n  nameWithType: FrameworkContentElement.OnContextMenuOpening(ContextMenuEventArgs)\n  fullName: FrameworkContentElement.OnContextMenuOpening(ContextMenuEventArgs)\n- uid: System.Windows.FrameworkContentElement.OnGotFocus(System.Windows.RoutedEventArgs)\n  parent: System.Windows.FrameworkContentElement\n  isExternal: false\n  name: OnGotFocus(RoutedEventArgs)\n  nameWithType: FrameworkContentElement.OnGotFocus(RoutedEventArgs)\n  fullName: FrameworkContentElement.OnGotFocus(RoutedEventArgs)\n- uid: System.Windows.RoutedEventArgs\n  parent: System.Windows\n  isExternal: false\n  name: RoutedEventArgs\n  nameWithType: RoutedEventArgs\n  fullName: System.Windows.RoutedEventArgs\n- uid: System.Windows.FrameworkContentElement.OnInitialized(System.EventArgs)\n  parent: System.Windows.FrameworkContentElement\n  isExternal: false\n  name: OnInitialized(EventArgs)\n  nameWithType: FrameworkContentElement.OnInitialized(EventArgs)\n  fullName: FrameworkContentElement.OnInitialized(EventArgs)\n- uid: System.EventArgs\n  parent: System\n  isExternal: false\n  name: EventArgs\n  nameWithType: EventArgs\n  fullName: System.EventArgs\n- uid: System.Windows.FrameworkContentElement.OnPropertyChanged(System.Windows.DependencyPropertyChangedEventArgs)\n  parent: System.Windows.FrameworkContentElement\n  isExternal: false\n  name: OnPropertyChanged(DependencyPropertyChangedEventArgs)\n  nameWithType: FrameworkContentElement.OnPropertyChanged(DependencyPropertyChangedEventArgs)\n  fullName: FrameworkContentElement.OnPropertyChanged(DependencyPropertyChangedEventArgs)\n- uid: System.Windows.DependencyPropertyChangedEventArgs\n  parent: System.Windows\n  isExternal: false\n  name: DependencyPropertyChangedEventArgs\n  nameWithType: DependencyPropertyChangedEventArgs\n  fullName: System.Windows.DependencyPropertyChangedEventArgs\n- uid: System.Windows.FrameworkContentElement.OnStyleChanged(System.Windows.Style,System.Windows.Style)\n  parent: System.Windows.FrameworkContentElement\n  isExternal: false\n  name: OnStyleChanged(Style, Style)\n  nameWithType: FrameworkContentElement.OnStyleChanged(Style, Style)\n  fullName: FrameworkContentElement.OnStyleChanged(Style, Style)\n- uid: System.Windows.FrameworkContentElement.OnToolTipClosing(System.Windows.Controls.ToolTipEventArgs)\n  parent: System.Windows.FrameworkContentElement\n  isExternal: false\n  name: OnToolTipClosing(ToolTipEventArgs)\n  nameWithType: FrameworkContentElement.OnToolTipClosing(ToolTipEventArgs)\n  fullName: FrameworkContentElement.OnToolTipClosing(ToolTipEventArgs)\n- uid: System.Windows.Controls.ToolTipEventArgs\n  parent: System.Windows.Controls\n  isExternal: false\n  name: ToolTipEventArgs\n  nameWithType: ToolTipEventArgs\n  fullName: System.Windows.Controls.ToolTipEventArgs\n- uid: System.Windows.FrameworkContentElement.OnToolTipOpening(System.Windows.Controls.ToolTipEventArgs)\n  parent: System.Windows.FrameworkContentElement\n  isExternal: false\n  name: OnToolTipOpening(ToolTipEventArgs)\n  nameWithType: FrameworkContentElement.OnToolTipOpening(ToolTipEventArgs)\n  fullName: FrameworkContentElement.OnToolTipOpening(ToolTipEventArgs)\n- uid: System.Windows.FrameworkContentElement.OverridesDefaultStyle\n  parent: System.Windows.FrameworkContentElement\n  isExternal: false\n  name: OverridesDefaultStyle\n  nameWithType: FrameworkContentElement.OverridesDefaultStyle\n  fullName: FrameworkContentElement.OverridesDefaultStyle\n- uid: System.Windows.FrameworkContentElement.OverridesDefaultStyleProperty\n  parent: System.Windows.FrameworkContentElement\n  isExternal: false\n  name: OverridesDefaultStyleProperty\n  nameWithType: FrameworkContentElement.OverridesDefaultStyleProperty\n  fullName: FrameworkContentElement.OverridesDefaultStyleProperty\n- uid: System.Windows.FrameworkContentElement.Parent\n  parent: System.Windows.FrameworkContentElement\n  isExternal: false\n  name: Parent\n  nameWithType: FrameworkContentElement.Parent\n  fullName: FrameworkContentElement.Parent\n- uid: System.Windows.FrameworkContentElement.PredictFocus(System.Windows.Input.FocusNavigationDirection)\n  parent: System.Windows.FrameworkContentElement\n  isExternal: false\n  name: PredictFocus(FocusNavigationDirection)\n  nameWithType: FrameworkContentElement.PredictFocus(FocusNavigationDirection)\n  fullName: FrameworkContentElement.PredictFocus(FocusNavigationDirection)\n- uid: System.Windows.Input.FocusNavigationDirection\n  parent: System.Windows.Input\n  isExternal: false\n  name: FocusNavigationDirection\n  nameWithType: FocusNavigationDirection\n  fullName: System.Windows.Input.FocusNavigationDirection\n- uid: System.Windows.FrameworkContentElement.RegisterName(System.String,System.Object)\n  parent: System.Windows.FrameworkContentElement\n  isExternal: false\n  name: RegisterName(String, Object)\n  nameWithType: FrameworkContentElement.RegisterName(String, Object)\n  fullName: FrameworkContentElement.RegisterName(String, Object)\n- uid: System.Windows.FrameworkContentElement.RemoveLogicalChild(System.Object)\n  parent: System.Windows.FrameworkContentElement\n  isExternal: false\n  name: RemoveLogicalChild(Object)\n  nameWithType: FrameworkContentElement.RemoveLogicalChild(Object)\n  fullName: FrameworkContentElement.RemoveLogicalChild(Object)\n- uid: System.Windows.FrameworkContentElement.Resources\n  parent: System.Windows.FrameworkContentElement\n  isExternal: false\n  name: Resources\n  nameWithType: FrameworkContentElement.Resources\n  fullName: FrameworkContentElement.Resources\n- uid: System.Windows.ResourceDictionary\n  parent: System.Windows\n  isExternal: false\n  name: ResourceDictionary\n  nameWithType: ResourceDictionary\n  fullName: System.Windows.ResourceDictionary\n- uid: System.Windows.FrameworkContentElement.SetBinding(System.Windows.DependencyProperty,System.String)\n  parent: System.Windows.FrameworkContentElement\n  isExternal: false\n  name: SetBinding(DependencyProperty, String)\n  nameWithType: FrameworkContentElement.SetBinding(DependencyProperty, String)\n  fullName: FrameworkContentElement.SetBinding(DependencyProperty, String)\n- uid: System.Windows.FrameworkContentElement.SetBinding(System.Windows.DependencyProperty,System.Windows.Data.BindingBase)\n  parent: System.Windows.FrameworkContentElement\n  isExternal: false\n  name: SetBinding(DependencyProperty, BindingBase)\n  nameWithType: FrameworkContentElement.SetBinding(DependencyProperty, BindingBase)\n  fullName: FrameworkContentElement.SetBinding(DependencyProperty, BindingBase)\n- uid: System.Windows.Data.BindingExpressionBase\n  parent: System.Windows.Data\n  isExternal: false\n  name: BindingExpressionBase\n  nameWithType: BindingExpressionBase\n  fullName: System.Windows.Data.BindingExpressionBase\n- uid: System.Windows.Data.BindingBase\n  parent: System.Windows.Data\n  isExternal: false\n  name: BindingBase\n  nameWithType: BindingBase\n  fullName: System.Windows.Data.BindingBase\n- uid: System.Windows.FrameworkContentElement.SetResourceReference(System.Windows.DependencyProperty,System.Object)\n  parent: System.Windows.FrameworkContentElement\n  isExternal: false\n  name: SetResourceReference(DependencyProperty, Object)\n  nameWithType: FrameworkContentElement.SetResourceReference(DependencyProperty, Object)\n  fullName: FrameworkContentElement.SetResourceReference(DependencyProperty, Object)\n- uid: System.Windows.FrameworkContentElement.ShouldSerializeResources\n  parent: System.Windows.FrameworkContentElement\n  isExternal: false\n  name: ShouldSerializeResources()\n  nameWithType: FrameworkContentElement.ShouldSerializeResources()\n  fullName: FrameworkContentElement.ShouldSerializeResources()\n- uid: System.Windows.FrameworkContentElement.ShouldSerializeStyle\n  parent: System.Windows.FrameworkContentElement\n  isExternal: false\n  name: ShouldSerializeStyle()\n  nameWithType: FrameworkContentElement.ShouldSerializeStyle()\n  fullName: FrameworkContentElement.ShouldSerializeStyle()\n- uid: System.Windows.FrameworkContentElement.SourceUpdated\n  parent: System.Windows.FrameworkContentElement\n  isExternal: false\n  name: SourceUpdated\n  nameWithType: FrameworkContentElement.SourceUpdated\n  fullName: FrameworkContentElement.SourceUpdated\n- uid: System.EventHandler`1\n  name: EventHandler<TEventArgs>\n  nameWithType: EventHandler<TEventArgs>\n  fullName: System.EventHandler<TEventArgs>\n- uid: System.Windows.Data.DataTransferEventArgs\n  name: DataTransferEventArgs\n  nameWithType: DataTransferEventArgs\n  fullName: System.Windows.Data.DataTransferEventArgs\n- uid: System.EventHandler{System.Windows.Data.DataTransferEventArgs}\n  parent: System\n  isExternal: false\n  name: EventHandler<DataTransferEventArgs>\n  nameWithType: EventHandler<DataTransferEventArgs>\n  fullName: System.EventHandler<System.Windows.Data.DataTransferEventArgs>\n  spec.csharp:\n  - uid: System.EventHandler`1\n    name: EventHandler\n    nameWithType: EventHandler\n    fullName: System.EventHandler\n  - name: <\n    nameWithType: <\n    fullName: <\n  - uid: System.Windows.Data.DataTransferEventArgs\n    name: DataTransferEventArgs\n    nameWithType: DataTransferEventArgs\n    fullName: System.Windows.Data.DataTransferEventArgs\n  - name: '>'\n    nameWithType: '>'\n    fullName: '>'\n- uid: System.Windows.FrameworkContentElement.Style\n  parent: System.Windows.FrameworkContentElement\n  isExternal: false\n  name: Style\n  nameWithType: FrameworkContentElement.Style\n  fullName: FrameworkContentElement.Style\n- uid: System.Windows.FrameworkContentElement.StyleProperty\n  parent: System.Windows.FrameworkContentElement\n  isExternal: false\n  name: StyleProperty\n  nameWithType: FrameworkContentElement.StyleProperty\n  fullName: FrameworkContentElement.StyleProperty\n- uid: System.Windows.FrameworkContentElement.Tag\n  parent: System.Windows.FrameworkContentElement\n  isExternal: false\n  name: Tag\n  nameWithType: FrameworkContentElement.Tag\n  fullName: FrameworkContentElement.Tag\n- uid: System.Windows.FrameworkContentElement.TagProperty\n  parent: System.Windows.FrameworkContentElement\n  isExternal: false\n  name: TagProperty\n  nameWithType: FrameworkContentElement.TagProperty\n  fullName: FrameworkContentElement.TagProperty\n- uid: System.Windows.FrameworkContentElement.TargetUpdated\n  parent: System.Windows.FrameworkContentElement\n  isExternal: false\n  name: TargetUpdated\n  nameWithType: FrameworkContentElement.TargetUpdated\n  fullName: FrameworkContentElement.TargetUpdated\n- uid: System.Windows.FrameworkContentElement.TemplatedParent\n  parent: System.Windows.FrameworkContentElement\n  isExternal: false\n  name: TemplatedParent\n  nameWithType: FrameworkContentElement.TemplatedParent\n  fullName: FrameworkContentElement.TemplatedParent\n- uid: System.Windows.FrameworkContentElement.ToolTip\n  parent: System.Windows.FrameworkContentElement\n  isExternal: false\n  name: ToolTip\n  nameWithType: FrameworkContentElement.ToolTip\n  fullName: FrameworkContentElement.ToolTip\n- uid: System.Windows.FrameworkContentElement.ToolTipClosing\n  parent: System.Windows.FrameworkContentElement\n  isExternal: false\n  name: ToolTipClosing\n  nameWithType: FrameworkContentElement.ToolTipClosing\n  fullName: FrameworkContentElement.ToolTipClosing\n- uid: System.Windows.Controls.ToolTipEventHandler\n  parent: System.Windows.Controls\n  isExternal: false\n  name: ToolTipEventHandler\n  nameWithType: ToolTipEventHandler\n  fullName: System.Windows.Controls.ToolTipEventHandler\n- uid: System.Windows.FrameworkContentElement.ToolTipClosingEvent\n  parent: System.Windows.FrameworkContentElement\n  isExternal: false\n  name: ToolTipClosingEvent\n  nameWithType: FrameworkContentElement.ToolTipClosingEvent\n  fullName: FrameworkContentElement.ToolTipClosingEvent\n- uid: System.Windows.FrameworkContentElement.ToolTipOpening\n  parent: System.Windows.FrameworkContentElement\n  isExternal: false\n  name: ToolTipOpening\n  nameWithType: FrameworkContentElement.ToolTipOpening\n  fullName: FrameworkContentElement.ToolTipOpening\n- uid: System.Windows.FrameworkContentElement.ToolTipOpeningEvent\n  parent: System.Windows.FrameworkContentElement\n  isExternal: false\n  name: ToolTipOpeningEvent\n  nameWithType: FrameworkContentElement.ToolTipOpeningEvent\n  fullName: FrameworkContentElement.ToolTipOpeningEvent\n- uid: System.Windows.FrameworkContentElement.ToolTipProperty\n  parent: System.Windows.FrameworkContentElement\n  isExternal: false\n  name: ToolTipProperty\n  nameWithType: FrameworkContentElement.ToolTipProperty\n  fullName: FrameworkContentElement.ToolTipProperty\n- uid: System.Windows.FrameworkContentElement.TryFindResource(System.Object)\n  parent: System.Windows.FrameworkContentElement\n  isExternal: false\n  name: TryFindResource(Object)\n  nameWithType: FrameworkContentElement.TryFindResource(Object)\n  fullName: FrameworkContentElement.TryFindResource(Object)\n- uid: System.Windows.FrameworkContentElement.Unloaded\n  parent: System.Windows.FrameworkContentElement\n  isExternal: false\n  name: Unloaded\n  nameWithType: FrameworkContentElement.Unloaded\n  fullName: FrameworkContentElement.Unloaded\n- uid: System.Windows.FrameworkContentElement.UnloadedEvent\n  parent: System.Windows.FrameworkContentElement\n  isExternal: false\n  name: UnloadedEvent\n  nameWithType: FrameworkContentElement.UnloadedEvent\n  fullName: FrameworkContentElement.UnloadedEvent\n- uid: System.Windows.FrameworkContentElement.UnregisterName(System.String)\n  parent: System.Windows.FrameworkContentElement\n  isExternal: false\n  name: UnregisterName(String)\n  nameWithType: FrameworkContentElement.UnregisterName(String)\n  fullName: FrameworkContentElement.UnregisterName(String)\n- uid: System.Windows.FrameworkContentElement.UpdateDefaultStyle\n  parent: System.Windows.FrameworkContentElement\n  isExternal: false\n  name: UpdateDefaultStyle()\n  nameWithType: FrameworkContentElement.UpdateDefaultStyle()\n  fullName: FrameworkContentElement.UpdateDefaultStyle()\n- uid: System.Windows.FrameworkContentElement.System#Windows#Markup#IQueryAmbient#IsAmbientPropertyAvailable(System.String)\n  parent: System.Windows.FrameworkContentElement\n  isExternal: false\n  name: IQueryAmbient.IsAmbientPropertyAvailable(String)\n  nameWithType: FrameworkContentElement.IQueryAmbient.IsAmbientPropertyAvailable(String)\n  fullName: FrameworkContentElement.IQueryAmbient.IsAmbientPropertyAvailable(String)\n- uid: System.Windows.FrameworkContentElement.#ctor*\n  parent: System.Windows.FrameworkContentElement\n  isExternal: false\n  name: FrameworkContentElement\n  nameWithType: FrameworkContentElement.FrameworkContentElement\n  fullName: FrameworkContentElement.FrameworkContentElement\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Windows/FrameworkContentElement.xml\n- uid: System.Windows.FrameworkContentElement.AddLogicalChild*\n  parent: System.Windows.FrameworkContentElement\n  isExternal: false\n  name: AddLogicalChild\n  nameWithType: FrameworkContentElement.AddLogicalChild\n  fullName: FrameworkContentElement.AddLogicalChild\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Windows/FrameworkContentElement.xml\n- uid: System.Windows.FrameworkContentElement.BeginInit*\n  parent: System.Windows.FrameworkContentElement\n  isExternal: false\n  name: BeginInit\n  nameWithType: FrameworkContentElement.BeginInit\n  fullName: FrameworkContentElement.BeginInit\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Windows/FrameworkContentElement.xml\n- uid: System.Windows.FrameworkContentElement.BeginStoryboard*\n  parent: System.Windows.FrameworkContentElement\n  isExternal: false\n  name: BeginStoryboard\n  nameWithType: FrameworkContentElement.BeginStoryboard\n  fullName: FrameworkContentElement.BeginStoryboard\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Windows/FrameworkContentElement.xml\n- uid: System.Windows.FrameworkContentElement.BindingGroup*\n  parent: System.Windows.FrameworkContentElement\n  isExternal: false\n  name: BindingGroup\n  nameWithType: FrameworkContentElement.BindingGroup\n  fullName: FrameworkContentElement.BindingGroup\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Windows/FrameworkContentElement.xml\n- uid: System.Windows.FrameworkContentElement.BringIntoView*\n  parent: System.Windows.FrameworkContentElement\n  isExternal: false\n  name: BringIntoView\n  nameWithType: FrameworkContentElement.BringIntoView\n  fullName: FrameworkContentElement.BringIntoView\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Windows/FrameworkContentElement.xml\n- uid: System.Windows.FrameworkContentElement.ContextMenu*\n  parent: System.Windows.FrameworkContentElement\n  isExternal: false\n  name: ContextMenu\n  nameWithType: FrameworkContentElement.ContextMenu\n  fullName: FrameworkContentElement.ContextMenu\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Windows/FrameworkContentElement.xml\n- uid: System.Windows.FrameworkContentElement.Cursor*\n  parent: System.Windows.FrameworkContentElement\n  isExternal: false\n  name: Cursor\n  nameWithType: FrameworkContentElement.Cursor\n  fullName: FrameworkContentElement.Cursor\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Windows/FrameworkContentElement.xml\n- uid: System.Windows.FrameworkContentElement.DataContext*\n  parent: System.Windows.FrameworkContentElement\n  isExternal: false\n  name: DataContext\n  nameWithType: FrameworkContentElement.DataContext\n  fullName: FrameworkContentElement.DataContext\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Windows/FrameworkContentElement.xml\n- uid: System.Windows.FrameworkContentElement.DefaultStyleKey*\n  parent: System.Windows.FrameworkContentElement\n  isExternal: false\n  name: DefaultStyleKey\n  nameWithType: FrameworkContentElement.DefaultStyleKey\n  fullName: FrameworkContentElement.DefaultStyleKey\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Windows/FrameworkContentElement.xml\n- uid: System.Windows.FrameworkContentElement.EndInit*\n  parent: System.Windows.FrameworkContentElement\n  isExternal: false\n  name: EndInit\n  nameWithType: FrameworkContentElement.EndInit\n  fullName: FrameworkContentElement.EndInit\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Windows/FrameworkContentElement.xml\n- uid: System.Windows.FrameworkContentElement.FindName*\n  parent: System.Windows.FrameworkContentElement\n  isExternal: false\n  name: FindName\n  nameWithType: FrameworkContentElement.FindName\n  fullName: FrameworkContentElement.FindName\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Windows/FrameworkContentElement.xml\n- uid: System.Windows.FrameworkContentElement.FindResource*\n  parent: System.Windows.FrameworkContentElement\n  isExternal: false\n  name: FindResource\n  nameWithType: FrameworkContentElement.FindResource\n  fullName: FrameworkContentElement.FindResource\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Windows/FrameworkContentElement.xml\n- uid: System.Windows.FrameworkContentElement.FocusVisualStyle*\n  parent: System.Windows.FrameworkContentElement\n  isExternal: false\n  name: FocusVisualStyle\n  nameWithType: FrameworkContentElement.FocusVisualStyle\n  fullName: FrameworkContentElement.FocusVisualStyle\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Windows/FrameworkContentElement.xml\n- uid: System.Windows.FrameworkContentElement.ForceCursor*\n  parent: System.Windows.FrameworkContentElement\n  isExternal: false\n  name: ForceCursor\n  nameWithType: FrameworkContentElement.ForceCursor\n  fullName: FrameworkContentElement.ForceCursor\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Windows/FrameworkContentElement.xml\n- uid: System.Windows.FrameworkContentElement.GetBindingExpression*\n  parent: System.Windows.FrameworkContentElement\n  isExternal: false\n  name: GetBindingExpression\n  nameWithType: FrameworkContentElement.GetBindingExpression\n  fullName: FrameworkContentElement.GetBindingExpression\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Windows/FrameworkContentElement.xml\n- uid: System.Windows.FrameworkContentElement.GetUIParentCore*\n  parent: System.Windows.FrameworkContentElement\n  isExternal: false\n  name: GetUIParentCore\n  nameWithType: FrameworkContentElement.GetUIParentCore\n  fullName: FrameworkContentElement.GetUIParentCore\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Windows/FrameworkContentElement.xml\n- uid: System.Windows.FrameworkContentElement.InputScope*\n  parent: System.Windows.FrameworkContentElement\n  isExternal: false\n  name: InputScope\n  nameWithType: FrameworkContentElement.InputScope\n  fullName: FrameworkContentElement.InputScope\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Windows/FrameworkContentElement.xml\n- uid: System.Windows.FrameworkContentElement.IsInitialized*\n  parent: System.Windows.FrameworkContentElement\n  isExternal: false\n  name: IsInitialized\n  nameWithType: FrameworkContentElement.IsInitialized\n  fullName: FrameworkContentElement.IsInitialized\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Windows/FrameworkContentElement.xml\n- uid: System.Windows.FrameworkContentElement.IsLoaded*\n  parent: System.Windows.FrameworkContentElement\n  isExternal: false\n  name: IsLoaded\n  nameWithType: FrameworkContentElement.IsLoaded\n  fullName: FrameworkContentElement.IsLoaded\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Windows/FrameworkContentElement.xml\n- uid: System.Windows.FrameworkContentElement.Language*\n  parent: System.Windows.FrameworkContentElement\n  isExternal: false\n  name: Language\n  nameWithType: FrameworkContentElement.Language\n  fullName: FrameworkContentElement.Language\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Windows/FrameworkContentElement.xml\n- uid: System.Windows.FrameworkContentElement.LogicalChildren*\n  parent: System.Windows.FrameworkContentElement\n  isExternal: false\n  name: LogicalChildren\n  nameWithType: FrameworkContentElement.LogicalChildren\n  fullName: FrameworkContentElement.LogicalChildren\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Windows/FrameworkContentElement.xml\n- uid: System.Windows.FrameworkContentElement.MoveFocus*\n  parent: System.Windows.FrameworkContentElement\n  isExternal: false\n  name: MoveFocus\n  nameWithType: FrameworkContentElement.MoveFocus\n  fullName: FrameworkContentElement.MoveFocus\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Windows/FrameworkContentElement.xml\n- uid: System.Windows.FrameworkContentElement.Name*\n  parent: System.Windows.FrameworkContentElement\n  isExternal: false\n  name: Name\n  nameWithType: FrameworkContentElement.Name\n  fullName: FrameworkContentElement.Name\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Windows/FrameworkContentElement.xml\n- uid: System.Windows.FrameworkContentElement.OnContextMenuClosing*\n  parent: System.Windows.FrameworkContentElement\n  isExternal: false\n  name: OnContextMenuClosing\n  nameWithType: FrameworkContentElement.OnContextMenuClosing\n  fullName: FrameworkContentElement.OnContextMenuClosing\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Windows/FrameworkContentElement.xml\n- uid: System.Windows.FrameworkContentElement.OnContextMenuOpening*\n  parent: System.Windows.FrameworkContentElement\n  isExternal: false\n  name: OnContextMenuOpening\n  nameWithType: FrameworkContentElement.OnContextMenuOpening\n  fullName: FrameworkContentElement.OnContextMenuOpening\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Windows/FrameworkContentElement.xml\n- uid: System.Windows.FrameworkContentElement.OnGotFocus*\n  parent: System.Windows.FrameworkContentElement\n  isExternal: false\n  name: OnGotFocus\n  nameWithType: FrameworkContentElement.OnGotFocus\n  fullName: FrameworkContentElement.OnGotFocus\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Windows/FrameworkContentElement.xml\n- uid: System.Windows.FrameworkContentElement.OnInitialized*\n  parent: System.Windows.FrameworkContentElement\n  isExternal: false\n  name: OnInitialized\n  nameWithType: FrameworkContentElement.OnInitialized\n  fullName: FrameworkContentElement.OnInitialized\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Windows/FrameworkContentElement.xml\n- uid: System.Windows.FrameworkContentElement.OnPropertyChanged*\n  parent: System.Windows.FrameworkContentElement\n  isExternal: false\n  name: OnPropertyChanged\n  nameWithType: FrameworkContentElement.OnPropertyChanged\n  fullName: FrameworkContentElement.OnPropertyChanged\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Windows/FrameworkContentElement.xml\n- uid: System.Windows.FrameworkContentElement.OnStyleChanged*\n  parent: System.Windows.FrameworkContentElement\n  isExternal: false\n  name: OnStyleChanged\n  nameWithType: FrameworkContentElement.OnStyleChanged\n  fullName: FrameworkContentElement.OnStyleChanged\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Windows/FrameworkContentElement.xml\n- uid: System.Windows.FrameworkContentElement.OnToolTipClosing*\n  parent: System.Windows.FrameworkContentElement\n  isExternal: false\n  name: OnToolTipClosing\n  nameWithType: FrameworkContentElement.OnToolTipClosing\n  fullName: FrameworkContentElement.OnToolTipClosing\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Windows/FrameworkContentElement.xml\n- uid: System.Windows.FrameworkContentElement.OnToolTipOpening*\n  parent: System.Windows.FrameworkContentElement\n  isExternal: false\n  name: OnToolTipOpening\n  nameWithType: FrameworkContentElement.OnToolTipOpening\n  fullName: FrameworkContentElement.OnToolTipOpening\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Windows/FrameworkContentElement.xml\n- uid: System.Windows.FrameworkContentElement.OverridesDefaultStyle*\n  parent: System.Windows.FrameworkContentElement\n  isExternal: false\n  name: OverridesDefaultStyle\n  nameWithType: FrameworkContentElement.OverridesDefaultStyle\n  fullName: FrameworkContentElement.OverridesDefaultStyle\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Windows/FrameworkContentElement.xml\n- uid: System.Windows.FrameworkContentElement.Parent*\n  parent: System.Windows.FrameworkContentElement\n  isExternal: false\n  name: Parent\n  nameWithType: FrameworkContentElement.Parent\n  fullName: FrameworkContentElement.Parent\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Windows/FrameworkContentElement.xml\n- uid: System.Windows.FrameworkContentElement.PredictFocus*\n  parent: System.Windows.FrameworkContentElement\n  isExternal: false\n  name: PredictFocus\n  nameWithType: FrameworkContentElement.PredictFocus\n  fullName: FrameworkContentElement.PredictFocus\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Windows/FrameworkContentElement.xml\n- uid: System.Windows.FrameworkContentElement.RegisterName*\n  parent: System.Windows.FrameworkContentElement\n  isExternal: false\n  name: RegisterName\n  nameWithType: FrameworkContentElement.RegisterName\n  fullName: FrameworkContentElement.RegisterName\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Windows/FrameworkContentElement.xml\n- uid: System.Windows.FrameworkContentElement.RemoveLogicalChild*\n  parent: System.Windows.FrameworkContentElement\n  isExternal: false\n  name: RemoveLogicalChild\n  nameWithType: FrameworkContentElement.RemoveLogicalChild\n  fullName: FrameworkContentElement.RemoveLogicalChild\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Windows/FrameworkContentElement.xml\n- uid: System.Windows.FrameworkContentElement.Resources*\n  parent: System.Windows.FrameworkContentElement\n  isExternal: false\n  name: Resources\n  nameWithType: FrameworkContentElement.Resources\n  fullName: FrameworkContentElement.Resources\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Windows/FrameworkContentElement.xml\n- uid: System.Windows.FrameworkContentElement.SetBinding*\n  parent: System.Windows.FrameworkContentElement\n  isExternal: false\n  name: SetBinding\n  nameWithType: FrameworkContentElement.SetBinding\n  fullName: FrameworkContentElement.SetBinding\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Windows/FrameworkContentElement.xml\n- uid: System.Windows.FrameworkContentElement.SetResourceReference*\n  parent: System.Windows.FrameworkContentElement\n  isExternal: false\n  name: SetResourceReference\n  nameWithType: FrameworkContentElement.SetResourceReference\n  fullName: FrameworkContentElement.SetResourceReference\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Windows/FrameworkContentElement.xml\n- uid: System.Windows.FrameworkContentElement.ShouldSerializeResources*\n  parent: System.Windows.FrameworkContentElement\n  isExternal: false\n  name: ShouldSerializeResources\n  nameWithType: FrameworkContentElement.ShouldSerializeResources\n  fullName: FrameworkContentElement.ShouldSerializeResources\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Windows/FrameworkContentElement.xml\n- uid: System.Windows.FrameworkContentElement.ShouldSerializeStyle*\n  parent: System.Windows.FrameworkContentElement\n  isExternal: false\n  name: ShouldSerializeStyle\n  nameWithType: FrameworkContentElement.ShouldSerializeStyle\n  fullName: FrameworkContentElement.ShouldSerializeStyle\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Windows/FrameworkContentElement.xml\n- uid: System.Windows.FrameworkContentElement.Style*\n  parent: System.Windows.FrameworkContentElement\n  isExternal: false\n  name: Style\n  nameWithType: FrameworkContentElement.Style\n  fullName: FrameworkContentElement.Style\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Windows/FrameworkContentElement.xml\n- uid: System.Windows.FrameworkContentElement.Tag*\n  parent: System.Windows.FrameworkContentElement\n  isExternal: false\n  name: Tag\n  nameWithType: FrameworkContentElement.Tag\n  fullName: FrameworkContentElement.Tag\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Windows/FrameworkContentElement.xml\n- uid: System.Windows.FrameworkContentElement.TemplatedParent*\n  parent: System.Windows.FrameworkContentElement\n  isExternal: false\n  name: TemplatedParent\n  nameWithType: FrameworkContentElement.TemplatedParent\n  fullName: FrameworkContentElement.TemplatedParent\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Windows/FrameworkContentElement.xml\n- uid: System.Windows.FrameworkContentElement.ToolTip*\n  parent: System.Windows.FrameworkContentElement\n  isExternal: false\n  name: ToolTip\n  nameWithType: FrameworkContentElement.ToolTip\n  fullName: FrameworkContentElement.ToolTip\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Windows/FrameworkContentElement.xml\n- uid: System.Windows.FrameworkContentElement.TryFindResource*\n  parent: System.Windows.FrameworkContentElement\n  isExternal: false\n  name: TryFindResource\n  nameWithType: FrameworkContentElement.TryFindResource\n  fullName: FrameworkContentElement.TryFindResource\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Windows/FrameworkContentElement.xml\n- uid: System.Windows.FrameworkContentElement.UnregisterName*\n  parent: System.Windows.FrameworkContentElement\n  isExternal: false\n  name: UnregisterName\n  nameWithType: FrameworkContentElement.UnregisterName\n  fullName: FrameworkContentElement.UnregisterName\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Windows/FrameworkContentElement.xml\n- uid: System.Windows.FrameworkContentElement.UpdateDefaultStyle*\n  parent: System.Windows.FrameworkContentElement\n  isExternal: false\n  name: UpdateDefaultStyle\n  nameWithType: FrameworkContentElement.UpdateDefaultStyle\n  fullName: FrameworkContentElement.UpdateDefaultStyle\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Windows/FrameworkContentElement.xml\n- uid: System.Windows.FrameworkContentElement.System#Windows#Markup#IQueryAmbient#IsAmbientPropertyAvailable*\n  parent: System.Windows.FrameworkContentElement\n  isExternal: false\n  name: System.Windows.Markup.IQueryAmbient.IsAmbientPropertyAvailable\n  nameWithType: FrameworkContentElement.System.Windows.Markup.IQueryAmbient.IsAmbientPropertyAvailable\n  fullName: FrameworkContentElement.System.Windows.Markup.IQueryAmbient.IsAmbientPropertyAvailable\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Windows/FrameworkContentElement.xml\n- uid: System.Windows.DependencyObject.Equals(System.Object)\n  parent: System.Windows.DependencyObject\n  isExternal: false\n  name: Equals(Object)\n  nameWithType: DependencyObject.Equals(Object)\n  fullName: DependencyObject.Equals(Object)\n- uid: System.Object.Equals(System.Object,System.Object)\n  parent: System.Object\n  isExternal: false\n  name: Equals(Object, Object)\n  nameWithType: Object.Equals(Object, Object)\n  fullName: Object.Equals(Object, Object)\n- uid: System.Windows.DependencyObject.GetHashCode\n  parent: System.Windows.DependencyObject\n  isExternal: false\n  name: GetHashCode()\n  nameWithType: DependencyObject.GetHashCode()\n  fullName: DependencyObject.GetHashCode()\n- uid: System.Object.GetType\n  parent: System.Object\n  isExternal: false\n  name: GetType()\n  nameWithType: Object.GetType()\n  fullName: Object.GetType()\n- uid: System.Object.MemberwiseClone\n  parent: System.Object\n  isExternal: false\n  name: MemberwiseClone()\n  nameWithType: Object.MemberwiseClone()\n  fullName: Object.MemberwiseClone()\n- uid: System.Object.ReferenceEquals(System.Object,System.Object)\n  parent: System.Object\n  isExternal: false\n  name: ReferenceEquals(Object, Object)\n  nameWithType: Object.ReferenceEquals(Object, Object)\n  fullName: Object.ReferenceEquals(Object, Object)\n- uid: System.Object.ToString\n  parent: System.Object\n  isExternal: false\n  name: ToString()\n  nameWithType: Object.ToString()\n  fullName: Object.ToString()\n- uid: System.Windows.Threading.DispatcherObject.CheckAccess\n  parent: System.Windows.Threading.DispatcherObject\n  isExternal: false\n  name: CheckAccess()\n  nameWithType: DispatcherObject.CheckAccess()\n  fullName: DispatcherObject.CheckAccess()\n- uid: System.Windows.Threading.DispatcherObject.Dispatcher\n  parent: System.Windows.Threading.DispatcherObject\n  isExternal: false\n  name: Dispatcher\n  nameWithType: DispatcherObject.Dispatcher\n  fullName: DispatcherObject.Dispatcher\n- uid: System.Windows.Threading.DispatcherObject.VerifyAccess\n  parent: System.Windows.Threading.DispatcherObject\n  isExternal: false\n  name: VerifyAccess()\n  nameWithType: DispatcherObject.VerifyAccess()\n  fullName: DispatcherObject.VerifyAccess()\n- uid: System.Windows.DependencyObject.ClearValue(System.Windows.DependencyProperty)\n  parent: System.Windows.DependencyObject\n  isExternal: false\n  name: ClearValue(DependencyProperty)\n  nameWithType: DependencyObject.ClearValue(DependencyProperty)\n  fullName: DependencyObject.ClearValue(DependencyProperty)\n- uid: System.Windows.DependencyObject.ClearValue(System.Windows.DependencyPropertyKey)\n  parent: System.Windows.DependencyObject\n  isExternal: false\n  name: ClearValue(DependencyPropertyKey)\n  nameWithType: DependencyObject.ClearValue(DependencyPropertyKey)\n  fullName: DependencyObject.ClearValue(DependencyPropertyKey)\n- uid: System.Windows.DependencyObject.CoerceValue(System.Windows.DependencyProperty)\n  parent: System.Windows.DependencyObject\n  isExternal: false\n  name: CoerceValue(DependencyProperty)\n  nameWithType: DependencyObject.CoerceValue(DependencyProperty)\n  fullName: DependencyObject.CoerceValue(DependencyProperty)\n- uid: System.Windows.DependencyObject.DependencyObjectType\n  parent: System.Windows.DependencyObject\n  isExternal: false\n  name: DependencyObjectType\n  nameWithType: DependencyObject.DependencyObjectType\n  fullName: DependencyObject.DependencyObjectType\n- uid: System.Windows.DependencyObject.GetLocalValueEnumerator\n  parent: System.Windows.DependencyObject\n  isExternal: false\n  name: GetLocalValueEnumerator()\n  nameWithType: DependencyObject.GetLocalValueEnumerator()\n  fullName: DependencyObject.GetLocalValueEnumerator()\n- uid: System.Windows.DependencyObject.GetValue(System.Windows.DependencyProperty)\n  parent: System.Windows.DependencyObject\n  isExternal: false\n  name: GetValue(DependencyProperty)\n  nameWithType: DependencyObject.GetValue(DependencyProperty)\n  fullName: DependencyObject.GetValue(DependencyProperty)\n- uid: System.Windows.DependencyObject.InvalidateProperty(System.Windows.DependencyProperty)\n  parent: System.Windows.DependencyObject\n  isExternal: false\n  name: InvalidateProperty(DependencyProperty)\n  nameWithType: DependencyObject.InvalidateProperty(DependencyProperty)\n  fullName: DependencyObject.InvalidateProperty(DependencyProperty)\n- uid: System.Windows.DependencyObject.IsSealed\n  parent: System.Windows.DependencyObject\n  isExternal: false\n  name: IsSealed\n  nameWithType: DependencyObject.IsSealed\n  fullName: DependencyObject.IsSealed\n- uid: System.Windows.DependencyObject.ReadLocalValue(System.Windows.DependencyProperty)\n  parent: System.Windows.DependencyObject\n  isExternal: false\n  name: ReadLocalValue(DependencyProperty)\n  nameWithType: DependencyObject.ReadLocalValue(DependencyProperty)\n  fullName: DependencyObject.ReadLocalValue(DependencyProperty)\n- uid: System.Windows.DependencyObject.SetCurrentValue(System.Windows.DependencyProperty,System.Object)\n  parent: System.Windows.DependencyObject\n  isExternal: false\n  name: SetCurrentValue(DependencyProperty, Object)\n  nameWithType: DependencyObject.SetCurrentValue(DependencyProperty, Object)\n  fullName: DependencyObject.SetCurrentValue(DependencyProperty, Object)\n- uid: System.Windows.DependencyObject.SetValue(System.Windows.DependencyProperty,System.Object)\n  parent: System.Windows.DependencyObject\n  isExternal: false\n  name: SetValue(DependencyProperty, Object)\n  nameWithType: DependencyObject.SetValue(DependencyProperty, Object)\n  fullName: DependencyObject.SetValue(DependencyProperty, Object)\n- uid: System.Windows.DependencyObject.SetValue(System.Windows.DependencyPropertyKey,System.Object)\n  parent: System.Windows.DependencyObject\n  isExternal: false\n  name: SetValue(DependencyPropertyKey, Object)\n  nameWithType: DependencyObject.SetValue(DependencyPropertyKey, Object)\n  fullName: DependencyObject.SetValue(DependencyPropertyKey, Object)\n- uid: System.Windows.DependencyObject.ShouldSerializeProperty(System.Windows.DependencyProperty)\n  parent: System.Windows.DependencyObject\n  isExternal: false\n  name: ShouldSerializeProperty(DependencyProperty)\n  nameWithType: DependencyObject.ShouldSerializeProperty(DependencyProperty)\n  fullName: DependencyObject.ShouldSerializeProperty(DependencyProperty)\n- uid: System.Windows.ContentElement.AddHandler(System.Windows.RoutedEvent,System.Delegate)\n  parent: System.Windows.ContentElement\n  isExternal: false\n  name: AddHandler(RoutedEvent, Delegate)\n  nameWithType: ContentElement.AddHandler(RoutedEvent, Delegate)\n  fullName: ContentElement.AddHandler(RoutedEvent, Delegate)\n- uid: System.Windows.ContentElement.AddHandler(System.Windows.RoutedEvent,System.Delegate,System.Boolean)\n  parent: System.Windows.ContentElement\n  isExternal: false\n  name: AddHandler(RoutedEvent, Delegate, Boolean)\n  nameWithType: ContentElement.AddHandler(RoutedEvent, Delegate, Boolean)\n  fullName: ContentElement.AddHandler(RoutedEvent, Delegate, Boolean)\n- uid: System.Windows.ContentElement.AddToEventRoute(System.Windows.EventRoute,System.Windows.RoutedEventArgs)\n  parent: System.Windows.ContentElement\n  isExternal: false\n  name: AddToEventRoute(EventRoute, RoutedEventArgs)\n  nameWithType: ContentElement.AddToEventRoute(EventRoute, RoutedEventArgs)\n  fullName: ContentElement.AddToEventRoute(EventRoute, RoutedEventArgs)\n- uid: System.Windows.ContentElement.AllowDrop\n  parent: System.Windows.ContentElement\n  isExternal: false\n  name: AllowDrop\n  nameWithType: ContentElement.AllowDrop\n  fullName: ContentElement.AllowDrop\n- uid: System.Windows.ContentElement.AllowDropProperty\n  parent: System.Windows.ContentElement\n  isExternal: false\n  name: AllowDropProperty\n  nameWithType: ContentElement.AllowDropProperty\n  fullName: ContentElement.AllowDropProperty\n- uid: System.Windows.ContentElement.ApplyAnimationClock(System.Windows.DependencyProperty,System.Windows.Media.Animation.AnimationClock)\n  parent: System.Windows.ContentElement\n  isExternal: false\n  name: ApplyAnimationClock(DependencyProperty, AnimationClock)\n  nameWithType: ContentElement.ApplyAnimationClock(DependencyProperty, AnimationClock)\n  fullName: ContentElement.ApplyAnimationClock(DependencyProperty, AnimationClock)\n- uid: System.Windows.ContentElement.ApplyAnimationClock(System.Windows.DependencyProperty,System.Windows.Media.Animation.AnimationClock,System.Windows.Media.Animation.HandoffBehavior)\n  parent: System.Windows.ContentElement\n  isExternal: false\n  name: ApplyAnimationClock(DependencyProperty, AnimationClock, HandoffBehavior)\n  nameWithType: ContentElement.ApplyAnimationClock(DependencyProperty, AnimationClock, HandoffBehavior)\n  fullName: ContentElement.ApplyAnimationClock(DependencyProperty, AnimationClock, HandoffBehavior)\n- uid: System.Windows.ContentElement.AreAnyTouchesCaptured\n  parent: System.Windows.ContentElement\n  isExternal: false\n  name: AreAnyTouchesCaptured\n  nameWithType: ContentElement.AreAnyTouchesCaptured\n  fullName: ContentElement.AreAnyTouchesCaptured\n- uid: System.Windows.ContentElement.AreAnyTouchesCapturedProperty\n  parent: System.Windows.ContentElement\n  isExternal: false\n  name: AreAnyTouchesCapturedProperty\n  nameWithType: ContentElement.AreAnyTouchesCapturedProperty\n  fullName: ContentElement.AreAnyTouchesCapturedProperty\n- uid: System.Windows.ContentElement.AreAnyTouchesCapturedWithin\n  parent: System.Windows.ContentElement\n  isExternal: false\n  name: AreAnyTouchesCapturedWithin\n  nameWithType: ContentElement.AreAnyTouchesCapturedWithin\n  fullName: ContentElement.AreAnyTouchesCapturedWithin\n- uid: System.Windows.ContentElement.AreAnyTouchesCapturedWithinProperty\n  parent: System.Windows.ContentElement\n  isExternal: false\n  name: AreAnyTouchesCapturedWithinProperty\n  nameWithType: ContentElement.AreAnyTouchesCapturedWithinProperty\n  fullName: ContentElement.AreAnyTouchesCapturedWithinProperty\n- uid: System.Windows.ContentElement.AreAnyTouchesDirectlyOver\n  parent: System.Windows.ContentElement\n  isExternal: false\n  name: AreAnyTouchesDirectlyOver\n  nameWithType: ContentElement.AreAnyTouchesDirectlyOver\n  fullName: ContentElement.AreAnyTouchesDirectlyOver\n- uid: System.Windows.ContentElement.AreAnyTouchesDirectlyOverProperty\n  parent: System.Windows.ContentElement\n  isExternal: false\n  name: AreAnyTouchesDirectlyOverProperty\n  nameWithType: ContentElement.AreAnyTouchesDirectlyOverProperty\n  fullName: ContentElement.AreAnyTouchesDirectlyOverProperty\n- uid: System.Windows.ContentElement.AreAnyTouchesOver\n  parent: System.Windows.ContentElement\n  isExternal: false\n  name: AreAnyTouchesOver\n  nameWithType: ContentElement.AreAnyTouchesOver\n  fullName: ContentElement.AreAnyTouchesOver\n- uid: System.Windows.ContentElement.AreAnyTouchesOverProperty\n  parent: System.Windows.ContentElement\n  isExternal: false\n  name: AreAnyTouchesOverProperty\n  nameWithType: ContentElement.AreAnyTouchesOverProperty\n  fullName: ContentElement.AreAnyTouchesOverProperty\n- uid: System.Windows.ContentElement.BeginAnimation(System.Windows.DependencyProperty,System.Windows.Media.Animation.AnimationTimeline)\n  parent: System.Windows.ContentElement\n  isExternal: false\n  name: BeginAnimation(DependencyProperty, AnimationTimeline)\n  nameWithType: ContentElement.BeginAnimation(DependencyProperty, AnimationTimeline)\n  fullName: ContentElement.BeginAnimation(DependencyProperty, AnimationTimeline)\n- uid: System.Windows.ContentElement.BeginAnimation(System.Windows.DependencyProperty,System.Windows.Media.Animation.AnimationTimeline,System.Windows.Media.Animation.HandoffBehavior)\n  parent: System.Windows.ContentElement\n  isExternal: false\n  name: BeginAnimation(DependencyProperty, AnimationTimeline, HandoffBehavior)\n  nameWithType: ContentElement.BeginAnimation(DependencyProperty, AnimationTimeline, HandoffBehavior)\n  fullName: ContentElement.BeginAnimation(DependencyProperty, AnimationTimeline, HandoffBehavior)\n- uid: System.Windows.ContentElement.CaptureMouse\n  parent: System.Windows.ContentElement\n  isExternal: false\n  name: CaptureMouse()\n  nameWithType: ContentElement.CaptureMouse()\n  fullName: ContentElement.CaptureMouse()\n- uid: System.Windows.ContentElement.CaptureStylus\n  parent: System.Windows.ContentElement\n  isExternal: false\n  name: CaptureStylus()\n  nameWithType: ContentElement.CaptureStylus()\n  fullName: ContentElement.CaptureStylus()\n- uid: System.Windows.ContentElement.CaptureTouch(System.Windows.Input.TouchDevice)\n  parent: System.Windows.ContentElement\n  isExternal: false\n  name: CaptureTouch(TouchDevice)\n  nameWithType: ContentElement.CaptureTouch(TouchDevice)\n  fullName: ContentElement.CaptureTouch(TouchDevice)\n- uid: System.Windows.ContentElement.CommandBindings\n  parent: System.Windows.ContentElement\n  isExternal: false\n  name: CommandBindings\n  nameWithType: ContentElement.CommandBindings\n  fullName: ContentElement.CommandBindings\n- uid: System.Windows.ContentElement.DragEnter\n  parent: System.Windows.ContentElement\n  isExternal: false\n  name: DragEnter\n  nameWithType: ContentElement.DragEnter\n  fullName: ContentElement.DragEnter\n- uid: System.Windows.ContentElement.DragEnterEvent\n  parent: System.Windows.ContentElement\n  isExternal: false\n  name: DragEnterEvent\n  nameWithType: ContentElement.DragEnterEvent\n  fullName: ContentElement.DragEnterEvent\n- uid: System.Windows.ContentElement.DragLeave\n  parent: System.Windows.ContentElement\n  isExternal: false\n  name: DragLeave\n  nameWithType: ContentElement.DragLeave\n  fullName: ContentElement.DragLeave\n- uid: System.Windows.ContentElement.DragLeaveEvent\n  parent: System.Windows.ContentElement\n  isExternal: false\n  name: DragLeaveEvent\n  nameWithType: ContentElement.DragLeaveEvent\n  fullName: ContentElement.DragLeaveEvent\n- uid: System.Windows.ContentElement.DragOver\n  parent: System.Windows.ContentElement\n  isExternal: false\n  name: DragOver\n  nameWithType: ContentElement.DragOver\n  fullName: ContentElement.DragOver\n- uid: System.Windows.ContentElement.DragOverEvent\n  parent: System.Windows.ContentElement\n  isExternal: false\n  name: DragOverEvent\n  nameWithType: ContentElement.DragOverEvent\n  fullName: ContentElement.DragOverEvent\n- uid: System.Windows.ContentElement.Drop\n  parent: System.Windows.ContentElement\n  isExternal: false\n  name: Drop\n  nameWithType: ContentElement.Drop\n  fullName: ContentElement.Drop\n- uid: System.Windows.ContentElement.DropEvent\n  parent: System.Windows.ContentElement\n  isExternal: false\n  name: DropEvent\n  nameWithType: ContentElement.DropEvent\n  fullName: ContentElement.DropEvent\n- uid: System.Windows.ContentElement.Focus\n  parent: System.Windows.ContentElement\n  isExternal: false\n  name: Focus()\n  nameWithType: ContentElement.Focus()\n  fullName: ContentElement.Focus()\n- uid: System.Windows.ContentElement.Focusable\n  parent: System.Windows.ContentElement\n  isExternal: false\n  name: Focusable\n  nameWithType: ContentElement.Focusable\n  fullName: ContentElement.Focusable\n- uid: System.Windows.ContentElement.FocusableChanged\n  parent: System.Windows.ContentElement\n  isExternal: false\n  name: FocusableChanged\n  nameWithType: ContentElement.FocusableChanged\n  fullName: ContentElement.FocusableChanged\n- uid: System.Windows.ContentElement.FocusableProperty\n  parent: System.Windows.ContentElement\n  isExternal: false\n  name: FocusableProperty\n  nameWithType: ContentElement.FocusableProperty\n  fullName: ContentElement.FocusableProperty\n- uid: System.Windows.ContentElement.GetAnimationBaseValue(System.Windows.DependencyProperty)\n  parent: System.Windows.ContentElement\n  isExternal: false\n  name: GetAnimationBaseValue(DependencyProperty)\n  nameWithType: ContentElement.GetAnimationBaseValue(DependencyProperty)\n  fullName: ContentElement.GetAnimationBaseValue(DependencyProperty)\n- uid: System.Windows.ContentElement.GiveFeedback\n  parent: System.Windows.ContentElement\n  isExternal: false\n  name: GiveFeedback\n  nameWithType: ContentElement.GiveFeedback\n  fullName: ContentElement.GiveFeedback\n- uid: System.Windows.ContentElement.GiveFeedbackEvent\n  parent: System.Windows.ContentElement\n  isExternal: false\n  name: GiveFeedbackEvent\n  nameWithType: ContentElement.GiveFeedbackEvent\n  fullName: ContentElement.GiveFeedbackEvent\n- uid: System.Windows.ContentElement.GotFocus\n  parent: System.Windows.ContentElement\n  isExternal: false\n  name: GotFocus\n  nameWithType: ContentElement.GotFocus\n  fullName: ContentElement.GotFocus\n- uid: System.Windows.ContentElement.GotFocusEvent\n  parent: System.Windows.ContentElement\n  isExternal: false\n  name: GotFocusEvent\n  nameWithType: ContentElement.GotFocusEvent\n  fullName: ContentElement.GotFocusEvent\n- uid: System.Windows.ContentElement.GotKeyboardFocus\n  parent: System.Windows.ContentElement\n  isExternal: false\n  name: GotKeyboardFocus\n  nameWithType: ContentElement.GotKeyboardFocus\n  fullName: ContentElement.GotKeyboardFocus\n- uid: System.Windows.ContentElement.GotKeyboardFocusEvent\n  parent: System.Windows.ContentElement\n  isExternal: false\n  name: GotKeyboardFocusEvent\n  nameWithType: ContentElement.GotKeyboardFocusEvent\n  fullName: ContentElement.GotKeyboardFocusEvent\n- uid: System.Windows.ContentElement.GotMouseCapture\n  parent: System.Windows.ContentElement\n  isExternal: false\n  name: GotMouseCapture\n  nameWithType: ContentElement.GotMouseCapture\n  fullName: ContentElement.GotMouseCapture\n- uid: System.Windows.ContentElement.GotMouseCaptureEvent\n  parent: System.Windows.ContentElement\n  isExternal: false\n  name: GotMouseCaptureEvent\n  nameWithType: ContentElement.GotMouseCaptureEvent\n  fullName: ContentElement.GotMouseCaptureEvent\n- uid: System.Windows.ContentElement.GotStylusCapture\n  parent: System.Windows.ContentElement\n  isExternal: false\n  name: GotStylusCapture\n  nameWithType: ContentElement.GotStylusCapture\n  fullName: ContentElement.GotStylusCapture\n- uid: System.Windows.ContentElement.GotStylusCaptureEvent\n  parent: System.Windows.ContentElement\n  isExternal: false\n  name: GotStylusCaptureEvent\n  nameWithType: ContentElement.GotStylusCaptureEvent\n  fullName: ContentElement.GotStylusCaptureEvent\n- uid: System.Windows.ContentElement.GotTouchCapture\n  parent: System.Windows.ContentElement\n  isExternal: false\n  name: GotTouchCapture\n  nameWithType: ContentElement.GotTouchCapture\n  fullName: ContentElement.GotTouchCapture\n- uid: System.Windows.ContentElement.GotTouchCaptureEvent\n  parent: System.Windows.ContentElement\n  isExternal: false\n  name: GotTouchCaptureEvent\n  nameWithType: ContentElement.GotTouchCaptureEvent\n  fullName: ContentElement.GotTouchCaptureEvent\n- uid: System.Windows.ContentElement.HasAnimatedProperties\n  parent: System.Windows.ContentElement\n  isExternal: false\n  name: HasAnimatedProperties\n  nameWithType: ContentElement.HasAnimatedProperties\n  fullName: ContentElement.HasAnimatedProperties\n- uid: System.Windows.ContentElement.InputBindings\n  parent: System.Windows.ContentElement\n  isExternal: false\n  name: InputBindings\n  nameWithType: ContentElement.InputBindings\n  fullName: ContentElement.InputBindings\n- uid: System.Windows.ContentElement.IsEnabled\n  parent: System.Windows.ContentElement\n  isExternal: false\n  name: IsEnabled\n  nameWithType: ContentElement.IsEnabled\n  fullName: ContentElement.IsEnabled\n- uid: System.Windows.ContentElement.IsEnabledChanged\n  parent: System.Windows.ContentElement\n  isExternal: false\n  name: IsEnabledChanged\n  nameWithType: ContentElement.IsEnabledChanged\n  fullName: ContentElement.IsEnabledChanged\n- uid: System.Windows.ContentElement.IsEnabledCore\n  parent: System.Windows.ContentElement\n  isExternal: false\n  name: IsEnabledCore\n  nameWithType: ContentElement.IsEnabledCore\n  fullName: ContentElement.IsEnabledCore\n- uid: System.Windows.ContentElement.IsEnabledProperty\n  parent: System.Windows.ContentElement\n  isExternal: false\n  name: IsEnabledProperty\n  nameWithType: ContentElement.IsEnabledProperty\n  fullName: ContentElement.IsEnabledProperty\n- uid: System.Windows.ContentElement.IsFocused\n  parent: System.Windows.ContentElement\n  isExternal: false\n  name: IsFocused\n  nameWithType: ContentElement.IsFocused\n  fullName: ContentElement.IsFocused\n- uid: System.Windows.ContentElement.IsFocusedProperty\n  parent: System.Windows.ContentElement\n  isExternal: false\n  name: IsFocusedProperty\n  nameWithType: ContentElement.IsFocusedProperty\n  fullName: ContentElement.IsFocusedProperty\n- uid: System.Windows.ContentElement.IsInputMethodEnabled\n  parent: System.Windows.ContentElement\n  isExternal: false\n  name: IsInputMethodEnabled\n  nameWithType: ContentElement.IsInputMethodEnabled\n  fullName: ContentElement.IsInputMethodEnabled\n- uid: System.Windows.ContentElement.IsKeyboardFocused\n  parent: System.Windows.ContentElement\n  isExternal: false\n  name: IsKeyboardFocused\n  nameWithType: ContentElement.IsKeyboardFocused\n  fullName: ContentElement.IsKeyboardFocused\n- uid: System.Windows.ContentElement.IsKeyboardFocusedChanged\n  parent: System.Windows.ContentElement\n  isExternal: false\n  name: IsKeyboardFocusedChanged\n  nameWithType: ContentElement.IsKeyboardFocusedChanged\n  fullName: ContentElement.IsKeyboardFocusedChanged\n- uid: System.Windows.ContentElement.IsKeyboardFocusedProperty\n  parent: System.Windows.ContentElement\n  isExternal: false\n  name: IsKeyboardFocusedProperty\n  nameWithType: ContentElement.IsKeyboardFocusedProperty\n  fullName: ContentElement.IsKeyboardFocusedProperty\n- uid: System.Windows.ContentElement.IsKeyboardFocusWithin\n  parent: System.Windows.ContentElement\n  isExternal: false\n  name: IsKeyboardFocusWithin\n  nameWithType: ContentElement.IsKeyboardFocusWithin\n  fullName: ContentElement.IsKeyboardFocusWithin\n- uid: System.Windows.ContentElement.IsKeyboardFocusWithinChanged\n  parent: System.Windows.ContentElement\n  isExternal: false\n  name: IsKeyboardFocusWithinChanged\n  nameWithType: ContentElement.IsKeyboardFocusWithinChanged\n  fullName: ContentElement.IsKeyboardFocusWithinChanged\n- uid: System.Windows.ContentElement.IsKeyboardFocusWithinProperty\n  parent: System.Windows.ContentElement\n  isExternal: false\n  name: IsKeyboardFocusWithinProperty\n  nameWithType: ContentElement.IsKeyboardFocusWithinProperty\n  fullName: ContentElement.IsKeyboardFocusWithinProperty\n- uid: System.Windows.ContentElement.IsMouseCaptured\n  parent: System.Windows.ContentElement\n  isExternal: false\n  name: IsMouseCaptured\n  nameWithType: ContentElement.IsMouseCaptured\n  fullName: ContentElement.IsMouseCaptured\n- uid: System.Windows.ContentElement.IsMouseCapturedChanged\n  parent: System.Windows.ContentElement\n  isExternal: false\n  name: IsMouseCapturedChanged\n  nameWithType: ContentElement.IsMouseCapturedChanged\n  fullName: ContentElement.IsMouseCapturedChanged\n- uid: System.Windows.ContentElement.IsMouseCapturedProperty\n  parent: System.Windows.ContentElement\n  isExternal: false\n  name: IsMouseCapturedProperty\n  nameWithType: ContentElement.IsMouseCapturedProperty\n  fullName: ContentElement.IsMouseCapturedProperty\n- uid: System.Windows.ContentElement.IsMouseCaptureWithin\n  parent: System.Windows.ContentElement\n  isExternal: false\n  name: IsMouseCaptureWithin\n  nameWithType: ContentElement.IsMouseCaptureWithin\n  fullName: ContentElement.IsMouseCaptureWithin\n- uid: System.Windows.ContentElement.IsMouseCaptureWithinChanged\n  parent: System.Windows.ContentElement\n  isExternal: false\n  name: IsMouseCaptureWithinChanged\n  nameWithType: ContentElement.IsMouseCaptureWithinChanged\n  fullName: ContentElement.IsMouseCaptureWithinChanged\n- uid: System.Windows.ContentElement.IsMouseCaptureWithinProperty\n  parent: System.Windows.ContentElement\n  isExternal: false\n  name: IsMouseCaptureWithinProperty\n  nameWithType: ContentElement.IsMouseCaptureWithinProperty\n  fullName: ContentElement.IsMouseCaptureWithinProperty\n- uid: System.Windows.ContentElement.IsMouseDirectlyOver\n  parent: System.Windows.ContentElement\n  isExternal: false\n  name: IsMouseDirectlyOver\n  nameWithType: ContentElement.IsMouseDirectlyOver\n  fullName: ContentElement.IsMouseDirectlyOver\n- uid: System.Windows.ContentElement.IsMouseDirectlyOverChanged\n  parent: System.Windows.ContentElement\n  isExternal: false\n  name: IsMouseDirectlyOverChanged\n  nameWithType: ContentElement.IsMouseDirectlyOverChanged\n  fullName: ContentElement.IsMouseDirectlyOverChanged\n- uid: System.Windows.ContentElement.IsMouseDirectlyOverProperty\n  parent: System.Windows.ContentElement\n  isExternal: false\n  name: IsMouseDirectlyOverProperty\n  nameWithType: ContentElement.IsMouseDirectlyOverProperty\n  fullName: ContentElement.IsMouseDirectlyOverProperty\n- uid: System.Windows.ContentElement.IsMouseOver\n  parent: System.Windows.ContentElement\n  isExternal: false\n  name: IsMouseOver\n  nameWithType: ContentElement.IsMouseOver\n  fullName: ContentElement.IsMouseOver\n- uid: System.Windows.ContentElement.IsMouseOverProperty\n  parent: System.Windows.ContentElement\n  isExternal: false\n  name: IsMouseOverProperty\n  nameWithType: ContentElement.IsMouseOverProperty\n  fullName: ContentElement.IsMouseOverProperty\n- uid: System.Windows.ContentElement.IsStylusCaptured\n  parent: System.Windows.ContentElement\n  isExternal: false\n  name: IsStylusCaptured\n  nameWithType: ContentElement.IsStylusCaptured\n  fullName: ContentElement.IsStylusCaptured\n- uid: System.Windows.ContentElement.IsStylusCapturedChanged\n  parent: System.Windows.ContentElement\n  isExternal: false\n  name: IsStylusCapturedChanged\n  nameWithType: ContentElement.IsStylusCapturedChanged\n  fullName: ContentElement.IsStylusCapturedChanged\n- uid: System.Windows.ContentElement.IsStylusCapturedProperty\n  parent: System.Windows.ContentElement\n  isExternal: false\n  name: IsStylusCapturedProperty\n  nameWithType: ContentElement.IsStylusCapturedProperty\n  fullName: ContentElement.IsStylusCapturedProperty\n- uid: System.Windows.ContentElement.IsStylusCaptureWithin\n  parent: System.Windows.ContentElement\n  isExternal: false\n  name: IsStylusCaptureWithin\n  nameWithType: ContentElement.IsStylusCaptureWithin\n  fullName: ContentElement.IsStylusCaptureWithin\n- uid: System.Windows.ContentElement.IsStylusCaptureWithinChanged\n  parent: System.Windows.ContentElement\n  isExternal: false\n  name: IsStylusCaptureWithinChanged\n  nameWithType: ContentElement.IsStylusCaptureWithinChanged\n  fullName: ContentElement.IsStylusCaptureWithinChanged\n- uid: System.Windows.ContentElement.IsStylusCaptureWithinProperty\n  parent: System.Windows.ContentElement\n  isExternal: false\n  name: IsStylusCaptureWithinProperty\n  nameWithType: ContentElement.IsStylusCaptureWithinProperty\n  fullName: ContentElement.IsStylusCaptureWithinProperty\n- uid: System.Windows.ContentElement.IsStylusDirectlyOver\n  parent: System.Windows.ContentElement\n  isExternal: false\n  name: IsStylusDirectlyOver\n  nameWithType: ContentElement.IsStylusDirectlyOver\n  fullName: ContentElement.IsStylusDirectlyOver\n- uid: System.Windows.ContentElement.IsStylusDirectlyOverChanged\n  parent: System.Windows.ContentElement\n  isExternal: false\n  name: IsStylusDirectlyOverChanged\n  nameWithType: ContentElement.IsStylusDirectlyOverChanged\n  fullName: ContentElement.IsStylusDirectlyOverChanged\n- uid: System.Windows.ContentElement.IsStylusDirectlyOverProperty\n  parent: System.Windows.ContentElement\n  isExternal: false\n  name: IsStylusDirectlyOverProperty\n  nameWithType: ContentElement.IsStylusDirectlyOverProperty\n  fullName: ContentElement.IsStylusDirectlyOverProperty\n- uid: System.Windows.ContentElement.IsStylusOver\n  parent: System.Windows.ContentElement\n  isExternal: false\n  name: IsStylusOver\n  nameWithType: ContentElement.IsStylusOver\n  fullName: ContentElement.IsStylusOver\n- uid: System.Windows.ContentElement.IsStylusOverProperty\n  parent: System.Windows.ContentElement\n  isExternal: false\n  name: IsStylusOverProperty\n  nameWithType: ContentElement.IsStylusOverProperty\n  fullName: ContentElement.IsStylusOverProperty\n- uid: System.Windows.ContentElement.KeyDown\n  parent: System.Windows.ContentElement\n  isExternal: false\n  name: KeyDown\n  nameWithType: ContentElement.KeyDown\n  fullName: ContentElement.KeyDown\n- uid: System.Windows.ContentElement.KeyDownEvent\n  parent: System.Windows.ContentElement\n  isExternal: false\n  name: KeyDownEvent\n  nameWithType: ContentElement.KeyDownEvent\n  fullName: ContentElement.KeyDownEvent\n- uid: System.Windows.ContentElement.KeyUp\n  parent: System.Windows.ContentElement\n  isExternal: false\n  name: KeyUp\n  nameWithType: ContentElement.KeyUp\n  fullName: ContentElement.KeyUp\n- uid: System.Windows.ContentElement.KeyUpEvent\n  parent: System.Windows.ContentElement\n  isExternal: false\n  name: KeyUpEvent\n  nameWithType: ContentElement.KeyUpEvent\n  fullName: ContentElement.KeyUpEvent\n- uid: System.Windows.ContentElement.LostFocus\n  parent: System.Windows.ContentElement\n  isExternal: false\n  name: LostFocus\n  nameWithType: ContentElement.LostFocus\n  fullName: ContentElement.LostFocus\n- uid: System.Windows.ContentElement.LostFocusEvent\n  parent: System.Windows.ContentElement\n  isExternal: false\n  name: LostFocusEvent\n  nameWithType: ContentElement.LostFocusEvent\n  fullName: ContentElement.LostFocusEvent\n- uid: System.Windows.ContentElement.LostKeyboardFocus\n  parent: System.Windows.ContentElement\n  isExternal: false\n  name: LostKeyboardFocus\n  nameWithType: ContentElement.LostKeyboardFocus\n  fullName: ContentElement.LostKeyboardFocus\n- uid: System.Windows.ContentElement.LostKeyboardFocusEvent\n  parent: System.Windows.ContentElement\n  isExternal: false\n  name: LostKeyboardFocusEvent\n  nameWithType: ContentElement.LostKeyboardFocusEvent\n  fullName: ContentElement.LostKeyboardFocusEvent\n- uid: System.Windows.ContentElement.LostMouseCapture\n  parent: System.Windows.ContentElement\n  isExternal: false\n  name: LostMouseCapture\n  nameWithType: ContentElement.LostMouseCapture\n  fullName: ContentElement.LostMouseCapture\n- uid: System.Windows.ContentElement.LostMouseCaptureEvent\n  parent: System.Windows.ContentElement\n  isExternal: false\n  name: LostMouseCaptureEvent\n  nameWithType: ContentElement.LostMouseCaptureEvent\n  fullName: ContentElement.LostMouseCaptureEvent\n- uid: System.Windows.ContentElement.LostStylusCapture\n  parent: System.Windows.ContentElement\n  isExternal: false\n  name: LostStylusCapture\n  nameWithType: ContentElement.LostStylusCapture\n  fullName: ContentElement.LostStylusCapture\n- uid: System.Windows.ContentElement.LostStylusCaptureEvent\n  parent: System.Windows.ContentElement\n  isExternal: false\n  name: LostStylusCaptureEvent\n  nameWithType: ContentElement.LostStylusCaptureEvent\n  fullName: ContentElement.LostStylusCaptureEvent\n- uid: System.Windows.ContentElement.LostTouchCapture\n  parent: System.Windows.ContentElement\n  isExternal: false\n  name: LostTouchCapture\n  nameWithType: ContentElement.LostTouchCapture\n  fullName: ContentElement.LostTouchCapture\n- uid: System.Windows.ContentElement.LostTouchCaptureEvent\n  parent: System.Windows.ContentElement\n  isExternal: false\n  name: LostTouchCaptureEvent\n  nameWithType: ContentElement.LostTouchCaptureEvent\n  fullName: ContentElement.LostTouchCaptureEvent\n- uid: System.Windows.ContentElement.MouseDown\n  parent: System.Windows.ContentElement\n  isExternal: false\n  name: MouseDown\n  nameWithType: ContentElement.MouseDown\n  fullName: ContentElement.MouseDown\n- uid: System.Windows.ContentElement.MouseDownEvent\n  parent: System.Windows.ContentElement\n  isExternal: false\n  name: MouseDownEvent\n  nameWithType: ContentElement.MouseDownEvent\n  fullName: ContentElement.MouseDownEvent\n- uid: System.Windows.ContentElement.MouseEnter\n  parent: System.Windows.ContentElement\n  isExternal: false\n  name: MouseEnter\n  nameWithType: ContentElement.MouseEnter\n  fullName: ContentElement.MouseEnter\n- uid: System.Windows.ContentElement.MouseEnterEvent\n  parent: System.Windows.ContentElement\n  isExternal: false\n  name: MouseEnterEvent\n  nameWithType: ContentElement.MouseEnterEvent\n  fullName: ContentElement.MouseEnterEvent\n- uid: System.Windows.ContentElement.MouseLeave\n  parent: System.Windows.ContentElement\n  isExternal: false\n  name: MouseLeave\n  nameWithType: ContentElement.MouseLeave\n  fullName: ContentElement.MouseLeave\n- uid: System.Windows.ContentElement.MouseLeaveEvent\n  parent: System.Windows.ContentElement\n  isExternal: false\n  name: MouseLeaveEvent\n  nameWithType: ContentElement.MouseLeaveEvent\n  fullName: ContentElement.MouseLeaveEvent\n- uid: System.Windows.ContentElement.MouseLeftButtonDown\n  parent: System.Windows.ContentElement\n  isExternal: false\n  name: MouseLeftButtonDown\n  nameWithType: ContentElement.MouseLeftButtonDown\n  fullName: ContentElement.MouseLeftButtonDown\n- uid: System.Windows.ContentElement.MouseLeftButtonDownEvent\n  parent: System.Windows.ContentElement\n  isExternal: false\n  name: MouseLeftButtonDownEvent\n  nameWithType: ContentElement.MouseLeftButtonDownEvent\n  fullName: ContentElement.MouseLeftButtonDownEvent\n- uid: System.Windows.ContentElement.MouseLeftButtonUp\n  parent: System.Windows.ContentElement\n  isExternal: false\n  name: MouseLeftButtonUp\n  nameWithType: ContentElement.MouseLeftButtonUp\n  fullName: ContentElement.MouseLeftButtonUp\n- uid: System.Windows.ContentElement.MouseLeftButtonUpEvent\n  parent: System.Windows.ContentElement\n  isExternal: false\n  name: MouseLeftButtonUpEvent\n  nameWithType: ContentElement.MouseLeftButtonUpEvent\n  fullName: ContentElement.MouseLeftButtonUpEvent\n- uid: System.Windows.ContentElement.MouseMove\n  parent: System.Windows.ContentElement\n  isExternal: false\n  name: MouseMove\n  nameWithType: ContentElement.MouseMove\n  fullName: ContentElement.MouseMove\n- uid: System.Windows.ContentElement.MouseMoveEvent\n  parent: System.Windows.ContentElement\n  isExternal: false\n  name: MouseMoveEvent\n  nameWithType: ContentElement.MouseMoveEvent\n  fullName: ContentElement.MouseMoveEvent\n- uid: System.Windows.ContentElement.MouseRightButtonDown\n  parent: System.Windows.ContentElement\n  isExternal: false\n  name: MouseRightButtonDown\n  nameWithType: ContentElement.MouseRightButtonDown\n  fullName: ContentElement.MouseRightButtonDown\n- uid: System.Windows.ContentElement.MouseRightButtonDownEvent\n  parent: System.Windows.ContentElement\n  isExternal: false\n  name: MouseRightButtonDownEvent\n  nameWithType: ContentElement.MouseRightButtonDownEvent\n  fullName: ContentElement.MouseRightButtonDownEvent\n- uid: System.Windows.ContentElement.MouseRightButtonUp\n  parent: System.Windows.ContentElement\n  isExternal: false\n  name: MouseRightButtonUp\n  nameWithType: ContentElement.MouseRightButtonUp\n  fullName: ContentElement.MouseRightButtonUp\n- uid: System.Windows.ContentElement.MouseRightButtonUpEvent\n  parent: System.Windows.ContentElement\n  isExternal: false\n  name: MouseRightButtonUpEvent\n  nameWithType: ContentElement.MouseRightButtonUpEvent\n  fullName: ContentElement.MouseRightButtonUpEvent\n- uid: System.Windows.ContentElement.MouseUp\n  parent: System.Windows.ContentElement\n  isExternal: false\n  name: MouseUp\n  nameWithType: ContentElement.MouseUp\n  fullName: ContentElement.MouseUp\n- uid: System.Windows.ContentElement.MouseUpEvent\n  parent: System.Windows.ContentElement\n  isExternal: false\n  name: MouseUpEvent\n  nameWithType: ContentElement.MouseUpEvent\n  fullName: ContentElement.MouseUpEvent\n- uid: System.Windows.ContentElement.MouseWheel\n  parent: System.Windows.ContentElement\n  isExternal: false\n  name: MouseWheel\n  nameWithType: ContentElement.MouseWheel\n  fullName: ContentElement.MouseWheel\n- uid: System.Windows.ContentElement.MouseWheelEvent\n  parent: System.Windows.ContentElement\n  isExternal: false\n  name: MouseWheelEvent\n  nameWithType: ContentElement.MouseWheelEvent\n  fullName: ContentElement.MouseWheelEvent\n- uid: System.Windows.ContentElement.OnCreateAutomationPeer\n  parent: System.Windows.ContentElement\n  isExternal: false\n  name: OnCreateAutomationPeer()\n  nameWithType: ContentElement.OnCreateAutomationPeer()\n  fullName: ContentElement.OnCreateAutomationPeer()\n- uid: System.Windows.ContentElement.OnDragEnter(System.Windows.DragEventArgs)\n  parent: System.Windows.ContentElement\n  isExternal: false\n  name: OnDragEnter(DragEventArgs)\n  nameWithType: ContentElement.OnDragEnter(DragEventArgs)\n  fullName: ContentElement.OnDragEnter(DragEventArgs)\n- uid: System.Windows.ContentElement.OnDragLeave(System.Windows.DragEventArgs)\n  parent: System.Windows.ContentElement\n  isExternal: false\n  name: OnDragLeave(DragEventArgs)\n  nameWithType: ContentElement.OnDragLeave(DragEventArgs)\n  fullName: ContentElement.OnDragLeave(DragEventArgs)\n- uid: System.Windows.ContentElement.OnDragOver(System.Windows.DragEventArgs)\n  parent: System.Windows.ContentElement\n  isExternal: false\n  name: OnDragOver(DragEventArgs)\n  nameWithType: ContentElement.OnDragOver(DragEventArgs)\n  fullName: ContentElement.OnDragOver(DragEventArgs)\n- uid: System.Windows.ContentElement.OnDrop(System.Windows.DragEventArgs)\n  parent: System.Windows.ContentElement\n  isExternal: false\n  name: OnDrop(DragEventArgs)\n  nameWithType: ContentElement.OnDrop(DragEventArgs)\n  fullName: ContentElement.OnDrop(DragEventArgs)\n- uid: System.Windows.ContentElement.OnGiveFeedback(System.Windows.GiveFeedbackEventArgs)\n  parent: System.Windows.ContentElement\n  isExternal: false\n  name: OnGiveFeedback(GiveFeedbackEventArgs)\n  nameWithType: ContentElement.OnGiveFeedback(GiveFeedbackEventArgs)\n  fullName: ContentElement.OnGiveFeedback(GiveFeedbackEventArgs)\n- uid: System.Windows.ContentElement.OnGotKeyboardFocus(System.Windows.Input.KeyboardFocusChangedEventArgs)\n  parent: System.Windows.ContentElement\n  isExternal: false\n  name: OnGotKeyboardFocus(KeyboardFocusChangedEventArgs)\n  nameWithType: ContentElement.OnGotKeyboardFocus(KeyboardFocusChangedEventArgs)\n  fullName: ContentElement.OnGotKeyboardFocus(KeyboardFocusChangedEventArgs)\n- uid: System.Windows.ContentElement.OnGotMouseCapture(System.Windows.Input.MouseEventArgs)\n  parent: System.Windows.ContentElement\n  isExternal: false\n  name: OnGotMouseCapture(MouseEventArgs)\n  nameWithType: ContentElement.OnGotMouseCapture(MouseEventArgs)\n  fullName: ContentElement.OnGotMouseCapture(MouseEventArgs)\n- uid: System.Windows.ContentElement.OnGotStylusCapture(System.Windows.Input.StylusEventArgs)\n  parent: System.Windows.ContentElement\n  isExternal: false\n  name: OnGotStylusCapture(StylusEventArgs)\n  nameWithType: ContentElement.OnGotStylusCapture(StylusEventArgs)\n  fullName: ContentElement.OnGotStylusCapture(StylusEventArgs)\n- uid: System.Windows.ContentElement.OnGotTouchCapture(System.Windows.Input.TouchEventArgs)\n  parent: System.Windows.ContentElement\n  isExternal: false\n  name: OnGotTouchCapture(TouchEventArgs)\n  nameWithType: ContentElement.OnGotTouchCapture(TouchEventArgs)\n  fullName: ContentElement.OnGotTouchCapture(TouchEventArgs)\n- uid: System.Windows.ContentElement.OnIsKeyboardFocusedChanged(System.Windows.DependencyPropertyChangedEventArgs)\n  parent: System.Windows.ContentElement\n  isExternal: false\n  name: OnIsKeyboardFocusedChanged(DependencyPropertyChangedEventArgs)\n  nameWithType: ContentElement.OnIsKeyboardFocusedChanged(DependencyPropertyChangedEventArgs)\n  fullName: ContentElement.OnIsKeyboardFocusedChanged(DependencyPropertyChangedEventArgs)\n- uid: System.Windows.ContentElement.OnIsKeyboardFocusWithinChanged(System.Windows.DependencyPropertyChangedEventArgs)\n  parent: System.Windows.ContentElement\n  isExternal: false\n  name: OnIsKeyboardFocusWithinChanged(DependencyPropertyChangedEventArgs)\n  nameWithType: ContentElement.OnIsKeyboardFocusWithinChanged(DependencyPropertyChangedEventArgs)\n  fullName: ContentElement.OnIsKeyboardFocusWithinChanged(DependencyPropertyChangedEventArgs)\n- uid: System.Windows.ContentElement.OnIsMouseCapturedChanged(System.Windows.DependencyPropertyChangedEventArgs)\n  parent: System.Windows.ContentElement\n  isExternal: false\n  name: OnIsMouseCapturedChanged(DependencyPropertyChangedEventArgs)\n  nameWithType: ContentElement.OnIsMouseCapturedChanged(DependencyPropertyChangedEventArgs)\n  fullName: ContentElement.OnIsMouseCapturedChanged(DependencyPropertyChangedEventArgs)\n- uid: System.Windows.ContentElement.OnIsMouseCaptureWithinChanged(System.Windows.DependencyPropertyChangedEventArgs)\n  parent: System.Windows.ContentElement\n  isExternal: false\n  name: OnIsMouseCaptureWithinChanged(DependencyPropertyChangedEventArgs)\n  nameWithType: ContentElement.OnIsMouseCaptureWithinChanged(DependencyPropertyChangedEventArgs)\n  fullName: ContentElement.OnIsMouseCaptureWithinChanged(DependencyPropertyChangedEventArgs)\n- uid: System.Windows.ContentElement.OnIsMouseDirectlyOverChanged(System.Windows.DependencyPropertyChangedEventArgs)\n  parent: System.Windows.ContentElement\n  isExternal: false\n  name: OnIsMouseDirectlyOverChanged(DependencyPropertyChangedEventArgs)\n  nameWithType: ContentElement.OnIsMouseDirectlyOverChanged(DependencyPropertyChangedEventArgs)\n  fullName: ContentElement.OnIsMouseDirectlyOverChanged(DependencyPropertyChangedEventArgs)\n- uid: System.Windows.ContentElement.OnIsStylusCapturedChanged(System.Windows.DependencyPropertyChangedEventArgs)\n  parent: System.Windows.ContentElement\n  isExternal: false\n  name: OnIsStylusCapturedChanged(DependencyPropertyChangedEventArgs)\n  nameWithType: ContentElement.OnIsStylusCapturedChanged(DependencyPropertyChangedEventArgs)\n  fullName: ContentElement.OnIsStylusCapturedChanged(DependencyPropertyChangedEventArgs)\n- uid: System.Windows.ContentElement.OnIsStylusCaptureWithinChanged(System.Windows.DependencyPropertyChangedEventArgs)\n  parent: System.Windows.ContentElement\n  isExternal: false\n  name: OnIsStylusCaptureWithinChanged(DependencyPropertyChangedEventArgs)\n  nameWithType: ContentElement.OnIsStylusCaptureWithinChanged(DependencyPropertyChangedEventArgs)\n  fullName: ContentElement.OnIsStylusCaptureWithinChanged(DependencyPropertyChangedEventArgs)\n- uid: System.Windows.ContentElement.OnIsStylusDirectlyOverChanged(System.Windows.DependencyPropertyChangedEventArgs)\n  parent: System.Windows.ContentElement\n  isExternal: false\n  name: OnIsStylusDirectlyOverChanged(DependencyPropertyChangedEventArgs)\n  nameWithType: ContentElement.OnIsStylusDirectlyOverChanged(DependencyPropertyChangedEventArgs)\n  fullName: ContentElement.OnIsStylusDirectlyOverChanged(DependencyPropertyChangedEventArgs)\n- uid: System.Windows.ContentElement.OnKeyDown(System.Windows.Input.KeyEventArgs)\n  parent: System.Windows.ContentElement\n  isExternal: false\n  name: OnKeyDown(KeyEventArgs)\n  nameWithType: ContentElement.OnKeyDown(KeyEventArgs)\n  fullName: ContentElement.OnKeyDown(KeyEventArgs)\n- uid: System.Windows.ContentElement.OnKeyUp(System.Windows.Input.KeyEventArgs)\n  parent: System.Windows.ContentElement\n  isExternal: false\n  name: OnKeyUp(KeyEventArgs)\n  nameWithType: ContentElement.OnKeyUp(KeyEventArgs)\n  fullName: ContentElement.OnKeyUp(KeyEventArgs)\n- uid: System.Windows.ContentElement.OnLostFocus(System.Windows.RoutedEventArgs)\n  parent: System.Windows.ContentElement\n  isExternal: false\n  name: OnLostFocus(RoutedEventArgs)\n  nameWithType: ContentElement.OnLostFocus(RoutedEventArgs)\n  fullName: ContentElement.OnLostFocus(RoutedEventArgs)\n- uid: System.Windows.ContentElement.OnLostKeyboardFocus(System.Windows.Input.KeyboardFocusChangedEventArgs)\n  parent: System.Windows.ContentElement\n  isExternal: false\n  name: OnLostKeyboardFocus(KeyboardFocusChangedEventArgs)\n  nameWithType: ContentElement.OnLostKeyboardFocus(KeyboardFocusChangedEventArgs)\n  fullName: ContentElement.OnLostKeyboardFocus(KeyboardFocusChangedEventArgs)\n- uid: System.Windows.ContentElement.OnLostMouseCapture(System.Windows.Input.MouseEventArgs)\n  parent: System.Windows.ContentElement\n  isExternal: false\n  name: OnLostMouseCapture(MouseEventArgs)\n  nameWithType: ContentElement.OnLostMouseCapture(MouseEventArgs)\n  fullName: ContentElement.OnLostMouseCapture(MouseEventArgs)\n- uid: System.Windows.ContentElement.OnLostStylusCapture(System.Windows.Input.StylusEventArgs)\n  parent: System.Windows.ContentElement\n  isExternal: false\n  name: OnLostStylusCapture(StylusEventArgs)\n  nameWithType: ContentElement.OnLostStylusCapture(StylusEventArgs)\n  fullName: ContentElement.OnLostStylusCapture(StylusEventArgs)\n- uid: System.Windows.ContentElement.OnLostTouchCapture(System.Windows.Input.TouchEventArgs)\n  parent: System.Windows.ContentElement\n  isExternal: false\n  name: OnLostTouchCapture(TouchEventArgs)\n  nameWithType: ContentElement.OnLostTouchCapture(TouchEventArgs)\n  fullName: ContentElement.OnLostTouchCapture(TouchEventArgs)\n- uid: System.Windows.ContentElement.OnMouseDown(System.Windows.Input.MouseButtonEventArgs)\n  parent: System.Windows.ContentElement\n  isExternal: false\n  name: OnMouseDown(MouseButtonEventArgs)\n  nameWithType: ContentElement.OnMouseDown(MouseButtonEventArgs)\n  fullName: ContentElement.OnMouseDown(MouseButtonEventArgs)\n- uid: System.Windows.ContentElement.OnMouseEnter(System.Windows.Input.MouseEventArgs)\n  parent: System.Windows.ContentElement\n  isExternal: false\n  name: OnMouseEnter(MouseEventArgs)\n  nameWithType: ContentElement.OnMouseEnter(MouseEventArgs)\n  fullName: ContentElement.OnMouseEnter(MouseEventArgs)\n- uid: System.Windows.ContentElement.OnMouseLeave(System.Windows.Input.MouseEventArgs)\n  parent: System.Windows.ContentElement\n  isExternal: false\n  name: OnMouseLeave(MouseEventArgs)\n  nameWithType: ContentElement.OnMouseLeave(MouseEventArgs)\n  fullName: ContentElement.OnMouseLeave(MouseEventArgs)\n- uid: System.Windows.ContentElement.OnMouseLeftButtonDown(System.Windows.Input.MouseButtonEventArgs)\n  parent: System.Windows.ContentElement\n  isExternal: false\n  name: OnMouseLeftButtonDown(MouseButtonEventArgs)\n  nameWithType: ContentElement.OnMouseLeftButtonDown(MouseButtonEventArgs)\n  fullName: ContentElement.OnMouseLeftButtonDown(MouseButtonEventArgs)\n- uid: System.Windows.ContentElement.OnMouseLeftButtonUp(System.Windows.Input.MouseButtonEventArgs)\n  parent: System.Windows.ContentElement\n  isExternal: false\n  name: OnMouseLeftButtonUp(MouseButtonEventArgs)\n  nameWithType: ContentElement.OnMouseLeftButtonUp(MouseButtonEventArgs)\n  fullName: ContentElement.OnMouseLeftButtonUp(MouseButtonEventArgs)\n- uid: System.Windows.ContentElement.OnMouseMove(System.Windows.Input.MouseEventArgs)\n  parent: System.Windows.ContentElement\n  isExternal: false\n  name: OnMouseMove(MouseEventArgs)\n  nameWithType: ContentElement.OnMouseMove(MouseEventArgs)\n  fullName: ContentElement.OnMouseMove(MouseEventArgs)\n- uid: System.Windows.ContentElement.OnMouseRightButtonDown(System.Windows.Input.MouseButtonEventArgs)\n  parent: System.Windows.ContentElement\n  isExternal: false\n  name: OnMouseRightButtonDown(MouseButtonEventArgs)\n  nameWithType: ContentElement.OnMouseRightButtonDown(MouseButtonEventArgs)\n  fullName: ContentElement.OnMouseRightButtonDown(MouseButtonEventArgs)\n- uid: System.Windows.ContentElement.OnMouseRightButtonUp(System.Windows.Input.MouseButtonEventArgs)\n  parent: System.Windows.ContentElement\n  isExternal: false\n  name: OnMouseRightButtonUp(MouseButtonEventArgs)\n  nameWithType: ContentElement.OnMouseRightButtonUp(MouseButtonEventArgs)\n  fullName: ContentElement.OnMouseRightButtonUp(MouseButtonEventArgs)\n- uid: System.Windows.ContentElement.OnMouseUp(System.Windows.Input.MouseButtonEventArgs)\n  parent: System.Windows.ContentElement\n  isExternal: false\n  name: OnMouseUp(MouseButtonEventArgs)\n  nameWithType: ContentElement.OnMouseUp(MouseButtonEventArgs)\n  fullName: ContentElement.OnMouseUp(MouseButtonEventArgs)\n- uid: System.Windows.ContentElement.OnMouseWheel(System.Windows.Input.MouseWheelEventArgs)\n  parent: System.Windows.ContentElement\n  isExternal: false\n  name: OnMouseWheel(MouseWheelEventArgs)\n  nameWithType: ContentElement.OnMouseWheel(MouseWheelEventArgs)\n  fullName: ContentElement.OnMouseWheel(MouseWheelEventArgs)\n- uid: System.Windows.ContentElement.OnPreviewDragEnter(System.Windows.DragEventArgs)\n  parent: System.Windows.ContentElement\n  isExternal: false\n  name: OnPreviewDragEnter(DragEventArgs)\n  nameWithType: ContentElement.OnPreviewDragEnter(DragEventArgs)\n  fullName: ContentElement.OnPreviewDragEnter(DragEventArgs)\n- uid: System.Windows.ContentElement.OnPreviewDragLeave(System.Windows.DragEventArgs)\n  parent: System.Windows.ContentElement\n  isExternal: false\n  name: OnPreviewDragLeave(DragEventArgs)\n  nameWithType: ContentElement.OnPreviewDragLeave(DragEventArgs)\n  fullName: ContentElement.OnPreviewDragLeave(DragEventArgs)\n- uid: System.Windows.ContentElement.OnPreviewDragOver(System.Windows.DragEventArgs)\n  parent: System.Windows.ContentElement\n  isExternal: false\n  name: OnPreviewDragOver(DragEventArgs)\n  nameWithType: ContentElement.OnPreviewDragOver(DragEventArgs)\n  fullName: ContentElement.OnPreviewDragOver(DragEventArgs)\n- uid: System.Windows.ContentElement.OnPreviewDrop(System.Windows.DragEventArgs)\n  parent: System.Windows.ContentElement\n  isExternal: false\n  name: OnPreviewDrop(DragEventArgs)\n  nameWithType: ContentElement.OnPreviewDrop(DragEventArgs)\n  fullName: ContentElement.OnPreviewDrop(DragEventArgs)\n- uid: System.Windows.ContentElement.OnPreviewGiveFeedback(System.Windows.GiveFeedbackEventArgs)\n  parent: System.Windows.ContentElement\n  isExternal: false\n  name: OnPreviewGiveFeedback(GiveFeedbackEventArgs)\n  nameWithType: ContentElement.OnPreviewGiveFeedback(GiveFeedbackEventArgs)\n  fullName: ContentElement.OnPreviewGiveFeedback(GiveFeedbackEventArgs)\n- uid: System.Windows.ContentElement.OnPreviewGotKeyboardFocus(System.Windows.Input.KeyboardFocusChangedEventArgs)\n  parent: System.Windows.ContentElement\n  isExternal: false\n  name: OnPreviewGotKeyboardFocus(KeyboardFocusChangedEventArgs)\n  nameWithType: ContentElement.OnPreviewGotKeyboardFocus(KeyboardFocusChangedEventArgs)\n  fullName: ContentElement.OnPreviewGotKeyboardFocus(KeyboardFocusChangedEventArgs)\n- uid: System.Windows.ContentElement.OnPreviewKeyDown(System.Windows.Input.KeyEventArgs)\n  parent: System.Windows.ContentElement\n  isExternal: false\n  name: OnPreviewKeyDown(KeyEventArgs)\n  nameWithType: ContentElement.OnPreviewKeyDown(KeyEventArgs)\n  fullName: ContentElement.OnPreviewKeyDown(KeyEventArgs)\n- uid: System.Windows.ContentElement.OnPreviewKeyUp(System.Windows.Input.KeyEventArgs)\n  parent: System.Windows.ContentElement\n  isExternal: false\n  name: OnPreviewKeyUp(KeyEventArgs)\n  nameWithType: ContentElement.OnPreviewKeyUp(KeyEventArgs)\n  fullName: ContentElement.OnPreviewKeyUp(KeyEventArgs)\n- uid: System.Windows.ContentElement.OnPreviewLostKeyboardFocus(System.Windows.Input.KeyboardFocusChangedEventArgs)\n  parent: System.Windows.ContentElement\n  isExternal: false\n  name: OnPreviewLostKeyboardFocus(KeyboardFocusChangedEventArgs)\n  nameWithType: ContentElement.OnPreviewLostKeyboardFocus(KeyboardFocusChangedEventArgs)\n  fullName: ContentElement.OnPreviewLostKeyboardFocus(KeyboardFocusChangedEventArgs)\n- uid: System.Windows.ContentElement.OnPreviewMouseDown(System.Windows.Input.MouseButtonEventArgs)\n  parent: System.Windows.ContentElement\n  isExternal: false\n  name: OnPreviewMouseDown(MouseButtonEventArgs)\n  nameWithType: ContentElement.OnPreviewMouseDown(MouseButtonEventArgs)\n  fullName: ContentElement.OnPreviewMouseDown(MouseButtonEventArgs)\n- uid: System.Windows.ContentElement.OnPreviewMouseLeftButtonDown(System.Windows.Input.MouseButtonEventArgs)\n  parent: System.Windows.ContentElement\n  isExternal: false\n  name: OnPreviewMouseLeftButtonDown(MouseButtonEventArgs)\n  nameWithType: ContentElement.OnPreviewMouseLeftButtonDown(MouseButtonEventArgs)\n  fullName: ContentElement.OnPreviewMouseLeftButtonDown(MouseButtonEventArgs)\n- uid: System.Windows.ContentElement.OnPreviewMouseLeftButtonUp(System.Windows.Input.MouseButtonEventArgs)\n  parent: System.Windows.ContentElement\n  isExternal: false\n  name: OnPreviewMouseLeftButtonUp(MouseButtonEventArgs)\n  nameWithType: ContentElement.OnPreviewMouseLeftButtonUp(MouseButtonEventArgs)\n  fullName: ContentElement.OnPreviewMouseLeftButtonUp(MouseButtonEventArgs)\n- uid: System.Windows.ContentElement.OnPreviewMouseMove(System.Windows.Input.MouseEventArgs)\n  parent: System.Windows.ContentElement\n  isExternal: false\n  name: OnPreviewMouseMove(MouseEventArgs)\n  nameWithType: ContentElement.OnPreviewMouseMove(MouseEventArgs)\n  fullName: ContentElement.OnPreviewMouseMove(MouseEventArgs)\n- uid: System.Windows.ContentElement.OnPreviewMouseRightButtonDown(System.Windows.Input.MouseButtonEventArgs)\n  parent: System.Windows.ContentElement\n  isExternal: false\n  name: OnPreviewMouseRightButtonDown(MouseButtonEventArgs)\n  nameWithType: ContentElement.OnPreviewMouseRightButtonDown(MouseButtonEventArgs)\n  fullName: ContentElement.OnPreviewMouseRightButtonDown(MouseButtonEventArgs)\n- uid: System.Windows.ContentElement.OnPreviewMouseRightButtonUp(System.Windows.Input.MouseButtonEventArgs)\n  parent: System.Windows.ContentElement\n  isExternal: false\n  name: OnPreviewMouseRightButtonUp(MouseButtonEventArgs)\n  nameWithType: ContentElement.OnPreviewMouseRightButtonUp(MouseButtonEventArgs)\n  fullName: ContentElement.OnPreviewMouseRightButtonUp(MouseButtonEventArgs)\n- uid: System.Windows.ContentElement.OnPreviewMouseUp(System.Windows.Input.MouseButtonEventArgs)\n  parent: System.Windows.ContentElement\n  isExternal: false\n  name: OnPreviewMouseUp(MouseButtonEventArgs)\n  nameWithType: ContentElement.OnPreviewMouseUp(MouseButtonEventArgs)\n  fullName: ContentElement.OnPreviewMouseUp(MouseButtonEventArgs)\n- uid: System.Windows.ContentElement.OnPreviewMouseWheel(System.Windows.Input.MouseWheelEventArgs)\n  parent: System.Windows.ContentElement\n  isExternal: false\n  name: OnPreviewMouseWheel(MouseWheelEventArgs)\n  nameWithType: ContentElement.OnPreviewMouseWheel(MouseWheelEventArgs)\n  fullName: ContentElement.OnPreviewMouseWheel(MouseWheelEventArgs)\n- uid: System.Windows.ContentElement.OnPreviewQueryContinueDrag(System.Windows.QueryContinueDragEventArgs)\n  parent: System.Windows.ContentElement\n  isExternal: false\n  name: OnPreviewQueryContinueDrag(QueryContinueDragEventArgs)\n  nameWithType: ContentElement.OnPreviewQueryContinueDrag(QueryContinueDragEventArgs)\n  fullName: ContentElement.OnPreviewQueryContinueDrag(QueryContinueDragEventArgs)\n- uid: System.Windows.ContentElement.OnPreviewStylusButtonDown(System.Windows.Input.StylusButtonEventArgs)\n  parent: System.Windows.ContentElement\n  isExternal: false\n  name: OnPreviewStylusButtonDown(StylusButtonEventArgs)\n  nameWithType: ContentElement.OnPreviewStylusButtonDown(StylusButtonEventArgs)\n  fullName: ContentElement.OnPreviewStylusButtonDown(StylusButtonEventArgs)\n- uid: System.Windows.ContentElement.OnPreviewStylusButtonUp(System.Windows.Input.StylusButtonEventArgs)\n  parent: System.Windows.ContentElement\n  isExternal: false\n  name: OnPreviewStylusButtonUp(StylusButtonEventArgs)\n  nameWithType: ContentElement.OnPreviewStylusButtonUp(StylusButtonEventArgs)\n  fullName: ContentElement.OnPreviewStylusButtonUp(StylusButtonEventArgs)\n- uid: System.Windows.ContentElement.OnPreviewStylusDown(System.Windows.Input.StylusDownEventArgs)\n  parent: System.Windows.ContentElement\n  isExternal: false\n  name: OnPreviewStylusDown(StylusDownEventArgs)\n  nameWithType: ContentElement.OnPreviewStylusDown(StylusDownEventArgs)\n  fullName: ContentElement.OnPreviewStylusDown(StylusDownEventArgs)\n- uid: System.Windows.ContentElement.OnPreviewStylusInAirMove(System.Windows.Input.StylusEventArgs)\n  parent: System.Windows.ContentElement\n  isExternal: false\n  name: OnPreviewStylusInAirMove(StylusEventArgs)\n  nameWithType: ContentElement.OnPreviewStylusInAirMove(StylusEventArgs)\n  fullName: ContentElement.OnPreviewStylusInAirMove(StylusEventArgs)\n- uid: System.Windows.ContentElement.OnPreviewStylusInRange(System.Windows.Input.StylusEventArgs)\n  parent: System.Windows.ContentElement\n  isExternal: false\n  name: OnPreviewStylusInRange(StylusEventArgs)\n  nameWithType: ContentElement.OnPreviewStylusInRange(StylusEventArgs)\n  fullName: ContentElement.OnPreviewStylusInRange(StylusEventArgs)\n- uid: System.Windows.ContentElement.OnPreviewStylusMove(System.Windows.Input.StylusEventArgs)\n  parent: System.Windows.ContentElement\n  isExternal: false\n  name: OnPreviewStylusMove(StylusEventArgs)\n  nameWithType: ContentElement.OnPreviewStylusMove(StylusEventArgs)\n  fullName: ContentElement.OnPreviewStylusMove(StylusEventArgs)\n- uid: System.Windows.ContentElement.OnPreviewStylusOutOfRange(System.Windows.Input.StylusEventArgs)\n  parent: System.Windows.ContentElement\n  isExternal: false\n  name: OnPreviewStylusOutOfRange(StylusEventArgs)\n  nameWithType: ContentElement.OnPreviewStylusOutOfRange(StylusEventArgs)\n  fullName: ContentElement.OnPreviewStylusOutOfRange(StylusEventArgs)\n- uid: System.Windows.ContentElement.OnPreviewStylusSystemGesture(System.Windows.Input.StylusSystemGestureEventArgs)\n  parent: System.Windows.ContentElement\n  isExternal: false\n  name: OnPreviewStylusSystemGesture(StylusSystemGestureEventArgs)\n  nameWithType: ContentElement.OnPreviewStylusSystemGesture(StylusSystemGestureEventArgs)\n  fullName: ContentElement.OnPreviewStylusSystemGesture(StylusSystemGestureEventArgs)\n- uid: System.Windows.ContentElement.OnPreviewStylusUp(System.Windows.Input.StylusEventArgs)\n  parent: System.Windows.ContentElement\n  isExternal: false\n  name: OnPreviewStylusUp(StylusEventArgs)\n  nameWithType: ContentElement.OnPreviewStylusUp(StylusEventArgs)\n  fullName: ContentElement.OnPreviewStylusUp(StylusEventArgs)\n- uid: System.Windows.ContentElement.OnPreviewTextInput(System.Windows.Input.TextCompositionEventArgs)\n  parent: System.Windows.ContentElement\n  isExternal: false\n  name: OnPreviewTextInput(TextCompositionEventArgs)\n  nameWithType: ContentElement.OnPreviewTextInput(TextCompositionEventArgs)\n  fullName: ContentElement.OnPreviewTextInput(TextCompositionEventArgs)\n- uid: System.Windows.ContentElement.OnPreviewTouchDown(System.Windows.Input.TouchEventArgs)\n  parent: System.Windows.ContentElement\n  isExternal: false\n  name: OnPreviewTouchDown(TouchEventArgs)\n  nameWithType: ContentElement.OnPreviewTouchDown(TouchEventArgs)\n  fullName: ContentElement.OnPreviewTouchDown(TouchEventArgs)\n- uid: System.Windows.ContentElement.OnPreviewTouchMove(System.Windows.Input.TouchEventArgs)\n  parent: System.Windows.ContentElement\n  isExternal: false\n  name: OnPreviewTouchMove(TouchEventArgs)\n  nameWithType: ContentElement.OnPreviewTouchMove(TouchEventArgs)\n  fullName: ContentElement.OnPreviewTouchMove(TouchEventArgs)\n- uid: System.Windows.ContentElement.OnPreviewTouchUp(System.Windows.Input.TouchEventArgs)\n  parent: System.Windows.ContentElement\n  isExternal: false\n  name: OnPreviewTouchUp(TouchEventArgs)\n  nameWithType: ContentElement.OnPreviewTouchUp(TouchEventArgs)\n  fullName: ContentElement.OnPreviewTouchUp(TouchEventArgs)\n- uid: System.Windows.ContentElement.OnQueryContinueDrag(System.Windows.QueryContinueDragEventArgs)\n  parent: System.Windows.ContentElement\n  isExternal: false\n  name: OnQueryContinueDrag(QueryContinueDragEventArgs)\n  nameWithType: ContentElement.OnQueryContinueDrag(QueryContinueDragEventArgs)\n  fullName: ContentElement.OnQueryContinueDrag(QueryContinueDragEventArgs)\n- uid: System.Windows.ContentElement.OnQueryCursor(System.Windows.Input.QueryCursorEventArgs)\n  parent: System.Windows.ContentElement\n  isExternal: false\n  name: OnQueryCursor(QueryCursorEventArgs)\n  nameWithType: ContentElement.OnQueryCursor(QueryCursorEventArgs)\n  fullName: ContentElement.OnQueryCursor(QueryCursorEventArgs)\n- uid: System.Windows.ContentElement.OnStylusButtonDown(System.Windows.Input.StylusButtonEventArgs)\n  parent: System.Windows.ContentElement\n  isExternal: false\n  name: OnStylusButtonDown(StylusButtonEventArgs)\n  nameWithType: ContentElement.OnStylusButtonDown(StylusButtonEventArgs)\n  fullName: ContentElement.OnStylusButtonDown(StylusButtonEventArgs)\n- uid: System.Windows.ContentElement.OnStylusButtonUp(System.Windows.Input.StylusButtonEventArgs)\n  parent: System.Windows.ContentElement\n  isExternal: false\n  name: OnStylusButtonUp(StylusButtonEventArgs)\n  nameWithType: ContentElement.OnStylusButtonUp(StylusButtonEventArgs)\n  fullName: ContentElement.OnStylusButtonUp(StylusButtonEventArgs)\n- uid: System.Windows.ContentElement.OnStylusDown(System.Windows.Input.StylusDownEventArgs)\n  parent: System.Windows.ContentElement\n  isExternal: false\n  name: OnStylusDown(StylusDownEventArgs)\n  nameWithType: ContentElement.OnStylusDown(StylusDownEventArgs)\n  fullName: ContentElement.OnStylusDown(StylusDownEventArgs)\n- uid: System.Windows.ContentElement.OnStylusEnter(System.Windows.Input.StylusEventArgs)\n  parent: System.Windows.ContentElement\n  isExternal: false\n  name: OnStylusEnter(StylusEventArgs)\n  nameWithType: ContentElement.OnStylusEnter(StylusEventArgs)\n  fullName: ContentElement.OnStylusEnter(StylusEventArgs)\n- uid: System.Windows.ContentElement.OnStylusInAirMove(System.Windows.Input.StylusEventArgs)\n  parent: System.Windows.ContentElement\n  isExternal: false\n  name: OnStylusInAirMove(StylusEventArgs)\n  nameWithType: ContentElement.OnStylusInAirMove(StylusEventArgs)\n  fullName: ContentElement.OnStylusInAirMove(StylusEventArgs)\n- uid: System.Windows.ContentElement.OnStylusInRange(System.Windows.Input.StylusEventArgs)\n  parent: System.Windows.ContentElement\n  isExternal: false\n  name: OnStylusInRange(StylusEventArgs)\n  nameWithType: ContentElement.OnStylusInRange(StylusEventArgs)\n  fullName: ContentElement.OnStylusInRange(StylusEventArgs)\n- uid: System.Windows.ContentElement.OnStylusLeave(System.Windows.Input.StylusEventArgs)\n  parent: System.Windows.ContentElement\n  isExternal: false\n  name: OnStylusLeave(StylusEventArgs)\n  nameWithType: ContentElement.OnStylusLeave(StylusEventArgs)\n  fullName: ContentElement.OnStylusLeave(StylusEventArgs)\n- uid: System.Windows.ContentElement.OnStylusMove(System.Windows.Input.StylusEventArgs)\n  parent: System.Windows.ContentElement\n  isExternal: false\n  name: OnStylusMove(StylusEventArgs)\n  nameWithType: ContentElement.OnStylusMove(StylusEventArgs)\n  fullName: ContentElement.OnStylusMove(StylusEventArgs)\n- uid: System.Windows.ContentElement.OnStylusOutOfRange(System.Windows.Input.StylusEventArgs)\n  parent: System.Windows.ContentElement\n  isExternal: false\n  name: OnStylusOutOfRange(StylusEventArgs)\n  nameWithType: ContentElement.OnStylusOutOfRange(StylusEventArgs)\n  fullName: ContentElement.OnStylusOutOfRange(StylusEventArgs)\n- uid: System.Windows.ContentElement.OnStylusSystemGesture(System.Windows.Input.StylusSystemGestureEventArgs)\n  parent: System.Windows.ContentElement\n  isExternal: false\n  name: OnStylusSystemGesture(StylusSystemGestureEventArgs)\n  nameWithType: ContentElement.OnStylusSystemGesture(StylusSystemGestureEventArgs)\n  fullName: ContentElement.OnStylusSystemGesture(StylusSystemGestureEventArgs)\n- uid: System.Windows.ContentElement.OnStylusUp(System.Windows.Input.StylusEventArgs)\n  parent: System.Windows.ContentElement\n  isExternal: false\n  name: OnStylusUp(StylusEventArgs)\n  nameWithType: ContentElement.OnStylusUp(StylusEventArgs)\n  fullName: ContentElement.OnStylusUp(StylusEventArgs)\n- uid: System.Windows.ContentElement.OnTextInput(System.Windows.Input.TextCompositionEventArgs)\n  parent: System.Windows.ContentElement\n  isExternal: false\n  name: OnTextInput(TextCompositionEventArgs)\n  nameWithType: ContentElement.OnTextInput(TextCompositionEventArgs)\n  fullName: ContentElement.OnTextInput(TextCompositionEventArgs)\n- uid: System.Windows.ContentElement.OnTouchDown(System.Windows.Input.TouchEventArgs)\n  parent: System.Windows.ContentElement\n  isExternal: false\n  name: OnTouchDown(TouchEventArgs)\n  nameWithType: ContentElement.OnTouchDown(TouchEventArgs)\n  fullName: ContentElement.OnTouchDown(TouchEventArgs)\n- uid: System.Windows.ContentElement.OnTouchEnter(System.Windows.Input.TouchEventArgs)\n  parent: System.Windows.ContentElement\n  isExternal: false\n  name: OnTouchEnter(TouchEventArgs)\n  nameWithType: ContentElement.OnTouchEnter(TouchEventArgs)\n  fullName: ContentElement.OnTouchEnter(TouchEventArgs)\n- uid: System.Windows.ContentElement.OnTouchLeave(System.Windows.Input.TouchEventArgs)\n  parent: System.Windows.ContentElement\n  isExternal: false\n  name: OnTouchLeave(TouchEventArgs)\n  nameWithType: ContentElement.OnTouchLeave(TouchEventArgs)\n  fullName: ContentElement.OnTouchLeave(TouchEventArgs)\n- uid: System.Windows.ContentElement.OnTouchMove(System.Windows.Input.TouchEventArgs)\n  parent: System.Windows.ContentElement\n  isExternal: false\n  name: OnTouchMove(TouchEventArgs)\n  nameWithType: ContentElement.OnTouchMove(TouchEventArgs)\n  fullName: ContentElement.OnTouchMove(TouchEventArgs)\n- uid: System.Windows.ContentElement.OnTouchUp(System.Windows.Input.TouchEventArgs)\n  parent: System.Windows.ContentElement\n  isExternal: false\n  name: OnTouchUp(TouchEventArgs)\n  nameWithType: ContentElement.OnTouchUp(TouchEventArgs)\n  fullName: ContentElement.OnTouchUp(TouchEventArgs)\n- uid: System.Windows.ContentElement.PreviewDragEnter\n  parent: System.Windows.ContentElement\n  isExternal: false\n  name: PreviewDragEnter\n  nameWithType: ContentElement.PreviewDragEnter\n  fullName: ContentElement.PreviewDragEnter\n- uid: System.Windows.ContentElement.PreviewDragEnterEvent\n  parent: System.Windows.ContentElement\n  isExternal: false\n  name: PreviewDragEnterEvent\n  nameWithType: ContentElement.PreviewDragEnterEvent\n  fullName: ContentElement.PreviewDragEnterEvent\n- uid: System.Windows.ContentElement.PreviewDragLeave\n  parent: System.Windows.ContentElement\n  isExternal: false\n  name: PreviewDragLeave\n  nameWithType: ContentElement.PreviewDragLeave\n  fullName: ContentElement.PreviewDragLeave\n- uid: System.Windows.ContentElement.PreviewDragLeaveEvent\n  parent: System.Windows.ContentElement\n  isExternal: false\n  name: PreviewDragLeaveEvent\n  nameWithType: ContentElement.PreviewDragLeaveEvent\n  fullName: ContentElement.PreviewDragLeaveEvent\n- uid: System.Windows.ContentElement.PreviewDragOver\n  parent: System.Windows.ContentElement\n  isExternal: false\n  name: PreviewDragOver\n  nameWithType: ContentElement.PreviewDragOver\n  fullName: ContentElement.PreviewDragOver\n- uid: System.Windows.ContentElement.PreviewDragOverEvent\n  parent: System.Windows.ContentElement\n  isExternal: false\n  name: PreviewDragOverEvent\n  nameWithType: ContentElement.PreviewDragOverEvent\n  fullName: ContentElement.PreviewDragOverEvent\n- uid: System.Windows.ContentElement.PreviewDrop\n  parent: System.Windows.ContentElement\n  isExternal: false\n  name: PreviewDrop\n  nameWithType: ContentElement.PreviewDrop\n  fullName: ContentElement.PreviewDrop\n- uid: System.Windows.ContentElement.PreviewDropEvent\n  parent: System.Windows.ContentElement\n  isExternal: false\n  name: PreviewDropEvent\n  nameWithType: ContentElement.PreviewDropEvent\n  fullName: ContentElement.PreviewDropEvent\n- uid: System.Windows.ContentElement.PreviewGiveFeedback\n  parent: System.Windows.ContentElement\n  isExternal: false\n  name: PreviewGiveFeedback\n  nameWithType: ContentElement.PreviewGiveFeedback\n  fullName: ContentElement.PreviewGiveFeedback\n- uid: System.Windows.ContentElement.PreviewGiveFeedbackEvent\n  parent: System.Windows.ContentElement\n  isExternal: false\n  name: PreviewGiveFeedbackEvent\n  nameWithType: ContentElement.PreviewGiveFeedbackEvent\n  fullName: ContentElement.PreviewGiveFeedbackEvent\n- uid: System.Windows.ContentElement.PreviewGotKeyboardFocus\n  parent: System.Windows.ContentElement\n  isExternal: false\n  name: PreviewGotKeyboardFocus\n  nameWithType: ContentElement.PreviewGotKeyboardFocus\n  fullName: ContentElement.PreviewGotKeyboardFocus\n- uid: System.Windows.ContentElement.PreviewGotKeyboardFocusEvent\n  parent: System.Windows.ContentElement\n  isExternal: false\n  name: PreviewGotKeyboardFocusEvent\n  nameWithType: ContentElement.PreviewGotKeyboardFocusEvent\n  fullName: ContentElement.PreviewGotKeyboardFocusEvent\n- uid: System.Windows.ContentElement.PreviewKeyDown\n  parent: System.Windows.ContentElement\n  isExternal: false\n  name: PreviewKeyDown\n  nameWithType: ContentElement.PreviewKeyDown\n  fullName: ContentElement.PreviewKeyDown\n- uid: System.Windows.ContentElement.PreviewKeyDownEvent\n  parent: System.Windows.ContentElement\n  isExternal: false\n  name: PreviewKeyDownEvent\n  nameWithType: ContentElement.PreviewKeyDownEvent\n  fullName: ContentElement.PreviewKeyDownEvent\n- uid: System.Windows.ContentElement.PreviewKeyUp\n  parent: System.Windows.ContentElement\n  isExternal: false\n  name: PreviewKeyUp\n  nameWithType: ContentElement.PreviewKeyUp\n  fullName: ContentElement.PreviewKeyUp\n- uid: System.Windows.ContentElement.PreviewKeyUpEvent\n  parent: System.Windows.ContentElement\n  isExternal: false\n  name: PreviewKeyUpEvent\n  nameWithType: ContentElement.PreviewKeyUpEvent\n  fullName: ContentElement.PreviewKeyUpEvent\n- uid: System.Windows.ContentElement.PreviewLostKeyboardFocus\n  parent: System.Windows.ContentElement\n  isExternal: false\n  name: PreviewLostKeyboardFocus\n  nameWithType: ContentElement.PreviewLostKeyboardFocus\n  fullName: ContentElement.PreviewLostKeyboardFocus\n- uid: System.Windows.ContentElement.PreviewLostKeyboardFocusEvent\n  parent: System.Windows.ContentElement\n  isExternal: false\n  name: PreviewLostKeyboardFocusEvent\n  nameWithType: ContentElement.PreviewLostKeyboardFocusEvent\n  fullName: ContentElement.PreviewLostKeyboardFocusEvent\n- uid: System.Windows.ContentElement.PreviewMouseDown\n  parent: System.Windows.ContentElement\n  isExternal: false\n  name: PreviewMouseDown\n  nameWithType: ContentElement.PreviewMouseDown\n  fullName: ContentElement.PreviewMouseDown\n- uid: System.Windows.ContentElement.PreviewMouseDownEvent\n  parent: System.Windows.ContentElement\n  isExternal: false\n  name: PreviewMouseDownEvent\n  nameWithType: ContentElement.PreviewMouseDownEvent\n  fullName: ContentElement.PreviewMouseDownEvent\n- uid: System.Windows.ContentElement.PreviewMouseLeftButtonDown\n  parent: System.Windows.ContentElement\n  isExternal: false\n  name: PreviewMouseLeftButtonDown\n  nameWithType: ContentElement.PreviewMouseLeftButtonDown\n  fullName: ContentElement.PreviewMouseLeftButtonDown\n- uid: System.Windows.ContentElement.PreviewMouseLeftButtonDownEvent\n  parent: System.Windows.ContentElement\n  isExternal: false\n  name: PreviewMouseLeftButtonDownEvent\n  nameWithType: ContentElement.PreviewMouseLeftButtonDownEvent\n  fullName: ContentElement.PreviewMouseLeftButtonDownEvent\n- uid: System.Windows.ContentElement.PreviewMouseLeftButtonUp\n  parent: System.Windows.ContentElement\n  isExternal: false\n  name: PreviewMouseLeftButtonUp\n  nameWithType: ContentElement.PreviewMouseLeftButtonUp\n  fullName: ContentElement.PreviewMouseLeftButtonUp\n- uid: System.Windows.ContentElement.PreviewMouseLeftButtonUpEvent\n  parent: System.Windows.ContentElement\n  isExternal: false\n  name: PreviewMouseLeftButtonUpEvent\n  nameWithType: ContentElement.PreviewMouseLeftButtonUpEvent\n  fullName: ContentElement.PreviewMouseLeftButtonUpEvent\n- uid: System.Windows.ContentElement.PreviewMouseMove\n  parent: System.Windows.ContentElement\n  isExternal: false\n  name: PreviewMouseMove\n  nameWithType: ContentElement.PreviewMouseMove\n  fullName: ContentElement.PreviewMouseMove\n- uid: System.Windows.ContentElement.PreviewMouseMoveEvent\n  parent: System.Windows.ContentElement\n  isExternal: false\n  name: PreviewMouseMoveEvent\n  nameWithType: ContentElement.PreviewMouseMoveEvent\n  fullName: ContentElement.PreviewMouseMoveEvent\n- uid: System.Windows.ContentElement.PreviewMouseRightButtonDown\n  parent: System.Windows.ContentElement\n  isExternal: false\n  name: PreviewMouseRightButtonDown\n  nameWithType: ContentElement.PreviewMouseRightButtonDown\n  fullName: ContentElement.PreviewMouseRightButtonDown\n- uid: System.Windows.ContentElement.PreviewMouseRightButtonDownEvent\n  parent: System.Windows.ContentElement\n  isExternal: false\n  name: PreviewMouseRightButtonDownEvent\n  nameWithType: ContentElement.PreviewMouseRightButtonDownEvent\n  fullName: ContentElement.PreviewMouseRightButtonDownEvent\n- uid: System.Windows.ContentElement.PreviewMouseRightButtonUp\n  parent: System.Windows.ContentElement\n  isExternal: false\n  name: PreviewMouseRightButtonUp\n  nameWithType: ContentElement.PreviewMouseRightButtonUp\n  fullName: ContentElement.PreviewMouseRightButtonUp\n- uid: System.Windows.ContentElement.PreviewMouseRightButtonUpEvent\n  parent: System.Windows.ContentElement\n  isExternal: false\n  name: PreviewMouseRightButtonUpEvent\n  nameWithType: ContentElement.PreviewMouseRightButtonUpEvent\n  fullName: ContentElement.PreviewMouseRightButtonUpEvent\n- uid: System.Windows.ContentElement.PreviewMouseUp\n  parent: System.Windows.ContentElement\n  isExternal: false\n  name: PreviewMouseUp\n  nameWithType: ContentElement.PreviewMouseUp\n  fullName: ContentElement.PreviewMouseUp\n- uid: System.Windows.ContentElement.PreviewMouseUpEvent\n  parent: System.Windows.ContentElement\n  isExternal: false\n  name: PreviewMouseUpEvent\n  nameWithType: ContentElement.PreviewMouseUpEvent\n  fullName: ContentElement.PreviewMouseUpEvent\n- uid: System.Windows.ContentElement.PreviewMouseWheel\n  parent: System.Windows.ContentElement\n  isExternal: false\n  name: PreviewMouseWheel\n  nameWithType: ContentElement.PreviewMouseWheel\n  fullName: ContentElement.PreviewMouseWheel\n- uid: System.Windows.ContentElement.PreviewMouseWheelEvent\n  parent: System.Windows.ContentElement\n  isExternal: false\n  name: PreviewMouseWheelEvent\n  nameWithType: ContentElement.PreviewMouseWheelEvent\n  fullName: ContentElement.PreviewMouseWheelEvent\n- uid: System.Windows.ContentElement.PreviewQueryContinueDrag\n  parent: System.Windows.ContentElement\n  isExternal: false\n  name: PreviewQueryContinueDrag\n  nameWithType: ContentElement.PreviewQueryContinueDrag\n  fullName: ContentElement.PreviewQueryContinueDrag\n- uid: System.Windows.ContentElement.PreviewQueryContinueDragEvent\n  parent: System.Windows.ContentElement\n  isExternal: false\n  name: PreviewQueryContinueDragEvent\n  nameWithType: ContentElement.PreviewQueryContinueDragEvent\n  fullName: ContentElement.PreviewQueryContinueDragEvent\n- uid: System.Windows.ContentElement.PreviewStylusButtonDown\n  parent: System.Windows.ContentElement\n  isExternal: false\n  name: PreviewStylusButtonDown\n  nameWithType: ContentElement.PreviewStylusButtonDown\n  fullName: ContentElement.PreviewStylusButtonDown\n- uid: System.Windows.ContentElement.PreviewStylusButtonDownEvent\n  parent: System.Windows.ContentElement\n  isExternal: false\n  name: PreviewStylusButtonDownEvent\n  nameWithType: ContentElement.PreviewStylusButtonDownEvent\n  fullName: ContentElement.PreviewStylusButtonDownEvent\n- uid: System.Windows.ContentElement.PreviewStylusButtonUp\n  parent: System.Windows.ContentElement\n  isExternal: false\n  name: PreviewStylusButtonUp\n  nameWithType: ContentElement.PreviewStylusButtonUp\n  fullName: ContentElement.PreviewStylusButtonUp\n- uid: System.Windows.ContentElement.PreviewStylusButtonUpEvent\n  parent: System.Windows.ContentElement\n  isExternal: false\n  name: PreviewStylusButtonUpEvent\n  nameWithType: ContentElement.PreviewStylusButtonUpEvent\n  fullName: ContentElement.PreviewStylusButtonUpEvent\n- uid: System.Windows.ContentElement.PreviewStylusDown\n  parent: System.Windows.ContentElement\n  isExternal: false\n  name: PreviewStylusDown\n  nameWithType: ContentElement.PreviewStylusDown\n  fullName: ContentElement.PreviewStylusDown\n- uid: System.Windows.ContentElement.PreviewStylusDownEvent\n  parent: System.Windows.ContentElement\n  isExternal: false\n  name: PreviewStylusDownEvent\n  nameWithType: ContentElement.PreviewStylusDownEvent\n  fullName: ContentElement.PreviewStylusDownEvent\n- uid: System.Windows.ContentElement.PreviewStylusInAirMove\n  parent: System.Windows.ContentElement\n  isExternal: false\n  name: PreviewStylusInAirMove\n  nameWithType: ContentElement.PreviewStylusInAirMove\n  fullName: ContentElement.PreviewStylusInAirMove\n- uid: System.Windows.ContentElement.PreviewStylusInAirMoveEvent\n  parent: System.Windows.ContentElement\n  isExternal: false\n  name: PreviewStylusInAirMoveEvent\n  nameWithType: ContentElement.PreviewStylusInAirMoveEvent\n  fullName: ContentElement.PreviewStylusInAirMoveEvent\n- uid: System.Windows.ContentElement.PreviewStylusInRange\n  parent: System.Windows.ContentElement\n  isExternal: false\n  name: PreviewStylusInRange\n  nameWithType: ContentElement.PreviewStylusInRange\n  fullName: ContentElement.PreviewStylusInRange\n- uid: System.Windows.ContentElement.PreviewStylusInRangeEvent\n  parent: System.Windows.ContentElement\n  isExternal: false\n  name: PreviewStylusInRangeEvent\n  nameWithType: ContentElement.PreviewStylusInRangeEvent\n  fullName: ContentElement.PreviewStylusInRangeEvent\n- uid: System.Windows.ContentElement.PreviewStylusMove\n  parent: System.Windows.ContentElement\n  isExternal: false\n  name: PreviewStylusMove\n  nameWithType: ContentElement.PreviewStylusMove\n  fullName: ContentElement.PreviewStylusMove\n- uid: System.Windows.ContentElement.PreviewStylusMoveEvent\n  parent: System.Windows.ContentElement\n  isExternal: false\n  name: PreviewStylusMoveEvent\n  nameWithType: ContentElement.PreviewStylusMoveEvent\n  fullName: ContentElement.PreviewStylusMoveEvent\n- uid: System.Windows.ContentElement.PreviewStylusOutOfRange\n  parent: System.Windows.ContentElement\n  isExternal: false\n  name: PreviewStylusOutOfRange\n  nameWithType: ContentElement.PreviewStylusOutOfRange\n  fullName: ContentElement.PreviewStylusOutOfRange\n- uid: System.Windows.ContentElement.PreviewStylusOutOfRangeEvent\n  parent: System.Windows.ContentElement\n  isExternal: false\n  name: PreviewStylusOutOfRangeEvent\n  nameWithType: ContentElement.PreviewStylusOutOfRangeEvent\n  fullName: ContentElement.PreviewStylusOutOfRangeEvent\n- uid: System.Windows.ContentElement.PreviewStylusSystemGesture\n  parent: System.Windows.ContentElement\n  isExternal: false\n  name: PreviewStylusSystemGesture\n  nameWithType: ContentElement.PreviewStylusSystemGesture\n  fullName: ContentElement.PreviewStylusSystemGesture\n- uid: System.Windows.ContentElement.PreviewStylusSystemGestureEvent\n  parent: System.Windows.ContentElement\n  isExternal: false\n  name: PreviewStylusSystemGestureEvent\n  nameWithType: ContentElement.PreviewStylusSystemGestureEvent\n  fullName: ContentElement.PreviewStylusSystemGestureEvent\n- uid: System.Windows.ContentElement.PreviewStylusUp\n  parent: System.Windows.ContentElement\n  isExternal: false\n  name: PreviewStylusUp\n  nameWithType: ContentElement.PreviewStylusUp\n  fullName: ContentElement.PreviewStylusUp\n- uid: System.Windows.ContentElement.PreviewStylusUpEvent\n  parent: System.Windows.ContentElement\n  isExternal: false\n  name: PreviewStylusUpEvent\n  nameWithType: ContentElement.PreviewStylusUpEvent\n  fullName: ContentElement.PreviewStylusUpEvent\n- uid: System.Windows.ContentElement.PreviewTextInput\n  parent: System.Windows.ContentElement\n  isExternal: false\n  name: PreviewTextInput\n  nameWithType: ContentElement.PreviewTextInput\n  fullName: ContentElement.PreviewTextInput\n- uid: System.Windows.ContentElement.PreviewTextInputEvent\n  parent: System.Windows.ContentElement\n  isExternal: false\n  name: PreviewTextInputEvent\n  nameWithType: ContentElement.PreviewTextInputEvent\n  fullName: ContentElement.PreviewTextInputEvent\n- uid: System.Windows.ContentElement.PreviewTouchDown\n  parent: System.Windows.ContentElement\n  isExternal: false\n  name: PreviewTouchDown\n  nameWithType: ContentElement.PreviewTouchDown\n  fullName: ContentElement.PreviewTouchDown\n- uid: System.Windows.ContentElement.PreviewTouchDownEvent\n  parent: System.Windows.ContentElement\n  isExternal: false\n  name: PreviewTouchDownEvent\n  nameWithType: ContentElement.PreviewTouchDownEvent\n  fullName: ContentElement.PreviewTouchDownEvent\n- uid: System.Windows.ContentElement.PreviewTouchMove\n  parent: System.Windows.ContentElement\n  isExternal: false\n  name: PreviewTouchMove\n  nameWithType: ContentElement.PreviewTouchMove\n  fullName: ContentElement.PreviewTouchMove\n- uid: System.Windows.ContentElement.PreviewTouchMoveEvent\n  parent: System.Windows.ContentElement\n  isExternal: false\n  name: PreviewTouchMoveEvent\n  nameWithType: ContentElement.PreviewTouchMoveEvent\n  fullName: ContentElement.PreviewTouchMoveEvent\n- uid: System.Windows.ContentElement.PreviewTouchUp\n  parent: System.Windows.ContentElement\n  isExternal: false\n  name: PreviewTouchUp\n  nameWithType: ContentElement.PreviewTouchUp\n  fullName: ContentElement.PreviewTouchUp\n- uid: System.Windows.ContentElement.PreviewTouchUpEvent\n  parent: System.Windows.ContentElement\n  isExternal: false\n  name: PreviewTouchUpEvent\n  nameWithType: ContentElement.PreviewTouchUpEvent\n  fullName: ContentElement.PreviewTouchUpEvent\n- uid: System.Windows.ContentElement.QueryContinueDrag\n  parent: System.Windows.ContentElement\n  isExternal: false\n  name: QueryContinueDrag\n  nameWithType: ContentElement.QueryContinueDrag\n  fullName: ContentElement.QueryContinueDrag\n- uid: System.Windows.ContentElement.QueryContinueDragEvent\n  parent: System.Windows.ContentElement\n  isExternal: false\n  name: QueryContinueDragEvent\n  nameWithType: ContentElement.QueryContinueDragEvent\n  fullName: ContentElement.QueryContinueDragEvent\n- uid: System.Windows.ContentElement.QueryCursor\n  parent: System.Windows.ContentElement\n  isExternal: false\n  name: QueryCursor\n  nameWithType: ContentElement.QueryCursor\n  fullName: ContentElement.QueryCursor\n- uid: System.Windows.ContentElement.QueryCursorEvent\n  parent: System.Windows.ContentElement\n  isExternal: false\n  name: QueryCursorEvent\n  nameWithType: ContentElement.QueryCursorEvent\n  fullName: ContentElement.QueryCursorEvent\n- uid: System.Windows.ContentElement.RaiseEvent(System.Windows.RoutedEventArgs)\n  parent: System.Windows.ContentElement\n  isExternal: false\n  name: RaiseEvent(RoutedEventArgs)\n  nameWithType: ContentElement.RaiseEvent(RoutedEventArgs)\n  fullName: ContentElement.RaiseEvent(RoutedEventArgs)\n- uid: System.Windows.ContentElement.ReleaseAllTouchCaptures\n  parent: System.Windows.ContentElement\n  isExternal: false\n  name: ReleaseAllTouchCaptures()\n  nameWithType: ContentElement.ReleaseAllTouchCaptures()\n  fullName: ContentElement.ReleaseAllTouchCaptures()\n- uid: System.Windows.ContentElement.ReleaseMouseCapture\n  parent: System.Windows.ContentElement\n  isExternal: false\n  name: ReleaseMouseCapture()\n  nameWithType: ContentElement.ReleaseMouseCapture()\n  fullName: ContentElement.ReleaseMouseCapture()\n- uid: System.Windows.ContentElement.ReleaseStylusCapture\n  parent: System.Windows.ContentElement\n  isExternal: false\n  name: ReleaseStylusCapture()\n  nameWithType: ContentElement.ReleaseStylusCapture()\n  fullName: ContentElement.ReleaseStylusCapture()\n- uid: System.Windows.ContentElement.ReleaseTouchCapture(System.Windows.Input.TouchDevice)\n  parent: System.Windows.ContentElement\n  isExternal: false\n  name: ReleaseTouchCapture(TouchDevice)\n  nameWithType: ContentElement.ReleaseTouchCapture(TouchDevice)\n  fullName: ContentElement.ReleaseTouchCapture(TouchDevice)\n- uid: System.Windows.ContentElement.RemoveHandler(System.Windows.RoutedEvent,System.Delegate)\n  parent: System.Windows.ContentElement\n  isExternal: false\n  name: RemoveHandler(RoutedEvent, Delegate)\n  nameWithType: ContentElement.RemoveHandler(RoutedEvent, Delegate)\n  fullName: ContentElement.RemoveHandler(RoutedEvent, Delegate)\n- uid: System.Windows.ContentElement.ShouldSerializeCommandBindings\n  parent: System.Windows.ContentElement\n  isExternal: false\n  name: ShouldSerializeCommandBindings()\n  nameWithType: ContentElement.ShouldSerializeCommandBindings()\n  fullName: ContentElement.ShouldSerializeCommandBindings()\n- uid: System.Windows.ContentElement.ShouldSerializeInputBindings\n  parent: System.Windows.ContentElement\n  isExternal: false\n  name: ShouldSerializeInputBindings()\n  nameWithType: ContentElement.ShouldSerializeInputBindings()\n  fullName: ContentElement.ShouldSerializeInputBindings()\n- uid: System.Windows.ContentElement.StylusButtonDown\n  parent: System.Windows.ContentElement\n  isExternal: false\n  name: StylusButtonDown\n  nameWithType: ContentElement.StylusButtonDown\n  fullName: ContentElement.StylusButtonDown\n- uid: System.Windows.ContentElement.StylusButtonDownEvent\n  parent: System.Windows.ContentElement\n  isExternal: false\n  name: StylusButtonDownEvent\n  nameWithType: ContentElement.StylusButtonDownEvent\n  fullName: ContentElement.StylusButtonDownEvent\n- uid: System.Windows.ContentElement.StylusButtonUp\n  parent: System.Windows.ContentElement\n  isExternal: false\n  name: StylusButtonUp\n  nameWithType: ContentElement.StylusButtonUp\n  fullName: ContentElement.StylusButtonUp\n- uid: System.Windows.ContentElement.StylusButtonUpEvent\n  parent: System.Windows.ContentElement\n  isExternal: false\n  name: StylusButtonUpEvent\n  nameWithType: ContentElement.StylusButtonUpEvent\n  fullName: ContentElement.StylusButtonUpEvent\n- uid: System.Windows.ContentElement.StylusDown\n  parent: System.Windows.ContentElement\n  isExternal: false\n  name: StylusDown\n  nameWithType: ContentElement.StylusDown\n  fullName: ContentElement.StylusDown\n- uid: System.Windows.ContentElement.StylusDownEvent\n  parent: System.Windows.ContentElement\n  isExternal: false\n  name: StylusDownEvent\n  nameWithType: ContentElement.StylusDownEvent\n  fullName: ContentElement.StylusDownEvent\n- uid: System.Windows.ContentElement.StylusEnter\n  parent: System.Windows.ContentElement\n  isExternal: false\n  name: StylusEnter\n  nameWithType: ContentElement.StylusEnter\n  fullName: ContentElement.StylusEnter\n- uid: System.Windows.ContentElement.StylusEnterEvent\n  parent: System.Windows.ContentElement\n  isExternal: false\n  name: StylusEnterEvent\n  nameWithType: ContentElement.StylusEnterEvent\n  fullName: ContentElement.StylusEnterEvent\n- uid: System.Windows.ContentElement.StylusInAirMove\n  parent: System.Windows.ContentElement\n  isExternal: false\n  name: StylusInAirMove\n  nameWithType: ContentElement.StylusInAirMove\n  fullName: ContentElement.StylusInAirMove\n- uid: System.Windows.ContentElement.StylusInAirMoveEvent\n  parent: System.Windows.ContentElement\n  isExternal: false\n  name: StylusInAirMoveEvent\n  nameWithType: ContentElement.StylusInAirMoveEvent\n  fullName: ContentElement.StylusInAirMoveEvent\n- uid: System.Windows.ContentElement.StylusInRange\n  parent: System.Windows.ContentElement\n  isExternal: false\n  name: StylusInRange\n  nameWithType: ContentElement.StylusInRange\n  fullName: ContentElement.StylusInRange\n- uid: System.Windows.ContentElement.StylusInRangeEvent\n  parent: System.Windows.ContentElement\n  isExternal: false\n  name: StylusInRangeEvent\n  nameWithType: ContentElement.StylusInRangeEvent\n  fullName: ContentElement.StylusInRangeEvent\n- uid: System.Windows.ContentElement.StylusLeave\n  parent: System.Windows.ContentElement\n  isExternal: false\n  name: StylusLeave\n  nameWithType: ContentElement.StylusLeave\n  fullName: ContentElement.StylusLeave\n- uid: System.Windows.ContentElement.StylusLeaveEvent\n  parent: System.Windows.ContentElement\n  isExternal: false\n  name: StylusLeaveEvent\n  nameWithType: ContentElement.StylusLeaveEvent\n  fullName: ContentElement.StylusLeaveEvent\n- uid: System.Windows.ContentElement.StylusMove\n  parent: System.Windows.ContentElement\n  isExternal: false\n  name: StylusMove\n  nameWithType: ContentElement.StylusMove\n  fullName: ContentElement.StylusMove\n- uid: System.Windows.ContentElement.StylusMoveEvent\n  parent: System.Windows.ContentElement\n  isExternal: false\n  name: StylusMoveEvent\n  nameWithType: ContentElement.StylusMoveEvent\n  fullName: ContentElement.StylusMoveEvent\n- uid: System.Windows.ContentElement.StylusOutOfRange\n  parent: System.Windows.ContentElement\n  isExternal: false\n  name: StylusOutOfRange\n  nameWithType: ContentElement.StylusOutOfRange\n  fullName: ContentElement.StylusOutOfRange\n- uid: System.Windows.ContentElement.StylusOutOfRangeEvent\n  parent: System.Windows.ContentElement\n  isExternal: false\n  name: StylusOutOfRangeEvent\n  nameWithType: ContentElement.StylusOutOfRangeEvent\n  fullName: ContentElement.StylusOutOfRangeEvent\n- uid: System.Windows.ContentElement.StylusSystemGesture\n  parent: System.Windows.ContentElement\n  isExternal: false\n  name: StylusSystemGesture\n  nameWithType: ContentElement.StylusSystemGesture\n  fullName: ContentElement.StylusSystemGesture\n- uid: System.Windows.ContentElement.StylusSystemGestureEvent\n  parent: System.Windows.ContentElement\n  isExternal: false\n  name: StylusSystemGestureEvent\n  nameWithType: ContentElement.StylusSystemGestureEvent\n  fullName: ContentElement.StylusSystemGestureEvent\n- uid: System.Windows.ContentElement.StylusUp\n  parent: System.Windows.ContentElement\n  isExternal: false\n  name: StylusUp\n  nameWithType: ContentElement.StylusUp\n  fullName: ContentElement.StylusUp\n- uid: System.Windows.ContentElement.StylusUpEvent\n  parent: System.Windows.ContentElement\n  isExternal: false\n  name: StylusUpEvent\n  nameWithType: ContentElement.StylusUpEvent\n  fullName: ContentElement.StylusUpEvent\n- uid: System.Windows.ContentElement.TextInput\n  parent: System.Windows.ContentElement\n  isExternal: false\n  name: TextInput\n  nameWithType: ContentElement.TextInput\n  fullName: ContentElement.TextInput\n- uid: System.Windows.ContentElement.TextInputEvent\n  parent: System.Windows.ContentElement\n  isExternal: false\n  name: TextInputEvent\n  nameWithType: ContentElement.TextInputEvent\n  fullName: ContentElement.TextInputEvent\n- uid: System.Windows.ContentElement.TouchDown\n  parent: System.Windows.ContentElement\n  isExternal: false\n  name: TouchDown\n  nameWithType: ContentElement.TouchDown\n  fullName: ContentElement.TouchDown\n- uid: System.Windows.ContentElement.TouchDownEvent\n  parent: System.Windows.ContentElement\n  isExternal: false\n  name: TouchDownEvent\n  nameWithType: ContentElement.TouchDownEvent\n  fullName: ContentElement.TouchDownEvent\n- uid: System.Windows.ContentElement.TouchEnter\n  parent: System.Windows.ContentElement\n  isExternal: false\n  name: TouchEnter\n  nameWithType: ContentElement.TouchEnter\n  fullName: ContentElement.TouchEnter\n- uid: System.Windows.ContentElement.TouchEnterEvent\n  parent: System.Windows.ContentElement\n  isExternal: false\n  name: TouchEnterEvent\n  nameWithType: ContentElement.TouchEnterEvent\n  fullName: ContentElement.TouchEnterEvent\n- uid: System.Windows.ContentElement.TouchesCaptured\n  parent: System.Windows.ContentElement\n  isExternal: false\n  name: TouchesCaptured\n  nameWithType: ContentElement.TouchesCaptured\n  fullName: ContentElement.TouchesCaptured\n- uid: System.Windows.ContentElement.TouchesCapturedWithin\n  parent: System.Windows.ContentElement\n  isExternal: false\n  name: TouchesCapturedWithin\n  nameWithType: ContentElement.TouchesCapturedWithin\n  fullName: ContentElement.TouchesCapturedWithin\n- uid: System.Windows.ContentElement.TouchesDirectlyOver\n  parent: System.Windows.ContentElement\n  isExternal: false\n  name: TouchesDirectlyOver\n  nameWithType: ContentElement.TouchesDirectlyOver\n  fullName: ContentElement.TouchesDirectlyOver\n- uid: System.Windows.ContentElement.TouchesOver\n  parent: System.Windows.ContentElement\n  isExternal: false\n  name: TouchesOver\n  nameWithType: ContentElement.TouchesOver\n  fullName: ContentElement.TouchesOver\n- uid: System.Windows.ContentElement.TouchLeave\n  parent: System.Windows.ContentElement\n  isExternal: false\n  name: TouchLeave\n  nameWithType: ContentElement.TouchLeave\n  fullName: ContentElement.TouchLeave\n- uid: System.Windows.ContentElement.TouchLeaveEvent\n  parent: System.Windows.ContentElement\n  isExternal: false\n  name: TouchLeaveEvent\n  nameWithType: ContentElement.TouchLeaveEvent\n  fullName: ContentElement.TouchLeaveEvent\n- uid: System.Windows.ContentElement.TouchMove\n  parent: System.Windows.ContentElement\n  isExternal: false\n  name: TouchMove\n  nameWithType: ContentElement.TouchMove\n  fullName: ContentElement.TouchMove\n- uid: System.Windows.ContentElement.TouchMoveEvent\n  parent: System.Windows.ContentElement\n  isExternal: false\n  name: TouchMoveEvent\n  nameWithType: ContentElement.TouchMoveEvent\n  fullName: ContentElement.TouchMoveEvent\n- uid: System.Windows.ContentElement.TouchUp\n  parent: System.Windows.ContentElement\n  isExternal: false\n  name: TouchUp\n  nameWithType: ContentElement.TouchUp\n  fullName: ContentElement.TouchUp\n- uid: System.Windows.ContentElement.TouchUpEvent\n  parent: System.Windows.ContentElement\n  isExternal: false\n  name: TouchUpEvent\n  nameWithType: ContentElement.TouchUpEvent\n  fullName: ContentElement.TouchUpEvent\n- uid: System.ComponentModel.ISupportInitialize\n  parent: System.ComponentModel\n  isExternal: false\n  name: ISupportInitialize\n  nameWithType: ISupportInitialize\n  fullName: System.ComponentModel.ISupportInitialize\n- uid: System.Windows.IFrameworkInputElement\n  parent: System.Windows\n  isExternal: false\n  name: IFrameworkInputElement\n  nameWithType: IFrameworkInputElement\n  fullName: System.Windows.IFrameworkInputElement\n- uid: System.Windows.Markup.IQueryAmbient\n  parent: System.Windows.Markup\n  isExternal: false\n  name: IQueryAmbient\n  nameWithType: IQueryAmbient\n  fullName: System.Windows.Markup.IQueryAmbient\n"}