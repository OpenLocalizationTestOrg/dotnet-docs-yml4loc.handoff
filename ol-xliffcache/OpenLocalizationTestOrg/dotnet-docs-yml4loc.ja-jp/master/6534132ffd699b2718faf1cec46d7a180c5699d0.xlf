<?xml version="1.0"?>
<xliff version="1.2" xmlns="urn:oasis:names:tc:xliff:document:1.2" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:schemaLocation="urn:oasis:names:tc:xliff:document:1.2 xliff-core-1.2-transitional.xsd">
  <file datatype="xml" original="markdown" source-language="en-US" target-language="ja-jp">
    <header>
      <tool tool-id="mdxliff" tool-name="mdxliff" tool-version="1.0-fdd610b" tool-company="Microsoft" />
      <xliffext:olfilehash xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">6534132ffd699b2718faf1cec46d7a180c5699d0</xliffext:olfilehash>
      <xliffext:olfilepath xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">System.ComponentModel.INotifyDataErrorInfo.yml</xliffext:olfilepath>
      <xliffext:oltranslationpriority xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">net47</xliffext:oltranslationpriority>
      <xliffext:oltranslationtype xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">Human Translation</xliffext:oltranslationtype>
      <xliffext:olskeletonhash xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">7087d385cd527dcf1ffae35bb947c4d5fbb17bd7</xliffext:olskeletonhash>
      <xliffext:olxliffhash xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">354cb7501fe70014af0ddd4246b20fe6c78a14f9</xliffext:olxliffhash>
    </header>
    <body>
      <group id="content" extype="content">
        <trans-unit id="101" translate="yes" xml:space="preserve">
          <source>Defines members that data entity classes can implement to provide custom synchronous and asynchronous validation support.</source>
        </trans-unit>
        <trans-unit id="102" translate="yes" xml:space="preserve" extradata="MT">
          <source>This interface enables data entity classes to implement custom validation rules and expose validation results asynchronously.</source>
        </trans-unit>
        <trans-unit id="103" translate="yes" xml:space="preserve" extradata="MT">
          <source>This interface also supports custom error objects, multiple errors per property, cross-property errors, and entity-level errors.</source>
        </trans-unit>
        <trans-unit id="104" translate="yes" xml:space="preserve" extradata="MT">
          <source>Cross-property errors are errors that affect multiple properties.</source>
        </trans-unit>
        <trans-unit id="105" translate="yes" xml:space="preserve" extradata="MT">
          <source>You can associate these errors with one or all of the affected properties, or you can treat them as entity-level errors.</source>
        </trans-unit>
        <trans-unit id="106" translate="yes" xml:space="preserve" extradata="MT">
          <source>Entity-level errors are errors that either affect multiple properties or affect the entire entity without affecting a particular property.</source>
        </trans-unit>
        <trans-unit id="107" translate="yes" xml:space="preserve">
          <source>Occurs when the validation errors have changed for a property or for the entire entity.</source>
        </trans-unit>
        <trans-unit id="108" translate="yes" xml:space="preserve" extradata="MT">
          <source>The implementing class should raise this event on the user interface thread whenever the <ph id="ph1">&lt;xref:System.ComponentModel.INotifyDataErrorInfo.GetErrors%2A&gt;</ph> return value changes, even if the return value implements <ph id="ph2">&lt;xref:System.Collections.Specialized.INotifyCollectionChanged&gt;</ph>.</source>
        </trans-unit>
        <trans-unit id="109" translate="yes" xml:space="preserve">
          <source>Gets the validation errors for a specified property or for the entire entity.</source>
        </trans-unit>
        <trans-unit id="110" translate="yes" xml:space="preserve" extradata="MT">
          <source>This method returns an <ph id="ph1">&lt;xref:System.Collections.IEnumerable&gt;</ph> that can change as asynchronous validation rules finish processing.</source>
        </trans-unit>
        <trans-unit id="111" translate="yes" xml:space="preserve" extradata="MT">
          <source>This enables the binding engine to automatically update the user interface validation feedback when errors are added, removed, or modified.</source>
        </trans-unit>
        <trans-unit id="112" translate="yes" xml:space="preserve" extradata="MT">
          <source>The return value can change to a different <ph id="ph1">&lt;xref:System.Collections.IEnumerable&gt;</ph>, or it can reuse a previously returned <ph id="ph2">&lt;xref:System.Collections.IEnumerable&gt;</ph> and change its contents.</source>
        </trans-unit>
        <trans-unit id="113" translate="yes" xml:space="preserve" extradata="MT">
          <source>Any changes to the return value should raise the <ph id="ph1">&lt;xref:System.ComponentModel.INotifyDataErrorInfo.ErrorsChanged&gt;</ph> event, even if the return value implements <ph id="ph2">&lt;xref:System.Collections.Specialized.INotifyCollectionChanged&gt;</ph>.</source>
        </trans-unit>
        <trans-unit id="114" translate="yes" xml:space="preserve">
          <source>The name of the property to retrieve validation errors for; or <ph id="ph1">`null`</ph> or <ph id="ph2">&lt;xref href="System.String.Empty"&gt;&lt;/xref&gt;</ph>, to retrieve entity-level errors.</source>
        </trans-unit>
        <trans-unit id="115" translate="yes" xml:space="preserve">
          <source>The validation errors for the property or entity.</source>
        </trans-unit>
        <trans-unit id="116" translate="yes" xml:space="preserve">
          <source>Gets a value that indicates whether the entity has validation errors.</source>
        </trans-unit>
        <trans-unit id="117" translate="yes" xml:space="preserve" extradata="MT">
          <source>This property returns <ph id="ph1">`false`</ph> if there are no known entity-level or property-level validation errors for the entity at the time it is accessed.</source>
        </trans-unit>
        <trans-unit id="118" translate="yes" xml:space="preserve" extradata="MT">
          <source>However, some validation rules may still be running asynchronously as described for the <ph id="ph1">&lt;xref:System.ComponentModel.INotifyDataErrorInfo.GetErrors%2A&gt;</ph> method.</source>
        </trans-unit>
        <trans-unit id="119" translate="yes" xml:space="preserve">
          <source><ph id="ph1">`true`</ph> if the entity currently has validation errors; otherwise, <ph id="ph2">`false`</ph>.</source>
        </trans-unit>
      </group>
    </body>
  </file>
</xliff>