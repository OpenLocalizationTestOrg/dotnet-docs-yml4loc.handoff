### YamlMime:ManagedReference
items:
- uid: System.Windows.Input.TraversalRequest
  commentId: T:System.Windows.Input.TraversalRequest
  id: TraversalRequest
  children:
  - System.Windows.Input.TraversalRequest.#ctor(System.Windows.Input.FocusNavigationDirection)
  - System.Windows.Input.TraversalRequest.FocusNavigationDirection
  - System.Windows.Input.TraversalRequest.Wrapped
  langs:
  - csharp
  name: TraversalRequest
  nameWithType: TraversalRequest
  fullName: System.Windows.Input.TraversalRequest
  type: Class
  assemblies:
  - WindowsBase
  namespace: System.Windows.Input
  summary: Represents a request to move focus to another control.
  remarks: "This class is used as an input parameter for the <xref:System.Windows.UIElement.MoveFocus%2A?displayProperty=fullName> method. The <xref:System.Windows.UIElement.MoveFocus%2A> method has a WPF framework-level override that provides a more practical implementation (<xref:System.Windows.FrameworkElement.MoveFocus%2A?displayProperty=fullName>), as well as a parallel implementation on <xref:System.Windows.ContentElement> and <xref:System.Windows.FrameworkContentElement>. You typically will set properties on <xref:System.Windows.Input.TraversalRequest> in order to customize the focusing behavior when you request that the focus be moved to another element.  \n  \n This class is also used as input parameters for the following methods:  \n  \n-   <xref:System.Windows.Interop.IKeyboardInputSink.TabInto%2A>, and implementations of that method that are used for interoperation (<xref:System.Windows.Forms.Integration.WindowsFormsHost.TabInto%2A>).  \n  \n-   <xref:System.Windows.Interop.IKeyboardInputSite.OnNoMoreTabStops%2A>."
  example:
  - "The following example creates a <xref:System.Windows.Input.TraversalRequest> instance as input for a <xref:System.Windows.FrameworkElement.MoveFocus%2A?displayProperty=fullName> call.  \n  \n [!code-csharp[FocusSample#FocusSampleMoveFocus](~/samples/snippets/csharp/VS_Snippets_Wpf/FocusSample/CSharp/Window1.xaml.cs#focussamplemovefocus)]\n [!code-vb[FocusSample#FocusSampleMoveFocus](~/samples/snippets/visualbasic/VS_Snippets_Wpf/FocusSample/visualbasic/window1.xaml.vb#focussamplemovefocus)]"
  syntax:
    content: public class TraversalRequest
  inheritance:
  - System.Object
  implements: []
  inheritedMembers:
  - System.Object.Equals(System.Object)
  - System.Object.Equals(System.Object,System.Object)
  - System.Object.GetHashCode
  - System.Object.GetType
  - System.Object.MemberwiseClone
  - System.Object.ReferenceEquals(System.Object,System.Object)
  - System.Object.ToString
  version:
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  monikers:
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Windows.Input/TraversalRequest.xml
  ms.technology:
  - dotnet-wpf
  author: stevehoag
  ms.author: shoag
  manager: wpickett
- uid: System.Windows.Input.TraversalRequest.#ctor(System.Windows.Input.FocusNavigationDirection)
  commentId: M:System.Windows.Input.TraversalRequest.#ctor(System.Windows.Input.FocusNavigationDirection)
  id: '#ctor(System.Windows.Input.FocusNavigationDirection)'
  parent: System.Windows.Input.TraversalRequest
  langs:
  - csharp
  name: TraversalRequest(FocusNavigationDirection)
  nameWithType: TraversalRequest.TraversalRequest(FocusNavigationDirection)
  fullName: TraversalRequest.TraversalRequest(FocusNavigationDirection)
  type: Constructor
  assemblies:
  - WindowsBase
  namespace: System.Windows.Input
  summary: Initializes a new instance of the <xref href="System.Windows.Input.TraversalRequest"></xref> class.
  remarks: ''
  example:
  - "The following example creates a <xref:System.Windows.Input.TraversalRequest> instance as input for a <xref:System.Windows.FrameworkElement.MoveFocus%2A?displayProperty=fullName> call.  \n  \n [!code-csharp[FocusSample#FocusSampleMoveFocus](~/samples/snippets/csharp/VS_Snippets_Wpf/FocusSample/CSharp/Window1.xaml.cs#focussamplemovefocus)]\n [!code-vb[FocusSample#FocusSampleMoveFocus](~/samples/snippets/visualbasic/VS_Snippets_Wpf/FocusSample/visualbasic/window1.xaml.vb#focussamplemovefocus)]"
  syntax:
    content: public TraversalRequest (System.Windows.Input.FocusNavigationDirection focusNavigationDirection);
    parameters:
    - id: focusNavigationDirection
      type: System.Windows.Input.FocusNavigationDirection
      description: The intended direction of the focus traversal, as a value of the enumeration.
  overload: System.Windows.Input.TraversalRequest.#ctor*
  exceptions: []
  version:
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  monikers:
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Windows.Input/TraversalRequest.xml
  ms.technology:
  - dotnet-wpf
  author: stevehoag
  ms.author: shoag
  manager: wpickett
- uid: System.Windows.Input.TraversalRequest.FocusNavigationDirection
  commentId: P:System.Windows.Input.TraversalRequest.FocusNavigationDirection
  id: FocusNavigationDirection
  parent: System.Windows.Input.TraversalRequest
  langs:
  - csharp
  name: FocusNavigationDirection
  nameWithType: TraversalRequest.FocusNavigationDirection
  fullName: TraversalRequest.FocusNavigationDirection
  type: Property
  assemblies:
  - WindowsBase
  namespace: System.Windows.Input
  summary: Gets the traversal direction.
  remarks: This property is read-only because the <xref:System.Windows.Input.FocusNavigationDirection> is a required input parameter of the <xref:System.Windows.Input.TraversalRequest> class constructor.
  syntax:
    content: public System.Windows.Input.FocusNavigationDirection FocusNavigationDirection { get; }
    return:
      type: System.Windows.Input.FocusNavigationDirection
      description: One of the traversal direction enumeration values.
  overload: System.Windows.Input.TraversalRequest.FocusNavigationDirection*
  exceptions: []
  version:
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  monikers:
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Windows.Input/TraversalRequest.xml
  ms.technology:
  - dotnet-wpf
  author: stevehoag
  ms.author: shoag
  manager: wpickett
- uid: System.Windows.Input.TraversalRequest.Wrapped
  commentId: P:System.Windows.Input.TraversalRequest.Wrapped
  id: Wrapped
  parent: System.Windows.Input.TraversalRequest
  langs:
  - csharp
  name: Wrapped
  nameWithType: TraversalRequest.Wrapped
  fullName: TraversalRequest.Wrapped
  type: Property
  assemblies:
  - WindowsBase
  namespace: System.Windows.Input
  summary: Gets or sets a value that indicates whether focus traversal has reached the end of child elements that can have focus.
  remarks: "Focusable elements are those elements where the <xref:System.Windows.UIElement.Focusable%2A> property is `true`.  \n  \n This parameter is primarily intended to communicate whether traversal using tab stops should wrap when calling the methods <xref:System.Windows.Interop.IKeyboardInputSink.TabInto%2A>, <xref:System.Windows.Forms.Integration.WindowsFormsHost.TabInto%2A>,or.<xref:System.Windows.Interop.IKeyboardInputSite.OnNoMoreTabStops%2A>. If you are passing focus to an object that implements <xref:System.Windows.Interop.IKeyboardInputSink>, then specifying true for <xref:System.Windows.Input.TraversalRequest.Wrapped%2A> will result in that `true` value being passed to the <xref:System.Windows.Interop.IKeyboardInputSink.TabInto%2A> implementation."
  syntax:
    content: public bool Wrapped { get; set; }
    return:
      type: System.Boolean
      description: '`true` if this traversal has reached the end of child elements that can have focus; otherwise, `false`. The default is `false`.'
  overload: System.Windows.Input.TraversalRequest.Wrapped*
  exceptions: []
  version:
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  monikers:
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Windows.Input/TraversalRequest.xml
  ms.technology:
  - dotnet-wpf
  author: stevehoag
  ms.author: shoag
  manager: wpickett
references:
- uid: System.Object
  parent: System
  isExternal: false
  name: Object
  nameWithType: Object
  fullName: System.Object
- uid: System.Windows.Input.TraversalRequest.#ctor(System.Windows.Input.FocusNavigationDirection)
  parent: System.Windows.Input.TraversalRequest
  isExternal: false
  name: TraversalRequest(FocusNavigationDirection)
  nameWithType: TraversalRequest.TraversalRequest(FocusNavigationDirection)
  fullName: TraversalRequest.TraversalRequest(FocusNavigationDirection)
- uid: System.Windows.Input.FocusNavigationDirection
  parent: System.Windows.Input
  isExternal: false
  name: FocusNavigationDirection
  nameWithType: FocusNavigationDirection
  fullName: System.Windows.Input.FocusNavigationDirection
- uid: System.Windows.Input.TraversalRequest.FocusNavigationDirection
  parent: System.Windows.Input.TraversalRequest
  isExternal: false
  name: FocusNavigationDirection
  nameWithType: TraversalRequest.FocusNavigationDirection
  fullName: TraversalRequest.FocusNavigationDirection
- uid: System.Windows.Input.TraversalRequest.Wrapped
  parent: System.Windows.Input.TraversalRequest
  isExternal: false
  name: Wrapped
  nameWithType: TraversalRequest.Wrapped
  fullName: TraversalRequest.Wrapped
- uid: System.Boolean
  parent: System
  isExternal: false
  name: Boolean
  nameWithType: Boolean
  fullName: System.Boolean
- uid: System.Windows.Input.TraversalRequest.#ctor*
  parent: System.Windows.Input.TraversalRequest
  isExternal: false
  name: TraversalRequest
  nameWithType: TraversalRequest.TraversalRequest
  fullName: TraversalRequest.TraversalRequest
  monikers:
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Windows.Input/TraversalRequest.xml
- uid: System.Windows.Input.TraversalRequest.FocusNavigationDirection*
  parent: System.Windows.Input.TraversalRequest
  isExternal: false
  name: FocusNavigationDirection
  nameWithType: TraversalRequest.FocusNavigationDirection
  fullName: TraversalRequest.FocusNavigationDirection
  monikers:
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Windows.Input/TraversalRequest.xml
- uid: System.Windows.Input.TraversalRequest.Wrapped*
  parent: System.Windows.Input.TraversalRequest
  isExternal: false
  name: Wrapped
  nameWithType: TraversalRequest.Wrapped
  fullName: TraversalRequest.Wrapped
  monikers:
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Windows.Input/TraversalRequest.xml
- uid: System.Object.Equals(System.Object)
  parent: System.Object
  isExternal: false
  name: Equals(Object)
  nameWithType: Object.Equals(Object)
  fullName: Object.Equals(Object)
- uid: System.Object.Equals(System.Object,System.Object)
  parent: System.Object
  isExternal: false
  name: Equals(Object, Object)
  nameWithType: Object.Equals(Object, Object)
  fullName: Object.Equals(Object, Object)
- uid: System.Object.GetHashCode
  parent: System.Object
  isExternal: false
  name: GetHashCode()
  nameWithType: Object.GetHashCode()
  fullName: Object.GetHashCode()
- uid: System.Object.GetType
  parent: System.Object
  isExternal: false
  name: GetType()
  nameWithType: Object.GetType()
  fullName: Object.GetType()
- uid: System.Object.MemberwiseClone
  parent: System.Object
  isExternal: false
  name: MemberwiseClone()
  nameWithType: Object.MemberwiseClone()
  fullName: Object.MemberwiseClone()
- uid: System.Object.ReferenceEquals(System.Object,System.Object)
  parent: System.Object
  isExternal: false
  name: ReferenceEquals(Object, Object)
  nameWithType: Object.ReferenceEquals(Object, Object)
  fullName: Object.ReferenceEquals(Object, Object)
- uid: System.Object.ToString
  parent: System.Object
  isExternal: false
  name: ToString()
  nameWithType: Object.ToString()
  fullName: Object.ToString()
