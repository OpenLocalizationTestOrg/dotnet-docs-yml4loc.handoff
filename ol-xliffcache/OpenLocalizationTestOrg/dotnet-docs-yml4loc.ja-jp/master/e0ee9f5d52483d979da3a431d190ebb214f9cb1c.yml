### YamlMime:ManagedReference
items:
- uid: System.Windows.Shell.TaskbarItemInfo
  commentId: T:System.Windows.Shell.TaskbarItemInfo
  id: TaskbarItemInfo
  children:
  - System.Windows.Shell.TaskbarItemInfo.#ctor
  - System.Windows.Shell.TaskbarItemInfo.CreateInstanceCore
  - System.Windows.Shell.TaskbarItemInfo.Description
  - System.Windows.Shell.TaskbarItemInfo.DescriptionProperty
  - System.Windows.Shell.TaskbarItemInfo.Overlay
  - System.Windows.Shell.TaskbarItemInfo.OverlayProperty
  - System.Windows.Shell.TaskbarItemInfo.ProgressState
  - System.Windows.Shell.TaskbarItemInfo.ProgressStateProperty
  - System.Windows.Shell.TaskbarItemInfo.ProgressValue
  - System.Windows.Shell.TaskbarItemInfo.ProgressValueProperty
  - System.Windows.Shell.TaskbarItemInfo.ThumbButtonInfos
  - System.Windows.Shell.TaskbarItemInfo.ThumbButtonInfosProperty
  - System.Windows.Shell.TaskbarItemInfo.ThumbnailClipMargin
  - System.Windows.Shell.TaskbarItemInfo.ThumbnailClipMarginProperty
  langs:
  - csharp
  name: TaskbarItemInfo
  nameWithType: TaskbarItemInfo
  fullName: System.Windows.Shell.TaskbarItemInfo
  type: Class
  assemblies:
  - PresentationFramework
  namespace: System.Windows.Shell
  summary: Represents information about how the taskbar thumbnail is displayed.
  remarks: "The <xref:System.Windows.Shell.TaskbarItemInfo> class provides a managed wrapper for [!INCLUDE[win7](~/includes/win7-md.md)] taskbar functionality. For more information about the Windows shell and native taskbar APIs, see [Taskbar Extensions](http://go.microsoft.com/fwlink/?LinkId=178479). <xref:System.Windows.Shell.TaskbarItemInfo> is exposed as the <xref:System.Windows.Window.TaskbarItemInfo%2A?displayProperty=fullName> dependency property on a <xref:System.Windows.Window>.  \n  \n The [!INCLUDE[win7](~/includes/win7-md.md)] taskbar provides enhanced functionality that enables you to use the taskbar item to communicate status to a user and expose common tasks when the window is minimized or hidden. The functionality that is exposed by the <xref:System.Windows.Shell.TaskbarItemInfo> class is unavailable in versions of Windows earlier than [!INCLUDE[win7](~/includes/win7-md.md)]. Applications that use the <xref:System.Windows.Shell.TaskbarItemInfo> class can still run in earlier versions of Windows; however, these taskbar enhancements are unavailable in the earlier versions.  \n  \n In [!INCLUDE[win7](~/includes/win7-md.md)], some taskbar functionality might be unavailable, depending on the user's settings. For example, taskbar functionality is unavailable if [!INCLUDE[TLA#tla_aero](~/includes/tlasharptla-aero-md.md)] is disabled or if the application is started with elevated permissions. Your application should provide other ways to interact with the user that do not depend on the enhanced taskbar functionality in [!INCLUDE[win7](~/includes/win7-md.md)].  \n  \n Program icons in the notification area, which is at the far right of the taskbar, are typically used to communicate application status to a user. By default, the [!INCLUDE[win7](~/includes/win7-md.md)] taskbar hides program icons in the notification area. However, you can set the <xref:System.Windows.Shell.TaskbarItemInfo.Overlay%2A> property to add an image to the taskbar button to communicate status, such as online status in a messaging application. The overlay image lets users see the application status even if they cannot see the program icon in the notification area. You can also display the progress of running tasks in the taskbar button by setting the <xref:System.Windows.Shell.TaskbarItemInfo.ProgressState%2A> and <xref:System.Windows.Shell.TaskbarItemInfo.ProgressValue%2A> properties.  \n  \n The [!INCLUDE[win7](~/includes/win7-md.md)] taskbar displays a thumbnail of the application when you move the mouse pointer over the taskbar button. By default the whole application window is shown. You can specify a particular part of the window to display in the thumbnail by setting the <xref:System.Windows.Shell.TaskbarItemInfo.ThumbnailClipMargin%2A> property. You can also specify a <xref:System.Windows.Shell.TaskbarItemInfo.Description%2A> that is displayed in a tooltip above the taskbar thumbnail. The tooltip is displayed even when the thumbnail cannot be seen because of user settings.  \n  \n You can add buttons to the taskbar thumbnail to provide access to common tasks without switching to the application window. For example, Window Media Player provides Play, Pause, Forward, and Back buttons that let you control media playback from the taskbar thumbnail when the application is minimized. Buttons in the taskbar thumbnail are represented by <xref:System.Windows.Shell.ThumbButtonInfo> objects and are contained in the <xref:System.Windows.Shell.TaskbarItemInfo.ThumbButtonInfos%2A> collection.  \n  \n The following illustration shows the enhanced features of the [!INCLUDE[win7](~/includes/win7-md.md)] taskbar.  \n  \n ![Taskbar Item Info Sample](~/add/media/wpfshell-taskbariteminfo.png \"Taskbar Item Info Sample\")  \nWindows Taskbar Enhanced Features"
  example:
  - "The following example shows how to create a <xref:System.Windows.Shell.TaskbarItemInfo> in markup. The <xref:System.Windows.Shell.TaskbarItemInfo> contains a collection of <xref:System.Windows.Shell.ThumbButtonInfo> objects that provide access to the Play and Stop commands from the taskbar item.  \n  \n [!code-xml[Shell_TaskbarItemSample#010](~/samples/snippets/csharp/VS_Snippets_Wpf/shell_taskbaritemsample/cs/mainwindow.xaml#010)]  \n  \n The following markup and code shows the previous example in its full context. The application uses a <xref:System.ComponentModel.BackgroundWorker> to count from 0 to 100 and displays its progress in the user interface. The task can be started and stopped from the taskbar preview. The progress is displayed in the taskbar button.  \n  \n [!code-xml[Shell_TaskbarItemSample#001](~/samples/snippets/csharp/VS_Snippets_Wpf/shell_taskbaritemsample/cs/mainwindow.xaml#001)]  \n  \n [!code-csharp[Shell_TaskbarItemSample#100](~/samples/snippets/csharp/VS_Snippets_Wpf/shell_taskbaritemsample/cs/mainwindow.xaml.cs#100)]\n [!code-vb[Shell_TaskbarItemSample#100](~/samples/snippets/visualbasic/VS_Snippets_Wpf/shell_taskbaritemsample/vb/mainwindow.xaml.vb#100)]"
  syntax:
    content: 'public sealed class TaskbarItemInfo : System.Windows.Freezable'
  inheritance:
  - System.Object
  - System.Windows.Threading.DispatcherObject
  - System.Windows.DependencyObject
  - System.Windows.Freezable
  implements: []
  inheritedMembers:
  - System.Object.Equals(System.Object,System.Object)
  - System.Object.GetType
  - System.Object.MemberwiseClone
  - System.Object.ReferenceEquals(System.Object,System.Object)
  - System.Object.ToString
  - System.Windows.DependencyObject.ClearValue(System.Windows.DependencyProperty)
  - System.Windows.DependencyObject.ClearValue(System.Windows.DependencyPropertyKey)
  - System.Windows.DependencyObject.CoerceValue(System.Windows.DependencyProperty)
  - System.Windows.DependencyObject.DependencyObjectType
  - System.Windows.DependencyObject.Equals(System.Object)
  - System.Windows.DependencyObject.GetHashCode
  - System.Windows.DependencyObject.GetLocalValueEnumerator
  - System.Windows.DependencyObject.GetValue(System.Windows.DependencyProperty)
  - System.Windows.DependencyObject.InvalidateProperty(System.Windows.DependencyProperty)
  - System.Windows.DependencyObject.IsSealed
  - System.Windows.DependencyObject.ReadLocalValue(System.Windows.DependencyProperty)
  - System.Windows.DependencyObject.SetCurrentValue(System.Windows.DependencyProperty,System.Object)
  - System.Windows.DependencyObject.SetValue(System.Windows.DependencyProperty,System.Object)
  - System.Windows.DependencyObject.SetValue(System.Windows.DependencyPropertyKey,System.Object)
  - System.Windows.DependencyObject.ShouldSerializeProperty(System.Windows.DependencyProperty)
  - System.Windows.Freezable.CanFreeze
  - System.Windows.Freezable.Changed
  - System.Windows.Freezable.Clone
  - System.Windows.Freezable.CloneCore(System.Windows.Freezable)
  - System.Windows.Freezable.CloneCurrentValue
  - System.Windows.Freezable.CloneCurrentValueCore(System.Windows.Freezable)
  - System.Windows.Freezable.CreateInstance
  - System.Windows.Freezable.Freeze
  - System.Windows.Freezable.Freeze(System.Windows.Freezable,System.Boolean)
  - System.Windows.Freezable.FreezeCore(System.Boolean)
  - System.Windows.Freezable.GetAsFrozen
  - System.Windows.Freezable.GetAsFrozenCore(System.Windows.Freezable)
  - System.Windows.Freezable.GetCurrentValueAsFrozen
  - System.Windows.Freezable.GetCurrentValueAsFrozenCore(System.Windows.Freezable)
  - System.Windows.Freezable.IsFrozen
  - System.Windows.Freezable.OnChanged
  - System.Windows.Freezable.OnFreezablePropertyChanged(System.Windows.DependencyObject,System.Windows.DependencyObject)
  - System.Windows.Freezable.OnFreezablePropertyChanged(System.Windows.DependencyObject,System.Windows.DependencyObject,System.Windows.DependencyProperty)
  - System.Windows.Freezable.OnPropertyChanged(System.Windows.DependencyPropertyChangedEventArgs)
  - System.Windows.Freezable.ReadPreamble
  - System.Windows.Freezable.WritePostscript
  - System.Windows.Freezable.WritePreamble
  - System.Windows.Threading.DispatcherObject.CheckAccess
  - System.Windows.Threading.DispatcherObject.Dispatcher
  - System.Windows.Threading.DispatcherObject.VerifyAccess
  version:
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  monikers:
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Windows.Shell/TaskbarItemInfo.xml
  ms.technology:
  - dotnet-wpf
  author: stevehoag
  ms.author: shoag
  manager: wpickett
- uid: System.Windows.Shell.TaskbarItemInfo.#ctor
  commentId: M:System.Windows.Shell.TaskbarItemInfo.#ctor
  id: '#ctor'
  parent: System.Windows.Shell.TaskbarItemInfo
  langs:
  - csharp
  name: TaskbarItemInfo()
  nameWithType: TaskbarItemInfo.TaskbarItemInfo()
  fullName: TaskbarItemInfo.TaskbarItemInfo()
  type: Constructor
  assemblies:
  - PresentationFramework
  namespace: System.Windows.Shell
  summary: Initializes a new instance of the <xref href="System.Windows.Shell.TaskbarItemInfo"></xref> class.
  syntax:
    content: public TaskbarItemInfo ();
    parameters: []
  overload: System.Windows.Shell.TaskbarItemInfo.#ctor*
  exceptions: []
  version:
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  monikers:
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Windows.Shell/TaskbarItemInfo.xml
  ms.technology:
  - dotnet-wpf
  author: stevehoag
  ms.author: shoag
  manager: wpickett
- uid: System.Windows.Shell.TaskbarItemInfo.CreateInstanceCore
  commentId: M:System.Windows.Shell.TaskbarItemInfo.CreateInstanceCore
  id: CreateInstanceCore
  parent: System.Windows.Shell.TaskbarItemInfo
  langs:
  - csharp
  name: CreateInstanceCore()
  nameWithType: TaskbarItemInfo.CreateInstanceCore()
  fullName: TaskbarItemInfo.CreateInstanceCore()
  type: Method
  assemblies:
  - PresentationFramework
  namespace: System.Windows.Shell
  syntax:
    content: protected override System.Windows.Freezable CreateInstanceCore ();
    parameters: []
    return:
      type: System.Windows.Freezable
      description: ''
  overload: System.Windows.Shell.TaskbarItemInfo.CreateInstanceCore*
  exceptions: []
  version:
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  monikers:
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Windows.Shell/TaskbarItemInfo.xml
- uid: System.Windows.Shell.TaskbarItemInfo.Description
  commentId: P:System.Windows.Shell.TaskbarItemInfo.Description
  id: Description
  parent: System.Windows.Shell.TaskbarItemInfo
  langs:
  - csharp
  name: Description
  nameWithType: TaskbarItemInfo.Description
  fullName: TaskbarItemInfo.Description
  type: Property
  assemblies:
  - PresentationFramework
  namespace: System.Windows.Shell
  summary: Gets or sets the text for the taskbar item tooltip.
  remarks: "The tooltip is displayed above the taskbar thumbnail when the mouse pointer is over the taskbar button. If the taskbar thumbnail is not displayed because of user settings, the tooltip is still displayed.  \n  \n The following illustration shows the taskbar <xref:System.Windows.Shell.TaskbarItemInfo.Description%2A> tooltip.  \n  \n ![Taskbar Item Info Sample](~/add/media/wpfshell-taskbariteminfo.png \"Taskbar Item Info Sample\")  \nWindows Taskbar Description"
  example:
  - "The following example shows how to create a <xref:System.Windows.Shell.TaskbarItemInfo> in markup and set the <xref:System.Windows.Shell.TaskbarItemInfo.Description%2A> property. This example is part of a larger example provided for the <xref:System.Windows.Shell.TaskbarItemInfo> class.  \n  \n [!code-xml[Shell_TaskbarItemSample#010](~/samples/snippets/csharp/VS_Snippets_Wpf/shell_taskbaritemsample/cs/mainwindow.xaml#010)]"
  syntax:
    content: public string Description { get; set; }
    return:
      type: System.String
      description: The text for the taskbar item tooltip. The default is an empty string.
  overload: System.Windows.Shell.TaskbarItemInfo.Description*
  exceptions: []
  version:
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  monikers:
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Windows.Shell/TaskbarItemInfo.xml
  ms.technology:
  - dotnet-wpf
  ms.author: kempb
  manager: ghogen
- uid: System.Windows.Shell.TaskbarItemInfo.DescriptionProperty
  commentId: F:System.Windows.Shell.TaskbarItemInfo.DescriptionProperty
  id: DescriptionProperty
  parent: System.Windows.Shell.TaskbarItemInfo
  langs:
  - csharp
  name: DescriptionProperty
  nameWithType: TaskbarItemInfo.DescriptionProperty
  fullName: TaskbarItemInfo.DescriptionProperty
  type: Field
  assemblies:
  - PresentationFramework
  namespace: System.Windows.Shell
  summary: Identifies the <xref href="System.Windows.Shell.TaskbarItemInfo.Description"></xref> dependency property.
  syntax:
    content: public static readonly System.Windows.DependencyProperty DescriptionProperty;
    return:
      type: System.Windows.DependencyProperty
      description: ''
  exceptions: []
  version:
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  monikers:
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Windows.Shell/TaskbarItemInfo.xml
  ms.technology:
  - dotnet-wpf
  author: stevehoag
  ms.author: shoag
  manager: wpickett
- uid: System.Windows.Shell.TaskbarItemInfo.Overlay
  commentId: P:System.Windows.Shell.TaskbarItemInfo.Overlay
  id: Overlay
  parent: System.Windows.Shell.TaskbarItemInfo
  langs:
  - csharp
  name: Overlay
  nameWithType: TaskbarItemInfo.Overlay
  fullName: TaskbarItemInfo.Overlay
  type: Property
  assemblies:
  - PresentationFramework
  namespace: System.Windows.Shell
  summary: Gets or sets the image that is displayed over the program icon in the taskbar button.
  remarks: "You can add an image to the program icon in the taskbar button to communicate application status to the user. The overlay uses a static or animated <xref:System.Windows.Media.ImageSource> that is positioned over the bottom-right corner of the icon in the taskbar button. The overlay is not displayed if the user sets the taskbar to show small icons.  \n  \n Program icons in the notification area, which is at the far right of the taskbar, are typically used to communicate application status to a user. In [!INCLUDE[win7](~/includes/win7-md.md)], program icons in the notification area are hidden by default, and are therefore, less useful for communicating status. You can use the taskbar button overlay in [!INCLUDE[win7](~/includes/win7-md.md)] to communicate status when the icon in the notification area is hidden. Your application can detect the version of Windows and provide notifications in a manner that is appropriate for the operating system.  \n  \n Overlay images are rendered at the appropriate size. If the <xref:System.Windows.Media.ImageSource> represents an <xref:System.Drawing.Icon>, the appropriate bit depth is also used.  \n  \n The following illustration shows the taskbar <xref:System.Windows.Shell.TaskbarItemInfo.Overlay%2A>.  \n  \n ![Taskbar Item Info Sample](~/add/media/wpfshell-taskbariteminfo.png \"Taskbar Item Info Sample\")  \nWindows Taskbar Overlay"
  example:
  - "The following example shows how to create a <xref:System.Windows.Shell.TaskbarItemInfo> in markup and set the <xref:System.Windows.Shell.TaskbarItemInfo.Overlay%2A> property. This example is part of a larger example provided for the <xref:System.Windows.Shell.TaskbarItemInfo> class.  \n  \n [!code-xml[Shell_TaskbarItemSample#010](~/samples/snippets/csharp/VS_Snippets_Wpf/shell_taskbaritemsample/cs/mainwindow.xaml#010)]  \n  \n The following example shows how to set the <xref:System.Windows.Shell.TaskbarItemInfo.Overlay%2A> property in code.  \n  \n [!code-csharp[Shell_TaskbarItemSample#121](~/samples/snippets/csharp/VS_Snippets_Wpf/shell_taskbaritemsample/cs/mainwindow.xaml.cs#121)]\n [!code-vb[Shell_TaskbarItemSample#121](~/samples/snippets/visualbasic/VS_Snippets_Wpf/shell_taskbaritemsample/vb/mainwindow.xaml.vb#121)]"
  syntax:
    content: public System.Windows.Media.ImageSource Overlay { get; set; }
    return:
      type: System.Windows.Media.ImageSource
      description: The image that is displayed over the program icon in the taskbar button. The default is `null`.
  overload: System.Windows.Shell.TaskbarItemInfo.Overlay*
  exceptions: []
  version:
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  monikers:
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Windows.Shell/TaskbarItemInfo.xml
  ms.technology:
  - dotnet-wpf
  author: stevehoag
  ms.author: shoag
  manager: wpickett
- uid: System.Windows.Shell.TaskbarItemInfo.OverlayProperty
  commentId: F:System.Windows.Shell.TaskbarItemInfo.OverlayProperty
  id: OverlayProperty
  parent: System.Windows.Shell.TaskbarItemInfo
  langs:
  - csharp
  name: OverlayProperty
  nameWithType: TaskbarItemInfo.OverlayProperty
  fullName: TaskbarItemInfo.OverlayProperty
  type: Field
  assemblies:
  - PresentationFramework
  namespace: System.Windows.Shell
  summary: Identifies the <xref href="System.Windows.Shell.TaskbarItemInfo.Overlay"></xref> dependency property.
  syntax:
    content: public static readonly System.Windows.DependencyProperty OverlayProperty;
    return:
      type: System.Windows.DependencyProperty
      description: ''
  exceptions: []
  version:
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  monikers:
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Windows.Shell/TaskbarItemInfo.xml
  ms.technology:
  - dotnet-wpf
  author: stevehoag
  ms.author: shoag
  manager: wpickett
- uid: System.Windows.Shell.TaskbarItemInfo.ProgressState
  commentId: P:System.Windows.Shell.TaskbarItemInfo.ProgressState
  id: ProgressState
  parent: System.Windows.Shell.TaskbarItemInfo
  langs:
  - csharp
  name: ProgressState
  nameWithType: TaskbarItemInfo.ProgressState
  fullName: TaskbarItemInfo.ProgressState
  type: Property
  assemblies:
  - PresentationFramework
  namespace: System.Windows.Shell
  summary: Gets or sets a value that indicates how the progress indicator is displayed in the taskbar button.
  remarks: "You can communicate the progress of long-running tasks by displaying a progress indicator in a [!INCLUDE[win7](~/includes/win7-md.md)] taskbar button. The color of the indicator is determined by the <xref:System.Windows.Shell.TaskbarItemInfo.ProgressState%2A> property, which contains one of the <xref:System.Windows.Shell.TaskbarItemProgressState> enumeration values. When the <xref:System.Windows.Shell.TaskbarItemInfo.ProgressState%2A> is <xref:System.Windows.Shell.TaskbarItemProgressState.Normal>, the indicator is green. When <xref:System.Windows.Shell.TaskbarItemProgressState.Paused>, the indicator is yellow. When <xref:System.Windows.Shell.TaskbarItemProgressState.Error>, the indicator is red. For these states, the <xref:System.Windows.Shell.TaskbarItemInfo.ProgressValue%2A> property determines how much of the taskbar button is filled by the progress indicator. <xref:System.Windows.Shell.TaskbarItemInfo.ProgressValue%2A> is ignored for other values of <xref:System.Windows.Shell.TaskbarItemInfo.ProgressState%2A>. <xref:System.Windows.Shell.TaskbarItemProgressState.Indeterminate> shows a pulsing green indicator across the entire taskbar button. No indicator is shown for <xref:System.Windows.Shell.TaskbarItemProgressState.None>.  \n  \n The following illustration shows the taskbar progress indicator in the <xref:System.Windows.Shell.TaskbarItemProgressState.Normal> state.  \n  \n ![Taskbar Item Info Sample](~/add/media/wpfshell-taskbariteminfo.png \"Taskbar Item Info Sample\")  \nWindows Taskbar Progress Indicator"
  example:
  - "The following example shows how to set the <xref:System.Windows.Shell.TaskbarItemInfo.ProgressState%2A> property in code. The state is set in the handler of a <xref:System.ComponentModel.BackgroundWorker.RunWorkerCompleted?displayProperty=fullName> event to indicate whether the background task was stopped by the user, ended with an error, or completed normally. This example is part of a larger example provided for the <xref:System.Windows.Shell.TaskbarItemInfo> class.  \n  \n [!code-csharp[Shell_TaskbarItemSample#120](~/samples/snippets/csharp/VS_Snippets_Wpf/shell_taskbaritemsample/cs/mainwindow.xaml.cs#120)]\n [!code-vb[Shell_TaskbarItemSample#120](~/samples/snippets/visualbasic/VS_Snippets_Wpf/shell_taskbaritemsample/vb/mainwindow.xaml.vb#120)]"
  syntax:
    content: public System.Windows.Shell.TaskbarItemProgressState ProgressState { get; set; }
    return:
      type: System.Windows.Shell.TaskbarItemProgressState
      description: An enumeration value that indicates how the progress indicator is displayed in the taskbar button. The default is <xref href="System.Windows.Shell.TaskbarItemProgressState.None"></xref>.
  overload: System.Windows.Shell.TaskbarItemInfo.ProgressState*
  exceptions: []
  version:
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  monikers:
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Windows.Shell/TaskbarItemInfo.xml
  ms.technology:
  - dotnet-wpf
  author: stevehoag
  ms.author: shoag
  manager: wpickett
- uid: System.Windows.Shell.TaskbarItemInfo.ProgressStateProperty
  commentId: F:System.Windows.Shell.TaskbarItemInfo.ProgressStateProperty
  id: ProgressStateProperty
  parent: System.Windows.Shell.TaskbarItemInfo
  langs:
  - csharp
  name: ProgressStateProperty
  nameWithType: TaskbarItemInfo.ProgressStateProperty
  fullName: TaskbarItemInfo.ProgressStateProperty
  type: Field
  assemblies:
  - PresentationFramework
  namespace: System.Windows.Shell
  summary: Identifies the <xref href="System.Windows.Shell.TaskbarItemInfo.ProgressState"></xref> dependency property.
  syntax:
    content: public static readonly System.Windows.DependencyProperty ProgressStateProperty;
    return:
      type: System.Windows.DependencyProperty
      description: ''
  exceptions: []
  version:
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  monikers:
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Windows.Shell/TaskbarItemInfo.xml
  ms.technology:
  - dotnet-wpf
  author: stevehoag
  ms.author: shoag
  manager: wpickett
- uid: System.Windows.Shell.TaskbarItemInfo.ProgressValue
  commentId: P:System.Windows.Shell.TaskbarItemInfo.ProgressValue
  id: ProgressValue
  parent: System.Windows.Shell.TaskbarItemInfo
  langs:
  - csharp
  name: ProgressValue
  nameWithType: TaskbarItemInfo.ProgressValue
  fullName: TaskbarItemInfo.ProgressValue
  type: Property
  assemblies:
  - PresentationFramework
  namespace: System.Windows.Shell
  summary: Gets or sets a value that indicates the fullness of the progress indicator in the taskbar button.
  remarks: "The <xref:System.Windows.Shell.TaskbarItemInfo.ProgressValue%2A> property is represented as a value between 0.0 and 1.0. Numbers smaller and larger are coerced to be within those bounds. <xref:System.Double.NaN> is coerced to 0.  \n  \n You can communicate the progress of long-running tasks by displaying a progress indicator in a [!INCLUDE[win7](~/includes/win7-md.md)] taskbar button. The color of the indicator is determined by the <xref:System.Windows.Shell.TaskbarItemInfo.ProgressState%2A> property, which contains one of the <xref:System.Windows.Shell.TaskbarItemProgressState> enumeration values. If the <xref:System.Windows.Shell.TaskbarItemInfo.ProgressState%2A> property is <xref:System.Windows.Shell.TaskbarItemProgressState.Normal>, <xref:System.Windows.Shell.TaskbarItemProgressState.Paused>, or <xref:System.Windows.Shell.TaskbarItemProgressState.Error>, the <xref:System.Windows.Shell.TaskbarItemInfo.ProgressValue%2A> property determines the fullness of the progress indicator. <xref:System.Windows.Shell.TaskbarItemInfo.ProgressValue%2A> is ignored for some values of <xref:System.Windows.Shell.TaskbarItemInfo.ProgressState%2A>. <xref:System.Windows.Shell.TaskbarItemProgressState.Indeterminate> shows a pulsing green indicator across the entire taskbar button. No indicator is shown for <xref:System.Windows.Shell.TaskbarItemProgressState.None>.  \n  \n The following illustration shows the taskbar progress indicator with a <xref:System.Windows.Shell.TaskbarItemInfo.ProgressValue%2A> of 82 percent.  \n  \n ![Taskbar Item Info Sample](~/add/media/wpfshell-taskbariteminfo.png \"Taskbar Item Info Sample\")  \nWindows Taskbar Progress Indicator"
  example:
  - "The following example shows how to set the <xref:System.Windows.Shell.TaskbarItemInfo.ProgressValue%2A> property in code. The value is set in the handler of a <xref:System.ComponentModel.BackgroundWorker.ProgressChanged?displayProperty=fullName> event to indicate the current progress of the background task. This example is part of a larger example provided for the <xref:System.Windows.Shell.TaskbarItemInfo> class.  \n  \n [!code-csharp[Shell_TaskbarItemSample#130](~/samples/snippets/csharp/VS_Snippets_Wpf/shell_taskbaritemsample/cs/mainwindow.xaml.cs#130)]\n [!code-vb[Shell_TaskbarItemSample#130](~/samples/snippets/visualbasic/VS_Snippets_Wpf/shell_taskbaritemsample/vb/mainwindow.xaml.vb#130)]"
  syntax:
    content: public double ProgressValue { get; set; }
    return:
      type: System.Double
      description: A value that indicates the fullness of the progress indicator in the taskbar button. The default is 0.
  overload: System.Windows.Shell.TaskbarItemInfo.ProgressValue*
  exceptions: []
  version:
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  monikers:
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Windows.Shell/TaskbarItemInfo.xml
  ms.technology:
  - dotnet-wpf
  ms.author: kempb
  manager: ghogen
- uid: System.Windows.Shell.TaskbarItemInfo.ProgressValueProperty
  commentId: F:System.Windows.Shell.TaskbarItemInfo.ProgressValueProperty
  id: ProgressValueProperty
  parent: System.Windows.Shell.TaskbarItemInfo
  langs:
  - csharp
  name: ProgressValueProperty
  nameWithType: TaskbarItemInfo.ProgressValueProperty
  fullName: TaskbarItemInfo.ProgressValueProperty
  type: Field
  assemblies:
  - PresentationFramework
  namespace: System.Windows.Shell
  summary: Identifies the <xref href="System.Windows.Shell.TaskbarItemInfo.ProgressValue"></xref> dependency property.
  syntax:
    content: public static readonly System.Windows.DependencyProperty ProgressValueProperty;
    return:
      type: System.Windows.DependencyProperty
      description: ''
  exceptions: []
  version:
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  monikers:
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Windows.Shell/TaskbarItemInfo.xml
  ms.technology:
  - dotnet-wpf
  author: stevehoag
  ms.author: shoag
  manager: wpickett
- uid: System.Windows.Shell.TaskbarItemInfo.ThumbButtonInfos
  commentId: P:System.Windows.Shell.TaskbarItemInfo.ThumbButtonInfos
  id: ThumbButtonInfos
  parent: System.Windows.Shell.TaskbarItemInfo
  langs:
  - csharp
  name: ThumbButtonInfos
  nameWithType: TaskbarItemInfo.ThumbButtonInfos
  fullName: TaskbarItemInfo.ThumbButtonInfos
  type: Property
  assemblies:
  - PresentationFramework
  namespace: System.Windows.Shell
  summary: Gets or sets the collection of <xref href="System.Windows.Shell.ThumbButtonInfo"></xref> objects that are associated with the <xref href="System.Windows.Window"></xref>.
  remarks: "You can add buttons to the taskbar thumbnail to give users access to common tasks without requiring them to switch to the application window. For example, Windows Media Player provides Play, Pause, Forward, and Back buttons that let users control media playback from the taskbar thumbnail when the application is minimized. Buttons in the taskbar thumbnail are represented by <xref:System.Windows.Shell.ThumbButtonInfo> objects and are contained in the <xref:System.Windows.Shell.TaskbarItemInfo.ThumbButtonInfos%2A> collection.  \n  \n The [!INCLUDE[win7](~/includes/win7-md.md)] shell allows a maximum of seven buttons in the taskbar thumbnail. If more than seven <xref:System.Windows.Shell.ThumbButtonInfo> objects are added to the <xref:System.Windows.Shell.ThumbButtonInfoCollection>, the additional objects are treated as overflow. When a button is <xref:System.Windows.Visibility.Collapsed>, it does not have any visible elements, and no space is reserved for it. In this case, additional buttons from the <xref:System.Windows.Shell.ThumbButtonInfoCollection> overflow are displayed.  \n  \n The following illustration shows the taskbar preview with a collection of two thumb buttons.  \n  \n ![Taskbar Item Info Sample](~/add/media/wpfshell-taskbariteminfo.png \"Taskbar Item Info Sample\")  \nWindows Taskbar Thumb Buttons"
  example:
  - "The following example shows how to create a <xref:System.Windows.Shell.TaskbarItemInfo> in markup. The <xref:System.Windows.Shell.TaskbarItemInfo> contains a collection of <xref:System.Windows.Shell.ThumbButtonInfo> objects that provide access to the Play and Stop commands from the taskbar item. This example is part of a larger example provided for the <xref:System.Windows.Shell.TaskbarItemInfo> class.  \n  \n [!code-xml[Shell_TaskbarItemSample#010](~/samples/snippets/csharp/VS_Snippets_Wpf/shell_taskbaritemsample/cs/mainwindow.xaml#010)]"
  syntax:
    content: public System.Windows.Shell.ThumbButtonInfoCollection ThumbButtonInfos { get; set; }
    return:
      type: System.Windows.Shell.ThumbButtonInfoCollection
      description: The collection of <xref href="System.Windows.Shell.ThumbButtonInfo"></xref> objects that are associated with the <xref href="System.Windows.Window"></xref>. The default is an empty collection.
  overload: System.Windows.Shell.TaskbarItemInfo.ThumbButtonInfos*
  exceptions: []
  version:
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  monikers:
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Windows.Shell/TaskbarItemInfo.xml
  ms.technology:
  - dotnet-wpf
  author: stevehoag
  ms.author: shoag
  manager: wpickett
- uid: System.Windows.Shell.TaskbarItemInfo.ThumbButtonInfosProperty
  commentId: F:System.Windows.Shell.TaskbarItemInfo.ThumbButtonInfosProperty
  id: ThumbButtonInfosProperty
  parent: System.Windows.Shell.TaskbarItemInfo
  langs:
  - csharp
  name: ThumbButtonInfosProperty
  nameWithType: TaskbarItemInfo.ThumbButtonInfosProperty
  fullName: TaskbarItemInfo.ThumbButtonInfosProperty
  type: Field
  assemblies:
  - PresentationFramework
  namespace: System.Windows.Shell
  summary: Identifies the <xref href="System.Windows.Shell.TaskbarItemInfo.ThumbButtonInfos"></xref> dependency property.
  syntax:
    content: public static readonly System.Windows.DependencyProperty ThumbButtonInfosProperty;
    return:
      type: System.Windows.DependencyProperty
      description: ''
  exceptions: []
  version:
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  monikers:
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Windows.Shell/TaskbarItemInfo.xml
  ms.technology:
  - dotnet-wpf
  author: stevehoag
  ms.author: shoag
  manager: wpickett
- uid: System.Windows.Shell.TaskbarItemInfo.ThumbnailClipMargin
  commentId: P:System.Windows.Shell.TaskbarItemInfo.ThumbnailClipMargin
  id: ThumbnailClipMargin
  parent: System.Windows.Shell.TaskbarItemInfo
  langs:
  - csharp
  name: ThumbnailClipMargin
  nameWithType: TaskbarItemInfo.ThumbnailClipMargin
  fullName: TaskbarItemInfo.ThumbnailClipMargin
  type: Property
  assemblies:
  - PresentationFramework
  namespace: System.Windows.Shell
  summary: Gets or sets a value that specifies the part of the application window's client area that is displayed in the taskbar thumbnail.
  remarks: "By default, the [!INCLUDE[win7](~/includes/win7-md.md)] taskbar displays a scaled thumbnail of an application window's client area. You can set the <xref:System.Windows.Shell.TaskbarItemInfo.ThumbnailClipMargin%2A> property to specify a cropped area of the client window that is displayed in the thumbnail. For example, this property is useful if you want to focus the thumbnail on the window content while you exclude the application toolbars. This property cannot be used to display content in the thumbnail that is not already visible in the application window.  \n  \n You specify the area that is displayed in the thumbnail by setting the <xref:System.Windows.Thickness> of the border around the area. The border starts at the edge of the client window and extends inward by the specified amount. Content inside the border is displayed in the thumbnail.  \n  \n The following illustration shows the borders that define the <xref:System.Windows.Shell.TaskbarItemInfo.ThumbnailClipMargin%2A>.  \n  \n ![Thumbnail clip margin](~/add/media/wpfshell-clipmargin.png \"Thumbnail clip margin\")  \nThumbnail Clip Margin Border  \n  \n The following illustration shows the clipped thumbnail preview.  \n  \n ![Taskbar Item Info Sample](~/add/media/wpfshell-taskbariteminfo.png \"Taskbar Item Info Sample\")  \nWindows Taskbar Thumbnail Preview"
  example:
  - "The following example shows how to create a <xref:System.Windows.Shell.TaskbarItemInfo> in markup and set the <xref:System.Windows.Shell.TaskbarItemInfo.ThumbnailClipMargin%2A> property. This example is part of a larger example provided for the <xref:System.Windows.Shell.TaskbarItemInfo> class.  \n  \n [!code-xml[Shell_TaskbarItemSample#010](~/samples/snippets/csharp/VS_Snippets_Wpf/shell_taskbaritemsample/cs/mainwindow.xaml#010)]"
  syntax:
    content: public System.Windows.Thickness ThumbnailClipMargin { get; set; }
    return:
      type: System.Windows.Thickness
      description: A value that specifies the part of the application window's client area that is displayed in the taskbar thumbnail. The default is an empty <xref href="System.Windows.Thickness"></xref>.
  overload: System.Windows.Shell.TaskbarItemInfo.ThumbnailClipMargin*
  exceptions: []
  version:
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  monikers:
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Windows.Shell/TaskbarItemInfo.xml
  ms.technology:
  - dotnet-wpf
  author: stevehoag
  ms.author: shoag
  manager: wpickett
- uid: System.Windows.Shell.TaskbarItemInfo.ThumbnailClipMarginProperty
  commentId: F:System.Windows.Shell.TaskbarItemInfo.ThumbnailClipMarginProperty
  id: ThumbnailClipMarginProperty
  parent: System.Windows.Shell.TaskbarItemInfo
  langs:
  - csharp
  name: ThumbnailClipMarginProperty
  nameWithType: TaskbarItemInfo.ThumbnailClipMarginProperty
  fullName: TaskbarItemInfo.ThumbnailClipMarginProperty
  type: Field
  assemblies:
  - PresentationFramework
  namespace: System.Windows.Shell
  summary: Identifies the <xref href="System.Windows.Shell.TaskbarItemInfo.ThumbnailClipMargin"></xref> dependency property.
  syntax:
    content: public static readonly System.Windows.DependencyProperty ThumbnailClipMarginProperty;
    return:
      type: System.Windows.DependencyProperty
      description: ''
  exceptions: []
  version:
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  monikers:
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Windows.Shell/TaskbarItemInfo.xml
  ms.technology:
  - dotnet-wpf
  author: stevehoag
  ms.author: shoag
  manager: wpickett
references:
- uid: System.Windows.Freezable
  parent: System.Windows
  isExternal: false
  name: Freezable
  nameWithType: Freezable
  fullName: System.Windows.Freezable
- uid: System.Windows.Shell.TaskbarItemInfo.#ctor
  parent: System.Windows.Shell.TaskbarItemInfo
  isExternal: false
  name: TaskbarItemInfo()
  nameWithType: TaskbarItemInfo.TaskbarItemInfo()
  fullName: TaskbarItemInfo.TaskbarItemInfo()
- uid: System.Windows.Shell.TaskbarItemInfo.CreateInstanceCore
  parent: System.Windows.Shell.TaskbarItemInfo
  isExternal: false
  name: CreateInstanceCore()
  nameWithType: TaskbarItemInfo.CreateInstanceCore()
  fullName: TaskbarItemInfo.CreateInstanceCore()
- uid: System.Windows.Shell.TaskbarItemInfo.Description
  parent: System.Windows.Shell.TaskbarItemInfo
  isExternal: false
  name: Description
  nameWithType: TaskbarItemInfo.Description
  fullName: TaskbarItemInfo.Description
- uid: System.String
  parent: System
  isExternal: false
  name: String
  nameWithType: String
  fullName: System.String
- uid: System.Windows.Shell.TaskbarItemInfo.DescriptionProperty
  parent: System.Windows.Shell.TaskbarItemInfo
  isExternal: false
  name: DescriptionProperty
  nameWithType: TaskbarItemInfo.DescriptionProperty
  fullName: TaskbarItemInfo.DescriptionProperty
- uid: System.Windows.DependencyProperty
  parent: System.Windows
  isExternal: false
  name: DependencyProperty
  nameWithType: DependencyProperty
  fullName: System.Windows.DependencyProperty
- uid: System.Windows.Shell.TaskbarItemInfo.Overlay
  parent: System.Windows.Shell.TaskbarItemInfo
  isExternal: false
  name: Overlay
  nameWithType: TaskbarItemInfo.Overlay
  fullName: TaskbarItemInfo.Overlay
- uid: System.Windows.Media.ImageSource
  parent: System.Windows.Media
  isExternal: false
  name: ImageSource
  nameWithType: ImageSource
  fullName: System.Windows.Media.ImageSource
- uid: System.Windows.Shell.TaskbarItemInfo.OverlayProperty
  parent: System.Windows.Shell.TaskbarItemInfo
  isExternal: false
  name: OverlayProperty
  nameWithType: TaskbarItemInfo.OverlayProperty
  fullName: TaskbarItemInfo.OverlayProperty
- uid: System.Windows.Shell.TaskbarItemInfo.ProgressState
  parent: System.Windows.Shell.TaskbarItemInfo
  isExternal: false
  name: ProgressState
  nameWithType: TaskbarItemInfo.ProgressState
  fullName: TaskbarItemInfo.ProgressState
- uid: System.Windows.Shell.TaskbarItemProgressState
  parent: System.Windows.Shell
  isExternal: false
  name: TaskbarItemProgressState
  nameWithType: TaskbarItemProgressState
  fullName: System.Windows.Shell.TaskbarItemProgressState
- uid: System.Windows.Shell.TaskbarItemInfo.ProgressStateProperty
  parent: System.Windows.Shell.TaskbarItemInfo
  isExternal: false
  name: ProgressStateProperty
  nameWithType: TaskbarItemInfo.ProgressStateProperty
  fullName: TaskbarItemInfo.ProgressStateProperty
- uid: System.Windows.Shell.TaskbarItemInfo.ProgressValue
  parent: System.Windows.Shell.TaskbarItemInfo
  isExternal: false
  name: ProgressValue
  nameWithType: TaskbarItemInfo.ProgressValue
  fullName: TaskbarItemInfo.ProgressValue
- uid: System.Double
  parent: System
  isExternal: false
  name: Double
  nameWithType: Double
  fullName: System.Double
- uid: System.Windows.Shell.TaskbarItemInfo.ProgressValueProperty
  parent: System.Windows.Shell.TaskbarItemInfo
  isExternal: false
  name: ProgressValueProperty
  nameWithType: TaskbarItemInfo.ProgressValueProperty
  fullName: TaskbarItemInfo.ProgressValueProperty
- uid: System.Windows.Shell.TaskbarItemInfo.ThumbButtonInfos
  parent: System.Windows.Shell.TaskbarItemInfo
  isExternal: false
  name: ThumbButtonInfos
  nameWithType: TaskbarItemInfo.ThumbButtonInfos
  fullName: TaskbarItemInfo.ThumbButtonInfos
- uid: System.Windows.Shell.ThumbButtonInfoCollection
  parent: System.Windows.Shell
  isExternal: false
  name: ThumbButtonInfoCollection
  nameWithType: ThumbButtonInfoCollection
  fullName: System.Windows.Shell.ThumbButtonInfoCollection
- uid: System.Windows.Shell.TaskbarItemInfo.ThumbButtonInfosProperty
  parent: System.Windows.Shell.TaskbarItemInfo
  isExternal: false
  name: ThumbButtonInfosProperty
  nameWithType: TaskbarItemInfo.ThumbButtonInfosProperty
  fullName: TaskbarItemInfo.ThumbButtonInfosProperty
- uid: System.Windows.Shell.TaskbarItemInfo.ThumbnailClipMargin
  parent: System.Windows.Shell.TaskbarItemInfo
  isExternal: false
  name: ThumbnailClipMargin
  nameWithType: TaskbarItemInfo.ThumbnailClipMargin
  fullName: TaskbarItemInfo.ThumbnailClipMargin
- uid: System.Windows.Thickness
  parent: System.Windows
  isExternal: false
  name: Thickness
  nameWithType: Thickness
  fullName: System.Windows.Thickness
- uid: System.Windows.Shell.TaskbarItemInfo.ThumbnailClipMarginProperty
  parent: System.Windows.Shell.TaskbarItemInfo
  isExternal: false
  name: ThumbnailClipMarginProperty
  nameWithType: TaskbarItemInfo.ThumbnailClipMarginProperty
  fullName: TaskbarItemInfo.ThumbnailClipMarginProperty
- uid: System.Windows.Shell.TaskbarItemInfo.#ctor*
  parent: System.Windows.Shell.TaskbarItemInfo
  isExternal: false
  name: TaskbarItemInfo
  nameWithType: TaskbarItemInfo.TaskbarItemInfo
  fullName: TaskbarItemInfo.TaskbarItemInfo
  monikers:
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Windows.Shell/TaskbarItemInfo.xml
- uid: System.Windows.Shell.TaskbarItemInfo.CreateInstanceCore*
  parent: System.Windows.Shell.TaskbarItemInfo
  isExternal: false
  name: CreateInstanceCore
  nameWithType: TaskbarItemInfo.CreateInstanceCore
  fullName: TaskbarItemInfo.CreateInstanceCore
  monikers:
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Windows.Shell/TaskbarItemInfo.xml
- uid: System.Windows.Shell.TaskbarItemInfo.Description*
  parent: System.Windows.Shell.TaskbarItemInfo
  isExternal: false
  name: Description
  nameWithType: TaskbarItemInfo.Description
  fullName: TaskbarItemInfo.Description
  monikers:
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Windows.Shell/TaskbarItemInfo.xml
- uid: System.Windows.Shell.TaskbarItemInfo.Overlay*
  parent: System.Windows.Shell.TaskbarItemInfo
  isExternal: false
  name: Overlay
  nameWithType: TaskbarItemInfo.Overlay
  fullName: TaskbarItemInfo.Overlay
  monikers:
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Windows.Shell/TaskbarItemInfo.xml
- uid: System.Windows.Shell.TaskbarItemInfo.ProgressState*
  parent: System.Windows.Shell.TaskbarItemInfo
  isExternal: false
  name: ProgressState
  nameWithType: TaskbarItemInfo.ProgressState
  fullName: TaskbarItemInfo.ProgressState
  monikers:
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Windows.Shell/TaskbarItemInfo.xml
- uid: System.Windows.Shell.TaskbarItemInfo.ProgressValue*
  parent: System.Windows.Shell.TaskbarItemInfo
  isExternal: false
  name: ProgressValue
  nameWithType: TaskbarItemInfo.ProgressValue
  fullName: TaskbarItemInfo.ProgressValue
  monikers:
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Windows.Shell/TaskbarItemInfo.xml
- uid: System.Windows.Shell.TaskbarItemInfo.ThumbButtonInfos*
  parent: System.Windows.Shell.TaskbarItemInfo
  isExternal: false
  name: ThumbButtonInfos
  nameWithType: TaskbarItemInfo.ThumbButtonInfos
  fullName: TaskbarItemInfo.ThumbButtonInfos
  monikers:
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Windows.Shell/TaskbarItemInfo.xml
- uid: System.Windows.Shell.TaskbarItemInfo.ThumbnailClipMargin*
  parent: System.Windows.Shell.TaskbarItemInfo
  isExternal: false
  name: ThumbnailClipMargin
  nameWithType: TaskbarItemInfo.ThumbnailClipMargin
  fullName: TaskbarItemInfo.ThumbnailClipMargin
  monikers:
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Windows.Shell/TaskbarItemInfo.xml
- uid: System.Windows.DependencyObject.Equals(System.Object)
  parent: System.Windows.DependencyObject
  isExternal: false
  name: Equals(Object)
  nameWithType: DependencyObject.Equals(Object)
  fullName: DependencyObject.Equals(Object)
- uid: System.Object.Equals(System.Object,System.Object)
  parent: System.Object
  isExternal: false
  name: Equals(Object, Object)
  nameWithType: Object.Equals(Object, Object)
  fullName: Object.Equals(Object, Object)
- uid: System.Windows.DependencyObject.GetHashCode
  parent: System.Windows.DependencyObject
  isExternal: false
  name: GetHashCode()
  nameWithType: DependencyObject.GetHashCode()
  fullName: DependencyObject.GetHashCode()
- uid: System.Object.GetType
  parent: System.Object
  isExternal: false
  name: GetType()
  nameWithType: Object.GetType()
  fullName: Object.GetType()
- uid: System.Object.MemberwiseClone
  parent: System.Object
  isExternal: false
  name: MemberwiseClone()
  nameWithType: Object.MemberwiseClone()
  fullName: Object.MemberwiseClone()
- uid: System.Object.ReferenceEquals(System.Object,System.Object)
  parent: System.Object
  isExternal: false
  name: ReferenceEquals(Object, Object)
  nameWithType: Object.ReferenceEquals(Object, Object)
  fullName: Object.ReferenceEquals(Object, Object)
- uid: System.Object.ToString
  parent: System.Object
  isExternal: false
  name: ToString()
  nameWithType: Object.ToString()
  fullName: Object.ToString()
- uid: System.Windows.Threading.DispatcherObject.CheckAccess
  parent: System.Windows.Threading.DispatcherObject
  isExternal: false
  name: CheckAccess()
  nameWithType: DispatcherObject.CheckAccess()
  fullName: DispatcherObject.CheckAccess()
- uid: System.Windows.Threading.DispatcherObject.Dispatcher
  parent: System.Windows.Threading.DispatcherObject
  isExternal: false
  name: Dispatcher
  nameWithType: DispatcherObject.Dispatcher
  fullName: DispatcherObject.Dispatcher
- uid: System.Windows.Threading.DispatcherObject.VerifyAccess
  parent: System.Windows.Threading.DispatcherObject
  isExternal: false
  name: VerifyAccess()
  nameWithType: DispatcherObject.VerifyAccess()
  fullName: DispatcherObject.VerifyAccess()
- uid: System.Windows.DependencyObject.ClearValue(System.Windows.DependencyProperty)
  parent: System.Windows.DependencyObject
  isExternal: false
  name: ClearValue(DependencyProperty)
  nameWithType: DependencyObject.ClearValue(DependencyProperty)
  fullName: DependencyObject.ClearValue(DependencyProperty)
- uid: System.Windows.DependencyObject.ClearValue(System.Windows.DependencyPropertyKey)
  parent: System.Windows.DependencyObject
  isExternal: false
  name: ClearValue(DependencyPropertyKey)
  nameWithType: DependencyObject.ClearValue(DependencyPropertyKey)
  fullName: DependencyObject.ClearValue(DependencyPropertyKey)
- uid: System.Windows.DependencyObject.CoerceValue(System.Windows.DependencyProperty)
  parent: System.Windows.DependencyObject
  isExternal: false
  name: CoerceValue(DependencyProperty)
  nameWithType: DependencyObject.CoerceValue(DependencyProperty)
  fullName: DependencyObject.CoerceValue(DependencyProperty)
- uid: System.Windows.DependencyObject.DependencyObjectType
  parent: System.Windows.DependencyObject
  isExternal: false
  name: DependencyObjectType
  nameWithType: DependencyObject.DependencyObjectType
  fullName: DependencyObject.DependencyObjectType
- uid: System.Windows.DependencyObject.GetLocalValueEnumerator
  parent: System.Windows.DependencyObject
  isExternal: false
  name: GetLocalValueEnumerator()
  nameWithType: DependencyObject.GetLocalValueEnumerator()
  fullName: DependencyObject.GetLocalValueEnumerator()
- uid: System.Windows.DependencyObject.GetValue(System.Windows.DependencyProperty)
  parent: System.Windows.DependencyObject
  isExternal: false
  name: GetValue(DependencyProperty)
  nameWithType: DependencyObject.GetValue(DependencyProperty)
  fullName: DependencyObject.GetValue(DependencyProperty)
- uid: System.Windows.DependencyObject.InvalidateProperty(System.Windows.DependencyProperty)
  parent: System.Windows.DependencyObject
  isExternal: false
  name: InvalidateProperty(DependencyProperty)
  nameWithType: DependencyObject.InvalidateProperty(DependencyProperty)
  fullName: DependencyObject.InvalidateProperty(DependencyProperty)
- uid: System.Windows.DependencyObject.IsSealed
  parent: System.Windows.DependencyObject
  isExternal: false
  name: IsSealed
  nameWithType: DependencyObject.IsSealed
  fullName: DependencyObject.IsSealed
- uid: System.Windows.Freezable.OnPropertyChanged(System.Windows.DependencyPropertyChangedEventArgs)
  parent: System.Windows.Freezable
  isExternal: false
  name: OnPropertyChanged(DependencyPropertyChangedEventArgs)
  nameWithType: Freezable.OnPropertyChanged(DependencyPropertyChangedEventArgs)
  fullName: Freezable.OnPropertyChanged(DependencyPropertyChangedEventArgs)
- uid: System.Windows.DependencyObject.ReadLocalValue(System.Windows.DependencyProperty)
  parent: System.Windows.DependencyObject
  isExternal: false
  name: ReadLocalValue(DependencyProperty)
  nameWithType: DependencyObject.ReadLocalValue(DependencyProperty)
  fullName: DependencyObject.ReadLocalValue(DependencyProperty)
- uid: System.Windows.DependencyObject.SetCurrentValue(System.Windows.DependencyProperty,System.Object)
  parent: System.Windows.DependencyObject
  isExternal: false
  name: SetCurrentValue(DependencyProperty, Object)
  nameWithType: DependencyObject.SetCurrentValue(DependencyProperty, Object)
  fullName: DependencyObject.SetCurrentValue(DependencyProperty, Object)
- uid: System.Windows.DependencyObject.SetValue(System.Windows.DependencyProperty,System.Object)
  parent: System.Windows.DependencyObject
  isExternal: false
  name: SetValue(DependencyProperty, Object)
  nameWithType: DependencyObject.SetValue(DependencyProperty, Object)
  fullName: DependencyObject.SetValue(DependencyProperty, Object)
- uid: System.Windows.DependencyObject.SetValue(System.Windows.DependencyPropertyKey,System.Object)
  parent: System.Windows.DependencyObject
  isExternal: false
  name: SetValue(DependencyPropertyKey, Object)
  nameWithType: DependencyObject.SetValue(DependencyPropertyKey, Object)
  fullName: DependencyObject.SetValue(DependencyPropertyKey, Object)
- uid: System.Windows.DependencyObject.ShouldSerializeProperty(System.Windows.DependencyProperty)
  parent: System.Windows.DependencyObject
  isExternal: false
  name: ShouldSerializeProperty(DependencyProperty)
  nameWithType: DependencyObject.ShouldSerializeProperty(DependencyProperty)
  fullName: DependencyObject.ShouldSerializeProperty(DependencyProperty)
- uid: System.Windows.Freezable.CanFreeze
  parent: System.Windows.Freezable
  isExternal: false
  name: CanFreeze
  nameWithType: Freezable.CanFreeze
  fullName: Freezable.CanFreeze
- uid: System.Windows.Freezable.Changed
  parent: System.Windows.Freezable
  isExternal: false
  name: Changed
  nameWithType: Freezable.Changed
  fullName: Freezable.Changed
- uid: System.Windows.Freezable.Clone
  parent: System.Windows.Freezable
  isExternal: false
  name: Clone()
  nameWithType: Freezable.Clone()
  fullName: Freezable.Clone()
- uid: System.Windows.Freezable.CloneCore(System.Windows.Freezable)
  parent: System.Windows.Freezable
  isExternal: false
  name: CloneCore(Freezable)
  nameWithType: Freezable.CloneCore(Freezable)
  fullName: Freezable.CloneCore(Freezable)
- uid: System.Windows.Freezable.CloneCurrentValue
  parent: System.Windows.Freezable
  isExternal: false
  name: CloneCurrentValue()
  nameWithType: Freezable.CloneCurrentValue()
  fullName: Freezable.CloneCurrentValue()
- uid: System.Windows.Freezable.CloneCurrentValueCore(System.Windows.Freezable)
  parent: System.Windows.Freezable
  isExternal: false
  name: CloneCurrentValueCore(Freezable)
  nameWithType: Freezable.CloneCurrentValueCore(Freezable)
  fullName: Freezable.CloneCurrentValueCore(Freezable)
- uid: System.Windows.Freezable.CreateInstance
  parent: System.Windows.Freezable
  isExternal: false
  name: CreateInstance()
  nameWithType: Freezable.CreateInstance()
  fullName: Freezable.CreateInstance()
- uid: System.Windows.Freezable.Freeze
  parent: System.Windows.Freezable
  isExternal: false
  name: Freeze()
  nameWithType: Freezable.Freeze()
  fullName: Freezable.Freeze()
- uid: System.Windows.Freezable.Freeze(System.Windows.Freezable,System.Boolean)
  parent: System.Windows.Freezable
  isExternal: false
  name: Freeze(Freezable, Boolean)
  nameWithType: Freezable.Freeze(Freezable, Boolean)
  fullName: Freezable.Freeze(Freezable, Boolean)
- uid: System.Windows.Freezable.FreezeCore(System.Boolean)
  parent: System.Windows.Freezable
  isExternal: false
  name: FreezeCore(Boolean)
  nameWithType: Freezable.FreezeCore(Boolean)
  fullName: Freezable.FreezeCore(Boolean)
- uid: System.Windows.Freezable.GetAsFrozen
  parent: System.Windows.Freezable
  isExternal: false
  name: GetAsFrozen()
  nameWithType: Freezable.GetAsFrozen()
  fullName: Freezable.GetAsFrozen()
- uid: System.Windows.Freezable.GetAsFrozenCore(System.Windows.Freezable)
  parent: System.Windows.Freezable
  isExternal: false
  name: GetAsFrozenCore(Freezable)
  nameWithType: Freezable.GetAsFrozenCore(Freezable)
  fullName: Freezable.GetAsFrozenCore(Freezable)
- uid: System.Windows.Freezable.GetCurrentValueAsFrozen
  parent: System.Windows.Freezable
  isExternal: false
  name: GetCurrentValueAsFrozen()
  nameWithType: Freezable.GetCurrentValueAsFrozen()
  fullName: Freezable.GetCurrentValueAsFrozen()
- uid: System.Windows.Freezable.GetCurrentValueAsFrozenCore(System.Windows.Freezable)
  parent: System.Windows.Freezable
  isExternal: false
  name: GetCurrentValueAsFrozenCore(Freezable)
  nameWithType: Freezable.GetCurrentValueAsFrozenCore(Freezable)
  fullName: Freezable.GetCurrentValueAsFrozenCore(Freezable)
- uid: System.Windows.Freezable.IsFrozen
  parent: System.Windows.Freezable
  isExternal: false
  name: IsFrozen
  nameWithType: Freezable.IsFrozen
  fullName: Freezable.IsFrozen
- uid: System.Windows.Freezable.OnChanged
  parent: System.Windows.Freezable
  isExternal: false
  name: OnChanged()
  nameWithType: Freezable.OnChanged()
  fullName: Freezable.OnChanged()
- uid: System.Windows.Freezable.OnFreezablePropertyChanged(System.Windows.DependencyObject,System.Windows.DependencyObject)
  parent: System.Windows.Freezable
  isExternal: false
  name: OnFreezablePropertyChanged(DependencyObject, DependencyObject)
  nameWithType: Freezable.OnFreezablePropertyChanged(DependencyObject, DependencyObject)
  fullName: Freezable.OnFreezablePropertyChanged(DependencyObject, DependencyObject)
- uid: System.Windows.Freezable.OnFreezablePropertyChanged(System.Windows.DependencyObject,System.Windows.DependencyObject,System.Windows.DependencyProperty)
  parent: System.Windows.Freezable
  isExternal: false
  name: OnFreezablePropertyChanged(DependencyObject, DependencyObject, DependencyProperty)
  nameWithType: Freezable.OnFreezablePropertyChanged(DependencyObject, DependencyObject, DependencyProperty)
  fullName: Freezable.OnFreezablePropertyChanged(DependencyObject, DependencyObject, DependencyProperty)
- uid: System.Windows.Freezable.ReadPreamble
  parent: System.Windows.Freezable
  isExternal: false
  name: ReadPreamble()
  nameWithType: Freezable.ReadPreamble()
  fullName: Freezable.ReadPreamble()
- uid: System.Windows.Freezable.WritePostscript
  parent: System.Windows.Freezable
  isExternal: false
  name: WritePostscript()
  nameWithType: Freezable.WritePostscript()
  fullName: Freezable.WritePostscript()
- uid: System.Windows.Freezable.WritePreamble
  parent: System.Windows.Freezable
  isExternal: false
  name: WritePreamble()
  nameWithType: Freezable.WritePreamble()
  fullName: Freezable.WritePreamble()
