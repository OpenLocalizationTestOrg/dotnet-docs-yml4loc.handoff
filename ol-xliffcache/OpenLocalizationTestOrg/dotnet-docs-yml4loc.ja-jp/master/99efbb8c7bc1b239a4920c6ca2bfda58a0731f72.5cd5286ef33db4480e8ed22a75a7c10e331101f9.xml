{"nodes":[{"content":"Provides a way of reading a forward-only stream of rows from a SQL Server database. This class cannot be inherited.","nodes":[{"pos":[0,115],"content":"Provides a way of reading a forward-only stream of rows from a SQL Server database. This class cannot be inherited.","nodes":[{"content":"Provides a way of reading a forward-only stream of rows from a SQL Server database. This class cannot be inherited.","pos":[0,115],"nodes":[{"content":"Provides a way of reading a forward-only stream of rows from a SQL Server database.","pos":[0,83]},{"content":"This class cannot be inherited.","pos":[84,115]}]}]}],"pos":[5012,5128],"yaml":true},{"content":"To create a <xref:System.Data.SqlClient.SqlDataReader>, you must call the <xref:System.Data.SqlClient.SqlCommand.ExecuteReader%2A> method of the <xref:System.Data.SqlClient.SqlCommand> object, instead of directly using a constructor.  \n  \n While the <xref:System.Data.SqlClient.SqlDataReader> is being used, the associated <xref:System.Data.SqlClient.SqlConnection> is busy serving the <xref:System.Data.SqlClient.SqlDataReader>, and no other operations can be performed on the <xref:System.Data.SqlClient.SqlConnection> other than closing it. This is the case until the <xref:System.Data.SqlClient.SqlDataReader.Close%2A> method of the <xref:System.Data.SqlClient.SqlDataReader> is called. For example, you cannot retrieve output parameters until after you call <xref:System.Data.SqlClient.SqlDataReader.Close%2A>.  \n  \n Changes made to a result set by another process or thread while data is being read may be visible to the user of the `SqlDataReader`. However, the precise behavior is timing dependent.  \n  \n <xref:System.Data.SqlClient.SqlDataReader.IsClosed%2A> and <xref:System.Data.SqlClient.SqlDataReader.RecordsAffected%2A> are the only properties that you can call after the <xref:System.Data.SqlClient.SqlDataReader> is closed. Although the <xref:System.Data.SqlClient.SqlDataReader.RecordsAffected%2A> property may be accessed while the <xref:System.Data.SqlClient.SqlDataReader> exists, always call <xref:System.Data.SqlClient.SqlDataReader.Close%2A> before returning the value of <xref:System.Data.SqlClient.SqlDataReader.RecordsAffected%2A> to guarantee an accurate return value.  \n  \n When using sequential access (<xref:System.Data.CommandBehavior?displayProperty=fullName>), an <xref:System.InvalidOperationException> will be raised if the <xref:System.Data.SqlClient.SqlDataReader> position is advanced and another read operation is attempted on the previous column.  \n  \n> [!NOTE]\n>  For optimal performance, <xref:System.Data.SqlClient.SqlDataReader> avoids creating unnecessary objects or making unnecessary copies of data. Therefore, multiple calls to methods such as <xref:System.Data.SqlClient.SqlDataReader.GetValue%2A> return a reference to the same object. Use caution if you are modifying the underlying value of the objects returned by methods such as <xref:System.Data.SqlClient.SqlDataReader.GetValue%2A>.","nodes":[{"pos":[0,233],"content":"To create a <xref:System.Data.SqlClient.SqlDataReader>, you must call the <xref:System.Data.SqlClient.SqlCommand.ExecuteReader%2A> method of the <xref:System.Data.SqlClient.SqlCommand> object, instead of directly using a constructor.","nodes":[{"content":"To create a <ph id=\"ph1\">&lt;xref:System.Data.SqlClient.SqlDataReader&gt;</ph>, you must call the <ph id=\"ph2\">&lt;xref:System.Data.SqlClient.SqlCommand.ExecuteReader%2A&gt;</ph> method of the <ph id=\"ph3\">&lt;xref:System.Data.SqlClient.SqlCommand&gt;</ph> object, instead of directly using a constructor.","pos":[0,233],"source":"To create a <xref:System.Data.SqlClient.SqlDataReader>, you must call the <xref:System.Data.SqlClient.SqlCommand.ExecuteReader%2A> method of the <xref:System.Data.SqlClient.SqlCommand> object, instead of directly using a constructor."}]},{"pos":[240,815],"content":"While the <xref:System.Data.SqlClient.SqlDataReader> is being used, the associated <xref:System.Data.SqlClient.SqlConnection> is busy serving the <xref:System.Data.SqlClient.SqlDataReader>, and no other operations can be performed on the <xref:System.Data.SqlClient.SqlConnection> other than closing it. This is the case until the <xref:System.Data.SqlClient.SqlDataReader.Close%2A> method of the <xref:System.Data.SqlClient.SqlDataReader> is called. For example, you cannot retrieve output parameters until after you call <xref:System.Data.SqlClient.SqlDataReader.Close%2A>.","nodes":[{"content":"While the <xref:System.Data.SqlClient.SqlDataReader> is being used, the associated <xref:System.Data.SqlClient.SqlConnection> is busy serving the <xref:System.Data.SqlClient.SqlDataReader>, and no other operations can be performed on the <xref:System.Data.SqlClient.SqlConnection> other than closing it. This is the case until the <xref:System.Data.SqlClient.SqlDataReader.Close%2A> method of the <xref:System.Data.SqlClient.SqlDataReader> is called. For example, you cannot retrieve output parameters until after you call <xref:System.Data.SqlClient.SqlDataReader.Close%2A>.","pos":[0,575],"nodes":[{"content":"While the <ph id=\"ph1\">&lt;xref:System.Data.SqlClient.SqlDataReader&gt;</ph> is being used, the associated <ph id=\"ph2\">&lt;xref:System.Data.SqlClient.SqlConnection&gt;</ph> is busy serving the <ph id=\"ph3\">&lt;xref:System.Data.SqlClient.SqlDataReader&gt;</ph>, and no other operations can be performed on the <ph id=\"ph4\">&lt;xref:System.Data.SqlClient.SqlConnection&gt;</ph> other than closing it.","pos":[0,303],"source":"While the <xref:System.Data.SqlClient.SqlDataReader> is being used, the associated <xref:System.Data.SqlClient.SqlConnection> is busy serving the <xref:System.Data.SqlClient.SqlDataReader>, and no other operations can be performed on the <xref:System.Data.SqlClient.SqlConnection> other than closing it."},{"content":"This is the case until the <ph id=\"ph1\">&lt;xref:System.Data.SqlClient.SqlDataReader.Close%2A&gt;</ph> method of the <ph id=\"ph2\">&lt;xref:System.Data.SqlClient.SqlDataReader&gt;</ph> is called.","pos":[304,450],"source":" This is the case until the <xref:System.Data.SqlClient.SqlDataReader.Close%2A> method of the <xref:System.Data.SqlClient.SqlDataReader> is called."},{"content":"For example, you cannot retrieve output parameters until after you call <ph id=\"ph1\">&lt;xref:System.Data.SqlClient.SqlDataReader.Close%2A&gt;</ph>.","pos":[451,575],"source":" For example, you cannot retrieve output parameters until after you call <xref:System.Data.SqlClient.SqlDataReader.Close%2A>."}]}]},{"pos":[822,1006],"content":"Changes made to a result set by another process or thread while data is being read may be visible to the user of the `SqlDataReader`. However, the precise behavior is timing dependent.","nodes":[{"content":"Changes made to a result set by another process or thread while data is being read may be visible to the user of the <ph id=\"ph1\">`SqlDataReader`</ph>.","pos":[0,133],"source":"Changes made to a result set by another process or thread while data is being read may be visible to the user of the `SqlDataReader`."},{"content":"However, the precise behavior is timing dependent.","pos":[134,184]}]},{"pos":[1013,1595],"content":"<xref:System.Data.SqlClient.SqlDataReader.IsClosed%2A> and <xref:System.Data.SqlClient.SqlDataReader.RecordsAffected%2A> are the only properties that you can call after the <xref:System.Data.SqlClient.SqlDataReader> is closed. Although the <xref:System.Data.SqlClient.SqlDataReader.RecordsAffected%2A> property may be accessed while the <xref:System.Data.SqlClient.SqlDataReader> exists, always call <xref:System.Data.SqlClient.SqlDataReader.Close%2A> before returning the value of <xref:System.Data.SqlClient.SqlDataReader.RecordsAffected%2A> to guarantee an accurate return value.","nodes":[{"content":"<xref:System.Data.SqlClient.SqlDataReader.IsClosed%2A> and <xref:System.Data.SqlClient.SqlDataReader.RecordsAffected%2A> are the only properties that you can call after the <xref:System.Data.SqlClient.SqlDataReader> is closed. Although the <xref:System.Data.SqlClient.SqlDataReader.RecordsAffected%2A> property may be accessed while the <xref:System.Data.SqlClient.SqlDataReader> exists, always call <xref:System.Data.SqlClient.SqlDataReader.Close%2A> before returning the value of <xref:System.Data.SqlClient.SqlDataReader.RecordsAffected%2A> to guarantee an accurate return value.","pos":[0,582],"nodes":[{"content":"<ph id=\"ph1\">&lt;xref:System.Data.SqlClient.SqlDataReader.IsClosed%2A&gt;</ph> and <ph id=\"ph2\">&lt;xref:System.Data.SqlClient.SqlDataReader.RecordsAffected%2A&gt;</ph> are the only properties that you can call after the <ph id=\"ph3\">&lt;xref:System.Data.SqlClient.SqlDataReader&gt;</ph> is closed.","pos":[0,226],"source":"<xref:System.Data.SqlClient.SqlDataReader.IsClosed%2A> and <xref:System.Data.SqlClient.SqlDataReader.RecordsAffected%2A> are the only properties that you can call after the <xref:System.Data.SqlClient.SqlDataReader> is closed."},{"content":"Although the <ph id=\"ph1\">&lt;xref:System.Data.SqlClient.SqlDataReader.RecordsAffected%2A&gt;</ph> property may be accessed while the <ph id=\"ph2\">&lt;xref:System.Data.SqlClient.SqlDataReader&gt;</ph> exists, always call <ph id=\"ph3\">&lt;xref:System.Data.SqlClient.SqlDataReader.Close%2A&gt;</ph> before returning the value of <ph id=\"ph4\">&lt;xref:System.Data.SqlClient.SqlDataReader.RecordsAffected%2A&gt;</ph> to guarantee an accurate return value.","pos":[227,582],"source":" Although the <xref:System.Data.SqlClient.SqlDataReader.RecordsAffected%2A> property may be accessed while the <xref:System.Data.SqlClient.SqlDataReader> exists, always call <xref:System.Data.SqlClient.SqlDataReader.Close%2A> before returning the value of <xref:System.Data.SqlClient.SqlDataReader.RecordsAffected%2A> to guarantee an accurate return value."}]}]},{"pos":[1602,1886],"content":"When using sequential access (<xref:System.Data.CommandBehavior?displayProperty=fullName>), an <xref:System.InvalidOperationException> will be raised if the <xref:System.Data.SqlClient.SqlDataReader> position is advanced and another read operation is attempted on the previous column.","nodes":[{"content":"When using sequential access (<ph id=\"ph1\">&lt;xref:System.Data.CommandBehavior?displayProperty=fullName&gt;</ph>), an <ph id=\"ph2\">&lt;xref:System.InvalidOperationException&gt;</ph> will be raised if the <ph id=\"ph3\">&lt;xref:System.Data.SqlClient.SqlDataReader&gt;</ph> position is advanced and another read operation is attempted on the previous column.","pos":[0,284],"source":"When using sequential access (<xref:System.Data.CommandBehavior?displayProperty=fullName>), an <xref:System.InvalidOperationException> will be raised if the <xref:System.Data.SqlClient.SqlDataReader> position is advanced and another read operation is attempted on the previous column."}]},{"pos":[1894,2338],"content":"[!NOTE]\n For optimal performance, <xref:System.Data.SqlClient.SqlDataReader> avoids creating unnecessary objects or making unnecessary copies of data. Therefore, multiple calls to methods such as <xref:System.Data.SqlClient.SqlDataReader.GetValue%2A> return a reference to the same object. Use caution if you are modifying the underlying value of the objects returned by methods such as <xref:System.Data.SqlClient.SqlDataReader.GetValue%2A>.","leadings":["","> "],"nodes":[{"content":" For optimal performance, <xref:System.Data.SqlClient.SqlDataReader> avoids creating unnecessary objects or making unnecessary copies of data. Therefore, multiple calls to methods such as <xref:System.Data.SqlClient.SqlDataReader.GetValue%2A> return a reference to the same object. Use caution if you are modifying the underlying value of the objects returned by methods such as <xref:System.Data.SqlClient.SqlDataReader.GetValue%2A>.","pos":[8,442],"nodes":[{"content":"For optimal performance, <ph id=\"ph1\">&lt;xref:System.Data.SqlClient.SqlDataReader&gt;</ph> avoids creating unnecessary objects or making unnecessary copies of data.","pos":[1,142],"source":" For optimal performance, <xref:System.Data.SqlClient.SqlDataReader> avoids creating unnecessary objects or making unnecessary copies of data."},{"content":"Therefore, multiple calls to methods such as <ph id=\"ph1\">&lt;xref:System.Data.SqlClient.SqlDataReader.GetValue%2A&gt;</ph> return a reference to the same object.","pos":[143,281],"source":" Therefore, multiple calls to methods such as <xref:System.Data.SqlClient.SqlDataReader.GetValue%2A> return a reference to the same object."},{"content":"Use caution if you are modifying the underlying value of the objects returned by methods such as <ph id=\"ph1\">&lt;xref:System.Data.SqlClient.SqlDataReader.GetValue%2A&gt;</ph>.","pos":[282,434],"source":" Use caution if you are modifying the underlying value of the objects returned by methods such as <xref:System.Data.SqlClient.SqlDataReader.GetValue%2A>."}]}]}],"pos":[5139,7491],"yaml":true,"extradata":"MT"},{"content":"Closes the <xref href=\"System.Data.SqlClient.SqlDataReader\"></xref> object.","nodes":[{"pos":[0,75],"content":"Closes the <ph id=\"ph1\">&lt;xref href=\"System.Data.SqlClient.SqlDataReader\"&gt;&lt;/xref&gt;</ph> object.","source":"Closes the <xref href=\"System.Data.SqlClient.SqlDataReader\"></xref> object."}],"pos":[10991,11067],"yaml":true},{"content":"You must explicitly call the <xref:System.Data.SqlClient.SqlDataReader.Close%2A> method when you are through using the <xref:System.Data.SqlClient.SqlDataReader> to use the associated <xref:System.Data.SqlClient.SqlConnection> for any other purpose.  \n  \n The `Close` method fills in the values for output parameters, return values and `RecordsAffected`, increasing the time that it takes to close a `SqlDataReader` that was used to process a large or complex query. When the return values and the number of records affected by a query are not significant, the time that it takes to close the `SqlDataReader` can be reduced by calling the <xref:System.Data.SqlClient.SqlCommand.Cancel%2A> method of the associated <xref:System.Data.SqlClient.SqlCommand> object before calling the `Close` method.  \n  \n> [!CAUTION]\n>  Do not call `Close` or `Dispose` on a Connection, a DataReader, or any other managed object in the `Finalize` method of your class. In a finalizer, you should only release unmanaged resources that your class owns directly. If your class does not own any unmanaged resources, do not include a `Finalize` method in your class definition. For more information, see [Garbage Collection](http://msdn.microsoft.com/library/22b6cb97-0c80-4eeb-a2cf-5ed7655e37f9).","nodes":[{"pos":[0,249],"content":"You must explicitly call the <xref:System.Data.SqlClient.SqlDataReader.Close%2A> method when you are through using the <xref:System.Data.SqlClient.SqlDataReader> to use the associated <xref:System.Data.SqlClient.SqlConnection> for any other purpose.","nodes":[{"content":"You must explicitly call the <ph id=\"ph1\">&lt;xref:System.Data.SqlClient.SqlDataReader.Close%2A&gt;</ph> method when you are through using the <ph id=\"ph2\">&lt;xref:System.Data.SqlClient.SqlDataReader&gt;</ph> to use the associated <ph id=\"ph3\">&lt;xref:System.Data.SqlClient.SqlConnection&gt;</ph> for any other purpose.","pos":[0,249],"source":"You must explicitly call the <xref:System.Data.SqlClient.SqlDataReader.Close%2A> method when you are through using the <xref:System.Data.SqlClient.SqlDataReader> to use the associated <xref:System.Data.SqlClient.SqlConnection> for any other purpose."}]},{"pos":[256,795],"content":"The `Close` method fills in the values for output parameters, return values and `RecordsAffected`, increasing the time that it takes to close a `SqlDataReader` that was used to process a large or complex query. When the return values and the number of records affected by a query are not significant, the time that it takes to close the `SqlDataReader` can be reduced by calling the <xref:System.Data.SqlClient.SqlCommand.Cancel%2A> method of the associated <xref:System.Data.SqlClient.SqlCommand> object before calling the `Close` method.","nodes":[{"content":"The <ph id=\"ph1\">`Close`</ph> method fills in the values for output parameters, return values and <ph id=\"ph2\">`RecordsAffected`</ph>, increasing the time that it takes to close a <ph id=\"ph3\">`SqlDataReader`</ph> that was used to process a large or complex query.","pos":[0,210],"source":"The `Close` method fills in the values for output parameters, return values and `RecordsAffected`, increasing the time that it takes to close a `SqlDataReader` that was used to process a large or complex query."},{"content":"When the return values and the number of records affected by a query are not significant, the time that it takes to close the <ph id=\"ph1\">`SqlDataReader`</ph> can be reduced by calling the <ph id=\"ph2\">&lt;xref:System.Data.SqlClient.SqlCommand.Cancel%2A&gt;</ph> method of the associated <ph id=\"ph3\">&lt;xref:System.Data.SqlClient.SqlCommand&gt;</ph> object before calling the <ph id=\"ph4\">`Close`</ph> method.","pos":[211,539],"source":" When the return values and the number of records affected by a query are not significant, the time that it takes to close the `SqlDataReader` can be reduced by calling the <xref:System.Data.SqlClient.SqlCommand.Cancel%2A> method of the associated <xref:System.Data.SqlClient.SqlCommand> object before calling the `Close` method."}]},{"pos":[803,1272],"content":"[!CAUTION]\n Do not call `Close` or `Dispose` on a Connection, a DataReader, or any other managed object in the `Finalize` method of your class. In a finalizer, you should only release unmanaged resources that your class owns directly. If your class does not own any unmanaged resources, do not include a `Finalize` method in your class definition. For more information, see [Garbage Collection](http://msdn.microsoft.com/library/22b6cb97-0c80-4eeb-a2cf-5ed7655e37f9).","leadings":["","> "],"nodes":[{"content":" Do not call `Close` or `Dispose` on a Connection, a DataReader, or any other managed object in the `Finalize` method of your class. In a finalizer, you should only release unmanaged resources that your class owns directly. If your class does not own any unmanaged resources, do not include a `Finalize` method in your class definition. For more information, see [Garbage Collection](http://msdn.microsoft.com/library/22b6cb97-0c80-4eeb-a2cf-5ed7655e37f9).","pos":[11,467],"nodes":[{"content":"Do not call <ph id=\"ph1\">`Close`</ph> or <ph id=\"ph2\">`Dispose`</ph> on a Connection, a DataReader, or any other managed object in the <ph id=\"ph3\">`Finalize`</ph> method of your class.","pos":[1,132],"source":" Do not call `Close` or `Dispose` on a Connection, a DataReader, or any other managed object in the `Finalize` method of your class."},{"content":"In a finalizer, you should only release unmanaged resources that your class owns directly.","pos":[133,223]},{"content":"If your class does not own any unmanaged resources, do not include a <ph id=\"ph1\">`Finalize`</ph> method in your class definition.","pos":[224,336],"source":" If your class does not own any unmanaged resources, do not include a `Finalize` method in your class definition."},{"content":"For more information, see <bpt id=\"p1\">[</bpt>Garbage Collection<ept id=\"p1\">](http://msdn.microsoft.com/library/22b6cb97-0c80-4eeb-a2cf-5ed7655e37f9)</ept>.","pos":[337,456],"source":" For more information, see [Garbage Collection](http://msdn.microsoft.com/library/22b6cb97-0c80-4eeb-a2cf-5ed7655e37f9)."}]}]}],"pos":[11078,12358],"yaml":true,"extradata":"MT"},{"content":"Gets the <xref href=\"System.Data.SqlClient.SqlConnection\"></xref> associated with the <xref href=\"System.Data.SqlClient.SqlDataReader\"></xref>.","nodes":[{"pos":[0,143],"content":"Gets the <ph id=\"ph1\">&lt;xref href=\"System.Data.SqlClient.SqlConnection\"&gt;&lt;/xref&gt;</ph> associated with the <ph id=\"ph2\">&lt;xref href=\"System.Data.SqlClient.SqlDataReader\"&gt;&lt;/xref&gt;</ph>.","source":"Gets the <xref href=\"System.Data.SqlClient.SqlConnection\"></xref> associated with the <xref href=\"System.Data.SqlClient.SqlDataReader\"></xref>."}],"pos":[14353,14497],"yaml":true},{"content":"The <xref href=\"System.Data.SqlClient.SqlConnection\"></xref> associated with the <xref href=\"System.Data.SqlClient.SqlDataReader\"></xref>.","nodes":[{"pos":[0,138],"content":"The <ph id=\"ph1\">&lt;xref href=\"System.Data.SqlClient.SqlConnection\"&gt;&lt;/xref&gt;</ph> associated with the <ph id=\"ph2\">&lt;xref href=\"System.Data.SqlClient.SqlDataReader\"&gt;&lt;/xref&gt;</ph>.","source":"The <xref href=\"System.Data.SqlClient.SqlConnection\"></xref> associated with the <xref href=\"System.Data.SqlClient.SqlDataReader\"></xref>."}],"pos":[14665,14804],"yaml":true},{"content":"Gets a value that indicates the depth of nesting for the current row.","nodes":[{"pos":[0,69],"content":"Gets a value that indicates the depth of nesting for the current row.","nodes":[{"content":"Gets a value that indicates the depth of nesting for the current row.","pos":[0,69]}]}],"pos":[16039,16109],"yaml":true},{"content":"The outermost table has a depth of zero. The .NET Framework Data Provider for SQL Server does not support nesting and always returns zero.","nodes":[{"pos":[0,138],"content":"The outermost table has a depth of zero. The .NET Framework Data Provider for SQL Server does not support nesting and always returns zero.","nodes":[{"content":"The outermost table has a depth of zero. The .NET Framework Data Provider for SQL Server does not support nesting and always returns zero.","pos":[0,138],"nodes":[{"content":"The outermost table has a depth of zero.","pos":[0,40]},{"content":"The .NET Framework Data Provider for SQL Server does not support nesting and always returns zero.","pos":[41,138]}]}]}],"pos":[16120,16259],"yaml":true,"extradata":"MT"},{"content":"The depth of nesting for the current row.","nodes":[{"pos":[0,41],"content":"The depth of nesting for the current row.","nodes":[{"content":"The depth of nesting for the current row.","pos":[0,41]}]}],"pos":[16373,16415],"yaml":true},{"content":"Gets the number of columns in the current row.","nodes":[{"pos":[0,46],"content":"Gets the number of columns in the current row.","nodes":[{"content":"Gets the number of columns in the current row.","pos":[0,46]}]}],"pos":[17675,17722],"yaml":true},{"content":"Executing a query that, by its nature, does not return rows (such as a DELETE query), sets <xref:System.Data.SqlClient.SqlDataReader.FieldCount%2A> to 0. However. this should not be confused with a query that returns 0 rows (such as SELECT * FROM *table* WHERE 1 = 2) in which case <xref:System.Data.SqlClient.SqlDataReader.FieldCount%2A> returns the number of columns in the table, including hidden fields. Use <xref:System.Data.SqlClient.SqlDataReader.VisibleFieldCount%2A> to exclude hidden fields.","nodes":[{"pos":[0,501],"content":"Executing a query that, by its nature, does not return rows (such as a DELETE query), sets <xref:System.Data.SqlClient.SqlDataReader.FieldCount%2A> to 0. However. this should not be confused with a query that returns 0 rows (such as SELECT * FROM *table* WHERE 1 = 2) in which case <xref:System.Data.SqlClient.SqlDataReader.FieldCount%2A> returns the number of columns in the table, including hidden fields. Use <xref:System.Data.SqlClient.SqlDataReader.VisibleFieldCount%2A> to exclude hidden fields.","nodes":[{"content":"Executing a query that, by its nature, does not return rows (such as a DELETE query), sets <ph id=\"ph1\">&lt;xref:System.Data.SqlClient.SqlDataReader.FieldCount%2A&gt;</ph> to 0.","pos":[0,153],"source":"Executing a query that, by its nature, does not return rows (such as a DELETE query), sets <xref:System.Data.SqlClient.SqlDataReader.FieldCount%2A> to 0."},{"content":"However.","pos":[154,162]},{"content":"this should not be confused with a query that returns 0 rows (such as SELECT * FROM <bpt id=\"p1\">*</bpt>table<ept id=\"p1\">*</ept> WHERE 1 = 2) in which case <ph id=\"ph1\">&lt;xref:System.Data.SqlClient.SqlDataReader.FieldCount%2A&gt;</ph> returns the number of columns in the table, including hidden fields.","pos":[163,407],"source":" this should not be confused with a query that returns 0 rows (such as SELECT * FROM *table* WHERE 1 = 2) in which case <xref:System.Data.SqlClient.SqlDataReader.FieldCount%2A> returns the number of columns in the table, including hidden fields."},{"content":"Use <ph id=\"ph1\">&lt;xref:System.Data.SqlClient.SqlDataReader.VisibleFieldCount%2A&gt;</ph> to exclude hidden fields.","pos":[408,501],"source":" Use <xref:System.Data.SqlClient.SqlDataReader.VisibleFieldCount%2A> to exclude hidden fields."}]}],"pos":[17733,18235],"yaml":true,"extradata":"MT"},{"content":"When not positioned in a valid recordset, 0; otherwise the number of columns in the current row. The default is -1.","nodes":[{"pos":[0,115],"content":"When not positioned in a valid recordset, 0; otherwise the number of columns in the current row. The default is -1.","nodes":[{"content":"When not positioned in a valid recordset, 0; otherwise the number of columns in the current row. The default is -1.","pos":[0,115],"nodes":[{"content":"When not positioned in a valid recordset, 0; otherwise the number of columns in the current row.","pos":[0,96]},{"content":"The default is -1.","pos":[97,115]}]}]}],"pos":[18354,18470],"yaml":true},{"content":"There is no current connection to an instance of SQL Server.","nodes":[{"pos":[0,60],"content":"There is no current connection to an instance of SQL Server.","nodes":[{"content":"There is no current connection to an instance of SQL Server.","pos":[0,60]}]}],"pos":[18646,18707],"yaml":true},{"content":"Gets the value of the specified column as a Boolean.","nodes":[{"pos":[0,52],"content":"Gets the value of the specified column as a Boolean.","nodes":[{"content":"Gets the value of the specified column as a Boolean.","pos":[0,52]}]}],"pos":[19956,20009],"yaml":true},{"content":"No conversions are performed; therefore, the data retrieved must already be a Boolean, or an exception is generated.  \n  \n Call <xref:System.Data.SqlClient.SqlDataReader.IsDBNull%2A> to check for null values before calling this method.","nodes":[{"pos":[0,116],"content":"No conversions are performed; therefore, the data retrieved must already be a Boolean, or an exception is generated.","nodes":[{"content":"No conversions are performed; therefore, the data retrieved must already be a Boolean, or an exception is generated.","pos":[0,116]}]},{"pos":[123,235],"content":"Call <xref:System.Data.SqlClient.SqlDataReader.IsDBNull%2A> to check for null values before calling this method.","nodes":[{"content":"Call <ph id=\"ph1\">&lt;xref:System.Data.SqlClient.SqlDataReader.IsDBNull%2A&gt;</ph> to check for null values before calling this method.","pos":[0,112],"source":"Call <xref:System.Data.SqlClient.SqlDataReader.IsDBNull%2A> to check for null values before calling this method."}]}],"pos":[20020,20260],"yaml":true,"extradata":"MT"},{"content":"The zero-based column ordinal.","nodes":[{"pos":[0,30],"content":"The zero-based column ordinal.","nodes":[{"content":"The zero-based column ordinal.","pos":[0,30]}]}],"pos":[20396,20427],"yaml":true},{"content":"The value of the column.","nodes":[{"pos":[0,24],"content":"The value of the column.","nodes":[{"content":"The value of the column.","pos":[0,24]}]}],"pos":[20485,20510],"yaml":true},{"content":"The specified cast is not valid.","nodes":[{"pos":[0,32],"content":"The specified cast is not valid.","nodes":[{"content":"The specified cast is not valid.","pos":[0,32]}]}],"pos":[20684,20717],"yaml":true},{"content":"Gets the value of the specified column as a byte.","nodes":[{"pos":[0,49],"content":"Gets the value of the specified column as a byte.","nodes":[{"content":"Gets the value of the specified column as a byte.","pos":[0,49]}]}],"pos":[21948,21998],"yaml":true},{"content":"No conversions are performed; therefore, the data retrieved must already be a byte.  \n  \n Call <xref:System.Data.SqlClient.SqlDataReader.IsDBNull%2A> to check for null values before calling this method.","nodes":[{"pos":[0,83],"content":"No conversions are performed; therefore, the data retrieved must already be a byte.","nodes":[{"content":"No conversions are performed; therefore, the data retrieved must already be a byte.","pos":[0,83]}]},{"pos":[90,202],"content":"Call <xref:System.Data.SqlClient.SqlDataReader.IsDBNull%2A> to check for null values before calling this method.","nodes":[{"content":"Call <ph id=\"ph1\">&lt;xref:System.Data.SqlClient.SqlDataReader.IsDBNull%2A&gt;</ph> to check for null values before calling this method.","pos":[0,112],"source":"Call <xref:System.Data.SqlClient.SqlDataReader.IsDBNull%2A> to check for null values before calling this method."}]}],"pos":[22009,22216],"yaml":true,"extradata":"MT"},{"content":"The zero-based column ordinal.","nodes":[{"pos":[0,30],"content":"The zero-based column ordinal.","nodes":[{"content":"The zero-based column ordinal.","pos":[0,30]}]}],"pos":[22349,22380],"yaml":true},{"content":"The value of the specified column as a byte.","nodes":[{"pos":[0,44],"content":"The value of the specified column as a byte.","nodes":[{"content":"The value of the specified column as a byte.","pos":[0,44]}]}],"pos":[22435,22480],"yaml":true},{"content":"The specified cast is not valid.","nodes":[{"pos":[0,32],"content":"The specified cast is not valid.","nodes":[{"content":"The specified cast is not valid.","pos":[0,32]}]}],"pos":[22651,22684],"yaml":true},{"content":"Reads a stream of bytes from the specified column offset into the buffer an array starting at the given buffer offset.","nodes":[{"pos":[0,118],"content":"Reads a stream of bytes from the specified column offset into the buffer an array starting at the given buffer offset.","nodes":[{"content":"Reads a stream of bytes from the specified column offset into the buffer an array starting at the given buffer offset.","pos":[0,118]}]}],"pos":[24167,24286],"yaml":true},{"content":"<xref:System.Data.SqlClient.SqlDataReader.GetBytes%2A> returns the number of available bytes in the field. Most of the time this is the exact length of the field. However, the number returned may be less than the true length of the field if `GetBytes` has already been used to obtain bytes from the field. This may be the case, for example, if the <xref:System.Data.SqlClient.SqlDataReader> is reading a large data structure into a buffer. For more information, see the `SequentialAccess` setting for <xref:System.Data.CommandBehavior>.  \n  \n If you pass a buffer that is `null`, <xref:System.Data.SqlClient.SqlDataReader.GetBytes%2A> returns the length of the entire field in bytes, not the remaining size based on the buffer offset parameter.  \n  \n No conversions are performed; therefore, the data retrieved must already be a byte array.","nodes":[{"pos":[0,536],"content":"<xref:System.Data.SqlClient.SqlDataReader.GetBytes%2A> returns the number of available bytes in the field. Most of the time this is the exact length of the field. However, the number returned may be less than the true length of the field if `GetBytes` has already been used to obtain bytes from the field. This may be the case, for example, if the <xref:System.Data.SqlClient.SqlDataReader> is reading a large data structure into a buffer. For more information, see the `SequentialAccess` setting for <xref:System.Data.CommandBehavior>.","nodes":[{"content":"<ph id=\"ph1\">&lt;xref:System.Data.SqlClient.SqlDataReader.GetBytes%2A&gt;</ph> returns the number of available bytes in the field.","pos":[0,106],"source":"<xref:System.Data.SqlClient.SqlDataReader.GetBytes%2A> returns the number of available bytes in the field."},{"content":"Most of the time this is the exact length of the field.","pos":[107,162]},{"content":"However, the number returned may be less than the true length of the field if <ph id=\"ph1\">`GetBytes`</ph> has already been used to obtain bytes from the field.","pos":[163,305],"source":" However, the number returned may be less than the true length of the field if `GetBytes` has already been used to obtain bytes from the field."},{"content":"This may be the case, for example, if the <ph id=\"ph1\">&lt;xref:System.Data.SqlClient.SqlDataReader&gt;</ph> is reading a large data structure into a buffer.","pos":[306,439],"source":" This may be the case, for example, if the <xref:System.Data.SqlClient.SqlDataReader> is reading a large data structure into a buffer."},{"content":"For more information, see the <ph id=\"ph1\">`SequentialAccess`</ph> setting for <ph id=\"ph2\">&lt;xref:System.Data.CommandBehavior&gt;</ph>.","pos":[440,536],"source":" For more information, see the `SequentialAccess` setting for <xref:System.Data.CommandBehavior>."}]},{"pos":[543,744],"content":"If you pass a buffer that is <ph id=\"ph1\">`null`</ph>, <ph id=\"ph2\">&lt;xref:System.Data.SqlClient.SqlDataReader.GetBytes%2A&gt;</ph> returns the length of the entire field in bytes, not the remaining size based on the buffer offset parameter.","source":"If you pass a buffer that is `null`, <xref:System.Data.SqlClient.SqlDataReader.GetBytes%2A> returns the length of the entire field in bytes, not the remaining size based on the buffer offset parameter."},{"pos":[751,840],"content":"No conversions are performed; therefore, the data retrieved must already be a byte array.","nodes":[{"content":"No conversions are performed; therefore, the data retrieved must already be a byte array.","pos":[0,89]}]}],"pos":[24297,25144],"yaml":true,"extradata":"MT"},{"content":"The zero-based column ordinal.","nodes":[{"pos":[0,30],"content":"The zero-based column ordinal.","nodes":[{"content":"The zero-based column ordinal.","pos":[0,30]}]}],"pos":[25338,25369],"yaml":true},{"content":"The index within the field from which to begin the read operation.","nodes":[{"pos":[0,66],"content":"The index within the field from which to begin the read operation.","nodes":[{"content":"The index within the field from which to begin the read operation.","pos":[0,66]}]}],"pos":[25433,25500],"yaml":true},{"content":"The buffer into which to read the stream of bytes.","nodes":[{"pos":[0,50],"content":"The buffer into which to read the stream of bytes.","nodes":[{"content":"The buffer into which to read the stream of bytes.","pos":[0,50]}]}],"pos":[25562,25613],"yaml":true},{"content":"The index within the <code>buffer</code> where the write operation is to start.","nodes":[{"pos":[0,79],"content":"The index within the <bpt id=\"p1\">&lt;code&gt;</bpt><ph id=\"ph1\">buffer</ph><ept id=\"p1\">&lt;/code&gt;</ept> where the write operation is to start.","source":"The index within the <code>buffer</code> where the write operation is to start."}],"pos":[25679,25759],"yaml":true},{"content":"The maximum length to copy into the buffer.","nodes":[{"pos":[0,43],"content":"The maximum length to copy into the buffer.","nodes":[{"content":"The maximum length to copy into the buffer.","pos":[0,43]}]}],"pos":[25820,25864],"yaml":true},{"content":"The actual number of bytes read.","nodes":[{"pos":[0,32],"content":"The actual number of bytes read.","nodes":[{"content":"The actual number of bytes read.","pos":[0,32]}]}],"pos":[25920,25953],"yaml":true},{"content":"Gets the value of the specified column as a single character.","nodes":[{"pos":[0,61],"content":"Gets the value of the specified column as a single character.","nodes":[{"content":"Gets the value of the specified column as a single character.","pos":[0,61]}]}],"pos":[27259,27321],"yaml":true},{"content":"Not supported for <xref:System.Data.SqlClient>.","nodes":[{"pos":[0,47],"content":"Not supported for <xref:System.Data.SqlClient>.","nodes":[{"content":"Not supported for <ph id=\"ph1\">&lt;xref:System.Data.SqlClient&gt;</ph>.","pos":[0,47],"source":"Not supported for <xref:System.Data.SqlClient>."}]}],"pos":[27332,27380],"yaml":true,"extradata":"MT"},{"content":"The zero-based column ordinal.","nodes":[{"pos":[0,30],"content":"The zero-based column ordinal.","nodes":[{"content":"The zero-based column ordinal.","pos":[0,30]}]}],"pos":[27513,27544],"yaml":true},{"content":"The value of the specified column.","nodes":[{"pos":[0,34],"content":"The value of the specified column.","nodes":[{"content":"The value of the specified column.","pos":[0,34]}]}],"pos":[27599,27634],"yaml":true},{"content":"The specified cast is not valid.","nodes":[{"pos":[0,32],"content":"The specified cast is not valid.","nodes":[{"content":"The specified cast is not valid.","pos":[0,32]}]}],"pos":[27805,27838],"yaml":true},{"content":"Reads a stream of characters from the specified column offset into the buffer as an array starting at the given buffer offset.","nodes":[{"pos":[0,126],"content":"Reads a stream of characters from the specified column offset into the buffer as an array starting at the given buffer offset.","nodes":[{"content":"Reads a stream of characters from the specified column offset into the buffer as an array starting at the given buffer offset.","pos":[0,126]}]}],"pos":[29338,29465],"yaml":true},{"content":"<xref:System.Data.SqlClient.SqlDataReader.GetChars%2A> returns the number of available characters in the field. Frequently this is the exact length of the field. However, the number returned may be less than the true length of the field if `GetChars` has already been used to obtain characters from the field. This may be the case, for example, if the <xref:System.Data.SqlClient.SqlDataReader> is reading a large data structure into a buffer. For more information, see the `SequentialAccess` setting for <xref:System.Data.CommandBehavior>.  \n  \n The actual number of characters read can be less than the requested length, if the end of the field is reached. If you pass a buffer that is `null`, <xref:System.Data.SqlClient.SqlDataReader.GetChars%2A> returns the length of the entire field in characters, not the remaining size based on the buffer offset parameter.  \n  \n No conversions are performed; therefore. the data retrieved must already be a character array.  \n  \n> [!NOTE]\n>  The <xref:System.Data.SqlClient.SqlDataReader.GetChars%2A> method returns 0 when `dataIndex` is negative.","nodes":[{"pos":[0,540],"content":"<xref:System.Data.SqlClient.SqlDataReader.GetChars%2A> returns the number of available characters in the field. Frequently this is the exact length of the field. However, the number returned may be less than the true length of the field if `GetChars` has already been used to obtain characters from the field. This may be the case, for example, if the <xref:System.Data.SqlClient.SqlDataReader> is reading a large data structure into a buffer. For more information, see the `SequentialAccess` setting for <xref:System.Data.CommandBehavior>.","nodes":[{"content":"<ph id=\"ph1\">&lt;xref:System.Data.SqlClient.SqlDataReader.GetChars%2A&gt;</ph> returns the number of available characters in the field.","pos":[0,111],"source":"<xref:System.Data.SqlClient.SqlDataReader.GetChars%2A> returns the number of available characters in the field."},{"content":"Frequently this is the exact length of the field.","pos":[112,161]},{"content":"However, the number returned may be less than the true length of the field if <ph id=\"ph1\">`GetChars`</ph> has already been used to obtain characters from the field.","pos":[162,309],"source":" However, the number returned may be less than the true length of the field if `GetChars` has already been used to obtain characters from the field."},{"content":"This may be the case, for example, if the <ph id=\"ph1\">&lt;xref:System.Data.SqlClient.SqlDataReader&gt;</ph> is reading a large data structure into a buffer.","pos":[310,443],"source":" This may be the case, for example, if the <xref:System.Data.SqlClient.SqlDataReader> is reading a large data structure into a buffer."},{"content":"For more information, see the <ph id=\"ph1\">`SequentialAccess`</ph> setting for <ph id=\"ph2\">&lt;xref:System.Data.CommandBehavior&gt;</ph>.","pos":[444,540],"source":" For more information, see the `SequentialAccess` setting for <xref:System.Data.CommandBehavior>."}]},{"pos":[547,865],"content":"The actual number of characters read can be less than the requested length, if the end of the field is reached. If you pass a buffer that is `null`, <xref:System.Data.SqlClient.SqlDataReader.GetChars%2A> returns the length of the entire field in characters, not the remaining size based on the buffer offset parameter.","nodes":[{"content":"The actual number of characters read can be less than the requested length, if the end of the field is reached.","pos":[0,111]},{"content":"If you pass a buffer that is <ph id=\"ph1\">`null`</ph>, <ph id=\"ph2\">&lt;xref:System.Data.SqlClient.SqlDataReader.GetChars%2A&gt;</ph> returns the length of the entire field in characters, not the remaining size based on the buffer offset parameter.","pos":[112,318],"source":" If you pass a buffer that is `null`, <xref:System.Data.SqlClient.SqlDataReader.GetChars%2A> returns the length of the entire field in characters, not the remaining size based on the buffer offset parameter."}]},{"pos":[872,966],"content":"No conversions are performed; therefore. the data retrieved must already be a character array.","nodes":[{"content":"No conversions are performed; therefore. the data retrieved must already be a character array.","pos":[0,94],"nodes":[{"content":"No conversions are performed; therefore.","pos":[0,40]},{"content":"the data retrieved must already be a character array.","pos":[41,94]}]}]},{"pos":[974,1090],"content":"[!NOTE]\n The <xref:System.Data.SqlClient.SqlDataReader.GetChars%2A> method returns 0 when `dataIndex` is negative.","leadings":["","> "],"nodes":[{"content":"The <ph id=\"ph1\">&lt;xref:System.Data.SqlClient.SqlDataReader.GetChars%2A&gt;</ph> method returns 0 when <ph id=\"ph2\">`dataIndex`</ph> is negative.","pos":[9,114],"source":" The <xref:System.Data.SqlClient.SqlDataReader.GetChars%2A> method returns 0 when `dataIndex` is negative."}]}],"pos":[29476,30576],"yaml":true,"extradata":"MT"},{"content":"The zero-based column ordinal.","nodes":[{"pos":[0,30],"content":"The zero-based column ordinal.","nodes":[{"content":"The zero-based column ordinal.","pos":[0,30]}]}],"pos":[30770,30801],"yaml":true},{"content":"The index within the field from which to begin the read operation.","nodes":[{"pos":[0,66],"content":"The index within the field from which to begin the read operation.","nodes":[{"content":"The index within the field from which to begin the read operation.","pos":[0,66]}]}],"pos":[30865,30932],"yaml":true},{"content":"The buffer into which to read the stream of bytes.","nodes":[{"pos":[0,50],"content":"The buffer into which to read the stream of bytes.","nodes":[{"content":"The buffer into which to read the stream of bytes.","pos":[0,50]}]}],"pos":[30994,31045],"yaml":true},{"content":"The index within the <code>buffer</code> where the write operation is to start.","nodes":[{"pos":[0,79],"content":"The index within the <bpt id=\"p1\">&lt;code&gt;</bpt><ph id=\"ph1\">buffer</ph><ept id=\"p1\">&lt;/code&gt;</ept> where the write operation is to start.","source":"The index within the <code>buffer</code> where the write operation is to start."}],"pos":[31111,31191],"yaml":true},{"content":"The maximum length to copy into the buffer.","nodes":[{"pos":[0,43],"content":"The maximum length to copy into the buffer.","nodes":[{"content":"The maximum length to copy into the buffer.","pos":[0,43]}]}],"pos":[31252,31296],"yaml":true},{"content":"The actual number of characters read.","nodes":[{"pos":[0,37],"content":"The actual number of characters read.","nodes":[{"content":"The actual number of characters read.","pos":[0,37]}]}],"pos":[31352,31390],"yaml":true},{"content":"Gets a string representing the data type of the specified column.","nodes":[{"pos":[0,65],"content":"Gets a string representing the data type of the specified column.","nodes":[{"content":"Gets a string representing the data type of the specified column.","pos":[0,65]}]}],"pos":[32744,32810],"yaml":true},{"content":"Returns the name of the back-end data type.  \n  \n `numeric` is a synonym in SQL Server for the `decimal` data type. `GetDataTypeName` will return \"decimal\" for a column defined as either decimal or numeric.","nodes":[{"pos":[0,43],"content":"Returns the name of the back-end data type.","nodes":[{"content":"Returns the name of the back-end data type.","pos":[0,43]}]},{"pos":[50,206],"content":"`numeric` is a synonym in SQL Server for the `decimal` data type. `GetDataTypeName` will return \"decimal\" for a column defined as either decimal or numeric.","nodes":[{"content":"<ph id=\"ph1\">`numeric`</ph> is a synonym in SQL Server for the <ph id=\"ph2\">`decimal`</ph> data type.","pos":[0,65],"source":"`numeric` is a synonym in SQL Server for the `decimal` data type."},{"content":"<ph id=\"ph1\">`GetDataTypeName`</ph> will return \"decimal\" for a column defined as either decimal or numeric.","pos":[66,156],"source":"`GetDataTypeName` will return \"decimal\" for a column defined as either decimal or numeric."}]}],"pos":[32821,33034],"yaml":true,"extradata":"MT"},{"content":"The zero-based ordinal position of the column to find.","nodes":[{"pos":[0,54],"content":"The zero-based ordinal position of the column to find.","nodes":[{"content":"The zero-based ordinal position of the column to find.","pos":[0,54]}]}],"pos":[33177,33232],"yaml":true},{"content":"The string representing the data type of the specified column.","nodes":[{"pos":[0,62],"content":"The string representing the data type of the specified column.","nodes":[{"content":"The string representing the data type of the specified column.","pos":[0,62]}]}],"pos":[33289,33352],"yaml":true},{"content":"Gets the value of the specified column as a <xref href=\"System.DateTime\"></xref> object.","nodes":[{"pos":[0,88],"content":"Gets the value of the specified column as a <ph id=\"ph1\">&lt;xref href=\"System.DateTime\"&gt;&lt;/xref&gt;</ph> object.","source":"Gets the value of the specified column as a <xref href=\"System.DateTime\"></xref> object."}],"pos":[34689,34778],"yaml":true},{"content":"No conversions are performed; therefore, the data retrieved must already be a <xref:System.DateTime> object.  \n  \n Call <xref:System.Data.SqlClient.SqlDataReader.IsDBNull%2A> to check for null values before calling this method.","nodes":[{"pos":[0,108],"content":"No conversions are performed; therefore, the data retrieved must already be a <xref:System.DateTime> object.","nodes":[{"content":"No conversions are performed; therefore, the data retrieved must already be a <ph id=\"ph1\">&lt;xref:System.DateTime&gt;</ph> object.","pos":[0,108],"source":"No conversions are performed; therefore, the data retrieved must already be a <xref:System.DateTime> object."}]},{"pos":[115,227],"content":"Call <xref:System.Data.SqlClient.SqlDataReader.IsDBNull%2A> to check for null values before calling this method.","nodes":[{"content":"Call <ph id=\"ph1\">&lt;xref:System.Data.SqlClient.SqlDataReader.IsDBNull%2A&gt;</ph> to check for null values before calling this method.","pos":[0,112],"source":"Call <xref:System.Data.SqlClient.SqlDataReader.IsDBNull%2A> to check for null values before calling this method."}]}],"pos":[34789,35021],"yaml":true,"extradata":"MT"},{"content":"The zero-based column ordinal.","nodes":[{"pos":[0,30],"content":"The zero-based column ordinal.","nodes":[{"content":"The zero-based column ordinal.","pos":[0,30]}]}],"pos":[35162,35193],"yaml":true},{"content":"The value of the specified column.","nodes":[{"pos":[0,34],"content":"The value of the specified column.","nodes":[{"content":"The value of the specified column.","pos":[0,34]}]}],"pos":[35252,35287],"yaml":true},{"content":"The specified cast is not valid.","nodes":[{"pos":[0,32],"content":"The specified cast is not valid.","nodes":[{"content":"The specified cast is not valid.","pos":[0,32]}]}],"pos":[35462,35495],"yaml":true},{"content":"Retrieves the value of the specified column as a <xref href=\"System.DateTimeOffset\"></xref> object.","nodes":[{"pos":[0,99],"content":"Retrieves the value of the specified column as a <ph id=\"ph1\">&lt;xref href=\"System.DateTimeOffset\"&gt;&lt;/xref&gt;</ph> object.","source":"Retrieves the value of the specified column as a <xref href=\"System.DateTimeOffset\"></xref> object."}],"pos":[36786,36886],"yaml":true},{"content":"No conversions are performed; therefore, the data retrieved must already be a <xref:System.DateTimeOffset> object.  \n  \n Call <xref:System.Data.SqlClient.SqlDataReader.IsDBNull%2A> to check for null values before calling this method.","nodes":[{"pos":[0,114],"content":"No conversions are performed; therefore, the data retrieved must already be a <xref:System.DateTimeOffset> object.","nodes":[{"content":"No conversions are performed; therefore, the data retrieved must already be a <ph id=\"ph1\">&lt;xref:System.DateTimeOffset&gt;</ph> object.","pos":[0,114],"source":"No conversions are performed; therefore, the data retrieved must already be a <xref:System.DateTimeOffset> object."}]},{"pos":[121,233],"content":"Call <xref:System.Data.SqlClient.SqlDataReader.IsDBNull%2A> to check for null values before calling this method.","nodes":[{"content":"Call <ph id=\"ph1\">&lt;xref:System.Data.SqlClient.SqlDataReader.IsDBNull%2A&gt;</ph> to check for null values before calling this method.","pos":[0,112],"source":"Call <xref:System.Data.SqlClient.SqlDataReader.IsDBNull%2A> to check for null values before calling this method."}]}],"pos":[36897,37135],"yaml":true,"extradata":"MT"},{"content":"The zero-based column ordinal.","nodes":[{"pos":[0,30],"content":"The zero-based column ordinal.","nodes":[{"content":"The zero-based column ordinal.","pos":[0,30]}]}],"pos":[37287,37318],"yaml":true},{"content":"The value of the specified column.","nodes":[{"pos":[0,34],"content":"The value of the specified column.","nodes":[{"content":"The value of the specified column.","pos":[0,34]}]}],"pos":[37383,37418],"yaml":true},{"content":"The specified cast is not valid.","nodes":[{"pos":[0,32],"content":"The specified cast is not valid.","nodes":[{"content":"The specified cast is not valid.","pos":[0,32]}]}],"pos":[37599,37632],"yaml":true},{"content":"Gets the value of the specified column as a <xref href=\"System.Decimal\"></xref> object.","nodes":[{"pos":[0,87],"content":"Gets the value of the specified column as a <ph id=\"ph1\">&lt;xref href=\"System.Decimal\"&gt;&lt;/xref&gt;</ph> object.","source":"Gets the value of the specified column as a <xref href=\"System.Decimal\"></xref> object."}],"pos":[38881,38969],"yaml":true},{"content":"No conversions are performed; therefore, the data retrieved must already be a <xref:System.Decimal> object.  \n  \n Call <xref:System.Data.SqlClient.SqlDataReader.IsDBNull%2A> to check for null values before calling this method.","nodes":[{"pos":[0,107],"content":"No conversions are performed; therefore, the data retrieved must already be a <xref:System.Decimal> object.","nodes":[{"content":"No conversions are performed; therefore, the data retrieved must already be a <ph id=\"ph1\">&lt;xref:System.Decimal&gt;</ph> object.","pos":[0,107],"source":"No conversions are performed; therefore, the data retrieved must already be a <xref:System.Decimal> object."}]},{"pos":[114,226],"content":"Call <xref:System.Data.SqlClient.SqlDataReader.IsDBNull%2A> to check for null values before calling this method.","nodes":[{"content":"Call <ph id=\"ph1\">&lt;xref:System.Data.SqlClient.SqlDataReader.IsDBNull%2A&gt;</ph> to check for null values before calling this method.","pos":[0,112],"source":"Call <xref:System.Data.SqlClient.SqlDataReader.IsDBNull%2A> to check for null values before calling this method."}]}],"pos":[38980,39211],"yaml":true,"extradata":"MT"},{"content":"The zero-based column ordinal.","nodes":[{"pos":[0,30],"content":"The zero-based column ordinal.","nodes":[{"content":"The zero-based column ordinal.","pos":[0,30]}]}],"pos":[39350,39381],"yaml":true},{"content":"The value of the specified column.","nodes":[{"pos":[0,34],"content":"The value of the specified column.","nodes":[{"content":"The value of the specified column.","pos":[0,34]}]}],"pos":[39439,39474],"yaml":true},{"content":"The specified cast is not valid.","nodes":[{"pos":[0,32],"content":"The specified cast is not valid.","nodes":[{"content":"The specified cast is not valid.","pos":[0,32]}]}],"pos":[39648,39681],"yaml":true},{"content":"Gets the value of the specified column as a double-precision floating point number.","nodes":[{"pos":[0,83],"content":"Gets the value of the specified column as a double-precision floating point number.","nodes":[{"content":"Gets the value of the specified column as a double-precision floating point number.","pos":[0,83]}]}],"pos":[40924,41008],"yaml":true},{"content":"No conversions are performed. Therefore, the data retrieved must already be a double-precision floating point number.  \n  \n Call <xref:System.Data.SqlClient.SqlDataReader.IsDBNull%2A> to check for null values before calling this method.","nodes":[{"pos":[0,117],"content":"No conversions are performed. Therefore, the data retrieved must already be a double-precision floating point number.","nodes":[{"content":"No conversions are performed. Therefore, the data retrieved must already be a double-precision floating point number.","pos":[0,117],"nodes":[{"content":"No conversions are performed.","pos":[0,29]},{"content":"Therefore, the data retrieved must already be a double-precision floating point number.","pos":[30,117]}]}]},{"pos":[124,236],"content":"Call <xref:System.Data.SqlClient.SqlDataReader.IsDBNull%2A> to check for null values before calling this method.","nodes":[{"content":"Call <ph id=\"ph1\">&lt;xref:System.Data.SqlClient.SqlDataReader.IsDBNull%2A&gt;</ph> to check for null values before calling this method.","pos":[0,112],"source":"Call <xref:System.Data.SqlClient.SqlDataReader.IsDBNull%2A> to check for null values before calling this method."}]}],"pos":[41019,41260],"yaml":true,"extradata":"MT"},{"content":"The zero-based column ordinal.","nodes":[{"pos":[0,30],"content":"The zero-based column ordinal.","nodes":[{"content":"The zero-based column ordinal.","pos":[0,30]}]}],"pos":[41397,41428],"yaml":true},{"content":"The value of the specified column.","nodes":[{"pos":[0,34],"content":"The value of the specified column.","nodes":[{"content":"The value of the specified column.","pos":[0,34]}]}],"pos":[41485,41520],"yaml":true},{"content":"The specified cast is not valid.","nodes":[{"pos":[0,32],"content":"The specified cast is not valid.","nodes":[{"content":"The specified cast is not valid.","pos":[0,32]}]}],"pos":[41693,41726],"yaml":true},{"content":"Returns an <xref href=\"System.Collections.IEnumerator\"></xref> that iterates through the <xref href=\"System.Data.SqlClient.SqlDataReader\"></xref>.","nodes":[{"pos":[0,146],"content":"Returns an <ph id=\"ph1\">&lt;xref href=\"System.Collections.IEnumerator\"&gt;&lt;/xref&gt;</ph> that iterates through the <ph id=\"ph2\">&lt;xref href=\"System.Data.SqlClient.SqlDataReader\"&gt;&lt;/xref&gt;</ph>.","source":"Returns an <xref href=\"System.Collections.IEnumerator\"></xref> that iterates through the <xref href=\"System.Data.SqlClient.SqlDataReader\"></xref>."}],"pos":[42936,43083],"yaml":true},{"content":"Although you can use this method to retrieve an explicit enumerator, in languages that support a `foreach` construct, it is simpler to use the looping construct directly in order to iterate through the rows in the data reader.","nodes":[{"pos":[0,226],"content":"Although you can use this method to retrieve an explicit enumerator, in languages that support a <ph id=\"ph1\">`foreach`</ph> construct, it is simpler to use the looping construct directly in order to iterate through the rows in the data reader.","source":"Although you can use this method to retrieve an explicit enumerator, in languages that support a `foreach` construct, it is simpler to use the looping construct directly in order to iterate through the rows in the data reader."}],"pos":[43094,43321],"yaml":true,"extradata":"MT"},{"content":"An <xref href=\"System.Collections.IEnumerator\"></xref> for the <xref href=\"System.Data.SqlClient.SqlDataReader\"></xref>.","nodes":[{"pos":[0,120],"content":"An <ph id=\"ph1\">&lt;xref href=\"System.Collections.IEnumerator\"&gt;&lt;/xref&gt;</ph> for the <ph id=\"ph2\">&lt;xref href=\"System.Data.SqlClient.SqlDataReader\"&gt;&lt;/xref&gt;</ph>.","source":"An <xref href=\"System.Collections.IEnumerator\"></xref> for the <xref href=\"System.Data.SqlClient.SqlDataReader\"></xref>."}],"pos":[43502,43623],"yaml":true},{"content":"Gets the <xref href=\"System.Type\"></xref> that is the data type of the object.","nodes":[{"pos":[0,78],"content":"Gets the <ph id=\"ph1\">&lt;xref href=\"System.Type\"&gt;&lt;/xref&gt;</ph> that is the data type of the object.","source":"Gets the <xref href=\"System.Type\"></xref> that is the data type of the object."}],"pos":[44964,45043],"yaml":true},{"content":"The zero-based column ordinal.","nodes":[{"pos":[0,30],"content":"The zero-based column ordinal.","nodes":[{"content":"The zero-based column ordinal.","pos":[0,30]}]}],"pos":[45181,45212],"yaml":true},{"content":"The <xref href=\"System.Type\"></xref> that is the data type of the object. If the type does not exist on the client, in the case of a User-Defined Type (UDT) returned from the database, **GetFieldType** returns null.","nodes":[{"pos":[0,215],"content":"The <xref href=\"System.Type\"></xref> that is the data type of the object. If the type does not exist on the client, in the case of a User-Defined Type (UDT) returned from the database, **GetFieldType** returns null.","nodes":[{"content":"The <ph id=\"ph1\">&lt;xref href=\"System.Type\"&gt;&lt;/xref&gt;</ph> that is the data type of the object.","pos":[0,73],"source":"The <xref href=\"System.Type\"></xref> that is the data type of the object."},{"content":"If the type does not exist on the client, in the case of a User-Defined Type (UDT) returned from the database, <bpt id=\"p1\">**</bpt>GetFieldType<ept id=\"p1\">**</ept> returns null.","pos":[74,215],"source":" If the type does not exist on the client, in the case of a User-Defined Type (UDT) returned from the database, **GetFieldType** returns null."}]}],"pos":[45267,45483],"yaml":true},{"content":"Synchronously gets the value of the specified column as a type. <xref href=\"System.Data.SqlClient.SqlDataReader.GetFieldValueAsync``1(System.Int32,System.Threading.CancellationToken)\"></xref> is the asynchronous version of this method.","nodes":[{"pos":[0,235],"content":"Synchronously gets the value of the specified column as a type. <xref href=\"System.Data.SqlClient.SqlDataReader.GetFieldValueAsync``1(System.Int32,System.Threading.CancellationToken)\"></xref> is the asynchronous version of this method.","nodes":[{"content":"Synchronously gets the value of the specified column as a type.","pos":[0,63]},{"content":"<ph id=\"ph1\">&lt;xref href=\"System.Data.SqlClient.SqlDataReader.GetFieldValueAsync``1(System.Int32,System.Threading.CancellationToken)\"&gt;&lt;/xref&gt;</ph> is the asynchronous version of this method.","pos":[64,235],"source":"<xref href=\"System.Data.SqlClient.SqlDataReader.GetFieldValueAsync``1(System.Int32,System.Threading.CancellationToken)\"></xref> is the asynchronous version of this method."}]}],"pos":[46847,47083],"yaml":true},{"content":"`T` can be one of the following types:  \n  \n|||||  \n|-|-|-|-|  \n|Boolean|Byte|Char|DateTime|  \n|DateTimeOffset|Decimal|Double|Float|  \n|Guid|Int16|Int32|Int64|  \n|SqlBoolean|SqlByte|SqlDateTime|SqlDecimal|  \n|SqlDouble|SqlGuid|SqlInt16|SqlInt32|  \n|SqlInt64|SqlMoney|SqlSingle|SqlString|  \n|String|UDT, which can be any CLR type marked with <xref:Microsoft.SqlServer.Server.SqlUserDefinedTypeAttribute>.|||  \n  \n For more information, see [SqlClient Streaming Support](~/docs/framework/data/adonet/sqlclient-streaming-support.md).","nodes":[{"pos":[0,38],"content":"<ph id=\"ph1\">`T`</ph> can be one of the following types:","source":"`T` can be one of the following types:"},{"pos":[65,72],"content":"Boolean","nodes":[{"content":"Boolean","pos":[0,7]}]},{"pos":[73,77],"content":"Byte","nodes":[{"content":"Byte","pos":[0,4]}]},{"pos":[78,82],"content":"Char","nodes":[{"content":"Char","pos":[0,4]}]},{"pos":[83,91],"content":"DateTime","nodes":[{"content":"DateTime","pos":[0,8]}]},{"pos":[96,110],"content":"DateTimeOffset","nodes":[{"content":"DateTimeOffset","pos":[0,14]}]},{"pos":[111,118],"content":"Decimal","nodes":[{"content":"Decimal","pos":[0,7]}]},{"pos":[119,125],"content":"Double","nodes":[{"content":"Double","pos":[0,6]}]},{"pos":[126,131],"content":"Float","nodes":[{"content":"Float","pos":[0,5]}]},{"pos":[136,140],"content":"Guid","nodes":[{"content":"Guid","pos":[0,4]}]},{"pos":[141,146],"content":"Int16","nodes":[{"content":"Int16","pos":[0,5]}]},{"pos":[147,152],"content":"Int32","nodes":[{"content":"Int32","pos":[0,5]}]},{"pos":[153,158],"content":"Int64","nodes":[{"content":"Int64","pos":[0,5]}]},{"pos":[163,173],"content":"SqlBoolean","nodes":[{"content":"SqlBoolean","pos":[0,10]}]},{"pos":[174,181],"content":"SqlByte","nodes":[{"content":"SqlByte","pos":[0,7]}]},{"pos":[182,193],"content":"SqlDateTime","nodes":[{"content":"SqlDateTime","pos":[0,11]}]},{"pos":[194,204],"content":"SqlDecimal","nodes":[{"content":"SqlDecimal","pos":[0,10]}]},{"pos":[209,218],"content":"SqlDouble","nodes":[{"content":"SqlDouble","pos":[0,9]}]},{"pos":[219,226],"content":"SqlGuid","nodes":[{"content":"SqlGuid","pos":[0,7]}]},{"pos":[227,235],"content":"SqlInt16","nodes":[{"content":"SqlInt16","pos":[0,8]}]},{"pos":[236,244],"content":"SqlInt32","nodes":[{"content":"SqlInt32","pos":[0,8]}]},{"pos":[249,257],"content":"SqlInt64","nodes":[{"content":"SqlInt64","pos":[0,8]}]},{"pos":[258,266],"content":"SqlMoney","nodes":[{"content":"SqlMoney","pos":[0,8]}]},{"pos":[267,276],"content":"SqlSingle","nodes":[{"content":"SqlSingle","pos":[0,9]}]},{"pos":[277,286],"content":"SqlString","nodes":[{"content":"SqlString","pos":[0,9]}]},{"pos":[291,297],"content":"String","nodes":[{"content":"String","pos":[0,6]}]},{"pos":[298,403],"content":"UDT, which can be any CLR type marked with <xref:Microsoft.SqlServer.Server.SqlUserDefinedTypeAttribute>.","nodes":[{"content":"UDT, which can be any CLR type marked with <ph id=\"ph1\">&lt;xref:Microsoft.SqlServer.Server.SqlUserDefinedTypeAttribute&gt;</ph>.","pos":[0,105],"source":"UDT, which can be any CLR type marked with <xref:Microsoft.SqlServer.Server.SqlUserDefinedTypeAttribute>."}]},{"pos":[413,530],"content":"For more information, see <bpt id=\"p1\">[</bpt>SqlClient Streaming Support<ept id=\"p1\">](~/docs/framework/data/adonet/sqlclient-streaming-support.md)</ept>.","source":"For more information, see [SqlClient Streaming Support](~/docs/framework/data/adonet/sqlclient-streaming-support.md)."}],"pos":[47094,47639],"yaml":true,"extradata":"MT"},{"content":"The column to be retrieved.","nodes":[{"pos":[0,27],"content":"The column to be retrieved.","nodes":[{"content":"The column to be retrieved.","pos":[0,27]}]}],"pos":[47778,47806],"yaml":true},{"content":"The type of the value to be returned.","nodes":[{"pos":[0,37],"content":"The type of the value to be returned.","nodes":[{"content":"The type of the value to be returned.","pos":[0,37]}]}],"pos":[47857,47895],"yaml":true},{"content":"The returned type object.","nodes":[{"pos":[0,25],"content":"The returned type object.","nodes":[{"content":"The returned type object.","pos":[0,25]}]}],"pos":[47940,47966],"yaml":true},{"content":"The connection drops or is closed during the data retrieval.  \n  \n The <xref href=\"System.Data.SqlClient.SqlDataReader\"></xref> is closed during the data retrieval.  \n  \n There is no data ready to be read (for example, the first <xref href=\"System.Data.SqlClient.SqlDataReader.Read\"></xref> hasn't been called, or returned false).  \n  \n Tried to read a previously-read column in sequential mode.  \n  \n There was an asynchronous operation in progress. This applies to all Get* methods when running in sequential mode, as they could be called while reading a stream.","nodes":[{"pos":[0,60],"content":"The connection drops or is closed during the data retrieval.","nodes":[{"content":"The connection drops or is closed during the data retrieval.","pos":[0,60]}]},{"pos":[67,164],"content":"The <ph id=\"ph1\">&lt;xref href=\"System.Data.SqlClient.SqlDataReader\"&gt;&lt;/xref&gt;</ph> is closed during the data retrieval.","source":"The <xref href=\"System.Data.SqlClient.SqlDataReader\"></xref> is closed during the data retrieval."},{"pos":[171,330],"content":"There is no data ready to be read (for example, the first <ph id=\"ph1\">&lt;xref href=\"System.Data.SqlClient.SqlDataReader.Read\"&gt;&lt;/xref&gt;</ph> hasn't been called, or returned false).","source":"There is no data ready to be read (for example, the first <xref href=\"System.Data.SqlClient.SqlDataReader.Read\"></xref> hasn't been called, or returned false)."},{"pos":[337,395],"content":"Tried to read a previously-read column in sequential mode.","nodes":[{"content":"Tried to read a previously-read column in sequential mode.","pos":[0,58]}]},{"pos":[402,564],"content":"There was an asynchronous operation in progress. This applies to all Get* methods when running in sequential mode, as they could be called while reading a stream.","nodes":[{"content":"There was an asynchronous operation in progress. This applies to all Get* methods when running in sequential mode, as they could be called while reading a stream.","pos":[0,162],"nodes":[{"content":"There was an asynchronous operation in progress.","pos":[0,48]},{"content":"This applies to all Get* methods when running in sequential mode, as they could be called while reading a stream.","pos":[49,162]}]}]}],"pos":[48156,48735],"yaml":true},{"content":"Trying to read a column that does not exist.","nodes":[{"pos":[0,44],"content":"Trying to read a column that does not exist.","nodes":[{"content":"Trying to read a column that does not exist.","pos":[0,44]}]}],"pos":[48843,48888],"yaml":true},{"content":"The value of the column was null (<xref href=\"System.Data.SqlClient.SqlDataReader.IsDBNull(System.Int32)\"></xref> == `true`), retrieving a non-SQL type.","nodes":[{"pos":[0,152],"content":"The value of the column was null (<ph id=\"ph1\">&lt;xref href=\"System.Data.SqlClient.SqlDataReader.IsDBNull(System.Int32)\"&gt;&lt;/xref&gt;</ph><ph id=\"ph2\"> == </ph><ph id=\"ph3\">`true`</ph>), retrieving a non-SQL type.","source":"The value of the column was null (<xref href=\"System.Data.SqlClient.SqlDataReader.IsDBNull(System.Int32)\"></xref> == `true`), retrieving a non-SQL type."}],"pos":[49018,49171],"yaml":true},{"content":"<code>T</code> doesn’t match the type returned by [!INCLUDE[ssNoVersion](~/includes/ssnoversion-md.md)] or cannot be cast.","nodes":[{"pos":[0,122],"content":"<ph id=\"ph1\">&lt;code&gt;T&lt;/code&gt;</ph> doesn’t match the type returned by <ph id=\"ph2\">[!INCLUDE[ssNoVersion](~/includes/ssnoversion-md.md)]</ph> or cannot be cast.","source":"<code>T</code> doesn’t match the type returned by [!INCLUDE[ssNoVersion](~/includes/ssnoversion-md.md)] or cannot be cast."}],"pos":[49271,49394],"yaml":true},{"content":"Asynchronously gets the value of the specified column as a type. <xref href=\"System.Data.SqlClient.SqlDataReader.GetFieldValue``1(System.Int32)\"></xref> is the synchronous version of this method.","nodes":[{"pos":[0,195],"content":"Asynchronously gets the value of the specified column as a type. <xref href=\"System.Data.SqlClient.SqlDataReader.GetFieldValue``1(System.Int32)\"></xref> is the synchronous version of this method.","nodes":[{"content":"Asynchronously gets the value of the specified column as a type.","pos":[0,64]},{"content":"<ph id=\"ph1\">&lt;xref href=\"System.Data.SqlClient.SqlDataReader.GetFieldValue``1(System.Int32)\"&gt;&lt;/xref&gt;</ph> is the synchronous version of this method.","pos":[65,195],"source":"<xref href=\"System.Data.SqlClient.SqlDataReader.GetFieldValue``1(System.Int32)\"></xref> is the synchronous version of this method."}]}],"pos":[50871,51067],"yaml":true},{"content":"`T` can be one of the following types:  \n  \n|||||  \n|-|-|-|-|  \n|Boolean|Byte|Char|DateTime|  \n|DateTimeOffset|Decimal|Double|Float|  \n|Guid|Int16|Int32|Int64|  \n|SqlBoolean|SqlByte|SqlDateTime|SqlDecimal|  \n|SqlDouble|SqlGuid|SqlInt16|SqlInt32|  \n|SqlInt64|SqlMoney|SqlSingle|SqlString|  \n|String|UDT, which can be any CLR type marked with <xref:Microsoft.SqlServer.Server.SqlUserDefinedTypeAttribute>.|||  \n  \n For more information, see [SqlClient Streaming Support](~/docs/framework/data/adonet/sqlclient-streaming-support.md).","nodes":[{"pos":[0,38],"content":"<ph id=\"ph1\">`T`</ph> can be one of the following types:","source":"`T` can be one of the following types:"},{"pos":[65,72],"content":"Boolean","nodes":[{"content":"Boolean","pos":[0,7]}]},{"pos":[73,77],"content":"Byte","nodes":[{"content":"Byte","pos":[0,4]}]},{"pos":[78,82],"content":"Char","nodes":[{"content":"Char","pos":[0,4]}]},{"pos":[83,91],"content":"DateTime","nodes":[{"content":"DateTime","pos":[0,8]}]},{"pos":[96,110],"content":"DateTimeOffset","nodes":[{"content":"DateTimeOffset","pos":[0,14]}]},{"pos":[111,118],"content":"Decimal","nodes":[{"content":"Decimal","pos":[0,7]}]},{"pos":[119,125],"content":"Double","nodes":[{"content":"Double","pos":[0,6]}]},{"pos":[126,131],"content":"Float","nodes":[{"content":"Float","pos":[0,5]}]},{"pos":[136,140],"content":"Guid","nodes":[{"content":"Guid","pos":[0,4]}]},{"pos":[141,146],"content":"Int16","nodes":[{"content":"Int16","pos":[0,5]}]},{"pos":[147,152],"content":"Int32","nodes":[{"content":"Int32","pos":[0,5]}]},{"pos":[153,158],"content":"Int64","nodes":[{"content":"Int64","pos":[0,5]}]},{"pos":[163,173],"content":"SqlBoolean","nodes":[{"content":"SqlBoolean","pos":[0,10]}]},{"pos":[174,181],"content":"SqlByte","nodes":[{"content":"SqlByte","pos":[0,7]}]},{"pos":[182,193],"content":"SqlDateTime","nodes":[{"content":"SqlDateTime","pos":[0,11]}]},{"pos":[194,204],"content":"SqlDecimal","nodes":[{"content":"SqlDecimal","pos":[0,10]}]},{"pos":[209,218],"content":"SqlDouble","nodes":[{"content":"SqlDouble","pos":[0,9]}]},{"pos":[219,226],"content":"SqlGuid","nodes":[{"content":"SqlGuid","pos":[0,7]}]},{"pos":[227,235],"content":"SqlInt16","nodes":[{"content":"SqlInt16","pos":[0,8]}]},{"pos":[236,244],"content":"SqlInt32","nodes":[{"content":"SqlInt32","pos":[0,8]}]},{"pos":[249,257],"content":"SqlInt64","nodes":[{"content":"SqlInt64","pos":[0,8]}]},{"pos":[258,266],"content":"SqlMoney","nodes":[{"content":"SqlMoney","pos":[0,8]}]},{"pos":[267,276],"content":"SqlSingle","nodes":[{"content":"SqlSingle","pos":[0,9]}]},{"pos":[277,286],"content":"SqlString","nodes":[{"content":"SqlString","pos":[0,9]}]},{"pos":[291,297],"content":"String","nodes":[{"content":"String","pos":[0,6]}]},{"pos":[298,403],"content":"UDT, which can be any CLR type marked with <xref:Microsoft.SqlServer.Server.SqlUserDefinedTypeAttribute>.","nodes":[{"content":"UDT, which can be any CLR type marked with <ph id=\"ph1\">&lt;xref:Microsoft.SqlServer.Server.SqlUserDefinedTypeAttribute&gt;</ph>.","pos":[0,105],"source":"UDT, which can be any CLR type marked with <xref:Microsoft.SqlServer.Server.SqlUserDefinedTypeAttribute>."}]},{"pos":[413,530],"content":"For more information, see <bpt id=\"p1\">[</bpt>SqlClient Streaming Support<ept id=\"p1\">](~/docs/framework/data/adonet/sqlclient-streaming-support.md)</ept>.","source":"For more information, see [SqlClient Streaming Support](~/docs/framework/data/adonet/sqlclient-streaming-support.md)."}],"pos":[51078,51623],"yaml":true,"extradata":"MT"},{"content":"The column to be retrieved.","nodes":[{"pos":[0,27],"content":"The column to be retrieved.","nodes":[{"content":"The column to be retrieved.","pos":[0,27]}]}],"pos":[51850,51878],"yaml":true},{"content":"The cancellation instruction, which propagates a notification that operations should be canceled. This does not guarantee the cancellation. A setting of `CancellationToken.None` makes this method equivalent to <xref href=\"System.Data.SqlClient.SqlDataReader.IsDBNull(System.Int32)\"></xref>. The returned task must be marked as cancelled.","nodes":[{"pos":[0,337],"content":"The cancellation instruction, which propagates a notification that operations should be canceled. This does not guarantee the cancellation. A setting of `CancellationToken.None` makes this method equivalent to <xref href=\"System.Data.SqlClient.SqlDataReader.IsDBNull(System.Int32)\"></xref>. The returned task must be marked as cancelled.","nodes":[{"content":"The cancellation instruction, which propagates a notification that operations should be canceled.","pos":[0,97]},{"content":"This does not guarantee the cancellation.","pos":[98,139]},{"content":"A setting of <ph id=\"ph1\">`CancellationToken.None`</ph> makes this method equivalent to <ph id=\"ph2\">&lt;xref href=\"System.Data.SqlClient.SqlDataReader.IsDBNull(System.Int32)\"&gt;&lt;/xref&gt;</ph>.","pos":[140,290],"source":" A setting of `CancellationToken.None` makes this method equivalent to <xref href=\"System.Data.SqlClient.SqlDataReader.IsDBNull(System.Int32)\"></xref>."},{"content":"The returned task must be marked as cancelled.","pos":[291,337]}]}],"pos":[51972,52310],"yaml":true},{"content":"The type of the value to be returned.","nodes":[{"pos":[0,37],"content":"The type of the value to be returned.","nodes":[{"content":"The type of the value to be returned.","pos":[0,37]}]}],"pos":[52361,52399],"yaml":true},{"content":"The returned type object.","nodes":[{"pos":[0,25],"content":"The returned type object.","nodes":[{"content":"The returned type object.","pos":[0,25]}]}],"pos":[52473,52499],"yaml":true},{"content":"The connection drops or is closed during the data retrieval.  \n  \n The <xref href=\"System.Data.SqlClient.SqlDataReader\"></xref> is closed during the data retrieval.  \n  \n There is no data ready to be read (for example, the first <xref href=\"System.Data.SqlClient.SqlDataReader.Read\"></xref> hasn't been called, or returned false).  \n  \n Tried to read a previously-read column in sequential mode.  \n  \n There was an asynchronous operation in progress. This applies to all Get* methods when running in sequential mode, as they could be called while reading a stream.  \n  \n `Context Connection=true` is specified in the connection string.","nodes":[{"pos":[0,60],"content":"The connection drops or is closed during the data retrieval.","nodes":[{"content":"The connection drops or is closed during the data retrieval.","pos":[0,60]}]},{"pos":[67,164],"content":"The <ph id=\"ph1\">&lt;xref href=\"System.Data.SqlClient.SqlDataReader\"&gt;&lt;/xref&gt;</ph> is closed during the data retrieval.","source":"The <xref href=\"System.Data.SqlClient.SqlDataReader\"></xref> is closed during the data retrieval."},{"pos":[171,330],"content":"There is no data ready to be read (for example, the first <ph id=\"ph1\">&lt;xref href=\"System.Data.SqlClient.SqlDataReader.Read\"&gt;&lt;/xref&gt;</ph> hasn't been called, or returned false).","source":"There is no data ready to be read (for example, the first <xref href=\"System.Data.SqlClient.SqlDataReader.Read\"></xref> hasn't been called, or returned false)."},{"pos":[337,395],"content":"Tried to read a previously-read column in sequential mode.","nodes":[{"content":"Tried to read a previously-read column in sequential mode.","pos":[0,58]}]},{"pos":[402,564],"content":"There was an asynchronous operation in progress. This applies to all Get* methods when running in sequential mode, as they could be called while reading a stream.","nodes":[{"content":"There was an asynchronous operation in progress. This applies to all Get* methods when running in sequential mode, as they could be called while reading a stream.","pos":[0,162],"nodes":[{"content":"There was an asynchronous operation in progress.","pos":[0,48]},{"content":"This applies to all Get* methods when running in sequential mode, as they could be called while reading a stream.","pos":[49,162]}]}]},{"pos":[571,635],"content":"<ph id=\"ph1\">`Context Connection=true`</ph> is specified in the connection string.","source":"`Context Connection=true` is specified in the connection string."}],"pos":[52694,53346],"yaml":true},{"content":"Trying to read a column that does not exist.","nodes":[{"pos":[0,44],"content":"Trying to read a column that does not exist.","nodes":[{"content":"Trying to read a column that does not exist.","pos":[0,44]}]}],"pos":[53454,53499],"yaml":true},{"content":"The value of the column was null (<xref href=\"System.Data.SqlClient.SqlDataReader.IsDBNull(System.Int32)\"></xref> == `true`), retrieving a non-SQL type.","nodes":[{"pos":[0,152],"content":"The value of the column was null (<ph id=\"ph1\">&lt;xref href=\"System.Data.SqlClient.SqlDataReader.IsDBNull(System.Int32)\"&gt;&lt;/xref&gt;</ph><ph id=\"ph2\"> == </ph><ph id=\"ph3\">`true`</ph>), retrieving a non-SQL type.","source":"The value of the column was null (<xref href=\"System.Data.SqlClient.SqlDataReader.IsDBNull(System.Int32)\"></xref> == `true`), retrieving a non-SQL type."}],"pos":[53629,53782],"yaml":true},{"content":"<code>T</code> doesn’t match the type returned by [!INCLUDE[ssNoVersion](~/includes/ssnoversion-md.md)] or cannot be cast.","nodes":[{"pos":[0,122],"content":"<ph id=\"ph1\">&lt;code&gt;T&lt;/code&gt;</ph> doesn’t match the type returned by <ph id=\"ph2\">[!INCLUDE[ssNoVersion](~/includes/ssnoversion-md.md)]</ph> or cannot be cast.","source":"<code>T</code> doesn’t match the type returned by [!INCLUDE[ssNoVersion](~/includes/ssnoversion-md.md)] or cannot be cast."}],"pos":[53882,54005],"yaml":true},{"content":"Gets the value of the specified column as a single-precision floating point number.","nodes":[{"pos":[0,83],"content":"Gets the value of the specified column as a single-precision floating point number.","nodes":[{"content":"Gets the value of the specified column as a single-precision floating point number.","pos":[0,83]}]}],"pos":[55242,55326],"yaml":true},{"content":"No conversions are performed. Therefore, the data retrieved must already be a single-precision floating point number.  \n  \n Call <xref:System.Data.SqlClient.SqlDataReader.IsDBNull%2A> to check for null values before calling this method.","nodes":[{"pos":[0,117],"content":"No conversions are performed. Therefore, the data retrieved must already be a single-precision floating point number.","nodes":[{"content":"No conversions are performed. Therefore, the data retrieved must already be a single-precision floating point number.","pos":[0,117],"nodes":[{"content":"No conversions are performed.","pos":[0,29]},{"content":"Therefore, the data retrieved must already be a single-precision floating point number.","pos":[30,117]}]}]},{"pos":[124,236],"content":"Call <xref:System.Data.SqlClient.SqlDataReader.IsDBNull%2A> to check for null values before calling this method.","nodes":[{"content":"Call <ph id=\"ph1\">&lt;xref:System.Data.SqlClient.SqlDataReader.IsDBNull%2A&gt;</ph> to check for null values before calling this method.","pos":[0,112],"source":"Call <xref:System.Data.SqlClient.SqlDataReader.IsDBNull%2A> to check for null values before calling this method."}]}],"pos":[55337,55578],"yaml":true,"extradata":"MT"},{"content":"The zero-based column ordinal.","nodes":[{"pos":[0,30],"content":"The zero-based column ordinal.","nodes":[{"content":"The zero-based column ordinal.","pos":[0,30]}]}],"pos":[55713,55744],"yaml":true},{"content":"The value of the specified column.","nodes":[{"pos":[0,34],"content":"The value of the specified column.","nodes":[{"content":"The value of the specified column.","pos":[0,34]}]}],"pos":[55801,55836],"yaml":true},{"content":"The specified cast is not valid.","nodes":[{"pos":[0,32],"content":"The specified cast is not valid.","nodes":[{"content":"The specified cast is not valid.","pos":[0,32]}]}],"pos":[56008,56041],"yaml":true},{"content":"Gets the value of the specified column as a globally unique identifier (GUID).","nodes":[{"pos":[0,78],"content":"Gets the value of the specified column as a globally unique identifier (GUID).","nodes":[{"content":"Gets the value of the specified column as a globally unique identifier (GUID).","pos":[0,78]}]}],"pos":[57272,57351],"yaml":true},{"content":"No conversions are performed; therefore, the data retrieved must already be a GUID.  \n  \n Call <xref:System.Data.SqlClient.SqlDataReader.IsDBNull%2A> to check for null values before calling this method.","nodes":[{"pos":[0,83],"content":"No conversions are performed; therefore, the data retrieved must already be a GUID.","nodes":[{"content":"No conversions are performed; therefore, the data retrieved must already be a GUID.","pos":[0,83]}]},{"pos":[90,202],"content":"Call <xref:System.Data.SqlClient.SqlDataReader.IsDBNull%2A> to check for null values before calling this method.","nodes":[{"content":"Call <ph id=\"ph1\">&lt;xref:System.Data.SqlClient.SqlDataReader.IsDBNull%2A&gt;</ph> to check for null values before calling this method.","pos":[0,112],"source":"Call <xref:System.Data.SqlClient.SqlDataReader.IsDBNull%2A> to check for null values before calling this method."}]}],"pos":[57362,57569],"yaml":true,"extradata":"MT"},{"content":"The zero-based column ordinal.","nodes":[{"pos":[0,30],"content":"The zero-based column ordinal.","nodes":[{"content":"The zero-based column ordinal.","pos":[0,30]}]}],"pos":[57702,57733],"yaml":true},{"content":"The value of the specified column.","nodes":[{"pos":[0,34],"content":"The value of the specified column.","nodes":[{"content":"The value of the specified column.","pos":[0,34]}]}],"pos":[57788,57823],"yaml":true},{"content":"The specified cast is not valid.","nodes":[{"pos":[0,32],"content":"The specified cast is not valid.","nodes":[{"content":"The specified cast is not valid.","pos":[0,32]}]}],"pos":[57994,58027],"yaml":true},{"content":"Gets the value of the specified column as a 16-bit signed integer.","nodes":[{"pos":[0,66],"content":"Gets the value of the specified column as a 16-bit signed integer.","nodes":[{"content":"Gets the value of the specified column as a 16-bit signed integer.","pos":[0,66]}]}],"pos":[59264,59331],"yaml":true},{"content":"No conversions are performed; therefore, the data retrieved must already be a 16-bit signed integer.  \n  \n Call <xref:System.Data.SqlClient.SqlDataReader.IsDBNull%2A> to check for null values before calling this method.","nodes":[{"pos":[0,100],"content":"No conversions are performed; therefore, the data retrieved must already be a 16-bit signed integer.","nodes":[{"content":"No conversions are performed; therefore, the data retrieved must already be a 16-bit signed integer.","pos":[0,100]}]},{"pos":[107,219],"content":"Call <xref:System.Data.SqlClient.SqlDataReader.IsDBNull%2A> to check for null values before calling this method.","nodes":[{"content":"Call <ph id=\"ph1\">&lt;xref:System.Data.SqlClient.SqlDataReader.IsDBNull%2A&gt;</ph> to check for null values before calling this method.","pos":[0,112],"source":"Call <xref:System.Data.SqlClient.SqlDataReader.IsDBNull%2A> to check for null values before calling this method."}]}],"pos":[59342,59566],"yaml":true,"extradata":"MT"},{"content":"The zero-based column ordinal.","nodes":[{"pos":[0,30],"content":"The zero-based column ordinal.","nodes":[{"content":"The zero-based column ordinal.","pos":[0,30]}]}],"pos":[59701,59732],"yaml":true},{"content":"The value of the specified column.","nodes":[{"pos":[0,34],"content":"The value of the specified column.","nodes":[{"content":"The value of the specified column.","pos":[0,34]}]}],"pos":[59788,59823],"yaml":true},{"content":"The specified cast is not valid.","nodes":[{"pos":[0,32],"content":"The specified cast is not valid.","nodes":[{"content":"The specified cast is not valid.","pos":[0,32]}]}],"pos":[59995,60028],"yaml":true},{"content":"Gets the value of the specified column as a 32-bit signed integer.","nodes":[{"pos":[0,66],"content":"Gets the value of the specified column as a 32-bit signed integer.","nodes":[{"content":"Gets the value of the specified column as a 32-bit signed integer.","pos":[0,66]}]}],"pos":[61265,61332],"yaml":true},{"content":"No conversions are performed; therefore, the data retrieved must already be a 32-bit signed integer.  \n  \n Call <xref:System.Data.SqlClient.SqlDataReader.IsDBNull%2A> to check for null values before calling this method.","nodes":[{"pos":[0,100],"content":"No conversions are performed; therefore, the data retrieved must already be a 32-bit signed integer.","nodes":[{"content":"No conversions are performed; therefore, the data retrieved must already be a 32-bit signed integer.","pos":[0,100]}]},{"pos":[107,219],"content":"Call <xref:System.Data.SqlClient.SqlDataReader.IsDBNull%2A> to check for null values before calling this method.","nodes":[{"content":"Call <ph id=\"ph1\">&lt;xref:System.Data.SqlClient.SqlDataReader.IsDBNull%2A&gt;</ph> to check for null values before calling this method.","pos":[0,112],"source":"Call <xref:System.Data.SqlClient.SqlDataReader.IsDBNull%2A> to check for null values before calling this method."}]}],"pos":[61343,61567],"yaml":true,"extradata":"MT"},{"content":"The zero-based column ordinal.","nodes":[{"pos":[0,30],"content":"The zero-based column ordinal.","nodes":[{"content":"The zero-based column ordinal.","pos":[0,30]}]}],"pos":[61700,61731],"yaml":true},{"content":"The value of the specified column.","nodes":[{"pos":[0,34],"content":"The value of the specified column.","nodes":[{"content":"The value of the specified column.","pos":[0,34]}]}],"pos":[61787,61822],"yaml":true},{"content":"The specified cast is not valid.","nodes":[{"pos":[0,32],"content":"The specified cast is not valid.","nodes":[{"content":"The specified cast is not valid.","pos":[0,32]}]}],"pos":[61994,62027],"yaml":true},{"content":"Gets the value of the specified column as a 64-bit signed integer.","nodes":[{"pos":[0,66],"content":"Gets the value of the specified column as a 64-bit signed integer.","nodes":[{"content":"Gets the value of the specified column as a 64-bit signed integer.","pos":[0,66]}]}],"pos":[63264,63331],"yaml":true},{"content":"No conversions are performed; therefore, the data retrieved must already be a 64-bit signed integer.  \n  \n Call <xref:System.Data.SqlClient.SqlDataReader.IsDBNull%2A> to check for null values before calling this method.","nodes":[{"pos":[0,100],"content":"No conversions are performed; therefore, the data retrieved must already be a 64-bit signed integer.","nodes":[{"content":"No conversions are performed; therefore, the data retrieved must already be a 64-bit signed integer.","pos":[0,100]}]},{"pos":[107,219],"content":"Call <xref:System.Data.SqlClient.SqlDataReader.IsDBNull%2A> to check for null values before calling this method.","nodes":[{"content":"Call <ph id=\"ph1\">&lt;xref:System.Data.SqlClient.SqlDataReader.IsDBNull%2A&gt;</ph> to check for null values before calling this method.","pos":[0,112],"source":"Call <xref:System.Data.SqlClient.SqlDataReader.IsDBNull%2A> to check for null values before calling this method."}]}],"pos":[63342,63566],"yaml":true,"extradata":"MT"},{"content":"The zero-based column ordinal.","nodes":[{"pos":[0,30],"content":"The zero-based column ordinal.","nodes":[{"content":"The zero-based column ordinal.","pos":[0,30]}]}],"pos":[63700,63731],"yaml":true},{"content":"The value of the specified column.","nodes":[{"pos":[0,34],"content":"The value of the specified column.","nodes":[{"content":"The value of the specified column.","pos":[0,34]}]}],"pos":[63787,63822],"yaml":true},{"content":"The specified cast is not valid.","nodes":[{"pos":[0,32],"content":"The specified cast is not valid.","nodes":[{"content":"The specified cast is not valid.","pos":[0,32]}]}],"pos":[63994,64027],"yaml":true},{"content":"Gets the name of the specified column.","nodes":[{"pos":[0,38],"content":"Gets the name of the specified column.","nodes":[{"content":"Gets the name of the specified column.","pos":[0,38]}]}],"pos":[65258,65297],"yaml":true},{"content":"The zero-based column ordinal.","nodes":[{"pos":[0,30],"content":"The zero-based column ordinal.","nodes":[{"content":"The zero-based column ordinal.","pos":[0,30]}]}],"pos":[65432,65463],"yaml":true},{"content":"The name of the specified column.","nodes":[{"pos":[0,33],"content":"The name of the specified column.","nodes":[{"content":"The name of the specified column.","pos":[0,33]}]}],"pos":[65520,65554],"yaml":true},{"content":"Gets the column ordinal, given the name of the column.","nodes":[{"pos":[0,54],"content":"Gets the column ordinal, given the name of the column.","nodes":[{"content":"Gets the column ordinal, given the name of the column.","pos":[0,54]}]}],"pos":[66883,66938],"yaml":true},{"content":"`GetOrdinal` performs a case-sensitive lookup first. If it fails, a second, case-insensitive search occurs (a case-insensitive comparison is done using the database collation). Unexpected results can occur when comparisons are affected by culture-specific casing rules. For example, in Turkish, the following example yields the wrong results because the file system in Turkish does not use linguistic casing rules for the letter 'i' in \"file\". The method throws an `IndexOutOfRange` exception if the zero-based column ordinal is not found.  \n  \n `GetOrdinal` is kana-width insensitive.  \n  \n Because ordinal-based lookups are more efficient than named lookups, it is inefficient to call `GetOrdinal` within a loop. Save time by calling `GetOrdinal` once and assigning the results to an integer variable for use within the loop.","nodes":[{"pos":[0,539],"content":"`GetOrdinal` performs a case-sensitive lookup first. If it fails, a second, case-insensitive search occurs (a case-insensitive comparison is done using the database collation). Unexpected results can occur when comparisons are affected by culture-specific casing rules. For example, in Turkish, the following example yields the wrong results because the file system in Turkish does not use linguistic casing rules for the letter 'i' in \"file\". The method throws an `IndexOutOfRange` exception if the zero-based column ordinal is not found.","nodes":[{"content":"<ph id=\"ph1\">`GetOrdinal`</ph> performs a case-sensitive lookup first.","pos":[0,52],"source":"`GetOrdinal` performs a case-sensitive lookup first."},{"content":"If it fails, a second, case-insensitive search occurs (a case-insensitive comparison is done using the database collation).","pos":[53,176]},{"content":"Unexpected results can occur when comparisons are affected by culture-specific casing rules.","pos":[177,269]},{"content":"For example, in Turkish, the following example yields the wrong results because the file system in Turkish does not use linguistic casing rules for the letter 'i' in \"file\".","pos":[270,443]},{"content":"The method throws an <ph id=\"ph1\">`IndexOutOfRange`</ph> exception if the zero-based column ordinal is not found.","pos":[444,539],"source":" The method throws an `IndexOutOfRange` exception if the zero-based column ordinal is not found."}]},{"pos":[546,585],"content":"<ph id=\"ph1\">`GetOrdinal`</ph> is kana-width insensitive.","source":"`GetOrdinal` is kana-width insensitive."},{"pos":[592,827],"content":"Because ordinal-based lookups are more efficient than named lookups, it is inefficient to call `GetOrdinal` within a loop. Save time by calling `GetOrdinal` once and assigning the results to an integer variable for use within the loop.","nodes":[{"content":"Because ordinal-based lookups are more efficient than named lookups, it is inefficient to call <ph id=\"ph1\">`GetOrdinal`</ph> within a loop.","pos":[0,122],"source":"Because ordinal-based lookups are more efficient than named lookups, it is inefficient to call `GetOrdinal` within a loop."},{"content":"Save time by calling <ph id=\"ph1\">`GetOrdinal`</ph> once and assigning the results to an integer variable for use within the loop.","pos":[123,235],"source":" Save time by calling `GetOrdinal` once and assigning the results to an integer variable for use within the loop."}]}],"pos":[66949,67785],"yaml":true,"extradata":"MT"},{"content":"The name of the column.","nodes":[{"pos":[0,23],"content":"The name of the column.","nodes":[{"content":"The name of the column.","pos":[0,23]}]}],"pos":[68397,68421],"yaml":true},{"content":"The zero-based column ordinal.","nodes":[{"pos":[0,30],"content":"The zero-based column ordinal.","nodes":[{"content":"The zero-based column ordinal.","pos":[0,30]}]}],"pos":[68477,68508],"yaml":true},{"content":"The name specified is not a valid column name.","nodes":[{"pos":[0,46],"content":"The name specified is not a valid column name.","nodes":[{"content":"The name specified is not a valid column name.","pos":[0,46]}]}],"pos":[68690,68737],"yaml":true},{"content":"Gets an `Object` that is a representation of the underlying provider-specific field type.","nodes":[{"pos":[0,89],"content":"Gets an <ph id=\"ph1\">`Object`</ph> that is a representation of the underlying provider-specific field type.","source":"Gets an `Object` that is a representation of the underlying provider-specific field type."}],"pos":[70094,70184],"yaml":true},{"content":"An <xref href=\"System.Int32\"></xref> representing the column ordinal.","nodes":[{"pos":[0,69],"content":"An <ph id=\"ph1\">&lt;xref href=\"System.Int32\"&gt;&lt;/xref&gt;</ph> representing the column ordinal.","source":"An <xref href=\"System.Int32\"></xref> representing the column ordinal."}],"pos":[70338,70408],"yaml":true},{"content":"Gets an <xref href=\"System.Object\"></xref> that is a representation of the underlying provider-specific field type.","nodes":[{"pos":[0,115],"content":"Gets an <ph id=\"ph1\">&lt;xref href=\"System.Object\"&gt;&lt;/xref&gt;</ph> that is a representation of the underlying provider-specific field type.","source":"Gets an <xref href=\"System.Object\"></xref> that is a representation of the underlying provider-specific field type."}],"pos":[70463,70579],"yaml":true},{"content":"Gets an `Object` that is a representation of the underlying provider specific value.","nodes":[{"pos":[0,84],"content":"Gets an <ph id=\"ph1\">`Object`</ph> that is a representation of the underlying provider specific value.","source":"Gets an `Object` that is a representation of the underlying provider specific value."}],"pos":[72007,72092],"yaml":true},{"content":"An <xref href=\"System.Int32\"></xref> representing the column ordinal.","nodes":[{"pos":[0,69],"content":"An <ph id=\"ph1\">&lt;xref href=\"System.Int32\"&gt;&lt;/xref&gt;</ph> representing the column ordinal.","source":"An <xref href=\"System.Int32\"></xref> representing the column ordinal."}],"pos":[72244,72314],"yaml":true},{"content":"An <xref href=\"System.Object\"></xref> that is a representation of the underlying provider specific value.","nodes":[{"pos":[0,105],"content":"An <ph id=\"ph1\">&lt;xref href=\"System.Object\"&gt;&lt;/xref&gt;</ph> that is a representation of the underlying provider specific value.","source":"An <xref href=\"System.Object\"></xref> that is a representation of the underlying provider specific value."}],"pos":[72371,72477],"yaml":true},{"content":"Gets an array of objects that are a representation of the underlying provider specific values.","nodes":[{"pos":[0,94],"content":"Gets an array of objects that are a representation of the underlying provider specific values.","nodes":[{"content":"Gets an array of objects that are a representation of the underlying provider specific values.","pos":[0,94]}]}],"pos":[73925,74020],"yaml":true},{"content":"An array of <xref href=\"System.Object\"></xref> into which to copy the column values.","nodes":[{"pos":[0,84],"content":"An array of <ph id=\"ph1\">&lt;xref href=\"System.Object\"&gt;&lt;/xref&gt;</ph> into which to copy the column values.","source":"An array of <xref href=\"System.Object\"></xref> into which to copy the column values."}],"pos":[74188,74273],"yaml":true},{"content":"The array of objects that are a representation of the underlying provider specific values.","nodes":[{"pos":[0,90],"content":"The array of objects that are a representation of the underlying provider specific values.","nodes":[{"content":"The array of objects that are a representation of the underlying provider specific values.","pos":[0,90]}]}],"pos":[74329,74420],"yaml":true},{"content":"Returns a <xref href=\"System.Data.DataTable\"></xref> that describes the column metadata of the <xref href=\"System.Data.SqlClient.SqlDataReader\"></xref>.","nodes":[{"pos":[0,152],"content":"Returns a <ph id=\"ph1\">&lt;xref href=\"System.Data.DataTable\"&gt;&lt;/xref&gt;</ph> that describes the column metadata of the <ph id=\"ph2\">&lt;xref href=\"System.Data.SqlClient.SqlDataReader\"&gt;&lt;/xref&gt;</ph>.","source":"Returns a <xref href=\"System.Data.DataTable\"></xref> that describes the column metadata of the <xref href=\"System.Data.SqlClient.SqlDataReader\"></xref>."}],"pos":[75686,75839],"yaml":true},{"content":"For the <xref:System.Data.SqlClient.SqlDataReader.GetSchemaTable%2A> method returns metadata about each column in the following order:  \n  \n|DataReader column|Description|  \n|-----------------------|-----------------|  \n|AllowDBNull|Set if the consumer can set the column to a null value or if the provider cannot determine whether the consumer can set the column to a null value. Otherwise, not set. A column may contain null values, even if it cannot be set to a null value.|  \n|BaseCatalogName|The name of the catalog in the data store that contains the column. NULL if the base catalog name cannot be determined. The default of this column is a null value.|  \n|BaseColumnName|The name of the column in the data store. This might be different than the column name returned in the ColumnName column if an alias was used. A null value if the base column name cannot be determined or if the rowset column is derived, but not identical to, a column in the data store. The default of this column is a null value.|  \n|BaseSchemaName|The name of the schema in the data store that contains the column. A null value if the base schema name cannot be determined. The default of this column is a null value.|  \n|BaseServerName|The name of the instance of Microsoft SQL Server used by the <xref:System.Data.SqlClient.SqlDataReader>.|  \n|BaseTableName|The name of the table or view in the data store that contains the column. A null value if the base table name cannot be determined. The default of this column is a null value.|  \n|ColumnName|The name of the column; this might not be unique. If this cannot be determined, a null value is returned. This name always reflects the most recent renaming of the column in the current view or command text.|  \n|ColumnOrdinal|The zero-based ordinal of the column. This column cannot contain a null value.|  \n|ColumnSize|The maximum possible length of a value in the column. For columns that use a fixed-length data type, this is the size of the data type. For `nvarchar(MAX)`, `varchar(MAX)`, and `varbinary(MAX)` columns stored in a SQL Server database, the maximum size is 2GB. If these columns are stored and accessed as files, the limit on maximum size is imposed by the file system. This value changes when using the `Type System Version` keyword in the connection string.  For new types they are represented as downlevel types. The MAX data types return the normal 4k for `nvarchar` and 8000 for `varchar`. For more information, see the Transact-SQL reference in SQL Server Books Online.|  \n|DataTypeName|Returns a string representing the data type of the specified column.|  \n|IsAliased|`true`: The column name is an alias.<br /><br /> `false`: The column name is not an alias.|  \n|IsAutoIncrement|`true`: The column assigns values to new rows in fixed increments.<br /><br /> `false`: The column does not assign values to new rows in fixed increments. The default of this column is `false`.|  \n|IsColumnSet|`true`: The column is a sparse column that is a member of a column set.|  \n|IsExpression|`true`: The column is an expression.<br /><br /> `false`: The column is not an expression.|  \n|IsHidden|`true`: The column is hidden.<br /><br /> `false`: The column is not hidden.|  \n|IsIdentity|`true`: The column is an identity column.<br /><br /> `false`: The column is not an identity column.|  \n|IsKey|`true`: The column is one of a set of columns in the rowset that, taken together, uniquely identify the row. The set of columns with `IsKey` set to `true` must uniquely identify a row in the rowset. There is no requirement that this set of columns is a minimal set of columns. This set of columns may be generated from a base table primary key, a unique constraint or a unique index.<br /><br /> `false`: The column is not required to uniquely identify the row.|  \n|IsLong|`true`: The column contains a Binary Long Object (BLOB) that contains very long data. The definition of very long data is provider-specific.<br /><br /> `false`: The column does not contain a Binary Long Object (BLOB) that contains very long data.|  \n|IsReadOnly|`true`: The column cannot be modified.<br /><br /> `false`: The column can be modified.|  \n|IsRowVersion|`true`: The column contains a persistent row identifier that cannot be written to, and has no meaningful value except to identity the row.<br /><br /> `false`: The column does not contain a persistent row identifier that cannot be written to, and has no meaningful value except to identity the row.|  \n|IsUnique|`true`: Column is of type `timestamp`.<br /><br /> `false`: Column is not of type `timestamp`.|  \n|NonVersionedProviderType|The type of the column irrespective of the current `Type System Version` specified in the connection string. The returned value is from the <xref:System.Data.SqlDbType> enumeration.|  \n|NumericPrecision|If `ProviderType` is a numeric data type, this is the maximum precision of the column. The precision depends on the definition of the column. If `ProviderType` is not a numeric data type, this is 255.|  \n|NumericScale|If `ProviderType` is DBTYPE_DECIMAL or DBTYPE_NUMERIC, the number of digits to the right of the decimal point. Otherwise, this is 255.|  \n|ProviderSpecificDataType|Returns the provider-specific data type of the column based on the `Type System Version` keyword in the connection string.|  \n|ProviderType|The indicator of the column's data type. If the data type of the column varies from row to row, this must be Object. This column cannot contain a null value.|  \n|UdtAssemblyQualifiedName|If the column is a user-defined type (UDT), this is the qualified name of the UDT's assembly as per <xref:System.Type.AssemblyQualifiedName%2A>. If the column is not a UDT, this is null.|  \n|XmlSchemaCollectionDatabase|The name of the database where the schema collection for this XML instance is located, if the row contains information about an XML column. This value is `null` (`Nothing` in Visual Basic) if the collection is defined within the current database. It is also null if there is no schema collection, in which case the `XmlSchemaCollectionName` and `XmlSchemaCollectionOwningSchema` columns are also null.|  \n|XmlSchemaCollectionName|The name of the schema collection for this XML instance, if the row contains information about an XML column. This value is `null` (`Nothing` in Visual Basic) if there is no associated schema collection. If the value is null, the `XmlSchemaCollectionDatabase` and `XmlSchemaCollectionOwningSchema` columns are also null.|  \n|XmlSchemaCollectionOwningSchema|The owning relational schema where the schema collection for this XML instance is located, if the row contains information about an XML column. This value is `null` (`Nothing` in Visual Basic) if the collection is defined within the current database. It is also null if there is no schema collection, in which case the `XmlSchemaCollectionDatabase` and `XmlSchemaCollectionName` columns are also null.|  \n  \n> [!NOTE]\n>  To make sure that metadata columns return the correct information, you must call <xref:System.Data.SqlClient.SqlCommand.ExecuteReader%2A> with the `behavior` parameter set to `KeyInfo`. Otherwise, some of the columns in the schema table may return default, null, or incorrect data.","nodes":[{"pos":[0,134],"content":"For the <xref:System.Data.SqlClient.SqlDataReader.GetSchemaTable%2A> method returns metadata about each column in the following order:","nodes":[{"content":"For the <ph id=\"ph1\">&lt;xref:System.Data.SqlClient.SqlDataReader.GetSchemaTable%2A&gt;</ph> method returns metadata about each column in the following order:","pos":[0,134],"source":"For the <xref:System.Data.SqlClient.SqlDataReader.GetSchemaTable%2A> method returns metadata about each column in the following order:"}]},{"pos":[141,158],"content":"DataReader column","nodes":[{"content":"DataReader column","pos":[0,17]}]},{"pos":[159,170],"content":"Description","nodes":[{"content":"Description","pos":[0,11]}]},{"pos":[221,232],"content":"AllowDBNull","nodes":[{"content":"AllowDBNull","pos":[0,11]}]},{"pos":[233,476],"content":"Set if the consumer can set the column to a null value or if the provider cannot determine whether the consumer can set the column to a null value. Otherwise, not set. A column may contain null values, even if it cannot be set to a null value.","nodes":[{"content":"Set if the consumer can set the column to a null value or if the provider cannot determine whether the consumer can set the column to a null value. Otherwise, not set. A column may contain null values, even if it cannot be set to a null value.","pos":[0,243],"nodes":[{"content":"Set if the consumer can set the column to a null value or if the provider cannot determine whether the consumer can set the column to a null value.","pos":[0,147]},{"content":"Otherwise, not set.","pos":[148,167]},{"content":"A column may contain null values, even if it cannot be set to a null value.","pos":[168,243]}]}]},{"pos":[481,496],"content":"BaseCatalogName","nodes":[{"content":"BaseCatalogName","pos":[0,15]}]},{"pos":[497,660],"content":"The name of the catalog in the data store that contains the column. NULL if the base catalog name cannot be determined. The default of this column is a null value.","nodes":[{"content":"The name of the catalog in the data store that contains the column. NULL if the base catalog name cannot be determined. The default of this column is a null value.","pos":[0,163],"nodes":[{"content":"The name of the catalog in the data store that contains the column.","pos":[0,67]},{"content":"NULL if the base catalog name cannot be determined.","pos":[68,119]},{"content":"The default of this column is a null value.","pos":[120,163]}]}]},{"pos":[665,679],"content":"BaseColumnName","nodes":[{"content":"BaseColumnName","pos":[0,14]}]},{"pos":[680,1010],"content":"The name of the column in the data store. This might be different than the column name returned in the ColumnName column if an alias was used. A null value if the base column name cannot be determined or if the rowset column is derived, but not identical to, a column in the data store. The default of this column is a null value.","nodes":[{"content":"The name of the column in the data store. This might be different than the column name returned in the ColumnName column if an alias was used. A null value if the base column name cannot be determined or if the rowset column is derived, but not identical to, a column in the data store. The default of this column is a null value.","pos":[0,330],"nodes":[{"content":"The name of the column in the data store.","pos":[0,41]},{"content":"This might be different than the column name returned in the ColumnName column if an alias was used.","pos":[42,142]},{"content":"A null value if the base column name cannot be determined or if the rowset column is derived, but not identical to, a column in the data store.","pos":[143,286]},{"content":"The default of this column is a null value.","pos":[287,330]}]}]},{"pos":[1015,1029],"content":"BaseSchemaName","nodes":[{"content":"BaseSchemaName","pos":[0,14]}]},{"pos":[1030,1199],"content":"The name of the schema in the data store that contains the column. A null value if the base schema name cannot be determined. The default of this column is a null value.","nodes":[{"content":"The name of the schema in the data store that contains the column. A null value if the base schema name cannot be determined. The default of this column is a null value.","pos":[0,169],"nodes":[{"content":"The name of the schema in the data store that contains the column.","pos":[0,66]},{"content":"A null value if the base schema name cannot be determined.","pos":[67,125]},{"content":"The default of this column is a null value.","pos":[126,169]}]}]},{"pos":[1204,1218],"content":"BaseServerName","nodes":[{"content":"BaseServerName","pos":[0,14]}]},{"pos":[1219,1323],"content":"The name of the instance of Microsoft SQL Server used by the <xref:System.Data.SqlClient.SqlDataReader>.","nodes":[{"content":"The name of the instance of Microsoft SQL Server used by the <ph id=\"ph1\">&lt;xref:System.Data.SqlClient.SqlDataReader&gt;</ph>.","pos":[0,104],"source":"The name of the instance of Microsoft SQL Server used by the <xref:System.Data.SqlClient.SqlDataReader>."}]},{"pos":[1328,1341],"content":"BaseTableName","nodes":[{"content":"BaseTableName","pos":[0,13]}]},{"pos":[1342,1517],"content":"The name of the table or view in the data store that contains the column. A null value if the base table name cannot be determined. The default of this column is a null value.","nodes":[{"content":"The name of the table or view in the data store that contains the column. A null value if the base table name cannot be determined. The default of this column is a null value.","pos":[0,175],"nodes":[{"content":"The name of the table or view in the data store that contains the column.","pos":[0,73]},{"content":"A null value if the base table name cannot be determined.","pos":[74,131]},{"content":"The default of this column is a null value.","pos":[132,175]}]}]},{"pos":[1522,1532],"content":"ColumnName","nodes":[{"content":"ColumnName","pos":[0,10]}]},{"pos":[1533,1740],"content":"The name of the column; this might not be unique. If this cannot be determined, a null value is returned. This name always reflects the most recent renaming of the column in the current view or command text.","nodes":[{"content":"The name of the column; this might not be unique. If this cannot be determined, a null value is returned. This name always reflects the most recent renaming of the column in the current view or command text.","pos":[0,207],"nodes":[{"content":"The name of the column; this might not be unique.","pos":[0,49]},{"content":"If this cannot be determined, a null value is returned.","pos":[50,105]},{"content":"This name always reflects the most recent renaming of the column in the current view or command text.","pos":[106,207]}]}]},{"pos":[1745,1758],"content":"ColumnOrdinal","nodes":[{"content":"ColumnOrdinal","pos":[0,13]}]},{"pos":[1759,1837],"content":"The zero-based ordinal of the column. This column cannot contain a null value.","nodes":[{"content":"The zero-based ordinal of the column. This column cannot contain a null value.","pos":[0,78],"nodes":[{"content":"The zero-based ordinal of the column.","pos":[0,37]},{"content":"This column cannot contain a null value.","pos":[38,78]}]}]},{"pos":[1842,1852],"content":"ColumnSize","nodes":[{"content":"ColumnSize","pos":[0,10]}]},{"pos":[1853,2526],"content":"The maximum possible length of a value in the column. For columns that use a fixed-length data type, this is the size of the data type. For `nvarchar(MAX)`, `varchar(MAX)`, and `varbinary(MAX)` columns stored in a SQL Server database, the maximum size is 2GB. If these columns are stored and accessed as files, the limit on maximum size is imposed by the file system. This value changes when using the `Type System Version` keyword in the connection string.  For new types they are represented as downlevel types. The MAX data types return the normal 4k for `nvarchar` and 8000 for `varchar`. For more information, see the Transact-SQL reference in SQL Server Books Online.","nodes":[{"content":"The maximum possible length of a value in the column.","pos":[0,53]},{"content":"For columns that use a fixed-length data type, this is the size of the data type.","pos":[54,135]},{"content":"For <ph id=\"ph1\">`nvarchar(MAX)`</ph>, <ph id=\"ph2\">`varchar(MAX)`</ph>, and <ph id=\"ph3\">`varbinary(MAX)`</ph> columns stored in a SQL Server database, the maximum size is 2GB.","pos":[136,259],"source":" For `nvarchar(MAX)`, `varchar(MAX)`, and `varbinary(MAX)` columns stored in a SQL Server database, the maximum size is 2GB."},{"content":"If these columns are stored and accessed as files, the limit on maximum size is imposed by the file system.","pos":[260,367]},{"content":"This value changes when using the <ph id=\"ph1\">`Type System Version`</ph> keyword in the connection string.","pos":[368,457],"source":" This value changes when using the `Type System Version` keyword in the connection string."},{"content":"For new types they are represented as downlevel types.","pos":[459,513]},{"content":"The MAX data types return the normal 4k for <ph id=\"ph1\">`nvarchar`</ph> and 8000 for <ph id=\"ph2\">`varchar`</ph>.","pos":[514,592],"source":" The MAX data types return the normal 4k for `nvarchar` and 8000 for `varchar`."},{"content":"For more information, see the Transact-SQL reference in SQL Server Books Online.","pos":[593,673]}]},{"pos":[2531,2543],"content":"DataTypeName","nodes":[{"content":"DataTypeName","pos":[0,12]}]},{"pos":[2544,2612],"content":"Returns a string representing the data type of the specified column.","nodes":[{"content":"Returns a string representing the data type of the specified column.","pos":[0,68]}]},{"pos":[2617,2626],"content":"IsAliased","nodes":[{"content":"IsAliased","pos":[0,9]}]},{"pos":[2627,2717],"content":"`true`: The column name is an alias.<br /><br /> `false`: The column name is not an alias.","nodes":[{"content":"<ph id=\"ph1\">`true`</ph>: The column name is an alias.","pos":[0,36],"source":"`true`: The column name is an alias."},{"content":"<ph id=\"ph1\">`false`</ph>: The column name is not an alias.","pos":[49,90],"source":"`false`: The column name is not an alias."}]},{"pos":[2722,2737],"content":"IsAutoIncrement","nodes":[{"content":"IsAutoIncrement","pos":[0,15]}]},{"pos":[2738,2931],"content":"`true`: The column assigns values to new rows in fixed increments.<br /><br /> `false`: The column does not assign values to new rows in fixed increments. The default of this column is `false`.","nodes":[{"content":"<ph id=\"ph1\">`true`</ph>: The column assigns values to new rows in fixed increments.","pos":[0,66],"source":"`true`: The column assigns values to new rows in fixed increments."},{"content":"`false`: The column does not assign values to new rows in fixed increments. The default of this column is `false`.","pos":[79,193],"nodes":[{"content":"<ph id=\"ph1\">`false`</ph>: The column does not assign values to new rows in fixed increments.","pos":[0,75],"source":"`false`: The column does not assign values to new rows in fixed increments."},{"content":"The default of this column is <ph id=\"ph1\">`false`</ph>.","pos":[76,114],"source":" The default of this column is `false`."}]}]},{"pos":[2936,2947],"content":"IsColumnSet","nodes":[{"content":"IsColumnSet","pos":[0,11]}]},{"pos":[2948,3019],"content":"<ph id=\"ph1\">`true`</ph>: The column is a sparse column that is a member of a column set.","source":"`true`: The column is a sparse column that is a member of a column set."},{"pos":[3024,3036],"content":"IsExpression","nodes":[{"content":"IsExpression","pos":[0,12]}]},{"pos":[3037,3127],"content":"`true`: The column is an expression.<br /><br /> `false`: The column is not an expression.","nodes":[{"content":"<ph id=\"ph1\">`true`</ph>: The column is an expression.","pos":[0,36],"source":"`true`: The column is an expression."},{"content":"<ph id=\"ph1\">`false`</ph>: The column is not an expression.","pos":[49,90],"source":"`false`: The column is not an expression."}]},{"pos":[3132,3140],"content":"IsHidden","nodes":[{"content":"IsHidden","pos":[0,8]}]},{"pos":[3141,3217],"content":"`true`: The column is hidden.<br /><br /> `false`: The column is not hidden.","nodes":[{"content":"<ph id=\"ph1\">`true`</ph>: The column is hidden.","pos":[0,29],"source":"`true`: The column is hidden."},{"content":"<ph id=\"ph1\">`false`</ph>: The column is not hidden.","pos":[42,76],"source":"`false`: The column is not hidden."}]},{"pos":[3222,3232],"content":"IsIdentity","nodes":[{"content":"IsIdentity","pos":[0,10]}]},{"pos":[3233,3333],"content":"`true`: The column is an identity column.<br /><br /> `false`: The column is not an identity column.","nodes":[{"content":"<ph id=\"ph1\">`true`</ph>: The column is an identity column.","pos":[0,41],"source":"`true`: The column is an identity column."},{"content":"<ph id=\"ph1\">`false`</ph>: The column is not an identity column.","pos":[54,100],"source":"`false`: The column is not an identity column."}]},{"pos":[3338,3343],"content":"IsKey","nodes":[{"content":"IsKey","pos":[0,5]}]},{"pos":[3344,3805],"content":"`true`: The column is one of a set of columns in the rowset that, taken together, uniquely identify the row. The set of columns with `IsKey` set to `true` must uniquely identify a row in the rowset. There is no requirement that this set of columns is a minimal set of columns. This set of columns may be generated from a base table primary key, a unique constraint or a unique index.<br /><br /> `false`: The column is not required to uniquely identify the row.","nodes":[{"content":"`true`: The column is one of a set of columns in the rowset that, taken together, uniquely identify the row. The set of columns with `IsKey` set to `true` must uniquely identify a row in the rowset. There is no requirement that this set of columns is a minimal set of columns. This set of columns may be generated from a base table primary key, a unique constraint or a unique index.","pos":[0,383],"nodes":[{"content":"<ph id=\"ph1\">`true`</ph>: The column is one of a set of columns in the rowset that, taken together, uniquely identify the row.","pos":[0,108],"source":"`true`: The column is one of a set of columns in the rowset that, taken together, uniquely identify the row."},{"content":"The set of columns with <ph id=\"ph1\">`IsKey`</ph> set to <ph id=\"ph2\">`true`</ph> must uniquely identify a row in the rowset.","pos":[109,198],"source":" The set of columns with `IsKey` set to `true` must uniquely identify a row in the rowset."},{"content":"There is no requirement that this set of columns is a minimal set of columns.","pos":[199,276]},{"content":"This set of columns may be generated from a base table primary key, a unique constraint or a unique index.","pos":[277,383]}]},{"content":"<ph id=\"ph1\">`false`</ph>: The column is not required to uniquely identify the row.","pos":[396,461],"source":"`false`: The column is not required to uniquely identify the row."}]},{"pos":[3810,3816],"content":"IsLong","nodes":[{"content":"IsLong","pos":[0,6]}]},{"pos":[3817,4064],"content":"`true`: The column contains a Binary Long Object (BLOB) that contains very long data. The definition of very long data is provider-specific.<br /><br /> `false`: The column does not contain a Binary Long Object (BLOB) that contains very long data.","nodes":[{"content":"`true`: The column contains a Binary Long Object (BLOB) that contains very long data. The definition of very long data is provider-specific.","pos":[0,140],"nodes":[{"content":"<ph id=\"ph1\">`true`</ph>: The column contains a Binary Long Object (BLOB) that contains very long data.","pos":[0,85],"source":"`true`: The column contains a Binary Long Object (BLOB) that contains very long data."},{"content":"The definition of very long data is provider-specific.","pos":[86,140]}]},{"content":"<ph id=\"ph1\">`false`</ph>: The column does not contain a Binary Long Object (BLOB) that contains very long data.","pos":[153,247],"source":"`false`: The column does not contain a Binary Long Object (BLOB) that contains very long data."}]},{"pos":[4069,4079],"content":"IsReadOnly","nodes":[{"content":"IsReadOnly","pos":[0,10]}]},{"pos":[4080,4167],"content":"`true`: The column cannot be modified.<br /><br /> `false`: The column can be modified.","nodes":[{"content":"<ph id=\"ph1\">`true`</ph>: The column cannot be modified.","pos":[0,38],"source":"`true`: The column cannot be modified."},{"content":"<ph id=\"ph1\">`false`</ph>: The column can be modified.","pos":[51,87],"source":"`false`: The column can be modified."}]},{"pos":[4172,4184],"content":"IsRowVersion","nodes":[{"content":"IsRowVersion","pos":[0,12]}]},{"pos":[4185,4483],"content":"`true`: The column contains a persistent row identifier that cannot be written to, and has no meaningful value except to identity the row.<br /><br /> `false`: The column does not contain a persistent row identifier that cannot be written to, and has no meaningful value except to identity the row.","nodes":[{"content":"<ph id=\"ph1\">`true`</ph>: The column contains a persistent row identifier that cannot be written to, and has no meaningful value except to identity the row.","pos":[0,138],"source":"`true`: The column contains a persistent row identifier that cannot be written to, and has no meaningful value except to identity the row."},{"content":"<ph id=\"ph1\">`false`</ph>: The column does not contain a persistent row identifier that cannot be written to, and has no meaningful value except to identity the row.","pos":[151,298],"source":"`false`: The column does not contain a persistent row identifier that cannot be written to, and has no meaningful value except to identity the row."}]},{"pos":[4488,4496],"content":"IsUnique","nodes":[{"content":"IsUnique","pos":[0,8]}]},{"pos":[4497,4591],"content":"`true`: Column is of type `timestamp`.<br /><br /> `false`: Column is not of type `timestamp`.","nodes":[{"content":"<ph id=\"ph1\">`true`</ph>: Column is of type <ph id=\"ph2\">`timestamp`</ph>.","pos":[0,38],"source":"`true`: Column is of type `timestamp`."},{"content":"<ph id=\"ph1\">`false`</ph>: Column is not of type <ph id=\"ph2\">`timestamp`</ph>.","pos":[51,94],"source":"`false`: Column is not of type `timestamp`."}]},{"pos":[4596,4620],"content":"NonVersionedProviderType","nodes":[{"content":"NonVersionedProviderType","pos":[0,24]}]},{"pos":[4621,4802],"content":"The type of the column irrespective of the current `Type System Version` specified in the connection string. The returned value is from the <xref:System.Data.SqlDbType> enumeration.","nodes":[{"content":"The type of the column irrespective of the current <ph id=\"ph1\">`Type System Version`</ph> specified in the connection string.","pos":[0,108],"source":"The type of the column irrespective of the current `Type System Version` specified in the connection string."},{"content":"The returned value is from the <ph id=\"ph1\">&lt;xref:System.Data.SqlDbType&gt;</ph> enumeration.","pos":[109,181],"source":" The returned value is from the <xref:System.Data.SqlDbType> enumeration."}]},{"pos":[4807,4823],"content":"NumericPrecision","nodes":[{"content":"NumericPrecision","pos":[0,16]}]},{"pos":[4824,5024],"content":"If `ProviderType` is a numeric data type, this is the maximum precision of the column. The precision depends on the definition of the column. If `ProviderType` is not a numeric data type, this is 255.","nodes":[{"content":"If <ph id=\"ph1\">`ProviderType`</ph> is a numeric data type, this is the maximum precision of the column.","pos":[0,86],"source":"If `ProviderType` is a numeric data type, this is the maximum precision of the column."},{"content":"The precision depends on the definition of the column.","pos":[87,141]},{"content":"If <ph id=\"ph1\">`ProviderType`</ph> is not a numeric data type, this is 255.","pos":[142,200],"source":" If `ProviderType` is not a numeric data type, this is 255."}]},{"pos":[5029,5041],"content":"NumericScale","nodes":[{"content":"NumericScale","pos":[0,12]}]},{"pos":[5042,5176],"content":"If `ProviderType` is DBTYPE_DECIMAL or DBTYPE_NUMERIC, the number of digits to the right of the decimal point. Otherwise, this is 255.","nodes":[{"content":"If <ph id=\"ph1\">`ProviderType`</ph> is DBTYPE_DECIMAL or DBTYPE_NUMERIC, the number of digits to the right of the decimal point.","pos":[0,110],"source":"If `ProviderType` is DBTYPE_DECIMAL or DBTYPE_NUMERIC, the number of digits to the right of the decimal point."},{"content":"Otherwise, this is 255.","pos":[111,134]}]},{"pos":[5181,5205],"content":"ProviderSpecificDataType","nodes":[{"content":"ProviderSpecificDataType","pos":[0,24]}]},{"pos":[5206,5328],"content":"Returns the provider-specific data type of the column based on the <ph id=\"ph1\">`Type System Version`</ph> keyword in the connection string.","source":"Returns the provider-specific data type of the column based on the `Type System Version` keyword in the connection string."},{"pos":[5333,5345],"content":"ProviderType","nodes":[{"content":"ProviderType","pos":[0,12]}]},{"pos":[5346,5503],"content":"The indicator of the column's data type. If the data type of the column varies from row to row, this must be Object. This column cannot contain a null value.","nodes":[{"content":"The indicator of the column's data type. If the data type of the column varies from row to row, this must be Object. This column cannot contain a null value.","pos":[0,157],"nodes":[{"content":"The indicator of the column's data type.","pos":[0,40]},{"content":"If the data type of the column varies from row to row, this must be Object.","pos":[41,116]},{"content":"This column cannot contain a null value.","pos":[117,157]}]}]},{"pos":[5508,5532],"content":"UdtAssemblyQualifiedName","nodes":[{"content":"UdtAssemblyQualifiedName","pos":[0,24]}]},{"pos":[5533,5719],"content":"If the column is a user-defined type (UDT), this is the qualified name of the UDT's assembly as per <xref:System.Type.AssemblyQualifiedName%2A>. If the column is not a UDT, this is null.","nodes":[{"content":"If the column is a user-defined type (UDT), this is the qualified name of the UDT's assembly as per <xref:System.Type.AssemblyQualifiedName%2A>. If the column is not a UDT, this is null.","pos":[0,186],"nodes":[{"content":"If the column is a user-defined type (UDT), this is the qualified name of the UDT's assembly as per <ph id=\"ph1\">&lt;xref:System.Type.AssemblyQualifiedName%2A&gt;</ph>.","pos":[0,144],"source":"If the column is a user-defined type (UDT), this is the qualified name of the UDT's assembly as per <xref:System.Type.AssemblyQualifiedName%2A>."},{"content":"If the column is not a UDT, this is null.","pos":[145,186]}]}]},{"pos":[5724,5751],"content":"XmlSchemaCollectionDatabase","nodes":[{"content":"XmlSchemaCollectionDatabase","pos":[0,27]}]},{"pos":[5752,6153],"content":"The name of the database where the schema collection for this XML instance is located, if the row contains information about an XML column. This value is `null` (`Nothing` in Visual Basic) if the collection is defined within the current database. It is also null if there is no schema collection, in which case the `XmlSchemaCollectionName` and `XmlSchemaCollectionOwningSchema` columns are also null.","nodes":[{"content":"The name of the database where the schema collection for this XML instance is located, if the row contains information about an XML column.","pos":[0,139]},{"content":"This value is <ph id=\"ph1\">`null`</ph> (<ph id=\"ph2\">`Nothing`</ph> in Visual Basic) if the collection is defined within the current database.","pos":[140,246],"source":" This value is `null` (`Nothing` in Visual Basic) if the collection is defined within the current database."},{"content":"It is also null if there is no schema collection, in which case the <ph id=\"ph1\">`XmlSchemaCollectionName`</ph> and <ph id=\"ph2\">`XmlSchemaCollectionOwningSchema`</ph> columns are also null.","pos":[247,401],"source":" It is also null if there is no schema collection, in which case the `XmlSchemaCollectionName` and `XmlSchemaCollectionOwningSchema` columns are also null."}]},{"pos":[6158,6181],"content":"XmlSchemaCollectionName","nodes":[{"content":"XmlSchemaCollectionName","pos":[0,23]}]},{"pos":[6182,6502],"content":"The name of the schema collection for this XML instance, if the row contains information about an XML column. This value is `null` (`Nothing` in Visual Basic) if there is no associated schema collection. If the value is null, the `XmlSchemaCollectionDatabase` and `XmlSchemaCollectionOwningSchema` columns are also null.","nodes":[{"content":"The name of the schema collection for this XML instance, if the row contains information about an XML column.","pos":[0,109]},{"content":"This value is <ph id=\"ph1\">`null`</ph> (<ph id=\"ph2\">`Nothing`</ph> in Visual Basic) if there is no associated schema collection.","pos":[110,203],"source":" This value is `null` (`Nothing` in Visual Basic) if there is no associated schema collection."},{"content":"If the value is null, the <ph id=\"ph1\">`XmlSchemaCollectionDatabase`</ph> and <ph id=\"ph2\">`XmlSchemaCollectionOwningSchema`</ph> columns are also null.","pos":[204,320],"source":" If the value is null, the `XmlSchemaCollectionDatabase` and `XmlSchemaCollectionOwningSchema` columns are also null."}]},{"pos":[6507,6538],"content":"XmlSchemaCollectionOwningSchema","nodes":[{"content":"XmlSchemaCollectionOwningSchema","pos":[0,31]}]},{"pos":[6539,6940],"content":"The owning relational schema where the schema collection for this XML instance is located, if the row contains information about an XML column. This value is `null` (`Nothing` in Visual Basic) if the collection is defined within the current database. It is also null if there is no schema collection, in which case the `XmlSchemaCollectionDatabase` and `XmlSchemaCollectionName` columns are also null.","nodes":[{"content":"The owning relational schema where the schema collection for this XML instance is located, if the row contains information about an XML column.","pos":[0,143]},{"content":"This value is <ph id=\"ph1\">`null`</ph> (<ph id=\"ph2\">`Nothing`</ph> in Visual Basic) if the collection is defined within the current database.","pos":[144,250],"source":" This value is `null` (`Nothing` in Visual Basic) if the collection is defined within the current database."},{"content":"It is also null if there is no schema collection, in which case the <ph id=\"ph1\">`XmlSchemaCollectionDatabase`</ph> and <ph id=\"ph2\">`XmlSchemaCollectionName`</ph> columns are also null.","pos":[251,401],"source":" It is also null if there is no schema collection, in which case the `XmlSchemaCollectionDatabase` and `XmlSchemaCollectionName` columns are also null."}]},{"pos":[6949,7241],"content":"[!NOTE]\n To make sure that metadata columns return the correct information, you must call <xref:System.Data.SqlClient.SqlCommand.ExecuteReader%2A> with the `behavior` parameter set to `KeyInfo`. Otherwise, some of the columns in the schema table may return default, null, or incorrect data.","leadings":["","> "],"nodes":[{"content":" To make sure that metadata columns return the correct information, you must call <xref:System.Data.SqlClient.SqlCommand.ExecuteReader%2A> with the `behavior` parameter set to `KeyInfo`. Otherwise, some of the columns in the schema table may return default, null, or incorrect data.","pos":[8,290],"nodes":[{"content":"To make sure that metadata columns return the correct information, you must call <ph id=\"ph1\">&lt;xref:System.Data.SqlClient.SqlCommand.ExecuteReader%2A&gt;</ph> with the <ph id=\"ph2\">`behavior`</ph> parameter set to <ph id=\"ph3\">`KeyInfo`</ph>.","pos":[1,186],"source":" To make sure that metadata columns return the correct information, you must call <xref:System.Data.SqlClient.SqlCommand.ExecuteReader%2A> with the `behavior` parameter set to `KeyInfo`."},{"content":"Otherwise, some of the columns in the schema table may return default, null, or incorrect data.","pos":[187,282]}]}]}],"pos":[75850,83130],"yaml":true,"extradata":"MT"},{"content":"A <xref href=\"System.Data.DataTable\"></xref> that describes the column metadata.","nodes":[{"pos":[0,80],"content":"A <ph id=\"ph1\">&lt;xref href=\"System.Data.DataTable\"&gt;&lt;/xref&gt;</ph> that describes the column metadata.","source":"A <xref href=\"System.Data.DataTable\"></xref> that describes the column metadata."}],"pos":[83294,83375],"yaml":true},{"content":"The <xref href=\"System.Data.SqlClient.SqlDataReader\"></xref> is closed.","nodes":[{"pos":[0,71],"content":"The <ph id=\"ph1\">&lt;xref href=\"System.Data.SqlClient.SqlDataReader\"&gt;&lt;/xref&gt;</ph> is closed.","source":"The <xref href=\"System.Data.SqlClient.SqlDataReader\"></xref> is closed."}],"pos":[83563,83635],"yaml":true},{"content":"Gets the value of the specified column as a <xref href=\"System.Data.SqlTypes.SqlBinary\"></xref>.","nodes":[{"pos":[0,96],"content":"Gets the value of the specified column as a <ph id=\"ph1\">&lt;xref href=\"System.Data.SqlTypes.SqlBinary\"&gt;&lt;/xref&gt;</ph>.","source":"Gets the value of the specified column as a <xref href=\"System.Data.SqlTypes.SqlBinary\"></xref>."}],"pos":[84800,84897],"yaml":true},{"content":"No conversions are performed; therefore the data retrieved must already be a binary structure or an exception is generated.","nodes":[{"pos":[0,123],"content":"No conversions are performed; therefore the data retrieved must already be a binary structure or an exception is generated.","nodes":[{"content":"No conversions are performed; therefore the data retrieved must already be a binary structure or an exception is generated.","pos":[0,123]}]}],"pos":[84908,85032],"yaml":true,"extradata":"MT"},{"content":"The zero-based column ordinal.","nodes":[{"pos":[0,30],"content":"The zero-based column ordinal.","nodes":[{"content":"The zero-based column ordinal.","pos":[0,30]}]}],"pos":[85195,85226],"yaml":true},{"content":"The value of the column expressed as a <xref href=\"System.Data.SqlTypes.SqlBinary\"></xref>.","nodes":[{"pos":[0,91],"content":"The value of the column expressed as a <ph id=\"ph1\">&lt;xref href=\"System.Data.SqlTypes.SqlBinary\"&gt;&lt;/xref&gt;</ph>.","source":"The value of the column expressed as a <xref href=\"System.Data.SqlTypes.SqlBinary\"></xref>."}],"pos":[85300,85392],"yaml":true},{"content":"Gets the value of the specified column as a <xref href=\"System.Data.SqlTypes.SqlBoolean\"></xref>.","nodes":[{"pos":[0,97],"content":"Gets the value of the specified column as a <ph id=\"ph1\">&lt;xref href=\"System.Data.SqlTypes.SqlBoolean\"&gt;&lt;/xref&gt;</ph>.","source":"Gets the value of the specified column as a <xref href=\"System.Data.SqlTypes.SqlBoolean\"></xref>."}],"pos":[86738,86836],"yaml":true},{"content":"No conversions are performed; therefore, the data retrieved must already be a Boolean or an exception is generated.","nodes":[{"pos":[0,115],"content":"No conversions are performed; therefore, the data retrieved must already be a Boolean or an exception is generated.","nodes":[{"content":"No conversions are performed; therefore, the data retrieved must already be a Boolean or an exception is generated.","pos":[0,115]}]}],"pos":[86847,86963],"yaml":true,"extradata":"MT"},{"content":"The zero-based column ordinal.","nodes":[{"pos":[0,30],"content":"The zero-based column ordinal.","nodes":[{"content":"The zero-based column ordinal.","pos":[0,30]}]}],"pos":[87128,87159],"yaml":true},{"content":"The value of the column.","nodes":[{"pos":[0,24],"content":"The value of the column.","nodes":[{"content":"The value of the column.","pos":[0,24]}]}],"pos":[87234,87259],"yaml":true},{"content":"Gets the value of the specified column as a <xref href=\"System.Data.SqlTypes.SqlByte\"></xref>.","nodes":[{"pos":[0,94],"content":"Gets the value of the specified column as a <ph id=\"ph1\">&lt;xref href=\"System.Data.SqlTypes.SqlByte\"&gt;&lt;/xref&gt;</ph>.","source":"Gets the value of the specified column as a <xref href=\"System.Data.SqlTypes.SqlByte\"></xref>."}],"pos":[88588,88683],"yaml":true},{"content":"No conversions are performed; therefore the data retrieved must already be a byte, or an exception is generated.","nodes":[{"pos":[0,112],"content":"No conversions are performed; therefore the data retrieved must already be a byte, or an exception is generated.","nodes":[{"content":"No conversions are performed; therefore the data retrieved must already be a byte, or an exception is generated.","pos":[0,112]}]}],"pos":[88694,88807],"yaml":true,"extradata":"MT"},{"content":"The zero-based column ordinal.","nodes":[{"pos":[0,30],"content":"The zero-based column ordinal.","nodes":[{"content":"The zero-based column ordinal.","pos":[0,30]}]}],"pos":[88966,88997],"yaml":true},{"content":"The value of the column expressed as a  <xref href=\"System.Data.SqlTypes.SqlByte\"></xref>.","nodes":[{"pos":[0,90],"content":"The value of the column expressed as a  <ph id=\"ph1\">&lt;xref href=\"System.Data.SqlTypes.SqlByte\"&gt;&lt;/xref&gt;</ph>.","source":"The value of the column expressed as a  <xref href=\"System.Data.SqlTypes.SqlByte\"></xref>."}],"pos":[89069,89160],"yaml":true},{"content":"Gets the value of the specified column as <xref href=\"System.Data.SqlTypes.SqlBytes\"></xref>.","nodes":[{"pos":[0,93],"content":"Gets the value of the specified column as <ph id=\"ph1\">&lt;xref href=\"System.Data.SqlTypes.SqlBytes\"&gt;&lt;/xref&gt;</ph>.","source":"Gets the value of the specified column as <xref href=\"System.Data.SqlTypes.SqlBytes\"></xref>."}],"pos":[90492,90586],"yaml":true},{"content":"The zero-based column ordinal.","nodes":[{"pos":[0,30],"content":"The zero-based column ordinal.","nodes":[{"content":"The zero-based column ordinal.","pos":[0,30]}]}],"pos":[90747,90778],"yaml":true},{"content":"The value of the column expressed as a <xref href=\"System.Data.SqlTypes.SqlBytes\"></xref>.","nodes":[{"pos":[0,90],"content":"The value of the column expressed as a <ph id=\"ph1\">&lt;xref href=\"System.Data.SqlTypes.SqlBytes\"&gt;&lt;/xref&gt;</ph>.","source":"The value of the column expressed as a <xref href=\"System.Data.SqlTypes.SqlBytes\"></xref>."}],"pos":[90851,90942],"yaml":true},{"content":"Gets the value of the specified column as <xref href=\"System.Data.SqlTypes.SqlChars\"></xref>.","nodes":[{"pos":[0,93],"content":"Gets the value of the specified column as <ph id=\"ph1\">&lt;xref href=\"System.Data.SqlTypes.SqlChars\"&gt;&lt;/xref&gt;</ph>.","source":"Gets the value of the specified column as <xref href=\"System.Data.SqlTypes.SqlChars\"></xref>."}],"pos":[92275,92369],"yaml":true},{"content":"The zero-based column ordinal.","nodes":[{"pos":[0,30],"content":"The zero-based column ordinal.","nodes":[{"content":"The zero-based column ordinal.","pos":[0,30]}]}],"pos":[92530,92561],"yaml":true},{"content":"The value of the column expressed as a  <xref href=\"System.Data.SqlTypes.SqlChars\"></xref>.","nodes":[{"pos":[0,91],"content":"The value of the column expressed as a  <ph id=\"ph1\">&lt;xref href=\"System.Data.SqlTypes.SqlChars\"&gt;&lt;/xref&gt;</ph>.","source":"The value of the column expressed as a  <xref href=\"System.Data.SqlTypes.SqlChars\"></xref>."}],"pos":[92634,92726],"yaml":true},{"content":"Gets the value of the specified column as a <xref href=\"System.Data.SqlTypes.SqlDateTime\"></xref>.","nodes":[{"pos":[0,98],"content":"Gets the value of the specified column as a <ph id=\"ph1\">&lt;xref href=\"System.Data.SqlTypes.SqlDateTime\"&gt;&lt;/xref&gt;</ph>.","source":"Gets the value of the specified column as a <xref href=\"System.Data.SqlTypes.SqlDateTime\"></xref>."}],"pos":[94077,94176],"yaml":true},{"content":"No conversions are performed; therefore, the data retrieved must already be a date/time value, or an exception is generated.","nodes":[{"pos":[0,124],"content":"No conversions are performed; therefore, the data retrieved must already be a date/time value, or an exception is generated.","nodes":[{"content":"No conversions are performed; therefore, the data retrieved must already be a date/time value, or an exception is generated.","pos":[0,124]}]}],"pos":[94187,94312],"yaml":true,"extradata":"MT"},{"content":"The zero-based column ordinal.","nodes":[{"pos":[0,30],"content":"The zero-based column ordinal.","nodes":[{"content":"The zero-based column ordinal.","pos":[0,30]}]}],"pos":[94479,94510],"yaml":true},{"content":"The value of the column expressed as a  <xref href=\"System.Data.SqlTypes.SqlDateTime\"></xref>.","nodes":[{"pos":[0,94],"content":"The value of the column expressed as a  <ph id=\"ph1\">&lt;xref href=\"System.Data.SqlTypes.SqlDateTime\"&gt;&lt;/xref&gt;</ph>.","source":"The value of the column expressed as a  <xref href=\"System.Data.SqlTypes.SqlDateTime\"></xref>."}],"pos":[94586,94681],"yaml":true},{"content":"Gets the value of the specified column as a <xref href=\"System.Data.SqlTypes.SqlDecimal\"></xref>.","nodes":[{"pos":[0,97],"content":"Gets the value of the specified column as a <ph id=\"ph1\">&lt;xref href=\"System.Data.SqlTypes.SqlDecimal\"&gt;&lt;/xref&gt;</ph>.","source":"Gets the value of the specified column as a <xref href=\"System.Data.SqlTypes.SqlDecimal\"></xref>."}],"pos":[96029,96127],"yaml":true},{"content":"No conversions are performed; therefore, the data retrieved must already be a decimal value, or an exception is generated.","nodes":[{"pos":[0,122],"content":"No conversions are performed; therefore, the data retrieved must already be a decimal value, or an exception is generated.","nodes":[{"content":"No conversions are performed; therefore, the data retrieved must already be a decimal value, or an exception is generated.","pos":[0,122]}]}],"pos":[96138,96261],"yaml":true,"extradata":"MT"},{"content":"The zero-based column ordinal.","nodes":[{"pos":[0,30],"content":"The zero-based column ordinal.","nodes":[{"content":"The zero-based column ordinal.","pos":[0,30]}]}],"pos":[96426,96457],"yaml":true},{"content":"The value of the column expressed as a <xref href=\"System.Data.SqlTypes.SqlDecimal\"></xref>.","nodes":[{"pos":[0,92],"content":"The value of the column expressed as a <ph id=\"ph1\">&lt;xref href=\"System.Data.SqlTypes.SqlDecimal\"&gt;&lt;/xref&gt;</ph>.","source":"The value of the column expressed as a <xref href=\"System.Data.SqlTypes.SqlDecimal\"></xref>."}],"pos":[96532,96625],"yaml":true},{"content":"Gets the value of the specified column as a <xref href=\"System.Data.SqlTypes.SqlDouble\"></xref>.","nodes":[{"pos":[0,96],"content":"Gets the value of the specified column as a <ph id=\"ph1\">&lt;xref href=\"System.Data.SqlTypes.SqlDouble\"&gt;&lt;/xref&gt;</ph>.","source":"Gets the value of the specified column as a <xref href=\"System.Data.SqlTypes.SqlDouble\"></xref>."}],"pos":[97966,98063],"yaml":true},{"content":"No conversions are performed; therefore, the data retrieved must already be a double-precision floating-point number, or an exception is generated.","nodes":[{"pos":[0,147],"content":"No conversions are performed; therefore, the data retrieved must already be a double-precision floating-point number, or an exception is generated.","nodes":[{"content":"No conversions are performed; therefore, the data retrieved must already be a double-precision floating-point number, or an exception is generated.","pos":[0,147]}]}],"pos":[98074,98222],"yaml":true,"extradata":"MT"},{"content":"The zero-based column ordinal.","nodes":[{"pos":[0,30],"content":"The zero-based column ordinal.","nodes":[{"content":"The zero-based column ordinal.","pos":[0,30]}]}],"pos":[98385,98416],"yaml":true},{"content":"The value of the column expressed as a  <xref href=\"System.Data.SqlTypes.SqlDouble\"></xref>.","nodes":[{"pos":[0,92],"content":"The value of the column expressed as a  <ph id=\"ph1\">&lt;xref href=\"System.Data.SqlTypes.SqlDouble\"&gt;&lt;/xref&gt;</ph>.","source":"The value of the column expressed as a  <xref href=\"System.Data.SqlTypes.SqlDouble\"></xref>."}],"pos":[98490,98583],"yaml":true},{"content":"Gets the value of the specified column as a <xref href=\"System.Data.SqlTypes.SqlGuid\"></xref>.","nodes":[{"pos":[0,94],"content":"Gets the value of the specified column as a <ph id=\"ph1\">&lt;xref href=\"System.Data.SqlTypes.SqlGuid\"&gt;&lt;/xref&gt;</ph>.","source":"Gets the value of the specified column as a <xref href=\"System.Data.SqlTypes.SqlGuid\"></xref>."}],"pos":[99911,100006],"yaml":true},{"content":"No conversions are performed; therefore, the data retrieved must already be a GUID, or an exception is generated.","nodes":[{"pos":[0,113],"content":"No conversions are performed; therefore, the data retrieved must already be a GUID, or an exception is generated.","nodes":[{"content":"No conversions are performed; therefore, the data retrieved must already be a GUID, or an exception is generated.","pos":[0,113]}]}],"pos":[100017,100131],"yaml":true,"extradata":"MT"},{"content":"The zero-based column ordinal.","nodes":[{"pos":[0,30],"content":"The zero-based column ordinal.","nodes":[{"content":"The zero-based column ordinal.","pos":[0,30]}]}],"pos":[100290,100321],"yaml":true},{"content":"The value of the column expressed as a  <xref href=\"System.Data.SqlTypes.SqlGuid\"></xref>.","nodes":[{"pos":[0,90],"content":"The value of the column expressed as a  <ph id=\"ph1\">&lt;xref href=\"System.Data.SqlTypes.SqlGuid\"&gt;&lt;/xref&gt;</ph>.","source":"The value of the column expressed as a  <xref href=\"System.Data.SqlTypes.SqlGuid\"></xref>."}],"pos":[100393,100484],"yaml":true},{"content":"Gets the value of the specified column as a <xref href=\"System.Data.SqlTypes.SqlInt16\"></xref>.","nodes":[{"pos":[0,95],"content":"Gets the value of the specified column as a <ph id=\"ph1\">&lt;xref href=\"System.Data.SqlTypes.SqlInt16\"&gt;&lt;/xref&gt;</ph>.","source":"Gets the value of the specified column as a <xref href=\"System.Data.SqlTypes.SqlInt16\"></xref>."}],"pos":[101816,101912],"yaml":true},{"content":"No conversions are performed; therefore, the data retrieved must already be a 16-bit signed integer, or an exception is generated.","nodes":[{"pos":[0,130],"content":"No conversions are performed; therefore, the data retrieved must already be a 16-bit signed integer, or an exception is generated.","nodes":[{"content":"No conversions are performed; therefore, the data retrieved must already be a 16-bit signed integer, or an exception is generated.","pos":[0,130]}]}],"pos":[101923,102054],"yaml":true,"extradata":"MT"},{"content":"The zero-based column ordinal.","nodes":[{"pos":[0,30],"content":"The zero-based column ordinal.","nodes":[{"content":"The zero-based column ordinal.","pos":[0,30]}]}],"pos":[102215,102246],"yaml":true},{"content":"The value of the column expressed as a <xref href=\"System.Data.SqlTypes.SqlInt16\"></xref>.","nodes":[{"pos":[0,90],"content":"The value of the column expressed as a <ph id=\"ph1\">&lt;xref href=\"System.Data.SqlTypes.SqlInt16\"&gt;&lt;/xref&gt;</ph>.","source":"The value of the column expressed as a <xref href=\"System.Data.SqlTypes.SqlInt16\"></xref>."}],"pos":[102319,102410],"yaml":true},{"content":"Gets the value of the specified column as a <xref href=\"System.Data.SqlTypes.SqlInt32\"></xref>.","nodes":[{"pos":[0,95],"content":"Gets the value of the specified column as a <ph id=\"ph1\">&lt;xref href=\"System.Data.SqlTypes.SqlInt32\"&gt;&lt;/xref&gt;</ph>.","source":"Gets the value of the specified column as a <xref href=\"System.Data.SqlTypes.SqlInt32\"></xref>."}],"pos":[103743,103839],"yaml":true},{"content":"No conversions are performed; therefore the data retrieved must already be a 32-bit signed integer, or an exception is generated.","nodes":[{"pos":[0,129],"content":"No conversions are performed; therefore the data retrieved must already be a 32-bit signed integer, or an exception is generated.","nodes":[{"content":"No conversions are performed; therefore the data retrieved must already be a 32-bit signed integer, or an exception is generated.","pos":[0,129]}]}],"pos":[103850,103980],"yaml":true,"extradata":"MT"},{"content":"The zero-based column ordinal.","nodes":[{"pos":[0,30],"content":"The zero-based column ordinal.","nodes":[{"content":"The zero-based column ordinal.","pos":[0,30]}]}],"pos":[104141,104172],"yaml":true},{"content":"The value of the column expressed as a <xref href=\"System.Data.SqlTypes.SqlInt32\"></xref>.","nodes":[{"pos":[0,90],"content":"The value of the column expressed as a <ph id=\"ph1\">&lt;xref href=\"System.Data.SqlTypes.SqlInt32\"&gt;&lt;/xref&gt;</ph>.","source":"The value of the column expressed as a <xref href=\"System.Data.SqlTypes.SqlInt32\"></xref>."}],"pos":[104245,104336],"yaml":true},{"content":"Gets the value of the specified column as a <xref href=\"System.Data.SqlTypes.SqlInt64\"></xref>.","nodes":[{"pos":[0,95],"content":"Gets the value of the specified column as a <ph id=\"ph1\">&lt;xref href=\"System.Data.SqlTypes.SqlInt64\"&gt;&lt;/xref&gt;</ph>.","source":"Gets the value of the specified column as a <xref href=\"System.Data.SqlTypes.SqlInt64\"></xref>."}],"pos":[105669,105765],"yaml":true},{"content":"No conversions are performed; therefore, the data retrieved must already be a 64-bit signed integer, or an exception is generated.","nodes":[{"pos":[0,130],"content":"No conversions are performed; therefore, the data retrieved must already be a 64-bit signed integer, or an exception is generated.","nodes":[{"content":"No conversions are performed; therefore, the data retrieved must already be a 64-bit signed integer, or an exception is generated.","pos":[0,130]}]}],"pos":[105776,105907],"yaml":true,"extradata":"MT"},{"content":"The zero-based column ordinal.","nodes":[{"pos":[0,30],"content":"The zero-based column ordinal.","nodes":[{"content":"The zero-based column ordinal.","pos":[0,30]}]}],"pos":[106068,106099],"yaml":true},{"content":"The value of the column expressed as a <xref href=\"System.Data.SqlTypes.SqlInt64\"></xref>.","nodes":[{"pos":[0,90],"content":"The value of the column expressed as a <ph id=\"ph1\">&lt;xref href=\"System.Data.SqlTypes.SqlInt64\"&gt;&lt;/xref&gt;</ph>.","source":"The value of the column expressed as a <xref href=\"System.Data.SqlTypes.SqlInt64\"></xref>."}],"pos":[106172,106263],"yaml":true},{"content":"Gets the value of the specified column as a <xref href=\"System.Data.SqlTypes.SqlMoney\"></xref>.","nodes":[{"pos":[0,95],"content":"Gets the value of the specified column as a <ph id=\"ph1\">&lt;xref href=\"System.Data.SqlTypes.SqlMoney\"&gt;&lt;/xref&gt;</ph>.","source":"Gets the value of the specified column as a <xref href=\"System.Data.SqlTypes.SqlMoney\"></xref>."}],"pos":[107596,107692],"yaml":true},{"content":"No conversions are performed; therefore, the data retrieved must already be a decimal value, or an exception is generated.","nodes":[{"pos":[0,122],"content":"No conversions are performed; therefore, the data retrieved must already be a decimal value, or an exception is generated.","nodes":[{"content":"No conversions are performed; therefore, the data retrieved must already be a decimal value, or an exception is generated.","pos":[0,122]}]}],"pos":[107703,107826],"yaml":true,"extradata":"MT"},{"content":"The zero-based column ordinal.","nodes":[{"pos":[0,30],"content":"The zero-based column ordinal.","nodes":[{"content":"The zero-based column ordinal.","pos":[0,30]}]}],"pos":[107987,108018],"yaml":true},{"content":"The value of the column expressed as a <xref href=\"System.Data.SqlTypes.SqlMoney\"></xref>.","nodes":[{"pos":[0,90],"content":"The value of the column expressed as a <ph id=\"ph1\">&lt;xref href=\"System.Data.SqlTypes.SqlMoney\"&gt;&lt;/xref&gt;</ph>.","source":"The value of the column expressed as a <xref href=\"System.Data.SqlTypes.SqlMoney\"></xref>."}],"pos":[108091,108182],"yaml":true},{"content":"Gets the value of the specified column as a <xref href=\"System.Data.SqlTypes.SqlSingle\"></xref>.","nodes":[{"pos":[0,96],"content":"Gets the value of the specified column as a <ph id=\"ph1\">&lt;xref href=\"System.Data.SqlTypes.SqlSingle\"&gt;&lt;/xref&gt;</ph>.","source":"Gets the value of the specified column as a <xref href=\"System.Data.SqlTypes.SqlSingle\"></xref>."}],"pos":[109521,109618],"yaml":true},{"content":"No conversions are performed; therefore, the data retrieved must already be a single precision floating point number, or an exception is generated.","nodes":[{"pos":[0,147],"content":"No conversions are performed; therefore, the data retrieved must already be a single precision floating point number, or an exception is generated.","nodes":[{"content":"No conversions are performed; therefore, the data retrieved must already be a single precision floating point number, or an exception is generated.","pos":[0,147]}]}],"pos":[109629,109777],"yaml":true,"extradata":"MT"},{"content":"The zero-based column ordinal.","nodes":[{"pos":[0,30],"content":"The zero-based column ordinal.","nodes":[{"content":"The zero-based column ordinal.","pos":[0,30]}]}],"pos":[109940,109971],"yaml":true},{"content":"The value of the column expressed as a <xref href=\"System.Data.SqlTypes.SqlSingle\"></xref>.","nodes":[{"pos":[0,91],"content":"The value of the column expressed as a <ph id=\"ph1\">&lt;xref href=\"System.Data.SqlTypes.SqlSingle\"&gt;&lt;/xref&gt;</ph>.","source":"The value of the column expressed as a <xref href=\"System.Data.SqlTypes.SqlSingle\"></xref>."}],"pos":[110045,110137],"yaml":true},{"content":"Gets the value of the specified column as a <xref href=\"System.Data.SqlTypes.SqlString\"></xref>.","nodes":[{"pos":[0,96],"content":"Gets the value of the specified column as a <ph id=\"ph1\">&lt;xref href=\"System.Data.SqlTypes.SqlString\"&gt;&lt;/xref&gt;</ph>.","source":"Gets the value of the specified column as a <xref href=\"System.Data.SqlTypes.SqlString\"></xref>."}],"pos":[111477,111574],"yaml":true},{"content":"No conversions are performed; therefore, the data retrieved must already be a string, or an exception is generated.","nodes":[{"pos":[0,115],"content":"No conversions are performed; therefore, the data retrieved must already be a string, or an exception is generated.","nodes":[{"content":"No conversions are performed; therefore, the data retrieved must already be a string, or an exception is generated.","pos":[0,115]}]}],"pos":[111585,111701],"yaml":true,"extradata":"MT"},{"content":"The zero-based column ordinal.","nodes":[{"pos":[0,30],"content":"The zero-based column ordinal.","nodes":[{"content":"The zero-based column ordinal.","pos":[0,30]}]}],"pos":[111864,111895],"yaml":true},{"content":"The value of the column expressed as a <xref href=\"System.Data.SqlTypes.SqlString\"></xref>.","nodes":[{"pos":[0,91],"content":"The value of the column expressed as a <ph id=\"ph1\">&lt;xref href=\"System.Data.SqlTypes.SqlString\"&gt;&lt;/xref&gt;</ph>.","source":"The value of the column expressed as a <xref href=\"System.Data.SqlTypes.SqlString\"></xref>."}],"pos":[111969,112061],"yaml":true},{"content":"Returns the data value in the specified column as a SQL Server type.","nodes":[{"pos":[0,68],"content":"Returns the data value in the specified column as a SQL Server type.","nodes":[{"content":"Returns the data value in the specified column as a SQL Server type.","pos":[0,68]}]}],"pos":[113395,113464],"yaml":true},{"content":"<xref:System.Data.SqlClient.SqlDataReader.GetSqlValue%2A> returns data using the native SQL Server types. To retrieve data using the .NET Framework types, see <xref:System.Data.SqlClient.SqlDataReader.GetValue%2A>.","nodes":[{"pos":[0,214],"content":"<xref:System.Data.SqlClient.SqlDataReader.GetSqlValue%2A> returns data using the native SQL Server types. To retrieve data using the .NET Framework types, see <xref:System.Data.SqlClient.SqlDataReader.GetValue%2A>.","nodes":[{"content":"<xref:System.Data.SqlClient.SqlDataReader.GetSqlValue%2A> returns data using the native SQL Server types. To retrieve data using the .NET Framework types, see <xref:System.Data.SqlClient.SqlDataReader.GetValue%2A>.","pos":[0,214],"nodes":[{"content":"<ph id=\"ph1\">&lt;xref:System.Data.SqlClient.SqlDataReader.GetSqlValue%2A&gt;</ph> returns data using the native SQL Server types.","pos":[0,105],"source":"<xref:System.Data.SqlClient.SqlDataReader.GetSqlValue%2A> returns data using the native SQL Server types."},{"content":"To retrieve data using the .NET Framework types, see <ph id=\"ph1\">&lt;xref:System.Data.SqlClient.SqlDataReader.GetValue%2A&gt;</ph>.","pos":[106,214],"source":" To retrieve data using the .NET Framework types, see <xref:System.Data.SqlClient.SqlDataReader.GetValue%2A>."}]}]}],"pos":[113475,113690],"yaml":true,"extradata":"MT"},{"content":"The zero-based column ordinal.","nodes":[{"pos":[0,30],"content":"The zero-based column ordinal.","nodes":[{"content":"The zero-based column ordinal.","pos":[0,30]}]}],"pos":[113828,113859],"yaml":true},{"content":"The value of the column expressed as a <xref href=\"System.Data.SqlDbType\"></xref>.","nodes":[{"pos":[0,82],"content":"The value of the column expressed as a <ph id=\"ph1\">&lt;xref href=\"System.Data.SqlDbType\"&gt;&lt;/xref&gt;</ph>.","source":"The value of the column expressed as a <xref href=\"System.Data.SqlDbType\"></xref>."}],"pos":[113916,113999],"yaml":true},{"content":"Fills an array of <xref href=\"System.Object\"></xref> that contains the values for all the columns in the record, expressed as SQL Server types.","nodes":[{"pos":[0,143],"content":"Fills an array of <ph id=\"ph1\">&lt;xref href=\"System.Object\"&gt;&lt;/xref&gt;</ph> that contains the values for all the columns in the record, expressed as SQL Server types.","source":"Fills an array of <xref href=\"System.Object\"></xref> that contains the values for all the columns in the record, expressed as SQL Server types."}],"pos":[115356,115500],"yaml":true},{"content":"Returns the values for all the columns in the record in a single call, using the SQL type system instead of the CLR type system. The length of the <xref:System.Object> array does not need to match the number of columns in the record. You can pass an <xref:System.Object> array that contains fewer than the number of columns contained in the record. Only the amount of data the <xref:System.Object> array holds is copied to the array, starting at the column with ordinal 0. You can also pass an <xref:System.Object> array whose length is more than the number of columns contained in the resulting row. Any remaining columns are untouched.","nodes":[{"pos":[0,637],"content":"Returns the values for all the columns in the record in a single call, using the SQL type system instead of the CLR type system. The length of the <xref:System.Object> array does not need to match the number of columns in the record. You can pass an <xref:System.Object> array that contains fewer than the number of columns contained in the record. Only the amount of data the <xref:System.Object> array holds is copied to the array, starting at the column with ordinal 0. You can also pass an <xref:System.Object> array whose length is more than the number of columns contained in the resulting row. Any remaining columns are untouched.","nodes":[{"content":"Returns the values for all the columns in the record in a single call, using the SQL type system instead of the CLR type system. The length of the <xref:System.Object> array does not need to match the number of columns in the record. You can pass an <xref:System.Object> array that contains fewer than the number of columns contained in the record. Only the amount of data the <xref:System.Object> array holds is copied to the array, starting at the column with ordinal 0. You can also pass an <xref:System.Object> array whose length is more than the number of columns contained in the resulting row. Any remaining columns are untouched.","pos":[0,637],"nodes":[{"content":"Returns the values for all the columns in the record in a single call, using the SQL type system instead of the CLR type system.","pos":[0,128]},{"content":"The length of the <ph id=\"ph1\">&lt;xref:System.Object&gt;</ph> array does not need to match the number of columns in the record.","pos":[129,233],"source":" The length of the <xref:System.Object> array does not need to match the number of columns in the record."},{"content":"You can pass an <ph id=\"ph1\">&lt;xref:System.Object&gt;</ph> array that contains fewer than the number of columns contained in the record.","pos":[234,348],"source":" You can pass an <xref:System.Object> array that contains fewer than the number of columns contained in the record."},{"content":"Only the amount of data the <ph id=\"ph1\">&lt;xref:System.Object&gt;</ph> array holds is copied to the array, starting at the column with ordinal 0.","pos":[349,472],"source":" Only the amount of data the <xref:System.Object> array holds is copied to the array, starting at the column with ordinal 0."},{"content":"You can also pass an <ph id=\"ph1\">&lt;xref:System.Object&gt;</ph> array whose length is more than the number of columns contained in the resulting row.","pos":[473,600],"source":" You can also pass an <xref:System.Object> array whose length is more than the number of columns contained in the resulting row."},{"content":"Any remaining columns are untouched.","pos":[601,637]}]}]}],"pos":[115511,116149],"yaml":true,"extradata":"MT"},{"content":"An array of <xref href=\"System.Object\"></xref> into which to copy the values. The column values are expressed as SQL Server types.","nodes":[{"pos":[0,130],"content":"An array of <xref href=\"System.Object\"></xref> into which to copy the values. The column values are expressed as SQL Server types.","nodes":[{"content":"An array of <ph id=\"ph1\">&lt;xref href=\"System.Object\"&gt;&lt;/xref&gt;</ph> into which to copy the values.","pos":[0,77],"source":"An array of <xref href=\"System.Object\"></xref> into which to copy the values."},{"content":"The column values are expressed as SQL Server types.","pos":[78,130]}]}],"pos":[116303,116434],"yaml":true},{"content":"An integer indicating the number of columns copied.","nodes":[{"pos":[0,51],"content":"An integer indicating the number of columns copied.","nodes":[{"content":"An integer indicating the number of columns copied.","pos":[0,51]}]}],"pos":[116490,116542],"yaml":true},{"content":"<code>values</code> is null.","nodes":[{"pos":[0,28],"content":"<ph id=\"ph1\">&lt;code&gt;values&lt;/code&gt;</ph> is null.","source":"<code>values</code> is null."}],"pos":[116720,116749],"yaml":true},{"content":"Gets the value of the specified column as an XML value.","nodes":[{"pos":[0,55],"content":"Gets the value of the specified column as an XML value.","nodes":[{"content":"Gets the value of the specified column as an XML value.","pos":[0,55]}]}],"pos":[117992,118048],"yaml":true},{"content":"No conversions are performed; therefore, the data retrieved must already be an XML value.  \n  \n Call <xref:System.Data.SqlClient.SqlDataReader.IsDBNull%2A> to check for null values before calling this method.","nodes":[{"pos":[0,89],"content":"No conversions are performed; therefore, the data retrieved must already be an XML value.","nodes":[{"content":"No conversions are performed; therefore, the data retrieved must already be an XML value.","pos":[0,89]}]},{"pos":[96,208],"content":"Call <xref:System.Data.SqlClient.SqlDataReader.IsDBNull%2A> to check for null values before calling this method.","nodes":[{"content":"Call <ph id=\"ph1\">&lt;xref:System.Data.SqlClient.SqlDataReader.IsDBNull%2A&gt;</ph> to check for null values before calling this method.","pos":[0,112],"source":"Call <xref:System.Data.SqlClient.SqlDataReader.IsDBNull%2A> to check for null values before calling this method."}]}],"pos":[118059,118272],"yaml":true,"extradata":"MT"},{"content":"The zero-based column ordinal.","nodes":[{"pos":[0,30],"content":"The zero-based column ordinal.","nodes":[{"content":"The zero-based column ordinal.","pos":[0,30]}]}],"pos":[118429,118460],"yaml":true},{"content":"A <xref href=\"System.Data.SqlTypes.SqlXml\"></xref> value that contains the XML stored within the corresponding field.","nodes":[{"pos":[0,117],"content":"A <ph id=\"ph1\">&lt;xref href=\"System.Data.SqlTypes.SqlXml\"&gt;&lt;/xref&gt;</ph> value that contains the XML stored within the corresponding field.","source":"A <xref href=\"System.Data.SqlTypes.SqlXml\"></xref> value that contains the XML stored within the corresponding field."}],"pos":[118531,118649],"yaml":true},{"content":"The index passed was outside the range of 0 to <xref href=\"System.Data.DataTableReader.FieldCount\"></xref> - 1","nodes":[{"pos":[0,110],"content":"The index passed was outside the range of 0 to <ph id=\"ph1\">&lt;xref href=\"System.Data.DataTableReader.FieldCount\"&gt;&lt;/xref&gt;</ph> - 1","source":"The index passed was outside the range of 0 to <xref href=\"System.Data.DataTableReader.FieldCount\"></xref> - 1"}],"pos":[118836,118947],"yaml":true},{"content":"An attempt was made to read or access columns in a closed <xref href=\"System.Data.SqlClient.SqlDataReader\"></xref>.","nodes":[{"pos":[0,115],"content":"An attempt was made to read or access columns in a closed <ph id=\"ph1\">&lt;xref href=\"System.Data.SqlClient.SqlDataReader\"&gt;&lt;/xref&gt;</ph>.","source":"An attempt was made to read or access columns in a closed <xref href=\"System.Data.SqlClient.SqlDataReader\"></xref>."}],"pos":[119057,119173],"yaml":true},{"content":"The retrieved data is not compatible with the <xref href=\"System.Data.SqlTypes.SqlXml\"></xref> type.","nodes":[{"pos":[0,100],"content":"The retrieved data is not compatible with the <ph id=\"ph1\">&lt;xref href=\"System.Data.SqlTypes.SqlXml\"&gt;&lt;/xref&gt;</ph> type.","source":"The retrieved data is not compatible with the <xref href=\"System.Data.SqlTypes.SqlXml\"></xref> type."}],"pos":[119273,119374],"yaml":true},{"content":"Retrieves binary, image, varbinary, UDT, and variant data types as a <xref href=\"System.IO.Stream\"></xref>.","nodes":[{"pos":[0,107],"content":"Retrieves binary, image, varbinary, UDT, and variant data types as a <ph id=\"ph1\">&lt;xref href=\"System.IO.Stream\"&gt;&lt;/xref&gt;</ph>.","source":"Retrieves binary, image, varbinary, UDT, and variant data types as a <xref href=\"System.IO.Stream\"></xref>."}],"pos":[120617,120725],"yaml":true},{"content":"<xref:System.IO.Stream.ReadTimeout%2A> defaults to the value of <xref:System.Data.SqlClient.SqlCommand.CommandTimeout%2A>; but you can modify <xref:System.IO.Stream.ReadTimeout%2A> via <xref:System.Data.SqlClient.SqlDataReader.GetStream%2A>.  \n  \n Null values will be returned as an empty (zero bytes) <xref:System.IO.Stream>.  \n  \n <xref:System.Data.SqlClient.SqlDataReader.GetBytes%2A> will raise an <xref:System.InvalidOperationException> exception when used on an object returned by <xref:System.Data.SqlClient.SqlDataReader.GetStream%2A> when <xref:System.Data.CommandBehavior.SequentialAccess> is in effect.  \n  \n <xref:System.Data.SqlClient.SqlException> exceptions raised from <xref:System.IO.Stream> are thrown as <xref:System.IO.IOException> exceptions; check the inner exception for the <xref:System.Data.SqlClient.SqlException>.  \n  \n The following <xref:System.IO.Stream> members are not available for objects returned by <xref:System.Data.SqlClient.SqlDataReader.GetStream%2A>:  \n  \n-   BeginWrite  \n  \n-   EndWrite  \n  \n-   Length  \n  \n-   Position  \n  \n-   Seek  \n  \n-   SetLength  \n  \n-   Write  \n  \n-   WriteByte  \n  \n-   WriteTimeout  \n  \n When the connection property `ContextConnection=true`, <xref:System.Data.SqlClient.SqlDataReader.GetStream%2A> only supports synchronous data retrieval for both sequential (<xref:System.Data.CommandBehavior.SequentialAccess>) and non-sequential (<xref:System.Data.CommandBehavior.Default>) access.  \n  \n For more information, see [SqlClient Streaming Support](~/docs/framework/data/adonet/sqlclient-streaming-support.md).","nodes":[{"pos":[0,241],"content":"<xref:System.IO.Stream.ReadTimeout%2A> defaults to the value of <xref:System.Data.SqlClient.SqlCommand.CommandTimeout%2A>; but you can modify <xref:System.IO.Stream.ReadTimeout%2A> via <xref:System.Data.SqlClient.SqlDataReader.GetStream%2A>.","nodes":[{"content":"<ph id=\"ph1\">&lt;xref:System.IO.Stream.ReadTimeout%2A&gt;</ph> defaults to the value of <ph id=\"ph2\">&lt;xref:System.Data.SqlClient.SqlCommand.CommandTimeout%2A&gt;</ph>; but you can modify <ph id=\"ph3\">&lt;xref:System.IO.Stream.ReadTimeout%2A&gt;</ph> via <ph id=\"ph4\">&lt;xref:System.Data.SqlClient.SqlDataReader.GetStream%2A&gt;</ph>.","pos":[0,241],"source":"<xref:System.IO.Stream.ReadTimeout%2A> defaults to the value of <xref:System.Data.SqlClient.SqlCommand.CommandTimeout%2A>; but you can modify <xref:System.IO.Stream.ReadTimeout%2A> via <xref:System.Data.SqlClient.SqlDataReader.GetStream%2A>."}]},{"pos":[248,326],"content":"Null values will be returned as an empty (zero bytes) <xref:System.IO.Stream>.","nodes":[{"content":"Null values will be returned as an empty (zero bytes) <ph id=\"ph1\">&lt;xref:System.IO.Stream&gt;</ph>.","pos":[0,78],"source":"Null values will be returned as an empty (zero bytes) <xref:System.IO.Stream>."}]},{"pos":[333,613],"content":"<xref:System.Data.SqlClient.SqlDataReader.GetBytes%2A> will raise an <xref:System.InvalidOperationException> exception when used on an object returned by <xref:System.Data.SqlClient.SqlDataReader.GetStream%2A> when <xref:System.Data.CommandBehavior.SequentialAccess> is in effect.","nodes":[{"content":"<ph id=\"ph1\">&lt;xref:System.Data.SqlClient.SqlDataReader.GetBytes%2A&gt;</ph> will raise an <ph id=\"ph2\">&lt;xref:System.InvalidOperationException&gt;</ph> exception when used on an object returned by <ph id=\"ph3\">&lt;xref:System.Data.SqlClient.SqlDataReader.GetStream%2A&gt;</ph> when <ph id=\"ph4\">&lt;xref:System.Data.CommandBehavior.SequentialAccess&gt;</ph> is in effect.","pos":[0,280],"source":"<xref:System.Data.SqlClient.SqlDataReader.GetBytes%2A> will raise an <xref:System.InvalidOperationException> exception when used on an object returned by <xref:System.Data.SqlClient.SqlDataReader.GetStream%2A> when <xref:System.Data.CommandBehavior.SequentialAccess> is in effect."}]},{"pos":[620,840],"content":"<xref:System.Data.SqlClient.SqlException> exceptions raised from <xref:System.IO.Stream> are thrown as <xref:System.IO.IOException> exceptions; check the inner exception for the <xref:System.Data.SqlClient.SqlException>.","nodes":[{"content":"<ph id=\"ph1\">&lt;xref:System.Data.SqlClient.SqlException&gt;</ph> exceptions raised from <ph id=\"ph2\">&lt;xref:System.IO.Stream&gt;</ph> are thrown as <ph id=\"ph3\">&lt;xref:System.IO.IOException&gt;</ph> exceptions; check the inner exception for the <ph id=\"ph4\">&lt;xref:System.Data.SqlClient.SqlException&gt;</ph>.","pos":[0,220],"source":"<xref:System.Data.SqlClient.SqlException> exceptions raised from <xref:System.IO.Stream> are thrown as <xref:System.IO.IOException> exceptions; check the inner exception for the <xref:System.Data.SqlClient.SqlException>."}]},{"pos":[847,991],"content":"The following <xref:System.IO.Stream> members are not available for objects returned by <xref:System.Data.SqlClient.SqlDataReader.GetStream%2A>:","nodes":[{"content":"The following <ph id=\"ph1\">&lt;xref:System.IO.Stream&gt;</ph> members are not available for objects returned by <ph id=\"ph2\">&lt;xref:System.Data.SqlClient.SqlDataReader.GetStream%2A&gt;</ph>:","pos":[0,144],"source":"The following <xref:System.IO.Stream> members are not available for objects returned by <xref:System.Data.SqlClient.SqlDataReader.GetStream%2A>:"}]},{"pos":[1001,1011],"content":"BeginWrite","nodes":[{"content":"BeginWrite","pos":[0,10]}]},{"pos":[1021,1029],"content":"EndWrite","nodes":[{"content":"EndWrite","pos":[0,8]}]},{"pos":[1039,1045],"content":"Length","nodes":[{"content":"Length","pos":[0,6]}]},{"pos":[1055,1063],"content":"Position","nodes":[{"content":"Position","pos":[0,8]}]},{"pos":[1073,1077],"content":"Seek","nodes":[{"content":"Seek","pos":[0,4]}]},{"pos":[1087,1096],"content":"SetLength","nodes":[{"content":"SetLength","pos":[0,9]}]},{"pos":[1106,1111],"content":"Write","nodes":[{"content":"Write","pos":[0,5]}]},{"pos":[1121,1130],"content":"WriteByte","nodes":[{"content":"WriteByte","pos":[0,9]}]},{"pos":[1140,1152],"content":"WriteTimeout","nodes":[{"content":"WriteTimeout","pos":[0,12]}]},{"pos":[1159,1456],"content":"When the connection property <ph id=\"ph1\">`ContextConnection=true`</ph>, <ph id=\"ph2\">&lt;xref:System.Data.SqlClient.SqlDataReader.GetStream%2A&gt;</ph> only supports synchronous data retrieval for both sequential (<ph id=\"ph3\">&lt;xref:System.Data.CommandBehavior.SequentialAccess&gt;</ph>) and non-sequential (<ph id=\"ph4\">&lt;xref:System.Data.CommandBehavior.Default&gt;</ph>) access.","source":"When the connection property `ContextConnection=true`, <xref:System.Data.SqlClient.SqlDataReader.GetStream%2A> only supports synchronous data retrieval for both sequential (<xref:System.Data.CommandBehavior.SequentialAccess>) and non-sequential (<xref:System.Data.CommandBehavior.Default>) access."},{"pos":[1463,1580],"content":"For more information, see <bpt id=\"p1\">[</bpt>SqlClient Streaming Support<ept id=\"p1\">](~/docs/framework/data/adonet/sqlclient-streaming-support.md)</ept>.","source":"For more information, see [SqlClient Streaming Support](~/docs/framework/data/adonet/sqlclient-streaming-support.md)."}],"pos":[120736,122349],"yaml":true,"extradata":"MT"},{"content":"The zero-based column ordinal.","nodes":[{"pos":[0,30],"content":"The zero-based column ordinal.","nodes":[{"content":"The zero-based column ordinal.","pos":[0,30]}]}],"pos":[122496,122527],"yaml":true},{"content":"A stream object.","nodes":[{"pos":[0,16],"content":"A stream object.","nodes":[{"content":"A stream object.","pos":[0,16]}]}],"pos":[122587,122604],"yaml":true},{"content":"The connection drops or is closed during the data retrieval.  \n  \n The <xref href=\"System.Data.SqlClient.SqlDataReader\"></xref> is closed during the data retrieval.  \n  \n There is no data ready to be read (for example, the first <xref href=\"System.Data.SqlClient.SqlDataReader.Read\"></xref> hasn't been called, or returned false).  \n  \n Tried to read a previously-read column in sequential mode.  \n  \n There was an asynchronous operation in progress. This applies to all Get* methods when running in sequential mode, as they could be called while reading a stream.","nodes":[{"pos":[0,60],"content":"The connection drops or is closed during the data retrieval.","nodes":[{"content":"The connection drops or is closed during the data retrieval.","pos":[0,60]}]},{"pos":[67,164],"content":"The <ph id=\"ph1\">&lt;xref href=\"System.Data.SqlClient.SqlDataReader\"&gt;&lt;/xref&gt;</ph> is closed during the data retrieval.","source":"The <xref href=\"System.Data.SqlClient.SqlDataReader\"></xref> is closed during the data retrieval."},{"pos":[171,330],"content":"There is no data ready to be read (for example, the first <ph id=\"ph1\">&lt;xref href=\"System.Data.SqlClient.SqlDataReader.Read\"&gt;&lt;/xref&gt;</ph> hasn't been called, or returned false).","source":"There is no data ready to be read (for example, the first <xref href=\"System.Data.SqlClient.SqlDataReader.Read\"></xref> hasn't been called, or returned false)."},{"pos":[337,395],"content":"Tried to read a previously-read column in sequential mode.","nodes":[{"content":"Tried to read a previously-read column in sequential mode.","pos":[0,58]}]},{"pos":[402,564],"content":"There was an asynchronous operation in progress. This applies to all Get* methods when running in sequential mode, as they could be called while reading a stream.","nodes":[{"content":"There was an asynchronous operation in progress. This applies to all Get* methods when running in sequential mode, as they could be called while reading a stream.","pos":[0,162],"nodes":[{"content":"There was an asynchronous operation in progress.","pos":[0,48]},{"content":"This applies to all Get* methods when running in sequential mode, as they could be called while reading a stream.","pos":[49,162]}]}]}],"pos":[122787,123366],"yaml":true},{"content":"Trying to read a column that does not exist.","nodes":[{"pos":[0,44],"content":"Trying to read a column that does not exist.","nodes":[{"content":"Trying to read a column that does not exist.","pos":[0,44]}]}],"pos":[123474,123519],"yaml":true},{"content":"The returned type was not one of the types below:  \n  \n-   binary  \n  \n-   image  \n  \n-   varbinary  \n  \n-   udt","nodes":[{"pos":[0,49],"content":"The returned type was not one of the types below:","nodes":[{"content":"The returned type was not one of the types below:","pos":[0,49]}]},{"pos":[59,65],"content":"binary","nodes":[{"content":"binary","pos":[0,6]}]},{"pos":[75,80],"content":"image","nodes":[{"content":"image","pos":[0,5]}]},{"pos":[90,99],"content":"varbinary","nodes":[{"content":"varbinary","pos":[0,9]}]},{"pos":[109,112],"content":"udt","nodes":[{"content":"udt","pos":[0,3]}]}],"pos":[123619,123742],"yaml":true},{"content":"Gets the value of the specified column as a string.","nodes":[{"pos":[0,51],"content":"Gets the value of the specified column as a string.","nodes":[{"content":"Gets the value of the specified column as a string.","pos":[0,51]}]}],"pos":[124985,125037],"yaml":true},{"content":"No conversions are performed; therefore, the data retrieved must already be a string.  \n  \n Call <xref:System.Data.SqlClient.SqlDataReader.IsDBNull%2A> to check for null values before calling this method.","nodes":[{"pos":[0,85],"content":"No conversions are performed; therefore, the data retrieved must already be a string.","nodes":[{"content":"No conversions are performed; therefore, the data retrieved must already be a string.","pos":[0,85]}]},{"pos":[92,204],"content":"Call <xref:System.Data.SqlClient.SqlDataReader.IsDBNull%2A> to check for null values before calling this method.","nodes":[{"content":"Call <ph id=\"ph1\">&lt;xref:System.Data.SqlClient.SqlDataReader.IsDBNull%2A&gt;</ph> to check for null values before calling this method.","pos":[0,112],"source":"Call <xref:System.Data.SqlClient.SqlDataReader.IsDBNull%2A> to check for null values before calling this method."}]}],"pos":[125048,125257],"yaml":true,"extradata":"MT"},{"content":"The zero-based column ordinal.","nodes":[{"pos":[0,30],"content":"The zero-based column ordinal.","nodes":[{"content":"The zero-based column ordinal.","pos":[0,30]}]}],"pos":[125394,125425],"yaml":true},{"content":"The value of the specified column.","nodes":[{"pos":[0,34],"content":"The value of the specified column.","nodes":[{"content":"The value of the specified column.","pos":[0,34]}]}],"pos":[125482,125517],"yaml":true},{"content":"The specified cast is not valid.","nodes":[{"pos":[0,32],"content":"The specified cast is not valid.","nodes":[{"content":"The specified cast is not valid.","pos":[0,32]}]}],"pos":[125690,125723],"yaml":true},{"content":"Retrieves Char, NChar, NText, NVarChar, text, varChar, and Variant data types as a <xref href=\"System.IO.TextReader\"></xref>.","nodes":[{"pos":[0,125],"content":"Retrieves Char, NChar, NText, NVarChar, text, varChar, and Variant data types as a <ph id=\"ph1\">&lt;xref href=\"System.IO.TextReader\"&gt;&lt;/xref&gt;</ph>.","source":"Retrieves Char, NChar, NText, NVarChar, text, varChar, and Variant data types as a <xref href=\"System.IO.TextReader\"></xref>."}],"pos":[126990,127116],"yaml":true},{"content":"<xref:System.Data.SqlClient.SqlException> exceptions raised from <xref:System.IO.TextReader> are thrown as <xref:System.IO.IOException> exceptions; check the inner exception for the <xref:System.Data.SqlClient.SqlException>.  \n  \n Null values will be returned as an empty (zero bytes) <xref:System.IO.TextReader>.  \n  \n <xref:System.Data.SqlClient.SqlDataReader.GetChars%2A> will raise an <xref:System.InvalidOperationException> exception when used on an object returned by <xref:System.Data.SqlClient.SqlDataReader.GetTextReader%2A> when <xref:System.Data.CommandBehavior.SequentialAccess> is in effect.  \n  \n When the connection property `ContextConnection=true`, <xref:System.Data.SqlClient.SqlDataReader.GetTextReader%2A> only supports synchronous data retrieval for both sequential (<xref:System.Data.CommandBehavior.SequentialAccess>) and non-sequential (<xref:System.Data.CommandBehavior.Default>) access.  \n  \n For more information, see [SqlClient Streaming Support](~/docs/framework/data/adonet/sqlclient-streaming-support.md).","nodes":[{"pos":[0,224],"content":"<xref:System.Data.SqlClient.SqlException> exceptions raised from <xref:System.IO.TextReader> are thrown as <xref:System.IO.IOException> exceptions; check the inner exception for the <xref:System.Data.SqlClient.SqlException>.","nodes":[{"content":"<ph id=\"ph1\">&lt;xref:System.Data.SqlClient.SqlException&gt;</ph> exceptions raised from <ph id=\"ph2\">&lt;xref:System.IO.TextReader&gt;</ph> are thrown as <ph id=\"ph3\">&lt;xref:System.IO.IOException&gt;</ph> exceptions; check the inner exception for the <ph id=\"ph4\">&lt;xref:System.Data.SqlClient.SqlException&gt;</ph>.","pos":[0,224],"source":"<xref:System.Data.SqlClient.SqlException> exceptions raised from <xref:System.IO.TextReader> are thrown as <xref:System.IO.IOException> exceptions; check the inner exception for the <xref:System.Data.SqlClient.SqlException>."}]},{"pos":[231,313],"content":"Null values will be returned as an empty (zero bytes) <xref:System.IO.TextReader>.","nodes":[{"content":"Null values will be returned as an empty (zero bytes) <ph id=\"ph1\">&lt;xref:System.IO.TextReader&gt;</ph>.","pos":[0,82],"source":"Null values will be returned as an empty (zero bytes) <xref:System.IO.TextReader>."}]},{"pos":[320,604],"content":"<xref:System.Data.SqlClient.SqlDataReader.GetChars%2A> will raise an <xref:System.InvalidOperationException> exception when used on an object returned by <xref:System.Data.SqlClient.SqlDataReader.GetTextReader%2A> when <xref:System.Data.CommandBehavior.SequentialAccess> is in effect.","nodes":[{"content":"<ph id=\"ph1\">&lt;xref:System.Data.SqlClient.SqlDataReader.GetChars%2A&gt;</ph> will raise an <ph id=\"ph2\">&lt;xref:System.InvalidOperationException&gt;</ph> exception when used on an object returned by <ph id=\"ph3\">&lt;xref:System.Data.SqlClient.SqlDataReader.GetTextReader%2A&gt;</ph> when <ph id=\"ph4\">&lt;xref:System.Data.CommandBehavior.SequentialAccess&gt;</ph> is in effect.","pos":[0,284],"source":"<xref:System.Data.SqlClient.SqlDataReader.GetChars%2A> will raise an <xref:System.InvalidOperationException> exception when used on an object returned by <xref:System.Data.SqlClient.SqlDataReader.GetTextReader%2A> when <xref:System.Data.CommandBehavior.SequentialAccess> is in effect."}]},{"pos":[611,912],"content":"When the connection property <ph id=\"ph1\">`ContextConnection=true`</ph>, <ph id=\"ph2\">&lt;xref:System.Data.SqlClient.SqlDataReader.GetTextReader%2A&gt;</ph> only supports synchronous data retrieval for both sequential (<ph id=\"ph3\">&lt;xref:System.Data.CommandBehavior.SequentialAccess&gt;</ph>) and non-sequential (<ph id=\"ph4\">&lt;xref:System.Data.CommandBehavior.Default&gt;</ph>) access.","source":"When the connection property `ContextConnection=true`, <xref:System.Data.SqlClient.SqlDataReader.GetTextReader%2A> only supports synchronous data retrieval for both sequential (<xref:System.Data.CommandBehavior.SequentialAccess>) and non-sequential (<xref:System.Data.CommandBehavior.Default>) access."},{"pos":[919,1036],"content":"For more information, see <bpt id=\"p1\">[</bpt>SqlClient Streaming Support<ept id=\"p1\">](~/docs/framework/data/adonet/sqlclient-streaming-support.md)</ept>.","source":"For more information, see [SqlClient Streaming Support](~/docs/framework/data/adonet/sqlclient-streaming-support.md)."}],"pos":[127127,128174],"yaml":true,"extradata":"MT"},{"content":"The column to be retrieved.","nodes":[{"pos":[0,27],"content":"The column to be retrieved.","nodes":[{"content":"The column to be retrieved.","pos":[0,27]}]}],"pos":[128329,128357],"yaml":true},{"content":"The returned object.","nodes":[{"pos":[0,20],"content":"The returned object.","nodes":[{"content":"The returned object.","pos":[0,20]}]}],"pos":[128421,128442],"yaml":true},{"content":"The connection drops or is closed during the data retrieval.  \n  \n The <xref href=\"System.Data.SqlClient.SqlDataReader\"></xref> is closed during the data retrieval.  \n  \n There is no data ready to be read (for example, the first <xref href=\"System.Data.SqlClient.SqlDataReader.Read\"></xref> hasn't been called, or returned false).  \n  \n Tried to read a previously-read column in sequential mode.  \n  \n There was an asynchronous operation in progress. This applies to all Get* methods when running in sequential mode, as they could be called while reading a stream.","nodes":[{"pos":[0,60],"content":"The connection drops or is closed during the data retrieval.","nodes":[{"content":"The connection drops or is closed during the data retrieval.","pos":[0,60]}]},{"pos":[67,164],"content":"The <ph id=\"ph1\">&lt;xref href=\"System.Data.SqlClient.SqlDataReader\"&gt;&lt;/xref&gt;</ph> is closed during the data retrieval.","source":"The <xref href=\"System.Data.SqlClient.SqlDataReader\"></xref> is closed during the data retrieval."},{"pos":[171,330],"content":"There is no data ready to be read (for example, the first <ph id=\"ph1\">&lt;xref href=\"System.Data.SqlClient.SqlDataReader.Read\"&gt;&lt;/xref&gt;</ph> hasn't been called, or returned false).","source":"There is no data ready to be read (for example, the first <xref href=\"System.Data.SqlClient.SqlDataReader.Read\"></xref> hasn't been called, or returned false)."},{"pos":[337,395],"content":"Tried to read a previously-read column in sequential mode.","nodes":[{"content":"Tried to read a previously-read column in sequential mode.","pos":[0,58]}]},{"pos":[402,564],"content":"There was an asynchronous operation in progress. This applies to all Get* methods when running in sequential mode, as they could be called while reading a stream.","nodes":[{"content":"There was an asynchronous operation in progress. This applies to all Get* methods when running in sequential mode, as they could be called while reading a stream.","pos":[0,162],"nodes":[{"content":"There was an asynchronous operation in progress.","pos":[0,48]},{"content":"This applies to all Get* methods when running in sequential mode, as they could be called while reading a stream.","pos":[49,162]}]}]}],"pos":[128629,129208],"yaml":true},{"content":"Trying to read a column that does not exist.","nodes":[{"pos":[0,44],"content":"Trying to read a column that does not exist.","nodes":[{"content":"Trying to read a column that does not exist.","pos":[0,44]}]}],"pos":[129316,129361],"yaml":true},{"content":"The returned type was not one of the types below:  \n  \n-   char  \n  \n-   nchar  \n  \n-   ntext  \n  \n-   nvarchar  \n  \n-   text  \n  \n-   varchar","nodes":[{"pos":[0,49],"content":"The returned type was not one of the types below:","nodes":[{"content":"The returned type was not one of the types below:","pos":[0,49]}]},{"pos":[59,63],"content":"char","nodes":[{"content":"char","pos":[0,4]}]},{"pos":[73,78],"content":"nchar","nodes":[{"content":"nchar","pos":[0,5]}]},{"pos":[88,93],"content":"ntext","nodes":[{"content":"ntext","pos":[0,5]}]},{"pos":[103,111],"content":"nvarchar","nodes":[{"content":"nvarchar","pos":[0,8]}]},{"pos":[121,125],"content":"text","nodes":[{"content":"text","pos":[0,4]}]},{"pos":[135,142],"content":"varchar","nodes":[{"content":"varchar","pos":[0,7]}]}],"pos":[129461,129618],"yaml":true},{"content":"Retrieves the value of the specified column as a <xref href=\"System.TimeSpan\"></xref> object.","nodes":[{"pos":[0,93],"content":"Retrieves the value of the specified column as a <ph id=\"ph1\">&lt;xref href=\"System.TimeSpan\"&gt;&lt;/xref&gt;</ph> object.","source":"Retrieves the value of the specified column as a <xref href=\"System.TimeSpan\"></xref> object."}],"pos":[130873,130967],"yaml":true},{"content":"No conversions are performed; therefore, the data retrieved must already be a <xref:System.TimeSpan> object.  \n  \n Call <xref:System.Data.SqlClient.SqlDataReader.IsDBNull%2A> to check for null values before calling this method.","nodes":[{"pos":[0,108],"content":"No conversions are performed; therefore, the data retrieved must already be a <xref:System.TimeSpan> object.","nodes":[{"content":"No conversions are performed; therefore, the data retrieved must already be a <ph id=\"ph1\">&lt;xref:System.TimeSpan&gt;</ph> object.","pos":[0,108],"source":"No conversions are performed; therefore, the data retrieved must already be a <xref:System.TimeSpan> object."}]},{"pos":[115,227],"content":"Call <xref:System.Data.SqlClient.SqlDataReader.IsDBNull%2A> to check for null values before calling this method.","nodes":[{"content":"Call <ph id=\"ph1\">&lt;xref:System.Data.SqlClient.SqlDataReader.IsDBNull%2A&gt;</ph> to check for null values before calling this method.","pos":[0,112],"source":"Call <xref:System.Data.SqlClient.SqlDataReader.IsDBNull%2A> to check for null values before calling this method."}]}],"pos":[130978,131210],"yaml":true,"extradata":"MT"},{"content":"The zero-based column ordinal.","nodes":[{"pos":[0,30],"content":"The zero-based column ordinal.","nodes":[{"content":"The zero-based column ordinal.","pos":[0,30]}]}],"pos":[131350,131381],"yaml":true},{"content":"The value of the specified column.","nodes":[{"pos":[0,34],"content":"The value of the specified column.","nodes":[{"content":"The value of the specified column.","pos":[0,34]}]}],"pos":[131440,131475],"yaml":true},{"content":"The specified cast is not valid.","nodes":[{"pos":[0,32],"content":"The specified cast is not valid.","nodes":[{"content":"The specified cast is not valid.","pos":[0,32]}]}],"pos":[131650,131683],"yaml":true},{"content":"Gets the value of the specified column in its native format.","nodes":[{"pos":[0,60],"content":"Gets the value of the specified column in its native format.","nodes":[{"content":"Gets the value of the specified column in its native format.","pos":[0,60]}]}],"pos":[132920,132981],"yaml":true},{"content":"<xref:System.Data.SqlClient.SqlDataReader.GetValue%2A> returns data using the .NET Framework types.","nodes":[{"pos":[0,99],"content":"<xref:System.Data.SqlClient.SqlDataReader.GetValue%2A> returns data using the .NET Framework types.","nodes":[{"content":"<ph id=\"ph1\">&lt;xref:System.Data.SqlClient.SqlDataReader.GetValue%2A&gt;</ph> returns data using the .NET Framework types.","pos":[0,99],"source":"<xref:System.Data.SqlClient.SqlDataReader.GetValue%2A> returns data using the .NET Framework types."}]}],"pos":[132992,133092],"yaml":true,"extradata":"MT"},{"content":"The zero-based column ordinal.","nodes":[{"pos":[0,30],"content":"The zero-based column ordinal.","nodes":[{"content":"The zero-based column ordinal.","pos":[0,30]}]}],"pos":[133228,133259],"yaml":true},{"content":"This method returns <xref href=\"System.DBNull\"></xref> for null database columns.","nodes":[{"pos":[0,81],"content":"This method returns <ph id=\"ph1\">&lt;xref href=\"System.DBNull\"&gt;&lt;/xref&gt;</ph> for null database columns.","source":"This method returns <xref href=\"System.DBNull\"></xref> for null database columns."}],"pos":[133316,133398],"yaml":true},{"content":"Populates an array of objects with the column values of the current row.","nodes":[{"pos":[0,72],"content":"Populates an array of objects with the column values of the current row.","nodes":[{"content":"Populates an array of objects with the column values of the current row.","pos":[0,72]}]}],"pos":[134734,134807],"yaml":true},{"content":"For most applications, this method provides an efficient means for retrieving all columns, instead of retrieving each column individually.  \n  \n You can pass an <xref:System.Object> array that contains fewer than the number of columns contained in the resulting row. Only the amount of data the <xref:System.Object> array holds is copied to the array. You can also pass an <xref:System.Object> array whose length is more than the number of columns contained in the resulting row.  \n  \n This method returns <xref:System.DBNull> for null database columns.","nodes":[{"pos":[0,138],"content":"For most applications, this method provides an efficient means for retrieving all columns, instead of retrieving each column individually.","nodes":[{"content":"For most applications, this method provides an efficient means for retrieving all columns, instead of retrieving each column individually.","pos":[0,138]}]},{"pos":[145,479],"content":"You can pass an <xref:System.Object> array that contains fewer than the number of columns contained in the resulting row. Only the amount of data the <xref:System.Object> array holds is copied to the array. You can also pass an <xref:System.Object> array whose length is more than the number of columns contained in the resulting row.","nodes":[{"content":"You can pass an <xref:System.Object> array that contains fewer than the number of columns contained in the resulting row. Only the amount of data the <xref:System.Object> array holds is copied to the array. You can also pass an <xref:System.Object> array whose length is more than the number of columns contained in the resulting row.","pos":[0,334],"nodes":[{"content":"You can pass an <ph id=\"ph1\">&lt;xref:System.Object&gt;</ph> array that contains fewer than the number of columns contained in the resulting row.","pos":[0,121],"source":"You can pass an <xref:System.Object> array that contains fewer than the number of columns contained in the resulting row."},{"content":"Only the amount of data the <ph id=\"ph1\">&lt;xref:System.Object&gt;</ph> array holds is copied to the array.","pos":[122,206],"source":" Only the amount of data the <xref:System.Object> array holds is copied to the array."},{"content":"You can also pass an <ph id=\"ph1\">&lt;xref:System.Object&gt;</ph> array whose length is more than the number of columns contained in the resulting row.","pos":[207,334],"source":" You can also pass an <xref:System.Object> array whose length is more than the number of columns contained in the resulting row."}]}]},{"pos":[486,553],"content":"This method returns <xref:System.DBNull> for null database columns.","nodes":[{"content":"This method returns <ph id=\"ph1\">&lt;xref:System.DBNull&gt;</ph> for null database columns.","pos":[0,67],"source":"This method returns <xref:System.DBNull> for null database columns."}]}],"pos":[134818,135378],"yaml":true,"extradata":"MT"},{"content":"An array of <xref href=\"System.Object\"></xref> into which to copy the attribute columns.","nodes":[{"pos":[0,88],"content":"An array of <ph id=\"ph1\">&lt;xref href=\"System.Object\"&gt;&lt;/xref&gt;</ph> into which to copy the attribute columns.","source":"An array of <xref href=\"System.Object\"></xref> into which to copy the attribute columns."}],"pos":[136189,136278],"yaml":true},{"content":"The number of instances of <xref href=\"System.Object\"></xref> in the array.","nodes":[{"pos":[0,75],"content":"The number of instances of <ph id=\"ph1\">&lt;xref href=\"System.Object\"&gt;&lt;/xref&gt;</ph> in the array.","source":"The number of instances of <xref href=\"System.Object\"></xref> in the array."}],"pos":[136334,136410],"yaml":true},{"content":"Retrieves data of type XML as an <xref href=\"System.Xml.XmlReader\"></xref>.","nodes":[{"pos":[0,75],"content":"Retrieves data of type XML as an <ph id=\"ph1\">&lt;xref href=\"System.Xml.XmlReader\"&gt;&lt;/xref&gt;</ph>.","source":"Retrieves data of type XML as an <xref href=\"System.Xml.XmlReader\"></xref>."}],"pos":[137747,137823],"yaml":true},{"content":"The <xref:System.Xml.XmlReader> object returned by <xref:System.Data.SqlClient.SqlDataReader.GetXmlReader%2A> does not support asynchronous operations. If you require asynchronous operations on an <xref:System.Xml.XmlReader>, cast the XML column to an NVARCHAR(MAX) on the server and use <xref:System.Data.SqlClient.SqlDataReader.GetTextReader%2A> with <xref:System.Xml.XmlReader.Create%2A>.  \n  \n <xref:System.Data.SqlClient.SqlException> exceptions raised from <xref:System.Xml.XmlReader> are thrown as <xref:System.Xml.XmlException> exceptions; check the inner exception for the <xref:System.Data.SqlClient.SqlException>.  \n  \n <xref:System.Data.SqlClient.SqlDataReader.GetChars%2A> will raise an <xref:System.InvalidOperationException> exception when used on an object returned by <xref:System.Data.SqlClient.SqlDataReader.GetXmlReader%2A> when <xref:System.Data.CommandBehavior.SequentialAccess> is in effect.  \n  \n For more information, see [SqlClient Streaming Support](~/docs/framework/data/adonet/sqlclient-streaming-support.md).","nodes":[{"pos":[0,391],"content":"The <xref:System.Xml.XmlReader> object returned by <xref:System.Data.SqlClient.SqlDataReader.GetXmlReader%2A> does not support asynchronous operations. If you require asynchronous operations on an <xref:System.Xml.XmlReader>, cast the XML column to an NVARCHAR(MAX) on the server and use <xref:System.Data.SqlClient.SqlDataReader.GetTextReader%2A> with <xref:System.Xml.XmlReader.Create%2A>.","nodes":[{"content":"The <xref:System.Xml.XmlReader> object returned by <xref:System.Data.SqlClient.SqlDataReader.GetXmlReader%2A> does not support asynchronous operations. If you require asynchronous operations on an <xref:System.Xml.XmlReader>, cast the XML column to an NVARCHAR(MAX) on the server and use <xref:System.Data.SqlClient.SqlDataReader.GetTextReader%2A> with <xref:System.Xml.XmlReader.Create%2A>.","pos":[0,391],"nodes":[{"content":"The <ph id=\"ph1\">&lt;xref:System.Xml.XmlReader&gt;</ph> object returned by <ph id=\"ph2\">&lt;xref:System.Data.SqlClient.SqlDataReader.GetXmlReader%2A&gt;</ph> does not support asynchronous operations.","pos":[0,151],"source":"The <xref:System.Xml.XmlReader> object returned by <xref:System.Data.SqlClient.SqlDataReader.GetXmlReader%2A> does not support asynchronous operations."},{"content":"If you require asynchronous operations on an <ph id=\"ph1\">&lt;xref:System.Xml.XmlReader&gt;</ph>, cast the XML column to an NVARCHAR(MAX) on the server and use <ph id=\"ph2\">&lt;xref:System.Data.SqlClient.SqlDataReader.GetTextReader%2A&gt;</ph> with <ph id=\"ph3\">&lt;xref:System.Xml.XmlReader.Create%2A&gt;</ph>.","pos":[152,391],"source":" If you require asynchronous operations on an <xref:System.Xml.XmlReader>, cast the XML column to an NVARCHAR(MAX) on the server and use <xref:System.Data.SqlClient.SqlDataReader.GetTextReader%2A> with <xref:System.Xml.XmlReader.Create%2A>."}]}]},{"pos":[398,624],"content":"<xref:System.Data.SqlClient.SqlException> exceptions raised from <xref:System.Xml.XmlReader> are thrown as <xref:System.Xml.XmlException> exceptions; check the inner exception for the <xref:System.Data.SqlClient.SqlException>.","nodes":[{"content":"<ph id=\"ph1\">&lt;xref:System.Data.SqlClient.SqlException&gt;</ph> exceptions raised from <ph id=\"ph2\">&lt;xref:System.Xml.XmlReader&gt;</ph> are thrown as <ph id=\"ph3\">&lt;xref:System.Xml.XmlException&gt;</ph> exceptions; check the inner exception for the <ph id=\"ph4\">&lt;xref:System.Data.SqlClient.SqlException&gt;</ph>.","pos":[0,226],"source":"<xref:System.Data.SqlClient.SqlException> exceptions raised from <xref:System.Xml.XmlReader> are thrown as <xref:System.Xml.XmlException> exceptions; check the inner exception for the <xref:System.Data.SqlClient.SqlException>."}]},{"pos":[631,914],"content":"<xref:System.Data.SqlClient.SqlDataReader.GetChars%2A> will raise an <xref:System.InvalidOperationException> exception when used on an object returned by <xref:System.Data.SqlClient.SqlDataReader.GetXmlReader%2A> when <xref:System.Data.CommandBehavior.SequentialAccess> is in effect.","nodes":[{"content":"<ph id=\"ph1\">&lt;xref:System.Data.SqlClient.SqlDataReader.GetChars%2A&gt;</ph> will raise an <ph id=\"ph2\">&lt;xref:System.InvalidOperationException&gt;</ph> exception when used on an object returned by <ph id=\"ph3\">&lt;xref:System.Data.SqlClient.SqlDataReader.GetXmlReader%2A&gt;</ph> when <ph id=\"ph4\">&lt;xref:System.Data.CommandBehavior.SequentialAccess&gt;</ph> is in effect.","pos":[0,283],"source":"<xref:System.Data.SqlClient.SqlDataReader.GetChars%2A> will raise an <xref:System.InvalidOperationException> exception when used on an object returned by <xref:System.Data.SqlClient.SqlDataReader.GetXmlReader%2A> when <xref:System.Data.CommandBehavior.SequentialAccess> is in effect."}]},{"pos":[921,1038],"content":"For more information, see <bpt id=\"p1\">[</bpt>SqlClient Streaming Support<ept id=\"p1\">](~/docs/framework/data/adonet/sqlclient-streaming-support.md)</ept>.","source":"For more information, see [SqlClient Streaming Support](~/docs/framework/data/adonet/sqlclient-streaming-support.md)."}],"pos":[137834,138881],"yaml":true,"extradata":"MT"},{"content":"The value of the specified column.","nodes":[{"pos":[0,34],"content":"The value of the specified column.","nodes":[{"content":"The value of the specified column.","pos":[0,34]}]}],"pos":[139034,139069],"yaml":true},{"content":"The returned object.","nodes":[{"pos":[0,20],"content":"The returned object.","nodes":[{"content":"The returned object.","pos":[0,20]}]}],"pos":[139133,139154],"yaml":true},{"content":"The connection drops or is closed during the data retrieval.  \n  \n The <xref href=\"System.Data.SqlClient.SqlDataReader\"></xref> is closed during the data retrieval.  \n  \n There is no data ready to be read (for example, the first <xref href=\"System.Data.SqlClient.SqlDataReader.Read\"></xref> hasn't been called, or returned false).  \n  \n Trying to read a previously read column in sequential mode.  \n  \n There was an asynchronous operation in progress. This applies to all Get* methods when running in sequential mode, as they could be called while reading a stream.","nodes":[{"pos":[0,60],"content":"The connection drops or is closed during the data retrieval.","nodes":[{"content":"The connection drops or is closed during the data retrieval.","pos":[0,60]}]},{"pos":[67,164],"content":"The <ph id=\"ph1\">&lt;xref href=\"System.Data.SqlClient.SqlDataReader\"&gt;&lt;/xref&gt;</ph> is closed during the data retrieval.","source":"The <xref href=\"System.Data.SqlClient.SqlDataReader\"></xref> is closed during the data retrieval."},{"pos":[171,330],"content":"There is no data ready to be read (for example, the first <ph id=\"ph1\">&lt;xref href=\"System.Data.SqlClient.SqlDataReader.Read\"&gt;&lt;/xref&gt;</ph> hasn't been called, or returned false).","source":"There is no data ready to be read (for example, the first <xref href=\"System.Data.SqlClient.SqlDataReader.Read\"></xref> hasn't been called, or returned false)."},{"pos":[337,396],"content":"Trying to read a previously read column in sequential mode.","nodes":[{"content":"Trying to read a previously read column in sequential mode.","pos":[0,59]}]},{"pos":[403,565],"content":"There was an asynchronous operation in progress. This applies to all Get* methods when running in sequential mode, as they could be called while reading a stream.","nodes":[{"content":"There was an asynchronous operation in progress. This applies to all Get* methods when running in sequential mode, as they could be called while reading a stream.","pos":[0,162],"nodes":[{"content":"There was an asynchronous operation in progress.","pos":[0,48]},{"content":"This applies to all Get* methods when running in sequential mode, as they could be called while reading a stream.","pos":[49,162]}]}]}],"pos":[139340,139920],"yaml":true},{"content":"Trying to read a column that does not exist.","nodes":[{"pos":[0,44],"content":"Trying to read a column that does not exist.","nodes":[{"content":"Trying to read a column that does not exist.","pos":[0,44]}]}],"pos":[140028,140073],"yaml":true},{"content":"The returned type was not xml.","nodes":[{"pos":[0,30],"content":"The returned type was not xml.","nodes":[{"content":"The returned type was not xml.","pos":[0,30]}]}],"pos":[140173,140204],"yaml":true},{"content":"Gets a value that indicates whether the <xref href=\"System.Data.SqlClient.SqlDataReader\"></xref> contains one or more rows.","nodes":[{"pos":[0,123],"content":"Gets a value that indicates whether the <ph id=\"ph1\">&lt;xref href=\"System.Data.SqlClient.SqlDataReader\"&gt;&lt;/xref&gt;</ph> contains one or more rows.","source":"Gets a value that indicates whether the <xref href=\"System.Data.SqlClient.SqlDataReader\"></xref> contains one or more rows."}],"pos":[141374,141498],"yaml":true},{"content":"`true` if the <xref href=\"System.Data.SqlClient.SqlDataReader\"></xref> contains one or more rows; otherwise `false`.","nodes":[{"pos":[0,116],"content":"<ph id=\"ph1\">`true`</ph> if the <ph id=\"ph2\">&lt;xref href=\"System.Data.SqlClient.SqlDataReader\"&gt;&lt;/xref&gt;</ph> contains one or more rows; otherwise <ph id=\"ph3\">`false`</ph>.","source":"`true` if the <xref href=\"System.Data.SqlClient.SqlDataReader\"></xref> contains one or more rows; otherwise `false`."}],"pos":[141617,141736],"yaml":true},{"content":"Retrieves a Boolean value that indicates whether the specified <xref href=\"System.Data.SqlClient.SqlDataReader\"></xref> instance has been closed.","nodes":[{"pos":[0,145],"content":"Retrieves a Boolean value that indicates whether the specified <ph id=\"ph1\">&lt;xref href=\"System.Data.SqlClient.SqlDataReader\"&gt;&lt;/xref&gt;</ph> instance has been closed.","source":"Retrieves a Boolean value that indicates whether the specified <xref href=\"System.Data.SqlClient.SqlDataReader\"></xref> instance has been closed."}],"pos":[142986,143132],"yaml":true},{"content":"It is not possible to read from a <xref:System.Data.SqlClient.SqlDataReader> instance that is closed.","nodes":[{"pos":[0,101],"content":"It is not possible to read from a <xref:System.Data.SqlClient.SqlDataReader> instance that is closed.","nodes":[{"content":"It is not possible to read from a <ph id=\"ph1\">&lt;xref:System.Data.SqlClient.SqlDataReader&gt;</ph> instance that is closed.","pos":[0,101],"source":"It is not possible to read from a <xref:System.Data.SqlClient.SqlDataReader> instance that is closed."}]}],"pos":[143143,143245],"yaml":true,"extradata":"MT"},{"content":"`true` if the specified <xref href=\"System.Data.SqlClient.SqlDataReader\"></xref> instance is closed; otherwise `false`.","nodes":[{"pos":[0,119],"content":"<ph id=\"ph1\">`true`</ph> if the specified <ph id=\"ph2\">&lt;xref href=\"System.Data.SqlClient.SqlDataReader\"&gt;&lt;/xref&gt;</ph> instance is closed; otherwise <ph id=\"ph3\">`false`</ph>.","source":"`true` if the specified <xref href=\"System.Data.SqlClient.SqlDataReader\"></xref> instance is closed; otherwise `false`."}],"pos":[143365,143487],"yaml":true},{"content":"Determines whether the specified <xref href=\"System.Data.CommandBehavior\"></xref> matches that of the <xref href=\"System.Data.SqlClient.SqlDataReader\"></xref> .","nodes":[{"pos":[0,160],"content":"Determines whether the specified <ph id=\"ph1\">&lt;xref href=\"System.Data.CommandBehavior\"&gt;&lt;/xref&gt;</ph> matches that of the <ph id=\"ph2\">&lt;xref href=\"System.Data.SqlClient.SqlDataReader\"&gt;&lt;/xref&gt;</ph> .","source":"Determines whether the specified <xref href=\"System.Data.CommandBehavior\"></xref> matches that of the <xref href=\"System.Data.SqlClient.SqlDataReader\"></xref> ."}],"pos":[144886,145047],"yaml":true},{"content":"This member supports the .NET Framework infrastructure and is not intended to be used directly from your code.","nodes":[{"pos":[0,110],"content":"This member supports the .NET Framework infrastructure and is not intended to be used directly from your code.","nodes":[{"content":"This member supports the .NET Framework infrastructure and is not intended to be used directly from your code.","pos":[0,110]}]}],"pos":[145058,145169],"yaml":true,"extradata":"MT"},{"content":"A <xref href=\"System.Data.CommandBehavior\"></xref> enumeration.","nodes":[{"pos":[0,63],"content":"A <ph id=\"ph1\">&lt;xref href=\"System.Data.CommandBehavior\"&gt;&lt;/xref&gt;</ph> enumeration.","source":"A <xref href=\"System.Data.CommandBehavior\"></xref> enumeration."}],"pos":[145361,145425],"yaml":true},{"content":"`true` if the specified <xref href=\"System.Data.CommandBehavior\"></xref> is true, `false` otherwise.","nodes":[{"pos":[0,100],"content":"<ph id=\"ph1\">`true`</ph> if the specified <ph id=\"ph2\">&lt;xref href=\"System.Data.CommandBehavior\"&gt;&lt;/xref&gt;</ph> is true, <ph id=\"ph3\">`false`</ph> otherwise.","source":"`true` if the specified <xref href=\"System.Data.CommandBehavior\"></xref> is true, `false` otherwise."}],"pos":[145483,145586],"yaml":true},{"content":"Gets a value that indicates whether the column contains non-existent or missing values.","nodes":[{"pos":[0,87],"content":"Gets a value that indicates whether the column contains non-existent or missing values.","nodes":[{"content":"Gets a value that indicates whether the column contains non-existent or missing values.","pos":[0,87]}]}],"pos":[146811,146899],"yaml":true},{"content":"Call this method to check for null column values before calling the typed get methods (for example, <xref:System.Data.SqlClient.SqlDataReader.GetByte%2A>, <xref:System.Data.SqlClient.SqlDataReader.GetChar%2A>, and so on) to avoid raising an error.  \n  \n [!code-csharp[SqlDataReader_IsDbNull#1](~/samples/snippets/csharp/VS_Snippets_ADO.NET/sqldatareader_isdbnull/cs/source.cs#1)]\n [!code-vb[SqlDataReader_IsDbNull#1](~/samples/snippets/visualbasic/VS_Snippets_ADO.NET/sqldatareader_isdbnull/vb/source.vb#1)]","nodes":[{"pos":[0,247],"content":"Call this method to check for null column values before calling the typed get methods (for example, <xref:System.Data.SqlClient.SqlDataReader.GetByte%2A>, <xref:System.Data.SqlClient.SqlDataReader.GetChar%2A>, and so on) to avoid raising an error.","nodes":[{"content":"Call this method to check for null column values before calling the typed get methods (for example, <ph id=\"ph1\">&lt;xref:System.Data.SqlClient.SqlDataReader.GetByte%2A&gt;</ph>, <ph id=\"ph2\">&lt;xref:System.Data.SqlClient.SqlDataReader.GetChar%2A&gt;</ph>, and so on) to avoid raising an error.","pos":[0,247],"source":"Call this method to check for null column values before calling the typed get methods (for example, <xref:System.Data.SqlClient.SqlDataReader.GetByte%2A>, <xref:System.Data.SqlClient.SqlDataReader.GetChar%2A>, and so on) to avoid raising an error."}]},{"pos":[254,507],"content":"<bpt id=\"p1\">[!code-csharp</bpt><bpt id=\"p2\">[</bpt>SqlDataReader_IsDbNull#1<ept id=\"p2\">](~/samples/snippets/csharp/VS_Snippets_ADO.NET/sqldatareader_isdbnull/cs/source.cs#1)</ept><ept id=\"p1\">]</ept> <bpt id=\"p3\">[!code-vb</bpt><bpt id=\"p4\">[</bpt>SqlDataReader_IsDbNull#1<ept id=\"p4\">](~/samples/snippets/visualbasic/VS_Snippets_ADO.NET/sqldatareader_isdbnull/vb/source.vb#1)</ept><ept id=\"p3\">]</ept>","source":"[!code-csharp[SqlDataReader_IsDbNull#1](~/samples/snippets/csharp/VS_Snippets_ADO.NET/sqldatareader_isdbnull/cs/source.cs#1)]\n [!code-vb[SqlDataReader_IsDbNull#1](~/samples/snippets/visualbasic/VS_Snippets_ADO.NET/sqldatareader_isdbnull/vb/source.vb#1)]"}],"pos":[146910,147423],"yaml":true,"extradata":"MT"},{"content":"The zero-based column ordinal.","nodes":[{"pos":[0,30],"content":"The zero-based column ordinal.","nodes":[{"content":"The zero-based column ordinal.","pos":[0,30]}]}],"pos":[147557,147588],"yaml":true},{"content":"`true` if the specified column value is equivalent to <xref href=\"System.DBNull\"></xref>; otherwise `false`.","nodes":[{"pos":[0,108],"content":"<ph id=\"ph1\">`true`</ph> if the specified column value is equivalent to <ph id=\"ph2\">&lt;xref href=\"System.DBNull\"&gt;&lt;/xref&gt;</ph>; otherwise <ph id=\"ph3\">`false`</ph>.","source":"`true` if the specified column value is equivalent to <xref href=\"System.DBNull\"></xref>; otherwise `false`."}],"pos":[147646,147757],"yaml":true},{"content":"An asynchronous version of <xref href=\"System.Data.SqlClient.SqlDataReader.IsDBNull(System.Int32)\"></xref>, which gets a value that indicates whether the column contains non-existent or missing values.  \n  \n The cancellation token can be used to request that the operation be abandoned before the command timeout elapses. Exceptions will be reported via the returned Task object.","nodes":[{"pos":[0,201],"content":"An asynchronous version of <ph id=\"ph1\">&lt;xref href=\"System.Data.SqlClient.SqlDataReader.IsDBNull(System.Int32)\"&gt;&lt;/xref&gt;</ph>, which gets a value that indicates whether the column contains non-existent or missing values.","source":"An asynchronous version of <xref href=\"System.Data.SqlClient.SqlDataReader.IsDBNull(System.Int32)\"></xref>, which gets a value that indicates whether the column contains non-existent or missing values."},{"pos":[208,379],"content":"The cancellation token can be used to request that the operation be abandoned before the command timeout elapses. Exceptions will be reported via the returned Task object.","nodes":[{"content":"The cancellation token can be used to request that the operation be abandoned before the command timeout elapses. Exceptions will be reported via the returned Task object.","pos":[0,171],"nodes":[{"content":"The cancellation token can be used to request that the operation be abandoned before the command timeout elapses.","pos":[0,113]},{"content":"Exceptions will be reported via the returned Task object.","pos":[114,171]}]}]}],"pos":[149261,149647],"yaml":true},{"content":"For more information, see [SqlClient Streaming Support](~/docs/framework/data/adonet/sqlclient-streaming-support.md).","nodes":[{"pos":[0,117],"content":"For more information, see <bpt id=\"p1\">[</bpt>SqlClient Streaming Support<ept id=\"p1\">](~/docs/framework/data/adonet/sqlclient-streaming-support.md)</ept>.","source":"For more information, see [SqlClient Streaming Support](~/docs/framework/data/adonet/sqlclient-streaming-support.md)."}],"pos":[149658,149776],"yaml":true,"extradata":"MT"},{"content":"The zero-based column to be retrieved.","nodes":[{"pos":[0,38],"content":"The zero-based column to be retrieved.","nodes":[{"content":"The zero-based column to be retrieved.","pos":[0,38]}]}],"pos":[149998,150037],"yaml":true},{"content":"The cancellation instruction, which propagates a notification that operations should be canceled. This does not guarantee the cancellation. A setting of `CancellationToken.None` makes this method equivalent to <xref href=\"System.Data.SqlClient.SqlDataReader.IsDBNull(System.Int32)\"></xref>. The returned task must be marked as cancelled.","nodes":[{"pos":[0,337],"content":"The cancellation instruction, which propagates a notification that operations should be canceled. This does not guarantee the cancellation. A setting of `CancellationToken.None` makes this method equivalent to <xref href=\"System.Data.SqlClient.SqlDataReader.IsDBNull(System.Int32)\"></xref>. The returned task must be marked as cancelled.","nodes":[{"content":"The cancellation instruction, which propagates a notification that operations should be canceled.","pos":[0,97]},{"content":"This does not guarantee the cancellation.","pos":[98,139]},{"content":"A setting of <ph id=\"ph1\">`CancellationToken.None`</ph> makes this method equivalent to <ph id=\"ph2\">&lt;xref href=\"System.Data.SqlClient.SqlDataReader.IsDBNull(System.Int32)\"&gt;&lt;/xref&gt;</ph>.","pos":[140,290],"source":" A setting of `CancellationToken.None` makes this method equivalent to <xref href=\"System.Data.SqlClient.SqlDataReader.IsDBNull(System.Int32)\"></xref>."},{"content":"The returned task must be marked as cancelled.","pos":[291,337]}]}],"pos":[150131,150469],"yaml":true},{"content":"`true` if the specified column value is equivalent to `DBNull` otherwise `false`.","nodes":[{"pos":[0,81],"content":"<ph id=\"ph1\">`true`</ph> if the specified column value is equivalent to <ph id=\"ph2\">`DBNull`</ph> otherwise <ph id=\"ph3\">`false`</ph>.","source":"`true` if the specified column value is equivalent to `DBNull` otherwise `false`."}],"pos":[150556,150640],"yaml":true},{"content":"The connection drops or is closed during the data retrieval.  \n  \n The <xref href=\"System.Data.SqlClient.SqlDataReader\"></xref> is closed during the data retrieval.  \n  \n There is no data ready to be read (for example, the first <xref href=\"System.Data.SqlClient.SqlDataReader.Read\"></xref> hasn't been called, or returned false).  \n  \n Trying to read a previously read column in sequential mode.  \n  \n There was an asynchronous operation in progress. This applies to all Get* methods when running in sequential mode, as they could be called while reading a stream.  \n  \n `Context Connection=true` is specified in the connection string.","nodes":[{"pos":[0,60],"content":"The connection drops or is closed during the data retrieval.","nodes":[{"content":"The connection drops or is closed during the data retrieval.","pos":[0,60]}]},{"pos":[67,164],"content":"The <ph id=\"ph1\">&lt;xref href=\"System.Data.SqlClient.SqlDataReader\"&gt;&lt;/xref&gt;</ph> is closed during the data retrieval.","source":"The <xref href=\"System.Data.SqlClient.SqlDataReader\"></xref> is closed during the data retrieval."},{"pos":[171,330],"content":"There is no data ready to be read (for example, the first <ph id=\"ph1\">&lt;xref href=\"System.Data.SqlClient.SqlDataReader.Read\"&gt;&lt;/xref&gt;</ph> hasn't been called, or returned false).","source":"There is no data ready to be read (for example, the first <xref href=\"System.Data.SqlClient.SqlDataReader.Read\"></xref> hasn't been called, or returned false)."},{"pos":[337,396],"content":"Trying to read a previously read column in sequential mode.","nodes":[{"content":"Trying to read a previously read column in sequential mode.","pos":[0,59]}]},{"pos":[403,565],"content":"There was an asynchronous operation in progress. This applies to all Get* methods when running in sequential mode, as they could be called while reading a stream.","nodes":[{"content":"There was an asynchronous operation in progress. This applies to all Get* methods when running in sequential mode, as they could be called while reading a stream.","pos":[0,162],"nodes":[{"content":"There was an asynchronous operation in progress.","pos":[0,48]},{"content":"This applies to all Get* methods when running in sequential mode, as they could be called while reading a stream.","pos":[49,162]}]}]},{"pos":[572,636],"content":"<ph id=\"ph1\">`Context Connection=true`</ph> is specified in the connection string.","source":"`Context Connection=true` is specified in the connection string."}],"pos":[150827,151480],"yaml":true},{"content":"Trying to read a column that does not exist.","nodes":[{"pos":[0,44],"content":"Trying to read a column that does not exist.","nodes":[{"content":"Trying to read a column that does not exist.","pos":[0,44]}]}],"pos":[151588,151633],"yaml":true},{"content":"Gets the value of the specified column in its native format given the column name.","nodes":[{"pos":[0,82],"content":"Gets the value of the specified column in its native format given the column name.","nodes":[{"content":"Gets the value of the specified column in its native format given the column name.","pos":[0,82]}]}],"pos":[152854,152937],"yaml":true},{"content":"A case-sensitive lookup is performed first. If it fails, a second case-insensitive search is made (a case-insensitive comparison is done using the database collation). Unexpected results can occur when comparisons are affected by culture-specific casing rules. For example, in Turkish, the following example yields the wrong results because the file system in Turkish does not use linguistic casing rules for the letter 'i' in \"file\".  \n  \n This method is kana-width insensitive.","nodes":[{"pos":[0,434],"content":"A case-sensitive lookup is performed first. If it fails, a second case-insensitive search is made (a case-insensitive comparison is done using the database collation). Unexpected results can occur when comparisons are affected by culture-specific casing rules. For example, in Turkish, the following example yields the wrong results because the file system in Turkish does not use linguistic casing rules for the letter 'i' in \"file\".","nodes":[{"content":"A case-sensitive lookup is performed first. If it fails, a second case-insensitive search is made (a case-insensitive comparison is done using the database collation). Unexpected results can occur when comparisons are affected by culture-specific casing rules. For example, in Turkish, the following example yields the wrong results because the file system in Turkish does not use linguistic casing rules for the letter 'i' in \"file\".","pos":[0,434],"nodes":[{"content":"A case-sensitive lookup is performed first.","pos":[0,43]},{"content":"If it fails, a second case-insensitive search is made (a case-insensitive comparison is done using the database collation).","pos":[44,167]},{"content":"Unexpected results can occur when comparisons are affected by culture-specific casing rules.","pos":[168,260]},{"content":"For example, in Turkish, the following example yields the wrong results because the file system in Turkish does not use linguistic casing rules for the letter 'i' in \"file\".","pos":[261,434]}]}]},{"pos":[441,479],"content":"This method is kana-width insensitive.","nodes":[{"content":"This method is kana-width insensitive.","pos":[0,38]}]}],"pos":[152948,153434],"yaml":true,"extradata":"MT"},{"content":"The column name.","nodes":[{"pos":[0,16],"content":"The column name.","nodes":[{"content":"The column name.","pos":[0,16]}]}],"pos":[153583,153600],"yaml":true},{"content":"The value of the specified column in its native format.","nodes":[{"pos":[0,55],"content":"The value of the specified column in its native format.","nodes":[{"content":"The value of the specified column in its native format.","pos":[0,55]}]}],"pos":[153657,153713],"yaml":true},{"content":"No column with the specified name was found.","nodes":[{"pos":[0,44],"content":"No column with the specified name was found.","nodes":[{"content":"No column with the specified name was found.","pos":[0,44]}]}],"pos":[153889,153934],"yaml":true},{"content":"Gets the value of the specified column in its native format given the column ordinal.","nodes":[{"pos":[0,85],"content":"Gets the value of the specified column in its native format given the column ordinal.","nodes":[{"content":"Gets the value of the specified column in its native format given the column ordinal.","pos":[0,85]}]}],"pos":[155149,155235],"yaml":true},{"content":"The zero-based column ordinal.","nodes":[{"pos":[0,30],"content":"The zero-based column ordinal.","nodes":[{"content":"The zero-based column ordinal.","pos":[0,30]}]}],"pos":[155374,155405],"yaml":true},{"content":"The value of the specified column in its native format.","nodes":[{"pos":[0,55],"content":"The value of the specified column in its native format.","nodes":[{"content":"The value of the specified column in its native format.","pos":[0,55]}]}],"pos":[155462,155518],"yaml":true},{"content":"The index passed was outside the range of 0 through <xref href=\"System.Data.IDataRecord.FieldCount\"></xref>.","nodes":[{"pos":[0,108],"content":"The index passed was outside the range of 0 through <ph id=\"ph1\">&lt;xref href=\"System.Data.IDataRecord.FieldCount\"&gt;&lt;/xref&gt;</ph>.","source":"The index passed was outside the range of 0 through <xref href=\"System.Data.IDataRecord.FieldCount\"></xref>."}],"pos":[155694,155803],"yaml":true},{"content":"Advances the data reader to the next result, when reading the results of batch Transact-SQL statements.","nodes":[{"pos":[0,103],"content":"Advances the data reader to the next result, when reading the results of batch Transact-SQL statements.","nodes":[{"content":"Advances the data reader to the next result, when reading the results of batch Transact-SQL statements.","pos":[0,103]}]}],"pos":[156995,157099],"yaml":true},{"content":"Used to process multiple results, which can be generated by executing batch Transact-SQL statements.  \n  \n By default, the data reader is positioned on the first result.","nodes":[{"pos":[0,100],"content":"Used to process multiple results, which can be generated by executing batch Transact-SQL statements.","nodes":[{"content":"Used to process multiple results, which can be generated by executing batch Transact-SQL statements.","pos":[0,100]}]},{"pos":[107,169],"content":"By default, the data reader is positioned on the first result.","nodes":[{"content":"By default, the data reader is positioned on the first result.","pos":[0,62]}]}],"pos":[157110,157284],"yaml":true,"extradata":"MT"},{"content":"`true` if there are more result sets; otherwise `false`.","nodes":[{"pos":[0,56],"content":"<ph id=\"ph1\">`true`</ph> if there are more result sets; otherwise <ph id=\"ph2\">`false`</ph>.","source":"`true` if there are more result sets; otherwise `false`."}],"pos":[157420,157479],"yaml":true},{"content":"An asynchronous version of <xref href=\"System.Data.SqlClient.SqlDataReader.NextResult\"></xref>, which advances the data reader to the next result, when reading the results of batch [!INCLUDE[tsql](~/includes/tsql-md.md)] statements.  \n  \n The cancellation token can be used to request that the operation be abandoned before the command timeout elapses.  Exceptions will be reported via the returned Task object.","nodes":[{"pos":[0,232],"content":"An asynchronous version of <ph id=\"ph1\">&lt;xref href=\"System.Data.SqlClient.SqlDataReader.NextResult\"&gt;&lt;/xref&gt;</ph>, which advances the data reader to the next result, when reading the results of batch <ph id=\"ph2\">[!INCLUDE[tsql](~/includes/tsql-md.md)]</ph> statements.","source":"An asynchronous version of <xref href=\"System.Data.SqlClient.SqlDataReader.NextResult\"></xref>, which advances the data reader to the next result, when reading the results of batch [!INCLUDE[tsql](~/includes/tsql-md.md)] statements."},{"pos":[239,411],"content":"The cancellation token can be used to request that the operation be abandoned before the command timeout elapses.  Exceptions will be reported via the returned Task object.","nodes":[{"content":"The cancellation token can be used to request that the operation be abandoned before the command timeout elapses.  Exceptions will be reported via the returned Task object.","pos":[0,172],"nodes":[{"content":"The cancellation token can be used to request that the operation be abandoned before the command timeout elapses.","pos":[0,113]},{"content":"Exceptions will be reported via the returned Task object.","pos":[115,172]}]}]}],"pos":[158937,159355],"yaml":true},{"content":"For more information about asynchronous programming in the [!INCLUDE[dnprdnshort](~/includes/dnprdnshort-md.md)] Data Provider for [!INCLUDE[ssNoVersion](~/includes/ssnoversion-md.md)], see [Asynchronous Programming](~/docs/framework/data/adonet/asynchronous-programming.md).","nodes":[{"pos":[0,275],"content":"For more information about asynchronous programming in the <ph id=\"ph1\">[!INCLUDE[dnprdnshort](~/includes/dnprdnshort-md.md)]</ph> Data Provider for <ph id=\"ph2\">[!INCLUDE[ssNoVersion](~/includes/ssnoversion-md.md)]</ph>, see <bpt id=\"p1\">[</bpt>Asynchronous Programming<ept id=\"p1\">](~/docs/framework/data/adonet/asynchronous-programming.md)</ept>.","source":"For more information about asynchronous programming in the [!INCLUDE[dnprdnshort](~/includes/dnprdnshort-md.md)] Data Provider for [!INCLUDE[ssNoVersion](~/includes/ssnoversion-md.md)], see [Asynchronous Programming](~/docs/framework/data/adonet/asynchronous-programming.md)."}],"pos":[159366,159642],"yaml":true,"extradata":"MT"},{"content":"The cancellation instruction.","nodes":[{"pos":[0,29],"content":"The cancellation instruction.","nodes":[{"content":"The cancellation instruction.","pos":[0,29]}]}],"pos":[159897,159927],"yaml":true},{"content":"A task representing the asynchronous operation.","nodes":[{"pos":[0,47],"content":"A task representing the asynchronous operation.","nodes":[{"content":"A task representing the asynchronous operation.","pos":[0,47]}]}],"pos":[160014,160062],"yaml":true},{"content":"Calling <xref href=\"System.Data.SqlClient.SqlDataReader.NextResultAsync(System.Threading.CancellationToken)\"></xref> more than once for the same instance before task completion.  \n  \n `Context Connection=true` is specified in the connection string.","nodes":[{"pos":[0,177],"content":"Calling <ph id=\"ph1\">&lt;xref href=\"System.Data.SqlClient.SqlDataReader.NextResultAsync(System.Threading.CancellationToken)\"&gt;&lt;/xref&gt;</ph> more than once for the same instance before task completion.","source":"Calling <xref href=\"System.Data.SqlClient.SqlDataReader.NextResultAsync(System.Threading.CancellationToken)\"></xref> more than once for the same instance before task completion."},{"pos":[184,248],"content":"<ph id=\"ph1\">`Context Connection=true`</ph> is specified in the connection string.","source":"`Context Connection=true` is specified in the connection string."}],"pos":[160251,160506],"yaml":true},{"content":"[!INCLUDE[ssNoVersion](~/includes/ssnoversion-md.md)] returned an error while executing the command text.","nodes":[{"pos":[0,105],"content":"<ph id=\"ph1\">[!INCLUDE[ssNoVersion](~/includes/ssnoversion-md.md)]</ph> returned an error while executing the command text.","source":"[!INCLUDE[ssNoVersion](~/includes/ssnoversion-md.md)] returned an error while executing the command text."}],"pos":[160620,160728],"yaml":true},{"content":"Advances the <xref href=\"System.Data.SqlClient.SqlDataReader\"></xref> to the next record.","nodes":[{"pos":[0,89],"content":"Advances the <ph id=\"ph1\">&lt;xref href=\"System.Data.SqlClient.SqlDataReader\"&gt;&lt;/xref&gt;</ph> to the next record.","source":"Advances the <xref href=\"System.Data.SqlClient.SqlDataReader\"></xref> to the next record."}],"pos":[161760,161850],"yaml":true},{"content":"The default position of the <xref:System.Data.SqlClient.SqlDataReader> is before the first record. Therefore, you must call <xref:System.Data.SqlClient.SqlDataReader.Read%2A> to begin accessing any data.  \n  \n Only one `SqlDataReader` per associated <xref:System.Data.SqlClient.SqlConnection> may be open at a time, and any attempt to open another will fail until the first one is closed. Similarly, while the `SqlDataReader` is being used, the associated `SqlConnection` is busy serving it until you call <xref:System.Data.SqlClient.SqlDataReader.Close%2A>.","nodes":[{"pos":[0,203],"content":"The default position of the <xref:System.Data.SqlClient.SqlDataReader> is before the first record. Therefore, you must call <xref:System.Data.SqlClient.SqlDataReader.Read%2A> to begin accessing any data.","nodes":[{"content":"The default position of the <xref:System.Data.SqlClient.SqlDataReader> is before the first record. Therefore, you must call <xref:System.Data.SqlClient.SqlDataReader.Read%2A> to begin accessing any data.","pos":[0,203],"nodes":[{"content":"The default position of the <ph id=\"ph1\">&lt;xref:System.Data.SqlClient.SqlDataReader&gt;</ph> is before the first record.","pos":[0,98],"source":"The default position of the <xref:System.Data.SqlClient.SqlDataReader> is before the first record."},{"content":"Therefore, you must call <ph id=\"ph1\">&lt;xref:System.Data.SqlClient.SqlDataReader.Read%2A&gt;</ph> to begin accessing any data.","pos":[99,203],"source":" Therefore, you must call <xref:System.Data.SqlClient.SqlDataReader.Read%2A> to begin accessing any data."}]}]},{"pos":[210,558],"content":"Only one `SqlDataReader` per associated <xref:System.Data.SqlClient.SqlConnection> may be open at a time, and any attempt to open another will fail until the first one is closed. Similarly, while the `SqlDataReader` is being used, the associated `SqlConnection` is busy serving it until you call <xref:System.Data.SqlClient.SqlDataReader.Close%2A>.","nodes":[{"content":"Only one <ph id=\"ph1\">`SqlDataReader`</ph> per associated <ph id=\"ph2\">&lt;xref:System.Data.SqlClient.SqlConnection&gt;</ph> may be open at a time, and any attempt to open another will fail until the first one is closed.","pos":[0,178],"source":"Only one `SqlDataReader` per associated <xref:System.Data.SqlClient.SqlConnection> may be open at a time, and any attempt to open another will fail until the first one is closed."},{"content":"Similarly, while the <ph id=\"ph1\">`SqlDataReader`</ph> is being used, the associated <ph id=\"ph2\">`SqlConnection`</ph> is busy serving it until you call <ph id=\"ph3\">&lt;xref:System.Data.SqlClient.SqlDataReader.Close%2A&gt;</ph>.","pos":[179,348],"source":" Similarly, while the `SqlDataReader` is being used, the associated `SqlConnection` is busy serving it until you call <xref:System.Data.SqlClient.SqlDataReader.Close%2A>."}]}],"pos":[161861,162424],"yaml":true,"extradata":"MT"},{"content":"`true` if there are more rows; otherwise `false`.","nodes":[{"pos":[0,49],"content":"<ph id=\"ph1\">`true`</ph> if there are more rows; otherwise <ph id=\"ph2\">`false`</ph>.","source":"`true` if there are more rows; otherwise `false`."}],"pos":[163335,163387],"yaml":true},{"content":"[!INCLUDE[ssNoVersion](~/includes/ssnoversion-md.md)] returned an error while executing the command text.","nodes":[{"pos":[0,105],"content":"<ph id=\"ph1\">[!INCLUDE[ssNoVersion](~/includes/ssnoversion-md.md)]</ph> returned an error while executing the command text.","source":"[!INCLUDE[ssNoVersion](~/includes/ssnoversion-md.md)] returned an error while executing the command text."}],"pos":[163569,163677],"yaml":true},{"content":"An asynchronous version of <xref href=\"System.Data.SqlClient.SqlDataReader.Read\"></xref>, which advances the <xref href=\"System.Data.SqlClient.SqlDataReader\"></xref> to the next record.  \n  \n The cancellation token can be used to request that the operation be abandoned before the command timeout elapses. Exceptions will be reported via the returned Task object.","nodes":[{"pos":[0,185],"content":"An asynchronous version of <ph id=\"ph1\">&lt;xref href=\"System.Data.SqlClient.SqlDataReader.Read\"&gt;&lt;/xref&gt;</ph>, which advances the <ph id=\"ph2\">&lt;xref href=\"System.Data.SqlClient.SqlDataReader\"&gt;&lt;/xref&gt;</ph> to the next record.","source":"An asynchronous version of <xref href=\"System.Data.SqlClient.SqlDataReader.Read\"></xref>, which advances the <xref href=\"System.Data.SqlClient.SqlDataReader\"></xref> to the next record."},{"pos":[192,363],"content":"The cancellation token can be used to request that the operation be abandoned before the command timeout elapses. Exceptions will be reported via the returned Task object.","nodes":[{"content":"The cancellation token can be used to request that the operation be abandoned before the command timeout elapses. Exceptions will be reported via the returned Task object.","pos":[0,171],"nodes":[{"content":"The cancellation token can be used to request that the operation be abandoned before the command timeout elapses.","pos":[0,113]},{"content":"Exceptions will be reported via the returned Task object.","pos":[114,171]}]}]}],"pos":[165022,165394],"yaml":true},{"content":"If the `behavior` parameter of <xref:System.Data.SqlClient.SqlCommand.ExecuteReaderAsync%2A> is set to `Default`, <xref:System.Data.SqlClient.SqlDataReader.ReadAsync%2A> reads the entire row before returning the Task.  \n  \n For more information, including code samples, about asynchronous programming in the [!INCLUDE[dnprdnshort](~/includes/dnprdnshort-md.md)] Data Provider for [!INCLUDE[ssNoVersion](~/includes/ssnoversion-md.md)], see [Asynchronous Programming](~/docs/framework/data/adonet/asynchronous-programming.md).","nodes":[{"pos":[0,217],"content":"If the <ph id=\"ph1\">`behavior`</ph> parameter of <ph id=\"ph2\">&lt;xref:System.Data.SqlClient.SqlCommand.ExecuteReaderAsync%2A&gt;</ph> is set to <ph id=\"ph3\">`Default`</ph>, <ph id=\"ph4\">&lt;xref:System.Data.SqlClient.SqlDataReader.ReadAsync%2A&gt;</ph> reads the entire row before returning the Task.","source":"If the `behavior` parameter of <xref:System.Data.SqlClient.SqlCommand.ExecuteReaderAsync%2A> is set to `Default`, <xref:System.Data.SqlClient.SqlDataReader.ReadAsync%2A> reads the entire row before returning the Task."},{"pos":[224,524],"content":"For more information, including code samples, about asynchronous programming in the <ph id=\"ph1\">[!INCLUDE[dnprdnshort](~/includes/dnprdnshort-md.md)]</ph> Data Provider for <ph id=\"ph2\">[!INCLUDE[ssNoVersion](~/includes/ssnoversion-md.md)]</ph>, see <bpt id=\"p1\">[</bpt>Asynchronous Programming<ept id=\"p1\">](~/docs/framework/data/adonet/asynchronous-programming.md)</ept>.","source":"For more information, including code samples, about asynchronous programming in the [!INCLUDE[dnprdnshort](~/includes/dnprdnshort-md.md)] Data Provider for [!INCLUDE[ssNoVersion](~/includes/ssnoversion-md.md)], see [Asynchronous Programming](~/docs/framework/data/adonet/asynchronous-programming.md)."}],"pos":[165405,165934],"yaml":true,"extradata":"MT"},{"content":"The cancellation instruction.","nodes":[{"pos":[0,29],"content":"The cancellation instruction.","nodes":[{"content":"The cancellation instruction.","pos":[0,29]}]}],"pos":[166183,166213],"yaml":true},{"content":"A task representing the asynchronous operation.","nodes":[{"pos":[0,47],"content":"A task representing the asynchronous operation.","nodes":[{"content":"A task representing the asynchronous operation.","pos":[0,47]}]}],"pos":[166300,166348],"yaml":true},{"content":"Calling <xref href=\"System.Data.SqlClient.SqlDataReader.ReadAsync(System.Threading.CancellationToken)\"></xref> more than once for the same instance before task completion.  \n  \n `Context Connection=true` is specified in the connection string.","nodes":[{"pos":[0,171],"content":"Calling <ph id=\"ph1\">&lt;xref href=\"System.Data.SqlClient.SqlDataReader.ReadAsync(System.Threading.CancellationToken)\"&gt;&lt;/xref&gt;</ph> more than once for the same instance before task completion.","source":"Calling <xref href=\"System.Data.SqlClient.SqlDataReader.ReadAsync(System.Threading.CancellationToken)\"></xref> more than once for the same instance before task completion."},{"pos":[178,242],"content":"<ph id=\"ph1\">`Context Connection=true`</ph> is specified in the connection string.","source":"`Context Connection=true` is specified in the connection string."}],"pos":[166531,166780],"yaml":true},{"content":"[!INCLUDE[ssNoVersion](~/includes/ssnoversion-md.md)] returned an error while executing the command text.","nodes":[{"pos":[0,105],"content":"<ph id=\"ph1\">[!INCLUDE[ssNoVersion](~/includes/ssnoversion-md.md)]</ph> returned an error while executing the command text.","source":"[!INCLUDE[ssNoVersion](~/includes/ssnoversion-md.md)] returned an error while executing the command text."}],"pos":[166894,167002],"yaml":true},{"content":"Gets the number of rows changed, inserted, or deleted by execution of the Transact-SQL statement.","nodes":[{"pos":[0,97],"content":"Gets the number of rows changed, inserted, or deleted by execution of the Transact-SQL statement.","nodes":[{"content":"Gets the number of rows changed, inserted, or deleted by execution of the Transact-SQL statement.","pos":[0,97]}]}],"pos":[168096,168194],"yaml":true},{"content":"The <xref:System.Data.SqlClient.SqlDataReader.RecordsAffected%2A> property is not set until all rows are read and you close the <xref:System.Data.SqlClient.SqlDataReader>.  \n  \n The value of this property is cumulative. For example, if two records are inserted in batch mode, the value of `RecordsAffected` will be two.  \n  \n <xref:System.Data.SqlClient.SqlDataReader.IsClosed%2A> and <xref:System.Data.SqlClient.SqlDataReader.RecordsAffected%2A> are the only properties that you can call after the <xref:System.Data.SqlClient.SqlDataReader> is closed.","nodes":[{"pos":[0,171],"content":"The <xref:System.Data.SqlClient.SqlDataReader.RecordsAffected%2A> property is not set until all rows are read and you close the <xref:System.Data.SqlClient.SqlDataReader>.","nodes":[{"content":"The <ph id=\"ph1\">&lt;xref:System.Data.SqlClient.SqlDataReader.RecordsAffected%2A&gt;</ph> property is not set until all rows are read and you close the <ph id=\"ph2\">&lt;xref:System.Data.SqlClient.SqlDataReader&gt;</ph>.","pos":[0,171],"source":"The <xref:System.Data.SqlClient.SqlDataReader.RecordsAffected%2A> property is not set until all rows are read and you close the <xref:System.Data.SqlClient.SqlDataReader>."}]},{"pos":[178,319],"content":"The value of this property is cumulative. For example, if two records are inserted in batch mode, the value of `RecordsAffected` will be two.","nodes":[{"content":"The value of this property is cumulative.","pos":[0,41]},{"content":"For example, if two records are inserted in batch mode, the value of <ph id=\"ph1\">`RecordsAffected`</ph> will be two.","pos":[42,141],"source":" For example, if two records are inserted in batch mode, the value of `RecordsAffected` will be two."}]},{"pos":[326,552],"content":"<xref:System.Data.SqlClient.SqlDataReader.IsClosed%2A> and <xref:System.Data.SqlClient.SqlDataReader.RecordsAffected%2A> are the only properties that you can call after the <xref:System.Data.SqlClient.SqlDataReader> is closed.","nodes":[{"content":"<ph id=\"ph1\">&lt;xref:System.Data.SqlClient.SqlDataReader.IsClosed%2A&gt;</ph> and <ph id=\"ph2\">&lt;xref:System.Data.SqlClient.SqlDataReader.RecordsAffected%2A&gt;</ph> are the only properties that you can call after the <ph id=\"ph3\">&lt;xref:System.Data.SqlClient.SqlDataReader&gt;</ph> is closed.","pos":[0,226],"source":"<xref:System.Data.SqlClient.SqlDataReader.IsClosed%2A> and <xref:System.Data.SqlClient.SqlDataReader.RecordsAffected%2A> are the only properties that you can call after the <xref:System.Data.SqlClient.SqlDataReader> is closed."}]}],"pos":[168205,168764],"yaml":true,"extradata":"MT"},{"content":"The number of rows changed, inserted, or deleted; 0 if no rows were affected or the statement failed; and -1 for SELECT statements.","nodes":[{"pos":[0,131],"content":"The number of rows changed, inserted, or deleted; 0 if no rows were affected or the statement failed; and -1 for SELECT statements.","nodes":[{"content":"The number of rows changed, inserted, or deleted; 0 if no rows were affected or the statement failed; and -1 for SELECT statements.","pos":[0,131]}]}],"pos":[168888,169020],"yaml":true},{"content":"Gets the number of fields in the <xref href=\"System.Data.SqlClient.SqlDataReader\"></xref> that are not hidden.","nodes":[{"pos":[0,110],"content":"Gets the number of fields in the <ph id=\"ph1\">&lt;xref href=\"System.Data.SqlClient.SqlDataReader\"&gt;&lt;/xref&gt;</ph> that are not hidden.","source":"Gets the number of fields in the <xref href=\"System.Data.SqlClient.SqlDataReader\"></xref> that are not hidden."}],"pos":[170332,170443],"yaml":true},{"content":"This value is used to determine how many fields in the <xref:System.Data.SqlClient.SqlDataReader> are visible. For example, a SELECT on a partial primary key returns the remaining parts of the key as hidden fields. The hidden fields are always appended behind the visible fields.","nodes":[{"pos":[0,279],"content":"This value is used to determine how many fields in the <xref:System.Data.SqlClient.SqlDataReader> are visible. For example, a SELECT on a partial primary key returns the remaining parts of the key as hidden fields. The hidden fields are always appended behind the visible fields.","nodes":[{"content":"This value is used to determine how many fields in the <xref:System.Data.SqlClient.SqlDataReader> are visible. For example, a SELECT on a partial primary key returns the remaining parts of the key as hidden fields. The hidden fields are always appended behind the visible fields.","pos":[0,279],"nodes":[{"content":"This value is used to determine how many fields in the <ph id=\"ph1\">&lt;xref:System.Data.SqlClient.SqlDataReader&gt;</ph> are visible.","pos":[0,110],"source":"This value is used to determine how many fields in the <xref:System.Data.SqlClient.SqlDataReader> are visible."},{"content":"For example, a SELECT on a partial primary key returns the remaining parts of the key as hidden fields.","pos":[111,214]},{"content":"The hidden fields are always appended behind the visible fields.","pos":[215,279]}]}]}],"pos":[170454,170734],"yaml":true,"extradata":"MT"},{"content":"The number of fields that are not hidden.","nodes":[{"pos":[0,41],"content":"The number of fields that are not hidden.","nodes":[{"content":"The number of fields that are not hidden.","pos":[0,41]}]}],"pos":[170860,170902],"yaml":true},{"content":"Returns an <xref href=\"System.Data.IDataReader\"></xref> for the specified column ordinal.","nodes":[{"pos":[0,89],"content":"Returns an <ph id=\"ph1\">&lt;xref href=\"System.Data.IDataReader\"&gt;&lt;/xref&gt;</ph> for the specified column ordinal.","source":"Returns an <xref href=\"System.Data.IDataReader\"></xref> for the specified column ordinal."}],"pos":[172297,172387],"yaml":true},{"content":"This member is an explicit interface member implementation. It can be used only when the <xref:System.Data.SqlClient.SqlDataReader> instance is cast to an <xref:System.IDataRecord> interface.","nodes":[{"pos":[0,191],"content":"This member is an explicit interface member implementation. It can be used only when the <xref:System.Data.SqlClient.SqlDataReader> instance is cast to an <xref:System.IDataRecord> interface.","nodes":[{"content":"This member is an explicit interface member implementation. It can be used only when the <xref:System.Data.SqlClient.SqlDataReader> instance is cast to an <xref:System.IDataRecord> interface.","pos":[0,191],"nodes":[{"content":"This member is an explicit interface member implementation.","pos":[0,59]},{"content":"It can be used only when the <ph id=\"ph1\">&lt;xref:System.Data.SqlClient.SqlDataReader&gt;</ph> instance is cast to an <ph id=\"ph2\">&lt;xref:System.IDataRecord&gt;</ph> interface.","pos":[60,191],"source":" It can be used only when the <xref:System.Data.SqlClient.SqlDataReader> instance is cast to an <xref:System.IDataRecord> interface."}]}]}],"pos":[172398,172590],"yaml":true,"extradata":"MT"},{"content":"A column ordinal.","nodes":[{"pos":[0,17],"content":"A column ordinal.","nodes":[{"content":"A column ordinal.","pos":[0,17]}]}],"pos":[172738,172756],"yaml":true},{"content":"The <xref href=\"System.Data.IDataReader\"></xref> instance for the specified column ordinal.","nodes":[{"pos":[0,91],"content":"The <ph id=\"ph1\">&lt;xref href=\"System.Data.IDataReader\"&gt;&lt;/xref&gt;</ph> instance for the specified column ordinal.","source":"The <xref href=\"System.Data.IDataReader\"></xref> instance for the specified column ordinal."}],"pos":[172823,172915],"yaml":true}],"content":"### YamlMime:ManagedReference\nitems:\n- uid: System.Data.SqlClient.SqlDataReader\n  commentId: T:System.Data.SqlClient.SqlDataReader\n  id: SqlDataReader\n  children:\n  - System.Data.SqlClient.SqlDataReader.Close\n  - System.Data.SqlClient.SqlDataReader.Connection\n  - System.Data.SqlClient.SqlDataReader.Depth\n  - System.Data.SqlClient.SqlDataReader.FieldCount\n  - System.Data.SqlClient.SqlDataReader.GetBoolean(System.Int32)\n  - System.Data.SqlClient.SqlDataReader.GetByte(System.Int32)\n  - System.Data.SqlClient.SqlDataReader.GetBytes(System.Int32,System.Int64,System.Byte[],System.Int32,System.Int32)\n  - System.Data.SqlClient.SqlDataReader.GetChar(System.Int32)\n  - System.Data.SqlClient.SqlDataReader.GetChars(System.Int32,System.Int64,System.Char[],System.Int32,System.Int32)\n  - System.Data.SqlClient.SqlDataReader.GetDataTypeName(System.Int32)\n  - System.Data.SqlClient.SqlDataReader.GetDateTime(System.Int32)\n  - System.Data.SqlClient.SqlDataReader.GetDateTimeOffset(System.Int32)\n  - System.Data.SqlClient.SqlDataReader.GetDecimal(System.Int32)\n  - System.Data.SqlClient.SqlDataReader.GetDouble(System.Int32)\n  - System.Data.SqlClient.SqlDataReader.GetEnumerator\n  - System.Data.SqlClient.SqlDataReader.GetFieldType(System.Int32)\n  - System.Data.SqlClient.SqlDataReader.GetFieldValue``1(System.Int32)\n  - System.Data.SqlClient.SqlDataReader.GetFieldValueAsync``1(System.Int32,System.Threading.CancellationToken)\n  - System.Data.SqlClient.SqlDataReader.GetFloat(System.Int32)\n  - System.Data.SqlClient.SqlDataReader.GetGuid(System.Int32)\n  - System.Data.SqlClient.SqlDataReader.GetInt16(System.Int32)\n  - System.Data.SqlClient.SqlDataReader.GetInt32(System.Int32)\n  - System.Data.SqlClient.SqlDataReader.GetInt64(System.Int32)\n  - System.Data.SqlClient.SqlDataReader.GetName(System.Int32)\n  - System.Data.SqlClient.SqlDataReader.GetOrdinal(System.String)\n  - System.Data.SqlClient.SqlDataReader.GetProviderSpecificFieldType(System.Int32)\n  - System.Data.SqlClient.SqlDataReader.GetProviderSpecificValue(System.Int32)\n  - System.Data.SqlClient.SqlDataReader.GetProviderSpecificValues(System.Object[])\n  - System.Data.SqlClient.SqlDataReader.GetSchemaTable\n  - System.Data.SqlClient.SqlDataReader.GetSqlBinary(System.Int32)\n  - System.Data.SqlClient.SqlDataReader.GetSqlBoolean(System.Int32)\n  - System.Data.SqlClient.SqlDataReader.GetSqlByte(System.Int32)\n  - System.Data.SqlClient.SqlDataReader.GetSqlBytes(System.Int32)\n  - System.Data.SqlClient.SqlDataReader.GetSqlChars(System.Int32)\n  - System.Data.SqlClient.SqlDataReader.GetSqlDateTime(System.Int32)\n  - System.Data.SqlClient.SqlDataReader.GetSqlDecimal(System.Int32)\n  - System.Data.SqlClient.SqlDataReader.GetSqlDouble(System.Int32)\n  - System.Data.SqlClient.SqlDataReader.GetSqlGuid(System.Int32)\n  - System.Data.SqlClient.SqlDataReader.GetSqlInt16(System.Int32)\n  - System.Data.SqlClient.SqlDataReader.GetSqlInt32(System.Int32)\n  - System.Data.SqlClient.SqlDataReader.GetSqlInt64(System.Int32)\n  - System.Data.SqlClient.SqlDataReader.GetSqlMoney(System.Int32)\n  - System.Data.SqlClient.SqlDataReader.GetSqlSingle(System.Int32)\n  - System.Data.SqlClient.SqlDataReader.GetSqlString(System.Int32)\n  - System.Data.SqlClient.SqlDataReader.GetSqlValue(System.Int32)\n  - System.Data.SqlClient.SqlDataReader.GetSqlValues(System.Object[])\n  - System.Data.SqlClient.SqlDataReader.GetSqlXml(System.Int32)\n  - System.Data.SqlClient.SqlDataReader.GetStream(System.Int32)\n  - System.Data.SqlClient.SqlDataReader.GetString(System.Int32)\n  - System.Data.SqlClient.SqlDataReader.GetTextReader(System.Int32)\n  - System.Data.SqlClient.SqlDataReader.GetTimeSpan(System.Int32)\n  - System.Data.SqlClient.SqlDataReader.GetValue(System.Int32)\n  - System.Data.SqlClient.SqlDataReader.GetValues(System.Object[])\n  - System.Data.SqlClient.SqlDataReader.GetXmlReader(System.Int32)\n  - System.Data.SqlClient.SqlDataReader.HasRows\n  - System.Data.SqlClient.SqlDataReader.IsClosed\n  - System.Data.SqlClient.SqlDataReader.IsCommandBehavior(System.Data.CommandBehavior)\n  - System.Data.SqlClient.SqlDataReader.IsDBNull(System.Int32)\n  - System.Data.SqlClient.SqlDataReader.IsDBNullAsync(System.Int32,System.Threading.CancellationToken)\n  - System.Data.SqlClient.SqlDataReader.Item(System.String)\n  - System.Data.SqlClient.SqlDataReader.Item(System.Int32)\n  - System.Data.SqlClient.SqlDataReader.NextResult\n  - System.Data.SqlClient.SqlDataReader.NextResultAsync(System.Threading.CancellationToken)\n  - System.Data.SqlClient.SqlDataReader.Read\n  - System.Data.SqlClient.SqlDataReader.ReadAsync(System.Threading.CancellationToken)\n  - System.Data.SqlClient.SqlDataReader.RecordsAffected\n  - System.Data.SqlClient.SqlDataReader.VisibleFieldCount\n  - System.Data.SqlClient.SqlDataReader.System#Data#IDataRecord#GetData(System.Int32)\n  langs:\n  - csharp\n  name: SqlDataReader\n  nameWithType: SqlDataReader\n  fullName: System.Data.SqlClient.SqlDataReader\n  type: Class\n  assemblies:\n  - System.Data.SqlClient\n  - System.Data\n  - netstandard\n  namespace: System.Data.SqlClient\n  summary: Provides a way of reading a forward-only stream of rows from a SQL Server database. This class cannot be inherited.\n  remarks: \"To create a <xref:System.Data.SqlClient.SqlDataReader>, you must call the <xref:System.Data.SqlClient.SqlCommand.ExecuteReader%2A> method of the <xref:System.Data.SqlClient.SqlCommand> object, instead of directly using a constructor.  \\n  \\n While the <xref:System.Data.SqlClient.SqlDataReader> is being used, the associated <xref:System.Data.SqlClient.SqlConnection> is busy serving the <xref:System.Data.SqlClient.SqlDataReader>, and no other operations can be performed on the <xref:System.Data.SqlClient.SqlConnection> other than closing it. This is the case until the <xref:System.Data.SqlClient.SqlDataReader.Close%2A> method of the <xref:System.Data.SqlClient.SqlDataReader> is called. For example, you cannot retrieve output parameters until after you call <xref:System.Data.SqlClient.SqlDataReader.Close%2A>.  \\n  \\n Changes made to a result set by another process or thread while data is being read may be visible to the user of the `SqlDataReader`. However, the precise behavior is timing dependent.  \\n  \\n <xref:System.Data.SqlClient.SqlDataReader.IsClosed%2A> and <xref:System.Data.SqlClient.SqlDataReader.RecordsAffected%2A> are the only properties that you can call after the <xref:System.Data.SqlClient.SqlDataReader> is closed. Although the <xref:System.Data.SqlClient.SqlDataReader.RecordsAffected%2A> property may be accessed while the <xref:System.Data.SqlClient.SqlDataReader> exists, always call <xref:System.Data.SqlClient.SqlDataReader.Close%2A> before returning the value of <xref:System.Data.SqlClient.SqlDataReader.RecordsAffected%2A> to guarantee an accurate return value.  \\n  \\n When using sequential access (<xref:System.Data.CommandBehavior?displayProperty=fullName>), an <xref:System.InvalidOperationException> will be raised if the <xref:System.Data.SqlClient.SqlDataReader> position is advanced and another read operation is attempted on the previous column.  \\n  \\n> [!NOTE]\\n>  For optimal performance, <xref:System.Data.SqlClient.SqlDataReader> avoids creating unnecessary objects or making unnecessary copies of data. Therefore, multiple calls to methods such as <xref:System.Data.SqlClient.SqlDataReader.GetValue%2A> return a reference to the same object. Use caution if you are modifying the underlying value of the objects returned by methods such as <xref:System.Data.SqlClient.SqlDataReader.GetValue%2A>.\"\n  example:\n  - \"The following example creates a <xref:System.Data.SqlClient.SqlConnection>, a <xref:System.Data.SqlClient.SqlCommand>, and a <xref:System.Data.SqlClient.SqlDataReader>. The example reads through the data, writing it out to the console window. The code then closes the <xref:System.Data.SqlClient.SqlDataReader>. The <xref:System.Data.SqlClient.SqlConnection> is closed automatically at the end of the `using` code block.  \\n  \\n [!code-csharp[Classic WebData SqlDataReader.Read Example#1](~/samples/snippets/csharp/VS_Snippets_ADO.NET/Classic WebData SqlDataReader.Read Example/CS/source.cs#1)]\\n [!code-vb[Classic WebData SqlDataReader.Read Example#1](~/samples/snippets/visualbasic/VS_Snippets_ADO.NET/Classic WebData SqlDataReader.Read Example/VB/source.vb#1)]\"\n  syntax:\n    content: 'public class SqlDataReader : System.Data.Common.DbDataReader, IDisposable'\n  inheritance:\n  - System.Object\n  - System.Data.Common.DbDataReader\n  implements:\n  - System.IDisposable\n  inheritedMembers:\n  - System.Data.Common.DbDataReader.Dispose\n  - System.Data.Common.DbDataReader.Dispose(System.Boolean)\n  - System.Data.Common.DbDataReader.GetData(System.Int32)\n  - System.Data.Common.DbDataReader.GetDbDataReader(System.Int32)\n  - System.Data.Common.DbDataReader.GetFieldValueAsync``1(System.Int32)\n  - System.Data.Common.DbDataReader.IsDBNullAsync(System.Int32)\n  - System.Data.Common.DbDataReader.NextResultAsync\n  - System.Data.Common.DbDataReader.ReadAsync\n  - System.Data.Common.DbDataReader.System#Data#IDataReader#Close\n  - System.Data.Common.DbDataReader.System#Data#IDataReader#GetSchemaTable\n  - System.Object.Equals(System.Object)\n  - System.Object.Equals(System.Object,System.Object)\n  - System.Object.GetHashCode\n  - System.Object.GetType\n  - System.Object.MemberwiseClone\n  - System.Object.ReferenceEquals(System.Object,System.Object)\n  - System.Object.ToString\n  extensionMethods:\n  - System.Data.Common.DbDataReaderExtensions.CanGetColumnSchema(System.Data.Common.DbDataReader)\n  - System.Data.Common.DbDataReaderExtensions.GetColumnSchema(System.Data.Common.DbDataReader)\n  - System.Linq.Enumerable.Cast``1(System.Collections.IEnumerable)\n  - System.Linq.Enumerable.OfType``1(System.Collections.IEnumerable)\n  - System.Linq.ParallelEnumerable.AsParallel(System.Collections.IEnumerable)\n  - System.Linq.Queryable.AsQueryable(System.Collections.IEnumerable)\n  version:\n  - netcore-1.0\n  - netcore-1.1\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  monikers:\n  - netcore-1.0\n  - netcore-1.1\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Data.SqlClient/SqlDataReader.xml\n  ms.technology:\n  - dotnet-ado\n  author: JennieHubbard\n  ms.author: jhubbard\n  manager: jhubbard\n- uid: System.Data.SqlClient.SqlDataReader.Close\n  commentId: M:System.Data.SqlClient.SqlDataReader.Close\n  id: Close\n  parent: System.Data.SqlClient.SqlDataReader\n  langs:\n  - csharp\n  name: Close()\n  nameWithType: SqlDataReader.Close()\n  fullName: SqlDataReader.Close()\n  type: Method\n  assemblies:\n  - System.Data\n  namespace: System.Data.SqlClient\n  summary: Closes the <xref href=\"System.Data.SqlClient.SqlDataReader\"></xref> object.\n  remarks: \"You must explicitly call the <xref:System.Data.SqlClient.SqlDataReader.Close%2A> method when you are through using the <xref:System.Data.SqlClient.SqlDataReader> to use the associated <xref:System.Data.SqlClient.SqlConnection> for any other purpose.  \\n  \\n The `Close` method fills in the values for output parameters, return values and `RecordsAffected`, increasing the time that it takes to close a `SqlDataReader` that was used to process a large or complex query. When the return values and the number of records affected by a query are not significant, the time that it takes to close the `SqlDataReader` can be reduced by calling the <xref:System.Data.SqlClient.SqlCommand.Cancel%2A> method of the associated <xref:System.Data.SqlClient.SqlCommand> object before calling the `Close` method.  \\n  \\n> [!CAUTION]\\n>  Do not call `Close` or `Dispose` on a Connection, a DataReader, or any other managed object in the `Finalize` method of your class. In a finalizer, you should only release unmanaged resources that your class owns directly. If your class does not own any unmanaged resources, do not include a `Finalize` method in your class definition. For more information, see [Garbage Collection](http://msdn.microsoft.com/library/22b6cb97-0c80-4eeb-a2cf-5ed7655e37f9).\"\n  example:\n  - \"The following example creates a <xref:System.Data.SqlClient.SqlConnection>, a `SqlCommand`, and a <xref:System.Data.SqlClient.SqlDataReader>. The example reads through the data, writing it out to the console window. The code then closes the <xref:System.Data.SqlClient.SqlDataReader>. The <xref:System.Data.SqlClient.SqlConnection> is closed automatically at the end of the `using` code block.  \\n  \\n [!code-csharp[Classic WebData SqlDataReader.Close Example#1](~/samples/snippets/csharp/VS_Snippets_ADO.NET/Classic WebData SqlDataReader.Close Example/CS/source.cs#1)]\\n [!code-vb[Classic WebData SqlDataReader.Close Example#1](~/samples/snippets/visualbasic/VS_Snippets_ADO.NET/Classic WebData SqlDataReader.Close Example/VB/source.vb#1)]\"\n  syntax:\n    content: public override void Close ();\n    parameters: []\n  overload: System.Data.SqlClient.SqlDataReader.Close*\n  exceptions: []\n  version:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Data.SqlClient/SqlDataReader.xml\n  ms.technology:\n  - dotnet-ado\n  author: JennieHubbard\n  ms.author: jhubbard\n  manager: jhubbard\n- uid: System.Data.SqlClient.SqlDataReader.Connection\n  commentId: P:System.Data.SqlClient.SqlDataReader.Connection\n  id: Connection\n  parent: System.Data.SqlClient.SqlDataReader\n  langs:\n  - csharp\n  name: Connection\n  nameWithType: SqlDataReader.Connection\n  fullName: SqlDataReader.Connection\n  type: Property\n  assemblies:\n  - System.Data.SqlClient\n  - System.Data\n  - netstandard\n  namespace: System.Data.SqlClient\n  summary: Gets the <xref href=\"System.Data.SqlClient.SqlConnection\"></xref> associated with the <xref href=\"System.Data.SqlClient.SqlDataReader\"></xref>.\n  syntax:\n    content: protected System.Data.SqlClient.SqlConnection Connection { get; }\n    return:\n      type: System.Data.SqlClient.SqlConnection\n      description: The <xref href=\"System.Data.SqlClient.SqlConnection\"></xref> associated with the <xref href=\"System.Data.SqlClient.SqlDataReader\"></xref>.\n  overload: System.Data.SqlClient.SqlDataReader.Connection*\n  exceptions: []\n  version:\n  - netcore-1.0\n  - netcore-1.1\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  monikers:\n  - netcore-1.0\n  - netcore-1.1\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Data.SqlClient/SqlDataReader.xml\n  ms.technology:\n  - dotnet-ado\n  author: JennieHubbard\n  ms.author: jhubbard\n  manager: jhubbard\n- uid: System.Data.SqlClient.SqlDataReader.Depth\n  commentId: P:System.Data.SqlClient.SqlDataReader.Depth\n  id: Depth\n  parent: System.Data.SqlClient.SqlDataReader\n  langs:\n  - csharp\n  name: Depth\n  nameWithType: SqlDataReader.Depth\n  fullName: SqlDataReader.Depth\n  type: Property\n  assemblies:\n  - System.Data.SqlClient\n  - System.Data\n  - netstandard\n  namespace: System.Data.SqlClient\n  summary: Gets a value that indicates the depth of nesting for the current row.\n  remarks: The outermost table has a depth of zero. The .NET Framework Data Provider for SQL Server does not support nesting and always returns zero.\n  syntax:\n    content: public override int Depth { get; }\n    return:\n      type: System.Int32\n      description: The depth of nesting for the current row.\n  overload: System.Data.SqlClient.SqlDataReader.Depth*\n  exceptions: []\n  version:\n  - netcore-1.0\n  - netcore-1.1\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  monikers:\n  - netcore-1.0\n  - netcore-1.1\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Data.SqlClient/SqlDataReader.xml\n  ms.technology:\n  - dotnet-ado\n  author: JennieHubbard\n  ms.author: jhubbard\n  manager: jhubbard\n- uid: System.Data.SqlClient.SqlDataReader.FieldCount\n  commentId: P:System.Data.SqlClient.SqlDataReader.FieldCount\n  id: FieldCount\n  parent: System.Data.SqlClient.SqlDataReader\n  langs:\n  - csharp\n  name: FieldCount\n  nameWithType: SqlDataReader.FieldCount\n  fullName: SqlDataReader.FieldCount\n  type: Property\n  assemblies:\n  - System.Data.SqlClient\n  - System.Data\n  - netstandard\n  namespace: System.Data.SqlClient\n  summary: Gets the number of columns in the current row.\n  remarks: Executing a query that, by its nature, does not return rows (such as a DELETE query), sets <xref:System.Data.SqlClient.SqlDataReader.FieldCount%2A> to 0. However. this should not be confused with a query that returns 0 rows (such as SELECT * FROM *table* WHERE 1 = 2) in which case <xref:System.Data.SqlClient.SqlDataReader.FieldCount%2A> returns the number of columns in the table, including hidden fields. Use <xref:System.Data.SqlClient.SqlDataReader.VisibleFieldCount%2A> to exclude hidden fields.\n  syntax:\n    content: public override int FieldCount { get; }\n    return:\n      type: System.Int32\n      description: When not positioned in a valid recordset, 0; otherwise the number of columns in the current row. The default is -1.\n  overload: System.Data.SqlClient.SqlDataReader.FieldCount*\n  exceptions:\n  - type: System.NotSupportedException\n    commentId: T:System.NotSupportedException\n    description: There is no current connection to an instance of SQL Server.\n  version:\n  - netcore-1.0\n  - netcore-1.1\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  monikers:\n  - netcore-1.0\n  - netcore-1.1\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Data.SqlClient/SqlDataReader.xml\n  ms.technology:\n  - dotnet-ado\n  author: JennieHubbard\n  ms.author: jhubbard\n  manager: jhubbard\n- uid: System.Data.SqlClient.SqlDataReader.GetBoolean(System.Int32)\n  commentId: M:System.Data.SqlClient.SqlDataReader.GetBoolean(System.Int32)\n  id: GetBoolean(System.Int32)\n  parent: System.Data.SqlClient.SqlDataReader\n  langs:\n  - csharp\n  name: GetBoolean(Int32)\n  nameWithType: SqlDataReader.GetBoolean(Int32)\n  fullName: SqlDataReader.GetBoolean(Int32)\n  type: Method\n  assemblies:\n  - System.Data.SqlClient\n  - System.Data\n  - netstandard\n  namespace: System.Data.SqlClient\n  summary: Gets the value of the specified column as a Boolean.\n  remarks: \"No conversions are performed; therefore, the data retrieved must already be a Boolean, or an exception is generated.  \\n  \\n Call <xref:System.Data.SqlClient.SqlDataReader.IsDBNull%2A> to check for null values before calling this method.\"\n  syntax:\n    content: public override bool GetBoolean (int i);\n    parameters:\n    - id: i\n      type: System.Int32\n      description: The zero-based column ordinal.\n    return:\n      type: System.Boolean\n      description: The value of the column.\n  overload: System.Data.SqlClient.SqlDataReader.GetBoolean*\n  exceptions:\n  - type: System.InvalidCastException\n    commentId: T:System.InvalidCastException\n    description: The specified cast is not valid.\n  version:\n  - netcore-1.0\n  - netcore-1.1\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  monikers:\n  - netcore-1.0\n  - netcore-1.1\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Data.SqlClient/SqlDataReader.xml\n  ms.technology:\n  - dotnet-ado\n  author: JennieHubbard\n  ms.author: jhubbard\n  manager: jhubbard\n- uid: System.Data.SqlClient.SqlDataReader.GetByte(System.Int32)\n  commentId: M:System.Data.SqlClient.SqlDataReader.GetByte(System.Int32)\n  id: GetByte(System.Int32)\n  parent: System.Data.SqlClient.SqlDataReader\n  langs:\n  - csharp\n  name: GetByte(Int32)\n  nameWithType: SqlDataReader.GetByte(Int32)\n  fullName: SqlDataReader.GetByte(Int32)\n  type: Method\n  assemblies:\n  - System.Data.SqlClient\n  - System.Data\n  - netstandard\n  namespace: System.Data.SqlClient\n  summary: Gets the value of the specified column as a byte.\n  remarks: \"No conversions are performed; therefore, the data retrieved must already be a byte.  \\n  \\n Call <xref:System.Data.SqlClient.SqlDataReader.IsDBNull%2A> to check for null values before calling this method.\"\n  syntax:\n    content: public override byte GetByte (int i);\n    parameters:\n    - id: i\n      type: System.Int32\n      description: The zero-based column ordinal.\n    return:\n      type: System.Byte\n      description: The value of the specified column as a byte.\n  overload: System.Data.SqlClient.SqlDataReader.GetByte*\n  exceptions:\n  - type: System.InvalidCastException\n    commentId: T:System.InvalidCastException\n    description: The specified cast is not valid.\n  version:\n  - netcore-1.0\n  - netcore-1.1\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  monikers:\n  - netcore-1.0\n  - netcore-1.1\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Data.SqlClient/SqlDataReader.xml\n  ms.technology:\n  - dotnet-ado\n  author: JennieHubbard\n  ms.author: jhubbard\n  manager: jhubbard\n- uid: System.Data.SqlClient.SqlDataReader.GetBytes(System.Int32,System.Int64,System.Byte[],System.Int32,System.Int32)\n  commentId: M:System.Data.SqlClient.SqlDataReader.GetBytes(System.Int32,System.Int64,System.Byte[],System.Int32,System.Int32)\n  id: GetBytes(System.Int32,System.Int64,System.Byte[],System.Int32,System.Int32)\n  parent: System.Data.SqlClient.SqlDataReader\n  langs:\n  - csharp\n  name: GetBytes(Int32, Int64, Byte[], Int32, Int32)\n  nameWithType: SqlDataReader.GetBytes(Int32, Int64, Byte[], Int32, Int32)\n  fullName: SqlDataReader.GetBytes(Int32, Int64, Byte[], Int32, Int32)\n  type: Method\n  assemblies:\n  - System.Data.SqlClient\n  - System.Data\n  - netstandard\n  namespace: System.Data.SqlClient\n  summary: Reads a stream of bytes from the specified column offset into the buffer an array starting at the given buffer offset.\n  remarks: \"<xref:System.Data.SqlClient.SqlDataReader.GetBytes%2A> returns the number of available bytes in the field. Most of the time this is the exact length of the field. However, the number returned may be less than the true length of the field if `GetBytes` has already been used to obtain bytes from the field. This may be the case, for example, if the <xref:System.Data.SqlClient.SqlDataReader> is reading a large data structure into a buffer. For more information, see the `SequentialAccess` setting for <xref:System.Data.CommandBehavior>.  \\n  \\n If you pass a buffer that is `null`, <xref:System.Data.SqlClient.SqlDataReader.GetBytes%2A> returns the length of the entire field in bytes, not the remaining size based on the buffer offset parameter.  \\n  \\n No conversions are performed; therefore, the data retrieved must already be a byte array.\"\n  syntax:\n    content: public override long GetBytes (int i, long dataIndex, byte[] buffer, int bufferIndex, int length);\n    parameters:\n    - id: i\n      type: System.Int32\n      description: The zero-based column ordinal.\n    - id: dataIndex\n      type: System.Int64\n      description: The index within the field from which to begin the read operation.\n    - id: buffer\n      type: System.Byte[]\n      description: The buffer into which to read the stream of bytes.\n    - id: bufferIndex\n      type: System.Int32\n      description: The index within the <code>buffer</code> where the write operation is to start.\n    - id: length\n      type: System.Int32\n      description: The maximum length to copy into the buffer.\n    return:\n      type: System.Int64\n      description: The actual number of bytes read.\n  overload: System.Data.SqlClient.SqlDataReader.GetBytes*\n  exceptions: []\n  version:\n  - netcore-1.0\n  - netcore-1.1\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  monikers:\n  - netcore-1.0\n  - netcore-1.1\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Data.SqlClient/SqlDataReader.xml\n  ms.technology:\n  - dotnet-ado\n  author: JennieHubbard\n  ms.author: jhubbard\n  manager: jhubbard\n- uid: System.Data.SqlClient.SqlDataReader.GetChar(System.Int32)\n  commentId: M:System.Data.SqlClient.SqlDataReader.GetChar(System.Int32)\n  id: GetChar(System.Int32)\n  parent: System.Data.SqlClient.SqlDataReader\n  langs:\n  - csharp\n  name: GetChar(Int32)\n  nameWithType: SqlDataReader.GetChar(Int32)\n  fullName: SqlDataReader.GetChar(Int32)\n  type: Method\n  assemblies:\n  - System.Data.SqlClient\n  - System.Data\n  - netstandard\n  namespace: System.Data.SqlClient\n  summary: Gets the value of the specified column as a single character.\n  remarks: Not supported for <xref:System.Data.SqlClient>.\n  syntax:\n    content: public override char GetChar (int i);\n    parameters:\n    - id: i\n      type: System.Int32\n      description: The zero-based column ordinal.\n    return:\n      type: System.Char\n      description: The value of the specified column.\n  overload: System.Data.SqlClient.SqlDataReader.GetChar*\n  exceptions:\n  - type: System.InvalidCastException\n    commentId: T:System.InvalidCastException\n    description: The specified cast is not valid.\n  attributes: []\n  version:\n  - netcore-1.0\n  - netcore-1.1\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  monikers:\n  - netcore-1.0\n  - netcore-1.1\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Data.SqlClient/SqlDataReader.xml\n  ms.technology:\n  - dotnet-ado\n  author: JennieHubbard\n  ms.author: jhubbard\n  manager: jhubbard\n- uid: System.Data.SqlClient.SqlDataReader.GetChars(System.Int32,System.Int64,System.Char[],System.Int32,System.Int32)\n  commentId: M:System.Data.SqlClient.SqlDataReader.GetChars(System.Int32,System.Int64,System.Char[],System.Int32,System.Int32)\n  id: GetChars(System.Int32,System.Int64,System.Char[],System.Int32,System.Int32)\n  parent: System.Data.SqlClient.SqlDataReader\n  langs:\n  - csharp\n  name: GetChars(Int32, Int64, Char[], Int32, Int32)\n  nameWithType: SqlDataReader.GetChars(Int32, Int64, Char[], Int32, Int32)\n  fullName: SqlDataReader.GetChars(Int32, Int64, Char[], Int32, Int32)\n  type: Method\n  assemblies:\n  - System.Data.SqlClient\n  - System.Data\n  - netstandard\n  namespace: System.Data.SqlClient\n  summary: Reads a stream of characters from the specified column offset into the buffer as an array starting at the given buffer offset.\n  remarks: \"<xref:System.Data.SqlClient.SqlDataReader.GetChars%2A> returns the number of available characters in the field. Frequently this is the exact length of the field. However, the number returned may be less than the true length of the field if `GetChars` has already been used to obtain characters from the field. This may be the case, for example, if the <xref:System.Data.SqlClient.SqlDataReader> is reading a large data structure into a buffer. For more information, see the `SequentialAccess` setting for <xref:System.Data.CommandBehavior>.  \\n  \\n The actual number of characters read can be less than the requested length, if the end of the field is reached. If you pass a buffer that is `null`, <xref:System.Data.SqlClient.SqlDataReader.GetChars%2A> returns the length of the entire field in characters, not the remaining size based on the buffer offset parameter.  \\n  \\n No conversions are performed; therefore. the data retrieved must already be a character array.  \\n  \\n> [!NOTE]\\n>  The <xref:System.Data.SqlClient.SqlDataReader.GetChars%2A> method returns 0 when `dataIndex` is negative.\"\n  syntax:\n    content: public override long GetChars (int i, long dataIndex, char[] buffer, int bufferIndex, int length);\n    parameters:\n    - id: i\n      type: System.Int32\n      description: The zero-based column ordinal.\n    - id: dataIndex\n      type: System.Int64\n      description: The index within the field from which to begin the read operation.\n    - id: buffer\n      type: System.Char[]\n      description: The buffer into which to read the stream of bytes.\n    - id: bufferIndex\n      type: System.Int32\n      description: The index within the <code>buffer</code> where the write operation is to start.\n    - id: length\n      type: System.Int32\n      description: The maximum length to copy into the buffer.\n    return:\n      type: System.Int64\n      description: The actual number of characters read.\n  overload: System.Data.SqlClient.SqlDataReader.GetChars*\n  exceptions: []\n  version:\n  - netcore-1.0\n  - netcore-1.1\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  monikers:\n  - netcore-1.0\n  - netcore-1.1\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Data.SqlClient/SqlDataReader.xml\n  ms.technology:\n  - dotnet-ado\n  author: JennieHubbard\n  ms.author: jhubbard\n  manager: jhubbard\n- uid: System.Data.SqlClient.SqlDataReader.GetDataTypeName(System.Int32)\n  commentId: M:System.Data.SqlClient.SqlDataReader.GetDataTypeName(System.Int32)\n  id: GetDataTypeName(System.Int32)\n  parent: System.Data.SqlClient.SqlDataReader\n  langs:\n  - csharp\n  name: GetDataTypeName(Int32)\n  nameWithType: SqlDataReader.GetDataTypeName(Int32)\n  fullName: SqlDataReader.GetDataTypeName(Int32)\n  type: Method\n  assemblies:\n  - System.Data.SqlClient\n  - System.Data\n  - netstandard\n  namespace: System.Data.SqlClient\n  summary: Gets a string representing the data type of the specified column.\n  remarks: \"Returns the name of the back-end data type.  \\n  \\n `numeric` is a synonym in SQL Server for the `decimal` data type. `GetDataTypeName` will return \\\"decimal\\\" for a column defined as either decimal or numeric.\"\n  syntax:\n    content: public override string GetDataTypeName (int i);\n    parameters:\n    - id: i\n      type: System.Int32\n      description: The zero-based ordinal position of the column to find.\n    return:\n      type: System.String\n      description: The string representing the data type of the specified column.\n  overload: System.Data.SqlClient.SqlDataReader.GetDataTypeName*\n  exceptions: []\n  version:\n  - netcore-1.0\n  - netcore-1.1\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  monikers:\n  - netcore-1.0\n  - netcore-1.1\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Data.SqlClient/SqlDataReader.xml\n  ms.technology:\n  - dotnet-ado\n  author: JennieHubbard\n  ms.author: jhubbard\n  manager: jhubbard\n- uid: System.Data.SqlClient.SqlDataReader.GetDateTime(System.Int32)\n  commentId: M:System.Data.SqlClient.SqlDataReader.GetDateTime(System.Int32)\n  id: GetDateTime(System.Int32)\n  parent: System.Data.SqlClient.SqlDataReader\n  langs:\n  - csharp\n  name: GetDateTime(Int32)\n  nameWithType: SqlDataReader.GetDateTime(Int32)\n  fullName: SqlDataReader.GetDateTime(Int32)\n  type: Method\n  assemblies:\n  - System.Data.SqlClient\n  - System.Data\n  - netstandard\n  namespace: System.Data.SqlClient\n  summary: Gets the value of the specified column as a <xref href=\"System.DateTime\"></xref> object.\n  remarks: \"No conversions are performed; therefore, the data retrieved must already be a <xref:System.DateTime> object.  \\n  \\n Call <xref:System.Data.SqlClient.SqlDataReader.IsDBNull%2A> to check for null values before calling this method.\"\n  syntax:\n    content: public override DateTime GetDateTime (int i);\n    parameters:\n    - id: i\n      type: System.Int32\n      description: The zero-based column ordinal.\n    return:\n      type: System.DateTime\n      description: The value of the specified column.\n  overload: System.Data.SqlClient.SqlDataReader.GetDateTime*\n  exceptions:\n  - type: System.InvalidCastException\n    commentId: T:System.InvalidCastException\n    description: The specified cast is not valid.\n  version:\n  - netcore-1.0\n  - netcore-1.1\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  monikers:\n  - netcore-1.0\n  - netcore-1.1\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Data.SqlClient/SqlDataReader.xml\n  ms.technology:\n  - dotnet-ado\n  author: JennieHubbard\n  ms.author: jhubbard\n  manager: jhubbard\n- uid: System.Data.SqlClient.SqlDataReader.GetDateTimeOffset(System.Int32)\n  commentId: M:System.Data.SqlClient.SqlDataReader.GetDateTimeOffset(System.Int32)\n  id: GetDateTimeOffset(System.Int32)\n  parent: System.Data.SqlClient.SqlDataReader\n  langs:\n  - csharp\n  name: GetDateTimeOffset(Int32)\n  nameWithType: SqlDataReader.GetDateTimeOffset(Int32)\n  fullName: SqlDataReader.GetDateTimeOffset(Int32)\n  type: Method\n  assemblies:\n  - System.Data.SqlClient\n  - System.Data\n  - netstandard\n  namespace: System.Data.SqlClient\n  summary: Retrieves the value of the specified column as a <xref href=\"System.DateTimeOffset\"></xref> object.\n  remarks: \"No conversions are performed; therefore, the data retrieved must already be a <xref:System.DateTimeOffset> object.  \\n  \\n Call <xref:System.Data.SqlClient.SqlDataReader.IsDBNull%2A> to check for null values before calling this method.\"\n  syntax:\n    content: public virtual DateTimeOffset GetDateTimeOffset (int i);\n    parameters:\n    - id: i\n      type: System.Int32\n      description: The zero-based column ordinal.\n    return:\n      type: System.DateTimeOffset\n      description: The value of the specified column.\n  overload: System.Data.SqlClient.SqlDataReader.GetDateTimeOffset*\n  exceptions:\n  - type: System.InvalidCastException\n    commentId: T:System.InvalidCastException\n    description: The specified cast is not valid.\n  version:\n  - netcore-1.0\n  - netcore-1.1\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  monikers:\n  - netcore-1.0\n  - netcore-1.1\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Data.SqlClient/SqlDataReader.xml\n  ms.technology:\n  - dotnet-ado\n  author: JennieHubbard\n  ms.author: jhubbard\n  manager: jhubbard\n- uid: System.Data.SqlClient.SqlDataReader.GetDecimal(System.Int32)\n  commentId: M:System.Data.SqlClient.SqlDataReader.GetDecimal(System.Int32)\n  id: GetDecimal(System.Int32)\n  parent: System.Data.SqlClient.SqlDataReader\n  langs:\n  - csharp\n  name: GetDecimal(Int32)\n  nameWithType: SqlDataReader.GetDecimal(Int32)\n  fullName: SqlDataReader.GetDecimal(Int32)\n  type: Method\n  assemblies:\n  - System.Data.SqlClient\n  - System.Data\n  - netstandard\n  namespace: System.Data.SqlClient\n  summary: Gets the value of the specified column as a <xref href=\"System.Decimal\"></xref> object.\n  remarks: \"No conversions are performed; therefore, the data retrieved must already be a <xref:System.Decimal> object.  \\n  \\n Call <xref:System.Data.SqlClient.SqlDataReader.IsDBNull%2A> to check for null values before calling this method.\"\n  syntax:\n    content: public override decimal GetDecimal (int i);\n    parameters:\n    - id: i\n      type: System.Int32\n      description: The zero-based column ordinal.\n    return:\n      type: System.Decimal\n      description: The value of the specified column.\n  overload: System.Data.SqlClient.SqlDataReader.GetDecimal*\n  exceptions:\n  - type: System.InvalidCastException\n    commentId: T:System.InvalidCastException\n    description: The specified cast is not valid.\n  version:\n  - netcore-1.0\n  - netcore-1.1\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  monikers:\n  - netcore-1.0\n  - netcore-1.1\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Data.SqlClient/SqlDataReader.xml\n  ms.technology:\n  - dotnet-ado\n  author: JennieHubbard\n  ms.author: jhubbard\n  manager: jhubbard\n- uid: System.Data.SqlClient.SqlDataReader.GetDouble(System.Int32)\n  commentId: M:System.Data.SqlClient.SqlDataReader.GetDouble(System.Int32)\n  id: GetDouble(System.Int32)\n  parent: System.Data.SqlClient.SqlDataReader\n  langs:\n  - csharp\n  name: GetDouble(Int32)\n  nameWithType: SqlDataReader.GetDouble(Int32)\n  fullName: SqlDataReader.GetDouble(Int32)\n  type: Method\n  assemblies:\n  - System.Data.SqlClient\n  - System.Data\n  - netstandard\n  namespace: System.Data.SqlClient\n  summary: Gets the value of the specified column as a double-precision floating point number.\n  remarks: \"No conversions are performed. Therefore, the data retrieved must already be a double-precision floating point number.  \\n  \\n Call <xref:System.Data.SqlClient.SqlDataReader.IsDBNull%2A> to check for null values before calling this method.\"\n  syntax:\n    content: public override double GetDouble (int i);\n    parameters:\n    - id: i\n      type: System.Int32\n      description: The zero-based column ordinal.\n    return:\n      type: System.Double\n      description: The value of the specified column.\n  overload: System.Data.SqlClient.SqlDataReader.GetDouble*\n  exceptions:\n  - type: System.InvalidCastException\n    commentId: T:System.InvalidCastException\n    description: The specified cast is not valid.\n  version:\n  - netcore-1.0\n  - netcore-1.1\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  monikers:\n  - netcore-1.0\n  - netcore-1.1\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Data.SqlClient/SqlDataReader.xml\n  ms.technology:\n  - dotnet-ado\n  author: JennieHubbard\n  ms.author: jhubbard\n  manager: jhubbard\n- uid: System.Data.SqlClient.SqlDataReader.GetEnumerator\n  commentId: M:System.Data.SqlClient.SqlDataReader.GetEnumerator\n  id: GetEnumerator\n  parent: System.Data.SqlClient.SqlDataReader\n  langs:\n  - csharp\n  name: GetEnumerator()\n  nameWithType: SqlDataReader.GetEnumerator()\n  fullName: SqlDataReader.GetEnumerator()\n  type: Method\n  assemblies:\n  - System.Data.SqlClient\n  - System.Data\n  - netstandard\n  namespace: System.Data.SqlClient\n  summary: Returns an <xref href=\"System.Collections.IEnumerator\"></xref> that iterates through the <xref href=\"System.Data.SqlClient.SqlDataReader\"></xref>.\n  remarks: Although you can use this method to retrieve an explicit enumerator, in languages that support a `foreach` construct, it is simpler to use the looping construct directly in order to iterate through the rows in the data reader.\n  syntax:\n    content: public override System.Collections.IEnumerator GetEnumerator ();\n    parameters: []\n    return:\n      type: System.Collections.IEnumerator\n      description: An <xref href=\"System.Collections.IEnumerator\"></xref> for the <xref href=\"System.Data.SqlClient.SqlDataReader\"></xref>.\n  overload: System.Data.SqlClient.SqlDataReader.GetEnumerator*\n  exceptions: []\n  version:\n  - netcore-1.0\n  - netcore-1.1\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  monikers:\n  - netcore-1.0\n  - netcore-1.1\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Data.SqlClient/SqlDataReader.xml\n  ms.technology:\n  - dotnet-ado\n  author: JennieHubbard\n  ms.author: jhubbard\n  manager: jhubbard\n- uid: System.Data.SqlClient.SqlDataReader.GetFieldType(System.Int32)\n  commentId: M:System.Data.SqlClient.SqlDataReader.GetFieldType(System.Int32)\n  id: GetFieldType(System.Int32)\n  parent: System.Data.SqlClient.SqlDataReader\n  langs:\n  - csharp\n  name: GetFieldType(Int32)\n  nameWithType: SqlDataReader.GetFieldType(Int32)\n  fullName: SqlDataReader.GetFieldType(Int32)\n  type: Method\n  assemblies:\n  - System.Data.SqlClient\n  - System.Data\n  - netstandard\n  namespace: System.Data.SqlClient\n  summary: Gets the <xref href=\"System.Type\"></xref> that is the data type of the object.\n  syntax:\n    content: public override Type GetFieldType (int i);\n    parameters:\n    - id: i\n      type: System.Int32\n      description: The zero-based column ordinal.\n    return:\n      type: System.Type\n      description: The <xref href=\"System.Type\"></xref> that is the data type of the object. If the type does not exist on the client, in the case of a User-Defined Type (UDT) returned from the database, **GetFieldType** returns null.\n  overload: System.Data.SqlClient.SqlDataReader.GetFieldType*\n  exceptions: []\n  version:\n  - netcore-1.0\n  - netcore-1.1\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  monikers:\n  - netcore-1.0\n  - netcore-1.1\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Data.SqlClient/SqlDataReader.xml\n  ms.technology:\n  - dotnet-ado\n  author: JennieHubbard\n  ms.author: jhubbard\n  manager: jhubbard\n- uid: System.Data.SqlClient.SqlDataReader.GetFieldValue``1(System.Int32)\n  commentId: M:System.Data.SqlClient.SqlDataReader.GetFieldValue``1(System.Int32)\n  id: GetFieldValue``1(System.Int32)\n  parent: System.Data.SqlClient.SqlDataReader\n  langs:\n  - csharp\n  name: GetFieldValue<T>(Int32)\n  nameWithType: SqlDataReader.GetFieldValue<T>(Int32)\n  fullName: SqlDataReader.GetFieldValue<T>(Int32)\n  type: Method\n  assemblies:\n  - System.Data.SqlClient\n  - System.Data\n  - netstandard\n  namespace: System.Data.SqlClient\n  summary: Synchronously gets the value of the specified column as a type. <xref href=\"System.Data.SqlClient.SqlDataReader.GetFieldValueAsync``1(System.Int32,System.Threading.CancellationToken)\"></xref> is the asynchronous version of this method.\n  remarks: \"`T` can be one of the following types:  \\n  \\n|||||  \\n|-|-|-|-|  \\n|Boolean|Byte|Char|DateTime|  \\n|DateTimeOffset|Decimal|Double|Float|  \\n|Guid|Int16|Int32|Int64|  \\n|SqlBoolean|SqlByte|SqlDateTime|SqlDecimal|  \\n|SqlDouble|SqlGuid|SqlInt16|SqlInt32|  \\n|SqlInt64|SqlMoney|SqlSingle|SqlString|  \\n|String|UDT, which can be any CLR type marked with <xref:Microsoft.SqlServer.Server.SqlUserDefinedTypeAttribute>.|||  \\n  \\n For more information, see [SqlClient Streaming Support](~/docs/framework/data/adonet/sqlclient-streaming-support.md).\"\n  syntax:\n    content: public override T GetFieldValue<T> (int i);\n    parameters:\n    - id: i\n      type: System.Int32\n      description: The column to be retrieved.\n    typeParameters:\n    - id: T\n      description: The type of the value to be returned.\n    return:\n      type: T\n      description: The returned type object.\n  overload: System.Data.SqlClient.SqlDataReader.GetFieldValue``1*\n  exceptions:\n  - type: System.InvalidOperationException\n    commentId: T:System.InvalidOperationException\n    description: \"The connection drops or is closed during the data retrieval.  \\n  \\n The <xref href=\\\"System.Data.SqlClient.SqlDataReader\\\"></xref> is closed during the data retrieval.  \\n  \\n There is no data ready to be read (for example, the first <xref href=\\\"System.Data.SqlClient.SqlDataReader.Read\\\"></xref> hasn't been called, or returned false).  \\n  \\n Tried to read a previously-read column in sequential mode.  \\n  \\n There was an asynchronous operation in progress. This applies to all Get* methods when running in sequential mode, as they could be called while reading a stream.\"\n  - type: System.IndexOutOfRangeException\n    commentId: T:System.IndexOutOfRangeException\n    description: Trying to read a column that does not exist.\n  - type: System.Data.SqlTypes.SqlNullValueException\n    commentId: T:System.Data.SqlTypes.SqlNullValueException\n    description: The value of the column was null (<xref href=\"System.Data.SqlClient.SqlDataReader.IsDBNull(System.Int32)\"></xref> == `true`), retrieving a non-SQL type.\n  - type: System.InvalidCastException\n    commentId: T:System.InvalidCastException\n    description: <code>T</code> doesn’t match the type returned by [!INCLUDE[ssNoVersion](~/includes/ssnoversion-md.md)] or cannot be cast.\n  version:\n  - netcore-1.0\n  - netcore-1.1\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  monikers:\n  - netcore-1.0\n  - netcore-1.1\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Data.SqlClient/SqlDataReader.xml\n  ms.technology:\n  - dotnet-ado\n  author: JennieHubbard\n  ms.author: jhubbard\n  manager: jhubbard\n- uid: System.Data.SqlClient.SqlDataReader.GetFieldValueAsync``1(System.Int32,System.Threading.CancellationToken)\n  commentId: M:System.Data.SqlClient.SqlDataReader.GetFieldValueAsync``1(System.Int32,System.Threading.CancellationToken)\n  id: GetFieldValueAsync``1(System.Int32,System.Threading.CancellationToken)\n  parent: System.Data.SqlClient.SqlDataReader\n  langs:\n  - csharp\n  name: GetFieldValueAsync<T>(Int32, CancellationToken)\n  nameWithType: SqlDataReader.GetFieldValueAsync<T>(Int32, CancellationToken)\n  fullName: SqlDataReader.GetFieldValueAsync<T>(Int32, CancellationToken)\n  type: Method\n  assemblies:\n  - System.Data.SqlClient\n  - System.Data\n  - netstandard\n  namespace: System.Data.SqlClient\n  summary: Asynchronously gets the value of the specified column as a type. <xref href=\"System.Data.SqlClient.SqlDataReader.GetFieldValue``1(System.Int32)\"></xref> is the synchronous version of this method.\n  remarks: \"`T` can be one of the following types:  \\n  \\n|||||  \\n|-|-|-|-|  \\n|Boolean|Byte|Char|DateTime|  \\n|DateTimeOffset|Decimal|Double|Float|  \\n|Guid|Int16|Int32|Int64|  \\n|SqlBoolean|SqlByte|SqlDateTime|SqlDecimal|  \\n|SqlDouble|SqlGuid|SqlInt16|SqlInt32|  \\n|SqlInt64|SqlMoney|SqlSingle|SqlString|  \\n|String|UDT, which can be any CLR type marked with <xref:Microsoft.SqlServer.Server.SqlUserDefinedTypeAttribute>.|||  \\n  \\n For more information, see [SqlClient Streaming Support](~/docs/framework/data/adonet/sqlclient-streaming-support.md).\"\n  syntax:\n    content: public override System.Threading.Tasks.Task<T> GetFieldValueAsync<T> (int i, System.Threading.CancellationToken cancellationToken);\n    parameters:\n    - id: i\n      type: System.Int32\n      description: The column to be retrieved.\n    - id: cancellationToken\n      type: System.Threading.CancellationToken\n      description: The cancellation instruction, which propagates a notification that operations should be canceled. This does not guarantee the cancellation. A setting of `CancellationToken.None` makes this method equivalent to <xref href=\"System.Data.SqlClient.SqlDataReader.IsDBNull(System.Int32)\"></xref>. The returned task must be marked as cancelled.\n    typeParameters:\n    - id: T\n      description: The type of the value to be returned.\n    return:\n      type: System.Threading.Tasks.Task{T}\n      description: The returned type object.\n  overload: System.Data.SqlClient.SqlDataReader.GetFieldValueAsync``1*\n  exceptions:\n  - type: System.InvalidOperationException\n    commentId: T:System.InvalidOperationException\n    description: \"The connection drops or is closed during the data retrieval.  \\n  \\n The <xref href=\\\"System.Data.SqlClient.SqlDataReader\\\"></xref> is closed during the data retrieval.  \\n  \\n There is no data ready to be read (for example, the first <xref href=\\\"System.Data.SqlClient.SqlDataReader.Read\\\"></xref> hasn't been called, or returned false).  \\n  \\n Tried to read a previously-read column in sequential mode.  \\n  \\n There was an asynchronous operation in progress. This applies to all Get* methods when running in sequential mode, as they could be called while reading a stream.  \\n  \\n `Context Connection=true` is specified in the connection string.\"\n  - type: System.IndexOutOfRangeException\n    commentId: T:System.IndexOutOfRangeException\n    description: Trying to read a column that does not exist.\n  - type: System.Data.SqlTypes.SqlNullValueException\n    commentId: T:System.Data.SqlTypes.SqlNullValueException\n    description: The value of the column was null (<xref href=\"System.Data.SqlClient.SqlDataReader.IsDBNull(System.Int32)\"></xref> == `true`), retrieving a non-SQL type.\n  - type: System.InvalidCastException\n    commentId: T:System.InvalidCastException\n    description: <code>T</code> doesn’t match the type returned by [!INCLUDE[ssNoVersion](~/includes/ssnoversion-md.md)] or cannot be cast.\n  version:\n  - netcore-1.0\n  - netcore-1.1\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  monikers:\n  - netcore-1.0\n  - netcore-1.1\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Data.SqlClient/SqlDataReader.xml\n  ms.technology:\n  - dotnet-ado\n  author: JennieHubbard\n  ms.author: jhubbard\n  manager: jhubbard\n- uid: System.Data.SqlClient.SqlDataReader.GetFloat(System.Int32)\n  commentId: M:System.Data.SqlClient.SqlDataReader.GetFloat(System.Int32)\n  id: GetFloat(System.Int32)\n  parent: System.Data.SqlClient.SqlDataReader\n  langs:\n  - csharp\n  name: GetFloat(Int32)\n  nameWithType: SqlDataReader.GetFloat(Int32)\n  fullName: SqlDataReader.GetFloat(Int32)\n  type: Method\n  assemblies:\n  - System.Data.SqlClient\n  - System.Data\n  - netstandard\n  namespace: System.Data.SqlClient\n  summary: Gets the value of the specified column as a single-precision floating point number.\n  remarks: \"No conversions are performed. Therefore, the data retrieved must already be a single-precision floating point number.  \\n  \\n Call <xref:System.Data.SqlClient.SqlDataReader.IsDBNull%2A> to check for null values before calling this method.\"\n  syntax:\n    content: public override float GetFloat (int i);\n    parameters:\n    - id: i\n      type: System.Int32\n      description: The zero-based column ordinal.\n    return:\n      type: System.Single\n      description: The value of the specified column.\n  overload: System.Data.SqlClient.SqlDataReader.GetFloat*\n  exceptions:\n  - type: System.InvalidCastException\n    commentId: T:System.InvalidCastException\n    description: The specified cast is not valid.\n  version:\n  - netcore-1.0\n  - netcore-1.1\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  monikers:\n  - netcore-1.0\n  - netcore-1.1\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Data.SqlClient/SqlDataReader.xml\n  ms.technology:\n  - dotnet-ado\n  author: JennieHubbard\n  ms.author: jhubbard\n  manager: jhubbard\n- uid: System.Data.SqlClient.SqlDataReader.GetGuid(System.Int32)\n  commentId: M:System.Data.SqlClient.SqlDataReader.GetGuid(System.Int32)\n  id: GetGuid(System.Int32)\n  parent: System.Data.SqlClient.SqlDataReader\n  langs:\n  - csharp\n  name: GetGuid(Int32)\n  nameWithType: SqlDataReader.GetGuid(Int32)\n  fullName: SqlDataReader.GetGuid(Int32)\n  type: Method\n  assemblies:\n  - System.Data.SqlClient\n  - System.Data\n  - netstandard\n  namespace: System.Data.SqlClient\n  summary: Gets the value of the specified column as a globally unique identifier (GUID).\n  remarks: \"No conversions are performed; therefore, the data retrieved must already be a GUID.  \\n  \\n Call <xref:System.Data.SqlClient.SqlDataReader.IsDBNull%2A> to check for null values before calling this method.\"\n  syntax:\n    content: public override Guid GetGuid (int i);\n    parameters:\n    - id: i\n      type: System.Int32\n      description: The zero-based column ordinal.\n    return:\n      type: System.Guid\n      description: The value of the specified column.\n  overload: System.Data.SqlClient.SqlDataReader.GetGuid*\n  exceptions:\n  - type: System.InvalidCastException\n    commentId: T:System.InvalidCastException\n    description: The specified cast is not valid.\n  version:\n  - netcore-1.0\n  - netcore-1.1\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  monikers:\n  - netcore-1.0\n  - netcore-1.1\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Data.SqlClient/SqlDataReader.xml\n  ms.technology:\n  - dotnet-ado\n  author: JennieHubbard\n  ms.author: jhubbard\n  manager: jhubbard\n- uid: System.Data.SqlClient.SqlDataReader.GetInt16(System.Int32)\n  commentId: M:System.Data.SqlClient.SqlDataReader.GetInt16(System.Int32)\n  id: GetInt16(System.Int32)\n  parent: System.Data.SqlClient.SqlDataReader\n  langs:\n  - csharp\n  name: GetInt16(Int32)\n  nameWithType: SqlDataReader.GetInt16(Int32)\n  fullName: SqlDataReader.GetInt16(Int32)\n  type: Method\n  assemblies:\n  - System.Data.SqlClient\n  - System.Data\n  - netstandard\n  namespace: System.Data.SqlClient\n  summary: Gets the value of the specified column as a 16-bit signed integer.\n  remarks: \"No conversions are performed; therefore, the data retrieved must already be a 16-bit signed integer.  \\n  \\n Call <xref:System.Data.SqlClient.SqlDataReader.IsDBNull%2A> to check for null values before calling this method.\"\n  syntax:\n    content: public override short GetInt16 (int i);\n    parameters:\n    - id: i\n      type: System.Int32\n      description: The zero-based column ordinal.\n    return:\n      type: System.Int16\n      description: The value of the specified column.\n  overload: System.Data.SqlClient.SqlDataReader.GetInt16*\n  exceptions:\n  - type: System.InvalidCastException\n    commentId: T:System.InvalidCastException\n    description: The specified cast is not valid.\n  version:\n  - netcore-1.0\n  - netcore-1.1\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  monikers:\n  - netcore-1.0\n  - netcore-1.1\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Data.SqlClient/SqlDataReader.xml\n  ms.technology:\n  - dotnet-ado\n  author: JennieHubbard\n  ms.author: jhubbard\n  manager: jhubbard\n- uid: System.Data.SqlClient.SqlDataReader.GetInt32(System.Int32)\n  commentId: M:System.Data.SqlClient.SqlDataReader.GetInt32(System.Int32)\n  id: GetInt32(System.Int32)\n  parent: System.Data.SqlClient.SqlDataReader\n  langs:\n  - csharp\n  name: GetInt32(Int32)\n  nameWithType: SqlDataReader.GetInt32(Int32)\n  fullName: SqlDataReader.GetInt32(Int32)\n  type: Method\n  assemblies:\n  - System.Data.SqlClient\n  - System.Data\n  - netstandard\n  namespace: System.Data.SqlClient\n  summary: Gets the value of the specified column as a 32-bit signed integer.\n  remarks: \"No conversions are performed; therefore, the data retrieved must already be a 32-bit signed integer.  \\n  \\n Call <xref:System.Data.SqlClient.SqlDataReader.IsDBNull%2A> to check for null values before calling this method.\"\n  syntax:\n    content: public override int GetInt32 (int i);\n    parameters:\n    - id: i\n      type: System.Int32\n      description: The zero-based column ordinal.\n    return:\n      type: System.Int32\n      description: The value of the specified column.\n  overload: System.Data.SqlClient.SqlDataReader.GetInt32*\n  exceptions:\n  - type: System.InvalidCastException\n    commentId: T:System.InvalidCastException\n    description: The specified cast is not valid.\n  version:\n  - netcore-1.0\n  - netcore-1.1\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  monikers:\n  - netcore-1.0\n  - netcore-1.1\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Data.SqlClient/SqlDataReader.xml\n  ms.technology:\n  - dotnet-ado\n  author: JennieHubbard\n  ms.author: jhubbard\n  manager: jhubbard\n- uid: System.Data.SqlClient.SqlDataReader.GetInt64(System.Int32)\n  commentId: M:System.Data.SqlClient.SqlDataReader.GetInt64(System.Int32)\n  id: GetInt64(System.Int32)\n  parent: System.Data.SqlClient.SqlDataReader\n  langs:\n  - csharp\n  name: GetInt64(Int32)\n  nameWithType: SqlDataReader.GetInt64(Int32)\n  fullName: SqlDataReader.GetInt64(Int32)\n  type: Method\n  assemblies:\n  - System.Data.SqlClient\n  - System.Data\n  - netstandard\n  namespace: System.Data.SqlClient\n  summary: Gets the value of the specified column as a 64-bit signed integer.\n  remarks: \"No conversions are performed; therefore, the data retrieved must already be a 64-bit signed integer.  \\n  \\n Call <xref:System.Data.SqlClient.SqlDataReader.IsDBNull%2A> to check for null values before calling this method.\"\n  syntax:\n    content: public override long GetInt64 (int i);\n    parameters:\n    - id: i\n      type: System.Int32\n      description: The zero-based column ordinal.\n    return:\n      type: System.Int64\n      description: The value of the specified column.\n  overload: System.Data.SqlClient.SqlDataReader.GetInt64*\n  exceptions:\n  - type: System.InvalidCastException\n    commentId: T:System.InvalidCastException\n    description: The specified cast is not valid.\n  version:\n  - netcore-1.0\n  - netcore-1.1\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  monikers:\n  - netcore-1.0\n  - netcore-1.1\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Data.SqlClient/SqlDataReader.xml\n  ms.technology:\n  - dotnet-ado\n  author: JennieHubbard\n  ms.author: jhubbard\n  manager: jhubbard\n- uid: System.Data.SqlClient.SqlDataReader.GetName(System.Int32)\n  commentId: M:System.Data.SqlClient.SqlDataReader.GetName(System.Int32)\n  id: GetName(System.Int32)\n  parent: System.Data.SqlClient.SqlDataReader\n  langs:\n  - csharp\n  name: GetName(Int32)\n  nameWithType: SqlDataReader.GetName(Int32)\n  fullName: SqlDataReader.GetName(Int32)\n  type: Method\n  assemblies:\n  - System.Data.SqlClient\n  - System.Data\n  - netstandard\n  namespace: System.Data.SqlClient\n  summary: Gets the name of the specified column.\n  syntax:\n    content: public override string GetName (int i);\n    parameters:\n    - id: i\n      type: System.Int32\n      description: The zero-based column ordinal.\n    return:\n      type: System.String\n      description: The name of the specified column.\n  overload: System.Data.SqlClient.SqlDataReader.GetName*\n  exceptions: []\n  version:\n  - netcore-1.0\n  - netcore-1.1\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  monikers:\n  - netcore-1.0\n  - netcore-1.1\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Data.SqlClient/SqlDataReader.xml\n  ms.technology:\n  - dotnet-ado\n  author: JennieHubbard\n  ms.author: jhubbard\n  manager: jhubbard\n- uid: System.Data.SqlClient.SqlDataReader.GetOrdinal(System.String)\n  commentId: M:System.Data.SqlClient.SqlDataReader.GetOrdinal(System.String)\n  id: GetOrdinal(System.String)\n  parent: System.Data.SqlClient.SqlDataReader\n  langs:\n  - csharp\n  name: GetOrdinal(String)\n  nameWithType: SqlDataReader.GetOrdinal(String)\n  fullName: SqlDataReader.GetOrdinal(String)\n  type: Method\n  assemblies:\n  - System.Data.SqlClient\n  - System.Data\n  - netstandard\n  namespace: System.Data.SqlClient\n  summary: Gets the column ordinal, given the name of the column.\n  remarks: \"`GetOrdinal` performs a case-sensitive lookup first. If it fails, a second, case-insensitive search occurs (a case-insensitive comparison is done using the database collation). Unexpected results can occur when comparisons are affected by culture-specific casing rules. For example, in Turkish, the following example yields the wrong results because the file system in Turkish does not use linguistic casing rules for the letter 'i' in \\\"file\\\". The method throws an `IndexOutOfRange` exception if the zero-based column ordinal is not found.  \\n  \\n `GetOrdinal` is kana-width insensitive.  \\n  \\n Because ordinal-based lookups are more efficient than named lookups, it is inefficient to call `GetOrdinal` within a loop. Save time by calling `GetOrdinal` once and assigning the results to an integer variable for use within the loop.\"\n  example:\n  - \"The following example demonstrates how to use the <xref:System.Data.SqlClient.SqlDataReader.GetOrdinal%2A> method.  \\n  \\n [!code-csharp[Classic WebData SqlDataReader.GetOrdinal#1](~/samples/snippets/csharp/VS_Snippets_ADO.NET/Classic WebData SqlDataReader.GetOrdinal/CS/source.cs#1)]\\n [!code-vb[Classic WebData SqlDataReader.GetOrdinal#1](~/samples/snippets/visualbasic/VS_Snippets_ADO.NET/Classic WebData SqlDataReader.GetOrdinal/VB/source.vb#1)]\"\n  syntax:\n    content: public override int GetOrdinal (string name);\n    parameters:\n    - id: name\n      type: System.String\n      description: The name of the column.\n    return:\n      type: System.Int32\n      description: The zero-based column ordinal.\n  overload: System.Data.SqlClient.SqlDataReader.GetOrdinal*\n  exceptions:\n  - type: System.IndexOutOfRangeException\n    commentId: T:System.IndexOutOfRangeException\n    description: The name specified is not a valid column name.\n  version:\n  - netcore-1.0\n  - netcore-1.1\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  monikers:\n  - netcore-1.0\n  - netcore-1.1\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Data.SqlClient/SqlDataReader.xml\n  ms.technology:\n  - dotnet-ado\n  author: JennieHubbard\n  ms.author: jhubbard\n  manager: jhubbard\n- uid: System.Data.SqlClient.SqlDataReader.GetProviderSpecificFieldType(System.Int32)\n  commentId: M:System.Data.SqlClient.SqlDataReader.GetProviderSpecificFieldType(System.Int32)\n  id: GetProviderSpecificFieldType(System.Int32)\n  parent: System.Data.SqlClient.SqlDataReader\n  langs:\n  - csharp\n  name: GetProviderSpecificFieldType(Int32)\n  nameWithType: SqlDataReader.GetProviderSpecificFieldType(Int32)\n  fullName: SqlDataReader.GetProviderSpecificFieldType(Int32)\n  type: Method\n  assemblies:\n  - System.Data.SqlClient\n  - System.Data\n  - netstandard\n  namespace: System.Data.SqlClient\n  summary: Gets an `Object` that is a representation of the underlying provider-specific field type.\n  syntax:\n    content: public override Type GetProviderSpecificFieldType (int i);\n    parameters:\n    - id: i\n      type: System.Int32\n      description: An <xref href=\"System.Int32\"></xref> representing the column ordinal.\n    return:\n      type: System.Type\n      description: Gets an <xref href=\"System.Object\"></xref> that is a representation of the underlying provider-specific field type.\n  overload: System.Data.SqlClient.SqlDataReader.GetProviderSpecificFieldType*\n  exceptions: []\n  version:\n  - netcore-1.0\n  - netcore-1.1\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  monikers:\n  - netcore-1.0\n  - netcore-1.1\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Data.SqlClient/SqlDataReader.xml\n  ms.technology:\n  - dotnet-ado\n  author: JennieHubbard\n  ms.author: jhubbard\n  manager: jhubbard\n- uid: System.Data.SqlClient.SqlDataReader.GetProviderSpecificValue(System.Int32)\n  commentId: M:System.Data.SqlClient.SqlDataReader.GetProviderSpecificValue(System.Int32)\n  id: GetProviderSpecificValue(System.Int32)\n  parent: System.Data.SqlClient.SqlDataReader\n  langs:\n  - csharp\n  name: GetProviderSpecificValue(Int32)\n  nameWithType: SqlDataReader.GetProviderSpecificValue(Int32)\n  fullName: SqlDataReader.GetProviderSpecificValue(Int32)\n  type: Method\n  assemblies:\n  - System.Data.SqlClient\n  - System.Data\n  - netstandard\n  namespace: System.Data.SqlClient\n  summary: Gets an `Object` that is a representation of the underlying provider specific value.\n  syntax:\n    content: public override object GetProviderSpecificValue (int i);\n    parameters:\n    - id: i\n      type: System.Int32\n      description: An <xref href=\"System.Int32\"></xref> representing the column ordinal.\n    return:\n      type: System.Object\n      description: An <xref href=\"System.Object\"></xref> that is a representation of the underlying provider specific value.\n  overload: System.Data.SqlClient.SqlDataReader.GetProviderSpecificValue*\n  exceptions: []\n  version:\n  - netcore-1.0\n  - netcore-1.1\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  monikers:\n  - netcore-1.0\n  - netcore-1.1\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Data.SqlClient/SqlDataReader.xml\n  ms.technology:\n  - dotnet-ado\n  author: JennieHubbard\n  ms.author: jhubbard\n  manager: jhubbard\n- uid: System.Data.SqlClient.SqlDataReader.GetProviderSpecificValues(System.Object[])\n  commentId: M:System.Data.SqlClient.SqlDataReader.GetProviderSpecificValues(System.Object[])\n  id: GetProviderSpecificValues(System.Object[])\n  parent: System.Data.SqlClient.SqlDataReader\n  langs:\n  - csharp\n  name: GetProviderSpecificValues(Object[])\n  nameWithType: SqlDataReader.GetProviderSpecificValues(Object[])\n  fullName: SqlDataReader.GetProviderSpecificValues(Object[])\n  type: Method\n  assemblies:\n  - System.Data.SqlClient\n  - System.Data\n  - netstandard\n  namespace: System.Data.SqlClient\n  summary: Gets an array of objects that are a representation of the underlying provider specific values.\n  syntax:\n    content: public override int GetProviderSpecificValues (object[] values);\n    parameters:\n    - id: values\n      type: System.Object[]\n      description: An array of <xref href=\"System.Object\"></xref> into which to copy the column values.\n    return:\n      type: System.Int32\n      description: The array of objects that are a representation of the underlying provider specific values.\n  overload: System.Data.SqlClient.SqlDataReader.GetProviderSpecificValues*\n  exceptions: []\n  version:\n  - netcore-1.0\n  - netcore-1.1\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  monikers:\n  - netcore-1.0\n  - netcore-1.1\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Data.SqlClient/SqlDataReader.xml\n  ms.technology:\n  - dotnet-ado\n  author: JennieHubbard\n  ms.author: jhubbard\n  manager: jhubbard\n- uid: System.Data.SqlClient.SqlDataReader.GetSchemaTable\n  commentId: M:System.Data.SqlClient.SqlDataReader.GetSchemaTable\n  id: GetSchemaTable\n  parent: System.Data.SqlClient.SqlDataReader\n  langs:\n  - csharp\n  name: GetSchemaTable()\n  nameWithType: SqlDataReader.GetSchemaTable()\n  fullName: SqlDataReader.GetSchemaTable()\n  type: Method\n  assemblies:\n  - System.Data\n  namespace: System.Data.SqlClient\n  summary: Returns a <xref href=\"System.Data.DataTable\"></xref> that describes the column metadata of the <xref href=\"System.Data.SqlClient.SqlDataReader\"></xref>.\n  remarks: \"For the <xref:System.Data.SqlClient.SqlDataReader.GetSchemaTable%2A> method returns metadata about each column in the following order:  \\n  \\n|DataReader column|Description|  \\n|-----------------------|-----------------|  \\n|AllowDBNull|Set if the consumer can set the column to a null value or if the provider cannot determine whether the consumer can set the column to a null value. Otherwise, not set. A column may contain null values, even if it cannot be set to a null value.|  \\n|BaseCatalogName|The name of the catalog in the data store that contains the column. NULL if the base catalog name cannot be determined. The default of this column is a null value.|  \\n|BaseColumnName|The name of the column in the data store. This might be different than the column name returned in the ColumnName column if an alias was used. A null value if the base column name cannot be determined or if the rowset column is derived, but not identical to, a column in the data store. The default of this column is a null value.|  \\n|BaseSchemaName|The name of the schema in the data store that contains the column. A null value if the base schema name cannot be determined. The default of this column is a null value.|  \\n|BaseServerName|The name of the instance of Microsoft SQL Server used by the <xref:System.Data.SqlClient.SqlDataReader>.|  \\n|BaseTableName|The name of the table or view in the data store that contains the column. A null value if the base table name cannot be determined. The default of this column is a null value.|  \\n|ColumnName|The name of the column; this might not be unique. If this cannot be determined, a null value is returned. This name always reflects the most recent renaming of the column in the current view or command text.|  \\n|ColumnOrdinal|The zero-based ordinal of the column. This column cannot contain a null value.|  \\n|ColumnSize|The maximum possible length of a value in the column. For columns that use a fixed-length data type, this is the size of the data type. For `nvarchar(MAX)`, `varchar(MAX)`, and `varbinary(MAX)` columns stored in a SQL Server database, the maximum size is 2GB. If these columns are stored and accessed as files, the limit on maximum size is imposed by the file system. This value changes when using the `Type System Version` keyword in the connection string.  For new types they are represented as downlevel types. The MAX data types return the normal 4k for `nvarchar` and 8000 for `varchar`. For more information, see the Transact-SQL reference in SQL Server Books Online.|  \\n|DataTypeName|Returns a string representing the data type of the specified column.|  \\n|IsAliased|`true`: The column name is an alias.<br /><br /> `false`: The column name is not an alias.|  \\n|IsAutoIncrement|`true`: The column assigns values to new rows in fixed increments.<br /><br /> `false`: The column does not assign values to new rows in fixed increments. The default of this column is `false`.|  \\n|IsColumnSet|`true`: The column is a sparse column that is a member of a column set.|  \\n|IsExpression|`true`: The column is an expression.<br /><br /> `false`: The column is not an expression.|  \\n|IsHidden|`true`: The column is hidden.<br /><br /> `false`: The column is not hidden.|  \\n|IsIdentity|`true`: The column is an identity column.<br /><br /> `false`: The column is not an identity column.|  \\n|IsKey|`true`: The column is one of a set of columns in the rowset that, taken together, uniquely identify the row. The set of columns with `IsKey` set to `true` must uniquely identify a row in the rowset. There is no requirement that this set of columns is a minimal set of columns. This set of columns may be generated from a base table primary key, a unique constraint or a unique index.<br /><br /> `false`: The column is not required to uniquely identify the row.|  \\n|IsLong|`true`: The column contains a Binary Long Object (BLOB) that contains very long data. The definition of very long data is provider-specific.<br /><br /> `false`: The column does not contain a Binary Long Object (BLOB) that contains very long data.|  \\n|IsReadOnly|`true`: The column cannot be modified.<br /><br /> `false`: The column can be modified.|  \\n|IsRowVersion|`true`: The column contains a persistent row identifier that cannot be written to, and has no meaningful value except to identity the row.<br /><br /> `false`: The column does not contain a persistent row identifier that cannot be written to, and has no meaningful value except to identity the row.|  \\n|IsUnique|`true`: Column is of type `timestamp`.<br /><br /> `false`: Column is not of type `timestamp`.|  \\n|NonVersionedProviderType|The type of the column irrespective of the current `Type System Version` specified in the connection string. The returned value is from the <xref:System.Data.SqlDbType> enumeration.|  \\n|NumericPrecision|If `ProviderType` is a numeric data type, this is the maximum precision of the column. The precision depends on the definition of the column. If `ProviderType` is not a numeric data type, this is 255.|  \\n|NumericScale|If `ProviderType` is DBTYPE_DECIMAL or DBTYPE_NUMERIC, the number of digits to the right of the decimal point. Otherwise, this is 255.|  \\n|ProviderSpecificDataType|Returns the provider-specific data type of the column based on the `Type System Version` keyword in the connection string.|  \\n|ProviderType|The indicator of the column's data type. If the data type of the column varies from row to row, this must be Object. This column cannot contain a null value.|  \\n|UdtAssemblyQualifiedName|If the column is a user-defined type (UDT), this is the qualified name of the UDT's assembly as per <xref:System.Type.AssemblyQualifiedName%2A>. If the column is not a UDT, this is null.|  \\n|XmlSchemaCollectionDatabase|The name of the database where the schema collection for this XML instance is located, if the row contains information about an XML column. This value is `null` (`Nothing` in Visual Basic) if the collection is defined within the current database. It is also null if there is no schema collection, in which case the `XmlSchemaCollectionName` and `XmlSchemaCollectionOwningSchema` columns are also null.|  \\n|XmlSchemaCollectionName|The name of the schema collection for this XML instance, if the row contains information about an XML column. This value is `null` (`Nothing` in Visual Basic) if there is no associated schema collection. If the value is null, the `XmlSchemaCollectionDatabase` and `XmlSchemaCollectionOwningSchema` columns are also null.|  \\n|XmlSchemaCollectionOwningSchema|The owning relational schema where the schema collection for this XML instance is located, if the row contains information about an XML column. This value is `null` (`Nothing` in Visual Basic) if the collection is defined within the current database. It is also null if there is no schema collection, in which case the `XmlSchemaCollectionDatabase` and `XmlSchemaCollectionName` columns are also null.|  \\n  \\n> [!NOTE]\\n>  To make sure that metadata columns return the correct information, you must call <xref:System.Data.SqlClient.SqlCommand.ExecuteReader%2A> with the `behavior` parameter set to `KeyInfo`. Otherwise, some of the columns in the schema table may return default, null, or incorrect data.\"\n  syntax:\n    content: public override System.Data.DataTable GetSchemaTable ();\n    parameters: []\n    return:\n      type: System.Data.DataTable\n      description: A <xref href=\"System.Data.DataTable\"></xref> that describes the column metadata.\n  overload: System.Data.SqlClient.SqlDataReader.GetSchemaTable*\n  exceptions:\n  - type: System.InvalidOperationException\n    commentId: T:System.InvalidOperationException\n    description: The <xref href=\"System.Data.SqlClient.SqlDataReader\"></xref> is closed.\n  version:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Data.SqlClient/SqlDataReader.xml\n  ms.technology:\n  - dotnet-ado\n  author: JennieHubbard\n  ms.author: jhubbard\n  manager: jhubbard\n- uid: System.Data.SqlClient.SqlDataReader.GetSqlBinary(System.Int32)\n  commentId: M:System.Data.SqlClient.SqlDataReader.GetSqlBinary(System.Int32)\n  id: GetSqlBinary(System.Int32)\n  parent: System.Data.SqlClient.SqlDataReader\n  langs:\n  - csharp\n  name: GetSqlBinary(Int32)\n  nameWithType: SqlDataReader.GetSqlBinary(Int32)\n  fullName: SqlDataReader.GetSqlBinary(Int32)\n  type: Method\n  assemblies:\n  - System.Data.SqlClient\n  - System.Data\n  - netstandard\n  namespace: System.Data.SqlClient\n  summary: Gets the value of the specified column as a <xref href=\"System.Data.SqlTypes.SqlBinary\"></xref>.\n  remarks: No conversions are performed; therefore the data retrieved must already be a binary structure or an exception is generated.\n  syntax:\n    content: public virtual System.Data.SqlTypes.SqlBinary GetSqlBinary (int i);\n    parameters:\n    - id: i\n      type: System.Int32\n      description: The zero-based column ordinal.\n    return:\n      type: System.Data.SqlTypes.SqlBinary\n      description: The value of the column expressed as a <xref href=\"System.Data.SqlTypes.SqlBinary\"></xref>.\n  overload: System.Data.SqlClient.SqlDataReader.GetSqlBinary*\n  exceptions: []\n  version:\n  - netcore-1.0\n  - netcore-1.1\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  monikers:\n  - netcore-1.0\n  - netcore-1.1\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Data.SqlClient/SqlDataReader.xml\n  ms.technology:\n  - dotnet-ado\n  author: JennieHubbard\n  ms.author: jhubbard\n  manager: jhubbard\n- uid: System.Data.SqlClient.SqlDataReader.GetSqlBoolean(System.Int32)\n  commentId: M:System.Data.SqlClient.SqlDataReader.GetSqlBoolean(System.Int32)\n  id: GetSqlBoolean(System.Int32)\n  parent: System.Data.SqlClient.SqlDataReader\n  langs:\n  - csharp\n  name: GetSqlBoolean(Int32)\n  nameWithType: SqlDataReader.GetSqlBoolean(Int32)\n  fullName: SqlDataReader.GetSqlBoolean(Int32)\n  type: Method\n  assemblies:\n  - System.Data.SqlClient\n  - System.Data\n  - netstandard\n  namespace: System.Data.SqlClient\n  summary: Gets the value of the specified column as a <xref href=\"System.Data.SqlTypes.SqlBoolean\"></xref>.\n  remarks: No conversions are performed; therefore, the data retrieved must already be a Boolean or an exception is generated.\n  syntax:\n    content: public virtual System.Data.SqlTypes.SqlBoolean GetSqlBoolean (int i);\n    parameters:\n    - id: i\n      type: System.Int32\n      description: The zero-based column ordinal.\n    return:\n      type: System.Data.SqlTypes.SqlBoolean\n      description: The value of the column.\n  overload: System.Data.SqlClient.SqlDataReader.GetSqlBoolean*\n  exceptions: []\n  version:\n  - netcore-1.0\n  - netcore-1.1\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  monikers:\n  - netcore-1.0\n  - netcore-1.1\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Data.SqlClient/SqlDataReader.xml\n  ms.technology:\n  - dotnet-ado\n  author: JennieHubbard\n  ms.author: jhubbard\n  manager: jhubbard\n- uid: System.Data.SqlClient.SqlDataReader.GetSqlByte(System.Int32)\n  commentId: M:System.Data.SqlClient.SqlDataReader.GetSqlByte(System.Int32)\n  id: GetSqlByte(System.Int32)\n  parent: System.Data.SqlClient.SqlDataReader\n  langs:\n  - csharp\n  name: GetSqlByte(Int32)\n  nameWithType: SqlDataReader.GetSqlByte(Int32)\n  fullName: SqlDataReader.GetSqlByte(Int32)\n  type: Method\n  assemblies:\n  - System.Data.SqlClient\n  - System.Data\n  - netstandard\n  namespace: System.Data.SqlClient\n  summary: Gets the value of the specified column as a <xref href=\"System.Data.SqlTypes.SqlByte\"></xref>.\n  remarks: No conversions are performed; therefore the data retrieved must already be a byte, or an exception is generated.\n  syntax:\n    content: public virtual System.Data.SqlTypes.SqlByte GetSqlByte (int i);\n    parameters:\n    - id: i\n      type: System.Int32\n      description: The zero-based column ordinal.\n    return:\n      type: System.Data.SqlTypes.SqlByte\n      description: The value of the column expressed as a  <xref href=\"System.Data.SqlTypes.SqlByte\"></xref>.\n  overload: System.Data.SqlClient.SqlDataReader.GetSqlByte*\n  exceptions: []\n  version:\n  - netcore-1.0\n  - netcore-1.1\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  monikers:\n  - netcore-1.0\n  - netcore-1.1\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Data.SqlClient/SqlDataReader.xml\n  ms.technology:\n  - dotnet-ado\n  author: JennieHubbard\n  ms.author: jhubbard\n  manager: jhubbard\n- uid: System.Data.SqlClient.SqlDataReader.GetSqlBytes(System.Int32)\n  commentId: M:System.Data.SqlClient.SqlDataReader.GetSqlBytes(System.Int32)\n  id: GetSqlBytes(System.Int32)\n  parent: System.Data.SqlClient.SqlDataReader\n  langs:\n  - csharp\n  name: GetSqlBytes(Int32)\n  nameWithType: SqlDataReader.GetSqlBytes(Int32)\n  fullName: SqlDataReader.GetSqlBytes(Int32)\n  type: Method\n  assemblies:\n  - System.Data.SqlClient\n  - System.Data\n  - netstandard\n  namespace: System.Data.SqlClient\n  summary: Gets the value of the specified column as <xref href=\"System.Data.SqlTypes.SqlBytes\"></xref>.\n  syntax:\n    content: public virtual System.Data.SqlTypes.SqlBytes GetSqlBytes (int i);\n    parameters:\n    - id: i\n      type: System.Int32\n      description: The zero-based column ordinal.\n    return:\n      type: System.Data.SqlTypes.SqlBytes\n      description: The value of the column expressed as a <xref href=\"System.Data.SqlTypes.SqlBytes\"></xref>.\n  overload: System.Data.SqlClient.SqlDataReader.GetSqlBytes*\n  exceptions: []\n  version:\n  - netcore-1.0\n  - netcore-1.1\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  monikers:\n  - netcore-1.0\n  - netcore-1.1\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Data.SqlClient/SqlDataReader.xml\n  ms.technology:\n  - dotnet-ado\n  author: JennieHubbard\n  ms.author: jhubbard\n  manager: jhubbard\n- uid: System.Data.SqlClient.SqlDataReader.GetSqlChars(System.Int32)\n  commentId: M:System.Data.SqlClient.SqlDataReader.GetSqlChars(System.Int32)\n  id: GetSqlChars(System.Int32)\n  parent: System.Data.SqlClient.SqlDataReader\n  langs:\n  - csharp\n  name: GetSqlChars(Int32)\n  nameWithType: SqlDataReader.GetSqlChars(Int32)\n  fullName: SqlDataReader.GetSqlChars(Int32)\n  type: Method\n  assemblies:\n  - System.Data.SqlClient\n  - System.Data\n  - netstandard\n  namespace: System.Data.SqlClient\n  summary: Gets the value of the specified column as <xref href=\"System.Data.SqlTypes.SqlChars\"></xref>.\n  syntax:\n    content: public virtual System.Data.SqlTypes.SqlChars GetSqlChars (int i);\n    parameters:\n    - id: i\n      type: System.Int32\n      description: The zero-based column ordinal.\n    return:\n      type: System.Data.SqlTypes.SqlChars\n      description: The value of the column expressed as a  <xref href=\"System.Data.SqlTypes.SqlChars\"></xref>.\n  overload: System.Data.SqlClient.SqlDataReader.GetSqlChars*\n  exceptions: []\n  version:\n  - netcore-1.0\n  - netcore-1.1\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  monikers:\n  - netcore-1.0\n  - netcore-1.1\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Data.SqlClient/SqlDataReader.xml\n  ms.technology:\n  - dotnet-ado\n  author: JennieHubbard\n  ms.author: jhubbard\n  manager: jhubbard\n- uid: System.Data.SqlClient.SqlDataReader.GetSqlDateTime(System.Int32)\n  commentId: M:System.Data.SqlClient.SqlDataReader.GetSqlDateTime(System.Int32)\n  id: GetSqlDateTime(System.Int32)\n  parent: System.Data.SqlClient.SqlDataReader\n  langs:\n  - csharp\n  name: GetSqlDateTime(Int32)\n  nameWithType: SqlDataReader.GetSqlDateTime(Int32)\n  fullName: SqlDataReader.GetSqlDateTime(Int32)\n  type: Method\n  assemblies:\n  - System.Data.SqlClient\n  - System.Data\n  - netstandard\n  namespace: System.Data.SqlClient\n  summary: Gets the value of the specified column as a <xref href=\"System.Data.SqlTypes.SqlDateTime\"></xref>.\n  remarks: No conversions are performed; therefore, the data retrieved must already be a date/time value, or an exception is generated.\n  syntax:\n    content: public virtual System.Data.SqlTypes.SqlDateTime GetSqlDateTime (int i);\n    parameters:\n    - id: i\n      type: System.Int32\n      description: The zero-based column ordinal.\n    return:\n      type: System.Data.SqlTypes.SqlDateTime\n      description: The value of the column expressed as a  <xref href=\"System.Data.SqlTypes.SqlDateTime\"></xref>.\n  overload: System.Data.SqlClient.SqlDataReader.GetSqlDateTime*\n  exceptions: []\n  version:\n  - netcore-1.0\n  - netcore-1.1\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  monikers:\n  - netcore-1.0\n  - netcore-1.1\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Data.SqlClient/SqlDataReader.xml\n  ms.technology:\n  - dotnet-ado\n  author: JennieHubbard\n  ms.author: jhubbard\n  manager: jhubbard\n- uid: System.Data.SqlClient.SqlDataReader.GetSqlDecimal(System.Int32)\n  commentId: M:System.Data.SqlClient.SqlDataReader.GetSqlDecimal(System.Int32)\n  id: GetSqlDecimal(System.Int32)\n  parent: System.Data.SqlClient.SqlDataReader\n  langs:\n  - csharp\n  name: GetSqlDecimal(Int32)\n  nameWithType: SqlDataReader.GetSqlDecimal(Int32)\n  fullName: SqlDataReader.GetSqlDecimal(Int32)\n  type: Method\n  assemblies:\n  - System.Data.SqlClient\n  - System.Data\n  - netstandard\n  namespace: System.Data.SqlClient\n  summary: Gets the value of the specified column as a <xref href=\"System.Data.SqlTypes.SqlDecimal\"></xref>.\n  remarks: No conversions are performed; therefore, the data retrieved must already be a decimal value, or an exception is generated.\n  syntax:\n    content: public virtual System.Data.SqlTypes.SqlDecimal GetSqlDecimal (int i);\n    parameters:\n    - id: i\n      type: System.Int32\n      description: The zero-based column ordinal.\n    return:\n      type: System.Data.SqlTypes.SqlDecimal\n      description: The value of the column expressed as a <xref href=\"System.Data.SqlTypes.SqlDecimal\"></xref>.\n  overload: System.Data.SqlClient.SqlDataReader.GetSqlDecimal*\n  exceptions: []\n  version:\n  - netcore-1.0\n  - netcore-1.1\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  monikers:\n  - netcore-1.0\n  - netcore-1.1\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Data.SqlClient/SqlDataReader.xml\n  ms.technology:\n  - dotnet-ado\n  author: JennieHubbard\n  ms.author: jhubbard\n  manager: jhubbard\n- uid: System.Data.SqlClient.SqlDataReader.GetSqlDouble(System.Int32)\n  commentId: M:System.Data.SqlClient.SqlDataReader.GetSqlDouble(System.Int32)\n  id: GetSqlDouble(System.Int32)\n  parent: System.Data.SqlClient.SqlDataReader\n  langs:\n  - csharp\n  name: GetSqlDouble(Int32)\n  nameWithType: SqlDataReader.GetSqlDouble(Int32)\n  fullName: SqlDataReader.GetSqlDouble(Int32)\n  type: Method\n  assemblies:\n  - System.Data.SqlClient\n  - System.Data\n  - netstandard\n  namespace: System.Data.SqlClient\n  summary: Gets the value of the specified column as a <xref href=\"System.Data.SqlTypes.SqlDouble\"></xref>.\n  remarks: No conversions are performed; therefore, the data retrieved must already be a double-precision floating-point number, or an exception is generated.\n  syntax:\n    content: public virtual System.Data.SqlTypes.SqlDouble GetSqlDouble (int i);\n    parameters:\n    - id: i\n      type: System.Int32\n      description: The zero-based column ordinal.\n    return:\n      type: System.Data.SqlTypes.SqlDouble\n      description: The value of the column expressed as a  <xref href=\"System.Data.SqlTypes.SqlDouble\"></xref>.\n  overload: System.Data.SqlClient.SqlDataReader.GetSqlDouble*\n  exceptions: []\n  version:\n  - netcore-1.0\n  - netcore-1.1\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  monikers:\n  - netcore-1.0\n  - netcore-1.1\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Data.SqlClient/SqlDataReader.xml\n  ms.technology:\n  - dotnet-ado\n  author: JennieHubbard\n  ms.author: jhubbard\n  manager: jhubbard\n- uid: System.Data.SqlClient.SqlDataReader.GetSqlGuid(System.Int32)\n  commentId: M:System.Data.SqlClient.SqlDataReader.GetSqlGuid(System.Int32)\n  id: GetSqlGuid(System.Int32)\n  parent: System.Data.SqlClient.SqlDataReader\n  langs:\n  - csharp\n  name: GetSqlGuid(Int32)\n  nameWithType: SqlDataReader.GetSqlGuid(Int32)\n  fullName: SqlDataReader.GetSqlGuid(Int32)\n  type: Method\n  assemblies:\n  - System.Data.SqlClient\n  - System.Data\n  - netstandard\n  namespace: System.Data.SqlClient\n  summary: Gets the value of the specified column as a <xref href=\"System.Data.SqlTypes.SqlGuid\"></xref>.\n  remarks: No conversions are performed; therefore, the data retrieved must already be a GUID, or an exception is generated.\n  syntax:\n    content: public virtual System.Data.SqlTypes.SqlGuid GetSqlGuid (int i);\n    parameters:\n    - id: i\n      type: System.Int32\n      description: The zero-based column ordinal.\n    return:\n      type: System.Data.SqlTypes.SqlGuid\n      description: The value of the column expressed as a  <xref href=\"System.Data.SqlTypes.SqlGuid\"></xref>.\n  overload: System.Data.SqlClient.SqlDataReader.GetSqlGuid*\n  exceptions: []\n  version:\n  - netcore-1.0\n  - netcore-1.1\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  monikers:\n  - netcore-1.0\n  - netcore-1.1\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Data.SqlClient/SqlDataReader.xml\n  ms.technology:\n  - dotnet-ado\n  author: JennieHubbard\n  ms.author: jhubbard\n  manager: jhubbard\n- uid: System.Data.SqlClient.SqlDataReader.GetSqlInt16(System.Int32)\n  commentId: M:System.Data.SqlClient.SqlDataReader.GetSqlInt16(System.Int32)\n  id: GetSqlInt16(System.Int32)\n  parent: System.Data.SqlClient.SqlDataReader\n  langs:\n  - csharp\n  name: GetSqlInt16(Int32)\n  nameWithType: SqlDataReader.GetSqlInt16(Int32)\n  fullName: SqlDataReader.GetSqlInt16(Int32)\n  type: Method\n  assemblies:\n  - System.Data.SqlClient\n  - System.Data\n  - netstandard\n  namespace: System.Data.SqlClient\n  summary: Gets the value of the specified column as a <xref href=\"System.Data.SqlTypes.SqlInt16\"></xref>.\n  remarks: No conversions are performed; therefore, the data retrieved must already be a 16-bit signed integer, or an exception is generated.\n  syntax:\n    content: public virtual System.Data.SqlTypes.SqlInt16 GetSqlInt16 (int i);\n    parameters:\n    - id: i\n      type: System.Int32\n      description: The zero-based column ordinal.\n    return:\n      type: System.Data.SqlTypes.SqlInt16\n      description: The value of the column expressed as a <xref href=\"System.Data.SqlTypes.SqlInt16\"></xref>.\n  overload: System.Data.SqlClient.SqlDataReader.GetSqlInt16*\n  exceptions: []\n  version:\n  - netcore-1.0\n  - netcore-1.1\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  monikers:\n  - netcore-1.0\n  - netcore-1.1\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Data.SqlClient/SqlDataReader.xml\n  ms.technology:\n  - dotnet-ado\n  author: JennieHubbard\n  ms.author: jhubbard\n  manager: jhubbard\n- uid: System.Data.SqlClient.SqlDataReader.GetSqlInt32(System.Int32)\n  commentId: M:System.Data.SqlClient.SqlDataReader.GetSqlInt32(System.Int32)\n  id: GetSqlInt32(System.Int32)\n  parent: System.Data.SqlClient.SqlDataReader\n  langs:\n  - csharp\n  name: GetSqlInt32(Int32)\n  nameWithType: SqlDataReader.GetSqlInt32(Int32)\n  fullName: SqlDataReader.GetSqlInt32(Int32)\n  type: Method\n  assemblies:\n  - System.Data.SqlClient\n  - System.Data\n  - netstandard\n  namespace: System.Data.SqlClient\n  summary: Gets the value of the specified column as a <xref href=\"System.Data.SqlTypes.SqlInt32\"></xref>.\n  remarks: No conversions are performed; therefore the data retrieved must already be a 32-bit signed integer, or an exception is generated.\n  syntax:\n    content: public virtual System.Data.SqlTypes.SqlInt32 GetSqlInt32 (int i);\n    parameters:\n    - id: i\n      type: System.Int32\n      description: The zero-based column ordinal.\n    return:\n      type: System.Data.SqlTypes.SqlInt32\n      description: The value of the column expressed as a <xref href=\"System.Data.SqlTypes.SqlInt32\"></xref>.\n  overload: System.Data.SqlClient.SqlDataReader.GetSqlInt32*\n  exceptions: []\n  version:\n  - netcore-1.0\n  - netcore-1.1\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  monikers:\n  - netcore-1.0\n  - netcore-1.1\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Data.SqlClient/SqlDataReader.xml\n  ms.technology:\n  - dotnet-ado\n  author: JennieHubbard\n  ms.author: jhubbard\n  manager: jhubbard\n- uid: System.Data.SqlClient.SqlDataReader.GetSqlInt64(System.Int32)\n  commentId: M:System.Data.SqlClient.SqlDataReader.GetSqlInt64(System.Int32)\n  id: GetSqlInt64(System.Int32)\n  parent: System.Data.SqlClient.SqlDataReader\n  langs:\n  - csharp\n  name: GetSqlInt64(Int32)\n  nameWithType: SqlDataReader.GetSqlInt64(Int32)\n  fullName: SqlDataReader.GetSqlInt64(Int32)\n  type: Method\n  assemblies:\n  - System.Data.SqlClient\n  - System.Data\n  - netstandard\n  namespace: System.Data.SqlClient\n  summary: Gets the value of the specified column as a <xref href=\"System.Data.SqlTypes.SqlInt64\"></xref>.\n  remarks: No conversions are performed; therefore, the data retrieved must already be a 64-bit signed integer, or an exception is generated.\n  syntax:\n    content: public virtual System.Data.SqlTypes.SqlInt64 GetSqlInt64 (int i);\n    parameters:\n    - id: i\n      type: System.Int32\n      description: The zero-based column ordinal.\n    return:\n      type: System.Data.SqlTypes.SqlInt64\n      description: The value of the column expressed as a <xref href=\"System.Data.SqlTypes.SqlInt64\"></xref>.\n  overload: System.Data.SqlClient.SqlDataReader.GetSqlInt64*\n  exceptions: []\n  version:\n  - netcore-1.0\n  - netcore-1.1\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  monikers:\n  - netcore-1.0\n  - netcore-1.1\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Data.SqlClient/SqlDataReader.xml\n  ms.technology:\n  - dotnet-ado\n  author: JennieHubbard\n  ms.author: jhubbard\n  manager: jhubbard\n- uid: System.Data.SqlClient.SqlDataReader.GetSqlMoney(System.Int32)\n  commentId: M:System.Data.SqlClient.SqlDataReader.GetSqlMoney(System.Int32)\n  id: GetSqlMoney(System.Int32)\n  parent: System.Data.SqlClient.SqlDataReader\n  langs:\n  - csharp\n  name: GetSqlMoney(Int32)\n  nameWithType: SqlDataReader.GetSqlMoney(Int32)\n  fullName: SqlDataReader.GetSqlMoney(Int32)\n  type: Method\n  assemblies:\n  - System.Data.SqlClient\n  - System.Data\n  - netstandard\n  namespace: System.Data.SqlClient\n  summary: Gets the value of the specified column as a <xref href=\"System.Data.SqlTypes.SqlMoney\"></xref>.\n  remarks: No conversions are performed; therefore, the data retrieved must already be a decimal value, or an exception is generated.\n  syntax:\n    content: public virtual System.Data.SqlTypes.SqlMoney GetSqlMoney (int i);\n    parameters:\n    - id: i\n      type: System.Int32\n      description: The zero-based column ordinal.\n    return:\n      type: System.Data.SqlTypes.SqlMoney\n      description: The value of the column expressed as a <xref href=\"System.Data.SqlTypes.SqlMoney\"></xref>.\n  overload: System.Data.SqlClient.SqlDataReader.GetSqlMoney*\n  exceptions: []\n  version:\n  - netcore-1.0\n  - netcore-1.1\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  monikers:\n  - netcore-1.0\n  - netcore-1.1\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Data.SqlClient/SqlDataReader.xml\n  ms.technology:\n  - dotnet-ado\n  author: JennieHubbard\n  ms.author: jhubbard\n  manager: jhubbard\n- uid: System.Data.SqlClient.SqlDataReader.GetSqlSingle(System.Int32)\n  commentId: M:System.Data.SqlClient.SqlDataReader.GetSqlSingle(System.Int32)\n  id: GetSqlSingle(System.Int32)\n  parent: System.Data.SqlClient.SqlDataReader\n  langs:\n  - csharp\n  name: GetSqlSingle(Int32)\n  nameWithType: SqlDataReader.GetSqlSingle(Int32)\n  fullName: SqlDataReader.GetSqlSingle(Int32)\n  type: Method\n  assemblies:\n  - System.Data.SqlClient\n  - System.Data\n  - netstandard\n  namespace: System.Data.SqlClient\n  summary: Gets the value of the specified column as a <xref href=\"System.Data.SqlTypes.SqlSingle\"></xref>.\n  remarks: No conversions are performed; therefore, the data retrieved must already be a single precision floating point number, or an exception is generated.\n  syntax:\n    content: public virtual System.Data.SqlTypes.SqlSingle GetSqlSingle (int i);\n    parameters:\n    - id: i\n      type: System.Int32\n      description: The zero-based column ordinal.\n    return:\n      type: System.Data.SqlTypes.SqlSingle\n      description: The value of the column expressed as a <xref href=\"System.Data.SqlTypes.SqlSingle\"></xref>.\n  overload: System.Data.SqlClient.SqlDataReader.GetSqlSingle*\n  exceptions: []\n  version:\n  - netcore-1.0\n  - netcore-1.1\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  monikers:\n  - netcore-1.0\n  - netcore-1.1\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Data.SqlClient/SqlDataReader.xml\n  ms.technology:\n  - dotnet-ado\n  author: JennieHubbard\n  ms.author: jhubbard\n  manager: jhubbard\n- uid: System.Data.SqlClient.SqlDataReader.GetSqlString(System.Int32)\n  commentId: M:System.Data.SqlClient.SqlDataReader.GetSqlString(System.Int32)\n  id: GetSqlString(System.Int32)\n  parent: System.Data.SqlClient.SqlDataReader\n  langs:\n  - csharp\n  name: GetSqlString(Int32)\n  nameWithType: SqlDataReader.GetSqlString(Int32)\n  fullName: SqlDataReader.GetSqlString(Int32)\n  type: Method\n  assemblies:\n  - System.Data.SqlClient\n  - System.Data\n  - netstandard\n  namespace: System.Data.SqlClient\n  summary: Gets the value of the specified column as a <xref href=\"System.Data.SqlTypes.SqlString\"></xref>.\n  remarks: No conversions are performed; therefore, the data retrieved must already be a string, or an exception is generated.\n  syntax:\n    content: public virtual System.Data.SqlTypes.SqlString GetSqlString (int i);\n    parameters:\n    - id: i\n      type: System.Int32\n      description: The zero-based column ordinal.\n    return:\n      type: System.Data.SqlTypes.SqlString\n      description: The value of the column expressed as a <xref href=\"System.Data.SqlTypes.SqlString\"></xref>.\n  overload: System.Data.SqlClient.SqlDataReader.GetSqlString*\n  exceptions: []\n  version:\n  - netcore-1.0\n  - netcore-1.1\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  monikers:\n  - netcore-1.0\n  - netcore-1.1\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Data.SqlClient/SqlDataReader.xml\n  ms.technology:\n  - dotnet-ado\n  author: JennieHubbard\n  ms.author: jhubbard\n  manager: jhubbard\n- uid: System.Data.SqlClient.SqlDataReader.GetSqlValue(System.Int32)\n  commentId: M:System.Data.SqlClient.SqlDataReader.GetSqlValue(System.Int32)\n  id: GetSqlValue(System.Int32)\n  parent: System.Data.SqlClient.SqlDataReader\n  langs:\n  - csharp\n  name: GetSqlValue(Int32)\n  nameWithType: SqlDataReader.GetSqlValue(Int32)\n  fullName: SqlDataReader.GetSqlValue(Int32)\n  type: Method\n  assemblies:\n  - System.Data.SqlClient\n  - System.Data\n  - netstandard\n  namespace: System.Data.SqlClient\n  summary: Returns the data value in the specified column as a SQL Server type.\n  remarks: <xref:System.Data.SqlClient.SqlDataReader.GetSqlValue%2A> returns data using the native SQL Server types. To retrieve data using the .NET Framework types, see <xref:System.Data.SqlClient.SqlDataReader.GetValue%2A>.\n  syntax:\n    content: public virtual object GetSqlValue (int i);\n    parameters:\n    - id: i\n      type: System.Int32\n      description: The zero-based column ordinal.\n    return:\n      type: System.Object\n      description: The value of the column expressed as a <xref href=\"System.Data.SqlDbType\"></xref>.\n  overload: System.Data.SqlClient.SqlDataReader.GetSqlValue*\n  exceptions: []\n  version:\n  - netcore-1.0\n  - netcore-1.1\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  monikers:\n  - netcore-1.0\n  - netcore-1.1\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Data.SqlClient/SqlDataReader.xml\n  ms.technology:\n  - dotnet-ado\n  author: JennieHubbard\n  ms.author: jhubbard\n  manager: jhubbard\n- uid: System.Data.SqlClient.SqlDataReader.GetSqlValues(System.Object[])\n  commentId: M:System.Data.SqlClient.SqlDataReader.GetSqlValues(System.Object[])\n  id: GetSqlValues(System.Object[])\n  parent: System.Data.SqlClient.SqlDataReader\n  langs:\n  - csharp\n  name: GetSqlValues(Object[])\n  nameWithType: SqlDataReader.GetSqlValues(Object[])\n  fullName: SqlDataReader.GetSqlValues(Object[])\n  type: Method\n  assemblies:\n  - System.Data.SqlClient\n  - System.Data\n  - netstandard\n  namespace: System.Data.SqlClient\n  summary: Fills an array of <xref href=\"System.Object\"></xref> that contains the values for all the columns in the record, expressed as SQL Server types.\n  remarks: Returns the values for all the columns in the record in a single call, using the SQL type system instead of the CLR type system. The length of the <xref:System.Object> array does not need to match the number of columns in the record. You can pass an <xref:System.Object> array that contains fewer than the number of columns contained in the record. Only the amount of data the <xref:System.Object> array holds is copied to the array, starting at the column with ordinal 0. You can also pass an <xref:System.Object> array whose length is more than the number of columns contained in the resulting row. Any remaining columns are untouched.\n  syntax:\n    content: public virtual int GetSqlValues (object[] values);\n    parameters:\n    - id: values\n      type: System.Object[]\n      description: An array of <xref href=\"System.Object\"></xref> into which to copy the values. The column values are expressed as SQL Server types.\n    return:\n      type: System.Int32\n      description: An integer indicating the number of columns copied.\n  overload: System.Data.SqlClient.SqlDataReader.GetSqlValues*\n  exceptions:\n  - type: System.ArgumentNullException\n    commentId: T:System.ArgumentNullException\n    description: <code>values</code> is null.\n  version:\n  - netcore-1.0\n  - netcore-1.1\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  monikers:\n  - netcore-1.0\n  - netcore-1.1\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Data.SqlClient/SqlDataReader.xml\n  ms.technology:\n  - dotnet-ado\n  author: JennieHubbard\n  ms.author: jhubbard\n  manager: jhubbard\n- uid: System.Data.SqlClient.SqlDataReader.GetSqlXml(System.Int32)\n  commentId: M:System.Data.SqlClient.SqlDataReader.GetSqlXml(System.Int32)\n  id: GetSqlXml(System.Int32)\n  parent: System.Data.SqlClient.SqlDataReader\n  langs:\n  - csharp\n  name: GetSqlXml(Int32)\n  nameWithType: SqlDataReader.GetSqlXml(Int32)\n  fullName: SqlDataReader.GetSqlXml(Int32)\n  type: Method\n  assemblies:\n  - System.Data.SqlClient\n  - System.Data\n  - netstandard\n  namespace: System.Data.SqlClient\n  summary: Gets the value of the specified column as an XML value.\n  remarks: \"No conversions are performed; therefore, the data retrieved must already be an XML value.  \\n  \\n Call <xref:System.Data.SqlClient.SqlDataReader.IsDBNull%2A> to check for null values before calling this method.\"\n  syntax:\n    content: public virtual System.Data.SqlTypes.SqlXml GetSqlXml (int i);\n    parameters:\n    - id: i\n      type: System.Int32\n      description: The zero-based column ordinal.\n    return:\n      type: System.Data.SqlTypes.SqlXml\n      description: A <xref href=\"System.Data.SqlTypes.SqlXml\"></xref> value that contains the XML stored within the corresponding field.\n  overload: System.Data.SqlClient.SqlDataReader.GetSqlXml*\n  exceptions:\n  - type: System.ArgumentOutOfRangeException\n    commentId: T:System.ArgumentOutOfRangeException\n    description: The index passed was outside the range of 0 to <xref href=\"System.Data.DataTableReader.FieldCount\"></xref> - 1\n  - type: System.InvalidOperationException\n    commentId: T:System.InvalidOperationException\n    description: An attempt was made to read or access columns in a closed <xref href=\"System.Data.SqlClient.SqlDataReader\"></xref>.\n  - type: System.InvalidCastException\n    commentId: T:System.InvalidCastException\n    description: The retrieved data is not compatible with the <xref href=\"System.Data.SqlTypes.SqlXml\"></xref> type.\n  version:\n  - netcore-1.0\n  - netcore-1.1\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  monikers:\n  - netcore-1.0\n  - netcore-1.1\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Data.SqlClient/SqlDataReader.xml\n  ms.technology:\n  - dotnet-ado\n  author: JennieHubbard\n  ms.author: jhubbard\n  manager: jhubbard\n- uid: System.Data.SqlClient.SqlDataReader.GetStream(System.Int32)\n  commentId: M:System.Data.SqlClient.SqlDataReader.GetStream(System.Int32)\n  id: GetStream(System.Int32)\n  parent: System.Data.SqlClient.SqlDataReader\n  langs:\n  - csharp\n  name: GetStream(Int32)\n  nameWithType: SqlDataReader.GetStream(Int32)\n  fullName: SqlDataReader.GetStream(Int32)\n  type: Method\n  assemblies:\n  - System.Data.SqlClient\n  - System.Data\n  - netstandard\n  namespace: System.Data.SqlClient\n  summary: Retrieves binary, image, varbinary, UDT, and variant data types as a <xref href=\"System.IO.Stream\"></xref>.\n  remarks: \"<xref:System.IO.Stream.ReadTimeout%2A> defaults to the value of <xref:System.Data.SqlClient.SqlCommand.CommandTimeout%2A>; but you can modify <xref:System.IO.Stream.ReadTimeout%2A> via <xref:System.Data.SqlClient.SqlDataReader.GetStream%2A>.  \\n  \\n Null values will be returned as an empty (zero bytes) <xref:System.IO.Stream>.  \\n  \\n <xref:System.Data.SqlClient.SqlDataReader.GetBytes%2A> will raise an <xref:System.InvalidOperationException> exception when used on an object returned by <xref:System.Data.SqlClient.SqlDataReader.GetStream%2A> when <xref:System.Data.CommandBehavior.SequentialAccess> is in effect.  \\n  \\n <xref:System.Data.SqlClient.SqlException> exceptions raised from <xref:System.IO.Stream> are thrown as <xref:System.IO.IOException> exceptions; check the inner exception for the <xref:System.Data.SqlClient.SqlException>.  \\n  \\n The following <xref:System.IO.Stream> members are not available for objects returned by <xref:System.Data.SqlClient.SqlDataReader.GetStream%2A>:  \\n  \\n-   BeginWrite  \\n  \\n-   EndWrite  \\n  \\n-   Length  \\n  \\n-   Position  \\n  \\n-   Seek  \\n  \\n-   SetLength  \\n  \\n-   Write  \\n  \\n-   WriteByte  \\n  \\n-   WriteTimeout  \\n  \\n When the connection property `ContextConnection=true`, <xref:System.Data.SqlClient.SqlDataReader.GetStream%2A> only supports synchronous data retrieval for both sequential (<xref:System.Data.CommandBehavior.SequentialAccess>) and non-sequential (<xref:System.Data.CommandBehavior.Default>) access.  \\n  \\n For more information, see [SqlClient Streaming Support](~/docs/framework/data/adonet/sqlclient-streaming-support.md).\"\n  syntax:\n    content: public override System.IO.Stream GetStream (int i);\n    parameters:\n    - id: i\n      type: System.Int32\n      description: The zero-based column ordinal.\n    return:\n      type: System.IO.Stream\n      description: A stream object.\n  overload: System.Data.SqlClient.SqlDataReader.GetStream*\n  exceptions:\n  - type: System.InvalidOperationException\n    commentId: T:System.InvalidOperationException\n    description: \"The connection drops or is closed during the data retrieval.  \\n  \\n The <xref href=\\\"System.Data.SqlClient.SqlDataReader\\\"></xref> is closed during the data retrieval.  \\n  \\n There is no data ready to be read (for example, the first <xref href=\\\"System.Data.SqlClient.SqlDataReader.Read\\\"></xref> hasn't been called, or returned false).  \\n  \\n Tried to read a previously-read column in sequential mode.  \\n  \\n There was an asynchronous operation in progress. This applies to all Get* methods when running in sequential mode, as they could be called while reading a stream.\"\n  - type: System.IndexOutOfRangeException\n    commentId: T:System.IndexOutOfRangeException\n    description: Trying to read a column that does not exist.\n  - type: System.InvalidCastException\n    commentId: T:System.InvalidCastException\n    description: \"The returned type was not one of the types below:  \\n  \\n-   binary  \\n  \\n-   image  \\n  \\n-   varbinary  \\n  \\n-   udt\"\n  version:\n  - netcore-1.0\n  - netcore-1.1\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  monikers:\n  - netcore-1.0\n  - netcore-1.1\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Data.SqlClient/SqlDataReader.xml\n  ms.technology:\n  - dotnet-ado\n  author: JennieHubbard\n  ms.author: jhubbard\n  manager: jhubbard\n- uid: System.Data.SqlClient.SqlDataReader.GetString(System.Int32)\n  commentId: M:System.Data.SqlClient.SqlDataReader.GetString(System.Int32)\n  id: GetString(System.Int32)\n  parent: System.Data.SqlClient.SqlDataReader\n  langs:\n  - csharp\n  name: GetString(Int32)\n  nameWithType: SqlDataReader.GetString(Int32)\n  fullName: SqlDataReader.GetString(Int32)\n  type: Method\n  assemblies:\n  - System.Data.SqlClient\n  - System.Data\n  - netstandard\n  namespace: System.Data.SqlClient\n  summary: Gets the value of the specified column as a string.\n  remarks: \"No conversions are performed; therefore, the data retrieved must already be a string.  \\n  \\n Call <xref:System.Data.SqlClient.SqlDataReader.IsDBNull%2A> to check for null values before calling this method.\"\n  syntax:\n    content: public override string GetString (int i);\n    parameters:\n    - id: i\n      type: System.Int32\n      description: The zero-based column ordinal.\n    return:\n      type: System.String\n      description: The value of the specified column.\n  overload: System.Data.SqlClient.SqlDataReader.GetString*\n  exceptions:\n  - type: System.InvalidCastException\n    commentId: T:System.InvalidCastException\n    description: The specified cast is not valid.\n  version:\n  - netcore-1.0\n  - netcore-1.1\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  monikers:\n  - netcore-1.0\n  - netcore-1.1\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Data.SqlClient/SqlDataReader.xml\n  ms.technology:\n  - dotnet-ado\n  author: JennieHubbard\n  ms.author: jhubbard\n  manager: jhubbard\n- uid: System.Data.SqlClient.SqlDataReader.GetTextReader(System.Int32)\n  commentId: M:System.Data.SqlClient.SqlDataReader.GetTextReader(System.Int32)\n  id: GetTextReader(System.Int32)\n  parent: System.Data.SqlClient.SqlDataReader\n  langs:\n  - csharp\n  name: GetTextReader(Int32)\n  nameWithType: SqlDataReader.GetTextReader(Int32)\n  fullName: SqlDataReader.GetTextReader(Int32)\n  type: Method\n  assemblies:\n  - System.Data.SqlClient\n  - System.Data\n  - netstandard\n  namespace: System.Data.SqlClient\n  summary: Retrieves Char, NChar, NText, NVarChar, text, varChar, and Variant data types as a <xref href=\"System.IO.TextReader\"></xref>.\n  remarks: \"<xref:System.Data.SqlClient.SqlException> exceptions raised from <xref:System.IO.TextReader> are thrown as <xref:System.IO.IOException> exceptions; check the inner exception for the <xref:System.Data.SqlClient.SqlException>.  \\n  \\n Null values will be returned as an empty (zero bytes) <xref:System.IO.TextReader>.  \\n  \\n <xref:System.Data.SqlClient.SqlDataReader.GetChars%2A> will raise an <xref:System.InvalidOperationException> exception when used on an object returned by <xref:System.Data.SqlClient.SqlDataReader.GetTextReader%2A> when <xref:System.Data.CommandBehavior.SequentialAccess> is in effect.  \\n  \\n When the connection property `ContextConnection=true`, <xref:System.Data.SqlClient.SqlDataReader.GetTextReader%2A> only supports synchronous data retrieval for both sequential (<xref:System.Data.CommandBehavior.SequentialAccess>) and non-sequential (<xref:System.Data.CommandBehavior.Default>) access.  \\n  \\n For more information, see [SqlClient Streaming Support](~/docs/framework/data/adonet/sqlclient-streaming-support.md).\"\n  syntax:\n    content: public override System.IO.TextReader GetTextReader (int i);\n    parameters:\n    - id: i\n      type: System.Int32\n      description: The column to be retrieved.\n    return:\n      type: System.IO.TextReader\n      description: The returned object.\n  overload: System.Data.SqlClient.SqlDataReader.GetTextReader*\n  exceptions:\n  - type: System.InvalidOperationException\n    commentId: T:System.InvalidOperationException\n    description: \"The connection drops or is closed during the data retrieval.  \\n  \\n The <xref href=\\\"System.Data.SqlClient.SqlDataReader\\\"></xref> is closed during the data retrieval.  \\n  \\n There is no data ready to be read (for example, the first <xref href=\\\"System.Data.SqlClient.SqlDataReader.Read\\\"></xref> hasn't been called, or returned false).  \\n  \\n Tried to read a previously-read column in sequential mode.  \\n  \\n There was an asynchronous operation in progress. This applies to all Get* methods when running in sequential mode, as they could be called while reading a stream.\"\n  - type: System.IndexOutOfRangeException\n    commentId: T:System.IndexOutOfRangeException\n    description: Trying to read a column that does not exist.\n  - type: System.InvalidCastException\n    commentId: T:System.InvalidCastException\n    description: \"The returned type was not one of the types below:  \\n  \\n-   char  \\n  \\n-   nchar  \\n  \\n-   ntext  \\n  \\n-   nvarchar  \\n  \\n-   text  \\n  \\n-   varchar\"\n  version:\n  - netcore-1.0\n  - netcore-1.1\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  monikers:\n  - netcore-1.0\n  - netcore-1.1\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Data.SqlClient/SqlDataReader.xml\n  ms.technology:\n  - dotnet-ado\n  author: JennieHubbard\n  ms.author: jhubbard\n  manager: jhubbard\n- uid: System.Data.SqlClient.SqlDataReader.GetTimeSpan(System.Int32)\n  commentId: M:System.Data.SqlClient.SqlDataReader.GetTimeSpan(System.Int32)\n  id: GetTimeSpan(System.Int32)\n  parent: System.Data.SqlClient.SqlDataReader\n  langs:\n  - csharp\n  name: GetTimeSpan(Int32)\n  nameWithType: SqlDataReader.GetTimeSpan(Int32)\n  fullName: SqlDataReader.GetTimeSpan(Int32)\n  type: Method\n  assemblies:\n  - System.Data.SqlClient\n  - System.Data\n  - netstandard\n  namespace: System.Data.SqlClient\n  summary: Retrieves the value of the specified column as a <xref href=\"System.TimeSpan\"></xref> object.\n  remarks: \"No conversions are performed; therefore, the data retrieved must already be a <xref:System.TimeSpan> object.  \\n  \\n Call <xref:System.Data.SqlClient.SqlDataReader.IsDBNull%2A> to check for null values before calling this method.\"\n  syntax:\n    content: public virtual TimeSpan GetTimeSpan (int i);\n    parameters:\n    - id: i\n      type: System.Int32\n      description: The zero-based column ordinal.\n    return:\n      type: System.TimeSpan\n      description: The value of the specified column.\n  overload: System.Data.SqlClient.SqlDataReader.GetTimeSpan*\n  exceptions:\n  - type: System.InvalidCastException\n    commentId: T:System.InvalidCastException\n    description: The specified cast is not valid.\n  version:\n  - netcore-1.0\n  - netcore-1.1\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  monikers:\n  - netcore-1.0\n  - netcore-1.1\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Data.SqlClient/SqlDataReader.xml\n  ms.technology:\n  - dotnet-ado\n  author: JennieHubbard\n  ms.author: jhubbard\n  manager: jhubbard\n- uid: System.Data.SqlClient.SqlDataReader.GetValue(System.Int32)\n  commentId: M:System.Data.SqlClient.SqlDataReader.GetValue(System.Int32)\n  id: GetValue(System.Int32)\n  parent: System.Data.SqlClient.SqlDataReader\n  langs:\n  - csharp\n  name: GetValue(Int32)\n  nameWithType: SqlDataReader.GetValue(Int32)\n  fullName: SqlDataReader.GetValue(Int32)\n  type: Method\n  assemblies:\n  - System.Data.SqlClient\n  - System.Data\n  - netstandard\n  namespace: System.Data.SqlClient\n  summary: Gets the value of the specified column in its native format.\n  remarks: <xref:System.Data.SqlClient.SqlDataReader.GetValue%2A> returns data using the .NET Framework types.\n  syntax:\n    content: public override object GetValue (int i);\n    parameters:\n    - id: i\n      type: System.Int32\n      description: The zero-based column ordinal.\n    return:\n      type: System.Object\n      description: This method returns <xref href=\"System.DBNull\"></xref> for null database columns.\n  overload: System.Data.SqlClient.SqlDataReader.GetValue*\n  exceptions: []\n  version:\n  - netcore-1.0\n  - netcore-1.1\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  monikers:\n  - netcore-1.0\n  - netcore-1.1\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Data.SqlClient/SqlDataReader.xml\n  ms.technology:\n  - dotnet-ado\n  author: JennieHubbard\n  ms.author: jhubbard\n  manager: jhubbard\n- uid: System.Data.SqlClient.SqlDataReader.GetValues(System.Object[])\n  commentId: M:System.Data.SqlClient.SqlDataReader.GetValues(System.Object[])\n  id: GetValues(System.Object[])\n  parent: System.Data.SqlClient.SqlDataReader\n  langs:\n  - csharp\n  name: GetValues(Object[])\n  nameWithType: SqlDataReader.GetValues(Object[])\n  fullName: SqlDataReader.GetValues(Object[])\n  type: Method\n  assemblies:\n  - System.Data.SqlClient\n  - System.Data\n  - netstandard\n  namespace: System.Data.SqlClient\n  summary: Populates an array of objects with the column values of the current row.\n  remarks: \"For most applications, this method provides an efficient means for retrieving all columns, instead of retrieving each column individually.  \\n  \\n You can pass an <xref:System.Object> array that contains fewer than the number of columns contained in the resulting row. Only the amount of data the <xref:System.Object> array holds is copied to the array. You can also pass an <xref:System.Object> array whose length is more than the number of columns contained in the resulting row.  \\n  \\n This method returns <xref:System.DBNull> for null database columns.\"\n  example:\n  - \"The following example demonstrates using a correctly sized  array  to read all values from the current row in the supplied <xref:System.Data.SqlClient.SqlDataReader>. In addition, the sample demonstrates using a fixed-sized array that could be either smaller or larger than the number of available columns.  \\n  \\n [!code-csharp[DataWorks DataTableReader.GetValueObject#2](~/samples/snippets/csharp/VS_Snippets_ADO.NET/DataWorks DataTableReader.GetValueObject/CS/source.cs#2)]\\n [!code-vb[DataWorks DataTableReader.GetValueObject#2](~/samples/snippets/visualbasic/VS_Snippets_ADO.NET/DataWorks DataTableReader.GetValueObject/VB/source.vb#2)]\"\n  syntax:\n    content: public override int GetValues (object[] values);\n    parameters:\n    - id: values\n      type: System.Object[]\n      description: An array of <xref href=\"System.Object\"></xref> into which to copy the attribute columns.\n    return:\n      type: System.Int32\n      description: The number of instances of <xref href=\"System.Object\"></xref> in the array.\n  overload: System.Data.SqlClient.SqlDataReader.GetValues*\n  exceptions: []\n  version:\n  - netcore-1.0\n  - netcore-1.1\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  monikers:\n  - netcore-1.0\n  - netcore-1.1\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Data.SqlClient/SqlDataReader.xml\n  ms.technology:\n  - dotnet-ado\n  author: JennieHubbard\n  ms.author: jhubbard\n  manager: jhubbard\n- uid: System.Data.SqlClient.SqlDataReader.GetXmlReader(System.Int32)\n  commentId: M:System.Data.SqlClient.SqlDataReader.GetXmlReader(System.Int32)\n  id: GetXmlReader(System.Int32)\n  parent: System.Data.SqlClient.SqlDataReader\n  langs:\n  - csharp\n  name: GetXmlReader(Int32)\n  nameWithType: SqlDataReader.GetXmlReader(Int32)\n  fullName: SqlDataReader.GetXmlReader(Int32)\n  type: Method\n  assemblies:\n  - System.Data.SqlClient\n  - System.Data\n  - netstandard\n  namespace: System.Data.SqlClient\n  summary: Retrieves data of type XML as an <xref href=\"System.Xml.XmlReader\"></xref>.\n  remarks: \"The <xref:System.Xml.XmlReader> object returned by <xref:System.Data.SqlClient.SqlDataReader.GetXmlReader%2A> does not support asynchronous operations. If you require asynchronous operations on an <xref:System.Xml.XmlReader>, cast the XML column to an NVARCHAR(MAX) on the server and use <xref:System.Data.SqlClient.SqlDataReader.GetTextReader%2A> with <xref:System.Xml.XmlReader.Create%2A>.  \\n  \\n <xref:System.Data.SqlClient.SqlException> exceptions raised from <xref:System.Xml.XmlReader> are thrown as <xref:System.Xml.XmlException> exceptions; check the inner exception for the <xref:System.Data.SqlClient.SqlException>.  \\n  \\n <xref:System.Data.SqlClient.SqlDataReader.GetChars%2A> will raise an <xref:System.InvalidOperationException> exception when used on an object returned by <xref:System.Data.SqlClient.SqlDataReader.GetXmlReader%2A> when <xref:System.Data.CommandBehavior.SequentialAccess> is in effect.  \\n  \\n For more information, see [SqlClient Streaming Support](~/docs/framework/data/adonet/sqlclient-streaming-support.md).\"\n  syntax:\n    content: public virtual System.Xml.XmlReader GetXmlReader (int i);\n    parameters:\n    - id: i\n      type: System.Int32\n      description: The value of the specified column.\n    return:\n      type: System.Xml.XmlReader\n      description: The returned object.\n  overload: System.Data.SqlClient.SqlDataReader.GetXmlReader*\n  exceptions:\n  - type: System.InvalidOperationException\n    commentId: T:System.InvalidOperationException\n    description: \"The connection drops or is closed during the data retrieval.  \\n  \\n The <xref href=\\\"System.Data.SqlClient.SqlDataReader\\\"></xref> is closed during the data retrieval.  \\n  \\n There is no data ready to be read (for example, the first <xref href=\\\"System.Data.SqlClient.SqlDataReader.Read\\\"></xref> hasn't been called, or returned false).  \\n  \\n Trying to read a previously read column in sequential mode.  \\n  \\n There was an asynchronous operation in progress. This applies to all Get* methods when running in sequential mode, as they could be called while reading a stream.\"\n  - type: System.IndexOutOfRangeException\n    commentId: T:System.IndexOutOfRangeException\n    description: Trying to read a column that does not exist.\n  - type: System.InvalidCastException\n    commentId: T:System.InvalidCastException\n    description: The returned type was not xml.\n  version:\n  - netcore-1.0\n  - netcore-1.1\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  monikers:\n  - netcore-1.0\n  - netcore-1.1\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Data.SqlClient/SqlDataReader.xml\n  ms.technology:\n  - dotnet-ado\n  author: JennieHubbard\n  ms.author: jhubbard\n  manager: jhubbard\n- uid: System.Data.SqlClient.SqlDataReader.HasRows\n  commentId: P:System.Data.SqlClient.SqlDataReader.HasRows\n  id: HasRows\n  parent: System.Data.SqlClient.SqlDataReader\n  langs:\n  - csharp\n  name: HasRows\n  nameWithType: SqlDataReader.HasRows\n  fullName: SqlDataReader.HasRows\n  type: Property\n  assemblies:\n  - System.Data.SqlClient\n  - System.Data\n  - netstandard\n  namespace: System.Data.SqlClient\n  summary: Gets a value that indicates whether the <xref href=\"System.Data.SqlClient.SqlDataReader\"></xref> contains one or more rows.\n  syntax:\n    content: public override bool HasRows { get; }\n    return:\n      type: System.Boolean\n      description: '`true` if the <xref href=\"System.Data.SqlClient.SqlDataReader\"></xref> contains one or more rows; otherwise `false`.'\n  overload: System.Data.SqlClient.SqlDataReader.HasRows*\n  exceptions: []\n  version:\n  - netcore-1.0\n  - netcore-1.1\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  monikers:\n  - netcore-1.0\n  - netcore-1.1\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Data.SqlClient/SqlDataReader.xml\n  ms.technology:\n  - dotnet-ado\n  author: JennieHubbard\n  ms.author: jhubbard\n  manager: jhubbard\n- uid: System.Data.SqlClient.SqlDataReader.IsClosed\n  commentId: P:System.Data.SqlClient.SqlDataReader.IsClosed\n  id: IsClosed\n  parent: System.Data.SqlClient.SqlDataReader\n  langs:\n  - csharp\n  name: IsClosed\n  nameWithType: SqlDataReader.IsClosed\n  fullName: SqlDataReader.IsClosed\n  type: Property\n  assemblies:\n  - System.Data.SqlClient\n  - System.Data\n  - netstandard\n  namespace: System.Data.SqlClient\n  summary: Retrieves a Boolean value that indicates whether the specified <xref href=\"System.Data.SqlClient.SqlDataReader\"></xref> instance has been closed.\n  remarks: It is not possible to read from a <xref:System.Data.SqlClient.SqlDataReader> instance that is closed.\n  syntax:\n    content: public override bool IsClosed { get; }\n    return:\n      type: System.Boolean\n      description: '`true` if the specified <xref href=\"System.Data.SqlClient.SqlDataReader\"></xref> instance is closed; otherwise `false`.'\n  overload: System.Data.SqlClient.SqlDataReader.IsClosed*\n  exceptions: []\n  version:\n  - netcore-1.0\n  - netcore-1.1\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  monikers:\n  - netcore-1.0\n  - netcore-1.1\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Data.SqlClient/SqlDataReader.xml\n  ms.technology:\n  - dotnet-ado\n  author: JennieHubbard\n  ms.author: jhubbard\n  manager: jhubbard\n- uid: System.Data.SqlClient.SqlDataReader.IsCommandBehavior(System.Data.CommandBehavior)\n  commentId: M:System.Data.SqlClient.SqlDataReader.IsCommandBehavior(System.Data.CommandBehavior)\n  id: IsCommandBehavior(System.Data.CommandBehavior)\n  parent: System.Data.SqlClient.SqlDataReader\n  langs:\n  - csharp\n  name: IsCommandBehavior(CommandBehavior)\n  nameWithType: SqlDataReader.IsCommandBehavior(CommandBehavior)\n  fullName: SqlDataReader.IsCommandBehavior(CommandBehavior)\n  type: Method\n  assemblies:\n  - System.Data\n  namespace: System.Data.SqlClient\n  summary: Determines whether the specified <xref href=\"System.Data.CommandBehavior\"></xref> matches that of the <xref href=\"System.Data.SqlClient.SqlDataReader\"></xref> .\n  remarks: This member supports the .NET Framework infrastructure and is not intended to be used directly from your code.\n  syntax:\n    content: protected bool IsCommandBehavior (System.Data.CommandBehavior condition);\n    parameters:\n    - id: condition\n      type: System.Data.CommandBehavior\n      description: A <xref href=\"System.Data.CommandBehavior\"></xref> enumeration.\n    return:\n      type: System.Boolean\n      description: '`true` if the specified <xref href=\"System.Data.CommandBehavior\"></xref> is true, `false` otherwise.'\n  overload: System.Data.SqlClient.SqlDataReader.IsCommandBehavior*\n  exceptions: []\n  version:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Data.SqlClient/SqlDataReader.xml\n  ms.technology:\n  - dotnet-ado\n  author: JennieHubbard\n  ms.author: jhubbard\n  manager: jhubbard\n- uid: System.Data.SqlClient.SqlDataReader.IsDBNull(System.Int32)\n  commentId: M:System.Data.SqlClient.SqlDataReader.IsDBNull(System.Int32)\n  id: IsDBNull(System.Int32)\n  parent: System.Data.SqlClient.SqlDataReader\n  langs:\n  - csharp\n  name: IsDBNull(Int32)\n  nameWithType: SqlDataReader.IsDBNull(Int32)\n  fullName: SqlDataReader.IsDBNull(Int32)\n  type: Method\n  assemblies:\n  - System.Data.SqlClient\n  - System.Data\n  - netstandard\n  namespace: System.Data.SqlClient\n  summary: Gets a value that indicates whether the column contains non-existent or missing values.\n  remarks: \"Call this method to check for null column values before calling the typed get methods (for example, <xref:System.Data.SqlClient.SqlDataReader.GetByte%2A>, <xref:System.Data.SqlClient.SqlDataReader.GetChar%2A>, and so on) to avoid raising an error.  \\n  \\n [!code-csharp[SqlDataReader_IsDbNull#1](~/samples/snippets/csharp/VS_Snippets_ADO.NET/sqldatareader_isdbnull/cs/source.cs#1)]\\n [!code-vb[SqlDataReader_IsDbNull#1](~/samples/snippets/visualbasic/VS_Snippets_ADO.NET/sqldatareader_isdbnull/vb/source.vb#1)]\"\n  syntax:\n    content: public override bool IsDBNull (int i);\n    parameters:\n    - id: i\n      type: System.Int32\n      description: The zero-based column ordinal.\n    return:\n      type: System.Boolean\n      description: '`true` if the specified column value is equivalent to <xref href=\"System.DBNull\"></xref>; otherwise `false`.'\n  overload: System.Data.SqlClient.SqlDataReader.IsDBNull*\n  exceptions: []\n  version:\n  - netcore-1.0\n  - netcore-1.1\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  monikers:\n  - netcore-1.0\n  - netcore-1.1\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Data.SqlClient/SqlDataReader.xml\n  ms.technology:\n  - dotnet-ado\n  author: JennieHubbard\n  ms.author: jhubbard\n  manager: jhubbard\n- uid: System.Data.SqlClient.SqlDataReader.IsDBNullAsync(System.Int32,System.Threading.CancellationToken)\n  commentId: M:System.Data.SqlClient.SqlDataReader.IsDBNullAsync(System.Int32,System.Threading.CancellationToken)\n  id: IsDBNullAsync(System.Int32,System.Threading.CancellationToken)\n  parent: System.Data.SqlClient.SqlDataReader\n  langs:\n  - csharp\n  name: IsDBNullAsync(Int32, CancellationToken)\n  nameWithType: SqlDataReader.IsDBNullAsync(Int32, CancellationToken)\n  fullName: SqlDataReader.IsDBNullAsync(Int32, CancellationToken)\n  type: Method\n  assemblies:\n  - System.Data.SqlClient\n  - System.Data\n  - netstandard\n  namespace: System.Data.SqlClient\n  summary: \"An asynchronous version of <xref href=\\\"System.Data.SqlClient.SqlDataReader.IsDBNull(System.Int32)\\\"></xref>, which gets a value that indicates whether the column contains non-existent or missing values.  \\n  \\n The cancellation token can be used to request that the operation be abandoned before the command timeout elapses. Exceptions will be reported via the returned Task object.\"\n  remarks: For more information, see [SqlClient Streaming Support](~/docs/framework/data/adonet/sqlclient-streaming-support.md).\n  syntax:\n    content: public override System.Threading.Tasks.Task<bool> IsDBNullAsync (int i, System.Threading.CancellationToken cancellationToken);\n    parameters:\n    - id: i\n      type: System.Int32\n      description: The zero-based column to be retrieved.\n    - id: cancellationToken\n      type: System.Threading.CancellationToken\n      description: The cancellation instruction, which propagates a notification that operations should be canceled. This does not guarantee the cancellation. A setting of `CancellationToken.None` makes this method equivalent to <xref href=\"System.Data.SqlClient.SqlDataReader.IsDBNull(System.Int32)\"></xref>. The returned task must be marked as cancelled.\n    return:\n      type: System.Threading.Tasks.Task{System.Boolean}\n      description: '`true` if the specified column value is equivalent to `DBNull` otherwise `false`.'\n  overload: System.Data.SqlClient.SqlDataReader.IsDBNullAsync*\n  exceptions:\n  - type: System.InvalidOperationException\n    commentId: T:System.InvalidOperationException\n    description: \"The connection drops or is closed during the data retrieval.  \\n  \\n The <xref href=\\\"System.Data.SqlClient.SqlDataReader\\\"></xref> is closed during the data retrieval.  \\n  \\n There is no data ready to be read (for example, the first <xref href=\\\"System.Data.SqlClient.SqlDataReader.Read\\\"></xref> hasn't been called, or returned false).  \\n  \\n Trying to read a previously read column in sequential mode.  \\n  \\n There was an asynchronous operation in progress. This applies to all Get* methods when running in sequential mode, as they could be called while reading a stream.  \\n  \\n `Context Connection=true` is specified in the connection string.\"\n  - type: System.IndexOutOfRangeException\n    commentId: T:System.IndexOutOfRangeException\n    description: Trying to read a column that does not exist.\n  version:\n  - netcore-1.0\n  - netcore-1.1\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  monikers:\n  - netcore-1.0\n  - netcore-1.1\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Data.SqlClient/SqlDataReader.xml\n  ms.technology:\n  - dotnet-ado\n  author: JennieHubbard\n  ms.author: jhubbard\n  manager: jhubbard\n- uid: System.Data.SqlClient.SqlDataReader.Item(System.String)\n  commentId: P:System.Data.SqlClient.SqlDataReader.Item(System.String)\n  id: Item(System.String)\n  parent: System.Data.SqlClient.SqlDataReader\n  langs:\n  - csharp\n  name: Item(String)\n  nameWithType: SqlDataReader.Item(String)\n  fullName: SqlDataReader.Item(String)\n  type: Property\n  assemblies:\n  - System.Data.SqlClient\n  - System.Data\n  - netstandard\n  namespace: System.Data.SqlClient\n  summary: Gets the value of the specified column in its native format given the column name.\n  remarks: \"A case-sensitive lookup is performed first. If it fails, a second case-insensitive search is made (a case-insensitive comparison is done using the database collation). Unexpected results can occur when comparisons are affected by culture-specific casing rules. For example, in Turkish, the following example yields the wrong results because the file system in Turkish does not use linguistic casing rules for the letter 'i' in \\\"file\\\".  \\n  \\n This method is kana-width insensitive.\"\n  syntax:\n    content: public override object this[string name] { get; }\n    parameters:\n    - id: name\n      type: System.String\n      description: The column name.\n    return:\n      type: System.Object\n      description: The value of the specified column in its native format.\n  overload: System.Data.SqlClient.SqlDataReader.Item*\n  exceptions:\n  - type: System.IndexOutOfRangeException\n    commentId: T:System.IndexOutOfRangeException\n    description: No column with the specified name was found.\n  version:\n  - netcore-1.0\n  - netcore-1.1\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  monikers:\n  - netcore-1.0\n  - netcore-1.1\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Data.SqlClient/SqlDataReader.xml\n  ms.technology:\n  - dotnet-ado\n  author: JennieHubbard\n  ms.author: jhubbard\n  manager: jhubbard\n- uid: System.Data.SqlClient.SqlDataReader.Item(System.Int32)\n  commentId: P:System.Data.SqlClient.SqlDataReader.Item(System.Int32)\n  id: Item(System.Int32)\n  parent: System.Data.SqlClient.SqlDataReader\n  langs:\n  - csharp\n  name: Item(Int32)\n  nameWithType: SqlDataReader.Item(Int32)\n  fullName: SqlDataReader.Item(Int32)\n  type: Property\n  assemblies:\n  - System.Data.SqlClient\n  - System.Data\n  - netstandard\n  namespace: System.Data.SqlClient\n  summary: Gets the value of the specified column in its native format given the column ordinal.\n  syntax:\n    content: public override object this[int i] { get; }\n    parameters:\n    - id: i\n      type: System.Int32\n      description: The zero-based column ordinal.\n    return:\n      type: System.Object\n      description: The value of the specified column in its native format.\n  overload: System.Data.SqlClient.SqlDataReader.Item*\n  exceptions:\n  - type: System.IndexOutOfRangeException\n    commentId: T:System.IndexOutOfRangeException\n    description: The index passed was outside the range of 0 through <xref href=\"System.Data.IDataRecord.FieldCount\"></xref>.\n  version:\n  - netcore-1.0\n  - netcore-1.1\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  monikers:\n  - netcore-1.0\n  - netcore-1.1\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Data.SqlClient/SqlDataReader.xml\n  ms.technology:\n  - dotnet-ado\n  author: JennieHubbard\n  ms.author: jhubbard\n  manager: jhubbard\n- uid: System.Data.SqlClient.SqlDataReader.NextResult\n  commentId: M:System.Data.SqlClient.SqlDataReader.NextResult\n  id: NextResult\n  parent: System.Data.SqlClient.SqlDataReader\n  langs:\n  - csharp\n  name: NextResult()\n  nameWithType: SqlDataReader.NextResult()\n  fullName: SqlDataReader.NextResult()\n  type: Method\n  assemblies:\n  - System.Data.SqlClient\n  - System.Data\n  - netstandard\n  namespace: System.Data.SqlClient\n  summary: Advances the data reader to the next result, when reading the results of batch Transact-SQL statements.\n  remarks: \"Used to process multiple results, which can be generated by executing batch Transact-SQL statements.  \\n  \\n By default, the data reader is positioned on the first result.\"\n  syntax:\n    content: public override bool NextResult ();\n    parameters: []\n    return:\n      type: System.Boolean\n      description: '`true` if there are more result sets; otherwise `false`.'\n  overload: System.Data.SqlClient.SqlDataReader.NextResult*\n  exceptions: []\n  version:\n  - netcore-1.0\n  - netcore-1.1\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  monikers:\n  - netcore-1.0\n  - netcore-1.1\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Data.SqlClient/SqlDataReader.xml\n  ms.technology:\n  - dotnet-ado\n  author: JennieHubbard\n  ms.author: jhubbard\n  manager: jhubbard\n- uid: System.Data.SqlClient.SqlDataReader.NextResultAsync(System.Threading.CancellationToken)\n  commentId: M:System.Data.SqlClient.SqlDataReader.NextResultAsync(System.Threading.CancellationToken)\n  id: NextResultAsync(System.Threading.CancellationToken)\n  parent: System.Data.SqlClient.SqlDataReader\n  langs:\n  - csharp\n  name: NextResultAsync(CancellationToken)\n  nameWithType: SqlDataReader.NextResultAsync(CancellationToken)\n  fullName: SqlDataReader.NextResultAsync(CancellationToken)\n  type: Method\n  assemblies:\n  - System.Data.SqlClient\n  - System.Data\n  - netstandard\n  namespace: System.Data.SqlClient\n  summary: \"An asynchronous version of <xref href=\\\"System.Data.SqlClient.SqlDataReader.NextResult\\\"></xref>, which advances the data reader to the next result, when reading the results of batch [!INCLUDE[tsql](~/includes/tsql-md.md)] statements.  \\n  \\n The cancellation token can be used to request that the operation be abandoned before the command timeout elapses.  Exceptions will be reported via the returned Task object.\"\n  remarks: For more information about asynchronous programming in the [!INCLUDE[dnprdnshort](~/includes/dnprdnshort-md.md)] Data Provider for [!INCLUDE[ssNoVersion](~/includes/ssnoversion-md.md)], see [Asynchronous Programming](~/docs/framework/data/adonet/asynchronous-programming.md).\n  syntax:\n    content: public override System.Threading.Tasks.Task<bool> NextResultAsync (System.Threading.CancellationToken cancellationToken);\n    parameters:\n    - id: cancellationToken\n      type: System.Threading.CancellationToken\n      description: The cancellation instruction.\n    return:\n      type: System.Threading.Tasks.Task{System.Boolean}\n      description: A task representing the asynchronous operation.\n  overload: System.Data.SqlClient.SqlDataReader.NextResultAsync*\n  exceptions:\n  - type: System.InvalidOperationException\n    commentId: T:System.InvalidOperationException\n    description: \"Calling <xref href=\\\"System.Data.SqlClient.SqlDataReader.NextResultAsync(System.Threading.CancellationToken)\\\"></xref> more than once for the same instance before task completion.  \\n  \\n `Context Connection=true` is specified in the connection string.\"\n  - type: System.Data.SqlClient.SqlException\n    commentId: T:System.Data.SqlClient.SqlException\n    description: '[!INCLUDE[ssNoVersion](~/includes/ssnoversion-md.md)] returned an error while executing the command text.'\n  version:\n  - netcore-1.0\n  - netcore-1.1\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  monikers:\n  - netcore-1.0\n  - netcore-1.1\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Data.SqlClient/SqlDataReader.xml\n  ms.technology:\n  - dotnet-ado\n  author: JennieHubbard\n  ms.author: jhubbard\n  manager: jhubbard\n- uid: System.Data.SqlClient.SqlDataReader.Read\n  commentId: M:System.Data.SqlClient.SqlDataReader.Read\n  id: Read\n  parent: System.Data.SqlClient.SqlDataReader\n  langs:\n  - csharp\n  name: Read()\n  nameWithType: SqlDataReader.Read()\n  fullName: SqlDataReader.Read()\n  type: Method\n  assemblies:\n  - System.Data.SqlClient\n  - System.Data\n  - netstandard\n  namespace: System.Data.SqlClient\n  summary: Advances the <xref href=\"System.Data.SqlClient.SqlDataReader\"></xref> to the next record.\n  remarks: \"The default position of the <xref:System.Data.SqlClient.SqlDataReader> is before the first record. Therefore, you must call <xref:System.Data.SqlClient.SqlDataReader.Read%2A> to begin accessing any data.  \\n  \\n Only one `SqlDataReader` per associated <xref:System.Data.SqlClient.SqlConnection> may be open at a time, and any attempt to open another will fail until the first one is closed. Similarly, while the `SqlDataReader` is being used, the associated `SqlConnection` is busy serving it until you call <xref:System.Data.SqlClient.SqlDataReader.Close%2A>.\"\n  example:\n  - \"The following example creates a <xref:System.Data.SqlClient.SqlConnection>, a <xref:System.Data.SqlClient.SqlCommand>, and a <xref:System.Data.SqlClient.SqlDataReader>. The example reads through the data, writing it out to the console window. The code then closes the <xref:System.Data.SqlClient.SqlDataReader>. The <xref:System.Data.SqlClient.SqlConnection> is closed automatically at the end of the `using` code block.  \\n  \\n [!code-csharp[Classic WebData SqlDataReader.Read Example#1](~/samples/snippets/csharp/VS_Snippets_ADO.NET/Classic WebData SqlDataReader.Read Example/CS/source.cs#1)]\\n [!code-vb[Classic WebData SqlDataReader.Read Example#1](~/samples/snippets/visualbasic/VS_Snippets_ADO.NET/Classic WebData SqlDataReader.Read Example/VB/source.vb#1)]\"\n  syntax:\n    content: public override bool Read ();\n    parameters: []\n    return:\n      type: System.Boolean\n      description: '`true` if there are more rows; otherwise `false`.'\n  overload: System.Data.SqlClient.SqlDataReader.Read*\n  exceptions:\n  - type: System.Data.SqlClient.SqlException\n    commentId: T:System.Data.SqlClient.SqlException\n    description: '[!INCLUDE[ssNoVersion](~/includes/ssnoversion-md.md)] returned an error while executing the command text.'\n  version:\n  - netcore-1.0\n  - netcore-1.1\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  monikers:\n  - netcore-1.0\n  - netcore-1.1\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Data.SqlClient/SqlDataReader.xml\n  ms.technology:\n  - dotnet-ado\n  author: JennieHubbard\n  ms.author: jhubbard\n  manager: jhubbard\n- uid: System.Data.SqlClient.SqlDataReader.ReadAsync(System.Threading.CancellationToken)\n  commentId: M:System.Data.SqlClient.SqlDataReader.ReadAsync(System.Threading.CancellationToken)\n  id: ReadAsync(System.Threading.CancellationToken)\n  parent: System.Data.SqlClient.SqlDataReader\n  langs:\n  - csharp\n  name: ReadAsync(CancellationToken)\n  nameWithType: SqlDataReader.ReadAsync(CancellationToken)\n  fullName: SqlDataReader.ReadAsync(CancellationToken)\n  type: Method\n  assemblies:\n  - System.Data.SqlClient\n  - System.Data\n  - netstandard\n  namespace: System.Data.SqlClient\n  summary: \"An asynchronous version of <xref href=\\\"System.Data.SqlClient.SqlDataReader.Read\\\"></xref>, which advances the <xref href=\\\"System.Data.SqlClient.SqlDataReader\\\"></xref> to the next record.  \\n  \\n The cancellation token can be used to request that the operation be abandoned before the command timeout elapses. Exceptions will be reported via the returned Task object.\"\n  remarks: \"If the `behavior` parameter of <xref:System.Data.SqlClient.SqlCommand.ExecuteReaderAsync%2A> is set to `Default`, <xref:System.Data.SqlClient.SqlDataReader.ReadAsync%2A> reads the entire row before returning the Task.  \\n  \\n For more information, including code samples, about asynchronous programming in the [!INCLUDE[dnprdnshort](~/includes/dnprdnshort-md.md)] Data Provider for [!INCLUDE[ssNoVersion](~/includes/ssnoversion-md.md)], see [Asynchronous Programming](~/docs/framework/data/adonet/asynchronous-programming.md).\"\n  syntax:\n    content: public override System.Threading.Tasks.Task<bool> ReadAsync (System.Threading.CancellationToken cancellationToken);\n    parameters:\n    - id: cancellationToken\n      type: System.Threading.CancellationToken\n      description: The cancellation instruction.\n    return:\n      type: System.Threading.Tasks.Task{System.Boolean}\n      description: A task representing the asynchronous operation.\n  overload: System.Data.SqlClient.SqlDataReader.ReadAsync*\n  exceptions:\n  - type: System.InvalidOperationException\n    commentId: T:System.InvalidOperationException\n    description: \"Calling <xref href=\\\"System.Data.SqlClient.SqlDataReader.ReadAsync(System.Threading.CancellationToken)\\\"></xref> more than once for the same instance before task completion.  \\n  \\n `Context Connection=true` is specified in the connection string.\"\n  - type: System.Data.SqlClient.SqlException\n    commentId: T:System.Data.SqlClient.SqlException\n    description: '[!INCLUDE[ssNoVersion](~/includes/ssnoversion-md.md)] returned an error while executing the command text.'\n  version:\n  - netcore-1.0\n  - netcore-1.1\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  monikers:\n  - netcore-1.0\n  - netcore-1.1\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Data.SqlClient/SqlDataReader.xml\n  ms.technology:\n  - dotnet-ado\n  author: JennieHubbard\n  ms.author: jhubbard\n  manager: jhubbard\n- uid: System.Data.SqlClient.SqlDataReader.RecordsAffected\n  commentId: P:System.Data.SqlClient.SqlDataReader.RecordsAffected\n  id: RecordsAffected\n  parent: System.Data.SqlClient.SqlDataReader\n  langs:\n  - csharp\n  name: RecordsAffected\n  nameWithType: SqlDataReader.RecordsAffected\n  fullName: SqlDataReader.RecordsAffected\n  type: Property\n  assemblies:\n  - System.Data.SqlClient\n  - System.Data\n  - netstandard\n  namespace: System.Data.SqlClient\n  summary: Gets the number of rows changed, inserted, or deleted by execution of the Transact-SQL statement.\n  remarks: \"The <xref:System.Data.SqlClient.SqlDataReader.RecordsAffected%2A> property is not set until all rows are read and you close the <xref:System.Data.SqlClient.SqlDataReader>.  \\n  \\n The value of this property is cumulative. For example, if two records are inserted in batch mode, the value of `RecordsAffected` will be two.  \\n  \\n <xref:System.Data.SqlClient.SqlDataReader.IsClosed%2A> and <xref:System.Data.SqlClient.SqlDataReader.RecordsAffected%2A> are the only properties that you can call after the <xref:System.Data.SqlClient.SqlDataReader> is closed.\"\n  syntax:\n    content: public override int RecordsAffected { get; }\n    return:\n      type: System.Int32\n      description: The number of rows changed, inserted, or deleted; 0 if no rows were affected or the statement failed; and -1 for SELECT statements.\n  overload: System.Data.SqlClient.SqlDataReader.RecordsAffected*\n  exceptions: []\n  version:\n  - netcore-1.0\n  - netcore-1.1\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  monikers:\n  - netcore-1.0\n  - netcore-1.1\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Data.SqlClient/SqlDataReader.xml\n  ms.technology:\n  - dotnet-ado\n  author: JennieHubbard\n  ms.author: jhubbard\n  manager: jhubbard\n- uid: System.Data.SqlClient.SqlDataReader.VisibleFieldCount\n  commentId: P:System.Data.SqlClient.SqlDataReader.VisibleFieldCount\n  id: VisibleFieldCount\n  parent: System.Data.SqlClient.SqlDataReader\n  langs:\n  - csharp\n  name: VisibleFieldCount\n  nameWithType: SqlDataReader.VisibleFieldCount\n  fullName: SqlDataReader.VisibleFieldCount\n  type: Property\n  assemblies:\n  - System.Data.SqlClient\n  - System.Data\n  - netstandard\n  namespace: System.Data.SqlClient\n  summary: Gets the number of fields in the <xref href=\"System.Data.SqlClient.SqlDataReader\"></xref> that are not hidden.\n  remarks: This value is used to determine how many fields in the <xref:System.Data.SqlClient.SqlDataReader> are visible. For example, a SELECT on a partial primary key returns the remaining parts of the key as hidden fields. The hidden fields are always appended behind the visible fields.\n  syntax:\n    content: public override int VisibleFieldCount { get; }\n    return:\n      type: System.Int32\n      description: The number of fields that are not hidden.\n  overload: System.Data.SqlClient.SqlDataReader.VisibleFieldCount*\n  exceptions: []\n  version:\n  - netcore-1.0\n  - netcore-1.1\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  monikers:\n  - netcore-1.0\n  - netcore-1.1\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Data.SqlClient/SqlDataReader.xml\n  ms.technology:\n  - dotnet-ado\n  author: JennieHubbard\n  ms.author: jhubbard\n  manager: jhubbard\n- uid: System.Data.SqlClient.SqlDataReader.System#Data#IDataRecord#GetData(System.Int32)\n  commentId: M:System.Data.SqlClient.SqlDataReader.System#Data#IDataRecord#GetData(System.Int32)\n  id: System#Data#IDataRecord#GetData(System.Int32)\n  isEii: true\n  parent: System.Data.SqlClient.SqlDataReader\n  langs:\n  - csharp\n  name: IDataRecord.GetData(Int32)\n  nameWithType: SqlDataReader.IDataRecord.GetData(Int32)\n  fullName: SqlDataReader.IDataRecord.GetData(Int32)\n  type: Method\n  assemblies:\n  - System.Data\n  namespace: System.Data.SqlClient\n  summary: Returns an <xref href=\"System.Data.IDataReader\"></xref> for the specified column ordinal.\n  remarks: This member is an explicit interface member implementation. It can be used only when the <xref:System.Data.SqlClient.SqlDataReader> instance is cast to an <xref:System.IDataRecord> interface.\n  syntax:\n    content: System.Data.IDataReader IDataRecord.GetData (int i);\n    parameters:\n    - id: i\n      type: System.Int32\n      description: A column ordinal.\n    return:\n      type: System.Data.IDataReader\n      description: The <xref href=\"System.Data.IDataReader\"></xref> instance for the specified column ordinal.\n  overload: System.Data.SqlClient.SqlDataReader.System#Data#IDataRecord#GetData*\n  exceptions: []\n  attributes: []\n  version:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Data.SqlClient/SqlDataReader.xml\n  ms.technology:\n  - dotnet-ado\n  author: JennieHubbard\n  ms.author: jhubbard\n  manager: jhubbard\nreferences:\n- uid: System.Data.Common.DbDataReader\n  parent: System.Data.Common\n  isExternal: false\n  name: DbDataReader\n  nameWithType: DbDataReader\n  fullName: System.Data.Common.DbDataReader\n- uid: System.NotSupportedException\n  parent: System\n  isExternal: false\n  name: NotSupportedException\n  nameWithType: NotSupportedException\n  fullName: System.NotSupportedException\n- uid: System.InvalidCastException\n  parent: System\n  isExternal: false\n  name: InvalidCastException\n  nameWithType: InvalidCastException\n  fullName: System.InvalidCastException\n- uid: System.InvalidOperationException\n  parent: System\n  isExternal: false\n  name: InvalidOperationException\n  nameWithType: InvalidOperationException\n  fullName: System.InvalidOperationException\n- uid: System.IndexOutOfRangeException\n  parent: System\n  isExternal: false\n  name: IndexOutOfRangeException\n  nameWithType: IndexOutOfRangeException\n  fullName: System.IndexOutOfRangeException\n- uid: System.Data.SqlTypes.SqlNullValueException\n  parent: System.Data.SqlTypes\n  isExternal: false\n  name: SqlNullValueException\n  nameWithType: SqlNullValueException\n  fullName: System.Data.SqlTypes.SqlNullValueException\n- uid: System.ArgumentNullException\n  parent: System\n  isExternal: false\n  name: ArgumentNullException\n  nameWithType: ArgumentNullException\n  fullName: System.ArgumentNullException\n- uid: System.ArgumentOutOfRangeException\n  parent: System\n  isExternal: false\n  name: ArgumentOutOfRangeException\n  nameWithType: ArgumentOutOfRangeException\n  fullName: System.ArgumentOutOfRangeException\n- uid: System.Data.SqlClient.SqlException\n  parent: System.Data.SqlClient\n  isExternal: false\n  name: SqlException\n  nameWithType: SqlException\n  fullName: System.Data.SqlClient.SqlException\n- uid: System.Data.SqlClient.SqlDataReader.Close\n  parent: System.Data.SqlClient.SqlDataReader\n  isExternal: false\n  name: Close()\n  nameWithType: SqlDataReader.Close()\n  fullName: SqlDataReader.Close()\n- uid: System.Data.SqlClient.SqlDataReader.Connection\n  parent: System.Data.SqlClient.SqlDataReader\n  isExternal: false\n  name: Connection\n  nameWithType: SqlDataReader.Connection\n  fullName: SqlDataReader.Connection\n- uid: System.Data.SqlClient.SqlConnection\n  parent: System.Data.SqlClient\n  isExternal: false\n  name: SqlConnection\n  nameWithType: SqlConnection\n  fullName: System.Data.SqlClient.SqlConnection\n- uid: System.Data.SqlClient.SqlDataReader.Depth\n  parent: System.Data.SqlClient.SqlDataReader\n  isExternal: false\n  name: Depth\n  nameWithType: SqlDataReader.Depth\n  fullName: SqlDataReader.Depth\n- uid: System.Int32\n  parent: System\n  isExternal: false\n  name: Int32\n  nameWithType: Int32\n  fullName: System.Int32\n- uid: System.Data.SqlClient.SqlDataReader.FieldCount\n  parent: System.Data.SqlClient.SqlDataReader\n  isExternal: false\n  name: FieldCount\n  nameWithType: SqlDataReader.FieldCount\n  fullName: SqlDataReader.FieldCount\n- uid: System.Data.SqlClient.SqlDataReader.GetBoolean(System.Int32)\n  parent: System.Data.SqlClient.SqlDataReader\n  isExternal: false\n  name: GetBoolean(Int32)\n  nameWithType: SqlDataReader.GetBoolean(Int32)\n  fullName: SqlDataReader.GetBoolean(Int32)\n- uid: System.Boolean\n  parent: System\n  isExternal: false\n  name: Boolean\n  nameWithType: Boolean\n  fullName: System.Boolean\n- uid: System.Data.SqlClient.SqlDataReader.GetByte(System.Int32)\n  parent: System.Data.SqlClient.SqlDataReader\n  isExternal: false\n  name: GetByte(Int32)\n  nameWithType: SqlDataReader.GetByte(Int32)\n  fullName: SqlDataReader.GetByte(Int32)\n- uid: System.Byte\n  parent: System\n  isExternal: false\n  name: Byte\n  nameWithType: Byte\n  fullName: System.Byte\n- uid: System.Data.SqlClient.SqlDataReader.GetBytes(System.Int32,System.Int64,System.Byte[],System.Int32,System.Int32)\n  parent: System.Data.SqlClient.SqlDataReader\n  isExternal: false\n  name: GetBytes(Int32, Int64, Byte[], Int32, Int32)\n  nameWithType: SqlDataReader.GetBytes(Int32, Int64, Byte[], Int32, Int32)\n  fullName: SqlDataReader.GetBytes(Int32, Int64, Byte[], Int32, Int32)\n- uid: System.Int64\n  parent: System\n  isExternal: false\n  name: Int64\n  nameWithType: Int64\n  fullName: System.Int64\n- uid: System.Byte[]\n  parent: System\n  isExternal: false\n  name: Byte[]\n  nameWithType: Byte[]\n  fullName: System.Byte[]\n  spec.csharp:\n  - uid: System.Byte\n    name: Byte\n    nameWithType: Byte\n    fullName: System.Byte\n  - name: '[]'\n    nameWithType: '[]'\n    fullName: '[]'\n- uid: System.Data.SqlClient.SqlDataReader.GetChar(System.Int32)\n  parent: System.Data.SqlClient.SqlDataReader\n  isExternal: false\n  name: GetChar(Int32)\n  nameWithType: SqlDataReader.GetChar(Int32)\n  fullName: SqlDataReader.GetChar(Int32)\n- uid: System.Char\n  parent: System\n  isExternal: false\n  name: Char\n  nameWithType: Char\n  fullName: System.Char\n- uid: System.Data.SqlClient.SqlDataReader.GetChars(System.Int32,System.Int64,System.Char[],System.Int32,System.Int32)\n  parent: System.Data.SqlClient.SqlDataReader\n  isExternal: false\n  name: GetChars(Int32, Int64, Char[], Int32, Int32)\n  nameWithType: SqlDataReader.GetChars(Int32, Int64, Char[], Int32, Int32)\n  fullName: SqlDataReader.GetChars(Int32, Int64, Char[], Int32, Int32)\n- uid: System.Char[]\n  parent: System\n  isExternal: false\n  name: Char[]\n  nameWithType: Char[]\n  fullName: System.Char[]\n  spec.csharp:\n  - uid: System.Char\n    name: Char\n    nameWithType: Char\n    fullName: System.Char\n  - name: '[]'\n    nameWithType: '[]'\n    fullName: '[]'\n- uid: System.Data.SqlClient.SqlDataReader.GetDataTypeName(System.Int32)\n  parent: System.Data.SqlClient.SqlDataReader\n  isExternal: false\n  name: GetDataTypeName(Int32)\n  nameWithType: SqlDataReader.GetDataTypeName(Int32)\n  fullName: SqlDataReader.GetDataTypeName(Int32)\n- uid: System.String\n  parent: System\n  isExternal: false\n  name: String\n  nameWithType: String\n  fullName: System.String\n- uid: System.Data.SqlClient.SqlDataReader.GetDateTime(System.Int32)\n  parent: System.Data.SqlClient.SqlDataReader\n  isExternal: false\n  name: GetDateTime(Int32)\n  nameWithType: SqlDataReader.GetDateTime(Int32)\n  fullName: SqlDataReader.GetDateTime(Int32)\n- uid: System.DateTime\n  parent: System\n  isExternal: false\n  name: DateTime\n  nameWithType: DateTime\n  fullName: System.DateTime\n- uid: System.Data.SqlClient.SqlDataReader.GetDateTimeOffset(System.Int32)\n  parent: System.Data.SqlClient.SqlDataReader\n  isExternal: false\n  name: GetDateTimeOffset(Int32)\n  nameWithType: SqlDataReader.GetDateTimeOffset(Int32)\n  fullName: SqlDataReader.GetDateTimeOffset(Int32)\n- uid: System.DateTimeOffset\n  parent: System\n  isExternal: false\n  name: DateTimeOffset\n  nameWithType: DateTimeOffset\n  fullName: System.DateTimeOffset\n- uid: System.Data.SqlClient.SqlDataReader.GetDecimal(System.Int32)\n  parent: System.Data.SqlClient.SqlDataReader\n  isExternal: false\n  name: GetDecimal(Int32)\n  nameWithType: SqlDataReader.GetDecimal(Int32)\n  fullName: SqlDataReader.GetDecimal(Int32)\n- uid: System.Decimal\n  parent: System\n  isExternal: false\n  name: Decimal\n  nameWithType: Decimal\n  fullName: System.Decimal\n- uid: System.Data.SqlClient.SqlDataReader.GetDouble(System.Int32)\n  parent: System.Data.SqlClient.SqlDataReader\n  isExternal: false\n  name: GetDouble(Int32)\n  nameWithType: SqlDataReader.GetDouble(Int32)\n  fullName: SqlDataReader.GetDouble(Int32)\n- uid: System.Double\n  parent: System\n  isExternal: false\n  name: Double\n  nameWithType: Double\n  fullName: System.Double\n- uid: System.Data.SqlClient.SqlDataReader.GetEnumerator\n  parent: System.Data.SqlClient.SqlDataReader\n  isExternal: false\n  name: GetEnumerator()\n  nameWithType: SqlDataReader.GetEnumerator()\n  fullName: SqlDataReader.GetEnumerator()\n- uid: System.Collections.IEnumerator\n  parent: System.Collections\n  isExternal: false\n  name: IEnumerator\n  nameWithType: IEnumerator\n  fullName: System.Collections.IEnumerator\n- uid: System.Data.SqlClient.SqlDataReader.GetFieldType(System.Int32)\n  parent: System.Data.SqlClient.SqlDataReader\n  isExternal: false\n  name: GetFieldType(Int32)\n  nameWithType: SqlDataReader.GetFieldType(Int32)\n  fullName: SqlDataReader.GetFieldType(Int32)\n- uid: System.Type\n  parent: System\n  isExternal: false\n  name: Type\n  nameWithType: Type\n  fullName: System.Type\n- uid: System.Data.SqlClient.SqlDataReader.GetFieldValue``1(System.Int32)\n  parent: System.Data.SqlClient.SqlDataReader\n  isExternal: false\n  name: GetFieldValue<T>(Int32)\n  nameWithType: SqlDataReader.GetFieldValue<T>(Int32)\n  fullName: SqlDataReader.GetFieldValue<T>(Int32)\n- uid: T\n  isExternal: true\n  name: T\n  nameWithType: T\n  fullName: T\n- uid: System.Data.SqlClient.SqlDataReader.GetFieldValueAsync``1(System.Int32,System.Threading.CancellationToken)\n  parent: System.Data.SqlClient.SqlDataReader\n  isExternal: false\n  name: GetFieldValueAsync<T>(Int32, CancellationToken)\n  nameWithType: SqlDataReader.GetFieldValueAsync<T>(Int32, CancellationToken)\n  fullName: SqlDataReader.GetFieldValueAsync<T>(Int32, CancellationToken)\n- uid: System.Threading.Tasks.Task`1\n  name: Task<TResult>\n  nameWithType: Task<TResult>\n  fullName: System.Threading.Tasks.Task<TResult>\n- uid: System.Threading.Tasks.Task{T}\n  parent: System.Threading.Tasks\n  isExternal: false\n  name: Task<T>\n  nameWithType: Task<T>\n  fullName: System.Threading.Tasks.Task<T>\n  spec.csharp:\n  - uid: System.Threading.Tasks.Task`1\n    name: Task\n    nameWithType: Task\n    fullName: System.Threading.Tasks.Task\n  - name: <\n    nameWithType: <\n    fullName: <\n  - uid: T\n    name: T\n    nameWithType: T\n    fullName: T\n  - name: '>'\n    nameWithType: '>'\n    fullName: '>'\n- uid: System.Threading.CancellationToken\n  parent: System.Threading\n  isExternal: false\n  name: CancellationToken\n  nameWithType: CancellationToken\n  fullName: System.Threading.CancellationToken\n- uid: System.Data.SqlClient.SqlDataReader.GetFloat(System.Int32)\n  parent: System.Data.SqlClient.SqlDataReader\n  isExternal: false\n  name: GetFloat(Int32)\n  nameWithType: SqlDataReader.GetFloat(Int32)\n  fullName: SqlDataReader.GetFloat(Int32)\n- uid: System.Single\n  parent: System\n  isExternal: false\n  name: Single\n  nameWithType: Single\n  fullName: System.Single\n- uid: System.Data.SqlClient.SqlDataReader.GetGuid(System.Int32)\n  parent: System.Data.SqlClient.SqlDataReader\n  isExternal: false\n  name: GetGuid(Int32)\n  nameWithType: SqlDataReader.GetGuid(Int32)\n  fullName: SqlDataReader.GetGuid(Int32)\n- uid: System.Guid\n  parent: System\n  isExternal: false\n  name: Guid\n  nameWithType: Guid\n  fullName: System.Guid\n- uid: System.Data.SqlClient.SqlDataReader.GetInt16(System.Int32)\n  parent: System.Data.SqlClient.SqlDataReader\n  isExternal: false\n  name: GetInt16(Int32)\n  nameWithType: SqlDataReader.GetInt16(Int32)\n  fullName: SqlDataReader.GetInt16(Int32)\n- uid: System.Int16\n  parent: System\n  isExternal: false\n  name: Int16\n  nameWithType: Int16\n  fullName: System.Int16\n- uid: System.Data.SqlClient.SqlDataReader.GetInt32(System.Int32)\n  parent: System.Data.SqlClient.SqlDataReader\n  isExternal: false\n  name: GetInt32(Int32)\n  nameWithType: SqlDataReader.GetInt32(Int32)\n  fullName: SqlDataReader.GetInt32(Int32)\n- uid: System.Data.SqlClient.SqlDataReader.GetInt64(System.Int32)\n  parent: System.Data.SqlClient.SqlDataReader\n  isExternal: false\n  name: GetInt64(Int32)\n  nameWithType: SqlDataReader.GetInt64(Int32)\n  fullName: SqlDataReader.GetInt64(Int32)\n- uid: System.Data.SqlClient.SqlDataReader.GetName(System.Int32)\n  parent: System.Data.SqlClient.SqlDataReader\n  isExternal: false\n  name: GetName(Int32)\n  nameWithType: SqlDataReader.GetName(Int32)\n  fullName: SqlDataReader.GetName(Int32)\n- uid: System.Data.SqlClient.SqlDataReader.GetOrdinal(System.String)\n  parent: System.Data.SqlClient.SqlDataReader\n  isExternal: false\n  name: GetOrdinal(String)\n  nameWithType: SqlDataReader.GetOrdinal(String)\n  fullName: SqlDataReader.GetOrdinal(String)\n- uid: System.Data.SqlClient.SqlDataReader.GetProviderSpecificFieldType(System.Int32)\n  parent: System.Data.SqlClient.SqlDataReader\n  isExternal: false\n  name: GetProviderSpecificFieldType(Int32)\n  nameWithType: SqlDataReader.GetProviderSpecificFieldType(Int32)\n  fullName: SqlDataReader.GetProviderSpecificFieldType(Int32)\n- uid: System.Data.SqlClient.SqlDataReader.GetProviderSpecificValue(System.Int32)\n  parent: System.Data.SqlClient.SqlDataReader\n  isExternal: false\n  name: GetProviderSpecificValue(Int32)\n  nameWithType: SqlDataReader.GetProviderSpecificValue(Int32)\n  fullName: SqlDataReader.GetProviderSpecificValue(Int32)\n- uid: System.Object\n  parent: System\n  isExternal: false\n  name: Object\n  nameWithType: Object\n  fullName: System.Object\n- uid: System.Data.SqlClient.SqlDataReader.GetProviderSpecificValues(System.Object[])\n  parent: System.Data.SqlClient.SqlDataReader\n  isExternal: false\n  name: GetProviderSpecificValues(Object[])\n  nameWithType: SqlDataReader.GetProviderSpecificValues(Object[])\n  fullName: SqlDataReader.GetProviderSpecificValues(Object[])\n- uid: System.Object[]\n  parent: System\n  isExternal: false\n  name: Object[]\n  nameWithType: Object[]\n  fullName: System.Object[]\n  spec.csharp:\n  - uid: System.Object\n    name: Object\n    nameWithType: Object\n    fullName: System.Object\n  - name: '[]'\n    nameWithType: '[]'\n    fullName: '[]'\n- uid: System.Data.SqlClient.SqlDataReader.GetSchemaTable\n  parent: System.Data.SqlClient.SqlDataReader\n  isExternal: false\n  name: GetSchemaTable()\n  nameWithType: SqlDataReader.GetSchemaTable()\n  fullName: SqlDataReader.GetSchemaTable()\n- uid: System.Data.DataTable\n  parent: System.Data\n  isExternal: false\n  name: DataTable\n  nameWithType: DataTable\n  fullName: System.Data.DataTable\n- uid: System.Data.SqlClient.SqlDataReader.GetSqlBinary(System.Int32)\n  parent: System.Data.SqlClient.SqlDataReader\n  isExternal: false\n  name: GetSqlBinary(Int32)\n  nameWithType: SqlDataReader.GetSqlBinary(Int32)\n  fullName: SqlDataReader.GetSqlBinary(Int32)\n- uid: System.Data.SqlTypes.SqlBinary\n  parent: System.Data.SqlTypes\n  isExternal: false\n  name: SqlBinary\n  nameWithType: SqlBinary\n  fullName: System.Data.SqlTypes.SqlBinary\n- uid: System.Data.SqlClient.SqlDataReader.GetSqlBoolean(System.Int32)\n  parent: System.Data.SqlClient.SqlDataReader\n  isExternal: false\n  name: GetSqlBoolean(Int32)\n  nameWithType: SqlDataReader.GetSqlBoolean(Int32)\n  fullName: SqlDataReader.GetSqlBoolean(Int32)\n- uid: System.Data.SqlTypes.SqlBoolean\n  parent: System.Data.SqlTypes\n  isExternal: false\n  name: SqlBoolean\n  nameWithType: SqlBoolean\n  fullName: System.Data.SqlTypes.SqlBoolean\n- uid: System.Data.SqlClient.SqlDataReader.GetSqlByte(System.Int32)\n  parent: System.Data.SqlClient.SqlDataReader\n  isExternal: false\n  name: GetSqlByte(Int32)\n  nameWithType: SqlDataReader.GetSqlByte(Int32)\n  fullName: SqlDataReader.GetSqlByte(Int32)\n- uid: System.Data.SqlTypes.SqlByte\n  parent: System.Data.SqlTypes\n  isExternal: false\n  name: SqlByte\n  nameWithType: SqlByte\n  fullName: System.Data.SqlTypes.SqlByte\n- uid: System.Data.SqlClient.SqlDataReader.GetSqlBytes(System.Int32)\n  parent: System.Data.SqlClient.SqlDataReader\n  isExternal: false\n  name: GetSqlBytes(Int32)\n  nameWithType: SqlDataReader.GetSqlBytes(Int32)\n  fullName: SqlDataReader.GetSqlBytes(Int32)\n- uid: System.Data.SqlTypes.SqlBytes\n  parent: System.Data.SqlTypes\n  isExternal: false\n  name: SqlBytes\n  nameWithType: SqlBytes\n  fullName: System.Data.SqlTypes.SqlBytes\n- uid: System.Data.SqlClient.SqlDataReader.GetSqlChars(System.Int32)\n  parent: System.Data.SqlClient.SqlDataReader\n  isExternal: false\n  name: GetSqlChars(Int32)\n  nameWithType: SqlDataReader.GetSqlChars(Int32)\n  fullName: SqlDataReader.GetSqlChars(Int32)\n- uid: System.Data.SqlTypes.SqlChars\n  parent: System.Data.SqlTypes\n  isExternal: false\n  name: SqlChars\n  nameWithType: SqlChars\n  fullName: System.Data.SqlTypes.SqlChars\n- uid: System.Data.SqlClient.SqlDataReader.GetSqlDateTime(System.Int32)\n  parent: System.Data.SqlClient.SqlDataReader\n  isExternal: false\n  name: GetSqlDateTime(Int32)\n  nameWithType: SqlDataReader.GetSqlDateTime(Int32)\n  fullName: SqlDataReader.GetSqlDateTime(Int32)\n- uid: System.Data.SqlTypes.SqlDateTime\n  parent: System.Data.SqlTypes\n  isExternal: false\n  name: SqlDateTime\n  nameWithType: SqlDateTime\n  fullName: System.Data.SqlTypes.SqlDateTime\n- uid: System.Data.SqlClient.SqlDataReader.GetSqlDecimal(System.Int32)\n  parent: System.Data.SqlClient.SqlDataReader\n  isExternal: false\n  name: GetSqlDecimal(Int32)\n  nameWithType: SqlDataReader.GetSqlDecimal(Int32)\n  fullName: SqlDataReader.GetSqlDecimal(Int32)\n- uid: System.Data.SqlTypes.SqlDecimal\n  parent: System.Data.SqlTypes\n  isExternal: false\n  name: SqlDecimal\n  nameWithType: SqlDecimal\n  fullName: System.Data.SqlTypes.SqlDecimal\n- uid: System.Data.SqlClient.SqlDataReader.GetSqlDouble(System.Int32)\n  parent: System.Data.SqlClient.SqlDataReader\n  isExternal: false\n  name: GetSqlDouble(Int32)\n  nameWithType: SqlDataReader.GetSqlDouble(Int32)\n  fullName: SqlDataReader.GetSqlDouble(Int32)\n- uid: System.Data.SqlTypes.SqlDouble\n  parent: System.Data.SqlTypes\n  isExternal: false\n  name: SqlDouble\n  nameWithType: SqlDouble\n  fullName: System.Data.SqlTypes.SqlDouble\n- uid: System.Data.SqlClient.SqlDataReader.GetSqlGuid(System.Int32)\n  parent: System.Data.SqlClient.SqlDataReader\n  isExternal: false\n  name: GetSqlGuid(Int32)\n  nameWithType: SqlDataReader.GetSqlGuid(Int32)\n  fullName: SqlDataReader.GetSqlGuid(Int32)\n- uid: System.Data.SqlTypes.SqlGuid\n  parent: System.Data.SqlTypes\n  isExternal: false\n  name: SqlGuid\n  nameWithType: SqlGuid\n  fullName: System.Data.SqlTypes.SqlGuid\n- uid: System.Data.SqlClient.SqlDataReader.GetSqlInt16(System.Int32)\n  parent: System.Data.SqlClient.SqlDataReader\n  isExternal: false\n  name: GetSqlInt16(Int32)\n  nameWithType: SqlDataReader.GetSqlInt16(Int32)\n  fullName: SqlDataReader.GetSqlInt16(Int32)\n- uid: System.Data.SqlTypes.SqlInt16\n  parent: System.Data.SqlTypes\n  isExternal: false\n  name: SqlInt16\n  nameWithType: SqlInt16\n  fullName: System.Data.SqlTypes.SqlInt16\n- uid: System.Data.SqlClient.SqlDataReader.GetSqlInt32(System.Int32)\n  parent: System.Data.SqlClient.SqlDataReader\n  isExternal: false\n  name: GetSqlInt32(Int32)\n  nameWithType: SqlDataReader.GetSqlInt32(Int32)\n  fullName: SqlDataReader.GetSqlInt32(Int32)\n- uid: System.Data.SqlTypes.SqlInt32\n  parent: System.Data.SqlTypes\n  isExternal: false\n  name: SqlInt32\n  nameWithType: SqlInt32\n  fullName: System.Data.SqlTypes.SqlInt32\n- uid: System.Data.SqlClient.SqlDataReader.GetSqlInt64(System.Int32)\n  parent: System.Data.SqlClient.SqlDataReader\n  isExternal: false\n  name: GetSqlInt64(Int32)\n  nameWithType: SqlDataReader.GetSqlInt64(Int32)\n  fullName: SqlDataReader.GetSqlInt64(Int32)\n- uid: System.Data.SqlTypes.SqlInt64\n  parent: System.Data.SqlTypes\n  isExternal: false\n  name: SqlInt64\n  nameWithType: SqlInt64\n  fullName: System.Data.SqlTypes.SqlInt64\n- uid: System.Data.SqlClient.SqlDataReader.GetSqlMoney(System.Int32)\n  parent: System.Data.SqlClient.SqlDataReader\n  isExternal: false\n  name: GetSqlMoney(Int32)\n  nameWithType: SqlDataReader.GetSqlMoney(Int32)\n  fullName: SqlDataReader.GetSqlMoney(Int32)\n- uid: System.Data.SqlTypes.SqlMoney\n  parent: System.Data.SqlTypes\n  isExternal: false\n  name: SqlMoney\n  nameWithType: SqlMoney\n  fullName: System.Data.SqlTypes.SqlMoney\n- uid: System.Data.SqlClient.SqlDataReader.GetSqlSingle(System.Int32)\n  parent: System.Data.SqlClient.SqlDataReader\n  isExternal: false\n  name: GetSqlSingle(Int32)\n  nameWithType: SqlDataReader.GetSqlSingle(Int32)\n  fullName: SqlDataReader.GetSqlSingle(Int32)\n- uid: System.Data.SqlTypes.SqlSingle\n  parent: System.Data.SqlTypes\n  isExternal: false\n  name: SqlSingle\n  nameWithType: SqlSingle\n  fullName: System.Data.SqlTypes.SqlSingle\n- uid: System.Data.SqlClient.SqlDataReader.GetSqlString(System.Int32)\n  parent: System.Data.SqlClient.SqlDataReader\n  isExternal: false\n  name: GetSqlString(Int32)\n  nameWithType: SqlDataReader.GetSqlString(Int32)\n  fullName: SqlDataReader.GetSqlString(Int32)\n- uid: System.Data.SqlTypes.SqlString\n  parent: System.Data.SqlTypes\n  isExternal: false\n  name: SqlString\n  nameWithType: SqlString\n  fullName: System.Data.SqlTypes.SqlString\n- uid: System.Data.SqlClient.SqlDataReader.GetSqlValue(System.Int32)\n  parent: System.Data.SqlClient.SqlDataReader\n  isExternal: false\n  name: GetSqlValue(Int32)\n  nameWithType: SqlDataReader.GetSqlValue(Int32)\n  fullName: SqlDataReader.GetSqlValue(Int32)\n- uid: System.Data.SqlClient.SqlDataReader.GetSqlValues(System.Object[])\n  parent: System.Data.SqlClient.SqlDataReader\n  isExternal: false\n  name: GetSqlValues(Object[])\n  nameWithType: SqlDataReader.GetSqlValues(Object[])\n  fullName: SqlDataReader.GetSqlValues(Object[])\n- uid: System.Data.SqlClient.SqlDataReader.GetSqlXml(System.Int32)\n  parent: System.Data.SqlClient.SqlDataReader\n  isExternal: false\n  name: GetSqlXml(Int32)\n  nameWithType: SqlDataReader.GetSqlXml(Int32)\n  fullName: SqlDataReader.GetSqlXml(Int32)\n- uid: System.Data.SqlTypes.SqlXml\n  parent: System.Data.SqlTypes\n  isExternal: false\n  name: SqlXml\n  nameWithType: SqlXml\n  fullName: System.Data.SqlTypes.SqlXml\n- uid: System.Data.SqlClient.SqlDataReader.GetStream(System.Int32)\n  parent: System.Data.SqlClient.SqlDataReader\n  isExternal: false\n  name: GetStream(Int32)\n  nameWithType: SqlDataReader.GetStream(Int32)\n  fullName: SqlDataReader.GetStream(Int32)\n- uid: System.IO.Stream\n  parent: System.IO\n  isExternal: false\n  name: Stream\n  nameWithType: Stream\n  fullName: System.IO.Stream\n- uid: System.Data.SqlClient.SqlDataReader.GetString(System.Int32)\n  parent: System.Data.SqlClient.SqlDataReader\n  isExternal: false\n  name: GetString(Int32)\n  nameWithType: SqlDataReader.GetString(Int32)\n  fullName: SqlDataReader.GetString(Int32)\n- uid: System.Data.SqlClient.SqlDataReader.GetTextReader(System.Int32)\n  parent: System.Data.SqlClient.SqlDataReader\n  isExternal: false\n  name: GetTextReader(Int32)\n  nameWithType: SqlDataReader.GetTextReader(Int32)\n  fullName: SqlDataReader.GetTextReader(Int32)\n- uid: System.IO.TextReader\n  parent: System.IO\n  isExternal: false\n  name: TextReader\n  nameWithType: TextReader\n  fullName: System.IO.TextReader\n- uid: System.Data.SqlClient.SqlDataReader.GetTimeSpan(System.Int32)\n  parent: System.Data.SqlClient.SqlDataReader\n  isExternal: false\n  name: GetTimeSpan(Int32)\n  nameWithType: SqlDataReader.GetTimeSpan(Int32)\n  fullName: SqlDataReader.GetTimeSpan(Int32)\n- uid: System.TimeSpan\n  parent: System\n  isExternal: false\n  name: TimeSpan\n  nameWithType: TimeSpan\n  fullName: System.TimeSpan\n- uid: System.Data.SqlClient.SqlDataReader.GetValue(System.Int32)\n  parent: System.Data.SqlClient.SqlDataReader\n  isExternal: false\n  name: GetValue(Int32)\n  nameWithType: SqlDataReader.GetValue(Int32)\n  fullName: SqlDataReader.GetValue(Int32)\n- uid: System.Data.SqlClient.SqlDataReader.GetValues(System.Object[])\n  parent: System.Data.SqlClient.SqlDataReader\n  isExternal: false\n  name: GetValues(Object[])\n  nameWithType: SqlDataReader.GetValues(Object[])\n  fullName: SqlDataReader.GetValues(Object[])\n- uid: System.Data.SqlClient.SqlDataReader.GetXmlReader(System.Int32)\n  parent: System.Data.SqlClient.SqlDataReader\n  isExternal: false\n  name: GetXmlReader(Int32)\n  nameWithType: SqlDataReader.GetXmlReader(Int32)\n  fullName: SqlDataReader.GetXmlReader(Int32)\n- uid: System.Xml.XmlReader\n  parent: System.Xml\n  isExternal: false\n  name: XmlReader\n  nameWithType: XmlReader\n  fullName: System.Xml.XmlReader\n- uid: System.Data.SqlClient.SqlDataReader.HasRows\n  parent: System.Data.SqlClient.SqlDataReader\n  isExternal: false\n  name: HasRows\n  nameWithType: SqlDataReader.HasRows\n  fullName: SqlDataReader.HasRows\n- uid: System.Data.SqlClient.SqlDataReader.IsClosed\n  parent: System.Data.SqlClient.SqlDataReader\n  isExternal: false\n  name: IsClosed\n  nameWithType: SqlDataReader.IsClosed\n  fullName: SqlDataReader.IsClosed\n- uid: System.Data.SqlClient.SqlDataReader.IsCommandBehavior(System.Data.CommandBehavior)\n  parent: System.Data.SqlClient.SqlDataReader\n  isExternal: false\n  name: IsCommandBehavior(CommandBehavior)\n  nameWithType: SqlDataReader.IsCommandBehavior(CommandBehavior)\n  fullName: SqlDataReader.IsCommandBehavior(CommandBehavior)\n- uid: System.Data.CommandBehavior\n  parent: System.Data\n  isExternal: false\n  name: CommandBehavior\n  nameWithType: CommandBehavior\n  fullName: System.Data.CommandBehavior\n- uid: System.Data.SqlClient.SqlDataReader.IsDBNull(System.Int32)\n  parent: System.Data.SqlClient.SqlDataReader\n  isExternal: false\n  name: IsDBNull(Int32)\n  nameWithType: SqlDataReader.IsDBNull(Int32)\n  fullName: SqlDataReader.IsDBNull(Int32)\n- uid: System.Data.SqlClient.SqlDataReader.IsDBNullAsync(System.Int32,System.Threading.CancellationToken)\n  parent: System.Data.SqlClient.SqlDataReader\n  isExternal: false\n  name: IsDBNullAsync(Int32, CancellationToken)\n  nameWithType: SqlDataReader.IsDBNullAsync(Int32, CancellationToken)\n  fullName: SqlDataReader.IsDBNullAsync(Int32, CancellationToken)\n- uid: System.Threading.Tasks.Task{System.Boolean}\n  parent: System.Threading.Tasks\n  isExternal: false\n  name: Task<Boolean>\n  nameWithType: Task<Boolean>\n  fullName: System.Threading.Tasks.Task<System.Boolean>\n  spec.csharp:\n  - uid: System.Threading.Tasks.Task`1\n    name: Task\n    nameWithType: Task\n    fullName: System.Threading.Tasks.Task\n  - name: <\n    nameWithType: <\n    fullName: <\n  - uid: System.Boolean\n    name: Boolean\n    nameWithType: Boolean\n    fullName: System.Boolean\n  - name: '>'\n    nameWithType: '>'\n    fullName: '>'\n- uid: System.Data.SqlClient.SqlDataReader.Item(System.String)\n  parent: System.Data.SqlClient.SqlDataReader\n  isExternal: false\n  name: Item(String)\n  nameWithType: SqlDataReader.Item(String)\n  fullName: SqlDataReader.Item(String)\n- uid: System.Data.SqlClient.SqlDataReader.Item(System.Int32)\n  parent: System.Data.SqlClient.SqlDataReader\n  isExternal: false\n  name: Item(Int32)\n  nameWithType: SqlDataReader.Item(Int32)\n  fullName: SqlDataReader.Item(Int32)\n- uid: System.Data.SqlClient.SqlDataReader.NextResult\n  parent: System.Data.SqlClient.SqlDataReader\n  isExternal: false\n  name: NextResult()\n  nameWithType: SqlDataReader.NextResult()\n  fullName: SqlDataReader.NextResult()\n- uid: System.Data.SqlClient.SqlDataReader.NextResultAsync(System.Threading.CancellationToken)\n  parent: System.Data.SqlClient.SqlDataReader\n  isExternal: false\n  name: NextResultAsync(CancellationToken)\n  nameWithType: SqlDataReader.NextResultAsync(CancellationToken)\n  fullName: SqlDataReader.NextResultAsync(CancellationToken)\n- uid: System.Data.SqlClient.SqlDataReader.Read\n  parent: System.Data.SqlClient.SqlDataReader\n  isExternal: false\n  name: Read()\n  nameWithType: SqlDataReader.Read()\n  fullName: SqlDataReader.Read()\n- uid: System.Data.SqlClient.SqlDataReader.ReadAsync(System.Threading.CancellationToken)\n  parent: System.Data.SqlClient.SqlDataReader\n  isExternal: false\n  name: ReadAsync(CancellationToken)\n  nameWithType: SqlDataReader.ReadAsync(CancellationToken)\n  fullName: SqlDataReader.ReadAsync(CancellationToken)\n- uid: System.Data.SqlClient.SqlDataReader.RecordsAffected\n  parent: System.Data.SqlClient.SqlDataReader\n  isExternal: false\n  name: RecordsAffected\n  nameWithType: SqlDataReader.RecordsAffected\n  fullName: SqlDataReader.RecordsAffected\n- uid: System.Data.SqlClient.SqlDataReader.VisibleFieldCount\n  parent: System.Data.SqlClient.SqlDataReader\n  isExternal: false\n  name: VisibleFieldCount\n  nameWithType: SqlDataReader.VisibleFieldCount\n  fullName: SqlDataReader.VisibleFieldCount\n- uid: System.Data.SqlClient.SqlDataReader.System#Data#IDataRecord#GetData(System.Int32)\n  parent: System.Data.SqlClient.SqlDataReader\n  isExternal: false\n  name: IDataRecord.GetData(Int32)\n  nameWithType: SqlDataReader.IDataRecord.GetData(Int32)\n  fullName: SqlDataReader.IDataRecord.GetData(Int32)\n- uid: System.Data.IDataReader\n  parent: System.Data\n  isExternal: false\n  name: IDataReader\n  nameWithType: IDataReader\n  fullName: System.Data.IDataReader\n- uid: System.Data.SqlClient.SqlDataReader.Close*\n  parent: System.Data.SqlClient.SqlDataReader\n  isExternal: false\n  name: Close\n  nameWithType: SqlDataReader.Close\n  fullName: SqlDataReader.Close\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Data.SqlClient/SqlDataReader.xml\n- uid: System.Data.SqlClient.SqlDataReader.Connection*\n  parent: System.Data.SqlClient.SqlDataReader\n  isExternal: false\n  name: Connection\n  nameWithType: SqlDataReader.Connection\n  fullName: SqlDataReader.Connection\n  monikers:\n  - netcore-1.0\n  - netcore-1.1\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Data.SqlClient/SqlDataReader.xml\n- uid: System.Data.SqlClient.SqlDataReader.Depth*\n  parent: System.Data.SqlClient.SqlDataReader\n  isExternal: false\n  name: Depth\n  nameWithType: SqlDataReader.Depth\n  fullName: SqlDataReader.Depth\n  monikers:\n  - netcore-1.0\n  - netcore-1.1\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Data.SqlClient/SqlDataReader.xml\n- uid: System.Data.SqlClient.SqlDataReader.FieldCount*\n  parent: System.Data.SqlClient.SqlDataReader\n  isExternal: false\n  name: FieldCount\n  nameWithType: SqlDataReader.FieldCount\n  fullName: SqlDataReader.FieldCount\n  monikers:\n  - netcore-1.0\n  - netcore-1.1\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Data.SqlClient/SqlDataReader.xml\n- uid: System.Data.SqlClient.SqlDataReader.GetBoolean*\n  parent: System.Data.SqlClient.SqlDataReader\n  isExternal: false\n  name: GetBoolean\n  nameWithType: SqlDataReader.GetBoolean\n  fullName: SqlDataReader.GetBoolean\n  monikers:\n  - netcore-1.0\n  - netcore-1.1\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Data.SqlClient/SqlDataReader.xml\n- uid: System.Data.SqlClient.SqlDataReader.GetByte*\n  parent: System.Data.SqlClient.SqlDataReader\n  isExternal: false\n  name: GetByte\n  nameWithType: SqlDataReader.GetByte\n  fullName: SqlDataReader.GetByte\n  monikers:\n  - netcore-1.0\n  - netcore-1.1\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Data.SqlClient/SqlDataReader.xml\n- uid: System.Data.SqlClient.SqlDataReader.GetBytes*\n  parent: System.Data.SqlClient.SqlDataReader\n  isExternal: false\n  name: GetBytes\n  nameWithType: SqlDataReader.GetBytes\n  fullName: SqlDataReader.GetBytes\n  monikers:\n  - netcore-1.0\n  - netcore-1.1\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Data.SqlClient/SqlDataReader.xml\n- uid: System.Data.SqlClient.SqlDataReader.GetChar*\n  parent: System.Data.SqlClient.SqlDataReader\n  isExternal: false\n  name: GetChar\n  nameWithType: SqlDataReader.GetChar\n  fullName: SqlDataReader.GetChar\n  monikers:\n  - netcore-1.0\n  - netcore-1.1\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Data.SqlClient/SqlDataReader.xml\n- uid: System.Data.SqlClient.SqlDataReader.GetChars*\n  parent: System.Data.SqlClient.SqlDataReader\n  isExternal: false\n  name: GetChars\n  nameWithType: SqlDataReader.GetChars\n  fullName: SqlDataReader.GetChars\n  monikers:\n  - netcore-1.0\n  - netcore-1.1\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Data.SqlClient/SqlDataReader.xml\n- uid: System.Data.SqlClient.SqlDataReader.GetDataTypeName*\n  parent: System.Data.SqlClient.SqlDataReader\n  isExternal: false\n  name: GetDataTypeName\n  nameWithType: SqlDataReader.GetDataTypeName\n  fullName: SqlDataReader.GetDataTypeName\n  monikers:\n  - netcore-1.0\n  - netcore-1.1\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Data.SqlClient/SqlDataReader.xml\n- uid: System.Data.SqlClient.SqlDataReader.GetDateTime*\n  parent: System.Data.SqlClient.SqlDataReader\n  isExternal: false\n  name: GetDateTime\n  nameWithType: SqlDataReader.GetDateTime\n  fullName: SqlDataReader.GetDateTime\n  monikers:\n  - netcore-1.0\n  - netcore-1.1\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Data.SqlClient/SqlDataReader.xml\n- uid: System.Data.SqlClient.SqlDataReader.GetDateTimeOffset*\n  parent: System.Data.SqlClient.SqlDataReader\n  isExternal: false\n  name: GetDateTimeOffset\n  nameWithType: SqlDataReader.GetDateTimeOffset\n  fullName: SqlDataReader.GetDateTimeOffset\n  monikers:\n  - netcore-1.0\n  - netcore-1.1\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Data.SqlClient/SqlDataReader.xml\n- uid: System.Data.SqlClient.SqlDataReader.GetDecimal*\n  parent: System.Data.SqlClient.SqlDataReader\n  isExternal: false\n  name: GetDecimal\n  nameWithType: SqlDataReader.GetDecimal\n  fullName: SqlDataReader.GetDecimal\n  monikers:\n  - netcore-1.0\n  - netcore-1.1\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Data.SqlClient/SqlDataReader.xml\n- uid: System.Data.SqlClient.SqlDataReader.GetDouble*\n  parent: System.Data.SqlClient.SqlDataReader\n  isExternal: false\n  name: GetDouble\n  nameWithType: SqlDataReader.GetDouble\n  fullName: SqlDataReader.GetDouble\n  monikers:\n  - netcore-1.0\n  - netcore-1.1\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Data.SqlClient/SqlDataReader.xml\n- uid: System.Data.SqlClient.SqlDataReader.GetEnumerator*\n  parent: System.Data.SqlClient.SqlDataReader\n  isExternal: false\n  name: GetEnumerator\n  nameWithType: SqlDataReader.GetEnumerator\n  fullName: SqlDataReader.GetEnumerator\n  monikers:\n  - netcore-1.0\n  - netcore-1.1\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Data.SqlClient/SqlDataReader.xml\n- uid: System.Data.SqlClient.SqlDataReader.GetFieldType*\n  parent: System.Data.SqlClient.SqlDataReader\n  isExternal: false\n  name: GetFieldType\n  nameWithType: SqlDataReader.GetFieldType\n  fullName: SqlDataReader.GetFieldType\n  monikers:\n  - netcore-1.0\n  - netcore-1.1\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Data.SqlClient/SqlDataReader.xml\n- uid: System.Data.SqlClient.SqlDataReader.GetFieldValue``1*\n  parent: System.Data.SqlClient.SqlDataReader\n  isExternal: false\n  name: GetFieldValue<T>\n  nameWithType: SqlDataReader.GetFieldValue<T>\n  fullName: SqlDataReader.GetFieldValue<T>\n  monikers:\n  - netcore-1.0\n  - netcore-1.1\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Data.SqlClient/SqlDataReader.xml\n- uid: System.Data.SqlClient.SqlDataReader.GetFieldValueAsync``1*\n  parent: System.Data.SqlClient.SqlDataReader\n  isExternal: false\n  name: GetFieldValueAsync<T>\n  nameWithType: SqlDataReader.GetFieldValueAsync<T>\n  fullName: SqlDataReader.GetFieldValueAsync<T>\n  monikers:\n  - netcore-1.0\n  - netcore-1.1\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Data.SqlClient/SqlDataReader.xml\n- uid: System.Data.SqlClient.SqlDataReader.GetFloat*\n  parent: System.Data.SqlClient.SqlDataReader\n  isExternal: false\n  name: GetFloat\n  nameWithType: SqlDataReader.GetFloat\n  fullName: SqlDataReader.GetFloat\n  monikers:\n  - netcore-1.0\n  - netcore-1.1\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Data.SqlClient/SqlDataReader.xml\n- uid: System.Data.SqlClient.SqlDataReader.GetGuid*\n  parent: System.Data.SqlClient.SqlDataReader\n  isExternal: false\n  name: GetGuid\n  nameWithType: SqlDataReader.GetGuid\n  fullName: SqlDataReader.GetGuid\n  monikers:\n  - netcore-1.0\n  - netcore-1.1\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Data.SqlClient/SqlDataReader.xml\n- uid: System.Data.SqlClient.SqlDataReader.GetInt16*\n  parent: System.Data.SqlClient.SqlDataReader\n  isExternal: false\n  name: GetInt16\n  nameWithType: SqlDataReader.GetInt16\n  fullName: SqlDataReader.GetInt16\n  monikers:\n  - netcore-1.0\n  - netcore-1.1\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Data.SqlClient/SqlDataReader.xml\n- uid: System.Data.SqlClient.SqlDataReader.GetInt32*\n  parent: System.Data.SqlClient.SqlDataReader\n  isExternal: false\n  name: GetInt32\n  nameWithType: SqlDataReader.GetInt32\n  fullName: SqlDataReader.GetInt32\n  monikers:\n  - netcore-1.0\n  - netcore-1.1\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Data.SqlClient/SqlDataReader.xml\n- uid: System.Data.SqlClient.SqlDataReader.GetInt64*\n  parent: System.Data.SqlClient.SqlDataReader\n  isExternal: false\n  name: GetInt64\n  nameWithType: SqlDataReader.GetInt64\n  fullName: SqlDataReader.GetInt64\n  monikers:\n  - netcore-1.0\n  - netcore-1.1\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Data.SqlClient/SqlDataReader.xml\n- uid: System.Data.SqlClient.SqlDataReader.GetName*\n  parent: System.Data.SqlClient.SqlDataReader\n  isExternal: false\n  name: GetName\n  nameWithType: SqlDataReader.GetName\n  fullName: SqlDataReader.GetName\n  monikers:\n  - netcore-1.0\n  - netcore-1.1\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Data.SqlClient/SqlDataReader.xml\n- uid: System.Data.SqlClient.SqlDataReader.GetOrdinal*\n  parent: System.Data.SqlClient.SqlDataReader\n  isExternal: false\n  name: GetOrdinal\n  nameWithType: SqlDataReader.GetOrdinal\n  fullName: SqlDataReader.GetOrdinal\n  monikers:\n  - netcore-1.0\n  - netcore-1.1\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Data.SqlClient/SqlDataReader.xml\n- uid: System.Data.SqlClient.SqlDataReader.GetProviderSpecificFieldType*\n  parent: System.Data.SqlClient.SqlDataReader\n  isExternal: false\n  name: GetProviderSpecificFieldType\n  nameWithType: SqlDataReader.GetProviderSpecificFieldType\n  fullName: SqlDataReader.GetProviderSpecificFieldType\n  monikers:\n  - netcore-1.0\n  - netcore-1.1\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Data.SqlClient/SqlDataReader.xml\n- uid: System.Data.SqlClient.SqlDataReader.GetProviderSpecificValue*\n  parent: System.Data.SqlClient.SqlDataReader\n  isExternal: false\n  name: GetProviderSpecificValue\n  nameWithType: SqlDataReader.GetProviderSpecificValue\n  fullName: SqlDataReader.GetProviderSpecificValue\n  monikers:\n  - netcore-1.0\n  - netcore-1.1\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Data.SqlClient/SqlDataReader.xml\n- uid: System.Data.SqlClient.SqlDataReader.GetProviderSpecificValues*\n  parent: System.Data.SqlClient.SqlDataReader\n  isExternal: false\n  name: GetProviderSpecificValues\n  nameWithType: SqlDataReader.GetProviderSpecificValues\n  fullName: SqlDataReader.GetProviderSpecificValues\n  monikers:\n  - netcore-1.0\n  - netcore-1.1\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Data.SqlClient/SqlDataReader.xml\n- uid: System.Data.SqlClient.SqlDataReader.GetSchemaTable*\n  parent: System.Data.SqlClient.SqlDataReader\n  isExternal: false\n  name: GetSchemaTable\n  nameWithType: SqlDataReader.GetSchemaTable\n  fullName: SqlDataReader.GetSchemaTable\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Data.SqlClient/SqlDataReader.xml\n- uid: System.Data.SqlClient.SqlDataReader.GetSqlBinary*\n  parent: System.Data.SqlClient.SqlDataReader\n  isExternal: false\n  name: GetSqlBinary\n  nameWithType: SqlDataReader.GetSqlBinary\n  fullName: SqlDataReader.GetSqlBinary\n  monikers:\n  - netcore-1.0\n  - netcore-1.1\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Data.SqlClient/SqlDataReader.xml\n- uid: System.Data.SqlClient.SqlDataReader.GetSqlBoolean*\n  parent: System.Data.SqlClient.SqlDataReader\n  isExternal: false\n  name: GetSqlBoolean\n  nameWithType: SqlDataReader.GetSqlBoolean\n  fullName: SqlDataReader.GetSqlBoolean\n  monikers:\n  - netcore-1.0\n  - netcore-1.1\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Data.SqlClient/SqlDataReader.xml\n- uid: System.Data.SqlClient.SqlDataReader.GetSqlByte*\n  parent: System.Data.SqlClient.SqlDataReader\n  isExternal: false\n  name: GetSqlByte\n  nameWithType: SqlDataReader.GetSqlByte\n  fullName: SqlDataReader.GetSqlByte\n  monikers:\n  - netcore-1.0\n  - netcore-1.1\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Data.SqlClient/SqlDataReader.xml\n- uid: System.Data.SqlClient.SqlDataReader.GetSqlBytes*\n  parent: System.Data.SqlClient.SqlDataReader\n  isExternal: false\n  name: GetSqlBytes\n  nameWithType: SqlDataReader.GetSqlBytes\n  fullName: SqlDataReader.GetSqlBytes\n  monikers:\n  - netcore-1.0\n  - netcore-1.1\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Data.SqlClient/SqlDataReader.xml\n- uid: System.Data.SqlClient.SqlDataReader.GetSqlChars*\n  parent: System.Data.SqlClient.SqlDataReader\n  isExternal: false\n  name: GetSqlChars\n  nameWithType: SqlDataReader.GetSqlChars\n  fullName: SqlDataReader.GetSqlChars\n  monikers:\n  - netcore-1.0\n  - netcore-1.1\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Data.SqlClient/SqlDataReader.xml\n- uid: System.Data.SqlClient.SqlDataReader.GetSqlDateTime*\n  parent: System.Data.SqlClient.SqlDataReader\n  isExternal: false\n  name: GetSqlDateTime\n  nameWithType: SqlDataReader.GetSqlDateTime\n  fullName: SqlDataReader.GetSqlDateTime\n  monikers:\n  - netcore-1.0\n  - netcore-1.1\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Data.SqlClient/SqlDataReader.xml\n- uid: System.Data.SqlClient.SqlDataReader.GetSqlDecimal*\n  parent: System.Data.SqlClient.SqlDataReader\n  isExternal: false\n  name: GetSqlDecimal\n  nameWithType: SqlDataReader.GetSqlDecimal\n  fullName: SqlDataReader.GetSqlDecimal\n  monikers:\n  - netcore-1.0\n  - netcore-1.1\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Data.SqlClient/SqlDataReader.xml\n- uid: System.Data.SqlClient.SqlDataReader.GetSqlDouble*\n  parent: System.Data.SqlClient.SqlDataReader\n  isExternal: false\n  name: GetSqlDouble\n  nameWithType: SqlDataReader.GetSqlDouble\n  fullName: SqlDataReader.GetSqlDouble\n  monikers:\n  - netcore-1.0\n  - netcore-1.1\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Data.SqlClient/SqlDataReader.xml\n- uid: System.Data.SqlClient.SqlDataReader.GetSqlGuid*\n  parent: System.Data.SqlClient.SqlDataReader\n  isExternal: false\n  name: GetSqlGuid\n  nameWithType: SqlDataReader.GetSqlGuid\n  fullName: SqlDataReader.GetSqlGuid\n  monikers:\n  - netcore-1.0\n  - netcore-1.1\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Data.SqlClient/SqlDataReader.xml\n- uid: System.Data.SqlClient.SqlDataReader.GetSqlInt16*\n  parent: System.Data.SqlClient.SqlDataReader\n  isExternal: false\n  name: GetSqlInt16\n  nameWithType: SqlDataReader.GetSqlInt16\n  fullName: SqlDataReader.GetSqlInt16\n  monikers:\n  - netcore-1.0\n  - netcore-1.1\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Data.SqlClient/SqlDataReader.xml\n- uid: System.Data.SqlClient.SqlDataReader.GetSqlInt32*\n  parent: System.Data.SqlClient.SqlDataReader\n  isExternal: false\n  name: GetSqlInt32\n  nameWithType: SqlDataReader.GetSqlInt32\n  fullName: SqlDataReader.GetSqlInt32\n  monikers:\n  - netcore-1.0\n  - netcore-1.1\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Data.SqlClient/SqlDataReader.xml\n- uid: System.Data.SqlClient.SqlDataReader.GetSqlInt64*\n  parent: System.Data.SqlClient.SqlDataReader\n  isExternal: false\n  name: GetSqlInt64\n  nameWithType: SqlDataReader.GetSqlInt64\n  fullName: SqlDataReader.GetSqlInt64\n  monikers:\n  - netcore-1.0\n  - netcore-1.1\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Data.SqlClient/SqlDataReader.xml\n- uid: System.Data.SqlClient.SqlDataReader.GetSqlMoney*\n  parent: System.Data.SqlClient.SqlDataReader\n  isExternal: false\n  name: GetSqlMoney\n  nameWithType: SqlDataReader.GetSqlMoney\n  fullName: SqlDataReader.GetSqlMoney\n  monikers:\n  - netcore-1.0\n  - netcore-1.1\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Data.SqlClient/SqlDataReader.xml\n- uid: System.Data.SqlClient.SqlDataReader.GetSqlSingle*\n  parent: System.Data.SqlClient.SqlDataReader\n  isExternal: false\n  name: GetSqlSingle\n  nameWithType: SqlDataReader.GetSqlSingle\n  fullName: SqlDataReader.GetSqlSingle\n  monikers:\n  - netcore-1.0\n  - netcore-1.1\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Data.SqlClient/SqlDataReader.xml\n- uid: System.Data.SqlClient.SqlDataReader.GetSqlString*\n  parent: System.Data.SqlClient.SqlDataReader\n  isExternal: false\n  name: GetSqlString\n  nameWithType: SqlDataReader.GetSqlString\n  fullName: SqlDataReader.GetSqlString\n  monikers:\n  - netcore-1.0\n  - netcore-1.1\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Data.SqlClient/SqlDataReader.xml\n- uid: System.Data.SqlClient.SqlDataReader.GetSqlValue*\n  parent: System.Data.SqlClient.SqlDataReader\n  isExternal: false\n  name: GetSqlValue\n  nameWithType: SqlDataReader.GetSqlValue\n  fullName: SqlDataReader.GetSqlValue\n  monikers:\n  - netcore-1.0\n  - netcore-1.1\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Data.SqlClient/SqlDataReader.xml\n- uid: System.Data.SqlClient.SqlDataReader.GetSqlValues*\n  parent: System.Data.SqlClient.SqlDataReader\n  isExternal: false\n  name: GetSqlValues\n  nameWithType: SqlDataReader.GetSqlValues\n  fullName: SqlDataReader.GetSqlValues\n  monikers:\n  - netcore-1.0\n  - netcore-1.1\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Data.SqlClient/SqlDataReader.xml\n- uid: System.Data.SqlClient.SqlDataReader.GetSqlXml*\n  parent: System.Data.SqlClient.SqlDataReader\n  isExternal: false\n  name: GetSqlXml\n  nameWithType: SqlDataReader.GetSqlXml\n  fullName: SqlDataReader.GetSqlXml\n  monikers:\n  - netcore-1.0\n  - netcore-1.1\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Data.SqlClient/SqlDataReader.xml\n- uid: System.Data.SqlClient.SqlDataReader.GetStream*\n  parent: System.Data.SqlClient.SqlDataReader\n  isExternal: false\n  name: GetStream\n  nameWithType: SqlDataReader.GetStream\n  fullName: SqlDataReader.GetStream\n  monikers:\n  - netcore-1.0\n  - netcore-1.1\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Data.SqlClient/SqlDataReader.xml\n- uid: System.Data.SqlClient.SqlDataReader.GetString*\n  parent: System.Data.SqlClient.SqlDataReader\n  isExternal: false\n  name: GetString\n  nameWithType: SqlDataReader.GetString\n  fullName: SqlDataReader.GetString\n  monikers:\n  - netcore-1.0\n  - netcore-1.1\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Data.SqlClient/SqlDataReader.xml\n- uid: System.Data.SqlClient.SqlDataReader.GetTextReader*\n  parent: System.Data.SqlClient.SqlDataReader\n  isExternal: false\n  name: GetTextReader\n  nameWithType: SqlDataReader.GetTextReader\n  fullName: SqlDataReader.GetTextReader\n  monikers:\n  - netcore-1.0\n  - netcore-1.1\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Data.SqlClient/SqlDataReader.xml\n- uid: System.Data.SqlClient.SqlDataReader.GetTimeSpan*\n  parent: System.Data.SqlClient.SqlDataReader\n  isExternal: false\n  name: GetTimeSpan\n  nameWithType: SqlDataReader.GetTimeSpan\n  fullName: SqlDataReader.GetTimeSpan\n  monikers:\n  - netcore-1.0\n  - netcore-1.1\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Data.SqlClient/SqlDataReader.xml\n- uid: System.Data.SqlClient.SqlDataReader.GetValue*\n  parent: System.Data.SqlClient.SqlDataReader\n  isExternal: false\n  name: GetValue\n  nameWithType: SqlDataReader.GetValue\n  fullName: SqlDataReader.GetValue\n  monikers:\n  - netcore-1.0\n  - netcore-1.1\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Data.SqlClient/SqlDataReader.xml\n- uid: System.Data.SqlClient.SqlDataReader.GetValues*\n  parent: System.Data.SqlClient.SqlDataReader\n  isExternal: false\n  name: GetValues\n  nameWithType: SqlDataReader.GetValues\n  fullName: SqlDataReader.GetValues\n  monikers:\n  - netcore-1.0\n  - netcore-1.1\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Data.SqlClient/SqlDataReader.xml\n- uid: System.Data.SqlClient.SqlDataReader.GetXmlReader*\n  parent: System.Data.SqlClient.SqlDataReader\n  isExternal: false\n  name: GetXmlReader\n  nameWithType: SqlDataReader.GetXmlReader\n  fullName: SqlDataReader.GetXmlReader\n  monikers:\n  - netcore-1.0\n  - netcore-1.1\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Data.SqlClient/SqlDataReader.xml\n- uid: System.Data.SqlClient.SqlDataReader.HasRows*\n  parent: System.Data.SqlClient.SqlDataReader\n  isExternal: false\n  name: HasRows\n  nameWithType: SqlDataReader.HasRows\n  fullName: SqlDataReader.HasRows\n  monikers:\n  - netcore-1.0\n  - netcore-1.1\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Data.SqlClient/SqlDataReader.xml\n- uid: System.Data.SqlClient.SqlDataReader.IsClosed*\n  parent: System.Data.SqlClient.SqlDataReader\n  isExternal: false\n  name: IsClosed\n  nameWithType: SqlDataReader.IsClosed\n  fullName: SqlDataReader.IsClosed\n  monikers:\n  - netcore-1.0\n  - netcore-1.1\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Data.SqlClient/SqlDataReader.xml\n- uid: System.Data.SqlClient.SqlDataReader.IsCommandBehavior*\n  parent: System.Data.SqlClient.SqlDataReader\n  isExternal: false\n  name: IsCommandBehavior\n  nameWithType: SqlDataReader.IsCommandBehavior\n  fullName: SqlDataReader.IsCommandBehavior\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Data.SqlClient/SqlDataReader.xml\n- uid: System.Data.SqlClient.SqlDataReader.IsDBNull*\n  parent: System.Data.SqlClient.SqlDataReader\n  isExternal: false\n  name: IsDBNull\n  nameWithType: SqlDataReader.IsDBNull\n  fullName: SqlDataReader.IsDBNull\n  monikers:\n  - netcore-1.0\n  - netcore-1.1\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Data.SqlClient/SqlDataReader.xml\n- uid: System.Data.SqlClient.SqlDataReader.IsDBNullAsync*\n  parent: System.Data.SqlClient.SqlDataReader\n  isExternal: false\n  name: IsDBNullAsync\n  nameWithType: SqlDataReader.IsDBNullAsync\n  fullName: SqlDataReader.IsDBNullAsync\n  monikers:\n  - netcore-1.0\n  - netcore-1.1\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Data.SqlClient/SqlDataReader.xml\n- uid: System.Data.SqlClient.SqlDataReader.Item*\n  parent: System.Data.SqlClient.SqlDataReader\n  isExternal: false\n  name: Item\n  nameWithType: SqlDataReader.Item\n  fullName: SqlDataReader.Item\n  monikers:\n  - netcore-1.0\n  - netcore-1.1\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Data.SqlClient/SqlDataReader.xml\n- uid: System.Data.SqlClient.SqlDataReader.NextResult*\n  parent: System.Data.SqlClient.SqlDataReader\n  isExternal: false\n  name: NextResult\n  nameWithType: SqlDataReader.NextResult\n  fullName: SqlDataReader.NextResult\n  monikers:\n  - netcore-1.0\n  - netcore-1.1\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Data.SqlClient/SqlDataReader.xml\n- uid: System.Data.SqlClient.SqlDataReader.NextResultAsync*\n  parent: System.Data.SqlClient.SqlDataReader\n  isExternal: false\n  name: NextResultAsync\n  nameWithType: SqlDataReader.NextResultAsync\n  fullName: SqlDataReader.NextResultAsync\n  monikers:\n  - netcore-1.0\n  - netcore-1.1\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Data.SqlClient/SqlDataReader.xml\n- uid: System.Data.SqlClient.SqlDataReader.Read*\n  parent: System.Data.SqlClient.SqlDataReader\n  isExternal: false\n  name: Read\n  nameWithType: SqlDataReader.Read\n  fullName: SqlDataReader.Read\n  monikers:\n  - netcore-1.0\n  - netcore-1.1\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Data.SqlClient/SqlDataReader.xml\n- uid: System.Data.SqlClient.SqlDataReader.ReadAsync*\n  parent: System.Data.SqlClient.SqlDataReader\n  isExternal: false\n  name: ReadAsync\n  nameWithType: SqlDataReader.ReadAsync\n  fullName: SqlDataReader.ReadAsync\n  monikers:\n  - netcore-1.0\n  - netcore-1.1\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Data.SqlClient/SqlDataReader.xml\n- uid: System.Data.SqlClient.SqlDataReader.RecordsAffected*\n  parent: System.Data.SqlClient.SqlDataReader\n  isExternal: false\n  name: RecordsAffected\n  nameWithType: SqlDataReader.RecordsAffected\n  fullName: SqlDataReader.RecordsAffected\n  monikers:\n  - netcore-1.0\n  - netcore-1.1\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Data.SqlClient/SqlDataReader.xml\n- uid: System.Data.SqlClient.SqlDataReader.VisibleFieldCount*\n  parent: System.Data.SqlClient.SqlDataReader\n  isExternal: false\n  name: VisibleFieldCount\n  nameWithType: SqlDataReader.VisibleFieldCount\n  fullName: SqlDataReader.VisibleFieldCount\n  monikers:\n  - netcore-1.0\n  - netcore-1.1\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Data.SqlClient/SqlDataReader.xml\n- uid: System.Data.SqlClient.SqlDataReader.System#Data#IDataRecord#GetData*\n  parent: System.Data.SqlClient.SqlDataReader\n  isExternal: false\n  name: System.Data.IDataRecord.GetData\n  nameWithType: SqlDataReader.System.Data.IDataRecord.GetData\n  fullName: SqlDataReader.System.Data.IDataRecord.GetData\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Data.SqlClient/SqlDataReader.xml\n- uid: System.Object.Equals(System.Object)\n  parent: System.Object\n  isExternal: false\n  name: Equals(Object)\n  nameWithType: Object.Equals(Object)\n  fullName: Object.Equals(Object)\n- uid: System.Object.Equals(System.Object,System.Object)\n  parent: System.Object\n  isExternal: false\n  name: Equals(Object, Object)\n  nameWithType: Object.Equals(Object, Object)\n  fullName: Object.Equals(Object, Object)\n- uid: System.Object.GetHashCode\n  parent: System.Object\n  isExternal: false\n  name: GetHashCode()\n  nameWithType: Object.GetHashCode()\n  fullName: Object.GetHashCode()\n- uid: System.Object.GetType\n  parent: System.Object\n  isExternal: false\n  name: GetType()\n  nameWithType: Object.GetType()\n  fullName: Object.GetType()\n- uid: System.Object.MemberwiseClone\n  parent: System.Object\n  isExternal: false\n  name: MemberwiseClone()\n  nameWithType: Object.MemberwiseClone()\n  fullName: Object.MemberwiseClone()\n- uid: System.Object.ReferenceEquals(System.Object,System.Object)\n  parent: System.Object\n  isExternal: false\n  name: ReferenceEquals(Object, Object)\n  nameWithType: Object.ReferenceEquals(Object, Object)\n  fullName: Object.ReferenceEquals(Object, Object)\n- uid: System.Object.ToString\n  parent: System.Object\n  isExternal: false\n  name: ToString()\n  nameWithType: Object.ToString()\n  fullName: Object.ToString()\n- uid: System.Data.Common.DbDataReader.Dispose\n  parent: System.Data.Common.DbDataReader\n  isExternal: false\n  name: Dispose()\n  nameWithType: DbDataReader.Dispose()\n  fullName: DbDataReader.Dispose()\n- uid: System.Data.Common.DbDataReader.Dispose(System.Boolean)\n  parent: System.Data.Common.DbDataReader\n  isExternal: false\n  name: Dispose(Boolean)\n  nameWithType: DbDataReader.Dispose(Boolean)\n  fullName: DbDataReader.Dispose(Boolean)\n- uid: System.Data.Common.DbDataReader.GetData(System.Int32)\n  parent: System.Data.Common.DbDataReader\n  isExternal: false\n  name: GetData(Int32)\n  nameWithType: DbDataReader.GetData(Int32)\n  fullName: DbDataReader.GetData(Int32)\n- uid: System.Data.Common.DbDataReader.GetDbDataReader(System.Int32)\n  parent: System.Data.Common.DbDataReader\n  isExternal: false\n  name: GetDbDataReader(Int32)\n  nameWithType: DbDataReader.GetDbDataReader(Int32)\n  fullName: DbDataReader.GetDbDataReader(Int32)\n- uid: System.Data.Common.DbDataReader.GetFieldValueAsync``1(System.Int32)\n  parent: System.Data.Common.DbDataReader\n  isExternal: false\n  name: GetFieldValueAsync<T>(Int32)\n  nameWithType: DbDataReader.GetFieldValueAsync<T>(Int32)\n  fullName: DbDataReader.GetFieldValueAsync<T>(Int32)\n- uid: System.Data.Common.DbDataReader.IsDBNullAsync(System.Int32)\n  parent: System.Data.Common.DbDataReader\n  isExternal: false\n  name: IsDBNullAsync(Int32)\n  nameWithType: DbDataReader.IsDBNullAsync(Int32)\n  fullName: DbDataReader.IsDBNullAsync(Int32)\n- uid: System.Data.Common.DbDataReader.NextResultAsync\n  parent: System.Data.Common.DbDataReader\n  isExternal: false\n  name: NextResultAsync()\n  nameWithType: DbDataReader.NextResultAsync()\n  fullName: DbDataReader.NextResultAsync()\n- uid: System.Data.Common.DbDataReader.ReadAsync\n  parent: System.Data.Common.DbDataReader\n  isExternal: false\n  name: ReadAsync()\n  nameWithType: DbDataReader.ReadAsync()\n  fullName: DbDataReader.ReadAsync()\n- uid: System.Data.Common.DbDataReader.System#Data#IDataReader#Close\n  parent: System.Data.Common.DbDataReader\n  isExternal: false\n  name: IDataReader.Close()\n  nameWithType: DbDataReader.IDataReader.Close()\n  fullName: DbDataReader.IDataReader.Close()\n- uid: System.Data.Common.DbDataReader.System#Data#IDataReader#GetSchemaTable\n  parent: System.Data.Common.DbDataReader\n  isExternal: false\n  name: IDataReader.GetSchemaTable()\n  nameWithType: DbDataReader.IDataReader.GetSchemaTable()\n  fullName: DbDataReader.IDataReader.GetSchemaTable()\n- uid: System.Data.Common.DbDataReaderExtensions.CanGetColumnSchema(System.Data.Common.DbDataReader)\n  parent: System.Data.Common.DbDataReaderExtensions\n  isExternal: false\n  name: CanGetColumnSchema(DbDataReader)\n  nameWithType: DbDataReaderExtensions.CanGetColumnSchema(DbDataReader)\n  fullName: DbDataReaderExtensions.CanGetColumnSchema(DbDataReader)\n- uid: System.Data.Common.DbDataReaderExtensions.GetColumnSchema(System.Data.Common.DbDataReader)\n  parent: System.Data.Common.DbDataReaderExtensions\n  isExternal: false\n  name: GetColumnSchema(DbDataReader)\n  nameWithType: DbDataReaderExtensions.GetColumnSchema(DbDataReader)\n  fullName: DbDataReaderExtensions.GetColumnSchema(DbDataReader)\n- uid: System.Linq.Enumerable.Cast``1(System.Collections.IEnumerable)\n  parent: System.Linq.Enumerable\n  isExternal: false\n  name: Cast<TResult>(IEnumerable)\n  nameWithType: Enumerable.Cast<TResult>(IEnumerable)\n  fullName: Enumerable.Cast<TResult>(IEnumerable)\n- uid: System.Linq.Enumerable.OfType``1(System.Collections.IEnumerable)\n  parent: System.Linq.Enumerable\n  isExternal: false\n  name: OfType<TResult>(IEnumerable)\n  nameWithType: Enumerable.OfType<TResult>(IEnumerable)\n  fullName: Enumerable.OfType<TResult>(IEnumerable)\n- uid: System.Linq.ParallelEnumerable.AsParallel(System.Collections.IEnumerable)\n  parent: System.Linq.ParallelEnumerable\n  isExternal: false\n  name: AsParallel(IEnumerable)\n  nameWithType: ParallelEnumerable.AsParallel(IEnumerable)\n  fullName: ParallelEnumerable.AsParallel(IEnumerable)\n- uid: System.Linq.Queryable.AsQueryable(System.Collections.IEnumerable)\n  parent: System.Linq.Queryable\n  isExternal: false\n  name: AsQueryable(IEnumerable)\n  nameWithType: Queryable.AsQueryable(IEnumerable)\n  fullName: Queryable.AsQueryable(IEnumerable)\n- uid: System.IDisposable\n  parent: System\n  isExternal: false\n  name: IDisposable\n  nameWithType: IDisposable\n  fullName: System.IDisposable\n"}