{"nodes":[{"content":"Provides information about an imaging codec.","nodes":[{"pos":[0,44],"content":"Provides information about an imaging codec.","nodes":[{"content":"Provides information about an imaging codec.","pos":[0,44]}]}],"pos":[1240,1285],"yaml":true},{"content":"A <xref:System.Windows.Media.Imaging.BitmapCodecInfo> can be obtain for each codec in [!INCLUDE[TLA#tla_winclient](~/includes/tlasharptla-winclient-md.md)] by using the <xref:System.Windows.Media.Imaging.BitmapDecoder.CodecInfo%2A> or the <xref:System.Windows.Media.Imaging.BitmapEncoder.CodecInfo%2A> properties.","nodes":[{"pos":[0,313],"content":"A <ph id=\"ph1\">&lt;xref:System.Windows.Media.Imaging.BitmapCodecInfo&gt;</ph> can be obtain for each codec in <ph id=\"ph2\">[!INCLUDE[TLA#tla_winclient](~/includes/tlasharptla-winclient-md.md)]</ph> by using the <ph id=\"ph3\">&lt;xref:System.Windows.Media.Imaging.BitmapDecoder.CodecInfo%2A&gt;</ph> or the <ph id=\"ph4\">&lt;xref:System.Windows.Media.Imaging.BitmapEncoder.CodecInfo%2A&gt;</ph> properties.","source":"A <xref:System.Windows.Media.Imaging.BitmapCodecInfo> can be obtain for each codec in [!INCLUDE[TLA#tla_winclient](~/includes/tlasharptla-winclient-md.md)] by using the <xref:System.Windows.Media.Imaging.BitmapDecoder.CodecInfo%2A> or the <xref:System.Windows.Media.Imaging.BitmapEncoder.CodecInfo%2A> properties."}],"pos":[1296,1610],"yaml":true,"extradata":"MT"},{"content":"Initializes a new instance of <xref href=\"System.Windows.Media.Imaging.BitmapCodecInfo\"></xref>.","nodes":[{"pos":[0,96],"content":"Initializes a new instance of <ph id=\"ph1\">&lt;xref href=\"System.Windows.Media.Imaging.BitmapCodecInfo\"&gt;&lt;/xref&gt;</ph>.","source":"Initializes a new instance of <xref href=\"System.Windows.Media.Imaging.BitmapCodecInfo\"></xref>."}],"pos":[3455,3552],"yaml":true},{"content":"Gets a value that identifies the author of the codec.","nodes":[{"pos":[0,53],"content":"Gets a value that identifies the author of the codec.","nodes":[{"content":"Gets a value that identifies the author of the codec.","pos":[0,53]}]}],"pos":[4630,4684],"yaml":true},{"content":"The author of the codec.","nodes":[{"pos":[0,24],"content":"The author of the codec.","nodes":[{"content":"The author of the codec.","pos":[0,24]}]}],"pos":[5330,5355],"yaml":true},{"content":"Gets a value that identifies the container format for the codec.","nodes":[{"pos":[0,64],"content":"Gets a value that identifies the container format for the codec.","nodes":[{"content":"Gets a value that identifies the container format for the codec.","pos":[0,64]}]}],"pos":[6502,6567],"yaml":true},{"content":"The container format of the codec.","nodes":[{"pos":[0,34],"content":"The container format of the codec.","nodes":[{"content":"The container format of the codec.","pos":[0,34]}]}],"pos":[7319,7354],"yaml":true},{"content":"Gets a value that identifies the device manufacturer of the codec.","nodes":[{"pos":[0,66],"content":"Gets a value that identifies the device manufacturer of the codec.","nodes":[{"content":"Gets a value that identifies the device manufacturer of the codec.","pos":[0,66]}]}],"pos":[8506,8573],"yaml":true},{"content":"The device manufacturer of the codec.","nodes":[{"pos":[0,37],"content":"The device manufacturer of the codec.","nodes":[{"content":"The device manufacturer of the codec.","pos":[0,37]}]}],"pos":[9332,9370],"yaml":true},{"content":"Gets a value that identifies the device models of the codec.","nodes":[{"pos":[0,60],"content":"Gets a value that identifies the device models of the codec.","nodes":[{"content":"Gets a value that identifies the device models of the codec.","pos":[0,60]}]}],"pos":[10489,10550],"yaml":true},{"content":"The device model of the codec.","nodes":[{"pos":[0,30],"content":"The device model of the codec.","nodes":[{"content":"The device model of the codec.","pos":[0,30]}]}],"pos":[11303,11334],"yaml":true},{"content":"Gets a value that identifies the file extensions associated with the codec.","nodes":[{"pos":[0,75],"content":"Gets a value that identifies the file extensions associated with the codec.","nodes":[{"content":"Gets a value that identifies the file extensions associated with the codec.","pos":[0,75]}]}],"pos":[12481,12557],"yaml":true},{"content":"The file extensions associated with the codec.","nodes":[{"pos":[0,46],"content":"The file extensions associated with the codec.","nodes":[{"content":"The file extensions associated with the codec.","pos":[0,46]}]}],"pos":[13312,13359],"yaml":true},{"content":"Gets a value that represents the friendly name of the codec.","nodes":[{"pos":[0,60],"content":"Gets a value that represents the friendly name of the codec.","nodes":[{"content":"Gets a value that represents the friendly name of the codec.","pos":[0,60]}]}],"pos":[14496,14557],"yaml":true},{"content":"The friendly name of the codec.","nodes":[{"pos":[0,31],"content":"The friendly name of the codec.","nodes":[{"content":"The friendly name of the codec.","pos":[0,31]}]}],"pos":[15310,15342],"yaml":true},{"content":"Gets a value that identifies the [!INCLUDE[TLA#tla_mime](~/includes/tlasharptla-mime-md.md)] associated with the codec.","nodes":[{"pos":[0,119],"content":"Gets a value that identifies the <ph id=\"ph1\">[!INCLUDE[TLA#tla_mime](~/includes/tlasharptla-mime-md.md)]</ph> associated with the codec.","source":"Gets a value that identifies the [!INCLUDE[TLA#tla_mime](~/includes/tlasharptla-mime-md.md)] associated with the codec."}],"pos":[16459,16579],"yaml":true},{"content":"The [!INCLUDE[TLA#tla_mime](~/includes/tlasharptla-mime-md.md)] types associated with the codec.","nodes":[{"pos":[0,96],"content":"The <ph id=\"ph1\">[!INCLUDE[TLA#tla_mime](~/includes/tlasharptla-mime-md.md)]</ph> types associated with the codec.","source":"The [!INCLUDE[TLA#tla_mime](~/includes/tlasharptla-mime-md.md)] types associated with the codec."}],"pos":[17329,17426],"yaml":true},{"content":"Gets a value that identifies the specification version of the codec.","nodes":[{"pos":[0,68],"content":"Gets a value that identifies the specification version of the codec.","nodes":[{"content":"Gets a value that identifies the specification version of the codec.","pos":[0,68]}]}],"pos":[18606,18675],"yaml":true},{"content":"The specification version of the codec.","nodes":[{"pos":[0,39],"content":"The specification version of the codec.","nodes":[{"content":"The specification version of the codec.","pos":[0,39]}]}],"pos":[19438,19478],"yaml":true},{"content":"Gets a value that indicates whether the codec supports animation.","nodes":[{"pos":[0,65],"content":"Gets a value that indicates whether the codec supports animation.","nodes":[{"content":"Gets a value that indicates whether the codec supports animation.","pos":[0,65]}]}],"pos":[20651,20717],"yaml":true},{"content":"`true` if the codec supports animation; otherwise, `false`.","nodes":[{"pos":[0,59],"content":"<ph id=\"ph1\">`true`</ph> if the codec supports animation; otherwise, <ph id=\"ph2\">`false`</ph>.","source":"`true` if the codec supports animation; otherwise, `false`."}],"pos":[20901,20963],"yaml":true},{"content":"Gets a value that indicates whether the codec supports lossless of images.","nodes":[{"pos":[0,74],"content":"Gets a value that indicates whether the codec supports lossless of images.","nodes":[{"content":"Gets a value that indicates whether the codec supports lossless of images.","pos":[0,74]}]}],"pos":[22127,22202],"yaml":true},{"content":"`true` if the codec supports lossless of images; otherwise, `false`.","nodes":[{"pos":[0,68],"content":"<ph id=\"ph1\">`true`</ph> if the codec supports lossless of images; otherwise, <ph id=\"ph2\">`false`</ph>.","source":"`true` if the codec supports lossless of images; otherwise, `false`."}],"pos":[22385,22456],"yaml":true},{"content":"Gets a value that identifies whether the codec supports multiple frames.","nodes":[{"pos":[0,72],"content":"Gets a value that identifies whether the codec supports multiple frames.","nodes":[{"content":"Gets a value that identifies whether the codec supports multiple frames.","pos":[0,72]}]}],"pos":[23655,23728],"yaml":true},{"content":"`true` if the codec supports multiple frames; otherwise, `false`.","nodes":[{"pos":[0,65],"content":"<ph id=\"ph1\">`true`</ph> if the codec supports multiple frames; otherwise, <ph id=\"ph2\">`false`</ph>.","source":"`true` if the codec supports multiple frames; otherwise, `false`."}],"pos":[23917,23985],"yaml":true},{"content":"Gets a value that identifies the version of the codec.","nodes":[{"pos":[0,54],"content":"Gets a value that identifies the version of the codec.","nodes":[{"content":"Gets a value that identifies the version of the codec.","pos":[0,54]}]}],"pos":[25078,25133],"yaml":true},{"content":"The version of the codec.","nodes":[{"pos":[0,25],"content":"The version of the codec.","nodes":[{"content":"The version of the codec.","pos":[0,25]}]}],"pos":[25883,25909],"yaml":true}],"content":"### YamlMime:ManagedReference\nitems:\n- uid: System.Windows.Media.Imaging.BitmapCodecInfo\n  commentId: T:System.Windows.Media.Imaging.BitmapCodecInfo\n  id: BitmapCodecInfo\n  children:\n  - System.Windows.Media.Imaging.BitmapCodecInfo.#ctor\n  - System.Windows.Media.Imaging.BitmapCodecInfo.Author\n  - System.Windows.Media.Imaging.BitmapCodecInfo.ContainerFormat\n  - System.Windows.Media.Imaging.BitmapCodecInfo.DeviceManufacturer\n  - System.Windows.Media.Imaging.BitmapCodecInfo.DeviceModels\n  - System.Windows.Media.Imaging.BitmapCodecInfo.FileExtensions\n  - System.Windows.Media.Imaging.BitmapCodecInfo.FriendlyName\n  - System.Windows.Media.Imaging.BitmapCodecInfo.MimeTypes\n  - System.Windows.Media.Imaging.BitmapCodecInfo.SpecificationVersion\n  - System.Windows.Media.Imaging.BitmapCodecInfo.SupportsAnimation\n  - System.Windows.Media.Imaging.BitmapCodecInfo.SupportsLossless\n  - System.Windows.Media.Imaging.BitmapCodecInfo.SupportsMultipleFrames\n  - System.Windows.Media.Imaging.BitmapCodecInfo.Version\n  langs:\n  - csharp\n  name: BitmapCodecInfo\n  nameWithType: BitmapCodecInfo\n  fullName: System.Windows.Media.Imaging.BitmapCodecInfo\n  type: Class\n  assemblies:\n  - PresentationCore\n  namespace: System.Windows.Media.Imaging\n  summary: Provides information about an imaging codec.\n  remarks: A <xref:System.Windows.Media.Imaging.BitmapCodecInfo> can be obtain for each codec in [!INCLUDE[TLA#tla_winclient](~/includes/tlasharptla-winclient-md.md)] by using the <xref:System.Windows.Media.Imaging.BitmapDecoder.CodecInfo%2A> or the <xref:System.Windows.Media.Imaging.BitmapEncoder.CodecInfo%2A> properties.\n  example:\n  - \"The following example demonstrates how to retrieve the <xref:System.Windows.Media.Imaging.BitmapCodecInfo.Author%2A> property of a given <xref:System.Windows.Media.Imaging.BitmapEncoder>.  \\n  \\n [!code-csharp[BitmapFrameExample#3](~/samples/snippets/csharp/VS_Snippets_Wpf/BitmapFrameExample/CSharp/BitmapFrame.cs#3)]\\n [!code-vb[BitmapFrameExample#3](~/samples/snippets/visualbasic/VS_Snippets_Wpf/BitmapFrameExample/VB/BitmapFrame.vb#3)]\"\n  syntax:\n    content: public abstract class BitmapCodecInfo\n  inheritance:\n  - System.Object\n  implements: []\n  inheritedMembers:\n  - System.Object.Equals(System.Object)\n  - System.Object.Equals(System.Object,System.Object)\n  - System.Object.GetHashCode\n  - System.Object.GetType\n  - System.Object.MemberwiseClone\n  - System.Object.ReferenceEquals(System.Object,System.Object)\n  - System.Object.ToString\n  version:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Windows.Media.Imaging/BitmapCodecInfo.xml\n  ms.technology:\n  - dotnet-wpf\n  author: stevehoag\n  ms.author: shoag\n  manager: wpickett\n- uid: System.Windows.Media.Imaging.BitmapCodecInfo.#ctor\n  commentId: M:System.Windows.Media.Imaging.BitmapCodecInfo.#ctor\n  id: '#ctor'\n  parent: System.Windows.Media.Imaging.BitmapCodecInfo\n  langs:\n  - csharp\n  name: BitmapCodecInfo()\n  nameWithType: BitmapCodecInfo.BitmapCodecInfo()\n  fullName: BitmapCodecInfo.BitmapCodecInfo()\n  type: Constructor\n  assemblies:\n  - PresentationCore\n  namespace: System.Windows.Media.Imaging\n  summary: Initializes a new instance of <xref href=\"System.Windows.Media.Imaging.BitmapCodecInfo\"></xref>.\n  syntax:\n    content: protected BitmapCodecInfo ();\n    parameters: []\n  overload: System.Windows.Media.Imaging.BitmapCodecInfo.#ctor*\n  exceptions: []\n  version:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Windows.Media.Imaging/BitmapCodecInfo.xml\n  ms.technology:\n  - dotnet-wpf\n  ms.author: kempb\n  manager: ghogen\n- uid: System.Windows.Media.Imaging.BitmapCodecInfo.Author\n  commentId: P:System.Windows.Media.Imaging.BitmapCodecInfo.Author\n  id: Author\n  parent: System.Windows.Media.Imaging.BitmapCodecInfo\n  langs:\n  - csharp\n  name: Author\n  nameWithType: BitmapCodecInfo.Author\n  fullName: BitmapCodecInfo.Author\n  type: Property\n  assemblies:\n  - PresentationCore\n  namespace: System.Windows.Media.Imaging\n  summary: Gets a value that identifies the author of the codec.\n  remarks: ''\n  example:\n  - \"The following example demonstrates how to retrieve the <xref:System.Windows.Media.Imaging.BitmapCodecInfo.Author%2A> property of a given <xref:System.Windows.Media.Imaging.BitmapEncoder>.  \\n  \\n [!code-csharp[BitmapFrameExample#3](~/samples/snippets/csharp/VS_Snippets_Wpf/BitmapFrameExample/CSharp/BitmapFrame.cs#3)]\\n [!code-vb[BitmapFrameExample#3](~/samples/snippets/visualbasic/VS_Snippets_Wpf/BitmapFrameExample/VB/BitmapFrame.vb#3)]\"\n  syntax:\n    content: >-\n      [get: System.Security.SecurityCritical]\n\n      public virtual string Author { get; }\n    return:\n      type: System.String\n      description: The author of the codec.\n  overload: System.Windows.Media.Imaging.BitmapCodecInfo.Author*\n  exceptions: []\n  attributes:\n  - type: 'get: System.Security.SecurityCritical'\n  version:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Windows.Media.Imaging/BitmapCodecInfo.xml\n  ms.technology:\n  - dotnet-wpf\n  author: stevehoag\n  ms.author: shoag\n  manager: wpickett\n- uid: System.Windows.Media.Imaging.BitmapCodecInfo.ContainerFormat\n  commentId: P:System.Windows.Media.Imaging.BitmapCodecInfo.ContainerFormat\n  id: ContainerFormat\n  parent: System.Windows.Media.Imaging.BitmapCodecInfo\n  langs:\n  - csharp\n  name: ContainerFormat\n  nameWithType: BitmapCodecInfo.ContainerFormat\n  fullName: BitmapCodecInfo.ContainerFormat\n  type: Property\n  assemblies:\n  - PresentationCore\n  namespace: System.Windows.Media.Imaging\n  summary: Gets a value that identifies the container format for the codec.\n  remarks: ''\n  example:\n  - \"The following example demonstrates how to retrieve the <xref:System.Windows.Media.Imaging.BitmapCodecInfo.Author%2A> property of a given <xref:System.Windows.Media.Imaging.BitmapEncoder>. You can use the same approach to retrieve other <xref:System.Windows.Media.Imaging.BitmapCodecInfo>.  \\n  \\n [!code-csharp[BitmapFrameExample#3](~/samples/snippets/csharp/VS_Snippets_Wpf/BitmapFrameExample/CSharp/BitmapFrame.cs#3)]\\n [!code-vb[BitmapFrameExample#3](~/samples/snippets/visualbasic/VS_Snippets_Wpf/BitmapFrameExample/VB/BitmapFrame.vb#3)]\"\n  syntax:\n    content: >-\n      [get: System.Security.SecurityCritical]\n\n      public virtual Guid ContainerFormat { get; }\n    return:\n      type: System.Guid\n      description: The container format of the codec.\n  overload: System.Windows.Media.Imaging.BitmapCodecInfo.ContainerFormat*\n  exceptions: []\n  attributes:\n  - type: 'get: System.Security.SecurityCritical'\n  version:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Windows.Media.Imaging/BitmapCodecInfo.xml\n  ms.technology:\n  - dotnet-wpf\n  ms.author: kempb\n  manager: ghogen\n- uid: System.Windows.Media.Imaging.BitmapCodecInfo.DeviceManufacturer\n  commentId: P:System.Windows.Media.Imaging.BitmapCodecInfo.DeviceManufacturer\n  id: DeviceManufacturer\n  parent: System.Windows.Media.Imaging.BitmapCodecInfo\n  langs:\n  - csharp\n  name: DeviceManufacturer\n  nameWithType: BitmapCodecInfo.DeviceManufacturer\n  fullName: BitmapCodecInfo.DeviceManufacturer\n  type: Property\n  assemblies:\n  - PresentationCore\n  namespace: System.Windows.Media.Imaging\n  summary: Gets a value that identifies the device manufacturer of the codec.\n  remarks: ''\n  example:\n  - \"The following example demonstrates how to retrieve the <xref:System.Windows.Media.Imaging.BitmapCodecInfo.Author%2A> property of a given <xref:System.Windows.Media.Imaging.BitmapEncoder>. You can use the same approach to retrieve other <xref:System.Windows.Media.Imaging.BitmapCodecInfo>.  \\n  \\n [!code-csharp[BitmapFrameExample#3](~/samples/snippets/csharp/VS_Snippets_Wpf/BitmapFrameExample/CSharp/BitmapFrame.cs#3)]\\n [!code-vb[BitmapFrameExample#3](~/samples/snippets/visualbasic/VS_Snippets_Wpf/BitmapFrameExample/VB/BitmapFrame.vb#3)]\"\n  syntax:\n    content: >-\n      [get: System.Security.SecurityCritical]\n\n      public virtual string DeviceManufacturer { get; }\n    return:\n      type: System.String\n      description: The device manufacturer of the codec.\n  overload: System.Windows.Media.Imaging.BitmapCodecInfo.DeviceManufacturer*\n  exceptions: []\n  attributes:\n  - type: 'get: System.Security.SecurityCritical'\n  version:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Windows.Media.Imaging/BitmapCodecInfo.xml\n  ms.technology:\n  - dotnet-wpf\n  ms.author: kempb\n  manager: ghogen\n- uid: System.Windows.Media.Imaging.BitmapCodecInfo.DeviceModels\n  commentId: P:System.Windows.Media.Imaging.BitmapCodecInfo.DeviceModels\n  id: DeviceModels\n  parent: System.Windows.Media.Imaging.BitmapCodecInfo\n  langs:\n  - csharp\n  name: DeviceModels\n  nameWithType: BitmapCodecInfo.DeviceModels\n  fullName: BitmapCodecInfo.DeviceModels\n  type: Property\n  assemblies:\n  - PresentationCore\n  namespace: System.Windows.Media.Imaging\n  summary: Gets a value that identifies the device models of the codec.\n  remarks: ''\n  example:\n  - \"The following example demonstrates how to retrieve the <xref:System.Windows.Media.Imaging.BitmapCodecInfo.Author%2A> property of a given <xref:System.Windows.Media.Imaging.BitmapEncoder>. You can use the same approach to retrieve other <xref:System.Windows.Media.Imaging.BitmapCodecInfo>.  \\n  \\n [!code-csharp[BitmapFrameExample#3](~/samples/snippets/csharp/VS_Snippets_Wpf/BitmapFrameExample/CSharp/BitmapFrame.cs#3)]\\n [!code-vb[BitmapFrameExample#3](~/samples/snippets/visualbasic/VS_Snippets_Wpf/BitmapFrameExample/VB/BitmapFrame.vb#3)]\"\n  syntax:\n    content: >-\n      [get: System.Security.SecurityCritical]\n\n      public virtual string DeviceModels { get; }\n    return:\n      type: System.String\n      description: The device model of the codec.\n  overload: System.Windows.Media.Imaging.BitmapCodecInfo.DeviceModels*\n  exceptions: []\n  attributes:\n  - type: 'get: System.Security.SecurityCritical'\n  version:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Windows.Media.Imaging/BitmapCodecInfo.xml\n  ms.technology:\n  - dotnet-wpf\n  author: stevehoag\n  ms.author: shoag\n  manager: wpickett\n- uid: System.Windows.Media.Imaging.BitmapCodecInfo.FileExtensions\n  commentId: P:System.Windows.Media.Imaging.BitmapCodecInfo.FileExtensions\n  id: FileExtensions\n  parent: System.Windows.Media.Imaging.BitmapCodecInfo\n  langs:\n  - csharp\n  name: FileExtensions\n  nameWithType: BitmapCodecInfo.FileExtensions\n  fullName: BitmapCodecInfo.FileExtensions\n  type: Property\n  assemblies:\n  - PresentationCore\n  namespace: System.Windows.Media.Imaging\n  summary: Gets a value that identifies the file extensions associated with the codec.\n  remarks: ''\n  example:\n  - \"The following example demonstrates how to retrieve the <xref:System.Windows.Media.Imaging.BitmapCodecInfo.Author%2A> property of a given <xref:System.Windows.Media.Imaging.BitmapEncoder>. You can use the same approach to retrieve other <xref:System.Windows.Media.Imaging.BitmapCodecInfo>.  \\n  \\n [!code-csharp[BitmapFrameExample#3](~/samples/snippets/csharp/VS_Snippets_Wpf/BitmapFrameExample/CSharp/BitmapFrame.cs#3)]\\n [!code-vb[BitmapFrameExample#3](~/samples/snippets/visualbasic/VS_Snippets_Wpf/BitmapFrameExample/VB/BitmapFrame.vb#3)]\"\n  syntax:\n    content: >-\n      [get: System.Security.SecurityCritical]\n\n      public virtual string FileExtensions { get; }\n    return:\n      type: System.String\n      description: The file extensions associated with the codec.\n  overload: System.Windows.Media.Imaging.BitmapCodecInfo.FileExtensions*\n  exceptions: []\n  attributes:\n  - type: 'get: System.Security.SecurityCritical'\n  version:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Windows.Media.Imaging/BitmapCodecInfo.xml\n  ms.technology:\n  - dotnet-wpf\n  author: stevehoag\n  ms.author: shoag\n  manager: wpickett\n- uid: System.Windows.Media.Imaging.BitmapCodecInfo.FriendlyName\n  commentId: P:System.Windows.Media.Imaging.BitmapCodecInfo.FriendlyName\n  id: FriendlyName\n  parent: System.Windows.Media.Imaging.BitmapCodecInfo\n  langs:\n  - csharp\n  name: FriendlyName\n  nameWithType: BitmapCodecInfo.FriendlyName\n  fullName: BitmapCodecInfo.FriendlyName\n  type: Property\n  assemblies:\n  - PresentationCore\n  namespace: System.Windows.Media.Imaging\n  summary: Gets a value that represents the friendly name of the codec.\n  remarks: ''\n  example:\n  - \"The following example demonstrates how to retrieve the <xref:System.Windows.Media.Imaging.BitmapCodecInfo.Author%2A> property of a given <xref:System.Windows.Media.Imaging.BitmapEncoder>. You can use the same approach to retrieve other <xref:System.Windows.Media.Imaging.BitmapCodecInfo>.  \\n  \\n [!code-csharp[BitmapFrameExample#3](~/samples/snippets/csharp/VS_Snippets_Wpf/BitmapFrameExample/CSharp/BitmapFrame.cs#3)]\\n [!code-vb[BitmapFrameExample#3](~/samples/snippets/visualbasic/VS_Snippets_Wpf/BitmapFrameExample/VB/BitmapFrame.vb#3)]\"\n  syntax:\n    content: >-\n      [get: System.Security.SecurityCritical]\n\n      public virtual string FriendlyName { get; }\n    return:\n      type: System.String\n      description: The friendly name of the codec.\n  overload: System.Windows.Media.Imaging.BitmapCodecInfo.FriendlyName*\n  exceptions: []\n  attributes:\n  - type: 'get: System.Security.SecurityCritical'\n  version:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Windows.Media.Imaging/BitmapCodecInfo.xml\n  ms.technology:\n  - dotnet-wpf\n  author: stevehoag\n  ms.author: shoag\n  manager: wpickett\n- uid: System.Windows.Media.Imaging.BitmapCodecInfo.MimeTypes\n  commentId: P:System.Windows.Media.Imaging.BitmapCodecInfo.MimeTypes\n  id: MimeTypes\n  parent: System.Windows.Media.Imaging.BitmapCodecInfo\n  langs:\n  - csharp\n  name: MimeTypes\n  nameWithType: BitmapCodecInfo.MimeTypes\n  fullName: BitmapCodecInfo.MimeTypes\n  type: Property\n  assemblies:\n  - PresentationCore\n  namespace: System.Windows.Media.Imaging\n  summary: Gets a value that identifies the [!INCLUDE[TLA#tla_mime](~/includes/tlasharptla-mime-md.md)] associated with the codec.\n  remarks: ''\n  example:\n  - \"The following example demonstrates how to retrieve the <xref:System.Windows.Media.Imaging.BitmapCodecInfo.Author%2A> property of a given <xref:System.Windows.Media.Imaging.BitmapEncoder>. You can use the same approach to retrieve other <xref:System.Windows.Media.Imaging.BitmapCodecInfo>.  \\n  \\n [!code-csharp[BitmapFrameExample#3](~/samples/snippets/csharp/VS_Snippets_Wpf/BitmapFrameExample/CSharp/BitmapFrame.cs#3)]\\n [!code-vb[BitmapFrameExample#3](~/samples/snippets/visualbasic/VS_Snippets_Wpf/BitmapFrameExample/VB/BitmapFrame.vb#3)]\"\n  syntax:\n    content: >-\n      [get: System.Security.SecurityCritical]\n\n      public virtual string MimeTypes { get; }\n    return:\n      type: System.String\n      description: The [!INCLUDE[TLA#tla_mime](~/includes/tlasharptla-mime-md.md)] types associated with the codec.\n  overload: System.Windows.Media.Imaging.BitmapCodecInfo.MimeTypes*\n  exceptions: []\n  attributes:\n  - type: 'get: System.Security.SecurityCritical'\n  version:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Windows.Media.Imaging/BitmapCodecInfo.xml\n  ms.technology:\n  - dotnet-wpf\n  author: stevehoag\n  ms.author: shoag\n  manager: wpickett\n- uid: System.Windows.Media.Imaging.BitmapCodecInfo.SpecificationVersion\n  commentId: P:System.Windows.Media.Imaging.BitmapCodecInfo.SpecificationVersion\n  id: SpecificationVersion\n  parent: System.Windows.Media.Imaging.BitmapCodecInfo\n  langs:\n  - csharp\n  name: SpecificationVersion\n  nameWithType: BitmapCodecInfo.SpecificationVersion\n  fullName: BitmapCodecInfo.SpecificationVersion\n  type: Property\n  assemblies:\n  - PresentationCore\n  namespace: System.Windows.Media.Imaging\n  summary: Gets a value that identifies the specification version of the codec.\n  remarks: ''\n  example:\n  - \"The following example demonstrates how to retrieve the <xref:System.Windows.Media.Imaging.BitmapCodecInfo.Author%2A> property of a given <xref:System.Windows.Media.Imaging.BitmapEncoder>. You can use the same approach to retrieve other <xref:System.Windows.Media.Imaging.BitmapCodecInfo>.  \\n  \\n [!code-csharp[BitmapFrameExample#3](~/samples/snippets/csharp/VS_Snippets_Wpf/BitmapFrameExample/CSharp/BitmapFrame.cs#3)]\\n [!code-vb[BitmapFrameExample#3](~/samples/snippets/visualbasic/VS_Snippets_Wpf/BitmapFrameExample/VB/BitmapFrame.vb#3)]\"\n  syntax:\n    content: >-\n      [get: System.Security.SecurityCritical]\n\n      public virtual Version SpecificationVersion { get; }\n    return:\n      type: System.Version\n      description: The specification version of the codec.\n  overload: System.Windows.Media.Imaging.BitmapCodecInfo.SpecificationVersion*\n  exceptions: []\n  attributes:\n  - type: 'get: System.Security.SecurityCritical'\n  version:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Windows.Media.Imaging/BitmapCodecInfo.xml\n  ms.technology:\n  - dotnet-wpf\n  author: stevehoag\n  ms.author: shoag\n  manager: wpickett\n- uid: System.Windows.Media.Imaging.BitmapCodecInfo.SupportsAnimation\n  commentId: P:System.Windows.Media.Imaging.BitmapCodecInfo.SupportsAnimation\n  id: SupportsAnimation\n  parent: System.Windows.Media.Imaging.BitmapCodecInfo\n  langs:\n  - csharp\n  name: SupportsAnimation\n  nameWithType: BitmapCodecInfo.SupportsAnimation\n  fullName: BitmapCodecInfo.SupportsAnimation\n  type: Property\n  assemblies:\n  - PresentationCore\n  namespace: System.Windows.Media.Imaging\n  summary: Gets a value that indicates whether the codec supports animation.\n  syntax:\n    content: >-\n      [get: System.Security.SecurityCritical]\n\n      public virtual bool SupportsAnimation { get; }\n    return:\n      type: System.Boolean\n      description: '`true` if the codec supports animation; otherwise, `false`.'\n  overload: System.Windows.Media.Imaging.BitmapCodecInfo.SupportsAnimation*\n  exceptions: []\n  attributes:\n  - type: 'get: System.Security.SecurityCritical'\n  version:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Windows.Media.Imaging/BitmapCodecInfo.xml\n  ms.technology:\n  - dotnet-wpf\n  author: stevehoag\n  ms.author: shoag\n  manager: wpickett\n- uid: System.Windows.Media.Imaging.BitmapCodecInfo.SupportsLossless\n  commentId: P:System.Windows.Media.Imaging.BitmapCodecInfo.SupportsLossless\n  id: SupportsLossless\n  parent: System.Windows.Media.Imaging.BitmapCodecInfo\n  langs:\n  - csharp\n  name: SupportsLossless\n  nameWithType: BitmapCodecInfo.SupportsLossless\n  fullName: BitmapCodecInfo.SupportsLossless\n  type: Property\n  assemblies:\n  - PresentationCore\n  namespace: System.Windows.Media.Imaging\n  summary: Gets a value that indicates whether the codec supports lossless of images.\n  syntax:\n    content: >-\n      [get: System.Security.SecurityCritical]\n\n      public virtual bool SupportsLossless { get; }\n    return:\n      type: System.Boolean\n      description: '`true` if the codec supports lossless of images; otherwise, `false`.'\n  overload: System.Windows.Media.Imaging.BitmapCodecInfo.SupportsLossless*\n  exceptions: []\n  attributes:\n  - type: 'get: System.Security.SecurityCritical'\n  version:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Windows.Media.Imaging/BitmapCodecInfo.xml\n  ms.technology:\n  - dotnet-wpf\n  author: stevehoag\n  ms.author: shoag\n  manager: wpickett\n- uid: System.Windows.Media.Imaging.BitmapCodecInfo.SupportsMultipleFrames\n  commentId: P:System.Windows.Media.Imaging.BitmapCodecInfo.SupportsMultipleFrames\n  id: SupportsMultipleFrames\n  parent: System.Windows.Media.Imaging.BitmapCodecInfo\n  langs:\n  - csharp\n  name: SupportsMultipleFrames\n  nameWithType: BitmapCodecInfo.SupportsMultipleFrames\n  fullName: BitmapCodecInfo.SupportsMultipleFrames\n  type: Property\n  assemblies:\n  - PresentationCore\n  namespace: System.Windows.Media.Imaging\n  summary: Gets a value that identifies whether the codec supports multiple frames.\n  syntax:\n    content: >-\n      [get: System.Security.SecurityCritical]\n\n      public virtual bool SupportsMultipleFrames { get; }\n    return:\n      type: System.Boolean\n      description: '`true` if the codec supports multiple frames; otherwise, `false`.'\n  overload: System.Windows.Media.Imaging.BitmapCodecInfo.SupportsMultipleFrames*\n  exceptions: []\n  attributes:\n  - type: 'get: System.Security.SecurityCritical'\n  version:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Windows.Media.Imaging/BitmapCodecInfo.xml\n  ms.technology:\n  - dotnet-wpf\n  ms.author: kempb\n  manager: ghogen\n- uid: System.Windows.Media.Imaging.BitmapCodecInfo.Version\n  commentId: P:System.Windows.Media.Imaging.BitmapCodecInfo.Version\n  id: Version\n  parent: System.Windows.Media.Imaging.BitmapCodecInfo\n  langs:\n  - csharp\n  name: Version\n  nameWithType: BitmapCodecInfo.Version\n  fullName: BitmapCodecInfo.Version\n  type: Property\n  assemblies:\n  - PresentationCore\n  namespace: System.Windows.Media.Imaging\n  summary: Gets a value that identifies the version of the codec.\n  remarks: ''\n  example:\n  - \"The following example demonstrates how to retrieve the <xref:System.Windows.Media.Imaging.BitmapCodecInfo.Author%2A> property of a given <xref:System.Windows.Media.Imaging.BitmapEncoder>. You can use the same approach to retrieve other <xref:System.Windows.Media.Imaging.BitmapCodecInfo>.  \\n  \\n [!code-csharp[BitmapFrameExample#3](~/samples/snippets/csharp/VS_Snippets_Wpf/BitmapFrameExample/CSharp/BitmapFrame.cs#3)]\\n [!code-vb[BitmapFrameExample#3](~/samples/snippets/visualbasic/VS_Snippets_Wpf/BitmapFrameExample/VB/BitmapFrame.vb#3)]\"\n  syntax:\n    content: >-\n      [get: System.Security.SecurityCritical]\n\n      public virtual Version Version { get; }\n    return:\n      type: System.Version\n      description: The version of the codec.\n  overload: System.Windows.Media.Imaging.BitmapCodecInfo.Version*\n  exceptions: []\n  attributes:\n  - type: 'get: System.Security.SecurityCritical'\n  version:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Windows.Media.Imaging/BitmapCodecInfo.xml\n  ms.technology:\n  - dotnet-wpf\n  author: stevehoag\n  ms.author: shoag\n  manager: wpickett\nreferences:\n- uid: System.Object\n  parent: System\n  isExternal: false\n  name: Object\n  nameWithType: Object\n  fullName: System.Object\n- uid: System.Windows.Media.Imaging.BitmapCodecInfo.#ctor\n  parent: System.Windows.Media.Imaging.BitmapCodecInfo\n  isExternal: false\n  name: BitmapCodecInfo()\n  nameWithType: BitmapCodecInfo.BitmapCodecInfo()\n  fullName: BitmapCodecInfo.BitmapCodecInfo()\n- uid: System.Windows.Media.Imaging.BitmapCodecInfo.Author\n  parent: System.Windows.Media.Imaging.BitmapCodecInfo\n  isExternal: false\n  name: Author\n  nameWithType: BitmapCodecInfo.Author\n  fullName: BitmapCodecInfo.Author\n- uid: System.String\n  parent: System\n  isExternal: false\n  name: String\n  nameWithType: String\n  fullName: System.String\n- uid: System.Windows.Media.Imaging.BitmapCodecInfo.ContainerFormat\n  parent: System.Windows.Media.Imaging.BitmapCodecInfo\n  isExternal: false\n  name: ContainerFormat\n  nameWithType: BitmapCodecInfo.ContainerFormat\n  fullName: BitmapCodecInfo.ContainerFormat\n- uid: System.Guid\n  parent: System\n  isExternal: false\n  name: Guid\n  nameWithType: Guid\n  fullName: System.Guid\n- uid: System.Windows.Media.Imaging.BitmapCodecInfo.DeviceManufacturer\n  parent: System.Windows.Media.Imaging.BitmapCodecInfo\n  isExternal: false\n  name: DeviceManufacturer\n  nameWithType: BitmapCodecInfo.DeviceManufacturer\n  fullName: BitmapCodecInfo.DeviceManufacturer\n- uid: System.Windows.Media.Imaging.BitmapCodecInfo.DeviceModels\n  parent: System.Windows.Media.Imaging.BitmapCodecInfo\n  isExternal: false\n  name: DeviceModels\n  nameWithType: BitmapCodecInfo.DeviceModels\n  fullName: BitmapCodecInfo.DeviceModels\n- uid: System.Windows.Media.Imaging.BitmapCodecInfo.FileExtensions\n  parent: System.Windows.Media.Imaging.BitmapCodecInfo\n  isExternal: false\n  name: FileExtensions\n  nameWithType: BitmapCodecInfo.FileExtensions\n  fullName: BitmapCodecInfo.FileExtensions\n- uid: System.Windows.Media.Imaging.BitmapCodecInfo.FriendlyName\n  parent: System.Windows.Media.Imaging.BitmapCodecInfo\n  isExternal: false\n  name: FriendlyName\n  nameWithType: BitmapCodecInfo.FriendlyName\n  fullName: BitmapCodecInfo.FriendlyName\n- uid: System.Windows.Media.Imaging.BitmapCodecInfo.MimeTypes\n  parent: System.Windows.Media.Imaging.BitmapCodecInfo\n  isExternal: false\n  name: MimeTypes\n  nameWithType: BitmapCodecInfo.MimeTypes\n  fullName: BitmapCodecInfo.MimeTypes\n- uid: System.Windows.Media.Imaging.BitmapCodecInfo.SpecificationVersion\n  parent: System.Windows.Media.Imaging.BitmapCodecInfo\n  isExternal: false\n  name: SpecificationVersion\n  nameWithType: BitmapCodecInfo.SpecificationVersion\n  fullName: BitmapCodecInfo.SpecificationVersion\n- uid: System.Version\n  parent: System\n  isExternal: false\n  name: Version\n  nameWithType: Version\n  fullName: System.Version\n- uid: System.Windows.Media.Imaging.BitmapCodecInfo.SupportsAnimation\n  parent: System.Windows.Media.Imaging.BitmapCodecInfo\n  isExternal: false\n  name: SupportsAnimation\n  nameWithType: BitmapCodecInfo.SupportsAnimation\n  fullName: BitmapCodecInfo.SupportsAnimation\n- uid: System.Boolean\n  parent: System\n  isExternal: false\n  name: Boolean\n  nameWithType: Boolean\n  fullName: System.Boolean\n- uid: System.Windows.Media.Imaging.BitmapCodecInfo.SupportsLossless\n  parent: System.Windows.Media.Imaging.BitmapCodecInfo\n  isExternal: false\n  name: SupportsLossless\n  nameWithType: BitmapCodecInfo.SupportsLossless\n  fullName: BitmapCodecInfo.SupportsLossless\n- uid: System.Windows.Media.Imaging.BitmapCodecInfo.SupportsMultipleFrames\n  parent: System.Windows.Media.Imaging.BitmapCodecInfo\n  isExternal: false\n  name: SupportsMultipleFrames\n  nameWithType: BitmapCodecInfo.SupportsMultipleFrames\n  fullName: BitmapCodecInfo.SupportsMultipleFrames\n- uid: System.Windows.Media.Imaging.BitmapCodecInfo.Version\n  parent: System.Windows.Media.Imaging.BitmapCodecInfo\n  isExternal: false\n  name: Version\n  nameWithType: BitmapCodecInfo.Version\n  fullName: BitmapCodecInfo.Version\n- uid: System.Windows.Media.Imaging.BitmapCodecInfo.#ctor*\n  parent: System.Windows.Media.Imaging.BitmapCodecInfo\n  isExternal: false\n  name: BitmapCodecInfo\n  nameWithType: BitmapCodecInfo.BitmapCodecInfo\n  fullName: BitmapCodecInfo.BitmapCodecInfo\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Windows.Media.Imaging/BitmapCodecInfo.xml\n- uid: System.Windows.Media.Imaging.BitmapCodecInfo.Author*\n  parent: System.Windows.Media.Imaging.BitmapCodecInfo\n  isExternal: false\n  name: Author\n  nameWithType: BitmapCodecInfo.Author\n  fullName: BitmapCodecInfo.Author\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Windows.Media.Imaging/BitmapCodecInfo.xml\n- uid: System.Windows.Media.Imaging.BitmapCodecInfo.ContainerFormat*\n  parent: System.Windows.Media.Imaging.BitmapCodecInfo\n  isExternal: false\n  name: ContainerFormat\n  nameWithType: BitmapCodecInfo.ContainerFormat\n  fullName: BitmapCodecInfo.ContainerFormat\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Windows.Media.Imaging/BitmapCodecInfo.xml\n- uid: System.Windows.Media.Imaging.BitmapCodecInfo.DeviceManufacturer*\n  parent: System.Windows.Media.Imaging.BitmapCodecInfo\n  isExternal: false\n  name: DeviceManufacturer\n  nameWithType: BitmapCodecInfo.DeviceManufacturer\n  fullName: BitmapCodecInfo.DeviceManufacturer\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Windows.Media.Imaging/BitmapCodecInfo.xml\n- uid: System.Windows.Media.Imaging.BitmapCodecInfo.DeviceModels*\n  parent: System.Windows.Media.Imaging.BitmapCodecInfo\n  isExternal: false\n  name: DeviceModels\n  nameWithType: BitmapCodecInfo.DeviceModels\n  fullName: BitmapCodecInfo.DeviceModels\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Windows.Media.Imaging/BitmapCodecInfo.xml\n- uid: System.Windows.Media.Imaging.BitmapCodecInfo.FileExtensions*\n  parent: System.Windows.Media.Imaging.BitmapCodecInfo\n  isExternal: false\n  name: FileExtensions\n  nameWithType: BitmapCodecInfo.FileExtensions\n  fullName: BitmapCodecInfo.FileExtensions\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Windows.Media.Imaging/BitmapCodecInfo.xml\n- uid: System.Windows.Media.Imaging.BitmapCodecInfo.FriendlyName*\n  parent: System.Windows.Media.Imaging.BitmapCodecInfo\n  isExternal: false\n  name: FriendlyName\n  nameWithType: BitmapCodecInfo.FriendlyName\n  fullName: BitmapCodecInfo.FriendlyName\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Windows.Media.Imaging/BitmapCodecInfo.xml\n- uid: System.Windows.Media.Imaging.BitmapCodecInfo.MimeTypes*\n  parent: System.Windows.Media.Imaging.BitmapCodecInfo\n  isExternal: false\n  name: MimeTypes\n  nameWithType: BitmapCodecInfo.MimeTypes\n  fullName: BitmapCodecInfo.MimeTypes\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Windows.Media.Imaging/BitmapCodecInfo.xml\n- uid: System.Windows.Media.Imaging.BitmapCodecInfo.SpecificationVersion*\n  parent: System.Windows.Media.Imaging.BitmapCodecInfo\n  isExternal: false\n  name: SpecificationVersion\n  nameWithType: BitmapCodecInfo.SpecificationVersion\n  fullName: BitmapCodecInfo.SpecificationVersion\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Windows.Media.Imaging/BitmapCodecInfo.xml\n- uid: System.Windows.Media.Imaging.BitmapCodecInfo.SupportsAnimation*\n  parent: System.Windows.Media.Imaging.BitmapCodecInfo\n  isExternal: false\n  name: SupportsAnimation\n  nameWithType: BitmapCodecInfo.SupportsAnimation\n  fullName: BitmapCodecInfo.SupportsAnimation\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Windows.Media.Imaging/BitmapCodecInfo.xml\n- uid: System.Windows.Media.Imaging.BitmapCodecInfo.SupportsLossless*\n  parent: System.Windows.Media.Imaging.BitmapCodecInfo\n  isExternal: false\n  name: SupportsLossless\n  nameWithType: BitmapCodecInfo.SupportsLossless\n  fullName: BitmapCodecInfo.SupportsLossless\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Windows.Media.Imaging/BitmapCodecInfo.xml\n- uid: System.Windows.Media.Imaging.BitmapCodecInfo.SupportsMultipleFrames*\n  parent: System.Windows.Media.Imaging.BitmapCodecInfo\n  isExternal: false\n  name: SupportsMultipleFrames\n  nameWithType: BitmapCodecInfo.SupportsMultipleFrames\n  fullName: BitmapCodecInfo.SupportsMultipleFrames\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Windows.Media.Imaging/BitmapCodecInfo.xml\n- uid: System.Windows.Media.Imaging.BitmapCodecInfo.Version*\n  parent: System.Windows.Media.Imaging.BitmapCodecInfo\n  isExternal: false\n  name: Version\n  nameWithType: BitmapCodecInfo.Version\n  fullName: BitmapCodecInfo.Version\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Windows.Media.Imaging/BitmapCodecInfo.xml\n- uid: System.Object.Equals(System.Object)\n  parent: System.Object\n  isExternal: false\n  name: Equals(Object)\n  nameWithType: Object.Equals(Object)\n  fullName: Object.Equals(Object)\n- uid: System.Object.Equals(System.Object,System.Object)\n  parent: System.Object\n  isExternal: false\n  name: Equals(Object, Object)\n  nameWithType: Object.Equals(Object, Object)\n  fullName: Object.Equals(Object, Object)\n- uid: System.Object.GetHashCode\n  parent: System.Object\n  isExternal: false\n  name: GetHashCode()\n  nameWithType: Object.GetHashCode()\n  fullName: Object.GetHashCode()\n- uid: System.Object.GetType\n  parent: System.Object\n  isExternal: false\n  name: GetType()\n  nameWithType: Object.GetType()\n  fullName: Object.GetType()\n- uid: System.Object.MemberwiseClone\n  parent: System.Object\n  isExternal: false\n  name: MemberwiseClone()\n  nameWithType: Object.MemberwiseClone()\n  fullName: Object.MemberwiseClone()\n- uid: System.Object.ReferenceEquals(System.Object,System.Object)\n  parent: System.Object\n  isExternal: false\n  name: ReferenceEquals(Object, Object)\n  nameWithType: Object.ReferenceEquals(Object, Object)\n  fullName: Object.ReferenceEquals(Object, Object)\n- uid: System.Object.ToString\n  parent: System.Object\n  isExternal: false\n  name: ToString()\n  nameWithType: Object.ToString()\n  fullName: Object.ToString()\n"}