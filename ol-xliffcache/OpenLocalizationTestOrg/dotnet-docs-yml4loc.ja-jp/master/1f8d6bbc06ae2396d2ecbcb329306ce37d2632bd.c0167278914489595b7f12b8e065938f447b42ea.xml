{"nodes":[{"content":"Verifies that the user has permission to access the URL requested. This class cannot be inherited.","nodes":[{"pos":[0,98],"content":"Verifies that the user has permission to access the URL requested. This class cannot be inherited.","nodes":[{"content":"Verifies that the user has permission to access the URL requested. This class cannot be inherited.","pos":[0,98],"nodes":[{"content":"Verifies that the user has permission to access the URL requested.","pos":[0,66]},{"content":"This class cannot be inherited.","pos":[67,98]}]}]}],"pos":[745,844],"yaml":true},{"content":"The <xref:System.Web.Security.UrlAuthorizationModule> determines whether the current user is permitted access to the requested URL, based on the user <xref:System.Security.Principal.IIdentity.Name%2A> or the list of roles that a user is a member of. For information about how the user name is determined, see [ASP.NET Authentication](http://msdn.microsoft.com/library/fc10b0ef-4ce4-4a7f-9174-886325221ee1). For information about how to manage user roles, see [Managing Authorization Using Roles](http://msdn.microsoft.com/library/01954ce4-39a2-487f-8153-a69f6f6f3195).  \n  \n Authorization for a user or a role is managed using the  configuration element. You can allow or deny a user or a role using the `allow` or `deny` subelements, respectively. The `allow` and `deny` subelements are interpreted in the order they appear in the configuration. Once an element specifies that access is allowed or denied, the <xref:System.Web.Security.UrlAuthorizationModule> completes its authorization check. For example, the following  section from a Web.config file requires users to log on (by denying anonymous users), and then allows only users in the Administrators role to have access. Users not in the Administrators role are denied.  \n  \n```  \n<authorization>  \n  <deny users=\"?\" />  \n  <allow roles=\"Administrators\" />  \n  <deny users=\"*\" />  \n</authorization>  \n```  \n  \n A user or role must be specifically denied to refuse the user or role permission to a URL. That is, if the previous example had not specified the `<deny users=\"*\" />` element, then all authenticated users would have been allowed access to the requested URL, regardless of what role they were a member of.","nodes":[{"pos":[0,568],"content":"The <xref:System.Web.Security.UrlAuthorizationModule> determines whether the current user is permitted access to the requested URL, based on the user <xref:System.Security.Principal.IIdentity.Name%2A> or the list of roles that a user is a member of. For information about how the user name is determined, see [ASP.NET Authentication](http://msdn.microsoft.com/library/fc10b0ef-4ce4-4a7f-9174-886325221ee1). For information about how to manage user roles, see [Managing Authorization Using Roles](http://msdn.microsoft.com/library/01954ce4-39a2-487f-8153-a69f6f6f3195).","nodes":[{"content":"The <ph id=\"ph1\">&lt;xref:System.Web.Security.UrlAuthorizationModule&gt;</ph> determines whether the current user is permitted access to the requested URL, based on the user <ph id=\"ph2\">&lt;xref:System.Security.Principal.IIdentity.Name%2A&gt;</ph> or the list of roles that a user is a member of.","pos":[0,249],"source":"The <xref:System.Web.Security.UrlAuthorizationModule> determines whether the current user is permitted access to the requested URL, based on the user <xref:System.Security.Principal.IIdentity.Name%2A> or the list of roles that a user is a member of."},{"content":"For information about how the user name is determined, see <bpt id=\"p1\">[</bpt>ASP.NET Authentication<ept id=\"p1\">](http://msdn.microsoft.com/library/fc10b0ef-4ce4-4a7f-9174-886325221ee1)</ept>.","pos":[250,406],"source":" For information about how the user name is determined, see [ASP.NET Authentication](http://msdn.microsoft.com/library/fc10b0ef-4ce4-4a7f-9174-886325221ee1)."},{"content":"For information about how to manage user roles, see <bpt id=\"p1\">[</bpt>Managing Authorization Using Roles<ept id=\"p1\">](http://msdn.microsoft.com/library/01954ce4-39a2-487f-8153-a69f6f6f3195)</ept>.","pos":[407,568],"source":" For information about how to manage user roles, see [Managing Authorization Using Roles](http://msdn.microsoft.com/library/01954ce4-39a2-487f-8153-a69f6f6f3195)."}]},{"pos":[575,1228],"content":"Authorization for a user or a role is managed using the  configuration element. You can allow or deny a user or a role using the `allow` or `deny` subelements, respectively. The `allow` and `deny` subelements are interpreted in the order they appear in the configuration. Once an element specifies that access is allowed or denied, the <xref:System.Web.Security.UrlAuthorizationModule> completes its authorization check. For example, the following  section from a Web.config file requires users to log on (by denying anonymous users), and then allows only users in the Administrators role to have access. Users not in the Administrators role are denied.","nodes":[{"content":"Authorization for a user or a role is managed using the  configuration element.","pos":[0,79]},{"content":"You can allow or deny a user or a role using the <ph id=\"ph1\">`allow`</ph> or <ph id=\"ph2\">`deny`</ph> subelements, respectively.","pos":[80,173],"source":" You can allow or deny a user or a role using the `allow` or `deny` subelements, respectively."},{"content":"The <ph id=\"ph1\">`allow`</ph> and <ph id=\"ph2\">`deny`</ph> subelements are interpreted in the order they appear in the configuration.","pos":[174,271],"source":" The `allow` and `deny` subelements are interpreted in the order they appear in the configuration."},{"content":"Once an element specifies that access is allowed or denied, the <ph id=\"ph1\">&lt;xref:System.Web.Security.UrlAuthorizationModule&gt;</ph> completes its authorization check.","pos":[272,420],"source":" Once an element specifies that access is allowed or denied, the <xref:System.Web.Security.UrlAuthorizationModule> completes its authorization check."},{"content":"For example, the following  section from a Web.config file requires users to log on (by denying anonymous users), and then allows only users in the Administrators role to have access.","pos":[421,604]},{"content":"Users not in the Administrators role are denied.","pos":[605,653]}]},{"pos":[1370,1674],"content":"A user or role must be specifically denied to refuse the user or role permission to a URL. That is, if the previous example had not specified the `<deny users=\"*\" />` element, then all authenticated users would have been allowed access to the requested URL, regardless of what role they were a member of.","nodes":[{"content":"A user or role must be specifically denied to refuse the user or role permission to a URL.","pos":[0,90]},{"content":"That is, if the previous example had not specified the <ph id=\"ph1\">`&lt;deny users=\"*\" /&gt;`</ph> element, then all authenticated users would have been allowed access to the requested URL, regardless of what role they were a member of.","pos":[91,304],"source":" That is, if the previous example had not specified the `<deny users=\"*\" />` element, then all authenticated users would have been allowed access to the requested URL, regardless of what role they were a member of."}]}],"pos":[855,2552],"yaml":true,"extradata":"MT"},{"content":"Creates an instance of the <xref href=\"System.Web.Security.UrlAuthorizationModule\"></xref> class.","nodes":[{"pos":[0,97],"content":"Creates an instance of the <ph id=\"ph1\">&lt;xref href=\"System.Web.Security.UrlAuthorizationModule\"&gt;&lt;/xref&gt;</ph> class.","source":"Creates an instance of the <xref href=\"System.Web.Security.UrlAuthorizationModule\"></xref> class."}],"pos":[4330,4428],"yaml":true},{"content":"This constructor is not intended to be called from application code.  \n  \n ASP.NET calls this constructor to create an instance of the <xref:System.Web.Security.UrlAuthorizationModule> class. After calling the constructor, it calls the <xref:System.Web.Security.UrlAuthorizationModule.Init%2A> method to initialize the new <xref:System.Web.Security.UrlAuthorizationModule> object.","nodes":[{"pos":[0,68],"content":"This constructor is not intended to be called from application code.","nodes":[{"content":"This constructor is not intended to be called from application code.","pos":[0,68]}]},{"pos":[75,380],"content":"ASP.NET calls this constructor to create an instance of the <xref:System.Web.Security.UrlAuthorizationModule> class. After calling the constructor, it calls the <xref:System.Web.Security.UrlAuthorizationModule.Init%2A> method to initialize the new <xref:System.Web.Security.UrlAuthorizationModule> object.","nodes":[{"content":"ASP.NET calls this constructor to create an instance of the <xref:System.Web.Security.UrlAuthorizationModule> class. After calling the constructor, it calls the <xref:System.Web.Security.UrlAuthorizationModule.Init%2A> method to initialize the new <xref:System.Web.Security.UrlAuthorizationModule> object.","pos":[0,305],"nodes":[{"content":"ASP.NET calls this constructor to create an instance of the <ph id=\"ph1\">&lt;xref:System.Web.Security.UrlAuthorizationModule&gt;</ph> class.","pos":[0,116],"source":"ASP.NET calls this constructor to create an instance of the <xref:System.Web.Security.UrlAuthorizationModule> class."},{"content":"After calling the constructor, it calls the <ph id=\"ph1\">&lt;xref:System.Web.Security.UrlAuthorizationModule.Init%2A&gt;</ph> method to initialize the new <ph id=\"ph2\">&lt;xref:System.Web.Security.UrlAuthorizationModule&gt;</ph> object.","pos":[117,305],"source":" After calling the constructor, it calls the <xref:System.Web.Security.UrlAuthorizationModule.Init%2A> method to initialize the new <xref:System.Web.Security.UrlAuthorizationModule> object."}]}]}],"pos":[4439,4824],"yaml":true,"extradata":"MT"},{"content":"Determines whether the user has access to the requested file.","nodes":[{"pos":[0,61],"content":"Determines whether the user has access to the requested file.","nodes":[{"content":"Determines whether the user has access to the requested file.","pos":[0,61]}]}],"pos":[6324,6386],"yaml":true},{"content":"The <xref:System.Web.Security.UrlAuthorizationModule.CheckUrlAccessForPrincipal%2A> method checks to see whether the current user is granted access to the requested file in the Web.config file for the application.  \n  \n If the HTTP verb used to make the request is `GET`, `POST`, or `HEAD`, the <xref:System.Web.Security.UrlAuthorizationModule.CheckUrlAccessForPrincipal%2A> method checks for read access to the file. If any other verb is used, the <xref:System.Web.Security.UrlAuthorizationModule.CheckUrlAccessForPrincipal%2A> checks for read/write access to the file.  \n  \n For more information and an example Web.config file, see the <xref:System.Web.Security.UrlAuthorizationModule> class documentation.","nodes":[{"pos":[0,213],"content":"The <xref:System.Web.Security.UrlAuthorizationModule.CheckUrlAccessForPrincipal%2A> method checks to see whether the current user is granted access to the requested file in the Web.config file for the application.","nodes":[{"content":"The <ph id=\"ph1\">&lt;xref:System.Web.Security.UrlAuthorizationModule.CheckUrlAccessForPrincipal%2A&gt;</ph> method checks to see whether the current user is granted access to the requested file in the Web.config file for the application.","pos":[0,213],"source":"The <xref:System.Web.Security.UrlAuthorizationModule.CheckUrlAccessForPrincipal%2A> method checks to see whether the current user is granted access to the requested file in the Web.config file for the application."}]},{"pos":[220,570],"content":"If the HTTP verb used to make the request is `GET`, `POST`, or `HEAD`, the <xref:System.Web.Security.UrlAuthorizationModule.CheckUrlAccessForPrincipal%2A> method checks for read access to the file. If any other verb is used, the <xref:System.Web.Security.UrlAuthorizationModule.CheckUrlAccessForPrincipal%2A> checks for read/write access to the file.","nodes":[{"content":"If the HTTP verb used to make the request is <ph id=\"ph1\">`GET`</ph>, <ph id=\"ph2\">`POST`</ph>, or <ph id=\"ph3\">`HEAD`</ph>, the <ph id=\"ph4\">&lt;xref:System.Web.Security.UrlAuthorizationModule.CheckUrlAccessForPrincipal%2A&gt;</ph> method checks for read access to the file.","pos":[0,197],"source":"If the HTTP verb used to make the request is `GET`, `POST`, or `HEAD`, the <xref:System.Web.Security.UrlAuthorizationModule.CheckUrlAccessForPrincipal%2A> method checks for read access to the file."},{"content":"If any other verb is used, the <ph id=\"ph1\">&lt;xref:System.Web.Security.UrlAuthorizationModule.CheckUrlAccessForPrincipal%2A&gt;</ph> checks for read/write access to the file.","pos":[198,350],"source":" If any other verb is used, the <xref:System.Web.Security.UrlAuthorizationModule.CheckUrlAccessForPrincipal%2A> checks for read/write access to the file."}]},{"pos":[577,708],"content":"For more information and an example Web.config file, see the <xref:System.Web.Security.UrlAuthorizationModule> class documentation.","nodes":[{"content":"For more information and an example Web.config file, see the <ph id=\"ph1\">&lt;xref:System.Web.Security.UrlAuthorizationModule&gt;</ph> class documentation.","pos":[0,131],"source":"For more information and an example Web.config file, see the <xref:System.Web.Security.UrlAuthorizationModule> class documentation."}]}],"pos":[6397,7112],"yaml":true,"extradata":"MT"},{"content":"The virtual path to the file.","nodes":[{"pos":[0,29],"content":"The virtual path to the file.","nodes":[{"content":"The virtual path to the file.","pos":[0,29]}]}],"pos":[7342,7372],"yaml":true},{"content":"An <xref href=\"System.Security.Principal.IPrincipal\"></xref> object representing the current user.","nodes":[{"pos":[0,98],"content":"An <ph id=\"ph1\">&lt;xref href=\"System.Security.Principal.IPrincipal\"&gt;&lt;/xref&gt;</ph> object representing the current user.","source":"An <xref href=\"System.Security.Principal.IPrincipal\"></xref> object representing the current user."}],"pos":[7455,7554],"yaml":true},{"content":"The HTTP verb used to make the request.","nodes":[{"pos":[0,39],"content":"The HTTP verb used to make the request.","nodes":[{"content":"The HTTP verb used to make the request.","pos":[0,39]}]}],"pos":[7614,7654],"yaml":true},{"content":"`true` if the current user can access the file; otherwise, `false`.","nodes":[{"pos":[0,67],"content":"<ph id=\"ph1\">`true`</ph> if the current user can access the file; otherwise, <ph id=\"ph2\">`false`</ph>.","source":"`true` if the current user can access the file; otherwise, `false`."}],"pos":[7712,7782],"yaml":true},{"content":"<code>virtualPath</code> is `null`.  \n  \n \\- or -  \n  \n <code>user</code> is `null`.  \n  \n \\- or -  \n  \n <code>verb</code> is `null`.","nodes":[{"pos":[0,35],"content":"<ph id=\"ph1\">&lt;code&gt;virtualPath&lt;/code&gt;</ph> is <ph id=\"ph2\">`null`</ph>.","source":"<code>virtualPath</code> is `null`."},{"pos":[42,49],"content":"\\- or -","nodes":[{"content":"<ph id=\"ph1\">\\-</ph> or -","pos":[0,7],"source":"\\- or -"}]},{"pos":[56,84],"content":"<ph id=\"ph1\">&lt;code&gt;user&lt;/code&gt;</ph> is <ph id=\"ph2\">`null`</ph>.","source":"<code>user</code> is `null`."},{"pos":[91,98],"content":"\\- or -","nodes":[{"content":"<ph id=\"ph1\">\\-</ph> or -","pos":[0,7],"source":"\\- or -"}]},{"pos":[105,133],"content":"<ph id=\"ph1\">&lt;code&gt;verb&lt;/code&gt;</ph> is <ph id=\"ph2\">`null`</ph>.","source":"<code>verb</code> is `null`."}],"pos":[7981,8127],"yaml":true},{"content":"<code>virtualPath</code> is outside of the application root path.","nodes":[{"pos":[0,65],"content":"<ph id=\"ph1\">&lt;code&gt;virtualPath&lt;/code&gt;</ph> is outside of the application root path.","source":"<code>virtualPath</code> is outside of the application root path."}],"pos":[8221,8287],"yaml":true},{"content":"Releases all resources, other than memory, used by the <xref href=\"System.Web.Security.UrlAuthorizationModule\"></xref>.","nodes":[{"pos":[0,119],"content":"Releases all resources, other than memory, used by the <ph id=\"ph1\">&lt;xref href=\"System.Web.Security.UrlAuthorizationModule\"&gt;&lt;/xref&gt;</ph>.","source":"Releases all resources, other than memory, used by the <xref href=\"System.Web.Security.UrlAuthorizationModule\"></xref>."}],"pos":[9242,9362],"yaml":true},{"content":"This method is not intended to be called from application code.","nodes":[{"pos":[0,63],"content":"This method is not intended to be called from application code.","nodes":[{"content":"This method is not intended to be called from application code.","pos":[0,63]}]}],"pos":[9373,9437],"yaml":true,"extradata":"MT"},{"content":"Initializes the <xref href=\"System.Web.Security.UrlAuthorizationModule\"></xref> object.","nodes":[{"pos":[0,87],"content":"Initializes the <ph id=\"ph1\">&lt;xref href=\"System.Web.Security.UrlAuthorizationModule\"&gt;&lt;/xref&gt;</ph> object.","source":"Initializes the <xref href=\"System.Web.Security.UrlAuthorizationModule\"></xref> object."}],"pos":[10650,10738],"yaml":true},{"content":"This method is not intended to be called from application code.  \n  \n The <xref:System.Web.Security.UrlAuthorizationModule.Init%2A> method ensures that the <xref:System.Web.Security.UrlAuthorizationModule> is included in the processing of the <xref:System.Web.HttpApplication.AuthorizeRequest> event.","nodes":[{"pos":[0,63],"content":"This method is not intended to be called from application code.","nodes":[{"content":"This method is not intended to be called from application code.","pos":[0,63]}]},{"pos":[70,300],"content":"The <xref:System.Web.Security.UrlAuthorizationModule.Init%2A> method ensures that the <xref:System.Web.Security.UrlAuthorizationModule> is included in the processing of the <xref:System.Web.HttpApplication.AuthorizeRequest> event.","nodes":[{"content":"The <ph id=\"ph1\">&lt;xref:System.Web.Security.UrlAuthorizationModule.Init%2A&gt;</ph> method ensures that the <ph id=\"ph2\">&lt;xref:System.Web.Security.UrlAuthorizationModule&gt;</ph> is included in the processing of the <ph id=\"ph3\">&lt;xref:System.Web.HttpApplication.AuthorizeRequest&gt;</ph> event.","pos":[0,230],"source":"The <xref:System.Web.Security.UrlAuthorizationModule.Init%2A> method ensures that the <xref:System.Web.Security.UrlAuthorizationModule> is included in the processing of the <xref:System.Web.HttpApplication.AuthorizeRequest> event."}]}],"pos":[10749,11054],"yaml":true,"extradata":"MT"},{"content":"The current <xref href=\"System.Web.HttpApplication\"></xref> instance.","nodes":[{"pos":[0,69],"content":"The current <ph id=\"ph1\">&lt;xref href=\"System.Web.HttpApplication\"&gt;&lt;/xref&gt;</ph> instance.","source":"The current <xref href=\"System.Web.HttpApplication\"></xref> instance."}],"pos":[11216,11286],"yaml":true}],"content":"### YamlMime:ManagedReference\nitems:\n- uid: System.Web.Security.UrlAuthorizationModule\n  commentId: T:System.Web.Security.UrlAuthorizationModule\n  id: UrlAuthorizationModule\n  children:\n  - System.Web.Security.UrlAuthorizationModule.#ctor\n  - System.Web.Security.UrlAuthorizationModule.CheckUrlAccessForPrincipal(System.String,System.Security.Principal.IPrincipal,System.String)\n  - System.Web.Security.UrlAuthorizationModule.Dispose\n  - System.Web.Security.UrlAuthorizationModule.Init(System.Web.HttpApplication)\n  langs:\n  - csharp\n  name: UrlAuthorizationModule\n  nameWithType: UrlAuthorizationModule\n  fullName: System.Web.Security.UrlAuthorizationModule\n  type: Class\n  assemblies:\n  - System.Web\n  namespace: System.Web.Security\n  summary: Verifies that the user has permission to access the URL requested. This class cannot be inherited.\n  remarks: \"The <xref:System.Web.Security.UrlAuthorizationModule> determines whether the current user is permitted access to the requested URL, based on the user <xref:System.Security.Principal.IIdentity.Name%2A> or the list of roles that a user is a member of. For information about how the user name is determined, see [ASP.NET Authentication](http://msdn.microsoft.com/library/fc10b0ef-4ce4-4a7f-9174-886325221ee1). For information about how to manage user roles, see [Managing Authorization Using Roles](http://msdn.microsoft.com/library/01954ce4-39a2-487f-8153-a69f6f6f3195).  \\n  \\n Authorization for a user or a role is managed using the  configuration element. You can allow or deny a user or a role using the `allow` or `deny` subelements, respectively. The `allow` and `deny` subelements are interpreted in the order they appear in the configuration. Once an element specifies that access is allowed or denied, the <xref:System.Web.Security.UrlAuthorizationModule> completes its authorization check. For example, the following  section from a Web.config file requires users to log on (by denying anonymous users), and then allows only users in the Administrators role to have access. Users not in the Administrators role are denied.  \\n  \\n```  \\n<authorization>  \\n  <deny users=\\\"?\\\" />  \\n  <allow roles=\\\"Administrators\\\" />  \\n  <deny users=\\\"*\\\" />  \\n</authorization>  \\n```  \\n  \\n A user or role must be specifically denied to refuse the user or role permission to a URL. That is, if the previous example had not specified the `<deny users=\\\"*\\\" />` element, then all authenticated users would have been allowed access to the requested URL, regardless of what role they were a member of.\"\n  example:\n  - \"The following code example grants access to Kim and members of the Admins role, while denying it to John and all anonymous users.  \\n  \\n```  \\n<authorization>  \\n  <allow users=\\\"Kim\\\"/>  \\n  <allow roles=\\\"Admins\\\"/>  \\n  <deny users=\\\"John\\\"/>  \\n  <deny users=\\\"?\\\"/>  \\n</authorization>  \\n```\"\n  syntax:\n    content: 'public sealed class UrlAuthorizationModule : System.Web.IHttpModule'\n  inheritance:\n  - System.Object\n  implements:\n  - System.Web.IHttpModule\n  inheritedMembers:\n  - System.Object.Equals(System.Object)\n  - System.Object.Equals(System.Object,System.Object)\n  - System.Object.GetHashCode\n  - System.Object.GetType\n  - System.Object.MemberwiseClone\n  - System.Object.ReferenceEquals(System.Object,System.Object)\n  - System.Object.ToString\n  version:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Web.Security/UrlAuthorizationModule.xml\n  ms.technology:\n  - dotnet-webforms\n  author: tdykstra\n  ms.author: tdykstra\n  manager: wpickett\n- uid: System.Web.Security.UrlAuthorizationModule.#ctor\n  commentId: M:System.Web.Security.UrlAuthorizationModule.#ctor\n  id: '#ctor'\n  parent: System.Web.Security.UrlAuthorizationModule\n  langs:\n  - csharp\n  name: UrlAuthorizationModule()\n  nameWithType: UrlAuthorizationModule.UrlAuthorizationModule()\n  fullName: UrlAuthorizationModule.UrlAuthorizationModule()\n  type: Constructor\n  assemblies:\n  - System.Web\n  namespace: System.Web.Security\n  summary: Creates an instance of the <xref href=\"System.Web.Security.UrlAuthorizationModule\"></xref> class.\n  remarks: \"This constructor is not intended to be called from application code.  \\n  \\n ASP.NET calls this constructor to create an instance of the <xref:System.Web.Security.UrlAuthorizationModule> class. After calling the constructor, it calls the <xref:System.Web.Security.UrlAuthorizationModule.Init%2A> method to initialize the new <xref:System.Web.Security.UrlAuthorizationModule> object.\"\n  syntax:\n    content: public UrlAuthorizationModule ();\n    parameters: []\n  overload: System.Web.Security.UrlAuthorizationModule.#ctor*\n  exceptions: []\n  version:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Web.Security/UrlAuthorizationModule.xml\n  ms.technology:\n  - dotnet-webforms\n  author: tdykstra\n  ms.author: tdykstra\n  manager: wpickett\n- uid: System.Web.Security.UrlAuthorizationModule.CheckUrlAccessForPrincipal(System.String,System.Security.Principal.IPrincipal,System.String)\n  commentId: M:System.Web.Security.UrlAuthorizationModule.CheckUrlAccessForPrincipal(System.String,System.Security.Principal.IPrincipal,System.String)\n  id: CheckUrlAccessForPrincipal(System.String,System.Security.Principal.IPrincipal,System.String)\n  parent: System.Web.Security.UrlAuthorizationModule\n  langs:\n  - csharp\n  name: CheckUrlAccessForPrincipal(String, IPrincipal, String)\n  nameWithType: UrlAuthorizationModule.CheckUrlAccessForPrincipal(String, IPrincipal, String)\n  fullName: UrlAuthorizationModule.CheckUrlAccessForPrincipal(String, IPrincipal, String)\n  type: Method\n  assemblies:\n  - System.Web\n  namespace: System.Web.Security\n  summary: Determines whether the user has access to the requested file.\n  remarks: \"The <xref:System.Web.Security.UrlAuthorizationModule.CheckUrlAccessForPrincipal%2A> method checks to see whether the current user is granted access to the requested file in the Web.config file for the application.  \\n  \\n If the HTTP verb used to make the request is `GET`, `POST`, or `HEAD`, the <xref:System.Web.Security.UrlAuthorizationModule.CheckUrlAccessForPrincipal%2A> method checks for read access to the file. If any other verb is used, the <xref:System.Web.Security.UrlAuthorizationModule.CheckUrlAccessForPrincipal%2A> checks for read/write access to the file.  \\n  \\n For more information and an example Web.config file, see the <xref:System.Web.Security.UrlAuthorizationModule> class documentation.\"\n  syntax:\n    content: public static bool CheckUrlAccessForPrincipal (string virtualPath, System.Security.Principal.IPrincipal user, string verb);\n    parameters:\n    - id: virtualPath\n      type: System.String\n      description: The virtual path to the file.\n    - id: user\n      type: System.Security.Principal.IPrincipal\n      description: An <xref href=\"System.Security.Principal.IPrincipal\"></xref> object representing the current user.\n    - id: verb\n      type: System.String\n      description: The HTTP verb used to make the request.\n    return:\n      type: System.Boolean\n      description: '`true` if the current user can access the file; otherwise, `false`.'\n  overload: System.Web.Security.UrlAuthorizationModule.CheckUrlAccessForPrincipal*\n  exceptions:\n  - type: System.ArgumentNullException\n    commentId: T:System.ArgumentNullException\n    description: \"<code>virtualPath</code> is `null`.  \\n  \\n \\\\- or -  \\n  \\n <code>user</code> is `null`.  \\n  \\n \\\\- or -  \\n  \\n <code>verb</code> is `null`.\"\n  - type: System.ArgumentException\n    commentId: T:System.ArgumentException\n    description: <code>virtualPath</code> is outside of the application root path.\n  version:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Web.Security/UrlAuthorizationModule.xml\n  ms.technology:\n  - dotnet-webforms\n  author: tdykstra\n  ms.author: tdykstra\n  manager: wpickett\n- uid: System.Web.Security.UrlAuthorizationModule.Dispose\n  commentId: M:System.Web.Security.UrlAuthorizationModule.Dispose\n  id: Dispose\n  parent: System.Web.Security.UrlAuthorizationModule\n  langs:\n  - csharp\n  name: Dispose()\n  nameWithType: UrlAuthorizationModule.Dispose()\n  fullName: UrlAuthorizationModule.Dispose()\n  type: Method\n  assemblies:\n  - System.Web\n  namespace: System.Web.Security\n  summary: Releases all resources, other than memory, used by the <xref href=\"System.Web.Security.UrlAuthorizationModule\"></xref>.\n  remarks: This method is not intended to be called from application code.\n  syntax:\n    content: public void Dispose ();\n    parameters: []\n  overload: System.Web.Security.UrlAuthorizationModule.Dispose*\n  exceptions: []\n  version:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Web.Security/UrlAuthorizationModule.xml\n  ms.technology:\n  - dotnet-webforms\n  author: tdykstra\n  ms.author: tdykstra\n  manager: wpickett\n- uid: System.Web.Security.UrlAuthorizationModule.Init(System.Web.HttpApplication)\n  commentId: M:System.Web.Security.UrlAuthorizationModule.Init(System.Web.HttpApplication)\n  id: Init(System.Web.HttpApplication)\n  parent: System.Web.Security.UrlAuthorizationModule\n  langs:\n  - csharp\n  name: Init(HttpApplication)\n  nameWithType: UrlAuthorizationModule.Init(HttpApplication)\n  fullName: UrlAuthorizationModule.Init(HttpApplication)\n  type: Method\n  assemblies:\n  - System.Web\n  namespace: System.Web.Security\n  summary: Initializes the <xref href=\"System.Web.Security.UrlAuthorizationModule\"></xref> object.\n  remarks: \"This method is not intended to be called from application code.  \\n  \\n The <xref:System.Web.Security.UrlAuthorizationModule.Init%2A> method ensures that the <xref:System.Web.Security.UrlAuthorizationModule> is included in the processing of the <xref:System.Web.HttpApplication.AuthorizeRequest> event.\"\n  syntax:\n    content: public void Init (System.Web.HttpApplication app);\n    parameters:\n    - id: app\n      type: System.Web.HttpApplication\n      description: The current <xref href=\"System.Web.HttpApplication\"></xref> instance.\n  overload: System.Web.Security.UrlAuthorizationModule.Init*\n  exceptions: []\n  version:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Web.Security/UrlAuthorizationModule.xml\n  ms.technology:\n  - dotnet-webforms\n  author: tdykstra\n  ms.author: tdykstra\n  manager: wpickett\nreferences:\n- uid: System.Object\n  parent: System\n  isExternal: false\n  name: Object\n  nameWithType: Object\n  fullName: System.Object\n- uid: System.ArgumentNullException\n  parent: System\n  isExternal: false\n  name: ArgumentNullException\n  nameWithType: ArgumentNullException\n  fullName: System.ArgumentNullException\n- uid: System.ArgumentException\n  parent: System\n  isExternal: false\n  name: ArgumentException\n  nameWithType: ArgumentException\n  fullName: System.ArgumentException\n- uid: System.Web.Security.UrlAuthorizationModule.#ctor\n  parent: System.Web.Security.UrlAuthorizationModule\n  isExternal: false\n  name: UrlAuthorizationModule()\n  nameWithType: UrlAuthorizationModule.UrlAuthorizationModule()\n  fullName: UrlAuthorizationModule.UrlAuthorizationModule()\n- uid: System.Web.Security.UrlAuthorizationModule.CheckUrlAccessForPrincipal(System.String,System.Security.Principal.IPrincipal,System.String)\n  parent: System.Web.Security.UrlAuthorizationModule\n  isExternal: false\n  name: CheckUrlAccessForPrincipal(String, IPrincipal, String)\n  nameWithType: UrlAuthorizationModule.CheckUrlAccessForPrincipal(String, IPrincipal, String)\n  fullName: UrlAuthorizationModule.CheckUrlAccessForPrincipal(String, IPrincipal, String)\n- uid: System.Boolean\n  parent: System\n  isExternal: false\n  name: Boolean\n  nameWithType: Boolean\n  fullName: System.Boolean\n- uid: System.String\n  parent: System\n  isExternal: false\n  name: String\n  nameWithType: String\n  fullName: System.String\n- uid: System.Security.Principal.IPrincipal\n  parent: System.Security.Principal\n  isExternal: false\n  name: IPrincipal\n  nameWithType: IPrincipal\n  fullName: System.Security.Principal.IPrincipal\n- uid: System.Web.Security.UrlAuthorizationModule.Dispose\n  parent: System.Web.Security.UrlAuthorizationModule\n  isExternal: false\n  name: Dispose()\n  nameWithType: UrlAuthorizationModule.Dispose()\n  fullName: UrlAuthorizationModule.Dispose()\n- uid: System.Web.Security.UrlAuthorizationModule.Init(System.Web.HttpApplication)\n  parent: System.Web.Security.UrlAuthorizationModule\n  isExternal: false\n  name: Init(HttpApplication)\n  nameWithType: UrlAuthorizationModule.Init(HttpApplication)\n  fullName: UrlAuthorizationModule.Init(HttpApplication)\n- uid: System.Web.HttpApplication\n  parent: System.Web\n  isExternal: false\n  name: HttpApplication\n  nameWithType: HttpApplication\n  fullName: System.Web.HttpApplication\n- uid: System.Web.Security.UrlAuthorizationModule.#ctor*\n  parent: System.Web.Security.UrlAuthorizationModule\n  isExternal: false\n  name: UrlAuthorizationModule\n  nameWithType: UrlAuthorizationModule.UrlAuthorizationModule\n  fullName: UrlAuthorizationModule.UrlAuthorizationModule\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Web.Security/UrlAuthorizationModule.xml\n- uid: System.Web.Security.UrlAuthorizationModule.CheckUrlAccessForPrincipal*\n  parent: System.Web.Security.UrlAuthorizationModule\n  isExternal: false\n  name: CheckUrlAccessForPrincipal\n  nameWithType: UrlAuthorizationModule.CheckUrlAccessForPrincipal\n  fullName: UrlAuthorizationModule.CheckUrlAccessForPrincipal\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Web.Security/UrlAuthorizationModule.xml\n- uid: System.Web.Security.UrlAuthorizationModule.Dispose*\n  parent: System.Web.Security.UrlAuthorizationModule\n  isExternal: false\n  name: Dispose\n  nameWithType: UrlAuthorizationModule.Dispose\n  fullName: UrlAuthorizationModule.Dispose\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Web.Security/UrlAuthorizationModule.xml\n- uid: System.Web.Security.UrlAuthorizationModule.Init*\n  parent: System.Web.Security.UrlAuthorizationModule\n  isExternal: false\n  name: Init\n  nameWithType: UrlAuthorizationModule.Init\n  fullName: UrlAuthorizationModule.Init\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Web.Security/UrlAuthorizationModule.xml\n- uid: System.Object.Equals(System.Object)\n  parent: System.Object\n  isExternal: false\n  name: Equals(Object)\n  nameWithType: Object.Equals(Object)\n  fullName: Object.Equals(Object)\n- uid: System.Object.Equals(System.Object,System.Object)\n  parent: System.Object\n  isExternal: false\n  name: Equals(Object, Object)\n  nameWithType: Object.Equals(Object, Object)\n  fullName: Object.Equals(Object, Object)\n- uid: System.Object.GetHashCode\n  parent: System.Object\n  isExternal: false\n  name: GetHashCode()\n  nameWithType: Object.GetHashCode()\n  fullName: Object.GetHashCode()\n- uid: System.Object.GetType\n  parent: System.Object\n  isExternal: false\n  name: GetType()\n  nameWithType: Object.GetType()\n  fullName: Object.GetType()\n- uid: System.Object.MemberwiseClone\n  parent: System.Object\n  isExternal: false\n  name: MemberwiseClone()\n  nameWithType: Object.MemberwiseClone()\n  fullName: Object.MemberwiseClone()\n- uid: System.Object.ReferenceEquals(System.Object,System.Object)\n  parent: System.Object\n  isExternal: false\n  name: ReferenceEquals(Object, Object)\n  nameWithType: Object.ReferenceEquals(Object, Object)\n  fullName: Object.ReferenceEquals(Object, Object)\n- uid: System.Object.ToString\n  parent: System.Object\n  isExternal: false\n  name: ToString()\n  nameWithType: Object.ToString()\n  fullName: Object.ToString()\n- uid: System.Web.IHttpModule\n  parent: System.Web\n  isExternal: false\n  name: IHttpModule\n  nameWithType: IHttpModule\n  fullName: System.Web.IHttpModule\n"}