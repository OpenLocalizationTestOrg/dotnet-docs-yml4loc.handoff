### YamlMime:ManagedReference
items:
- uid: System.Configuration.SettingsPropertyValue
  commentId: T:System.Configuration.SettingsPropertyValue
  id: SettingsPropertyValue
  children:
  - System.Configuration.SettingsPropertyValue.#ctor(System.Configuration.SettingsProperty)
  - System.Configuration.SettingsPropertyValue.Deserialized
  - System.Configuration.SettingsPropertyValue.IsDirty
  - System.Configuration.SettingsPropertyValue.Name
  - System.Configuration.SettingsPropertyValue.Property
  - System.Configuration.SettingsPropertyValue.PropertyValue
  - System.Configuration.SettingsPropertyValue.SerializedValue
  - System.Configuration.SettingsPropertyValue.UsingDefaultValue
  langs:
  - csharp
  name: SettingsPropertyValue
  nameWithType: SettingsPropertyValue
  fullName: System.Configuration.SettingsPropertyValue
  type: Class
  assemblies:
  - System
  - System.Configuration.ConfigurationManager
  namespace: System.Configuration
  summary: Contains the value of a settings property that can be loaded and stored by an instance of <xref href="System.Configuration.SettingsBase"></xref>.
  remarks: A class representation of the actual piece of profile data. A <xref:System.Configuration.SettingsProperty> instance describes a value stored within an instance of a <xref:System.Configuration.SettingsPropertyValue> object.
  syntax:
    content: public class SettingsPropertyValue
  inheritance:
  - System.Object
  implements: []
  inheritedMembers:
  - System.Object.Equals(System.Object)
  - System.Object.Equals(System.Object,System.Object)
  - System.Object.GetHashCode
  - System.Object.GetType
  - System.Object.MemberwiseClone
  - System.Object.ReferenceEquals(System.Object,System.Object)
  - System.Object.ToString
  version:
  - netcore-2.0
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  - xamarinmac-3.0
  monikers:
  - netcore-2.0
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  - xamarinmac-3.0
  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Configuration/SettingsPropertyValue.xml
  ms.technology:
  - dotnet-standard
  ms.author: riande
  manager: wpickett
- uid: System.Configuration.SettingsPropertyValue.#ctor(System.Configuration.SettingsProperty)
  commentId: M:System.Configuration.SettingsPropertyValue.#ctor(System.Configuration.SettingsProperty)
  id: '#ctor(System.Configuration.SettingsProperty)'
  parent: System.Configuration.SettingsPropertyValue
  langs:
  - csharp
  name: SettingsPropertyValue(SettingsProperty)
  nameWithType: SettingsPropertyValue.SettingsPropertyValue(SettingsProperty)
  fullName: SettingsPropertyValue.SettingsPropertyValue(SettingsProperty)
  type: Constructor
  assemblies:
  - System
  - System.Configuration.ConfigurationManager
  namespace: System.Configuration
  summary: Initializes a new instance of the <xref href="System.Configuration.SettingsPropertyValue"></xref> class, based on supplied parameters.
  remarks: "> [!IMPORTANT]\n>  Calling this method with untrusted data is a security risk. Call this method only with trusted data. For more information, see [Untrusted Data Security Risks](http://go.microsoft.com/fwlink/?LinkId=330378).  \n  \n The <xref:System.Configuration.SettingsProperty> object describes information about the value stored by the <xref:System.Configuration.SettingsPropertyValue> object."
  syntax:
    content: public SettingsPropertyValue (System.Configuration.SettingsProperty property);
    parameters:
    - id: property
      type: System.Configuration.SettingsProperty
      description: Specifies a <xref href="System.Configuration.SettingsProperty"></xref> object.
  overload: System.Configuration.SettingsPropertyValue.#ctor*
  exceptions: []
  version:
  - netcore-2.0
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  - xamarinmac-3.0
  monikers:
  - netcore-2.0
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  - xamarinmac-3.0
  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Configuration/SettingsPropertyValue.xml
  ms.technology:
  - dotnet-webforms
  ms.author: riande
  manager: wpickett
- uid: System.Configuration.SettingsPropertyValue.Deserialized
  commentId: P:System.Configuration.SettingsPropertyValue.Deserialized
  id: Deserialized
  parent: System.Configuration.SettingsPropertyValue
  langs:
  - csharp
  name: Deserialized
  nameWithType: SettingsPropertyValue.Deserialized
  fullName: SettingsPropertyValue.Deserialized
  type: Property
  assemblies:
  - System
  - System.Configuration.ConfigurationManager
  namespace: System.Configuration
  summary: Gets or sets whether the value of a <xref href="System.Configuration.SettingsProperty"></xref> object has been deserialized.
  remarks: Deserialization of property values is only performed on demand.
  syntax:
    content: public bool Deserialized { get; set; }
    return:
      type: System.Boolean
      description: '`true` if the value of a <xref href="System.Configuration.SettingsProperty"></xref> object has been deserialized; otherwise, `false`.'
  overload: System.Configuration.SettingsPropertyValue.Deserialized*
  exceptions: []
  version:
  - netcore-2.0
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  - xamarinmac-3.0
  monikers:
  - netcore-2.0
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  - xamarinmac-3.0
  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Configuration/SettingsPropertyValue.xml
  ms.technology:
  - dotnet-webforms
  ms.author: riande
  manager: wpickett
- uid: System.Configuration.SettingsPropertyValue.IsDirty
  commentId: P:System.Configuration.SettingsPropertyValue.IsDirty
  id: IsDirty
  parent: System.Configuration.SettingsPropertyValue
  langs:
  - csharp
  name: IsDirty
  nameWithType: SettingsPropertyValue.IsDirty
  fullName: SettingsPropertyValue.IsDirty
  type: Property
  assemblies:
  - System
  - System.Configuration.ConfigurationManager
  namespace: System.Configuration
  summary: Gets or sets whether the value of a <xref href="System.Configuration.SettingsProperty"></xref> object has changed.
  remarks: "The <xref:System.Configuration.SettingsPropertyValue.IsDirty%2A> property indicates that the value stored by this class has changed. The default is `false`. The <xref:System.Configuration.SettingsPropertyValue.IsDirty%2A> property is set to `true` under the following conditions:  \n  \n1.  The value contained in the <xref:System.Configuration.SettingsPropertyValue> object is changed.  \n  \n2.  The value contained in the <xref:System.Configuration.SettingsPropertyValue> object is accessed, and the value is not a string or a primitive type such as `int`, `float`, `real`, or `DateTime`. When the value managed by a <xref:System.Configuration.SettingsPropertyValue> object is a complex type (for example an <xref:System.Collections.ArrayList>), there is no way for a <xref:System.Configuration.SettingsPropertyValue> object to detect when changes have been made. As a result, the <xref:System.Configuration.SettingsPropertyValue> object pessimistically assumes that a complex type is dirty once it has been accessed from the <xref:System.Configuration.SettingsPropertyValue.PropertyValue%2A> property."
  syntax:
    content: public bool IsDirty { get; set; }
    return:
      type: System.Boolean
      description: '`true` if the value of a <xref href="System.Configuration.SettingsProperty"></xref> object has changed; otherwise, `false`.'
  overload: System.Configuration.SettingsPropertyValue.IsDirty*
  exceptions: []
  version:
  - netcore-2.0
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  - xamarinmac-3.0
  monikers:
  - netcore-2.0
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  - xamarinmac-3.0
  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Configuration/SettingsPropertyValue.xml
  ms.technology:
  - dotnet-webforms
  ms.author: riande
  manager: wpickett
- uid: System.Configuration.SettingsPropertyValue.Name
  commentId: P:System.Configuration.SettingsPropertyValue.Name
  id: Name
  parent: System.Configuration.SettingsPropertyValue
  langs:
  - csharp
  name: Name
  nameWithType: SettingsPropertyValue.Name
  fullName: SettingsPropertyValue.Name
  type: Property
  assemblies:
  - System
  - System.Configuration.ConfigurationManager
  namespace: System.Configuration
  summary: Gets the name of the property from the associated <xref href="System.Configuration.SettingsProperty"></xref> object.
  syntax:
    content: public string Name { get; }
    return:
      type: System.String
      description: The name of the <xref href="System.Configuration.SettingsProperty"></xref> object.
  overload: System.Configuration.SettingsPropertyValue.Name*
  exceptions: []
  version:
  - netcore-2.0
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  - xamarinmac-3.0
  monikers:
  - netcore-2.0
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  - xamarinmac-3.0
  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Configuration/SettingsPropertyValue.xml
  ms.technology:
  - dotnet-webforms
  ms.author: riande
  manager: wpickett
- uid: System.Configuration.SettingsPropertyValue.Property
  commentId: P:System.Configuration.SettingsPropertyValue.Property
  id: Property
  parent: System.Configuration.SettingsPropertyValue
  langs:
  - csharp
  name: Property
  nameWithType: SettingsPropertyValue.Property
  fullName: SettingsPropertyValue.Property
  type: Property
  assemblies:
  - System
  - System.Configuration.ConfigurationManager
  namespace: System.Configuration
  summary: Gets the <xref href="System.Configuration.SettingsProperty"></xref> object.
  syntax:
    content: public System.Configuration.SettingsProperty Property { get; }
    return:
      type: System.Configuration.SettingsProperty
      description: The <xref href="System.Configuration.SettingsProperty"></xref> object that describes the <xref href="System.Configuration.SettingsPropertyValue"></xref> object.
  overload: System.Configuration.SettingsPropertyValue.Property*
  exceptions: []
  version:
  - netcore-2.0
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  - xamarinmac-3.0
  monikers:
  - netcore-2.0
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  - xamarinmac-3.0
  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Configuration/SettingsPropertyValue.xml
  ms.technology:
  - dotnet-webforms
  ms.author: riande
  manager: wpickett
- uid: System.Configuration.SettingsPropertyValue.PropertyValue
  commentId: P:System.Configuration.SettingsPropertyValue.PropertyValue
  id: PropertyValue
  parent: System.Configuration.SettingsPropertyValue
  langs:
  - csharp
  name: PropertyValue
  nameWithType: SettingsPropertyValue.PropertyValue
  fullName: SettingsPropertyValue.PropertyValue
  type: Property
  assemblies:
  - System
  - System.Configuration.ConfigurationManager
  namespace: System.Configuration
  summary: Gets or sets the value of the <xref href="System.Configuration.SettingsProperty"></xref> object.
  syntax:
    content: public object PropertyValue { get; set; }
    return:
      type: System.Object
      description: "The value of the <xref href=\"System.Configuration.SettingsProperty\"></xref> object. When this value is set, the <xref href=\"System.Configuration.SettingsPropertyValue.IsDirty\"></xref> property is set to `true` and <xref href=\"System.Configuration.SettingsPropertyValue.UsingDefaultValue\"></xref> is set to `false`.  \n  \n When a value is first accessed from the <xref href=\"System.Configuration.SettingsPropertyValue.PropertyValue\"></xref> property, and if the value was initially stored into the <xref href=\"System.Configuration.SettingsPropertyValue\"></xref> object as a serialized representation using the <xref href=\"System.Configuration.SettingsPropertyValue.SerializedValue\"></xref> property, the <xref href=\"System.Configuration.SettingsPropertyValue.PropertyValue\"></xref> property will trigger deserialization of the underlying value.  As a side effect, the <xref href=\"System.Configuration.SettingsPropertyValue.Deserialized\"></xref> property will be set to `true`.  \n  \n If this chain of events occurs in ASP.NET, and if an error occurs during the deserialization process, the error is logged using the health-monitoring feature of ASP.NET. By default, this means that deserialization errors will show up in the Application Event Log when running under ASP.NET. If this process occurs outside of ASP.NET, and if an error occurs during deserialization, the error is suppressed, and the remainder of the logic during deserialization occurs. If there is no serialized value to deserialize when the deserialization is attempted, then <xref href=\"System.Configuration.SettingsPropertyValue\"></xref> object will instead attempt to return a default value if one was configured as defined on the associated <xref href=\"System.Configuration.SettingsProperty\"></xref> instance. In this case, if the <xref href=\"System.Configuration.SettingsProperty.DefaultValue\"></xref> property was set to either `null`, or to the string \"[null]\", then the <xref href=\"System.Configuration.SettingsPropertyValue\"></xref> object will initialize the <xref href=\"System.Configuration.SettingsPropertyValue.PropertyValue\"></xref> property to either `null` for reference types, or to the default value for the associated value type.  On the other hand, if <xref href=\"System.Configuration.SettingsProperty.DefaultValue\"></xref> property holds a valid object reference or string value (other than \"[null]\"), then the <xref href=\"System.Configuration.SettingsProperty.DefaultValue\"></xref> property is returned instead.  \n  \n If there is no serialized value to deserialize when the deserialization is attempted, and no default value was specified, then an empty string will be returned for string types. For all other types, a default instance will be returned by calling <xref href=\"System.Activator.CreateInstance(System.Type)\"></xref> — for reference types this means an attempt will be made to create an object instance using the default constructor.  If this attempt fails, then `null` is returned."
  overload: System.Configuration.SettingsPropertyValue.PropertyValue*
  exceptions:
  - type: System.ArgumentException
    commentId: T:System.ArgumentException
    description: While attempting to use the default value from the <xref href="System.Configuration.SettingsProperty.DefaultValue"></xref> property, an error occurred.  Either the attempt to convert <xref href="System.Configuration.SettingsProperty.DefaultValue"></xref> property to a valid type failed, or the resulting value was not compatible with the type defined by <xref href="System.Configuration.SettingsProperty.PropertyType"></xref>.
  version:
  - netcore-2.0
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  - xamarinmac-3.0
  monikers:
  - netcore-2.0
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  - xamarinmac-3.0
  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Configuration/SettingsPropertyValue.xml
  ms.technology:
  - dotnet-webforms
  ms.author: riande
  manager: wpickett
- uid: System.Configuration.SettingsPropertyValue.SerializedValue
  commentId: P:System.Configuration.SettingsPropertyValue.SerializedValue
  id: SerializedValue
  parent: System.Configuration.SettingsPropertyValue
  langs:
  - csharp
  name: SerializedValue
  nameWithType: SettingsPropertyValue.SerializedValue
  fullName: SettingsPropertyValue.SerializedValue
  type: Property
  assemblies:
  - System
  - System.Configuration.ConfigurationManager
  namespace: System.Configuration
  summary: Gets or sets the serialized value of the <xref href="System.Configuration.SettingsProperty"></xref> object.
  remarks: "If the <xref:System.Configuration.SettingsPropertyValue> instance detects that the <xref:System.Configuration.SettingsPropertyValue.PropertyValue%2A> property has changed since the last time the <xref:System.Configuration.SettingsPropertyValue.SerializedValue%2A> property was called, it will cause <xref:System.Configuration.SettingsPropertyValue.PropertyValue%2A> property to be converted to its serialized representation. The specific serialization mechanism to be used is defined by the <xref:System.Configuration.SettingsProperty.SerializeAs%2A> property on the <xref:System.Configuration.SettingsProperty> instance associated with the <xref:System.Configuration.SettingsPropertyValue> instance. The current supported serialization options are to convert the object to a string using a string type converter, serialize using the <xref:System.Xml.Serialization.XmlSerializer>, or perform binary serialization.  \n  \n> [!NOTE]\n>  The underlying serializers may throw exceptions during the serialization process.  \n  \n The immediate caller code requires the <xref:System.Security.Permissions.SecurityPermissionFlag.SerializationFormatter> permission (one of the permissions available as part of <xref:System.Security.Permissions.SecurityPermission>) to call either the getter or setter for this property.  This permission is enforced with a <xref:System.Security.Permissions.SecurityAction.LinkDemand> enumeration value."
  syntax:
    content: public object SerializedValue { get; set; }
    return:
      type: System.Object
      description: The serialized value of a <xref href="System.Configuration.SettingsProperty"></xref> object.
  overload: System.Configuration.SettingsPropertyValue.SerializedValue*
  exceptions:
  - type: System.ArgumentException
    commentId: T:System.ArgumentException
    description: The serialization options for the property indicated the use of a string type converter, but a type converter was not available.
  version:
  - netcore-2.0
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  - xamarinmac-3.0
  monikers:
  - netcore-2.0
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  - xamarinmac-3.0
  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Configuration/SettingsPropertyValue.xml
  ms.technology:
  - dotnet-webforms
  ms.author: riande
  manager: wpickett
- uid: System.Configuration.SettingsPropertyValue.UsingDefaultValue
  commentId: P:System.Configuration.SettingsPropertyValue.UsingDefaultValue
  id: UsingDefaultValue
  parent: System.Configuration.SettingsPropertyValue
  langs:
  - csharp
  name: UsingDefaultValue
  nameWithType: SettingsPropertyValue.UsingDefaultValue
  fullName: SettingsPropertyValue.UsingDefaultValue
  type: Property
  assemblies:
  - System
  - System.Configuration.ConfigurationManager
  namespace: System.Configuration
  summary: Gets a Boolean value specifying whether the value of the <xref href="System.Configuration.SettingsPropertyValue"></xref> object is the default value as defined by the <xref href="System.Configuration.SettingsProperty.DefaultValue"></xref> property value on the associated <xref href="System.Configuration.SettingsProperty"></xref> object.
  syntax:
    content: public bool UsingDefaultValue { get; }
    return:
      type: System.Boolean
      description: '`true` if the value of the <xref href="System.Configuration.SettingsProperty"></xref> object is the default value; otherwise, `false`.'
  overload: System.Configuration.SettingsPropertyValue.UsingDefaultValue*
  exceptions: []
  version:
  - netcore-2.0
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  - xamarinmac-3.0
  monikers:
  - netcore-2.0
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  - xamarinmac-3.0
  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Configuration/SettingsPropertyValue.xml
  ms.technology:
  - dotnet-webforms
  ms.author: riande
  manager: wpickett
references:
- uid: System.Object
  parent: System
  isExternal: false
  name: Object
  nameWithType: Object
  fullName: System.Object
- uid: System.ArgumentException
  parent: System
  isExternal: false
  name: ArgumentException
  nameWithType: ArgumentException
  fullName: System.ArgumentException
- uid: System.Configuration.SettingsPropertyValue.#ctor(System.Configuration.SettingsProperty)
  parent: System.Configuration.SettingsPropertyValue
  isExternal: false
  name: SettingsPropertyValue(SettingsProperty)
  nameWithType: SettingsPropertyValue.SettingsPropertyValue(SettingsProperty)
  fullName: SettingsPropertyValue.SettingsPropertyValue(SettingsProperty)
- uid: System.Configuration.SettingsProperty
  parent: System.Configuration
  isExternal: false
  name: SettingsProperty
  nameWithType: SettingsProperty
  fullName: System.Configuration.SettingsProperty
- uid: System.Configuration.SettingsPropertyValue.Deserialized
  parent: System.Configuration.SettingsPropertyValue
  isExternal: false
  name: Deserialized
  nameWithType: SettingsPropertyValue.Deserialized
  fullName: SettingsPropertyValue.Deserialized
- uid: System.Boolean
  parent: System
  isExternal: false
  name: Boolean
  nameWithType: Boolean
  fullName: System.Boolean
- uid: System.Configuration.SettingsPropertyValue.IsDirty
  parent: System.Configuration.SettingsPropertyValue
  isExternal: false
  name: IsDirty
  nameWithType: SettingsPropertyValue.IsDirty
  fullName: SettingsPropertyValue.IsDirty
- uid: System.Configuration.SettingsPropertyValue.Name
  parent: System.Configuration.SettingsPropertyValue
  isExternal: false
  name: Name
  nameWithType: SettingsPropertyValue.Name
  fullName: SettingsPropertyValue.Name
- uid: System.String
  parent: System
  isExternal: false
  name: String
  nameWithType: String
  fullName: System.String
- uid: System.Configuration.SettingsPropertyValue.Property
  parent: System.Configuration.SettingsPropertyValue
  isExternal: false
  name: Property
  nameWithType: SettingsPropertyValue.Property
  fullName: SettingsPropertyValue.Property
- uid: System.Configuration.SettingsPropertyValue.PropertyValue
  parent: System.Configuration.SettingsPropertyValue
  isExternal: false
  name: PropertyValue
  nameWithType: SettingsPropertyValue.PropertyValue
  fullName: SettingsPropertyValue.PropertyValue
- uid: System.Configuration.SettingsPropertyValue.SerializedValue
  parent: System.Configuration.SettingsPropertyValue
  isExternal: false
  name: SerializedValue
  nameWithType: SettingsPropertyValue.SerializedValue
  fullName: SettingsPropertyValue.SerializedValue
- uid: System.Configuration.SettingsPropertyValue.UsingDefaultValue
  parent: System.Configuration.SettingsPropertyValue
  isExternal: false
  name: UsingDefaultValue
  nameWithType: SettingsPropertyValue.UsingDefaultValue
  fullName: SettingsPropertyValue.UsingDefaultValue
- uid: System.Configuration.SettingsPropertyValue.#ctor*
  parent: System.Configuration.SettingsPropertyValue
  isExternal: false
  name: SettingsPropertyValue
  nameWithType: SettingsPropertyValue.SettingsPropertyValue
  fullName: SettingsPropertyValue.SettingsPropertyValue
  monikers:
  - netcore-2.0
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  - xamarinmac-3.0
  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Configuration/SettingsPropertyValue.xml
- uid: System.Configuration.SettingsPropertyValue.Deserialized*
  parent: System.Configuration.SettingsPropertyValue
  isExternal: false
  name: Deserialized
  nameWithType: SettingsPropertyValue.Deserialized
  fullName: SettingsPropertyValue.Deserialized
  monikers:
  - netcore-2.0
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  - xamarinmac-3.0
  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Configuration/SettingsPropertyValue.xml
- uid: System.Configuration.SettingsPropertyValue.IsDirty*
  parent: System.Configuration.SettingsPropertyValue
  isExternal: false
  name: IsDirty
  nameWithType: SettingsPropertyValue.IsDirty
  fullName: SettingsPropertyValue.IsDirty
  monikers:
  - netcore-2.0
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  - xamarinmac-3.0
  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Configuration/SettingsPropertyValue.xml
- uid: System.Configuration.SettingsPropertyValue.Name*
  parent: System.Configuration.SettingsPropertyValue
  isExternal: false
  name: Name
  nameWithType: SettingsPropertyValue.Name
  fullName: SettingsPropertyValue.Name
  monikers:
  - netcore-2.0
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  - xamarinmac-3.0
  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Configuration/SettingsPropertyValue.xml
- uid: System.Configuration.SettingsPropertyValue.Property*
  parent: System.Configuration.SettingsPropertyValue
  isExternal: false
  name: Property
  nameWithType: SettingsPropertyValue.Property
  fullName: SettingsPropertyValue.Property
  monikers:
  - netcore-2.0
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  - xamarinmac-3.0
  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Configuration/SettingsPropertyValue.xml
- uid: System.Configuration.SettingsPropertyValue.PropertyValue*
  parent: System.Configuration.SettingsPropertyValue
  isExternal: false
  name: PropertyValue
  nameWithType: SettingsPropertyValue.PropertyValue
  fullName: SettingsPropertyValue.PropertyValue
  monikers:
  - netcore-2.0
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  - xamarinmac-3.0
  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Configuration/SettingsPropertyValue.xml
- uid: System.Configuration.SettingsPropertyValue.SerializedValue*
  parent: System.Configuration.SettingsPropertyValue
  isExternal: false
  name: SerializedValue
  nameWithType: SettingsPropertyValue.SerializedValue
  fullName: SettingsPropertyValue.SerializedValue
  monikers:
  - netcore-2.0
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  - xamarinmac-3.0
  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Configuration/SettingsPropertyValue.xml
- uid: System.Configuration.SettingsPropertyValue.UsingDefaultValue*
  parent: System.Configuration.SettingsPropertyValue
  isExternal: false
  name: UsingDefaultValue
  nameWithType: SettingsPropertyValue.UsingDefaultValue
  fullName: SettingsPropertyValue.UsingDefaultValue
  monikers:
  - netcore-2.0
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  - xamarinmac-3.0
  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Configuration/SettingsPropertyValue.xml
- uid: System.Object.Equals(System.Object)
  parent: System.Object
  isExternal: false
  name: Equals(Object)
  nameWithType: Object.Equals(Object)
  fullName: Object.Equals(Object)
- uid: System.Object.Equals(System.Object,System.Object)
  parent: System.Object
  isExternal: false
  name: Equals(Object, Object)
  nameWithType: Object.Equals(Object, Object)
  fullName: Object.Equals(Object, Object)
- uid: System.Object.GetHashCode
  parent: System.Object
  isExternal: false
  name: GetHashCode()
  nameWithType: Object.GetHashCode()
  fullName: Object.GetHashCode()
- uid: System.Object.GetType
  parent: System.Object
  isExternal: false
  name: GetType()
  nameWithType: Object.GetType()
  fullName: Object.GetType()
- uid: System.Object.MemberwiseClone
  parent: System.Object
  isExternal: false
  name: MemberwiseClone()
  nameWithType: Object.MemberwiseClone()
  fullName: Object.MemberwiseClone()
- uid: System.Object.ReferenceEquals(System.Object,System.Object)
  parent: System.Object
  isExternal: false
  name: ReferenceEquals(Object, Object)
  nameWithType: Object.ReferenceEquals(Object, Object)
  fullName: Object.ReferenceEquals(Object, Object)
- uid: System.Object.ToString
  parent: System.Object
  isExternal: false
  name: ToString()
  nameWithType: Object.ToString()
  fullName: Object.ToString()
