{"nodes":[{"content":"A trigger action that pauses a <xref href=\"System.Windows.Media.Animation.Storyboard\"></xref>.","nodes":[{"pos":[0,94],"content":"A trigger action that pauses a <ph id=\"ph1\">&lt;xref href=\"System.Windows.Media.Animation.Storyboard\"&gt;&lt;/xref&gt;</ph>.","source":"A trigger action that pauses a <xref href=\"System.Windows.Media.Animation.Storyboard\"></xref>."}],"pos":[487,582],"yaml":true},{"content":"Use a <xref:System.Windows.Media.Animation.PauseStoryboard> with an <xref:System.Windows.EventTrigger> or a <xref:System.Windows.Trigger> to pause a Storyboard.  \n  \n <xref:System.Windows.Media.Animation.PauseStoryboard> only affects a <xref:System.Windows.Media.Animation.Storyboard> when it is active (after the <xref:System.Windows.Media.Animation.Storyboard> starts).  \n  \n To control a <xref:System.Windows.Media.Animation.Storyboard>, the <xref:System.Windows.Media.Animation.PauseStoryboard> must reference the <xref:System.Windows.Media.Animation.BeginStoryboard.Name%2A> of the <xref:System.Windows.Media.Animation.BeginStoryboard> that controls that <xref:System.Windows.Media.Animation.Storyboard>. See [How to: Use Event Triggers to Control a Storyboard After It Starts](~/docs/framework/wpf/graphics-multimedia/how-to-use-event-triggers-to-control-a-storyboard-after-it-starts.md) for an example.  \n  \n## Beginning a Paused Animation  \n When a <xref:System.Windows.Media.Animation.BeginStoryboard> action is triggered after it has been paused, it appears to resume and restart. That's not what actually happens, however: the <xref:System.Windows.Media.Animation.BeginStoryboard> action actually replaces itself with an unpaused version. Each time a <xref:System.Windows.Media.Animation.BeginStoryboard> action is triggered, clock objects are created for its storyboard. These clocks are distributed to the properties they animate. So, when a <xref:System.Windows.Media.Animation.BeginStoryboard> is triggered again, it doesn't restart its clocks, it replaces them with new clocks.","nodes":[{"pos":[0,160],"content":"Use a <xref:System.Windows.Media.Animation.PauseStoryboard> with an <xref:System.Windows.EventTrigger> or a <xref:System.Windows.Trigger> to pause a Storyboard.","nodes":[{"content":"Use a <ph id=\"ph1\">&lt;xref:System.Windows.Media.Animation.PauseStoryboard&gt;</ph> with an <ph id=\"ph2\">&lt;xref:System.Windows.EventTrigger&gt;</ph> or a <ph id=\"ph3\">&lt;xref:System.Windows.Trigger&gt;</ph> to pause a Storyboard.","pos":[0,160],"source":"Use a <xref:System.Windows.Media.Animation.PauseStoryboard> with an <xref:System.Windows.EventTrigger> or a <xref:System.Windows.Trigger> to pause a Storyboard."}]},{"pos":[167,371],"content":"<xref:System.Windows.Media.Animation.PauseStoryboard> only affects a <xref:System.Windows.Media.Animation.Storyboard> when it is active (after the <xref:System.Windows.Media.Animation.Storyboard> starts).","nodes":[{"content":"<ph id=\"ph1\">&lt;xref:System.Windows.Media.Animation.PauseStoryboard&gt;</ph> only affects a <ph id=\"ph2\">&lt;xref:System.Windows.Media.Animation.Storyboard&gt;</ph> when it is active (after the <ph id=\"ph3\">&lt;xref:System.Windows.Media.Animation.Storyboard&gt;</ph> starts).","pos":[0,204],"source":"<xref:System.Windows.Media.Animation.PauseStoryboard> only affects a <xref:System.Windows.Media.Animation.Storyboard> when it is active (after the <xref:System.Windows.Media.Animation.Storyboard> starts)."}]},{"pos":[378,909],"content":"To control a <xref:System.Windows.Media.Animation.Storyboard>, the <xref:System.Windows.Media.Animation.PauseStoryboard> must reference the <xref:System.Windows.Media.Animation.BeginStoryboard.Name%2A> of the <xref:System.Windows.Media.Animation.BeginStoryboard> that controls that <xref:System.Windows.Media.Animation.Storyboard>. See [How to: Use Event Triggers to Control a Storyboard After It Starts](~/docs/framework/wpf/graphics-multimedia/how-to-use-event-triggers-to-control-a-storyboard-after-it-starts.md) for an example.","nodes":[{"content":"To control a <ph id=\"ph1\">&lt;xref:System.Windows.Media.Animation.Storyboard&gt;</ph>, the <ph id=\"ph2\">&lt;xref:System.Windows.Media.Animation.PauseStoryboard&gt;</ph> must reference the <ph id=\"ph3\">&lt;xref:System.Windows.Media.Animation.BeginStoryboard.Name%2A&gt;</ph> of the <ph id=\"ph4\">&lt;xref:System.Windows.Media.Animation.BeginStoryboard&gt;</ph> that controls that <ph id=\"ph5\">&lt;xref:System.Windows.Media.Animation.Storyboard&gt;</ph>.","pos":[0,331],"source":"To control a <xref:System.Windows.Media.Animation.Storyboard>, the <xref:System.Windows.Media.Animation.PauseStoryboard> must reference the <xref:System.Windows.Media.Animation.BeginStoryboard.Name%2A> of the <xref:System.Windows.Media.Animation.BeginStoryboard> that controls that <xref:System.Windows.Media.Animation.Storyboard>."},{"content":"See <bpt id=\"p1\">[</bpt>How to: Use Event Triggers to Control a Storyboard After It Starts<ept id=\"p1\">](~/docs/framework/wpf/graphics-multimedia/how-to-use-event-triggers-to-control-a-storyboard-after-it-starts.md)</ept> for an example.","pos":[332,531],"source":" See [How to: Use Event Triggers to Control a Storyboard After It Starts](~/docs/framework/wpf/graphics-multimedia/how-to-use-event-triggers-to-control-a-storyboard-after-it-starts.md) for an example."}]},{"pos":[918,946],"content":"Beginning a Paused Animation","linkify":"Beginning a Paused Animation","nodes":[{"content":"Beginning a Paused Animation","pos":[0,28]}]},{"pos":[950,1593],"content":"When a <xref:System.Windows.Media.Animation.BeginStoryboard> action is triggered after it has been paused, it appears to resume and restart. That's not what actually happens, however: the <xref:System.Windows.Media.Animation.BeginStoryboard> action actually replaces itself with an unpaused version. Each time a <xref:System.Windows.Media.Animation.BeginStoryboard> action is triggered, clock objects are created for its storyboard. These clocks are distributed to the properties they animate. So, when a <xref:System.Windows.Media.Animation.BeginStoryboard> is triggered again, it doesn't restart its clocks, it replaces them with new clocks.","nodes":[{"content":"When a <xref:System.Windows.Media.Animation.BeginStoryboard> action is triggered after it has been paused, it appears to resume and restart. That's not what actually happens, however: the <xref:System.Windows.Media.Animation.BeginStoryboard> action actually replaces itself with an unpaused version. Each time a <xref:System.Windows.Media.Animation.BeginStoryboard> action is triggered, clock objects are created for its storyboard. These clocks are distributed to the properties they animate. So, when a <xref:System.Windows.Media.Animation.BeginStoryboard> is triggered again, it doesn't restart its clocks, it replaces them with new clocks.","pos":[0,643],"nodes":[{"content":"When a <ph id=\"ph1\">&lt;xref:System.Windows.Media.Animation.BeginStoryboard&gt;</ph> action is triggered after it has been paused, it appears to resume and restart.","pos":[0,140],"source":"When a <xref:System.Windows.Media.Animation.BeginStoryboard> action is triggered after it has been paused, it appears to resume and restart."},{"content":"That's not what actually happens, however: the <ph id=\"ph1\">&lt;xref:System.Windows.Media.Animation.BeginStoryboard&gt;</ph> action actually replaces itself with an unpaused version.","pos":[141,299],"source":" That's not what actually happens, however: the <xref:System.Windows.Media.Animation.BeginStoryboard> action actually replaces itself with an unpaused version."},{"content":"Each time a <ph id=\"ph1\">&lt;xref:System.Windows.Media.Animation.BeginStoryboard&gt;</ph> action is triggered, clock objects are created for its storyboard.","pos":[300,432],"source":" Each time a <xref:System.Windows.Media.Animation.BeginStoryboard> action is triggered, clock objects are created for its storyboard."},{"content":"These clocks are distributed to the properties they animate.","pos":[433,493]},{"content":"So, when a <ph id=\"ph1\">&lt;xref:System.Windows.Media.Animation.BeginStoryboard&gt;</ph> is triggered again, it doesn't restart its clocks, it replaces them with new clocks.","pos":[494,643],"source":" So, when a <xref:System.Windows.Media.Animation.BeginStoryboard> is triggered again, it doesn't restart its clocks, it replaces them with new clocks."}]}]}],"pos":[593,2196],"yaml":true,"extradata":"MT"},{"content":"Initializes a new instance of the <xref href=\"System.Windows.Media.Animation.PauseStoryboard\"></xref> class.","nodes":[{"pos":[0,108],"content":"Initializes a new instance of the <ph id=\"ph1\">&lt;xref href=\"System.Windows.Media.Animation.PauseStoryboard\"&gt;&lt;/xref&gt;</ph> class.","source":"Initializes a new instance of the <xref href=\"System.Windows.Media.Animation.PauseStoryboard\"></xref> class."}],"pos":[5271,5380],"yaml":true}],"content":"### YamlMime:ManagedReference\nitems:\n- uid: System.Windows.Media.Animation.PauseStoryboard\n  commentId: T:System.Windows.Media.Animation.PauseStoryboard\n  id: PauseStoryboard\n  children:\n  - System.Windows.Media.Animation.PauseStoryboard.#ctor\n  langs:\n  - csharp\n  name: PauseStoryboard\n  nameWithType: PauseStoryboard\n  fullName: System.Windows.Media.Animation.PauseStoryboard\n  type: Class\n  assemblies:\n  - PresentationFramework\n  namespace: System.Windows.Media.Animation\n  summary: A trigger action that pauses a <xref href=\"System.Windows.Media.Animation.Storyboard\"></xref>.\n  remarks: \"Use a <xref:System.Windows.Media.Animation.PauseStoryboard> with an <xref:System.Windows.EventTrigger> or a <xref:System.Windows.Trigger> to pause a Storyboard.  \\n  \\n <xref:System.Windows.Media.Animation.PauseStoryboard> only affects a <xref:System.Windows.Media.Animation.Storyboard> when it is active (after the <xref:System.Windows.Media.Animation.Storyboard> starts).  \\n  \\n To control a <xref:System.Windows.Media.Animation.Storyboard>, the <xref:System.Windows.Media.Animation.PauseStoryboard> must reference the <xref:System.Windows.Media.Animation.BeginStoryboard.Name%2A> of the <xref:System.Windows.Media.Animation.BeginStoryboard> that controls that <xref:System.Windows.Media.Animation.Storyboard>. See [How to: Use Event Triggers to Control a Storyboard After It Starts](~/docs/framework/wpf/graphics-multimedia/how-to-use-event-triggers-to-control-a-storyboard-after-it-starts.md) for an example.  \\n  \\n## Beginning a Paused Animation  \\n When a <xref:System.Windows.Media.Animation.BeginStoryboard> action is triggered after it has been paused, it appears to resume and restart. That's not what actually happens, however: the <xref:System.Windows.Media.Animation.BeginStoryboard> action actually replaces itself with an unpaused version. Each time a <xref:System.Windows.Media.Animation.BeginStoryboard> action is triggered, clock objects are created for its storyboard. These clocks are distributed to the properties they animate. So, when a <xref:System.Windows.Media.Animation.BeginStoryboard> is triggered again, it doesn't restart its clocks, it replaces them with new clocks.\"\n  syntax:\n    content: 'public sealed class PauseStoryboard : System.Windows.Media.Animation.ControllableStoryboardAction'\n  inheritance:\n  - System.Object\n  - System.Windows.Threading.DispatcherObject\n  - System.Windows.DependencyObject\n  - System.Windows.TriggerAction\n  - System.Windows.Media.Animation.ControllableStoryboardAction\n  implements: []\n  inheritedMembers:\n  - System.Object.Equals(System.Object,System.Object)\n  - System.Object.GetType\n  - System.Object.MemberwiseClone\n  - System.Object.ReferenceEquals(System.Object,System.Object)\n  - System.Object.ToString\n  - System.Windows.DependencyObject.ClearValue(System.Windows.DependencyProperty)\n  - System.Windows.DependencyObject.ClearValue(System.Windows.DependencyPropertyKey)\n  - System.Windows.DependencyObject.CoerceValue(System.Windows.DependencyProperty)\n  - System.Windows.DependencyObject.DependencyObjectType\n  - System.Windows.DependencyObject.Equals(System.Object)\n  - System.Windows.DependencyObject.GetHashCode\n  - System.Windows.DependencyObject.GetLocalValueEnumerator\n  - System.Windows.DependencyObject.GetValue(System.Windows.DependencyProperty)\n  - System.Windows.DependencyObject.InvalidateProperty(System.Windows.DependencyProperty)\n  - System.Windows.DependencyObject.IsSealed\n  - System.Windows.DependencyObject.OnPropertyChanged(System.Windows.DependencyPropertyChangedEventArgs)\n  - System.Windows.DependencyObject.ReadLocalValue(System.Windows.DependencyProperty)\n  - System.Windows.DependencyObject.SetCurrentValue(System.Windows.DependencyProperty,System.Object)\n  - System.Windows.DependencyObject.SetValue(System.Windows.DependencyProperty,System.Object)\n  - System.Windows.DependencyObject.SetValue(System.Windows.DependencyPropertyKey,System.Object)\n  - System.Windows.DependencyObject.ShouldSerializeProperty(System.Windows.DependencyProperty)\n  - System.Windows.Media.Animation.ControllableStoryboardAction.BeginStoryboardName\n  - System.Windows.Threading.DispatcherObject.CheckAccess\n  - System.Windows.Threading.DispatcherObject.Dispatcher\n  - System.Windows.Threading.DispatcherObject.VerifyAccess\n  version:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Windows.Media.Animation/PauseStoryboard.xml\n  ms.technology:\n  - dotnet-wpf\n  ms.author: kempb\n  manager: ghogen\n- uid: System.Windows.Media.Animation.PauseStoryboard.#ctor\n  commentId: M:System.Windows.Media.Animation.PauseStoryboard.#ctor\n  id: '#ctor'\n  parent: System.Windows.Media.Animation.PauseStoryboard\n  langs:\n  - csharp\n  name: PauseStoryboard()\n  nameWithType: PauseStoryboard.PauseStoryboard()\n  fullName: PauseStoryboard.PauseStoryboard()\n  type: Constructor\n  assemblies:\n  - PresentationFramework\n  namespace: System.Windows.Media.Animation\n  summary: Initializes a new instance of the <xref href=\"System.Windows.Media.Animation.PauseStoryboard\"></xref> class.\n  syntax:\n    content: public PauseStoryboard ();\n    parameters: []\n  overload: System.Windows.Media.Animation.PauseStoryboard.#ctor*\n  exceptions: []\n  version:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Windows.Media.Animation/PauseStoryboard.xml\n  ms.technology:\n  - dotnet-wpf\n  author: stevehoag\n  ms.author: shoag\n  manager: wpickett\nreferences:\n- uid: System.Windows.Media.Animation.ControllableStoryboardAction\n  parent: System.Windows.Media.Animation\n  isExternal: false\n  name: ControllableStoryboardAction\n  nameWithType: ControllableStoryboardAction\n  fullName: System.Windows.Media.Animation.ControllableStoryboardAction\n- uid: System.Windows.Media.Animation.PauseStoryboard.#ctor\n  parent: System.Windows.Media.Animation.PauseStoryboard\n  isExternal: false\n  name: PauseStoryboard()\n  nameWithType: PauseStoryboard.PauseStoryboard()\n  fullName: PauseStoryboard.PauseStoryboard()\n- uid: System.Windows.Media.Animation.PauseStoryboard.#ctor*\n  parent: System.Windows.Media.Animation.PauseStoryboard\n  isExternal: false\n  name: PauseStoryboard\n  nameWithType: PauseStoryboard.PauseStoryboard\n  fullName: PauseStoryboard.PauseStoryboard\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Windows.Media.Animation/PauseStoryboard.xml\n- uid: System.Windows.DependencyObject.Equals(System.Object)\n  parent: System.Windows.DependencyObject\n  isExternal: false\n  name: Equals(Object)\n  nameWithType: DependencyObject.Equals(Object)\n  fullName: DependencyObject.Equals(Object)\n- uid: System.Object.Equals(System.Object,System.Object)\n  parent: System.Object\n  isExternal: false\n  name: Equals(Object, Object)\n  nameWithType: Object.Equals(Object, Object)\n  fullName: Object.Equals(Object, Object)\n- uid: System.Windows.DependencyObject.GetHashCode\n  parent: System.Windows.DependencyObject\n  isExternal: false\n  name: GetHashCode()\n  nameWithType: DependencyObject.GetHashCode()\n  fullName: DependencyObject.GetHashCode()\n- uid: System.Object.GetType\n  parent: System.Object\n  isExternal: false\n  name: GetType()\n  nameWithType: Object.GetType()\n  fullName: Object.GetType()\n- uid: System.Object.MemberwiseClone\n  parent: System.Object\n  isExternal: false\n  name: MemberwiseClone()\n  nameWithType: Object.MemberwiseClone()\n  fullName: Object.MemberwiseClone()\n- uid: System.Object.ReferenceEquals(System.Object,System.Object)\n  parent: System.Object\n  isExternal: false\n  name: ReferenceEquals(Object, Object)\n  nameWithType: Object.ReferenceEquals(Object, Object)\n  fullName: Object.ReferenceEquals(Object, Object)\n- uid: System.Object.ToString\n  parent: System.Object\n  isExternal: false\n  name: ToString()\n  nameWithType: Object.ToString()\n  fullName: Object.ToString()\n- uid: System.Windows.Threading.DispatcherObject.CheckAccess\n  parent: System.Windows.Threading.DispatcherObject\n  isExternal: false\n  name: CheckAccess()\n  nameWithType: DispatcherObject.CheckAccess()\n  fullName: DispatcherObject.CheckAccess()\n- uid: System.Windows.Threading.DispatcherObject.Dispatcher\n  parent: System.Windows.Threading.DispatcherObject\n  isExternal: false\n  name: Dispatcher\n  nameWithType: DispatcherObject.Dispatcher\n  fullName: DispatcherObject.Dispatcher\n- uid: System.Windows.Threading.DispatcherObject.VerifyAccess\n  parent: System.Windows.Threading.DispatcherObject\n  isExternal: false\n  name: VerifyAccess()\n  nameWithType: DispatcherObject.VerifyAccess()\n  fullName: DispatcherObject.VerifyAccess()\n- uid: System.Windows.DependencyObject.ClearValue(System.Windows.DependencyProperty)\n  parent: System.Windows.DependencyObject\n  isExternal: false\n  name: ClearValue(DependencyProperty)\n  nameWithType: DependencyObject.ClearValue(DependencyProperty)\n  fullName: DependencyObject.ClearValue(DependencyProperty)\n- uid: System.Windows.DependencyObject.ClearValue(System.Windows.DependencyPropertyKey)\n  parent: System.Windows.DependencyObject\n  isExternal: false\n  name: ClearValue(DependencyPropertyKey)\n  nameWithType: DependencyObject.ClearValue(DependencyPropertyKey)\n  fullName: DependencyObject.ClearValue(DependencyPropertyKey)\n- uid: System.Windows.DependencyObject.CoerceValue(System.Windows.DependencyProperty)\n  parent: System.Windows.DependencyObject\n  isExternal: false\n  name: CoerceValue(DependencyProperty)\n  nameWithType: DependencyObject.CoerceValue(DependencyProperty)\n  fullName: DependencyObject.CoerceValue(DependencyProperty)\n- uid: System.Windows.DependencyObject.DependencyObjectType\n  parent: System.Windows.DependencyObject\n  isExternal: false\n  name: DependencyObjectType\n  nameWithType: DependencyObject.DependencyObjectType\n  fullName: DependencyObject.DependencyObjectType\n- uid: System.Windows.DependencyObject.GetLocalValueEnumerator\n  parent: System.Windows.DependencyObject\n  isExternal: false\n  name: GetLocalValueEnumerator()\n  nameWithType: DependencyObject.GetLocalValueEnumerator()\n  fullName: DependencyObject.GetLocalValueEnumerator()\n- uid: System.Windows.DependencyObject.GetValue(System.Windows.DependencyProperty)\n  parent: System.Windows.DependencyObject\n  isExternal: false\n  name: GetValue(DependencyProperty)\n  nameWithType: DependencyObject.GetValue(DependencyProperty)\n  fullName: DependencyObject.GetValue(DependencyProperty)\n- uid: System.Windows.DependencyObject.InvalidateProperty(System.Windows.DependencyProperty)\n  parent: System.Windows.DependencyObject\n  isExternal: false\n  name: InvalidateProperty(DependencyProperty)\n  nameWithType: DependencyObject.InvalidateProperty(DependencyProperty)\n  fullName: DependencyObject.InvalidateProperty(DependencyProperty)\n- uid: System.Windows.DependencyObject.IsSealed\n  parent: System.Windows.DependencyObject\n  isExternal: false\n  name: IsSealed\n  nameWithType: DependencyObject.IsSealed\n  fullName: DependencyObject.IsSealed\n- uid: System.Windows.DependencyObject.OnPropertyChanged(System.Windows.DependencyPropertyChangedEventArgs)\n  parent: System.Windows.DependencyObject\n  isExternal: false\n  name: OnPropertyChanged(DependencyPropertyChangedEventArgs)\n  nameWithType: DependencyObject.OnPropertyChanged(DependencyPropertyChangedEventArgs)\n  fullName: DependencyObject.OnPropertyChanged(DependencyPropertyChangedEventArgs)\n- uid: System.Windows.DependencyObject.ReadLocalValue(System.Windows.DependencyProperty)\n  parent: System.Windows.DependencyObject\n  isExternal: false\n  name: ReadLocalValue(DependencyProperty)\n  nameWithType: DependencyObject.ReadLocalValue(DependencyProperty)\n  fullName: DependencyObject.ReadLocalValue(DependencyProperty)\n- uid: System.Windows.DependencyObject.SetCurrentValue(System.Windows.DependencyProperty,System.Object)\n  parent: System.Windows.DependencyObject\n  isExternal: false\n  name: SetCurrentValue(DependencyProperty, Object)\n  nameWithType: DependencyObject.SetCurrentValue(DependencyProperty, Object)\n  fullName: DependencyObject.SetCurrentValue(DependencyProperty, Object)\n- uid: System.Windows.DependencyObject.SetValue(System.Windows.DependencyProperty,System.Object)\n  parent: System.Windows.DependencyObject\n  isExternal: false\n  name: SetValue(DependencyProperty, Object)\n  nameWithType: DependencyObject.SetValue(DependencyProperty, Object)\n  fullName: DependencyObject.SetValue(DependencyProperty, Object)\n- uid: System.Windows.DependencyObject.SetValue(System.Windows.DependencyPropertyKey,System.Object)\n  parent: System.Windows.DependencyObject\n  isExternal: false\n  name: SetValue(DependencyPropertyKey, Object)\n  nameWithType: DependencyObject.SetValue(DependencyPropertyKey, Object)\n  fullName: DependencyObject.SetValue(DependencyPropertyKey, Object)\n- uid: System.Windows.DependencyObject.ShouldSerializeProperty(System.Windows.DependencyProperty)\n  parent: System.Windows.DependencyObject\n  isExternal: false\n  name: ShouldSerializeProperty(DependencyProperty)\n  nameWithType: DependencyObject.ShouldSerializeProperty(DependencyProperty)\n  fullName: DependencyObject.ShouldSerializeProperty(DependencyProperty)\n- uid: System.Windows.Media.Animation.ControllableStoryboardAction.BeginStoryboardName\n  parent: System.Windows.Media.Animation.ControllableStoryboardAction\n  isExternal: false\n  name: BeginStoryboardName\n  nameWithType: ControllableStoryboardAction.BeginStoryboardName\n  fullName: ControllableStoryboardAction.BeginStoryboardName\n"}