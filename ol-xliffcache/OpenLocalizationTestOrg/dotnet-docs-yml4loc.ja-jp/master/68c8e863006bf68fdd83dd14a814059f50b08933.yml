### YamlMime:ManagedReference
items:
- uid: System.MarshalByRefObject
  commentId: T:System.MarshalByRefObject
  id: MarshalByRefObject
  children:
  - System.MarshalByRefObject.#ctor
  - System.MarshalByRefObject.CreateObjRef(System.Type)
  - System.MarshalByRefObject.GetLifetimeService
  - System.MarshalByRefObject.InitializeLifetimeService
  - System.MarshalByRefObject.MemberwiseClone(System.Boolean)
  langs:
  - csharp
  name: MarshalByRefObject
  nameWithType: MarshalByRefObject
  fullName: System.MarshalByRefObject
  type: Class
  assemblies:
  - mscorlib
  - netstandard
  - System.Runtime
  namespace: System
  summary: Enables access to objects across application domain boundaries in applications that support remoting.
  remarks: "An application domain is a partition in an operating system process where one or more applications reside. Objects in the same application domain communicate directly. Objects in different application domains communicate either by transporting copies of objects across application domain boundaries, or by using a proxy to exchange messages.  \n  \n <xref:System.MarshalByRefObject> is the base class for objects that communicate across application domain boundaries by exchanging messages using a proxy. Objects that do not inherit from <xref:System.MarshalByRefObject> are implicitly marshal by value. When a remote application references a marshal by value object, a copy of the object is passed across application domain boundaries.  \n  \n <xref:System.MarshalByRefObject> objects are accessed directly within the boundaries of the local application domain. The first time an application in a remote application domain accesses a <xref:System.MarshalByRefObject>, a proxy is passed to the remote application. Subsequent calls on the proxy are marshaled back to the object residing in the local application domain.  \n  \n Types must inherit from <xref:System.MarshalByRefObject> when the type is used across application domain boundaries, and the state of the object must not be copied because the members of the object are not usable outside the application domain where they were created.  \n  \n When you derive an object from <xref:System.MarshalByRefObject> for use across application domain boundaries, you should not override any of its members, nor should you call its methods directly. The runtime recognizes that classes derived from  <xref:System.MarshalByRefObject> should be marshaled across app domain boundaries."
  example:
  - "This section contains two code examples. The first code example shows how to create an instance of a class in another application domain. The second code example shows a simple class that can be used for remoting.  \n  \n **Example 1**  \n  \n The following code example shows the simplest way to execute code in another application domain. The example defines a class named `Worker` that inherits <xref:System.MarshalByRefObject>, with a method that displays the name of the application domain in which it is executing. The example creates instances of `Worker` in the default application domain and in a new application domain.  \n  \n> [!NOTE]\n>  The assembly that contains `Worker` must be loaded into both application domains, but it could load other assemblies that would exist only in the new application domain.  \n  \n [!code-cpp[CreateInstanceAndUnwrap2#1](~/samples/snippets/cpp/VS_Snippets_CLR/CreateInstanceAndUnwrap2/cpp/source.cpp#1)]\n [!code-csharp[CreateInstanceAndUnwrap2#1](~/samples/snippets/csharp/VS_Snippets_CLR/CreateInstanceAndUnwrap2/cs/source.cs#1)]\n [!code-vb[CreateInstanceAndUnwrap2#1](~/samples/snippets/visualbasic/VS_Snippets_CLR/CreateInstanceAndUnwrap2/VB/source.vb#1)]  \n  \n **Example 2**  \n  \n The following example demonstrates a class derived from <xref:System.MarshalByRefObject> that is used later in remoting.  \n  \n [!code-cpp[RemotingServices.SetObjectUriForMarshal#1](~/samples/snippets/cpp/VS_Snippets_CLR/RemotingServices.SetObjectUriForMarshal/CPP/source.cpp#1)]\n [!code-csharp[RemotingServices.SetObjectUriForMarshal#1](~/samples/snippets/csharp/VS_Snippets_CLR/RemotingServices.SetObjectUriForMarshal/CS/source.cs#1)]\n [!code-vb[RemotingServices.SetObjectUriForMarshal#1](~/samples/snippets/visualbasic/VS_Snippets_CLR/RemotingServices.SetObjectUriForMarshal/VB/source.vb#1)]"
  syntax:
    content: >-
      [System.Runtime.InteropServices.ComVisible(true)]

      public abstract class MarshalByRefObject
  inheritance:
  - System.Object
  derivedClasses:
  - Microsoft.Build.Utilities.AppDomainIsolatedTask
  - Microsoft.Build.Utilities.TaskItem
  - Microsoft.Build.Utilities.TaskLoggingHelper
  - System.AppDomain
  - System.AppDomainManager
  - System.ContextBoundObject
  - System.AddIn.Pipeline.ContractBase
  - System.ComponentModel.Component
  - System.Data.Common.DataColumnMapping
  - System.Data.Common.DataColumnMappingCollection
  - System.Data.Common.DataTableMapping
  - System.Data.Common.DataTableMappingCollection
  - System.DirectoryServices.SearchResultCollection
  - System.Drawing.Brush
  - System.Drawing.Font
  - System.Drawing.FontFamily
  - System.Drawing.Graphics
  - System.Drawing.Icon
  - System.Drawing.Image
  - System.Drawing.Pen
  - System.Drawing.Region
  - System.Drawing.StringFormat
  - System.Drawing.Drawing2D.CustomLineCap
  - System.Drawing.Drawing2D.GraphicsContainer
  - System.Drawing.Drawing2D.GraphicsPath
  - System.Drawing.Drawing2D.GraphicsPathIterator
  - System.Drawing.Drawing2D.GraphicsState
  - System.Drawing.Drawing2D.Matrix
  - System.IO.IsolatedStorage.IsolatedStorage
  - System.Messaging.MessageEnumerator
  - System.Messaging.MessageQueueEnumerator
  - System.Reflection.AssemblyNameProxy
  - System.Runtime.InteropServices.StandardOleMarshalObject
  - System.Runtime.Remoting.ObjectHandle
  - System.Runtime.Remoting.Lifetime.ClientSponsor
  - System.Speech.Recognition.SrgsGrammar.SrgsElement
  - System.Web.Compilation.ClientBuildManager
  - System.Web.Compilation.ClientBuildManagerCallback
  - System.Web.Hosting.AppDomainProtocolHandler
  - System.Web.Hosting.ApplicationManager
  - System.Web.Hosting.HostingEnvironment
  - System.Web.Hosting.ISAPIRuntime
  - System.Web.Hosting.ProcessHost
  - System.Web.Hosting.ProcessHostFactoryHelper
  - System.Web.Hosting.ProcessProtocolHandler
  - System.Web.Hosting.RecycleLimitMonitor.RecycleLimitMonitorSingleton
  - System.Web.Hosting.RecycleLimitMonitor
  - System.Web.Hosting.VirtualFileBase
  - System.Web.Hosting.VirtualPathProvider
  - System.Windows.Forms.BaseCollection
  - System.Windows.Forms.NativeWindow
  - System.Windows.Forms.NumericUpDownAccelerationCollection
  - System.Windows.Forms.OwnerDrawPropertyBag
  - System.Windows.Forms.TreeNode
  - System.Windows.Interop.DocObjHost
  - System.Workflow.Runtime.DebugEngine.DebugController
  implements: []
  inheritedMembers:
  - System.Object.Equals(System.Object)
  - System.Object.Equals(System.Object,System.Object)
  - System.Object.GetHashCode
  - System.Object.GetType
  - System.Object.MemberwiseClone
  - System.Object.ReferenceEquals(System.Object,System.Object)
  - System.Object.ToString
  attributes:
  - type: System.Runtime.InteropServices.ComVisibleAttribute
  version:
  - netcore-2.0
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  - netstandard-2.0
  - xamarinandroid-7.1
  - xamarinios-10.8
  - xamarinmac-3.0
  monikers:
  - netcore-2.0
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  - netstandard-2.0
  - xamarinandroid-7.1
  - xamarinios-10.8
  - xamarinmac-3.0
  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System/MarshalByRefObject.xml
  ms.technology:
  - dotnet-standard
  author: rpetrusha
  ms.author: ronpet
  manager: wpickett
- uid: System.MarshalByRefObject.#ctor
  commentId: M:System.MarshalByRefObject.#ctor
  id: '#ctor'
  parent: System.MarshalByRefObject
  langs:
  - csharp
  name: MarshalByRefObject()
  nameWithType: MarshalByRefObject.MarshalByRefObject()
  fullName: MarshalByRefObject.MarshalByRefObject()
  type: Constructor
  assemblies:
  - mscorlib
  - netstandard
  - System.Runtime
  namespace: System
  summary: Initializes a new instance of the <xref href="System.MarshalByRefObject"></xref> class.
  syntax:
    content: protected MarshalByRefObject ();
    parameters: []
  overload: System.MarshalByRefObject.#ctor*
  exceptions: []
  version:
  - netcore-2.0
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  - netstandard-2.0
  - xamarinandroid-7.1
  - xamarinios-10.8
  - xamarinmac-3.0
  monikers:
  - netcore-2.0
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  - netstandard-2.0
  - xamarinandroid-7.1
  - xamarinios-10.8
  - xamarinmac-3.0
  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System/MarshalByRefObject.xml
  ms.technology:
  - dotnet-standard
  author: rpetrusha
  ms.author: ronpet
  manager: wpickett
- uid: System.MarshalByRefObject.CreateObjRef(System.Type)
  commentId: M:System.MarshalByRefObject.CreateObjRef(System.Type)
  id: CreateObjRef(System.Type)
  parent: System.MarshalByRefObject
  langs:
  - csharp
  name: CreateObjRef(Type)
  nameWithType: MarshalByRefObject.CreateObjRef(Type)
  fullName: MarshalByRefObject.CreateObjRef(Type)
  type: Method
  assemblies:
  - mscorlib
  namespace: System
  summary: Creates an object that contains all the relevant information required to generate a proxy used to communicate with a remote object.
  remarks: The<xref:System.MarshalByRefObject.CreateObjRef%2A> method is called by remote object creation methods such as <xref:System.AppDomain.CreateInstance%2A?displayProperty=fullName> and <xref:System.AppDomain.CreateInstanceAndUnwrap%2A?displayProperty=fullName>. In most cases, there is no need to override this method.
  syntax:
    content: public virtual System.Runtime.Remoting.ObjRef CreateObjRef (Type requestedType);
    parameters:
    - id: requestedType
      type: System.Type
      description: The <xref href="System.Type"></xref> of the object that the new <xref href="System.Runtime.Remoting.ObjRef"></xref> will reference.
    return:
      type: System.Runtime.Remoting.ObjRef
      description: Information required to generate a proxy.
  overload: System.MarshalByRefObject.CreateObjRef*
  exceptions:
  - type: System.Runtime.Remoting.RemotingException
    commentId: T:System.Runtime.Remoting.RemotingException
    description: This instance is not a valid remoting object.
  - type: System.Security.SecurityException
    commentId: T:System.Security.SecurityException
    description: The immediate caller does not have infrastructure permission.
  version:
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  - xamarinandroid-7.1
  - xamarinios-10.8
  - xamarinmac-3.0
  monikers:
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  - xamarinandroid-7.1
  - xamarinios-10.8
  - xamarinmac-3.0
  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System/MarshalByRefObject.xml
  ms.technology:
  - dotnet-standard
  author: rpetrusha
  ms.author: ronpet
  manager: wpickett
- uid: System.MarshalByRefObject.GetLifetimeService
  commentId: M:System.MarshalByRefObject.GetLifetimeService
  id: GetLifetimeService
  parent: System.MarshalByRefObject
  langs:
  - csharp
  name: GetLifetimeService()
  nameWithType: MarshalByRefObject.GetLifetimeService()
  fullName: MarshalByRefObject.GetLifetimeService()
  type: Method
  assemblies:
  - mscorlib
  - netstandard
  - System.Runtime
  namespace: System
  summary: Retrieves the current lifetime service object that controls the lifetime policy for this instance.
  remarks: For more information about lifetime services, see the <xref:System.Runtime.Remoting.Lifetime.LifetimeServices> class.
  syntax:
    content: public object GetLifetimeService ();
    parameters: []
    return:
      type: System.Object
      description: An object of type <xref href="System.Runtime.Remoting.Lifetime.ILease"></xref> used to control the lifetime policy for this instance.
  overload: System.MarshalByRefObject.GetLifetimeService*
  exceptions:
  - type: System.Security.SecurityException
    commentId: T:System.Security.SecurityException
    description: The immediate caller does not have infrastructure permission.
  version:
  - netcore-2.0
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  - netstandard-2.0
  - xamarinandroid-7.1
  - xamarinios-10.8
  - xamarinmac-3.0
  monikers:
  - netcore-2.0
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  - netstandard-2.0
  - xamarinandroid-7.1
  - xamarinios-10.8
  - xamarinmac-3.0
  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System/MarshalByRefObject.xml
  ms.technology:
  - dotnet-standard
  author: rpetrusha
  ms.author: ronpet
  manager: wpickett
- uid: System.MarshalByRefObject.InitializeLifetimeService
  commentId: M:System.MarshalByRefObject.InitializeLifetimeService
  id: InitializeLifetimeService
  parent: System.MarshalByRefObject
  langs:
  - csharp
  name: InitializeLifetimeService()
  nameWithType: MarshalByRefObject.InitializeLifetimeService()
  fullName: MarshalByRefObject.InitializeLifetimeService()
  type: Method
  assemblies:
  - mscorlib
  - netstandard
  - System.Runtime
  namespace: System
  summary: Obtains a lifetime service object to control the lifetime policy for this instance.
  remarks: For more information about lifetime services, see the <xref:System.Runtime.Remoting.Lifetime.LifetimeServices> class.
  example:
  - "The following code example demonstrates creating a lease.  \n  \n [!code-cpp[Classic MarshalByRefObject.InitializeLifetimeService Example#1](~/samples/snippets/cpp/VS_Snippets_CLR_Classic/classic MarshalByRefObject.InitializeLifetimeService Example/CPP/source.cpp#1)]\n [!code-csharp[Classic MarshalByRefObject.InitializeLifetimeService Example#1](~/samples/snippets/csharp/VS_Snippets_CLR_Classic/classic MarshalByRefObject.InitializeLifetimeService Example/CS/source.cs#1)]\n [!code-vb[Classic MarshalByRefObject.InitializeLifetimeService Example#1](~/samples/snippets/visualbasic/VS_Snippets_CLR_Classic/classic MarshalByRefObject.InitializeLifetimeService Example/VB/source.vb#1)]"
  syntax:
    content: public virtual object InitializeLifetimeService ();
    parameters: []
    return:
      type: System.Object
      description: An object of type <xref href="System.Runtime.Remoting.Lifetime.ILease"></xref> used to control the lifetime policy for this instance. This is the current lifetime service object for this instance if one exists; otherwise, a new lifetime service object initialized to the value of the <xref href="System.Runtime.Remoting.Lifetime.LifetimeServices.LeaseManagerPollTime"></xref> property.
  overload: System.MarshalByRefObject.InitializeLifetimeService*
  exceptions:
  - type: System.Security.SecurityException
    commentId: T:System.Security.SecurityException
    description: The immediate caller does not have infrastructure permission.
  version:
  - netcore-2.0
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  - netstandard-2.0
  - xamarinandroid-7.1
  - xamarinios-10.8
  - xamarinmac-3.0
  monikers:
  - netcore-2.0
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  - netstandard-2.0
  - xamarinandroid-7.1
  - xamarinios-10.8
  - xamarinmac-3.0
  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System/MarshalByRefObject.xml
  ms.technology:
  - dotnet-standard
  author: rpetrusha
  ms.author: ronpet
  manager: wpickett
- uid: System.MarshalByRefObject.MemberwiseClone(System.Boolean)
  commentId: M:System.MarshalByRefObject.MemberwiseClone(System.Boolean)
  id: MemberwiseClone(System.Boolean)
  parent: System.MarshalByRefObject
  langs:
  - csharp
  name: MemberwiseClone(Boolean)
  nameWithType: MarshalByRefObject.MemberwiseClone(Boolean)
  fullName: MarshalByRefObject.MemberwiseClone(Boolean)
  type: Method
  assemblies:
  - mscorlib
  - netstandard
  - System.Runtime
  namespace: System
  summary: Creates a shallow copy of the current <xref href="System.MarshalByRefObject"></xref> object.
  remarks: "The <xref:System.MarshalByRefObject.MemberwiseClone%28System.Boolean%29> method creates a shallow copy by creating a new <xref:System.MarshalByRefObject> object, and then copying the nonstatic fields of the current <xref:System.MarshalByRefObject> object to the new object. If a field is a value type, a bit-by-bit copy of the field is performed. If a field is a reference type, the reference is copied but the referred object is not; therefore, the original object and its clone refer to the same object.  \n  \n For example, consider a <xref:System.MarshalByRefObject> object called X that references objects A and B. Object B, in turn, references object C. A shallow copy of X creates new object X2 that also references objects A and B. In contrast, a deep copy of X creates a new object X2 that references the new objects A2 and B2, which are copies of A and B. B2, in turn, references the new object C2, which is a copy C. Use a class that implements the <xref:System.ICloneable> interface to perform a deep or shallow copy of an object.  \n  \n The identity of a <xref:System.MarshalByRefObject> object is defined as the remote server object that is the target of a remoting client call. By default, the memberwise clone of a <xref:System.MarshalByRefObject> object has the same identity as the original object, which is typically not the correct behavior for clones of server-side objects that are marshaled across a remoting boundary to the client side. Specify `false`, which is usually appropriate, to delete the identity of the clone and cause a new identity to be assigned when the clone is marshaled across a remoting boundary, or `true` to cause the clone to retain the identity of the original <xref:System.MarshalByRefObject> object. The <xref:System.MarshalByRefObject.MemberwiseClone%28System.Boolean%29> method is intended to be used by developers implementing remote server objects."
  syntax:
    content: protected MarshalByRefObject MemberwiseClone (bool cloneIdentity);
    parameters:
    - id: cloneIdentity
      type: System.Boolean
      description: "`false` to delete the current <xref href=\"System.MarshalByRefObject\"></xref> object's identity, which will cause the object to be assigned a new identity when it is marshaled across a remoting boundary. A value of `false` is usually appropriate. `true` to copy the current <xref href=\"System.MarshalByRefObject\"></xref> object's identity to its clone, which will cause remoting client calls to be routed to the remote server object."
    return:
      type: System.MarshalByRefObject
      description: A shallow copy of the current <xref href="System.MarshalByRefObject"></xref> object.
  overload: System.MarshalByRefObject.MemberwiseClone*
  exceptions: []
  version:
  - netcore-2.0
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  - netstandard-2.0
  - xamarinandroid-7.1
  - xamarinios-10.8
  - xamarinmac-3.0
  monikers:
  - netcore-2.0
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  - netstandard-2.0
  - xamarinandroid-7.1
  - xamarinios-10.8
  - xamarinmac-3.0
  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System/MarshalByRefObject.xml
  ms.technology:
  - dotnet-standard
  author: rpetrusha
  ms.author: ronpet
  manager: wpickett
references:
- uid: System.Object
  parent: System
  isExternal: false
  name: Object
  nameWithType: Object
  fullName: System.Object
- uid: System.Runtime.Remoting.RemotingException
  parent: System.Runtime.Remoting
  isExternal: false
  name: RemotingException
  nameWithType: RemotingException
  fullName: System.Runtime.Remoting.RemotingException
- uid: System.Security.SecurityException
  parent: System.Security
  isExternal: false
  name: SecurityException
  nameWithType: SecurityException
  fullName: System.Security.SecurityException
- uid: System.MarshalByRefObject.#ctor
  parent: System.MarshalByRefObject
  isExternal: false
  name: MarshalByRefObject()
  nameWithType: MarshalByRefObject.MarshalByRefObject()
  fullName: MarshalByRefObject.MarshalByRefObject()
- uid: System.MarshalByRefObject.CreateObjRef(System.Type)
  parent: System.MarshalByRefObject
  isExternal: false
  name: CreateObjRef(Type)
  nameWithType: MarshalByRefObject.CreateObjRef(Type)
  fullName: MarshalByRefObject.CreateObjRef(Type)
- uid: System.Runtime.Remoting.ObjRef
  parent: System.Runtime.Remoting
  isExternal: false
  name: ObjRef
  nameWithType: ObjRef
  fullName: System.Runtime.Remoting.ObjRef
- uid: System.Type
  parent: System
  isExternal: false
  name: Type
  nameWithType: Type
  fullName: System.Type
- uid: System.MarshalByRefObject.GetLifetimeService
  parent: System.MarshalByRefObject
  isExternal: false
  name: GetLifetimeService()
  nameWithType: MarshalByRefObject.GetLifetimeService()
  fullName: MarshalByRefObject.GetLifetimeService()
- uid: System.MarshalByRefObject.InitializeLifetimeService
  parent: System.MarshalByRefObject
  isExternal: false
  name: InitializeLifetimeService()
  nameWithType: MarshalByRefObject.InitializeLifetimeService()
  fullName: MarshalByRefObject.InitializeLifetimeService()
- uid: System.MarshalByRefObject.MemberwiseClone(System.Boolean)
  parent: System.MarshalByRefObject
  isExternal: false
  name: MemberwiseClone(Boolean)
  nameWithType: MarshalByRefObject.MemberwiseClone(Boolean)
  fullName: MarshalByRefObject.MemberwiseClone(Boolean)
- uid: System.MarshalByRefObject
  parent: System
  isExternal: false
  name: MarshalByRefObject
  nameWithType: MarshalByRefObject
  fullName: System.MarshalByRefObject
- uid: System.Boolean
  parent: System
  isExternal: false
  name: Boolean
  nameWithType: Boolean
  fullName: System.Boolean
- uid: System.MarshalByRefObject.#ctor*
  parent: System.MarshalByRefObject
  isExternal: false
  name: MarshalByRefObject
  nameWithType: MarshalByRefObject.MarshalByRefObject
  fullName: MarshalByRefObject.MarshalByRefObject
  monikers:
  - netcore-2.0
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  - netstandard-2.0
  - xamarinandroid-7.1
  - xamarinios-10.8
  - xamarinmac-3.0
  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System/MarshalByRefObject.xml
- uid: System.MarshalByRefObject.CreateObjRef*
  parent: System.MarshalByRefObject
  isExternal: false
  name: CreateObjRef
  nameWithType: MarshalByRefObject.CreateObjRef
  fullName: MarshalByRefObject.CreateObjRef
  monikers:
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  - xamarinandroid-7.1
  - xamarinios-10.8
  - xamarinmac-3.0
  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System/MarshalByRefObject.xml
- uid: System.MarshalByRefObject.GetLifetimeService*
  parent: System.MarshalByRefObject
  isExternal: false
  name: GetLifetimeService
  nameWithType: MarshalByRefObject.GetLifetimeService
  fullName: MarshalByRefObject.GetLifetimeService
  monikers:
  - netcore-2.0
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  - netstandard-2.0
  - xamarinandroid-7.1
  - xamarinios-10.8
  - xamarinmac-3.0
  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System/MarshalByRefObject.xml
- uid: System.MarshalByRefObject.InitializeLifetimeService*
  parent: System.MarshalByRefObject
  isExternal: false
  name: InitializeLifetimeService
  nameWithType: MarshalByRefObject.InitializeLifetimeService
  fullName: MarshalByRefObject.InitializeLifetimeService
  monikers:
  - netcore-2.0
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  - netstandard-2.0
  - xamarinandroid-7.1
  - xamarinios-10.8
  - xamarinmac-3.0
  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System/MarshalByRefObject.xml
- uid: System.MarshalByRefObject.MemberwiseClone*
  parent: System.MarshalByRefObject
  isExternal: false
  name: MemberwiseClone
  nameWithType: MarshalByRefObject.MemberwiseClone
  fullName: MarshalByRefObject.MemberwiseClone
  monikers:
  - netcore-2.0
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  - netstandard-2.0
  - xamarinandroid-7.1
  - xamarinios-10.8
  - xamarinmac-3.0
  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System/MarshalByRefObject.xml
- uid: System.Object.Equals(System.Object)
  parent: System.Object
  isExternal: false
  name: Equals(Object)
  nameWithType: Object.Equals(Object)
  fullName: Object.Equals(Object)
- uid: System.Object.Equals(System.Object,System.Object)
  parent: System.Object
  isExternal: false
  name: Equals(Object, Object)
  nameWithType: Object.Equals(Object, Object)
  fullName: Object.Equals(Object, Object)
- uid: System.Object.GetHashCode
  parent: System.Object
  isExternal: false
  name: GetHashCode()
  nameWithType: Object.GetHashCode()
  fullName: Object.GetHashCode()
- uid: System.Object.GetType
  parent: System.Object
  isExternal: false
  name: GetType()
  nameWithType: Object.GetType()
  fullName: Object.GetType()
- uid: System.Object.MemberwiseClone
  parent: System.Object
  isExternal: false
  name: MemberwiseClone()
  nameWithType: Object.MemberwiseClone()
  fullName: Object.MemberwiseClone()
- uid: System.Object.ReferenceEquals(System.Object,System.Object)
  parent: System.Object
  isExternal: false
  name: ReferenceEquals(Object, Object)
  nameWithType: Object.ReferenceEquals(Object, Object)
  fullName: Object.ReferenceEquals(Object, Object)
- uid: System.Object.ToString
  parent: System.Object
  isExternal: false
  name: ToString()
  nameWithType: Object.ToString()
  fullName: Object.ToString()
