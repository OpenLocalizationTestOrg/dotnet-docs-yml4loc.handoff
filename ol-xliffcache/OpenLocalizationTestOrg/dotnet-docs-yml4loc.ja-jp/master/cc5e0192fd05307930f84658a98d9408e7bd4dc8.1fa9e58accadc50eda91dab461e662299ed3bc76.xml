{"nodes":[{"content":"Represents the default settings used to create connections to a remote computer. This class cannot be inherited.","nodes":[{"pos":[0,112],"content":"Represents the default settings used to create connections to a remote computer. This class cannot be inherited.","nodes":[{"content":"Represents the default settings used to create connections to a remote computer. This class cannot be inherited.","pos":[0,112],"nodes":[{"content":"Represents the default settings used to create connections to a remote computer.","pos":[0,80]},{"content":"This class cannot be inherited.","pos":[81,112]}]}]}],"pos":[1193,1306],"yaml":true},{"content":"This class corresponds to the `servicePointManager` attribute of the `settings`[\\&lt;servicePointManager\\&gt; Element (Network Settings)](~/docs/framework/configure-apps/file-schema/network/servicepointmanager-element-network-settings.md) configuration element.  \n  \n This class is used to specify the values that are used to initialize new <xref:System.Net.ServicePoint> objects.  \n  \n This class provides programmatic access to information that can be stored in configuration files.","nodes":[{"pos":[0,261],"content":"This class corresponds to the <ph id=\"ph1\">`servicePointManager`</ph> attribute of the <ph id=\"ph2\">`settings`</ph><bpt id=\"p1\">[</bpt><ph id=\"ph3\">\\&amp;</ph>lt;servicePointManager<ph id=\"ph4\">\\&amp;</ph>gt; Element (Network Settings)<ept id=\"p1\">](~/docs/framework/configure-apps/file-schema/network/servicepointmanager-element-network-settings.md)</ept> configuration element.","source":"This class corresponds to the `servicePointManager` attribute of the `settings`[\\&lt;servicePointManager\\&gt; Element (Network Settings)](~/docs/framework/configure-apps/file-schema/network/servicepointmanager-element-network-settings.md) configuration element."},{"pos":[268,380],"content":"This class is used to specify the values that are used to initialize new <xref:System.Net.ServicePoint> objects.","nodes":[{"content":"This class is used to specify the values that are used to initialize new <ph id=\"ph1\">&lt;xref:System.Net.ServicePoint&gt;</ph> objects.","pos":[0,112],"source":"This class is used to specify the values that are used to initialize new <xref:System.Net.ServicePoint> objects."}]},{"pos":[387,484],"content":"This class provides programmatic access to information that can be stored in configuration files.","nodes":[{"content":"This class provides programmatic access to information that can be stored in configuration files.","pos":[0,97]}]}],"pos":[1317,1810],"yaml":true,"extradata":"MT"},{"content":"Initializes a new instance of the <xref href=\"System.Net.Configuration.ServicePointManagerElement\"></xref> class.","nodes":[{"pos":[0,113],"content":"Initializes a new instance of the <ph id=\"ph1\">&lt;xref href=\"System.Net.Configuration.ServicePointManagerElement\"&gt;&lt;/xref&gt;</ph> class.","source":"Initializes a new instance of the <xref href=\"System.Net.Configuration.ServicePointManagerElement\"></xref> class."}],"pos":[5915,6029],"yaml":true},{"content":"Gets or sets a Boolean value that controls checking host name information in an X509 certificate.","nodes":[{"pos":[0,97],"content":"Gets or sets a Boolean value that controls checking host name information in an X509 certificate.","nodes":[{"content":"Gets or sets a Boolean value that controls checking host name information in an X509 certificate.","pos":[0,97]}]}],"pos":[7248,7346],"yaml":true},{"content":"`true` to specify host name checking; otherwise, `false`.","nodes":[{"pos":[0,57],"content":"<ph id=\"ph1\">`true`</ph> to specify host name checking; otherwise, <ph id=\"ph2\">`false`</ph>.","source":"`true` to specify host name checking; otherwise, `false`."}],"pos":[7608,7668],"yaml":true},{"content":"Gets or sets a Boolean value that indicates whether the certificate is checked against the certificate authority revocation list.","nodes":[{"pos":[0,129],"content":"Gets or sets a Boolean value that indicates whether the certificate is checked against the certificate authority revocation list.","nodes":[{"content":"Gets or sets a Boolean value that indicates whether the certificate is checked against the certificate authority revocation list.","pos":[0,129]}]}],"pos":[8958,9088],"yaml":true},{"content":"When this property is set to `true`, the certificate is checked against the certificate authority revocation list as part of the certificate validation process.","nodes":[{"pos":[0,160],"content":"When this property is set to <ph id=\"ph1\">`true`</ph>, the certificate is checked against the certificate authority revocation list as part of the certificate validation process.","source":"When this property is set to `true`, the certificate is checked against the certificate authority revocation list as part of the certificate validation process."}],"pos":[9099,9260],"yaml":true,"extradata":"MT"},{"content":"`true` if the certificate revocation list is checked; otherwise, `false`.The default value is `false`.","nodes":[{"pos":[0,102],"content":"<ph id=\"ph1\">`true`</ph> if the certificate revocation list is checked; otherwise, <ph id=\"ph2\">`false`</ph>.The default value is <ph id=\"ph3\">`false`</ph>.","source":"`true` if the certificate revocation list is checked; otherwise, `false`.The default value is `false`."}],"pos":[9542,9647],"yaml":true},{"content":"Gets or sets the amount of time after which address information is refreshed.","nodes":[{"pos":[0,77],"content":"Gets or sets the amount of time after which address information is refreshed.","nodes":[{"content":"Gets or sets the amount of time after which address information is refreshed.","pos":[0,77]}]}],"pos":[10869,10947],"yaml":true},{"content":"The value of this property sets the <xref:System.Net.ServicePointManager.DnsRefreshTimeout%2A> property.","nodes":[{"pos":[0,104],"content":"The value of this property sets the <xref:System.Net.ServicePointManager.DnsRefreshTimeout%2A> property.","nodes":[{"content":"The value of this property sets the <ph id=\"ph1\">&lt;xref:System.Net.ServicePointManager.DnsRefreshTimeout%2A&gt;</ph> property.","pos":[0,104],"source":"The value of this property sets the <xref:System.Net.ServicePointManager.DnsRefreshTimeout%2A> property."}]}],"pos":[10958,11063],"yaml":true,"extradata":"MT"},{"content":"A <xref href=\"System.TimeSpan\"></xref> that specifies when addresses are resolved using DNS.","nodes":[{"pos":[0,92],"content":"A <ph id=\"ph1\">&lt;xref href=\"System.TimeSpan\"&gt;&lt;/xref&gt;</ph> that specifies when addresses are resolved using DNS.","source":"A <xref href=\"System.TimeSpan\"></xref> that specifies when addresses are resolved using DNS."}],"pos":[11316,11409],"yaml":true},{"content":"Gets or sets a Boolean value that controls using different IP addresses on connections to the same server.","nodes":[{"pos":[0,106],"content":"Gets or sets a Boolean value that controls using different IP addresses on connections to the same server.","nodes":[{"content":"Gets or sets a Boolean value that controls using different IP addresses on connections to the same server.","pos":[0,106]}]}],"pos":[12630,12737],"yaml":true},{"content":"`true` to enable DNS round-robin behavior; otherwise, `false`.","nodes":[{"pos":[0,62],"content":"<ph id=\"ph1\">`true`</ph> to enable DNS round-robin behavior; otherwise, <ph id=\"ph2\">`false`</ph>.","source":"`true` to enable DNS round-robin behavior; otherwise, `false`."}],"pos":[12997,13062],"yaml":true},{"content":"Gets or sets the <xref href=\"System.Net.Security.EncryptionPolicy\"></xref> to use.","nodes":[{"pos":[0,82],"content":"Gets or sets the <ph id=\"ph1\">&lt;xref href=\"System.Net.Security.EncryptionPolicy\"&gt;&lt;/xref&gt;</ph> to use.","source":"Gets or sets the <xref href=\"System.Net.Security.EncryptionPolicy\"></xref> to use."}],"pos":[14267,14350],"yaml":true},{"content":"The <xref:System.Net.Security.EncryptionPolicy> property can require, allow, or prevent encryption. The <xref:System.Net.Security.EncryptionPolicy> will be applied to an SSL/TLS session. The use of the Null cipher is required when the encryption policy is set to <xref:System.Net.Security.EncryptionPolicy?displayProperty=fullName>.","nodes":[{"pos":[0,332],"content":"The <xref:System.Net.Security.EncryptionPolicy> property can require, allow, or prevent encryption. The <xref:System.Net.Security.EncryptionPolicy> will be applied to an SSL/TLS session. The use of the Null cipher is required when the encryption policy is set to <xref:System.Net.Security.EncryptionPolicy?displayProperty=fullName>.","nodes":[{"content":"The <xref:System.Net.Security.EncryptionPolicy> property can require, allow, or prevent encryption. The <xref:System.Net.Security.EncryptionPolicy> will be applied to an SSL/TLS session. The use of the Null cipher is required when the encryption policy is set to <xref:System.Net.Security.EncryptionPolicy?displayProperty=fullName>.","pos":[0,332],"nodes":[{"content":"The <ph id=\"ph1\">&lt;xref:System.Net.Security.EncryptionPolicy&gt;</ph> property can require, allow, or prevent encryption.","pos":[0,99],"source":"The <xref:System.Net.Security.EncryptionPolicy> property can require, allow, or prevent encryption."},{"content":"The <ph id=\"ph1\">&lt;xref:System.Net.Security.EncryptionPolicy&gt;</ph> will be applied to an SSL/TLS session.","pos":[100,186],"source":" The <xref:System.Net.Security.EncryptionPolicy> will be applied to an SSL/TLS session."},{"content":"The use of the Null cipher is required when the encryption policy is set to <ph id=\"ph1\">&lt;xref:System.Net.Security.EncryptionPolicy?displayProperty=fullName&gt;</ph>.","pos":[187,332],"source":" The use of the Null cipher is required when the encryption policy is set to <xref:System.Net.Security.EncryptionPolicy?displayProperty=fullName>."}]}]}],"pos":[14361,14694],"yaml":true,"extradata":"MT"},{"content":"The encryption policy to use for a <xref href=\"System.Net.ServicePointManager\"></xref> instance.","nodes":[{"pos":[0,96],"content":"The encryption policy to use for a <ph id=\"ph1\">&lt;xref href=\"System.Net.ServicePointManager\"&gt;&lt;/xref&gt;</ph> instance.","source":"The encryption policy to use for a <xref href=\"System.Net.ServicePointManager\"></xref> instance."}],"pos":[15002,15099],"yaml":true},{"content":"Gets or sets a Boolean value that determines whether 100-Continue behavior is used.","nodes":[{"pos":[0,83],"content":"Gets or sets a Boolean value that determines whether 100-Continue behavior is used.","nodes":[{"content":"Gets or sets a Boolean value that determines whether 100-Continue behavior is used.","pos":[0,83]}]}],"pos":[16269,16353],"yaml":true},{"content":"When this property is set to `true`, client requests that use the `POST` method expect to receive a 100-Continue response from the server to indicate that the client should send the data to be posted. This mechanism allows clients to avoid sending large amounts of data over the network when the server, based on the request headers, intends to reject the request.  \n  \n For additional information, see <xref:System.Net.ServicePointManager.Expect100Continue%2A?displayProperty=fullName>.","nodes":[{"pos":[0,364],"content":"When this property is set to `true`, client requests that use the `POST` method expect to receive a 100-Continue response from the server to indicate that the client should send the data to be posted. This mechanism allows clients to avoid sending large amounts of data over the network when the server, based on the request headers, intends to reject the request.","nodes":[{"content":"When this property is set to <ph id=\"ph1\">`true`</ph>, client requests that use the <ph id=\"ph2\">`POST`</ph> method expect to receive a 100-Continue response from the server to indicate that the client should send the data to be posted.","pos":[0,200],"source":"When this property is set to `true`, client requests that use the `POST` method expect to receive a 100-Continue response from the server to indicate that the client should send the data to be posted."},{"content":"This mechanism allows clients to avoid sending large amounts of data over the network when the server, based on the request headers, intends to reject the request.","pos":[201,364]}]},{"pos":[371,487],"content":"For additional information, see <xref:System.Net.ServicePointManager.Expect100Continue%2A?displayProperty=fullName>.","nodes":[{"content":"For additional information, see <ph id=\"ph1\">&lt;xref:System.Net.ServicePointManager.Expect100Continue%2A?displayProperty=fullName&gt;</ph>.","pos":[0,116],"source":"For additional information, see <xref:System.Net.ServicePointManager.Expect100Continue%2A?displayProperty=fullName>."}]}],"pos":[16364,16856],"yaml":true,"extradata":"MT"},{"content":"`true` to expect 100-Continue responses for `POST` requests; otherwise, `false`. The default value is `true`.","nodes":[{"pos":[0,109],"content":"`true` to expect 100-Continue responses for `POST` requests; otherwise, `false`. The default value is `true`.","nodes":[{"content":"<ph id=\"ph1\">`true`</ph> to expect 100-Continue responses for <ph id=\"ph2\">`POST`</ph> requests; otherwise, <ph id=\"ph3\">`false`</ph>.","pos":[0,80],"source":"`true` to expect 100-Continue responses for `POST` requests; otherwise, `false`."},{"content":"The default value is <ph id=\"ph1\">`true`</ph>.","pos":[81,109],"source":" The default value is `true`."}]}],"pos":[17112,17224],"yaml":true},{"content":"Gets or sets a Boolean value that determines whether the Nagle algorithm is used.","nodes":[{"pos":[0,81],"content":"Gets or sets a Boolean value that determines whether the Nagle algorithm is used.","nodes":[{"content":"Gets or sets a Boolean value that determines whether the Nagle algorithm is used.","pos":[0,81]}]}],"pos":[20918,21000],"yaml":true},{"content":"The Nagle algorithm is used to reduce network traffic by buffering small packets of data and transmitting them as a single packet. This process is also referred to as \"nagling\"; it is widely used because it reduces the number of packets transmitted and lowers the overhead per packet.","nodes":[{"pos":[0,284],"content":"The Nagle algorithm is used to reduce network traffic by buffering small packets of data and transmitting them as a single packet. This process is also referred to as \"nagling\"; it is widely used because it reduces the number of packets transmitted and lowers the overhead per packet.","nodes":[{"content":"The Nagle algorithm is used to reduce network traffic by buffering small packets of data and transmitting them as a single packet. This process is also referred to as \"nagling\"; it is widely used because it reduces the number of packets transmitted and lowers the overhead per packet.","pos":[0,284],"nodes":[{"content":"The Nagle algorithm is used to reduce network traffic by buffering small packets of data and transmitting them as a single packet.","pos":[0,130]},{"content":"This process is also referred to as \"nagling\"; it is widely used because it reduces the number of packets transmitted and lowers the overhead per packet.","pos":[131,284]}]}]}],"pos":[21011,21296],"yaml":true,"extradata":"MT"},{"content":"`true` to use the Nagle algorithm; otherwise, `false`. The default value is `true`.","nodes":[{"pos":[0,83],"content":"`true` to use the Nagle algorithm; otherwise, `false`. The default value is `true`.","nodes":[{"content":"<ph id=\"ph1\">`true`</ph> to use the Nagle algorithm; otherwise, <ph id=\"ph2\">`false`</ph>.","pos":[0,54],"source":"`true` to use the Nagle algorithm; otherwise, `false`."},{"content":"The default value is <ph id=\"ph1\">`true`</ph>.","pos":[55,83],"source":" The default value is `true`."}]}],"pos":[21552,21638],"yaml":true}],"content":"### YamlMime:ManagedReference\nitems:\n- uid: System.Net.Configuration.ServicePointManagerElement\n  commentId: T:System.Net.Configuration.ServicePointManagerElement\n  id: ServicePointManagerElement\n  children:\n  - System.Net.Configuration.ServicePointManagerElement.#ctor\n  - System.Net.Configuration.ServicePointManagerElement.CheckCertificateName\n  - System.Net.Configuration.ServicePointManagerElement.CheckCertificateRevocationList\n  - System.Net.Configuration.ServicePointManagerElement.DnsRefreshTimeout\n  - System.Net.Configuration.ServicePointManagerElement.EnableDnsRoundRobin\n  - System.Net.Configuration.ServicePointManagerElement.EncryptionPolicy\n  - System.Net.Configuration.ServicePointManagerElement.Expect100Continue\n  - System.Net.Configuration.ServicePointManagerElement.PostDeserialize\n  - System.Net.Configuration.ServicePointManagerElement.Properties\n  - System.Net.Configuration.ServicePointManagerElement.UseNagleAlgorithm\n  langs:\n  - csharp\n  name: ServicePointManagerElement\n  nameWithType: ServicePointManagerElement\n  fullName: System.Net.Configuration.ServicePointManagerElement\n  type: Class\n  assemblies:\n  - System\n  namespace: System.Net.Configuration\n  summary: Represents the default settings used to create connections to a remote computer. This class cannot be inherited.\n  remarks: \"This class corresponds to the `servicePointManager` attribute of the `settings`[\\\\&lt;servicePointManager\\\\&gt; Element (Network Settings)](~/docs/framework/configure-apps/file-schema/network/servicepointmanager-element-network-settings.md) configuration element.  \\n  \\n This class is used to specify the values that are used to initialize new <xref:System.Net.ServicePoint> objects.  \\n  \\n This class provides programmatic access to information that can be stored in configuration files.\"\n  syntax:\n    content: 'public sealed class ServicePointManagerElement : System.Configuration.ConfigurationElement'\n  inheritance:\n  - System.Object\n  - System.Configuration.ConfigurationElement\n  implements: []\n  inheritedMembers:\n  - System.Configuration.ConfigurationElement.CurrentConfiguration\n  - System.Configuration.ConfigurationElement.DeserializeElement(System.Xml.XmlReader,System.Boolean)\n  - System.Configuration.ConfigurationElement.ElementInformation\n  - System.Configuration.ConfigurationElement.ElementProperty\n  - System.Configuration.ConfigurationElement.Equals(System.Object)\n  - System.Configuration.ConfigurationElement.EvaluationContext\n  - System.Configuration.ConfigurationElement.GetHashCode\n  - System.Configuration.ConfigurationElement.GetTransformedAssemblyString(System.String)\n  - System.Configuration.ConfigurationElement.GetTransformedTypeString(System.String)\n  - System.Configuration.ConfigurationElement.HasContext\n  - System.Configuration.ConfigurationElement.Init\n  - System.Configuration.ConfigurationElement.InitializeDefault\n  - System.Configuration.ConfigurationElement.IsModified\n  - System.Configuration.ConfigurationElement.IsReadOnly\n  - System.Configuration.ConfigurationElement.Item(System.Configuration.ConfigurationProperty)\n  - System.Configuration.ConfigurationElement.Item(System.String)\n  - System.Configuration.ConfigurationElement.ListErrors(System.Collections.IList)\n  - System.Configuration.ConfigurationElement.LockAllAttributesExcept\n  - System.Configuration.ConfigurationElement.LockAllElementsExcept\n  - System.Configuration.ConfigurationElement.LockAttributes\n  - System.Configuration.ConfigurationElement.LockElements\n  - System.Configuration.ConfigurationElement.LockItem\n  - System.Configuration.ConfigurationElement.OnDeserializeUnrecognizedAttribute(System.String,System.String)\n  - System.Configuration.ConfigurationElement.OnDeserializeUnrecognizedElement(System.String,System.Xml.XmlReader)\n  - System.Configuration.ConfigurationElement.OnRequiredPropertyNotFound(System.String)\n  - System.Configuration.ConfigurationElement.PreSerialize(System.Xml.XmlWriter)\n  - System.Configuration.ConfigurationElement.Reset(System.Configuration.ConfigurationElement)\n  - System.Configuration.ConfigurationElement.ResetModified\n  - System.Configuration.ConfigurationElement.SerializeElement(System.Xml.XmlWriter,System.Boolean)\n  - System.Configuration.ConfigurationElement.SerializeToXmlElement(System.Xml.XmlWriter,System.String)\n  - System.Configuration.ConfigurationElement.SetPropertyValue(System.Configuration.ConfigurationProperty,System.Object,System.Boolean)\n  - System.Configuration.ConfigurationElement.SetReadOnly\n  - System.Configuration.ConfigurationElement.Unmerge(System.Configuration.ConfigurationElement,System.Configuration.ConfigurationElement,System.Configuration.ConfigurationSaveMode)\n  - System.Object.Equals(System.Object,System.Object)\n  - System.Object.GetType\n  - System.Object.MemberwiseClone\n  - System.Object.ReferenceEquals(System.Object,System.Object)\n  - System.Object.ToString\n  version:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - xamarinmac-3.0\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - xamarinmac-3.0\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Net.Configuration/ServicePointManagerElement.xml\n  ms.author: bobdel\n  manager: markl\n- uid: System.Net.Configuration.ServicePointManagerElement.#ctor\n  commentId: M:System.Net.Configuration.ServicePointManagerElement.#ctor\n  id: '#ctor'\n  parent: System.Net.Configuration.ServicePointManagerElement\n  langs:\n  - csharp\n  name: ServicePointManagerElement()\n  nameWithType: ServicePointManagerElement.ServicePointManagerElement()\n  fullName: ServicePointManagerElement.ServicePointManagerElement()\n  type: Constructor\n  assemblies:\n  - System\n  namespace: System.Net.Configuration\n  summary: Initializes a new instance of the <xref href=\"System.Net.Configuration.ServicePointManagerElement\"></xref> class.\n  syntax:\n    content: public ServicePointManagerElement ();\n    parameters: []\n  overload: System.Net.Configuration.ServicePointManagerElement.#ctor*\n  exceptions: []\n  version:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - xamarinmac-3.0\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - xamarinmac-3.0\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Net.Configuration/ServicePointManagerElement.xml\n  ms.author: bobdel\n  manager: markl\n- uid: System.Net.Configuration.ServicePointManagerElement.CheckCertificateName\n  commentId: P:System.Net.Configuration.ServicePointManagerElement.CheckCertificateName\n  id: CheckCertificateName\n  parent: System.Net.Configuration.ServicePointManagerElement\n  langs:\n  - csharp\n  name: CheckCertificateName\n  nameWithType: ServicePointManagerElement.CheckCertificateName\n  fullName: ServicePointManagerElement.CheckCertificateName\n  type: Property\n  assemblies:\n  - System\n  namespace: System.Net.Configuration\n  summary: Gets or sets a Boolean value that controls checking host name information in an X509 certificate.\n  syntax:\n    content: >-\n      [System.Configuration.ConfigurationProperty(\"checkCertificateName\", DefaultValue=Mono.Cecil.CustomAttributeArgument)]\n\n      public bool CheckCertificateName { get; set; }\n    return:\n      type: System.Boolean\n      description: '`true` to specify host name checking; otherwise, `false`.'\n  overload: System.Net.Configuration.ServicePointManagerElement.CheckCertificateName*\n  exceptions: []\n  attributes:\n  - type: System.Configuration.ConfigurationPropertyAttribute\n  version:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - xamarinmac-3.0\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - xamarinmac-3.0\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Net.Configuration/ServicePointManagerElement.xml\n  ms.author: bobdel\n  manager: markl\n- uid: System.Net.Configuration.ServicePointManagerElement.CheckCertificateRevocationList\n  commentId: P:System.Net.Configuration.ServicePointManagerElement.CheckCertificateRevocationList\n  id: CheckCertificateRevocationList\n  parent: System.Net.Configuration.ServicePointManagerElement\n  langs:\n  - csharp\n  name: CheckCertificateRevocationList\n  nameWithType: ServicePointManagerElement.CheckCertificateRevocationList\n  fullName: ServicePointManagerElement.CheckCertificateRevocationList\n  type: Property\n  assemblies:\n  - System\n  namespace: System.Net.Configuration\n  summary: Gets or sets a Boolean value that indicates whether the certificate is checked against the certificate authority revocation list.\n  remarks: When this property is set to `true`, the certificate is checked against the certificate authority revocation list as part of the certificate validation process.\n  syntax:\n    content: >-\n      [System.Configuration.ConfigurationProperty(\"checkCertificateRevocationList\", DefaultValue=Mono.Cecil.CustomAttributeArgument)]\n\n      public bool CheckCertificateRevocationList { get; set; }\n    return:\n      type: System.Boolean\n      description: '`true` if the certificate revocation list is checked; otherwise, `false`.The default value is `false`.'\n  overload: System.Net.Configuration.ServicePointManagerElement.CheckCertificateRevocationList*\n  exceptions: []\n  attributes:\n  - type: System.Configuration.ConfigurationPropertyAttribute\n  version:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - xamarinmac-3.0\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - xamarinmac-3.0\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Net.Configuration/ServicePointManagerElement.xml\n  ms.author: bobdel\n  manager: markl\n- uid: System.Net.Configuration.ServicePointManagerElement.DnsRefreshTimeout\n  commentId: P:System.Net.Configuration.ServicePointManagerElement.DnsRefreshTimeout\n  id: DnsRefreshTimeout\n  parent: System.Net.Configuration.ServicePointManagerElement\n  langs:\n  - csharp\n  name: DnsRefreshTimeout\n  nameWithType: ServicePointManagerElement.DnsRefreshTimeout\n  fullName: ServicePointManagerElement.DnsRefreshTimeout\n  type: Property\n  assemblies:\n  - System\n  namespace: System.Net.Configuration\n  summary: Gets or sets the amount of time after which address information is refreshed.\n  remarks: The value of this property sets the <xref:System.Net.ServicePointManager.DnsRefreshTimeout%2A> property.\n  syntax:\n    content: >-\n      [System.Configuration.ConfigurationProperty(\"dnsRefreshTimeout\", DefaultValue=Mono.Cecil.CustomAttributeArgument)]\n\n      public int DnsRefreshTimeout { get; set; }\n    return:\n      type: System.Int32\n      description: A <xref href=\"System.TimeSpan\"></xref> that specifies when addresses are resolved using DNS.\n  overload: System.Net.Configuration.ServicePointManagerElement.DnsRefreshTimeout*\n  exceptions: []\n  attributes:\n  - type: System.Configuration.ConfigurationPropertyAttribute\n  version:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - xamarinmac-3.0\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - xamarinmac-3.0\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Net.Configuration/ServicePointManagerElement.xml\n  ms.author: bobdel\n  manager: markl\n- uid: System.Net.Configuration.ServicePointManagerElement.EnableDnsRoundRobin\n  commentId: P:System.Net.Configuration.ServicePointManagerElement.EnableDnsRoundRobin\n  id: EnableDnsRoundRobin\n  parent: System.Net.Configuration.ServicePointManagerElement\n  langs:\n  - csharp\n  name: EnableDnsRoundRobin\n  nameWithType: ServicePointManagerElement.EnableDnsRoundRobin\n  fullName: ServicePointManagerElement.EnableDnsRoundRobin\n  type: Property\n  assemblies:\n  - System\n  namespace: System.Net.Configuration\n  summary: Gets or sets a Boolean value that controls using different IP addresses on connections to the same server.\n  syntax:\n    content: >-\n      [System.Configuration.ConfigurationProperty(\"enableDnsRoundRobin\", DefaultValue=Mono.Cecil.CustomAttributeArgument)]\n\n      public bool EnableDnsRoundRobin { get; set; }\n    return:\n      type: System.Boolean\n      description: '`true` to enable DNS round-robin behavior; otherwise, `false`.'\n  overload: System.Net.Configuration.ServicePointManagerElement.EnableDnsRoundRobin*\n  exceptions: []\n  attributes:\n  - type: System.Configuration.ConfigurationPropertyAttribute\n  version:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - xamarinmac-3.0\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - xamarinmac-3.0\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Net.Configuration/ServicePointManagerElement.xml\n  ms.author: bobdel\n  manager: markl\n- uid: System.Net.Configuration.ServicePointManagerElement.EncryptionPolicy\n  commentId: P:System.Net.Configuration.ServicePointManagerElement.EncryptionPolicy\n  id: EncryptionPolicy\n  parent: System.Net.Configuration.ServicePointManagerElement\n  langs:\n  - csharp\n  name: EncryptionPolicy\n  nameWithType: ServicePointManagerElement.EncryptionPolicy\n  fullName: ServicePointManagerElement.EncryptionPolicy\n  type: Property\n  assemblies:\n  - System\n  namespace: System.Net.Configuration\n  summary: Gets or sets the <xref href=\"System.Net.Security.EncryptionPolicy\"></xref> to use.\n  remarks: The <xref:System.Net.Security.EncryptionPolicy> property can require, allow, or prevent encryption. The <xref:System.Net.Security.EncryptionPolicy> will be applied to an SSL/TLS session. The use of the Null cipher is required when the encryption policy is set to <xref:System.Net.Security.EncryptionPolicy?displayProperty=fullName>.\n  syntax:\n    content: >-\n      [System.Configuration.ConfigurationProperty(\"encryptionPolicy\", DefaultValue=Mono.Cecil.CustomAttributeArgument)]\n\n      public System.Net.Security.EncryptionPolicy EncryptionPolicy { get; set; }\n    return:\n      type: System.Net.Security.EncryptionPolicy\n      description: The encryption policy to use for a <xref href=\"System.Net.ServicePointManager\"></xref> instance.\n  overload: System.Net.Configuration.ServicePointManagerElement.EncryptionPolicy*\n  exceptions: []\n  attributes:\n  - type: System.Configuration.ConfigurationPropertyAttribute\n  version:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Net.Configuration/ServicePointManagerElement.xml\n  ms.author: bobdel\n  manager: markl\n- uid: System.Net.Configuration.ServicePointManagerElement.Expect100Continue\n  commentId: P:System.Net.Configuration.ServicePointManagerElement.Expect100Continue\n  id: Expect100Continue\n  parent: System.Net.Configuration.ServicePointManagerElement\n  langs:\n  - csharp\n  name: Expect100Continue\n  nameWithType: ServicePointManagerElement.Expect100Continue\n  fullName: ServicePointManagerElement.Expect100Continue\n  type: Property\n  assemblies:\n  - System\n  namespace: System.Net.Configuration\n  summary: Gets or sets a Boolean value that determines whether 100-Continue behavior is used.\n  remarks: \"When this property is set to `true`, client requests that use the `POST` method expect to receive a 100-Continue response from the server to indicate that the client should send the data to be posted. This mechanism allows clients to avoid sending large amounts of data over the network when the server, based on the request headers, intends to reject the request.  \\n  \\n For additional information, see <xref:System.Net.ServicePointManager.Expect100Continue%2A?displayProperty=fullName>.\"\n  syntax:\n    content: >-\n      [System.Configuration.ConfigurationProperty(\"expect100Continue\", DefaultValue=Mono.Cecil.CustomAttributeArgument)]\n\n      public bool Expect100Continue { get; set; }\n    return:\n      type: System.Boolean\n      description: '`true` to expect 100-Continue responses for `POST` requests; otherwise, `false`. The default value is `true`.'\n  overload: System.Net.Configuration.ServicePointManagerElement.Expect100Continue*\n  exceptions: []\n  attributes:\n  - type: System.Configuration.ConfigurationPropertyAttribute\n  version:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - xamarinmac-3.0\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - xamarinmac-3.0\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Net.Configuration/ServicePointManagerElement.xml\n  ms.author: bobdel\n  manager: markl\n- uid: System.Net.Configuration.ServicePointManagerElement.PostDeserialize\n  commentId: M:System.Net.Configuration.ServicePointManagerElement.PostDeserialize\n  id: PostDeserialize\n  parent: System.Net.Configuration.ServicePointManagerElement\n  langs:\n  - csharp\n  name: PostDeserialize()\n  nameWithType: ServicePointManagerElement.PostDeserialize()\n  fullName: ServicePointManagerElement.PostDeserialize()\n  type: Method\n  assemblies:\n  - System\n  namespace: System.Net.Configuration\n  syntax:\n    content: >-\n      [System.MonoTODO]\n\n      protected override void PostDeserialize ();\n    parameters: []\n  overload: System.Net.Configuration.ServicePointManagerElement.PostDeserialize*\n  exceptions: []\n  attributes:\n  - type: System.MonoTODO\n  version:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - xamarinmac-3.0\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - xamarinmac-3.0\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Net.Configuration/ServicePointManagerElement.xml\n- uid: System.Net.Configuration.ServicePointManagerElement.Properties\n  commentId: P:System.Net.Configuration.ServicePointManagerElement.Properties\n  id: Properties\n  parent: System.Net.Configuration.ServicePointManagerElement\n  langs:\n  - csharp\n  name: Properties\n  nameWithType: ServicePointManagerElement.Properties\n  fullName: ServicePointManagerElement.Properties\n  type: Property\n  assemblies:\n  - System\n  namespace: System.Net.Configuration\n  syntax:\n    content: protected override System.Configuration.ConfigurationPropertyCollection Properties { get; }\n    return:\n      type: System.Configuration.ConfigurationPropertyCollection\n      description: ''\n  overload: System.Net.Configuration.ServicePointManagerElement.Properties*\n  exceptions: []\n  version:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - xamarinmac-3.0\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - xamarinmac-3.0\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Net.Configuration/ServicePointManagerElement.xml\n- uid: System.Net.Configuration.ServicePointManagerElement.UseNagleAlgorithm\n  commentId: P:System.Net.Configuration.ServicePointManagerElement.UseNagleAlgorithm\n  id: UseNagleAlgorithm\n  parent: System.Net.Configuration.ServicePointManagerElement\n  langs:\n  - csharp\n  name: UseNagleAlgorithm\n  nameWithType: ServicePointManagerElement.UseNagleAlgorithm\n  fullName: ServicePointManagerElement.UseNagleAlgorithm\n  type: Property\n  assemblies:\n  - System\n  namespace: System.Net.Configuration\n  summary: Gets or sets a Boolean value that determines whether the Nagle algorithm is used.\n  remarks: The Nagle algorithm is used to reduce network traffic by buffering small packets of data and transmitting them as a single packet. This process is also referred to as \"nagling\"; it is widely used because it reduces the number of packets transmitted and lowers the overhead per packet.\n  syntax:\n    content: >-\n      [System.Configuration.ConfigurationProperty(\"useNagleAlgorithm\", DefaultValue=Mono.Cecil.CustomAttributeArgument)]\n\n      public bool UseNagleAlgorithm { get; set; }\n    return:\n      type: System.Boolean\n      description: '`true` to use the Nagle algorithm; otherwise, `false`. The default value is `true`.'\n  overload: System.Net.Configuration.ServicePointManagerElement.UseNagleAlgorithm*\n  exceptions: []\n  attributes:\n  - type: System.Configuration.ConfigurationPropertyAttribute\n  version:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - xamarinmac-3.0\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - xamarinmac-3.0\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Net.Configuration/ServicePointManagerElement.xml\n  ms.author: bobdel\n  manager: markl\nreferences:\n- uid: System.Configuration.ConfigurationElement\n  parent: System.Configuration\n  isExternal: false\n  name: ConfigurationElement\n  nameWithType: ConfigurationElement\n  fullName: System.Configuration.ConfigurationElement\n- uid: System.Net.Configuration.ServicePointManagerElement.#ctor\n  parent: System.Net.Configuration.ServicePointManagerElement\n  isExternal: false\n  name: ServicePointManagerElement()\n  nameWithType: ServicePointManagerElement.ServicePointManagerElement()\n  fullName: ServicePointManagerElement.ServicePointManagerElement()\n- uid: System.Net.Configuration.ServicePointManagerElement.CheckCertificateName\n  parent: System.Net.Configuration.ServicePointManagerElement\n  isExternal: false\n  name: CheckCertificateName\n  nameWithType: ServicePointManagerElement.CheckCertificateName\n  fullName: ServicePointManagerElement.CheckCertificateName\n- uid: System.Boolean\n  parent: System\n  isExternal: false\n  name: Boolean\n  nameWithType: Boolean\n  fullName: System.Boolean\n- uid: System.Net.Configuration.ServicePointManagerElement.CheckCertificateRevocationList\n  parent: System.Net.Configuration.ServicePointManagerElement\n  isExternal: false\n  name: CheckCertificateRevocationList\n  nameWithType: ServicePointManagerElement.CheckCertificateRevocationList\n  fullName: ServicePointManagerElement.CheckCertificateRevocationList\n- uid: System.Net.Configuration.ServicePointManagerElement.DnsRefreshTimeout\n  parent: System.Net.Configuration.ServicePointManagerElement\n  isExternal: false\n  name: DnsRefreshTimeout\n  nameWithType: ServicePointManagerElement.DnsRefreshTimeout\n  fullName: ServicePointManagerElement.DnsRefreshTimeout\n- uid: System.Int32\n  parent: System\n  isExternal: false\n  name: Int32\n  nameWithType: Int32\n  fullName: System.Int32\n- uid: System.Net.Configuration.ServicePointManagerElement.EnableDnsRoundRobin\n  parent: System.Net.Configuration.ServicePointManagerElement\n  isExternal: false\n  name: EnableDnsRoundRobin\n  nameWithType: ServicePointManagerElement.EnableDnsRoundRobin\n  fullName: ServicePointManagerElement.EnableDnsRoundRobin\n- uid: System.Net.Configuration.ServicePointManagerElement.EncryptionPolicy\n  parent: System.Net.Configuration.ServicePointManagerElement\n  isExternal: false\n  name: EncryptionPolicy\n  nameWithType: ServicePointManagerElement.EncryptionPolicy\n  fullName: ServicePointManagerElement.EncryptionPolicy\n- uid: System.Net.Security.EncryptionPolicy\n  parent: System.Net.Security\n  isExternal: false\n  name: EncryptionPolicy\n  nameWithType: EncryptionPolicy\n  fullName: System.Net.Security.EncryptionPolicy\n- uid: System.Net.Configuration.ServicePointManagerElement.Expect100Continue\n  parent: System.Net.Configuration.ServicePointManagerElement\n  isExternal: false\n  name: Expect100Continue\n  nameWithType: ServicePointManagerElement.Expect100Continue\n  fullName: ServicePointManagerElement.Expect100Continue\n- uid: System.Net.Configuration.ServicePointManagerElement.PostDeserialize\n  parent: System.Net.Configuration.ServicePointManagerElement\n  isExternal: false\n  name: PostDeserialize()\n  nameWithType: ServicePointManagerElement.PostDeserialize()\n  fullName: ServicePointManagerElement.PostDeserialize()\n- uid: System.Net.Configuration.ServicePointManagerElement.Properties\n  parent: System.Net.Configuration.ServicePointManagerElement\n  isExternal: false\n  name: Properties\n  nameWithType: ServicePointManagerElement.Properties\n  fullName: ServicePointManagerElement.Properties\n- uid: System.Configuration.ConfigurationPropertyCollection\n  parent: System.Configuration\n  isExternal: false\n  name: ConfigurationPropertyCollection\n  nameWithType: ConfigurationPropertyCollection\n  fullName: System.Configuration.ConfigurationPropertyCollection\n- uid: System.Net.Configuration.ServicePointManagerElement.UseNagleAlgorithm\n  parent: System.Net.Configuration.ServicePointManagerElement\n  isExternal: false\n  name: UseNagleAlgorithm\n  nameWithType: ServicePointManagerElement.UseNagleAlgorithm\n  fullName: ServicePointManagerElement.UseNagleAlgorithm\n- uid: System.Net.Configuration.ServicePointManagerElement.#ctor*\n  parent: System.Net.Configuration.ServicePointManagerElement\n  isExternal: false\n  name: ServicePointManagerElement\n  nameWithType: ServicePointManagerElement.ServicePointManagerElement\n  fullName: ServicePointManagerElement.ServicePointManagerElement\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - xamarinmac-3.0\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Net.Configuration/ServicePointManagerElement.xml\n- uid: System.Net.Configuration.ServicePointManagerElement.CheckCertificateName*\n  parent: System.Net.Configuration.ServicePointManagerElement\n  isExternal: false\n  name: CheckCertificateName\n  nameWithType: ServicePointManagerElement.CheckCertificateName\n  fullName: ServicePointManagerElement.CheckCertificateName\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - xamarinmac-3.0\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Net.Configuration/ServicePointManagerElement.xml\n- uid: System.Net.Configuration.ServicePointManagerElement.CheckCertificateRevocationList*\n  parent: System.Net.Configuration.ServicePointManagerElement\n  isExternal: false\n  name: CheckCertificateRevocationList\n  nameWithType: ServicePointManagerElement.CheckCertificateRevocationList\n  fullName: ServicePointManagerElement.CheckCertificateRevocationList\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - xamarinmac-3.0\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Net.Configuration/ServicePointManagerElement.xml\n- uid: System.Net.Configuration.ServicePointManagerElement.DnsRefreshTimeout*\n  parent: System.Net.Configuration.ServicePointManagerElement\n  isExternal: false\n  name: DnsRefreshTimeout\n  nameWithType: ServicePointManagerElement.DnsRefreshTimeout\n  fullName: ServicePointManagerElement.DnsRefreshTimeout\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - xamarinmac-3.0\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Net.Configuration/ServicePointManagerElement.xml\n- uid: System.Net.Configuration.ServicePointManagerElement.EnableDnsRoundRobin*\n  parent: System.Net.Configuration.ServicePointManagerElement\n  isExternal: false\n  name: EnableDnsRoundRobin\n  nameWithType: ServicePointManagerElement.EnableDnsRoundRobin\n  fullName: ServicePointManagerElement.EnableDnsRoundRobin\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - xamarinmac-3.0\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Net.Configuration/ServicePointManagerElement.xml\n- uid: System.Net.Configuration.ServicePointManagerElement.EncryptionPolicy*\n  parent: System.Net.Configuration.ServicePointManagerElement\n  isExternal: false\n  name: EncryptionPolicy\n  nameWithType: ServicePointManagerElement.EncryptionPolicy\n  fullName: ServicePointManagerElement.EncryptionPolicy\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Net.Configuration/ServicePointManagerElement.xml\n- uid: System.Net.Configuration.ServicePointManagerElement.Expect100Continue*\n  parent: System.Net.Configuration.ServicePointManagerElement\n  isExternal: false\n  name: Expect100Continue\n  nameWithType: ServicePointManagerElement.Expect100Continue\n  fullName: ServicePointManagerElement.Expect100Continue\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - xamarinmac-3.0\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Net.Configuration/ServicePointManagerElement.xml\n- uid: System.Net.Configuration.ServicePointManagerElement.PostDeserialize*\n  parent: System.Net.Configuration.ServicePointManagerElement\n  isExternal: false\n  name: PostDeserialize\n  nameWithType: ServicePointManagerElement.PostDeserialize\n  fullName: ServicePointManagerElement.PostDeserialize\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - xamarinmac-3.0\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Net.Configuration/ServicePointManagerElement.xml\n- uid: System.Net.Configuration.ServicePointManagerElement.Properties*\n  parent: System.Net.Configuration.ServicePointManagerElement\n  isExternal: false\n  name: Properties\n  nameWithType: ServicePointManagerElement.Properties\n  fullName: ServicePointManagerElement.Properties\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - xamarinmac-3.0\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Net.Configuration/ServicePointManagerElement.xml\n- uid: System.Net.Configuration.ServicePointManagerElement.UseNagleAlgorithm*\n  parent: System.Net.Configuration.ServicePointManagerElement\n  isExternal: false\n  name: UseNagleAlgorithm\n  nameWithType: ServicePointManagerElement.UseNagleAlgorithm\n  fullName: ServicePointManagerElement.UseNagleAlgorithm\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - xamarinmac-3.0\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Net.Configuration/ServicePointManagerElement.xml\n- uid: System.Configuration.ConfigurationElement.Equals(System.Object)\n  parent: System.Configuration.ConfigurationElement\n  isExternal: false\n  name: Equals(Object)\n  nameWithType: ConfigurationElement.Equals(Object)\n  fullName: ConfigurationElement.Equals(Object)\n- uid: System.Object.Equals(System.Object,System.Object)\n  parent: System.Object\n  isExternal: false\n  name: Equals(Object, Object)\n  nameWithType: Object.Equals(Object, Object)\n  fullName: Object.Equals(Object, Object)\n- uid: System.Configuration.ConfigurationElement.GetHashCode\n  parent: System.Configuration.ConfigurationElement\n  isExternal: false\n  name: GetHashCode()\n  nameWithType: ConfigurationElement.GetHashCode()\n  fullName: ConfigurationElement.GetHashCode()\n- uid: System.Object.GetType\n  parent: System.Object\n  isExternal: false\n  name: GetType()\n  nameWithType: Object.GetType()\n  fullName: Object.GetType()\n- uid: System.Object.MemberwiseClone\n  parent: System.Object\n  isExternal: false\n  name: MemberwiseClone()\n  nameWithType: Object.MemberwiseClone()\n  fullName: Object.MemberwiseClone()\n- uid: System.Object.ReferenceEquals(System.Object,System.Object)\n  parent: System.Object\n  isExternal: false\n  name: ReferenceEquals(Object, Object)\n  nameWithType: Object.ReferenceEquals(Object, Object)\n  fullName: Object.ReferenceEquals(Object, Object)\n- uid: System.Object.ToString\n  parent: System.Object\n  isExternal: false\n  name: ToString()\n  nameWithType: Object.ToString()\n  fullName: Object.ToString()\n- uid: System.Configuration.ConfigurationElement.CurrentConfiguration\n  parent: System.Configuration.ConfigurationElement\n  isExternal: false\n  name: CurrentConfiguration\n  nameWithType: ConfigurationElement.CurrentConfiguration\n  fullName: ConfigurationElement.CurrentConfiguration\n- uid: System.Configuration.ConfigurationElement.DeserializeElement(System.Xml.XmlReader,System.Boolean)\n  parent: System.Configuration.ConfigurationElement\n  isExternal: false\n  name: DeserializeElement(XmlReader, Boolean)\n  nameWithType: ConfigurationElement.DeserializeElement(XmlReader, Boolean)\n  fullName: ConfigurationElement.DeserializeElement(XmlReader, Boolean)\n- uid: System.Configuration.ConfigurationElement.ElementInformation\n  parent: System.Configuration.ConfigurationElement\n  isExternal: false\n  name: ElementInformation\n  nameWithType: ConfigurationElement.ElementInformation\n  fullName: ConfigurationElement.ElementInformation\n- uid: System.Configuration.ConfigurationElement.ElementProperty\n  parent: System.Configuration.ConfigurationElement\n  isExternal: false\n  name: ElementProperty\n  nameWithType: ConfigurationElement.ElementProperty\n  fullName: ConfigurationElement.ElementProperty\n- uid: System.Configuration.ConfigurationElement.EvaluationContext\n  parent: System.Configuration.ConfigurationElement\n  isExternal: false\n  name: EvaluationContext\n  nameWithType: ConfigurationElement.EvaluationContext\n  fullName: ConfigurationElement.EvaluationContext\n- uid: System.Configuration.ConfigurationElement.GetTransformedAssemblyString(System.String)\n  parent: System.Configuration.ConfigurationElement\n  isExternal: false\n  name: GetTransformedAssemblyString(String)\n  nameWithType: ConfigurationElement.GetTransformedAssemblyString(String)\n  fullName: ConfigurationElement.GetTransformedAssemblyString(String)\n- uid: System.Configuration.ConfigurationElement.GetTransformedTypeString(System.String)\n  parent: System.Configuration.ConfigurationElement\n  isExternal: false\n  name: GetTransformedTypeString(String)\n  nameWithType: ConfigurationElement.GetTransformedTypeString(String)\n  fullName: ConfigurationElement.GetTransformedTypeString(String)\n- uid: System.Configuration.ConfigurationElement.HasContext\n  parent: System.Configuration.ConfigurationElement\n  isExternal: false\n  name: HasContext\n  nameWithType: ConfigurationElement.HasContext\n  fullName: ConfigurationElement.HasContext\n- uid: System.Configuration.ConfigurationElement.Init\n  parent: System.Configuration.ConfigurationElement\n  isExternal: false\n  name: Init()\n  nameWithType: ConfigurationElement.Init()\n  fullName: ConfigurationElement.Init()\n- uid: System.Configuration.ConfigurationElement.InitializeDefault\n  parent: System.Configuration.ConfigurationElement\n  isExternal: false\n  name: InitializeDefault()\n  nameWithType: ConfigurationElement.InitializeDefault()\n  fullName: ConfigurationElement.InitializeDefault()\n- uid: System.Configuration.ConfigurationElement.IsModified\n  parent: System.Configuration.ConfigurationElement\n  isExternal: false\n  name: IsModified()\n  nameWithType: ConfigurationElement.IsModified()\n  fullName: ConfigurationElement.IsModified()\n- uid: System.Configuration.ConfigurationElement.IsReadOnly\n  parent: System.Configuration.ConfigurationElement\n  isExternal: false\n  name: IsReadOnly()\n  nameWithType: ConfigurationElement.IsReadOnly()\n  fullName: ConfigurationElement.IsReadOnly()\n- uid: System.Configuration.ConfigurationElement.Item(System.Configuration.ConfigurationProperty)\n  parent: System.Configuration.ConfigurationElement\n  isExternal: false\n  name: Item(ConfigurationProperty)\n  nameWithType: ConfigurationElement.Item(ConfigurationProperty)\n  fullName: ConfigurationElement.Item(ConfigurationProperty)\n- uid: System.Configuration.ConfigurationElement.Item(System.String)\n  parent: System.Configuration.ConfigurationElement\n  isExternal: false\n  name: Item(String)\n  nameWithType: ConfigurationElement.Item(String)\n  fullName: ConfigurationElement.Item(String)\n- uid: System.Configuration.ConfigurationElement.ListErrors(System.Collections.IList)\n  parent: System.Configuration.ConfigurationElement\n  isExternal: false\n  name: ListErrors(IList)\n  nameWithType: ConfigurationElement.ListErrors(IList)\n  fullName: ConfigurationElement.ListErrors(IList)\n- uid: System.Configuration.ConfigurationElement.LockAllAttributesExcept\n  parent: System.Configuration.ConfigurationElement\n  isExternal: false\n  name: LockAllAttributesExcept\n  nameWithType: ConfigurationElement.LockAllAttributesExcept\n  fullName: ConfigurationElement.LockAllAttributesExcept\n- uid: System.Configuration.ConfigurationElement.LockAllElementsExcept\n  parent: System.Configuration.ConfigurationElement\n  isExternal: false\n  name: LockAllElementsExcept\n  nameWithType: ConfigurationElement.LockAllElementsExcept\n  fullName: ConfigurationElement.LockAllElementsExcept\n- uid: System.Configuration.ConfigurationElement.LockAttributes\n  parent: System.Configuration.ConfigurationElement\n  isExternal: false\n  name: LockAttributes\n  nameWithType: ConfigurationElement.LockAttributes\n  fullName: ConfigurationElement.LockAttributes\n- uid: System.Configuration.ConfigurationElement.LockElements\n  parent: System.Configuration.ConfigurationElement\n  isExternal: false\n  name: LockElements\n  nameWithType: ConfigurationElement.LockElements\n  fullName: ConfigurationElement.LockElements\n- uid: System.Configuration.ConfigurationElement.LockItem\n  parent: System.Configuration.ConfigurationElement\n  isExternal: false\n  name: LockItem\n  nameWithType: ConfigurationElement.LockItem\n  fullName: ConfigurationElement.LockItem\n- uid: System.Configuration.ConfigurationElement.OnDeserializeUnrecognizedAttribute(System.String,System.String)\n  parent: System.Configuration.ConfigurationElement\n  isExternal: false\n  name: OnDeserializeUnrecognizedAttribute(String, String)\n  nameWithType: ConfigurationElement.OnDeserializeUnrecognizedAttribute(String, String)\n  fullName: ConfigurationElement.OnDeserializeUnrecognizedAttribute(String, String)\n- uid: System.Configuration.ConfigurationElement.OnDeserializeUnrecognizedElement(System.String,System.Xml.XmlReader)\n  parent: System.Configuration.ConfigurationElement\n  isExternal: false\n  name: OnDeserializeUnrecognizedElement(String, XmlReader)\n  nameWithType: ConfigurationElement.OnDeserializeUnrecognizedElement(String, XmlReader)\n  fullName: ConfigurationElement.OnDeserializeUnrecognizedElement(String, XmlReader)\n- uid: System.Configuration.ConfigurationElement.OnRequiredPropertyNotFound(System.String)\n  parent: System.Configuration.ConfigurationElement\n  isExternal: false\n  name: OnRequiredPropertyNotFound(String)\n  nameWithType: ConfigurationElement.OnRequiredPropertyNotFound(String)\n  fullName: ConfigurationElement.OnRequiredPropertyNotFound(String)\n- uid: System.Configuration.ConfigurationElement.PreSerialize(System.Xml.XmlWriter)\n  parent: System.Configuration.ConfigurationElement\n  isExternal: false\n  name: PreSerialize(XmlWriter)\n  nameWithType: ConfigurationElement.PreSerialize(XmlWriter)\n  fullName: ConfigurationElement.PreSerialize(XmlWriter)\n- uid: System.Configuration.ConfigurationElement.Reset(System.Configuration.ConfigurationElement)\n  parent: System.Configuration.ConfigurationElement\n  isExternal: false\n  name: Reset(ConfigurationElement)\n  nameWithType: ConfigurationElement.Reset(ConfigurationElement)\n  fullName: ConfigurationElement.Reset(ConfigurationElement)\n- uid: System.Configuration.ConfigurationElement.ResetModified\n  parent: System.Configuration.ConfigurationElement\n  isExternal: false\n  name: ResetModified()\n  nameWithType: ConfigurationElement.ResetModified()\n  fullName: ConfigurationElement.ResetModified()\n- uid: System.Configuration.ConfigurationElement.SerializeElement(System.Xml.XmlWriter,System.Boolean)\n  parent: System.Configuration.ConfigurationElement\n  isExternal: false\n  name: SerializeElement(XmlWriter, Boolean)\n  nameWithType: ConfigurationElement.SerializeElement(XmlWriter, Boolean)\n  fullName: ConfigurationElement.SerializeElement(XmlWriter, Boolean)\n- uid: System.Configuration.ConfigurationElement.SerializeToXmlElement(System.Xml.XmlWriter,System.String)\n  parent: System.Configuration.ConfigurationElement\n  isExternal: false\n  name: SerializeToXmlElement(XmlWriter, String)\n  nameWithType: ConfigurationElement.SerializeToXmlElement(XmlWriter, String)\n  fullName: ConfigurationElement.SerializeToXmlElement(XmlWriter, String)\n- uid: System.Configuration.ConfigurationElement.SetPropertyValue(System.Configuration.ConfigurationProperty,System.Object,System.Boolean)\n  parent: System.Configuration.ConfigurationElement\n  isExternal: false\n  name: SetPropertyValue(ConfigurationProperty, Object, Boolean)\n  nameWithType: ConfigurationElement.SetPropertyValue(ConfigurationProperty, Object, Boolean)\n  fullName: ConfigurationElement.SetPropertyValue(ConfigurationProperty, Object, Boolean)\n- uid: System.Configuration.ConfigurationElement.SetReadOnly\n  parent: System.Configuration.ConfigurationElement\n  isExternal: false\n  name: SetReadOnly()\n  nameWithType: ConfigurationElement.SetReadOnly()\n  fullName: ConfigurationElement.SetReadOnly()\n- uid: System.Configuration.ConfigurationElement.Unmerge(System.Configuration.ConfigurationElement,System.Configuration.ConfigurationElement,System.Configuration.ConfigurationSaveMode)\n  parent: System.Configuration.ConfigurationElement\n  isExternal: false\n  name: Unmerge(ConfigurationElement, ConfigurationElement, ConfigurationSaveMode)\n  nameWithType: ConfigurationElement.Unmerge(ConfigurationElement, ConfigurationElement, ConfigurationSaveMode)\n  fullName: ConfigurationElement.Unmerge(ConfigurationElement, ConfigurationElement, ConfigurationSaveMode)\n"}