{"nodes":[{"content":"Represents a `<KeyName>` subelement of an XMLDSIG or XML Encryption `<KeyInfo>` element.","nodes":[{"pos":[0,88],"content":"Represents a <ph id=\"ph1\">`&lt;KeyName&gt;`</ph> subelement of an XMLDSIG or XML Encryption <ph id=\"ph2\">`&lt;KeyInfo&gt;`</ph> element.","source":"Represents a `<KeyName>` subelement of an XMLDSIG or XML Encryption `<KeyInfo>` element."}],"pos":[761,850],"yaml":true},{"content":"The `<KeyName>` element contains a string identifier that the party validating or decrypting an XML document uses to identify the corresponding key.  For example, if you receive an encrypted or signed XML document that has a `<KeyName>` element value of \"AsymmetricKey1\", you will use a key that you and the sender have named \"AsymmetricKey1\" to decrypt or verify the document.  Both parties must agree on a key name mapping ahead of time.  Note that the actual key is not imbedded in the XML document.  \n  \n For more information about the `<KeyName>` element, see Section 4.4.1 of the XMLDSIG specification, which is available from the World Wide Web Consortium (W3C) at www.w3.org/TR/xmldsig-core/, or see the XML Encryption specification, which is available from the W3C at www.w3.org/TR/xmlenc-core/.","nodes":[{"pos":[0,502],"content":"The `<KeyName>` element contains a string identifier that the party validating or decrypting an XML document uses to identify the corresponding key.  For example, if you receive an encrypted or signed XML document that has a `<KeyName>` element value of \"AsymmetricKey1\", you will use a key that you and the sender have named \"AsymmetricKey1\" to decrypt or verify the document.  Both parties must agree on a key name mapping ahead of time.  Note that the actual key is not imbedded in the XML document.","nodes":[{"content":"The <ph id=\"ph1\">`&lt;KeyName&gt;`</ph> element contains a string identifier that the party validating or decrypting an XML document uses to identify the corresponding key.","pos":[0,148],"source":"The `<KeyName>` element contains a string identifier that the party validating or decrypting an XML document uses to identify the corresponding key."},{"content":"For example, if you receive an encrypted or signed XML document that has a <ph id=\"ph1\">`&lt;KeyName&gt;`</ph> element value of \"AsymmetricKey1\", you will use a key that you and the sender have named \"AsymmetricKey1\" to decrypt or verify the document.","pos":[150,377],"source":"  For example, if you receive an encrypted or signed XML document that has a `<KeyName>` element value of \"AsymmetricKey1\", you will use a key that you and the sender have named \"AsymmetricKey1\" to decrypt or verify the document."},{"content":"Both parties must agree on a key name mapping ahead of time.","pos":[379,439]},{"content":"Note that the actual key is not imbedded in the XML document.","pos":[441,502]}]},{"pos":[509,804],"content":"For more information about the <ph id=\"ph1\">`&lt;KeyName&gt;`</ph> element, see Section 4.4.1 of the XMLDSIG specification, which is available from the World Wide Web Consortium (W3C) at www.w3.org/TR/xmldsig-core/, or see the XML Encryption specification, which is available from the W3C at www.w3.org/TR/xmlenc-core/.","source":"For more information about the `<KeyName>` element, see Section 4.4.1 of the XMLDSIG specification, which is available from the World Wide Web Consortium (W3C) at www.w3.org/TR/xmldsig-core/, or see the XML Encryption specification, which is available from the W3C at www.w3.org/TR/xmlenc-core/."}],"pos":[861,1674],"yaml":true,"extradata":"MT"},{"content":"Initializes a new instance of the <xref href=\"System.Security.Cryptography.Xml.KeyInfoName\"></xref> class.","nodes":[{"pos":[0,106],"content":"Initializes a new instance of the <ph id=\"ph1\">&lt;xref href=\"System.Security.Cryptography.Xml.KeyInfoName\"&gt;&lt;/xref&gt;</ph> class.","source":"Initializes a new instance of the <xref href=\"System.Security.Cryptography.Xml.KeyInfoName\"></xref> class."}],"pos":[6099,6206],"yaml":true},{"content":"Initializes a new instance of the <xref href=\"System.Security.Cryptography.Xml.KeyInfoName\"></xref> class by specifying the string identifier that is the value of the `<KeyName>` element.","nodes":[{"pos":[0,187],"content":"Initializes a new instance of the <ph id=\"ph1\">&lt;xref href=\"System.Security.Cryptography.Xml.KeyInfoName\"&gt;&lt;/xref&gt;</ph> class by specifying the string identifier that is the value of the <ph id=\"ph2\">`&lt;KeyName&gt;`</ph> element.","source":"Initializes a new instance of the <xref href=\"System.Security.Cryptography.Xml.KeyInfoName\"></xref> class by specifying the string identifier that is the value of the `<KeyName>` element."}],"pos":[10360,10548],"yaml":true},{"content":"The `keyName` parameter can contain any string; the interpretation of the string is specific to the application. White space is significant in the string value.  \n  \n The `keyName` parameter specifies the value of the <xref:System.Security.Cryptography.Xml.KeyInfoName.Value%2A> property.","nodes":[{"pos":[0,160],"content":"The `keyName` parameter can contain any string; the interpretation of the string is specific to the application. White space is significant in the string value.","nodes":[{"content":"The <ph id=\"ph1\">`keyName`</ph> parameter can contain any string; the interpretation of the string is specific to the application.","pos":[0,112],"source":"The `keyName` parameter can contain any string; the interpretation of the string is specific to the application."},{"content":"White space is significant in the string value.","pos":[113,160]}]},{"pos":[167,288],"content":"The <ph id=\"ph1\">`keyName`</ph> parameter specifies the value of the <ph id=\"ph2\">&lt;xref:System.Security.Cryptography.Xml.KeyInfoName.Value%2A&gt;</ph> property.","source":"The `keyName` parameter specifies the value of the <xref:System.Security.Cryptography.Xml.KeyInfoName.Value%2A> property."}],"pos":[10559,10852],"yaml":true,"extradata":"MT"},{"content":"The string identifier that is the value of the `<KeyName>` element.","nodes":[{"pos":[0,67],"content":"The string identifier that is the value of the <ph id=\"ph1\">`&lt;KeyName&gt;`</ph> element.","source":"The string identifier that is the value of the `<KeyName>` element."}],"pos":[10991,11059],"yaml":true},{"content":"Returns an XML representation of the <xref href=\"System.Security.Cryptography.Xml.KeyInfoName\"></xref> object.","nodes":[{"pos":[0,110],"content":"Returns an XML representation of the <ph id=\"ph1\">&lt;xref href=\"System.Security.Cryptography.Xml.KeyInfoName\"&gt;&lt;/xref&gt;</ph> object.","source":"Returns an XML representation of the <xref href=\"System.Security.Cryptography.Xml.KeyInfoName\"></xref> object."}],"pos":[12196,12307],"yaml":true},{"content":"The <xref:System.Xml.XmlElement> object returned by this method is suitable for use as a subelement of an XMLDSIG or XML Encryption `<KeyInfo>` element.","nodes":[{"pos":[0,152],"content":"The <ph id=\"ph1\">&lt;xref:System.Xml.XmlElement&gt;</ph> object returned by this method is suitable for use as a subelement of an XMLDSIG or XML Encryption <ph id=\"ph2\">`&lt;KeyInfo&gt;`</ph> element.","source":"The <xref:System.Xml.XmlElement> object returned by this method is suitable for use as a subelement of an XMLDSIG or XML Encryption `<KeyInfo>` element."}],"pos":[12318,12471],"yaml":true,"extradata":"MT"},{"content":"An XML representation of the <xref href=\"System.Security.Cryptography.Xml.KeyInfoName\"></xref> object.","nodes":[{"pos":[0,102],"content":"An XML representation of the <ph id=\"ph1\">&lt;xref href=\"System.Security.Cryptography.Xml.KeyInfoName\"&gt;&lt;/xref&gt;</ph> object.","source":"An XML representation of the <xref href=\"System.Security.Cryptography.Xml.KeyInfoName\"></xref> object."}],"pos":[12627,12730],"yaml":true},{"content":"Parses the input <xref href=\"System.Xml.XmlElement\"></xref> object and configures the internal state of the <xref href=\"System.Security.Cryptography.Xml.KeyInfoName\"></xref> object to match.","nodes":[{"pos":[0,190],"content":"Parses the input <ph id=\"ph1\">&lt;xref href=\"System.Xml.XmlElement\"&gt;&lt;/xref&gt;</ph> object and configures the internal state of the <ph id=\"ph2\">&lt;xref href=\"System.Security.Cryptography.Xml.KeyInfoName\"&gt;&lt;/xref&gt;</ph> object to match.","source":"Parses the input <xref href=\"System.Xml.XmlElement\"></xref> object and configures the internal state of the <xref href=\"System.Security.Cryptography.Xml.KeyInfoName\"></xref> object to match."}],"pos":[13973,14164],"yaml":true},{"content":"The <xref:System.Security.Cryptography.Xml.KeyInfoName.LoadXml%2A> method is typically used to process a `<KeyName>` subelement of a `<KeyInfo>` element.","nodes":[{"pos":[0,153],"content":"The <ph id=\"ph1\">&lt;xref:System.Security.Cryptography.Xml.KeyInfoName.LoadXml%2A&gt;</ph> method is typically used to process a <ph id=\"ph2\">`&lt;KeyName&gt;`</ph> subelement of a <ph id=\"ph3\">`&lt;KeyInfo&gt;`</ph> element.","source":"The <xref:System.Security.Cryptography.Xml.KeyInfoName.LoadXml%2A> method is typically used to process a `<KeyName>` subelement of a `<KeyInfo>` element."}],"pos":[14175,14329],"yaml":true,"extradata":"MT"},{"content":"The <xref href=\"System.Xml.XmlElement\"></xref> object that specifies the state of the <xref href=\"System.Security.Cryptography.Xml.KeyInfoName\"></xref> object.","nodes":[{"pos":[0,159],"content":"The <ph id=\"ph1\">&lt;xref href=\"System.Xml.XmlElement\"&gt;&lt;/xref&gt;</ph> object that specifies the state of the <ph id=\"ph2\">&lt;xref href=\"System.Security.Cryptography.Xml.KeyInfoName\"&gt;&lt;/xref&gt;</ph> object.","source":"The <xref href=\"System.Xml.XmlElement\"></xref> object that specifies the state of the <xref href=\"System.Security.Cryptography.Xml.KeyInfoName\"></xref> object."}],"pos":[14497,14657],"yaml":true},{"content":"The <code>value</code> parameter is `null`.","nodes":[{"pos":[0,43],"content":"The <bpt id=\"p1\">&lt;code&gt;</bpt><ph id=\"ph1\">value</ph><ept id=\"p1\">&lt;/code&gt;</ept> parameter is <ph id=\"ph2\">`null`</ph>.","source":"The <code>value</code> parameter is `null`."}],"pos":[14839,14883],"yaml":true},{"content":"Gets or sets the string identifier contained within a `<KeyName>` element.","nodes":[{"pos":[0,74],"content":"Gets or sets the string identifier contained within a <ph id=\"ph1\">`&lt;KeyName&gt;`</ph> element.","source":"Gets or sets the string identifier contained within a `<KeyName>` element."}],"pos":[15929,16004],"yaml":true},{"content":"The <xref:System.Security.Cryptography.Xml.KeyInfoName.Value%2A> property can contain any string; the interpretation of the string is specific to the application. White space is significant in the string value.","nodes":[{"pos":[0,210],"content":"The <xref:System.Security.Cryptography.Xml.KeyInfoName.Value%2A> property can contain any string; the interpretation of the string is specific to the application. White space is significant in the string value.","nodes":[{"content":"The <xref:System.Security.Cryptography.Xml.KeyInfoName.Value%2A> property can contain any string; the interpretation of the string is specific to the application. White space is significant in the string value.","pos":[0,210],"nodes":[{"content":"The <ph id=\"ph1\">&lt;xref:System.Security.Cryptography.Xml.KeyInfoName.Value%2A&gt;</ph> property can contain any string; the interpretation of the string is specific to the application.","pos":[0,162],"source":"The <xref:System.Security.Cryptography.Xml.KeyInfoName.Value%2A> property can contain any string; the interpretation of the string is specific to the application."},{"content":"White space is significant in the string value.","pos":[163,210]}]}]}],"pos":[16015,16226],"yaml":true,"extradata":"MT"},{"content":"The string identifier that is the value of the `<KeyName>` element.","nodes":[{"pos":[0,67],"content":"The string identifier that is the value of the <ph id=\"ph1\">`&lt;KeyName&gt;`</ph> element.","source":"The string identifier that is the value of the `<KeyName>` element."}],"pos":[19196,19264],"yaml":true}],"content":"### YamlMime:ManagedReference\nitems:\n- uid: System.Security.Cryptography.Xml.KeyInfoName\n  commentId: T:System.Security.Cryptography.Xml.KeyInfoName\n  id: KeyInfoName\n  children:\n  - System.Security.Cryptography.Xml.KeyInfoName.#ctor\n  - System.Security.Cryptography.Xml.KeyInfoName.#ctor(System.String)\n  - System.Security.Cryptography.Xml.KeyInfoName.GetXml\n  - System.Security.Cryptography.Xml.KeyInfoName.LoadXml(System.Xml.XmlElement)\n  - System.Security.Cryptography.Xml.KeyInfoName.Value\n  langs:\n  - csharp\n  name: KeyInfoName\n  nameWithType: KeyInfoName\n  fullName: System.Security.Cryptography.Xml.KeyInfoName\n  type: Class\n  assemblies:\n  - System.Security\n  - System.Security.Cryptography.Xml\n  namespace: System.Security.Cryptography.Xml\n  summary: Represents a `<KeyName>` subelement of an XMLDSIG or XML Encryption `<KeyInfo>` element.\n  remarks: \"The `<KeyName>` element contains a string identifier that the party validating or decrypting an XML document uses to identify the corresponding key.  For example, if you receive an encrypted or signed XML document that has a `<KeyName>` element value of \\\"AsymmetricKey1\\\", you will use a key that you and the sender have named \\\"AsymmetricKey1\\\" to decrypt or verify the document.  Both parties must agree on a key name mapping ahead of time.  Note that the actual key is not imbedded in the XML document.  \\n  \\n For more information about the `<KeyName>` element, see Section 4.4.1 of the XMLDSIG specification, which is available from the World Wide Web Consortium (W3C) at www.w3.org/TR/xmldsig-core/, or see the XML Encryption specification, which is available from the W3C at www.w3.org/TR/xmlenc-core/.\"\n  example:\n  - \"The following code example uses the <xref:System.Security.Cryptography.Xml.KeyInfoName> object when signing a resource represented by a Universal Resource Identifier (URI).  This example saves the signature in a new file.  \\n  \\n [!code-cpp[System.Security.Cryptography.XML-XMLDsigDetached#1](~/samples/snippets/cpp/VS_Snippets_CLR_System/system.Security.Cryptography.XML-XMLDsigDetached/CPP/xmldsigdetach.cpp#1)]\\n [!code-csharp[System.Security.Cryptography.XML-XMLDsigDetached#1](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.Security.Cryptography.XML-XMLDsigDetached/CS/xmldsigdetach.cs#1)]\\n [!code-vb[System.Security.Cryptography.XML-XMLDsigDetached#1](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.Security.Cryptography.XML-XMLDsigDetached/VB/xmldsigdetach.vb#1)]  \\n  \\n The following code example uses the <xref:System.Security.Cryptography.Xml.KeyInfoName> object when signing an XML document.  This example saves the signature in a new file.  \\n  \\n [!code-cpp[System.Security.Cryptography.XML-XMLDsigEnvelope#1](~/samples/snippets/cpp/VS_Snippets_CLR_System/system.Security.Cryptography.XML-XMLDsigEnvelope/CPP/xmldsigenv.cpp#1)]\\n [!code-csharp[System.Security.Cryptography.XML-XMLDsigEnvelope#1](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.Security.Cryptography.XML-XMLDsigEnvelope/CS/xmldsigenv.cs#1)]\\n [!code-vb[System.Security.Cryptography.XML-XMLDsigEnvelope#1](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.Security.Cryptography.XML-XMLDsigEnvelope/VB/xmldsigenv.vb#1)]  \\n  \\n The following code example uses the <xref:System.Security.Cryptography.Xml.KeyInfoName> object when encrypting an XML document. This example embeds an encrypted key within the encrypted XML document.  \\n  \\n [!code-cpp[Cryptography.XML.XMLEncImbedKey#1](~/samples/snippets/cpp/VS_Snippets_CLR/Cryptography.XML.XMLEncImbedKey/CPP/sample.cpp#1)]\\n [!code-csharp[Cryptography.XML.XMLEncImbedKey#1](~/samples/snippets/csharp/VS_Snippets_CLR/Cryptography.XML.XMLEncImbedKey/CS/sample.cs#1)]\\n [!code-vb[Cryptography.XML.XMLEncImbedKey#1](~/samples/snippets/visualbasic/VS_Snippets_CLR/Cryptography.XML.XMLEncImbedKey/VB/sample.vb#1)]  \\n  \\n The following code example uses the <xref:System.Security.Cryptography.Xml.KeyInfoName> object when encrypting an XML document. This example maps a name to a symmetric key to identify it to the decryption method.  \\n  \\n [!code-cpp[Cryptography.XML.XMLEncMapKey#1](~/samples/snippets/cpp/VS_Snippets_CLR/Cryptography.XML.XMLEncMapKey/CPP/Cryptography.XML.XMLEncMapKey.cpp#1)]\\n [!code-csharp[Cryptography.XML.XMLEncMapKey#1](~/samples/snippets/csharp/VS_Snippets_CLR/Cryptography.XML.XMLEncMapKey/CS/sample.cs#1)]\\n [!code-vb[Cryptography.XML.XMLEncMapKey#1](~/samples/snippets/visualbasic/VS_Snippets_CLR/Cryptography.XML.XMLEncMapKey/VB/sample.vb#1)]\"\n  syntax:\n    content: 'public class KeyInfoName : System.Security.Cryptography.Xml.KeyInfoClause'\n  inheritance:\n  - System.Object\n  - System.Security.Cryptography.Xml.KeyInfoClause\n  implements: []\n  inheritedMembers:\n  - System.Object.Equals(System.Object)\n  - System.Object.Equals(System.Object,System.Object)\n  - System.Object.GetHashCode\n  - System.Object.GetType\n  - System.Object.MemberwiseClone\n  - System.Object.ReferenceEquals(System.Object,System.Object)\n  - System.Object.ToString\n  version:\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - xamarinmac-3.0\n  monikers:\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - xamarinmac-3.0\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Security.Cryptography.Xml/KeyInfoName.xml\n  ms.technology:\n  - dotnet-standard\n  author: mairaw\n  ms.author: mairaw\n  manager: wpickett\n- uid: System.Security.Cryptography.Xml.KeyInfoName.#ctor\n  commentId: M:System.Security.Cryptography.Xml.KeyInfoName.#ctor\n  id: '#ctor'\n  parent: System.Security.Cryptography.Xml.KeyInfoName\n  langs:\n  - csharp\n  name: KeyInfoName()\n  nameWithType: KeyInfoName.KeyInfoName()\n  fullName: KeyInfoName.KeyInfoName()\n  type: Constructor\n  assemblies:\n  - System.Security\n  - System.Security.Cryptography.Xml\n  namespace: System.Security.Cryptography.Xml\n  summary: Initializes a new instance of the <xref href=\"System.Security.Cryptography.Xml.KeyInfoName\"></xref> class.\n  remarks: ''\n  example:\n  - \"The following code example uses the <xref:System.Security.Cryptography.Xml.KeyInfoName> object when signing a resource represented by a Universal Resource Identifier (URI).  This example saves the signature in a new file.  \\n  \\n [!code-cpp[System.Security.Cryptography.XML-XMLDsigDetached#1](~/samples/snippets/cpp/VS_Snippets_CLR_System/system.Security.Cryptography.XML-XMLDsigDetached/CPP/xmldsigdetach.cpp#1)]\\n [!code-csharp[System.Security.Cryptography.XML-XMLDsigDetached#1](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.Security.Cryptography.XML-XMLDsigDetached/CS/xmldsigdetach.cs#1)]\\n [!code-vb[System.Security.Cryptography.XML-XMLDsigDetached#1](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.Security.Cryptography.XML-XMLDsigDetached/VB/xmldsigdetach.vb#1)]  \\n  \\n The following code example uses the <xref:System.Security.Cryptography.Xml.KeyInfoName> object when signing an XML document.  This example saves the signature in a new file.  \\n  \\n [!code-cpp[System.Security.Cryptography.XML-XMLDsigEnvelope#1](~/samples/snippets/cpp/VS_Snippets_CLR_System/system.Security.Cryptography.XML-XMLDsigEnvelope/CPP/xmldsigenv.cpp#1)]\\n [!code-csharp[System.Security.Cryptography.XML-XMLDsigEnvelope#1](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.Security.Cryptography.XML-XMLDsigEnvelope/CS/xmldsigenv.cs#1)]\\n [!code-vb[System.Security.Cryptography.XML-XMLDsigEnvelope#1](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.Security.Cryptography.XML-XMLDsigEnvelope/VB/xmldsigenv.vb#1)]  \\n  \\n The following code example uses the <xref:System.Security.Cryptography.Xml.KeyInfoName> object when encrypting an XML document. This example embeds an encrypted key within the encrypted XML document.  \\n  \\n [!code-cpp[Cryptography.XML.XMLEncImbedKey#1](~/samples/snippets/cpp/VS_Snippets_CLR/Cryptography.XML.XMLEncImbedKey/CPP/sample.cpp#1)]\\n [!code-csharp[Cryptography.XML.XMLEncImbedKey#1](~/samples/snippets/csharp/VS_Snippets_CLR/Cryptography.XML.XMLEncImbedKey/CS/sample.cs#1)]\\n [!code-vb[Cryptography.XML.XMLEncImbedKey#1](~/samples/snippets/visualbasic/VS_Snippets_CLR/Cryptography.XML.XMLEncImbedKey/VB/sample.vb#1)]  \\n  \\n The following code example uses the <xref:System.Security.Cryptography.Xml.KeyInfoName> object when encrypting an XML document. This example maps a name to a symmetric key to identify it to the decryption method.  \\n  \\n [!code-cpp[Cryptography.XML.XMLEncMapKey#1](~/samples/snippets/cpp/VS_Snippets_CLR/Cryptography.XML.XMLEncMapKey/CPP/Cryptography.XML.XMLEncMapKey.cpp#1)]\\n [!code-csharp[Cryptography.XML.XMLEncMapKey#1](~/samples/snippets/csharp/VS_Snippets_CLR/Cryptography.XML.XMLEncMapKey/CS/sample.cs#1)]\\n [!code-vb[Cryptography.XML.XMLEncMapKey#1](~/samples/snippets/visualbasic/VS_Snippets_CLR/Cryptography.XML.XMLEncMapKey/VB/sample.vb#1)]\"\n  syntax:\n    content: public KeyInfoName ();\n    parameters: []\n  overload: System.Security.Cryptography.Xml.KeyInfoName.#ctor*\n  exceptions: []\n  version:\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - xamarinmac-3.0\n  monikers:\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - xamarinmac-3.0\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Security.Cryptography.Xml/KeyInfoName.xml\n  ms.technology:\n  - dotnet-standard\n  author: mairaw\n  ms.author: mairaw\n  manager: wpickett\n- uid: System.Security.Cryptography.Xml.KeyInfoName.#ctor(System.String)\n  commentId: M:System.Security.Cryptography.Xml.KeyInfoName.#ctor(System.String)\n  id: '#ctor(System.String)'\n  parent: System.Security.Cryptography.Xml.KeyInfoName\n  langs:\n  - csharp\n  name: KeyInfoName(String)\n  nameWithType: KeyInfoName.KeyInfoName(String)\n  fullName: KeyInfoName.KeyInfoName(String)\n  type: Constructor\n  assemblies:\n  - System.Security\n  - System.Security.Cryptography.Xml\n  namespace: System.Security.Cryptography.Xml\n  summary: Initializes a new instance of the <xref href=\"System.Security.Cryptography.Xml.KeyInfoName\"></xref> class by specifying the string identifier that is the value of the `<KeyName>` element.\n  remarks: \"The `keyName` parameter can contain any string; the interpretation of the string is specific to the application. White space is significant in the string value.  \\n  \\n The `keyName` parameter specifies the value of the <xref:System.Security.Cryptography.Xml.KeyInfoName.Value%2A> property.\"\n  syntax:\n    content: public KeyInfoName (string keyName);\n    parameters:\n    - id: keyName\n      type: System.String\n      description: The string identifier that is the value of the `<KeyName>` element.\n  overload: System.Security.Cryptography.Xml.KeyInfoName.#ctor*\n  exceptions: []\n  version:\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - xamarinmac-3.0\n  monikers:\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - xamarinmac-3.0\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Security.Cryptography.Xml/KeyInfoName.xml\n  ms.technology:\n  - dotnet-standard\n  author: mairaw\n  ms.author: mairaw\n  manager: wpickett\n- uid: System.Security.Cryptography.Xml.KeyInfoName.GetXml\n  commentId: M:System.Security.Cryptography.Xml.KeyInfoName.GetXml\n  id: GetXml\n  parent: System.Security.Cryptography.Xml.KeyInfoName\n  langs:\n  - csharp\n  name: GetXml()\n  nameWithType: KeyInfoName.GetXml()\n  fullName: KeyInfoName.GetXml()\n  type: Method\n  assemblies:\n  - System.Security\n  - System.Security.Cryptography.Xml\n  namespace: System.Security.Cryptography.Xml\n  summary: Returns an XML representation of the <xref href=\"System.Security.Cryptography.Xml.KeyInfoName\"></xref> object.\n  remarks: The <xref:System.Xml.XmlElement> object returned by this method is suitable for use as a subelement of an XMLDSIG or XML Encryption `<KeyInfo>` element.\n  syntax:\n    content: public override System.Xml.XmlElement GetXml ();\n    parameters: []\n    return:\n      type: System.Xml.XmlElement\n      description: An XML representation of the <xref href=\"System.Security.Cryptography.Xml.KeyInfoName\"></xref> object.\n  overload: System.Security.Cryptography.Xml.KeyInfoName.GetXml*\n  exceptions: []\n  version:\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - xamarinmac-3.0\n  monikers:\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - xamarinmac-3.0\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Security.Cryptography.Xml/KeyInfoName.xml\n  ms.technology:\n  - dotnet-standard\n  author: mairaw\n  ms.author: mairaw\n  manager: wpickett\n- uid: System.Security.Cryptography.Xml.KeyInfoName.LoadXml(System.Xml.XmlElement)\n  commentId: M:System.Security.Cryptography.Xml.KeyInfoName.LoadXml(System.Xml.XmlElement)\n  id: LoadXml(System.Xml.XmlElement)\n  parent: System.Security.Cryptography.Xml.KeyInfoName\n  langs:\n  - csharp\n  name: LoadXml(XmlElement)\n  nameWithType: KeyInfoName.LoadXml(XmlElement)\n  fullName: KeyInfoName.LoadXml(XmlElement)\n  type: Method\n  assemblies:\n  - System.Security\n  - System.Security.Cryptography.Xml\n  namespace: System.Security.Cryptography.Xml\n  summary: Parses the input <xref href=\"System.Xml.XmlElement\"></xref> object and configures the internal state of the <xref href=\"System.Security.Cryptography.Xml.KeyInfoName\"></xref> object to match.\n  remarks: The <xref:System.Security.Cryptography.Xml.KeyInfoName.LoadXml%2A> method is typically used to process a `<KeyName>` subelement of a `<KeyInfo>` element.\n  syntax:\n    content: public override void LoadXml (System.Xml.XmlElement value);\n    parameters:\n    - id: value\n      type: System.Xml.XmlElement\n      description: The <xref href=\"System.Xml.XmlElement\"></xref> object that specifies the state of the <xref href=\"System.Security.Cryptography.Xml.KeyInfoName\"></xref> object.\n  overload: System.Security.Cryptography.Xml.KeyInfoName.LoadXml*\n  exceptions:\n  - type: System.ArgumentNullException\n    commentId: T:System.ArgumentNullException\n    description: The <code>value</code> parameter is `null`.\n  version:\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - xamarinmac-3.0\n  monikers:\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - xamarinmac-3.0\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Security.Cryptography.Xml/KeyInfoName.xml\n  ms.technology:\n  - dotnet-standard\n  author: mairaw\n  ms.author: mairaw\n  manager: wpickett\n- uid: System.Security.Cryptography.Xml.KeyInfoName.Value\n  commentId: P:System.Security.Cryptography.Xml.KeyInfoName.Value\n  id: Value\n  parent: System.Security.Cryptography.Xml.KeyInfoName\n  langs:\n  - csharp\n  name: Value\n  nameWithType: KeyInfoName.Value\n  fullName: KeyInfoName.Value\n  type: Property\n  assemblies:\n  - System.Security\n  - System.Security.Cryptography.Xml\n  namespace: System.Security.Cryptography.Xml\n  summary: Gets or sets the string identifier contained within a `<KeyName>` element.\n  remarks: The <xref:System.Security.Cryptography.Xml.KeyInfoName.Value%2A> property can contain any string; the interpretation of the string is specific to the application. White space is significant in the string value.\n  example:\n  - \"The following code example uses the <xref:System.Security.Cryptography.Xml.KeyInfoName> object when signing a resource represented by a Universal Resource Identifier (URI).  This example saves the signature in a new file.  \\n  \\n [!code-cpp[System.Security.Cryptography.XML-XMLDsigDetached#1](~/samples/snippets/cpp/VS_Snippets_CLR_System/system.Security.Cryptography.XML-XMLDsigDetached/CPP/xmldsigdetach.cpp#1)]\\n [!code-csharp[System.Security.Cryptography.XML-XMLDsigDetached#1](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.Security.Cryptography.XML-XMLDsigDetached/CS/xmldsigdetach.cs#1)]\\n [!code-vb[System.Security.Cryptography.XML-XMLDsigDetached#1](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.Security.Cryptography.XML-XMLDsigDetached/VB/xmldsigdetach.vb#1)]  \\n  \\n The following code example uses the <xref:System.Security.Cryptography.Xml.KeyInfoName> object when signing an XML document.  This example saves the signature in a new file.  \\n  \\n [!code-cpp[System.Security.Cryptography.XML-XMLDsigEnvelope#1](~/samples/snippets/cpp/VS_Snippets_CLR_System/system.Security.Cryptography.XML-XMLDsigEnvelope/CPP/xmldsigenv.cpp#1)]\\n [!code-csharp[System.Security.Cryptography.XML-XMLDsigEnvelope#1](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.Security.Cryptography.XML-XMLDsigEnvelope/CS/xmldsigenv.cs#1)]\\n [!code-vb[System.Security.Cryptography.XML-XMLDsigEnvelope#1](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.Security.Cryptography.XML-XMLDsigEnvelope/VB/xmldsigenv.vb#1)]  \\n  \\n The following code example uses the <xref:System.Security.Cryptography.Xml.KeyInfoName> object when encrypting an XML document. This example embeds an encrypted key within the encrypted XML document.  \\n  \\n [!code-cpp[Cryptography.XML.XMLEncImbedKey#1](~/samples/snippets/cpp/VS_Snippets_CLR/Cryptography.XML.XMLEncImbedKey/CPP/sample.cpp#1)]\\n [!code-csharp[Cryptography.XML.XMLEncImbedKey#1](~/samples/snippets/csharp/VS_Snippets_CLR/Cryptography.XML.XMLEncImbedKey/CS/sample.cs#1)]\\n [!code-vb[Cryptography.XML.XMLEncImbedKey#1](~/samples/snippets/visualbasic/VS_Snippets_CLR/Cryptography.XML.XMLEncImbedKey/VB/sample.vb#1)]  \\n  \\n The following code example uses the <xref:System.Security.Cryptography.Xml.KeyInfoName> object when encrypting an XML document. This example maps a name to a symmetric key to identify it to the decryption method.  \\n  \\n [!code-cpp[Cryptography.XML.XMLEncMapKey#1](~/samples/snippets/cpp/VS_Snippets_CLR/Cryptography.XML.XMLEncMapKey/CPP/Cryptography.XML.XMLEncMapKey.cpp#1)]\\n [!code-csharp[Cryptography.XML.XMLEncMapKey#1](~/samples/snippets/csharp/VS_Snippets_CLR/Cryptography.XML.XMLEncMapKey/CS/sample.cs#1)]\\n [!code-vb[Cryptography.XML.XMLEncMapKey#1](~/samples/snippets/visualbasic/VS_Snippets_CLR/Cryptography.XML.XMLEncMapKey/VB/sample.vb#1)]\"\n  syntax:\n    content: public string Value { get; set; }\n    return:\n      type: System.String\n      description: The string identifier that is the value of the `<KeyName>` element.\n  overload: System.Security.Cryptography.Xml.KeyInfoName.Value*\n  exceptions: []\n  version:\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - xamarinmac-3.0\n  monikers:\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - xamarinmac-3.0\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Security.Cryptography.Xml/KeyInfoName.xml\n  ms.technology:\n  - dotnet-standard\n  author: mairaw\n  ms.author: mairaw\n  manager: wpickett\nreferences:\n- uid: System.Security.Cryptography.Xml.KeyInfoClause\n  parent: System.Security.Cryptography.Xml\n  isExternal: false\n  name: KeyInfoClause\n  nameWithType: KeyInfoClause\n  fullName: System.Security.Cryptography.Xml.KeyInfoClause\n- uid: System.ArgumentNullException\n  parent: System\n  isExternal: false\n  name: ArgumentNullException\n  nameWithType: ArgumentNullException\n  fullName: System.ArgumentNullException\n- uid: System.Security.Cryptography.Xml.KeyInfoName.#ctor\n  parent: System.Security.Cryptography.Xml.KeyInfoName\n  isExternal: false\n  name: KeyInfoName()\n  nameWithType: KeyInfoName.KeyInfoName()\n  fullName: KeyInfoName.KeyInfoName()\n- uid: System.Security.Cryptography.Xml.KeyInfoName.#ctor(System.String)\n  parent: System.Security.Cryptography.Xml.KeyInfoName\n  isExternal: false\n  name: KeyInfoName(String)\n  nameWithType: KeyInfoName.KeyInfoName(String)\n  fullName: KeyInfoName.KeyInfoName(String)\n- uid: System.String\n  parent: System\n  isExternal: false\n  name: String\n  nameWithType: String\n  fullName: System.String\n- uid: System.Security.Cryptography.Xml.KeyInfoName.GetXml\n  parent: System.Security.Cryptography.Xml.KeyInfoName\n  isExternal: false\n  name: GetXml()\n  nameWithType: KeyInfoName.GetXml()\n  fullName: KeyInfoName.GetXml()\n- uid: System.Xml.XmlElement\n  parent: System.Xml\n  isExternal: false\n  name: XmlElement\n  nameWithType: XmlElement\n  fullName: System.Xml.XmlElement\n- uid: System.Security.Cryptography.Xml.KeyInfoName.LoadXml(System.Xml.XmlElement)\n  parent: System.Security.Cryptography.Xml.KeyInfoName\n  isExternal: false\n  name: LoadXml(XmlElement)\n  nameWithType: KeyInfoName.LoadXml(XmlElement)\n  fullName: KeyInfoName.LoadXml(XmlElement)\n- uid: System.Security.Cryptography.Xml.KeyInfoName.Value\n  parent: System.Security.Cryptography.Xml.KeyInfoName\n  isExternal: false\n  name: Value\n  nameWithType: KeyInfoName.Value\n  fullName: KeyInfoName.Value\n- uid: System.Security.Cryptography.Xml.KeyInfoName.#ctor*\n  parent: System.Security.Cryptography.Xml.KeyInfoName\n  isExternal: false\n  name: KeyInfoName\n  nameWithType: KeyInfoName.KeyInfoName\n  fullName: KeyInfoName.KeyInfoName\n  monikers:\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - xamarinmac-3.0\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Security.Cryptography.Xml/KeyInfoName.xml\n- uid: System.Security.Cryptography.Xml.KeyInfoName.GetXml*\n  parent: System.Security.Cryptography.Xml.KeyInfoName\n  isExternal: false\n  name: GetXml\n  nameWithType: KeyInfoName.GetXml\n  fullName: KeyInfoName.GetXml\n  monikers:\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - xamarinmac-3.0\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Security.Cryptography.Xml/KeyInfoName.xml\n- uid: System.Security.Cryptography.Xml.KeyInfoName.LoadXml*\n  parent: System.Security.Cryptography.Xml.KeyInfoName\n  isExternal: false\n  name: LoadXml\n  nameWithType: KeyInfoName.LoadXml\n  fullName: KeyInfoName.LoadXml\n  monikers:\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - xamarinmac-3.0\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Security.Cryptography.Xml/KeyInfoName.xml\n- uid: System.Security.Cryptography.Xml.KeyInfoName.Value*\n  parent: System.Security.Cryptography.Xml.KeyInfoName\n  isExternal: false\n  name: Value\n  nameWithType: KeyInfoName.Value\n  fullName: KeyInfoName.Value\n  monikers:\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - xamarinmac-3.0\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Security.Cryptography.Xml/KeyInfoName.xml\n- uid: System.Object.Equals(System.Object)\n  parent: System.Object\n  isExternal: false\n  name: Equals(Object)\n  nameWithType: Object.Equals(Object)\n  fullName: Object.Equals(Object)\n- uid: System.Object.Equals(System.Object,System.Object)\n  parent: System.Object\n  isExternal: false\n  name: Equals(Object, Object)\n  nameWithType: Object.Equals(Object, Object)\n  fullName: Object.Equals(Object, Object)\n- uid: System.Object.GetHashCode\n  parent: System.Object\n  isExternal: false\n  name: GetHashCode()\n  nameWithType: Object.GetHashCode()\n  fullName: Object.GetHashCode()\n- uid: System.Object.GetType\n  parent: System.Object\n  isExternal: false\n  name: GetType()\n  nameWithType: Object.GetType()\n  fullName: Object.GetType()\n- uid: System.Object.MemberwiseClone\n  parent: System.Object\n  isExternal: false\n  name: MemberwiseClone()\n  nameWithType: Object.MemberwiseClone()\n  fullName: Object.MemberwiseClone()\n- uid: System.Object.ReferenceEquals(System.Object,System.Object)\n  parent: System.Object\n  isExternal: false\n  name: ReferenceEquals(Object, Object)\n  nameWithType: Object.ReferenceEquals(Object, Object)\n  fullName: Object.ReferenceEquals(Object, Object)\n- uid: System.Object.ToString\n  parent: System.Object\n  isExternal: false\n  name: ToString()\n  nameWithType: Object.ToString()\n  fullName: Object.ToString()\n"}