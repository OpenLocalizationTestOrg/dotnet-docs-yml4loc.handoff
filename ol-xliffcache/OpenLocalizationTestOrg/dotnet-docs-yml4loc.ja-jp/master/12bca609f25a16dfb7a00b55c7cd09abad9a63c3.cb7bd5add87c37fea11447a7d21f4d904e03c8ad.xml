{"nodes":[{"content":"Represents the security context of a remote party. On the client, represents the service identity and, on the service, represents the client identity.","nodes":[{"pos":[0,150],"content":"Represents the security context of a remote party. On the client, represents the service identity and, on the service, represents the client identity.","nodes":[{"content":"Represents the security context of a remote party. On the client, represents the service identity and, on the service, represents the client identity.","pos":[0,150],"nodes":[{"content":"Represents the security context of a remote party.","pos":[0,50]},{"content":"On the client, represents the service identity and, on the service, represents the client identity.","pos":[51,150]}]}]}],"pos":[1320,1471],"yaml":true},{"content":"The data is part of the <xref:System.ServiceModel.Security.SecurityMessageProperty> for a message.  \n  \n Use this class to obtain information about a remote *security context* at runtime. A security context is created when a client is successfully authenticated and authorized to access a method. When a message is successfully authenticated and authorized, the security information from the client and for the current service instance can be obtained from an instance of this class.  \n  \n You can retrieve an instance of the <xref:System.ServiceModel.ServiceSecurityContext> from the <xref:System.ServiceModel.OperationContext.Current%2A> property of the <xref:System.ServiceModel.OperationContext> class, or use it from within a service operation method, as shown in the following example.  \n  \n## Parsing a ClaimSet  \n A common use of the class is to retrieve the current set of claims for the purpose of identifying or authorizing a client when accessing a method. The <xref:System.IdentityModel.Claims.ClaimSet> class contains a collection of <xref:System.IdentityModel.Claims.Claim> objects, and each can be parsed to determine whether a specific claim is present. If the specified claim is provided, authorization can be granted. This functionality is provided by overriding the <xref:System.ServiceModel.ServiceAuthorizationManager.CheckAccessCore%2A> method of the <xref:System.ServiceModel.ServiceAuthorizationManager> class.  For a complete example, see the [Authorization Policy](~/docs/framework/wcf/samples/authorization-policy.md).  \n  \n## Cookie Mode and IsAuthenticated  \n Note that under some circumstances, the <xref:System.Security.Principal.IIdentity.IsAuthenticated%2A> property of the <xref:System.Security.Principal.IIdentity> interface returns `true` even if the remote client is authenticated as an anonymous user. (The <xref:System.ServiceModel.ServiceSecurityContext.PrimaryIdentity%2A> property returns an implementation of the <xref:System.Security.Principal.IIdentity> interface.) The following circumstances must be true for this to occur:  \n  \n-   The service uses Windows authentication.  \n  \n-   The service allows anonymous logons.  \n  \n-   The binding is a [\\&lt;customBinding\\&gt;](~/docs/framework/configure-apps/file-schema/wcf/custombinding.md).  \n  \n-   The custom binding includes a `<security>` element.  \n  \n-   The `<security>` element includes a [\\&lt;secureConversationBootstrap\\&gt;](~/docs/framework/configure-apps/file-schema/wcf/secureconversationbootstrap.md) with the `requireSecurityContextCancellation` attribute set to `false`.","nodes":[{"pos":[0,98],"content":"The data is part of the <xref:System.ServiceModel.Security.SecurityMessageProperty> for a message.","nodes":[{"content":"The data is part of the <ph id=\"ph1\">&lt;xref:System.ServiceModel.Security.SecurityMessageProperty&gt;</ph> for a message.","pos":[0,98],"source":"The data is part of the <xref:System.ServiceModel.Security.SecurityMessageProperty> for a message."}]},{"pos":[105,483],"content":"Use this class to obtain information about a remote *security context* at runtime. A security context is created when a client is successfully authenticated and authorized to access a method. When a message is successfully authenticated and authorized, the security information from the client and for the current service instance can be obtained from an instance of this class.","nodes":[{"content":"Use this class to obtain information about a remote <bpt id=\"p1\">*</bpt>security context<ept id=\"p1\">*</ept> at runtime.","pos":[0,82],"source":"Use this class to obtain information about a remote *security context* at runtime."},{"content":"A security context is created when a client is successfully authenticated and authorized to access a method.","pos":[83,191]},{"content":"When a message is successfully authenticated and authorized, the security information from the client and for the current service instance can be obtained from an instance of this class.","pos":[192,378]}]},{"pos":[490,791],"content":"You can retrieve an instance of the <xref:System.ServiceModel.ServiceSecurityContext> from the <xref:System.ServiceModel.OperationContext.Current%2A> property of the <xref:System.ServiceModel.OperationContext> class, or use it from within a service operation method, as shown in the following example.","nodes":[{"content":"You can retrieve an instance of the <ph id=\"ph1\">&lt;xref:System.ServiceModel.ServiceSecurityContext&gt;</ph> from the <ph id=\"ph2\">&lt;xref:System.ServiceModel.OperationContext.Current%2A&gt;</ph> property of the <ph id=\"ph3\">&lt;xref:System.ServiceModel.OperationContext&gt;</ph> class, or use it from within a service operation method, as shown in the following example.","pos":[0,301],"source":"You can retrieve an instance of the <xref:System.ServiceModel.ServiceSecurityContext> from the <xref:System.ServiceModel.OperationContext.Current%2A> property of the <xref:System.ServiceModel.OperationContext> class, or use it from within a service operation method, as shown in the following example."}]},{"pos":[800,818],"content":"Parsing a ClaimSet","linkify":"Parsing a ClaimSet","nodes":[{"content":"Parsing a ClaimSet","pos":[0,18]}]},{"pos":[822,1546],"content":"A common use of the class is to retrieve the current set of claims for the purpose of identifying or authorizing a client when accessing a method. The <xref:System.IdentityModel.Claims.ClaimSet> class contains a collection of <xref:System.IdentityModel.Claims.Claim> objects, and each can be parsed to determine whether a specific claim is present. If the specified claim is provided, authorization can be granted. This functionality is provided by overriding the <xref:System.ServiceModel.ServiceAuthorizationManager.CheckAccessCore%2A> method of the <xref:System.ServiceModel.ServiceAuthorizationManager> class.  For a complete example, see the [Authorization Policy](~/docs/framework/wcf/samples/authorization-policy.md).","nodes":[{"content":"A common use of the class is to retrieve the current set of claims for the purpose of identifying or authorizing a client when accessing a method.","pos":[0,146]},{"content":"The <ph id=\"ph1\">&lt;xref:System.IdentityModel.Claims.ClaimSet&gt;</ph> class contains a collection of <ph id=\"ph2\">&lt;xref:System.IdentityModel.Claims.Claim&gt;</ph> objects, and each can be parsed to determine whether a specific claim is present.","pos":[147,348],"source":" The <xref:System.IdentityModel.Claims.ClaimSet> class contains a collection of <xref:System.IdentityModel.Claims.Claim> objects, and each can be parsed to determine whether a specific claim is present."},{"content":"If the specified claim is provided, authorization can be granted.","pos":[349,414]},{"content":"This functionality is provided by overriding the <ph id=\"ph1\">&lt;xref:System.ServiceModel.ServiceAuthorizationManager.CheckAccessCore%2A&gt;</ph> method of the <ph id=\"ph2\">&lt;xref:System.ServiceModel.ServiceAuthorizationManager&gt;</ph> class.","pos":[415,613],"source":" This functionality is provided by overriding the <xref:System.ServiceModel.ServiceAuthorizationManager.CheckAccessCore%2A> method of the <xref:System.ServiceModel.ServiceAuthorizationManager> class."},{"content":"For a complete example, see the <bpt id=\"p1\">[</bpt>Authorization Policy<ept id=\"p1\">](~/docs/framework/wcf/samples/authorization-policy.md)</ept>.","pos":[615,724],"source":"  For a complete example, see the [Authorization Policy](~/docs/framework/wcf/samples/authorization-policy.md)."}]},{"pos":[1555,1586],"content":"Cookie Mode and IsAuthenticated","linkify":"Cookie Mode and IsAuthenticated","nodes":[{"content":"Cookie Mode and IsAuthenticated","pos":[0,31]}]},{"pos":[1590,2071],"content":"Note that under some circumstances, the <xref:System.Security.Principal.IIdentity.IsAuthenticated%2A> property of the <xref:System.Security.Principal.IIdentity> interface returns `true` even if the remote client is authenticated as an anonymous user. (The <xref:System.ServiceModel.ServiceSecurityContext.PrimaryIdentity%2A> property returns an implementation of the <xref:System.Security.Principal.IIdentity> interface.) The following circumstances must be true for this to occur:","nodes":[{"content":"Note that under some circumstances, the <ph id=\"ph1\">&lt;xref:System.Security.Principal.IIdentity.IsAuthenticated%2A&gt;</ph> property of the <ph id=\"ph2\">&lt;xref:System.Security.Principal.IIdentity&gt;</ph> interface returns <ph id=\"ph3\">`true`</ph> even if the remote client is authenticated as an anonymous user.","pos":[0,250],"source":"Note that under some circumstances, the <xref:System.Security.Principal.IIdentity.IsAuthenticated%2A> property of the <xref:System.Security.Principal.IIdentity> interface returns `true` even if the remote client is authenticated as an anonymous user."},{"content":"(The <ph id=\"ph1\">&lt;xref:System.ServiceModel.ServiceSecurityContext.PrimaryIdentity%2A&gt;</ph> property returns an implementation of the <ph id=\"ph2\">&lt;xref:System.Security.Principal.IIdentity&gt;</ph> interface.) The following circumstances must be true for this to occur:","pos":[251,481],"source":" (The <xref:System.ServiceModel.ServiceSecurityContext.PrimaryIdentity%2A> property returns an implementation of the <xref:System.Security.Principal.IIdentity> interface.) The following circumstances must be true for this to occur:"}]},{"pos":[2081,2121],"content":"The service uses Windows authentication.","nodes":[{"content":"The service uses Windows authentication.","pos":[0,40]}]},{"pos":[2131,2167],"content":"The service allows anonymous logons.","nodes":[{"content":"The service allows anonymous logons.","pos":[0,36]}]},{"pos":[2177,2286],"content":"The binding is a <bpt id=\"p1\">[</bpt><ph id=\"ph1\">\\&amp;</ph>lt;customBinding<ph id=\"ph2\">\\&amp;</ph>gt;<ept id=\"p1\">](~/docs/framework/configure-apps/file-schema/wcf/custombinding.md)</ept>.","source":"The binding is a [\\&lt;customBinding\\&gt;](~/docs/framework/configure-apps/file-schema/wcf/custombinding.md)."},{"pos":[2296,2347],"content":"The custom binding includes a <ph id=\"ph1\">`&lt;security&gt;`</ph> element.","source":"The custom binding includes a `<security>` element."},{"pos":[2357,2584],"content":"The <ph id=\"ph1\">`&lt;security&gt;`</ph> element includes a <bpt id=\"p1\">[</bpt><ph id=\"ph2\">\\&amp;</ph>lt;secureConversationBootstrap<ph id=\"ph3\">\\&amp;</ph>gt;<ept id=\"p1\">](~/docs/framework/configure-apps/file-schema/wcf/secureconversationbootstrap.md)</ept> with the <ph id=\"ph4\">`requireSecurityContextCancellation`</ph> attribute set to <ph id=\"ph5\">`false`</ph>.","source":"The `<security>` element includes a [\\&lt;secureConversationBootstrap\\&gt;](~/docs/framework/configure-apps/file-schema/wcf/secureconversationbootstrap.md) with the `requireSecurityContextCancellation` attribute set to `false`."}],"pos":[1482,4093],"yaml":true,"extradata":"MT"},{"content":"Initializes a new instance of the <xref href=\"System.ServiceModel.ServiceSecurityContext\"></xref> class with the collection of policies object.","nodes":[{"pos":[0,143],"content":"Initializes a new instance of the <ph id=\"ph1\">&lt;xref href=\"System.ServiceModel.ServiceSecurityContext\"&gt;&lt;/xref&gt;</ph> class with the collection of policies object.","source":"Initializes a new instance of the <xref href=\"System.ServiceModel.ServiceSecurityContext\"></xref> class with the collection of policies object."}],"pos":[6974,7118],"yaml":true},{"content":"This constructor uses the default policy-chaining engine.","nodes":[{"pos":[0,57],"content":"This constructor uses the default policy-chaining engine.","nodes":[{"content":"This constructor uses the default policy-chaining engine.","pos":[0,57]}]}],"pos":[7129,7187],"yaml":true,"extradata":"MT"},{"content":"A <xref href=\"System.Collections.ObjectModel.ReadOnlyCollection`1\"></xref> of type <xref href=\"System.IdentityModel.Policy.IAuthorizationPolicy\"></xref> that contains the authorization policies.","nodes":[{"pos":[0,194],"content":"A <ph id=\"ph1\">&lt;xref href=\"System.Collections.ObjectModel.ReadOnlyCollection`1\"&gt;&lt;/xref&gt;</ph> of type <ph id=\"ph2\">&lt;xref href=\"System.IdentityModel.Policy.IAuthorizationPolicy\"&gt;&lt;/xref&gt;</ph> that contains the authorization policies.","source":"A <xref href=\"System.Collections.ObjectModel.ReadOnlyCollection`1\"></xref> of type <xref href=\"System.IdentityModel.Policy.IAuthorizationPolicy\"></xref> that contains the authorization policies."}],"pos":[7544,7739],"yaml":true},{"content":"Initializes a new instance of the <xref href=\"System.ServiceModel.ServiceSecurityContext\"></xref> class with the specified authorization parameters.","nodes":[{"pos":[0,148],"content":"Initializes a new instance of the <ph id=\"ph1\">&lt;xref href=\"System.ServiceModel.ServiceSecurityContext\"&gt;&lt;/xref&gt;</ph> class with the specified authorization parameters.","source":"Initializes a new instance of the <xref href=\"System.ServiceModel.ServiceSecurityContext\"></xref> class with the specified authorization parameters."}],"pos":[9070,9219],"yaml":true},{"content":"This constructor is typically used in scenarios where an application runs its own policy-chaining engine, which results in an <xref:System.IdentityModel.Policy.AuthorizationContext>. For the default policy engine, use the constructors that take a collection of <xref:System.IdentityModel.Policy.IAuthorizationPolicy> as parameter.","nodes":[{"pos":[0,330],"content":"This constructor is typically used in scenarios where an application runs its own policy-chaining engine, which results in an <xref:System.IdentityModel.Policy.AuthorizationContext>. For the default policy engine, use the constructors that take a collection of <xref:System.IdentityModel.Policy.IAuthorizationPolicy> as parameter.","nodes":[{"content":"This constructor is typically used in scenarios where an application runs its own policy-chaining engine, which results in an <xref:System.IdentityModel.Policy.AuthorizationContext>. For the default policy engine, use the constructors that take a collection of <xref:System.IdentityModel.Policy.IAuthorizationPolicy> as parameter.","pos":[0,330],"nodes":[{"content":"This constructor is typically used in scenarios where an application runs its own policy-chaining engine, which results in an <ph id=\"ph1\">&lt;xref:System.IdentityModel.Policy.AuthorizationContext&gt;</ph>.","pos":[0,182],"source":"This constructor is typically used in scenarios where an application runs its own policy-chaining engine, which results in an <xref:System.IdentityModel.Policy.AuthorizationContext>."},{"content":"For the default policy engine, use the constructors that take a collection of <ph id=\"ph1\">&lt;xref:System.IdentityModel.Policy.IAuthorizationPolicy&gt;</ph> as parameter.","pos":[183,330],"source":" For the default policy engine, use the constructors that take a collection of <xref:System.IdentityModel.Policy.IAuthorizationPolicy> as parameter."}]}]}],"pos":[9230,9561],"yaml":true,"extradata":"MT"},{"content":"An <xref href=\"System.IdentityModel.Policy.AuthorizationContext\"></xref> that contains authorization information.","nodes":[{"pos":[0,113],"content":"An <ph id=\"ph1\">&lt;xref href=\"System.IdentityModel.Policy.AuthorizationContext\"&gt;&lt;/xref&gt;</ph> that contains authorization information.","source":"An <xref href=\"System.IdentityModel.Policy.AuthorizationContext\"></xref> that contains authorization information."}],"pos":[9814,9928],"yaml":true},{"content":"Initializes a new instance of the <xref href=\"System.ServiceModel.ServiceSecurityContext\"></xref> class with the specified authorization parameters and collection of policies.","nodes":[{"pos":[0,175],"content":"Initializes a new instance of the <ph id=\"ph1\">&lt;xref href=\"System.ServiceModel.ServiceSecurityContext\"&gt;&lt;/xref&gt;</ph> class with the specified authorization parameters and collection of policies.","source":"Initializes a new instance of the <xref href=\"System.ServiceModel.ServiceSecurityContext\"></xref> class with the specified authorization parameters and collection of policies."}],"pos":[11685,11861],"yaml":true},{"content":"An <xref href=\"System.IdentityModel.Policy.AuthorizationContext\"></xref> that contains authorization settings.","nodes":[{"pos":[0,110],"content":"An <ph id=\"ph1\">&lt;xref href=\"System.IdentityModel.Policy.AuthorizationContext\"&gt;&lt;/xref&gt;</ph> that contains authorization settings.","source":"An <xref href=\"System.IdentityModel.Policy.AuthorizationContext\"></xref> that contains authorization settings."}],"pos":[12237,12348],"yaml":true},{"content":"A <xref href=\"System.Collections.ObjectModel.ReadOnlyCollection`1\"></xref> of type <xref href=\"System.IdentityModel.Policy.IAuthorizationPolicy\"></xref> that contains the authorization policies.","nodes":[{"pos":[0,194],"content":"A <ph id=\"ph1\">&lt;xref href=\"System.Collections.ObjectModel.ReadOnlyCollection`1\"&gt;&lt;/xref&gt;</ph> of type <ph id=\"ph2\">&lt;xref href=\"System.IdentityModel.Policy.IAuthorizationPolicy\"&gt;&lt;/xref&gt;</ph> that contains the authorization policies.","source":"A <xref href=\"System.Collections.ObjectModel.ReadOnlyCollection`1\"></xref> of type <xref href=\"System.IdentityModel.Policy.IAuthorizationPolicy\"></xref> that contains the authorization policies."}],"pos":[12511,12706],"yaml":true},{"content":"Returns an instance of the <xref href=\"System.ServiceModel.ServiceSecurityContext\"></xref> class that contains an empty collection of claims, identities, and other context data that is usually used to represent an anonymous party.","nodes":[{"pos":[0,230],"content":"Returns an instance of the <ph id=\"ph1\">&lt;xref href=\"System.ServiceModel.ServiceSecurityContext\"&gt;&lt;/xref&gt;</ph> class that contains an empty collection of claims, identities, and other context data that is usually used to represent an anonymous party.","source":"Returns an instance of the <xref href=\"System.ServiceModel.ServiceSecurityContext\"></xref> class that contains an empty collection of claims, identities, and other context data that is usually used to represent an anonymous party."}],"pos":[13789,14020],"yaml":true},{"content":"An empty instance of the <xref href=\"System.ServiceModel.ServiceSecurityContext\"></xref>.","nodes":[{"pos":[0,89],"content":"An empty instance of the <ph id=\"ph1\">&lt;xref href=\"System.ServiceModel.ServiceSecurityContext\"&gt;&lt;/xref&gt;</ph>.","source":"An empty instance of the <xref href=\"System.ServiceModel.ServiceSecurityContext\"></xref>."}],"pos":[14205,14295],"yaml":true},{"content":"Gets the authorization information for an instance of this class.  The <xref href=\"System.IdentityModel.Policy.AuthorizationContext\"></xref> contains a collection of <xref href=\"System.IdentityModel.Claims.ClaimSet\"></xref> that the application can interrogate and retrieve the information of the party.","nodes":[{"pos":[0,303],"content":"Gets the authorization information for an instance of this class.  The <xref href=\"System.IdentityModel.Policy.AuthorizationContext\"></xref> contains a collection of <xref href=\"System.IdentityModel.Claims.ClaimSet\"></xref> that the application can interrogate and retrieve the information of the party.","nodes":[{"content":"Gets the authorization information for an instance of this class.","pos":[0,65]},{"content":"The <ph id=\"ph1\">&lt;xref href=\"System.IdentityModel.Policy.AuthorizationContext\"&gt;&lt;/xref&gt;</ph> contains a collection of <ph id=\"ph2\">&lt;xref href=\"System.IdentityModel.Claims.ClaimSet\"&gt;&lt;/xref&gt;</ph> that the application can interrogate and retrieve the information of the party.","pos":[67,303],"source":"  The <xref href=\"System.IdentityModel.Policy.AuthorizationContext\"></xref> contains a collection of <xref href=\"System.IdentityModel.Claims.ClaimSet\"></xref> that the application can interrogate and retrieve the information of the party."}]}],"pos":[15448,15752],"yaml":true},{"content":"An <xref href=\"System.IdentityModel.Policy.AuthorizationContext\"></xref> that contains the authorization settings.","nodes":[{"pos":[0,114],"content":"An <ph id=\"ph1\">&lt;xref href=\"System.IdentityModel.Policy.AuthorizationContext\"&gt;&lt;/xref&gt;</ph> that contains the authorization settings.","source":"An <xref href=\"System.IdentityModel.Policy.AuthorizationContext\"></xref> that contains the authorization settings."}],"pos":[15953,16068],"yaml":true},{"content":"Gets the collection of policies associated with an instance of this class.","nodes":[{"pos":[0,74],"content":"Gets the collection of policies associated with an instance of this class.","nodes":[{"content":"Gets the collection of policies associated with an instance of this class.","pos":[0,74]}]}],"pos":[17238,17313],"yaml":true},{"content":"A <xref href=\"System.Collections.ObjectModel.ReadOnlyCollection`1\"></xref> of type <xref href=\"System.IdentityModel.Policy.IAuthorizationPolicy\"></xref> that contains the policies.","nodes":[{"pos":[0,180],"content":"A <ph id=\"ph1\">&lt;xref href=\"System.Collections.ObjectModel.ReadOnlyCollection`1\"&gt;&lt;/xref&gt;</ph> of type <ph id=\"ph2\">&lt;xref href=\"System.IdentityModel.Policy.IAuthorizationPolicy\"&gt;&lt;/xref&gt;</ph> that contains the policies.","source":"A <xref href=\"System.Collections.ObjectModel.ReadOnlyCollection`1\"></xref> of type <xref href=\"System.IdentityModel.Policy.IAuthorizationPolicy\"></xref> that contains the policies."}],"pos":[17812,17993],"yaml":true},{"content":"Gets the current <xref href=\"System.ServiceModel.ServiceSecurityContext\"></xref>.","nodes":[{"pos":[0,81],"content":"Gets the current <ph id=\"ph1\">&lt;xref href=\"System.ServiceModel.ServiceSecurityContext\"&gt;&lt;/xref&gt;</ph>.","source":"Gets the current <xref href=\"System.ServiceModel.ServiceSecurityContext\"></xref>."}],"pos":[19080,19162],"yaml":true},{"content":"The current <xref href=\"System.ServiceModel.ServiceSecurityContext\"></xref>.","nodes":[{"pos":[0,76],"content":"The current <ph id=\"ph1\">&lt;xref href=\"System.ServiceModel.ServiceSecurityContext\"&gt;&lt;/xref&gt;</ph>.","source":"The current <xref href=\"System.ServiceModel.ServiceSecurityContext\"></xref>."}],"pos":[19345,19422],"yaml":true},{"content":"Gets a value that indicates whether the current client has provided credentials to the service.","nodes":[{"pos":[0,95],"content":"Gets a value that indicates whether the current client has provided credentials to the service.","nodes":[{"content":"Gets a value that indicates whether the current client has provided credentials to the service.","pos":[0,95]}]}],"pos":[20519,20615],"yaml":true},{"content":"`true` if the client has provided credentials; otherwise, `false`.","nodes":[{"pos":[0,66],"content":"<ph id=\"ph1\">`true`</ph> if the client has provided credentials; otherwise, <ph id=\"ph2\">`false`</ph>.","source":"`true` if the client has provided credentials; otherwise, `false`."}],"pos":[20729,20798],"yaml":true},{"content":"Gets the primary identity associated with the current setting.","nodes":[{"pos":[0,62],"content":"Gets the primary identity associated with the current setting.","nodes":[{"content":"Gets the primary identity associated with the current setting.","pos":[0,62]}]}],"pos":[21923,21986],"yaml":true},{"content":"The primary identity is obtained from the credentials used to authenticate the current user. If the credential is an X.509 certificate, the identity is a concatenation of the subject name and the thumbprint (in that order). The subject name is separated from the thumbprint with a semicolon and a space. If the subject field of the certificate is `null`, the primary identity includes just a semicolon, a space, and the thumbprint.  \n  \n When a duplex message exchange pattern is used with Kerberos direct authentication, this property becomes empty on the callback and the claimset is also empty. This does not happen when *SspiNegotiated* is used instead of Kerberos.  \n  \n The Kerberos Requester Token is used only on the client to represent the service. The authorization policy that it generates contains one claim, an SPN; hence, no identity in the claim. In most cases there is no problem, because <xref:System.ServiceModel.ServiceSecurityContext> is not used on the client. In a duplex scenario during callback, if the callback inspects this property, it gets an anonymous identity.","nodes":[{"pos":[0,431],"content":"The primary identity is obtained from the credentials used to authenticate the current user. If the credential is an X.509 certificate, the identity is a concatenation of the subject name and the thumbprint (in that order). The subject name is separated from the thumbprint with a semicolon and a space. If the subject field of the certificate is `null`, the primary identity includes just a semicolon, a space, and the thumbprint.","nodes":[{"content":"The primary identity is obtained from the credentials used to authenticate the current user.","pos":[0,92]},{"content":"If the credential is an X.509 certificate, the identity is a concatenation of the subject name and the thumbprint (in that order).","pos":[93,223]},{"content":"The subject name is separated from the thumbprint with a semicolon and a space.","pos":[224,303]},{"content":"If the subject field of the certificate is <ph id=\"ph1\">`null`</ph>, the primary identity includes just a semicolon, a space, and the thumbprint.","pos":[304,431],"source":" If the subject field of the certificate is `null`, the primary identity includes just a semicolon, a space, and the thumbprint."}]},{"pos":[438,669],"content":"When a duplex message exchange pattern is used with Kerberos direct authentication, this property becomes empty on the callback and the claimset is also empty. This does not happen when *SspiNegotiated* is used instead of Kerberos.","nodes":[{"content":"When a duplex message exchange pattern is used with Kerberos direct authentication, this property becomes empty on the callback and the claimset is also empty.","pos":[0,159]},{"content":"This does not happen when <bpt id=\"p1\">*</bpt>SspiNegotiated<ept id=\"p1\">*</ept> is used instead of Kerberos.","pos":[160,231],"source":" This does not happen when *SspiNegotiated* is used instead of Kerberos."}]},{"pos":[676,1090],"content":"The Kerberos Requester Token is used only on the client to represent the service. The authorization policy that it generates contains one claim, an SPN; hence, no identity in the claim. In most cases there is no problem, because <xref:System.ServiceModel.ServiceSecurityContext> is not used on the client. In a duplex scenario during callback, if the callback inspects this property, it gets an anonymous identity.","nodes":[{"content":"The Kerberos Requester Token is used only on the client to represent the service. The authorization policy that it generates contains one claim, an SPN; hence, no identity in the claim. In most cases there is no problem, because <xref:System.ServiceModel.ServiceSecurityContext> is not used on the client. In a duplex scenario during callback, if the callback inspects this property, it gets an anonymous identity.","pos":[0,414],"nodes":[{"content":"The Kerberos Requester Token is used only on the client to represent the service.","pos":[0,81]},{"content":"The authorization policy that it generates contains one claim, an SPN; hence, no identity in the claim.","pos":[82,185]},{"content":"In most cases there is no problem, because <ph id=\"ph1\">&lt;xref:System.ServiceModel.ServiceSecurityContext&gt;</ph> is not used on the client.","pos":[186,305],"source":" In most cases there is no problem, because <xref:System.ServiceModel.ServiceSecurityContext> is not used on the client."},{"content":"In a duplex scenario during callback, if the callback inspects this property, it gets an anonymous identity.","pos":[306,414]}]}]}],"pos":[21997,23094],"yaml":true,"extradata":"MT"},{"content":"An <xref href=\"System.Security.Principal.IIdentity\"></xref> associated with the current setting.","nodes":[{"pos":[0,96],"content":"An <ph id=\"ph1\">&lt;xref href=\"System.Security.Principal.IIdentity\"&gt;&lt;/xref&gt;</ph> associated with the current setting.","source":"An <xref href=\"System.Security.Principal.IIdentity\"></xref> associated with the current setting."}],"pos":[23484,23581],"yaml":true},{"content":"Gets the Windows identity of the current setting.","nodes":[{"pos":[0,49],"content":"Gets the Windows identity of the current setting.","nodes":[{"content":"Gets the Windows identity of the current setting.","pos":[0,49]}]}],"pos":[24710,24760],"yaml":true},{"content":"If the remote party cannot be associated with a Windows account, the <xref:System.Security.Principal.WindowsIdentity.IsAnonymous%2A> property is set to `true`.","nodes":[{"pos":[0,159],"content":"If the remote party cannot be associated with a Windows account, the <ph id=\"ph1\">&lt;xref:System.Security.Principal.WindowsIdentity.IsAnonymous%2A&gt;</ph> property is set to <ph id=\"ph2\">`true`</ph>.","source":"If the remote party cannot be associated with a Windows account, the <xref:System.Security.Principal.WindowsIdentity.IsAnonymous%2A> property is set to `true`."}],"pos":[24771,24931],"yaml":true,"extradata":"MT"},{"content":"A <xref href=\"System.Security.Principal.WindowsIdentity\"></xref> that represents the Windows domain user.","nodes":[{"pos":[0,105],"content":"A <ph id=\"ph1\">&lt;xref href=\"System.Security.Principal.WindowsIdentity\"&gt;&lt;/xref&gt;</ph> that represents the Windows domain user.","source":"A <xref href=\"System.Security.Principal.WindowsIdentity\"></xref> that represents the Windows domain user."}],"pos":[25246,25352],"yaml":true}],"content":"### YamlMime:ManagedReference\nitems:\n- uid: System.ServiceModel.ServiceSecurityContext\n  commentId: T:System.ServiceModel.ServiceSecurityContext\n  id: ServiceSecurityContext\n  children:\n  - System.ServiceModel.ServiceSecurityContext.#ctor(System.Collections.ObjectModel.ReadOnlyCollection{System.IdentityModel.Policy.IAuthorizationPolicy})\n  - System.ServiceModel.ServiceSecurityContext.#ctor(System.IdentityModel.Policy.AuthorizationContext)\n  - System.ServiceModel.ServiceSecurityContext.#ctor(System.IdentityModel.Policy.AuthorizationContext,System.Collections.ObjectModel.ReadOnlyCollection{System.IdentityModel.Policy.IAuthorizationPolicy})\n  - System.ServiceModel.ServiceSecurityContext.Anonymous\n  - System.ServiceModel.ServiceSecurityContext.AuthorizationContext\n  - System.ServiceModel.ServiceSecurityContext.AuthorizationPolicies\n  - System.ServiceModel.ServiceSecurityContext.Current\n  - System.ServiceModel.ServiceSecurityContext.IsAnonymous\n  - System.ServiceModel.ServiceSecurityContext.PrimaryIdentity\n  - System.ServiceModel.ServiceSecurityContext.WindowsIdentity\n  langs:\n  - csharp\n  name: ServiceSecurityContext\n  nameWithType: ServiceSecurityContext\n  fullName: System.ServiceModel.ServiceSecurityContext\n  type: Class\n  assemblies:\n  - System.ServiceModel\n  namespace: System.ServiceModel\n  summary: Represents the security context of a remote party. On the client, represents the service identity and, on the service, represents the client identity.\n  remarks: \"The data is part of the <xref:System.ServiceModel.Security.SecurityMessageProperty> for a message.  \\n  \\n Use this class to obtain information about a remote *security context* at runtime. A security context is created when a client is successfully authenticated and authorized to access a method. When a message is successfully authenticated and authorized, the security information from the client and for the current service instance can be obtained from an instance of this class.  \\n  \\n You can retrieve an instance of the <xref:System.ServiceModel.ServiceSecurityContext> from the <xref:System.ServiceModel.OperationContext.Current%2A> property of the <xref:System.ServiceModel.OperationContext> class, or use it from within a service operation method, as shown in the following example.  \\n  \\n## Parsing a ClaimSet  \\n A common use of the class is to retrieve the current set of claims for the purpose of identifying or authorizing a client when accessing a method. The <xref:System.IdentityModel.Claims.ClaimSet> class contains a collection of <xref:System.IdentityModel.Claims.Claim> objects, and each can be parsed to determine whether a specific claim is present. If the specified claim is provided, authorization can be granted. This functionality is provided by overriding the <xref:System.ServiceModel.ServiceAuthorizationManager.CheckAccessCore%2A> method of the <xref:System.ServiceModel.ServiceAuthorizationManager> class.  For a complete example, see the [Authorization Policy](~/docs/framework/wcf/samples/authorization-policy.md).  \\n  \\n## Cookie Mode and IsAuthenticated  \\n Note that under some circumstances, the <xref:System.Security.Principal.IIdentity.IsAuthenticated%2A> property of the <xref:System.Security.Principal.IIdentity> interface returns `true` even if the remote client is authenticated as an anonymous user. (The <xref:System.ServiceModel.ServiceSecurityContext.PrimaryIdentity%2A> property returns an implementation of the <xref:System.Security.Principal.IIdentity> interface.) The following circumstances must be true for this to occur:  \\n  \\n-   The service uses Windows authentication.  \\n  \\n-   The service allows anonymous logons.  \\n  \\n-   The binding is a [\\\\&lt;customBinding\\\\&gt;](~/docs/framework/configure-apps/file-schema/wcf/custombinding.md).  \\n  \\n-   The custom binding includes a `<security>` element.  \\n  \\n-   The `<security>` element includes a [\\\\&lt;secureConversationBootstrap\\\\&gt;](~/docs/framework/configure-apps/file-schema/wcf/secureconversationbootstrap.md) with the `requireSecurityContextCancellation` attribute set to `false`.\"\n  example:\n  - \"The following example uses the <xref:System.ServiceModel.ServiceSecurityContext> class to provide information about the current security context. The code creates an instance of the <xref:System.IO.StreamWriter> class to write the information to a file.  \\n  \\n [!code-csharp[ServiceSecurityContext#1](~/samples/snippets/csharp/VS_Snippets_CFX/servicesecuritycontext/cs/source.cs#1)]\\n [!code-vb[ServiceSecurityContext#1](~/samples/snippets/visualbasic/VS_Snippets_CFX/servicesecuritycontext/vb/source.vb#1)]  \\n  \\n The following example shows an implementation of the <xref:System.ServiceModel.ServiceAuthorizationManager.CheckAccessCore%2A> method that uses the <xref:System.ServiceModel.ServiceSecurityContext> to parse a set of claims.  \\n  \\n [!code-csharp[ServiceSecurityContext#2](~/samples/snippets/csharp/VS_Snippets_CFX/servicesecuritycontext/cs/source.cs#2)]\\n [!code-vb[ServiceSecurityContext#2](~/samples/snippets/visualbasic/VS_Snippets_CFX/servicesecuritycontext/vb/source.vb#2)]\"\n  syntax:\n    content: public class ServiceSecurityContext\n  inheritance:\n  - System.Object\n  implements: []\n  inheritedMembers:\n  - System.Object.Equals(System.Object)\n  - System.Object.Equals(System.Object,System.Object)\n  - System.Object.GetHashCode\n  - System.Object.GetType\n  - System.Object.MemberwiseClone\n  - System.Object.ReferenceEquals(System.Object,System.Object)\n  - System.Object.ToString\n  version:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - xamarinmac-3.0\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - xamarinmac-3.0\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.ServiceModel/ServiceSecurityContext.xml\n  ms.technology:\n  - dotnet-standard\n  author: Erikre\n  ms.author: erikre\n  manager: erikre\n- uid: System.ServiceModel.ServiceSecurityContext.#ctor(System.Collections.ObjectModel.ReadOnlyCollection{System.IdentityModel.Policy.IAuthorizationPolicy})\n  commentId: M:System.ServiceModel.ServiceSecurityContext.#ctor(System.Collections.ObjectModel.ReadOnlyCollection{System.IdentityModel.Policy.IAuthorizationPolicy})\n  id: '#ctor(System.Collections.ObjectModel.ReadOnlyCollection{System.IdentityModel.Policy.IAuthorizationPolicy})'\n  parent: System.ServiceModel.ServiceSecurityContext\n  langs:\n  - csharp\n  name: ServiceSecurityContext(ReadOnlyCollection<IAuthorizationPolicy>)\n  nameWithType: ServiceSecurityContext.ServiceSecurityContext(ReadOnlyCollection<IAuthorizationPolicy>)\n  fullName: ServiceSecurityContext.ServiceSecurityContext(ReadOnlyCollection<IAuthorizationPolicy>)\n  type: Constructor\n  assemblies:\n  - System.ServiceModel\n  namespace: System.ServiceModel\n  summary: Initializes a new instance of the <xref href=\"System.ServiceModel.ServiceSecurityContext\"></xref> class with the collection of policies object.\n  remarks: This constructor uses the default policy-chaining engine.\n  syntax:\n    content: public ServiceSecurityContext (System.Collections.ObjectModel.ReadOnlyCollection<System.IdentityModel.Policy.IAuthorizationPolicy> authorizationPolicies);\n    parameters:\n    - id: authorizationPolicies\n      type: System.Collections.ObjectModel.ReadOnlyCollection{System.IdentityModel.Policy.IAuthorizationPolicy}\n      description: A <xref href=\"System.Collections.ObjectModel.ReadOnlyCollection`1\"></xref> of type <xref href=\"System.IdentityModel.Policy.IAuthorizationPolicy\"></xref> that contains the authorization policies.\n  overload: System.ServiceModel.ServiceSecurityContext.#ctor*\n  exceptions: []\n  version:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - xamarinmac-3.0\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - xamarinmac-3.0\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.ServiceModel/ServiceSecurityContext.xml\n  ms.technology:\n  - dotnet-standard\n  author: Erikre\n  ms.author: erikre\n  manager: erikre\n- uid: System.ServiceModel.ServiceSecurityContext.#ctor(System.IdentityModel.Policy.AuthorizationContext)\n  commentId: M:System.ServiceModel.ServiceSecurityContext.#ctor(System.IdentityModel.Policy.AuthorizationContext)\n  id: '#ctor(System.IdentityModel.Policy.AuthorizationContext)'\n  parent: System.ServiceModel.ServiceSecurityContext\n  langs:\n  - csharp\n  name: ServiceSecurityContext(AuthorizationContext)\n  nameWithType: ServiceSecurityContext.ServiceSecurityContext(AuthorizationContext)\n  fullName: ServiceSecurityContext.ServiceSecurityContext(AuthorizationContext)\n  type: Constructor\n  assemblies:\n  - System.ServiceModel\n  namespace: System.ServiceModel\n  summary: Initializes a new instance of the <xref href=\"System.ServiceModel.ServiceSecurityContext\"></xref> class with the specified authorization parameters.\n  remarks: This constructor is typically used in scenarios where an application runs its own policy-chaining engine, which results in an <xref:System.IdentityModel.Policy.AuthorizationContext>. For the default policy engine, use the constructors that take a collection of <xref:System.IdentityModel.Policy.IAuthorizationPolicy> as parameter.\n  syntax:\n    content: public ServiceSecurityContext (System.IdentityModel.Policy.AuthorizationContext authorizationContext);\n    parameters:\n    - id: authorizationContext\n      type: System.IdentityModel.Policy.AuthorizationContext\n      description: An <xref href=\"System.IdentityModel.Policy.AuthorizationContext\"></xref> that contains authorization information.\n  overload: System.ServiceModel.ServiceSecurityContext.#ctor*\n  exceptions: []\n  version:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - xamarinmac-3.0\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - xamarinmac-3.0\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.ServiceModel/ServiceSecurityContext.xml\n  ms.technology:\n  - dotnet-standard\n  author: Erikre\n  ms.author: erikre\n  manager: erikre\n- uid: System.ServiceModel.ServiceSecurityContext.#ctor(System.IdentityModel.Policy.AuthorizationContext,System.Collections.ObjectModel.ReadOnlyCollection{System.IdentityModel.Policy.IAuthorizationPolicy})\n  commentId: M:System.ServiceModel.ServiceSecurityContext.#ctor(System.IdentityModel.Policy.AuthorizationContext,System.Collections.ObjectModel.ReadOnlyCollection{System.IdentityModel.Policy.IAuthorizationPolicy})\n  id: '#ctor(System.IdentityModel.Policy.AuthorizationContext,System.Collections.ObjectModel.ReadOnlyCollection{System.IdentityModel.Policy.IAuthorizationPolicy})'\n  parent: System.ServiceModel.ServiceSecurityContext\n  langs:\n  - csharp\n  name: ServiceSecurityContext(AuthorizationContext, ReadOnlyCollection<IAuthorizationPolicy>)\n  nameWithType: ServiceSecurityContext.ServiceSecurityContext(AuthorizationContext, ReadOnlyCollection<IAuthorizationPolicy>)\n  fullName: ServiceSecurityContext.ServiceSecurityContext(AuthorizationContext, ReadOnlyCollection<IAuthorizationPolicy>)\n  type: Constructor\n  assemblies:\n  - System.ServiceModel\n  namespace: System.ServiceModel\n  summary: Initializes a new instance of the <xref href=\"System.ServiceModel.ServiceSecurityContext\"></xref> class with the specified authorization parameters and collection of policies.\n  syntax:\n    content: public ServiceSecurityContext (System.IdentityModel.Policy.AuthorizationContext authorizationContext, System.Collections.ObjectModel.ReadOnlyCollection<System.IdentityModel.Policy.IAuthorizationPolicy> authorizationPolicies);\n    parameters:\n    - id: authorizationContext\n      type: System.IdentityModel.Policy.AuthorizationContext\n      description: An <xref href=\"System.IdentityModel.Policy.AuthorizationContext\"></xref> that contains authorization settings.\n    - id: authorizationPolicies\n      type: System.Collections.ObjectModel.ReadOnlyCollection{System.IdentityModel.Policy.IAuthorizationPolicy}\n      description: A <xref href=\"System.Collections.ObjectModel.ReadOnlyCollection`1\"></xref> of type <xref href=\"System.IdentityModel.Policy.IAuthorizationPolicy\"></xref> that contains the authorization policies.\n  overload: System.ServiceModel.ServiceSecurityContext.#ctor*\n  exceptions: []\n  version:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - xamarinmac-3.0\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - xamarinmac-3.0\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.ServiceModel/ServiceSecurityContext.xml\n  ms.technology:\n  - dotnet-standard\n  author: Erikre\n  ms.author: erikre\n  manager: erikre\n- uid: System.ServiceModel.ServiceSecurityContext.Anonymous\n  commentId: P:System.ServiceModel.ServiceSecurityContext.Anonymous\n  id: Anonymous\n  parent: System.ServiceModel.ServiceSecurityContext\n  langs:\n  - csharp\n  name: Anonymous\n  nameWithType: ServiceSecurityContext.Anonymous\n  fullName: ServiceSecurityContext.Anonymous\n  type: Property\n  assemblies:\n  - System.ServiceModel\n  namespace: System.ServiceModel\n  summary: Returns an instance of the <xref href=\"System.ServiceModel.ServiceSecurityContext\"></xref> class that contains an empty collection of claims, identities, and other context data that is usually used to represent an anonymous party.\n  syntax:\n    content: public static System.ServiceModel.ServiceSecurityContext Anonymous { get; }\n    return:\n      type: System.ServiceModel.ServiceSecurityContext\n      description: An empty instance of the <xref href=\"System.ServiceModel.ServiceSecurityContext\"></xref>.\n  overload: System.ServiceModel.ServiceSecurityContext.Anonymous*\n  exceptions: []\n  version:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - xamarinmac-3.0\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - xamarinmac-3.0\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.ServiceModel/ServiceSecurityContext.xml\n  ms.technology:\n  - dotnet-standard\n  author: Erikre\n  ms.author: erikre\n  manager: erikre\n- uid: System.ServiceModel.ServiceSecurityContext.AuthorizationContext\n  commentId: P:System.ServiceModel.ServiceSecurityContext.AuthorizationContext\n  id: AuthorizationContext\n  parent: System.ServiceModel.ServiceSecurityContext\n  langs:\n  - csharp\n  name: AuthorizationContext\n  nameWithType: ServiceSecurityContext.AuthorizationContext\n  fullName: ServiceSecurityContext.AuthorizationContext\n  type: Property\n  assemblies:\n  - System.ServiceModel\n  namespace: System.ServiceModel\n  summary: Gets the authorization information for an instance of this class.  The <xref href=\"System.IdentityModel.Policy.AuthorizationContext\"></xref> contains a collection of <xref href=\"System.IdentityModel.Claims.ClaimSet\"></xref> that the application can interrogate and retrieve the information of the party.\n  syntax:\n    content: public System.IdentityModel.Policy.AuthorizationContext AuthorizationContext { get; }\n    return:\n      type: System.IdentityModel.Policy.AuthorizationContext\n      description: An <xref href=\"System.IdentityModel.Policy.AuthorizationContext\"></xref> that contains the authorization settings.\n  overload: System.ServiceModel.ServiceSecurityContext.AuthorizationContext*\n  exceptions: []\n  version:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - xamarinmac-3.0\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - xamarinmac-3.0\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.ServiceModel/ServiceSecurityContext.xml\n  ms.technology:\n  - dotnet-standard\n  author: Erikre\n  ms.author: erikre\n  manager: erikre\n- uid: System.ServiceModel.ServiceSecurityContext.AuthorizationPolicies\n  commentId: P:System.ServiceModel.ServiceSecurityContext.AuthorizationPolicies\n  id: AuthorizationPolicies\n  parent: System.ServiceModel.ServiceSecurityContext\n  langs:\n  - csharp\n  name: AuthorizationPolicies\n  nameWithType: ServiceSecurityContext.AuthorizationPolicies\n  fullName: ServiceSecurityContext.AuthorizationPolicies\n  type: Property\n  assemblies:\n  - System.ServiceModel\n  namespace: System.ServiceModel\n  summary: Gets the collection of policies associated with an instance of this class.\n  remarks: ''\n  example:\n  - '[Managing Claims and Authorization with the Identity Model](~/docs/framework/wcf/feature-details/managing-claims-and-authorization-with-the-identity-model.md)'\n  syntax:\n    content: public System.Collections.ObjectModel.ReadOnlyCollection<System.IdentityModel.Policy.IAuthorizationPolicy> AuthorizationPolicies { get; set; }\n    return:\n      type: System.Collections.ObjectModel.ReadOnlyCollection{System.IdentityModel.Policy.IAuthorizationPolicy}\n      description: A <xref href=\"System.Collections.ObjectModel.ReadOnlyCollection`1\"></xref> of type <xref href=\"System.IdentityModel.Policy.IAuthorizationPolicy\"></xref> that contains the policies.\n  overload: System.ServiceModel.ServiceSecurityContext.AuthorizationPolicies*\n  exceptions: []\n  version:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - xamarinmac-3.0\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - xamarinmac-3.0\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.ServiceModel/ServiceSecurityContext.xml\n  ms.technology:\n  - dotnet-standard\n  author: Erikre\n  ms.author: erikre\n  manager: erikre\n- uid: System.ServiceModel.ServiceSecurityContext.Current\n  commentId: P:System.ServiceModel.ServiceSecurityContext.Current\n  id: Current\n  parent: System.ServiceModel.ServiceSecurityContext\n  langs:\n  - csharp\n  name: Current\n  nameWithType: ServiceSecurityContext.Current\n  fullName: ServiceSecurityContext.Current\n  type: Property\n  assemblies:\n  - System.ServiceModel\n  namespace: System.ServiceModel\n  summary: Gets the current <xref href=\"System.ServiceModel.ServiceSecurityContext\"></xref>.\n  syntax:\n    content: public static System.ServiceModel.ServiceSecurityContext Current { get; }\n    return:\n      type: System.ServiceModel.ServiceSecurityContext\n      description: The current <xref href=\"System.ServiceModel.ServiceSecurityContext\"></xref>.\n  overload: System.ServiceModel.ServiceSecurityContext.Current*\n  exceptions: []\n  version:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - xamarinmac-3.0\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - xamarinmac-3.0\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.ServiceModel/ServiceSecurityContext.xml\n  ms.technology:\n  - dotnet-standard\n  author: Erikre\n  ms.author: erikre\n  manager: erikre\n- uid: System.ServiceModel.ServiceSecurityContext.IsAnonymous\n  commentId: P:System.ServiceModel.ServiceSecurityContext.IsAnonymous\n  id: IsAnonymous\n  parent: System.ServiceModel.ServiceSecurityContext\n  langs:\n  - csharp\n  name: IsAnonymous\n  nameWithType: ServiceSecurityContext.IsAnonymous\n  fullName: ServiceSecurityContext.IsAnonymous\n  type: Property\n  assemblies:\n  - System.ServiceModel\n  namespace: System.ServiceModel\n  summary: Gets a value that indicates whether the current client has provided credentials to the service.\n  syntax:\n    content: public bool IsAnonymous { get; }\n    return:\n      type: System.Boolean\n      description: '`true` if the client has provided credentials; otherwise, `false`.'\n  overload: System.ServiceModel.ServiceSecurityContext.IsAnonymous*\n  exceptions: []\n  version:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - xamarinmac-3.0\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - xamarinmac-3.0\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.ServiceModel/ServiceSecurityContext.xml\n  ms.technology:\n  - dotnet-standard\n  author: Erikre\n  ms.author: erikre\n  manager: erikre\n- uid: System.ServiceModel.ServiceSecurityContext.PrimaryIdentity\n  commentId: P:System.ServiceModel.ServiceSecurityContext.PrimaryIdentity\n  id: PrimaryIdentity\n  parent: System.ServiceModel.ServiceSecurityContext\n  langs:\n  - csharp\n  name: PrimaryIdentity\n  nameWithType: ServiceSecurityContext.PrimaryIdentity\n  fullName: ServiceSecurityContext.PrimaryIdentity\n  type: Property\n  assemblies:\n  - System.ServiceModel\n  namespace: System.ServiceModel\n  summary: Gets the primary identity associated with the current setting.\n  remarks: \"The primary identity is obtained from the credentials used to authenticate the current user. If the credential is an X.509 certificate, the identity is a concatenation of the subject name and the thumbprint (in that order). The subject name is separated from the thumbprint with a semicolon and a space. If the subject field of the certificate is `null`, the primary identity includes just a semicolon, a space, and the thumbprint.  \\n  \\n When a duplex message exchange pattern is used with Kerberos direct authentication, this property becomes empty on the callback and the claimset is also empty. This does not happen when *SspiNegotiated* is used instead of Kerberos.  \\n  \\n The Kerberos Requester Token is used only on the client to represent the service. The authorization policy that it generates contains one claim, an SPN; hence, no identity in the claim. In most cases there is no problem, because <xref:System.ServiceModel.ServiceSecurityContext> is not used on the client. In a duplex scenario during callback, if the callback inspects this property, it gets an anonymous identity.\"\n  example:\n  - 'For an example of using the `PrimaryIdentity` property to authorize a client using a certificate, see [How to: Examine the Security Context](~/docs/framework/wcf/how-to-examine-the-security-context.md).'\n  syntax:\n    content: public System.Security.Principal.IIdentity PrimaryIdentity { get; }\n    return:\n      type: System.Security.Principal.IIdentity\n      description: An <xref href=\"System.Security.Principal.IIdentity\"></xref> associated with the current setting.\n  overload: System.ServiceModel.ServiceSecurityContext.PrimaryIdentity*\n  exceptions: []\n  version:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - xamarinmac-3.0\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - xamarinmac-3.0\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.ServiceModel/ServiceSecurityContext.xml\n  ms.technology:\n  - dotnet-standard\n  author: Erikre\n  ms.author: erikre\n  manager: erikre\n- uid: System.ServiceModel.ServiceSecurityContext.WindowsIdentity\n  commentId: P:System.ServiceModel.ServiceSecurityContext.WindowsIdentity\n  id: WindowsIdentity\n  parent: System.ServiceModel.ServiceSecurityContext\n  langs:\n  - csharp\n  name: WindowsIdentity\n  nameWithType: ServiceSecurityContext.WindowsIdentity\n  fullName: ServiceSecurityContext.WindowsIdentity\n  type: Property\n  assemblies:\n  - System.ServiceModel\n  namespace: System.ServiceModel\n  summary: Gets the Windows identity of the current setting.\n  remarks: If the remote party cannot be associated with a Windows account, the <xref:System.Security.Principal.WindowsIdentity.IsAnonymous%2A> property is set to `true`.\n  example:\n  - \"<xref:System.Security.Permissions.PrincipalPermissionAttribute>  \\n  \\n <xref:System.Security.Principal.IPrincipal>\"\n  syntax:\n    content: public System.Security.Principal.WindowsIdentity WindowsIdentity { get; }\n    return:\n      type: System.Security.Principal.WindowsIdentity\n      description: A <xref href=\"System.Security.Principal.WindowsIdentity\"></xref> that represents the Windows domain user.\n  overload: System.ServiceModel.ServiceSecurityContext.WindowsIdentity*\n  exceptions: []\n  version:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - xamarinmac-3.0\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - xamarinmac-3.0\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.ServiceModel/ServiceSecurityContext.xml\n  ms.technology:\n  - dotnet-standard\n  author: Erikre\n  ms.author: erikre\n  manager: erikre\nreferences:\n- uid: System.Object\n  parent: System\n  isExternal: false\n  name: Object\n  nameWithType: Object\n  fullName: System.Object\n- uid: System.ServiceModel.ServiceSecurityContext.#ctor(System.Collections.ObjectModel.ReadOnlyCollection{System.IdentityModel.Policy.IAuthorizationPolicy})\n  parent: System.ServiceModel.ServiceSecurityContext\n  isExternal: false\n  name: ServiceSecurityContext(ReadOnlyCollection<IAuthorizationPolicy>)\n  nameWithType: ServiceSecurityContext.ServiceSecurityContext(ReadOnlyCollection<IAuthorizationPolicy>)\n  fullName: ServiceSecurityContext.ServiceSecurityContext(ReadOnlyCollection<IAuthorizationPolicy>)\n- uid: System.Collections.ObjectModel.ReadOnlyCollection`1\n  name: ReadOnlyCollection<T>\n  nameWithType: ReadOnlyCollection<T>\n  fullName: System.Collections.ObjectModel.ReadOnlyCollection<T>\n- uid: System.IdentityModel.Policy.IAuthorizationPolicy\n  name: IAuthorizationPolicy\n  nameWithType: IAuthorizationPolicy\n  fullName: System.IdentityModel.Policy.IAuthorizationPolicy\n- uid: System.Collections.ObjectModel.ReadOnlyCollection{System.IdentityModel.Policy.IAuthorizationPolicy}\n  parent: System.Collections.ObjectModel\n  isExternal: false\n  name: ReadOnlyCollection<IAuthorizationPolicy>\n  nameWithType: ReadOnlyCollection<IAuthorizationPolicy>\n  fullName: System.Collections.ObjectModel.ReadOnlyCollection<System.IdentityModel.Policy.IAuthorizationPolicy>\n  spec.csharp:\n  - uid: System.Collections.ObjectModel.ReadOnlyCollection`1\n    name: ReadOnlyCollection\n    nameWithType: ReadOnlyCollection\n    fullName: System.Collections.ObjectModel.ReadOnlyCollection\n  - name: <\n    nameWithType: <\n    fullName: <\n  - uid: System.IdentityModel.Policy.IAuthorizationPolicy\n    name: IAuthorizationPolicy\n    nameWithType: IAuthorizationPolicy\n    fullName: System.IdentityModel.Policy.IAuthorizationPolicy\n  - name: '>'\n    nameWithType: '>'\n    fullName: '>'\n- uid: System.ServiceModel.ServiceSecurityContext.#ctor(System.IdentityModel.Policy.AuthorizationContext)\n  parent: System.ServiceModel.ServiceSecurityContext\n  isExternal: false\n  name: ServiceSecurityContext(AuthorizationContext)\n  nameWithType: ServiceSecurityContext.ServiceSecurityContext(AuthorizationContext)\n  fullName: ServiceSecurityContext.ServiceSecurityContext(AuthorizationContext)\n- uid: System.IdentityModel.Policy.AuthorizationContext\n  parent: System.IdentityModel.Policy\n  isExternal: false\n  name: AuthorizationContext\n  nameWithType: AuthorizationContext\n  fullName: System.IdentityModel.Policy.AuthorizationContext\n- uid: System.ServiceModel.ServiceSecurityContext.#ctor(System.IdentityModel.Policy.AuthorizationContext,System.Collections.ObjectModel.ReadOnlyCollection{System.IdentityModel.Policy.IAuthorizationPolicy})\n  parent: System.ServiceModel.ServiceSecurityContext\n  isExternal: false\n  name: ServiceSecurityContext(AuthorizationContext, ReadOnlyCollection<IAuthorizationPolicy>)\n  nameWithType: ServiceSecurityContext.ServiceSecurityContext(AuthorizationContext, ReadOnlyCollection<IAuthorizationPolicy>)\n  fullName: ServiceSecurityContext.ServiceSecurityContext(AuthorizationContext, ReadOnlyCollection<IAuthorizationPolicy>)\n- uid: System.ServiceModel.ServiceSecurityContext.Anonymous\n  parent: System.ServiceModel.ServiceSecurityContext\n  isExternal: false\n  name: Anonymous\n  nameWithType: ServiceSecurityContext.Anonymous\n  fullName: ServiceSecurityContext.Anonymous\n- uid: System.ServiceModel.ServiceSecurityContext\n  parent: System.ServiceModel\n  isExternal: false\n  name: ServiceSecurityContext\n  nameWithType: ServiceSecurityContext\n  fullName: System.ServiceModel.ServiceSecurityContext\n- uid: System.ServiceModel.ServiceSecurityContext.AuthorizationContext\n  parent: System.ServiceModel.ServiceSecurityContext\n  isExternal: false\n  name: AuthorizationContext\n  nameWithType: ServiceSecurityContext.AuthorizationContext\n  fullName: ServiceSecurityContext.AuthorizationContext\n- uid: System.ServiceModel.ServiceSecurityContext.AuthorizationPolicies\n  parent: System.ServiceModel.ServiceSecurityContext\n  isExternal: false\n  name: AuthorizationPolicies\n  nameWithType: ServiceSecurityContext.AuthorizationPolicies\n  fullName: ServiceSecurityContext.AuthorizationPolicies\n- uid: System.ServiceModel.ServiceSecurityContext.Current\n  parent: System.ServiceModel.ServiceSecurityContext\n  isExternal: false\n  name: Current\n  nameWithType: ServiceSecurityContext.Current\n  fullName: ServiceSecurityContext.Current\n- uid: System.ServiceModel.ServiceSecurityContext.IsAnonymous\n  parent: System.ServiceModel.ServiceSecurityContext\n  isExternal: false\n  name: IsAnonymous\n  nameWithType: ServiceSecurityContext.IsAnonymous\n  fullName: ServiceSecurityContext.IsAnonymous\n- uid: System.Boolean\n  parent: System\n  isExternal: false\n  name: Boolean\n  nameWithType: Boolean\n  fullName: System.Boolean\n- uid: System.ServiceModel.ServiceSecurityContext.PrimaryIdentity\n  parent: System.ServiceModel.ServiceSecurityContext\n  isExternal: false\n  name: PrimaryIdentity\n  nameWithType: ServiceSecurityContext.PrimaryIdentity\n  fullName: ServiceSecurityContext.PrimaryIdentity\n- uid: System.Security.Principal.IIdentity\n  parent: System.Security.Principal\n  isExternal: false\n  name: IIdentity\n  nameWithType: IIdentity\n  fullName: System.Security.Principal.IIdentity\n- uid: System.ServiceModel.ServiceSecurityContext.WindowsIdentity\n  parent: System.ServiceModel.ServiceSecurityContext\n  isExternal: false\n  name: WindowsIdentity\n  nameWithType: ServiceSecurityContext.WindowsIdentity\n  fullName: ServiceSecurityContext.WindowsIdentity\n- uid: System.Security.Principal.WindowsIdentity\n  parent: System.Security.Principal\n  isExternal: false\n  name: WindowsIdentity\n  nameWithType: WindowsIdentity\n  fullName: System.Security.Principal.WindowsIdentity\n- uid: System.ServiceModel.ServiceSecurityContext.#ctor*\n  parent: System.ServiceModel.ServiceSecurityContext\n  isExternal: false\n  name: ServiceSecurityContext\n  nameWithType: ServiceSecurityContext.ServiceSecurityContext\n  fullName: ServiceSecurityContext.ServiceSecurityContext\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - xamarinmac-3.0\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.ServiceModel/ServiceSecurityContext.xml\n- uid: System.ServiceModel.ServiceSecurityContext.Anonymous*\n  parent: System.ServiceModel.ServiceSecurityContext\n  isExternal: false\n  name: Anonymous\n  nameWithType: ServiceSecurityContext.Anonymous\n  fullName: ServiceSecurityContext.Anonymous\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - xamarinmac-3.0\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.ServiceModel/ServiceSecurityContext.xml\n- uid: System.ServiceModel.ServiceSecurityContext.AuthorizationContext*\n  parent: System.ServiceModel.ServiceSecurityContext\n  isExternal: false\n  name: AuthorizationContext\n  nameWithType: ServiceSecurityContext.AuthorizationContext\n  fullName: ServiceSecurityContext.AuthorizationContext\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - xamarinmac-3.0\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.ServiceModel/ServiceSecurityContext.xml\n- uid: System.ServiceModel.ServiceSecurityContext.AuthorizationPolicies*\n  parent: System.ServiceModel.ServiceSecurityContext\n  isExternal: false\n  name: AuthorizationPolicies\n  nameWithType: ServiceSecurityContext.AuthorizationPolicies\n  fullName: ServiceSecurityContext.AuthorizationPolicies\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - xamarinmac-3.0\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.ServiceModel/ServiceSecurityContext.xml\n- uid: System.ServiceModel.ServiceSecurityContext.Current*\n  parent: System.ServiceModel.ServiceSecurityContext\n  isExternal: false\n  name: Current\n  nameWithType: ServiceSecurityContext.Current\n  fullName: ServiceSecurityContext.Current\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - xamarinmac-3.0\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.ServiceModel/ServiceSecurityContext.xml\n- uid: System.ServiceModel.ServiceSecurityContext.IsAnonymous*\n  parent: System.ServiceModel.ServiceSecurityContext\n  isExternal: false\n  name: IsAnonymous\n  nameWithType: ServiceSecurityContext.IsAnonymous\n  fullName: ServiceSecurityContext.IsAnonymous\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - xamarinmac-3.0\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.ServiceModel/ServiceSecurityContext.xml\n- uid: System.ServiceModel.ServiceSecurityContext.PrimaryIdentity*\n  parent: System.ServiceModel.ServiceSecurityContext\n  isExternal: false\n  name: PrimaryIdentity\n  nameWithType: ServiceSecurityContext.PrimaryIdentity\n  fullName: ServiceSecurityContext.PrimaryIdentity\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - xamarinmac-3.0\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.ServiceModel/ServiceSecurityContext.xml\n- uid: System.ServiceModel.ServiceSecurityContext.WindowsIdentity*\n  parent: System.ServiceModel.ServiceSecurityContext\n  isExternal: false\n  name: WindowsIdentity\n  nameWithType: ServiceSecurityContext.WindowsIdentity\n  fullName: ServiceSecurityContext.WindowsIdentity\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - xamarinmac-3.0\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.ServiceModel/ServiceSecurityContext.xml\n- uid: System.Object.Equals(System.Object)\n  parent: System.Object\n  isExternal: false\n  name: Equals(Object)\n  nameWithType: Object.Equals(Object)\n  fullName: Object.Equals(Object)\n- uid: System.Object.Equals(System.Object,System.Object)\n  parent: System.Object\n  isExternal: false\n  name: Equals(Object, Object)\n  nameWithType: Object.Equals(Object, Object)\n  fullName: Object.Equals(Object, Object)\n- uid: System.Object.GetHashCode\n  parent: System.Object\n  isExternal: false\n  name: GetHashCode()\n  nameWithType: Object.GetHashCode()\n  fullName: Object.GetHashCode()\n- uid: System.Object.GetType\n  parent: System.Object\n  isExternal: false\n  name: GetType()\n  nameWithType: Object.GetType()\n  fullName: Object.GetType()\n- uid: System.Object.MemberwiseClone\n  parent: System.Object\n  isExternal: false\n  name: MemberwiseClone()\n  nameWithType: Object.MemberwiseClone()\n  fullName: Object.MemberwiseClone()\n- uid: System.Object.ReferenceEquals(System.Object,System.Object)\n  parent: System.Object\n  isExternal: false\n  name: ReferenceEquals(Object, Object)\n  nameWithType: Object.ReferenceEquals(Object, Object)\n  fullName: Object.ReferenceEquals(Object, Object)\n- uid: System.Object.ToString\n  parent: System.Object\n  isExternal: false\n  name: ToString()\n  nameWithType: Object.ToString()\n  fullName: Object.ToString()\n"}