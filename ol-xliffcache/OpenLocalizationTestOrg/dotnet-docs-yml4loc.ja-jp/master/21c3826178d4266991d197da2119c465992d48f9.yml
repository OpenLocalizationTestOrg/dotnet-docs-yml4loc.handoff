### YamlMime:ManagedReference
items:
- uid: System.ServiceModel.Channels.TcpTransportBindingElement
  commentId: T:System.ServiceModel.Channels.TcpTransportBindingElement
  id: TcpTransportBindingElement
  children:
  - System.ServiceModel.Channels.TcpTransportBindingElement.#ctor
  - System.ServiceModel.Channels.TcpTransportBindingElement.#ctor(System.ServiceModel.Channels.TcpTransportBindingElement)
  - System.ServiceModel.Channels.TcpTransportBindingElement.BuildChannelFactory``1(System.ServiceModel.Channels.BindingContext)
  - System.ServiceModel.Channels.TcpTransportBindingElement.BuildChannelListener``1(System.ServiceModel.Channels.BindingContext)
  - System.ServiceModel.Channels.TcpTransportBindingElement.Clone
  - System.ServiceModel.Channels.TcpTransportBindingElement.ConnectionPoolSettings
  - System.ServiceModel.Channels.TcpTransportBindingElement.ExtendedProtectionPolicy
  - System.ServiceModel.Channels.TcpTransportBindingElement.GetProperty``1(System.ServiceModel.Channels.BindingContext)
  - System.ServiceModel.Channels.TcpTransportBindingElement.ListenBacklog
  - System.ServiceModel.Channels.TcpTransportBindingElement.PortSharingEnabled
  - System.ServiceModel.Channels.TcpTransportBindingElement.Scheme
  - System.ServiceModel.Channels.TcpTransportBindingElement.ShouldSerializeExtendedProtectionPolicy
  - System.ServiceModel.Channels.TcpTransportBindingElement.ShouldSerializeListenBacklog
  - System.ServiceModel.Channels.TcpTransportBindingElement.TeredoEnabled
  langs:
  - csharp
  name: TcpTransportBindingElement
  nameWithType: TcpTransportBindingElement
  fullName: System.ServiceModel.Channels.TcpTransportBindingElement
  type: Class
  assemblies:
  - System.ServiceModel
  namespace: System.ServiceModel.Channels
  summary: Represents the binding element for the TCP transport.
  remarks: "This transport uses URIs of the form \"`net.tcp`://`hostname`:`port`/`path`\". Other URI components are optional.  \n  \n The <xref:System.ServiceModel.Channels.TcpTransportBindingElement> class is the starting point for creating a custom binding that implements the TCP transport protocol. This transport is optimized for [!INCLUDE[indigo2](~/includes/indigo2-md.md)]-to-[!INCLUDE[indigo2](~/includes/indigo2-md.md)] communication.  \n  \n The [!INCLUDE[indigo2](~/includes/indigo2-md.md)] service model uses this class to create factory objects that implement the <xref:System.ServiceModel.Channels.IChannelFactory> and <xref:System.ServiceModel.Channels.IChannelListener> interfaces. These factory objects, in turn, create and accept the channels that transmit SOAP messages using the TCP protocol.  \n  \n You configure the factories that this class creates by setting its properties, such as <xref:System.ServiceModel.Channels.TcpTransportBindingElement.PortSharingEnabled%2A> and <xref:System.ServiceModel.Channels.TcpConnectionPoolSettings.LeaseTimeout%2A>.  \n  \n You can also set properties on the base class <xref:System.ServiceModel.Channels.ConnectionOrientedTransportBindingElement>, such as <xref:System.ServiceModel.Channels.ConnectionOrientedTransportBindingElement.MaxBufferSize%2A>, <xref:System.ServiceModel.Channels.ConnectionOrientedTransportBindingElement.TransferMode%2A>, and <xref:System.ServiceModel.Channels.ConnectionOrientedTransportBindingElement.ConnectionBufferSize%2A>. For a complete list of properties, see <xref:System.ServiceModel.Channels.ConnectionOrientedTransportBindingElement>.  \n  \n Finally, you can set properties on the base class <xref:System.ServiceModel.Channels.TransportBindingElement>, such as <xref:System.ServiceModel.Channels.TransportBindingElement.ManualAddressing%2A> and <xref:System.ServiceModel.Channels.TransportBindingElement.MaxBufferPoolSize%2A>. For a complete list of properties, see <xref:System.ServiceModel.Channels.TransportBindingElement>."
  example:
  - "The following example shows how to use this class.  \n  \n [!code-csharp[S_UETcpTransportBindingElement#0](~/samples/snippets/csharp/VS_Snippets_CFX/s_uetcptransportbindingelement/cs/program.cs#0)]"
  syntax:
    content: 'public class TcpTransportBindingElement : System.ServiceModel.Channels.ConnectionOrientedTransportBindingElement'
  inheritance:
  - System.Object
  - System.ServiceModel.Channels.BindingElement
  - System.ServiceModel.Channels.TransportBindingElement
  - System.ServiceModel.Channels.ConnectionOrientedTransportBindingElement
  implements: []
  inheritedMembers:
  - System.Object.Equals(System.Object)
  - System.Object.Equals(System.Object,System.Object)
  - System.Object.GetHashCode
  - System.Object.GetType
  - System.Object.MemberwiseClone
  - System.Object.ReferenceEquals(System.Object,System.Object)
  - System.Object.ToString
  - System.ServiceModel.Channels.ConnectionOrientedTransportBindingElement.CanBuildChannelFactory``1(System.ServiceModel.Channels.BindingContext)
  - System.ServiceModel.Channels.ConnectionOrientedTransportBindingElement.CanBuildChannelListener``1(System.ServiceModel.Channels.BindingContext)
  - System.ServiceModel.Channels.ConnectionOrientedTransportBindingElement.ChannelInitializationTimeout
  - System.ServiceModel.Channels.ConnectionOrientedTransportBindingElement.ConnectionBufferSize
  - System.ServiceModel.Channels.ConnectionOrientedTransportBindingElement.HostNameComparisonMode
  - System.ServiceModel.Channels.ConnectionOrientedTransportBindingElement.MaxBufferSize
  - System.ServiceModel.Channels.ConnectionOrientedTransportBindingElement.MaxOutputDelay
  - System.ServiceModel.Channels.ConnectionOrientedTransportBindingElement.MaxPendingAccepts
  - System.ServiceModel.Channels.ConnectionOrientedTransportBindingElement.MaxPendingConnections
  - System.ServiceModel.Channels.ConnectionOrientedTransportBindingElement.ShouldSerializeMaxPendingAccepts
  - System.ServiceModel.Channels.ConnectionOrientedTransportBindingElement.ShouldSerializeMaxPendingConnections
  - System.ServiceModel.Channels.ConnectionOrientedTransportBindingElement.System#ServiceModel#Description#IPolicyExportExtension#ExportPolicy(System.ServiceModel.Description.MetadataExporter,System.ServiceModel.Description.PolicyConversionContext)
  - System.ServiceModel.Channels.ConnectionOrientedTransportBindingElement.System#ServiceModel#Description#IWsdlExportExtension#ExportContract(System.ServiceModel.Description.WsdlExporter,System.ServiceModel.Description.WsdlContractConversionContext)
  - System.ServiceModel.Channels.ConnectionOrientedTransportBindingElement.System#ServiceModel#Description#IWsdlExportExtension#ExportEndpoint(System.ServiceModel.Description.WsdlExporter,System.ServiceModel.Description.WsdlEndpointConversionContext)
  - System.ServiceModel.Channels.ConnectionOrientedTransportBindingElement.TransferMode
  - System.ServiceModel.Channels.TransportBindingElement.ManualAddressing
  - System.ServiceModel.Channels.TransportBindingElement.MaxBufferPoolSize
  - System.ServiceModel.Channels.TransportBindingElement.MaxReceivedMessageSize
  version:
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  - xamarinandroid-7.1
  - xamarinios-10.8
  - xamarinmac-3.0
  monikers:
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  - xamarinandroid-7.1
  - xamarinios-10.8
  - xamarinmac-3.0
  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.ServiceModel.Channels/TcpTransportBindingElement.xml
  ms.technology:
  - dotnet-standard
  author: Erikre
  ms.author: erikre
  manager: erikre
- uid: System.ServiceModel.Channels.TcpTransportBindingElement.#ctor
  commentId: M:System.ServiceModel.Channels.TcpTransportBindingElement.#ctor
  id: '#ctor'
  parent: System.ServiceModel.Channels.TcpTransportBindingElement
  langs:
  - csharp
  name: TcpTransportBindingElement()
  nameWithType: TcpTransportBindingElement.TcpTransportBindingElement()
  fullName: TcpTransportBindingElement.TcpTransportBindingElement()
  type: Constructor
  assemblies:
  - System.ServiceModel
  namespace: System.ServiceModel.Channels
  summary: Initializes a new instance of the <xref href="System.ServiceModel.Channels.TcpTransportBindingElement"></xref> class.
  remarks: ''
  example:
  - "The following example shows how to create a new instance of the <xref:System.ServiceModel.Channels.TcpTransportBindingElement> class.  \n  \n [!code-csharp[S_UETcpTransportBindingElement#1](~/samples/snippets/csharp/VS_Snippets_CFX/s_uetcptransportbindingelement/cs/program.cs#1)]"
  syntax:
    content: public TcpTransportBindingElement ();
    parameters: []
  overload: System.ServiceModel.Channels.TcpTransportBindingElement.#ctor*
  exceptions: []
  version:
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  - xamarinandroid-7.1
  - xamarinios-10.8
  - xamarinmac-3.0
  monikers:
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  - xamarinandroid-7.1
  - xamarinios-10.8
  - xamarinmac-3.0
  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.ServiceModel.Channels/TcpTransportBindingElement.xml
  ms.technology:
  - dotnet-standard
  author: Erikre
  ms.author: erikre
  manager: erikre
- uid: System.ServiceModel.Channels.TcpTransportBindingElement.#ctor(System.ServiceModel.Channels.TcpTransportBindingElement)
  commentId: M:System.ServiceModel.Channels.TcpTransportBindingElement.#ctor(System.ServiceModel.Channels.TcpTransportBindingElement)
  id: '#ctor(System.ServiceModel.Channels.TcpTransportBindingElement)'
  parent: System.ServiceModel.Channels.TcpTransportBindingElement
  langs:
  - csharp
  name: TcpTransportBindingElement(TcpTransportBindingElement)
  nameWithType: TcpTransportBindingElement.TcpTransportBindingElement(TcpTransportBindingElement)
  fullName: TcpTransportBindingElement.TcpTransportBindingElement(TcpTransportBindingElement)
  type: Constructor
  assemblies:
  - System.ServiceModel
  namespace: System.ServiceModel.Channels
  summary: Initializes a new instance of the <xref href="System.ServiceModel.Channels.TcpTransportBindingElement"></xref> class.
  remarks: This method is a copy constructor used to clone the binding element, and is exposed so that derived classes can implement <xref:System.ServiceModel.Channels.TcpTransportBindingElement.Clone%2A>.
  syntax:
    content: protected TcpTransportBindingElement (System.ServiceModel.Channels.TcpTransportBindingElement elementToBeCloned);
    parameters:
    - id: elementToBeCloned
      type: System.ServiceModel.Channels.TcpTransportBindingElement
      description: An instance of the <xref href="System.ServiceModel.Channels.TcpTransportBindingElement"></xref> class.
  overload: System.ServiceModel.Channels.TcpTransportBindingElement.#ctor*
  exceptions: []
  version:
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  - xamarinandroid-7.1
  - xamarinios-10.8
  - xamarinmac-3.0
  monikers:
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  - xamarinandroid-7.1
  - xamarinios-10.8
  - xamarinmac-3.0
  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.ServiceModel.Channels/TcpTransportBindingElement.xml
  ms.technology:
  - dotnet-standard
  author: Erikre
  ms.author: erikre
  manager: erikre
- uid: System.ServiceModel.Channels.TcpTransportBindingElement.BuildChannelFactory``1(System.ServiceModel.Channels.BindingContext)
  commentId: M:System.ServiceModel.Channels.TcpTransportBindingElement.BuildChannelFactory``1(System.ServiceModel.Channels.BindingContext)
  id: BuildChannelFactory``1(System.ServiceModel.Channels.BindingContext)
  parent: System.ServiceModel.Channels.TcpTransportBindingElement
  langs:
  - csharp
  name: BuildChannelFactory<TChannel>(BindingContext)
  nameWithType: TcpTransportBindingElement.BuildChannelFactory<TChannel>(BindingContext)
  fullName: TcpTransportBindingElement.BuildChannelFactory<TChannel>(BindingContext)
  type: Method
  assemblies:
  - System.ServiceModel
  namespace: System.ServiceModel.Channels
  summary: Creates a channel factory that can be used to create a channel.
  remarks: This method can be used to create a channel factory for sending messages based on the configuration of the TCP binding element.
  example:
  - "The following example shows how to create a channel factory that can be used to create a channel.  \n  \n [!code-csharp[S_UETcpTransportBindingElement#9](~/samples/snippets/csharp/VS_Snippets_CFX/s_uetcptransportbindingelement/cs/program.cs#9)]"
  syntax:
    content: public override System.ServiceModel.Channels.IChannelFactory<TChannel> BuildChannelFactory<TChannel> (System.ServiceModel.Channels.BindingContext context);
    parameters:
    - id: context
      type: System.ServiceModel.Channels.BindingContext
      description: <xref href="System.ServiceModel.Channels.BindingContext"></xref> members that describe bindings, behaviors, contracts, and other information required to create the channel factory.
    typeParameters:
    - id: TChannel
      description: Type of channel factory.
    return:
      type: System.ServiceModel.Channels.IChannelFactory`1
      description: Returns a channel factory of the specified type.
  overload: System.ServiceModel.Channels.TcpTransportBindingElement.BuildChannelFactory``1*
  exceptions:
  - type: System.ArgumentNullException
    commentId: T:System.ArgumentNullException
    description: <code>context</code> cannot be `null`.
  - type: System.ArgumentException
    commentId: T:System.ArgumentException
    description: An invalid argument was passed.
  version:
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  - xamarinandroid-7.1
  - xamarinios-10.8
  - xamarinmac-3.0
  monikers:
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  - xamarinandroid-7.1
  - xamarinios-10.8
  - xamarinmac-3.0
  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.ServiceModel.Channels/TcpTransportBindingElement.xml
  ms.technology:
  - dotnet-standard
  author: Erikre
  ms.author: erikre
  manager: erikre
- uid: System.ServiceModel.Channels.TcpTransportBindingElement.BuildChannelListener``1(System.ServiceModel.Channels.BindingContext)
  commentId: M:System.ServiceModel.Channels.TcpTransportBindingElement.BuildChannelListener``1(System.ServiceModel.Channels.BindingContext)
  id: BuildChannelListener``1(System.ServiceModel.Channels.BindingContext)
  parent: System.ServiceModel.Channels.TcpTransportBindingElement
  langs:
  - csharp
  name: BuildChannelListener<TChannel>(BindingContext)
  nameWithType: TcpTransportBindingElement.BuildChannelListener<TChannel>(BindingContext)
  fullName: TcpTransportBindingElement.BuildChannelListener<TChannel>(BindingContext)
  type: Method
  assemblies:
  - System.ServiceModel
  namespace: System.ServiceModel.Channels
  summary: Creates a channel listener of the specified type.
  remarks: This method can be used to create a channel listener for receiving messages based on the configuration of the TCP binding element.
  example:
  - "The following example shows how to return a channel listener of the specified type.  \n  \n [!code-csharp[S_UETcpTransportBindingElement#10](~/samples/snippets/csharp/VS_Snippets_CFX/s_uetcptransportbindingelement/cs/program.cs#10)]"
  syntax:
    content: 'public override System.ServiceModel.Channels.IChannelListener<TChannel> BuildChannelListener<TChannel> (System.ServiceModel.Channels.BindingContext context) where TChannel : class, System.ServiceModel.Channels.IChannel;'
    parameters:
    - id: context
      type: System.ServiceModel.Channels.BindingContext
      description: <xref href="System.ServiceModel.Channels.BindingContext"></xref> members that describe bindings, behaviors, contracts, and other information required to create the channel factory.
    typeParameters:
    - id: TChannel
      description: Type of channel listener.
    return:
      type: System.ServiceModel.Channels.IChannelListener`1
      description: Returns a channel listener of the specified type.
  overload: System.ServiceModel.Channels.TcpTransportBindingElement.BuildChannelListener``1*
  exceptions:
  - type: System.ArgumentNullException
    commentId: T:System.ArgumentNullException
    description: <code>context</code> cannot be `null`.
  - type: System.ArgumentException
    commentId: T:System.ArgumentException
    description: An invalid argument was passed.
  version:
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  monikers:
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.ServiceModel.Channels/TcpTransportBindingElement.xml
  ms.technology:
  - dotnet-standard
  author: Erikre
  ms.author: erikre
  manager: erikre
- uid: System.ServiceModel.Channels.TcpTransportBindingElement.Clone
  commentId: M:System.ServiceModel.Channels.TcpTransportBindingElement.Clone
  id: Clone
  parent: System.ServiceModel.Channels.TcpTransportBindingElement
  langs:
  - csharp
  name: Clone()
  nameWithType: TcpTransportBindingElement.Clone()
  fullName: TcpTransportBindingElement.Clone()
  type: Method
  assemblies:
  - System.ServiceModel
  namespace: System.ServiceModel.Channels
  summary: Creates a copy of the current binding element.
  remarks: ''
  example:
  - "The following example shows how to create a copy of the current binding element.  \n  \n [!code-csharp[S_UETcpTransportBindingElement#8](~/samples/snippets/csharp/VS_Snippets_CFX/s_uetcptransportbindingelement/cs/program.cs#8)]"
  syntax:
    content: public override System.ServiceModel.Channels.BindingElement Clone ();
    parameters: []
    return:
      type: System.ServiceModel.Channels.BindingElement
      description: Returns a copy of the current binding element.
  overload: System.ServiceModel.Channels.TcpTransportBindingElement.Clone*
  exceptions: []
  version:
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  - xamarinandroid-7.1
  - xamarinios-10.8
  - xamarinmac-3.0
  monikers:
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  - xamarinandroid-7.1
  - xamarinios-10.8
  - xamarinmac-3.0
  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.ServiceModel.Channels/TcpTransportBindingElement.xml
  ms.technology:
  - dotnet-standard
  author: Erikre
  ms.author: erikre
  manager: erikre
- uid: System.ServiceModel.Channels.TcpTransportBindingElement.ConnectionPoolSettings
  commentId: P:System.ServiceModel.Channels.TcpTransportBindingElement.ConnectionPoolSettings
  id: ConnectionPoolSettings
  parent: System.ServiceModel.Channels.TcpTransportBindingElement
  langs:
  - csharp
  name: ConnectionPoolSettings
  nameWithType: TcpTransportBindingElement.ConnectionPoolSettings
  fullName: TcpTransportBindingElement.ConnectionPoolSettings
  type: Property
  assemblies:
  - System.ServiceModel
  namespace: System.ServiceModel.Channels
  summary: Gets a collection of connection pool settings.
  remarks: ''
  example:
  - "The following example shows how to get a collection of connection pool settings.  \n  \n [!code-csharp[S_UETcpTransportBindingElement#3](~/samples/snippets/csharp/VS_Snippets_CFX/s_uetcptransportbindingelement/cs/program.cs#3)]"
  syntax:
    content: public System.ServiceModel.Channels.TcpConnectionPoolSettings ConnectionPoolSettings { get; }
    return:
      type: System.ServiceModel.Channels.TcpConnectionPoolSettings
      description: A <xref href="System.ServiceModel.Channels.TcpConnectionPoolSettings"></xref> object that contains various properties related to connection pooling.
  overload: System.ServiceModel.Channels.TcpTransportBindingElement.ConnectionPoolSettings*
  exceptions: []
  version:
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  - xamarinandroid-7.1
  - xamarinios-10.8
  - xamarinmac-3.0
  monikers:
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  - xamarinandroid-7.1
  - xamarinios-10.8
  - xamarinmac-3.0
  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.ServiceModel.Channels/TcpTransportBindingElement.xml
  ms.technology:
  - dotnet-standard
  author: Erikre
  ms.author: erikre
  manager: erikre
- uid: System.ServiceModel.Channels.TcpTransportBindingElement.ExtendedProtectionPolicy
  commentId: P:System.ServiceModel.Channels.TcpTransportBindingElement.ExtendedProtectionPolicy
  id: ExtendedProtectionPolicy
  parent: System.ServiceModel.Channels.TcpTransportBindingElement
  langs:
  - csharp
  name: ExtendedProtectionPolicy
  nameWithType: TcpTransportBindingElement.ExtendedProtectionPolicy
  fullName: TcpTransportBindingElement.ExtendedProtectionPolicy
  type: Property
  assemblies:
  - System.ServiceModel
  namespace: System.ServiceModel.Channels
  summary: Gets or sets the current extended protection policy.
  remarks: An extended protection policy is an object used by the server to validate incoming client connections.
  syntax:
    content: public System.Security.Authentication.ExtendedProtection.ExtendedProtectionPolicy ExtendedProtectionPolicy { get; set; }
    return:
      type: System.Security.Authentication.ExtendedProtection.ExtendedProtectionPolicy
      description: The extended protection policy.
  overload: System.ServiceModel.Channels.TcpTransportBindingElement.ExtendedProtectionPolicy*
  exceptions: []
  version:
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  monikers:
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.ServiceModel.Channels/TcpTransportBindingElement.xml
  ms.technology:
  - dotnet-standard
  author: Erikre
  ms.author: erikre
  manager: erikre
- uid: System.ServiceModel.Channels.TcpTransportBindingElement.GetProperty``1(System.ServiceModel.Channels.BindingContext)
  commentId: M:System.ServiceModel.Channels.TcpTransportBindingElement.GetProperty``1(System.ServiceModel.Channels.BindingContext)
  id: GetProperty``1(System.ServiceModel.Channels.BindingContext)
  parent: System.ServiceModel.Channels.TcpTransportBindingElement
  langs:
  - csharp
  name: GetProperty<T>(BindingContext)
  nameWithType: TcpTransportBindingElement.GetProperty<T>(BindingContext)
  fullName: TcpTransportBindingElement.GetProperty<T>(BindingContext)
  type: Method
  assemblies:
  - System.ServiceModel
  namespace: System.ServiceModel.Channels
  summary: Gets a specified object from the <xref href="System.ServiceModel.Channels.BindingContext"></xref>.
  remarks: This method gets the specified object from the base class, or from one of that class's ancestors. The object returned is usually a collection of properties, for example, an object that implements <xref:System.ServiceModel.Channels.ISecurityCapabilities>.
  example:
  - "The following example shows how to get a specified object from the <xref:System.ServiceModel.Channels.BindingContext>.  \n  \n [!code-csharp[S_UETcpTransportBindingElement#11](~/samples/snippets/csharp/VS_Snippets_CFX/s_uetcptransportbindingelement/cs/program.cs#11)]"
  syntax:
    content: 'public override T GetProperty<T> (System.ServiceModel.Channels.BindingContext context) where T : class;'
    parameters:
    - id: context
      type: System.ServiceModel.Channels.BindingContext
      description: A <xref href="System.ServiceModel.Channels.BindingContext"></xref>.
    typeParameters:
    - id: T
      description: The object to get.
    return:
      type: T
      description: The specified object from the <xref href="System.ServiceModel.Channels.BindingContext"></xref>, or `null` if the object is not found.
  overload: System.ServiceModel.Channels.TcpTransportBindingElement.GetProperty``1*
  exceptions: []
  version:
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  - xamarinandroid-7.1
  - xamarinios-10.8
  - xamarinmac-3.0
  monikers:
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  - xamarinandroid-7.1
  - xamarinios-10.8
  - xamarinmac-3.0
  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.ServiceModel.Channels/TcpTransportBindingElement.xml
  ms.technology:
  - dotnet-standard
  author: Erikre
  ms.author: erikre
  manager: erikre
- uid: System.ServiceModel.Channels.TcpTransportBindingElement.ListenBacklog
  commentId: P:System.ServiceModel.Channels.TcpTransportBindingElement.ListenBacklog
  id: ListenBacklog
  parent: System.ServiceModel.Channels.TcpTransportBindingElement
  langs:
  - csharp
  name: ListenBacklog
  nameWithType: TcpTransportBindingElement.ListenBacklog
  fullName: TcpTransportBindingElement.ListenBacklog
  type: Property
  assemblies:
  - System.ServiceModel
  namespace: System.ServiceModel.Channels
  summary: Gets or sets the maximum number of queued connection requests that can be pending.
  remarks: <xref:System.ServiceModel.Channels.TcpTransportBindingElement.ListenBacklog%2A> is a socket-level property that describes the number of "pending accept" requests to be queued. Ensure that the underlying socket queue is not exceeded by the maximum number of concurrent connections.
  example:
  - "The following example shows how to get the ListenBacklog value.  \n  \n [!code-csharp[S_UETcpTransportBindingElement#4](~/samples/snippets/csharp/VS_Snippets_CFX/s_uetcptransportbindingelement/cs/program.cs#4)]"
  syntax:
    content: public int ListenBacklog { get; set; }
    return:
      type: System.Int32
      description: Returns the maximum number of queued connection requests that can be pending. The default is 10.
  overload: System.ServiceModel.Channels.TcpTransportBindingElement.ListenBacklog*
  exceptions:
  - type: System.ArgumentOutOfRangeException
    commentId: T:System.ArgumentOutOfRangeException
    description: The value cannot be less than one.
  version:
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  - xamarinandroid-7.1
  - xamarinios-10.8
  - xamarinmac-3.0
  monikers:
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  - xamarinandroid-7.1
  - xamarinios-10.8
  - xamarinmac-3.0
  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.ServiceModel.Channels/TcpTransportBindingElement.xml
  ms.technology:
  - dotnet-standard
  author: Erikre
  ms.author: erikre
  manager: erikre
- uid: System.ServiceModel.Channels.TcpTransportBindingElement.PortSharingEnabled
  commentId: P:System.ServiceModel.Channels.TcpTransportBindingElement.PortSharingEnabled
  id: PortSharingEnabled
  parent: System.ServiceModel.Channels.TcpTransportBindingElement
  langs:
  - csharp
  name: PortSharingEnabled
  nameWithType: TcpTransportBindingElement.PortSharingEnabled
  fullName: TcpTransportBindingElement.PortSharingEnabled
  type: Property
  assemblies:
  - System.ServiceModel
  namespace: System.ServiceModel.Channels
  summary: Gets or sets a value that indicates whether TCP port sharing is enabled for this connection.
  remarks: "Using this setting requires enabling the [!INCLUDE[indigo2](~/includes/indigo2-md.md)] TCP Port Sharing Service by changing its Startup Type to Manual or Automatic.  \n  \n For information about the TCP Listener and how to start it, see [Net.TCP Port Sharing](~/docs/framework/wcf/feature-details/net-tcp-port-sharing.md)."
  example:
  - "The following example shows how to get a value that indicates whether TCP port sharing is enabled.  \n  \n [!code-csharp[S_UETcpTransportBindingElement#5](~/samples/snippets/csharp/VS_Snippets_CFX/s_uetcptransportbindingelement/cs/program.cs#5)]"
  syntax:
    content: public bool PortSharingEnabled { get; set; }
    return:
      type: System.Boolean
      description: '`true` if TCP port sharing is enabled; otherwise, `false`. The default value is `false`.'
  overload: System.ServiceModel.Channels.TcpTransportBindingElement.PortSharingEnabled*
  exceptions: []
  version:
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  - xamarinandroid-7.1
  - xamarinios-10.8
  - xamarinmac-3.0
  monikers:
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  - xamarinandroid-7.1
  - xamarinios-10.8
  - xamarinmac-3.0
  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.ServiceModel.Channels/TcpTransportBindingElement.xml
  ms.technology:
  - dotnet-standard
  author: Erikre
  ms.author: erikre
  manager: erikre
- uid: System.ServiceModel.Channels.TcpTransportBindingElement.Scheme
  commentId: P:System.ServiceModel.Channels.TcpTransportBindingElement.Scheme
  id: Scheme
  parent: System.ServiceModel.Channels.TcpTransportBindingElement
  langs:
  - csharp
  name: Scheme
  nameWithType: TcpTransportBindingElement.Scheme
  fullName: TcpTransportBindingElement.Scheme
  type: Property
  assemblies:
  - System.ServiceModel
  namespace: System.ServiceModel.Channels
  summary: Returns the URI scheme for the transport.
  remarks: The property is provided for validating bindings against base addresses.
  example:
  - "The following example shows how to get the URI scheme for the transport.  \n  \n [!code-csharp[S_UETcpTransportBindingElement#6](~/samples/snippets/csharp/VS_Snippets_CFX/s_uetcptransportbindingelement/cs/program.cs#6)]"
  syntax:
    content: public override string Scheme { get; }
    return:
      type: System.String
      description: Returns the URI scheme for the transport, which is "net.tcp".
  overload: System.ServiceModel.Channels.TcpTransportBindingElement.Scheme*
  exceptions: []
  version:
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  - xamarinandroid-7.1
  - xamarinios-10.8
  - xamarinmac-3.0
  monikers:
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  - xamarinandroid-7.1
  - xamarinios-10.8
  - xamarinmac-3.0
  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.ServiceModel.Channels/TcpTransportBindingElement.xml
  ms.technology:
  - dotnet-standard
  author: Erikre
  ms.author: erikre
  manager: erikre
- uid: System.ServiceModel.Channels.TcpTransportBindingElement.ShouldSerializeExtendedProtectionPolicy
  commentId: M:System.ServiceModel.Channels.TcpTransportBindingElement.ShouldSerializeExtendedProtectionPolicy
  id: ShouldSerializeExtendedProtectionPolicy
  parent: System.ServiceModel.Channels.TcpTransportBindingElement
  langs:
  - csharp
  name: ShouldSerializeExtendedProtectionPolicy()
  nameWithType: TcpTransportBindingElement.ShouldSerializeExtendedProtectionPolicy()
  fullName: TcpTransportBindingElement.ShouldSerializeExtendedProtectionPolicy()
  type: Method
  assemblies:
  - System.ServiceModel
  namespace: System.ServiceModel.Channels
  summary: Returns an indication that the extended protection policy is not XAML serializable.
  remarks: An extended protection policy is an object used by the server to validate incoming client connections.
  syntax:
    content: public bool ShouldSerializeExtendedProtectionPolicy ();
    parameters: []
    return:
      type: System.Boolean
      description: Returns `false`.
  overload: System.ServiceModel.Channels.TcpTransportBindingElement.ShouldSerializeExtendedProtectionPolicy*
  exceptions: []
  attributes: []
  version:
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  monikers:
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.ServiceModel.Channels/TcpTransportBindingElement.xml
  ms.technology:
  - dotnet-standard
  author: Erikre
  ms.author: erikre
  manager: erikre
- uid: System.ServiceModel.Channels.TcpTransportBindingElement.ShouldSerializeListenBacklog
  commentId: M:System.ServiceModel.Channels.TcpTransportBindingElement.ShouldSerializeListenBacklog
  id: ShouldSerializeListenBacklog
  parent: System.ServiceModel.Channels.TcpTransportBindingElement
  langs:
  - csharp
  name: ShouldSerializeListenBacklog()
  nameWithType: TcpTransportBindingElement.ShouldSerializeListenBacklog()
  fullName: TcpTransportBindingElement.ShouldSerializeListenBacklog()
  type: Method
  assemblies:
  - System.ServiceModel
  namespace: System.ServiceModel.Channels
  summary: Indicates whether the TCP transport binding element should serialize listen backlog.
  syntax:
    content: public bool ShouldSerializeListenBacklog ();
    parameters: []
    return:
      type: System.Boolean
      description: '`True` if the TCP transport binding element should serialize listen backlog; otherwise, `false`.'
  overload: System.ServiceModel.Channels.TcpTransportBindingElement.ShouldSerializeListenBacklog*
  exceptions: []
  attributes: []
  version:
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  monikers:
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.ServiceModel.Channels/TcpTransportBindingElement.xml
  ms.technology:
  - dotnet-standard
  author: Erikre
  ms.author: erikre
  manager: erikre
- uid: System.ServiceModel.Channels.TcpTransportBindingElement.TeredoEnabled
  commentId: P:System.ServiceModel.Channels.TcpTransportBindingElement.TeredoEnabled
  id: TeredoEnabled
  parent: System.ServiceModel.Channels.TcpTransportBindingElement
  langs:
  - csharp
  name: TeredoEnabled
  nameWithType: TcpTransportBindingElement.TeredoEnabled
  fullName: TcpTransportBindingElement.TeredoEnabled
  type: Property
  assemblies:
  - System.ServiceModel
  namespace: System.ServiceModel.Channels
  summary: Gets or sets a Boolean that specifies whether Teredo (a technology for addressing clients that are behind firewalls) is enabled.
  remarks: "This property enables Teredo for the underlying TCP socket. For more information, see [Teredo Overview](http://go.microsoft.com/fwlink/?LinkId=96649).  \n  \n This property is applicable only on [!INCLUDE[wxpsp2](~/includes/wxpsp2-md.md)] and [!INCLUDE[ws2003](~/includes/ws2003-md.md)]. [!INCLUDE[wv](~/includes/wv-md.md)] has a machine-wide configuration option for Teredo, so when running [!INCLUDE[wv](~/includes/wv-md.md)], this property is ignored. Teredo requires that the client and service machines both have the Microsoft IPv6 stack installed and correctly configured for Teredo usage. For more information about configuring Teredo, see [Teredo Overview](http://go.microsoft.com/fwlink/?LinkId=96649). For more information about Microsoft IPv6 stack installation, see [Windows Server 2003 Technology Centers](http://go.microsoft.com/fwlink/?LinkId=96650)."
  example:
  - "The following example shows how to enable Teredo for the underlying TCP socket.  \n  \n [!code-csharp[S_UETcpTransportBindingElement#7](~/samples/snippets/csharp/VS_Snippets_CFX/s_uetcptransportbindingelement/cs/program.cs#7)]"
  syntax:
    content: public bool TeredoEnabled { get; set; }
    return:
      type: System.Boolean
      description: '`true` if Teredo is enabled; otherwise, `false`. The default value is `false`.'
  overload: System.ServiceModel.Channels.TcpTransportBindingElement.TeredoEnabled*
  exceptions: []
  version:
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  - xamarinandroid-7.1
  - xamarinios-10.8
  - xamarinmac-3.0
  monikers:
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  - xamarinandroid-7.1
  - xamarinios-10.8
  - xamarinmac-3.0
  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.ServiceModel.Channels/TcpTransportBindingElement.xml
  ms.technology:
  - dotnet-standard
  author: Erikre
  ms.author: erikre
  manager: erikre
references:
- uid: System.ServiceModel.Channels.ConnectionOrientedTransportBindingElement
  parent: System.ServiceModel.Channels
  isExternal: false
  name: ConnectionOrientedTransportBindingElement
  nameWithType: ConnectionOrientedTransportBindingElement
  fullName: System.ServiceModel.Channels.ConnectionOrientedTransportBindingElement
- uid: System.ArgumentNullException
  parent: System
  isExternal: false
  name: ArgumentNullException
  nameWithType: ArgumentNullException
  fullName: System.ArgumentNullException
- uid: System.ArgumentException
  parent: System
  isExternal: false
  name: ArgumentException
  nameWithType: ArgumentException
  fullName: System.ArgumentException
- uid: System.ArgumentOutOfRangeException
  parent: System
  isExternal: false
  name: ArgumentOutOfRangeException
  nameWithType: ArgumentOutOfRangeException
  fullName: System.ArgumentOutOfRangeException
- uid: System.ServiceModel.Channels.TcpTransportBindingElement.#ctor
  parent: System.ServiceModel.Channels.TcpTransportBindingElement
  isExternal: false
  name: TcpTransportBindingElement()
  nameWithType: TcpTransportBindingElement.TcpTransportBindingElement()
  fullName: TcpTransportBindingElement.TcpTransportBindingElement()
- uid: System.ServiceModel.Channels.TcpTransportBindingElement.#ctor(System.ServiceModel.Channels.TcpTransportBindingElement)
  parent: System.ServiceModel.Channels.TcpTransportBindingElement
  isExternal: false
  name: TcpTransportBindingElement(TcpTransportBindingElement)
  nameWithType: TcpTransportBindingElement.TcpTransportBindingElement(TcpTransportBindingElement)
  fullName: TcpTransportBindingElement.TcpTransportBindingElement(TcpTransportBindingElement)
- uid: System.ServiceModel.Channels.TcpTransportBindingElement
  parent: System.ServiceModel.Channels
  isExternal: false
  name: TcpTransportBindingElement
  nameWithType: TcpTransportBindingElement
  fullName: System.ServiceModel.Channels.TcpTransportBindingElement
- uid: System.ServiceModel.Channels.TcpTransportBindingElement.BuildChannelFactory``1(System.ServiceModel.Channels.BindingContext)
  parent: System.ServiceModel.Channels.TcpTransportBindingElement
  isExternal: false
  name: BuildChannelFactory<TChannel>(BindingContext)
  nameWithType: TcpTransportBindingElement.BuildChannelFactory<TChannel>(BindingContext)
  fullName: TcpTransportBindingElement.BuildChannelFactory<TChannel>(BindingContext)
- uid: System.ServiceModel.Channels.IChannelFactory`1
  parent: System.ServiceModel.Channels
  isExternal: false
  name: IChannelFactory<TChannel>
  nameWithType: IChannelFactory<TChannel>
  fullName: System.ServiceModel.Channels.IChannelFactory<TChannel>
- uid: System.ServiceModel.Channels.BindingContext
  parent: System.ServiceModel.Channels
  isExternal: false
  name: BindingContext
  nameWithType: BindingContext
  fullName: System.ServiceModel.Channels.BindingContext
- uid: System.ServiceModel.Channels.TcpTransportBindingElement.BuildChannelListener``1(System.ServiceModel.Channels.BindingContext)
  parent: System.ServiceModel.Channels.TcpTransportBindingElement
  isExternal: false
  name: BuildChannelListener<TChannel>(BindingContext)
  nameWithType: TcpTransportBindingElement.BuildChannelListener<TChannel>(BindingContext)
  fullName: TcpTransportBindingElement.BuildChannelListener<TChannel>(BindingContext)
- uid: System.ServiceModel.Channels.IChannelListener`1
  parent: System.ServiceModel.Channels
  isExternal: false
  name: IChannelListener<TChannel>
  nameWithType: IChannelListener<TChannel>
  fullName: System.ServiceModel.Channels.IChannelListener<TChannel>
- uid: System.ServiceModel.Channels.TcpTransportBindingElement.Clone
  parent: System.ServiceModel.Channels.TcpTransportBindingElement
  isExternal: false
  name: Clone()
  nameWithType: TcpTransportBindingElement.Clone()
  fullName: TcpTransportBindingElement.Clone()
- uid: System.ServiceModel.Channels.BindingElement
  parent: System.ServiceModel.Channels
  isExternal: false
  name: BindingElement
  nameWithType: BindingElement
  fullName: System.ServiceModel.Channels.BindingElement
- uid: System.ServiceModel.Channels.TcpTransportBindingElement.ConnectionPoolSettings
  parent: System.ServiceModel.Channels.TcpTransportBindingElement
  isExternal: false
  name: ConnectionPoolSettings
  nameWithType: TcpTransportBindingElement.ConnectionPoolSettings
  fullName: TcpTransportBindingElement.ConnectionPoolSettings
- uid: System.ServiceModel.Channels.TcpConnectionPoolSettings
  parent: System.ServiceModel.Channels
  isExternal: false
  name: TcpConnectionPoolSettings
  nameWithType: TcpConnectionPoolSettings
  fullName: System.ServiceModel.Channels.TcpConnectionPoolSettings
- uid: System.ServiceModel.Channels.TcpTransportBindingElement.ExtendedProtectionPolicy
  parent: System.ServiceModel.Channels.TcpTransportBindingElement
  isExternal: false
  name: ExtendedProtectionPolicy
  nameWithType: TcpTransportBindingElement.ExtendedProtectionPolicy
  fullName: TcpTransportBindingElement.ExtendedProtectionPolicy
- uid: System.Security.Authentication.ExtendedProtection.ExtendedProtectionPolicy
  parent: System.Security.Authentication.ExtendedProtection
  isExternal: false
  name: ExtendedProtectionPolicy
  nameWithType: ExtendedProtectionPolicy
  fullName: System.Security.Authentication.ExtendedProtection.ExtendedProtectionPolicy
- uid: System.ServiceModel.Channels.TcpTransportBindingElement.GetProperty``1(System.ServiceModel.Channels.BindingContext)
  parent: System.ServiceModel.Channels.TcpTransportBindingElement
  isExternal: false
  name: GetProperty<T>(BindingContext)
  nameWithType: TcpTransportBindingElement.GetProperty<T>(BindingContext)
  fullName: TcpTransportBindingElement.GetProperty<T>(BindingContext)
- uid: T
  isExternal: true
  name: T
  nameWithType: T
  fullName: T
- uid: System.ServiceModel.Channels.TcpTransportBindingElement.ListenBacklog
  parent: System.ServiceModel.Channels.TcpTransportBindingElement
  isExternal: false
  name: ListenBacklog
  nameWithType: TcpTransportBindingElement.ListenBacklog
  fullName: TcpTransportBindingElement.ListenBacklog
- uid: System.Int32
  parent: System
  isExternal: false
  name: Int32
  nameWithType: Int32
  fullName: System.Int32
- uid: System.ServiceModel.Channels.TcpTransportBindingElement.PortSharingEnabled
  parent: System.ServiceModel.Channels.TcpTransportBindingElement
  isExternal: false
  name: PortSharingEnabled
  nameWithType: TcpTransportBindingElement.PortSharingEnabled
  fullName: TcpTransportBindingElement.PortSharingEnabled
- uid: System.Boolean
  parent: System
  isExternal: false
  name: Boolean
  nameWithType: Boolean
  fullName: System.Boolean
- uid: System.ServiceModel.Channels.TcpTransportBindingElement.Scheme
  parent: System.ServiceModel.Channels.TcpTransportBindingElement
  isExternal: false
  name: Scheme
  nameWithType: TcpTransportBindingElement.Scheme
  fullName: TcpTransportBindingElement.Scheme
- uid: System.String
  parent: System
  isExternal: false
  name: String
  nameWithType: String
  fullName: System.String
- uid: System.ServiceModel.Channels.TcpTransportBindingElement.ShouldSerializeExtendedProtectionPolicy
  parent: System.ServiceModel.Channels.TcpTransportBindingElement
  isExternal: false
  name: ShouldSerializeExtendedProtectionPolicy()
  nameWithType: TcpTransportBindingElement.ShouldSerializeExtendedProtectionPolicy()
  fullName: TcpTransportBindingElement.ShouldSerializeExtendedProtectionPolicy()
- uid: System.ServiceModel.Channels.TcpTransportBindingElement.ShouldSerializeListenBacklog
  parent: System.ServiceModel.Channels.TcpTransportBindingElement
  isExternal: false
  name: ShouldSerializeListenBacklog()
  nameWithType: TcpTransportBindingElement.ShouldSerializeListenBacklog()
  fullName: TcpTransportBindingElement.ShouldSerializeListenBacklog()
- uid: System.ServiceModel.Channels.TcpTransportBindingElement.TeredoEnabled
  parent: System.ServiceModel.Channels.TcpTransportBindingElement
  isExternal: false
  name: TeredoEnabled
  nameWithType: TcpTransportBindingElement.TeredoEnabled
  fullName: TcpTransportBindingElement.TeredoEnabled
- uid: System.ServiceModel.Channels.TcpTransportBindingElement.#ctor*
  parent: System.ServiceModel.Channels.TcpTransportBindingElement
  isExternal: false
  name: TcpTransportBindingElement
  nameWithType: TcpTransportBindingElement.TcpTransportBindingElement
  fullName: TcpTransportBindingElement.TcpTransportBindingElement
  monikers:
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  - xamarinandroid-7.1
  - xamarinios-10.8
  - xamarinmac-3.0
  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.ServiceModel.Channels/TcpTransportBindingElement.xml
- uid: System.ServiceModel.Channels.TcpTransportBindingElement.BuildChannelFactory``1*
  parent: System.ServiceModel.Channels.TcpTransportBindingElement
  isExternal: false
  name: BuildChannelFactory<TChannel>
  nameWithType: TcpTransportBindingElement.BuildChannelFactory<TChannel>
  fullName: TcpTransportBindingElement.BuildChannelFactory<TChannel>
  monikers:
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  - xamarinandroid-7.1
  - xamarinios-10.8
  - xamarinmac-3.0
  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.ServiceModel.Channels/TcpTransportBindingElement.xml
- uid: System.ServiceModel.Channels.TcpTransportBindingElement.BuildChannelListener``1*
  parent: System.ServiceModel.Channels.TcpTransportBindingElement
  isExternal: false
  name: BuildChannelListener<TChannel>
  nameWithType: TcpTransportBindingElement.BuildChannelListener<TChannel>
  fullName: TcpTransportBindingElement.BuildChannelListener<TChannel>
  monikers:
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.ServiceModel.Channels/TcpTransportBindingElement.xml
- uid: System.ServiceModel.Channels.TcpTransportBindingElement.Clone*
  parent: System.ServiceModel.Channels.TcpTransportBindingElement
  isExternal: false
  name: Clone
  nameWithType: TcpTransportBindingElement.Clone
  fullName: TcpTransportBindingElement.Clone
  monikers:
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  - xamarinandroid-7.1
  - xamarinios-10.8
  - xamarinmac-3.0
  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.ServiceModel.Channels/TcpTransportBindingElement.xml
- uid: System.ServiceModel.Channels.TcpTransportBindingElement.ConnectionPoolSettings*
  parent: System.ServiceModel.Channels.TcpTransportBindingElement
  isExternal: false
  name: ConnectionPoolSettings
  nameWithType: TcpTransportBindingElement.ConnectionPoolSettings
  fullName: TcpTransportBindingElement.ConnectionPoolSettings
  monikers:
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  - xamarinandroid-7.1
  - xamarinios-10.8
  - xamarinmac-3.0
  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.ServiceModel.Channels/TcpTransportBindingElement.xml
- uid: System.ServiceModel.Channels.TcpTransportBindingElement.ExtendedProtectionPolicy*
  parent: System.ServiceModel.Channels.TcpTransportBindingElement
  isExternal: false
  name: ExtendedProtectionPolicy
  nameWithType: TcpTransportBindingElement.ExtendedProtectionPolicy
  fullName: TcpTransportBindingElement.ExtendedProtectionPolicy
  monikers:
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.ServiceModel.Channels/TcpTransportBindingElement.xml
- uid: System.ServiceModel.Channels.TcpTransportBindingElement.GetProperty``1*
  parent: System.ServiceModel.Channels.TcpTransportBindingElement
  isExternal: false
  name: GetProperty<T>
  nameWithType: TcpTransportBindingElement.GetProperty<T>
  fullName: TcpTransportBindingElement.GetProperty<T>
  monikers:
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  - xamarinandroid-7.1
  - xamarinios-10.8
  - xamarinmac-3.0
  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.ServiceModel.Channels/TcpTransportBindingElement.xml
- uid: System.ServiceModel.Channels.TcpTransportBindingElement.ListenBacklog*
  parent: System.ServiceModel.Channels.TcpTransportBindingElement
  isExternal: false
  name: ListenBacklog
  nameWithType: TcpTransportBindingElement.ListenBacklog
  fullName: TcpTransportBindingElement.ListenBacklog
  monikers:
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  - xamarinandroid-7.1
  - xamarinios-10.8
  - xamarinmac-3.0
  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.ServiceModel.Channels/TcpTransportBindingElement.xml
- uid: System.ServiceModel.Channels.TcpTransportBindingElement.PortSharingEnabled*
  parent: System.ServiceModel.Channels.TcpTransportBindingElement
  isExternal: false
  name: PortSharingEnabled
  nameWithType: TcpTransportBindingElement.PortSharingEnabled
  fullName: TcpTransportBindingElement.PortSharingEnabled
  monikers:
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  - xamarinandroid-7.1
  - xamarinios-10.8
  - xamarinmac-3.0
  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.ServiceModel.Channels/TcpTransportBindingElement.xml
- uid: System.ServiceModel.Channels.TcpTransportBindingElement.Scheme*
  parent: System.ServiceModel.Channels.TcpTransportBindingElement
  isExternal: false
  name: Scheme
  nameWithType: TcpTransportBindingElement.Scheme
  fullName: TcpTransportBindingElement.Scheme
  monikers:
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  - xamarinandroid-7.1
  - xamarinios-10.8
  - xamarinmac-3.0
  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.ServiceModel.Channels/TcpTransportBindingElement.xml
- uid: System.ServiceModel.Channels.TcpTransportBindingElement.ShouldSerializeExtendedProtectionPolicy*
  parent: System.ServiceModel.Channels.TcpTransportBindingElement
  isExternal: false
  name: ShouldSerializeExtendedProtectionPolicy
  nameWithType: TcpTransportBindingElement.ShouldSerializeExtendedProtectionPolicy
  fullName: TcpTransportBindingElement.ShouldSerializeExtendedProtectionPolicy
  monikers:
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.ServiceModel.Channels/TcpTransportBindingElement.xml
- uid: System.ServiceModel.Channels.TcpTransportBindingElement.ShouldSerializeListenBacklog*
  parent: System.ServiceModel.Channels.TcpTransportBindingElement
  isExternal: false
  name: ShouldSerializeListenBacklog
  nameWithType: TcpTransportBindingElement.ShouldSerializeListenBacklog
  fullName: TcpTransportBindingElement.ShouldSerializeListenBacklog
  monikers:
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.ServiceModel.Channels/TcpTransportBindingElement.xml
- uid: System.ServiceModel.Channels.TcpTransportBindingElement.TeredoEnabled*
  parent: System.ServiceModel.Channels.TcpTransportBindingElement
  isExternal: false
  name: TeredoEnabled
  nameWithType: TcpTransportBindingElement.TeredoEnabled
  fullName: TcpTransportBindingElement.TeredoEnabled
  monikers:
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  - xamarinandroid-7.1
  - xamarinios-10.8
  - xamarinmac-3.0
  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.ServiceModel.Channels/TcpTransportBindingElement.xml
- uid: System.Object.Equals(System.Object)
  parent: System.Object
  isExternal: false
  name: Equals(Object)
  nameWithType: Object.Equals(Object)
  fullName: Object.Equals(Object)
- uid: System.Object.Equals(System.Object,System.Object)
  parent: System.Object
  isExternal: false
  name: Equals(Object, Object)
  nameWithType: Object.Equals(Object, Object)
  fullName: Object.Equals(Object, Object)
- uid: System.Object.GetHashCode
  parent: System.Object
  isExternal: false
  name: GetHashCode()
  nameWithType: Object.GetHashCode()
  fullName: Object.GetHashCode()
- uid: System.Object.GetType
  parent: System.Object
  isExternal: false
  name: GetType()
  nameWithType: Object.GetType()
  fullName: Object.GetType()
- uid: System.Object.MemberwiseClone
  parent: System.Object
  isExternal: false
  name: MemberwiseClone()
  nameWithType: Object.MemberwiseClone()
  fullName: Object.MemberwiseClone()
- uid: System.Object.ReferenceEquals(System.Object,System.Object)
  parent: System.Object
  isExternal: false
  name: ReferenceEquals(Object, Object)
  nameWithType: Object.ReferenceEquals(Object, Object)
  fullName: Object.ReferenceEquals(Object, Object)
- uid: System.Object.ToString
  parent: System.Object
  isExternal: false
  name: ToString()
  nameWithType: Object.ToString()
  fullName: Object.ToString()
- uid: System.ServiceModel.Channels.ConnectionOrientedTransportBindingElement.CanBuildChannelFactory``1(System.ServiceModel.Channels.BindingContext)
  parent: System.ServiceModel.Channels.ConnectionOrientedTransportBindingElement
  isExternal: false
  name: CanBuildChannelFactory<TChannel>(BindingContext)
  nameWithType: ConnectionOrientedTransportBindingElement.CanBuildChannelFactory<TChannel>(BindingContext)
  fullName: ConnectionOrientedTransportBindingElement.CanBuildChannelFactory<TChannel>(BindingContext)
- uid: System.ServiceModel.Channels.ConnectionOrientedTransportBindingElement.CanBuildChannelListener``1(System.ServiceModel.Channels.BindingContext)
  parent: System.ServiceModel.Channels.ConnectionOrientedTransportBindingElement
  isExternal: false
  name: CanBuildChannelListener<TChannel>(BindingContext)
  nameWithType: ConnectionOrientedTransportBindingElement.CanBuildChannelListener<TChannel>(BindingContext)
  fullName: ConnectionOrientedTransportBindingElement.CanBuildChannelListener<TChannel>(BindingContext)
- uid: System.ServiceModel.Channels.TransportBindingElement.ManualAddressing
  parent: System.ServiceModel.Channels.TransportBindingElement
  isExternal: false
  name: ManualAddressing
  nameWithType: TransportBindingElement.ManualAddressing
  fullName: TransportBindingElement.ManualAddressing
- uid: System.ServiceModel.Channels.TransportBindingElement.MaxBufferPoolSize
  parent: System.ServiceModel.Channels.TransportBindingElement
  isExternal: false
  name: MaxBufferPoolSize
  nameWithType: TransportBindingElement.MaxBufferPoolSize
  fullName: TransportBindingElement.MaxBufferPoolSize
- uid: System.ServiceModel.Channels.TransportBindingElement.MaxReceivedMessageSize
  parent: System.ServiceModel.Channels.TransportBindingElement
  isExternal: false
  name: MaxReceivedMessageSize
  nameWithType: TransportBindingElement.MaxReceivedMessageSize
  fullName: TransportBindingElement.MaxReceivedMessageSize
- uid: System.ServiceModel.Channels.ConnectionOrientedTransportBindingElement.ChannelInitializationTimeout
  parent: System.ServiceModel.Channels.ConnectionOrientedTransportBindingElement
  isExternal: false
  name: ChannelInitializationTimeout
  nameWithType: ConnectionOrientedTransportBindingElement.ChannelInitializationTimeout
  fullName: ConnectionOrientedTransportBindingElement.ChannelInitializationTimeout
- uid: System.ServiceModel.Channels.ConnectionOrientedTransportBindingElement.ConnectionBufferSize
  parent: System.ServiceModel.Channels.ConnectionOrientedTransportBindingElement
  isExternal: false
  name: ConnectionBufferSize
  nameWithType: ConnectionOrientedTransportBindingElement.ConnectionBufferSize
  fullName: ConnectionOrientedTransportBindingElement.ConnectionBufferSize
- uid: System.ServiceModel.Channels.ConnectionOrientedTransportBindingElement.HostNameComparisonMode
  parent: System.ServiceModel.Channels.ConnectionOrientedTransportBindingElement
  isExternal: false
  name: HostNameComparisonMode
  nameWithType: ConnectionOrientedTransportBindingElement.HostNameComparisonMode
  fullName: ConnectionOrientedTransportBindingElement.HostNameComparisonMode
- uid: System.ServiceModel.Channels.ConnectionOrientedTransportBindingElement.MaxBufferSize
  parent: System.ServiceModel.Channels.ConnectionOrientedTransportBindingElement
  isExternal: false
  name: MaxBufferSize
  nameWithType: ConnectionOrientedTransportBindingElement.MaxBufferSize
  fullName: ConnectionOrientedTransportBindingElement.MaxBufferSize
- uid: System.ServiceModel.Channels.ConnectionOrientedTransportBindingElement.MaxOutputDelay
  parent: System.ServiceModel.Channels.ConnectionOrientedTransportBindingElement
  isExternal: false
  name: MaxOutputDelay
  nameWithType: ConnectionOrientedTransportBindingElement.MaxOutputDelay
  fullName: ConnectionOrientedTransportBindingElement.MaxOutputDelay
- uid: System.ServiceModel.Channels.ConnectionOrientedTransportBindingElement.MaxPendingAccepts
  parent: System.ServiceModel.Channels.ConnectionOrientedTransportBindingElement
  isExternal: false
  name: MaxPendingAccepts
  nameWithType: ConnectionOrientedTransportBindingElement.MaxPendingAccepts
  fullName: ConnectionOrientedTransportBindingElement.MaxPendingAccepts
- uid: System.ServiceModel.Channels.ConnectionOrientedTransportBindingElement.MaxPendingConnections
  parent: System.ServiceModel.Channels.ConnectionOrientedTransportBindingElement
  isExternal: false
  name: MaxPendingConnections
  nameWithType: ConnectionOrientedTransportBindingElement.MaxPendingConnections
  fullName: ConnectionOrientedTransportBindingElement.MaxPendingConnections
- uid: System.ServiceModel.Channels.ConnectionOrientedTransportBindingElement.ShouldSerializeMaxPendingAccepts
  parent: System.ServiceModel.Channels.ConnectionOrientedTransportBindingElement
  isExternal: false
  name: ShouldSerializeMaxPendingAccepts()
  nameWithType: ConnectionOrientedTransportBindingElement.ShouldSerializeMaxPendingAccepts()
  fullName: ConnectionOrientedTransportBindingElement.ShouldSerializeMaxPendingAccepts()
- uid: System.ServiceModel.Channels.ConnectionOrientedTransportBindingElement.ShouldSerializeMaxPendingConnections
  parent: System.ServiceModel.Channels.ConnectionOrientedTransportBindingElement
  isExternal: false
  name: ShouldSerializeMaxPendingConnections()
  nameWithType: ConnectionOrientedTransportBindingElement.ShouldSerializeMaxPendingConnections()
  fullName: ConnectionOrientedTransportBindingElement.ShouldSerializeMaxPendingConnections()
- uid: System.ServiceModel.Channels.ConnectionOrientedTransportBindingElement.TransferMode
  parent: System.ServiceModel.Channels.ConnectionOrientedTransportBindingElement
  isExternal: false
  name: TransferMode
  nameWithType: ConnectionOrientedTransportBindingElement.TransferMode
  fullName: ConnectionOrientedTransportBindingElement.TransferMode
- uid: System.ServiceModel.Channels.ConnectionOrientedTransportBindingElement.System#ServiceModel#Description#IPolicyExportExtension#ExportPolicy(System.ServiceModel.Description.MetadataExporter,System.ServiceModel.Description.PolicyConversionContext)
  parent: System.ServiceModel.Channels.ConnectionOrientedTransportBindingElement
  isExternal: false
  name: IPolicyExportExtension.ExportPolicy(MetadataExporter, PolicyConversionContext)
  nameWithType: ConnectionOrientedTransportBindingElement.IPolicyExportExtension.ExportPolicy(MetadataExporter, PolicyConversionContext)
  fullName: ConnectionOrientedTransportBindingElement.IPolicyExportExtension.ExportPolicy(MetadataExporter, PolicyConversionContext)
- uid: System.ServiceModel.Channels.ConnectionOrientedTransportBindingElement.System#ServiceModel#Description#IWsdlExportExtension#ExportContract(System.ServiceModel.Description.WsdlExporter,System.ServiceModel.Description.WsdlContractConversionContext)
  parent: System.ServiceModel.Channels.ConnectionOrientedTransportBindingElement
  isExternal: false
  name: IWsdlExportExtension.ExportContract(WsdlExporter, WsdlContractConversionContext)
  nameWithType: ConnectionOrientedTransportBindingElement.IWsdlExportExtension.ExportContract(WsdlExporter, WsdlContractConversionContext)
  fullName: ConnectionOrientedTransportBindingElement.IWsdlExportExtension.ExportContract(WsdlExporter, WsdlContractConversionContext)
- uid: System.ServiceModel.Channels.ConnectionOrientedTransportBindingElement.System#ServiceModel#Description#IWsdlExportExtension#ExportEndpoint(System.ServiceModel.Description.WsdlExporter,System.ServiceModel.Description.WsdlEndpointConversionContext)
  parent: System.ServiceModel.Channels.ConnectionOrientedTransportBindingElement
  isExternal: false
  name: IWsdlExportExtension.ExportEndpoint(WsdlExporter, WsdlEndpointConversionContext)
  nameWithType: ConnectionOrientedTransportBindingElement.IWsdlExportExtension.ExportEndpoint(WsdlExporter, WsdlEndpointConversionContext)
  fullName: ConnectionOrientedTransportBindingElement.IWsdlExportExtension.ExportEndpoint(WsdlExporter, WsdlEndpointConversionContext)
