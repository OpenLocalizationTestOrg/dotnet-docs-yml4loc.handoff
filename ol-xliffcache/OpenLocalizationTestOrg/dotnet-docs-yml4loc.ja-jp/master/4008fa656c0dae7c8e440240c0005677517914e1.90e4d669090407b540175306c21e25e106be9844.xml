{"nodes":[{"content":"Provides a secure binding for peer-to-peer network applications.","nodes":[{"pos":[0,64],"content":"Provides a secure binding for peer-to-peer network applications.","nodes":[{"content":"Provides a secure binding for peer-to-peer network applications.","pos":[0,64]}]}],"pos":[1378,1443],"yaml":true},{"content":"The <xref:System.ServiceModel.NetPeerTcpBinding> binding provides support for the creation of peer networking applications that use a TCP-level peer-to-peer mesh infrastructure.  \n  \n Each <xref:System.ServiceModel.PeerNode> instance can host multiple peer channels defined with this binding type. Channel factories produced using a configured instance of this type can be used to generate peer channels. A peer channel factory can produce peer channels that are input-only (implements <xref:System.ServiceModel.Channels.IInputChannel>), output-only (implements <xref:System.ServiceModel.Channels.IOutputChannel>), and duplex (implements <xref:System.ServiceModel.Channels.IDuplexChannel>).  \n  \n This is one of the standard bindings provided by the Windows Communication Framework (WCF). It can be used in imperative code or specified in the corresponding XML configuration file for the application. The recommended procedure is to define the binding using configuration values and not to use a code-based approach, except in certain advanced scenarios where configuration values must be set as a service is initialized.","nodes":[{"pos":[0,177],"content":"The <xref:System.ServiceModel.NetPeerTcpBinding> binding provides support for the creation of peer networking applications that use a TCP-level peer-to-peer mesh infrastructure.","nodes":[{"content":"The <ph id=\"ph1\">&lt;xref:System.ServiceModel.NetPeerTcpBinding&gt;</ph> binding provides support for the creation of peer networking applications that use a TCP-level peer-to-peer mesh infrastructure.","pos":[0,177],"source":"The <xref:System.ServiceModel.NetPeerTcpBinding> binding provides support for the creation of peer networking applications that use a TCP-level peer-to-peer mesh infrastructure."}]},{"pos":[184,690],"content":"Each <xref:System.ServiceModel.PeerNode> instance can host multiple peer channels defined with this binding type. Channel factories produced using a configured instance of this type can be used to generate peer channels. A peer channel factory can produce peer channels that are input-only (implements <xref:System.ServiceModel.Channels.IInputChannel>), output-only (implements <xref:System.ServiceModel.Channels.IOutputChannel>), and duplex (implements <xref:System.ServiceModel.Channels.IDuplexChannel>).","nodes":[{"content":"Each <xref:System.ServiceModel.PeerNode> instance can host multiple peer channels defined with this binding type. Channel factories produced using a configured instance of this type can be used to generate peer channels. A peer channel factory can produce peer channels that are input-only (implements <xref:System.ServiceModel.Channels.IInputChannel>), output-only (implements <xref:System.ServiceModel.Channels.IOutputChannel>), and duplex (implements <xref:System.ServiceModel.Channels.IDuplexChannel>).","pos":[0,506],"nodes":[{"content":"Each <ph id=\"ph1\">&lt;xref:System.ServiceModel.PeerNode&gt;</ph> instance can host multiple peer channels defined with this binding type.","pos":[0,113],"source":"Each <xref:System.ServiceModel.PeerNode> instance can host multiple peer channels defined with this binding type."},{"content":"Channel factories produced using a configured instance of this type can be used to generate peer channels.","pos":[114,220]},{"content":"A peer channel factory can produce peer channels that are input-only (implements <ph id=\"ph1\">&lt;xref:System.ServiceModel.Channels.IInputChannel&gt;</ph>), output-only (implements <ph id=\"ph2\">&lt;xref:System.ServiceModel.Channels.IOutputChannel&gt;</ph>), and duplex (implements <ph id=\"ph3\">&lt;xref:System.ServiceModel.Channels.IDuplexChannel&gt;</ph>).","pos":[221,506],"source":" A peer channel factory can produce peer channels that are input-only (implements <xref:System.ServiceModel.Channels.IInputChannel>), output-only (implements <xref:System.ServiceModel.Channels.IOutputChannel>), and duplex (implements <xref:System.ServiceModel.Channels.IDuplexChannel>)."}]}]},{"pos":[697,1121],"content":"This is one of the standard bindings provided by the Windows Communication Framework (WCF). It can be used in imperative code or specified in the corresponding XML configuration file for the application. The recommended procedure is to define the binding using configuration values and not to use a code-based approach, except in certain advanced scenarios where configuration values must be set as a service is initialized.","nodes":[{"content":"This is one of the standard bindings provided by the Windows Communication Framework (WCF). It can be used in imperative code or specified in the corresponding XML configuration file for the application. The recommended procedure is to define the binding using configuration values and not to use a code-based approach, except in certain advanced scenarios where configuration values must be set as a service is initialized.","pos":[0,424],"nodes":[{"content":"This is one of the standard bindings provided by the Windows Communication Framework (WCF).","pos":[0,91]},{"content":"It can be used in imperative code or specified in the corresponding XML configuration file for the application.","pos":[92,203]},{"content":"The recommended procedure is to define the binding using configuration values and not to use a code-based approach, except in certain advanced scenarios where configuration values must be set as a service is initialized.","pos":[204,424]}]}]}],"pos":[1454,2582],"yaml":true,"extradata":"MT"},{"content":"Initializes a new default instance of the <xref href=\"System.ServiceModel.NetPeerTcpBinding\"></xref> class.","nodes":[{"pos":[0,107],"content":"Initializes a new default instance of the <ph id=\"ph1\">&lt;xref href=\"System.ServiceModel.NetPeerTcpBinding\"&gt;&lt;/xref&gt;</ph> class.","source":"Initializes a new default instance of the <xref href=\"System.ServiceModel.NetPeerTcpBinding\"></xref> class."}],"pos":[6515,6623],"yaml":true},{"content":"Initializes a new instance of the <xref href=\"System.ServiceModel.NetPeerTcpBinding\"></xref> class with a specified configuration name.","nodes":[{"pos":[0,135],"content":"Initializes a new instance of the <ph id=\"ph1\">&lt;xref href=\"System.ServiceModel.NetPeerTcpBinding\"&gt;&lt;/xref&gt;</ph> class with a specified configuration name.","source":"Initializes a new instance of the <xref href=\"System.ServiceModel.NetPeerTcpBinding\"></xref> class with a specified configuration name."}],"pos":[7753,7889],"yaml":true},{"content":"This constructor creates a new <xref:System.ServiceModel.NetPeerTcpBinding> with the supplied name. If a configuration for that name already exists, the settings in the configuration file that contains that name are used. If the name does not already exist, the default configuration settings are used.","nodes":[{"pos":[0,302],"content":"This constructor creates a new <xref:System.ServiceModel.NetPeerTcpBinding> with the supplied name. If a configuration for that name already exists, the settings in the configuration file that contains that name are used. If the name does not already exist, the default configuration settings are used.","nodes":[{"content":"This constructor creates a new <xref:System.ServiceModel.NetPeerTcpBinding> with the supplied name. If a configuration for that name already exists, the settings in the configuration file that contains that name are used. If the name does not already exist, the default configuration settings are used.","pos":[0,302],"nodes":[{"content":"This constructor creates a new <ph id=\"ph1\">&lt;xref:System.ServiceModel.NetPeerTcpBinding&gt;</ph> with the supplied name.","pos":[0,99],"source":"This constructor creates a new <xref:System.ServiceModel.NetPeerTcpBinding> with the supplied name."},{"content":"If a configuration for that name already exists, the settings in the configuration file that contains that name are used.","pos":[100,221]},{"content":"If the name does not already exist, the default configuration settings are used.","pos":[222,302]}]}]}],"pos":[7900,8203],"yaml":true,"extradata":"MT"},{"content":"The value of the `configurationName` attribute that identifies the binding element whose settings are used to initialize the binding.","nodes":[{"pos":[0,133],"content":"The value of the <ph id=\"ph1\">`configurationName`</ph> attribute that identifies the binding element whose settings are used to initialize the binding.","source":"The value of the `configurationName` attribute that identifies the binding element whose settings are used to initialize the binding."}],"pos":[8368,8502],"yaml":true},{"content":"The configuration is invalid.","nodes":[{"pos":[0,29],"content":"The configuration is invalid.","nodes":[{"content":"The configuration is invalid.","pos":[0,29]}]}],"pos":[8705,8735],"yaml":true},{"content":"Creates a collection with the binding elements for the binding.","nodes":[{"pos":[0,63],"content":"Creates a collection with the binding elements for the binding.","nodes":[{"content":"Creates a collection with the binding elements for the binding.","pos":[0,63]}]}],"pos":[9710,9774],"yaml":true},{"content":"The <xref href=\"System.Collections.Generic.ICollection`1\"></xref> of type <xref href=\"System.ServiceModel.Channels.BindingElement\"></xref> that makes up the binding.","nodes":[{"pos":[0,165],"content":"The <ph id=\"ph1\">&lt;xref href=\"System.Collections.Generic.ICollection`1\"&gt;&lt;/xref&gt;</ph> of type <ph id=\"ph2\">&lt;xref href=\"System.ServiceModel.Channels.BindingElement\"&gt;&lt;/xref&gt;</ph> that makes up the binding.","source":"The <xref href=\"System.Collections.Generic.ICollection`1\"></xref> of type <xref href=\"System.ServiceModel.Channels.BindingElement\"></xref> that makes up the binding."}],"pos":[10009,10175],"yaml":true},{"content":"Gets the SOAP version used with this binding.","nodes":[{"pos":[0,45],"content":"Gets the SOAP version used with this binding.","nodes":[{"content":"Gets the SOAP version used with this binding.","pos":[0,45]}]}],"pos":[11200,11246],"yaml":true},{"content":"<xref href=\"System.ServiceModel.EnvelopeVersion\"></xref> that specifies the version of SOAP to use with this binding.","nodes":[{"pos":[0,117],"content":"<ph id=\"ph1\">&lt;xref href=\"System.ServiceModel.EnvelopeVersion\"&gt;&lt;/xref&gt;</ph> that specifies the version of SOAP to use with this binding.","source":"<xref href=\"System.ServiceModel.EnvelopeVersion\"></xref> that specifies the version of SOAP to use with this binding."}],"pos":[11416,11534],"yaml":true},{"content":"Gets whether the PNRP service is installed and available on the computer.","nodes":[{"pos":[0,73],"content":"Gets whether the PNRP service is installed and available on the computer.","nodes":[{"content":"Gets whether the PNRP service is installed and available on the computer.","pos":[0,73]}]}],"pos":[12553,12627],"yaml":true},{"content":"true if PNRP is installed and configured; false if it is not.","nodes":[{"pos":[0,61],"content":"true if PNRP is installed and configured; false if it is not.","nodes":[{"content":"true if PNRP is installed and configured; false if it is not.","pos":[0,61]}]}],"pos":[12752,12814],"yaml":true},{"content":"Gets or sets the IP address used for listening by the local peer node.","nodes":[{"pos":[0,70],"content":"Gets or sets the IP address used for listening by the local peer node.","nodes":[{"content":"Gets or sets the IP address used for listening by the local peer node.","pos":[0,70]}]}],"pos":[13833,13904],"yaml":true},{"content":"If this property is not set, or is set to `null` or <xref:System.String.Empty>, the associated <xref:System.ServiceModel.PeerNode> listens on all global addresses (both IPv4 and IPv6) configured for the local machine.  \n  \n If a valid unicast IP address is specified for this property, then the associated <xref:System.ServiceModel.PeerNode> object listens on that address. IPv4 and IPv6 wildcard addresses are not considered valid.  \n  \n If a non-`null` IP address string is specified for this property in conjunction with <xref:System.ServiceModel.Channels.PnrpPeerResolverBindingElement>, then the IP address must be associated with a physical interface rather than a virtual one.  \n  \n ListenIPAddress must be set for ad-hoc networks in order to register with the default peer resolver (PNRP). If this property is specified in conjunction with <xref:System.ServiceModel.Configuration.PnrpPeerResolverElement> (the default peer resolver), then the IP address must belong to a physical network interface rather than a virtual one (such as a tunneling interface). This is because PNRP only publishes within PNRP clouds corresponding to physical interfaces. By setting this property to null, all global addresses are published in the global PNRP cloud.","nodes":[{"pos":[0,217],"content":"If this property is not set, or is set to <ph id=\"ph1\">`null`</ph> or <ph id=\"ph2\">&lt;xref:System.String.Empty&gt;</ph>, the associated <ph id=\"ph3\">&lt;xref:System.ServiceModel.PeerNode&gt;</ph> listens on all global addresses (both IPv4 and IPv6) configured for the local machine.","source":"If this property is not set, or is set to `null` or <xref:System.String.Empty>, the associated <xref:System.ServiceModel.PeerNode> listens on all global addresses (both IPv4 and IPv6) configured for the local machine."},{"pos":[224,432],"content":"If a valid unicast IP address is specified for this property, then the associated <xref:System.ServiceModel.PeerNode> object listens on that address. IPv4 and IPv6 wildcard addresses are not considered valid.","nodes":[{"content":"If a valid unicast IP address is specified for this property, then the associated <xref:System.ServiceModel.PeerNode> object listens on that address. IPv4 and IPv6 wildcard addresses are not considered valid.","pos":[0,208],"nodes":[{"content":"If a valid unicast IP address is specified for this property, then the associated <ph id=\"ph1\">&lt;xref:System.ServiceModel.PeerNode&gt;</ph> object listens on that address.","pos":[0,149],"source":"If a valid unicast IP address is specified for this property, then the associated <xref:System.ServiceModel.PeerNode> object listens on that address."},{"content":"IPv4 and IPv6 wildcard addresses are not considered valid.","pos":[150,208]}]}]},{"pos":[439,683],"content":"If a non-<ph id=\"ph1\">`null`</ph> IP address string is specified for this property in conjunction with <ph id=\"ph2\">&lt;xref:System.ServiceModel.Channels.PnrpPeerResolverBindingElement&gt;</ph>, then the IP address must be associated with a physical interface rather than a virtual one.","source":"If a non-`null` IP address string is specified for this property in conjunction with <xref:System.ServiceModel.Channels.PnrpPeerResolverBindingElement>, then the IP address must be associated with a physical interface rather than a virtual one."},{"pos":[690,1252],"content":"ListenIPAddress must be set for ad-hoc networks in order to register with the default peer resolver (PNRP). If this property is specified in conjunction with <xref:System.ServiceModel.Configuration.PnrpPeerResolverElement> (the default peer resolver), then the IP address must belong to a physical network interface rather than a virtual one (such as a tunneling interface). This is because PNRP only publishes within PNRP clouds corresponding to physical interfaces. By setting this property to null, all global addresses are published in the global PNRP cloud.","nodes":[{"content":"ListenIPAddress must be set for ad-hoc networks in order to register with the default peer resolver (PNRP). If this property is specified in conjunction with <xref:System.ServiceModel.Configuration.PnrpPeerResolverElement> (the default peer resolver), then the IP address must belong to a physical network interface rather than a virtual one (such as a tunneling interface). This is because PNRP only publishes within PNRP clouds corresponding to physical interfaces. By setting this property to null, all global addresses are published in the global PNRP cloud.","pos":[0,562],"nodes":[{"content":"ListenIPAddress must be set for ad-hoc networks in order to register with the default peer resolver (PNRP).","pos":[0,107]},{"content":"If this property is specified in conjunction with <ph id=\"ph1\">&lt;xref:System.ServiceModel.Configuration.PnrpPeerResolverElement&gt;</ph> (the default peer resolver), then the IP address must belong to a physical network interface rather than a virtual one (such as a tunneling interface).","pos":[108,374],"source":" If this property is specified in conjunction with <xref:System.ServiceModel.Configuration.PnrpPeerResolverElement> (the default peer resolver), then the IP address must belong to a physical network interface rather than a virtual one (such as a tunneling interface)."},{"content":"This is because PNRP only publishes within PNRP clouds corresponding to physical interfaces.","pos":[375,467]},{"content":"By setting this property to null, all global addresses are published in the global PNRP cloud.","pos":[468,562]}]}]}],"pos":[13915,15176],"yaml":true,"extradata":"MT"},{"content":"A <xref href=\"System.String\"></xref> value that contains the well-formed IPv4 or IPv6 address upon which the local peer node is listening.","nodes":[{"pos":[0,138],"content":"A <ph id=\"ph1\">&lt;xref href=\"System.String\"&gt;&lt;/xref&gt;</ph> value that contains the well-formed IPv4 or IPv6 address upon which the local peer node is listening.","source":"A <xref href=\"System.String\"></xref> value that contains the well-formed IPv4 or IPv6 address upon which the local peer node is listening."}],"pos":[15454,15593],"yaml":true},{"content":"The provided address is invalid or incorrectly formed.","nodes":[{"pos":[0,54],"content":"The provided address is invalid or incorrectly formed.","nodes":[{"content":"The provided address is invalid or incorrectly formed.","pos":[0,54]}]}],"pos":[15768,15823],"yaml":true},{"content":"Gets or sets the maximum size, in bytes, of the memory pool used for the peer TCP buffer.","nodes":[{"pos":[0,89],"content":"Gets or sets the maximum size, in bytes, of the memory pool used for the peer TCP buffer.","nodes":[{"content":"Gets or sets the maximum size, in bytes, of the memory pool used for the peer TCP buffer.","pos":[0,89]}]}],"pos":[16839,16929],"yaml":true},{"content":"The value of <xref:System.ServiceModel.NetPeerTcpBinding.MaxBufferPoolSize%2A> cannot be less than <xref:System.ServiceModel.NetPeerTcpBinding.MaxReceivedMessageSize%2A> whose default value is 65536 bytes (64 KB).","nodes":[{"pos":[0,213],"content":"The value of <xref:System.ServiceModel.NetPeerTcpBinding.MaxBufferPoolSize%2A> cannot be less than <xref:System.ServiceModel.NetPeerTcpBinding.MaxReceivedMessageSize%2A> whose default value is 65536 bytes (64 KB).","nodes":[{"content":"The value of <ph id=\"ph1\">&lt;xref:System.ServiceModel.NetPeerTcpBinding.MaxBufferPoolSize%2A&gt;</ph> cannot be less than <ph id=\"ph2\">&lt;xref:System.ServiceModel.NetPeerTcpBinding.MaxReceivedMessageSize%2A&gt;</ph> whose default value is 65536 bytes (64 KB).","pos":[0,213],"source":"The value of <xref:System.ServiceModel.NetPeerTcpBinding.MaxBufferPoolSize%2A> cannot be less than <xref:System.ServiceModel.NetPeerTcpBinding.MaxReceivedMessageSize%2A> whose default value is 65536 bytes (64 KB)."}]}],"pos":[16940,17154],"yaml":true,"extradata":"MT"},{"content":"A <xref href=\"System.Int32\"></xref> value that specifies the maximum number of bytes that are used to buffer incoming messages in memory. The default value is 65,536 bytes.","nodes":[{"pos":[0,172],"content":"A <xref href=\"System.Int32\"></xref> value that specifies the maximum number of bytes that are used to buffer incoming messages in memory. The default value is 65,536 bytes.","nodes":[{"content":"A <ph id=\"ph1\">&lt;xref href=\"System.Int32\"&gt;&lt;/xref&gt;</ph> value that specifies the maximum number of bytes that are used to buffer incoming messages in memory.","pos":[0,137],"source":"A <xref href=\"System.Int32\"></xref> value that specifies the maximum number of bytes that are used to buffer incoming messages in memory."},{"content":"The default value is 65,536 bytes.","pos":[138,172]}]}],"pos":[17277,17450],"yaml":true},{"content":"Gets or sets the maximum size, in bytes, of TCP messages handled by peer channels created by this binding.","nodes":[{"pos":[0,106],"content":"Gets or sets the maximum size, in bytes, of TCP messages handled by peer channels created by this binding.","nodes":[{"content":"Gets or sets the maximum size, in bytes, of TCP messages handled by peer channels created by this binding.","pos":[0,106]}]}],"pos":[18530,18637],"yaml":true},{"content":"<xref href=\"System.Int32\"></xref> that contains the maximum size in bytes of TCP messages sent over the peer channels created by this binding. The default value is 65,536 (64 KB).","nodes":[{"pos":[0,179],"content":"<xref href=\"System.Int32\"></xref> that contains the maximum size in bytes of TCP messages sent over the peer channels created by this binding. The default value is 65,536 (64 KB).","nodes":[{"content":"<ph id=\"ph1\">&lt;xref href=\"System.Int32\"&gt;&lt;/xref&gt;</ph> that contains the maximum size in bytes of TCP messages sent over the peer channels created by this binding.","pos":[0,142],"source":"<xref href=\"System.Int32\"></xref> that contains the maximum size in bytes of TCP messages sent over the peer channels created by this binding."},{"content":"The default value is 65,536 (64 KB).","pos":[143,179]}]}],"pos":[18765,18945],"yaml":true},{"content":"Gets or sets the network port on which to bind.","nodes":[{"pos":[0,47],"content":"Gets or sets the network port on which to bind.","nodes":[{"content":"Gets or sets the network port on which to bind.","pos":[0,47]}]}],"pos":[19922,19970],"yaml":true},{"content":"If the port value is invalid, <xref:System.ArgumentException> is raised. The default value for this property is 0, which indicates that the listener port is randomly selected from all unreserved ports.","nodes":[{"pos":[0,201],"content":"If the port value is invalid, <xref:System.ArgumentException> is raised. The default value for this property is 0, which indicates that the listener port is randomly selected from all unreserved ports.","nodes":[{"content":"If the port value is invalid, <xref:System.ArgumentException> is raised. The default value for this property is 0, which indicates that the listener port is randomly selected from all unreserved ports.","pos":[0,201],"nodes":[{"content":"If the port value is invalid, <ph id=\"ph1\">&lt;xref:System.ArgumentException&gt;</ph> is raised.","pos":[0,72],"source":"If the port value is invalid, <xref:System.ArgumentException> is raised."},{"content":"The default value for this property is 0, which indicates that the listener port is randomly selected from all unreserved ports.","pos":[73,201]}]}]}],"pos":[19981,20183],"yaml":true,"extradata":"MT"},{"content":"A <xref href=\"System.Int32\"></xref> value that represents the network port on which this binding instance will process peer-specific TCP messages.","nodes":[{"pos":[0,146],"content":"A <ph id=\"ph1\">&lt;xref href=\"System.Int32\"&gt;&lt;/xref&gt;</ph> value that represents the network port on which this binding instance will process peer-specific TCP messages.","source":"A <xref href=\"System.Int32\"></xref> value that represents the network port on which this binding instance will process peer-specific TCP messages."}],"pos":[20292,20439],"yaml":true},{"content":"Gets or sets the <xref href=\"System.Xml.XmlDictionaryReaderQuotas\"></xref> that is associated with this binding.","nodes":[{"pos":[0,112],"content":"Gets or sets the <ph id=\"ph1\">&lt;xref href=\"System.Xml.XmlDictionaryReaderQuotas\"&gt;&lt;/xref&gt;</ph> that is associated with this binding.","source":"Gets or sets the <xref href=\"System.Xml.XmlDictionaryReaderQuotas\"></xref> that is associated with this binding."}],"pos":[21446,21559],"yaml":true},{"content":"The <xref href=\"System.Xml.XmlDictionaryReaderQuotas\"></xref> that is associated with this binding.","nodes":[{"pos":[0,99],"content":"The <ph id=\"ph1\">&lt;xref href=\"System.Xml.XmlDictionaryReaderQuotas\"&gt;&lt;/xref&gt;</ph> that is associated with this binding.","source":"The <xref href=\"System.Xml.XmlDictionaryReaderQuotas\"></xref> that is associated with this binding."}],"pos":[21733,21833],"yaml":true},{"content":"The application attempted to set this property to null.","nodes":[{"pos":[0,55],"content":"The application attempted to set this property to null.","nodes":[{"content":"The application attempted to set this property to null.","pos":[0,55]}]}],"pos":[22013,22069],"yaml":true},{"content":"Gets the <xref href=\"System.ServiceModel.PeerResolver\"></xref> used by this binding instance to resolve a peer mesh ID to the endpoint IP addresses of nodes within the peer mesh.","nodes":[{"pos":[0,178],"content":"Gets the <ph id=\"ph1\">&lt;xref href=\"System.ServiceModel.PeerResolver\"&gt;&lt;/xref&gt;</ph> used by this binding instance to resolve a peer mesh ID to the endpoint IP addresses of nodes within the peer mesh.","source":"Gets the <xref href=\"System.ServiceModel.PeerResolver\"></xref> used by this binding instance to resolve a peer mesh ID to the endpoint IP addresses of nodes within the peer mesh."}],"pos":[22962,23141],"yaml":true},{"content":"A <xref href=\"System.ServiceModel.PeerResolver\"></xref> used to resolve a peer mesh ID to a set of <xref href=\"System.ServiceModel.PeerNodeAddress\"></xref> instances representing several nodes participating in the mesh.","nodes":[{"pos":[0,219],"content":"A <ph id=\"ph1\">&lt;xref href=\"System.ServiceModel.PeerResolver\"&gt;&lt;/xref&gt;</ph> used to resolve a peer mesh ID to a set of <ph id=\"ph2\">&lt;xref href=\"System.ServiceModel.PeerNodeAddress\"&gt;&lt;/xref&gt;</ph> instances representing several nodes participating in the mesh.","source":"A <xref href=\"System.ServiceModel.PeerResolver\"></xref> used to resolve a peer mesh ID to a set of <xref href=\"System.ServiceModel.PeerNodeAddress\"></xref> instances representing several nodes participating in the mesh."}],"pos":[23342,23562],"yaml":true},{"content":"Gets the URI scheme used for the transport protocol associated with this binding.","nodes":[{"pos":[0,81],"content":"Gets the URI scheme used for the transport protocol associated with this binding.","nodes":[{"content":"Gets the URI scheme used for the transport protocol associated with this binding.","pos":[0,81]}]}],"pos":[24520,24602],"yaml":true},{"content":"This value must be \"net.p2p\".","nodes":[{"pos":[0,29],"content":"This value must be \"net.p2p\".","nodes":[{"content":"This value must be \"net.p2p\".","pos":[0,29]}]}],"pos":[24613,24643],"yaml":true,"extradata":"MT"},{"content":"A <xref href=\"System.String\"></xref> that specifies the URI scheme for the specific transport protocol used for this binding.","nodes":[{"pos":[0,125],"content":"A <ph id=\"ph1\">&lt;xref href=\"System.String\"&gt;&lt;/xref&gt;</ph> that specifies the URI scheme for the specific transport protocol used for this binding.","source":"A <xref href=\"System.String\"></xref> that specifies the URI scheme for the specific transport protocol used for this binding."}],"pos":[24762,24888],"yaml":true},{"content":"Gets and sets the security to set on peer channels created by this binding.","nodes":[{"pos":[0,75],"content":"Gets and sets the security to set on peer channels created by this binding.","nodes":[{"content":"Gets and sets the security to set on peer channels created by this binding.","pos":[0,75]}]}],"pos":[25856,25932],"yaml":true},{"content":"<xref href=\"System.ServiceModel.PeerSecuritySettings\"></xref> enumeration value that indicates the security to set on peer channels created by this binding. Security can be either message- or transport-specific.","nodes":[{"pos":[0,211],"content":"<xref href=\"System.ServiceModel.PeerSecuritySettings\"></xref> enumeration value that indicates the security to set on peer channels created by this binding. Security can be either message- or transport-specific.","nodes":[{"content":"<ph id=\"ph1\">&lt;xref href=\"System.ServiceModel.PeerSecuritySettings\"&gt;&lt;/xref&gt;</ph> enumeration value that indicates the security to set on peer channels created by this binding.","pos":[0,156],"source":"<xref href=\"System.ServiceModel.PeerSecuritySettings\"></xref> enumeration value that indicates the security to set on peer channels created by this binding."},{"content":"Security can be either message- or transport-specific.","pos":[157,211]}]}],"pos":[26110,26322],"yaml":true},{"content":"Gets a value that specifies whether reader quota data for the binding should be serialized.","nodes":[{"pos":[0,91],"content":"Gets a value that specifies whether reader quota data for the binding should be serialized.","nodes":[{"content":"Gets a value that specifies whether reader quota data for the binding should be serialized.","pos":[0,91]}]}],"pos":[27410,27502],"yaml":true},{"content":"Returns <xref href=\"System.Boolean\"></xref> that specifies `true` if reader quota data should be serialized, and `false` if it should not be serialized.","nodes":[{"pos":[0,152],"content":"Returns <ph id=\"ph1\">&lt;xref href=\"System.Boolean\"&gt;&lt;/xref&gt;</ph> that specifies <ph id=\"ph2\">`true`</ph> if reader quota data should be serialized, and <ph id=\"ph3\">`false`</ph> if it should not be serialized.","source":"Returns <xref href=\"System.Boolean\"></xref> that specifies `true` if reader quota data should be serialized, and `false` if it should not be serialized."}],"pos":[27646,27799],"yaml":true},{"content":"Gets a value that specifies whether security information for the binding should be serialized.","nodes":[{"pos":[0,94],"content":"Gets a value that specifies whether security information for the binding should be serialized.","nodes":[{"content":"Gets a value that specifies whether security information for the binding should be serialized.","pos":[0,94]}]}],"pos":[28899,28994],"yaml":true},{"content":"Returns <xref href=\"System.Boolean\"></xref> that specifies `true` if the security information for the binding should be serialized, and `false` if it should not be serialized..","nodes":[{"pos":[0,176],"content":"Returns <ph id=\"ph1\">&lt;xref href=\"System.Boolean\"&gt;&lt;/xref&gt;</ph> that specifies <ph id=\"ph2\">`true`</ph> if the security information for the binding should be serialized, and <ph id=\"ph3\">`false`</ph> if it should not be serialized..","source":"Returns <xref href=\"System.Boolean\"></xref> that specifies `true` if the security information for the binding should be serialized, and `false` if it should not be serialized.."}],"pos":[29134,29311],"yaml":true},{"content":"Gets whether incoming requests over peer channels created by this binding are handled synchronously or asynchronously.","nodes":[{"pos":[0,118],"content":"Gets whether incoming requests over peer channels created by this binding are handled synchronously or asynchronously.","nodes":[{"content":"Gets whether incoming requests over peer channels created by this binding are handled synchronously or asynchronously.","pos":[0,118]}]}],"pos":[30648,30767],"yaml":true},{"content":"If true, incoming requests are handled synchronously; if false, they are handled asynchronously. The default value is false, with requests handled asynchronously.","nodes":[{"pos":[0,162],"content":"If true, incoming requests are handled synchronously; if false, they are handled asynchronously. The default value is false, with requests handled asynchronously.","nodes":[{"content":"If true, incoming requests are handled synchronously; if false, they are handled asynchronously. The default value is false, with requests handled asynchronously.","pos":[0,162],"nodes":[{"content":"If true, incoming requests are handled synchronously; if false, they are handled asynchronously.","pos":[0,96]},{"content":"The default value is false, with requests handled asynchronously.","pos":[97,162]}]}]}],"pos":[30939,31102],"yaml":true}],"content":"### YamlMime:ManagedReference\nitems:\n- uid: System.ServiceModel.NetPeerTcpBinding\n  commentId: T:System.ServiceModel.NetPeerTcpBinding\n  id: NetPeerTcpBinding\n  children:\n  - System.ServiceModel.NetPeerTcpBinding.#ctor\n  - System.ServiceModel.NetPeerTcpBinding.#ctor(System.String)\n  - System.ServiceModel.NetPeerTcpBinding.CreateBindingElements\n  - System.ServiceModel.NetPeerTcpBinding.EnvelopeVersion\n  - System.ServiceModel.NetPeerTcpBinding.IsPnrpAvailable\n  - System.ServiceModel.NetPeerTcpBinding.ListenIPAddress\n  - System.ServiceModel.NetPeerTcpBinding.MaxBufferPoolSize\n  - System.ServiceModel.NetPeerTcpBinding.MaxReceivedMessageSize\n  - System.ServiceModel.NetPeerTcpBinding.Port\n  - System.ServiceModel.NetPeerTcpBinding.ReaderQuotas\n  - System.ServiceModel.NetPeerTcpBinding.Resolver\n  - System.ServiceModel.NetPeerTcpBinding.Scheme\n  - System.ServiceModel.NetPeerTcpBinding.Security\n  - System.ServiceModel.NetPeerTcpBinding.ShouldSerializeReaderQuotas\n  - System.ServiceModel.NetPeerTcpBinding.ShouldSerializeSecurity\n  - System.ServiceModel.NetPeerTcpBinding.System#ServiceModel#Channels#IBindingRuntimePreferences#ReceiveSynchronously\n  langs:\n  - csharp\n  name: NetPeerTcpBinding\n  nameWithType: NetPeerTcpBinding\n  fullName: System.ServiceModel.NetPeerTcpBinding\n  type: Class\n  assemblies:\n  - System.ServiceModel\n  namespace: System.ServiceModel\n  summary: Provides a secure binding for peer-to-peer network applications.\n  remarks: \"The <xref:System.ServiceModel.NetPeerTcpBinding> binding provides support for the creation of peer networking applications that use a TCP-level peer-to-peer mesh infrastructure.  \\n  \\n Each <xref:System.ServiceModel.PeerNode> instance can host multiple peer channels defined with this binding type. Channel factories produced using a configured instance of this type can be used to generate peer channels. A peer channel factory can produce peer channels that are input-only (implements <xref:System.ServiceModel.Channels.IInputChannel>), output-only (implements <xref:System.ServiceModel.Channels.IOutputChannel>), and duplex (implements <xref:System.ServiceModel.Channels.IDuplexChannel>).  \\n  \\n This is one of the standard bindings provided by the Windows Communication Framework (WCF). It can be used in imperative code or specified in the corresponding XML configuration file for the application. The recommended procedure is to define the binding using configuration values and not to use a code-based approach, except in certain advanced scenarios where configuration values must be set as a service is initialized.\"\n  syntax:\n    content: >-\n      [System.Obsolete(\"PeerChannel feature is obsolete and will be removed in the future.\", false)]\n\n      public class NetPeerTcpBinding : System.ServiceModel.Channels.Binding, System.ServiceModel.Channels.IBindingRuntimePreferences\n  inheritance:\n  - System.Object\n  - System.ServiceModel.Channels.Binding\n  implements:\n  - System.ServiceModel.Channels.IBindingRuntimePreferences\n  inheritedMembers:\n  - System.Object.Equals(System.Object)\n  - System.Object.Equals(System.Object,System.Object)\n  - System.Object.GetHashCode\n  - System.Object.GetType\n  - System.Object.MemberwiseClone\n  - System.Object.ReferenceEquals(System.Object,System.Object)\n  - System.Object.ToString\n  - System.ServiceModel.Channels.Binding.BuildChannelFactory``1(System.Object[])\n  - System.ServiceModel.Channels.Binding.BuildChannelFactory``1(System.ServiceModel.Channels.BindingParameterCollection)\n  - System.ServiceModel.Channels.Binding.BuildChannelListener``1(System.Object[])\n  - System.ServiceModel.Channels.Binding.BuildChannelListener``1(System.ServiceModel.Channels.BindingParameterCollection)\n  - System.ServiceModel.Channels.Binding.BuildChannelListener``1(System.Uri,System.Object[])\n  - System.ServiceModel.Channels.Binding.BuildChannelListener``1(System.Uri,System.ServiceModel.Channels.BindingParameterCollection)\n  - System.ServiceModel.Channels.Binding.BuildChannelListener``1(System.Uri,System.String,System.Object[])\n  - System.ServiceModel.Channels.Binding.BuildChannelListener``1(System.Uri,System.String,System.ServiceModel.Channels.BindingParameterCollection)\n  - System.ServiceModel.Channels.Binding.BuildChannelListener``1(System.Uri,System.String,System.ServiceModel.Description.ListenUriMode,System.Object[])\n  - System.ServiceModel.Channels.Binding.BuildChannelListener``1(System.Uri,System.String,System.ServiceModel.Description.ListenUriMode,System.ServiceModel.Channels.BindingParameterCollection)\n  - System.ServiceModel.Channels.Binding.CanBuildChannelFactory``1(System.Object[])\n  - System.ServiceModel.Channels.Binding.CanBuildChannelFactory``1(System.ServiceModel.Channels.BindingParameterCollection)\n  - System.ServiceModel.Channels.Binding.CanBuildChannelListener``1(System.Object[])\n  - System.ServiceModel.Channels.Binding.CanBuildChannelListener``1(System.ServiceModel.Channels.BindingParameterCollection)\n  - System.ServiceModel.Channels.Binding.CloseTimeout\n  - System.ServiceModel.Channels.Binding.GetProperty``1(System.ServiceModel.Channels.BindingParameterCollection)\n  - System.ServiceModel.Channels.Binding.MessageVersion\n  - System.ServiceModel.Channels.Binding.Name\n  - System.ServiceModel.Channels.Binding.Namespace\n  - System.ServiceModel.Channels.Binding.OpenTimeout\n  - System.ServiceModel.Channels.Binding.ReceiveTimeout\n  - System.ServiceModel.Channels.Binding.SendTimeout\n  - System.ServiceModel.Channels.Binding.ShouldSerializeName\n  - System.ServiceModel.Channels.Binding.ShouldSerializeNamespace\n  attributes:\n  - type: System.ObsoleteAttribute\n  version:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.ServiceModel/NetPeerTcpBinding.xml\n  ms.technology:\n  - dotnet-standard\n  manager: ghogen\n- uid: System.ServiceModel.NetPeerTcpBinding.#ctor\n  commentId: M:System.ServiceModel.NetPeerTcpBinding.#ctor\n  id: '#ctor'\n  parent: System.ServiceModel.NetPeerTcpBinding\n  langs:\n  - csharp\n  name: NetPeerTcpBinding()\n  nameWithType: NetPeerTcpBinding.NetPeerTcpBinding()\n  fullName: NetPeerTcpBinding.NetPeerTcpBinding()\n  type: Constructor\n  assemblies:\n  - System.ServiceModel\n  namespace: System.ServiceModel\n  summary: Initializes a new default instance of the <xref href=\"System.ServiceModel.NetPeerTcpBinding\"></xref> class.\n  syntax:\n    content: public NetPeerTcpBinding ();\n    parameters: []\n  overload: System.ServiceModel.NetPeerTcpBinding.#ctor*\n  exceptions: []\n  version:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.ServiceModel/NetPeerTcpBinding.xml\n  ms.technology:\n  - dotnet-standard\n  manager: ghogen\n- uid: System.ServiceModel.NetPeerTcpBinding.#ctor(System.String)\n  commentId: M:System.ServiceModel.NetPeerTcpBinding.#ctor(System.String)\n  id: '#ctor(System.String)'\n  parent: System.ServiceModel.NetPeerTcpBinding\n  langs:\n  - csharp\n  name: NetPeerTcpBinding(String)\n  nameWithType: NetPeerTcpBinding.NetPeerTcpBinding(String)\n  fullName: NetPeerTcpBinding.NetPeerTcpBinding(String)\n  type: Constructor\n  assemblies:\n  - System.ServiceModel\n  namespace: System.ServiceModel\n  summary: Initializes a new instance of the <xref href=\"System.ServiceModel.NetPeerTcpBinding\"></xref> class with a specified configuration name.\n  remarks: This constructor creates a new <xref:System.ServiceModel.NetPeerTcpBinding> with the supplied name. If a configuration for that name already exists, the settings in the configuration file that contains that name are used. If the name does not already exist, the default configuration settings are used.\n  syntax:\n    content: public NetPeerTcpBinding (string configurationName);\n    parameters:\n    - id: configurationName\n      type: System.String\n      description: The value of the `configurationName` attribute that identifies the binding element whose settings are used to initialize the binding.\n  overload: System.ServiceModel.NetPeerTcpBinding.#ctor*\n  exceptions:\n  - type: System.Configuration.ConfigurationException\n    commentId: T:System.Configuration.ConfigurationException\n    description: The configuration is invalid.\n  version:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.ServiceModel/NetPeerTcpBinding.xml\n  ms.technology:\n  - dotnet-standard\n  manager: ghogen\n- uid: System.ServiceModel.NetPeerTcpBinding.CreateBindingElements\n  commentId: M:System.ServiceModel.NetPeerTcpBinding.CreateBindingElements\n  id: CreateBindingElements\n  parent: System.ServiceModel.NetPeerTcpBinding\n  langs:\n  - csharp\n  name: CreateBindingElements()\n  nameWithType: NetPeerTcpBinding.CreateBindingElements()\n  fullName: NetPeerTcpBinding.CreateBindingElements()\n  type: Method\n  assemblies:\n  - System.ServiceModel\n  namespace: System.ServiceModel\n  summary: Creates a collection with the binding elements for the binding.\n  syntax:\n    content: public override System.ServiceModel.Channels.BindingElementCollection CreateBindingElements ();\n    parameters: []\n    return:\n      type: System.ServiceModel.Channels.BindingElementCollection\n      description: The <xref href=\"System.Collections.Generic.ICollection`1\"></xref> of type <xref href=\"System.ServiceModel.Channels.BindingElement\"></xref> that makes up the binding.\n  overload: System.ServiceModel.NetPeerTcpBinding.CreateBindingElements*\n  exceptions: []\n  version:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.ServiceModel/NetPeerTcpBinding.xml\n  ms.technology:\n  - dotnet-standard\n  manager: ghogen\n- uid: System.ServiceModel.NetPeerTcpBinding.EnvelopeVersion\n  commentId: P:System.ServiceModel.NetPeerTcpBinding.EnvelopeVersion\n  id: EnvelopeVersion\n  parent: System.ServiceModel.NetPeerTcpBinding\n  langs:\n  - csharp\n  name: EnvelopeVersion\n  nameWithType: NetPeerTcpBinding.EnvelopeVersion\n  fullName: NetPeerTcpBinding.EnvelopeVersion\n  type: Property\n  assemblies:\n  - System.ServiceModel\n  namespace: System.ServiceModel\n  summary: Gets the SOAP version used with this binding.\n  syntax:\n    content: public System.ServiceModel.EnvelopeVersion EnvelopeVersion { get; }\n    return:\n      type: System.ServiceModel.EnvelopeVersion\n      description: <xref href=\"System.ServiceModel.EnvelopeVersion\"></xref> that specifies the version of SOAP to use with this binding.\n  overload: System.ServiceModel.NetPeerTcpBinding.EnvelopeVersion*\n  exceptions: []\n  version:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.ServiceModel/NetPeerTcpBinding.xml\n  ms.technology:\n  - dotnet-standard\n  manager: ghogen\n- uid: System.ServiceModel.NetPeerTcpBinding.IsPnrpAvailable\n  commentId: P:System.ServiceModel.NetPeerTcpBinding.IsPnrpAvailable\n  id: IsPnrpAvailable\n  parent: System.ServiceModel.NetPeerTcpBinding\n  langs:\n  - csharp\n  name: IsPnrpAvailable\n  nameWithType: NetPeerTcpBinding.IsPnrpAvailable\n  fullName: NetPeerTcpBinding.IsPnrpAvailable\n  type: Property\n  assemblies:\n  - System.ServiceModel\n  namespace: System.ServiceModel\n  summary: Gets whether the PNRP service is installed and available on the computer.\n  syntax:\n    content: public static bool IsPnrpAvailable { get; }\n    return:\n      type: System.Boolean\n      description: true if PNRP is installed and configured; false if it is not.\n  overload: System.ServiceModel.NetPeerTcpBinding.IsPnrpAvailable*\n  exceptions: []\n  version:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.ServiceModel/NetPeerTcpBinding.xml\n  ms.technology:\n  - dotnet-standard\n  manager: ghogen\n- uid: System.ServiceModel.NetPeerTcpBinding.ListenIPAddress\n  commentId: P:System.ServiceModel.NetPeerTcpBinding.ListenIPAddress\n  id: ListenIPAddress\n  parent: System.ServiceModel.NetPeerTcpBinding\n  langs:\n  - csharp\n  name: ListenIPAddress\n  nameWithType: NetPeerTcpBinding.ListenIPAddress\n  fullName: NetPeerTcpBinding.ListenIPAddress\n  type: Property\n  assemblies:\n  - System.ServiceModel\n  namespace: System.ServiceModel\n  summary: Gets or sets the IP address used for listening by the local peer node.\n  remarks: \"If this property is not set, or is set to `null` or <xref:System.String.Empty>, the associated <xref:System.ServiceModel.PeerNode> listens on all global addresses (both IPv4 and IPv6) configured for the local machine.  \\n  \\n If a valid unicast IP address is specified for this property, then the associated <xref:System.ServiceModel.PeerNode> object listens on that address. IPv4 and IPv6 wildcard addresses are not considered valid.  \\n  \\n If a non-`null` IP address string is specified for this property in conjunction with <xref:System.ServiceModel.Channels.PnrpPeerResolverBindingElement>, then the IP address must be associated with a physical interface rather than a virtual one.  \\n  \\n ListenIPAddress must be set for ad-hoc networks in order to register with the default peer resolver (PNRP). If this property is specified in conjunction with <xref:System.ServiceModel.Configuration.PnrpPeerResolverElement> (the default peer resolver), then the IP address must belong to a physical network interface rather than a virtual one (such as a tunneling interface). This is because PNRP only publishes within PNRP clouds corresponding to physical interfaces. By setting this property to null, all global addresses are published in the global PNRP cloud.\"\n  syntax:\n    content: >-\n      [System.ComponentModel.TypeConverter(typeof(System.ServiceModel.Configuration.PeerTransportListenAddressConverter))]\n\n      public System.Net.IPAddress ListenIPAddress { get; set; }\n    return:\n      type: System.Net.IPAddress\n      description: A <xref href=\"System.String\"></xref> value that contains the well-formed IPv4 or IPv6 address upon which the local peer node is listening.\n  overload: System.ServiceModel.NetPeerTcpBinding.ListenIPAddress*\n  exceptions:\n  - type: System.ArgumentException\n    commentId: T:System.ArgumentException\n    description: The provided address is invalid or incorrectly formed.\n  attributes:\n  - type: System.ComponentModel.TypeConverterAttribute\n  version:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.ServiceModel/NetPeerTcpBinding.xml\n  ms.technology:\n  - dotnet-standard\n  manager: ghogen\n- uid: System.ServiceModel.NetPeerTcpBinding.MaxBufferPoolSize\n  commentId: P:System.ServiceModel.NetPeerTcpBinding.MaxBufferPoolSize\n  id: MaxBufferPoolSize\n  parent: System.ServiceModel.NetPeerTcpBinding\n  langs:\n  - csharp\n  name: MaxBufferPoolSize\n  nameWithType: NetPeerTcpBinding.MaxBufferPoolSize\n  fullName: NetPeerTcpBinding.MaxBufferPoolSize\n  type: Property\n  assemblies:\n  - System.ServiceModel\n  namespace: System.ServiceModel\n  summary: Gets or sets the maximum size, in bytes, of the memory pool used for the peer TCP buffer.\n  remarks: The value of <xref:System.ServiceModel.NetPeerTcpBinding.MaxBufferPoolSize%2A> cannot be less than <xref:System.ServiceModel.NetPeerTcpBinding.MaxReceivedMessageSize%2A> whose default value is 65536 bytes (64 KB).\n  syntax:\n    content: public long MaxBufferPoolSize { get; set; }\n    return:\n      type: System.Int64\n      description: A <xref href=\"System.Int32\"></xref> value that specifies the maximum number of bytes that are used to buffer incoming messages in memory. The default value is 65,536 bytes.\n  overload: System.ServiceModel.NetPeerTcpBinding.MaxBufferPoolSize*\n  exceptions: []\n  attributes: []\n  version:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.ServiceModel/NetPeerTcpBinding.xml\n  ms.technology:\n  - dotnet-standard\n  manager: ghogen\n- uid: System.ServiceModel.NetPeerTcpBinding.MaxReceivedMessageSize\n  commentId: P:System.ServiceModel.NetPeerTcpBinding.MaxReceivedMessageSize\n  id: MaxReceivedMessageSize\n  parent: System.ServiceModel.NetPeerTcpBinding\n  langs:\n  - csharp\n  name: MaxReceivedMessageSize\n  nameWithType: NetPeerTcpBinding.MaxReceivedMessageSize\n  fullName: NetPeerTcpBinding.MaxReceivedMessageSize\n  type: Property\n  assemblies:\n  - System.ServiceModel\n  namespace: System.ServiceModel\n  summary: Gets or sets the maximum size, in bytes, of TCP messages handled by peer channels created by this binding.\n  syntax:\n    content: public long MaxReceivedMessageSize { get; set; }\n    return:\n      type: System.Int64\n      description: <xref href=\"System.Int32\"></xref> that contains the maximum size in bytes of TCP messages sent over the peer channels created by this binding. The default value is 65,536 (64 KB).\n  overload: System.ServiceModel.NetPeerTcpBinding.MaxReceivedMessageSize*\n  exceptions: []\n  attributes: []\n  version:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.ServiceModel/NetPeerTcpBinding.xml\n  ms.technology:\n  - dotnet-standard\n  manager: ghogen\n- uid: System.ServiceModel.NetPeerTcpBinding.Port\n  commentId: P:System.ServiceModel.NetPeerTcpBinding.Port\n  id: Port\n  parent: System.ServiceModel.NetPeerTcpBinding\n  langs:\n  - csharp\n  name: Port\n  nameWithType: NetPeerTcpBinding.Port\n  fullName: NetPeerTcpBinding.Port\n  type: Property\n  assemblies:\n  - System.ServiceModel\n  namespace: System.ServiceModel\n  summary: Gets or sets the network port on which to bind.\n  remarks: If the port value is invalid, <xref:System.ArgumentException> is raised. The default value for this property is 0, which indicates that the listener port is randomly selected from all unreserved ports.\n  syntax:\n    content: public int Port { get; set; }\n    return:\n      type: System.Int32\n      description: A <xref href=\"System.Int32\"></xref> value that represents the network port on which this binding instance will process peer-specific TCP messages.\n  overload: System.ServiceModel.NetPeerTcpBinding.Port*\n  exceptions: []\n  attributes: []\n  version:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.ServiceModel/NetPeerTcpBinding.xml\n  ms.technology:\n  - dotnet-standard\n  manager: ghogen\n- uid: System.ServiceModel.NetPeerTcpBinding.ReaderQuotas\n  commentId: P:System.ServiceModel.NetPeerTcpBinding.ReaderQuotas\n  id: ReaderQuotas\n  parent: System.ServiceModel.NetPeerTcpBinding\n  langs:\n  - csharp\n  name: ReaderQuotas\n  nameWithType: NetPeerTcpBinding.ReaderQuotas\n  fullName: NetPeerTcpBinding.ReaderQuotas\n  type: Property\n  assemblies:\n  - System.ServiceModel\n  namespace: System.ServiceModel\n  summary: Gets or sets the <xref href=\"System.Xml.XmlDictionaryReaderQuotas\"></xref> that is associated with this binding.\n  syntax:\n    content: public System.Xml.XmlDictionaryReaderQuotas ReaderQuotas { get; set; }\n    return:\n      type: System.Xml.XmlDictionaryReaderQuotas\n      description: The <xref href=\"System.Xml.XmlDictionaryReaderQuotas\"></xref> that is associated with this binding.\n  overload: System.ServiceModel.NetPeerTcpBinding.ReaderQuotas*\n  exceptions:\n  - type: System.ArgumentNullException\n    commentId: T:System.ArgumentNullException\n    description: The application attempted to set this property to null.\n  version:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.ServiceModel/NetPeerTcpBinding.xml\n  ms.technology:\n  - dotnet-standard\n  manager: ghogen\n- uid: System.ServiceModel.NetPeerTcpBinding.Resolver\n  commentId: P:System.ServiceModel.NetPeerTcpBinding.Resolver\n  id: Resolver\n  parent: System.ServiceModel.NetPeerTcpBinding\n  langs:\n  - csharp\n  name: Resolver\n  nameWithType: NetPeerTcpBinding.Resolver\n  fullName: NetPeerTcpBinding.Resolver\n  type: Property\n  assemblies:\n  - System.ServiceModel\n  namespace: System.ServiceModel\n  summary: Gets the <xref href=\"System.ServiceModel.PeerResolver\"></xref> used by this binding instance to resolve a peer mesh ID to the endpoint IP addresses of nodes within the peer mesh.\n  syntax:\n    content: public System.ServiceModel.PeerResolvers.PeerResolverSettings Resolver { get; }\n    return:\n      type: System.ServiceModel.PeerResolvers.PeerResolverSettings\n      description: A <xref href=\"System.ServiceModel.PeerResolver\"></xref> used to resolve a peer mesh ID to a set of <xref href=\"System.ServiceModel.PeerNodeAddress\"></xref> instances representing several nodes participating in the mesh.\n  overload: System.ServiceModel.NetPeerTcpBinding.Resolver*\n  exceptions: []\n  version:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.ServiceModel/NetPeerTcpBinding.xml\n  ms.technology:\n  - dotnet-standard\n  manager: ghogen\n- uid: System.ServiceModel.NetPeerTcpBinding.Scheme\n  commentId: P:System.ServiceModel.NetPeerTcpBinding.Scheme\n  id: Scheme\n  parent: System.ServiceModel.NetPeerTcpBinding\n  langs:\n  - csharp\n  name: Scheme\n  nameWithType: NetPeerTcpBinding.Scheme\n  fullName: NetPeerTcpBinding.Scheme\n  type: Property\n  assemblies:\n  - System.ServiceModel\n  namespace: System.ServiceModel\n  summary: Gets the URI scheme used for the transport protocol associated with this binding.\n  remarks: This value must be \"net.p2p\".\n  syntax:\n    content: public override string Scheme { get; }\n    return:\n      type: System.String\n      description: A <xref href=\"System.String\"></xref> that specifies the URI scheme for the specific transport protocol used for this binding.\n  overload: System.ServiceModel.NetPeerTcpBinding.Scheme*\n  exceptions: []\n  version:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.ServiceModel/NetPeerTcpBinding.xml\n  ms.technology:\n  - dotnet-standard\n  manager: ghogen\n- uid: System.ServiceModel.NetPeerTcpBinding.Security\n  commentId: P:System.ServiceModel.NetPeerTcpBinding.Security\n  id: Security\n  parent: System.ServiceModel.NetPeerTcpBinding\n  langs:\n  - csharp\n  name: Security\n  nameWithType: NetPeerTcpBinding.Security\n  fullName: NetPeerTcpBinding.Security\n  type: Property\n  assemblies:\n  - System.ServiceModel\n  namespace: System.ServiceModel\n  summary: Gets and sets the security to set on peer channels created by this binding.\n  syntax:\n    content: public System.ServiceModel.PeerSecuritySettings Security { get; set; }\n    return:\n      type: System.ServiceModel.PeerSecuritySettings\n      description: <xref href=\"System.ServiceModel.PeerSecuritySettings\"></xref> enumeration value that indicates the security to set on peer channels created by this binding. Security can be either message- or transport-specific.\n  overload: System.ServiceModel.NetPeerTcpBinding.Security*\n  exceptions: []\n  version:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.ServiceModel/NetPeerTcpBinding.xml\n  ms.technology:\n  - dotnet-standard\n  manager: ghogen\n- uid: System.ServiceModel.NetPeerTcpBinding.ShouldSerializeReaderQuotas\n  commentId: M:System.ServiceModel.NetPeerTcpBinding.ShouldSerializeReaderQuotas\n  id: ShouldSerializeReaderQuotas\n  parent: System.ServiceModel.NetPeerTcpBinding\n  langs:\n  - csharp\n  name: ShouldSerializeReaderQuotas()\n  nameWithType: NetPeerTcpBinding.ShouldSerializeReaderQuotas()\n  fullName: NetPeerTcpBinding.ShouldSerializeReaderQuotas()\n  type: Method\n  assemblies:\n  - System.ServiceModel\n  namespace: System.ServiceModel\n  summary: Gets a value that specifies whether reader quota data for the binding should be serialized.\n  syntax:\n    content: public bool ShouldSerializeReaderQuotas ();\n    parameters: []\n    return:\n      type: System.Boolean\n      description: Returns <xref href=\"System.Boolean\"></xref> that specifies `true` if reader quota data should be serialized, and `false` if it should not be serialized.\n  overload: System.ServiceModel.NetPeerTcpBinding.ShouldSerializeReaderQuotas*\n  exceptions: []\n  attributes: []\n  version:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.ServiceModel/NetPeerTcpBinding.xml\n  ms.technology:\n  - dotnet-standard\n  manager: ghogen\n- uid: System.ServiceModel.NetPeerTcpBinding.ShouldSerializeSecurity\n  commentId: M:System.ServiceModel.NetPeerTcpBinding.ShouldSerializeSecurity\n  id: ShouldSerializeSecurity\n  parent: System.ServiceModel.NetPeerTcpBinding\n  langs:\n  - csharp\n  name: ShouldSerializeSecurity()\n  nameWithType: NetPeerTcpBinding.ShouldSerializeSecurity()\n  fullName: NetPeerTcpBinding.ShouldSerializeSecurity()\n  type: Method\n  assemblies:\n  - System.ServiceModel\n  namespace: System.ServiceModel\n  summary: Gets a value that specifies whether security information for the binding should be serialized.\n  syntax:\n    content: public bool ShouldSerializeSecurity ();\n    parameters: []\n    return:\n      type: System.Boolean\n      description: Returns <xref href=\"System.Boolean\"></xref> that specifies `true` if the security information for the binding should be serialized, and `false` if it should not be serialized..\n  overload: System.ServiceModel.NetPeerTcpBinding.ShouldSerializeSecurity*\n  exceptions: []\n  attributes: []\n  version:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.ServiceModel/NetPeerTcpBinding.xml\n  ms.technology:\n  - dotnet-standard\n  manager: ghogen\n- uid: System.ServiceModel.NetPeerTcpBinding.System#ServiceModel#Channels#IBindingRuntimePreferences#ReceiveSynchronously\n  commentId: P:System.ServiceModel.NetPeerTcpBinding.System#ServiceModel#Channels#IBindingRuntimePreferences#ReceiveSynchronously\n  id: System#ServiceModel#Channels#IBindingRuntimePreferences#ReceiveSynchronously\n  isEii: true\n  parent: System.ServiceModel.NetPeerTcpBinding\n  langs:\n  - csharp\n  name: IBindingRuntimePreferences.ReceiveSynchronously\n  nameWithType: NetPeerTcpBinding.IBindingRuntimePreferences.ReceiveSynchronously\n  fullName: NetPeerTcpBinding.IBindingRuntimePreferences.ReceiveSynchronously\n  type: Property\n  assemblies:\n  - System.ServiceModel\n  namespace: System.ServiceModel\n  summary: Gets whether incoming requests over peer channels created by this binding are handled synchronously or asynchronously.\n  syntax:\n    content: bool System.ServiceModel.Channels.IBindingRuntimePreferences.ReceiveSynchronously { get; }\n    return:\n      type: System.Boolean\n      description: If true, incoming requests are handled synchronously; if false, they are handled asynchronously. The default value is false, with requests handled asynchronously.\n  overload: System.ServiceModel.NetPeerTcpBinding.System#ServiceModel#Channels#IBindingRuntimePreferences#ReceiveSynchronously*\n  exceptions: []\n  version:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.ServiceModel/NetPeerTcpBinding.xml\n  author: Erikre\n  ms.author: erikre\n  manager: erikre\nreferences:\n- uid: System.ServiceModel.Channels.Binding\n  parent: System.ServiceModel.Channels\n  isExternal: false\n  name: Binding\n  nameWithType: Binding\n  fullName: System.ServiceModel.Channels.Binding\n- uid: System.Configuration.ConfigurationException\n  parent: System.Configuration\n  isExternal: false\n  name: ConfigurationException\n  nameWithType: ConfigurationException\n  fullName: System.Configuration.ConfigurationException\n- uid: System.ArgumentException\n  parent: System\n  isExternal: false\n  name: ArgumentException\n  nameWithType: ArgumentException\n  fullName: System.ArgumentException\n- uid: System.ArgumentNullException\n  parent: System\n  isExternal: false\n  name: ArgumentNullException\n  nameWithType: ArgumentNullException\n  fullName: System.ArgumentNullException\n- uid: System.ServiceModel.NetPeerTcpBinding.#ctor\n  parent: System.ServiceModel.NetPeerTcpBinding\n  isExternal: false\n  name: NetPeerTcpBinding()\n  nameWithType: NetPeerTcpBinding.NetPeerTcpBinding()\n  fullName: NetPeerTcpBinding.NetPeerTcpBinding()\n- uid: System.ServiceModel.NetPeerTcpBinding.#ctor(System.String)\n  parent: System.ServiceModel.NetPeerTcpBinding\n  isExternal: false\n  name: NetPeerTcpBinding(String)\n  nameWithType: NetPeerTcpBinding.NetPeerTcpBinding(String)\n  fullName: NetPeerTcpBinding.NetPeerTcpBinding(String)\n- uid: System.String\n  parent: System\n  isExternal: false\n  name: String\n  nameWithType: String\n  fullName: System.String\n- uid: System.ServiceModel.NetPeerTcpBinding.CreateBindingElements\n  parent: System.ServiceModel.NetPeerTcpBinding\n  isExternal: false\n  name: CreateBindingElements()\n  nameWithType: NetPeerTcpBinding.CreateBindingElements()\n  fullName: NetPeerTcpBinding.CreateBindingElements()\n- uid: System.ServiceModel.Channels.BindingElementCollection\n  parent: System.ServiceModel.Channels\n  isExternal: false\n  name: BindingElementCollection\n  nameWithType: BindingElementCollection\n  fullName: System.ServiceModel.Channels.BindingElementCollection\n- uid: System.ServiceModel.NetPeerTcpBinding.EnvelopeVersion\n  parent: System.ServiceModel.NetPeerTcpBinding\n  isExternal: false\n  name: EnvelopeVersion\n  nameWithType: NetPeerTcpBinding.EnvelopeVersion\n  fullName: NetPeerTcpBinding.EnvelopeVersion\n- uid: System.ServiceModel.EnvelopeVersion\n  parent: System.ServiceModel\n  isExternal: false\n  name: EnvelopeVersion\n  nameWithType: EnvelopeVersion\n  fullName: System.ServiceModel.EnvelopeVersion\n- uid: System.ServiceModel.NetPeerTcpBinding.IsPnrpAvailable\n  parent: System.ServiceModel.NetPeerTcpBinding\n  isExternal: false\n  name: IsPnrpAvailable\n  nameWithType: NetPeerTcpBinding.IsPnrpAvailable\n  fullName: NetPeerTcpBinding.IsPnrpAvailable\n- uid: System.Boolean\n  parent: System\n  isExternal: false\n  name: Boolean\n  nameWithType: Boolean\n  fullName: System.Boolean\n- uid: System.ServiceModel.NetPeerTcpBinding.ListenIPAddress\n  parent: System.ServiceModel.NetPeerTcpBinding\n  isExternal: false\n  name: ListenIPAddress\n  nameWithType: NetPeerTcpBinding.ListenIPAddress\n  fullName: NetPeerTcpBinding.ListenIPAddress\n- uid: System.Net.IPAddress\n  parent: System.Net\n  isExternal: false\n  name: IPAddress\n  nameWithType: IPAddress\n  fullName: System.Net.IPAddress\n- uid: System.ServiceModel.NetPeerTcpBinding.MaxBufferPoolSize\n  parent: System.ServiceModel.NetPeerTcpBinding\n  isExternal: false\n  name: MaxBufferPoolSize\n  nameWithType: NetPeerTcpBinding.MaxBufferPoolSize\n  fullName: NetPeerTcpBinding.MaxBufferPoolSize\n- uid: System.Int64\n  parent: System\n  isExternal: false\n  name: Int64\n  nameWithType: Int64\n  fullName: System.Int64\n- uid: System.ServiceModel.NetPeerTcpBinding.MaxReceivedMessageSize\n  parent: System.ServiceModel.NetPeerTcpBinding\n  isExternal: false\n  name: MaxReceivedMessageSize\n  nameWithType: NetPeerTcpBinding.MaxReceivedMessageSize\n  fullName: NetPeerTcpBinding.MaxReceivedMessageSize\n- uid: System.ServiceModel.NetPeerTcpBinding.Port\n  parent: System.ServiceModel.NetPeerTcpBinding\n  isExternal: false\n  name: Port\n  nameWithType: NetPeerTcpBinding.Port\n  fullName: NetPeerTcpBinding.Port\n- uid: System.Int32\n  parent: System\n  isExternal: false\n  name: Int32\n  nameWithType: Int32\n  fullName: System.Int32\n- uid: System.ServiceModel.NetPeerTcpBinding.ReaderQuotas\n  parent: System.ServiceModel.NetPeerTcpBinding\n  isExternal: false\n  name: ReaderQuotas\n  nameWithType: NetPeerTcpBinding.ReaderQuotas\n  fullName: NetPeerTcpBinding.ReaderQuotas\n- uid: System.Xml.XmlDictionaryReaderQuotas\n  parent: System.Xml\n  isExternal: false\n  name: XmlDictionaryReaderQuotas\n  nameWithType: XmlDictionaryReaderQuotas\n  fullName: System.Xml.XmlDictionaryReaderQuotas\n- uid: System.ServiceModel.NetPeerTcpBinding.Resolver\n  parent: System.ServiceModel.NetPeerTcpBinding\n  isExternal: false\n  name: Resolver\n  nameWithType: NetPeerTcpBinding.Resolver\n  fullName: NetPeerTcpBinding.Resolver\n- uid: System.ServiceModel.PeerResolvers.PeerResolverSettings\n  parent: System.ServiceModel.PeerResolvers\n  isExternal: false\n  name: PeerResolverSettings\n  nameWithType: PeerResolverSettings\n  fullName: System.ServiceModel.PeerResolvers.PeerResolverSettings\n- uid: System.ServiceModel.NetPeerTcpBinding.Scheme\n  parent: System.ServiceModel.NetPeerTcpBinding\n  isExternal: false\n  name: Scheme\n  nameWithType: NetPeerTcpBinding.Scheme\n  fullName: NetPeerTcpBinding.Scheme\n- uid: System.ServiceModel.NetPeerTcpBinding.Security\n  parent: System.ServiceModel.NetPeerTcpBinding\n  isExternal: false\n  name: Security\n  nameWithType: NetPeerTcpBinding.Security\n  fullName: NetPeerTcpBinding.Security\n- uid: System.ServiceModel.PeerSecuritySettings\n  parent: System.ServiceModel\n  isExternal: false\n  name: PeerSecuritySettings\n  nameWithType: PeerSecuritySettings\n  fullName: System.ServiceModel.PeerSecuritySettings\n- uid: System.ServiceModel.NetPeerTcpBinding.ShouldSerializeReaderQuotas\n  parent: System.ServiceModel.NetPeerTcpBinding\n  isExternal: false\n  name: ShouldSerializeReaderQuotas()\n  nameWithType: NetPeerTcpBinding.ShouldSerializeReaderQuotas()\n  fullName: NetPeerTcpBinding.ShouldSerializeReaderQuotas()\n- uid: System.ServiceModel.NetPeerTcpBinding.ShouldSerializeSecurity\n  parent: System.ServiceModel.NetPeerTcpBinding\n  isExternal: false\n  name: ShouldSerializeSecurity()\n  nameWithType: NetPeerTcpBinding.ShouldSerializeSecurity()\n  fullName: NetPeerTcpBinding.ShouldSerializeSecurity()\n- uid: System.ServiceModel.NetPeerTcpBinding.System#ServiceModel#Channels#IBindingRuntimePreferences#ReceiveSynchronously\n  parent: System.ServiceModel.NetPeerTcpBinding\n  isExternal: false\n  name: IBindingRuntimePreferences.ReceiveSynchronously\n  nameWithType: NetPeerTcpBinding.IBindingRuntimePreferences.ReceiveSynchronously\n  fullName: NetPeerTcpBinding.IBindingRuntimePreferences.ReceiveSynchronously\n- uid: System.ServiceModel.NetPeerTcpBinding.#ctor*\n  parent: System.ServiceModel.NetPeerTcpBinding\n  isExternal: false\n  name: NetPeerTcpBinding\n  nameWithType: NetPeerTcpBinding.NetPeerTcpBinding\n  fullName: NetPeerTcpBinding.NetPeerTcpBinding\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.ServiceModel/NetPeerTcpBinding.xml\n- uid: System.ServiceModel.NetPeerTcpBinding.CreateBindingElements*\n  parent: System.ServiceModel.NetPeerTcpBinding\n  isExternal: false\n  name: CreateBindingElements\n  nameWithType: NetPeerTcpBinding.CreateBindingElements\n  fullName: NetPeerTcpBinding.CreateBindingElements\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.ServiceModel/NetPeerTcpBinding.xml\n- uid: System.ServiceModel.NetPeerTcpBinding.EnvelopeVersion*\n  parent: System.ServiceModel.NetPeerTcpBinding\n  isExternal: false\n  name: EnvelopeVersion\n  nameWithType: NetPeerTcpBinding.EnvelopeVersion\n  fullName: NetPeerTcpBinding.EnvelopeVersion\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.ServiceModel/NetPeerTcpBinding.xml\n- uid: System.ServiceModel.NetPeerTcpBinding.IsPnrpAvailable*\n  parent: System.ServiceModel.NetPeerTcpBinding\n  isExternal: false\n  name: IsPnrpAvailable\n  nameWithType: NetPeerTcpBinding.IsPnrpAvailable\n  fullName: NetPeerTcpBinding.IsPnrpAvailable\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.ServiceModel/NetPeerTcpBinding.xml\n- uid: System.ServiceModel.NetPeerTcpBinding.ListenIPAddress*\n  parent: System.ServiceModel.NetPeerTcpBinding\n  isExternal: false\n  name: ListenIPAddress\n  nameWithType: NetPeerTcpBinding.ListenIPAddress\n  fullName: NetPeerTcpBinding.ListenIPAddress\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.ServiceModel/NetPeerTcpBinding.xml\n- uid: System.ServiceModel.NetPeerTcpBinding.MaxBufferPoolSize*\n  parent: System.ServiceModel.NetPeerTcpBinding\n  isExternal: false\n  name: MaxBufferPoolSize\n  nameWithType: NetPeerTcpBinding.MaxBufferPoolSize\n  fullName: NetPeerTcpBinding.MaxBufferPoolSize\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.ServiceModel/NetPeerTcpBinding.xml\n- uid: System.ServiceModel.NetPeerTcpBinding.MaxReceivedMessageSize*\n  parent: System.ServiceModel.NetPeerTcpBinding\n  isExternal: false\n  name: MaxReceivedMessageSize\n  nameWithType: NetPeerTcpBinding.MaxReceivedMessageSize\n  fullName: NetPeerTcpBinding.MaxReceivedMessageSize\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.ServiceModel/NetPeerTcpBinding.xml\n- uid: System.ServiceModel.NetPeerTcpBinding.Port*\n  parent: System.ServiceModel.NetPeerTcpBinding\n  isExternal: false\n  name: Port\n  nameWithType: NetPeerTcpBinding.Port\n  fullName: NetPeerTcpBinding.Port\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.ServiceModel/NetPeerTcpBinding.xml\n- uid: System.ServiceModel.NetPeerTcpBinding.ReaderQuotas*\n  parent: System.ServiceModel.NetPeerTcpBinding\n  isExternal: false\n  name: ReaderQuotas\n  nameWithType: NetPeerTcpBinding.ReaderQuotas\n  fullName: NetPeerTcpBinding.ReaderQuotas\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.ServiceModel/NetPeerTcpBinding.xml\n- uid: System.ServiceModel.NetPeerTcpBinding.Resolver*\n  parent: System.ServiceModel.NetPeerTcpBinding\n  isExternal: false\n  name: Resolver\n  nameWithType: NetPeerTcpBinding.Resolver\n  fullName: NetPeerTcpBinding.Resolver\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.ServiceModel/NetPeerTcpBinding.xml\n- uid: System.ServiceModel.NetPeerTcpBinding.Scheme*\n  parent: System.ServiceModel.NetPeerTcpBinding\n  isExternal: false\n  name: Scheme\n  nameWithType: NetPeerTcpBinding.Scheme\n  fullName: NetPeerTcpBinding.Scheme\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.ServiceModel/NetPeerTcpBinding.xml\n- uid: System.ServiceModel.NetPeerTcpBinding.Security*\n  parent: System.ServiceModel.NetPeerTcpBinding\n  isExternal: false\n  name: Security\n  nameWithType: NetPeerTcpBinding.Security\n  fullName: NetPeerTcpBinding.Security\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.ServiceModel/NetPeerTcpBinding.xml\n- uid: System.ServiceModel.NetPeerTcpBinding.ShouldSerializeReaderQuotas*\n  parent: System.ServiceModel.NetPeerTcpBinding\n  isExternal: false\n  name: ShouldSerializeReaderQuotas\n  nameWithType: NetPeerTcpBinding.ShouldSerializeReaderQuotas\n  fullName: NetPeerTcpBinding.ShouldSerializeReaderQuotas\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.ServiceModel/NetPeerTcpBinding.xml\n- uid: System.ServiceModel.NetPeerTcpBinding.ShouldSerializeSecurity*\n  parent: System.ServiceModel.NetPeerTcpBinding\n  isExternal: false\n  name: ShouldSerializeSecurity\n  nameWithType: NetPeerTcpBinding.ShouldSerializeSecurity\n  fullName: NetPeerTcpBinding.ShouldSerializeSecurity\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.ServiceModel/NetPeerTcpBinding.xml\n- uid: System.ServiceModel.NetPeerTcpBinding.System#ServiceModel#Channels#IBindingRuntimePreferences#ReceiveSynchronously*\n  parent: System.ServiceModel.NetPeerTcpBinding\n  isExternal: false\n  name: System.ServiceModel.Channels.IBindingRuntimePreferences.ReceiveSynchronously\n  nameWithType: NetPeerTcpBinding.System.ServiceModel.Channels.IBindingRuntimePreferences.ReceiveSynchronously\n  fullName: NetPeerTcpBinding.System.ServiceModel.Channels.IBindingRuntimePreferences.ReceiveSynchronously\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.ServiceModel/NetPeerTcpBinding.xml\n- uid: System.Object.Equals(System.Object)\n  parent: System.Object\n  isExternal: false\n  name: Equals(Object)\n  nameWithType: Object.Equals(Object)\n  fullName: Object.Equals(Object)\n- uid: System.Object.Equals(System.Object,System.Object)\n  parent: System.Object\n  isExternal: false\n  name: Equals(Object, Object)\n  nameWithType: Object.Equals(Object, Object)\n  fullName: Object.Equals(Object, Object)\n- uid: System.Object.GetHashCode\n  parent: System.Object\n  isExternal: false\n  name: GetHashCode()\n  nameWithType: Object.GetHashCode()\n  fullName: Object.GetHashCode()\n- uid: System.Object.GetType\n  parent: System.Object\n  isExternal: false\n  name: GetType()\n  nameWithType: Object.GetType()\n  fullName: Object.GetType()\n- uid: System.Object.MemberwiseClone\n  parent: System.Object\n  isExternal: false\n  name: MemberwiseClone()\n  nameWithType: Object.MemberwiseClone()\n  fullName: Object.MemberwiseClone()\n- uid: System.Object.ReferenceEquals(System.Object,System.Object)\n  parent: System.Object\n  isExternal: false\n  name: ReferenceEquals(Object, Object)\n  nameWithType: Object.ReferenceEquals(Object, Object)\n  fullName: Object.ReferenceEquals(Object, Object)\n- uid: System.Object.ToString\n  parent: System.Object\n  isExternal: false\n  name: ToString()\n  nameWithType: Object.ToString()\n  fullName: Object.ToString()\n- uid: System.ServiceModel.Channels.Binding.BuildChannelFactory``1(System.Object[])\n  parent: System.ServiceModel.Channels.Binding\n  isExternal: false\n  name: BuildChannelFactory<TChannel>(Object[])\n  nameWithType: Binding.BuildChannelFactory<TChannel>(Object[])\n  fullName: Binding.BuildChannelFactory<TChannel>(Object[])\n- uid: System.ServiceModel.Channels.Binding.BuildChannelFactory``1(System.ServiceModel.Channels.BindingParameterCollection)\n  parent: System.ServiceModel.Channels.Binding\n  isExternal: false\n  name: BuildChannelFactory<TChannel>(BindingParameterCollection)\n  nameWithType: Binding.BuildChannelFactory<TChannel>(BindingParameterCollection)\n  fullName: Binding.BuildChannelFactory<TChannel>(BindingParameterCollection)\n- uid: System.ServiceModel.Channels.Binding.BuildChannelListener``1(System.Object[])\n  parent: System.ServiceModel.Channels.Binding\n  isExternal: false\n  name: BuildChannelListener<TChannel>(Object[])\n  nameWithType: Binding.BuildChannelListener<TChannel>(Object[])\n  fullName: Binding.BuildChannelListener<TChannel>(Object[])\n- uid: System.ServiceModel.Channels.Binding.BuildChannelListener``1(System.ServiceModel.Channels.BindingParameterCollection)\n  parent: System.ServiceModel.Channels.Binding\n  isExternal: false\n  name: BuildChannelListener<TChannel>(BindingParameterCollection)\n  nameWithType: Binding.BuildChannelListener<TChannel>(BindingParameterCollection)\n  fullName: Binding.BuildChannelListener<TChannel>(BindingParameterCollection)\n- uid: System.ServiceModel.Channels.Binding.BuildChannelListener``1(System.Uri,System.Object[])\n  parent: System.ServiceModel.Channels.Binding\n  isExternal: false\n  name: BuildChannelListener<TChannel>(Uri, Object[])\n  nameWithType: Binding.BuildChannelListener<TChannel>(Uri, Object[])\n  fullName: Binding.BuildChannelListener<TChannel>(Uri, Object[])\n- uid: System.ServiceModel.Channels.Binding.BuildChannelListener``1(System.Uri,System.ServiceModel.Channels.BindingParameterCollection)\n  parent: System.ServiceModel.Channels.Binding\n  isExternal: false\n  name: BuildChannelListener<TChannel>(Uri, BindingParameterCollection)\n  nameWithType: Binding.BuildChannelListener<TChannel>(Uri, BindingParameterCollection)\n  fullName: Binding.BuildChannelListener<TChannel>(Uri, BindingParameterCollection)\n- uid: System.ServiceModel.Channels.Binding.BuildChannelListener``1(System.Uri,System.String,System.Object[])\n  parent: System.ServiceModel.Channels.Binding\n  isExternal: false\n  name: BuildChannelListener<TChannel>(Uri, String, Object[])\n  nameWithType: Binding.BuildChannelListener<TChannel>(Uri, String, Object[])\n  fullName: Binding.BuildChannelListener<TChannel>(Uri, String, Object[])\n- uid: System.ServiceModel.Channels.Binding.BuildChannelListener``1(System.Uri,System.String,System.ServiceModel.Channels.BindingParameterCollection)\n  parent: System.ServiceModel.Channels.Binding\n  isExternal: false\n  name: BuildChannelListener<TChannel>(Uri, String, BindingParameterCollection)\n  nameWithType: Binding.BuildChannelListener<TChannel>(Uri, String, BindingParameterCollection)\n  fullName: Binding.BuildChannelListener<TChannel>(Uri, String, BindingParameterCollection)\n- uid: System.ServiceModel.Channels.Binding.BuildChannelListener``1(System.Uri,System.String,System.ServiceModel.Description.ListenUriMode,System.Object[])\n  parent: System.ServiceModel.Channels.Binding\n  isExternal: false\n  name: BuildChannelListener<TChannel>(Uri, String, ListenUriMode, Object[])\n  nameWithType: Binding.BuildChannelListener<TChannel>(Uri, String, ListenUriMode, Object[])\n  fullName: Binding.BuildChannelListener<TChannel>(Uri, String, ListenUriMode, Object[])\n- uid: System.ServiceModel.Channels.Binding.BuildChannelListener``1(System.Uri,System.String,System.ServiceModel.Description.ListenUriMode,System.ServiceModel.Channels.BindingParameterCollection)\n  parent: System.ServiceModel.Channels.Binding\n  isExternal: false\n  name: BuildChannelListener<TChannel>(Uri, String, ListenUriMode, BindingParameterCollection)\n  nameWithType: Binding.BuildChannelListener<TChannel>(Uri, String, ListenUriMode, BindingParameterCollection)\n  fullName: Binding.BuildChannelListener<TChannel>(Uri, String, ListenUriMode, BindingParameterCollection)\n- uid: System.ServiceModel.Channels.Binding.CanBuildChannelFactory``1(System.ServiceModel.Channels.BindingParameterCollection)\n  parent: System.ServiceModel.Channels.Binding\n  isExternal: false\n  name: CanBuildChannelFactory<TChannel>(BindingParameterCollection)\n  nameWithType: Binding.CanBuildChannelFactory<TChannel>(BindingParameterCollection)\n  fullName: Binding.CanBuildChannelFactory<TChannel>(BindingParameterCollection)\n- uid: System.ServiceModel.Channels.Binding.CanBuildChannelFactory``1(System.Object[])\n  parent: System.ServiceModel.Channels.Binding\n  isExternal: false\n  name: CanBuildChannelFactory<TChannel>(Object[])\n  nameWithType: Binding.CanBuildChannelFactory<TChannel>(Object[])\n  fullName: Binding.CanBuildChannelFactory<TChannel>(Object[])\n- uid: System.ServiceModel.Channels.Binding.CanBuildChannelListener``1(System.Object[])\n  parent: System.ServiceModel.Channels.Binding\n  isExternal: false\n  name: CanBuildChannelListener<TChannel>(Object[])\n  nameWithType: Binding.CanBuildChannelListener<TChannel>(Object[])\n  fullName: Binding.CanBuildChannelListener<TChannel>(Object[])\n- uid: System.ServiceModel.Channels.Binding.CanBuildChannelListener``1(System.ServiceModel.Channels.BindingParameterCollection)\n  parent: System.ServiceModel.Channels.Binding\n  isExternal: false\n  name: CanBuildChannelListener<TChannel>(BindingParameterCollection)\n  nameWithType: Binding.CanBuildChannelListener<TChannel>(BindingParameterCollection)\n  fullName: Binding.CanBuildChannelListener<TChannel>(BindingParameterCollection)\n- uid: System.ServiceModel.Channels.Binding.CloseTimeout\n  parent: System.ServiceModel.Channels.Binding\n  isExternal: false\n  name: CloseTimeout\n  nameWithType: Binding.CloseTimeout\n  fullName: Binding.CloseTimeout\n- uid: System.ServiceModel.Channels.Binding.GetProperty``1(System.ServiceModel.Channels.BindingParameterCollection)\n  parent: System.ServiceModel.Channels.Binding\n  isExternal: false\n  name: GetProperty<T>(BindingParameterCollection)\n  nameWithType: Binding.GetProperty<T>(BindingParameterCollection)\n  fullName: Binding.GetProperty<T>(BindingParameterCollection)\n- uid: System.ServiceModel.Channels.Binding.MessageVersion\n  parent: System.ServiceModel.Channels.Binding\n  isExternal: false\n  name: MessageVersion\n  nameWithType: Binding.MessageVersion\n  fullName: Binding.MessageVersion\n- uid: System.ServiceModel.Channels.Binding.Name\n  parent: System.ServiceModel.Channels.Binding\n  isExternal: false\n  name: Name\n  nameWithType: Binding.Name\n  fullName: Binding.Name\n- uid: System.ServiceModel.Channels.Binding.Namespace\n  parent: System.ServiceModel.Channels.Binding\n  isExternal: false\n  name: Namespace\n  nameWithType: Binding.Namespace\n  fullName: Binding.Namespace\n- uid: System.ServiceModel.Channels.Binding.OpenTimeout\n  parent: System.ServiceModel.Channels.Binding\n  isExternal: false\n  name: OpenTimeout\n  nameWithType: Binding.OpenTimeout\n  fullName: Binding.OpenTimeout\n- uid: System.ServiceModel.Channels.Binding.ReceiveTimeout\n  parent: System.ServiceModel.Channels.Binding\n  isExternal: false\n  name: ReceiveTimeout\n  nameWithType: Binding.ReceiveTimeout\n  fullName: Binding.ReceiveTimeout\n- uid: System.ServiceModel.Channels.Binding.SendTimeout\n  parent: System.ServiceModel.Channels.Binding\n  isExternal: false\n  name: SendTimeout\n  nameWithType: Binding.SendTimeout\n  fullName: Binding.SendTimeout\n- uid: System.ServiceModel.Channels.Binding.ShouldSerializeName\n  parent: System.ServiceModel.Channels.Binding\n  isExternal: false\n  name: ShouldSerializeName()\n  nameWithType: Binding.ShouldSerializeName()\n  fullName: Binding.ShouldSerializeName()\n- uid: System.ServiceModel.Channels.Binding.ShouldSerializeNamespace\n  parent: System.ServiceModel.Channels.Binding\n  isExternal: false\n  name: ShouldSerializeNamespace()\n  nameWithType: Binding.ShouldSerializeNamespace()\n  fullName: Binding.ShouldSerializeNamespace()\n- uid: System.ServiceModel.Channels.IBindingRuntimePreferences\n  parent: System.ServiceModel.Channels\n  isExternal: false\n  name: IBindingRuntimePreferences\n  nameWithType: IBindingRuntimePreferences\n  fullName: System.ServiceModel.Channels.IBindingRuntimePreferences\n"}