### YamlMime:ManagedReference
items:
- uid: System.ServiceModel.Security.WindowsServiceCredential
  commentId: T:System.ServiceModel.Security.WindowsServiceCredential
  id: WindowsServiceCredential
  children:
  - System.ServiceModel.Security.WindowsServiceCredential.AllowAnonymousLogons
  - System.ServiceModel.Security.WindowsServiceCredential.IncludeWindowsGroups
  langs:
  - csharp
  name: WindowsServiceCredential
  nameWithType: WindowsServiceCredential
  fullName: System.ServiceModel.Security.WindowsServiceCredential
  type: Class
  assemblies:
  - System.ServiceModel
  namespace: System.ServiceModel.Security
  summary: Provides properties that describe the service credentials used for Windows authentication.
  remarks: "This class provides two settings.  \n  \n You can use the <xref:System.ServiceModel.Security.WindowsServiceCredential.AllowAnonymousLogons%2A> property to allow the anonymous logon of clients by setting it to `true`. You can then avoid disclosing the client's identity to the service by setting <xref:System.ServiceModel.Security.WindowsClientCredential.AllowedImpersonationLevel%2A> to `Anonymous`.  \n  \n-   If the <xref:System.ServiceModel.Security.WindowsServiceCredential.IncludeWindowsGroups%2A> property is set to `true` (the default setting), the service can determine the Windows groups to which the client belongs."
  syntax:
    content: public sealed class WindowsServiceCredential
  inheritance:
  - System.Object
  implements: []
  inheritedMembers:
  - System.Object.Equals(System.Object)
  - System.Object.Equals(System.Object,System.Object)
  - System.Object.GetHashCode
  - System.Object.GetType
  - System.Object.MemberwiseClone
  - System.Object.ReferenceEquals(System.Object,System.Object)
  - System.Object.ToString
  version:
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  monikers:
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.ServiceModel.Security/WindowsServiceCredential.xml
  ms.technology:
  - dotnet-standard
  author: Erikre
  ms.author: erikre
  manager: erikre
- uid: System.ServiceModel.Security.WindowsServiceCredential.AllowAnonymousLogons
  commentId: P:System.ServiceModel.Security.WindowsServiceCredential.AllowAnonymousLogons
  id: AllowAnonymousLogons
  parent: System.ServiceModel.Security.WindowsServiceCredential
  langs:
  - csharp
  name: AllowAnonymousLogons
  nameWithType: WindowsServiceCredential.AllowAnonymousLogons
  fullName: WindowsServiceCredential.AllowAnonymousLogons
  type: Property
  assemblies:
  - System.ServiceModel
  namespace: System.ServiceModel.Security
  summary: Gets or sets a value that indicates whether to allowanonymous users access (applies only to message-level security).
  remarks: "When using Windows client credentials on a binding, by default the system does not allow anonymous access. This means that only domain or workgroup authenticated users are allowed into the system. However, in certain cases it is acceptable for anonymous, unauthenticated users to access the service. In this case you can set this property to `true` to allow anonymous clients to call the service. A service that enables anonymous authentication is significantly loosening the security requirements, so this setting should be used with caution.  \n  \n Note that this property does not apply to transport security scenarios and applies only when message security is used by the underlying binding to secure the messages. If Windows transport security is used, this property does not apply."
  example:
  - "The following code shows how to get this property.  \n  \n [!code-csharp[S_UEWindowsServiceCredential#1](~/samples/snippets/csharp/VS_Snippets_CFX/s_uewindowsservicecredential/cs/source.cs#1)]\n [!code-vb[S_UEWindowsServiceCredential#1](~/samples/snippets/visualbasic/VS_Snippets_CFX/s_uewindowsservicecredential/vb/source.vb#1)]"
  syntax:
    content: public bool AllowAnonymousLogons { get; set; }
    return:
      type: System.Boolean
      description: '`true` if anonymous users are allowed access; otherwise, `false`. The default is `false`.'
  overload: System.ServiceModel.Security.WindowsServiceCredential.AllowAnonymousLogons*
  exceptions: []
  version:
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  monikers:
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.ServiceModel.Security/WindowsServiceCredential.xml
  ms.technology:
  - dotnet-standard
  author: Erikre
  ms.author: erikre
  manager: erikre
- uid: System.ServiceModel.Security.WindowsServiceCredential.IncludeWindowsGroups
  commentId: P:System.ServiceModel.Security.WindowsServiceCredential.IncludeWindowsGroups
  id: IncludeWindowsGroups
  parent: System.ServiceModel.Security.WindowsServiceCredential
  langs:
  - csharp
  name: IncludeWindowsGroups
  nameWithType: WindowsServiceCredential.IncludeWindowsGroups
  fullName: WindowsServiceCredential.IncludeWindowsGroups
  type: Property
  assemblies:
  - System.ServiceModel
  namespace: System.ServiceModel.Security
  summary: Gets or sets a value that indicates whether the Windows groups that a client belongs to are included in the security context.
  remarks: In most scenarios, knowing which Windows groups users belong to provides useful information for authorization decisions. However, if the Windows groups are not required, setting this property to `false` can improve performance by avoiding a full-group claim population.
  example:
  - "The following code shows how to get this property.  \n  \n [!code-csharp[S_UEWindowsServiceCredential#1](~/samples/snippets/csharp/VS_Snippets_CFX/s_uewindowsservicecredential/cs/source.cs#1)]\n [!code-vb[S_UEWindowsServiceCredential#1](~/samples/snippets/visualbasic/VS_Snippets_CFX/s_uewindowsservicecredential/vb/source.vb#1)]"
  syntax:
    content: public bool IncludeWindowsGroups { get; set; }
    return:
      type: System.Boolean
      description: '`true` if Windows groups are included in the security context; otherwise, `false`. The default is `true`.'
  overload: System.ServiceModel.Security.WindowsServiceCredential.IncludeWindowsGroups*
  exceptions: []
  version:
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  monikers:
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.ServiceModel.Security/WindowsServiceCredential.xml
  ms.technology:
  - dotnet-standard
  author: Erikre
  ms.author: erikre
  manager: erikre
references:
- uid: System.Object
  parent: System
  isExternal: false
  name: Object
  nameWithType: Object
  fullName: System.Object
- uid: System.ServiceModel.Security.WindowsServiceCredential.AllowAnonymousLogons
  parent: System.ServiceModel.Security.WindowsServiceCredential
  isExternal: false
  name: AllowAnonymousLogons
  nameWithType: WindowsServiceCredential.AllowAnonymousLogons
  fullName: WindowsServiceCredential.AllowAnonymousLogons
- uid: System.Boolean
  parent: System
  isExternal: false
  name: Boolean
  nameWithType: Boolean
  fullName: System.Boolean
- uid: System.ServiceModel.Security.WindowsServiceCredential.IncludeWindowsGroups
  parent: System.ServiceModel.Security.WindowsServiceCredential
  isExternal: false
  name: IncludeWindowsGroups
  nameWithType: WindowsServiceCredential.IncludeWindowsGroups
  fullName: WindowsServiceCredential.IncludeWindowsGroups
- uid: System.ServiceModel.Security.WindowsServiceCredential.AllowAnonymousLogons*
  parent: System.ServiceModel.Security.WindowsServiceCredential
  isExternal: false
  name: AllowAnonymousLogons
  nameWithType: WindowsServiceCredential.AllowAnonymousLogons
  fullName: WindowsServiceCredential.AllowAnonymousLogons
  monikers:
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.ServiceModel.Security/WindowsServiceCredential.xml
- uid: System.ServiceModel.Security.WindowsServiceCredential.IncludeWindowsGroups*
  parent: System.ServiceModel.Security.WindowsServiceCredential
  isExternal: false
  name: IncludeWindowsGroups
  nameWithType: WindowsServiceCredential.IncludeWindowsGroups
  fullName: WindowsServiceCredential.IncludeWindowsGroups
  monikers:
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.ServiceModel.Security/WindowsServiceCredential.xml
- uid: System.Object.Equals(System.Object)
  parent: System.Object
  isExternal: false
  name: Equals(Object)
  nameWithType: Object.Equals(Object)
  fullName: Object.Equals(Object)
- uid: System.Object.Equals(System.Object,System.Object)
  parent: System.Object
  isExternal: false
  name: Equals(Object, Object)
  nameWithType: Object.Equals(Object, Object)
  fullName: Object.Equals(Object, Object)
- uid: System.Object.GetHashCode
  parent: System.Object
  isExternal: false
  name: GetHashCode()
  nameWithType: Object.GetHashCode()
  fullName: Object.GetHashCode()
- uid: System.Object.GetType
  parent: System.Object
  isExternal: false
  name: GetType()
  nameWithType: Object.GetType()
  fullName: Object.GetType()
- uid: System.Object.MemberwiseClone
  parent: System.Object
  isExternal: false
  name: MemberwiseClone()
  nameWithType: Object.MemberwiseClone()
  fullName: Object.MemberwiseClone()
- uid: System.Object.ReferenceEquals(System.Object,System.Object)
  parent: System.Object
  isExternal: false
  name: ReferenceEquals(Object, Object)
  nameWithType: Object.ReferenceEquals(Object, Object)
  fullName: Object.ReferenceEquals(Object, Object)
- uid: System.Object.ToString
  parent: System.Object
  isExternal: false
  name: ToString()
  nameWithType: Object.ToString()
  fullName: Object.ToString()
