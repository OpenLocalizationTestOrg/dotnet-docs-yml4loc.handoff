<?xml version="1.0"?>
<xliff version="1.2" xmlns="urn:oasis:names:tc:xliff:document:1.2" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:schemaLocation="urn:oasis:names:tc:xliff:document:1.2 xliff-core-1.2-transitional.xsd">
  <file datatype="xml" original="markdown" source-language="en-US" target-language="ja-jp">
    <header>
      <tool tool-id="mdxliff" tool-name="mdxliff" tool-version="1.0-fdd610b" tool-company="Microsoft" />
      <xliffext:olfilehash xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">3504de7118ce3b2271504e35bb20fc44c79cff24</xliffext:olfilehash>
      <xliffext:olfilepath xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">System.Windows.Media.Animation.ClockController.yml</xliffext:olfilepath>
      <xliffext:oltranslationpriority xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">net47</xliffext:oltranslationpriority>
      <xliffext:oltranslationtype xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">Human Translation</xliffext:oltranslationtype>
      <xliffext:olskeletonhash xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">af3ca838341c4cb89176fc299cee8640956b78a0</xliffext:olskeletonhash>
      <xliffext:olxliffhash xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">59c547b6e0521792c29e9d973aaf1d872a16e088</xliffext:olxliffhash>
    </header>
    <body>
      <group id="content" extype="content">
        <trans-unit id="101" translate="yes" xml:space="preserve">
          <source>Interactively controls a <ph id="ph1">&lt;xref href="System.Windows.Media.Animation.Clock"&gt;&lt;/xref&gt;</ph>.</source>
        </trans-unit>
        <trans-unit id="102" translate="yes" xml:space="preserve" extradata="MT">
          <source>Use a <ph id="ph1">&lt;xref:System.Windows.Media.Animation.ClockController&gt;</ph> to interactively begin, pause, resume, seek, skip, stop, and remove a <ph id="ph2">&lt;xref:System.Windows.Media.Animation.Clock&gt;</ph>.</source>
        </trans-unit>
        <trans-unit id="103" translate="yes" xml:space="preserve" extradata="MT">
          <source>You can only interactively control root-level clocks.</source>
        </trans-unit>
        <trans-unit id="104" translate="yes" xml:space="preserve">
          <source>Sets the target <ph id="ph1">&lt;xref href="System.Windows.Media.Animation.ClockController.Clock"&gt;&lt;/xref&gt;</ph> to begin at the next tick.</source>
        </trans-unit>
        <trans-unit id="105" translate="yes" xml:space="preserve" extradata="MT">
          <source>This method causes the target <ph id="ph1">&lt;xref:System.Windows.Media.Animation.Clock&gt;</ph> to behave as though its <ph id="ph2">&lt;xref:System.Windows.Media.Animation.Timeline&gt;</ph> object's <ph id="ph3">&lt;xref:System.Windows.Media.Animation.Timeline.BeginTime%2A&gt;</ph> were set to the time of the next tick.</source>
        </trans-unit>
        <trans-unit id="106" translate="yes" xml:space="preserve" extradata="MT">
          <source>The timeline's actual <ph id="ph1">&lt;xref:System.Windows.Media.Animation.Timeline.BeginTime%2A&gt;</ph> setting is ignored (but not changed).</source>
        </trans-unit>
        <trans-unit id="107" translate="yes" xml:space="preserve" extradata="MT">
          <source>This method changes the target clock's <ph id="ph1">&lt;xref:System.Windows.Media.Animation.Clock.CurrentState%2A&gt;</ph> to <ph id="ph2">&lt;xref:System.Windows.Media.Animation.ClockState.Active&gt;</ph>.</source>
        </trans-unit>
        <trans-unit id="108" translate="yes" xml:space="preserve" extradata="MT">
          <source>The <ph id="ph1">&lt;xref:System.Windows.Media.Animation.ClockController.Begin%2A&gt;</ph> method does not resume a paused clock.</source>
        </trans-unit>
        <trans-unit id="109" translate="yes" xml:space="preserve" extradata="MT">
          <source>This method has no effect on the timing tree until the next time a tick is processed.</source>
        </trans-unit>
        <trans-unit id="110" translate="yes" xml:space="preserve" extradata="MT">
          <source>As a side-effect, the appropriate events will also not be raised until then.</source>
        </trans-unit>
        <trans-unit id="111" translate="yes" xml:space="preserve" extradata="MT">
          <source>Calling this method triggers the <ph id="ph1">&lt;xref:System.Windows.Media.Animation.Clock.CurrentStateInvalidated&gt;</ph> and <ph id="ph2">&lt;xref:System.Windows.Media.Animation.Timeline.CurrentGlobalSpeedInvalidated&gt;</ph> events.</source>
        </trans-unit>
        <trans-unit id="112" translate="yes" xml:space="preserve">
          <source>Gets the <ph id="ph1">&lt;xref href="System.Windows.Media.Animation.Clock"&gt;&lt;/xref&gt;</ph> controlled by this <ph id="ph2">&lt;xref href="System.Windows.Media.Animation.ClockController"&gt;&lt;/xref&gt;</ph>.</source>
        </trans-unit>
        <trans-unit id="113" translate="yes" xml:space="preserve">
          <source>The <ph id="ph1">&lt;xref href="System.Windows.Media.Animation.Clock"&gt;&lt;/xref&gt;</ph> controlled by this <ph id="ph2">&lt;xref href="System.Windows.Media.Animation.ClockController"&gt;&lt;/xref&gt;</ph>.</source>
        </trans-unit>
        <trans-unit id="114" translate="yes" xml:space="preserve">
          <source>Stops the target <ph id="ph1">&lt;xref href="System.Windows.Media.Animation.Clock"&gt;&lt;/xref&gt;</ph> from progressing.</source>
        </trans-unit>
        <trans-unit id="115" translate="yes" xml:space="preserve" extradata="MT">
          <source>You can pause a <ph id="ph1">&lt;xref:System.Windows.Media.Animation.Clock&gt;</ph> regardless of its current state, and pausing a clock does not change its current state.</source>
        </trans-unit>
        <trans-unit id="116" translate="yes" xml:space="preserve" extradata="MT">
          <source>A clock can be paused while <ph id="ph1">&lt;xref:System.Windows.Media.Animation.ClockState.Active&gt;</ph>, <ph id="ph2">&lt;xref:System.Windows.Media.Animation.ClockState.Stopped&gt;</ph>, or <ph id="ph3">&lt;xref:System.Windows.Media.Animation.ClockState.Filling&gt;</ph>.</source>
        </trans-unit>
        <trans-unit id="117" translate="yes" xml:space="preserve" extradata="MT">
          <source>The only way to unpause a clock is by using the <ph id="ph1">&lt;xref:System.Windows.Media.Animation.ClockController.Resume%2A&gt;</ph> method.</source>
        </trans-unit>
        <trans-unit id="118" translate="yes" xml:space="preserve" extradata="MT">
          <source>Pausing a clock implicitly pauses its children.</source>
        </trans-unit>
        <trans-unit id="119" translate="yes" xml:space="preserve" extradata="MT">
          <source>Calling this method when the target clock is already paused has no effect.</source>
        </trans-unit>
        <trans-unit id="120" translate="yes" xml:space="preserve" extradata="MT">
          <source>Pausing a clock triggers the <ph id="ph1">&lt;xref:System.Windows.Media.Animation.Timeline.CurrentGlobalSpeedInvalidated&gt;</ph> event.</source>
        </trans-unit>
        <trans-unit id="121" translate="yes" xml:space="preserve">
          <source>Removes the <ph id="ph1">&lt;xref href="System.Windows.Media.Animation.Clock"&gt;&lt;/xref&gt;</ph> associated with this <ph id="ph2">&lt;xref href="System.Windows.Media.Animation.ClockController"&gt;&lt;/xref&gt;</ph> from the properties it animates.</source>
        </trans-unit>
        <trans-unit id="122" translate="yes" xml:space="preserve">
          <source>The clock and its child clocks will no longer affect these properties.</source>
        </trans-unit>
        <trans-unit id="123" translate="yes" xml:space="preserve" extradata="MT">
          <source>This method triggers the <ph id="ph1">&lt;xref:System.Windows.Media.Animation.Clock.RemoveRequested&gt;</ph> event.</source>
        </trans-unit>
        <trans-unit id="124" translate="yes" xml:space="preserve">
          <source>Enables a <ph id="ph1">&lt;xref href="System.Windows.Media.Animation.Clock"&gt;&lt;/xref&gt;</ph> that was previously paused to resume progressing.</source>
        </trans-unit>
        <trans-unit id="125" translate="yes" xml:space="preserve" extradata="MT">
          <source>You can pause or resume a <ph id="ph1">&lt;xref:System.Windows.Media.Animation.Clock&gt;</ph> regardless of its current state, and pausing or resuming a clock does not change its current state.</source>
        </trans-unit>
        <trans-unit id="126" translate="yes" xml:space="preserve" extradata="MT">
          <source>A clock can be paused while <ph id="ph1">&lt;xref:System.Windows.Media.Animation.ClockState.Active&gt;</ph>, <ph id="ph2">&lt;xref:System.Windows.Media.Animation.ClockState.Stopped&gt;</ph>, or <ph id="ph3">&lt;xref:System.Windows.Media.Animation.ClockState.Filling&gt;</ph>.</source>
        </trans-unit>
        <trans-unit id="127" translate="yes" xml:space="preserve" extradata="MT">
          <source>The only way to resume a paused clock is by using the <ph id="ph1">&lt;xref:System.Windows.Media.Animation.ClockController.Resume%2A&gt;</ph> method.</source>
        </trans-unit>
        <trans-unit id="128" translate="yes" xml:space="preserve" extradata="MT">
          <source>Resuming a clock implicitly resumes its children.</source>
        </trans-unit>
        <trans-unit id="129" translate="yes" xml:space="preserve" extradata="MT">
          <source>Calling this method on a clock that is not paused has no effect.</source>
        </trans-unit>
        <trans-unit id="130" translate="yes" xml:space="preserve" extradata="MT">
          <source>Resuming a paused clock triggers the <ph id="ph1">&lt;xref:System.Windows.Media.Animation.Timeline.CurrentGlobalSpeedInvalidated&gt;</ph> event.</source>
        </trans-unit>
        <trans-unit id="131" translate="yes" xml:space="preserve">
          <source>Seeks the target <ph id="ph1">&lt;xref href="System.Windows.Media.Animation.ClockController.Clock"&gt;&lt;/xref&gt;</ph> by the specified amount when the next tick occurs.</source>
        </trans-unit>
        <trans-unit id="132" translate="yes" xml:space="preserve">
          <source>If the target clock is stopped, seeking makes it active again.</source>
        </trans-unit>
        <trans-unit id="133" translate="yes" xml:space="preserve" extradata="MT">
          <source>Seek operations do not take the <ph id="ph1">&lt;xref:System.Windows.Media.Animation.Timeline.SpeedRatio%2A&gt;</ph> or <ph id="ph2">&lt;xref:System.Windows.Media.Animation.ParallelTimeline.SlipBehavior%2A&gt;</ph> settings of this clock's timeline into account: the clock is treated as though its timeline has a <ph id="ph3">&lt;xref:System.Windows.Media.Animation.Timeline.SpeedRatio%2A&gt;</ph> of 1 and no <ph id="ph4">&lt;xref:System.Windows.Media.Animation.ParallelTimeline.SlipBehavior%2A&gt;</ph>.</source>
        </trans-unit>
        <trans-unit id="134" translate="yes" xml:space="preserve" extradata="MT">
          <source>This method changes the clock's <ph id="ph1">&lt;xref:System.Windows.Media.Animation.Clock.CurrentState%2A&gt;</ph> to <ph id="ph2">&lt;xref:System.Windows.Media.Animation.ClockState.Active&gt;</ph>.</source>
        </trans-unit>
        <trans-unit id="135" translate="yes" xml:space="preserve" extradata="MT">
          <source>This method has no effect on the timing tree until the next time a tick is processed.</source>
        </trans-unit>
        <trans-unit id="136" translate="yes" xml:space="preserve" extradata="MT">
          <source>As a side-effect, the appropriate events also will not be raised until then.</source>
        </trans-unit>
        <trans-unit id="137" translate="yes" xml:space="preserve" extradata="MT">
          <source>Seeking a storyboard triggers the <ph id="ph1">&lt;xref:System.Windows.Media.Animation.Clock.CurrentGlobalSpeedInvalidated&gt;</ph> and <ph id="ph2">&lt;xref:System.Windows.Media.Animation.Clock.CurrentStateInvalidated&gt;</ph> events.</source>
        </trans-unit>
        <trans-unit id="138" translate="yes" xml:space="preserve" extradata="MT">
          <source>If the target clock has children, their current time is updated accordingly.</source>
        </trans-unit>
        <trans-unit id="139" translate="yes" xml:space="preserve">
          <source>The seek offset, measured in the target clock's time.</source>
        </trans-unit>
        <trans-unit id="140" translate="yes" xml:space="preserve">
          <source>This offset is relative to the clock's <ph id="ph1">&lt;xref href="System.Windows.Media.Animation.TimeSeekOrigin.BeginTime"&gt;&lt;/xref&gt;</ph> or <ph id="ph2">&lt;xref href="System.Windows.Media.Animation.TimeSeekOrigin.Duration"&gt;&lt;/xref&gt;</ph>, depending on the value of <bpt id="p1">&lt;code&gt;</bpt><ph id="ph3">origin</ph><ept id="p1">&lt;/code&gt;</ept>.</source>
        </trans-unit>
        <trans-unit id="141" translate="yes" xml:space="preserve">
          <source>A value that indicates whether the specified offset is relative to the target clock's <ph id="ph1">&lt;xref href="System.Windows.Media.Animation.TimeSeekOrigin.BeginTime"&gt;&lt;/xref&gt;</ph> or <ph id="ph2">&lt;xref href="System.Windows.Media.Animation.TimeSeekOrigin.Duration"&gt;&lt;/xref&gt;</ph>.</source>
        </trans-unit>
        <trans-unit id="142" translate="yes" xml:space="preserve">
          <source>Seeks the target <ph id="ph1">&lt;xref href="System.Windows.Media.Animation.Clock"&gt;&lt;/xref&gt;</ph> by the specified amount immediately.</source>
        </trans-unit>
        <trans-unit id="143" translate="yes" xml:space="preserve">
          <source>If the target clock is stopped, seeking makes it active again.</source>
        </trans-unit>
        <trans-unit id="144" translate="yes" xml:space="preserve" extradata="MT">
          <source>Seek operations do not take the <ph id="ph1">&lt;xref:System.Windows.Media.Animation.Timeline.SpeedRatio%2A&gt;</ph> or <ph id="ph2">&lt;xref:System.Windows.Media.Animation.ParallelTimeline.SlipBehavior%2A&gt;</ph> settings of this clock's timeline into account: the clock is treated as though its timeline has a <ph id="ph3">&lt;xref:System.Windows.Media.Animation.Timeline.SpeedRatio%2A&gt;</ph> of 1 and no <ph id="ph4">&lt;xref:System.Windows.Media.Animation.ParallelTimeline.SlipBehavior%2A&gt;</ph>.</source>
        </trans-unit>
        <trans-unit id="145" translate="yes" xml:space="preserve" extradata="MT">
          <source><ph id="ph1">&lt;xref:System.Windows.Media.Animation.ClockController.SeekAlignedToLastTick%2A&gt;</ph> aligns the seeked time of the clock with the last clock tick.</source>
        </trans-unit>
        <trans-unit id="146" translate="yes" xml:space="preserve" extradata="MT">
          <source>Values are immediately updated to reflect the changes due to <ph id="ph1">&lt;xref:System.Windows.Media.Animation.ClockController.SeekAlignedToLastTick%2A&gt;</ph>, even though the screen will not reflect these changes until the screen updates.</source>
        </trans-unit>
        <trans-unit id="147" translate="yes" xml:space="preserve" extradata="MT">
          <source>If the target clock has children, their current time is updated accordingly.</source>
        </trans-unit>
        <trans-unit id="148" translate="yes" xml:space="preserve" extradata="MT">
          <source>This method changes the clock's <ph id="ph1">&lt;xref:System.Windows.Media.Animation.Clock.CurrentState%2A&gt;</ph> to <ph id="ph2">&lt;xref:System.Windows.Media.Animation.ClockState.Active&gt;</ph>.</source>
        </trans-unit>
        <trans-unit id="149" translate="yes" xml:space="preserve" extradata="MT">
          <source>Seeking a storyboard triggers the <ph id="ph1">&lt;xref:System.Windows.Media.Animation.Clock.CurrentGlobalSpeedInvalidated&gt;</ph> and <ph id="ph2">&lt;xref:System.Windows.Media.Animation.Clock.CurrentStateInvalidated&gt;</ph> events.</source>
        </trans-unit>
        <trans-unit id="150" translate="yes" xml:space="preserve">
          <source>The seek offset, measured in the target clock's time.</source>
        </trans-unit>
        <trans-unit id="151" translate="yes" xml:space="preserve">
          <source>This offset is relative to the clock's <ph id="ph1">&lt;xref href="System.Windows.Media.Animation.TimeSeekOrigin.BeginTime"&gt;&lt;/xref&gt;</ph> or <ph id="ph2">&lt;xref href="System.Windows.Media.Animation.TimeSeekOrigin.Duration"&gt;&lt;/xref&gt;</ph>, depending on the value of <bpt id="p1">&lt;code&gt;</bpt><ph id="ph3">origin</ph><ept id="p1">&lt;/code&gt;</ept>.</source>
        </trans-unit>
        <trans-unit id="152" translate="yes" xml:space="preserve">
          <source>A value that indicates whether the specified offset is relative to the target clock's <ph id="ph1">&lt;xref href="System.Windows.Media.Animation.TimeSeekOrigin.BeginTime"&gt;&lt;/xref&gt;</ph> or <ph id="ph2">&lt;xref href="System.Windows.Media.Animation.TimeSeekOrigin.Duration"&gt;&lt;/xref&gt;</ph>.</source>
        </trans-unit>
        <trans-unit id="153" translate="yes" xml:space="preserve">
          <source>Advances the current time of the target <ph id="ph1">&lt;xref href="System.Windows.Media.Animation.Clock"&gt;&lt;/xref&gt;</ph> to the end of its active period.</source>
        </trans-unit>
        <trans-unit id="154" translate="yes" xml:space="preserve" extradata="MT">
          <source>This method advances the target clock's current time to the end of its active period; the clock's behavior at this point is specified by the <ph id="ph1">&lt;xref:System.Windows.Media.Animation.Timeline.FillBehavior%2A&gt;</ph> setting of its <ph id="ph2">&lt;xref:System.Windows.Media.Animation.Timeline&gt;</ph>.</source>
        </trans-unit>
        <trans-unit id="155" translate="yes" xml:space="preserve" extradata="MT">
          <source>If the timeline's <ph id="ph1">&lt;xref:System.Windows.Media.Animation.Timeline.FillBehavior%2A&gt;</ph> property is set to <ph id="ph2">&lt;xref:System.Windows.Media.Animation.FillBehavior.HoldEnd&gt;</ph>, the clock fills; if the property is set to <ph id="ph3">&lt;xref:System.Windows.Media.Animation.FillBehavior.Stop&gt;</ph>, the clock stops.</source>
        </trans-unit>
        <trans-unit id="156" translate="yes" xml:space="preserve" extradata="MT">
          <source>This method has an effect only if the target clock's <ph id="ph1">&lt;xref:System.Windows.Media.Animation.Clock.CurrentState%2A&gt;</ph> is <ph id="ph2">&lt;xref:System.Windows.Media.Animation.ClockState.Active&gt;</ph>.</source>
        </trans-unit>
        <trans-unit id="157" translate="yes" xml:space="preserve" extradata="MT">
          <source>This method has no effect on the timing tree until the next time a tick is processed.</source>
        </trans-unit>
        <trans-unit id="158" translate="yes" xml:space="preserve" extradata="MT">
          <source>As a side-effect, the appropriate events also will not be raised until then.</source>
        </trans-unit>
        <trans-unit id="159" translate="yes" xml:space="preserve" extradata="MT">
          <source>Advancing a storyboard to its fill period triggers the <ph id="ph1">&lt;xref:System.Windows.Media.Animation.Timeline.CurrentGlobalSpeedInvalidated&gt;</ph> and <ph id="ph2">&lt;xref:System.Windows.Media.Animation.Clock.CurrentStateInvalidated&gt;</ph> events.</source>
        </trans-unit>
        <trans-unit id="160" translate="yes" xml:space="preserve">
          <source>Gets or sets the interactive speed of the target <ph id="ph1">&lt;xref href="System.Windows.Media.Animation.Clock"&gt;&lt;/xref&gt;</ph>.</source>
        </trans-unit>
        <trans-unit id="161" translate="yes" xml:space="preserve" extradata="MT">
          <source>Setting this property has no effect until the next tick.</source>
        </trans-unit>
        <trans-unit id="162" translate="yes" xml:space="preserve" extradata="MT">
          <source>If you set this property and then get its value before the next tick occurs, you'll get the old value.</source>
        </trans-unit>
        <trans-unit id="163" translate="yes" xml:space="preserve" extradata="MT">
          <source>This property will return the new value after the next tick.</source>
        </trans-unit>
        <trans-unit id="164" translate="yes" xml:space="preserve" extradata="MT">
          <source>Setting this property does not change the value of the underlying timeline's <ph id="ph1">&lt;xref:System.Windows.Media.Animation.Timeline.SpeedRatio%2A&gt;</ph>.</source>
        </trans-unit>
        <trans-unit id="165" translate="yes" xml:space="preserve" extradata="MT">
          <source>Setting this property triggers the target clock's <ph id="ph1">&lt;xref:System.Windows.Media.Animation.Clock.CurrentGlobalSpeedInvalidated&gt;</ph> event.</source>
        </trans-unit>
        <trans-unit id="166" translate="yes" xml:space="preserve">
          <source>A finite value greater than zero that describes the interactive speed of the target clock.</source>
        </trans-unit>
        <trans-unit id="167" translate="yes" xml:space="preserve">
          <source>This value is multiplied against the value of the <ph id="ph1">&lt;xref href="System.Windows.Media.Animation.Timeline.SpeedRatio"&gt;&lt;/xref&gt;</ph> of the clock's <ph id="ph2">&lt;xref href="System.Windows.Media.Animation.Timeline"&gt;&lt;/xref&gt;</ph>.</source>
        </trans-unit>
        <trans-unit id="168" translate="yes" xml:space="preserve">
          <source>For example, if the timeline's <ph id="ph1">&lt;xref href="System.Windows.Media.Animation.Timeline.SpeedRatio"&gt;&lt;/xref&gt;</ph> is 0.5 and the <ph id="ph2">&lt;xref href="System.Windows.Media.Animation.ClockController"&gt;&lt;/xref&gt;</ph> object's <ph id="ph3">&lt;xref href="System.Windows.Media.Animation.ClockController.SpeedRatio"&gt;&lt;/xref&gt;</ph> is 3.0, the timeline moves at 1.5 times normal speed (0.5 * 3.0).</source>
        </trans-unit>
        <trans-unit id="169" translate="yes" xml:space="preserve">
          <source>The default value is 1.0.</source>
        </trans-unit>
        <trans-unit id="170" translate="yes" xml:space="preserve">
          <source>Stops the target <ph id="ph1">&lt;xref href="System.Windows.Media.Animation.Clock"&gt;&lt;/xref&gt;</ph>.</source>
        </trans-unit>
        <trans-unit id="171" translate="yes" xml:space="preserve" extradata="MT">
          <source>This method changes the target clock's <ph id="ph1">&lt;xref:System.Windows.Media.Animation.Clock.CurrentState%2A&gt;</ph> to <ph id="ph2">&lt;xref:System.Windows.Media.Animation.Clock.Stopped%2A&gt;</ph>.</source>
        </trans-unit>
        <trans-unit id="172" translate="yes" xml:space="preserve" extradata="MT">
          <source>A <ph id="ph1">&lt;xref:System.Windows.Media.Animation.Clock.Stopped%2A&gt;</ph> clock can be restarted by using the <ph id="ph2">&lt;xref:System.Windows.Media.Animation.ClockController.Begin%2A&gt;</ph>, <ph id="ph3">&lt;xref:System.Windows.Media.Animation.ClockController.Seek%2A&gt;</ph>, or <ph id="ph4">&lt;xref:System.Windows.Media.Animation.ClockController.SeekAlignedToLastTick%2A&gt;</ph> method.</source>
        </trans-unit>
        <trans-unit id="173" translate="yes" xml:space="preserve" extradata="MT">
          <source>This method has no effect on the timing tree until the next time a tick is processed.</source>
        </trans-unit>
        <trans-unit id="174" translate="yes" xml:space="preserve" extradata="MT">
          <source>As a side-effect, the appropriate events also will not be raised until then.</source>
        </trans-unit>
        <trans-unit id="175" translate="yes" xml:space="preserve" extradata="MT">
          <source>Stopping a clock triggers the <ph id="ph1">&lt;xref:System.Windows.Media.Animation.Timeline.CurrentGlobalSpeedInvalidated&gt;</ph> and <ph id="ph2">&lt;xref:System.Windows.Media.Animation.Clock.CurrentStateInvalidated&gt;</ph> events, but not the <ph id="ph3">&lt;xref:System.Windows.Media.Animation.Clock.Completed&gt;</ph> event.</source>
        </trans-unit>
      </group>
    </body>
  </file>
</xliff>