{"nodes":[{"content":"Identifies the calling convention used by a method described in a [METHODDATA](https://msdn.microsoft.com/library/85fd7121-3eed-4a83-9ba2-caa81fa1e048) structure.","nodes":[{"pos":[0,162],"content":"Identifies the calling convention used by a method described in a <bpt id=\"p1\">[</bpt>METHODDATA<ept id=\"p1\">](https://msdn.microsoft.com/library/85fd7121-3eed-4a83-9ba2-caa81fa1e048)</ept> structure.","source":"Identifies the calling convention used by a method described in a [METHODDATA](https://msdn.microsoft.com/library/85fd7121-3eed-4a83-9ba2-caa81fa1e048) structure."}],"pos":[1102,1265],"yaml":true},{"content":"The calling conventions in this class describe how functions pass arguments and return values. They specify the order in which parameters are set up for the called functions, where the parameters are stored (in registers or in memory), and who (caller or called function) is responsible for cleaning up the stack after the function returns. For example:  \n  \n-   CC_CDECL uses the naming and calling conventions of the C language. The caller pushes the parameters onto the stack in reverse (right-to-left) order, and cleans the stack after the function returns. This calling convention enables you to call functions with `varargs`, which makes it appropriate for use with methods that accept a variable number of parameters, such as the C run-time functions [printf, _printf_l, wprintf, _wprintf_l](https://docs.microsoft.com/cpp/c-runtime-library/reference/printf-printf-l-wprintf-wprintf-l).  \n  \n-   CC_PASCAL uses the Pascal calling convention. The caller pushes the parameters onto the stack in left-to-right order. The called function cleans the stack before returning.  \n  \n-   CC_STDCALL is the standard calling convention for Win32 functions. It is the default convention for calling unmanaged functions with platform invoke. The caller pushes the parameters onto the stack in reverse (right to left) order, and the called function cleans the stack before returning.  \n  \n-   CC_SYSCALL is similar to CDECL in that arguments are pushed from right to left. The EAX, ECX, and EDX registers are not preserved.  \n  \n These calling convention identifiers are used by the [!INCLUDE[dnprdnshort](~/includes/dnprdnshort-md.md)], the [!INCLUDE[wince](~/includes/wince-md.md)] platform, and by Automation.  \n  \n For additional information about <xref:System.Runtime.InteropServices.ComTypes.CALLCONV.CC_CDECL>, see the MSDN Library.  \n  \n The common language runtime throws an exception when a COM method in native code returns an HRESULT. For more information, see [How to: Map HRESULTs and Exceptions](~/docs/framework/interop/how-to-map-hresults-and-exceptions.md).","nodes":[{"pos":[0,353],"content":"The calling conventions in this class describe how functions pass arguments and return values. They specify the order in which parameters are set up for the called functions, where the parameters are stored (in registers or in memory), and who (caller or called function) is responsible for cleaning up the stack after the function returns. For example:","nodes":[{"content":"The calling conventions in this class describe how functions pass arguments and return values. They specify the order in which parameters are set up for the called functions, where the parameters are stored (in registers or in memory), and who (caller or called function) is responsible for cleaning up the stack after the function returns. For example:","pos":[0,353],"nodes":[{"content":"The calling conventions in this class describe how functions pass arguments and return values.","pos":[0,94]},{"content":"They specify the order in which parameters are set up for the called functions, where the parameters are stored (in registers or in memory), and who (caller or called function) is responsible for cleaning up the stack after the function returns.","pos":[95,340]},{"content":"For example:","pos":[341,353]}]}]},{"pos":[363,893],"content":"CC_CDECL uses the naming and calling conventions of the C language. The caller pushes the parameters onto the stack in reverse (right-to-left) order, and cleans the stack after the function returns. This calling convention enables you to call functions with `varargs`, which makes it appropriate for use with methods that accept a variable number of parameters, such as the C run-time functions [printf, _printf_l, wprintf, _wprintf_l](https://docs.microsoft.com/cpp/c-runtime-library/reference/printf-printf-l-wprintf-wprintf-l).","nodes":[{"content":"CC_CDECL uses the naming and calling conventions of the C language.","pos":[0,67]},{"content":"The caller pushes the parameters onto the stack in reverse (right-to-left) order, and cleans the stack after the function returns.","pos":[68,198]},{"content":"This calling convention enables you to call functions with <ph id=\"ph1\">`varargs`</ph>, which makes it appropriate for use with methods that accept a variable number of parameters, such as the C run-time functions <bpt id=\"p1\">[</bpt>printf, _printf_l, wprintf, _wprintf_l<ept id=\"p1\">](https://docs.microsoft.com/cpp/c-runtime-library/reference/printf-printf-l-wprintf-wprintf-l)</ept>.","pos":[199,530],"source":" This calling convention enables you to call functions with `varargs`, which makes it appropriate for use with methods that accept a variable number of parameters, such as the C run-time functions [printf, _printf_l, wprintf, _wprintf_l](https://docs.microsoft.com/cpp/c-runtime-library/reference/printf-printf-l-wprintf-wprintf-l)."}]},{"pos":[903,1075],"content":"CC_PASCAL uses the Pascal calling convention. The caller pushes the parameters onto the stack in left-to-right order. The called function cleans the stack before returning.","nodes":[{"content":"CC_PASCAL uses the Pascal calling convention. The caller pushes the parameters onto the stack in left-to-right order. The called function cleans the stack before returning.","pos":[0,172],"nodes":[{"content":"CC_PASCAL uses the Pascal calling convention.","pos":[0,45]},{"content":"The caller pushes the parameters onto the stack in left-to-right order.","pos":[46,117]},{"content":"The called function cleans the stack before returning.","pos":[118,172]}]}]},{"pos":[1085,1375],"content":"CC_STDCALL is the standard calling convention for Win32 functions. It is the default convention for calling unmanaged functions with platform invoke. The caller pushes the parameters onto the stack in reverse (right to left) order, and the called function cleans the stack before returning.","nodes":[{"content":"CC_STDCALL is the standard calling convention for Win32 functions. It is the default convention for calling unmanaged functions with platform invoke. The caller pushes the parameters onto the stack in reverse (right to left) order, and the called function cleans the stack before returning.","pos":[0,290],"nodes":[{"content":"CC_STDCALL is the standard calling convention for Win32 functions.","pos":[0,66]},{"content":"It is the default convention for calling unmanaged functions with platform invoke.","pos":[67,149]},{"content":"The caller pushes the parameters onto the stack in reverse (right to left) order, and the called function cleans the stack before returning.","pos":[150,290]}]}]},{"pos":[1385,1515],"content":"CC_SYSCALL is similar to CDECL in that arguments are pushed from right to left. The EAX, ECX, and EDX registers are not preserved.","nodes":[{"content":"CC_SYSCALL is similar to CDECL in that arguments are pushed from right to left. The EAX, ECX, and EDX registers are not preserved.","pos":[0,130],"nodes":[{"content":"CC_SYSCALL is similar to CDECL in that arguments are pushed from right to left.","pos":[0,79]},{"content":"The EAX, ECX, and EDX registers are not preserved.","pos":[80,130]}]}]},{"pos":[1522,1704],"content":"These calling convention identifiers are used by the <ph id=\"ph1\">[!INCLUDE[dnprdnshort](~/includes/dnprdnshort-md.md)]</ph>, the <ph id=\"ph2\">[!INCLUDE[wince](~/includes/wince-md.md)]</ph> platform, and by Automation.","source":"These calling convention identifiers are used by the [!INCLUDE[dnprdnshort](~/includes/dnprdnshort-md.md)], the [!INCLUDE[wince](~/includes/wince-md.md)] platform, and by Automation."},{"pos":[1711,1831],"content":"For additional information about <xref:System.Runtime.InteropServices.ComTypes.CALLCONV.CC_CDECL>, see the MSDN Library.","nodes":[{"content":"For additional information about <ph id=\"ph1\">&lt;xref:System.Runtime.InteropServices.ComTypes.CALLCONV.CC_CDECL&gt;</ph>, see the MSDN Library.","pos":[0,120],"source":"For additional information about <xref:System.Runtime.InteropServices.ComTypes.CALLCONV.CC_CDECL>, see the MSDN Library."}]},{"pos":[1838,2067],"content":"The common language runtime throws an exception when a COM method in native code returns an HRESULT. For more information, see [How to: Map HRESULTs and Exceptions](~/docs/framework/interop/how-to-map-hresults-and-exceptions.md).","nodes":[{"content":"The common language runtime throws an exception when a COM method in native code returns an HRESULT.","pos":[0,100]},{"content":"For more information, see <bpt id=\"p1\">[</bpt>How to: Map HRESULTs and Exceptions<ept id=\"p1\">](~/docs/framework/interop/how-to-map-hresults-and-exceptions.md)</ept>.","pos":[101,229],"source":" For more information, see [How to: Map HRESULTs and Exceptions](~/docs/framework/interop/how-to-map-hresults-and-exceptions.md)."}]}],"pos":[1276,3360],"yaml":true,"extradata":"MT"},{"content":"Indicates that the C declaration (CDECL) calling convention is used for a method.","nodes":[{"pos":[0,81],"content":"Indicates that the C declaration (CDECL) calling convention is used for a method.","nodes":[{"content":"Indicates that the C declaration (CDECL) calling convention is used for a method.","pos":[0,81]}]}],"pos":[4992,5074],"yaml":true},{"content":"Indicates that the Macintosh Pascal (MACPASCAL) calling convention is used for a method.","nodes":[{"pos":[0,88],"content":"Indicates that the Macintosh Pascal (MACPASCAL) calling convention is used for a method.","nodes":[{"content":"Indicates that the Macintosh Pascal (MACPASCAL) calling convention is used for a method.","pos":[0,88]}]}],"pos":[6663,6752],"yaml":true},{"content":"Indicates the end of the <xref href=\"System.Runtime.InteropServices.ComTypes.CALLCONV\"></xref> enumeration.","nodes":[{"pos":[0,107],"content":"Indicates the end of the <ph id=\"ph1\">&lt;xref href=\"System.Runtime.InteropServices.ComTypes.CALLCONV\"&gt;&lt;/xref&gt;</ph> enumeration.","source":"Indicates the end of the <xref href=\"System.Runtime.InteropServices.ComTypes.CALLCONV\"></xref> enumeration."}],"pos":[8309,8417],"yaml":true},{"content":"Indicates that the Macintosh Programmers' Workbench (MPW) CDECL calling convention is used for a method.","nodes":[{"pos":[0,104],"content":"Indicates that the Macintosh Programmers' Workbench (MPW) CDECL calling convention is used for a method.","nodes":[{"content":"Indicates that the Macintosh Programmers' Workbench (MPW) CDECL calling convention is used for a method.","pos":[0,104]}]}],"pos":[9998,10103],"yaml":true},{"content":"Indicates that the Macintosh Programmers' Workbench (MPW) PASCAL calling convention is used for a method.","nodes":[{"pos":[0,105],"content":"Indicates that the Macintosh Programmers' Workbench (MPW) PASCAL calling convention is used for a method.","nodes":[{"content":"Indicates that the Macintosh Programmers' Workbench (MPW) PASCAL calling convention is used for a method.","pos":[0,105]}]}],"pos":[11695,11801],"yaml":true},{"content":"Indicates that the MSC Pascal (MSCPASCAL) calling convention is used for a method.","nodes":[{"pos":[0,82],"content":"Indicates that the MSC Pascal (MSCPASCAL) calling convention is used for a method.","nodes":[{"content":"Indicates that the MSC Pascal (MSCPASCAL) calling convention is used for a method.","pos":[0,82]}]}],"pos":[13394,13477],"yaml":true},{"content":"Indicates that the Pascal calling convention is used for a method.","nodes":[{"pos":[0,66],"content":"Indicates that the Pascal calling convention is used for a method.","nodes":[{"content":"Indicates that the Pascal calling convention is used for a method.","pos":[0,66]}]}],"pos":[15052,15119],"yaml":true},{"content":"This value is reserved for future use.","nodes":[{"pos":[0,38],"content":"This value is reserved for future use.","nodes":[{"content":"This value is reserved for future use.","pos":[0,38]}]}],"pos":[16703,16742],"yaml":true},{"content":"Indicates that the standard calling convention (STDCALL) is used for a method.","nodes":[{"pos":[0,78],"content":"Indicates that the standard calling convention (STDCALL) is used for a method.","nodes":[{"content":"Indicates that the standard calling convention (STDCALL) is used for a method.","pos":[0,78]}]}],"pos":[18322,18401],"yaml":true},{"content":"Indicates that the standard SYSCALL calling convention is used for a method.","nodes":[{"pos":[0,76],"content":"Indicates that the standard SYSCALL calling convention is used for a method.","nodes":[{"content":"Indicates that the standard SYSCALL calling convention is used for a method.","pos":[0,76]}]}],"pos":[19980,20057],"yaml":true}],"content":"### YamlMime:ManagedReference\nitems:\n- uid: System.Runtime.InteropServices.ComTypes.CALLCONV\n  commentId: T:System.Runtime.InteropServices.ComTypes.CALLCONV\n  id: CALLCONV\n  children:\n  - System.Runtime.InteropServices.ComTypes.CALLCONV.CC_CDECL\n  - System.Runtime.InteropServices.ComTypes.CALLCONV.CC_MACPASCAL\n  - System.Runtime.InteropServices.ComTypes.CALLCONV.CC_MAX\n  - System.Runtime.InteropServices.ComTypes.CALLCONV.CC_MPWCDECL\n  - System.Runtime.InteropServices.ComTypes.CALLCONV.CC_MPWPASCAL\n  - System.Runtime.InteropServices.ComTypes.CALLCONV.CC_MSCPASCAL\n  - System.Runtime.InteropServices.ComTypes.CALLCONV.CC_PASCAL\n  - System.Runtime.InteropServices.ComTypes.CALLCONV.CC_RESERVED\n  - System.Runtime.InteropServices.ComTypes.CALLCONV.CC_STDCALL\n  - System.Runtime.InteropServices.ComTypes.CALLCONV.CC_SYSCALL\n  langs:\n  - csharp\n  name: CALLCONV\n  nameWithType: CALLCONV\n  fullName: System.Runtime.InteropServices.ComTypes.CALLCONV\n  type: Enum\n  assemblies:\n  - System.Runtime.InteropServices\n  - mscorlib\n  - netstandard\n  namespace: System.Runtime.InteropServices.ComTypes\n  summary: Identifies the calling convention used by a method described in a [METHODDATA](https://msdn.microsoft.com/library/85fd7121-3eed-4a83-9ba2-caa81fa1e048) structure.\n  remarks: \"The calling conventions in this class describe how functions pass arguments and return values. They specify the order in which parameters are set up for the called functions, where the parameters are stored (in registers or in memory), and who (caller or called function) is responsible for cleaning up the stack after the function returns. For example:  \\n  \\n-   CC_CDECL uses the naming and calling conventions of the C language. The caller pushes the parameters onto the stack in reverse (right-to-left) order, and cleans the stack after the function returns. This calling convention enables you to call functions with `varargs`, which makes it appropriate for use with methods that accept a variable number of parameters, such as the C run-time functions [printf, _printf_l, wprintf, _wprintf_l](https://docs.microsoft.com/cpp/c-runtime-library/reference/printf-printf-l-wprintf-wprintf-l).  \\n  \\n-   CC_PASCAL uses the Pascal calling convention. The caller pushes the parameters onto the stack in left-to-right order. The called function cleans the stack before returning.  \\n  \\n-   CC_STDCALL is the standard calling convention for Win32 functions. It is the default convention for calling unmanaged functions with platform invoke. The caller pushes the parameters onto the stack in reverse (right to left) order, and the called function cleans the stack before returning.  \\n  \\n-   CC_SYSCALL is similar to CDECL in that arguments are pushed from right to left. The EAX, ECX, and EDX registers are not preserved.  \\n  \\n These calling convention identifiers are used by the [!INCLUDE[dnprdnshort](~/includes/dnprdnshort-md.md)], the [!INCLUDE[wince](~/includes/wince-md.md)] platform, and by Automation.  \\n  \\n For additional information about <xref:System.Runtime.InteropServices.ComTypes.CALLCONV.CC_CDECL>, see the MSDN Library.  \\n  \\n The common language runtime throws an exception when a COM method in native code returns an HRESULT. For more information, see [How to: Map HRESULTs and Exceptions](~/docs/framework/interop/how-to-map-hresults-and-exceptions.md).\"\n  syntax:\n    content: public enum CALLCONV\n  inheritance:\n  - System.Object\n  - System.ValueType\n  - System.Enum\n  version:\n  - netcore-1.0\n  - netcore-1.1\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - netstandard-1.1\n  - netstandard-1.2\n  - netstandard-1.3\n  - netstandard-1.4\n  - netstandard-1.5\n  - netstandard-1.6\n  - netstandard-2.0\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  monikers:\n  - netcore-1.0\n  - netcore-1.1\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - netstandard-1.1\n  - netstandard-1.2\n  - netstandard-1.3\n  - netstandard-1.4\n  - netstandard-1.5\n  - netstandard-1.6\n  - netstandard-2.0\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Runtime.InteropServices.ComTypes/CALLCONV.xml\n  ms.technology:\n  - dotnet-standard\n  author: rpetrusha\n  ms.author: ronpet\n  manager: wpickett\n- uid: System.Runtime.InteropServices.ComTypes.CALLCONV.CC_CDECL\n  commentId: F:System.Runtime.InteropServices.ComTypes.CALLCONV.CC_CDECL\n  id: CC_CDECL\n  parent: System.Runtime.InteropServices.ComTypes.CALLCONV\n  langs:\n  - csharp\n  name: CC_CDECL\n  nameWithType: CALLCONV.CC_CDECL\n  fullName: CALLCONV.CC_CDECL\n  type: Field\n  assemblies:\n  - System.Runtime.InteropServices\n  - mscorlib\n  - netstandard\n  namespace: System.Runtime.InteropServices.ComTypes\n  summary: Indicates that the C declaration (CDECL) calling convention is used for a method.\n  syntax:\n    content: CC_CDECL\n    return:\n      type: System.Runtime.InteropServices.ComTypes.CALLCONV\n      description: ''\n  exceptions: []\n  version:\n  - netcore-1.0\n  - netcore-1.1\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - netstandard-1.1\n  - netstandard-1.2\n  - netstandard-1.3\n  - netstandard-1.4\n  - netstandard-1.5\n  - netstandard-1.6\n  - netstandard-2.0\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  monikers:\n  - netcore-1.0\n  - netcore-1.1\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - netstandard-1.1\n  - netstandard-1.2\n  - netstandard-1.3\n  - netstandard-1.4\n  - netstandard-1.5\n  - netstandard-1.6\n  - netstandard-2.0\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Runtime.InteropServices.ComTypes/CALLCONV.xml\n- uid: System.Runtime.InteropServices.ComTypes.CALLCONV.CC_MACPASCAL\n  commentId: F:System.Runtime.InteropServices.ComTypes.CALLCONV.CC_MACPASCAL\n  id: CC_MACPASCAL\n  parent: System.Runtime.InteropServices.ComTypes.CALLCONV\n  langs:\n  - csharp\n  name: CC_MACPASCAL\n  nameWithType: CALLCONV.CC_MACPASCAL\n  fullName: CALLCONV.CC_MACPASCAL\n  type: Field\n  assemblies:\n  - System.Runtime.InteropServices\n  - mscorlib\n  - netstandard\n  namespace: System.Runtime.InteropServices.ComTypes\n  summary: Indicates that the Macintosh Pascal (MACPASCAL) calling convention is used for a method.\n  syntax:\n    content: CC_MACPASCAL\n    return:\n      type: System.Runtime.InteropServices.ComTypes.CALLCONV\n      description: ''\n  exceptions: []\n  version:\n  - netcore-1.0\n  - netcore-1.1\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - netstandard-1.1\n  - netstandard-1.2\n  - netstandard-1.3\n  - netstandard-1.4\n  - netstandard-1.5\n  - netstandard-1.6\n  - netstandard-2.0\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  monikers:\n  - netcore-1.0\n  - netcore-1.1\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - netstandard-1.1\n  - netstandard-1.2\n  - netstandard-1.3\n  - netstandard-1.4\n  - netstandard-1.5\n  - netstandard-1.6\n  - netstandard-2.0\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Runtime.InteropServices.ComTypes/CALLCONV.xml\n- uid: System.Runtime.InteropServices.ComTypes.CALLCONV.CC_MAX\n  commentId: F:System.Runtime.InteropServices.ComTypes.CALLCONV.CC_MAX\n  id: CC_MAX\n  parent: System.Runtime.InteropServices.ComTypes.CALLCONV\n  langs:\n  - csharp\n  name: CC_MAX\n  nameWithType: CALLCONV.CC_MAX\n  fullName: CALLCONV.CC_MAX\n  type: Field\n  assemblies:\n  - System.Runtime.InteropServices\n  - mscorlib\n  - netstandard\n  namespace: System.Runtime.InteropServices.ComTypes\n  summary: Indicates the end of the <xref href=\"System.Runtime.InteropServices.ComTypes.CALLCONV\"></xref> enumeration.\n  syntax:\n    content: CC_MAX\n    return:\n      type: System.Runtime.InteropServices.ComTypes.CALLCONV\n      description: ''\n  exceptions: []\n  version:\n  - netcore-1.0\n  - netcore-1.1\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - netstandard-1.1\n  - netstandard-1.2\n  - netstandard-1.3\n  - netstandard-1.4\n  - netstandard-1.5\n  - netstandard-1.6\n  - netstandard-2.0\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  monikers:\n  - netcore-1.0\n  - netcore-1.1\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - netstandard-1.1\n  - netstandard-1.2\n  - netstandard-1.3\n  - netstandard-1.4\n  - netstandard-1.5\n  - netstandard-1.6\n  - netstandard-2.0\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Runtime.InteropServices.ComTypes/CALLCONV.xml\n- uid: System.Runtime.InteropServices.ComTypes.CALLCONV.CC_MPWCDECL\n  commentId: F:System.Runtime.InteropServices.ComTypes.CALLCONV.CC_MPWCDECL\n  id: CC_MPWCDECL\n  parent: System.Runtime.InteropServices.ComTypes.CALLCONV\n  langs:\n  - csharp\n  name: CC_MPWCDECL\n  nameWithType: CALLCONV.CC_MPWCDECL\n  fullName: CALLCONV.CC_MPWCDECL\n  type: Field\n  assemblies:\n  - System.Runtime.InteropServices\n  - mscorlib\n  - netstandard\n  namespace: System.Runtime.InteropServices.ComTypes\n  summary: Indicates that the Macintosh Programmers' Workbench (MPW) CDECL calling convention is used for a method.\n  syntax:\n    content: CC_MPWCDECL\n    return:\n      type: System.Runtime.InteropServices.ComTypes.CALLCONV\n      description: ''\n  exceptions: []\n  version:\n  - netcore-1.0\n  - netcore-1.1\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - netstandard-1.1\n  - netstandard-1.2\n  - netstandard-1.3\n  - netstandard-1.4\n  - netstandard-1.5\n  - netstandard-1.6\n  - netstandard-2.0\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  monikers:\n  - netcore-1.0\n  - netcore-1.1\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - netstandard-1.1\n  - netstandard-1.2\n  - netstandard-1.3\n  - netstandard-1.4\n  - netstandard-1.5\n  - netstandard-1.6\n  - netstandard-2.0\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Runtime.InteropServices.ComTypes/CALLCONV.xml\n- uid: System.Runtime.InteropServices.ComTypes.CALLCONV.CC_MPWPASCAL\n  commentId: F:System.Runtime.InteropServices.ComTypes.CALLCONV.CC_MPWPASCAL\n  id: CC_MPWPASCAL\n  parent: System.Runtime.InteropServices.ComTypes.CALLCONV\n  langs:\n  - csharp\n  name: CC_MPWPASCAL\n  nameWithType: CALLCONV.CC_MPWPASCAL\n  fullName: CALLCONV.CC_MPWPASCAL\n  type: Field\n  assemblies:\n  - System.Runtime.InteropServices\n  - mscorlib\n  - netstandard\n  namespace: System.Runtime.InteropServices.ComTypes\n  summary: Indicates that the Macintosh Programmers' Workbench (MPW) PASCAL calling convention is used for a method.\n  syntax:\n    content: CC_MPWPASCAL\n    return:\n      type: System.Runtime.InteropServices.ComTypes.CALLCONV\n      description: ''\n  exceptions: []\n  version:\n  - netcore-1.0\n  - netcore-1.1\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - netstandard-1.1\n  - netstandard-1.2\n  - netstandard-1.3\n  - netstandard-1.4\n  - netstandard-1.5\n  - netstandard-1.6\n  - netstandard-2.0\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  monikers:\n  - netcore-1.0\n  - netcore-1.1\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - netstandard-1.1\n  - netstandard-1.2\n  - netstandard-1.3\n  - netstandard-1.4\n  - netstandard-1.5\n  - netstandard-1.6\n  - netstandard-2.0\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Runtime.InteropServices.ComTypes/CALLCONV.xml\n- uid: System.Runtime.InteropServices.ComTypes.CALLCONV.CC_MSCPASCAL\n  commentId: F:System.Runtime.InteropServices.ComTypes.CALLCONV.CC_MSCPASCAL\n  id: CC_MSCPASCAL\n  parent: System.Runtime.InteropServices.ComTypes.CALLCONV\n  langs:\n  - csharp\n  name: CC_MSCPASCAL\n  nameWithType: CALLCONV.CC_MSCPASCAL\n  fullName: CALLCONV.CC_MSCPASCAL\n  type: Field\n  assemblies:\n  - System.Runtime.InteropServices\n  - mscorlib\n  - netstandard\n  namespace: System.Runtime.InteropServices.ComTypes\n  summary: Indicates that the MSC Pascal (MSCPASCAL) calling convention is used for a method.\n  syntax:\n    content: CC_MSCPASCAL\n    return:\n      type: System.Runtime.InteropServices.ComTypes.CALLCONV\n      description: ''\n  exceptions: []\n  version:\n  - netcore-1.0\n  - netcore-1.1\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - netstandard-1.1\n  - netstandard-1.2\n  - netstandard-1.3\n  - netstandard-1.4\n  - netstandard-1.5\n  - netstandard-1.6\n  - netstandard-2.0\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  monikers:\n  - netcore-1.0\n  - netcore-1.1\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - netstandard-1.1\n  - netstandard-1.2\n  - netstandard-1.3\n  - netstandard-1.4\n  - netstandard-1.5\n  - netstandard-1.6\n  - netstandard-2.0\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Runtime.InteropServices.ComTypes/CALLCONV.xml\n- uid: System.Runtime.InteropServices.ComTypes.CALLCONV.CC_PASCAL\n  commentId: F:System.Runtime.InteropServices.ComTypes.CALLCONV.CC_PASCAL\n  id: CC_PASCAL\n  parent: System.Runtime.InteropServices.ComTypes.CALLCONV\n  langs:\n  - csharp\n  name: CC_PASCAL\n  nameWithType: CALLCONV.CC_PASCAL\n  fullName: CALLCONV.CC_PASCAL\n  type: Field\n  assemblies:\n  - System.Runtime.InteropServices\n  - mscorlib\n  - netstandard\n  namespace: System.Runtime.InteropServices.ComTypes\n  summary: Indicates that the Pascal calling convention is used for a method.\n  syntax:\n    content: CC_PASCAL\n    return:\n      type: System.Runtime.InteropServices.ComTypes.CALLCONV\n      description: ''\n  exceptions: []\n  version:\n  - netcore-1.0\n  - netcore-1.1\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - netstandard-1.1\n  - netstandard-1.2\n  - netstandard-1.3\n  - netstandard-1.4\n  - netstandard-1.5\n  - netstandard-1.6\n  - netstandard-2.0\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  monikers:\n  - netcore-1.0\n  - netcore-1.1\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - netstandard-1.1\n  - netstandard-1.2\n  - netstandard-1.3\n  - netstandard-1.4\n  - netstandard-1.5\n  - netstandard-1.6\n  - netstandard-2.0\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Runtime.InteropServices.ComTypes/CALLCONV.xml\n- uid: System.Runtime.InteropServices.ComTypes.CALLCONV.CC_RESERVED\n  commentId: F:System.Runtime.InteropServices.ComTypes.CALLCONV.CC_RESERVED\n  id: CC_RESERVED\n  parent: System.Runtime.InteropServices.ComTypes.CALLCONV\n  langs:\n  - csharp\n  name: CC_RESERVED\n  nameWithType: CALLCONV.CC_RESERVED\n  fullName: CALLCONV.CC_RESERVED\n  type: Field\n  assemblies:\n  - System.Runtime.InteropServices\n  - mscorlib\n  - netstandard\n  namespace: System.Runtime.InteropServices.ComTypes\n  summary: This value is reserved for future use.\n  syntax:\n    content: CC_RESERVED\n    return:\n      type: System.Runtime.InteropServices.ComTypes.CALLCONV\n      description: ''\n  exceptions: []\n  version:\n  - netcore-1.0\n  - netcore-1.1\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - netstandard-1.1\n  - netstandard-1.2\n  - netstandard-1.3\n  - netstandard-1.4\n  - netstandard-1.5\n  - netstandard-1.6\n  - netstandard-2.0\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  monikers:\n  - netcore-1.0\n  - netcore-1.1\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - netstandard-1.1\n  - netstandard-1.2\n  - netstandard-1.3\n  - netstandard-1.4\n  - netstandard-1.5\n  - netstandard-1.6\n  - netstandard-2.0\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Runtime.InteropServices.ComTypes/CALLCONV.xml\n- uid: System.Runtime.InteropServices.ComTypes.CALLCONV.CC_STDCALL\n  commentId: F:System.Runtime.InteropServices.ComTypes.CALLCONV.CC_STDCALL\n  id: CC_STDCALL\n  parent: System.Runtime.InteropServices.ComTypes.CALLCONV\n  langs:\n  - csharp\n  name: CC_STDCALL\n  nameWithType: CALLCONV.CC_STDCALL\n  fullName: CALLCONV.CC_STDCALL\n  type: Field\n  assemblies:\n  - System.Runtime.InteropServices\n  - mscorlib\n  - netstandard\n  namespace: System.Runtime.InteropServices.ComTypes\n  summary: Indicates that the standard calling convention (STDCALL) is used for a method.\n  syntax:\n    content: CC_STDCALL\n    return:\n      type: System.Runtime.InteropServices.ComTypes.CALLCONV\n      description: ''\n  exceptions: []\n  version:\n  - netcore-1.0\n  - netcore-1.1\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - netstandard-1.1\n  - netstandard-1.2\n  - netstandard-1.3\n  - netstandard-1.4\n  - netstandard-1.5\n  - netstandard-1.6\n  - netstandard-2.0\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  monikers:\n  - netcore-1.0\n  - netcore-1.1\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - netstandard-1.1\n  - netstandard-1.2\n  - netstandard-1.3\n  - netstandard-1.4\n  - netstandard-1.5\n  - netstandard-1.6\n  - netstandard-2.0\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Runtime.InteropServices.ComTypes/CALLCONV.xml\n- uid: System.Runtime.InteropServices.ComTypes.CALLCONV.CC_SYSCALL\n  commentId: F:System.Runtime.InteropServices.ComTypes.CALLCONV.CC_SYSCALL\n  id: CC_SYSCALL\n  parent: System.Runtime.InteropServices.ComTypes.CALLCONV\n  langs:\n  - csharp\n  name: CC_SYSCALL\n  nameWithType: CALLCONV.CC_SYSCALL\n  fullName: CALLCONV.CC_SYSCALL\n  type: Field\n  assemblies:\n  - System.Runtime.InteropServices\n  - mscorlib\n  - netstandard\n  namespace: System.Runtime.InteropServices.ComTypes\n  summary: Indicates that the standard SYSCALL calling convention is used for a method.\n  syntax:\n    content: CC_SYSCALL\n    return:\n      type: System.Runtime.InteropServices.ComTypes.CALLCONV\n      description: ''\n  exceptions: []\n  version:\n  - netcore-1.0\n  - netcore-1.1\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - netstandard-1.1\n  - netstandard-1.2\n  - netstandard-1.3\n  - netstandard-1.4\n  - netstandard-1.5\n  - netstandard-1.6\n  - netstandard-2.0\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  monikers:\n  - netcore-1.0\n  - netcore-1.1\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - netstandard-1.1\n  - netstandard-1.2\n  - netstandard-1.3\n  - netstandard-1.4\n  - netstandard-1.5\n  - netstandard-1.6\n  - netstandard-2.0\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Runtime.InteropServices.ComTypes/CALLCONV.xml\nreferences:\n- uid: System.Enum\n  parent: System\n  isExternal: false\n  name: Enum\n  nameWithType: Enum\n  fullName: System.Enum\n- uid: System.Runtime.InteropServices.ComTypes.CALLCONV.CC_CDECL\n  parent: System.Runtime.InteropServices.ComTypes.CALLCONV\n  isExternal: false\n  name: CC_CDECL\n  nameWithType: CALLCONV.CC_CDECL\n  fullName: CALLCONV.CC_CDECL\n- uid: System.Runtime.InteropServices.ComTypes.CALLCONV\n  parent: System.Runtime.InteropServices.ComTypes\n  isExternal: false\n  name: CALLCONV\n  nameWithType: CALLCONV\n  fullName: System.Runtime.InteropServices.ComTypes.CALLCONV\n- uid: System.Runtime.InteropServices.ComTypes.CALLCONV.CC_MACPASCAL\n  parent: System.Runtime.InteropServices.ComTypes.CALLCONV\n  isExternal: false\n  name: CC_MACPASCAL\n  nameWithType: CALLCONV.CC_MACPASCAL\n  fullName: CALLCONV.CC_MACPASCAL\n- uid: System.Runtime.InteropServices.ComTypes.CALLCONV.CC_MAX\n  parent: System.Runtime.InteropServices.ComTypes.CALLCONV\n  isExternal: false\n  name: CC_MAX\n  nameWithType: CALLCONV.CC_MAX\n  fullName: CALLCONV.CC_MAX\n- uid: System.Runtime.InteropServices.ComTypes.CALLCONV.CC_MPWCDECL\n  parent: System.Runtime.InteropServices.ComTypes.CALLCONV\n  isExternal: false\n  name: CC_MPWCDECL\n  nameWithType: CALLCONV.CC_MPWCDECL\n  fullName: CALLCONV.CC_MPWCDECL\n- uid: System.Runtime.InteropServices.ComTypes.CALLCONV.CC_MPWPASCAL\n  parent: System.Runtime.InteropServices.ComTypes.CALLCONV\n  isExternal: false\n  name: CC_MPWPASCAL\n  nameWithType: CALLCONV.CC_MPWPASCAL\n  fullName: CALLCONV.CC_MPWPASCAL\n- uid: System.Runtime.InteropServices.ComTypes.CALLCONV.CC_MSCPASCAL\n  parent: System.Runtime.InteropServices.ComTypes.CALLCONV\n  isExternal: false\n  name: CC_MSCPASCAL\n  nameWithType: CALLCONV.CC_MSCPASCAL\n  fullName: CALLCONV.CC_MSCPASCAL\n- uid: System.Runtime.InteropServices.ComTypes.CALLCONV.CC_PASCAL\n  parent: System.Runtime.InteropServices.ComTypes.CALLCONV\n  isExternal: false\n  name: CC_PASCAL\n  nameWithType: CALLCONV.CC_PASCAL\n  fullName: CALLCONV.CC_PASCAL\n- uid: System.Runtime.InteropServices.ComTypes.CALLCONV.CC_RESERVED\n  parent: System.Runtime.InteropServices.ComTypes.CALLCONV\n  isExternal: false\n  name: CC_RESERVED\n  nameWithType: CALLCONV.CC_RESERVED\n  fullName: CALLCONV.CC_RESERVED\n- uid: System.Runtime.InteropServices.ComTypes.CALLCONV.CC_STDCALL\n  parent: System.Runtime.InteropServices.ComTypes.CALLCONV\n  isExternal: false\n  name: CC_STDCALL\n  nameWithType: CALLCONV.CC_STDCALL\n  fullName: CALLCONV.CC_STDCALL\n- uid: System.Runtime.InteropServices.ComTypes.CALLCONV.CC_SYSCALL\n  parent: System.Runtime.InteropServices.ComTypes.CALLCONV\n  isExternal: false\n  name: CC_SYSCALL\n  nameWithType: CALLCONV.CC_SYSCALL\n  fullName: CALLCONV.CC_SYSCALL\n"}