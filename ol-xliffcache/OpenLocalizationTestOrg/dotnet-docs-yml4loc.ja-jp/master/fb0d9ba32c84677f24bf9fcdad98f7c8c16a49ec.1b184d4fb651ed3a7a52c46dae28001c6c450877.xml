{"nodes":[{"content":"Represents a data view on a node or collection of nodes in a hierarchical data structure for a <xref href=\"System.Web.UI.HierarchicalDataSourceControl\"></xref> control.","nodes":[{"pos":[0,168],"content":"Represents a data view on a node or collection of nodes in a hierarchical data structure for a <ph id=\"ph1\">&lt;xref href=\"System.Web.UI.HierarchicalDataSourceControl\"&gt;&lt;/xref&gt;</ph> control.","source":"Represents a data view on a node or collection of nodes in a hierarchical data structure for a <xref href=\"System.Web.UI.HierarchicalDataSourceControl\"></xref> control."}],"pos":[520,689],"yaml":true},{"content":"ASP.NET supports a data-binding architecture that enables Web server controls to bind to data and present it in a consistent fashion. Web server controls that bind to data are called data-bound controls, and the classes that facilitate that binding are called data source controls. Data source controls can represent any data source: a file, a stream, a relational database, a business object, and so on. Data source controls present data in a consistent way to data-bound controls, regardless of the source or format of the underlying data.  \n  \n Data source controls that represent hierarchical data derive from the abstract <xref:System.Web.UI.HierarchicalDataSourceControl> class. You can think of a data source control as the combination of the data source control object and its associated views on the underlying data, which are represented by data source view objects. Hierarchical data source controls support a hierarchical data source view for each hierarchical level of data they represent. The data source views are not named, like the <xref:System.Web.UI.DataSourceView> objects associated with a <xref:System.Web.UI.DataSourceControl> control, but are identified by their unique hierarchical path.  \n  \n Data source views define the capabilities of a data source control. All data source view objects, including <xref:System.Web.UI.HierarchicalDataSourceView>, support data retrieval from the underlying data source using the <xref:System.Web.UI.HierarchicalDataSourceView.Select%2A> method, which retrieves a hierarchical list of data as an <xref:System.Web.UI.IHierarchicalEnumerable> object. All data source view objects optionally support a basic set of capabilities, including operations such as <xref:System.Web.UI.DataSourceView.Insert%2A>, <xref:System.Web.UI.DataSourceView.Update%2A>, <xref:System.Web.UI.DataSourceView.Delete%2A>, and sorting. A data-bound control can discover the capabilities of a data source control by retrieving an associated data source view using the <xref:System.Web.UI.HierarchicalDataSourceControl.GetHierarchicalView%2A> method and querying the view at design time or at run time. <xref:System.Web.UI.HierarchicalDataSourceView> does not currently support <xref:System.Web.UI.DataSourceView.Insert%2A>, <xref:System.Web.UI.DataSourceView.Update%2A> or <xref:System.Web.UI.DataSourceView.Delete%2A> operations.","nodes":[{"pos":[0,541],"content":"ASP.NET supports a data-binding architecture that enables Web server controls to bind to data and present it in a consistent fashion. Web server controls that bind to data are called data-bound controls, and the classes that facilitate that binding are called data source controls. Data source controls can represent any data source: a file, a stream, a relational database, a business object, and so on. Data source controls present data in a consistent way to data-bound controls, regardless of the source or format of the underlying data.","nodes":[{"content":"ASP.NET supports a data-binding architecture that enables Web server controls to bind to data and present it in a consistent fashion. Web server controls that bind to data are called data-bound controls, and the classes that facilitate that binding are called data source controls. Data source controls can represent any data source: a file, a stream, a relational database, a business object, and so on. Data source controls present data in a consistent way to data-bound controls, regardless of the source or format of the underlying data.","pos":[0,541],"nodes":[{"content":"ASP.NET supports a data-binding architecture that enables Web server controls to bind to data and present it in a consistent fashion.","pos":[0,133]},{"content":"Web server controls that bind to data are called data-bound controls, and the classes that facilitate that binding are called data source controls.","pos":[134,281]},{"content":"Data source controls can represent any data source: a file, a stream, a relational database, a business object, and so on.","pos":[282,404]},{"content":"Data source controls present data in a consistent way to data-bound controls, regardless of the source or format of the underlying data.","pos":[405,541]}]}]},{"pos":[548,1212],"content":"Data source controls that represent hierarchical data derive from the abstract <xref:System.Web.UI.HierarchicalDataSourceControl> class. You can think of a data source control as the combination of the data source control object and its associated views on the underlying data, which are represented by data source view objects. Hierarchical data source controls support a hierarchical data source view for each hierarchical level of data they represent. The data source views are not named, like the <xref:System.Web.UI.DataSourceView> objects associated with a <xref:System.Web.UI.DataSourceControl> control, but are identified by their unique hierarchical path.","nodes":[{"content":"Data source controls that represent hierarchical data derive from the abstract <xref:System.Web.UI.HierarchicalDataSourceControl> class. You can think of a data source control as the combination of the data source control object and its associated views on the underlying data, which are represented by data source view objects. Hierarchical data source controls support a hierarchical data source view for each hierarchical level of data they represent. The data source views are not named, like the <xref:System.Web.UI.DataSourceView> objects associated with a <xref:System.Web.UI.DataSourceControl> control, but are identified by their unique hierarchical path.","pos":[0,664],"nodes":[{"content":"Data source controls that represent hierarchical data derive from the abstract <ph id=\"ph1\">&lt;xref:System.Web.UI.HierarchicalDataSourceControl&gt;</ph> class.","pos":[0,136],"source":"Data source controls that represent hierarchical data derive from the abstract <xref:System.Web.UI.HierarchicalDataSourceControl> class."},{"content":"You can think of a data source control as the combination of the data source control object and its associated views on the underlying data, which are represented by data source view objects.","pos":[137,328]},{"content":"Hierarchical data source controls support a hierarchical data source view for each hierarchical level of data they represent.","pos":[329,454]},{"content":"The data source views are not named, like the <ph id=\"ph1\">&lt;xref:System.Web.UI.DataSourceView&gt;</ph> objects associated with a <ph id=\"ph2\">&lt;xref:System.Web.UI.DataSourceControl&gt;</ph> control, but are identified by their unique hierarchical path.","pos":[455,664],"source":" The data source views are not named, like the <xref:System.Web.UI.DataSourceView> objects associated with a <xref:System.Web.UI.DataSourceControl> control, but are identified by their unique hierarchical path."}]}]},{"pos":[1219,2363],"content":"Data source views define the capabilities of a data source control. All data source view objects, including <xref:System.Web.UI.HierarchicalDataSourceView>, support data retrieval from the underlying data source using the <xref:System.Web.UI.HierarchicalDataSourceView.Select%2A> method, which retrieves a hierarchical list of data as an <xref:System.Web.UI.IHierarchicalEnumerable> object. All data source view objects optionally support a basic set of capabilities, including operations such as <xref:System.Web.UI.DataSourceView.Insert%2A>, <xref:System.Web.UI.DataSourceView.Update%2A>, <xref:System.Web.UI.DataSourceView.Delete%2A>, and sorting. A data-bound control can discover the capabilities of a data source control by retrieving an associated data source view using the <xref:System.Web.UI.HierarchicalDataSourceControl.GetHierarchicalView%2A> method and querying the view at design time or at run time. <xref:System.Web.UI.HierarchicalDataSourceView> does not currently support <xref:System.Web.UI.DataSourceView.Insert%2A>, <xref:System.Web.UI.DataSourceView.Update%2A> or <xref:System.Web.UI.DataSourceView.Delete%2A> operations.","nodes":[{"content":"Data source views define the capabilities of a data source control. All data source view objects, including <xref:System.Web.UI.HierarchicalDataSourceView>, support data retrieval from the underlying data source using the <xref:System.Web.UI.HierarchicalDataSourceView.Select%2A> method, which retrieves a hierarchical list of data as an <xref:System.Web.UI.IHierarchicalEnumerable> object. All data source view objects optionally support a basic set of capabilities, including operations such as <xref:System.Web.UI.DataSourceView.Insert%2A>, <xref:System.Web.UI.DataSourceView.Update%2A>, <xref:System.Web.UI.DataSourceView.Delete%2A>, and sorting. A data-bound control can discover the capabilities of a data source control by retrieving an associated data source view using the <xref:System.Web.UI.HierarchicalDataSourceControl.GetHierarchicalView%2A> method and querying the view at design time or at run time. <xref:System.Web.UI.HierarchicalDataSourceView> does not currently support <xref:System.Web.UI.DataSourceView.Insert%2A>, <xref:System.Web.UI.DataSourceView.Update%2A> or <xref:System.Web.UI.DataSourceView.Delete%2A> operations.","pos":[0,1144],"nodes":[{"content":"Data source views define the capabilities of a data source control.","pos":[0,67]},{"content":"All data source view objects, including <ph id=\"ph1\">&lt;xref:System.Web.UI.HierarchicalDataSourceView&gt;</ph>, support data retrieval from the underlying data source using the <ph id=\"ph2\">&lt;xref:System.Web.UI.HierarchicalDataSourceView.Select%2A&gt;</ph> method, which retrieves a hierarchical list of data as an <ph id=\"ph3\">&lt;xref:System.Web.UI.IHierarchicalEnumerable&gt;</ph> object.","pos":[68,390],"source":" All data source view objects, including <xref:System.Web.UI.HierarchicalDataSourceView>, support data retrieval from the underlying data source using the <xref:System.Web.UI.HierarchicalDataSourceView.Select%2A> method, which retrieves a hierarchical list of data as an <xref:System.Web.UI.IHierarchicalEnumerable> object."},{"content":"All data source view objects optionally support a basic set of capabilities, including operations such as <ph id=\"ph1\">&lt;xref:System.Web.UI.DataSourceView.Insert%2A&gt;</ph>, <ph id=\"ph2\">&lt;xref:System.Web.UI.DataSourceView.Update%2A&gt;</ph>, <ph id=\"ph3\">&lt;xref:System.Web.UI.DataSourceView.Delete%2A&gt;</ph>, and sorting.","pos":[391,650],"source":" All data source view objects optionally support a basic set of capabilities, including operations such as <xref:System.Web.UI.DataSourceView.Insert%2A>, <xref:System.Web.UI.DataSourceView.Update%2A>, <xref:System.Web.UI.DataSourceView.Delete%2A>, and sorting."},{"content":"A data-bound control can discover the capabilities of a data source control by retrieving an associated data source view using the <ph id=\"ph1\">&lt;xref:System.Web.UI.HierarchicalDataSourceControl.GetHierarchicalView%2A&gt;</ph> method and querying the view at design time or at run time.","pos":[651,915],"source":" A data-bound control can discover the capabilities of a data source control by retrieving an associated data source view using the <xref:System.Web.UI.HierarchicalDataSourceControl.GetHierarchicalView%2A> method and querying the view at design time or at run time."},{"content":"<ph id=\"ph1\">&lt;xref:System.Web.UI.HierarchicalDataSourceView&gt;</ph> does not currently support <ph id=\"ph2\">&lt;xref:System.Web.UI.DataSourceView.Insert%2A&gt;</ph>, <ph id=\"ph3\">&lt;xref:System.Web.UI.DataSourceView.Update%2A&gt;</ph> or <ph id=\"ph4\">&lt;xref:System.Web.UI.DataSourceView.Delete%2A&gt;</ph> operations.","pos":[916,1144],"source":" <xref:System.Web.UI.HierarchicalDataSourceView> does not currently support <xref:System.Web.UI.DataSourceView.Insert%2A>, <xref:System.Web.UI.DataSourceView.Update%2A> or <xref:System.Web.UI.DataSourceView.Delete%2A> operations."}]}]}],"pos":[700,3070],"yaml":true,"extradata":"MT"},{"content":"Initializes a new instance of the <xref href=\"System.Web.UI.HierarchicalDataSourceView\"></xref> class.","nodes":[{"pos":[0,102],"content":"Initializes a new instance of the <ph id=\"ph1\">&lt;xref href=\"System.Web.UI.HierarchicalDataSourceView\"&gt;&lt;/xref&gt;</ph> class.","source":"Initializes a new instance of the <xref href=\"System.Web.UI.HierarchicalDataSourceView\"></xref> class."}],"pos":[6017,6120],"yaml":true},{"content":"Gets a list of all the data items in the view.","nodes":[{"pos":[0,46],"content":"Gets a list of all the data items in the view.","nodes":[{"content":"Gets a list of all the data items in the view.","pos":[0,46]}]}],"pos":[7202,7249],"yaml":true},{"content":"The <xref:System.Web.UI.HierarchicalDataSourceView.Select%2A> method returns an <xref:System.Web.UI.IHierarchicalEnumerable> collection of data items in the current view. You can call the <xref:System.Collections.IEnumerable.GetEnumerator%2A> method to get an <xref:System.Collections.IEnumerator> object and iterate through the collection of data items.","nodes":[{"pos":[0,354],"content":"The <xref:System.Web.UI.HierarchicalDataSourceView.Select%2A> method returns an <xref:System.Web.UI.IHierarchicalEnumerable> collection of data items in the current view. You can call the <xref:System.Collections.IEnumerable.GetEnumerator%2A> method to get an <xref:System.Collections.IEnumerator> object and iterate through the collection of data items.","nodes":[{"content":"The <xref:System.Web.UI.HierarchicalDataSourceView.Select%2A> method returns an <xref:System.Web.UI.IHierarchicalEnumerable> collection of data items in the current view. You can call the <xref:System.Collections.IEnumerable.GetEnumerator%2A> method to get an <xref:System.Collections.IEnumerator> object and iterate through the collection of data items.","pos":[0,354],"nodes":[{"content":"The <ph id=\"ph1\">&lt;xref:System.Web.UI.HierarchicalDataSourceView.Select%2A&gt;</ph> method returns an <ph id=\"ph2\">&lt;xref:System.Web.UI.IHierarchicalEnumerable&gt;</ph> collection of data items in the current view.","pos":[0,170],"source":"The <xref:System.Web.UI.HierarchicalDataSourceView.Select%2A> method returns an <xref:System.Web.UI.IHierarchicalEnumerable> collection of data items in the current view."},{"content":"You can call the <ph id=\"ph1\">&lt;xref:System.Collections.IEnumerable.GetEnumerator%2A&gt;</ph> method to get an <ph id=\"ph2\">&lt;xref:System.Collections.IEnumerator&gt;</ph> object and iterate through the collection of data items.","pos":[171,354],"source":" You can call the <xref:System.Collections.IEnumerable.GetEnumerator%2A> method to get an <xref:System.Collections.IEnumerator> object and iterate through the collection of data items."}]}]}],"pos":[7260,7615],"yaml":true,"extradata":"MT"},{"content":"An <xref href=\"System.Web.UI.IHierarchicalEnumerable\"></xref> collection of data items.","nodes":[{"pos":[0,87],"content":"An <ph id=\"ph1\">&lt;xref href=\"System.Web.UI.IHierarchicalEnumerable\"&gt;&lt;/xref&gt;</ph> collection of data items.","source":"An <xref href=\"System.Web.UI.IHierarchicalEnumerable\"></xref> collection of data items."}],"pos":[9014,9102],"yaml":true}],"content":"### YamlMime:ManagedReference\nitems:\n- uid: System.Web.UI.HierarchicalDataSourceView\n  commentId: T:System.Web.UI.HierarchicalDataSourceView\n  id: HierarchicalDataSourceView\n  children:\n  - System.Web.UI.HierarchicalDataSourceView.#ctor\n  - System.Web.UI.HierarchicalDataSourceView.Select\n  langs:\n  - csharp\n  name: HierarchicalDataSourceView\n  nameWithType: HierarchicalDataSourceView\n  fullName: System.Web.UI.HierarchicalDataSourceView\n  type: Class\n  assemblies:\n  - System.Web\n  namespace: System.Web.UI\n  summary: Represents a data view on a node or collection of nodes in a hierarchical data structure for a <xref href=\"System.Web.UI.HierarchicalDataSourceControl\"></xref> control.\n  remarks: \"ASP.NET supports a data-binding architecture that enables Web server controls to bind to data and present it in a consistent fashion. Web server controls that bind to data are called data-bound controls, and the classes that facilitate that binding are called data source controls. Data source controls can represent any data source: a file, a stream, a relational database, a business object, and so on. Data source controls present data in a consistent way to data-bound controls, regardless of the source or format of the underlying data.  \\n  \\n Data source controls that represent hierarchical data derive from the abstract <xref:System.Web.UI.HierarchicalDataSourceControl> class. You can think of a data source control as the combination of the data source control object and its associated views on the underlying data, which are represented by data source view objects. Hierarchical data source controls support a hierarchical data source view for each hierarchical level of data they represent. The data source views are not named, like the <xref:System.Web.UI.DataSourceView> objects associated with a <xref:System.Web.UI.DataSourceControl> control, but are identified by their unique hierarchical path.  \\n  \\n Data source views define the capabilities of a data source control. All data source view objects, including <xref:System.Web.UI.HierarchicalDataSourceView>, support data retrieval from the underlying data source using the <xref:System.Web.UI.HierarchicalDataSourceView.Select%2A> method, which retrieves a hierarchical list of data as an <xref:System.Web.UI.IHierarchicalEnumerable> object. All data source view objects optionally support a basic set of capabilities, including operations such as <xref:System.Web.UI.DataSourceView.Insert%2A>, <xref:System.Web.UI.DataSourceView.Update%2A>, <xref:System.Web.UI.DataSourceView.Delete%2A>, and sorting. A data-bound control can discover the capabilities of a data source control by retrieving an associated data source view using the <xref:System.Web.UI.HierarchicalDataSourceControl.GetHierarchicalView%2A> method and querying the view at design time or at run time. <xref:System.Web.UI.HierarchicalDataSourceView> does not currently support <xref:System.Web.UI.DataSourceView.Insert%2A>, <xref:System.Web.UI.DataSourceView.Update%2A> or <xref:System.Web.UI.DataSourceView.Delete%2A> operations.\"\n  example:\n  - \"The following code example demonstrates how to derive a class from the <xref:System.Web.UI.HierarchicalDataSourceView> class to retrieve data from hierarchical data storage, in this case a file system. The `FileSystemDataSourceView` class is a strongly typed <xref:System.Web.UI.HierarchicalDataSourceView> instance that enables hierarchical Web server controls such as the <xref:System.Web.UI.WebControls.TreeView> control to bind to a `FileSystemDataSource` control and display file system information. For security purposes, file system information is displayed only if the data source control is being used in a localhost, authenticated scenario, and only starts with the virtual directory that the Web Forms page using the data source control resides in. Otherwise, the `viewPath` parameter passed to the constructor might be used to create a view based on the current file system path. This code example is part of a larger example provided for the <xref:System.Web.UI.HierarchicalDataSourceControl> class.  \\n  \\n [!code-csharp[Urtue.Samples.Alexkr.FileSystemDataSource_1#3](~/samples/snippets/csharp/VS_Snippets_WebNet/Urtue.Samples.Alexkr.FileSystemDataSource_1/CS/filesystemdatasource.cs#3)]\\n [!code-vb[Urtue.Samples.Alexkr.FileSystemDataSource_1#3](~/samples/snippets/visualbasic/VS_Snippets_WebNet/Urtue.Samples.Alexkr.FileSystemDataSource_1/VB/filesystemdatasource.vb#3)]\"\n  syntax:\n    content: public abstract class HierarchicalDataSourceView\n  inheritance:\n  - System.Object\n  derivedClasses:\n  - System.Web.UI.WebControls.SiteMapHierarchicalDataSourceView\n  - System.Web.UI.WebControls.XmlHierarchicalDataSourceView\n  implements: []\n  inheritedMembers:\n  - System.Object.Equals(System.Object)\n  - System.Object.Equals(System.Object,System.Object)\n  - System.Object.GetHashCode\n  - System.Object.GetType\n  - System.Object.MemberwiseClone\n  - System.Object.ReferenceEquals(System.Object,System.Object)\n  - System.Object.ToString\n  version:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Web.UI/HierarchicalDataSourceView.xml\n  ms.technology:\n  - dotnet-webforms\n  ms.author: riande\n  manager: wpickett\n- uid: System.Web.UI.HierarchicalDataSourceView.#ctor\n  commentId: M:System.Web.UI.HierarchicalDataSourceView.#ctor\n  id: '#ctor'\n  parent: System.Web.UI.HierarchicalDataSourceView\n  langs:\n  - csharp\n  name: HierarchicalDataSourceView()\n  nameWithType: HierarchicalDataSourceView.HierarchicalDataSourceView()\n  fullName: HierarchicalDataSourceView.HierarchicalDataSourceView()\n  type: Constructor\n  assemblies:\n  - System.Web\n  namespace: System.Web.UI\n  summary: Initializes a new instance of the <xref href=\"System.Web.UI.HierarchicalDataSourceView\"></xref> class.\n  syntax:\n    content: protected HierarchicalDataSourceView ();\n    parameters: []\n  overload: System.Web.UI.HierarchicalDataSourceView.#ctor*\n  exceptions: []\n  version:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Web.UI/HierarchicalDataSourceView.xml\n  ms.technology:\n  - dotnet-webforms\n  ms.author: riande\n  manager: wpickett\n- uid: System.Web.UI.HierarchicalDataSourceView.Select\n  commentId: M:System.Web.UI.HierarchicalDataSourceView.Select\n  id: Select\n  parent: System.Web.UI.HierarchicalDataSourceView\n  langs:\n  - csharp\n  name: Select()\n  nameWithType: HierarchicalDataSourceView.Select()\n  fullName: HierarchicalDataSourceView.Select()\n  type: Method\n  assemblies:\n  - System.Web\n  namespace: System.Web.UI\n  summary: Gets a list of all the data items in the view.\n  remarks: The <xref:System.Web.UI.HierarchicalDataSourceView.Select%2A> method returns an <xref:System.Web.UI.IHierarchicalEnumerable> collection of data items in the current view. You can call the <xref:System.Collections.IEnumerable.GetEnumerator%2A> method to get an <xref:System.Collections.IEnumerator> object and iterate through the collection of data items.\n  example:\n  - \"The following code example demonstrates how to override the <xref:System.Web.UI.HierarchicalDataSourceView.Select%2A> method in a class that derives from the <xref:System.Web.UI.HierarchicalDataSourceView> class to retrieve hierarchical <xref:System.IO.FileSystemInfo> data from a file system. For security purposes, file system information is displayed only if the data source control is being used in a localhost, authenticated scenario, and only starts with the virtual directory that the Web Forms page using the data source control resides in. Otherwise, the `viewPath` parameter passed to the constructor of the view object might be used to create a view based on the current file system path. This code example is part of a larger example provided for the <xref:System.Web.UI.HierarchicalDataSourceControl> class.  \\n  \\n [!code-csharp[Urtue.Samples.Alexkr.FileSystemDataSource_1#3](~/samples/snippets/csharp/VS_Snippets_WebNet/Urtue.Samples.Alexkr.FileSystemDataSource_1/CS/filesystemdatasource.cs#3)]\\n [!code-vb[Urtue.Samples.Alexkr.FileSystemDataSource_1#3](~/samples/snippets/visualbasic/VS_Snippets_WebNet/Urtue.Samples.Alexkr.FileSystemDataSource_1/VB/filesystemdatasource.vb#3)]\"\n  syntax:\n    content: public abstract System.Web.UI.IHierarchicalEnumerable Select ();\n    parameters: []\n    return:\n      type: System.Web.UI.IHierarchicalEnumerable\n      description: An <xref href=\"System.Web.UI.IHierarchicalEnumerable\"></xref> collection of data items.\n  overload: System.Web.UI.HierarchicalDataSourceView.Select*\n  exceptions: []\n  version:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Web.UI/HierarchicalDataSourceView.xml\n  ms.technology:\n  - dotnet-webforms\n  ms.author: riande\n  manager: wpickett\nreferences:\n- uid: System.Object\n  parent: System\n  isExternal: false\n  name: Object\n  nameWithType: Object\n  fullName: System.Object\n- uid: System.Web.UI.HierarchicalDataSourceView.#ctor\n  parent: System.Web.UI.HierarchicalDataSourceView\n  isExternal: false\n  name: HierarchicalDataSourceView()\n  nameWithType: HierarchicalDataSourceView.HierarchicalDataSourceView()\n  fullName: HierarchicalDataSourceView.HierarchicalDataSourceView()\n- uid: System.Web.UI.HierarchicalDataSourceView.Select\n  parent: System.Web.UI.HierarchicalDataSourceView\n  isExternal: false\n  name: Select()\n  nameWithType: HierarchicalDataSourceView.Select()\n  fullName: HierarchicalDataSourceView.Select()\n- uid: System.Web.UI.IHierarchicalEnumerable\n  parent: System.Web.UI\n  isExternal: false\n  name: IHierarchicalEnumerable\n  nameWithType: IHierarchicalEnumerable\n  fullName: System.Web.UI.IHierarchicalEnumerable\n- uid: System.Web.UI.HierarchicalDataSourceView.#ctor*\n  parent: System.Web.UI.HierarchicalDataSourceView\n  isExternal: false\n  name: HierarchicalDataSourceView\n  nameWithType: HierarchicalDataSourceView.HierarchicalDataSourceView\n  fullName: HierarchicalDataSourceView.HierarchicalDataSourceView\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Web.UI/HierarchicalDataSourceView.xml\n- uid: System.Web.UI.HierarchicalDataSourceView.Select*\n  parent: System.Web.UI.HierarchicalDataSourceView\n  isExternal: false\n  name: Select\n  nameWithType: HierarchicalDataSourceView.Select\n  fullName: HierarchicalDataSourceView.Select\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Web.UI/HierarchicalDataSourceView.xml\n- uid: System.Object.Equals(System.Object)\n  parent: System.Object\n  isExternal: false\n  name: Equals(Object)\n  nameWithType: Object.Equals(Object)\n  fullName: Object.Equals(Object)\n- uid: System.Object.Equals(System.Object,System.Object)\n  parent: System.Object\n  isExternal: false\n  name: Equals(Object, Object)\n  nameWithType: Object.Equals(Object, Object)\n  fullName: Object.Equals(Object, Object)\n- uid: System.Object.GetHashCode\n  parent: System.Object\n  isExternal: false\n  name: GetHashCode()\n  nameWithType: Object.GetHashCode()\n  fullName: Object.GetHashCode()\n- uid: System.Object.GetType\n  parent: System.Object\n  isExternal: false\n  name: GetType()\n  nameWithType: Object.GetType()\n  fullName: Object.GetType()\n- uid: System.Object.MemberwiseClone\n  parent: System.Object\n  isExternal: false\n  name: MemberwiseClone()\n  nameWithType: Object.MemberwiseClone()\n  fullName: Object.MemberwiseClone()\n- uid: System.Object.ReferenceEquals(System.Object,System.Object)\n  parent: System.Object\n  isExternal: false\n  name: ReferenceEquals(Object, Object)\n  nameWithType: Object.ReferenceEquals(Object, Object)\n  fullName: Object.ReferenceEquals(Object, Object)\n- uid: System.Object.ToString\n  parent: System.Object\n  isExternal: false\n  name: ToString()\n  nameWithType: Object.ToString()\n  fullName: Object.ToString()\n"}