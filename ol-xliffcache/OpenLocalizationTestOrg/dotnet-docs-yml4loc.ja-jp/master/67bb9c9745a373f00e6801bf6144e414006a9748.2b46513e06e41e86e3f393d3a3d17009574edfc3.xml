{"nodes":[{"content":"A class for accessing Windows Communication Foundation (WCF) Web services on a client.","nodes":[{"pos":[0,86],"content":"A class for accessing Windows Communication Foundation (WCF) Web services on a client.","nodes":[{"content":"A class for accessing Windows Communication Foundation (WCF) Web services on a client.","pos":[0,86]}]}],"pos":[1144,1231],"yaml":true},{"content":"This class is a special <xref:System.ServiceModel.ChannelFactory> that automatically adds the <xref:System.ServiceModel.Description.WebHttpBehavior> to the endpoint if it is not already present. Furthermore, it adds a default <xref:System.ServiceModel.WebHttpBinding> to the endpoint if the binding is not explicitly configured and the address is an HTTP or HTTPS address.  \n  \n If all the operations of the contract have no return value or have a return value of type <xref:System.IO.Stream>, then the <xref:System.ServiceModel.Web.WebChannelFactory%601> configures the binding for the appropriate content type.","nodes":[{"pos":[0,372],"content":"This class is a special <xref:System.ServiceModel.ChannelFactory> that automatically adds the <xref:System.ServiceModel.Description.WebHttpBehavior> to the endpoint if it is not already present. Furthermore, it adds a default <xref:System.ServiceModel.WebHttpBinding> to the endpoint if the binding is not explicitly configured and the address is an HTTP or HTTPS address.","nodes":[{"content":"This class is a special <xref:System.ServiceModel.ChannelFactory> that automatically adds the <xref:System.ServiceModel.Description.WebHttpBehavior> to the endpoint if it is not already present. Furthermore, it adds a default <xref:System.ServiceModel.WebHttpBinding> to the endpoint if the binding is not explicitly configured and the address is an HTTP or HTTPS address.","pos":[0,372],"nodes":[{"content":"This class is a special <ph id=\"ph1\">&lt;xref:System.ServiceModel.ChannelFactory&gt;</ph> that automatically adds the <ph id=\"ph2\">&lt;xref:System.ServiceModel.Description.WebHttpBehavior&gt;</ph> to the endpoint if it is not already present.","pos":[0,194],"source":"This class is a special <xref:System.ServiceModel.ChannelFactory> that automatically adds the <xref:System.ServiceModel.Description.WebHttpBehavior> to the endpoint if it is not already present."},{"content":"Furthermore, it adds a default <ph id=\"ph1\">&lt;xref:System.ServiceModel.WebHttpBinding&gt;</ph> to the endpoint if the binding is not explicitly configured and the address is an HTTP or HTTPS address.","pos":[195,372],"source":" Furthermore, it adds a default <xref:System.ServiceModel.WebHttpBinding> to the endpoint if the binding is not explicitly configured and the address is an HTTP or HTTPS address."}]}]},{"pos":[379,612],"content":"If all the operations of the contract have no return value or have a return value of type <xref:System.IO.Stream>, then the <xref:System.ServiceModel.Web.WebChannelFactory%601> configures the binding for the appropriate content type.","nodes":[{"content":"If all the operations of the contract have no return value or have a return value of type <ph id=\"ph1\">&lt;xref:System.IO.Stream&gt;</ph>, then the <ph id=\"ph2\">&lt;xref:System.ServiceModel.Web.WebChannelFactory%601&gt;</ph> configures the binding for the appropriate content type.","pos":[0,233],"source":"If all the operations of the contract have no return value or have a return value of type <xref:System.IO.Stream>, then the <xref:System.ServiceModel.Web.WebChannelFactory%601> configures the binding for the appropriate content type."}]}],"pos":[1242,1859],"yaml":true,"extradata":"MT"},{"content":"The type of channel to create.","nodes":[{"pos":[0,30],"content":"The type of channel to create.","nodes":[{"content":"The type of channel to create.","pos":[0,30]}]}],"pos":[2608,2639],"yaml":true},{"content":"Initializes a new instance of the <xref href=\"System.ServiceModel.Web.WebChannelFactory`1\"></xref> class.","nodes":[{"pos":[0,105],"content":"Initializes a new instance of the <ph id=\"ph1\">&lt;xref href=\"System.ServiceModel.Web.WebChannelFactory`1\"&gt;&lt;/xref&gt;</ph> class.","source":"Initializes a new instance of the <xref href=\"System.ServiceModel.Web.WebChannelFactory`1\"></xref> class."}],"pos":[9600,9706],"yaml":true},{"content":"Initializes a new instance of the <xref href=\"System.ServiceModel.Web.WebChannelFactory`1\"></xref> class.","nodes":[{"pos":[0,105],"content":"Initializes a new instance of the <ph id=\"ph1\">&lt;xref href=\"System.ServiceModel.Web.WebChannelFactory`1\"&gt;&lt;/xref&gt;</ph> class.","source":"Initializes a new instance of the <xref href=\"System.ServiceModel.Web.WebChannelFactory`1\"></xref> class."}],"pos":[11071,11177],"yaml":true},{"content":"The binding to use when creating the channel.","nodes":[{"pos":[0,45],"content":"The binding to use when creating the channel.","nodes":[{"content":"The binding to use when creating the channel.","pos":[0,45]}]}],"pos":[11844,11890],"yaml":true},{"content":"Initializes a new instance of the <xref href=\"System.ServiceModel.Web.WebChannelFactory`1\"></xref> class.","nodes":[{"pos":[0,105],"content":"Initializes a new instance of the <ph id=\"ph1\">&lt;xref href=\"System.ServiceModel.Web.WebChannelFactory`1\"&gt;&lt;/xref&gt;</ph> class.","source":"Initializes a new instance of the <xref href=\"System.ServiceModel.Web.WebChannelFactory`1\"></xref> class."}],"pos":[13241,13347],"yaml":true},{"content":"The endpoint to use when creating the channel.","nodes":[{"pos":[0,46],"content":"The endpoint to use when creating the channel.","nodes":[{"content":"The endpoint to use when creating the channel.","pos":[0,46]}]}],"pos":[14038,14085],"yaml":true},{"content":"Initializes a new instance of the <xref href=\"System.ServiceModel.Web.WebChannelFactory`1\"></xref> class.","nodes":[{"pos":[0,105],"content":"Initializes a new instance of the <ph id=\"ph1\">&lt;xref href=\"System.ServiceModel.Web.WebChannelFactory`1\"&gt;&lt;/xref&gt;</ph> class.","source":"Initializes a new instance of the <xref href=\"System.ServiceModel.Web.WebChannelFactory`1\"></xref> class."}],"pos":[15307,15413],"yaml":true},{"content":"The `endpointConfigurationName` parameter must be set to the same value as the `name` attribute of the `<endpoint>` element in the application configuration file.","nodes":[{"pos":[0,162],"content":"The <ph id=\"ph1\">`endpointConfigurationName`</ph> parameter must be set to the same value as the <ph id=\"ph2\">`name`</ph> attribute of the <ph id=\"ph3\">`&lt;endpoint&gt;`</ph> element in the application configuration file.","source":"The `endpointConfigurationName` parameter must be set to the same value as the `name` attribute of the `<endpoint>` element in the application configuration file."}],"pos":[15424,15587],"yaml":true,"extradata":"MT"},{"content":"Initializes a new instance of the <xref href=\"System.ServiceModel.Web.WebChannelFactory`1\"></xref> class.","nodes":[{"pos":[0,105],"content":"Initializes a new instance of the <ph id=\"ph1\">&lt;xref href=\"System.ServiceModel.Web.WebChannelFactory`1\"&gt;&lt;/xref&gt;</ph> class.","source":"Initializes a new instance of the <xref href=\"System.ServiceModel.Web.WebChannelFactory`1\"></xref> class."}],"pos":[17523,17629],"yaml":true},{"content":"The type passed for the type parameter must be an interface.","nodes":[{"pos":[0,60],"content":"The type passed for the type parameter must be an interface.","nodes":[{"content":"The type passed for the type parameter must be an interface.","pos":[0,60]}]}],"pos":[17640,17701],"yaml":true,"extradata":"MT"},{"content":"Initializes a new instance of the <xref href=\"System.ServiceModel.Web.WebChannelFactory`1\"></xref> class with the specified <xref href=\"System.Uri\"></xref>.","nodes":[{"pos":[0,156],"content":"Initializes a new instance of the <ph id=\"ph1\">&lt;xref href=\"System.ServiceModel.Web.WebChannelFactory`1\"&gt;&lt;/xref&gt;</ph> class with the specified <ph id=\"ph2\">&lt;xref href=\"System.Uri\"&gt;&lt;/xref&gt;</ph>.","source":"Initializes a new instance of the <xref href=\"System.ServiceModel.Web.WebChannelFactory`1\"></xref> class with the specified <xref href=\"System.Uri\"></xref>."}],"pos":[19143,19300],"yaml":true},{"content":"The URI of the Web service that is called.","nodes":[{"pos":[0,42],"content":"The URI of the Web service that is called.","nodes":[{"content":"The URI of the Web service that is called.","pos":[0,42]}]}],"pos":[19876,19919],"yaml":true},{"content":"Initializes a new instance of the <xref href=\"System.ServiceModel.Web.WebChannelFactory`1\"></xref> class with the specified binding and <xref href=\"System.Uri\"></xref>.","nodes":[{"pos":[0,168],"content":"Initializes a new instance of the <ph id=\"ph1\">&lt;xref href=\"System.ServiceModel.Web.WebChannelFactory`1\"&gt;&lt;/xref&gt;</ph> class with the specified binding and <ph id=\"ph2\">&lt;xref href=\"System.Uri\"&gt;&lt;/xref&gt;</ph>.","source":"Initializes a new instance of the <xref href=\"System.ServiceModel.Web.WebChannelFactory`1\"></xref> class with the specified binding and <xref href=\"System.Uri\"></xref>."}],"pos":[21347,21516],"yaml":true},{"content":"The binding to use.","nodes":[{"pos":[0,19],"content":"The binding to use.","nodes":[{"content":"The binding to use.","pos":[0,19]}]}],"pos":[22158,22178],"yaml":true},{"content":"The URI of the Web service that is called.","nodes":[{"pos":[0,42],"content":"The URI of the Web service that is called.","nodes":[{"content":"The URI of the Web service that is called.","pos":[0,42]}]}],"pos":[22244,22287],"yaml":true},{"content":"Initializes a new instance of the <xref href=\"System.ServiceModel.Web.WebChannelFactory`1\"></xref> class with the specified endpoint configuration and <xref href=\"System.Uri\"></xref>.","nodes":[{"pos":[0,183],"content":"Initializes a new instance of the <ph id=\"ph1\">&lt;xref href=\"System.ServiceModel.Web.WebChannelFactory`1\"&gt;&lt;/xref&gt;</ph> class with the specified endpoint configuration and <ph id=\"ph2\">&lt;xref href=\"System.Uri\"&gt;&lt;/xref&gt;</ph>.","source":"Initializes a new instance of the <xref href=\"System.ServiceModel.Web.WebChannelFactory`1\"></xref> class with the specified endpoint configuration and <xref href=\"System.Uri\"></xref>."}],"pos":[23643,23827],"yaml":true},{"content":"The `endpointConfigurationName` parameter must be set to the same value as the `name` attribute of the `<endpoint>` element in the application configuration file.","nodes":[{"pos":[0,162],"content":"The <ph id=\"ph1\">`endpointConfigurationName`</ph> parameter must be set to the same value as the <ph id=\"ph2\">`name`</ph> attribute of the <ph id=\"ph3\">`&lt;endpoint&gt;`</ph> element in the application configuration file.","source":"The `endpointConfigurationName` parameter must be set to the same value as the `name` attribute of the `<endpoint>` element in the application configuration file."}],"pos":[23838,24001],"yaml":true,"extradata":"MT"},{"content":"The name within the application configuration file where the channel is configured.","nodes":[{"pos":[0,83],"content":"The name within the application configuration file where the channel is configured.","nodes":[{"content":"The name within the application configuration file where the channel is configured.","pos":[0,83]}]}],"pos":[24612,24696],"yaml":true},{"content":"The URI of the Web service that is called.","nodes":[{"pos":[0,42],"content":"The URI of the Web service that is called.","nodes":[{"content":"The URI of the Web service that is called.","pos":[0,42]}]}],"pos":[24762,24805],"yaml":true},{"content":"This method is called when the <xref href=\"System.ServiceModel.Web.WebChannelFactory`1\"></xref> is opened.","nodes":[{"pos":[0,106],"content":"This method is called when the <ph id=\"ph1\">&lt;xref href=\"System.ServiceModel.Web.WebChannelFactory`1\"&gt;&lt;/xref&gt;</ph> is opened.","source":"This method is called when the <xref href=\"System.ServiceModel.Web.WebChannelFactory`1\"></xref> is opened."}],"pos":[26001,26108],"yaml":true},{"content":"When this method is called, if the <xref:System.ServiceModel.Web.WebChannelFactory%601> is not already associated with a binding a new <xref:System.ServiceModel.WebHttpBinding> is created based on the URI scheme of the remote address. Bindings with an HTTPS remote address are appropriately configured with the <xref:System.ServiceModel.WebHttpSecurity.Mode%2A> property set to <xref:System.ServiceModel.WebHttpSecurityMode.Transport> and the <xref:System.ServiceModel.WebHttpSecurity.Transport%2A> property set to `None`. The <xref:System.ServiceModel.Web.WebChannelFactory%601> adds an instance of <xref:System.ServiceModel.Description.WebHttpBehavior> to the endpoint if one does not already exist.","nodes":[{"pos":[0,701],"content":"When this method is called, if the <xref:System.ServiceModel.Web.WebChannelFactory%601> is not already associated with a binding a new <xref:System.ServiceModel.WebHttpBinding> is created based on the URI scheme of the remote address. Bindings with an HTTPS remote address are appropriately configured with the <xref:System.ServiceModel.WebHttpSecurity.Mode%2A> property set to <xref:System.ServiceModel.WebHttpSecurityMode.Transport> and the <xref:System.ServiceModel.WebHttpSecurity.Transport%2A> property set to `None`. The <xref:System.ServiceModel.Web.WebChannelFactory%601> adds an instance of <xref:System.ServiceModel.Description.WebHttpBehavior> to the endpoint if one does not already exist.","nodes":[{"content":"When this method is called, if the <ph id=\"ph1\">&lt;xref:System.ServiceModel.Web.WebChannelFactory%601&gt;</ph> is not already associated with a binding a new <ph id=\"ph2\">&lt;xref:System.ServiceModel.WebHttpBinding&gt;</ph> is created based on the URI scheme of the remote address.","pos":[0,234],"source":"When this method is called, if the <xref:System.ServiceModel.Web.WebChannelFactory%601> is not already associated with a binding a new <xref:System.ServiceModel.WebHttpBinding> is created based on the URI scheme of the remote address."},{"content":"Bindings with an HTTPS remote address are appropriately configured with the <ph id=\"ph1\">&lt;xref:System.ServiceModel.WebHttpSecurity.Mode%2A&gt;</ph> property set to <ph id=\"ph2\">&lt;xref:System.ServiceModel.WebHttpSecurityMode.Transport&gt;</ph> and the <ph id=\"ph3\">&lt;xref:System.ServiceModel.WebHttpSecurity.Transport%2A&gt;</ph> property set to <ph id=\"ph4\">`None`</ph>.","pos":[235,522],"source":" Bindings with an HTTPS remote address are appropriately configured with the <xref:System.ServiceModel.WebHttpSecurity.Mode%2A> property set to <xref:System.ServiceModel.WebHttpSecurityMode.Transport> and the <xref:System.ServiceModel.WebHttpSecurity.Transport%2A> property set to `None`."},{"content":"The <ph id=\"ph1\">&lt;xref:System.ServiceModel.Web.WebChannelFactory%601&gt;</ph> adds an instance of <ph id=\"ph2\">&lt;xref:System.ServiceModel.Description.WebHttpBehavior&gt;</ph> to the endpoint if one does not already exist.","pos":[523,701],"source":" The <xref:System.ServiceModel.Web.WebChannelFactory%601> adds an instance of <xref:System.ServiceModel.Description.WebHttpBehavior> to the endpoint if one does not already exist."}]}],"pos":[26119,26821],"yaml":true,"extradata":"MT"}],"content":"### YamlMime:ManagedReference\nitems:\n- uid: System.ServiceModel.Web.WebChannelFactory`1\n  commentId: T:System.ServiceModel.Web.WebChannelFactory`1\n  id: WebChannelFactory`1\n  children:\n  - System.ServiceModel.Web.WebChannelFactory`1.#ctor\n  - System.ServiceModel.Web.WebChannelFactory`1.#ctor(System.ServiceModel.Channels.Binding)\n  - System.ServiceModel.Web.WebChannelFactory`1.#ctor(System.ServiceModel.Description.ServiceEndpoint)\n  - System.ServiceModel.Web.WebChannelFactory`1.#ctor(System.String)\n  - System.ServiceModel.Web.WebChannelFactory`1.#ctor(System.Type)\n  - System.ServiceModel.Web.WebChannelFactory`1.#ctor(System.Uri)\n  - System.ServiceModel.Web.WebChannelFactory`1.#ctor(System.ServiceModel.Channels.Binding,System.Uri)\n  - System.ServiceModel.Web.WebChannelFactory`1.#ctor(System.String,System.Uri)\n  - System.ServiceModel.Web.WebChannelFactory`1.OnOpening\n  langs:\n  - csharp\n  name: WebChannelFactory<TChannel>\n  nameWithType: WebChannelFactory<TChannel>\n  fullName: System.ServiceModel.Web.WebChannelFactory<TChannel>\n  type: Class\n  assemblies:\n  - System.ServiceModel.Web\n  namespace: System.ServiceModel.Web\n  summary: A class for accessing Windows Communication Foundation (WCF) Web services on a client.\n  remarks: \"This class is a special <xref:System.ServiceModel.ChannelFactory> that automatically adds the <xref:System.ServiceModel.Description.WebHttpBehavior> to the endpoint if it is not already present. Furthermore, it adds a default <xref:System.ServiceModel.WebHttpBinding> to the endpoint if the binding is not explicitly configured and the address is an HTTP or HTTPS address.  \\n  \\n If all the operations of the contract have no return value or have a return value of type <xref:System.IO.Stream>, then the <xref:System.ServiceModel.Web.WebChannelFactory%601> configures the binding for the appropriate content type.\"\n  example:\n  - \"The following code shows how to use the <xref:System.ServiceModel.Web.WebChannelFactory%601> class to call a [!INCLUDE[indigo2](~/includes/indigo2-md.md)] service.  \\n  \\n [!code-csharp[BasicWebProgramming#0](~/samples/snippets/csharp/VS_Snippets_CFX/basicwebprogramming/cs/snippets.cs#0)]\\n [!code-vb[BasicWebProgramming#0](~/samples/snippets/visualbasic/VS_Snippets_CFX/basicwebprogramming/vb/snippets.vb#0)]  \\n  \\n For a full code example, see [Basic WCF REST Programming Model Sample](http://msdn.microsoft.com/en-us/d3265542-febc-4018-84ea-32ddcfd2d874).\"\n  syntax:\n    content: 'public class WebChannelFactory<TChannel> : System.ServiceModel.ChannelFactory<TChannel>'\n    typeParameters:\n    - id: TChannel\n      description: The type of channel to create.\n  inheritance:\n  - System.Object\n  - System.ServiceModel.Channels.CommunicationObject\n  - System.ServiceModel.ChannelFactory\n  - System.ServiceModel.ChannelFactory`1\n  implements: []\n  inheritedMembers:\n  - System.Object.Equals(System.Object)\n  - System.Object.Equals(System.Object,System.Object)\n  - System.Object.GetHashCode\n  - System.Object.GetType\n  - System.Object.MemberwiseClone\n  - System.Object.ReferenceEquals(System.Object,System.Object)\n  - System.Object.ToString\n  - System.ServiceModel.ChannelFactory.ApplyConfiguration(System.String)\n  - System.ServiceModel.ChannelFactory.CreateFactory\n  - System.ServiceModel.ChannelFactory.Credentials\n  - System.ServiceModel.ChannelFactory.DefaultCloseTimeout\n  - System.ServiceModel.ChannelFactory.DefaultOpenTimeout\n  - System.ServiceModel.ChannelFactory.Endpoint\n  - System.ServiceModel.ChannelFactory.EnsureOpened\n  - System.ServiceModel.ChannelFactory.GetProperty``1\n  - System.ServiceModel.ChannelFactory.InitializeEndpoint(System.ServiceModel.Channels.Binding,System.ServiceModel.EndpointAddress)\n  - System.ServiceModel.ChannelFactory.InitializeEndpoint(System.ServiceModel.Description.ServiceEndpoint)\n  - System.ServiceModel.ChannelFactory.InitializeEndpoint(System.String,System.ServiceModel.EndpointAddress)\n  - System.ServiceModel.ChannelFactory.OnAbort\n  - System.ServiceModel.ChannelFactory.OnBeginClose(System.TimeSpan,System.AsyncCallback,System.Object)\n  - System.ServiceModel.ChannelFactory.OnBeginOpen(System.TimeSpan,System.AsyncCallback,System.Object)\n  - System.ServiceModel.ChannelFactory.OnClose(System.TimeSpan)\n  - System.ServiceModel.ChannelFactory.OnEndClose(System.IAsyncResult)\n  - System.ServiceModel.ChannelFactory.OnEndOpen(System.IAsyncResult)\n  - System.ServiceModel.ChannelFactory.OnOpen(System.TimeSpan)\n  - System.ServiceModel.ChannelFactory.OnOpened\n  - System.ServiceModel.ChannelFactory.System#IDisposable#Dispose\n  - System.ServiceModel.ChannelFactory`1.CreateChannel\n  - System.ServiceModel.ChannelFactory`1.CreateChannel(System.ServiceModel.Channels.Binding,System.ServiceModel.EndpointAddress)\n  - System.ServiceModel.ChannelFactory`1.CreateChannel(System.ServiceModel.Channels.Binding,System.ServiceModel.EndpointAddress,System.Uri)\n  - System.ServiceModel.ChannelFactory`1.CreateChannel(System.ServiceModel.EndpointAddress)\n  - System.ServiceModel.ChannelFactory`1.CreateChannel(System.ServiceModel.EndpointAddress,System.Uri)\n  - System.ServiceModel.ChannelFactory`1.CreateChannel(System.String)\n  - System.ServiceModel.ChannelFactory`1.CreateChannelWithActAsToken(System.IdentityModel.Tokens.SecurityToken)\n  - System.ServiceModel.ChannelFactory`1.CreateChannelWithActAsToken(System.IdentityModel.Tokens.SecurityToken,System.ServiceModel.EndpointAddress)\n  - System.ServiceModel.ChannelFactory`1.CreateChannelWithActAsToken(System.IdentityModel.Tokens.SecurityToken,System.ServiceModel.EndpointAddress,System.Uri)\n  - System.ServiceModel.ChannelFactory`1.CreateChannelWithIssuedToken(System.IdentityModel.Tokens.SecurityToken)\n  - System.ServiceModel.ChannelFactory`1.CreateChannelWithIssuedToken(System.IdentityModel.Tokens.SecurityToken,System.ServiceModel.EndpointAddress)\n  - System.ServiceModel.ChannelFactory`1.CreateChannelWithIssuedToken(System.IdentityModel.Tokens.SecurityToken,System.ServiceModel.EndpointAddress,System.Uri)\n  - System.ServiceModel.ChannelFactory`1.CreateChannelWithOnBehalfOfToken(System.IdentityModel.Tokens.SecurityToken)\n  - System.ServiceModel.ChannelFactory`1.CreateChannelWithOnBehalfOfToken(System.IdentityModel.Tokens.SecurityToken,System.ServiceModel.EndpointAddress)\n  - System.ServiceModel.ChannelFactory`1.CreateChannelWithOnBehalfOfToken(System.IdentityModel.Tokens.SecurityToken,System.ServiceModel.EndpointAddress,System.Uri)\n  - System.ServiceModel.ChannelFactory`1.CreateDescription\n  - System.ServiceModel.Channels.CommunicationObject.Abort\n  - System.ServiceModel.Channels.CommunicationObject.BeginClose(System.AsyncCallback,System.Object)\n  - System.ServiceModel.Channels.CommunicationObject.BeginClose(System.TimeSpan,System.AsyncCallback,System.Object)\n  - System.ServiceModel.Channels.CommunicationObject.BeginOpen(System.AsyncCallback,System.Object)\n  - System.ServiceModel.Channels.CommunicationObject.BeginOpen(System.TimeSpan,System.AsyncCallback,System.Object)\n  - System.ServiceModel.Channels.CommunicationObject.Close\n  - System.ServiceModel.Channels.CommunicationObject.Close(System.TimeSpan)\n  - System.ServiceModel.Channels.CommunicationObject.Closed\n  - System.ServiceModel.Channels.CommunicationObject.Closing\n  - System.ServiceModel.Channels.CommunicationObject.EndClose(System.IAsyncResult)\n  - System.ServiceModel.Channels.CommunicationObject.EndOpen(System.IAsyncResult)\n  - System.ServiceModel.Channels.CommunicationObject.Fault\n  - System.ServiceModel.Channels.CommunicationObject.Faulted\n  - System.ServiceModel.Channels.CommunicationObject.GetCommunicationObjectType\n  - System.ServiceModel.Channels.CommunicationObject.IsDisposed\n  - System.ServiceModel.Channels.CommunicationObject.OnClosed\n  - System.ServiceModel.Channels.CommunicationObject.OnClosing\n  - System.ServiceModel.Channels.CommunicationObject.OnFaulted\n  - System.ServiceModel.Channels.CommunicationObject.Open\n  - System.ServiceModel.Channels.CommunicationObject.Open(System.TimeSpan)\n  - System.ServiceModel.Channels.CommunicationObject.Opened\n  - System.ServiceModel.Channels.CommunicationObject.Opening\n  - System.ServiceModel.Channels.CommunicationObject.State\n  - System.ServiceModel.Channels.CommunicationObject.ThisLock\n  - System.ServiceModel.Channels.CommunicationObject.ThrowIfDisposed\n  - System.ServiceModel.Channels.CommunicationObject.ThrowIfDisposedOrImmutable\n  - System.ServiceModel.Channels.CommunicationObject.ThrowIfDisposedOrNotOpen\n  version:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.ServiceModel.Web/WebChannelFactory`1.xml\n  ms.technology:\n  - dotnet-standard\n  author: Erikre\n  ms.author: erikre\n  manager: erikre\n- uid: System.ServiceModel.Web.WebChannelFactory`1.#ctor\n  commentId: M:System.ServiceModel.Web.WebChannelFactory`1.#ctor\n  id: '#ctor'\n  parent: System.ServiceModel.Web.WebChannelFactory`1\n  langs:\n  - csharp\n  name: WebChannelFactory<TChannel>()\n  nameWithType: WebChannelFactory<TChannel>.WebChannelFactory<TChannel>()\n  fullName: WebChannelFactory<TChannel>.WebChannelFactory<TChannel>()\n  type: Constructor\n  assemblies:\n  - System.ServiceModel.Web\n  namespace: System.ServiceModel.Web\n  summary: Initializes a new instance of the <xref href=\"System.ServiceModel.Web.WebChannelFactory`1\"></xref> class.\n  syntax:\n    content: public WebChannelFactory ();\n    parameters: []\n  overload: System.ServiceModel.Web.WebChannelFactory`1.#ctor*\n  exceptions: []\n  version:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - xamarinmac-3.0\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - xamarinmac-3.0\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.ServiceModel.Web/WebChannelFactory`1.xml\n  ms.technology:\n  - dotnet-standard\n  author: Erikre\n  ms.author: erikre\n  manager: erikre\n- uid: System.ServiceModel.Web.WebChannelFactory`1.#ctor(System.ServiceModel.Channels.Binding)\n  commentId: M:System.ServiceModel.Web.WebChannelFactory`1.#ctor(System.ServiceModel.Channels.Binding)\n  id: '#ctor(System.ServiceModel.Channels.Binding)'\n  parent: System.ServiceModel.Web.WebChannelFactory`1\n  langs:\n  - csharp\n  name: WebChannelFactory<TChannel>(Binding)\n  nameWithType: WebChannelFactory<TChannel>.WebChannelFactory<TChannel>(Binding)\n  fullName: WebChannelFactory<TChannel>.WebChannelFactory<TChannel>(Binding)\n  type: Constructor\n  assemblies:\n  - System.ServiceModel.Web\n  namespace: System.ServiceModel.Web\n  summary: Initializes a new instance of the <xref href=\"System.ServiceModel.Web.WebChannelFactory`1\"></xref> class.\n  remarks: ''\n  example:\n  - \"The following code shows how use this constructor to create a <xref:System.ServiceModel.Web.WebChannelFactory%601> and use it to call a [!INCLUDE[indigo2](~/includes/indigo2-md.md)] service.  \\n  \\n [!code-csharp[BasicWebProgramming#1](~/samples/snippets/csharp/VS_Snippets_CFX/basicwebprogramming/cs/snippets.cs#1)]\\n [!code-vb[BasicWebProgramming#1](~/samples/snippets/visualbasic/VS_Snippets_CFX/basicwebprogramming/vb/snippets.vb#1)]\"\n  syntax:\n    content: public WebChannelFactory (System.ServiceModel.Channels.Binding binding);\n    parameters:\n    - id: binding\n      type: System.ServiceModel.Channels.Binding\n      description: The binding to use when creating the channel.\n  overload: System.ServiceModel.Web.WebChannelFactory`1.#ctor*\n  exceptions: []\n  version:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - xamarinmac-3.0\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - xamarinmac-3.0\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.ServiceModel.Web/WebChannelFactory`1.xml\n  ms.technology:\n  - dotnet-standard\n  author: Erikre\n  ms.author: erikre\n  manager: erikre\n- uid: System.ServiceModel.Web.WebChannelFactory`1.#ctor(System.ServiceModel.Description.ServiceEndpoint)\n  commentId: M:System.ServiceModel.Web.WebChannelFactory`1.#ctor(System.ServiceModel.Description.ServiceEndpoint)\n  id: '#ctor(System.ServiceModel.Description.ServiceEndpoint)'\n  parent: System.ServiceModel.Web.WebChannelFactory`1\n  langs:\n  - csharp\n  name: WebChannelFactory<TChannel>(ServiceEndpoint)\n  nameWithType: WebChannelFactory<TChannel>.WebChannelFactory<TChannel>(ServiceEndpoint)\n  fullName: WebChannelFactory<TChannel>.WebChannelFactory<TChannel>(ServiceEndpoint)\n  type: Constructor\n  assemblies:\n  - System.ServiceModel.Web\n  namespace: System.ServiceModel.Web\n  summary: Initializes a new instance of the <xref href=\"System.ServiceModel.Web.WebChannelFactory`1\"></xref> class.\n  remarks: ''\n  example:\n  - \"The following code shows how use this constructor to create a <xref:System.ServiceModel.Web.WebChannelFactory%601> and use it to call a [!INCLUDE[indigo2](~/includes/indigo2-md.md)] service.  \\n  \\n [!code-csharp[BasicWebProgramming#2](~/samples/snippets/csharp/VS_Snippets_CFX/basicwebprogramming/cs/snippets.cs#2)]\\n [!code-vb[BasicWebProgramming#2](~/samples/snippets/visualbasic/VS_Snippets_CFX/basicwebprogramming/vb/snippets.vb#2)]\"\n  syntax:\n    content: public WebChannelFactory (System.ServiceModel.Description.ServiceEndpoint endpoint);\n    parameters:\n    - id: endpoint\n      type: System.ServiceModel.Description.ServiceEndpoint\n      description: The endpoint to use when creating the channel.\n  overload: System.ServiceModel.Web.WebChannelFactory`1.#ctor*\n  exceptions: []\n  version:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - xamarinmac-3.0\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - xamarinmac-3.0\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.ServiceModel.Web/WebChannelFactory`1.xml\n  ms.technology:\n  - dotnet-standard\n  author: Erikre\n  ms.author: erikre\n  manager: erikre\n- uid: System.ServiceModel.Web.WebChannelFactory`1.#ctor(System.String)\n  commentId: M:System.ServiceModel.Web.WebChannelFactory`1.#ctor(System.String)\n  id: '#ctor(System.String)'\n  parent: System.ServiceModel.Web.WebChannelFactory`1\n  langs:\n  - csharp\n  name: WebChannelFactory<TChannel>(String)\n  nameWithType: WebChannelFactory<TChannel>.WebChannelFactory<TChannel>(String)\n  fullName: WebChannelFactory<TChannel>.WebChannelFactory<TChannel>(String)\n  type: Constructor\n  assemblies:\n  - System.ServiceModel.Web\n  namespace: System.ServiceModel.Web\n  summary: Initializes a new instance of the <xref href=\"System.ServiceModel.Web.WebChannelFactory`1\"></xref> class.\n  remarks: The `endpointConfigurationName` parameter must be set to the same value as the `name` attribute of the `<endpoint>` element in the application configuration file.\n  example:\n  - \"The following code shows how use this constructor to create a <xref:System.ServiceModel.Web.WebChannelFactory%601> instance and use it to call a [!INCLUDE[indigo2](~/includes/indigo2-md.md)] service.  \\n  \\n [!code-csharp[BasicWebProgramming#3](~/samples/snippets/csharp/VS_Snippets_CFX/basicwebprogramming/cs/snippets.cs#3)]\\n [!code-vb[BasicWebProgramming#3](~/samples/snippets/visualbasic/VS_Snippets_CFX/basicwebprogramming/vb/snippets.vb#3)]\"\n  syntax:\n    content: public WebChannelFactory (string configurationName);\n    parameters:\n    - id: endpointConfigurationName\n      type: System.String\n      description: ''\n  overload: System.ServiceModel.Web.WebChannelFactory`1.#ctor*\n  exceptions: []\n  version:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.ServiceModel.Web/WebChannelFactory`1.xml\n  ms.technology:\n  - dotnet-standard\n  author: Erikre\n  ms.author: erikre\n  manager: erikre\n- uid: System.ServiceModel.Web.WebChannelFactory`1.#ctor(System.Type)\n  commentId: M:System.ServiceModel.Web.WebChannelFactory`1.#ctor(System.Type)\n  id: '#ctor(System.Type)'\n  parent: System.ServiceModel.Web.WebChannelFactory`1\n  langs:\n  - csharp\n  name: WebChannelFactory<TChannel>(Type)\n  nameWithType: WebChannelFactory<TChannel>.WebChannelFactory<TChannel>(Type)\n  fullName: WebChannelFactory<TChannel>.WebChannelFactory<TChannel>(Type)\n  type: Constructor\n  assemblies:\n  - System.ServiceModel.Web\n  namespace: System.ServiceModel.Web\n  summary: Initializes a new instance of the <xref href=\"System.ServiceModel.Web.WebChannelFactory`1\"></xref> class.\n  remarks: The type passed for the type parameter must be an interface.\n  syntax:\n    content: public WebChannelFactory (Type serviceType);\n    parameters:\n    - id: channelType\n      type: System.Type\n      description: ''\n  overload: System.ServiceModel.Web.WebChannelFactory`1.#ctor*\n  exceptions: []\n  version:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.ServiceModel.Web/WebChannelFactory`1.xml\n  ms.technology:\n  - dotnet-standard\n  author: Erikre\n  ms.author: erikre\n  manager: erikre\n- uid: System.ServiceModel.Web.WebChannelFactory`1.#ctor(System.Uri)\n  commentId: M:System.ServiceModel.Web.WebChannelFactory`1.#ctor(System.Uri)\n  id: '#ctor(System.Uri)'\n  parent: System.ServiceModel.Web.WebChannelFactory`1\n  langs:\n  - csharp\n  name: WebChannelFactory<TChannel>(Uri)\n  nameWithType: WebChannelFactory<TChannel>.WebChannelFactory<TChannel>(Uri)\n  fullName: WebChannelFactory<TChannel>.WebChannelFactory<TChannel>(Uri)\n  type: Constructor\n  assemblies:\n  - System.ServiceModel.Web\n  namespace: System.ServiceModel.Web\n  summary: Initializes a new instance of the <xref href=\"System.ServiceModel.Web.WebChannelFactory`1\"></xref> class with the specified <xref href=\"System.Uri\"></xref>.\n  remarks: ''\n  example:\n  - \"The following code shows how to use this constructor to create a <xref:System.ServiceModel.Web.WebChannelFactory%601> instance and call a service.  \\n  \\n [!code-csharp[BasicWebProgramming#4](~/samples/snippets/csharp/VS_Snippets_CFX/basicwebprogramming/cs/snippets.cs#4)]\\n [!code-vb[BasicWebProgramming#4](~/samples/snippets/visualbasic/VS_Snippets_CFX/basicwebprogramming/vb/snippets.vb#4)]\"\n  syntax:\n    content: public WebChannelFactory (Uri remoteAddress);\n    parameters:\n    - id: remoteAddress\n      type: System.Uri\n      description: The URI of the Web service that is called.\n  overload: System.ServiceModel.Web.WebChannelFactory`1.#ctor*\n  exceptions: []\n  version:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.ServiceModel.Web/WebChannelFactory`1.xml\n  ms.technology:\n  - dotnet-standard\n  author: Erikre\n  ms.author: erikre\n  manager: erikre\n- uid: System.ServiceModel.Web.WebChannelFactory`1.#ctor(System.ServiceModel.Channels.Binding,System.Uri)\n  commentId: M:System.ServiceModel.Web.WebChannelFactory`1.#ctor(System.ServiceModel.Channels.Binding,System.Uri)\n  id: '#ctor(System.ServiceModel.Channels.Binding,System.Uri)'\n  parent: System.ServiceModel.Web.WebChannelFactory`1\n  langs:\n  - csharp\n  name: WebChannelFactory<TChannel>(Binding, Uri)\n  nameWithType: WebChannelFactory<TChannel>.WebChannelFactory<TChannel>(Binding, Uri)\n  fullName: WebChannelFactory<TChannel>.WebChannelFactory<TChannel>(Binding, Uri)\n  type: Constructor\n  assemblies:\n  - System.ServiceModel.Web\n  namespace: System.ServiceModel.Web\n  summary: Initializes a new instance of the <xref href=\"System.ServiceModel.Web.WebChannelFactory`1\"></xref> class with the specified binding and <xref href=\"System.Uri\"></xref>.\n  remarks: ''\n  example:\n  - \"The following code shows how to use this constructor to create a <xref:System.ServiceModel.Web.WebChannelFactory%601> instance and call a service.  \\n  \\n [!code-csharp[BasicWebProgramming#5](~/samples/snippets/csharp/VS_Snippets_CFX/basicwebprogramming/cs/snippets.cs#5)]\\n [!code-vb[BasicWebProgramming#5](~/samples/snippets/visualbasic/VS_Snippets_CFX/basicwebprogramming/vb/snippets.vb#5)]\"\n  syntax:\n    content: public WebChannelFactory (System.ServiceModel.Channels.Binding binding, Uri remoteAddress);\n    parameters:\n    - id: binding\n      type: System.ServiceModel.Channels.Binding\n      description: The binding to use.\n    - id: remoteAddress\n      type: System.Uri\n      description: The URI of the Web service that is called.\n  overload: System.ServiceModel.Web.WebChannelFactory`1.#ctor*\n  exceptions: []\n  version:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.ServiceModel.Web/WebChannelFactory`1.xml\n  ms.technology:\n  - dotnet-standard\n  author: Erikre\n  ms.author: erikre\n  manager: erikre\n- uid: System.ServiceModel.Web.WebChannelFactory`1.#ctor(System.String,System.Uri)\n  commentId: M:System.ServiceModel.Web.WebChannelFactory`1.#ctor(System.String,System.Uri)\n  id: '#ctor(System.String,System.Uri)'\n  parent: System.ServiceModel.Web.WebChannelFactory`1\n  langs:\n  - csharp\n  name: WebChannelFactory<TChannel>(String, Uri)\n  nameWithType: WebChannelFactory<TChannel>.WebChannelFactory<TChannel>(String, Uri)\n  fullName: WebChannelFactory<TChannel>.WebChannelFactory<TChannel>(String, Uri)\n  type: Constructor\n  assemblies:\n  - System.ServiceModel.Web\n  namespace: System.ServiceModel.Web\n  summary: Initializes a new instance of the <xref href=\"System.ServiceModel.Web.WebChannelFactory`1\"></xref> class with the specified endpoint configuration and <xref href=\"System.Uri\"></xref>.\n  remarks: The `endpointConfigurationName` parameter must be set to the same value as the `name` attribute of the `<endpoint>` element in the application configuration file.\n  example:\n  - \"The following code shows how to use this constructor to create a <xref:System.ServiceModel.Web.WebChannelFactory%601> instance and call a service.  \\n  \\n [!code-csharp[BasicWebProgramming#6](~/samples/snippets/csharp/VS_Snippets_CFX/basicwebprogramming/cs/snippets.cs#6)]\\n [!code-vb[BasicWebProgramming#6](~/samples/snippets/visualbasic/VS_Snippets_CFX/basicwebprogramming/vb/snippets.vb#6)]\"\n  syntax:\n    content: public WebChannelFactory (string endpointConfigurationName, Uri remoteAddress);\n    parameters:\n    - id: endpointConfigurationName\n      type: System.String\n      description: The name within the application configuration file where the channel is configured.\n    - id: remoteAddress\n      type: System.Uri\n      description: The URI of the Web service that is called.\n  overload: System.ServiceModel.Web.WebChannelFactory`1.#ctor*\n  exceptions: []\n  version:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.ServiceModel.Web/WebChannelFactory`1.xml\n  ms.technology:\n  - dotnet-standard\n  author: Erikre\n  ms.author: erikre\n  manager: erikre\n- uid: System.ServiceModel.Web.WebChannelFactory`1.OnOpening\n  commentId: M:System.ServiceModel.Web.WebChannelFactory`1.OnOpening\n  id: OnOpening\n  parent: System.ServiceModel.Web.WebChannelFactory`1\n  langs:\n  - csharp\n  name: OnOpening()\n  nameWithType: WebChannelFactory<TChannel>.OnOpening()\n  fullName: WebChannelFactory<TChannel>.OnOpening()\n  type: Method\n  assemblies:\n  - System.ServiceModel.Web\n  namespace: System.ServiceModel.Web\n  summary: This method is called when the <xref href=\"System.ServiceModel.Web.WebChannelFactory`1\"></xref> is opened.\n  remarks: When this method is called, if the <xref:System.ServiceModel.Web.WebChannelFactory%601> is not already associated with a binding a new <xref:System.ServiceModel.WebHttpBinding> is created based on the URI scheme of the remote address. Bindings with an HTTPS remote address are appropriately configured with the <xref:System.ServiceModel.WebHttpSecurity.Mode%2A> property set to <xref:System.ServiceModel.WebHttpSecurityMode.Transport> and the <xref:System.ServiceModel.WebHttpSecurity.Transport%2A> property set to `None`. The <xref:System.ServiceModel.Web.WebChannelFactory%601> adds an instance of <xref:System.ServiceModel.Description.WebHttpBehavior> to the endpoint if one does not already exist.\n  syntax:\n    content: protected override void OnOpening ();\n    parameters: []\n  overload: System.ServiceModel.Web.WebChannelFactory`1.OnOpening*\n  exceptions: []\n  version:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.ServiceModel.Web/WebChannelFactory`1.xml\n  ms.technology:\n  - dotnet-standard\n  author: Erikre\n  ms.author: erikre\n  manager: erikre\nreferences:\n- uid: System.ServiceModel.ChannelFactory`1\n  parent: System.ServiceModel\n  isExternal: false\n  name: ChannelFactory<TChannel>\n  nameWithType: ChannelFactory<TChannel>\n  fullName: System.ServiceModel.ChannelFactory<TChannel>\n- uid: System.ServiceModel.Web.WebChannelFactory`1.#ctor\n  parent: System.ServiceModel.Web.WebChannelFactory`1\n  isExternal: false\n  name: WebChannelFactory<TChannel>()\n  nameWithType: WebChannelFactory<TChannel>.WebChannelFactory<TChannel>()\n  fullName: WebChannelFactory<TChannel>.WebChannelFactory<TChannel>()\n- uid: System.ServiceModel.Web.WebChannelFactory`1.#ctor(System.ServiceModel.Channels.Binding)\n  parent: System.ServiceModel.Web.WebChannelFactory`1\n  isExternal: false\n  name: WebChannelFactory<TChannel>(Binding)\n  nameWithType: WebChannelFactory<TChannel>.WebChannelFactory<TChannel>(Binding)\n  fullName: WebChannelFactory<TChannel>.WebChannelFactory<TChannel>(Binding)\n- uid: System.ServiceModel.Channels.Binding\n  parent: System.ServiceModel.Channels\n  isExternal: false\n  name: Binding\n  nameWithType: Binding\n  fullName: System.ServiceModel.Channels.Binding\n- uid: System.ServiceModel.Web.WebChannelFactory`1.#ctor(System.ServiceModel.Description.ServiceEndpoint)\n  parent: System.ServiceModel.Web.WebChannelFactory`1\n  isExternal: false\n  name: WebChannelFactory<TChannel>(ServiceEndpoint)\n  nameWithType: WebChannelFactory<TChannel>.WebChannelFactory<TChannel>(ServiceEndpoint)\n  fullName: WebChannelFactory<TChannel>.WebChannelFactory<TChannel>(ServiceEndpoint)\n- uid: System.ServiceModel.Description.ServiceEndpoint\n  parent: System.ServiceModel.Description\n  isExternal: false\n  name: ServiceEndpoint\n  nameWithType: ServiceEndpoint\n  fullName: System.ServiceModel.Description.ServiceEndpoint\n- uid: System.ServiceModel.Web.WebChannelFactory`1.#ctor(System.String)\n  parent: System.ServiceModel.Web.WebChannelFactory`1\n  isExternal: false\n  name: WebChannelFactory<TChannel>(String)\n  nameWithType: WebChannelFactory<TChannel>.WebChannelFactory<TChannel>(String)\n  fullName: WebChannelFactory<TChannel>.WebChannelFactory<TChannel>(String)\n- uid: System.String\n  parent: System\n  isExternal: false\n  name: String\n  nameWithType: String\n  fullName: System.String\n- uid: System.ServiceModel.Web.WebChannelFactory`1.#ctor(System.Type)\n  parent: System.ServiceModel.Web.WebChannelFactory`1\n  isExternal: false\n  name: WebChannelFactory<TChannel>(Type)\n  nameWithType: WebChannelFactory<TChannel>.WebChannelFactory<TChannel>(Type)\n  fullName: WebChannelFactory<TChannel>.WebChannelFactory<TChannel>(Type)\n- uid: System.Type\n  parent: System\n  isExternal: false\n  name: Type\n  nameWithType: Type\n  fullName: System.Type\n- uid: System.ServiceModel.Web.WebChannelFactory`1.#ctor(System.Uri)\n  parent: System.ServiceModel.Web.WebChannelFactory`1\n  isExternal: false\n  name: WebChannelFactory<TChannel>(Uri)\n  nameWithType: WebChannelFactory<TChannel>.WebChannelFactory<TChannel>(Uri)\n  fullName: WebChannelFactory<TChannel>.WebChannelFactory<TChannel>(Uri)\n- uid: System.Uri\n  parent: System\n  isExternal: false\n  name: Uri\n  nameWithType: Uri\n  fullName: System.Uri\n- uid: System.ServiceModel.Web.WebChannelFactory`1.#ctor(System.ServiceModel.Channels.Binding,System.Uri)\n  parent: System.ServiceModel.Web.WebChannelFactory`1\n  isExternal: false\n  name: WebChannelFactory<TChannel>(Binding, Uri)\n  nameWithType: WebChannelFactory<TChannel>.WebChannelFactory<TChannel>(Binding, Uri)\n  fullName: WebChannelFactory<TChannel>.WebChannelFactory<TChannel>(Binding, Uri)\n- uid: System.ServiceModel.Web.WebChannelFactory`1.#ctor(System.String,System.Uri)\n  parent: System.ServiceModel.Web.WebChannelFactory`1\n  isExternal: false\n  name: WebChannelFactory<TChannel>(String, Uri)\n  nameWithType: WebChannelFactory<TChannel>.WebChannelFactory<TChannel>(String, Uri)\n  fullName: WebChannelFactory<TChannel>.WebChannelFactory<TChannel>(String, Uri)\n- uid: System.ServiceModel.Web.WebChannelFactory`1.OnOpening\n  parent: System.ServiceModel.Web.WebChannelFactory`1\n  isExternal: false\n  name: OnOpening()\n  nameWithType: WebChannelFactory<TChannel>.OnOpening()\n  fullName: WebChannelFactory<TChannel>.OnOpening()\n- uid: System.ServiceModel.Web.WebChannelFactory`1.#ctor*\n  parent: System.ServiceModel.Web.WebChannelFactory`1\n  isExternal: false\n  name: WebChannelFactory<TChannel>\n  nameWithType: WebChannelFactory<TChannel>.WebChannelFactory<TChannel>\n  fullName: WebChannelFactory<TChannel>.WebChannelFactory<TChannel>\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - xamarinmac-3.0\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.ServiceModel.Web/WebChannelFactory`1.xml\n- uid: System.ServiceModel.Web.WebChannelFactory`1.OnOpening*\n  parent: System.ServiceModel.Web.WebChannelFactory`1\n  isExternal: false\n  name: OnOpening\n  nameWithType: WebChannelFactory<TChannel>.OnOpening\n  fullName: WebChannelFactory<TChannel>.OnOpening\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.ServiceModel.Web/WebChannelFactory`1.xml\n- uid: System.Object.Equals(System.Object)\n  parent: System.Object\n  isExternal: false\n  name: Equals(Object)\n  nameWithType: Object.Equals(Object)\n  fullName: Object.Equals(Object)\n- uid: System.Object.Equals(System.Object,System.Object)\n  parent: System.Object\n  isExternal: false\n  name: Equals(Object, Object)\n  nameWithType: Object.Equals(Object, Object)\n  fullName: Object.Equals(Object, Object)\n- uid: System.Object.GetHashCode\n  parent: System.Object\n  isExternal: false\n  name: GetHashCode()\n  nameWithType: Object.GetHashCode()\n  fullName: Object.GetHashCode()\n- uid: System.Object.GetType\n  parent: System.Object\n  isExternal: false\n  name: GetType()\n  nameWithType: Object.GetType()\n  fullName: Object.GetType()\n- uid: System.Object.MemberwiseClone\n  parent: System.Object\n  isExternal: false\n  name: MemberwiseClone()\n  nameWithType: Object.MemberwiseClone()\n  fullName: Object.MemberwiseClone()\n- uid: System.Object.ReferenceEquals(System.Object,System.Object)\n  parent: System.Object\n  isExternal: false\n  name: ReferenceEquals(Object, Object)\n  nameWithType: Object.ReferenceEquals(Object, Object)\n  fullName: Object.ReferenceEquals(Object, Object)\n- uid: System.Object.ToString\n  parent: System.Object\n  isExternal: false\n  name: ToString()\n  nameWithType: Object.ToString()\n  fullName: Object.ToString()\n- uid: System.ServiceModel.Channels.CommunicationObject.Abort\n  parent: System.ServiceModel.Channels.CommunicationObject\n  isExternal: false\n  name: Abort()\n  nameWithType: CommunicationObject.Abort()\n  fullName: CommunicationObject.Abort()\n- uid: System.ServiceModel.Channels.CommunicationObject.BeginClose(System.AsyncCallback,System.Object)\n  parent: System.ServiceModel.Channels.CommunicationObject\n  isExternal: false\n  name: BeginClose(AsyncCallback, Object)\n  nameWithType: CommunicationObject.BeginClose(AsyncCallback, Object)\n  fullName: CommunicationObject.BeginClose(AsyncCallback, Object)\n- uid: System.ServiceModel.Channels.CommunicationObject.BeginClose(System.TimeSpan,System.AsyncCallback,System.Object)\n  parent: System.ServiceModel.Channels.CommunicationObject\n  isExternal: false\n  name: BeginClose(TimeSpan, AsyncCallback, Object)\n  nameWithType: CommunicationObject.BeginClose(TimeSpan, AsyncCallback, Object)\n  fullName: CommunicationObject.BeginClose(TimeSpan, AsyncCallback, Object)\n- uid: System.ServiceModel.Channels.CommunicationObject.BeginOpen(System.AsyncCallback,System.Object)\n  parent: System.ServiceModel.Channels.CommunicationObject\n  isExternal: false\n  name: BeginOpen(AsyncCallback, Object)\n  nameWithType: CommunicationObject.BeginOpen(AsyncCallback, Object)\n  fullName: CommunicationObject.BeginOpen(AsyncCallback, Object)\n- uid: System.ServiceModel.Channels.CommunicationObject.BeginOpen(System.TimeSpan,System.AsyncCallback,System.Object)\n  parent: System.ServiceModel.Channels.CommunicationObject\n  isExternal: false\n  name: BeginOpen(TimeSpan, AsyncCallback, Object)\n  nameWithType: CommunicationObject.BeginOpen(TimeSpan, AsyncCallback, Object)\n  fullName: CommunicationObject.BeginOpen(TimeSpan, AsyncCallback, Object)\n- uid: System.ServiceModel.Channels.CommunicationObject.Close\n  parent: System.ServiceModel.Channels.CommunicationObject\n  isExternal: false\n  name: Close()\n  nameWithType: CommunicationObject.Close()\n  fullName: CommunicationObject.Close()\n- uid: System.ServiceModel.Channels.CommunicationObject.Close(System.TimeSpan)\n  parent: System.ServiceModel.Channels.CommunicationObject\n  isExternal: false\n  name: Close(TimeSpan)\n  nameWithType: CommunicationObject.Close(TimeSpan)\n  fullName: CommunicationObject.Close(TimeSpan)\n- uid: System.ServiceModel.Channels.CommunicationObject.Closed\n  parent: System.ServiceModel.Channels.CommunicationObject\n  isExternal: false\n  name: Closed\n  nameWithType: CommunicationObject.Closed\n  fullName: CommunicationObject.Closed\n- uid: System.ServiceModel.Channels.CommunicationObject.Closing\n  parent: System.ServiceModel.Channels.CommunicationObject\n  isExternal: false\n  name: Closing\n  nameWithType: CommunicationObject.Closing\n  fullName: CommunicationObject.Closing\n- uid: System.ServiceModel.ChannelFactory.DefaultCloseTimeout\n  parent: System.ServiceModel.ChannelFactory\n  isExternal: false\n  name: DefaultCloseTimeout\n  nameWithType: ChannelFactory.DefaultCloseTimeout\n  fullName: ChannelFactory.DefaultCloseTimeout\n- uid: System.ServiceModel.ChannelFactory.DefaultOpenTimeout\n  parent: System.ServiceModel.ChannelFactory\n  isExternal: false\n  name: DefaultOpenTimeout\n  nameWithType: ChannelFactory.DefaultOpenTimeout\n  fullName: ChannelFactory.DefaultOpenTimeout\n- uid: System.ServiceModel.Channels.CommunicationObject.EndClose(System.IAsyncResult)\n  parent: System.ServiceModel.Channels.CommunicationObject\n  isExternal: false\n  name: EndClose(IAsyncResult)\n  nameWithType: CommunicationObject.EndClose(IAsyncResult)\n  fullName: CommunicationObject.EndClose(IAsyncResult)\n- uid: System.ServiceModel.Channels.CommunicationObject.EndOpen(System.IAsyncResult)\n  parent: System.ServiceModel.Channels.CommunicationObject\n  isExternal: false\n  name: EndOpen(IAsyncResult)\n  nameWithType: CommunicationObject.EndOpen(IAsyncResult)\n  fullName: CommunicationObject.EndOpen(IAsyncResult)\n- uid: System.ServiceModel.Channels.CommunicationObject.Fault\n  parent: System.ServiceModel.Channels.CommunicationObject\n  isExternal: false\n  name: Fault()\n  nameWithType: CommunicationObject.Fault()\n  fullName: CommunicationObject.Fault()\n- uid: System.ServiceModel.Channels.CommunicationObject.Faulted\n  parent: System.ServiceModel.Channels.CommunicationObject\n  isExternal: false\n  name: Faulted\n  nameWithType: CommunicationObject.Faulted\n  fullName: CommunicationObject.Faulted\n- uid: System.ServiceModel.Channels.CommunicationObject.GetCommunicationObjectType\n  parent: System.ServiceModel.Channels.CommunicationObject\n  isExternal: false\n  name: GetCommunicationObjectType()\n  nameWithType: CommunicationObject.GetCommunicationObjectType()\n  fullName: CommunicationObject.GetCommunicationObjectType()\n- uid: System.ServiceModel.Channels.CommunicationObject.IsDisposed\n  parent: System.ServiceModel.Channels.CommunicationObject\n  isExternal: false\n  name: IsDisposed\n  nameWithType: CommunicationObject.IsDisposed\n  fullName: CommunicationObject.IsDisposed\n- uid: System.ServiceModel.ChannelFactory.OnAbort\n  parent: System.ServiceModel.ChannelFactory\n  isExternal: false\n  name: OnAbort()\n  nameWithType: ChannelFactory.OnAbort()\n  fullName: ChannelFactory.OnAbort()\n- uid: System.ServiceModel.ChannelFactory.OnBeginClose(System.TimeSpan,System.AsyncCallback,System.Object)\n  parent: System.ServiceModel.ChannelFactory\n  isExternal: false\n  name: OnBeginClose(TimeSpan, AsyncCallback, Object)\n  nameWithType: ChannelFactory.OnBeginClose(TimeSpan, AsyncCallback, Object)\n  fullName: ChannelFactory.OnBeginClose(TimeSpan, AsyncCallback, Object)\n- uid: System.ServiceModel.ChannelFactory.OnBeginOpen(System.TimeSpan,System.AsyncCallback,System.Object)\n  parent: System.ServiceModel.ChannelFactory\n  isExternal: false\n  name: OnBeginOpen(TimeSpan, AsyncCallback, Object)\n  nameWithType: ChannelFactory.OnBeginOpen(TimeSpan, AsyncCallback, Object)\n  fullName: ChannelFactory.OnBeginOpen(TimeSpan, AsyncCallback, Object)\n- uid: System.ServiceModel.ChannelFactory.OnClose(System.TimeSpan)\n  parent: System.ServiceModel.ChannelFactory\n  isExternal: false\n  name: OnClose(TimeSpan)\n  nameWithType: ChannelFactory.OnClose(TimeSpan)\n  fullName: ChannelFactory.OnClose(TimeSpan)\n- uid: System.ServiceModel.Channels.CommunicationObject.OnClosed\n  parent: System.ServiceModel.Channels.CommunicationObject\n  isExternal: false\n  name: OnClosed()\n  nameWithType: CommunicationObject.OnClosed()\n  fullName: CommunicationObject.OnClosed()\n- uid: System.ServiceModel.Channels.CommunicationObject.OnClosing\n  parent: System.ServiceModel.Channels.CommunicationObject\n  isExternal: false\n  name: OnClosing()\n  nameWithType: CommunicationObject.OnClosing()\n  fullName: CommunicationObject.OnClosing()\n- uid: System.ServiceModel.ChannelFactory.OnEndClose(System.IAsyncResult)\n  parent: System.ServiceModel.ChannelFactory\n  isExternal: false\n  name: OnEndClose(IAsyncResult)\n  nameWithType: ChannelFactory.OnEndClose(IAsyncResult)\n  fullName: ChannelFactory.OnEndClose(IAsyncResult)\n- uid: System.ServiceModel.ChannelFactory.OnEndOpen(System.IAsyncResult)\n  parent: System.ServiceModel.ChannelFactory\n  isExternal: false\n  name: OnEndOpen(IAsyncResult)\n  nameWithType: ChannelFactory.OnEndOpen(IAsyncResult)\n  fullName: ChannelFactory.OnEndOpen(IAsyncResult)\n- uid: System.ServiceModel.Channels.CommunicationObject.OnFaulted\n  parent: System.ServiceModel.Channels.CommunicationObject\n  isExternal: false\n  name: OnFaulted()\n  nameWithType: CommunicationObject.OnFaulted()\n  fullName: CommunicationObject.OnFaulted()\n- uid: System.ServiceModel.ChannelFactory.OnOpen(System.TimeSpan)\n  parent: System.ServiceModel.ChannelFactory\n  isExternal: false\n  name: OnOpen(TimeSpan)\n  nameWithType: ChannelFactory.OnOpen(TimeSpan)\n  fullName: ChannelFactory.OnOpen(TimeSpan)\n- uid: System.ServiceModel.ChannelFactory.OnOpened\n  parent: System.ServiceModel.ChannelFactory\n  isExternal: false\n  name: OnOpened()\n  nameWithType: ChannelFactory.OnOpened()\n  fullName: ChannelFactory.OnOpened()\n- uid: System.ServiceModel.Channels.CommunicationObject.Open\n  parent: System.ServiceModel.Channels.CommunicationObject\n  isExternal: false\n  name: Open()\n  nameWithType: CommunicationObject.Open()\n  fullName: CommunicationObject.Open()\n- uid: System.ServiceModel.Channels.CommunicationObject.Open(System.TimeSpan)\n  parent: System.ServiceModel.Channels.CommunicationObject\n  isExternal: false\n  name: Open(TimeSpan)\n  nameWithType: CommunicationObject.Open(TimeSpan)\n  fullName: CommunicationObject.Open(TimeSpan)\n- uid: System.ServiceModel.Channels.CommunicationObject.Opened\n  parent: System.ServiceModel.Channels.CommunicationObject\n  isExternal: false\n  name: Opened\n  nameWithType: CommunicationObject.Opened\n  fullName: CommunicationObject.Opened\n- uid: System.ServiceModel.Channels.CommunicationObject.Opening\n  parent: System.ServiceModel.Channels.CommunicationObject\n  isExternal: false\n  name: Opening\n  nameWithType: CommunicationObject.Opening\n  fullName: CommunicationObject.Opening\n- uid: System.ServiceModel.Channels.CommunicationObject.State\n  parent: System.ServiceModel.Channels.CommunicationObject\n  isExternal: false\n  name: State\n  nameWithType: CommunicationObject.State\n  fullName: CommunicationObject.State\n- uid: System.ServiceModel.Channels.CommunicationObject.ThisLock\n  parent: System.ServiceModel.Channels.CommunicationObject\n  isExternal: false\n  name: ThisLock\n  nameWithType: CommunicationObject.ThisLock\n  fullName: CommunicationObject.ThisLock\n- uid: System.ServiceModel.Channels.CommunicationObject.ThrowIfDisposed\n  parent: System.ServiceModel.Channels.CommunicationObject\n  isExternal: false\n  name: ThrowIfDisposed()\n  nameWithType: CommunicationObject.ThrowIfDisposed()\n  fullName: CommunicationObject.ThrowIfDisposed()\n- uid: System.ServiceModel.Channels.CommunicationObject.ThrowIfDisposedOrImmutable\n  parent: System.ServiceModel.Channels.CommunicationObject\n  isExternal: false\n  name: ThrowIfDisposedOrImmutable()\n  nameWithType: CommunicationObject.ThrowIfDisposedOrImmutable()\n  fullName: CommunicationObject.ThrowIfDisposedOrImmutable()\n- uid: System.ServiceModel.Channels.CommunicationObject.ThrowIfDisposedOrNotOpen\n  parent: System.ServiceModel.Channels.CommunicationObject\n  isExternal: false\n  name: ThrowIfDisposedOrNotOpen()\n  nameWithType: CommunicationObject.ThrowIfDisposedOrNotOpen()\n  fullName: CommunicationObject.ThrowIfDisposedOrNotOpen()\n- uid: System.ServiceModel.ChannelFactory.ApplyConfiguration(System.String)\n  parent: System.ServiceModel.ChannelFactory\n  isExternal: false\n  name: ApplyConfiguration(String)\n  nameWithType: ChannelFactory.ApplyConfiguration(String)\n  fullName: ChannelFactory.ApplyConfiguration(String)\n- uid: System.ServiceModel.ChannelFactory`1.CreateDescription\n  parent: System.ServiceModel.ChannelFactory`1\n  isExternal: false\n  name: CreateDescription()\n  nameWithType: ChannelFactory<TChannel>.CreateDescription()\n  fullName: ChannelFactory<TChannel>.CreateDescription()\n- uid: System.ServiceModel.ChannelFactory.CreateFactory\n  parent: System.ServiceModel.ChannelFactory\n  isExternal: false\n  name: CreateFactory()\n  nameWithType: ChannelFactory.CreateFactory()\n  fullName: ChannelFactory.CreateFactory()\n- uid: System.ServiceModel.ChannelFactory.Credentials\n  parent: System.ServiceModel.ChannelFactory\n  isExternal: false\n  name: Credentials\n  nameWithType: ChannelFactory.Credentials\n  fullName: ChannelFactory.Credentials\n- uid: System.ServiceModel.ChannelFactory.Endpoint\n  parent: System.ServiceModel.ChannelFactory\n  isExternal: false\n  name: Endpoint\n  nameWithType: ChannelFactory.Endpoint\n  fullName: ChannelFactory.Endpoint\n- uid: System.ServiceModel.ChannelFactory.EnsureOpened\n  parent: System.ServiceModel.ChannelFactory\n  isExternal: false\n  name: EnsureOpened()\n  nameWithType: ChannelFactory.EnsureOpened()\n  fullName: ChannelFactory.EnsureOpened()\n- uid: System.ServiceModel.ChannelFactory.GetProperty``1\n  parent: System.ServiceModel.ChannelFactory\n  isExternal: false\n  name: GetProperty<T>()\n  nameWithType: ChannelFactory.GetProperty<T>()\n  fullName: ChannelFactory.GetProperty<T>()\n- uid: System.ServiceModel.ChannelFactory.InitializeEndpoint(System.String,System.ServiceModel.EndpointAddress)\n  parent: System.ServiceModel.ChannelFactory\n  isExternal: false\n  name: InitializeEndpoint(String, EndpointAddress)\n  nameWithType: ChannelFactory.InitializeEndpoint(String, EndpointAddress)\n  fullName: ChannelFactory.InitializeEndpoint(String, EndpointAddress)\n- uid: System.ServiceModel.ChannelFactory.InitializeEndpoint(System.ServiceModel.Channels.Binding,System.ServiceModel.EndpointAddress)\n  parent: System.ServiceModel.ChannelFactory\n  isExternal: false\n  name: InitializeEndpoint(Binding, EndpointAddress)\n  nameWithType: ChannelFactory.InitializeEndpoint(Binding, EndpointAddress)\n  fullName: ChannelFactory.InitializeEndpoint(Binding, EndpointAddress)\n- uid: System.ServiceModel.ChannelFactory.InitializeEndpoint(System.ServiceModel.Description.ServiceEndpoint)\n  parent: System.ServiceModel.ChannelFactory\n  isExternal: false\n  name: InitializeEndpoint(ServiceEndpoint)\n  nameWithType: ChannelFactory.InitializeEndpoint(ServiceEndpoint)\n  fullName: ChannelFactory.InitializeEndpoint(ServiceEndpoint)\n- uid: System.ServiceModel.ChannelFactory.System#IDisposable#Dispose\n  parent: System.ServiceModel.ChannelFactory\n  isExternal: false\n  name: IDisposable.Dispose()\n  nameWithType: ChannelFactory.IDisposable.Dispose()\n  fullName: ChannelFactory.IDisposable.Dispose()\n- uid: System.ServiceModel.ChannelFactory`1.CreateChannel(System.ServiceModel.Channels.Binding,System.ServiceModel.EndpointAddress,System.Uri)\n  parent: System.ServiceModel.ChannelFactory`1\n  isExternal: false\n  name: CreateChannel(Binding, EndpointAddress, Uri)\n  nameWithType: ChannelFactory<TChannel>.CreateChannel(Binding, EndpointAddress, Uri)\n  fullName: ChannelFactory<TChannel>.CreateChannel(Binding, EndpointAddress, Uri)\n- uid: System.ServiceModel.ChannelFactory`1.CreateChannel(System.ServiceModel.EndpointAddress,System.Uri)\n  parent: System.ServiceModel.ChannelFactory`1\n  isExternal: false\n  name: CreateChannel(EndpointAddress, Uri)\n  nameWithType: ChannelFactory<TChannel>.CreateChannel(EndpointAddress, Uri)\n  fullName: ChannelFactory<TChannel>.CreateChannel(EndpointAddress, Uri)\n- uid: System.ServiceModel.ChannelFactory`1.CreateChannel(System.ServiceModel.Channels.Binding,System.ServiceModel.EndpointAddress)\n  parent: System.ServiceModel.ChannelFactory`1\n  isExternal: false\n  name: CreateChannel(Binding, EndpointAddress)\n  nameWithType: ChannelFactory<TChannel>.CreateChannel(Binding, EndpointAddress)\n  fullName: ChannelFactory<TChannel>.CreateChannel(Binding, EndpointAddress)\n- uid: System.ServiceModel.ChannelFactory`1.CreateChannel(System.ServiceModel.EndpointAddress)\n  parent: System.ServiceModel.ChannelFactory`1\n  isExternal: false\n  name: CreateChannel(EndpointAddress)\n  nameWithType: ChannelFactory<TChannel>.CreateChannel(EndpointAddress)\n  fullName: ChannelFactory<TChannel>.CreateChannel(EndpointAddress)\n- uid: System.ServiceModel.ChannelFactory`1.CreateChannel\n  parent: System.ServiceModel.ChannelFactory`1\n  isExternal: false\n  name: CreateChannel()\n  nameWithType: ChannelFactory<TChannel>.CreateChannel()\n  fullName: ChannelFactory<TChannel>.CreateChannel()\n- uid: System.ServiceModel.ChannelFactory`1.CreateChannel(System.String)\n  parent: System.ServiceModel.ChannelFactory`1\n  isExternal: false\n  name: CreateChannel(String)\n  nameWithType: ChannelFactory<TChannel>.CreateChannel(String)\n  fullName: ChannelFactory<TChannel>.CreateChannel(String)\n- uid: System.ServiceModel.ChannelFactory`1.CreateChannelWithActAsToken(System.IdentityModel.Tokens.SecurityToken)\n  parent: System.ServiceModel.ChannelFactory`1\n  isExternal: false\n  name: CreateChannelWithActAsToken(SecurityToken)\n  nameWithType: ChannelFactory<TChannel>.CreateChannelWithActAsToken(SecurityToken)\n  fullName: ChannelFactory<TChannel>.CreateChannelWithActAsToken(SecurityToken)\n- uid: System.ServiceModel.ChannelFactory`1.CreateChannelWithActAsToken(System.IdentityModel.Tokens.SecurityToken,System.ServiceModel.EndpointAddress)\n  parent: System.ServiceModel.ChannelFactory`1\n  isExternal: false\n  name: CreateChannelWithActAsToken(SecurityToken, EndpointAddress)\n  nameWithType: ChannelFactory<TChannel>.CreateChannelWithActAsToken(SecurityToken, EndpointAddress)\n  fullName: ChannelFactory<TChannel>.CreateChannelWithActAsToken(SecurityToken, EndpointAddress)\n- uid: System.ServiceModel.ChannelFactory`1.CreateChannelWithActAsToken(System.IdentityModel.Tokens.SecurityToken,System.ServiceModel.EndpointAddress,System.Uri)\n  parent: System.ServiceModel.ChannelFactory`1\n  isExternal: false\n  name: CreateChannelWithActAsToken(SecurityToken, EndpointAddress, Uri)\n  nameWithType: ChannelFactory<TChannel>.CreateChannelWithActAsToken(SecurityToken, EndpointAddress, Uri)\n  fullName: ChannelFactory<TChannel>.CreateChannelWithActAsToken(SecurityToken, EndpointAddress, Uri)\n- uid: System.ServiceModel.ChannelFactory`1.CreateChannelWithIssuedToken(System.IdentityModel.Tokens.SecurityToken)\n  parent: System.ServiceModel.ChannelFactory`1\n  isExternal: false\n  name: CreateChannelWithIssuedToken(SecurityToken)\n  nameWithType: ChannelFactory<TChannel>.CreateChannelWithIssuedToken(SecurityToken)\n  fullName: ChannelFactory<TChannel>.CreateChannelWithIssuedToken(SecurityToken)\n- uid: System.ServiceModel.ChannelFactory`1.CreateChannelWithIssuedToken(System.IdentityModel.Tokens.SecurityToken,System.ServiceModel.EndpointAddress)\n  parent: System.ServiceModel.ChannelFactory`1\n  isExternal: false\n  name: CreateChannelWithIssuedToken(SecurityToken, EndpointAddress)\n  nameWithType: ChannelFactory<TChannel>.CreateChannelWithIssuedToken(SecurityToken, EndpointAddress)\n  fullName: ChannelFactory<TChannel>.CreateChannelWithIssuedToken(SecurityToken, EndpointAddress)\n- uid: System.ServiceModel.ChannelFactory`1.CreateChannelWithIssuedToken(System.IdentityModel.Tokens.SecurityToken,System.ServiceModel.EndpointAddress,System.Uri)\n  parent: System.ServiceModel.ChannelFactory`1\n  isExternal: false\n  name: CreateChannelWithIssuedToken(SecurityToken, EndpointAddress, Uri)\n  nameWithType: ChannelFactory<TChannel>.CreateChannelWithIssuedToken(SecurityToken, EndpointAddress, Uri)\n  fullName: ChannelFactory<TChannel>.CreateChannelWithIssuedToken(SecurityToken, EndpointAddress, Uri)\n- uid: System.ServiceModel.ChannelFactory`1.CreateChannelWithOnBehalfOfToken(System.IdentityModel.Tokens.SecurityToken,System.ServiceModel.EndpointAddress,System.Uri)\n  parent: System.ServiceModel.ChannelFactory`1\n  isExternal: false\n  name: CreateChannelWithOnBehalfOfToken(SecurityToken, EndpointAddress, Uri)\n  nameWithType: ChannelFactory<TChannel>.CreateChannelWithOnBehalfOfToken(SecurityToken, EndpointAddress, Uri)\n  fullName: ChannelFactory<TChannel>.CreateChannelWithOnBehalfOfToken(SecurityToken, EndpointAddress, Uri)\n- uid: System.ServiceModel.ChannelFactory`1.CreateChannelWithOnBehalfOfToken(System.IdentityModel.Tokens.SecurityToken)\n  parent: System.ServiceModel.ChannelFactory`1\n  isExternal: false\n  name: CreateChannelWithOnBehalfOfToken(SecurityToken)\n  nameWithType: ChannelFactory<TChannel>.CreateChannelWithOnBehalfOfToken(SecurityToken)\n  fullName: ChannelFactory<TChannel>.CreateChannelWithOnBehalfOfToken(SecurityToken)\n- uid: System.ServiceModel.ChannelFactory`1.CreateChannelWithOnBehalfOfToken(System.IdentityModel.Tokens.SecurityToken,System.ServiceModel.EndpointAddress)\n  parent: System.ServiceModel.ChannelFactory`1\n  isExternal: false\n  name: CreateChannelWithOnBehalfOfToken(SecurityToken, EndpointAddress)\n  nameWithType: ChannelFactory<TChannel>.CreateChannelWithOnBehalfOfToken(SecurityToken, EndpointAddress)\n  fullName: ChannelFactory<TChannel>.CreateChannelWithOnBehalfOfToken(SecurityToken, EndpointAddress)\n"}