{"nodes":[{"content":"Provides a reply that is correlated to an incoming request.","nodes":[{"pos":[0,59],"content":"Provides a reply that is correlated to an incoming request.","nodes":[{"content":"Provides a reply that is correlated to an incoming request.","pos":[0,59]}]}],"pos":[1415,1475],"yaml":true},{"content":"You get a request context from an <xref:System.ServiceModel.Channels.IReplyChannel>. Each <xref:System.ServiceModel.Channels.RequestContext> encapsulates the information required to reply to the request, so that you do not have to block on the channel when waiting for each request message to receive a reply.  \n  \n In the request/reply model, the <xref:System.ServiceModel.Channels.RequestContext> object is the link between the request that comes in and the reply that goes out. When the server receives a request, it provides a <xref:System.ServiceModel.Channels.RequestContext> instance that represents the request to the channel. The request context contains the original request message among other useful properties. This request context is then stashed inside the <xref:System.ServiceModel.OperationContext> for retrieval by your service. You typically use the <xref:System.ServiceModel.OperationContext.Current%2A> property to access the request of the current operation.  \n  \n The value of the <xref:System.ServiceModel.Channels.RequestContext> can be `null`. Because the role of the request context is to link requests to replies, it does not make sense to have a request context when you do not have a reply, and so in this case the context is set to `null`. For a one-way operation on top of the request/reply model, the server receives requests but does not send back a response to the client. So if the <xref:System.ServiceModel.Channels.RequestContext> is `null` unexpectedly, check first whether the operation contract is IsOneWay.  \n  \n Special note for Managed C++ users deriving from this class:  \n  \n-   Put your cleanup code in (On)(Begin)Close (and/or OnAbort), not in a destructor.  \n  \n-   Avoid destructors: they cause the compiler to auto-generate <xref:System.IDisposable>.  \n  \n-   Avoid non-reference members: they can cause the compiler to auto-generate <xref:System.IDisposable>.  \n  \n-   Avoid finalizers; but if you include one, you should suppress the build warning and call <xref:System.GC.SuppressFinalize%28System.Object%29> and the finalizer itself from (On)(Begin)Close (and/or OnAbort) to emulate what would have been the auto-generated <xref:System.IDisposable> behavior.","nodes":[{"pos":[0,309],"content":"You get a request context from an <xref:System.ServiceModel.Channels.IReplyChannel>. Each <xref:System.ServiceModel.Channels.RequestContext> encapsulates the information required to reply to the request, so that you do not have to block on the channel when waiting for each request message to receive a reply.","nodes":[{"content":"You get a request context from an <xref:System.ServiceModel.Channels.IReplyChannel>. Each <xref:System.ServiceModel.Channels.RequestContext> encapsulates the information required to reply to the request, so that you do not have to block on the channel when waiting for each request message to receive a reply.","pos":[0,309],"nodes":[{"content":"You get a request context from an <ph id=\"ph1\">&lt;xref:System.ServiceModel.Channels.IReplyChannel&gt;</ph>.","pos":[0,84],"source":"You get a request context from an <xref:System.ServiceModel.Channels.IReplyChannel>."},{"content":"Each <ph id=\"ph1\">&lt;xref:System.ServiceModel.Channels.RequestContext&gt;</ph> encapsulates the information required to reply to the request, so that you do not have to block on the channel when waiting for each request message to receive a reply.","pos":[85,309],"source":" Each <xref:System.ServiceModel.Channels.RequestContext> encapsulates the information required to reply to the request, so that you do not have to block on the channel when waiting for each request message to receive a reply."}]}]},{"pos":[316,980],"content":"In the request/reply model, the <xref:System.ServiceModel.Channels.RequestContext> object is the link between the request that comes in and the reply that goes out. When the server receives a request, it provides a <xref:System.ServiceModel.Channels.RequestContext> instance that represents the request to the channel. The request context contains the original request message among other useful properties. This request context is then stashed inside the <xref:System.ServiceModel.OperationContext> for retrieval by your service. You typically use the <xref:System.ServiceModel.OperationContext.Current%2A> property to access the request of the current operation.","nodes":[{"content":"In the request/reply model, the <xref:System.ServiceModel.Channels.RequestContext> object is the link between the request that comes in and the reply that goes out. When the server receives a request, it provides a <xref:System.ServiceModel.Channels.RequestContext> instance that represents the request to the channel. The request context contains the original request message among other useful properties. This request context is then stashed inside the <xref:System.ServiceModel.OperationContext> for retrieval by your service. You typically use the <xref:System.ServiceModel.OperationContext.Current%2A> property to access the request of the current operation.","pos":[0,664],"nodes":[{"content":"In the request/reply model, the <ph id=\"ph1\">&lt;xref:System.ServiceModel.Channels.RequestContext&gt;</ph> object is the link between the request that comes in and the reply that goes out.","pos":[0,164],"source":"In the request/reply model, the <xref:System.ServiceModel.Channels.RequestContext> object is the link between the request that comes in and the reply that goes out."},{"content":"When the server receives a request, it provides a <ph id=\"ph1\">&lt;xref:System.ServiceModel.Channels.RequestContext&gt;</ph> instance that represents the request to the channel.","pos":[165,318],"source":" When the server receives a request, it provides a <xref:System.ServiceModel.Channels.RequestContext> instance that represents the request to the channel."},{"content":"The request context contains the original request message among other useful properties.","pos":[319,407]},{"content":"This request context is then stashed inside the <ph id=\"ph1\">&lt;xref:System.ServiceModel.OperationContext&gt;</ph> for retrieval by your service.","pos":[408,530],"source":" This request context is then stashed inside the <xref:System.ServiceModel.OperationContext> for retrieval by your service."},{"content":"You typically use the <ph id=\"ph1\">&lt;xref:System.ServiceModel.OperationContext.Current%2A&gt;</ph> property to access the request of the current operation.","pos":[531,664],"source":" You typically use the <xref:System.ServiceModel.OperationContext.Current%2A> property to access the request of the current operation."}]}]},{"pos":[987,1548],"content":"The value of the <xref:System.ServiceModel.Channels.RequestContext> can be `null`. Because the role of the request context is to link requests to replies, it does not make sense to have a request context when you do not have a reply, and so in this case the context is set to `null`. For a one-way operation on top of the request/reply model, the server receives requests but does not send back a response to the client. So if the <xref:System.ServiceModel.Channels.RequestContext> is `null` unexpectedly, check first whether the operation contract is IsOneWay.","nodes":[{"content":"The value of the <ph id=\"ph1\">&lt;xref:System.ServiceModel.Channels.RequestContext&gt;</ph> can be <ph id=\"ph2\">`null`</ph>.","pos":[0,82],"source":"The value of the <xref:System.ServiceModel.Channels.RequestContext> can be `null`."},{"content":"Because the role of the request context is to link requests to replies, it does not make sense to have a request context when you do not have a reply, and so in this case the context is set to <ph id=\"ph1\">`null`</ph>.","pos":[83,283],"source":" Because the role of the request context is to link requests to replies, it does not make sense to have a request context when you do not have a reply, and so in this case the context is set to `null`."},{"content":"For a one-way operation on top of the request/reply model, the server receives requests but does not send back a response to the client.","pos":[284,420]},{"content":"So if the <ph id=\"ph1\">&lt;xref:System.ServiceModel.Channels.RequestContext&gt;</ph> is <ph id=\"ph2\">`null`</ph> unexpectedly, check first whether the operation contract is IsOneWay.","pos":[421,561],"source":" So if the <xref:System.ServiceModel.Channels.RequestContext> is `null` unexpectedly, check first whether the operation contract is IsOneWay."}]},{"pos":[1555,1615],"content":"Special note for Managed C++ users deriving from this class:","nodes":[{"content":"Special note for Managed C++ users deriving from this class:","pos":[0,60]}]},{"pos":[1625,1705],"content":"Put your cleanup code in (On)(Begin)Close (and/or OnAbort), not in a destructor.","nodes":[{"content":"Put your cleanup code in (On)(Begin)Close (and/or OnAbort), not in a destructor.","pos":[0,80]}]},{"pos":[1715,1801],"content":"Avoid destructors: they cause the compiler to auto-generate <xref:System.IDisposable>.","nodes":[{"content":"Avoid destructors: they cause the compiler to auto-generate <ph id=\"ph1\">&lt;xref:System.IDisposable&gt;</ph>.","pos":[0,86],"source":"Avoid destructors: they cause the compiler to auto-generate <xref:System.IDisposable>."}]},{"pos":[1811,1911],"content":"Avoid non-reference members: they can cause the compiler to auto-generate <xref:System.IDisposable>.","nodes":[{"content":"Avoid non-reference members: they can cause the compiler to auto-generate <ph id=\"ph1\">&lt;xref:System.IDisposable&gt;</ph>.","pos":[0,100],"source":"Avoid non-reference members: they can cause the compiler to auto-generate <xref:System.IDisposable>."}]},{"pos":[1921,2213],"content":"Avoid finalizers; but if you include one, you should suppress the build warning and call <xref:System.GC.SuppressFinalize%28System.Object%29> and the finalizer itself from (On)(Begin)Close (and/or OnAbort) to emulate what would have been the auto-generated <xref:System.IDisposable> behavior.","nodes":[{"content":"Avoid finalizers; but if you include one, you should suppress the build warning and call <ph id=\"ph1\">&lt;xref:System.GC.SuppressFinalize%28System.Object%29&gt;</ph> and the finalizer itself from (On)(Begin)Close (and/or OnAbort) to emulate what would have been the auto-generated <ph id=\"ph2\">&lt;xref:System.IDisposable&gt;</ph> behavior.","pos":[0,292],"source":"Avoid finalizers; but if you include one, you should suppress the build warning and call <xref:System.GC.SuppressFinalize%28System.Object%29> and the finalizer itself from (On)(Begin)Close (and/or OnAbort) to emulate what would have been the auto-generated <xref:System.IDisposable> behavior."}]}],"pos":[1486,3716],"yaml":true,"extradata":"MT"},{"content":"Initializes a new instance of the <xref href=\"System.ServiceModel.Channels.RequestContext\"></xref> class.","nodes":[{"pos":[0,105],"content":"Initializes a new instance of the <ph id=\"ph1\">&lt;xref href=\"System.ServiceModel.Channels.RequestContext\"&gt;&lt;/xref&gt;</ph> class.","source":"Initializes a new instance of the <xref href=\"System.ServiceModel.Channels.RequestContext\"></xref> class."}],"pos":[5257,5363],"yaml":true},{"content":"When overridden in a derived class, aborts processing the request associated with the context.","nodes":[{"pos":[0,94],"content":"When overridden in a derived class, aborts processing the request associated with the context.","nodes":[{"content":"When overridden in a derived class, aborts processing the request associated with the context.","pos":[0,94]}]}],"pos":[6581,6676],"yaml":true},{"content":"When overridden in a derived class, begins an asynchronous operation to reply to the request associated with the current context.","nodes":[{"pos":[0,129],"content":"When overridden in a derived class, begins an asynchronous operation to reply to the request associated with the current context.","nodes":[{"content":"When overridden in a derived class, begins an asynchronous operation to reply to the request associated with the current context.","pos":[0,129]}]}],"pos":[8235,8365],"yaml":true},{"content":"Use the asynchronous <xref:System.ServiceModel.Channels.RequestContext.BeginReply%2A> method when the application processing must continue without waiting. Use one of the synchronous <xref:System.ServiceModel.Channels.RequestContext.Reply%2A> methods when it is acceptable for the current thread to be blocked while it replies to the request message or until the time-out interval is exceeded.  \n  \n This method receives notification, through a callback, of the identity of the event handler for the operation. The operation is not complete until either the reply is sent or the time-out occurs.","nodes":[{"pos":[0,393],"content":"Use the asynchronous <xref:System.ServiceModel.Channels.RequestContext.BeginReply%2A> method when the application processing must continue without waiting. Use one of the synchronous <xref:System.ServiceModel.Channels.RequestContext.Reply%2A> methods when it is acceptable for the current thread to be blocked while it replies to the request message or until the time-out interval is exceeded.","nodes":[{"content":"Use the asynchronous <xref:System.ServiceModel.Channels.RequestContext.BeginReply%2A> method when the application processing must continue without waiting. Use one of the synchronous <xref:System.ServiceModel.Channels.RequestContext.Reply%2A> methods when it is acceptable for the current thread to be blocked while it replies to the request message or until the time-out interval is exceeded.","pos":[0,393],"nodes":[{"content":"Use the asynchronous <ph id=\"ph1\">&lt;xref:System.ServiceModel.Channels.RequestContext.BeginReply%2A&gt;</ph> method when the application processing must continue without waiting.","pos":[0,155],"source":"Use the asynchronous <xref:System.ServiceModel.Channels.RequestContext.BeginReply%2A> method when the application processing must continue without waiting."},{"content":"Use one of the synchronous <ph id=\"ph1\">&lt;xref:System.ServiceModel.Channels.RequestContext.Reply%2A&gt;</ph> methods when it is acceptable for the current thread to be blocked while it replies to the request message or until the time-out interval is exceeded.","pos":[156,393],"source":" Use one of the synchronous <xref:System.ServiceModel.Channels.RequestContext.Reply%2A> methods when it is acceptable for the current thread to be blocked while it replies to the request message or until the time-out interval is exceeded."}]}]},{"pos":[400,595],"content":"This method receives notification, through a callback, of the identity of the event handler for the operation. The operation is not complete until either the reply is sent or the time-out occurs.","nodes":[{"content":"This method receives notification, through a callback, of the identity of the event handler for the operation. The operation is not complete until either the reply is sent or the time-out occurs.","pos":[0,195],"nodes":[{"content":"This method receives notification, through a callback, of the identity of the event handler for the operation.","pos":[0,110]},{"content":"The operation is not complete until either the reply is sent or the time-out occurs.","pos":[111,195]}]}]}],"pos":[8376,8976],"yaml":true,"extradata":"MT"},{"content":"The incoming <xref href=\"System.ServiceModel.Channels.Message\"></xref> that contains the request.","nodes":[{"pos":[0,97],"content":"The incoming <ph id=\"ph1\">&lt;xref href=\"System.ServiceModel.Channels.Message\"&gt;&lt;/xref&gt;</ph> that contains the request.","source":"The incoming <xref href=\"System.ServiceModel.Channels.Message\"></xref> that contains the request."}],"pos":[9227,9325],"yaml":true},{"content":"The <xref href=\"System.AsyncCallback\"></xref> delegate that receives the notification of the asynchronous reply operation completion.","nodes":[{"pos":[0,133],"content":"The <ph id=\"ph1\">&lt;xref href=\"System.AsyncCallback\"&gt;&lt;/xref&gt;</ph> delegate that receives the notification of the asynchronous reply operation completion.","source":"The <xref href=\"System.AsyncCallback\"></xref> delegate that receives the notification of the asynchronous reply operation completion."}],"pos":[9396,9530],"yaml":true},{"content":"An object, specified by the application, that contains state information associated with the asynchronous reply operation.","nodes":[{"pos":[0,122],"content":"An object, specified by the application, that contains state information associated with the asynchronous reply operation.","nodes":[{"content":"An object, specified by the application, that contains state information associated with the asynchronous reply operation.","pos":[0,122]}]}],"pos":[9591,9714],"yaml":true},{"content":"The <xref href=\"System.IAsyncResult\"></xref> that references the asynchronous reply operation.","nodes":[{"pos":[0,94],"content":"The <ph id=\"ph1\">&lt;xref href=\"System.IAsyncResult\"&gt;&lt;/xref&gt;</ph> that references the asynchronous reply operation.","source":"The <xref href=\"System.IAsyncResult\"></xref> that references the asynchronous reply operation."}],"pos":[9777,9872],"yaml":true},{"content":"When overridden in a derived class, begins an asynchronous operation to reply to the request associated with the current context within a specified interval of time.","nodes":[{"pos":[0,165],"content":"When overridden in a derived class, begins an asynchronous operation to reply to the request associated with the current context within a specified interval of time.","nodes":[{"content":"When overridden in a derived class, begins an asynchronous operation to reply to the request associated with the current context within a specified interval of time.","pos":[0,165]}]}],"pos":[11441,11607],"yaml":true},{"content":"Use the asynchronous <xref:System.ServiceModel.Channels.RequestContext.BeginReply%2A> method to allow the application processing to continue without waiting for the request to complete.  \n  \n Use one of the synchronous <xref:System.ServiceModel.Channels.RequestContext.Reply%2A> methods when it is acceptable for the current thread to be blocked while it replies to the request message or until the time-out interval is exceeded. This method receives notification, through a callback, of the identity of the event handler for the operation. The operation is not complete until either the reply is sent or the time-out occurs.","nodes":[{"pos":[0,185],"content":"Use the asynchronous <xref:System.ServiceModel.Channels.RequestContext.BeginReply%2A> method to allow the application processing to continue without waiting for the request to complete.","nodes":[{"content":"Use the asynchronous <ph id=\"ph1\">&lt;xref:System.ServiceModel.Channels.RequestContext.BeginReply%2A&gt;</ph> method to allow the application processing to continue without waiting for the request to complete.","pos":[0,185],"source":"Use the asynchronous <xref:System.ServiceModel.Channels.RequestContext.BeginReply%2A> method to allow the application processing to continue without waiting for the request to complete."}]},{"pos":[192,625],"content":"Use one of the synchronous <xref:System.ServiceModel.Channels.RequestContext.Reply%2A> methods when it is acceptable for the current thread to be blocked while it replies to the request message or until the time-out interval is exceeded. This method receives notification, through a callback, of the identity of the event handler for the operation. The operation is not complete until either the reply is sent or the time-out occurs.","nodes":[{"content":"Use one of the synchronous <xref:System.ServiceModel.Channels.RequestContext.Reply%2A> methods when it is acceptable for the current thread to be blocked while it replies to the request message or until the time-out interval is exceeded. This method receives notification, through a callback, of the identity of the event handler for the operation. The operation is not complete until either the reply is sent or the time-out occurs.","pos":[0,433],"nodes":[{"content":"Use one of the synchronous <ph id=\"ph1\">&lt;xref:System.ServiceModel.Channels.RequestContext.Reply%2A&gt;</ph> methods when it is acceptable for the current thread to be blocked while it replies to the request message or until the time-out interval is exceeded.","pos":[0,237],"source":"Use one of the synchronous <xref:System.ServiceModel.Channels.RequestContext.Reply%2A> methods when it is acceptable for the current thread to be blocked while it replies to the request message or until the time-out interval is exceeded."},{"content":"This method receives notification, through a callback, of the identity of the event handler for the operation.","pos":[238,348]},{"content":"The operation is not complete until either the reply is sent or the time-out occurs.","pos":[349,433]}]}]}],"pos":[11618,12248],"yaml":true,"extradata":"MT"},{"content":"The incoming <xref href=\"System.ServiceModel.Channels.Message\"></xref> that contains the request.","nodes":[{"pos":[0,97],"content":"The incoming <ph id=\"ph1\">&lt;xref href=\"System.ServiceModel.Channels.Message\"&gt;&lt;/xref&gt;</ph> that contains the request.","source":"The incoming <xref href=\"System.ServiceModel.Channels.Message\"></xref> that contains the request."}],"pos":[12517,12615],"yaml":true},{"content":"The <xref href=\"System.TimeSpan\"></xref> that specifies the interval of time to wait for the reply to an available request.","nodes":[{"pos":[0,123],"content":"The <ph id=\"ph1\">&lt;xref href=\"System.TimeSpan\"&gt;&lt;/xref&gt;</ph> that specifies the interval of time to wait for the reply to an available request.","source":"The <xref href=\"System.TimeSpan\"></xref> that specifies the interval of time to wait for the reply to an available request."}],"pos":[12680,12804],"yaml":true},{"content":"The <xref href=\"System.AsyncCallback\"></xref> delegate that receives the notification of the asynchronous reply operation completion.","nodes":[{"pos":[0,133],"content":"The <ph id=\"ph1\">&lt;xref href=\"System.AsyncCallback\"&gt;&lt;/xref&gt;</ph> delegate that receives the notification of the asynchronous reply operation completion.","source":"The <xref href=\"System.AsyncCallback\"></xref> delegate that receives the notification of the asynchronous reply operation completion."}],"pos":[12875,13009],"yaml":true},{"content":"An object, specified by the application, that contains state information associated with the asynchronous reply operation.","nodes":[{"pos":[0,122],"content":"An object, specified by the application, that contains state information associated with the asynchronous reply operation.","nodes":[{"content":"An object, specified by the application, that contains state information associated with the asynchronous reply operation.","pos":[0,122]}]}],"pos":[13070,13193],"yaml":true},{"content":"The <xref href=\"System.IAsyncResult\"></xref> that references the asynchronous reply operation.","nodes":[{"pos":[0,94],"content":"The <ph id=\"ph1\">&lt;xref href=\"System.IAsyncResult\"&gt;&lt;/xref&gt;</ph> that references the asynchronous reply operation.","source":"The <xref href=\"System.IAsyncResult\"></xref> that references the asynchronous reply operation."}],"pos":[13256,13351],"yaml":true},{"content":"When overridden in a derived class, closes the operation that is replying to the request context associated with the current context.","nodes":[{"pos":[0,133],"content":"When overridden in a derived class, closes the operation that is replying to the request context associated with the current context.","nodes":[{"content":"When overridden in a derived class, closes the operation that is replying to the request context associated with the current context.","pos":[0,133]}]}],"pos":[14503,14637],"yaml":true},{"content":"When overridden in a derived class, closes the operation that is replying to the request context associated with the current context within a specified interval of time.","nodes":[{"pos":[0,169],"content":"When overridden in a derived class, closes the operation that is replying to the request context associated with the current context within a specified interval of time.","nodes":[{"content":"When overridden in a derived class, closes the operation that is replying to the request context associated with the current context within a specified interval of time.","pos":[0,169]}]}],"pos":[15932,16102],"yaml":true},{"content":"The <xref href=\"System.TimeSpan\"></xref> that specifies the interval of time within which the reply operation associated with the current context must close.","nodes":[{"pos":[0,157],"content":"The <ph id=\"ph1\">&lt;xref href=\"System.TimeSpan\"&gt;&lt;/xref&gt;</ph> that specifies the interval of time within which the reply operation associated with the current context must close.","source":"The <xref href=\"System.TimeSpan\"></xref> that specifies the interval of time within which the reply operation associated with the current context must close."}],"pos":[16253,16411],"yaml":true},{"content":"Releases resources associated with the context.","nodes":[{"pos":[0,47],"content":"Releases resources associated with the context.","nodes":[{"content":"Releases resources associated with the context.","pos":[0,47]}]}],"pos":[17639,17687],"yaml":true},{"content":"`true` to release both managed and unmanaged resources; `false` to release only unmanaged resources.","nodes":[{"pos":[0,100],"content":"<ph id=\"ph1\">`true`</ph> to release both managed and unmanaged resources; <ph id=\"ph2\">`false`</ph> to release only unmanaged resources.","source":"`true` to release both managed and unmanaged resources; `false` to release only unmanaged resources."}],"pos":[17841,17944],"yaml":true},{"content":"When overridden in a derived class, completes an asynchronous operation to reply to a request message.","nodes":[{"pos":[0,102],"content":"When overridden in a derived class, completes an asynchronous operation to reply to a request message.","nodes":[{"content":"When overridden in a derived class, completes an asynchronous operation to reply to a request message.","pos":[0,102]}]}],"pos":[19210,19313],"yaml":true},{"content":"The <xref href=\"System.IAsyncResult\"></xref> returned by a call to one of the <xref href=\"System.ServiceModel.Channels.RequestContext.BeginReply*\"></xref> methods.","nodes":[{"pos":[0,163],"content":"The <ph id=\"ph1\">&lt;xref href=\"System.IAsyncResult\"&gt;&lt;/xref&gt;</ph> returned by a call to one of the <ph id=\"ph2\">&lt;xref href=\"System.ServiceModel.Channels.RequestContext.BeginReply*\"&gt;&lt;/xref&gt;</ph> methods.","source":"The <xref href=\"System.IAsyncResult\"></xref> returned by a call to one of the <xref href=\"System.ServiceModel.Channels.RequestContext.BeginReply*\"></xref> methods."}],"pos":[19473,19637],"yaml":true},{"content":"When overridden in a derived class, replies to a request message.","nodes":[{"pos":[0,65],"content":"When overridden in a derived class, replies to a request message.","nodes":[{"content":"When overridden in a derived class, replies to a request message.","pos":[0,65]}]}],"pos":[20922,20988],"yaml":true},{"content":"Use <xref:System.ServiceModel.Channels.RequestContext.Reply%2A> when it is acceptable for the current thread to be blocked while it replies to the request message. The thread is blocked up to the specified `timeout`.  \n  \n If the application processing must continue without waiting for the reply to complete, use the asynchronous <xref:System.ServiceModel.Channels.RequestContext.BeginReply%2A> method. This method receives notification, through a callback, of the identity of the event handler for the operation. The operation is not complete until either a message becomes available in the channel or the time-out occurs.","nodes":[{"pos":[0,216],"content":"Use <xref:System.ServiceModel.Channels.RequestContext.Reply%2A> when it is acceptable for the current thread to be blocked while it replies to the request message. The thread is blocked up to the specified `timeout`.","nodes":[{"content":"Use <ph id=\"ph1\">&lt;xref:System.ServiceModel.Channels.RequestContext.Reply%2A&gt;</ph> when it is acceptable for the current thread to be blocked while it replies to the request message.","pos":[0,163],"source":"Use <xref:System.ServiceModel.Channels.RequestContext.Reply%2A> when it is acceptable for the current thread to be blocked while it replies to the request message."},{"content":"The thread is blocked up to the specified <ph id=\"ph1\">`timeout`</ph>.","pos":[164,216],"source":" The thread is blocked up to the specified `timeout`."}]},{"pos":[223,624],"content":"If the application processing must continue without waiting for the reply to complete, use the asynchronous <xref:System.ServiceModel.Channels.RequestContext.BeginReply%2A> method. This method receives notification, through a callback, of the identity of the event handler for the operation. The operation is not complete until either a message becomes available in the channel or the time-out occurs.","nodes":[{"content":"If the application processing must continue without waiting for the reply to complete, use the asynchronous <xref:System.ServiceModel.Channels.RequestContext.BeginReply%2A> method. This method receives notification, through a callback, of the identity of the event handler for the operation. The operation is not complete until either a message becomes available in the channel or the time-out occurs.","pos":[0,401],"nodes":[{"content":"If the application processing must continue without waiting for the reply to complete, use the asynchronous <ph id=\"ph1\">&lt;xref:System.ServiceModel.Channels.RequestContext.BeginReply%2A&gt;</ph> method.","pos":[0,180],"source":"If the application processing must continue without waiting for the reply to complete, use the asynchronous <xref:System.ServiceModel.Channels.RequestContext.BeginReply%2A> method."},{"content":"This method receives notification, through a callback, of the identity of the event handler for the operation.","pos":[181,291]},{"content":"The operation is not complete until either a message becomes available in the channel or the time-out occurs.","pos":[292,401]}]}]}],"pos":[20999,21628],"yaml":true,"extradata":"MT"},{"content":"The incoming <xref href=\"System.ServiceModel.Channels.Message\"></xref> that contains the request.","nodes":[{"pos":[0,97],"content":"The incoming <ph id=\"ph1\">&lt;xref href=\"System.ServiceModel.Channels.Message\"&gt;&lt;/xref&gt;</ph> that contains the request.","source":"The incoming <xref href=\"System.ServiceModel.Channels.Message\"></xref> that contains the request."}],"pos":[21828,21926],"yaml":true},{"content":"When overridden in a derived class, replies to a request message within a specified interval of time.","nodes":[{"pos":[0,101],"content":"When overridden in a derived class, replies to a request message within a specified interval of time.","nodes":[{"content":"When overridden in a derived class, replies to a request message within a specified interval of time.","pos":[0,101]}]}],"pos":[23286,23388],"yaml":true},{"content":"Use <xref:System.ServiceModel.Channels.RequestContext.Reply%2A> when it is acceptable for the current thread to be blocked while it replies to the request message. The thread is blocked up to the specified `timeout`.  \n  \n If the application processing must continue without waiting for the reply to complete, use the asynchronous <xref:System.ServiceModel.Channels.RequestContext.BeginReply%2A> method. This method receives notification, through a callback, of the identity of the event handler for the operation. The operation is not complete until either a message becomes available in the channel or the time-out occurs.","nodes":[{"pos":[0,216],"content":"Use <xref:System.ServiceModel.Channels.RequestContext.Reply%2A> when it is acceptable for the current thread to be blocked while it replies to the request message. The thread is blocked up to the specified `timeout`.","nodes":[{"content":"Use <ph id=\"ph1\">&lt;xref:System.ServiceModel.Channels.RequestContext.Reply%2A&gt;</ph> when it is acceptable for the current thread to be blocked while it replies to the request message.","pos":[0,163],"source":"Use <xref:System.ServiceModel.Channels.RequestContext.Reply%2A> when it is acceptable for the current thread to be blocked while it replies to the request message."},{"content":"The thread is blocked up to the specified <ph id=\"ph1\">`timeout`</ph>.","pos":[164,216],"source":" The thread is blocked up to the specified `timeout`."}]},{"pos":[223,624],"content":"If the application processing must continue without waiting for the reply to complete, use the asynchronous <xref:System.ServiceModel.Channels.RequestContext.BeginReply%2A> method. This method receives notification, through a callback, of the identity of the event handler for the operation. The operation is not complete until either a message becomes available in the channel or the time-out occurs.","nodes":[{"content":"If the application processing must continue without waiting for the reply to complete, use the asynchronous <xref:System.ServiceModel.Channels.RequestContext.BeginReply%2A> method. This method receives notification, through a callback, of the identity of the event handler for the operation. The operation is not complete until either a message becomes available in the channel or the time-out occurs.","pos":[0,401],"nodes":[{"content":"If the application processing must continue without waiting for the reply to complete, use the asynchronous <ph id=\"ph1\">&lt;xref:System.ServiceModel.Channels.RequestContext.BeginReply%2A&gt;</ph> method.","pos":[0,180],"source":"If the application processing must continue without waiting for the reply to complete, use the asynchronous <xref:System.ServiceModel.Channels.RequestContext.BeginReply%2A> method."},{"content":"This method receives notification, through a callback, of the identity of the event handler for the operation.","pos":[181,291]},{"content":"The operation is not complete until either a message becomes available in the channel or the time-out occurs.","pos":[292,401]}]}]}],"pos":[23399,24028],"yaml":true,"extradata":"MT"},{"content":"The incoming <xref href=\"System.ServiceModel.Channels.Message\"></xref> that contains the request.","nodes":[{"pos":[0,97],"content":"The incoming <ph id=\"ph1\">&lt;xref href=\"System.ServiceModel.Channels.Message\"&gt;&lt;/xref&gt;</ph> that contains the request.","source":"The incoming <xref href=\"System.ServiceModel.Channels.Message\"></xref> that contains the request."}],"pos":[24246,24344],"yaml":true},{"content":"The <xref href=\"System.TimeSpan\"></xref> that specifies the interval of time to wait for the reply to a request.","nodes":[{"pos":[0,112],"content":"The <ph id=\"ph1\">&lt;xref href=\"System.TimeSpan\"&gt;&lt;/xref&gt;</ph> that specifies the interval of time to wait for the reply to a request.","source":"The <xref href=\"System.TimeSpan\"></xref> that specifies the interval of time to wait for the reply to a request."}],"pos":[24409,24522],"yaml":true},{"content":"When overridden in a derived class, gets the message that contains the request.","nodes":[{"pos":[0,79],"content":"When overridden in a derived class, gets the message that contains the request.","nodes":[{"content":"When overridden in a derived class, gets the message that contains the request.","pos":[0,79]}]}],"pos":[25719,25799],"yaml":true},{"content":"The <xref href=\"System.ServiceModel.Channels.Message\"></xref> that contains the request.","nodes":[{"pos":[0,88],"content":"The <ph id=\"ph1\">&lt;xref href=\"System.ServiceModel.Channels.Message\"&gt;&lt;/xref&gt;</ph> that contains the request.","source":"The <xref href=\"System.ServiceModel.Channels.Message\"></xref> that contains the request."}],"pos":[25979,26068],"yaml":true},{"content":"Releases both managed and unmanaged resources associated with the context.","nodes":[{"pos":[0,74],"content":"Releases both managed and unmanaged resources associated with the context.","nodes":[{"content":"Releases both managed and unmanaged resources associated with the context.","pos":[0,74]}]}],"pos":[27343,27418],"yaml":true}],"content":"### YamlMime:ManagedReference\nitems:\n- uid: System.ServiceModel.Channels.RequestContext\n  commentId: T:System.ServiceModel.Channels.RequestContext\n  id: RequestContext\n  children:\n  - System.ServiceModel.Channels.RequestContext.#ctor\n  - System.ServiceModel.Channels.RequestContext.Abort\n  - System.ServiceModel.Channels.RequestContext.BeginReply(System.ServiceModel.Channels.Message,System.AsyncCallback,System.Object)\n  - System.ServiceModel.Channels.RequestContext.BeginReply(System.ServiceModel.Channels.Message,System.TimeSpan,System.AsyncCallback,System.Object)\n  - System.ServiceModel.Channels.RequestContext.Close\n  - System.ServiceModel.Channels.RequestContext.Close(System.TimeSpan)\n  - System.ServiceModel.Channels.RequestContext.Dispose(System.Boolean)\n  - System.ServiceModel.Channels.RequestContext.EndReply(System.IAsyncResult)\n  - System.ServiceModel.Channels.RequestContext.Reply(System.ServiceModel.Channels.Message)\n  - System.ServiceModel.Channels.RequestContext.Reply(System.ServiceModel.Channels.Message,System.TimeSpan)\n  - System.ServiceModel.Channels.RequestContext.RequestMessage\n  - System.ServiceModel.Channels.RequestContext.System#IDisposable#Dispose\n  langs:\n  - csharp\n  name: RequestContext\n  nameWithType: RequestContext\n  fullName: System.ServiceModel.Channels.RequestContext\n  type: Class\n  assemblies:\n  - System.ServiceModel\n  namespace: System.ServiceModel.Channels\n  summary: Provides a reply that is correlated to an incoming request.\n  remarks: \"You get a request context from an <xref:System.ServiceModel.Channels.IReplyChannel>. Each <xref:System.ServiceModel.Channels.RequestContext> encapsulates the information required to reply to the request, so that you do not have to block on the channel when waiting for each request message to receive a reply.  \\n  \\n In the request/reply model, the <xref:System.ServiceModel.Channels.RequestContext> object is the link between the request that comes in and the reply that goes out. When the server receives a request, it provides a <xref:System.ServiceModel.Channels.RequestContext> instance that represents the request to the channel. The request context contains the original request message among other useful properties. This request context is then stashed inside the <xref:System.ServiceModel.OperationContext> for retrieval by your service. You typically use the <xref:System.ServiceModel.OperationContext.Current%2A> property to access the request of the current operation.  \\n  \\n The value of the <xref:System.ServiceModel.Channels.RequestContext> can be `null`. Because the role of the request context is to link requests to replies, it does not make sense to have a request context when you do not have a reply, and so in this case the context is set to `null`. For a one-way operation on top of the request/reply model, the server receives requests but does not send back a response to the client. So if the <xref:System.ServiceModel.Channels.RequestContext> is `null` unexpectedly, check first whether the operation contract is IsOneWay.  \\n  \\n Special note for Managed C++ users deriving from this class:  \\n  \\n-   Put your cleanup code in (On)(Begin)Close (and/or OnAbort), not in a destructor.  \\n  \\n-   Avoid destructors: they cause the compiler to auto-generate <xref:System.IDisposable>.  \\n  \\n-   Avoid non-reference members: they can cause the compiler to auto-generate <xref:System.IDisposable>.  \\n  \\n-   Avoid finalizers; but if you include one, you should suppress the build warning and call <xref:System.GC.SuppressFinalize%28System.Object%29> and the finalizer itself from (On)(Begin)Close (and/or OnAbort) to emulate what would have been the auto-generated <xref:System.IDisposable> behavior.\"\n  syntax:\n    content: 'public abstract class RequestContext : IDisposable'\n  inheritance:\n  - System.Object\n  implements:\n  - System.IDisposable\n  inheritedMembers:\n  - System.Object.Equals(System.Object)\n  - System.Object.Equals(System.Object,System.Object)\n  - System.Object.GetHashCode\n  - System.Object.GetType\n  - System.Object.MemberwiseClone\n  - System.Object.ReferenceEquals(System.Object,System.Object)\n  - System.Object.ToString\n  version:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.ServiceModel.Channels/RequestContext.xml\n  ms.technology:\n  - dotnet-standard\n  author: Erikre\n  ms.author: erikre\n  manager: erikre\n- uid: System.ServiceModel.Channels.RequestContext.#ctor\n  commentId: M:System.ServiceModel.Channels.RequestContext.#ctor\n  id: '#ctor'\n  parent: System.ServiceModel.Channels.RequestContext\n  langs:\n  - csharp\n  name: RequestContext()\n  nameWithType: RequestContext.RequestContext()\n  fullName: RequestContext.RequestContext()\n  type: Constructor\n  assemblies:\n  - System.ServiceModel\n  namespace: System.ServiceModel.Channels\n  summary: Initializes a new instance of the <xref href=\"System.ServiceModel.Channels.RequestContext\"></xref> class.\n  syntax:\n    content: protected RequestContext ();\n    parameters: []\n  overload: System.ServiceModel.Channels.RequestContext.#ctor*\n  exceptions: []\n  version:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.ServiceModel.Channels/RequestContext.xml\n  ms.technology:\n  - dotnet-standard\n  author: Erikre\n  ms.author: erikre\n  manager: erikre\n- uid: System.ServiceModel.Channels.RequestContext.Abort\n  commentId: M:System.ServiceModel.Channels.RequestContext.Abort\n  id: Abort\n  parent: System.ServiceModel.Channels.RequestContext\n  langs:\n  - csharp\n  name: Abort()\n  nameWithType: RequestContext.Abort()\n  fullName: RequestContext.Abort()\n  type: Method\n  assemblies:\n  - System.ServiceModel\n  namespace: System.ServiceModel.Channels\n  summary: When overridden in a derived class, aborts processing the request associated with the context.\n  syntax:\n    content: public abstract void Abort ();\n    parameters: []\n  overload: System.ServiceModel.Channels.RequestContext.Abort*\n  exceptions: []\n  version:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.ServiceModel.Channels/RequestContext.xml\n  ms.technology:\n  - dotnet-standard\n  author: Erikre\n  ms.author: erikre\n  manager: erikre\n- uid: System.ServiceModel.Channels.RequestContext.BeginReply(System.ServiceModel.Channels.Message,System.AsyncCallback,System.Object)\n  commentId: M:System.ServiceModel.Channels.RequestContext.BeginReply(System.ServiceModel.Channels.Message,System.AsyncCallback,System.Object)\n  id: BeginReply(System.ServiceModel.Channels.Message,System.AsyncCallback,System.Object)\n  parent: System.ServiceModel.Channels.RequestContext\n  langs:\n  - csharp\n  name: BeginReply(Message, AsyncCallback, Object)\n  nameWithType: RequestContext.BeginReply(Message, AsyncCallback, Object)\n  fullName: RequestContext.BeginReply(Message, AsyncCallback, Object)\n  type: Method\n  assemblies:\n  - System.ServiceModel\n  namespace: System.ServiceModel.Channels\n  summary: When overridden in a derived class, begins an asynchronous operation to reply to the request associated with the current context.\n  remarks: \"Use the asynchronous <xref:System.ServiceModel.Channels.RequestContext.BeginReply%2A> method when the application processing must continue without waiting. Use one of the synchronous <xref:System.ServiceModel.Channels.RequestContext.Reply%2A> methods when it is acceptable for the current thread to be blocked while it replies to the request message or until the time-out interval is exceeded.  \\n  \\n This method receives notification, through a callback, of the identity of the event handler for the operation. The operation is not complete until either the reply is sent or the time-out occurs.\"\n  syntax:\n    content: public abstract IAsyncResult BeginReply (System.ServiceModel.Channels.Message message, AsyncCallback callback, object state);\n    parameters:\n    - id: message\n      type: System.ServiceModel.Channels.Message\n      description: The incoming <xref href=\"System.ServiceModel.Channels.Message\"></xref> that contains the request.\n    - id: callback\n      type: System.AsyncCallback\n      description: The <xref href=\"System.AsyncCallback\"></xref> delegate that receives the notification of the asynchronous reply operation completion.\n    - id: state\n      type: System.Object\n      description: An object, specified by the application, that contains state information associated with the asynchronous reply operation.\n    return:\n      type: System.IAsyncResult\n      description: The <xref href=\"System.IAsyncResult\"></xref> that references the asynchronous reply operation.\n  overload: System.ServiceModel.Channels.RequestContext.BeginReply*\n  exceptions: []\n  version:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.ServiceModel.Channels/RequestContext.xml\n  ms.technology:\n  - dotnet-standard\n  author: Erikre\n  ms.author: erikre\n  manager: erikre\n- uid: System.ServiceModel.Channels.RequestContext.BeginReply(System.ServiceModel.Channels.Message,System.TimeSpan,System.AsyncCallback,System.Object)\n  commentId: M:System.ServiceModel.Channels.RequestContext.BeginReply(System.ServiceModel.Channels.Message,System.TimeSpan,System.AsyncCallback,System.Object)\n  id: BeginReply(System.ServiceModel.Channels.Message,System.TimeSpan,System.AsyncCallback,System.Object)\n  parent: System.ServiceModel.Channels.RequestContext\n  langs:\n  - csharp\n  name: BeginReply(Message, TimeSpan, AsyncCallback, Object)\n  nameWithType: RequestContext.BeginReply(Message, TimeSpan, AsyncCallback, Object)\n  fullName: RequestContext.BeginReply(Message, TimeSpan, AsyncCallback, Object)\n  type: Method\n  assemblies:\n  - System.ServiceModel\n  namespace: System.ServiceModel.Channels\n  summary: When overridden in a derived class, begins an asynchronous operation to reply to the request associated with the current context within a specified interval of time.\n  remarks: \"Use the asynchronous <xref:System.ServiceModel.Channels.RequestContext.BeginReply%2A> method to allow the application processing to continue without waiting for the request to complete.  \\n  \\n Use one of the synchronous <xref:System.ServiceModel.Channels.RequestContext.Reply%2A> methods when it is acceptable for the current thread to be blocked while it replies to the request message or until the time-out interval is exceeded. This method receives notification, through a callback, of the identity of the event handler for the operation. The operation is not complete until either the reply is sent or the time-out occurs.\"\n  syntax:\n    content: public abstract IAsyncResult BeginReply (System.ServiceModel.Channels.Message message, TimeSpan timeout, AsyncCallback callback, object state);\n    parameters:\n    - id: message\n      type: System.ServiceModel.Channels.Message\n      description: The incoming <xref href=\"System.ServiceModel.Channels.Message\"></xref> that contains the request.\n    - id: timeout\n      type: System.TimeSpan\n      description: The <xref href=\"System.TimeSpan\"></xref> that specifies the interval of time to wait for the reply to an available request.\n    - id: callback\n      type: System.AsyncCallback\n      description: The <xref href=\"System.AsyncCallback\"></xref> delegate that receives the notification of the asynchronous reply operation completion.\n    - id: state\n      type: System.Object\n      description: An object, specified by the application, that contains state information associated with the asynchronous reply operation.\n    return:\n      type: System.IAsyncResult\n      description: The <xref href=\"System.IAsyncResult\"></xref> that references the asynchronous reply operation.\n  overload: System.ServiceModel.Channels.RequestContext.BeginReply*\n  exceptions: []\n  version:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.ServiceModel.Channels/RequestContext.xml\n  ms.technology:\n  - dotnet-standard\n  author: Erikre\n  ms.author: erikre\n  manager: erikre\n- uid: System.ServiceModel.Channels.RequestContext.Close\n  commentId: M:System.ServiceModel.Channels.RequestContext.Close\n  id: Close\n  parent: System.ServiceModel.Channels.RequestContext\n  langs:\n  - csharp\n  name: Close()\n  nameWithType: RequestContext.Close()\n  fullName: RequestContext.Close()\n  type: Method\n  assemblies:\n  - System.ServiceModel\n  namespace: System.ServiceModel.Channels\n  summary: When overridden in a derived class, closes the operation that is replying to the request context associated with the current context.\n  syntax:\n    content: public abstract void Close ();\n    parameters: []\n  overload: System.ServiceModel.Channels.RequestContext.Close*\n  exceptions: []\n  version:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.ServiceModel.Channels/RequestContext.xml\n  ms.technology:\n  - dotnet-standard\n  author: Erikre\n  ms.author: erikre\n  manager: erikre\n- uid: System.ServiceModel.Channels.RequestContext.Close(System.TimeSpan)\n  commentId: M:System.ServiceModel.Channels.RequestContext.Close(System.TimeSpan)\n  id: Close(System.TimeSpan)\n  parent: System.ServiceModel.Channels.RequestContext\n  langs:\n  - csharp\n  name: Close(TimeSpan)\n  nameWithType: RequestContext.Close(TimeSpan)\n  fullName: RequestContext.Close(TimeSpan)\n  type: Method\n  assemblies:\n  - System.ServiceModel\n  namespace: System.ServiceModel.Channels\n  summary: When overridden in a derived class, closes the operation that is replying to the request context associated with the current context within a specified interval of time.\n  syntax:\n    content: public abstract void Close (TimeSpan timeout);\n    parameters:\n    - id: timeout\n      type: System.TimeSpan\n      description: The <xref href=\"System.TimeSpan\"></xref> that specifies the interval of time within which the reply operation associated with the current context must close.\n  overload: System.ServiceModel.Channels.RequestContext.Close*\n  exceptions: []\n  version:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.ServiceModel.Channels/RequestContext.xml\n  ms.technology:\n  - dotnet-standard\n  author: Erikre\n  ms.author: erikre\n  manager: erikre\n- uid: System.ServiceModel.Channels.RequestContext.Dispose(System.Boolean)\n  commentId: M:System.ServiceModel.Channels.RequestContext.Dispose(System.Boolean)\n  id: Dispose(System.Boolean)\n  parent: System.ServiceModel.Channels.RequestContext\n  langs:\n  - csharp\n  name: Dispose(Boolean)\n  nameWithType: RequestContext.Dispose(Boolean)\n  fullName: RequestContext.Dispose(Boolean)\n  type: Method\n  assemblies:\n  - System.ServiceModel\n  namespace: System.ServiceModel.Channels\n  summary: Releases resources associated with the context.\n  syntax:\n    content: protected virtual void Dispose (bool disposing);\n    parameters:\n    - id: disposing\n      type: System.Boolean\n      description: '`true` to release both managed and unmanaged resources; `false` to release only unmanaged resources.'\n  overload: System.ServiceModel.Channels.RequestContext.Dispose*\n  exceptions: []\n  version:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.ServiceModel.Channels/RequestContext.xml\n  ms.technology:\n  - dotnet-standard\n  author: Erikre\n  ms.author: erikre\n  manager: erikre\n- uid: System.ServiceModel.Channels.RequestContext.EndReply(System.IAsyncResult)\n  commentId: M:System.ServiceModel.Channels.RequestContext.EndReply(System.IAsyncResult)\n  id: EndReply(System.IAsyncResult)\n  parent: System.ServiceModel.Channels.RequestContext\n  langs:\n  - csharp\n  name: EndReply(IAsyncResult)\n  nameWithType: RequestContext.EndReply(IAsyncResult)\n  fullName: RequestContext.EndReply(IAsyncResult)\n  type: Method\n  assemblies:\n  - System.ServiceModel\n  namespace: System.ServiceModel.Channels\n  summary: When overridden in a derived class, completes an asynchronous operation to reply to a request message.\n  syntax:\n    content: public abstract void EndReply (IAsyncResult result);\n    parameters:\n    - id: result\n      type: System.IAsyncResult\n      description: The <xref href=\"System.IAsyncResult\"></xref> returned by a call to one of the <xref href=\"System.ServiceModel.Channels.RequestContext.BeginReply*\"></xref> methods.\n  overload: System.ServiceModel.Channels.RequestContext.EndReply*\n  exceptions: []\n  version:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.ServiceModel.Channels/RequestContext.xml\n  ms.technology:\n  - dotnet-standard\n  author: Erikre\n  ms.author: erikre\n  manager: erikre\n- uid: System.ServiceModel.Channels.RequestContext.Reply(System.ServiceModel.Channels.Message)\n  commentId: M:System.ServiceModel.Channels.RequestContext.Reply(System.ServiceModel.Channels.Message)\n  id: Reply(System.ServiceModel.Channels.Message)\n  parent: System.ServiceModel.Channels.RequestContext\n  langs:\n  - csharp\n  name: Reply(Message)\n  nameWithType: RequestContext.Reply(Message)\n  fullName: RequestContext.Reply(Message)\n  type: Method\n  assemblies:\n  - System.ServiceModel\n  namespace: System.ServiceModel.Channels\n  summary: When overridden in a derived class, replies to a request message.\n  remarks: \"Use <xref:System.ServiceModel.Channels.RequestContext.Reply%2A> when it is acceptable for the current thread to be blocked while it replies to the request message. The thread is blocked up to the specified `timeout`.  \\n  \\n If the application processing must continue without waiting for the reply to complete, use the asynchronous <xref:System.ServiceModel.Channels.RequestContext.BeginReply%2A> method. This method receives notification, through a callback, of the identity of the event handler for the operation. The operation is not complete until either a message becomes available in the channel or the time-out occurs.\"\n  syntax:\n    content: public abstract void Reply (System.ServiceModel.Channels.Message message);\n    parameters:\n    - id: message\n      type: System.ServiceModel.Channels.Message\n      description: The incoming <xref href=\"System.ServiceModel.Channels.Message\"></xref> that contains the request.\n  overload: System.ServiceModel.Channels.RequestContext.Reply*\n  exceptions: []\n  version:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.ServiceModel.Channels/RequestContext.xml\n  ms.technology:\n  - dotnet-standard\n  author: Erikre\n  ms.author: erikre\n  manager: erikre\n- uid: System.ServiceModel.Channels.RequestContext.Reply(System.ServiceModel.Channels.Message,System.TimeSpan)\n  commentId: M:System.ServiceModel.Channels.RequestContext.Reply(System.ServiceModel.Channels.Message,System.TimeSpan)\n  id: Reply(System.ServiceModel.Channels.Message,System.TimeSpan)\n  parent: System.ServiceModel.Channels.RequestContext\n  langs:\n  - csharp\n  name: Reply(Message, TimeSpan)\n  nameWithType: RequestContext.Reply(Message, TimeSpan)\n  fullName: RequestContext.Reply(Message, TimeSpan)\n  type: Method\n  assemblies:\n  - System.ServiceModel\n  namespace: System.ServiceModel.Channels\n  summary: When overridden in a derived class, replies to a request message within a specified interval of time.\n  remarks: \"Use <xref:System.ServiceModel.Channels.RequestContext.Reply%2A> when it is acceptable for the current thread to be blocked while it replies to the request message. The thread is blocked up to the specified `timeout`.  \\n  \\n If the application processing must continue without waiting for the reply to complete, use the asynchronous <xref:System.ServiceModel.Channels.RequestContext.BeginReply%2A> method. This method receives notification, through a callback, of the identity of the event handler for the operation. The operation is not complete until either a message becomes available in the channel or the time-out occurs.\"\n  syntax:\n    content: public abstract void Reply (System.ServiceModel.Channels.Message message, TimeSpan timeout);\n    parameters:\n    - id: message\n      type: System.ServiceModel.Channels.Message\n      description: The incoming <xref href=\"System.ServiceModel.Channels.Message\"></xref> that contains the request.\n    - id: timeout\n      type: System.TimeSpan\n      description: The <xref href=\"System.TimeSpan\"></xref> that specifies the interval of time to wait for the reply to a request.\n  overload: System.ServiceModel.Channels.RequestContext.Reply*\n  exceptions: []\n  version:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.ServiceModel.Channels/RequestContext.xml\n  ms.technology:\n  - dotnet-standard\n  author: Erikre\n  ms.author: erikre\n  manager: erikre\n- uid: System.ServiceModel.Channels.RequestContext.RequestMessage\n  commentId: P:System.ServiceModel.Channels.RequestContext.RequestMessage\n  id: RequestMessage\n  parent: System.ServiceModel.Channels.RequestContext\n  langs:\n  - csharp\n  name: RequestMessage\n  nameWithType: RequestContext.RequestMessage\n  fullName: RequestContext.RequestMessage\n  type: Property\n  assemblies:\n  - System.ServiceModel\n  namespace: System.ServiceModel.Channels\n  summary: When overridden in a derived class, gets the message that contains the request.\n  syntax:\n    content: public abstract System.ServiceModel.Channels.Message RequestMessage { get; }\n    return:\n      type: System.ServiceModel.Channels.Message\n      description: The <xref href=\"System.ServiceModel.Channels.Message\"></xref> that contains the request.\n  overload: System.ServiceModel.Channels.RequestContext.RequestMessage*\n  exceptions: []\n  version:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.ServiceModel.Channels/RequestContext.xml\n  ms.technology:\n  - dotnet-standard\n  author: Erikre\n  ms.author: erikre\n  manager: erikre\n- uid: System.ServiceModel.Channels.RequestContext.System#IDisposable#Dispose\n  commentId: M:System.ServiceModel.Channels.RequestContext.System#IDisposable#Dispose\n  id: System#IDisposable#Dispose\n  isEii: true\n  parent: System.ServiceModel.Channels.RequestContext\n  langs:\n  - csharp\n  name: IDisposable.Dispose()\n  nameWithType: RequestContext.IDisposable.Dispose()\n  fullName: RequestContext.IDisposable.Dispose()\n  type: Method\n  assemblies:\n  - System.ServiceModel\n  namespace: System.ServiceModel.Channels\n  summary: Releases both managed and unmanaged resources associated with the context.\n  syntax:\n    content: void IDisposable.Dispose ();\n    parameters: []\n  overload: System.ServiceModel.Channels.RequestContext.System#IDisposable#Dispose*\n  exceptions: []\n  version:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.ServiceModel.Channels/RequestContext.xml\n  ms.technology:\n  - dotnet-standard\n  author: Erikre\n  ms.author: erikre\n  manager: erikre\nreferences:\n- uid: System.Object\n  parent: System\n  isExternal: false\n  name: Object\n  nameWithType: Object\n  fullName: System.Object\n- uid: System.ServiceModel.Channels.RequestContext.#ctor\n  parent: System.ServiceModel.Channels.RequestContext\n  isExternal: false\n  name: RequestContext()\n  nameWithType: RequestContext.RequestContext()\n  fullName: RequestContext.RequestContext()\n- uid: System.ServiceModel.Channels.RequestContext.Abort\n  parent: System.ServiceModel.Channels.RequestContext\n  isExternal: false\n  name: Abort()\n  nameWithType: RequestContext.Abort()\n  fullName: RequestContext.Abort()\n- uid: System.ServiceModel.Channels.RequestContext.BeginReply(System.ServiceModel.Channels.Message,System.AsyncCallback,System.Object)\n  parent: System.ServiceModel.Channels.RequestContext\n  isExternal: false\n  name: BeginReply(Message, AsyncCallback, Object)\n  nameWithType: RequestContext.BeginReply(Message, AsyncCallback, Object)\n  fullName: RequestContext.BeginReply(Message, AsyncCallback, Object)\n- uid: System.IAsyncResult\n  parent: System\n  isExternal: false\n  name: IAsyncResult\n  nameWithType: IAsyncResult\n  fullName: System.IAsyncResult\n- uid: System.ServiceModel.Channels.Message\n  parent: System.ServiceModel.Channels\n  isExternal: false\n  name: Message\n  nameWithType: Message\n  fullName: System.ServiceModel.Channels.Message\n- uid: System.AsyncCallback\n  parent: System\n  isExternal: false\n  name: AsyncCallback\n  nameWithType: AsyncCallback\n  fullName: System.AsyncCallback\n- uid: System.ServiceModel.Channels.RequestContext.BeginReply(System.ServiceModel.Channels.Message,System.TimeSpan,System.AsyncCallback,System.Object)\n  parent: System.ServiceModel.Channels.RequestContext\n  isExternal: false\n  name: BeginReply(Message, TimeSpan, AsyncCallback, Object)\n  nameWithType: RequestContext.BeginReply(Message, TimeSpan, AsyncCallback, Object)\n  fullName: RequestContext.BeginReply(Message, TimeSpan, AsyncCallback, Object)\n- uid: System.TimeSpan\n  parent: System\n  isExternal: false\n  name: TimeSpan\n  nameWithType: TimeSpan\n  fullName: System.TimeSpan\n- uid: System.ServiceModel.Channels.RequestContext.Close\n  parent: System.ServiceModel.Channels.RequestContext\n  isExternal: false\n  name: Close()\n  nameWithType: RequestContext.Close()\n  fullName: RequestContext.Close()\n- uid: System.ServiceModel.Channels.RequestContext.Close(System.TimeSpan)\n  parent: System.ServiceModel.Channels.RequestContext\n  isExternal: false\n  name: Close(TimeSpan)\n  nameWithType: RequestContext.Close(TimeSpan)\n  fullName: RequestContext.Close(TimeSpan)\n- uid: System.ServiceModel.Channels.RequestContext.Dispose(System.Boolean)\n  parent: System.ServiceModel.Channels.RequestContext\n  isExternal: false\n  name: Dispose(Boolean)\n  nameWithType: RequestContext.Dispose(Boolean)\n  fullName: RequestContext.Dispose(Boolean)\n- uid: System.Boolean\n  parent: System\n  isExternal: false\n  name: Boolean\n  nameWithType: Boolean\n  fullName: System.Boolean\n- uid: System.ServiceModel.Channels.RequestContext.EndReply(System.IAsyncResult)\n  parent: System.ServiceModel.Channels.RequestContext\n  isExternal: false\n  name: EndReply(IAsyncResult)\n  nameWithType: RequestContext.EndReply(IAsyncResult)\n  fullName: RequestContext.EndReply(IAsyncResult)\n- uid: System.ServiceModel.Channels.RequestContext.Reply(System.ServiceModel.Channels.Message)\n  parent: System.ServiceModel.Channels.RequestContext\n  isExternal: false\n  name: Reply(Message)\n  nameWithType: RequestContext.Reply(Message)\n  fullName: RequestContext.Reply(Message)\n- uid: System.ServiceModel.Channels.RequestContext.Reply(System.ServiceModel.Channels.Message,System.TimeSpan)\n  parent: System.ServiceModel.Channels.RequestContext\n  isExternal: false\n  name: Reply(Message, TimeSpan)\n  nameWithType: RequestContext.Reply(Message, TimeSpan)\n  fullName: RequestContext.Reply(Message, TimeSpan)\n- uid: System.ServiceModel.Channels.RequestContext.RequestMessage\n  parent: System.ServiceModel.Channels.RequestContext\n  isExternal: false\n  name: RequestMessage\n  nameWithType: RequestContext.RequestMessage\n  fullName: RequestContext.RequestMessage\n- uid: System.ServiceModel.Channels.RequestContext.System#IDisposable#Dispose\n  parent: System.ServiceModel.Channels.RequestContext\n  isExternal: false\n  name: IDisposable.Dispose()\n  nameWithType: RequestContext.IDisposable.Dispose()\n  fullName: RequestContext.IDisposable.Dispose()\n- uid: System.ServiceModel.Channels.RequestContext.BeginReply*\n  parent: System.ServiceModel.Channels.RequestContext\n  isExternal: false\n  name: BeginReply\n  nameWithType: RequestContext.BeginReply\n  fullName: RequestContext.BeginReply\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.ServiceModel.Channels/RequestContext.xml\n- uid: System.ServiceModel.Channels.RequestContext.#ctor*\n  parent: System.ServiceModel.Channels.RequestContext\n  isExternal: false\n  name: RequestContext\n  nameWithType: RequestContext.RequestContext\n  fullName: RequestContext.RequestContext\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.ServiceModel.Channels/RequestContext.xml\n- uid: System.ServiceModel.Channels.RequestContext.Abort*\n  parent: System.ServiceModel.Channels.RequestContext\n  isExternal: false\n  name: Abort\n  nameWithType: RequestContext.Abort\n  fullName: RequestContext.Abort\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.ServiceModel.Channels/RequestContext.xml\n- uid: System.ServiceModel.Channels.RequestContext.Close*\n  parent: System.ServiceModel.Channels.RequestContext\n  isExternal: false\n  name: Close\n  nameWithType: RequestContext.Close\n  fullName: RequestContext.Close\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.ServiceModel.Channels/RequestContext.xml\n- uid: System.ServiceModel.Channels.RequestContext.Dispose*\n  parent: System.ServiceModel.Channels.RequestContext\n  isExternal: false\n  name: Dispose\n  nameWithType: RequestContext.Dispose\n  fullName: RequestContext.Dispose\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.ServiceModel.Channels/RequestContext.xml\n- uid: System.ServiceModel.Channels.RequestContext.EndReply*\n  parent: System.ServiceModel.Channels.RequestContext\n  isExternal: false\n  name: EndReply\n  nameWithType: RequestContext.EndReply\n  fullName: RequestContext.EndReply\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.ServiceModel.Channels/RequestContext.xml\n- uid: System.ServiceModel.Channels.RequestContext.Reply*\n  parent: System.ServiceModel.Channels.RequestContext\n  isExternal: false\n  name: Reply\n  nameWithType: RequestContext.Reply\n  fullName: RequestContext.Reply\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.ServiceModel.Channels/RequestContext.xml\n- uid: System.ServiceModel.Channels.RequestContext.RequestMessage*\n  parent: System.ServiceModel.Channels.RequestContext\n  isExternal: false\n  name: RequestMessage\n  nameWithType: RequestContext.RequestMessage\n  fullName: RequestContext.RequestMessage\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.ServiceModel.Channels/RequestContext.xml\n- uid: System.ServiceModel.Channels.RequestContext.System#IDisposable#Dispose*\n  parent: System.ServiceModel.Channels.RequestContext\n  isExternal: false\n  name: System.IDisposable.Dispose\n  nameWithType: RequestContext.System.IDisposable.Dispose\n  fullName: RequestContext.System.IDisposable.Dispose\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.ServiceModel.Channels/RequestContext.xml\n- uid: System.Object.Equals(System.Object)\n  parent: System.Object\n  isExternal: false\n  name: Equals(Object)\n  nameWithType: Object.Equals(Object)\n  fullName: Object.Equals(Object)\n- uid: System.Object.Equals(System.Object,System.Object)\n  parent: System.Object\n  isExternal: false\n  name: Equals(Object, Object)\n  nameWithType: Object.Equals(Object, Object)\n  fullName: Object.Equals(Object, Object)\n- uid: System.Object.GetHashCode\n  parent: System.Object\n  isExternal: false\n  name: GetHashCode()\n  nameWithType: Object.GetHashCode()\n  fullName: Object.GetHashCode()\n- uid: System.Object.GetType\n  parent: System.Object\n  isExternal: false\n  name: GetType()\n  nameWithType: Object.GetType()\n  fullName: Object.GetType()\n- uid: System.Object.MemberwiseClone\n  parent: System.Object\n  isExternal: false\n  name: MemberwiseClone()\n  nameWithType: Object.MemberwiseClone()\n  fullName: Object.MemberwiseClone()\n- uid: System.Object.ReferenceEquals(System.Object,System.Object)\n  parent: System.Object\n  isExternal: false\n  name: ReferenceEquals(Object, Object)\n  nameWithType: Object.ReferenceEquals(Object, Object)\n  fullName: Object.ReferenceEquals(Object, Object)\n- uid: System.Object.ToString\n  parent: System.Object\n  isExternal: false\n  name: ToString()\n  nameWithType: Object.ToString()\n  fullName: Object.ToString()\n- uid: System.IDisposable\n  parent: System\n  isExternal: false\n  name: IDisposable\n  nameWithType: IDisposable\n  fullName: System.IDisposable\n"}