{"nodes":[{"content":"Represents the results of mapped functions or queries with variable return sequences.","nodes":[{"pos":[0,85],"content":"Represents the results of mapped functions or queries with variable return sequences.","nodes":[{"content":"Represents the results of mapped functions or queries with variable return sequences.","pos":[0,85]}]}],"pos":[430,516],"yaml":true},{"content":"In the following SQL code example, the result shape depends on the input (`shape =1` or `shape = 2`). The order that the projections are returned is undefined.","nodes":[{"pos":[0,159],"content":"In the following SQL code example, the result shape depends on the input (`shape =1` or `shape = 2`). The order that the projections are returned is undefined.","nodes":[{"content":"In the following SQL code example, the result shape depends on the input (<ph id=\"ph1\">`shape =1`</ph> or <ph id=\"ph2\">`shape = 2`</ph>).","pos":[0,101],"source":"In the following SQL code example, the result shape depends on the input (`shape =1` or `shape = 2`)."},{"content":"The order that the projections are returned is undefined.","pos":[102,159]}]}],"pos":[527,687],"yaml":true,"extradata":"MT"},{"content":"Retrieves the next result as a sequence of a specified type.","nodes":[{"pos":[0,60],"content":"Retrieves the next result as a sequence of a specified type.","nodes":[{"content":"Retrieves the next result as a sequence of a specified type.","pos":[0,60]}]}],"pos":[2333,2394],"yaml":true},{"content":"You would use code similar to the following to execute this stored procedure.  \n  \n> [!NOTE]\n>  You must use the <xref:System.Data.Linq.IMultipleResults.GetResult%2A> pattern to obtain an enumerator of the correct type, based on your knowledge of the stored procedure.","nodes":[{"pos":[0,77],"content":"You would use code similar to the following to execute this stored procedure.","nodes":[{"content":"You would use code similar to the following to execute this stored procedure.","pos":[0,77]}]},{"pos":[85,268],"content":"[!NOTE]\n You must use the <xref:System.Data.Linq.IMultipleResults.GetResult%2A> pattern to obtain an enumerator of the correct type, based on your knowledge of the stored procedure.","leadings":["","> "],"nodes":[{"content":"You must use the <ph id=\"ph1\">&lt;xref:System.Data.Linq.IMultipleResults.GetResult%2A&gt;</ph> pattern to obtain an enumerator of the correct type, based on your knowledge of the stored procedure.","pos":[9,181],"source":" You must use the <xref:System.Data.Linq.IMultipleResults.GetResult%2A> pattern to obtain an enumerator of the correct type, based on your knowledge of the stored procedure."}]}],"pos":[2405,2679],"yaml":true,"extradata":"MT"},{"content":"The type of the sequence to be returned.","nodes":[{"pos":[0,40],"content":"The type of the sequence to be returned.","nodes":[{"content":"The type of the sequence to be returned.","pos":[0,40]}]}],"pos":[3087,3128],"yaml":true},{"content":"An enumeration for iterating over the results.","nodes":[{"pos":[0,46],"content":"An enumeration for iterating over the results.","nodes":[{"content":"An enumeration for iterating over the results.","pos":[0,46]}]}],"pos":[3220,3267],"yaml":true}],"content":"### YamlMime:ManagedReference\nitems:\n- uid: System.Data.Linq.IMultipleResults\n  commentId: T:System.Data.Linq.IMultipleResults\n  id: IMultipleResults\n  children:\n  - System.Data.Linq.IMultipleResults.GetResult``1\n  langs:\n  - csharp\n  name: IMultipleResults\n  nameWithType: IMultipleResults\n  fullName: System.Data.Linq.IMultipleResults\n  type: Interface\n  assemblies:\n  - System.Data.Linq\n  namespace: System.Data.Linq\n  summary: Represents the results of mapped functions or queries with variable return sequences.\n  remarks: In the following SQL code example, the result shape depends on the input (`shape =1` or `shape = 2`). The order that the projections are returned is undefined.\n  example:\n  - \"```  \\nCREATE PROCEDURE VariableResultShapes(@shape int)  \\nAS  \\nif(@shape = 1)  \\n    select CustomerID, ContactTitle, CompanyName from customers  \\nelse if(@shape = 2)  \\n    select OrderID, ShipName from orders  \\n```  \\n  \\n [!code-csharp[DLinqSprox#4](~/samples/snippets/csharp/VS_Snippets_Data/DLinqSprox/cs/northwind-sprox.cs#4)]\\n [!code-vb[DLinqSprox#4](~/samples/snippets/visualbasic/VS_Snippets_Data/DLinqSprox/vb/northwind-sprox.vb#4)]\"\n  syntax:\n    content: 'public interface IMultipleResults : IDisposable, System.Data.Linq.IFunctionResult'\n  implements:\n  - System.Data.Linq.IFunctionResult\n  - System.IDisposable\n  version:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - xamarinmac-3.0\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - xamarinmac-3.0\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Data.Linq/IMultipleResults.xml\n  ms.technology:\n  - dotnet-ado\n  author: JennieHubbard\n  ms.author: jhubbard\n  manager: jhubbard\n- uid: System.Data.Linq.IMultipleResults.GetResult``1\n  commentId: M:System.Data.Linq.IMultipleResults.GetResult``1\n  id: GetResult``1\n  parent: System.Data.Linq.IMultipleResults\n  langs:\n  - csharp\n  name: GetResult<TElement>()\n  nameWithType: IMultipleResults.GetResult<TElement>()\n  fullName: IMultipleResults.GetResult<TElement>()\n  type: Method\n  assemblies:\n  - System.Data.Linq\n  namespace: System.Data.Linq\n  summary: Retrieves the next result as a sequence of a specified type.\n  remarks: \"You would use code similar to the following to execute this stored procedure.  \\n  \\n> [!NOTE]\\n>  You must use the <xref:System.Data.Linq.IMultipleResults.GetResult%2A> pattern to obtain an enumerator of the correct type, based on your knowledge of the stored procedure.\"\n  example:\n  - >-\n    [!code-csharp[DLinqSprox#5](~/samples/snippets/csharp/VS_Snippets_Data/DLinqSprox/cs/Program.cs#5)]\n     [!code-vb[DLinqSprox#5](~/samples/snippets/visualbasic/VS_Snippets_Data/DLinqSprox/vb/Module1.vb#5)]\n  syntax:\n    content: public System.Collections.Generic.IEnumerable<TElement> GetResult<TElement> ();\n    parameters: []\n    typeParameters:\n    - id: TElement\n      description: The type of the sequence to be returned.\n    return:\n      type: System.Collections.Generic.IEnumerable{TElement}\n      description: An enumeration for iterating over the results.\n  overload: System.Data.Linq.IMultipleResults.GetResult``1*\n  exceptions: []\n  version:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - xamarinmac-3.0\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - xamarinmac-3.0\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Data.Linq/IMultipleResults.xml\n  ms.technology:\n  - dotnet-ado\n  author: JennieHubbard\n  ms.author: jhubbard\n  manager: jhubbard\nreferences:\n- uid: System.Data.Linq.IMultipleResults.GetResult``1\n  parent: System.Data.Linq.IMultipleResults\n  isExternal: false\n  name: GetResult<TElement>()\n  nameWithType: IMultipleResults.GetResult<TElement>()\n  fullName: IMultipleResults.GetResult<TElement>()\n- uid: System.Collections.Generic.IEnumerable`1\n  name: IEnumerable<T>\n  nameWithType: IEnumerable<T>\n  fullName: System.Collections.Generic.IEnumerable<T>\n- uid: TElement\n  name: TElement\n  nameWithType: TElement\n  fullName: TElement\n- uid: System.Collections.Generic.IEnumerable{TElement}\n  parent: System.Collections.Generic\n  isExternal: false\n  name: IEnumerable<TElement>\n  nameWithType: IEnumerable<TElement>\n  fullName: System.Collections.Generic.IEnumerable<TElement>\n  spec.csharp:\n  - uid: System.Collections.Generic.IEnumerable`1\n    name: IEnumerable\n    nameWithType: IEnumerable\n    fullName: System.Collections.Generic.IEnumerable\n  - name: <\n    nameWithType: <\n    fullName: <\n  - uid: TElement\n    name: TElement\n    nameWithType: TElement\n    fullName: TElement\n  - name: '>'\n    nameWithType: '>'\n    fullName: '>'\n- uid: System.Data.Linq.IMultipleResults.GetResult``1*\n  parent: System.Data.Linq.IMultipleResults\n  isExternal: false\n  name: GetResult<TElement>\n  nameWithType: IMultipleResults.GetResult<TElement>\n  fullName: IMultipleResults.GetResult<TElement>\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - xamarinmac-3.0\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Data.Linq/IMultipleResults.xml\n- uid: System.Data.Linq.IFunctionResult\n  parent: System.Data.Linq\n  isExternal: false\n  name: IFunctionResult\n  nameWithType: IFunctionResult\n  fullName: System.Data.Linq.IFunctionResult\n- uid: System.IDisposable\n  parent: System\n  isExternal: false\n  name: IDisposable\n  nameWithType: IDisposable\n  fullName: System.IDisposable\n"}