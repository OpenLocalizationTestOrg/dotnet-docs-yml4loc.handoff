{"nodes":[{"content":"Defines the methods that enable a client application to display a user interface to collect identity information prior to creating the channel.","nodes":[{"pos":[0,143],"content":"Defines the methods that enable a client application to display a user interface to collect identity information prior to creating the channel.","nodes":[{"content":"Defines the methods that enable a client application to display a user interface to collect identity information prior to creating the channel.","pos":[0,143]}]}],"pos":[802,946],"yaml":true},{"content":"Implement the <xref:System.ServiceModel.Dispatcher.IInteractiveChannelInitializer> interface to enable a client application to display a user interface that enables the user of the application to create or select the credentials prior to opening a channel.  \n  \n To implement <xref:System.ServiceModel.Dispatcher.IInteractiveChannelInitializer>, perform the following steps in <xref:System.ServiceModel.Dispatcher.IInteractiveChannelInitializer.BeginDisplayInitializationUI%2A?displayProperty=fullName>:  \n  \n1.  Prompt the user and obtain an appropriate <xref:System.Net.NetworkCredential?displayProperty=fullName>.  \n  \n2.  Add a custom channel parameter object to the collection returned by the <xref:System.ServiceModel.Channels.IChannel.GetProperty%2A?displayProperty=fullName> method on the <xref:System.ServiceModel.IClientChannel> object with a type parameter of <xref:System.ServiceModel.Channels.ChannelParameterCollection?displayProperty=fullName>. This channel parameter object is used by the custom <xref:System.ServiceModel.ClientCredentialsSecurityTokenManager?displayProperty=fullName> to establish the security tokens for the channel.  \n  \n3.  Return.  \n  \n To insert <xref:System.ServiceModel.Dispatcher.IInteractiveChannelInitializer>:  \n  \n1.  Override the <xref:System.ServiceModel.Description.IEndpointBehavior.ApplyClientBehavior%2A?displayProperty=fullName> method on the <xref:System.ServiceModel.Description.ClientCredentials?displayProperty=fullName> class.  \n  \n2.  In that method, determine whether the endpoint requires an <xref:System.ServiceModel.Dispatcher.IInteractiveChannelInitializer> and if so, add the <xref:System.ServiceModel.Dispatcher.IInteractiveChannelInitializer> to the <xref:System.ServiceModel.Dispatcher.ClientRuntime.InteractiveChannelInitializers%2A?displayProperty=fullName> collection.  \n  \n There are two ways application developers can make use of an inserted <xref:System.ServiceModel.Dispatcher.IInteractiveChannelInitializer>. The client application can call either <xref:System.ServiceModel.ClientBase%601.DisplayInitializationUI%2A?displayProperty=fullName> or <xref:System.ServiceModel.IClientChannel.DisplayInitializationUI%2A?displayProperty=fullName> (or an asynchronous version) prior to opening the channel (the *explicit* approach) or simply call the first operation (the *implicit* approach).  \n  \n If using the implicit approach, the application must call the first operation on an <xref:System.ServiceModel.ClientBase%601> or <xref:System.ServiceModel.IClientChannel> extension. If it calls anything other than the first operation, an exception is thrown.  \n  \n If using the explicit approach, the application must perform the following steps in order:  \n  \n1.  Call either <xref:System.ServiceModel.ClientBase%601.DisplayInitializationUI%2A?displayProperty=fullName> or <xref:System.ServiceModel.IClientChannel.DisplayInitializationUI%2A?displayProperty=fullName> (or an asynchronous version).  \n  \n2.  When the initializers have returned, call either the <xref:System.ServiceModel.ICommunicationObject.Open%2A> method on the <xref:System.ServiceModel.IClientChannel> object or on the <xref:System.ServiceModel.IClientChannel> object returned from the <xref:System.ServiceModel.ClientBase%601.InnerChannel%2A?displayProperty=fullName> property.  \n  \n3.  Call operations.  \n  \n It is recommended that production-quality applications control of the user-interface process by adopting the explicit approach.  \n  \n Applications that use the implicit approach invoke the user-interface initializers, but if the user of the application fails to respond within the send timeout period of the binding, an exception is thrown when the user interface returns.","nodes":[{"pos":[0,256],"content":"Implement the <xref:System.ServiceModel.Dispatcher.IInteractiveChannelInitializer> interface to enable a client application to display a user interface that enables the user of the application to create or select the credentials prior to opening a channel.","nodes":[{"content":"Implement the <ph id=\"ph1\">&lt;xref:System.ServiceModel.Dispatcher.IInteractiveChannelInitializer&gt;</ph> interface to enable a client application to display a user interface that enables the user of the application to create or select the credentials prior to opening a channel.","pos":[0,256],"source":"Implement the <xref:System.ServiceModel.Dispatcher.IInteractiveChannelInitializer> interface to enable a client application to display a user interface that enables the user of the application to create or select the credentials prior to opening a channel."}]},{"pos":[263,503],"content":"To implement <xref:System.ServiceModel.Dispatcher.IInteractiveChannelInitializer>, perform the following steps in <xref:System.ServiceModel.Dispatcher.IInteractiveChannelInitializer.BeginDisplayInitializationUI%2A?displayProperty=fullName>:","nodes":[{"content":"To implement <ph id=\"ph1\">&lt;xref:System.ServiceModel.Dispatcher.IInteractiveChannelInitializer&gt;</ph>, perform the following steps in <ph id=\"ph2\">&lt;xref:System.ServiceModel.Dispatcher.IInteractiveChannelInitializer.BeginDisplayInitializationUI%2A?displayProperty=fullName&gt;</ph>:","pos":[0,240],"source":"To implement <xref:System.ServiceModel.Dispatcher.IInteractiveChannelInitializer>, perform the following steps in <xref:System.ServiceModel.Dispatcher.IInteractiveChannelInitializer.BeginDisplayInitializationUI%2A?displayProperty=fullName>:"}]},{"pos":[513,616],"content":"Prompt the user and obtain an appropriate <xref:System.Net.NetworkCredential?displayProperty=fullName>.","nodes":[{"content":"Prompt the user and obtain an appropriate <ph id=\"ph1\">&lt;xref:System.Net.NetworkCredential?displayProperty=fullName&gt;</ph>.","pos":[0,103],"source":"Prompt the user and obtain an appropriate <xref:System.Net.NetworkCredential?displayProperty=fullName>."}]},{"pos":[626,1151],"content":"Add a custom channel parameter object to the collection returned by the <xref:System.ServiceModel.Channels.IChannel.GetProperty%2A?displayProperty=fullName> method on the <xref:System.ServiceModel.IClientChannel> object with a type parameter of <xref:System.ServiceModel.Channels.ChannelParameterCollection?displayProperty=fullName>. This channel parameter object is used by the custom <xref:System.ServiceModel.ClientCredentialsSecurityTokenManager?displayProperty=fullName> to establish the security tokens for the channel.","nodes":[{"content":"Add a custom channel parameter object to the collection returned by the <xref:System.ServiceModel.Channels.IChannel.GetProperty%2A?displayProperty=fullName> method on the <xref:System.ServiceModel.IClientChannel> object with a type parameter of <xref:System.ServiceModel.Channels.ChannelParameterCollection?displayProperty=fullName>. This channel parameter object is used by the custom <xref:System.ServiceModel.ClientCredentialsSecurityTokenManager?displayProperty=fullName> to establish the security tokens for the channel.","pos":[0,525],"nodes":[{"content":"Add a custom channel parameter object to the collection returned by the <ph id=\"ph1\">&lt;xref:System.ServiceModel.Channels.IChannel.GetProperty%2A?displayProperty=fullName&gt;</ph> method on the <ph id=\"ph2\">&lt;xref:System.ServiceModel.IClientChannel&gt;</ph> object with a type parameter of <ph id=\"ph3\">&lt;xref:System.ServiceModel.Channels.ChannelParameterCollection?displayProperty=fullName&gt;</ph>.","pos":[0,333],"source":"Add a custom channel parameter object to the collection returned by the <xref:System.ServiceModel.Channels.IChannel.GetProperty%2A?displayProperty=fullName> method on the <xref:System.ServiceModel.IClientChannel> object with a type parameter of <xref:System.ServiceModel.Channels.ChannelParameterCollection?displayProperty=fullName>."},{"content":"This channel parameter object is used by the custom <ph id=\"ph1\">&lt;xref:System.ServiceModel.ClientCredentialsSecurityTokenManager?displayProperty=fullName&gt;</ph> to establish the security tokens for the channel.","pos":[334,525],"source":" This channel parameter object is used by the custom <xref:System.ServiceModel.ClientCredentialsSecurityTokenManager?displayProperty=fullName> to establish the security tokens for the channel."}]}]},{"pos":[1161,1168],"content":"Return.","nodes":[{"content":"Return.","pos":[0,7]}]},{"pos":[1175,1254],"content":"To insert <xref:System.ServiceModel.Dispatcher.IInteractiveChannelInitializer>:","nodes":[{"content":"To insert <ph id=\"ph1\">&lt;xref:System.ServiceModel.Dispatcher.IInteractiveChannelInitializer&gt;</ph>:","pos":[0,79],"source":"To insert <xref:System.ServiceModel.Dispatcher.IInteractiveChannelInitializer>:"}]},{"pos":[1264,1484],"content":"Override the <xref:System.ServiceModel.Description.IEndpointBehavior.ApplyClientBehavior%2A?displayProperty=fullName> method on the <xref:System.ServiceModel.Description.ClientCredentials?displayProperty=fullName> class.","nodes":[{"content":"Override the <ph id=\"ph1\">&lt;xref:System.ServiceModel.Description.IEndpointBehavior.ApplyClientBehavior%2A?displayProperty=fullName&gt;</ph> method on the <ph id=\"ph2\">&lt;xref:System.ServiceModel.Description.ClientCredentials?displayProperty=fullName&gt;</ph> class.","pos":[0,220],"source":"Override the <xref:System.ServiceModel.Description.IEndpointBehavior.ApplyClientBehavior%2A?displayProperty=fullName> method on the <xref:System.ServiceModel.Description.ClientCredentials?displayProperty=fullName> class."}]},{"pos":[1494,1839],"content":"In that method, determine whether the endpoint requires an <xref:System.ServiceModel.Dispatcher.IInteractiveChannelInitializer> and if so, add the <xref:System.ServiceModel.Dispatcher.IInteractiveChannelInitializer> to the <xref:System.ServiceModel.Dispatcher.ClientRuntime.InteractiveChannelInitializers%2A?displayProperty=fullName> collection.","nodes":[{"content":"In that method, determine whether the endpoint requires an <ph id=\"ph1\">&lt;xref:System.ServiceModel.Dispatcher.IInteractiveChannelInitializer&gt;</ph> and if so, add the <ph id=\"ph2\">&lt;xref:System.ServiceModel.Dispatcher.IInteractiveChannelInitializer&gt;</ph> to the <ph id=\"ph3\">&lt;xref:System.ServiceModel.Dispatcher.ClientRuntime.InteractiveChannelInitializers%2A?displayProperty=fullName&gt;</ph> collection.","pos":[0,345],"source":"In that method, determine whether the endpoint requires an <xref:System.ServiceModel.Dispatcher.IInteractiveChannelInitializer> and if so, add the <xref:System.ServiceModel.Dispatcher.IInteractiveChannelInitializer> to the <xref:System.ServiceModel.Dispatcher.ClientRuntime.InteractiveChannelInitializers%2A?displayProperty=fullName> collection."}]},{"pos":[1846,2361],"content":"There are two ways application developers can make use of an inserted <xref:System.ServiceModel.Dispatcher.IInteractiveChannelInitializer>. The client application can call either <xref:System.ServiceModel.ClientBase%601.DisplayInitializationUI%2A?displayProperty=fullName> or <xref:System.ServiceModel.IClientChannel.DisplayInitializationUI%2A?displayProperty=fullName> (or an asynchronous version) prior to opening the channel (the *explicit* approach) or simply call the first operation (the *implicit* approach).","nodes":[{"content":"There are two ways application developers can make use of an inserted <ph id=\"ph1\">&lt;xref:System.ServiceModel.Dispatcher.IInteractiveChannelInitializer&gt;</ph>.","pos":[0,139],"source":"There are two ways application developers can make use of an inserted <xref:System.ServiceModel.Dispatcher.IInteractiveChannelInitializer>."},{"content":"The client application can call either <ph id=\"ph1\">&lt;xref:System.ServiceModel.ClientBase%601.DisplayInitializationUI%2A?displayProperty=fullName&gt;</ph> or <ph id=\"ph2\">&lt;xref:System.ServiceModel.IClientChannel.DisplayInitializationUI%2A?displayProperty=fullName&gt;</ph> (or an asynchronous version) prior to opening the channel (the <bpt id=\"p1\">*</bpt>explicit<ept id=\"p1\">*</ept> approach) or simply call the first operation (the <bpt id=\"p2\">*</bpt>implicit<ept id=\"p2\">*</ept> approach).","pos":[140,515],"source":" The client application can call either <xref:System.ServiceModel.ClientBase%601.DisplayInitializationUI%2A?displayProperty=fullName> or <xref:System.ServiceModel.IClientChannel.DisplayInitializationUI%2A?displayProperty=fullName> (or an asynchronous version) prior to opening the channel (the *explicit* approach) or simply call the first operation (the *implicit* approach)."}]},{"pos":[2368,2626],"content":"If using the implicit approach, the application must call the first operation on an <xref:System.ServiceModel.ClientBase%601> or <xref:System.ServiceModel.IClientChannel> extension. If it calls anything other than the first operation, an exception is thrown.","nodes":[{"content":"If using the implicit approach, the application must call the first operation on an <xref:System.ServiceModel.ClientBase%601> or <xref:System.ServiceModel.IClientChannel> extension. If it calls anything other than the first operation, an exception is thrown.","pos":[0,258],"nodes":[{"content":"If using the implicit approach, the application must call the first operation on an <ph id=\"ph1\">&lt;xref:System.ServiceModel.ClientBase%601&gt;</ph> or <ph id=\"ph2\">&lt;xref:System.ServiceModel.IClientChannel&gt;</ph> extension.","pos":[0,181],"source":"If using the implicit approach, the application must call the first operation on an <xref:System.ServiceModel.ClientBase%601> or <xref:System.ServiceModel.IClientChannel> extension."},{"content":"If it calls anything other than the first operation, an exception is thrown.","pos":[182,258]}]}]},{"pos":[2633,2723],"content":"If using the explicit approach, the application must perform the following steps in order:","nodes":[{"content":"If using the explicit approach, the application must perform the following steps in order:","pos":[0,90]}]},{"pos":[2733,2965],"content":"Call either <xref:System.ServiceModel.ClientBase%601.DisplayInitializationUI%2A?displayProperty=fullName> or <xref:System.ServiceModel.IClientChannel.DisplayInitializationUI%2A?displayProperty=fullName> (or an asynchronous version).","nodes":[{"content":"Call either <ph id=\"ph1\">&lt;xref:System.ServiceModel.ClientBase%601.DisplayInitializationUI%2A?displayProperty=fullName&gt;</ph> or <ph id=\"ph2\">&lt;xref:System.ServiceModel.IClientChannel.DisplayInitializationUI%2A?displayProperty=fullName&gt;</ph> (or an asynchronous version).","pos":[0,232],"source":"Call either <xref:System.ServiceModel.ClientBase%601.DisplayInitializationUI%2A?displayProperty=fullName> or <xref:System.ServiceModel.IClientChannel.DisplayInitializationUI%2A?displayProperty=fullName> (or an asynchronous version)."}]},{"pos":[2975,3316],"content":"When the initializers have returned, call either the <xref:System.ServiceModel.ICommunicationObject.Open%2A> method on the <xref:System.ServiceModel.IClientChannel> object or on the <xref:System.ServiceModel.IClientChannel> object returned from the <xref:System.ServiceModel.ClientBase%601.InnerChannel%2A?displayProperty=fullName> property.","nodes":[{"content":"When the initializers have returned, call either the <ph id=\"ph1\">&lt;xref:System.ServiceModel.ICommunicationObject.Open%2A&gt;</ph> method on the <ph id=\"ph2\">&lt;xref:System.ServiceModel.IClientChannel&gt;</ph> object or on the <ph id=\"ph3\">&lt;xref:System.ServiceModel.IClientChannel&gt;</ph> object returned from the <ph id=\"ph4\">&lt;xref:System.ServiceModel.ClientBase%601.InnerChannel%2A?displayProperty=fullName&gt;</ph> property.","pos":[0,341],"source":"When the initializers have returned, call either the <xref:System.ServiceModel.ICommunicationObject.Open%2A> method on the <xref:System.ServiceModel.IClientChannel> object or on the <xref:System.ServiceModel.IClientChannel> object returned from the <xref:System.ServiceModel.ClientBase%601.InnerChannel%2A?displayProperty=fullName> property."}]},{"pos":[3326,3342],"content":"Call operations.","nodes":[{"content":"Call operations.","pos":[0,16]}]},{"pos":[3349,3476],"content":"It is recommended that production-quality applications control of the user-interface process by adopting the explicit approach.","nodes":[{"content":"It is recommended that production-quality applications control of the user-interface process by adopting the explicit approach.","pos":[0,127]}]},{"pos":[3483,3721],"content":"Applications that use the implicit approach invoke the user-interface initializers, but if the user of the application fails to respond within the send timeout period of the binding, an exception is thrown when the user interface returns.","nodes":[{"content":"Applications that use the implicit approach invoke the user-interface initializers, but if the user of the application fails to respond within the send timeout period of the binding, an exception is thrown when the user interface returns.","pos":[0,238]}]}],"pos":[957,4711],"yaml":true,"extradata":"MT"},{"content":"An asynchronous call to begin using a user interface to obtain credential information.","nodes":[{"pos":[0,86],"content":"An asynchronous call to begin using a user interface to obtain credential information.","nodes":[{"content":"An asynchronous call to begin using a user interface to obtain credential information.","pos":[0,86]}]}],"pos":[6523,6610],"yaml":true},{"content":"To implement <xref:System.ServiceModel.Dispatcher.IInteractiveChannelInitializer>, perform the following steps in <xref:System.ServiceModel.Dispatcher.IInteractiveChannelInitializer.BeginDisplayInitializationUI%2A?displayProperty=fullName>:  \n  \n1.  Prompt the user in what way you see fit and obtain an appropriate <xref:System.Net.NetworkCredential?displayProperty=fullName>.  \n  \n2.  Add a custom channel parameter object to the collection returned by the <xref:System.ServiceModel.Channels.IChannel.GetProperty%2A?displayProperty=fullName> method on the <xref:System.ServiceModel.IClientChannel> object with a type parameter of <xref:System.ServiceModel.Channels.ChannelParameterCollection?displayProperty=fullName>. This channel parameter object is used by the custom <xref:System.ServiceModel.ClientCredentialsSecurityTokenManager?displayProperty=fullName> to establish the security tokens for the channel.  \n  \n3.  Return.","nodes":[{"pos":[0,240],"content":"To implement <xref:System.ServiceModel.Dispatcher.IInteractiveChannelInitializer>, perform the following steps in <xref:System.ServiceModel.Dispatcher.IInteractiveChannelInitializer.BeginDisplayInitializationUI%2A?displayProperty=fullName>:","nodes":[{"content":"To implement <ph id=\"ph1\">&lt;xref:System.ServiceModel.Dispatcher.IInteractiveChannelInitializer&gt;</ph>, perform the following steps in <ph id=\"ph2\">&lt;xref:System.ServiceModel.Dispatcher.IInteractiveChannelInitializer.BeginDisplayInitializationUI%2A?displayProperty=fullName&gt;</ph>:","pos":[0,240],"source":"To implement <xref:System.ServiceModel.Dispatcher.IInteractiveChannelInitializer>, perform the following steps in <xref:System.ServiceModel.Dispatcher.IInteractiveChannelInitializer.BeginDisplayInitializationUI%2A?displayProperty=fullName>:"}]},{"pos":[250,377],"content":"Prompt the user in what way you see fit and obtain an appropriate <xref:System.Net.NetworkCredential?displayProperty=fullName>.","nodes":[{"content":"Prompt the user in what way you see fit and obtain an appropriate <ph id=\"ph1\">&lt;xref:System.Net.NetworkCredential?displayProperty=fullName&gt;</ph>.","pos":[0,127],"source":"Prompt the user in what way you see fit and obtain an appropriate <xref:System.Net.NetworkCredential?displayProperty=fullName>."}]},{"pos":[387,912],"content":"Add a custom channel parameter object to the collection returned by the <xref:System.ServiceModel.Channels.IChannel.GetProperty%2A?displayProperty=fullName> method on the <xref:System.ServiceModel.IClientChannel> object with a type parameter of <xref:System.ServiceModel.Channels.ChannelParameterCollection?displayProperty=fullName>. This channel parameter object is used by the custom <xref:System.ServiceModel.ClientCredentialsSecurityTokenManager?displayProperty=fullName> to establish the security tokens for the channel.","nodes":[{"content":"Add a custom channel parameter object to the collection returned by the <xref:System.ServiceModel.Channels.IChannel.GetProperty%2A?displayProperty=fullName> method on the <xref:System.ServiceModel.IClientChannel> object with a type parameter of <xref:System.ServiceModel.Channels.ChannelParameterCollection?displayProperty=fullName>. This channel parameter object is used by the custom <xref:System.ServiceModel.ClientCredentialsSecurityTokenManager?displayProperty=fullName> to establish the security tokens for the channel.","pos":[0,525],"nodes":[{"content":"Add a custom channel parameter object to the collection returned by the <ph id=\"ph1\">&lt;xref:System.ServiceModel.Channels.IChannel.GetProperty%2A?displayProperty=fullName&gt;</ph> method on the <ph id=\"ph2\">&lt;xref:System.ServiceModel.IClientChannel&gt;</ph> object with a type parameter of <ph id=\"ph3\">&lt;xref:System.ServiceModel.Channels.ChannelParameterCollection?displayProperty=fullName&gt;</ph>.","pos":[0,333],"source":"Add a custom channel parameter object to the collection returned by the <xref:System.ServiceModel.Channels.IChannel.GetProperty%2A?displayProperty=fullName> method on the <xref:System.ServiceModel.IClientChannel> object with a type parameter of <xref:System.ServiceModel.Channels.ChannelParameterCollection?displayProperty=fullName>."},{"content":"This channel parameter object is used by the custom <ph id=\"ph1\">&lt;xref:System.ServiceModel.ClientCredentialsSecurityTokenManager?displayProperty=fullName&gt;</ph> to establish the security tokens for the channel.","pos":[334,525],"source":" This channel parameter object is used by the custom <xref:System.ServiceModel.ClientCredentialsSecurityTokenManager?displayProperty=fullName> to establish the security tokens for the channel."}]}]},{"pos":[922,929],"content":"Return.","nodes":[{"content":"Return.","pos":[0,7]}]}],"pos":[6621,7559],"yaml":true,"extradata":"MT"},{"content":"The client channel.","nodes":[{"pos":[0,19],"content":"The client channel.","nodes":[{"content":"The client channel.","pos":[0,19]}]}],"pos":[7815,7835],"yaml":true},{"content":"The callback object.","nodes":[{"pos":[0,20],"content":"The callback object.","nodes":[{"content":"The callback object.","pos":[0,20]}]}],"pos":[7906,7927],"yaml":true},{"content":"Any state data.","nodes":[{"pos":[0,15],"content":"Any state data.","nodes":[{"content":"Any state data.","pos":[0,15]}]}],"pos":[7988,8004],"yaml":true},{"content":"The <xref href=\"System.IAsyncResult\"></xref> to use to call back when processing has completed.","nodes":[{"pos":[0,95],"content":"The <ph id=\"ph1\">&lt;xref href=\"System.IAsyncResult\"&gt;&lt;/xref&gt;</ph> to use to call back when processing has completed.","source":"The <xref href=\"System.IAsyncResult\"></xref> to use to call back when processing has completed."}],"pos":[8067,8163],"yaml":true},{"content":"Called when the <xref href=\"System.ServiceModel.Dispatcher.IInteractiveChannelInitializer.BeginDisplayInitializationUI(System.ServiceModel.IClientChannel,System.AsyncCallback,System.Object)\"></xref> has finished.","nodes":[{"pos":[0,212],"content":"Called when the <ph id=\"ph1\">&lt;xref href=\"System.ServiceModel.Dispatcher.IInteractiveChannelInitializer.BeginDisplayInitializationUI(System.ServiceModel.IClientChannel,System.AsyncCallback,System.Object)\"&gt;&lt;/xref&gt;</ph> has finished.","source":"Called when the <xref href=\"System.ServiceModel.Dispatcher.IInteractiveChannelInitializer.BeginDisplayInitializationUI(System.ServiceModel.IClientChannel,System.AsyncCallback,System.Object)\"></xref> has finished."}],"pos":[9682,9895],"yaml":true},{"content":"The <xref href=\"System.IAsyncResult\"></xref>.","nodes":[{"pos":[0,45],"content":"The <ph id=\"ph1\">&lt;xref href=\"System.IAsyncResult\"&gt;&lt;/xref&gt;</ph>.","source":"The <xref href=\"System.IAsyncResult\"></xref>."}],"pos":[10064,10110],"yaml":true}],"content":"### YamlMime:ManagedReference\nitems:\n- uid: System.ServiceModel.Dispatcher.IInteractiveChannelInitializer\n  commentId: T:System.ServiceModel.Dispatcher.IInteractiveChannelInitializer\n  id: IInteractiveChannelInitializer\n  children:\n  - System.ServiceModel.Dispatcher.IInteractiveChannelInitializer.BeginDisplayInitializationUI(System.ServiceModel.IClientChannel,System.AsyncCallback,System.Object)\n  - System.ServiceModel.Dispatcher.IInteractiveChannelInitializer.EndDisplayInitializationUI(System.IAsyncResult)\n  langs:\n  - csharp\n  name: IInteractiveChannelInitializer\n  nameWithType: IInteractiveChannelInitializer\n  fullName: System.ServiceModel.Dispatcher.IInteractiveChannelInitializer\n  type: Interface\n  assemblies:\n  - System.ServiceModel\n  namespace: System.ServiceModel.Dispatcher\n  summary: Defines the methods that enable a client application to display a user interface to collect identity information prior to creating the channel.\n  remarks: \"Implement the <xref:System.ServiceModel.Dispatcher.IInteractiveChannelInitializer> interface to enable a client application to display a user interface that enables the user of the application to create or select the credentials prior to opening a channel.  \\n  \\n To implement <xref:System.ServiceModel.Dispatcher.IInteractiveChannelInitializer>, perform the following steps in <xref:System.ServiceModel.Dispatcher.IInteractiveChannelInitializer.BeginDisplayInitializationUI%2A?displayProperty=fullName>:  \\n  \\n1.  Prompt the user and obtain an appropriate <xref:System.Net.NetworkCredential?displayProperty=fullName>.  \\n  \\n2.  Add a custom channel parameter object to the collection returned by the <xref:System.ServiceModel.Channels.IChannel.GetProperty%2A?displayProperty=fullName> method on the <xref:System.ServiceModel.IClientChannel> object with a type parameter of <xref:System.ServiceModel.Channels.ChannelParameterCollection?displayProperty=fullName>. This channel parameter object is used by the custom <xref:System.ServiceModel.ClientCredentialsSecurityTokenManager?displayProperty=fullName> to establish the security tokens for the channel.  \\n  \\n3.  Return.  \\n  \\n To insert <xref:System.ServiceModel.Dispatcher.IInteractiveChannelInitializer>:  \\n  \\n1.  Override the <xref:System.ServiceModel.Description.IEndpointBehavior.ApplyClientBehavior%2A?displayProperty=fullName> method on the <xref:System.ServiceModel.Description.ClientCredentials?displayProperty=fullName> class.  \\n  \\n2.  In that method, determine whether the endpoint requires an <xref:System.ServiceModel.Dispatcher.IInteractiveChannelInitializer> and if so, add the <xref:System.ServiceModel.Dispatcher.IInteractiveChannelInitializer> to the <xref:System.ServiceModel.Dispatcher.ClientRuntime.InteractiveChannelInitializers%2A?displayProperty=fullName> collection.  \\n  \\n There are two ways application developers can make use of an inserted <xref:System.ServiceModel.Dispatcher.IInteractiveChannelInitializer>. The client application can call either <xref:System.ServiceModel.ClientBase%601.DisplayInitializationUI%2A?displayProperty=fullName> or <xref:System.ServiceModel.IClientChannel.DisplayInitializationUI%2A?displayProperty=fullName> (or an asynchronous version) prior to opening the channel (the *explicit* approach) or simply call the first operation (the *implicit* approach).  \\n  \\n If using the implicit approach, the application must call the first operation on an <xref:System.ServiceModel.ClientBase%601> or <xref:System.ServiceModel.IClientChannel> extension. If it calls anything other than the first operation, an exception is thrown.  \\n  \\n If using the explicit approach, the application must perform the following steps in order:  \\n  \\n1.  Call either <xref:System.ServiceModel.ClientBase%601.DisplayInitializationUI%2A?displayProperty=fullName> or <xref:System.ServiceModel.IClientChannel.DisplayInitializationUI%2A?displayProperty=fullName> (or an asynchronous version).  \\n  \\n2.  When the initializers have returned, call either the <xref:System.ServiceModel.ICommunicationObject.Open%2A> method on the <xref:System.ServiceModel.IClientChannel> object or on the <xref:System.ServiceModel.IClientChannel> object returned from the <xref:System.ServiceModel.ClientBase%601.InnerChannel%2A?displayProperty=fullName> property.  \\n  \\n3.  Call operations.  \\n  \\n It is recommended that production-quality applications control of the user-interface process by adopting the explicit approach.  \\n  \\n Applications that use the implicit approach invoke the user-interface initializers, but if the user of the application fails to respond within the send timeout period of the binding, an exception is thrown when the user interface returns.\"\n  syntax:\n    content: public interface IInteractiveChannelInitializer\n  derivedClasses:\n  - System.ServiceModel.Security.InfocardInteractiveChannelInitializer\n  implements: []\n  version:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.ServiceModel.Dispatcher/IInteractiveChannelInitializer.xml\n  ms.technology:\n  - dotnet-standard\n  author: Erikre\n  ms.author: erikre\n  manager: erikre\n- uid: System.ServiceModel.Dispatcher.IInteractiveChannelInitializer.BeginDisplayInitializationUI(System.ServiceModel.IClientChannel,System.AsyncCallback,System.Object)\n  commentId: M:System.ServiceModel.Dispatcher.IInteractiveChannelInitializer.BeginDisplayInitializationUI(System.ServiceModel.IClientChannel,System.AsyncCallback,System.Object)\n  id: BeginDisplayInitializationUI(System.ServiceModel.IClientChannel,System.AsyncCallback,System.Object)\n  parent: System.ServiceModel.Dispatcher.IInteractiveChannelInitializer\n  langs:\n  - csharp\n  name: BeginDisplayInitializationUI(IClientChannel, AsyncCallback, Object)\n  nameWithType: IInteractiveChannelInitializer.BeginDisplayInitializationUI(IClientChannel, AsyncCallback, Object)\n  fullName: IInteractiveChannelInitializer.BeginDisplayInitializationUI(IClientChannel, AsyncCallback, Object)\n  type: Method\n  assemblies:\n  - System.ServiceModel\n  namespace: System.ServiceModel.Dispatcher\n  summary: An asynchronous call to begin using a user interface to obtain credential information.\n  remarks: \"To implement <xref:System.ServiceModel.Dispatcher.IInteractiveChannelInitializer>, perform the following steps in <xref:System.ServiceModel.Dispatcher.IInteractiveChannelInitializer.BeginDisplayInitializationUI%2A?displayProperty=fullName>:  \\n  \\n1.  Prompt the user in what way you see fit and obtain an appropriate <xref:System.Net.NetworkCredential?displayProperty=fullName>.  \\n  \\n2.  Add a custom channel parameter object to the collection returned by the <xref:System.ServiceModel.Channels.IChannel.GetProperty%2A?displayProperty=fullName> method on the <xref:System.ServiceModel.IClientChannel> object with a type parameter of <xref:System.ServiceModel.Channels.ChannelParameterCollection?displayProperty=fullName>. This channel parameter object is used by the custom <xref:System.ServiceModel.ClientCredentialsSecurityTokenManager?displayProperty=fullName> to establish the security tokens for the channel.  \\n  \\n3.  Return.\"\n  syntax:\n    content: public IAsyncResult BeginDisplayInitializationUI (System.ServiceModel.IClientChannel channel, AsyncCallback callback, object state);\n    parameters:\n    - id: channel\n      type: System.ServiceModel.IClientChannel\n      description: The client channel.\n    - id: callback\n      type: System.AsyncCallback\n      description: The callback object.\n    - id: state\n      type: System.Object\n      description: Any state data.\n    return:\n      type: System.IAsyncResult\n      description: The <xref href=\"System.IAsyncResult\"></xref> to use to call back when processing has completed.\n  overload: System.ServiceModel.Dispatcher.IInteractiveChannelInitializer.BeginDisplayInitializationUI*\n  exceptions: []\n  version:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.ServiceModel.Dispatcher/IInteractiveChannelInitializer.xml\n  ms.technology:\n  - dotnet-standard\n  author: Erikre\n  ms.author: erikre\n  manager: erikre\n- uid: System.ServiceModel.Dispatcher.IInteractiveChannelInitializer.EndDisplayInitializationUI(System.IAsyncResult)\n  commentId: M:System.ServiceModel.Dispatcher.IInteractiveChannelInitializer.EndDisplayInitializationUI(System.IAsyncResult)\n  id: EndDisplayInitializationUI(System.IAsyncResult)\n  parent: System.ServiceModel.Dispatcher.IInteractiveChannelInitializer\n  langs:\n  - csharp\n  name: EndDisplayInitializationUI(IAsyncResult)\n  nameWithType: IInteractiveChannelInitializer.EndDisplayInitializationUI(IAsyncResult)\n  fullName: IInteractiveChannelInitializer.EndDisplayInitializationUI(IAsyncResult)\n  type: Method\n  assemblies:\n  - System.ServiceModel\n  namespace: System.ServiceModel.Dispatcher\n  summary: Called when the <xref href=\"System.ServiceModel.Dispatcher.IInteractiveChannelInitializer.BeginDisplayInitializationUI(System.ServiceModel.IClientChannel,System.AsyncCallback,System.Object)\"></xref> has finished.\n  syntax:\n    content: public void EndDisplayInitializationUI (IAsyncResult result);\n    parameters:\n    - id: result\n      type: System.IAsyncResult\n      description: The <xref href=\"System.IAsyncResult\"></xref>.\n  overload: System.ServiceModel.Dispatcher.IInteractiveChannelInitializer.EndDisplayInitializationUI*\n  exceptions: []\n  version:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.ServiceModel.Dispatcher/IInteractiveChannelInitializer.xml\n  ms.technology:\n  - dotnet-standard\n  author: Erikre\n  ms.author: erikre\n  manager: erikre\nreferences:\n- uid: System.ServiceModel.Dispatcher.IInteractiveChannelInitializer.BeginDisplayInitializationUI(System.ServiceModel.IClientChannel,System.AsyncCallback,System.Object)\n  parent: System.ServiceModel.Dispatcher.IInteractiveChannelInitializer\n  isExternal: false\n  name: BeginDisplayInitializationUI(IClientChannel, AsyncCallback, Object)\n  nameWithType: IInteractiveChannelInitializer.BeginDisplayInitializationUI(IClientChannel, AsyncCallback, Object)\n  fullName: IInteractiveChannelInitializer.BeginDisplayInitializationUI(IClientChannel, AsyncCallback, Object)\n- uid: System.IAsyncResult\n  parent: System\n  isExternal: false\n  name: IAsyncResult\n  nameWithType: IAsyncResult\n  fullName: System.IAsyncResult\n- uid: System.ServiceModel.IClientChannel\n  parent: System.ServiceModel\n  isExternal: false\n  name: IClientChannel\n  nameWithType: IClientChannel\n  fullName: System.ServiceModel.IClientChannel\n- uid: System.AsyncCallback\n  parent: System\n  isExternal: false\n  name: AsyncCallback\n  nameWithType: AsyncCallback\n  fullName: System.AsyncCallback\n- uid: System.Object\n  parent: System\n  isExternal: false\n  name: Object\n  nameWithType: Object\n  fullName: System.Object\n- uid: System.ServiceModel.Dispatcher.IInteractiveChannelInitializer.EndDisplayInitializationUI(System.IAsyncResult)\n  parent: System.ServiceModel.Dispatcher.IInteractiveChannelInitializer\n  isExternal: false\n  name: EndDisplayInitializationUI(IAsyncResult)\n  nameWithType: IInteractiveChannelInitializer.EndDisplayInitializationUI(IAsyncResult)\n  fullName: IInteractiveChannelInitializer.EndDisplayInitializationUI(IAsyncResult)\n- uid: System.ServiceModel.Dispatcher.IInteractiveChannelInitializer.BeginDisplayInitializationUI*\n  parent: System.ServiceModel.Dispatcher.IInteractiveChannelInitializer\n  isExternal: false\n  name: BeginDisplayInitializationUI\n  nameWithType: IInteractiveChannelInitializer.BeginDisplayInitializationUI\n  fullName: IInteractiveChannelInitializer.BeginDisplayInitializationUI\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.ServiceModel.Dispatcher/IInteractiveChannelInitializer.xml\n- uid: System.ServiceModel.Dispatcher.IInteractiveChannelInitializer.EndDisplayInitializationUI*\n  parent: System.ServiceModel.Dispatcher.IInteractiveChannelInitializer\n  isExternal: false\n  name: EndDisplayInitializationUI\n  nameWithType: IInteractiveChannelInitializer.EndDisplayInitializationUI\n  fullName: IInteractiveChannelInitializer.EndDisplayInitializationUI\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.ServiceModel.Dispatcher/IInteractiveChannelInitializer.xml\n"}