{"nodes":[{"content":"A secure, reliable binding suitable for cross-machine communication.","nodes":[{"pos":[0,68],"content":"A secure, reliable binding suitable for cross-machine communication.","nodes":[{"content":"A secure, reliable binding suitable for cross-machine communication.","pos":[0,68]}]}],"pos":[2032,2101],"yaml":true},{"content":"The <xref:System.ServiceModel.NetTcpBinding> generates a run-time communication stack by default, which uses transport security, TCP for message delivery, and a binary message encoding. This binding is an appropriate [!INCLUDE[indigo1](~/includes/indigo1-md.md)] system-provided choice for communicating over an Intranet.  \n  \n The default configuration for the <xref:System.ServiceModel.NetTcpBinding> is faster than the configuration provided by the <xref:System.ServiceModel.WSHttpBinding>, but it is intended only for [!INCLUDE[indigo2](~/includes/indigo2-md.md)]-to-[!INCLUDE[indigo2](~/includes/indigo2-md.md)] communication. The security behavior is configurable using the optional `securityMode` parameter in the constructor. The use of WS-ReliableMessaging is configurable using the optional `reliableSessionEnabled` parameter. But reliable messaging is off by default. More generally, the HTTP system-provided bindings such as <xref:System.ServiceModel.WSHttpBinding> and <xref:System.ServiceModel.BasicHttpBinding> are configured to turn things on by default, whereas the <xref:System.ServiceModel.NetTcpBinding> binding turns things off by default so that you have to opt-in to get support, for example, for one of the WS-* specifications. This means that the default configuration for TCP is faster at exchanging messages between endpoints than that configured for the HTTP bindings by default.  \n  \n> [!WARNING]\n>  The <xref:System.ServiceModel.NetTcpBinding> uses TCP connection pooling based on the service’s host DNS name and the port number the service is listening on. This works well when a client makes calls to different services on different ports, or services are hosted in a single process and share a port. If a single client calls multiple services sharing a port that are hosted in different processes, or are WAS/IIS hosted, the client side pooling may lead to problems where a connection to Service A is reused for Service B, resulting in an exception being thrown, the connection aborted, and a new channel created. To avoid this problem, use a CustomBinding and specify a different ConnectionPoolSettings.GroupName for each service the client communicates with.","nodes":[{"pos":[0,321],"content":"The <xref:System.ServiceModel.NetTcpBinding> generates a run-time communication stack by default, which uses transport security, TCP for message delivery, and a binary message encoding. This binding is an appropriate [!INCLUDE[indigo1](~/includes/indigo1-md.md)] system-provided choice for communicating over an Intranet.","nodes":[{"content":"The <ph id=\"ph1\">&lt;xref:System.ServiceModel.NetTcpBinding&gt;</ph> generates a run-time communication stack by default, which uses transport security, TCP for message delivery, and a binary message encoding.","pos":[0,185],"source":"The <xref:System.ServiceModel.NetTcpBinding> generates a run-time communication stack by default, which uses transport security, TCP for message delivery, and a binary message encoding."},{"content":"This binding is an appropriate <ph id=\"ph1\">[!INCLUDE[indigo1](~/includes/indigo1-md.md)]</ph> system-provided choice for communicating over an Intranet.","pos":[186,321],"source":" This binding is an appropriate [!INCLUDE[indigo1](~/includes/indigo1-md.md)] system-provided choice for communicating over an Intranet."}]},{"pos":[328,1407],"content":"The default configuration for the <xref:System.ServiceModel.NetTcpBinding> is faster than the configuration provided by the <xref:System.ServiceModel.WSHttpBinding>, but it is intended only for [!INCLUDE[indigo2](~/includes/indigo2-md.md)]-to-[!INCLUDE[indigo2](~/includes/indigo2-md.md)] communication. The security behavior is configurable using the optional `securityMode` parameter in the constructor. The use of WS-ReliableMessaging is configurable using the optional `reliableSessionEnabled` parameter. But reliable messaging is off by default. More generally, the HTTP system-provided bindings such as <xref:System.ServiceModel.WSHttpBinding> and <xref:System.ServiceModel.BasicHttpBinding> are configured to turn things on by default, whereas the <xref:System.ServiceModel.NetTcpBinding> binding turns things off by default so that you have to opt-in to get support, for example, for one of the WS-* specifications. This means that the default configuration for TCP is faster at exchanging messages between endpoints than that configured for the HTTP bindings by default.","nodes":[{"content":"The default configuration for the <ph id=\"ph1\">&lt;xref:System.ServiceModel.NetTcpBinding&gt;</ph> is faster than the configuration provided by the <ph id=\"ph2\">&lt;xref:System.ServiceModel.WSHttpBinding&gt;</ph>, but it is intended only for <ph id=\"ph3\">[!INCLUDE[indigo2](~/includes/indigo2-md.md)]</ph>-to-<ph id=\"ph4\">[!INCLUDE[indigo2](~/includes/indigo2-md.md)]</ph> communication.","pos":[0,303],"source":"The default configuration for the <xref:System.ServiceModel.NetTcpBinding> is faster than the configuration provided by the <xref:System.ServiceModel.WSHttpBinding>, but it is intended only for [!INCLUDE[indigo2](~/includes/indigo2-md.md)]-to-[!INCLUDE[indigo2](~/includes/indigo2-md.md)] communication."},{"content":"The security behavior is configurable using the optional <ph id=\"ph1\">`securityMode`</ph> parameter in the constructor.","pos":[304,405],"source":" The security behavior is configurable using the optional `securityMode` parameter in the constructor."},{"content":"The use of WS-ReliableMessaging is configurable using the optional <ph id=\"ph1\">`reliableSessionEnabled`</ph> parameter.","pos":[406,508],"source":" The use of WS-ReliableMessaging is configurable using the optional `reliableSessionEnabled` parameter."},{"content":"But reliable messaging is off by default.","pos":[509,550]},{"content":"More generally, the HTTP system-provided bindings such as <ph id=\"ph1\">&lt;xref:System.ServiceModel.WSHttpBinding&gt;</ph> and <ph id=\"ph2\">&lt;xref:System.ServiceModel.BasicHttpBinding&gt;</ph> are configured to turn things on by default, whereas the <ph id=\"ph3\">&lt;xref:System.ServiceModel.NetTcpBinding&gt;</ph> binding turns things off by default so that you have to opt-in to get support, for example, for one of the WS-* specifications.","pos":[551,923],"source":" More generally, the HTTP system-provided bindings such as <xref:System.ServiceModel.WSHttpBinding> and <xref:System.ServiceModel.BasicHttpBinding> are configured to turn things on by default, whereas the <xref:System.ServiceModel.NetTcpBinding> binding turns things off by default so that you have to opt-in to get support, for example, for one of the WS-* specifications."},{"content":"This means that the default configuration for TCP is faster at exchanging messages between endpoints than that configured for the HTTP bindings by default.","pos":[924,1079]}]},{"pos":[1415,2193],"content":"[!WARNING]\n The <xref:System.ServiceModel.NetTcpBinding> uses TCP connection pooling based on the service’s host DNS name and the port number the service is listening on. This works well when a client makes calls to different services on different ports, or services are hosted in a single process and share a port. If a single client calls multiple services sharing a port that are hosted in different processes, or are WAS/IIS hosted, the client side pooling may lead to problems where a connection to Service A is reused for Service B, resulting in an exception being thrown, the connection aborted, and a new channel created. To avoid this problem, use a CustomBinding and specify a different ConnectionPoolSettings.GroupName for each service the client communicates with.","leadings":["","> "],"nodes":[{"content":" The <xref:System.ServiceModel.NetTcpBinding> uses TCP connection pooling based on the service’s host DNS name and the port number the service is listening on. This works well when a client makes calls to different services on different ports, or services are hosted in a single process and share a port. If a single client calls multiple services sharing a port that are hosted in different processes, or are WAS/IIS hosted, the client side pooling may lead to problems where a connection to Service A is reused for Service B, resulting in an exception being thrown, the connection aborted, and a new channel created. To avoid this problem, use a CustomBinding and specify a different ConnectionPoolSettings.GroupName for each service the client communicates with.","pos":[11,776],"nodes":[{"content":"The <ph id=\"ph1\">&lt;xref:System.ServiceModel.NetTcpBinding&gt;</ph> uses TCP connection pooling based on the service’s host DNS name and the port number the service is listening on.","pos":[1,159],"source":" The <xref:System.ServiceModel.NetTcpBinding> uses TCP connection pooling based on the service’s host DNS name and the port number the service is listening on."},{"content":"This works well when a client makes calls to different services on different ports, or services are hosted in a single process and share a port.","pos":[160,304]},{"content":"If a single client calls multiple services sharing a port that are hosted in different processes, or are WAS/IIS hosted, the client side pooling may lead to problems where a connection to Service A is reused for Service B, resulting in an exception being thrown, the connection aborted, and a new channel created.","pos":[305,618]},{"content":"To avoid this problem, use a CustomBinding and specify a different ConnectionPoolSettings.GroupName for each service the client communicates with.","pos":[619,765]}]}]}],"pos":[2112,4313],"yaml":true,"extradata":"MT"},{"content":"Initializes a new instance of the <xref href=\"System.ServiceModel.NetTcpBinding\"></xref> class.","nodes":[{"pos":[0,95],"content":"Initializes a new instance of the <ph id=\"ph1\">&lt;xref href=\"System.ServiceModel.NetTcpBinding\"&gt;&lt;/xref&gt;</ph> class.","source":"Initializes a new instance of the <xref href=\"System.ServiceModel.NetTcpBinding\"></xref> class."}],"pos":[8543,8639],"yaml":true},{"content":"By default, transport security is used to secure communication (that is, the value of <xref:System.ServiceModel.SecurityMode> is set to <xref:System.ServiceModel.SecurityMode.Transport>) and reliable sessions are disabled (that is <xref:System.ServiceModel.OptionalReliableSession.Enabled%2A> is `false`).","nodes":[{"pos":[0,305],"content":"By default, transport security is used to secure communication (that is, the value of <ph id=\"ph1\">&lt;xref:System.ServiceModel.SecurityMode&gt;</ph> is set to <ph id=\"ph2\">&lt;xref:System.ServiceModel.SecurityMode.Transport&gt;</ph>) and reliable sessions are disabled (that is <ph id=\"ph3\">&lt;xref:System.ServiceModel.OptionalReliableSession.Enabled%2A&gt;</ph> is <ph id=\"ph4\">`false`</ph>).","source":"By default, transport security is used to secure communication (that is, the value of <xref:System.ServiceModel.SecurityMode> is set to <xref:System.ServiceModel.SecurityMode.Transport>) and reliable sessions are disabled (that is <xref:System.ServiceModel.OptionalReliableSession.Enabled%2A> is `false`)."}],"pos":[8650,8956],"yaml":true,"extradata":"MT"},{"content":"Initializes a new instance of the <xref href=\"System.ServiceModel.NetTcpBinding\"></xref> class with the type of security used specified.","nodes":[{"pos":[0,136],"content":"Initializes a new instance of the <ph id=\"ph1\">&lt;xref href=\"System.ServiceModel.NetTcpBinding\"&gt;&lt;/xref&gt;</ph> class with the type of security used specified.","source":"Initializes a new instance of the <xref href=\"System.ServiceModel.NetTcpBinding\"></xref> class with the type of security used specified."}],"pos":[10549,10686],"yaml":true},{"content":"Use this constructor when you want to configure the security. If you want to configure security and enable reliable sessions, use <xref:System.ServiceModel.NetTcpBinding.%23ctor%28System.ServiceModel.SecurityMode%2CSystem.Boolean%29?displayProperty=fullName>.","nodes":[{"pos":[0,259],"content":"Use this constructor when you want to configure the security. If you want to configure security and enable reliable sessions, use <xref:System.ServiceModel.NetTcpBinding.%23ctor%28System.ServiceModel.SecurityMode%2CSystem.Boolean%29?displayProperty=fullName>.","nodes":[{"content":"Use this constructor when you want to configure the security. If you want to configure security and enable reliable sessions, use <xref:System.ServiceModel.NetTcpBinding.%23ctor%28System.ServiceModel.SecurityMode%2CSystem.Boolean%29?displayProperty=fullName>.","pos":[0,259],"nodes":[{"content":"Use this constructor when you want to configure the security.","pos":[0,61]},{"content":"If you want to configure security and enable reliable sessions, use <ph id=\"ph1\">&lt;xref:System.ServiceModel.NetTcpBinding.%23ctor%28System.ServiceModel.SecurityMode%2CSystem.Boolean%29?displayProperty=fullName&gt;</ph>.","pos":[62,259],"source":" If you want to configure security and enable reliable sessions, use <xref:System.ServiceModel.NetTcpBinding.%23ctor%28System.ServiceModel.SecurityMode%2CSystem.Boolean%29?displayProperty=fullName>."}]}]}],"pos":[10697,10957],"yaml":true,"extradata":"MT"},{"content":"The <xref href=\"System.ServiceModel.SecurityMode\"></xref> value that specifies the type of security used with the binding.","nodes":[{"pos":[0,122],"content":"The <ph id=\"ph1\">&lt;xref href=\"System.ServiceModel.SecurityMode\"&gt;&lt;/xref&gt;</ph> value that specifies the type of security used with the binding.","source":"The <xref href=\"System.ServiceModel.SecurityMode\"></xref> value that specifies the type of security used with the binding."}],"pos":[11401,11524],"yaml":true},{"content":"Initializes a new instance of the <xref href=\"System.ServiceModel.NetTcpBinding\"></xref> class with a specified configuration name.","nodes":[{"pos":[0,131],"content":"Initializes a new instance of the <ph id=\"ph1\">&lt;xref href=\"System.ServiceModel.NetTcpBinding\"&gt;&lt;/xref&gt;</ph> class with a specified configuration name.","source":"Initializes a new instance of the <xref href=\"System.ServiceModel.NetTcpBinding\"></xref> class with a specified configuration name."}],"pos":[12704,12836],"yaml":true},{"content":"Use this constructor when you want to initialize the binding settings from configuration.","nodes":[{"pos":[0,89],"content":"Use this constructor when you want to initialize the binding settings from configuration.","nodes":[{"content":"Use this constructor when you want to initialize the binding settings from configuration.","pos":[0,89]}]}],"pos":[12847,12937],"yaml":true,"extradata":"MT"},{"content":"The binding configuration name for the <xref href=\"System.ServiceModel.NetTcpBinding\"></xref>.","nodes":[{"pos":[0,94],"content":"The binding configuration name for the <ph id=\"ph1\">&lt;xref href=\"System.ServiceModel.NetTcpBinding\"&gt;&lt;/xref&gt;</ph>.","source":"The binding configuration name for the <xref href=\"System.ServiceModel.NetTcpBinding\"></xref>."}],"pos":[13352,13447],"yaml":true},{"content":"Initializes a new instance of the <xref href=\"System.ServiceModel.NetTcpBinding\"></xref> class with the type of security used specified and with a value that indicates whether reliable sessions are explicitly enabled.","nodes":[{"pos":[0,217],"content":"Initializes a new instance of the <ph id=\"ph1\">&lt;xref href=\"System.ServiceModel.NetTcpBinding\"&gt;&lt;/xref&gt;</ph> class with the type of security used specified and with a value that indicates whether reliable sessions are explicitly enabled.","source":"Initializes a new instance of the <xref href=\"System.ServiceModel.NetTcpBinding\"></xref> class with the type of security used specified and with a value that indicates whether reliable sessions are explicitly enabled."}],"pos":[14774,14992],"yaml":true},{"content":"Use this constructor when you want to configure the security and enable reliable sessions.","nodes":[{"pos":[0,90],"content":"Use this constructor when you want to configure the security and enable reliable sessions.","nodes":[{"content":"Use this constructor when you want to configure the security and enable reliable sessions.","pos":[0,90]}]}],"pos":[15003,15094],"yaml":true,"extradata":"MT"},{"content":"The <xref href=\"System.ServiceModel.SecurityMode\"></xref> value that specifies the type of security used with the binding.","nodes":[{"pos":[0,122],"content":"The <ph id=\"ph1\">&lt;xref href=\"System.ServiceModel.SecurityMode\"&gt;&lt;/xref&gt;</ph> value that specifies the type of security used with the binding.","source":"The <xref href=\"System.ServiceModel.SecurityMode\"></xref> value that specifies the type of security used with the binding."}],"pos":[15598,15721],"yaml":true},{"content":"`true` if reliable sessions are enabled; otherwise, `false`.","nodes":[{"pos":[0,60],"content":"<ph id=\"ph1\">`true`</ph> if reliable sessions are enabled; otherwise, <ph id=\"ph2\">`false`</ph>.","source":"`true` if reliable sessions are enabled; otherwise, `false`."}],"pos":[15800,15863],"yaml":true},{"content":"Creates a collection with the binding elements for the binding.","nodes":[{"pos":[0,63],"content":"Creates a collection with the binding elements for the binding.","nodes":[{"content":"Creates a collection with the binding elements for the binding.","pos":[0,63]}]}],"pos":[17045,17109],"yaml":true},{"content":"The <xref href=\"System.Collections.Generic.ICollection`1\"></xref> of type <xref href=\"System.ServiceModel.Channels.BindingElement\"></xref> that makes up the binding.","nodes":[{"pos":[0,165],"content":"The <ph id=\"ph1\">&lt;xref href=\"System.Collections.Generic.ICollection`1\"&gt;&lt;/xref&gt;</ph> of type <ph id=\"ph2\">&lt;xref href=\"System.ServiceModel.Channels.BindingElement\"&gt;&lt;/xref&gt;</ph> that makes up the binding.","source":"The <xref href=\"System.Collections.Generic.ICollection`1\"></xref> of type <xref href=\"System.ServiceModel.Channels.BindingElement\"></xref> that makes up the binding."}],"pos":[17670,17836],"yaml":true},{"content":"Gets the version of SOAP that is used for messages processed by this binding.","nodes":[{"pos":[0,77],"content":"Gets the version of SOAP that is used for messages processed by this binding.","nodes":[{"content":"Gets the version of SOAP that is used for messages processed by this binding.","pos":[0,77]}]}],"pos":[18994,19072],"yaml":true},{"content":"The property always returns SOAP 1.2. This value cannot be changed.","nodes":[{"pos":[0,67],"content":"The property always returns SOAP 1.2. This value cannot be changed.","nodes":[{"content":"The property always returns SOAP 1.2. This value cannot be changed.","pos":[0,67],"nodes":[{"content":"The property always returns SOAP 1.2.","pos":[0,37]},{"content":"This value cannot be changed.","pos":[38,67]}]}]}],"pos":[19083,19151],"yaml":true,"extradata":"MT"},{"content":"The value of the <xref href=\"System.ServiceModel.EnvelopeVersion\"></xref> that is used with this binding. The value is SOAP 1.2.","nodes":[{"pos":[0,128],"content":"The value of the <xref href=\"System.ServiceModel.EnvelopeVersion\"></xref> that is used with this binding. The value is SOAP 1.2.","nodes":[{"content":"The value of the <ph id=\"ph1\">&lt;xref href=\"System.ServiceModel.EnvelopeVersion\"&gt;&lt;/xref&gt;</ph> that is used with this binding.","pos":[0,105],"source":"The value of the <xref href=\"System.ServiceModel.EnvelopeVersion\"></xref> that is used with this binding."},{"content":"The value is SOAP 1.2.","pos":[106,128]}]}],"pos":[19559,19688],"yaml":true},{"content":"Gets or sets a value that indicates whether the hostname is used to reach the service when matching the URI.","nodes":[{"pos":[0,108],"content":"Gets or sets a value that indicates whether the hostname is used to reach the service when matching the URI.","nodes":[{"content":"Gets or sets a value that indicates whether the hostname is used to reach the service when matching the URI.","pos":[0,108]}]}],"pos":[20882,20991],"yaml":true},{"content":"One of the <xref href=\"System.ServiceModel.Configuration.WSDualHttpBindingElement.HostNameComparisonMode\"></xref> values that indicates whether the hostname is used to reach the service when matching the URI. The default value is <xref href=\"System.ServiceModel.HostNameComparisonMode.StrongWildcard\"></xref>, which ignores the hostname in the match.","nodes":[{"pos":[0,350],"content":"One of the <xref href=\"System.ServiceModel.Configuration.WSDualHttpBindingElement.HostNameComparisonMode\"></xref> values that indicates whether the hostname is used to reach the service when matching the URI. The default value is <xref href=\"System.ServiceModel.HostNameComparisonMode.StrongWildcard\"></xref>, which ignores the hostname in the match.","nodes":[{"content":"One of the <ph id=\"ph1\">&lt;xref href=\"System.ServiceModel.Configuration.WSDualHttpBindingElement.HostNameComparisonMode\"&gt;&lt;/xref&gt;</ph> values that indicates whether the hostname is used to reach the service when matching the URI.","pos":[0,208],"source":"One of the <xref href=\"System.ServiceModel.Configuration.WSDualHttpBindingElement.HostNameComparisonMode\"></xref> values that indicates whether the hostname is used to reach the service when matching the URI."},{"content":"The default value is <ph id=\"ph1\">&lt;xref href=\"System.ServiceModel.HostNameComparisonMode.StrongWildcard\"&gt;&lt;/xref&gt;</ph>, which ignores the hostname in the match.","pos":[209,350],"source":" The default value is <xref href=\"System.ServiceModel.HostNameComparisonMode.StrongWildcard\"></xref>, which ignores the hostname in the match."}]}],"pos":[21446,21797],"yaml":true},{"content":"Gets or sets the maximum number of queued connection requests that can be pending.","nodes":[{"pos":[0,82],"content":"Gets or sets the maximum number of queued connection requests that can be pending.","nodes":[{"content":"Gets or sets the maximum number of queued connection requests that can be pending.","pos":[0,82]}]}],"pos":[22944,23027],"yaml":true},{"content":"<xref:System.ServiceModel.Channels.TcpTransportBindingElement.ListenBacklog%2A> is a socket-level property that describes the number of \"pending accept\" requests to be queued. If the listen backlog queue fills up, new socket requests will be rejected.","nodes":[{"pos":[0,251],"content":"<xref:System.ServiceModel.Channels.TcpTransportBindingElement.ListenBacklog%2A> is a socket-level property that describes the number of \"pending accept\" requests to be queued. If the listen backlog queue fills up, new socket requests will be rejected.","nodes":[{"content":"<xref:System.ServiceModel.Channels.TcpTransportBindingElement.ListenBacklog%2A> is a socket-level property that describes the number of \"pending accept\" requests to be queued. If the listen backlog queue fills up, new socket requests will be rejected.","pos":[0,251],"nodes":[{"content":"<ph id=\"ph1\">&lt;xref:System.ServiceModel.Channels.TcpTransportBindingElement.ListenBacklog%2A&gt;</ph> is a socket-level property that describes the number of \"pending accept\" requests to be queued.","pos":[0,175],"source":"<xref:System.ServiceModel.Channels.TcpTransportBindingElement.ListenBacklog%2A> is a socket-level property that describes the number of \"pending accept\" requests to be queued."},{"content":"If the listen backlog queue fills up, new socket requests will be rejected.","pos":[176,251]}]}]}],"pos":[23038,23290],"yaml":true,"extradata":"MT"},{"content":"Returns the maximum number of pending queued connection requests. The default is 10.","nodes":[{"pos":[0,84],"content":"Returns the maximum number of pending queued connection requests. The default is 10.","nodes":[{"content":"Returns the maximum number of pending queued connection requests. The default is 10.","pos":[0,84],"nodes":[{"content":"Returns the maximum number of pending queued connection requests.","pos":[0,65]},{"content":"The default is 10.","pos":[66,84]}]}]}],"pos":[23644,23729],"yaml":true},{"content":"The value cannot be less than zero.","nodes":[{"pos":[0,35],"content":"The value cannot be less than zero.","nodes":[{"content":"The value cannot be less than zero.","pos":[0,35]}]}],"pos":[23918,23954],"yaml":true},{"content":"Gets or sets the maximum size, in bytes, allowed for a buffer pool that stores TCP messages processed by the binding.","nodes":[{"pos":[0,117],"content":"Gets or sets the maximum size, in bytes, allowed for a buffer pool that stores TCP messages processed by the binding.","nodes":[{"content":"Gets or sets the maximum size, in bytes, allowed for a buffer pool that stores TCP messages processed by the binding.","pos":[0,117]}]}],"pos":[25038,25156],"yaml":true},{"content":"If you receive more data than you can buffer, the data that exceeds the buffer size remains on the underlying socket until your buffer has room for the rest of the data.","nodes":[{"pos":[0,169],"content":"If you receive more data than you can buffer, the data that exceeds the buffer size remains on the underlying socket until your buffer has room for the rest of the data.","nodes":[{"content":"If you receive more data than you can buffer, the data that exceeds the buffer size remains on the underlying socket until your buffer has room for the rest of the data.","pos":[0,169]}]}],"pos":[25167,25337],"yaml":true,"extradata":"MT"},{"content":"The maximum size allowed for a buffer pool that stores TCP messages processed by the binding. The default value is 524,288 bytes.","nodes":[{"pos":[0,129],"content":"The maximum size allowed for a buffer pool that stores TCP messages processed by the binding. The default value is 524,288 bytes.","nodes":[{"content":"The maximum size allowed for a buffer pool that stores TCP messages processed by the binding. The default value is 524,288 bytes.","pos":[0,129],"nodes":[{"content":"The maximum size allowed for a buffer pool that stores TCP messages processed by the binding.","pos":[0,93]},{"content":"The default value is 524,288 bytes.","pos":[94,129]}]}]}],"pos":[25700,25830],"yaml":true},{"content":"Gets or sets a value that specifies the maximum size, in bytes, of the buffer used to store messages in memory.","nodes":[{"pos":[0,111],"content":"Gets or sets a value that specifies the maximum size, in bytes, of the buffer used to store messages in memory.","nodes":[{"content":"Gets or sets a value that specifies the maximum size, in bytes, of the buffer used to store messages in memory.","pos":[0,111]}]}],"pos":[26972,27084],"yaml":true},{"content":"If you receive more data than you can buffer, the data that exceeds the buffer size remains on the underlying socket until your buffer has room for the rest of the data.","nodes":[{"pos":[0,169],"content":"If you receive more data than you can buffer, the data that exceeds the buffer size remains on the underlying socket until your buffer has room for the rest of the data.","nodes":[{"content":"If you receive more data than you can buffer, the data that exceeds the buffer size remains on the underlying socket until your buffer has room for the rest of the data.","pos":[0,169]}]}],"pos":[27095,27265],"yaml":true,"extradata":"MT"},{"content":"The maximum size, in bytes, of the buffer used to store messages in memory. The default value is 65,536 bytes.","nodes":[{"pos":[0,110],"content":"The maximum size, in bytes, of the buffer used to store messages in memory. The default value is 65,536 bytes.","nodes":[{"content":"The maximum size, in bytes, of the buffer used to store messages in memory. The default value is 65,536 bytes.","pos":[0,110],"nodes":[{"content":"The maximum size, in bytes, of the buffer used to store messages in memory.","pos":[0,75]},{"content":"The default value is 65,536 bytes.","pos":[76,110]}]}]}],"pos":[27628,27739],"yaml":true},{"content":"Gets or sets a value that controls the maximum number of connections to be pooled for subsequent reuse on the client and the maximum number of connections allowed to be pending dispatch on the server.","nodes":[{"pos":[0,200],"content":"Gets or sets a value that controls the maximum number of connections to be pooled for subsequent reuse on the client and the maximum number of connections allowed to be pending dispatch on the server.","nodes":[{"content":"Gets or sets a value that controls the maximum number of connections to be pooled for subsequent reuse on the client and the maximum number of connections allowed to be pending dispatch on the server.","pos":[0,200]}]}],"pos":[28883,29084],"yaml":true},{"content":"The default value is 10.","nodes":[{"pos":[0,24],"content":"The default value is 10.","nodes":[{"content":"The default value is 10.","pos":[0,24]}]}],"pos":[29095,29120],"yaml":true,"extradata":"MT"},{"content":"On the client, the maximum number of connections to be pooled for subsequent reuse; on the server, the maximum number of connections allowed to be pending dispatch.","nodes":[{"pos":[0,164],"content":"On the client, the maximum number of connections to be pooled for subsequent reuse; on the server, the maximum number of connections allowed to be pending dispatch.","nodes":[{"content":"On the client, the maximum number of connections to be pooled for subsequent reuse; on the server, the maximum number of connections allowed to be pending dispatch.","pos":[0,164]}]}],"pos":[29478,29643],"yaml":true},{"content":"Gets or sets the maximum size, in bytes, for a received message that is processed by the binding.","nodes":[{"pos":[0,97],"content":"Gets or sets the maximum size, in bytes, for a received message that is processed by the binding.","nodes":[{"content":"Gets or sets the maximum size, in bytes, for a received message that is processed by the binding.","pos":[0,97]}]}],"pos":[30836,30934],"yaml":true},{"content":"The maximum size (in bytes) for a received message that is processed by the binding. The default value is 65,536 bytes.","nodes":[{"pos":[0,119],"content":"The maximum size (in bytes) for a received message that is processed by the binding. The default value is 65,536 bytes.","nodes":[{"content":"The maximum size (in bytes) for a received message that is processed by the binding. The default value is 65,536 bytes.","pos":[0,119],"nodes":[{"content":"The maximum size (in bytes) for a received message that is processed by the binding.","pos":[0,84]},{"content":"The default value is 65,536 bytes.","pos":[85,119]}]}]}],"pos":[31323,31443],"yaml":true},{"content":"Gets or sets a value that indicates whether TCP port sharing is enabled for the connection configured with this binding.","nodes":[{"pos":[0,120],"content":"Gets or sets a value that indicates whether TCP port sharing is enabled for the connection configured with this binding.","nodes":[{"content":"Gets or sets a value that indicates whether TCP port sharing is enabled for the connection configured with this binding.","pos":[0,120]}]}],"pos":[32620,32741],"yaml":true},{"content":"Using this setting requires enabling the [!INCLUDE[indigo1](~/includes/indigo1-md.md)] TCP Port Sharing Service by changing its startup type to Manual or Automatic.  \n  \n [!INCLUDE[crabout](~/includes/crabout-md.md)] the TCP Listener and how to start it, see<xref:System.Net.Sockets.TcpListener>.","nodes":[{"pos":[0,164],"content":"Using this setting requires enabling the <ph id=\"ph1\">[!INCLUDE[indigo1](~/includes/indigo1-md.md)]</ph> TCP Port Sharing Service by changing its startup type to Manual or Automatic.","source":"Using this setting requires enabling the [!INCLUDE[indigo1](~/includes/indigo1-md.md)] TCP Port Sharing Service by changing its startup type to Manual or Automatic."},{"pos":[171,296],"content":"<ph id=\"ph1\">[!INCLUDE[crabout](~/includes/crabout-md.md)]</ph> the TCP Listener and how to start it, see<ph id=\"ph2\">&lt;xref:System.Net.Sockets.TcpListener&gt;</ph>.","source":"[!INCLUDE[crabout](~/includes/crabout-md.md)] the TCP Listener and how to start it, see<xref:System.Net.Sockets.TcpListener>."}],"pos":[32752,33053],"yaml":true,"extradata":"MT"},{"content":"`true` if TCP port sharing is enabled; otherwise, `false`. The default value is `false`.","nodes":[{"pos":[0,88],"content":"`true` if TCP port sharing is enabled; otherwise, `false`. The default value is `false`.","nodes":[{"content":"<ph id=\"ph1\">`true`</ph> if TCP port sharing is enabled; otherwise, <ph id=\"ph2\">`false`</ph>.","pos":[0,58],"source":"`true` if TCP port sharing is enabled; otherwise, `false`."},{"content":"The default value is <ph id=\"ph1\">`false`</ph>.","pos":[59,88],"source":" The default value is `false`."}]}],"pos":[33422,33513],"yaml":true},{"content":"Gets or sets constraints on the complexity of SOAP messages that can be processed by endpoints configured with this binding.","nodes":[{"pos":[0,124],"content":"Gets or sets constraints on the complexity of SOAP messages that can be processed by endpoints configured with this binding.","nodes":[{"content":"Gets or sets constraints on the complexity of SOAP messages that can be processed by endpoints configured with this binding.","pos":[0,124]}]}],"pos":[34650,34775],"yaml":true},{"content":"The complexity constraints protect against a class of denial of service (DOS) attacks that attempt to use message complexity to tie up endpoint processing resources. The properties that express these constraints and their default values are as follows:  \n  \n-   <xref:System.Xml.XmlDictionaryReaderQuotas.MaxDepth%2A> = 32  \n  \n-   <xref:System.Xml.XmlDictionaryReaderQuotas.MaxStringContentLength%2A> = 8192  \n  \n-   <xref:System.Xml.XmlDictionaryReaderQuotas.MaxArrayLength%2A> = 16384  \n  \n-   <xref:System.Xml.XmlDictionaryReaderQuotas.MaxBytesPerRead%2A> = 4096  \n  \n-   <xref:System.Xml.XmlDictionaryReaderQuotas.MaxNameTableCharCount%2A> = 16384","nodes":[{"pos":[0,252],"content":"The complexity constraints protect against a class of denial of service (DOS) attacks that attempt to use message complexity to tie up endpoint processing resources. The properties that express these constraints and their default values are as follows:","nodes":[{"content":"The complexity constraints protect against a class of denial of service (DOS) attacks that attempt to use message complexity to tie up endpoint processing resources. The properties that express these constraints and their default values are as follows:","pos":[0,252],"nodes":[{"content":"The complexity constraints protect against a class of denial of service (DOS) attacks that attempt to use message complexity to tie up endpoint processing resources.","pos":[0,165]},{"content":"The properties that express these constraints and their default values are as follows:","pos":[166,252]}]}]},{"pos":[262,322],"content":"<xref:System.Xml.XmlDictionaryReaderQuotas.MaxDepth%2A> = 32","nodes":[{"content":"<ph id=\"ph1\">&lt;xref:System.Xml.XmlDictionaryReaderQuotas.MaxDepth%2A&gt;</ph> = 32","pos":[0,60],"source":"<xref:System.Xml.XmlDictionaryReaderQuotas.MaxDepth%2A> = 32"}]},{"pos":[332,408],"content":"<xref:System.Xml.XmlDictionaryReaderQuotas.MaxStringContentLength%2A> = 8192","nodes":[{"content":"<ph id=\"ph1\">&lt;xref:System.Xml.XmlDictionaryReaderQuotas.MaxStringContentLength%2A&gt;</ph> = 8192","pos":[0,76],"source":"<xref:System.Xml.XmlDictionaryReaderQuotas.MaxStringContentLength%2A> = 8192"}]},{"pos":[418,487],"content":"<xref:System.Xml.XmlDictionaryReaderQuotas.MaxArrayLength%2A> = 16384","nodes":[{"content":"<ph id=\"ph1\">&lt;xref:System.Xml.XmlDictionaryReaderQuotas.MaxArrayLength%2A&gt;</ph> = 16384","pos":[0,69],"source":"<xref:System.Xml.XmlDictionaryReaderQuotas.MaxArrayLength%2A> = 16384"}]},{"pos":[497,566],"content":"<xref:System.Xml.XmlDictionaryReaderQuotas.MaxBytesPerRead%2A> = 4096","nodes":[{"content":"<ph id=\"ph1\">&lt;xref:System.Xml.XmlDictionaryReaderQuotas.MaxBytesPerRead%2A&gt;</ph> = 4096","pos":[0,69],"source":"<xref:System.Xml.XmlDictionaryReaderQuotas.MaxBytesPerRead%2A> = 4096"}]},{"pos":[576,652],"content":"<xref:System.Xml.XmlDictionaryReaderQuotas.MaxNameTableCharCount%2A> = 16384","nodes":[{"content":"<ph id=\"ph1\">&lt;xref:System.Xml.XmlDictionaryReaderQuotas.MaxNameTableCharCount%2A&gt;</ph> = 16384","pos":[0,76],"source":"<xref:System.Xml.XmlDictionaryReaderQuotas.MaxNameTableCharCount%2A> = 16384"}]}],"pos":[34786,35451],"yaml":true,"extradata":"MT"},{"content":"The <xref href=\"System.Xml.XmlDictionaryReaderQuotas\"></xref> that specifies the complexity constraints on soap messages exchanged. The default values for these constraints are provided in the following Remarks section.","nodes":[{"pos":[0,219],"content":"The <xref href=\"System.Xml.XmlDictionaryReaderQuotas\"></xref> that specifies the complexity constraints on soap messages exchanged. The default values for these constraints are provided in the following Remarks section.","nodes":[{"content":"The <ph id=\"ph1\">&lt;xref href=\"System.Xml.XmlDictionaryReaderQuotas\"&gt;&lt;/xref&gt;</ph> that specifies the complexity constraints on soap messages exchanged.","pos":[0,131],"source":"The <xref href=\"System.Xml.XmlDictionaryReaderQuotas\"></xref> that specifies the complexity constraints on soap messages exchanged."},{"content":"The default values for these constraints are provided in the following Remarks section.","pos":[132,219]}]}],"pos":[35872,36092],"yaml":true},{"content":"Gets an object that indicates whether a reliable session is established between channel endpoints.","nodes":[{"pos":[0,98],"content":"Gets an object that indicates whether a reliable session is established between channel endpoints.","nodes":[{"content":"Gets an object that indicates whether a reliable session is established between channel endpoints.","pos":[0,98]}]}],"pos":[37241,37340],"yaml":true},{"content":"An <xref href=\"System.ServiceModel.OptionalReliableSession\"></xref> that indicates whether a WS-RM reliable session is established between channel endpoints. The default value for <xref href=\"System.ServiceModel.OptionalReliableSession.Enabled\"></xref> is `false`.","nodes":[{"pos":[0,264],"content":"An <xref href=\"System.ServiceModel.OptionalReliableSession\"></xref> that indicates whether a WS-RM reliable session is established between channel endpoints. The default value for <xref href=\"System.ServiceModel.OptionalReliableSession.Enabled\"></xref> is `false`.","nodes":[{"content":"An <ph id=\"ph1\">&lt;xref href=\"System.ServiceModel.OptionalReliableSession\"&gt;&lt;/xref&gt;</ph> that indicates whether a WS-RM reliable session is established between channel endpoints.","pos":[0,157],"source":"An <xref href=\"System.ServiceModel.OptionalReliableSession\"></xref> that indicates whether a WS-RM reliable session is established between channel endpoints."},{"content":"The default value for <ph id=\"ph1\">&lt;xref href=\"System.ServiceModel.OptionalReliableSession.Enabled\"&gt;&lt;/xref&gt;</ph> is <ph id=\"ph2\">`false`</ph>.","pos":[158,264],"source":" The default value for <xref href=\"System.ServiceModel.OptionalReliableSession.Enabled\"></xref> is `false`."}]}],"pos":[37780,38045],"yaml":true},{"content":"Returns the URI scheme for the transport.","nodes":[{"pos":[0,41],"content":"Returns the URI scheme for the transport.","nodes":[{"content":"Returns the URI scheme for the transport.","pos":[0,41]}]}],"pos":[39143,39185],"yaml":true},{"content":"The property is provided to validate bindings against base addresses.","nodes":[{"pos":[0,69],"content":"The property is provided to validate bindings against base addresses.","nodes":[{"content":"The property is provided to validate bindings against base addresses.","pos":[0,69]}]}],"pos":[39196,39266],"yaml":true,"extradata":"MT"},{"content":"The URI scheme for the transport, which is \"net.tcp\".","nodes":[{"pos":[0,53],"content":"The URI scheme for the transport, which is \"net.tcp\".","nodes":[{"content":"The URI scheme for the transport, which is \"net.tcp\".","pos":[0,53]}]}],"pos":[39616,39670],"yaml":true},{"content":"Gets an object that specifies the type of security used with services configured with this binding.","nodes":[{"pos":[0,99],"content":"Gets an object that specifies the type of security used with services configured with this binding.","nodes":[{"content":"Gets an object that specifies the type of security used with services configured with this binding.","pos":[0,99]}]}],"pos":[40771,40871],"yaml":true},{"content":"The <xref:System.ServiceModel.NetTcpSecurity> provides the types of security and settings available to the <xref:System.ServiceModel.NetTcpBinding>.","nodes":[{"pos":[0,148],"content":"The <xref:System.ServiceModel.NetTcpSecurity> provides the types of security and settings available to the <xref:System.ServiceModel.NetTcpBinding>.","nodes":[{"content":"The <ph id=\"ph1\">&lt;xref:System.ServiceModel.NetTcpSecurity&gt;</ph> provides the types of security and settings available to the <ph id=\"ph2\">&lt;xref:System.ServiceModel.NetTcpBinding&gt;</ph>.","pos":[0,148],"source":"The <xref:System.ServiceModel.NetTcpSecurity> provides the types of security and settings available to the <xref:System.ServiceModel.NetTcpBinding>."}]}],"pos":[40882,41031],"yaml":true,"extradata":"MT"},{"content":"The <xref href=\"System.ServiceModel.NetTcpSecurity\"></xref> that contains the types of security used with this binding. The default mode of security for the `NetTCPBinding` is <xref href=\"System.ServiceModel.SecurityMode.Transport\"></xref>.","nodes":[{"pos":[0,240],"content":"The <xref href=\"System.ServiceModel.NetTcpSecurity\"></xref> that contains the types of security used with this binding. The default mode of security for the `NetTCPBinding` is <xref href=\"System.ServiceModel.SecurityMode.Transport\"></xref>.","nodes":[{"content":"The <ph id=\"ph1\">&lt;xref href=\"System.ServiceModel.NetTcpSecurity\"&gt;&lt;/xref&gt;</ph> that contains the types of security used with this binding.","pos":[0,119],"source":"The <xref href=\"System.ServiceModel.NetTcpSecurity\"></xref> that contains the types of security used with this binding."},{"content":"The default mode of security for the <ph id=\"ph1\">`NetTCPBinding`</ph> is <ph id=\"ph2\">&lt;xref href=\"System.ServiceModel.SecurityMode.Transport\"&gt;&lt;/xref&gt;</ph>.","pos":[120,240],"source":" The default mode of security for the `NetTCPBinding` is <xref href=\"System.ServiceModel.SecurityMode.Transport\"></xref>."}]}],"pos":[41430,41671],"yaml":true},{"content":"Returns a value that indicates whether the <xref href=\"System.ServiceModel.NetTcpBinding.ListenBacklog\"></xref> property has changed from its default value and should be serialized.","nodes":[{"pos":[0,181],"content":"Returns a value that indicates whether the <ph id=\"ph1\">&lt;xref href=\"System.ServiceModel.NetTcpBinding.ListenBacklog\"&gt;&lt;/xref&gt;</ph> property has changed from its default value and should be serialized.","source":"Returns a value that indicates whether the <xref href=\"System.ServiceModel.NetTcpBinding.ListenBacklog\"></xref> property has changed from its default value and should be serialized."}],"pos":[42898,43080],"yaml":true},{"content":"`true` if the <xref href=\"System.ServiceModel.NetTcpBinding.ListenBacklog\"></xref> property value should be serialized; otherwise, `false`.","nodes":[{"pos":[0,139],"content":"<ph id=\"ph1\">`true`</ph> if the <ph id=\"ph2\">&lt;xref href=\"System.ServiceModel.NetTcpBinding.ListenBacklog\"&gt;&lt;/xref&gt;</ph> property value should be serialized; otherwise, <ph id=\"ph3\">`false`</ph>.","source":"`true` if the <xref href=\"System.ServiceModel.NetTcpBinding.ListenBacklog\"></xref> property value should be serialized; otherwise, `false`."}],"pos":[43225,43367],"yaml":true},{"content":"Returns a value that indicates whether the <xref href=\"System.ServiceModel.NetTcpBinding.MaxConnections\"></xref> property has changed from its default value and should be serialized.","nodes":[{"pos":[0,182],"content":"Returns a value that indicates whether the <ph id=\"ph1\">&lt;xref href=\"System.ServiceModel.NetTcpBinding.MaxConnections\"&gt;&lt;/xref&gt;</ph> property has changed from its default value and should be serialized.","source":"Returns a value that indicates whether the <xref href=\"System.ServiceModel.NetTcpBinding.MaxConnections\"></xref> property has changed from its default value and should be serialized."}],"pos":[44513,44696],"yaml":true},{"content":"`true` if the <xref href=\"System.ServiceModel.NetTcpBinding.MaxConnections\"></xref> property value should be serialized; otherwise, `false`.","nodes":[{"pos":[0,140],"content":"<ph id=\"ph1\">`true`</ph> if the <ph id=\"ph2\">&lt;xref href=\"System.ServiceModel.NetTcpBinding.MaxConnections\"&gt;&lt;/xref&gt;</ph> property value should be serialized; otherwise, <ph id=\"ph3\">`false`</ph>.","source":"`true` if the <xref href=\"System.ServiceModel.NetTcpBinding.MaxConnections\"></xref> property value should be serialized; otherwise, `false`."}],"pos":[44842,44985],"yaml":true},{"content":"Returns a value that indicates whether the <xref href=\"System.ServiceModel.NetTcpBinding.ReaderQuotas\"></xref> property has changed from its default value and should be serialized.","nodes":[{"pos":[0,180],"content":"Returns a value that indicates whether the <ph id=\"ph1\">&lt;xref href=\"System.ServiceModel.NetTcpBinding.ReaderQuotas\"&gt;&lt;/xref&gt;</ph> property has changed from its default value and should be serialized.","source":"Returns a value that indicates whether the <xref href=\"System.ServiceModel.NetTcpBinding.ReaderQuotas\"></xref> property has changed from its default value and should be serialized."}],"pos":[46120,46301],"yaml":true},{"content":"`true` if the <xref href=\"System.ServiceModel.NetTcpBinding.ReaderQuotas\"></xref> property value should be serialized; otherwise, `false`.","nodes":[{"pos":[0,138],"content":"<ph id=\"ph1\">`true`</ph> if the <ph id=\"ph2\">&lt;xref href=\"System.ServiceModel.NetTcpBinding.ReaderQuotas\"&gt;&lt;/xref&gt;</ph> property value should be serialized; otherwise, <ph id=\"ph3\">`false`</ph>.","source":"`true` if the <xref href=\"System.ServiceModel.NetTcpBinding.ReaderQuotas\"></xref> property value should be serialized; otherwise, `false`."}],"pos":[46445,46586],"yaml":true},{"content":"Returns a value that indicates whether the <xref href=\"System.ServiceModel.NetTcpBinding.ReliableSession\"></xref> property has changed from its default value and should be serialized.","nodes":[{"pos":[0,183],"content":"Returns a value that indicates whether the <ph id=\"ph1\">&lt;xref href=\"System.ServiceModel.NetTcpBinding.ReliableSession\"&gt;&lt;/xref&gt;</ph> property has changed from its default value and should be serialized.","source":"Returns a value that indicates whether the <xref href=\"System.ServiceModel.NetTcpBinding.ReliableSession\"></xref> property has changed from its default value and should be serialized."}],"pos":[47737,47921],"yaml":true},{"content":"`true` if the <xref href=\"System.ServiceModel.NetTcpBinding.ReliableSession\"></xref> property value should be serialized; otherwise, `false`.","nodes":[{"pos":[0,141],"content":"<ph id=\"ph1\">`true`</ph> if the <ph id=\"ph2\">&lt;xref href=\"System.ServiceModel.NetTcpBinding.ReliableSession\"&gt;&lt;/xref&gt;</ph> property value should be serialized; otherwise, <ph id=\"ph3\">`false`</ph>.","source":"`true` if the <xref href=\"System.ServiceModel.NetTcpBinding.ReliableSession\"></xref> property value should be serialized; otherwise, `false`."}],"pos":[48068,48212],"yaml":true},{"content":"Returns a value that indicates whether the <xref href=\"System.ServiceModel.NetTcpBinding.Security\"></xref> property has changed from its default value and should be serialized.","nodes":[{"pos":[0,176],"content":"Returns a value that indicates whether the <ph id=\"ph1\">&lt;xref href=\"System.ServiceModel.NetTcpBinding.Security\"&gt;&lt;/xref&gt;</ph> property has changed from its default value and should be serialized.","source":"Returns a value that indicates whether the <xref href=\"System.ServiceModel.NetTcpBinding.Security\"></xref> property has changed from its default value and should be serialized."}],"pos":[49324,49501],"yaml":true},{"content":"`true` if the <xref href=\"System.ServiceModel.NetTcpBinding.Security\"></xref> property value should be serialized; otherwise, `false`.","nodes":[{"pos":[0,134],"content":"<ph id=\"ph1\">`true`</ph> if the <ph id=\"ph2\">&lt;xref href=\"System.ServiceModel.NetTcpBinding.Security\"&gt;&lt;/xref&gt;</ph> property value should be serialized; otherwise, <ph id=\"ph3\">`false`</ph>.","source":"`true` if the <xref href=\"System.ServiceModel.NetTcpBinding.Security\"></xref> property value should be serialized; otherwise, `false`."}],"pos":[49641,49778],"yaml":true},{"content":"Returns a value that indicates whether the <xref href=\"System.ServiceModel.NetTcpBinding.TransactionProtocol\"></xref> property has changed from its default value and should be serialized.","nodes":[{"pos":[0,187],"content":"Returns a value that indicates whether the <ph id=\"ph1\">&lt;xref href=\"System.ServiceModel.NetTcpBinding.TransactionProtocol\"&gt;&lt;/xref&gt;</ph> property has changed from its default value and should be serialized.","source":"Returns a value that indicates whether the <xref href=\"System.ServiceModel.NetTcpBinding.TransactionProtocol\"></xref> property has changed from its default value and should be serialized."}],"pos":[50949,51137],"yaml":true},{"content":"`true` if the <xref href=\"System.ServiceModel.NetTcpBinding.TransactionProtocol\"></xref> property value should be serialized; otherwise, `false`.","nodes":[{"pos":[0,145],"content":"<ph id=\"ph1\">`true`</ph> if the <ph id=\"ph2\">&lt;xref href=\"System.ServiceModel.NetTcpBinding.TransactionProtocol\"&gt;&lt;/xref&gt;</ph> property value should be serialized; otherwise, <ph id=\"ph3\">`false`</ph>.","source":"`true` if the <xref href=\"System.ServiceModel.NetTcpBinding.TransactionProtocol\"></xref> property value should be serialized; otherwise, `false`."}],"pos":[51288,51436],"yaml":true},{"content":"Gets or sets a value that determines whether transaction flow is enabled.","nodes":[{"pos":[0,73],"content":"Gets or sets a value that determines whether transaction flow is enabled.","nodes":[{"content":"Gets or sets a value that determines whether transaction flow is enabled.","pos":[0,73]}]}],"pos":[52500,52574],"yaml":true},{"content":"`true` if transaction flow is enabled; otherwise, `false`. The default value is `false`.","nodes":[{"pos":[0,88],"content":"`true` if transaction flow is enabled; otherwise, `false`. The default value is `false`.","nodes":[{"content":"<ph id=\"ph1\">`true`</ph> if transaction flow is enabled; otherwise, <ph id=\"ph2\">`false`</ph>.","pos":[0,58],"source":"`true` if transaction flow is enabled; otherwise, `false`."},{"content":"The default value is <ph id=\"ph1\">`false`</ph>.","pos":[59,88],"source":" The default value is `false`."}]}],"pos":[52951,53042],"yaml":true},{"content":"Gets or sets the transactions protocol used by the service to flow transactions.","nodes":[{"pos":[0,80],"content":"Gets or sets the transactions protocol used by the service to flow transactions.","nodes":[{"content":"Gets or sets the transactions protocol used by the service to flow transactions.","pos":[0,80]}]}],"pos":[54218,54299],"yaml":true},{"content":"The <xref href=\"System.ServiceModel.TransactionProtocol\"></xref> used by the service to flow transactions.","nodes":[{"pos":[0,106],"content":"The <ph id=\"ph1\">&lt;xref href=\"System.ServiceModel.TransactionProtocol\"&gt;&lt;/xref&gt;</ph> used by the service to flow transactions.","source":"The <xref href=\"System.ServiceModel.TransactionProtocol\"></xref> used by the service to flow transactions."}],"pos":[54744,54851],"yaml":true},{"content":"Gets or sets a value that indicates whether the service configured with the binding uses streamed or buffered (or both) modes of message transfer.","nodes":[{"pos":[0,146],"content":"Gets or sets a value that indicates whether the service configured with the binding uses streamed or buffered (or both) modes of message transfer.","nodes":[{"content":"Gets or sets a value that indicates whether the service configured with the binding uses streamed or buffered (or both) modes of message transfer.","pos":[0,146]}]}],"pos":[55865,56012],"yaml":true},{"content":"The <xref href=\"System.ServiceModel.TransferMode\"></xref> value that indicates whether the service configured with the binding uses streamed or buffered (or both) modes of message transfer.","nodes":[{"pos":[0,189],"content":"The <ph id=\"ph1\">&lt;xref href=\"System.ServiceModel.TransferMode\"&gt;&lt;/xref&gt;</ph> value that indicates whether the service configured with the binding uses streamed or buffered (or both) modes of message transfer.","source":"The <xref href=\"System.ServiceModel.TransferMode\"></xref> value that indicates whether the service configured with the binding uses streamed or buffered (or both) modes of message transfer."}],"pos":[56429,56619],"yaml":true},{"content":"Gets a value that indicates whether incoming requests are handled synchronously or asynchronously.","nodes":[{"pos":[0,98],"content":"Gets a value that indicates whether incoming requests are handled synchronously or asynchronously.","nodes":[{"content":"Gets a value that indicates whether incoming requests are handled synchronously or asynchronously.","pos":[0,98]}]}],"pos":[58061,58160],"yaml":true},{"content":"This run-time behavior for receiving messages in either a service or client application can be changed using [\\&lt;synchronousReceive\\&gt;](~/docs/framework/configure-apps/file-schema/wcf/synchronousreceive-element.md).","nodes":[{"pos":[0,219],"content":"This run-time behavior for receiving messages in either a service or client application can be changed using <bpt id=\"p1\">[</bpt><ph id=\"ph1\">\\&amp;</ph>lt;synchronousReceive<ph id=\"ph2\">\\&amp;</ph>gt;<ept id=\"p1\">](~/docs/framework/configure-apps/file-schema/wcf/synchronousreceive-element.md)</ept>.","source":"This run-time behavior for receiving messages in either a service or client application can be changed using [\\&lt;synchronousReceive\\&gt;](~/docs/framework/configure-apps/file-schema/wcf/synchronousreceive-element.md)."}],"pos":[58171,58391],"yaml":true,"extradata":"MT"},{"content":"`true` if incoming requests are handled synchronously; `false` if incoming requests are handled asynchronously. The default value is `false`.","nodes":[{"pos":[0,141],"content":"`true` if incoming requests are handled synchronously; `false` if incoming requests are handled asynchronously. The default value is `false`.","nodes":[{"content":"<ph id=\"ph1\">`true`</ph> if incoming requests are handled synchronously; <ph id=\"ph2\">`false`</ph> if incoming requests are handled asynchronously.","pos":[0,111],"source":"`true` if incoming requests are handled synchronously; `false` if incoming requests are handled asynchronously."},{"content":"The default value is <ph id=\"ph1\">`false`</ph>.","pos":[112,141],"source":" The default value is `false`."}]}],"pos":[58800,58944],"yaml":true}],"content":"### YamlMime:ManagedReference\nitems:\n- uid: System.ServiceModel.NetTcpBinding\n  commentId: T:System.ServiceModel.NetTcpBinding\n  id: NetTcpBinding\n  children:\n  - System.ServiceModel.NetTcpBinding.#ctor\n  - System.ServiceModel.NetTcpBinding.#ctor(System.ServiceModel.SecurityMode)\n  - System.ServiceModel.NetTcpBinding.#ctor(System.String)\n  - System.ServiceModel.NetTcpBinding.#ctor(System.ServiceModel.SecurityMode,System.Boolean)\n  - System.ServiceModel.NetTcpBinding.CreateBindingElements\n  - System.ServiceModel.NetTcpBinding.EnvelopeVersion\n  - System.ServiceModel.NetTcpBinding.HostNameComparisonMode\n  - System.ServiceModel.NetTcpBinding.ListenBacklog\n  - System.ServiceModel.NetTcpBinding.MaxBufferPoolSize\n  - System.ServiceModel.NetTcpBinding.MaxBufferSize\n  - System.ServiceModel.NetTcpBinding.MaxConnections\n  - System.ServiceModel.NetTcpBinding.MaxReceivedMessageSize\n  - System.ServiceModel.NetTcpBinding.PortSharingEnabled\n  - System.ServiceModel.NetTcpBinding.ReaderQuotas\n  - System.ServiceModel.NetTcpBinding.ReliableSession\n  - System.ServiceModel.NetTcpBinding.Scheme\n  - System.ServiceModel.NetTcpBinding.Security\n  - System.ServiceModel.NetTcpBinding.ShouldSerializeListenBacklog\n  - System.ServiceModel.NetTcpBinding.ShouldSerializeMaxConnections\n  - System.ServiceModel.NetTcpBinding.ShouldSerializeReaderQuotas\n  - System.ServiceModel.NetTcpBinding.ShouldSerializeReliableSession\n  - System.ServiceModel.NetTcpBinding.ShouldSerializeSecurity\n  - System.ServiceModel.NetTcpBinding.ShouldSerializeTransactionProtocol\n  - System.ServiceModel.NetTcpBinding.TransactionFlow\n  - System.ServiceModel.NetTcpBinding.TransactionProtocol\n  - System.ServiceModel.NetTcpBinding.TransferMode\n  - System.ServiceModel.NetTcpBinding.System#ServiceModel#Channels#IBindingRuntimePreferences#ReceiveSynchronously\n  langs:\n  - csharp\n  name: NetTcpBinding\n  nameWithType: NetTcpBinding\n  fullName: System.ServiceModel.NetTcpBinding\n  type: Class\n  assemblies:\n  - System.ServiceModel\n  namespace: System.ServiceModel\n  summary: A secure, reliable binding suitable for cross-machine communication.\n  remarks: \"The <xref:System.ServiceModel.NetTcpBinding> generates a run-time communication stack by default, which uses transport security, TCP for message delivery, and a binary message encoding. This binding is an appropriate [!INCLUDE[indigo1](~/includes/indigo1-md.md)] system-provided choice for communicating over an Intranet.  \\n  \\n The default configuration for the <xref:System.ServiceModel.NetTcpBinding> is faster than the configuration provided by the <xref:System.ServiceModel.WSHttpBinding>, but it is intended only for [!INCLUDE[indigo2](~/includes/indigo2-md.md)]-to-[!INCLUDE[indigo2](~/includes/indigo2-md.md)] communication. The security behavior is configurable using the optional `securityMode` parameter in the constructor. The use of WS-ReliableMessaging is configurable using the optional `reliableSessionEnabled` parameter. But reliable messaging is off by default. More generally, the HTTP system-provided bindings such as <xref:System.ServiceModel.WSHttpBinding> and <xref:System.ServiceModel.BasicHttpBinding> are configured to turn things on by default, whereas the <xref:System.ServiceModel.NetTcpBinding> binding turns things off by default so that you have to opt-in to get support, for example, for one of the WS-* specifications. This means that the default configuration for TCP is faster at exchanging messages between endpoints than that configured for the HTTP bindings by default.  \\n  \\n> [!WARNING]\\n>  The <xref:System.ServiceModel.NetTcpBinding> uses TCP connection pooling based on the service’s host DNS name and the port number the service is listening on. This works well when a client makes calls to different services on different ports, or services are hosted in a single process and share a port. If a single client calls multiple services sharing a port that are hosted in different processes, or are WAS/IIS hosted, the client side pooling may lead to problems where a connection to Service A is reused for Service B, resulting in an exception being thrown, the connection aborted, and a new channel created. To avoid this problem, use a CustomBinding and specify a different ConnectionPoolSettings.GroupName for each service the client communicates with.\"\n  example:\n  - \"This example shows how to create a <xref:System.ServiceModel.NetTcpBinding>, setting the security mode and transport credential type.  \\n  \\n [!code-csharp[S_UENetTcpBinding#1](~/samples/snippets/csharp/VS_Snippets_CFX/s_uenettcpbinding/cs/source.cs#1)]\"\n  syntax:\n    content: 'public class NetTcpBinding : System.ServiceModel.Channels.Binding, System.ServiceModel.Channels.IBindingRuntimePreferences'\n  inheritance:\n  - System.Object\n  - System.ServiceModel.Channels.Binding\n  derivedClasses:\n  - System.ServiceModel.NetTcpContextBinding\n  implements:\n  - System.ServiceModel.Channels.IBindingRuntimePreferences\n  inheritedMembers:\n  - System.Object.Equals(System.Object)\n  - System.Object.Equals(System.Object,System.Object)\n  - System.Object.GetHashCode\n  - System.Object.GetType\n  - System.Object.MemberwiseClone\n  - System.Object.ReferenceEquals(System.Object,System.Object)\n  - System.Object.ToString\n  - System.ServiceModel.Channels.Binding.BuildChannelFactory``1(System.Object[])\n  - System.ServiceModel.Channels.Binding.BuildChannelFactory``1(System.ServiceModel.Channels.BindingParameterCollection)\n  - System.ServiceModel.Channels.Binding.BuildChannelListener``1(System.Object[])\n  - System.ServiceModel.Channels.Binding.BuildChannelListener``1(System.ServiceModel.Channels.BindingParameterCollection)\n  - System.ServiceModel.Channels.Binding.BuildChannelListener``1(System.Uri,System.Object[])\n  - System.ServiceModel.Channels.Binding.BuildChannelListener``1(System.Uri,System.ServiceModel.Channels.BindingParameterCollection)\n  - System.ServiceModel.Channels.Binding.BuildChannelListener``1(System.Uri,System.String,System.Object[])\n  - System.ServiceModel.Channels.Binding.BuildChannelListener``1(System.Uri,System.String,System.ServiceModel.Channels.BindingParameterCollection)\n  - System.ServiceModel.Channels.Binding.BuildChannelListener``1(System.Uri,System.String,System.ServiceModel.Description.ListenUriMode,System.Object[])\n  - System.ServiceModel.Channels.Binding.BuildChannelListener``1(System.Uri,System.String,System.ServiceModel.Description.ListenUriMode,System.ServiceModel.Channels.BindingParameterCollection)\n  - System.ServiceModel.Channels.Binding.CanBuildChannelFactory``1(System.Object[])\n  - System.ServiceModel.Channels.Binding.CanBuildChannelFactory``1(System.ServiceModel.Channels.BindingParameterCollection)\n  - System.ServiceModel.Channels.Binding.CanBuildChannelListener``1(System.Object[])\n  - System.ServiceModel.Channels.Binding.CanBuildChannelListener``1(System.ServiceModel.Channels.BindingParameterCollection)\n  - System.ServiceModel.Channels.Binding.CloseTimeout\n  - System.ServiceModel.Channels.Binding.GetProperty``1(System.ServiceModel.Channels.BindingParameterCollection)\n  - System.ServiceModel.Channels.Binding.MessageVersion\n  - System.ServiceModel.Channels.Binding.Name\n  - System.ServiceModel.Channels.Binding.Namespace\n  - System.ServiceModel.Channels.Binding.OpenTimeout\n  - System.ServiceModel.Channels.Binding.ReceiveTimeout\n  - System.ServiceModel.Channels.Binding.SendTimeout\n  - System.ServiceModel.Channels.Binding.ShouldSerializeName\n  - System.ServiceModel.Channels.Binding.ShouldSerializeNamespace\n  version:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.ServiceModel/NetTcpBinding.xml\n  ms.technology:\n  - dotnet-standard\n  author: Erikre\n  ms.author: erikre\n  manager: erikre\n- uid: System.ServiceModel.NetTcpBinding.#ctor\n  commentId: M:System.ServiceModel.NetTcpBinding.#ctor\n  id: '#ctor'\n  parent: System.ServiceModel.NetTcpBinding\n  langs:\n  - csharp\n  name: NetTcpBinding()\n  nameWithType: NetTcpBinding.NetTcpBinding()\n  fullName: NetTcpBinding.NetTcpBinding()\n  type: Constructor\n  assemblies:\n  - System.ServiceModel\n  namespace: System.ServiceModel\n  summary: Initializes a new instance of the <xref href=\"System.ServiceModel.NetTcpBinding\"></xref> class.\n  remarks: By default, transport security is used to secure communication (that is, the value of <xref:System.ServiceModel.SecurityMode> is set to <xref:System.ServiceModel.SecurityMode.Transport>) and reliable sessions are disabled (that is <xref:System.ServiceModel.OptionalReliableSession.Enabled%2A> is `false`).\n  example:\n  - \"This example shows how to create a <xref:System.ServiceModel.NetTcpBinding>, setting the security mode and transport credential type.  \\n  \\n [!code-csharp[S_UENETTCPBINDING#1](~/samples/snippets/csharp/VS_Snippets_CFX/s_uenettcpbinding/cs/source.cs#1)]\"\n  syntax:\n    content: public NetTcpBinding ();\n    parameters: []\n  overload: System.ServiceModel.NetTcpBinding.#ctor*\n  exceptions: []\n  version:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.ServiceModel/NetTcpBinding.xml\n  ms.technology:\n  - dotnet-standard\n  author: Erikre\n  ms.author: erikre\n  manager: erikre\n- uid: System.ServiceModel.NetTcpBinding.#ctor(System.ServiceModel.SecurityMode)\n  commentId: M:System.ServiceModel.NetTcpBinding.#ctor(System.ServiceModel.SecurityMode)\n  id: '#ctor(System.ServiceModel.SecurityMode)'\n  parent: System.ServiceModel.NetTcpBinding\n  langs:\n  - csharp\n  name: NetTcpBinding(SecurityMode)\n  nameWithType: NetTcpBinding.NetTcpBinding(SecurityMode)\n  fullName: NetTcpBinding.NetTcpBinding(SecurityMode)\n  type: Constructor\n  assemblies:\n  - System.ServiceModel\n  namespace: System.ServiceModel\n  summary: Initializes a new instance of the <xref href=\"System.ServiceModel.NetTcpBinding\"></xref> class with the type of security used specified.\n  remarks: Use this constructor when you want to configure the security. If you want to configure security and enable reliable sessions, use <xref:System.ServiceModel.NetTcpBinding.%23ctor%28System.ServiceModel.SecurityMode%2CSystem.Boolean%29?displayProperty=fullName>.\n  example:\n  - \"This example shows how to create a <xref:System.ServiceModel.NetTcpBinding> using the security mode parameter.  \\n  \\n [!code-csharp[S_UENETTCPBINDING#3](~/samples/snippets/csharp/VS_Snippets_CFX/s_uenettcpbinding/cs/source.cs#3)]\"\n  syntax:\n    content: public NetTcpBinding (System.ServiceModel.SecurityMode securityMode);\n    parameters:\n    - id: securityMode\n      type: System.ServiceModel.SecurityMode\n      description: The <xref href=\"System.ServiceModel.SecurityMode\"></xref> value that specifies the type of security used with the binding.\n  overload: System.ServiceModel.NetTcpBinding.#ctor*\n  exceptions: []\n  version:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.ServiceModel/NetTcpBinding.xml\n  ms.technology:\n  - dotnet-standard\n  author: Erikre\n  ms.author: erikre\n  manager: erikre\n- uid: System.ServiceModel.NetTcpBinding.#ctor(System.String)\n  commentId: M:System.ServiceModel.NetTcpBinding.#ctor(System.String)\n  id: '#ctor(System.String)'\n  parent: System.ServiceModel.NetTcpBinding\n  langs:\n  - csharp\n  name: NetTcpBinding(String)\n  nameWithType: NetTcpBinding.NetTcpBinding(String)\n  fullName: NetTcpBinding.NetTcpBinding(String)\n  type: Constructor\n  assemblies:\n  - System.ServiceModel\n  namespace: System.ServiceModel\n  summary: Initializes a new instance of the <xref href=\"System.ServiceModel.NetTcpBinding\"></xref> class with a specified configuration name.\n  remarks: Use this constructor when you want to initialize the binding settings from configuration.\n  example:\n  - \"This example shows how to create a <xref:System.ServiceModel.NetTcpBinding> using the `configurationName` parameter.  \\n  \\n [!code-csharp[S_UENETTCPBINDING#4](~/samples/snippets/csharp/VS_Snippets_CFX/s_uenettcpbinding/cs/source.cs#4)]\"\n  syntax:\n    content: public NetTcpBinding (string configurationName);\n    parameters:\n    - id: configurationName\n      type: System.String\n      description: The binding configuration name for the <xref href=\"System.ServiceModel.NetTcpBinding\"></xref>.\n  overload: System.ServiceModel.NetTcpBinding.#ctor*\n  exceptions: []\n  version:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.ServiceModel/NetTcpBinding.xml\n  ms.technology:\n  - dotnet-standard\n  author: Erikre\n  ms.author: erikre\n  manager: erikre\n- uid: System.ServiceModel.NetTcpBinding.#ctor(System.ServiceModel.SecurityMode,System.Boolean)\n  commentId: M:System.ServiceModel.NetTcpBinding.#ctor(System.ServiceModel.SecurityMode,System.Boolean)\n  id: '#ctor(System.ServiceModel.SecurityMode,System.Boolean)'\n  parent: System.ServiceModel.NetTcpBinding\n  langs:\n  - csharp\n  name: NetTcpBinding(SecurityMode, Boolean)\n  nameWithType: NetTcpBinding.NetTcpBinding(SecurityMode, Boolean)\n  fullName: NetTcpBinding.NetTcpBinding(SecurityMode, Boolean)\n  type: Constructor\n  assemblies:\n  - System.ServiceModel\n  namespace: System.ServiceModel\n  summary: Initializes a new instance of the <xref href=\"System.ServiceModel.NetTcpBinding\"></xref> class with the type of security used specified and with a value that indicates whether reliable sessions are explicitly enabled.\n  remarks: Use this constructor when you want to configure the security and enable reliable sessions.\n  example:\n  - \"This example shows how to create a <xref:System.ServiceModel.NetTcpBinding> using the `securityMode` and `reliableSessionEnabled` parameters.  \\n  \\n [!code-csharp[S_UENETTCPBINDING#5](~/samples/snippets/csharp/VS_Snippets_CFX/s_uenettcpbinding/cs/source.cs#5)]\"\n  syntax:\n    content: public NetTcpBinding (System.ServiceModel.SecurityMode securityMode, bool reliableSessionEnabled);\n    parameters:\n    - id: securityMode\n      type: System.ServiceModel.SecurityMode\n      description: The <xref href=\"System.ServiceModel.SecurityMode\"></xref> value that specifies the type of security used with the binding.\n    - id: reliableSessionEnabled\n      type: System.Boolean\n      description: '`true` if reliable sessions are enabled; otherwise, `false`.'\n  overload: System.ServiceModel.NetTcpBinding.#ctor*\n  exceptions: []\n  version:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.ServiceModel/NetTcpBinding.xml\n  ms.technology:\n  - dotnet-standard\n  author: Erikre\n  ms.author: erikre\n  manager: erikre\n- uid: System.ServiceModel.NetTcpBinding.CreateBindingElements\n  commentId: M:System.ServiceModel.NetTcpBinding.CreateBindingElements\n  id: CreateBindingElements\n  parent: System.ServiceModel.NetTcpBinding\n  langs:\n  - csharp\n  name: CreateBindingElements()\n  nameWithType: NetTcpBinding.CreateBindingElements()\n  fullName: NetTcpBinding.CreateBindingElements()\n  type: Method\n  assemblies:\n  - System.ServiceModel\n  namespace: System.ServiceModel\n  summary: Creates a collection with the binding elements for the binding.\n  remarks: ''\n  example:\n  - \"This example shows how to use the <xref:System.ServiceModel.NetTcpBinding.CreateBindingElements%2A> method to create a collection with the binding elements for the binding.  \\n  \\n [!code-csharp[S_UENetTcpBinding#20](~/samples/snippets/csharp/VS_Snippets_CFX/s_uenettcpbinding/cs/source.cs#20)]\"\n  syntax:\n    content: public override System.ServiceModel.Channels.BindingElementCollection CreateBindingElements ();\n    parameters: []\n    return:\n      type: System.ServiceModel.Channels.BindingElementCollection\n      description: The <xref href=\"System.Collections.Generic.ICollection`1\"></xref> of type <xref href=\"System.ServiceModel.Channels.BindingElement\"></xref> that makes up the binding.\n  overload: System.ServiceModel.NetTcpBinding.CreateBindingElements*\n  exceptions: []\n  version:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.ServiceModel/NetTcpBinding.xml\n  ms.technology:\n  - dotnet-standard\n  author: Erikre\n  ms.author: erikre\n  manager: erikre\n- uid: System.ServiceModel.NetTcpBinding.EnvelopeVersion\n  commentId: P:System.ServiceModel.NetTcpBinding.EnvelopeVersion\n  id: EnvelopeVersion\n  parent: System.ServiceModel.NetTcpBinding\n  langs:\n  - csharp\n  name: EnvelopeVersion\n  nameWithType: NetTcpBinding.EnvelopeVersion\n  fullName: NetTcpBinding.EnvelopeVersion\n  type: Property\n  assemblies:\n  - System.ServiceModel\n  namespace: System.ServiceModel\n  summary: Gets the version of SOAP that is used for messages processed by this binding.\n  remarks: The property always returns SOAP 1.2. This value cannot be changed.\n  example:\n  - \"This example shows how to get the <xref:System.ServiceModel.NetTcpBinding.EnvelopeVersion%2A> value.  \\n  \\n [!code-csharp[S_UENETTCPBINDING#6](~/samples/snippets/csharp/VS_Snippets_CFX/s_uenettcpbinding/cs/source.cs#6)]\"\n  syntax:\n    content: public System.ServiceModel.EnvelopeVersion EnvelopeVersion { get; }\n    return:\n      type: System.ServiceModel.EnvelopeVersion\n      description: The value of the <xref href=\"System.ServiceModel.EnvelopeVersion\"></xref> that is used with this binding. The value is SOAP 1.2.\n  overload: System.ServiceModel.NetTcpBinding.EnvelopeVersion*\n  exceptions: []\n  version:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.ServiceModel/NetTcpBinding.xml\n  ms.technology:\n  - dotnet-standard\n  author: Erikre\n  ms.author: erikre\n  manager: erikre\n- uid: System.ServiceModel.NetTcpBinding.HostNameComparisonMode\n  commentId: P:System.ServiceModel.NetTcpBinding.HostNameComparisonMode\n  id: HostNameComparisonMode\n  parent: System.ServiceModel.NetTcpBinding\n  langs:\n  - csharp\n  name: HostNameComparisonMode\n  nameWithType: NetTcpBinding.HostNameComparisonMode\n  fullName: NetTcpBinding.HostNameComparisonMode\n  type: Property\n  assemblies:\n  - System.ServiceModel\n  namespace: System.ServiceModel\n  summary: Gets or sets a value that indicates whether the hostname is used to reach the service when matching the URI.\n  remarks: ''\n  example:\n  - \"This example shows how to get the <xref:System.ServiceModel.NetTcpBinding.HostNameComparisonMode%2A> value.  \\n  \\n [!code-csharp[S_UENetTcpBinding#7](~/samples/snippets/csharp/VS_Snippets_CFX/s_uenettcpbinding/cs/source.cs#7)]\"\n  syntax:\n    content: public System.ServiceModel.HostNameComparisonMode HostNameComparisonMode { get; set; }\n    return:\n      type: System.ServiceModel.HostNameComparisonMode\n      description: One of the <xref href=\"System.ServiceModel.Configuration.WSDualHttpBindingElement.HostNameComparisonMode\"></xref> values that indicates whether the hostname is used to reach the service when matching the URI. The default value is <xref href=\"System.ServiceModel.HostNameComparisonMode.StrongWildcard\"></xref>, which ignores the hostname in the match.\n  overload: System.ServiceModel.NetTcpBinding.HostNameComparisonMode*\n  exceptions: []\n  version:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.ServiceModel/NetTcpBinding.xml\n  ms.technology:\n  - dotnet-standard\n  author: Erikre\n  ms.author: erikre\n  manager: erikre\n- uid: System.ServiceModel.NetTcpBinding.ListenBacklog\n  commentId: P:System.ServiceModel.NetTcpBinding.ListenBacklog\n  id: ListenBacklog\n  parent: System.ServiceModel.NetTcpBinding\n  langs:\n  - csharp\n  name: ListenBacklog\n  nameWithType: NetTcpBinding.ListenBacklog\n  fullName: NetTcpBinding.ListenBacklog\n  type: Property\n  assemblies:\n  - System.ServiceModel\n  namespace: System.ServiceModel\n  summary: Gets or sets the maximum number of queued connection requests that can be pending.\n  remarks: <xref:System.ServiceModel.Channels.TcpTransportBindingElement.ListenBacklog%2A> is a socket-level property that describes the number of \"pending accept\" requests to be queued. If the listen backlog queue fills up, new socket requests will be rejected.\n  example:\n  - \"This example shows how to get the <xref:System.ServiceModel.NetTcpBinding.ListenBacklog%2A> value.  \\n  \\n [!code-csharp[S_UENetTcpBinding#8](~/samples/snippets/csharp/VS_Snippets_CFX/s_uenettcpbinding/cs/source.cs#8)]\"\n  syntax:\n    content: public int ListenBacklog { get; set; }\n    return:\n      type: System.Int32\n      description: Returns the maximum number of pending queued connection requests. The default is 10.\n  overload: System.ServiceModel.NetTcpBinding.ListenBacklog*\n  exceptions:\n  - type: System.ArgumentOutOfRangeException\n    commentId: T:System.ArgumentOutOfRangeException\n    description: The value cannot be less than zero.\n  version:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.ServiceModel/NetTcpBinding.xml\n  ms.technology:\n  - dotnet-standard\n  author: Erikre\n  ms.author: erikre\n  manager: erikre\n- uid: System.ServiceModel.NetTcpBinding.MaxBufferPoolSize\n  commentId: P:System.ServiceModel.NetTcpBinding.MaxBufferPoolSize\n  id: MaxBufferPoolSize\n  parent: System.ServiceModel.NetTcpBinding\n  langs:\n  - csharp\n  name: MaxBufferPoolSize\n  nameWithType: NetTcpBinding.MaxBufferPoolSize\n  fullName: NetTcpBinding.MaxBufferPoolSize\n  type: Property\n  assemblies:\n  - System.ServiceModel\n  namespace: System.ServiceModel\n  summary: Gets or sets the maximum size, in bytes, allowed for a buffer pool that stores TCP messages processed by the binding.\n  remarks: If you receive more data than you can buffer, the data that exceeds the buffer size remains on the underlying socket until your buffer has room for the rest of the data.\n  example:\n  - \"This example shows how to get the <xref:System.ServiceModel.NetTcpBinding.MaxBufferPoolSize%2A> value.  \\n  \\n [!code-csharp[S_UENetTcpBinding#9](~/samples/snippets/csharp/VS_Snippets_CFX/s_uenettcpbinding/cs/source.cs#9)]\"\n  syntax:\n    content: public long MaxBufferPoolSize { get; set; }\n    return:\n      type: System.Int64\n      description: The maximum size allowed for a buffer pool that stores TCP messages processed by the binding. The default value is 524,288 bytes.\n  overload: System.ServiceModel.NetTcpBinding.MaxBufferPoolSize*\n  exceptions: []\n  version:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.ServiceModel/NetTcpBinding.xml\n  ms.technology:\n  - dotnet-standard\n  author: Erikre\n  ms.author: erikre\n  manager: erikre\n- uid: System.ServiceModel.NetTcpBinding.MaxBufferSize\n  commentId: P:System.ServiceModel.NetTcpBinding.MaxBufferSize\n  id: MaxBufferSize\n  parent: System.ServiceModel.NetTcpBinding\n  langs:\n  - csharp\n  name: MaxBufferSize\n  nameWithType: NetTcpBinding.MaxBufferSize\n  fullName: NetTcpBinding.MaxBufferSize\n  type: Property\n  assemblies:\n  - System.ServiceModel\n  namespace: System.ServiceModel\n  summary: Gets or sets a value that specifies the maximum size, in bytes, of the buffer used to store messages in memory.\n  remarks: If you receive more data than you can buffer, the data that exceeds the buffer size remains on the underlying socket until your buffer has room for the rest of the data.\n  example:\n  - \"This example shows how to get the value of the <xref:System.ServiceModel.NetTcpBinding.MaxBufferSize%2A>.  \\n  \\n [!code-csharp[S_UENetTcpBinding#10](~/samples/snippets/csharp/VS_Snippets_CFX/s_uenettcpbinding/cs/source.cs#10)]\"\n  syntax:\n    content: public int MaxBufferSize { get; set; }\n    return:\n      type: System.Int32\n      description: The maximum size, in bytes, of the buffer used to store messages in memory. The default value is 65,536 bytes.\n  overload: System.ServiceModel.NetTcpBinding.MaxBufferSize*\n  exceptions: []\n  version:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.ServiceModel/NetTcpBinding.xml\n  ms.technology:\n  - dotnet-standard\n  author: Erikre\n  ms.author: erikre\n  manager: erikre\n- uid: System.ServiceModel.NetTcpBinding.MaxConnections\n  commentId: P:System.ServiceModel.NetTcpBinding.MaxConnections\n  id: MaxConnections\n  parent: System.ServiceModel.NetTcpBinding\n  langs:\n  - csharp\n  name: MaxConnections\n  nameWithType: NetTcpBinding.MaxConnections\n  fullName: NetTcpBinding.MaxConnections\n  type: Property\n  assemblies:\n  - System.ServiceModel\n  namespace: System.ServiceModel\n  summary: Gets or sets a value that controls the maximum number of connections to be pooled for subsequent reuse on the client and the maximum number of connections allowed to be pending dispatch on the server.\n  remarks: The default value is 10.\n  example:\n  - \"This example shows how to get the <xref:System.ServiceModel.NetTcpBinding.MaxConnections%2A> value.  \\n  \\n [!code-csharp[S_UENetTcpBinding#11](~/samples/snippets/csharp/VS_Snippets_CFX/s_uenettcpbinding/cs/source.cs#11)]\"\n  syntax:\n    content: public int MaxConnections { get; set; }\n    return:\n      type: System.Int32\n      description: On the client, the maximum number of connections to be pooled for subsequent reuse; on the server, the maximum number of connections allowed to be pending dispatch.\n  overload: System.ServiceModel.NetTcpBinding.MaxConnections*\n  exceptions: []\n  version:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.ServiceModel/NetTcpBinding.xml\n  ms.technology:\n  - dotnet-standard\n  author: Erikre\n  ms.author: erikre\n  manager: erikre\n- uid: System.ServiceModel.NetTcpBinding.MaxReceivedMessageSize\n  commentId: P:System.ServiceModel.NetTcpBinding.MaxReceivedMessageSize\n  id: MaxReceivedMessageSize\n  parent: System.ServiceModel.NetTcpBinding\n  langs:\n  - csharp\n  name: MaxReceivedMessageSize\n  nameWithType: NetTcpBinding.MaxReceivedMessageSize\n  fullName: NetTcpBinding.MaxReceivedMessageSize\n  type: Property\n  assemblies:\n  - System.ServiceModel\n  namespace: System.ServiceModel\n  summary: Gets or sets the maximum size, in bytes, for a received message that is processed by the binding.\n  remarks: ''\n  example:\n  - \"This example shows how to get the <xref:System.ServiceModel.NetTcpBinding.MaxReceivedMessageSize%2A> value.  \\n  \\n [!code-csharp[S_UENetTcpBinding#12](~/samples/snippets/csharp/VS_Snippets_CFX/s_uenettcpbinding/cs/source.cs#12)]\"\n  syntax:\n    content: public long MaxReceivedMessageSize { get; set; }\n    return:\n      type: System.Int64\n      description: The maximum size (in bytes) for a received message that is processed by the binding. The default value is 65,536 bytes.\n  overload: System.ServiceModel.NetTcpBinding.MaxReceivedMessageSize*\n  exceptions: []\n  version:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.ServiceModel/NetTcpBinding.xml\n  ms.technology:\n  - dotnet-standard\n  author: Erikre\n  ms.author: erikre\n  manager: erikre\n- uid: System.ServiceModel.NetTcpBinding.PortSharingEnabled\n  commentId: P:System.ServiceModel.NetTcpBinding.PortSharingEnabled\n  id: PortSharingEnabled\n  parent: System.ServiceModel.NetTcpBinding\n  langs:\n  - csharp\n  name: PortSharingEnabled\n  nameWithType: NetTcpBinding.PortSharingEnabled\n  fullName: NetTcpBinding.PortSharingEnabled\n  type: Property\n  assemblies:\n  - System.ServiceModel\n  namespace: System.ServiceModel\n  summary: Gets or sets a value that indicates whether TCP port sharing is enabled for the connection configured with this binding.\n  remarks: \"Using this setting requires enabling the [!INCLUDE[indigo1](~/includes/indigo1-md.md)] TCP Port Sharing Service by changing its startup type to Manual or Automatic.  \\n  \\n [!INCLUDE[crabout](~/includes/crabout-md.md)] the TCP Listener and how to start it, see<xref:System.Net.Sockets.TcpListener>.\"\n  example:\n  - \"This example shows how to get the <xref:System.ServiceModel.NetTcpBinding.PortSharingEnabled%2A> value.  \\n  \\n [!code-csharp[S_UENetTcpBinding#13](~/samples/snippets/csharp/VS_Snippets_CFX/s_uenettcpbinding/cs/source.cs#13)]\"\n  syntax:\n    content: public bool PortSharingEnabled { get; set; }\n    return:\n      type: System.Boolean\n      description: '`true` if TCP port sharing is enabled; otherwise, `false`. The default value is `false`.'\n  overload: System.ServiceModel.NetTcpBinding.PortSharingEnabled*\n  exceptions: []\n  version:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.ServiceModel/NetTcpBinding.xml\n  ms.technology:\n  - dotnet-standard\n  author: Erikre\n  ms.author: erikre\n  manager: erikre\n- uid: System.ServiceModel.NetTcpBinding.ReaderQuotas\n  commentId: P:System.ServiceModel.NetTcpBinding.ReaderQuotas\n  id: ReaderQuotas\n  parent: System.ServiceModel.NetTcpBinding\n  langs:\n  - csharp\n  name: ReaderQuotas\n  nameWithType: NetTcpBinding.ReaderQuotas\n  fullName: NetTcpBinding.ReaderQuotas\n  type: Property\n  assemblies:\n  - System.ServiceModel\n  namespace: System.ServiceModel\n  summary: Gets or sets constraints on the complexity of SOAP messages that can be processed by endpoints configured with this binding.\n  remarks: \"The complexity constraints protect against a class of denial of service (DOS) attacks that attempt to use message complexity to tie up endpoint processing resources. The properties that express these constraints and their default values are as follows:  \\n  \\n-   <xref:System.Xml.XmlDictionaryReaderQuotas.MaxDepth%2A> = 32  \\n  \\n-   <xref:System.Xml.XmlDictionaryReaderQuotas.MaxStringContentLength%2A> = 8192  \\n  \\n-   <xref:System.Xml.XmlDictionaryReaderQuotas.MaxArrayLength%2A> = 16384  \\n  \\n-   <xref:System.Xml.XmlDictionaryReaderQuotas.MaxBytesPerRead%2A> = 4096  \\n  \\n-   <xref:System.Xml.XmlDictionaryReaderQuotas.MaxNameTableCharCount%2A> = 16384\"\n  example:\n  - \"The following example shows how to get the <xref:System.ServiceModel.NetTcpBinding.ReaderQuotas%2A> object.  \\n  \\n [!code-csharp[S_UENetTcpBinding#14](~/samples/snippets/csharp/VS_Snippets_CFX/s_uenettcpbinding/cs/source.cs#14)]\"\n  syntax:\n    content: public System.Xml.XmlDictionaryReaderQuotas ReaderQuotas { get; set; }\n    return:\n      type: System.Xml.XmlDictionaryReaderQuotas\n      description: The <xref href=\"System.Xml.XmlDictionaryReaderQuotas\"></xref> that specifies the complexity constraints on soap messages exchanged. The default values for these constraints are provided in the following Remarks section.\n  overload: System.ServiceModel.NetTcpBinding.ReaderQuotas*\n  exceptions: []\n  version:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.ServiceModel/NetTcpBinding.xml\n  ms.technology:\n  - dotnet-standard\n  author: Erikre\n  ms.author: erikre\n  manager: erikre\n- uid: System.ServiceModel.NetTcpBinding.ReliableSession\n  commentId: P:System.ServiceModel.NetTcpBinding.ReliableSession\n  id: ReliableSession\n  parent: System.ServiceModel.NetTcpBinding\n  langs:\n  - csharp\n  name: ReliableSession\n  nameWithType: NetTcpBinding.ReliableSession\n  fullName: NetTcpBinding.ReliableSession\n  type: Property\n  assemblies:\n  - System.ServiceModel\n  namespace: System.ServiceModel\n  summary: Gets an object that indicates whether a reliable session is established between channel endpoints.\n  remarks: ''\n  example:\n  - \"This example shows how to get the <xref:System.ServiceModel.NetTcpBinding.ReliableSession%2A> value.  \\n  \\n [!code-csharp[S_UENetTcpBinding#15](~/samples/snippets/csharp/VS_Snippets_CFX/s_uenettcpbinding/cs/source.cs#15)]\"\n  syntax:\n    content: public System.ServiceModel.OptionalReliableSession ReliableSession { get; }\n    return:\n      type: System.ServiceModel.OptionalReliableSession\n      description: An <xref href=\"System.ServiceModel.OptionalReliableSession\"></xref> that indicates whether a WS-RM reliable session is established between channel endpoints. The default value for <xref href=\"System.ServiceModel.OptionalReliableSession.Enabled\"></xref> is `false`.\n  overload: System.ServiceModel.NetTcpBinding.ReliableSession*\n  exceptions: []\n  version:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.ServiceModel/NetTcpBinding.xml\n  ms.technology:\n  - dotnet-standard\n  author: Erikre\n  ms.author: erikre\n  manager: erikre\n- uid: System.ServiceModel.NetTcpBinding.Scheme\n  commentId: P:System.ServiceModel.NetTcpBinding.Scheme\n  id: Scheme\n  parent: System.ServiceModel.NetTcpBinding\n  langs:\n  - csharp\n  name: Scheme\n  nameWithType: NetTcpBinding.Scheme\n  fullName: NetTcpBinding.Scheme\n  type: Property\n  assemblies:\n  - System.ServiceModel\n  namespace: System.ServiceModel\n  summary: Returns the URI scheme for the transport.\n  remarks: The property is provided to validate bindings against base addresses.\n  example:\n  - \"This example shows how to get the <xref:System.ServiceModel.NetTcpBinding.Scheme%2A> value.  \\n  \\n [!code-csharp[S_UENetTcpBinding#16](~/samples/snippets/csharp/VS_Snippets_CFX/s_uenettcpbinding/cs/source.cs#16)]\"\n  syntax:\n    content: public override string Scheme { get; }\n    return:\n      type: System.String\n      description: The URI scheme for the transport, which is \"net.tcp\".\n  overload: System.ServiceModel.NetTcpBinding.Scheme*\n  exceptions: []\n  version:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.ServiceModel/NetTcpBinding.xml\n  ms.technology:\n  - dotnet-standard\n  author: Erikre\n  ms.author: erikre\n  manager: erikre\n- uid: System.ServiceModel.NetTcpBinding.Security\n  commentId: P:System.ServiceModel.NetTcpBinding.Security\n  id: Security\n  parent: System.ServiceModel.NetTcpBinding\n  langs:\n  - csharp\n  name: Security\n  nameWithType: NetTcpBinding.Security\n  fullName: NetTcpBinding.Security\n  type: Property\n  assemblies:\n  - System.ServiceModel\n  namespace: System.ServiceModel\n  summary: Gets an object that specifies the type of security used with services configured with this binding.\n  remarks: The <xref:System.ServiceModel.NetTcpSecurity> provides the types of security and settings available to the <xref:System.ServiceModel.NetTcpBinding>.\n  example:\n  - \"This example shows how to get the <xref:System.ServiceModel.NetTcpBinding.Security%2A> value.  \\n  \\n [!code-csharp[S_UENetTcpBinding#17](~/samples/snippets/csharp/VS_Snippets_CFX/s_uenettcpbinding/cs/source.cs#17)]\"\n  syntax:\n    content: public System.ServiceModel.NetTcpSecurity Security { get; set; }\n    return:\n      type: System.ServiceModel.NetTcpSecurity\n      description: The <xref href=\"System.ServiceModel.NetTcpSecurity\"></xref> that contains the types of security used with this binding. The default mode of security for the `NetTCPBinding` is <xref href=\"System.ServiceModel.SecurityMode.Transport\"></xref>.\n  overload: System.ServiceModel.NetTcpBinding.Security*\n  exceptions: []\n  version:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.ServiceModel/NetTcpBinding.xml\n  ms.technology:\n  - dotnet-standard\n  author: Erikre\n  ms.author: erikre\n  manager: erikre\n- uid: System.ServiceModel.NetTcpBinding.ShouldSerializeListenBacklog\n  commentId: M:System.ServiceModel.NetTcpBinding.ShouldSerializeListenBacklog\n  id: ShouldSerializeListenBacklog\n  parent: System.ServiceModel.NetTcpBinding\n  langs:\n  - csharp\n  name: ShouldSerializeListenBacklog()\n  nameWithType: NetTcpBinding.ShouldSerializeListenBacklog()\n  fullName: NetTcpBinding.ShouldSerializeListenBacklog()\n  type: Method\n  assemblies:\n  - System.ServiceModel\n  namespace: System.ServiceModel\n  summary: Returns a value that indicates whether the <xref href=\"System.ServiceModel.NetTcpBinding.ListenBacklog\"></xref> property has changed from its default value and should be serialized.\n  syntax:\n    content: public bool ShouldSerializeListenBacklog ();\n    parameters: []\n    return:\n      type: System.Boolean\n      description: '`true` if the <xref href=\"System.ServiceModel.NetTcpBinding.ListenBacklog\"></xref> property value should be serialized; otherwise, `false`.'\n  overload: System.ServiceModel.NetTcpBinding.ShouldSerializeListenBacklog*\n  exceptions: []\n  attributes: []\n  version:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.ServiceModel/NetTcpBinding.xml\n  ms.technology:\n  - dotnet-standard\n  author: Erikre\n  ms.author: erikre\n  manager: erikre\n- uid: System.ServiceModel.NetTcpBinding.ShouldSerializeMaxConnections\n  commentId: M:System.ServiceModel.NetTcpBinding.ShouldSerializeMaxConnections\n  id: ShouldSerializeMaxConnections\n  parent: System.ServiceModel.NetTcpBinding\n  langs:\n  - csharp\n  name: ShouldSerializeMaxConnections()\n  nameWithType: NetTcpBinding.ShouldSerializeMaxConnections()\n  fullName: NetTcpBinding.ShouldSerializeMaxConnections()\n  type: Method\n  assemblies:\n  - System.ServiceModel\n  namespace: System.ServiceModel\n  summary: Returns a value that indicates whether the <xref href=\"System.ServiceModel.NetTcpBinding.MaxConnections\"></xref> property has changed from its default value and should be serialized.\n  syntax:\n    content: public bool ShouldSerializeMaxConnections ();\n    parameters: []\n    return:\n      type: System.Boolean\n      description: '`true` if the <xref href=\"System.ServiceModel.NetTcpBinding.MaxConnections\"></xref> property value should be serialized; otherwise, `false`.'\n  overload: System.ServiceModel.NetTcpBinding.ShouldSerializeMaxConnections*\n  exceptions: []\n  attributes: []\n  version:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.ServiceModel/NetTcpBinding.xml\n  ms.technology:\n  - dotnet-standard\n  author: Erikre\n  ms.author: erikre\n  manager: erikre\n- uid: System.ServiceModel.NetTcpBinding.ShouldSerializeReaderQuotas\n  commentId: M:System.ServiceModel.NetTcpBinding.ShouldSerializeReaderQuotas\n  id: ShouldSerializeReaderQuotas\n  parent: System.ServiceModel.NetTcpBinding\n  langs:\n  - csharp\n  name: ShouldSerializeReaderQuotas()\n  nameWithType: NetTcpBinding.ShouldSerializeReaderQuotas()\n  fullName: NetTcpBinding.ShouldSerializeReaderQuotas()\n  type: Method\n  assemblies:\n  - System.ServiceModel\n  namespace: System.ServiceModel\n  summary: Returns a value that indicates whether the <xref href=\"System.ServiceModel.NetTcpBinding.ReaderQuotas\"></xref> property has changed from its default value and should be serialized.\n  syntax:\n    content: public bool ShouldSerializeReaderQuotas ();\n    parameters: []\n    return:\n      type: System.Boolean\n      description: '`true` if the <xref href=\"System.ServiceModel.NetTcpBinding.ReaderQuotas\"></xref> property value should be serialized; otherwise, `false`.'\n  overload: System.ServiceModel.NetTcpBinding.ShouldSerializeReaderQuotas*\n  exceptions: []\n  attributes: []\n  version:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.ServiceModel/NetTcpBinding.xml\n  ms.technology:\n  - dotnet-standard\n  author: Erikre\n  ms.author: erikre\n  manager: erikre\n- uid: System.ServiceModel.NetTcpBinding.ShouldSerializeReliableSession\n  commentId: M:System.ServiceModel.NetTcpBinding.ShouldSerializeReliableSession\n  id: ShouldSerializeReliableSession\n  parent: System.ServiceModel.NetTcpBinding\n  langs:\n  - csharp\n  name: ShouldSerializeReliableSession()\n  nameWithType: NetTcpBinding.ShouldSerializeReliableSession()\n  fullName: NetTcpBinding.ShouldSerializeReliableSession()\n  type: Method\n  assemblies:\n  - System.ServiceModel\n  namespace: System.ServiceModel\n  summary: Returns a value that indicates whether the <xref href=\"System.ServiceModel.NetTcpBinding.ReliableSession\"></xref> property has changed from its default value and should be serialized.\n  syntax:\n    content: public bool ShouldSerializeReliableSession ();\n    parameters: []\n    return:\n      type: System.Boolean\n      description: '`true` if the <xref href=\"System.ServiceModel.NetTcpBinding.ReliableSession\"></xref> property value should be serialized; otherwise, `false`.'\n  overload: System.ServiceModel.NetTcpBinding.ShouldSerializeReliableSession*\n  exceptions: []\n  attributes: []\n  version:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.ServiceModel/NetTcpBinding.xml\n  ms.technology:\n  - dotnet-standard\n  author: Erikre\n  ms.author: erikre\n  manager: erikre\n- uid: System.ServiceModel.NetTcpBinding.ShouldSerializeSecurity\n  commentId: M:System.ServiceModel.NetTcpBinding.ShouldSerializeSecurity\n  id: ShouldSerializeSecurity\n  parent: System.ServiceModel.NetTcpBinding\n  langs:\n  - csharp\n  name: ShouldSerializeSecurity()\n  nameWithType: NetTcpBinding.ShouldSerializeSecurity()\n  fullName: NetTcpBinding.ShouldSerializeSecurity()\n  type: Method\n  assemblies:\n  - System.ServiceModel\n  namespace: System.ServiceModel\n  summary: Returns a value that indicates whether the <xref href=\"System.ServiceModel.NetTcpBinding.Security\"></xref> property has changed from its default value and should be serialized.\n  syntax:\n    content: public bool ShouldSerializeSecurity ();\n    parameters: []\n    return:\n      type: System.Boolean\n      description: '`true` if the <xref href=\"System.ServiceModel.NetTcpBinding.Security\"></xref> property value should be serialized; otherwise, `false`.'\n  overload: System.ServiceModel.NetTcpBinding.ShouldSerializeSecurity*\n  exceptions: []\n  attributes: []\n  version:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.ServiceModel/NetTcpBinding.xml\n  ms.technology:\n  - dotnet-standard\n  author: Erikre\n  ms.author: erikre\n  manager: erikre\n- uid: System.ServiceModel.NetTcpBinding.ShouldSerializeTransactionProtocol\n  commentId: M:System.ServiceModel.NetTcpBinding.ShouldSerializeTransactionProtocol\n  id: ShouldSerializeTransactionProtocol\n  parent: System.ServiceModel.NetTcpBinding\n  langs:\n  - csharp\n  name: ShouldSerializeTransactionProtocol()\n  nameWithType: NetTcpBinding.ShouldSerializeTransactionProtocol()\n  fullName: NetTcpBinding.ShouldSerializeTransactionProtocol()\n  type: Method\n  assemblies:\n  - System.ServiceModel\n  namespace: System.ServiceModel\n  summary: Returns a value that indicates whether the <xref href=\"System.ServiceModel.NetTcpBinding.TransactionProtocol\"></xref> property has changed from its default value and should be serialized.\n  syntax:\n    content: public bool ShouldSerializeTransactionProtocol ();\n    parameters: []\n    return:\n      type: System.Boolean\n      description: '`true` if the <xref href=\"System.ServiceModel.NetTcpBinding.TransactionProtocol\"></xref> property value should be serialized; otherwise, `false`.'\n  overload: System.ServiceModel.NetTcpBinding.ShouldSerializeTransactionProtocol*\n  exceptions: []\n  attributes: []\n  version:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.ServiceModel/NetTcpBinding.xml\n  ms.technology:\n  - dotnet-standard\n  author: Erikre\n  ms.author: erikre\n  manager: erikre\n- uid: System.ServiceModel.NetTcpBinding.TransactionFlow\n  commentId: P:System.ServiceModel.NetTcpBinding.TransactionFlow\n  id: TransactionFlow\n  parent: System.ServiceModel.NetTcpBinding\n  langs:\n  - csharp\n  name: TransactionFlow\n  nameWithType: NetTcpBinding.TransactionFlow\n  fullName: NetTcpBinding.TransactionFlow\n  type: Property\n  assemblies:\n  - System.ServiceModel\n  namespace: System.ServiceModel\n  summary: Gets or sets a value that determines whether transaction flow is enabled.\n  remarks: ''\n  example:\n  - \"This example shows how to get the <xref:System.ServiceModel.NetTcpBinding.TransactionFlow%2A> value.  \\n  \\n [!code-csharp[S_UENetTcpBinding#18](~/samples/snippets/csharp/VS_Snippets_CFX/s_uenettcpbinding/cs/source.cs#18)]\"\n  syntax:\n    content: public bool TransactionFlow { get; set; }\n    return:\n      type: System.Boolean\n      description: '`true` if transaction flow is enabled; otherwise, `false`. The default value is `false`.'\n  overload: System.ServiceModel.NetTcpBinding.TransactionFlow*\n  exceptions: []\n  version:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.ServiceModel/NetTcpBinding.xml\n  ms.technology:\n  - dotnet-standard\n  author: Erikre\n  ms.author: erikre\n  manager: erikre\n- uid: System.ServiceModel.NetTcpBinding.TransactionProtocol\n  commentId: P:System.ServiceModel.NetTcpBinding.TransactionProtocol\n  id: TransactionProtocol\n  parent: System.ServiceModel.NetTcpBinding\n  langs:\n  - csharp\n  name: TransactionProtocol\n  nameWithType: NetTcpBinding.TransactionProtocol\n  fullName: NetTcpBinding.TransactionProtocol\n  type: Property\n  assemblies:\n  - System.ServiceModel\n  namespace: System.ServiceModel\n  summary: Gets or sets the transactions protocol used by the service to flow transactions.\n  remarks: ''\n  example:\n  - \"This example shows how to get the <xref:System.ServiceModel.NetTcpBinding.TransactionProtocol%2A> value.  \\n  \\n [!code-csharp[S_UENetTcpBinding#19](~/samples/snippets/csharp/VS_Snippets_CFX/s_uenettcpbinding/cs/source.cs#19)]\"\n  syntax:\n    content: public System.ServiceModel.TransactionProtocol TransactionProtocol { get; set; }\n    return:\n      type: System.ServiceModel.TransactionProtocol\n      description: The <xref href=\"System.ServiceModel.TransactionProtocol\"></xref> used by the service to flow transactions.\n  overload: System.ServiceModel.NetTcpBinding.TransactionProtocol*\n  exceptions: []\n  version:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.ServiceModel/NetTcpBinding.xml\n  ms.technology:\n  - dotnet-standard\n  author: Erikre\n  ms.author: erikre\n  manager: erikre\n- uid: System.ServiceModel.NetTcpBinding.TransferMode\n  commentId: P:System.ServiceModel.NetTcpBinding.TransferMode\n  id: TransferMode\n  parent: System.ServiceModel.NetTcpBinding\n  langs:\n  - csharp\n  name: TransferMode\n  nameWithType: NetTcpBinding.TransferMode\n  fullName: NetTcpBinding.TransferMode\n  type: Property\n  assemblies:\n  - System.ServiceModel\n  namespace: System.ServiceModel\n  summary: Gets or sets a value that indicates whether the service configured with the binding uses streamed or buffered (or both) modes of message transfer.\n  remarks: ''\n  example:\n  - \"This example shows how to get the <xref:System.ServiceModel.NetTcpBinding.TransferMode%2A> value.  \\n  \\n [!code-csharp[S_UENetTcpBinding#22](~/samples/snippets/csharp/VS_Snippets_CFX/s_uenettcpbinding/cs/source.cs#22)]\"\n  syntax:\n    content: public System.ServiceModel.TransferMode TransferMode { get; set; }\n    return:\n      type: System.ServiceModel.TransferMode\n      description: The <xref href=\"System.ServiceModel.TransferMode\"></xref> value that indicates whether the service configured with the binding uses streamed or buffered (or both) modes of message transfer.\n  overload: System.ServiceModel.NetTcpBinding.TransferMode*\n  exceptions: []\n  version:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.ServiceModel/NetTcpBinding.xml\n  ms.technology:\n  - dotnet-standard\n  author: Erikre\n  ms.author: erikre\n  manager: erikre\n- uid: System.ServiceModel.NetTcpBinding.System#ServiceModel#Channels#IBindingRuntimePreferences#ReceiveSynchronously\n  commentId: P:System.ServiceModel.NetTcpBinding.System#ServiceModel#Channels#IBindingRuntimePreferences#ReceiveSynchronously\n  id: System#ServiceModel#Channels#IBindingRuntimePreferences#ReceiveSynchronously\n  isEii: true\n  parent: System.ServiceModel.NetTcpBinding\n  langs:\n  - csharp\n  name: IBindingRuntimePreferences.ReceiveSynchronously\n  nameWithType: NetTcpBinding.IBindingRuntimePreferences.ReceiveSynchronously\n  fullName: NetTcpBinding.IBindingRuntimePreferences.ReceiveSynchronously\n  type: Property\n  assemblies:\n  - System.ServiceModel\n  namespace: System.ServiceModel\n  summary: Gets a value that indicates whether incoming requests are handled synchronously or asynchronously.\n  remarks: This run-time behavior for receiving messages in either a service or client application can be changed using [\\&lt;synchronousReceive\\&gt;](~/docs/framework/configure-apps/file-schema/wcf/synchronousreceive-element.md).\n  example:\n  - \"This example shows how to get the <xref:System.ServiceModel.NetTcpBinding.TransferMode%2A> value.  \\n  \\n [!code-csharp[S_UENetTcpBinding#21](~/samples/snippets/csharp/VS_Snippets_CFX/s_uenettcpbinding/cs/source.cs#21)]\"\n  syntax:\n    content: bool System.ServiceModel.Channels.IBindingRuntimePreferences.ReceiveSynchronously { get; }\n    return:\n      type: System.Boolean\n      description: '`true` if incoming requests are handled synchronously; `false` if incoming requests are handled asynchronously. The default value is `false`.'\n  overload: System.ServiceModel.NetTcpBinding.System#ServiceModel#Channels#IBindingRuntimePreferences#ReceiveSynchronously*\n  exceptions: []\n  version:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.ServiceModel/NetTcpBinding.xml\n  author: Erikre\n  ms.author: erikre\n  manager: erikre\nreferences:\n- uid: System.ServiceModel.Channels.Binding\n  parent: System.ServiceModel.Channels\n  isExternal: false\n  name: Binding\n  nameWithType: Binding\n  fullName: System.ServiceModel.Channels.Binding\n- uid: System.ArgumentOutOfRangeException\n  parent: System\n  isExternal: false\n  name: ArgumentOutOfRangeException\n  nameWithType: ArgumentOutOfRangeException\n  fullName: System.ArgumentOutOfRangeException\n- uid: System.ServiceModel.NetTcpBinding.#ctor\n  parent: System.ServiceModel.NetTcpBinding\n  isExternal: false\n  name: NetTcpBinding()\n  nameWithType: NetTcpBinding.NetTcpBinding()\n  fullName: NetTcpBinding.NetTcpBinding()\n- uid: System.ServiceModel.NetTcpBinding.#ctor(System.ServiceModel.SecurityMode)\n  parent: System.ServiceModel.NetTcpBinding\n  isExternal: false\n  name: NetTcpBinding(SecurityMode)\n  nameWithType: NetTcpBinding.NetTcpBinding(SecurityMode)\n  fullName: NetTcpBinding.NetTcpBinding(SecurityMode)\n- uid: System.ServiceModel.SecurityMode\n  parent: System.ServiceModel\n  isExternal: false\n  name: SecurityMode\n  nameWithType: SecurityMode\n  fullName: System.ServiceModel.SecurityMode\n- uid: System.ServiceModel.NetTcpBinding.#ctor(System.String)\n  parent: System.ServiceModel.NetTcpBinding\n  isExternal: false\n  name: NetTcpBinding(String)\n  nameWithType: NetTcpBinding.NetTcpBinding(String)\n  fullName: NetTcpBinding.NetTcpBinding(String)\n- uid: System.String\n  parent: System\n  isExternal: false\n  name: String\n  nameWithType: String\n  fullName: System.String\n- uid: System.ServiceModel.NetTcpBinding.#ctor(System.ServiceModel.SecurityMode,System.Boolean)\n  parent: System.ServiceModel.NetTcpBinding\n  isExternal: false\n  name: NetTcpBinding(SecurityMode, Boolean)\n  nameWithType: NetTcpBinding.NetTcpBinding(SecurityMode, Boolean)\n  fullName: NetTcpBinding.NetTcpBinding(SecurityMode, Boolean)\n- uid: System.Boolean\n  parent: System\n  isExternal: false\n  name: Boolean\n  nameWithType: Boolean\n  fullName: System.Boolean\n- uid: System.ServiceModel.NetTcpBinding.CreateBindingElements\n  parent: System.ServiceModel.NetTcpBinding\n  isExternal: false\n  name: CreateBindingElements()\n  nameWithType: NetTcpBinding.CreateBindingElements()\n  fullName: NetTcpBinding.CreateBindingElements()\n- uid: System.ServiceModel.Channels.BindingElementCollection\n  parent: System.ServiceModel.Channels\n  isExternal: false\n  name: BindingElementCollection\n  nameWithType: BindingElementCollection\n  fullName: System.ServiceModel.Channels.BindingElementCollection\n- uid: System.ServiceModel.NetTcpBinding.EnvelopeVersion\n  parent: System.ServiceModel.NetTcpBinding\n  isExternal: false\n  name: EnvelopeVersion\n  nameWithType: NetTcpBinding.EnvelopeVersion\n  fullName: NetTcpBinding.EnvelopeVersion\n- uid: System.ServiceModel.EnvelopeVersion\n  parent: System.ServiceModel\n  isExternal: false\n  name: EnvelopeVersion\n  nameWithType: EnvelopeVersion\n  fullName: System.ServiceModel.EnvelopeVersion\n- uid: System.ServiceModel.NetTcpBinding.HostNameComparisonMode\n  parent: System.ServiceModel.NetTcpBinding\n  isExternal: false\n  name: HostNameComparisonMode\n  nameWithType: NetTcpBinding.HostNameComparisonMode\n  fullName: NetTcpBinding.HostNameComparisonMode\n- uid: System.ServiceModel.HostNameComparisonMode\n  parent: System.ServiceModel\n  isExternal: false\n  name: HostNameComparisonMode\n  nameWithType: HostNameComparisonMode\n  fullName: System.ServiceModel.HostNameComparisonMode\n- uid: System.ServiceModel.NetTcpBinding.ListenBacklog\n  parent: System.ServiceModel.NetTcpBinding\n  isExternal: false\n  name: ListenBacklog\n  nameWithType: NetTcpBinding.ListenBacklog\n  fullName: NetTcpBinding.ListenBacklog\n- uid: System.Int32\n  parent: System\n  isExternal: false\n  name: Int32\n  nameWithType: Int32\n  fullName: System.Int32\n- uid: System.ServiceModel.NetTcpBinding.MaxBufferPoolSize\n  parent: System.ServiceModel.NetTcpBinding\n  isExternal: false\n  name: MaxBufferPoolSize\n  nameWithType: NetTcpBinding.MaxBufferPoolSize\n  fullName: NetTcpBinding.MaxBufferPoolSize\n- uid: System.Int64\n  parent: System\n  isExternal: false\n  name: Int64\n  nameWithType: Int64\n  fullName: System.Int64\n- uid: System.ServiceModel.NetTcpBinding.MaxBufferSize\n  parent: System.ServiceModel.NetTcpBinding\n  isExternal: false\n  name: MaxBufferSize\n  nameWithType: NetTcpBinding.MaxBufferSize\n  fullName: NetTcpBinding.MaxBufferSize\n- uid: System.ServiceModel.NetTcpBinding.MaxConnections\n  parent: System.ServiceModel.NetTcpBinding\n  isExternal: false\n  name: MaxConnections\n  nameWithType: NetTcpBinding.MaxConnections\n  fullName: NetTcpBinding.MaxConnections\n- uid: System.ServiceModel.NetTcpBinding.MaxReceivedMessageSize\n  parent: System.ServiceModel.NetTcpBinding\n  isExternal: false\n  name: MaxReceivedMessageSize\n  nameWithType: NetTcpBinding.MaxReceivedMessageSize\n  fullName: NetTcpBinding.MaxReceivedMessageSize\n- uid: System.ServiceModel.NetTcpBinding.PortSharingEnabled\n  parent: System.ServiceModel.NetTcpBinding\n  isExternal: false\n  name: PortSharingEnabled\n  nameWithType: NetTcpBinding.PortSharingEnabled\n  fullName: NetTcpBinding.PortSharingEnabled\n- uid: System.ServiceModel.NetTcpBinding.ReaderQuotas\n  parent: System.ServiceModel.NetTcpBinding\n  isExternal: false\n  name: ReaderQuotas\n  nameWithType: NetTcpBinding.ReaderQuotas\n  fullName: NetTcpBinding.ReaderQuotas\n- uid: System.Xml.XmlDictionaryReaderQuotas\n  parent: System.Xml\n  isExternal: false\n  name: XmlDictionaryReaderQuotas\n  nameWithType: XmlDictionaryReaderQuotas\n  fullName: System.Xml.XmlDictionaryReaderQuotas\n- uid: System.ServiceModel.NetTcpBinding.ReliableSession\n  parent: System.ServiceModel.NetTcpBinding\n  isExternal: false\n  name: ReliableSession\n  nameWithType: NetTcpBinding.ReliableSession\n  fullName: NetTcpBinding.ReliableSession\n- uid: System.ServiceModel.OptionalReliableSession\n  parent: System.ServiceModel\n  isExternal: false\n  name: OptionalReliableSession\n  nameWithType: OptionalReliableSession\n  fullName: System.ServiceModel.OptionalReliableSession\n- uid: System.ServiceModel.NetTcpBinding.Scheme\n  parent: System.ServiceModel.NetTcpBinding\n  isExternal: false\n  name: Scheme\n  nameWithType: NetTcpBinding.Scheme\n  fullName: NetTcpBinding.Scheme\n- uid: System.ServiceModel.NetTcpBinding.Security\n  parent: System.ServiceModel.NetTcpBinding\n  isExternal: false\n  name: Security\n  nameWithType: NetTcpBinding.Security\n  fullName: NetTcpBinding.Security\n- uid: System.ServiceModel.NetTcpSecurity\n  parent: System.ServiceModel\n  isExternal: false\n  name: NetTcpSecurity\n  nameWithType: NetTcpSecurity\n  fullName: System.ServiceModel.NetTcpSecurity\n- uid: System.ServiceModel.NetTcpBinding.ShouldSerializeListenBacklog\n  parent: System.ServiceModel.NetTcpBinding\n  isExternal: false\n  name: ShouldSerializeListenBacklog()\n  nameWithType: NetTcpBinding.ShouldSerializeListenBacklog()\n  fullName: NetTcpBinding.ShouldSerializeListenBacklog()\n- uid: System.ServiceModel.NetTcpBinding.ShouldSerializeMaxConnections\n  parent: System.ServiceModel.NetTcpBinding\n  isExternal: false\n  name: ShouldSerializeMaxConnections()\n  nameWithType: NetTcpBinding.ShouldSerializeMaxConnections()\n  fullName: NetTcpBinding.ShouldSerializeMaxConnections()\n- uid: System.ServiceModel.NetTcpBinding.ShouldSerializeReaderQuotas\n  parent: System.ServiceModel.NetTcpBinding\n  isExternal: false\n  name: ShouldSerializeReaderQuotas()\n  nameWithType: NetTcpBinding.ShouldSerializeReaderQuotas()\n  fullName: NetTcpBinding.ShouldSerializeReaderQuotas()\n- uid: System.ServiceModel.NetTcpBinding.ShouldSerializeReliableSession\n  parent: System.ServiceModel.NetTcpBinding\n  isExternal: false\n  name: ShouldSerializeReliableSession()\n  nameWithType: NetTcpBinding.ShouldSerializeReliableSession()\n  fullName: NetTcpBinding.ShouldSerializeReliableSession()\n- uid: System.ServiceModel.NetTcpBinding.ShouldSerializeSecurity\n  parent: System.ServiceModel.NetTcpBinding\n  isExternal: false\n  name: ShouldSerializeSecurity()\n  nameWithType: NetTcpBinding.ShouldSerializeSecurity()\n  fullName: NetTcpBinding.ShouldSerializeSecurity()\n- uid: System.ServiceModel.NetTcpBinding.ShouldSerializeTransactionProtocol\n  parent: System.ServiceModel.NetTcpBinding\n  isExternal: false\n  name: ShouldSerializeTransactionProtocol()\n  nameWithType: NetTcpBinding.ShouldSerializeTransactionProtocol()\n  fullName: NetTcpBinding.ShouldSerializeTransactionProtocol()\n- uid: System.ServiceModel.NetTcpBinding.TransactionFlow\n  parent: System.ServiceModel.NetTcpBinding\n  isExternal: false\n  name: TransactionFlow\n  nameWithType: NetTcpBinding.TransactionFlow\n  fullName: NetTcpBinding.TransactionFlow\n- uid: System.ServiceModel.NetTcpBinding.TransactionProtocol\n  parent: System.ServiceModel.NetTcpBinding\n  isExternal: false\n  name: TransactionProtocol\n  nameWithType: NetTcpBinding.TransactionProtocol\n  fullName: NetTcpBinding.TransactionProtocol\n- uid: System.ServiceModel.TransactionProtocol\n  parent: System.ServiceModel\n  isExternal: false\n  name: TransactionProtocol\n  nameWithType: TransactionProtocol\n  fullName: System.ServiceModel.TransactionProtocol\n- uid: System.ServiceModel.NetTcpBinding.TransferMode\n  parent: System.ServiceModel.NetTcpBinding\n  isExternal: false\n  name: TransferMode\n  nameWithType: NetTcpBinding.TransferMode\n  fullName: NetTcpBinding.TransferMode\n- uid: System.ServiceModel.TransferMode\n  parent: System.ServiceModel\n  isExternal: false\n  name: TransferMode\n  nameWithType: TransferMode\n  fullName: System.ServiceModel.TransferMode\n- uid: System.ServiceModel.NetTcpBinding.System#ServiceModel#Channels#IBindingRuntimePreferences#ReceiveSynchronously\n  parent: System.ServiceModel.NetTcpBinding\n  isExternal: false\n  name: IBindingRuntimePreferences.ReceiveSynchronously\n  nameWithType: NetTcpBinding.IBindingRuntimePreferences.ReceiveSynchronously\n  fullName: NetTcpBinding.IBindingRuntimePreferences.ReceiveSynchronously\n- uid: System.ServiceModel.NetTcpBinding.#ctor*\n  parent: System.ServiceModel.NetTcpBinding\n  isExternal: false\n  name: NetTcpBinding\n  nameWithType: NetTcpBinding.NetTcpBinding\n  fullName: NetTcpBinding.NetTcpBinding\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.ServiceModel/NetTcpBinding.xml\n- uid: System.ServiceModel.NetTcpBinding.CreateBindingElements*\n  parent: System.ServiceModel.NetTcpBinding\n  isExternal: false\n  name: CreateBindingElements\n  nameWithType: NetTcpBinding.CreateBindingElements\n  fullName: NetTcpBinding.CreateBindingElements\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.ServiceModel/NetTcpBinding.xml\n- uid: System.ServiceModel.NetTcpBinding.EnvelopeVersion*\n  parent: System.ServiceModel.NetTcpBinding\n  isExternal: false\n  name: EnvelopeVersion\n  nameWithType: NetTcpBinding.EnvelopeVersion\n  fullName: NetTcpBinding.EnvelopeVersion\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.ServiceModel/NetTcpBinding.xml\n- uid: System.ServiceModel.NetTcpBinding.HostNameComparisonMode*\n  parent: System.ServiceModel.NetTcpBinding\n  isExternal: false\n  name: HostNameComparisonMode\n  nameWithType: NetTcpBinding.HostNameComparisonMode\n  fullName: NetTcpBinding.HostNameComparisonMode\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.ServiceModel/NetTcpBinding.xml\n- uid: System.ServiceModel.NetTcpBinding.ListenBacklog*\n  parent: System.ServiceModel.NetTcpBinding\n  isExternal: false\n  name: ListenBacklog\n  nameWithType: NetTcpBinding.ListenBacklog\n  fullName: NetTcpBinding.ListenBacklog\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.ServiceModel/NetTcpBinding.xml\n- uid: System.ServiceModel.NetTcpBinding.MaxBufferPoolSize*\n  parent: System.ServiceModel.NetTcpBinding\n  isExternal: false\n  name: MaxBufferPoolSize\n  nameWithType: NetTcpBinding.MaxBufferPoolSize\n  fullName: NetTcpBinding.MaxBufferPoolSize\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.ServiceModel/NetTcpBinding.xml\n- uid: System.ServiceModel.NetTcpBinding.MaxBufferSize*\n  parent: System.ServiceModel.NetTcpBinding\n  isExternal: false\n  name: MaxBufferSize\n  nameWithType: NetTcpBinding.MaxBufferSize\n  fullName: NetTcpBinding.MaxBufferSize\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.ServiceModel/NetTcpBinding.xml\n- uid: System.ServiceModel.NetTcpBinding.MaxConnections*\n  parent: System.ServiceModel.NetTcpBinding\n  isExternal: false\n  name: MaxConnections\n  nameWithType: NetTcpBinding.MaxConnections\n  fullName: NetTcpBinding.MaxConnections\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.ServiceModel/NetTcpBinding.xml\n- uid: System.ServiceModel.NetTcpBinding.MaxReceivedMessageSize*\n  parent: System.ServiceModel.NetTcpBinding\n  isExternal: false\n  name: MaxReceivedMessageSize\n  nameWithType: NetTcpBinding.MaxReceivedMessageSize\n  fullName: NetTcpBinding.MaxReceivedMessageSize\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.ServiceModel/NetTcpBinding.xml\n- uid: System.ServiceModel.NetTcpBinding.PortSharingEnabled*\n  parent: System.ServiceModel.NetTcpBinding\n  isExternal: false\n  name: PortSharingEnabled\n  nameWithType: NetTcpBinding.PortSharingEnabled\n  fullName: NetTcpBinding.PortSharingEnabled\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.ServiceModel/NetTcpBinding.xml\n- uid: System.ServiceModel.NetTcpBinding.ReaderQuotas*\n  parent: System.ServiceModel.NetTcpBinding\n  isExternal: false\n  name: ReaderQuotas\n  nameWithType: NetTcpBinding.ReaderQuotas\n  fullName: NetTcpBinding.ReaderQuotas\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.ServiceModel/NetTcpBinding.xml\n- uid: System.ServiceModel.NetTcpBinding.ReliableSession*\n  parent: System.ServiceModel.NetTcpBinding\n  isExternal: false\n  name: ReliableSession\n  nameWithType: NetTcpBinding.ReliableSession\n  fullName: NetTcpBinding.ReliableSession\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.ServiceModel/NetTcpBinding.xml\n- uid: System.ServiceModel.NetTcpBinding.Scheme*\n  parent: System.ServiceModel.NetTcpBinding\n  isExternal: false\n  name: Scheme\n  nameWithType: NetTcpBinding.Scheme\n  fullName: NetTcpBinding.Scheme\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.ServiceModel/NetTcpBinding.xml\n- uid: System.ServiceModel.NetTcpBinding.Security*\n  parent: System.ServiceModel.NetTcpBinding\n  isExternal: false\n  name: Security\n  nameWithType: NetTcpBinding.Security\n  fullName: NetTcpBinding.Security\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.ServiceModel/NetTcpBinding.xml\n- uid: System.ServiceModel.NetTcpBinding.ShouldSerializeListenBacklog*\n  parent: System.ServiceModel.NetTcpBinding\n  isExternal: false\n  name: ShouldSerializeListenBacklog\n  nameWithType: NetTcpBinding.ShouldSerializeListenBacklog\n  fullName: NetTcpBinding.ShouldSerializeListenBacklog\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.ServiceModel/NetTcpBinding.xml\n- uid: System.ServiceModel.NetTcpBinding.ShouldSerializeMaxConnections*\n  parent: System.ServiceModel.NetTcpBinding\n  isExternal: false\n  name: ShouldSerializeMaxConnections\n  nameWithType: NetTcpBinding.ShouldSerializeMaxConnections\n  fullName: NetTcpBinding.ShouldSerializeMaxConnections\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.ServiceModel/NetTcpBinding.xml\n- uid: System.ServiceModel.NetTcpBinding.ShouldSerializeReaderQuotas*\n  parent: System.ServiceModel.NetTcpBinding\n  isExternal: false\n  name: ShouldSerializeReaderQuotas\n  nameWithType: NetTcpBinding.ShouldSerializeReaderQuotas\n  fullName: NetTcpBinding.ShouldSerializeReaderQuotas\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.ServiceModel/NetTcpBinding.xml\n- uid: System.ServiceModel.NetTcpBinding.ShouldSerializeReliableSession*\n  parent: System.ServiceModel.NetTcpBinding\n  isExternal: false\n  name: ShouldSerializeReliableSession\n  nameWithType: NetTcpBinding.ShouldSerializeReliableSession\n  fullName: NetTcpBinding.ShouldSerializeReliableSession\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.ServiceModel/NetTcpBinding.xml\n- uid: System.ServiceModel.NetTcpBinding.ShouldSerializeSecurity*\n  parent: System.ServiceModel.NetTcpBinding\n  isExternal: false\n  name: ShouldSerializeSecurity\n  nameWithType: NetTcpBinding.ShouldSerializeSecurity\n  fullName: NetTcpBinding.ShouldSerializeSecurity\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.ServiceModel/NetTcpBinding.xml\n- uid: System.ServiceModel.NetTcpBinding.ShouldSerializeTransactionProtocol*\n  parent: System.ServiceModel.NetTcpBinding\n  isExternal: false\n  name: ShouldSerializeTransactionProtocol\n  nameWithType: NetTcpBinding.ShouldSerializeTransactionProtocol\n  fullName: NetTcpBinding.ShouldSerializeTransactionProtocol\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.ServiceModel/NetTcpBinding.xml\n- uid: System.ServiceModel.NetTcpBinding.TransactionFlow*\n  parent: System.ServiceModel.NetTcpBinding\n  isExternal: false\n  name: TransactionFlow\n  nameWithType: NetTcpBinding.TransactionFlow\n  fullName: NetTcpBinding.TransactionFlow\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.ServiceModel/NetTcpBinding.xml\n- uid: System.ServiceModel.NetTcpBinding.TransactionProtocol*\n  parent: System.ServiceModel.NetTcpBinding\n  isExternal: false\n  name: TransactionProtocol\n  nameWithType: NetTcpBinding.TransactionProtocol\n  fullName: NetTcpBinding.TransactionProtocol\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.ServiceModel/NetTcpBinding.xml\n- uid: System.ServiceModel.NetTcpBinding.TransferMode*\n  parent: System.ServiceModel.NetTcpBinding\n  isExternal: false\n  name: TransferMode\n  nameWithType: NetTcpBinding.TransferMode\n  fullName: NetTcpBinding.TransferMode\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.ServiceModel/NetTcpBinding.xml\n- uid: System.ServiceModel.NetTcpBinding.System#ServiceModel#Channels#IBindingRuntimePreferences#ReceiveSynchronously*\n  parent: System.ServiceModel.NetTcpBinding\n  isExternal: false\n  name: System.ServiceModel.Channels.IBindingRuntimePreferences.ReceiveSynchronously\n  nameWithType: NetTcpBinding.System.ServiceModel.Channels.IBindingRuntimePreferences.ReceiveSynchronously\n  fullName: NetTcpBinding.System.ServiceModel.Channels.IBindingRuntimePreferences.ReceiveSynchronously\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.ServiceModel/NetTcpBinding.xml\n- uid: System.Object.Equals(System.Object)\n  parent: System.Object\n  isExternal: false\n  name: Equals(Object)\n  nameWithType: Object.Equals(Object)\n  fullName: Object.Equals(Object)\n- uid: System.Object.Equals(System.Object,System.Object)\n  parent: System.Object\n  isExternal: false\n  name: Equals(Object, Object)\n  nameWithType: Object.Equals(Object, Object)\n  fullName: Object.Equals(Object, Object)\n- uid: System.Object.GetHashCode\n  parent: System.Object\n  isExternal: false\n  name: GetHashCode()\n  nameWithType: Object.GetHashCode()\n  fullName: Object.GetHashCode()\n- uid: System.Object.GetType\n  parent: System.Object\n  isExternal: false\n  name: GetType()\n  nameWithType: Object.GetType()\n  fullName: Object.GetType()\n- uid: System.Object.MemberwiseClone\n  parent: System.Object\n  isExternal: false\n  name: MemberwiseClone()\n  nameWithType: Object.MemberwiseClone()\n  fullName: Object.MemberwiseClone()\n- uid: System.Object.ReferenceEquals(System.Object,System.Object)\n  parent: System.Object\n  isExternal: false\n  name: ReferenceEquals(Object, Object)\n  nameWithType: Object.ReferenceEquals(Object, Object)\n  fullName: Object.ReferenceEquals(Object, Object)\n- uid: System.Object.ToString\n  parent: System.Object\n  isExternal: false\n  name: ToString()\n  nameWithType: Object.ToString()\n  fullName: Object.ToString()\n- uid: System.ServiceModel.Channels.Binding.BuildChannelFactory``1(System.Object[])\n  parent: System.ServiceModel.Channels.Binding\n  isExternal: false\n  name: BuildChannelFactory<TChannel>(Object[])\n  nameWithType: Binding.BuildChannelFactory<TChannel>(Object[])\n  fullName: Binding.BuildChannelFactory<TChannel>(Object[])\n- uid: System.ServiceModel.Channels.Binding.BuildChannelFactory``1(System.ServiceModel.Channels.BindingParameterCollection)\n  parent: System.ServiceModel.Channels.Binding\n  isExternal: false\n  name: BuildChannelFactory<TChannel>(BindingParameterCollection)\n  nameWithType: Binding.BuildChannelFactory<TChannel>(BindingParameterCollection)\n  fullName: Binding.BuildChannelFactory<TChannel>(BindingParameterCollection)\n- uid: System.ServiceModel.Channels.Binding.BuildChannelListener``1(System.Object[])\n  parent: System.ServiceModel.Channels.Binding\n  isExternal: false\n  name: BuildChannelListener<TChannel>(Object[])\n  nameWithType: Binding.BuildChannelListener<TChannel>(Object[])\n  fullName: Binding.BuildChannelListener<TChannel>(Object[])\n- uid: System.ServiceModel.Channels.Binding.BuildChannelListener``1(System.ServiceModel.Channels.BindingParameterCollection)\n  parent: System.ServiceModel.Channels.Binding\n  isExternal: false\n  name: BuildChannelListener<TChannel>(BindingParameterCollection)\n  nameWithType: Binding.BuildChannelListener<TChannel>(BindingParameterCollection)\n  fullName: Binding.BuildChannelListener<TChannel>(BindingParameterCollection)\n- uid: System.ServiceModel.Channels.Binding.BuildChannelListener``1(System.Uri,System.Object[])\n  parent: System.ServiceModel.Channels.Binding\n  isExternal: false\n  name: BuildChannelListener<TChannel>(Uri, Object[])\n  nameWithType: Binding.BuildChannelListener<TChannel>(Uri, Object[])\n  fullName: Binding.BuildChannelListener<TChannel>(Uri, Object[])\n- uid: System.ServiceModel.Channels.Binding.BuildChannelListener``1(System.Uri,System.ServiceModel.Channels.BindingParameterCollection)\n  parent: System.ServiceModel.Channels.Binding\n  isExternal: false\n  name: BuildChannelListener<TChannel>(Uri, BindingParameterCollection)\n  nameWithType: Binding.BuildChannelListener<TChannel>(Uri, BindingParameterCollection)\n  fullName: Binding.BuildChannelListener<TChannel>(Uri, BindingParameterCollection)\n- uid: System.ServiceModel.Channels.Binding.BuildChannelListener``1(System.Uri,System.String,System.Object[])\n  parent: System.ServiceModel.Channels.Binding\n  isExternal: false\n  name: BuildChannelListener<TChannel>(Uri, String, Object[])\n  nameWithType: Binding.BuildChannelListener<TChannel>(Uri, String, Object[])\n  fullName: Binding.BuildChannelListener<TChannel>(Uri, String, Object[])\n- uid: System.ServiceModel.Channels.Binding.BuildChannelListener``1(System.Uri,System.String,System.ServiceModel.Channels.BindingParameterCollection)\n  parent: System.ServiceModel.Channels.Binding\n  isExternal: false\n  name: BuildChannelListener<TChannel>(Uri, String, BindingParameterCollection)\n  nameWithType: Binding.BuildChannelListener<TChannel>(Uri, String, BindingParameterCollection)\n  fullName: Binding.BuildChannelListener<TChannel>(Uri, String, BindingParameterCollection)\n- uid: System.ServiceModel.Channels.Binding.BuildChannelListener``1(System.Uri,System.String,System.ServiceModel.Description.ListenUriMode,System.Object[])\n  parent: System.ServiceModel.Channels.Binding\n  isExternal: false\n  name: BuildChannelListener<TChannel>(Uri, String, ListenUriMode, Object[])\n  nameWithType: Binding.BuildChannelListener<TChannel>(Uri, String, ListenUriMode, Object[])\n  fullName: Binding.BuildChannelListener<TChannel>(Uri, String, ListenUriMode, Object[])\n- uid: System.ServiceModel.Channels.Binding.BuildChannelListener``1(System.Uri,System.String,System.ServiceModel.Description.ListenUriMode,System.ServiceModel.Channels.BindingParameterCollection)\n  parent: System.ServiceModel.Channels.Binding\n  isExternal: false\n  name: BuildChannelListener<TChannel>(Uri, String, ListenUriMode, BindingParameterCollection)\n  nameWithType: Binding.BuildChannelListener<TChannel>(Uri, String, ListenUriMode, BindingParameterCollection)\n  fullName: Binding.BuildChannelListener<TChannel>(Uri, String, ListenUriMode, BindingParameterCollection)\n- uid: System.ServiceModel.Channels.Binding.CanBuildChannelFactory``1(System.ServiceModel.Channels.BindingParameterCollection)\n  parent: System.ServiceModel.Channels.Binding\n  isExternal: false\n  name: CanBuildChannelFactory<TChannel>(BindingParameterCollection)\n  nameWithType: Binding.CanBuildChannelFactory<TChannel>(BindingParameterCollection)\n  fullName: Binding.CanBuildChannelFactory<TChannel>(BindingParameterCollection)\n- uid: System.ServiceModel.Channels.Binding.CanBuildChannelFactory``1(System.Object[])\n  parent: System.ServiceModel.Channels.Binding\n  isExternal: false\n  name: CanBuildChannelFactory<TChannel>(Object[])\n  nameWithType: Binding.CanBuildChannelFactory<TChannel>(Object[])\n  fullName: Binding.CanBuildChannelFactory<TChannel>(Object[])\n- uid: System.ServiceModel.Channels.Binding.CanBuildChannelListener``1(System.Object[])\n  parent: System.ServiceModel.Channels.Binding\n  isExternal: false\n  name: CanBuildChannelListener<TChannel>(Object[])\n  nameWithType: Binding.CanBuildChannelListener<TChannel>(Object[])\n  fullName: Binding.CanBuildChannelListener<TChannel>(Object[])\n- uid: System.ServiceModel.Channels.Binding.CanBuildChannelListener``1(System.ServiceModel.Channels.BindingParameterCollection)\n  parent: System.ServiceModel.Channels.Binding\n  isExternal: false\n  name: CanBuildChannelListener<TChannel>(BindingParameterCollection)\n  nameWithType: Binding.CanBuildChannelListener<TChannel>(BindingParameterCollection)\n  fullName: Binding.CanBuildChannelListener<TChannel>(BindingParameterCollection)\n- uid: System.ServiceModel.Channels.Binding.CloseTimeout\n  parent: System.ServiceModel.Channels.Binding\n  isExternal: false\n  name: CloseTimeout\n  nameWithType: Binding.CloseTimeout\n  fullName: Binding.CloseTimeout\n- uid: System.ServiceModel.Channels.Binding.GetProperty``1(System.ServiceModel.Channels.BindingParameterCollection)\n  parent: System.ServiceModel.Channels.Binding\n  isExternal: false\n  name: GetProperty<T>(BindingParameterCollection)\n  nameWithType: Binding.GetProperty<T>(BindingParameterCollection)\n  fullName: Binding.GetProperty<T>(BindingParameterCollection)\n- uid: System.ServiceModel.Channels.Binding.MessageVersion\n  parent: System.ServiceModel.Channels.Binding\n  isExternal: false\n  name: MessageVersion\n  nameWithType: Binding.MessageVersion\n  fullName: Binding.MessageVersion\n- uid: System.ServiceModel.Channels.Binding.Name\n  parent: System.ServiceModel.Channels.Binding\n  isExternal: false\n  name: Name\n  nameWithType: Binding.Name\n  fullName: Binding.Name\n- uid: System.ServiceModel.Channels.Binding.Namespace\n  parent: System.ServiceModel.Channels.Binding\n  isExternal: false\n  name: Namespace\n  nameWithType: Binding.Namespace\n  fullName: Binding.Namespace\n- uid: System.ServiceModel.Channels.Binding.OpenTimeout\n  parent: System.ServiceModel.Channels.Binding\n  isExternal: false\n  name: OpenTimeout\n  nameWithType: Binding.OpenTimeout\n  fullName: Binding.OpenTimeout\n- uid: System.ServiceModel.Channels.Binding.ReceiveTimeout\n  parent: System.ServiceModel.Channels.Binding\n  isExternal: false\n  name: ReceiveTimeout\n  nameWithType: Binding.ReceiveTimeout\n  fullName: Binding.ReceiveTimeout\n- uid: System.ServiceModel.Channels.Binding.SendTimeout\n  parent: System.ServiceModel.Channels.Binding\n  isExternal: false\n  name: SendTimeout\n  nameWithType: Binding.SendTimeout\n  fullName: Binding.SendTimeout\n- uid: System.ServiceModel.Channels.Binding.ShouldSerializeName\n  parent: System.ServiceModel.Channels.Binding\n  isExternal: false\n  name: ShouldSerializeName()\n  nameWithType: Binding.ShouldSerializeName()\n  fullName: Binding.ShouldSerializeName()\n- uid: System.ServiceModel.Channels.Binding.ShouldSerializeNamespace\n  parent: System.ServiceModel.Channels.Binding\n  isExternal: false\n  name: ShouldSerializeNamespace()\n  nameWithType: Binding.ShouldSerializeNamespace()\n  fullName: Binding.ShouldSerializeNamespace()\n- uid: System.ServiceModel.Channels.IBindingRuntimePreferences\n  parent: System.ServiceModel.Channels\n  isExternal: false\n  name: IBindingRuntimePreferences\n  nameWithType: IBindingRuntimePreferences\n  fullName: System.ServiceModel.Channels.IBindingRuntimePreferences\n"}