### YamlMime:ManagedReference
items:
- uid: System.Diagnostics.EventLogTraceListener
  commentId: T:System.Diagnostics.EventLogTraceListener
  id: EventLogTraceListener
  children:
  - System.Diagnostics.EventLogTraceListener.#ctor
  - System.Diagnostics.EventLogTraceListener.#ctor(System.Diagnostics.EventLog)
  - System.Diagnostics.EventLogTraceListener.#ctor(System.String)
  - System.Diagnostics.EventLogTraceListener.Close
  - System.Diagnostics.EventLogTraceListener.Dispose(System.Boolean)
  - System.Diagnostics.EventLogTraceListener.EventLog
  - System.Diagnostics.EventLogTraceListener.Name
  - System.Diagnostics.EventLogTraceListener.TraceData(System.Diagnostics.TraceEventCache,System.String,System.Diagnostics.TraceEventType,System.Int32,System.Object)
  - System.Diagnostics.EventLogTraceListener.TraceData(System.Diagnostics.TraceEventCache,System.String,System.Diagnostics.TraceEventType,System.Int32,System.Object[])
  - System.Diagnostics.EventLogTraceListener.TraceEvent(System.Diagnostics.TraceEventCache,System.String,System.Diagnostics.TraceEventType,System.Int32,System.String)
  - System.Diagnostics.EventLogTraceListener.TraceEvent(System.Diagnostics.TraceEventCache,System.String,System.Diagnostics.TraceEventType,System.Int32,System.String,System.Object[])
  - System.Diagnostics.EventLogTraceListener.Write(System.String)
  - System.Diagnostics.EventLogTraceListener.WriteLine(System.String)
  langs:
  - csharp
  name: EventLogTraceListener
  nameWithType: EventLogTraceListener
  fullName: System.Diagnostics.EventLogTraceListener
  type: Class
  assemblies:
  - System
  namespace: System.Diagnostics
  summary: Provides a simple listener that directs tracing or debugging output to an <xref href="System.Diagnostics.EventLog"></xref>.
  remarks: "An instance of this <xref:System.Diagnostics.EventLogTraceListener> can be added to the <xref:System.Diagnostics.Debug.Listeners%2A?displayProperty=fullName>, <xref:System.Diagnostics.Trace.Listeners%2A?displayProperty=fullName>, or <xref:System.Diagnostics.TraceSource.Listeners%2A?displayProperty=fullName> collections to send output from tracing or debugging to an <xref:System.Diagnostics.EventLog>. You can add the instance in your code or specify it in the application configuration file. To add an <xref:System.Diagnostics.EventLogTraceListener> using an application configuration file, edit the file that corresponds to the name of your application or the app.config file in a [!INCLUDE[vsprvslong](~/includes/vsprvslong-md.md)] project. In this file, insert an element for a <xref:System.Diagnostics.EventLogTraceListener?displayProperty=fullName> type.  \n  \n The following example adds a <xref:System.Diagnostics.EventLogTraceListener> object named `myListener` to the <xref:System.Diagnostics.Trace.Listeners%2A?displayProperty=fullName> collection. The `initializeData` parameter specifies the name of the event log source that is to be passed to the <xref:System.Diagnostics.EventLogTraceListener.%23ctor%28System.String%29> constructor.  \n  \n```  \n<configuration>  \n  <system.diagnostics>  \n    <trace autoflush=\"false\" indentsize=\"4\">  \n      <listeners>  \n        <add name=\"myListener\"  \n          type=\"System.Diagnostics.EventLogTraceListener\"  \n          initializeData=\"TraceListenerLog\" />  \n      </listeners>  \n    </trace>  \n  </system.diagnostics>  \n</configuration>  \n```  \n  \n For more information about how to add trace listeners in the application configuration file, see  or .  \n  \n> [!NOTE]\n>  If the <xref:System.Diagnostics.EventLog.Source%2A> for the event log that is associated with the <xref:System.Diagnostics.EventLogTraceListener> instance does not exist, a new event source is created. To create an event source in Windows Vista, Windows XP Professional, or Windows Server 2003, you must have administrative privileges.  \n>   \n>  The reason for this requirement is that all event logs, including security, must be searched to determine whether the event source is unique. In Windows Vista, users do not have permission to access the security log; therefore, a <xref:System.Security.SecurityException> is thrown.  \n>   \n>  In Windows Vista, User Account Control (UAC) determines the privileges of a user. If you are a member of the Built-in Administrators group, you are assigned two run-time access tokens: a standard user access token and an administrator access token. By default, you are in the standard user role. To execute the code that accesses the security log, you must first elevate your privileges from standard user to administrator. You can do this when you start an application by right-clicking the application icon and indicating that you want to run as an administrator.  \n  \n The class provides the <xref:System.Diagnostics.EventLogTraceListener.EventLog%2A> property to get or set the event log that receives the tracing or debugging output, and the <xref:System.Diagnostics.EventLogTraceListener.Name%2A> property to hold the name of the <xref:System.Diagnostics.EventLogTraceListener>.  \n  \n The <xref:System.Diagnostics.EventLogTraceListener.Close%2A> method closes the event log so it no longer receives tracing or debugging output. The <xref:System.Diagnostics.EventLogTraceListener.Write%2A> and <xref:System.Diagnostics.EventLogTraceListener.WriteLine%2A> methods write a message to the event log.  \n  \n> [!NOTE]\n>  To avoid the possibility of writing large amounts of data to the event log, the <xref:System.Diagnostics.EventLogTraceListener> does not output the optional trace data specified by the <xref:System.Diagnostics.TraceListener.TraceOutputOptions%2A> property."
  example:
  - "The following example creates a trace listener that sends output to an event log. First, the code creates a new <xref:System.Diagnostics.EventLogTraceListener> that uses the source `myEventLogSource`. Next, `myTraceListener` is added to the <xref:System.Diagnostics.Trace.Listeners%2A?displayProperty=fullName> collection. Finally, the example sends a line of output to the <xref:System.Diagnostics.Trace.Listeners%2A> object.  \n  \n [!code-cpp[Classic EventLogTraceListener Example#1](~/samples/snippets/cpp/VS_Snippets_CLR_Classic/classic EventLogTraceListener Example/CPP/source.cpp#1)]\n [!code-csharp[Classic EventLogTraceListener Example#1](~/samples/snippets/csharp/VS_Snippets_CLR_Classic/classic EventLogTraceListener Example/CS/source.cs#1)]\n [!code-vb[Classic EventLogTraceListener Example#1](~/samples/snippets/visualbasic/VS_Snippets_CLR_Classic/classic EventLogTraceListener Example/VB/source.vb#1)]"
  syntax:
    content: 'public sealed class EventLogTraceListener : System.Diagnostics.TraceListener'
  inheritance:
  - System.Object
  - System.Diagnostics.TraceListener
  implements: []
  inheritedMembers:
  - System.Diagnostics.TraceListener.Attributes
  - System.Diagnostics.TraceListener.Dispose
  - System.Diagnostics.TraceListener.Fail(System.String)
  - System.Diagnostics.TraceListener.Fail(System.String,System.String)
  - System.Diagnostics.TraceListener.Filter
  - System.Diagnostics.TraceListener.Flush
  - System.Diagnostics.TraceListener.GetSupportedAttributes
  - System.Diagnostics.TraceListener.IndentLevel
  - System.Diagnostics.TraceListener.IndentSize
  - System.Diagnostics.TraceListener.IsThreadSafe
  - System.Diagnostics.TraceListener.NeedIndent
  - System.Diagnostics.TraceListener.TraceEvent(System.Diagnostics.TraceEventCache,System.String,System.Diagnostics.TraceEventType,System.Int32)
  - System.Diagnostics.TraceListener.TraceOutputOptions
  - System.Diagnostics.TraceListener.TraceTransfer(System.Diagnostics.TraceEventCache,System.String,System.Int32,System.String,System.Guid)
  - System.Diagnostics.TraceListener.Write(System.Object)
  - System.Diagnostics.TraceListener.Write(System.Object,System.String)
  - System.Diagnostics.TraceListener.Write(System.String,System.String)
  - System.Diagnostics.TraceListener.WriteIndent
  - System.Diagnostics.TraceListener.WriteLine(System.Object)
  - System.Diagnostics.TraceListener.WriteLine(System.Object,System.String)
  - System.Diagnostics.TraceListener.WriteLine(System.String,System.String)
  - System.Object.Equals(System.Object)
  - System.Object.Equals(System.Object,System.Object)
  - System.Object.GetHashCode
  - System.Object.GetType
  - System.Object.MemberwiseClone
  - System.Object.ReferenceEquals(System.Object,System.Object)
  - System.Object.ToString
  version:
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  - xamarinmac-3.0
  monikers:
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  - xamarinmac-3.0
  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Diagnostics/EventLogTraceListener.xml
  ms.technology:
  - dotnet-standard
  author: mairaw
  ms.author: mairaw
  manager: wpickett
- uid: System.Diagnostics.EventLogTraceListener.#ctor
  commentId: M:System.Diagnostics.EventLogTraceListener.#ctor
  id: '#ctor'
  parent: System.Diagnostics.EventLogTraceListener
  langs:
  - csharp
  name: EventLogTraceListener()
  nameWithType: EventLogTraceListener.EventLogTraceListener()
  fullName: EventLogTraceListener.EventLogTraceListener()
  type: Constructor
  assemblies:
  - System
  namespace: System.Diagnostics
  summary: Initializes a new instance of the <xref href="System.Diagnostics.EventLogTraceListener"></xref> class without a trace listener.
  syntax:
    content: public EventLogTraceListener ();
    parameters: []
  overload: System.Diagnostics.EventLogTraceListener.#ctor*
  exceptions: []
  version:
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  - xamarinmac-3.0
  monikers:
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  - xamarinmac-3.0
  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Diagnostics/EventLogTraceListener.xml
  ms.technology:
  - dotnet-standard
  author: mairaw
  ms.author: mairaw
  manager: wpickett
- uid: System.Diagnostics.EventLogTraceListener.#ctor(System.Diagnostics.EventLog)
  commentId: M:System.Diagnostics.EventLogTraceListener.#ctor(System.Diagnostics.EventLog)
  id: '#ctor(System.Diagnostics.EventLog)'
  parent: System.Diagnostics.EventLogTraceListener
  langs:
  - csharp
  name: EventLogTraceListener(EventLog)
  nameWithType: EventLogTraceListener.EventLogTraceListener(EventLog)
  fullName: EventLogTraceListener.EventLogTraceListener(EventLog)
  type: Constructor
  assemblies:
  - System
  namespace: System.Diagnostics
  summary: Initializes a new instance of the <xref href="System.Diagnostics.EventLogTraceListener"></xref> class using the specified event log.
  syntax:
    content: public EventLogTraceListener (System.Diagnostics.EventLog eventLog);
    parameters:
    - id: eventLog
      type: System.Diagnostics.EventLog
      description: The event log to write to.
  overload: System.Diagnostics.EventLogTraceListener.#ctor*
  exceptions: []
  version:
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  - xamarinmac-3.0
  monikers:
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  - xamarinmac-3.0
  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Diagnostics/EventLogTraceListener.xml
  ms.technology:
  - dotnet-standard
  author: mairaw
  ms.author: mairaw
  manager: wpickett
- uid: System.Diagnostics.EventLogTraceListener.#ctor(System.String)
  commentId: M:System.Diagnostics.EventLogTraceListener.#ctor(System.String)
  id: '#ctor(System.String)'
  parent: System.Diagnostics.EventLogTraceListener
  langs:
  - csharp
  name: EventLogTraceListener(String)
  nameWithType: EventLogTraceListener.EventLogTraceListener(String)
  fullName: EventLogTraceListener.EventLogTraceListener(String)
  type: Constructor
  assemblies:
  - System
  namespace: System.Diagnostics
  summary: Initializes a new instance of the <xref href="System.Diagnostics.EventLogTraceListener"></xref> class using the specified source.
  syntax:
    content: public EventLogTraceListener (string source);
    parameters:
    - id: source
      type: System.String
      description: The name of an existing event log source.
  overload: System.Diagnostics.EventLogTraceListener.#ctor*
  exceptions: []
  version:
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  - xamarinmac-3.0
  monikers:
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  - xamarinmac-3.0
  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Diagnostics/EventLogTraceListener.xml
  ms.technology:
  - dotnet-standard
  author: mairaw
  ms.author: mairaw
  manager: wpickett
- uid: System.Diagnostics.EventLogTraceListener.Close
  commentId: M:System.Diagnostics.EventLogTraceListener.Close
  id: Close
  parent: System.Diagnostics.EventLogTraceListener
  langs:
  - csharp
  name: Close()
  nameWithType: EventLogTraceListener.Close()
  fullName: EventLogTraceListener.Close()
  type: Method
  assemblies:
  - System
  namespace: System.Diagnostics
  summary: Closes the event log so that it no longer receives tracing or debugging output.
  syntax:
    content: public override void Close ();
    parameters: []
  overload: System.Diagnostics.EventLogTraceListener.Close*
  exceptions: []
  version:
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  - xamarinmac-3.0
  monikers:
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  - xamarinmac-3.0
  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Diagnostics/EventLogTraceListener.xml
  ms.technology:
  - dotnet-standard
  author: mairaw
  ms.author: mairaw
  manager: wpickett
- uid: System.Diagnostics.EventLogTraceListener.Dispose(System.Boolean)
  commentId: M:System.Diagnostics.EventLogTraceListener.Dispose(System.Boolean)
  id: Dispose(System.Boolean)
  parent: System.Diagnostics.EventLogTraceListener
  langs:
  - csharp
  name: Dispose(Boolean)
  nameWithType: EventLogTraceListener.Dispose(Boolean)
  fullName: EventLogTraceListener.Dispose(Boolean)
  type: Method
  assemblies:
  - System
  namespace: System.Diagnostics
  syntax:
    content: protected override void Dispose (bool disposing);
    parameters:
    - id: disposing
      type: System.Boolean
      description: ''
  overload: System.Diagnostics.EventLogTraceListener.Dispose*
  exceptions: []
  version:
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  - xamarinmac-3.0
  monikers:
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  - xamarinmac-3.0
  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Diagnostics/EventLogTraceListener.xml
- uid: System.Diagnostics.EventLogTraceListener.EventLog
  commentId: P:System.Diagnostics.EventLogTraceListener.EventLog
  id: EventLog
  parent: System.Diagnostics.EventLogTraceListener
  langs:
  - csharp
  name: EventLog
  nameWithType: EventLogTraceListener.EventLog
  fullName: EventLogTraceListener.EventLog
  type: Property
  assemblies:
  - System
  namespace: System.Diagnostics
  summary: Gets or sets the event log to write to.
  syntax:
    content: public System.Diagnostics.EventLog EventLog { get; set; }
    return:
      type: System.Diagnostics.EventLog
      description: The event log to write to.
  overload: System.Diagnostics.EventLogTraceListener.EventLog*
  exceptions: []
  version:
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  - xamarinmac-3.0
  monikers:
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  - xamarinmac-3.0
  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Diagnostics/EventLogTraceListener.xml
  ms.technology:
  - dotnet-standard
  author: mairaw
  ms.author: mairaw
  manager: wpickett
- uid: System.Diagnostics.EventLogTraceListener.Name
  commentId: P:System.Diagnostics.EventLogTraceListener.Name
  id: Name
  parent: System.Diagnostics.EventLogTraceListener
  langs:
  - csharp
  name: Name
  nameWithType: EventLogTraceListener.Name
  fullName: EventLogTraceListener.Name
  type: Property
  assemblies:
  - System
  namespace: System.Diagnostics
  summary: Gets or sets the name of this <xref href="System.Diagnostics.EventLogTraceListener"></xref>.
  remarks: This property defaults to the source name of the event log.
  syntax:
    content: public override string Name { get; set; }
    return:
      type: System.String
      description: The name of this trace listener.
  overload: System.Diagnostics.EventLogTraceListener.Name*
  exceptions: []
  version:
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  - xamarinmac-3.0
  monikers:
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  - xamarinmac-3.0
  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Diagnostics/EventLogTraceListener.xml
  ms.technology:
  - dotnet-standard
  author: mairaw
  ms.author: mairaw
  manager: wpickett
- uid: System.Diagnostics.EventLogTraceListener.TraceData(System.Diagnostics.TraceEventCache,System.String,System.Diagnostics.TraceEventType,System.Int32,System.Object)
  commentId: M:System.Diagnostics.EventLogTraceListener.TraceData(System.Diagnostics.TraceEventCache,System.String,System.Diagnostics.TraceEventType,System.Int32,System.Object)
  id: TraceData(System.Diagnostics.TraceEventCache,System.String,System.Diagnostics.TraceEventType,System.Int32,System.Object)
  parent: System.Diagnostics.EventLogTraceListener
  langs:
  - csharp
  name: TraceData(TraceEventCache, String, TraceEventType, Int32, Object)
  nameWithType: EventLogTraceListener.TraceData(TraceEventCache, String, TraceEventType, Int32, Object)
  fullName: EventLogTraceListener.TraceData(TraceEventCache, String, TraceEventType, Int32, Object)
  type: Method
  assemblies:
  - System
  namespace: System.Diagnostics
  summary: Writes trace information, a data object, and event information to the event log.
  remarks: "> [!IMPORTANT]\n>  The <xref:System.Diagnostics.EventLogTraceListener.TraceData%2A> methods are not intended to be called by application code. They are called by methods of the <xref:System.Diagnostics.Debug>, <xref:System.Diagnostics.Trace>, and <xref:System.Diagnostics.TraceSource> classes to output trace data.  \n  \n The <xref:System.Diagnostics.EventLogTraceListener.TraceData%2A> method, like the <xref:System.Diagnostics.EventLogTraceListener.TraceEvent%2A> method is intended for automated tools but also allows the attaching of additional objects, for example an exception instance, to the trace.  \n  \n The `eventCache` and `source` parameters are used to determine if the event should be traced. `id` is used to create an <xref:System.Diagnostics.EventInstance> object and the <xref:System.Diagnostics.TraceEventType> is equated to an <xref:System.Diagnostics.EventLogEntryType> for the <xref:System.Diagnostics.EventInstance.EntryType%2A> property. The <xref:System.Diagnostics.EventInstance> is written to the event log with the `data` object, formatted as a string, using the <xref:System.Diagnostics.EventLog.WriteEvent%2A> method.  \n  \n> [!NOTE]\n>  The maximum value of the `id` parameter is 65,535. If the `id` value specified is greater than 65,535, the maximum value is used."
  syntax:
    content: >-
      [System.Runtime.InteropServices.ComVisible(false)]

      public override void TraceData (System.Diagnostics.TraceEventCache eventCache, string source, System.Diagnostics.TraceEventType eventType, int id, object data);
    parameters:
    - id: eventCache
      type: System.Diagnostics.TraceEventCache
      description: An object that contains the current process ID, thread ID, and stack trace information.
    - id: source
      type: System.String
      description: A name used to identify the output; typically the name of the application that generated the trace event.
    - id: severity
      type: System.Diagnostics.TraceEventType
      description: ''
    - id: id
      type: System.Int32
      description: A numeric identifier for the event. The combination of <code>source</code> and <code>id</code> uniquely identifies an event.
    - id: data
      type: System.Object
      description: A data object to write to the output file or stream.
  overload: System.Diagnostics.EventLogTraceListener.TraceData*
  exceptions:
  - type: System.ArgumentException
    commentId: T:System.ArgumentException
    description: "<code>source</code> is not specified.  \n  \n -or-  \n  \n The log entry string exceeds 32,766 characters."
  attributes:
  - type: System.Runtime.InteropServices.ComVisibleAttribute
  version:
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  - xamarinmac-3.0
  monikers:
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  - xamarinmac-3.0
  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Diagnostics/EventLogTraceListener.xml
  ms.technology:
  - dotnet-standard
  author: mairaw
  ms.author: mairaw
  manager: wpickett
- uid: System.Diagnostics.EventLogTraceListener.TraceData(System.Diagnostics.TraceEventCache,System.String,System.Diagnostics.TraceEventType,System.Int32,System.Object[])
  commentId: M:System.Diagnostics.EventLogTraceListener.TraceData(System.Diagnostics.TraceEventCache,System.String,System.Diagnostics.TraceEventType,System.Int32,System.Object[])
  id: TraceData(System.Diagnostics.TraceEventCache,System.String,System.Diagnostics.TraceEventType,System.Int32,System.Object[])
  parent: System.Diagnostics.EventLogTraceListener
  langs:
  - csharp
  name: TraceData(TraceEventCache, String, TraceEventType, Int32, Object[])
  nameWithType: EventLogTraceListener.TraceData(TraceEventCache, String, TraceEventType, Int32, Object[])
  fullName: EventLogTraceListener.TraceData(TraceEventCache, String, TraceEventType, Int32, Object[])
  type: Method
  assemblies:
  - System
  namespace: System.Diagnostics
  summary: Writes trace information, an array of data objects, and event information to the event log.
  remarks: "> [!IMPORTANT]\n>  The <xref:System.Diagnostics.EventLogTraceListener.TraceData%2A> methods are not intended to be called by application code. They are called by methods of the <xref:System.Diagnostics.Debug>, <xref:System.Diagnostics.Trace>, and <xref:System.Diagnostics.TraceSource> classes to output trace data.  \n  \n The <xref:System.Diagnostics.EventLogTraceListener.TraceData%2A> method, like the <xref:System.Diagnostics.EventLogTraceListener.TraceEvent%2A> method is intended for automated tools but also allows the attaching of additional objects, for example an exception instance, to the trace.  \n  \n The `severity` and `id` parameter data is used to create an <xref:System.Diagnostics.EventInstance> object, which is written to the event log with the data from the array of data objects.  \n  \n The `eventCache` and `source` parameters are used to determine if the event should be traced. `id` is used to create an <xref:System.Diagnostics.EventInstance> object and the <xref:System.Diagnostics.TraceEventType> is equated to an <xref:System.Diagnostics.EventLogEntryType> for the <xref:System.Diagnostics.EventInstance.EntryType%2A> property. The <xref:System.Diagnostics.EventInstance> is written to the event log with the `data` object array, formatted as a string array, using the <xref:System.Diagnostics.EventLog.WriteEvent%2A> method.  \n  \n> [!NOTE]\n>  The maximum value of the `id` parameter is 65,535. If the `id` value specified is greater than 65,535, the maximum value is used."
  syntax:
    content: >-
      [System.Runtime.InteropServices.ComVisible(false)]

      public override void TraceData (System.Diagnostics.TraceEventCache eventCache, string source, System.Diagnostics.TraceEventType eventType, int id, object[] data);
    parameters:
    - id: eventCache
      type: System.Diagnostics.TraceEventCache
      description: An object that contains the current process ID, thread ID, and stack trace information.
    - id: source
      type: System.String
      description: A name used to identify the output; typically the name of the application that generated the trace event.
    - id: severity
      type: System.Diagnostics.TraceEventType
      description: ''
    - id: id
      type: System.Int32
      description: A numeric identifier for the event. The combination of <code>source</code> and <code>id</code> uniquely identifies an event.
    - id: data
      type: System.Object[]
      description: An array of data objects.
  overload: System.Diagnostics.EventLogTraceListener.TraceData*
  exceptions:
  - type: System.ArgumentException
    commentId: T:System.ArgumentException
    description: "<code>source</code> is not specified.  \n  \n -or-  \n  \n The log entry string exceeds 32,766 characters."
  attributes:
  - type: System.Runtime.InteropServices.ComVisibleAttribute
  version:
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  - xamarinmac-3.0
  monikers:
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  - xamarinmac-3.0
  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Diagnostics/EventLogTraceListener.xml
  ms.technology:
  - dotnet-standard
  author: mairaw
  ms.author: mairaw
  manager: wpickett
- uid: System.Diagnostics.EventLogTraceListener.TraceEvent(System.Diagnostics.TraceEventCache,System.String,System.Diagnostics.TraceEventType,System.Int32,System.String)
  commentId: M:System.Diagnostics.EventLogTraceListener.TraceEvent(System.Diagnostics.TraceEventCache,System.String,System.Diagnostics.TraceEventType,System.Int32,System.String)
  id: TraceEvent(System.Diagnostics.TraceEventCache,System.String,System.Diagnostics.TraceEventType,System.Int32,System.String)
  parent: System.Diagnostics.EventLogTraceListener
  langs:
  - csharp
  name: TraceEvent(TraceEventCache, String, TraceEventType, Int32, String)
  nameWithType: EventLogTraceListener.TraceEvent(TraceEventCache, String, TraceEventType, Int32, String)
  fullName: EventLogTraceListener.TraceEvent(TraceEventCache, String, TraceEventType, Int32, String)
  type: Method
  assemblies:
  - System
  namespace: System.Diagnostics
  summary: Writes trace information, a message, and event information to the event log.
  remarks: "> [!IMPORTANT]\n>  The <xref:System.Diagnostics.EventLogTraceListener.TraceEvent%2A> methods are not intended to be called by application code. These methods are called by methods of the <xref:System.Diagnostics.Debug>, <xref:System.Diagnostics.Trace>, and <xref:System.Diagnostics.TraceSource> classes to write trace data.  \n  \n The <xref:System.Diagnostics.EventLogTraceListener.TraceEvent%2A> method is intended to trace events that can be processed automatically by tools. For example a monitoring tool can notify an administrator if a specific event is traced by a specific source.  \n  \n The `eventCache` and `source` parameters are used to determine if the event should be traced. `id` is used to create an <xref:System.Diagnostics.EventInstance> object and the <xref:System.Diagnostics.TraceEventType> is equated to an <xref:System.Diagnostics.EventLogEntryType> for the <xref:System.Diagnostics.EventInstance.EntryType%2A> property. The <xref:System.Diagnostics.EventInstance> is written to the event log with the `message` data using the <xref:System.Diagnostics.EventLog.WriteEvent%2A> method.  \n  \n> [!NOTE]\n>  The maximum value of the `id` parameter is 65,535. If the `id` value specified is greater than 65,535, the maximum value is used."
  syntax:
    content: >-
      [System.Runtime.InteropServices.ComVisible(false)]

      public override void TraceEvent (System.Diagnostics.TraceEventCache eventCache, string source, System.Diagnostics.TraceEventType eventType, int id, string message);
    parameters:
    - id: eventCache
      type: System.Diagnostics.TraceEventCache
      description: An object that contains the current process ID, thread ID, and stack trace information.
    - id: source
      type: System.String
      description: A name used to identify the output; typically the name of the application that generated the trace event.
    - id: severity
      type: System.Diagnostics.TraceEventType
      description: ''
    - id: id
      type: System.Int32
      description: A numeric identifier for the event. The combination of <code>source</code> and <code>id</code> uniquely identifies an event.
    - id: message
      type: System.String
      description: The trace message.
  overload: System.Diagnostics.EventLogTraceListener.TraceEvent*
  exceptions:
  - type: System.ArgumentException
    commentId: T:System.ArgumentException
    description: "<code>source</code> is not specified.  \n  \n -or-  \n  \n The log entry string exceeds 32,766 characters."
  attributes:
  - type: System.Runtime.InteropServices.ComVisibleAttribute
  version:
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  - xamarinmac-3.0
  monikers:
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  - xamarinmac-3.0
  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Diagnostics/EventLogTraceListener.xml
  ms.technology:
  - dotnet-standard
  author: mairaw
  ms.author: mairaw
  manager: wpickett
- uid: System.Diagnostics.EventLogTraceListener.TraceEvent(System.Diagnostics.TraceEventCache,System.String,System.Diagnostics.TraceEventType,System.Int32,System.String,System.Object[])
  commentId: M:System.Diagnostics.EventLogTraceListener.TraceEvent(System.Diagnostics.TraceEventCache,System.String,System.Diagnostics.TraceEventType,System.Int32,System.String,System.Object[])
  id: TraceEvent(System.Diagnostics.TraceEventCache,System.String,System.Diagnostics.TraceEventType,System.Int32,System.String,System.Object[])
  parent: System.Diagnostics.EventLogTraceListener
  langs:
  - csharp
  name: TraceEvent(TraceEventCache, String, TraceEventType, Int32, String, Object[])
  nameWithType: EventLogTraceListener.TraceEvent(TraceEventCache, String, TraceEventType, Int32, String, Object[])
  fullName: EventLogTraceListener.TraceEvent(TraceEventCache, String, TraceEventType, Int32, String, Object[])
  type: Method
  assemblies:
  - System
  namespace: System.Diagnostics
  summary: Writes trace information, a formatted array of objects, and event information to the event log.
  remarks: "> [!IMPORTANT]\n>  The <xref:System.Diagnostics.EventLogTraceListener.TraceEvent%2A> methods are not intended to be called by application code. These methods are called by methods of the <xref:System.Diagnostics.Debug>, <xref:System.Diagnostics.Trace>, and <xref:System.Diagnostics.TraceSource> classes to write trace data.  \n  \n The <xref:System.Diagnostics.EventLogTraceListener.TraceEvent%2A> method is intended to trace events that can be processed automatically by tools. For example a monitoring tool can notify an administrator if a specific event is traced by a specific source.  \n  \n The `eventCache` and `source` parameters are used to determine if the event should be traced. `id` is used to create an <xref:System.Diagnostics.EventInstance> object and the <xref:System.Diagnostics.TraceEventType> is equated to an <xref:System.Diagnostics.EventLogEntryType> for the <xref:System.Diagnostics.EventInstance.EntryType%2A> property. The <xref:System.Diagnostics.EventInstance> is written to the event log, using the <xref:System.Diagnostics.EventLog.WriteEvent%2A> method, with the message obtained from the `format` and `args` parameters. The `args` object array is converted to a string using the <xref:System.String.Format%2A> method, passing the `format` string and `args` array to format the string as the message for the event log.  \n  \n> [!NOTE]\n>  The maximum value of the `id` parameter is 65,535. If the `id` value specified is greater than 65,535, the maximum value is used."
  syntax:
    content: >-
      [System.Runtime.InteropServices.ComVisible(false)]

      public override void TraceEvent (System.Diagnostics.TraceEventCache eventCache, string source, System.Diagnostics.TraceEventType eventType, int id, string format, object[] args);
    parameters:
    - id: eventCache
      type: System.Diagnostics.TraceEventCache
      description: An object that contains the current process ID, thread ID, and stack trace information.
    - id: source
      type: System.String
      description: A name used to identify the output; typically the name of the application that generated the trace event.
    - id: severity
      type: System.Diagnostics.TraceEventType
      description: ''
    - id: id
      type: System.Int32
      description: A numeric identifier for the event. The combination of <code>source</code> and <code>id</code> uniquely identifies an event.
    - id: format
      type: System.String
      description: A format string that contains zero or more format items that correspond to objects in the <code>args</code> array.
    - id: args
      type: System.Object[]
      description: An `object` array containing zero or more objects to format.
  overload: System.Diagnostics.EventLogTraceListener.TraceEvent*
  exceptions:
  - type: System.ArgumentException
    commentId: T:System.ArgumentException
    description: "<code>source</code> is not specified.  \n  \n -or-  \n  \n The log entry string exceeds 32,766 characters."
  attributes:
  - type: System.Runtime.InteropServices.ComVisibleAttribute
  version:
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  - xamarinmac-3.0
  monikers:
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  - xamarinmac-3.0
  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Diagnostics/EventLogTraceListener.xml
  ms.technology:
  - dotnet-standard
  author: mairaw
  ms.author: mairaw
  manager: wpickett
- uid: System.Diagnostics.EventLogTraceListener.Write(System.String)
  commentId: M:System.Diagnostics.EventLogTraceListener.Write(System.String)
  id: Write(System.String)
  parent: System.Diagnostics.EventLogTraceListener
  langs:
  - csharp
  name: Write(String)
  nameWithType: EventLogTraceListener.Write(String)
  fullName: EventLogTraceListener.Write(String)
  type: Method
  assemblies:
  - System
  namespace: System.Diagnostics
  summary: Writes a message to the event log for this instance.
  syntax:
    content: public override void Write (string message);
    parameters:
    - id: message
      type: System.String
      description: The message to write.
  overload: System.Diagnostics.EventLogTraceListener.Write*
  exceptions:
  - type: System.ArgumentException
    commentId: T:System.ArgumentException
    description: <code>message</code> exceeds 32,766 characters.
  version:
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  - xamarinmac-3.0
  monikers:
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  - xamarinmac-3.0
  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Diagnostics/EventLogTraceListener.xml
  ms.technology:
  - dotnet-standard
  author: mairaw
  ms.author: mairaw
  manager: wpickett
- uid: System.Diagnostics.EventLogTraceListener.WriteLine(System.String)
  commentId: M:System.Diagnostics.EventLogTraceListener.WriteLine(System.String)
  id: WriteLine(System.String)
  parent: System.Diagnostics.EventLogTraceListener
  langs:
  - csharp
  name: WriteLine(String)
  nameWithType: EventLogTraceListener.WriteLine(String)
  fullName: EventLogTraceListener.WriteLine(String)
  type: Method
  assemblies:
  - System
  namespace: System.Diagnostics
  summary: Writes a message to the event log for this instance.
  syntax:
    content: public override void WriteLine (string message);
    parameters:
    - id: message
      type: System.String
      description: The message to write.
  overload: System.Diagnostics.EventLogTraceListener.WriteLine*
  exceptions:
  - type: System.ArgumentException
    commentId: T:System.ArgumentException
    description: <code>message</code> exceeds 32,766 characters.
  version:
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  - xamarinmac-3.0
  monikers:
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  - xamarinmac-3.0
  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Diagnostics/EventLogTraceListener.xml
  ms.technology:
  - dotnet-standard
  author: mairaw
  ms.author: mairaw
  manager: wpickett
references:
- uid: System.Diagnostics.TraceListener
  parent: System.Diagnostics
  isExternal: false
  name: TraceListener
  nameWithType: TraceListener
  fullName: System.Diagnostics.TraceListener
- uid: System.ArgumentException
  parent: System
  isExternal: false
  name: ArgumentException
  nameWithType: ArgumentException
  fullName: System.ArgumentException
- uid: System.Diagnostics.EventLogTraceListener.#ctor
  parent: System.Diagnostics.EventLogTraceListener
  isExternal: false
  name: EventLogTraceListener()
  nameWithType: EventLogTraceListener.EventLogTraceListener()
  fullName: EventLogTraceListener.EventLogTraceListener()
- uid: System.Diagnostics.EventLogTraceListener.#ctor(System.Diagnostics.EventLog)
  parent: System.Diagnostics.EventLogTraceListener
  isExternal: false
  name: EventLogTraceListener(EventLog)
  nameWithType: EventLogTraceListener.EventLogTraceListener(EventLog)
  fullName: EventLogTraceListener.EventLogTraceListener(EventLog)
- uid: System.Diagnostics.EventLog
  parent: System.Diagnostics
  isExternal: false
  name: EventLog
  nameWithType: EventLog
  fullName: System.Diagnostics.EventLog
- uid: System.Diagnostics.EventLogTraceListener.#ctor(System.String)
  parent: System.Diagnostics.EventLogTraceListener
  isExternal: false
  name: EventLogTraceListener(String)
  nameWithType: EventLogTraceListener.EventLogTraceListener(String)
  fullName: EventLogTraceListener.EventLogTraceListener(String)
- uid: System.String
  parent: System
  isExternal: false
  name: String
  nameWithType: String
  fullName: System.String
- uid: System.Diagnostics.EventLogTraceListener.Close
  parent: System.Diagnostics.EventLogTraceListener
  isExternal: false
  name: Close()
  nameWithType: EventLogTraceListener.Close()
  fullName: EventLogTraceListener.Close()
- uid: System.Diagnostics.EventLogTraceListener.Dispose(System.Boolean)
  parent: System.Diagnostics.EventLogTraceListener
  isExternal: false
  name: Dispose(Boolean)
  nameWithType: EventLogTraceListener.Dispose(Boolean)
  fullName: EventLogTraceListener.Dispose(Boolean)
- uid: System.Boolean
  parent: System
  isExternal: false
  name: Boolean
  nameWithType: Boolean
  fullName: System.Boolean
- uid: System.Diagnostics.EventLogTraceListener.EventLog
  parent: System.Diagnostics.EventLogTraceListener
  isExternal: false
  name: EventLog
  nameWithType: EventLogTraceListener.EventLog
  fullName: EventLogTraceListener.EventLog
- uid: System.Diagnostics.EventLogTraceListener.Name
  parent: System.Diagnostics.EventLogTraceListener
  isExternal: false
  name: Name
  nameWithType: EventLogTraceListener.Name
  fullName: EventLogTraceListener.Name
- uid: System.Diagnostics.EventLogTraceListener.TraceData(System.Diagnostics.TraceEventCache,System.String,System.Diagnostics.TraceEventType,System.Int32,System.Object)
  parent: System.Diagnostics.EventLogTraceListener
  isExternal: false
  name: TraceData(TraceEventCache, String, TraceEventType, Int32, Object)
  nameWithType: EventLogTraceListener.TraceData(TraceEventCache, String, TraceEventType, Int32, Object)
  fullName: EventLogTraceListener.TraceData(TraceEventCache, String, TraceEventType, Int32, Object)
- uid: System.Diagnostics.TraceEventCache
  parent: System.Diagnostics
  isExternal: false
  name: TraceEventCache
  nameWithType: TraceEventCache
  fullName: System.Diagnostics.TraceEventCache
- uid: System.Diagnostics.TraceEventType
  parent: System.Diagnostics
  isExternal: false
  name: TraceEventType
  nameWithType: TraceEventType
  fullName: System.Diagnostics.TraceEventType
- uid: System.Int32
  parent: System
  isExternal: false
  name: Int32
  nameWithType: Int32
  fullName: System.Int32
- uid: System.Object
  parent: System
  isExternal: false
  name: Object
  nameWithType: Object
  fullName: System.Object
- uid: System.Diagnostics.EventLogTraceListener.TraceData(System.Diagnostics.TraceEventCache,System.String,System.Diagnostics.TraceEventType,System.Int32,System.Object[])
  parent: System.Diagnostics.EventLogTraceListener
  isExternal: false
  name: TraceData(TraceEventCache, String, TraceEventType, Int32, Object[])
  nameWithType: EventLogTraceListener.TraceData(TraceEventCache, String, TraceEventType, Int32, Object[])
  fullName: EventLogTraceListener.TraceData(TraceEventCache, String, TraceEventType, Int32, Object[])
- uid: System.Object[]
  parent: System
  isExternal: false
  name: Object[]
  nameWithType: Object[]
  fullName: System.Object[]
  spec.csharp:
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
  - name: '[]'
    nameWithType: '[]'
    fullName: '[]'
- uid: System.Diagnostics.EventLogTraceListener.TraceEvent(System.Diagnostics.TraceEventCache,System.String,System.Diagnostics.TraceEventType,System.Int32,System.String)
  parent: System.Diagnostics.EventLogTraceListener
  isExternal: false
  name: TraceEvent(TraceEventCache, String, TraceEventType, Int32, String)
  nameWithType: EventLogTraceListener.TraceEvent(TraceEventCache, String, TraceEventType, Int32, String)
  fullName: EventLogTraceListener.TraceEvent(TraceEventCache, String, TraceEventType, Int32, String)
- uid: System.Diagnostics.EventLogTraceListener.TraceEvent(System.Diagnostics.TraceEventCache,System.String,System.Diagnostics.TraceEventType,System.Int32,System.String,System.Object[])
  parent: System.Diagnostics.EventLogTraceListener
  isExternal: false
  name: TraceEvent(TraceEventCache, String, TraceEventType, Int32, String, Object[])
  nameWithType: EventLogTraceListener.TraceEvent(TraceEventCache, String, TraceEventType, Int32, String, Object[])
  fullName: EventLogTraceListener.TraceEvent(TraceEventCache, String, TraceEventType, Int32, String, Object[])
- uid: System.Diagnostics.EventLogTraceListener.Write(System.String)
  parent: System.Diagnostics.EventLogTraceListener
  isExternal: false
  name: Write(String)
  nameWithType: EventLogTraceListener.Write(String)
  fullName: EventLogTraceListener.Write(String)
- uid: System.Diagnostics.EventLogTraceListener.WriteLine(System.String)
  parent: System.Diagnostics.EventLogTraceListener
  isExternal: false
  name: WriteLine(String)
  nameWithType: EventLogTraceListener.WriteLine(String)
  fullName: EventLogTraceListener.WriteLine(String)
- uid: System.Diagnostics.EventLogTraceListener.#ctor*
  parent: System.Diagnostics.EventLogTraceListener
  isExternal: false
  name: EventLogTraceListener
  nameWithType: EventLogTraceListener.EventLogTraceListener
  fullName: EventLogTraceListener.EventLogTraceListener
  monikers:
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  - xamarinmac-3.0
  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Diagnostics/EventLogTraceListener.xml
- uid: System.Diagnostics.EventLogTraceListener.Close*
  parent: System.Diagnostics.EventLogTraceListener
  isExternal: false
  name: Close
  nameWithType: EventLogTraceListener.Close
  fullName: EventLogTraceListener.Close
  monikers:
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  - xamarinmac-3.0
  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Diagnostics/EventLogTraceListener.xml
- uid: System.Diagnostics.EventLogTraceListener.Dispose*
  parent: System.Diagnostics.EventLogTraceListener
  isExternal: false
  name: Dispose
  nameWithType: EventLogTraceListener.Dispose
  fullName: EventLogTraceListener.Dispose
  monikers:
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  - xamarinmac-3.0
  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Diagnostics/EventLogTraceListener.xml
- uid: System.Diagnostics.EventLogTraceListener.EventLog*
  parent: System.Diagnostics.EventLogTraceListener
  isExternal: false
  name: EventLog
  nameWithType: EventLogTraceListener.EventLog
  fullName: EventLogTraceListener.EventLog
  monikers:
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  - xamarinmac-3.0
  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Diagnostics/EventLogTraceListener.xml
- uid: System.Diagnostics.EventLogTraceListener.Name*
  parent: System.Diagnostics.EventLogTraceListener
  isExternal: false
  name: Name
  nameWithType: EventLogTraceListener.Name
  fullName: EventLogTraceListener.Name
  monikers:
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  - xamarinmac-3.0
  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Diagnostics/EventLogTraceListener.xml
- uid: System.Diagnostics.EventLogTraceListener.TraceData*
  parent: System.Diagnostics.EventLogTraceListener
  isExternal: false
  name: TraceData
  nameWithType: EventLogTraceListener.TraceData
  fullName: EventLogTraceListener.TraceData
  monikers:
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  - xamarinmac-3.0
  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Diagnostics/EventLogTraceListener.xml
- uid: System.Diagnostics.EventLogTraceListener.TraceEvent*
  parent: System.Diagnostics.EventLogTraceListener
  isExternal: false
  name: TraceEvent
  nameWithType: EventLogTraceListener.TraceEvent
  fullName: EventLogTraceListener.TraceEvent
  monikers:
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  - xamarinmac-3.0
  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Diagnostics/EventLogTraceListener.xml
- uid: System.Diagnostics.EventLogTraceListener.Write*
  parent: System.Diagnostics.EventLogTraceListener
  isExternal: false
  name: Write
  nameWithType: EventLogTraceListener.Write
  fullName: EventLogTraceListener.Write
  monikers:
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  - xamarinmac-3.0
  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Diagnostics/EventLogTraceListener.xml
- uid: System.Diagnostics.EventLogTraceListener.WriteLine*
  parent: System.Diagnostics.EventLogTraceListener
  isExternal: false
  name: WriteLine
  nameWithType: EventLogTraceListener.WriteLine
  fullName: EventLogTraceListener.WriteLine
  monikers:
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  - xamarinmac-3.0
  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Diagnostics/EventLogTraceListener.xml
- uid: System.Object.Equals(System.Object)
  parent: System.Object
  isExternal: false
  name: Equals(Object)
  nameWithType: Object.Equals(Object)
  fullName: Object.Equals(Object)
- uid: System.Object.Equals(System.Object,System.Object)
  parent: System.Object
  isExternal: false
  name: Equals(Object, Object)
  nameWithType: Object.Equals(Object, Object)
  fullName: Object.Equals(Object, Object)
- uid: System.Object.GetHashCode
  parent: System.Object
  isExternal: false
  name: GetHashCode()
  nameWithType: Object.GetHashCode()
  fullName: Object.GetHashCode()
- uid: System.Object.GetType
  parent: System.Object
  isExternal: false
  name: GetType()
  nameWithType: Object.GetType()
  fullName: Object.GetType()
- uid: System.Object.MemberwiseClone
  parent: System.Object
  isExternal: false
  name: MemberwiseClone()
  nameWithType: Object.MemberwiseClone()
  fullName: Object.MemberwiseClone()
- uid: System.Object.ReferenceEquals(System.Object,System.Object)
  parent: System.Object
  isExternal: false
  name: ReferenceEquals(Object, Object)
  nameWithType: Object.ReferenceEquals(Object, Object)
  fullName: Object.ReferenceEquals(Object, Object)
- uid: System.Object.ToString
  parent: System.Object
  isExternal: false
  name: ToString()
  nameWithType: Object.ToString()
  fullName: Object.ToString()
- uid: System.Diagnostics.TraceListener.Attributes
  parent: System.Diagnostics.TraceListener
  isExternal: false
  name: Attributes
  nameWithType: TraceListener.Attributes
  fullName: TraceListener.Attributes
- uid: System.Diagnostics.TraceListener.Dispose
  parent: System.Diagnostics.TraceListener
  isExternal: false
  name: Dispose()
  nameWithType: TraceListener.Dispose()
  fullName: TraceListener.Dispose()
- uid: System.Diagnostics.TraceListener.Fail(System.String)
  parent: System.Diagnostics.TraceListener
  isExternal: false
  name: Fail(String)
  nameWithType: TraceListener.Fail(String)
  fullName: TraceListener.Fail(String)
- uid: System.Diagnostics.TraceListener.Fail(System.String,System.String)
  parent: System.Diagnostics.TraceListener
  isExternal: false
  name: Fail(String, String)
  nameWithType: TraceListener.Fail(String, String)
  fullName: TraceListener.Fail(String, String)
- uid: System.Diagnostics.TraceListener.Filter
  parent: System.Diagnostics.TraceListener
  isExternal: false
  name: Filter
  nameWithType: TraceListener.Filter
  fullName: TraceListener.Filter
- uid: System.Diagnostics.TraceListener.Flush
  parent: System.Diagnostics.TraceListener
  isExternal: false
  name: Flush()
  nameWithType: TraceListener.Flush()
  fullName: TraceListener.Flush()
- uid: System.Diagnostics.TraceListener.GetSupportedAttributes
  parent: System.Diagnostics.TraceListener
  isExternal: false
  name: GetSupportedAttributes()
  nameWithType: TraceListener.GetSupportedAttributes()
  fullName: TraceListener.GetSupportedAttributes()
- uid: System.Diagnostics.TraceListener.IndentLevel
  parent: System.Diagnostics.TraceListener
  isExternal: false
  name: IndentLevel
  nameWithType: TraceListener.IndentLevel
  fullName: TraceListener.IndentLevel
- uid: System.Diagnostics.TraceListener.IndentSize
  parent: System.Diagnostics.TraceListener
  isExternal: false
  name: IndentSize
  nameWithType: TraceListener.IndentSize
  fullName: TraceListener.IndentSize
- uid: System.Diagnostics.TraceListener.IsThreadSafe
  parent: System.Diagnostics.TraceListener
  isExternal: false
  name: IsThreadSafe
  nameWithType: TraceListener.IsThreadSafe
  fullName: TraceListener.IsThreadSafe
- uid: System.Diagnostics.TraceListener.NeedIndent
  parent: System.Diagnostics.TraceListener
  isExternal: false
  name: NeedIndent
  nameWithType: TraceListener.NeedIndent
  fullName: TraceListener.NeedIndent
- uid: System.Diagnostics.TraceListener.TraceEvent(System.Diagnostics.TraceEventCache,System.String,System.Diagnostics.TraceEventType,System.Int32)
  parent: System.Diagnostics.TraceListener
  isExternal: false
  name: TraceEvent(TraceEventCache, String, TraceEventType, Int32)
  nameWithType: TraceListener.TraceEvent(TraceEventCache, String, TraceEventType, Int32)
  fullName: TraceListener.TraceEvent(TraceEventCache, String, TraceEventType, Int32)
- uid: System.Diagnostics.TraceListener.TraceOutputOptions
  parent: System.Diagnostics.TraceListener
  isExternal: false
  name: TraceOutputOptions
  nameWithType: TraceListener.TraceOutputOptions
  fullName: TraceListener.TraceOutputOptions
- uid: System.Diagnostics.TraceListener.TraceTransfer(System.Diagnostics.TraceEventCache,System.String,System.Int32,System.String,System.Guid)
  parent: System.Diagnostics.TraceListener
  isExternal: false
  name: TraceTransfer(TraceEventCache, String, Int32, String, Guid)
  nameWithType: TraceListener.TraceTransfer(TraceEventCache, String, Int32, String, Guid)
  fullName: TraceListener.TraceTransfer(TraceEventCache, String, Int32, String, Guid)
- uid: System.Diagnostics.TraceListener.Write(System.Object)
  parent: System.Diagnostics.TraceListener
  isExternal: false
  name: Write(Object)
  nameWithType: TraceListener.Write(Object)
  fullName: TraceListener.Write(Object)
- uid: System.Diagnostics.TraceListener.Write(System.Object,System.String)
  parent: System.Diagnostics.TraceListener
  isExternal: false
  name: Write(Object, String)
  nameWithType: TraceListener.Write(Object, String)
  fullName: TraceListener.Write(Object, String)
- uid: System.Diagnostics.TraceListener.Write(System.String,System.String)
  parent: System.Diagnostics.TraceListener
  isExternal: false
  name: Write(String, String)
  nameWithType: TraceListener.Write(String, String)
  fullName: TraceListener.Write(String, String)
- uid: System.Diagnostics.TraceListener.WriteIndent
  parent: System.Diagnostics.TraceListener
  isExternal: false
  name: WriteIndent()
  nameWithType: TraceListener.WriteIndent()
  fullName: TraceListener.WriteIndent()
- uid: System.Diagnostics.TraceListener.WriteLine(System.Object)
  parent: System.Diagnostics.TraceListener
  isExternal: false
  name: WriteLine(Object)
  nameWithType: TraceListener.WriteLine(Object)
  fullName: TraceListener.WriteLine(Object)
- uid: System.Diagnostics.TraceListener.WriteLine(System.Object,System.String)
  parent: System.Diagnostics.TraceListener
  isExternal: false
  name: WriteLine(Object, String)
  nameWithType: TraceListener.WriteLine(Object, String)
  fullName: TraceListener.WriteLine(Object, String)
- uid: System.Diagnostics.TraceListener.WriteLine(System.String,System.String)
  parent: System.Diagnostics.TraceListener
  isExternal: false
  name: WriteLine(String, String)
  nameWithType: TraceListener.WriteLine(String, String)
  fullName: TraceListener.WriteLine(String, String)
