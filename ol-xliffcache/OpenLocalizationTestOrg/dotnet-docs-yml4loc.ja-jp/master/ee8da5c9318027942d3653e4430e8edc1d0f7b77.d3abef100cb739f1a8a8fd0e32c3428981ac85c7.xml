{"nodes":[{"content":"Defines the base interface for all STL/CLR iterators.","nodes":[{"pos":[0,53],"content":"Defines the base interface for all STL/CLR iterators.","nodes":[{"content":"Defines the base interface for all STL/CLR iterators.","pos":[0,53]}]}],"pos":[643,697],"yaml":true},{"content":"[!INCLUDE[cpp_iter_arg](~/includes/cpp-iter-arg-md.md)]","nodes":[],"pos":[830,888],"yaml":true},{"content":"Gets the container that the iterator is traversing.","nodes":[{"pos":[0,51],"content":"Gets the container that the iterator is traversing.","nodes":[{"content":"Gets the container that the iterator is traversing.","pos":[0,51]}]}],"pos":[2007,2059],"yaml":true},{"content":"The container that the iterator is traversing.","nodes":[{"pos":[0,46],"content":"The container that the iterator is traversing.","nodes":[{"content":"The container that the iterator is traversing.","pos":[0,46]}]}],"pos":[2186,2233],"yaml":true},{"content":"Increments the iterator to the next position in the underlying container, or to the first position beyond the end of container if the container has been completely traversed.","nodes":[{"pos":[0,174],"content":"Increments the iterator to the next position in the underlying container, or to the first position beyond the end of container if the container has been completely traversed.","nodes":[{"content":"Increments the iterator to the next position in the underlying container, or to the first position beyond the end of container if the container has been completely traversed.","pos":[0,174]}]}],"pos":[3248,3423],"yaml":true},{"content":"Determines whether the iterator is valid and can be safely used to traverse the underlying container.","nodes":[{"pos":[0,101],"content":"Determines whether the iterator is valid and can be safely used to traverse the underlying container.","nodes":[{"content":"Determines whether the iterator is valid and can be safely used to traverse the underlying container.","pos":[0,101]}]}],"pos":[4502,4604],"yaml":true},{"content":"`true` if the iterator is valid and safe to use; otherwise, `false`.","nodes":[{"pos":[0,68],"content":"<ph id=\"ph1\">`true`</ph> if the iterator is valid and safe to use; otherwise, <ph id=\"ph2\">`false`</ph>.","source":"`true` if the iterator is valid and safe to use; otherwise, `false`."}],"pos":[4726,4797],"yaml":true}],"content":"### YamlMime:ManagedReference\nitems:\n- uid: Microsoft.VisualC.StlClr.Generic.IBaseIterator`1\n  commentId: T:Microsoft.VisualC.StlClr.Generic.IBaseIterator`1\n  id: IBaseIterator`1\n  children:\n  - Microsoft.VisualC.StlClr.Generic.IBaseIterator`1.container\n  - Microsoft.VisualC.StlClr.Generic.IBaseIterator`1.next\n  - Microsoft.VisualC.StlClr.Generic.IBaseIterator`1.valid\n  langs:\n  - csharp\n  name: IBaseIterator<TValue>\n  nameWithType: IBaseIterator<TValue>\n  fullName: Microsoft.VisualC.StlClr.Generic.IBaseIterator<TValue>\n  type: Interface\n  assemblies:\n  - Microsoft.VisualC.STLCLR\n  namespace: Microsoft.VisualC.StlClr.Generic\n  summary: Defines the base interface for all STL/CLR iterators.\n  syntax:\n    content: 'public interface IBaseIterator<TValue> : ICloneable'\n    typeParameters:\n    - id: TValue\n      description: '[!INCLUDE[cpp_iter_arg](~/includes/cpp-iter-arg-md.md)]'\n  derivedClasses:\n  - Microsoft.VisualC.StlClr.Generic.IInputIterator`1\n  - Microsoft.VisualC.StlClr.Generic.IOutputIterator`1\n  implements:\n  - System.ICloneable\n  version:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/Microsoft.VisualC.StlClr.Generic/IBaseIterator`1.xml\n  ms.author: mblome\n  manager: ghogen\n- uid: Microsoft.VisualC.StlClr.Generic.IBaseIterator`1.container\n  commentId: M:Microsoft.VisualC.StlClr.Generic.IBaseIterator`1.container\n  id: container\n  parent: Microsoft.VisualC.StlClr.Generic.IBaseIterator`1\n  langs:\n  - csharp\n  name: container()\n  nameWithType: IBaseIterator<TValue>.container()\n  fullName: IBaseIterator<TValue>.container()\n  type: Method\n  assemblies:\n  - Microsoft.VisualC.STLCLR\n  namespace: Microsoft.VisualC.StlClr.Generic\n  summary: Gets the container that the iterator is traversing.\n  syntax:\n    content: public object container ();\n    parameters: []\n    return:\n      type: System.Object\n      description: The container that the iterator is traversing.\n  overload: Microsoft.VisualC.StlClr.Generic.IBaseIterator`1.container*\n  exceptions: []\n  version:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/Microsoft.VisualC.StlClr.Generic/IBaseIterator`1.xml\n  ms.author: mblome\n  manager: ghogen\n- uid: Microsoft.VisualC.StlClr.Generic.IBaseIterator`1.next\n  commentId: M:Microsoft.VisualC.StlClr.Generic.IBaseIterator`1.next\n  id: next\n  parent: Microsoft.VisualC.StlClr.Generic.IBaseIterator`1\n  langs:\n  - csharp\n  name: next()\n  nameWithType: IBaseIterator<TValue>.next()\n  fullName: IBaseIterator<TValue>.next()\n  type: Method\n  assemblies:\n  - Microsoft.VisualC.STLCLR\n  namespace: Microsoft.VisualC.StlClr.Generic\n  summary: Increments the iterator to the next position in the underlying container, or to the first position beyond the end of container if the container has been completely traversed.\n  syntax:\n    content: public void next ();\n    parameters: []\n  overload: Microsoft.VisualC.StlClr.Generic.IBaseIterator`1.next*\n  exceptions: []\n  version:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/Microsoft.VisualC.StlClr.Generic/IBaseIterator`1.xml\n  ms.author: mblome\n  manager: ghogen\n- uid: Microsoft.VisualC.StlClr.Generic.IBaseIterator`1.valid\n  commentId: M:Microsoft.VisualC.StlClr.Generic.IBaseIterator`1.valid\n  id: valid\n  parent: Microsoft.VisualC.StlClr.Generic.IBaseIterator`1\n  langs:\n  - csharp\n  name: valid()\n  nameWithType: IBaseIterator<TValue>.valid()\n  fullName: IBaseIterator<TValue>.valid()\n  type: Method\n  assemblies:\n  - Microsoft.VisualC.STLCLR\n  namespace: Microsoft.VisualC.StlClr.Generic\n  summary: Determines whether the iterator is valid and can be safely used to traverse the underlying container.\n  syntax:\n    content: public bool valid ();\n    parameters: []\n    return:\n      type: System.Boolean\n      description: '`true` if the iterator is valid and safe to use; otherwise, `false`.'\n  overload: Microsoft.VisualC.StlClr.Generic.IBaseIterator`1.valid*\n  exceptions: []\n  version:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/Microsoft.VisualC.StlClr.Generic/IBaseIterator`1.xml\n  ms.author: mblome\n  manager: ghogen\nreferences:\n- uid: Microsoft.VisualC.StlClr.Generic.IBaseIterator`1.container\n  parent: Microsoft.VisualC.StlClr.Generic.IBaseIterator`1\n  isExternal: false\n  name: container()\n  nameWithType: IBaseIterator<TValue>.container()\n  fullName: IBaseIterator<TValue>.container()\n- uid: System.Object\n  parent: System\n  isExternal: false\n  name: Object\n  nameWithType: Object\n  fullName: System.Object\n- uid: Microsoft.VisualC.StlClr.Generic.IBaseIterator`1.next\n  parent: Microsoft.VisualC.StlClr.Generic.IBaseIterator`1\n  isExternal: false\n  name: next()\n  nameWithType: IBaseIterator<TValue>.next()\n  fullName: IBaseIterator<TValue>.next()\n- uid: Microsoft.VisualC.StlClr.Generic.IBaseIterator`1.valid\n  parent: Microsoft.VisualC.StlClr.Generic.IBaseIterator`1\n  isExternal: false\n  name: valid()\n  nameWithType: IBaseIterator<TValue>.valid()\n  fullName: IBaseIterator<TValue>.valid()\n- uid: System.Boolean\n  parent: System\n  isExternal: false\n  name: Boolean\n  nameWithType: Boolean\n  fullName: System.Boolean\n- uid: Microsoft.VisualC.StlClr.Generic.IBaseIterator`1.container*\n  parent: Microsoft.VisualC.StlClr.Generic.IBaseIterator`1\n  isExternal: false\n  name: container\n  nameWithType: IBaseIterator<TValue>.container\n  fullName: IBaseIterator<TValue>.container\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/Microsoft.VisualC.StlClr.Generic/IBaseIterator`1.xml\n- uid: Microsoft.VisualC.StlClr.Generic.IBaseIterator`1.next*\n  parent: Microsoft.VisualC.StlClr.Generic.IBaseIterator`1\n  isExternal: false\n  name: next\n  nameWithType: IBaseIterator<TValue>.next\n  fullName: IBaseIterator<TValue>.next\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/Microsoft.VisualC.StlClr.Generic/IBaseIterator`1.xml\n- uid: Microsoft.VisualC.StlClr.Generic.IBaseIterator`1.valid*\n  parent: Microsoft.VisualC.StlClr.Generic.IBaseIterator`1\n  isExternal: false\n  name: valid\n  nameWithType: IBaseIterator<TValue>.valid\n  fullName: IBaseIterator<TValue>.valid\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/Microsoft.VisualC.StlClr.Generic/IBaseIterator`1.xml\n- uid: System.ICloneable\n  parent: System\n  isExternal: false\n  name: ICloneable\n  nameWithType: ICloneable\n  fullName: System.ICloneable\n"}