{"nodes":[{"content":"Describes the level of memory pressure detected.","nodes":[{"pos":[0,48],"content":"Describes the level of memory pressure detected.","nodes":[{"content":"Describes the level of memory pressure detected.","pos":[0,48]}]}],"pos":[720,769],"yaml":true},{"content":"Initializes a new instance of the <xref href=\"System.Web.Hosting.RecycleLimitInfo\"></xref> class.","nodes":[{"pos":[0,97],"content":"Initializes a new instance of the <ph id=\"ph1\">&lt;xref href=\"System.Web.Hosting.RecycleLimitInfo\"&gt;&lt;/xref&gt;</ph> class.","source":"Initializes a new instance of the <xref href=\"System.Web.Hosting.RecycleLimitInfo\"></xref> class."}],"pos":[2228,2326],"yaml":true},{"content":"Detected private bytes usage for the current process.","nodes":[{"pos":[0,53],"content":"Detected private bytes usage for the current process.","nodes":[{"content":"Detected private bytes usage for the current process.","pos":[0,53]}]}],"pos":[2590,2644],"yaml":true},{"content":"The determined private bytes limit for the current process.","nodes":[{"pos":[0,59],"content":"The determined private bytes limit for the current process.","nodes":[{"content":"The determined private bytes limit for the current process.","pos":[0,59]}]}],"pos":[2711,2771],"yaml":true},{"content":"An enum indicating how frequently the memory monitor perceives we are asking listeners to react to the approaching memory threshold.","nodes":[{"pos":[0,132],"content":"An enum indicating how frequently the memory monitor perceives we are asking listeners to react to the approaching memory threshold.","nodes":[{"content":"An enum indicating how frequently the memory monitor perceives we are asking listeners to react to the approaching memory threshold.","pos":[0,132]}]}],"pos":[2891,3024],"yaml":true},{"content":"Gets the detected private bytes usage for the current process.","nodes":[{"pos":[0,62],"content":"Gets the detected private bytes usage for the current process.","nodes":[{"content":"Gets the detected private bytes usage for the current process.","pos":[0,62]}]}],"pos":[3810,3873],"yaml":true},{"content":"The detected private bytes usage for the current process.","nodes":[{"pos":[0,57],"content":"The detected private bytes usage for the current process.","nodes":[{"content":"The detected private bytes usage for the current process.","pos":[0,57]}]}],"pos":[3993,4051],"yaml":true},{"content":"Gets the determined private bytes limit for the current process.","nodes":[{"pos":[0,64],"content":"Gets the determined private bytes limit for the current process.","nodes":[{"content":"Gets the determined private bytes limit for the current process.","pos":[0,64]}]}],"pos":[4809,4874],"yaml":true},{"content":"The determined private bytes limit for the current process.","nodes":[{"pos":[0,59],"content":"The determined private bytes limit for the current process.","nodes":[{"content":"The determined private bytes limit for the current process.","pos":[0,59]}]}],"pos":[4987,5047],"yaml":true},{"content":"Sets a Boolean value returned to the source of the observable event that may be used to indicate whether the source of the event should induce a Garbage Collection after all observers have processed the event.","nodes":[{"pos":[0,209],"content":"Sets a Boolean value returned to the source of the observable event that may be used to indicate whether the source of the event should induce a Garbage Collection after all observers have processed the event.","nodes":[{"content":"Sets a Boolean value returned to the source of the observable event that may be used to indicate whether the source of the event should induce a Garbage Collection after all observers have processed the event.","pos":[0,209]}]}],"pos":[5780,5990],"yaml":true},{"content":"Gets an enum that indicates how frequently the memory monitor perceives we are asking listeners to react to the approaching memory threshold. Subscribers tailor their reactions to the event to be more severe or benign based on this frequency.","nodes":[{"pos":[0,242],"content":"Gets an enum that indicates how frequently the memory monitor perceives we are asking listeners to react to the approaching memory threshold. Subscribers tailor their reactions to the event to be more severe or benign based on this frequency.","nodes":[{"content":"Gets an enum that indicates how frequently the memory monitor perceives we are asking listeners to react to the approaching memory threshold. Subscribers tailor their reactions to the event to be more severe or benign based on this frequency.","pos":[0,242],"nodes":[{"content":"Gets an enum that indicates how frequently the memory monitor perceives we are asking listeners to react to the approaching memory threshold.","pos":[0,141]},{"content":"Subscribers tailor their reactions to the event to be more severe or benign based on this frequency.","pos":[142,242]}]}]}],"pos":[6864,7107],"yaml":true},{"content":"An enum that indicates how frequently listeners should react.","nodes":[{"pos":[0,61],"content":"An enum that indicates how frequently listeners should react.","nodes":[{"content":"An enum that indicates how frequently listeners should react.","pos":[0,61]}]}],"pos":[7309,7371],"yaml":true}],"content":"### YamlMime:ManagedReference\nitems:\n- uid: System.Web.Hosting.RecycleLimitInfo\n  commentId: T:System.Web.Hosting.RecycleLimitInfo\n  id: RecycleLimitInfo\n  children:\n  - System.Web.Hosting.RecycleLimitInfo.#ctor(System.Int64,System.Int64,System.Web.Hosting.RecycleLimitNotificationFrequency)\n  - System.Web.Hosting.RecycleLimitInfo.CurrentPrivateBytes\n  - System.Web.Hosting.RecycleLimitInfo.RecycleLimit\n  - System.Web.Hosting.RecycleLimitInfo.RequestGC\n  - System.Web.Hosting.RecycleLimitInfo.TrimFrequency\n  langs:\n  - csharp\n  name: RecycleLimitInfo\n  nameWithType: RecycleLimitInfo\n  fullName: System.Web.Hosting.RecycleLimitInfo\n  type: Class\n  assemblies:\n  - System.Web\n  namespace: System.Web.Hosting\n  summary: Describes the level of memory pressure detected.\n  syntax:\n    content: public sealed class RecycleLimitInfo\n  inheritance:\n  - System.Object\n  implements: []\n  inheritedMembers:\n  - System.Object.Equals(System.Object)\n  - System.Object.Equals(System.Object,System.Object)\n  - System.Object.GetHashCode\n  - System.Object.GetType\n  - System.Object.MemberwiseClone\n  - System.Object.ReferenceEquals(System.Object,System.Object)\n  - System.Object.ToString\n  version:\n  - netframework-4.7\n  monikers:\n  - netframework-4.7\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Web.Hosting/RecycleLimitInfo.xml\n  ms.technology:\n  - dotnet-webforms\n  author: tdykstra\n  ms.author: tdykstra\n  manager: wpickett\n- uid: System.Web.Hosting.RecycleLimitInfo.#ctor(System.Int64,System.Int64,System.Web.Hosting.RecycleLimitNotificationFrequency)\n  commentId: M:System.Web.Hosting.RecycleLimitInfo.#ctor(System.Int64,System.Int64,System.Web.Hosting.RecycleLimitNotificationFrequency)\n  id: '#ctor(System.Int64,System.Int64,System.Web.Hosting.RecycleLimitNotificationFrequency)'\n  parent: System.Web.Hosting.RecycleLimitInfo\n  langs:\n  - csharp\n  name: RecycleLimitInfo(Int64, Int64, RecycleLimitNotificationFrequency)\n  nameWithType: RecycleLimitInfo.RecycleLimitInfo(Int64, Int64, RecycleLimitNotificationFrequency)\n  fullName: RecycleLimitInfo.RecycleLimitInfo(Int64, Int64, RecycleLimitNotificationFrequency)\n  type: Constructor\n  assemblies:\n  - System.Web\n  namespace: System.Web.Hosting\n  summary: Initializes a new instance of the <xref href=\"System.Web.Hosting.RecycleLimitInfo\"></xref> class.\n  syntax:\n    content: public RecycleLimitInfo (long currentPrivateBytes, long recycleLimit, System.Web.Hosting.RecycleLimitNotificationFrequency recycleLimitNearFrequency);\n    parameters:\n    - id: currentPrivateBytes\n      type: System.Int64\n      description: Detected private bytes usage for the current process.\n    - id: recycleLimit\n      type: System.Int64\n      description: The determined private bytes limit for the current process.\n    - id: recycleLimitNearFrequency\n      type: System.Web.Hosting.RecycleLimitNotificationFrequency\n      description: An enum indicating how frequently the memory monitor perceives we are asking listeners to react to the approaching memory threshold.\n  overload: System.Web.Hosting.RecycleLimitInfo.#ctor*\n  exceptions: []\n  version:\n  - netframework-4.7\n  monikers:\n  - netframework-4.7\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Web.Hosting/RecycleLimitInfo.xml\n  ms.technology:\n  - dotnet-webforms\n  author: tdykstra\n  ms.author: tdykstra\n  manager: wpickett\n- uid: System.Web.Hosting.RecycleLimitInfo.CurrentPrivateBytes\n  commentId: P:System.Web.Hosting.RecycleLimitInfo.CurrentPrivateBytes\n  id: CurrentPrivateBytes\n  parent: System.Web.Hosting.RecycleLimitInfo\n  langs:\n  - csharp\n  name: CurrentPrivateBytes\n  nameWithType: RecycleLimitInfo.CurrentPrivateBytes\n  fullName: RecycleLimitInfo.CurrentPrivateBytes\n  type: Property\n  assemblies:\n  - System.Web\n  namespace: System.Web.Hosting\n  summary: Gets the detected private bytes usage for the current process.\n  syntax:\n    content: public long CurrentPrivateBytes { get; }\n    return:\n      type: System.Int64\n      description: The detected private bytes usage for the current process.\n  overload: System.Web.Hosting.RecycleLimitInfo.CurrentPrivateBytes*\n  exceptions: []\n  version:\n  - netframework-4.7\n  monikers:\n  - netframework-4.7\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Web.Hosting/RecycleLimitInfo.xml\n  ms.technology:\n  - dotnet-webforms\n  author: tdykstra\n  ms.author: tdykstra\n  manager: wpickett\n- uid: System.Web.Hosting.RecycleLimitInfo.RecycleLimit\n  commentId: P:System.Web.Hosting.RecycleLimitInfo.RecycleLimit\n  id: RecycleLimit\n  parent: System.Web.Hosting.RecycleLimitInfo\n  langs:\n  - csharp\n  name: RecycleLimit\n  nameWithType: RecycleLimitInfo.RecycleLimit\n  fullName: RecycleLimitInfo.RecycleLimit\n  type: Property\n  assemblies:\n  - System.Web\n  namespace: System.Web.Hosting\n  summary: Gets the determined private bytes limit for the current process.\n  syntax:\n    content: public long RecycleLimit { get; }\n    return:\n      type: System.Int64\n      description: The determined private bytes limit for the current process.\n  overload: System.Web.Hosting.RecycleLimitInfo.RecycleLimit*\n  exceptions: []\n  version:\n  - netframework-4.7\n  monikers:\n  - netframework-4.7\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Web.Hosting/RecycleLimitInfo.xml\n  ms.technology:\n  - dotnet-webforms\n  author: tdykstra\n  ms.author: tdykstra\n  manager: wpickett\n- uid: System.Web.Hosting.RecycleLimitInfo.RequestGC\n  commentId: P:System.Web.Hosting.RecycleLimitInfo.RequestGC\n  id: RequestGC\n  parent: System.Web.Hosting.RecycleLimitInfo\n  langs:\n  - csharp\n  name: RequestGC\n  nameWithType: RecycleLimitInfo.RequestGC\n  fullName: RecycleLimitInfo.RequestGC\n  type: Property\n  assemblies:\n  - System.Web\n  namespace: System.Web.Hosting\n  summary: Sets a Boolean value returned to the source of the observable event that may be used to indicate whether the source of the event should induce a Garbage Collection after all observers have processed the event.\n  syntax:\n    content: public bool RequestGC { get; set; }\n    return:\n      type: System.Boolean\n      description: ''\n  overload: System.Web.Hosting.RecycleLimitInfo.RequestGC*\n  exceptions: []\n  version:\n  - netframework-4.7\n  monikers:\n  - netframework-4.7\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Web.Hosting/RecycleLimitInfo.xml\n  ms.technology:\n  - dotnet-webforms\n  author: tdykstra\n  ms.author: tdykstra\n  manager: wpickett\n- uid: System.Web.Hosting.RecycleLimitInfo.TrimFrequency\n  commentId: P:System.Web.Hosting.RecycleLimitInfo.TrimFrequency\n  id: TrimFrequency\n  parent: System.Web.Hosting.RecycleLimitInfo\n  langs:\n  - csharp\n  name: TrimFrequency\n  nameWithType: RecycleLimitInfo.TrimFrequency\n  fullName: RecycleLimitInfo.TrimFrequency\n  type: Property\n  assemblies:\n  - System.Web\n  namespace: System.Web.Hosting\n  summary: Gets an enum that indicates how frequently the memory monitor perceives we are asking listeners to react to the approaching memory threshold. Subscribers tailor their reactions to the event to be more severe or benign based on this frequency.\n  syntax:\n    content: public System.Web.Hosting.RecycleLimitNotificationFrequency TrimFrequency { get; }\n    return:\n      type: System.Web.Hosting.RecycleLimitNotificationFrequency\n      description: An enum that indicates how frequently listeners should react.\n  overload: System.Web.Hosting.RecycleLimitInfo.TrimFrequency*\n  exceptions: []\n  version:\n  - netframework-4.7\n  monikers:\n  - netframework-4.7\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Web.Hosting/RecycleLimitInfo.xml\n  ms.technology:\n  - dotnet-webforms\n  author: tdykstra\n  ms.author: tdykstra\n  manager: wpickett\nreferences:\n- uid: System.Object\n  parent: System\n  isExternal: false\n  name: Object\n  nameWithType: Object\n  fullName: System.Object\n- uid: System.Web.Hosting.RecycleLimitInfo.#ctor(System.Int64,System.Int64,System.Web.Hosting.RecycleLimitNotificationFrequency)\n  parent: System.Web.Hosting.RecycleLimitInfo\n  isExternal: false\n  name: RecycleLimitInfo(Int64, Int64, RecycleLimitNotificationFrequency)\n  nameWithType: RecycleLimitInfo.RecycleLimitInfo(Int64, Int64, RecycleLimitNotificationFrequency)\n  fullName: RecycleLimitInfo.RecycleLimitInfo(Int64, Int64, RecycleLimitNotificationFrequency)\n- uid: System.Int64\n  parent: System\n  isExternal: false\n  name: Int64\n  nameWithType: Int64\n  fullName: System.Int64\n- uid: System.Web.Hosting.RecycleLimitNotificationFrequency\n  parent: System.Web.Hosting\n  isExternal: false\n  name: RecycleLimitNotificationFrequency\n  nameWithType: RecycleLimitNotificationFrequency\n  fullName: System.Web.Hosting.RecycleLimitNotificationFrequency\n- uid: System.Web.Hosting.RecycleLimitInfo.CurrentPrivateBytes\n  parent: System.Web.Hosting.RecycleLimitInfo\n  isExternal: false\n  name: CurrentPrivateBytes\n  nameWithType: RecycleLimitInfo.CurrentPrivateBytes\n  fullName: RecycleLimitInfo.CurrentPrivateBytes\n- uid: System.Web.Hosting.RecycleLimitInfo.RecycleLimit\n  parent: System.Web.Hosting.RecycleLimitInfo\n  isExternal: false\n  name: RecycleLimit\n  nameWithType: RecycleLimitInfo.RecycleLimit\n  fullName: RecycleLimitInfo.RecycleLimit\n- uid: System.Web.Hosting.RecycleLimitInfo.RequestGC\n  parent: System.Web.Hosting.RecycleLimitInfo\n  isExternal: false\n  name: RequestGC\n  nameWithType: RecycleLimitInfo.RequestGC\n  fullName: RecycleLimitInfo.RequestGC\n- uid: System.Boolean\n  parent: System\n  isExternal: false\n  name: Boolean\n  nameWithType: Boolean\n  fullName: System.Boolean\n- uid: System.Web.Hosting.RecycleLimitInfo.TrimFrequency\n  parent: System.Web.Hosting.RecycleLimitInfo\n  isExternal: false\n  name: TrimFrequency\n  nameWithType: RecycleLimitInfo.TrimFrequency\n  fullName: RecycleLimitInfo.TrimFrequency\n- uid: System.Web.Hosting.RecycleLimitInfo.#ctor*\n  parent: System.Web.Hosting.RecycleLimitInfo\n  isExternal: false\n  name: RecycleLimitInfo\n  nameWithType: RecycleLimitInfo.RecycleLimitInfo\n  fullName: RecycleLimitInfo.RecycleLimitInfo\n  monikers:\n  - netframework-4.7\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Web.Hosting/RecycleLimitInfo.xml\n- uid: System.Web.Hosting.RecycleLimitInfo.CurrentPrivateBytes*\n  parent: System.Web.Hosting.RecycleLimitInfo\n  isExternal: false\n  name: CurrentPrivateBytes\n  nameWithType: RecycleLimitInfo.CurrentPrivateBytes\n  fullName: RecycleLimitInfo.CurrentPrivateBytes\n  monikers:\n  - netframework-4.7\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Web.Hosting/RecycleLimitInfo.xml\n- uid: System.Web.Hosting.RecycleLimitInfo.RecycleLimit*\n  parent: System.Web.Hosting.RecycleLimitInfo\n  isExternal: false\n  name: RecycleLimit\n  nameWithType: RecycleLimitInfo.RecycleLimit\n  fullName: RecycleLimitInfo.RecycleLimit\n  monikers:\n  - netframework-4.7\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Web.Hosting/RecycleLimitInfo.xml\n- uid: System.Web.Hosting.RecycleLimitInfo.RequestGC*\n  parent: System.Web.Hosting.RecycleLimitInfo\n  isExternal: false\n  name: RequestGC\n  nameWithType: RecycleLimitInfo.RequestGC\n  fullName: RecycleLimitInfo.RequestGC\n  monikers:\n  - netframework-4.7\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Web.Hosting/RecycleLimitInfo.xml\n- uid: System.Web.Hosting.RecycleLimitInfo.TrimFrequency*\n  parent: System.Web.Hosting.RecycleLimitInfo\n  isExternal: false\n  name: TrimFrequency\n  nameWithType: RecycleLimitInfo.TrimFrequency\n  fullName: RecycleLimitInfo.TrimFrequency\n  monikers:\n  - netframework-4.7\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Web.Hosting/RecycleLimitInfo.xml\n- uid: System.Object.Equals(System.Object)\n  parent: System.Object\n  isExternal: false\n  name: Equals(Object)\n  nameWithType: Object.Equals(Object)\n  fullName: Object.Equals(Object)\n- uid: System.Object.Equals(System.Object,System.Object)\n  parent: System.Object\n  isExternal: false\n  name: Equals(Object, Object)\n  nameWithType: Object.Equals(Object, Object)\n  fullName: Object.Equals(Object, Object)\n- uid: System.Object.GetHashCode\n  parent: System.Object\n  isExternal: false\n  name: GetHashCode()\n  nameWithType: Object.GetHashCode()\n  fullName: Object.GetHashCode()\n- uid: System.Object.GetType\n  parent: System.Object\n  isExternal: false\n  name: GetType()\n  nameWithType: Object.GetType()\n  fullName: Object.GetType()\n- uid: System.Object.MemberwiseClone\n  parent: System.Object\n  isExternal: false\n  name: MemberwiseClone()\n  nameWithType: Object.MemberwiseClone()\n  fullName: Object.MemberwiseClone()\n- uid: System.Object.ReferenceEquals(System.Object,System.Object)\n  parent: System.Object\n  isExternal: false\n  name: ReferenceEquals(Object, Object)\n  nameWithType: Object.ReferenceEquals(Object, Object)\n  fullName: Object.ReferenceEquals(Object, Object)\n- uid: System.Object.ToString\n  parent: System.Object\n  isExternal: false\n  name: ToString()\n  nameWithType: Object.ToString()\n  fullName: Object.ToString()\n"}