{"nodes":[{"content":"Grants Web permission to the site from which the assembly was downloaded. This class cannot be inherited.","nodes":[{"pos":[0,105],"content":"Grants Web permission to the site from which the assembly was downloaded. This class cannot be inherited.","nodes":[{"content":"Grants Web permission to the site from which the assembly was downloaded. This class cannot be inherited.","pos":[0,105],"nodes":[{"content":"Grants Web permission to the site from which the assembly was downloaded.","pos":[0,73]},{"content":"This class cannot be inherited.","pos":[74,105]}]}]}],"pos":[1583,1689],"yaml":true},{"content":"Code groups are the building blocks of code access security policy. Each policy level consists of a root code group that can have one or more child code groups. Each child code group can have its own child code groups; this behavior extends to any number of levels, forming a tree. Each code group has a membership condition that determines if a given assembly belongs to the group, based on the evidence for that assembly. Only code groups whose membership conditions match a given assembly, along with their child code groups, apply code access security policy.  \n  \n <xref:System.Security.Policy.NetCodeGroup> has the same merge semantics as that of <xref:System.Security.Policy.UnionCodeGroup>; it forms the union of the <xref:System.Security.Policy.PolicyStatement> objects of all matching child code groups and the <xref:System.Security.Policy.PolicyStatement> it generates from the input <xref:System.Security.Policy.Url> evidence. However, <xref:System.Security.Policy.NetCodeGroup> returns a permission containing a dynamically calculated <xref:System.Net.WebPermission> that grants connect access to the site from which the code is run; <xref:System.Security.Policy.UnionCodeGroup> simply returns a static permission set.  \n  \n When a <xref:System.Security.Policy.NetCodeGroup> is created, it contains the default connection access rules shown in the following table.  \n  \n|URI Scheme|Rule|  \n|----------------|----------|  \n|file|No connection access to the origin server is permitted.|  \n|http|HTTP and HTTPS access is permitted using the origin port.|  \n|https|HTTPS access is permitted using the origin port.|  \n  \n You can control the scheme and port that code is permitted to use when connecting back to its site of origin by passing a <xref:System.Security.Policy.CodeConnectAccess> object with the appropriate <xref:System.Security.Policy.CodeConnectAccess.Scheme%2A> and <xref:System.Security.Policy.CodeConnectAccess.Port%2A> property values to the <xref:System.Security.Policy.NetCodeGroup.AddConnectAccess%2A> method. You can create a connection access rule that applies when the origin scheme is not present in the evidence or is not recognized by specifying <xref:System.Security.Policy.NetCodeGroup.AbsentOriginScheme> (\"\") as the scheme. You can also create a connection access rule that applies when there is no connection access rule with a matching scheme by specifying <xref:System.Security.Policy.NetCodeGroup.AnyOtherOriginScheme> (\"*\") as the scheme.  \n  \n> [!NOTE]\n>  If code does not submit the URI scheme as evidence, access is permitted using any scheme back to the origin site.","nodes":[{"pos":[0,563],"content":"Code groups are the building blocks of code access security policy. Each policy level consists of a root code group that can have one or more child code groups. Each child code group can have its own child code groups; this behavior extends to any number of levels, forming a tree. Each code group has a membership condition that determines if a given assembly belongs to the group, based on the evidence for that assembly. Only code groups whose membership conditions match a given assembly, along with their child code groups, apply code access security policy.","nodes":[{"content":"Code groups are the building blocks of code access security policy. Each policy level consists of a root code group that can have one or more child code groups. Each child code group can have its own child code groups; this behavior extends to any number of levels, forming a tree. Each code group has a membership condition that determines if a given assembly belongs to the group, based on the evidence for that assembly. Only code groups whose membership conditions match a given assembly, along with their child code groups, apply code access security policy.","pos":[0,563],"nodes":[{"content":"Code groups are the building blocks of code access security policy.","pos":[0,67]},{"content":"Each policy level consists of a root code group that can have one or more child code groups.","pos":[68,160]},{"content":"Each child code group can have its own child code groups; this behavior extends to any number of levels, forming a tree.","pos":[161,281]},{"content":"Each code group has a membership condition that determines if a given assembly belongs to the group, based on the evidence for that assembly.","pos":[282,423]},{"content":"Only code groups whose membership conditions match a given assembly, along with their child code groups, apply code access security policy.","pos":[424,563]}]}]},{"pos":[570,1231],"content":"<xref:System.Security.Policy.NetCodeGroup> has the same merge semantics as that of <xref:System.Security.Policy.UnionCodeGroup>; it forms the union of the <xref:System.Security.Policy.PolicyStatement> objects of all matching child code groups and the <xref:System.Security.Policy.PolicyStatement> it generates from the input <xref:System.Security.Policy.Url> evidence. However, <xref:System.Security.Policy.NetCodeGroup> returns a permission containing a dynamically calculated <xref:System.Net.WebPermission> that grants connect access to the site from which the code is run; <xref:System.Security.Policy.UnionCodeGroup> simply returns a static permission set.","nodes":[{"content":"<xref:System.Security.Policy.NetCodeGroup> has the same merge semantics as that of <xref:System.Security.Policy.UnionCodeGroup>; it forms the union of the <xref:System.Security.Policy.PolicyStatement> objects of all matching child code groups and the <xref:System.Security.Policy.PolicyStatement> it generates from the input <xref:System.Security.Policy.Url> evidence. However, <xref:System.Security.Policy.NetCodeGroup> returns a permission containing a dynamically calculated <xref:System.Net.WebPermission> that grants connect access to the site from which the code is run; <xref:System.Security.Policy.UnionCodeGroup> simply returns a static permission set.","pos":[0,661],"nodes":[{"content":"<ph id=\"ph1\">&lt;xref:System.Security.Policy.NetCodeGroup&gt;</ph> has the same merge semantics as that of <ph id=\"ph2\">&lt;xref:System.Security.Policy.UnionCodeGroup&gt;</ph>; it forms the union of the <ph id=\"ph3\">&lt;xref:System.Security.Policy.PolicyStatement&gt;</ph> objects of all matching child code groups and the <ph id=\"ph4\">&lt;xref:System.Security.Policy.PolicyStatement&gt;</ph> it generates from the input <ph id=\"ph5\">&lt;xref:System.Security.Policy.Url&gt;</ph> evidence.","pos":[0,368],"source":"<xref:System.Security.Policy.NetCodeGroup> has the same merge semantics as that of <xref:System.Security.Policy.UnionCodeGroup>; it forms the union of the <xref:System.Security.Policy.PolicyStatement> objects of all matching child code groups and the <xref:System.Security.Policy.PolicyStatement> it generates from the input <xref:System.Security.Policy.Url> evidence."},{"content":"However, <ph id=\"ph1\">&lt;xref:System.Security.Policy.NetCodeGroup&gt;</ph> returns a permission containing a dynamically calculated <ph id=\"ph2\">&lt;xref:System.Net.WebPermission&gt;</ph> that grants connect access to the site from which the code is run; <ph id=\"ph3\">&lt;xref:System.Security.Policy.UnionCodeGroup&gt;</ph> simply returns a static permission set.","pos":[369,661],"source":" However, <xref:System.Security.Policy.NetCodeGroup> returns a permission containing a dynamically calculated <xref:System.Net.WebPermission> that grants connect access to the site from which the code is run; <xref:System.Security.Policy.UnionCodeGroup> simply returns a static permission set."}]}]},{"pos":[1238,1377],"content":"When a <xref:System.Security.Policy.NetCodeGroup> is created, it contains the default connection access rules shown in the following table.","nodes":[{"content":"When a <ph id=\"ph1\">&lt;xref:System.Security.Policy.NetCodeGroup&gt;</ph> is created, it contains the default connection access rules shown in the following table.","pos":[0,139],"source":"When a <xref:System.Security.Policy.NetCodeGroup> is created, it contains the default connection access rules shown in the following table."}]},{"pos":[1384,1394],"content":"URI Scheme","nodes":[{"content":"URI Scheme","pos":[0,10]}]},{"pos":[1395,1399],"content":"Rule","nodes":[{"content":"Rule","pos":[0,4]}]},{"pos":[1436,1440],"content":"file","nodes":[{"content":"file","pos":[0,4]}]},{"pos":[1441,1496],"content":"No connection access to the origin server is permitted.","nodes":[{"content":"No connection access to the origin server is permitted.","pos":[0,55]}]},{"pos":[1501,1505],"content":"http","nodes":[{"content":"http","pos":[0,4]}]},{"pos":[1506,1563],"content":"HTTP and HTTPS access is permitted using the origin port.","nodes":[{"content":"HTTP and HTTPS access is permitted using the origin port.","pos":[0,57]}]},{"pos":[1568,1573],"content":"https","nodes":[{"content":"https","pos":[0,5]}]},{"pos":[1574,1622],"content":"HTTPS access is permitted using the origin port.","nodes":[{"content":"HTTPS access is permitted using the origin port.","pos":[0,48]}]},{"pos":[1630,2483],"content":"You can control the scheme and port that code is permitted to use when connecting back to its site of origin by passing a <xref:System.Security.Policy.CodeConnectAccess> object with the appropriate <xref:System.Security.Policy.CodeConnectAccess.Scheme%2A> and <xref:System.Security.Policy.CodeConnectAccess.Port%2A> property values to the <xref:System.Security.Policy.NetCodeGroup.AddConnectAccess%2A> method. You can create a connection access rule that applies when the origin scheme is not present in the evidence or is not recognized by specifying <xref:System.Security.Policy.NetCodeGroup.AbsentOriginScheme> (\"\") as the scheme. You can also create a connection access rule that applies when there is no connection access rule with a matching scheme by specifying <xref:System.Security.Policy.NetCodeGroup.AnyOtherOriginScheme> (\"*\") as the scheme.","nodes":[{"content":"You can control the scheme and port that code is permitted to use when connecting back to its site of origin by passing a <xref:System.Security.Policy.CodeConnectAccess> object with the appropriate <xref:System.Security.Policy.CodeConnectAccess.Scheme%2A> and <xref:System.Security.Policy.CodeConnectAccess.Port%2A> property values to the <xref:System.Security.Policy.NetCodeGroup.AddConnectAccess%2A> method. You can create a connection access rule that applies when the origin scheme is not present in the evidence or is not recognized by specifying <xref:System.Security.Policy.NetCodeGroup.AbsentOriginScheme> (\"\") as the scheme. You can also create a connection access rule that applies when there is no connection access rule with a matching scheme by specifying <xref:System.Security.Policy.NetCodeGroup.AnyOtherOriginScheme> (\"*\") as the scheme.","pos":[0,853],"nodes":[{"content":"You can control the scheme and port that code is permitted to use when connecting back to its site of origin by passing a <ph id=\"ph1\">&lt;xref:System.Security.Policy.CodeConnectAccess&gt;</ph> object with the appropriate <ph id=\"ph2\">&lt;xref:System.Security.Policy.CodeConnectAccess.Scheme%2A&gt;</ph> and <ph id=\"ph3\">&lt;xref:System.Security.Policy.CodeConnectAccess.Port%2A&gt;</ph> property values to the <ph id=\"ph4\">&lt;xref:System.Security.Policy.NetCodeGroup.AddConnectAccess%2A&gt;</ph> method.","pos":[0,409],"source":"You can control the scheme and port that code is permitted to use when connecting back to its site of origin by passing a <xref:System.Security.Policy.CodeConnectAccess> object with the appropriate <xref:System.Security.Policy.CodeConnectAccess.Scheme%2A> and <xref:System.Security.Policy.CodeConnectAccess.Port%2A> property values to the <xref:System.Security.Policy.NetCodeGroup.AddConnectAccess%2A> method."},{"content":"You can create a connection access rule that applies when the origin scheme is not present in the evidence or is not recognized by specifying <ph id=\"ph1\">&lt;xref:System.Security.Policy.NetCodeGroup.AbsentOriginScheme&gt;</ph> (\"\") as the scheme.","pos":[410,633],"source":" You can create a connection access rule that applies when the origin scheme is not present in the evidence or is not recognized by specifying <xref:System.Security.Policy.NetCodeGroup.AbsentOriginScheme> (\"\") as the scheme."},{"content":"You can also create a connection access rule that applies when there is no connection access rule with a matching scheme by specifying <ph id=\"ph1\">&lt;xref:System.Security.Policy.NetCodeGroup.AnyOtherOriginScheme&gt;</ph> (\"*\") as the scheme.","pos":[634,853],"source":" You can also create a connection access rule that applies when there is no connection access rule with a matching scheme by specifying <xref:System.Security.Policy.NetCodeGroup.AnyOtherOriginScheme> (\"*\") as the scheme."}]}]},{"pos":[2491,2615],"content":"[!NOTE]\n If code does not submit the URI scheme as evidence, access is permitted using any scheme back to the origin site.","leadings":["","> "],"nodes":[{"content":"If code does not submit the URI scheme as evidence, access is permitted using any scheme back to the origin site.","pos":[9,122]}]}],"pos":[1700,4337],"yaml":true,"extradata":"MT"},{"content":"Initializes a new instance of the <xref href=\"System.Security.Policy.NetCodeGroup\"></xref> class.","nodes":[{"pos":[0,97],"content":"Initializes a new instance of the <ph id=\"ph1\">&lt;xref href=\"System.Security.Policy.NetCodeGroup\"&gt;&lt;/xref&gt;</ph> class.","source":"Initializes a new instance of the <xref href=\"System.Security.Policy.NetCodeGroup\"></xref> class."}],"pos":[7440,7538],"yaml":true},{"content":"When a <xref:System.Security.Policy.NetCodeGroup> is created, it contains the default connection access rules shown in the following table.  \n  \n|Scheme|Rule|  \n|------------|----------|  \n|file|No connection access to the origin server is permitted.|  \n|http|HTTP and HTTPS access is permitted using the origin port.|  \n|https|HTTPS access is permitted using the origin port.|","nodes":[{"pos":[0,139],"content":"When a <xref:System.Security.Policy.NetCodeGroup> is created, it contains the default connection access rules shown in the following table.","nodes":[{"content":"When a <ph id=\"ph1\">&lt;xref:System.Security.Policy.NetCodeGroup&gt;</ph> is created, it contains the default connection access rules shown in the following table.","pos":[0,139],"source":"When a <xref:System.Security.Policy.NetCodeGroup> is created, it contains the default connection access rules shown in the following table."}]},{"pos":[146,152],"content":"Scheme","nodes":[{"content":"Scheme","pos":[0,6]}]},{"pos":[153,157],"content":"Rule","nodes":[{"content":"Rule","pos":[0,4]}]},{"pos":[190,194],"content":"file","nodes":[{"content":"file","pos":[0,4]}]},{"pos":[195,250],"content":"No connection access to the origin server is permitted.","nodes":[{"content":"No connection access to the origin server is permitted.","pos":[0,55]}]},{"pos":[255,259],"content":"http","nodes":[{"content":"http","pos":[0,4]}]},{"pos":[260,317],"content":"HTTP and HTTPS access is permitted using the origin port.","nodes":[{"content":"HTTP and HTTPS access is permitted using the origin port.","pos":[0,57]}]},{"pos":[322,327],"content":"https","nodes":[{"content":"https","pos":[0,5]}]},{"pos":[328,376],"content":"HTTPS access is permitted using the origin port.","nodes":[{"content":"HTTPS access is permitted using the origin port.","pos":[0,48]}]}],"pos":[7549,7935],"yaml":true,"extradata":"MT"},{"content":"A membership condition that tests evidence to determine whether this code group applies code access security policy.","nodes":[{"pos":[0,116],"content":"A membership condition that tests evidence to determine whether this code group applies code access security policy.","nodes":[{"content":"A membership condition that tests evidence to determine whether this code group applies code access security policy.","pos":[0,116]}]}],"pos":[8607,8724],"yaml":true},{"content":"The <code>membershipCondition</code> parameter is `null`.","nodes":[{"pos":[0,57],"content":"The <bpt id=\"p1\">&lt;code&gt;</bpt><ph id=\"ph1\">membershipCondition</ph><ept id=\"p1\">&lt;/code&gt;</ept> parameter is <ph id=\"ph2\">`null`</ph>.","source":"The <code>membershipCondition</code> parameter is `null`."}],"pos":[8895,8953],"yaml":true},{"content":"The type of the <code>membershipCondition</code> parameter is not valid.","nodes":[{"pos":[0,72],"content":"The type of the <bpt id=\"p1\">&lt;code&gt;</bpt><ph id=\"ph1\">membershipCondition</ph><ept id=\"p1\">&lt;/code&gt;</ept> parameter is not valid.","source":"The type of the <code>membershipCondition</code> parameter is not valid."}],"pos":[9047,9120],"yaml":true},{"content":"Contains a value used to specify connection access for code with an unknown or unrecognized origin scheme.","nodes":[{"pos":[0,106],"content":"Contains a value used to specify connection access for code with an unknown or unrecognized origin scheme.","nodes":[{"content":"Contains a value used to specify connection access for code with an unknown or unrecognized origin scheme.","pos":[0,106]}]}],"pos":[10271,10378],"yaml":true},{"content":"When calling the <xref:System.Security.Policy.NetCodeGroup.AddConnectAccess%2A> method, you specify a scheme and an associated <xref:System.Security.Policy.CodeConnectAccess> object. Any <xref:System.Security.Policy.CodeConnectAccess> objects that you add to the <xref:System.Security.Policy.NetCodeGroup> using <xref:System.Security.Policy.NetCodeGroup.AbsentOriginScheme> as the origin scheme are applied when the code's origin scheme is not present in its evidence, or is not a scheme recognized by the <xref:System.Security.Policy.NetCodeGroup> object.  \n  \n To specify the <xref:System.Security.Policy.CodeConnectAccess> objects to use when the code's origin scheme does not match any of the schemes contained in the set of origin schemes added to the current <xref:System.Security.Policy.NetCodeGroup> object, use the <xref:System.Security.Policy.NetCodeGroup.AnyOtherOriginScheme> value.  \n  \n The value of the <xref:System.Security.Policy.NetCodeGroup.AbsentOriginScheme> field is an empty string (\"\").","nodes":[{"pos":[0,556],"content":"When calling the <xref:System.Security.Policy.NetCodeGroup.AddConnectAccess%2A> method, you specify a scheme and an associated <xref:System.Security.Policy.CodeConnectAccess> object. Any <xref:System.Security.Policy.CodeConnectAccess> objects that you add to the <xref:System.Security.Policy.NetCodeGroup> using <xref:System.Security.Policy.NetCodeGroup.AbsentOriginScheme> as the origin scheme are applied when the code's origin scheme is not present in its evidence, or is not a scheme recognized by the <xref:System.Security.Policy.NetCodeGroup> object.","nodes":[{"content":"When calling the <xref:System.Security.Policy.NetCodeGroup.AddConnectAccess%2A> method, you specify a scheme and an associated <xref:System.Security.Policy.CodeConnectAccess> object. Any <xref:System.Security.Policy.CodeConnectAccess> objects that you add to the <xref:System.Security.Policy.NetCodeGroup> using <xref:System.Security.Policy.NetCodeGroup.AbsentOriginScheme> as the origin scheme are applied when the code's origin scheme is not present in its evidence, or is not a scheme recognized by the <xref:System.Security.Policy.NetCodeGroup> object.","pos":[0,556],"nodes":[{"content":"When calling the <ph id=\"ph1\">&lt;xref:System.Security.Policy.NetCodeGroup.AddConnectAccess%2A&gt;</ph> method, you specify a scheme and an associated <ph id=\"ph2\">&lt;xref:System.Security.Policy.CodeConnectAccess&gt;</ph> object.","pos":[0,182],"source":"When calling the <xref:System.Security.Policy.NetCodeGroup.AddConnectAccess%2A> method, you specify a scheme and an associated <xref:System.Security.Policy.CodeConnectAccess> object."},{"content":"Any <ph id=\"ph1\">&lt;xref:System.Security.Policy.CodeConnectAccess&gt;</ph> objects that you add to the <ph id=\"ph2\">&lt;xref:System.Security.Policy.NetCodeGroup&gt;</ph> using <ph id=\"ph3\">&lt;xref:System.Security.Policy.NetCodeGroup.AbsentOriginScheme&gt;</ph> as the origin scheme are applied when the code's origin scheme is not present in its evidence, or is not a scheme recognized by the <ph id=\"ph4\">&lt;xref:System.Security.Policy.NetCodeGroup&gt;</ph> object.","pos":[183,556],"source":" Any <xref:System.Security.Policy.CodeConnectAccess> objects that you add to the <xref:System.Security.Policy.NetCodeGroup> using <xref:System.Security.Policy.NetCodeGroup.AbsentOriginScheme> as the origin scheme are applied when the code's origin scheme is not present in its evidence, or is not a scheme recognized by the <xref:System.Security.Policy.NetCodeGroup> object."}]}]},{"pos":[563,894],"content":"To specify the <xref:System.Security.Policy.CodeConnectAccess> objects to use when the code's origin scheme does not match any of the schemes contained in the set of origin schemes added to the current <xref:System.Security.Policy.NetCodeGroup> object, use the <xref:System.Security.Policy.NetCodeGroup.AnyOtherOriginScheme> value.","nodes":[{"content":"To specify the <ph id=\"ph1\">&lt;xref:System.Security.Policy.CodeConnectAccess&gt;</ph> objects to use when the code's origin scheme does not match any of the schemes contained in the set of origin schemes added to the current <ph id=\"ph2\">&lt;xref:System.Security.Policy.NetCodeGroup&gt;</ph> object, use the <ph id=\"ph3\">&lt;xref:System.Security.Policy.NetCodeGroup.AnyOtherOriginScheme&gt;</ph> value.","pos":[0,331],"source":"To specify the <xref:System.Security.Policy.CodeConnectAccess> objects to use when the code's origin scheme does not match any of the schemes contained in the set of origin schemes added to the current <xref:System.Security.Policy.NetCodeGroup> object, use the <xref:System.Security.Policy.NetCodeGroup.AnyOtherOriginScheme> value."}]},{"pos":[901,1010],"content":"The value of the <xref:System.Security.Policy.NetCodeGroup.AbsentOriginScheme> field is an empty string (\"\").","nodes":[{"content":"The value of the <ph id=\"ph1\">&lt;xref:System.Security.Policy.NetCodeGroup.AbsentOriginScheme&gt;</ph> field is an empty string (\"\").","pos":[0,109],"source":"The value of the <xref:System.Security.Policy.NetCodeGroup.AbsentOriginScheme> field is an empty string (\"\")."}]}],"pos":[10389,11408],"yaml":true,"extradata":"MT"},{"content":"Adds the specified connection access to the current code group.","nodes":[{"pos":[0,63],"content":"Adds the specified connection access to the current code group.","nodes":[{"content":"Adds the specified connection access to the current code group.","pos":[0,63]}]}],"pos":[12947,13011],"yaml":true},{"content":"You can add multiple <xref:System.Security.Policy.CodeConnectAccess> objects for the same `origin scheme`. If an `origin scheme` already has one or more associated <xref:System.Security.Policy.CodeConnectAccess> objects, specifying `null` for `connectAccess` has no effect. If the origin scheme does not have associated <xref:System.Security.Policy.CodeConnectAccess> objects, specifying `null` for `connectAccess` prevents code with an origin scheme that matches `originScheme` from accessing its origin server.","nodes":[{"pos":[0,512],"content":"You can add multiple <xref:System.Security.Policy.CodeConnectAccess> objects for the same `origin scheme`. If an `origin scheme` already has one or more associated <xref:System.Security.Policy.CodeConnectAccess> objects, specifying `null` for `connectAccess` has no effect. If the origin scheme does not have associated <xref:System.Security.Policy.CodeConnectAccess> objects, specifying `null` for `connectAccess` prevents code with an origin scheme that matches `originScheme` from accessing its origin server.","nodes":[{"content":"You can add multiple <ph id=\"ph1\">&lt;xref:System.Security.Policy.CodeConnectAccess&gt;</ph> objects for the same <ph id=\"ph2\">`origin scheme`</ph>.","pos":[0,106],"source":"You can add multiple <xref:System.Security.Policy.CodeConnectAccess> objects for the same `origin scheme`."},{"content":"If an <ph id=\"ph1\">`origin scheme`</ph> already has one or more associated <ph id=\"ph2\">&lt;xref:System.Security.Policy.CodeConnectAccess&gt;</ph> objects, specifying <ph id=\"ph3\">`null`</ph> for <ph id=\"ph4\">`connectAccess`</ph> has no effect.","pos":[107,273],"source":" If an `origin scheme` already has one or more associated <xref:System.Security.Policy.CodeConnectAccess> objects, specifying `null` for `connectAccess` has no effect."},{"content":"If the origin scheme does not have associated <ph id=\"ph1\">&lt;xref:System.Security.Policy.CodeConnectAccess&gt;</ph> objects, specifying <ph id=\"ph2\">`null`</ph> for <ph id=\"ph3\">`connectAccess`</ph> prevents code with an origin scheme that matches <ph id=\"ph4\">`originScheme`</ph> from accessing its origin server.","pos":[274,512],"source":" If the origin scheme does not have associated <xref:System.Security.Policy.CodeConnectAccess> objects, specifying `null` for `connectAccess` prevents code with an origin scheme that matches `originScheme` from accessing its origin server."}]}],"pos":[13022,13535],"yaml":true,"extradata":"MT"},{"content":"A <xref href=\"System.String\"></xref> containing the scheme to match against the code's scheme.","nodes":[{"pos":[0,94],"content":"A <ph id=\"ph1\">&lt;xref href=\"System.String\"&gt;&lt;/xref&gt;</ph> containing the scheme to match against the code's scheme.","source":"A <xref href=\"System.String\"></xref> containing the scheme to match against the code's scheme."}],"pos":[14152,14247],"yaml":true},{"content":"A <xref href=\"System.Security.Policy.CodeConnectAccess\"></xref> that specifies the scheme and port code can use to connect back to its origin server.","nodes":[{"pos":[0,149],"content":"A <ph id=\"ph1\">&lt;xref href=\"System.Security.Policy.CodeConnectAccess\"&gt;&lt;/xref&gt;</ph> that specifies the scheme and port code can use to connect back to its origin server.","source":"A <xref href=\"System.Security.Policy.CodeConnectAccess\"></xref> that specifies the scheme and port code can use to connect back to its origin server."}],"pos":[14343,14493],"yaml":true},{"content":"<code>originScheme</code> is `null`.","nodes":[{"pos":[0,36],"content":"<ph id=\"ph1\">&lt;code&gt;originScheme&lt;/code&gt;</ph> is <ph id=\"ph2\">`null`</ph>.","source":"<code>originScheme</code> is `null`."}],"pos":[14675,14712],"yaml":true},{"content":"<code>originScheme</code> contains characters that are not permitted in schemes.  \n  \n -or-  \n  \n <code>originScheme</code> = <xref href=\"System.Security.Policy.NetCodeGroup.AbsentOriginScheme\"></xref> and <code>connectAccess</code> specifies <xref href=\"System.Security.Policy.CodeConnectAccess.OriginScheme\"></xref> as its scheme.","nodes":[{"pos":[0,80],"content":"<ph id=\"ph1\">&lt;code&gt;originScheme&lt;/code&gt;</ph> contains characters that are not permitted in schemes.","source":"<code>originScheme</code> contains characters that are not permitted in schemes."},{"pos":[87,91],"content":"-or-","nodes":[{"content":"-or-","pos":[0,4]}]},{"pos":[98,332],"content":"<ph id=\"ph1\">&lt;code&gt;originScheme&lt;/code&gt;</ph><ph id=\"ph2\"> = </ph><ph id=\"ph3\">&lt;xref href=\"System.Security.Policy.NetCodeGroup.AbsentOriginScheme\"&gt;&lt;/xref&gt;</ph> and <ph id=\"ph4\">&lt;code&gt;connectAccess&lt;/code&gt;</ph> specifies <ph id=\"ph5\">&lt;xref href=\"System.Security.Policy.CodeConnectAccess.OriginScheme\"&gt;&lt;/xref&gt;</ph> as its scheme.","source":"<code>originScheme</code> = <xref href=\"System.Security.Policy.NetCodeGroup.AbsentOriginScheme\"></xref> and <code>connectAccess</code> specifies <xref href=\"System.Security.Policy.CodeConnectAccess.OriginScheme\"></xref> as its scheme."}],"pos":[14826,15169],"yaml":true},{"content":"Contains a value used to specify any other unspecified origin scheme.","nodes":[{"pos":[0,69],"content":"Contains a value used to specify any other unspecified origin scheme.","nodes":[{"content":"Contains a value used to specify any other unspecified origin scheme.","pos":[0,69]}]}],"pos":[16332,16402],"yaml":true},{"content":"When calling the <xref:System.Security.Policy.NetCodeGroup.AddConnectAccess%2A> method, you specify a scheme and an associated <xref:System.Security.Policy.CodeConnectAccess> object. You can use the value of the <xref:System.Security.Policy.NetCodeGroup.AnyOtherOriginScheme> field to specify the <xref:System.Security.Policy.CodeConnectAccess> objects that should be used for any scheme that is not explicitly contained in the set of origin schemes added to the current <xref:System.Security.Policy.NetCodeGroup> object.  \n  \n The <xref:System.Security.Policy.CodeConnectAccess> objects specified with the <xref:System.Security.Policy.NetCodeGroup.AnyOtherOriginScheme> field are only used if the code's origin scheme does not match any of the schemes contained in the set of origin schemes added to the current <xref:System.Security.Policy.NetCodeGroup> object.  \n  \n To specify the <xref:System.Security.Policy.CodeConnectAccess> objects to apply when the code's origin scheme is not available in its evidence or is not recognized, use the <xref:System.Security.Policy.NetCodeGroup.AbsentOriginScheme> value.  \n  \n The value of the <xref:System.Security.Policy.NetCodeGroup.AnyOtherOriginScheme> field is \"*\".","nodes":[{"pos":[0,521],"content":"When calling the <xref:System.Security.Policy.NetCodeGroup.AddConnectAccess%2A> method, you specify a scheme and an associated <xref:System.Security.Policy.CodeConnectAccess> object. You can use the value of the <xref:System.Security.Policy.NetCodeGroup.AnyOtherOriginScheme> field to specify the <xref:System.Security.Policy.CodeConnectAccess> objects that should be used for any scheme that is not explicitly contained in the set of origin schemes added to the current <xref:System.Security.Policy.NetCodeGroup> object.","nodes":[{"content":"When calling the <xref:System.Security.Policy.NetCodeGroup.AddConnectAccess%2A> method, you specify a scheme and an associated <xref:System.Security.Policy.CodeConnectAccess> object. You can use the value of the <xref:System.Security.Policy.NetCodeGroup.AnyOtherOriginScheme> field to specify the <xref:System.Security.Policy.CodeConnectAccess> objects that should be used for any scheme that is not explicitly contained in the set of origin schemes added to the current <xref:System.Security.Policy.NetCodeGroup> object.","pos":[0,521],"nodes":[{"content":"When calling the <ph id=\"ph1\">&lt;xref:System.Security.Policy.NetCodeGroup.AddConnectAccess%2A&gt;</ph> method, you specify a scheme and an associated <ph id=\"ph2\">&lt;xref:System.Security.Policy.CodeConnectAccess&gt;</ph> object.","pos":[0,182],"source":"When calling the <xref:System.Security.Policy.NetCodeGroup.AddConnectAccess%2A> method, you specify a scheme and an associated <xref:System.Security.Policy.CodeConnectAccess> object."},{"content":"You can use the value of the <ph id=\"ph1\">&lt;xref:System.Security.Policy.NetCodeGroup.AnyOtherOriginScheme&gt;</ph> field to specify the <ph id=\"ph2\">&lt;xref:System.Security.Policy.CodeConnectAccess&gt;</ph> objects that should be used for any scheme that is not explicitly contained in the set of origin schemes added to the current <ph id=\"ph3\">&lt;xref:System.Security.Policy.NetCodeGroup&gt;</ph> object.","pos":[183,521],"source":" You can use the value of the <xref:System.Security.Policy.NetCodeGroup.AnyOtherOriginScheme> field to specify the <xref:System.Security.Policy.CodeConnectAccess> objects that should be used for any scheme that is not explicitly contained in the set of origin schemes added to the current <xref:System.Security.Policy.NetCodeGroup> object."}]}]},{"pos":[528,863],"content":"The <xref:System.Security.Policy.CodeConnectAccess> objects specified with the <xref:System.Security.Policy.NetCodeGroup.AnyOtherOriginScheme> field are only used if the code's origin scheme does not match any of the schemes contained in the set of origin schemes added to the current <xref:System.Security.Policy.NetCodeGroup> object.","nodes":[{"content":"The <ph id=\"ph1\">&lt;xref:System.Security.Policy.CodeConnectAccess&gt;</ph> objects specified with the <ph id=\"ph2\">&lt;xref:System.Security.Policy.NetCodeGroup.AnyOtherOriginScheme&gt;</ph> field are only used if the code's origin scheme does not match any of the schemes contained in the set of origin schemes added to the current <ph id=\"ph3\">&lt;xref:System.Security.Policy.NetCodeGroup&gt;</ph> object.","pos":[0,335],"source":"The <xref:System.Security.Policy.CodeConnectAccess> objects specified with the <xref:System.Security.Policy.NetCodeGroup.AnyOtherOriginScheme> field are only used if the code's origin scheme does not match any of the schemes contained in the set of origin schemes added to the current <xref:System.Security.Policy.NetCodeGroup> object."}]},{"pos":[870,1111],"content":"To specify the <xref:System.Security.Policy.CodeConnectAccess> objects to apply when the code's origin scheme is not available in its evidence or is not recognized, use the <xref:System.Security.Policy.NetCodeGroup.AbsentOriginScheme> value.","nodes":[{"content":"To specify the <ph id=\"ph1\">&lt;xref:System.Security.Policy.CodeConnectAccess&gt;</ph> objects to apply when the code's origin scheme is not available in its evidence or is not recognized, use the <ph id=\"ph2\">&lt;xref:System.Security.Policy.NetCodeGroup.AbsentOriginScheme&gt;</ph> value.","pos":[0,241],"source":"To specify the <xref:System.Security.Policy.CodeConnectAccess> objects to apply when the code's origin scheme is not available in its evidence or is not recognized, use the <xref:System.Security.Policy.NetCodeGroup.AbsentOriginScheme> value."}]},{"pos":[1118,1212],"content":"The value of the <xref:System.Security.Policy.NetCodeGroup.AnyOtherOriginScheme> field is \"*\".","nodes":[{"content":"The value of the <ph id=\"ph1\">&lt;xref:System.Security.Policy.NetCodeGroup.AnyOtherOriginScheme&gt;</ph> field is \"*\".","pos":[0,94],"source":"The value of the <xref:System.Security.Policy.NetCodeGroup.AnyOtherOriginScheme> field is \"*\"."}]}],"pos":[16413,17636],"yaml":true,"extradata":"MT"},{"content":"Gets a string representation of the attributes of the policy statement for the code group.","nodes":[{"pos":[0,90],"content":"Gets a string representation of the attributes of the policy statement for the code group.","nodes":[{"content":"Gets a string representation of the attributes of the policy statement for the code group.","pos":[0,90]}]}],"pos":[18924,19015],"yaml":true},{"content":"Always `null`.","nodes":[{"pos":[0,14],"content":"Always <ph id=\"ph1\">`null`</ph>.","source":"Always `null`."}],"pos":[19143,19158],"yaml":true},{"content":"Makes a deep copy of the current code group.","nodes":[{"pos":[0,44],"content":"Makes a deep copy of the current code group.","nodes":[{"content":"Makes a deep copy of the current code group.","pos":[0,44]}]}],"pos":[20314,20359],"yaml":true},{"content":"This method makes a deep copy of the code group, meaning that copies of all objects the code group contains are also made.","nodes":[{"pos":[0,122],"content":"This method makes a deep copy of the code group, meaning that copies of all objects the code group contains are also made.","nodes":[{"content":"This method makes a deep copy of the code group, meaning that copies of all objects the code group contains are also made.","pos":[0,122]}]}],"pos":[20370,20493],"yaml":true,"extradata":"MT"},{"content":"An equivalent copy of the current code group, including its membership conditions and child code groups.","nodes":[{"pos":[0,104],"content":"An equivalent copy of the current code group, including its membership conditions and child code groups.","nodes":[{"content":"An equivalent copy of the current code group, including its membership conditions and child code groups.","pos":[0,104]}]}],"pos":[20669,20774],"yaml":true},{"content":"Determines whether the specified code group is equivalent to the current code group.","nodes":[{"pos":[0,84],"content":"Determines whether the specified code group is equivalent to the current code group.","nodes":[{"content":"Determines whether the specified code group is equivalent to the current code group.","pos":[0,84]}]}],"pos":[23684,23769],"yaml":true},{"content":"The following data are used to determine the equality of two <xref:System.Security.Policy.NetCodeGroup> objects:  \n  \n-   The <xref:System.Security.Policy.CodeGroup.Name%2A> and <xref:System.Security.Policy.CodeGroup.Description%2A> properties.  \n  \n-   The <xref:System.Security.Policy.CodeGroup.MembershipCondition%2A> property.  \n  \n-   The set of origin schemes and the associated <xref:System.Security.Policy.CodeConnectAccess> objects.","nodes":[{"pos":[0,112],"content":"The following data are used to determine the equality of two <xref:System.Security.Policy.NetCodeGroup> objects:","nodes":[{"content":"The following data are used to determine the equality of two <ph id=\"ph1\">&lt;xref:System.Security.Policy.NetCodeGroup&gt;</ph> objects:","pos":[0,112],"source":"The following data are used to determine the equality of two <xref:System.Security.Policy.NetCodeGroup> objects:"}]},{"pos":[122,244],"content":"The <xref:System.Security.Policy.CodeGroup.Name%2A> and <xref:System.Security.Policy.CodeGroup.Description%2A> properties.","nodes":[{"content":"The <ph id=\"ph1\">&lt;xref:System.Security.Policy.CodeGroup.Name%2A&gt;</ph> and <ph id=\"ph2\">&lt;xref:System.Security.Policy.CodeGroup.Description%2A&gt;</ph> properties.","pos":[0,122],"source":"The <xref:System.Security.Policy.CodeGroup.Name%2A> and <xref:System.Security.Policy.CodeGroup.Description%2A> properties."}]},{"pos":[254,330],"content":"The <xref:System.Security.Policy.CodeGroup.MembershipCondition%2A> property.","nodes":[{"content":"The <ph id=\"ph1\">&lt;xref:System.Security.Policy.CodeGroup.MembershipCondition%2A&gt;</ph> property.","pos":[0,76],"source":"The <xref:System.Security.Policy.CodeGroup.MembershipCondition%2A> property."}]},{"pos":[340,441],"content":"The set of origin schemes and the associated <xref:System.Security.Policy.CodeConnectAccess> objects.","nodes":[{"content":"The set of origin schemes and the associated <ph id=\"ph1\">&lt;xref:System.Security.Policy.CodeConnectAccess&gt;</ph> objects.","pos":[0,101],"source":"The set of origin schemes and the associated <xref:System.Security.Policy.CodeConnectAccess> objects."}]}],"pos":[23780,24230],"yaml":true,"extradata":"MT"},{"content":"The <xref href=\"System.Security.Policy.NetCodeGroup\"></xref> object to compare with the current code group.","nodes":[{"pos":[0,107],"content":"The <ph id=\"ph1\">&lt;xref href=\"System.Security.Policy.NetCodeGroup\"&gt;&lt;/xref&gt;</ph> object to compare with the current code group.","source":"The <xref href=\"System.Security.Policy.NetCodeGroup\"></xref> object to compare with the current code group."}],"pos":[24366,24474],"yaml":true},{"content":"`true` if the specified code group is equivalent to the current code group; otherwise, `false`.","nodes":[{"pos":[0,95],"content":"<ph id=\"ph1\">`true`</ph> if the specified code group is equivalent to the current code group; otherwise, <ph id=\"ph2\">`false`</ph>.","source":"`true` if the specified code group is equivalent to the current code group; otherwise, `false`."}],"pos":[24532,24630],"yaml":true},{"content":"Gets the connection access information for the current code group.","nodes":[{"pos":[0,66],"content":"Gets the connection access information for the current code group.","nodes":[{"content":"Gets the connection access information for the current code group.","pos":[0,66]}]}],"pos":[25879,25946],"yaml":true},{"content":"In each dictionary entry, the <xref:System.Collections.DictionaryEntry.Key%2A> property value is the origin scheme, and the <xref:System.Collections.DictionaryEntry.Value%2A> property value is the array of associated <xref:System.Security.Policy.CodeConnectAccess> objects. If there are no associated <xref:System.Security.Policy.CodeConnectAccess> objects, <xref:System.Collections.DictionaryEntry.Value%2A?displayProperty=fullName> returns an empty array.","nodes":[{"pos":[0,457],"content":"In each dictionary entry, the <xref:System.Collections.DictionaryEntry.Key%2A> property value is the origin scheme, and the <xref:System.Collections.DictionaryEntry.Value%2A> property value is the array of associated <xref:System.Security.Policy.CodeConnectAccess> objects. If there are no associated <xref:System.Security.Policy.CodeConnectAccess> objects, <xref:System.Collections.DictionaryEntry.Value%2A?displayProperty=fullName> returns an empty array.","nodes":[{"content":"In each dictionary entry, the <xref:System.Collections.DictionaryEntry.Key%2A> property value is the origin scheme, and the <xref:System.Collections.DictionaryEntry.Value%2A> property value is the array of associated <xref:System.Security.Policy.CodeConnectAccess> objects. If there are no associated <xref:System.Security.Policy.CodeConnectAccess> objects, <xref:System.Collections.DictionaryEntry.Value%2A?displayProperty=fullName> returns an empty array.","pos":[0,457],"nodes":[{"content":"In each dictionary entry, the <ph id=\"ph1\">&lt;xref:System.Collections.DictionaryEntry.Key%2A&gt;</ph> property value is the origin scheme, and the <ph id=\"ph2\">&lt;xref:System.Collections.DictionaryEntry.Value%2A&gt;</ph> property value is the array of associated <ph id=\"ph3\">&lt;xref:System.Security.Policy.CodeConnectAccess&gt;</ph> objects.","pos":[0,273],"source":"In each dictionary entry, the <xref:System.Collections.DictionaryEntry.Key%2A> property value is the origin scheme, and the <xref:System.Collections.DictionaryEntry.Value%2A> property value is the array of associated <xref:System.Security.Policy.CodeConnectAccess> objects."},{"content":"If there are no associated <ph id=\"ph1\">&lt;xref:System.Security.Policy.CodeConnectAccess&gt;</ph> objects, <ph id=\"ph2\">&lt;xref:System.Collections.DictionaryEntry.Value%2A?displayProperty=fullName&gt;</ph> returns an empty array.","pos":[274,457],"source":" If there are no associated <xref:System.Security.Policy.CodeConnectAccess> objects, <xref:System.Collections.DictionaryEntry.Value%2A?displayProperty=fullName> returns an empty array."}]}]}],"pos":[25957,26415],"yaml":true,"extradata":"MT"},{"content":"A <xref href=\"System.Collections.DictionaryEntry\"></xref> array containing connection access information.","nodes":[{"pos":[0,105],"content":"A <ph id=\"ph1\">&lt;xref href=\"System.Collections.DictionaryEntry\"&gt;&lt;/xref&gt;</ph> array containing connection access information.","source":"A <xref href=\"System.Collections.DictionaryEntry\"></xref> array containing connection access information."}],"pos":[26980,27086],"yaml":true},{"content":"Gets the hash code of the current code group.","nodes":[{"pos":[0,45],"content":"Gets the hash code of the current code group.","nodes":[{"content":"Gets the hash code of the current code group.","pos":[0,45]}]}],"pos":[28290,28336],"yaml":true},{"content":"The hash code of the current code group.","nodes":[{"pos":[0,40],"content":"The hash code of the current code group.","nodes":[{"content":"The hash code of the current code group.","pos":[0,40]}]}],"pos":[28470,28511],"yaml":true},{"content":"Gets the logic to use for merging groups.","nodes":[{"pos":[0,41],"content":"Gets the logic to use for merging groups.","nodes":[{"content":"Gets the logic to use for merging groups.","pos":[0,41]}]}],"pos":[29695,29737],"yaml":true},{"content":"The string \"Union\".","nodes":[{"pos":[0,19],"content":"The string \"Union\".","nodes":[{"content":"The string \"Union\".","pos":[0,19]}]}],"pos":[29860,29880],"yaml":true},{"content":"Gets the name of the <xref href=\"System.Security.NamedPermissionSet\"></xref> for the code group.","nodes":[{"pos":[0,96],"content":"Gets the name of the <ph id=\"ph1\">&lt;xref href=\"System.Security.NamedPermissionSet\"&gt;&lt;/xref&gt;</ph> for the code group.","source":"Gets the name of the <xref href=\"System.Security.NamedPermissionSet\"></xref> for the code group."}],"pos":[32775,32872],"yaml":true},{"content":"Always the string \"Same site Web.\"","nodes":[{"pos":[0,34],"content":"Always the string \"Same site Web.\"","nodes":[{"content":"Always the string \"Same site Web.\"","pos":[0,34]}]}],"pos":[33002,33037],"yaml":true},{"content":"Removes all connection access information for the current code group.","nodes":[{"pos":[0,69],"content":"Removes all connection access information for the current code group.","nodes":[{"content":"Removes all connection access information for the current code group.","pos":[0,69]}]}],"pos":[34279,34349],"yaml":true},{"content":"Use this method to remove the system-supplied default connection access rules.  \n  \n The default rules are shown in the following table.  \n  \n|Scheme|Rule|  \n|------------|----------|  \n|file|No connection access to the origin server is permitted.|  \n|http|HTTP and HTTPS access is permitted using the origin port.|  \n|https|HTTPS access is permitted using the origin port.|","nodes":[{"pos":[0,78],"content":"Use this method to remove the system-supplied default connection access rules.","nodes":[{"content":"Use this method to remove the system-supplied default connection access rules.","pos":[0,78]}]},{"pos":[85,136],"content":"The default rules are shown in the following table.","nodes":[{"content":"The default rules are shown in the following table.","pos":[0,51]}]},{"pos":[143,149],"content":"Scheme","nodes":[{"content":"Scheme","pos":[0,6]}]},{"pos":[150,154],"content":"Rule","nodes":[{"content":"Rule","pos":[0,4]}]},{"pos":[187,191],"content":"file","nodes":[{"content":"file","pos":[0,4]}]},{"pos":[192,247],"content":"No connection access to the origin server is permitted.","nodes":[{"content":"No connection access to the origin server is permitted.","pos":[0,55]}]},{"pos":[252,256],"content":"http","nodes":[{"content":"http","pos":[0,4]}]},{"pos":[257,314],"content":"HTTP and HTTPS access is permitted using the origin port.","nodes":[{"content":"HTTP and HTTPS access is permitted using the origin port.","pos":[0,57]}]},{"pos":[319,324],"content":"https","nodes":[{"content":"https","pos":[0,5]}]},{"pos":[325,373],"content":"HTTPS access is permitted using the origin port.","nodes":[{"content":"HTTPS access is permitted using the origin port.","pos":[0,48]}]}],"pos":[34360,34745],"yaml":true,"extradata":"MT"},{"content":"Resolves policy for the code group and its descendants for a set of evidence.","nodes":[{"pos":[0,77],"content":"Resolves policy for the code group and its descendants for a set of evidence.","nodes":[{"content":"Resolves policy for the code group and its descendants for a set of evidence.","pos":[0,77]}]}],"pos":[36471,36549],"yaml":true},{"content":"Given evidence for an assembly to be loaded, this method evaluates the code group by first checking the membership condition against the specified evidence. If there is a match, this method returns a policy statement for the code group, including evaluation of child code groups.  \n  \n The operation of this method is as follows:  \n  \n If the membership condition does not match the specified evidence, return `null`; otherwise, set the permission set to be returned (P) equal to the code group's policy statement and continue. For each child code group, resolve the code group with the same evidence; if the result is not `null`, return that policy statement. If no child code group matched, return P (the parent's policy statement).","nodes":[{"pos":[0,279],"content":"Given evidence for an assembly to be loaded, this method evaluates the code group by first checking the membership condition against the specified evidence. If there is a match, this method returns a policy statement for the code group, including evaluation of child code groups.","nodes":[{"content":"Given evidence for an assembly to be loaded, this method evaluates the code group by first checking the membership condition against the specified evidence. If there is a match, this method returns a policy statement for the code group, including evaluation of child code groups.","pos":[0,279],"nodes":[{"content":"Given evidence for an assembly to be loaded, this method evaluates the code group by first checking the membership condition against the specified evidence.","pos":[0,156]},{"content":"If there is a match, this method returns a policy statement for the code group, including evaluation of child code groups.","pos":[157,279]}]}]},{"pos":[286,329],"content":"The operation of this method is as follows:","nodes":[{"content":"The operation of this method is as follows:","pos":[0,43]}]},{"pos":[336,734],"content":"If the membership condition does not match the specified evidence, return `null`; otherwise, set the permission set to be returned (P) equal to the code group's policy statement and continue. For each child code group, resolve the code group with the same evidence; if the result is not `null`, return that policy statement. If no child code group matched, return P (the parent's policy statement).","nodes":[{"content":"If the membership condition does not match the specified evidence, return <ph id=\"ph1\">`null`</ph>; otherwise, set the permission set to be returned (P) equal to the code group's policy statement and continue.","pos":[0,191],"source":"If the membership condition does not match the specified evidence, return `null`; otherwise, set the permission set to be returned (P) equal to the code group's policy statement and continue."},{"content":"For each child code group, resolve the code group with the same evidence; if the result is not <ph id=\"ph1\">`null`</ph>, return that policy statement.","pos":[192,324],"source":" For each child code group, resolve the code group with the same evidence; if the result is not `null`, return that policy statement."},{"content":"If no child code group matched, return P (the parent's policy statement).","pos":[325,398]}]}],"pos":[36560,37301],"yaml":true,"extradata":"MT"},{"content":"The <xref href=\"System.Security.Policy.Evidence\"></xref> for the assembly.","nodes":[{"pos":[0,74],"content":"The <ph id=\"ph1\">&lt;xref href=\"System.Security.Policy.Evidence\"&gt;&lt;/xref&gt;</ph> for the assembly.","source":"The <xref href=\"System.Security.Policy.Evidence\"></xref> for the assembly."}],"pos":[37529,37604],"yaml":true},{"content":"A <xref href=\"System.Security.Policy.PolicyStatement\"></xref> that consists of the permissions granted by the code group with optional attributes, or `null` if the code group does not apply (the membership condition does not match the specified evidence).","nodes":[{"pos":[0,255],"content":"A <ph id=\"ph1\">&lt;xref href=\"System.Security.Policy.PolicyStatement\"&gt;&lt;/xref&gt;</ph> that consists of the permissions granted by the code group with optional attributes, or <ph id=\"ph2\">`null`</ph> if the code group does not apply (the membership condition does not match the specified evidence).","source":"A <xref href=\"System.Security.Policy.PolicyStatement\"></xref> that consists of the permissions granted by the code group with optional attributes, or `null` if the code group does not apply (the membership condition does not match the specified evidence)."}],"pos":[37686,37942],"yaml":true},{"content":"The <code>evidence</code> parameter is `null`.","nodes":[{"pos":[0,46],"content":"The <bpt id=\"p1\">&lt;code&gt;</bpt><ph id=\"ph1\">evidence</ph><ept id=\"p1\">&lt;/code&gt;</ept> parameter is <ph id=\"ph2\">`null`</ph>.","source":"The <code>evidence</code> parameter is `null`."}],"pos":[38115,38162],"yaml":true},{"content":"More than one code group (including the parent code group and any child code groups) is marked <xref href=\"System.Security.Policy.PolicyStatementAttribute.Exclusive\"></xref>.","nodes":[{"pos":[0,174],"content":"More than one code group (including the parent code group and any child code groups) is marked <ph id=\"ph1\">&lt;xref href=\"System.Security.Policy.PolicyStatementAttribute.Exclusive\"&gt;&lt;/xref&gt;</ph>.","source":"More than one code group (including the parent code group and any child code groups) is marked <xref href=\"System.Security.Policy.PolicyStatementAttribute.Exclusive\"></xref>."}],"pos":[38284,38459],"yaml":true},{"content":"Resolves matching code groups.","nodes":[{"pos":[0,30],"content":"Resolves matching code groups.","nodes":[{"content":"Resolves matching code groups.","pos":[0,30]}]}],"pos":[39782,39813],"yaml":true},{"content":"Given evidence for an assembly to be loaded, this method evaluates the code group by first checking the membership condition against the specified evidence. If there is a match, this method returns a root code group. The code group that is returned may contain child code groups, which, in turn, may also have child code groups, so the return value reflects the complete set of code groups that were matched by the evidence provided.","nodes":[{"pos":[0,433],"content":"Given evidence for an assembly to be loaded, this method evaluates the code group by first checking the membership condition against the specified evidence. If there is a match, this method returns a root code group. The code group that is returned may contain child code groups, which, in turn, may also have child code groups, so the return value reflects the complete set of code groups that were matched by the evidence provided.","nodes":[{"content":"Given evidence for an assembly to be loaded, this method evaluates the code group by first checking the membership condition against the specified evidence. If there is a match, this method returns a root code group. The code group that is returned may contain child code groups, which, in turn, may also have child code groups, so the return value reflects the complete set of code groups that were matched by the evidence provided.","pos":[0,433],"nodes":[{"content":"Given evidence for an assembly to be loaded, this method evaluates the code group by first checking the membership condition against the specified evidence.","pos":[0,156]},{"content":"If there is a match, this method returns a root code group.","pos":[157,216]},{"content":"The code group that is returned may contain child code groups, which, in turn, may also have child code groups, so the return value reflects the complete set of code groups that were matched by the evidence provided.","pos":[217,433]}]}]}],"pos":[39824,40258],"yaml":true,"extradata":"MT"},{"content":"The evidence for the assembly.","nodes":[{"pos":[0,30],"content":"The evidence for the assembly.","nodes":[{"content":"The evidence for the assembly.","pos":[0,30]}]}],"pos":[40498,40529],"yaml":true},{"content":"The complete set of code groups that were matched by the evidence.","nodes":[{"pos":[0,66],"content":"The complete set of code groups that were matched by the evidence.","nodes":[{"content":"The complete set of code groups that were matched by the evidence.","pos":[0,66]}]}],"pos":[40605,40672],"yaml":true},{"content":"The <code>evidence</code> parameter is `null`.","nodes":[{"pos":[0,46],"content":"The <bpt id=\"p1\">&lt;code&gt;</bpt><ph id=\"ph1\">evidence</ph><ept id=\"p1\">&lt;/code&gt;</ept> parameter is <ph id=\"ph2\">`null`</ph>.","source":"The <code>evidence</code> parameter is `null`."}],"pos":[40863,40910],"yaml":true}],"content":"### YamlMime:ManagedReference\nitems:\n- uid: System.Security.Policy.NetCodeGroup\n  commentId: T:System.Security.Policy.NetCodeGroup\n  id: NetCodeGroup\n  children:\n  - System.Security.Policy.NetCodeGroup.#ctor(System.Security.Policy.IMembershipCondition)\n  - System.Security.Policy.NetCodeGroup.AbsentOriginScheme\n  - System.Security.Policy.NetCodeGroup.AddConnectAccess(System.String,System.Security.Policy.CodeConnectAccess)\n  - System.Security.Policy.NetCodeGroup.AnyOtherOriginScheme\n  - System.Security.Policy.NetCodeGroup.AttributeString\n  - System.Security.Policy.NetCodeGroup.Copy\n  - System.Security.Policy.NetCodeGroup.CreateXml(System.Security.SecurityElement,System.Security.Policy.PolicyLevel)\n  - System.Security.Policy.NetCodeGroup.Equals(System.Object)\n  - System.Security.Policy.NetCodeGroup.GetConnectAccessRules\n  - System.Security.Policy.NetCodeGroup.GetHashCode\n  - System.Security.Policy.NetCodeGroup.MergeLogic\n  - System.Security.Policy.NetCodeGroup.ParseXml(System.Security.SecurityElement,System.Security.Policy.PolicyLevel)\n  - System.Security.Policy.NetCodeGroup.PermissionSetName\n  - System.Security.Policy.NetCodeGroup.ResetConnectAccess\n  - System.Security.Policy.NetCodeGroup.Resolve(System.Security.Policy.Evidence)\n  - System.Security.Policy.NetCodeGroup.ResolveMatchingCodeGroups(System.Security.Policy.Evidence)\n  langs:\n  - csharp\n  name: NetCodeGroup\n  nameWithType: NetCodeGroup\n  fullName: System.Security.Policy.NetCodeGroup\n  type: Class\n  assemblies:\n  - mscorlib\n  - System.Security.Permissions\n  namespace: System.Security.Policy\n  summary: Grants Web permission to the site from which the assembly was downloaded. This class cannot be inherited.\n  remarks: \"Code groups are the building blocks of code access security policy. Each policy level consists of a root code group that can have one or more child code groups. Each child code group can have its own child code groups; this behavior extends to any number of levels, forming a tree. Each code group has a membership condition that determines if a given assembly belongs to the group, based on the evidence for that assembly. Only code groups whose membership conditions match a given assembly, along with their child code groups, apply code access security policy.  \\n  \\n <xref:System.Security.Policy.NetCodeGroup> has the same merge semantics as that of <xref:System.Security.Policy.UnionCodeGroup>; it forms the union of the <xref:System.Security.Policy.PolicyStatement> objects of all matching child code groups and the <xref:System.Security.Policy.PolicyStatement> it generates from the input <xref:System.Security.Policy.Url> evidence. However, <xref:System.Security.Policy.NetCodeGroup> returns a permission containing a dynamically calculated <xref:System.Net.WebPermission> that grants connect access to the site from which the code is run; <xref:System.Security.Policy.UnionCodeGroup> simply returns a static permission set.  \\n  \\n When a <xref:System.Security.Policy.NetCodeGroup> is created, it contains the default connection access rules shown in the following table.  \\n  \\n|URI Scheme|Rule|  \\n|----------------|----------|  \\n|file|No connection access to the origin server is permitted.|  \\n|http|HTTP and HTTPS access is permitted using the origin port.|  \\n|https|HTTPS access is permitted using the origin port.|  \\n  \\n You can control the scheme and port that code is permitted to use when connecting back to its site of origin by passing a <xref:System.Security.Policy.CodeConnectAccess> object with the appropriate <xref:System.Security.Policy.CodeConnectAccess.Scheme%2A> and <xref:System.Security.Policy.CodeConnectAccess.Port%2A> property values to the <xref:System.Security.Policy.NetCodeGroup.AddConnectAccess%2A> method. You can create a connection access rule that applies when the origin scheme is not present in the evidence or is not recognized by specifying <xref:System.Security.Policy.NetCodeGroup.AbsentOriginScheme> (\\\"\\\") as the scheme. You can also create a connection access rule that applies when there is no connection access rule with a matching scheme by specifying <xref:System.Security.Policy.NetCodeGroup.AnyOtherOriginScheme> (\\\"*\\\") as the scheme.  \\n  \\n> [!NOTE]\\n>  If code does not submit the URI scheme as evidence, access is permitted using any scheme back to the origin site.\"\n  example:\n  - \"The following code example demonstrates creating a <xref:System.Security.Policy.NetCodeGroup> and adding <xref:System.Security.Policy.CodeConnectAccess> objects for code downloaded using the HTTP scheme.  \\n  \\n [!code-cpp[NclCodeGroup#3](~/samples/snippets/cpp/VS_Snippets_Remoting/NclCodeGroup/cpp/sample.cpp#3)]\\n [!code-csharp[NclCodeGroup#3](~/samples/snippets/csharp/VS_Snippets_Remoting/NclCodeGroup/CS/sample.cs#3)]\"\n  syntax:\n    content: >-\n      [System.Runtime.InteropServices.ComVisible(true)]\n\n      public sealed class NetCodeGroup : System.Security.Policy.CodeGroup\n  inheritance:\n  - System.Object\n  - System.Security.Policy.CodeGroup\n  implements: []\n  inheritedMembers:\n  - System.Object.Equals(System.Object,System.Object)\n  - System.Object.GetType\n  - System.Object.MemberwiseClone\n  - System.Object.ReferenceEquals(System.Object,System.Object)\n  - System.Object.ToString\n  - System.Security.Policy.CodeGroup.AddChild(System.Security.Policy.CodeGroup)\n  - System.Security.Policy.CodeGroup.Children\n  - System.Security.Policy.CodeGroup.Description\n  - System.Security.Policy.CodeGroup.Equals(System.Security.Policy.CodeGroup,System.Boolean)\n  - System.Security.Policy.CodeGroup.FromXml(System.Security.SecurityElement)\n  - System.Security.Policy.CodeGroup.FromXml(System.Security.SecurityElement,System.Security.Policy.PolicyLevel)\n  - System.Security.Policy.CodeGroup.MembershipCondition\n  - System.Security.Policy.CodeGroup.Name\n  - System.Security.Policy.CodeGroup.PolicyStatement\n  - System.Security.Policy.CodeGroup.RemoveChild(System.Security.Policy.CodeGroup)\n  - System.Security.Policy.CodeGroup.ToXml\n  - System.Security.Policy.CodeGroup.ToXml(System.Security.Policy.PolicyLevel)\n  attributes:\n  - type: System.Runtime.InteropServices.ComVisibleAttribute\n  version:\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  monikers:\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Security.Policy/NetCodeGroup.xml\n  ms.technology:\n  - dotnet-standard\n  author: mairaw\n  ms.author: mairaw\n  manager: wpickett\n- uid: System.Security.Policy.NetCodeGroup.#ctor(System.Security.Policy.IMembershipCondition)\n  commentId: M:System.Security.Policy.NetCodeGroup.#ctor(System.Security.Policy.IMembershipCondition)\n  id: '#ctor(System.Security.Policy.IMembershipCondition)'\n  parent: System.Security.Policy.NetCodeGroup\n  langs:\n  - csharp\n  name: NetCodeGroup(IMembershipCondition)\n  nameWithType: NetCodeGroup.NetCodeGroup(IMembershipCondition)\n  fullName: NetCodeGroup.NetCodeGroup(IMembershipCondition)\n  type: Constructor\n  assemblies:\n  - mscorlib\n  - System.Security.Permissions\n  namespace: System.Security.Policy\n  summary: Initializes a new instance of the <xref href=\"System.Security.Policy.NetCodeGroup\"></xref> class.\n  remarks: \"When a <xref:System.Security.Policy.NetCodeGroup> is created, it contains the default connection access rules shown in the following table.  \\n  \\n|Scheme|Rule|  \\n|------------|----------|  \\n|file|No connection access to the origin server is permitted.|  \\n|http|HTTP and HTTPS access is permitted using the origin port.|  \\n|https|HTTPS access is permitted using the origin port.|\"\n  example:\n  - \"The following code example demonstrates creating a <xref:System.Security.Policy.NetCodeGroup> and adding <xref:System.Security.Policy.CodeConnectAccess> objects for code downloaded using the HTTP scheme.  \\n  \\n [!code-cpp[NclCodeGroup#3](~/samples/snippets/cpp/VS_Snippets_Remoting/NclCodeGroup/cpp/sample.cpp#3)]\\n [!code-csharp[NclCodeGroup#3](~/samples/snippets/csharp/VS_Snippets_Remoting/NclCodeGroup/CS/sample.cs#3)]\"\n  syntax:\n    content: public NetCodeGroup (System.Security.Policy.IMembershipCondition membershipCondition);\n    parameters:\n    - id: membershipCondition\n      type: System.Security.Policy.IMembershipCondition\n      description: A membership condition that tests evidence to determine whether this code group applies code access security policy.\n  overload: System.Security.Policy.NetCodeGroup.#ctor*\n  exceptions:\n  - type: System.ArgumentNullException\n    commentId: T:System.ArgumentNullException\n    description: The <code>membershipCondition</code> parameter is `null`.\n  - type: System.ArgumentException\n    commentId: T:System.ArgumentException\n    description: The type of the <code>membershipCondition</code> parameter is not valid.\n  version:\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  monikers:\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Security.Policy/NetCodeGroup.xml\n  ms.technology:\n  - dotnet-standard\n  author: mairaw\n  ms.author: mairaw\n  manager: wpickett\n- uid: System.Security.Policy.NetCodeGroup.AbsentOriginScheme\n  commentId: F:System.Security.Policy.NetCodeGroup.AbsentOriginScheme\n  id: AbsentOriginScheme\n  parent: System.Security.Policy.NetCodeGroup\n  langs:\n  - csharp\n  name: AbsentOriginScheme\n  nameWithType: NetCodeGroup.AbsentOriginScheme\n  fullName: NetCodeGroup.AbsentOriginScheme\n  type: Field\n  assemblies:\n  - mscorlib\n  - System.Security.Permissions\n  namespace: System.Security.Policy\n  summary: Contains a value used to specify connection access for code with an unknown or unrecognized origin scheme.\n  remarks: \"When calling the <xref:System.Security.Policy.NetCodeGroup.AddConnectAccess%2A> method, you specify a scheme and an associated <xref:System.Security.Policy.CodeConnectAccess> object. Any <xref:System.Security.Policy.CodeConnectAccess> objects that you add to the <xref:System.Security.Policy.NetCodeGroup> using <xref:System.Security.Policy.NetCodeGroup.AbsentOriginScheme> as the origin scheme are applied when the code's origin scheme is not present in its evidence, or is not a scheme recognized by the <xref:System.Security.Policy.NetCodeGroup> object.  \\n  \\n To specify the <xref:System.Security.Policy.CodeConnectAccess> objects to use when the code's origin scheme does not match any of the schemes contained in the set of origin schemes added to the current <xref:System.Security.Policy.NetCodeGroup> object, use the <xref:System.Security.Policy.NetCodeGroup.AnyOtherOriginScheme> value.  \\n  \\n The value of the <xref:System.Security.Policy.NetCodeGroup.AbsentOriginScheme> field is an empty string (\\\"\\\").\"\n  syntax:\n    content: public static readonly string AbsentOriginScheme;\n    return:\n      type: System.String\n      description: ''\n  exceptions: []\n  version:\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  monikers:\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Security.Policy/NetCodeGroup.xml\n  ms.technology:\n  - dotnet-standard\n  author: mairaw\n  ms.author: mairaw\n  manager: wpickett\n- uid: System.Security.Policy.NetCodeGroup.AddConnectAccess(System.String,System.Security.Policy.CodeConnectAccess)\n  commentId: M:System.Security.Policy.NetCodeGroup.AddConnectAccess(System.String,System.Security.Policy.CodeConnectAccess)\n  id: AddConnectAccess(System.String,System.Security.Policy.CodeConnectAccess)\n  parent: System.Security.Policy.NetCodeGroup\n  langs:\n  - csharp\n  name: AddConnectAccess(String, CodeConnectAccess)\n  nameWithType: NetCodeGroup.AddConnectAccess(String, CodeConnectAccess)\n  fullName: NetCodeGroup.AddConnectAccess(String, CodeConnectAccess)\n  type: Method\n  assemblies:\n  - mscorlib\n  - System.Security.Permissions\n  namespace: System.Security.Policy\n  summary: Adds the specified connection access to the current code group.\n  remarks: You can add multiple <xref:System.Security.Policy.CodeConnectAccess> objects for the same `origin scheme`. If an `origin scheme` already has one or more associated <xref:System.Security.Policy.CodeConnectAccess> objects, specifying `null` for `connectAccess` has no effect. If the origin scheme does not have associated <xref:System.Security.Policy.CodeConnectAccess> objects, specifying `null` for `connectAccess` prevents code with an origin scheme that matches `originScheme` from accessing its origin server.\n  example:\n  - \"The following code example demonstrates creating and adding <xref:System.Security.Policy.CodeConnectAccess> objects to a <xref:System.Security.Policy.NetCodeGroup>.  \\n  \\n [!code-cpp[NclCodeGroup#3](~/samples/snippets/cpp/VS_Snippets_Remoting/NclCodeGroup/cpp/sample.cpp#3)]\\n [!code-csharp[NclCodeGroup#3](~/samples/snippets/csharp/VS_Snippets_Remoting/NclCodeGroup/CS/sample.cs#3)]\"\n  syntax:\n    content: public void AddConnectAccess (string originScheme, System.Security.Policy.CodeConnectAccess connectAccess);\n    parameters:\n    - id: originScheme\n      type: System.String\n      description: A <xref href=\"System.String\"></xref> containing the scheme to match against the code's scheme.\n    - id: connectAccess\n      type: System.Security.Policy.CodeConnectAccess\n      description: A <xref href=\"System.Security.Policy.CodeConnectAccess\"></xref> that specifies the scheme and port code can use to connect back to its origin server.\n  overload: System.Security.Policy.NetCodeGroup.AddConnectAccess*\n  exceptions:\n  - type: System.ArgumentNullException\n    commentId: T:System.ArgumentNullException\n    description: <code>originScheme</code> is `null`.\n  - type: System.ArgumentOutOfRangeException\n    commentId: T:System.ArgumentOutOfRangeException\n    description: \"<code>originScheme</code> contains characters that are not permitted in schemes.  \\n  \\n -or-  \\n  \\n <code>originScheme</code> = <xref href=\\\"System.Security.Policy.NetCodeGroup.AbsentOriginScheme\\\"></xref> and <code>connectAccess</code> specifies <xref href=\\\"System.Security.Policy.CodeConnectAccess.OriginScheme\\\"></xref> as its scheme.\"\n  version:\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  monikers:\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Security.Policy/NetCodeGroup.xml\n  ms.technology:\n  - dotnet-standard\n  author: mairaw\n  ms.author: mairaw\n  manager: wpickett\n- uid: System.Security.Policy.NetCodeGroup.AnyOtherOriginScheme\n  commentId: F:System.Security.Policy.NetCodeGroup.AnyOtherOriginScheme\n  id: AnyOtherOriginScheme\n  parent: System.Security.Policy.NetCodeGroup\n  langs:\n  - csharp\n  name: AnyOtherOriginScheme\n  nameWithType: NetCodeGroup.AnyOtherOriginScheme\n  fullName: NetCodeGroup.AnyOtherOriginScheme\n  type: Field\n  assemblies:\n  - mscorlib\n  - System.Security.Permissions\n  namespace: System.Security.Policy\n  summary: Contains a value used to specify any other unspecified origin scheme.\n  remarks: \"When calling the <xref:System.Security.Policy.NetCodeGroup.AddConnectAccess%2A> method, you specify a scheme and an associated <xref:System.Security.Policy.CodeConnectAccess> object. You can use the value of the <xref:System.Security.Policy.NetCodeGroup.AnyOtherOriginScheme> field to specify the <xref:System.Security.Policy.CodeConnectAccess> objects that should be used for any scheme that is not explicitly contained in the set of origin schemes added to the current <xref:System.Security.Policy.NetCodeGroup> object.  \\n  \\n The <xref:System.Security.Policy.CodeConnectAccess> objects specified with the <xref:System.Security.Policy.NetCodeGroup.AnyOtherOriginScheme> field are only used if the code's origin scheme does not match any of the schemes contained in the set of origin schemes added to the current <xref:System.Security.Policy.NetCodeGroup> object.  \\n  \\n To specify the <xref:System.Security.Policy.CodeConnectAccess> objects to apply when the code's origin scheme is not available in its evidence or is not recognized, use the <xref:System.Security.Policy.NetCodeGroup.AbsentOriginScheme> value.  \\n  \\n The value of the <xref:System.Security.Policy.NetCodeGroup.AnyOtherOriginScheme> field is \\\"*\\\".\"\n  syntax:\n    content: public static readonly string AnyOtherOriginScheme;\n    return:\n      type: System.String\n      description: ''\n  exceptions: []\n  version:\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  monikers:\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Security.Policy/NetCodeGroup.xml\n  ms.technology:\n  - dotnet-standard\n  author: mairaw\n  ms.author: mairaw\n  manager: wpickett\n- uid: System.Security.Policy.NetCodeGroup.AttributeString\n  commentId: P:System.Security.Policy.NetCodeGroup.AttributeString\n  id: AttributeString\n  parent: System.Security.Policy.NetCodeGroup\n  langs:\n  - csharp\n  name: AttributeString\n  nameWithType: NetCodeGroup.AttributeString\n  fullName: NetCodeGroup.AttributeString\n  type: Property\n  assemblies:\n  - mscorlib\n  - System.Security.Permissions\n  namespace: System.Security.Policy\n  summary: Gets a string representation of the attributes of the policy statement for the code group.\n  syntax:\n    content: public override string AttributeString { get; }\n    return:\n      type: System.String\n      description: Always `null`.\n  overload: System.Security.Policy.NetCodeGroup.AttributeString*\n  exceptions: []\n  version:\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  monikers:\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Security.Policy/NetCodeGroup.xml\n  ms.technology:\n  - dotnet-standard\n  author: mairaw\n  ms.author: mairaw\n  manager: wpickett\n- uid: System.Security.Policy.NetCodeGroup.Copy\n  commentId: M:System.Security.Policy.NetCodeGroup.Copy\n  id: Copy\n  parent: System.Security.Policy.NetCodeGroup\n  langs:\n  - csharp\n  name: Copy()\n  nameWithType: NetCodeGroup.Copy()\n  fullName: NetCodeGroup.Copy()\n  type: Method\n  assemblies:\n  - mscorlib\n  - System.Security.Permissions\n  namespace: System.Security.Policy\n  summary: Makes a deep copy of the current code group.\n  remarks: This method makes a deep copy of the code group, meaning that copies of all objects the code group contains are also made.\n  syntax:\n    content: public override System.Security.Policy.CodeGroup Copy ();\n    parameters: []\n    return:\n      type: System.Security.Policy.CodeGroup\n      description: An equivalent copy of the current code group, including its membership conditions and child code groups.\n  overload: System.Security.Policy.NetCodeGroup.Copy*\n  exceptions: []\n  version:\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  monikers:\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Security.Policy/NetCodeGroup.xml\n  ms.technology:\n  - dotnet-standard\n  author: mairaw\n  ms.author: mairaw\n  manager: wpickett\n- uid: System.Security.Policy.NetCodeGroup.CreateXml(System.Security.SecurityElement,System.Security.Policy.PolicyLevel)\n  commentId: M:System.Security.Policy.NetCodeGroup.CreateXml(System.Security.SecurityElement,System.Security.Policy.PolicyLevel)\n  id: CreateXml(System.Security.SecurityElement,System.Security.Policy.PolicyLevel)\n  parent: System.Security.Policy.NetCodeGroup\n  langs:\n  - csharp\n  name: CreateXml(SecurityElement, PolicyLevel)\n  nameWithType: NetCodeGroup.CreateXml(SecurityElement, PolicyLevel)\n  fullName: NetCodeGroup.CreateXml(SecurityElement, PolicyLevel)\n  type: Method\n  assemblies:\n  - mscorlib\n  - System.Security.Permissions\n  namespace: System.Security.Policy\n  syntax:\n    content: protected override void CreateXml (System.Security.SecurityElement element, System.Security.Policy.PolicyLevel level);\n    parameters:\n    - id: element\n      type: System.Security.SecurityElement\n      description: ''\n    - id: level\n      type: System.Security.Policy.PolicyLevel\n      description: ''\n  overload: System.Security.Policy.NetCodeGroup.CreateXml*\n  exceptions: []\n  version:\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  monikers:\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Security.Policy/NetCodeGroup.xml\n- uid: System.Security.Policy.NetCodeGroup.Equals(System.Object)\n  commentId: M:System.Security.Policy.NetCodeGroup.Equals(System.Object)\n  id: Equals(System.Object)\n  parent: System.Security.Policy.NetCodeGroup\n  langs:\n  - csharp\n  name: Equals(Object)\n  nameWithType: NetCodeGroup.Equals(Object)\n  fullName: NetCodeGroup.Equals(Object)\n  type: Method\n  assemblies:\n  - mscorlib\n  - System.Security.Permissions\n  namespace: System.Security.Policy\n  summary: Determines whether the specified code group is equivalent to the current code group.\n  remarks: \"The following data are used to determine the equality of two <xref:System.Security.Policy.NetCodeGroup> objects:  \\n  \\n-   The <xref:System.Security.Policy.CodeGroup.Name%2A> and <xref:System.Security.Policy.CodeGroup.Description%2A> properties.  \\n  \\n-   The <xref:System.Security.Policy.CodeGroup.MembershipCondition%2A> property.  \\n  \\n-   The set of origin schemes and the associated <xref:System.Security.Policy.CodeConnectAccess> objects.\"\n  syntax:\n    content: public override bool Equals (object o);\n    parameters:\n    - id: o\n      type: System.Object\n      description: The <xref href=\"System.Security.Policy.NetCodeGroup\"></xref> object to compare with the current code group.\n    return:\n      type: System.Boolean\n      description: '`true` if the specified code group is equivalent to the current code group; otherwise, `false`.'\n  overload: System.Security.Policy.NetCodeGroup.Equals*\n  exceptions: []\n  version:\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  monikers:\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Security.Policy/NetCodeGroup.xml\n  ms.technology:\n  - dotnet-standard\n  author: mairaw\n  ms.author: mairaw\n  manager: wpickett\n- uid: System.Security.Policy.NetCodeGroup.GetConnectAccessRules\n  commentId: M:System.Security.Policy.NetCodeGroup.GetConnectAccessRules\n  id: GetConnectAccessRules\n  parent: System.Security.Policy.NetCodeGroup\n  langs:\n  - csharp\n  name: GetConnectAccessRules()\n  nameWithType: NetCodeGroup.GetConnectAccessRules()\n  fullName: NetCodeGroup.GetConnectAccessRules()\n  type: Method\n  assemblies:\n  - mscorlib\n  - System.Security.Permissions\n  namespace: System.Security.Policy\n  summary: Gets the connection access information for the current code group.\n  remarks: In each dictionary entry, the <xref:System.Collections.DictionaryEntry.Key%2A> property value is the origin scheme, and the <xref:System.Collections.DictionaryEntry.Value%2A> property value is the array of associated <xref:System.Security.Policy.CodeConnectAccess> objects. If there are no associated <xref:System.Security.Policy.CodeConnectAccess> objects, <xref:System.Collections.DictionaryEntry.Value%2A?displayProperty=fullName> returns an empty array.\n  example:\n  - \"The following code example demonstrates displaying the connection access rules for a <xref:System.Security.Policy.NetCodeGroup> object.  \\n  \\n [!code-cpp[NclCodeGroup#8](~/samples/snippets/cpp/VS_Snippets_Remoting/NclCodeGroup/cpp/sample.cpp#8)]\\n [!code-csharp[NclCodeGroup#8](~/samples/snippets/csharp/VS_Snippets_Remoting/NclCodeGroup/CS/sample.cs#8)]\"\n  syntax:\n    content: public System.Collections.DictionaryEntry[] GetConnectAccessRules ();\n    parameters: []\n    return:\n      type: System.Collections.DictionaryEntry[]\n      description: A <xref href=\"System.Collections.DictionaryEntry\"></xref> array containing connection access information.\n  overload: System.Security.Policy.NetCodeGroup.GetConnectAccessRules*\n  exceptions: []\n  version:\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  monikers:\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Security.Policy/NetCodeGroup.xml\n  ms.technology:\n  - dotnet-standard\n  author: mairaw\n  ms.author: mairaw\n  manager: wpickett\n- uid: System.Security.Policy.NetCodeGroup.GetHashCode\n  commentId: M:System.Security.Policy.NetCodeGroup.GetHashCode\n  id: GetHashCode\n  parent: System.Security.Policy.NetCodeGroup\n  langs:\n  - csharp\n  name: GetHashCode()\n  nameWithType: NetCodeGroup.GetHashCode()\n  fullName: NetCodeGroup.GetHashCode()\n  type: Method\n  assemblies:\n  - mscorlib\n  - System.Security.Permissions\n  namespace: System.Security.Policy\n  summary: Gets the hash code of the current code group.\n  syntax:\n    content: public override int GetHashCode ();\n    parameters: []\n    return:\n      type: System.Int32\n      description: The hash code of the current code group.\n  overload: System.Security.Policy.NetCodeGroup.GetHashCode*\n  exceptions: []\n  version:\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  monikers:\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Security.Policy/NetCodeGroup.xml\n  ms.technology:\n  - dotnet-standard\n  author: mairaw\n  ms.author: mairaw\n  manager: wpickett\n- uid: System.Security.Policy.NetCodeGroup.MergeLogic\n  commentId: P:System.Security.Policy.NetCodeGroup.MergeLogic\n  id: MergeLogic\n  parent: System.Security.Policy.NetCodeGroup\n  langs:\n  - csharp\n  name: MergeLogic\n  nameWithType: NetCodeGroup.MergeLogic\n  fullName: NetCodeGroup.MergeLogic\n  type: Property\n  assemblies:\n  - mscorlib\n  - System.Security.Permissions\n  namespace: System.Security.Policy\n  summary: Gets the logic to use for merging groups.\n  syntax:\n    content: public override string MergeLogic { get; }\n    return:\n      type: System.String\n      description: The string \"Union\".\n  overload: System.Security.Policy.NetCodeGroup.MergeLogic*\n  exceptions: []\n  version:\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  monikers:\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Security.Policy/NetCodeGroup.xml\n  ms.technology:\n  - dotnet-standard\n  author: mairaw\n  ms.author: mairaw\n  manager: wpickett\n- uid: System.Security.Policy.NetCodeGroup.ParseXml(System.Security.SecurityElement,System.Security.Policy.PolicyLevel)\n  commentId: M:System.Security.Policy.NetCodeGroup.ParseXml(System.Security.SecurityElement,System.Security.Policy.PolicyLevel)\n  id: ParseXml(System.Security.SecurityElement,System.Security.Policy.PolicyLevel)\n  parent: System.Security.Policy.NetCodeGroup\n  langs:\n  - csharp\n  name: ParseXml(SecurityElement, PolicyLevel)\n  nameWithType: NetCodeGroup.ParseXml(SecurityElement, PolicyLevel)\n  fullName: NetCodeGroup.ParseXml(SecurityElement, PolicyLevel)\n  type: Method\n  assemblies:\n  - mscorlib\n  - System.Security.Permissions\n  namespace: System.Security.Policy\n  syntax:\n    content: protected override void ParseXml (System.Security.SecurityElement e, System.Security.Policy.PolicyLevel level);\n    parameters:\n    - id: e\n      type: System.Security.SecurityElement\n      description: ''\n    - id: level\n      type: System.Security.Policy.PolicyLevel\n      description: ''\n  overload: System.Security.Policy.NetCodeGroup.ParseXml*\n  exceptions: []\n  version:\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  monikers:\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Security.Policy/NetCodeGroup.xml\n- uid: System.Security.Policy.NetCodeGroup.PermissionSetName\n  commentId: P:System.Security.Policy.NetCodeGroup.PermissionSetName\n  id: PermissionSetName\n  parent: System.Security.Policy.NetCodeGroup\n  langs:\n  - csharp\n  name: PermissionSetName\n  nameWithType: NetCodeGroup.PermissionSetName\n  fullName: NetCodeGroup.PermissionSetName\n  type: Property\n  assemblies:\n  - mscorlib\n  - System.Security.Permissions\n  namespace: System.Security.Policy\n  summary: Gets the name of the <xref href=\"System.Security.NamedPermissionSet\"></xref> for the code group.\n  syntax:\n    content: public override string PermissionSetName { get; }\n    return:\n      type: System.String\n      description: Always the string \"Same site Web.\"\n  overload: System.Security.Policy.NetCodeGroup.PermissionSetName*\n  exceptions: []\n  version:\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  monikers:\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Security.Policy/NetCodeGroup.xml\n  ms.technology:\n  - dotnet-standard\n  author: mairaw\n  ms.author: mairaw\n  manager: wpickett\n- uid: System.Security.Policy.NetCodeGroup.ResetConnectAccess\n  commentId: M:System.Security.Policy.NetCodeGroup.ResetConnectAccess\n  id: ResetConnectAccess\n  parent: System.Security.Policy.NetCodeGroup\n  langs:\n  - csharp\n  name: ResetConnectAccess()\n  nameWithType: NetCodeGroup.ResetConnectAccess()\n  fullName: NetCodeGroup.ResetConnectAccess()\n  type: Method\n  assemblies:\n  - mscorlib\n  - System.Security.Permissions\n  namespace: System.Security.Policy\n  summary: Removes all connection access information for the current code group.\n  remarks: \"Use this method to remove the system-supplied default connection access rules.  \\n  \\n The default rules are shown in the following table.  \\n  \\n|Scheme|Rule|  \\n|------------|----------|  \\n|file|No connection access to the origin server is permitted.|  \\n|http|HTTP and HTTPS access is permitted using the origin port.|  \\n|https|HTTPS access is permitted using the origin port.|\"\n  example:\n  - \"The following code example demonstrates calling this method to remove the default code access connection rules.  \\n  \\n [!code-cpp[NclCodeGroup#3](~/samples/snippets/cpp/VS_Snippets_Remoting/NclCodeGroup/cpp/sample.cpp#3)]\\n [!code-csharp[NclCodeGroup#3](~/samples/snippets/csharp/VS_Snippets_Remoting/NclCodeGroup/CS/sample.cs#3)]\"\n  syntax:\n    content: public void ResetConnectAccess ();\n    parameters: []\n  overload: System.Security.Policy.NetCodeGroup.ResetConnectAccess*\n  exceptions: []\n  version:\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  monikers:\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Security.Policy/NetCodeGroup.xml\n  ms.technology:\n  - dotnet-standard\n  author: mairaw\n  ms.author: mairaw\n  manager: wpickett\n- uid: System.Security.Policy.NetCodeGroup.Resolve(System.Security.Policy.Evidence)\n  commentId: M:System.Security.Policy.NetCodeGroup.Resolve(System.Security.Policy.Evidence)\n  id: Resolve(System.Security.Policy.Evidence)\n  parent: System.Security.Policy.NetCodeGroup\n  langs:\n  - csharp\n  name: Resolve(Evidence)\n  nameWithType: NetCodeGroup.Resolve(Evidence)\n  fullName: NetCodeGroup.Resolve(Evidence)\n  type: Method\n  assemblies:\n  - mscorlib\n  - System.Security.Permissions\n  namespace: System.Security.Policy\n  summary: Resolves policy for the code group and its descendants for a set of evidence.\n  remarks: \"Given evidence for an assembly to be loaded, this method evaluates the code group by first checking the membership condition against the specified evidence. If there is a match, this method returns a policy statement for the code group, including evaluation of child code groups.  \\n  \\n The operation of this method is as follows:  \\n  \\n If the membership condition does not match the specified evidence, return `null`; otherwise, set the permission set to be returned (P) equal to the code group's policy statement and continue. For each child code group, resolve the code group with the same evidence; if the result is not `null`, return that policy statement. If no child code group matched, return P (the parent's policy statement).\"\n  syntax:\n    content: public override System.Security.Policy.PolicyStatement Resolve (System.Security.Policy.Evidence evidence);\n    parameters:\n    - id: evidence\n      type: System.Security.Policy.Evidence\n      description: The <xref href=\"System.Security.Policy.Evidence\"></xref> for the assembly.\n    return:\n      type: System.Security.Policy.PolicyStatement\n      description: A <xref href=\"System.Security.Policy.PolicyStatement\"></xref> that consists of the permissions granted by the code group with optional attributes, or `null` if the code group does not apply (the membership condition does not match the specified evidence).\n  overload: System.Security.Policy.NetCodeGroup.Resolve*\n  exceptions:\n  - type: System.ArgumentNullException\n    commentId: T:System.ArgumentNullException\n    description: The <code>evidence</code> parameter is `null`.\n  - type: System.Security.Policy.PolicyException\n    commentId: T:System.Security.Policy.PolicyException\n    description: More than one code group (including the parent code group and any child code groups) is marked <xref href=\"System.Security.Policy.PolicyStatementAttribute.Exclusive\"></xref>.\n  version:\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  monikers:\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Security.Policy/NetCodeGroup.xml\n  ms.technology:\n  - dotnet-standard\n  author: mairaw\n  ms.author: mairaw\n  manager: wpickett\n- uid: System.Security.Policy.NetCodeGroup.ResolveMatchingCodeGroups(System.Security.Policy.Evidence)\n  commentId: M:System.Security.Policy.NetCodeGroup.ResolveMatchingCodeGroups(System.Security.Policy.Evidence)\n  id: ResolveMatchingCodeGroups(System.Security.Policy.Evidence)\n  parent: System.Security.Policy.NetCodeGroup\n  langs:\n  - csharp\n  name: ResolveMatchingCodeGroups(Evidence)\n  nameWithType: NetCodeGroup.ResolveMatchingCodeGroups(Evidence)\n  fullName: NetCodeGroup.ResolveMatchingCodeGroups(Evidence)\n  type: Method\n  assemblies:\n  - mscorlib\n  - System.Security.Permissions\n  namespace: System.Security.Policy\n  summary: Resolves matching code groups.\n  remarks: Given evidence for an assembly to be loaded, this method evaluates the code group by first checking the membership condition against the specified evidence. If there is a match, this method returns a root code group. The code group that is returned may contain child code groups, which, in turn, may also have child code groups, so the return value reflects the complete set of code groups that were matched by the evidence provided.\n  syntax:\n    content: public override System.Security.Policy.CodeGroup ResolveMatchingCodeGroups (System.Security.Policy.Evidence evidence);\n    parameters:\n    - id: evidence\n      type: System.Security.Policy.Evidence\n      description: The evidence for the assembly.\n    return:\n      type: System.Security.Policy.CodeGroup\n      description: The complete set of code groups that were matched by the evidence.\n  overload: System.Security.Policy.NetCodeGroup.ResolveMatchingCodeGroups*\n  exceptions:\n  - type: System.ArgumentNullException\n    commentId: T:System.ArgumentNullException\n    description: The <code>evidence</code> parameter is `null`.\n  version:\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  monikers:\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Security.Policy/NetCodeGroup.xml\n  ms.technology:\n  - dotnet-standard\n  author: mairaw\n  ms.author: mairaw\n  manager: wpickett\nreferences:\n- uid: System.Security.Policy.CodeGroup\n  parent: System.Security.Policy\n  isExternal: false\n  name: CodeGroup\n  nameWithType: CodeGroup\n  fullName: System.Security.Policy.CodeGroup\n- uid: System.ArgumentNullException\n  parent: System\n  isExternal: false\n  name: ArgumentNullException\n  nameWithType: ArgumentNullException\n  fullName: System.ArgumentNullException\n- uid: System.ArgumentException\n  parent: System\n  isExternal: false\n  name: ArgumentException\n  nameWithType: ArgumentException\n  fullName: System.ArgumentException\n- uid: System.ArgumentOutOfRangeException\n  parent: System\n  isExternal: false\n  name: ArgumentOutOfRangeException\n  nameWithType: ArgumentOutOfRangeException\n  fullName: System.ArgumentOutOfRangeException\n- uid: System.Security.Policy.PolicyException\n  parent: System.Security.Policy\n  isExternal: false\n  name: PolicyException\n  nameWithType: PolicyException\n  fullName: System.Security.Policy.PolicyException\n- uid: System.Security.Policy.NetCodeGroup.#ctor(System.Security.Policy.IMembershipCondition)\n  parent: System.Security.Policy.NetCodeGroup\n  isExternal: false\n  name: NetCodeGroup(IMembershipCondition)\n  nameWithType: NetCodeGroup.NetCodeGroup(IMembershipCondition)\n  fullName: NetCodeGroup.NetCodeGroup(IMembershipCondition)\n- uid: System.Security.Policy.IMembershipCondition\n  parent: System.Security.Policy\n  isExternal: false\n  name: IMembershipCondition\n  nameWithType: IMembershipCondition\n  fullName: System.Security.Policy.IMembershipCondition\n- uid: System.Security.Policy.NetCodeGroup.AbsentOriginScheme\n  parent: System.Security.Policy.NetCodeGroup\n  isExternal: false\n  name: AbsentOriginScheme\n  nameWithType: NetCodeGroup.AbsentOriginScheme\n  fullName: NetCodeGroup.AbsentOriginScheme\n- uid: System.String\n  parent: System\n  isExternal: false\n  name: String\n  nameWithType: String\n  fullName: System.String\n- uid: System.Security.Policy.NetCodeGroup.AddConnectAccess(System.String,System.Security.Policy.CodeConnectAccess)\n  parent: System.Security.Policy.NetCodeGroup\n  isExternal: false\n  name: AddConnectAccess(String, CodeConnectAccess)\n  nameWithType: NetCodeGroup.AddConnectAccess(String, CodeConnectAccess)\n  fullName: NetCodeGroup.AddConnectAccess(String, CodeConnectAccess)\n- uid: System.Security.Policy.CodeConnectAccess\n  parent: System.Security.Policy\n  isExternal: false\n  name: CodeConnectAccess\n  nameWithType: CodeConnectAccess\n  fullName: System.Security.Policy.CodeConnectAccess\n- uid: System.Security.Policy.NetCodeGroup.AnyOtherOriginScheme\n  parent: System.Security.Policy.NetCodeGroup\n  isExternal: false\n  name: AnyOtherOriginScheme\n  nameWithType: NetCodeGroup.AnyOtherOriginScheme\n  fullName: NetCodeGroup.AnyOtherOriginScheme\n- uid: System.Security.Policy.NetCodeGroup.AttributeString\n  parent: System.Security.Policy.NetCodeGroup\n  isExternal: false\n  name: AttributeString\n  nameWithType: NetCodeGroup.AttributeString\n  fullName: NetCodeGroup.AttributeString\n- uid: System.Security.Policy.NetCodeGroup.Copy\n  parent: System.Security.Policy.NetCodeGroup\n  isExternal: false\n  name: Copy()\n  nameWithType: NetCodeGroup.Copy()\n  fullName: NetCodeGroup.Copy()\n- uid: System.Security.Policy.NetCodeGroup.CreateXml(System.Security.SecurityElement,System.Security.Policy.PolicyLevel)\n  parent: System.Security.Policy.NetCodeGroup\n  isExternal: false\n  name: CreateXml(SecurityElement, PolicyLevel)\n  nameWithType: NetCodeGroup.CreateXml(SecurityElement, PolicyLevel)\n  fullName: NetCodeGroup.CreateXml(SecurityElement, PolicyLevel)\n- uid: System.Security.SecurityElement\n  parent: System.Security\n  isExternal: false\n  name: SecurityElement\n  nameWithType: SecurityElement\n  fullName: System.Security.SecurityElement\n- uid: System.Security.Policy.PolicyLevel\n  parent: System.Security.Policy\n  isExternal: false\n  name: PolicyLevel\n  nameWithType: PolicyLevel\n  fullName: System.Security.Policy.PolicyLevel\n- uid: System.Security.Policy.NetCodeGroup.Equals(System.Object)\n  parent: System.Security.Policy.NetCodeGroup\n  isExternal: false\n  name: Equals(Object)\n  nameWithType: NetCodeGroup.Equals(Object)\n  fullName: NetCodeGroup.Equals(Object)\n- uid: System.Boolean\n  parent: System\n  isExternal: false\n  name: Boolean\n  nameWithType: Boolean\n  fullName: System.Boolean\n- uid: System.Object\n  parent: System\n  isExternal: false\n  name: Object\n  nameWithType: Object\n  fullName: System.Object\n- uid: System.Security.Policy.NetCodeGroup.GetConnectAccessRules\n  parent: System.Security.Policy.NetCodeGroup\n  isExternal: false\n  name: GetConnectAccessRules()\n  nameWithType: NetCodeGroup.GetConnectAccessRules()\n  fullName: NetCodeGroup.GetConnectAccessRules()\n- uid: System.Collections.DictionaryEntry\n  name: DictionaryEntry\n  nameWithType: DictionaryEntry\n  fullName: System.Collections.DictionaryEntry\n- uid: System.Collections.DictionaryEntry[]\n  parent: System.Collections\n  isExternal: false\n  name: DictionaryEntry[]\n  nameWithType: DictionaryEntry[]\n  fullName: System.Collections.DictionaryEntry[]\n  spec.csharp:\n  - uid: System.Collections.DictionaryEntry\n    name: DictionaryEntry\n    nameWithType: DictionaryEntry\n    fullName: System.Collections.DictionaryEntry\n  - name: '[]'\n    nameWithType: '[]'\n    fullName: '[]'\n- uid: System.Security.Policy.NetCodeGroup.GetHashCode\n  parent: System.Security.Policy.NetCodeGroup\n  isExternal: false\n  name: GetHashCode()\n  nameWithType: NetCodeGroup.GetHashCode()\n  fullName: NetCodeGroup.GetHashCode()\n- uid: System.Int32\n  parent: System\n  isExternal: false\n  name: Int32\n  nameWithType: Int32\n  fullName: System.Int32\n- uid: System.Security.Policy.NetCodeGroup.MergeLogic\n  parent: System.Security.Policy.NetCodeGroup\n  isExternal: false\n  name: MergeLogic\n  nameWithType: NetCodeGroup.MergeLogic\n  fullName: NetCodeGroup.MergeLogic\n- uid: System.Security.Policy.NetCodeGroup.ParseXml(System.Security.SecurityElement,System.Security.Policy.PolicyLevel)\n  parent: System.Security.Policy.NetCodeGroup\n  isExternal: false\n  name: ParseXml(SecurityElement, PolicyLevel)\n  nameWithType: NetCodeGroup.ParseXml(SecurityElement, PolicyLevel)\n  fullName: NetCodeGroup.ParseXml(SecurityElement, PolicyLevel)\n- uid: System.Security.Policy.NetCodeGroup.PermissionSetName\n  parent: System.Security.Policy.NetCodeGroup\n  isExternal: false\n  name: PermissionSetName\n  nameWithType: NetCodeGroup.PermissionSetName\n  fullName: NetCodeGroup.PermissionSetName\n- uid: System.Security.Policy.NetCodeGroup.ResetConnectAccess\n  parent: System.Security.Policy.NetCodeGroup\n  isExternal: false\n  name: ResetConnectAccess()\n  nameWithType: NetCodeGroup.ResetConnectAccess()\n  fullName: NetCodeGroup.ResetConnectAccess()\n- uid: System.Security.Policy.NetCodeGroup.Resolve(System.Security.Policy.Evidence)\n  parent: System.Security.Policy.NetCodeGroup\n  isExternal: false\n  name: Resolve(Evidence)\n  nameWithType: NetCodeGroup.Resolve(Evidence)\n  fullName: NetCodeGroup.Resolve(Evidence)\n- uid: System.Security.Policy.PolicyStatement\n  parent: System.Security.Policy\n  isExternal: false\n  name: PolicyStatement\n  nameWithType: PolicyStatement\n  fullName: System.Security.Policy.PolicyStatement\n- uid: System.Security.Policy.Evidence\n  parent: System.Security.Policy\n  isExternal: false\n  name: Evidence\n  nameWithType: Evidence\n  fullName: System.Security.Policy.Evidence\n- uid: System.Security.Policy.NetCodeGroup.ResolveMatchingCodeGroups(System.Security.Policy.Evidence)\n  parent: System.Security.Policy.NetCodeGroup\n  isExternal: false\n  name: ResolveMatchingCodeGroups(Evidence)\n  nameWithType: NetCodeGroup.ResolveMatchingCodeGroups(Evidence)\n  fullName: NetCodeGroup.ResolveMatchingCodeGroups(Evidence)\n- uid: System.Security.Policy.NetCodeGroup.#ctor*\n  parent: System.Security.Policy.NetCodeGroup\n  isExternal: false\n  name: NetCodeGroup\n  nameWithType: NetCodeGroup.NetCodeGroup\n  fullName: NetCodeGroup.NetCodeGroup\n  monikers:\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Security.Policy/NetCodeGroup.xml\n- uid: System.Security.Policy.NetCodeGroup.AddConnectAccess*\n  parent: System.Security.Policy.NetCodeGroup\n  isExternal: false\n  name: AddConnectAccess\n  nameWithType: NetCodeGroup.AddConnectAccess\n  fullName: NetCodeGroup.AddConnectAccess\n  monikers:\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Security.Policy/NetCodeGroup.xml\n- uid: System.Security.Policy.NetCodeGroup.AttributeString*\n  parent: System.Security.Policy.NetCodeGroup\n  isExternal: false\n  name: AttributeString\n  nameWithType: NetCodeGroup.AttributeString\n  fullName: NetCodeGroup.AttributeString\n  monikers:\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Security.Policy/NetCodeGroup.xml\n- uid: System.Security.Policy.NetCodeGroup.Copy*\n  parent: System.Security.Policy.NetCodeGroup\n  isExternal: false\n  name: Copy\n  nameWithType: NetCodeGroup.Copy\n  fullName: NetCodeGroup.Copy\n  monikers:\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Security.Policy/NetCodeGroup.xml\n- uid: System.Security.Policy.NetCodeGroup.CreateXml*\n  parent: System.Security.Policy.NetCodeGroup\n  isExternal: false\n  name: CreateXml\n  nameWithType: NetCodeGroup.CreateXml\n  fullName: NetCodeGroup.CreateXml\n  monikers:\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Security.Policy/NetCodeGroup.xml\n- uid: System.Security.Policy.NetCodeGroup.Equals*\n  parent: System.Security.Policy.NetCodeGroup\n  isExternal: false\n  name: Equals\n  nameWithType: NetCodeGroup.Equals\n  fullName: NetCodeGroup.Equals\n  monikers:\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Security.Policy/NetCodeGroup.xml\n- uid: System.Security.Policy.NetCodeGroup.GetConnectAccessRules*\n  parent: System.Security.Policy.NetCodeGroup\n  isExternal: false\n  name: GetConnectAccessRules\n  nameWithType: NetCodeGroup.GetConnectAccessRules\n  fullName: NetCodeGroup.GetConnectAccessRules\n  monikers:\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Security.Policy/NetCodeGroup.xml\n- uid: System.Security.Policy.NetCodeGroup.GetHashCode*\n  parent: System.Security.Policy.NetCodeGroup\n  isExternal: false\n  name: GetHashCode\n  nameWithType: NetCodeGroup.GetHashCode\n  fullName: NetCodeGroup.GetHashCode\n  monikers:\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Security.Policy/NetCodeGroup.xml\n- uid: System.Security.Policy.NetCodeGroup.MergeLogic*\n  parent: System.Security.Policy.NetCodeGroup\n  isExternal: false\n  name: MergeLogic\n  nameWithType: NetCodeGroup.MergeLogic\n  fullName: NetCodeGroup.MergeLogic\n  monikers:\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Security.Policy/NetCodeGroup.xml\n- uid: System.Security.Policy.NetCodeGroup.ParseXml*\n  parent: System.Security.Policy.NetCodeGroup\n  isExternal: false\n  name: ParseXml\n  nameWithType: NetCodeGroup.ParseXml\n  fullName: NetCodeGroup.ParseXml\n  monikers:\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Security.Policy/NetCodeGroup.xml\n- uid: System.Security.Policy.NetCodeGroup.PermissionSetName*\n  parent: System.Security.Policy.NetCodeGroup\n  isExternal: false\n  name: PermissionSetName\n  nameWithType: NetCodeGroup.PermissionSetName\n  fullName: NetCodeGroup.PermissionSetName\n  monikers:\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Security.Policy/NetCodeGroup.xml\n- uid: System.Security.Policy.NetCodeGroup.ResetConnectAccess*\n  parent: System.Security.Policy.NetCodeGroup\n  isExternal: false\n  name: ResetConnectAccess\n  nameWithType: NetCodeGroup.ResetConnectAccess\n  fullName: NetCodeGroup.ResetConnectAccess\n  monikers:\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Security.Policy/NetCodeGroup.xml\n- uid: System.Security.Policy.NetCodeGroup.Resolve*\n  parent: System.Security.Policy.NetCodeGroup\n  isExternal: false\n  name: Resolve\n  nameWithType: NetCodeGroup.Resolve\n  fullName: NetCodeGroup.Resolve\n  monikers:\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Security.Policy/NetCodeGroup.xml\n- uid: System.Security.Policy.NetCodeGroup.ResolveMatchingCodeGroups*\n  parent: System.Security.Policy.NetCodeGroup\n  isExternal: false\n  name: ResolveMatchingCodeGroups\n  nameWithType: NetCodeGroup.ResolveMatchingCodeGroups\n  fullName: NetCodeGroup.ResolveMatchingCodeGroups\n  monikers:\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Security.Policy/NetCodeGroup.xml\n- uid: System.Object.Equals(System.Object,System.Object)\n  parent: System.Object\n  isExternal: false\n  name: Equals(Object, Object)\n  nameWithType: Object.Equals(Object, Object)\n  fullName: Object.Equals(Object, Object)\n- uid: System.Object.GetType\n  parent: System.Object\n  isExternal: false\n  name: GetType()\n  nameWithType: Object.GetType()\n  fullName: Object.GetType()\n- uid: System.Object.MemberwiseClone\n  parent: System.Object\n  isExternal: false\n  name: MemberwiseClone()\n  nameWithType: Object.MemberwiseClone()\n  fullName: Object.MemberwiseClone()\n- uid: System.Object.ReferenceEquals(System.Object,System.Object)\n  parent: System.Object\n  isExternal: false\n  name: ReferenceEquals(Object, Object)\n  nameWithType: Object.ReferenceEquals(Object, Object)\n  fullName: Object.ReferenceEquals(Object, Object)\n- uid: System.Object.ToString\n  parent: System.Object\n  isExternal: false\n  name: ToString()\n  nameWithType: Object.ToString()\n  fullName: Object.ToString()\n- uid: System.Security.Policy.CodeGroup.AddChild(System.Security.Policy.CodeGroup)\n  parent: System.Security.Policy.CodeGroup\n  isExternal: false\n  name: AddChild(CodeGroup)\n  nameWithType: CodeGroup.AddChild(CodeGroup)\n  fullName: CodeGroup.AddChild(CodeGroup)\n- uid: System.Security.Policy.CodeGroup.Children\n  parent: System.Security.Policy.CodeGroup\n  isExternal: false\n  name: Children\n  nameWithType: CodeGroup.Children\n  fullName: CodeGroup.Children\n- uid: System.Security.Policy.CodeGroup.Description\n  parent: System.Security.Policy.CodeGroup\n  isExternal: false\n  name: Description\n  nameWithType: CodeGroup.Description\n  fullName: CodeGroup.Description\n- uid: System.Security.Policy.CodeGroup.Equals(System.Security.Policy.CodeGroup,System.Boolean)\n  parent: System.Security.Policy.CodeGroup\n  isExternal: false\n  name: Equals(CodeGroup, Boolean)\n  nameWithType: CodeGroup.Equals(CodeGroup, Boolean)\n  fullName: CodeGroup.Equals(CodeGroup, Boolean)\n- uid: System.Security.Policy.CodeGroup.FromXml(System.Security.SecurityElement)\n  parent: System.Security.Policy.CodeGroup\n  isExternal: false\n  name: FromXml(SecurityElement)\n  nameWithType: CodeGroup.FromXml(SecurityElement)\n  fullName: CodeGroup.FromXml(SecurityElement)\n- uid: System.Security.Policy.CodeGroup.FromXml(System.Security.SecurityElement,System.Security.Policy.PolicyLevel)\n  parent: System.Security.Policy.CodeGroup\n  isExternal: false\n  name: FromXml(SecurityElement, PolicyLevel)\n  nameWithType: CodeGroup.FromXml(SecurityElement, PolicyLevel)\n  fullName: CodeGroup.FromXml(SecurityElement, PolicyLevel)\n- uid: System.Security.Policy.CodeGroup.MembershipCondition\n  parent: System.Security.Policy.CodeGroup\n  isExternal: false\n  name: MembershipCondition\n  nameWithType: CodeGroup.MembershipCondition\n  fullName: CodeGroup.MembershipCondition\n- uid: System.Security.Policy.CodeGroup.Name\n  parent: System.Security.Policy.CodeGroup\n  isExternal: false\n  name: Name\n  nameWithType: CodeGroup.Name\n  fullName: CodeGroup.Name\n- uid: System.Security.Policy.CodeGroup.PolicyStatement\n  parent: System.Security.Policy.CodeGroup\n  isExternal: false\n  name: PolicyStatement\n  nameWithType: CodeGroup.PolicyStatement\n  fullName: CodeGroup.PolicyStatement\n- uid: System.Security.Policy.CodeGroup.RemoveChild(System.Security.Policy.CodeGroup)\n  parent: System.Security.Policy.CodeGroup\n  isExternal: false\n  name: RemoveChild(CodeGroup)\n  nameWithType: CodeGroup.RemoveChild(CodeGroup)\n  fullName: CodeGroup.RemoveChild(CodeGroup)\n- uid: System.Security.Policy.CodeGroup.ToXml\n  parent: System.Security.Policy.CodeGroup\n  isExternal: false\n  name: ToXml()\n  nameWithType: CodeGroup.ToXml()\n  fullName: CodeGroup.ToXml()\n- uid: System.Security.Policy.CodeGroup.ToXml(System.Security.Policy.PolicyLevel)\n  parent: System.Security.Policy.CodeGroup\n  isExternal: false\n  name: ToXml(PolicyLevel)\n  nameWithType: CodeGroup.ToXml(PolicyLevel)\n  fullName: CodeGroup.ToXml(PolicyLevel)\n"}