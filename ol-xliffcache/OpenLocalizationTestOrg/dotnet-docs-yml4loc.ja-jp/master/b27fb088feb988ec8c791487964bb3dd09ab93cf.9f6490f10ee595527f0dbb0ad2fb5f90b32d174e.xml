{"nodes":[{"content":"Provides a type converter to convert object references to and from other representations.","nodes":[{"pos":[0,89],"content":"Provides a type converter to convert object references to and from other representations.","nodes":[{"content":"Provides a type converter to convert object references to and from other representations.","pos":[0,89]}]}],"pos":[1410,1500],"yaml":true},{"content":"The <xref:System.ComponentModel.ReferenceConverter> is typically used within the context of sited components or a design environment. Without a component site or a usable <xref:System.ComponentModel.ITypeDescriptorContext>, this converter is of little use.  \n  \n This converter converts a reference of an object that implements the <xref:System.ComponentModel.IComponent> interface and displays its properties in the **Properties** window.  \n  \n For more information about type converters, see the <xref:System.ComponentModel.TypeConverter> base class and [How to: Implement a Type Converter](http://msdn.microsoft.com/library/90373a3f-d8c8-492d-841c-945d62393c56).  \n  \n> [!NOTE]\n>  You should never create an instance of the <xref:System.ComponentModel.ReferenceConverter> class. Instead, call the <xref:System.ComponentModel.TypeDescriptor.GetConverter%2A> method of the <xref:System.ComponentModel.TypeDescriptor> class. For more information, see the examples in the <xref:System.ComponentModel.TypeConverter> base class.  \n  \n This class provides the <xref:System.ComponentModel.ReferenceConverter.IsValueAllowed%2A> method to check whether a particular value can be added to the standard values collection. If you do not want to add the value to the collection, override this method.","nodes":[{"pos":[0,256],"content":"The <xref:System.ComponentModel.ReferenceConverter> is typically used within the context of sited components or a design environment. Without a component site or a usable <xref:System.ComponentModel.ITypeDescriptorContext>, this converter is of little use.","nodes":[{"content":"The <xref:System.ComponentModel.ReferenceConverter> is typically used within the context of sited components or a design environment. Without a component site or a usable <xref:System.ComponentModel.ITypeDescriptorContext>, this converter is of little use.","pos":[0,256],"nodes":[{"content":"The <ph id=\"ph1\">&lt;xref:System.ComponentModel.ReferenceConverter&gt;</ph> is typically used within the context of sited components or a design environment.","pos":[0,133],"source":"The <xref:System.ComponentModel.ReferenceConverter> is typically used within the context of sited components or a design environment."},{"content":"Without a component site or a usable <ph id=\"ph1\">&lt;xref:System.ComponentModel.ITypeDescriptorContext&gt;</ph>, this converter is of little use.","pos":[134,256],"source":" Without a component site or a usable <xref:System.ComponentModel.ITypeDescriptorContext>, this converter is of little use."}]}]},{"pos":[263,439],"content":"This converter converts a reference of an object that implements the <ph id=\"ph1\">&lt;xref:System.ComponentModel.IComponent&gt;</ph> interface and displays its properties in the <bpt id=\"p1\">**</bpt>Properties<ept id=\"p1\">**</ept> window.","source":"This converter converts a reference of an object that implements the <xref:System.ComponentModel.IComponent> interface and displays its properties in the **Properties** window."},{"pos":[446,665],"content":"For more information about type converters, see the <ph id=\"ph1\">&lt;xref:System.ComponentModel.TypeConverter&gt;</ph> base class and <bpt id=\"p1\">[</bpt>How to: Implement a Type Converter<ept id=\"p1\">](http://msdn.microsoft.com/library/90373a3f-d8c8-492d-841c-945d62393c56)</ept>.","source":"For more information about type converters, see the <xref:System.ComponentModel.TypeConverter> base class and [How to: Implement a Type Converter](http://msdn.microsoft.com/library/90373a3f-d8c8-492d-841c-945d62393c56)."},{"pos":[673,1025],"content":"[!NOTE]\n You should never create an instance of the <xref:System.ComponentModel.ReferenceConverter> class. Instead, call the <xref:System.ComponentModel.TypeDescriptor.GetConverter%2A> method of the <xref:System.ComponentModel.TypeDescriptor> class. For more information, see the examples in the <xref:System.ComponentModel.TypeConverter> base class.","leadings":["","> "],"nodes":[{"content":" You should never create an instance of the <xref:System.ComponentModel.ReferenceConverter> class. Instead, call the <xref:System.ComponentModel.TypeDescriptor.GetConverter%2A> method of the <xref:System.ComponentModel.TypeDescriptor> class. For more information, see the examples in the <xref:System.ComponentModel.TypeConverter> base class.","pos":[8,350],"nodes":[{"content":"You should never create an instance of the <ph id=\"ph1\">&lt;xref:System.ComponentModel.ReferenceConverter&gt;</ph> class.","pos":[1,98],"source":" You should never create an instance of the <xref:System.ComponentModel.ReferenceConverter> class."},{"content":"Instead, call the <ph id=\"ph1\">&lt;xref:System.ComponentModel.TypeDescriptor.GetConverter%2A&gt;</ph> method of the <ph id=\"ph2\">&lt;xref:System.ComponentModel.TypeDescriptor&gt;</ph> class.","pos":[99,241],"source":" Instead, call the <xref:System.ComponentModel.TypeDescriptor.GetConverter%2A> method of the <xref:System.ComponentModel.TypeDescriptor> class."},{"content":"For more information, see the examples in the <ph id=\"ph1\">&lt;xref:System.ComponentModel.TypeConverter&gt;</ph> base class.","pos":[242,342],"source":" For more information, see the examples in the <xref:System.ComponentModel.TypeConverter> base class."}]}]},{"pos":[1032,1289],"content":"This class provides the <xref:System.ComponentModel.ReferenceConverter.IsValueAllowed%2A> method to check whether a particular value can be added to the standard values collection. If you do not want to add the value to the collection, override this method.","nodes":[{"content":"This class provides the <xref:System.ComponentModel.ReferenceConverter.IsValueAllowed%2A> method to check whether a particular value can be added to the standard values collection. If you do not want to add the value to the collection, override this method.","pos":[0,257],"nodes":[{"content":"This class provides the <ph id=\"ph1\">&lt;xref:System.ComponentModel.ReferenceConverter.IsValueAllowed%2A&gt;</ph> method to check whether a particular value can be added to the standard values collection.","pos":[0,180],"source":"This class provides the <xref:System.ComponentModel.ReferenceConverter.IsValueAllowed%2A> method to check whether a particular value can be added to the standard values collection."},{"content":"If you do not want to add the value to the collection, override this method.","pos":[181,257]}]}]}],"pos":[1511,2812],"yaml":true,"extradata":"MT"},{"content":"Initializes a new instance of the <xref href=\"System.ComponentModel.ReferenceConverter\"></xref> class.","nodes":[{"pos":[0,102],"content":"Initializes a new instance of the <ph id=\"ph1\">&lt;xref href=\"System.ComponentModel.ReferenceConverter\"&gt;&lt;/xref&gt;</ph> class.","source":"Initializes a new instance of the <xref href=\"System.ComponentModel.ReferenceConverter\"></xref> class."}],"pos":[7648,7751],"yaml":true},{"content":"A <xref href=\"System.Type\"></xref> that represents the type to associate with this reference converter.","nodes":[{"pos":[0,103],"content":"A <ph id=\"ph1\">&lt;xref href=\"System.Type\"&gt;&lt;/xref&gt;</ph> that represents the type to associate with this reference converter.","source":"A <xref href=\"System.Type\"></xref> that represents the type to associate with this reference converter."}],"pos":[7887,7991],"yaml":true},{"content":"Gets a value indicating whether this converter can convert an object in the given source type to a reference object using the specified context.","nodes":[{"pos":[0,144],"content":"Gets a value indicating whether this converter can convert an object in the given source type to a reference object using the specified context.","nodes":[{"content":"Gets a value indicating whether this converter can convert an object in the given source type to a reference object using the specified context.","pos":[0,144]}]}],"pos":[9555,9700],"yaml":true},{"content":"The `context` parameter can be used to extract additional information about the environment this converter is being invoked from. This can be `null`, so always check. Also, properties on the context object can return `null`.","nodes":[{"pos":[0,224],"content":"The `context` parameter can be used to extract additional information about the environment this converter is being invoked from. This can be `null`, so always check. Also, properties on the context object can return `null`.","nodes":[{"content":"The <ph id=\"ph1\">`context`</ph> parameter can be used to extract additional information about the environment this converter is being invoked from.","pos":[0,129],"source":"The `context` parameter can be used to extract additional information about the environment this converter is being invoked from."},{"content":"This can be <ph id=\"ph1\">`null`</ph>, so always check.","pos":[130,166],"source":" This can be `null`, so always check."},{"content":"Also, properties on the context object can return <ph id=\"ph1\">`null`</ph>.","pos":[167,224],"source":" Also, properties on the context object can return `null`."}]}],"pos":[9711,9936],"yaml":true,"extradata":"MT"},{"content":"An <xref href=\"System.ComponentModel.ITypeDescriptorContext\"></xref> that provides a format context.","nodes":[{"pos":[0,100],"content":"An <ph id=\"ph1\">&lt;xref href=\"System.ComponentModel.ITypeDescriptorContext\"&gt;&lt;/xref&gt;</ph> that provides a format context.","source":"An <xref href=\"System.ComponentModel.ITypeDescriptorContext\"></xref> that provides a format context."}],"pos":[10178,10279],"yaml":true},{"content":"A <xref href=\"System.Type\"></xref> that represents the type you wish to convert from.","nodes":[{"pos":[0,85],"content":"A <ph id=\"ph1\">&lt;xref href=\"System.Type\"&gt;&lt;/xref&gt;</ph> that represents the type you wish to convert from.","source":"A <xref href=\"System.Type\"></xref> that represents the type you wish to convert from."}],"pos":[10343,10429],"yaml":true},{"content":"`true` if this object can perform the conversion; otherwise, `false`.","nodes":[{"pos":[0,69],"content":"<ph id=\"ph1\">`true`</ph> if this object can perform the conversion; otherwise, <ph id=\"ph2\">`false`</ph>.","source":"`true` if this object can perform the conversion; otherwise, `false`."}],"pos":[10487,10559],"yaml":true},{"content":"Converts the given object to the reference type.","nodes":[{"pos":[0,48],"content":"Converts the given object to the reference type.","nodes":[{"content":"Converts the given object to the reference type.","pos":[0,48]}]}],"pos":[12264,12313],"yaml":true},{"content":"The `context` parameter can be used to extract additional information about the environment this converter is being invoked from. This can be `null`, so always check. Also, properties on the context object can return `null`.","nodes":[{"pos":[0,224],"content":"The `context` parameter can be used to extract additional information about the environment this converter is being invoked from. This can be `null`, so always check. Also, properties on the context object can return `null`.","nodes":[{"content":"The <ph id=\"ph1\">`context`</ph> parameter can be used to extract additional information about the environment this converter is being invoked from.","pos":[0,129],"source":"The `context` parameter can be used to extract additional information about the environment this converter is being invoked from."},{"content":"This can be <ph id=\"ph1\">`null`</ph>, so always check.","pos":[130,166],"source":" This can be `null`, so always check."},{"content":"Also, properties on the context object can return <ph id=\"ph1\">`null`</ph>.","pos":[167,224],"source":" Also, properties on the context object can return `null`."}]}],"pos":[12324,12549],"yaml":true,"extradata":"MT"},{"content":"An <xref href=\"System.ComponentModel.ITypeDescriptorContext\"></xref> that provides a format context.","nodes":[{"pos":[0,100],"content":"An <ph id=\"ph1\">&lt;xref href=\"System.ComponentModel.ITypeDescriptorContext\"&gt;&lt;/xref&gt;</ph> that provides a format context.","source":"An <xref href=\"System.ComponentModel.ITypeDescriptorContext\"></xref> that provides a format context."}],"pos":[12829,12930],"yaml":true},{"content":"A <xref href=\"System.Globalization.CultureInfo\"></xref> that specifies the culture used to represent the font.","nodes":[{"pos":[0,110],"content":"A <ph id=\"ph1\">&lt;xref href=\"System.Globalization.CultureInfo\"&gt;&lt;/xref&gt;</ph> that specifies the culture used to represent the font.","source":"A <xref href=\"System.Globalization.CultureInfo\"></xref> that specifies the culture used to represent the font."}],"pos":[13012,13123],"yaml":true},{"content":"The <xref href=\"System.Object\"></xref> to convert.","nodes":[{"pos":[0,50],"content":"The <ph id=\"ph1\">&lt;xref href=\"System.Object\"&gt;&lt;/xref&gt;</ph> to convert.","source":"The <xref href=\"System.Object\"></xref> to convert."}],"pos":[13184,13235],"yaml":true},{"content":"An <xref href=\"System.Object\"></xref> that represents the converted <code>value</code>.","nodes":[{"pos":[0,87],"content":"An <ph id=\"ph1\">&lt;xref href=\"System.Object\"&gt;&lt;/xref&gt;</ph> that represents the converted <bpt id=\"p1\">&lt;code&gt;</bpt><ph id=\"ph2\">value</ph><ept id=\"p1\">&lt;/code&gt;</ept>.","source":"An <xref href=\"System.Object\"></xref> that represents the converted <code>value</code>."}],"pos":[13292,13380],"yaml":true},{"content":"The conversion cannot be performed.","nodes":[{"pos":[0,35],"content":"The conversion cannot be performed.","nodes":[{"content":"The conversion cannot be performed.","pos":[0,35]}]}],"pos":[13562,13598],"yaml":true},{"content":"Converts the given value object to the reference type using the specified context and arguments.","nodes":[{"pos":[0,96],"content":"Converts the given value object to the reference type using the specified context and arguments.","nodes":[{"content":"Converts the given value object to the reference type using the specified context and arguments.","pos":[0,96]}]}],"pos":[15259,15356],"yaml":true},{"content":"This method most commonly converts types to and from string objects.  \n  \n The `context` parameter can be used to extract additional information about the environment this converter is being invoked from. This can be `null`, so always check. Also, properties on the context object can return `null`.","nodes":[{"pos":[0,68],"content":"This method most commonly converts types to and from string objects.","nodes":[{"content":"This method most commonly converts types to and from string objects.","pos":[0,68]}]},{"pos":[75,299],"content":"The `context` parameter can be used to extract additional information about the environment this converter is being invoked from. This can be `null`, so always check. Also, properties on the context object can return `null`.","nodes":[{"content":"The <ph id=\"ph1\">`context`</ph> parameter can be used to extract additional information about the environment this converter is being invoked from.","pos":[0,129],"source":"The `context` parameter can be used to extract additional information about the environment this converter is being invoked from."},{"content":"This can be <ph id=\"ph1\">`null`</ph>, so always check.","pos":[130,166],"source":" This can be `null`, so always check."},{"content":"Also, properties on the context object can return <ph id=\"ph1\">`null`</ph>.","pos":[167,224],"source":" Also, properties on the context object can return `null`."}]}],"pos":[15367,15671],"yaml":true,"extradata":"MT"},{"content":"An <xref href=\"System.ComponentModel.ITypeDescriptorContext\"></xref> that provides a format context.","nodes":[{"pos":[0,100],"content":"An <ph id=\"ph1\">&lt;xref href=\"System.ComponentModel.ITypeDescriptorContext\"&gt;&lt;/xref&gt;</ph> that provides a format context.","source":"An <xref href=\"System.ComponentModel.ITypeDescriptorContext\"></xref> that provides a format context."}],"pos":[15971,16072],"yaml":true},{"content":"A <xref href=\"System.Globalization.CultureInfo\"></xref> that specifies the culture used to represent the font.","nodes":[{"pos":[0,110],"content":"A <ph id=\"ph1\">&lt;xref href=\"System.Globalization.CultureInfo\"&gt;&lt;/xref&gt;</ph> that specifies the culture used to represent the font.","source":"A <xref href=\"System.Globalization.CultureInfo\"></xref> that specifies the culture used to represent the font."}],"pos":[16154,16265],"yaml":true},{"content":"The <xref href=\"System.Object\"></xref> to convert.","nodes":[{"pos":[0,50],"content":"The <ph id=\"ph1\">&lt;xref href=\"System.Object\"&gt;&lt;/xref&gt;</ph> to convert.","source":"The <xref href=\"System.Object\"></xref> to convert."}],"pos":[16326,16377],"yaml":true},{"content":"The type to convert the object to.","nodes":[{"pos":[0,34],"content":"The type to convert the object to.","nodes":[{"content":"The type to convert the object to.","pos":[0,34]}]}],"pos":[16446,16481],"yaml":true},{"content":"The converted object.","nodes":[{"pos":[0,21],"content":"The converted object.","nodes":[{"content":"The converted object.","pos":[0,21]}]}],"pos":[16538,16560],"yaml":true},{"content":"<code>destinationType</code> is `null`.","nodes":[{"pos":[0,39],"content":"<ph id=\"ph1\">&lt;code&gt;destinationType&lt;/code&gt;</ph> is <ph id=\"ph2\">`null`</ph>.","source":"<code>destinationType</code> is `null`."}],"pos":[16740,16780],"yaml":true},{"content":"The conversion cannot be performed.","nodes":[{"pos":[0,35],"content":"The conversion cannot be performed.","nodes":[{"content":"The conversion cannot be performed.","pos":[0,35]}]}],"pos":[16882,16918],"yaml":true},{"content":"Gets a collection of standard values for the reference data type.","nodes":[{"pos":[0,65],"content":"Gets a collection of standard values for the reference data type.","nodes":[{"content":"Gets a collection of standard values for the reference data type.","pos":[0,65]}]}],"pos":[18369,18435],"yaml":true},{"content":"The `context` parameter can be used to extract additional information about the environment this converter is being invoked from. This can be `null`, so always check. Also, properties on the context object can return `null`.","nodes":[{"pos":[0,224],"content":"The `context` parameter can be used to extract additional information about the environment this converter is being invoked from. This can be `null`, so always check. Also, properties on the context object can return `null`.","nodes":[{"content":"The <ph id=\"ph1\">`context`</ph> parameter can be used to extract additional information about the environment this converter is being invoked from.","pos":[0,129],"source":"The `context` parameter can be used to extract additional information about the environment this converter is being invoked from."},{"content":"This can be <ph id=\"ph1\">`null`</ph>, so always check.","pos":[130,166],"source":" This can be `null`, so always check."},{"content":"Also, properties on the context object can return <ph id=\"ph1\">`null`</ph>.","pos":[167,224],"source":" Also, properties on the context object can return `null`."}]}],"pos":[18446,18671],"yaml":true,"extradata":"MT"},{"content":"An <xref href=\"System.ComponentModel.ITypeDescriptorContext\"></xref> that provides a format context.","nodes":[{"pos":[0,100],"content":"An <ph id=\"ph1\">&lt;xref href=\"System.ComponentModel.ITypeDescriptorContext\"&gt;&lt;/xref&gt;</ph> that provides a format context.","source":"An <xref href=\"System.ComponentModel.ITypeDescriptorContext\"></xref> that provides a format context."}],"pos":[18955,19056],"yaml":true},{"content":"A <xref href=\"System.ComponentModel.TypeConverter.StandardValuesCollection\"></xref> that holds a standard set of valid values, or `null` if the data type does not support a standard set of values.","nodes":[{"pos":[0,196],"content":"A <ph id=\"ph1\">&lt;xref href=\"System.ComponentModel.TypeConverter.StandardValuesCollection\"&gt;&lt;/xref&gt;</ph> that holds a standard set of valid values, or <ph id=\"ph2\">`null`</ph> if the data type does not support a standard set of values.","source":"A <xref href=\"System.ComponentModel.TypeConverter.StandardValuesCollection\"></xref> that holds a standard set of valid values, or `null` if the data type does not support a standard set of values."}],"pos":[19160,19357],"yaml":true},{"content":"Gets a value indicating whether the list of standard values returned from <xref href=\"System.ComponentModel.ReferenceConverter.GetStandardValues(System.ComponentModel.ITypeDescriptorContext)\"></xref> is an exclusive list.","nodes":[{"pos":[0,221],"content":"Gets a value indicating whether the list of standard values returned from <ph id=\"ph1\">&lt;xref href=\"System.ComponentModel.ReferenceConverter.GetStandardValues(System.ComponentModel.ITypeDescriptorContext)\"&gt;&lt;/xref&gt;</ph> is an exclusive list.","source":"Gets a value indicating whether the list of standard values returned from <xref href=\"System.ComponentModel.ReferenceConverter.GetStandardValues(System.ComponentModel.ITypeDescriptorContext)\"></xref> is an exclusive list."}],"pos":[20951,21173],"yaml":true},{"content":"The `context` parameter can be used to extract additional information about the environment this converter is being invoked from. This can be `null`, so always check. Also, properties on the context object can return `null`.","nodes":[{"pos":[0,224],"content":"The `context` parameter can be used to extract additional information about the environment this converter is being invoked from. This can be `null`, so always check. Also, properties on the context object can return `null`.","nodes":[{"content":"The <ph id=\"ph1\">`context`</ph> parameter can be used to extract additional information about the environment this converter is being invoked from.","pos":[0,129],"source":"The `context` parameter can be used to extract additional information about the environment this converter is being invoked from."},{"content":"This can be <ph id=\"ph1\">`null`</ph>, so always check.","pos":[130,166],"source":" This can be `null`, so always check."},{"content":"Also, properties on the context object can return <ph id=\"ph1\">`null`</ph>.","pos":[167,224],"source":" Also, properties on the context object can return `null`."}]}],"pos":[21184,21409],"yaml":true,"extradata":"MT"},{"content":"An <xref href=\"System.ComponentModel.ITypeDescriptorContext\"></xref> that provides a format context.","nodes":[{"pos":[0,100],"content":"An <ph id=\"ph1\">&lt;xref href=\"System.ComponentModel.ITypeDescriptorContext\"&gt;&lt;/xref&gt;</ph> that provides a format context.","source":"An <xref href=\"System.ComponentModel.ITypeDescriptorContext\"></xref> that provides a format context."}],"pos":[21646,21747],"yaml":true},{"content":"`true` because the <xref href=\"System.ComponentModel.TypeConverter.StandardValuesCollection\"></xref> returned from <xref href=\"System.ComponentModel.ReferenceConverter.GetStandardValues(System.ComponentModel.ITypeDescriptorContext)\"></xref> is an exhaustive list of possible values. This method never returns `false`.","nodes":[{"pos":[0,317],"content":"`true` because the <xref href=\"System.ComponentModel.TypeConverter.StandardValuesCollection\"></xref> returned from <xref href=\"System.ComponentModel.ReferenceConverter.GetStandardValues(System.ComponentModel.ITypeDescriptorContext)\"></xref> is an exhaustive list of possible values. This method never returns `false`.","nodes":[{"content":"<ph id=\"ph1\">`true`</ph> because the <ph id=\"ph2\">&lt;xref href=\"System.ComponentModel.TypeConverter.StandardValuesCollection\"&gt;&lt;/xref&gt;</ph> returned from <ph id=\"ph3\">&lt;xref href=\"System.ComponentModel.ReferenceConverter.GetStandardValues(System.ComponentModel.ITypeDescriptorContext)\"&gt;&lt;/xref&gt;</ph> is an exhaustive list of possible values.","pos":[0,282],"source":"`true` because the <xref href=\"System.ComponentModel.TypeConverter.StandardValuesCollection\"></xref> returned from <xref href=\"System.ComponentModel.ReferenceConverter.GetStandardValues(System.ComponentModel.ITypeDescriptorContext)\"></xref> is an exhaustive list of possible values."},{"content":"This method never returns <ph id=\"ph1\">`false`</ph>.","pos":[283,317],"source":" This method never returns `false`."}]}],"pos":[21805,22125],"yaml":true},{"content":"Gets a value indicating whether this object supports a standard set of values that can be picked from a list.","nodes":[{"pos":[0,109],"content":"Gets a value indicating whether this object supports a standard set of values that can be picked from a list.","nodes":[{"content":"Gets a value indicating whether this object supports a standard set of values that can be picked from a list.","pos":[0,109]}]}],"pos":[23728,23838],"yaml":true},{"content":"The `context` parameter can be used to extract additional information about the environment this converter is being invoked from. This can be `null`, so always check. Also, properties on the context object can return `null`.","nodes":[{"pos":[0,224],"content":"The `context` parameter can be used to extract additional information about the environment this converter is being invoked from. This can be `null`, so always check. Also, properties on the context object can return `null`.","nodes":[{"content":"The <ph id=\"ph1\">`context`</ph> parameter can be used to extract additional information about the environment this converter is being invoked from.","pos":[0,129],"source":"The `context` parameter can be used to extract additional information about the environment this converter is being invoked from."},{"content":"This can be <ph id=\"ph1\">`null`</ph>, so always check.","pos":[130,166],"source":" This can be `null`, so always check."},{"content":"Also, properties on the context object can return <ph id=\"ph1\">`null`</ph>.","pos":[167,224],"source":" Also, properties on the context object can return `null`."}]}],"pos":[23849,24074],"yaml":true,"extradata":"MT"},{"content":"An <xref href=\"System.ComponentModel.ITypeDescriptorContext\"></xref> that provides a format context.","nodes":[{"pos":[0,100],"content":"An <ph id=\"ph1\">&lt;xref href=\"System.ComponentModel.ITypeDescriptorContext\"&gt;&lt;/xref&gt;</ph> that provides a format context.","source":"An <xref href=\"System.ComponentModel.ITypeDescriptorContext\"></xref> that provides a format context."}],"pos":[24311,24412],"yaml":true},{"content":"`true` because <xref href=\"System.ComponentModel.ReferenceConverter.GetStandardValues(System.ComponentModel.ITypeDescriptorContext)\"></xref> can be called to find a common set of values the object supports. This method never returns `false`.","nodes":[{"pos":[0,241],"content":"`true` because <xref href=\"System.ComponentModel.ReferenceConverter.GetStandardValues(System.ComponentModel.ITypeDescriptorContext)\"></xref> can be called to find a common set of values the object supports. This method never returns `false`.","nodes":[{"content":"<ph id=\"ph1\">`true`</ph> because <ph id=\"ph2\">&lt;xref href=\"System.ComponentModel.ReferenceConverter.GetStandardValues(System.ComponentModel.ITypeDescriptorContext)\"&gt;&lt;/xref&gt;</ph> can be called to find a common set of values the object supports.","pos":[0,206],"source":"`true` because <xref href=\"System.ComponentModel.ReferenceConverter.GetStandardValues(System.ComponentModel.ITypeDescriptorContext)\"></xref> can be called to find a common set of values the object supports."},{"content":"This method never returns <ph id=\"ph1\">`false`</ph>.","pos":[207,241],"source":" This method never returns `false`."}]}],"pos":[24470,24714],"yaml":true},{"content":"Returns a value indicating whether a particular value can be added to the standard values collection.","nodes":[{"pos":[0,101],"content":"Returns a value indicating whether a particular value can be added to the standard values collection.","nodes":[{"content":"Returns a value indicating whether a particular value can be added to the standard values collection.","pos":[0,101]}]}],"pos":[26311,26413],"yaml":true},{"content":"This method is called for each value that matches the type associated with this <xref:System.ComponentModel.ReferenceConverter> and for each component found that is of the associated type. By default, this method returns `true`, that is, it allows adding the value into the standard values collection.","nodes":[{"pos":[0,301],"content":"This method is called for each value that matches the type associated with this <xref:System.ComponentModel.ReferenceConverter> and for each component found that is of the associated type. By default, this method returns `true`, that is, it allows adding the value into the standard values collection.","nodes":[{"content":"This method is called for each value that matches the type associated with this <ph id=\"ph1\">&lt;xref:System.ComponentModel.ReferenceConverter&gt;</ph> and for each component found that is of the associated type.","pos":[0,188],"source":"This method is called for each value that matches the type associated with this <xref:System.ComponentModel.ReferenceConverter> and for each component found that is of the associated type."},{"content":"By default, this method returns <ph id=\"ph1\">`true`</ph>, that is, it allows adding the value into the standard values collection.","pos":[189,301],"source":" By default, this method returns `true`, that is, it allows adding the value into the standard values collection."}]}],"pos":[26424,26726],"yaml":true,"extradata":"MT"},{"content":"An <xref href=\"System.ComponentModel.ITypeDescriptorContext\"></xref> that provides an additional context.","nodes":[{"pos":[0,105],"content":"An <ph id=\"ph1\">&lt;xref href=\"System.ComponentModel.ITypeDescriptorContext\"&gt;&lt;/xref&gt;</ph> that provides an additional context.","source":"An <xref href=\"System.ComponentModel.ITypeDescriptorContext\"></xref> that provides an additional context."}],"pos":[26967,27073],"yaml":true},{"content":"The value to check.","nodes":[{"pos":[0,19],"content":"The value to check.","nodes":[{"content":"The value to check.","pos":[0,19]}]}],"pos":[27134,27154],"yaml":true},{"content":"`true` if the value is allowed and can be added to the standard values collection; `false` if the value cannot be added to the standard values collection.","nodes":[{"pos":[0,154],"content":"<ph id=\"ph1\">`true`</ph> if the value is allowed and can be added to the standard values collection; <ph id=\"ph2\">`false`</ph> if the value cannot be added to the standard values collection.","source":"`true` if the value is allowed and can be added to the standard values collection; `false` if the value cannot be added to the standard values collection."}],"pos":[27212,27369],"yaml":true}],"content":"### YamlMime:ManagedReference\nitems:\n- uid: System.ComponentModel.ReferenceConverter\n  commentId: T:System.ComponentModel.ReferenceConverter\n  id: ReferenceConverter\n  children:\n  - System.ComponentModel.ReferenceConverter.#ctor(System.Type)\n  - System.ComponentModel.ReferenceConverter.CanConvertFrom(System.ComponentModel.ITypeDescriptorContext,System.Type)\n  - System.ComponentModel.ReferenceConverter.ConvertFrom(System.ComponentModel.ITypeDescriptorContext,System.Globalization.CultureInfo,System.Object)\n  - System.ComponentModel.ReferenceConverter.ConvertTo(System.ComponentModel.ITypeDescriptorContext,System.Globalization.CultureInfo,System.Object,System.Type)\n  - System.ComponentModel.ReferenceConverter.GetStandardValues(System.ComponentModel.ITypeDescriptorContext)\n  - System.ComponentModel.ReferenceConverter.GetStandardValuesExclusive(System.ComponentModel.ITypeDescriptorContext)\n  - System.ComponentModel.ReferenceConverter.GetStandardValuesSupported(System.ComponentModel.ITypeDescriptorContext)\n  - System.ComponentModel.ReferenceConverter.IsValueAllowed(System.ComponentModel.ITypeDescriptorContext,System.Object)\n  langs:\n  - csharp\n  name: ReferenceConverter\n  nameWithType: ReferenceConverter\n  fullName: System.ComponentModel.ReferenceConverter\n  type: Class\n  assemblies:\n  - System\n  - netstandard\n  - System.ComponentModel.TypeConverter\n  namespace: System.ComponentModel\n  summary: Provides a type converter to convert object references to and from other representations.\n  remarks: \"The <xref:System.ComponentModel.ReferenceConverter> is typically used within the context of sited components or a design environment. Without a component site or a usable <xref:System.ComponentModel.ITypeDescriptorContext>, this converter is of little use.  \\n  \\n This converter converts a reference of an object that implements the <xref:System.ComponentModel.IComponent> interface and displays its properties in the **Properties** window.  \\n  \\n For more information about type converters, see the <xref:System.ComponentModel.TypeConverter> base class and [How to: Implement a Type Converter](http://msdn.microsoft.com/library/90373a3f-d8c8-492d-841c-945d62393c56).  \\n  \\n> [!NOTE]\\n>  You should never create an instance of the <xref:System.ComponentModel.ReferenceConverter> class. Instead, call the <xref:System.ComponentModel.TypeDescriptor.GetConverter%2A> method of the <xref:System.ComponentModel.TypeDescriptor> class. For more information, see the examples in the <xref:System.ComponentModel.TypeConverter> base class.  \\n  \\n This class provides the <xref:System.ComponentModel.ReferenceConverter.IsValueAllowed%2A> method to check whether a particular value can be added to the standard values collection. If you do not want to add the value to the collection, override this method.\"\n  syntax:\n    content: 'public class ReferenceConverter : System.ComponentModel.TypeConverter'\n  inheritance:\n  - System.Object\n  - System.ComponentModel.TypeConverter\n  derivedClasses:\n  - System.ComponentModel.ComponentConverter\n  implements: []\n  inheritedMembers:\n  - System.ComponentModel.TypeConverter.CanConvertFrom(System.Type)\n  - System.ComponentModel.TypeConverter.CanConvertTo(System.ComponentModel.ITypeDescriptorContext,System.Type)\n  - System.ComponentModel.TypeConverter.CanConvertTo(System.Type)\n  - System.ComponentModel.TypeConverter.ConvertFrom(System.Object)\n  - System.ComponentModel.TypeConverter.ConvertFromInvariantString(System.ComponentModel.ITypeDescriptorContext,System.String)\n  - System.ComponentModel.TypeConverter.ConvertFromInvariantString(System.String)\n  - System.ComponentModel.TypeConverter.ConvertFromString(System.ComponentModel.ITypeDescriptorContext,System.Globalization.CultureInfo,System.String)\n  - System.ComponentModel.TypeConverter.ConvertFromString(System.ComponentModel.ITypeDescriptorContext,System.String)\n  - System.ComponentModel.TypeConverter.ConvertFromString(System.String)\n  - System.ComponentModel.TypeConverter.ConvertTo(System.Object,System.Type)\n  - System.ComponentModel.TypeConverter.ConvertToInvariantString(System.ComponentModel.ITypeDescriptorContext,System.Object)\n  - System.ComponentModel.TypeConverter.ConvertToInvariantString(System.Object)\n  - System.ComponentModel.TypeConverter.ConvertToString(System.ComponentModel.ITypeDescriptorContext,System.Globalization.CultureInfo,System.Object)\n  - System.ComponentModel.TypeConverter.ConvertToString(System.ComponentModel.ITypeDescriptorContext,System.Object)\n  - System.ComponentModel.TypeConverter.ConvertToString(System.Object)\n  - System.ComponentModel.TypeConverter.CreateInstance(System.Collections.IDictionary)\n  - System.ComponentModel.TypeConverter.CreateInstance(System.ComponentModel.ITypeDescriptorContext,System.Collections.IDictionary)\n  - System.ComponentModel.TypeConverter.GetConvertFromException(System.Object)\n  - System.ComponentModel.TypeConverter.GetConvertToException(System.Object,System.Type)\n  - System.ComponentModel.TypeConverter.GetCreateInstanceSupported\n  - System.ComponentModel.TypeConverter.GetCreateInstanceSupported(System.ComponentModel.ITypeDescriptorContext)\n  - System.ComponentModel.TypeConverter.GetProperties(System.ComponentModel.ITypeDescriptorContext,System.Object)\n  - System.ComponentModel.TypeConverter.GetProperties(System.ComponentModel.ITypeDescriptorContext,System.Object,System.Attribute[])\n  - System.ComponentModel.TypeConverter.GetProperties(System.Object)\n  - System.ComponentModel.TypeConverter.GetPropertiesSupported\n  - System.ComponentModel.TypeConverter.GetPropertiesSupported(System.ComponentModel.ITypeDescriptorContext)\n  - System.ComponentModel.TypeConverter.GetStandardValues\n  - System.ComponentModel.TypeConverter.GetStandardValuesExclusive\n  - System.ComponentModel.TypeConverter.GetStandardValuesSupported\n  - System.ComponentModel.TypeConverter.IsValid(System.ComponentModel.ITypeDescriptorContext,System.Object)\n  - System.ComponentModel.TypeConverter.IsValid(System.Object)\n  - System.ComponentModel.TypeConverter.SortProperties(System.ComponentModel.PropertyDescriptorCollection,System.String[])\n  - System.Object.Equals(System.Object)\n  - System.Object.Equals(System.Object,System.Object)\n  - System.Object.GetHashCode\n  - System.Object.GetType\n  - System.Object.MemberwiseClone\n  - System.Object.ReferenceEquals(System.Object,System.Object)\n  - System.Object.ToString\n  version:\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - netstandard-2.0\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  monikers:\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - netstandard-2.0\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.ComponentModel/ReferenceConverter.xml\n  ms.technology:\n  - dotnet-standard\n  author: stevehoag\n  ms.author: shoag\n  manager: wpickett\n- uid: System.ComponentModel.ReferenceConverter.#ctor(System.Type)\n  commentId: M:System.ComponentModel.ReferenceConverter.#ctor(System.Type)\n  id: '#ctor(System.Type)'\n  parent: System.ComponentModel.ReferenceConverter\n  langs:\n  - csharp\n  name: ReferenceConverter(Type)\n  nameWithType: ReferenceConverter.ReferenceConverter(Type)\n  fullName: ReferenceConverter.ReferenceConverter(Type)\n  type: Constructor\n  assemblies:\n  - System\n  - netstandard\n  - System.ComponentModel.TypeConverter\n  namespace: System.ComponentModel\n  summary: Initializes a new instance of the <xref href=\"System.ComponentModel.ReferenceConverter\"></xref> class.\n  syntax:\n    content: public ReferenceConverter (Type type);\n    parameters:\n    - id: type\n      type: System.Type\n      description: A <xref href=\"System.Type\"></xref> that represents the type to associate with this reference converter.\n  overload: System.ComponentModel.ReferenceConverter.#ctor*\n  exceptions: []\n  version:\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - netstandard-2.0\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  monikers:\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - netstandard-2.0\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.ComponentModel/ReferenceConverter.xml\n  ms.technology:\n  - dotnet-standard\n  author: stevehoag\n  ms.author: shoag\n  manager: wpickett\n- uid: System.ComponentModel.ReferenceConverter.CanConvertFrom(System.ComponentModel.ITypeDescriptorContext,System.Type)\n  commentId: M:System.ComponentModel.ReferenceConverter.CanConvertFrom(System.ComponentModel.ITypeDescriptorContext,System.Type)\n  id: CanConvertFrom(System.ComponentModel.ITypeDescriptorContext,System.Type)\n  parent: System.ComponentModel.ReferenceConverter\n  langs:\n  - csharp\n  name: CanConvertFrom(ITypeDescriptorContext, Type)\n  nameWithType: ReferenceConverter.CanConvertFrom(ITypeDescriptorContext, Type)\n  fullName: ReferenceConverter.CanConvertFrom(ITypeDescriptorContext, Type)\n  type: Method\n  assemblies:\n  - System\n  - netstandard\n  - System.ComponentModel.TypeConverter\n  namespace: System.ComponentModel\n  summary: Gets a value indicating whether this converter can convert an object in the given source type to a reference object using the specified context.\n  remarks: The `context` parameter can be used to extract additional information about the environment this converter is being invoked from. This can be `null`, so always check. Also, properties on the context object can return `null`.\n  syntax:\n    content: public override bool CanConvertFrom (System.ComponentModel.ITypeDescriptorContext context, Type sourceType);\n    parameters:\n    - id: context\n      type: System.ComponentModel.ITypeDescriptorContext\n      description: An <xref href=\"System.ComponentModel.ITypeDescriptorContext\"></xref> that provides a format context.\n    - id: sourceType\n      type: System.Type\n      description: A <xref href=\"System.Type\"></xref> that represents the type you wish to convert from.\n    return:\n      type: System.Boolean\n      description: '`true` if this object can perform the conversion; otherwise, `false`.'\n  overload: System.ComponentModel.ReferenceConverter.CanConvertFrom*\n  exceptions: []\n  version:\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - netstandard-2.0\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  monikers:\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - netstandard-2.0\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.ComponentModel/ReferenceConverter.xml\n  ms.technology:\n  - dotnet-standard\n  author: stevehoag\n  ms.author: shoag\n  manager: wpickett\n- uid: System.ComponentModel.ReferenceConverter.ConvertFrom(System.ComponentModel.ITypeDescriptorContext,System.Globalization.CultureInfo,System.Object)\n  commentId: M:System.ComponentModel.ReferenceConverter.ConvertFrom(System.ComponentModel.ITypeDescriptorContext,System.Globalization.CultureInfo,System.Object)\n  id: ConvertFrom(System.ComponentModel.ITypeDescriptorContext,System.Globalization.CultureInfo,System.Object)\n  parent: System.ComponentModel.ReferenceConverter\n  langs:\n  - csharp\n  name: ConvertFrom(ITypeDescriptorContext, CultureInfo, Object)\n  nameWithType: ReferenceConverter.ConvertFrom(ITypeDescriptorContext, CultureInfo, Object)\n  fullName: ReferenceConverter.ConvertFrom(ITypeDescriptorContext, CultureInfo, Object)\n  type: Method\n  assemblies:\n  - System\n  - netstandard\n  - System.ComponentModel.TypeConverter\n  namespace: System.ComponentModel\n  summary: Converts the given object to the reference type.\n  remarks: The `context` parameter can be used to extract additional information about the environment this converter is being invoked from. This can be `null`, so always check. Also, properties on the context object can return `null`.\n  syntax:\n    content: public override object ConvertFrom (System.ComponentModel.ITypeDescriptorContext context, System.Globalization.CultureInfo culture, object value);\n    parameters:\n    - id: context\n      type: System.ComponentModel.ITypeDescriptorContext\n      description: An <xref href=\"System.ComponentModel.ITypeDescriptorContext\"></xref> that provides a format context.\n    - id: culture\n      type: System.Globalization.CultureInfo\n      description: A <xref href=\"System.Globalization.CultureInfo\"></xref> that specifies the culture used to represent the font.\n    - id: value\n      type: System.Object\n      description: The <xref href=\"System.Object\"></xref> to convert.\n    return:\n      type: System.Object\n      description: An <xref href=\"System.Object\"></xref> that represents the converted <code>value</code>.\n  overload: System.ComponentModel.ReferenceConverter.ConvertFrom*\n  exceptions:\n  - type: System.NotSupportedException\n    commentId: T:System.NotSupportedException\n    description: The conversion cannot be performed.\n  version:\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - netstandard-2.0\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  monikers:\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - netstandard-2.0\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.ComponentModel/ReferenceConverter.xml\n  ms.technology:\n  - dotnet-standard\n  author: stevehoag\n  ms.author: shoag\n  manager: wpickett\n- uid: System.ComponentModel.ReferenceConverter.ConvertTo(System.ComponentModel.ITypeDescriptorContext,System.Globalization.CultureInfo,System.Object,System.Type)\n  commentId: M:System.ComponentModel.ReferenceConverter.ConvertTo(System.ComponentModel.ITypeDescriptorContext,System.Globalization.CultureInfo,System.Object,System.Type)\n  id: ConvertTo(System.ComponentModel.ITypeDescriptorContext,System.Globalization.CultureInfo,System.Object,System.Type)\n  parent: System.ComponentModel.ReferenceConverter\n  langs:\n  - csharp\n  name: ConvertTo(ITypeDescriptorContext, CultureInfo, Object, Type)\n  nameWithType: ReferenceConverter.ConvertTo(ITypeDescriptorContext, CultureInfo, Object, Type)\n  fullName: ReferenceConverter.ConvertTo(ITypeDescriptorContext, CultureInfo, Object, Type)\n  type: Method\n  assemblies:\n  - System\n  - netstandard\n  - System.ComponentModel.TypeConverter\n  namespace: System.ComponentModel\n  summary: Converts the given value object to the reference type using the specified context and arguments.\n  remarks: \"This method most commonly converts types to and from string objects.  \\n  \\n The `context` parameter can be used to extract additional information about the environment this converter is being invoked from. This can be `null`, so always check. Also, properties on the context object can return `null`.\"\n  syntax:\n    content: public override object ConvertTo (System.ComponentModel.ITypeDescriptorContext context, System.Globalization.CultureInfo culture, object value, Type destinationType);\n    parameters:\n    - id: context\n      type: System.ComponentModel.ITypeDescriptorContext\n      description: An <xref href=\"System.ComponentModel.ITypeDescriptorContext\"></xref> that provides a format context.\n    - id: culture\n      type: System.Globalization.CultureInfo\n      description: A <xref href=\"System.Globalization.CultureInfo\"></xref> that specifies the culture used to represent the font.\n    - id: value\n      type: System.Object\n      description: The <xref href=\"System.Object\"></xref> to convert.\n    - id: destinationType\n      type: System.Type\n      description: The type to convert the object to.\n    return:\n      type: System.Object\n      description: The converted object.\n  overload: System.ComponentModel.ReferenceConverter.ConvertTo*\n  exceptions:\n  - type: System.ArgumentNullException\n    commentId: T:System.ArgumentNullException\n    description: <code>destinationType</code> is `null`.\n  - type: System.NotSupportedException\n    commentId: T:System.NotSupportedException\n    description: The conversion cannot be performed.\n  version:\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - netstandard-2.0\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  monikers:\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - netstandard-2.0\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.ComponentModel/ReferenceConverter.xml\n  ms.technology:\n  - dotnet-standard\n  author: stevehoag\n  ms.author: shoag\n  manager: wpickett\n- uid: System.ComponentModel.ReferenceConverter.GetStandardValues(System.ComponentModel.ITypeDescriptorContext)\n  commentId: M:System.ComponentModel.ReferenceConverter.GetStandardValues(System.ComponentModel.ITypeDescriptorContext)\n  id: GetStandardValues(System.ComponentModel.ITypeDescriptorContext)\n  parent: System.ComponentModel.ReferenceConverter\n  langs:\n  - csharp\n  name: GetStandardValues(ITypeDescriptorContext)\n  nameWithType: ReferenceConverter.GetStandardValues(ITypeDescriptorContext)\n  fullName: ReferenceConverter.GetStandardValues(ITypeDescriptorContext)\n  type: Method\n  assemblies:\n  - System\n  - netstandard\n  - System.ComponentModel.TypeConverter\n  namespace: System.ComponentModel\n  summary: Gets a collection of standard values for the reference data type.\n  remarks: The `context` parameter can be used to extract additional information about the environment this converter is being invoked from. This can be `null`, so always check. Also, properties on the context object can return `null`.\n  syntax:\n    content: public override System.ComponentModel.TypeConverter.StandardValuesCollection GetStandardValues (System.ComponentModel.ITypeDescriptorContext context);\n    parameters:\n    - id: context\n      type: System.ComponentModel.ITypeDescriptorContext\n      description: An <xref href=\"System.ComponentModel.ITypeDescriptorContext\"></xref> that provides a format context.\n    return:\n      type: System.ComponentModel.TypeConverter+StandardValuesCollection\n      description: A <xref href=\"System.ComponentModel.TypeConverter.StandardValuesCollection\"></xref> that holds a standard set of valid values, or `null` if the data type does not support a standard set of values.\n  overload: System.ComponentModel.ReferenceConverter.GetStandardValues*\n  exceptions: []\n  version:\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - netstandard-2.0\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  monikers:\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - netstandard-2.0\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.ComponentModel/ReferenceConverter.xml\n  ms.technology:\n  - dotnet-standard\n  author: stevehoag\n  ms.author: shoag\n  manager: wpickett\n- uid: System.ComponentModel.ReferenceConverter.GetStandardValuesExclusive(System.ComponentModel.ITypeDescriptorContext)\n  commentId: M:System.ComponentModel.ReferenceConverter.GetStandardValuesExclusive(System.ComponentModel.ITypeDescriptorContext)\n  id: GetStandardValuesExclusive(System.ComponentModel.ITypeDescriptorContext)\n  parent: System.ComponentModel.ReferenceConverter\n  langs:\n  - csharp\n  name: GetStandardValuesExclusive(ITypeDescriptorContext)\n  nameWithType: ReferenceConverter.GetStandardValuesExclusive(ITypeDescriptorContext)\n  fullName: ReferenceConverter.GetStandardValuesExclusive(ITypeDescriptorContext)\n  type: Method\n  assemblies:\n  - System\n  - netstandard\n  - System.ComponentModel.TypeConverter\n  namespace: System.ComponentModel\n  summary: Gets a value indicating whether the list of standard values returned from <xref href=\"System.ComponentModel.ReferenceConverter.GetStandardValues(System.ComponentModel.ITypeDescriptorContext)\"></xref> is an exclusive list.\n  remarks: The `context` parameter can be used to extract additional information about the environment this converter is being invoked from. This can be `null`, so always check. Also, properties on the context object can return `null`.\n  syntax:\n    content: public override bool GetStandardValuesExclusive (System.ComponentModel.ITypeDescriptorContext context);\n    parameters:\n    - id: context\n      type: System.ComponentModel.ITypeDescriptorContext\n      description: An <xref href=\"System.ComponentModel.ITypeDescriptorContext\"></xref> that provides a format context.\n    return:\n      type: System.Boolean\n      description: '`true` because the <xref href=\"System.ComponentModel.TypeConverter.StandardValuesCollection\"></xref> returned from <xref href=\"System.ComponentModel.ReferenceConverter.GetStandardValues(System.ComponentModel.ITypeDescriptorContext)\"></xref> is an exhaustive list of possible values. This method never returns `false`.'\n  overload: System.ComponentModel.ReferenceConverter.GetStandardValuesExclusive*\n  exceptions: []\n  version:\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - netstandard-2.0\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  monikers:\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - netstandard-2.0\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.ComponentModel/ReferenceConverter.xml\n  ms.technology:\n  - dotnet-standard\n  author: stevehoag\n  ms.author: shoag\n  manager: wpickett\n- uid: System.ComponentModel.ReferenceConverter.GetStandardValuesSupported(System.ComponentModel.ITypeDescriptorContext)\n  commentId: M:System.ComponentModel.ReferenceConverter.GetStandardValuesSupported(System.ComponentModel.ITypeDescriptorContext)\n  id: GetStandardValuesSupported(System.ComponentModel.ITypeDescriptorContext)\n  parent: System.ComponentModel.ReferenceConverter\n  langs:\n  - csharp\n  name: GetStandardValuesSupported(ITypeDescriptorContext)\n  nameWithType: ReferenceConverter.GetStandardValuesSupported(ITypeDescriptorContext)\n  fullName: ReferenceConverter.GetStandardValuesSupported(ITypeDescriptorContext)\n  type: Method\n  assemblies:\n  - System\n  - netstandard\n  - System.ComponentModel.TypeConverter\n  namespace: System.ComponentModel\n  summary: Gets a value indicating whether this object supports a standard set of values that can be picked from a list.\n  remarks: The `context` parameter can be used to extract additional information about the environment this converter is being invoked from. This can be `null`, so always check. Also, properties on the context object can return `null`.\n  syntax:\n    content: public override bool GetStandardValuesSupported (System.ComponentModel.ITypeDescriptorContext context);\n    parameters:\n    - id: context\n      type: System.ComponentModel.ITypeDescriptorContext\n      description: An <xref href=\"System.ComponentModel.ITypeDescriptorContext\"></xref> that provides a format context.\n    return:\n      type: System.Boolean\n      description: '`true` because <xref href=\"System.ComponentModel.ReferenceConverter.GetStandardValues(System.ComponentModel.ITypeDescriptorContext)\"></xref> can be called to find a common set of values the object supports. This method never returns `false`.'\n  overload: System.ComponentModel.ReferenceConverter.GetStandardValuesSupported*\n  exceptions: []\n  version:\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - netstandard-2.0\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  monikers:\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - netstandard-2.0\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.ComponentModel/ReferenceConverter.xml\n  ms.technology:\n  - dotnet-standard\n  author: stevehoag\n  ms.author: shoag\n  manager: wpickett\n- uid: System.ComponentModel.ReferenceConverter.IsValueAllowed(System.ComponentModel.ITypeDescriptorContext,System.Object)\n  commentId: M:System.ComponentModel.ReferenceConverter.IsValueAllowed(System.ComponentModel.ITypeDescriptorContext,System.Object)\n  id: IsValueAllowed(System.ComponentModel.ITypeDescriptorContext,System.Object)\n  parent: System.ComponentModel.ReferenceConverter\n  langs:\n  - csharp\n  name: IsValueAllowed(ITypeDescriptorContext, Object)\n  nameWithType: ReferenceConverter.IsValueAllowed(ITypeDescriptorContext, Object)\n  fullName: ReferenceConverter.IsValueAllowed(ITypeDescriptorContext, Object)\n  type: Method\n  assemblies:\n  - System\n  - netstandard\n  - System.ComponentModel.TypeConverter\n  namespace: System.ComponentModel\n  summary: Returns a value indicating whether a particular value can be added to the standard values collection.\n  remarks: This method is called for each value that matches the type associated with this <xref:System.ComponentModel.ReferenceConverter> and for each component found that is of the associated type. By default, this method returns `true`, that is, it allows adding the value into the standard values collection.\n  syntax:\n    content: protected virtual bool IsValueAllowed (System.ComponentModel.ITypeDescriptorContext context, object value);\n    parameters:\n    - id: context\n      type: System.ComponentModel.ITypeDescriptorContext\n      description: An <xref href=\"System.ComponentModel.ITypeDescriptorContext\"></xref> that provides an additional context.\n    - id: value\n      type: System.Object\n      description: The value to check.\n    return:\n      type: System.Boolean\n      description: '`true` if the value is allowed and can be added to the standard values collection; `false` if the value cannot be added to the standard values collection.'\n  overload: System.ComponentModel.ReferenceConverter.IsValueAllowed*\n  exceptions: []\n  version:\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - netstandard-2.0\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  monikers:\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - netstandard-2.0\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.ComponentModel/ReferenceConverter.xml\n  ms.technology:\n  - dotnet-standard\n  author: stevehoag\n  ms.author: shoag\n  manager: wpickett\nreferences:\n- uid: System.ComponentModel.TypeConverter\n  parent: System.ComponentModel\n  isExternal: false\n  name: TypeConverter\n  nameWithType: TypeConverter\n  fullName: System.ComponentModel.TypeConverter\n- uid: System.NotSupportedException\n  parent: System\n  isExternal: false\n  name: NotSupportedException\n  nameWithType: NotSupportedException\n  fullName: System.NotSupportedException\n- uid: System.ArgumentNullException\n  parent: System\n  isExternal: false\n  name: ArgumentNullException\n  nameWithType: ArgumentNullException\n  fullName: System.ArgumentNullException\n- uid: System.ComponentModel.ReferenceConverter.#ctor(System.Type)\n  parent: System.ComponentModel.ReferenceConverter\n  isExternal: false\n  name: ReferenceConverter(Type)\n  nameWithType: ReferenceConverter.ReferenceConverter(Type)\n  fullName: ReferenceConverter.ReferenceConverter(Type)\n- uid: System.Type\n  parent: System\n  isExternal: false\n  name: Type\n  nameWithType: Type\n  fullName: System.Type\n- uid: System.ComponentModel.ReferenceConverter.CanConvertFrom(System.ComponentModel.ITypeDescriptorContext,System.Type)\n  parent: System.ComponentModel.ReferenceConverter\n  isExternal: false\n  name: CanConvertFrom(ITypeDescriptorContext, Type)\n  nameWithType: ReferenceConverter.CanConvertFrom(ITypeDescriptorContext, Type)\n  fullName: ReferenceConverter.CanConvertFrom(ITypeDescriptorContext, Type)\n- uid: System.Boolean\n  parent: System\n  isExternal: false\n  name: Boolean\n  nameWithType: Boolean\n  fullName: System.Boolean\n- uid: System.ComponentModel.ITypeDescriptorContext\n  parent: System.ComponentModel\n  isExternal: false\n  name: ITypeDescriptorContext\n  nameWithType: ITypeDescriptorContext\n  fullName: System.ComponentModel.ITypeDescriptorContext\n- uid: System.ComponentModel.ReferenceConverter.ConvertFrom(System.ComponentModel.ITypeDescriptorContext,System.Globalization.CultureInfo,System.Object)\n  parent: System.ComponentModel.ReferenceConverter\n  isExternal: false\n  name: ConvertFrom(ITypeDescriptorContext, CultureInfo, Object)\n  nameWithType: ReferenceConverter.ConvertFrom(ITypeDescriptorContext, CultureInfo, Object)\n  fullName: ReferenceConverter.ConvertFrom(ITypeDescriptorContext, CultureInfo, Object)\n- uid: System.Object\n  parent: System\n  isExternal: false\n  name: Object\n  nameWithType: Object\n  fullName: System.Object\n- uid: System.Globalization.CultureInfo\n  parent: System.Globalization\n  isExternal: false\n  name: CultureInfo\n  nameWithType: CultureInfo\n  fullName: System.Globalization.CultureInfo\n- uid: System.ComponentModel.ReferenceConverter.ConvertTo(System.ComponentModel.ITypeDescriptorContext,System.Globalization.CultureInfo,System.Object,System.Type)\n  parent: System.ComponentModel.ReferenceConverter\n  isExternal: false\n  name: ConvertTo(ITypeDescriptorContext, CultureInfo, Object, Type)\n  nameWithType: ReferenceConverter.ConvertTo(ITypeDescriptorContext, CultureInfo, Object, Type)\n  fullName: ReferenceConverter.ConvertTo(ITypeDescriptorContext, CultureInfo, Object, Type)\n- uid: System.ComponentModel.ReferenceConverter.GetStandardValues(System.ComponentModel.ITypeDescriptorContext)\n  parent: System.ComponentModel.ReferenceConverter\n  isExternal: false\n  name: GetStandardValues(ITypeDescriptorContext)\n  nameWithType: ReferenceConverter.GetStandardValues(ITypeDescriptorContext)\n  fullName: ReferenceConverter.GetStandardValues(ITypeDescriptorContext)\n- uid: System.ComponentModel.ReferenceConverter.GetStandardValuesExclusive(System.ComponentModel.ITypeDescriptorContext)\n  parent: System.ComponentModel.ReferenceConverter\n  isExternal: false\n  name: GetStandardValuesExclusive(ITypeDescriptorContext)\n  nameWithType: ReferenceConverter.GetStandardValuesExclusive(ITypeDescriptorContext)\n  fullName: ReferenceConverter.GetStandardValuesExclusive(ITypeDescriptorContext)\n- uid: System.ComponentModel.ReferenceConverter.GetStandardValuesSupported(System.ComponentModel.ITypeDescriptorContext)\n  parent: System.ComponentModel.ReferenceConverter\n  isExternal: false\n  name: GetStandardValuesSupported(ITypeDescriptorContext)\n  nameWithType: ReferenceConverter.GetStandardValuesSupported(ITypeDescriptorContext)\n  fullName: ReferenceConverter.GetStandardValuesSupported(ITypeDescriptorContext)\n- uid: System.ComponentModel.ReferenceConverter.IsValueAllowed(System.ComponentModel.ITypeDescriptorContext,System.Object)\n  parent: System.ComponentModel.ReferenceConverter\n  isExternal: false\n  name: IsValueAllowed(ITypeDescriptorContext, Object)\n  nameWithType: ReferenceConverter.IsValueAllowed(ITypeDescriptorContext, Object)\n  fullName: ReferenceConverter.IsValueAllowed(ITypeDescriptorContext, Object)\n- uid: System.ComponentModel.ReferenceConverter.#ctor*\n  parent: System.ComponentModel.ReferenceConverter\n  isExternal: false\n  name: ReferenceConverter\n  nameWithType: ReferenceConverter.ReferenceConverter\n  fullName: ReferenceConverter.ReferenceConverter\n  monikers:\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - netstandard-2.0\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.ComponentModel/ReferenceConverter.xml\n- uid: System.ComponentModel.ReferenceConverter.CanConvertFrom*\n  parent: System.ComponentModel.ReferenceConverter\n  isExternal: false\n  name: CanConvertFrom\n  nameWithType: ReferenceConverter.CanConvertFrom\n  fullName: ReferenceConverter.CanConvertFrom\n  monikers:\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - netstandard-2.0\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.ComponentModel/ReferenceConverter.xml\n- uid: System.ComponentModel.ReferenceConverter.ConvertFrom*\n  parent: System.ComponentModel.ReferenceConverter\n  isExternal: false\n  name: ConvertFrom\n  nameWithType: ReferenceConverter.ConvertFrom\n  fullName: ReferenceConverter.ConvertFrom\n  monikers:\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - netstandard-2.0\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.ComponentModel/ReferenceConverter.xml\n- uid: System.ComponentModel.ReferenceConverter.ConvertTo*\n  parent: System.ComponentModel.ReferenceConverter\n  isExternal: false\n  name: ConvertTo\n  nameWithType: ReferenceConverter.ConvertTo\n  fullName: ReferenceConverter.ConvertTo\n  monikers:\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - netstandard-2.0\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.ComponentModel/ReferenceConverter.xml\n- uid: System.ComponentModel.ReferenceConverter.GetStandardValues*\n  parent: System.ComponentModel.ReferenceConverter\n  isExternal: false\n  name: GetStandardValues\n  nameWithType: ReferenceConverter.GetStandardValues\n  fullName: ReferenceConverter.GetStandardValues\n  monikers:\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - netstandard-2.0\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.ComponentModel/ReferenceConverter.xml\n- uid: System.ComponentModel.ReferenceConverter.GetStandardValuesExclusive*\n  parent: System.ComponentModel.ReferenceConverter\n  isExternal: false\n  name: GetStandardValuesExclusive\n  nameWithType: ReferenceConverter.GetStandardValuesExclusive\n  fullName: ReferenceConverter.GetStandardValuesExclusive\n  monikers:\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - netstandard-2.0\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.ComponentModel/ReferenceConverter.xml\n- uid: System.ComponentModel.ReferenceConverter.GetStandardValuesSupported*\n  parent: System.ComponentModel.ReferenceConverter\n  isExternal: false\n  name: GetStandardValuesSupported\n  nameWithType: ReferenceConverter.GetStandardValuesSupported\n  fullName: ReferenceConverter.GetStandardValuesSupported\n  monikers:\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - netstandard-2.0\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.ComponentModel/ReferenceConverter.xml\n- uid: System.ComponentModel.ReferenceConverter.IsValueAllowed*\n  parent: System.ComponentModel.ReferenceConverter\n  isExternal: false\n  name: IsValueAllowed\n  nameWithType: ReferenceConverter.IsValueAllowed\n  fullName: ReferenceConverter.IsValueAllowed\n  monikers:\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - netstandard-2.0\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.ComponentModel/ReferenceConverter.xml\n- uid: System.Object.Equals(System.Object)\n  parent: System.Object\n  isExternal: false\n  name: Equals(Object)\n  nameWithType: Object.Equals(Object)\n  fullName: Object.Equals(Object)\n- uid: System.Object.Equals(System.Object,System.Object)\n  parent: System.Object\n  isExternal: false\n  name: Equals(Object, Object)\n  nameWithType: Object.Equals(Object, Object)\n  fullName: Object.Equals(Object, Object)\n- uid: System.Object.GetHashCode\n  parent: System.Object\n  isExternal: false\n  name: GetHashCode()\n  nameWithType: Object.GetHashCode()\n  fullName: Object.GetHashCode()\n- uid: System.Object.GetType\n  parent: System.Object\n  isExternal: false\n  name: GetType()\n  nameWithType: Object.GetType()\n  fullName: Object.GetType()\n- uid: System.Object.MemberwiseClone\n  parent: System.Object\n  isExternal: false\n  name: MemberwiseClone()\n  nameWithType: Object.MemberwiseClone()\n  fullName: Object.MemberwiseClone()\n- uid: System.Object.ReferenceEquals(System.Object,System.Object)\n  parent: System.Object\n  isExternal: false\n  name: ReferenceEquals(Object, Object)\n  nameWithType: Object.ReferenceEquals(Object, Object)\n  fullName: Object.ReferenceEquals(Object, Object)\n- uid: System.Object.ToString\n  parent: System.Object\n  isExternal: false\n  name: ToString()\n  nameWithType: Object.ToString()\n  fullName: Object.ToString()\n- uid: System.ComponentModel.TypeConverter.CanConvertFrom(System.Type)\n  parent: System.ComponentModel.TypeConverter\n  isExternal: false\n  name: CanConvertFrom(Type)\n  nameWithType: TypeConverter.CanConvertFrom(Type)\n  fullName: TypeConverter.CanConvertFrom(Type)\n- uid: System.ComponentModel.TypeConverter.CanConvertTo(System.Type)\n  parent: System.ComponentModel.TypeConverter\n  isExternal: false\n  name: CanConvertTo(Type)\n  nameWithType: TypeConverter.CanConvertTo(Type)\n  fullName: TypeConverter.CanConvertTo(Type)\n- uid: System.ComponentModel.TypeConverter.CanConvertTo(System.ComponentModel.ITypeDescriptorContext,System.Type)\n  parent: System.ComponentModel.TypeConverter\n  isExternal: false\n  name: CanConvertTo(ITypeDescriptorContext, Type)\n  nameWithType: TypeConverter.CanConvertTo(ITypeDescriptorContext, Type)\n  fullName: TypeConverter.CanConvertTo(ITypeDescriptorContext, Type)\n- uid: System.ComponentModel.TypeConverter.ConvertFrom(System.Object)\n  parent: System.ComponentModel.TypeConverter\n  isExternal: false\n  name: ConvertFrom(Object)\n  nameWithType: TypeConverter.ConvertFrom(Object)\n  fullName: TypeConverter.ConvertFrom(Object)\n- uid: System.ComponentModel.TypeConverter.ConvertFromInvariantString(System.String)\n  parent: System.ComponentModel.TypeConverter\n  isExternal: false\n  name: ConvertFromInvariantString(String)\n  nameWithType: TypeConverter.ConvertFromInvariantString(String)\n  fullName: TypeConverter.ConvertFromInvariantString(String)\n- uid: System.ComponentModel.TypeConverter.ConvertFromInvariantString(System.ComponentModel.ITypeDescriptorContext,System.String)\n  parent: System.ComponentModel.TypeConverter\n  isExternal: false\n  name: ConvertFromInvariantString(ITypeDescriptorContext, String)\n  nameWithType: TypeConverter.ConvertFromInvariantString(ITypeDescriptorContext, String)\n  fullName: TypeConverter.ConvertFromInvariantString(ITypeDescriptorContext, String)\n- uid: System.ComponentModel.TypeConverter.ConvertFromString(System.ComponentModel.ITypeDescriptorContext,System.Globalization.CultureInfo,System.String)\n  parent: System.ComponentModel.TypeConverter\n  isExternal: false\n  name: ConvertFromString(ITypeDescriptorContext, CultureInfo, String)\n  nameWithType: TypeConverter.ConvertFromString(ITypeDescriptorContext, CultureInfo, String)\n  fullName: TypeConverter.ConvertFromString(ITypeDescriptorContext, CultureInfo, String)\n- uid: System.ComponentModel.TypeConverter.ConvertFromString(System.String)\n  parent: System.ComponentModel.TypeConverter\n  isExternal: false\n  name: ConvertFromString(String)\n  nameWithType: TypeConverter.ConvertFromString(String)\n  fullName: TypeConverter.ConvertFromString(String)\n- uid: System.ComponentModel.TypeConverter.ConvertFromString(System.ComponentModel.ITypeDescriptorContext,System.String)\n  parent: System.ComponentModel.TypeConverter\n  isExternal: false\n  name: ConvertFromString(ITypeDescriptorContext, String)\n  nameWithType: TypeConverter.ConvertFromString(ITypeDescriptorContext, String)\n  fullName: TypeConverter.ConvertFromString(ITypeDescriptorContext, String)\n- uid: System.ComponentModel.TypeConverter.ConvertTo(System.Object,System.Type)\n  parent: System.ComponentModel.TypeConverter\n  isExternal: false\n  name: ConvertTo(Object, Type)\n  nameWithType: TypeConverter.ConvertTo(Object, Type)\n  fullName: TypeConverter.ConvertTo(Object, Type)\n- uid: System.ComponentModel.TypeConverter.ConvertToInvariantString(System.Object)\n  parent: System.ComponentModel.TypeConverter\n  isExternal: false\n  name: ConvertToInvariantString(Object)\n  nameWithType: TypeConverter.ConvertToInvariantString(Object)\n  fullName: TypeConverter.ConvertToInvariantString(Object)\n- uid: System.ComponentModel.TypeConverter.ConvertToInvariantString(System.ComponentModel.ITypeDescriptorContext,System.Object)\n  parent: System.ComponentModel.TypeConverter\n  isExternal: false\n  name: ConvertToInvariantString(ITypeDescriptorContext, Object)\n  nameWithType: TypeConverter.ConvertToInvariantString(ITypeDescriptorContext, Object)\n  fullName: TypeConverter.ConvertToInvariantString(ITypeDescriptorContext, Object)\n- uid: System.ComponentModel.TypeConverter.ConvertToString(System.ComponentModel.ITypeDescriptorContext,System.Globalization.CultureInfo,System.Object)\n  parent: System.ComponentModel.TypeConverter\n  isExternal: false\n  name: ConvertToString(ITypeDescriptorContext, CultureInfo, Object)\n  nameWithType: TypeConverter.ConvertToString(ITypeDescriptorContext, CultureInfo, Object)\n  fullName: TypeConverter.ConvertToString(ITypeDescriptorContext, CultureInfo, Object)\n- uid: System.ComponentModel.TypeConverter.ConvertToString(System.Object)\n  parent: System.ComponentModel.TypeConverter\n  isExternal: false\n  name: ConvertToString(Object)\n  nameWithType: TypeConverter.ConvertToString(Object)\n  fullName: TypeConverter.ConvertToString(Object)\n- uid: System.ComponentModel.TypeConverter.ConvertToString(System.ComponentModel.ITypeDescriptorContext,System.Object)\n  parent: System.ComponentModel.TypeConverter\n  isExternal: false\n  name: ConvertToString(ITypeDescriptorContext, Object)\n  nameWithType: TypeConverter.ConvertToString(ITypeDescriptorContext, Object)\n  fullName: TypeConverter.ConvertToString(ITypeDescriptorContext, Object)\n- uid: System.ComponentModel.TypeConverter.CreateInstance(System.ComponentModel.ITypeDescriptorContext,System.Collections.IDictionary)\n  parent: System.ComponentModel.TypeConverter\n  isExternal: false\n  name: CreateInstance(ITypeDescriptorContext, IDictionary)\n  nameWithType: TypeConverter.CreateInstance(ITypeDescriptorContext, IDictionary)\n  fullName: TypeConverter.CreateInstance(ITypeDescriptorContext, IDictionary)\n- uid: System.ComponentModel.TypeConverter.CreateInstance(System.Collections.IDictionary)\n  parent: System.ComponentModel.TypeConverter\n  isExternal: false\n  name: CreateInstance(IDictionary)\n  nameWithType: TypeConverter.CreateInstance(IDictionary)\n  fullName: TypeConverter.CreateInstance(IDictionary)\n- uid: System.ComponentModel.TypeConverter.GetConvertFromException(System.Object)\n  parent: System.ComponentModel.TypeConverter\n  isExternal: false\n  name: GetConvertFromException(Object)\n  nameWithType: TypeConverter.GetConvertFromException(Object)\n  fullName: TypeConverter.GetConvertFromException(Object)\n- uid: System.ComponentModel.TypeConverter.GetConvertToException(System.Object,System.Type)\n  parent: System.ComponentModel.TypeConverter\n  isExternal: false\n  name: GetConvertToException(Object, Type)\n  nameWithType: TypeConverter.GetConvertToException(Object, Type)\n  fullName: TypeConverter.GetConvertToException(Object, Type)\n- uid: System.ComponentModel.TypeConverter.GetCreateInstanceSupported\n  parent: System.ComponentModel.TypeConverter\n  isExternal: false\n  name: GetCreateInstanceSupported()\n  nameWithType: TypeConverter.GetCreateInstanceSupported()\n  fullName: TypeConverter.GetCreateInstanceSupported()\n- uid: System.ComponentModel.TypeConverter.GetCreateInstanceSupported(System.ComponentModel.ITypeDescriptorContext)\n  parent: System.ComponentModel.TypeConverter\n  isExternal: false\n  name: GetCreateInstanceSupported(ITypeDescriptorContext)\n  nameWithType: TypeConverter.GetCreateInstanceSupported(ITypeDescriptorContext)\n  fullName: TypeConverter.GetCreateInstanceSupported(ITypeDescriptorContext)\n- uid: System.ComponentModel.TypeConverter.GetProperties(System.Object)\n  parent: System.ComponentModel.TypeConverter\n  isExternal: false\n  name: GetProperties(Object)\n  nameWithType: TypeConverter.GetProperties(Object)\n  fullName: TypeConverter.GetProperties(Object)\n- uid: System.ComponentModel.TypeConverter.GetProperties(System.ComponentModel.ITypeDescriptorContext,System.Object)\n  parent: System.ComponentModel.TypeConverter\n  isExternal: false\n  name: GetProperties(ITypeDescriptorContext, Object)\n  nameWithType: TypeConverter.GetProperties(ITypeDescriptorContext, Object)\n  fullName: TypeConverter.GetProperties(ITypeDescriptorContext, Object)\n- uid: System.ComponentModel.TypeConverter.GetProperties(System.ComponentModel.ITypeDescriptorContext,System.Object,System.Attribute[])\n  parent: System.ComponentModel.TypeConverter\n  isExternal: false\n  name: GetProperties(ITypeDescriptorContext, Object, Attribute[])\n  nameWithType: TypeConverter.GetProperties(ITypeDescriptorContext, Object, Attribute[])\n  fullName: TypeConverter.GetProperties(ITypeDescriptorContext, Object, Attribute[])\n- uid: System.ComponentModel.TypeConverter.GetPropertiesSupported(System.ComponentModel.ITypeDescriptorContext)\n  parent: System.ComponentModel.TypeConverter\n  isExternal: false\n  name: GetPropertiesSupported(ITypeDescriptorContext)\n  nameWithType: TypeConverter.GetPropertiesSupported(ITypeDescriptorContext)\n  fullName: TypeConverter.GetPropertiesSupported(ITypeDescriptorContext)\n- uid: System.ComponentModel.TypeConverter.GetPropertiesSupported\n  parent: System.ComponentModel.TypeConverter\n  isExternal: false\n  name: GetPropertiesSupported()\n  nameWithType: TypeConverter.GetPropertiesSupported()\n  fullName: TypeConverter.GetPropertiesSupported()\n- uid: System.ComponentModel.TypeConverter.GetStandardValues\n  parent: System.ComponentModel.TypeConverter\n  isExternal: false\n  name: GetStandardValues()\n  nameWithType: TypeConverter.GetStandardValues()\n  fullName: TypeConverter.GetStandardValues()\n- uid: System.ComponentModel.TypeConverter.GetStandardValuesExclusive\n  parent: System.ComponentModel.TypeConverter\n  isExternal: false\n  name: GetStandardValuesExclusive()\n  nameWithType: TypeConverter.GetStandardValuesExclusive()\n  fullName: TypeConverter.GetStandardValuesExclusive()\n- uid: System.ComponentModel.TypeConverter.GetStandardValuesSupported\n  parent: System.ComponentModel.TypeConverter\n  isExternal: false\n  name: GetStandardValuesSupported()\n  nameWithType: TypeConverter.GetStandardValuesSupported()\n  fullName: TypeConverter.GetStandardValuesSupported()\n- uid: System.ComponentModel.TypeConverter.IsValid(System.ComponentModel.ITypeDescriptorContext,System.Object)\n  parent: System.ComponentModel.TypeConverter\n  isExternal: false\n  name: IsValid(ITypeDescriptorContext, Object)\n  nameWithType: TypeConverter.IsValid(ITypeDescriptorContext, Object)\n  fullName: TypeConverter.IsValid(ITypeDescriptorContext, Object)\n- uid: System.ComponentModel.TypeConverter.IsValid(System.Object)\n  parent: System.ComponentModel.TypeConverter\n  isExternal: false\n  name: IsValid(Object)\n  nameWithType: TypeConverter.IsValid(Object)\n  fullName: TypeConverter.IsValid(Object)\n- uid: System.ComponentModel.TypeConverter.SortProperties(System.ComponentModel.PropertyDescriptorCollection,System.String[])\n  parent: System.ComponentModel.TypeConverter\n  isExternal: false\n  name: SortProperties(PropertyDescriptorCollection, String[])\n  nameWithType: TypeConverter.SortProperties(PropertyDescriptorCollection, String[])\n  fullName: TypeConverter.SortProperties(PropertyDescriptorCollection, String[])\n"}