{"nodes":[{"content":"Provides methods and properties used to compress and decompress streams.","nodes":[{"pos":[0,72],"content":"Provides methods and properties used to compress and decompress streams.","nodes":[{"content":"Provides methods and properties used to compress and decompress streams.","pos":[0,72]}]}],"pos":[2129,2202],"yaml":true},{"content":"This class represents the gzip data format, which uses an industry-standard algorithm for lossless file compression and decompression. The format includes a cyclic redundancy check value for detecting data corruption. The gzip data format uses the same algorithm as the <xref:System.IO.Compression.DeflateStream> class, but can be extended to use other compression formats. The format can be readily implemented in a manner not covered by patents.  \n  \n Starting with the [!INCLUDE[net_v45](~/includes/net-v45-md.md)], the <xref:System.IO.Compression.DeflateStream> class uses the zlib library for compression. As a result, it provides a better compression algorithm and, in most cases, a smaller compressed file than it provides in earlier versions of the .NET Framework.  \n  \n Compressed <xref:System.IO.Compression.GZipStream> objects written to a file with an extension of .gz can be decompressed using many common compression tools; however, this class does not inherently provide functionality for adding files to or extracting files from zip archives.  \n  \n The compression functionality in <xref:System.IO.Compression.DeflateStream> and <xref:System.IO.Compression.GZipStream> is exposed as a stream. Data is read on a byte-by-byte basis, so it is not possible to perform multiple passes to determine the best method for compressing entire files or large blocks of data. The <xref:System.IO.Compression.DeflateStream> and <xref:System.IO.Compression.GZipStream> classes are best used on uncompressed sources of data. If the source data is already compressed, using these classes may actually increase the size of the stream.","nodes":[{"pos":[0,447],"content":"This class represents the gzip data format, which uses an industry-standard algorithm for lossless file compression and decompression. The format includes a cyclic redundancy check value for detecting data corruption. The gzip data format uses the same algorithm as the <xref:System.IO.Compression.DeflateStream> class, but can be extended to use other compression formats. The format can be readily implemented in a manner not covered by patents.","nodes":[{"content":"This class represents the gzip data format, which uses an industry-standard algorithm for lossless file compression and decompression. The format includes a cyclic redundancy check value for detecting data corruption. The gzip data format uses the same algorithm as the <xref:System.IO.Compression.DeflateStream> class, but can be extended to use other compression formats. The format can be readily implemented in a manner not covered by patents.","pos":[0,447],"nodes":[{"content":"This class represents the gzip data format, which uses an industry-standard algorithm for lossless file compression and decompression.","pos":[0,134]},{"content":"The format includes a cyclic redundancy check value for detecting data corruption.","pos":[135,217]},{"content":"The gzip data format uses the same algorithm as the <ph id=\"ph1\">&lt;xref:System.IO.Compression.DeflateStream&gt;</ph> class, but can be extended to use other compression formats.","pos":[218,373],"source":" The gzip data format uses the same algorithm as the <xref:System.IO.Compression.DeflateStream> class, but can be extended to use other compression formats."},{"content":"The format can be readily implemented in a manner not covered by patents.","pos":[374,447]}]}]},{"pos":[454,772],"content":"Starting with the [!INCLUDE[net_v45](~/includes/net-v45-md.md)], the <xref:System.IO.Compression.DeflateStream> class uses the zlib library for compression. As a result, it provides a better compression algorithm and, in most cases, a smaller compressed file than it provides in earlier versions of the .NET Framework.","nodes":[{"content":"Starting with the <ph id=\"ph1\">[!INCLUDE[net_v45](~/includes/net-v45-md.md)]</ph>, the <ph id=\"ph2\">&lt;xref:System.IO.Compression.DeflateStream&gt;</ph> class uses the zlib library for compression.","pos":[0,156],"source":"Starting with the [!INCLUDE[net_v45](~/includes/net-v45-md.md)], the <xref:System.IO.Compression.DeflateStream> class uses the zlib library for compression."},{"content":"As a result, it provides a better compression algorithm and, in most cases, a smaller compressed file than it provides in earlier versions of the .NET Framework.","pos":[157,318]}]},{"pos":[779,1058],"content":"Compressed <xref:System.IO.Compression.GZipStream> objects written to a file with an extension of .gz can be decompressed using many common compression tools; however, this class does not inherently provide functionality for adding files to or extracting files from zip archives.","nodes":[{"content":"Compressed <ph id=\"ph1\">&lt;xref:System.IO.Compression.GZipStream&gt;</ph> objects written to a file with an extension of .gz can be decompressed using many common compression tools; however, this class does not inherently provide functionality for adding files to or extracting files from zip archives.","pos":[0,279],"source":"Compressed <xref:System.IO.Compression.GZipStream> objects written to a file with an extension of .gz can be decompressed using many common compression tools; however, this class does not inherently provide functionality for adding files to or extracting files from zip archives."}]},{"pos":[1065,1632],"content":"The compression functionality in <xref:System.IO.Compression.DeflateStream> and <xref:System.IO.Compression.GZipStream> is exposed as a stream. Data is read on a byte-by-byte basis, so it is not possible to perform multiple passes to determine the best method for compressing entire files or large blocks of data. The <xref:System.IO.Compression.DeflateStream> and <xref:System.IO.Compression.GZipStream> classes are best used on uncompressed sources of data. If the source data is already compressed, using these classes may actually increase the size of the stream.","nodes":[{"content":"The compression functionality in <xref:System.IO.Compression.DeflateStream> and <xref:System.IO.Compression.GZipStream> is exposed as a stream. Data is read on a byte-by-byte basis, so it is not possible to perform multiple passes to determine the best method for compressing entire files or large blocks of data. The <xref:System.IO.Compression.DeflateStream> and <xref:System.IO.Compression.GZipStream> classes are best used on uncompressed sources of data. If the source data is already compressed, using these classes may actually increase the size of the stream.","pos":[0,567],"nodes":[{"content":"The compression functionality in <ph id=\"ph1\">&lt;xref:System.IO.Compression.DeflateStream&gt;</ph> and <ph id=\"ph2\">&lt;xref:System.IO.Compression.GZipStream&gt;</ph> is exposed as a stream.","pos":[0,143],"source":"The compression functionality in <xref:System.IO.Compression.DeflateStream> and <xref:System.IO.Compression.GZipStream> is exposed as a stream."},{"content":"Data is read on a byte-by-byte basis, so it is not possible to perform multiple passes to determine the best method for compressing entire files or large blocks of data.","pos":[144,313]},{"content":"The <ph id=\"ph1\">&lt;xref:System.IO.Compression.DeflateStream&gt;</ph> and <ph id=\"ph2\">&lt;xref:System.IO.Compression.GZipStream&gt;</ph> classes are best used on uncompressed sources of data.","pos":[314,459],"source":" The <xref:System.IO.Compression.DeflateStream> and <xref:System.IO.Compression.GZipStream> classes are best used on uncompressed sources of data."},{"content":"If the source data is already compressed, using these classes may actually increase the size of the stream.","pos":[460,567]}]}]}],"pos":[2213,3854],"yaml":true,"extradata":"MT"},{"content":"Initializes a new instance of the <xref href=\"System.IO.Compression.GZipStream\"></xref> class by using the specified stream and compression level.","nodes":[{"pos":[0,146],"content":"Initializes a new instance of the <ph id=\"ph1\">&lt;xref href=\"System.IO.Compression.GZipStream\"&gt;&lt;/xref&gt;</ph> class by using the specified stream and compression level.","source":"Initializes a new instance of the <xref href=\"System.IO.Compression.GZipStream\"></xref> class by using the specified stream and compression level."}],"pos":[7279,7426],"yaml":true},{"content":"You use this constructor when you want to specify whether compression efficiency or speed is more important for an instance of the <xref:System.IO.Compression.GZipStream> class.  \n  \n This constructor overload uses the compression mode <xref:System.IO.Compression.CompressionMode.Compress>. To set the compression mode to another value, use the <xref:System.IO.Compression.GZipStream.%23ctor%28System.IO.Stream%2CSystem.IO.Compression.CompressionMode%29> or <xref:System.IO.Compression.GZipStream.%23ctor%28System.IO.Stream%2CSystem.IO.Compression.CompressionMode%2CSystem.Boolean%29> overload.","nodes":[{"pos":[0,177],"content":"You use this constructor when you want to specify whether compression efficiency or speed is more important for an instance of the <xref:System.IO.Compression.GZipStream> class.","nodes":[{"content":"You use this constructor when you want to specify whether compression efficiency or speed is more important for an instance of the <ph id=\"ph1\">&lt;xref:System.IO.Compression.GZipStream&gt;</ph> class.","pos":[0,177],"source":"You use this constructor when you want to specify whether compression efficiency or speed is more important for an instance of the <xref:System.IO.Compression.GZipStream> class."}]},{"pos":[184,594],"content":"This constructor overload uses the compression mode <xref:System.IO.Compression.CompressionMode.Compress>. To set the compression mode to another value, use the <xref:System.IO.Compression.GZipStream.%23ctor%28System.IO.Stream%2CSystem.IO.Compression.CompressionMode%29> or <xref:System.IO.Compression.GZipStream.%23ctor%28System.IO.Stream%2CSystem.IO.Compression.CompressionMode%2CSystem.Boolean%29> overload.","nodes":[{"content":"This constructor overload uses the compression mode <xref:System.IO.Compression.CompressionMode.Compress>. To set the compression mode to another value, use the <xref:System.IO.Compression.GZipStream.%23ctor%28System.IO.Stream%2CSystem.IO.Compression.CompressionMode%29> or <xref:System.IO.Compression.GZipStream.%23ctor%28System.IO.Stream%2CSystem.IO.Compression.CompressionMode%2CSystem.Boolean%29> overload.","pos":[0,410],"nodes":[{"content":"This constructor overload uses the compression mode <ph id=\"ph1\">&lt;xref:System.IO.Compression.CompressionMode.Compress&gt;</ph>.","pos":[0,106],"source":"This constructor overload uses the compression mode <xref:System.IO.Compression.CompressionMode.Compress>."},{"content":"To set the compression mode to another value, use the <ph id=\"ph1\">&lt;xref:System.IO.Compression.GZipStream.%23ctor%28System.IO.Stream%2CSystem.IO.Compression.CompressionMode%29&gt;</ph> or <ph id=\"ph2\">&lt;xref:System.IO.Compression.GZipStream.%23ctor%28System.IO.Stream%2CSystem.IO.Compression.CompressionMode%2CSystem.Boolean%29&gt;</ph> overload.","pos":[107,410],"source":" To set the compression mode to another value, use the <xref:System.IO.Compression.GZipStream.%23ctor%28System.IO.Stream%2CSystem.IO.Compression.CompressionMode%29> or <xref:System.IO.Compression.GZipStream.%23ctor%28System.IO.Stream%2CSystem.IO.Compression.CompressionMode%2CSystem.Boolean%29> overload."}]}]}],"pos":[7437,8036],"yaml":true,"extradata":"MT"},{"content":"The stream to write the compressed data to.","nodes":[{"pos":[0,43],"content":"The stream to write the compressed data to.","nodes":[{"content":"The stream to write the compressed data to.","pos":[0,43]}]}],"pos":[8697,8741],"yaml":true},{"content":"One of the enumeration values that indicates whether to emphasize speed or compression efficiency when compressing the stream.","nodes":[{"pos":[0,126],"content":"One of the enumeration values that indicates whether to emphasize speed or compression efficiency when compressing the stream.","nodes":[{"content":"One of the enumeration values that indicates whether to emphasize speed or compression efficiency when compressing the stream.","pos":[0,126]}]}],"pos":[8838,8965],"yaml":true},{"content":"<code>stream</code> is `null`.","nodes":[{"pos":[0,30],"content":"<ph id=\"ph1\">&lt;code&gt;stream&lt;/code&gt;</ph> is <ph id=\"ph2\">`null`</ph>.","source":"<code>stream</code> is `null`."}],"pos":[9133,9164],"yaml":true},{"content":"The stream does not support write operations such as compression. (The <xref href=\"System.IO.Stream.CanWrite\"></xref> property on the stream object is `false`.)","nodes":[{"pos":[0,160],"content":"The stream does not support write operations such as compression. (The <xref href=\"System.IO.Stream.CanWrite\"></xref> property on the stream object is `false`.)","nodes":[{"content":"The stream does not support write operations such as compression.","pos":[0,65]},{"content":"(The <ph id=\"ph1\">&lt;xref href=\"System.IO.Stream.CanWrite\"&gt;&lt;/xref&gt;</ph> property on the stream object is <ph id=\"ph2\">`false`</ph>.)","pos":[66,160],"source":" (The <xref href=\"System.IO.Stream.CanWrite\"></xref> property on the stream object is `false`.)"}]}],"pos":[9258,9419],"yaml":true},{"content":"Initializes a new instance of the <xref href=\"System.IO.Compression.GZipStream\"></xref> class by using the specified stream and compression mode.","nodes":[{"pos":[0,145],"content":"Initializes a new instance of the <ph id=\"ph1\">&lt;xref href=\"System.IO.Compression.GZipStream\"&gt;&lt;/xref&gt;</ph> class by using the specified stream and compression mode.","source":"Initializes a new instance of the <xref href=\"System.IO.Compression.GZipStream\"></xref> class by using the specified stream and compression mode."}],"pos":[11053,11199],"yaml":true},{"content":"By default, <xref:System.IO.Compression.GZipStream> owns the underlying stream, so closing the `stream` parameter also closes the underlying stream. Note that the state of the underlying stream can affect the usability of the stream. Also, no explicit checks are performed, so no additional exceptions are thrown when the new instance is created.  \n  \n If an instance of the <xref:System.IO.Compression.GZipStream> class is created with the `mode` parameter equal to `Compress` and no further action occurs, the stream will appear as a valid, empty compressed file.  \n  \n By default, the compression level is set to <xref:System.IO.Compression.CompressionLevel.Optimal> when the compression mode is <xref:System.IO.Compression.CompressionMode.Compress>.","nodes":[{"pos":[0,346],"content":"By default, <xref:System.IO.Compression.GZipStream> owns the underlying stream, so closing the `stream` parameter also closes the underlying stream. Note that the state of the underlying stream can affect the usability of the stream. Also, no explicit checks are performed, so no additional exceptions are thrown when the new instance is created.","nodes":[{"content":"By default, <ph id=\"ph1\">&lt;xref:System.IO.Compression.GZipStream&gt;</ph> owns the underlying stream, so closing the <ph id=\"ph2\">`stream`</ph> parameter also closes the underlying stream.","pos":[0,148],"source":"By default, <xref:System.IO.Compression.GZipStream> owns the underlying stream, so closing the `stream` parameter also closes the underlying stream."},{"content":"Note that the state of the underlying stream can affect the usability of the stream.","pos":[149,233]},{"content":"Also, no explicit checks are performed, so no additional exceptions are thrown when the new instance is created.","pos":[234,346]}]},{"pos":[353,565],"content":"If an instance of the <ph id=\"ph1\">&lt;xref:System.IO.Compression.GZipStream&gt;</ph> class is created with the <ph id=\"ph2\">`mode`</ph> parameter equal to <ph id=\"ph3\">`Compress`</ph> and no further action occurs, the stream will appear as a valid, empty compressed file.","source":"If an instance of the <xref:System.IO.Compression.GZipStream> class is created with the `mode` parameter equal to `Compress` and no further action occurs, the stream will appear as a valid, empty compressed file."},{"pos":[572,753],"content":"By default, the compression level is set to <xref:System.IO.Compression.CompressionLevel.Optimal> when the compression mode is <xref:System.IO.Compression.CompressionMode.Compress>.","nodes":[{"content":"By default, the compression level is set to <ph id=\"ph1\">&lt;xref:System.IO.Compression.CompressionLevel.Optimal&gt;</ph> when the compression mode is <ph id=\"ph2\">&lt;xref:System.IO.Compression.CompressionMode.Compress&gt;</ph>.","pos":[0,181],"source":"By default, the compression level is set to <xref:System.IO.Compression.CompressionLevel.Optimal> when the compression mode is <xref:System.IO.Compression.CompressionMode.Compress>."}]}],"pos":[11210,11970],"yaml":true,"extradata":"MT"},{"content":"The stream the compressed or decompressed data is written to.","nodes":[{"pos":[0,61],"content":"The stream the compressed or decompressed data is written to.","nodes":[{"content":"The stream the compressed or decompressed data is written to.","pos":[0,61]}]}],"pos":[12712,12774],"yaml":true},{"content":"One of the enumeration values that indicates whether to compress or decompress the stream.","nodes":[{"pos":[0,90],"content":"One of the enumeration values that indicates whether to compress or decompress the stream.","nodes":[{"content":"One of the enumeration values that indicates whether to compress or decompress the stream.","pos":[0,90]}]}],"pos":[12858,12949],"yaml":true},{"content":"<code>stream</code> is `null`.","nodes":[{"pos":[0,30],"content":"<ph id=\"ph1\">&lt;code&gt;stream&lt;/code&gt;</ph> is <ph id=\"ph2\">`null`</ph>.","source":"<code>stream</code> is `null`."}],"pos":[13117,13148],"yaml":true},{"content":"<code>mode</code> is not a valid <xref href=\"System.IO.Compression.CompressionMode\"></xref> enumeration value.  \n  \n -or-  \n  \n <xref href=\"System.IO.Compression.CompressionMode\"></xref> is <xref href=\"System.IO.Compression.CompressionMode.Compress\"></xref> and <xref href=\"System.IO.Stream.CanWrite\"></xref> is `false`.  \n  \n -or-  \n  \n <xref href=\"System.IO.Compression.CompressionMode\"></xref> is <xref href=\"System.IO.Compression.CompressionMode.Decompress\"></xref> and <xref href=\"System.IO.Stream.CanRead\"></xref> is `false`.","nodes":[{"pos":[0,110],"content":"<ph id=\"ph1\">&lt;code&gt;mode&lt;/code&gt;</ph> is not a valid <ph id=\"ph2\">&lt;xref href=\"System.IO.Compression.CompressionMode\"&gt;&lt;/xref&gt;</ph> enumeration value.","source":"<code>mode</code> is not a valid <xref href=\"System.IO.Compression.CompressionMode\"></xref> enumeration value."},{"pos":[117,121],"content":"-or-","nodes":[{"content":"-or-","pos":[0,4]}]},{"pos":[128,320],"content":"<ph id=\"ph1\">&lt;xref href=\"System.IO.Compression.CompressionMode\"&gt;&lt;/xref&gt;</ph> is <ph id=\"ph2\">&lt;xref href=\"System.IO.Compression.CompressionMode.Compress\"&gt;&lt;/xref&gt;</ph> and <ph id=\"ph3\">&lt;xref href=\"System.IO.Stream.CanWrite\"&gt;&lt;/xref&gt;</ph> is <ph id=\"ph4\">`false`</ph>.","source":"<xref href=\"System.IO.Compression.CompressionMode\"></xref> is <xref href=\"System.IO.Compression.CompressionMode.Compress\"></xref> and <xref href=\"System.IO.Stream.CanWrite\"></xref> is `false`."},{"pos":[327,331],"content":"-or-","nodes":[{"content":"-or-","pos":[0,4]}]},{"pos":[338,531],"content":"<ph id=\"ph1\">&lt;xref href=\"System.IO.Compression.CompressionMode\"&gt;&lt;/xref&gt;</ph> is <ph id=\"ph2\">&lt;xref href=\"System.IO.Compression.CompressionMode.Decompress\"&gt;&lt;/xref&gt;</ph> and <ph id=\"ph3\">&lt;xref href=\"System.IO.Stream.CanRead\"&gt;&lt;/xref&gt;</ph> is <ph id=\"ph4\">`false`</ph>.","source":"<xref href=\"System.IO.Compression.CompressionMode\"></xref> is <xref href=\"System.IO.Compression.CompressionMode.Decompress\"></xref> and <xref href=\"System.IO.Stream.CanRead\"></xref> is `false`."}],"pos":[13242,13798],"yaml":true},{"content":"Initializes a new instance of the <xref href=\"System.IO.Compression.GZipStream\"></xref> class by using the specified stream and compression level, and optionally leaves the stream open.","nodes":[{"pos":[0,185],"content":"Initializes a new instance of the <ph id=\"ph1\">&lt;xref href=\"System.IO.Compression.GZipStream\"&gt;&lt;/xref&gt;</ph> class by using the specified stream and compression level, and optionally leaves the stream open.","source":"Initializes a new instance of the <xref href=\"System.IO.Compression.GZipStream\"></xref> class by using the specified stream and compression level, and optionally leaves the stream open."}],"pos":[15510,15696],"yaml":true},{"content":"You use this constructor when you want to specify whether compression efficiency or speed is more important for an instance of the <xref:System.IO.Compression.GZipStream> class, and whether to leave the stream object open after disposing the <xref:System.IO.Compression.GZipStream> object.  \n  \n This constructor overload uses the compression mode <xref:System.IO.Compression.CompressionMode.Compress>. To set the compression mode to another value, use the <xref:System.IO.Compression.GZipStream.%23ctor%28System.IO.Stream%2CSystem.IO.Compression.CompressionMode%29> or <xref:System.IO.Compression.GZipStream.%23ctor%28System.IO.Stream%2CSystem.IO.Compression.CompressionMode%2CSystem.Boolean%29> overload.","nodes":[{"pos":[0,289],"content":"You use this constructor when you want to specify whether compression efficiency or speed is more important for an instance of the <xref:System.IO.Compression.GZipStream> class, and whether to leave the stream object open after disposing the <xref:System.IO.Compression.GZipStream> object.","nodes":[{"content":"You use this constructor when you want to specify whether compression efficiency or speed is more important for an instance of the <ph id=\"ph1\">&lt;xref:System.IO.Compression.GZipStream&gt;</ph> class, and whether to leave the stream object open after disposing the <ph id=\"ph2\">&lt;xref:System.IO.Compression.GZipStream&gt;</ph> object.","pos":[0,289],"source":"You use this constructor when you want to specify whether compression efficiency or speed is more important for an instance of the <xref:System.IO.Compression.GZipStream> class, and whether to leave the stream object open after disposing the <xref:System.IO.Compression.GZipStream> object."}]},{"pos":[296,706],"content":"This constructor overload uses the compression mode <xref:System.IO.Compression.CompressionMode.Compress>. To set the compression mode to another value, use the <xref:System.IO.Compression.GZipStream.%23ctor%28System.IO.Stream%2CSystem.IO.Compression.CompressionMode%29> or <xref:System.IO.Compression.GZipStream.%23ctor%28System.IO.Stream%2CSystem.IO.Compression.CompressionMode%2CSystem.Boolean%29> overload.","nodes":[{"content":"This constructor overload uses the compression mode <xref:System.IO.Compression.CompressionMode.Compress>. To set the compression mode to another value, use the <xref:System.IO.Compression.GZipStream.%23ctor%28System.IO.Stream%2CSystem.IO.Compression.CompressionMode%29> or <xref:System.IO.Compression.GZipStream.%23ctor%28System.IO.Stream%2CSystem.IO.Compression.CompressionMode%2CSystem.Boolean%29> overload.","pos":[0,410],"nodes":[{"content":"This constructor overload uses the compression mode <ph id=\"ph1\">&lt;xref:System.IO.Compression.CompressionMode.Compress&gt;</ph>.","pos":[0,106],"source":"This constructor overload uses the compression mode <xref:System.IO.Compression.CompressionMode.Compress>."},{"content":"To set the compression mode to another value, use the <ph id=\"ph1\">&lt;xref:System.IO.Compression.GZipStream.%23ctor%28System.IO.Stream%2CSystem.IO.Compression.CompressionMode%29&gt;</ph> or <ph id=\"ph2\">&lt;xref:System.IO.Compression.GZipStream.%23ctor%28System.IO.Stream%2CSystem.IO.Compression.CompressionMode%2CSystem.Boolean%29&gt;</ph> overload.","pos":[107,410],"source":" To set the compression mode to another value, use the <xref:System.IO.Compression.GZipStream.%23ctor%28System.IO.Stream%2CSystem.IO.Compression.CompressionMode%29> or <xref:System.IO.Compression.GZipStream.%23ctor%28System.IO.Stream%2CSystem.IO.Compression.CompressionMode%2CSystem.Boolean%29> overload."}]}]}],"pos":[15707,16418],"yaml":true,"extradata":"MT"},{"content":"The stream to write the compressed data to.","nodes":[{"pos":[0,43],"content":"The stream to write the compressed data to.","nodes":[{"content":"The stream to write the compressed data to.","pos":[0,43]}]}],"pos":[17128,17172],"yaml":true},{"content":"One of the enumeration values that indicates whether to emphasize speed or compression efficiency when compressing the stream.","nodes":[{"pos":[0,126],"content":"One of the enumeration values that indicates whether to emphasize speed or compression efficiency when compressing the stream.","nodes":[{"content":"One of the enumeration values that indicates whether to emphasize speed or compression efficiency when compressing the stream.","pos":[0,126]}]}],"pos":[17269,17396],"yaml":true},{"content":"`true` to leave the stream object open after disposing the <xref href=\"System.IO.Compression.GZipStream\"></xref> object; otherwise, `false`.","nodes":[{"pos":[0,140],"content":"<ph id=\"ph1\">`true`</ph> to leave the stream object open after disposing the <ph id=\"ph2\">&lt;xref href=\"System.IO.Compression.GZipStream\"&gt;&lt;/xref&gt;</ph> object; otherwise, <ph id=\"ph3\">`false`</ph>.","source":"`true` to leave the stream object open after disposing the <xref href=\"System.IO.Compression.GZipStream\"></xref> object; otherwise, `false`."}],"pos":[17462,17605],"yaml":true},{"content":"<code>stream</code> is `null`.","nodes":[{"pos":[0,30],"content":"<ph id=\"ph1\">&lt;code&gt;stream&lt;/code&gt;</ph> is <ph id=\"ph2\">`null`</ph>.","source":"<code>stream</code> is `null`."}],"pos":[17773,17804],"yaml":true},{"content":"The stream does not support write operations such as compression. (The <xref href=\"System.IO.Stream.CanWrite\"></xref> property on the stream object is `false`.)","nodes":[{"pos":[0,160],"content":"The stream does not support write operations such as compression. (The <xref href=\"System.IO.Stream.CanWrite\"></xref> property on the stream object is `false`.)","nodes":[{"content":"The stream does not support write operations such as compression.","pos":[0,65]},{"content":"(The <ph id=\"ph1\">&lt;xref href=\"System.IO.Stream.CanWrite\"&gt;&lt;/xref&gt;</ph> property on the stream object is <ph id=\"ph2\">`false`</ph>.)","pos":[66,160],"source":" (The <xref href=\"System.IO.Stream.CanWrite\"></xref> property on the stream object is `false`.)"}]}],"pos":[17898,18059],"yaml":true},{"content":"Initializes a new instance of the <xref href=\"System.IO.Compression.GZipStream\"></xref> class by using the specified stream and compression mode, and optionally leaves the stream open.","nodes":[{"pos":[0,184],"content":"Initializes a new instance of the <ph id=\"ph1\">&lt;xref href=\"System.IO.Compression.GZipStream\"&gt;&lt;/xref&gt;</ph> class by using the specified stream and compression mode, and optionally leaves the stream open.","source":"Initializes a new instance of the <xref href=\"System.IO.Compression.GZipStream\"></xref> class by using the specified stream and compression mode, and optionally leaves the stream open."}],"pos":[19765,19950],"yaml":true},{"content":"By default, <xref:System.IO.Compression.GZipStream> owns the underlying stream, so closing the `stream` parameter also closes the underlying stream. Note that the state of the underlying stream can affect the usability of the stream. Also, no explicit checks are performed, so no additional exceptions are thrown when the new instance is created.  \n  \n If an instance of the <xref:System.IO.Compression.GZipStream> class is created with the `mode` parameter equal to `Compress` and no further action occurs, the stream will appear as a valid, empty compressed file.  \n  \n By default, the compression level is set to <xref:System.IO.Compression.CompressionLevel.Optimal> when the compression mode is <xref:System.IO.Compression.CompressionMode.Compress>.","nodes":[{"pos":[0,346],"content":"By default, <xref:System.IO.Compression.GZipStream> owns the underlying stream, so closing the `stream` parameter also closes the underlying stream. Note that the state of the underlying stream can affect the usability of the stream. Also, no explicit checks are performed, so no additional exceptions are thrown when the new instance is created.","nodes":[{"content":"By default, <ph id=\"ph1\">&lt;xref:System.IO.Compression.GZipStream&gt;</ph> owns the underlying stream, so closing the <ph id=\"ph2\">`stream`</ph> parameter also closes the underlying stream.","pos":[0,148],"source":"By default, <xref:System.IO.Compression.GZipStream> owns the underlying stream, so closing the `stream` parameter also closes the underlying stream."},{"content":"Note that the state of the underlying stream can affect the usability of the stream.","pos":[149,233]},{"content":"Also, no explicit checks are performed, so no additional exceptions are thrown when the new instance is created.","pos":[234,346]}]},{"pos":[353,565],"content":"If an instance of the <ph id=\"ph1\">&lt;xref:System.IO.Compression.GZipStream&gt;</ph> class is created with the <ph id=\"ph2\">`mode`</ph> parameter equal to <ph id=\"ph3\">`Compress`</ph> and no further action occurs, the stream will appear as a valid, empty compressed file.","source":"If an instance of the <xref:System.IO.Compression.GZipStream> class is created with the `mode` parameter equal to `Compress` and no further action occurs, the stream will appear as a valid, empty compressed file."},{"pos":[572,753],"content":"By default, the compression level is set to <xref:System.IO.Compression.CompressionLevel.Optimal> when the compression mode is <xref:System.IO.Compression.CompressionMode.Compress>.","nodes":[{"content":"By default, the compression level is set to <ph id=\"ph1\">&lt;xref:System.IO.Compression.CompressionLevel.Optimal&gt;</ph> when the compression mode is <ph id=\"ph2\">&lt;xref:System.IO.Compression.CompressionMode.Compress&gt;</ph>.","pos":[0,181],"source":"By default, the compression level is set to <xref:System.IO.Compression.CompressionLevel.Optimal> when the compression mode is <xref:System.IO.Compression.CompressionMode.Compress>."}]}],"pos":[19961,20721],"yaml":true,"extradata":"MT"},{"content":"The stream the compressed or decompressed data is written to.","nodes":[{"pos":[0,61],"content":"The stream the compressed or decompressed data is written to.","nodes":[{"content":"The stream the compressed or decompressed data is written to.","pos":[0,61]}]}],"pos":[20930,20992],"yaml":true},{"content":"One of the enumeration values that indicates whether to compress or decompress the stream.","nodes":[{"pos":[0,90],"content":"One of the enumeration values that indicates whether to compress or decompress the stream.","nodes":[{"content":"One of the enumeration values that indicates whether to compress or decompress the stream.","pos":[0,90]}]}],"pos":[21076,21167],"yaml":true},{"content":"`true` to leave the stream open after disposing the <xref href=\"System.IO.Compression.GZipStream\"></xref> object; otherwise, `false`.","nodes":[{"pos":[0,133],"content":"<ph id=\"ph1\">`true`</ph> to leave the stream open after disposing the <ph id=\"ph2\">&lt;xref href=\"System.IO.Compression.GZipStream\"&gt;&lt;/xref&gt;</ph> object; otherwise, <ph id=\"ph3\">`false`</ph>.","source":"`true` to leave the stream open after disposing the <xref href=\"System.IO.Compression.GZipStream\"></xref> object; otherwise, `false`."}],"pos":[21233,21369],"yaml":true},{"content":"<code>stream</code> is `null`.","nodes":[{"pos":[0,30],"content":"<ph id=\"ph1\">&lt;code&gt;stream&lt;/code&gt;</ph> is <ph id=\"ph2\">`null`</ph>.","source":"<code>stream</code> is `null`."}],"pos":[21537,21568],"yaml":true},{"content":"<code>mode</code> is not a valid <xref href=\"System.IO.Compression.CompressionMode\"></xref> value.  \n  \n -or-  \n  \n <xref href=\"System.IO.Compression.CompressionMode\"></xref> is <xref href=\"System.IO.Compression.CompressionMode.Compress\"></xref> and <xref href=\"System.IO.Stream.CanWrite\"></xref> is `false`.  \n  \n -or-  \n  \n <xref href=\"System.IO.Compression.CompressionMode\"></xref> is <xref href=\"System.IO.Compression.CompressionMode.Decompress\"></xref> and <xref href=\"System.IO.Stream.CanRead\"></xref> is `false`.","nodes":[{"pos":[0,98],"content":"<ph id=\"ph1\">&lt;code&gt;mode&lt;/code&gt;</ph> is not a valid <ph id=\"ph2\">&lt;xref href=\"System.IO.Compression.CompressionMode\"&gt;&lt;/xref&gt;</ph> value.","source":"<code>mode</code> is not a valid <xref href=\"System.IO.Compression.CompressionMode\"></xref> value."},{"pos":[105,109],"content":"-or-","nodes":[{"content":"-or-","pos":[0,4]}]},{"pos":[116,308],"content":"<ph id=\"ph1\">&lt;xref href=\"System.IO.Compression.CompressionMode\"&gt;&lt;/xref&gt;</ph> is <ph id=\"ph2\">&lt;xref href=\"System.IO.Compression.CompressionMode.Compress\"&gt;&lt;/xref&gt;</ph> and <ph id=\"ph3\">&lt;xref href=\"System.IO.Stream.CanWrite\"&gt;&lt;/xref&gt;</ph> is <ph id=\"ph4\">`false`</ph>.","source":"<xref href=\"System.IO.Compression.CompressionMode\"></xref> is <xref href=\"System.IO.Compression.CompressionMode.Compress\"></xref> and <xref href=\"System.IO.Stream.CanWrite\"></xref> is `false`."},{"pos":[315,319],"content":"-or-","nodes":[{"content":"-or-","pos":[0,4]}]},{"pos":[326,519],"content":"<ph id=\"ph1\">&lt;xref href=\"System.IO.Compression.CompressionMode\"&gt;&lt;/xref&gt;</ph> is <ph id=\"ph2\">&lt;xref href=\"System.IO.Compression.CompressionMode.Decompress\"&gt;&lt;/xref&gt;</ph> and <ph id=\"ph3\">&lt;xref href=\"System.IO.Stream.CanRead\"&gt;&lt;/xref&gt;</ph> is <ph id=\"ph4\">`false`</ph>.","source":"<xref href=\"System.IO.Compression.CompressionMode\"></xref> is <xref href=\"System.IO.Compression.CompressionMode.Decompress\"></xref> and <xref href=\"System.IO.Stream.CanRead\"></xref> is `false`."}],"pos":[21662,22206],"yaml":true},{"content":"Gets a reference to the underlying stream.","nodes":[{"pos":[0,42],"content":"Gets a reference to the underlying stream.","nodes":[{"content":"Gets a reference to the underlying stream.","pos":[0,42]}]}],"pos":[23607,23650],"yaml":true},{"content":"A stream object that represents the underlying stream.","nodes":[{"pos":[0,54],"content":"A stream object that represents the underlying stream.","nodes":[{"content":"A stream object that represents the underlying stream.","pos":[0,54]}]}],"pos":[23777,23832],"yaml":true},{"content":"The underlying stream is closed.","nodes":[{"pos":[0,32],"content":"The underlying stream is closed.","nodes":[{"content":"The underlying stream is closed.","pos":[0,32]}]}],"pos":[24009,24042],"yaml":true},{"content":"Begins an asynchronous read operation. (Consider using the <xref href=\"System.IO.Stream.ReadAsync(System.Byte[],System.Int32,System.Int32)\"></xref> method instead.)","nodes":[{"pos":[0,164],"content":"Begins an asynchronous read operation. (Consider using the <xref href=\"System.IO.Stream.ReadAsync(System.Byte[],System.Int32,System.Int32)\"></xref> method instead.)","nodes":[{"content":"Begins an asynchronous read operation.","pos":[0,38]},{"content":"(Consider using the <ph id=\"ph1\">&lt;xref href=\"System.IO.Stream.ReadAsync(System.Byte[],System.Int32,System.Int32)\"&gt;&lt;/xref&gt;</ph> method instead.)","pos":[39,164],"source":" (Consider using the <xref href=\"System.IO.Stream.ReadAsync(System.Byte[],System.Int32,System.Int32)\"></xref> method instead.)"}]}],"pos":[25798,25963],"yaml":true},{"content":"Starting with the [!INCLUDE[net_v45](~/includes/net-v45-md.md)], you can perform asynchronous read operations by using the <xref:System.IO.Stream.ReadAsync%2A?displayProperty=fullName> method. The <xref:System.IO.Compression.GZipStream.BeginRead%2A> method is still available in [!INCLUDE[net_v45](~/includes/net-v45-md.md)] to support legacy code; however, you can implement asynchronous I/O operations more easily by using the new async methods. For more information, see .  \n  \n Pass the <xref:System.IAsyncResult> return value to the <xref:System.IO.Compression.GZipStream.EndRead%2A> method of the stream to determine how many bytes were read and to release operating system resources used for reading. You can do this either by using the same code that called <xref:System.IO.Compression.GZipStream.BeginRead%2A> or in a callback passed to <xref:System.IO.Compression.GZipStream.BeginRead%2A>.  \n  \n The current position in the stream is updated when the asynchronous read or write is issued, not when the I/O operation completes.  \n  \n Multiple simultaneous asynchronous requests render the request completion order uncertain.  \n  \n Use the <xref:System.IO.Compression.GZipStream.CanRead%2A> property to determine whether the current <xref:System.IO.Compression.GZipStream> object supports reading.  \n  \n If a stream is closed or you pass an invalid argument, exceptions are thrown immediately from <xref:System.IO.Compression.GZipStream.BeginRead%2A>. Errors that occur during an asynchronous read request, such as a disk failure during the I/O request, occur on the thread pool thread and throw exceptions when calling <xref:System.IO.Compression.GZipStream.EndRead%2A>.","nodes":[{"pos":[0,475],"content":"Starting with the [!INCLUDE[net_v45](~/includes/net-v45-md.md)], you can perform asynchronous read operations by using the <xref:System.IO.Stream.ReadAsync%2A?displayProperty=fullName> method. The <xref:System.IO.Compression.GZipStream.BeginRead%2A> method is still available in [!INCLUDE[net_v45](~/includes/net-v45-md.md)] to support legacy code; however, you can implement asynchronous I/O operations more easily by using the new async methods. For more information, see .","nodes":[{"content":"Starting with the <ph id=\"ph1\">[!INCLUDE[net_v45](~/includes/net-v45-md.md)]</ph>, you can perform asynchronous read operations by using the <ph id=\"ph2\">&lt;xref:System.IO.Stream.ReadAsync%2A?displayProperty=fullName&gt;</ph> method.","pos":[0,192],"source":"Starting with the [!INCLUDE[net_v45](~/includes/net-v45-md.md)], you can perform asynchronous read operations by using the <xref:System.IO.Stream.ReadAsync%2A?displayProperty=fullName> method."},{"content":"The <ph id=\"ph1\">&lt;xref:System.IO.Compression.GZipStream.BeginRead%2A&gt;</ph> method is still available in <ph id=\"ph2\">[!INCLUDE[net_v45](~/includes/net-v45-md.md)]</ph> to support legacy code; however, you can implement asynchronous I/O operations more easily by using the new async methods.","pos":[193,447],"source":" The <xref:System.IO.Compression.GZipStream.BeginRead%2A> method is still available in [!INCLUDE[net_v45](~/includes/net-v45-md.md)] to support legacy code; however, you can implement asynchronous I/O operations more easily by using the new async methods."},{"content":"For more information, see .","pos":[448,475]}]},{"pos":[482,899],"content":"Pass the <xref:System.IAsyncResult> return value to the <xref:System.IO.Compression.GZipStream.EndRead%2A> method of the stream to determine how many bytes were read and to release operating system resources used for reading. You can do this either by using the same code that called <xref:System.IO.Compression.GZipStream.BeginRead%2A> or in a callback passed to <xref:System.IO.Compression.GZipStream.BeginRead%2A>.","nodes":[{"content":"Pass the <xref:System.IAsyncResult> return value to the <xref:System.IO.Compression.GZipStream.EndRead%2A> method of the stream to determine how many bytes were read and to release operating system resources used for reading. You can do this either by using the same code that called <xref:System.IO.Compression.GZipStream.BeginRead%2A> or in a callback passed to <xref:System.IO.Compression.GZipStream.BeginRead%2A>.","pos":[0,417],"nodes":[{"content":"Pass the <ph id=\"ph1\">&lt;xref:System.IAsyncResult&gt;</ph> return value to the <ph id=\"ph2\">&lt;xref:System.IO.Compression.GZipStream.EndRead%2A&gt;</ph> method of the stream to determine how many bytes were read and to release operating system resources used for reading.","pos":[0,225],"source":"Pass the <xref:System.IAsyncResult> return value to the <xref:System.IO.Compression.GZipStream.EndRead%2A> method of the stream to determine how many bytes were read and to release operating system resources used for reading."},{"content":"You can do this either by using the same code that called <ph id=\"ph1\">&lt;xref:System.IO.Compression.GZipStream.BeginRead%2A&gt;</ph> or in a callback passed to <ph id=\"ph2\">&lt;xref:System.IO.Compression.GZipStream.BeginRead%2A&gt;</ph>.","pos":[226,417],"source":" You can do this either by using the same code that called <xref:System.IO.Compression.GZipStream.BeginRead%2A> or in a callback passed to <xref:System.IO.Compression.GZipStream.BeginRead%2A>."}]}]},{"pos":[906,1036],"content":"The current position in the stream is updated when the asynchronous read or write is issued, not when the I/O operation completes.","nodes":[{"content":"The current position in the stream is updated when the asynchronous read or write is issued, not when the I/O operation completes.","pos":[0,130]}]},{"pos":[1043,1133],"content":"Multiple simultaneous asynchronous requests render the request completion order uncertain.","nodes":[{"content":"Multiple simultaneous asynchronous requests render the request completion order uncertain.","pos":[0,90]}]},{"pos":[1140,1305],"content":"Use the <xref:System.IO.Compression.GZipStream.CanRead%2A> property to determine whether the current <xref:System.IO.Compression.GZipStream> object supports reading.","nodes":[{"content":"Use the <ph id=\"ph1\">&lt;xref:System.IO.Compression.GZipStream.CanRead%2A&gt;</ph> property to determine whether the current <ph id=\"ph2\">&lt;xref:System.IO.Compression.GZipStream&gt;</ph> object supports reading.","pos":[0,165],"source":"Use the <xref:System.IO.Compression.GZipStream.CanRead%2A> property to determine whether the current <xref:System.IO.Compression.GZipStream> object supports reading."}]},{"pos":[1312,1679],"content":"If a stream is closed or you pass an invalid argument, exceptions are thrown immediately from <xref:System.IO.Compression.GZipStream.BeginRead%2A>. Errors that occur during an asynchronous read request, such as a disk failure during the I/O request, occur on the thread pool thread and throw exceptions when calling <xref:System.IO.Compression.GZipStream.EndRead%2A>.","nodes":[{"content":"If a stream is closed or you pass an invalid argument, exceptions are thrown immediately from <xref:System.IO.Compression.GZipStream.BeginRead%2A>. Errors that occur during an asynchronous read request, such as a disk failure during the I/O request, occur on the thread pool thread and throw exceptions when calling <xref:System.IO.Compression.GZipStream.EndRead%2A>.","pos":[0,367],"nodes":[{"content":"If a stream is closed or you pass an invalid argument, exceptions are thrown immediately from <ph id=\"ph1\">&lt;xref:System.IO.Compression.GZipStream.BeginRead%2A&gt;</ph>.","pos":[0,147],"source":"If a stream is closed or you pass an invalid argument, exceptions are thrown immediately from <xref:System.IO.Compression.GZipStream.BeginRead%2A>."},{"content":"Errors that occur during an asynchronous read request, such as a disk failure during the I/O request, occur on the thread pool thread and throw exceptions when calling <ph id=\"ph1\">&lt;xref:System.IO.Compression.GZipStream.EndRead%2A&gt;</ph>.","pos":[148,367],"source":" Errors that occur during an asynchronous read request, such as a disk failure during the I/O request, occur on the thread pool thread and throw exceptions when calling <xref:System.IO.Compression.GZipStream.EndRead%2A>."}]}]}],"pos":[25974,27666],"yaml":true,"extradata":"MT"},{"content":"The byte offset in <code>array</code> at which to begin reading data from the stream.","nodes":[{"pos":[0,85],"content":"The byte offset in <bpt id=\"p1\">&lt;code&gt;</bpt><ph id=\"ph1\">array</ph><ept id=\"p1\">&lt;/code&gt;</ept> at which to begin reading data from the stream.","source":"The byte offset in <code>array</code> at which to begin reading data from the stream."}],"pos":[28341,28427],"yaml":true},{"content":"The maximum number of bytes to read.","nodes":[{"pos":[0,36],"content":"The maximum number of bytes to read.","nodes":[{"content":"The maximum number of bytes to read.","pos":[0,36]}]}],"pos":[28487,28524],"yaml":true},{"content":"An object that represents the asynchronous read operation, which could still be pending.","nodes":[{"pos":[0,88],"content":"An object that represents the asynchronous read operation, which could still be pending.","nodes":[{"content":"An object that represents the asynchronous read operation, which could still be pending.","pos":[0,88]}]}],"pos":[28735,28824],"yaml":true},{"content":"The method tried to  read asynchronously past the end of the stream, or a disk error occurred.","nodes":[{"pos":[0,94],"content":"The method tried to  read asynchronously past the end of the stream, or a disk error occurred.","nodes":[{"content":"The method tried to  read asynchronously past the end of the stream, or a disk error occurred.","pos":[0,94]}]}],"pos":[28982,29077],"yaml":true},{"content":"One or more of the arguments is invalid.","nodes":[{"pos":[0,40],"content":"One or more of the arguments is invalid.","nodes":[{"content":"One or more of the arguments is invalid.","pos":[0,40]}]}],"pos":[29171,29212],"yaml":true},{"content":"Methods were called after the stream was closed.","nodes":[{"pos":[0,48],"content":"Methods were called after the stream was closed.","nodes":[{"content":"Methods were called after the stream was closed.","pos":[0,48]}]}],"pos":[29318,29367],"yaml":true},{"content":"The current <xref href=\"System.IO.Compression.GZipStream\"></xref> implementation does not support the read operation.","nodes":[{"pos":[0,117],"content":"The current <ph id=\"ph1\">&lt;xref href=\"System.IO.Compression.GZipStream\"&gt;&lt;/xref&gt;</ph> implementation does not support the read operation.","source":"The current <xref href=\"System.IO.Compression.GZipStream\"></xref> implementation does not support the read operation."}],"pos":[29469,29587],"yaml":true},{"content":"A read operation cannot be performed because the stream is closed.","nodes":[{"pos":[0,66],"content":"A read operation cannot be performed because the stream is closed.","nodes":[{"content":"A read operation cannot be performed because the stream is closed.","pos":[0,66]}]}],"pos":[29697,29764],"yaml":true},{"content":"Begins an asynchronous write operation. (Consider using the <xref href=\"System.IO.Stream.WriteAsync(System.Byte[],System.Int32,System.Int32)\"></xref> method instead.)","nodes":[{"pos":[0,166],"content":"Begins an asynchronous write operation. (Consider using the <xref href=\"System.IO.Stream.WriteAsync(System.Byte[],System.Int32,System.Int32)\"></xref> method instead.)","nodes":[{"content":"Begins an asynchronous write operation.","pos":[0,39]},{"content":"(Consider using the <ph id=\"ph1\">&lt;xref href=\"System.IO.Stream.WriteAsync(System.Byte[],System.Int32,System.Int32)\"&gt;&lt;/xref&gt;</ph> method instead.)","pos":[40,166],"source":" (Consider using the <xref href=\"System.IO.Stream.WriteAsync(System.Byte[],System.Int32,System.Int32)\"></xref> method instead.)"}]}],"pos":[31262,31429],"yaml":true},{"content":"Starting with the [!INCLUDE[net_v45](~/includes/net-v45-md.md)], you can perform asynchronous write operations by using the <xref:System.IO.Stream.WriteAsync%2A?displayProperty=fullName> method. The <xref:System.IO.Compression.GZipStream.BeginWrite%2A> method is still available in [!INCLUDE[net_v45](~/includes/net-v45-md.md)] to support legacy code; however, you can implement asynchronous I/O operations more easily by using the new async methods. For more information, see .  \n  \n The <xref:System.IO.Compression.GZipStream.BeginWrite%2A> method starts an asynchronous write operation to a <xref:System.IO.Compression.GZipStream> stream object.  \n  \n You must create a callback method that implements the <xref:System.AsyncCallback> delegate and pass its name to the <xref:System.IO.Compression.GZipStream.BeginWrite%2A> method.","nodes":[{"pos":[0,478],"content":"Starting with the [!INCLUDE[net_v45](~/includes/net-v45-md.md)], you can perform asynchronous write operations by using the <xref:System.IO.Stream.WriteAsync%2A?displayProperty=fullName> method. The <xref:System.IO.Compression.GZipStream.BeginWrite%2A> method is still available in [!INCLUDE[net_v45](~/includes/net-v45-md.md)] to support legacy code; however, you can implement asynchronous I/O operations more easily by using the new async methods. For more information, see .","nodes":[{"content":"Starting with the <ph id=\"ph1\">[!INCLUDE[net_v45](~/includes/net-v45-md.md)]</ph>, you can perform asynchronous write operations by using the <ph id=\"ph2\">&lt;xref:System.IO.Stream.WriteAsync%2A?displayProperty=fullName&gt;</ph> method.","pos":[0,194],"source":"Starting with the [!INCLUDE[net_v45](~/includes/net-v45-md.md)], you can perform asynchronous write operations by using the <xref:System.IO.Stream.WriteAsync%2A?displayProperty=fullName> method."},{"content":"The <ph id=\"ph1\">&lt;xref:System.IO.Compression.GZipStream.BeginWrite%2A&gt;</ph> method is still available in <ph id=\"ph2\">[!INCLUDE[net_v45](~/includes/net-v45-md.md)]</ph> to support legacy code; however, you can implement asynchronous I/O operations more easily by using the new async methods.","pos":[195,450],"source":" The <xref:System.IO.Compression.GZipStream.BeginWrite%2A> method is still available in [!INCLUDE[net_v45](~/includes/net-v45-md.md)] to support legacy code; however, you can implement asynchronous I/O operations more easily by using the new async methods."},{"content":"For more information, see .","pos":[451,478]}]},{"pos":[485,648],"content":"The <xref:System.IO.Compression.GZipStream.BeginWrite%2A> method starts an asynchronous write operation to a <xref:System.IO.Compression.GZipStream> stream object.","nodes":[{"content":"The <ph id=\"ph1\">&lt;xref:System.IO.Compression.GZipStream.BeginWrite%2A&gt;</ph> method starts an asynchronous write operation to a <ph id=\"ph2\">&lt;xref:System.IO.Compression.GZipStream&gt;</ph> stream object.","pos":[0,163],"source":"The <xref:System.IO.Compression.GZipStream.BeginWrite%2A> method starts an asynchronous write operation to a <xref:System.IO.Compression.GZipStream> stream object."}]},{"pos":[655,832],"content":"You must create a callback method that implements the <xref:System.AsyncCallback> delegate and pass its name to the <xref:System.IO.Compression.GZipStream.BeginWrite%2A> method.","nodes":[{"content":"You must create a callback method that implements the <ph id=\"ph1\">&lt;xref:System.AsyncCallback&gt;</ph> delegate and pass its name to the <ph id=\"ph2\">&lt;xref:System.IO.Compression.GZipStream.BeginWrite%2A&gt;</ph> method.","pos":[0,177],"source":"You must create a callback method that implements the <xref:System.AsyncCallback> delegate and pass its name to the <xref:System.IO.Compression.GZipStream.BeginWrite%2A> method."}]}],"pos":[31440,32279],"yaml":true,"extradata":"MT"},{"content":"The byte offset in <code>array</code> at which to begin writing.","nodes":[{"pos":[0,64],"content":"The byte offset in <bpt id=\"p1\">&lt;code&gt;</bpt><ph id=\"ph1\">array</ph><ept id=\"p1\">&lt;/code&gt;</ept> at which to begin writing.","source":"The byte offset in <code>array</code> at which to begin writing."}],"pos":[32558,32623],"yaml":true},{"content":"The maximum number of bytes to write.","nodes":[{"pos":[0,37],"content":"The maximum number of bytes to write.","nodes":[{"content":"The maximum number of bytes to write.","pos":[0,37]}]}],"pos":[32683,32721],"yaml":true},{"content":"An  object that represents the asynchronous write operation, which could still be pending.","nodes":[{"pos":[0,90],"content":"An  object that represents the asynchronous write operation, which could still be pending.","nodes":[{"content":"An  object that represents the asynchronous write operation, which could still be pending.","pos":[0,90]}]}],"pos":[32932,33023],"yaml":true},{"content":"The underlying stream is `null`.  \n  \n -or-  \n  \n The underlying stream is closed.","nodes":[{"pos":[0,32],"content":"The underlying stream is <ph id=\"ph1\">`null`</ph>.","source":"The underlying stream is `null`."},{"pos":[39,43],"content":"-or-","nodes":[{"content":"-or-","pos":[0,4]}]},{"pos":[50,82],"content":"The underlying stream is closed.","nodes":[{"content":"The underlying stream is closed.","pos":[0,32]}]}],"pos":[33204,33293],"yaml":true},{"content":"Gets a value indicating whether the stream supports reading while decompressing a file.","nodes":[{"pos":[0,87],"content":"Gets a value indicating whether the stream supports reading while decompressing a file.","nodes":[{"content":"Gets a value indicating whether the stream supports reading while decompressing a file.","pos":[0,87]}]}],"pos":[34412,34500],"yaml":true},{"content":"`true` if the <xref href=\"System.IO.Compression.CompressionMode\"></xref> value is `Decompress,` and the underlying stream supports reading and is not closed; otherwise, `false`.","nodes":[{"pos":[0,177],"content":"<ph id=\"ph1\">`true`</ph> if the <ph id=\"ph2\">&lt;xref href=\"System.IO.Compression.CompressionMode\"&gt;&lt;/xref&gt;</ph> value is <ph id=\"ph3\">`Decompress,`</ph> and the underlying stream supports reading and is not closed; otherwise, <ph id=\"ph4\">`false`</ph>.","source":"`true` if the <xref href=\"System.IO.Compression.CompressionMode\"></xref> value is `Decompress,` and the underlying stream supports reading and is not closed; otherwise, `false`."}],"pos":[34619,34799],"yaml":true},{"content":"Gets a value indicating whether the stream supports seeking.","nodes":[{"pos":[0,60],"content":"Gets a value indicating whether the stream supports seeking.","nodes":[{"content":"Gets a value indicating whether the stream supports seeking.","pos":[0,60]}]}],"pos":[36253,36314],"yaml":true},{"content":"`false` in all cases.","nodes":[{"pos":[0,21],"content":"<ph id=\"ph1\">`false`</ph> in all cases.","source":"`false` in all cases."}],"pos":[36433,36457],"yaml":true},{"content":"Gets a value indicating whether the stream supports writing.","nodes":[{"pos":[0,60],"content":"Gets a value indicating whether the stream supports writing.","nodes":[{"content":"Gets a value indicating whether the stream supports writing.","pos":[0,60]}]}],"pos":[37917,37978],"yaml":true},{"content":"`true` if the <xref href=\"System.IO.Compression.CompressionMode\"></xref> value is `Compress`, and the underlying stream supports writing and is not closed; otherwise, `false`.","nodes":[{"pos":[0,175],"content":"<ph id=\"ph1\">`true`</ph> if the <ph id=\"ph2\">&lt;xref href=\"System.IO.Compression.CompressionMode\"&gt;&lt;/xref&gt;</ph> value is <ph id=\"ph3\">`Compress`</ph>, and the underlying stream supports writing and is not closed; otherwise, <ph id=\"ph4\">`false`</ph>.","source":"`true` if the <xref href=\"System.IO.Compression.CompressionMode\"></xref> value is `Compress`, and the underlying stream supports writing and is not closed; otherwise, `false`."}],"pos":[38098,38276],"yaml":true},{"content":"Releases the unmanaged resources used by the <xref href=\"System.IO.Compression.GZipStream\"></xref> and optionally releases the managed resources.","nodes":[{"pos":[0,145],"content":"Releases the unmanaged resources used by the <ph id=\"ph1\">&lt;xref href=\"System.IO.Compression.GZipStream\"&gt;&lt;/xref&gt;</ph> and optionally releases the managed resources.","source":"Releases the unmanaged resources used by the <xref href=\"System.IO.Compression.GZipStream\"></xref> and optionally releases the managed resources."}],"pos":[39804,39950],"yaml":true},{"content":"This method is called by the public <xref:System.ComponentModel.Component.Dispose%2A> method and the <xref:System.Object.Finalize%2A> method. <xref:System.ComponentModel.Component.Dispose%2A> invokes the protected <xref:System.IO.Compression.GZipStream.Dispose%2A> method with the `disposing` parameter set to `true`. <xref:System.Object.Finalize%2A> invokes <xref:System.IO.Compression.GZipStream.Dispose%2A> with `disposing` set to `false`.  \n  \n When the `disposing` parameter is `true`, this method releases all resources held by any managed objects that this <xref:System.IO.Compression.DeflateStream> references. This method invokes the <xref:System.ComponentModel.Component.Dispose%2A> method of each referenced object.","nodes":[{"pos":[0,442],"content":"This method is called by the public <xref:System.ComponentModel.Component.Dispose%2A> method and the <xref:System.Object.Finalize%2A> method. <xref:System.ComponentModel.Component.Dispose%2A> invokes the protected <xref:System.IO.Compression.GZipStream.Dispose%2A> method with the `disposing` parameter set to `true`. <xref:System.Object.Finalize%2A> invokes <xref:System.IO.Compression.GZipStream.Dispose%2A> with `disposing` set to `false`.","nodes":[{"content":"This method is called by the public <ph id=\"ph1\">&lt;xref:System.ComponentModel.Component.Dispose%2A&gt;</ph> method and the <ph id=\"ph2\">&lt;xref:System.Object.Finalize%2A&gt;</ph> method.","pos":[0,141],"source":"This method is called by the public <xref:System.ComponentModel.Component.Dispose%2A> method and the <xref:System.Object.Finalize%2A> method."},{"content":"<ph id=\"ph1\">&lt;xref:System.ComponentModel.Component.Dispose%2A&gt;</ph> invokes the protected <ph id=\"ph2\">&lt;xref:System.IO.Compression.GZipStream.Dispose%2A&gt;</ph> method with the <ph id=\"ph3\">`disposing`</ph> parameter set to <ph id=\"ph4\">`true`</ph>.","pos":[142,317],"source":" <xref:System.ComponentModel.Component.Dispose%2A> invokes the protected <xref:System.IO.Compression.GZipStream.Dispose%2A> method with the `disposing` parameter set to `true`."},{"content":"<ph id=\"ph1\">&lt;xref:System.Object.Finalize%2A&gt;</ph> invokes <ph id=\"ph2\">&lt;xref:System.IO.Compression.GZipStream.Dispose%2A&gt;</ph> with <ph id=\"ph3\">`disposing`</ph> set to <ph id=\"ph4\">`false`</ph>.","pos":[318,442],"source":" <xref:System.Object.Finalize%2A> invokes <xref:System.IO.Compression.GZipStream.Dispose%2A> with `disposing` set to `false`."}]},{"pos":[449,726],"content":"When the `disposing` parameter is `true`, this method releases all resources held by any managed objects that this <xref:System.IO.Compression.DeflateStream> references. This method invokes the <xref:System.ComponentModel.Component.Dispose%2A> method of each referenced object.","nodes":[{"content":"When the <ph id=\"ph1\">`disposing`</ph> parameter is <ph id=\"ph2\">`true`</ph>, this method releases all resources held by any managed objects that this <ph id=\"ph3\">&lt;xref:System.IO.Compression.DeflateStream&gt;</ph> references.","pos":[0,169],"source":"When the `disposing` parameter is `true`, this method releases all resources held by any managed objects that this <xref:System.IO.Compression.DeflateStream> references."},{"content":"This method invokes the <ph id=\"ph1\">&lt;xref:System.ComponentModel.Component.Dispose%2A&gt;</ph> method of each referenced object.","pos":[170,277],"source":" This method invokes the <xref:System.ComponentModel.Component.Dispose%2A> method of each referenced object."}]}],"pos":[39961,40692],"yaml":true,"extradata":"MT"},{"content":"`true` to release both managed and unmanaged resources; `false` to release only unmanaged resources.","nodes":[{"pos":[0,100],"content":"<ph id=\"ph1\">`true`</ph> to release both managed and unmanaged resources; <ph id=\"ph2\">`false`</ph> to release only unmanaged resources.","source":"`true` to release both managed and unmanaged resources; `false` to release only unmanaged resources."}],"pos":[40847,40950],"yaml":true},{"content":"Waits for the pending asynchronous read to complete. (Consider using the the <xref href=\"System.IO.Stream.ReadAsync(System.Byte[],System.Int32,System.Int32)\"></xref> method instead.)","nodes":[{"pos":[0,182],"content":"Waits for the pending asynchronous read to complete. (Consider using the the <xref href=\"System.IO.Stream.ReadAsync(System.Byte[],System.Int32,System.Int32)\"></xref> method instead.)","nodes":[{"content":"Waits for the pending asynchronous read to complete.","pos":[0,52]},{"content":"(Consider using the the <ph id=\"ph1\">&lt;xref href=\"System.IO.Stream.ReadAsync(System.Byte[],System.Int32,System.Int32)\"&gt;&lt;/xref&gt;</ph> method instead.)","pos":[53,182],"source":" (Consider using the the <xref href=\"System.IO.Stream.ReadAsync(System.Byte[],System.Int32,System.Int32)\"></xref> method instead.)"}]}],"pos":[42507,42690],"yaml":true},{"content":"Starting with the [!INCLUDE[net_v45](~/includes/net-v45-md.md)], you can perform asynchronous read operations by using the <xref:System.IO.Stream.ReadAsync%2A?displayProperty=fullName> method. The <xref:System.IO.Compression.GZipStream.EndRead%2A> method is still available in [!INCLUDE[net_v45](~/includes/net-v45-md.md)] to support legacy code; however, you can implement asynchronous I/O operations more easily by using the new async methods. For more information, see .  \n  \n Call this method to determine how many bytes were read from the stream. This method can be called once to return the amount of bytes read between calls to <xref:System.IO.Compression.GZipStream.BeginRead%2A> and <xref:System.IO.Compression.GZipStream.EndRead%2A>.  \n  \n This method blocks until the I/O operation has completed.","nodes":[{"pos":[0,473],"content":"Starting with the [!INCLUDE[net_v45](~/includes/net-v45-md.md)], you can perform asynchronous read operations by using the <xref:System.IO.Stream.ReadAsync%2A?displayProperty=fullName> method. The <xref:System.IO.Compression.GZipStream.EndRead%2A> method is still available in [!INCLUDE[net_v45](~/includes/net-v45-md.md)] to support legacy code; however, you can implement asynchronous I/O operations more easily by using the new async methods. For more information, see .","nodes":[{"content":"Starting with the <ph id=\"ph1\">[!INCLUDE[net_v45](~/includes/net-v45-md.md)]</ph>, you can perform asynchronous read operations by using the <ph id=\"ph2\">&lt;xref:System.IO.Stream.ReadAsync%2A?displayProperty=fullName&gt;</ph> method.","pos":[0,192],"source":"Starting with the [!INCLUDE[net_v45](~/includes/net-v45-md.md)], you can perform asynchronous read operations by using the <xref:System.IO.Stream.ReadAsync%2A?displayProperty=fullName> method."},{"content":"The <ph id=\"ph1\">&lt;xref:System.IO.Compression.GZipStream.EndRead%2A&gt;</ph> method is still available in <ph id=\"ph2\">[!INCLUDE[net_v45](~/includes/net-v45-md.md)]</ph> to support legacy code; however, you can implement asynchronous I/O operations more easily by using the new async methods.","pos":[193,445],"source":" The <xref:System.IO.Compression.GZipStream.EndRead%2A> method is still available in [!INCLUDE[net_v45](~/includes/net-v45-md.md)] to support legacy code; however, you can implement asynchronous I/O operations more easily by using the new async methods."},{"content":"For more information, see .","pos":[446,473]}]},{"pos":[480,743],"content":"Call this method to determine how many bytes were read from the stream. This method can be called once to return the amount of bytes read between calls to <xref:System.IO.Compression.GZipStream.BeginRead%2A> and <xref:System.IO.Compression.GZipStream.EndRead%2A>.","nodes":[{"content":"Call this method to determine how many bytes were read from the stream. This method can be called once to return the amount of bytes read between calls to <xref:System.IO.Compression.GZipStream.BeginRead%2A> and <xref:System.IO.Compression.GZipStream.EndRead%2A>.","pos":[0,263],"nodes":[{"content":"Call this method to determine how many bytes were read from the stream.","pos":[0,71]},{"content":"This method can be called once to return the amount of bytes read between calls to <ph id=\"ph1\">&lt;xref:System.IO.Compression.GZipStream.BeginRead%2A&gt;</ph> and <ph id=\"ph2\">&lt;xref:System.IO.Compression.GZipStream.EndRead%2A&gt;</ph>.","pos":[72,263],"source":" This method can be called once to return the amount of bytes read between calls to <xref:System.IO.Compression.GZipStream.BeginRead%2A> and <xref:System.IO.Compression.GZipStream.EndRead%2A>."}]}]},{"pos":[750,807],"content":"This method blocks until the I/O operation has completed.","nodes":[{"content":"This method blocks until the I/O operation has completed.","pos":[0,57]}]}],"pos":[42701,43515],"yaml":true,"extradata":"MT"},{"content":"The number of bytes read from the stream, between 0 (zero) and the number of bytes you requested. <xref href=\"System.IO.Compression.GZipStream\"></xref> returns 0 only at the end of the stream; otherwise, it blocks until at least one byte is available.","nodes":[{"pos":[0,251],"content":"The number of bytes read from the stream, between 0 (zero) and the number of bytes you requested. <xref href=\"System.IO.Compression.GZipStream\"></xref> returns 0 only at the end of the stream; otherwise, it blocks until at least one byte is available.","nodes":[{"content":"The number of bytes read from the stream, between 0 (zero) and the number of bytes you requested.","pos":[0,97]},{"content":"<ph id=\"ph1\">&lt;xref href=\"System.IO.Compression.GZipStream\"&gt;&lt;/xref&gt;</ph> returns 0 only at the end of the stream; otherwise, it blocks until at least one byte is available.","pos":[98,251],"source":"<xref href=\"System.IO.Compression.GZipStream\"></xref> returns 0 only at the end of the stream; otherwise, it blocks until at least one byte is available."}]}],"pos":[44140,44392],"yaml":true},{"content":"<code>async_result</code> is `null`.","nodes":[{"pos":[0,36],"content":"<ph id=\"ph1\">&lt;code&gt;async_result&lt;/code&gt;</ph> is <ph id=\"ph2\">`null`</ph>.","source":"<code>async_result</code> is `null`."}],"pos":[44562,44599],"yaml":true},{"content":"<code>async_result</code> did not originate from a <xref href=\"System.IO.Compression.DeflateStream.BeginRead(System.Byte[],System.Int32,System.Int32,System.AsyncCallback,System.Object)\"></xref> method on the current stream.","nodes":[{"pos":[0,223],"content":"<ph id=\"ph1\">&lt;code&gt;async_result&lt;/code&gt;</ph> did not originate from a <ph id=\"ph2\">&lt;xref href=\"System.IO.Compression.DeflateStream.BeginRead(System.Byte[],System.Int32,System.Int32,System.AsyncCallback,System.Object)\"&gt;&lt;/xref&gt;</ph> method on the current stream.","source":"<code>async_result</code> did not originate from a <xref href=\"System.IO.Compression.DeflateStream.BeginRead(System.Byte[],System.Int32,System.Int32,System.AsyncCallback,System.Object)\"></xref> method on the current stream."}],"pos":[44693,44917],"yaml":true},{"content":"The end operation cannot be performed because the stream is closed.","nodes":[{"pos":[0,67],"content":"The end operation cannot be performed because the stream is closed.","nodes":[{"content":"The end operation cannot be performed because the stream is closed.","pos":[0,67]}]}],"pos":[45027,45095],"yaml":true},{"content":"Handles the end of an asynchronous write operation. (Consider using the <xref href=\"System.IO.Stream.WriteAsync(System.Byte[],System.Int32,System.Int32)\"></xref> method instead.)","nodes":[{"pos":[0,178],"content":"Handles the end of an asynchronous write operation. (Consider using the <xref href=\"System.IO.Stream.WriteAsync(System.Byte[],System.Int32,System.Int32)\"></xref> method instead.)","nodes":[{"content":"Handles the end of an asynchronous write operation.","pos":[0,51]},{"content":"(Consider using the <ph id=\"ph1\">&lt;xref href=\"System.IO.Stream.WriteAsync(System.Byte[],System.Int32,System.Int32)\"&gt;&lt;/xref&gt;</ph> method instead.)","pos":[52,178],"source":" (Consider using the <xref href=\"System.IO.Stream.WriteAsync(System.Byte[],System.Int32,System.Int32)\"></xref> method instead.)"}]}],"pos":[46323,46502],"yaml":true},{"content":"Starting with the [!INCLUDE[net_v45](~/includes/net-v45-md.md)], you can perform asynchronous write operations by using the <xref:System.IO.Stream.WriteAsync%2A?displayProperty=fullName> method. The <xref:System.IO.Compression.GZipStream.EndWrite%2A> method is still available in [!INCLUDE[net_v45](~/includes/net-v45-md.md)] to support legacy code; however, you can implement asynchronous I/O operations more easily by using the new async methods. For more information, see .  \n  \n The <xref:System.IO.Compression.GZipStream.EndWrite%2A> method completes the asynchronous write operation started in the <xref:System.IO.Compression.GZipStream.BeginWrite%2A> method.","nodes":[{"pos":[0,476],"content":"Starting with the [!INCLUDE[net_v45](~/includes/net-v45-md.md)], you can perform asynchronous write operations by using the <xref:System.IO.Stream.WriteAsync%2A?displayProperty=fullName> method. The <xref:System.IO.Compression.GZipStream.EndWrite%2A> method is still available in [!INCLUDE[net_v45](~/includes/net-v45-md.md)] to support legacy code; however, you can implement asynchronous I/O operations more easily by using the new async methods. For more information, see .","nodes":[{"content":"Starting with the <ph id=\"ph1\">[!INCLUDE[net_v45](~/includes/net-v45-md.md)]</ph>, you can perform asynchronous write operations by using the <ph id=\"ph2\">&lt;xref:System.IO.Stream.WriteAsync%2A?displayProperty=fullName&gt;</ph> method.","pos":[0,194],"source":"Starting with the [!INCLUDE[net_v45](~/includes/net-v45-md.md)], you can perform asynchronous write operations by using the <xref:System.IO.Stream.WriteAsync%2A?displayProperty=fullName> method."},{"content":"The <ph id=\"ph1\">&lt;xref:System.IO.Compression.GZipStream.EndWrite%2A&gt;</ph> method is still available in <ph id=\"ph2\">[!INCLUDE[net_v45](~/includes/net-v45-md.md)]</ph> to support legacy code; however, you can implement asynchronous I/O operations more easily by using the new async methods.","pos":[195,448],"source":" The <xref:System.IO.Compression.GZipStream.EndWrite%2A> method is still available in [!INCLUDE[net_v45](~/includes/net-v45-md.md)] to support legacy code; however, you can implement asynchronous I/O operations more easily by using the new async methods."},{"content":"For more information, see .","pos":[449,476]}]},{"pos":[483,665],"content":"The <xref:System.IO.Compression.GZipStream.EndWrite%2A> method completes the asynchronous write operation started in the <xref:System.IO.Compression.GZipStream.BeginWrite%2A> method.","nodes":[{"content":"The <ph id=\"ph1\">&lt;xref:System.IO.Compression.GZipStream.EndWrite%2A&gt;</ph> method completes the asynchronous write operation started in the <ph id=\"ph2\">&lt;xref:System.IO.Compression.GZipStream.BeginWrite%2A&gt;</ph> method.","pos":[0,182],"source":"The <xref:System.IO.Compression.GZipStream.EndWrite%2A> method completes the asynchronous write operation started in the <xref:System.IO.Compression.GZipStream.BeginWrite%2A> method."}]}],"pos":[46513,47183],"yaml":true,"extradata":"MT"},{"content":"The underlying stream is `null`.  \n  \n -or-  \n  \n The underlying stream is closed.","nodes":[{"pos":[0,32],"content":"The underlying stream is <ph id=\"ph1\">`null`</ph>.","source":"The underlying stream is `null`."},{"pos":[39,43],"content":"-or-","nodes":[{"content":"-or-","pos":[0,4]}]},{"pos":[50,82],"content":"The underlying stream is closed.","nodes":[{"content":"The underlying stream is closed.","pos":[0,32]}]}],"pos":[47536,47625],"yaml":true},{"content":"The current implementation of this method has no functionality.","nodes":[{"pos":[0,63],"content":"The current implementation of this method has no functionality.","nodes":[{"content":"The current implementation of this method has no functionality.","pos":[0,63]}]}],"pos":[48736,48800],"yaml":true},{"content":"The current implementation of this method does not flush the internal buffer. The internal buffer is flushed when the object is disposed.","nodes":[{"pos":[0,137],"content":"The current implementation of this method does not flush the internal buffer. The internal buffer is flushed when the object is disposed.","nodes":[{"content":"The current implementation of this method does not flush the internal buffer. The internal buffer is flushed when the object is disposed.","pos":[0,137],"nodes":[{"content":"The current implementation of this method does not flush the internal buffer.","pos":[0,77]},{"content":"The internal buffer is flushed when the object is disposed.","pos":[78,137]}]}]}],"pos":[48811,48949],"yaml":true,"extradata":"MT"},{"content":"The stream is closed.","nodes":[{"pos":[0,21],"content":"The stream is closed.","nodes":[{"content":"The stream is closed.","pos":[0,21]}]}],"pos":[49194,49216],"yaml":true},{"content":"This property is not supported and always throws a <xref href=\"System.NotSupportedException\"></xref>.","nodes":[{"pos":[0,101],"content":"This property is not supported and always throws a <ph id=\"ph1\">&lt;xref href=\"System.NotSupportedException\"&gt;&lt;/xref&gt;</ph>.","source":"This property is not supported and always throws a <xref href=\"System.NotSupportedException\"></xref>."}],"pos":[50593,50695],"yaml":true},{"content":"A long value.","nodes":[{"pos":[0,13],"content":"A long value.","nodes":[{"content":"A long value.","pos":[0,13]}]}],"pos":[50811,50825],"yaml":true},{"content":"This property is not supported on this stream.","nodes":[{"pos":[0,46],"content":"This property is not supported on this stream.","nodes":[{"content":"This property is not supported on this stream.","pos":[0,46]}]}],"pos":[50994,51041],"yaml":true},{"content":"This property is not supported and always throws a <xref href=\"System.NotSupportedException\"></xref>.","nodes":[{"pos":[0,101],"content":"This property is not supported and always throws a <ph id=\"ph1\">&lt;xref href=\"System.NotSupportedException\"&gt;&lt;/xref&gt;</ph>.","source":"This property is not supported and always throws a <xref href=\"System.NotSupportedException\"></xref>."}],"pos":[52430,52532],"yaml":true},{"content":"A long value.","nodes":[{"pos":[0,13],"content":"A long value.","nodes":[{"content":"A long value.","pos":[0,13]}]}],"pos":[52655,52669],"yaml":true},{"content":"This property is not supported on this stream.","nodes":[{"pos":[0,46],"content":"This property is not supported on this stream.","nodes":[{"content":"This property is not supported on this stream.","pos":[0,46]}]}],"pos":[52840,52887],"yaml":true},{"content":"Reads a number of decompressed bytes into the specified byte array.","nodes":[{"pos":[0,67],"content":"Reads a number of decompressed bytes into the specified byte array.","nodes":[{"content":"Reads a number of decompressed bytes into the specified byte array.","pos":[0,67]}]}],"pos":[54439,54507],"yaml":true},{"content":"If data is found in an invalid format, an <xref:System.IO.InvalidDataException> is thrown as one of the last operations. A cyclic redundancy check (CRC) is performed as one of the last operations of this method.","nodes":[{"pos":[0,211],"content":"If data is found in an invalid format, an <xref:System.IO.InvalidDataException> is thrown as one of the last operations. A cyclic redundancy check (CRC) is performed as one of the last operations of this method.","nodes":[{"content":"If data is found in an invalid format, an <xref:System.IO.InvalidDataException> is thrown as one of the last operations. A cyclic redundancy check (CRC) is performed as one of the last operations of this method.","pos":[0,211],"nodes":[{"content":"If data is found in an invalid format, an <ph id=\"ph1\">&lt;xref:System.IO.InvalidDataException&gt;</ph> is thrown as one of the last operations.","pos":[0,120],"source":"If data is found in an invalid format, an <xref:System.IO.InvalidDataException> is thrown as one of the last operations."},{"content":"A cyclic redundancy check (CRC) is performed as one of the last operations of this method.","pos":[121,211]}]}]}],"pos":[54518,54730],"yaml":true,"extradata":"MT"},{"content":"The array used to store decompressed bytes.","nodes":[{"pos":[0,43],"content":"The array used to store decompressed bytes.","nodes":[{"content":"The array used to store decompressed bytes.","pos":[0,43]}]}],"pos":[55412,55456],"yaml":true},{"content":"The byte offset in <code>array</code> at which the read bytes will be placed.","nodes":[{"pos":[0,77],"content":"The byte offset in <bpt id=\"p1\">&lt;code&gt;</bpt><ph id=\"ph1\">array</ph><ept id=\"p1\">&lt;/code&gt;</ept> at which the read bytes will be placed.","source":"The byte offset in <code>array</code> at which the read bytes will be placed."}],"pos":[55517,55595],"yaml":true},{"content":"The maximum number of decompressed bytes to read.","nodes":[{"pos":[0,49],"content":"The maximum number of decompressed bytes to read.","nodes":[{"content":"The maximum number of decompressed bytes to read.","pos":[0,49]}]}],"pos":[55655,55705],"yaml":true},{"content":"The number of bytes that were decompressed into the byte array. If the end of the stream has been reached, zero or the number of bytes read is returned.","nodes":[{"pos":[0,152],"content":"The number of bytes that were decompressed into the byte array. If the end of the stream has been reached, zero or the number of bytes read is returned.","nodes":[{"content":"The number of bytes that were decompressed into the byte array. If the end of the stream has been reached, zero or the number of bytes read is returned.","pos":[0,152],"nodes":[{"content":"The number of bytes that were decompressed into the byte array.","pos":[0,63]},{"content":"If the end of the stream has been reached, zero or the number of bytes read is returned.","pos":[64,152]}]}]}],"pos":[55761,55914],"yaml":true},{"content":"<code>array</code> is `null`.","nodes":[{"pos":[0,29],"content":"<ph id=\"ph1\">&lt;code&gt;array&lt;/code&gt;</ph> is <ph id=\"ph2\">`null`</ph>.","source":"<code>array</code> is `null`."}],"pos":[56081,56111],"yaml":true},{"content":"The <xref href=\"System.IO.Compression.CompressionMode\"></xref> value was `Compress` when the object was created.  \n  \n \\- or -  \n  \n The underlying stream does not support reading.","nodes":[{"pos":[0,112],"content":"The <ph id=\"ph1\">&lt;xref href=\"System.IO.Compression.CompressionMode\"&gt;&lt;/xref&gt;</ph> value was <ph id=\"ph2\">`Compress`</ph> when the object was created.","source":"The <xref href=\"System.IO.Compression.CompressionMode\"></xref> value was `Compress` when the object was created."},{"pos":[119,126],"content":"\\- or -","nodes":[{"content":"<ph id=\"ph1\">\\-</ph> or -","pos":[0,7],"source":"\\- or -"}]},{"pos":[133,180],"content":"The underlying stream does not support reading.","nodes":[{"content":"The underlying stream does not support reading.","pos":[0,47]}]}],"pos":[56221,56411],"yaml":true},{"content":"<code>offset</code> or <code>count</code> is less than zero.  \n  \n -or-  \n  \n <code>array</code> length minus the index starting point is less than <code>count</code>.","nodes":[{"pos":[0,60],"content":"<ph id=\"ph1\">&lt;code&gt;offset&lt;/code&gt;</ph> or <ph id=\"ph2\">&lt;code&gt;count&lt;/code&gt;</ph> is less than zero.","source":"<code>offset</code> or <code>count</code> is less than zero."},{"pos":[67,71],"content":"-or-","nodes":[{"content":"-or-","pos":[0,4]}]},{"pos":[78,167],"content":"<ph id=\"ph1\">&lt;code&gt;array&lt;/code&gt;</ph> length minus the index starting point is less than <ph id=\"ph2\">&lt;code&gt;count&lt;/code&gt;</ph>.","source":"<code>array</code> length minus the index starting point is less than <code>count</code>."}],"pos":[56525,56699],"yaml":true},{"content":"The data is in an invalid format.","nodes":[{"pos":[0,33],"content":"The data is in an invalid format.","nodes":[{"content":"The data is in an invalid format.","pos":[0,33]}]}],"pos":[56805,56839],"yaml":true},{"content":"The stream is closed.","nodes":[{"pos":[0,21],"content":"The stream is closed.","nodes":[{"content":"The stream is closed.","pos":[0,21]}]}],"pos":[56945,56967],"yaml":true},{"content":"This property is not supported and always throws a <xref href=\"System.NotSupportedException\"></xref>.","nodes":[{"pos":[0,101],"content":"This property is not supported and always throws a <ph id=\"ph1\">&lt;xref href=\"System.NotSupportedException\"&gt;&lt;/xref&gt;</ph>.","source":"This property is not supported and always throws a <xref href=\"System.NotSupportedException\"></xref>."}],"pos":[60190,60292],"yaml":true},{"content":"The location in the stream.","nodes":[{"pos":[0,27],"content":"The location in the stream.","nodes":[{"content":"The location in the stream.","pos":[0,27]}]}],"pos":[60462,60490],"yaml":true},{"content":"One of the <xref href=\"System.IO.SeekOrigin\"></xref> values.","nodes":[{"pos":[0,60],"content":"One of the <ph id=\"ph1\">&lt;xref href=\"System.IO.SeekOrigin\"&gt;&lt;/xref&gt;</ph> values.","source":"One of the <xref href=\"System.IO.SeekOrigin\"></xref> values."}],"pos":[60559,60620],"yaml":true},{"content":"A long value.","nodes":[{"pos":[0,13],"content":"A long value.","nodes":[{"content":"A long value.","pos":[0,13]}]}],"pos":[60676,60690],"yaml":true},{"content":"This property is not supported on this stream.","nodes":[{"pos":[0,46],"content":"This property is not supported on this stream.","nodes":[{"content":"This property is not supported on this stream.","pos":[0,46]}]}],"pos":[60857,60904],"yaml":true},{"content":"This property is not supported and always throws a <xref href=\"System.NotSupportedException\"></xref>.","nodes":[{"pos":[0,101],"content":"This property is not supported and always throws a <ph id=\"ph1\">&lt;xref href=\"System.NotSupportedException\"&gt;&lt;/xref&gt;</ph>.","source":"This property is not supported and always throws a <xref href=\"System.NotSupportedException\"></xref>."}],"pos":[62360,62462],"yaml":true},{"content":"The length of the stream.","nodes":[{"pos":[0,25],"content":"The length of the stream.","nodes":[{"content":"The length of the stream.","pos":[0,25]}]}],"pos":[62606,62632],"yaml":true},{"content":"This property is not supported on this stream.","nodes":[{"pos":[0,46],"content":"This property is not supported on this stream.","nodes":[{"content":"This property is not supported on this stream.","pos":[0,46]}]}],"pos":[62804,62851],"yaml":true},{"content":"Writes compressed bytes to the underlying stream from the specified byte array.","nodes":[{"pos":[0,79],"content":"Writes compressed bytes to the underlying stream from the specified byte array.","nodes":[{"content":"Writes compressed bytes to the underlying stream from the specified byte array.","pos":[0,79]}]}],"pos":[64409,64489],"yaml":true},{"content":"The write operation might not occur immediately but is buffered until the buffer size is reached or until the <xref:System.IO.Compression.GZipStream.Flush%2A> or <xref:System.IO.Stream.Close%2A> method is called.","nodes":[{"pos":[0,212],"content":"The write operation might not occur immediately but is buffered until the buffer size is reached or until the <xref:System.IO.Compression.GZipStream.Flush%2A> or <xref:System.IO.Stream.Close%2A> method is called.","nodes":[{"content":"The write operation might not occur immediately but is buffered until the buffer size is reached or until the <ph id=\"ph1\">&lt;xref:System.IO.Compression.GZipStream.Flush%2A&gt;</ph> or <ph id=\"ph2\">&lt;xref:System.IO.Stream.Close%2A&gt;</ph> method is called.","pos":[0,212],"source":"The write operation might not occur immediately but is buffered until the buffer size is reached or until the <xref:System.IO.Compression.GZipStream.Flush%2A> or <xref:System.IO.Stream.Close%2A> method is called."}]}],"pos":[64500,64713],"yaml":true,"extradata":"MT"},{"content":"The buffer that contains the data to compress.","nodes":[{"pos":[0,46],"content":"The buffer that contains the data to compress.","nodes":[{"content":"The buffer that contains the data to compress.","pos":[0,46]}]}],"pos":[65397,65444],"yaml":true},{"content":"The byte offset in <code>array</code> from which the bytes will be read.","nodes":[{"pos":[0,72],"content":"The byte offset in <bpt id=\"p1\">&lt;code&gt;</bpt><ph id=\"ph1\">array</ph><ept id=\"p1\">&lt;/code&gt;</ept> from which the bytes will be read.","source":"The byte offset in <code>array</code> from which the bytes will be read."}],"pos":[65505,65578],"yaml":true},{"content":"The maximum number of bytes to write.","nodes":[{"pos":[0,37],"content":"The maximum number of bytes to write.","nodes":[{"content":"The maximum number of bytes to write.","pos":[0,37]}]}],"pos":[65638,65676],"yaml":true},{"content":"The write operation cannot be performed because the stream is closed.","nodes":[{"pos":[0,69],"content":"The write operation cannot be performed because the stream is closed.","nodes":[{"content":"The write operation cannot be performed because the stream is closed.","pos":[0,69]}]}],"pos":[65848,65918],"yaml":true}],"content":"### YamlMime:ManagedReference\nitems:\n- uid: System.IO.Compression.GZipStream\n  commentId: T:System.IO.Compression.GZipStream\n  id: GZipStream\n  children:\n  - System.IO.Compression.GZipStream.#ctor(System.IO.Stream,System.IO.Compression.CompressionLevel)\n  - System.IO.Compression.GZipStream.#ctor(System.IO.Stream,System.IO.Compression.CompressionMode)\n  - System.IO.Compression.GZipStream.#ctor(System.IO.Stream,System.IO.Compression.CompressionLevel,System.Boolean)\n  - System.IO.Compression.GZipStream.#ctor(System.IO.Stream,System.IO.Compression.CompressionMode,System.Boolean)\n  - System.IO.Compression.GZipStream.BaseStream\n  - System.IO.Compression.GZipStream.BeginRead(System.Byte[],System.Int32,System.Int32,System.AsyncCallback,System.Object)\n  - System.IO.Compression.GZipStream.BeginWrite(System.Byte[],System.Int32,System.Int32,System.AsyncCallback,System.Object)\n  - System.IO.Compression.GZipStream.CanRead\n  - System.IO.Compression.GZipStream.CanSeek\n  - System.IO.Compression.GZipStream.CanWrite\n  - System.IO.Compression.GZipStream.Dispose(System.Boolean)\n  - System.IO.Compression.GZipStream.EndRead(System.IAsyncResult)\n  - System.IO.Compression.GZipStream.EndWrite(System.IAsyncResult)\n  - System.IO.Compression.GZipStream.Flush\n  - System.IO.Compression.GZipStream.Length\n  - System.IO.Compression.GZipStream.Position\n  - System.IO.Compression.GZipStream.Read(System.Byte[],System.Int32,System.Int32)\n  - System.IO.Compression.GZipStream.ReadAsync(System.Byte[],System.Int32,System.Int32,System.Threading.CancellationToken)\n  - System.IO.Compression.GZipStream.Seek(System.Int64,System.IO.SeekOrigin)\n  - System.IO.Compression.GZipStream.SetLength(System.Int64)\n  - System.IO.Compression.GZipStream.Write(System.Byte[],System.Int32,System.Int32)\n  - System.IO.Compression.GZipStream.WriteAsync(System.Byte[],System.Int32,System.Int32,System.Threading.CancellationToken)\n  langs:\n  - csharp\n  name: GZipStream\n  nameWithType: GZipStream\n  fullName: System.IO.Compression.GZipStream\n  type: Class\n  assemblies:\n  - System.IO.Compression\n  - System\n  - netstandard\n  namespace: System.IO.Compression\n  summary: Provides methods and properties used to compress and decompress streams.\n  remarks: \"This class represents the gzip data format, which uses an industry-standard algorithm for lossless file compression and decompression. The format includes a cyclic redundancy check value for detecting data corruption. The gzip data format uses the same algorithm as the <xref:System.IO.Compression.DeflateStream> class, but can be extended to use other compression formats. The format can be readily implemented in a manner not covered by patents.  \\n  \\n Starting with the [!INCLUDE[net_v45](~/includes/net-v45-md.md)], the <xref:System.IO.Compression.DeflateStream> class uses the zlib library for compression. As a result, it provides a better compression algorithm and, in most cases, a smaller compressed file than it provides in earlier versions of the .NET Framework.  \\n  \\n Compressed <xref:System.IO.Compression.GZipStream> objects written to a file with an extension of .gz can be decompressed using many common compression tools; however, this class does not inherently provide functionality for adding files to or extracting files from zip archives.  \\n  \\n The compression functionality in <xref:System.IO.Compression.DeflateStream> and <xref:System.IO.Compression.GZipStream> is exposed as a stream. Data is read on a byte-by-byte basis, so it is not possible to perform multiple passes to determine the best method for compressing entire files or large blocks of data. The <xref:System.IO.Compression.DeflateStream> and <xref:System.IO.Compression.GZipStream> classes are best used on uncompressed sources of data. If the source data is already compressed, using these classes may actually increase the size of the stream.\"\n  example:\n  - \"The following example shows how to use the <xref:System.IO.Compression.GZipStream> class to compress and decompress a directory of files.  \\n  \\n [!code-csharp[IO.Compression.GZip1#1](~/samples/snippets/csharp/VS_Snippets_CLR/IO.Compression.GZip1/CS/gziptest.cs#1)]\\n [!code-vb[IO.Compression.GZip1#1](~/samples/snippets/visualbasic/VS_Snippets_CLR/IO.Compression.GZip1/VB/gziptest.vb#1)]\"\n  syntax:\n    content: 'public class GZipStream : System.IO.Stream'\n  inheritance:\n  - System.Object\n  - System.IO.Stream\n  implements: []\n  inheritedMembers:\n  - System.IO.Stream.CanTimeout\n  - System.IO.Stream.Close\n  - System.IO.Stream.CopyTo(System.IO.Stream)\n  - System.IO.Stream.CopyTo(System.IO.Stream,System.Int32)\n  - System.IO.Stream.CopyToAsync(System.IO.Stream)\n  - System.IO.Stream.CopyToAsync(System.IO.Stream,System.Int32)\n  - System.IO.Stream.CopyToAsync(System.IO.Stream,System.Int32,System.Threading.CancellationToken)\n  - System.IO.Stream.CreateWaitHandle\n  - System.IO.Stream.Dispose\n  - System.IO.Stream.FlushAsync\n  - System.IO.Stream.FlushAsync(System.Threading.CancellationToken)\n  - System.IO.Stream.Null\n  - System.IO.Stream.ObjectInvariant\n  - System.IO.Stream.ReadAsync(System.Byte[],System.Int32,System.Int32)\n  - System.IO.Stream.ReadByte\n  - System.IO.Stream.ReadTimeout\n  - System.IO.Stream.Synchronized(System.IO.Stream)\n  - System.IO.Stream.WriteAsync(System.Byte[],System.Int32,System.Int32)\n  - System.IO.Stream.WriteByte(System.Byte)\n  - System.IO.Stream.WriteTimeout\n  - System.Object.Equals(System.Object)\n  - System.Object.Equals(System.Object,System.Object)\n  - System.Object.GetHashCode\n  - System.Object.GetType\n  - System.Object.MemberwiseClone\n  - System.Object.ReferenceEquals(System.Object,System.Object)\n  - System.Object.ToString\n  version:\n  - netcore-1.0\n  - netcore-1.1\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - netstandard-1.1\n  - netstandard-1.2\n  - netstandard-1.3\n  - netstandard-1.4\n  - netstandard-1.6\n  - netstandard-2.0\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  monikers:\n  - netcore-1.0\n  - netcore-1.1\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - netstandard-1.1\n  - netstandard-1.2\n  - netstandard-1.3\n  - netstandard-1.4\n  - netstandard-1.6\n  - netstandard-2.0\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.IO.Compression/GZipStream.xml\n  ms.technology:\n  - dotnet-standard\n  author: mairaw\n  ms.author: mairaw\n  manager: wpickett\n- uid: System.IO.Compression.GZipStream.#ctor(System.IO.Stream,System.IO.Compression.CompressionLevel)\n  commentId: M:System.IO.Compression.GZipStream.#ctor(System.IO.Stream,System.IO.Compression.CompressionLevel)\n  id: '#ctor(System.IO.Stream,System.IO.Compression.CompressionLevel)'\n  parent: System.IO.Compression.GZipStream\n  langs:\n  - csharp\n  name: GZipStream(Stream, CompressionLevel)\n  nameWithType: GZipStream.GZipStream(Stream, CompressionLevel)\n  fullName: GZipStream.GZipStream(Stream, CompressionLevel)\n  type: Constructor\n  assemblies:\n  - System.IO.Compression\n  - System\n  - netstandard\n  namespace: System.IO.Compression\n  summary: Initializes a new instance of the <xref href=\"System.IO.Compression.GZipStream\"></xref> class by using the specified stream and compression level.\n  remarks: \"You use this constructor when you want to specify whether compression efficiency or speed is more important for an instance of the <xref:System.IO.Compression.GZipStream> class.  \\n  \\n This constructor overload uses the compression mode <xref:System.IO.Compression.CompressionMode.Compress>. To set the compression mode to another value, use the <xref:System.IO.Compression.GZipStream.%23ctor%28System.IO.Stream%2CSystem.IO.Compression.CompressionMode%29> or <xref:System.IO.Compression.GZipStream.%23ctor%28System.IO.Stream%2CSystem.IO.Compression.CompressionMode%2CSystem.Boolean%29> overload.\"\n  example:\n  - \"The following example shows how to set the compression level when creating a <xref:System.IO.Compression.GZipStream> object.  \\n  \\n [!code-csharp[System.IO.Compression.GZipStream#1](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.io.compression.gzipstream/cs/program1.cs#1)]\\n [!code-vb[System.IO.Compression.GZipStream#1](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.io.compression.gzipstream/vb/program1.vb#1)]\"\n  syntax:\n    content: public GZipStream (System.IO.Stream stream, System.IO.Compression.CompressionLevel compressionLevel);\n    parameters:\n    - id: stream\n      type: System.IO.Stream\n      description: The stream to write the compressed data to.\n    - id: compressionLevel\n      type: System.IO.Compression.CompressionLevel\n      description: One of the enumeration values that indicates whether to emphasize speed or compression efficiency when compressing the stream.\n  overload: System.IO.Compression.GZipStream.#ctor*\n  exceptions:\n  - type: System.ArgumentNullException\n    commentId: T:System.ArgumentNullException\n    description: <code>stream</code> is `null`.\n  - type: System.ArgumentException\n    commentId: T:System.ArgumentException\n    description: The stream does not support write operations such as compression. (The <xref href=\"System.IO.Stream.CanWrite\"></xref> property on the stream object is `false`.)\n  version:\n  - netcore-1.0\n  - netcore-1.1\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - netstandard-1.1\n  - netstandard-1.2\n  - netstandard-1.3\n  - netstandard-1.4\n  - netstandard-1.6\n  - netstandard-2.0\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  monikers:\n  - netcore-1.0\n  - netcore-1.1\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - netstandard-1.1\n  - netstandard-1.2\n  - netstandard-1.3\n  - netstandard-1.4\n  - netstandard-1.6\n  - netstandard-2.0\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.IO.Compression/GZipStream.xml\n  ms.technology:\n  - dotnet-standard\n  author: mairaw\n  ms.author: mairaw\n  manager: wpickett\n- uid: System.IO.Compression.GZipStream.#ctor(System.IO.Stream,System.IO.Compression.CompressionMode)\n  commentId: M:System.IO.Compression.GZipStream.#ctor(System.IO.Stream,System.IO.Compression.CompressionMode)\n  id: '#ctor(System.IO.Stream,System.IO.Compression.CompressionMode)'\n  parent: System.IO.Compression.GZipStream\n  langs:\n  - csharp\n  name: GZipStream(Stream, CompressionMode)\n  nameWithType: GZipStream.GZipStream(Stream, CompressionMode)\n  fullName: GZipStream.GZipStream(Stream, CompressionMode)\n  type: Constructor\n  assemblies:\n  - System.IO.Compression\n  - System\n  - netstandard\n  namespace: System.IO.Compression\n  summary: Initializes a new instance of the <xref href=\"System.IO.Compression.GZipStream\"></xref> class by using the specified stream and compression mode.\n  remarks: \"By default, <xref:System.IO.Compression.GZipStream> owns the underlying stream, so closing the `stream` parameter also closes the underlying stream. Note that the state of the underlying stream can affect the usability of the stream. Also, no explicit checks are performed, so no additional exceptions are thrown when the new instance is created.  \\n  \\n If an instance of the <xref:System.IO.Compression.GZipStream> class is created with the `mode` parameter equal to `Compress` and no further action occurs, the stream will appear as a valid, empty compressed file.  \\n  \\n By default, the compression level is set to <xref:System.IO.Compression.CompressionLevel.Optimal> when the compression mode is <xref:System.IO.Compression.CompressionMode.Compress>.\"\n  example:\n  - \"The following example initializes a new instance of the <xref:System.IO.Compression.GZipStream> class with `mode` set to <xref:System.IO.Compression.CompressionMode.Compress>. This example is part of a larger example provided for the <xref:System.IO.Compression.GZipStream> class.  \\n  \\n [!code-csharp[IO.Compression.GZip1#1](~/samples/snippets/csharp/VS_Snippets_CLR/IO.Compression.GZip1/CS/gziptest.cs#1)]\\n [!code-vb[IO.Compression.GZip1#1](~/samples/snippets/visualbasic/VS_Snippets_CLR/IO.Compression.GZip1/VB/gziptest.vb#1)]\"\n  syntax:\n    content: public GZipStream (System.IO.Stream stream, System.IO.Compression.CompressionMode mode);\n    parameters:\n    - id: stream\n      type: System.IO.Stream\n      description: The stream the compressed or decompressed data is written to.\n    - id: mode\n      type: System.IO.Compression.CompressionMode\n      description: One of the enumeration values that indicates whether to compress or decompress the stream.\n  overload: System.IO.Compression.GZipStream.#ctor*\n  exceptions:\n  - type: System.ArgumentNullException\n    commentId: T:System.ArgumentNullException\n    description: <code>stream</code> is `null`.\n  - type: System.ArgumentException\n    commentId: T:System.ArgumentException\n    description: \"<code>mode</code> is not a valid <xref href=\\\"System.IO.Compression.CompressionMode\\\"></xref> enumeration value.  \\n  \\n -or-  \\n  \\n <xref href=\\\"System.IO.Compression.CompressionMode\\\"></xref> is <xref href=\\\"System.IO.Compression.CompressionMode.Compress\\\"></xref> and <xref href=\\\"System.IO.Stream.CanWrite\\\"></xref> is `false`.  \\n  \\n -or-  \\n  \\n <xref href=\\\"System.IO.Compression.CompressionMode\\\"></xref> is <xref href=\\\"System.IO.Compression.CompressionMode.Decompress\\\"></xref> and <xref href=\\\"System.IO.Stream.CanRead\\\"></xref> is `false`.\"\n  version:\n  - netcore-1.0\n  - netcore-1.1\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - netstandard-1.1\n  - netstandard-1.2\n  - netstandard-1.3\n  - netstandard-1.4\n  - netstandard-1.6\n  - netstandard-2.0\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  monikers:\n  - netcore-1.0\n  - netcore-1.1\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - netstandard-1.1\n  - netstandard-1.2\n  - netstandard-1.3\n  - netstandard-1.4\n  - netstandard-1.6\n  - netstandard-2.0\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.IO.Compression/GZipStream.xml\n  ms.technology:\n  - dotnet-standard\n  author: mairaw\n  ms.author: mairaw\n  manager: wpickett\n- uid: System.IO.Compression.GZipStream.#ctor(System.IO.Stream,System.IO.Compression.CompressionLevel,System.Boolean)\n  commentId: M:System.IO.Compression.GZipStream.#ctor(System.IO.Stream,System.IO.Compression.CompressionLevel,System.Boolean)\n  id: '#ctor(System.IO.Stream,System.IO.Compression.CompressionLevel,System.Boolean)'\n  parent: System.IO.Compression.GZipStream\n  langs:\n  - csharp\n  name: GZipStream(Stream, CompressionLevel, Boolean)\n  nameWithType: GZipStream.GZipStream(Stream, CompressionLevel, Boolean)\n  fullName: GZipStream.GZipStream(Stream, CompressionLevel, Boolean)\n  type: Constructor\n  assemblies:\n  - System.IO.Compression\n  - System\n  - netstandard\n  namespace: System.IO.Compression\n  summary: Initializes a new instance of the <xref href=\"System.IO.Compression.GZipStream\"></xref> class by using the specified stream and compression level, and optionally leaves the stream open.\n  remarks: \"You use this constructor when you want to specify whether compression efficiency or speed is more important for an instance of the <xref:System.IO.Compression.GZipStream> class, and whether to leave the stream object open after disposing the <xref:System.IO.Compression.GZipStream> object.  \\n  \\n This constructor overload uses the compression mode <xref:System.IO.Compression.CompressionMode.Compress>. To set the compression mode to another value, use the <xref:System.IO.Compression.GZipStream.%23ctor%28System.IO.Stream%2CSystem.IO.Compression.CompressionMode%29> or <xref:System.IO.Compression.GZipStream.%23ctor%28System.IO.Stream%2CSystem.IO.Compression.CompressionMode%2CSystem.Boolean%29> overload.\"\n  example:\n  - \"The following example shows how to set the compression level when creating a <xref:System.IO.Compression.GZipStream> object and how to leave the stream open.  \\n  \\n [!code-csharp[System.IO.Compression.GZipStream#2](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.io.compression.gzipstream/cs/program2.cs#2)]\\n [!code-vb[System.IO.Compression.GZipStream#2](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.io.compression.gzipstream/vb/program2.vb#2)]\"\n  syntax:\n    content: public GZipStream (System.IO.Stream stream, System.IO.Compression.CompressionLevel compressionLevel, bool leaveOpen);\n    parameters:\n    - id: stream\n      type: System.IO.Stream\n      description: The stream to write the compressed data to.\n    - id: compressionLevel\n      type: System.IO.Compression.CompressionLevel\n      description: One of the enumeration values that indicates whether to emphasize speed or compression efficiency when compressing the stream.\n    - id: leaveOpen\n      type: System.Boolean\n      description: '`true` to leave the stream object open after disposing the <xref href=\"System.IO.Compression.GZipStream\"></xref> object; otherwise, `false`.'\n  overload: System.IO.Compression.GZipStream.#ctor*\n  exceptions:\n  - type: System.ArgumentNullException\n    commentId: T:System.ArgumentNullException\n    description: <code>stream</code> is `null`.\n  - type: System.ArgumentException\n    commentId: T:System.ArgumentException\n    description: The stream does not support write operations such as compression. (The <xref href=\"System.IO.Stream.CanWrite\"></xref> property on the stream object is `false`.)\n  version:\n  - netcore-1.0\n  - netcore-1.1\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - netstandard-1.1\n  - netstandard-1.2\n  - netstandard-1.3\n  - netstandard-1.4\n  - netstandard-1.6\n  - netstandard-2.0\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  monikers:\n  - netcore-1.0\n  - netcore-1.1\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - netstandard-1.1\n  - netstandard-1.2\n  - netstandard-1.3\n  - netstandard-1.4\n  - netstandard-1.6\n  - netstandard-2.0\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.IO.Compression/GZipStream.xml\n  ms.technology:\n  - dotnet-standard\n  author: mairaw\n  ms.author: mairaw\n  manager: wpickett\n- uid: System.IO.Compression.GZipStream.#ctor(System.IO.Stream,System.IO.Compression.CompressionMode,System.Boolean)\n  commentId: M:System.IO.Compression.GZipStream.#ctor(System.IO.Stream,System.IO.Compression.CompressionMode,System.Boolean)\n  id: '#ctor(System.IO.Stream,System.IO.Compression.CompressionMode,System.Boolean)'\n  parent: System.IO.Compression.GZipStream\n  langs:\n  - csharp\n  name: GZipStream(Stream, CompressionMode, Boolean)\n  nameWithType: GZipStream.GZipStream(Stream, CompressionMode, Boolean)\n  fullName: GZipStream.GZipStream(Stream, CompressionMode, Boolean)\n  type: Constructor\n  assemblies:\n  - System.IO.Compression\n  - System\n  - netstandard\n  namespace: System.IO.Compression\n  summary: Initializes a new instance of the <xref href=\"System.IO.Compression.GZipStream\"></xref> class by using the specified stream and compression mode, and optionally leaves the stream open.\n  remarks: \"By default, <xref:System.IO.Compression.GZipStream> owns the underlying stream, so closing the `stream` parameter also closes the underlying stream. Note that the state of the underlying stream can affect the usability of the stream. Also, no explicit checks are performed, so no additional exceptions are thrown when the new instance is created.  \\n  \\n If an instance of the <xref:System.IO.Compression.GZipStream> class is created with the `mode` parameter equal to `Compress` and no further action occurs, the stream will appear as a valid, empty compressed file.  \\n  \\n By default, the compression level is set to <xref:System.IO.Compression.CompressionLevel.Optimal> when the compression mode is <xref:System.IO.Compression.CompressionMode.Compress>.\"\n  syntax:\n    content: public GZipStream (System.IO.Stream stream, System.IO.Compression.CompressionMode mode, bool leaveOpen);\n    parameters:\n    - id: stream\n      type: System.IO.Stream\n      description: The stream the compressed or decompressed data is written to.\n    - id: mode\n      type: System.IO.Compression.CompressionMode\n      description: One of the enumeration values that indicates whether to compress or decompress the stream.\n    - id: leaveOpen\n      type: System.Boolean\n      description: '`true` to leave the stream open after disposing the <xref href=\"System.IO.Compression.GZipStream\"></xref> object; otherwise, `false`.'\n  overload: System.IO.Compression.GZipStream.#ctor*\n  exceptions:\n  - type: System.ArgumentNullException\n    commentId: T:System.ArgumentNullException\n    description: <code>stream</code> is `null`.\n  - type: System.ArgumentException\n    commentId: T:System.ArgumentException\n    description: \"<code>mode</code> is not a valid <xref href=\\\"System.IO.Compression.CompressionMode\\\"></xref> value.  \\n  \\n -or-  \\n  \\n <xref href=\\\"System.IO.Compression.CompressionMode\\\"></xref> is <xref href=\\\"System.IO.Compression.CompressionMode.Compress\\\"></xref> and <xref href=\\\"System.IO.Stream.CanWrite\\\"></xref> is `false`.  \\n  \\n -or-  \\n  \\n <xref href=\\\"System.IO.Compression.CompressionMode\\\"></xref> is <xref href=\\\"System.IO.Compression.CompressionMode.Decompress\\\"></xref> and <xref href=\\\"System.IO.Stream.CanRead\\\"></xref> is `false`.\"\n  version:\n  - netcore-1.0\n  - netcore-1.1\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - netstandard-1.1\n  - netstandard-1.2\n  - netstandard-1.3\n  - netstandard-1.4\n  - netstandard-1.6\n  - netstandard-2.0\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  monikers:\n  - netcore-1.0\n  - netcore-1.1\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - netstandard-1.1\n  - netstandard-1.2\n  - netstandard-1.3\n  - netstandard-1.4\n  - netstandard-1.6\n  - netstandard-2.0\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.IO.Compression/GZipStream.xml\n  ms.technology:\n  - dotnet-standard\n  author: mairaw\n  ms.author: mairaw\n  manager: wpickett\n- uid: System.IO.Compression.GZipStream.BaseStream\n  commentId: P:System.IO.Compression.GZipStream.BaseStream\n  id: BaseStream\n  parent: System.IO.Compression.GZipStream\n  langs:\n  - csharp\n  name: BaseStream\n  nameWithType: GZipStream.BaseStream\n  fullName: GZipStream.BaseStream\n  type: Property\n  assemblies:\n  - System.IO.Compression\n  - System\n  - netstandard\n  namespace: System.IO.Compression\n  summary: Gets a reference to the underlying stream.\n  syntax:\n    content: public System.IO.Stream BaseStream { get; }\n    return:\n      type: System.IO.Stream\n      description: A stream object that represents the underlying stream.\n  overload: System.IO.Compression.GZipStream.BaseStream*\n  exceptions:\n  - type: System.ObjectDisposedException\n    commentId: T:System.ObjectDisposedException\n    description: The underlying stream is closed.\n  version:\n  - netcore-1.0\n  - netcore-1.1\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - netstandard-1.1\n  - netstandard-1.2\n  - netstandard-1.3\n  - netstandard-1.4\n  - netstandard-1.6\n  - netstandard-2.0\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  monikers:\n  - netcore-1.0\n  - netcore-1.1\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - netstandard-1.1\n  - netstandard-1.2\n  - netstandard-1.3\n  - netstandard-1.4\n  - netstandard-1.6\n  - netstandard-2.0\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.IO.Compression/GZipStream.xml\n  ms.technology:\n  - dotnet-standard\n  author: mairaw\n  ms.author: mairaw\n  manager: wpickett\n- uid: System.IO.Compression.GZipStream.BeginRead(System.Byte[],System.Int32,System.Int32,System.AsyncCallback,System.Object)\n  commentId: M:System.IO.Compression.GZipStream.BeginRead(System.Byte[],System.Int32,System.Int32,System.AsyncCallback,System.Object)\n  id: BeginRead(System.Byte[],System.Int32,System.Int32,System.AsyncCallback,System.Object)\n  parent: System.IO.Compression.GZipStream\n  langs:\n  - csharp\n  name: BeginRead(Byte[], Int32, Int32, AsyncCallback, Object)\n  nameWithType: GZipStream.BeginRead(Byte[], Int32, Int32, AsyncCallback, Object)\n  fullName: GZipStream.BeginRead(Byte[], Int32, Int32, AsyncCallback, Object)\n  type: Method\n  assemblies:\n  - System\n  - netstandard\n  - System.IO.Compression\n  namespace: System.IO.Compression\n  summary: Begins an asynchronous read operation. (Consider using the <xref href=\"System.IO.Stream.ReadAsync(System.Byte[],System.Int32,System.Int32)\"></xref> method instead.)\n  remarks: \"Starting with the [!INCLUDE[net_v45](~/includes/net-v45-md.md)], you can perform asynchronous read operations by using the <xref:System.IO.Stream.ReadAsync%2A?displayProperty=fullName> method. The <xref:System.IO.Compression.GZipStream.BeginRead%2A> method is still available in [!INCLUDE[net_v45](~/includes/net-v45-md.md)] to support legacy code; however, you can implement asynchronous I/O operations more easily by using the new async methods. For more information, see .  \\n  \\n Pass the <xref:System.IAsyncResult> return value to the <xref:System.IO.Compression.GZipStream.EndRead%2A> method of the stream to determine how many bytes were read and to release operating system resources used for reading. You can do this either by using the same code that called <xref:System.IO.Compression.GZipStream.BeginRead%2A> or in a callback passed to <xref:System.IO.Compression.GZipStream.BeginRead%2A>.  \\n  \\n The current position in the stream is updated when the asynchronous read or write is issued, not when the I/O operation completes.  \\n  \\n Multiple simultaneous asynchronous requests render the request completion order uncertain.  \\n  \\n Use the <xref:System.IO.Compression.GZipStream.CanRead%2A> property to determine whether the current <xref:System.IO.Compression.GZipStream> object supports reading.  \\n  \\n If a stream is closed or you pass an invalid argument, exceptions are thrown immediately from <xref:System.IO.Compression.GZipStream.BeginRead%2A>. Errors that occur during an asynchronous read request, such as a disk failure during the I/O request, occur on the thread pool thread and throw exceptions when calling <xref:System.IO.Compression.GZipStream.EndRead%2A>.\"\n  example:\n  - \"The following code example shows how to use the <xref:System.IO.Compression.GZipStream> class to compress and decompress a file.  \\n  \\n [!code-csharp[IO.Compression.GZip1#1](~/samples/snippets/csharp/VS_Snippets_CLR/IO.Compression.GZip1/CS/gziptest.cs#1)]\\n [!code-vb[IO.Compression.GZip1#1](~/samples/snippets/visualbasic/VS_Snippets_CLR/IO.Compression.GZip1/VB/gziptest.vb#1)]\"\n  syntax:\n    content: public override IAsyncResult BeginRead (byte[] buffer, int offset, int count, AsyncCallback cback, object state);\n    parameters:\n    - id: array\n      type: System.Byte[]\n      description: ''\n    - id: offset\n      type: System.Int32\n      description: The byte offset in <code>array</code> at which to begin reading data from the stream.\n    - id: count\n      type: System.Int32\n      description: The maximum number of bytes to read.\n    - id: asyncCallback\n      type: System.AsyncCallback\n      description: ''\n    - id: asyncState\n      type: System.Object\n      description: ''\n    return:\n      type: System.IAsyncResult\n      description: An object that represents the asynchronous read operation, which could still be pending.\n  overload: System.IO.Compression.GZipStream.BeginRead*\n  exceptions:\n  - type: System.IO.IOException\n    commentId: T:System.IO.IOException\n    description: The method tried to  read asynchronously past the end of the stream, or a disk error occurred.\n  - type: System.ArgumentException\n    commentId: T:System.ArgumentException\n    description: One or more of the arguments is invalid.\n  - type: System.ObjectDisposedException\n    commentId: T:System.ObjectDisposedException\n    description: Methods were called after the stream was closed.\n  - type: System.NotSupportedException\n    commentId: T:System.NotSupportedException\n    description: The current <xref href=\"System.IO.Compression.GZipStream\"></xref> implementation does not support the read operation.\n  - type: System.InvalidOperationException\n    commentId: T:System.InvalidOperationException\n    description: A read operation cannot be performed because the stream is closed.\n  version:\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - netstandard-2.0\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  monikers:\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - netstandard-2.0\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.IO.Compression/GZipStream.xml\n  ms.technology:\n  - dotnet-standard\n  author: mairaw\n  ms.author: mairaw\n  manager: wpickett\n- uid: System.IO.Compression.GZipStream.BeginWrite(System.Byte[],System.Int32,System.Int32,System.AsyncCallback,System.Object)\n  commentId: M:System.IO.Compression.GZipStream.BeginWrite(System.Byte[],System.Int32,System.Int32,System.AsyncCallback,System.Object)\n  id: BeginWrite(System.Byte[],System.Int32,System.Int32,System.AsyncCallback,System.Object)\n  parent: System.IO.Compression.GZipStream\n  langs:\n  - csharp\n  name: BeginWrite(Byte[], Int32, Int32, AsyncCallback, Object)\n  nameWithType: GZipStream.BeginWrite(Byte[], Int32, Int32, AsyncCallback, Object)\n  fullName: GZipStream.BeginWrite(Byte[], Int32, Int32, AsyncCallback, Object)\n  type: Method\n  assemblies:\n  - System\n  - netstandard\n  - System.IO.Compression\n  namespace: System.IO.Compression\n  summary: Begins an asynchronous write operation. (Consider using the <xref href=\"System.IO.Stream.WriteAsync(System.Byte[],System.Int32,System.Int32)\"></xref> method instead.)\n  remarks: \"Starting with the [!INCLUDE[net_v45](~/includes/net-v45-md.md)], you can perform asynchronous write operations by using the <xref:System.IO.Stream.WriteAsync%2A?displayProperty=fullName> method. The <xref:System.IO.Compression.GZipStream.BeginWrite%2A> method is still available in [!INCLUDE[net_v45](~/includes/net-v45-md.md)] to support legacy code; however, you can implement asynchronous I/O operations more easily by using the new async methods. For more information, see .  \\n  \\n The <xref:System.IO.Compression.GZipStream.BeginWrite%2A> method starts an asynchronous write operation to a <xref:System.IO.Compression.GZipStream> stream object.  \\n  \\n You must create a callback method that implements the <xref:System.AsyncCallback> delegate and pass its name to the <xref:System.IO.Compression.GZipStream.BeginWrite%2A> method.\"\n  syntax:\n    content: public override IAsyncResult BeginWrite (byte[] buffer, int offset, int count, AsyncCallback cback, object state);\n    parameters:\n    - id: array\n      type: System.Byte[]\n      description: ''\n    - id: offset\n      type: System.Int32\n      description: The byte offset in <code>array</code> at which to begin writing.\n    - id: count\n      type: System.Int32\n      description: The maximum number of bytes to write.\n    - id: asyncCallback\n      type: System.AsyncCallback\n      description: ''\n    - id: asyncState\n      type: System.Object\n      description: ''\n    return:\n      type: System.IAsyncResult\n      description: An  object that represents the asynchronous write operation, which could still be pending.\n  overload: System.IO.Compression.GZipStream.BeginWrite*\n  exceptions:\n  - type: System.InvalidOperationException\n    commentId: T:System.InvalidOperationException\n    description: \"The underlying stream is `null`.  \\n  \\n -or-  \\n  \\n The underlying stream is closed.\"\n  version:\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - netstandard-2.0\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  monikers:\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - netstandard-2.0\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.IO.Compression/GZipStream.xml\n  ms.technology:\n  - dotnet-standard\n  author: mairaw\n  ms.author: mairaw\n  manager: wpickett\n- uid: System.IO.Compression.GZipStream.CanRead\n  commentId: P:System.IO.Compression.GZipStream.CanRead\n  id: CanRead\n  parent: System.IO.Compression.GZipStream\n  langs:\n  - csharp\n  name: CanRead\n  nameWithType: GZipStream.CanRead\n  fullName: GZipStream.CanRead\n  type: Property\n  assemblies:\n  - System.IO.Compression\n  - System\n  - netstandard\n  namespace: System.IO.Compression\n  summary: Gets a value indicating whether the stream supports reading while decompressing a file.\n  syntax:\n    content: public override bool CanRead { get; }\n    return:\n      type: System.Boolean\n      description: '`true` if the <xref href=\"System.IO.Compression.CompressionMode\"></xref> value is `Decompress,` and the underlying stream supports reading and is not closed; otherwise, `false`.'\n  overload: System.IO.Compression.GZipStream.CanRead*\n  exceptions: []\n  version:\n  - netcore-1.0\n  - netcore-1.1\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - netstandard-1.1\n  - netstandard-1.2\n  - netstandard-1.3\n  - netstandard-1.4\n  - netstandard-1.6\n  - netstandard-2.0\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  monikers:\n  - netcore-1.0\n  - netcore-1.1\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - netstandard-1.1\n  - netstandard-1.2\n  - netstandard-1.3\n  - netstandard-1.4\n  - netstandard-1.6\n  - netstandard-2.0\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.IO.Compression/GZipStream.xml\n  ms.technology:\n  - dotnet-standard\n  author: mairaw\n  ms.author: mairaw\n  manager: wpickett\n- uid: System.IO.Compression.GZipStream.CanSeek\n  commentId: P:System.IO.Compression.GZipStream.CanSeek\n  id: CanSeek\n  parent: System.IO.Compression.GZipStream\n  langs:\n  - csharp\n  name: CanSeek\n  nameWithType: GZipStream.CanSeek\n  fullName: GZipStream.CanSeek\n  type: Property\n  assemblies:\n  - System.IO.Compression\n  - System\n  - netstandard\n  namespace: System.IO.Compression\n  summary: Gets a value indicating whether the stream supports seeking.\n  syntax:\n    content: public override bool CanSeek { get; }\n    return:\n      type: System.Boolean\n      description: '`false` in all cases.'\n  overload: System.IO.Compression.GZipStream.CanSeek*\n  exceptions: []\n  version:\n  - netcore-1.0\n  - netcore-1.1\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - netstandard-1.1\n  - netstandard-1.2\n  - netstandard-1.3\n  - netstandard-1.4\n  - netstandard-1.6\n  - netstandard-2.0\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  monikers:\n  - netcore-1.0\n  - netcore-1.1\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - netstandard-1.1\n  - netstandard-1.2\n  - netstandard-1.3\n  - netstandard-1.4\n  - netstandard-1.6\n  - netstandard-2.0\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.IO.Compression/GZipStream.xml\n  ms.technology:\n  - dotnet-standard\n  author: mairaw\n  ms.author: mairaw\n  manager: wpickett\n- uid: System.IO.Compression.GZipStream.CanWrite\n  commentId: P:System.IO.Compression.GZipStream.CanWrite\n  id: CanWrite\n  parent: System.IO.Compression.GZipStream\n  langs:\n  - csharp\n  name: CanWrite\n  nameWithType: GZipStream.CanWrite\n  fullName: GZipStream.CanWrite\n  type: Property\n  assemblies:\n  - System.IO.Compression\n  - System\n  - netstandard\n  namespace: System.IO.Compression\n  summary: Gets a value indicating whether the stream supports writing.\n  syntax:\n    content: public override bool CanWrite { get; }\n    return:\n      type: System.Boolean\n      description: '`true` if the <xref href=\"System.IO.Compression.CompressionMode\"></xref> value is `Compress`, and the underlying stream supports writing and is not closed; otherwise, `false`.'\n  overload: System.IO.Compression.GZipStream.CanWrite*\n  exceptions: []\n  version:\n  - netcore-1.0\n  - netcore-1.1\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - netstandard-1.1\n  - netstandard-1.2\n  - netstandard-1.3\n  - netstandard-1.4\n  - netstandard-1.6\n  - netstandard-2.0\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  monikers:\n  - netcore-1.0\n  - netcore-1.1\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - netstandard-1.1\n  - netstandard-1.2\n  - netstandard-1.3\n  - netstandard-1.4\n  - netstandard-1.6\n  - netstandard-2.0\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.IO.Compression/GZipStream.xml\n  ms.technology:\n  - dotnet-standard\n  author: mairaw\n  ms.author: mairaw\n  manager: wpickett\n- uid: System.IO.Compression.GZipStream.Dispose(System.Boolean)\n  commentId: M:System.IO.Compression.GZipStream.Dispose(System.Boolean)\n  id: Dispose(System.Boolean)\n  parent: System.IO.Compression.GZipStream\n  langs:\n  - csharp\n  name: Dispose(Boolean)\n  nameWithType: GZipStream.Dispose(Boolean)\n  fullName: GZipStream.Dispose(Boolean)\n  type: Method\n  assemblies:\n  - System.IO.Compression\n  - System\n  - netstandard\n  namespace: System.IO.Compression\n  summary: Releases the unmanaged resources used by the <xref href=\"System.IO.Compression.GZipStream\"></xref> and optionally releases the managed resources.\n  remarks: \"This method is called by the public <xref:System.ComponentModel.Component.Dispose%2A> method and the <xref:System.Object.Finalize%2A> method. <xref:System.ComponentModel.Component.Dispose%2A> invokes the protected <xref:System.IO.Compression.GZipStream.Dispose%2A> method with the `disposing` parameter set to `true`. <xref:System.Object.Finalize%2A> invokes <xref:System.IO.Compression.GZipStream.Dispose%2A> with `disposing` set to `false`.  \\n  \\n When the `disposing` parameter is `true`, this method releases all resources held by any managed objects that this <xref:System.IO.Compression.DeflateStream> references. This method invokes the <xref:System.ComponentModel.Component.Dispose%2A> method of each referenced object.\"\n  syntax:\n    content: protected override void Dispose (bool disposing);\n    parameters:\n    - id: disposing\n      type: System.Boolean\n      description: '`true` to release both managed and unmanaged resources; `false` to release only unmanaged resources.'\n  overload: System.IO.Compression.GZipStream.Dispose*\n  exceptions: []\n  version:\n  - netcore-1.0\n  - netcore-1.1\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - netstandard-1.1\n  - netstandard-1.2\n  - netstandard-1.3\n  - netstandard-1.4\n  - netstandard-1.6\n  - netstandard-2.0\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  monikers:\n  - netcore-1.0\n  - netcore-1.1\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - netstandard-1.1\n  - netstandard-1.2\n  - netstandard-1.3\n  - netstandard-1.4\n  - netstandard-1.6\n  - netstandard-2.0\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.IO.Compression/GZipStream.xml\n  ms.technology:\n  - dotnet-standard\n  author: mairaw\n  ms.author: mairaw\n  manager: wpickett\n- uid: System.IO.Compression.GZipStream.EndRead(System.IAsyncResult)\n  commentId: M:System.IO.Compression.GZipStream.EndRead(System.IAsyncResult)\n  id: EndRead(System.IAsyncResult)\n  parent: System.IO.Compression.GZipStream\n  langs:\n  - csharp\n  name: EndRead(IAsyncResult)\n  nameWithType: GZipStream.EndRead(IAsyncResult)\n  fullName: GZipStream.EndRead(IAsyncResult)\n  type: Method\n  assemblies:\n  - System\n  - netstandard\n  - System.IO.Compression\n  namespace: System.IO.Compression\n  summary: Waits for the pending asynchronous read to complete. (Consider using the the <xref href=\"System.IO.Stream.ReadAsync(System.Byte[],System.Int32,System.Int32)\"></xref> method instead.)\n  remarks: \"Starting with the [!INCLUDE[net_v45](~/includes/net-v45-md.md)], you can perform asynchronous read operations by using the <xref:System.IO.Stream.ReadAsync%2A?displayProperty=fullName> method. The <xref:System.IO.Compression.GZipStream.EndRead%2A> method is still available in [!INCLUDE[net_v45](~/includes/net-v45-md.md)] to support legacy code; however, you can implement asynchronous I/O operations more easily by using the new async methods. For more information, see .  \\n  \\n Call this method to determine how many bytes were read from the stream. This method can be called once to return the amount of bytes read between calls to <xref:System.IO.Compression.GZipStream.BeginRead%2A> and <xref:System.IO.Compression.GZipStream.EndRead%2A>.  \\n  \\n This method blocks until the I/O operation has completed.\"\n  example:\n  - \"The following code example shows how to use the <xref:System.IO.Compression.GZipStream> class to compress and decompress a file.  \\n  \\n [!code-csharp[IO.Compression.GZip1#1](~/samples/snippets/csharp/VS_Snippets_CLR/IO.Compression.GZip1/CS/gziptest.cs#1)]\\n [!code-vb[IO.Compression.GZip1#1](~/samples/snippets/visualbasic/VS_Snippets_CLR/IO.Compression.GZip1/VB/gziptest.vb#1)]\"\n  syntax:\n    content: public override int EndRead (IAsyncResult async_result);\n    parameters:\n    - id: asyncResult\n      type: System.IAsyncResult\n      description: ''\n    return:\n      type: System.Int32\n      description: The number of bytes read from the stream, between 0 (zero) and the number of bytes you requested. <xref href=\"System.IO.Compression.GZipStream\"></xref> returns 0 only at the end of the stream; otherwise, it blocks until at least one byte is available.\n  overload: System.IO.Compression.GZipStream.EndRead*\n  exceptions:\n  - type: System.ArgumentNullException\n    commentId: T:System.ArgumentNullException\n    description: <code>async_result</code> is `null`.\n  - type: System.ArgumentException\n    commentId: T:System.ArgumentException\n    description: <code>async_result</code> did not originate from a <xref href=\"System.IO.Compression.DeflateStream.BeginRead(System.Byte[],System.Int32,System.Int32,System.AsyncCallback,System.Object)\"></xref> method on the current stream.\n  - type: System.InvalidOperationException\n    commentId: T:System.InvalidOperationException\n    description: The end operation cannot be performed because the stream is closed.\n  version:\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - netstandard-2.0\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  monikers:\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - netstandard-2.0\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.IO.Compression/GZipStream.xml\n  ms.technology:\n  - dotnet-standard\n  author: mairaw\n  ms.author: mairaw\n  manager: wpickett\n- uid: System.IO.Compression.GZipStream.EndWrite(System.IAsyncResult)\n  commentId: M:System.IO.Compression.GZipStream.EndWrite(System.IAsyncResult)\n  id: EndWrite(System.IAsyncResult)\n  parent: System.IO.Compression.GZipStream\n  langs:\n  - csharp\n  name: EndWrite(IAsyncResult)\n  nameWithType: GZipStream.EndWrite(IAsyncResult)\n  fullName: GZipStream.EndWrite(IAsyncResult)\n  type: Method\n  assemblies:\n  - System\n  - netstandard\n  - System.IO.Compression\n  namespace: System.IO.Compression\n  summary: Handles the end of an asynchronous write operation. (Consider using the <xref href=\"System.IO.Stream.WriteAsync(System.Byte[],System.Int32,System.Int32)\"></xref> method instead.)\n  remarks: \"Starting with the [!INCLUDE[net_v45](~/includes/net-v45-md.md)], you can perform asynchronous write operations by using the <xref:System.IO.Stream.WriteAsync%2A?displayProperty=fullName> method. The <xref:System.IO.Compression.GZipStream.EndWrite%2A> method is still available in [!INCLUDE[net_v45](~/includes/net-v45-md.md)] to support legacy code; however, you can implement asynchronous I/O operations more easily by using the new async methods. For more information, see .  \\n  \\n The <xref:System.IO.Compression.GZipStream.EndWrite%2A> method completes the asynchronous write operation started in the <xref:System.IO.Compression.GZipStream.BeginWrite%2A> method.\"\n  syntax:\n    content: public override void EndWrite (IAsyncResult async_result);\n    parameters:\n    - id: asyncResult\n      type: System.IAsyncResult\n      description: ''\n  overload: System.IO.Compression.GZipStream.EndWrite*\n  exceptions:\n  - type: System.InvalidOperationException\n    commentId: T:System.InvalidOperationException\n    description: \"The underlying stream is `null`.  \\n  \\n -or-  \\n  \\n The underlying stream is closed.\"\n  version:\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - netstandard-2.0\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  monikers:\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - netstandard-2.0\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.IO.Compression/GZipStream.xml\n  ms.technology:\n  - dotnet-standard\n  author: mairaw\n  ms.author: mairaw\n  manager: wpickett\n- uid: System.IO.Compression.GZipStream.Flush\n  commentId: M:System.IO.Compression.GZipStream.Flush\n  id: Flush\n  parent: System.IO.Compression.GZipStream\n  langs:\n  - csharp\n  name: Flush()\n  nameWithType: GZipStream.Flush()\n  fullName: GZipStream.Flush()\n  type: Method\n  assemblies:\n  - System.IO.Compression\n  - System\n  - netstandard\n  namespace: System.IO.Compression\n  summary: The current implementation of this method has no functionality.\n  remarks: The current implementation of this method does not flush the internal buffer. The internal buffer is flushed when the object is disposed.\n  syntax:\n    content: public override void Flush ();\n    parameters: []\n  overload: System.IO.Compression.GZipStream.Flush*\n  exceptions:\n  - type: System.ObjectDisposedException\n    commentId: T:System.ObjectDisposedException\n    description: The stream is closed.\n  version:\n  - netcore-1.0\n  - netcore-1.1\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - netstandard-1.1\n  - netstandard-1.2\n  - netstandard-1.3\n  - netstandard-1.4\n  - netstandard-1.6\n  - netstandard-2.0\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  monikers:\n  - netcore-1.0\n  - netcore-1.1\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - netstandard-1.1\n  - netstandard-1.2\n  - netstandard-1.3\n  - netstandard-1.4\n  - netstandard-1.6\n  - netstandard-2.0\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.IO.Compression/GZipStream.xml\n  ms.technology:\n  - dotnet-standard\n  author: mairaw\n  ms.author: mairaw\n  manager: wpickett\n- uid: System.IO.Compression.GZipStream.Length\n  commentId: P:System.IO.Compression.GZipStream.Length\n  id: Length\n  parent: System.IO.Compression.GZipStream\n  langs:\n  - csharp\n  name: Length\n  nameWithType: GZipStream.Length\n  fullName: GZipStream.Length\n  type: Property\n  assemblies:\n  - System.IO.Compression\n  - System\n  - netstandard\n  namespace: System.IO.Compression\n  summary: This property is not supported and always throws a <xref href=\"System.NotSupportedException\"></xref>.\n  syntax:\n    content: public override long Length { get; }\n    return:\n      type: System.Int64\n      description: A long value.\n  overload: System.IO.Compression.GZipStream.Length*\n  exceptions:\n  - type: System.NotSupportedException\n    commentId: T:System.NotSupportedException\n    description: This property is not supported on this stream.\n  version:\n  - netcore-1.0\n  - netcore-1.1\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - netstandard-1.1\n  - netstandard-1.2\n  - netstandard-1.3\n  - netstandard-1.4\n  - netstandard-1.6\n  - netstandard-2.0\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  monikers:\n  - netcore-1.0\n  - netcore-1.1\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - netstandard-1.1\n  - netstandard-1.2\n  - netstandard-1.3\n  - netstandard-1.4\n  - netstandard-1.6\n  - netstandard-2.0\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.IO.Compression/GZipStream.xml\n  ms.technology:\n  - dotnet-standard\n  author: mairaw\n  ms.author: mairaw\n  manager: wpickett\n- uid: System.IO.Compression.GZipStream.Position\n  commentId: P:System.IO.Compression.GZipStream.Position\n  id: Position\n  parent: System.IO.Compression.GZipStream\n  langs:\n  - csharp\n  name: Position\n  nameWithType: GZipStream.Position\n  fullName: GZipStream.Position\n  type: Property\n  assemblies:\n  - System.IO.Compression\n  - System\n  - netstandard\n  namespace: System.IO.Compression\n  summary: This property is not supported and always throws a <xref href=\"System.NotSupportedException\"></xref>.\n  syntax:\n    content: public override long Position { get; set; }\n    return:\n      type: System.Int64\n      description: A long value.\n  overload: System.IO.Compression.GZipStream.Position*\n  exceptions:\n  - type: System.NotSupportedException\n    commentId: T:System.NotSupportedException\n    description: This property is not supported on this stream.\n  version:\n  - netcore-1.0\n  - netcore-1.1\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - netstandard-1.1\n  - netstandard-1.2\n  - netstandard-1.3\n  - netstandard-1.4\n  - netstandard-1.6\n  - netstandard-2.0\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  monikers:\n  - netcore-1.0\n  - netcore-1.1\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - netstandard-1.1\n  - netstandard-1.2\n  - netstandard-1.3\n  - netstandard-1.4\n  - netstandard-1.6\n  - netstandard-2.0\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.IO.Compression/GZipStream.xml\n  ms.technology:\n  - dotnet-standard\n  author: mairaw\n  ms.author: mairaw\n  manager: wpickett\n- uid: System.IO.Compression.GZipStream.Read(System.Byte[],System.Int32,System.Int32)\n  commentId: M:System.IO.Compression.GZipStream.Read(System.Byte[],System.Int32,System.Int32)\n  id: Read(System.Byte[],System.Int32,System.Int32)\n  parent: System.IO.Compression.GZipStream\n  langs:\n  - csharp\n  name: Read(Byte[], Int32, Int32)\n  nameWithType: GZipStream.Read(Byte[], Int32, Int32)\n  fullName: GZipStream.Read(Byte[], Int32, Int32)\n  type: Method\n  assemblies:\n  - System.IO.Compression\n  - System\n  - netstandard\n  namespace: System.IO.Compression\n  summary: Reads a number of decompressed bytes into the specified byte array.\n  remarks: If data is found in an invalid format, an <xref:System.IO.InvalidDataException> is thrown as one of the last operations. A cyclic redundancy check (CRC) is performed as one of the last operations of this method.\n  example:\n  - \"The following example shows how to compress and decompress bytes by using the <xref:System.IO.Compression.GZipStream.Read%2A> and <xref:System.IO.Compression.GZipStream.Write%2A> methods.  \\n  \\n [!code-csharp[System.IO.Compression.GZipStream#3](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.io.compression.gzipstream/cs/program3.cs#3)]\\n [!code-vb[System.IO.Compression.GZipStream#3](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.io.compression.gzipstream/vb/program3.vb#3)]\"\n  syntax:\n    content: public override int Read (byte[] array, int offset, int count);\n    parameters:\n    - id: array\n      type: System.Byte[]\n      description: The array used to store decompressed bytes.\n    - id: offset\n      type: System.Int32\n      description: The byte offset in <code>array</code> at which the read bytes will be placed.\n    - id: count\n      type: System.Int32\n      description: The maximum number of decompressed bytes to read.\n    return:\n      type: System.Int32\n      description: The number of bytes that were decompressed into the byte array. If the end of the stream has been reached, zero or the number of bytes read is returned.\n  overload: System.IO.Compression.GZipStream.Read*\n  exceptions:\n  - type: System.ArgumentNullException\n    commentId: T:System.ArgumentNullException\n    description: <code>array</code> is `null`.\n  - type: System.InvalidOperationException\n    commentId: T:System.InvalidOperationException\n    description: \"The <xref href=\\\"System.IO.Compression.CompressionMode\\\"></xref> value was `Compress` when the object was created.  \\n  \\n \\\\- or -  \\n  \\n The underlying stream does not support reading.\"\n  - type: System.ArgumentOutOfRangeException\n    commentId: T:System.ArgumentOutOfRangeException\n    description: \"<code>offset</code> or <code>count</code> is less than zero.  \\n  \\n -or-  \\n  \\n <code>array</code> length minus the index starting point is less than <code>count</code>.\"\n  - type: System.IO.InvalidDataException\n    commentId: T:System.IO.InvalidDataException\n    description: The data is in an invalid format.\n  - type: System.ObjectDisposedException\n    commentId: T:System.ObjectDisposedException\n    description: The stream is closed.\n  version:\n  - netcore-1.0\n  - netcore-1.1\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - netstandard-1.1\n  - netstandard-1.2\n  - netstandard-1.3\n  - netstandard-1.4\n  - netstandard-1.6\n  - netstandard-2.0\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  monikers:\n  - netcore-1.0\n  - netcore-1.1\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - netstandard-1.1\n  - netstandard-1.2\n  - netstandard-1.3\n  - netstandard-1.4\n  - netstandard-1.6\n  - netstandard-2.0\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.IO.Compression/GZipStream.xml\n  ms.technology:\n  - dotnet-standard\n  author: mairaw\n  ms.author: mairaw\n  manager: wpickett\n- uid: System.IO.Compression.GZipStream.ReadAsync(System.Byte[],System.Int32,System.Int32,System.Threading.CancellationToken)\n  commentId: M:System.IO.Compression.GZipStream.ReadAsync(System.Byte[],System.Int32,System.Int32,System.Threading.CancellationToken)\n  id: ReadAsync(System.Byte[],System.Int32,System.Int32,System.Threading.CancellationToken)\n  parent: System.IO.Compression.GZipStream\n  langs:\n  - csharp\n  name: ReadAsync(Byte[], Int32, Int32, CancellationToken)\n  nameWithType: GZipStream.ReadAsync(Byte[], Int32, Int32, CancellationToken)\n  fullName: GZipStream.ReadAsync(Byte[], Int32, Int32, CancellationToken)\n  type: Method\n  assemblies:\n  - System.IO.Compression\n  namespace: System.IO.Compression\n  syntax:\n    content: public override System.Threading.Tasks.Task<int> ReadAsync (byte[] array, int offset, int count, System.Threading.CancellationToken cancellationToken);\n    parameters:\n    - id: array\n      type: System.Byte[]\n      description: ''\n    - id: offset\n      type: System.Int32\n      description: ''\n    - id: count\n      type: System.Int32\n      description: ''\n    - id: cancellationToken\n      type: System.Threading.CancellationToken\n      description: ''\n    return:\n      type: System.Threading.Tasks.Task{System.Int32}\n      description: ''\n  overload: System.IO.Compression.GZipStream.ReadAsync*\n  exceptions: []\n  version:\n  - netcore-1.0\n  - netcore-1.1\n  - netcore-2.0\n  - netstandard-1.3\n  - netstandard-1.4\n  - netstandard-1.6\n  monikers:\n  - netcore-1.0\n  - netcore-1.1\n  - netcore-2.0\n  - netstandard-1.3\n  - netstandard-1.4\n  - netstandard-1.6\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.IO.Compression/GZipStream.xml\n- uid: System.IO.Compression.GZipStream.Seek(System.Int64,System.IO.SeekOrigin)\n  commentId: M:System.IO.Compression.GZipStream.Seek(System.Int64,System.IO.SeekOrigin)\n  id: Seek(System.Int64,System.IO.SeekOrigin)\n  parent: System.IO.Compression.GZipStream\n  langs:\n  - csharp\n  name: Seek(Int64, SeekOrigin)\n  nameWithType: GZipStream.Seek(Int64, SeekOrigin)\n  fullName: GZipStream.Seek(Int64, SeekOrigin)\n  type: Method\n  assemblies:\n  - System.IO.Compression\n  - System\n  - netstandard\n  namespace: System.IO.Compression\n  summary: This property is not supported and always throws a <xref href=\"System.NotSupportedException\"></xref>.\n  syntax:\n    content: public override long Seek (long offset, System.IO.SeekOrigin origin);\n    parameters:\n    - id: offset\n      type: System.Int64\n      description: The location in the stream.\n    - id: origin\n      type: System.IO.SeekOrigin\n      description: One of the <xref href=\"System.IO.SeekOrigin\"></xref> values.\n    return:\n      type: System.Int64\n      description: A long value.\n  overload: System.IO.Compression.GZipStream.Seek*\n  exceptions:\n  - type: System.NotSupportedException\n    commentId: T:System.NotSupportedException\n    description: This property is not supported on this stream.\n  version:\n  - netcore-1.0\n  - netcore-1.1\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - netstandard-1.1\n  - netstandard-1.2\n  - netstandard-1.3\n  - netstandard-1.4\n  - netstandard-1.6\n  - netstandard-2.0\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  monikers:\n  - netcore-1.0\n  - netcore-1.1\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - netstandard-1.1\n  - netstandard-1.2\n  - netstandard-1.3\n  - netstandard-1.4\n  - netstandard-1.6\n  - netstandard-2.0\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.IO.Compression/GZipStream.xml\n  ms.technology:\n  - dotnet-standard\n  author: mairaw\n  ms.author: mairaw\n  manager: wpickett\n- uid: System.IO.Compression.GZipStream.SetLength(System.Int64)\n  commentId: M:System.IO.Compression.GZipStream.SetLength(System.Int64)\n  id: SetLength(System.Int64)\n  parent: System.IO.Compression.GZipStream\n  langs:\n  - csharp\n  name: SetLength(Int64)\n  nameWithType: GZipStream.SetLength(Int64)\n  fullName: GZipStream.SetLength(Int64)\n  type: Method\n  assemblies:\n  - System.IO.Compression\n  - System\n  - netstandard\n  namespace: System.IO.Compression\n  summary: This property is not supported and always throws a <xref href=\"System.NotSupportedException\"></xref>.\n  syntax:\n    content: public override void SetLength (long value);\n    parameters:\n    - id: value\n      type: System.Int64\n      description: The length of the stream.\n  overload: System.IO.Compression.GZipStream.SetLength*\n  exceptions:\n  - type: System.NotSupportedException\n    commentId: T:System.NotSupportedException\n    description: This property is not supported on this stream.\n  version:\n  - netcore-1.0\n  - netcore-1.1\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - netstandard-1.1\n  - netstandard-1.2\n  - netstandard-1.3\n  - netstandard-1.4\n  - netstandard-1.6\n  - netstandard-2.0\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  monikers:\n  - netcore-1.0\n  - netcore-1.1\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - netstandard-1.1\n  - netstandard-1.2\n  - netstandard-1.3\n  - netstandard-1.4\n  - netstandard-1.6\n  - netstandard-2.0\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.IO.Compression/GZipStream.xml\n  ms.technology:\n  - dotnet-standard\n  author: mairaw\n  ms.author: mairaw\n  manager: wpickett\n- uid: System.IO.Compression.GZipStream.Write(System.Byte[],System.Int32,System.Int32)\n  commentId: M:System.IO.Compression.GZipStream.Write(System.Byte[],System.Int32,System.Int32)\n  id: Write(System.Byte[],System.Int32,System.Int32)\n  parent: System.IO.Compression.GZipStream\n  langs:\n  - csharp\n  name: Write(Byte[], Int32, Int32)\n  nameWithType: GZipStream.Write(Byte[], Int32, Int32)\n  fullName: GZipStream.Write(Byte[], Int32, Int32)\n  type: Method\n  assemblies:\n  - System.IO.Compression\n  - System\n  - netstandard\n  namespace: System.IO.Compression\n  summary: Writes compressed bytes to the underlying stream from the specified byte array.\n  remarks: The write operation might not occur immediately but is buffered until the buffer size is reached or until the <xref:System.IO.Compression.GZipStream.Flush%2A> or <xref:System.IO.Stream.Close%2A> method is called.\n  example:\n  - \"The following example shows how to compress and decompress bytes by using the <xref:System.IO.Compression.GZipStream.Read%2A> and <xref:System.IO.Compression.GZipStream.Write%2A> methods.  \\n  \\n [!code-csharp[System.IO.Compression.GZipStream#3](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.io.compression.gzipstream/cs/program3.cs#3)]\\n [!code-vb[System.IO.Compression.GZipStream#3](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.io.compression.gzipstream/vb/program3.vb#3)]\"\n  syntax:\n    content: public override void Write (byte[] array, int offset, int count);\n    parameters:\n    - id: array\n      type: System.Byte[]\n      description: The buffer that contains the data to compress.\n    - id: offset\n      type: System.Int32\n      description: The byte offset in <code>array</code> from which the bytes will be read.\n    - id: count\n      type: System.Int32\n      description: The maximum number of bytes to write.\n  overload: System.IO.Compression.GZipStream.Write*\n  exceptions:\n  - type: System.ObjectDisposedException\n    commentId: T:System.ObjectDisposedException\n    description: The write operation cannot be performed because the stream is closed.\n  version:\n  - netcore-1.0\n  - netcore-1.1\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - netstandard-1.1\n  - netstandard-1.2\n  - netstandard-1.3\n  - netstandard-1.4\n  - netstandard-1.6\n  - netstandard-2.0\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  monikers:\n  - netcore-1.0\n  - netcore-1.1\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - netstandard-1.1\n  - netstandard-1.2\n  - netstandard-1.3\n  - netstandard-1.4\n  - netstandard-1.6\n  - netstandard-2.0\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.IO.Compression/GZipStream.xml\n  ms.technology:\n  - dotnet-standard\n  author: mairaw\n  ms.author: mairaw\n  manager: wpickett\n- uid: System.IO.Compression.GZipStream.WriteAsync(System.Byte[],System.Int32,System.Int32,System.Threading.CancellationToken)\n  commentId: M:System.IO.Compression.GZipStream.WriteAsync(System.Byte[],System.Int32,System.Int32,System.Threading.CancellationToken)\n  id: WriteAsync(System.Byte[],System.Int32,System.Int32,System.Threading.CancellationToken)\n  parent: System.IO.Compression.GZipStream\n  langs:\n  - csharp\n  name: WriteAsync(Byte[], Int32, Int32, CancellationToken)\n  nameWithType: GZipStream.WriteAsync(Byte[], Int32, Int32, CancellationToken)\n  fullName: GZipStream.WriteAsync(Byte[], Int32, Int32, CancellationToken)\n  type: Method\n  assemblies:\n  - System.IO.Compression\n  namespace: System.IO.Compression\n  syntax:\n    content: public override System.Threading.Tasks.Task WriteAsync (byte[] array, int offset, int count, System.Threading.CancellationToken cancellationToken);\n    parameters:\n    - id: array\n      type: System.Byte[]\n      description: ''\n    - id: offset\n      type: System.Int32\n      description: ''\n    - id: count\n      type: System.Int32\n      description: ''\n    - id: cancellationToken\n      type: System.Threading.CancellationToken\n      description: ''\n    return:\n      type: System.Threading.Tasks.Task\n      description: ''\n  overload: System.IO.Compression.GZipStream.WriteAsync*\n  exceptions: []\n  version:\n  - netcore-1.0\n  - netcore-1.1\n  - netcore-2.0\n  - netstandard-1.3\n  - netstandard-1.4\n  - netstandard-1.6\n  monikers:\n  - netcore-1.0\n  - netcore-1.1\n  - netcore-2.0\n  - netstandard-1.3\n  - netstandard-1.4\n  - netstandard-1.6\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.IO.Compression/GZipStream.xml\nreferences:\n- uid: System.IO.Stream\n  parent: System.IO\n  isExternal: false\n  name: Stream\n  nameWithType: Stream\n  fullName: System.IO.Stream\n- uid: System.ArgumentNullException\n  parent: System\n  isExternal: false\n  name: ArgumentNullException\n  nameWithType: ArgumentNullException\n  fullName: System.ArgumentNullException\n- uid: System.ArgumentException\n  parent: System\n  isExternal: false\n  name: ArgumentException\n  nameWithType: ArgumentException\n  fullName: System.ArgumentException\n- uid: System.ObjectDisposedException\n  parent: System\n  isExternal: false\n  name: ObjectDisposedException\n  nameWithType: ObjectDisposedException\n  fullName: System.ObjectDisposedException\n- uid: System.IO.IOException\n  parent: System.IO\n  isExternal: false\n  name: IOException\n  nameWithType: IOException\n  fullName: System.IO.IOException\n- uid: System.NotSupportedException\n  parent: System\n  isExternal: false\n  name: NotSupportedException\n  nameWithType: NotSupportedException\n  fullName: System.NotSupportedException\n- uid: System.InvalidOperationException\n  parent: System\n  isExternal: false\n  name: InvalidOperationException\n  nameWithType: InvalidOperationException\n  fullName: System.InvalidOperationException\n- uid: System.ArgumentOutOfRangeException\n  parent: System\n  isExternal: false\n  name: ArgumentOutOfRangeException\n  nameWithType: ArgumentOutOfRangeException\n  fullName: System.ArgumentOutOfRangeException\n- uid: System.IO.InvalidDataException\n  parent: System.IO\n  isExternal: false\n  name: InvalidDataException\n  nameWithType: InvalidDataException\n  fullName: System.IO.InvalidDataException\n- uid: System.IO.Compression.GZipStream.#ctor(System.IO.Stream,System.IO.Compression.CompressionLevel)\n  parent: System.IO.Compression.GZipStream\n  isExternal: false\n  name: GZipStream(Stream, CompressionLevel)\n  nameWithType: GZipStream.GZipStream(Stream, CompressionLevel)\n  fullName: GZipStream.GZipStream(Stream, CompressionLevel)\n- uid: System.IO.Compression.CompressionLevel\n  parent: System.IO.Compression\n  isExternal: false\n  name: CompressionLevel\n  nameWithType: CompressionLevel\n  fullName: System.IO.Compression.CompressionLevel\n- uid: System.IO.Compression.GZipStream.#ctor(System.IO.Stream,System.IO.Compression.CompressionMode)\n  parent: System.IO.Compression.GZipStream\n  isExternal: false\n  name: GZipStream(Stream, CompressionMode)\n  nameWithType: GZipStream.GZipStream(Stream, CompressionMode)\n  fullName: GZipStream.GZipStream(Stream, CompressionMode)\n- uid: System.IO.Compression.CompressionMode\n  parent: System.IO.Compression\n  isExternal: false\n  name: CompressionMode\n  nameWithType: CompressionMode\n  fullName: System.IO.Compression.CompressionMode\n- uid: System.IO.Compression.GZipStream.#ctor(System.IO.Stream,System.IO.Compression.CompressionLevel,System.Boolean)\n  parent: System.IO.Compression.GZipStream\n  isExternal: false\n  name: GZipStream(Stream, CompressionLevel, Boolean)\n  nameWithType: GZipStream.GZipStream(Stream, CompressionLevel, Boolean)\n  fullName: GZipStream.GZipStream(Stream, CompressionLevel, Boolean)\n- uid: System.Boolean\n  parent: System\n  isExternal: false\n  name: Boolean\n  nameWithType: Boolean\n  fullName: System.Boolean\n- uid: System.IO.Compression.GZipStream.#ctor(System.IO.Stream,System.IO.Compression.CompressionMode,System.Boolean)\n  parent: System.IO.Compression.GZipStream\n  isExternal: false\n  name: GZipStream(Stream, CompressionMode, Boolean)\n  nameWithType: GZipStream.GZipStream(Stream, CompressionMode, Boolean)\n  fullName: GZipStream.GZipStream(Stream, CompressionMode, Boolean)\n- uid: System.IO.Compression.GZipStream.BaseStream\n  parent: System.IO.Compression.GZipStream\n  isExternal: false\n  name: BaseStream\n  nameWithType: GZipStream.BaseStream\n  fullName: GZipStream.BaseStream\n- uid: System.IO.Compression.GZipStream.BeginRead(System.Byte[],System.Int32,System.Int32,System.AsyncCallback,System.Object)\n  parent: System.IO.Compression.GZipStream\n  isExternal: false\n  name: BeginRead(Byte[], Int32, Int32, AsyncCallback, Object)\n  nameWithType: GZipStream.BeginRead(Byte[], Int32, Int32, AsyncCallback, Object)\n  fullName: GZipStream.BeginRead(Byte[], Int32, Int32, AsyncCallback, Object)\n- uid: System.IAsyncResult\n  parent: System\n  isExternal: false\n  name: IAsyncResult\n  nameWithType: IAsyncResult\n  fullName: System.IAsyncResult\n- uid: System.Byte\n  name: Byte\n  nameWithType: Byte\n  fullName: System.Byte\n- uid: System.Byte[]\n  parent: System\n  isExternal: false\n  name: Byte[]\n  nameWithType: Byte[]\n  fullName: System.Byte[]\n  spec.csharp:\n  - uid: System.Byte\n    name: Byte\n    nameWithType: Byte\n    fullName: System.Byte\n  - name: '[]'\n    nameWithType: '[]'\n    fullName: '[]'\n- uid: System.Int32\n  parent: System\n  isExternal: false\n  name: Int32\n  nameWithType: Int32\n  fullName: System.Int32\n- uid: System.AsyncCallback\n  parent: System\n  isExternal: false\n  name: AsyncCallback\n  nameWithType: AsyncCallback\n  fullName: System.AsyncCallback\n- uid: System.Object\n  parent: System\n  isExternal: false\n  name: Object\n  nameWithType: Object\n  fullName: System.Object\n- uid: System.IO.Compression.GZipStream.BeginWrite(System.Byte[],System.Int32,System.Int32,System.AsyncCallback,System.Object)\n  parent: System.IO.Compression.GZipStream\n  isExternal: false\n  name: BeginWrite(Byte[], Int32, Int32, AsyncCallback, Object)\n  nameWithType: GZipStream.BeginWrite(Byte[], Int32, Int32, AsyncCallback, Object)\n  fullName: GZipStream.BeginWrite(Byte[], Int32, Int32, AsyncCallback, Object)\n- uid: System.IO.Compression.GZipStream.CanRead\n  parent: System.IO.Compression.GZipStream\n  isExternal: false\n  name: CanRead\n  nameWithType: GZipStream.CanRead\n  fullName: GZipStream.CanRead\n- uid: System.IO.Compression.GZipStream.CanSeek\n  parent: System.IO.Compression.GZipStream\n  isExternal: false\n  name: CanSeek\n  nameWithType: GZipStream.CanSeek\n  fullName: GZipStream.CanSeek\n- uid: System.IO.Compression.GZipStream.CanWrite\n  parent: System.IO.Compression.GZipStream\n  isExternal: false\n  name: CanWrite\n  nameWithType: GZipStream.CanWrite\n  fullName: GZipStream.CanWrite\n- uid: System.IO.Compression.GZipStream.Dispose(System.Boolean)\n  parent: System.IO.Compression.GZipStream\n  isExternal: false\n  name: Dispose(Boolean)\n  nameWithType: GZipStream.Dispose(Boolean)\n  fullName: GZipStream.Dispose(Boolean)\n- uid: System.IO.Compression.GZipStream.EndRead(System.IAsyncResult)\n  parent: System.IO.Compression.GZipStream\n  isExternal: false\n  name: EndRead(IAsyncResult)\n  nameWithType: GZipStream.EndRead(IAsyncResult)\n  fullName: GZipStream.EndRead(IAsyncResult)\n- uid: System.IO.Compression.GZipStream.EndWrite(System.IAsyncResult)\n  parent: System.IO.Compression.GZipStream\n  isExternal: false\n  name: EndWrite(IAsyncResult)\n  nameWithType: GZipStream.EndWrite(IAsyncResult)\n  fullName: GZipStream.EndWrite(IAsyncResult)\n- uid: System.IO.Compression.GZipStream.Flush\n  parent: System.IO.Compression.GZipStream\n  isExternal: false\n  name: Flush()\n  nameWithType: GZipStream.Flush()\n  fullName: GZipStream.Flush()\n- uid: System.IO.Compression.GZipStream.Length\n  parent: System.IO.Compression.GZipStream\n  isExternal: false\n  name: Length\n  nameWithType: GZipStream.Length\n  fullName: GZipStream.Length\n- uid: System.Int64\n  parent: System\n  isExternal: false\n  name: Int64\n  nameWithType: Int64\n  fullName: System.Int64\n- uid: System.IO.Compression.GZipStream.Position\n  parent: System.IO.Compression.GZipStream\n  isExternal: false\n  name: Position\n  nameWithType: GZipStream.Position\n  fullName: GZipStream.Position\n- uid: System.IO.Compression.GZipStream.Read(System.Byte[],System.Int32,System.Int32)\n  parent: System.IO.Compression.GZipStream\n  isExternal: false\n  name: Read(Byte[], Int32, Int32)\n  nameWithType: GZipStream.Read(Byte[], Int32, Int32)\n  fullName: GZipStream.Read(Byte[], Int32, Int32)\n- uid: System.IO.Compression.GZipStream.ReadAsync(System.Byte[],System.Int32,System.Int32,System.Threading.CancellationToken)\n  parent: System.IO.Compression.GZipStream\n  isExternal: false\n  name: ReadAsync(Byte[], Int32, Int32, CancellationToken)\n  nameWithType: GZipStream.ReadAsync(Byte[], Int32, Int32, CancellationToken)\n  fullName: GZipStream.ReadAsync(Byte[], Int32, Int32, CancellationToken)\n- uid: System.Threading.Tasks.Task`1\n  name: Task<TResult>\n  nameWithType: Task<TResult>\n  fullName: System.Threading.Tasks.Task<TResult>\n- uid: System.Threading.Tasks.Task{System.Int32}\n  parent: System.Threading.Tasks\n  isExternal: false\n  name: Task<Int32>\n  nameWithType: Task<Int32>\n  fullName: System.Threading.Tasks.Task<System.Int32>\n  spec.csharp:\n  - uid: System.Threading.Tasks.Task`1\n    name: Task\n    nameWithType: Task\n    fullName: System.Threading.Tasks.Task\n  - name: <\n    nameWithType: <\n    fullName: <\n  - uid: System.Int32\n    name: Int32\n    nameWithType: Int32\n    fullName: System.Int32\n  - name: '>'\n    nameWithType: '>'\n    fullName: '>'\n- uid: System.Threading.CancellationToken\n  parent: System.Threading\n  isExternal: false\n  name: CancellationToken\n  nameWithType: CancellationToken\n  fullName: System.Threading.CancellationToken\n- uid: System.IO.Compression.GZipStream.Seek(System.Int64,System.IO.SeekOrigin)\n  parent: System.IO.Compression.GZipStream\n  isExternal: false\n  name: Seek(Int64, SeekOrigin)\n  nameWithType: GZipStream.Seek(Int64, SeekOrigin)\n  fullName: GZipStream.Seek(Int64, SeekOrigin)\n- uid: System.IO.SeekOrigin\n  parent: System.IO\n  isExternal: false\n  name: SeekOrigin\n  nameWithType: SeekOrigin\n  fullName: System.IO.SeekOrigin\n- uid: System.IO.Compression.GZipStream.SetLength(System.Int64)\n  parent: System.IO.Compression.GZipStream\n  isExternal: false\n  name: SetLength(Int64)\n  nameWithType: GZipStream.SetLength(Int64)\n  fullName: GZipStream.SetLength(Int64)\n- uid: System.IO.Compression.GZipStream.Write(System.Byte[],System.Int32,System.Int32)\n  parent: System.IO.Compression.GZipStream\n  isExternal: false\n  name: Write(Byte[], Int32, Int32)\n  nameWithType: GZipStream.Write(Byte[], Int32, Int32)\n  fullName: GZipStream.Write(Byte[], Int32, Int32)\n- uid: System.IO.Compression.GZipStream.WriteAsync(System.Byte[],System.Int32,System.Int32,System.Threading.CancellationToken)\n  parent: System.IO.Compression.GZipStream\n  isExternal: false\n  name: WriteAsync(Byte[], Int32, Int32, CancellationToken)\n  nameWithType: GZipStream.WriteAsync(Byte[], Int32, Int32, CancellationToken)\n  fullName: GZipStream.WriteAsync(Byte[], Int32, Int32, CancellationToken)\n- uid: System.Threading.Tasks.Task\n  parent: System.Threading.Tasks\n  isExternal: false\n  name: Task\n  nameWithType: Task\n  fullName: System.Threading.Tasks.Task\n- uid: System.IO.Compression.GZipStream.#ctor*\n  parent: System.IO.Compression.GZipStream\n  isExternal: false\n  name: GZipStream\n  nameWithType: GZipStream.GZipStream\n  fullName: GZipStream.GZipStream\n  monikers:\n  - netcore-1.0\n  - netcore-1.1\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - netstandard-1.1\n  - netstandard-1.2\n  - netstandard-1.3\n  - netstandard-1.4\n  - netstandard-1.6\n  - netstandard-2.0\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.IO.Compression/GZipStream.xml\n- uid: System.IO.Compression.GZipStream.BaseStream*\n  parent: System.IO.Compression.GZipStream\n  isExternal: false\n  name: BaseStream\n  nameWithType: GZipStream.BaseStream\n  fullName: GZipStream.BaseStream\n  monikers:\n  - netcore-1.0\n  - netcore-1.1\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - netstandard-1.1\n  - netstandard-1.2\n  - netstandard-1.3\n  - netstandard-1.4\n  - netstandard-1.6\n  - netstandard-2.0\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.IO.Compression/GZipStream.xml\n- uid: System.IO.Compression.GZipStream.BeginRead*\n  parent: System.IO.Compression.GZipStream\n  isExternal: false\n  name: BeginRead\n  nameWithType: GZipStream.BeginRead\n  fullName: GZipStream.BeginRead\n  monikers:\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - netstandard-2.0\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.IO.Compression/GZipStream.xml\n- uid: System.IO.Compression.GZipStream.BeginWrite*\n  parent: System.IO.Compression.GZipStream\n  isExternal: false\n  name: BeginWrite\n  nameWithType: GZipStream.BeginWrite\n  fullName: GZipStream.BeginWrite\n  monikers:\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - netstandard-2.0\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.IO.Compression/GZipStream.xml\n- uid: System.IO.Compression.GZipStream.CanRead*\n  parent: System.IO.Compression.GZipStream\n  isExternal: false\n  name: CanRead\n  nameWithType: GZipStream.CanRead\n  fullName: GZipStream.CanRead\n  monikers:\n  - netcore-1.0\n  - netcore-1.1\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - netstandard-1.1\n  - netstandard-1.2\n  - netstandard-1.3\n  - netstandard-1.4\n  - netstandard-1.6\n  - netstandard-2.0\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.IO.Compression/GZipStream.xml\n- uid: System.IO.Compression.GZipStream.CanSeek*\n  parent: System.IO.Compression.GZipStream\n  isExternal: false\n  name: CanSeek\n  nameWithType: GZipStream.CanSeek\n  fullName: GZipStream.CanSeek\n  monikers:\n  - netcore-1.0\n  - netcore-1.1\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - netstandard-1.1\n  - netstandard-1.2\n  - netstandard-1.3\n  - netstandard-1.4\n  - netstandard-1.6\n  - netstandard-2.0\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.IO.Compression/GZipStream.xml\n- uid: System.IO.Compression.GZipStream.CanWrite*\n  parent: System.IO.Compression.GZipStream\n  isExternal: false\n  name: CanWrite\n  nameWithType: GZipStream.CanWrite\n  fullName: GZipStream.CanWrite\n  monikers:\n  - netcore-1.0\n  - netcore-1.1\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - netstandard-1.1\n  - netstandard-1.2\n  - netstandard-1.3\n  - netstandard-1.4\n  - netstandard-1.6\n  - netstandard-2.0\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.IO.Compression/GZipStream.xml\n- uid: System.IO.Compression.GZipStream.Dispose*\n  parent: System.IO.Compression.GZipStream\n  isExternal: false\n  name: Dispose\n  nameWithType: GZipStream.Dispose\n  fullName: GZipStream.Dispose\n  monikers:\n  - netcore-1.0\n  - netcore-1.1\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - netstandard-1.1\n  - netstandard-1.2\n  - netstandard-1.3\n  - netstandard-1.4\n  - netstandard-1.6\n  - netstandard-2.0\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.IO.Compression/GZipStream.xml\n- uid: System.IO.Compression.GZipStream.EndRead*\n  parent: System.IO.Compression.GZipStream\n  isExternal: false\n  name: EndRead\n  nameWithType: GZipStream.EndRead\n  fullName: GZipStream.EndRead\n  monikers:\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - netstandard-2.0\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.IO.Compression/GZipStream.xml\n- uid: System.IO.Compression.GZipStream.EndWrite*\n  parent: System.IO.Compression.GZipStream\n  isExternal: false\n  name: EndWrite\n  nameWithType: GZipStream.EndWrite\n  fullName: GZipStream.EndWrite\n  monikers:\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - netstandard-2.0\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.IO.Compression/GZipStream.xml\n- uid: System.IO.Compression.GZipStream.Flush*\n  parent: System.IO.Compression.GZipStream\n  isExternal: false\n  name: Flush\n  nameWithType: GZipStream.Flush\n  fullName: GZipStream.Flush\n  monikers:\n  - netcore-1.0\n  - netcore-1.1\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - netstandard-1.1\n  - netstandard-1.2\n  - netstandard-1.3\n  - netstandard-1.4\n  - netstandard-1.6\n  - netstandard-2.0\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.IO.Compression/GZipStream.xml\n- uid: System.IO.Compression.GZipStream.Length*\n  parent: System.IO.Compression.GZipStream\n  isExternal: false\n  name: Length\n  nameWithType: GZipStream.Length\n  fullName: GZipStream.Length\n  monikers:\n  - netcore-1.0\n  - netcore-1.1\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - netstandard-1.1\n  - netstandard-1.2\n  - netstandard-1.3\n  - netstandard-1.4\n  - netstandard-1.6\n  - netstandard-2.0\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.IO.Compression/GZipStream.xml\n- uid: System.IO.Compression.GZipStream.Position*\n  parent: System.IO.Compression.GZipStream\n  isExternal: false\n  name: Position\n  nameWithType: GZipStream.Position\n  fullName: GZipStream.Position\n  monikers:\n  - netcore-1.0\n  - netcore-1.1\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - netstandard-1.1\n  - netstandard-1.2\n  - netstandard-1.3\n  - netstandard-1.4\n  - netstandard-1.6\n  - netstandard-2.0\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.IO.Compression/GZipStream.xml\n- uid: System.IO.Compression.GZipStream.Read*\n  parent: System.IO.Compression.GZipStream\n  isExternal: false\n  name: Read\n  nameWithType: GZipStream.Read\n  fullName: GZipStream.Read\n  monikers:\n  - netcore-1.0\n  - netcore-1.1\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - netstandard-1.1\n  - netstandard-1.2\n  - netstandard-1.3\n  - netstandard-1.4\n  - netstandard-1.6\n  - netstandard-2.0\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.IO.Compression/GZipStream.xml\n- uid: System.IO.Compression.GZipStream.ReadAsync*\n  parent: System.IO.Compression.GZipStream\n  isExternal: false\n  name: ReadAsync\n  nameWithType: GZipStream.ReadAsync\n  fullName: GZipStream.ReadAsync\n  monikers:\n  - netcore-1.0\n  - netcore-1.1\n  - netcore-2.0\n  - netstandard-1.3\n  - netstandard-1.4\n  - netstandard-1.6\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.IO.Compression/GZipStream.xml\n- uid: System.IO.Compression.GZipStream.Seek*\n  parent: System.IO.Compression.GZipStream\n  isExternal: false\n  name: Seek\n  nameWithType: GZipStream.Seek\n  fullName: GZipStream.Seek\n  monikers:\n  - netcore-1.0\n  - netcore-1.1\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - netstandard-1.1\n  - netstandard-1.2\n  - netstandard-1.3\n  - netstandard-1.4\n  - netstandard-1.6\n  - netstandard-2.0\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.IO.Compression/GZipStream.xml\n- uid: System.IO.Compression.GZipStream.SetLength*\n  parent: System.IO.Compression.GZipStream\n  isExternal: false\n  name: SetLength\n  nameWithType: GZipStream.SetLength\n  fullName: GZipStream.SetLength\n  monikers:\n  - netcore-1.0\n  - netcore-1.1\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - netstandard-1.1\n  - netstandard-1.2\n  - netstandard-1.3\n  - netstandard-1.4\n  - netstandard-1.6\n  - netstandard-2.0\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.IO.Compression/GZipStream.xml\n- uid: System.IO.Compression.GZipStream.Write*\n  parent: System.IO.Compression.GZipStream\n  isExternal: false\n  name: Write\n  nameWithType: GZipStream.Write\n  fullName: GZipStream.Write\n  monikers:\n  - netcore-1.0\n  - netcore-1.1\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - netstandard-1.1\n  - netstandard-1.2\n  - netstandard-1.3\n  - netstandard-1.4\n  - netstandard-1.6\n  - netstandard-2.0\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.IO.Compression/GZipStream.xml\n- uid: System.IO.Compression.GZipStream.WriteAsync*\n  parent: System.IO.Compression.GZipStream\n  isExternal: false\n  name: WriteAsync\n  nameWithType: GZipStream.WriteAsync\n  fullName: GZipStream.WriteAsync\n  monikers:\n  - netcore-1.0\n  - netcore-1.1\n  - netcore-2.0\n  - netstandard-1.3\n  - netstandard-1.4\n  - netstandard-1.6\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.IO.Compression/GZipStream.xml\n- uid: System.Object.Equals(System.Object)\n  parent: System.Object\n  isExternal: false\n  name: Equals(Object)\n  nameWithType: Object.Equals(Object)\n  fullName: Object.Equals(Object)\n- uid: System.Object.Equals(System.Object,System.Object)\n  parent: System.Object\n  isExternal: false\n  name: Equals(Object, Object)\n  nameWithType: Object.Equals(Object, Object)\n  fullName: Object.Equals(Object, Object)\n- uid: System.Object.GetHashCode\n  parent: System.Object\n  isExternal: false\n  name: GetHashCode()\n  nameWithType: Object.GetHashCode()\n  fullName: Object.GetHashCode()\n- uid: System.Object.GetType\n  parent: System.Object\n  isExternal: false\n  name: GetType()\n  nameWithType: Object.GetType()\n  fullName: Object.GetType()\n- uid: System.Object.MemberwiseClone\n  parent: System.Object\n  isExternal: false\n  name: MemberwiseClone()\n  nameWithType: Object.MemberwiseClone()\n  fullName: Object.MemberwiseClone()\n- uid: System.Object.ReferenceEquals(System.Object,System.Object)\n  parent: System.Object\n  isExternal: false\n  name: ReferenceEquals(Object, Object)\n  nameWithType: Object.ReferenceEquals(Object, Object)\n  fullName: Object.ReferenceEquals(Object, Object)\n- uid: System.Object.ToString\n  parent: System.Object\n  isExternal: false\n  name: ToString()\n  nameWithType: Object.ToString()\n  fullName: Object.ToString()\n- uid: System.IO.Stream.CanTimeout\n  parent: System.IO.Stream\n  isExternal: false\n  name: CanTimeout\n  nameWithType: Stream.CanTimeout\n  fullName: Stream.CanTimeout\n- uid: System.IO.Stream.Close\n  parent: System.IO.Stream\n  isExternal: false\n  name: Close()\n  nameWithType: Stream.Close()\n  fullName: Stream.Close()\n- uid: System.IO.Stream.CopyTo(System.IO.Stream,System.Int32)\n  parent: System.IO.Stream\n  isExternal: false\n  name: CopyTo(Stream, Int32)\n  nameWithType: Stream.CopyTo(Stream, Int32)\n  fullName: Stream.CopyTo(Stream, Int32)\n- uid: System.IO.Stream.CopyTo(System.IO.Stream)\n  parent: System.IO.Stream\n  isExternal: false\n  name: CopyTo(Stream)\n  nameWithType: Stream.CopyTo(Stream)\n  fullName: Stream.CopyTo(Stream)\n- uid: System.IO.Stream.CopyToAsync(System.IO.Stream)\n  parent: System.IO.Stream\n  isExternal: false\n  name: CopyToAsync(Stream)\n  nameWithType: Stream.CopyToAsync(Stream)\n  fullName: Stream.CopyToAsync(Stream)\n- uid: System.IO.Stream.CopyToAsync(System.IO.Stream,System.Int32)\n  parent: System.IO.Stream\n  isExternal: false\n  name: CopyToAsync(Stream, Int32)\n  nameWithType: Stream.CopyToAsync(Stream, Int32)\n  fullName: Stream.CopyToAsync(Stream, Int32)\n- uid: System.IO.Stream.CopyToAsync(System.IO.Stream,System.Int32,System.Threading.CancellationToken)\n  parent: System.IO.Stream\n  isExternal: false\n  name: CopyToAsync(Stream, Int32, CancellationToken)\n  nameWithType: Stream.CopyToAsync(Stream, Int32, CancellationToken)\n  fullName: Stream.CopyToAsync(Stream, Int32, CancellationToken)\n- uid: System.IO.Stream.CreateWaitHandle\n  parent: System.IO.Stream\n  isExternal: false\n  name: CreateWaitHandle()\n  nameWithType: Stream.CreateWaitHandle()\n  fullName: Stream.CreateWaitHandle()\n- uid: System.IO.Stream.Dispose\n  parent: System.IO.Stream\n  isExternal: false\n  name: Dispose()\n  nameWithType: Stream.Dispose()\n  fullName: Stream.Dispose()\n- uid: System.IO.Stream.FlushAsync\n  parent: System.IO.Stream\n  isExternal: false\n  name: FlushAsync()\n  nameWithType: Stream.FlushAsync()\n  fullName: Stream.FlushAsync()\n- uid: System.IO.Stream.FlushAsync(System.Threading.CancellationToken)\n  parent: System.IO.Stream\n  isExternal: false\n  name: FlushAsync(CancellationToken)\n  nameWithType: Stream.FlushAsync(CancellationToken)\n  fullName: Stream.FlushAsync(CancellationToken)\n- uid: System.IO.Stream.Null\n  parent: System.IO.Stream\n  isExternal: false\n  name: \"Null\"\n  nameWithType: Stream.Null\n  fullName: Stream.Null\n- uid: System.IO.Stream.ObjectInvariant\n  parent: System.IO.Stream\n  isExternal: false\n  name: ObjectInvariant()\n  nameWithType: Stream.ObjectInvariant()\n  fullName: Stream.ObjectInvariant()\n- uid: System.IO.Stream.ReadAsync(System.Byte[],System.Int32,System.Int32)\n  parent: System.IO.Stream\n  isExternal: false\n  name: ReadAsync(Byte[], Int32, Int32)\n  nameWithType: Stream.ReadAsync(Byte[], Int32, Int32)\n  fullName: Stream.ReadAsync(Byte[], Int32, Int32)\n- uid: System.IO.Stream.ReadByte\n  parent: System.IO.Stream\n  isExternal: false\n  name: ReadByte()\n  nameWithType: Stream.ReadByte()\n  fullName: Stream.ReadByte()\n- uid: System.IO.Stream.ReadTimeout\n  parent: System.IO.Stream\n  isExternal: false\n  name: ReadTimeout\n  nameWithType: Stream.ReadTimeout\n  fullName: Stream.ReadTimeout\n- uid: System.IO.Stream.Synchronized(System.IO.Stream)\n  parent: System.IO.Stream\n  isExternal: false\n  name: Synchronized(Stream)\n  nameWithType: Stream.Synchronized(Stream)\n  fullName: Stream.Synchronized(Stream)\n- uid: System.IO.Stream.WriteAsync(System.Byte[],System.Int32,System.Int32)\n  parent: System.IO.Stream\n  isExternal: false\n  name: WriteAsync(Byte[], Int32, Int32)\n  nameWithType: Stream.WriteAsync(Byte[], Int32, Int32)\n  fullName: Stream.WriteAsync(Byte[], Int32, Int32)\n- uid: System.IO.Stream.WriteByte(System.Byte)\n  parent: System.IO.Stream\n  isExternal: false\n  name: WriteByte(Byte)\n  nameWithType: Stream.WriteByte(Byte)\n  fullName: Stream.WriteByte(Byte)\n- uid: System.IO.Stream.WriteTimeout\n  parent: System.IO.Stream\n  isExternal: false\n  name: WriteTimeout\n  nameWithType: Stream.WriteTimeout\n  fullName: Stream.WriteTimeout\n"}