{"nodes":[{"content":"Identifies the type of class interface that is generated for a class.","nodes":[{"pos":[0,69],"content":"Identifies the type of class interface that is generated for a class.","nodes":[{"content":"Identifies the type of class interface that is generated for a class.","pos":[0,69]}]}],"pos":[674,744],"yaml":true},{"content":"This enumeration is used in conjunction with the <xref:System.Runtime.InteropServices.ClassInterfaceAttribute> attribute.","nodes":[{"pos":[0,121],"content":"This enumeration is used in conjunction with the <xref:System.Runtime.InteropServices.ClassInterfaceAttribute> attribute.","nodes":[{"content":"This enumeration is used in conjunction with the <ph id=\"ph1\">&lt;xref:System.Runtime.InteropServices.ClassInterfaceAttribute&gt;</ph> attribute.","pos":[0,121],"source":"This enumeration is used in conjunction with the <xref:System.Runtime.InteropServices.ClassInterfaceAttribute> attribute."}]}],"pos":[755,877],"yaml":true,"extradata":"MT"},{"content":"Indicates that the class only supports late binding for COM clients. A `dispinterface` for the class is automatically exposed to COM clients on request. The type library produced by [Tlbexp.exe (Type Library Exporter)](~/docs/framework/tools/tlbexp-exe-type-library-exporter.md) does not contain type information for the `dispinterface` in order to prevent clients from caching the DISPIDs of the interface. The `dispinterface` does not exhibit the versioning problems described in <xref href=\"System.Runtime.InteropServices.ClassInterfaceAttribute\"></xref> because clients can only late-bind to the interface.","nodes":[{"pos":[0,610],"content":"Indicates that the class only supports late binding for COM clients. A `dispinterface` for the class is automatically exposed to COM clients on request. The type library produced by [Tlbexp.exe (Type Library Exporter)](~/docs/framework/tools/tlbexp-exe-type-library-exporter.md) does not contain type information for the `dispinterface` in order to prevent clients from caching the DISPIDs of the interface. The `dispinterface` does not exhibit the versioning problems described in <xref href=\"System.Runtime.InteropServices.ClassInterfaceAttribute\"></xref> because clients can only late-bind to the interface.","nodes":[{"content":"Indicates that the class only supports late binding for COM clients.","pos":[0,68]},{"content":"A <ph id=\"ph1\">`dispinterface`</ph> for the class is automatically exposed to COM clients on request.","pos":[69,152],"source":" A `dispinterface` for the class is automatically exposed to COM clients on request."},{"content":"The type library produced by <bpt id=\"p1\">[</bpt>Tlbexp.exe (Type Library Exporter)<ept id=\"p1\">](~/docs/framework/tools/tlbexp-exe-type-library-exporter.md)</ept> does not contain type information for the <ph id=\"ph1\">`dispinterface`</ph> in order to prevent clients from caching the DISPIDs of the interface.","pos":[153,407],"source":" The type library produced by [Tlbexp.exe (Type Library Exporter)](~/docs/framework/tools/tlbexp-exe-type-library-exporter.md) does not contain type information for the `dispinterface` in order to prevent clients from caching the DISPIDs of the interface."},{"content":"The <ph id=\"ph1\">`dispinterface`</ph> does not exhibit the versioning problems described in <ph id=\"ph2\">&lt;xref href=\"System.Runtime.InteropServices.ClassInterfaceAttribute\"&gt;&lt;/xref&gt;</ph> because clients can only late-bind to the interface.","pos":[408,610],"source":" The `dispinterface` does not exhibit the versioning problems described in <xref href=\"System.Runtime.InteropServices.ClassInterfaceAttribute\"></xref> because clients can only late-bind to the interface."}]}],"pos":[3339,3950],"yaml":true},{"content":"This is the default setting for <xref:System.Runtime.InteropServices.ClassInterfaceAttribute>.","nodes":[{"pos":[0,94],"content":"This is the default setting for <xref:System.Runtime.InteropServices.ClassInterfaceAttribute>.","nodes":[{"content":"This is the default setting for <ph id=\"ph1\">&lt;xref:System.Runtime.InteropServices.ClassInterfaceAttribute&gt;</ph>.","pos":[0,94],"source":"This is the default setting for <xref:System.Runtime.InteropServices.ClassInterfaceAttribute>."}]}],"pos":[3961,4056],"yaml":true,"extradata":"MT"},{"content":"Indicates that a dual class interface is automatically generated for the class and exposed to COM. Type information is produced for the class interface and published in the type library. Using `AutoDual` is strongly discouraged because of the versioning limitations described in <xref href=\"System.Runtime.InteropServices.ClassInterfaceAttribute\"></xref>.","nodes":[{"pos":[0,355],"content":"Indicates that a dual class interface is automatically generated for the class and exposed to COM. Type information is produced for the class interface and published in the type library. Using `AutoDual` is strongly discouraged because of the versioning limitations described in <xref href=\"System.Runtime.InteropServices.ClassInterfaceAttribute\"></xref>.","nodes":[{"content":"Indicates that a dual class interface is automatically generated for the class and exposed to COM.","pos":[0,98]},{"content":"Type information is produced for the class interface and published in the type library.","pos":[99,186]},{"content":"Using <ph id=\"ph1\">`AutoDual`</ph> is strongly discouraged because of the versioning limitations described in <ph id=\"ph2\">&lt;xref href=\"System.Runtime.InteropServices.ClassInterfaceAttribute\"&gt;&lt;/xref&gt;</ph>.","pos":[187,355],"source":" Using `AutoDual` is strongly discouraged because of the versioning limitations described in <xref href=\"System.Runtime.InteropServices.ClassInterfaceAttribute\"></xref>."}]}],"pos":[5641,5997],"yaml":true},{"content":"Indicates that no class interface is generated for the class. If no interfaces are implemented explicitly, the class can only provide late-bound access through the `IDispatch` interface. This is the recommended setting for <xref href=\"System.Runtime.InteropServices.ClassInterfaceAttribute\"></xref>. Using `ClassInterfaceType.None` is the only way to expose functionality through interfaces implemented explicitly by the class.","nodes":[{"pos":[0,427],"content":"Indicates that no class interface is generated for the class. If no interfaces are implemented explicitly, the class can only provide late-bound access through the `IDispatch` interface. This is the recommended setting for <xref href=\"System.Runtime.InteropServices.ClassInterfaceAttribute\"></xref>. Using `ClassInterfaceType.None` is the only way to expose functionality through interfaces implemented explicitly by the class.","nodes":[{"content":"Indicates that no class interface is generated for the class.","pos":[0,61]},{"content":"If no interfaces are implemented explicitly, the class can only provide late-bound access through the <ph id=\"ph1\">`IDispatch`</ph> interface.","pos":[62,186],"source":" If no interfaces are implemented explicitly, the class can only provide late-bound access through the `IDispatch` interface."},{"content":"This is the recommended setting for <ph id=\"ph1\">&lt;xref href=\"System.Runtime.InteropServices.ClassInterfaceAttribute\"&gt;&lt;/xref&gt;</ph>.","pos":[187,299],"source":" This is the recommended setting for <xref href=\"System.Runtime.InteropServices.ClassInterfaceAttribute\"></xref>."},{"content":"Using <ph id=\"ph1\">`ClassInterfaceType.None`</ph> is the only way to expose functionality through interfaces implemented explicitly by the class.","pos":[300,427],"source":" Using `ClassInterfaceType.None` is the only way to expose functionality through interfaces implemented explicitly by the class."}]}],"pos":[7554,7982],"yaml":true},{"content":"[Tlbexp.exe (Type Library Exporter)](~/docs/framework/tools/tlbexp-exe-type-library-exporter.md) exposes the first public, COM-visible interface implemented by the class as the default interface of the coclass. Beginning with the .NET Framework version 2.0, you can specify the default interface exposed to COM by using the <xref:System.Runtime.InteropServices.ComDefaultInterfaceAttribute> attribute. If the class implements no interfaces, the first public, COM-visible interface implemented by a base class becomes the default interface (starting with the most recently derived base class and working backward). Tlbexp.exe exposes `_Object` as the default interface if neither the class nor its base classes implement interfaces.","nodes":[{"pos":[0,731],"content":"[Tlbexp.exe (Type Library Exporter)](~/docs/framework/tools/tlbexp-exe-type-library-exporter.md) exposes the first public, COM-visible interface implemented by the class as the default interface of the coclass. Beginning with the .NET Framework version 2.0, you can specify the default interface exposed to COM by using the <xref:System.Runtime.InteropServices.ComDefaultInterfaceAttribute> attribute. If the class implements no interfaces, the first public, COM-visible interface implemented by a base class becomes the default interface (starting with the most recently derived base class and working backward). Tlbexp.exe exposes `_Object` as the default interface if neither the class nor its base classes implement interfaces.","nodes":[{"content":"<bpt id=\"p1\">[</bpt>Tlbexp.exe (Type Library Exporter)<ept id=\"p1\">](~/docs/framework/tools/tlbexp-exe-type-library-exporter.md)</ept> exposes the first public, COM-visible interface implemented by the class as the default interface of the coclass.","pos":[0,210],"source":"[Tlbexp.exe (Type Library Exporter)](~/docs/framework/tools/tlbexp-exe-type-library-exporter.md) exposes the first public, COM-visible interface implemented by the class as the default interface of the coclass."},{"content":"Beginning with the .NET Framework version 2.0, you can specify the default interface exposed to COM by using the <ph id=\"ph1\">&lt;xref:System.Runtime.InteropServices.ComDefaultInterfaceAttribute&gt;</ph> attribute.","pos":[211,401],"source":" Beginning with the .NET Framework version 2.0, you can specify the default interface exposed to COM by using the <xref:System.Runtime.InteropServices.ComDefaultInterfaceAttribute> attribute."},{"content":"If the class implements no interfaces, the first public, COM-visible interface implemented by a base class becomes the default interface (starting with the most recently derived base class and working backward).","pos":[402,613]},{"content":"Tlbexp.exe exposes <ph id=\"ph1\">`_Object`</ph> as the default interface if neither the class nor its base classes implement interfaces.","pos":[614,731],"source":" Tlbexp.exe exposes `_Object` as the default interface if neither the class nor its base classes implement interfaces."}]}],"pos":[7993,8727],"yaml":true,"extradata":"MT"}],"content":"### YamlMime:ManagedReference\nitems:\n- uid: System.Runtime.InteropServices.ClassInterfaceType\n  commentId: T:System.Runtime.InteropServices.ClassInterfaceType\n  id: ClassInterfaceType\n  children:\n  - System.Runtime.InteropServices.ClassInterfaceType.AutoDispatch\n  - System.Runtime.InteropServices.ClassInterfaceType.AutoDual\n  - System.Runtime.InteropServices.ClassInterfaceType.None\n  langs:\n  - csharp\n  name: ClassInterfaceType\n  nameWithType: ClassInterfaceType\n  fullName: System.Runtime.InteropServices.ClassInterfaceType\n  type: Enum\n  assemblies:\n  - System.Runtime.InteropServices\n  - mscorlib\n  - netstandard\n  namespace: System.Runtime.InteropServices\n  summary: Identifies the type of class interface that is generated for a class.\n  remarks: This enumeration is used in conjunction with the <xref:System.Runtime.InteropServices.ClassInterfaceAttribute> attribute.\n  example:\n  - \"This example shows how to apply the <xref:System.Runtime.InteropServices.ClassInterfaceAttribute> to a type, setting the <xref:System.Runtime.InteropServices.ClassInterfaceType>. Classes defined this way can be used from unmanaged COM.  \\n  \\n [!code-cpp[ClassInterfaceType#1](~/samples/snippets/cpp/VS_Snippets_CLR/ClassInterfaceType/cpp/ClassInterfaceType.cpp#1)]\\n [!code-csharp[ClassInterfaceType#1](~/samples/snippets/csharp/VS_Snippets_CLR/ClassInterfaceType/CS/ClassInterfaceType.cs#1)]\\n [!code-vb[ClassInterfaceType#1](~/samples/snippets/visualbasic/VS_Snippets_CLR/ClassInterfaceType/VB/ClassInterfaceType.vb#1)]\"\n  syntax:\n    content: >-\n      [System.Runtime.InteropServices.ComVisible(true)]\n\n      public enum ClassInterfaceType\n  inheritance:\n  - System.Object\n  - System.ValueType\n  - System.Enum\n  attributes:\n  - type: System.Runtime.InteropServices.ComVisibleAttribute\n  version:\n  - netcore-1.0\n  - netcore-1.1\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - netstandard-1.1\n  - netstandard-1.2\n  - netstandard-1.3\n  - netstandard-1.4\n  - netstandard-1.5\n  - netstandard-1.6\n  - netstandard-2.0\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  monikers:\n  - netcore-1.0\n  - netcore-1.1\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - netstandard-1.1\n  - netstandard-1.2\n  - netstandard-1.3\n  - netstandard-1.4\n  - netstandard-1.5\n  - netstandard-1.6\n  - netstandard-2.0\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Runtime.InteropServices/ClassInterfaceType.xml\n  ms.technology:\n  - dotnet-standard\n  author: rpetrusha\n  ms.author: ronpet\n  manager: wpickett\n- uid: System.Runtime.InteropServices.ClassInterfaceType.AutoDispatch\n  commentId: F:System.Runtime.InteropServices.ClassInterfaceType.AutoDispatch\n  id: AutoDispatch\n  parent: System.Runtime.InteropServices.ClassInterfaceType\n  langs:\n  - csharp\n  name: AutoDispatch\n  nameWithType: ClassInterfaceType.AutoDispatch\n  fullName: ClassInterfaceType.AutoDispatch\n  type: Field\n  assemblies:\n  - System.Runtime.InteropServices\n  - mscorlib\n  - netstandard\n  namespace: System.Runtime.InteropServices\n  summary: Indicates that the class only supports late binding for COM clients. A `dispinterface` for the class is automatically exposed to COM clients on request. The type library produced by [Tlbexp.exe (Type Library Exporter)](~/docs/framework/tools/tlbexp-exe-type-library-exporter.md) does not contain type information for the `dispinterface` in order to prevent clients from caching the DISPIDs of the interface. The `dispinterface` does not exhibit the versioning problems described in <xref href=\"System.Runtime.InteropServices.ClassInterfaceAttribute\"></xref> because clients can only late-bind to the interface.\n  remarks: This is the default setting for <xref:System.Runtime.InteropServices.ClassInterfaceAttribute>.\n  syntax:\n    content: AutoDispatch\n    return:\n      type: System.Runtime.InteropServices.ClassInterfaceType\n      description: ''\n  exceptions: []\n  version:\n  - netcore-1.0\n  - netcore-1.1\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - netstandard-1.1\n  - netstandard-1.2\n  - netstandard-1.3\n  - netstandard-1.4\n  - netstandard-1.5\n  - netstandard-1.6\n  - netstandard-2.0\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  monikers:\n  - netcore-1.0\n  - netcore-1.1\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - netstandard-1.1\n  - netstandard-1.2\n  - netstandard-1.3\n  - netstandard-1.4\n  - netstandard-1.5\n  - netstandard-1.6\n  - netstandard-2.0\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Runtime.InteropServices/ClassInterfaceType.xml\n- uid: System.Runtime.InteropServices.ClassInterfaceType.AutoDual\n  commentId: F:System.Runtime.InteropServices.ClassInterfaceType.AutoDual\n  id: AutoDual\n  parent: System.Runtime.InteropServices.ClassInterfaceType\n  langs:\n  - csharp\n  name: AutoDual\n  nameWithType: ClassInterfaceType.AutoDual\n  fullName: ClassInterfaceType.AutoDual\n  type: Field\n  assemblies:\n  - System.Runtime.InteropServices\n  - mscorlib\n  - netstandard\n  namespace: System.Runtime.InteropServices\n  summary: Indicates that a dual class interface is automatically generated for the class and exposed to COM. Type information is produced for the class interface and published in the type library. Using `AutoDual` is strongly discouraged because of the versioning limitations described in <xref href=\"System.Runtime.InteropServices.ClassInterfaceAttribute\"></xref>.\n  syntax:\n    content: AutoDual\n    return:\n      type: System.Runtime.InteropServices.ClassInterfaceType\n      description: ''\n  exceptions: []\n  version:\n  - netcore-1.0\n  - netcore-1.1\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - netstandard-1.1\n  - netstandard-1.2\n  - netstandard-1.3\n  - netstandard-1.4\n  - netstandard-1.5\n  - netstandard-1.6\n  - netstandard-2.0\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  monikers:\n  - netcore-1.0\n  - netcore-1.1\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - netstandard-1.1\n  - netstandard-1.2\n  - netstandard-1.3\n  - netstandard-1.4\n  - netstandard-1.5\n  - netstandard-1.6\n  - netstandard-2.0\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Runtime.InteropServices/ClassInterfaceType.xml\n- uid: System.Runtime.InteropServices.ClassInterfaceType.None\n  commentId: F:System.Runtime.InteropServices.ClassInterfaceType.None\n  id: None\n  parent: System.Runtime.InteropServices.ClassInterfaceType\n  langs:\n  - csharp\n  name: None\n  nameWithType: ClassInterfaceType.None\n  fullName: ClassInterfaceType.None\n  type: Field\n  assemblies:\n  - System.Runtime.InteropServices\n  - mscorlib\n  - netstandard\n  namespace: System.Runtime.InteropServices\n  summary: Indicates that no class interface is generated for the class. If no interfaces are implemented explicitly, the class can only provide late-bound access through the `IDispatch` interface. This is the recommended setting for <xref href=\"System.Runtime.InteropServices.ClassInterfaceAttribute\"></xref>. Using `ClassInterfaceType.None` is the only way to expose functionality through interfaces implemented explicitly by the class.\n  remarks: '[Tlbexp.exe (Type Library Exporter)](~/docs/framework/tools/tlbexp-exe-type-library-exporter.md) exposes the first public, COM-visible interface implemented by the class as the default interface of the coclass. Beginning with the .NET Framework version 2.0, you can specify the default interface exposed to COM by using the <xref:System.Runtime.InteropServices.ComDefaultInterfaceAttribute> attribute. If the class implements no interfaces, the first public, COM-visible interface implemented by a base class becomes the default interface (starting with the most recently derived base class and working backward). Tlbexp.exe exposes `_Object` as the default interface if neither the class nor its base classes implement interfaces.'\n  syntax:\n    content: None\n    return:\n      type: System.Runtime.InteropServices.ClassInterfaceType\n      description: ''\n  exceptions: []\n  version:\n  - netcore-1.0\n  - netcore-1.1\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - netstandard-1.1\n  - netstandard-1.2\n  - netstandard-1.3\n  - netstandard-1.4\n  - netstandard-1.5\n  - netstandard-1.6\n  - netstandard-2.0\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  monikers:\n  - netcore-1.0\n  - netcore-1.1\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - netstandard-1.1\n  - netstandard-1.2\n  - netstandard-1.3\n  - netstandard-1.4\n  - netstandard-1.5\n  - netstandard-1.6\n  - netstandard-2.0\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Runtime.InteropServices/ClassInterfaceType.xml\nreferences:\n- uid: System.Enum\n  parent: System\n  isExternal: false\n  name: Enum\n  nameWithType: Enum\n  fullName: System.Enum\n- uid: System.Runtime.InteropServices.ClassInterfaceType.AutoDispatch\n  parent: System.Runtime.InteropServices.ClassInterfaceType\n  isExternal: false\n  name: AutoDispatch\n  nameWithType: ClassInterfaceType.AutoDispatch\n  fullName: ClassInterfaceType.AutoDispatch\n- uid: System.Runtime.InteropServices.ClassInterfaceType\n  parent: System.Runtime.InteropServices\n  isExternal: false\n  name: ClassInterfaceType\n  nameWithType: ClassInterfaceType\n  fullName: System.Runtime.InteropServices.ClassInterfaceType\n- uid: System.Runtime.InteropServices.ClassInterfaceType.AutoDual\n  parent: System.Runtime.InteropServices.ClassInterfaceType\n  isExternal: false\n  name: AutoDual\n  nameWithType: ClassInterfaceType.AutoDual\n  fullName: ClassInterfaceType.AutoDual\n- uid: System.Runtime.InteropServices.ClassInterfaceType.None\n  parent: System.Runtime.InteropServices.ClassInterfaceType\n  isExternal: false\n  name: None\n  nameWithType: ClassInterfaceType.None\n  fullName: ClassInterfaceType.None\n"}