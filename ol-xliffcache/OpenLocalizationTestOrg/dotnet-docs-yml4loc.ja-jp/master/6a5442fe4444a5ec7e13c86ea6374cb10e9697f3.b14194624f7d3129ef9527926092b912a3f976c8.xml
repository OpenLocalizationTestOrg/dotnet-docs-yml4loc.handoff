{"nodes":[{"content":"Abstract base class to be implemented by all text to speech synthesis engines.","nodes":[{"pos":[0,78],"content":"Abstract base class to be implemented by all text to speech synthesis engines.","nodes":[{"content":"Abstract base class to be implemented by all text to speech synthesis engines.","pos":[0,78]}]}],"pos":[1066,1145],"yaml":true},{"content":"To construct a custom text to speech engine, an application must always implement a class derived from the abstract base class <xref:System.Speech.Synthesis.TtsEngine.TtsEngineSsml>.  \n  \n A properly registered implementation of <xref:System.Speech.Synthesis.TtsEngine.TtsEngineSsml> can then be used as a synthesizer voice by <xref:System.Speech.Synthesis> name space based applications.  \n  \n Objects inheriting from <xref:System.Speech.Synthesis.TtsEngine.TtsEngineSsml> must override the following members: <xref:System.Speech.Synthesis.TtsEngine.TtsEngineSsml.%23ctor%2A>, <xref:System.Speech.Synthesis.TtsEngine.TtsEngineSsml.AddLexicon%2A>, <xref:System.Speech.Synthesis.TtsEngine.TtsEngineSsml.RemoveLexicon%2A>, <xref:System.Speech.Synthesis.TtsEngine.TtsEngineSsml.GetOutputFormat%2A> and <xref:System.Speech.Synthesis.TtsEngine.TtsEngineSsml.Speak%2A>.  \n  \n The most important member of the <xref:System.Speech.Synthesis.TtsEngine.TtsEngineSsml> class to be implemented is the <xref:System.Speech.Synthesis.TtsEngine.TtsEngineSsml.Speak%2A> method.  \n  \n The <xref:System.Speech.Synthesis.TtsEngine.TtsEngineSsml.Speak%2A> method is called by the infrastructures text parser receiving:  \n  \n1.  A reference to the <xref:System.Speech.Synthesis.TtsEngine.ITtsEngineSite> interface, which provides access to system services such as even queuing and writing audio output.  \n  \n2.  An array of <xref:System.Speech.Synthesis.TtsEngine.TextFragment> instance produced from Speech Synthesis Markup Language (SSML) input. In addition to text to be rendered as speech, the parsing of the SSML stores information about the requested attributes of the speech in a <xref:System.Speech.Synthesis.TtsEngine.FragmentState> instance associated with each incoming <xref:System.Speech.Synthesis.TtsEngine.TextFragment> object.  \n  \n A speech synthesizer application can optionally make requests for a specified output format by implementing <xref:System.Speech.Synthesis.TtsEngine.TtsEngineSsml.GetOutputFormat%2A> to be called by the platform when it tries to provide the correct audio output.  \n  \n An implementer can also provide support for managing external definitions of pronunciations, or lexicons, by their implementation of <xref:System.Speech.Synthesis.TtsEngine.TtsEngineSsml.AddLexicon%2A> and <xref:System.Speech.Synthesis.TtsEngine.TtsEngineSsml.RemoveLexicon%2A>.","nodes":[{"pos":[0,182],"content":"To construct a custom text to speech engine, an application must always implement a class derived from the abstract base class <xref:System.Speech.Synthesis.TtsEngine.TtsEngineSsml>.","nodes":[{"content":"To construct a custom text to speech engine, an application must always implement a class derived from the abstract base class <ph id=\"ph1\">&lt;xref:System.Speech.Synthesis.TtsEngine.TtsEngineSsml&gt;</ph>.","pos":[0,182],"source":"To construct a custom text to speech engine, an application must always implement a class derived from the abstract base class <xref:System.Speech.Synthesis.TtsEngine.TtsEngineSsml>."}]},{"pos":[189,388],"content":"A properly registered implementation of <xref:System.Speech.Synthesis.TtsEngine.TtsEngineSsml> can then be used as a synthesizer voice by <xref:System.Speech.Synthesis> name space based applications.","nodes":[{"content":"A properly registered implementation of <ph id=\"ph1\">&lt;xref:System.Speech.Synthesis.TtsEngine.TtsEngineSsml&gt;</ph> can then be used as a synthesizer voice by <ph id=\"ph2\">&lt;xref:System.Speech.Synthesis&gt;</ph> name space based applications.","pos":[0,199],"source":"A properly registered implementation of <xref:System.Speech.Synthesis.TtsEngine.TtsEngineSsml> can then be used as a synthesizer voice by <xref:System.Speech.Synthesis> name space based applications."}]},{"pos":[395,863],"content":"Objects inheriting from <xref:System.Speech.Synthesis.TtsEngine.TtsEngineSsml> must override the following members: <xref:System.Speech.Synthesis.TtsEngine.TtsEngineSsml.%23ctor%2A>, <xref:System.Speech.Synthesis.TtsEngine.TtsEngineSsml.AddLexicon%2A>, <xref:System.Speech.Synthesis.TtsEngine.TtsEngineSsml.RemoveLexicon%2A>, <xref:System.Speech.Synthesis.TtsEngine.TtsEngineSsml.GetOutputFormat%2A> and <xref:System.Speech.Synthesis.TtsEngine.TtsEngineSsml.Speak%2A>.","nodes":[{"content":"Objects inheriting from <ph id=\"ph1\">&lt;xref:System.Speech.Synthesis.TtsEngine.TtsEngineSsml&gt;</ph> must override the following members: <ph id=\"ph2\">&lt;xref:System.Speech.Synthesis.TtsEngine.TtsEngineSsml.%23ctor%2A&gt;</ph>, <ph id=\"ph3\">&lt;xref:System.Speech.Synthesis.TtsEngine.TtsEngineSsml.AddLexicon%2A&gt;</ph>, <ph id=\"ph4\">&lt;xref:System.Speech.Synthesis.TtsEngine.TtsEngineSsml.RemoveLexicon%2A&gt;</ph>, <ph id=\"ph5\">&lt;xref:System.Speech.Synthesis.TtsEngine.TtsEngineSsml.GetOutputFormat%2A&gt;</ph> and <ph id=\"ph6\">&lt;xref:System.Speech.Synthesis.TtsEngine.TtsEngineSsml.Speak%2A&gt;</ph>.","pos":[0,468],"source":"Objects inheriting from <xref:System.Speech.Synthesis.TtsEngine.TtsEngineSsml> must override the following members: <xref:System.Speech.Synthesis.TtsEngine.TtsEngineSsml.%23ctor%2A>, <xref:System.Speech.Synthesis.TtsEngine.TtsEngineSsml.AddLexicon%2A>, <xref:System.Speech.Synthesis.TtsEngine.TtsEngineSsml.RemoveLexicon%2A>, <xref:System.Speech.Synthesis.TtsEngine.TtsEngineSsml.GetOutputFormat%2A> and <xref:System.Speech.Synthesis.TtsEngine.TtsEngineSsml.Speak%2A>."}]},{"pos":[870,1060],"content":"The most important member of the <xref:System.Speech.Synthesis.TtsEngine.TtsEngineSsml> class to be implemented is the <xref:System.Speech.Synthesis.TtsEngine.TtsEngineSsml.Speak%2A> method.","nodes":[{"content":"The most important member of the <ph id=\"ph1\">&lt;xref:System.Speech.Synthesis.TtsEngine.TtsEngineSsml&gt;</ph> class to be implemented is the <ph id=\"ph2\">&lt;xref:System.Speech.Synthesis.TtsEngine.TtsEngineSsml.Speak%2A&gt;</ph> method.","pos":[0,190],"source":"The most important member of the <xref:System.Speech.Synthesis.TtsEngine.TtsEngineSsml> class to be implemented is the <xref:System.Speech.Synthesis.TtsEngine.TtsEngineSsml.Speak%2A> method."}]},{"pos":[1067,1197],"content":"The <xref:System.Speech.Synthesis.TtsEngine.TtsEngineSsml.Speak%2A> method is called by the infrastructures text parser receiving:","nodes":[{"content":"The <ph id=\"ph1\">&lt;xref:System.Speech.Synthesis.TtsEngine.TtsEngineSsml.Speak%2A&gt;</ph> method is called by the infrastructures text parser receiving:","pos":[0,130],"source":"The <xref:System.Speech.Synthesis.TtsEngine.TtsEngineSsml.Speak%2A> method is called by the infrastructures text parser receiving:"}]},{"pos":[1207,1380],"content":"A reference to the <xref:System.Speech.Synthesis.TtsEngine.ITtsEngineSite> interface, which provides access to system services such as even queuing and writing audio output.","nodes":[{"content":"A reference to the <ph id=\"ph1\">&lt;xref:System.Speech.Synthesis.TtsEngine.ITtsEngineSite&gt;</ph> interface, which provides access to system services such as even queuing and writing audio output.","pos":[0,173],"source":"A reference to the <xref:System.Speech.Synthesis.TtsEngine.ITtsEngineSite> interface, which provides access to system services such as even queuing and writing audio output."}]},{"pos":[1390,1820],"content":"An array of <xref:System.Speech.Synthesis.TtsEngine.TextFragment> instance produced from Speech Synthesis Markup Language (SSML) input. In addition to text to be rendered as speech, the parsing of the SSML stores information about the requested attributes of the speech in a <xref:System.Speech.Synthesis.TtsEngine.FragmentState> instance associated with each incoming <xref:System.Speech.Synthesis.TtsEngine.TextFragment> object.","nodes":[{"content":"An array of <xref:System.Speech.Synthesis.TtsEngine.TextFragment> instance produced from Speech Synthesis Markup Language (SSML) input. In addition to text to be rendered as speech, the parsing of the SSML stores information about the requested attributes of the speech in a <xref:System.Speech.Synthesis.TtsEngine.FragmentState> instance associated with each incoming <xref:System.Speech.Synthesis.TtsEngine.TextFragment> object.","pos":[0,430],"nodes":[{"content":"An array of <ph id=\"ph1\">&lt;xref:System.Speech.Synthesis.TtsEngine.TextFragment&gt;</ph> instance produced from Speech Synthesis Markup Language (SSML) input.","pos":[0,135],"source":"An array of <xref:System.Speech.Synthesis.TtsEngine.TextFragment> instance produced from Speech Synthesis Markup Language (SSML) input."},{"content":"In addition to text to be rendered as speech, the parsing of the SSML stores information about the requested attributes of the speech in a <ph id=\"ph1\">&lt;xref:System.Speech.Synthesis.TtsEngine.FragmentState&gt;</ph> instance associated with each incoming <ph id=\"ph2\">&lt;xref:System.Speech.Synthesis.TtsEngine.TextFragment&gt;</ph> object.","pos":[136,430],"source":" In addition to text to be rendered as speech, the parsing of the SSML stores information about the requested attributes of the speech in a <xref:System.Speech.Synthesis.TtsEngine.FragmentState> instance associated with each incoming <xref:System.Speech.Synthesis.TtsEngine.TextFragment> object."}]}]},{"pos":[1827,2088],"content":"A speech synthesizer application can optionally make requests for a specified output format by implementing <xref:System.Speech.Synthesis.TtsEngine.TtsEngineSsml.GetOutputFormat%2A> to be called by the platform when it tries to provide the correct audio output.","nodes":[{"content":"A speech synthesizer application can optionally make requests for a specified output format by implementing <ph id=\"ph1\">&lt;xref:System.Speech.Synthesis.TtsEngine.TtsEngineSsml.GetOutputFormat%2A&gt;</ph> to be called by the platform when it tries to provide the correct audio output.","pos":[0,261],"source":"A speech synthesizer application can optionally make requests for a specified output format by implementing <xref:System.Speech.Synthesis.TtsEngine.TtsEngineSsml.GetOutputFormat%2A> to be called by the platform when it tries to provide the correct audio output."}]},{"pos":[2095,2373],"content":"An implementer can also provide support for managing external definitions of pronunciations, or lexicons, by their implementation of <xref:System.Speech.Synthesis.TtsEngine.TtsEngineSsml.AddLexicon%2A> and <xref:System.Speech.Synthesis.TtsEngine.TtsEngineSsml.RemoveLexicon%2A>.","nodes":[{"content":"An implementer can also provide support for managing external definitions of pronunciations, or lexicons, by their implementation of <ph id=\"ph1\">&lt;xref:System.Speech.Synthesis.TtsEngine.TtsEngineSsml.AddLexicon%2A&gt;</ph> and <ph id=\"ph2\">&lt;xref:System.Speech.Synthesis.TtsEngine.TtsEngineSsml.RemoveLexicon%2A&gt;</ph>.","pos":[0,278],"source":"An implementer can also provide support for managing external definitions of pronunciations, or lexicons, by their implementation of <xref:System.Speech.Synthesis.TtsEngine.TtsEngineSsml.AddLexicon%2A> and <xref:System.Speech.Synthesis.TtsEngine.TtsEngineSsml.RemoveLexicon%2A>."}]}],"pos":[1156,3548],"yaml":true,"extradata":"MT"},{"content":"Constructs a new instance of <xref href=\"System.Speech.Synthesis.TtsEngine.TtsEngineSsml\"></xref> based on an appropriate Voice Token registry key.","nodes":[{"pos":[0,147],"content":"Constructs a new instance of <ph id=\"ph1\">&lt;xref href=\"System.Speech.Synthesis.TtsEngine.TtsEngineSsml\"&gt;&lt;/xref&gt;</ph> based on an appropriate Voice Token registry key.","source":"Constructs a new instance of <xref href=\"System.Speech.Synthesis.TtsEngine.TtsEngineSsml\"></xref> based on an appropriate Voice Token registry key."}],"pos":[4985,5133],"yaml":true},{"content":"Calls to this constructor are typically generated by <xref:System.Speech.Synthesis> based applications selecting a synthesizer voice to be used by an instance of <xref:System.Speech.Synthesis.SpeechSynthesizer>.  \n  \n A <xref:System.Speech.Synthesis.TtsEngine.TtsEngineSsml> must be register under HKEY_LOCAL_MACHINE\\SOFTWARE\\Microsoft\\Speech\\Voices\\Tokens.","nodes":[{"pos":[0,211],"content":"Calls to this constructor are typically generated by <xref:System.Speech.Synthesis> based applications selecting a synthesizer voice to be used by an instance of <xref:System.Speech.Synthesis.SpeechSynthesizer>.","nodes":[{"content":"Calls to this constructor are typically generated by <ph id=\"ph1\">&lt;xref:System.Speech.Synthesis&gt;</ph> based applications selecting a synthesizer voice to be used by an instance of <ph id=\"ph2\">&lt;xref:System.Speech.Synthesis.SpeechSynthesizer&gt;</ph>.","pos":[0,211],"source":"Calls to this constructor are typically generated by <xref:System.Speech.Synthesis> based applications selecting a synthesizer voice to be used by an instance of <xref:System.Speech.Synthesis.SpeechSynthesizer>."}]},{"pos":[218,357],"content":"A <xref:System.Speech.Synthesis.TtsEngine.TtsEngineSsml> must be register under HKEY_LOCAL_MACHINE\\SOFTWARE\\Microsoft\\Speech\\Voices\\Tokens.","nodes":[{"content":"A <ph id=\"ph1\">&lt;xref:System.Speech.Synthesis.TtsEngine.TtsEngineSsml&gt;</ph> must be register under HKEY_LOCAL_MACHINE\\SOFTWARE\\Microsoft\\Speech\\Voices\\Tokens.","pos":[0,139],"source":"A <xref:System.Speech.Synthesis.TtsEngine.TtsEngineSsml> must be register under HKEY_LOCAL_MACHINE\\SOFTWARE\\Microsoft\\Speech\\Voices\\Tokens."}]}],"pos":[5144,5511],"yaml":true,"extradata":"MT"},{"content":"Full name of the registry key for the Voice Token associated with the <xref href=\"System.Speech.Synthesis.TtsEngine.TtsEngineSsml\"></xref> implementation. engine.","nodes":[{"pos":[0,162],"content":"Full name of the registry key for the Voice Token associated with the <xref href=\"System.Speech.Synthesis.TtsEngine.TtsEngineSsml\"></xref> implementation. engine.","nodes":[{"content":"Full name of the registry key for the Voice Token associated with the <ph id=\"ph1\">&lt;xref href=\"System.Speech.Synthesis.TtsEngine.TtsEngineSsml\"&gt;&lt;/xref&gt;</ph> implementation.","pos":[0,154],"source":"Full name of the registry key for the Voice Token associated with the <xref href=\"System.Speech.Synthesis.TtsEngine.TtsEngineSsml\"></xref> implementation."},{"content":"engine.","pos":[155,162]}]}],"pos":[5663,5826],"yaml":true},{"content":"Adds a lexicon to the `Synthesizer``Voice` implemented by the current <xref href=\"System.Speech.Synthesis.TtsEngine.TtsEngineSsml\"></xref> instance.","nodes":[{"pos":[0,148],"content":"Adds a lexicon to the <ph id=\"ph1\">`Synthesizer``Voice`</ph> implemented by the current <ph id=\"ph2\">&lt;xref href=\"System.Speech.Synthesis.TtsEngine.TtsEngineSsml\"&gt;&lt;/xref&gt;</ph> instance.","source":"Adds a lexicon to the `Synthesizer``Voice` implemented by the current <xref href=\"System.Speech.Synthesis.TtsEngine.TtsEngineSsml\"></xref> instance."}],"pos":[7186,7335],"yaml":true},{"content":"A pronunciation lexicon is a collection of words or phrases together with their pronunciations specified using an appropriate pronunciation alphabet.  \n  \n This method is typically called by the platform infrastructure in response to a <xref:System.Speech.Synthesis> based applications calling <xref:System.Speech.Synthesis.TtsEngine.TtsEngineSsml.AddLexicon%2A> and using the synthesizer voice implemented by the current <xref:System.Speech.Synthesis.TtsEngine.TtsEngineSsml> instance.  \n  \n The value of `mediaType` is typically a MIME specification, as the SSML specification uses MIME for media specifications.","nodes":[{"pos":[0,149],"content":"A pronunciation lexicon is a collection of words or phrases together with their pronunciations specified using an appropriate pronunciation alphabet.","nodes":[{"content":"A pronunciation lexicon is a collection of words or phrases together with their pronunciations specified using an appropriate pronunciation alphabet.","pos":[0,149]}]},{"pos":[156,486],"content":"This method is typically called by the platform infrastructure in response to a <xref:System.Speech.Synthesis> based applications calling <xref:System.Speech.Synthesis.TtsEngine.TtsEngineSsml.AddLexicon%2A> and using the synthesizer voice implemented by the current <xref:System.Speech.Synthesis.TtsEngine.TtsEngineSsml> instance.","nodes":[{"content":"This method is typically called by the platform infrastructure in response to a <ph id=\"ph1\">&lt;xref:System.Speech.Synthesis&gt;</ph> based applications calling <ph id=\"ph2\">&lt;xref:System.Speech.Synthesis.TtsEngine.TtsEngineSsml.AddLexicon%2A&gt;</ph> and using the synthesizer voice implemented by the current <ph id=\"ph3\">&lt;xref:System.Speech.Synthesis.TtsEngine.TtsEngineSsml&gt;</ph> instance.","pos":[0,330],"source":"This method is typically called by the platform infrastructure in response to a <xref:System.Speech.Synthesis> based applications calling <xref:System.Speech.Synthesis.TtsEngine.TtsEngineSsml.AddLexicon%2A> and using the synthesizer voice implemented by the current <xref:System.Speech.Synthesis.TtsEngine.TtsEngineSsml> instance."}]},{"pos":[493,614],"content":"The value of <ph id=\"ph1\">`mediaType`</ph> is typically a MIME specification, as the SSML specification uses MIME for media specifications.","source":"The value of `mediaType` is typically a MIME specification, as the SSML specification uses MIME for media specifications."}],"pos":[7346,7967],"yaml":true,"extradata":"MT"},{"content":"A valid instance of `System.Uri` indicating the location of the lexicon information.","nodes":[{"pos":[0,84],"content":"A valid instance of <ph id=\"ph1\">`System.Uri`</ph> indicating the location of the lexicon information.","source":"A valid instance of `System.Uri` indicating the location of the lexicon information."}],"pos":[9050,9135],"yaml":true},{"content":"A string containing the media type of the lexicon. Media types are case insensitive.","nodes":[{"pos":[0,84],"content":"A string containing the media type of the lexicon. Media types are case insensitive.","nodes":[{"content":"A string containing the media type of the lexicon. Media types are case insensitive.","pos":[0,84],"nodes":[{"content":"A string containing the media type of the lexicon.","pos":[0,50]},{"content":"Media types are case insensitive.","pos":[51,84]}]}]}],"pos":[9200,9285],"yaml":true},{"content":"A reference to an <xref href=\"System.Speech.Synthesis.TtsEngine.ITtsEngineSite\"></xref> interface used to interact with the platform infrastructure.","nodes":[{"pos":[0,148],"content":"A reference to an <ph id=\"ph1\">&lt;xref href=\"System.Speech.Synthesis.TtsEngine.ITtsEngineSite\"&gt;&lt;/xref&gt;</ph> interface used to interact with the platform infrastructure.","source":"A reference to an <xref href=\"System.Speech.Synthesis.TtsEngine.ITtsEngineSite\"></xref> interface used to interact with the platform infrastructure."}],"pos":[9380,9529],"yaml":true},{"content":"Returns the best matching audio output supported by a given synthesize engine response to a request to the synthesizer engine for the support of a particular output format.","nodes":[{"pos":[0,172],"content":"Returns the best matching audio output supported by a given synthesize engine response to a request to the synthesizer engine for the support of a particular output format.","nodes":[{"content":"Returns the best matching audio output supported by a given synthesize engine response to a request to the synthesizer engine for the support of a particular output format.","pos":[0,172]}]}],"pos":[10894,11067],"yaml":true},{"content":"The structure used as `targetWaveFormat` and returned by the method should compatible with the `WAVEFORMATEX` available under SAPI, and the returned value should be allocated using `CoTaskMemAlloc`.  \n  \n The `struct` must provide functionality equivalent to:  \n  \n```  \ninternal struct WaveFormat  \n{  \n    public Int16 FormatTag;  \n    public Int16 Channels;  \n    public int SamplesPerSec;  \n    public int AvgBytesPerSec;  \n    public Int16 BlockAlign;  \n    public Int16 BitsPerSample;  \n    public Int16 Size;  \n}  \n```","nodes":[{"pos":[0,198],"content":"The structure used as <ph id=\"ph1\">`targetWaveFormat`</ph> and returned by the method should compatible with the <ph id=\"ph2\">`WAVEFORMATEX`</ph> available under SAPI, and the returned value should be allocated using <ph id=\"ph3\">`CoTaskMemAlloc`</ph>.","source":"The structure used as `targetWaveFormat` and returned by the method should compatible with the `WAVEFORMATEX` available under SAPI, and the returned value should be allocated using `CoTaskMemAlloc`."},{"pos":[205,259],"content":"The <ph id=\"ph1\">`struct`</ph> must provide functionality equivalent to:","source":"The `struct` must provide functionality equivalent to:"}],"pos":[11078,11621],"yaml":true,"extradata":"MT"},{"content":"Valid member of the <xref href=\"System.Speech.Synthesis.TtsEngine.SpeakOutputFormat\"></xref> enumeration indicating the type of requested audio output format.","nodes":[{"pos":[0,158],"content":"Valid member of the <ph id=\"ph1\">&lt;xref href=\"System.Speech.Synthesis.TtsEngine.SpeakOutputFormat\"&gt;&lt;/xref&gt;</ph> enumeration indicating the type of requested audio output format.","source":"Valid member of the <xref href=\"System.Speech.Synthesis.TtsEngine.SpeakOutputFormat\"></xref> enumeration indicating the type of requested audio output format."}],"pos":[13232,13391],"yaml":true},{"content":"A pointer to a `struct` containing detail setting for the audio format type requested by the <code>speakOutputFormat</code> argument.","nodes":[{"pos":[0,133],"content":"A pointer to a <ph id=\"ph1\">`struct`</ph> containing detail setting for the audio format type requested by the <bpt id=\"p1\">&lt;code&gt;</bpt><ph id=\"ph2\">speakOutputFormat</ph><ept id=\"p1\">&lt;/code&gt;</ept> argument.","source":"A pointer to a `struct` containing detail setting for the audio format type requested by the <code>speakOutputFormat</code> argument."}],"pos":[13463,13597],"yaml":true},{"content":"Returns a valid `IntPtr` instance referring to a `struct` containing detailed information about the output format.","nodes":[{"pos":[0,114],"content":"Returns a valid <ph id=\"ph1\">`IntPtr`</ph> instance referring to a <ph id=\"ph2\">`struct`</ph> containing detailed information about the output format.","source":"Returns a valid `IntPtr` instance referring to a `struct` containing detailed information about the output format."}],"pos":[13654,13769],"yaml":true},{"content":"Removes a lexicon currently loaded by the `Synthesizer``Voice` implemented by the current <xref href=\"System.Speech.Synthesis.TtsEngine.TtsEngineSsml\"></xref> instance.","nodes":[{"pos":[0,168],"content":"Removes a lexicon currently loaded by the <ph id=\"ph1\">`Synthesizer``Voice`</ph> implemented by the current <ph id=\"ph2\">&lt;xref href=\"System.Speech.Synthesis.TtsEngine.TtsEngineSsml\"&gt;&lt;/xref&gt;</ph> instance.","source":"Removes a lexicon currently loaded by the `Synthesizer``Voice` implemented by the current <xref href=\"System.Speech.Synthesis.TtsEngine.TtsEngineSsml\"></xref> instance."}],"pos":[15091,15260],"yaml":true},{"content":"A pronunciation lexicon is a collection of words or phrases together with their pronunciations specified using an appropriate pronunciation alphabet.  \n  \n This method is typically called in response to a <xref:System.Speech.Synthesis> based applications calling <xref:System.Speech.Synthesis.SpeechSynthesizer.RemoveLexicon%2A> and using the synthesizer voice implemented by the current <xref:System.Speech.Synthesis.TtsEngine.TtsEngineSsml> instance.","nodes":[{"pos":[0,149],"content":"A pronunciation lexicon is a collection of words or phrases together with their pronunciations specified using an appropriate pronunciation alphabet.","nodes":[{"content":"A pronunciation lexicon is a collection of words or phrases together with their pronunciations specified using an appropriate pronunciation alphabet.","pos":[0,149]}]},{"pos":[156,452],"content":"This method is typically called in response to a <xref:System.Speech.Synthesis> based applications calling <xref:System.Speech.Synthesis.SpeechSynthesizer.RemoveLexicon%2A> and using the synthesizer voice implemented by the current <xref:System.Speech.Synthesis.TtsEngine.TtsEngineSsml> instance.","nodes":[{"content":"This method is typically called in response to a <ph id=\"ph1\">&lt;xref:System.Speech.Synthesis&gt;</ph> based applications calling <ph id=\"ph2\">&lt;xref:System.Speech.Synthesis.SpeechSynthesizer.RemoveLexicon%2A&gt;</ph> and using the synthesizer voice implemented by the current <ph id=\"ph3\">&lt;xref:System.Speech.Synthesis.TtsEngine.TtsEngineSsml&gt;</ph> instance.","pos":[0,296],"source":"This method is typically called in response to a <xref:System.Speech.Synthesis> based applications calling <xref:System.Speech.Synthesis.SpeechSynthesizer.RemoveLexicon%2A> and using the synthesizer voice implemented by the current <xref:System.Speech.Synthesis.TtsEngine.TtsEngineSsml> instance."}]}],"pos":[15271,15728],"yaml":true,"extradata":"MT"},{"content":"A valid instance of `System.Uri` indicating the location of the lexicon information.","nodes":[{"pos":[0,84],"content":"A valid instance of <ph id=\"ph1\">`System.Uri`</ph> indicating the location of the lexicon information.","source":"A valid instance of `System.Uri` indicating the location of the lexicon information."}],"pos":[16715,16800],"yaml":true},{"content":"A reference to an <xref href=\"System.Speech.Synthesis.TtsEngine.ITtsEngineSite\"></xref> interface passed in by the platform infrastructure to allow access to the infrastructure resources.","nodes":[{"pos":[0,187],"content":"A reference to an <ph id=\"ph1\">&lt;xref href=\"System.Speech.Synthesis.TtsEngine.ITtsEngineSite\"&gt;&lt;/xref&gt;</ph> interface passed in by the platform infrastructure to allow access to the infrastructure resources.","source":"A reference to an <xref href=\"System.Speech.Synthesis.TtsEngine.ITtsEngineSite\"></xref> interface passed in by the platform infrastructure to allow access to the infrastructure resources."}],"pos":[16895,17083],"yaml":true},{"content":"Renders specified <xref href=\"System.Speech.Synthesis.TtsEngine.TextFragment\"></xref> array in the specified output format.","nodes":[{"pos":[0,123],"content":"Renders specified <ph id=\"ph1\">&lt;xref href=\"System.Speech.Synthesis.TtsEngine.TextFragment\"&gt;&lt;/xref&gt;</ph> array in the specified output format.","source":"Renders specified <xref href=\"System.Speech.Synthesis.TtsEngine.TextFragment\"></xref> array in the specified output format."}],"pos":[18568,18692],"yaml":true},{"content":"The structure used as `waveHeader` and returned by the method should compatible with the `WAVEFORMATEX` available under SAPI.  \n  \n The `struct` must provide functionality equivalent to:  \n  \n```  \ninternal struct WaveFormat  \n{  \n    public Int16 FormatTag;  \n    public Int16 Channels;  \n    public int SamplesPerSec;  \n    public int AvgBytesPerSec;  \n    public Int16 BlockAlign;  \n    public Int16 BitsPerSample;  \n    public Int16 Size;  \n}  \n```","nodes":[{"pos":[0,125],"content":"The structure used as <ph id=\"ph1\">`waveHeader`</ph> and returned by the method should compatible with the <ph id=\"ph2\">`WAVEFORMATEX`</ph> available under SAPI.","source":"The structure used as `waveHeader` and returned by the method should compatible with the `WAVEFORMATEX` available under SAPI."},{"pos":[132,186],"content":"The <ph id=\"ph1\">`struct`</ph> must provide functionality equivalent to:","source":"The `struct` must provide functionality equivalent to:"}],"pos":[18703,19173],"yaml":true,"extradata":"MT"},{"content":"An array of <xref href=\"System.Speech.Synthesis.TtsEngine.TextFragment\"></xref> instances containing the text to be rendered into speech.","nodes":[{"pos":[0,137],"content":"An array of <ph id=\"ph1\">&lt;xref href=\"System.Speech.Synthesis.TtsEngine.TextFragment\"&gt;&lt;/xref&gt;</ph> instances containing the text to be rendered into speech.","source":"An array of <xref href=\"System.Speech.Synthesis.TtsEngine.TextFragment\"></xref> instances containing the text to be rendered into speech."}],"pos":[23128,23266],"yaml":true},{"content":"An `IntPtr` pointing to a structure containing audio output format.","nodes":[{"pos":[0,67],"content":"An <ph id=\"ph1\">`IntPtr`</ph> pointing to a structure containing audio output format.","source":"An `IntPtr` pointing to a structure containing audio output format."}],"pos":[23332,23400],"yaml":true},{"content":"A reference to an <xref href=\"System.Speech.Synthesis.TtsEngine.ITtsEngineSite\"></xref> interface passed in by the platform infrastructure to allow access to the infrastructure resources.","nodes":[{"pos":[0,187],"content":"A reference to an <ph id=\"ph1\">&lt;xref href=\"System.Speech.Synthesis.TtsEngine.ITtsEngineSite\"&gt;&lt;/xref&gt;</ph> interface passed in by the platform infrastructure to allow access to the infrastructure resources.","source":"A reference to an <xref href=\"System.Speech.Synthesis.TtsEngine.ITtsEngineSite\"></xref> interface passed in by the platform infrastructure to allow access to the infrastructure resources."}],"pos":[23495,23683],"yaml":true}],"content":"### YamlMime:ManagedReference\nitems:\n- uid: System.Speech.Synthesis.TtsEngine.TtsEngineSsml\n  commentId: T:System.Speech.Synthesis.TtsEngine.TtsEngineSsml\n  id: TtsEngineSsml\n  children:\n  - System.Speech.Synthesis.TtsEngine.TtsEngineSsml.#ctor(System.String)\n  - System.Speech.Synthesis.TtsEngine.TtsEngineSsml.AddLexicon(System.Uri,System.String,System.Speech.Synthesis.TtsEngine.ITtsEngineSite)\n  - System.Speech.Synthesis.TtsEngine.TtsEngineSsml.GetOutputFormat(System.Speech.Synthesis.TtsEngine.SpeakOutputFormat,System.IntPtr)\n  - System.Speech.Synthesis.TtsEngine.TtsEngineSsml.RemoveLexicon(System.Uri,System.Speech.Synthesis.TtsEngine.ITtsEngineSite)\n  - System.Speech.Synthesis.TtsEngine.TtsEngineSsml.Speak(System.Speech.Synthesis.TtsEngine.TextFragment[],System.IntPtr,System.Speech.Synthesis.TtsEngine.ITtsEngineSite)\n  langs:\n  - csharp\n  name: TtsEngineSsml\n  nameWithType: TtsEngineSsml\n  fullName: System.Speech.Synthesis.TtsEngine.TtsEngineSsml\n  type: Class\n  assemblies:\n  - System.Speech\n  namespace: System.Speech.Synthesis.TtsEngine\n  summary: Abstract base class to be implemented by all text to speech synthesis engines.\n  remarks: \"To construct a custom text to speech engine, an application must always implement a class derived from the abstract base class <xref:System.Speech.Synthesis.TtsEngine.TtsEngineSsml>.  \\n  \\n A properly registered implementation of <xref:System.Speech.Synthesis.TtsEngine.TtsEngineSsml> can then be used as a synthesizer voice by <xref:System.Speech.Synthesis> name space based applications.  \\n  \\n Objects inheriting from <xref:System.Speech.Synthesis.TtsEngine.TtsEngineSsml> must override the following members: <xref:System.Speech.Synthesis.TtsEngine.TtsEngineSsml.%23ctor%2A>, <xref:System.Speech.Synthesis.TtsEngine.TtsEngineSsml.AddLexicon%2A>, <xref:System.Speech.Synthesis.TtsEngine.TtsEngineSsml.RemoveLexicon%2A>, <xref:System.Speech.Synthesis.TtsEngine.TtsEngineSsml.GetOutputFormat%2A> and <xref:System.Speech.Synthesis.TtsEngine.TtsEngineSsml.Speak%2A>.  \\n  \\n The most important member of the <xref:System.Speech.Synthesis.TtsEngine.TtsEngineSsml> class to be implemented is the <xref:System.Speech.Synthesis.TtsEngine.TtsEngineSsml.Speak%2A> method.  \\n  \\n The <xref:System.Speech.Synthesis.TtsEngine.TtsEngineSsml.Speak%2A> method is called by the infrastructures text parser receiving:  \\n  \\n1.  A reference to the <xref:System.Speech.Synthesis.TtsEngine.ITtsEngineSite> interface, which provides access to system services such as even queuing and writing audio output.  \\n  \\n2.  An array of <xref:System.Speech.Synthesis.TtsEngine.TextFragment> instance produced from Speech Synthesis Markup Language (SSML) input. In addition to text to be rendered as speech, the parsing of the SSML stores information about the requested attributes of the speech in a <xref:System.Speech.Synthesis.TtsEngine.FragmentState> instance associated with each incoming <xref:System.Speech.Synthesis.TtsEngine.TextFragment> object.  \\n  \\n A speech synthesizer application can optionally make requests for a specified output format by implementing <xref:System.Speech.Synthesis.TtsEngine.TtsEngineSsml.GetOutputFormat%2A> to be called by the platform when it tries to provide the correct audio output.  \\n  \\n An implementer can also provide support for managing external definitions of pronunciations, or lexicons, by their implementation of <xref:System.Speech.Synthesis.TtsEngine.TtsEngineSsml.AddLexicon%2A> and <xref:System.Speech.Synthesis.TtsEngine.TtsEngineSsml.RemoveLexicon%2A>.\"\n  syntax:\n    content: public abstract class TtsEngineSsml\n  inheritance:\n  - System.Object\n  implements: []\n  inheritedMembers:\n  - System.Object.Equals(System.Object)\n  - System.Object.Equals(System.Object,System.Object)\n  - System.Object.GetHashCode\n  - System.Object.GetType\n  - System.Object.MemberwiseClone\n  - System.Object.ReferenceEquals(System.Object,System.Object)\n  - System.Object.ToString\n  version:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Speech.Synthesis.TtsEngine/TtsEngineSsml.xml\n  ms.technology:\n  - dotnet-standard\n  ms.author: kbridge\n  manager: ghogen\n- uid: System.Speech.Synthesis.TtsEngine.TtsEngineSsml.#ctor(System.String)\n  commentId: M:System.Speech.Synthesis.TtsEngine.TtsEngineSsml.#ctor(System.String)\n  id: '#ctor(System.String)'\n  parent: System.Speech.Synthesis.TtsEngine.TtsEngineSsml\n  langs:\n  - csharp\n  name: TtsEngineSsml(String)\n  nameWithType: TtsEngineSsml.TtsEngineSsml(String)\n  fullName: TtsEngineSsml.TtsEngineSsml(String)\n  type: Constructor\n  assemblies:\n  - System.Speech\n  namespace: System.Speech.Synthesis.TtsEngine\n  summary: Constructs a new instance of <xref href=\"System.Speech.Synthesis.TtsEngine.TtsEngineSsml\"></xref> based on an appropriate Voice Token registry key.\n  remarks: \"Calls to this constructor are typically generated by <xref:System.Speech.Synthesis> based applications selecting a synthesizer voice to be used by an instance of <xref:System.Speech.Synthesis.SpeechSynthesizer>.  \\n  \\n A <xref:System.Speech.Synthesis.TtsEngine.TtsEngineSsml> must be register under HKEY_LOCAL_MACHINE\\\\SOFTWARE\\\\Microsoft\\\\Speech\\\\Voices\\\\Tokens.\"\n  syntax:\n    content: protected TtsEngineSsml (string registryKey);\n    parameters:\n    - id: registryKey\n      type: System.String\n      description: Full name of the registry key for the Voice Token associated with the <xref href=\"System.Speech.Synthesis.TtsEngine.TtsEngineSsml\"></xref> implementation. engine.\n  overload: System.Speech.Synthesis.TtsEngine.TtsEngineSsml.#ctor*\n  exceptions: []\n  version:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Speech.Synthesis.TtsEngine/TtsEngineSsml.xml\n  ms.technology:\n  - dotnet-standard\n  ms.author: kbridge\n  manager: ghogen\n- uid: System.Speech.Synthesis.TtsEngine.TtsEngineSsml.AddLexicon(System.Uri,System.String,System.Speech.Synthesis.TtsEngine.ITtsEngineSite)\n  commentId: M:System.Speech.Synthesis.TtsEngine.TtsEngineSsml.AddLexicon(System.Uri,System.String,System.Speech.Synthesis.TtsEngine.ITtsEngineSite)\n  id: AddLexicon(System.Uri,System.String,System.Speech.Synthesis.TtsEngine.ITtsEngineSite)\n  parent: System.Speech.Synthesis.TtsEngine.TtsEngineSsml\n  langs:\n  - csharp\n  name: AddLexicon(Uri, String, ITtsEngineSite)\n  nameWithType: TtsEngineSsml.AddLexicon(Uri, String, ITtsEngineSite)\n  fullName: TtsEngineSsml.AddLexicon(Uri, String, ITtsEngineSite)\n  type: Method\n  assemblies:\n  - System.Speech\n  namespace: System.Speech.Synthesis.TtsEngine\n  summary: Adds a lexicon to the `Synthesizer``Voice` implemented by the current <xref href=\"System.Speech.Synthesis.TtsEngine.TtsEngineSsml\"></xref> instance.\n  remarks: \"A pronunciation lexicon is a collection of words or phrases together with their pronunciations specified using an appropriate pronunciation alphabet.  \\n  \\n This method is typically called by the platform infrastructure in response to a <xref:System.Speech.Synthesis> based applications calling <xref:System.Speech.Synthesis.TtsEngine.TtsEngineSsml.AddLexicon%2A> and using the synthesizer voice implemented by the current <xref:System.Speech.Synthesis.TtsEngine.TtsEngineSsml> instance.  \\n  \\n The value of `mediaType` is typically a MIME specification, as the SSML specification uses MIME for media specifications.\"\n  example:\n  - \"The implementation of <xref:System.Speech.Synthesis.TtsEngine.TtsEngineSsml.AddLexicon%2A> uses the <xref:System.Speech.Synthesis.TtsEngine.ITtsEngineSite> interface passed in to load a lexicon from a resource. It then stores a `System.IO.Stream` to the lexicon in a `System.Collections.Generic.Dictionary` instance, indexed by the lexicon URI.  \\n  \\n```  \\npublic static Dictionary<Uri, Stream> _aLexicons = new Dictionary<Uri, Stream>();  \\n  \\n public void AddLexicon(Uri uri, string mediaType, ITtsEngineSite site) {  \\n    Stream stream = site.LoadResource(uri, mediaType);  \\n    _aLexicons.Add(uri, stream);  \\n}  \\n  \\n public void RemoveLexicon(Uri uri, ITtsEngineSite site) {  \\n     Stream stream;  \\n     if (_aLexicons.TryGetValue(uri, out stream)) {  \\n         stream.Close();  \\n         _aLexicons.Remove(uri);  \\n     }  \\n}  \\n  \\n```\"\n  syntax:\n    content: public abstract void AddLexicon (Uri uri, string mediaType, System.Speech.Synthesis.TtsEngine.ITtsEngineSite site);\n    parameters:\n    - id: uri\n      type: System.Uri\n      description: A valid instance of `System.Uri` indicating the location of the lexicon information.\n    - id: mediaType\n      type: System.String\n      description: A string containing the media type of the lexicon. Media types are case insensitive.\n    - id: site\n      type: System.Speech.Synthesis.TtsEngine.ITtsEngineSite\n      description: A reference to an <xref href=\"System.Speech.Synthesis.TtsEngine.ITtsEngineSite\"></xref> interface used to interact with the platform infrastructure.\n  overload: System.Speech.Synthesis.TtsEngine.TtsEngineSsml.AddLexicon*\n  exceptions: []\n  version:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Speech.Synthesis.TtsEngine/TtsEngineSsml.xml\n  ms.technology:\n  - dotnet-standard\n  ms.author: kbridge\n  manager: ghogen\n- uid: System.Speech.Synthesis.TtsEngine.TtsEngineSsml.GetOutputFormat(System.Speech.Synthesis.TtsEngine.SpeakOutputFormat,System.IntPtr)\n  commentId: M:System.Speech.Synthesis.TtsEngine.TtsEngineSsml.GetOutputFormat(System.Speech.Synthesis.TtsEngine.SpeakOutputFormat,System.IntPtr)\n  id: GetOutputFormat(System.Speech.Synthesis.TtsEngine.SpeakOutputFormat,System.IntPtr)\n  parent: System.Speech.Synthesis.TtsEngine.TtsEngineSsml\n  langs:\n  - csharp\n  name: GetOutputFormat(SpeakOutputFormat, IntPtr)\n  nameWithType: TtsEngineSsml.GetOutputFormat(SpeakOutputFormat, IntPtr)\n  fullName: TtsEngineSsml.GetOutputFormat(SpeakOutputFormat, IntPtr)\n  type: Method\n  assemblies:\n  - System.Speech\n  namespace: System.Speech.Synthesis.TtsEngine\n  summary: Returns the best matching audio output supported by a given synthesize engine response to a request to the synthesizer engine for the support of a particular output format.\n  remarks: \"The structure used as `targetWaveFormat` and returned by the method should compatible with the `WAVEFORMATEX` available under SAPI, and the returned value should be allocated using `CoTaskMemAlloc`.  \\n  \\n The `struct` must provide functionality equivalent to:  \\n  \\n```  \\ninternal struct WaveFormat  \\n{  \\n    public Int16 FormatTag;  \\n    public Int16 Channels;  \\n    public int SamplesPerSec;  \\n    public int AvgBytesPerSec;  \\n    public Int16 BlockAlign;  \\n    public Int16 BitsPerSample;  \\n    public Int16 Size;  \\n}  \\n```\"\n  example:\n  - \"The sample implementation below validates selected inputs, using them if they are within tolerances, otherwise using default values.  \\n  \\n```  \\npublic IntPtr GetOutputFormat(SpeakOutputFormat format, IntPtr targetWaveFormat) {  \\n    WaveFormat waveFormat = new WaveFormat();  \\n    WaveFormat rq=new WaveFormat();  \\n    Marshal.PtrToStructure(targetWaveFormat,rq);  \\n  \\n    waveFormat.AvgBytesPerSec = AvgBytesPerSec Min < rq.AvgBytesPerSec && rq.AvgBytesPerSec < AvgBytesPerSecMax? rq.AvgBytesPerSec : 3200;  \\n    waveFormat.BitsPerSample = BitsPerSampleMin < rq.AvgBytesPerSec && rq.BitsPerSample < BitsPerSampleMax ? rq.AvgBytesPerSec : 3200; 16;  \\n    waveFormat.BlockAlign = 2;  \\n    waveFormat.Channels = 1;  \\n    waveFormat.FormatTag = 1;  \\n    waveFormat.SamplesPerSec = 16000;  \\n    waveFormat.Size = 0;  \\n  \\n    IntPtr wfx = Marshal.AllocCoTaskMem(Marshal.SizeOf(waveFormat));  \\n    Marshal.StructureToPtr(waveFormat, wfx, false);  \\n  \\n    //Console.WriteLine (\\\"GetOutputFormat called\\\");  \\n    return wfx;  \\n}  \\ninternal struct WaveFormat {  \\n    public Int16 FormatTag;  \\n    public Int16 Channels;  \\n    public int SamplesPerSec;  \\n    public int AvgBytesPerSec;  \\n    public Int16 BlockAlign;  \\n    public Int16 BitsPerSample;  \\n    public Int16 Size;  \\n}  \\n```\"\n  syntax:\n    content: public abstract IntPtr GetOutputFormat (System.Speech.Synthesis.TtsEngine.SpeakOutputFormat speakOutputFormat, IntPtr targetWaveFormat);\n    parameters:\n    - id: speakOutputFormat\n      type: System.Speech.Synthesis.TtsEngine.SpeakOutputFormat\n      description: Valid member of the <xref href=\"System.Speech.Synthesis.TtsEngine.SpeakOutputFormat\"></xref> enumeration indicating the type of requested audio output format.\n    - id: targetWaveFormat\n      type: System.IntPtr\n      description: A pointer to a `struct` containing detail setting for the audio format type requested by the <code>speakOutputFormat</code> argument.\n    return:\n      type: System.IntPtr\n      description: Returns a valid `IntPtr` instance referring to a `struct` containing detailed information about the output format.\n  overload: System.Speech.Synthesis.TtsEngine.TtsEngineSsml.GetOutputFormat*\n  exceptions: []\n  version:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Speech.Synthesis.TtsEngine/TtsEngineSsml.xml\n  ms.technology:\n  - dotnet-standard\n  ms.author: kbridge\n  manager: ghogen\n- uid: System.Speech.Synthesis.TtsEngine.TtsEngineSsml.RemoveLexicon(System.Uri,System.Speech.Synthesis.TtsEngine.ITtsEngineSite)\n  commentId: M:System.Speech.Synthesis.TtsEngine.TtsEngineSsml.RemoveLexicon(System.Uri,System.Speech.Synthesis.TtsEngine.ITtsEngineSite)\n  id: RemoveLexicon(System.Uri,System.Speech.Synthesis.TtsEngine.ITtsEngineSite)\n  parent: System.Speech.Synthesis.TtsEngine.TtsEngineSsml\n  langs:\n  - csharp\n  name: RemoveLexicon(Uri, ITtsEngineSite)\n  nameWithType: TtsEngineSsml.RemoveLexicon(Uri, ITtsEngineSite)\n  fullName: TtsEngineSsml.RemoveLexicon(Uri, ITtsEngineSite)\n  type: Method\n  assemblies:\n  - System.Speech\n  namespace: System.Speech.Synthesis.TtsEngine\n  summary: Removes a lexicon currently loaded by the `Synthesizer``Voice` implemented by the current <xref href=\"System.Speech.Synthesis.TtsEngine.TtsEngineSsml\"></xref> instance.\n  remarks: \"A pronunciation lexicon is a collection of words or phrases together with their pronunciations specified using an appropriate pronunciation alphabet.  \\n  \\n This method is typically called in response to a <xref:System.Speech.Synthesis> based applications calling <xref:System.Speech.Synthesis.SpeechSynthesizer.RemoveLexicon%2A> and using the synthesizer voice implemented by the current <xref:System.Speech.Synthesis.TtsEngine.TtsEngineSsml> instance.\"\n  example:\n  - \"The implementation of <xref:System.Speech.Synthesis.TtsEngine.TtsEngineSsml.RemoveLexicon%2A> uses the lexicon URI to query an instance `System.Collections.Generic.Dictionary` for the `System.IO.Stream`, closes the stream and removes the uri referring to the lexicon.  \\n  \\n```  \\npublic static Dictionary<Uri, Stream> _aLexicons = new Dictionary<Uri, Stream>();  \\n  \\n public void AddLexicon(Uri uri, string mediaType, ITtsEngineSite site) {  \\n    Stream stream = site.LoadResource(uri, mediaType);  \\n    _aLexicons.Add(uri, stream);  \\n}  \\n  \\n public void RemoveLexicon(Uri uri, ITtsEngineSite site) {  \\n     Stream stream;  \\n     if (_aLexicons.TryGetValue(uri, out stream)) {  \\n         stream.Close();  \\n         _aLexicons.Remove(uri);  \\n     }  \\n}  \\n```\"\n  syntax:\n    content: public abstract void RemoveLexicon (Uri uri, System.Speech.Synthesis.TtsEngine.ITtsEngineSite site);\n    parameters:\n    - id: uri\n      type: System.Uri\n      description: A valid instance of `System.Uri` indicating the location of the lexicon information.\n    - id: site\n      type: System.Speech.Synthesis.TtsEngine.ITtsEngineSite\n      description: A reference to an <xref href=\"System.Speech.Synthesis.TtsEngine.ITtsEngineSite\"></xref> interface passed in by the platform infrastructure to allow access to the infrastructure resources.\n  overload: System.Speech.Synthesis.TtsEngine.TtsEngineSsml.RemoveLexicon*\n  exceptions: []\n  version:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Speech.Synthesis.TtsEngine/TtsEngineSsml.xml\n  ms.technology:\n  - dotnet-standard\n  ms.author: kbridge\n  manager: ghogen\n- uid: System.Speech.Synthesis.TtsEngine.TtsEngineSsml.Speak(System.Speech.Synthesis.TtsEngine.TextFragment[],System.IntPtr,System.Speech.Synthesis.TtsEngine.ITtsEngineSite)\n  commentId: M:System.Speech.Synthesis.TtsEngine.TtsEngineSsml.Speak(System.Speech.Synthesis.TtsEngine.TextFragment[],System.IntPtr,System.Speech.Synthesis.TtsEngine.ITtsEngineSite)\n  id: Speak(System.Speech.Synthesis.TtsEngine.TextFragment[],System.IntPtr,System.Speech.Synthesis.TtsEngine.ITtsEngineSite)\n  parent: System.Speech.Synthesis.TtsEngine.TtsEngineSsml\n  langs:\n  - csharp\n  name: Speak(TextFragment[], IntPtr, ITtsEngineSite)\n  nameWithType: TtsEngineSsml.Speak(TextFragment[], IntPtr, ITtsEngineSite)\n  fullName: TtsEngineSsml.Speak(TextFragment[], IntPtr, ITtsEngineSite)\n  type: Method\n  assemblies:\n  - System.Speech\n  namespace: System.Speech.Synthesis.TtsEngine\n  summary: Renders specified <xref href=\"System.Speech.Synthesis.TtsEngine.TextFragment\"></xref> array in the specified output format.\n  remarks: \"The structure used as `waveHeader` and returned by the method should compatible with the `WAVEFORMATEX` available under SAPI.  \\n  \\n The `struct` must provide functionality equivalent to:  \\n  \\n```  \\ninternal struct WaveFormat  \\n{  \\n    public Int16 FormatTag;  \\n    public Int16 Channels;  \\n    public int SamplesPerSec;  \\n    public int AvgBytesPerSec;  \\n    public Int16 BlockAlign;  \\n    public Int16 BitsPerSample;  \\n    public Int16 Size;  \\n}  \\n```\"\n  example:\n  - \"The example below is part of a custom speech synthesis implementation inheriting from <xref:System.Speech.Synthesis.TtsEngine.TtsEngineSsml>, and using the use of <xref:System.Speech.Synthesis.TtsEngine.TextFragment>, <xref:System.Speech.Synthesis.TtsEngine.SpeechEventInfo>, <xref:System.Speech.Synthesis.TtsEngine.FragmentState>, and <xref:System.Speech.Synthesis.TtsEngine.TtsEventId>  \\n  \\n The implementation of <xref:System.Speech.Synthesis.TtsEngine.TtsEngineSsml.Speak%2A>  \\n  \\n1.  Receives an array of <xref:System.Speech.Synthesis.TtsEngine.TextFragment> instances and creates a new array of <xref:System.Speech.Synthesis.TtsEngine.TextFragment> instances to be passed to the `Speak` method on an underlying synthesis engine.  \\n  \\n2.  If the <xref:System.Speech.Synthesis.TtsEngine.TtsEngineAction> enumeration value by found from the <xref:System.Speech.Synthesis.TtsEngine.FragmentState.Action%2A> property on the <xref:System.Speech.Synthesis.TtsEngine.FragmentState> returned by the <xref:System.Speech.Synthesis.TtsEngine.TextFragment.State%2A> property of each <xref:System.Speech.Synthesis.TtsEngine.TextFragment> instance is <xref:System.Speech.Synthesis.TtsEngine.TtsEngineAction.Speak>, the implementation  \\n  \\n    -   Translates Americanism to Britishisms in the text to be spoken.  \\n  \\n    -   If the <xref:System.Speech.Synthesis.TtsEngine.ITtsEngineSite.EventInterest%2A> property on the <xref:System.Speech.Synthesis.TtsEngine.ITtsEngineSite> interfaces provided to the implementation support the <xref:System.Speech.Synthesis.TtsEngine.TtsEventId.WordBoundary> event type, a <xref:System.Speech.Synthesis.TtsEngine.SpeechEventInfo> instance is used to create an event to drive a synthesizer progress meter is created.  \\n  \\n3.  A speech rendering engine is then called with the modified <xref:System.Speech.Synthesis.TtsEngine.TextFragment> array.  \\n  \\n```  \\nprivate const int WordBoundaryFlag = 1 << (int)TtsEventId.WordBoundary;  \\nprivate readonly char[] spaces = new char[] { ' ', '\\\\t', '\\\\r', '\\\\n' };  \\ninternal struct UsVsUk  \\n{  \\n  internal string UK;  \\n  internal string US;  \\n}  \\n  \\noverride public void Speak (TextFragment [] frags, IntPtr wfx, ITtsEngineSite site)  \\n{  \\n  TextFragment [] newFrags=new TextFragment[frags.Length];  \\n  \\n  for (int i=0;i<frags.Length;i++){  \\n    newFrags[i].State=frags[i].State;  \\n    //truncate  \\n    newFrags[i].TextToSpeak = frags[i].TextToSpeak.Substring(frags[i].TextOffset,  \\n                               frags[i].TextLength);  \\n    newFrags[i].TextLength = newFrags[i].TextToSpeak.Length;  \\n    newFrags[i].TextOffset = 0;  \\n    if (newFrags[i].State.Action == TtsEngineAction.Speak) {  \\n      //Us to UK conversion  \\n      foreach (UsVsUk term in TransList) {  \\n      newFrags[i].TextToSpeak.Replace(term.US, term.UK);  \\n      }  \\n      //Generate progress meter events if supported  \\n      if ((site.EventInterest & WordBoundaryFlag) != 0) {  \\n      string[] subs = newFrags[i].TextToSpeak.Split(spaces);  \\n  \\n      foreach (string s in subs) {  \\n        int offset = newFrags[i].TextOffset;  \\n        SpeechEventInfo spEvent = new SpeechEventInfo((Int16)TtsEventId.WordBoundary,   \\n                (Int16)EventParameterType.Undefined,   \\n                 s.Length, new IntPtr(offset));  \\n        offset += s.Length;  \\n        if (s.Trim().Length > 0) {  \\n          SpeechEventInfo[] events = new SpeechEventInfo[1];  \\n          events[0] = spEvent;  \\n          site.AddEvents(events, 1);  \\n        }  \\n      }  \\n      }  \\n    }  \\n  }  \\n    _baseSynthesize.Speak(newFrags, wfx, site);  \\n  \\n}  \\n```\"\n  syntax:\n    content: public abstract void Speak (System.Speech.Synthesis.TtsEngine.TextFragment[] fragment, IntPtr waveHeader, System.Speech.Synthesis.TtsEngine.ITtsEngineSite site);\n    parameters:\n    - id: fragment\n      type: System.Speech.Synthesis.TtsEngine.TextFragment[]\n      description: An array of <xref href=\"System.Speech.Synthesis.TtsEngine.TextFragment\"></xref> instances containing the text to be rendered into speech.\n    - id: waveHeader\n      type: System.IntPtr\n      description: An `IntPtr` pointing to a structure containing audio output format.\n    - id: site\n      type: System.Speech.Synthesis.TtsEngine.ITtsEngineSite\n      description: A reference to an <xref href=\"System.Speech.Synthesis.TtsEngine.ITtsEngineSite\"></xref> interface passed in by the platform infrastructure to allow access to the infrastructure resources.\n  overload: System.Speech.Synthesis.TtsEngine.TtsEngineSsml.Speak*\n  exceptions: []\n  version:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Speech.Synthesis.TtsEngine/TtsEngineSsml.xml\n  ms.technology:\n  - dotnet-standard\n  ms.author: kbridge\n  manager: ghogen\nreferences:\n- uid: System.Object\n  parent: System\n  isExternal: false\n  name: Object\n  nameWithType: Object\n  fullName: System.Object\n- uid: System.Speech.Synthesis.TtsEngine.TtsEngineSsml.#ctor(System.String)\n  parent: System.Speech.Synthesis.TtsEngine.TtsEngineSsml\n  isExternal: false\n  name: TtsEngineSsml(String)\n  nameWithType: TtsEngineSsml.TtsEngineSsml(String)\n  fullName: TtsEngineSsml.TtsEngineSsml(String)\n- uid: System.String\n  parent: System\n  isExternal: false\n  name: String\n  nameWithType: String\n  fullName: System.String\n- uid: System.Speech.Synthesis.TtsEngine.TtsEngineSsml.AddLexicon(System.Uri,System.String,System.Speech.Synthesis.TtsEngine.ITtsEngineSite)\n  parent: System.Speech.Synthesis.TtsEngine.TtsEngineSsml\n  isExternal: false\n  name: AddLexicon(Uri, String, ITtsEngineSite)\n  nameWithType: TtsEngineSsml.AddLexicon(Uri, String, ITtsEngineSite)\n  fullName: TtsEngineSsml.AddLexicon(Uri, String, ITtsEngineSite)\n- uid: System.Uri\n  parent: System\n  isExternal: false\n  name: Uri\n  nameWithType: Uri\n  fullName: System.Uri\n- uid: System.Speech.Synthesis.TtsEngine.ITtsEngineSite\n  parent: System.Speech.Synthesis.TtsEngine\n  isExternal: false\n  name: ITtsEngineSite\n  nameWithType: ITtsEngineSite\n  fullName: System.Speech.Synthesis.TtsEngine.ITtsEngineSite\n- uid: System.Speech.Synthesis.TtsEngine.TtsEngineSsml.GetOutputFormat(System.Speech.Synthesis.TtsEngine.SpeakOutputFormat,System.IntPtr)\n  parent: System.Speech.Synthesis.TtsEngine.TtsEngineSsml\n  isExternal: false\n  name: GetOutputFormat(SpeakOutputFormat, IntPtr)\n  nameWithType: TtsEngineSsml.GetOutputFormat(SpeakOutputFormat, IntPtr)\n  fullName: TtsEngineSsml.GetOutputFormat(SpeakOutputFormat, IntPtr)\n- uid: System.IntPtr\n  parent: System\n  isExternal: false\n  name: IntPtr\n  nameWithType: IntPtr\n  fullName: System.IntPtr\n- uid: System.Speech.Synthesis.TtsEngine.SpeakOutputFormat\n  parent: System.Speech.Synthesis.TtsEngine\n  isExternal: false\n  name: SpeakOutputFormat\n  nameWithType: SpeakOutputFormat\n  fullName: System.Speech.Synthesis.TtsEngine.SpeakOutputFormat\n- uid: System.Speech.Synthesis.TtsEngine.TtsEngineSsml.RemoveLexicon(System.Uri,System.Speech.Synthesis.TtsEngine.ITtsEngineSite)\n  parent: System.Speech.Synthesis.TtsEngine.TtsEngineSsml\n  isExternal: false\n  name: RemoveLexicon(Uri, ITtsEngineSite)\n  nameWithType: TtsEngineSsml.RemoveLexicon(Uri, ITtsEngineSite)\n  fullName: TtsEngineSsml.RemoveLexicon(Uri, ITtsEngineSite)\n- uid: System.Speech.Synthesis.TtsEngine.TtsEngineSsml.Speak(System.Speech.Synthesis.TtsEngine.TextFragment[],System.IntPtr,System.Speech.Synthesis.TtsEngine.ITtsEngineSite)\n  parent: System.Speech.Synthesis.TtsEngine.TtsEngineSsml\n  isExternal: false\n  name: Speak(TextFragment[], IntPtr, ITtsEngineSite)\n  nameWithType: TtsEngineSsml.Speak(TextFragment[], IntPtr, ITtsEngineSite)\n  fullName: TtsEngineSsml.Speak(TextFragment[], IntPtr, ITtsEngineSite)\n- uid: System.Speech.Synthesis.TtsEngine.TextFragment\n  name: TextFragment\n  nameWithType: TextFragment\n  fullName: System.Speech.Synthesis.TtsEngine.TextFragment\n- uid: System.Speech.Synthesis.TtsEngine.TextFragment[]\n  parent: System.Speech.Synthesis.TtsEngine\n  isExternal: false\n  name: TextFragment[]\n  nameWithType: TextFragment[]\n  fullName: System.Speech.Synthesis.TtsEngine.TextFragment[]\n  spec.csharp:\n  - uid: System.Speech.Synthesis.TtsEngine.TextFragment\n    name: TextFragment\n    nameWithType: TextFragment\n    fullName: System.Speech.Synthesis.TtsEngine.TextFragment\n  - name: '[]'\n    nameWithType: '[]'\n    fullName: '[]'\n- uid: System.Speech.Synthesis.TtsEngine.TtsEngineSsml.#ctor*\n  parent: System.Speech.Synthesis.TtsEngine.TtsEngineSsml\n  isExternal: false\n  name: TtsEngineSsml\n  nameWithType: TtsEngineSsml.TtsEngineSsml\n  fullName: TtsEngineSsml.TtsEngineSsml\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Speech.Synthesis.TtsEngine/TtsEngineSsml.xml\n- uid: System.Speech.Synthesis.TtsEngine.TtsEngineSsml.AddLexicon*\n  parent: System.Speech.Synthesis.TtsEngine.TtsEngineSsml\n  isExternal: false\n  name: AddLexicon\n  nameWithType: TtsEngineSsml.AddLexicon\n  fullName: TtsEngineSsml.AddLexicon\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Speech.Synthesis.TtsEngine/TtsEngineSsml.xml\n- uid: System.Speech.Synthesis.TtsEngine.TtsEngineSsml.GetOutputFormat*\n  parent: System.Speech.Synthesis.TtsEngine.TtsEngineSsml\n  isExternal: false\n  name: GetOutputFormat\n  nameWithType: TtsEngineSsml.GetOutputFormat\n  fullName: TtsEngineSsml.GetOutputFormat\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Speech.Synthesis.TtsEngine/TtsEngineSsml.xml\n- uid: System.Speech.Synthesis.TtsEngine.TtsEngineSsml.RemoveLexicon*\n  parent: System.Speech.Synthesis.TtsEngine.TtsEngineSsml\n  isExternal: false\n  name: RemoveLexicon\n  nameWithType: TtsEngineSsml.RemoveLexicon\n  fullName: TtsEngineSsml.RemoveLexicon\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Speech.Synthesis.TtsEngine/TtsEngineSsml.xml\n- uid: System.Speech.Synthesis.TtsEngine.TtsEngineSsml.Speak*\n  parent: System.Speech.Synthesis.TtsEngine.TtsEngineSsml\n  isExternal: false\n  name: Speak\n  nameWithType: TtsEngineSsml.Speak\n  fullName: TtsEngineSsml.Speak\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Speech.Synthesis.TtsEngine/TtsEngineSsml.xml\n- uid: System.Object.Equals(System.Object)\n  parent: System.Object\n  isExternal: false\n  name: Equals(Object)\n  nameWithType: Object.Equals(Object)\n  fullName: Object.Equals(Object)\n- uid: System.Object.Equals(System.Object,System.Object)\n  parent: System.Object\n  isExternal: false\n  name: Equals(Object, Object)\n  nameWithType: Object.Equals(Object, Object)\n  fullName: Object.Equals(Object, Object)\n- uid: System.Object.GetHashCode\n  parent: System.Object\n  isExternal: false\n  name: GetHashCode()\n  nameWithType: Object.GetHashCode()\n  fullName: Object.GetHashCode()\n- uid: System.Object.GetType\n  parent: System.Object\n  isExternal: false\n  name: GetType()\n  nameWithType: Object.GetType()\n  fullName: Object.GetType()\n- uid: System.Object.MemberwiseClone\n  parent: System.Object\n  isExternal: false\n  name: MemberwiseClone()\n  nameWithType: Object.MemberwiseClone()\n  fullName: Object.MemberwiseClone()\n- uid: System.Object.ReferenceEquals(System.Object,System.Object)\n  parent: System.Object\n  isExternal: false\n  name: ReferenceEquals(Object, Object)\n  nameWithType: Object.ReferenceEquals(Object, Object)\n  fullName: Object.ReferenceEquals(Object, Object)\n- uid: System.Object.ToString\n  parent: System.Object\n  isExternal: false\n  name: ToString()\n  nameWithType: Object.ToString()\n  fullName: Object.ToString()\n"}