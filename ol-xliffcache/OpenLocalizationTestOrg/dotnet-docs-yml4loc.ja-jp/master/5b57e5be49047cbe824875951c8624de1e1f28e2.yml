### YamlMime:ManagedReference
items:
- uid: System.Xml.Linq.XDocumentType
  commentId: T:System.Xml.Linq.XDocumentType
  id: XDocumentType
  children:
  - System.Xml.Linq.XDocumentType.#ctor(System.Xml.Linq.XDocumentType)
  - System.Xml.Linq.XDocumentType.#ctor(System.String,System.String,System.String,System.String)
  - System.Xml.Linq.XDocumentType.InternalSubset
  - System.Xml.Linq.XDocumentType.Name
  - System.Xml.Linq.XDocumentType.NodeType
  - System.Xml.Linq.XDocumentType.PublicId
  - System.Xml.Linq.XDocumentType.SystemId
  - System.Xml.Linq.XDocumentType.WriteTo(System.Xml.XmlWriter)
  - System.Xml.Linq.XDocumentType.WriteToAsync(System.Xml.XmlWriter,System.Threading.CancellationToken)
  langs:
  - csharp
  name: XDocumentType
  nameWithType: XDocumentType
  fullName: System.Xml.Linq.XDocumentType
  type: Class
  assemblies:
  - System.Xml.XDocument
  - System.Xml.Linq
  - netstandard
  namespace: System.Xml.Linq
  summary: Represents an XML Document Type Definition (DTD).
  remarks: "Data Type Definitions (DTD) in XML are a way to do the following:  \n  \n-   Validate XML trees to a limited extent.  \n  \n-   Expand entities, which is a form of text replacement.  \n  \n-   Supply default attributes.  \n  \n This class represents the XML concept of a DTD.  \n  \n DTD support in [!INCLUDE[sqltecxlinq](~/includes/sqltecxlinq-md.md)] is limited.  \n  \n [!INCLUDE[sqltecxlinq](~/includes/sqltecxlinq-md.md)] will expand internal entities by default, but it will not resolve external entity references unless an <xref:System.Xml.XmlReader> with an associated <xref:System.Xml.XmlResolver> is used to load the XML tree.  \n  \n [!INCLUDE[sqltecxlinq](~/includes/sqltecxlinq-md.md)] will not validate a document against a DTD, but you can use a validating <xref:System.Xml.XmlReader> to perform DTD validation if necessary.  \n  \n To validate an [!INCLUDE[sqltecxlinq](~/includes/sqltecxlinq-md.md)] tree against an XML schema, use the <xref:System.Xml.Schema.Extensions.Validate%2A> method.  \n  \n When a document contains entity references that are defined in a DTD, the references are expanded upon creation of the XML tree. However, when you serialize or save the XML tree, the content of the expanded entities is preserved; the entity references are not.  \n  \n Default attributes from the DTD will be materialized as regular attributes in the XML tree. After a default attribute from the DTD is materialized, there is no way to determine that the attribute was a default attribute from the DTD.  \n  \n You can populate an XML tree with an XML document that contains an internal DTD. The XML tree will then contain a <xref:System.Xml.Linq.XDocument.DocumentType%2A> node. When you serialize or save the tree, the internal DTD will also be saved as part of the document."
  syntax:
    content: 'public class XDocumentType : System.Xml.Linq.XNode'
  inheritance:
  - System.Object
  - System.Xml.Linq.XObject
  - System.Xml.Linq.XNode
  implements: []
  inheritedMembers:
  - System.Object.Equals(System.Object)
  - System.Object.Equals(System.Object,System.Object)
  - System.Object.GetHashCode
  - System.Object.GetType
  - System.Object.MemberwiseClone
  - System.Object.ReferenceEquals(System.Object,System.Object)
  - System.Xml.Linq.XNode.AddAfterSelf(System.Object)
  - System.Xml.Linq.XNode.AddAfterSelf(System.Object[])
  - System.Xml.Linq.XNode.AddBeforeSelf(System.Object)
  - System.Xml.Linq.XNode.AddBeforeSelf(System.Object[])
  - System.Xml.Linq.XNode.Ancestors
  - System.Xml.Linq.XNode.Ancestors(System.Xml.Linq.XName)
  - System.Xml.Linq.XNode.CompareDocumentOrder(System.Xml.Linq.XNode,System.Xml.Linq.XNode)
  - System.Xml.Linq.XNode.CreateReader
  - System.Xml.Linq.XNode.CreateReader(System.Xml.Linq.ReaderOptions)
  - System.Xml.Linq.XNode.DeepEquals(System.Xml.Linq.XNode,System.Xml.Linq.XNode)
  - System.Xml.Linq.XNode.DocumentOrderComparer
  - System.Xml.Linq.XNode.ElementsAfterSelf
  - System.Xml.Linq.XNode.ElementsAfterSelf(System.Xml.Linq.XName)
  - System.Xml.Linq.XNode.ElementsBeforeSelf
  - System.Xml.Linq.XNode.ElementsBeforeSelf(System.Xml.Linq.XName)
  - System.Xml.Linq.XNode.EqualityComparer
  - System.Xml.Linq.XNode.IsAfter(System.Xml.Linq.XNode)
  - System.Xml.Linq.XNode.IsBefore(System.Xml.Linq.XNode)
  - System.Xml.Linq.XNode.NextNode
  - System.Xml.Linq.XNode.NodesAfterSelf
  - System.Xml.Linq.XNode.NodesBeforeSelf
  - System.Xml.Linq.XNode.PreviousNode
  - System.Xml.Linq.XNode.ReadFrom(System.Xml.XmlReader)
  - System.Xml.Linq.XNode.ReadFromAsync(System.Xml.XmlReader,System.Threading.CancellationToken)
  - System.Xml.Linq.XNode.Remove
  - System.Xml.Linq.XNode.ReplaceWith(System.Object)
  - System.Xml.Linq.XNode.ReplaceWith(System.Object[])
  - System.Xml.Linq.XNode.ToString
  - System.Xml.Linq.XNode.ToString(System.Xml.Linq.SaveOptions)
  - System.Xml.Linq.XObject.AddAnnotation(System.Object)
  - System.Xml.Linq.XObject.Annotation(System.Type)
  - System.Xml.Linq.XObject.Annotation``1
  - System.Xml.Linq.XObject.Annotations(System.Type)
  - System.Xml.Linq.XObject.Annotations``1
  - System.Xml.Linq.XObject.BaseUri
  - System.Xml.Linq.XObject.Changed
  - System.Xml.Linq.XObject.Changing
  - System.Xml.Linq.XObject.Document
  - System.Xml.Linq.XObject.Parent
  - System.Xml.Linq.XObject.RemoveAnnotations(System.Type)
  - System.Xml.Linq.XObject.RemoveAnnotations``1
  - System.Xml.Linq.XObject.System#Xml#IXmlLineInfo#HasLineInfo
  - System.Xml.Linq.XObject.System#Xml#IXmlLineInfo#LineNumber
  - System.Xml.Linq.XObject.System#Xml#IXmlLineInfo#LinePosition
  extensionMethods:
  - System.Xml.XPath.Extensions.CreateNavigator(System.Xml.Linq.XNode)
  - System.Xml.XPath.Extensions.CreateNavigator(System.Xml.Linq.XNode,System.Xml.XmlNameTable)
  - System.Xml.XPath.Extensions.XPathEvaluate(System.Xml.Linq.XNode,System.String)
  - System.Xml.XPath.Extensions.XPathEvaluate(System.Xml.Linq.XNode,System.String,System.Xml.IXmlNamespaceResolver)
  - System.Xml.XPath.Extensions.XPathSelectElement(System.Xml.Linq.XNode,System.String)
  - System.Xml.XPath.Extensions.XPathSelectElement(System.Xml.Linq.XNode,System.String,System.Xml.IXmlNamespaceResolver)
  - System.Xml.XPath.Extensions.XPathSelectElements(System.Xml.Linq.XNode,System.String)
  - System.Xml.XPath.Extensions.XPathSelectElements(System.Xml.Linq.XNode,System.String,System.Xml.IXmlNamespaceResolver)
  - System.Xml.XPath.XDocumentExtensions.ToXPathNavigable(System.Xml.Linq.XNode)
  version:
  - netcore-1.0
  - netcore-1.1
  - netcore-2.0
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  - netstandard-1.0
  - netstandard-1.1
  - netstandard-1.2
  - netstandard-1.3
  - netstandard-1.4
  - netstandard-1.6
  - netstandard-2.0
  - xamarinandroid-7.1
  - xamarinios-10.8
  - xamarinmac-3.0
  monikers:
  - netcore-1.0
  - netcore-1.1
  - netcore-2.0
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  - netstandard-1.0
  - netstandard-1.1
  - netstandard-1.2
  - netstandard-1.3
  - netstandard-1.4
  - netstandard-1.6
  - netstandard-2.0
  - xamarinandroid-7.1
  - xamarinios-10.8
  - xamarinmac-3.0
  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Xml.Linq/XDocumentType.xml
  ms.technology:
  - dotnet-standard
  author: mairaw
  ms.author: mairaw
  manager: wpickett
- uid: System.Xml.Linq.XDocumentType.#ctor(System.Xml.Linq.XDocumentType)
  commentId: M:System.Xml.Linq.XDocumentType.#ctor(System.Xml.Linq.XDocumentType)
  id: '#ctor(System.Xml.Linq.XDocumentType)'
  parent: System.Xml.Linq.XDocumentType
  langs:
  - csharp
  name: XDocumentType(XDocumentType)
  nameWithType: XDocumentType.XDocumentType(XDocumentType)
  fullName: XDocumentType.XDocumentType(XDocumentType)
  type: Constructor
  assemblies:
  - System.Xml.XDocument
  - System.Xml.Linq
  - netstandard
  namespace: System.Xml.Linq
  summary: Initializes an instance of the <xref href="System.Xml.Linq.XDocumentType"></xref> class from another <xref href="System.Xml.Linq.XDocumentType"></xref> object.
  remarks: This constructor is primarily used internally when making a deep copy of an XML tree.
  syntax:
    content: public XDocumentType (System.Xml.Linq.XDocumentType other);
    parameters:
    - id: other
      type: System.Xml.Linq.XDocumentType
      description: An <xref href="System.Xml.Linq.XDocumentType"></xref> object to copy from.
  overload: System.Xml.Linq.XDocumentType.#ctor*
  exceptions: []
  version:
  - netcore-1.0
  - netcore-1.1
  - netcore-2.0
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  - netstandard-1.0
  - netstandard-1.1
  - netstandard-1.2
  - netstandard-1.3
  - netstandard-1.4
  - netstandard-1.6
  - netstandard-2.0
  - xamarinandroid-7.1
  - xamarinios-10.8
  - xamarinmac-3.0
  monikers:
  - netcore-1.0
  - netcore-1.1
  - netcore-2.0
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  - netstandard-1.0
  - netstandard-1.1
  - netstandard-1.2
  - netstandard-1.3
  - netstandard-1.4
  - netstandard-1.6
  - netstandard-2.0
  - xamarinandroid-7.1
  - xamarinios-10.8
  - xamarinmac-3.0
  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Xml.Linq/XDocumentType.xml
  ms.technology:
  - dotnet-standard
  author: mairaw
  ms.author: mairaw
  manager: wpickett
- uid: System.Xml.Linq.XDocumentType.#ctor(System.String,System.String,System.String,System.String)
  commentId: M:System.Xml.Linq.XDocumentType.#ctor(System.String,System.String,System.String,System.String)
  id: '#ctor(System.String,System.String,System.String,System.String)'
  parent: System.Xml.Linq.XDocumentType
  langs:
  - csharp
  name: XDocumentType(String, String, String, String)
  nameWithType: XDocumentType.XDocumentType(String, String, String, String)
  fullName: XDocumentType.XDocumentType(String, String, String, String)
  type: Constructor
  assemblies:
  - System.Xml.XDocument
  - System.Xml.Linq
  - netstandard
  namespace: System.Xml.Linq
  summary: Initializes an instance of the <xref href="System.Xml.Linq.XDocumentType"></xref> class.
  remarks: ''
  example:
  - "The following example creates a document with an internal DTD. When it creates the <xref:System.Xml.Linq.XDocumentType> object, it specifies the qualified name of the DTD (Pubs), and a string that contains the internal subset. Because the document does not use a public or private external DTD, the `publicId` and `systemId` are set to `null`.  \n  \n```csharp  \n  \n                string internalSubset = @\"<!ELEMENT Pubs (Book+)>  \n<!ELEMENT Book (Title, Author)>  \n<!ELEMENT Title (#PCDATA)>  \n<!ELEMENT Author (#PCDATA)>\";  \n  \nstring target = \"xml-stylesheet\";  \nstring data = \"href=\\\"mystyle.css\\\" title=\\\"Compact\\\" type=\\\"text/css\\\"\";  \n  \nXDocument doc = new XDocument(  \n    new XComment(\"This is a comment.\"),  \n    new XProcessingInstruction(target, data),  \n    new XDocumentType(\"Pubs\", null, null, internalSubset),  \n    new XElement(\"Pubs\",   \n        new XElement(\"Book\",  \n            new XElement(\"Title\", \"Artifacts of Roman Civilization\"),  \n            new XElement(\"Author\", \"Moreno, Jordao\")  \n        ),  \n        new XElement(\"Book\",  \n            new XElement(\"Title\", \"Midieval Tools and Implements\"),  \n            new XElement(\"Author\", \"Gazit, Inbar\")  \n        )  \n    ),  \n    new XComment(\"This is another comment.\")  \n);  \ndoc.Declaration = new XDeclaration(\"1.0\", \"utf-8\", \"true\");  \n  \nConsole.WriteLine(doc);  \n```  \n  \n```vb  \n  \n                Dim internalSubset = _  \n    \"<!ELEMENT Pubs (Book+)>\" & Environment.NewLine & _  \n    \"<!ELEMENT Book (Title, Author)>\" & Environment.NewLine & _  \n    \"<!ELEMENT Title (#PCDATA)>\" & Environment.NewLine & _  \n    \"<!ELEMENT Author (#PCDATA)>\"  \n  \nDim doc As XDocument = _  \n    <?xml version=\"1.0\" encoding=\"utf-8\" standalone=\"yes\"?>  \n    <!--This is a comment.-->  \n    <?xml-stylesheet href=\"mystyle.css\" title=\"Compact\" type=\"text/css\"?>  \n    <Pubs>  \n        <Book>  \n            <Title>Artifacts of Roman Civilization</Title>  \n            <Author>Moreno, Jordao</Author>  \n        </Book>  \n        <Book>  \n            <Title>Midieval Tools and Implements</Title>  \n            <Author>Gazit, Inbar</Author>  \n        </Book>  \n    </Pubs>  \n    <!--This is another comment.-->  \n  \ndoc.FirstNode.NextNode.AddAfterSelf(new XDocumentType(\"Pubs\", Nothing, Nothing, internalSubset))  \n  \nConsole.WriteLine(doc)  \n```  \n  \n This example produces the following output:  \n  \n```xml  \n  \n                <!--This is a comment.-->  \n<?xml-stylesheet href=\"mystyle.css\" title=\"Compact\" type=\"text/css\"?>  \n<!DOCTYPE Pubs [<!ELEMENT Pubs (Book+)>  \n<!ELEMENT Book (Title, Author)>  \n<!ELEMENT Title (#PCDATA)>  \n<!ELEMENT Author (#PCDATA)>]>  \n<Pubs>  \n  <Book>  \n    <Title>Artifacts of Roman Civilization</Title>  \n    <Author>Moreno, Jordao</Author>  \n  </Book>  \n  <Book>  \n    <Title>Midieval Tools and Implements</Title>  \n    <Author>Gazit, Inbar</Author>  \n  </Book>  \n</Pubs>  \n<!--This is another comment.-->  \n```"
  syntax:
    content: public XDocumentType (string name, string publicId, string systemId, string internalSubset);
    parameters:
    - id: name
      type: System.String
      description: A <xref href="System.String"></xref> that contains the qualified name of the DTD, which is the same as the qualified name of the root element of the XML document.
    - id: publicId
      type: System.String
      description: A <xref href="System.String"></xref> that contains the public identifier of an external public DTD.
    - id: systemId
      type: System.String
      description: A <xref href="System.String"></xref> that contains the system identifier of an external private DTD.
    - id: internalSubset
      type: System.String
      description: A <xref href="System.String"></xref> that contains the internal subset for an internal DTD.
  overload: System.Xml.Linq.XDocumentType.#ctor*
  exceptions: []
  version:
  - netcore-1.0
  - netcore-1.1
  - netcore-2.0
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  - netstandard-1.0
  - netstandard-1.1
  - netstandard-1.2
  - netstandard-1.3
  - netstandard-1.4
  - netstandard-1.6
  - netstandard-2.0
  - xamarinandroid-7.1
  - xamarinios-10.8
  - xamarinmac-3.0
  monikers:
  - netcore-1.0
  - netcore-1.1
  - netcore-2.0
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  - netstandard-1.0
  - netstandard-1.1
  - netstandard-1.2
  - netstandard-1.3
  - netstandard-1.4
  - netstandard-1.6
  - netstandard-2.0
  - xamarinandroid-7.1
  - xamarinios-10.8
  - xamarinmac-3.0
  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Xml.Linq/XDocumentType.xml
  ms.technology:
  - dotnet-standard
  author: mairaw
  ms.author: mairaw
  manager: wpickett
- uid: System.Xml.Linq.XDocumentType.InternalSubset
  commentId: P:System.Xml.Linq.XDocumentType.InternalSubset
  id: InternalSubset
  parent: System.Xml.Linq.XDocumentType
  langs:
  - csharp
  name: InternalSubset
  nameWithType: XDocumentType.InternalSubset
  fullName: XDocumentType.InternalSubset
  type: Property
  assemblies:
  - System.Xml.XDocument
  - System.Xml.Linq
  - netstandard
  namespace: System.Xml.Linq
  summary: Gets or sets the internal subset for this Document Type Definition (DTD).
  remarks: ''
  example:
  - "The following example creates a document with a DTD that contains an internal subset.  \n  \n```csharp  \n  \n                string internalSubset = @\"<!ELEMENT Pubs (Book+)>  \n<!ELEMENT Book (Title, Author)>  \n<!ELEMENT Title (#PCDATA)>  \n<!ELEMENT Author (#PCDATA)>\";  \n  \nstring target = \"xml-stylesheet\";  \nstring data = \"href=\\\"mystyle.css\\\" title=\\\"Compact\\\" type=\\\"text/css\\\"\";  \n  \nXDocument doc = new XDocument(  \n    new XComment(\"This is a comment.\"),  \n    new XProcessingInstruction(target, data),  \n    new XDocumentType(\"Pubs\", null, null, internalSubset),  \n    new XElement(\"Pubs\",   \n        new XElement(\"Book\",  \n            new XElement(\"Title\", \"Artifacts of Roman Civilization\"),  \n            new XElement(\"Author\", \"Moreno, Jordao\")  \n        ),  \n        new XElement(\"Book\",  \n            new XElement(\"Title\", \"Midieval Tools and Implements\"),  \n            new XElement(\"Author\", \"Gazit, Inbar\")  \n        )  \n    ),  \n    new XComment(\"This is another comment.\")  \n);  \ndoc.Declaration = new XDeclaration(\"1.0\", \"utf-8\", \"true\");  \n  \nConsole.WriteLine(doc.DocumentType.InternalSubset);  \n```  \n  \n```vb  \n  \n                Dim internalSubset = _  \n    \"<!ELEMENT Pubs (Book+)>\" & Environment.NewLine & _  \n    \"<!ELEMENT Book (Title, Author)>\" & Environment.NewLine & _  \n    \"<!ELEMENT Title (#PCDATA)>\" & Environment.NewLine & _  \n    \"<!ELEMENT Author (#PCDATA)>\"  \n  \nDim doc As XDocument = _  \n    <?xml version=\"1.0\" encoding=\"utf-8\" standalone=\"yes\"?>  \n    <!--This is a comment.-->  \n    <?xml-stylesheet href='mystyle.css' title='Compact' type='text/css'?>  \n    <Pubs>  \n        <Book>  \n            <Title>Artifacts of Roman Civilization</Title>  \n            <Author>Moreno, Jordao</Author>  \n        </Book>  \n        <Book>  \n            <Title>Midieval Tools and Implements</Title>  \n            <Author>Gazit, Inbar</Author>  \n        </Book>  \n    </Pubs>  \n    <!--This is another comment.-->  \n  \ndoc.FirstNode.AddAfterSelf(new XDocumentType(\"Pubs\", Nothing, Nothing, internalSubset))  \n  \nConsole.WriteLine(doc.DocumentType.InternalSubset)  \n```  \n  \n This example produces the following output:  \n  \n```  \n<!ELEMENT Pubs (Book+)>  \n<!ELEMENT Book (Title, Author)>  \n<!ELEMENT Title (#PCDATA)>  \n<!ELEMENT Author (#PCDATA)>  \n```"
  syntax:
    content: public string InternalSubset { get; set; }
    return:
      type: System.String
      description: A <xref href="System.String"></xref> that contains the internal subset for this Document Type Definition (DTD).
  overload: System.Xml.Linq.XDocumentType.InternalSubset*
  exceptions: []
  version:
  - netcore-1.0
  - netcore-1.1
  - netcore-2.0
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  - netstandard-1.0
  - netstandard-1.1
  - netstandard-1.2
  - netstandard-1.3
  - netstandard-1.4
  - netstandard-1.6
  - netstandard-2.0
  - xamarinandroid-7.1
  - xamarinios-10.8
  - xamarinmac-3.0
  monikers:
  - netcore-1.0
  - netcore-1.1
  - netcore-2.0
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  - netstandard-1.0
  - netstandard-1.1
  - netstandard-1.2
  - netstandard-1.3
  - netstandard-1.4
  - netstandard-1.6
  - netstandard-2.0
  - xamarinandroid-7.1
  - xamarinios-10.8
  - xamarinmac-3.0
  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Xml.Linq/XDocumentType.xml
  ms.technology:
  - dotnet-standard
  author: mairaw
  ms.author: mairaw
  manager: wpickett
- uid: System.Xml.Linq.XDocumentType.Name
  commentId: P:System.Xml.Linq.XDocumentType.Name
  id: Name
  parent: System.Xml.Linq.XDocumentType
  langs:
  - csharp
  name: Name
  nameWithType: XDocumentType.Name
  fullName: XDocumentType.Name
  type: Property
  assemblies:
  - System.Xml.XDocument
  - System.Xml.Linq
  - netstandard
  namespace: System.Xml.Linq
  summary: Gets or sets the name for this Document Type Definition (DTD).
  remarks: ''
  example:
  - "The following example creates an XML document that contains a DTD. After creating the document, it retrieves the qualified name of the DTD using this property.  \n  \n```csharp  \n  \n                string internalSubset = @\"<!ELEMENT Pubs (Book+)>  \n<!ELEMENT Book (Title, Author)>  \n<!ELEMENT Title (#PCDATA)>  \n<!ELEMENT Author (#PCDATA)>\";  \n  \nstring target = \"xml-stylesheet\";  \nstring data = \"href=\\\"mystyle.css\\\" title=\\\"Compact\\\" type=\\\"text/css\\\"\";  \n  \nXDocument doc = new XDocument(  \n    new XComment(\"This is a comment.\"),  \n    new XProcessingInstruction(target, data),  \n    new XDocumentType(\"Pubs\", null, null, internalSubset),  \n    new XElement(\"Pubs\",   \n        new XElement(\"Book\",  \n            new XElement(\"Title\", \"Artifacts of Roman Civilization\"),  \n            new XElement(\"Author\", \"Moreno, Jordao\")  \n        ),  \n        new XElement(\"Book\",  \n            new XElement(\"Title\", \"Midieval Tools and Implements\"),  \n            new XElement(\"Author\", \"Gazit, Inbar\")  \n        )  \n    ),  \n    new XComment(\"This is another comment.\")  \n);  \ndoc.Declaration = new XDeclaration(\"1.0\", \"utf-8\", \"true\");  \n  \nConsole.WriteLine(doc.DocumentType.Name);  \n```  \n  \n```vb  \n  \n                Dim internalSubset = _  \n    \"<!ELEMENT Pubs (Book+)>\" & Environment.NewLine & _  \n    \"<!ELEMENT Book (Title, Author)>\" & Environment.NewLine & _  \n    \"<!ELEMENT Title (#PCDATA)>\" & Environment.NewLine & _  \n    \"<!ELEMENT Author (#PCDATA)>\"  \n  \nDim doc As XDocument = _  \n    <?xml version=\"1.0\" encoding=\"utf-8\" standalone=\"yes\"?>  \n    <!--This is a comment.-->  \n    <?xml-stylesheet href='mystyle.css' title='Compact' type='text/css'?>  \n    <Pubs>  \n        <Book>  \n            <Title>Artifacts of Roman Civilization</Title>  \n            <Author>Moreno, Jordao</Author>  \n            </Book>  \n        <Book>  \n            <Title>Midieval Tools and Implements</Title>  \n            <Author>Gazit, Inbar</Author>  \n        </Book>  \n    </Pubs>  \n    <!--This is another comment.-->  \n  \ndoc.FirstNode.AddAfterSelf(new XDocumentType(\"Pubs\", Nothing, Nothing, internalSubset))  \n  \nConsole.WriteLine(doc.DocumentType.Name)  \n```  \n  \n This example produces the following output:  \n  \n```  \nPubs  \n```"
  syntax:
    content: public string Name { get; set; }
    return:
      type: System.String
      description: A <xref href="System.String"></xref> that contains the name for this Document Type Definition (DTD).
  overload: System.Xml.Linq.XDocumentType.Name*
  exceptions: []
  version:
  - netcore-1.0
  - netcore-1.1
  - netcore-2.0
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  - netstandard-1.0
  - netstandard-1.1
  - netstandard-1.2
  - netstandard-1.3
  - netstandard-1.4
  - netstandard-1.6
  - netstandard-2.0
  - xamarinandroid-7.1
  - xamarinios-10.8
  - xamarinmac-3.0
  monikers:
  - netcore-1.0
  - netcore-1.1
  - netcore-2.0
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  - netstandard-1.0
  - netstandard-1.1
  - netstandard-1.2
  - netstandard-1.3
  - netstandard-1.4
  - netstandard-1.6
  - netstandard-2.0
  - xamarinandroid-7.1
  - xamarinios-10.8
  - xamarinmac-3.0
  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Xml.Linq/XDocumentType.xml
  ms.technology:
  - dotnet-standard
  author: mairaw
  ms.author: mairaw
  manager: wpickett
- uid: System.Xml.Linq.XDocumentType.NodeType
  commentId: P:System.Xml.Linq.XDocumentType.NodeType
  id: NodeType
  parent: System.Xml.Linq.XDocumentType
  langs:
  - csharp
  name: NodeType
  nameWithType: XDocumentType.NodeType
  fullName: XDocumentType.NodeType
  type: Property
  assemblies:
  - System.Xml.XDocument
  - System.Xml.Linq
  - netstandard
  namespace: System.Xml.Linq
  summary: Gets the node type for this node.
  remarks: Because all classes that derive from <xref:System.Xml.Linq.XObject> contain a <xref:System.Xml.Linq.XObject.NodeType%2A> property, you can write code that operates on collections of concrete subclass of <xref:System.Xml.Linq.XObject>. Your code can then test for the node type of each node in the collection.
  example:
  - "The following example shows the use of this property to retrieve the node type for an <xref:System.Xml.Linq.XDocumentType> object.  \n  \n```csharp  \n  \n                string internalSubset = @\"<!ELEMENT Pubs (Book+)>  \n<!ELEMENT Book (Title, Author)>  \n<!ELEMENT Title (#PCDATA)>  \n<!ELEMENT Author (#PCDATA)>\";  \n  \nstring target = \"xml-stylesheet\";  \nstring data = \"href=\\\"mystyle.css\\\" title=\\\"Compact\\\" type=\\\"text/css\\\"\";  \n  \nXDocument doc = new XDocument(  \n    new XComment(\"This is a comment.\"),  \n    new XProcessingInstruction(target, data),  \n    new XDocumentType(\"Pubs\", null, null, internalSubset),  \n    new XElement(\"Pubs\",   \n        new XElement(\"Book\",  \n            new XElement(\"Title\", \"Artifacts of Roman Civilization\"),  \n            new XElement(\"Author\", \"Moreno, Jordao\")  \n        ),  \n        new XElement(\"Book\",  \n            new XElement(\"Title\", \"Midieval Tools and Implements\"),  \n            new XElement(\"Author\", \"Gazit, Inbar\")  \n        )  \n    ),  \n    new XComment(\"This is another comment.\")  \n);  \ndoc.Declaration = new XDeclaration(\"1.0\", \"utf-8\", \"true\");  \n  \nConsole.WriteLine(doc.DocumentType.NodeType);  \n```  \n  \n```vb  \n  \n                Dim internalSubset = _  \n    \"<!ELEMENT Pubs (Book+)>\" & Environment.NewLine & _  \n    \"<!ELEMENT Book (Title, Author)>\" & Environment.NewLine & _  \n    \"<!ELEMENT Title (#PCDATA)>\" & Environment.NewLine & _  \n    \"<!ELEMENT Author (#PCDATA)>\"  \n  \nDim doc As XDocument = _   \n    <?xml version=\"1.0\" encoding=\"utf-8\" standalone=\"yes\"?>  \n    <!--This is a comment.-->  \n    <?xml-stylesheet href='mystyle.css' title='Compact' type='text/css'?>  \n    <Pubs>  \n        <Book>  \n            <Title>Artifacts of Roman Civilization</Title>  \n            <Author>Moreno, Jordao</Author>  \n        </Book>  \n        <Book>  \n            <Title>Midieval Tools and Implements</Title>  \n            <Author>Gazit, Inbar</Author>  \n        </Book>  \n    </Pubs>  \n    <!--This is another comment.-->  \n  \ndoc.FirstNode.AddAfterSelf(new XDocumentType(\"Pubs\", Nothing, Nothing, internalSubset))  \n  \nConsole.WriteLine(doc.DocumentType.NodeType.ToString())  \n```  \n  \n This example produces the following output:  \n  \n```  \nDocumentType  \n```"
  syntax:
    content: public override System.Xml.XmlNodeType NodeType { get; }
    return:
      type: System.Xml.XmlNodeType
      description: The node type. For <xref href="System.Xml.Linq.XDocumentType"></xref> objects, this value is <xref href="System.Xml.XmlNodeType.DocumentType"></xref>.
  overload: System.Xml.Linq.XDocumentType.NodeType*
  exceptions: []
  version:
  - netcore-1.0
  - netcore-1.1
  - netcore-2.0
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  - netstandard-1.0
  - netstandard-1.1
  - netstandard-1.2
  - netstandard-1.3
  - netstandard-1.4
  - netstandard-1.6
  - netstandard-2.0
  - xamarinandroid-7.1
  - xamarinios-10.8
  - xamarinmac-3.0
  monikers:
  - netcore-1.0
  - netcore-1.1
  - netcore-2.0
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  - netstandard-1.0
  - netstandard-1.1
  - netstandard-1.2
  - netstandard-1.3
  - netstandard-1.4
  - netstandard-1.6
  - netstandard-2.0
  - xamarinandroid-7.1
  - xamarinios-10.8
  - xamarinmac-3.0
  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Xml.Linq/XDocumentType.xml
  ms.technology:
  - dotnet-standard
  author: mairaw
  ms.author: mairaw
  manager: wpickett
- uid: System.Xml.Linq.XDocumentType.PublicId
  commentId: P:System.Xml.Linq.XDocumentType.PublicId
  id: PublicId
  parent: System.Xml.Linq.XDocumentType
  langs:
  - csharp
  name: PublicId
  nameWithType: XDocumentType.PublicId
  fullName: XDocumentType.PublicId
  type: Property
  assemblies:
  - System.Xml.XDocument
  - System.Xml.Linq
  - netstandard
  namespace: System.Xml.Linq
  summary: Gets or sets the public identifier for this Document Type Definition (DTD).
  remarks: If an XML document uses an external public DTD, this property will contain the public identifier of the external DTD.
  syntax:
    content: public string PublicId { get; set; }
    return:
      type: System.String
      description: A <xref href="System.String"></xref> that contains the public identifier for this Document Type Definition (DTD).
  overload: System.Xml.Linq.XDocumentType.PublicId*
  exceptions: []
  version:
  - netcore-1.0
  - netcore-1.1
  - netcore-2.0
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  - netstandard-1.0
  - netstandard-1.1
  - netstandard-1.2
  - netstandard-1.3
  - netstandard-1.4
  - netstandard-1.6
  - netstandard-2.0
  - xamarinandroid-7.1
  - xamarinios-10.8
  - xamarinmac-3.0
  monikers:
  - netcore-1.0
  - netcore-1.1
  - netcore-2.0
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  - netstandard-1.0
  - netstandard-1.1
  - netstandard-1.2
  - netstandard-1.3
  - netstandard-1.4
  - netstandard-1.6
  - netstandard-2.0
  - xamarinandroid-7.1
  - xamarinios-10.8
  - xamarinmac-3.0
  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Xml.Linq/XDocumentType.xml
  ms.technology:
  - dotnet-standard
  author: mairaw
  ms.author: mairaw
  manager: wpickett
- uid: System.Xml.Linq.XDocumentType.SystemId
  commentId: P:System.Xml.Linq.XDocumentType.SystemId
  id: SystemId
  parent: System.Xml.Linq.XDocumentType
  langs:
  - csharp
  name: SystemId
  nameWithType: XDocumentType.SystemId
  fullName: XDocumentType.SystemId
  type: Property
  assemblies:
  - System.Xml.XDocument
  - System.Xml.Linq
  - netstandard
  namespace: System.Xml.Linq
  summary: Gets or sets the system identifier for this Document Type Definition (DTD).
  remarks: If an XML document uses an external private DTD, this property will contain the private identifier of the external DTD.
  example:
  - "The following example creates an XML document that refers to an external private DTD. The DTD does not have an internal subset. The call to the <xref:System.Xml.Linq.XDocumentType> constructor reflects the use of the external private DTD. It passes `null` for the internal subset.  \n  \n```csharp  \n  \n                string pubsDtd =  \n@\"<!ELEMENT Pubs (Book+)>  \n<!ELEMENT Book (Title, Author)>  \n<!ELEMENT Title (#PCDATA)>  \n<!ELEMENT Author (#PCDATA)>\";  \nFile.WriteAllText(\"Pubs.dtd\", pubsDtd);  \n  \nstring target = \"xml-stylesheet\";  \nstring data = \"href=\\\"mystyle.css\\\" title=\\\"Compact\\\" type=\\\"text/css\\\"\";  \n  \nXDocument doc = new XDocument(  \n    new XDocumentType(\"Pubs\", null, \"Pubs.dtd\", null),  \n    new XElement(\"Pubs\",   \n        new XElement(\"Book\",  \n            new XElement(\"Title\", \"Artifacts of Roman Civilization\"),  \n            new XElement(\"Author\", \"Moreno, Jordao\")  \n        ),  \n        new XElement(\"Book\",  \n            new XElement(\"Title\", \"Midieval Tools and Implements\"),  \n            new XElement(\"Author\", \"Gazit, Inbar\")  \n        )  \n    ),  \n    new XComment(\"This is another comment.\")  \n);  \ndoc.Declaration = new XDeclaration(\"1.0\", \"utf-8\", \"true\");  \ndoc.Save(\"Pubs.xml\");  \n  \n// Validate Pubs.xml against Pubs.dtd.  \nXmlReaderSettings xrs = new XmlReaderSettings();  \nxrs.ProhibitDtd = false;  \nxrs.ValidationType = ValidationType.DTD;  \nxrs.ConformanceLevel = ConformanceLevel.Auto;  \nXmlReader xr = XmlReader.Create(\"Pubs.xml\", xrs);  \nXDocument doc2 = XDocument.Load(xr);  \n  \nXDocumentType dt = doc2.Document.DocumentType;  \nConsole.WriteLine(\"SystemId:{0}\", dt.SystemId);  \n```  \n  \n```vb  \n  \n                Dim pubsDtd As String = _   \n    \"<!ELEMENT Pubs (Book+)>\" & Environment.NewLine & _  \n    \"<!ELEMENT Book (Title, Author)>\" & Environment.NewLine & _  \n    \"<!ELEMENT Title (#PCDATA)>\" & Environment.NewLine & _  \n    \"<!ELEMENT Author (#PCDATA)>\"  \nFile.WriteAllText(\"Pubs.dtd\", pubsDtd)  \n  \nDim target As String = \"xml-stylesheet\"  \nDim data As String = \"href='mystyle.css' title='Compact' type='text/css'\"  \n  \nDim doc As XDocument = _  \n    <?xml version='1.0'?>  \n    <Pubs>  \n        <Book>  \n            <Title>Artifacts of Roman Civilization</Title>  \n            <Author>Moreno, Jordao</Author>  \n        </Book>  \n        <Book>  \n            <Title>Midieval Tools and Implements</Title>  \n            <Author>Gazit, Inbar</Author>  \n        </Book>  \n    </Pubs>  \n    <!--This is another comment.-->  \n  \ndoc _  \n.FirstNode _  \n.AddBeforeSelf(New XDocumentType(\"Pubs\", Nothing, \"Pubs.dtd\", Nothing))  \n  \ndoc.Declaration = New XDeclaration(\"1.0\", \"utf-8\", \"true\")  \ndoc.Save(\"Pubs.xml\")  \n  \n' Validate Pubs.xml against Pubs.dtd.  \nDim xrs As XmlReaderSettings = New XmlReaderSettings()  \nxrs.ProhibitDtd = False  \nxrs.ValidationType = ValidationType.DTD  \nxrs.ConformanceLevel = ConformanceLevel.Auto  \nDim xr As XmlReader = XmlReader.Create(\"Pubs.xml\", xrs)  \nDim doc2 As XDocument = XDocument.Load(xr)  \n  \nDim dt As XDocumentType = doc2.Document.DocumentType  \nConsole.WriteLine(\"SystemId:{0}\", dt.SystemId)  \n```  \n  \n This example produces the following output:  \n  \n```  \nSystemId:Pubs.dtd  \n```"
  syntax:
    content: public string SystemId { get; set; }
    return:
      type: System.String
      description: A <xref href="System.String"></xref> that contains the system identifier for this Document Type Definition (DTD).
  overload: System.Xml.Linq.XDocumentType.SystemId*
  exceptions: []
  version:
  - netcore-1.0
  - netcore-1.1
  - netcore-2.0
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  - netstandard-1.0
  - netstandard-1.1
  - netstandard-1.2
  - netstandard-1.3
  - netstandard-1.4
  - netstandard-1.6
  - netstandard-2.0
  - xamarinandroid-7.1
  - xamarinios-10.8
  - xamarinmac-3.0
  monikers:
  - netcore-1.0
  - netcore-1.1
  - netcore-2.0
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  - netstandard-1.0
  - netstandard-1.1
  - netstandard-1.2
  - netstandard-1.3
  - netstandard-1.4
  - netstandard-1.6
  - netstandard-2.0
  - xamarinandroid-7.1
  - xamarinios-10.8
  - xamarinmac-3.0
  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Xml.Linq/XDocumentType.xml
  ms.technology:
  - dotnet-standard
  author: mairaw
  ms.author: mairaw
  manager: wpickett
- uid: System.Xml.Linq.XDocumentType.WriteTo(System.Xml.XmlWriter)
  commentId: M:System.Xml.Linq.XDocumentType.WriteTo(System.Xml.XmlWriter)
  id: WriteTo(System.Xml.XmlWriter)
  parent: System.Xml.Linq.XDocumentType
  langs:
  - csharp
  name: WriteTo(XmlWriter)
  nameWithType: XDocumentType.WriteTo(XmlWriter)
  fullName: XDocumentType.WriteTo(XmlWriter)
  type: Method
  assemblies:
  - System.Xml.XDocument
  - System.Xml.Linq
  - netstandard
  namespace: System.Xml.Linq
  summary: Write this <xref href="System.Xml.Linq.XDocumentType"></xref> to an <xref href="System.Xml.XmlWriter"></xref>.
  remarks: This method is primarily used internally by the methods that write an XML tree to an <xref:System.Xml.XmlWriter>.
  syntax:
    content: public override void WriteTo (System.Xml.XmlWriter writer);
    parameters:
    - id: writer
      type: System.Xml.XmlWriter
      description: An <xref href="System.Xml.XmlWriter"></xref> into which this method will write.
  overload: System.Xml.Linq.XDocumentType.WriteTo*
  exceptions: []
  version:
  - netcore-1.0
  - netcore-1.1
  - netcore-2.0
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  - netstandard-1.0
  - netstandard-1.1
  - netstandard-1.2
  - netstandard-1.3
  - netstandard-1.4
  - netstandard-1.6
  - netstandard-2.0
  - xamarinandroid-7.1
  - xamarinios-10.8
  - xamarinmac-3.0
  monikers:
  - netcore-1.0
  - netcore-1.1
  - netcore-2.0
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  - netstandard-1.0
  - netstandard-1.1
  - netstandard-1.2
  - netstandard-1.3
  - netstandard-1.4
  - netstandard-1.6
  - netstandard-2.0
  - xamarinandroid-7.1
  - xamarinios-10.8
  - xamarinmac-3.0
  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Xml.Linq/XDocumentType.xml
  ms.technology:
  - dotnet-standard
  author: mairaw
  ms.author: mairaw
  manager: wpickett
- uid: System.Xml.Linq.XDocumentType.WriteToAsync(System.Xml.XmlWriter,System.Threading.CancellationToken)
  commentId: M:System.Xml.Linq.XDocumentType.WriteToAsync(System.Xml.XmlWriter,System.Threading.CancellationToken)
  id: WriteToAsync(System.Xml.XmlWriter,System.Threading.CancellationToken)
  parent: System.Xml.Linq.XDocumentType
  langs:
  - csharp
  name: WriteToAsync(XmlWriter, CancellationToken)
  nameWithType: XDocumentType.WriteToAsync(XmlWriter, CancellationToken)
  fullName: XDocumentType.WriteToAsync(XmlWriter, CancellationToken)
  type: Method
  assemblies:
  - System.Xml.XDocument
  namespace: System.Xml.Linq
  syntax:
    content: public override System.Threading.Tasks.Task WriteToAsync (System.Xml.XmlWriter writer, System.Threading.CancellationToken cancellationToken);
    parameters:
    - id: writer
      type: System.Xml.XmlWriter
      description: ''
    - id: cancellationToken
      type: System.Threading.CancellationToken
      description: ''
    return:
      type: System.Threading.Tasks.Task
      description: ''
  overload: System.Xml.Linq.XDocumentType.WriteToAsync*
  exceptions: []
  version:
  - netcore-2.0
  monikers:
  - netcore-2.0
  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Xml.Linq/XDocumentType.xml
references:
- uid: System.Xml.Linq.XNode
  parent: System.Xml.Linq
  isExternal: false
  name: XNode
  nameWithType: XNode
  fullName: System.Xml.Linq.XNode
- uid: System.Xml.Linq.XDocumentType.#ctor(System.Xml.Linq.XDocumentType)
  parent: System.Xml.Linq.XDocumentType
  isExternal: false
  name: XDocumentType(XDocumentType)
  nameWithType: XDocumentType.XDocumentType(XDocumentType)
  fullName: XDocumentType.XDocumentType(XDocumentType)
- uid: System.Xml.Linq.XDocumentType
  parent: System.Xml.Linq
  isExternal: false
  name: XDocumentType
  nameWithType: XDocumentType
  fullName: System.Xml.Linq.XDocumentType
- uid: System.Xml.Linq.XDocumentType.#ctor(System.String,System.String,System.String,System.String)
  parent: System.Xml.Linq.XDocumentType
  isExternal: false
  name: XDocumentType(String, String, String, String)
  nameWithType: XDocumentType.XDocumentType(String, String, String, String)
  fullName: XDocumentType.XDocumentType(String, String, String, String)
- uid: System.String
  parent: System
  isExternal: false
  name: String
  nameWithType: String
  fullName: System.String
- uid: System.Xml.Linq.XDocumentType.InternalSubset
  parent: System.Xml.Linq.XDocumentType
  isExternal: false
  name: InternalSubset
  nameWithType: XDocumentType.InternalSubset
  fullName: XDocumentType.InternalSubset
- uid: System.Xml.Linq.XDocumentType.Name
  parent: System.Xml.Linq.XDocumentType
  isExternal: false
  name: Name
  nameWithType: XDocumentType.Name
  fullName: XDocumentType.Name
- uid: System.Xml.Linq.XDocumentType.NodeType
  parent: System.Xml.Linq.XDocumentType
  isExternal: false
  name: NodeType
  nameWithType: XDocumentType.NodeType
  fullName: XDocumentType.NodeType
- uid: System.Xml.XmlNodeType
  parent: System.Xml
  isExternal: false
  name: XmlNodeType
  nameWithType: XmlNodeType
  fullName: System.Xml.XmlNodeType
- uid: System.Xml.Linq.XDocumentType.PublicId
  parent: System.Xml.Linq.XDocumentType
  isExternal: false
  name: PublicId
  nameWithType: XDocumentType.PublicId
  fullName: XDocumentType.PublicId
- uid: System.Xml.Linq.XDocumentType.SystemId
  parent: System.Xml.Linq.XDocumentType
  isExternal: false
  name: SystemId
  nameWithType: XDocumentType.SystemId
  fullName: XDocumentType.SystemId
- uid: System.Xml.Linq.XDocumentType.WriteTo(System.Xml.XmlWriter)
  parent: System.Xml.Linq.XDocumentType
  isExternal: false
  name: WriteTo(XmlWriter)
  nameWithType: XDocumentType.WriteTo(XmlWriter)
  fullName: XDocumentType.WriteTo(XmlWriter)
- uid: System.Xml.XmlWriter
  parent: System.Xml
  isExternal: false
  name: XmlWriter
  nameWithType: XmlWriter
  fullName: System.Xml.XmlWriter
- uid: System.Xml.Linq.XDocumentType.WriteToAsync(System.Xml.XmlWriter,System.Threading.CancellationToken)
  parent: System.Xml.Linq.XDocumentType
  isExternal: false
  name: WriteToAsync(XmlWriter, CancellationToken)
  nameWithType: XDocumentType.WriteToAsync(XmlWriter, CancellationToken)
  fullName: XDocumentType.WriteToAsync(XmlWriter, CancellationToken)
- uid: System.Threading.Tasks.Task
  parent: System.Threading.Tasks
  isExternal: false
  name: Task
  nameWithType: Task
  fullName: System.Threading.Tasks.Task
- uid: System.Threading.CancellationToken
  parent: System.Threading
  isExternal: false
  name: CancellationToken
  nameWithType: CancellationToken
  fullName: System.Threading.CancellationToken
- uid: System.Xml.Linq.XDocumentType.#ctor*
  parent: System.Xml.Linq.XDocumentType
  isExternal: false
  name: XDocumentType
  nameWithType: XDocumentType.XDocumentType
  fullName: XDocumentType.XDocumentType
  monikers:
  - netcore-1.0
  - netcore-1.1
  - netcore-2.0
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  - netstandard-1.0
  - netstandard-1.1
  - netstandard-1.2
  - netstandard-1.3
  - netstandard-1.4
  - netstandard-1.6
  - netstandard-2.0
  - xamarinandroid-7.1
  - xamarinios-10.8
  - xamarinmac-3.0
  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Xml.Linq/XDocumentType.xml
- uid: System.Xml.Linq.XDocumentType.InternalSubset*
  parent: System.Xml.Linq.XDocumentType
  isExternal: false
  name: InternalSubset
  nameWithType: XDocumentType.InternalSubset
  fullName: XDocumentType.InternalSubset
  monikers:
  - netcore-1.0
  - netcore-1.1
  - netcore-2.0
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  - netstandard-1.0
  - netstandard-1.1
  - netstandard-1.2
  - netstandard-1.3
  - netstandard-1.4
  - netstandard-1.6
  - netstandard-2.0
  - xamarinandroid-7.1
  - xamarinios-10.8
  - xamarinmac-3.0
  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Xml.Linq/XDocumentType.xml
- uid: System.Xml.Linq.XDocumentType.Name*
  parent: System.Xml.Linq.XDocumentType
  isExternal: false
  name: Name
  nameWithType: XDocumentType.Name
  fullName: XDocumentType.Name
  monikers:
  - netcore-1.0
  - netcore-1.1
  - netcore-2.0
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  - netstandard-1.0
  - netstandard-1.1
  - netstandard-1.2
  - netstandard-1.3
  - netstandard-1.4
  - netstandard-1.6
  - netstandard-2.0
  - xamarinandroid-7.1
  - xamarinios-10.8
  - xamarinmac-3.0
  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Xml.Linq/XDocumentType.xml
- uid: System.Xml.Linq.XDocumentType.NodeType*
  parent: System.Xml.Linq.XDocumentType
  isExternal: false
  name: NodeType
  nameWithType: XDocumentType.NodeType
  fullName: XDocumentType.NodeType
  monikers:
  - netcore-1.0
  - netcore-1.1
  - netcore-2.0
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  - netstandard-1.0
  - netstandard-1.1
  - netstandard-1.2
  - netstandard-1.3
  - netstandard-1.4
  - netstandard-1.6
  - netstandard-2.0
  - xamarinandroid-7.1
  - xamarinios-10.8
  - xamarinmac-3.0
  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Xml.Linq/XDocumentType.xml
- uid: System.Xml.Linq.XDocumentType.PublicId*
  parent: System.Xml.Linq.XDocumentType
  isExternal: false
  name: PublicId
  nameWithType: XDocumentType.PublicId
  fullName: XDocumentType.PublicId
  monikers:
  - netcore-1.0
  - netcore-1.1
  - netcore-2.0
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  - netstandard-1.0
  - netstandard-1.1
  - netstandard-1.2
  - netstandard-1.3
  - netstandard-1.4
  - netstandard-1.6
  - netstandard-2.0
  - xamarinandroid-7.1
  - xamarinios-10.8
  - xamarinmac-3.0
  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Xml.Linq/XDocumentType.xml
- uid: System.Xml.Linq.XDocumentType.SystemId*
  parent: System.Xml.Linq.XDocumentType
  isExternal: false
  name: SystemId
  nameWithType: XDocumentType.SystemId
  fullName: XDocumentType.SystemId
  monikers:
  - netcore-1.0
  - netcore-1.1
  - netcore-2.0
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  - netstandard-1.0
  - netstandard-1.1
  - netstandard-1.2
  - netstandard-1.3
  - netstandard-1.4
  - netstandard-1.6
  - netstandard-2.0
  - xamarinandroid-7.1
  - xamarinios-10.8
  - xamarinmac-3.0
  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Xml.Linq/XDocumentType.xml
- uid: System.Xml.Linq.XDocumentType.WriteTo*
  parent: System.Xml.Linq.XDocumentType
  isExternal: false
  name: WriteTo
  nameWithType: XDocumentType.WriteTo
  fullName: XDocumentType.WriteTo
  monikers:
  - netcore-1.0
  - netcore-1.1
  - netcore-2.0
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  - netstandard-1.0
  - netstandard-1.1
  - netstandard-1.2
  - netstandard-1.3
  - netstandard-1.4
  - netstandard-1.6
  - netstandard-2.0
  - xamarinandroid-7.1
  - xamarinios-10.8
  - xamarinmac-3.0
  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Xml.Linq/XDocumentType.xml
- uid: System.Xml.Linq.XDocumentType.WriteToAsync*
  parent: System.Xml.Linq.XDocumentType
  isExternal: false
  name: WriteToAsync
  nameWithType: XDocumentType.WriteToAsync
  fullName: XDocumentType.WriteToAsync
  monikers:
  - netcore-2.0
  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Xml.Linq/XDocumentType.xml
- uid: System.Object.Equals(System.Object)
  parent: System.Object
  isExternal: false
  name: Equals(Object)
  nameWithType: Object.Equals(Object)
  fullName: Object.Equals(Object)
- uid: System.Object.Equals(System.Object,System.Object)
  parent: System.Object
  isExternal: false
  name: Equals(Object, Object)
  nameWithType: Object.Equals(Object, Object)
  fullName: Object.Equals(Object, Object)
- uid: System.Object.GetHashCode
  parent: System.Object
  isExternal: false
  name: GetHashCode()
  nameWithType: Object.GetHashCode()
  fullName: Object.GetHashCode()
- uid: System.Object.GetType
  parent: System.Object
  isExternal: false
  name: GetType()
  nameWithType: Object.GetType()
  fullName: Object.GetType()
- uid: System.Object.MemberwiseClone
  parent: System.Object
  isExternal: false
  name: MemberwiseClone()
  nameWithType: Object.MemberwiseClone()
  fullName: Object.MemberwiseClone()
- uid: System.Object.ReferenceEquals(System.Object,System.Object)
  parent: System.Object
  isExternal: false
  name: ReferenceEquals(Object, Object)
  nameWithType: Object.ReferenceEquals(Object, Object)
  fullName: Object.ReferenceEquals(Object, Object)
- uid: System.Xml.Linq.XNode.ToString
  parent: System.Xml.Linq.XNode
  isExternal: false
  name: ToString()
  nameWithType: XNode.ToString()
  fullName: XNode.ToString()
- uid: System.Xml.Linq.XObject.AddAnnotation(System.Object)
  parent: System.Xml.Linq.XObject
  isExternal: false
  name: AddAnnotation(Object)
  nameWithType: XObject.AddAnnotation(Object)
  fullName: XObject.AddAnnotation(Object)
- uid: System.Xml.Linq.XObject.Annotation(System.Type)
  parent: System.Xml.Linq.XObject
  isExternal: false
  name: Annotation(Type)
  nameWithType: XObject.Annotation(Type)
  fullName: XObject.Annotation(Type)
- uid: System.Xml.Linq.XObject.Annotation``1
  parent: System.Xml.Linq.XObject
  isExternal: false
  name: Annotation<T>()
  nameWithType: XObject.Annotation<T>()
  fullName: XObject.Annotation<T>()
- uid: System.Xml.Linq.XObject.Annotations(System.Type)
  parent: System.Xml.Linq.XObject
  isExternal: false
  name: Annotations(Type)
  nameWithType: XObject.Annotations(Type)
  fullName: XObject.Annotations(Type)
- uid: System.Xml.Linq.XObject.Annotations``1
  parent: System.Xml.Linq.XObject
  isExternal: false
  name: Annotations<T>()
  nameWithType: XObject.Annotations<T>()
  fullName: XObject.Annotations<T>()
- uid: System.Xml.Linq.XObject.BaseUri
  parent: System.Xml.Linq.XObject
  isExternal: false
  name: BaseUri
  nameWithType: XObject.BaseUri
  fullName: XObject.BaseUri
- uid: System.Xml.Linq.XObject.Changed
  parent: System.Xml.Linq.XObject
  isExternal: false
  name: Changed
  nameWithType: XObject.Changed
  fullName: XObject.Changed
- uid: System.Xml.Linq.XObject.Changing
  parent: System.Xml.Linq.XObject
  isExternal: false
  name: Changing
  nameWithType: XObject.Changing
  fullName: XObject.Changing
- uid: System.Xml.Linq.XObject.Document
  parent: System.Xml.Linq.XObject
  isExternal: false
  name: Document
  nameWithType: XObject.Document
  fullName: XObject.Document
- uid: System.Xml.Linq.XObject.Parent
  parent: System.Xml.Linq.XObject
  isExternal: false
  name: Parent
  nameWithType: XObject.Parent
  fullName: XObject.Parent
- uid: System.Xml.Linq.XObject.RemoveAnnotations(System.Type)
  parent: System.Xml.Linq.XObject
  isExternal: false
  name: RemoveAnnotations(Type)
  nameWithType: XObject.RemoveAnnotations(Type)
  fullName: XObject.RemoveAnnotations(Type)
- uid: System.Xml.Linq.XObject.RemoveAnnotations``1
  parent: System.Xml.Linq.XObject
  isExternal: false
  name: RemoveAnnotations<T>()
  nameWithType: XObject.RemoveAnnotations<T>()
  fullName: XObject.RemoveAnnotations<T>()
- uid: System.Xml.Linq.XObject.System#Xml#IXmlLineInfo#HasLineInfo
  parent: System.Xml.Linq.XObject
  isExternal: false
  name: IXmlLineInfo.HasLineInfo()
  nameWithType: XObject.IXmlLineInfo.HasLineInfo()
  fullName: XObject.IXmlLineInfo.HasLineInfo()
- uid: System.Xml.Linq.XObject.System#Xml#IXmlLineInfo#LineNumber
  parent: System.Xml.Linq.XObject
  isExternal: false
  name: IXmlLineInfo.LineNumber
  nameWithType: XObject.IXmlLineInfo.LineNumber
  fullName: XObject.IXmlLineInfo.LineNumber
- uid: System.Xml.Linq.XObject.System#Xml#IXmlLineInfo#LinePosition
  parent: System.Xml.Linq.XObject
  isExternal: false
  name: IXmlLineInfo.LinePosition
  nameWithType: XObject.IXmlLineInfo.LinePosition
  fullName: XObject.IXmlLineInfo.LinePosition
- uid: System.Xml.Linq.XNode.AddAfterSelf(System.Object)
  parent: System.Xml.Linq.XNode
  isExternal: false
  name: AddAfterSelf(Object)
  nameWithType: XNode.AddAfterSelf(Object)
  fullName: XNode.AddAfterSelf(Object)
- uid: System.Xml.Linq.XNode.AddAfterSelf(System.Object[])
  parent: System.Xml.Linq.XNode
  isExternal: false
  name: AddAfterSelf(Object[])
  nameWithType: XNode.AddAfterSelf(Object[])
  fullName: XNode.AddAfterSelf(Object[])
- uid: System.Xml.Linq.XNode.AddBeforeSelf(System.Object)
  parent: System.Xml.Linq.XNode
  isExternal: false
  name: AddBeforeSelf(Object)
  nameWithType: XNode.AddBeforeSelf(Object)
  fullName: XNode.AddBeforeSelf(Object)
- uid: System.Xml.Linq.XNode.AddBeforeSelf(System.Object[])
  parent: System.Xml.Linq.XNode
  isExternal: false
  name: AddBeforeSelf(Object[])
  nameWithType: XNode.AddBeforeSelf(Object[])
  fullName: XNode.AddBeforeSelf(Object[])
- uid: System.Xml.Linq.XNode.Ancestors
  parent: System.Xml.Linq.XNode
  isExternal: false
  name: Ancestors()
  nameWithType: XNode.Ancestors()
  fullName: XNode.Ancestors()
- uid: System.Xml.Linq.XNode.Ancestors(System.Xml.Linq.XName)
  parent: System.Xml.Linq.XNode
  isExternal: false
  name: Ancestors(XName)
  nameWithType: XNode.Ancestors(XName)
  fullName: XNode.Ancestors(XName)
- uid: System.Xml.Linq.XNode.CompareDocumentOrder(System.Xml.Linq.XNode,System.Xml.Linq.XNode)
  parent: System.Xml.Linq.XNode
  isExternal: false
  name: CompareDocumentOrder(XNode, XNode)
  nameWithType: XNode.CompareDocumentOrder(XNode, XNode)
  fullName: XNode.CompareDocumentOrder(XNode, XNode)
- uid: System.Xml.Linq.XNode.CreateReader
  parent: System.Xml.Linq.XNode
  isExternal: false
  name: CreateReader()
  nameWithType: XNode.CreateReader()
  fullName: XNode.CreateReader()
- uid: System.Xml.Linq.XNode.CreateReader(System.Xml.Linq.ReaderOptions)
  parent: System.Xml.Linq.XNode
  isExternal: false
  name: CreateReader(ReaderOptions)
  nameWithType: XNode.CreateReader(ReaderOptions)
  fullName: XNode.CreateReader(ReaderOptions)
- uid: System.Xml.Linq.XNode.DeepEquals(System.Xml.Linq.XNode,System.Xml.Linq.XNode)
  parent: System.Xml.Linq.XNode
  isExternal: false
  name: DeepEquals(XNode, XNode)
  nameWithType: XNode.DeepEquals(XNode, XNode)
  fullName: XNode.DeepEquals(XNode, XNode)
- uid: System.Xml.Linq.XNode.DocumentOrderComparer
  parent: System.Xml.Linq.XNode
  isExternal: false
  name: DocumentOrderComparer
  nameWithType: XNode.DocumentOrderComparer
  fullName: XNode.DocumentOrderComparer
- uid: System.Xml.Linq.XNode.ElementsAfterSelf
  parent: System.Xml.Linq.XNode
  isExternal: false
  name: ElementsAfterSelf()
  nameWithType: XNode.ElementsAfterSelf()
  fullName: XNode.ElementsAfterSelf()
- uid: System.Xml.Linq.XNode.ElementsAfterSelf(System.Xml.Linq.XName)
  parent: System.Xml.Linq.XNode
  isExternal: false
  name: ElementsAfterSelf(XName)
  nameWithType: XNode.ElementsAfterSelf(XName)
  fullName: XNode.ElementsAfterSelf(XName)
- uid: System.Xml.Linq.XNode.ElementsBeforeSelf
  parent: System.Xml.Linq.XNode
  isExternal: false
  name: ElementsBeforeSelf()
  nameWithType: XNode.ElementsBeforeSelf()
  fullName: XNode.ElementsBeforeSelf()
- uid: System.Xml.Linq.XNode.ElementsBeforeSelf(System.Xml.Linq.XName)
  parent: System.Xml.Linq.XNode
  isExternal: false
  name: ElementsBeforeSelf(XName)
  nameWithType: XNode.ElementsBeforeSelf(XName)
  fullName: XNode.ElementsBeforeSelf(XName)
- uid: System.Xml.Linq.XNode.EqualityComparer
  parent: System.Xml.Linq.XNode
  isExternal: false
  name: EqualityComparer
  nameWithType: XNode.EqualityComparer
  fullName: XNode.EqualityComparer
- uid: System.Xml.Linq.XNode.IsAfter(System.Xml.Linq.XNode)
  parent: System.Xml.Linq.XNode
  isExternal: false
  name: IsAfter(XNode)
  nameWithType: XNode.IsAfter(XNode)
  fullName: XNode.IsAfter(XNode)
- uid: System.Xml.Linq.XNode.IsBefore(System.Xml.Linq.XNode)
  parent: System.Xml.Linq.XNode
  isExternal: false
  name: IsBefore(XNode)
  nameWithType: XNode.IsBefore(XNode)
  fullName: XNode.IsBefore(XNode)
- uid: System.Xml.Linq.XNode.NextNode
  parent: System.Xml.Linq.XNode
  isExternal: false
  name: NextNode
  nameWithType: XNode.NextNode
  fullName: XNode.NextNode
- uid: System.Xml.Linq.XNode.NodesAfterSelf
  parent: System.Xml.Linq.XNode
  isExternal: false
  name: NodesAfterSelf()
  nameWithType: XNode.NodesAfterSelf()
  fullName: XNode.NodesAfterSelf()
- uid: System.Xml.Linq.XNode.NodesBeforeSelf
  parent: System.Xml.Linq.XNode
  isExternal: false
  name: NodesBeforeSelf()
  nameWithType: XNode.NodesBeforeSelf()
  fullName: XNode.NodesBeforeSelf()
- uid: System.Xml.Linq.XNode.PreviousNode
  parent: System.Xml.Linq.XNode
  isExternal: false
  name: PreviousNode
  nameWithType: XNode.PreviousNode
  fullName: XNode.PreviousNode
- uid: System.Xml.Linq.XNode.ReadFrom(System.Xml.XmlReader)
  parent: System.Xml.Linq.XNode
  isExternal: false
  name: ReadFrom(XmlReader)
  nameWithType: XNode.ReadFrom(XmlReader)
  fullName: XNode.ReadFrom(XmlReader)
- uid: System.Xml.Linq.XNode.ReadFromAsync(System.Xml.XmlReader,System.Threading.CancellationToken)
  parent: System.Xml.Linq.XNode
  isExternal: false
  name: ReadFromAsync(XmlReader, CancellationToken)
  nameWithType: XNode.ReadFromAsync(XmlReader, CancellationToken)
  fullName: XNode.ReadFromAsync(XmlReader, CancellationToken)
- uid: System.Xml.Linq.XNode.Remove
  parent: System.Xml.Linq.XNode
  isExternal: false
  name: Remove()
  nameWithType: XNode.Remove()
  fullName: XNode.Remove()
- uid: System.Xml.Linq.XNode.ReplaceWith(System.Object)
  parent: System.Xml.Linq.XNode
  isExternal: false
  name: ReplaceWith(Object)
  nameWithType: XNode.ReplaceWith(Object)
  fullName: XNode.ReplaceWith(Object)
- uid: System.Xml.Linq.XNode.ReplaceWith(System.Object[])
  parent: System.Xml.Linq.XNode
  isExternal: false
  name: ReplaceWith(Object[])
  nameWithType: XNode.ReplaceWith(Object[])
  fullName: XNode.ReplaceWith(Object[])
- uid: System.Xml.Linq.XNode.ToString(System.Xml.Linq.SaveOptions)
  parent: System.Xml.Linq.XNode
  isExternal: false
  name: ToString(SaveOptions)
  nameWithType: XNode.ToString(SaveOptions)
  fullName: XNode.ToString(SaveOptions)
- uid: System.Xml.XPath.Extensions.CreateNavigator(System.Xml.Linq.XNode)
  parent: System.Xml.XPath.Extensions
  isExternal: false
  name: CreateNavigator(XNode)
  nameWithType: Extensions.CreateNavigator(XNode)
  fullName: Extensions.CreateNavigator(XNode)
- uid: System.Xml.XPath.Extensions.CreateNavigator(System.Xml.Linq.XNode,System.Xml.XmlNameTable)
  parent: System.Xml.XPath.Extensions
  isExternal: false
  name: CreateNavigator(XNode, XmlNameTable)
  nameWithType: Extensions.CreateNavigator(XNode, XmlNameTable)
  fullName: Extensions.CreateNavigator(XNode, XmlNameTable)
- uid: System.Xml.XPath.Extensions.XPathEvaluate(System.Xml.Linq.XNode,System.String)
  parent: System.Xml.XPath.Extensions
  isExternal: false
  name: XPathEvaluate(XNode, String)
  nameWithType: Extensions.XPathEvaluate(XNode, String)
  fullName: Extensions.XPathEvaluate(XNode, String)
- uid: System.Xml.XPath.Extensions.XPathEvaluate(System.Xml.Linq.XNode,System.String,System.Xml.IXmlNamespaceResolver)
  parent: System.Xml.XPath.Extensions
  isExternal: false
  name: XPathEvaluate(XNode, String, IXmlNamespaceResolver)
  nameWithType: Extensions.XPathEvaluate(XNode, String, IXmlNamespaceResolver)
  fullName: Extensions.XPathEvaluate(XNode, String, IXmlNamespaceResolver)
- uid: System.Xml.XPath.Extensions.XPathSelectElement(System.Xml.Linq.XNode,System.String)
  parent: System.Xml.XPath.Extensions
  isExternal: false
  name: XPathSelectElement(XNode, String)
  nameWithType: Extensions.XPathSelectElement(XNode, String)
  fullName: Extensions.XPathSelectElement(XNode, String)
- uid: System.Xml.XPath.Extensions.XPathSelectElement(System.Xml.Linq.XNode,System.String,System.Xml.IXmlNamespaceResolver)
  parent: System.Xml.XPath.Extensions
  isExternal: false
  name: XPathSelectElement(XNode, String, IXmlNamespaceResolver)
  nameWithType: Extensions.XPathSelectElement(XNode, String, IXmlNamespaceResolver)
  fullName: Extensions.XPathSelectElement(XNode, String, IXmlNamespaceResolver)
- uid: System.Xml.XPath.Extensions.XPathSelectElements(System.Xml.Linq.XNode,System.String)
  parent: System.Xml.XPath.Extensions
  isExternal: false
  name: XPathSelectElements(XNode, String)
  nameWithType: Extensions.XPathSelectElements(XNode, String)
  fullName: Extensions.XPathSelectElements(XNode, String)
- uid: System.Xml.XPath.Extensions.XPathSelectElements(System.Xml.Linq.XNode,System.String,System.Xml.IXmlNamespaceResolver)
  parent: System.Xml.XPath.Extensions
  isExternal: false
  name: XPathSelectElements(XNode, String, IXmlNamespaceResolver)
  nameWithType: Extensions.XPathSelectElements(XNode, String, IXmlNamespaceResolver)
  fullName: Extensions.XPathSelectElements(XNode, String, IXmlNamespaceResolver)
- uid: System.Xml.XPath.XDocumentExtensions.ToXPathNavigable(System.Xml.Linq.XNode)
  parent: System.Xml.XPath.XDocumentExtensions
  isExternal: false
  name: ToXPathNavigable(XNode)
  nameWithType: XDocumentExtensions.ToXPathNavigable(XNode)
  fullName: XDocumentExtensions.ToXPathNavigable(XNode)
