### YamlMime:ManagedReference
items:
- uid: System.Security.Permissions.KeyContainerPermission
  commentId: T:System.Security.Permissions.KeyContainerPermission
  id: KeyContainerPermission
  children:
  - System.Security.Permissions.KeyContainerPermission.#ctor(System.Security.Permissions.KeyContainerPermissionFlags)
  - System.Security.Permissions.KeyContainerPermission.#ctor(System.Security.Permissions.PermissionState)
  - System.Security.Permissions.KeyContainerPermission.#ctor(System.Security.Permissions.KeyContainerPermissionFlags,System.Security.Permissions.KeyContainerPermissionAccessEntry[])
  - System.Security.Permissions.KeyContainerPermission.AccessEntries
  - System.Security.Permissions.KeyContainerPermission.Copy
  - System.Security.Permissions.KeyContainerPermission.Flags
  - System.Security.Permissions.KeyContainerPermission.FromXml(System.Security.SecurityElement)
  - System.Security.Permissions.KeyContainerPermission.Intersect(System.Security.IPermission)
  - System.Security.Permissions.KeyContainerPermission.IsSubsetOf(System.Security.IPermission)
  - System.Security.Permissions.KeyContainerPermission.IsUnrestricted
  - System.Security.Permissions.KeyContainerPermission.ToXml
  - System.Security.Permissions.KeyContainerPermission.Union(System.Security.IPermission)
  langs:
  - csharp
  name: KeyContainerPermission
  nameWithType: KeyContainerPermission
  fullName: System.Security.Permissions.KeyContainerPermission
  type: Class
  assemblies:
  - mscorlib
  - System.Security.Permissions
  namespace: System.Security.Permissions
  summary: Controls the ability to access key containers. This class cannot be inherited.
  remarks: This permission is used to provide limited access to key containers.
  syntax:
    content: >-
      [System.Runtime.InteropServices.ComVisible(true)]

      public sealed class KeyContainerPermission : System.Security.CodeAccessPermission, System.Security.Permissions.IUnrestrictedPermission
  inheritance:
  - System.Object
  - System.Security.CodeAccessPermission
  implements:
  - System.Security.Permissions.IUnrestrictedPermission
  inheritedMembers:
  - System.Object.Equals(System.Object,System.Object)
  - System.Object.GetType
  - System.Object.MemberwiseClone
  - System.Object.ReferenceEquals(System.Object,System.Object)
  - System.Security.CodeAccessPermission.Assert
  - System.Security.CodeAccessPermission.Demand
  - System.Security.CodeAccessPermission.Deny
  - System.Security.CodeAccessPermission.Equals(System.Object)
  - System.Security.CodeAccessPermission.GetHashCode
  - System.Security.CodeAccessPermission.PermitOnly
  - System.Security.CodeAccessPermission.RevertAll
  - System.Security.CodeAccessPermission.RevertAssert
  - System.Security.CodeAccessPermission.RevertDeny
  - System.Security.CodeAccessPermission.RevertPermitOnly
  - System.Security.CodeAccessPermission.System#Security#IPermission#Demand
  - System.Security.CodeAccessPermission.System#Security#IStackWalk#Assert
  - System.Security.CodeAccessPermission.System#Security#IStackWalk#Demand
  - System.Security.CodeAccessPermission.System#Security#IStackWalk#Deny
  - System.Security.CodeAccessPermission.System#Security#IStackWalk#PermitOnly
  - System.Security.CodeAccessPermission.ToString
  attributes:
  - type: System.Runtime.InteropServices.ComVisibleAttribute
  version:
  - netcore-2.0
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  - xamarinandroid-7.1
  - xamarinios-10.8
  - xamarinmac-3.0
  monikers:
  - netcore-2.0
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  - xamarinandroid-7.1
  - xamarinios-10.8
  - xamarinmac-3.0
  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Security.Permissions/KeyContainerPermission.xml
  ms.technology:
  - dotnet-standard
  author: mairaw
  ms.author: mairaw
  manager: wpickett
- uid: System.Security.Permissions.KeyContainerPermission.#ctor(System.Security.Permissions.KeyContainerPermissionFlags)
  commentId: M:System.Security.Permissions.KeyContainerPermission.#ctor(System.Security.Permissions.KeyContainerPermissionFlags)
  id: '#ctor(System.Security.Permissions.KeyContainerPermissionFlags)'
  parent: System.Security.Permissions.KeyContainerPermission
  langs:
  - csharp
  name: KeyContainerPermission(KeyContainerPermissionFlags)
  nameWithType: KeyContainerPermission.KeyContainerPermission(KeyContainerPermissionFlags)
  fullName: KeyContainerPermission.KeyContainerPermission(KeyContainerPermissionFlags)
  type: Constructor
  assemblies:
  - mscorlib
  - System.Security.Permissions
  namespace: System.Security.Permissions
  summary: Initializes a new instance of the <xref href="System.Security.Permissions.KeyContainerPermission"></xref> class with the specified access.
  remarks: ''
  example:
  - "The following code example shows the use of the <xref:System.Security.Permissions.KeyContainerPermission.%23ctor%28System.Security.Permissions.KeyContainerPermissionFlags%29?displayProperty=fullName> constructor.  \n  \n [!code-cpp[System.Security.Permissions.KeyContainerPermission#20](~/samples/snippets/cpp/VS_Snippets_CLR_System/system.Security.Permissions.KeyContainerPermission/CPP/keycontainerpermission.cpp#20)]\n [!code-csharp[System.Security.Permissions.KeyContainerPermission#20](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.Security.Permissions.KeyContainerPermission/CS/keycontainerpermission.cs#20)]\n [!code-vb[System.Security.Permissions.KeyContainerPermission#20](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.Security.Permissions.KeyContainerPermission/VB/Form1.vb#20)]"
  syntax:
    content: public KeyContainerPermission (System.Security.Permissions.KeyContainerPermissionFlags flags);
    parameters:
    - id: flags
      type: System.Security.Permissions.KeyContainerPermissionFlags
      description: A bitwise combination of the <xref href="System.Security.Permissions.KeyContainerPermissionFlags"></xref> values.
  overload: System.Security.Permissions.KeyContainerPermission.#ctor*
  exceptions:
  - type: System.ArgumentException
    commentId: T:System.ArgumentException
    description: <code>flags</code> is not a valid combination of the <xref href="System.Security.Permissions.KeyContainerPermissionFlags"></xref> values.
  version:
  - netcore-2.0
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  - xamarinandroid-7.1
  - xamarinios-10.8
  - xamarinmac-3.0
  monikers:
  - netcore-2.0
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  - xamarinandroid-7.1
  - xamarinios-10.8
  - xamarinmac-3.0
  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Security.Permissions/KeyContainerPermission.xml
  ms.technology:
  - dotnet-standard
  author: mairaw
  ms.author: mairaw
  manager: wpickett
- uid: System.Security.Permissions.KeyContainerPermission.#ctor(System.Security.Permissions.PermissionState)
  commentId: M:System.Security.Permissions.KeyContainerPermission.#ctor(System.Security.Permissions.PermissionState)
  id: '#ctor(System.Security.Permissions.PermissionState)'
  parent: System.Security.Permissions.KeyContainerPermission
  langs:
  - csharp
  name: KeyContainerPermission(PermissionState)
  nameWithType: KeyContainerPermission.KeyContainerPermission(PermissionState)
  fullName: KeyContainerPermission.KeyContainerPermission(PermissionState)
  type: Constructor
  assemblies:
  - mscorlib
  - System.Security.Permissions
  namespace: System.Security.Permissions
  summary: Initializes a new instance of the <xref href="System.Security.Permissions.KeyContainerPermission"></xref> class with either restricted or unrestricted permission.
  remarks: Creates either `None` (fully restricted) or `Unrestricted` access to key containers.
  syntax:
    content: public KeyContainerPermission (System.Security.Permissions.PermissionState state);
    parameters:
    - id: state
      type: System.Security.Permissions.PermissionState
      description: One of the <xref href="System.Security.Permissions.PermissionState"></xref> values.
  overload: System.Security.Permissions.KeyContainerPermission.#ctor*
  exceptions:
  - type: System.ArgumentException
    commentId: T:System.ArgumentException
    description: <code>state</code> is not a valid <xref href="System.Security.Permissions.PermissionState"></xref> value.
  version:
  - netcore-2.0
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  - xamarinandroid-7.1
  - xamarinios-10.8
  - xamarinmac-3.0
  monikers:
  - netcore-2.0
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  - xamarinandroid-7.1
  - xamarinios-10.8
  - xamarinmac-3.0
  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Security.Permissions/KeyContainerPermission.xml
  ms.technology:
  - dotnet-standard
  author: mairaw
  ms.author: mairaw
  manager: wpickett
- uid: System.Security.Permissions.KeyContainerPermission.#ctor(System.Security.Permissions.KeyContainerPermissionFlags,System.Security.Permissions.KeyContainerPermissionAccessEntry[])
  commentId: M:System.Security.Permissions.KeyContainerPermission.#ctor(System.Security.Permissions.KeyContainerPermissionFlags,System.Security.Permissions.KeyContainerPermissionAccessEntry[])
  id: '#ctor(System.Security.Permissions.KeyContainerPermissionFlags,System.Security.Permissions.KeyContainerPermissionAccessEntry[])'
  parent: System.Security.Permissions.KeyContainerPermission
  langs:
  - csharp
  name: KeyContainerPermission(KeyContainerPermissionFlags, KeyContainerPermissionAccessEntry[])
  nameWithType: KeyContainerPermission.KeyContainerPermission(KeyContainerPermissionFlags, KeyContainerPermissionAccessEntry[])
  fullName: KeyContainerPermission.KeyContainerPermission(KeyContainerPermissionFlags, KeyContainerPermissionAccessEntry[])
  type: Constructor
  assemblies:
  - mscorlib
  - System.Security.Permissions
  namespace: System.Security.Permissions
  summary: Initializes a new instance of the <xref href="System.Security.Permissions.KeyContainerPermission"></xref> class with the specified global access and specific key container access rights.
  remarks: ''
  example:
  - "The following code example shows the use of the <xref:System.Security.Permissions.KeyContainerPermission.%23ctor%28System.Security.Permissions.KeyContainerPermissionFlags%2CSystem.Security.Permissions.KeyContainerPermissionAccessEntry%5B%5D%29?displayProperty=fullName> constructor.  \n  \n [!code-cpp[System.Security.Permissions.KeyContainerPermission#13](~/samples/snippets/cpp/VS_Snippets_CLR_System/system.Security.Permissions.KeyContainerPermission/CPP/keycontainerpermission.cpp#13)]\n [!code-csharp[System.Security.Permissions.KeyContainerPermission#13](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.Security.Permissions.KeyContainerPermission/CS/keycontainerpermission.cs#13)]\n [!code-vb[System.Security.Permissions.KeyContainerPermission#13](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.Security.Permissions.KeyContainerPermission/VB/Form1.vb#13)]"
  syntax:
    content: public KeyContainerPermission (System.Security.Permissions.KeyContainerPermissionFlags flags, System.Security.Permissions.KeyContainerPermissionAccessEntry[] accessList);
    parameters:
    - id: flags
      type: System.Security.Permissions.KeyContainerPermissionFlags
      description: A bitwise combination of the <xref href="System.Security.Permissions.KeyContainerPermissionFlags"></xref> values.
    - id: accessList
      type: System.Security.Permissions.KeyContainerPermissionAccessEntry[]
      description: An array of <xref href="System.Security.Permissions.KeyContainerPermissionAccessEntry"></xref> objects identifying specific key container access rights.
  overload: System.Security.Permissions.KeyContainerPermission.#ctor*
  exceptions:
  - type: System.ArgumentException
    commentId: T:System.ArgumentException
    description: <code>flags</code> is not a valid combination of the <xref href="System.Security.Permissions.KeyContainerPermissionFlags"></xref> values.
  - type: System.ArgumentNullException
    commentId: T:System.ArgumentNullException
    description: <code>accessList</code> is `null`.
  version:
  - netcore-2.0
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  - xamarinandroid-7.1
  - xamarinios-10.8
  - xamarinmac-3.0
  monikers:
  - netcore-2.0
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  - xamarinandroid-7.1
  - xamarinios-10.8
  - xamarinmac-3.0
  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Security.Permissions/KeyContainerPermission.xml
  ms.technology:
  - dotnet-standard
  author: mairaw
  ms.author: mairaw
  manager: wpickett
- uid: System.Security.Permissions.KeyContainerPermission.AccessEntries
  commentId: P:System.Security.Permissions.KeyContainerPermission.AccessEntries
  id: AccessEntries
  parent: System.Security.Permissions.KeyContainerPermission
  langs:
  - csharp
  name: AccessEntries
  nameWithType: KeyContainerPermission.AccessEntries
  fullName: KeyContainerPermission.AccessEntries
  type: Property
  assemblies:
  - mscorlib
  - System.Security.Permissions
  namespace: System.Security.Permissions
  summary: Gets the collection of <xref href="System.Security.Permissions.KeyContainerPermissionAccessEntry"></xref> objects associated with the current permission.
  remarks: Each <xref:System.Security.Permissions.KeyContainerPermissionAccessEntry> object in the collection specifies the access rights for a specific key container.
  syntax:
    content: public System.Security.Permissions.KeyContainerPermissionAccessEntryCollection AccessEntries { get; }
    return:
      type: System.Security.Permissions.KeyContainerPermissionAccessEntryCollection
      description: A <xref href="System.Security.Permissions.KeyContainerPermissionAccessEntryCollection"></xref> containing the <xref href="System.Security.Permissions.KeyContainerPermissionAccessEntry"></xref> objects for this <xref href="System.Security.Permissions.KeyContainerPermission"></xref>.
  overload: System.Security.Permissions.KeyContainerPermission.AccessEntries*
  exceptions: []
  version:
  - netcore-2.0
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  - xamarinandroid-7.1
  - xamarinios-10.8
  - xamarinmac-3.0
  monikers:
  - netcore-2.0
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  - xamarinandroid-7.1
  - xamarinios-10.8
  - xamarinmac-3.0
  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Security.Permissions/KeyContainerPermission.xml
  ms.technology:
  - dotnet-standard
  author: mairaw
  ms.author: mairaw
  manager: wpickett
- uid: System.Security.Permissions.KeyContainerPermission.Copy
  commentId: M:System.Security.Permissions.KeyContainerPermission.Copy
  id: Copy
  parent: System.Security.Permissions.KeyContainerPermission
  langs:
  - csharp
  name: Copy()
  nameWithType: KeyContainerPermission.Copy()
  fullName: KeyContainerPermission.Copy()
  type: Method
  assemblies:
  - mscorlib
  - System.Security.Permissions
  namespace: System.Security.Permissions
  summary: Creates and returns an identical copy of the current permission.
  remarks: A copy of the permission represents the same access to resources as the original permission.
  syntax:
    content: public override System.Security.IPermission Copy ();
    parameters: []
    return:
      type: System.Security.IPermission
      description: A copy of the current permission.
  overload: System.Security.Permissions.KeyContainerPermission.Copy*
  exceptions: []
  version:
  - netcore-2.0
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  - xamarinandroid-7.1
  - xamarinios-10.8
  - xamarinmac-3.0
  monikers:
  - netcore-2.0
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  - xamarinandroid-7.1
  - xamarinios-10.8
  - xamarinmac-3.0
  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Security.Permissions/KeyContainerPermission.xml
  ms.technology:
  - dotnet-standard
  author: mairaw
  ms.author: mairaw
  manager: wpickett
- uid: System.Security.Permissions.KeyContainerPermission.Flags
  commentId: P:System.Security.Permissions.KeyContainerPermission.Flags
  id: Flags
  parent: System.Security.Permissions.KeyContainerPermission
  langs:
  - csharp
  name: Flags
  nameWithType: KeyContainerPermission.Flags
  fullName: KeyContainerPermission.Flags
  type: Property
  assemblies:
  - mscorlib
  - System.Security.Permissions
  namespace: System.Security.Permissions
  summary: Gets the key container permission flags that apply to all key containers associated with the permission.
  remarks: The <xref:System.Security.Permissions.KeyContainerPermission.Flags%2A> property is set by the constructor.
  syntax:
    content: public System.Security.Permissions.KeyContainerPermissionFlags Flags { get; }
    return:
      type: System.Security.Permissions.KeyContainerPermissionFlags
      description: A bitwise combination of the <xref href="System.Security.Permissions.KeyContainerPermissionFlags"></xref> values.
  overload: System.Security.Permissions.KeyContainerPermission.Flags*
  exceptions: []
  version:
  - netcore-2.0
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  - xamarinandroid-7.1
  - xamarinios-10.8
  - xamarinmac-3.0
  monikers:
  - netcore-2.0
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  - xamarinandroid-7.1
  - xamarinios-10.8
  - xamarinmac-3.0
  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Security.Permissions/KeyContainerPermission.xml
  ms.technology:
  - dotnet-standard
  author: mairaw
  ms.author: mairaw
  manager: wpickett
- uid: System.Security.Permissions.KeyContainerPermission.FromXml(System.Security.SecurityElement)
  commentId: M:System.Security.Permissions.KeyContainerPermission.FromXml(System.Security.SecurityElement)
  id: FromXml(System.Security.SecurityElement)
  parent: System.Security.Permissions.KeyContainerPermission
  langs:
  - csharp
  name: FromXml(SecurityElement)
  nameWithType: KeyContainerPermission.FromXml(SecurityElement)
  fullName: KeyContainerPermission.FromXml(SecurityElement)
  type: Method
  assemblies:
  - mscorlib
  - System.Security.Permissions
  namespace: System.Security.Permissions
  summary: Reconstructs a permission with a specified state from an XML encoding.
  remarks: The <xref:System.Security.Permissions.KeyContainerPermission.FromXml%2A> method reconstructs a <xref:System.Security.Permissions.KeyContainerPermission> object from an XML encoding defined by the <xref:System.Security.SecurityElement> class. Use the <xref:System.Security.Permissions.KeyContainerPermission.ToXml%2A> method to XML-encode the <xref:System.Security.Permissions.KeyContainerPermission>, including state information.
  syntax:
    content: public override void FromXml (System.Security.SecurityElement securityElement);
    parameters:
    - id: securityElement
      type: System.Security.SecurityElement
      description: A <xref href="System.Security.SecurityElement"></xref> that contains the XML encoding used to reconstruct the permission.
  overload: System.Security.Permissions.KeyContainerPermission.FromXml*
  exceptions:
  - type: System.ArgumentNullException
    commentId: T:System.ArgumentNullException
    description: <code>securityElement</code> is `null`.
  - type: System.ArgumentException
    commentId: T:System.ArgumentException
    description: "<code>securityElement</code> is not a valid permission element.  \n  \n -or-  \n  \n The version number of <code>securityElement</code> is not supported."
  version:
  - netcore-2.0
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  - xamarinandroid-7.1
  - xamarinios-10.8
  - xamarinmac-3.0
  monikers:
  - netcore-2.0
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  - xamarinandroid-7.1
  - xamarinios-10.8
  - xamarinmac-3.0
  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Security.Permissions/KeyContainerPermission.xml
  ms.technology:
  - dotnet-standard
  author: mairaw
  ms.author: mairaw
  manager: wpickett
- uid: System.Security.Permissions.KeyContainerPermission.Intersect(System.Security.IPermission)
  commentId: M:System.Security.Permissions.KeyContainerPermission.Intersect(System.Security.IPermission)
  id: Intersect(System.Security.IPermission)
  parent: System.Security.Permissions.KeyContainerPermission
  langs:
  - csharp
  name: Intersect(IPermission)
  nameWithType: KeyContainerPermission.Intersect(IPermission)
  fullName: KeyContainerPermission.Intersect(IPermission)
  type: Method
  assemblies:
  - mscorlib
  - System.Security.Permissions
  namespace: System.Security.Permissions
  summary: Creates and returns a permission that is the intersection of the current permission and the specified permission.
  remarks: The intersection of two permissions is a permission that describes the set of operations they both describe in common. Only a demand that passes both individual permissions will pass the intersection.
  syntax:
    content: public override System.Security.IPermission Intersect (System.Security.IPermission target);
    parameters:
    - id: target
      type: System.Security.IPermission
      description: A permission to intersect with the current permission. It must be the same type as the current permission.
    return:
      type: System.Security.IPermission
      description: A new permission that represents the intersection of the current permission and the specified permission. This new permission is `null` if the intersection is empty.
  overload: System.Security.Permissions.KeyContainerPermission.Intersect*
  exceptions:
  - type: System.ArgumentException
    commentId: T:System.ArgumentException
    description: <code>target</code> is not `null` and does not specify a permission of the same type as the current permission.
  version:
  - netcore-2.0
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  - xamarinandroid-7.1
  - xamarinios-10.8
  - xamarinmac-3.0
  monikers:
  - netcore-2.0
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  - xamarinandroid-7.1
  - xamarinios-10.8
  - xamarinmac-3.0
  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Security.Permissions/KeyContainerPermission.xml
  ms.technology:
  - dotnet-standard
  author: mairaw
  ms.author: mairaw
  manager: wpickett
- uid: System.Security.Permissions.KeyContainerPermission.IsSubsetOf(System.Security.IPermission)
  commentId: M:System.Security.Permissions.KeyContainerPermission.IsSubsetOf(System.Security.IPermission)
  id: IsSubsetOf(System.Security.IPermission)
  parent: System.Security.Permissions.KeyContainerPermission
  langs:
  - csharp
  name: IsSubsetOf(IPermission)
  nameWithType: KeyContainerPermission.IsSubsetOf(IPermission)
  fullName: KeyContainerPermission.IsSubsetOf(IPermission)
  type: Method
  assemblies:
  - mscorlib
  - System.Security.Permissions
  namespace: System.Security.Permissions
  summary: Determines whether the current permission is a subset of the specified permission.
  remarks: The current permission is a subset of the specified permission if the current permission specifies a set of operations that is wholly contained in the specified permission. For example, a permission for <xref:System.Security.Permissions.KeyContainerPermissionFlags.Open> access is a subset of a permission for <xref:System.Security.Permissions.KeyContainerPermissionFlags.AllFlags> access.
  syntax:
    content: public override bool IsSubsetOf (System.Security.IPermission target);
    parameters:
    - id: target
      type: System.Security.IPermission
      description: A permission to test for the subset relationship. This permission must be the same type as the current permission.
    return:
      type: System.Boolean
      description: '`true` if the current permission is a subset of the specified permission; otherwise, `false`.'
  overload: System.Security.Permissions.KeyContainerPermission.IsSubsetOf*
  exceptions:
  - type: System.ArgumentException
    commentId: T:System.ArgumentException
    description: <code>target</code> is not `null` and does not specify a permission of the same type as the current permission.
  version:
  - netcore-2.0
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  - xamarinandroid-7.1
  - xamarinios-10.8
  - xamarinmac-3.0
  monikers:
  - netcore-2.0
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  - xamarinandroid-7.1
  - xamarinios-10.8
  - xamarinmac-3.0
  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Security.Permissions/KeyContainerPermission.xml
  ms.technology:
  - dotnet-standard
  author: mairaw
  ms.author: mairaw
  manager: wpickett
- uid: System.Security.Permissions.KeyContainerPermission.IsUnrestricted
  commentId: M:System.Security.Permissions.KeyContainerPermission.IsUnrestricted
  id: IsUnrestricted
  parent: System.Security.Permissions.KeyContainerPermission
  langs:
  - csharp
  name: IsUnrestricted()
  nameWithType: KeyContainerPermission.IsUnrestricted()
  fullName: KeyContainerPermission.IsUnrestricted()
  type: Method
  assemblies:
  - mscorlib
  - System.Security.Permissions
  namespace: System.Security.Permissions
  summary: Determines whether the current permission is unrestricted.
  remarks: An unrestricted permission represents access to all resources protected by the permission.
  syntax:
    content: public bool IsUnrestricted ();
    parameters: []
    return:
      type: System.Boolean
      description: '`true` if the current permission is unrestricted; otherwise, `false`.'
  overload: System.Security.Permissions.KeyContainerPermission.IsUnrestricted*
  exceptions: []
  version:
  - netcore-2.0
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  - xamarinandroid-7.1
  - xamarinios-10.8
  - xamarinmac-3.0
  monikers:
  - netcore-2.0
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  - xamarinandroid-7.1
  - xamarinios-10.8
  - xamarinmac-3.0
  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Security.Permissions/KeyContainerPermission.xml
  ms.technology:
  - dotnet-standard
  author: mairaw
  ms.author: mairaw
  manager: wpickett
- uid: System.Security.Permissions.KeyContainerPermission.ToXml
  commentId: M:System.Security.Permissions.KeyContainerPermission.ToXml
  id: ToXml
  parent: System.Security.Permissions.KeyContainerPermission
  langs:
  - csharp
  name: ToXml()
  nameWithType: KeyContainerPermission.ToXml()
  fullName: KeyContainerPermission.ToXml()
  type: Method
  assemblies:
  - mscorlib
  - System.Security.Permissions
  namespace: System.Security.Permissions
  summary: Creates an XML encoding of the permission and its current state.
  remarks: Use the <xref:System.Security.Permissions.KeyContainerPermission.FromXml%2A> method to restore the state information from a <xref:System.Security.SecurityElement>.
  syntax:
    content: public override System.Security.SecurityElement ToXml ();
    parameters: []
    return:
      type: System.Security.SecurityElement
      description: A <xref href="System.Security.SecurityElement"></xref> that contains an XML encoding of the permission, including state information.
  overload: System.Security.Permissions.KeyContainerPermission.ToXml*
  exceptions: []
  version:
  - netcore-2.0
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  - xamarinandroid-7.1
  - xamarinios-10.8
  - xamarinmac-3.0
  monikers:
  - netcore-2.0
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  - xamarinandroid-7.1
  - xamarinios-10.8
  - xamarinmac-3.0
  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Security.Permissions/KeyContainerPermission.xml
  ms.technology:
  - dotnet-standard
  author: mairaw
  ms.author: mairaw
  manager: wpickett
- uid: System.Security.Permissions.KeyContainerPermission.Union(System.Security.IPermission)
  commentId: M:System.Security.Permissions.KeyContainerPermission.Union(System.Security.IPermission)
  id: Union(System.Security.IPermission)
  parent: System.Security.Permissions.KeyContainerPermission
  langs:
  - csharp
  name: Union(IPermission)
  nameWithType: KeyContainerPermission.Union(IPermission)
  fullName: KeyContainerPermission.Union(IPermission)
  type: Method
  assemblies:
  - mscorlib
  - System.Security.Permissions
  namespace: System.Security.Permissions
  summary: Creates a permission that is the union of the current permission and the specified permission.
  remarks: The result of a call to <xref:System.Security.Permissions.KeyContainerPermission.Union%2A> is a permission that represents all operations represented by both the current permission and the specified permission. Any demand that passes either permission passes their union.
  syntax:
    content: public override System.Security.IPermission Union (System.Security.IPermission target);
    parameters:
    - id: target
      type: System.Security.IPermission
      description: A permission to combine with the current permission. It must be of the same type as the current permission.
    return:
      type: System.Security.IPermission
      description: A new permission that represents the union of the current permission and the specified permission.
  overload: System.Security.Permissions.KeyContainerPermission.Union*
  exceptions:
  - type: System.ArgumentException
    commentId: T:System.ArgumentException
    description: <code>target</code> is not `null` and does not specify a permission of the same type as the current permission.
  version:
  - netcore-2.0
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  - xamarinandroid-7.1
  - xamarinios-10.8
  - xamarinmac-3.0
  monikers:
  - netcore-2.0
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  - xamarinandroid-7.1
  - xamarinios-10.8
  - xamarinmac-3.0
  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Security.Permissions/KeyContainerPermission.xml
  ms.technology:
  - dotnet-standard
  author: mairaw
  ms.author: mairaw
  manager: wpickett
references:
- uid: System.Security.CodeAccessPermission
  parent: System.Security
  isExternal: false
  name: CodeAccessPermission
  nameWithType: CodeAccessPermission
  fullName: System.Security.CodeAccessPermission
- uid: System.ArgumentException
  parent: System
  isExternal: false
  name: ArgumentException
  nameWithType: ArgumentException
  fullName: System.ArgumentException
- uid: System.ArgumentNullException
  parent: System
  isExternal: false
  name: ArgumentNullException
  nameWithType: ArgumentNullException
  fullName: System.ArgumentNullException
- uid: System.Security.Permissions.KeyContainerPermission.#ctor(System.Security.Permissions.KeyContainerPermissionFlags)
  parent: System.Security.Permissions.KeyContainerPermission
  isExternal: false
  name: KeyContainerPermission(KeyContainerPermissionFlags)
  nameWithType: KeyContainerPermission.KeyContainerPermission(KeyContainerPermissionFlags)
  fullName: KeyContainerPermission.KeyContainerPermission(KeyContainerPermissionFlags)
- uid: System.Security.Permissions.KeyContainerPermissionFlags
  parent: System.Security.Permissions
  isExternal: false
  name: KeyContainerPermissionFlags
  nameWithType: KeyContainerPermissionFlags
  fullName: System.Security.Permissions.KeyContainerPermissionFlags
- uid: System.Security.Permissions.KeyContainerPermission.#ctor(System.Security.Permissions.PermissionState)
  parent: System.Security.Permissions.KeyContainerPermission
  isExternal: false
  name: KeyContainerPermission(PermissionState)
  nameWithType: KeyContainerPermission.KeyContainerPermission(PermissionState)
  fullName: KeyContainerPermission.KeyContainerPermission(PermissionState)
- uid: System.Security.Permissions.PermissionState
  parent: System.Security.Permissions
  isExternal: false
  name: PermissionState
  nameWithType: PermissionState
  fullName: System.Security.Permissions.PermissionState
- uid: System.Security.Permissions.KeyContainerPermission.#ctor(System.Security.Permissions.KeyContainerPermissionFlags,System.Security.Permissions.KeyContainerPermissionAccessEntry[])
  parent: System.Security.Permissions.KeyContainerPermission
  isExternal: false
  name: KeyContainerPermission(KeyContainerPermissionFlags, KeyContainerPermissionAccessEntry[])
  nameWithType: KeyContainerPermission.KeyContainerPermission(KeyContainerPermissionFlags, KeyContainerPermissionAccessEntry[])
  fullName: KeyContainerPermission.KeyContainerPermission(KeyContainerPermissionFlags, KeyContainerPermissionAccessEntry[])
- uid: System.Security.Permissions.KeyContainerPermissionAccessEntry
  name: KeyContainerPermissionAccessEntry
  nameWithType: KeyContainerPermissionAccessEntry
  fullName: System.Security.Permissions.KeyContainerPermissionAccessEntry
- uid: System.Security.Permissions.KeyContainerPermissionAccessEntry[]
  parent: System.Security.Permissions
  isExternal: false
  name: KeyContainerPermissionAccessEntry[]
  nameWithType: KeyContainerPermissionAccessEntry[]
  fullName: System.Security.Permissions.KeyContainerPermissionAccessEntry[]
  spec.csharp:
  - uid: System.Security.Permissions.KeyContainerPermissionAccessEntry
    name: KeyContainerPermissionAccessEntry
    nameWithType: KeyContainerPermissionAccessEntry
    fullName: System.Security.Permissions.KeyContainerPermissionAccessEntry
  - name: '[]'
    nameWithType: '[]'
    fullName: '[]'
- uid: System.Security.Permissions.KeyContainerPermission.AccessEntries
  parent: System.Security.Permissions.KeyContainerPermission
  isExternal: false
  name: AccessEntries
  nameWithType: KeyContainerPermission.AccessEntries
  fullName: KeyContainerPermission.AccessEntries
- uid: System.Security.Permissions.KeyContainerPermissionAccessEntryCollection
  parent: System.Security.Permissions
  isExternal: false
  name: KeyContainerPermissionAccessEntryCollection
  nameWithType: KeyContainerPermissionAccessEntryCollection
  fullName: System.Security.Permissions.KeyContainerPermissionAccessEntryCollection
- uid: System.Security.Permissions.KeyContainerPermission.Copy
  parent: System.Security.Permissions.KeyContainerPermission
  isExternal: false
  name: Copy()
  nameWithType: KeyContainerPermission.Copy()
  fullName: KeyContainerPermission.Copy()
- uid: System.Security.IPermission
  parent: System.Security
  isExternal: false
  name: IPermission
  nameWithType: IPermission
  fullName: System.Security.IPermission
- uid: System.Security.Permissions.KeyContainerPermission.Flags
  parent: System.Security.Permissions.KeyContainerPermission
  isExternal: false
  name: Flags
  nameWithType: KeyContainerPermission.Flags
  fullName: KeyContainerPermission.Flags
- uid: System.Security.Permissions.KeyContainerPermission.FromXml(System.Security.SecurityElement)
  parent: System.Security.Permissions.KeyContainerPermission
  isExternal: false
  name: FromXml(SecurityElement)
  nameWithType: KeyContainerPermission.FromXml(SecurityElement)
  fullName: KeyContainerPermission.FromXml(SecurityElement)
- uid: System.Security.SecurityElement
  parent: System.Security
  isExternal: false
  name: SecurityElement
  nameWithType: SecurityElement
  fullName: System.Security.SecurityElement
- uid: System.Security.Permissions.KeyContainerPermission.Intersect(System.Security.IPermission)
  parent: System.Security.Permissions.KeyContainerPermission
  isExternal: false
  name: Intersect(IPermission)
  nameWithType: KeyContainerPermission.Intersect(IPermission)
  fullName: KeyContainerPermission.Intersect(IPermission)
- uid: System.Security.Permissions.KeyContainerPermission.IsSubsetOf(System.Security.IPermission)
  parent: System.Security.Permissions.KeyContainerPermission
  isExternal: false
  name: IsSubsetOf(IPermission)
  nameWithType: KeyContainerPermission.IsSubsetOf(IPermission)
  fullName: KeyContainerPermission.IsSubsetOf(IPermission)
- uid: System.Boolean
  parent: System
  isExternal: false
  name: Boolean
  nameWithType: Boolean
  fullName: System.Boolean
- uid: System.Security.Permissions.KeyContainerPermission.IsUnrestricted
  parent: System.Security.Permissions.KeyContainerPermission
  isExternal: false
  name: IsUnrestricted()
  nameWithType: KeyContainerPermission.IsUnrestricted()
  fullName: KeyContainerPermission.IsUnrestricted()
- uid: System.Security.Permissions.KeyContainerPermission.ToXml
  parent: System.Security.Permissions.KeyContainerPermission
  isExternal: false
  name: ToXml()
  nameWithType: KeyContainerPermission.ToXml()
  fullName: KeyContainerPermission.ToXml()
- uid: System.Security.Permissions.KeyContainerPermission.Union(System.Security.IPermission)
  parent: System.Security.Permissions.KeyContainerPermission
  isExternal: false
  name: Union(IPermission)
  nameWithType: KeyContainerPermission.Union(IPermission)
  fullName: KeyContainerPermission.Union(IPermission)
- uid: System.Security.Permissions.KeyContainerPermission.#ctor*
  parent: System.Security.Permissions.KeyContainerPermission
  isExternal: false
  name: KeyContainerPermission
  nameWithType: KeyContainerPermission.KeyContainerPermission
  fullName: KeyContainerPermission.KeyContainerPermission
  monikers:
  - netcore-2.0
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  - xamarinandroid-7.1
  - xamarinios-10.8
  - xamarinmac-3.0
  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Security.Permissions/KeyContainerPermission.xml
- uid: System.Security.Permissions.KeyContainerPermission.AccessEntries*
  parent: System.Security.Permissions.KeyContainerPermission
  isExternal: false
  name: AccessEntries
  nameWithType: KeyContainerPermission.AccessEntries
  fullName: KeyContainerPermission.AccessEntries
  monikers:
  - netcore-2.0
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  - xamarinandroid-7.1
  - xamarinios-10.8
  - xamarinmac-3.0
  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Security.Permissions/KeyContainerPermission.xml
- uid: System.Security.Permissions.KeyContainerPermission.Copy*
  parent: System.Security.Permissions.KeyContainerPermission
  isExternal: false
  name: Copy
  nameWithType: KeyContainerPermission.Copy
  fullName: KeyContainerPermission.Copy
  monikers:
  - netcore-2.0
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  - xamarinandroid-7.1
  - xamarinios-10.8
  - xamarinmac-3.0
  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Security.Permissions/KeyContainerPermission.xml
- uid: System.Security.Permissions.KeyContainerPermission.Flags*
  parent: System.Security.Permissions.KeyContainerPermission
  isExternal: false
  name: Flags
  nameWithType: KeyContainerPermission.Flags
  fullName: KeyContainerPermission.Flags
  monikers:
  - netcore-2.0
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  - xamarinandroid-7.1
  - xamarinios-10.8
  - xamarinmac-3.0
  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Security.Permissions/KeyContainerPermission.xml
- uid: System.Security.Permissions.KeyContainerPermission.FromXml*
  parent: System.Security.Permissions.KeyContainerPermission
  isExternal: false
  name: FromXml
  nameWithType: KeyContainerPermission.FromXml
  fullName: KeyContainerPermission.FromXml
  monikers:
  - netcore-2.0
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  - xamarinandroid-7.1
  - xamarinios-10.8
  - xamarinmac-3.0
  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Security.Permissions/KeyContainerPermission.xml
- uid: System.Security.Permissions.KeyContainerPermission.Intersect*
  parent: System.Security.Permissions.KeyContainerPermission
  isExternal: false
  name: Intersect
  nameWithType: KeyContainerPermission.Intersect
  fullName: KeyContainerPermission.Intersect
  monikers:
  - netcore-2.0
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  - xamarinandroid-7.1
  - xamarinios-10.8
  - xamarinmac-3.0
  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Security.Permissions/KeyContainerPermission.xml
- uid: System.Security.Permissions.KeyContainerPermission.IsSubsetOf*
  parent: System.Security.Permissions.KeyContainerPermission
  isExternal: false
  name: IsSubsetOf
  nameWithType: KeyContainerPermission.IsSubsetOf
  fullName: KeyContainerPermission.IsSubsetOf
  monikers:
  - netcore-2.0
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  - xamarinandroid-7.1
  - xamarinios-10.8
  - xamarinmac-3.0
  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Security.Permissions/KeyContainerPermission.xml
- uid: System.Security.Permissions.KeyContainerPermission.IsUnrestricted*
  parent: System.Security.Permissions.KeyContainerPermission
  isExternal: false
  name: IsUnrestricted
  nameWithType: KeyContainerPermission.IsUnrestricted
  fullName: KeyContainerPermission.IsUnrestricted
  monikers:
  - netcore-2.0
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  - xamarinandroid-7.1
  - xamarinios-10.8
  - xamarinmac-3.0
  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Security.Permissions/KeyContainerPermission.xml
- uid: System.Security.Permissions.KeyContainerPermission.ToXml*
  parent: System.Security.Permissions.KeyContainerPermission
  isExternal: false
  name: ToXml
  nameWithType: KeyContainerPermission.ToXml
  fullName: KeyContainerPermission.ToXml
  monikers:
  - netcore-2.0
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  - xamarinandroid-7.1
  - xamarinios-10.8
  - xamarinmac-3.0
  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Security.Permissions/KeyContainerPermission.xml
- uid: System.Security.Permissions.KeyContainerPermission.Union*
  parent: System.Security.Permissions.KeyContainerPermission
  isExternal: false
  name: Union
  nameWithType: KeyContainerPermission.Union
  fullName: KeyContainerPermission.Union
  monikers:
  - netcore-2.0
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  - xamarinandroid-7.1
  - xamarinios-10.8
  - xamarinmac-3.0
  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Security.Permissions/KeyContainerPermission.xml
- uid: System.Security.CodeAccessPermission.Equals(System.Object)
  parent: System.Security.CodeAccessPermission
  isExternal: false
  name: Equals(Object)
  nameWithType: CodeAccessPermission.Equals(Object)
  fullName: CodeAccessPermission.Equals(Object)
- uid: System.Object.Equals(System.Object,System.Object)
  parent: System.Object
  isExternal: false
  name: Equals(Object, Object)
  nameWithType: Object.Equals(Object, Object)
  fullName: Object.Equals(Object, Object)
- uid: System.Security.CodeAccessPermission.GetHashCode
  parent: System.Security.CodeAccessPermission
  isExternal: false
  name: GetHashCode()
  nameWithType: CodeAccessPermission.GetHashCode()
  fullName: CodeAccessPermission.GetHashCode()
- uid: System.Object.GetType
  parent: System.Object
  isExternal: false
  name: GetType()
  nameWithType: Object.GetType()
  fullName: Object.GetType()
- uid: System.Object.MemberwiseClone
  parent: System.Object
  isExternal: false
  name: MemberwiseClone()
  nameWithType: Object.MemberwiseClone()
  fullName: Object.MemberwiseClone()
- uid: System.Object.ReferenceEquals(System.Object,System.Object)
  parent: System.Object
  isExternal: false
  name: ReferenceEquals(Object, Object)
  nameWithType: Object.ReferenceEquals(Object, Object)
  fullName: Object.ReferenceEquals(Object, Object)
- uid: System.Security.CodeAccessPermission.ToString
  parent: System.Security.CodeAccessPermission
  isExternal: false
  name: ToString()
  nameWithType: CodeAccessPermission.ToString()
  fullName: CodeAccessPermission.ToString()
- uid: System.Security.CodeAccessPermission.Assert
  parent: System.Security.CodeAccessPermission
  isExternal: false
  name: Assert()
  nameWithType: CodeAccessPermission.Assert()
  fullName: CodeAccessPermission.Assert()
- uid: System.Security.CodeAccessPermission.Demand
  parent: System.Security.CodeAccessPermission
  isExternal: false
  name: Demand()
  nameWithType: CodeAccessPermission.Demand()
  fullName: CodeAccessPermission.Demand()
- uid: System.Security.CodeAccessPermission.Deny
  parent: System.Security.CodeAccessPermission
  isExternal: false
  name: Deny()
  nameWithType: CodeAccessPermission.Deny()
  fullName: CodeAccessPermission.Deny()
- uid: System.Security.CodeAccessPermission.PermitOnly
  parent: System.Security.CodeAccessPermission
  isExternal: false
  name: PermitOnly()
  nameWithType: CodeAccessPermission.PermitOnly()
  fullName: CodeAccessPermission.PermitOnly()
- uid: System.Security.CodeAccessPermission.RevertAll
  parent: System.Security.CodeAccessPermission
  isExternal: false
  name: RevertAll()
  nameWithType: CodeAccessPermission.RevertAll()
  fullName: CodeAccessPermission.RevertAll()
- uid: System.Security.CodeAccessPermission.RevertAssert
  parent: System.Security.CodeAccessPermission
  isExternal: false
  name: RevertAssert()
  nameWithType: CodeAccessPermission.RevertAssert()
  fullName: CodeAccessPermission.RevertAssert()
- uid: System.Security.CodeAccessPermission.RevertDeny
  parent: System.Security.CodeAccessPermission
  isExternal: false
  name: RevertDeny()
  nameWithType: CodeAccessPermission.RevertDeny()
  fullName: CodeAccessPermission.RevertDeny()
- uid: System.Security.CodeAccessPermission.RevertPermitOnly
  parent: System.Security.CodeAccessPermission
  isExternal: false
  name: RevertPermitOnly()
  nameWithType: CodeAccessPermission.RevertPermitOnly()
  fullName: CodeAccessPermission.RevertPermitOnly()
- uid: System.Security.CodeAccessPermission.System#Security#IPermission#Demand
  parent: System.Security.CodeAccessPermission
  isExternal: false
  name: IPermission.Demand()
  nameWithType: CodeAccessPermission.IPermission.Demand()
  fullName: CodeAccessPermission.IPermission.Demand()
- uid: System.Security.CodeAccessPermission.System#Security#IStackWalk#Assert
  parent: System.Security.CodeAccessPermission
  isExternal: false
  name: IStackWalk.Assert()
  nameWithType: CodeAccessPermission.IStackWalk.Assert()
  fullName: CodeAccessPermission.IStackWalk.Assert()
- uid: System.Security.CodeAccessPermission.System#Security#IStackWalk#Demand
  parent: System.Security.CodeAccessPermission
  isExternal: false
  name: IStackWalk.Demand()
  nameWithType: CodeAccessPermission.IStackWalk.Demand()
  fullName: CodeAccessPermission.IStackWalk.Demand()
- uid: System.Security.CodeAccessPermission.System#Security#IStackWalk#Deny
  parent: System.Security.CodeAccessPermission
  isExternal: false
  name: IStackWalk.Deny()
  nameWithType: CodeAccessPermission.IStackWalk.Deny()
  fullName: CodeAccessPermission.IStackWalk.Deny()
- uid: System.Security.CodeAccessPermission.System#Security#IStackWalk#PermitOnly
  parent: System.Security.CodeAccessPermission
  isExternal: false
  name: IStackWalk.PermitOnly()
  nameWithType: CodeAccessPermission.IStackWalk.PermitOnly()
  fullName: CodeAccessPermission.IStackWalk.PermitOnly()
- uid: System.Security.Permissions.IUnrestrictedPermission
  parent: System.Security.Permissions
  isExternal: false
  name: IUnrestrictedPermission
  nameWithType: IUnrestrictedPermission
  fullName: System.Security.Permissions.IUnrestrictedPermission
