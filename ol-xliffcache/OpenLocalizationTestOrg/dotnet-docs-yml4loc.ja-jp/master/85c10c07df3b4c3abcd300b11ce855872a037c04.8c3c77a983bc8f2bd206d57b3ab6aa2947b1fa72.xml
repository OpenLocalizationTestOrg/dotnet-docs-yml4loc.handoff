{"nodes":[{"content":"Controls what kind of dependent transaction to create.","nodes":[{"pos":[0,54],"content":"Controls what kind of dependent transaction to create.","nodes":[{"content":"Controls what kind of dependent transaction to create.","pos":[0,54]}]}],"pos":[596,651],"yaml":true},{"content":"A dependent transaction can be obtained using the <xref:System.Transactions.Transaction.DependentClone%2A> method, with the <xref:System.Transactions.DependentCloneOption> parameter controlling what kind of dependent transaction to create.  For more information on how this enumeration is used, see [Managing Concurrency with DependentTransaction](http://msdn.microsoft.com/en-us/bdad8468-2a90-4b81-8375-278067120cab).","nodes":[{"pos":[0,418],"content":"A dependent transaction can be obtained using the <xref:System.Transactions.Transaction.DependentClone%2A> method, with the <xref:System.Transactions.DependentCloneOption> parameter controlling what kind of dependent transaction to create.  For more information on how this enumeration is used, see [Managing Concurrency with DependentTransaction](http://msdn.microsoft.com/en-us/bdad8468-2a90-4b81-8375-278067120cab).","nodes":[{"content":"A dependent transaction can be obtained using the <ph id=\"ph1\">&lt;xref:System.Transactions.Transaction.DependentClone%2A&gt;</ph> method, with the <ph id=\"ph2\">&lt;xref:System.Transactions.DependentCloneOption&gt;</ph> parameter controlling what kind of dependent transaction to create.","pos":[0,239],"source":"A dependent transaction can be obtained using the <xref:System.Transactions.Transaction.DependentClone%2A> method, with the <xref:System.Transactions.DependentCloneOption> parameter controlling what kind of dependent transaction to create."},{"content":"For more information on how this enumeration is used, see <bpt id=\"p1\">[</bpt>Managing Concurrency with DependentTransaction<ept id=\"p1\">](http://msdn.microsoft.com/en-us/bdad8468-2a90-4b81-8375-278067120cab)</ept>.","pos":[241,418],"source":"  For more information on how this enumeration is used, see [Managing Concurrency with DependentTransaction](http://msdn.microsoft.com/en-us/bdad8468-2a90-4b81-8375-278067120cab)."}]}],"pos":[662,1081],"yaml":true,"extradata":"MT"},{"content":"The dependent transaction blocks the commit process of the transaction until the parent transaction times out, or <xref href=\"System.Transactions.DependentTransaction.Complete\"></xref> is called. In this case, additional work can be done on the transaction and new enlistments can be created.","nodes":[{"pos":[0,292],"content":"The dependent transaction blocks the commit process of the transaction until the parent transaction times out, or <xref href=\"System.Transactions.DependentTransaction.Complete\"></xref> is called. In this case, additional work can be done on the transaction and new enlistments can be created.","nodes":[{"content":"The dependent transaction blocks the commit process of the transaction until the parent transaction times out, or <ph id=\"ph1\">&lt;xref href=\"System.Transactions.DependentTransaction.Complete\"&gt;&lt;/xref&gt;</ph> is called.","pos":[0,195],"source":"The dependent transaction blocks the commit process of the transaction until the parent transaction times out, or <xref href=\"System.Transactions.DependentTransaction.Complete\"></xref> is called."},{"content":"In this case, additional work can be done on the transaction and new enlistments can be created.","pos":[196,292]}]}],"pos":[2774,3067],"yaml":true},{"content":"The dependent transaction automatically aborts the transaction if Commit is called on the parent transaction before <xref href=\"System.Transactions.DependentTransaction.Complete\"></xref> is called.","nodes":[{"pos":[0,197],"content":"The dependent transaction automatically aborts the transaction if Commit is called on the parent transaction before <ph id=\"ph1\">&lt;xref href=\"System.Transactions.DependentTransaction.Complete\"&gt;&lt;/xref&gt;</ph> is called.","source":"The dependent transaction automatically aborts the transaction if Commit is called on the parent transaction before <xref href=\"System.Transactions.DependentTransaction.Complete\"></xref> is called."}],"pos":[4392,4590],"yaml":true}],"content":"### YamlMime:ManagedReference\nitems:\n- uid: System.Transactions.DependentCloneOption\n  commentId: T:System.Transactions.DependentCloneOption\n  id: DependentCloneOption\n  children:\n  - System.Transactions.DependentCloneOption.BlockCommitUntilComplete\n  - System.Transactions.DependentCloneOption.RollbackIfNotComplete\n  langs:\n  - csharp\n  name: DependentCloneOption\n  nameWithType: DependentCloneOption\n  fullName: System.Transactions.DependentCloneOption\n  type: Enum\n  assemblies:\n  - System.Transactions\n  - netstandard\n  - System.Transactions.Local\n  namespace: System.Transactions\n  summary: Controls what kind of dependent transaction to create.\n  remarks: A dependent transaction can be obtained using the <xref:System.Transactions.Transaction.DependentClone%2A> method, with the <xref:System.Transactions.DependentCloneOption> parameter controlling what kind of dependent transaction to create.  For more information on how this enumeration is used, see [Managing Concurrency with DependentTransaction](http://msdn.microsoft.com/en-us/bdad8468-2a90-4b81-8375-278067120cab).\n  example:\n  - \"The following example shows you how to create a dependent transaction.  \\n  \\n [!code-csharp[Tx_DependentTx#1](~/samples/snippets/csharp/VS_Snippets_CFX/tx_dependenttx/cs/dependenttx.cs#1)]\\n [!code-vb[Tx_DependentTx#1](~/samples/snippets/visualbasic/VS_Snippets_CFX/tx_dependenttx/vb/dependenttx.vb#1)]\"\n  syntax:\n    content: public enum DependentCloneOption\n  inheritance:\n  - System.Object\n  - System.ValueType\n  - System.Enum\n  version:\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - netstandard-2.0\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  monikers:\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - netstandard-2.0\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Transactions/DependentCloneOption.xml\n  ms.technology:\n  - dotnet-standard\n  manager: ghogen\n- uid: System.Transactions.DependentCloneOption.BlockCommitUntilComplete\n  commentId: F:System.Transactions.DependentCloneOption.BlockCommitUntilComplete\n  id: BlockCommitUntilComplete\n  parent: System.Transactions.DependentCloneOption\n  langs:\n  - csharp\n  name: BlockCommitUntilComplete\n  nameWithType: DependentCloneOption.BlockCommitUntilComplete\n  fullName: DependentCloneOption.BlockCommitUntilComplete\n  type: Field\n  assemblies:\n  - System.Transactions\n  - netstandard\n  - System.Transactions.Local\n  namespace: System.Transactions\n  summary: The dependent transaction blocks the commit process of the transaction until the parent transaction times out, or <xref href=\"System.Transactions.DependentTransaction.Complete\"></xref> is called. In this case, additional work can be done on the transaction and new enlistments can be created.\n  syntax:\n    content: BlockCommitUntilComplete\n    return:\n      type: System.Transactions.DependentCloneOption\n      description: ''\n  exceptions: []\n  version:\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - netstandard-2.0\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  monikers:\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - netstandard-2.0\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Transactions/DependentCloneOption.xml\n- uid: System.Transactions.DependentCloneOption.RollbackIfNotComplete\n  commentId: F:System.Transactions.DependentCloneOption.RollbackIfNotComplete\n  id: RollbackIfNotComplete\n  parent: System.Transactions.DependentCloneOption\n  langs:\n  - csharp\n  name: RollbackIfNotComplete\n  nameWithType: DependentCloneOption.RollbackIfNotComplete\n  fullName: DependentCloneOption.RollbackIfNotComplete\n  type: Field\n  assemblies:\n  - System.Transactions\n  - netstandard\n  - System.Transactions.Local\n  namespace: System.Transactions\n  summary: The dependent transaction automatically aborts the transaction if Commit is called on the parent transaction before <xref href=\"System.Transactions.DependentTransaction.Complete\"></xref> is called.\n  syntax:\n    content: RollbackIfNotComplete\n    return:\n      type: System.Transactions.DependentCloneOption\n      description: ''\n  exceptions: []\n  version:\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - netstandard-2.0\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  monikers:\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - netstandard-2.0\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Transactions/DependentCloneOption.xml\nreferences:\n- uid: System.Enum\n  parent: System\n  isExternal: false\n  name: Enum\n  nameWithType: Enum\n  fullName: System.Enum\n- uid: System.Transactions.DependentCloneOption.BlockCommitUntilComplete\n  parent: System.Transactions.DependentCloneOption\n  isExternal: false\n  name: BlockCommitUntilComplete\n  nameWithType: DependentCloneOption.BlockCommitUntilComplete\n  fullName: DependentCloneOption.BlockCommitUntilComplete\n- uid: System.Transactions.DependentCloneOption\n  parent: System.Transactions\n  isExternal: false\n  name: DependentCloneOption\n  nameWithType: DependentCloneOption\n  fullName: System.Transactions.DependentCloneOption\n- uid: System.Transactions.DependentCloneOption.RollbackIfNotComplete\n  parent: System.Transactions.DependentCloneOption\n  isExternal: false\n  name: RollbackIfNotComplete\n  nameWithType: DependentCloneOption.RollbackIfNotComplete\n  fullName: DependentCloneOption.RollbackIfNotComplete\n"}